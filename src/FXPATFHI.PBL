.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   FXPATFHI                                                    *
.* Desc      :   Copy On Hold Invoice details form patfx1af to the new file  *
.*               patfhiaf(HF Hold Invoice file)                              *
.*****************************************************************************
.* Date      :   03/11/2021                                                  *
.* Author    :   Jeni Tan                                                    *
.* Function  :   This program will loop through the Health fund file and     *
.*               copy Reason for Hold, Reason for Hold free text and Hold    *
.*               Invoices From date to the New Health Fund On Hold file      *
.*               (patfhiaf)                                                  *
.* Mods      :                                                               *
.*        V11.01.00 03/21/2021  J.Tan    TASK 0880410                        *
.*                  Program created.                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       PATFX1FD/INC
          INC       PATFHIFD/INC
          INC       PATHSPFD/INC
.
FINDFILE  FILE      ASCII, FIXED=256
.
. LOCAL VARIABLE DEFINITION
. -------------------------
CMDLINE   DIM       120
IBCNMHOS  FORM      1
RECNUM    FORM      8             * new patfhiaf record count
DIM60     DIM       60
DEFPATH   DIM       60
NEWPATH   DIM       60
NEWFILE   DIM       60
.
PRGID     INIT      "FXPATFHI"
PRGNAM    INIT      "Fixit HF On Hold Invoices"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
.
          BRANCH    COPTION,MAIN1000       * proceed with fixit
          GOTO      MAIN9999
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN5000  CALL      CREA0000               * Create new file
          BRANCH    EXIT, MAIN0100
          CALL      PROC0000               * process
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patfx1af";
          OPEN      PATFX1A1,"patfx1af"
.
          OPEN      PATHSPA1,"pathspaf"
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS

INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run fixit                               *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Hold Invoices Fixit"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*      Loop through patfx1af and copy Hold invoices fields to               *
.*      patfhiaf                                                             *
.*****************************************************************************
PROC0000  MOVE      ZERO,RECNUM                 * initialise count
          CLOCK     TIME,CTIMEIS
          REP       " 0",CDATE
          DISPLAY   *P1:13,"Started: ",CDATE,SP1,CTIMEIS:
                    *P1:14,"Record : ";
.
          MOVE      SP70,KEY6
          CALL      RSPTFX11                     * position at start of file
PROC1000  CALL      RKPTFX11                     * read next record
          BRANCH    OVRCD,PROC9000               * end of file
.
          DISPLAY   *P10:14,*V2LON,RECNUM;
.
          MATCH     SP70,PTFXRHCD                * Reason for Hold (Cat rh)
          GOTO      PROC2000 IF NOT EQUAL
          MATCH     SP70,PTFXRHFT                * Reason for Hold Free Text
          GOTO      PROC2000 IF NOT EQUAL
          MATCH     SP70,PTFXHDAT                * Hold Invoices From date
          GOTO      PROC2000 IF NOT EQUAL
.
          GOTO      PROC1000                     * get next record
.
.         Write to Health Fund On hold file                         *
.
PROC2000  CALL      CLPATFHI
.
.         For Multi hospital, set up Hold invoice record for each hospital
.
          COMPARE   ONE,IBCNMHOS
          GOTO      PROC6000 IF NOT EQUAL        * Not multi hospital
.
          MOVE      SP70,KEY3
          CALL      RSPTHSP1
PROC4000  CALL      RKPTHSP1
          BRANCH    OVRCD,PROC1000
.
          MOVE      PTHSHOSP,PTFHHOSP            * Hospital id
.
PROC6000  MOVE      PTFXHFND,PTFHHFND            * Health fund
          MOVE      " 3",PTFHSYST                * Inpatient
          MOVE      PTFXHDAT,PTFHHDAT            * Hold Invoices From date
          MOVE      PTFXRHCD,PTFHHREA            * Reason for Hold (Cat rh)
          MOVE      PTFXRHFT,PTFHDESC            * Reason for Hold Free Text
          MOVE      "FXPATFHI  ",PTFHCUID        * created User Id
          CALL      IBACLOCK                     * get current date/time
          PACK      PTFHCDAT,CCC,CYY,CMM,CDD     * create date
          REP       " 0",PTFHCDAT
          MOVE      CTIMEIS,PTFHCTIM             * create time
          REP       " 0",PTFHCTIM
.
          PACK      KEY11,PTFHHOSP,PTFHHFND,PTFHSYST
          CALL      WRPTFHI1                   * write new patfhiaf record
.
          ADD       ONE,RECNUM                 * increment record count
          DISPLAY   *P20:14,PTFXHFND;
.
.         UNPACK    SP70,PTFXRHCD,PTFXRHFT,PTFXHDAT
.         CALL      UPPTFX11
.
          BRANCH    IBCNMHOS,PROC4000          * Next hospital
.
          GOTO      PROC1000                   * get next record
.
PROC9000  CLOCK     TIME,CTIMEIS
          REP       " 0",CDATE
          DISPLAY   *P1:15,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:18,*EL,"Fixit completed.  ";
          CALL      HITENTER
.
PROC9999  RETURN
+
.*****************************************************************************
.*                               CREA0000              Called by: MAIN0000   *
.*      Create new file (patfhiaf) HF Hold invoices                          *
.*****************************************************************************
CREA0000  PACK      NEWFILE,SP70
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "patfhiaf",NEWFILE
          APPEND    SP70,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATFHIA1,NEWFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CREA2000
.
.         File already exists
.
          KEYIN     *P1:9,*B,*EF,*V2LON,"HF On Hold Inv.(patfhiaf) already exists.":
                    *HOFF," Ok to remove Existing records (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,")? ",*V2LON,ANS
          REP       UPPLOW,ANS
          CMATCH    ANSY,ANS
          GOTO      CREA9000 IF NOT EQUAL
.
          CALL      DFHI0000          * delete records in patfhiaf
          MOVE      ZERO,EXIT
          GOTO      CREA9999
.
CREA2000  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " 255 UC1-3,4-9,10-11",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC10-11,1-3,4-9",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC4-9,1-3,10-11",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      PATFHIA1,"patfhiaf"
.
          MOVE      ZERO,EXIT
          GOTO      CREA9999
.
. we don't want to continue
.
CREA9000  MOVE      ONE,EXIT
.
CREA9999  RETURN
+
.********************************************************************
.                          DFHI0000                                 *
.   Delete records in patfhiaf                                      *
.********************************************************************
DFHI0000  PACK      KEY11,SP70
          CALL      RSPTFHI1
          CALL      RKPTFHI1
          BRANCH    OVRCD,DFHI9999
.
          PACK      KEY11,PTFHHOSP,PTFHHFND,PTFHSYST,SP70
          CALL      DEPTFHI1
          GOTO      DFHI0000
.
DFHI9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,NEWPATH
.
          KEYIN     *P1:10,*EL,"Keyin path for the New Health Fund ":
                    "On Hold Invoice file: ":
                    *P10:11,*EL,*DV,*RV,NEWPATH:
                    *P10:11,NEWPATH;
.
KDIR1000  ENDSET    NEWPATH
          APPEND    SP70,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP70,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:11,*EL,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP70
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR9000
.
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  CLEAR     CMDLINE
          APPEND    "ldat patfx1af",CMDLINE
          APPEND    ".dat > temp.txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'patex1--'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP70,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       CLPATFHI
.
          INC       PATFX1IO/INC
          INC       PATFHIIO/INC
          INC       PATHSPIO/INC
