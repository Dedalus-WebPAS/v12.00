.*****************************************************************************
.*        PATDISCH.PBL                                                       *
.* Mods:                                                                     *
.*****************************************************************************
.*       V12.00.03   04/08/2025  Zumin          TASK 0964707                 *
.*                   Update Discharge Date/Time error message in CHKBTR93    *
.*                   for all templates                                       *
.*       V12.00.02   01/07/2025  Davin          TASK 0954308                 *
.*                   Changed hl7 trigger to 52 for standby in CHKSTB00       *
.*       V12.00.01   26.05.2025  Bella Turco    TASK 0955096                 *
.*                   Alphanumeric changes                                    * 
.*       V11.05.02   09.04.2025  DA Sarkies     TASK 0954308                 *
.*                   Added switch for A02/A08 for standby patient on         * 
.*                   discharge                                               * 
.*       V11.05.01   26/11/2024  J.Tan          TASK 0946342                 *
.*                   Added CINVX000 to write to Pooling table with Type=018  *
.*       V11.03.01   18/08/2023  J.Tan          TASK 0935226                 *
.*                   Set PMMRARDT to discharged date instead of Current date *
.*       V11.01.03   30/07/2021  Jill Parkinson Task 0890901                 *
.*                   Added check in CHKDDS00 to allow multiple visits if     *
.*                   Category P ind4=D
.*       V11.01.02   27/07/2021  Jill Parkinson Task 0890901                 *
.*                   Added check in CHKDDS00 to allow multiple visits if     *
.*                   on leave with ind 3=A or M                              *
.*       V11.01.01   08/06/2021  Jill Parkinson Task 0900650                 *
.*                   Added writes to leave register                          *
.*       V11.00.01   22/04/2020  Ebon Clements    TSK 0850105                *
.*                   Clear PMCUTSTA and PMCUTLOC before write to pmscuraf    *
.*       V10.14.02   03/06/2019  Jill Parkinson Task 0873054                 *
.*                   Added update of last patatraf mh record on discharge    *
.*       V10.14.01   15/02/2019  Ebon Clements    TSK 0828972                *
.*                   Added set scanned medical record flag on discharge      *
.*                   scannedm                                                *
.*       V10.13.02   30/07/2018  Ken Bell         TSK 0865239                *
.*                   Update NZ error for Transfer Date/Time                  *
.*       V10.13.01   20/09/2018  Richa Phogat     TSK 0862951                *
.*                   Added condition not to update PLDDATE in UPADMN00 when  *
.*                   DDATE has a value less than PLDDATE                     *
.*       V10.12.03   17/07/2018  Ebon Clements    TSK 0849291                *
.*                   Changed death notification for NZ to check PTCNDRSN     *
.*                   and use discharge status - WRDS0000                     *
.*       V10.12.02   03/07/2018  Thanh T          TSK 0858385                *
.*                   Fixed issue with PTTRCASE of pattranf table is written  *
.*                   with incorrcet data when the patient is discharge       *
.*       V10.12.01   25/06/2018  Thanh T          TSK 0858385                *
.*                   Fixed issue with PTTRCASE of pattranf table is written  *
.*                   with incorrcet data when the patient is discharge       *
.*       V10.11.01   23/08/2017  Davin            TSK 0837617                *
.*                   Added new I13 message trigger for Update W/L (DGCLIUWL) *
.*       V10.09.02   28/02/2017  Don Nguyen       TSK 0808741                *
.*                   Modified MVEN0000 to call CHRS0000 (calculate hours)    *
.*       V10.09.01   18/01/2017  J.Tan            CAR 0808741                *
.*                   Mod to check for Mech.Ventilation hours                 *
.*       V10.07.01   16/02/2016  J.Tan            CAR 0310703                *
.*                   Mods Public Hosp checking for to be invoiced amount     *
.*       V10.06.03   01/06/2015  Jill Parkinson CAR 317467                   *
.*                   Moved DSCHRTOS from pmvxudf7 to pmvxudf8                *
.*       V10.06.02   27/04/2015  Jill Parkinson CAR 315241                   *
.*                   Added input functionality for PMVXUDF7                  *
.*       V10.06.01   16/04/2015  Peter Vela     CAR 312723                   *
.*                   Added PTDSCLGP                                          *
.*       V10.05.03   26/11/2014  Peter Vela     CAR 308906                   *
.*                   Check for eos in UPPBMD00                               *
.*       V10.05.02   25/11/2014  Peter Vela     CAR 308067                   *
.*                   Added input functionality for PTDSUYN1, PTDSUYN2,       *
.*                   PTDSUYN3                                                *
.*       V10.05.01   23/09/2014 Jill Parkinson CAR 305091                    *
.*                   Added check for blank ddate in UPPBMD00(unadmit uses it)*
.*       V10.04.02   04/06/2014  J.Tan          CAR 300791                   *
.*                   Removed checking PTCNDISI for updating patipenf         *
.*       V10.04.01   11/04/2014  J.Tan          CAR 291832                   *
.*                   Removed updating Invoice on hold                        *
.*       V10.03.15   25/07/2013  Jill Parkinson CAR 285046                   *
.*                   Added CHKDDS00 from PATWEB96 so its available for adms  *
.*       V10.03.14   01/07/2013  Davin            CAR 286607                 *
.*                   Move pmvxteam to pttrteam writing disch record(gtrns200)*
.*       V10.03.13   16/05/2013  Davin            CAR 279533                 *
.*                   Don't call dgclicac if no valid pattranf record found   *
.*                   (hl7trgid=10)                                           *
.*       V10.03.12   10/05/2013  J.Tan          CAR 284289                   *
.*                   Mods to Status of Invoice pending                       *
.*       V10.03.11   24/01/2013  Jill Parkinson CAR 279239                   *
.*                   Moved CHKSTB00 from PATWEB96                            *
.*                   Added re-read of original admission,tran,master records *
.*       V10.03.10   10/01/2013  Jill Parkinson CAR 276103                   *
.*                   Added read of last tran record in GTRNS000 so messages  *
.*                   have the correct ward/bed on update discharge           *
.*       V10.03.09   05/12/2012  Jill Parkinson CAR 268087                   *
.*                   Added check of WMBOOK to AADMNO in BOOK0000             *
.*       V10.03.08   02/11/2012 Jill Parkinson CAR 275279                    *
.*                   Added RDATRAN2 before write                             *
.*       V10.03.07   19/09/2012 J.Tan             CAR 267784                 *
.*                   Mods checking for TCINDC19 of claim code                *
.*       V10.03.06   06/09/2012 Patrick Adair     CAR 270065                 *
.*                   Populate Death Notification based on Cat DD and DY      *
.*       V10.03.05   28/06/2012 Steve Armstrong   CAR 267469                 *
.*                   Removed HL7 Trigger DGCLICDS (Trigger 2) and moved it   *
.*                   back into PATWEB96 (Trigger 16) so that the discharge   *
.*                   message is triggered after the admission file is        *
.*                   updated, setting ASTAT to 3.                            *
.*       V10.03.04   30/05/2012 Patrick Adair     CAR 257776                 *
.*                   Added PROC WARPRG00 from PATWEB89                       *
.*       V10.03.03   15/05/2012 J.Tan             CAR 255708                 *
.*                   Mods checking for Hold Invoices From Date               *
.*       V10.03.02   13/03/2012  Ebon Clements CAR 260555                    *
.*                   Write WL change audit for cancelled adm - BOOK0000      *
.*       V10.03.01   09/01/2012  J.Tan  CAR 257430                           *
.*                   Replaced RDPTHLFA1 with RDPTHLF1                        *
.*       25/11/2011  Saroeun Soeur  CAR 255802                               *
.*                   added DELVISIT                                          *
.*       18/11/2011  Jill Parkinson CAR 255739                               *
.*                   Added open and close of mrtpdsaf                        *
.*       15/11/2011  Jill Parkinson CAR 255019                               *
.*                   Added move of 1 to ptmas029                             *
.*       09/11/2011  Jill Parkinson CAR 254221                               *
.*                   Fixed update of PMSVX1 fields after rdmiss              *
.*       21/10/2011  Jill Parkinson CAR 251645                               *
.*                   Added DEADST00 from PATWEB96                            *
.*       19/10/2011  Steve Armstrong    CAR 252165                           *
.*                   Fixed setting of HL7TRGID & HL7INCLD now that this code *
.*                   is in an include instead of a web server.               *
.*       19/09/2011  Jill Parkinson     CAR 251365                           *
.*                   Added RDADSCH1 before WRDSCH1                           *
.*       12/07/2011  Jill Parkinson     CAR 242269                           *
.*                   Added PTDSDPMN                                          *
.*       25/06/2011  Steve Armstrong    CAR 240722                           *
.*                   Mods to cater for changes to PATLOCFD.                  *
.*                       - LSNAME & LGNAME extended to 40 chars.             *
.*                       - PTLCGNM2 added.                                   *
.*       22/06/2011  Steve Armstrong   CAR 240722                            *
.*                   Mods to cater for changes to PMSCURFD:                  *
.*                   - PMCUSURN & PMCUGNAM extended to 40 chars.             *
.*                   - PMCUGNM2 added.                                       *
.*****************************************************************************
.------------------------------------------------------------
. WRDS0000 - Write Discharge Record
. Returns:   EXIT  0 = Ok to continue
.                  1 = Error
.------------------------------------------------------------
.
WRDS0000  CALL      CLRDIS00                * Clear discharge file vars
.
          MOVE      AADMNO,KEY8
          IF        UPDATETY=1
            CALL      RDDSCH1
            BRANCH    OVRCD,WRDS9000
            MOVE      DDEST,SDDEST
          ENDIF
.
          MOVE      AURNO,DURNO
          MOVE      URNUMBER,PMPXURNO    *** HPS CODE
          MOVE      AADMNO,DADMNO
          MOVE      DELVISIT,PTDSUYN4
          MOVE      TRANDATE,DDATE
          MOVE      TRANTIME,DTIME
          MOVE      DSCHSTAT,DSTAT
          MOVE      DSCHDEST,DDEST
          MOVE      DSCHDIA1,DDIAG
          MOVE      DSCHDIA2,DDIAG2
          MOVE      DSCHUSR1,DUSD1
          MOVE      DSCHUSR2,DUSD2
          MOVE      DSCHUSR3,DUSD3
          MOVE      DSCHUSR4,DUSD4
          MOVE      DSCHUSR5,DUSD5
          MOVE      DSCHMBSC,DFMBS
          MOVE      DSCHDPMN,PTDSDPMN
          MOVE      DSCHUYN1,PTDSUYN1
          MOVE      DSCHUYN2,PTDSUYN2
          MOVE      DSCHUYN3,PTDSUYN3
.
          MOVE      DSCHSREF,PTDSSREF
          MOVE      DSCHCOM1,ACOMM1
          MOVE      DSCHCOM2,ACOMM2
          MOVE      DSCHCLGP,PTDSCLGP
.
          MATCH     SP70,DSCHDETY 
          GOTO      WRDS0060 IF NOT EQUAL   * ignore if cgi already populated
.
          IF        PTCNHDPS=1 & PTCNDRSM=1
            PACK      KEY5,ANSD,SP1,DSTAT,SP70   * Check Discharge Status
          ELSE
            PACK      KEY5,ANSD,ANSD,DDEST,SP70  * Check Discharge Destination
          ENDIF
WRDS0040  CALL      RDCODE1
          BRANCH    OVRCD,WRDS0060
.
          MATCH     ANSD,TCINDC1            * If not deceased continue
          GOTO      WRDS0060 IF NOT EQUAL
.           
          PACK      KEY5,ANSD,ANSY,SP70     * find first death notification
          CALL      RDSCODE1                * value on code table
WRDS0050  CALL      RDKCODE1
          BRANCH    OVRCD,WRDS0060          * if eof continue 
.
          MATCH     "DY",TCODE
          GOTO      WRDS0060 IF NOT EQUAL   * if no records exist continue 
.                                            
          MATCH     ANSA,TCINDC1
          GOTO      WRDS0050 IF NOT EQUAL    * loop if not notification code
.
          MOVE      ACODE,DSCHDETY          * if record found set the code
.
WRDS0060  MOVE      DSCHDETY,PMPXDETY
.                                                               * End Car 270065
          MOVE      DSCHIRAD,PMVXIRAD       * HPS Code Starts Here
          MOVE      DSCHCRAV,PMVXCRAV
          MOVE      DSCHRCCT,PMVXRCCT
          MOVE      DSCHMHLS,PMVXMHLS       * HPS Code Ends Here
          MATCH     Z70,DSCHRTOS
          IF        !@EQUAL
            MOVE      DSCHRTOS,PMVXUDF8
          ENDIF
.
          MATCH     Z70,DSCHPALC
          IF        !@EQUAL
            MOVE      DSCHPALC,PMVXPALC                                *I-53371
          ENDIF
          MATCH     Z70,DSCHPYSP
          IF        !@EQUAL
            MOVE      DSCHPYSP,PMVXPYSP                                *I-53371
          ENDIF
          MATCH     Z70,DSCHFINP
          IF        !@EQUAL
            MOVE      DSCHFINP,PMVXFINP                                *I-53371
          ENDIF
.
          MATCH     Z70,AGECARAS            * Store aged care assessment service
          IF        !@EQUAL
            STORE     AGECARAS,PTCNACAS,DUSD1,DUSD2,DUSD3,DUSD4,DUSD5:
                                        AUSR6,AUSR7
          ENDIF
.
          PROC      CALCDLOS               * Calculate Discharge Ward & LOS
.
          MOVE      AADMNO,KEY8
          IF        UPDATETY=1
            CALL       RDADSCH1
            BRANCH     OVRCD,WRDS9000
            MATCH      DSCHDEST,SDDEST
            IF         !@EQUAL
              PACK       HDPEQUIV,ONE,ONE,SP2
              CALL       WPEI0000
            ENDIF
            CALL       UPDSCH1
.
            PACK      KEY8,AADMNO,SP70
            CALL      RDPTRES1
            IF        OVRCD=1
              CALL      CPTRE100
            ENDIF
.
            CALL      PMIGTNID              * get national id for dgate write
            MOVE      NMPNUMB,PTNINMPI
            MOVE      ONE,HL7TRGID
            MOVE      "PATDISCH",HL7INCLD
            PROC      DGCLICDC              * change discharge details *C-90222
          ELSE
            CALL      RDADSCH1
            IF        OVRCD=1
              CALL      WRDSCH1
              CALL      CINVX000      * Write record type 018 to Pooling table
            ENDIF
.
.   --- write post discharge header
.
            MOVE      ADOCTA,MRPDDOCT
            MOVE      AADMNO,MRPDADMN
            MOVE      MRCNPDST,MRPDSTAT    * Default post discharge status
            OPEN      MRTPDSA1,"mrtpdsaf"
            MOVE      SP70,MRPDDATE
            MOVE      SP70,MRPDTIME
            MOVE      SP70,MRPDRMOR
            CALL      RAMRPDS1
            IF        OVRCD=1
              CALL      WRMRPDS1
            ENDIF
            CLOSE     MRTPDSA1
            CALL      CHKPND00              * Check for Invoice Pending Record
          ENDIF
.
          IF        CCCNSVHM=1
            OPEN      CCIEX7A1,"cciex7af"
            MOVE      ANST,CLEXSTAT
            MOVE      THREE,CLEXTYPE
            MOVE      AADMNO,CLEXVISN
            PACK      KEY11,CLEXSTAT,CLEXTYPE,CLEXVISN,SP10
            CALL      RDCLEX71
            IF        OVRCD = 1
.
. No record with status "T" has been written to cciexaf table, write one
.
              CALL      WRCLEX71
            ENDIF
            CLOSE    CCIEX7A1
          ENDIF
.
          PACK      KEY8,AADMNO
          CALL      RDAMISS1
          BRANCH    OVRCD,WRDS9000
          CALL      UPMISS1
.
          PACK      KEY8,AADMNO,SP70
          MOVE      AADMNO,PMVXVISN
          CALL      RAPMVX11
          BRANCH    OVRCD,WRDS9000
          MOVE      DSCHIRAD,PMVXIRAD       * HPS Code Starts Here
          MOVE      DSCHCRAV,PMVXCRAV
          MOVE      DSCHRCCT,PMVXRCCT
          MOVE      DSCHMHLS,PMVXMHLS       * HPS Code Ends Here
          MATCH     Z70,PMSVX079
          IF        !@EQUAL
            MOVE      PMSVX079,PMVXEMPL
          ENDIF
.
          MATCH     Z70,DSCHPALC
          IF        !@EQUAL
            MOVE      DSCHPALC,PMVXPALC                                *I-53371
          ENDIF
          MATCH     Z70,DSCHPYSP
          IF        !@EQUAL
            MOVE      DSCHPYSP,PMVXPYSP                                *I-53371
          ENDIF
          MATCH     Z70,DSCHFINP
          IF        !@EQUAL
            MOVE      DSCHFINP,PMVXFINP                                *I-53371
          ENDIF
.
          MATCH     Z70,DSCHRTOS
          IF        !@EQUAL
            MOVE      DSCHRTOS,PMVXUDF8
          ENDIF
.
          CALL      UPPMVX11
.
          MATCH     "1",SCANNEDM            * Set scanned medical record flag
          IF        @EQUAL
            MOVE      SCANNEDM,PMPXSN17
          ENDIF
.
          PACK      KEY8,PMPXURNO,SP70
          CALL      RAPMPX21
          BRANCH    OVRCD,WRDS9000
          CALL      UPPMPX21
.
.------ update or write to Admission/Discharge Transfer Destination (PTDADFD)
.       file if system parameter PTCNUADT is on ------
.
          BRANCH    PTCNUADT,WRDS0100
          GOTO      WRDS0300
.
WRDS0100  MATCH     SP5,TRNSFSRC            * Transfer Source = spaces ?
          GOTO      WRDS0300 IF EQUAL       * yes
.
          MOVE      TRNSFSRC,PTDADCTS       * save Transfer Source
          PACK      KEY8,AADMNO
          CALL      RDPTDAD1               * read PTDADFD record
          BRANCH    OVRCD,WRDS0200         * record not found
          MOVE      TRNSFSRC,PTDADCTS       * set Transfer Source = saved temp
          CALL      UPPTDAD1               * update PTDADFD record
          GOTO      WRDS0300
.
WRDS0200  MOVE      SP5,PTDAADTS
          MOVE      TRNSFSRC,PTDADCTS
          CALL      WRPTDAD1               * write a PTDADFD record
.
.------ update the patdayaf files if appropriate ------
.
WRDS0300  CALL      PATDD000                * update the patdayaf files
.
          CALL      UPSTAD00
          BRANCH    EXIT,WRDS9100
.
          CALL      MVEN0000               * Check Mech.Ventilation hours
          CALL      MHATR000              * update mh attribute
          BRANCH    CAUDB,WRDS9000
          MOVE      ANSA,ACTION
          CALL      ACTBSAV0
          CALL      WRBAUD
.
WRDS9000  MOVE      ZERO,EXIT
          GOTO      WRDS9999
.
WRDS9100  MOVE      ONE,EXIT
.
WRDS9999  RETURN
+
.------------------------------------------------------------
.         Check Mental health attribute update of edward
.------------------------------------------------------------
MHATR000  READ      CONTROLF,HUND25;*93,PTCNNSSI
          MATCH     SP70,PTCNNSSI        * no edward source system
          GOTO      MHATR999 IF EQUAL
.
          MATCH     ZERO20,PTCNNSSI        * no edward source system
          GOTO      MHATR999 IF EQUAL
.
          OPEN      PATATRA3,"patatraf"
.
. ** update end date of the previous record to the start date of this record **
          PACK      KEY35,AURNO,AADMNO,ZERO,ONE,NINE,Z70
          CALL      RSPTATR3
          CALL      RPPTATR3
          BRANCH    OVRCD,MHATR999
.
          MATCH     AURNO,PTARURNO
          GOTO      MHATR999 IF NOT EQUAL
.
          MATCH     DAADMNO,PTARVISN
          GOTO      MHATR999 IF NOT EQUAL
.
          MATCH     "019",PTARTYPE
          GOTO      MHATR999 IF NOT EQUAL
.
          PACK      PTARFDTE,DDATE,SP70
          PACK      PTARFTME,DTIME,SP70
.
          CALL      IBACLOCK
          PACK      PTARUDTE,CCC,CYY,CMM,CDD
          REP       " 0",PTARUDTE
          CLOCK     TIME,PTARUTME
          MOVE      USERID,PTARUUSR
.
          CALL      UPPTATR3
.
MHATR999  RETURN
+
.------------------------------------------------------------
.         Check Mechanical Ventilation hours
.------------------------------------------------------------
MVEN0000  PACK      KEY27,DAADMNO,SP70
          CALL      RSPTVEN1
MVEN1000  CALL      RKPTVEN1
          BRANCH    OVRCD,MVEN9000
.
          MATCH     DAADMNO,PTVEVISN
          GOTO      MVEN9000 IF NOT EQUAL
.
          MATCH     SP70,PTVEEDAT           * End Date is blank?
          GOTO      MVEN1000 IF NOT EQUAL
.
          MATCH     SP70,PTVEETIM           * End Time is blank?
          GOTO      MVEN1000 IF NOT EQUAL
.
          MOVE      DDATE,PTVEEDAT          * Update with Disc.Date
          MOVE      DTIME,PTVEETIM          * Update with Disc.Time
.
          CALL      CHRS0000                * Calculate the hours
          CALL      UPPTVEN1                * Update record
.
MVEN9000  MOVE      ZERO,EXIT
MVEN9999  RETURN
+
.-----------------------------------------------------------
.         Calculate the hours
.-----------------------------------------------------------
CHRS0000  MOVE      ZERO,FORM5P2
          MATCH     SP70,PTVEEDAT
          GOTO      CHRS9000 IF EQUAL       * Blank End date
          MATCH     SP70,PTVEETIM
          GOTO      CHRS9000 IF EQUAL       * Blank End time
.
          UNPACK    PTVEETIM,CHOUR,ANS,CMIN * unpack the end time
          MOVE      CHOUR,FORM2             * set up hours as a form
          MOVE      FORM2,FORM5             * get in work variable
          MULT      "60",FORM5              * get the minutes of full hours
          MOVE      CMIN,FORM2              * set up minutes as a form
          ADD       FORM2,FORM5             * get the total min of end time
.
          UNPACK    PTVESTIM,CHOUR,ANS,CMIN * unpack the start time
          MOVE      CHOUR,FORM2             * set up hours as a form
          MOVE      FORM2,FORM5A            * get in work variable
          MULT      "60",FORM5A             * get the minutes of full hours
          MOVE      CMIN,FORM2              * set up minutes as a form
          ADD       FORM2,FORM5A            * get the total min of start time
.
          MOVE      FORM5,FORM5C
          SUB       FORM5A,FORM5C           * duration = min.end - min.start
.
          MOVE      ZERO,FORM5
          DAYSEP    PTVESDAT,PTVEEDAT,FORM5
          COMPARE   ZERO,FORM5
          GOTO      CHRS2000 IF EQUAL
.
.         The session has gone over midnight...
.
          MOVE      "1440",FORM7P2            * 1440 minutes in 24 hours
          MULT      FORM5,FORM7P2
          ADD       FORM5C,FORM7P2
          DIV       "60",FORM7P2
          MOVE      FORM7P2,FORM5P2
          GOTO      CHRS9000
.
CHRS2000  MOVE      FORM5C,FORM5P2
          DIV       "60",FORM5P2            * convert to hrs
.
CHRS9000  MOVE      FORM5P2,PTVEHOUR
CHRS9999  RETURN
+
.------------------------------------------------------------
. GTRNS000 - Generate Discharge Transfer Record
. Returns:   EXIT   0 = Ok to continue
.                   1 = Error
.------------------------------------------------------------
.
.        Get the last rate information from the transfer file, and
.        use this info to generate the "D" record in the transfer file
.
GTRNS000  BRANCH    UPDATETY,GTRNS900
.
          MOVE      ZERO,STDISC
          MOVE      ZERO,STALLW
          MOVE      ZERO,STRATEF
          MOVE      ZERO,SPTTRITF
          MOVE      ZERO,STRATEG
          MOVE      ZERO,STRATEH
          MOVE      ZERO,STEXTRA
          MOVE      ZERO,STRBEND
          MOVE      SP3,STRBTYP
.
          MOVE      ONE,PROGFLAG
          MOVE      ONE,MSGFLAG      * set no error message display
          CALL      CMXMATRX         * set up CMXFLAG
.
          PACK      KEY30,DADMNO,SP70
          CALL      RDSTRAN2
GTRNS100  CALL      RDKTRAN2
          BRANCH    OVRCD,GTRNS200
.
          MATCH     DADMNO,TADMN
          GOTO      GTRNS200 IF NOT EQUAL
.
          MOVE      TWARD,STWARD
          MOVE      TBED,STBED
          MOVE      TDEPT,STDEPT            * save department
          MOVE      PTTREPNO,STEPNO         * save episode number
          MOVE      TDISC,STDISC
          MOVE      TALLW,STALLW
          MOVE      TRATEF,STRATEF
          MOVE      PTTRITFS,SPTTRITF
          MOVE      TRATEG,STRATEG
          MOVE      TRATEH,STRATEH
          MOVE      PTTRADPT,SPTTRADP
          MOVE      PTTRADRB,SPTTRADR
          MOVE      TEXTRA,STEXTRA
          MOVE      TRBEND,STRBEND
          MOVE      PTTRAEND,SPTTRAEN
          MOVE      TRBTYP,STRBTYP
.
          PACK      SAVKEY30,TADMN,TDATE,TTIME,TWARD,TBED,SP70
.
          MATCH     SP70,PTMIPCMX
          GOTO      GTRNS160 IF EQUAL
.
          IF        PTTREPSD=1
            MOVE      ZERO,PTTREPSD      * reset manual stepdown
          ENDIF
.
          PACK      TRCDATE,CCC,CYY,CMM,CDD
          REP       " 0",TRCDATE
          CLOCK     TIME,TRCTIME
          MOVE      WBSEUID,PTTRUUID
.
          CALL      UPTRAN2
.
GTRNS160  MOVE      PTTREPSD,SPTTREPS
          GOTO      GTRNS100
.
GTRNS200  MOVE      SAVKEY30,KEY30
          UNPACK    SAVKEY30,DTADMN,TDATE,TTIME,TWARD,TBED
          MOVE      DTADMN,TADMN
          CALL      RDTRAN2
          BRANCH    OVRCD,GTRNS910
.
          UNPACK    DDATE,XCENT,XYEAR,XMON,XDAY
          PACK      TDATE,XCENT,XYEAR,XMON,XDAY
          REP       " 0",TDATE
.
          MOVE      ANSD,TMOVE
          MOVE      DURNO,TURNO
          MOVE      DADMNO,TADMN
          PACK      TTIME,DTIME,COLON,TWENTY
.
          MOVE      STWARD,TWARD
          MOVE      STBED,TBED
          MOVE      STDEPT,TDEPT            * restore department
          MOVE      STEPNO,PTTREPNO         * restore episode number
.
          MOVE      STRATEF,TRATEF
          MOVE      SPTTRITF,PTTRITFS
          MOVE      STRATEG,TRATEG
          MOVE      STRATEH,TRATEH
          MOVE      SPTTRADP,PTTRADPT
          MOVE      SPTTRADR,PTTRADRB
          MOVE      STEXTRA,TEXTRA
          MOVE      STDISC,TDISC
          MOVE      STALLW,TALLW
          MOVE      STRBEND,TRBEND
          MOVE      SPTTRAEN,PTTRAEND
          MOVE      STRBTYP,TRBTYP
          MOVE      SPTTREPS,PTTREPSD
          MOVE      PASSCODE,PTTROPER       * operator Id
.
          MOVE      ATYPE,TATYPE
          MOVE      ADOCTA,TADOCT
          MOVE      AUSR2,TCHSTAT
          MOVE      SP3,PTTRLTYP            * clear type of leave value
          MOVE      ZERO,PTTREPSD
          MOVE      ACLAIM,PTTRCLTY
          MOVE      PMVXTEAM,PTTRTEAM
.
          COMPARE   ONE,ONLEAVE             * discharging while on leave?
          IF        @EQUAL
            CALL      GRET0000              * Generate a return from leave rec.
            BRANCH    EXIT,GTRNS910
          ENDIF
.
          PACK      KEY30,TADMN,TDATE,TTIME,TWARD,TBED,SP70
          PACK      PTTRCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PTTRCDAT
          CLOCK     TIME,PTTRCTIM
          MOVE      WBSEUID,PTTRUCID
          UNPACK    SP70,TRCDATE,TRCTIME,PTTRUUID
.
          PACK      KEY30,TADMN,TDATE,TTIME,TWARD,TBED,SP70
          CALL      RDATRAN2
          IF        OVRCD=1
            CALL      WRTRAN2
          ELSE
            DISPLAY   "I*D transfer key GTRNS200 ",KEY30
          ENDIF
.
          PACK      KEY8,AADMNO,SP70
          CALL      RDPTRES1
          IF        OVRCD=1
            CALL      CPTRE100
          ENDIF
.
GTRNS900  MOVE      ZERO,EXIT
. *** read last tran record if updating discharge, DGCLICDS needs this info ***
          PACK      KEY30,AADMNO,Z70
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          IF        OVRCD=1
            CALL      CLPATTRN
          ELSE
            MATCH     DTADMN,DAADMNO
            IF        !@EQUAL
              CALL      CLPATTRN
            ENDIF
          ENDIF
          GOTO      GTRNS999
.
GTRNS910  MOVE      ONE,EXIT
.
GTRNS999  RETURN
+
.------------------------------------------------------------
.  Update Admission/Master/Number of days in hospital
.------------------------------------------------------------
.
UPADMN00  MOVE      AADMNO,KEY8
          CALL      RDMISS1
.
          MOVE      SP3,AWARD
          MOVE      SP3,ABED                   * Clear ward/bed
          MOVE      THREE,ASTAT                * Label patient has discharged
          CALL      UPMISS1
.
.         Update Last Day in Hosp Rec in Master File
.
          COMPARE   ONE,CTHETR
          IF        @EQUAL
            CALL      THET0000
          ELSE
            CALL      BOOK0000
          ENDIF
.
          MOVE      PCEASE,SAVPCEAS
          MOVE      PAUTOPY,SAVPAUTO
          MOVE      PDECDTE,SAVDECDT
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1
          MOVE      ONE,PHOSP
          MATCH     DDATE,PLDDATE
          GOTO      UPADMN10 IF NOT LESS
          UNPACK    DDATE,XCENT,XYEAR,XMON,XDAY
          PACK      PLDDATE,XCENT,XYEAR,XMON,XDAY
.
UPADMN10  MOVE      AURNO,KEY8
          CALL      RDPMPX21
          IF        OVRCD=1
            CALL      CLPMSPX2
          ENDIF
.
.         Calculate number of days last in hospital
.
          MOVE      ADATE,FROMDATE
          MOVE      DDATE,TODATE
          CALL      NHOSPDAY
          ADD       NBRDAYS,PLDAYS
.
          MOVE      SAVPCEAS,PCEASE
          MOVE      SAVPAUTO,PAUTOPY
          MOVE      SAVDECDT,PDECDTE
.
UPADMN99  RETURN
+
.------------------------------------------------------------
.   Remove patient from location table
.------------------------------------------------------------
.
RMPLT000  PACK      KEY88,PTMASNAM,PMPXFNAM,AADMNO
          CALL      DELOCA1
.
RMPLT999  RETURN
+
.------------------------------------------------------------
. Check Casemix / MHMS Adjust
.------------------------------------------------------------
.
.         Update MHMS adjustments file
.
CMIX0000  MOVE      DADMNO,PVIBILL
          MOVE      PVIBILL,KEY8
          CALL      RDVISA1             * Make sure visit file record is read.
.
          PACK      CMDRG,PTMIPCMX,SP20  * Default to use the provisional DRG
          MATCH     SP4,PTDSDDRG
          IF        !@EQUAL
            PACK      CMDRG,PTDSDDRG,SP20 * Use DRG Code form discharge file
          ENDIF
.
          MOVE      CMDRG,CMCODE
          CALL      CKCM0000            * Check if casemix funding patient ?
          IF        CMIXFLAG = 1
.
.           Change overnight/daycase rate for casemix if necessary
.
            MOVE      SP10,PTHFBCAT           * Initialise table type
            MATCH     SP6,AFUNDH
              IF        !@EQUAL
                PACK      KEY14,AFUNDH,AFNDTB
                CALL      RDFUND1                 * read health fund file
              ENDIF
.
                MATCH     DDATE,ADATE
                IF        @EQUAL
                  CALL      PATDYCAS           * charge casemix daycase rate
                ELSE
                  CALL      CMRT0000           * charge casemix overnight rate
                ENDIF
             GOTO      CMIX9999           * no automatic change for casemix
.
          ELSE
.
.            If this is now a day case, then change all rates to day case rates
.
            MATCH     ADATE,DDATE
            GOTO      CMIX9999 IF NOT EQUAL
.
            COMPARE   ONE,CDYCASE
            GOTO      CMIX9999 IF NOT EQUAL
.
            IF        CFEETYP = 0 | CFEETYP = 4 | CFEETYP=9 | CFEETYP=5
              CALL      PATDYCAS
            ENDIF
          ENDIF
.
CMIX9999  RETURN
+
.------------------------------------------------------------
. Update pmscuraf (Current patient search file)
.------------------------------------------------------------
.
DELPAT00  CALL      CALRAN00                     * Get date range
.
          MATCH     STRTDATE,DDATE               * Is the discharge date within
          GOTO      DELPAT90 IF LESS             * the date range
.
          MATCH     DDATE,LASTDATE
          GOTO      DELPAT90 IF LESS
.
          MOVE      AADMNO,PMCUVISN              * populate PMSCURFD variables
          MOVE      ADATE,PMCUDATE
          MOVE      PTMASNAM,PMCUSURN
          MOVE      PMPXFNAM,PMCUGNAM
          MOVE      PMPXSNAM,PMCUGNM2
          MOVE      PURNO,PMCUURNO
          MOVE      "3",PMCUSYST
          MOVE      SP70,PMCULOCN
          MOVE      SP70,PMCUOSIT
          MOVE      PMVXMHOS,PMCUHOSP
          MOVE      SP70,PMCUTSTA
          MOVE      SP70,PMCUTLOC
.
          PACK      KEY8,PMCUVISN,SP70           * If pmscuraf record does not
          CALL      RAPMCUR1                     * exist then write new one
          IF        OVRCD=1
            CALL      WRPMCUR1
          ENDIF
          GOTO      DELPAT99
.
DELPAT90  MOVE      AADMNO,PMCUVISN              * Discharge date is not in date
          PACK      KEY8,PMCUVISN,SP70           * range therefore delete
          CALL      DEPMCUR1                     * pmscuraf record
.
DELPAT99  RETURN
+
.-------------------------------------------------------------------------
.UPPBMD00 - Update Bed Management file on discharge
.-------------------------------------------------------------------------
UPPBMD00  PACK      KEY30,ADMISSNO,SP70
          CALL      RSPTBMD2
UPPBMD10  CALL      RKPTBMD2
          BRANCH    OVRCD,UPPBMD99
.
          MATCH     ADMISSNO,PTBDADMN
          GOTO      UPPBMD99 IF NOT EQUAL
.
          MOVE      UPBMSTAT,PTBDSTAT
          MATCH     SP70,DDATE
          IF        @EQUAL | @EOS
            CALL      UPPTBMD2
            GOTO      UPPBMD10
          ENDIF
.
          MATCH     PTBDDATE,DDATE
          IF        @LESS
      PACK      KEY30,PTBDADMN,PTBDDATE,PTBDADTM,PTBDWARD,PTBDWBED,PTBDOPPE,SP70
            CALL      DEPTBMD2
            CALL      RDPTBMD2
          ELSE
            CALL      UPPTBMD2
          ENDIF
.
          GOTO      UPPBMD10
.
UPPBMD99  RETURN
+
.------------------------------------------------------------
. CLRDIS00 - Clear Discharge Details
.------------------------------------------------------------
.
CLRDIS00  PACK      DDATE,SP70
          PACK      DTIME,SP70
          PACK      DSTAT,SP70
          PACK      DDEST,SP70
.
          PACK      DDIAG,SP70
          PACK      DDIAG2,SP70
          PACK      DUSD1,SP70
          PACK      DUSD2,SP70
          PACK      DUSD3,SP70
          PACK      DUSD4,SP70
          PACK      DUSD5,SP70
          PACK      DFMBS,SP70
          PACK      PTDSDPMN,SP70
          PACK      PTDSDMDC,SP70
          PACK      PTDSDDRG,SP70
          PACK      DWLREASN,SP70
.
          PACK      PTDSSIDX,SP70
          PACK      PTDSVOGU,SP70
          PACK      PTDSOPER,SP70
          MOVE      ZERO,PTDSUYN1
          MOVE      ZERO,PTDSUYN2
          MOVE      ZERO,PTDSUYN3
          MOVE      ZERO,PTDSUYN4
          PACK      PTDSDWRD,SP70
          MOVE      ZERO,PTDSDLOS
          PACK      PTDSSREF,SP70
          PACK      PTDSPALD,SP70
          PACK      PTDSLSDN,SP70
          PACK      PTDSCLGP,SP70
.
CLRDIS99  RETURN
+
.******************************************************************************
.*  Clear patre1af variables                                                  *
.******************************************************************************
CPTRE100  PACK      DPKADMN,SP70
          PACK      PKNAME,SP70,SP10
          PACK      PKADD1,SP70
          PACK      PKADD2,SP70
          PACK      PKSUBR,SP70
          PACK      PKADD4,SP70
          PACK      PKPOST,SP70
          PACK      PKTELEP,SP70
          PACK      PKTELEB,SP70
          PACK      PKRELP,SP70
          PACK      PTREMOBL,SP70
          PACK      PTRESNAM,SP70
.
PTREGNAM
.
CPTRE199  RETURN
+
.------------------------------------------------------------
. GRET0000   : Generate a return from leave record
. Called by  :
. Parameters : Transfer record set up for Discharge
. From IBAPAT34
. Returns:    EXIT  0 = Ok to continue
.                   1 = Error
.------------------------------------------------------------
.
.         Save discharge record transfer details
.
GRET0000  MOVE      TMOVE,SAVTMOVE           * save variables
          MOVE      TTIME,SAVTTIME
          MOVE      TDATE,SAVTDATE
.
          CALL      TSET0000                 * set TTIME & TDATE for this record
          MOVE      "R",TMOVE                * set move type as a Return
          MOVE      PASSCODE,PTTROPER       * operator Id
          MOVE      ACLAIM,PTTRCLTY
          PACK      KEY30,TADMN,TDATE,TTIME,TWARD,TBED,SP70
          PACK      PTTRCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PTTRCDAT
          CLOCK     TIME,PTTRCTIM
          MOVE      WBSEUID,PTTRUCID
          UNPACK    SP70,TRCDATE,TRCTIME,PTTRUUID
.
          PACK      KEY30,TADMN,TDATE,TTIME,TWARD,TBED,SP70
          CALL      RDATRAN2
          IF        OVRCD=1
            CALL      WRTRAN2
          ELSE
            DISPLAY   "I*D transfer key GRET0000 ",KEY30
          ENDIF
.
          MOVE      AURNO,KEY8              * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,GRET9100
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,GRET9100
.
          CALL      PMIGTNID                * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      THREE,HL7TRGID
          MOVE      "PATDISCH",HL7INCLD
          PROC      DGCLICPR                * Datagate Return Patient  *I-90101
.
. ------- delete leave record from patonlvf
.
          PACK      KEY14,TWARD,TBED,TADMN,SP20
          CALL      DEONLV1
.
          CALL      ADDLV000  * add leave register if required
.
. ------- restore discharge record transfer details
.
          MOVE      SAVTMOVE,TMOVE          * restore variables
          MOVE      SAVTTIME,TTIME
          MOVE      SAVTDATE,TDATE
.
          MOVE      ZERO,EXIT
          GOTO      GRET9999
.
GRET9100  MOVE      ONE,EXIT
.
GRET9999  RETURN
+
.*******************************************************************************
. Add Leave register record if discharged on leave
.*******************************************************************************
ADDLV000  BRANCH    NOLEAVRG,ADDLV999   * exit if table not created
          PACK      KEY27,TADMN,Z70
          CALL      RSPMLRD1
ADDLV100  CALL      RPPMLRD1
          BRANCH    OVRCD,ADDLV999
.
          MATCH     DTADMN,PMLRVISN
          GOTO      ADDLV999 IF NOT EQUAL
.
          MATCH     ANSL,PMLRRECS
          GOTO      ADDLV200 IF EQUAL
.
          MATCH     ANSA,PMLRRECS
          GOTO      ADDLV999 IF NOT EQUAL
.
ADDLV200  MATCH     "1",PMLRACTV
          GOTO      ADDLV999 IF EQUAL
.
          MATCH     SP70,PMLRWEBD
          GOTO      ADDLV999 IF NOT EQUAL
.
          MOVE      PMLRCOUN,F3
          ADD       ONE,F3
          PACK      PMLRCOUN,F3
.
          MOVE      TADMN,PMLRVISN
          MOVE      ANSO,PMLRRECS
.
          MOVE      SP70,PMLREXRD
          MOVE      SP70,PMLREXRT
          MOVE      SP70,PMLRUDC1
          MOVE      SP70,PMLRUDC2
          MOVE      SP70,PMLRUDC3
          MOVE      SP70,PMLRUDC4
          MOVE      SP70,PMLRMEDG
          MOVE      SP70,PMLRBAGS
          MOVE      SP70,PMLRBALS
          MOVE      SP70,PMLRUDSS
          MOVE      SP70,PMLRUDY1
          MOVE      SP70,PMLRUDY2
          MOVE      SP70,PMLRUDY3
          MOVE      SP70,PMLRVAL1
          MOVE      SP70,PMLRVAL2
          MOVE      SP70,PMLRVAL3
          MOVE      SP70,PMLRTXT1
          MOVE      SP70,PMLRTXT2
          MOVE      SP70,PMLRTXT3
          MOVE      SP70,PMLRREMN
.
          CALL      IBACLOCK
          PACK      PMLRCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMLRCDAT
          CLOCK     TIME,PMLRCTIM
          MOVE      WBSEUID,PMLRWEBC
.
          PACK     KEY27,PMLRVISN,PMLRDATE,PMLRTIME,PMLRCOUN,SP70
          CALL     RAPMLRD1
          IF       OVRCD=1
            CALL     WRPMLRD1
          ENDIF
.
ADDLV999  RETURN
+
.------------------------------------------------------------
. TSET0000   : Set Transfer time to be one second before current time
. Called By  : GRET0000
. Parameters : SAVTTIME, SAVTDATE
. Returns    : TTIME   - one second previous
.              TDATE   - date value after time change
.              TCENTR1 - century value after time change
.------------------------------------------------------------
.
TSET0000  UNPACK    SAVTTIME,CHOUR,DIM1,CMIN:
                             DIM1,DSECONDS       * unpack time, ignore ":"
          MOVE      CHOUR,HOURS
          MOVE      CMIN,MINUTES
          MOVE      DSECONDS,SECONDS
          PACK      DIM6,HOURS,MINUTES,SECONDS   * repack
          REP       " 0",DIM6                    * no spaces
          MOVE      DIM6,FORM6                   * convert to form
.
          MATCH     "000000",DIM6                * handle midnight case
          IF        @EQUAL
            MOVE     "23",HOURS
            MOVE     "59",MINUTES
            MOVE     "59",SECONDS
            CALL    DSET0000                     * set date as previous
            GOTO    TSET9000
          ENDIF
.
          SUB       "1",FORM6                    * subtract 1 from date
          MOVE      FORM6,DIM6                   * convert to dim
          REP       " 0",DIM6                    * no spaces
          UNPACK    DIM6,CHOUR,CMIN,DSECONDS
          MOVE      CHOUR,HOURS                  * convert to forms
          MOVE      CMIN,MINUTES
          MOVE      DSECONDS,SECONDS
.
          COMPARE   "99",MINUTES                 * fix minutes
          IF        @EQUAL
            MOVE    "59",MINUTES
            MOVE    "59",SECONDS
            GOTO    TSET9000
          ENDIF
.
          COMPARE   "99",SECONDS                 * fix seconds
          IF        @EQUAL
            MOVE    "59",SECONDS
            GOTO    TSET9000
          ENDIF
.
TSET9000  PACK      TTIME,HOURS,COLON,MINUTES:
                          COLON,SECONDS          * pack up time
          REP       " 0",TTIME
.
TSET9999  RETURN
+
.------------------------------------------------------------
. DSET0000   : Set Transfer Date as one day before current value
. Called by  : TSET0000
. Parameters : SAVTDATE
. Returns    : TDATE   - one day previous
.------------------------------------------------------------
.
DSET0000  UNPACK    TDATE,CCENT,CYEAR,CMON,CDAY  * set up parameters
          MOVE      CCENT,CC
          MOVE      CDAY,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
.
          CALL      DMYCON                   * convert to Julian date
          SUB       ONE,JULDAY               * set to previous day
.
          MOVE      JULDAY,JWKDAY            * set up parameters
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON                   * convert to DDMMYYCC
.
          PACK      TDATE,CC,YY,MM,DD
          REP       " 0",TDATE
.
DSET9999  RETURN
+
.------------------------------------------------------------
. Subroutine from IBAPAT34.PBL to save all the before changes before
. writing to patbaud.
.------------------------------------------------------------
.
ACTBSAV0  MOVE      DURNO,SDURNO
          MOVE      DADMNO,SDADMNO
          MOVE      DDATE,SDDATE
          MOVE      DTIME,SDTIME
          MOVE      DSTAT,SDSTAT
.
          MOVE      DDEST,SDDEST
          MOVE      DDIAG,SDDIAG
          MOVE      DDIAG2,SDDIAG2
          MOVE      DUSD1,SDUSD1
          MOVE      DUSD2,SDUSD2
          MOVE      DUSD3,SDUSD3
          MOVE      DUSD4,SDUSD4
          MOVE      DUSD5,SDUSD5
          MOVE      DFMBS,SDFMBS
          MOVE      PTDSDMDC,SDMDC
          MOVE      PTDSDDRG,SDDRG
          MOVE      DWLREASN,SDWLREAS
          MOVE      PTDSSIDX,SPTDSSID
          MOVE      PTDSVOGU,SPTDSVOG
          MOVE      PTDSOPER,SPTDSOPE
          MOVE      PTDSUYN1,SPTDSUY1
          MOVE      PTDSUYN2,SPTDSUY2
          MOVE      PTDSUYN3,SPTDSUY3
          MOVE      PTDSUYN4,SPTDSUY4
          MOVE      PTDSDWRD,SPTDSDWR
          MOVE      PTDSDLOS,SPTDSDLO
          MOVE      DCEASE,SDCEASE
.
ACTBSAV9  RETURN
+
.------------------------------------------------------------
. UPSTAD00 - Admissons/Discharge Statistics file
. Returns:    EXIT  0 = Ok to continue
.                   1 = Error
.------------------------------------------------------------
.
.         Add one for new discharge info
.
UPSTAD00  COMPARE   ONE,PTCNSTAU         * return if using the new admission
          GOTO      UPSTAD90 IF EQUAL               and discharges stats report
.
          PACK      CPTDATE,DDATE
          REP       " 0",CPTDATE
          CALL      GPERD
          BRANCH    EXIT,UPSTAD91
.
          MOVE      DRGYR,SADYEAR
          MOVE      DRGNUM,FORM2
.
          MOVE      ANSD,ANS
          PACK      KEY8,SADYEAR,ANS,DDEST
.
          MATCH     DDEST,SP3
          CALL      TRYUNK00 IF EQUAL
          MOVE      "STA",PRXCODE
          CALL      GETSLK00
          CALL      RDSTAD1
          BRANCH    OVRCD,UPSTAD50
.
          MOVE      ONE,COUNT
          CALL      ADDSTAD
          CALL      RELSLK00
          GOTO      UPSTAD90
.
UPSTAD50  MOVE      ANSD,SADTYPE
          MOVE      DDEST,SADCODE
          MATCH     SP3,DDEST
          IF        @EQUAL
            MOVE      "UNK",SADCODE
          ENDIF
.
          CALL      NEWSTAD0
          CALL      RELSLK00
.
UPSTAD90  MOVE      ZERO,EXIT
          GOTO      UPSTAD99
.
UPSTAD91  UNPACK    CPTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          CLEAR     WEBTITLE
          APPEND    CPCDATE,WEBTITLE
          APPEND    " not in Period File.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPSTAD99
.
UPSTAD99  RETURN
+
.------------------------------------------------------------
.         Subroutine to add a new record to the Statistics file
.------------------------------------------------------------
.
NEWSTAD0  MOVE      ZERO,SADMTH1
          MOVE      ZERO,SADMTH2
          MOVE      ZERO,SADMTH3
          MOVE      ZERO,SADMTH4
          MOVE      ZERO,SADMTH5
          MOVE      ZERO,SADMTH6
          MOVE      ZERO,SADMTH7
          MOVE      ZERO,SADMTH8
          MOVE      ZERO,SADMTH9
          MOVE      ZERO,SADMTH10
          MOVE      ZERO,SADMTH11
          MOVE      ZERO,SADMTH12
          MOVE      ZERO,SADMTH13
          MOVE      ONE,FORM6
          STORE     FORM6,FORM2,SADMTH1,SADMTH2,SADMTH3,SADMTH4,SADMTH5,SADMTH6:
                                SADMTH7,SADMTH8,SADMTH9,SADMTH10,SADMTH11:
                                SADMTH12,SADMTH13
          CALL      WRSTAD1
.
NEWSTAD9  RETURN
+
.------------------------------------------------------------
. ADDSTAD
. Subroutine from IBAPAT34.PBL to update the appropriate variable in the file.
.------------------------------------------------------------
.
ADDSTAD   LOAD      FORM6,INDEX,SADMTH1,SADMTH2,SADMTH3,SADMTH4,SADMTH5,SADMTH6:
                                SADMTH7,SADMTH8,SADMTH9,SADMTH10,SADMTH11:
                                SADMTH12
          ADD       COUNT,FORM6
          STORE     FORM6,INDEX,SADMTH1,SADMTH2,SADMTH3,SADMTH4,SADMTH5,SADMTH6:
                                SADMTH7,SADMTH8,SADMTH9,SADMTH10,SADMTH11:
                                SADMTH12
          CALL      UPSTAD1
.
          RETURN
+
.------------------------------------------------------------
.         Subroutine to set the key when no Dest. code is given
.------------------------------------------------------------
.
TRYUNK00  MOVE      ANSD,ANS
          PACK      KEY8,SADYEAR,ANS,ANSU,ANSN,ANSK
.
TRYUNK99  RETURN
+
.------------------------------------------------------------
.                                PATDD000
.               Update the patdayaf files on discharge
.------------------------------------------------------------
.
PATDD000  COMPARE   ZERO,PTCNDAYF           * skip if not using patdayaf
          GOTO      PATDD999 IF EQUAL         file for statistics
.
          MATCH     SP8,PTCNNDAT            * Don't update patdayaf files if
          GOTO      PATDD999 IF EQUAL         the update has not been run
.                                             before
          MATCH     "00000000",PTCNNDAT
          GOTO      PATDD999 IF EQUAL
.
.------ Update the patdayaf files for a discharged patient ------
.
PATDD200  PACK      STRTDATE,DDATE
          REP       " 0",STRTDATE
.
          MATCH     ZERO8,STRTDATE
          GOTO      PATDD999 IF EQUAL
.
          MATCH     PTCNNDAT,STRTDATE    * don't process if discharge date is >
          GOTO      PATDD999 IF NOT LESS   or = date for next update
.
.------ we need to update from the day after the discharge date ------
.
          UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON              * convert to a julian date
.
          ADD       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      STRTDATE,CC,YY,MM,DD
          REP       " 0",STRTDATE
.
.------ we need to update up until the day before the next update ------
.
          UNPACK    PTCNNDAT,CCENT,CYEAR,CMON,CDAY
          CALL      SUBD0000            * subtract a day from PTCNNDAT
.
          PACK      ENDDATE,CC,YY,MM,DD
          REP       " 0",ENDDATE
.
          MATCH     STRTDATE,ENDDATE    * for the case when there is no
          GOTO      PATDD999 IF LESS      days between the discharge date and
.                                         the day for the next update
          MOVE      AADMNO,ADMISNO
          CALL      PATDAYDL            * delete records from patdayaf files
.
PATDD999  RETURN
+
.------------------------------------------------------------
.         Check Pending file
.------------------------------------------------------------
CHKPND00  COMPARE   ZERO,PTCNIPEN
          GOTO      CHKPND99 IF NOT EQUAL      * Not writing to Inv.Pending
.         COMPARE   ONE,PTCNDISI
.         GOTO      CHKPND99 IF NOT EQUAL
.
.         Allow Discharging or Changing Discharged date after invoiced.
.
          COMPARE   ZERO,AINVPRT
          GOTO      CHKPND20 IF EQUAL
.
.     Check if the patient has already been invoiced upto the discharged date
.
          MATCH     DDATE,ALACDTE
          GOTO      CHKPND20 IF LESS
.
          MOVE      AADMNO,KEY8
          CALL      DEIPEN1
          GOTO      CHKPND99
.
.         Check to be invoiced amount for Public Hospital using bed fees
.
CHKPND20  IF        CHOSTYP=1 & CFEETYP=0
            MOVE      TRANDATE,PENDSDAT             * as at date
            MOVE      FOUR,PTIPRSTA                 * Update Discharge
            CALL      CINVP000                      * Check for tobe invoiced
            GOTO      CHKPND99
          ENDIF
.
          PACK      KEY83,SP70,SP70
          PACK      KEY8,AADMNO,SP70
          CALL      RDIPEN1
          IF        OVRCD=0
            PACK      KEY83,PTIPRHLD,PTIPRDES,SP70   * save reason on hold inv.
          ENDIF
.
          MOVE      AADMNO,IPADMNO
          MOVE      THREE,IPSYSTM
          MOVE      SP70,IPSITE
.
          MOVE      SP70,PENDHOSP
          IF        IBCNMHOS=1
            MOVE      IPADMNO,KEY8
            CALL      RDPMVX11
            IF        OVRCD=0
              MOVE      PMVXMHOS,PENDHOSP         * Hospital ID
            ENDIF
          ENDIF
          MOVE      " 3",PENDSYST                 * Inpatient
.
          MOVE      FOUR,PTIPRSTA                 * Update Discharge
          MATCH     SDDATE,DDATE
          IF        !@EQUAL
            MOVE      THREE,PTIPRSTA      * Change of Discharge date
          ENDIF
.
          MOVE      TRANDATE,PENDSDAT             * as at date
          MOVE      ADATE,PENDADAT                * admission date
          MOVE      SP70,PENDDDAT
          IF        ASTAT=3
            CALL      RDDSCH1
            IF        OVRCD=0
              MOVE      DDATE,PENDDDAT            * discharged date
            ENDIF
          ENDIF
.
          MOVE      SP70,PTIPSVAR
          PACK      KEY8,IPADMNO,SP70
          CALL      RAIPEN1
          IF        OVRCD=1
            MOVE      AFUNDH,PENDFUND
            MOVE      ACLAIM,PENDCLAM
            CALL      IPRH0000
            CALL      WRIPEN1
          ELSE
            UNPACK    KEY83,PTIPRHLD,PTIPRDES      * restore reason on hold inv.
            CALL      UPIPEN1
          ENDIF
CHKPND99  RETURN
+
.------------------------------------------------------------
.         BOOKING set to DISCHARGE
.------------------------------------------------------------
.
BOOK0000  COMPARE   ONE,CBOOK
          GOTO      BOOK9999 IF NOT EQUAL
.
          MOVE      AADMNO,KEY8             * Booking System
          CALL      RDBKREC1
          BRANCH    OVRCD,BOOK9999
.
          COMPARE   TWO,BKRESTAT            * Cancelled booking?
          GOTO      BOOK9999 IF EQUAL
.
          LOAD      BKRESTAT,ASTAT,ONE,THREE,FOUR,THREE
          CALL      UPBKREC1
.
.         Waiting Lists WMSTAT SET TO 4 AS ADMITTED
.
          COMPARE   ONE,HBWAIT
          GOTO      BOOK9999 IF NOT EQUAL
.
          PACK      KEY19,BKREURNO,BKREPROC,BKRECNT
          CALL      RDTREA1
          BRANCH    OVRCD,BOOK9999
.
          MATCH     WMBOOK,AADMNO
          GOTO      BOOK9999 IF NOT EQUAL     * CAR 268087
.
          OPEN      WATTX1A1,"wattx1af"
          PACK      KEY19,WMURNO,WMCODE,WMCNT,SP70
          CALL      RDWTTX11
          IF        OVRCD=1
            CALL      CLWATTX1
          ENDIF
          CLOSE     WATTX1A1
.
          CALL      SAVHIS00
.
          IF        WMSTAT <= 6
            LOAD      WMSTAT,ASTAT,THREE,FOUR,FIVE,FOUR
            CALL      UPTREA1
            IF        WMSTAT=5
              MOVE      "20",WTWMBSCD
              CALL      UPTREA1
              MOVE      ONE,NBRFLAG
              CALL      WRTHIS00
            ENDIF
            IF        WMSTAT=3
              CALL      WRCHU000          * write wl change audit cancel adm  
            ENDIF
          ENDIF
.
          CALL      PMIGTNID              * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      FOUR,HL7TRGID
          MOVE      "PATDISCH",HL7INCLD
          PROC      DGCLIUWL              * HL7 - Update Waiting List Entry
.
BOOK9999  RETURN
+
.------------------------------------------------------------
.         CKCM0000 - to determine if it will be casemix funded
.------------------------------------------------------------
.
CKCM0000  MOVE      ZERO,CMIXFLAG
.
          PACK      KEY9,ACLAIM,AFUNDH
          CALL      GETCNEFF               * Get Contract Effective From
          BRANCH    EXIT,CKCM9999
.
          PACK      PTMIPCMX,CMCODE,SP70
          PACK      KEY18,ACLAIM,AFUNDH,CMCODE,SP70
          MOVE      ADATE,CEFFDATE
          LOAD      CEFFDATE,CNTRCEFR,ADATE,DDATE
          CALL      CDSC0000                * Check for 'Disc.Eff.Date From'
          CALL      VALCMXFN              * get the contract ID (CONTRCID)
          BRANCH    EXIT,CKCM9999
.
.         0=Patient Class ,1=Casemix, 2=Invalid casemix
.
          MOVE      ONE,CMIXFLAG
.
CKCM9999  RETURN
+
.------------------------------------------------------------
.         CMRT0000 - Check for casemix overnight rates
.         Check if the casemix Sameday patient is really day case
.------------------------------------------------------------
.
CMRT0000  MOVE      ZERO,LOWFLAG
          MOVE      ZERO,CMIXFLAG
          PACK      KEY30,DADMNO,SP20
          CALL      RDSTRAN2
CMRT1000  CALL      RDKTRAN2
          BRANCH    OVRCD,CMRT9999
.
          MATCH     DADMNO,TADMN
          GOTO      CMRT9999 IF NOT EQUAL
.
          MATCH     ANSA,TMOVE
          IF        @EQUAL
            MOVE      ADATE,FROMDATE
            MOVE      DDATE,TODATE
            CALL      NHOSPDAY           * Length of stay
            ADD       ONE,NBRDAYS
            CALL      VLUM0000
            IF        NBRDAYS<=PTHLCOFF
              MOVE      ONE,LOWFLAG      * Set to use low outliers
            ENDIF
            PACK      KEY30,DADMNO,SP20    * reposition
            CALL      RDSTRAN2
            CALL      RDKTRAN2
          ENDIF
.
          MOVE      ZERO,BDAYS
          MOVE      ADATE,FROMDATE
          MOVE      TDATE,TODATE
          MATCH     FROMDATE,TODATE           * same date ?
          GOTO      CMRT2000 IF EQUAL
.
.        We need to recalculate rates for casemix Same Day patient who stays
.        overnight
.
          PACK      SAVKEY30,TADMN,TDATE,TTIME,TWARD,TBED  * save current key
          CALL      NHOSPDAY            * get bed days
          MOVE      NBRDAYS,BDAYS
          ADD       ONE,BDAYS
          MOVE      SAVKEY30,KEY30
          CALL      RDTRAN2             * reposition
.
CMRT2000  MOVE      ZERO,ADMFLAG        * set No to admission flag
          MOVE      ONE,MSGFLAG         * no error messages
          MOVE      TRBTYP,SAVBTYP      * set bed type
          PROC      PATGNCMX
          BRANCH    NOFEE,CMRT1000
.
          CMATCH    ANSA,TMOVE
          GOTO      CMRT3000 IF NOT EQUAL * Not admission record
          MOVE      LUMPAT,PTTRLSPT
          MOVE      LUMHF,PTTRLSRB
.
CMRT3000  MOVE      DAYHF,TRATEH
          MOVE      DAYPAT,TRATEF
          MOVE      DAYEND,TRBEND
          MOVE      ADDHF,PTTRADRB
          MOVE      ADDPAT,PTTRADPT
          MOVE      ADDEND,PTTRAEND
          MOVE      ZERO,PTTREPSD
          PACK      TRCDATE,CCC,CYY,CMM,CDD
          REP       " 0",TRCDATE
          CLOCK     TIME,TRCTIME
          MOVE      WBSEUID,PTTRUUID
.
          CALL      UPTRAN2
          GOTO      CMRT1000
.
CMRT9999  RETURN
+
.------------------------------------------------------------
.         VLUM0000 - Overnight lumpsum
.------------------------------------------------------------
.
VLUM0000  MOVE      ZERO,NOFEE
          MOVE      ZERO,PTHLLREB
          MOVE      ZERO,PTHLLPAT
          MOVE      SP70,CASMXKEY
          OPEN      PATHLFA1,"pathlfaf"
          PACK      KEY27,CONTRCID,ACLAIM,AFUNDH,PTHFBCAT,CMDRG
          CALL      RDPTHLF1
          IF        OVRCD = 1
            PACK      KEY27,CONTRCID,ACLAIM,SP6,SP3,CMDRG
            CALL      RDPTHLF1
            IF        OVRCD = 1
              PACK      KEY27,CONTRCID,ZERO,SP2,SP6,SP3,CMDRG
              CALL      RDPTHLF1
              BRANCH    OVRCD,VLUM9000        * no lumpsum charges
            ENDIF
          ENDIF
          MOVE      KEY27,CASMXKEY
          GOTO      VLUM9999
.
VLUM9000  MOVE      ONE,NOFEE
.
VLUM9999  RETURN
+
.*****************************************************************************
.         If Contract Effective From is 'For Discharges From', Discharged date
.         is blank and TCINDC19=D, default Effective date to Current date
.*****************************************************************************
CDSC0000  MOVE      ZERO,EXIT
          COMPARE   TWO,CNTRCEFR
          GOTO      CDSC9999 IF NOT EQUAL      * Not 'For Discharges From'
.
          PACK      DDATE,DDATE,SP70
          MATCH     SP70,DDATE
          GOTO      CDSC9999 IF NOT EQUAL
.
          PACK      KEY5,CODECL,ACLAIM
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     "D",TCINDC19
            IF        @EQUAL
              PACK      CEFFDATE,CCC,CYY,CMM,CDD,SP70
              REP       " 0",CEFFDATE
              GOTO      CDSC9999
            ENDIF
          ENDIF
          MOVE      ONE,EXIT
CDSC9999  RETURN
+
.------------------------------------------------------------
. Update the control file with the transfer date if necessary
.------------------------------------------------------------
.
UPDCFR00  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,EIGHTY8;*148,CFRDTE
          MATCH     CFRDTE,TDATE
          GOTO      UPDCFR99 IF NOT LESS
          MOVE      TDATE,CFRDTE
          WRITAB    CONTROLF,EIGHTY8;*148,CFRDTE
.
UPDCFR99  RETURN
+
.------------------------------------------------------------
. WBMHMS00 - Update Ward Bed File / MHMS Adjustments
. Returns:    EXIT  0 = Ok to continue
.                   1 = Error
.------------------------------------------------------------
.
.         Subtract original data from the MHMS adjustment file
.
WBMHMS00  MOVE      AADMNO,PVIBILL
          MOVE      PVIBILL,KEY8
          CALL      RDVISA1             * Make sure the visit record is read in
.
          MOVE      AADMNO,DADMNO
          MOVE      AURNO,DURNO
          MOVE      ZEROVISN,STBYPAT    * Initialise adm. no. of standby patient
          MOVE      SP3,SBWARD          * Initialise standby ward
          MOVE      SP3,SBBED           * Initialise standby bed
.
          MATCH     SP3,AWARD
          GOTO      WBMHMS20 IF EQUAL
.
.         Clear bed that patient was in
.
          MATCH     SP3,ABED
          GOTO      WBMHMS10 IF EQUAL
.
          PACK      KEY6,AWARD,ABED
          CALL      RDWARD1
.
          MATCH     WADMNO,ZEROVISN
          IF        !@EQUAL
            MATCH     WADMNO,AADMNO         * Is it the same patient in the bed?
            GOTO      WBMHMS90 IF NOT EQUAL * no - don't update standby patient
          ENDIF
.
          MOVE      WSTBY,WADMNO            * Update Standy patient
          MOVE      ZEROVISN,WSTBY
          CALL      UPWARD1
          MOVE      WADMNO,STBYPAT      * Save adm. no. of new patient in bed
          MOVE      WWARD,SBWARD        * Save standby ward
          MOVE      WBED,SBBED          * Save standby bed
.
          GOTO      WBMHMS90
.
WBMHMS10  MOVE      APLUR,NBPLUR
          PACK      KEY13,AWARD,AADMNO,NBPLUR
          CALL      DENOBE1
.
          GOTO      WBMHMS90
.
.         Discharging a standby patient
.
WBMHMS20  MOVE      AADMNO,WSTBY
          PACK      KEY14,WSTBY,SP6
          CALL      RDSWARD4
          CALL      RDKWARD4
          BRANCH    OVRCD,WBMHMS30
.
          MATCH     AADMNO,WSTBY
          GOTO      WBMHMS30 IF NOT EQUAL
.
          PACK      KEY6,WWARD,WBED
          CALL      RDWARD1
          MOVE      ZEROVISN,WSTBY
          CALL      UPWARD1
.
WBMHMS90  MOVE      ZERO,EXIT
          GOTO      WBMHMS99
.
.         Cannot find standby record for this patient
.
WBMHMS30  MOVE      "Cannot Find Standby Details.  ",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
.
WBMHMS99  RETURN
+
.------------------------------------------------------------
. DEADST00  - Modified from KEYINDCH
. Check if either discharge status or discharge destination
. codes have a deceased indicator against them.  If not, clear
. the relevant PMI fields.
. Requires: DDEST - discharge destination code (Cat D)
.           DSTAT - discharge status code (Cat D)
.------------------------------------------------------------
.
DEADST00  MATCH     SP3,DSTAT                    * discharge status blank ?
          GOTO      DEADST50 IF EQUAL            * yes - ignore
.
          PACK      KEY5,ANSD,SP1,DSTAT
          CALL      RDCODE1                      * dis. status code on file ?
          BRANCH    OVRCD,DEADST50               * no
.
          MATCH     ANSD,TCINDC1                 * deceased indicator set ?
          GOTO      DEADST95 IF EQUAL            * yes
.
DEADST50  MATCH     SP3,DDEST                    * discharge dest. blank ?
          GOTO      DEADST99 IF EQUAL            * yes - ignore
.
          PACK      KEY5,ANSD,ANSD,DDEST
          CALL      RDCODE1                      * dis. dest. code on file ?
          BRANCH    OVRCD,DEADST99               * no
.
          MATCH     ANSD,TCINDC1                 * deceased indicator set ?
          GOTO      DEADST95 IF EQUAL            * yes
.
          GOTO      DEADST99
.
DEADST95  MOVE      ONE,PCEASE              * set as deceased
          MOVE      ONE,PTMAS029
          MOVE      DDATE,PDECDTE           * set deceased date
          MOVE      DSCHAUTP,PAUTOPY
          MATCH     "1",PTCNMORG
          IF        @EQUAL
            CALL      MORGMN00
          ENDIF
.
DEADST99  RETURN
+
.------------------------------------------------------------
. MORGMN00 - Write to Morgue Management Table
.------------------------------------------------------------
MORGMN00  OPEN      PMSMORA1,"pmsmoraf"
          MOVE      PURNO,PMMRURNO
          MOVE      ADMISSNO,PMMRADMN
          CALL      IBACLOCK
          PACK      PMMRARDT,CCC,CYY,CMM,CDD
          MATCH     SP70,DDATE
          IF        !@EQUAL
            MOVE      DDATE,PMMRARDT          * Use discharge date
          ENDIF
          REP       " 0",PMMRARDT
          PACK      PMMRARTM,CTIMEIS
          MOVE      SP70,PMMRLOCA
          MOVE      SP70,PMMRECBY
          MOVE      SP70,PMMRECDT
          MOVE      SP70,PMMRECTM
          MOVE      SP70,PMMRECCM
          MOVE      SP70,PMMRACBY
          MOVE      SP70,PMMRACDT
          MOVE      SP70,PMMRACTM
          MOVE      SP70,PMMRACCM
          MOVE      PMVXMHOS,PMMRHOSP
          PACK      PMMRSPAR,SP70,SP70
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RAPMMOR1
          IF        OVRCD=1
            CALL      WRPMMOR1
          ELSE
            CALL      UPPMMOR1
          ENDIF
.
MORGMN99  RETURN
.
.------------------------------------------------------------
. Check Last bed transfer record
. Returns:  EXIT   0 = Ok to continue
.                  1 = Error
.------------------------------------------------------------
.
CHKBTR00  MATCH     Z70,BEDTRKEY
          GOTO      CHKBTR99 IF EQUAL
.
          MATCH     SP70,BEDTRKEY
          GOTO      CHKBTR99 IF EQUAL
.
          MOVE      BEDTRKEY,KEY30
          CALL      RDTRAN2
          BRANCH    OVRCD,CHKBTR90
.
          PACK      KEY30,TADMN,Z70
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,CHKBTR91
.
.         Check that patient details have not altered
.
          PACK      TESTKEY,TADMN,TDATE,TTIME,TWARD,TBED
          MATCH     TESTKEY,BEDTRKEY
          GOTO      CHKBTR92 IF NOT EQUAL
.
          PACK      LASTTRNS,TDATE,TTIME    *Last transfer date and time
          PACK      THISTRNS,TRANDATE,TRANTIME
          MATCH     LASTTRNS,THISTRNS
          GOTO      CHKBTR93 IF LESS
          GOTO      CHKBTR93 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      CHKBTR99
.
CHKBTR90  MOVE      "INVALID BED TRANSFER KEY",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKBTR99
.
CHKBTR91  MOVE      "NO LAST BED TRANSFER KEY",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKBTR99
.
CHKBTR92  MOVE      "PATIENT HAS MOVED BED",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKBTR99
.
CHKBTR93  CLEAR     WEBTITLE
          APPEND    "Discharge/Transfer Date and Time must be",WEBTITLE
          APPEND    " greater than Last Transfer Date/Time",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKBTR99
.
CHKBTR99  RETURN
+
.------------------------------------------------------------
. Procedure to output a warning if program details exist and limit reached
.------------------------------------------------------------
          DEFPROC  WARPRG00
.
          INC      PMSUPGFD/INC
          INC      PATVISFD/INC
          INC      PMSVX1FD/INC
          INC      PATFN1FD/INC
.
IPVCOUNT  FORM      3
IPVCMAXI  FORM      3
IPVEXTRA  FORM      3
IPVCWARN  FORM      3
OPVCMAXI  FORM      3
OPVCWARN  FORM      3
OPVCOUNT  FORM      3
OPVEXTRA  FORM      3
PRGMWARN  DIM       120                                             * Car 257776
.
. Check U/R for a valid program with a matching admission type and claim code
. with a blank health fund and table type.
.
WWPG0000  PACK      SAVKEY8,AADMNO,SP70
          BRANCH    NOPROGRM,WWPG9999
.
          OPEN      PMSUPGA1,"pmsupgaf"
          OPEN      PATVISA2,"patvisaf"
          OPEN      PMSVX1A1,"pmsvx1af"
          OPEN      PATFN1A1,"patfn1af"

          MOVE      ZERO,IPVCMAXI         * Max IP Visits
          MOVE      ZERO,IPVCWARN         * IP Visit Count Warning
          MOVE      ZERO,IPVCOUNT         * IP Visit Count
          MOVE      ZERO,IPVEXTRA         * Extra Funding required in X Visits
          MOVE      ZERO,OPVCMAXI         * Max OP Visits
          MOVE      ZERO,OPVCWARN         * OP Visit Count Warning
          MOVE      ZERO,OPVCOUNT         * OP Visit Count
          MOVE      ZERO,OPVEXTRA         * Extra Funding required in X Visits
.
. Check U/R for a valid program with a matching admission type and claim code
. with a blank health fund and table type.
.
. Check for an open progam with no expiry date
.
          PACK      KEY31,AURNO,ATYPE,ACLAIM,SP70
          CALL      RDPMUPG1
          IF        OVRCD<>1
            GOTO      WWPG0035
          ENDIF
.
          PACK      KEY31,AURNO,ATYPE,ACLAIM,SP9:
                          ADATE,SP70
          CALL      RDPMUPG1
          IF        OVRCD<>1
            GOTO      WWPG0035
          ENDIF
WWPG0020  CALL      RKPMUPG1
          BRANCH    OVRCD,WWPG0025
.
          MATCH     AURNO,PMUGURNO
          GOTO      WWPG0025 IF NOT EQUAL
.
          MATCH     ATYPE,PMUGATYP
          GOTO      WWPG0025 IF NOT EQUAL
.
          MATCH     ACLAIM,PMUGCLAM
          GOTO      WWPG0025 IF NOT EQUAL
.
          MATCH     SP70,PMUGFUND
          GOTO      WWPG0025 IF NOT EQUAL
.
          MATCH     SP70,PMUGTABT
          GOTO      WWPG0025 IF NOT EQUAL
.
          GOTO      WWPG0035
.
WWPG0025  PACK      KEY14,AFUNDH,AFNDTB,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,WWPG0095
.
. Check U/R for a valid program with a matching admission type, health fund and
. table type with a blank claim code
.
. Check for an program with no expiry date
.
          PACK      KEY31,AURNO,ATYPE,SP3,HCODE,PTHFBCAT,SP70
          CALL      RDPMUPG1
          IF        OVRCD<>1
            GOTO      WWPG0035
          ENDIF
.
. Check for a program with an expiry date
.
          PACK      KEY31,AURNO,ATYPE,SP3,HCODE,PTHFBCAT:
                          ADATE,SP70
          CALL      RDPMUPG1
          IF        OVRCD<>1
            GOTO      WWPG0035
          ENDIF
          CALL      RKPMUPG1
          BRANCH    OVRCD,WWPG0095
.
          MATCH     AURNO,PMUGURNO
          GOTO      WWPG0095 IF NOT EQUAL
.
          MATCH     ATYPE,PMUGATYP
          GOTO      WWPG0095 IF NOT EQUAL
.
          MATCH     SP3,PMUGCLAM
          GOTO      WWPG0095 IF NOT EQUAL
.
          MATCH     HCODE,PMUGFUND
          GOTO      WWPG0095 IF NOT EQUAL
.
          MATCH     PTHFBCAT,PMUGTABT
          GOTO      WWPG0095 IF NOT EQUAL
.
WWPG0035  PACK      SAVKEY34,PMUGURNO,PMUGATYP,PMUGCLAM,PMUGFUND,PMUGTABT:
                          PMUGEDAT,SP70
.
          CALL      CINP0000              * Valid program so count IP visits
.
WWPG0095  MOVE      ZERO,EXIT
          PACK      KEY8,SAVKEY8,SP70
          CALL      RDMISS1
          GOTO      WWPG9999
.
.******************************************************************************
. Count number of IP visits for a valid program record
.******************************************************************************
CINP0000  MOVE      ZERO,IPVCMAXI           * Max IP Visits
          MOVE      PMUGMAXI,IPVCMAXI
.
          MOVE      ZERO,IPVCWARN           * IP Visit Count Warning
          MOVE      PMUGWARI,IPVCWARN
.
          MOVE      ZERO,IPVCOUNT           * IP Visit Count
          MOVE      PMUGMANI,IPVCOUNT       * Add manual IP visits to count
.
          MOVE      ZERO,IPVEXTRA           * Extra Funding required in X Visits
.
          PACK      KEY24,PURNO,PMUGSDAT,SP70
          CALL      RDSVISA2
CINP4000  CALL      RDKVISA2
          BRANCH    OVRCD,CINP5000
.
          MATCH     PURNO,PVIURNO
          GOTO      CINP5000 IF NOT EQUAL
.
          MATCH     SP70,PMUGEDAT
          IF        !@EQUAL
            MATCH     PVIDATE,PMUGEDAT
            GOTO      CINP5000 IF LESS
          ENDIF
.
          COMPARE   THREE,PVITYPE                * IP Visit
          GOTO      CINP4000 IF NOT EQUAL
.
          PACK      KEY8,PVIBILL
          CALL      RDPTMIS1
          BRANCH    OVRCD,CINP4000
.
          BRANCH    ASTAT,CINP4000,CINP4500,CINP4500,CINP4500,CINP4000
          GOTO      CINP4000
.
CINP4500  MATCH     PMUGATYP,ATYPE
          GOTO      CINP4000 IF NOT EQUAL
.
          MATCH     SP70,PMUGCLAM
          IF        !@EQUAL
            MATCH     PMUGCLAM,ACLAIM
            GOTO      CINP4000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,PMUGFUND
          IF        !@EQUAL
            MATCH     PMUGFUND,AFUNDH
            GOTO      CINP4000 IF NOT EQUAL
.
            PACK      KEY14,AFUNDH,AFNDTB,SP10
            CALL      RDFUND1
            BRANCH    OVRCD,CINP4000
.
            MATCH     PMUGTABT,PTHFBCAT
            GOTO      CINP4000 IF NOT EQUAL
          ENDIF
.
          ADD       ONE,IPVCOUNT            * Add to IP count
          GOTO      CINP4000
.
CINP5000  IF        IPVCOUNT >= IPVCMAXI
            PACK      PRGMWARN,SP70,SP70
            APPEND    "Patient's Program may be completed. ",PRGMWARN
            APPEND    "Please review and complete the ",PRGMWARN
            APPEND    "Program Maintenance.",PRGMWARN
            RESET     PRGMWARN
            ADD       ONE,WARCOUNT
            MOVE      PRGMWARN,WEBWARNG[WARCOUNT]
          ENDIF
.
          IF        IPVCWARN<>ZERO
            IF        (IPVCOUNT>=IPVCWARN) & (IPVCOUNT < IPVCMAXI)
              ASSIGN    (IPVCMAXI-IPVCOUNT),IPVEXTRA
              GOTO      CINP9100
            ENDIF
          ENDIF
.
          IF        IPVCMAXI<>ZERO
            IF        IPVCOUNT>=IPVCMAXI
              GOTO       CINP9200
            ENDIF
          ENDIF
          GOTO      CINP9999
.
CINP9100  CLEAR     WEBTITLE
          APPEND    "Extra Funding will be required in ",WEBTITLE
          APPEND    IPVEXTRA,WEBTITLE
          APPEND    " Visit(s)",WEBTITLE
          RESET     WEBTITLE
          ADD       ONE,WARCOUNT
          MOVE      WEBTITLE,WEBWARNG[WARCOUNT]
          GOTO      CINP9999
.
CINP9200  CLEAR     WEBTITLE
          MOVE      "Maximum Funding has been reached ",WEBTITLE
          ADD       ONE,WARCOUNT
          MOVE      WEBTITLE,WEBWARNG[WARCOUNT]
          GOTO      CINP9999
.
CINP9999  RETURN
.
          INC       PMSUPGIO/INC
          INC       PATVISIO/INC
          INC       PMSVX1IO/INC
          INC       PATFN1IO/INC
          INC       IBAOVRIO/INC
.
WWPG9999  ENDPROC
+
.------------------------------------------------------------
. Check for Standby Patient
. Returns:   EXIT    0 = Ok to continue
.                    1 = Error
.------------------------------------------------------------
.
CHKSTB00  PACK      SAVKEY8,AADMNO,SP70
          MOVE      AADMNO,KEY8
          CALL      UUPTMIS1                 * release Admission record
.
          MOVE      AURNO,KEY8
          CALL      UUPTMAS1
.
.         Check if there was anyone on standby
.
          MATCH     ZEROVISN,STBYPAT
          GOTO      CHKSTB90 IF EQUAL
.
.         CHECK TO SEE IF FILE IN USE
.
CHKSTB10  MOVE      STBYPAT,AADMNO
          MOVE      AADMNO,KEY8
          CALL      RDPTMIS1
          COMPARE   ZERO,OVRCD
          GOTO      CHKSTB91 IF NOT EQUAL
.
CHKSTB20  MOVE      SBWARD,AWARD         * Put in saved ward
          MOVE      SBBED,ABED           * Put in saved bed
          CALL      UPMISS1
          CALL      UUPTMIS1
.
.         Reposition on the standby patient's last transfer record for this
.         admission and their PMI record before sending an A08 message
.
          PACK      KEY30,AADMNO,Z70
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,CHKSTB70
.
          MATCH     AADMNO,TADMN
          GOTO      CHKSTB70 IF NOT EQUAL
.
          MOVE      AURNO,KEY8              * get standby patient's PMI record
          CALL      RDMAST1
          IF        OVRCD = 0
            MOVE      AURNO,KEY8
            CALL      RDPMPX21
            IF        OVRCD=1
              CALL      CLPMSPX2
            ENDIF
            PACK      KEY8,AADMNO,SP70
            CALL      RDPTRES1              * get standby person responsible
            IF        OVRCD=1
              CALL      CPTRE100
            ENDIF
            CALL      PMIGTNID              * get national id for dgate write
            MOVE      NMPNUMB,PTNINMPI
            MOVE      FIFTY2,HL7TRGID       * Flag Standby Movement
            MOVE      "PATDISCH",HL7INCLD
.
            MATCH     "1",PTCNABTS
            IF        @EQUAL
              PROC      DGCLICTR            * broadcst chng admis details A02
            ELSE
              PROC      DGCLICAC            * broadcst chng admis details A08
            ENDIF
          ENDIF
.
CHKSTB70  MOVE      URNUMBER,SAVEURNO    * Populate U/R and admission cgi vars
          MOVE      ADMISSNO,SAVADMIS    * with the standby patient
          MOVE      AURNO,URNUMBER
          MOVE      AADMNO,ADMISSNO
.
          PROC      BBUP0000                * Bed Board
.
          MOVE      SAVEURNO,URNUMBER
          MOVE      SAVADMIS,ADMISSNO
.
CHKSTB90  MOVE      ZERO,EXIT
          GOTO      CHKSTB99
.
CHKSTB91  CLEAR     WEBTITLE
          APPEND    "Standby Admission ",WEBTITLE
          APPEND    AADMNO,WEBTITLE
          APPEND    " Busy on Terminal ",WEBTITLE
          APPEND    APORT,WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
.
CHKSTB99  PACK      KEY8,SAVKEY8,SP70
          CALL      RDMISS1
          PACK      KEY30,SAVKEY8,Z70
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          PACK      KEY8,AURNO,SP70
          CALL      RDMAST1
          MOVE      ZEROVISN,STBYPAT
.
          RETURN
+
.------------------------------------------------------------
. CHKDDS00 - Check discharge date and time are before the next
.            admission - supervisor
. Returns:  EXIT  0 = Ok to continue
.                 1 = Error
.------------------------------------------------------------
.
CHKDDS00  MOVE      ZERO,EXIT
          BRANCH    STATADMN,CHKDDS99
          BRANCH    STATDSCH,CHKDDS99
          PACK      SAVEADMN,AADMNO,SP70
          PACK      DIM8,ADATE,SP70
          PACK      DIM8A,ATIME,SP70
.
          MOVE      SP70,DIM3
          PACK      KEY8,AADMNO,SP8
          CALL      RDPMVX11
          IF        OVRCD=0
            MOVE      PMVXMHOS,DIM3
          ENDIF
.
          MOVE      ZERO,F1
          PACK      KEY24,AURNO,Z70
          CALL      RDSVISA2
CHKDDS10  CALL      RDPVISA2
          BRANCH    OVRCD,CHKDDS90
.
          MATCH     PVIURNO,AURNO                * Same U/R
          GOTO      CHKDDS90 IF NOT EQUAL
.
          COMPARE   THREE,PVITYPE
          GOTO      CHKDDS10 IF NOT EQUAL
.
          MATCH     DPVIBILL,SAVEADMN
          GOTO      CHKDDS10 IF EQUAL          * Same admission
.
          PACK      KEY8,PVIBILL
          CALL      RDMISS1
          BRANCH    OVRCD,CHKDDS10
          CALL      RDPMVX11
          BRANCH    OVRCD,CHKDDS10
          MATCH     DIM3,PMVXMHOS
          GOTO      CHKDDS10 IF NOT EQUAL        * Different hospital
.
          COMPARE   ONE,ASTAT                    * Ignore pre admissions
          GOTO      CHKDDS10 IF EQUAL
          COMPARE   FIVE,ASTAT                   * Ignore cancelled admissions
          GOTO      CHKDDS10 IF EQUAL
.
. allow overlap of visit if Cat P indicator 4=P
          MATCH     SP70,ACLSS
          IF        !@EQUAL
            PACK      KEY5,ANSP,SP1,ACLSS,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MATCH     ANSD,TCINDC4
              GOTO      CHKDDS10 IF EQUAL
            ENDIF
          ENDIF
.
          COMPARE   FOUR,ASTAT               * On leave - check type of leave
          GOTO      CHKDDS20 IF NOT EQUAL
.
          PACK      KEY30,PVIBILL,Z70
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,CHKDDS10
.
          MATCH     PVIBILL,TADMN
          GOTO      CHKDDS10 IF NOT EQUAL
.
          MATCH     ANSL,TMOVE
          IF        @EQUAL
            MATCH     SP70,PTTRLTYP
            IF        !@EQUAL
              PACK      KEY5,ANST,ANSL,PTTRLTYP,SP70
              CALL      RDCODE1
              IF        OVRCD<>1
                MATCH     ANSM,TCINDC3
                GOTO      CHKDDS10 IF EQUAL
.
                MATCH     ANSA,TCINDC3
                GOTO      CHKDDS10 IF EQUAL
              ENDIF
            ENDIF
          ENDIF
.
CHKDDS20  MATCH     DIM8,PVIDATE
          GOTO      CHKDDS80 IF LESS
.
          MATCH     DIM8,PVIDATE
          IF        @EQUAL
            MATCH     DIM8A,ATIME
            GOTO      CHKDDS80 IF LESS
          ENDIF
.
          MATCH     "00000000",ADATE
          GOTO      CHKDDS10 IF EQUAL            * Ignore Outstanding debts
.
          MATCH     TRANDATE,PVIDATE
          GOTO      CHKDDS91 IF LESS
.
          MATCH     PVIDATE,TRANDATE
          IF        @EQUAL
            MATCH     TRANTIME,ATIME
            GOTO      CHKDDS70 IF LESS
          ENDIF
          GOTO      CHKDDS10
.
CHKDDS70  COMPARE   THREE,ASTAT
          GOTO      CHKDDS91 IF NOT EQUAL
.
          PACK      KEY8,PVIBILL
          CALL      RDDSCH1
          BRANCH    OVRCD,CHKDDS91
.
          MATCH     DDATE,TRANDATE
          GOTO      CHKDDS10 IF LESS
.
          MATCH     TRANDATE,DDATE
          IF        @EQUAL
            MATCH     DTIME,TRANTIME
            GOTO      CHKDDS10 IF LESS
          ENDIF
          GOTO      CHKDDS91
.
.
CHKDDS80  MATCH     PVIDATE,TRANDATE
          GOTO      CHKDDS10 IF LESS
.
          MATCH     PVIDATE,TRANDATE
          IF        @EQUAL
            MATCH     ATIME,TRANTIME
            GOTO      CHKDDS10 IF LESS
          ENDIF
.
          MATCH     "00000000",ADATE
          GOTO      CHKDDS10 IF EQUAL            * Ignore Outstanding debts
.
          COMPARE   THREE,ASTAT
          GOTO      CHKDDS91 IF NOT EQUAL
.
          PACK      KEY8,PVIBILL
          CALL      RDDSCH1
          BRANCH    OVRCD,CHKDDS91
.
          MATCH     TRANDATE,DDATE
          GOTO      CHKDDS10 IF LESS
.
          MATCH     TRANDATE,DDATE
          IF        @EQUAL
            MATCH     TRANTIME,DTIME
            GOTO      CHKDDS10 IF LESS
          ENDIF
          GOTO      CHKDDS91
.
CHKDDS90  PACK      KEY8,SAVEADMN           * Read original admission and visit
          CALL      RDMISS1                 * details
          CALL      RDVISA1
          CALL      RDDSCH1
          CALL      RDPMVX11
.
          MOVE      ZERO,EXIT
          GOTO      CHKDDS99
.
CHKDDS91  CLEAR     WEBTITLE
          APPEND    "Discharged Date Overlaps Admission ",WEBTITLE
          APPEND    PVIBILL,WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
.
          PACK      KEY8,ADMISSNO           * Read original admission and visit
          CALL      RDMISS1                 * details
          CALL      RDVISA1
.
.
CHKDDS99  RETURN
+ 
.
