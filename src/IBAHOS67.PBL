. ***********************************************************
. *                                                         *
. *              P R O G R A M  S U M M A R Y               *
. *              -------------  -------------               *
. *                                                         *
. *     PROGRAM NAME:     IBAHOS67                          *
. *                                                         *
. *     FUNCTION:         ALLOC. CATCHMENT/LGA CODES ENQUIRY*
. *                                                         *
. *     DATE WRITTEN:     11/08/88                          *
. *                                                         *
. *     MODIFICATIONS:                                      *
. *        V9.04.00  24/11/2005  J.Tan       CAR 55176      *
. *                  Ported from r6                         *
. *                                                         *
. ***********************************************************
.
          INC       STD001FD
.
          INC           PATLGAFD/INC
          INC           PATCT1FD/INC
          INC     PATCODFD/INC
.
.        EXTRA   VARIABLES
.
CATCDE          DIM     3
ECATCDE         DIM     3
CODE            DIM     2
CODECH          INIT    "CH"
CATCH           INIT    "Catchment Code Alloc"
POST            INIT    "Post Code Allocation"
LGA             INIT    "LGA Allocation      "
DIM20           DIM     20
.
FIELD           FORM    2
.
.
LGACDE          DIM     4
ELGACDE         DIM     4
LNO             FORM    2
TIMEIS          DIM     8
.
PC1             DIM     8
PC2             DIM     8
FPC1            FORM    8
FPC2            FORM    8
FORM8           FORM    8
PRINTFLG        FORM    "0"
PAGENO          FORM    3
.
PRGID     INIT      "IBAHOS67"
PRGNAM    INIT      "ALLOCATION OF CATCHMENT/LGA CODE "
VERSION   INIT      "V12.00.00"
+
.         START OF PROGRAM
.
          DISPLAY       *ES,"IBAHOS67"
.
          DISPLAY       *P56:24,"Opening patct1cf";
          OPEN          PATCT1C1,"patct1cf"
.
          DISPLAY       *P64:24,"patct1cf";
          OPEN          PATCT1C2,"patct1cf"
.
          DISPLAY       *P64:24,"patct1cf";
          OPEN          PATCT1C3,"patct1cf"
.
          DISPLAY       *P64:24,"patcodes";
          OPEN          PATCODE1,"patcodes"
.
          DISPLAY       *P64:24,"patlgaaf";
          OPEN          PATLGAA1,"patlgaaf"
.
.
.         SELECT OPTION
.
START    CALL       DISPHEAD
         DISPLAY    *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Postcode Allocation":
                    *P1:6,*V2LON,TWO,*HOFF," = Catchment Code Allocation":
                    *P1:7,*V2LON,THREE,*HOFF," = LGA Code Allocation"
.
REKEY    KEYIN      *P1:9,*EL,"Option : ",*V2LON,OPTION;
.
         COMPARE    ZERO,OPTION
         GOTO       ENDIT IF EQUAL
.
REPEAT   MOVE       ZERO,PRINTFLG
         BRANCH     OPTION OF PSTCHG,CATCHG,LGACHG
.
         DISPLAY    *P40:9,*EL,*B,*V2LON,"** Invalid Selection **",*W2;
         GOTO       REKEY
.
.-----------------------------------------------------------------------------
.        Postcodes Codes
.-----------------------------------------------------------------------------
.
PSTCHG   DISPLAY    *P60:2,*V2LON,"- Postcodes",*HOFF,*P1:3,*EF:
                    *P1:4,"Starting Postcode : "
         UNPACK     SP70,PC1,PC2
         MOVE       ZERO,FPC1
         MOVE       ZERO,FPC2
.
.        Key in and validate a postcode
.
         KEYIN      *P21:4,*EL,*V2LON,PC1
.
.        RESET      PC1
.        GOTO       START IF EOS
.
         ENDSET     PC1
         APPEND     SP4,PC1
         RESET      PC1
.
         MATCH      SP70,PC1
         GOTO       PST100 IF EQUAL
.
         MOVE       PC1,KEY8
         CALL       RDCATC1
.        BRANCH     OVRCD OF PINVCDE
         SQUEEZE    PC1
         MOVE       PC1,FPC1
.
PST100   KEYIN      *P31:4,*EL,"To ",*V2LON,PC2
         ENDSET     PC2
         APPEND     SP70,PC2
         RESET      PC2
         MATCH      SP70,PC2
         GOTO       SHOWPCS IF EQUAL
         SQUEEZE    PC2
         MOVE       PC2,FPC2
.
         GOTO       SHOWPCS
.
PINVCDE  DISPLAY    *P40:4,*EL,*V2LON,*B:
                    "** Invalid Postcode **",*W2;
         GOTO       REPEAT
.
.-----------------------------------------------------------------------------
.        Catchment Codes
.-----------------------------------------------------------------------------
.
CATCHG   DISPLAY    *P60:2,*V2LON,"- Catchment Codes",*HOFF,*P1:3,*EF:
                    *P1:4,"   Catchment Code : "
.
         UNPACK     SP70,CATCDE,ECATCDE
.
.        Key in and validate a catchment code
.
         KEYIN      *P21:4,*EL,*V2LON,CATCDE
.
.        RESET      CATCDE
.        GOTO       START IF EOS
.
         ENDSET     CATCDE
         APPEND     SP3,CATCDE
         RESET      CATCDE
.
         MATCH      SP3,CATCDE
         GOTO       CNOCODE IF EQUAL
.
         CMATCH     QUEST,CATCDE
         GOTO       CHOPTS IF EQUAL
.
         PACK       KEY5 WITH CODECH,CATCDE
         CALL       RDCODE1
         BRANCH     OVRCD OF CINVCDE
.
         DISPLAY    *P40:4,*V2LON,TDESC
         GOTO       CNOC100
.
CNOCODE  DISPLAY    *P40:4,*V2LON,"NOT ALLOCATED"
         GOTO       CNOC100
.
CNOC100  KEYIN      *P31:4,*EL,"To ",*V2LON,ECATCDE
         ENDSET     ECATCDE
         APPEND     SP70,ECATCDE
         RESET      ECATCDE
.
         GOTO       SHOWPCS
.
CINVCDE  DISPLAY    *P40:4,*EL,*V2LON,*B:
                    "** Invalid Catchment Code **",*W2;
         GOTO       REPEAT
.
.        Display catchment codes
.
CHOPTS   MOVE       CODECH,CODE
         CALL       PATCODDS
         GOTO       REPEAT
.
.-----------------------------------------------------------------------------
.        LGA Codes
.-----------------------------------------------------------------------------
.
LGACHG   DISPLAY    *P60:2,*V2LON,"- LGA Codes",*HOFF,*P1:3,*EF:
                    *P1:4,"         LGA Code : "
         UNPACK     SP70,LGACDE,ELGACDE
.
.        Key in and validate a LGA code
.
KEYLGA   KEYIN      *P21:4,*EL,*V2LON,LGACDE
.
.        RESET      LGACDE
.        GOTO       START IF EOS
.
         ENDSET     LGACDE
         APPEND     SP4,LGACDE
         RESET      LGACDE
.
         MATCH      SP3,LGACDE
         GOTO       LNOCODE IF EQUAL
.
         CMATCH     QUEST,LGACDE
         GOTO       LGOPTS IF EQUAL
.
         MOVE       LGACDE,KEY4
         CALL       RDLGAA1
         BRANCH     OVRCD OF LINVCDE
.
         DISPLAY    *P40:4,*V2LON,LGADESC
         GOTO       LNOC100
.
LNOCODE  DISPLAY    *P40:4,*V2LON,"NOT ALLOCATED"
         GOTO       LNOC100
.
LNOC100  KEYIN      *P31:4,*EL,"To ",*V2LON,ELGACDE
         ENDSET     ELGACDE
         APPEND     SP70,ELGACDE
         RESET      ELGACDE
.
         GOTO       SHOWPCS
.
LINVCDE  DISPLAY    *P40:4,*V2LON,*B,*EL:
                    "** Invalid LGA code **",*W2;
         GOTO       REPEAT
.
.        Display valid LGA codes
.
LGOPTS   CALL       PATLGADS
         GOTO       REPEAT
.
.-----------------------------------------------------------------------------
.        Display the Current fields
.-----------------------------------------------------------------------------
.
SHOWPCS  DISPLAY    *P1:6,*ULON," P/C",*P7:6,"Allocation               ":
                    *P40:6," P/C",*P46:6,"Allocation               "
.
         MOVE       SEVEN,CVERT
         MOVE       ONE,CCOL
.
PRNOPT   BRANCH     OPTION OF DATA1P,DATA1C,DATA1L
.
DATA1P   MOVE       PC1,KEY8
         CALL       RDCATC1
         BRANCH     OVRCD OF NEXTPC
         MATCH      SP70,PC2
         IF         !@EQUAL
           MOVE       CTCPOST,KEY8
           SQUEEZE    KEY8
           MOVE       KEY8,FORM8
           IF         FPC2 < FORM8
             GOTO       ENDDATA
           ENDIF
         ENDIF
         GOTO       DATAP
.
DATA1C   PACK       KEY11 WITH CATCDE,SP20
         CALL       RDCATC2
         BRANCH     OVRCD OF NEXTPC
.
         MATCH      SP70,ECATCDE
         IF         !@EQUAL
           MATCH      CTCCODE,ECATCDE
           GOTO       NEXTPC IF LESS
         ENDIF
         GOTO       DATAC
.
DATA1L   PACK       KEY12 WITH LGACDE,SP20
         CALL       RDCATC3
         BRANCH     OVRCD OF NEXTPC
.
         MATCH      SP70,ELGACDE
         IF         !@EQUAL
           MATCH      CTCLGA,ELGACDE
           GOTO       NEXTPC IF LESS
         ENDIF
         GOTO       DATAL
.
.        Postcodes
.
DATAP    BRANCH     PRINTFLG OF PRNTP
         DISPLAY    *PCCOL:CVERT,*V2LON,CTCPOST,SP2,CTCCODE,SP2,CTCLGA
         GOTO       NEXTDAT
.
PRNTP    COMPARE    "50",LNO
         CALL       HEAD IF NOT LESS
.
         MOVE       SP20,LGADESC
         MATCH      SP4,CTCLGA
         GOTO       NOCLGA IF EQUAL
.
         MOVE       "UNKNOWN CODE",LGADESC
         MOVE       CTCLGA,KEY4
         CALL       RDLGAA1
.
NOCLGA   MOVE       SP20,TDESC
         MATCH      SP3,CTCCODE
         GOTO       NOCCODE IF EQUAL
.
         MOVE       "UNKNOWN CODE",TDESC
         PACK       KEY5 WITH CODECH,CTCCODE
         CALL       RDCODE1
.
NOCCODE  PRINT      *21,"!   ",CTCPOST,*35,"!",*38,CTCCODE,*45,TDESC:
                    *70,"!",*73,CTCLGA,*80,LGADESC,*105,"!"
         ADD        ONE,LNO
         GOTO       NEXTPC
.
.        Catchment codes
.
DATAC    MATCH      CTCCODE,ECATCDE
         GOTO       ENDDATA IF LESS
.
         MOVE       SP20,TDESC
.
         MATCH      SP3,CTCCODE
         GOTO       DSPC IF EQUAL
.
         MOVE       "UNKNOWN CODE",TDESC
         PACK       KEY5 WITH CODECH,CTCCODE
         CALL       RDCODE1
.
DSPC     BRANCH     PRINTFLG OF PRNTC
         DISPLAY    *PCCOL:CVERT,*V2LON,CTCPOST,SP2,CTCCODE,SP1,TDESC
         GOTO       NEXTDAT
.
PRNTC    COMPARE    "50",LNO
         CALL       HEAD IF NOT LESS
.
         PRINT      *21,"!    ",CTCPOST,*35,"!  ",CTCCODE:
                    *45,TDESC,*70,"!"
         ADD        ONE,LNO
         GOTO       NEXTPC
.
.        LGA Codes
.
DATAL    MATCH      CTCLGA,ELGACDE
         GOTO       ENDDATA IF LESS
.
         MOVE       SP20,LGADESC
.
         MATCH      SP4,CTCLGA
         GOTO       DSPL IF EQUAL
.
         MOVE       "UNKNOWN CODE",LGADESC
         MOVE       CTCLGA,KEY4
         CALL       RDLGAA1
.
DSPL     BRANCH     PRINTFLG OF PRNTL
         DISPLAY    *PCCOL:CVERT,*V2LON,CTCPOST,SP2,CTCLGA,SP1,LGADESC
         GOTO       NEXTDAT
.
PRNTL    COMPARE    "50",LNO
         CALL       HEAD IF NOT LESS
.
         PRINT      *21,"!    ",CTCPOST,*35,"!  ",CTCLGA:
                    *45,LGADESC,*70,"!"
         ADD        ONE,LNO
         GOTO       NEXTPC
.
.
.        Check if we have filled the screen and/or column
.
NEXTDAT  ADD        ONE,CVERT
         COMPARE    TWENTY4,CVERT
         GOTO       NEXTPC IF LESS
.
         MOVE       SEVEN,CVERT
         ADD        "39",CCOL
.
         COMPARE    "70",CCOL
         GOTO       NEXTPC IF LESS
.
.        We have filled the screen
.
         KEYIN      *P1:24,*EL,"(",*V2LON,"E",*HOFF,")xit, ":
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "(",*V2LON,"M",*HOFF,")ore, ":
                    "(",*V2LON,"P",*HOFF,")rint ? ",*V2LON,ANS;
.
         CMATCH     ANSE,ANS
         GOTO       START IF EQUAL
.
         CMATCH     ANSN,ANS
         GOTO       REPEAT IF EQUAL
.
         CMATCH     ANSP,ANS
         GOTO       PRINTD IF EQUAL
.
         MOVE       ONE,CCOL
         DISPLAY    *PCCOL:CVERT,*EF;
.
.        Read in the next record
.
NEXTPC   BRANCH     OPTION OF DNXTP,DNXTC,DNXTL
.
DNXTP    CALL       RDKCATC1
         BRANCH     OVRCD OF ENDDATA
         MATCH      SP70,PC2
         IF         !@EQUAL
           MOVE       CTCPOST,KEY8
           SQUEEZE    KEY8
           MOVE       KEY8,FORM8
           IF         FPC2 < FORM8
             GOTO       ENDDATA
           ENDIF
         ENDIF
         GOTO       DATAP
.
DNXTC    CALL       RDKCATC2
         BRANCH     OVRCD OF ENDDATA
         MATCH      SP70,ECATCDE
         IF         !@EQUAL
           MATCH      CTCCODE,ECATCDE
           GOTO       ENDDATA IF LESS
         ENDIF
         GOTO       DATAC
.
DNXTL    CALL       RDKCATC3
         BRANCH     OVRCD OF ENDDATA
         MATCH      SP70,ELGACDE
         IF         !@EQUAL
           MATCH      CTCLGA,ELGACDE
           GOTO       ENDDATA IF LESS
         ENDIF
         GOTO       DATAL
.
ENDDATA  COMPARE    ZERO,PRINTFLG
         GOTO       END10 IF EQUAL
.
         BRANCH     OPTION OF END05
.
         PRINT      *21,"*------------------------------------------------*":
                    *N,*N,"  ***  END OF ENQUIRY  ***"
         GOTO       END07
.
END05    PRINT      *21,"*-------------------------------------------------":
                    "----------------------------------*":
                    *N,*N,"  ***  END OF ENQUIRY  ***"
.
END07    DISPLAY    *P1:24,*EL,*P40:24,*V2LON:
                    "** Report Generation Completed **",*W;
         MOVE       ZERO,PRINTFLG
.
END10    KEYIN      *P1:24,*EL,"(",*V2LON,"E",*HOFF,")xit, ":
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "(",*V2LON,"P",*HOFF,")rint ? ",*V2LON,ANS;
.
         CMATCH     ANSE,ANS
         GOTO       START IF EQUAL
.
         CMATCH     ANSP,ANS
         GOTO       PRINTD IF EQUAL
         GOTO       REPEAT
.
+
.        Print option
.
PRINTD   MOVE       ZERO,PAGENO
         MOVE       ONE,PRINTFLG
         MOVE       "55",LNO
         GOTO       PRNOPT
.
.
HEAD     ADD        ONE,PAGENO
         CLOCK      TIME,TIMEIS
.
         COMPARE    ONE,PAGENO
         CALL       PAGEND IF NOT EQUAL
.
         MOVE       SP20,DIM20
         LOAD       DIM20 USING OPTION FROM POST,CATCH,LGA
.
         PRINT      *F,*1,"IBAHOS67",*35,CNAME,*103,"DATE - ":
                    CDATE:
                    *N,*1,VERSION:
                    *35,"*** ALLOCATION OF CATCHMENT/LGA CODE ***":
                    "  (",DIM20,")",*103,"TIME : ",TIMEIS
.
         BRANCH     OPTION OF HEAD1P,HEAD1C,HEAD1L
.
HEAD1P   PRINT      *39,"Post Code From : ",PC1:
                    *N,*39,"            To : ",PC2:
                    *103,"PAGE - ",*115,PAGENO,*N,*N:
                    *21,"*-------------------------------------------------":
                    "----------------------------------*":
                    *N,*21,"! Post Code",*35,"!",*45,"Catchment Code ":
                    *70,"!",*80,"LGA Code",*105,"!"
         GOTO       ENDHD
.
HEAD1C   PRINT      *39,"Catchment Code From : ",CATCDE:
                    *N,*39,"               To   : ",ECATCDE:
                    *103,"PAGE - ",*115,PAGENO,*N,*N:
                    *21,"*------------------------------------------------*":
                    *N,*21,"! Post Code",*35,"!",*45,"Catchment Code":
                    *70,"!"
         GOTO       ENDHD
.
HEAD1L   PRINT      *39,"LGA Code From : ",LGACDE:
                    *N,*39,"           To : ",ELGACDE:
                    *103,"PAGE - ",*115,PAGENO,*N,*N:
                    *21,"*------------------------------------------------*":
                    *N,*21,"! Post Code",*35,"!",*45,"LGA Code",*70,"!"
.
ENDHD    MOVE       SEVEN,LNO
.
PAGEND   BRANCH     OPTION OF ENDHD1
         PRINT      *21,"*------------------------------------------------*"
         RETURN
.
ENDHD1   PRINT      *21,"*-------------------------------------------------":
                    "----------------------------------*"
         RETURN
.
+
.
         INCLUDE    PATLGADS
         INCLUDE    PATCODDS
         INC       PATCODIO/INC
         INC       PATCT1IO/INC
         INC       PATLGAIO/INC
         INC       STD001IO
ENDIT    CHAIN      PGM
         STOP
