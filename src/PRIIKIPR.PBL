.------------------------------------------------------------
.  File          :  PRIIKIPR 
.
.  Function      :  Update Keyword Index File for Private Practice 
.                :  AMA/MBS Items
.
.  Parameters    :  ITEMTYP, ITEMNO
.
.  Modifications :  
.                   V10.06.01 14/04/2014 J.Tan  CAR 296772
.                   Removed checking minimum of 2 chars for item code
.                   V10.03.01 14/11/2011 J.Tan  CAR 254286
.                   Mods to generate item less than 3 chars minimum 2 chars.
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Procedure to Update
.  a Key Word Index Table that can be used for searching 
.  Masterfiles. The procedure should be called from the 
.  Add, Update and Delete functions in the Masterfile 
.  Maintenance Function.
.  
.  A Key Word Index Table is Defined in the following Manner
.                              
.  PRIKTFLG    DIM       xx    * Code Field Segment 1
.  PRIKKITM    DIM       xx    * Code Field Segment n
.  PRIKKKWD    DIM       15    * Key Word
.  PRIKKSPA    DIM       10    * Spare
.
.  Index 1   PRIKTFLG, PRIKKITM, PRIKKKWD
.  Index 2   PRIKKKWD, PRIKTFLG, PRIKKITM
.
.  To convert this Procedure the following should be performed
.    Global Change PRI to the System ID eg :%s/PRI/PAT/g
.    Global Change IKI to the File   ID eg :%s/IKI/DKI/g
.    Global Change PRIK to the IO Call ID eg :%s/PRIK/PTDK/g
.    Modify the KEYINDEX defintion to combined Code Field Lengths eg 6
.    Global Change KEY26 to the Key for the Key Word Table eg KEY21
.    Change xxxxxxx to the Code Fields eg DCODEhh
.    Change the GENR0000 routine to call the BWORD000 for each
.    string of key words to be indexed for the Coded Field
.    eg MOVE    DSNAME,KEYWORDS
.       CALL    BWORD000
.       MOVE    DGNAME,KEYWORDS
.       CALL    BWORD000
.       MOVE    TDESC,KEYWORDS
.       CALL    BWORD000
.------------------------------------------------------------
          DEFPROC   PRIIKIUP
.
          INC       PRIIKIFD/INC
.
KEYINDEX  DIM       11        * Code Index in Table
KEYWORDS  DIM       60        * String Containing the Key Words to be Indexed
SIXTY     FORM      "60"
KEYWRDLN  FORM      2
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       15
KEYWRD02  DIM       15
KEYWRD03  DIM       15
KEYWRD04  DIM       15
KEYWRD05  DIM       15
KEYWRD06  DIM       15
KEYWRD07  DIM       15
KEYWRD08  DIM       15
KEYWRD09  DIM       15
KEYWRD10  DIM       15
.------------------------------------------------------------
. Generate Word Index
.------------------------------------------------------------
GENR0000  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     PRIIKIA1,"priikiaf"
          TRAPCLR  IO
          BRANCH   OVRCD,GENR9999
.
          PACK     KEYINDEX,ITEMTYP,ITEMNO,SP70
          CALL     CLEAR000           * Remove Current Key Word Index
          BRANCH   EXIT,GENR9999
.
          PACK     KEY22,ITEMTYP,ITEMNO,SP70     * Validate Record on File
          CALL     RDPRIT1
          COMPARE  ZERO,OVRCD
          GOTO     GENR1500 IF EQUAL
.
          CALL     RSPRIT1  
GENR1000  CALL     RKPRIT1  
          BRANCH   OVRCD,GENR1900     * If Not then it Must be a Delete/Clear
.
          MATCH    ITEMTYP,DPRITFLG
          GOTO     GENR1900 IF NOT EQUAL
.
          MATCH    ITEMNO,PRITITMN
          GOTO     GENR1900 IF NOT EQUAL
.
.   Insert Code to Call BWORD000 function for each string to be indexed 
.   The string should be moved into the variable KEYWORDS

GENR1500  PACK     KEYINDEX,ITEMTYP,ITEMNO,SP70
.
          MOVE     ZERO,F1
          PACK     KEYWORDS,ITEMNO,SP70   * Set Item No as Key Word
          CALL     BWORD000
.
          MOVE     ONE,F1
....      MOVE     ITEMDESC,KEYWORDS      * Set Description as Key Word
          MOVE     PRITDESC,KEYWORDS
          REP      ", - ",KEYWORDS
          CALL     BWORD000
          GOTO     GENR1000               * read next Item
.
GENR1900  CLOSE    PRIIKIA1
.
GENR9999  GOTO     PRIIKIEP
.------------------------------------------------------------
. Clear Current Key Words
.------------------------------------------------------------
CLEAR000  PACK     KEY26,KEYINDEX,SP70
          CALL     RSPRIK1  
          CALL     RKPRIK1  
          BRANCH   OVRCD,CLEAR999
.
          MATCH    ITEMTYP,PRIKTFLG          * Item Type
          GOTO     CLEAR999 IF NOT EQUAL
.
          MATCH    ITEMNO,PRIKKITM           * Item No.
          GOTO     CLEAR999 IF NOT EQUAL
.
          PACK     KEY26,PRIKTFLG,PRIKKITM,PRIKKKWD,SP70
          CALL     DEPRIK1
          GOTO     CLEAR000
.
CLEAR999  RETURN
.-------------------------------------------------
. Determine Words to Index
.-------------------------------------------------
BWORD000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      BWORD000 IF NOT EOS
            GOTO      BWORD999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY60,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      BWORD100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handly form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Save this Word
.
BWORD100  MOVE      KEYWORDS,KEY15
          IF        F1=1
            MOVELPTR  KEY15,KEYWRDLN         * Item Desc.- check Mininum 2 chars
            IF        KEYWRDLN < 2
              GOTO      BWORD190
            ENDIF
          ENDIF
          PACK      KEY15,KEY15,SP70
          REP       UPPLOW,KEY15             * Always Upper Case
          PACK      KEY26,KEYINDEX,KEY15
          UNPACK    KEY26,PRIKTFLG,PRIKKITM,PRIKKKWD
          CALL      RDPRIK1
          IF        OVRCD=1
            CALL      WRPRIK1
          ENDIF
          GOTO      BWORD190
.
.         Check for any more words
.
BWORD190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY60,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY60,KEYWORDS
          GOTO      BWORD000
.
BWORD999  RETURN
.
          INC       PRIIKIIO/INC
          INC       IBAOVRIO/INC
.
PRIIKIEP  ENDPROC                          * End of Procedure
.
