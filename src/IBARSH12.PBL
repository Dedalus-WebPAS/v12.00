.***************************************************************************
.* System    :   Billing                                                   *
.* Program   :   IBARSH12                                                  *
.* Desc      :   Schedule program to process sameday/overnight fees        *
.***************************************************************************
.* Date      :   24/03/2003                                                *
.* Author    :   Ebon Clements                                             *
.* Function  :   This program will process various functions that relate   *
.*           :   to the sameday/overnight fee files as scheduled reports   *
.*           :                                                             *
.* Mods      :                                                             *
.*              V11.00.01 12/03/2020  J.Tan          TSK 0838262           *
.*                        Removed PATCMXKY (not used) and added PATCODKY   *
.*           :  V10.03.01 13/03/2012  J.Tan           CAR 259879           *
.*           :            Added Active/Inactive and Eff.End date to NZ Misc*
.*           :  V10.01.01 09/02/2011  Davin           CAR 233055           *
.*           :            Disabled options 1 to 10 (removed new files)     *
.*           :   V9.12.01  08/09/2009 J.Tan         CAR 205303             *
.*           :             Added Casemix Contract ID                       *
.*           :   V9.08.05  08/05/2007  Mike Laming  CAR 137125 HDP 2007    *
.*           :            Mods to PATDGWDS - Added PTDWDRGV to PATDGWFD    *
.*           :   V9.08.04 06/12/2006 Jill Habasque    CAR 119985           *
.*           :            Fixed key37 pack for nzpbfeaf                    *
.*           :   V9.08.03 23/11/2006 Ebon Clements        119999           *
.*           :            Added NZ Priv contract funding global functions  *
.*           :   V9.08.02 21/11/2006 Ebon Clements        120007           *
.*           :            Added NZ Private misc charge global functions    *
.*           :   V9.08.01 20/11/2006 Ebon Clements        120001           *
.*           :            Added NZ Private Contract Procedure functions    *
.*           :            20/11/2006 Jill Habasque   CAR 119985            *
.*           :            Added NZ Private Bed Fee functions               *
.*           :   V9.04.01 29/04/2005 Sandra Barcham       60641            *
.*           :            Fixed 11391 I * C on newiovaf                    *
.*           :   V9.03.00 31/03/2004 Ebon Clements    CAR 36568 & 36569    *
.*           :            Created program from IBAADT16 and IBAADT18       *
.***************************************************************************
.
          INC       STD001FD
          INC       STDHLPDF
          INC       STDKWSDF
          INC       PATCMXVR/INC
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       IBACONFD/INC
          INC       MLTCFNFD/INC            * NZ Priv Contract Funding M/Hos
          INC       MLTCF1FD/INC            * New NZ Priv Contract Funding M/Hos
          INC       NZPCFNFD/INC            * NZ Priv Contract Funding
          INC       NZPCF1FD/INC            * New NZ Priv Contract Funding
          INC       NZPPFEFD/INC            * NZ Priv Contract Proc 
          INC       NZPPF1FD/INC            * New NZ Priv Contract Proc
          INC       NZPIBRFD/INC            * NZ Priv Cont Proc Rev 
          INC       NZPIB1FD/INC            * New NZ Priv Cont Proc Rev 
          INC       NZPMCHFD/INC            * NZ Priv Misc Charge
          INC       NZPMC1FD/INC            * New NZ Priv Misc Charge
          INC       NZPRBRFD/INC            * NZ Priv Cont Proc inv 
          INC       NZPRB1FD/INC            * New NZ Priv Cont Proc inv
          INC       NZPMXCFD/INC            * NZ Priv Misc Exploding items
          INC       NZPMX1FD/INC            * New NZ Priv Misc Exploding items
          INC       PATCONFD/INC
          INC       PATHSPFD/INC            * Hospital table
.
          INC       PATLSDFD/INC            * Lumpsum current file
.
          INC       PATASDFD/INC            * Additional charges
.
          INC       PATSRBFD/INC            * Sameday Revenue Breakdown
.
          INC       PMSSINFD/INC            * Sameday Invoice Breakdown
.
          INC       PATCMCFD/INC            * Casemix Codes f
          INC       PATCODFD/INC            * Codes file
          INC       PATDGWFD/INC            * DRG file
          INC       PATMI1FD/INC            * Patient admission file
          INC       PATITMFD/INC            * Item MBS file
          INC       PATFN1FD/INC            * Fund file
.
          INC       PATHLFFD/INC            * Lump sum for overnight
.
          INC       PATLDFFD/INC            * Daily fee for low outliers
.
          INC       PATHDFFD/INC            * Daily fee forInliers/high outliers
.
          INC       PATAFEFD/INC            * Additional fee
.
          INC       PATOVBFD/INC            * Overnight Rev. Breakdown file
.
          INC       PATIOVFD/INC            * Overnight Inv. Breakdown file
.
          INC       NZPBFEFD/INC            * NZ Private bed fee file
          INC       NZPBF1FD/INC            * NZ Private new bed fee file
.
. LOCAL VARIABLE DEFINITION
. ----
.
ACTFLAG   DIM       1
ALLHF     FORM      1
ALLFLG    FORM      1
ATYPFLG   FORM      1
ATYPDES   DIM       20
ATYPDES1  DIM       20
BFHOS1    DIM       3
BFATYPE1  DIM       3
BFBTYPE1  DIM       3
BFCLM1    DIM       3
BFENDDY1  FORM      3
BFHFTAB1  DIM       8
BFHFUND1  DIM       6
BFHDP1    DIM       4
BFTOTAL   FORM      8.2          TOTAL RATE                           *C-111521
BTYPDES   DIM       20
BTYPDES1  DIM       20
BTPFLG    FORM      1
BTYPFLG   FORM      1
CONTRCID  DIM       6
CHRGFLG   FORM      1
CALLPOSN  FORM      1
CPTOSTYP  DIM       1
CPTOFLG   FORM      1
CLMFLG    FORM      1
CSMFLG    FORM      1
CODE      DIM       2
CODEA     INIT      "A "
CODEBT    INIT      "BT"
CODECL    INIT      "CL"
CODEFI    INIT      "FI"
CODEFH    INIT      "FH"
CPTOCLAM  DIM       3
CPTOCPRC  DIM       9
CPTOMCHG  DIM       9
CPTOEDAT  DIM       8
CPTOHFND  DIM       6
CPTOHFTB  DIM       8
CPTOHOSP  DIM       3
CLDES     DIM       20
CLDES1    DIM       20
DALL      INIT      "ALL  "
DIM26     DIM       26
DIM26A    DIM       26
DIM3      DIM       3
DIM37     DIM       37
DRGVERZ   DIM       3                                                 *I-137125
DV1       DIM       1                                                 *I-137125
DV2       DIM       1                                                 *I-137125
KYINCLMN  DIM       3
FNDFLG    FORM      1
INCRAMNT  FORM      3.2
INSRTCD   DIM       9
TABFLG    FORM      1
TABFLG1   FORM      1
FCODDES   DIM       30
FCODDES1  DIM       30
FROMCLAM  DIM       3
FROMCPRC  DIM       9
FROMMCHG  DIM       9
FROMEDAT  DIM       8
FROMXDAT  DIM       8
FROMHFND  DIM       6
FROMHFTB  DIM       8
FROMHOSP  DIM       3
FROMSTYP  DIM       1
FTABDES   DIM       30
FTABDES1  DIM       30
FTTABT    DIM       3
FTCLMN    DIM       3
FTHFND    DIM       6
FTCASM    DIM       9
INCR      FORM      1
INCDESC   DIM       21
INCDES1   INIT      "Fixed Dollar Increase"
INCDES2   INIT      "Percentage Increase  "
INCRFLAG  FORM      1
HOSPID    DIM       3
HOSPFLG   FORM      1
KEY29A    DIM       29
KYINHFND  DIM       6
KYINCASM  DIM       9
KYINTABT  DIM       3
KYINBTYP  DIM       3
FTBTYP    DIM       3
LSTFLG    FORM      1
MHFUND    DIM       6
MODE      DIM       1
MODE1     DIM       1
PTPORT    FORM      3.2  
RANGE     FORM      1
RTPORT    FORM      3.2
SKEY31    DIM       31
SKEY34    DIM       34
SAVAMNT   FORM      12.2
SAVATYP   DIM       3
SAVBTYP   DIM       3
SAVHOSP   DIM       3
SAVCLM    DIM       3
SAVDESC   DIM       30
SAVEDPAT  FORM      8.2
SAVEDES1  DIM       30
SAVEDES2  DIM       35
SAVEDREB  FORM      8.2
SAVEINVI  FORM      1
SAVEINVR  FORM      1
SAVENINV  FORM      1
SAVENDD   FORM      3
SAVEINVB  FORM      1 
SAVECOFF  FORM      5
SAVKEY30  DIM       30
SAVKEY37  DIM       37
SAVKEY40  DIM       40
SAVFHF    FORM      8.2 
SAVFPAT   FORM      8.2  
SAVFUND   DIM       6
SAVPORT   FORM      4.4
SAVTAB    DIM       8
TEMPFLAG  FORM      1
TEMPCLMN  DIM       3
TEMPHFND  DIM       6
TEMPTABT  DIM       3
TEMPCASM  DIM       9
TEMPBTYP  DIM       3
TTTABT    DIM       3
TTCLMN    DIM       3
TTHFND    DIM       6
TTCASM    DIM       9
TTBTYP    DIM       3
SKEY27    DIM       27
SKEY30    DIM       30
Z2        INIT      "ZZ"
Z3        INIT      "ZZZ"
Z5        INIT      "ZZZZZ"
.
PRGID     INIT      "IBARSH12"
PRGNAM    INIT      "Global Maintenance  "
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000                * initialisation and open files
.
ML0100    CALL      OPTN0000                * select options
          BRANCH    EXIT,ML9999             * EXIT = 1 if 0 chosen in menu
.
          BRANCH    OPTION,ML1100,ML1200,ML1300,ML1400,ML1500:
                           ML1600,ML1700,ML1800,ML1900,ML2000:
                           ML2100,ML2200,ML2300,ML2400,ML2500:
                           ML2600,ML2700,ML2800,ML2900,ML3000:
                           ML3100,ML3200,ML3300,ML3400,ML3500:
                           ML3600,ML3700,ML3800
.
          GOTO      ML0100
.
ML1100    CALL      CNEW0000                * Create new sameday fee files
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1200    CALL      GDEL0000                * Global deletion new sameday file 
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1300    CALL      HDUP0000                * Health Fund duplication new  
          BRANCH    EXIT,ML0100             * sameday file
          GOTO      ML9999
.
ML1400    CALL      CPOV0000                * Copy sameday rates to overnight
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1500    CALL      SUPD0000                * Copy new samday rates to current
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1600    CALL      ONEW0000                * Create new overnight fee files
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1700    CALL      OUPD0000                * Copy new o/night rates to current
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1800    CALL      ODUP0000                * Health fund duplication new      
          BRANCH    EXIT,ML0100             * overnight fee file
          GOTO      ML9999
.
ML1900    CALL      ODEL0000                * Global deletion new overnight
          BRANCH    EXIT,ML0100             * fee file
          GOTO      ML9999
.
ML2000    CALL      COVR0000                * Copy overnight rates to sameday
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML2100    CALL      NNZB0000                * Create new NZ Bed fee file
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML2200    CALL      GUPC0000                * Global Update of nz bedfee file
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML2300    CALL      GDNZ0000                * Global Delete of nz bedfee file
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML2400    CALL      NZDP0000                * Duplication of nz bed fee
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML2500    CALL      UPDT0000                * Update new fees to current
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML2600    CALL      CNZP0000                * Create new NZ contract proc file
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML2700    CALL      HNZP0000                * NZ contract proc fee duplication
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML2800    CALL      QNZP0000                * Global del nz priv cont proc
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML2900    CALL      UNZP0000                * Update new to curr NZ cont proc
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML3000    CALL      CNZM0000                * Create new NZ misc charge file  
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML3100    CALL      UNZM0000                * Update new to curr NZ misc charge
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML3200    CALL      HNZM0000                * NZ misc charge duplication
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML3300    CALL      QNZM0000                * Global del NZ misc charge
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML3400    CALL      TNZM0000                * Global udp nz misc charge  
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML3500    CALL      CNZC0000           * Create new nz contract funding file
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML3600    CALL      HNZC0000           * Duplication nz contract funding
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML3700    CALL      QNZC0000           * Global delete nz contract funding  
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML3800    CALL      UNZC0000           * Upd new to curr nz contract funding
          BRANCH    EXIT,ML0100
          GOTO      ML9999 
.
ML9999    CHAIN     PGM                     * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          OPEN      CONTROLF,"controlf"
          OPEN      PATHSPA1,"pathspaf"
.
          OPEN      PATLSDA1,"patlsdaf"
.
          OPEN      PATASDA1,"patasdaf"
.
          OPEN      PATSRBA1,"patsrbaf"
.
          OPEN      PMSSINA1,"pmssinaf"
.
          OPEN      PATCMCA1,"patcmcaf"
          OPEN      PATCODE1,"patcodes"
          OPEN      PATDGWA1,"patdgwaf"
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATITEM1,"patitemn"
          OPEN      PATFN1A1,"patfn1af"
.
          OPEN      PATHLFA1,"pathlfaf"
.
          OPEN      PATLDFA1,"patldfaf"
.
          OPEN      PATHDFA1,"pathdfaf"
.
          OPEN      PATAFEA1,"patafeaf"
.
          OPEN      PATOVBA1,"patovbaf"
.
          OPEN      PATIOVA1,"patiovaf"
.
          OPEN      NZPCFNA1,"nzpcfnaf"
          OPEN      NZPCFN11,"nzpcf1af"
          OPEN      MLTCFNA1,"mltcfnaf"
          OPEN      MLTCFN11,"mltcf1af"
.
          OPEN      NZPBFEA1,"nzpbfeaf"
          OPEN      NZPBF1A1,"nzpbf1af"
.
          OPEN      NZPPFEA1,"nzppfeaf"
          OPEN      NZPPF1A1,"nzppf1af"
.
          OPEN      NZPIBRA1,"nzpibraf"
          OPEN      NZPIBR11,"nzpib1af"
.
          OPEN      NZPRBRA1,"nzprbraf"
          OPEN      NZPRBR11,"nzprb1af"
.
          OPEN      NZPMCHA1,"nzpmchaf"
          OPEN      NZPMC1A1,"nzpmc1af"
.
          OPEN      NZPMXCA1,"nzpmxcaf"
          OPEN      NZPMX1A1,"nzpmx1af"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  HLINE     *G37,2,50,80
          DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P2:5,*V2LON,ONE,*HOFF," = Create new sameday fee files":
                    *P40:5,*V2LON,TEN7,*HOFF," = NZ Cont Proc Dup (New File)":
                    *P2:6,*V2LON,TWO,*HOFF," = Global del sameday fee" :
                                           "(New File)":
                    *P40:6,*V2LON,TEN8,*HOFF," = Global Del NZ Cont Proc":
                                             "(New File)":
                    *P2:7,*V2LON,THREE,*HOFF," = H/fund dup " :
                                           "sameday fee(New File)":
                    *P40:7,*V2LON,TEN9,*HOFF," = Upd New to Curr NZ Cont Proc":
                    *P2:8,*V2LON,FOUR,*HOFF," = Copy sameday rates " :
                                           "to overnight":
                    *P40:8,*V2LON,TWENTY,*HOFF," = Create New NZ Priv Misc ":
                                             "Charge file":
                    *P2:9,*V2LON,FIVE,*HOFF," = Copy new sameday ":
                                           "rates to current":
                    *P40:9,*V2LON,TWENTY1,*HOFF," = Upd New to Curr NZ Priv ":
                                             "Misc Charge":
                    *P2:10,*V2LON,SIX,*HOFF," = Create new o/night fee files ":
                    *P40:10,*V2LON,TWENTY2,*HOFF," = Duplicate NZ Priv ":
                                             "Misc Charge(New)":
                    *P2:11,*V2LON,SEVEN,*HOFF," = Copy new ":
                                           "o/night rates to current":
                    *P40:11,*V2LON,TWENTY3,*HOFF," = Global Del NZ Priv ":
                                             "Misc Charge(New)":
                    *P2:12,*V2LON,EIGHT,*HOFF," = H/fund dup ":
                                           "o/night fee(New File)":
                    *P40:12,*V2LON,TWENTY4,*HOFF," = Global Upd NZ Priv ":
                                             "Misc Charge(New)":
                    *P2:13,*V2LON,NINE,*HOFF," = Global del o/night fee":
                                           "(New File)":
                    *P40:13,*V2LON,TWENTY5,*HOFF," = Create New NZ Pr ":
                                             "Contr. Funding File":
                    *P1:14,*V2LON,TEN,*HOFF," = Copy o/night rates " :
                                           "to sameday":
                    *P40:14,*V2LON,TWENTY6,*HOFF," = Dup NZ Priv ":
                                             "Contract Funding File":
                    *P1:15,*V2LON,TEN1,*HOFF," = Create new NZ bed fee file":
                    *P40:15,*V2LON,TWENTY7,*HOFF," = Global Del NZ Priv ":
                                             "Cont Funding ":
                    *P1:16,*V2LON,TEN2,*HOFF," = Global Update NZ bed fee file":
                    *P40:16,*V2LON,TWENTY8,*HOFF," = Upd New to Curr NZ P ":
                                             "Cont Funding ":
                    *P1:17,*V2LON,TEN3,*HOFF," = Global Delete NZ bed fee file":
                    *P1:18,*V2LON,TEN4,*HOFF," = Duplicate NZ bed fee records":
                    *P1:19,*V2LON,TEN5,*HOFF," = Update new to current NZ Bed ":
                                                 "fee ":
                    *P1:20,*V2LON,TEN6,*HOFF," = Create New NZ Cont Proc file ";
.
OPTN0500  KEYIN     *P1:22,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:22,*V2LON,OPTION
.
          COMPARE   ZERO,OPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    OPTION,OPTN8000,OPTN8000,OPTN8000,OPTN8000,OPTN8000:
                           OPTN8000,OPTN8000,OPTN8000,OPTN8000,OPTN8000:
                           OPTN9000,OPTN9000,OPTN9000,OPTN9000,OPTN9000:
                           OPTN9000,OPTN9000,OPTN9000,OPTN9000,OPTN9000:
                           OPTN9000,OPTN9000,OPTN9000,OPTN9000,OPTN9000:
                           OPTN9000,OPTN9000,OPTN9000
.
OPTN8000  BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               CNEW0000              Called by: ML1100  *
.* Create new sameday fee files. This will delete all records from the new*
.* files and load the current files records.                              *
.**************************************************************************
.
CNEW0000  
CNEW9999  RETURN
+
.******************************************************************************
.*                                 CLRF0000
.*                          Clear variables                                   *
.******************************************************************************
CLRF0000  MOVE      SP70,PTLSCNID
          MOVE      SP10,PTLSCLMN
          MOVE      SP10,PTLSHFND
          MOVE      SP10,PTLSTABT
          MOVE      SP10,PTLSCASM
          PACK      PTLSDES1,SP20,SP20
          PACK      PTLSDES2,SP20,SP20
          MOVE      ZERO,PTLSLREB
          MOVE      ZERO,PTLSLPAT
.
          MOVE      SP70,PTADCNID
          MOVE      SP10,PTADCLMN
          MOVE      SP10,PTADHFND
          MOVE      SP10,PTADTABT
          MOVE      SP10,PTADCASM
          MOVE      SP10,PTADBTYP
          PACK      PTADDES1,SP20,SP20
          PACK      PTADDES2,SP20,SP20
          MOVE      ZERO,PTADDREB
          MOVE      ZERO,PTADDPAT
.
          MOVE      ZERO,HOSPFLG
          MOVE      ZERO,CLMFLG
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,TABFLG
          MOVE      ZERO,CSMFLG
          MOVE      ZERO,BTPFLG
.
          MOVE      SP10,FTCLMN
          MOVE      SP10,FTHFND
          MOVE      SP10,FTTABT
          MOVE      SP10,FTCASM
          MOVE      SP10,FTBTYP
          MOVE      SP10,TTCLMN
          MOVE      SP10,TTHFND
          MOVE      SP10,TTTABT
          MOVE      SP10,TTCASM
          MOVE      SP10,TTBTYP
.
CLRF9999  RETURN
.
.**************************************************************************
.*                               GDEL0000              Called by: ML1200  *
.* Global deletion of sameday fees from the new files                     *
.**************************************************************************
GDEL0000  
GDEL9999  RETURN
.
.******************************************************************************
.*                         KCID0000                                           *
.*                         Keyin Contract ID                                  *
.******************************************************************************
KCID0000  DISPLAY   *P1:11,*EL,"   Keyin Contract ID : ";
          KEYIN     *P25:11,*V2LON,CONTRCID;
          ENDSET    CONTRCID
          APPEND    SP70,CONTRCID
          RESET     CONTRCID
.
          MATCH     SP70,CONTRCID
          GOTO      KCID9999 IF NOT EQUAL
          MOVE      ONE,EXIT
          GOTO      KCID9999
.
KCID9000  MOVE      ZERO,EXIT
KCID9999  RETURN
+
.******************************************************************************
.*                                 KBTP0000                                   *
.*                         Keyin Bed type                                     *
.******************************************************************************
KBTP0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * display description position
          MOVE      SP3,KYINBTYP                                       *I-90301
.
          IF        CPTOFLG = 1 & BTPFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      KBTP9999
          ENDIF
.
          MOVE      "BT",CODE
          MOVE      SP3,CKYIDEF3
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY
.....     MOVE      ACODE,PTADBTYP                                      D-90301
          MOVE      ACODE,KYINBTYP                                     *I-90301
          DISPLAY   *PECOL1:EVERT,*EL,*V2LON,TDESC;
.
KBTP9000  IF        OPTION = 3 | OPTION = 2
            IF        EXIT = 1
              IF        BTPFLG = 0 & CPTOFLG = 1
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      KBTP0000
              ELSE
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
              ENDIF
.
              IF        CPTOFLG = 0
                 MOVE     ONE,BTPFLG            * flag for all bed type
              ENDIF
            ENDIF
          ENDIF
.
KBTP9999  RETURN
.
+
.******************************************************************************
.*                                 KCMX0000                                   *
.*                         Keyin Casemix code                                 *
.******************************************************************************
KCMX0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * display description position
.
          MOVE      ZERO,EXIT
          MOVE      ZERO,TEMPFLAG
          MOVE      SP10,KYINCASM                                      *I-90301
.
          IF        CPTOFLG = 1 & CSMFLG = 1
            DISPLAY   *PECOL1:EVERT,*V2LON,"All";
            GOTO      KCMX9999
          ENDIF
.
          PACK      INSRTCD,SP70
          KEYIN     *P29:EVERT,*EL,INSRTCD
.
          RESET     INSRTCD
          PACK      INSRTCD,INSRTCD,SP70
          MATCH     SP9,INSRTCD              * nothing entered ?
          IF        @EQUAL
            IF        OPTION = 3
              MOVE      ONE,EXIT
              GOTO      KCMX9000
            ELSE
              GOTO      KCMX9500
            ENDIF
          ENDIF
.
          MATCH     INSRTCD,QUEST            * question mark entered ?
          GOTO      KCMX1000 IF EQUAL
.
          PACK      KEY9,INSRTCD
          CALL      RDPTCMC1
          IF        OVRCD<>0
            DISPLAY   *P1:24,*V2LON,"Invalid Code. ";
            CALL      HITENTER
            GOTO      KCMX0000
          ENDIF
.
.....     PACK      PTLSCASM,PTCACODE,SP10                              D-90301
          PACK      KYINCASM,PTCACODE,SP10                             *I-90301
          DISPLAY   *P29:EVERT,PTCACODE,*PECOL1:EVERT,*EL,*V2LON,PTCADES1;
.
          GOTO      KCMX9000
.
KCMX1000  MOVE      SP10,PTLSCASM
          CALL      HPTCAA00
.
          MATCH     KEY9,SP9                 * anything selected ?
          GOTO      KCMX0000 IF EQUAL
          CALL      RDPTCMC1
          BRANCH    OVRCD,KCMX0000
.
.....     PACK      PTLSCASM,PTCACODE,SP10                              D-90301
          PACK      KYINCASM,PTCACODE,SP10                             *I-90301
          DISPLAY   *P29:EVERT,PTCACODE,*PECOL1:EVERT,*EL,*V2LON,PTCADES1;
.
KCMX9000  IF        OPTION = 3 | OPTION = 2
            IF        EXIT = 1
              IF        CSMFLG = 0 & CPTOFLG = 1
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      KCMX0000
              ELSE
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
              ENDIF
.
              IF        CPTOFLG = 0
                MOVE      ONE,CSMFLG            * flag for all casemix code
              ENDIF
            ENDIF
          ENDIF
          GOTO      KCMX9999
.
KCMX9500  MOVE      ONE,EXIT
.
KCMX9999  RETURN
.
+
.******************************************************************************
.*                         KTAB0000                                           *
.*                         Keyin Table Type                                   *
.******************************************************************************
KTAB0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * display description position
.
          IF        CPTOFLG = 1 & TABFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      KTAB9999
          ENDIF
.
          MOVE      "HT",CODE
          MOVE      SP3,CKYIDEF3
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY
          BRANCH    EXIT,KTAB9000,KTAB9999  * nothing,exit entered
.....     MOVE      ACODE,PTLSTABT                                      D-90301
          MOVE      ACODE,KYINTABT                                     *I-90301
.
KTAB9000  IF        OPTION = 3 | OPTION = 2
            IF        EXIT = 1
              IF        TABFLG = 0 & CPTOFLG = 1
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      KTAB0000
              ELSE
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
              ENDIF
.
              IF        CPTOFLG = 0
                MOVE      ONE,TABFLG        * flag for all tables
              ENDIF
              GOTO      KTAB9999
            ENDIF
          ENDIF
          DISPLAY   *PECOL1:EVERT,*V2LON,TDESC;
.
KTAB9999  RETURN
.
+
.******************************************************************************
.*                         KFND0000                                           *
.*                         Keyin Health fund                                  *
.******************************************************************************
KFND0000  MOVE      SP6,PTLSHFND
          MOVE      SP10,PTLSTABT
          UNPACK    SP20,KYINHFND,KYINTABT                             *I-90301
          MOVE      "29",ECOL
          MOVE      "36",ECOL1
.
          IF        CPTOFLG = 1 & FNDFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            ADD       ONE,EVERT
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      KFND9999
          ENDIF
.
          MOVE      ZERO,CKYIMAND
          MOVE      SP20,HFNAME
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATFNDKY
.....     PACK      PTLSHFND,HCODE                                      D-90301
          PACK      KYINHFND,HCODE                                     *I-90301
          BRANCH    EXIT,KFND9000:          * Nothing entered
                         KFND9999           * Exitchar entered
.
KFND9000  IF        OPTION = 3 | OPTION = 2
.
.         for duplication option, check if spaces or eos entered
.
            IF        EXIT = 1
              IF        CPTOFLG = 0
                MOVE      ONE,FNDFLG       * flag for all health fund
                MOVE      ONE,TABFLG       * flag for all tables
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
                ADD       ONE,EVERT
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
                GOTO      KFND9999
              ENDIF
.
.         if the 'copy from' hf was not ALL, the 'copy to' hf can not be ALL
.
              IF        CPTOFLG = 1 & FNDFLG = 0
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      KFND0000
              ENDIF
            ENDIF
            DISPLAY   *PECOL1:EVERT,*V2LON,HFNAME;
          ENDIF
.
KFND9200  DISPLAY   *PECOL1:EVERT,*V2LON,HFNAME;
KFND9999  RETURN
.
+
.******************************************************************************
.*                         KCLM0000                                           *
.*                         Keyin claim code                                   *
.******************************************************************************
KCLM0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * Display description position
          MOVE      ZERO,EXIT
          MOVE      SP3,KYINCLMN                                       *I-90301
.
          IF        CPTOFLG = 1 & CLMFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      KCLM9999
          ENDIF
.
          MOVE      SP3,ACODE
          MOVE      SP3,CKYIDEF3
          MOVE      "CL",CODE
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY                * keyin code
          BRANCH    EXIT,KCLM1000,KCLM9999  * Nothing,exit entered
....      MOVE      ACODE,PTLSCLMN                                      D-90301
          MOVE      ACODE,KYINCLMN                                     *I-90301
.
KCLM1000  IF        OPTION = 3 | OPTION = 2
            IF        EXIT = 1
              IF        CLMFLG = 0 & CPTOFLG = 1
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      KCLM0000
              ELSE
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
              ENDIF
.
              IF        CPTOFLG = 0
                MOVE      ONE,CLMFLG            * Flag for all claim code
              ENDIF
              GOTO      KCLM9999
            ENDIF
          ENDIF
          DISPLAY   *PECOL1:EVERT,*EL,*V2LON,TDESC;
          GOTO      KCLM9999
.
KCLM9500  MOVE      ONE,EXIT
.
KCLM9999  RETURN
.
.******************************************************************************
.*                                 STFL0000                                   *
.*                         Set key for additional charges                     *
.******************************************************************************
STFL0000  MOVE      KYINCLMN,PTLSCLMN
          MOVE      KYINHFND,PTLSHFND
          MOVE      KYINTABT,PTLSTABT
          MOVE      KYINCASM,PTLSCASM
.
          MOVE      KYINCLMN,PTADCLMN
          MOVE      KYINHFND,PTADHFND
          MOVE      KYINTABT,PTADTABT
          MOVE      KYINCASM,PTADCASM
          MOVE      KYINBTYP,PTADBTYP
.
STFL9999  RETURN
.
.
.**************************************************************************
.*                               HDUP0000              Called by: ML1300  *
.* Sameday fee health fund duplication new file                           *
.**************************************************************************
HDUP0000  
HDUP9999  RETURN
+
.**************************************************************************
.*                               CPOV0000              Called by: ML1400  *
.* Copy sameday rates to overnight rates                                  *
.**************************************************************************
CPOV0000  
CPOV9999  RETURN
.
.**************************************************************************
.*                               SUPD0000              Called by: ML1500  *
.* Copy new sameday rates to current sameday rates                        *
.**************************************************************************
SUPD0000  
SUPD9999  RETURN
+
.******************************************************************************
.*                                 ONEW0000                                   *
.* To Confirm creating a new overnight fee files                              *
.******************************************************************************
ONEW0000  
ONEW9999  RETURN
.
.**************************************************************************
.*                               OUPD0000              Called by: ML1700  *
.* Copy new overnight rates to current overnight rates                    *
.**************************************************************************
OUPD0000  
OUPD9999  RETURN
+
.*************************************************************************
.* RMHL0000  : remove all records from pathlfaf                          *
.*************************************************************************
RMHL0000  PACK      KEY27,SP70
          CALL      RSPTHLF1
          CALL      RKPTHLF1
          BRANCH    OVRCD,RMHL9999
.
          PACK      KEY27,PTHLCNID,PTHLCLMN,PTHLHFND,PTHLTABT,PTHLCASM
          CALL      DEPTHLF1
.
          GOTO      RMHL0000
.
RMHL9999  RETURN
+
.*************************************************************************
.* RMLD0000  : remove all records from patldfaf                          *
.*************************************************************************
RMLD0000  PACK      KEY31,SP70
          CALL      RSPTLDF1
          CALL      RKPTLDF1
          BRANCH    OVRCD,RMLD9999
.
          PACK      KEY31,PTLDCNID,PTLDCLMN,PTLDHFND,PTLDTABT,PTLDCASM,DPTLDEDA
          CALL      DEPTLDF1
.
          GOTO      RMLD0000
.
RMLD9999  RETURN
+
.*************************************************************************
.* RMHD0000  : remove all records from pathdfaf                          *
.*************************************************************************
RMHD0000  PACK      KEY31,SP70
          CALL      RSPTHDF1
          CALL      RKPTHDF1
          BRANCH    OVRCD,RMHD9999
.
          PACK      KEY31,PTHDCNID,PTHDCLMN,PTHDHFND,PTHDTABT,PTHDCASM,DPTHDEDA
          CALL      DEPTHDF1
.
          GOTO      RMHD0000
.
RMHD9999  RETURN
+
.*************************************************************************
.* RMAF0000  : remove all records from patafeaf                          *
.*************************************************************************
RMAF0000  PACK      KEY34,SP70
          CALL      RSPTAFE1
          CALL      RKPTAFE1
          BRANCH    OVRCD,RMAF9999
.
          PACK      KEY34,PTFECNID,PTFECLMN,PTFEHFND,PTFETABT,PTFECASM:
                          PTFEBTYP,DPTFEEDA
          CALL      DEPTAFE1
.
          GOTO      RMAF0000
.
RMAF9999  RETURN
+
.*************************************************************************
.* RMOV0000  : remove all records from patovbaf                          *
.*************************************************************************
RMOV0000  PACK      KEY30,SP70
          CALL      RSPTOVB1
          CALL      RKPTOVB1
          BRANCH    OVRCD,RMOV9999
.
          PACK      KEY30,PTOBCNID,PTOBCODE,PTOBFUND,PTOBTBLT,PTOBCSCD,PTOBBRCD
          CALL      DEPTOVB1
.
          GOTO      RMOV0000
.
RMOV9999  RETURN
+
.*************************************************************************
.* RMIO0000  : remove all records from patiovaf                          *
.*************************************************************************
RMIO0000  PACK      KEY30,SP70
          CALL      RSPTIOV1
          CALL      RKPTIOV1
          BRANCH    OVRCD,RMIO9999
.
          PACK      KEY30,PTIOCNID,PTIOCODE,PTIOFUND,PTIOTBLT,PTIOCSCD,PTIOBRCD
          CALL      DEPTIOV1
.
          GOTO      RMIO0000
.
RMIO9999  RETURN
.
.**************************************************************************
.*                               ODUP0000              Called by: ML1800  *
.* Overnight fee health fund duplication new file                          *
.**************************************************************************
ODUP0000  
ODUP9999  RETURN
.
.******************************************************************************
.*                         OOPT0000                                           *
.*                         Keyin sub-options                                  *
.******************************************************************************
OOPT0000  DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Fixed Charge ":
                    *P1:6,*V2LON,"2",*HOFF," = Low Outliers Charge":
                    *P1:7,*V2LON,"3",*HOFF," = High Outliers Charge":
                    *P1:8,*V2LON,"4",*HOFF," = Additional Charge ":
                    *P1:9,*V2LON,"5",*HOFF," = All Above";
.
          DISPLAY   *P1:11,"Select Option : ";
.
OOPT1000  KEYIN     *P17:11,*V2LON,FORM1;  
          MOVE      ZERO,EXIT
          BRANCH    FORM1,OOPT2000,OOPT2100,OOPT2200,OOPT2300,OOPT2900
          COMPARE   ZERO,FORM1
          GOTO      OOPT9000 IF EQUAL
.
          BEEP
          GOTO      OOPT1000
.
OOPT2000  DISPLAY   *P55:3,*HON,"FIXED CHARGE";
          MOVE      ONE,CHRGFLG
          GOTO      OOPT9999
.
OOPT2100  DISPLAY   *P55:3,*HON,"LOW OUTLIER ";
          MOVE      TWO,CHRGFLG
          GOTO      OOPT9999
.
OOPT2200  DISPLAY   *P55:3,*HON,"INLIER/HIGH ";
          MOVE      THREE,CHRGFLG
          GOTO      OOPT9999
.
OOPT2300  DISPLAY   *P55:3,*HON,"ADDITIONAL CHARGE";
          MOVE      FOUR,CHRGFLG
          GOTO      OOPT9999
.
OOPT2900  DISPLAY   *P55:3,*HON,"ALL";      
          MOVE      ONE,CHRGFLG
          MOVE      ONE,ALLFLG
          GOTO      OOPT9999
.
OOPT9000  MOVE      ONE,EXIT
OOPT9999  RETURN
.
.******************************************************************************
.*                                 OPFL0000                                   *
.*                              Display Duplication option screen             *
.******************************************************************************
OPFL0000  IF        OPTION = 9
            DISPLAY   *P1:4,*EF;
          ELSE
            DISPLAY   *P1:4,*EF,*V2LON,"   Copy From",*HOFF;
          ENDIF
.
          DISPLAY   *P10:5,"   Claim Code    : ": 
                    *P10:6,"   Health Fund   : ": 
                    *P10:7,"   Table Type    : ":
                    *P10:8,"   Casemix Code  : ";  
.
          DISPLAY   *P70:22,*EL,*V2LON,EXITCHAR,*HOFF," - Exit ";
.
          MOVE      "9",EVERT
          IF        CHRGFLG = 4 | ALLFLG = 1
            DISPLAY   *P10:EVERT,"   Bed Type      :";      
            ADD       ONE,EVERT
          ENDIF
.
          COMPARE   NINE,OPTION
          GOTO      OPFL9999 IF EQUAL
.
          DISPLAY   *P1:12,*V2LON,"   Copy To",*HOFF:
                    *P10:13,"   Claim Code    : ":     
                    *P10:14,"   Health Fund   : ":     
                    *P10:15,"   Table Type    : ":    
                    *P10:16,"   Casemix Code  : ";   
.
          MOVE      "17",EVERT
          IF        CHRGFLG = 4 | ALLFLG = 1
            DISPLAY   *P10:EVERT,"   Bed Type      :"; 
            ADD       ONE,EVERT
          ENDIF
.
OPFL9999  RETURN
.
.******************************************************************************
.*                                 OYFL0000                                   *
.*                              Duplication option                            *
.******************************************************************************
.         Keyin fields copying from
.
OYFL0000  CALL      OLRF0000                * Clear variables
          MOVE      "5",EVERT
          CALL      OCLM0000                * Keyin claim code
          BRANCH    EXIT,OYFL9999,OYFL9999
          MOVE      TEMPCLMN,FTCLMN
.
OYFL1000  MOVE      "6",EVERT
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,TABFLG
          CALL      OFND0000                * Keyin health fund
          MOVE      TEMPHFND,FTHFND
          MOVE      SP10,FTTABT
          IF        EXIT = 1
            MOVE      ONE,FNDFLG
            MOVE      ONE,TABFLG            * flag for all tables
          ENDIF
          BRANCH    EXIT,OYFL3000,OYFL9999,OYFL3000
.
OYFL2000  MOVE      "7",EVERT
          CALL      OTAB0000                * Keyin table type
          MOVE      TEMPTABT,FTTABT
          BRANCH    EXIT,OYFL3000,OYFL9999
.
OYFL3000  MOVE      ZERO,EXIT
          MOVE      "8",EVERT
          MOVE      ZERO,CSMFLG
          CALL      OCMX0000                * Keyin casemix code
          MOVE      TEMPCASM,FTCASM
          BRANCH    EXIT,OYFL3500,OYFL9999,OYFL2000
.
OYFL3500  MOVE      "9",EVERT
          IF        CHRGFLG = 4 | ALLFLG = 1
            CALL      OBTP0000              * Keyin bed type
            MOVE      TEMPBTYP,FTBTYP
            ADD       ONE,EVERT
          ENDIF
.
.         Global deletion ?
.
          IF        OPTION = 9
            BRANCH    EXIT,OYFL8000,OYFL9999
            GOTO      OYFL8000
          ELSE
            BRANCH    EXIT,OYFL4000,OYFL9999
          ENDIF
.
.         Keyin fields copying to
.
OYFL4000  MOVE      ONE,CPTOFLG
          MOVE      "13",EVERT
          CALL      OCLM0000                * Keyin claim code
          BRANCH    EXIT,OYFL3500
          MOVE      TEMPCLMN,TTCLMN
          BRANCH    EXIT,OYFL5000,OYFL9999
.
OYFL5000  MOVE      "14",EVERT
          CALL      OFND0000                * Keyin health fund
          BRANCH    EXIT,OYFL7000,OYFL9999,OYFL7000
          MOVE      TEMPHFND,TTHFND
.
OYFL6000  MOVE      "15",EVERT
          CALL      OTAB0000                * Keyin health fund table
          MOVE      TEMPTABT,TTTABT
          BRANCH    EXIT,OYFL7000,OYFL9999
.
OYFL7000  MOVE      ZERO,EXIT
          MOVE      "16",EVERT
          CALL      OCMX0000                * Keyin casemix code
          MOVE      TEMPCASM,TTCASM
          BRANCH    EXIT,OYFL7500,OYFL9999,OYFL5000
.
OYFL7500  MOVE      "17",EVERT
          IF        CHRGFLG = 4 | ALLFLG = 1
            CALL      OBTP0000              * Keyin bed type
            MOVE      TEMPBTYP,TTBTYP
            BRANCH    EXIT,OYFL8000,OYFL9999
            ADD       ONE,EVERT
          ENDIF
.
OYFL8000  CALL      CONTQST
          MOVE      ONE,EXIT
          BRANCH    CEXIT,OYFL9000,OYFL8200,OYFL9999  * Yes,no,cancel
.
OYFL8200  CALL      OPFL0000
          MOVE      ZERO,EXIT
          GOTO      OYFL0000
.
OYFL9000  MOVE      ZERO,EXIT
OYFL9999  RETURN
.
.******************************************************************************
.*                                 OLRF0000                                   *
.*                          Clear variables                                   *
.******************************************************************************
OLRF0000  UNPACK    SP70,PTHLCLMN,PTHLHFND,PTHLTABT,PTHLCASM,PTHLCNID
          UNPACK    SP70,PTLDCLMN,PTLDHFND,PTLDTABT,PTLDCASM,PTLDCNID
          UNPACK    SP70,PTHDCLMN,PTHDHFND,PTHDTABT,PTHDCASM,PTHDCNID
          UNPACK    SP70,PTFECLMN,PTFEHFND,PTFETABT,PTFECASM,PTFEBTYP,PTFECNID
          UNPACK    SP30,FTCLMN,FTHFND,FTTABT,FTCASM,FTBTYP
          UNPACK    SP30,TTCLMN,TTHFND,TTTABT,TTCASM,TTBTYP
          UNPACK    SP30,TEMPCLMN,TEMPHFND,TEMPTABT,TEMPCASM,TEMPBTYP
.
          MOVE      ZERO,CLMFLG
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,TABFLG
          MOVE      ZERO,CSMFLG
          MOVE      ZERO,BTPFLG
.
OLRF1000  MOVE      SP10,PTHLDES1
          PACK      PTHLDES1,SP20,SP20
          PACK      PTHLDES2,SP20,SP20
          MOVE      ZERO,PTHLLREB
          MOVE      ZERO,PTHLLPAT
          MOVE      ZERO,PTHLINVB        
          MOVE      ZERO,PTHLINVI       
          MOVE      ZERO,PTHLNINV      
          MOVE      ZERO,PTHLCOFF
.
          MOVE      ZERO,PTLDEDAY
          PACK      PTLDDES1,SP20,SP20
          PACK      PTLDDES2,SP20,SP20
          MOVE      ZERO,PTLDDREB
          MOVE      ZERO,PTLDDPAT
.
          MOVE      ZERO,PTHDEDAY
          PACK      PTHDDES1,SP20,SP20
          PACK      PTHDDES2,SP20,SP20
          MOVE      ZERO,PTHDDREB
          MOVE      ZERO,PTHDDPAT
          MOVE      ZERO,PTHDDTYP
.
          MOVE      SP10,PTFEEDAY
          PACK      PTFEDES1,SP20,SP20
          PACK      PTFEDES2,SP20,SP20
          MOVE      ZERO,PTFEDREB
          MOVE      ZERO,PTFEDPAT
          MOVE      SP70,PTFEACIN
          MOVE      SP70,PTFECNID
          MOVE      SP70,PTFEFIGR
          MOVE      SP70,PTFENPDY
          MOVE      ZERO,CPTOFLG            * Flag for keyin fields copying to
OLRF9999  RETURN
.
.******************************************************************************
.*                         OCLM0000                                           *
.*                         Keyin claim code                                   *
.******************************************************************************
OCLM0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * Display description position
          MOVE      SP10,TEMPCLMN
.
          MOVE      ZERO,EXIT
          IF        CPTOFLG = 1 & CLMFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      OCLM9999
          ENDIF
.
          MOVE      SP3,ACODE
          MOVE      "CL",CODE
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY                * keyin code
          BRANCH    EXIT,OCLM1000,OCLM9000  * Nothing,exit entered
          MOVE      ACODE,TEMPCLMN
.
OCLM1000  IF        OPTION = 8 | OPTION = 9
            IF        EXIT = 1
              IF        CLMFLG = 0 & CPTOFLG = 1
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      OCLM0000
              ELSE
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
              ENDIF
.
              IF        CPTOFLG = 0
                MOVE      ONE,CLMFLG            * Flag for all claim code
              ENDIF
              GOTO      OCLM9999
            ENDIF
          ENDIF
          DISPLAY   *PECOL1:EVERT,*V2LON,TDESC;
          GOTO      OCLM9999
.
OCLM9000  MOVE      ONE,EXIT
.
OCLM9999  RETURN
.
.******************************************************************************
.*                         OFND0000                                           *
.*                         Keyin Health fund                                  *
.******************************************************************************
OFND0000  MOVE      SP6,TEMPHFND
          MOVE      SP10,TEMPTABT
          MOVE      "29",ECOL
          MOVE      "36",ECOL1
.
          IF        CPTOFLG = 1 & FNDFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            ADD       ONE,EVERT
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      OFND9999
          ENDIF
.
          MOVE      ZERO,CKYIMAND
          MOVE      SP20,HFNAME
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATFNDKY
          PACK      TEMPHFND,HCODE
          BRANCH    EXIT,OFND9000:          * Nothing entered
                         OFND9999           * Exitchar entered
.
OFND9000  IF        OPTION = 8 | OPTION = 9
.
.         for duplication option, check if spaces or eos entered
.
            IF        EXIT = 1
              IF        CPTOFLG = 0
                MOVE      ONE,FNDFLG       * flag for all health fund
                MOVE      ONE,TABFLG       * flag for all tables
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
                ADD       ONE,EVERT
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
                GOTO      OFND9999
              ENDIF
.
.         if the 'copy from' hf was not ALL, the 'copy to' hf can not be ALL
.
              IF        CPTOFLG = 1 & FNDFLG = 0
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      OFND0000
              ENDIF
            ENDIF
.
            DISPLAY   *PECOL1:EVERT,*V2LON,HFNAME;
.
.         Insert/change options
.
          ENDIF
.
OFND9200  DISPLAY   *PECOL1:EVERT,*V2LON,HFNAME;
OFND9999  RETURN
+
.******************************************************************************
.*                         OTAB0000                                           *
.*                         Keyin Table Type                                   *
.******************************************************************************
OTAB0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * display description position
          MOVE      SP10,TEMPTABT
.
          IF        CPTOFLG = 1 & TABFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      OTAB9999
          ENDIF
.
          MOVE      "HT",CODE
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY
          BRANCH    EXIT,OTAB9000,OTAB9999  * nothing,exit entered
          MOVE      ACODE,TEMPTABT
.
OTAB9000  IF        OPTION = 8 | OPTION = 9
            IF        EXIT = 1
              IF        TABFLG = 0 & CPTOFLG = 1
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      OTAB0000
              ELSE
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
              ENDIF
.
              IF        CPTOFLG = 0
                MOVE      ONE,TABFLG        * flag for all tables
              ENDIF
              GOTO      OTAB9999
            ENDIF
          ENDIF
          DISPLAY   *PECOL1:EVERT,*V2LON,TDESC;
.
OTAB9999  RETURN
.
.******************************************************************************
.*                                 OCMX0000                                   *
.*                         Keyin Casemix code                                 *
.******************************************************************************
OCMX0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * display description position
.
          MOVE      ZERO,EXIT
          MOVE      ZERO,TEMPFLAG
.
          IF        CPTOFLG = 1 & CSMFLG = 1
            DISPLAY   *PECOL1:EVERT,*V2LON,"All";
            GOTO      OCMX9999
          ENDIF
.
          MOVE      SP9,INSRTCD
          KEYIN     *PECOL:EVERT,*EL,INSRTCD
.
          RESET     INSRTCD
          MATCH     SP9,INSRTCD              * nothing entered ?
          IF        @EQUAL
            IF        OPTION = 8
              MOVE      ONE,EXIT
              GOTO      OCMX9000
            ELSE
              GOTO      OCMX9500
            ENDIF
          ENDIF
.
          MATCH     INSRTCD,QUEST            * question mark entered ?
          GOTO      OCMX1000 IF EQUAL
.
          PACK      KEY9,INSRTCD
          CALL      RDPTCMC1
          IF        OVRCD=1
            DISPLAY   *P1:24,"Invalid Code. ";
            CALL      HITENTER
            GOTO      OCMX0000
          ENDIF
.
          PACK      TEMPCASM,PTCACODE,SP10
          DISPLAY   *PECOL:EVERT,PTCACODE,*PECOL1:EVERT,*EL,*V2LON,PTCADES1;
.
          GOTO      OCMX9000
.
.
OCMX1000  MOVE      SP10,TEMPCASM
          CALL      HPTCAA00
.
          MATCH     KEY9,SP9                 * anything selected ?
          GOTO      OCMX0000 IF EQUAL
          CALL      RDPTCMC1
          IF        OVRCD=1
            DISPLAY   *P1:24,"Invalid Code. ";
            CALL      HITENTER
            GOTO      OCMX0000
          ENDIF
.
          PACK      TEMPCASM,PTCACODE,SP10
          DISPLAY   *PECOL:EVERT,PTCACODE,*PECOL1:EVERT,*EL,*V2LON,PTCADES1;
.
OCMX9000  IF        OPTION = 8 | OPTION = 9
            IF        EXIT = 1
              IF        CSMFLG = 0 & CPTOFLG = 1
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      OCMX0000
              ELSE
                DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
              ENDIF
.
              IF        CPTOFLG = 0
                MOVE      ONE,CSMFLG            * flag for all casemix code
              ENDIF
            ENDIF
          ENDIF
          GOTO      OCMX9999
.
OCMX9500  MOVE      ONE,EXIT
.
OCMX9999  RETURN
.
.******************************************************************************
.*                                 OBTP0000                                   *
.*                         Keyin Bed type                                     *
.******************************************************************************
OBTP0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * display description position
          MOVE      SP10,TEMPBTYP
.
          IF        CPTOFLG = 1 & BTPFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      OBTP9999
          ENDIF
.
          MOVE      "BT",CODE
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY
          MOVE      ACODE,TEMPBTYP
          DISPLAY   *PECOL1:EVERT,*V2LON,TDESC;
.
OBTP9000  IF        OPTION = 8 | OPTION = 9
            IF        EXIT = 1
              IF        BTPFLG = 0 & CPTOFLG = 1
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      OBTP0000
              ELSE
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
              ENDIF
.
              IF        CPTOFLG = 0
                 MOVE     ONE,BTPFLG            * flag for all bed type
              ENDIF
            ENDIF
          ENDIF
.
OBTP9999  RETURN
+
.**************************************************************************
.*                               ODEL0000              Called by: ML1200  *
.* Global deletion of sameday fees from the new files                     *
.**************************************************************************
.
ODEL0000  
ODEL9999  RETURN
.
.**************************************************************************
.*                               COVR0000              Called by: ML2000  *
.* Copy overnight rates to sameday rates                                  *
.**************************************************************************
COVR0000  
COVR9999  RETURN
.
.**************************************************************************
.*                               NNZB0000              Called by: ML0000  *
.* Create new nz bed fee file. This will delete all records from the new  *
.* bed fee file and load the current file records.                        *
.**************************************************************************
NNZB0000  KEYIN     *P1:24,*EL:
                    "Are You Sure You Want to Overwrite the New File (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      NNZB1000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      NNZB9500 IF EQUAL
.
          BEEP
          GOTO      NNZB0000
.
NNZB1000  KEYIN     *P1:24,*EL,"Do You Want to Start with a Copy of the":
                    " Current Data (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      NNZB9000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      NNZB2000 IF EQUAL
.
          BEEP
          GOTO      NNZB1000
.
NNZB2000  KEYIN     *P1:24,*EL,"You Will Lose All Current Bed Fees When":
                    " you Update.  Are You Sure (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,DIM1;
.
          REP       UPPLOW,DIM1
          MATCH     ANSY,DIM1
          GOTO      NNZB8000 IF EQUAL
.
          MATCH     ANSN,DIM1
          GOTO      NNZB9500 IF EQUAL
.
          BEEP
          GOTO      NNZB2000
.
NNZB8000  CALL      DNNZ0000                * Delete all record from new file
          MOVE      ZERO,EXIT               * Do not load current file date
          GOTO      NNZB9600
.
NNZB9000  CALL      DNNZ0000                * Delete all records from new file
          CALL      LNNZ0000                * Load current record to new file
.
          MOVE      ZERO,EXIT
          GOTO      NNZB9600
.
NNZB9500  MOVE      ONE,EXIT
.
NNZB9600  MOVE      SP10,PTCNWBFE
          WRITAB    CONTROLF,HUND10;*11,PTCNWBFE
NNZB9999  RETURN
+
.**************************************************************************
.*                               LNNZ0000              Called by: NNZB0000*
.* Load current nz bed fee data to the new bed fee file                   *
.**************************************************************************
LNNZ0000  PACK      KEY37,SP70
          CALL      RSNZBFE1
LNNZ1000  CALL      RKNZBFE1
          BRANCH    OVRCD,LNNZ9999         * End of old file
.
          PACK      KEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                          NZBFBTYP,NZBFEFDT,NZBFEDAY,SP70
.
          CALL      WRNZBF11               * Write to new file
.
          GOTO      LNNZ1000
.
LNNZ9999  RETURN
+
.**************************************************************************
.*                               LNNZ0000              Called by: NNZB0000*
.* Load new nz bed fee data to the current bed fee file                   *
.**************************************************************************
LNCR0000  PACK      KEY37,SP70
          CALL      RSNZBF11
LNCR1000  CALL      RKNZBF11
          BRANCH    OVRCD,LNNZ9999         * End of old file
.
          PACK      KEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                          NZBFBTYP,NZBFEFDT,NZBFEDAY,SP70
.
          CALL      WRNZBFE1               * Write to new file
.
          GOTO      LNCR1000
.
LNCR9999  RETURN
+
.**************************************************************************
.*                               DNNZ0000              Called by: NNZB0000*
.* Delete all of the new nz bed fee file records                          *
.**************************************************************************
DNNZ0000  PACK      KEY37,SP70
          CALL      RSNZBF11
DNNZ1000  CALL      RKNZBF11
          BRANCH    OVRCD,DNNZ9999         * End of old file
.
          PACK      KEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                          NZBFBTYP,NZBFEFDT,NZBFEDAY,SP70
.
          CALL      DENZBF11               * delete new file  
.
          GOTO      DNNZ0000
.
DNNZ9999  RETURN
+
.**************************************************************************
.*                               DLCR0000              Called by: NNZB0000*
.* Delete all of the current nz bed fee file records                      *
.**************************************************************************
DLCR0000  PACK      KEY37,SP70
          CALL      RSNZBFE1
DLCR1000  CALL      RKNZBFE1
          BRANCH    OVRCD,DLCR9999         * End of old file
.
          PACK      KEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                          NZBFBTYP,NZBFEFDT,NZBFEDAY,SP70
.
          CALL      DENZBFE1               * delete new file
.
          GOTO      DLCR0000
.
DLCR9999  RETURN
+
.**************************************************************************
.                    GUPC0000                     Called by : OPTN0000    *
.         Global update for nz bed fee charges in the new bed fee file    *
.**************************************************************************
GUPC0000  CALL      DISC0000
.
          MOVE      SP3,SAVHOSP
          MOVE      SP3,SAVCLM
          MOVE      ZERO,CLMFLG
          CALL      INTV0000
          CALL      DISPCL00
.
          CALL      KHOS0000
          MOVE      HOSPID,NZBFHOSP
          MOVE      NZBFHOSP,SAVHOSP
.
GUPC1000  DISPLAY   *P26:5,*EL;
          MOVE      ONE,CNEWDS
          MOVE      FIVE,EVERT
          MOVE      TWENTY6,ECOL
          MOVE      CODECL,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,GUPC1100,GUPC9500
          MOVE      ACODE,NZBFCLMC
          MOVE      TDESC,CLDES
          MOVE      NZBFCLMC,SAVCLM
          GOTO      GUPC1200
.
.         Nothing entered. Assume all
.
GUPC1100  PACK      CLDES,DALL,SP20
          DISPLAY   *P26:5,*V2LON,CLDES;
          MOVE      SP3,NZBFCLMC
          MOVE      ONE,CLMFLG
          GOTO      GUPC2000
.
GUPC1200  DISPLAY   *P26:5,*V2LON,NZBFCLMC,*HOFF,*P35:5,CLDES;
.
.         INPUT HEALTH FUND
.
GUPC2000  MOVE      SP6,NZBFCNTR
          MOVE      SP6,SAVFUND
          MOVE      SP8,NZBFFTAB
          MOVE      SP8,SAVTAB
          MOVE      SP30,FCODDES
          MOVE      SP30,FTABDES
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,TABFLG
.
          DISPLAY   *P26:6,*EL,*P26:7,*EL;
          MOVE      TWENTY6,ECOL
          MOVE      SIX,EVERT
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY
          BRANCH    EXIT,GUPC2200,GUPC9500
          MOVE      HCODE,NZBFCNTR
          GOTO      GUPC2300
.
GUPC2200  PACK      FCODDES,DALL,SP30
          DISPLAY   *P26:6,*EL,*V2LON,FCODDES;
          PACK      FTABDES,DALL,SP30
          DISPLAY   *P26:7,*EL,*V2LON,FTABDES;
.
          MOVE      SP6,NZBFCNTR
          MOVE      ONE,FNDFLG
          MOVE      ONE,TABFLG
          GOTO      GUPC4000
.
GUPC2300  MOVE      NZBFCNTR,SAVFUND
          MOVE      HFNAME,FCODDES
.
          DISPLAY   *P26:6,*EL,*V2LON,NZBFCNTR,*HOFF,*P35:6,FCODDES;
.
.         INPUT HEALTH FUND TABLE
.
GUPC3000  MOVE      SP8,NZBFFTAB
          MOVE      SP8,SAVTAB
          MOVE      SP30,FTABDES
          MOVE      ZERO,TABFLG
          MOVE      NZBFCNTR,MHFUND
          MOVE      ZERO,CKYIMODE
          MOVE      TWENTY6,ECOL
          MOVE      SEVEN,EVERT
.
          MATCH     SP6,HCODE
          GOTO      GUPC3100 IF EQUAL
.
          CALL      PATTBLKY
          BRANCH    EXIT,GUPC3050,GUPC9500
          MOVE      HFTABL,NZBFFTAB
          GOTO      GUPC3100
.
.         Nothing entered
.
GUPC3050  PACK      FTABDES,DALL,SP30
          DISPLAY   *P26:7,*EL,*V2LON,FTABDES;
          MOVE      SP8,NZBFFTAB
          MOVE      ONE,TABFLG
          GOTO      GUPC4000
.
GUPC3100  MOVE      NZBFFTAB,SAVTAB
          MOVE      HFNAME,FTABDES
          DISPLAY   *P26:7,*EL,*V2LON,NZBFFTAB,*HOFF,*P35:7,FTABDES;
.
.         INPUT ADMISSION TYPE
.
GUPC4000  MOVE      SP3,NZBFATYP
          MOVE      SP3,SAVATYP
          MOVE      SP20,ATYPDES
          MOVE      ZERO,ATYPFLG
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      EIGHT,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODEA,CODE
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,GUPC4100,GUPC9500
          MOVE      ACODE,NZBFATYP
          MOVE      TDESC,ATYPDES
          GOTO      GUPC4200
.
GUPC4100  PACK      ATYPDES,DALL,SP20
          DISPLAY   *P26:8,*V2LON,ATYPDES;
          MOVE      SP3,NZBFATYP
          MOVE      ONE,ATYPFLG
          GOTO      GUPC5000
.
GUPC4200  MOVE      NZBFATYP,SAVATYP
.
          DISPLAY   *P26:8,*V2LON,NZBFATYP,*HOFF,*P35:8,ATYPDES;

.
.         INPUT BED TYPE
.
GUPC5000  MOVE      SP3,NZBFBTYP
          MOVE      SP3,SAVBTYP
          MOVE      SP20,BTYPDES
          MOVE      ZERO,BTYPFLG
.
          DISPLAY   *P26:9,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      NINE,EVERT
          MOVE      CODEBT,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,GUPC5100,GUPC9500
          MOVE      ACODE,NZBFBTYP
          GOTO      GUPC5200
.
GUPC5100  PACK      BTYPDES,DALL,SP20
          DISPLAY   *P26:9,*V2LON,BTYPDES;
          MOVE      SP3,NZBFBTYP
          MOVE      ONE,BTYPFLG
          GOTO      GUPC6000
.
.         Check what was entered
.
GUPC5200  MOVE      NZBFBTYP,SAVBTYP
          MOVE      TDESC,BTYPDES
.
          DISPLAY   *P26:9,*V2LON,NZBFBTYP,*HOFF,*P35:9,BTYPDES;
.
.         Finished Bed Type. Check the option to determine what to do next
.
.         INPUT HIGHEST DAY IN PERIOD
.
GUPC6000  MOVE      ZERO,NZBFEDAY
          MOVE      ZERO,LSTFLG
          MOVE      SP3,DIM3
.
          KEYIN     *P26:10,*EL,*V2LON,*JR,DIM3;
GUPC6100  RESET     DIM3
          GOTO      GUPC6200 IF NOT EOS
.
          MOVE      "ALL",DIM3
          DISPLAY   *P26:10,*EL,*V2LON,DIM3;
          MOVE      ONE,LSTFLG
          MOVE      DIM3,NZBFEDAY
          MOVE      NZBFEDAY,SAVENDD
          GOTO      GUPC6400
.
GUPC6200  MATCH     "  ?",DIM3
          GOTO      GUPC6500 IF EQUAL
.
          TYPE      DIM3
          GOTO      GUPC6900 IF NOT EQUAL
.
          MOVE      DIM3,NZBFEDAY
.
          COMPARE   ONE,CLMFLG
          GOTO      GUPC6300 IF EQUAL
.
          COMPARE   ONE,FNDFLG
          GOTO      GUPC6300 IF EQUAL
.
          COMPARE   ONE,TABFLG
          GOTO      GUPC6300 IF EQUAL
.
          COMPARE   ONE,ATYPFLG
          GOTO      GUPC6300 IF EQUAL
.
          COMPARE   ONE,BTYPFLG
          GOTO      GUPC6300 IF EQUAL
.
          PACK      KEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                          NZBFBTYP,NZBFEFDT,NZBFEDAY,SP70
          CALL      RSNZBF11             * new file
          CALL      RKNZBF11
          BRANCH    OVRCD OF GUPC6900
.
          PACK      DIM37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                          NZBFBTYP,NZBFEFDT,NZBFEDAY,SP70
          MATCH     DIM37,KEY37
          GOTO      GUPC6900 IF NOT EQUAL
.
GUPC6300  MOVE      NZBFEDAY,SAVENDD
          DISPLAY   *P26:10,*EL,*V2LON,NZBFEDAY;
.
GUPC6400  MOVE      MODE1,MODE
          GOTO      GUPC7000
GUPC6500  MOVE      SIX,CVERT
          DISPLAY   *P1:4,*EF,*P20:4,*V2LON,*ULON:
                    "LAST DAY IN PERIOD",*HOFF;
.
          PACK      DIM26,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                           NZBFBTYP,SP70
.
          PACK      KEY37,DIM26,SP70
          CALL      RSNZBF11             * new file
GUPC6600  CALL      RKNZBF11             * new file
          BRANCH    OVRCD OF GUPC6700
.
          PACK      DIM26A,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                           NZBFBTYP,SP70
.
          MATCH     DIM26,DIM26A
          GOTO      GUPC6700 IF NOT EQUAL
.
          DISPLAY   *P3:CVERT,*V2LON,NZBFEDAY," - ",*HOFF,NZBFDESC;
          ADD       ONE,CVERT
          GOTO      GUPC6600
.
GUPC6700  MOVE      SAVHOSP,NZBFHOSP
          MOVE      SAVCLM,NZBFCLMC
          MOVE      SAVFUND,NZBFCNTR
          MOVE      SAVTAB,NZBFFTAB
          MOVE      SAVATYP,NZBFATYP
          MOVE      SAVBTYP,NZBFBTYP
          MOVE      ZERO,NZBFEDAY
          MOVE      ZERO,LSTFLG
          MOVE      SP3,DIM3
          KEYIN     *P1:24,*EL,"Last Day in Period : ",*V2LON,*JR,DIM3;
          CALL      RDIS0000
          GOTO      GUPC6100
.
GUPC6900  DISPLAY   *P1:24,*EL,*B,"Invalid Last Day in Period. ";
          CALL      HITENTER
          GOTO      GUPC6000
.
.         INPUT $ OR % INCREASE
.
GUPC7000  MOVE      SP1,INCR
          MOVE      SP30,INCDESC
          KEYIN     *P26:12,*EL,*V2LON,INCR;
.
          BRANCH    INCR,GUPC7100,GUPC7100
.
          DISPLAY   *P1:24,*EL,*B,"1 or 2 ONLY. ";
          CALL      HITENTER
          GOTO      GUPC7000
.
GUPC7100  LOAD      INCDESC,INCR,INCDES1,INCDES2
          DISPLAY   *P26:12,*EL,*V2LON,INCDESC,*P45:13,*EL,*P45:14,*EL;
.
.         INPUT PATIENT PORTION OF RATE
.
GUPC8000  COMPARE   ONE,INCR
          GOTO      GUPC8100 IF NOT EQUAL
.
          DISPLAY   *P26:16,*EL,*V2LON,"$";
          GOTO      GUPC8200
.
GUPC8100   DISPLAY   *P26:16,*EL,*V2LON,"%";
.
GUPC8200  MOVE      ZERO,PTPORT
          KEYIN     *P28:16,*EL,*V2LON,PTPORT,*P28:16,*DV,PTPORT;
.
.         INPUT HEALTH FUND PORTION OF RATE
.
GUPC8500  COMPARE   ONE,INCR
          GOTO      GUPC8600 IF NOT EQUAL
.
          DISPLAY   *P26:17,*EL,*V2LON,"$";
          GOTO      GUPC8700
.
GUPC8600  DISPLAY   *P26:17,*EL,*V2LON,"%";
.
GUPC8700  MOVE      ZERO,RTPORT
          KEYIN     *P28:17,*EL,*V2LON,RTPORT,*P28:17,*DV,RTPORT;
.
          CALL      CONTQST
          BRANCH    CEXIT,GUPC9000,GUPC0000,GUPC9600
          GOTO      GUPC9500
.
GUPC9000  CALL      GUPD0000                * Prorcess global update
          MOVE      ZERO,EXIT
          GOTO      GUPC9600
.
GUPC9500  MOVE      ONE,EXIT

GUPC9600  MOVE      SP10,PTCNWBFE
          WRITAB    CONTROLF,HUND10;*11,PTCNWBFE
.
GUPC9999  RETURN
.
.**************************************************************************
.                    GUPD0000                     Called by : GUPC0000    *
.        Process global update of bed fee charges in the new file         *
.**************************************************************************
GUPD0000  DISPLAY   *P1:24,*EL,*P40:24,"Claim Code : ",*P60:24,"Scanning : ";
          PACK      KEY37,SP70
          CALL      RSNZBF11             * new file
GUPD1000  CALL      RKNZBF11             * new file
          BRANCH    OVRCD,GUPD9999
.
          MATCH     SAVHOSP,NZBFHOSP
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD1500  DISPLAY   *P72:24,NZBFCLMC;
.
          COMPARE   ONE,CLMFLG
          GOTO      GUPD2000 IF EQUAL
.
          MATCH     SAVCLM,NZBFCLMC
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD2000  COMPARE   ONE,FNDFLG
          GOTO      GUPD3000 IF EQUAL
.
          MATCH     SAVFUND,NZBFCNTR
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD3000  COMPARE   ONE,TABFLG
          GOTO      GUPD4000 IF EQUAL
.
          MATCH     SAVTAB,NZBFFTAB
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD4000  COMPARE   ONE,ATYPFLG
          GOTO      GUPD5000 IF EQUAL
.
          MATCH     SAVATYP,NZBFATYP
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD5000  COMPARE   ONE,BTYPFLG
          GOTO      GUPD6000 IF EQUAL
.
          MATCH     SAVBTYP,NZBFBTYP
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD6000  COMPARE   ONE,LSTFLG
          GOTO      GUPD7000 IF EQUAL
.
          MOVE      ZERO,F3
          MOVE      NZBFEDAY,F3
          COMPARE   SAVENDD,F3
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD7000  COMPARE   ONE,INCR
          GOTO      GUPD8000 IF NOT EQUAL
.
          ADD       PTPORT,NZBFRATE
          ADD       RTPORT,NZBFREBA
          GOTO      GUPD9000
.
GUPD8000  MOVE      PTPORT,SAVPORT
          DIV       "100",SAVPORT
          ADD       ONE,SAVPORT
          MULT      SAVPORT,NZBFRATE
.
          MOVE      RTPORT,SAVPORT
          DIV       "100",SAVPORT
          ADD       ONE,SAVPORT
          MULT      SAVPORT,NZBFREBA
.
GUPD9000  DISPLAY   *P55:24,*V2LON,NZBFCLMC;
          CALL      UPNZBF11             * new file
          GOTO      GUPD1000
.
GUPD9999  RETURN
.**************************************************************************
.                    DISPCL00                     Called by : GUPC0000    *
.         Clear screen details                                            *
.**************************************************************************
DISPCL00  DISPLAY   *P26:5,*EL,*P26:6,*EL,*P26:7,*EL,*P26:8,*EL,*P26:9,*EL:
                    *P26:10,*EL,*P1:11,*EL,*P26:12,*EL,*P26:13,SP20:
                    *P26:14,SP20,*P1:15,*EL,*P26:16,*EL,*P26:17,*EL,*P26:18,*EF;
.
          DISPLAY   *P60:23,*EL,"(Hit ",*V2LON,"\",*HOFF," to Exit)";
DISPCL99  RETURN
.
.**************************************************************************
.                    DISC0000                     Called by : GUPC0000    *
.         Display screen for global update of new bed fee file charges    *
.**************************************************************************
DISC0000  DISPLAY   *P50:2,*V2LON,"- Global Update of Charges ";
          IF        IBCNMHOS=1
            GOTO      DISC1000             * Keyin hospital id
          ENDIF
.
          DISPLAY   *P1:4,*EF:
                    *P1:5,"    Claim Code         :":
                    *P1:6,"    Health Fund        :":
                    *P1:7,"    Health Fund Table  :":
                    *P1:8,"    CMBS Class         :":
                    *P1:9,"    Bed Type           :":
                   *P1:10,"    Last Day in Period :":
                   *P1:11,"    ",*V2LON,"$",*HOFF," or ",*V2LON,"%",*HOFF:
                          " Increase    :":
                  *P46:13,*V2LON,"1",*HOFF," = Fixed Dollar Increase":
                  *P46:14,*V2LON,"2",*HOFF," = Percentage Increase":
                   *P1:16,"    Pat Por. Increase  :":
                   *P1:17,"    Reb Por. Increase  :";
.
          GOTO      DISC9999
.
DISC1000  DISPLAY   *P1:4,*EF:
                    *P1:5,"    Hospital           :":
                    *P1:6,"    Claim Code         :":
                    *P1:7,"    Health Fund        :":
                    *P1:8,"    Health Fund Table  :":
                    *P1:9,"    CMBS Class         :":
                    *P1:10,"    Bed Type           :":
                   *P1:11,"    Last Day in Period :":
                   *P1:13,"    ",*V2LON,"$",*HOFF," or ",*V2LON,"%",*HOFF:
                          " Increase    :":
                  *P46:14,*V2LON,"1",*HOFF," = Fixed Dollar Increase":
                  *P46:15,*V2LON,"2",*HOFF," = Percentage Increase":
                   *P1:17,"    Pat Por. Increase  :":
                   *P1:18,"    Reb Por. Increase  :";
DISC9999  RETURN
.
.**************************************************************************
.                    RDIS0000                     Called by : GUPC0000    *
.      Re-Display screen for global update of new bed fee file charges    *
.**************************************************************************
RDIS0000  CALL      DISC0000
          IF        IBCNMHOS=1
            DISPLAY   *P26:5,*V2LON,NZBFHOSP,*HOFF,*P35:5,PTHSNAME:
                      *P26:6,*V2LON,NZBFCLMC,*HOFF,*P35:5,CLDES:
                      *P26:7,*V2LON,NZBFCNTR,*HOFF,*P35:6,FCODDES:
                      *P26:8,*V2LON,NZBFFTAB,*HOFF,*P35:7,FTABDES:
                      *P26:9,*V2LON,NZBFATYP,*HOFF,*P35:8,ATYPDES:
                      *P26:10,*V2LON,NZBFBTYP,*HOFF,*P35:9,BTYPDES;
            GOTO      RDIS9999
          ENDIF
.
          DISPLAY   *P26:5,*V2LON,NZBFCLMC,*HOFF,*P35:5,CLDES:
                    *P26:6,*V2LON,NZBFCNTR,*HOFF,*P35:6,FCODDES:
                    *P26:7,*V2LON,NZBFFTAB,*HOFF,*P35:7,FTABDES:
                    *P26:8,*V2LON,NZBFATYP,*HOFF,*P35:8,ATYPDES:
                    *P26:9,*V2LON,NZBFBTYP,*HOFF,*P35:9,BTYPDES;
.
.
RDIS9999  RETURN
.
.==============================================================================
.         Keyin hospital ID
.==============================================================================
KHOS0000  MOVE       SP10,PTHSHOSP
          MOVE       SP10,HOSPID
          DISPLAY    *P1:20,*EL,"Hospital Id : ";
          MOVE       TEN5,ECOL
          MOVE       "20",EVERT
          MOVE       SP3,CKYIDEF3
          MOVE       ZERO,CKYIMAND           * Not Mandatory
          OPEN       PATHSPA1,"pathspaf"
.
          CALL       PATHSPKY
          BRANCH     EXIT,KHOS2000,KHOS9999
          MOVE       PTHSHOSP,HOSPID
          GOTO       KHOS3000
.
KHOS2000  MOVE       "All Hospitals",PTHSNAME
          MOVE       SP10,HOSPID
.
KHOS3000  DISPLAY    *P23:23,*V2LON,PTHSNAME;
KHOS9999  RETURN
+
.**************************************************************************
.                    INTV0000                     Called by : OPTN0000    * 
.         Initialize all the variables before start                       *
.**************************************************************************
INTV0000  CALL      CLNZBF00
.
          MOVE      SP3,DIM3
          MOVE      SP30,CLDES
          MOVE      SP30,FCODDES
          MOVE      SP30,FTABDES
          MOVE      SP30,ATYPDES
          MOVE      SP30,BTYPDES
.
          MOVE      SP30,CLDES1
          MOVE      SP30,FCODDES1
          MOVE      SP30,FTABDES1
          MOVE      SP30,ATYPDES1
          MOVE      SP30,BTYPDES1
.
..        MOVE      SP3,KCLTYPE
..        MOVE      SP3,KATYPE
..        MOVE      SP9,KMBSCODE
.
..        MOVE      ZERO,NUMPRD             * clear number of periods
.
....      CALL      CLRV0000
.
INTV9999  RETURN
+
.**************************************************************************
.*                               GDNZ0000              Called by: ML1500  *
.* Global delete of NZ bed fee records from the new file                   *
.**************************************************************************
GDNZ0000  DISPLAY   *P50:2,*V2LON,"- Global Deletion (New file) ";
          CALL      SCRD0000
          CALL      KEYD0000                 * Keyin details
          BRANCH    EXIT,GDNZ9500
.
          CALL      DELQST
          BRANCH    CEXIT,GDNZ8000,GDNZ0000,GDNZ9500
.
GDNZ8000  CALL      DELN0000                 * Delete new bed fee file records
          MOVE      ZERO,EXIT
          GOTO      GDNZ9600
.
GDNZ9500  MOVE      ONE,EXIT
.
GDNZ9600  MOVE      SP10,PTCNWBFE
          WRITAB    CONTROLF,HUND10;*11,PTCNWBFE
.
GDNZ9999  RETURN
.
+
.**************************************************************************
.*                         SCRD0000                                       *
.*  Display screen layout                                                 *
.**************************************************************************
SCRD0000  DISPLAY   *P1:4,*EF:
                    *P1:5,"    Claim Code         :":
                    *P1:6,"    Claim Code         :":
                    *P1:7,"    Health Fund        :":
                    *P1:8,"    Health Fund Table  :":
                    *P1:9,"    CMBS Class         :":
                    *P1:10,"    Bed Type           :";
.
SCRD9999  RETURN
+
.**************************************************************************
.*                            KEYD0000                                    *
.*  Keyin Claim Code, Health Fund, Health Fund Table, Admission Type,     *
.*        Bed Type                                                        *
.*  Called by : GLODEL                                                    *
.**************************************************************************
.         Keyin Claim Code
.
KEYD0000  MOVE      ZERO,EXIT
          IF        IBCNMHOS=1
            CALL      KHOS0000
            MOVE      HOSPID,NZBFHOSP
          ENDIF
          DISPLAY   *P26:6,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      SIX,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          PACK      CODE,ANSC,ANSL,SP70
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,KEYD1100,KEYD9000
          MOVE      ACODE,NZBFCLMC
          PACK      NZBFCLMC,NZBFCLMC,SP70
          GOTO      KEYD1200
.
KEYD1100  DISPLAY   *P26:6,*V2LON,"ALL";
          PACK      NZBFCLMC,SP70
          GOTO      KEYD2000
.
KEYD1200  MOVE      TDESC,CLDES              * Save description
          DISPLAY   *P35:6,CLDES;
.
.         Keyin Health Fund
.
KEYD2000  MOVE      ZERO,ALLHF               * Not all health fund flag
          MOVE      SP6,NZBFCNTR
          MOVE      SP30,FCODDES
          DISPLAY   *P26:7,*EL,*P26:8,*EL;
          MOVE      TWENTY6,ECOL
          MOVE      SEVEN,EVERT
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY
          BRANCH    EXIT,KEYD2005,KEYD9000
          MOVE      HCODE,NZBFCNTR
          GOTO      KEYD2010
.
.         Nothing entered
.
KEYD2005  DISPLAY   *P26:7,*EL,*V2LON,"ALL":
                    *P26:8,*EL,*V2LON,"ALL";
          MOVE      ONE,ALLHF               * All health fund
          MOVE      SP8,NZBFFTAB
          PACK      FTABDES WITH SP30
          GOTO      KEYD4000
.
KEYD2010  MOVE      HFNAME,FCODDES
          DISPLAY   *P26:7,*EL,*V2LON,NZBFCNTR,*HOFF,*P35:7,FCODDES;
.
.
.         Keyin Health Fund Table
.
KEYD3000  MOVE      SP8,NZBFFTAB
          MOVE      SP30,FTABDES
          MOVE      TWENTY6,ECOL
          MOVE      SEVEN,EVERT
          MOVE      ZERO,CKYIMODE
          MOVE      NZBFCNTR,MHFUND
.
          MATCH     SP6,HCODE
          GOTO      KEYD3100 IF EQUAL
.
          CALL      PATTBLKY
          BRANCH    EXIT,KEYD3010,KEYD9000
          MOVE      HFTABL,NZBFFTAB
          GOTO      KEYD3100
.
KEYD3010  DISPLAY   *P26:8,*V2LON,"ALL";
          GOTO      KEYD4000                     * Go to keyin adm.type
.
KEYD3100  MOVE      HFNAME,FTABDES
          DISPLAY   *P26:8,*EL,*V2LON,NZBFFTAB,*HOFF,*P35:8,FTABDES;
.
.         Keyin Admission Type
.
KEYD4000  DISPLAY   *P26:9,*EL;
.
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      NINE,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODEA,CODE
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,KEYD4100,KEYD9000
          MOVE      ACODE,NZBFATYP
          GOTO      KEYD4200
.
KEYD4100  DISPLAY   *P26:9,*V2LON,"ALL";
          GOTO      KEYD5000
.
KEYD4200  DISPLAY   *P35:9,TDESC;
.
.         Keyin Bed Type
.
KEYD5000  DISPLAY   *P26:10,*EL;
.
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      TEN,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODEBT,CODE
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,KEYD5100,KEYD9000
          MOVE      ACODE,NZBFBTYP
          GOTO      KEYD5200
.
KEYD5100  DISPLAY   *P26:10,*V2LON,"ALL";
          MOVE      ZERO,EXIT
          GOTO      KEYD9999
.
KEYD5200  MOVE      TDESC,ATYPDES
          DISPLAY   *P35:10,ATYPDES;
.
          MOVE      ZERO,EXIT
          GOTO      KEYD9999
.
KEYD9000  MOVE      ONE,EXIT
.
KEYD9999  RETURN
+
.**************************************************************************
.*                             DELN0000                                   *
.*  Globally delete bed fee record                                        *
.*  Called by : GLODEL                                                    *
.**************************************************************************
DELN0000  DISPLAY   *P1:24,*EF,*B:
                    "Commencing Global Deletion. ":
                    *P1:24,*EL,"Deleting:",*P40:24,"Scanning:";
.
          MOVE      NZBFHOSP,BFHOS1
          MOVE      NZBFCLMC,BFCLM1
          MOVE      NZBFCNTR,BFHFUND1
          MOVE      NZBFFTAB,BFHFTAB1
          PACK      BFATYPE1,NZBFATYP,SP70
          PACK      BFBTYPE1,NZBFBTYP,SP70
.
          PACK      KEY37,SP70
          MATCH     SP70,NZBFHOSP
          GOTO      DELN1000 IF EQUAL
.
          PACK      KEY37,NZBFHOSP,SP70
          MATCH     SP3,NZBFCLMC
          GOTO      DELN1000 IF EQUAL
.
          PACK      KEY37,NZBFHOSP,NZBFCLMC,SP70
          MATCH     SP6,NZBFCNTR
          GOTO      DELN1000 IF EQUAL
.
          PACK      KEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,SP70
          MATCH     SP8,NZBFFTAB
          GOTO      DELN1000 IF EQUAL
.
          PACK      KEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,SP70
          MATCH     SP3,NZBFATYP
          GOTO      DELN1000 IF EQUAL
.
          PACK      KEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP,SP70
          MATCH     SP3,NZBFBTYP
          GOTO      DELN1000 IF EQUAL
.
          PACK      KEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                          NZBFBTYP,SP70
.
DELN1000  CALL      RSNZBF11             * new file
DELN1500  CALL      RKNZBF11             * new file
          BRANCH    OVRCD,DELN9000
.
          DISPLAY   *P50:24,*EL,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                                NZBFBTYP,NZBFEDAY;
          MATCH     SP3,BFHOS1              * All ?
          GOTO      DELN2000 IF EQUAL
.
          MATCH     NZBFHOSP,BFHOS1
          GOTO      DELN9000 IF NOT EQUAL
.
          MATCH     SP3,BFCLM1              * All ?
          GOTO      DELN2000 IF EQUAL
.
          MATCH     NZBFCLMC,BFCLM1
          GOTO      DELN9000 IF NOT EQUAL
.
DELN2000  MATCH     SP6,BFHFUND1            * All ?
          GOTO      DELN2100 IF NOT EQUAL
.
.         Check if this is for all health fund or bed fee with no health fund
.
          BRANCH    ALLHF OF DELN3000        * All Health Fund
.
DELN2100  MATCH     NZBFCNTR,BFHFUND1         * same H/Fund as specified ?
          GOTO      DELN3000 IF EQUAL        * yes
          GOTO      DELN1500 IF NOT LESS     * have not reached H/Fund specified
.
          MATCH     SP3,BFCLM1              * all Claim Codes ?
          GOTO      DELN1500 IF EQUAL        * yes - read next record
          GOTO      DELN9000                 * no - finished
.
DELN3000  MATCH     SP8,BFHFTAB1             * All ?
          GOTO      DELN4000 IF EQUAL
.
          MATCH     NZBFFTAB,BFHFTAB1
          GOTO      DELN1500 IF NOT EQUAL
.
DELN4000  MATCH     SP3,BFATYPE1             * All ?
          GOTO      DELN5000 IF EQUAL
.
          MATCH     NZBFATYP,BFATYPE1
          GOTO      DELN1500 IF NOT EQUAL
.
DELN5000  MATCH     SP3,BFBTYPE1             * All ?
          GOTO      DELN6000 IF EQUAL
.
          MATCH     NZBFBTYP,BFBTYPE1
          GOTO      DELN1500 IF NOT EQUAL
.
DELN6000  DISPLAY   *P10:24,*V2LON,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                            NZBFBTYP;        * display some record details
.
          PACK      KEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                          NZBFBTYP,NZBFEFDT,NZBFEDAY,SP70
          MOVE      KEY37,SAVKEY37
          CALL      DENZBF11                * new file
.
          MOVE      SAVKEY37,KEY37          * Reposition the record
          GOTO      DELN1000
.
DELN9000
.
DELN9999   RETURN
.
.
.**************************************************************************
.*                               CNZP0000              Called by: ML2600  *
.* Create new NZ Private Contract Procedure Fee file. This will delete    *
.* all record from the new NZ Private Contract Procedure Fee file and     *
.* load with current file records.                                        *
.**************************************************************************
.
CNZP0000  KEYIN     *P1:24,*EL:
                    "Are You Sure You Want to Overwrite the New File (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNZP1000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNZP9500 IF EQUAL
.
          BEEP
          GOTO      CNZP0000
.
CNZP1000  KEYIN     *P1:24,*EL,"Do You Want to Start with a Copy of the":
                    " Current Data (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNZP9000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNZP2000 IF EQUAL
.
          BEEP
          GOTO      CNZP1000
.
CNZP2000  KEYIN     *P1:24,*EL,"You Will Lose All Current Contract Procedure":
                               " Fees .  Are You ":
                               "Sure (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,DIM1;
.
          REP       UPPLOW,DIM1
          MATCH     ANSY,DIM1
          GOTO      CNZP8000 IF EQUAL
.
          MATCH     ANSN,DIM1
          GOTO      CNZP9500 IF EQUAL
.
          BEEP
          GOTO      CNZP2000
.
CNZP8000  CALL      DNZP0000                * Delete all record from new file
          MOVE      ZERO,EXIT               * Do not load current file date
          GOTO      CNZP9600
.
CNZP9000  CALL      DNZP0000                * Delete all records from new file
          CALL      LNZP0000                * Load current record to new file
.
          MOVE      ZERO,EXIT
          GOTO      CNZP9600
.
CNZP9500  MOVE      ONE,EXIT
.
CNZP9600  
.
CNZP9999  RETURN
.
.**************************************************************************
.*                               DNZP0000              Called by: CNZP0000*
.* Delete all of the new NZ Private contract prcedure fee records         *
.**************************************************************************
DNZP0000  PACK      KEY37,SP70
          CALL      RSNZPF11
          CALL      RKNZPF11
          BRANCH    OVRCD,DNZP2000         * End of contract proc fee
.
          PACK      KEY37,NZPFHOSP,NZPFCLMC,NZPFCNTR,NZPFFTAB,NZPFCPRC:
                          NZPFEFDT,SP70
.
          CALL      DENZPF11               * Delete from new file
.
          GOTO      DNZP0000
.
DNZP2000  PACK      KEY40,SP70
          CALL      RSNZIB11
          CALL      RKNZIB11
          BRANCH    OVRCD,DNZP3000         * End of inv breakdown
.
          PACK      KEY40,NZIBHOSP,NZIBCLMC,NZIBCNTR,NZIBFTAB,NZIBCPRC:
                          NZIBEFDT,NZIBBRCD,SP70
.
          CALL      DENZIB11               * Delete from inv breakdwon
.
          GOTO      DNZP2000
.
DNZP3000  PACK      KEY40,SP70
          CALL      RSNZRB11
          CALL      RKNZRB11
          BRANCH    OVRCD,DNZP9999         * End of contract proc fee
.
          PACK      KEY40,NZRBHOSP,NZRBCLMC,NZRBCNTR,NZRBFTAB,NZRBCPRC:
                          NZRBEFDT,NZRBBRCD,SP70
.
          CALL      DENZRB11               * Delete from new file
.
          GOTO      DNZP3000
.
DNZP9999  RETURN
.
+
.**************************************************************************
.*                               LNZP0000              Called by: CNTP0000*
.* Load current NZ Private Contract Procedure Fee data to the new file    *
.**************************************************************************
LNZP0000  PACK      KEY37,SP70
          CALL      RSNZPFE1
LNZP1000  CALL      RKNZPFE1
          BRANCH    OVRCD,LNZP2000         * End of contract proc fee
.
          PACK      KEY37,NZPFHOSP,NZPFCLMC,NZPFCNTR,NZPFFTAB,NZPFCPRC:
                          NZPFEFDT,SP70
.
          CALL      WRNZPF11               * Write to new file
.
          GOTO      LNZP1000
.
LNZP2000  PACK      KEY40,SP70
          CALL      RSNZIBR1
LNZP2500  CALL      RKNZIBR1
          BRANCH    OVRCD,LNZP3000         * End of inv breakdown
.
          PACK      KEY40,NZIBHOSP,NZIBCLMC,NZIBCNTR,NZIBFTAB,NZIBCPRC:
                          NZIBEFDT,NZIBBRCD,SP70
.
          CALL      WRNZIB11               * Write to new inv breakdwon
.
          GOTO      LNZP2500
.
LNZP3000  PACK      KEY40,SP70
          CALL      RSNZRBR1
LNZP3500  CALL      RKNZRBR1
          BRANCH    OVRCD,LNZP9999         * End of contract proc fee
.
          PACK      KEY40,NZRBHOSP,NZRBCLMC,NZRBCNTR,NZRBFTAB,NZRBCPRC:
                          NZRBEFDT,NZRBBRCD,SP70
.
          CALL      WRNZRB11               * Write to new rev breakdown
.
          GOTO      LNZP3500
.
LNZP9999  RETURN
.
.**************************************************************************
.*                               UNZP0000              Called by: ML2900  *
.*    Update New to Current NZ private contract procedure fee             *
.**************************************************************************
UNZP0000  KEYIN     *P1:24,*EL,"Are you sure you want to copy the new data ":
                    "over the old (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    ") ? ",*V2LON,ANS;
.
          MOVE      ZERO,EXIT
          MATCH     ANSY,ANS
          GOTO      UNZP1000 IF EQUAL
.         
          MOVE      ONE,EXIT
          MATCH     ANSN,ANS
          GOTO      UNZP9999 IF EQUAL
          BEEP
          GOTO      UNZP0000               
.
UNZP1000  DISPLAY   *P1:24,*EL,*V2LON:
                    "** Copying new data over old... ",*BLINKON:
                    "Please wait",*HOFF,*V2LON," **";
.
          PACK      KEY37,SP70
          CALL      RSNZPF11
UNZP1200  CALL      RKNZPF11
          BRANCH    OVRCD,UNZP9999     * Exit if new file is empty
.
          CALL      RNZP0000           * Delete all records from current file
          CALL      MNZP0000           * Write new file to current file
          CALL      DNZP0000           * Delete all records from new file
.
UNZP9999  RETURN
.
.**************************************************************************
.*                               RNZP0000              Called by: UNZP0000*
.* Delete all of the current NZ Private contract prcedure fee records     *
.**************************************************************************
RNZP0000  PACK      KEY37,SP70
          CALL      RSNZPFE1
          CALL      RKNZPFE1
          BRANCH    OVRCD,RNZP2000         * End of contract proc fee
.
          PACK      KEY37,NZPFHOSP,NZPFCLMC,NZPFCNTR,NZPFFTAB,NZPFCPRC:
                          NZPFEFDT,SP70
.
          CALL      DENZPFE1               * Delete 
.
          GOTO      RNZP0000
.
RNZP2000  PACK      KEY40,SP70
          CALL      RSNZIBR1
          CALL      RKNZIBR1
          BRANCH    OVRCD,RNZP3000         * End of inv breakdown
.
          PACK      KEY40,NZIBHOSP,NZIBCLMC,NZIBCNTR,NZIBFTAB,NZIBCPRC:
                          NZIBEFDT,NZIBBRCD,SP70
.
          CALL      DENZIBR1               * Delete from inv breakdwon
.
          GOTO      RNZP2000
.
RNZP3000  PACK      KEY40,SP70
          CALL      RSNZRBR1
          CALL      RKNZRBR1
          BRANCH    OVRCD,RNZP9999         * End of contract proc fee
.
          PACK      KEY40,NZRBHOSP,NZRBCLMC,NZRBCNTR,NZRBFTAB,NZRBCPRC:
                          NZRBEFDT,NZRBBRCD,SP70
.
          CALL      DENZRBR1               * Delete 
.
          GOTO      RNZP3000
.
RNZP9999  RETURN
.
.**************************************************************************
.*                               MNZP0000              Called by: UNZP0000*
.* Load new NZ Private Contract Procedure Fee data to the current file    *
.**************************************************************************
MNZP0000  PACK      KEY37,SP70
          CALL      RSNZPF11
MNZP1000  CALL      RKNZPF11
          BRANCH    OVRCD,MNZP2000         * End of contract proc fee
.         
          PACK      KEY37,NZPFHOSP,NZPFCLMC,NZPFCNTR,NZPFFTAB,NZPFCPRC:
                          NZPFEFDT,SP70
.                         
          CALL      WRNZPFE1               * Write to new file
.         
          GOTO      MNZP1000
.
MNZP2000  PACK      KEY40,SP70
          CALL      RSNZIB11
MNZP2500  CALL      RKNZIB11
          BRANCH    OVRCD,MNZP3000         * End of inv breakdown
.
          PACK      KEY40,NZIBHOSP,NZIBCLMC,NZIBCNTR,NZIBFTAB,NZIBCPRC:
                          NZIBEFDT,NZIBBRCD,SP70
.
          CALL      WRNZIBR1               * Write to new inv breakdwon
.
          GOTO      MNZP2500
.
MNZP3000  PACK      KEY40,SP70
          CALL      RSNZRB11
MNZP3500  CALL      RKNZRB11
          BRANCH    OVRCD,MNZP9999         * End of contract proc fee
.
          PACK      KEY40,NZRBHOSP,NZRBCLMC,NZRBCNTR,NZRBFTAB,NZRBCPRC:
                          NZRBEFDT,NZRBBRCD,SP70
.
          CALL      WRNZRBR1               * Write to new rev breakdown
.
          GOTO      MNZP3500
.
MNZP9999  RETURN
.
.
.**************************************************************************
.*                               HNZP0000              Called by: ML2700  *
.* Global duplication of new NZ private theatre fee file                  *
.**************************************************************************
HNZP0000  DISPLAY   *P50:2,*V2LON,"- Global Duplication NZ Private Contract ":
                                  "Procedure Fee"
          CALL      SNZP0000                 * Display screen
          CALL      KNZP0000                 * Keyin details
          BRANCH    EXIT,HNZP9500
.
          CALL      BNZP0000                 * Display Copy To screen
          CALL      ENZP0000                 * Keyin Copy To details
          BRANCH    EXIT,HNZP9500
.
          MATCH     FROMHOSP,CPTOHOSP        * Check hospital
          GOTO      HNZP1000 IF NOT EQUAL
.
          MATCH     FROMCLAM,CPTOCLAM        * Check claim code
          GOTO      HNZP1000 IF NOT EQUAL
.
          MATCH     FROMHFND,CPTOHFND        * Check health fund
          GOTO      HNZP1000 IF NOT EQUAL
.
          MATCH     FROMHFTB,CPTOHFTB        * check health fund table
          GOTO      HNZP1000 IF NOT EQUAL
.
          MATCH     FROMCPRC,CPTOCPRC        * Check contract proc xode
          GOTO      HNZP1000 IF NOT EQUAL
.
          MATCH     FROMEDAT,CPTOEDAT        * check effective date
          GOTO      HNZP1000 IF NOT EQUAL
.
          GOTO      HNZP9000                 * Error copy from/to identical
.
HNZP1000  CALL      DELQST
          BRANCH    CEXIT,HNZP8000,HNZP0000,HNZP9500
.
HNZP8000  CALL      WNZP0000                 * Process Proc Fee duplication    
          MOVE      ZERO,EXIT
          GOTO      HNZP9999
.
HNZP9000  DISPLAY   *P1:23,*EF,*P1:24,*B,"The From and To Sections Cannot ":
                    "be Identical. ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      HNZP9999
.
HNZP9500  MOVE      ONE,EXIT
.
HNZP9999  RETURN
.
.
.**************************************************************************
.*                            WNZP0000                                    *
.*  Process NZ private contract procedure fee duplicatoin                 *
.*  Called by : HNZT0000                                                  *
.**************************************************************************
WNZP0000  PACK      KEY37,SP70
WNZP0500  CALL      RSNZPF11
WNZP1000  CALL      RKNZPF11
          BRANCH    OVRCD,WNZP9999         * End of new file
.
          MATCH     "All",FROMHOSP         * Hospital
          IF        !@EQUAL
            MATCH     NZPFHOSP,FROMHOSP
            GOTO      WNZP1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCLAM         * Claim Code   
          IF        !@EQUAL
            MATCH     FROMCLAM,NZPFCLMC
            GOTO      WNZP1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFND         * Health Fund
          IF        !@EQUAL
            MATCH     FROMHFND,NZPFCNTR
            GOTO      WNZP1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFTB         * Health Fund Table
          IF        !@EQUAL
            MATCH     FROMHFTB,NZPFFTAB
            GOTO      WNZP1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCPRC         * Contract Procedure
          IF        !@EQUAL
            MATCH     FROMCPRC,NZPFCPRC
            GOTO      WNZP1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,FROMEDAT          * Effective Date
          IF        !@EQUAL
            MATCH     FROMEDAT,NZPFEFDT
            GOTO      WNZP1000 IF NOT EQUAL
          ENDIF
.
          PACK      SAVKEY37,NZPFHOSP,NZPFCLMC,NZPFCNTR,NZPFFTAB:
                             NZPFCPRC,NZPFEFDT,SP70
.
          MATCH     "All",CPTOHOSP         * Hospital
          IF        !@EQUAL
            MOVE      CPTOHOSP,NZPFHOSP
          ENDIF
.
          MATCH     "All",CPTOCLAM         * Claim Code  
          IF        !@EQUAL
            MOVE      CPTOCLAM,NZPFCLMC
          ENDIF
.
          MATCH     "All",CPTOHFND         * Health Fund
          IF        !@EQUAL
            MOVE      CPTOHFND,NZPFCNTR
          ENDIF
.
          MATCH     "All",CPTOHFTB         * Health Fund Table
          IF        !@EQUAL
            MOVE      CPTOHFTB,NZPFFTAB
          ENDIF
.
          MATCH     "All",CPTOCPRC         * Contract Procedure
          IF        !@EQUAL
            MOVE      CPTOCPRC,NZPFCPRC
          ENDIF
.
          MATCH     SP70,CPTOEDAT          * Effective Date
          IF        !@EQUAL
            MOVE      CPTOEDAT,NZPFEFDT
          ENDIF
.
          PACK      KEY37,NZPFHOSP,NZPFCLMC,NZPFCNTR,NZPFFTAB:
                          NZPFCPRC,NZPFEFDT,SP70
.
          CALL      RANZPF11
          IF        OVRCD=1
            CALL      WRNZPF11             * Write record to new file
          ENDIF
.
          CALL      INZP0000               * Copy invoice breakdown
          CALL      ONZP0000               * Copy revenue breakdown
.
          MOVE      SAVKEY37,KEY37
          GOTO      WNZP0500
.
WNZP9999  RETURN
.
.**************************************************************************
.*                            INZP0000                                    *
.*  Process NZ private contract procedure fee inv breakdown duplication   *
.*  Called by : HNZT0000                                                  *
.**************************************************************************
INZP0000  PACK      KEY40,SAVKEY37,SP70
INZP0500  CALL      RSNZIB11
INZP1000  CALL      RKNZIB11
          BRANCH    OVRCD,INZP9999         * End of new file
.           
          PACK      SAVKEY40,NZIBHOSP,NZIBCLMC,NZIBCNTR,NZIBFTAB:
                             NZIBCPRC,NZIBEFDT,NZIBBRCD,SP70
.
          MATCH     SAVKEY37,SAVKEY40
          GOTO      INZP9999 IF NOT EQUAL
.
          MATCH     "All",CPTOHOSP         * Hospital
          IF        !@EQUAL
            MOVE      CPTOHOSP,NZIBHOSP
          ENDIF
.
          MATCH     "All",CPTOCLAM         * Claim Code
          IF        !@EQUAL
            MOVE      CPTOCLAM,NZIBCLMC
          ENDIF
.
          MATCH     "All",CPTOHFND         * Health Fund
          IF        !@EQUAL
            MOVE      CPTOHFND,NZIBCNTR
          ENDIF
.
          MATCH     "All",CPTOHFTB         * Health Fund Table
          IF        !@EQUAL
            MOVE      CPTOHFTB,NZIBFTAB
          ENDIF
.
          MATCH     "All",CPTOCPRC         * Contract Procedure
          IF        !@EQUAL
            MOVE      CPTOCPRC,NZIBCPRC
          ENDIF
.
          MATCH     SP70,CPTOEDAT          * Effective Date
          IF        !@EQUAL
            MOVE      CPTOEDAT,NZIBEFDT
          ENDIF
.
          PACK      KEY40,NZIBHOSP,NZIBCLMC,NZIBCNTR,NZIBFTAB:
                          NZIBCPRC,NZIBEFDT,NZIBBRCD,SP70
.
          CALL      RANZIB11
          IF        OVRCD=1
            CALL      WRNZIB11             * Write record to new file
          ENDIF
.
          MOVE      SAVKEY40,KEY40
          GOTO      INZP0500
.
INZP9999  RETURN
.
.
.**************************************************************************
.*                            ONZP0000                                    *
.*  Process NZ private contract procedure fee rev breakdown duplication   *
.*  Called by : HNZT0000                                                  *
.**************************************************************************
ONZP0000  PACK      KEY40,SAVKEY37,SP70
ONZP0500  CALL      RSNZRB11
ONZP1000  CALL      RKNZRB11
          BRANCH    OVRCD,ONZP9999         * End of new file
.
          PACK      SAVKEY40,NZRBHOSP,NZRBCLMC,NZRBCNTR,NZRBFTAB:
                             NZRBCPRC,NZRBEFDT,NZRBBRCD,SP70
.
          MATCH     SAVKEY37,SAVKEY40
          GOTO      ONZP9999 IF NOT EQUAL
.
          MATCH     "All",CPTOHOSP         * Hospital
          IF        !@EQUAL
            MOVE      CPTOHOSP,NZRBHOSP
          ENDIF
.
          MATCH     "All",CPTOCLAM         * Claim Code
          IF        !@EQUAL
            MOVE      CPTOCLAM,NZRBCLMC
          ENDIF
.
          MATCH     "All",CPTOHFND         * Health Fund
          IF        !@EQUAL
            MOVE      CPTOHFND,NZRBCNTR
          ENDIF
.
          MATCH     "All",CPTOHFTB         * Health Fund Table
          IF        !@EQUAL
            MOVE      CPTOHFTB,NZRBFTAB
          ENDIF
.
          MATCH     "All",CPTOCPRC         * Contract Procedure
          IF        !@EQUAL
            MOVE      CPTOCPRC,NZRBCPRC
          ENDIF
.
          MATCH     SP70,CPTOEDAT          * Effective Date
          IF        !@EQUAL
            MOVE      CPTOEDAT,NZRBEFDT
          ENDIF
.
          PACK      KEY40,NZRBHOSP,NZRBCLMC,NZRBCNTR,NZRBFTAB:
                          NZRBCPRC,NZRBEFDT,NZRBBRCD,SP70
.
          CALL      RANZRB11
          IF        OVRCD=1
            CALL      WRNZRB11             * Write record to new file
          ENDIF
.
          MOVE      SAVKEY40,KEY40
          GOTO      ONZP0500
.
ONZP9999  RETURN
.
.**************************************************************************
.*                         SNZP0000                                       *
.*  Display screen layout                                                 *
.*  Called by : HNZP0000                                                  *
.**************************************************************************
.
SNZP0000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Hospital       : ":
                    *P5:5,"Claim Code     : ":
                    *P5:6,"Health Fund    : ":
                    *P5:7,"H/Fund Table   : ":
                    *P5:8,"Contract Proc  : ":
                    *P5:9,"Effective Date : "
.
SNZP9999  RETURN
.
.**************************************************************************
.*                         BNZP0000                                       *
.*  Display screen layout                                                 *
.*  Called by : HNZP0000                                                  *
.**************************************************************************
.
BNZP0000  DISPLAY   *P1:11,*EF,"Copy To":
                    *P5:13,"Hospital       : ":
                    *P5:14,"Claim Code     : ":
                    *P5:15,"Health Fund    : ":
                    *P5:16,"H/Fund Table   : ":
                    *P5:17,"Contract Proc  : ":
                    *P5:18,"Effective Date : "
.
BNZP9999  RETURN
.
.**************************************************************************
.*                            KNZP0000                                    *
.*  Keyin hospital, claim code, health fund ,                             *
.*  health fund table, contract procedure and effective date              *
.*  Called by : HNZP0000                                                  *
.**************************************************************************
KNZP0000  MOVE      ZERO,EXIT
.
          KEYIN     *P26:4,*EL,*V2LON,FROMHOSP;
          PACK      FROMHOSP,FROMHOSP,SP70
.
          MATCH     "All",FROMHOSP
          IF        @EQUAL
            DISPLAY   *P26:4,*V2LON,"All";
            GOTO      KNZP2000
          ENDIF
.
          PACK      KEY3,FROMHOSP,SP70
          CALL      RDPTHSP1
          BRANCH    OVRCD,KNZP9000
.
          DISPLAY   *P35:4,PTHSNAME;
.
.         Keyin Claim Code
.
KNZP2000  KEYIN     *P26:5,*EL,*V2LON,FROMCLAM;
          PACK      FROMCLAM,FROMCLAM,SP70
.
          MATCH     "All",FROMCLAM
          IF        @EQUAL
            DISPLAY   *P26:5,*V2LON,"All";
            GOTO      KNZP3000
          ENDIF
.
          MATCH     SP70,FROMCLAM
          IF        @EQUAL
            DISPLAY   *P26:5,*V2LON,"Blank";
            GOTO      KNZP3000
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,FROMCLAM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,KNZP9000
.
          DISPLAY   *P35:5,TDESC;
.
.         Keyin Health Fund
.
KNZP3000  KEYIN     *P26:6,*EL,*V2LON,FROMHFND;
          PACK      FROMHFND,FROMHFND,SP70
.
          MATCH     "All",FROMHFND
          IF        @EQUAL
            DISPLAY   *P26:6,*V2LON,"All";
            GOTO      KNZP4000
          ENDIF
.
          MATCH     SP70,FROMHFND
          IF        @EQUAL
            DISPLAY   *P26:6,*V2LON,"Blank";
            GOTO      KNZP4000
          ENDIF
.
          PACK      KEY14,FROMHFND,ZERO,ZERO,ZERO,ZERO,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,KNZP9000
.
          DISPLAY   *P35:6,HFNAME;
.
.         Keyin Health Fund Table
.
KNZP4000  KEYIN     *P26:7,*EL,*V2LON,FROMHFTB;
          PACK      FROMHFTB,FROMHFTB,SP70
.
          MATCH     "All",FROMHFTB
          IF        @EQUAL
            DISPLAY   *P26:7,*V2LON,"All";
            GOTO      KNZP5000
          ENDIF
.
          MATCH     SP70,FROMHFTB
          IF        @EQUAL
            DISPLAY   *P26:7,*V2LON,"Blank";
            GOTO      KNZP5000
          ENDIF
.
          PACK      KEY14,FROMHFND,FROMHFTB,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,KNZP9000
.
          DISPLAY   *P35:7,HFNAME;
.
.         Contract Procedure Code 
.         
KNZP5000  KEYIN     *P26:8,*EL,*V2LON,FROMCPRC;
          PACK      FROMCPRC,FROMCPRC,SP70
.         
          MATCH     "All",FROMCPRC
          IF        @EQUAL
            DISPLAY   *P26:8,*V2LON,"All";
            GOTO      KNZP6000
          ENDIF
.         
          MATCH     SP70,FROMCPRC
          IF        @EQUAL
            DISPLAY   *P26:8,*V2LON,"Blank";
            GOTO      KNZP6000
          ENDIF
.
          PACK      KEY9,FROMCPRC,SP70
          CALL      RDPTCMC1
          BRANCH    OVRCD,KNZP9000
.
          DISPLAY   *P35:8,PTCADES1;
.
.         Keyin Effective Date
.
KNZP6000  MOVE      "26",CCOL
          MOVE      "9",CVERT
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,KNZP6500
.
          PACK      FROMEDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FROMEDAT
.
          GOTO      KNZP8000
.
KNZP6500  DISPLAY   *P26:9,*V2LON,"All";
          MOVE      SP70,FROMEDAT
.
KNZP8000  MOVE      ZERO,EXIT
          GOTO      KNZP9999
.
KNZP9000  MOVE      ONE,EXIT
.
KNZP9999  RETURN
.
.**************************************************************************
.*                            ENZP0000                                    *
.*  Keyin to hospital, to claim code, to health fund ,                    *
.*  to health fund table,to contract procedure and to effective date      *
.*  Called by : HNZP0000                                                  *
.**************************************************************************
ENZP0000  MOVE      ZERO,EXIT
.
          KEYIN     *P26:13,*EL,*V2LON,CPTOHOSP;
          PACK      CPTOHOSP,CPTOHOSP,SP70
.
          MATCH     "All",CPTOHOSP
          IF        @EQUAL
            DISPLAY   *P26:13,*V2LON,"All";
            GOTO      ENZP2000
          ENDIF
.
          PACK      KEY3,CPTOHOSP,SP70
          CALL      RDPTHSP1
          BRANCH    OVRCD,ENZP9000
.
          DISPLAY   *P35:13,PTHSNAME;
.
.         Keyin Claim Code
.
ENZP2000  KEYIN     *P26:14,*EL,*V2LON,CPTOCLAM;
          PACK      CPTOCLAM,CPTOCLAM,SP70
.
          MATCH     "All",CPTOCLAM
          IF        @EQUAL
            DISPLAY   *P26:14,*V2LON,"All";
            GOTO      ENZP3000
          ENDIF
.
          MATCH     SP70,CPTOCLAM
          IF        @EQUAL
            DISPLAY   *P26:14,*V2LON,"Blank";
            GOTO      ENZP3000
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,CPTOCLAM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,ENZP9000
.
          DISPLAY   *P35:14,TDESC;
.
.         Keyin Health Fund
.
ENZP3000  KEYIN     *P26:15,*EL,*V2LON,CPTOHFND;
          PACK      CPTOHFND,CPTOHFND,SP70
.
          MATCH     "All",CPTOHFND
          IF        @EQUAL
            DISPLAY   *P26:15,*V2LON,"All";
            GOTO      ENZP4000
          ENDIF
.
          MATCH     SP70,CPTOHFND
          IF        @EQUAL
            DISPLAY   *P26:15,*V2LON,"Blank";
            GOTO      ENZP4000
          ENDIF
.
          PACK      KEY14,CPTOHFND,ZERO,ZERO,ZERO,ZERO,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,ENZP9000
.
          DISPLAY   *P35:15,HFNAME;
.
.         Keyin Health Fund Table
.
ENZP4000  KEYIN     *P26:16,*EL,*V2LON,CPTOHFTB;
          PACK      CPTOHFTB,CPTOHFTB,SP70
.
          MATCH     "All",CPTOHFTB
          IF        @EQUAL
            DISPLAY   *P26:16,*V2LON,"All";
            GOTO      ENZP5000
          ENDIF
.
          MATCH     SP70,CPTOHFTB
          IF        @EQUAL
            DISPLAY   *P26:16,*V2LON,"Blank";
            GOTO      ENZP5000
          ENDIF
.
          PACK      KEY14,CPTOHFND,CPTOHFTB,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,ENZP9000
.
          DISPLAY   *P35:16,HFNAME;
.
.         Contract Procedure Code
.
ENZP5000  KEYIN     *P26:17,*EL,*V2LON,CPTOCPRC;
          PACK      CPTOCPRC,CPTOCPRC,SP70
.
          MATCH     "All",CPTOCPRC
          IF        @EQUAL
            DISPLAY   *P26:17,*V2LON,"All";
            GOTO      ENZP6000
          ENDIF
.
          MATCH     SP70,CPTOCPRC
          IF        @EQUAL
            DISPLAY   *P26:17,*V2LON,"Blank";
            GOTO      ENZP6000
          ENDIF
.
          PACK      KEY9,CPTOCPRC,SP70
          CALL      RDPTCMC1
          BRANCH    OVRCD,ENZP9000
.
          DISPLAY   *P35:17,PTCADES1;
.
.         Keyin Effective Date
.
ENZP6000  MOVE      "26",CCOL
          MOVE      "18",CVERT
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,ENZP6500
.
          PACK      CPTOEDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CPTOEDAT
.
          GOTO      ENZP8000
.
ENZP6500  DISPLAY   *P26:18,*V2LON,"All";
          MOVE      SP70,CPTOEDAT
.
ENZP8000  MOVE      ZERO,EXIT
          GOTO      ENZP9999
.
ENZP9000  MOVE      ONE,EXIT
.
ENZP9999  RETURN
.
.**************************************************************************
.*                               QNZP0000              Called by: ML2800  *
.* Global delete of new NZ private contract procedure fee file            *
.**************************************************************************
QNZP0000  DISPLAY   *P50:2,*V2LON,"- Global Deletion NZ Private Contract":
                                  " Procedure Fee";
          CALL      SNZP0000                 * Display screen
          CALL      KNZP0000                 * Keyin details
          BRANCH    EXIT,QNZP9500
.
          CALL      DELQST
          BRANCH    CEXIT,QNZP8000,QNZP0000,QNZP9500
.
QNZP8000  CALL      PNZP0000                 * Process Delete records new file
          MOVE      ZERO,EXIT
          GOTO      QNZP9999
.
QNZP9500  MOVE      ONE,EXIT
.
QNZP9999  RETURN
.
.
.**************************************************************************
.*                            PNZP0000                                    *
.*  Process NZ private contract procedure fee deletion                    *
.*  Called by : HNZT0000                                                  *
.**************************************************************************
PNZP0000  PACK      KEY37,SP70
PNZP0500  CALL      RSNZPF11
PNZP1000  CALL      RKNZPF11
          BRANCH    OVRCD,PNZP9999         * End of new file
.
          MATCH     "All",FROMHOSP         * Hospital
          IF        !@EQUAL
            MATCH     NZPFHOSP,FROMHOSP
            GOTO      PNZP1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCLAM         * Claim Code
          IF        !@EQUAL
            MATCH     FROMCLAM,NZPFCLMC
            GOTO      PNZP1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFND         * Health Fund
          IF        !@EQUAL
            MATCH     FROMHFND,NZPFCNTR
            GOTO      PNZP1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFTB         * Health Fund Table
          IF        !@EQUAL
            MATCH     FROMHFTB,NZPFFTAB
            GOTO      PNZP1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCPRC         * Contract Procedure
          IF        !@EQUAL
            MATCH     FROMCPRC,NZPFCPRC
            GOTO      PNZP1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,FROMEDAT          * Effective Date
          IF        !@EQUAL
            MATCH     FROMEDAT,NZPFEFDT
            GOTO      PNZP1000 IF NOT EQUAL
          ENDIF
.
          PACK      KEY37,NZPFHOSP,NZPFCLMC,NZPFCNTR,NZPFFTAB:
                          NZPFCPRC,NZPFEFDT,SP70
          MOVE      KEY37,SAVKEY37
.
          CALL      DENZPF11               * Delete record from new file
.
          CALL      ANZP0000               * Delete invoice breakdown
          CALL      TNZP0000               * Delete revenue breakdown
.
          MOVE      SAVKEY37,KEY37
          GOTO      PNZP0500
.
PNZP9999  RETURN
.
.
.**************************************************************************
.*                            ANZP0000                                    *
.*  Process NZ private contract procedure fee inv breakdown delete        *
.*  Called by : HNZT0000                                                  *
.**************************************************************************
ANZP0000  PACK      KEY40,SAVKEY37,SP70
ANZP0500  CALL      RSNZIB11
ANZP1000  CALL      RKNZIB11
          BRANCH    OVRCD,ANZP9999         * End of new file
.
          PACK      SAVKEY40,NZIBHOSP,NZIBCLMC,NZIBCNTR,NZIBFTAB:
                             NZIBCPRC,NZIBEFDT,NZIBBRCD,SP70
.
          MATCH     SAVKEY37,SAVKEY40
          GOTO      ANZP9999 IF NOT EQUAL
.
          PACK      KEY40,NZIBHOSP,NZIBCLMC,NZIBCNTR,NZIBFTAB:
                          NZIBCPRC,NZIBEFDT,NZIBBRCD,SP70
          MOVE      KEY40,SAVKEY40
.
          CALL      DENZIB11             * Delete 
.
          MOVE      SAVKEY40,KEY40
          GOTO      ANZP0500
.
ANZP9999  RETURN
.
.
.**************************************************************************
.*                            TNZP0000                                    *
.*  Process NZ private contract procedure fee rev breakdown delete        *
.*  Called by : HNZT0000                                                  *
.**************************************************************************
TNZP0000  PACK      KEY40,SAVKEY37,SP70
TNZP0500  CALL      RSNZRB11
TNZP1000  CALL      RKNZRB11
          BRANCH    OVRCD,TNZP9999         * End of new file
.
          PACK      SAVKEY40,NZRBHOSP,NZRBCLMC,NZRBCNTR,NZRBFTAB:
                             NZRBCPRC,NZRBEFDT,NZRBBRCD,SP70
.
          MATCH     SAVKEY37,SAVKEY40
          GOTO      TNZP9999 IF NOT EQUAL
.
          PACK      KEY40,NZRBHOSP,NZRBCLMC,NZRBCNTR,NZRBFTAB:
                          NZRBCPRC,NZRBEFDT,NZRBBRCD,SP70
          MOVE      KEY40,SAVKEY40
.
          CALL      DENZRB11             * Delete 
.
          MOVE      SAVKEY40,KEY40
          GOTO      TNZP0500
.
TNZP9999  RETURN
.
+
.**************************************************************************
.                    NZDP0000                     Called by : ML1400      *
.      Health Fund Duplication                                            *
.**************************************************************************
NZDP0000  MOVE      ZERO,EXIT
          CALL      DISD0000
.
.         INPUT BED FEE CLAIM CODE
.
NZDP0200  MOVE      SP3,SAVHOSP
          MOVE      SP3,SAVCLM
          MOVE      ZERO,CLMFLG
          CALL      INTV0000
.
          CALL      HDIS0000
.
NZDP0600  CALL      KHOS0000
          PACK      NZBFHOSP,HOSPID,SP70
          PACK      SAVHOSP,NZBFHOSP,SP70
          DISPLAY   *P26:5,*EL;
          MOVE      ONE,CNEWDS
          MOVE      FIVE,EVERT
          MOVE      TWENTY6,ECOL
          MOVE      CODECL,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,NZDP0700,NZDP9500
          MOVE      ACODE,NZBFCLMC
          MOVE      TDESC,CLDES
          MOVE      NZBFCLMC,SAVCLM
          GOTO      NZDP1000
.
.         Nothing entered. Assume all
.
NZDP0700  PACK      CLDES,DALL,SP20
          DISPLAY   *P26:5,*V2LON,CLDES;
          MOVE      SP3,NZBFCLMC
          MOVE      ONE,CLMFLG
          GOTO      HDUN1100
.
NZDP1000   DISPLAY   *P26:5,*V2LON,NZBFCLMC,*HOFF,*P35:5,CLDES;
.
.         INPUT HEALTH FUND
.
HDUN1100  MOVE      SP6,NZBFCNTR
          MOVE      SP6,SAVFUND
          MOVE      SP8,NZBFFTAB
          MOVE      SP8,SAVTAB
          MOVE      SP30,FCODDES
          MOVE      SP30,FTABDES
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,TABFLG
.
          DISPLAY   *P26:6,*EL,*P26:7,*EL;
          MOVE      TWENTY6,ECOL
          MOVE      SIX,EVERT
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY
          BRANCH    EXIT,NZDP1110,NZDP9500
          MOVE      HCODE,NZBFCNTR
          GOTO      NZDP1200
.
NZDP1110  PACK      FCODDES,DALL,SP30
          DISPLAY   *P26:6,*EL,*V2LON,FCODDES;
          PACK      FTABDES,DALL,SP30
          DISPLAY   *P26:7,*EL,*V2LON,FTABDES;
.
          MOVE      SP6,NZBFCNTR
          MOVE      ONE,FNDFLG
          MOVE      ONE,TABFLG
          GOTO      NZDP1310
.
NZDP1200  MOVE      NZBFCNTR,SAVFUND
          MOVE      HFNAME,FCODDES
.
          DISPLAY   *P26:6,*EL,*V2LON,NZBFCNTR,*HOFF,*P35:6,FCODDES;
.
.         INPUT HEALTH FUND TABLE
.
NZDP1230  MOVE      SP8,NZBFFTAB
          MOVE      SP8,SAVTAB
          MOVE      SP30,FTABDES
          MOVE      ZERO,TABFLG
          MOVE      NZBFCNTR,MHFUND
          MOVE      ZERO,CKYIMODE
          MOVE      TWENTY6,ECOL
          MOVE      SEVEN,EVERT
.
          MATCH     SP6,HCODE
          GOTO      NZDP1300 IF EQUAL
.
          CALL      PATTBLKY
          BRANCH    EXIT,NZDP1250,NZDP9500
          MOVE      HFTABL,NZBFFTAB
          GOTO      NZDP1300
.
.         Nothing entered
.
NZDP1250  PACK      FTABDES,DALL,SP30
          DISPLAY   *P26:7,*EL,*V2LON,FTABDES;
          MOVE      SP8,NZBFFTAB
          MOVE      ONE,TABFLG
          GOTO      NZDP1310
.
NZDP1300  MOVE      NZBFFTAB,SAVTAB
          MOVE      HFNAME,FTABDES
          DISPLAY   *P26:7,*EL,*V2LON,NZBFCNTR,*HOFF,*P35:7,FTABDES;
.
.         INPUT ADMISSION TYPE
.
NZDP1310  MOVE      SP3,NZBFATYP
          MOVE      SP3,SAVATYP
          MOVE      SP20,ATYPDES
          MOVE      ZERO,ATYPFLG
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      EIGHT,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODEA,CODE
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,NZDP1320,NZDP9500
          MOVE      ACODE,NZBFATYP
          MOVE      TDESC,ATYPDES
          GOTO      NZDP1330
.
NZDP1320  PACK      ATYPDES,DALL,SP20
          DISPLAY   *P26:8,*V2LON,ATYPDES;
          MOVE      SP3,NZBFATYP
          MOVE      ONE,ATYPFLG
          GOTO      NZDP1400
.
NZDP1330   MOVE      NZBFATYP,SAVATYP
.
          DISPLAY   *P26:8,*V2LON,NZBFATYP,*HOFF,*P35:8,ATYPDES;
.
.         INPUT BED TYPE
.
NZDP1400  MOVE      SP3,NZBFBTYP
          MOVE      SP3,SAVBTYP
          MOVE      SP20,BTYPDES
          MOVE      ZERO,BTYPFLG
.
          DISPLAY   *P26:9,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      NINE,EVERT
          MOVE      CODEBT,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,NZDP1420,NZDP9500
          MOVE      ACODE,NZBFBTYP
          GOTO      NZDP1430
.
NZDP1420  PACK      BTYPDES,DALL,SP20
          DISPLAY   *P26:9,*V2LON,BTYPDES;
          MOVE      SP3,NZBFBTYP
          MOVE      ONE,BTYPFLG
          GOTO      NZDP1500
.
.         Check what was entered
.
NZDP1430  MOVE      NZBFBTYP,SAVBTYP
          MOVE      TDESC,BTYPDES
.
          DISPLAY   *P26:9,*V2LON,NZBFBTYP,*HOFF,*P35:9,BTYPDES;
.
.         Finished Bed Type. Check the option to determine what to do next
.
.         INPUT BED FEE CLAIM CODE 2
.
NZDP1500  CALL      KHOS0000
          PACK      BFHOS1,HOSPID,SP70
          MOVE      SP3,BFCLM1
          MOVE      SP20,CLDES1
          BRANCH    CLMFLG,NZDP1520
.
          DISPLAY   *P26:12,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      TEN2,EVERT
          MOVE      CODECL,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,NZDP1520,NZDP9500
          MOVE      TDESC,CLDES1
          MOVE      ACODE,BFCLM1
          GOTO      NZDP1530
.
.         Nothing entered
.
NZDP1520  PACK      CLDES1,DALL,SP10
          DISPLAY   *P26:12,*V2LON,CLDES1;
.
          COMPARE   ONE,CLMFLG
          GOTO      NZDP1600 IF EQUAL
          DISPLAY   *P1:24,*B,*EL,"Must Not be ALL Here. ";
          CALL      HITENTER
          GOTO      NZDP1500
.
.         Validate what was entered
.
NZDP1530  DISPLAY   *P26:12,*V2LON,BFCLM1,*HOFF,*P35:12,CLDES1;
.
.         INPUT HEALTH FUND 2
.
NZDP1600  MOVE      SP6,BFHFUND1
          MOVE      SP8,BFHFTAB1
          MOVE      SP30,FCODDES1
          MOVE      SP30,FTABDES1
.
          BRANCH    FNDFLG,NZDP1620
.
          DISPLAY   *P26:13,*EL,*P26:14,*EL;
          MOVE      TWENTY6,ECOL
          MOVE      TEN3,EVERT
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY
          BRANCH    EXIT,NZDP1620,NZDP9500
          MOVE      HCODE,BFHFUND1
          GOTO      NZDP1640
.
.         Nothing entered
.
NZDP1620  PACK      FCODDES1,DALL,SP30
          DISPLAY   *P26:13,*EL,*V2LON,FCODDES1;
          MOVE      SP6,BFHFUND1
.
          COMPARE   ONE,FNDFLG
          GOTO      NZDP1630 IF EQUAL
          DISPLAY   *P1:24,*B,*EL,"Must not be ALL here. ";
          CALL      HITENTER
          GOTO      NZDP1600
.
NZDP1630  PACK      FTABDES1,DALL,SP30
          DISPLAY   *P26:14,*EL,*V2LON,FTABDES1;
          GOTO      NZDP1742
.
NZDP1640  MOVE      HFNAME,FCODDES1
          DISPLAY   *P26:13,*EL,*V2LON,BFHFUND1,*HOFF,*P35:13,FCODDES1;
.
.         INPUT HEALTH FUND TABLE 2
.
NZDP1700  MOVE      SP8,BFHFTAB1
          MOVE      SP30,FTABDES1
          MOVE      ZERO,TABFLG1
.
          MOVE      TWENTY6,ECOL
          MOVE      TEN4,EVERT
          MOVE      ZERO,CKYIMODE
          MOVE      BFHFUND1,MHFUND
.
          MATCH     SP6,HCODE
          GOTO      NZDP1740 IF EQUAL
.
          CALL      PATTBLKY
          BRANCH    EXIT,NZDP1730,NZDP9500
          MOVE      HFTABL,BFHFTAB1
          GOTO      NZDP1740
.
NZDP1730  PACK      FTABDES1,DALL,SP20
          DISPLAY   *P26:14,*EL,*V2LON,FTABDES1;
.
.         Check if the table to copy from was entered
.
          COMPARE   ZERO,TABFLG
          GOTO      NZDP1735 IF NOT EQUAL         * No
.
.         to copy the 'from health fund/table' to all tables of the 'to fund'
.
          MOVE      SP8,BFHFTAB1
          MOVE      ONE,TABFLG1
          GOTO      NZDP1742
.
.       We are trying to copy all tables of a health fund to another health fund
.         ( No tables entered for the 'from health fund' )
.         therefore the 'to health fund' must be equal to the 'from health fund'
.
NZDP1735  MATCH     NZBFCNTR,BFHFUND1
          GOTO      NZDP1742 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EL,"Health Fund to be the Same as ":
                    "Fund Copying From. ";
          CALL      HITENTER
          GOTO      NZDP1600
.
NZDP1740  MOVE      HFNAME,FTABDES1
.
          DISPLAY   *P26:14,*EL,*V2LON,BFHFTAB1,*HOFF,*P35:14,FTABDES1;
.
.         INPUT ADMISSION TYPE 2
.
NZDP1742  MOVE      SP3,BFATYPE1
          MOVE      SP20,ATYPDES1
.
          BRANCH    ATYPFLG,NZDP1750
.
          DISPLAY   *P26:15,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TEN5,EVERT
          MOVE      TWENTY6,ECOL
          MOVE      CODEA,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,NZDP1750,NZDP9500
          MOVE      ACODE,BFATYPE1
          MOVE      TDESC,ATYPDES1
          GOTO      NZDP1760
.
.         Nothing entered
.
NZDP1750  PACK      ATYPDES1,DALL,SP20
          DISPLAY   *P26:15,*V2LON,ATYPDES1;
.
          COMPARE   ONE,ATYPFLG
          GOTO      NZDP1800 IF EQUAL
          DISPLAY   *P1:24,*B,*EL,"Must Not be ALL Here. ";
          CALL      HITENTER
          GOTO      NZDP1742
.
.         Validate the input
.
NZDP1760   DISPLAY   *P26:15,*V2LON,BFATYPE1,*HOFF,*P35:15,ATYPDES1;
.
.         INPUT BED TYPE 2
.
NZDP1800  MOVE      SP3,BFBTYPE1
          MOVE      SP20,BTYPDES1
.
          BRANCH    BTYPFLG,NZDP1820
.
          DISPLAY   *P26:16,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TEN6,EVERT
          MOVE      TWENTY6,ECOL
          MOVE      SP3,CKYIDEF3
          MOVE      CODEBT,CODE
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,NZDP1820,NZDP9500
          MOVE      ACODE,BFBTYPE1
          MOVE      TDESC,BTYPDES1
          GOTO      NZDP1830
.
.         Nothing entered
.
NZDP1820  PACK      BTYPDES1,DALL,SP20
          DISPLAY   *P26:16,*EL,*V2LON,BTYPDES1
.
          COMPARE   ONE,BTYPFLG
          GOTO      NZDP1850 IF EQUAL
          DISPLAY   *P1:24,*B,*EL,"Must Not be ALL Here. ";
          CALL      HITENTER
          GOTO      NZDP1800
.
.         Validate the input
.
NZDP1830  DISPLAY   *P26:16,*V2LON,BFBTYPE1,*HOFF,*P35:16,BTYPDES1;
.
NZDP1850  CALL      CONTQST
          BRANCH    CEXIT,NZDP9000,NZDP0000,NZDP9500
.
NZDP9000  CALL      PDUP0000                * Process Health Fund Duplication
          BRANCH    EXIT,NZDP0000
          GOTO      NZDP9600
.
NZDP9500  MOVE      ONE,EXIT
.
NZDP9600  MOVE      SP10,PTCNWBFE
          WRITAB    CONTROLF,HUND10;*11,PTCNWBFE
NZDP9999  RETURN
.
.**************************************************************************
.                    DISD0000                     Called by : ML1400      *
.      Health Fund Duplication                                            *
.**************************************************************************
DISD0000  DISPLAY   *P50:2,*V2LON,"- Health Fund/Table Duplication ";
          DISPLAY   *P1:3,"      ",*V2LON,*ULON,"Copy From",*HOFF:
                    *P1:4,"      Hospital           :":
                    *P1:5,"      Claim Code         :":
                    *P1:6,"      Health Fund        :":
                    *P1:7,"      Health Fund Table  :":
                    *P1:8,"      CMBS Class         :":
                    *P1:9,"      Bed Type           :":
.
                   *P1:10,"      ",*V2LON,*ULON,"Copy To",*HOFF:
                   *P1:11,"      Hospital           :":
                   *P1:12,"      Claim Code         :":
                   *P1:13,"      Health Fund        :":
                   *P1:14,"      Health Fund Table  :":
                   *P1:15,"      CMBS Class         :":
                   *P1:16,"      Bed Type           :";
.
DISD9999  RETURN
.**************************************************************************
.                    PDUP0000                                             *
.     Process  Health Fund Duplication                                    *
.**************************************************************************
PDUP0000  MOVE      ZERO,EXIT
.        Scanning of Duplication Update
.
.         The various flags are all zero or one. If they are all one, then
.         this is an error. Test this by multiplying them all together, and
.         checking if the result is still one.
.
          MOVE      CLMFLG,FORM1             * Initialize check
          MULT      FNDFLG,FORM1
          MULT      TABFLG,FORM1
          MULT      ATYPFLG,FORM1
          MULT      BTYPFLG,FORM1
          BRANCH    FORM1,PDUP8000             * Check if flag still a "1"
.
.         Check if there are any changes (ie. make sure we aren't copying
.         a combination to itself).
.
          PACK      DIM26,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP,NZBFBTYP
          PACK      DIM26A,BFHOS1,BFCLM1,BFHFUND1,BFHFTAB1,BFATYPE1,BFBTYPE1
.
          MATCH     DIM26,DIM26A
          GOTO      PDUP8100 IF EQUAL
.
          DISPLAY   *P1:24,*EL,"Duplicating",*P33:24,"Claim Code : ":
                    *P60:24,"Scanning : ";
.
.         Start from the beginning of the file
.
          PACK      KEY37,SP70
          PACK      KEY37,SAVHOSP,SAVCLM,SP30
          CALL      RSNZBF11             * new file
.
PDUP3000  CALL      RKNZBF11             * new file
          BRANCH    OVRCD,PDUP9000
.
          MATCH     SAVHOSP,NZBFHOSP
          GOTO      PDUP9000 IF NOT EQUAL
.
          PACK      SAVKEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB:
                             NZBFATYP,NZBFBTYP,NZBFEFDT,NZBFEDAY,SP70
          MOVE      BFHOS1,NZBFHOSP
.
          BRANCH    CLMFLG,PDUP3300          * we are doing all claim codes
.
          MATCH     SAVCLM,NZBFCLMC             * check the claim
          GOTO      PDUP9000 IF NOT EQUAL     * finish
.
PDUP3300  PACK      KEY14,BFHFUND1,ZERO,ZERO,ZERO,ZERO,SP10
          CALL      RDFUND1
.
          MOVE      NZBFRATE,SAVFPAT
          MOVE      NZBFREBA,SAVFHF
          MOVE      NZBFDESC,SAVDESC
.
          DISPLAY   *P71:24,NZBFCLMC;
.
PDUP3500  COMPARE   ZERO,TABFLG1
          GOTO      PDUP3900 IF EQUAL
.
          PACK      KEY14,BFHFUND1,ZERO,ZERO,ZERO,ZERO,SP10
          CALL      RDFUND1
          BRANCH    OVRCD,PDUP7500
.
          MATCH     BFHFUND1,HCODE
          GOTO      PDUP7500 IF NOT EQUAL
          MOVE      HFTABL,BFHFTAB1
.
.         Are we doing all claim codes ?
.
PDUP3900  COMPARE   ONE,CLMFLG
          GOTO      PDUP4000 IF EQUAL
.
.         No. Check if this is the claim code we want to change
.
          MATCH     SAVCLM,NZBFCLMC
          GOTO      PDUP3000 IF NOT EQUAL
.
.         Change to the new claim code
.
          MOVE      BFCLM1,NZBFCLMC
.
.         Are we doing all funds ?
.
PDUP4000  COMPARE   ONE,FNDFLG
          GOTO      PDUP5000 IF EQUAL
.
.         No. Check if this is the fund we want to change
.
          MATCH     SAVFUND,NZBFCNTR
          GOTO      PDUP3000 IF NOT EQUAL
.
.         Change to the new fund
.
          MOVE      BFHFUND1,NZBFCNTR
.
.         Are we doing all tables ?
.
PDUP5000  COMPARE   ONE,TABFLG
          GOTO      PDUP5900 IF EQUAL
.
.         No. Check if this is the table we want to change
.
          MATCH     SAVTAB,NZBFFTAB
          GOTO      PDUP3000 IF NOT EQUAL
.
.         Change to the new table
.
          MOVE      BFHFTAB1,NZBFFTAB
.
.         Are we doing all admission type ?
.
PDUP5900  COMPARE   ONE,ATYPFLG
          GOTO      PDUP5950 IF EQUAL
.
.         No. Check if this is the admission type we want to change
.
          MATCH     SAVATYP,NZBFATYP
          GOTO      PDUP3000 IF NOT EQUAL
.
.         Change to the new admission type
.
          MOVE      BFATYPE1,NZBFATYP
.
.         Are we doing all bed types ?
.
PDUP5950  COMPARE   ONE,BTYPFLG
          GOTO      PDUP6000 IF EQUAL
.
.         No. Check if this is the bed type we want to change
.
          MATCH     SAVBTYP,NZBFBTYP
          GOTO      PDUP3000 IF NOT EQUAL
.
.         Change to the new bed type
.
          MOVE      BFBTYPE1,NZBFBTYP
.
.         If we have a health fund, check that it has a valid table
.
PDUP6000  BRANCH    TABFLG1,PDUP6500
.
          MATCH     SP6,NZBFCNTR
          GOTO      PDUP6500 IF EQUAL
.
          PACK      KEY14,NZBFCNTR,NZBFFTAB,SP10
          CALL      RDFUND1
          BRANCH    OVRCD,PDUP3000
.
.         Post this record copy
.
PDUP6500  PACK      KEY37,NZBFHOSP,NZBFCLMC,NZBFCNTR,NZBFFTAB,NZBFATYP:
                               NZBFBTYP,NZBFEFDT,NZBFEDAY,SP70
          CALL      RDNZBF11             * new file
          BRANCH    OVRCD,PDUP6900
.
          DISPLAY   *P46:24,*V2LON,NZBFCLMC;
.
.         Update with the saved details
.
          MOVE      SAVFPAT,NZBFRATE
          MOVE      SAVFHF,NZBFREBA
          MOVE      SAVDESC,NZBFDESC
.
          CALL      UPNZBF11             * new file
          GOTO      PDUP7500
.
.         Write a new record with the saved details
.
PDUP6900  DISPLAY   *P46:24,*V2LON,NZBFCLMC;
.
          MOVE      SAVFPAT,NZBFRATE
          MOVE      SAVFHF,NZBFREBA
          MOVE      SAVDESC,NZBFDESC
          CALL      WRNZBF11             * write to new file
.
.         Reposition on the original record
.
PDUP7500  MOVE      SAVKEY37,KEY37
          CALL      RDNZBF11             * new file
          GOTO      PDUP3000
.
PDUP8000  DISPLAY   *P1:23,*EF,*P1:24,*B:
                    "At LEAST One of the Fields Must Not be ALL. ";
          PRINT     *1,"At LEAST One of the Fields Must Not be ALL. ";
          GOTO      PDUP9999
.
PDUP8100  DISPLAY   *P1:23,*EF,*P1:24,*B,"The From and To Sections Cannot ":
                    "be Identical. ";
          PRINT     *1,"The From and To Sections Cannot ":
                    "be Identical. ";
          GOTO      PDUP9100
.
.         Duplication Update has finished
.
PDUP9000  DISPLAY   *P1:24,*EL,*B,"Duplication Update Completed. ";
.
          MOVE      ZERO,EXIT
          GOTO      PDUP9999
.
PDUP9100  DISPLAY   *P26:12,*EL,*P26:13,*EL,*P26:14,*EL,*P26:15,*EL,*P26:16,*EL;
          MOVE      ONE,EXIT
.
PDUP9999  RETURN
.**************************************************************************
.                    HDIS0000                                             *
.**************************************************************************
HDIS0000  DISPLAY   *P26:5,*EL,*P26:6,*EL,*P26:7,*EL,*P26:8,*EL,*P26:9,*EL:
                    *P26:12,*EL,*P26:13,*EL,*P26:14,*EL,*P26:15,*EL,*P26:16,*EL;
HDIS9999  RETURN
.**************************************************************************
.                    UPDT0000                     Called by : ML1200      *
. Process update of new bed fees to the current bed fee file              *
.**************************************************************************
UPDT0000  KEYIN     *P1:24,*EL,"Do You Want to Copy the New Data ":
                               "to the Existing Bed Fee File (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      UPDT1000 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      UPDT9600 IF EQUAL
.
          BEEP
          GOTO      UPDT0000
.
UPDT1000  CALL      UPCF0000               * update nzpbfeaf with nzpbf1af
.
UPDT9600  MOVE      SP10,PTCNWBFE
          WRITAB    CONTROLF,HUND10;*11,PTCNWBFE
UPDT9999  RETURN
+
.**************************************************************************
.                    aPCF0000                     Called by :UPDTP0000    *
.   Update the current file (patbfeef) with the new file (newbfeef)       *
.**************************************************************************
UPCF0000  CALL      DLCR0000                * Delete current bed fee records
.
          CALL      LNCR0000                * Load new fees to current file
.
          CALL      DNNZ0000                * clear new bed fee file records
.
UPCF9999  RETURN
.
.**************************************************************************
.*                               CNZM0000              Called by: ML3000  *
.* Create new NZ Private Misc Charge file. This will delete               *
.* all record from the new NZ Private misc charge Fee file and            *
.* load with current file records.                                        *
.**************************************************************************
.
CNZM0000  KEYIN     *P1:24,*EL:
                    "Are You Sure You Want to Overwrite the New File (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNZM1000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNZM9500 IF EQUAL
.
          BEEP
          GOTO      CNZM0000
.
CNZM1000  KEYIN     *P1:24,*EL,"Do You Want to Start with a Copy of the":
                    " Current Data (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNZM9000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNZM2000 IF EQUAL
.
          BEEP
          GOTO      CNZM1000
.
CNZM2000  KEYIN     *P1:24,*EL,"You Will Lose All Current Misc Charges":
                               ".  Are You ":
                               "Sure (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,DIM1;
.
          REP       UPPLOW,DIM1
          MATCH     ANSY,DIM1
          GOTO      CNZM8000 IF EQUAL
.
          MATCH     ANSN,DIM1
          GOTO      CNZM9500 IF EQUAL
.
          BEEP
          GOTO      CNZM2000
.
CNZM8000  CALL      DNZM0000                * Delete all record from new file
          MOVE      ZERO,EXIT               * Do not load current file date
          GOTO      CNZM9600
.
CNZM9000  CALL      DNZM0000                * Delete all records from new file
          CALL      LNZM0000                * Load current record to new file
.
          MOVE      ZERO,EXIT
          GOTO      CNZM9600
.
CNZM9500  MOVE      ONE,EXIT
.
CNZM9600
.
CNZM9999  RETURN
.
.**************************************************************************
.*                               DNZM0000              Called by: CNZM0000*
.* Delete all of the new NZ Private misc charges records                  *
.**************************************************************************
DNZM0000  PACK      KEY37,SP70
          CALL      RSNZMC11
          CALL      RKNZMC11
          BRANCH    OVRCD,DNZM2000         * End of misc charge
.
          PACK      KEY37,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG:
                          NZMCEFDT,SP70
.
          CALL      DENZMC11               * Delete 
.
          GOTO      DNZM0000
.
DNZM2000  PACK      KEY40,SP70
          CALL      RSNZMX11
          CALL      RKNZMX11
          BRANCH    OVRCD,DNZM9999         * End of exploding item 
.
          PACK      KEY40,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB,NZMXMCHG:
                          NZMXEFDT,NZMXUNIQ,SP70
.
          CALL      DENZMX11               * Delete exploding item
.
          GOTO      DNZM2000
.
DNZM9999  RETURN
.
.**************************************************************************
.*                               LNZM0000              Called by: CNTM0000*
.* Load current NZ Private misc charge data to the new file               *
.**************************************************************************
LNZM0000  PACK      KEY37,SP70
          CALL      RSNZMCH1
LNZM1000  CALL      RKNZMCH1
          BRANCH    OVRCD,LNZM2000         * End of misc charge
.
          PACK      KEY37,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG:
                          NZMCEFDT,SP70
.
          CALL      WRNZMC11               * Write to new file
.
          GOTO      LNZM1000
.
LNZM2000  PACK      KEY40,SP70
          CALL      RSNZMXC1
LNZM2500  CALL      RKNZMXC1
          BRANCH    OVRCD,LNZM9999         * End of exploding items
.
          PACK      KEY40,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB,NZMXMCHG:
                          NZMXEFDT,NZMXUNIQ,SP70
.
          CALL      WRNZMX11               * Write to exploding items
.
          GOTO      LNZM2500
.
LNZM9999  RETURN
.
.
.**************************************************************************
.*                               UNZM0000              Called by: ML3100  *
.*    Update New to Current NZ misc charge                                *
.**************************************************************************
UNZM0000  KEYIN     *P1:24,*EL,"Are you sure you want to copy the new data ":
                    "over the old (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    ") ? ",*V2LON,ANS;
.
          MOVE      ZERO,EXIT
          MATCH     ANSY,ANS
          GOTO      UNZM1000 IF EQUAL
.
          MOVE      ONE,EXIT
          MATCH     ANSN,ANS
          GOTO      UNZM9999 IF EQUAL
          BEEP
          GOTO      UNZM0000
.
UNZM1000  DISPLAY   *P1:24,*EL,*V2LON:
                    "** Copying new data over old... ",*BLINKON:
                    "Please wait",*HOFF,*V2LON," **";
.
          PACK      KEY37,SP70
          CALL      RSNZMC11
UNZM1200  CALL      RKNZMC11
          BRANCH    OVRCD,UNZM9999     * Exit if new file is empty
.
          CALL      RNZM0000           * Delete all records from current file
          CALL      MNZM0000           * Write new file to current file
          CALL      DNZM0000           * Delete all records from new file
.
UNZM9999  RETURN
.
.**************************************************************************
.*                               RNZM0000              Called by: UNZM0000*
.* Delete all of the current NZ Private misc charges file records         *
.**************************************************************************
RNZM0000  PACK      KEY37,SP70
          CALL      RSNZMCH1
          CALL      RKNZMCH1
          BRANCH    OVRCD,RNZM2000         * End of misc charge
.
          PACK      KEY37,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG:
                          NZMCEFDT,SP70
.
          CALL      DENZMCH1               * Delete 
.
          GOTO      RNZM0000
.
RNZM2000  PACK      KEY40,SP70
          CALL      RSNZMXC1
          CALL      RKNZMXC1
          BRANCH    OVRCD,RNZM9999         * End of inv breakdown
.
          PACK      KEY40,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB,NZMXMCHG:
                          NZMXEFDT,NZMXUNIQ,SP70
.
          CALL      DENZMXC1               * Delete from inv breakdwon
.
          GOTO      RNZM2000
.
RNZM9999  RETURN
.
.**************************************************************************
.*                               MNZM0000              Called by: UNZM0000*
.* Load new NZ Private misc charge records to the current file            *
.**************************************************************************
MNZM0000  PACK      KEY37,SP70
          CALL      RSNZMC11
MNZM1000  CALL      RKNZMC11
          BRANCH    OVRCD,MNZM2000         * End of misc item
.
          PACK      KEY37,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG:
                          NZMCEFDT,SP70
.
          CALL      WRNZMCH1               * Write to new file
.
          GOTO      MNZM1000
.
MNZM2000  PACK      KEY40,SP70
          CALL      RSNZMX11
MNZM2500  CALL      RKNZMX11
          BRANCH    OVRCD,MNZM9999         * End of exploding item
.
          PACK      KEY40,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB,NZMXMCHG:
                          NZMXEFDT,NZMXUNIQ,SP70
.
          CALL      WRNZMXC1               * Write to new exploding item
.
          GOTO      MNZM2500
.
MNZM9999  RETURN
.
.
.**************************************************************************
.*                               HNZM0000              Called by: ML3200  *
.* Global duplication of new NZ private misc charge file                  *
.**************************************************************************
HNZM0000  DISPLAY   *P50:2,*V2LON,"- Global Duplication NZ Private Misc ":
                                  "Charges"
          CALL      SNZM0000                 * Display screen
          CALL      KNZM0000                 * Keyin details
          BRANCH    EXIT,HNZM9500
.
          CALL      BNZM0000                 * Display Copy To screen
          CALL      ENZM0000                 * Keyin Copy To details
          BRANCH    EXIT,HNZM9500
.
          MATCH     FROMHOSP,CPTOHOSP        * Check hospital
          GOTO      HNZM1000 IF NOT EQUAL
.
          MATCH     FROMCLAM,CPTOCLAM        * Check claim code
          GOTO      HNZM1000 IF NOT EQUAL
.
          MATCH     FROMHFND,CPTOHFND        * Check health fund
          GOTO      HNZM1000 IF NOT EQUAL
.
          MATCH     FROMHFTB,CPTOHFTB        * check health fund table
          GOTO      HNZM1000 IF NOT EQUAL
.
          MATCH     FROMMCHG,CPTOMCHG        * Check misc charge        
          GOTO      HNZM1000 IF NOT EQUAL
.
          MATCH     FROMEDAT,CPTOEDAT        * check effective date
          GOTO      HNZM1000 IF NOT EQUAL
.
          GOTO      HNZM9000                 * Error copy from/to identical
.
HNZM1000  CALL      DELQST
          BRANCH    CEXIT,HNZM8000,HNZM0000,HNZM9500
.
HNZM8000  CALL      WNZM0000                 * Process misc charge duplication
          MOVE      ZERO,EXIT
          GOTO      HNZM9999
.
HNZM9000  DISPLAY   *P1:23,*EF,*P1:24,*B,"The From and To Sections Cannot ":
                    "be Identical. ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      HNZM9999
.
HNZM9500  MOVE      ONE,EXIT
.         
HNZM9999  RETURN
.
.
.**************************************************************************
.*                         SNZM0000                                       *
.*  Display screen layout                                                 *
.*  Called by : HNZM0000                                                  *
.**************************************************************************
.
SNZM0000  COMPARE   "23",OPTION
          GOTO      SNZM1000 IF NOT EQUAL        * Not Deletion
.
          DISPLAY   *P1:4,*EF:
                    *P5:4,"Hospital       : ":
                    *P5:5,"Claim Code     : ":
                    *P5:6,"Health Fund    : ":
                    *P5:7,"H/Fund Table   : ":
                    *P5:8,"Misc Charge    : ":
                    *P5:9,"Active/Inactive: ":
                    *P5:10,"Effective From Date : ":
                    *P5:11,"Effective To Date   : "
          GOTO      SNZM9999
.
SNZM1000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Hospital       : ":
                    *P5:5,"Claim Code     : ":
                    *P5:6,"Health Fund    : ":
                    *P5:7,"H/Fund Table   : ":
                    *P5:8,"Misc Charge    : ":
                    *P5:9,"Effective Date : "
.
SNZM9999  RETURN
.
.**************************************************************************
.*                         BNZM0000                                       *
.*  Display screen layout                                                 *
.*  Called by : HNZM0000                                                  *
.**************************************************************************
.
BNZM0000  DISPLAY   *P1:11,*EF,"Copy To":
                    *P5:13,"Hospital       : ":
                    *P5:14,"Claim Code     : ":
                    *P5:15,"Health Fund    : ":
                    *P5:16,"H/Fund Table   : ":
                    *P5:17,"Misc Charge    : ":
                    *P5:18,"Effective Date : "
.
BNZM9999  RETURN
.
.
.**************************************************************************
.*                            KNZM0000                                    *
.*  Keyin hospital, claim code, health fund ,                             *
.*  health fund table, contract procedure and effective date              *
.*  Called by : HNZP0000                                                  *
.**************************************************************************
KNZM0000  MOVE      ZERO,EXIT
.
          KEYIN     *P26:4,*EL,*V2LON,FROMHOSP;
          PACK      FROMHOSP,FROMHOSP,SP70
.
          MATCH     SP70,FROMHOSP
          IF        @EQUAL
            DISPLAY   *P26:4,*V2LON,"Blank";
            GOTO      KNZM2000
          ENDIF
.
          MATCH     "All",FROMHOSP
          IF        @EQUAL
            DISPLAY   *P26:4,*V2LON,"All";
            GOTO      KNZM2000
          ENDIF
.
          PACK      KEY3,FROMHOSP,SP70
          CALL      RDPTHSP1
          BRANCH    OVRCD,KNZM9000
.
          DISPLAY   *P35:4,PTHSNAME;
.
.         Keyin Claim Code
.
KNZM2000  KEYIN     *P26:5,*EL,*V2LON,FROMCLAM;
          PACK      FROMCLAM,FROMCLAM,SP70
.
          MATCH     "All",FROMCLAM
          IF        @EQUAL
            DISPLAY   *P26:5,*V2LON,"All";
            GOTO      KNZM3000
          ENDIF
.
          MATCH     SP70,FROMCLAM
          IF        @EQUAL
            DISPLAY   *P26:5,*V2LON,"Blank";
            GOTO      KNZM3000
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,FROMCLAM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,KNZM9000
.
          DISPLAY   *P35:5,TDESC;
.
.         Keyin Health Fund
.
KNZM3000  KEYIN     *P26:6,*EL,*V2LON,FROMHFND;
          PACK      FROMHFND,FROMHFND,SP70
.
          MATCH     "All",FROMHFND
          IF        @EQUAL
            DISPLAY   *P26:6,*V2LON,"All";
            GOTO      KNZM4000
          ENDIF
.
          MATCH     SP70,FROMHFND
          IF        @EQUAL
            DISPLAY   *P26:6,*V2LON,"Blank";
            GOTO      KNZM4000
          ENDIF
.
          PACK      KEY14,FROMHFND,ZERO,ZERO,ZERO,ZERO,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,KNZM9000
.
          DISPLAY   *P35:6,HFNAME;
.
.         Keyin Health Fund Table
.
KNZM4000  KEYIN     *P26:7,*EL,*V2LON,FROMHFTB;
          PACK      FROMHFTB,FROMHFTB,SP70
.
          MATCH     "All",FROMHFTB
          IF        @EQUAL
            DISPLAY   *P26:7,*V2LON,"All";
            GOTO      KNZM5000
          ENDIF
.
          MATCH     SP70,FROMHFTB
          IF        @EQUAL
            DISPLAY   *P26:7,*V2LON,"Blank";
            GOTO      KNZM5000
          ENDIF
.
          PACK      KEY14,FROMHFND,FROMHFTB,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,KNZM9000
.
          DISPLAY   *P35:7,HFNAME;
.
.         Misc Charge Code
.
KNZM5000  KEYIN     *P26:8,*EL,*V2LON,FROMMCHG;
          PACK      FROMMCHG,FROMMCHG,SP70
.
          MATCH     "All",FROMMCHG
          IF        @EQUAL
            DISPLAY   *P26:8,*V2LON,"All";
            GOTO      KNZM6000
          ENDIF
.
          MATCH     SP70,FROMMCHG
          IF        @EQUAL
            DISPLAY   *P26:8,*V2LON,"Blank";
            GOTO      KNZM6000
          ENDIF
.
          MOVE      FROMMCHG,KEY9
          CALL      NZMD0000
.         BRANCH    EXIT,KNZM9000
.
          DISPLAY   *P35:8,NZMCDESC;
.
.         Active/Inactive flag
.
KNZM6000  MOVE      SP70,ACTFLAG
          COMPARE   "23",OPTION
          GOTO      KNZM7000 IF NOT EQUAL
.
          DISPLAY   *P30:9,*EL,"1-Inactive,0-Active";
.
          KEYIN     *P26:9,*V2LON,ACTFLAG;
          PACK      ACTFLAG,ACTFLAG,SP70
.
          MOVE      "All       ",KEY10
          MATCH     "1",ACTFLAG
          IF        @EQUAL
            MOVE      "Inactive  ",KEY10
          ELSE
            MATCH     "0",ACTFLAG
            IF        @EQUAL
              MOVE      "Active    ",KEY10
            ENDIF
          ENDIF
          DISPLAY   *P30:9,*EL,KEY10;
.
.         Keyin Effective Date
.
KNZM7000  MOVE      "26",CCOL
          MOVE      "10",CVERT
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,KNZM7500
.
          PACK      FROMEDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FROMEDAT
          GOTO      KNZM7800
.
KNZM7500  DISPLAY   *P26:10,*V2LON,"All";
          MOVE      SP70,FROMEDAT
          GOTO      KNZM7800
.
.         Keyin Effective End Date
.
KNZM7800  COMPARE   "23",OPTION
          GOTO      KNZM8000 IF NOT EQUAL
.
          MOVE      "26",CCOL
          MOVE      "11",CVERT
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,KNZM7900
.
          PACK      FROMXDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FROMXDAT
.
          GOTO      KNZM8000
.
KNZM7900  DISPLAY   *P26:11,*V2LON,"All";
          MOVE      SP70,FROMXDAT
          GOTO      KNZM8000
.
KNZM8000  MOVE      ZERO,EXIT
          GOTO      KNZM9999
.
KNZM9000  MOVE      ONE,EXIT
.
KNZM9999  RETURN
.
.------------------------------------------------------------
. Get NZ Private Misc. Charge description
.------------------------------------------------------------
NZMD0000  MOVE      ZERO,EXIT
          PACK      KEY8,CCC,CYY,CMM,CDD      * set to current date
          REP       " 0",KEY8
          IF        IBCNMHOS=1
            PACK      KEY3,SP70
            CALL      RSPTHSP1
            CALL      RKPTHSP1
            BRANCH    OVRCD,NZMD9000
.
            PACK      KEY29,SP3,PTHSDCLM,SP6,SP8,KEY9,SP70
            PACK      KEY37,SP3,PTHSDCLM,SP6,SP8,KEY9,KEY8,SP70
          ELSE
            PACK      KEY29,SP3,PTCNDCLM,SP6,SP8,KEY9,SP70
            PACK      KEY37,SP3,PTCNDCLM,SP6,SP8,KEY9,KEY8,SP70
          ENDIF
          CALL      RDNZMCH1
          COMPARE   ZERO,OVRCD
          GOTO      NZMD8000 IF EQUAL
.
.         check for current record
.
          CALL      RPNZMCH1
          BRANCH    OVRCD,NZMD9000
          PACK      KEY29A,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG,SP70
          MATCH     KEY29,KEY29A
          GOTO      NZMD9000 IF NOT EQUAL   * item not found
.
NZMD8000  MOVE      ZERO,EXIT
          GOTO      NZMD9999
.
NZMD9000  MOVE      ONE,EXIT
.
NZMD9999  RETURN
.
.**************************************************************************
.*                            ENZM0000                                    *
.*  Keyin to hospital, to claim code, to health fund ,                    *
.*  to health fund table,to contract procedure and to effective date      *
.*  Called by : HNZP0000                                                  *
.**************************************************************************
ENZM0000  MOVE      ZERO,EXIT
.
          KEYIN     *P26:13,*EL,*V2LON,CPTOHOSP;
          PACK      CPTOHOSP,CPTOHOSP,SP70
.
          MATCH     SP70,CPTOHOSP
          IF        @EQUAL
            DISPLAY   *P26:13,*V2LON,"Blank";
            GOTO      ENZM2000
          ENDIF
.
          MATCH     "All",CPTOHOSP
          IF        @EQUAL
            DISPLAY   *P26:13,*V2LON,"All";
            GOTO      ENZM2000
          ENDIF
.
          PACK      KEY3,CPTOHOSP,SP70
          CALL      RDPTHSP1
          BRANCH    OVRCD,ENZM9000
.
          DISPLAY   *P35:13,PTHSNAME;
.
.         Keyin Claim Code
.
ENZM2000  KEYIN     *P26:14,*EL,*V2LON,CPTOCLAM;
          PACK      CPTOCLAM,CPTOCLAM,SP70
.
          MATCH     "All",CPTOCLAM
          IF        @EQUAL
            DISPLAY   *P26:14,*V2LON,"All";
            GOTO      ENZM3000
          ENDIF
.
          MATCH     SP70,CPTOCLAM
          IF        @EQUAL
            DISPLAY   *P26:14,*V2LON,"Blank";
            GOTO      ENZM3000
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,CPTOCLAM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,ENZM9000
.
          DISPLAY   *P35:14,TDESC;
.
.         Keyin Health Fund
.
ENZM3000  KEYIN     *P26:15,*EL,*V2LON,CPTOHFND;
          PACK      CPTOHFND,CPTOHFND,SP70
.
          MATCH     "All",CPTOHFND
          IF        @EQUAL
            DISPLAY   *P26:15,*V2LON,"All";
            GOTO      ENZM4000
          ENDIF
.
          MATCH     SP70,CPTOHFND
          IF        @EQUAL
            DISPLAY   *P26:15,*V2LON,"Blank";
            GOTO      ENZM4000
          ENDIF
.
          PACK      KEY14,CPTOHFND,ZERO,ZERO,ZERO,ZERO,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,ENZM9000
.
          DISPLAY   *P35:15,HFNAME;
.
.         Keyin Health Fund Table
.
ENZM4000  KEYIN     *P26:16,*EL,*V2LON,CPTOHFTB;
          PACK      CPTOHFTB,CPTOHFTB,SP70
.
          MATCH     "All",CPTOHFTB
          IF        @EQUAL
            DISPLAY   *P26:16,*V2LON,"All";
            GOTO      ENZM5000
          ENDIF
.
          MATCH     SP70,CPTOHFTB
          IF        @EQUAL
            DISPLAY   *P26:16,*V2LON,"Blank";
            GOTO      ENZM5000
          ENDIF
.
          PACK      KEY14,CPTOHFND,CPTOHFTB,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,ENZM9000
.
          DISPLAY   *P35:16,HFNAME;
.
.         Contract Procedure Code
.
ENZM5000  KEYIN     *P26:17,*EL,*V2LON,CPTOMCHG;
          PACK      CPTOMCHG,CPTOMCHG,SP70
.
          MATCH     "All",CPTOMCHG
          IF        @EQUAL
            DISPLAY   *P26:17,*V2LON,"All";
            GOTO      ENZM6000
          ENDIF
.
          MATCH     SP70,CPTOMCHG
          IF        @EQUAL
            DISPLAY   *P26:17,*V2LON,"Blank";
            GOTO      ENZM6000
          ENDIF
.
          MOVE      CPTOMCHG,KEY9
          CALL      NZMD0000
          BRANCH    EXIT,KNZM9000
.
          DISPLAY   *P35:17,NZMCDESC;
.
.         Keyin Effective Date
.
ENZM6000  MOVE      "26",CCOL
          MOVE      "18",CVERT
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,ENZM6500
.
          PACK      CPTOEDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CPTOEDAT
.
          GOTO      ENZM8000
.
ENZM6500  DISPLAY   *P26:18,*V2LON,"All";
          MOVE      SP70,CPTOEDAT
.
ENZM8000  MOVE      ZERO,EXIT
          GOTO      ENZM9999
.
ENZM9000  MOVE      ONE,EXIT
.
ENZM9999  RETURN
.
.**************************************************************************
.*                            WNZM0000                                    *
.*  Process NZ private misc charge duplication                            *
.*  Called by : HNZM0000                                                  *
.**************************************************************************
WNZM0000  PACK      KEY37,SP70
WNZM0500  CALL      RSNZMC11
WNZM1000  CALL      RKNZMC11
          BRANCH    OVRCD,WNZM9999         * End of new file
.
          MATCH     "All",FROMHOSP         * Hospital
          IF        !@EQUAL
            MATCH     NZMCHOSP,FROMHOSP
            GOTO      WNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCLAM         * Claim Code
          IF        !@EQUAL
            MATCH     FROMCLAM,NZMCCLMC
            GOTO      WNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFND         * Health Fund
          IF        !@EQUAL
            MATCH     FROMHFND,NZMCCNTR
            GOTO      WNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFTB         * Health Fund Table
          IF        !@EQUAL
            MATCH     FROMHFTB,NZMCFTAB
            GOTO      WNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMMCHG         * Misc Charge
          IF        !@EQUAL
            MATCH     FROMCPRC,NZMCMCHG
            GOTO      WNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,FROMEDAT          * Effective Date
          IF        !@EQUAL
            MATCH     FROMEDAT,NZMCEFDT
            GOTO      WNZM1000 IF NOT EQUAL
          ENDIF
.
          PACK      SAVKEY37,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB:
                             NZMCMCHG,NZMCEFDT,SP70
.
          MATCH     "All",CPTOHOSP         * Hospital
          IF        !@EQUAL
            MOVE      CPTOHOSP,NZMCHOSP
          ENDIF
.
          MATCH     "All",CPTOCLAM         * Claim Code
          IF        !@EQUAL
            MOVE      CPTOCLAM,NZMCCLMC
          ENDIF
.
          MATCH     "All",CPTOHFND         * Health Fund
          IF        !@EQUAL
            MOVE      CPTOHFND,NZMCCNTR
          ENDIF
.
          MATCH     "All",CPTOHFTB         * Health Fund Table
          IF        !@EQUAL
            MOVE      CPTOHFTB,NZMCFTAB
          ENDIF
.
          MATCH     "All",CPTOMCHG         * Misc Charge
          IF        !@EQUAL
            MOVE      CPTOMCHG,NZMCMCHG
          ENDIF
.
          MATCH     SP70,CPTOEDAT          * Effective Date
          IF        !@EQUAL
            MOVE      CPTOEDAT,NZMCEFDT
          ENDIF
.
          PACK      KEY37,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB:
                          NZMCMCHG,NZMCEFDT,SP70
.
          CALL      RANZMC11
          IF        OVRCD=1
            CALL      WRNZMC11             * Write record to new file
          ENDIF
.
          CALL      INZM0000               * Copy exploding items
.
          MOVE      SAVKEY37,KEY37
          GOTO      WNZM0500
.
WNZM9999  RETURN
.
.**************************************************************************
.*                            INZM0000                                    *
.*  Process NZ private exploding misc items                               *
.*  Called by : HNZM0000                                                  *
.**************************************************************************
INZM0000  PACK      KEY40,SAVKEY37,SP70
INZM0500  CALL      RSNZMX11
INZM1000  CALL      RKNZMX11
          BRANCH    OVRCD,INZM9999         * End of new file
.
          PACK      SAVKEY40,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB:
                             NZMXMCHG,NZMXEFDT,NZMXUNIQ,SP70
.
          MATCH     SAVKEY37,SAVKEY40
          GOTO      INZM9999 IF NOT EQUAL
.
          MATCH     "All",CPTOHOSP         * Hospital
          IF        !@EQUAL
            MOVE      CPTOHOSP,NZMXHOSP
          ENDIF
.
          MATCH     "All",CPTOCLAM         * Claim Code
          IF        !@EQUAL
            MOVE      CPTOCLAM,NZMXCLMC
          ENDIF
.
          MATCH     "All",CPTOHFND         * Health Fund
          IF        !@EQUAL
            MOVE      CPTOHFND,NZMXCNTR
          ENDIF
.
          MATCH     "All",CPTOHFTB         * Health Fund Table
          IF        !@EQUAL
            MOVE      CPTOHFTB,NZMXFTAB
          ENDIF
.
          MATCH     "All",CPTOMCHG         * Misc Charge
          IF        !@EQUAL
            MOVE      CPTOMCHG,NZMXMCHG
          ENDIF
.
          MATCH     SP70,CPTOEDAT          * Effective Date
          IF        !@EQUAL
            MOVE      CPTOEDAT,NZMXEFDT
          ENDIF
.
          PACK      KEY40,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB:
                          NZMXMCHG,NZMXEFDT,NZMXUNIQ,SP70
.
          CALL      RANZMX11
          IF        OVRCD=1
            CALL      WRNZMX11             * Write record to new file
          ENDIF
.
          MOVE      SAVKEY40,KEY40
          GOTO      INZM0500
.
INZM9999  RETURN
.
.**************************************************************************
.*                               QNZM0000              Called by: ML3300  *
.* Global delete of new NZ private misc charges file                      *
.**************************************************************************
QNZM0000  DISPLAY   *P50:2,*V2LON,"- Global Deletion NZ Private Misc":
                                  " Charges";
          CALL      SNZM0000                 * Display screen
          CALL      KNZM0000                 * Keyin details
          BRANCH    EXIT,QNZM9500
.
          CALL      DELQST
          BRANCH    CEXIT,QNZM8000,QNZM0000,QNZM9500
.
QNZM8000  CALL      PNZM0000                 * Process Delete records new file
          MOVE      ZERO,EXIT
          GOTO      QNZM9999
.
QNZM9500  MOVE      ONE,EXIT
.
QNZM9999  RETURN
.
.
.**************************************************************************
.*                            PNZM0000                                    *
.*  Process NZ private misc charge deletion                               *
.*  Called by : HNZM0000                                                  *
.**************************************************************************
PNZM0000  PACK      KEY37,SP70
PNZM0500  CALL      RSNZMC11
PNZM1000  CALL      RKNZMC11
          BRANCH    OVRCD,PNZM9999         * End of new file
.
          MATCH     "All",FROMHOSP         * Hospital
          IF        !@EQUAL
            MATCH     NZMCHOSP,FROMHOSP
            GOTO      PNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCLAM         * Claim Code
          IF        !@EQUAL
            MATCH     FROMCLAM,NZMCCLMC
            GOTO      PNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFND         * Health Fund
          IF        !@EQUAL
            MATCH     FROMHFND,NZMCCNTR
            GOTO      PNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFTB         * Health Fund Table
          IF        !@EQUAL
            MATCH     FROMHFTB,NZMCFTAB
            GOTO      PNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMMCHG         * Misc charge
          IF        !@EQUAL
            MATCH     FROMMCHG,NZMCMCHG
            GOTO      PNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,ACTFLAG          * Active/Inactive flag
          IF        !@EQUAL
            MOVE      NZMCACFL,KEY1
            REP       " 0",KEY1           * Blank for Active
            MATCH     ACTFLAG,KEY1
            GOTO      PNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,FROMEDAT          * Effective Date
          IF        !@EQUAL
            MATCH     FROMEDAT,NZMCEFDT
            GOTO      PNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,FROMXDAT          * Effective To Date
          IF        !@EQUAL
            MATCH     FROMXDAT,NZMCEEDT
            GOTO      PNZM1000 IF NOT EQUAL
          ENDIF
.
          PACK      KEY37,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB:
                          NZMCMCHG,NZMCEFDT,SP70
          MOVE      KEY37,SAVKEY37
.
          CALL      DENZMC11               * Delete record from new file
.
          CALL      ANZM0000               * Delete exploding items
.
          MOVE      SAVKEY37,KEY37
          GOTO      PNZM0500
.
PNZM9999  RETURN
.
.
.**************************************************************************
.*                            ANZM0000                                    *
.*  Process NZ private misc charge exploding items                        *
.*  Called by : HNMT0000                                                  *
.**************************************************************************
ANZM0000  PACK      KEY40,SAVKEY37,SP70
ANZM0500  CALL      RSNZMX11
ANZM1000  CALL      RKNZMX11
          BRANCH    OVRCD,ANZM9999         * End of new file
.
          PACK      SAVKEY40,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB:
                             NZMXMCHG,NZMXEFDT,NZMXUNIQ,SP70
.
          MATCH     SAVKEY37,SAVKEY40
          GOTO      ANZM9999 IF NOT EQUAL
.
          PACK      KEY40,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB:
                          NZMXMCHG,NZMXEFDT,NZMXUNIQ,SP70
          MOVE      KEY40,SAVKEY40
.
          CALL      DENZMX11             * Delete 
.
          MOVE      SAVKEY40,KEY40
          GOTO      ANZM0500
.
ANZM9999  RETURN
.
.**************************************************************************
.*                               TNZM0000              Called by: ML3400  *
.* Global udpate of new NZ private misc charges file                      *
.**************************************************************************
TNZM0000  DISPLAY   *P50:2,*V2LON,"- Global Update NZ Private Misc":
                                  " Charges";
          CALL      VNZM0000                 * Display screen
          CALL      JNZM0000                 * Keyin details
          BRANCH    EXIT,TNZM9500
.
          CALL      DELQST
          BRANCH    CEXIT,TNZM8000,TNZM0000,TNZM9500
.
TNZM8000  CALL      YNZM0000                 * Process update records new file
          MOVE      ZERO,EXIT
          GOTO      TNZM9999
.
TNZM9500  MOVE      ONE,EXIT
.
TNZM9999  RETURN
.
.
.**************************************************************************
.*                         TNZM0000                                       *
.*  Display screen layout                                                 *
.*  Called by : HNZM0000                                                  *
.**************************************************************************
.
VNZM0000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Hospital       : ":
                    *P5:5,"Claim Code     : ":
                    *P5:6,"Health Fund    : ":
                    *P5:7,"H/Fund Table   : ":
                    *P5:8,"Misc Charge    : ":
                    *P5:9,"Effective Date : ":
                    *P5:10,"Increase       : ":
                    *P5:11,"Amount         : "
.
VNZM9999  RETURN
.
.
.**************************************************************************
.*                            JNZM0000                                    *
.*  Keyin hospital, claim code, health fund ,                             *
.*  health fund table, misc charge and effective date                     *
.*  Called by : HNZP0000                                                  *
.**************************************************************************
JNZM0000  MOVE      ZERO,EXIT
.
          KEYIN     *P26:4,*EL,*V2LON,FROMHOSP;
          PACK      FROMHOSP,FROMHOSP,SP70
.
          MATCH     SP70,FROMHOSP
          IF        @EQUAL
            DISPLAY   *P26:4,*V2LON,"Blank";
            GOTO      JNZM2000
          ENDIF
.
.
          MATCH     "All",FROMHOSP
          IF        @EQUAL
            DISPLAY   *P26:4,*V2LON,"All";
            GOTO      JNZM2000
          ENDIF
.
          PACK      KEY3,FROMHOSP,SP70
          CALL      RDPTHSP1
          BRANCH    OVRCD,JNZM9000
.
          DISPLAY   *P35:4,PTHSNAME;
.
.         Keyin Claim Code
.
JNZM2000  KEYIN     *P26:5,*EL,*V2LON,FROMCLAM;
          PACK      FROMCLAM,FROMCLAM,SP70
.
          MATCH     "All",FROMCLAM
          IF        @EQUAL
            DISPLAY   *P26:5,*V2LON,"All";
            GOTO      JNZM3000
          ENDIF
.
          MATCH     SP70,FROMCLAM
          IF        @EQUAL
            DISPLAY   *P26:5,*V2LON,"Blank";
            GOTO      JNZM3000
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,FROMCLAM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,JNZM9000
.
          DISPLAY   *P35:5,TDESC;
.
.         Keyin Health Fund
.
JNZM3000  KEYIN     *P26:6,*EL,*V2LON,FROMHFND;
          PACK      FROMHFND,FROMHFND,SP70
.
          MATCH     "All",FROMHFND
          IF        @EQUAL
            DISPLAY   *P26:6,*V2LON,"All";
            GOTO      JNZM4000
          ENDIF
.
          MATCH     SP70,FROMHFND
          IF        @EQUAL
            DISPLAY   *P26:6,*V2LON,"Blank";
            GOTO      JNZM4000
          ENDIF
.
          PACK      KEY14,FROMHFND,ZERO,ZERO,ZERO,ZERO,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,JNZM9000
.
          DISPLAY   *P35:6,HFNAME;
.
.         Keyin Health Fund Table
.
JNZM4000  KEYIN     *P26:7,*EL,*V2LON,FROMHFTB;
          PACK      FROMHFTB,FROMHFTB,SP70
.
          MATCH     "All",FROMHFTB
          IF        @EQUAL
            DISPLAY   *P26:7,*V2LON,"All";
            GOTO      JNZM5000
          ENDIF
.
          MATCH     SP70,FROMHFTB
          IF        @EQUAL
            DISPLAY   *P26:7,*V2LON,"Blank";
            GOTO      JNZM5000
          ENDIF
.
          PACK      KEY14,FROMHFND,FROMHFTB,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,JNZM9000
.
          DISPLAY   *P35:7,HFNAME;
.
.         Misc Charge Code
.
JNZM5000  KEYIN     *P26:8,*EL,*V2LON,FROMMCHG;
          PACK      FROMMCHG,FROMMCHG,SP70
.
          MATCH     "All",FROMMCHG
          IF        @EQUAL
            DISPLAY   *P26:8,*V2LON,"All";
            GOTO      JNZM6000
          ENDIF
.
          MATCH     SP70,FROMMCHG
          IF        @EQUAL
            DISPLAY   *P26:8,*V2LON,"Blank";
            GOTO      JNZM6000
          ENDIF
.
          MOVE      FROMMCHG,KEY9
          CALL      NZMD0000
          BRANCH    EXIT,JNZM9000
.
          DISPLAY   *P35:8,NZMCDESC;
.
.         Keyin Effective Date
.
JNZM6000  MOVE      "26",CCOL
          MOVE      "9",CVERT
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,JNZM6500
.
          PACK      FROMEDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FROMEDAT
.
          GOTO      JNZM8000
.
JNZM6500  DISPLAY   *P26:9,*V2LON,"All";
          MOVE      SP70,FROMEDAT
.
JNZM7000  KEYIN     *P26:10,*EL,*V2LON,INCRFLAG;
.
          IF        INCRFLAG=1
            DISPLAY   *P35:10,*V2LON,"Fixed Dollar"; 
            GOTO      JNZM7500
          ENDIF
.
          IF        INCRFLAG=2
            DISPLAY   *P35:10,*V2LON,"Percentage";
            GOTO      JNZM7500
          ENDIF
.
          GOTO      JNZM9000
.
JNZM7500  MOVE      ZERO,INCRAMNT
          KEYIN     *P26:11,*EL,*V2LON,INCRAMNT;
.
          COMPARE   ZERO,INCRAMNT
          GOTO      JNZM9000 IF EQUAL
.
JNZM8000  MOVE      ZERO,EXIT
          GOTO      JNZM9999
.
JNZM9000  MOVE      ONE,EXIT
.
JNZM9999  RETURN
.
.**************************************************************************
.*                            YNZM0000                                    *
.*  Process NZ private misc charge update                                 *
.*  Called by : HNZM0000                                                  *
.**************************************************************************
YNZM0000  PACK      KEY37,SP70
YNZM0500  CALL      RSNZMC11
YNZM1000  CALL      RKNZMC11
          BRANCH    OVRCD,YNZM9999         * End of new file
.
          MATCH     "All",FROMHOSP         * Hospital
          IF        !@EQUAL
            MATCH     NZMCHOSP,FROMHOSP
            GOTO      YNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCLAM         * Claim Code
          IF        !@EQUAL
            MATCH     FROMCLAM,NZMCCLMC
            GOTO      YNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFND         * Health Fund
          IF        !@EQUAL
            MATCH     FROMHFND,NZMCCNTR
            GOTO      YNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFTB         * Health Fund Table
          IF        !@EQUAL
            MATCH     FROMHFTB,NZMCFTAB
            GOTO      YNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMMCHG         * Misc charge
          IF        !@EQUAL
            MATCH     FROMMCHG,NZMCMCHG
            GOTO      YNZM1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,FROMEDAT          * Effective Date
          IF        !@EQUAL
            MATCH     FROMEDAT,NZMCEFDT
            GOTO      YNZM1000 IF NOT EQUAL
          ENDIF
.
YNZM7500  IF        INCRFLAG=1
            ADD       INCRAMNT,NZMCPATP    * Add fix dollar 
          ENDIF 
.
          IF        INCRFLAG=2
            DIV       "100",INCRAMNT       * Percentage update
            ADD       ONE,INCRAMNT
            MULT      INCRAMNT,NZMCPATP
          ENDIF 
.
YNZM8000  CALL      UPNZMC11               * Update record from new file
.
          GOTO      YNZM1000
.
YNZM9999  RETURN
.
.**************************************************************************
.*                               CNZC0000              Called by: ML3500  *
.* Create new NZ Private Contract Funding file. This will delete          *
.* all records from the new NZ Private contract funding file and          *
.* load with current file records.                                        *
.**************************************************************************
.
CNZC0000  KEYIN     *P1:24,*EL:
                    "Are You Sure You Want to Overwrite the New File (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNZC1000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNZC9500 IF EQUAL
.
          BEEP
          GOTO      CNZC0000
.
CNZC1000  KEYIN     *P1:24,*EL,"Do You Want to Start with a Copy of the":
                    " Current Data (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNZC9000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNZC2000 IF EQUAL
.
          BEEP
          GOTO      CNZC1000
.
CNZC2000  KEYIN     *P1:24,*EL,"You Will Lose All Current Contract Funding":
                               " records.  Are You ":
                               "Sure (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,DIM1;
.
          REP       UPPLOW,DIM1
          MATCH     ANSY,DIM1
          GOTO      CNZC8000 IF EQUAL
.
          MATCH     ANSN,DIM1
          GOTO      CNZC9500 IF EQUAL
.
          BEEP
          GOTO      CNZC2000
.
CNZC8000  CALL      DNZC0000                * Delete all record from new file
          MOVE      ZERO,EXIT               * Do not load current file date
          GOTO      CNZC9600
.
CNZC9000  CALL      DNZC0000                * Delete all records from new file
          CALL      LNZC0000                * Load current record to new file
.
          MOVE      ZERO,EXIT
          GOTO      CNZC9600
.
CNZC9500  MOVE      ONE,EXIT
.
CNZC9600
.
CNZC9999  RETURN
.
.
.**************************************************************************
.*                               DNZC0000              Called by: CNZC0000*
.* Delete all of the new NZ Private contract funding records              *
.**************************************************************************
DNZC0000  PACK      KEY30,SP70
          CALL      RSNZCF11
          CALL      RKNZCF11
          BRANCH    OVRCD,DNZC5000         * End of file
.
          PACK      KEY30,NZCFHOSP,NZCFCLMC,NZCFCNTR,NZCFCPRC,NZCFSTYP:
                          NZCFSDAT,SP70
.
          CALL      DENZCF11               * Delete 
.
          GOTO      DNZC0000
.
DNZC5000  PACK      KEY40,SP70
          CALL      RSMLCF11
          CALL      RKMLCF11
          BRANCH    OVRCD,DNZC9999         * End of file
.
          PACK      KEY40,MLCFHOSP,MLCFCLMC,MLCFCNTR,MLCFPROC,MLCFSTYP:
                          MLCFSDAT,MLCFHCPC,SP70
.
          CALL      DEMLCF11               * Delete 
.
          GOTO      DNZC5000
.
DNZC9999  RETURN
.
.
.**************************************************************************
.*                               LNZC0000              Called by: CNTC0000*
.* Load current NZ Private contract funding to the new file               *
.**************************************************************************
LNZC0000  PACK      KEY30,SP70
          CALL      RSNZCFN1
LNZC1000  CALL      RKNZCFN1
          BRANCH    OVRCD,LNZC5000         * End of misc charge
.
          PACK      KEY30,NZCFHOSP,NZCFCLMC,NZCFCNTR,NZCFCPRC,NZCFSTYP:
                          NZCFSDAT,SP70
.
          CALL      WRNZCF11               * Write to new file
.
          GOTO      LNZC1000
.
LNZC5000  PACK      KEY40,SP70
          CALL      RSMLCFN1
LNZC5500  CALL      RKMLCFN1
          BRANCH    OVRCD,LNZC9999         * End of file
.
          PACK      KEY40,MLCFHOSP,MLCFCLMC,MLCFCNTR,MLCFPROC,MLCFSTYP:
                          MLCFSDAT,MLCFHCPC,SP70
.
          CALL      WRMLCF11               * Delete 
.
          GOTO      LNZC5500
.
LNZC9999  RETURN
.
.**************************************************************************
.*                               UNZC0000              Called by: ML3800  *
.*    Update New to Current NZ contract funding                           *
.**************************************************************************
UNZC0000  KEYIN     *P1:24,*EL,"Are you sure you want to copy the new data ":
                    "over the old (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    ") ? ",*V2LON,ANS;
.
          MOVE      ZERO,EXIT
          MATCH     ANSY,ANS
          GOTO      UNZC1000 IF EQUAL
.
          MOVE      ONE,EXIT
          MATCH     ANSN,ANS
          GOTO      UNZC9999 IF EQUAL
          BEEP
          GOTO      UNZC0000
.
UNZC1000  DISPLAY   *P1:24,*EL,*V2LON:
                    "** Copying new data over old... ",*BLINKON:
                    "Please wait",*HOFF,*V2LON," **";
.
          PACK      KEY30,SP70
          CALL      RSNZCF11
UNZC1200  CALL      RKNZCF11
          BRANCH    OVRCD,UNZC9999     * Exit if new file is empty
.
          CALL      RNZC0000           * Delete all records from current file
          CALL      MNZC0000           * Write new file to current file
          CALL      DNZC0000           * Delete all records from new file
.
UNZC9999  RETURN
.
.**************************************************************************
.*                               RNZC0000              Called by: UNZC0000*
.* Delete all of the current NZ Private contract file file records        *
.**************************************************************************
RNZC0000  PACK      KEY30,SP70
          CALL      RSNZCFN1
          CALL      RKNZCFN1
          BRANCH    OVRCD,RNZC5000         * End of file
.
          PACK      KEY30,NZCFHOSP,NZCFCLMC,NZCFCNTR,NZCFCPRC,NZCFSTYP:
                          NZCFSDAT,SP70
.
          CALL      DENZCFN1               * Delete
.
          GOTO      RNZC0000
.
RNZC5000  PACK      KEY40,SP70
          CALL      RSMLCFN1
RNZC5500  CALL      RKMLCFN1
          BRANCH    OVRCD,RNZC9999         * End of file
.
          PACK      KEY40,MLCFHOSP,MLCFCLMC,MLCFCNTR,MLCFPROC,MLCFSTYP:
                          MLCFSDAT,MLCFHCPC,SP70
.
          CALL      DEMLCFN1               * Delete 
.
          GOTO      RNZC5500
.
RNZC9999  RETURN
.
.**************************************************************************
.*                               MNZC0000              Called by: UNZC0000*
.* Load new NZ Private contract funding file records                      *
.**************************************************************************
MNZC0000  PACK      KEY30,SP70
          CALL      RSNZCF11
MNZC1000  CALL      RKNZCF11
          BRANCH    OVRCD,MNZC5000         * End of file
.
          PACK      KEY30,NZCFHOSP,NZCFCLMC,NZCFCNTR,NZCFCPRC,NZCFSTYP:
                          NZCFSDAT,SP70
.
          CALL      WRNZCFN1               * Write to new file
.
          GOTO      MNZC1000
.
MNZC5000  PACK      KEY40,SP70
          CALL      RSMLCF11
MNZC5500  CALL      RKMLCF11
          BRANCH    OVRCD,MNZC9999         * End of file
.
          PACK      KEY40,MLCFHOSP,MLCFCLMC,MLCFCNTR,MLCFPROC,MLCFSTYP:
                          MLCFSDAT,MLCFHCPC,SP70
.
          CALL      WRMLCFN1               * Write from new file
.
          GOTO      MNZC5500
.
MNZC9999  RETURN
.
.**************************************************************************
.*                               HNZC0000              Called by: ML3600  *
.* Global duplication of new NZ private contract funding                  *
.**************************************************************************
HNZC0000  DISPLAY   *P50:2,*V2LON,"- Global Duplication NZ Private ":
                                  "Contract Funding"
          CALL      SNZC0000                 * Display screen
          CALL      KNZC0000                 * Keyin details
          BRANCH    EXIT,HNZC9500
.
          CALL      BNZC0000                 * Display Copy To screen
          CALL      ENZC0000                 * Keyin Copy To details
          BRANCH    EXIT,HNZC9500
.
          MATCH     FROMHOSP,CPTOHOSP        * Check hospital
          GOTO      HNZC1000 IF NOT EQUAL
.
          MATCH     FROMCLAM,CPTOCLAM        * Check claim code
          GOTO      HNZC1000 IF NOT EQUAL
.
          MATCH     FROMHFND,CPTOHFND        * Check health fund
          GOTO      HNZC1000 IF NOT EQUAL
.
          MATCH     FROMCPRC,CPTOCPRC        * Contract Procedure 
          GOTO      HNZC1000 IF NOT EQUAL
.
          MATCH     FROMSTYP,CPTOSTYP        * Start Type
          GOTO      HNZC1000 IF NOT EQUAL
.
          MATCH     FROMEDAT,CPTOEDAT        * check start date
          GOTO      HNZC1000 IF NOT EQUAL
.
          GOTO      HNZC9000                 * Error copy from/to identical
.
HNZC1000  CALL      DELQST
          BRANCH    CEXIT,HNZC8000,HNZC0000,HNZC9500
.
HNZC8000  CALL      WNZC0000                 * Process duplication
          MOVE      ZERO,EXIT
          GOTO      HNZC9999
.
HNZC9000  DISPLAY   *P1:23,*EF,*P1:24,*B,"The From and To Sections Cannot ":
                    "be Identical. ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      HNZC9999
.
HNZC9500  MOVE      ONE,EXIT
.
HNZC9999  RETURN
.
.**************************************************************************
.*                         SNZC0000                                       *
.*  Display screen layout                                                 *
.*  Called by : HNZC0000                                                  *
.**************************************************************************
SNZC0000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Hospital       : ":
                    *P5:5,"Claim Code     : ":
                    *P5:6,"Health Fund    : ":
                    *P5:7,"Contract Proc  : ":
                    *P5:8,"Start Type     : ":
                    *P5:9,"Start Date     : "
.
SNZC9999  RETURN
.
.**************************************************************************
.*                         BNZC0000                                       *
.*  Display screen layout                                                 *
.*  Called by : HNZC0000                                                  *
.**************************************************************************
BNZC0000  DISPLAY   *P1:11,*EF,"Copy To":
                    *P5:13,"Hospital       : ":
                    *P5:14,"Claim Code     : ":
                    *P5:15,"Health Fund    : ":
                    *P5:16,"Contract Proc  : ":
                    *P5:17,"Start Type     : ":
                    *P5:18,"Start Date     : "
.
BNZC9999  RETURN
.
.**************************************************************************
.*                            KNZC0000                                    *
.*  Keyin hospital, claim code, health fund ,                             *
.*  contract procedure, start type and start date                         *
.*  Called by : HNZC0000                                                  *
.**************************************************************************
KNZC0000  MOVE      ZERO,EXIT
.
          KEYIN     *P26:4,*EL,*V2LON,FROMHOSP;
          PACK      FROMHOSP,FROMHOSP,SP70
.
          MATCH     SP70,FROMHOSP
          IF        @EQUAL
            DISPLAY   *P26:4,*V2LON,"Blank";
            GOTO      KNZC2000
          ENDIF
.
          MATCH     "All",FROMHOSP
          IF        @EQUAL
            DISPLAY   *P26:4,*V2LON,"All";
            GOTO      KNZC2000
          ENDIF
.
          PACK      KEY3,FROMHOSP,SP70
          CALL      RDPTHSP1
          BRANCH    OVRCD,KNZC9000
.
          DISPLAY   *P35:4,PTHSNAME;
.
.         Keyin Claim Code
.
KNZC2000  KEYIN     *P26:5,*EL,*V2LON,FROMCLAM;
          PACK      FROMCLAM,FROMCLAM,SP70
.
          MATCH     "All",FROMCLAM
          IF        @EQUAL
            DISPLAY   *P26:5,*V2LON,"All";
            GOTO      KNZC3000
          ENDIF
.
          MATCH     SP70,FROMCLAM
          IF        @EQUAL
            DISPLAY   *P26:5,*V2LON,"Blank";
            GOTO      KNZC3000
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,FROMCLAM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,KNZC9000
.
          DISPLAY   *P35:5,TDESC;
.
.         Keyin Health Fund
.
KNZC3000  KEYIN     *P26:6,*EL,*V2LON,FROMHFND;
          PACK      FROMHFND,FROMHFND,SP70
.
          MATCH     "All",FROMHFND
          IF        @EQUAL
            DISPLAY   *P26:6,*V2LON,"All";
            GOTO      KNZC4000
          ENDIF
.
          MATCH     SP70,FROMHFND
          IF        @EQUAL
            DISPLAY   *P26:6,*V2LON,"Blank";
            GOTO      KNZC4000
          ENDIF
.
          PACK      KEY14,FROMHFND,ZERO,ZERO,ZERO,ZERO,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,KNZC9000
.
          DISPLAY   *P35:6,HFNAME;
.
.         Keyin Contract Proc Code 
.
KNZC4000  KEYIN     *P26:7,*EL,*V2LON,FROMCPRC;
          PACK      FROMCPRC,FROMCPRC,SP70
.
          MATCH     "All",FROMCPRC
          IF        @EQUAL
            DISPLAY   *P26:7,*V2LON,"All";
            GOTO      KNZC5000
          ENDIF
.
          MATCH     SP70,FROMCPRC
          IF        @EQUAL
            DISPLAY   *P26:7,*V2LON,"Blank";
            GOTO      KNZC5000
          ENDIF
.
          PACK      KEY9,FROMCPRC,SP70
          CALL      RDPTCMC1
          BRANCH    OVRCD,KNZC9000
.
          DISPLAY   *P35:7,PTCADES1;
.
.         Start Type
.
KNZC5000  KEYIN     *P26:8,*EL,*V2LON,FROMSTYP;
          PACK      FROMSTYP,FROMSTYP,SP70
.
          MATCH     "A",FROMSTYP
          IF        @EQUAL
            DISPLAY   *P26:8,*V2LON,"All";
            GOTO      KNZC6000
          ENDIF
.
          MATCH     "1",FROMSTYP
          IF        @EQUAL
            DISPLAY   *P26:8,*V2LON,"Admission From";
            GOTO      KNZC6000
          ENDIF
.
          GOTO      KNZC9000
.
.         Keyin Start Date
.
KNZC6000  MOVE      "26",CCOL
          MOVE      "9",CVERT
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,KNZC6500
.
          PACK      FROMEDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FROMEDAT
.
          GOTO      KNZC8000
.
KNZC6500  DISPLAY   *P26:9,*V2LON,"All";
          MOVE      SP70,FROMEDAT
.
KNZC8000  MOVE      ZERO,EXIT
          GOTO      KNZC9999
.
KNZC9000  MOVE      ONE,EXIT
.
KNZC9999  RETURN
.
.**************************************************************************
.*                            ENZC0000                                    *
.*  Keyin to hospital, to claim code, to health fund ,                    *
.*  to contract procedure, to start type and to start date                *
.*  Called by : HNZC0000                                                  *
.**************************************************************************
ENZC0000  MOVE      ZERO,EXIT
.
          KEYIN     *P26:13,*EL,*V2LON,CPTOHOSP;
          PACK      CPTOHOSP,CPTOHOSP,SP70
.
          MATCH     SP70,CPTOHOSP
          IF        @EQUAL
            DISPLAY   *P26:13,*V2LON,"Blank";
            GOTO      ENZC2000
          ENDIF
.
          MATCH     "All",CPTOHOSP
          IF        @EQUAL
            DISPLAY   *P26:13,*V2LON,"All";
            GOTO      ENZC2000
          ENDIF
.
          PACK      KEY3,CPTOHOSP,SP70
          CALL      RDPTHSP1
          BRANCH    OVRCD,ENZC9000
.
          DISPLAY   *P35:13,PTHSNAME;
.
.         Keyin Claim Code
.
ENZC2000  KEYIN     *P26:14,*EL,*V2LON,CPTOCLAM;
          PACK      CPTOCLAM,CPTOCLAM,SP70
.
          MATCH     "All",CPTOCLAM
          IF        @EQUAL
            DISPLAY   *P26:14,*V2LON,"All";
            GOTO      ENZC3000
          ENDIF
.
          MATCH     SP70,CPTOCLAM
          IF        @EQUAL
            DISPLAY   *P26:14,*V2LON,"Blank";
            GOTO      ENZC3000
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,CPTOCLAM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,ENZC9000
.
          DISPLAY   *P35:14,TDESC;
.
.         Keyin Health Fund
.
ENZC3000  KEYIN     *P26:15,*EL,*V2LON,CPTOHFND;
          PACK      CPTOHFND,CPTOHFND,SP70
.
          MATCH     "All",CPTOHFND
          IF        @EQUAL
            DISPLAY   *P26:15,*V2LON,"All";
            GOTO      ENZC4000
          ENDIF
.
          MATCH     SP70,CPTOHFND
          IF        @EQUAL
            DISPLAY   *P26:15,*V2LON,"Blank";
            GOTO      ENZC4000
          ENDIF
.
          PACK      KEY14,CPTOHFND,ZERO,ZERO,ZERO,ZERO,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,ENZC9000
.
          DISPLAY   *P35:15,HFNAME;
.
.         Keyin Contract Proc Code
.
ENZC4000  KEYIN     *P26:16,*EL,*V2LON,CPTOCPRC;
          PACK      CPTOCPRC,CPTOCPRC,SP70
.
          MATCH     "All",CPTOCPRC
          IF        @EQUAL
            DISPLAY   *P26:16,*V2LON,"All";
            GOTO      ENZC5000
          ENDIF
.
          MATCH     SP70,CPTOCPRC
          IF        @EQUAL
            DISPLAY   *P26:16,*V2LON,"Blank";
            GOTO      ENZC5000
          ENDIF
.
          PACK      KEY9,CPTOCPRC,SP70
          CALL      RDPTCMC1
          BRANCH    OVRCD,ENZC9000
.
          DISPLAY   *P35:16,PTCADES1; 
.
.         Start Type
.
ENZC5000  KEYIN     *P26:17,*EL,*V2LON,CPTOSTYP;
          PACK      CPTOSTYP,CPTOSTYP,SP70
.
          MATCH     "A",CPTOSTYP
          IF        @EQUAL
            DISPLAY   *P26:17,*V2LON,"All";
            GOTO      ENZC6000
          ENDIF
.
          MATCH     "1",CPTOSTYP
          IF        @EQUAL
            DISPLAY   *P26:17,*V2LON,"Admission From";
            GOTO      ENZC6000
          ENDIF
.
          GOTO      ENZC9000
.
.         Keyin Start Date
.
ENZC6000  MOVE      "26",CCOL
          MOVE      "18",CVERT
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,ENZC6500
.
          PACK      CPTOEDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CPTOEDAT
.
          GOTO      ENZC8000
.
ENZC6500  DISPLAY   *P26:18,*V2LON,"All";
          MOVE      SP70,CPTOEDAT
.
ENZC8000  MOVE      ZERO,EXIT
          GOTO      ENZC9999
.
ENZC9000  MOVE      ONE,EXIT
.
ENZC9999  RETURN
.
.**************************************************************************
.*                            WNZC0000                                    *
.*  Process NZ private contract procedure code                            *
.*  Called by : HNZC0000                                                  *
.**************************************************************************
WNZC0000  PACK      KEY30,SP70
WNZC0500  CALL      RSNZCF11
WNZC1000  CALL      RKNZCF11
          BRANCH    OVRCD,WNZC9999         * End of new file
.
          MATCH     "All",FROMHOSP         * Hospital
          IF        !@EQUAL
            MATCH     NZCFHOSP,FROMHOSP
            GOTO      WNZC1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCLAM         * Claim Code
          IF        !@EQUAL
            MATCH     FROMCLAM,NZCFCLMC
            GOTO      WNZC1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFND         * Health Fund
          IF        !@EQUAL
            MATCH     FROMHFND,NZCFCNTR
            GOTO      WNZC1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCPRC         * Contract Procedure 
          IF        !@EQUAL
            MATCH     FROMCPRC,NZCFCPRC
            GOTO      WNZC1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMSTYP         * Start Type  
          IF        !@EQUAL
            MATCH     FROMSTYP,NZCFSTYP
            GOTO      WNZC1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,FROMEDAT          * Start Date
          IF        !@EQUAL
            MATCH     FROMEDAT,NZCFSDAT
            GOTO      WNZC1000 IF NOT EQUAL
          ENDIF
.
          PACK      SAVKEY30,NZCFHOSP,NZCFCLMC,NZCFCNTR,NZCFCPRC:
                             NZCFSTYP,NZCFSDAT,SP70
.
          MATCH     "All",CPTOHOSP         * Hospital
          IF        !@EQUAL
            MOVE      CPTOHOSP,NZCFHOSP
          ENDIF
.
          MATCH     "All",CPTOCLAM         * Claim Code
          IF        !@EQUAL
            MOVE      CPTOCLAM,NZCFCLMC
          ENDIF
.
          MATCH     "All",CPTOHFND         * Health Fund
          IF        !@EQUAL
            MOVE      CPTOHFND,NZCFCNTR
          ENDIF
.
          MATCH     "All",CPTOCPRC         * Contract Procedure
          IF        !@EQUAL
            MOVE      CPTOCPRC,NZCFCPRC
          ENDIF
.
          MATCH     "All",CPTOSTYP         * Start Type 
          IF        !@EQUAL
            MOVE      CPTOSTYP,NZCFSTYP
          ENDIF
.
          MATCH     SP70,CPTOEDAT          * Effective Date
          IF        !@EQUAL
            MOVE      CPTOEDAT,NZCFSDAT
          ENDIF
.
          PACK      KEY30,NZCFHOSP,NZCFCLMC,NZCFCNTR,NZCFCPRC:
                          NZCFSTYP,NZCFSDAT,SP70
.
          CALL      RANZCF11
          IF        OVRCD=1
            CALL      WRNZCF11             * Write record to new file
          ENDIF
.
          MATCH     "All",FROMHOSP         * Hospital
          IF        !@EQUAL
            MATCH     CPTOHOSP,FROMHOSP
            IF        @EQUAL
              CALL      INZC0000           * write multi hosp details
            ENDIF
          ENDIF
.
          MOVE      SAVKEY30,KEY30
          GOTO      WNZC0500
.
WNZC9999  RETURN
.
.**************************************************************************
.*                               QNZC0000              Called by: ML3700  *
.* Global delete of new NZ private contract funding                       *
.**************************************************************************
QNZC0000  DISPLAY   *P50:2,*V2LON,"- Global Deletion NZ Private ":
                                  "Contract Funding"; 
          CALL      SNZC0000                 * Display screen
          CALL      KNZC0000                 * Keyin details
          BRANCH    EXIT,QNZC9500
.
          CALL      DELQST
          BRANCH    CEXIT,QNZC8000,QNZC0000,QNZC9500
.
QNZC8000  CALL      PNZC0000                 * Process Delete records new file
          MOVE      ZERO,EXIT
          GOTO      QNZC9999
.
QNZC9500  MOVE      ONE,EXIT
.
QNZC9999  RETURN
.
.**************************************************************************
.*                            PNZC0000                                    *
.*  Process NZ private contract funding                                   *
.*  Called by : QNZM0000                                                  *
.**************************************************************************
PNZC0000  PACK      KEY30,SP70
PNZC0500  CALL      RSNZCF11
PNZC1000  CALL      RKNZCF11
          BRANCH    OVRCD,PNZC9999         * End of new file
.
          MATCH     "All",FROMHOSP         * Hospital
          IF        !@EQUAL
            MATCH     NZCFHOSP,FROMHOSP
            GOTO      PNZC1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCLAM         * Claim Code
          IF        !@EQUAL
            MATCH     FROMCLAM,NZCFCLMC
            GOTO      PNZC1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFND         * Health Fund
          IF        !@EQUAL
            MATCH     FROMHFND,NZCFCNTR
            GOTO      PNZC1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCPRC         * Contract Procedure 
          IF        !@EQUAL
            MATCH     FROMCPRC,NZCFCPRC
            GOTO      PNZC1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMSTYP         * Start Type  
          IF        !@EQUAL
            MATCH     FROMSTYP,NZCFSTYP
            GOTO      PNZC1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,FROMEDAT          * Start Date
          IF        !@EQUAL
            MATCH     FROMEDAT,NZCFSDAT
            GOTO      PNZC1000 IF NOT EQUAL
          ENDIF
.
          PACK      KEY30,NZCFHOSP,NZCFCLMC,NZCFCNTR,NZCFCPRC:
                          NZCFSTYP,NZCFSDAT,SP70
          MOVE      KEY30,SAVKEY30
.
          CALL      DENZCF11               * Delete record from new file
.
          CALL      ANZC0000               * Delete multi hospital details
.
          MOVE      SAVKEY30,KEY30
          GOTO      PNZC0500
.
PNZC9999  RETURN
.
.**************************************************************************
.*                            ANZC0000                                    *
.*  Process NZ private contract funding multi hospital delete             *
.*  Called by : PNZC0000                                                  *
.**************************************************************************
ANZC0000  PACK      KEY40,SAVKEY30,SP70
ANZC0500  CALL      RSMLCF11
ANZC1000  CALL      RKMLCF11
          BRANCH    OVRCD,ANZC9999         * End of new file
.
          PACK      SAVKEY40,MLCFHOSP,MLCFCLMC,MLCFCNTR,MLCFPROC:
                             MLCFSTYP,MLCFSDAT,MLCFHCPC,SP70
.
          MATCH     SAVKEY30,SAVKEY40
          GOTO      ANZC9999 IF NOT EQUAL
.
          PACK      KEY40,MLCFHOSP,MLCFCLMC,MLCFCNTR,MLCFPROC:
                          MLCFSTYP,MLCFSDAT,MLCFHCPC,SP70
          MOVE      KEY40,SAVKEY40
.
          CALL      DEMLCF11             * Delete 
.
          MOVE      SAVKEY40,KEY40
          GOTO      ANZC0500
.
ANZC9999  RETURN
.
.**************************************************************************
.*                            INZC0000                                    *
.*  Process NZ private contract funding multi hospital details            *
.*  Called by : HNZC0000                                                  *
.**************************************************************************
INZC0000  PACK      KEY40,SAVKEY30,SP70
INZC0500  CALL      RSMLCF11
INZC1000  CALL      RKMLCF11
          BRANCH    OVRCD,INZC9999         * End of new file
.
          PACK      SAVKEY40,MLCFHOSP,MLCFCLMC,MLCFCNTR,MLCFPROC:
                             MLCFSTYP,MLCFSDAT,MLCFHCPC,SP70
.
          MATCH     SAVKEY30,SAVKEY40
          GOTO      INZC9999 IF NOT EQUAL
.
          MATCH     "All",CPTOHOSP         * Hospital
          IF        !@EQUAL
            MOVE      CPTOHOSP,MLCFHOSP
          ENDIF
.
          MATCH     "All",CPTOCLAM         * Claim Code
          IF        !@EQUAL
            MOVE      CPTOCLAM,MLCFCLMC
          ENDIF
.
          MATCH     "All",CPTOHFND         * Health Fund
          IF        !@EQUAL
            MOVE      CPTOHFND,MLCFCNTR
          ENDIF
.
          MATCH     "All",CPTOCPRC         * Contract Proc
          IF        !@EQUAL
            MOVE      CPTOCPRC,MLCFPROC
          ENDIF
.
          MATCH     "All",CPTOSTYP         * Start Type 
          IF        !@EQUAL
            MOVE      CPTOSTYP,NZCFSTYP
          ENDIF
.
          MATCH     SP70,CPTOEDAT          * Start Date
          IF        !@EQUAL
            MOVE      CPTOEDAT,MLCFSDAT
          ENDIF
.
          PACK      KEY40,MLCFHOSP,MLCFCLMC,MLCFCNTR,MLCFPROC:
                          MLCFSTYP,MLCFSDAT,MLCFHCPC,SP70
.
          CALL      RAMLCF11
          IF        OVRCD=1
            CALL      WRMLCF11             * Write record to new file
          ENDIF
.
          MOVE      SAVKEY40,KEY40
          GOTO      INZC0500
.
INZC9999  RETURN
+
          INC       STD001IO
          INC       STDHLPCD
          INC       CLNZPBFE
          INC       PATCMCKY
.         INC       PATCMXKY
          INC       PATCODKY
          INC       PATFNDKY
          INC       PATHSPKY
          INC       PATTBLKY
.         INC       PATSRBKY
.         INC       PMSSINKY
          INC       MLTCFNIO/INC            * NZ Priv Contract Funding M/Hos
          INC       MLTCF1IO/INC            * New NZ Priv Contract Funding M/Hos
          INC       NZPCFNIO/INC            * NZ Priv Contract Funding
          INC       NZPCF1IO/INC            * New NZ Priv Contract Funding
          INC       NZPPFEIO/INC            * NZ Priv Contract Proc 
          INC       NZPPF1IO/INC            * New NZ Priv Contract Proc 
          INC       NZPIBRIO/INC            * NZ Priv Cont Proc Rev 
          INC       NZPIB1IO/INC            * New NZ Priv Cont Proc Rev 
          INC       NZPMCHIO/INC            * NZ Priv Misc Charge
          INC       NZPMC1IO/INC            * New NZ Priv Misc Charge
          INC       NZPRBRIO/INC            * NZ Priv Cont Proc inv 
          INC       NZPRB1IO/INC            * New NZ Priv Cont Proc inv
          INC       NZPMXCIO/INC            * NZ Priv Misc Exploding items
          INC       NZPMX1IO/INC            * New NZ Priv Misc Exploding items
          INC       PATHSPIO/INC            * Lumpsum
.
          INC       PATLSDIO/INC            * Lumpsum
.
          INC       PATASDIO/INC            * Additional charges
.
          INC       PATSRBIO/INC            * Sameday Revenue Breakdown
.
          INC       PMSSINIO/INC            * Sameday Invoice Breakdown
.
          INC       PATCMCIO/INC            * Casemix Codes file
          INC       PATCODIO/INC            * Codes file
          INC       PATDGWIO/INC            * DRG file
          INC       PATMI1IO/INC            * patient admission file
          INC       PATITMIO/INC            * Item MBS file
          INC       PATFN1IO/INC            * Fund file
.
          INC       PATHLFIO/INC            * Lump sum for overnight
.
          INC       PATLDFIO/INC            * Daily fee for low outliers
.
          INC       PATHDFIO/INC            * Daily fee forInliers/high outliers
.
          INC       PATAFEIO/INC            * Additional fee
.
          INC       PATOVBIO/INC            * Overnight Rev. Breakdown file
.
          INC       PATIOVIO/INC            * Overnight Inv. Breakdown file
.
          INC       NZPBFEIO/INC            * NZ Private bed fee file
          INC       NZPBF1IO/INC            * NZ Private new bed fee file
