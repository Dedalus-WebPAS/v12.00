.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01 08.04.2005 Peter Vela CAR 59696
.          Changed commodity group from DIM 5 to DIM 6
. V9.03.01 23/07/2004  Mike Laming  CAR 43474
.          Change UNCEA200 & USCEA200 to not write to "apscebaf" if qty = 0
. V9.02.01  10.07.2002  Glenn Saunders
.           Update to include Vf.09.01 from f.09 work (Sandra approved)
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.02  07.11.2002 Henry Son - SRF 12932 Rebound
.           Need to pass today's date to usage update
.           module.
. VF.09.01  10.01.2002 Sai - SRF 12932
.           Changed UPITM000 and SOHIT000 to make the
.           usage period for reversal of a receival
.           to current period , not the original
.           receival usage period
. VF.09.B01 02.11.2000 Charles Handaya
.           Recompiled for sincchaf and SINUSAGE change
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.00.03  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           22.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.02  18.11.1999 Sandra Barcham
.           Don't allow after invoiced
.           srf 635983
. VF.00.01  03.11.1999 Sandra Barcham
.           Change locked message to use X
.-------------------------------------------------------
CEAFILE   FORM      1
COSTUPD   FORM      1
F12P4     FORM      12.4
MODQTY    FORM      12.2
MYCOL     FORM      2
MYVERT    FORM      2
NEWSOH    FORM      12.2
PURCHNO   DIM       7
STOKUPD   FORM      1
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASIN68
.   Function      :   Reverse Receival                        
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSCEAFD/INC
          INC       APSCEBFD/INC
          INC       APSCIOFD/INC
          INC       APSMASFD/INC
          INC       APSORDFD/INC
          INC       APSSUBFD/INC
          INC       FMSAMAFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSTUPFD/INC
          INC       SINCCAFD/INC
          INC       SINCCBFD/INC
          INC       SINCCEFD/INC
          INC       SINCCFFD/INC
          INC       SINCCHFD/INC
          INC       SINCGAFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIHFD/INC
          INC       SINCIIFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINITMFD/INC
          INC       SINLTTFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPODFD/INC
          INC       SINPOFFD/INC
          INC       SINRCPFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWRKDF    
          INC       SINWRKFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
.
.Word Processor File * Scr 00 Fld    26
.
NAMSIPD1  INIT      "Wsipd1"
FILSIPD1  DIM       8
.
SSIICCCT  FORM     12.4 * Scr 01 Fld     4
SSIICLCT  FORM     12.4 * Scr 01 Fld     5
SSIIAAVC  FORM     12.6 * Scr 01 Fld     6
SSIPCEDD  DIM       8 * Scr 01 Fld     7
SSIIESTI  FORM      1 * Scr 01 Fld    10
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASIN68"
PRGNAM    INIT      "Reverse Receival                        "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      ONAT0000
          CALL      SC00L000
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILSIPD1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apssubaf";
          OPEN      APSSUBA1,"apssubaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening  sinccbaf           ";
          OPEN      SINCCBA1,"sinccbaf"          
          DISPLAY   *P56:24,"Opening  sincceaf           ";
          OPEN      SINCCEA1,"sincceaf"          
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA2,"sincceaf"
          DISPLAY   *P56:24,"Opening  sinccfaf           ";
          OPEN      SINCCFA1,"sinccfaf"          
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA2,"sinccfaf"
          DISPLAY   *P56:24,"Opening  sincchaf           ";
          OPEN      SINCCHA1,"sincchaf"          
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA2,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA3,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA4,"sincchaf"
          DISPLAY   *P56:24,"Opening  sincchaf           ";
          OPEN      SINCCHA5,"sincchaf"          
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA1,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA2,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA1,"sincicaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sinciiaf";
          OPEN      SINCIIA1,"sinciiaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA1,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA1,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA2,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA3,"sinlttaf"
          DISPLAY   *P56:24,"Opening  sinperaf           ";
          OPEN      SINPERA2,"sinperaf"          
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA2,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA3,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA4,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpodaf";
          OPEN      SINPODA1,"sinpodaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA1,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinrcpaf";
          OPEN      SINRCPA1,"sinrcpaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
.--------------------------------------------------------
. Initialise Wp Filename for Additional Comments                
.--------------------------------------------------------
          PACK      FILSIPD1,NAMSIPD1,PORT
          REP       " 0",FILSIPD1
          DISPLAY   *P56:24,"Create & Open ",FILSIPD1;
          PREP      TEMPWORD,FILSIPD1
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Reverse Receival Input             
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Processing Screen                  
          ENDIF
          RETURN
.--------------------------------
. Screen - Reverse Receival Input             
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Reverse Receival Input             
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
          MOVE      SP70,SIPFPON 
          MOVE      SP70,SIPFITM 
          MOVE      SP70,SIPFREC 
          MOVE      SP70,SIPFDAT 
          MOVE      SP70,SIPFDEL 
          MOVE      ZERO,SIPFQTY 
          MOVE      ZERO,SIPFCST 
          MOVE      SP70,SIPFSUT 
          MOVE      SP70,SIPCCST 
          MOVE      SP70,SIPCPRD 
          MOVE      SP70,SIPCDAT 
          MOVE      SP70,SIPCWAR 
          MOVE      SP70,SIPCCAT 
          MOVE      SP70,SIPCPN  
          MOVE      SP70,SIPCPD  
          MOVE      SP70,SIPCCON 
          MOVE      SP70,SIPCCDT 
          MOVE      SP70,SIPCSUT 
          MOVE      SP70,SIPCEDD 
          MOVE      ZERO,SIPCOQT 
          MOVE      SP70,SICADESC
          MOVE      SP70,SISADESC
          MOVE      SP70,SIWADES 
          MOVE      SP70,SIIADES 
          MOVE      SP70,SIIAISS 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Reverse Receival Input             
.--------------------------------------------------------
KY00L000
.
KY00L110
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KPURN000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      SIPFPON,VAR      
          CALL      DISPITEM
.
KY00L120
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KITEM000
          BRANCH    EXIT,KY00L110,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      SIPFITM,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Reverse Receival Input             
.---------------------------------------------------------
WP00L000
          PREP     TEMPWORD,FILSIPD1
          PACK     KEY13,SIPFPON,SIPFITM,SP70
          MOVE     KEY13,SAVKEY80
          SETLPTR  SAVKEY80,10
          CALL      RDSIPD1 
          IF        OVRCD=0
            CALL      RPSIPD1 
          ENDIF
WP00L100
          CALL     RKSIPD1 
          BRANCH   OVRCD,WP00L105
          PACK     KEY13,SIPDPON,SIPDITM,SIPDLIN
          MATCH    SAVKEY80,KEY13   
          GOTO     WP00L105 IF NOT EQUAL
          PACK     VAR,SIPDCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     SIPDCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP00L100
WP00L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Reverse Receival Input             
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Reverse Receival Input             
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Reverse Receival Input             
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L101,PS00L102:
                            PS00L103,PS00L104,PS00L105,PS00L106:
                            PS00L107,PS00L108,PS00L109,PS00L110:
                            PS00L111,PS00L112,PS00L113,PS00L114:
                            PS00L115,PS00L116,PS00L117,PS00L118:
                            PS00L119,PS00L120,PS00L121,PS00L122:
                            PS00L123,PS00L124,PS00L999,PS00L999:
                           PS00L999,PS00L999,PS00L999,PS00L999
          GOTO     PS00L999
.
PS00L101
          MOVE      SIPFREC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          UNPACK    SIPFDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      SIPFDEL,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      SIPFQTY,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      SIPFCST,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      SIPFSUT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      SIPCCST,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      SIPCPRD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      SIPCDAT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      SIPCWAR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      SIPCCAT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      SIPCPN,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      SIPCPD,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      SIPCCON,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          UNPACK    SIPCCDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      SIPCSUT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          UNPACK    SIPCEDD,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          MOVE      SIPCOQT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L119
          MOVE      SICADESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L120
          MOVE      SISADESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L121
          MOVE      SIWADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L122
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L123
          MOVE      SIIAISS,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L124
          MOVE     FILSIPD1,WORDNAME
          CALL     DISPWORD
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Reverse Receival Input             
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L101,SF00L006,SF00L006:
                           SF00L006,SF00L006,SF00L102,SF00L103
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L101,SF00L020,SF00L020:
                           SF00L020,SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "10",SCPSROW
              MOVE     " 10",SCPSCOL
              MOVE     " 60",SCPSLEN
              MOVE     "10",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILSIPD1,WORDNAME
              MOVE     " 12",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILSIPD1,WORDNAME
            MOVE     " 12",WORDTYPE
            IF       ACCEPT=0
               CALL     EDITWORD
            ENDIF
          ENDIF
          GOTO     SF00L001
.
SF00L102
          CALL      CANC0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Processing Screen                  
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "14",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Processing Screen                  
.-------------------------------------------------------
CF01L000
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Processing Screen                  
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Processing Screen                  
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Processing Screen                  
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Processing Screen                  
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Processing Screen                  
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L101:
                            PS01L102,PS01L103,PS01L104,PS01L105:
                            PS01L106,PS01L107
          GOTO     PS01L999
.
PS01L101
          MOVE      SSIICCCT,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      SSIICLCT,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      SSIIAAVC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          UNPACK    SSIPCEDD,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      TOTALSOH,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      SSIIESOH,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SSIIESTI,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Processing Screen                  
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103:
                            SF01L104,SF01L105,SF01L106,SF01L107:
                            SF01L006,SF01L108
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L103:
                            SF01L104,SF01L105,SF01L106,SF01L107:
                            SF01L020,SF01L108
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          CALL      CANC0000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
          CALL      PROC0000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCCCT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L103
            ENDIF
            BRANCH    EXIT,SF01L103,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SSIICCCT,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCLCT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
            BRANCH    EXIT,SF01L104,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SSIICLCT,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAAVC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L105
            ENDIF
            BRANCH    EXIT,SF01L105,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SSIIAAVC,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L106
          CALL     SELECTED
          CALL      KEYDATE
          PACK      SSIPCEDD,CCENT,CYEAR,CMON,CDAY          
          UNPACK    SSIPCEDD,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KESOH000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L107
            ENDIF
            BRANCH    EXIT,SF01L107,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      TOTALSOH,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L108
          CALL      NYESNO00
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KESTI000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L108
            ENDIF
            BRANCH    EXIT,SF01L108,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          CALL      CYESNO00
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SSIIESTI,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO,*240,SNCOPURC
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            MOVE      ZERO,SNCOPURC
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO,*240,SNCOPURC
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
          MOVE      SP7,PURCHNO
.
          CALL      RCON0000
.
ONAT9999  RETURN
.------------------------------------------------------------
. Enter Purchase Order Number
.------------------------------------------------------------
KPURN000  MATCH     SP7,PURCHNO
          GOTO      KPURN500 IF NOT EQUAL
.
KPURN200  MOVE      SP7,PURCHNO
          CALL      KSIPAA00
          BRANCH    EXIT,KPURN900,KPURN900
.
. check warehouse security
.
          MATCH     SP70,SIPAWAR
          IF        !@EQUAL
            PACK      KEY9,PASSCODE,SIPAWAR,SP70
            CALL      RDSIWS1
            IF        OVRCD=1
              CLEAR     DISPMSG
              APPEND    "You have no access for Warehouse ",DISPMSG
              APPEND    SIPAWAR,DISPMSG
              APPEND    " - ",DISPMSG
              CALL      MESSAGE1
              GOTO      KPURN000
            ENDIF
          ENDIF
.
          MOVE      SIPAPON,PURCHNO
          MOVE      SIPAPON,SIPFPON
          GOTO      KPURN999
.
KPURN500  PACK      KEY7,PURCHNO,SP70
          CALL      RDSIPA1
          BRANCH    OVRCD,KPURN200
          MOVE      PURCHNO,SIPFPON
.
KPURN900
KPURN999  RETURN
.------------------------------------------------------------
. Enter Purchase Ordr Item/Receival Numbers
.------------------------------------------------------------
KITEM000  MOVE      "    2",FLDID
          CALL      GETPOSIT
          KEYIN     *PCCOL:CVERT,*MASK,*V2LON,*JR,KEY3
          ENDSET    KEY3
          APPEND    SP70,KEY3
          RESET     KEY3
.
          MATCH     SP70,KEY3
          GOTO      KITEM900 IF EQUAL
.
          ENDSET    KEY3
          CMATCH    EXITCHAR,KEY3
          GOTO      KITEM900 IF EQUAL
          RESET     KEY3
.
          PACK      KEY10,SIPAPON,KEY3
          CALL      RDSIPC1
          IF        OVRCD=1
            MOVE      "Item Number Not on Order - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      KITEM000
          ENDIF
.
          PACK      KEY12,SIPCCAT,SIPCWAR,SP70
          CALL      SISIWK1
          IF        OVRCD=0
            BEEP
            CLEAR     DISPMSG
            APPEND    "ERROR - Catalog/Warehouse ",DISPMSG
            APPEND    SIPCCAT,DISPMSG
            APPEND    SLASH,DISPMSG
            APPEND    SIPCWAR,DISPMSG
            APPEND    " on Stocktake - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      KITEM000
          ENDIF
.
. Check for Receivals Relating to the Item Entered
.
          PACK      KEY12,SIPCPON,SIPCITM,SP70
          PACK      KEY10,SIPCPON,SIPCITM,SP70
          CALL      RSSIPF1
          CALL      RKSIPF1
          BRANCH    OVRCD,KITEM800
          PACK      KEY11,SIPFPON,SIPFITM,SP70
          MATCH     KEY10,KEY11
          GOTO      KITEM800 IF NOT EQUAL
          PACK      KEY12,SIPFPON,SIPFITM,SIPFREC
.
. Check for more than one Receivals Relating to the Item Entered
.
          CALL      RKSIPF1
          BRANCH    OVRCD,KITEM700
          PACK      KEY11,SIPFPON,SIPFITM,SP70
          MATCH     KEY10,KEY11
          GOTO      KITEM700 IF NOT EQUAL
.
KITEM100  MOVE      "    3",FLDID
          CALL      GETPOSIT
          KEYIN     *PCCOL:CVERT,*MASK,*V2LON,*JR,KEY2
          ENDSET    KEY2
          APPEND    SP70,KEY2
          RESET     KEY2
          MATCH     SP70,KEY2
          GOTO      KITEM000 IF EQUAL
          ENDSET    KEY2
          CMATCH    EXITCHAR,KEY2
          GOTO      KITEM900 IF EQUAL
          RESET     KEY2
          PACK      KEY12,SIPCPON,SIPCITM,KEY2
          CALL      RDSIPF1
          BRANCH    OVRCD,KITEM100
.
KITEM200  COMPARE   ONE,HACCNT
          GOTO      KITEM300 IF NOT EQUAL
.
          MOVE      HORDDES,APODISC
          MOVE      SIPFPON,APODORD
          PACK      APODCAT,SIPFITM,SIPFREC,SP70
          PACK      KEY14,APODISC,APODORD,APODCAT,SP70
          CALL      RDAPOD1
          IF        OVRCD=1
            MOVE      "Item has been Invoiced - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      KITEM100
          ENDIF
.
KITEM300  MATCH     SP70,SIPCCAT        * Non Catalog Item
          GOTO      KITEM500 IF EQUAL
          MOVE      SIPCCAT,KEY7
          CALL      RDSIIA1
          MOVE      SIIASUB,KEY5
          CALL      RDSISA1
          BRANCH    SIIANON,KITEM400    * Not Stocked
          MOVE      "Stock",SIPCCST
          MOVE      SP70,SICADESC
          MOVE      SIPCWAR,KEY5
          CALL      RDSIWA1
          GOTO      KITEM950
.
. Item Not Stocked
.
KITEM400  MOVE      SIPCCST,KEY5
          CALL      RDSICA1
          GOTO      KITEM950
.
. Item Not Cataloged
.
KITEM500  MOVE      SIPCCST,KEY5
          CALL      RDSICA1
          MOVE      SIPCPRD,KEY5
          CALL      RDSISA1
          MOVE      SIPCSUT,SIIAISS
          MOVE      SP70,SIIADES
          MOVE      SP70,SIWADES
          GOTO      KITEM950
.
. Only One Receival
.
KITEM700  CALL      RDSIPF1
          BRANCH    OVRCD,KITEM100
          GOTO      KITEM200
.
KITEM800  MOVE      "Nothing Received for that Item - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          GOTO      KITEM000
.
KITEM900  MOVE      ONE,EXIT
          PACK      PURCHNO,SP70
          GOTO      KITEM999
.
KITEM950  MOVE      ZERO,EXIT
          MOVE      "    2",FLDID
          CALL      GETPOSIT
.
          MOVE      ONE,COSTUPD
          MOVE      ZERO,SSIICCCT
          MOVE      ZERO,SSIICLCT
          MOVE      ZERO,SSIIAAVC
.
          PACK      KEY7,SIPCCAT
          CALL      RDSIIA1
          BRANCH    OVRCD,KITEM960
.
          PACK      KEY27,SIPCCAT,SIPASUP,SIPCSUT
          CALL      RDSIIC1
          BRANCH    OVRCD,KITEM960
.
          MOVE      ZERO,COSTUPD
          MOVE      SIICCCT,SSIICCCT
          MOVE      SIICLCT,SSIICLCT
          MOVE      SIIAAVC,SSIIAAVC
.
KITEM960  CALL      LSIIE000           * lock siie
          BRANCH    EXIT,KITEM000
.
          MATCH     SP70,SIPCCAT
          GOTO      KITEM965 IF EQUAL
.
          COMPARE   ONE,SIIANON
          GOTO      KITEM965 IF EQUAL
.
          IF        TOTALSOH<0
            BEEP
            MOVE      "Reversal Not Allowed as SOH Would be Negative - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KITEM000
          ELSE
            ASSIGN    SIIESOH-TOTALREC,TOTALSOH
          ENDIF
.
KITEM965  ASSIGN    TOTALSOH,SSIIESOH
          MOVE      ZERO,SSIIESTI
.
          CALL      CALDD000            * get default next delivery date
          PACK      SSIPCEDD,SIPCEDD,SP70
.
          MOVE      ONE,STOKUPD
          MATCH     SP70,SIPCCAT      * Non-Cataloged
          GOTO      PROC9999 IF EQUAL * Yes
          BRANCH    SIIANON,PROC9000  * Non Stock
.
          MOVE      ZERO,STOKUPD
.
KITEM970  GOTO      KITEM999
.
KITEM999  RETURN
.------------------------------------------------------------
. Get TOTALREC and lock SIIE
.------------------------------------------------------------
LSIIE000  MATCH     SP70,SIPCCAT
          IF        @EQUAL
            MOVE      SIPFQTY,TOTALREC
            MOVE      SP70,SIIACAT
            MOVE      SP70,SIIEWAR
            MOVE      SIPCPRD,SIIASUB   * Subjective Entered
            GOTO      LSIIE500
          ENDIF
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIPFSUT
          CALL      RDSIFA1
.
          ASSIGN    SIPFQTY*SIFACTOR,TOTALREC
          IF        SIIANON=1
            MOVE      SP70,SIIEWAR
            GOTO      LSIIE500
          ENDIF
.
          PACK      KEY12,SIPCCAT,SIPCWAR,SP70   * lock Catalog/Warehouse
          REPEAT
            MOVE      ZERO,SIIESTI
            MOVE      ZERO,SIIESOH
            MOVE      SP70,SIIEWAR
            CALL      RLSIIE1
            IF        OVRCD=2
              PACK      DISPMSG,SP70,SP70
              CALL      MESSAGE2
              BEEP
              KEYIN     *P1:24,*EL,"Catalog/Warehouse ":
                        *DV,KEY12," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              CALL      MESSAGE3
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     ANSX,ANS
              GOTO      LSIIE950 IF EQUAL
              MATCH     ANSE,ANS
              GOTO      LSIIE950 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
LSIIE500  ASSIGN    SIIESOH-TOTALREC,TOTALSOH
          MOVE      TOTALSOH,NEWSOH
          MOVE      ZERO,EXIT
          GOTO      LSIIE999
.
LSIIE950  MOVE      ONE,EXIT
.
LSIIE999  RETURN
.----------------------------------------------------------------------
. Cancel from screen
.----------------------------------------------------------------------
CANC0000
          CALL      UUSIIE1            * Unlock Catalog/Warehouse Record
          RETURN
.------------------------------------------------------------
. Process Reverse Receival
.------------------------------------------------------------
PROC0000  MOVE      SIPFPON,KEY7
          CALL      RDSIPA1
          BRANCH    OVRCD,PROC9000
.
          MOVE      SP70,SIPADCM      * clear completed date
          CALL      UPSIPA1
.
          PACK      KEY7,SIPAPON
          CALL      RDSIRP1
          IF        OVRCD=1
            MOVE      SIPAPON,SIRPPON
            CALL      WRSIRP1
          ENDIF
.
          CALL      CAISS000          * Calc Total Rec.Issue Units Update Usage
          CALL      UPCST000          * Update Average/Current and Last Cost
          CALL      UPAPS000          * Update Accounts Payable Details
          CALL      UPORD000          * Update Order Details
.
          IF        SIIANON=0
            CALL      UPSOH000        * Update Stock on Hand
          ELSE
            MOVE      ZERO,SIIESOH    * SOH=0
          ENDIF
          CALL      UPITM000          * Update Item History File
.
PROC9000  CALL      UUSIIE1           * Unlock Catalog/Warehouse Record
.
PROC9999  RETURN
.------------------------------------------------------------
. Update Stock on Hand
.------------------------------------------------------------
UPSOH000  MOVE      TOTALSOH,SIIESOH
          IF        SSIIESTI=1
            MOVE      ONE,SIIESTI
          ENDIF
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIPFSUT
          CALL      RDSIFA1
.
          IF        SIPCRQT < (SIPCOQT*SIFACTOR)
            IF        TOTALREC > ((SIPCOQT*SIFACTOR) - SIPCRQT)
              ASSIGN    SIIESOO+SIPCOQT*SIFACTOR-SIPCRQT,SIIESOO
            ELSE
              ASSIGN    SIIESOO+TOTALREC,SIIESOO
            ENDIF
          ENDIF
.
          CALL      UPSIIE1
.
          IF       SIIAREX=1
            CALL     DELEXP00
          ENDIF
          RETURN
.
.------------------------------------------------------------
. Delete Expiry Records
.------------------------------------------------------------
DELEXP00  PACK      KEY27,SIIEWAR,SIIECAT,SIPFPON,SP70
          PACK      KEY19,SIIEWAR,SIIECAT,SIPFPON,SP70
          CALL      RSSIII1
.
DELEXP10  CALL      RKSIII1
          BRANCH    OVRCD,DELEXP99
          PACK      KEY27,SIIIWAR,SIIICAT,SIIIPUR,SIIIDAT
          MATCH     KEY19,KEY27
          GOTO      DELEXP99 IF NOT EQUAL
          DISPLAY   *P1:18,*EF
          HLINE     *G37,18,1,80
          DISPLAY   *P1:20,*V2LON,*ULON,"Expiry Details Related to this Order"
          UNPACK    SIIIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:21,"Expiry Date     : ",*V2LON,CPCDATE,*HOFF:
                    *P1:22,"Batch Reference : ",*V2LON,SIIIBAT,*HOFF:
                    *P1:23,"Quantity        : ",*V2LON,SIIIQR
.
DELEXP20  KEYIN     *P1:24,*EL,"Delete (",*V2LON,"Y",*HOFF:
                    "/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS
          GOTO      DELEXP10 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      DELEXP20 IF NOT EQUAL
          CALL      DESIII1
          GOTO      DELEXP10
.
DELEXP99  RETURN
.----------------------------------------------------------------------
. Update Order Details
.----------------------------------------------------------------------
UPORD000  PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
          IF        OVRCD=1
            BEEP
            CLEAR     DISPMSG
            APPEND    "Invalid Receival Item. Key : ",DISPMSG
            APPEND    KEY10,DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      UPORD999
          ENDIF
.
          PACK      SIPCEDD,SSIPCEDD,SP70
          REP       " 0",SIPCEDD
.
          SUB       TOTALREC,SIPCRQT
          IF        SIPFCST>0
            ASSIGN    SIPCTCR-(SIPFQTY*SIPFCST),SIPCTCR
          ENDIF
          CALL      UPSIPC1
.
          PACK      KEY12,SIPFPON,SIPFITM,SIPFREC
          CALL      RDSIPF1
          IF        OVRCD=0
            CALL      DESIPF1
          ENDIF
.
UPORD999  RETURN
.------------------------------------------------------------
. Update Item History File
.------------------------------------------------------------
UPITM000  MATCH     SP7,SIPCCAT
          GOTO      UPITM999 IF EQUAL
.----------commented as updating to the same period------------------------
.          MOVE      SIPFUDT,SIITPER                * Update to Same Period
.----------added to get the current period in usage for reversal-----------
          PACK     SIPEDATE,CCC,CYY,CMM,CDD
          REP      " 0",SIPEDATE
          MOVE      ZERO,EXIT
          CALL      RSIPE000               * Returns SIPEYEAR and SIPEPER
          IF        OVRCD=1
            MOVE      "Unable to find Current Processing Period - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE     SP70,SIITPER
          ELSE
            PACK     SIITPER,SIPEYEAR,SIPEPER   * current period is packed
          ENDIF
.--------------------------------------------------------------------------
          IF        SIIANON=0
            MOVE      SIPCWAR,SIITWAR                * Warehouse
          ELSE
            MOVE      ZERO,NEWSOH
            MOVE      SP5,SIITWAR
          ENDIF
          MOVE      SIPCCAT,SIITCAT                * Catalog
          ASSIGN    SEQ*TOTALREC,SIITQTY           * Quantity
          ASSIGN    SEQ*SIPFQTY*SIPFCST,SIITAMT    * Cost
          IF        SIPFCST<0
            MOVE      ZERO,SIITAMT                 * T.B.A.
          ENDIF
          MOVE      SIPCCST,SIITCST                * Cost Centre
          PACK      SIITREQ,SP70                   * No Requisition
          MOVE      "14",SIITTYP                   * Receival Reversal
          MOVE      SIPFPON,SIITPUR                * Purchase Order
          MOVE      SIPFREC,SIITREF                * Receival Number
          MOVE      NEWSOH,SIITSOH                * Stock on Hand
          MOVE      SP70,SIITSPA                   * Spare
.
          MOVE      PRGID,SIITPRG
          MOVE      PORT,SIITPOR
          MOVE      PASSCODE,SIITOPR
          PACK      SIITDAT,CCC,CYY,CMM,CDD
          REP       " 0",SIITDAT
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
          COMPARE   NEWSOH,TOTALSOH
          CALL      SOHIT000 IF NOT EQUAL
.
UPITM999  RETURN
.
.------------------------------------------------------------
. Write stock adjustment record to item history if soh changed
.------------------------------------------------------------
SOHIT000  IF        SIIANON=0
            MOVE      SIPCWAR,SIITWAR                * Warehouse
          ELSE
            GOTO      SOHIT999
          ENDIF
.----------commented as updating to the same period------------------------
.          MOVE      SIPFUDT,SIITPER                * Update to Same Period
.----------added to get the current period in usage for reversal-----------
          PACK     SIPEDATE,CCC,CYY,CMM,CDD
          REP      " 0",SIPEDATE
          MOVE      ZERO,EXIT
          CALL      RSIPE000               * Returns SIPEYEAR and SIPEPER
          IF        OVRCD=1
            MOVE      "Unable to find Current Processing Period - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE     SP70,SIITPER
          ELSE
            PACK     SIITPER,SIPEYEAR,SIPEPER   * current period is packed
          ENDIF
.--------------------------------------------------------------------------
          MOVE      SIPCCAT,SIITCAT                * Catalog
          ASSIGN    NEWSOH-TOTALSOH,SIITQTY
          MULT      SEQ,SIITQTY
          ASSIGN    SIITQTY*SIIAAVC,SIITAMT        * Cost
          MOVE      SIPCCST,SIITCST                * Cost Centre
          PACK      SIITREQ,SP70                   * No Requisition
          MOVE      ONE,SIITTYP                    * Stock Adjustment
          MOVE      SIPFPON,SIITPUR                * Purchase Order
          MOVE      SIPFREC,SIITREF                * Receival Number
          MOVE      SIIESOH,SIITSOH                * Stock on Hand
          MOVE      SP70,SIITSPA                   * Spare
.
          MOVE      PRGID,SIITPRG
          MOVE      PORT,SIITPOR
          MOVE      PASSCODE,SIITOPR
          PACK      SIITDAT,CCC,CYY,CMM,CDD
          REP       " 0",SIITDAT
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
SOHIT999  RETURN
.------------------------------------------------------------
. Update Accounts Payable System (ie Delete Receival Record)
.------------------------------------------------------------
UPAPS000  COMPARE   ONE,HACCNT
          GOTO      UPAPS999 IF NOT EQUAL
.
          MOVE      HORDDES,APODISC  * System Prefix
          MOVE      SIPFPON,APODORD
          PACK      APODCAT,SIPFITM,SIPFREC,SP70
          PACK      KEY14,APODISC,APODORD,APODCAT,SP70
          CALL      RDAPOD1
          IF        OVRCD=1
            MOVE      "WARNING : Item Has Been Invoiced. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      UPAPS999
          ELSE
            CALL      DEAPOD1
            MULT      SEQ,APODAMT
            PACK      KEY8,APODISC,APODORD,SP70
            CALL      RDAPCI1
            BRANCH    OVRCD,UPAPS999
            CALL      UFMFP000
          ENDIF
.
          PACK      KEY8,APODISC,APODORD,SP70
          PACK      KEY14,KEY8,SP70
          UNPACK    SP70,APODISC,APODORD
          CALL      RSAPOD1
          CALL      RKAPOD1
          PACK      KEY14,APODISC,APODORD,APODCAT,SP70
          MATCH     KEY14,KEY8
          IF        !@EQUAL
            CALL      DEAPCI1
          ENDIF
.
          IF        CEAFILE=0 & HACCNT=1
            IF        SIIANON=1
              CALL      UNCEA000
            ELSE
              CALL      USCEA000
            ENDIF
          ENDIF
.
UPAPS999  RETURN
.----------------------------------------------------------------------
. Update period summary file
.----------------------------------------------------------------------
UFMFP000  PACK      KEY2,APODLED,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APODLED,APODACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,UFMFP999
.
          PACK      WORKDATE,APCIDAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,UFMFP999
.
          MOVE      "fmsp",KEY4
          PACK      KEY8,KEY4,CURYEAR,SP70
          REP       " 0",CURYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,KEY8
          TRAPCLR   IO
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APODLED,APODACC,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      RDFMFP1
          IF        OVRCD=0
            ASSIGN    APODAMT+FMFPCOM,FMFPCOM
            MOVE      FMFPCOM,FMFPCOMD
            ASSIGN    FMFPCOM/1000,F12P2
            MOVE      F12P2,FMFPCOMT
            CALL      UPFMFP1
          ELSE
            MOVE      ZERO,FMFPCBF
            MOVE      ZERO,FMFPC01
            MOVE      ZERO,FMFPC02
            MOVE      ZERO,FMFPC03
            MOVE      ZERO,FMFPC04
            MOVE      ZERO,FMFPC05
            MOVE      ZERO,FMFPC06
            MOVE      ZERO,FMFPC07
            MOVE      ZERO,FMFPC08
            MOVE      ZERO,FMFPC09
            MOVE      ZERO,FMFPC10
            MOVE      ZERO,FMFPC11
            MOVE      ZERO,FMFPC12
            MOVE      ZERO,FMFPC13
.
            MOVE      ZERO,FMFPABF
            MOVE      ZERO,FMFPA01
            MOVE      ZERO,FMFPA02
            MOVE      ZERO,FMFPA03
            MOVE      ZERO,FMFPA04
            MOVE      ZERO,FMFPA05
            MOVE      ZERO,FMFPA06
            MOVE      ZERO,FMFPA07
            MOVE      ZERO,FMFPA08
            MOVE      ZERO,FMFPA09
            MOVE      ZERO,FMFPA10
            MOVE      ZERO,FMFPA11
            MOVE      ZERO,FMFPA12
            MOVE      ZERO,FMFPA13
.
            MOVE      ZERO,FMFPCBFD
            MOVE      ZERO,FMFPC01D
            MOVE      ZERO,FMFPC02D
            MOVE      ZERO,FMFPC03D
            MOVE      ZERO,FMFPC04D
            MOVE      ZERO,FMFPC05D
            MOVE      ZERO,FMFPC06D
            MOVE      ZERO,FMFPC07D
            MOVE      ZERO,FMFPC08D
            MOVE      ZERO,FMFPC09D
            MOVE      ZERO,FMFPC10D
            MOVE      ZERO,FMFPC11D
            MOVE      ZERO,FMFPC12D
            MOVE      ZERO,FMFPC13D
.
            MOVE      ZERO,FMFPABFD
            MOVE      ZERO,FMFPA01D
            MOVE      ZERO,FMFPA02D
            MOVE      ZERO,FMFPA03D
            MOVE      ZERO,FMFPA04D
            MOVE      ZERO,FMFPA05D
            MOVE      ZERO,FMFPA06D
            MOVE      ZERO,FMFPA07D
            MOVE      ZERO,FMFPA08D
            MOVE      ZERO,FMFPA09D
            MOVE      ZERO,FMFPA10D
            MOVE      ZERO,FMFPA11D
            MOVE      ZERO,FMFPA12D
            MOVE      ZERO,FMFPA13D
.
            MOVE      ZERO,FMFPCBFT
            MOVE      ZERO,FMFPC01T
            MOVE      ZERO,FMFPC02T
            MOVE      ZERO,FMFPC03T
            MOVE      ZERO,FMFPC04T
            MOVE      ZERO,FMFPC05T
            MOVE      ZERO,FMFPC06T
            MOVE      ZERO,FMFPC07T
            MOVE      ZERO,FMFPC08T
            MOVE      ZERO,FMFPC09T
            MOVE      ZERO,FMFPC10T
            MOVE      ZERO,FMFPC11T
            MOVE      ZERO,FMFPC12T
            MOVE      ZERO,FMFPC13T
.
            MOVE      ZERO,FMFPABFT
            MOVE      ZERO,FMFPA01T
            MOVE      ZERO,FMFPA02T
            MOVE      ZERO,FMFPA03T
            MOVE      ZERO,FMFPA04T
            MOVE      ZERO,FMFPA05T
            MOVE      ZERO,FMFPA06T
            MOVE      ZERO,FMFPA07T
            MOVE      ZERO,FMFPA08T
            MOVE      ZERO,FMFPA09T
            MOVE      ZERO,FMFPA10T
            MOVE      ZERO,FMFPA11T
            MOVE      ZERO,FMFPA12T
            MOVE      ZERO,FMFPA13T
            MOVE      ZERO,FMFPCOM2
.
            PACK      FMFPSPAR,SP70,SP70
            ASSIGN    APODAMT,FMFPCOM
            MOVE      FMFPCOM,FMFPCOMD
            ASSIGN    FMFPCOM/1000,F12P2
            MOVE      F12P2,FMFPCOMT
            CALL      WRFMFP1
          ENDIF
.
          COMPARE   ONE,FMCOCALC
          GOTO      UFMFP999 IF NOT EQUAL
.
          PACK      KEY20,PORT,CURYEAR,APODLED,APODACC,SP70
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      UFMFP999 IF EQUAL
.
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
UFMFP999  RETURN
.----------------------------------------------------------------------
. Update Non-Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
UNCEA000  MOVE      HORDDES,APEAISC  * System Prefix
          MOVE      SIPCPON,APEAORD
          MOVE      SIPASUP,APEACRD
          PACK      KEY8,APEAISC,APEAORD,SP70
          CALL      RDAPEA1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPADIN,APEADAT
            CALL      WRAPEA1
          ENDIF
.
          MOVE      HORDDES,APEBISC  * System Prefix
          MOVE      SIPCPON,APEBORD
          PACK      APEBCAT,SIPCITM,SP70
          PACK      KEY14,APEBISC,APEBORD,APEBCAT
          CALL      RDAPEB1
          IF        OVRCD=0
            ASSIGN    SIPFQTY,MODQTY
            ADD       MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            IF        APEBQTY>0
              CALL      UPAPEB1
            ELSE
              CALL      DEAPEB1
              UNPACK    SP70,APEBISC,APEBORD,APEBCAT
              PACK      KEY8,APEAISC,APEAORD,SP70
              PACK      KEY14,KEY8,SP70
              CALL      RSAPEB1
              CALL      RKAPEB1
              PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
              MATCH     KEY8,KEY14
              CALL      DEAPEA1 IF NOT EQUAL
            ENDIF
.
            MOVE      MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            CALL      XFMFP000         * update committed expenditure
            GOTO      UNCEA999
          ENDIF
.
. No Existing Record
.--------------------
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIPCSUT,SP70
          CALL      RDSIFA1
          ASSIGN    SIPCOQT+SIPFQTY-SIPCRQT/SIFACTOR,MODQTY
          COMPARE   MODQTY,ZERO
          GOTO      UNCEA999 IF NOT LESS
.
          MOVE      HDEFWH,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      "WARNING: Default Warehouse Missing. First Used- ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          PACK      SICAGL,SP70
          MOVE      SIPCCST,KEY5
          CALL      RDSICA1
.
          UNPACK    SICAGL,APEBLED,APEBACC
          MOVE      SIWADISS,APEBDIS
          MOVE      SIWARESP,APEBRES
          MOVE      SP70,APEBSPA
          MOVE      MODQTY,APEBQTY
          MOVE      SIPCECT,APEBUCT
          ASSIGN    APEBQTY*APEBUCT,APEBAMT
          MOVE      SIPCPD,APEBDES
.
UNCEA100
          MATCH     SP70,APEBACC       * use posting acc if no CC
          GOTO      UNCEA115 IF EQUAL
.
          STORE     APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APEBACC,APEBACC,FMSUUD2B
          ENDIF
.
          MATCH     SP70,SIPCCAT
          IF        @EQUAL
            MOVE      SIPCPRD,SIIASUB
          ENDIF
          MOVE      SIIASUB,KEY5
          CALL      RDSISA1
          BRANCH    SIWATYP,UNCEA120,UNCEA115
.
UNCEA110
          PACK      SILTSUB,SIIASUB,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add subj code
          GOTO      UNCEA200
.
UNCEA115
          PACK      APEBACC,SICAPACC,SP70        * Use CC Posting Account
          GOTO      UNCEA200
.
UNCEA120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add commodity code
.
UNCEA200
          CALL      XHKFMS00
.                                           * don't write if qty=0     *I-43474
          IF        APEBQTY > 0
            CALL      WRAPEB1
          ENDIF                                                        *I-43474
          CALL      XFMFP000           * update committed expenditure
.
UNCEA999  RETURN
.------------------------------------------------------------
. Check FMS Account
.------------------------------------------------------------
XHKFMS00  MOVE      ZERO,FMAMTYPE
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            SQUEEZE   KEY14
            CALL      RDFMAM1
            IF        OVRCD=0
              UNPACK    KEY14,APEBLED,APEBACC
            ENDIF
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Update Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
USCEA000  MOVE      HORDDES,APEAISC  * System Prefix
          MOVE      SIPCPON,APEAORD
          MOVE      SIPASUP,APEACRD
          PACK      KEY8,APEAISC,APEAORD,SP70
          CALL      RDAPEA1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPADIN,APEADAT
            CALL      WRAPEA1
          ENDIF
.
          MOVE      HORDDES,APEBISC  * System Prefix
          MOVE      SIPCPON,APEBORD
          PACK      APEBCAT,SIPCITM,SP70
          PACK      KEY14,APEBISC,APEBORD,APEBCAT
          CALL      RDAPEB1
          IF        OVRCD=0
            ASSIGN    SIPFQTY,MODQTY
            ADD       MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            IF        APEBQTY>0
              CALL      UPAPEB1
            ELSE
              CALL      DEAPEB1
              UNPACK    SP70,APEBISC,APEBORD,APEBCAT
              PACK      KEY8,APEAISC,APEAORD,SP70
              PACK      KEY14,KEY8,SP70
              CALL      RSAPEB1
              CALL      RKAPEB1
              PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
              MATCH     KEY8,KEY14
              CALL      DEAPEA1 IF NOT EQUAL
            ENDIF
.
            MOVE      MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            CALL      XFMFP000         * update committed expenditure
            GOTO      USCEA999
          ENDIF
.
. No Existing Record
.--------------------
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIPCSUT,SP70
          CALL      RDSIFA1
          ASSIGN    SIPCOQT+SIPFQTY-SIPCRQT/SIFACTOR,MODQTY
          COMPARE   MODQTY,ZERO
          GOTO      USCEA999 IF NOT LESS
.
          MOVE      SIPCWAR,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      "Warehouse Code Missing - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          MOVE      SIWALED,APEBLED
          MOVE      SIWADISS,APEBDIS
          MOVE      SIWARESP,APEBRES
          MOVE      SP70,APEBSPA
          MOVE      MODQTY,APEBQTY
          MOVE      SIPCECT,APEBUCT
          ASSIGN    APEBQTY*APEBUCT,APEBAMT
          MOVE      SIPCPD,APEBDES
.
          BRANCH    SIWAPTY,USCEA100,USCEA100
          MOVE      SIWAPACC,APEBACC
          GOTO      USCEA200
.
USCEA100  STORE     SIWAPACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APEBACC,APEBACC,FMSUUD2B
          ENDIF
          MOVE      SIIASUB,KEY5
          CALL      RDSISA1
          BRANCH    SIWAPTY,USCEA110,USCEA120
.
USCEA110
          PACK      SILTSUB,SIIASUB,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add subj code
          GOTO      USCEA200
.
USCEA120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add commodity code
.
USCEA200
          CALL      XHKFMS00
.                                           * don't write if qty=0     *I-43474
          IF        APEBQTY > 0
            CALL      WRAPEB1
          ENDIF                                                        *I-43474
          CALL      XFMFP000           * update committed expenditure
.
USCEA999  RETURN
.----------------------------------------------------------------------
. get subjective/commodity translation
.----------------------------------------------------------------------
GTRA0000
          PACK      KEY8,FMAMLEDG,SILTSUB,SP70                         *C-59696
          CALL      RDSILT1
.
GTRA9999  RETURN
.----------------------------------------------------------------------
. Update period summary file
.----------------------------------------------------------------------
XFMFP000
          PACK      KEY2,APEBLED,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,XFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,XFMFP999
.
          PACK      WORKDATE,APEADAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,XFMFP999
.
          MOVE      "fmsp",KEY4
          PACK      KEY8,KEY4,CURYEAR,SP70
          REP       " 0",CURYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,KEY8
          TRAPCLR   IO
          BRANCH    OVRCD,XFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      RDFMFP1
          IF        OVRCD=0
            ASSIGN    APEBAMT+FMFPCOM2,FMFPCOM2
            CALL      UPFMFP1
          ELSE
            MOVE      ZERO,FMFPCBF
            MOVE      ZERO,FMFPC01
            MOVE      ZERO,FMFPC02
            MOVE      ZERO,FMFPC03
            MOVE      ZERO,FMFPC04
            MOVE      ZERO,FMFPC05
            MOVE      ZERO,FMFPC06
            MOVE      ZERO,FMFPC07
            MOVE      ZERO,FMFPC08
            MOVE      ZERO,FMFPC09
            MOVE      ZERO,FMFPC10
            MOVE      ZERO,FMFPC11
            MOVE      ZERO,FMFPC12
            MOVE      ZERO,FMFPC13
.
            MOVE      ZERO,FMFPABF
            MOVE      ZERO,FMFPA01
            MOVE      ZERO,FMFPA02
            MOVE      ZERO,FMFPA03
            MOVE      ZERO,FMFPA04
            MOVE      ZERO,FMFPA05
            MOVE      ZERO,FMFPA06
            MOVE      ZERO,FMFPA07
            MOVE      ZERO,FMFPA08
            MOVE      ZERO,FMFPA09
            MOVE      ZERO,FMFPA10
            MOVE      ZERO,FMFPA11
            MOVE      ZERO,FMFPA12
            MOVE      ZERO,FMFPA13
            MOVE      ZERO,FMFPCOM
.
            MOVE      ZERO,FMFPCBFD
            MOVE      ZERO,FMFPC01D
            MOVE      ZERO,FMFPC02D
            MOVE      ZERO,FMFPC03D
            MOVE      ZERO,FMFPC04D
            MOVE      ZERO,FMFPC05D
            MOVE      ZERO,FMFPC06D
            MOVE      ZERO,FMFPC07D
            MOVE      ZERO,FMFPC08D
            MOVE      ZERO,FMFPC09D
            MOVE      ZERO,FMFPC10D
            MOVE      ZERO,FMFPC11D
            MOVE      ZERO,FMFPC12D
            MOVE      ZERO,FMFPC13D
.
            MOVE      ZERO,FMFPABFD
            MOVE      ZERO,FMFPA01D
            MOVE      ZERO,FMFPA02D
            MOVE      ZERO,FMFPA03D
            MOVE      ZERO,FMFPA04D
            MOVE      ZERO,FMFPA05D
            MOVE      ZERO,FMFPA06D
            MOVE      ZERO,FMFPA07D
            MOVE      ZERO,FMFPA08D
            MOVE      ZERO,FMFPA09D
            MOVE      ZERO,FMFPA10D
            MOVE      ZERO,FMFPA11D
            MOVE      ZERO,FMFPA12D
            MOVE      ZERO,FMFPA13D
            MOVE      ZERO,FMFPCOMD
.
            MOVE      ZERO,FMFPCBFT
            MOVE      ZERO,FMFPC01T
            MOVE      ZERO,FMFPC02T
            MOVE      ZERO,FMFPC03T
            MOVE      ZERO,FMFPC04T
            MOVE      ZERO,FMFPC05T
            MOVE      ZERO,FMFPC06T
            MOVE      ZERO,FMFPC07T
            MOVE      ZERO,FMFPC08T
            MOVE      ZERO,FMFPC09T
            MOVE      ZERO,FMFPC10T
            MOVE      ZERO,FMFPC11T
            MOVE      ZERO,FMFPC12T
            MOVE      ZERO,FMFPC13T
.
            MOVE      ZERO,FMFPABFT
            MOVE      ZERO,FMFPA01T
            MOVE      ZERO,FMFPA02T
            MOVE      ZERO,FMFPA03T
            MOVE      ZERO,FMFPA04T
            MOVE      ZERO,FMFPA05T
            MOVE      ZERO,FMFPA06T
            MOVE      ZERO,FMFPA07T
            MOVE      ZERO,FMFPA08T
            MOVE      ZERO,FMFPA09T
            MOVE      ZERO,FMFPA10T
            MOVE      ZERO,FMFPA11T
            MOVE      ZERO,FMFPA12T
            MOVE      ZERO,FMFPA13T
            MOVE      ZERO,FMFPCOMT
.
            PACK      FMFPSPAR,SP70,SP70
            ASSIGN    APEBAMT,FMFPCOM2
            CALL      WRFMFP1
          ENDIF
.
          COMPARE   ONE,FMCOCALC
          GOTO      XFMFP999 IF NOT EQUAL
.
          PACK      KEY20,PORT,CURYEAR,APEBLED,APEBACC,SP70
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      XFMFP999 IF EQUAL
.
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
XFMFP999  RETURN
.----------------------------------------------------------------------
. Process Receival Parameters
.-----------------------------
. HACCNT    FORM 1  Running the Accounting System          0=No
. HACCDATA  DIM  20 General Ledger Data Directory
. HDEFWH    DIM  5  Default Warehouse for Non Stock Items
. HORDDES   DIM  1  Order Number Alhpa Prefix
.----------------------------------------------------------------------
RCON0000  MOVE      ONE,CEAFILE
          READ      CONTROLF,TWENTY3;*95,HACCNT,*124,HORDDES:
                                    *143,HDEFWH
          READ      CONTROLF,TWENTY4;*135,HACCDATA
          COMPARE   ONE,HACCNT
          GOTO      RCON9999 IF NOT EQUAL
.
.---- accounting system active ----
.
          CLOSE     CONTROLF
          MOVE      "controlf.txt",KEY12
          PACK      KEY80,HACCDATA,KEY12
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CONTROLF,KEY80
          TRAPCLR   IO
          IF        OVRCD=1
            OPEN      CONTROLF,"controlf"
          ENDIF
.
          CALL      RDFMCO50           * Read Account Code Parameters
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CLOSE     CONTROLF
          OPEN      CONTROLF,"controlf"
.
          MOVE      "fmslmaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMAA1,KEY80
.
          MOVE      "fmsamaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSAMAA1,KEY80
.
          MOVE      "fmslmcaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMCA1,KEY80
.
          MOVE      "fmscsaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSCSAA1,KEY80
.
          MOVE      "fmstupaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSTUPA1,KEY80
.
          MOVE      "apscioaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      APSCIOA1,KEY80
.
          MOVE      "apsordaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      APSORDA1,KEY80
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          MOVE      "apsceaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      APSCEAA1,KEY80
          TRAPCLR   IO
.
          MOVE      "apscebaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCEBA1,KEY80
          TRAPCLR   IO
          MOVE      OVRCD,CEAFILE
.
RCON9999  RETURN
.------------------------------------------------------------
. Calculate Total Received in Issue Units Update Usage
.------------------------------------------------------------
CAISS000  ASSIGN    TOTALREC*SEQ,SIUSQTY
          IF        SIPFCST<0
            MOVE      ZERO,SIUSCST
          ELSE
            IF        SNCOPURC=1
              ASSIGN    SEQ*SIPFQTY*SIPFCST,SIUSCST
            ELSE
              MOVE      SIPFCST,F12P4
              SUB       SIPFGST,F12P4
              ASSIGN    SEQ*SIPFQTY*F12P4,SIUSCST
            ENDIF
          ENDIF
...
.----------commented as updating to the same period--------------------*I-F0902
...       UNPACK    SIPFUDT,SIPEYEAR,SIPEPER                           *D-F0902
.----------added to get the current period in usage for reversal-------*I-F0902
...                                                                    *I-F0902
          PACK     SIPEDATE,CCC,CYY,CMM,CDD                            *I-F0902
          REP      " 0",SIPEDATE                                       *I-F0902
          MOVE      ZERO,EXIT                                          *I-F0902
          CALL      RSIPE000            * Returns SIPEYEAR and SIPEPER *I-F0902
          IF        OVRCD=1
            MOVE      "Unable to find Current Processing Period - ",DISPMSG
            BEEP                                                       *I-F0902
            CALL      MESSAGE1                                         *I-F0902
            UNPACK    SIPFUDT,SIPEYEAR,SIPEPER  * Use the receival date*I-F0902
          ENDIF
.--------------------------------------------------------------------------
...
          MATCH     SIPCCAT,SP70
          IF        @EQUAL
            MOVE      SP20,SIIACAT
            MOVE      SIPCPRD,SIIASUB
            MOVE      ONE,SIIANON
            MOVE      SP70,SIIEWAR
          ENDIF
          IF        SIIANON=1
            MOVE      SP70,SIIEWAR          * Non Stock so Blank Warehouse
          ENDIF
.
          CALL      SINRECUS                * Update Usage
          IF        SIIANON=1
            CALL      SINUSAGE              * Update Usage
          ENDIF
          RETURN
.------------------------------------------------------------
. Update Costs
.------------------------------------------------------------
UPCST000  MOVE      ONE,SIIANON       * set for not catalogued
          MOVE      SP70,SIIAISS
          MOVE      SP70,SIIACAT
          MOVE      SP70,SIIASUB
          MOVE      ZERO,SIIAREX
          MOVE      ZERO,SIIAAVC
.
          MATCH     SP70,SIPCCAT      * No Catalog then Can't Update
          GOTO      UPCST999 IF EQUAL
.
          PACK      KEY7,SIPCCAT
          CALL      RDSIIA1
          BRANCH    OVRCD,UPCST999
.
          PACK      KEY27,SIPCCAT,SIPASUP,SIPCSUT
          CALL      RDSIIC1
          BRANCH    OVRCD,UPCST999
.
          MOVE      SSIICCCT,SIICCCT
          MOVE      SSIICLCT,SIICLCT
          MOVE      SSIIAAVC,SIIAAVC
.
          CALL      UPSIIC1
          CALL      UPSIIA1
.
UPCST999  RETURN
.------------------------------------------------------------
. Calculate Expected Delivery Date
.------------------------------------------------------------
CALDD000  MATCH     SP70,SIPCCAT
          IF        @EQUAL
            MOVE      "7",SIICLTM
          ELSE
            PACK      KEY27,SIPCCAT,SIPASUP,SIPCSUT
            CALL      RDSIIC1
            IF        OVRCD=1
              MOVE      "7",SIICLTM
            ENDIF
          ENDIF
          MOVE      CCC,CC
          MOVE      CYY,YY
          MOVE      CMM,MM
          MOVE      CDD,DD              * Todays Date
          CALL      DMYCON              * Convert to Jul Date
          ADD       SIICLTM,JULDAY      * Add Lead Time
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON              * Convert Date Back
          PACK      SIPCEDD,CC,YY,MM,DD
          REP       " 0",SIPCEDD
          RETURN
.----------------------------------------------------------------------
. Default DEFYESNO to "N"
.----------------------------------------------------------------------
NYESNO00  MOVE      "N",DEFYESNO
          RETURN
.----------------------------------------------------------------------
. Default DEFYESNO to "_"
.----------------------------------------------------------------------
CYESNO00  MOVE      "_",DEFYESNO
          RETURN
.----------------------------------------------------------------------
. Keyin CCCT
.----------------------------------------------------------------------
KCCCT000
          IF        COSTUPD=0
            KEYIN    *PCCOL:CVERT,*V2LON,*RV,SSIICCCT
          ELSE
            BEEP
            CLEAR     DISPMSG
            APPEND    "Cannot be Modified for Not Cataloged Items - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
          ENDIF
.
          MOVE      ZERO,EXIT          * valid entry
.
KCCCT999  RETURN
.----------------------------------------------------------------------
. Keyin CLCT
.----------------------------------------------------------------------
KCLCT000
          IF        COSTUPD=0
            KEYIN     *PCCOL:CVERT,*V2LON,*RV,SSIICLCT
          ELSE
            BEEP
            CLEAR     DISPMSG
            APPEND    "Cannot be Modified for Not Cataloged Items - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
          ENDIF
.
          MOVE      ZERO,EXIT          * valid entry
.
KCLCT999  RETURN
.----------------------------------------------------------------------
. Keyin AAVC
.----------------------------------------------------------------------
KAAVC000
          IF        COSTUPD=0
            KEYIN     *PCCOL:CVERT,*V2LON,*RV,SSIIAAVC
          ELSE
            BEEP
            CLEAR     DISPMSG
            APPEND    "Cannot be Modified for Not Cataloged Items - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
          ENDIF
.
          MOVE      ZERO,EXIT          * valid entry
.
KAAVC999  RETURN
.----------------------------------------------------------------------
. Keyin ESOH
.----------------------------------------------------------------------
KESOH000
          IF        STOKUPD=0
            KEYIN     *PCCOL:CVERT,*V2LON,*RV,TOTALSOH
            IF        TOTALSOH<0
              BEEP
              MOVE      "Stock on Hand Must Not be Negative - ",DISPMSG
              CALL      MESSAGE1
              GOTO      KESOH000
            ENDIF
          ELSE
            BEEP
            MOVE      "Cannot be Modified for Non-Stock Catalogs - ",DISPMSG
            CALL      MESSAGE1
          ENDIF
.
          MOVE      ZERO,EXIT          * valid entry
.
KESOH999  RETURN
.----------------------------------------------------------------------
. Keyin ESTI
.----------------------------------------------------------------------
KESTI000
          IF        STOKUPD=0
            CALL      YORN0000
            MOVE      FYESNO,SSIIESTI
          ELSE
            BEEP
            CLEAR     DISPMSG
            APPEND    "Cannot be Modified for Non-Stock Catalogs - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
          ENDIF
.
          MOVE      ZERO,EXIT          * valid entry
.
KESTI999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSCEAIO/INC
          INC       APSCEBIO/INC
          INC       APSCIOIO/INC
          INC       APSMASIO/INC
          INC       APSORDIO/INC
          INC       APSSUBIO/INC
          INC       FMSAMAIO/INC
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSFPSIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSTUPIO/INC
          INC       SINCCAIO/INC
          INC       SINCCBIO/INC
          INC       SINCCEIO/INC
          INC       SINCCFIO/INC
          INC       SINCCHIO/INC
          INC       SINCGAIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCICIO/INC
          INC       SINCIEIO/INC
          INC       SINCIHIO/INC
          INC       SINCIIIO/INC
          INC       SINFACIO/INC
          INC       SINITMIO/INC
          INC       SINLTTIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOAKY    
          INC       SINPOCIO/INC
          INC       SINPODIO/INC
          INC       SINPOFIO/INC
          INC       SINRCPIO/INC
          INC       SINRECUS    
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINUSAGE    
          INC       SINWARIO/INC
          INC       SINWRKCD    
          INC       SINWRKIO/INC
          INC       SINWSEIO/INC
.
          INC       STDGENCD
.
