.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVXHCP                                                    *
.* Desc      :   Data Migration Program to upload external HCP detail data   *
.*               from a third party legacy system into the patient webPAS    *
.*               module.                                                     *
.*****************************************************************************
.* Date      :   30/05/2011                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program has three options that allow valid data to     *
.*               be uploaded into pmshcpaf (for HCP's), pmshcgaf (for        *
.*               practices) or pmshclaf (for linked HCP's).                  *
.* Mods      :                                                               *
.*        V10.12.02  23/02/2018  Steve Armstrong   TSK 0853258               *
.*                   Fixed calls for PMSPKIUP and PMSHKIUP to be triggered   *
.*                   after each add/update instead of at the end of the      *
.*                   upload.                                                 *
.*        V10.12.01  15/01/2018  Steve Armstrong   TSK 0825792               *
.*                   Added handling of HCP type 14 & 15 for Nurses.          *
.*****************************************************************************
.*        V10.11.01  09/08/2017  Tracey Nguyen     TSK 0299206               *
.*                   Recompiled for PMSHKIPR/PMSPKIPR                        *
.*****************************************************************************
.*        V10.06.02  13/07/2015  Steve Armstrong   CAR 319178                *
.*                   Mods to add new field for start date (EXGPSDAT)         *
.*        V10.06.01  09/04/2015  Steve Armstrong   CAR 315254                *
.*                   Mods to allow updating of existing hcp records          *
.*****************************************************************************
.*        V10.04.03  24/03/2014  Steve Armstrong   CAR 296128                *
.*                   Made HCP Speciality 1 (EXGPSPC1) a non-mandatory field. *
.*        V10.04.02  20/03/2014  Steve Armstrong   CAR 296128                *
.*                   Removed coded field validation for hcp title as this is *
.*                   a free format field                                     *
.*        V10.04.01  13/03/2014  Steve Armstrong   CAR 296128                *
.*                   Mods to add temp mapping tables for coded fields.       *
.*                   Added display of warning message if error records found.*
.*****************************************************************************
.*        V10.03.01  23/02/2012  Jill Parkinson    CAR 255142                *
.*                   Changed exgphcst to allow 0-13 instead of 0-10          *
.*****************************************************************************
.*        V10.02.00  30/05/2011  Steve Armstrong   CAR 240690                *
.*                   Created program                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       APSMASFD/INC
          INC       PATCODFD/INC
          INC       PATIN1FD/INC
          INC       PMSHCGFD/INC
          INC       PMSHCLFD/INC
          INC       PMSHCPFD/INC
.
.         External HCP data upload file layout - convhcpc.txt
.
EXHCPUPL  FILE      HL7, FIXED=4000         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
EXGPHCPC  DIM       10      1     HCP Code                            (pmhchcpc)
EXGPHCPT  DIM       2       11    Type of HCP                         (pmhchcpt)
.                                     G = GP
.                                     D = Dentist
EXGPTITL  DIM       10      13    HCP Title                           (pmhctitl)
EXGPGNM1  DIM       40      23    HCP First Given Name                (pmhcgnam)
EXGPGNM2  DIM       40      63    HCP Second Given Name               (pmhcgnam)
EXGPSNAM  DIM       35      103   HCP Surname                         (pmhcsnam)
EXGPINIT  DIM       5       138   HCP Initials                        (pmhcinit)
EXGPGNDR  DIM       1       143   HCP Gender                          (pmhcgndr)
.                                     M = Male
.                                     F = Female
.                                     U = Unknown
EXGPDTOB  DIM       8       144   HCP Date of Birth (ccyymmdd)        (pmhcdtob)
EXGPSPC1  DIM       3       152   HCP Speciality 1 (Cat DT)           (pmhcspc1)
EXGPSPD1  DIM       8       155   HCP Speciality Date 1 (ccyymmdd)    (pmhcspd1)
EXGPSPC2  DIM       3       163   HCP Speciality 2 (Cat DT)           (pmhcspc2)
EXGPSPD2  DIM       8       166   HCP Speciality Date 2 (ccyymmdd)    (pmhcspd2)
EXGPSPC3  DIM       3       174   HCP Speciality 3 (Cat DT)           (pmhcspc3)
EXGPSPD3  DIM       8       177   HCP Speciality Date 3 (ccyymmdd)    (pmhcspd3)
EXGPSPC4  DIM       3       185   HCP Speciality 4 (Cat DT)           (pmhcspc4)
EXGPSPD4  DIM       8       188   HCP Speciality Date 4 (ccyymmdd)    (pmhcspd4)
EXGPSPC5  DIM       3       196   HCP Speciality 5 (Cat DT)           (pmhcspc5)
EXGPSPD5  DIM       8       199   HCP Speciality Date 5 (ccyymmdd)    (pmhcspd5)
EXGPRCPT  DIM       25      207   HCP Receptionist's Name             (pmhcrcpt)
EXGPADR1  DIM       60      232   HCP Surgery Address Line 1          (pmhcadr1)
EXGPADR2  DIM       60      292   HCP Surgery Address Line 2          (pmhcadr2)
EXGPADR3  DIM       60      352   HCP Surgery Address Line 3          (pmhcadr3)
EXGPADR4  DIM       60      412   HCP Surgery Address Line 4          (pmhcadr4)
EXGPADR5  DIM       60      472   HCP Surgery Address Line 5          (pmhcadr5)
EXGPADR6  DIM       60      532   HCP Surgery Address Line 6          (pmhcadr6)
EXGPPOST  DIM       8       592   HCP Surgery PostCode                (pmhcpost)
EXGPSTAT  DIM       4       600   HCP State                           (pmhcstat)
EXGPSEML  DIM       80      604   HCP Surgery Email Address           (pmhcseml)
EXGPSTEL  DIM       20      684   Surgery Telephone                   (pmhcstel)
EXGPPAGR  DIM       20      704   HCP Pager Telephone                 (pmhcpagr)
EXGPPAGN  DIM       20      724   HCP Pager Number                    (pmhcpagn)
EXGPAHP1  DIM       25      744   Associated HCP 1                    (pmhcahp1)
EXGPAHP2  DIM       25      769   Associated HCP 2                    (pmhcahp2)
EXGPAHP3  DIM       25      794   Associated HCP 3                    (pmhcahp3)
EXGPAHP4  DIM       25      819   Associated HCP 4                    (pmhcahp4)
EXGPAHP5  DIM       25      844   Associated HCP 5                    (pmhcahp5)
EXGPPRV1  DIM       10      869   Provider Number 1 - Reg. No. NZ     (pmhcprv1)
EXGPPRV2  DIM       10      879   Provider Number 2 - Prev Reg. No NZ (pmhcprv2)
EXGPPRV3  DIM       10      889   Provider Number 3                   (pmhcprv3)
EXGPPRV4  DIM       10      899   Provider Number 4                   (pmhcprv4)
EXGPPRV5  DIM       10      909   Provider Number 5                   (pmhcprv5)
EXGPHTEL  DIM       20      919   HCP Home Telephone                  (pmhchtel)
EXGPHAD1  DIM       60      939   HCP Home Address Line 1             (pmhchad1)
EXGPHAD2  DIM       60      999   HCP Home Address Line 2             (pmhchad2)
EXGPHAD3  DIM       60      1059  HCP Home Address Line 3             (pmhchad3)
EXGPHAD4  DIM       60      1119  HCP Home Address Line 4             (pmhchad4)
EXGPHAD5  DIM       60      1179  HCP Home Address Line 5             (pmhchad5)
EXGPHAD6  DIM       60      1239  HCP Home Address Line 6             (pmhchad6)
EXGPHPCD  DIM       8       1299  HCP Home Post Code                  (pmhchpcd)
EXGPHEML  DIM       80      1307  HCP Home Email Address              (pmhcheml)
.                                   NZ - Healthlink Mailbox
EXGPDFAC  DIM       8       1387  Date of First Accred. (ccyymmdd)    (pmhcdfac)
EXGPDLAC  DIM       8       1395  Date of Last Accred. (ccyymmdd)     (pmhcdlac)
EXGPYACC  DIM       2       1403  Years Of Accreditation              (pmhcyacc)
EXGPATYP  DIM       3       1405  Accreditation Type (Cat AT)         (pmhcatyp)
EXGPHHCP  DIM       3       1408  H.C.S. HCP Code                     (pmhchhcp)
EXGPOSLV  DIM       3       1411  Operating Supervision Level (Cat DL)(pmhcoslv)
EXGPHCST  DIM       2       1414  HCP Status                          (pmhchcst)
.                                   0 = Attending Doctor
.                                   1 = Referring Doctor
.                                   2 = Attending & Referring Doctor
.                                   3 = GP
.                                   4 = Attending Doctor & GP
.                                   5 = Referring Doctor & GP
.                                   6 = Attending, Referring & GP
.                                   7 = Other
.                                   8 = Other Attending
.                                   9 = Other Referring
.                                   10 = Other Attending & Referring
.                                   11 - Attending, GP & Other
.                                   12 - Referring, GP & Other
.                                   13 - Attending, Referring, GP & Other
.                                   14 - Nurse
.                                   15 - Nurse & Other
EXGPHCSD  DIM       8       1416  HCP Status Date (ccyymmdd)          (pmhchcsd)
EXGPFAXN  DIM       20      1424  HCP's Fax Number                    (pmhcfaxn)
EXGPHFXN  DIM       20      1444  HCP's Home Fax Number               (pmhchfxn)
EXGPMOBN  DIM       20      1464  HCP's Mobile Phone Number           (pmhcmobn)
EXGPCRDC  DIM       5       1484  Creditor Code (apsmasaf)            (pmhccrdc)
EXGPWAHC  DIM       10      1489  WA HDP HCP Code                     (pmhcwahc)
EXGPMRBN  DIM       10      1499  Medical Registration Board Number   (pmhcmrbn)
EXGPNHSN  DIM       10      1509  N.H.S. Proscriber Number            (pmhcnhsn)
EXGPUDF1  DIM       3       1519  User Defined Field 1 (Cat R5)       (pmhcudf1)
EXGPUDF2  DIM       3       1522  User Defined Field 2 (Cat R6)       (pmhcudf2)
EXGPUDF3  DIM       3       1525  User Defined Field 3 (Cat R7)       (pmhcudf3)
EXGPUDF4  DIM       3       1528  User Defined Field 4 (Cat R8)       (pmhcudf4)
EXGPUDF5  DIM       3       1531  User Defined Field 5 (Cat R9)       (pmhcudf5)
EXGPUYN1  DIM       1       1534  User def. Y/N field 1               (pmhcuyn1)
.                                     Blank or 0 = No
.                                              1 = Yes
EXGPUYN2  DIM       1       1535  User def. Y/N field 2               (pmhcuyn2)
.                                     Blank or 0 = No
.                                              1 = Yes
EXGPUYN3  DIM       1       1536  User def. Y/N field 3               (pmhcuyn3)
.                                     Blank or 0 = No
.                                              1 = Yes
EXGPUYN4  DIM       1       1537  User def. Y/N field 4               (pmhcuyn4)
.                                     Blank or 0 = No
.                                              1 = Yes
EXGPUYN5  DIM       1       1538  User def. Y/N field 5               (pmhcuyn5)
.                                     Blank or 0 = No
.                                              1 = Yes
EXGPINSC  DIM       6       1539  Insurance Code (patin1af)           (pmhcinsc)
EXGPIPLN  DIM       20      1545  Insurance Policy Number             (pmhcipln)
EXGPIDTF  DIM       8       1565  Insurance Date From (ccyymmdd)      (pmhcidtf)
EXGPIDTT  DIM       8       1573  Insurance Date To (ccyymmdd)        (pmhcidtt)
EXGPMPGN  DIM       20      1581  MPG Certificate Number              (pmhcmpgn)
EXGPAPCI  DIM       1       1601  APC - NZ                            (pmhcapci)
.                                     Blank or 0 = No
.                                              1 = Yes
EXGPREGT  DIM       3       1602  Registration Type (Cat HR) - NZ     (pmhcregt)
EXGPRGDF  DIM       8       1605  Reg. Date From - Gen Reg Date (NZ)  (pmhcrgdf)
.                                    (ccyymmdd)
EXGPRGDT  DIM       8       1613  Reg. Date To - Gen Reg Date (NZ)    (pmhcrgdt)
.                                    (ccyymmdd)
EXGPPRDF  DIM       8       1621  Probation. Reg. Date From (ccyymmdd)(pmhcprdf)
EXGPPRDT  DIM       8       1629  Probation. Reg. Date To (ccyymmdd)  (pmhcprdt)
EXGPTSDF  DIM       8       1637  Temp. Start Date From (ccyymmdd)    (pmhctsdf)
EXGPTFDT  DIM       8       1645  Temp. Finish Date To (ccyymmdd)     (pmhctfdt)
EXGPVISD  DIM       8       1653  Visa Date (ccyymmdd)                (pmhcvisd)
EXGPPRFC  DIM       3       1661  HCP's Preferd Communication (Cat CZ)(pmhcprfc)
EXGPPRFN  DIM       30      1664  HCP's Preferred Name                (pmhcprfn)
EXGPABNN  DIM       11      1694  ABN Number                          (pmhcabnn)
EXGPUPDF  DIM       1       1705  Update Flag                         (pmhcupdf)
.                                       M = Manual
.                                       A = Automatic
EXGPPRMK  DIM       1       1706  Processed Record Marker             (pmhcprmk)
.                                     Blank or 0 = Not Processed
.                                              1 = Processed
EXGPSTTS  DIM       1       1707  HCP rec status                      (pmhcstts)
.                                        Blank or 0 = Active
.                                                 1 = Inactive
EXGPDLMI  DIM       8       1708  Date Last Made Inactive (ccyymmdd)  (pmhcdlmi)
EXGPDLMA  DIM       8       1716  Date Last Made Active (ccyymmdd)    (pmhcdlma)
EXGPCDTE  DIM       8       1724  Date Record Created (ccyymmdd)      (pmhccdte)
EXGPCTIM  DIM       8       1732  Time Record Created (hh:mm:ss)      (pmhcctim)
EXGPWEBC  DIM       10      1740  WEB User Id creator (websecaf)      (pmhcwebc)
EXGPLUPD  DIM       8       1750  Last Update Date (ccyymmdd)         (pmhclupd)
EXGPLUPT  DIM       8       1758  Last Update Time (hh:mm:ss)         (pmhclupt)
EXGPWEBU  DIM       10      1766  WEB User Id updated (websecaf)      (pmhcwebu)
EXGPSLGP  DIM       1       1776  Show Local GP on PMI (plocdoc)      (pmhcslgp)
.                                       Blank or 0 = No
.                                                1 = Yes
EXGPHOSS  DIM       1       1777  Hospital Specific HCP (mlthcpaf)    (pmhchoss)
.                                       Blank or 0 = No
.                                                1 = Yes
EXGPPTYP  DIM       3       1778  Provider Type (nzpptyaf Cat pt)     (pmhcptyp)
EXGPEXML  DIM       1       1781  Exclude from Mailing List           (pmhcexml)
.                                       Blank or 0 = No
.                                                1 = Yes
EXGPDEAC  DIM       8       1782  Accred. Expiry Date (ccyymmdd)      (pmhcdeac)
EXGPCPER  DIM       6       1790  Common Person Number or HPN CPN     (pmhccper)
EXGPAHC1  DIM       3       1796  AH Pref Contact Method 1 (Cat CZ)   (pmhcahc1)
EXGPAHC2  DIM       3       1799  AH Pref Contact Method 2 (Cat CZ)   (pmhcahc2)
EXGPAHC3  DIM       3       1802  AH Pref Contact Method 3 (Cat CZ)   (pmhcahc3)
EXGPSDAT  DIM       8       1805  Start Date (ccyymmdd)               (pmhcsdat)
.
. End of Record             1813
.
.
.         External Practice data upload file layout - convhcpp.txt
.
EXPRAUPL  FILE      HL7, FIXED=4000         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
EXPRPRAC  DIM       10     1    HCP Practice Code                     (pmhgprac)
EXPRTYPE  DIM       2      11   Type of HCP Practice                  (pmhgtype)
EXPRSPCD  DIM       10     13   Senior Partner HCP Code (pmshcpaf)    (pmhgspcd)
EXPRPNAM  DIM       80     23   HCP Practice Name                     (pmhgpnam)
EXPRADD1  DIM       60     103  HCP Practice Address 1                (pmhgadd1)
EXPRADD2  DIM       60     163  HCP Practice Address 2                (pmhgadd2)
EXPRADD3  DIM       60     223  HCP Practice Address 3                (pmhgadd3)
EXPRADD4  DIM       60     283  HCP Practice Address 4                (pmhgadd4)
EXPRADD5  DIM       60     343  HCP Practice Address 5                (pmhgadd5)
EXPRADD6  DIM       60     403  HPC Practice Address 6                (pmhgadd6)
EXPRPOST  DIM       8      463  HCP Practice Post Code                (pmhgpost)
EXPRSTAT  DIM       4      471  HCP Practice State                    (pmhgstat)
EXPRPEML  DIM       80     475  HCP Practice Email Address            (pmhgpeml)
EXPRPTEL  DIM       20     555  HCP Practice Telephone Number         (pmhgptel)
EXPRPFAX  DIM       20     575  HCP Practice Fax Number               (pmhgpfax)
EXPRPSTT  DIM       30     595  HCP Practice Status                   (pmhgpstt)
EXPRPPCN  DIM       30     625  HCP Practice Preferred Contact        (pmhgppcn)
.                                    NZ - Healthlink Mailbox
EXPRPPNO  DIM       10     655  HCP Practice Provider Number          (pmhgppno)
EXPRFMDT  DIM       8      665  Formation Date of Practice (ccyymmdd) (pmhgfmdt)
EXPRDSDT  DIM       8      673  Dissolve Date of Practice (ccyymmdd)  (pmhgdsdt)
EXPRGPFH  DIM       5      681  GP Fundholder Code                    (pmhggpfh)
EXPRDTFA  DIM       8      686  Date GP Fund Holder Amended (ccyymmdd)(pmhgdtfa)
EXPRDTFE  DIM       8      694  GP Fund Holder End Date (ccyymmdd)    (pmhgdtfe)
EXPRGPPI  DIM       1      702  GPFH Extract GP Prac Inc              (pmhggppi)
.                                   Blank or 0 = Included
.                                            1 = Excluded
EXPRUPFL  DIM       1      703  Update Flag                           (pmhgupfl)
.                                   M = Manual
.                                   A = Automatic
EXPRSTTS  DIM       1      704  Status                                (pmhgstts)
.                                   Blank or 0 = Active
.                                            1 = Inactive
EXPRPCGC  DIM       5      705  Primary Care Group Code (cmscomaf)    (pmhgpcgc)
EXPRPRMK  DIM       1      710  Processed Record Marker               (pmhgprmk)
.                                   Blank or 0 = Not Processed
.                                            1 = Processed
EXPRCDTE  DIM       8      711  Date Record Created (ccyymmdd)        (pmhgcdte)
EXPRCTIM  DIM       8      719  Time Record Created (hh:mm:ss)        (pmhgctim)
EXPRWEBC  DIM       10     727  WEB User Id creator (websecaf)        (pmhgwebc)
EXPRLUPD  DIM       8      737  Date Record Last Updated (ccyymmdd)   (pmhglupd)
EXPRLUPT  DIM       8      745  Time Record Last Updated (hh:mm:ss)   (pmhglupt)
EXPRWEBU  DIM       10     753  WEB User Id updated (websecaf)        (pmhgwebu)
.
. End of Record            763
.
.
.         External Linked HCP data upload file layout - convhcpl.txt
.
EXLINUPL  FILE      HL7, FIXED=4000         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
EXLNHCPC  DIM       10     1    HCP Code (pmshcpaf)                   (pmhlhcpc)
EXLNHCPR  DIM       10     11   HCP Practice (pmshcgaf)               (pmhlhcpr)
EXLNTYPE  DIM       1      21   HCP Record Type                       (pmhltype)
EXLNJPDT  DIM       8      22   Date HCP Joined Practice (ccyymmdd)   (pmhljpdt)
EXLNLPDT  DIM       8      30   Date HCP Left Practice (ccyymmdd)     (pmhllpdt)
EXLNPRMK  DIM       1      38   Processed Rec. Marker                 (pmhlprmk)
.                                  Blank or 0 = Not Processed
.                                           1 = Processed
EXLNPRV1  DIM       10     39   Provider Number 1                     (pmhlprv1)
EXLNPRV2  DIM       10     49   Provider Number 2                     (pmhlprv2)
EXLNPRV3  DIM       10     59   Provider Number 3                     (pmhlprv3)
EXLNPRV4  DIM       10     69   Provider Number 4                     (pmhlprv4)
EXLNPRV5  DIM       10     79   Provider Number 5                     (pmhlprv5)
EXLNSTAT  DIM       1      89   Status                                (pmhlstat)
.                                  Blank or 0 = Active
.                                           1 = Inactive
EXLNCDTE  DIM       8      90   Date Record Created (ccyymmdd)        (pmhlcdte)
EXLNCTIM  DIM       8      98   Time Record Created (hh:mm:ss)        (pmhlctim)
EXLNWEBC  DIM       10     106  WEB User Id creator (websecaf)        (pmhlwebc)
EXLNLUPD  DIM       8      116  Last Update Date (ccyymmdd)           (pmhllupd)
EXLNLUPT  DIM       8      124  Last Update Time (hh:mm:ss)           (pmhllupt)
EXLNWEBU  DIM       10     132  WEB user Id updated (websecaf)        (pmhlwebu)
.
. End of Record            142
.
.
.         Temporary Mapping Files
.
.
.         HCP Code File - hcpcode.dat (pmshcpaf)
.
HCPCDFLG  FORM      1                            * HCP Code mapping flag
TEMP1     IFILE     SQL, FIXED=21, KEY="U1-10"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDHCPCD  DIM       10       10         1       Old HCP code
NEWHCPCD  DIM       10       10        11       New HCP code
.End of Record                         21
.
.         HCP Practice File - hcppract.dat (pmshcgaf)
.
HCGCDFLG  FORM      1                            * HCP Practice mapping flag
TEMP2     IFILE     SQL, FIXED=21, KEY="U1-10"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDHCGCD  DIM       10       10         1       Old HCP Practice
NEWHCGCD  DIM       10       10        11       New HCP Practice
.End of Record                         21
.
.         Doctor Type File - docttype.dat (Cat DT)
.
DTYPEFLG  FORM      1                            * Doctor Type mapping flag
TEMP3     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDTYPE  DIM       3        3          1       Old doctor type code
NEWDTYPE  DIM       3        3          4       New doctor type code
.End of Record                          7
.
.         Doctor Accreditation Type File - docacred.dat (Cat AT)
.
DACCRFLG  FORM      1                            * Dr Accred. Type mapping flag
TEMP4     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDACCR  DIM       3        3          1       Old doctor accred. type code
NEWDACCR  DIM       3        3          4       New doctor accred. type code
.End of Record                          7
.
.         Doctor Classification File - docclass.dat (Cat DL)
.
DCLASFLG  FORM      1                            * Doctor Class. mapping flag
TEMP5     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDCLAS  DIM       3        3          1       Old doctor class.  code
NEWDCLAS  DIM       3        3          4       New doctor class.  code
.End of Record                          7
.
.         Doctor User Defined Field 1 File - doctudf1.dat (Cat R5)
.
DUDF1FLG  FORM      1                            * Doctor UDF 1 mapping flag
TEMP6     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDUDF1  DIM       3        3          1       Old doctor UDF 1 code
NEWDUDF1  DIM       3        3          4       New doctor UDF 1 code
.End of Record                          7
.
.         Doctor User Defined Field 2 File - doctudf2.dat (Cat R6)
.
DUDF2FLG  FORM      1                            * Doctor UDF 2 mapping flag
TEMP7     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDUDF2  DIM       3        3          1       Old doctor UDF 2 code
NEWDUDF2  DIM       3        3          4       New doctor UDF 2 code
.End of Record                          7
.
.         Doctor User Defined Field 3 File - doctudf3.dat (Cat R7)
.
DUDF3FLG  FORM      1                            * Doctor Type mapping flag
TEMP8     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDUDF3  DIM       3        3          1       Old doctor UDF 3 code
NEWDUDF3  DIM       3        3          4       New doctor UDF 3 code
.End of Record                          7
.
.         Doctor Contact Time File - doctcont.dat (Cat R8)
.
DCONTFLG  FORM      1                            * Doctor contact mapping flag
TEMP9     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDCONT  DIM       3        3          1       Old doctor contact code
NEWDCONT  DIM       3        3          4       New doctor contact code
.End of Record                          7
.
.         Doctor Notify Via File - docnotif.dat (Cat R9)
.
DNOTFFLG  FORM      1                            * Doctor Type mapping flag
TEMP10    IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDNOTF  DIM       3        3          1       Old doctor notify code
NEWDNOTF  DIM       3        3          4       New doctor notify code
.End of Record                          7
.
.         Insurance File - docinsur.dat (patin1af)
.
DINSRFLG  FORM      1                       * Dr. Insurance Code file flag
TEMP11    IFILE     SQL, FIXED=13, KEY="U1-6"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDINSUR  DIM       6        6          1       Old Insurance Code
NEWINSUR  DIM       6        6          7       New Insurance Code
.End of Record                         13
.
.         Registration Type File - regtype.dat (Cat HR)
.
REGISFLG  FORM      1                       * Registration Type Code file flag
TEMP12    IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDREGIS  DIM       3        3          1       Old Registration Type Code
NEWREGIS  DIM       3        3          4       New Registration Type Code
.End of Record                          7
.
.         Preferred Contact File - doctpref.dat (Cat CZ)
.
DPREFFLG  FORM      1                            * Pref. Contact mapping flag
TEMP13    IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDPREF  DIM       3        3          1       Old pref. contact code
NEWDPREF  DIM       3        3          4       New pref. contact code
.End of Record                          7
.
.         Provider Type File - provtype.dat (Cat pt)
.
PRTYPFLG  FORM      1                            * Provider Type mapping flag
TEMP14    IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDPRTYP  DIM       3        3          1       Old provider type code
NEWPRTYP  DIM       3        3          4       New provider type code
.End of Record                          7
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ADDCOUNT  FORM      8             * added record count
.
CODCOUNT  FORM      8             * code error record count
CURRCENT  FORM      2             * current century
CURRDATE  DIM       8             * current date
.
DATEFLG1  FORM      1             * Date Type flag
.                                     0 = full date (ccyymmdd)
.                                     1 = partial date (ccyymm)
DATEFLG2  FORM      1             * Dates Allowed flag
.                                     0 = any date allowed
.                                     1 = future dates not allowed
.                                     2 = future dates only allowed
DIM1A     DIM       1
DIM1B     DIM       1
DIM2C     DIM       2
DIM2D     DIM       2
DIM2H     DIM       2
DIM2M     DIM       2
DIM2S     DIM       2
DIM2Y     DIM       2
DIM3      DIM       3
DIM4      DIM       4
DIM42     DIM       42
DTECOUNT  FORM      8             * date error record count
DUPCOUNT  FORM      8             * duplicate record count
.
ERORDESC  DIM       70
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
FORM10    FORM      10
.
HCPFOUND  FORM      1             * hcp found flag
.                                    0 = hcp found
.                                    1 = hcp not found
.
MANCOUNT  FORM      8             * mandatory field error record count
.
NUMCOUNT  FORM      8             * numeric error record count
.
OPTNDESC  DIM       13
.
PTCNHDPS  FORM      1
.
RECCOUNT  FORM      8             * record read counter
.
TEMPCATG  DIM       6             * Category (or HF for HF Table validation)
TEMPCODE  DIM       10            * Coded field (length = max code field length)
TEMPDATE  DIM       8
TEMPTIME  DIM       8
TEMPTYPE  FORM      1             * Type of coded field
TIMCOUNT  FORM      8             * time error record count
TMPFIELD  DIM       8             * Field name
TMPSTRNG  DIM       40            * Temporary string (max field length)
.
UPDCOUNT  FORM      8             * updated record count
UPDTFLAG  FORM      1             * Update Flag
.                                   0 = Updates not allowed
.                                   1 = Updates allowed
.
VCHKFLAG  FORM      1             * Validation flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
.
.
.
. PROGRAM CONSTANTS
. -----------------
CATPT     INIT      "pt"
OPTNDES1  INIT      "- HCP "
OPTNDES2  INIT      "- Practice "
OPTNDES3  INIT      "- Linked HCP "
PIPE      INIT      "|"
.
.
.
PRGID     INIT      "CONVXHCP"
PRGNAM    INIT      "Upload External HCP Details"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000:      * upload hcp
                            MAIN1000:      * upload practice
                            MAIN1000       * upload linked hcp
.
MAIN1000  CALL      OPEN0000               * open upload file
          BRANCH    EXIT,MAIN0100          * file not found
.
          CALL      DMAP0000               * display mapping files
          BRANCH    EXIT,MAIN0100:         * no (to continue)
                         MAIN9999          * cancel (to continue)
.
          CALL      ASKQ0000               * validation run only ?
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      UPLD0000               * process upload
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
.
          DISPLAY   *P64:24,"patin1af";
          OPEN      PATIN1A1,"patin1af"
.
          DISPLAY   *P64:24,"pmshcgaf";
          OPEN      PMSHCGA1,"pmshcgaf"
.
          DISPLAY   *P64:24,"pmshclaf";
          OPEN      PMSHCLA1,"pmshclaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"controlf"
          OPEN      CONTROLF,"controlf"
.
          MOVE      ONE,CNOUNDLN
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data upload                         *
.*                        TRUE  (1)  Exit selected                           *
.*    COPTION - 0 = Exit                                                     *
.*              1 = HCP Upload                                               *
.*              2 = Practice Upload                                          *
.*              3 = Linked HCP Upload                                        *
.*****************************************************************************
.
OPTN0000  HLINE     *G37,2,54,80
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run HCP Data Upload":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Practice Data Upload":
                    *P1:7,*V2LON,THREE,*HOFF,". Run Linked HCP Data Upload"
.
OPTN0500  KEYIN     *P1:9,*EL,"Select Option : ":
                    *P17:9,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run HCP data upload
                            OPTN9000:            * run Practice data upload
                            OPTN9000             * run Linked HCP data upload
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  LOAD      OPTNDESC,COPTION,OPTNDES1,OPTNDES2,OPTNDES3
          DISPLAY   *P54:2,*V2LON,*+,OPTNDESC
.
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               OPEN0000              Called by: MAIN0000   *
.*                  Open upload file and mapping tables                      *
.*****************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          IF        COPTION = 1
            OPEN      EXHCPUPL,"convhcpc"
          ELSE
            IF        COPTION = 2
              OPEN      EXPRAUPL,"convhcpp"
            ELSE
              OPEN      EXLINUPL,"convhcpl"
            ENDIF
          ENDIF
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
.         HCP Code mapping file (pmshcpaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP1,"hcpcode"              * hcp code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HCPCDFLG              * no
          ELSE
            MOVE      ONE,HCPCDFLG               * yes
          ENDIF
.
.         HCP Practice mapping file (pmshcgaf)
.
          BRANCH    COPTION,OPEN1000             * hcp upload
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP2,"hcppract"             * hcp practice file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HCGCDFLG              * no
          ELSE
            MOVE      ONE,HCGCDFLG               * yes
          ENDIF
.
          BRANCH    COPTION,OPEN1000:            * upload hcps
                            OPEN9000:            * upload hcp practices
                            OPEN9000             * upload hcp linked practices
.
.         Doctor Type mapping file (Cat DT)
.
OPEN1000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP3,"docttype"             * doctor type file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DTYPEFLG              * no
          ELSE
            MOVE      ONE,DTYPEFLG               * yes
          ENDIF
.
.         Doctor Accreditation Type mapping file (Cat AT)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP4,"docacred"             * dr accred. type file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DACCRFLG              * no
          ELSE
            MOVE      ONE,DACCRFLG               * yes
          ENDIF
.
.         Doctor Classification mapping file (Cat DL)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP5,"docclass"             * dr class'n file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DCLASFLG              * no
          ELSE
            MOVE      ONE,DCLASFLG               * yes
          ENDIF
.
.         Doctor UDF 1 mapping file (Cat R5)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP6,"doctudf1"             * doctor UDF 1 file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DUDF1FLG              * no
          ELSE
            MOVE      ONE,DUDF1FLG               * yes
          ENDIF
.
.         Doctor UDF 2 mapping file (Cat R6)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP7,"doctudf2"             * doctor UDF 2 file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DUDF2FLG              * no
          ELSE
            MOVE      ONE,DUDF2FLG               * yes
          ENDIF
.
.         Doctor UDF 3 mapping file (Cat R7)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP8,"doctudf3"             * doctor UDF 3 file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DUDF3FLG              * no
          ELSE
            MOVE      ONE,DUDF3FLG               * yes
          ENDIF
.
.         Doctor Contact Time mapping file (Cat R8)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP9,"doctcont"             * doctor contact file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DCONTFLG              * no
          ELSE
            MOVE      ONE,DCONTFLG               * yes
          ENDIF
.
.         Doctor Notify Via mapping file (Cat R9)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP10,"docnotif"            * doctor notify file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DNOTFFLG              * no
          ELSE
            MOVE      ONE,DNOTFFLG               * yes
          ENDIF
.
.         Doctor Insurance mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP11,"docinsur"            * dr insurance file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DINSRFLG              * no
          ELSE
            MOVE      ONE,DINSRFLG               * yes
          ENDIF
.
.         Registration Type mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP12,"regtype"             * regist'n type file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,REGISFLG              * no
          ELSE
            MOVE      ONE,REGISFLG               * yes
          ENDIF
.
.         Preferred Contact mapping file (Cat CZ)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP13,"doctpref"            * dr pref. contact file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DPREFFLG              * no
          ELSE
            MOVE      ONE,DPREFFLG               * yes
          ENDIF
.
.         Provider Type mapping file (Cat pt)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP14,"provtype"            * provider type file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,PRTYPFLG              * no
          ELSE
            MOVE      ONE,PRTYPFLG               * yes
          ENDIF
.
OPEN9000  MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  DISPLAY   *P1:24,*EL,*B,"Upload file - ";
          IF        COPTION = 1
            DISPLAY   "convhcpc";
          ELSE
            IF        COPTION = 2
              DISPLAY   "convhcpp";
            ELSE
              DISPLAY   "convhcpl";
            ENDIF
          ENDIF
          DISPLAY   ".txt - not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.******************************************************************************
.*                                  DMAP0000              Called by: MAIN0000 *
.*                       Display File Name & Mapping files                    *
.* Requires: Mapping Flags                                                    *
.* Returns:  EXIT  0 = Ok to continue                                         *
.*                 1 = No selected                                            *
.*                 2 = Cancel selected                                        *
.******************************************************************************
.
DMAP0000  DISPLAY   *P1:4,*EF,*V2LON,SP9,*ULON,"Mapping Tables"
          MOVE      FIVE,CVERT                   * initialise display row
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,HCPCDFLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping HCP Code (pmshcpaf)           ":
                    *V2LON,DIM3
.
          BRANCH    COPTION,DMAP1000             * upload hcps
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,HCGCDFLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping HCP Practice (pmshcgaf)       ":
                    *V2LON,DIM3
.
          BRANCH    COPTION,DMAP1000:            * upload hcps
                            DMAP8000:            * upload hcp practices
                            DMAP8000             * upload hcp linked practices
.
DMAP1000  ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,DTYPEFLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Doctor Type (Cat DT)          ":
                    *V2LON,DIM3
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,DACCRFLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Doctor Accred. Type (Cat AT)  ":
                    *V2LON,DIM3
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,DCLASFLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Doctor Class'n (Cat DL)       ":
                    *V2LON,DIM3
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,DUDF1FLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Doctor UDF 1 (Cat R5)         ":
                    *V2LON,DIM3
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,DUDF2FLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Doctor UDF 2 (Cat R6)         ":
                    *V2LON,DIM3
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,DUDF3FLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Doctor UDF 3 (Cat R7)         ":
                    *V2LON,DIM3
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,DCONTFLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Doctor Contact Time (Cat R8)  ":
                    *V2LON,DIM3
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,DNOTFFLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Doctor Notify Via (Cat R9)    ":
                    *V2LON,DIM3
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,DINSRFLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Doctor Insurance (patin1af)   ":
                    *V2LON,DIM3
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,REGISFLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Registration Type (Cat HR)    ":
                    *V2LON,DIM3
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,DPREFFLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Preferred Contact (Cat CZ)    ":
                    *V2LON,DIM3
.
          ADD       ONE,CVERT                    * increment row count
          MOVE      DNO,DIM3
          LOAD      DIM3,PRTYPFLG,DYES
.
          DISPLAY   *P1:CVERT,*EL,"Mapping Provider Type (Cat pt)        ":
                    *V2LON,DIM3
.
DMAP8000  CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,DMAP9000:        * yes
                          DMAP9100:        * no
                          DMAP9200         * cancel
.
DMAP9000  MOVE      ZERO,EXIT
          GOTO      DMAP9999
.
DMAP9100  MOVE      ONE,EXIT
          GOTO      DMAP9999
.
DMAP9200  MOVE      TWO,EXIT
.
DMAP9999  RETURN
+
.*****************************************************************************
.*                               ASKQ0000              Called by: MAIN0000   *
.*                  Ask if running validation only                           *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.*****************************************************************************
.
ASKQ0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run HCP Data Upload":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Practice Data Upload":
                    *P1:7,*V2LON,THREE,*HOFF,". Run Linked HCP Data Upload":
                    *P1:9,*EL,"Select Option : ":
                    *P17:9,*V2LON,COPTION
.
ASKQ1000  MOVE      ANSY,ANS
          KEYIN     *P1:11,*EL,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:11,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:11,*V2LON,DYES,*HOFF:
                      *P35:11,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKQ5000
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:11,*V2LON,DNO,*HOFF:
                      *P35:11,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKQ5000
          ENDIF
.
          GOTO      ASKQ1000                     * invalid input
.
ASKQ5000  BRANCH    COPTION,ASKQ5100:            * upload hcp
                            ASKQ9999:            * upload practice
                            ASKQ9999             * upload linked hcp
.
ASKQ5100  MOVE      ANSN,ANS
          KEYIN     *P1:12,*EL,"Allow updates   (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:12,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:12,*V2LON,DYES,*HOFF
            MOVE      ONE,UPDTFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
           DISPLAY   *P25:12,*V2LON,DNO,*HOFF
            MOVE      ZERO,UPDTFLAG              * no
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ5100
.
ASKQ9999  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                  Process the PMI upload file records                       *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CURRCENT
.
          DISPLAY   *P1:14,"Processing ";
          IF        COPTION = 1
            DISPLAY   *V2LON,"convhcpc.txt";
          ELSE
            IF        COPTION = 2
              DISPLAY   *V2LON,"convhcpp.txt";
            ELSE
              DISPLAY   *V2LON,"convhcpl.txt";
            ENDIF
          ENDIF
          DISPLAY   *P1:15,"Started    : ",*V2LON,CTIMEIS
          IF        COPTION = 1
            DISPLAY   *P1:17,"HCP        :":
                      *P1:18,"Surname    :"
          ELSE
            IF        COPTION = 2
              DISPLAY   *P1:17,"Practice   :":
                        *P1:18,"Name       :"
            ELSE
              DISPLAY   *P1:17,"HCP        :":
                        *P1:18,"Practice   :"
            ENDIF
          ENDIF
          DISPLAY   *P1:19,"Records    :"
.
          MOVE      ZERO,RECCOUNT                * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,DTECOUNT                * init. date error record count
          MOVE      ZERO,TIMCOUNT                * init. time error record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
          MOVE      ZERO,NUMCOUNT                * init. num error record count
          MOVE      ZERO,UPDCOUNT                * init. updated record count
.
          CALL      HEAD0000                     * Print the report header
.
.         Loop through upload file records
.
UPLD1000  IF        COPTION = 1
            READ      EXHCPUPL,SEQ;EXGPHCPC,EXGPHCPT,EXGPTITL,EXGPGNM1,EXGPGNM2:
                                   EXGPSNAM,EXGPINIT,EXGPGNDR,EXGPDTOB,EXGPSPC1:
                                   EXGPSPD1,EXGPSPC2,EXGPSPD2,EXGPSPC3,EXGPSPD3:
                                   EXGPSPC4,EXGPSPD4,EXGPSPC5,EXGPSPD5,EXGPRCPT:
                                   EXGPADR1,EXGPADR2,EXGPADR3,EXGPADR4,EXGPADR5:
                                   EXGPADR6,EXGPPOST,EXGPSTAT,EXGPSEML,EXGPSTEL:
                                   EXGPPAGR,EXGPPAGN,EXGPAHP1,EXGPAHP2,EXGPAHP3:
                                   EXGPAHP4,EXGPAHP5,EXGPPRV1,EXGPPRV2,EXGPPRV3:
                                   EXGPPRV4,EXGPPRV5,EXGPHTEL,EXGPHAD1,EXGPHAD2:
                                   EXGPHAD3,EXGPHAD4,EXGPHAD5,EXGPHAD6,EXGPHPCD:
                                   EXGPHEML,EXGPDFAC,EXGPDLAC,EXGPYACC,EXGPATYP:
                                   EXGPHHCP,EXGPOSLV,EXGPHCST,EXGPHCSD,EXGPFAXN:
                                   EXGPHFXN,EXGPMOBN,EXGPCRDC,EXGPWAHC,EXGPMRBN:
                                   EXGPNHSN,EXGPUDF1,EXGPUDF2,EXGPUDF3,EXGPUDF4:
                                   EXGPUDF5,EXGPUYN1,EXGPUYN2,EXGPUYN3,EXGPUYN4:
                                   EXGPUYN5,EXGPINSC,EXGPIPLN,EXGPIDTF,EXGPIDTT:
                                   EXGPMPGN,EXGPAPCI,EXGPREGT,EXGPRGDF,EXGPRGDT:
                                   EXGPPRDF,EXGPPRDT,EXGPTSDF,EXGPTFDT,EXGPVISD:
                                   EXGPPRFC,EXGPPRFN,EXGPABNN,EXGPUPDF,EXGPPRMK:
                                   EXGPSTTS,EXGPDLMI,EXGPDLMA,EXGPCDTE,EXGPCTIM:
                                   EXGPWEBC,EXGPLUPD,EXGPLUPT,EXGPWEBU,EXGPSLGP:
                                   EXGPHOSS,EXGPPTYP,EXGPEXML,EXGPDEAC,EXGPCPER:
                                   EXGPAHC1,EXGPAHC2,EXGPAHC3,EXGPSDAT
          ELSE
            IF        COPTION = 2
              READ      EXPRAUPL,SEQ;EXPRPRAC,EXPRTYPE,EXPRSPCD,EXPRPNAM:
                                     EXPRADD1,EXPRADD2,EXPRADD3,EXPRADD4:
                                     EXPRADD5,EXPRADD6,EXPRPOST,EXPRSTAT:
                                     EXPRPEML,EXPRPTEL,EXPRPFAX,EXPRPSTT:
                                     EXPRPPCN,EXPRPPNO,EXPRFMDT,EXPRDSDT:
                                     EXPRGPFH,EXPRDTFA,EXPRDTFE,EXPRGPPI:
                                     EXPRUPFL,EXPRSTTS,EXPRPCGC,EXPRPRMK:
                                     EXPRCDTE,EXPRCTIM,EXPRWEBC,EXPRLUPD:
                                     EXPRLUPT,EXPRWEBU
            ELSE
              READ      EXLINUPL,SEQ;EXLNHCPC,EXLNHCPR,EXLNTYPE,EXLNJPDT:
                                     EXLNLPDT,EXLNPRMK,EXLNPRV1,EXLNPRV2:
                                     EXLNPRV3,EXLNPRV4,EXLNPRV5,EXLNSTAT:
                                     EXLNCDTE,EXLNCTIM,EXLNWEBC,EXLNLUPD:
                                     EXLNLUPT,EXLNWEBU
            ENDIF
          ENDIF
          GOTO      UPLD9000 IF OVER
.
          ADD       ONE,RECCOUNT                 * increment records read
          IF        (RECCOUNT%1000) = 0 | RECCOUNT = 1
            IF        COPTION = 1
              DISPLAY   *P14:17,*V2LON,EXGPHCPC:
                        *P14:18,EXGPSNAM;
            ELSE
              IF        COPTION = 2
                DISPLAY   *P14:17,*V2LON,EXPRPRAC:
                          *P14:18,EXPRPNAM;
              ELSE
                DISPLAY   *P14:17,*V2LON,EXLNHCPC:
                          *P14:18,EXLNHCPR;
              ENDIF
            ENDIF
            DISPLAY   *P14:19,RECCOUNT;
          ENDIF
.
          CALL      REPU0000                     * change case
.
          CALL      POUT0000                     * pad out fields with spaces
.
          CALL      CLER0000                     * clear database variables
.
          CALL      MAND0000                     * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      DVAL0000                     * date validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      TVAL0000                     * time validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VNUM0000                     * validate numeric fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      SETV0000                     * set up file variables
.
          CALL      CVAL0000                     * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          PERFORM   COPTION,WHCP0000:            * write pmshcpaf record
                            WPRA0000:            * write pmshcgaf record
                            WLIN0000             * write pmshclaf record
.
          GOTO      UPLD1000                     * get next record
.
UPLD9000  BRANCH    VCHKFLAG,UPLD9100            * validation only
.
.         Upload completed
.
UPLD9100  ASSIGN    (CODCOUNT+DUPCOUNT+DTECOUNT+TIMCOUNT+MANCOUNT+NUMCOUNT),FORM10
          IF        FORM10 > 0
            CALL      LINE0000                   * print bottom line if errors
          ENDIF
.
          COMPARE   CLNO,FIFTY4                  * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:19,*V2LON,RECCOUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",RECCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT
          IF        UPDTFLAG = 0
            PRINT     *1,"Duplicate Records detected            - ",DUPCOUNT
          ELSE
            PRINT     *1,"Records updated                       - ",UPDCOUNT
          ENDIF
          PRINT     *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records with invalid dates detected   - ",DTECOUNT,*N:
                    *1,"Records with invalid times detected   - ",TIMCOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT,*N:
                    *1,"Records with invalid numbers detected - ",NUMCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    COPTION,MAND1000:            * HCP Upload
                            MAND2000:            * Practice Upload
                            MAND3000             * Linked HCP Upload
.
.         HCP's
.
MAND1000  MOVE      EXGPHCPC,TMPSTRNG
          MOVE      "EXGPHCPC",TMPFIELD          * HCP code
          CALL      CHKM0000
.
          MOVE      EXGPSNAM,TMPSTRNG
          MOVE      "EXGPSNAM",TMPFIELD          * Surname
          CALL      CHKM0000
.
          MOVE      EXGPGNM1,TMPSTRNG
          MOVE      "EXGPGNM1",TMPFIELD          * First Given Name
          CALL      CHKM0000
.
          MOVE      EXGPHCST,TMPSTRNG
          MOVE      "EXGPHCST",TMPFIELD          * Status (HCP Type)
          CALL      CHKM0000
.
          MOVE      EXGPSDAT,TMPSTRNG
          MOVE      "EXGPSDAT",TMPFIELD          * Start Date
          CALL      CHKM0000
.
          GOTO      MAND9000
.
.         Practices
.
MAND2000  MOVE      EXPRPRAC,TMPSTRNG
          MOVE      "EXPRPRAC",TMPFIELD          * Practice Code
          CALL      CHKM0000
.
          MOVE      EXPRSPCD,TMPSTRNG
          MOVE      "EXPRSPCD",TMPFIELD          * Senior Partner Code
          CALL      CHKM0000
.
          MOVE      EXPRPNAM,TMPSTRNG
          MOVE      "EXPRPNAM",TMPFIELD          * Practice Name
          CALL      CHKM0000
.
          GOTO      MAND9000
.
.         Linked HCP's
.
MAND3000  MOVE      EXLNHCPC,TMPSTRNG
          MOVE      "EXLNHCPC",TMPFIELD          * HCP Code
          CALL      CHKM0000
.
          MOVE      EXLNHCPR,TMPSTRNG
          MOVE      "EXLNHCPR",TMPFIELD          * Practice Code
          CALL      CHKM0000
.
          MOVE      EXLNJPDT,TMPSTRNG
          MOVE      "EXLNJPDT",TMPFIELD          * Date Joined Practice
          CALL      CHKM0000
.
          MOVE      EXLNPRV1,TMPSTRNG
          MOVE      "EXLNPRV1",TMPFIELD          * Provider Number
          CALL      CHKM0000
.
MAND9000  BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: TMPSTRNG - field to be checked                                  *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     TMPSTRNG,SP70                * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.******************************************************************************
.*                                  CLER0000              Called by: UPLD0000 *
.*                    Clear all the relevant database fields                  *
.******************************************************************************
.
CLER0000  BRANCH    COPTION,CLER1000:            * HCP Upload
                            CLER2000:            * Practice Upload
                            CLER3000             * Linked HCP Upload
.
CLER1000  CALL      CLPMSHCP
          GOTO      CLER9999
.
CLER2000  CALL      CLPMSHCG
          GOTO      CLER9999
.
CLER3000  CALL      CLPMSHCL
.
CLER9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          BRANCH    COPTION,HEAD1000:            * HCP Upload
                            HEAD2000:            * Practice Upload
                            HEAD3000             * Linked HCP Upload
.
HEAD1000  PRINT     *1,"< convhcpc.txt >"
          CALL      LINE0000                     * draw line across page
          PRINT     *1,PIPE,*3,"HCP Code",*14,PIPE,*16,"HCP Name":
                    *59,PIPE,*61,"Error Description",*132,PIPE
          GOTO      HEAD5000
.
HEAD2000  PRINT     *1,"< convhcpp.txt >"
          CALL      LINE0000                     * draw line across page
          PRINT     *1,PIPE,*3,"Practice",*14,PIPE,*16,"Practice Name":
                    *59,PIPE,*61,"Error Description",*132,PIPE
          GOTO      HEAD5000
.
HEAD3000  PRINT     *1,"< convhcpl.txt >"
          CALL      LINE0000                     * draw line across page
          PRINT     *1,PIPE,*3,"HCP",*14,PIPE,*16,"Practice",*29,PIPE:
                    *31,"Provider",*42,PIPE,*44,"Error Description",*132,PIPE
          GOTO      HEAD5000
.
HEAD5000  CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  SETV0000              Called by: UPLD0000 *
.*                       Load the record variables                            *
.******************************************************************************
.
SETV0000  BRANCH    COPTION,SETV1000:            * HCP Upload
                            SETV2000:            * Practice Upload
                            SETV3000             * Linked HCP Upload
.
.         HCP's
.
SETV1000  MOVE      EXGPHCPC,PMHCHCPC            * HCP Code
          IF        HCPCDFLG = 1
            MOVE      EXGPHCPC,KEY10
            CALL      RDTEMP1                    * HCP code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCPCD,PMHCHCPC        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PMHCHCPC,KEY10
          CALL      RAPMHCP1
          IF        OVRCD = 1
            MOVE      ONE,HCPFOUND
          ELSE
            CALL      RDPMHCP1
            MOVE      ZERO,HCPFOUND
          ENDIF
.
          MOVE      EXGPHCPT,PMHCHCPT            * Type of HCP
          MOVE      EXGPTITL,PMHCTITL            * HCP Title
          MOVE      EXGPGNM1,PMHCGNAM            * HCP Given Names
          STRIP     PMHCGNAM
          ENDSET    PMHCGNAM
          APPEND    SP1,PMHCGNAM
          APPEND    EXGPGNM2,PMHCGNAM
          APPEND    SP70,PMHCGNAM
          RESET     PMHCGNAM
          MOVE      EXGPSNAM,PMHCSNAM            * HCP Surname
          MOVE      EXGPINIT,PMHCINIT            * HCP Initials
          MOVE      EXGPGNDR,PMHCGNDR            * HCP Gender
          MOVE      EXGPDTOB,PMHCDTOB            * HCP Date of Birth
.
          MOVE      EXGPSPC1,PMHCSPC1            * HCP Speciality 1
          IF        DTYPEFLG = 1
            MOVE      EXGPSPC1,KEY3
            CALL      RDTEMP3                    * dr type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDTYPE,PMHCSPC1        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPSPD1,PMHCSPD1            * HCP Speciality Date 1
.
          MOVE      EXGPSPC2,PMHCSPC2            * HCP Speciality 2
          IF        DTYPEFLG = 1
            MOVE      EXGPSPC2,KEY3
            CALL      RDTEMP3                    * dr type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDTYPE,PMHCSPC2        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPSPD2,PMHCSPD2            * HCP Speciality Date 2
.
          MOVE      EXGPSPC3,PMHCSPC3            * HCP Speciality 3
          IF        DTYPEFLG = 1
            MOVE      EXGPSPC3,KEY3
            CALL      RDTEMP3                    * dr type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDTYPE,PMHCSPC3        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPSPD3,PMHCSPD3            * HCP Speciality Date 3
.
          MOVE      EXGPSPC4,PMHCSPC4            * HCP Speciality 4
          IF        DTYPEFLG = 1
            MOVE      EXGPSPC4,KEY3
            CALL      RDTEMP3                    * dr type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDTYPE,PMHCSPC4        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPSPD4,PMHCSPD4            * HCP Speciality Date 4
.
          MOVE      EXGPSPC5,PMHCSPC5            * HCP Speciality 5
          IF        DTYPEFLG = 1
            MOVE      EXGPSPC5,KEY3
            CALL      RDTEMP3                    * dr type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDTYPE,PMHCSPC5        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPSPD5,PMHCSPD5            * HCP Speciality Date 5
          MOVE      EXGPRCPT,PMHCRCPT            * HCP Receptionist's Name
          MOVE      EXGPADR1,PMHCADR1            * HCP Surgery Address Line 1
          MOVE      EXGPADR2,PMHCADR2            * HCP Surgery Address Line 2
          MOVE      EXGPADR3,PMHCADR3            * HCP Surgery Address Line 3
          MOVE      EXGPADR4,PMHCADR4            * HCP Surgery Address Line 4
          MOVE      EXGPADR5,PMHCADR5            * HCP Surgery Address Line 5
          MOVE      EXGPADR6,PMHCADR6            * HCP Surgery Address Line 6
          MOVE      EXGPPOST,PMHCPOST            * HCP Surgery PostCode
          MOVE      EXGPSTAT,PMHCSTAT            * HCP State
          MOVE      EXGPSEML,PMHCSEML            * HCP Surgery Email Address
          MOVE      EXGPSTEL,PMHCSTEL            * Surgery Telephone
          MOVE      EXGPPAGR,PMHCPAGR            * HCP Pager Telephone
          MOVE      EXGPPAGN,PMHCPAGN            * HCP Pager Number
          MOVE      EXGPAHP1,PMHCAHP1            * Associated HCP 1
          MOVE      EXGPAHP2,PMHCAHP2            * Associated HCP 2
          MOVE      EXGPAHP3,PMHCAHP3            * Associated HCP 3
          MOVE      EXGPAHP4,PMHCAHP4            * Associated HCP 4
          MOVE      EXGPAHP5,PMHCAHP5            * Associated HCP 5
          MOVE      EXGPPRV1,PMHCPRV1            * Provider Number 1
          MOVE      EXGPPRV2,PMHCPRV2            * Provider Number 2
          MOVE      EXGPPRV3,PMHCPRV3            * Provider Number 3
          MOVE      EXGPPRV4,PMHCPRV4            * Provider Number 4
          MOVE      EXGPPRV5,PMHCPRV5            * Provider Number 5
          MOVE      EXGPHTEL,PMHCHTEL            * HCP Home Telephone
          MOVE      EXGPHAD1,PMHCHAD1            * HCP Home Address Line 1
          MOVE      EXGPHAD2,PMHCHAD2            * HCP Home Address Line 2
          MOVE      EXGPHAD3,PMHCHAD3            * HCP Home Address Line 3
          MOVE      EXGPHAD4,PMHCHAD4            * HCP Home Address Line 4
          MOVE      EXGPHAD5,PMHCHAD5            * HCP Home Address Line 5
          MOVE      EXGPHAD6,PMHCHAD6            * HCP Home Address Line 6
          MOVE      EXGPHPCD,PMHCHPCD            * HCP Home Post Code
          MOVE      EXGPHEML,PMHCHEML            * HCP Home Email Address
          MOVE      EXGPDFAC,PMHCDFAC            * Date of First Accred.
          MOVE      EXGPDLAC,PMHCDLAC            * Date of Last Accred.
          MOVE      EXGPYACC,PMHCYACC            * Years Of Accreditation
.
          MOVE      EXGPATYP,PMHCATYP            * Accreditation Type
          IF        DACCRFLG = 1
            MOVE      EXGPATYP,KEY3
            CALL      RDTEMP4                    * dr accred. type on map file ?
            IF        OVRCD = 0
              MOVE      NEWDACCR,PMHCATYP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPHHCP,PMHCHHCP            * H.C.S. HCP Code
.
          MOVE      EXGPOSLV,PMHCOSLV            * Operating Supervision Level
          IF        DCLASFLG = 1
            MOVE      EXGPOSLV,KEY3
            CALL      RDTEMP5                    * dr class'n code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDCLAS,PMHCOSLV        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPHCST,PMHCHCST            * HCP Status
          MOVE      EXGPHCSD,PMHCHCSD            * HCP Status Date
          MOVE      EXGPFAXN,PMHCFAXN            * HCP's Fax Number
          MOVE      EXGPHFXN,PMHCHFXN            * HCP's Home Fax Number
          MOVE      EXGPMOBN,PMHCMOBN            * HCP's Mobile Phone Number
          MOVE      EXGPCRDC,PMHCCRDC            * Creditor Code
          MOVE      EXGPWAHC,PMHCWAHC            * WA HDP HCP Code
          MOVE      EXGPMRBN,PMHCMRBN            * Medical Registration Board No
          MOVE      EXGPNHSN,PMHCNHSN            * N.H.S. Proscriber Number
.
          MOVE      EXGPUDF1,PMHCUDF1            * User Defined Field 1
          IF        DUDF1FLG = 1
            MOVE      EXGPUDF1,KEY3
            CALL      RDTEMP6                    * UDF 1 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDUDF1,PMHCUDF1        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPUDF2,PMHCUDF2            * User Defined Field 2
          IF        DUDF2FLG = 1
            MOVE      EXGPUDF2,KEY3
            CALL      RDTEMP7                    * UDF 2 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDUDF2,PMHCUDF2        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPUDF3,PMHCUDF3            * User Defined Field 3
          IF        DUDF3FLG = 1
            MOVE      EXGPUDF3,KEY3
            CALL      RDTEMP8                    * UDF 3 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDUDF3,PMHCUDF3        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPUDF4,PMHCUDF4            * User Defined Field 4
          IF        DCONTFLG = 1
            MOVE      EXGPUDF4,KEY3
            CALL      RDTEMP9                    * UDF 4 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDCONT,PMHCUDF4        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPUDF5,PMHCUDF5            * User Defined Field 5
          IF        DNOTFFLG = 1
            MOVE      EXGPUDF5,KEY3
            CALL      RDTEMP10                   * UDF 5 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDNOTF,PMHCUDF5        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPUYN1,PMHCUYN1            * User def. Y/N field 1
          MOVE      EXGPUYN2,PMHCUYN2            * User def. Y/N field 2
          MOVE      EXGPUYN3,PMHCUYN3            * User def. Y/N field 3
          MOVE      EXGPUYN4,PMHCUYN4            * User def. Y/N field 4
          MOVE      EXGPUYN5,PMHCUYN5            * User def. Y/N field 5
.
          MOVE      EXGPINSC,PMHCINSC            * Insurance Code
          IF        DINSRFLG = 1
            MOVE      EXGPINSC,KEY6
            CALL      RDTEMP11                   * insurance code on map file ?
            IF        OVRCD = 0
              MOVE      NEWINSUR,PMHCINSC        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPIPLN,PMHCIPLN            * Insurance Policy Number
          MOVE      EXGPIDTF,PMHCIDTF            * Insurance Date From
          MOVE      EXGPIDTT,PMHCIDTT            * Insurance Date To
          MOVE      EXGPMPGN,PMHCMPGN            * MPG Certificate Number
          MOVE      EXGPAPCI,PMHCAPCI            * APC - NZ
.
          MOVE      EXGPREGT,PMHCREGT            * Registration Type
          IF        REGISFLG = 1
            MOVE      EXGPREGT,KEY3
            CALL      RDTEMP12                   * regist'n type on map file ?
            IF        OVRCD = 0
              MOVE      NEWREGIS,PMHCREGT        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPRGDF,PMHCRGDF            * Reg. Date From
          MOVE      EXGPRGDT,PMHCRGDT            * Reg. Date To
          MOVE      EXGPPRDF,PMHCPRDF            * Probation. Reg. Date From
          MOVE      EXGPPRDT,PMHCPRDT            * Probation. Reg. Date To
          MOVE      EXGPTSDF,PMHCTSDF            * Temp. Start Date From
          MOVE      EXGPTFDT,PMHCTFDT            * Temp. Finish Date To
          MOVE      EXGPVISD,PMHCVISD            * Visa Date
.
          MOVE      EXGPPRFC,PMHCPRFC            * HCP's Preferd Communication
          IF        DPREFFLG = 1
            MOVE      EXGPPRFC,KEY3
            CALL      RDTEMP13                   * pref. comm. on map file ?
            IF        OVRCD = 0
              MOVE      NEWDPREF,PMHCPRFC        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPPRFN,PMHCPRFN            * HCP's Preferred Name
          MOVE      EXGPABNN,PMHCABNN            * ABN Number
          MOVE      EXGPUPDF,PMHCUPDF            * Update Flag
          MOVE      EXGPPRMK,PMHCPRMK            * Processed Record Marker
          MOVE      EXGPSTTS,PMHCSTTS            * HCP rec status
          MOVE      EXGPDLMI,PMHCDLMI            * Date Last Made Inactive
          MOVE      EXGPDLMA,PMHCDLMA            * Date Last Made Active
          MOVE      EXGPCDTE,PMHCCDTE            * Date Record Created
          MOVE      EXGPCTIM,PMHCCTIM            * Time Record Created
          MOVE      EXGPWEBC,PMHCWEBC            * WEB User Id creator
          MOVE      EXGPLUPD,PMHCLUPD            * Last Update Date
          MOVE      EXGPLUPT,PMHCLUPT            * Last Update Time
          MOVE      EXGPWEBU,PMHCWEBU            * WEB User Id updated
          MOVE      EXGPSLGP,PMHCSLGP            * Show Local GP on PMI
          MOVE      EXGPHOSS,PMHCHOSS            * Hospital Specific HCP
.
          MOVE      EXGPPTYP,PMHCPTYP            * Provider Type
          IF        PRTYPFLG = 1
            MOVE      EXGPPTYP,KEY3
            CALL      RDTEMP14                   * provider type on map file ?
            IF        OVRCD = 0
              MOVE      NEWPRTYP,PMHCPTYP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPEXML,PMHCEXML            * Exclude from Mailing List
          MOVE      EXGPDEAC,PMHCDEAC            * Accred. Expiry Date
          MOVE      EXGPCPER,PMHCCPER            * Common Person Number
.
          MOVE      EXGPAHC1,PMHCAHC1            * AH Pref Contact Method 1
          IF        DPREFFLG = 1
            MOVE      EXGPAHC1,KEY3
            CALL      RDTEMP13                   * pref. comm. on map file ?
            IF        OVRCD = 0
              MOVE      NEWDPREF,PMHCAHC1        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPAHC2,PMHCAHC2            * AH Pref Contact Method 2
          IF        DPREFFLG = 1
            MOVE      EXGPAHC2,KEY3
            CALL      RDTEMP13                   * pref. comm. on map file ?
            IF        OVRCD = 0
              MOVE      NEWDPREF,PMHCAHC2        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPAHC3,PMHCAHC3            * AH Pref Contact Method 3
          IF        DPREFFLG = 1
            MOVE      EXGPAHC3,KEY3
            CALL      RDTEMP13                   * pref. comm. on map file ?
            IF        OVRCD = 0
              MOVE      NEWDPREF,PMHCAHC3        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXGPSDAT,PMHCSDAT            * Start Date
.
.         If there is no user id for creation of the record, then
.         default to program name and date/time of upload.
.
          MATCH     SP10,PMHCWEBC
          IF        @EQUAL
            MOVE      "CONVXHCP  ",PMHCWEBC
            MOVE      CURRDATE,PMHCCDTE
            MOVE      CTIMEIS,PMHCCTIM
          ENDIF
.
          GOTO      SETV9999
.
.         Practices
.
SETV2000  MOVE      EXPRPRAC,PMHGPRAC            * HCP Practice Code
          IF        HCGCDFLG = 1
            MOVE      EXPRPRAC,KEY10
            CALL      RDTEMP2                    * HCP practice on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCGCD,PMHGPRAC        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      " 1",PMHGCNTR                * Count
          MOVE      EXPRTYPE,PMHGTYPE            * Type of HCP Practice
.
          MOVE      EXPRSPCD,PMHGSPCD            * Senior Partner HCP Code
          IF        HCPCDFLG = 1
            MOVE      EXPRSPCD,KEY10
            CALL      RDTEMP1                    * HCP code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCPCD,PMHGSPCD        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXPRPNAM,PMHGPNAM            * HCP Practice Name
          MOVE      EXPRADD1,PMHGADD1            * HCP Practice Address 1
          MOVE      EXPRADD2,PMHGADD2            * HCP Practice Address 2
          MOVE      EXPRADD3,PMHGADD3            * HCP Practice Address 3
          MOVE      EXPRADD4,PMHGADD4            * HCP Practice Address 4
          MOVE      EXPRADD5,PMHGADD5            * HCP Practice Address 5
          MOVE      EXPRADD6,PMHGADD6            * HPC Practice Address 6
          MOVE      EXPRPOST,PMHGPOST            * HCP Practice Post Code
          MOVE      EXPRSTAT,PMHGSTAT            * HCP Practice State
          MOVE      EXPRPEML,PMHGPEML            * HCP Practice Email Address
          MOVE      EXPRPTEL,PMHGPTEL            * HCP Practice Telephone Number
          MOVE      EXPRPFAX,PMHGPFAX            * HCP Practice Fax Number
          MOVE      EXPRPSTT,PMHGPSTT            * HCP Practice Status
          MOVE      EXPRPPCN,PMHGPPCN            * HCP Prac. Preferred Contact
          MOVE      EXPRPPNO,PMHGPPNO            * HCP Practice Provider Number
          MOVE      EXPRFMDT,PMHGFMDT            * Formation Date of Practic
          MOVE      EXPRDSDT,PMHGDSDT            * Dissolve Date of Practic
          MOVE      EXPRGPFH,PMHGGPFH            * GP Fundholder Code
          MOVE      EXPRDTFA,PMHGDTFA            * Date GP Fund Holder Amended
          MOVE      EXPRDTFE,PMHGDTFE            * GP Fund Holder End Date
          MOVE      EXPRGPPI,PMHGGPPI            * GPFH Extract GP Prac Inc
          MOVE      EXPRUPFL,PMHGUPFL            * Update Flag
          MOVE      EXPRSTTS,PMHGSTTS            * Status
          MOVE      EXPRPCGC,PMHGPCGC            * Primary Care Group Code
          MOVE      EXPRPRMK,PMHGPRMK            * Processed Record Marker
          MOVE      EXPRCDTE,PMHGCDTE            * Date Record Created
          MOVE      EXPRCTIM,PMHGCTIM            * Time Record Created
          MOVE      EXPRWEBC,PMHGWEBC            * WEB User Id creator
          MOVE      EXPRLUPD,PMHGLUPD            * Date Record Last Updated
          MOVE      EXPRLUPT,PMHGLUPT            * Time Record Last Updated
          MOVE      EXPRWEBU,PMHGWEBU            * WEB User Id updated
.
.         If there is no user id for creation of the record, then
.         default to program name and date/time of upload.
.
          MATCH     SP10,PMHGWEBC
          IF        @EQUAL
            MOVE      "CONVXHCP  ",PMHGWEBC
            MOVE      CURRDATE,PMHGCDTE
            MOVE      CTIMEIS,PMHGCTIM
          ENDIF
.
          GOTO      SETV9999
.
.         Linked HCP's
.
SETV3000  MOVE      EXLNHCPC,PMHLHCPC            * HCP Code
          IF        HCPCDFLG = 1
            MOVE      EXLNHCPC,KEY10
            CALL      RDTEMP1                    * HCP code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCPCD,PMHLHCPC        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXLNHCPR,PMHLHCPR            * HCP Practice
          IF        HCGCDFLG = 1
            MOVE      EXLNHCPR,KEY10
            CALL      RDTEMP2                    * HCP practice on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCGCD,PMHLHCPR        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      EXLNTYPE,PMHLTYPE            * HCP Record Type
          MOVE      EXLNJPDT,PMHLJPDT            * Date HCP Joined Practice
          MOVE      EXLNLPDT,PMHLLPDT            * Date HCP Left Practice
          MOVE      EXLNPRMK,PMHLPRMK            * Processed Rec. Marker
          MOVE      EXLNPRV1,PMHLPRV1            * Provider Number 1
          MOVE      EXLNPRV2,PMHLPRV2            * Provider Number 2
          MOVE      EXLNPRV3,PMHLPRV3            * Provider Number 3
          MOVE      EXLNPRV4,PMHLPRV4            * Provider Number 4
          MOVE      EXLNPRV5,PMHLPRV5            * Provider Number 5
          MOVE      EXLNSTAT,PMHLSTAT            * Status
          MOVE      EXLNCDTE,PMHLCDTE            * Date Record Created
          MOVE      EXLNCTIM,PMHLCTIM            * Time Record Created
          MOVE      EXLNWEBC,PMHLWEBC            * WEB User Id creator
          MOVE      EXLNLUPD,PMHLLUPD            * Last Update Date
          MOVE      EXLNLUPT,PMHLLUPT            * Last Update Time
          MOVE      EXLNWEBU,PMHLWEBU            * WEB user Id updated
.
.         If there is no user id for creation of the record, then
.         default to program name and date/time of upload.
.
          MATCH     SP10,PMHLWEBC
          IF        @EQUAL
            MOVE      "CONVXHCP  ",PMHLWEBC
            MOVE      CURRDATE,PMHLCDTE
            MOVE      CTIMEIS,PMHLCTIM
          ENDIF
.
SETV9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces given that we        *
.*            are dealing with pipe delimited records                        *
.*****************************************************************************
.
POUT0000  BRANCH    COPTION,POUT1000:            * HCP Upload
                            POUT2000:            * Practice Upload
                            POUT3000             * Linked HCP Upload
.
.         HCP's
.
POUT1000  PACK      EXGPHCPC,EXGPHCPC,SP70
          PACK      EXGPHCPT,EXGPHCPT,SP70
          REP       UPPLOW,EXGPHCPT
          PACK      EXGPTITL,EXGPTITL,SP70
          PACK      EXGPGNM1,EXGPGNM1,SP70
          PACK      EXGPGNM2,EXGPGNM2,SP70
          PACK      EXGPSNAM,EXGPSNAM,SP70
          PACK      EXGPINIT,EXGPINIT,SP70
          PACK      EXGPGNDR,EXGPGNDR,SP70
          REP       UPPLOW,EXGPGNDR
          REP       " U",EXGPGNDR
          PACK      EXGPDTOB,EXGPDTOB,SP70
          PACK      EXGPSPC1,EXGPSPC1,SP70
          PACK      EXGPSPD1,EXGPSPD1,SP70
          PACK      EXGPSPC2,EXGPSPC2,SP70
          PACK      EXGPSPD2,EXGPSPD2,SP70
          PACK      EXGPSPC3,EXGPSPC3,SP70
          PACK      EXGPSPD3,EXGPSPD3,SP70
          PACK      EXGPSPC4,EXGPSPC4,SP70
          PACK      EXGPSPD4,EXGPSPD4,SP70
          PACK      EXGPSPC5,EXGPSPC5,SP70
          PACK      EXGPSPD5,EXGPSPD5,SP70
          PACK      EXGPRCPT,EXGPRCPT,SP70
          PACK      EXGPADR1,EXGPADR1,SP70
          PACK      EXGPADR2,EXGPADR2,SP70
          PACK      EXGPADR3,EXGPADR3,SP70
          PACK      EXGPADR4,EXGPADR4,SP70
          PACK      EXGPADR5,EXGPADR5,SP70
          PACK      EXGPADR6,EXGPADR6,SP70
          PACK      EXGPPOST,EXGPPOST,SP70
          PACK      EXGPSTAT,EXGPSTAT,SP70
          PACK      EXGPSEML,EXGPSEML,SP70,SP70
          PACK      EXGPSTEL,EXGPSTEL,SP70
          PACK      EXGPPAGR,EXGPPAGR,SP70
          PACK      EXGPPAGN,EXGPPAGN,SP70
          PACK      EXGPAHP1,EXGPAHP1,SP70
          PACK      EXGPAHP2,EXGPAHP2,SP70
          PACK      EXGPAHP3,EXGPAHP3,SP70
          PACK      EXGPAHP4,EXGPAHP4,SP70
          PACK      EXGPAHP5,EXGPAHP5,SP70
          PACK      EXGPPRV1,EXGPPRV1,SP70
          PACK      EXGPPRV2,EXGPPRV2,SP70
          PACK      EXGPPRV3,EXGPPRV3,SP70
          PACK      EXGPPRV4,EXGPPRV4,SP70
          PACK      EXGPPRV5,EXGPPRV5,SP70
          PACK      EXGPHTEL,EXGPHTEL,SP70
          PACK      EXGPHAD1,EXGPHAD1,SP70
          PACK      EXGPHAD2,EXGPHAD2,SP70
          PACK      EXGPHAD3,EXGPHAD3,SP70
          PACK      EXGPHAD4,EXGPHAD4,SP70
          PACK      EXGPHAD5,EXGPHAD5,SP70
          PACK      EXGPHAD6,EXGPHAD6,SP70
          PACK      EXGPHPCD,EXGPHPCD,SP70
          PACK      EXGPHEML,EXGPHEML,SP70,SP70
          PACK      EXGPDFAC,EXGPDFAC,SP70
          PACK      EXGPDLAC,EXGPDLAC,SP70
          PACK      EXGPYACC,EXGPYACC,SP70
          RJUSTIFY  EXGPYACC
          PACK      EXGPATYP,EXGPATYP,SP70
          PACK      EXGPHHCP,EXGPHHCP,SP70
          RJUSTIFY  EXGPHHCP
          PACK      EXGPOSLV,EXGPOSLV,SP70
          PACK      EXGPHCST,EXGPHCST,SP70
          RJUSTIFY  EXGPHCST
          PACK      EXGPHCSD,EXGPHCSD,SP70
          PACK      EXGPFAXN,EXGPFAXN,SP70
          PACK      EXGPHFXN,EXGPHFXN,SP70
          PACK      EXGPMOBN,EXGPMOBN,SP70
          PACK      EXGPCRDC,EXGPCRDC,SP70
          PACK      EXGPWAHC,EXGPWAHC,SP70
          PACK      EXGPMRBN,EXGPMRBN,SP70
          PACK      EXGPNHSN,EXGPNHSN,SP70
          PACK      EXGPUDF1,EXGPUDF1,SP70
          PACK      EXGPUDF2,EXGPUDF2,SP70
          PACK      EXGPUDF3,EXGPUDF3,SP70
          PACK      EXGPUDF4,EXGPUDF4,SP70
          PACK      EXGPUDF5,EXGPUDF5,SP70
          PACK      EXGPUYN1,EXGPUYN1,SP70
          PACK      EXGPUYN2,EXGPUYN2,SP70
          PACK      EXGPUYN3,EXGPUYN3,SP70
          PACK      EXGPUYN4,EXGPUYN4,SP70
          PACK      EXGPUYN5,EXGPUYN5,SP70
          PACK      EXGPINSC,EXGPINSC,SP70
          PACK      EXGPIPLN,EXGPIPLN,SP70
          PACK      EXGPIDTF,EXGPIDTF,SP70
          PACK      EXGPIDTT,EXGPIDTT,SP70
          PACK      EXGPMPGN,EXGPMPGN,SP70
          PACK      EXGPAPCI,EXGPAPCI,SP70
          PACK      EXGPREGT,EXGPREGT,SP70
          PACK      EXGPRGDF,EXGPRGDF,SP70
          PACK      EXGPRGDT,EXGPRGDT,SP70
          PACK      EXGPPRDF,EXGPPRDF,SP70
          PACK      EXGPPRDT,EXGPPRDT,SP70
          PACK      EXGPTSDF,EXGPTSDF,SP70
          PACK      EXGPTFDT,EXGPTFDT,SP70
          PACK      EXGPVISD,EXGPVISD,SP70
          PACK      EXGPPRFC,EXGPPRFC,SP70
          PACK      EXGPPRFN,EXGPPRFN,SP70
          PACK      EXGPABNN,EXGPABNN,SP70
          PACK      EXGPUPDF,EXGPUPDF,SP70
          REP       UPPLOW,EXGPUPDF
          PACK      EXGPPRMK,EXGPPRMK,SP70
          PACK      EXGPSTTS,EXGPSTTS,SP70
          PACK      EXGPDLMI,EXGPDLMI,SP70
          PACK      EXGPDLMA,EXGPDLMA,SP70
          PACK      EXGPCDTE,EXGPCDTE,SP70
          PACK      EXGPCTIM,EXGPCTIM,SP70
          PACK      EXGPWEBC,EXGPWEBC,SP70
          PACK      EXGPLUPD,EXGPLUPD,SP70
          PACK      EXGPLUPT,EXGPLUPT,SP70
          PACK      EXGPWEBU,EXGPWEBU,SP70
          PACK      EXGPSLGP,EXGPSLGP,SP70
          PACK      EXGPHOSS,EXGPHOSS,SP70
          PACK      EXGPPTYP,EXGPPTYP,SP70
          PACK      EXGPEXML,EXGPEXML,SP70
          PACK      EXGPDEAC,EXGPDEAC,SP70
          PACK      EXGPCPER,EXGPCPER,SP70
          PACK      EXGPAHC1,EXGPAHC1,SP70
          PACK      EXGPAHC2,EXGPAHC2,SP70
          PACK      EXGPAHC3,EXGPAHC3,SP70
          PACK      EXGPSDAT,EXGPSDAT,SP70
          GOTO      POUT9999
.
.         Practices
.
POUT2000  PACK      EXPRPRAC,EXPRPRAC,SP70
          PACK      EXPRTYPE,EXPRTYPE,SP70
          PACK      EXPRSPCD,EXPRSPCD,SP70
          PACK      EXPRPNAM,EXPRPNAM,SP70,SP70
          PACK      EXPRADD1,EXPRADD1,SP70
          PACK      EXPRADD2,EXPRADD2,SP70
          PACK      EXPRADD3,EXPRADD3,SP70
          PACK      EXPRADD4,EXPRADD4,SP70
          PACK      EXPRADD5,EXPRADD5,SP70
          PACK      EXPRADD6,EXPRADD6,SP70
          PACK      EXPRPOST,EXPRPOST,SP70
          PACK      EXPRSTAT,EXPRSTAT,SP70
          PACK      EXPRPEML,EXPRPEML,SP70,SP70
          PACK      EXPRPTEL,EXPRPTEL,SP70
          PACK      EXPRPFAX,EXPRPFAX,SP70
          PACK      EXPRPSTT,EXPRPSTT,SP70
          PACK      EXPRPPCN,EXPRPPCN,SP70
          PACK      EXPRPPNO,EXPRPPNO,SP70
          PACK      EXPRFMDT,EXPRFMDT,SP70
          PACK      EXPRDSDT,EXPRDSDT,SP70
          PACK      EXPRGPFH,EXPRGPFH,SP70
          PACK      EXPRDTFA,EXPRDTFA,SP70
          PACK      EXPRDTFE,EXPRDTFE,SP70
          PACK      EXPRGPPI,EXPRGPPI,SP70
          PACK      EXPRUPFL,EXPRUPFL,SP70
          REP       UPPLOW,EXPRUPFL
          PACK      EXPRSTTS,EXPRSTTS,SP70
          PACK      EXPRPCGC,EXPRPCGC,SP70
          PACK      EXPRPRMK,EXPRPRMK,SP70
          PACK      EXPRCDTE,EXPRCDTE,SP70
          PACK      EXPRCTIM,EXPRCTIM,SP70
          PACK      EXPRWEBC,EXPRWEBC,SP70
          PACK      EXPRLUPD,EXPRLUPD,SP70
          PACK      EXPRLUPT,EXPRLUPT,SP70
          PACK      EXPRWEBU,EXPRWEBU,SP70
          GOTO      POUT9999
.
.         Linked HCP's
.
POUT3000  PACK      EXLNHCPC,EXLNHCPC,SP70
          PACK      EXLNHCPR,EXLNHCPR,SP70
          PACK      EXLNTYPE,EXLNTYPE,SP70
          PACK      EXLNJPDT,EXLNJPDT,SP70
          PACK      EXLNLPDT,EXLNLPDT,SP70
          PACK      EXLNPRMK,EXLNPRMK,SP70
          PACK      EXLNPRV1,EXLNPRV1,SP70
          PACK      EXLNPRV2,EXLNPRV2,SP70
          PACK      EXLNPRV3,EXLNPRV3,SP70
          PACK      EXLNPRV4,EXLNPRV4,SP70
          PACK      EXLNPRV5,EXLNPRV5,SP70
          PACK      EXLNSTAT,EXLNSTAT,SP70
          PACK      EXLNCDTE,EXLNCDTE,SP70
          PACK      EXLNCTIM,EXLNCTIM,SP70
          PACK      EXLNWEBC,EXLNWEBC,SP70
          PACK      EXLNLUPD,EXLNLUPD,SP70
          PACK      EXLNLUPT,EXLNLUPT,SP70
          PACK      EXLNWEBU,EXLNWEBU,SP70
.
POUT9999  RETURN
+
.*****************************************************************************
.*                              DVAL0000           Called by: UPLD0000       *
.*                  Validate all date fields                                 *
.* Returns:  EXIT - 0 = No date validation errors                            *
.*                  1 = Date validation errors                               *
.*          DTECOUNT - updated count of records with date field errors       *
.*****************************************************************************
.
DVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    COPTION,DVAL1000:            * HCP Upload
                            DVAL2000:            * Practice Upload
                            DVAL3000             * Linked HCP Upload
.
.         HCP's
.
DVAL1000  MOVE      EXGPDTOB,TEMPDATE            * DOB
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPDTOB",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPSPD1,TEMPDATE            * Specialty Date 1
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPSPD1",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPSPD2,TEMPDATE            * Specialty Date 2
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPSPD2",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPSPD3,TEMPDATE            * Specialty Date 3
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPSPD3",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPSPD4,TEMPDATE            * Specialty Date 4
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPSPD4",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPSPD5,TEMPDATE            * Specialty Date 5
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPSPD5",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPDFAC,TEMPDATE            * First Accred. Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPDFAC",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPDLAC,TEMPDATE            * Last Accred. Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPDLAC",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,EXGPDLAC                 * blank "to" date ?
          GOTO      DVAL1100 IF EQUAL            * yes
.
          MATCH     EXGPDFAC,EXGPDLAC
          IF        @LESS
            MOVE      "Last Accred. Date less than From Date ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
          ENDIF
.
DVAL1100  MOVE      EXGPHCSD,TEMPDATE            * HCP Status Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPHCSD",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPIDTF,TEMPDATE            * Insurance From Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPIDTF",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPIDTT,TEMPDATE            * Insurance To Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "EXGPIDTT",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,EXGPIDTT                 * blank "to" date ?
          GOTO      DVAL1200 IF EQUAL            * yes
.
          MATCH     EXGPIDTF,EXGPIDTT
          IF        @LESS
            MOVE      "Insurance To Date less than From Date ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
          ENDIF
.
DVAL1200  MOVE      EXGPRGDF,TEMPDATE            * Registration From Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPRGDF",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPRGDT,TEMPDATE            * Registration To Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "EXGPRGDT",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,EXGPRGDT                 * blank "to" date ?
          GOTO      DVAL1300 IF EQUAL            * yes
.
          MATCH     EXGPRGDF,EXGPRGDT
          IF        @LESS
            MOVE      "Registration To Date less than From Date ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
          ENDIF
.
DVAL1300  MOVE      EXGPPRDF,TEMPDATE            * Probation From Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPPRDF",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPPRDT,TEMPDATE            * Probation To Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "EXGPPRDT",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,EXGPPRDT                 * blank "to" date ?
          GOTO      DVAL1400 IF EQUAL            * yes
.
          MATCH     EXGPPRDF,EXGPPRDT
          IF        @LESS
            MOVE      "Probation To Date less than From Date ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
          ENDIF
.
DVAL1400  MOVE      EXGPTSDF,TEMPDATE            * Temp. Start From Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPTSDF",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPTFDT,TEMPDATE            * Temp. Start To Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "EXGPTFDT",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,EXGPTFDT                 * blank "to" date ?
          GOTO      DVAL1500 IF EQUAL            * yes
.
          MATCH     EXGPTSDF,EXGPTFDT
          IF        @LESS
            MOVE      "Temp. Start To Date less than From Date ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
          ENDIF
.
DVAL1500  MOVE      EXGPVISD,TEMPDATE            * Visa Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "EXGPVISD",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPDLMI,TEMPDATE            * Date Last Made Inactive
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPDLMI",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPDLMA,TEMPDATE            * Date Last Made Active
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPDLMA",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPCDTE,TEMPDATE            * Date Record Created
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPCDTE",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPLUPD,TEMPDATE            * Date Record Last Updated
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXGPLUPD",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPDEAC,TEMPDATE            * Accred. Expiry Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "EXGPDEAC",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXGPSDAT,TEMPDATE            * Start Date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "EXGPSDAT",TMPFIELD
          CALL      VDAT0000
.
          GOTO      DVAL9000
.
.         Practices
.
DVAL2000  MOVE      EXPRFMDT,TEMPDATE            * practice formation date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXPRFMDT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXPRDSDT,TEMPDATE            * practice dissolution date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXPRDSDT",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,EXPRDSDT                 * blank "to" date ?
          GOTO      DVAL2100 IF EQUAL            * yes
.
          MATCH     EXPRFMDT,EXPRDSDT
          IF        @LESS
            MOVE      "Dissolution Date less than Formation Date ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
          ENDIF
.
DVAL2100  MOVE      EXPRDTFA,TEMPDATE            * fund holder ammended date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXPRDTFA",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXPRDTFE,TEMPDATE            * fund holder end date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "EXPRDTFE",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,EXPRDTFE                 * blank "to" date ?
          GOTO      DVAL2200 IF EQUAL            * yes
.
          MATCH     EXPRDTFA,EXPRDTFE
          IF        @LESS
            MOVE      "Fund Holder End Date less than Amended Date ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
          ENDIF
.
DVAL2200  MOVE      EXPRCDTE,TEMPDATE            * date record created
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXPRCDTE",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXPRLUPD,TEMPDATE            * date record last updated
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXPRLUPD",TMPFIELD
          CALL      VDAT0000
.
          GOTO      DVAL9000
.
.         Linked HCP's
.
DVAL3000  MOVE      EXLNJPDT,TEMPDATE            * date joined practice
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXLNJPDT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXLNLPDT,TEMPDATE            * date left practice
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXLNLPDT",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,EXLNLPDT                 * blank "to" date ?
          GOTO      DVAL3100 IF EQUAL            * yes
.
          MATCH     EXLNJPDT,EXLNLPDT
          IF        @LESS
            MOVE      "Date Left Practice less than Date Joined",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
          ENDIF
.
DVAL3100  MOVE      EXLNCDTE,TEMPDATE            * date record created
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXLNCDTE",TMPFIELD
          CALL      VDAT0000
.
          MOVE      EXLNLUPD,TEMPDATE            * date record last updated
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "EXLNLUPD",TMPFIELD
          CALL      VDAT0000
.
DVAL9000  BRANCH    ERORFLAG,DVAL9100            * errors on date validation
.
          MOVE      ZERO,EXIT                    * no errors on date validation
          GOTO      DVAL9999
.
DVAL9100  ADD       ONE,DTECOUNT                 * incr. date error record count
          MOVE      ONE,EXIT
.
DVAL9999  RETURN
+
.*****************************************************************************
.*                              VDAT0000           Called by: DVAL0000       *
.*                  Validate a date field                                    *
.* Requires:  TEMPDATE - Date in format ccyymmdd                             *
.*            DATEFLG1 - Date Type flag                                      *
.*                          0 = full date (ccyymmdd)                         *
.*                          1 = partial date (ccyymm)                        *
.*            DATEFLG2 - Dates Allowed flag                                  *
.*                          0 = any date allowed                             *
.*                          1 = no future dates allowed                      *
.*            TMPFIELD - Date field name                                     *
.* Returns:   ERORFLAG = 1 if an error in date validation occurs.            *
.*****************************************************************************
.
VDAT0000  MATCH     SP8,TEMPDATE                 * blank date ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Validate that the date has been fully populated
.
          SQUEEZE   TEMPDATE
          MOVELPTR  TEMPDATE,FORM1
          IF        DATEFLG1 = 0 & FORM1 <> 8 | DATEFLG1 = 1 & FORM1 <> 6
            MOVE      "Insufficient digits ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate that the date is numeric
.
VDAT0100  TYPE      TEMPDATE
          IF        !@EQUAL
            MOVE      "Not numeric ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          UNPACK    TEMPDATE,DIM2C,DIM2Y,DIM2M,DIM2D
.
.         Validate the century is >= 18 and <= current century
.
          MOVE      DIM2C,FORM2
          IF        FORM2 < 18 | FORM2 > CURRCENT
            MOVE      "Century not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate the month
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 1 | FORM2 > 12
            MOVE      "Month not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          COMPARE   ONE,DATEFLG1                 * short date (ccyymm) ?
          GOTO      VDAT9999 IF EQUAL            * yes - finished
.
.         Validate the day is:
.              < 32 for January, March, May, July, August, October & December
.              < 31 for April, June, September & November
.              < 29 for February, except in a leap year where it is < 30
.
          BRANCH    FORM2,VDAT1000:              * Jan
                          VDAT3000:              * Feb
                          VDAT1000:              * Mar
                          VDAT2000:              * Apr
                          VDAT1000:              * May
                          VDAT2000:              * Jun
                          VDAT1000:              * Jul
                          VDAT1000:              * Aug
                          VDAT2000:              * Sep
                          VDAT1000:              * Oct
                          VDAT2000:              * Nov
                          VDAT1000               * Dec
.
.         Validate days for month of 31 days
.
VDAT1000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for month of 30 days
.
VDAT2000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 30
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for February
.         A leap year is one where:
.           1. Every year divisible by 4 is a leap year.
.           2. But every year divisible by 100 is NOT a leap year
.           3. Unless the year is also divisible by 400, then it is still a
.              leap year.
.
VDAT3000  MOVE      DIM2D,FORM2
          PACK      DIM4,DIM2C,DIM2Y
          MOVE      DIM4,FORM4
          IF        (FORM4%4) = 0
            IF        (FORM4%100) = 0
              IF        (FORM4%400) = 0
                GOTO      VDAT3200
              ENDIF
            ELSE
              GOTO      VDAT3200
            ENDIF
          ENDIF
.
.         Check for normal Feb days
.
VDAT3100  IF        FORM2 < 1 | FORM2 > 28
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Check for leap year Feb days
.
VDAT3200  IF        FORM2 < 1 | FORM2 > 29
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
VDAT3900  MOVE      "Day not valid ",ERORDESC
          CALL      DERR0000
          GOTO      VDAT9999
.
VDAT4000  COMPARE   ZERO,DATEFLG2                * any date allowed ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
          BRANCH    DATEFLG2,VDAT5000:           * date cannot be in the future
                             VDAT6000            * date must be in the future
.
.         Make sure the date is not in the future
.
VDAT5000  MATCH     TEMPDATE,CURRDATE
          IF        @LESS
            MOVE      "Cannot be in the future ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
          GOTO      VDAT9999
.
.         Make sure the date is in the future
.
VDAT6000  MATCH     TEMPDATE,CURRDATE
          IF        !@LESS
            MOVE      "Must be in the future ",ERORDESC
            CALL      DERR0000
          ENDIF
.
VDAT9999  RETURN
+
.*****************************************************************************
.*                            DERR0000             Called by: VDAT0000       *
.*                    Process date error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:  ERORFLAG = 1 if an error in date validation occurs.             *
.*****************************************************************************
.
DERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set date error flag
.
DERR9999  RETURN
+
.*****************************************************************************
.*                              TVAL0000           Called by: UPLD0000       *
.*                  Validate all time fields                                 *
.* Returns:  EXIT - 0 = No time validation errors                            *
.*                  1 = Time validation errors                               *
.*          TIMCOUNT - updated count of records with time field errors       *
.*****************************************************************************
.
TVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.         
          BRANCH    COPTION,TVAL1000:            * HCP Upload
                            TVAL2000:            * Practice Upload
                            TVAL3000             * Linked HCP Upload
.
.         HCP's
.
TVAL1000  MOVE      EXGPCDTE,TEMPDATE
          MOVE      EXGPCTIM,TEMPTIME            * record create time
          MOVE      "EXGPCTIM",TMPFIELD
          CALL      VTIM0000
.
          MOVE      EXGPLUPD,TEMPDATE
          MOVE      EXGPLUPT,TEMPTIME            * record update time
          MOVE      "EXGPLUPT",TMPFIELD
          CALL      VTIM0000
.
          GOTO      TVAL9000
.
.         Practices
.
TVAL2000  MOVE      EXPRCDTE,TEMPDATE
          MOVE      EXPRCTIM,TEMPTIME            * record create time
          MOVE      "EXPRCTIM",TMPFIELD
          CALL      VTIM0000
.
          MOVE      EXPRLUPD,TEMPDATE
          MOVE      EXPRLUPT,TEMPTIME            * record update time
          MOVE      "EXPRLUPT",TMPFIELD
          CALL      VTIM0000
.
          GOTO      TVAL9000
.
.         Linked HCP's
.
TVAL3000  MOVE      EXLNCDTE,TEMPDATE
          MOVE      EXLNCTIM,TEMPTIME            * record create time
          MOVE      "EXLNCTIM",TMPFIELD
          CALL      VTIM0000
.
          MOVE      EXLNLUPD,TEMPDATE
          MOVE      EXLNLUPT,TEMPTIME            * record update time
          MOVE      "EXLNLUPT",TMPFIELD
          CALL      VTIM0000
.
TVAL9000  BRANCH    ERORFLAG,TVAL9100            * errors on time validation
.
          MOVE      ZERO,EXIT                    * no errors on time validation
          GOTO      TVAL9999
.
TVAL9100  ADD       ONE,TIMCOUNT                 * incr. time error record count
          MOVE      ONE,EXIT
.
TVAL9999  RETURN
+
.*****************************************************************************
.*                            VTIM0000             Called by: TVAL0000       *
.*                    Validate time fields                                   *
.* Requires:  TEMPTIME - Time in format hh:mm:ss                             *
.*            TEMPDATE - Date in format ccyymmdd                             *
.*            TMPFIELD - Time field name                                     *
.* Returns:   ERORFLAG = 1 if an error in time validation occurs.            *
.*****************************************************************************
.
VTIM0000  MATCH     SP8,TEMPTIME                 * blank time ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     SP8,TEMPDATE                 * blank date ?
          IF        @EQUAL
            MOVE      "Time without corresponding date ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          UNPACK    TEMPTIME,DIM2H,DIM1A,DIM2M,DIM1B,DIM2S    * (hh:mm:ss)
.
.         Make sure colon's separate the hours, minutes and seconds
.
          MATCH     DIM1A,DIM1B
          GOTO      VTIM1000 IF NOT EQUAL
.
          MATCH     COLON,DIM1A
          GOTO      VTIM1000 IF NOT EQUAL
.
          GOTO      VTIM2000
.
VTIM1000  MOVE      "Format not valid ",ERORDESC
          CALL      TERR0000
          GOTO      VTIM9999
.
.         Validate the hour
.
VTIM2000  MOVE      DIM2H,FORM2
          IF        FORM2 < 0 | FORM2 > 23
            MOVE      "Hour not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the minute
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Minutes not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the second
.
          MOVE      DIM2S,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Seconds not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          MATCH     SP8,TEMPDATE                 * date blank ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
.         Make sure that the transaction time is not in the future
.
          MATCH     TEMPDATE,CURRDATE
          IF        @EQUAL
            MATCH     TEMPTIME,CTIMEIS
            IF        @LESS
              MOVE      "Time in the future ",ERORDESC
              CALL      TERR0000
            ENDIF
          ENDIF
.
VTIM9999  RETURN
+
.*****************************************************************************
.*                            TERR0000             Called by: VTIM0000       *
.*                    Process time error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:  ERORFLAG = 1 if an error in time validation occurs.             *
.*****************************************************************************
.
TERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set time error flag
.
TERR9999  RETURN
+
.*****************************************************************************
.*                            VNUM0000             Called by: UPLD0000       *
.*                    Validate numeric fields                                *
.* Returns:  EXIT - 0 = No numeric validation errors                         *
.*                  1 = Numeric validation errors                            *
.*          NUMCOUNT - updated count of records with numeric field errors    *
.*****************************************************************************
.
VNUM0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.         
          BRANCH    COPTION,VNUM1000:            * HCP Upload
                            VNUM2000:            * Practice Upload
                            VNUM3000             * Linked HCP Upload
.
.         HCP's.
.         HCP Status numeric field (valid values 0 - 15)
.
VNUM1000  REP       " 0",EXGPHCST
.
          TYPE      EXGPHCST                     * Status numeric ?
          GOTO      VNUM1010 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM2
          MOVE      EXGPHCST,FORM2
          COMPARE   FORM2,TEN5                   * status 0 - 15 ?
          GOTO      VNUM1010 IF LESS             * no - error
          GOTO      VNUM1020                     * yes - valid value
.
VNUM1010  MOVE      "EXGPHCST",TMPFIELD
          CALL      NERR0000
.
.         User Defined Field 1 numeric field (valid values 0 or 1)
.
VNUM1020  REP       " 0",EXGPUYN1
.
          TYPE      EXGPUYN1                     * UDF1 numeric ?
          GOTO      VNUM1025 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXGPUYN1,FORM1
          COMPARE   FORM1,ONE                    * UDF1 0 or 1 ?
          GOTO      VNUM1025 IF LESS             * no - error
          GOTO      VNUM1030                     * yes - valid value
.
VNUM1025  MOVE      "EXGPUYN1",TMPFIELD
          CALL      NERR0000
.
.         User Defined Field 2 numeric field (valid values 0 or 1)
.
VNUM1030  REP       " 0",EXGPUYN2
.
          TYPE      EXGPUYN2                     * UDF2 numeric ?
          GOTO      VNUM1035 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXGPUYN2,FORM1
          COMPARE   FORM1,ONE                    * UDF2 0 or 1 ?
          GOTO      VNUM1035 IF LESS             * no - error
          GOTO      VNUM1040                     * yes - valid value
.
VNUM1035  MOVE      "EXGPUYN2",TMPFIELD
          CALL      NERR0000
.
.         User Defined Field 3 numeric field (valid values 0 or 1)
.
VNUM1040  REP       " 0",EXGPUYN3
.
          TYPE      EXGPUYN3                     * UDF3 numeric ?
          GOTO      VNUM1045 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXGPUYN3,FORM1
          COMPARE   FORM1,ONE                    * UDF3 0 or 1 ?
          GOTO      VNUM1045 IF LESS             * no - error
          GOTO      VNUM1050                     * yes - valid value
.
VNUM1045  MOVE      "EXGPUYN3",TMPFIELD
          CALL      NERR0000
.
.         User Defined Field 4 numeric field (valid values 0 or 1)
.
VNUM1050  REP       " 0",EXGPUYN4
.
          TYPE      EXGPUYN4                     * UDF4 numeric ?
          GOTO      VNUM1055 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXGPUYN4,FORM1
          COMPARE   FORM1,ONE                    * UDF4 0 or 1 ?
          GOTO      VNUM1055 IF LESS             * no - error
          GOTO      VNUM1060                     * yes - valid value
.
VNUM1055  MOVE      "EXGPUYN4",TMPFIELD
          CALL      NERR0000
.
.         User Defined Field 5 numeric field (valid values 0 or 1)
.
VNUM1060  REP       " 0",EXGPUYN5
.
          TYPE      EXGPUYN5                     * UDF5 numeric ?
          GOTO      VNUM1065 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXGPUYN5,FORM1
          COMPARE   FORM1,ONE                    * UDF5 0 or 1 ?
          GOTO      VNUM1065 IF LESS             * no - error
          GOTO      VNUM1070                     * yes - valid value
.
VNUM1065  MOVE      "EXGPUYN5",TMPFIELD
          CALL      NERR0000
.
.         APC numeric field (valid values 0 or 1)
.
VNUM1070  REP       " 0",EXGPAPCI
.
          TYPE      EXGPAPCI                     * APC numeric ?
          GOTO      VNUM1075 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXGPAPCI,FORM1
          COMPARE   FORM1,ONE                    * APC 0 or 1 ?
          GOTO      VNUM1075 IF LESS             * no - error
          GOTO      VNUM1080                     * yes - valid value
.
VNUM1075  MOVE      "EXGPAPCI",TMPFIELD
          CALL      NERR0000
.
.         Processed Record Marker numeric field (valid values 0 and 1)
.
VNUM1080  REP       " 0",EXGPPRMK
.
          TYPE      EXGPPRMK                     * marker numeric ?
          GOTO      VNUM1085 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXGPPRMK,FORM1
          COMPARE   FORM1,ONE                    * marker 0 or 1 ?
          GOTO      VNUM1085 IF LESS             * no - error
          GOTO      VNUM1090                     * yes - valid value
.
VNUM1085  MOVE      "EXGPPRMK",TMPFIELD
          CALL      NERR0000
.
.         Status numeric field (valid values 0 and 1)
.
VNUM1090  REP       " 0",EXGPSTTS
.
          TYPE      EXGPSTTS                     * status numeric ?
          GOTO      VNUM1095 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXGPSTTS,FORM1
          COMPARE   FORM1,ONE                    * status 0 or 1 ?
          GOTO      VNUM1095 IF LESS             * no - error
          GOTO      VNUM1100                     * yes - valid value
.
VNUM1095  MOVE      "EXGPSTTS",TMPFIELD
          CALL      NERR0000
.
.         Show Local GP on PMI numeric field (valid values 0 and 1)
.
VNUM1100  REP       " 0",EXGPSLGP
.
          TYPE      EXGPSLGP                     * show local gp numeric ?
          GOTO      VNUM1105 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXGPSLGP,FORM1
          COMPARE   FORM1,ONE                    * show local gp 0 or 1 ?
          GOTO      VNUM1105 IF LESS             * no - error
          GOTO      VNUM1110                     * yes - valid value
.
VNUM1105  MOVE      "EXGPSLGP",TMPFIELD
          CALL      NERR0000
.
.         Hospital Specific numeric field (valid values 0 and 1)
.
VNUM1110  REP       " 0",EXGPHOSS
.
          TYPE      EXGPHOSS                     * hospital specific numeric ?
          GOTO      VNUM1115 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXGPHOSS,FORM1
          COMPARE   FORM1,ONE                    * hospital specific 0 or 1 ?
          GOTO      VNUM1115 IF LESS             * no - error
          GOTO      VNUM1120                     * yes - valid value
.
VNUM1115  MOVE      "EXGPHOSS",TMPFIELD
          CALL      NERR0000
.
.         Exclude from Mailing List numeric field (valid values 0 and 1)
.
VNUM1120  REP       " 0",EXGPEXML
.
          TYPE      EXGPEXML                     * Exc. from M/L numeric ?
          GOTO      VNUM1125 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXGPEXML,FORM1
          COMPARE   FORM1,ONE                    * Exc. from M/L 0 or 1 ?
          GOTO      VNUM1125 IF LESS             * no - error
          GOTO      VNUM1130                     * yes - valid value
.
VNUM1125  MOVE      "EXGPEXML",TMPFIELD
          CALL      NERR0000
.
.         Years of Accreditation numeric field
.
VNUM1130  REP       " 0",EXGPYACC
.
          TYPE      EXGPYACC                     * Years Accred. numeric ?
          GOTO      VNUM1135 IF NOT EQUAL        * no - error
          GOTO      VNUM1140                     * yes - valid value
.
VNUM1135  MOVE      "EXGPYACC",TMPFIELD
          CALL      NERR0000
.
.         HCS HCP code numeric field
.
VNUM1140  REP       " 0",EXGPHHCP
.
          TYPE      EXGPHHCP                     * HCS HCP code numeric ?
          GOTO      VNUM1145 IF NOT EQUAL        * no - error
          GOTO      VNUM9000                     * yes - valid value
.
VNUM1145  MOVE      "EXGPHHCP",TMPFIELD
          CALL      NERR0000
.
          GOTO      VNUM9000
.
.         Practices.
.         Extract GP Practice Include numeric field (valid values 0 and 1)
.
VNUM2000  REP       " 0",EXPRGPPI
.
          TYPE      EXPRGPPI                     * Extract include numeric ?
          GOTO      VNUM2050 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXPRGPPI,FORM1
          COMPARE   FORM1,ONE                    * marker 0 or 1 ?
          GOTO      VNUM2050 IF LESS             * no - error
          GOTO      VNUM2100                     * yes - valid value
.
VNUM2050  MOVE      "EXPRGPPI",TMPFIELD
          CALL      NERR0000
.
.         Status numeric field (valid values 0 and 1)
.
VNUM2100  REP       " 0",EXPRSTTS
.
          TYPE      EXPRSTTS                     * status numeric ?
          GOTO      VNUM2150 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXPRSTTS,FORM1
          COMPARE   FORM1,ONE                    * status 0 or 1 ?
          GOTO      VNUM2150 IF LESS             * no - error
          GOTO      VNUM2200                     * yes - valid value
.
VNUM2150  MOVE      "EXPRSTTS",TMPFIELD
          CALL      NERR0000
.
.         Processed Record Marker numeric field (valid values 0 and 1)
.
VNUM2200  REP       " 0",EXPRPRMK
.
          TYPE      EXPRPRMK                     * marker numeric ?
          GOTO      VNUM2250 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXPRPRMK,FORM1
          COMPARE   FORM1,ONE                    * marker 0 or 1 ?
          GOTO      VNUM2250 IF LESS             * no - error
          GOTO      VNUM9000                     * yes - valid value
.
VNUM2250  MOVE      "EXPRPRMK",TMPFIELD
          CALL      NERR0000
.
          GOTO      VNUM9000
.
.         Linked HCP's.
.         Processed Record Marker numeric field (valid values 0 and 1)
.
VNUM3000  REP       " 0",EXLNPRMK
.
          TYPE      EXLNPRMK                     * marker numeric ?
          GOTO      VNUM3050 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXLNPRMK,FORM1
          COMPARE   FORM1,ONE                    * marker 0 or 1 ?
          GOTO      VNUM3050 IF LESS             * no - error
          GOTO      VNUM3100                     * yes - valid value
.
VNUM3050  MOVE      "EXLNPRMK",TMPFIELD
          CALL      NERR0000
.
.         Status numeric field (valid values 0 and 1)
.
VNUM3100  REP       " 0",EXLNSTAT
.
          TYPE      EXLNSTAT                     * status numeric ?
          GOTO      VNUM3150 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      EXLNSTAT,FORM1
          COMPARE   FORM1,ONE                    * status 0 or 1 ?
          GOTO      VNUM3150 IF LESS             * no - error
          GOTO      VNUM9000                     * yes - valid value
.
VNUM3150  MOVE      "EXLNSTAT",TMPFIELD
          CALL      NERR0000
.
VNUM9000  BRANCH    ERORFLAG,VNUM9100            * errors on number validation
.
          MOVE      ZERO,EXIT                    * no errors on no. validation
          GOTO      VNUM9999
.
VNUM9100  ADD       ONE,NUMCOUNT                 * incr. num. error record count
          MOVE      ONE,EXIT
.
VNUM9999  RETURN
+
.*****************************************************************************
.*                            NERR0000             Called by: VNUM0000       *
.*                    Process number error                                   *
.* Requires: TMPFIELD - field name                                           *
.* Returns:  ERORFLAG = 1 if an error in number validation occurs.           *
.*****************************************************************************
.
NERR0000  MOVE      "Invalid numeric field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set number error flag
.
NERR9999  RETURN
+
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields.                   *
.*        This validation is performed on the database fields just prior     *
.*        to writing the data and after any mappings have been performed.    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    COPTION,CVAL1000:            * HCP Upload
                            CVAL2000:            * Practice Upload
                            CVAL3000             * Linked HCP Upload
.
.         HCP's
.
CVAL1000  MATCH     SP1,EXGPHCPT                 * blank code ?
          GOTO      CVAL1010 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMHCHCPT,SP10       * type of hcp
          MOVE      "EXGPHCPT",TMPFIELD
          MOVE      FIVE,TEMPTYPE                * gp/dental
          CALL      VCOD0000
.
CVAL1010  MATCH     SP1,EXGPGNDR                 * blank code ?
          GOTO      CVAL1030 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMHCGNDR,SP10
          MOVE      "EXGPGNDR",TMPFIELD
          MOVE      SIX,TEMPTYPE                 * gender
          CALL      VCOD0000
.
CVAL1030  MATCH     SP3,EXGPSPC1                 * blank code ?
          GOTO      CVAL1040 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANST
          PACK      TEMPCODE,PMHCSPC1,SP10
          MOVE      "EXGPSPC1",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Specialty 1)
          CALL      VCOD0000
.
CVAL1040  MATCH     SP3,EXGPSPC2                 * blank code ?
          GOTO      CVAL1050 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANST
          PACK      TEMPCODE,PMHCSPC2,SP10
          MOVE      "EXGPSPC2",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Specialty 2)
          CALL      VCOD0000
.
CVAL1050  MATCH     SP3,EXGPSPC3                 * blank code ?
          GOTO      CVAL1060 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANST
          PACK      TEMPCODE,PMHCSPC3,SP10
          MOVE      "EXGPSPC3",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Specialty 3)
          CALL      VCOD0000
.
CVAL1060  MATCH     SP3,EXGPSPC4                 * blank code ?
          GOTO      CVAL1070 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANST
          PACK      TEMPCODE,PMHCSPC4,SP10
          MOVE      "EXGPSPC4",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Specialty 4)
          CALL      VCOD0000
.
CVAL1070  MATCH     SP3,EXGPSPC5                 * blank code ?
          GOTO      CVAL1080 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANST
          PACK      TEMPCODE,PMHCSPC5,SP10
          MOVE      "EXGPSPC5",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Specialty 5)
          CALL      VCOD0000
.
CVAL1080  MATCH     SP3,EXGPATYP                 * blank code ?
          GOTO      CVAL1090 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSA,ANST
          PACK      TEMPCODE,PMHCATYP,SP10
          MOVE      "EXGPATYP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Accred. Type)
          CALL      VCOD0000
.
CVAL1090  MATCH     SP3,EXGPOSLV                 * blank code ?
          GOTO      CVAL1100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANSL
          PACK      TEMPCODE,PMHCOSLV,SP10
          MOVE      "EXGPOSLV",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Op. Sup. Level)
          CALL      VCOD0000
.
CVAL1100  MATCH     SP5,EXGPCRDC                 * blank code ?
          GOTO      CVAL1110 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMHCCRDC,SP10
          MOVE      "EXGPCRDC",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * apsmasaf (creditor)
          CALL      VCOD0000
.
CVAL1110  MATCH     SP3,EXGPUDF1                 * blank code ?
          GOTO      CVAL1120 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,FIVE
          PACK      TEMPCODE,PMHCUDF1,SP10
          MOVE      "EXGPUDF1",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 1)
          CALL      VCOD0000
.
CVAL1120  MATCH     SP3,EXGPUDF2                 * blank code ?
          GOTO      CVAL1130 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,SIX
          PACK      TEMPCODE,PMHCUDF2,SP10
          MOVE      "EXGPUDF2",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 2)
          CALL      VCOD0000
.
CVAL1130  MATCH     SP3,EXGPUDF3                 * blank code ?
          GOTO      CVAL1140 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,SEVEN
          PACK      TEMPCODE,PMHCUDF3,SP10
          MOVE      "EXGPUDF3",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 3)
          CALL      VCOD0000
.
CVAL1140  MATCH     SP3,EXGPUDF4                 * blank code ?
          GOTO      CVAL1150 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,EIGHT
          PACK      TEMPCODE,PMHCUDF4,SP10
          MOVE      "EXGPUDF4",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 4)
          CALL      VCOD0000
.
CVAL1150  MATCH     SP3,EXGPUDF5                 * blank code ?
          GOTO      CVAL1160 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,NINE
          PACK      TEMPCODE,PMHCUDF5,SP10
          MOVE      "EXGPUDF5",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 5)
          CALL      VCOD0000
.
CVAL1160  MATCH     SP3,EXGPINSC                 * blank code ?
          GOTO      CVAL1170 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMHCINSC,SP10
          MOVE      "EXGPINSC",TMPFIELD
          MOVE      EIGHT,TEMPTYPE               * patin1af (insurance)
          CALL      VCOD0000
.
CVAL1170  MATCH     SP3,EXGPREGT                 * blank code ?
          GOTO      CVAL1180 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSH,ANSR
          PACK      TEMPCODE,PMHCREGT,SP10
          MOVE      "EXGPREGT",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (registration type)
          CALL      VCOD0000
.
CVAL1180  MATCH     SP3,EXGPPRFC                 * blank code ?
          GOTO      CVAL1190 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSZ
          PACK      TEMPCODE,PMHCPRFC,SP10
          MOVE      "EXGPPRFC",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (pref. comm.)
          CALL      VCOD0000
.
CVAL1190  MATCH     SP1,EXGPUPDF                 * blank code ?
          GOTO      CVAL1200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMHCUPDF,SP10       * update flag
          MOVE      "EXGPUPDF",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * manual/auto
          CALL      VCOD0000
.
CVAL1200  MATCH     SP3,EXGPPTYP                 * blank code ?
          GOTO      CVAL1210 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATPT
          PACK      TEMPCODE,PMHCPTYP,SP10
          MOVE      "EXGPPTYP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (prov. type)
          CALL      VCOD0000
.
CVAL1210  MATCH     SP3,EXGPAHC1                 * blank code ?
          GOTO      CVAL1220 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSZ
          PACK      TEMPCODE,PMHCAHC1,SP10
          MOVE      "EXGPAHC1",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (pref. contact 1)
          CALL      VCOD0000
.
CVAL1220  MATCH     SP3,EXGPAHC2                 * blank code ?
          GOTO      CVAL1230 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSZ
          PACK      TEMPCODE,PMHCAHC2,SP10
          MOVE      "EXGPAHC2",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (pref. contact 2)
          CALL      VCOD0000
.
CVAL1230  MATCH     SP3,EXGPAHC3                 * blank code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSZ
          PACK      TEMPCODE,PMHCAHC3,SP10
          MOVE      "EXGPAHC3",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (pref. contact 3)
          CALL      VCOD0000
.
          GOTO      CVAL9000
.
.         Practices
.
CVAL2000  MATCH     SP10,EXPRSPCD                * blank code ?
          GOTO      CVAL2010 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMHGSPCD,SP10       * senior partner code
          MOVE      "EXPRSPCD",TMPFIELD
          MOVE      TWO,TEMPTYPE                 * pmshcpaf (hcp's)
          CALL      VCOD0000
.
CVAL2010  MATCH     SP1,EXPRUPFL                 * blank code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMHGUPFL,SP10       * update flag
          MOVE      "EXPRUPFL",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * Manual/Auto
          CALL      VCOD0000
.
          GOTO      CVAL9000
.
.         Linked HCP's
.
CVAL3000  MATCH     SP10,EXLNHCPC                * blank code ?
          GOTO      CVAL3010 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMHLHCPC,SP10       * HCP code
          MOVE      "EXLNHCPC",TMPFIELD
          MOVE      TWO,TEMPTYPE                 * pmshcpaf (hcp's)
          CALL      VCOD0000
.
CVAL3010  MATCH     SP10,EXLNHCPR                * blank code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMHLHCPR,SP10       * Practice code
          MOVE      "EXLNHCPR",TMPFIELD
          MOVE      THREE,TEMPTYPE               * pmshcgaf (practices)
          CALL      VCOD0000
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100            * errors on code validation
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCATG - temporary category variable                          *
.*           TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.* Returns:  ERORFLAG = 1 if an error in code validation occurs.             *
.*****************************************************************************
.
VCOD0000  BRANCH    TEMPTYPE,VCOD1000:           * patcodes (category-codes)
                             VCOD2000:           * pmshcpaf (hcp's)
                             VCOD3000:           * pmshcgaf (practices)
                             VCOD4000:           * M/A (manual/auto)
                             VCOD5000:           * G/D (gp/dentist)
                             VCOD6000:           * gender
                             VCOD7000:           * apsmasaf (creditors)
                             VCOD8000            * patin1af (insurance)
.
.         Validate a category-coded field (patcodes)
.
VCOD1000  PACK      KEY5,TEMPCATG,TEMPCODE
          CALL      RDCODE1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a hcp field (pmshcpaf)
.         
VCOD2000  MOVE      TEMPCODE,KEY10
          CALL      RDPMHCP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a practice field (pmshcgaf)
.         
VCOD3000  PACK      KEY12,TEMPCODE,SP1,ONE
          CALL      RDPMHCG1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a M/A (Manual/Auto) field
.
VCOD4000  MATCH     ANSM,TEMPCODE                * "M" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
.
          MATCH     ANSA,TEMPCODE                * "A" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
          GOTO      VCOD9100                     * no - invalid code
.
.         Validate a G/D (GP/Dental) field
.
VCOD5000  MATCH     ANSG,TEMPCODE                * "G" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
.
          MATCH     ANSD,TEMPCODE                * "D" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
          GOTO      VCOD9100                     * no - invalid code
.
.         Validate a Gender field
.
VCOD6000  MATCH     ANSM,TEMPCODE                * "M" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
.
          MATCH     ANSF,TEMPCODE                * "F" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
.
          MATCH     ANSU,TEMPCODE                * "U" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
          GOTO      VCOD9100                     * no - invalid code
.
.         Validate a creditor (apsmasaf)
.
VCOD7000  MOVE      TEMPCODE,KEY5
          CALL      RDAPMA1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an insurance code field (patin1af)
.
VCOD8000  PACK      KEY6,TEMPCODE,SP6
          CALL      RDINSR1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
          MOVE      ONE,ERORFLAG                 * set code error flag
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: UPLD0000       *
.*                   Print an error detail line               CHKM0000       *
.* Requires: Valid read on PMI records (for name fields)      DERR0000       *
.*           ERORDESC - error description                     TERR0000       *
.*           CLNO - current page line count                   NERR0000       *
.* Returns:  CLNO - updated page line count                   VCOD0000       *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          BRANCH    COPTION,PERR1000:            * HCP Upload
                            PERR2000:            * Practice Upload
                            PERR3000             * Linked HCP Upload
.
PERR1000  MOVE      EXGPSNAM,PACSNAME            * format hcp name
          MOVE      EXGPGNM1,PACGNAME
          STRIP     PACGNAME
          ENDSET    PACGNAME
          APPEND    SP1,PACGNAME
          APPEND    EXGPGNM2,PACGNAME
          APPEND    SP70,PACGNAME
          RESET     PACGNAME
          MOVE      EXGPTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DIM42
.
          PRINT     *1,PIPE,*3,EXGPHCPC,*14,PIPE,*16,DIM42,*59,PIPE:
                    *61,ERORDESC,*132,PIPE
          GOTO      PERR8000
.
PERR2000  MOVE      EXPRPNAM,DIM42
          PRINT     *1,PIPE,*3,EXPRPRAC,*14,PIPE,*16,DIM42,*59,PIPE:
                    *61,ERORDESC,*132,PIPE
          GOTO      PERR8000
.
PERR3000  PRINT     *1,PIPE,*3,EXLNHCPC,*14,PIPE,*16,EXLNHCPR,*29,PIPE:
                    *31,EXLNPRV1,*42,PIPE,*44,ERORDESC,*132,PIPE
.
PERR8000  ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
.*****************************************************************************
.*                                 REPU0000        Called by: UPLD0000       *
.*                     Change case on certain name & address fields          *
.* Requires:   Valid read on upload record                                   *
.*****************************************************************************
.
REPU0000  BRANCH    COPTION,REPU1000:            * HCP Upload
                            REPU2000:            * Practice upload
                            REPU9999             * Linked HCP upload
.
REPU1000  REP       UPPLOW,EXGPGNM1
          REP       UPPLOW,EXGPGNM2
          REP       UPPLOW,EXGPSNAM
          REP       UPPLOW,EXGPADR1
          REP       UPPLOW,EXGPADR2
          REP       UPPLOW,EXGPADR3
          REP       UPPLOW,EXGPADR4
          REP       UPPLOW,EXGPADR5
          REP       UPPLOW,EXGPADR6
          REP       UPPLOW,EXGPSTAT
          REP       UPPLOW,EXGPHAD1
          REP       UPPLOW,EXGPHAD2
          REP       UPPLOW,EXGPHAD3
          REP       UPPLOW,EXGPHAD4
          REP       UPPLOW,EXGPHAD5
          REP       UPPLOW,EXGPHAD6
          GOTO      REPU9999
.
REPU2000  REP       UPPLOW,EXPRADD1
          REP       UPPLOW,EXPRADD2
          REP       UPPLOW,EXPRADD3
          REP       UPPLOW,EXPRADD4
          REP       UPPLOW,EXPRADD5
          REP       UPPLOW,EXPRADD6
          REP       UPPLOW,EXPRSTAT
          GOTO      REPU9999
.
REPU9999  RETURN
+
.*****************************************************************************
.*                                 WHCP0000        Called by: UPLD0000       *
.*                 Write a HCP record to pmshcpaf                            *
.* Requires:  loaded pmshcpaf database variables                             *
.*            HCPFOUND - record found flag for HCP                           *
.* Returns:   ADDCOUNT - updated count for records added                     *
.*            DUPCOUNT - updated count for duplicate records                 *
.*            UPDCOUNT - updated record count                                *
.*****************************************************************************
.
WHCP0000  BRANCH    HCPFOUND,WHCP5000            * doctor not on file
.
.         HCP already exists, so check if update allowed
.
          IF        UPDTFLAG = 0
            MOVE      "HCP record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ELSE
            BRANCH    VCHKFLAG,WHCP9999          * error checking only
            CALL      UPPMHCP1                   * update existing record
            PROC      PMSHKIUP                   * doctor keyword index
            ADD       ONE,UPDCOUNT               * increment upd. record count
          ENDIF
          GOTO      WHCP9999
.
.         Add new HCP record
.
WHCP5000  BRANCH    VCHKFLAG,WHCP9999            * error checking only
          CALL      WRPMHCP1                     * write new record
          PROC      PMSHKIUP                     * doctor keyword index
          ADD       ONE,ADDCOUNT                 * increment added record count
.
WHCP9999  RETURN
+
.*****************************************************************************
.*                                 WPRA0000        Called by: UPLD0000       *
.*                 Write a Practice record to pmshcgaf                       *
.* Requires:  loaded pmshcgaf database variables                             *
.* Returns:   ADDCOUNT - updated count for records added                     *
.*            DUPCOUNT - updated count for duplicate records                 *
.*****************************************************************************
.
WPRA0000  PACK      KEY12,PMHGPRAC,PMHGCNTR
          CALL      RAPMHCG1
          IF        OVRCD = 1
            BRANCH    VCHKFLAG,WPRA9999          * error checking only
            CALL      WRPMHCG1                   * write new record
            PROC      PMSPKIUP                   * practice keyword index
            ADD       ONE,ADDCOUNT               * increment added record count
          ELSE
            MOVE      "Practice record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
WPRA9999  RETURN
+
.*****************************************************************************
.*                                 WLIN0000        Called by: UPLD0000       *
.*                 Write a Linked HCP record to pmshclaf                     *
.* Requires:  loaded pmshclaf database variables                             *
.* Returns:   ADDCOUNT - updated count for records added                     *
.*            DUPCOUNT - updated count for duplicate records                 *
.*****************************************************************************
.
WLIN0000  PACK      KEY20,PMHLHCPC,PMHLHCPR
          CALL      RAPMHCL1
          IF        OVRCD = 1
            BRANCH    VCHKFLAG,WLIN9999          * error checking only
            CALL      WRPMHCL1                   * write new record
            ADD       ONE,ADDCOUNT               * increment added record count
          ELSE
            MOVE      "Linked HCP record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
WLIN9999  RETURN
+
.*****************************************************************************
.*        Temp File I/O Routines                                             *
.*****************************************************************************
.
.         HCP Code
.
RDTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      TEMP1,KEY10;OLDHCPCD,NEWHCPCD
          GOTO      OVERCOND IF OVER
          RETURN
.
.         HCP Practice
.
RDTEMP2   MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      TEMP2,KEY10;OLDHCGCD,NEWHCGCD
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Type (Cat DT)
.
RDTEMP3   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP3,KEY3;OLDDTYPE,NEWDTYPE
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Accreditation Type (Cat AT)
.
RDTEMP4   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP4,KEY3;OLDDACCR,NEWDACCR
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Classification (Cat DL)
.
RDTEMP5   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP5,KEY3;OLDDCLAS,NEWDCLAS
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor UDF 1 (Cat R5)
.
RDTEMP6   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP6,KEY3;OLDDUDF1,NEWDUDF1
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor UDF 2 (Cat R6)
.
RDTEMP7   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP7,KEY3;OLDDUDF2,NEWDUDF2
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor UDF 3 (Cat R7)
.
RDTEMP8   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP8,KEY3;OLDDUDF3,NEWDUDF3
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Contact Time (Cat R8)
.
RDTEMP9   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP9,KEY3;OLDDCONT,NEWDCONT
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Notify Via (Cat R9)
.
RDTEMP10  MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP10,KEY3;OLDDNOTF,NEWDNOTF
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Insurance
.
RDTEMP11  MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      TEMP11,KEY6;OLDINSUR,NEWINSUR
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Registration Type (Cat HR)
.
RDTEMP12  MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP12,KEY3;OLDREGIS,NEWREGIS
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Preferred Contact (Cat CZ)
.
RDTEMP13  MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP13,KEY3;OLDDPREF,NEWDPREF
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Provider Type (Cat pt)
.
RDTEMP14  MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP14,KEY3;OLDPRTYP,NEWPRTYP
          GOTO      OVERCOND IF OVER
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CLPMSHCG
          INC       CLPMSHCL
          INC       CLPMSHCP
          INC       PMSHKIPR
          INC       PMSPKIPR
.
          INC       APSMASIO/INC
          INC       PATCODIO/INC
          INC       PATIN1IO/INC
          INC       PMSHCGIO/INC
          INC       PMSHCLIO/INC
          INC       PMSHCPIO/INC
