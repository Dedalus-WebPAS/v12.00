.*****************************************************************************
.*                              HL7COMN.PBL                                  *
.*        Contains common HL7 routines used by both HL7CISIN and HL7QUERY    *
.* Mods:                                                                     *
.*        V12.00.09 21/10/2025  Bella Turco      TSK 0960178                 *
.*                  Added ZXP.77: Sending Estimated DOB Flag                 *
.*                  (WRZXP000/PMPXEDOB)                                      *
.*        V12.00.08 15/10/2025  J.Tan            TSK 0967027                 *
.*                  Added CPOL0000 - checking pooling table for Type 018     *
.*        V12.00.07 07/10/2025  Davin            TSK 0946211                 *
.*                  Default PID.25 to "" to signify no multiple birth order  *
.*        V12.00.06 11/09/2025  Davin            TSK 0949457                 *
.*                  Added ZXP.76: Email Validation Flag (WRZXP000/PMPXSN21)  *
.*        V12.00.05 02/07/2025  Davin            TSK 0954308                 *
.*                  Added check for trigger 52 (based on ptcndbvc @ ADPV1037)*
.*        V12.00.04 26/06/2025  Davin            TSK 0954308                 *
.*                  Don't send bed in PV1.3 for A22 message when discharged  *
.*                  while on leave (based on ptcndbvc @ ADPV1037)            *
.*        V12.00.03 17.06.2025  Davin            TSK 0954308                 *
.*                  Updated code to hide bed in PV1.03 and PV1.06 for leave  *
.*                  and standby for everytime section displayed              *
.*        V12.00.02 14/05/2025 Thanh T           TSK 0955096                 *
.*                  Changed for alphanumeric visit number                    *
.*        V12.00.01 22/05/2025  Davin            TSK 0960441                 *
.*                  Added parameter to determine sending of additional PV1.3 *
.*                  components in EMR messages (EPV10000/SAPCM000/PTCNSAPC)  *
.*****************************************************************************
.*        V11.05.06 29/04/2025  Davin            TSK 0947378                 *
.*                  Added Discharge Delay / Cleared for Discharge Details    *
.*                  (ZXV.114,ZXV.115,ZXV.116 / GDISCH00)                     *
.*        V11.05.05 15.04.2025  DA Sarkies       TSK 0954303                 *
.*                  Added check to hide Bed for PV1.3 and PV1.6 if condition *
.*                  set                                                      *
.*        V11.05.04 20/03/2025  Davin            TSK 0956210                 *
.*                  Add ICD10 Ed.13 Go-live Date PTCNGDX3 (Sect.130 Pos.86)  *
.*        V11.05.03 12/02/2025  Davin            TSK 0954821                 *
.*                  Added PV1.3.2/PV1.3.3/PV1.3.6 to EMR messages (EPV10000) *
.*        V11.05.02 31/01/2025  Davin            TSK 0956249                 *
.*                  Changed to send adiag2 in DG1.4 (free format diagnosis)  *
.*                  even if adiag1 is not populated (ADDG1000)               *
.*        V11.05.01 07/01/2025  Davin            TSK 0953715/0935149         *
.*                  Set PV1.3.5 to 'S' if message is A22 or A03 and bed is   *
.*                  occupied by a different visit to the one in the message  *
.*        V11.04.08 16/08/2024  DASarkies        TSK 0935149                 *
.*                  PV1 1-3.5 - Made discharged patient standby if bed has   *
.*                              been occupied                                * 
.*        V11.04.07 16/08/2024  Davin            TSK 0950179                 *
.*                  Added option 50 to various MESSNUMB branch statements    *
.*                  (e.g. to stop VISNUMBR being sent in PID.18 at WRPID500) *
.*        V11.04.06 30/07/2024  Davin            TSK 0939978/0936188         *
.*                  Added CATeyLW (lowercase) to resolve conflict with CATEY *
.*        V11.04.05 19.07.2024  DA Sarkies       TSK 0936188                 *
.*                  Populated ZXV107 to ZXV113 with EMR details including    *
.*                  Senior Dr, and accident details                          *
.*        V11.04.04 04/06/2024  PJ Le Febour     TSK 0935317                 *
.*                  EPSVIS00 removed test of PMHBADAT to determine if changed*
.*                           A08 HL7 message to be broadcast regardless      *
.*        V11.04.03 31/05/2024  Davin            TSK 0941543                 *
.*                  Populate NK1.20 with Main Language Spoken at Home 1      *
.*                  Added new fields ZXP.72 to ZXP.75 (Ethnicity / Language) *
.*        V11.04.02 17.04.2024  DA Sarkies        TSK 0938140                *
.*                  Added option to display postal address from new contacts *
.*        V11.04.01 06/02/2024  Davin            TSK 0936263                 *
.*                  Get pmpxutm5 from holding table pmsqpxaf instead of      *
.*                  reading directly from pmspx2af (GTOBR000)                *
.*****************************************************************************
.*        V11.03.06 16.04.2024  DA Sarkies        TSK 0938140                *
.*                  Added option to display postal address from new contacts *
.*        V11.03.05 03/08/2023  Davin            TSK 0907196                 *
.*                  Send time of birth pmpxutm5 in PID.7 based on new        *
.*                  parameter ptcntofb (GTOBR000)                            *
.*        V11.03.04 28/07/2023  Davin            TSK 0930147                 *
.*                  Set ZXV.104 based on value of acoddte instead of calling *
.*                  CODFLG00 (IPZXV103/IPZXV104)                             *
.*        V11.03.03 29/03/2023  Jacob Jackson    TSK 0918711                 *
.*                  If PMPXSN18 is blank, set PID.11.7 to default to 'C'     *
.*        V11.03.02 06/03/2023  Jacob Jackson    TSK 0918711                 *
.*                  Add new PID.11.7 Options - Send 'SA' if Secure Address   *
.*                  (PMPXSN18) is equal to 2 and 'SP' if equal to 3          *
.*        V11.03.01 14/11/2022  Davin            TSK 0923862                 *
.*                  Moved Invoice Total from ZXV.105 to ZXV.106 (IPZXV106)   *
.*                  Added ZXV.105:Invoice Pending               (IPZXV105)   *
.*****************************************************************************
.*        V11.02.06 28/07/2022  Davin            TSK 0918020                 *
.*                  Added ZXV.103:Coding Complete Date       (IPZXV103)      *
.*                  Added ZXV.104:Coding Complete/Saved Flag (IPZXV104)      *
.*                  Added ZXV.105:Invoice Total              (IPZXV105)      *
.*        V11.02.05 26/04/2022  Davin            TSK 0903453                 *
.*                  Added ZXP.70:Identifying Gender (WRZXP710)               *
.*                  Added ZXP.71:Identifying Pronoun (WRZXP720)              *
.*        V11.02.04 30/03/2022  Davin            TSK 0917793                 *
.*                  Add ICD10 Ed.12 Go-live Date PTCNGDX2 (Sect.128 Pos.231) *
.*        V11.02.03 09/03/2022  Davin            TSK 0908733                 *
.*                  Added 2 new options to ptcnadig to allow 6 free text     *
.*                  lines of Presenting Complaint in EMR DG1.4 (EDG10000)    *
.*        V11.02.02 23/02/2022  Davin            TSK 0885553                 *
.*                  Added routines for HL7QUERY (moved from HL7CISIN):       *
.*                  OPV10000/RPV10000/OUTVIS00/ODG10000/LVIN0000             *
.*                  EPV10000/EDG10000/GEVCD000/EMZXV000                      *
.*        V11.02.01 02/02/2022  Davin            TSK 0907877                 *
.*                  Added MULTBTYP and ZXP069: Mutliple Birth Type of Birth  *
.*                  (WRZXP700/MLTBIR00)                                      *
.*****************************************************************************
.*        V11.01.08 22/12/2021  Davin            TSK 0882972                 *
.*                  Send PID.11.7:Address Type as 'S' if Secured Address     *
.*                  Indicator (pmpxsn18) = 1 (WRPID140)                      *
.*        V11.01.07 11/11/2021  Davin            TSK 0864505                 *
.*                  Added name type and preferred name to PID.9 based on new *
.*                  parameter ptcnsnty (WRPID055)                            *
.*        V11.01.06 14/10/2021  Davin            TSK 0911391                 *
.*                  Only re-read pmsqpt if rdmast1 has been called (GLINK000)*
.*        V11.01.05 17/08/2021  Davin            TSK 0910329                 *
.*                  Mods to allow drg versions above 9.0 in DRG.1 (WRDRG000) *
.*        V11.01.04 29/06/2021  Davin            TSK 0898004                 *
.*                  Mods to use NK1.22 for send letter/send sms (SPNK1410)   *
.*        V11.01.03 18/05/2021  Davin            TSK 0903091                 *
.*                  Send all existing diagnoses in DG1 for ADT A21 and A22   *
.*                  messages if ptcnmdg1 = 1 (WRDG1000)                      *
.*        V11.01.02 19/04/2021  Davin            TSK 0900672                 *
.*                  Added ZXV.101:Triage Date (WRZXV800)                     *
.*                  Added ZXV.102:Referral-In Receipt Acknowledgement Date   *
.*        V11.01.01 12/04/2021  Davin            TSK 0901390                 *
.*                  Added ZXP.64-68: PMI User Defined Fields P1-P5 (WRZXP000)*
.*****************************************************************************
.*        V11.00.08 22/01/2021  Davin            TSK 0898347                 *
.*                  Removed hard-coded mapping for PID.8 (GENDR000)          *
.*        V11.00.07 25/11/2020  Thanh T          TSK 0878747                 *
.*                  Added MLTBIR00 for multiple birth details                *
.*        V11.00.06 06/10/2020  Davin            TSK 0890602                 *
.*                  Check for MOSAIQ visit number for PV1.50 (ALVIS000)      *
.*        V11.00.05 29/09/2020  Tracey Nguyen    TSK 0888703                 *
.*                  Mods to send Usual Accommodation (Cat KP/PMVXUSAC) to    *
.*                  ZXV100 in IPZXV100                                       *
.*        V11.00.04 04/06/2020  Davin            TSK 0881876                 *
.*                  Changed ZXP.63 to only send value if pmpxsn19 not blank  *
.*        V11.00.03 22/04/2020  Davin            TSK 0881876                 *
.*                  Added ZXP.63: Verified Address Flag (WRZXP000/PMPXSN19)  *
.*        V11.00.02 17/04/2020  Davin            TSK 0879163                 *
.*                  Added GENDR000 - populate PID.8 (sex) with Cat.G value   *
.*        V11.00.01 16/04/2020  Davin            TSK 0887136                 *
.*                  Added Ambulance Concession Card (cardtype 8=AMB) to PID.3*
.*                  Added Folder Selection (ZXP.61)                          *
.*                  Added PMI User Defined Y/N Field 2 (ZXP.62)              *
.*****************************************************************************
.*        V10.15.03 22/11/2019  Davin            TSK 0861253                 *
.*                  Send "" in ZXV90-97 for blank telehealth fields(WRZXV190)*
.*        V10.15.02 12/11/2019  Davin            TSK 0861253                 *
.*                  Added fields ZXV090 to ZXV097 for OUT messages (WRZXV190)*
.*        V10.15.01 07/11/2019  Ken Bell         TSK 0875392                 *
.*                  Update PV1 Segment to handle cancelled ACC detail for NZ *
.*****************************************************************************
.*        V10.14.08 16.04.2024  DA Sarkies        TSK 0938140                 *
.*                  Added option to display postal address from new contacts *
.*        V10.14.07 18/05/2021  Davin            TSK 0903091                 *
.*                  Send all existing diagnoses in DG1 for ADT A21 and A22   *
.*                  messages if ptcnmdg1 = 1 (WRDG1000)                      *
.*        V10.14.06 07/11/2019  Ken Bell         TSK 0875392                 *
.*                  Update PV1 Segment to handle cancelled ACC detail for NZ *
.*        V10.14.05 02/08/2019  Davin            TSK 0878929                 *
.*                  Increased max alert comment lines to 8 (ZAL014/WRZAL395) *
.*        V10.14.04 03/07/2019  Davin            TSK 0876159                 *
.*                  Mods to send W not F in DG1006 for A13 messages(WRDG1500)*
.*        V10.14.03 15/05/2019  Steve Armstrong  Task 0865461                *
.*                  Added further code to validate if a shared care          *
.*                  secondary doctor should be sent in PV1.52.               *
.*        V10.14.02 25/02/2019  Davin            TSK 0866465                 *
.*                  Mods to send mental health DG1 segments for ADT and I13  *
.*                  messages based on ptcnmdg1 (WRDG1600/MHDG1000)           *
.*                  19/02/2019  Ebon Clements TSK 0867703                    *
.*                  Changed NHI ethnicity file reads to use KEY5             *
.*        V10.14.01 11/02/2019  Jill Parkinson Task 0870293                  *
.*                  Added SSREF000 for zxv.015 and added clemrvis call       *
.*****************************************************************************
.*        V10.13.08 15/11/2018  Steve Armstrong  TSK 0861628                 *
.*                  Mods to handle sending of NDIS Expiry Date (ZXP.60).     *
.*                  13/11/2018  Steve Armstrong  TSK 0866156                 *
.*                  Mods to fix overwriting of Pension Card Expiry Date by   *
.*                  the NDIS Expiry Date.                                    *
.*                  29/10/2018  Steve Armstrong  TSK 0865791                 *
.*                  Mods to WRZSD000 & WRZEC000 to exit out via the 900      *
.*                  label instead of the going straight to the 999 label     *
.*                  without setting the value of EXIT.                       *
.*                  Fixed ZEC field comments.                                *
.*        V10.13.07 23/10/2018  Steve Armstrong  TSK 0863512                 *
.*                  Mods to send "Consent to upload MyHR " (PMVXUDF7) in     *
.*                  ZXV.89.                                                  *
.*        V10.13.06 25/09/2018  Steve Armstrong  TSK 0850366                 *
.*                  Fixed position of WRZSD310 label from RS to RK.          *
.*        V10.13.05 03/09/2018  Davin            TSK 0859667                 *
.*                  Added '3' as a valid option for ptcnadig (ADDG1000)      *
.*        V10.13.04 16/08/2018  Steve Armstrong  TSK 0861701                 *
.*                  Mods to SPCHR000 routine to check for a hex 96 character *
.*                  (HEXDASH) which is being sourced from a copy and paste   *
.*                  from a word document into comments.                      *
.*        V10.13.03 10/08/2018  Davin            TSK 0857732                 *
.*                  Send HDP Default for CatD/CatDD in PV1.36 (if PTCNUHDD=1)*
.*                  Send PID.26 (Citizenship) for Australian sites           *
.*                  Allow value of 8 in PID.10 (Race) for NSW sites          *
.*                  25/07/2018  Ebon Clements    TSK 0850366                 *
.*                  Don't report no for blank legal guardian values in       *
.*                  NK1.29 - ALNK1000                                        *
.*        V10.13.02 24/07/2018  Ebon Clements    TSK 0860696                 *
.*                  Added ZSD.4 - ZSD.9 for UG interface.                    *
.*        V10.13.01 23/07/2018  Steve Armstrong  TSK 0860614                 *
.*                  Mods to ZXV.13 to pass comment lines through the         *
.*                  SPCHR000 routine to convert HL7 special characters.      *
.*****************************************************************************
.*        V10.12.10 19/07/2018  Ebon Clements    TSK 0850366                 *
.*                  Added legal guardian to NK1.29 - ALNK1000                *
.*        V10.12.09 05/06/2018  Davin            TSK 0851377                 *
.*                  Added extra ZXV fields 59-87 for EMR messages (EMZXV000) *
.*        V10.12.08 07/05/2018  Davin            TSK 0851197                 *
.*                  Only send "" in ZLS.10 if both comment fields are blank  *
.*                  02/03/2018  Steve Armstrong  TSK 0850854                 *
.*                  Added population of "Phone Calls Allowed" field (ZXV.58) *
.*                  for I/P ADT^A08 messages.                                *
.*        V10.12.07 03/05/2018  Davin            TSK 0854305                 *
.*                  Added logging by segment if ptcnhl7l=2 (SENDM000)        *
.*        V10.12.06 12/04/2018  Davin            TSK 0844685                 *
.*                  Added ZXP.59 - Unknown/Estimated Date of Death Flag      *
.*        V10.12.05 06/04/2018  Davin            TSK 0844685                 *
.*                  Added UPI id type to PID.3 for NSLHD (WRPID000)          *
.*        V10.12.04 15.02.2018  B.G.Ackland      TSK 0837357                 *
.*                  Use code description for ZEC-12 if Coded in Cat Br       *
.*        V10.12.03 13.02.2018  B.G.Ackland      TSK 0837357                 *
.*                  Remove Debug. Dont send ZEC if Claim Type Indicator      *
.*                  Invalid                                                  *
.*        V10.12.02 24/01/2018  Davin            TSK 0837357                 *
.*                  Added ZEC segment - extra compensable details (WRZEC000) *
.*        V10.12.01 23/01/2018  Davin            TSK 0851197                 *
.*                  Split ZLS010 comment fields with a ' ' not '^' @WRZLS500 *
.*****************************************************************************
.*        V10.11.06 06/11/2017  Davin            TSK 0843633                 *
.*                  Added '2' as a valid option for ptcnadig (ADDG1000)      *
.*        V10.11.05 27/09/2017  Steve Armstrong  TSK 0839724                 *
.*                  Added population of PV1.20, Component 2 - ACC Accident   *
.*                  Date (GTACC000).                                         *
.*        V10.11.04 18/09/2017  Davin            TSK 0840094                 *
.*                  Added WRDRG000 (Write Diagnostic Related Group segment)  *
.*        V10.11.03 14/09/2017  Thanh T.         TSK 0821710                 *
.*                  Audit Outpatient visit comments (ZXV.13)                 *
.*        V10.11.02 23/08/2017  Davin            TSK 0837617                 *
.*                  Added I12,I13,I14 messages for W/L (messnumb=47,48,49)   *
.*        V10.11.01 21/07/2017  Davin            TSK 0838315                 *
.*                  Added ZLS segment - mental health legal status (WRZLS000)*
.*****************************************************************************
.*        V10.10.08 13/06/2017  Davin            TSK 0819675                 *
.*                  Send up to 1000 chars in ZXV.13 when PTCNH7IL = 1 (on)   *
.*                  Send "" in ZXV.13 when no comments on file (OUT/EMR)     *
.*        V10.10.07 06/06/2017  Davin            TSK 0839601                 *
.*                  Replace blank space with zeros in ZXV.22                 *
.*        V10.10.06 02/06/2017  Davin            TSK 0819675                 *
.*                  Added O/P Service Delivery Mode ZXV.57 (WRZXV185)        *
.*                  Added O/P comments (patcmntf) to OUT messages (ZXV.13)   *
.*                  Added PTCNH7IL to insert linebreaks in ZXV.13            *
.*        V10.10.05 05/05/2017  Steve Armstrong  TSK 0836111                 *
.*                  Mods to remove check on population of PTTRLTYP when      *
.*                  sending ZXV.30 field in A22 (Return from Leave) message. *
.*        V10.10.04 19/04/2017  Steve Armstrong  TSK 0834336                 *
.*                  Mods to use PTCNH7LN to determine whether to use         *
.*                  Security User ID or Security Login Name for ZAL.12.      *
.*                  18/04/2017  Steve Armstrong  TSK 0833052                 *
.*                  Added population of ZXV.56.                              *
.*        V10.10.03 27/03/2017  Steve Armstrong  TSK 0833314 & 0830704       *
.*                  Added population of ZXV.51 (Health Purchaser - Cat HP)   *
.*                  for O/P, I/P, ED and A/H Encounters.                     *
.*                  21/03/2017  Steve Armstrong  TSK 0832066                 *
.*                  Mods to only use Concession Card file for DVA data       *
.*                  instead of PREPAT and PMPXDVAC.                          *
.*                  17/03/2017  Davin          TSK 0833093     HDP 2017/2018 *
.*                  Add ICD10 Ed.10 - Go-live Date PTCNGDVX (Sect.110 Pos.85)*
.*        V10.10.02 14/03/2017  Steve Armstrong TSK 0323865                  *
.*                  Mods to send "Inform GP" data in ZXV.19 for ED A04 & A08 *
.*                  messages.  Also set default to be "No" unless pmvxingp   *
.*                  is set to "1".                                           *
.*        V10.10.01 06/03/2017  Steve Armstrong TSK 0829263                  *
.*                  Fixed concession card validation of expiry date to only  *
.*                  use date (DIM8) instead of date and time (DATETIME).     *
.*****************************************************************************
.*        V10.09.04 06/02/2017  Davin           TSK 0829263                  *
.*                  Added NDIS card number to PID.3 (cat ct indc.1 = 7)      *
.*        V10.09.03 27/01/2017  Steve Armstrong TSK 0830055                  *
.*                  Fixed ALVIS000 to check for IBAVTYPE is " 1" (eReferral) *
.*                  instead of checking for both "  " and " 0" (legacy).     *
.*        V10.09.02 04/01/2017  Steve Armstrong CAR 0830898                  *
.*                  Fixed A04 ED message to BRANCH to the same place as the  *
.*                  A08 ED message to ensure that ZXV.11/12/13 get populated *
.*        V10.09.01 19/12/2016  Steve Armstrong CAR 0830898                  *
.*                  Mods to ZXV.11, ZXV.12 & ZXV.13 to send in all ED        *
.*                  messages except where status is cancelled.               *
.*****************************************************************************
.*        V10.08.01 26/05/2016  Steve Armstrong CAR 0813737                  *
.*                  Mods to PID.11 for NZ Addresses                          *
.*****************************************************************************
.*        V10.07.07 19/02/2016  Steve Armstrong CAR 0809786                  *
.*                  Mods to send MHSW identifier in PID.3 where parameter    *
.*                  is turned on for sending.                                *
.*        V10.07.06 09/02/2016  Steve Armstrong CAR 0809500                  *
.*                  Mods to send "0" where PCEHR field is not populated      *
.*        V10.07.05 05/02/2016  Steve Armstrong CAR 0813285                  *
.*                  Mods to cater for "Unknown" interpreter required field   *
.*                  (PID.15).                                                *
.*        V10.07.04 22/01/2016  Davin           CAR 0310749                  *
.*                  Mods to send all pmsnutaf and catcomaf data from todays  *
.*                  date onwards in ZXV.31 (if PTCNUTOM=1)                   *
.*        V10.07.03 29/12/2015  Steve Armstrong CAR 0322741                  *
.*                  Mods to send gender values as stored if PTCNGNDR is      *
.*                  turned on.                                               *
.*        V10.07.02 25/11/2015  Steve Armstrong CAR 310749                   *
.*                  Mods to send additional pmsnutaf and catcomaf data       *
.*                  in ZXV.31                                                *
.*        V10.07.01 21/10/2015  Steve Armstrong CAR 322306                   *
.*                  Mods to send an NK1 segment for each "old" contact       *
.*                  where PTCNNNK1 is set to "2".                            *
.*****************************************************************************
.*        V10.06.03 28/07/2015  Davin           CAR 314914                   *
.*                  Added ZXP.58 Consent for PCEHR Release (1=unk/2=no/3=yes)*
.*        V10.06.02 05/06/2015  Davin           CAR 316872 NZNDHB            *
.*                  Added PSTAD000 to send mailing address in PID.11(NZ only)*
.*        V10.06.01 17/03/2015  Davin           CAR 311669      HDP 2015/16  *
.*                  Add ICD10 Ed.9 - Go-live Date PTCNGDV9 (Sect.110 Pos.77) *
.*        V10.05.09 22/12/2014  Davin            CAR 308302                  *
.*                  Load alternate alert code into ZAL.3 (wrzal270)          *
.*        V10.05.08 26/11/2014  Davin            CAR 309239                  *
.*                  Fixed use of PT0DDSC2/ODESC @ GTICO000                   *
.*        V10.05.07 05/11/2014  Steve Armstrong  CAR 306617                  *
.*                  Mods to use PT0ODSC2 and PT0DDSC2 instead of ODESC and   *
.*                  DDESC in GTICO000 and GTICD000.                          *
.*        V10.05.06 02/09/2014  Steve Armstrong  CAR 305388                  *
.*                  Mods to send Chemotherapy Card Expiry Date in ZXP.57     *
.*        V10.05.05 28/08/2014  Steve Armstrong  CAR 305388                  *
.*                  Fixed so that NZ sites only populate PID.3 with U/R.     *
.*        V10.05.04 20/08/2014  Steve Armstrong  CAR 303880                  *
.*                  Added handling of chemotherapy card in PID.3.            *
.*        V10.05.03 13/08/2014  Steve Armstrong  CAR 295988                  *
.*                  Mods to populate ZSD.3 with BLANKSTR when there are no   *
.*                  medical records for a patient in any hospital.           *
.*        V10.05.02 30/07/2014  Steve Armstrong  CAR 304139                  *
.*                  Fixed WRZSD000 to use H7CIUSID and H7CIHOSP instead of   *
.*                  the spare variable (since they have been added to the FD *
.*                  in V10.04).                                              *
.*        V10.05.01 22/07/2014  Davin            CAR 251384                  *
.*                  Added ZXV.50 (Tier 2 Code ) at wrzxv170                  *
.*****************************************************************************
.*        V10.04.07 12/06/2014  Steve Armstrong  CAR 301639                  *
.*                  Moved call to TFILENAM into HL7CISIN and HL7QUERY        *
.*        V10.04.06 30/05/2014  Steve Armstrong  CAR 270711                  *
.*                  Mods to send Private Phone Number, Business Phone Number,*
.*                  Mobile Phone Number and Email address from Next of Kin   *
.*                  contact (pmscexaf) in repeating fields in NK1.31 and     *
.*                  to format according to HL7 rules.                        *
.*        V10.04.05 23/05/2014  Steve Armstrong  CAR 301458                  *
.*                  Mods to determine overseas address using "OS" from       *
.*                  postcode file as well as "8888" postcodes (PID.11).      *
.*        V10.04.04 28/04/2014  Steve Armstrong  CAR 261630                  *
.*                  Mods for non-port based tempfile use.                    *
.*        V10.04.03 04/04/2014  Davin            CAR 292935                  *
.*                  Added second & third hcps to ZXP segment                 *
.*                  Added hcp consent for info release fields to ZXP segment *
.*                  Always send blankstr in each field if no hcp/practice    *
.*        V10.04.02 20/03/2014  Davin            CAR 298443                  *
.*                  Added concession card types 1 and 5 to PID.3             *
.*                  Added ability to broadcast hdp default as card type      *
.*        V10.04.01 12/03/2014  Davin            CAR 297562                  *
.*                  Added Referring Practice (ZXV.49) at wrzxv800            *
.*        V10.03.44 09/12/2013  Steve Armstrong  CAR 292355                  *
.*                  Mods to send O/P site in ZXV.35.                         *
.*        V10.03.43 03/12/2013  Steve Armstrong  CAR 294775                  *
.*                  Mods to send null in component 1 of PID.15 where the     *
.*                  language is blank, the language code could not be found  *
.*                  on patcodes or the HDP equivalent is blank.              *
.*        V10.03.42 29/11/2013  Davin            CAR 294691                  *
.*                  Re-read linked UR PMI details for HL7QUERY (glink900)    *
.*        V10.03.41 25/11/2013  Steve Armstrong  CAR 294253                  *
.*                  Mods to update pmsehbaf.pmhbadat when the pre-admission  *
.*                  date changes in webPAS.                                  *
.*        V10.03.40 25/11/2013  Steve Armstrong  CAR 294259                  *
.*                  Mods to handle DVA Orange card colour.                   *
.*        V10.03.39 25/11/2013  Steve Armstrong  CAR 294496                  *
.*                  Mods to fix setting of PV1.18 for Cat CC Assoc. #. to    *
.*                  align with Eclipse values.                               *
.*        V10.03.38 21/11/2013  Steve Armstrong  CAR 294358                  *
.*                  Mods to align setting of Indigenous Status for SA, TAS & *
.*                  NT with that of NSW, QLD and ACT.                        *
.*        V10.03.37 09/10/2013  Davin           CAR 285690                   *
.*                  Fixed goto label for employment status in emr (wrzxv410) *
.*        V10.03.36 07/10/2013  Davin           CAR 286923                   *
.*                  Added check for record type in alvis000 (ibavtype)       *
.*                  Added fields 44,45,46,47,48 to ZXV segment (wrzxv800)    *
.*        V10.03.35 03/10/2013  Steve Armstrong CAR 291097                   *
.*                  Mods to Indigenous Status (PID.10).                      *
.*                     - Changed ACT/NSW validation to not allow value of 5. *
.*                     - Added QLD to use same validation as per ACT/NSW     *
.*                       (with no mapping of values).
.*        V10.03.34 29/08/2013  Steve Armstrong CAR 290824                   *
.*                  Changed GTICO000 to use OPICD1 to open icd file(s)       *
.*        V10.03.33 22/08/2013  Davin           CAR 287764                   *
.*                  Changed to populate ZSD.3 for A34 messages (wrzsd300)    *
.*        V10.03.32 19/08/2013  Davin           CAR 279179                   *
.*                  Added ZXV.42 & ZXV.43 to ZXV segment (INP and WL)        *
.*        V10.03.31 31/07/2013  Davin           CAR 289611                   *
.*                  Moved episoft id to be first component of pv1.50         *
.*                  Moved code to retrieve episoft id to alvis000/epsvis00   *
.*        V10.03.30 30/07/2013  Davin           CAR 287838                   *
.*                  Only populate division if hosp & unit exist (zxv023)     *
.*        V10.03.29 30/07/2013  Davin           CAR 289391                   *
.*                  Changed to not map 'race' value for VIC (pid010)         *
.*        V10.03.28 18/07/2013  Steve Armstrong CAR 268961                   *
.*                  Mods to use ACLSSFT & PMVXTEAM instead of TDEPT &        *
.*                  PTTRTEAM when populating ZXV.23, ZXV.24 & ZXV.25 plus    *
.*                  mods to use ADOCTA & ATYPE instead of TADOCT & TATYPE    *
.*                  when populating PV1.9 & PV1.10 (due to pre-admissions    *
.*                  not having a transfer record).                           *
.*        V10.03.27 15/07/2013  Davin           CAR 288550                   *
.*                  Changed gticd000 to use opicd1 to open icd file(s)       *
.*        V10.03.26 10/07/2013  Davin           CAR 288036                   *
.*                  Don't populate practice code/name if null (zxp016,zxp017)*
.*        V10.03.25 30/06/2013  Davin           CAR 279440                   *
.*                  Set Pending Location (PV1042) for A08(preadm)/A14/A27    *
.*                  30/06/2013  Davin           CAR 279183                   *
.*                  Added ZXV segment for I12/I13/I14 messages (wrzxv700)    *
.*                  30/06/2013  Davin           CAR 283202                   *
.*                  Added ZXP.22 & ZXP.23 to ZXP segment (wrzxp340/wrzxp350) *
.*        V10.03.24 23/04/2013  Davin           CAR 284420      HDP 2013/14  *
.*                  Add ICD10 Ed.8 - Go-live Date PTCNGDV8 (Sect.110 Pos.69) *
.*        V10.03.23 22/05/2013  Steve Armstrong  CAR 284376                  *
.*                  Mods to populate ICDRDDTE with CODINGDT in GTICD000 &    *
.*                  GTICO000.                                                *
.*        V10.03.22 16/04/2013  Davin            CAR 280425                  *
.*                  Don't write to socket if edi only messaging (ibcnucis=2) *
.*                  Added code to retrieve episoft id (othvis00)             *
.*        V10.03.21 09/05/2013  Steve Armstrong  CAR 285194                  *
.*                  Mods to move the following routines from HL7CISIN:       *
.*                   - WZXP0000 to WRZXP000                                  *
.*                   - WZXV0000 to WRZXV000                                  *
.*                   - WZSD0000 to WRZSD000                                  *
.*        V10.03.20 04/02/2013  Steve Armstrong  CAR 258177                  *
.*                  Mods to SENDM000 to write segment (SEGSTRNG) to log file *
.*        V10.03.19 30/01/2013  Steve Armstrong  CAR 278972                  *
.*                  Fixed setting of NK1.32 country for overseas addresses.  *
.*        V10.03.18 20/12/2012  Steve Armstrong  CAR 267173                  *
.*                  Updated BRANCH statements for MESSNUMB for values 44 & 45*
.*        V10.03.17 14/12/2012  Steve Armstrong  CAR 263882                  *
.*                  Fixed setting of PID.29 (Death Date) when PDECDTE is     *
.*                  blank and PCEASE is 1 (deceased).                        *
.*        V10.03.16 05/11/2012  Steve Armstrong  CAR 275858                  *
.*                  Mods to populate PID.11/NK1.32, Component 6 (Country)    *
.*                  based on the state parameter for HDP extracts.           *
.*        V10.03.15 11/05/2012  Steve Armstrong  CAR 256322                  *
.*                  Mods to include Medical Warnings in ZAL alerts for NZ.   *
.*        V10.03.14 09/05/2012  Steve Armstrong  CAR 263812                  *
.*                  Mods to not populate NK1.29 TPS ID where the field is    *
.*                  blank, instead of sending a null.                        *
.*        V10.03.13 05/04/2012  Steve Armstrong  CAR 263261                  *
.*                  Added code to populate ZAL.15 with the alert identifiers *
.*        V10.03.12 27/03/2012  Steve Armstrong  CAR 262640                  *
.*                  Fixed loading of LEGACY visit number into PV1.50 to use  *
.*                  20 characters instead of 8.                              *
.*        V10.03.11 17/02/2012  Steve Armstrong  CAR 259400                  *
.*                  Mods to load aliases from patgsrnf into a temp file      *
.*                  before loading into PID.9.  This is to make sure that    *
.*                  only unique name-related aliases are sent (not just      *
.*                  gender and/or DOB only changes).                         *
.*                  Removed OUTVIS00 and put in HL7CISIN.                    *
.*        V10.03.10 28/02/2012  Steve Armstrong  CAR 257428                  *
.*                  Mods to check TCINDC21 for Alert Code or Contact Code    *
.*                  to see if record is to be excluded from broadcast        *
.*                  message for WA Health.                                   *
.*        V10.03.09 16/02/2012  Davin            CAR 256006                  *
.*                  Added routine for O/P alternate visits (outvis00)        *
.*        V10.03.08 16/02/2012  Steve Armstrong  CAR 259720                  *
.*                  Further mods to handling alert comments with special     *
.*                  HL7 characters.                                          *
.*        V10.03.07 15/02/2012  Steve Armstrong  CAR 259720                  *
.*                  Added check for special HL7 characters when loading      *
.*                  alert comments.                                          *
.*        V10.03.06 13/02/2012  Davin            CAR 256006                  *
.*                  Added messnumb (41/42) to various routines               *
.*                  Added call to W/L DG1 routine (wdg10000)                 *
.*                  Added outpatient/WL previous visit number (othvis00)     *
.*        V10.03.05 13/12/2011  Steve Armstrong  CAR 248529                  *
.*                  Mods to NK1 segment to send TOPAS and webPAS Unique ID   *
.*                  in NK1.29.                                               *
.*        V10.03.04 30/11/2011  Steve Armstrong  CAR 256454                  *
.*                  Mods to send null as the country in NK1.32 where there   *
.*                  are no address fields populated.                         *
.*        V10.03.03 29/11/2011  Jill Parkinson   CAR 249362                  *
.*                  Changed alert keys                                       *
.*        V10.03.02 17/11/2011  Steve Armstrong  CAR 255522                  *
.*                  Added checks to PID.5 to send a null if second given     *
.*                  name is blank.                                           *
.*        V10.03.01 16/11/2011  Steve Armstrong  CAR 251665                  *
.*                  Added GTICO000 routine for procedures (PR1 segment).     *
.*****************************************************************************
.*        V10.02.17 27/10/2011  Steve Armstrong  CAR 251323                  *
.*                  Mods to always send all other visit numbers in PV1.50,   *
.*                  regardless of whether or not they have values.           *
.*                  Also added statistical admission visit number to PV1.50. *
.*                  Also changed "webPAS" to "webPAS-ED" for ED related I/P  *
.*                  visits for PV1.50.                                       *
.*        V10.02.16 24/10/2011  Steve Armstrong  CAR 251665                  *
.*                  Changes to populate DG1.15 with sequence count.          *
.*        V10.02.15 17/10/2011  Steve Armstrong  CAR 252975                  *
.*                  Mods to send "8888" as postcode for overseas addresses.  *
.*                  13/10/2011  Steve Armstrong  CAR 252620                  *
.*                  Mods to PID.3 to always send each patient identifier     *
.*                  regardless of whether or not the data exists.            *
.*                  13/10/2011  Steve Armstrong  CAR 252132                  *
.*                  Mods to PID.11 to send address as second repeating field *
.*                  preceded by a tilda (to conform to HL7 standard)         *
.*        V10.02.14 04/10/2011  Steve Armstrong  CAR 246036                  *
.*                  Added code for W/L bookings (BPV10000 routine and        *
.*                  BRANCHes for MESSNUMB).                                  *
.*        V10.02.13 30/09/2011  Steve Armstrong  CAR 252181                  *
.*                  Fixed population of PID.27                               *
.*        V10.02.12 23/09/2011  Steve Armstrong  CAR 249584                  *
.*                  Removed OPNICD00 after moving that functionality into    *
.*                  GTICD000.  Further modified GTICD000 to load diagnosis   *
.*                  description into component 3 of DG1.3 and into DG1.4.    *
.*                  23/09/2011  Steve Armstrong  CAR 251775                  *
.*                  Fixed sending multiple aliases to use counter when       *
.*                  looping.                                                 *
.*                  20/09/2011  Steve Armstrong  CAR 248650                  *
.*                  Mods to use parameter for PV1.3 to determine whether     *
.*                  to send the ward/bed codes or the short descriptions.    *
.*        V10.02.11 16/09/2011  Steve Armstrong  CAR 248886                  *
.*                  Fixed setting of PV1.50 for I/P admission from ED.       *
.*        V10.02.10 15/09/2011  Steve Armstrong  CAR 251302                  *
.*                  Updated population of PID.10 (Aboriginality) based on    *
.*                  changes made to HL7RECVR for current state HDP           *
.*                  equivalents.                                             *
.*                  Mods to use DVCOLOUR to save DVA card colour.            *
.*        V10.02.09 23/08/2011  Steve Armstrong  CAR 248539                  *
.*                  Mods to populate PID.10 (Aboriginality) differently      *
.*                  for WA Health state requirements.                        *
.*        V10.02.08 15/08/2011  Steve Armstrong  CAR 249085                  *
.*                  Mods to send Mother's link details for a child U/R.      *
.*                  13/08/2011  Steve Armstrong  CAR 245199                  *
.*                  Mods to send Postal Address from pmscexaf as an NK1      *
.*                  segment instead of as a repeating field in PID.11.       *
.*        V10.02.07 10/08/2011  Steve Armstrong  CAR 246137                  *
.*                  Mods to populate Safety Net, DVA and Pension Number      *
.*                  expiry dates for loading into ZXP fields.                *
.*        V10.02.06 01/08/2011  Steve Armstrong   CAR 246029                 *
.*                  Mods to send Safety Net number in PID.3.                 *
.*        V10.02.05 27/07/2011  Steve Armstrong   CAR 246136                 *
.*                  Mods to not populate DG1.2 for I/P free format diagnoses.*
.*                  Mods to send provisional diagnosis (pmsvx1af.pmvxpicd)   *
.*                  for I/P as a "admitting" diagnosis.                      *
.*                  Mods to send diagnosis description in DG1.4 for coded    *
.*                  I/P's.                                                   *
.*        V10.02.04 20/07/2011  Steve Armstrong   CAR 246136                 *
.*                  Mods to send a "delete" segment prior to sending         *
.*                  repeating segments (DG1, NK1, AL1 & ZAL).                *
.*                  20/07/2011  Steve Armstrong   CAR 246138                 *
.*                  Mods to send ZAL segment (parameter based).              *
.*                  20/07/2011  Steve Armstrong   CAR 246136                 *
.*                  Mods to populate DG1.2 with the episode count.           *
.*                  16/07/2011  Steve Armstrong   CAR 245199                 *
.*                  Mods that apply when using extra contacts table:         *
.*                    - to not send Postal address contacts in NK1 segment.  *
.*                    - to send first Postal address contact in PID.11 as a  *
.*                      repeat field.                                        *
.*                  16/07/2011  Steve Armstrong   CAR 246039                 *
.*                  Mods for country in patient address line 4               *
.*        V10.02.03 13/07/2011  Steve Armstrong   CAR 240722                 *
.*                  Further mods to cater for second given name as part of   *
.*                  PATGSRFD keys                                            *
.*        V10.02.02 22/06/2011  Steve Armstrong   CAR 240722                 *
.*                  Mods to cater for changes to PATGSRFD:                   *
.*                       - GSRSNAM & GSRGNAM extended to 30 chars.           *
.*                       - PTGSGNM2 added.                                   *
.*                       - all indexes changed in length.                    *
.*                  06/06/2011  Steve Armstrong  CAR 240692                  *
.*                  Mods to check for alternate visit number (ALVIS000).     *
.*                  06/06/2011  Steve Armstrong  CAR 240722                  *
.*                  Mods to use extended surname (ptmasnam) to populate      *
.*                  PID.5.                                                   *
.*        V10.02.01 28/03/2011  Mike Laming   CAR 240107                     *
.*                  Mods to PATECDaf & PATECOaf variables & Keys             *
.*****************************************************************************
.*        V10.01.03 28/02/2011  Steve Armstrong  CAR 240700                  *
.*                  Mods to populate patient aliases into PID.9.             *
.*                  Mods to check parameter for second given name and if set *
.*                  send first and second given names in PID.5 component 2 & *
.*                  3 respectively.                                          *
.*                  Mods to use PMVXFNDM instead of AFNDMM and EMVIHFMN.     *
.*        V10.01.02 14/02/2011  Davin            CAR 230955                  *
.*                  Added linkdhcp & linkdhcg for lnkpr000 routine.          *
.*        V10.01.01 24/12/2010  Davin            CAR 230955                  *
.*                  Added routine (lnkpr000) to source PV1008 (Referring     *
.*                  Doctor) from practice link file (pmshcl).                *
.*                  16/12/2010  Steve Armstrong  CAR 235334                  *
.*                  Fixed ethnicity 2 & 3 in PID022 (ENDSET removed)         *
.*****************************************************************************
.*        V10.00.05 26/10/2010  Steve Armstrong  CAR 232384                  *
.*                  Mods for Patient Race (Aboriginality) to be set based    *
.*                  on PTCNHDPS.                                             *
.*        V10.00.04 08/06/2010  Steve Armstrong  CAR 223380                  *
.*                  Changed population of PID.27 (Veterans Military Status)  *
.*                  to use pmsccdaf.pmcdspar if not blank/present,           *
.*                  otherwise use pmspx2af.pmpxdvac.                         *
.*        V10.00.03 04/06/2010  Steve Armstrong  CAR 223380                  *
.*                  Mods to populate PID.27 (Veterans Military Status)       *
.*                  with DVA Card Colour.                                    *
.*        V10.00.02 29/04/2010  Steve Armstrong  CAR 220812                  *
.*                  Mods to write HL7RECVR response message to log file.     *
.*        V10.00.01 06/04/2010  Mike Laming     CAR 219246      HDP 2010     *
.*                  Add ICD10 Ed.7 - Go-live Date PTCNGDV7 (Sect.110 Pos.61) *
.*        V10.00.00 06/04/2010  Steve Armstrong    CAR 200967                *
.*                  Mods to ADPV1000 to populate PV1.52 with secondary dr.   *
.*                  29/01/2010  Steve Armstrong    CAR 212224                *
.*                  Created include based on code from HL7CISIN.             *
.*****************************************************************************
.*****************************************************************************
.*                           WRPID000           Called by: Lots              *
.*                 Write Patient Identification Segment                      *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WRPID000  MOVE      "PID",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [PID] segment",*R,*N;
          ENDIF
.
          CALL      CLPID000                     * clear PID fields
          CALL      CLZXP000                     * clear ZXP fields
.
.         Set Patient ID - (U/R number, Medicare No. Pension No. DVA No. &
.         other card types if present)
.
          MOVE      PURNO,PID003                 * set patient id (internal id)
          ENDSET    PID003
          APPEND    CARET,PID003
          CALL      GALID000                     * get alternate id check digit
          APPEND    CARET,PID003
          MATCH     "1",PTCNCKDG                 * sending check digit in PID03?
          IF        @EQUAL
            APPEND    "ISO",PID003               * yes-append check digit scheme
          ENDIF
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    "MR",PID003
          APPEND    CARET,PID003
          MOVE      MSH004,FIELDSTR              * set sending facility
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID003
.
.         Set NSLHD Identifier, if parameter is turned on for external PMI
.
          MATCH     "1",PTCNEPMI
          GOTO      WRPID005 IF NOT EQUAL        * not using extrnal PMI
.
          CALL      GTUPI000                     * get alternate id for UPI
.
          APPEND    TILDA,PID003
          MATCH     SP70,DIM20
          IF        @EQUAL
            APPEND    BLANKSTR,PID003
          ELSE
            APPEND    DIM20,PID003               * set UPI
          ENDIF
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    "UP",PID003
.
WRPID005  COMPARE   ONE,PTCNNHII                 * running NHI ?
          GOTO      WRPID050 IF EQUAL            * yes
.
          APPEND    TILDA,PID003
          MATCH     SP10,PMEDI                   * set Medicare number
          IF        !@EQUAL
            APPEND    PMEDI,PID003
            MATCH     SP2,PTMXMCCD
            IF        !@EQUAL
              SQUEEZE   PTMXMCCD
              APPEND    PTMXMCCD,PID003
            ENDIF
          ELSE
            APPEND    BLANKSTR,PID003
          ENDIF
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    "MC",PID003
          APPEND    TILDA,PID003
.
.         Set Pension Number using concession card, if one exists, or
.         default to patma1af.ppenno
.
          MOVE      FOUR,CARDTYPE                * set for pension card type
          MOVE      BLANKSTR,ZXP001
          CALL      CONCD000                     * pension conc card ?
          BRANCH    EXIT,WRPID010                * no
.
          MOVE      DIM20,FIELDSTR
          GOTO      WRPID011
.
WRPID010  MATCH     SP15,PPENNO                  * default pension number ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID003
            GOTO      WRPID012
          ENDIF
.
          MOVE      PPENNO,FIELDSTR
          MATCH     SP6,PPNDTE
          IF        !@EQUAL
            PACK      ZXP001,PPNDTE,SP8
          ENDIF
.
WRPID011  CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID003
.
WRPID012  APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          MATCH     SP4,CARDHDPD
          IF        @EQUAL
            APPEND    "PEN",PID003
          ELSE
            APPEND    CARDHDPD,PID003
          ENDIF
          APPEND    TILDA,PID003
.
.         Set DVA Number using concession card, if one exists
.
WRPID020  MOVE      SP3,DVCOLOUR                 * set default DVA card colour
          MOVE      BLANKSTR,ZXP005
.
          MOVE      THREE,CARDTYPE               * set for DVA card type
          CALL      CONCD000                     * DVA conc card ?
          BRANCH    EXIT,WRPID021                * no
.
          MOVE      DIM20,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID003
          GOTO      WRPID023
.
WRPID021  APPEND    BLANKSTR,PID003
          GOTO      WRPID023
.
WRPID023  APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    "AUSDVA",PID003
          APPEND    CARET,PID003
          MATCH     SP4,CARDHDPD
          IF        @EQUAL
            APPEND    "DV",PID003
          ELSE
            APPEND    CARDHDPD,PID003
          ENDIF
          APPEND    TILDA,PID003
.
.         Set Safety Net Number using concession card, if one exists
.
          MOVE      BLANKSTR,ZXP006              * set default safety net date
.
          MOVE      TWO,CARDTYPE                 * set for safety net card type
          CALL      CONCD000                     * safety net conc card ?
          IF        EXIT = 1
            APPEND    BLANKSTR,PID003
          ELSE
            MOVE      DIM20,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID003
          ENDIF
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          MATCH     SP4,CARDHDPD
          IF        @EQUAL
            APPEND    "SN",PID003
          ELSE
            APPEND    CARDHDPD,PID003
          ENDIF
          APPEND    TILDA,PID003
.
.         Set Centrelink card number, if one exists
.
          MOVE      ONE,CARDTYPE                 * set for centrelink card type
          CALL      CONCD000                     * centrelink conc card ?
          IF        EXIT = 1
            APPEND    BLANKSTR,PID003
          ELSE
            MOVE      DIM20,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID003
          ENDIF
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          MATCH     SP4,CARDHDPD
          IF        @EQUAL
            APPEND    "CN",PID003
          ELSE
            APPEND    CARDHDPD,PID003
          ENDIF
          APPEND    TILDA,PID003
.
.         Set Seniors card number, if one exists
.
          MOVE      FIVE,CARDTYPE                * set for seniors card type
          CALL      CONCD000                     * seniors conc card ?
          IF        EXIT = 1
            APPEND    BLANKSTR,PID003
          ELSE
            MOVE      DIM20,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID003
          ENDIF
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          MATCH     SP4,CARDHDPD
          IF        @EQUAL
            APPEND    "SEN",PID003
          ELSE
            APPEND    CARDHDPD,PID003
          ENDIF
          APPEND    TILDA,PID003
.
.         Set Chemotherapy card number, if one exists
.
          MOVE      BLANKSTR,ZXP057              * set default chemo card date
.
          MOVE      SIX,CARDTYPE                 * set for chemo card type
          CALL      CONCD000                     * chemo conc card ?
          IF        EXIT = 1
            APPEND    BLANKSTR,PID003
          ELSE
            MOVE      DIM20,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID003
          ENDIF
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          MATCH     SP4,CARDHDPD
          IF        @EQUAL
            APPEND    "CMO",PID003
          ELSE
            APPEND    CARDHDPD,PID003
          ENDIF
          APPEND    TILDA,PID003
.
.         Set NDIS card number, if one exists
.
          MOVE      BLANKSTR,ZXP060              * set default NDIS card date
.
          MOVE      SEVEN,CARDTYPE               * set for NDIS card type
          CALL      CONCD000                     * NDIS conc card ?
          IF        EXIT = 1
            APPEND    BLANKSTR,PID003
          ELSE
            MOVE      DIM20,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID003
          ENDIF
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          MATCH     SP4,CARDHDPD
          IF        @EQUAL
            APPEND    "NDS",PID003
          ELSE
            APPEND    CARDHDPD,PID003
          ENDIF
          APPEND    TILDA,PID003
.
.         Set Ambulance number, if one exists
.
          MOVE      EIGHT,CARDTYPE               * set for AMB card type
          CALL      CONCD000                     * AMB conc card ?
          IF        EXIT = 1
            APPEND    BLANKSTR,PID003
          ELSE
            MOVE      DIM20,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID003
          ENDIF
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          MATCH     SP4,CARDHDPD
          IF        @EQUAL
            APPEND    "AMB",PID003
          ELSE
            APPEND    CARDHDPD,PID003
          ENDIF
.
.         Set MHSW Identifier, if parameter is turned on for sending
.
          MATCH     "1",PTCNMHSW                 * sending MHSW Identifier ?
          GOTO      WRPID050 IF NOT EQUAL        * no
.
          APPEND    TILDA,PID003
.
          MATCH     SP15,PMPXPRIS
          IF        @EQUAL
            APPEND    BLANKSTR,PID003
          ELSE
            MOVE      PMPXPRIS,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID003
          ENDIF
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    "MHSW",PID003
.
WRPID050  RESET     PID003
          SQUEEZE   PID003                       * remove blanks
.
.         Set Patient Name
.
          MOVE      PTMASNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PID005
          ENDSET    PID005
          APPEND    CARET,PID005
.
.         If using the NHI (NZ), source the patient's given names from nhimasaf
.
          IF        PTCNNHII = 1
            MOVE      NHMAGIV1,FIELDSTR
          ELSE
            MATCH     "1",PTCNUSGN               * using second given name ?
            IF        @EQUAL
              MOVE      PMPXFNAM,FIELDSTR        * yes
            ELSE
              MOVE      PGNAME,FIELDSTR          * no
            ENDIF
          ENDIF
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID005
          APPEND    CARET,PID005
.
          IF        PTCNNHII = 1
            MATCH     SP20,NHMAGIV2
            IF        @EQUAL
              APPEND    BLANKSTR,PID005
            ELSE
              MOVE      NHMAGIV2,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PID005
            ENDIF
          ELSE
            MATCH     "1",PTCNUSGN               * using second given name ?
            IF        @EQUAL
              MATCH     SP30,PMPXSNAM
              IF        @EQUAL
                APPEND    BLANKSTR,PID005
              ELSE
                MOVE      PMPXSNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,PID005
              ENDIF
            ENDIF
          ENDIF
          APPEND    CARET,PID005
          APPEND    CARET,PID005
          MOVE      PTITL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID005
          APPEND    CARET,PID005
          APPEND    CARET,PID005
          APPEND    "L",PID005
          RESET     PID005
.
.         Set Date of Birth
.
          MOVE      PBDATE,PID007                * set dob
.
          CALL      GTOBR000                     * get time or birth
.
          MOVE      PSEX,PID008                  * set patient sex
          MATCH     "1",PTCNGNDR                 * sending as stored ?
          IF        !@EQUAL
            CALL      GENDR000                   * get gender from Cat.G
          ENDIF
.
.         Set Aliases.
.         Write all the unique aliases to a temp file.  We don't want to
.         send aliases which are purely sex and/or DOB related with
.         no change in actual name.  PID.9 is only relevant to name aliases.
.
          MOVE      BLANKSTR,PID009              * default to no aliases
.
          PACK      KEY115,PURNO,SP70,SP70
          CALL      RSPTGSR1                     * position on U/R
WRPID051  CALL      RKPTGSR1                     * read next record
          BRANCH    OVRCD,WRPID053               * eof - no more aliases
.
          MATCH     PURNO,GSRURNO                * same patient still ?
          GOTO      WRPID053 IF NOT EQUAL        * no - no more aliases
.
          MATCH     GSRSNAM,PTMASNAM             * same surname ?
          GOTO      WRPID052 IF NOT EQUAL        * no - valid alias
.
          MATCH     GSRGNAM,PMPXFNAM             * same 1st given name ?
          GOTO      WRPID052 IF NOT EQUAL        * no - valid alias
.
          MATCH     PTGSGNM2,PMPXSNAM            * same 2nd given name ?
          GOTO      WRPID052 IF NOT EQUAL        * no - valid alias
.
          GOTO      WRPID051                     * not alias - ignore record
.
.         Check if the alias already exists on the temp file and if not,
.         write a new temp file record
.
WRPID052  PACK      KEY90,GSRSNAM,GSRGNAM,PTGSGNM2
          CALL      RDALIAS1                     * alias on temp file ?
          IF        OVRCD = 1
            MOVE      GSRSNAM,TEMPSNAM           * no
            MOVE      GSRGNAM,TEMPFGIV
            MOVE      PTGSGNM2,TEMPSGIV
            CALL      WRALIAS1                   * write temp file record
          ENDIF
.
          GOTO      WRPID051                     * get next alias record
.
.         Loop through the temp file and write aliases as repeating fields
.         to PID.9 for each record found.
.
WRPID053  MOVE      ZERO,COUNTER                 * initialise loop count
.
          PACK      KEY90,SP70,SP70
          CALL      RSALIAS1                     * position at start of file
WRPID054  CALL      RKALIAS1                     * read next record
          BRANCH    OVRCD,WRPID055               * eof - finished
.
          ADD       ONE,COUNTER                  * increment count
.
          MOVE      TEMPSNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          COMPARE   ONE,COUNTER                  * first alias ?
          IF        @EQUAL
            MOVE      FIELDSTR,PID009            * yes
            ENDSET    PID009
          ELSE
            APPEND    TILDA,PID009               * no
            APPEND    FIELDSTR,PID009
          ENDIF
.
          APPEND    CARET,PID009
          MOVE      TEMPFGIV,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID009
.
          APPEND    CARET,PID009
          MOVE      BLANKSTR,FIELDSTR
          MATCH     TEMPSGIV,SP70
          IF        !@EQUAL
            MOVE      TEMPSGIV,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,PID009
.0864505
          MATCH     "0",PTCNSNTY                 * sending name type ?
          IF        !@EQUAL
            APPEND    CARET,PID009
            APPEND    CARET,PID009
            APPEND    CARET,PID009
            APPEND    CARET,PID009
            APPEND    ANSA,PID009                * send name type = Alias
          ENDIF
.
          GOTO      WRPID054
.
WRPID055  COMPARE   ZERO,COUNTER
          GOTO      WRPID056 IF NOT EQUAL
.
          MATCH     "0",PTCNSNTY                 * sending name type ?
          IF        !@EQUAL
            ENDSET    PID009
            APPEND    CARET,PID009
            APPEND    BLANKSTR,PID009
            APPEND    CARET,PID009
            APPEND    BLANKSTR,PID009
            APPEND    CARET,PID009
            APPEND    CARET,PID009
            APPEND    CARET,PID009
            APPEND    CARET,PID009
            APPEND    ANSA,PID009                * send name type = Alias
          ENDIF
.
WRPID056  MATCH     "2",PTCNSNTY                 * sending preferred name ?
          GOTO      WRPID058 IF NOT EQUAL
.
          APPEND    TILDA,PID009
          MOVE      BLANKSTR,FIELDSTR
          MATCH     PMPXPFSN,SP70
          IF        !@EQUAL
            MOVE      PMPXPFSN,FIELDSTR          * preferred surname
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,PID009
.
          APPEND    CARET,PID009
          MOVE      BLANKSTR,FIELDSTR
          MATCH     PMPXPFGN,SP70
          IF        !@EQUAL
            MOVE      PMPXPFGN,FIELDSTR          * preferred given name
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,PID009
.
          APPEND    CARET,PID009
          APPEND    CARET,PID009
          APPEND    CARET,PID009
          APPEND    CARET,PID009
          APPEND    CARET,PID009
          APPEND    ANSD,PID009                  * send name type = Display
.
WRPID058  RESET     PID009
.0864505
.         Set Patient Race (Aboriginality)
.
          COMPARE   ONE,PTCNNHII                 * using NHI ?
          GOTO      WRPID080 IF EQUAL            * yes
.
          MOVE      BLANKSTR,PID010              * set default to blank
.
          MATCH     SP3,PMPXABRG                 * aboriginality blank ?
          GOTO      WRPID080 IF EQUAL            * yes - use blank default
.
          IF        PTCNHDPS = 6
            MOVE      FOUR,PID010                * WA default value
          ELSE
            MOVE      NINE,PID010                * other states default value
          ENDIF
          ENDSET    PID010
          APPEND    CARET,PID010
          APPEND    INDDESC0,PID010
.
          PACK      KEY5,ANSV,ANSA,PMPXABRG
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,WRPID070               * no - use default
.
          MATCH     SP4,THCSCOD                  * blank HDP equivalent ?
          GOTO      WRPID070 IF EQUAL            * yes - use default
.
          IF        PTCNHDPS = 3 | PTCNHDPS = 5
            UNPACK    THCSCOD,ANS,ANS            * use char 2 of HDP (Vic/SA)
          ELSE
            MOVE      THCSCOD,ANS                * use char 1 of HDP
          ENDIF
          TYPE      ANS                          * numeric character ?
          GOTO      WRPID070 IF NOT EQUAL        * no - use default
.
.         If this is QLD, ACT, SA, TAS or NT, then HDP equivalent
.         should be set up to use NHDD codes already, so no mapping
.         is required.
.
          MOVE      ANS,FORM1
          IF        PTCNHDPS = 4 | PTCNHDPS = 5 | PTCNHDPS = 7 | PTCNHDPS = 8 | PTCNHDPS = 9
            IF        (FORM1 < 1 | FORM1 > 4) & FORM1 <> 9
              GOTO      WRPID070                 * use default
            ELSE
              GOTO      WRPID060
            ENDIF
          ENDIF
.
.         If this is NSW or VIC, then HDP equivalent should be set up
.         to use NHDD codes already, so no mapping is required.
.
          IF        PTCNHDPS = 2 | PTCNHDPS = 3
            IF        (FORM1 < 1 | FORM1 > 4) & FORM1 <> 8 & FORM1 <> 9
              GOTO      WRPID070                 * use default
            ELSE
              GOTO      WRPID060
            ENDIF
          ENDIF
.
.         If this is WA, map HDP Equivalent to the NHDD subset.
.
          IF        PTCNHDPS = 6
            MOVE      FOUR,PID010                * reset WA default value
            ENDSET    PID010
            APPEND    CARET,PID010
            APPEND    "Other",PID010
            IF        FORM1 <> 1 & FORM1 <> 2 & FORM1 <> 3
              GOTO      WRPID070                 * use default
            ELSE
              GOTO      WRPID060
            ENDIF
          ENDIF
.
WRPID060  MOVE      ANS,PID010
          ENDSET    PID010
          APPEND    CARET,PID010
          APPEND    TDESC,PID010
          RESET     PID010
          STRIP     PID010
          ENDSET    PID010
.
WRPID070  APPEND    CARET,PID010
          IF        PTCNHDPS = 6
            APPEND    "WA",PID010
          ELSE
            APPEND    "NHDD-01",PID010
          ENDIF
          RESET     PID010
.
.         Set patient address.
.         First check if we dealing with an Australian site or a NZ site,
.         as these are processed differently.
.
WRPID080  COMPARE   ONE,PTCNHDPS                 * NZ ?
          GOTO      WRPID100 IF NOT EQUAL        * no
.
.         State value is set for NZ.
.         Send mailing address first.
.
          MATCH     "0",PTCNNEWC
          IF        @EQUAL
            CALL      PSTAD000
          ELSE
            PACK      KEY14,PURNO,SP70
            CALL      RSPMCEX1
WRPID081    CALL      RKPMCEX1
            BRANCH    OVRCD,WRPID082
            MATCH     PURNO,PMCEURNO
            GOTO      WRPID082 IF NOT EQUAL
            MATCH     SP70,PMCETYPE
            GOTO      WRPID081 IF EQUAL
            MOVE      "tc",KEY2
            PACK      KEY5,KEY2,PMCETYPE
            CALL      RDCODE1
            BRANCH    OVRCD,WRPID081
            MATCH     "2",TCINDC1
            GOTO      WRPID083 IF EQUAL
            GOTO      WRPID081
WRPID082    CALL      CLPMSCEX
WRPID083    CALL      POTAD000
          ENDIF
.
          ENDSET    PID011
          APPEND    TILDA,PID011
.
          MOVE      PURNO,KEY8
          CALL      RDNHMAS2                     * NHI number on file ?
          BRANCH    OVRCD,WRPID090               * no
.
          MATCH     SP70,NHMAADD1                * NHI address line 1 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      NHMAADD1,FIELDSTR          * load NHI address line 1
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          APPEND    CARET,PID011 
.
          MATCH     SP70,NHMAADD2                * NHI address line 2 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      NHMAADD2,FIELDSTR          * load NHI address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          APPEND    CARET,PID011 
.
          MATCH     SP70,NHMAADD3                * NHI address line 3 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      NHMAADD3,FIELDSTR          * load NHI address line 3
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          APPEND    CARET,PID011 
.
          MATCH     SP70,NHMAADD4                * NHI address line 4 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      NHMAADD4,FIELDSTR          * load NHI address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          APPEND    CARET,PID011 
.
          MATCH     SP70,NHMADOMC                * NHI domicile line blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      NHMADOMC,FIELDSTR          * load NHI domicile
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          APPEND    CARET,PID011 
.
          MATCH     SP70,NHMAADD5                * NHI address line 5 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      NHMAADD5,FIELDSTR          * load NHI address line 5
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          GOTO      WRPID140
.
.         There is no NZ NHI master record for this U/R, so use PMI details
.
WRPID090  MATCH     SP70,PADD1                   * pt address line 1 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PADD1,FIELDSTR             * load pt address line 1
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          APPEND    CARET,PID011 
.
          MATCH     SP70,PADD2                   * pt address line 2 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PADD2,FIELDSTR             * load pt address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          APPEND    CARET,PID011 
.
          MATCH     SP70,PSUBRB                  * pt address line 3 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PSUBRB,FIELDSTR            * load pt address line 3
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          APPEND    CARET,PID011 
.
.         NZ uses "9999" in the postcode field for overseas address indicator
.
          MATCH     "9999    ",PPOST             * overseas NZ patient ?
          GOTO      WRPID095 IF NOT EQUAL        * no
.
.         This is an overseas NZ patient with no NHI record
.
          APPEND    BLANKSTR,PID011
          APPEND    CARET,PID011
          APPEND    "9999",PID011
          APPEND    CARET,PID011
.
          MATCH     SP70,PADD4                   * pt address line 4 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PADD4,FIELDSTR             * load pt address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          GOTO      WRPID140
.
.         This is a resident NZ patient with no NHI record
.
WRPID095  MATCH     SP70,PADD4                   * pt address line 4 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PADD4,FIELDSTR             * load pt address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          APPEND    CARET,PID011
.
          MATCH     SP8,PPOST                    * pt postcode blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PPOST,FIELDSTR             * load pt postcode
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
.
          APPEND    CARET,PID011
          APPEND    "NEW ZEALAND",PID011
          GOTO      WRPID140
.
.         State value is set for an Australia
.
WRPID100  MATCH     SP25,PADD1                   * address line 1 blank ?
          IF        @EQUAL
            PACK      PID011,TILDA,BLANKSTR      * yes
          ELSE
            MOVE      PADD1,FIELDSTR             * load address line 1
            CALL      SPCHR000                   * convert special characters
            PACK      PID011,TILDA,FIELDSTR
          ENDIF
.
          ENDSET    PID011
          APPEND    CARET,PID011 
.
          MATCH     SP25,PADD2                   * address line 2 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PADD2,FIELDSTR             * load address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
          APPEND    CARET,PID011 
.
.         We need to populate the remainder of the components based
.         one whether this is a local or an oversease address.
.         If the postcode is "8888", then this is an overseas address and
.         address line 4 will contain the country description.
.         If the postcode is not "8888", it may still be an overseas address
.         if the corresponding postcode (ibapostf) record has the state
.         (ibpostat) set to "OS".  In this case, the country description
.         will be contained in the suburb field.
.         Otherwise, the address is treated as a local address.
.
          MATCH     "8888",PPOST                 * overseas address ?
          GOTO      WRPID115 IF EQUAL            * yes
.
.         Given that an overseas address based on "OS" in the postcode
.         record, stores the country description in the suburb (PSUBRB),
.         then if the suburb is blank, it must either be a local address
.         or an overseas address based on an "8888" postcode.
.
          MATCH     SP30,PSUBRB                  * address line 3 blank ?
          GOTO      WRPID120 IF EQUAL            * yes
.
.         The suburb is populated, so if the postcode is not "8888", then
.         we need to see if it is an overseas address using the postcode record
.
          MATCH     PADD4,SP70                   * blank state ?
          GOTO      WRPID105 IF EQUAL            * yes
.
.         Check if the postcode/suburb/state combination is valid
.
          PACK      KEY45,PSUBRB,SP70
          PACK      KEY56,PPOST,KEY45,PADD4
          CALL      RDIBPOS1                     * pcode/suburb/state on file ?
          COMPARE   ZERO,OVRCD
          GOTO      WRPID110 IF EQUAL            * yes
.
.         Check if the postcode/suburb combination is valid
.
WRPID105  PACK      KEY56,PPOST,PSUBRB,SP70
          CALL      RDIBPOS1                     * postcode/suburb on file ?
          COMPARE   ZERO,OVRCD
          GOTO      WRPID110 IF EQUAL            * yes - valid
.
          CALL      RKIBPOS1                     * no - get next record
          BRANCH    OVRCD,WRPID125               * eof - set as local address
.
          MATCH     PPOST,IBPOPCOD               * same postcode still ?
          GOTO      WRPID125 IF NOT EQUAL        * no - set as local address
.
          MATCH     PSUBRB,IBPOSUBR              * same suburb still ?
          GOTO      WRPID125 IF NOT EQUAL        * no - set as local address
.
.         Check if this is an overseas address
.
WRPID110  MATCH     "OS ",IBPOSTAT               * overseas patient ?
          GOTO      WRPID125 IF NOT EQUAL        * no
.
          APPEND    BLANKSTR,PID011              * blank suburb
          APPEND    CARET,PID011
          APPEND    BLANKSTR,PID011              * blank address line 4
          APPEND    CARET,PID011
          APPEND    "8888",PID011                * blank postcode
          APPEND    CARET,PID011
          MOVE      PSUBRB,FIELDSTR              * load country
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID011
          GOTO      WRPID140
.
WRPID115  MATCH     SP30,PSUBRB                  * blank suburb ?
          GOTO      WRPID125 IF NOT EQUAL        * no
.
WRPID120  APPEND    BLANKSTR,PID011
          APPEND    CARET,PID011
          GOTO      WRPID130
.
WRPID125  MOVE      PSUBRB,FIELDSTR              * load address line 3
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID011
          APPEND    CARET,PID011
.
.         If the postcode is "8888", then this is an overseas address and
.         address line 4 will contain the country description
.
WRPID130  MATCH     "8888",PPOST                 * overseas address ?
          GOTO      WRPID135 IF NOT EQUAL        * no
.
          APPEND    BLANKSTR,PID011              * yes - blank address line 4
          APPEND    CARET,PID011
          APPEND    "8888",PID011                * blank postcode
          APPEND    CARET,PID011
          MOVE      PADD4,FIELDSTR               * load country
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID011
          GOTO      WRPID140
.
.         Not an overseas address, so send address line 4 & postcode as normal
.
WRPID135  MATCH     SP25,PADD4                   * address line 4 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PADD4,FIELDSTR             * load address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
          APPEND    CARET,PID011
.
          MATCH     SP4,PPOST                    * postcode blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PPOST,FIELDSTR             * load postcode
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
          APPEND    CARET,PID011
.
          COMPARE   ZERO,PTCNHDPS                * Australia or NZ ?
          GOTO      WRPID140 IF EQUAL            * no
.
.         Must be Australia, as NZ is handled above
.
          APPEND    "AUSTRALIA",PID011
.
WRPID140  APPEND    CARET,PID011
.
          MATCH     " ",PMPXSN18
          IF        @EQUAL
            APPEND    ANSC,PID011
          ENDIF
.
          MATCH     "0",PMPXSN18
          IF        @EQUAL
            APPEND    ANSC,PID011           * address type=C (home/phone                                      
          ENDIF                             * unsecured)
.
          MATCH     "1",PMPXSN18
          IF        @EQUAL
            APPEND    ANSS,PID011           * address type=S (home/phone
          ENDIF                             * secured)
.
          MATCH     "2",PMPXSN18
          IF        @EQUAL
            APPEND    ANSSA,PID011          * address type=SA (home/phone secured)
          ENDIF
.
          MATCH     "3",PMPXSN18
          IF        @EQUAL
            APPEND    ANSSP,PID011           * address type=SP (home/phone secured)
          ENDIF
.
          RESET     PID011
.
.         Set County Code (Domicile Code for NZ)
.
          IF        PTCNNHII = 1
            MOVE      BLANKSTR,PID012
            MATCH     SP4,NHMADOMC
            IF        !@EQUAL
              MOVE      NHMADOMC,FIELDSTR
              CALL      SPCHR000                   * convert special characters
              MOVE      FIELDSTR,PID012            * set county code
            ENDIF
          ENDIF
.         
.         Set Home Telephone
.           
.         Check if the parameter for sending Mobile phone and email is
.         turned on.  If so, we need to format the phone fields differently
.         to the standard format.
.         
          MATCH     "1",PTCNH7ME                 * parameter turned on ?
          GOTO      WRPID150 IF NOT EQUAL        * no - set phone normally
.
          MOVE      "^PRN^PH^",PID013
          ENDSET    PID013
          MATCH     SP80,PMPXPEML                * email address blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID013            * yes
          ELSE        
            MOVE      PMPXPEML,FIELDSTR          * no
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID013
          ENDIF
          APPEND    CARET,PID013
          APPEND    CARET,PID013
          APPEND    CARET,PID013
          MATCH     SP20,PTELEP                  * home phone blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID013
          ELSE
            MOVE      PTELEP,FIELDSTR            * no - load home phone
            CALL      SPCHR000                   * convert special characters
            SQUEEZE   FIELDSTR
            APPEND    FIELDSTR,PID013
          ENDIF
          APPEND    TILDA,PID013
          APPEND    CARET,PID013
          APPEND    CARET,PID013
          APPEND    "CP",PID013
          APPEND    CARET,PID013
          APPEND    CARET,PID013
          APPEND    CARET,PID013
          APPEND    CARET,PID013
          MATCH     SP20,PTMXCELL
          IF        @EQUAL
            APPEND    BLANKSTR,PID013
          ELSE
            MOVE      PTMXCELL,FIELDSTR          
            CALL      SPCHR000                   * convert special characters
            SQUEEZE   FIELDSTR
            APPEND    FIELDSTR,PID013
          ENDIF
          RESET     PID013
.           
.         Set Business Phone - non standard format
.         
          MOVE      "^WPN^PH^^^^",PID014
          ENDSET    PID014
          MATCH     SP20,PTELEB                  * business phone blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID014
          ELSE
            MOVE      PTELEB,FIELDSTR            * no - load business phone
            CALL      SPCHR000                   * convert special characters
            SQUEEZE   FIELDSTR
            APPEND    FIELDSTR,PID014
          ENDIF
          RESET     PID014
.
          GOTO      WRPID160
.
.         Set Home Telephone Number
.
WRPID150  MATCH     SP20,PTELEP                  * home phone blank ?
          IF        @EQUAL
            PACK      PID013,CARET,CARET,CARET,CARET,CARET,CARET,CARET,CARET:
                             BLANKSTR
          ELSE
            MOVE      PTELEP,FIELDSTR            * no - load home phone
            CALL      SPCHR000                   * convert special characters
            SQUEEZE   FIELDSTR
            PACK      PID013,CARET,CARET,CARET,CARET,CARET,CARET,CARET,CARET:
                             FIELDSTR
          ENDIF
.
.         Set Business Telephone Number
.
          MATCH     SP20,PTELEB                  * business phone blank ?
          IF        @EQUAL
            PACK      PID014,CARET,CARET,CARET,CARET,CARET,CARET,CARET,CARET:
                             BLANKSTR
          ELSE
            MOVE      PTELEB,FIELDSTR            * no - load work phone
            CALL      SPCHR000                   * convert special characters
            SQUEEZE   FIELDSTR
            PACK      PID014,CARET,CARET,CARET,CARET,CARET,CARET,CARET,CARET:
                             FIELDSTR
          ENDIF
.
.         Primary Language
.
WRPID160  MOVE      BLANKSTR,PID015
          MATCH     SP3,PMPXLNG1                 * language blank ?
          GOTO      WRPID170 IF EQUAL            * yes
.
          PACK      KEY5,ANSL,ANSA,PMPXLNG1
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,WRPID170               * no
.
          MATCH     SP4,THCSCOD                  * blank HDP Default ?
          GOTO      WRPID170 IF EQUAL            * yes
.
          MOVE      THCSCOD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PID015              * set language
          ENDSET    PID015
          APPEND    CARET,PID015
          MOVE      TDESC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID015
          APPEND    CARET,PID015
          APPEND    "NHDD-132",PID015
.         
          MATCH     "1",PTCNH7IN                 * sending Int. Req'd flag ?
          IF        @EQUAL
            APPEND    CARET,PID015               * yes
            MATCH     "1",PMPXINTR
            IF        @EQUAL
              APPEND    ANSY,PID015
            ELSE
              MATCH     "0",PMPXINTR
              IF        @EQUAL
                APPEND    ANSN,PID015
              ELSE
                APPEND    ANSU,PID015
              ENDIF
            ENDIF
          ENDIF
          RESET     PID015
          GOTO      WRPID200
.
.         Either the language was blank, the language code could
.         not be found on patcodes, or the HDP equivalent was blank,
.         so just send the interpreter flag if this is turned on.
.
WRPID170  MATCH     "1",PTCNH7IN                 * sending Int. Req'd flag ?
          GOTO      WRPID200 IF NOT EQUAL        * no
.
          ENDSET    PID015                       * yes
          APPEND    CARET,PID015
          APPEND    CARET,PID015
          APPEND    CARET,PID015
          MATCH     "1",PMPXINTR
          IF        @EQUAL
            APPEND    ANSY,PID015
          ELSE
            MATCH     "0",PMPXINTR
            IF        @EQUAL
              APPEND    ANSN,PID015
            ELSE
              APPEND    ANSU,PID015
            ENDIF
          ENDIF
          RESET     PID015
.
.         Marital Status - use HL7 values mapped from indicator 2 (Category M)
.
.         HL7 values                      NHDD values (Indicator 2)
.         ------------------------------- -----------------------------------
.         S = Single                      1 
.         W = Widowed                     2
.         D = Divorced                    3
.         A = Separated                   4
.         X = Separated (NZ only)         4
.         M = Married                     5
.         U = Unknown                     6
.         P = Partner                     7
.         F = Defacto                     8
.         C = Civil Union                 9
.
WRPID200  MATCH     SP3,PMSTAT                   * marital status blank ?
          IF        !@EQUAL
            PACK      KEY5,ANSM,SP1,PMSTAT       * no
            CALL      RDCODE1
            IF        OVRCD = 0
              MATCH     SP1,TCINDC2              * indicator 2 blank ?
              IF        !@EQUAL
                MOVE      TCINDC2,ANS            * no
                TYPE      ANS                    * value numeric ?
                GOTO      WRPID400 IF NOT EQUAL  * no
.
                MOVE      ANS,FORM1
                COMPARE   ONE,FORM1              * zero ?
                GOTO      WRPID400 IF LESS       * yes - ignore
.
.               NZ uses indicator 2 values 1-9, while non-NZ sites use 1-6.
.
                IF        PTCNNHII = 1 & FORM1 > 9 | PTCNNHII = 0 & FORM1 > 6
                  GOTO      WRPID400
                ENDIF
                IF        PTCNNHII = 1
                  REP       "1S2W3D4X5M6U7P8F9C",ANS     * NZ Only
                ELSE
                  REP       "1S2W3D4A5M6U",ANS           * non-NZ
                ENDIF
                MOVE      ANS,PID016             * set patient marital status
              ENDIF
            ENDIF
          ENDIF
.
.         If marital status code not found, then use default value of "U".
.
WRPID400  MOVELPTR  PID016,FORM3
          IF        FORM3 = 0
            MOVE      ANSU,PID016                * set to default value
          ENDIF
          ENDSET    PID016
          APPEND    CARET,PID016
          IF        FORM3 = 0
            APPEND    "Unknown",PID016
          ELSE
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID016
          ENDIF
          APPEND    CARET,PID016
          APPEND    "HL70002",PID016
          RESET     PID016
.
.         Set Patient Religion
.
          MOVE      BLANKSTR,PID017              * yes
          MATCH     SP3,PREG                     * religion blank ?
          IF        !@EQUAL
            MOVE      PREG,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PID017            * set religion
            ENDSET    PID017
            APPEND    CARET,PID017
            PACK      KEY5,ANSR,SP1,PREG
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PID017
            ENDIF
            APPEND    CARET,PID017
            APPEND    "webPAS",PID017
            RESET     PID017
          ENDIF
.
.         If this is a Alternate message type (Axx) for A31, then we need
.         to set the visit number in PID-18, otherwise, if not, then ignore
.         setting this field
.
          IF        MESSNUMB = 22 & A08XFLAG = 1
            GOTO      WRPID500
          ENDIF
.
.         Populate patient account no if this is a visit related message
.         (not A28, A31-excluding Axx, or A34)
.
          BRANCH    MESSNUMB,WRPID500:           * admission
                             WRPID500:           * transfer
                             WRPID500:           * discharge (ADT)
                             WRPID500:           * discharge (Emergency)
                             WRPID500:           * O/P attendance
                             WRPID500:           * Emergency attendance
                             WRPID500:           * new O/P booking
                             WRPID500:           * ADT update
                             WRPID500:           * O/P update
                             WRPID500:           * Emergency update
                             WRPID500:           * cancel admit
                             WRPID500:           * cancel O/P attendance
                             WRPID500:           * cancel Emergency attendance
                             WRPID500:           * cancel transfer
                             WRPID500:           * cancel I/P discharge
                             WRPID500:           * cancel ED discharge
                             WRPID500:           * pre-admit
                             WRPID500:           * on-leave
                             WRPID500:           * return from leave
                             WRPID500:           * cancel preadmit
                             WRPID600:           * register pmi
                             WRPID600:           * update pmi
                             WRPID600:           * merge
                             WRPID500:           * cancel O/P booking
                             WRPID500:           * change U/R for I/P visit
                             WRPID500:           * change U/R for O/P visit
                             WRPID500:           * change U/R for EMR visit
                             WRPID999:           * HCP Master File
                             WRPID600:           * add new theatre booking
                             WRPID600:           * change theatre booking
                             WRPID600:           * cancel theatre booking
                             WRPID500:           * add A/H referral
                             WRPID500:           * modify A/H referral
                             WRPID500:           * cancel A/H referral
                             WRPID500:           * add A/H encounter
                             WRPID500:           * modify A/H encounter
                             WRPID500:           * cancel A/H encounter
                             WRPID500:           * W/L booking
                             WRPID500:           * W/L booking update
                             WRPID500:           * W/L cancel booking
                             WRPID999:           * OUT Master File
                             WRPID500:           * change U/R for W/L visit
                             WRPID500:           * W/L transfer
                             WRPID500:           * O/P discharge
                             WRPID500:           * Cancel O/P discharge
                             WRPID500:           * change U/R for A/H referral
                             WRPID500:           * Add W/L entry
                             WRPID500:           * Update W/L entry
                             WRPID500:           * Remove W/L entry
                             WRPID600            * PMI UnMerge
.
WRPID500  MOVE      VISNUMBR,PID018
          SQUEEZE   PID018
.
.         Load Mother's Identifier (PID.21)
.
WRPID600  CALL      GLINK000                     * check for mother/child link
.
.         If using the NHI (NZ), then populate Ethnic Group from nhimasaf fields
.
          IF        PTCNNHII = 1
            MATCH     SP5,NHMAETH                * first ethnicity blank ?
            IF        @EQUAL
              MOVE      BLANKSTR,PID022          * yes
              GOTO      WRPID700
            ELSE
              MOVE      NHMAETH,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PID022
              ENDSET    PID022
              APPEND    CARET,PID022
              MOVE      NHMAETH,KEY5
              CALL      RDNHETH1
              IF        OVRCD = 0
                MOVE      NHETDES,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,PID022
              ENDIF
              APPEND    CARET,PID022
              APPEND    "NZHIS",PID022
            ENDIF
.
            MATCH     SP5,NHMAETH2               * ethnicity 2 blank ?
            GOTO      WRPID650 IF EQUAL          * yes
.
            APPEND    TILDA,PID022
            MOVE      NHMAETH2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID022
            APPEND    CARET,PID022
            MOVE      NHMAETH2,KEY5
            CALL      RDNHETH1
            IF        OVRCD = 0
              MOVE      NHETDES,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PID022
            ENDIF
            APPEND    CARET,PID022
            APPEND    "NZHIS",PID022
.
            MATCH     SP5,NHMAETH3               * ethnicity 3 blank ?
            GOTO      WRPID650 IF EQUAL          * yes
.
            APPEND    TILDA,PID022
            MOVE      NHMAETH3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID022
            APPEND    CARET,PID022
            MOVE      NHMAETH3,KEY5
            CALL      RDNHETH1
            IF        OVRCD = 0
              MOVE      NHETDES,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PID022
            ENDIF
            APPEND    CARET,PID022
            APPEND    "NZHIS",PID022
.
WRPID650    RESET     PID022
          ENDIF
.
WRPID700  MOVE      BLANKSTR,PID023              * no COB
          MATCH     SP3,PCONT                    * COB blank ?
          IF        !@EQUAL
            PACK      KEY5,ANSC,SP1,PCONT        * no
            CALL      RDCODE1
            IF        OVRCD = 0
              MATCH     SP4,THCSCOD
              IF        !@EQUAL
                MOVE      THCSCOD,FIELDSTR
                CALL      SPCHR000               * convert special characters
                MOVE      FIELDSTR,PID023
              ENDIF
            ENDIF
          ENDIF
.
. Multiple birth details
.
          CALL      MLTBIR00   
.
.         Set Citizenship
.
          MOVE      BLANKSTR,PID026
          MATCH     SP3,PTYPE
          IF        !@EQUAL
            PACK      KEY5,ANST,SP1,PTYPE
            CALL      RDCODE1
            IF        OVRCD = 0
              MATCH     SP1,TCINDC1
              IF        !@EQUAL
                TYPE      TCINDC1
                IF        @EQUAL
                  IF        PTCNNHII = 1
                    MATCH     "1",TCINDC1
                    IF        @EQUAL
                      MOVE      ANSY,PID026      * map for NZ
                    ENDIF
                    MATCH     "2",TCINDC1
                    IF        @EQUAL
                      MOVE      ANSN,PID026      * map for NZ
                    ENDIF
                  ELSE
                    MOVE      TCINDC1,PID026     * use value in tcindc1 for AUS
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
.         Set Veterans Military Status (DVA Card Colour)
.
          MOVE      BLANKSTR,PID027
.
.         If a DVA Concession Card was found, use this to populate PID.27
.
          MATCH     SP3,DVCOLOUR                 * card colour code blank ?
          GOTO      WRPID800 IF EQUAL            * yes
.
          PACK      KEY5,ANSD,ANSX,DVCOLOUR
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,WRPID800               * no
.
          MATCH     ANSG,THCSCOD                 * gold card ?
          GOTO      WRPID750 IF EQUAL            * yes
.
          MATCH     ANSW,THCSCOD                 * no - white card ?
          GOTO      WRPID750 IF EQUAL            * yes
.
          MATCH     ANSO,THCSCOD                 * no - orange card ?
          GOTO      WRPID800 IF NOT EQUAL        * no
.
WRPID750  MOVE      THCSCOD,ANS
          MOVE      ANS,PID027
          ENDSET    PID027
          APPEND    CARET,PID027
          APPEND    TDESC,PID027
          RESET     PID027
          STRIP     PID027
          ENDSET    PID027
          APPEND    CARET,PID027
          APPEND    "DVA",PID027
          RESET     PID027
.
.         Set Patient Nationality (Resident Status)
.
WRPID800  MOVE      BLANKSTR,PID028
          MATCH     SP3,PTYPE                    * patient type blank ?
          IF        !@EQUAL
            MOVE      PTYPE,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PID028            * set patient type
            ENDSET    PID028
            APPEND    CARET,PID028
            PACK      KEY5,ANST,SP1,PTYPE
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PID028
            ENDIF
            APPEND    CARET,PID028
            IF        PTCNNHII = 1
              APPEND    "NHI-A0024",PID028
            ELSE
              APPEND    "webPAS",PID028
            ENDIF
            RESET     PID028
          ENDIF
.
          MATCH     SP8,PDECDTE                  * deceased date blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,PID029            * yes
          ELSE
            MOVE      PDECDTE,PID029             * no - set date of death
          ENDIF
.
.         Set Patient Deceased Indicator
.
          COMPARE   ONE,PCEASE                   * death indicator set ?
          IF        @EQUAL
            MOVE      ANSY,PID030                * yes
          ELSE
            MOVE      ANSN,PID030                * no
          ENDIF
.
          PACK      SEGSTRNG,ANSP,ANSI,ANSD,PIPE:
                             PID001,PIPE,PID002,PIPE,PID003,PIPE,PID004,PIPE:
                             PID005,PIPE,PID006,PIPE,PID007,PIPE,PID008,PIPE:
                             PID009,PIPE,PID010,PIPE,PID011,PIPE,PID012,PIPE:
                             PID013,PIPE,PID014,PIPE,PID015,PIPE,PID016,PIPE:
                             PID017,PIPE,PID018,PIPE,PID019,PIPE,PID020,PIPE:
                             PID021,PIPE,PID022,PIPE,PID023,PIPE,PID024,PIPE:
                             PID025,PIPE,PID026,PIPE,PID027,PIPE,PID028,PIPE:
                             PID029,PIPE,PID030,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRPID910:               * connection lost
                         WRPID920                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      WRPID999
.
WRPID910  MOVE      ONE,EXIT
          GOTO      WRPID999
.
WRPID920  MOVE      TWO,EXIT
.
WRPID999  RETURN
.
.---------------------------------------------------------------------------
. Get current multiple birth details from patatraf with type 022
. Input : PURNO    - UR Number
. Output: PID024   - Flag Y/N to indicate if multiple Birth details exist
.         PID025   - Multiple birth order
.         MULTBTYP - Multiple birth Type of Birth (for ZXP.69)
.---------------------------------------------------------------------------
MLTBIR00  MOVE      "N",PID024                   * default to 'N'
          MOVE      BLANKSTR,PID025              * default to '""'
          PACK      DIM8,SP7,ZERO
          MOVE      SP3,MULTBTYP
.
          PACK      KEY35,PURNO,DIM8,ATYPE022,Z70
          CALL      RSPTATR3
MLTBIR20  CALL      RPPTATR3
          BRANCH    OVRCD,MLTBIR99
.
          MATCH     PURNO,PTARURNO
          GOTO      MLTBIR99 IF NOT EQUAL
.
          MATCH     DIM8,PTARVISN
          GOTO      MLTBIR99 IF NOT EQUAL
.
          MATCH     ATYPE022,PTARTYPE
          GOTO      MLTBIR99 IF NOT EQUAL
.
          MATCH     "1",PTARDELR
          GOTO      MLTBIR20 IF EQUAL
.
          MATCH     SP70,PTARFDTE
          GOTO      MLTBIR20 IF NOT EQUAL
.
          MATCH     SP70,PTARFTME
          GOTO      MLTBIR20 IF NOT EQUAL
.
          MOVE      "Y",PID024
          MOVE      PTARVAL1,PID025
          MOVE      PTARCOD1,MULTBTYP
          STRIP     PID025
.
MLTBIR99  RETURN
+
.*****************************************************************************
.*                           WRNK1000              Called by: A01A0000       *
.*                  Write Next of Kin segment                 A05O0000       *
.* Returns:  EXIT  0 = Segment sent ok                        A08A0000       *
.*                 1 = Connection lost                        A05O0000       *
.*                 2 = Timeout                                A13A0000       *
.*                                                            A13E0000       *
.*                                                            A14A0000       *
.*                                                            A28P0000       *
.*                                                            A31P0000       *
.*****************************************************************************
.
.         Check if we are sending NoK details from pmscexaf
.
WRNK1000  MATCH     "1",PTCNNEWC
          IF        @EQUAL
            CALL      SPNK1000                   * sending from pmscexaf
            GOTO      WRNK1999
          ENDIF
.
          MATCH     "2",PTCNNNK1                 * sending all old contacts
          IF        @EQUAL
            CALL      ALNK1000
            GOTO      WRNK1999
          ENDIF
.
.         Not sending NoK from pmscexaf.
.         If there is no data in the NK1 segment of an A28 message, then check
.         the parameter to see if we still need to send the segment.
.
          MATCH     "1",PTCNNNK1                 * sending non-compliant NK1 ?
          IF        !@EQUAL
            IF        MESSNUMB = 21
              MATCH     SP20,PNKNAME             * NOK name blank ?
              GOTO      WRNK1100 IF NOT EQUAL    * no
.
              MATCH     SP10,PNKRELP             * NOK relationship blank ?
              GOTO      WRNK1100 IF NOT EQUAL    * no
.
              MATCH     SP25,PNKADD1             * NoK address line 1 blank ?
              GOTO      WRNK1100 IF NOT EQUAL    * no
.
              MATCH     SP25,PNKADD2             * NoK address line 1 blank ?
              GOTO      WRNK1100 IF NOT EQUAL    * no
.
              MATCH     SP15,PNKSUBR             * NoK suburb blank ?
              GOTO      WRNK1100 IF NOT EQUAL    * no
.
              MATCH     SP25,PNKADD4             * NoK address line 4 blank ?
              GOTO      WRNK1100 IF NOT EQUAL    * no
.
              MATCH     SP4,PNKPOST              * NoK postcode blank ?
              GOTO      WRNK1100 IF NOT EQUAL    * no
.
              MATCH     SP20,PNKTELP             * NOK Home Phone blank ?
              GOTO      WRNK1100 IF NOT EQUAL    * no
.
              MATCH     SP20,PNKTELB             * NOK Bus. Phone blank ?
              GOTO      WRNK1100 IF NOT EQUAL    * no
.
              MATCH     SP20,PTMXECNM            * Emerg. contact name blank ?
              GOTO      WRNK1100 IF NOT EQUAL    * no
.
              MATCH     SP20,PTMXECPP            * Emer. Contact Phone blank ?
              GOTO      WRNK1100 IF NOT EQUAL    * no
.
              GOTO      WRNK1900                 * no data, so don't send NK1
            ENDIF
          ENDIF
.
WRNK1100  MOVE      "NK1",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [NK1] segment",*R,*N;
          ENDIF
.
          CALL      CLNK1000                     * clear NK1 fields
.
          MOVE      ONE,NK1001                   * set NoK id
.
          MATCH     SP20,PNKNAME                 * NOK name blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,NK1002            * yes
          ELSE
            MOVE      PNKNAME,FIELDSTR
            CALL      SPCHR000                   * no-convert special characters
            MOVE      FIELDSTR,NK1002            * set NoK name
          ENDIF
.
.         Load Relationship (NK1.3)
.
          MOVE      BLANKSTR,NK1003              * set default as blank
          MATCH     SP10,PNKRELP                 * NOK relationship blank ?
          GOTO      WRNK1110 IF NOT EQUAL        * no
.
          MATCH     "1",PTCNNNK1                 * sending non-compliant NK1 ?
          GOTO      WRNK1150 IF NOT EQUAL        * no
.
          PACK      NK1003,CARET,BLANKSTR        * yes
          GOTO      WRNK1150
.
WRNK1110  MOVE      PNKRELP,FIELDSTR             * non-blank relationship
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,NK1003              * set NoK relationship
.
          ENDSET    NK1003
          APPEND    CARET,NK1003
.
          MOVE      PNKRELP,KEY10
          CALL      RDPMREL1                     * relationship code on file ?
          BRANCH    OVRCD,WRNK1120               * no
.
          MATCH     SP30,PMRLDESC                * yes - blank description ?
          GOTO      WRNK1120 IF EQUAL            * yes
.
          MOVE      PMRLDESC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,NK1003
          GOTO      WRNK1130
.
WRNK1120  APPEND    BLANKSTR,NK1003
WRNK1130  APPEND    CARET,NK1003
          APPEND    "webPAS",NK1003
          RESET     NK1003
.
.         Set NoK address
.
.         If no address details are entered, then set field to blank if
.         using Singapore check digit
.
WRNK1150  MATCH     "1",PTCNNNK1                 * sending non-compliant NK1 ?
          IF        !@EQUAL
            MATCH     SP25,PNKADD1               * NoK address line 1 blank ?
            IF        @EQUAL
              MATCH     SP25,PNKADD2             * NoK address line 1 blank ?
              IF        @EQUAL
                MATCH     SP15,PNKSUBR           * NoK suburb blank ?
                IF        @EQUAL
                  MATCH     SP25,PNKADD4         * NoK address line 4 blank ?
                  IF        @EQUAL
                    MATCH     SP4,PNKPOST        * NoK postcode blank ?
                    IF        @EQUAL
                      MOVE      BLANKSTR,NK1004
                      GOTO      WRNK1200
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
.         There is address data, so format NK1-04
.
          MATCH     SP25,PNKADD1                 * NoK address line 1 blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,NK1004            * yes
          ELSE
            MOVE      PNKADD1,FIELDSTR           * load address line 1
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,NK1004
          ENDIF
          ENDSET    NK1004
          APPEND    CARET,NK1004
.
          MATCH     SP25,PNKADD2                 * NoK address line 2 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1004            * yes
          ELSE
            MOVE      PNKADD2,FIELDSTR           * load address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1004
          ENDIF
          APPEND    CARET,NK1004
.
          MATCH     SP15,PNKSUBR                 * NoK suburb blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1004            * yes
          ELSE
            MOVE      PNKSUBR,FIELDSTR           * load address line 3
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1004
          ENDIF
          APPEND    CARET,NK1004
.
          MATCH     SP25,PNKADD4                 * NoK address line 4 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1004            * yes
          ELSE
            MOVE      PNKADD4,FIELDSTR           * load address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1004
          ENDIF
          APPEND    CARET,NK1004
.
          MATCH     SP4,PNKPOST                  * NoK postcode blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1004            * yes
          ELSE
            MOVE      PNKPOST,FIELDSTR           * load postcode
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1004
          ENDIF
          APPEND    CARET,NK1004
          APPEND    CARET,NK1004
          APPEND    "C",NK1004                   * address type=C (home)
          RESET     NK1004
.
WRNK1200  MATCH     SP20,PNKTELP                 * NOK Home Phone blank ?
          IF        @EQUAL
            PACK      NK1005,CARET,CARET,CARET,CARET,CARET,CARET,CARET,CARET:
                             BLANKSTR
          ELSE
            MOVE      PNKTELP,FIELDSTR           * no - load NoK home phone
            CALL      SPCHR000                   * convert special characters
            SQUEEZE   FIELDSTR
            PACK      NK1005,CARET,CARET,CARET,CARET,CARET,CARET,CARET,CARET:
                             FIELDSTR
          ENDIF
.
          MATCH     SP20,PNKTELB                 * NOK Work Phone blank ?
          IF        @EQUAL
            PACK      NK1006,CARET,CARET,CARET,CARET,CARET,CARET,CARET,CARET:
                             BLANKSTR
          ELSE
            MOVE      PNKTELB,FIELDSTR           * no - load NoK work phone
            CALL      SPCHR000                   * convert special characters
            SQUEEZE   FIELDSTR
            PACK      NK1006,CARET,CARET,CARET,CARET,CARET,CARET,CARET,CARET:
                             FIELDSTR
          ENDIF
.
          MATCH     SP20,PTMXECNM                * Emerg. contact name blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,NK1030            * yes
          ELSE
            MOVE      PTMXECNM,FIELDSTR
            CALL      SPCHR000                   * no-convert special characters
            MOVE      FIELDSTR,NK1030            * set Emer. contact  name
          ENDIF
.
          MATCH     SP20,PTMXECPP                * Emer. Contact Phone blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,NK1031            * yes
          ELSE
            MOVE      PTMXECPP,FIELDSTR          * no - load Emer. contact phone
            CALL      SPCHR000                   * convert special characters
            SQUEEZE   FIELDSTR
            PACK      NK1031,CARET,CARET,CARET,CARET,CARET,CARET,CARET,CARET:
                             FIELDSTR
          ENDIF
.
.         Set Emergency contact address
.
.         If no address details are entered, then set field to blank if
.         using Singapore check digit
.
          MATCH     "1",PTCNNNK1                 * sending non-compliant NK1 ?
          IF        !@EQUAL
            MATCH     SP35,PTMXECA1              * Contact addr. line 1 blank ?
            IF        @EQUAL
              MATCH     SP35,PTMXECA2            * Contact addr. line 2 blank ?
              IF        @EQUAL
                MATCH     SP35,PTMXECA3          * Contact addr. line 3 blank ?
                IF        @EQUAL
                  MATCH     SP35,PTMXECA4        * Contact addr. line 4 blank ?
                  IF        @EQUAL
                    MATCH     SP8,PTMXECPC       * Contact postcode blank ?
                    IF        @EQUAL
                      MOVE      BLANKSTR,NK1032
                      GOTO      WRNK1800
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
.         There is address data, so format NK1-32
.
          MATCH     SP35,PTMXECA1                * Contact addr. line 1 blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,NK1032            * yes
          ELSE
            MOVE      PTMXECA1,FIELDSTR          * load contact address line 1
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,NK1032
          ENDIF
          ENDSET    NK1032
          APPEND    CARET,NK1032
.
          MATCH     SP35,PTMXECA2                * Contact addr. line 2 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * yes
          ELSE
            MOVE      PTMXECA2,FIELDSTR          * load contact address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032
          ENDIF
          APPEND    CARET,NK1032
.
          MATCH     SP35,PTMXECA3                * Contact addr. line 3 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * yes
          ELSE
            MOVE      PTMXECA3,FIELDSTR          * load contact address line 3
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032
          ENDIF
          APPEND    CARET,NK1032
.
          MATCH     SP35,PTMXECA4                * Contact addr. line 4 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * yes
          ELSE
            MOVE      PTMXECA4,FIELDSTR          * load contact address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032            
          ENDIF
          APPEND    CARET,NK1032
.
          MATCH     SP8,PTMXECPC                 * Contact postcode blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * yes
          ELSE
            MOVE      PTMXECPC,FIELDSTR          * load contact postcode
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032
          ENDIF
          APPEND    CARET,NK1032
          APPEND    CARET,NK1032
          APPEND    "C",NK1032                   * address type=C (home)
          RESET     NK1032
.
WRNK1800  PACK      SEGSTRNG,ANSN,ANSK,ONE,PIPE:
                             NK1001,PIPE,NK1002,PIPE,NK1003,PIPE,NK1004,PIPE:
                             NK1005,PIPE,NK1006,PIPE,NK1007,PIPE,NK1008,PIPE:
                             NK1009,PIPE,NK1010,PIPE,NK1011,PIPE,NK1012,PIPE:
                             NK1013,PIPE,NK1014,PIPE,NK1015,PIPE,NK1016,PIPE:
                             NK1017,PIPE,NK1018,PIPE,NK1019,PIPE,NK1020,PIPE:
                             NK1021,PIPE,NK1022,PIPE,NK1023,PIPE,NK1024,PIPE:
                             NK1025,PIPE,NK1026,PIPE,NK1027,PIPE,NK1028,PIPE:
                             NK1029,PIPE,NK1030,PIPE,NK1031,PIPE,NK1032,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRNK1910:               * connection lost
                         WRNK1920                * timeout
.
WRNK1900  MOVE      ZERO,EXIT
          GOTO      WRNK1999
.
WRNK1910  MOVE      ONE,EXIT
          GOTO      WRNK1999
.
WRNK1920  MOVE      TWO,EXIT
.
WRNK1999  RETURN
+
.*****************************************************************************
.*                             ALNK1000            Called by: WRNK1000       *
.*   Send a separate NK1 segment for each of the old contact types for the   *
.*   U/R                                                                     *
.*   - Mother's details (pmspx2af)                                           *
.*   - Father's details (pmspx2af)                                           *
.*   - Next of Kin (patma1af/pmspx2af)                                       *
.*   - Emergency Contact details (patmx1af/pmspx2af)                         *
.*   - Nearest Relative details (patmx1af/pmspx2af)                          *
.*****************************************************************************
.
ALNK1000  MOVE      "NK1",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [NK1] segment",*R,*N;
          ENDIF
.
.         Now send all the current contacts for the patient in the following
.         sequence:
.            1 = Mother's Contact Details
.            2 = Father's Contact Details
.            3 = NoK Contact Details
.            4 = Emergency Contact Details
.            5 = Nearest Relative Contact Details
.
          MOVE      ZERO,COUNTER                 * initialise counter
.
ALNK1100  COMPARE   COUNTER,FOUR                 * final contact processed ?
          GOTO      ALNK1900 IF LESS             * yes - finished
.
.         Load the next contact field
.
          CALL      CLNK1000                     * clear NK1 fields
.
.         Load Set ID (NK1.1)
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,NK1001               * set id
          SQUEEZE   NK1001
.
.         Load Relationship (NK1.3)
.
          MOVE      BLANKSTR,NK1003              * set default as blank
          LOAD      DIM10,COUNTER,PMPXMREL,PMPXFREL,PNKRELP,PTMXECRE,PTMXNRRE
          MATCH     SP10,DIM10                   * relationship blank ?
          GOTO      ALNK1200 IF EQUAL            * yes
.
          MOVE      DIM10,FIELDSTR               * relationship code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,NK1003
          ENDSET    NK1003
          APPEND    CARET,NK1003
.
          MOVE      DIM10,KEY10
          CALL      RDPMREL1                     * relationship on file ?
          IF        OVRCD = 0
            MOVE      PMRLDESC,FIELDSTR          * yes -relationship description
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1003
          ELSE
            APPEND    BLANKSTR,NK1003            * set default as blank
          ENDIF
.
          APPEND    CARET,NK1003
          APPEND    "webPAS",NK1003
          RESET     NK1003
.
.         Load Contact Role (NK1.7)
.
ALNK1200  BRANCH    COUNTER,ALNK1210:            * mother's details
                            ALNK1220:            * father's details
                            ALNK1230:            * next of kin
                            ALNK1240:            * emergency contact
                            ALNK1250             * nearest relative
.
ALNK1210  MOVE      "MO",NK1007
          ENDSET    NK1007
          APPEND    CARET,NK1007
          APPEND    "Mother",NK1007
          GOTO      ALNK1290
.
ALNK1220  MOVE      "FA",NK1007
          ENDSET    NK1007
          APPEND    CARET,NK1007
          APPEND    "Father",NK1007
          GOTO      ALNK1290
.
ALNK1230  MOVE      "NK",NK1007
          ENDSET    NK1007
          APPEND    CARET,NK1007
          APPEND    "Next of Kin",NK1007
          GOTO      ALNK1290
.
ALNK1240  MOVE      "EC",NK1007
          ENDSET    NK1007
          APPEND    CARET,NK1007
          APPEND    "Emergency Contact",NK1007
          GOTO      ALNK1290
.
ALNK1250  MOVE      "NR",NK1007
          ENDSET    NK1007
          APPEND    CARET,NK1007
          APPEND    "Nearest Relative",NK1007
.
ALNK1290  APPEND    CARET,NK1007
          APPEND    "webPAS",NK1007
          RESET     NK1007
.
.         Load Contact Reason (NK1.29)
.         We are using this field to transmit correspondence flag
.
          LOAD      DIM1,COUNTER,PMPXMCRP,PMPXFCRP,PMPXKCRP,PMPXCCRP,PMPXRCRP
          REP       " N0N1Y",DIM1
          MOVE      DIM1,NK1029                  * load correspondence flag
          ENDSET    NK1029
          APPEND    CARET,NK1029
          MATCH     ANSY,DIM1
          IF        @EQUAL
            APPEND    "Yes",NK1029
          ELSE
            APPEND    "No",NK1029
          ENDIF
          APPEND    CARET,NK1029
          APPEND    "webPAS",NK1029
.
.         Load Legal Guardian
.
          LOAD      DIM1,COUNTER,PMPXAUF1,PMPXAUF2,PMPXAUF3,PMPXAUF4,PMPXAUF5
          MATCH     SP70,DIM1
          GOTO      ALNK1295 IF EQUAL
.
          REP       " N0N1Y",DIM1
          APPEND    TILDA,NK1029
          APPEND    DIM1,NK1029
          APPEND    CARET,NK1029
          MATCH     ANSY,DIM1
          IF        @EQUAL
            APPEND    "Yes",NK1029
          ELSE
            APPEND    "No",NK1029
          ENDIF
          APPEND    CARET,NK1029
          APPEND    "LegalGuardian",NK1029
ALNK1295  RESET     NK1029
.
.         Load Contact Person's Name (NK1.30)
.
          LOAD      DIM20,COUNTER,PMPXMSNA,PMPXFSNA,PNKNAME,PTMXECNM,PTMXNRNM
          MATCH     SP20,DIM20
          IF        @EQUAL
            MOVE      BLANKSTR,NK1030
          ELSE
            MOVE      DIM20,FIELDSTR             * surname
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,NK1030
          ENDIF
.
          COMPARE   THREE,COUNTER
          GOTO      ALNK1300 IF NOT LESS
.
          ENDSET    NK1030
          APPEND    CARET,NK1030
.
          LOAD      DIM25,COUNTER,PMPXMGNA,PMPXFGNA
          CALL      SEPR0000
.
          APPEND    CARET,NK1030
          APPEND    CARET,NK1030
          LOAD      DIM4,COUNTER,PMPXMTLE,PMPXFTLE
          MATCH     SP4,DIM4
          IF        @EQUAL
            APPEND    BLANKSTR,NK1030
          ELSE
            MOVE      DIM4,FIELDSTR              * title
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1030
          ENDIF
          RESET     NK1030
.
.         Load Contact Person's Private Telephone Number, Business
.         Telephone Number, Mobile Phone Number and Email Address (NK1.31)
.
ALNK1300  LOAD      DIM20,COUNTER,PMPXMPNO,PMPXFPNO,PNKTELP,PTMXECPP,PTMXNRPP
          MATCH     SP20,DIM20,SP20              * blank private phone # ?
          IF        @EQUAL
            PACK      NK1031,CARET,PRNSTRNG,CARET,PHSTRING,CARET,CARET:
                             CARET,CARET,BLANKSTR
          ELSE
            MOVE      DIM20,FIELDSTR             * private phone #
            CALL      SPCHR000                   * convert special characters
            PACK      NK1031,CARET,PRNSTRNG,CARET,PHSTRING,CARET,CARET:
                             CARET,CARET,FIELDSTR
          ENDIF
          ENDSET    NK1031
          APPEND    TILDA,NK1031
          APPEND    CARET,NK1031
          APPEND    WPNSTRNG,NK1031
          APPEND    CARET,NK1031
          APPEND    PHSTRING,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          LOAD      DIM20,COUNTER,PMPXMBNO,PMPXFBNO,PNKTELB,PTMXECBP,PTMXNRBP
          MATCH     SP20,DIM20                   * blank business phone # ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1031            * yes
          ELSE
            MOVE      DIM20,FIELDSTR             * no - business phone #
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1031
          ENDIF
          APPEND    TILDA,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          APPEND    CPSTRING,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          LOAD      DIM20,COUNTER,PMPXMMNO,PMPXFMNO,PMPXKMOB,PMPXCMOB,PMPXRMOB
          MATCH     SP20,DIM20                   * blank mobile phone # ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1031            * yes
          ELSE
            MOVE      DIM20,FIELDSTR             * no - mobile phone #
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1031
          ENDIF
          APPEND    TILDA,NK1031
          APPEND    CARET,NK1031
          APPEND    NETSTRNG,NK1031
          APPEND    CARET,NK1031
          APPEND    INTERNET,NK1031
          APPEND    CARET,NK1031
          LOAD      DIM80,COUNTER,PMPXMEML,PMPXFEML,PMPXKEML,PMPXCEML,PMPXREML
          MATCH     SP70,DIM80                   * blank email address ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1031            * yes
          ELSE
            MOVE      DIM80,FIELDSTR             * no - email address
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1031
          ENDIF
          RESET     NK1031
.
.         Load Contact Person's Address (NK1.32)
.
          LOAD      DIM35A,COUNTER,PMPXMAD1,PMPXFAD1,PNKADD1,PTMXECA1,PTMXNRA1
          MATCH     DIM35A,SP70                  * blank address line 1 ?
          IF        @EQUAL
            MOVE      BLANKSTR,NK1032            * set default as blank
          ELSE
            MOVE      DIM35A,FIELDSTR            * address line 1
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,NK1032
          ENDIF
          ENDSET    NK1032
          APPEND    CARET,NK1032
.
          LOAD      DIM35B,COUNTER,PMPXMAD2,PMPXFAD2,PNKADD2,PTMXECA2,PTMXNRA2
          MATCH     DIM35B,SP70                  * blank address line 2 ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * set default as blank
          ELSE
            MOVE      DIM35B,FIELDSTR            * address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032
          ENDIF
          APPEND    CARET,NK1032
.
          LOAD      DIM35C,COUNTER,PMPXMAD3,PMPXFAD3,PNKSUBR,PTMXECA3,PTMXNRA3
          MATCH     DIM35C,SP70                  * blank address line 3 ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * set default as blank
          ELSE
             MOVE      DIM35C,FIELDSTR           * address line 3
             CALL      SPCHR000                  * convert special characters
             APPEND    FIELDSTR,NK1032
          ENDIF
          APPEND    CARET,NK1032
.
.         If the postcode is "8888", then the address is overseas and
.         address line 4 will contain the country description
.
          LOAD      DIM35D,COUNTER,PMPXMAD4,PMPXFAD4,PNKADD4,PTMXECA4,PTMXNRA4
          LOAD      DIM8,COUNTER,PMPXMPOS,PMPXFPOS,PNKPOST,PTMXECPC,PTMXNRPC
          MATCH     "8888",DIM8                  * overseas address ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * yes - blank address line 4
            APPEND    CARET,NK1032
            APPEND    BLANKSTR,NK1032            * blank postcode
            APPEND    CARET,NK1032
            MOVE      DIM35D,FIELDSTR            * load country
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032
            GOTO      ALNK1400
          ENDIF
.
.         Not an overseas address, so send address line 4 & postcode as normal
.
          MATCH     DIM35D,SP70                  * blank address line 4 ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * set default as blank
          ELSE
            MOVE      DIM35D,FIELDSTR            * address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032
          ENDIF
          APPEND    CARET,NK1032
.
          MATCH     DIM8,SP70                    * blank postcode ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * set default as blank
          ELSE
            MOVE      DIM8,FIELDSTR              * postcode
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032
          ENDIF
          APPEND    CARET,NK1032
.
.         Check if the entire address is blank and if so, there's
.         no need to send country other than as a null.
.
          MATCH     DIM35A,SP70
          GOTO      ALNK1390 IF NOT EQUAL
.
          MATCH     DIM35B,SP70
          GOTO      ALNK1390 IF NOT EQUAL
.
          MATCH     DIM35C,SP70
          GOTO      ALNK1390 IF NOT EQUAL
.
          MATCH     DIM35D,SP70
          GOTO      ALNK1390 IF NOT EQUAL
.
          MATCH     DIM8,SP70
          GOTO      ALNK1390 IF NOT EQUAL
.
          APPEND    BLANKSTR,NK1032
          GOTO      ALNK1400
.
ALNK1390  COMPARE   ZERO,PTCNHDPS                * Australia or NZ ?
          GOTO      ALNK1400 IF EQUAL            * no
.
          IF        PTCNHDPS = 1
            APPEND    "NEW ZEALAND",NK1032
          ELSE
            APPEND    "AUSTRALIA",NK1032
          ENDIF
ALNK1400  RESET     NK1032
.
          PACK      SEGSTRNG,ANSN,ANSK,ONE,PIPE:
                             NK1001,PIPE,NK1002,PIPE,NK1003,PIPE,NK1004,PIPE:
                             NK1005,PIPE,NK1006,PIPE,NK1007,PIPE,NK1008,PIPE:
                             NK1009,PIPE,NK1010,PIPE,NK1011,PIPE,NK1012,PIPE:
                             NK1013,PIPE,NK1014,PIPE,NK1015,PIPE,NK1016,PIPE:
                             NK1017,PIPE,NK1018,PIPE,NK1019,PIPE,NK1020,PIPE:
                             NK1021,PIPE,NK1022,PIPE,NK1023,PIPE,NK1024,PIPE:
                             NK1025,PIPE,NK1026,PIPE,NK1027,PIPE,NK1028,PIPE:
                             NK1029,PIPE,NK1030,PIPE,NK1031,PIPE,NK1032,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,ALNK1910:               * connection lost
                         ALNK1920                * timeout
.
          GOTO      ALNK1100                     * get next contact record
.
ALNK1900  MOVE      ZERO,EXIT
          GOTO      ALNK1999
.
ALNK1910  MOVE      ONE,EXIT
          GOTO      ALNK1999
.
ALNK1920  MOVE      TWO,EXIT
.
ALNK1999  RETURN
+
.*****************************************************************************
.*                             SPNK1000            Called by: WRNK1000       *
.*   Send a separate NK1 segment for each type of contact on pmscexaf for    *
.*   the U/R                                                                 *
.*****************************************************************************
.
SPNK1000  MOVE      "NK1",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [NK1] segment",*R,*N;
          ENDIF
.         
.         Send a "delete" segment first to indicate to the receiver that
.         it needs to delete all the current records
.
          MOVE      BLANKSTR,NK1001              * set all fields to null
          MOVE      BLANKSTR,NK1002              
          MOVE      BLANKSTR,NK1003
          MOVE      BLANKSTR,NK1004
          MOVE      BLANKSTR,NK1005
          MOVE      BLANKSTR,NK1006
          MOVE      BLANKSTR,NK1007
          MOVE      BLANKSTR,NK1008
          MOVE      BLANKSTR,NK1009
          MOVE      BLANKSTR,NK1010
          MOVE      BLANKSTR,NK1011
          MOVE      BLANKSTR,NK1012
          MOVE      BLANKSTR,NK1013
          MOVE      BLANKSTR,NK1014
          MOVE      BLANKSTR,NK1015
          MOVE      BLANKSTR,NK1016
          MOVE      BLANKSTR,NK1017
          MOVE      BLANKSTR,NK1018
          MOVE      BLANKSTR,NK1019
          MOVE      BLANKSTR,NK1020
          MOVE      BLANKSTR,NK1021
          MOVE      BLANKSTR,NK1022
          MOVE      BLANKSTR,NK1023
          MOVE      BLANKSTR,NK1024
          MOVE      BLANKSTR,NK1025
          MOVE      BLANKSTR,NK1026
          MOVE      BLANKSTR,NK1027
          MOVE      BLANKSTR,NK1028
          MOVE      BLANKSTR,NK1029
          MOVE      BLANKSTR,NK1030
          MOVE      BLANKSTR,NK1031
          MOVE      BLANKSTR,NK1032
          MOVE      BLANKSTR,NK1033
          MOVE      BLANKSTR,NK1034
          MOVE      BLANKSTR,NK1035
          MOVE      BLANKSTR,NK1036
          MOVE      BLANKSTR,NK1037
.
          PACK      SEGSTRNG,ANSN,ANSK,ONE,PIPE:
                             NK1001,PIPE,NK1002,PIPE,NK1003,PIPE,NK1004,PIPE:
                             NK1005,PIPE,NK1006,PIPE,NK1007,PIPE,NK1008,PIPE:
                             NK1009,PIPE,NK1010,PIPE,NK1011,PIPE,NK1012,PIPE:
                             NK1013,PIPE,NK1014,PIPE,NK1015,PIPE,NK1016,PIPE:
                             NK1017,PIPE,NK1018,PIPE,NK1019,PIPE,NK1020,PIPE:
                             NK1021,PIPE,NK1022,PIPE,NK1023,PIPE,NK1024,PIPE:
                             NK1025,PIPE,NK1026,PIPE,NK1027,PIPE,NK1028,PIPE:
                             NK1029,PIPE,NK1030,PIPE,NK1031,PIPE,NK1032,PIPE:
                             NK1033,PIPE,NK1034,PIPE,NK1035,PIPE,NK1036,PIPE:
                             NK1037,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRNK1910:               * connection lost
                         WRNK1920                * timeout
.
.         Now send all the current contacts for the patient
.
          MOVE      ZERO,COUNTER                 * initialise counter
.
          PACK      KEY14,PURNO,SP20
          CALL      RSPMCEX1                     * position on U/R
SPNK1050  CALL      RKPMCEX1                     * read next record
          BRANCH    OVRCD,SPNK1900               * eof - finished
.
          MATCH     PURNO,PMCEURNO               * same U/R still ?
          GOTO      SPNK1900 IF NOT EQUAL        * no - finished
.
          MATCH     "1",PMCEACTV                 * active contact ?
          GOTO      SPNK1050 IF EQUAL            * no - ignore record
.
.         We have a valid record to send, so format the data
.
          CALL      CLNK1000                     * clear NK1 fields
.
.         Load Relationship (NK1.3)
.         
          MOVE      BLANKSTR,NK1003              * set default as blank
          MATCH     SP10,PMCERELP                * NOK relationship blank ?
          GOTO      SPNK1200 IF EQUAL            * yes
.
          MOVE      PMCERELP,FIELDSTR            * relationship code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,NK1003
          ENDSET    NK1003
          APPEND    CARET,NK1003
.
          MOVE      PMCERELP,KEY10
          CALL      RDPMREL1                     * relationship on file ?
          IF        OVRCD = 0
            MOVE      PMRLDESC,FIELDSTR          * yes -relationship description
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1003
          ELSE
            APPEND    BLANKSTR,NK1003            * set default as blank
          ENDIF
.
          APPEND    CARET,NK1003
          APPEND    "webPAS",NK1003
          RESET     NK1003
.
.         Load Contact Role (NK1.7)
.
SPNK1200  MOVE      BLANKSTR,NK1007              * set default as blank
          MATCH     SP3,PMCETYPE                 * NOK contact type blank ?
          GOTO      SPNK1250 IF EQUAL            * yes
.
          MOVE      PMCETYPE,FIELDSTR            * contact type code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,NK1007
          ENDSET    NK1007
          APPEND    CARET,NK1007
.
          PACK      KEY5,CATTC,PMCETYPE
          CALL      RDCODE1                      * contact type on file ?
          IF        OVRCD = 0
            MATCH     ANSX,TCINDC21              * yes - exclude this contact ?
            GOTO      SPNK1050 IF EQUAL          * yes - ignore record
.
            MOVE      PTCDLDES,FIELDSTR          * contact type description
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1007
          ELSE
            APPEND    BLANKSTR,NK1007            * set default as blank
          ENDIF
.
          APPEND    CARET,NK1007
          APPEND    "webPAS",NK1007
          RESET     NK1007
.
.         Load Contact Reason (NK1.29)
.         We are using this field to transmit webPAS & TOPAS Unique ID's
.         as a repeating field.
.
SPNK1250  MOVE      PMCEWPID,NK1029              * load the webPAS Unique ID
          SQUEEZE   NK1029
          ENDSET    NK1029
          APPEND    CARET,NK1029
          APPEND    CARET,NK1029
          APPEND    "webPAS",NK1029
          APPEND    TILDA,NK1029
.
          MATCH     SP20,PMCETPID                * TOPAS Unique ID blank ?
          IF        !@EQUAL
            MOVE      PMCETPID,KEY20
            SQUEEZE   KEY20
            APPEND    KEY20,NK1029
          ENDIF
          APPEND    CARET,NK1029
          APPEND    CARET,NK1029
          APPEND    "TPS",NK1029
.
          RESET     NK1029
.
.         Load Contact Person's Name (NK1.30)
.
SPNK1300  MATCH     PMCESNAM,SP70                * blank surname ?
          IF        @EQUAL
            MOVE      BLANKSTR,NK1030            * set default as blank
          ELSE
            MOVE      PMCESNAM,FIELDSTR          * surname
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,NK1030
          ENDIF
          ENDSET    NK1030
          APPEND    CARET,NK1030
.
          MATCH     PMCEGNAM,SP70                * blank first given name ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1030            * set default as blank
          ELSE
            MOVE      PMCEGNAM,FIELDSTR          * first given name
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1030
          ENDIF
          APPEND    CARET,NK1030
.
          MATCH     PMCEGNM2,SP70                * blank second given name ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1030            * set default as blank
          ELSE
             MOVE      PMCEGNM2,FIELDSTR         * second given name
             CALL      SPCHR000                  * convert special characters
             APPEND    FIELDSTR,NK1030
          ENDIF
          APPEND    CARET,NK1030
          APPEND    CARET,NK1030
.
          MATCH     PMCETITL,SP70                * blank title ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1030            * set default as blank
          ELSE
            MOVE      PMCETITL,FIELDSTR          * title
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1030
          ENDIF
          RESET     NK1030
.
.         Load Contact Person's Private Telephone Number, Business
.         Telephone Number, Mobile Phone Number and Email Address (NK1.31)
.
          MATCH     PMCETELP,SP70                * blank private phone # ?
          IF        @EQUAL
            PACK      NK1031,CARET,PRNSTRNG,CARET,PHSTRING,CARET,CARET:
                             CARET,CARET,BLANKSTR
          ELSE
            MOVE      PMCETELP,FIELDSTR          * private phone #
            CALL      SPCHR000                   * convert special characters
            PACK      NK1031,CARET,PRNSTRNG,CARET,PHSTRING,CARET,CARET:
                             CARET,CARET,FIELDSTR
          ENDIF
          ENDSET    NK1031
          APPEND    TILDA,NK1031
          APPEND    CARET,NK1031
          APPEND    WPNSTRNG,NK1031
          APPEND    CARET,NK1031
          APPEND    PHSTRING,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          MATCH     PMCETELB,SP70                * blank business phone # ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1031            * yes
          ELSE
            MOVE      PMCETELB,FIELDSTR          * no - business phone #
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1031
          ENDIF
          APPEND    TILDA,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          APPEND    CPSTRING,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          APPEND    CARET,NK1031
          MATCH     PMCETELM,SP70                * blank mobile phone # ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1031            * yes
          ELSE
            MOVE      PMCETELM,FIELDSTR          * no - mobile phone #
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1031
          ENDIF
          APPEND    TILDA,NK1031
          APPEND    CARET,NK1031
          APPEND    NETSTRNG,NK1031
          APPEND    CARET,NK1031
          APPEND    INTERNET,NK1031
          APPEND    CARET,NK1031
          MATCH     PMCEEMAI,SP70                * blank email address ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1031            * yes
          ELSE
            MOVE      PMCEEMAI,FIELDSTR          * no - email address
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1031
          ENDIF
          RESET     NK1031
.
.         Load Contact Person's Address (NK1.32)
.
          MATCH     PMCEADD1,SP70                * blank address line 1 ?
          IF        @EQUAL
            MOVE      BLANKSTR,NK1032            * set default as blank
          ELSE
            MOVE      PMCEADD1,FIELDSTR          * address line 1
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,NK1032
          ENDIF
          ENDSET    NK1032
          APPEND    CARET,NK1032
.
          MATCH     PMCEADD2,SP70                * blank address line 2 ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * set default as blank
          ELSE
            MOVE      PMCEADD2,FIELDSTR          * address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032
          ENDIF
          APPEND    CARET,NK1032
.
          MATCH     PMCEADD3,SP70                * blank address line 3 ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * set default as blank
          ELSE
             MOVE      PMCEADD3,FIELDSTR         * address line 3
             CALL      SPCHR000                  * convert special characters
             APPEND    FIELDSTR,NK1032
          ENDIF
          APPEND    CARET,NK1032
.         
.         If the postcode is "8888", then the address is overseas and
.         address line 4 will contain the country description
.           
          MATCH     "8888",PMCEPOST              * overseas address ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * yes - blank address line 4
            APPEND    CARET,NK1032               
            APPEND    BLANKSTR,NK1032            * blank postcode
            APPEND    CARET,NK1032 
            MOVE      PMCEADD4,FIELDSTR          * load country
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032            
            GOTO      SPNK1400
          ENDIF
.
.         Not an overseas address, so send address line 4 & postcode as normal
.
          MATCH     PMCEADD4,SP70                * blank address line 4 ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * set default as blank
          ELSE
            MOVE      PMCEADD4,FIELDSTR          * address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032
          ENDIF
          APPEND    CARET,NK1032
.
          MATCH     PMCEPOST,SP70                * blank postcode ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1032            * set default as blank
          ELSE
            MOVE      PMCEPOST,FIELDSTR          * postcode
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,NK1032
          ENDIF
          APPEND    CARET,NK1032
.
.         Check if the entire address is blank and if so, there's
.         no need to send country other than as a null.
.
          MATCH     PMCEADD1,SP70
          GOTO      SPNK1390 IF NOT EQUAL
.
          MATCH     PMCEADD2,SP70
          GOTO      SPNK1390 IF NOT EQUAL
.
          MATCH     PMCEADD3,SP70
          GOTO      SPNK1390 IF NOT EQUAL
.
          MATCH     PMCEADD4,SP70
          GOTO      SPNK1390 IF NOT EQUAL
.
          MATCH     PMCEPOST,SP70
          GOTO      SPNK1390 IF NOT EQUAL
.
          APPEND    BLANKSTR,NK1032
          GOTO      SPNK1400
.
SPNK1390  COMPARE   ZERO,PTCNHDPS                * Australia or NZ ?
          GOTO      SPNK1400 IF EQUAL            * no
.
          IF        PTCNHDPS = 1
            APPEND    "NEW ZEALAND",NK1032
          ELSE
            APPEND    "AUSTRALIA",NK1032
          ENDIF
SPNK1400  RESET     NK1032
.
.         Load Contact Person's Publicity Code (NK1.22)
.
SPNK1410  MOVE      SP70,DIM25
          MOVE      SP70,NK1022
          CLEAR     NK1022
.
          PACK      D2,PMCESLET,PMCESSMS,SP2
          MATCH     "1",PMCESLET
          IF        @EQUAL
            APPEND    ANSL,NK1022                * send letter
          ENDIF
          MATCH     "1",PMCESSMS
          IF        @EQUAL
            APPEND    ANSS,NK1022                * send SMS
          ENDIF
          RESET     NK1022
.
          MATCH     "11",D2
          IF        @EQUAL
            MOVE      "Send Letter and Send SMS",DIM25
            GOTO      SPNK1450
          ENDIF
          MATCH     ANSL,NK1022
          IF        @EQUAL
            MOVE      "Send Letter",DIM25
            GOTO      SPNK1450
          ENDIF
          MATCH     ANSS,NK1022
          IF        @EQUAL
            MOVE      "Send SMS",DIM25
            GOTO      SPNK1450
          ENDIF
.
          MOVE      BLANKSTR,NK1022              * set default as blank
          GOTO      SPNK1500
.
SPNK1450  ENDSET    NK1022
          APPEND    CARET,NK1022
          APPEND    DIM25,NK1022                 * set description
          APPEND    CARET,NK1022
          APPEND    "webPAS",NK1022
          RESET     NK1022
.
.         Load Main Language Spoken at Home 1 (NK1.20)
.
SPNK1500  MOVE      BLANKSTR,NK1020              * set default value
.
          MATCH     SP3,PMCELAN1                 * field populated ?
          GOTO      SPNK1800 IF EQUAL            * no
.
          MOVE      PMCELAN1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,NK1020
          ENDSET    NK1020
.
          MOVE      SP4,D4
          MOVE      "Unknown Code",FIELDSTR
          MOVE      "l1",D2
          PACK      KEY5,D2,PMCELAN1
          CALL      RDCODE1
          BRANCH    OVRCD,SPNK1550
.
          MOVE      THCSCOD,FIELDSTR             * hdp value
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,D4
.
          MOVE      PTCDLDES,FIELDSTR            * long description
          CALL      SPCHR000                     * convert special characters
.
SPNK1550  APPEND    CARET,NK1020
          STRIP     D4
          APPEND    D4,NK1020
          APPEND    " - ",NK1020
          APPEND    FIELDSTR,NK1020
          APPEND    CARET,NK1020
          APPEND    "webPAS",NK1020
          RESET     NK1020
.
.         Load Set ID (NK1.1)
.
SPNK1800  ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,NK1001               * set id
          SQUEEZE   NK1001
.
          PACK      SEGSTRNG,ANSN,ANSK,ONE,PIPE:
                             NK1001,PIPE,NK1002,PIPE,NK1003,PIPE,NK1004,PIPE:
                             NK1005,PIPE,NK1006,PIPE,NK1007,PIPE,NK1008,PIPE:
                             NK1009,PIPE,NK1010,PIPE,NK1011,PIPE,NK1012,PIPE:
                             NK1013,PIPE,NK1014,PIPE,NK1015,PIPE,NK1016,PIPE:
                             NK1017,PIPE,NK1018,PIPE,NK1019,PIPE,NK1020,PIPE:
                             NK1021,PIPE,NK1022,PIPE,NK1023,PIPE,NK1024,PIPE:
                             NK1025,PIPE,NK1026,PIPE,NK1027,PIPE,NK1028,PIPE:
                             NK1029,PIPE,NK1030,PIPE,NK1031,PIPE,NK1032,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,SPNK1910:               * connection lost
                         SPNK1920                * timeout
.
          GOTO      SPNK1050                     * get next NoK record
.
SPNK1900  IF        COUNTER = 0 & DISPFLAG = 1
            DISPLAY   "No data for [NK1] segment",*R,*N;
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      SPNK1999
.
SPNK1910  MOVE      ONE,EXIT
          GOTO      SPNK1999
.
SPNK1920  MOVE      TWO,EXIT
.
SPNK1999  RETURN
+
.*****************************************************************************
.*                           WRAL1000              Called by: A01A0000       *
.*                  Write Allergy segment                     A08A0000       *
.* Returns:  EXIT  0 = Segment sent ok                        A08O0000       *
.*                 1 = Connection lost                        A08E0000       *
.*                 2 = Timeout                                A13A0000       *
.*                                                            A13E0000       *
.*                                                            A14A0000       *
.*                                                            A28P0000       *
.*                                                            A31P0000       *
.*****************************************************************************
.
.         Check if we are sending allergy alerts or all alerts (ZAL)
.
WRAL1000  MATCH     "1",PTCNH7AL                 * send ZAL segment for alerts
          GOTO      WRAL1900 IF EQUAL            * yes - finished
.
.         We are sending only the allergy alerts using the standard AL1
.         segment (default format)
.
          MOVE      "AL1",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [AL1] segment",*R,*N;
          ENDIF
.         
.         Send a "delete" segment first to indicate to the receiver that
.         it needs to delete all the current records
.
          MOVE      BLANKSTR,AL1001              * set all fields to null
          MOVE      BLANKSTR,AL1002              
          MOVE      BLANKSTR,AL1003
          MOVE      BLANKSTR,AL1004
          MOVE      BLANKSTR,AL1005
          MOVE      BLANKSTR,AL1006
.
          PACK      SEGSTRNG,ANSA,ANSL,ONE,PIPE:
                             AL1001,PIPE,AL1002,PIPE,AL1003,PIPE,AL1004,PIPE:
                             AL1005,PIPE,AL1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRAL1910:               * connection lost
                         WRAL1920                * timeout
.
.         Now send all the current allergy alerts for the patient
.
          MOVE      ZERO,COUNTER                 * initialise record counter
.
          PACK      KEY16,PURNO,PTCNCATA,SP20
          CALL      RSPTALR1                     * position on allergy for pt.
WRAL1050  CALL      RKPTALR1                     * read next record
          BRANCH    OVRCD,WRAL1900               * eof - finished
.
          MATCH     PURNO,PTALURNO               * same U/R still ?
          GOTO      WRAL1900 IF NOT EQUAL        * no - finished
.
          MATCH     PTCNCATA,PTALCATG            * Allergy category still ?
          GOTO      WRAL1900 IF NOT EQUAL        * no - finished
.
.         Valid allergy alert found
.
          CALL      CLAL1000                     * clear all AL1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,AL1001               * load set id
          SQUEEZE   AL1001
.
          MOVE      BLANKSTR,AL1002              * default allergy type
          MOVE      PTALCODE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,AL1003              * set allergy code
          ENDSET    AL1003
          APPEND    CARET,AL1003
          PACK      KEY5,PTCNCATA,PTALCODE
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,AL1003
.
            MATCH     SP4,THCSCOD
            IF        !@EQUAL
              MOVE      THCSCOD,AL1002           * load allergy type
            ENDIF
          ENDIF
          APPEND    CARET,AL1003
          APPEND    "webPAS",AL1003
          RESET     AL1003
.
          MATCH     SP3,PTALREAC                 * blank reaction code ?
          IF        @EQUAL
            MOVE      BLANKSTR,AL1005            * yes
          ELSE
            MOVE      PTALREAC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,AL1005            * set reaction code
          ENDIF
.
          MATCH     SP8,PTALDATE                 * blank alert date ?
          IF        @EQUAL
            MOVE      BLANKSTR,AL1006            * yes
          ELSE
            MOVE      PTALDATE,AL1006            * no - load date
          ENDIF
.
          PACK      SEGSTRNG,ANSA,ANSL,ONE,PIPE:
                             AL1001,PIPE,AL1002,PIPE,AL1003,PIPE,AL1004,PIPE:
                             AL1005,PIPE,AL1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRAL1910:               * connection lost
                         WRAL1920                * timeout
.
          GOTO      WRAL1050                     * get next record
.
WRAL1900  MOVE      ZERO,EXIT
          GOTO      WRAL1999
.
WRAL1910  MOVE      ONE,EXIT
          GOTO      WRAL1999
.
WRAL1920  MOVE      TWO,EXIT
.
WRAL1999  RETURN
+
.*****************************************************************************
.*                           WRZAL000              Called by: A01A0000       *
.*                  Write Alert segment                       A08A0000       *
.* Returns:  EXIT  0 = Segment sent ok                        A08O0000       *
.*                 1 = Connection lost                        A08E0000       *
.*                 2 = Timeout                                A13A0000       *
.*                                                            A13E0000       *
.*                                                            A14A0000       *
.*                                                            A28P0000       *
.*                                                            A31P0000       *
.*****************************************************************************
.
.         Check if we are sending allergy alerts or all alerts
.
WRZAL000  MATCH     "1",PTCNH7AL                 * send ZAL segment for alerts
          GOTO      WRZAL900 IF NOT EQUAL        * no
.
.         We are sending all alerts using the ZAL segment
.
          MOVE      "ZAL",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZAL] segment",*R,*N;
          ENDIF
.         
.         Send a "delete" segment first to indicate to the receiver that
.         it needs to delete all the current records
.
          MOVE      BLANKSTR,ZAL001              * set all fields to null
          MOVE      BLANKSTR,ZAL002              
          MOVE      BLANKSTR,ZAL003
          MOVE      BLANKSTR,ZAL004
          MOVE      BLANKSTR,ZAL005
          MOVE      BLANKSTR,ZAL006
          MOVE      BLANKSTR,ZAL007
          MOVE      BLANKSTR,ZAL008
          MOVE      BLANKSTR,ZAL009
          MOVE      BLANKSTR,ZAL010
          MOVE      BLANKSTR,ZAL011
          MOVE      BLANKSTR,ZAL012
          MOVE      BLANKSTR,ZAL013
          MOVE      BLANKSTR,ZAL014
          MOVE      BLANKSTR,ZAL015
.
          PACK      SEGSTRNG,ANSZ,ANSA,ANSL,PIPE:
                             ZAL001,PIPE,ZAL002,PIPE,ZAL003,PIPE,ZAL004,PIPE:
                             ZAL005,PIPE,ZAL006,PIPE,ZAL007,PIPE,ZAL008,PIPE:
                             ZAL009,PIPE,ZAL010,PIPE,ZAL011,PIPE,ZAL012,PIPE:
                             ZAL013,PIPE,ZAL014,PIPE,ZAL015,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRZAL910:               * connection lost
                         WRZAL920                * timeout
.
.         Now send all the current alerts for the patient
.
          MOVE      ZERO,COUNTER                 * initialise record counter
.
          PACK      KEY16,PURNO,SP20
          CALL      RSPTALR1                     * position on allergy for pt.
WRZAL250  CALL      RKPTALR1                     * read next record
          BRANCH    OVRCD,WRZAL450               * eof - finished
.
          MATCH     PURNO,PTALURNO               * same U/R still ?
          GOTO      WRZAL450 IF NOT EQUAL        * no - finished
.
.         Valid alert found
.
          CALL      CLZAL000                     * clear all ZAL fields
.
.         Load alert category & description
.
          MATCH     SP2,PTALCATG                 * blank category ?
          GOTO      WRZAL250 IF EQUAL            * yes - ignore record
.
          MOVE      PTALCATG,FIELDSTR            * load alert category
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL002
          ENDSET    ZAL002
          APPEND    CARET,ZAL002
.
          PACK      KEY5,PTALCATG,SP3
          CALL      RDCODE1                      * alert category on file ?
          BRANCH    OVRCD,WRZAL250               * no - ignore record
.
          MOVE      TDESC,FIELDSTR               * load alert cat. description
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZAL002
          APPEND    CARET,ZAL002
          APPEND    "webPAS",ZAL002
          RESET     ZAL002
.
.         Load alert code & description
.
          MATCH     SP3,PTALCODE                 * blank alert code ?
          GOTO      WRZAL250 IF EQUAL            * yes - ignore record
.
          MOVE      PTALCODE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL003              * set alert code
          ENDSET    ZAL003
          APPEND    CARET,ZAL003
.
          PACK      KEY5,PTALCATG,PTALCODE
          CALL      RDCODE1                      * alert code on file ?
          BRANCH    OVRCD,WRZAL250               * no - ignore record
.
          MATCH     ANSX,TCINDC21                * excluding this alert ?
          GOTO      WRZAL250 IF EQUAL            * yes - ignore record
.
          MOVE      TDESC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZAL003
          APPEND    CARET,ZAL003
          APPEND    "webPAS",ZAL003
.
.         Load alternate alert code (user def 3) & description (CAR 308302)
.
          MATCH     SP10,PTCDUDF3                * blank user def 3 ?
          GOTO      WRZAL270 IF EQUAL            * yes - ignore record
.
          APPEND    CARET,ZAL003
          MOVE      PTCDUDF3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZAL003              * set alert code
          APPEND    CARET,ZAL003
.
          MOVE      TDESC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZAL003
          APPEND    CARET,ZAL003
          APPEND    "TPS",ZAL003
WRZAL270  RESET     ZAL003
.
.         Load reaction code & description
.
          MOVE      BLANKSTR,ZAL004
          MATCH     SP3,PTALREAC                 * blank reaction code ?
          GOTO      WRZAL300 IF EQUAL            * yes
.
          MOVE      PTALREAC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL004              * set reaction code
          ENDSET    ZAL004
          APPEND    CARET,ZAL004
.
          PACK      KEY5,CATWN,PTALREAC
          CALL      RDCODE1                      * reaction code on file ?
          IF        OVRCD = 1
            MOVE      "Unknown Code",FIELDSTR
          ELSE
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,ZAL004
          APPEND    CARET,ZAL004
          APPEND    "webPAS",ZAL004
          RESET     ZAL004
.
.         Load alert date
.
WRZAL300  MOVE      BLANKSTR,ZAL005              * set default
          MATCH     SP8,PTALDATE                 * blank alert date ?
          GOTO      WRZAL310 IF EQUAL            * yes
.
          MOVE      PTALDATE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL005              * set reaction comment
          REP       " 0",ZAL005
.
.         Load severity level
.
WRZAL310  MOVE      BLANKSTR,ZAL006              * set default
          MATCH     SP20,PTALLSEV                * blank severity level ?
          GOTO      WRZAL320 IF EQUAL            * yes
.
          MOVE      PTALLSEV,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL006              * set severity level
.
.         Load review date
.
WRZAL320  MOVE      BLANKSTR,ZAL007              * set default
          MATCH     SP8,PTALRDTE                 * blank review date ?
          GOTO      WRZAL330 IF EQUAL            * yes
.
          MOVE      PTALRDTE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL007              * set review date
          REP       " 0",ZAL007
.
.         Load date inactive
.
WRZAL330  MOVE      BLANKSTR,ZAL008              * set default
          MATCH     SP8,PTALDTIN                 * blank inactive date ?
          GOTO      WRZAL340 IF EQUAL            * yes
.
          MOVE      PTALDTIN,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL008              * set inactive date
          REP       " 0",ZAL008
.
.         Load end date
.
WRZAL340  MOVE      BLANKSTR,ZAL009              * set default
          MATCH     SP8,PTALEDAT                 * blank end date ?
          GOTO      WRZAL350 IF EQUAL            * yes
.
          MOVE      PTALEDAT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL009              * set end date
          REP       " 0",ZAL009
.
.         Load Authorising Clinician
.
WRZAL350  MOVE      BLANKSTR,ZAL010              * set default
          MATCH     SP10,PTALRQBY                * blank auth. hcp ?
          GOTO      WRZAL360 IF EQUAL            * yes
.
          MOVE      PTALRQBY,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL010              * set auth. hcp
          ENDSET    ZAL010
          APPEND    CARET,ZAL010
.
          MOVE      PTALRQBY,KEY10
          CALL      RDPMHCP1
          IF        OVRCD = 1
            APPEND    "Unknown code",ZAL010
            APPEND    CARET,ZAL010
            APPEND    CARET,ZAL010
            APPEND    CARET,ZAL010
            APPEND    CARET,ZAL010
          ELSE
            MOVE      PMHCSNAM,FIELDSTR          * load HCP surname
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZAL010
            APPEND    CARET,ZAL010
.
            MOVE      PMHCGNAM,FIELDSTR          * load HCP given names
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZAL010
            APPEND    CARET,ZAL010
            APPEND    CARET,ZAL010
            APPEND    CARET,ZAL010
.
            MOVE      PMHCTITL,FIELDSTR          * load HCP title
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZAL010
          ENDIF
          APPEND    CARET,ZAL010
          APPEND    CARET,ZAL010
          APPEND    "webPAS",ZAL010
          RESET     ZAL010
.
.         Load last update date/time.  If not populated, then use the
.         create date/time
.
WRZAL360  MOVE      BLANKSTR,ZAL011              * set default
          MATCH     SP8,PTALUDAT                 * blank update date ?
          IF        @EQUAL
            MATCH     SP8,PTALCDTE               * yes - blank create date ?
            GOTO      WRZAL370 IF EQUAL          * yes
            MOVE      PTALCDTE,FIELDSTR          * load create date
          ELSE
            MOVE      PTALUDAT,FIELDSTR          * load update date
          ENDIF
.
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL011              * set update date
.
          MATCH     SP8,PTALUTIM                 * blank update time ?
          IF        @EQUAL
            MATCH     SP8,PTALCTIM               * yes - blank create time ?
            GOTO      WRZAL365 IF EQUAL          * yes
            UNPACK    PTALCTIM,CHOUR,ANS,CMIN,ANS,CSEC
          ELSE
            UNPACK    PTALUTIM,CHOUR,ANS,CMIN,ANS,CSEC
          ENDIF
.
          ENDSET    ZAL011                       * no - append time
          APPEND    CHOUR,ZAL011
          APPEND    CMIN,ZAL011
          APPEND    CSEC,ZAL011
          RESET     ZAL011
.
WRZAL365  REP       " 0",ZAL011
.
.         Load user who last updated the record.  If not populated, then use
.         the WEB User ID
.
WRZAL370  MOVE      BLANKSTR,ZAL012              * set default
.
          MATCH     SP10,PTALUUID                * blank update user ?
          IF        !@EQUAL
            MOVE      PTALUUID,DIM10             * no - use update user
            GOTO      WRZAL375
          ENDIF
.
          MATCH     SP10,PTALUSID                * blank WEB User ID?
          GOTO      WRZAL380 IF EQUAL            * yes - use blank default
.
          MOVE      PTALUSID,DIM10               * no - use WEB User ID
.
WRZAL375  MOVE      DIM10,FIELDSTR
.
          MOVE      "Unknown Code",WBSENAM
          MOVE      DIM10,KEY10
          CALL      RDWBSE1                      * user id on file ?
          BRANCH    OVRCD,WRZAL378               * no
.
          MATCH     "1",PTCNH7LN                 * sending long login name ?
          IF        @EQUAL
            MOVE      WBSELOGN,FIELDSTR          * yes
          ENDIF
.
WRZAL378  CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL012              * set user code
          ENDSET    ZAL012
          APPEND    CARET,ZAL012
          MOVE      WBSENAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZAL012
          APPEND    CARET,ZAL012
          APPEND    "webPAS",ZAL012
          RESET     ZAL012
.
.         Load initiating hospital
.
WRZAL380  MOVE      BLANKSTR,ZAL013              * set default
          MATCH     SP3,PTALHOSP                 * blank hospital ?
          GOTO      WRZAL390 IF EQUAL            * yes
.
          MOVE      PTALHOSP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL013              * set hospital
          ENDSET    ZAL013
          APPEND    CARET,ZAL013
.
          MOVE      PTALHOSP,KEY3
          CALL      RDPTHSP1                     * hospital on file ?
          IF        OVRCD = 1
            MOVE      "Unknown Code",FIELDSTR
          ELSE
            MOVE      PTHSNAME,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,ZAL013
          APPEND    CARET,ZAL013
          APPEND    "webPAS",ZAL013
          RESET     ZAL013
.         
.         Load Set ID (ZAL.1)
.
WRZAL390  ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,ZAL001               * load set id
          SQUEEZE   ZAL001
.
.         Comments
.
          MOVE      BLANKSTR,ZAL014              * load default value
          MOVE      ZERO,RECCOUNT                * initialise counter
.
          PACK      KEY19,PTALURNO,PTALCATG,PTALCODE,PTALCNTR,SP20
          CALL      RSPMALN1                     * position on alert
WRZAL395  CALL      RKPMALN1                     * read next record
          BRANCH    OVRCD,WRZAL400               * eof - no more comments
.
          MATCH     PTALURNO,PMANURNO            * same U/R still ?
          GOTO      WRZAL400 IF NOT EQUAL        * no - no more comments
.
          MATCH     PTALCATG,PMANACAT            * same alert category still ?
          GOTO      WRZAL400 IF NOT EQUAL        * no - no more comments
.
          MATCH     PTALCODE,PMANACOD            * same alert code still ?
          GOTO      WRZAL400 IF NOT EQUAL        * no - no more comments
.
          MATCH     PTALCNTR,PMANCNTR            * same alert code still ?
          GOTO      WRZAL400 IF NOT EQUAL        * no - no more comments
.
          MATCH     SP70,PMANCOMM                * blank line ?
          GOTO      WRZAL395 IF EQUAL            * yes - ignore record
.
          ADD       ONE,RECCOUNT                 * increment record counter
.
.         We have a valid comment line.
.         First find the number of trailing spaces to the comment.
.
          MOVE      PMANCOMM,DIM70
          STRIP     DIM70
          MOVELPTR  DIM70,FORM2
          ASSIGN    (70-FORM2),FORM2
.
          IF        RECCOUNT = 1
            MOVE      PMANCOMM,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,ZAL014
            ENDSET    ZAL014
          ELSE
            MOVE      PMANCOMM,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZAL014            * append this line
          ENDIF
.
.         Now add the relevant number of trailing spaces back on to the
.         comment string
.
          WHILE     FORM2 > 0
            APPEND    SP1,ZAL014
            SUB       ONE,FORM2
          DO
.
          COMPARE   EIGHT,RECCOUNT               * max lines yet ? (TSK:0878929)
          GOTO      WRZAL395 IF LESS             * no - get next record
.
WRZAL400  IF        RECCOUNT > 0
            RESET     ZAL014
            STRIP     ZAL014
          ENDIF
.
.         Load TOPAS and webPAS Alert identifiers
.
          MOVE      PTALCNTR,ZAL015
          SQUEEZE   ZAL015
          ENDSET    ZAL015
          APPEND    CARET,ZAL015
          APPEND    CARET,ZAL015
          APPEND    "webPAS",ZAL015
          APPEND    TILDA,ZAL015
.
          MATCH     SP20,PTALTPID
          IF        !@EQUAL
            MOVE      PTALTPID,DIM20
            SQUEEZE   DIM20
            APPEND    DIM20,ZAL015
          ENDIF
.
          APPEND    CARET,ZAL015
          APPEND    CARET,ZAL015
          APPEND    "TPS",ZAL015
          RESET     ZAL015
.
.         Send the ZAL segment
.
          PACK      SEGSTRNG,ANSZ,ANSA,ANSL,PIPE:
                             ZAL001,PIPE,ZAL002,PIPE,ZAL003,PIPE,ZAL004,PIPE:
                             ZAL005,PIPE,ZAL006,PIPE,ZAL007,PIPE,ZAL008,PIPE:
                             ZAL009,PIPE,ZAL010,PIPE,ZAL011,PIPE,ZAL012,PIPE:
                             ZAL013,PIPE,ZAL014,PIPE,ZAL015,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRZAL910:               * connection lost
                         WRZAL920                * timeout
.
          GOTO      WRZAL250                     * get next record
.
.         Now get all the NZ medical warnings and send as ZAL segments
.
WRZAL450  COMPARE   ONE,PTCNNHII                 * using NHI ?
          GOTO      WRZAL900 IF NOT EQUAL        * no - finished
.
          PACK      KEY14,PURNO,SP20
          CALL      RSPTMWS1                     * position on allergy for pt.
WRZAL500  CALL      RKPTMWS1                     * read next record
          BRANCH    OVRCD,WRZAL900               * eof - finished
.
          MATCH     PURNO,PTMWURNO               * same U/R still ?
          GOTO      WRZAL900 IF NOT EQUAL        * no - finished
.
.         Valid warning found
.
          CALL      CLZAL000                     * clear all ZAL fields
.
.         Load warning type
.
          MOVE      "NHIMWS^Medical Warning System^webPAS",ZAL002
.
.         Load warning code & description
.
          MATCH     SP9,PTMWCODE                 * blank warning code ?
          IF        @EQUAL
            MOVE      BLANKSTR,ZAL003            * yes
          ELSE
            MOVE      PTMWCODE,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,ZAL003            * set warning code
          ENDIF
          ENDSET    ZAL003
          APPEND    CARET,ZAL003
.
          MOVE      PTMWTEXT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZAL003
          APPEND    CARET,ZAL003
.
          MOVE      BLANKSTR,DIM9
          LOAD      DIM9,PTMWSYS,WARNSYS1,WARNSYS2,WARNSYS3,WARNSYS4,WARNSYS5
          MOVE      DIM9,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZAL003
          RESET     ZAL003
.
.         Note: Reaction Code (ZAL.4) is not populated
.
.         Load warning date
.
WRZAL600  MOVE      BLANKSTR,ZAL005              * set default
          MATCH     SP8,PTMWDATE                 * blank warning date ?
          GOTO      WRZAL610 IF EQUAL            * yes
.
          MOVE      PTMWDATE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL005              * set reaction comment
          REP       " 0",ZAL005
.
.         Load severity level
.
WRZAL610  MOVE      BLANKSTR,ZAL006              * set default
          MATCH     SP20,PTMWCLSS                * blank severity level ?
          GOTO      WRZAL620 IF EQUAL            * yes
.
          MOVE      PTMWCLSS,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL006              * set severity level
.
.         Note: Review Date (ZAL.7) not populated
.               Date Inactive (ZAL.8) not populated
.               End Date (ZAL.9) not populated
.
.         Load Authorising Clinician
.
WRZAL620  MOVE      BLANKSTR,ZAL010              * set default
          MATCH     SP5,PTMWDOCT                 * blank auth. hcp ?
          GOTO      WRZAL630 IF EQUAL            * yes
.
          MOVE      PTMWDOCT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL010              * set auth. hcp
          ENDSET    ZAL010
          APPEND    CARET,ZAL010
          APPEND    CARET,ZAL010
          APPEND    CARET,ZAL010
          APPEND    CARET,ZAL010
          APPEND    CARET,ZAL010
          APPEND    CARET,ZAL010
          APPEND    CARET,ZAL010
          APPEND    "NHIMWS",ZAL010
          RESET     ZAL010
.
.         Note: Last Update Date (ZAL.11) not populated
.               User Who Last Updated (ZAL.12) not populated
.
.         Load initiating hospital
.
WRZAL630  MOVE      BLANKSTR,ZAL013              * set default
          MATCH     SP20,PTMWHOSP                * blank hospital ?
          GOTO      WRZAL640 IF EQUAL            * yes
.
          MOVE      PTMWHOSP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZAL013              * set hospital
          ENDSET    ZAL013
          APPEND    CARET,ZAL013
          APPEND    CARET,ZAL013
          APPEND    "NHIMWS",ZAL013
          RESET     ZAL013
.
.         Load Set ID (ZAL.1)
.
WRZAL640  ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,ZAL001               * load set id
          SQUEEZE   ZAL001
.
.         Note: Comments (ZAL.14) not populated
.
.         Load Unique Identifier (ZAL.15)
.
          MOVE      PTMWCNT,ZAL015
          SQUEEZE   ZAL015
          ENDSET    ZAL015
          APPEND    CARET,ZAL015
          APPEND    CARET,ZAL015
          APPEND    "NHIMWS",ZAL015
          RESET     ZAL015
.
.         Send the ZAL segment for a webPAS alert
.
          PACK      SEGSTRNG,ANSZ,ANSA,ANSL,PIPE:
                             ZAL001,PIPE,ZAL002,PIPE,ZAL003,PIPE,ZAL004,PIPE:
                             ZAL005,PIPE,ZAL006,PIPE,ZAL007,PIPE,ZAL008,PIPE:
                             ZAL009,PIPE,ZAL010,PIPE,ZAL011,PIPE,ZAL012,PIPE:
                             ZAL013,PIPE,ZAL014,PIPE,ZAL015,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRZAL910:               * connection lost
                         WRZAL920                * timeout
.
          GOTO      WRZAL500                     * get next record
.
WRZAL900  MOVE      ZERO,EXIT
          GOTO      WRZAL999
.
WRZAL910  MOVE      ONE,EXIT
          GOTO      WRZAL999
.
WRZAL920  MOVE      TWO,EXIT
.
WRZAL999  RETURN
+
.*****************************************************************************
.*                           WRDG1000              Called by: A03A0000       *
.*                  Write Diagnosis Information segment       A08A0000       *
.* Returns:  EXIT  0 = Segment sent ok                        A12A0000       *
.*                 1 = Connection lost                        A13A0000       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WRDG1000  MOVE      "DG1",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [DG1] segment",*R,*N;
          ENDIF
.
.         Send a "delete" segment first to indicate to the receiver that
.         it needs to delete all the current records
.
          MOVE      BLANKSTR,DG1001              * set all fields to null
          MOVE      BLANKSTR,DG1002
          MOVE      BLANKSTR,DG1003
          MOVE      BLANKSTR,DG1004
          MOVE      BLANKSTR,DG1005
          MOVE      BLANKSTR,DG1006
          MOVE      BLANKSTR,DG1007
          MOVE      BLANKSTR,DG1008
          MOVE      BLANKSTR,DG1009
          MOVE      BLANKSTR,DG1010
          MOVE      BLANKSTR,DG1011
          MOVE      BLANKSTR,DG1012
          MOVE      BLANKSTR,DG1013
          MOVE      BLANKSTR,DG1014
          MOVE      BLANKSTR,DG1015
          MOVE      BLANKSTR,DG1016
          MOVE      BLANKSTR,DG1017
          MOVE      BLANKSTR,DG1018
          MOVE      BLANKSTR,DG1019
.
          PACK      SEGSTRNG,ANSD,ANSG,ONE,PIPE:
                             DG1001,PIPE,DG1002,PIPE,DG1003,PIPE,DG1004,PIPE:
                             DG1005,PIPE,DG1006,PIPE,DG1007,PIPE,DG1008,PIPE:
                             DG1009,PIPE,DG1010,PIPE,DG1011,PIPE,DG1012,PIPE:
                             DG1013,PIPE,DG1014,PIPE,DG1015,PIPE,DG1016,PIPE:
                             DG1017,PIPE,DG1018,PIPE,DG1019,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRDG1910:               * connection lost
                         WRDG1920                * timeout
.
.         Now send all the current diagnoses for the admission
.
          MOVE      ZERO,COUNTER                 * initialise counter
.
          BRANCH    MESSNUMB,WRDG1400:           * ADT Admission
                             WRDG1400:           * ADT Transfer
                             WRDG1400:           * ADT Discharge
                             WRDG1100:           * Emerg. Discharge
                             WRDG1200:           * O/P Attendance
                             WRDG1100:           * Emerg. Attendance
                             WRDG1200:           * O/P Booking
                             WRDG1400:           * ADT Visit Update
                             WRDG1200:           * O/P Visit Update
                             WRDG1100:           * Emer. Visit Update
                             WRDG1400:           * ADT Cancel Admission
                             WRDG1200:           * O/P Unattend
                             WRDG1100:           * Emer. Cancel Visit
                             WRDG1400:           * ADT Cancel Transfer
                             WRDG1400:           * ADT Cancel Discharge
                             WRDG1100:           * Emer. Cancel Discharge
                             WRDG1400:           * ADT Pre-admit
                             WRDG1400:           * ADT On-leave (0903091)
                             WRDG1400:           * ADT Return f Leave (0903091)
                             WRDG1900:           * ADT Cancel P-admit (not used)
                             WRDG1900:           * PMI Registration (not used)
                             WRDG1900:           * PMI Update (not used)
                             WRDG1900:           * PMI Merge (not used)
                             WRDG1200:           * O/P Cancel Booking
                             WRDG1900:           * ADT Move Visit (not used)
                             WRDG1900:           * O/P Move Visit (not used)
                             WRDG1900:           * Emerg. Move Visit (not used)
                             WRDG1900:           * HCP Master File (not used)
                             WRDG1900:           * add new theatre booking
                             WRDG1900:           * change theatre booking
                             WRDG1900:           * cancel theatre booking
                             WRDG1900:           * add A/H referral
                             WRDG1600:           * modify A/H referral(ptcnmdg1)
                             WRDG1900:           * cancel A/H referral
                             WRDG1900:           * add A/H encounter
                             WRDG1900:           * modify A/H encounter
                             WRDG1900:           * cancel A/H encounter
                             WRDG1300:           * W/L booking
                             WRDG1300:           * W/L booking update
                             WRDG1300:           * W/L cancel booking
                             WRDG1900:           * OUT Master File (not used)
                             WRDG1900:           * W/L Move Visit (not used)
                             WRDG1300:           * W/L transfer
                             WRDG1200:           * O/P discharge
                             WRDG1200:           * Cancel O/P discharge
                             WRDG1900:           * A/H Move Visit (not used)
                             WRDG1300:           * Add W/L entry
                             WRDG1300:           * Update W/L entry
                             WRDG1300:           * Remove W/L entry
                             WRDG1900            * PMI UnMerge (not used)
.
WRDG1100  CALL      EDG10000                     * format Emergency DG1 segment
          BRANCH    EXIT,WRDG1910:               * connection lost
                         WRDG1920                * timeout
          GOTO      WRDG1900
.
WRDG1200  CALL      ODG10000                     * format O/P DG1 segment
          BRANCH    EXIT,WRDG1910:               * connection lost
                         WRDG1920                * timeout
          GOTO      WRDG1900
.
WRDG1300  CALL      WDG10000                     * format W/L DG1 segment
          BRANCH    EXIT,WRDG1910:               * connection lost
                         WRDG1920                * timeout
          GOTO      WRDG1900
.
WRDG1400  CALL      ADDG1000                     * format ADT DG1 segment
          BRANCH    EXIT,WRDG1910:               * connection lost
                         WRDG1920                * timeout
.
.         Get the medical records coding for this admission
.
          MOVE      ZERO,DG1COUNT
.
          PACK      KEY13,AADMNO,SP1,ONE,SP20
          CALL      RSPTECD1                     * position on admission
WRDG1500  CALL      RKPTECD1                     * read next record
          BRANCH    OVRCD,WRDG1600               * eof - finished
.
          MATCH     AADMNO,PTEDADMN              * same admission still ?
          GOTO      WRDG1600 IF NOT EQUAL        * no - finished
.
          COMPARE   ONE,PTEDEPNO                 * same episode still ?
          GOTO      WRDG1600 IF NOT EQUAL        * no - finished
.
          CALL      CLDG1000                     * clear DG1 fields
.
          ADD       ONE,DG1COUNT
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,DG1001               * set id
          SQUEEZE   DG1001
          MOVE      DG1COUNT,DG1015
          SQUEEZE   DG1015
.
          MOVE      PTEDEPNO,DG1002              * set diagnosis coding method
          SQUEEZE   DG1002                       *    as episode number
.
          MOVE      PTEDCODE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1003              * set diagnosis code
.
          IF        ASTAT=3
            MOVE      DDATE,CODINGDT             * load discharge date
          ELSE
            MOVE      PTEDDTCD,CODINGDT          * load date of coding
          ENDIF
          CALL      GTICD000                     * get ICD description/version
.
          MATCH     SP8,PTEDDTCD                 * date blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,DG1005            * yes
          ELSE
            MOVE      PTEDDTCD,DG1005            * no - set diag. (coding) date
          ENDIF
.
          IF        ASTAT = 3
            MOVE      ANSF,DG1006
            IF        MESSNUMB = 15
              MOVE      ANSW,DG1006              * not discharged for A13
            ENDIF
          ELSE
            MOVE      ANSW,DG1006
          ENDIF
.
          PACK      SEGSTRNG,ANSD,ANSG,ONE,PIPE:
                             DG1001,PIPE,DG1002,PIPE,DG1003,PIPE,DG1004,PIPE:
                             DG1005,PIPE,DG1006,PIPE,DG1007,PIPE,DG1008,PIPE:
                             DG1009,PIPE,DG1010,PIPE,DG1011,PIPE,DG1012,PIPE:
                             DG1013,PIPE,DG1014,PIPE,DG1015,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRDG1910:               * connection lost
                         WRDG1920                * timeout
.
          GOTO      WRDG1500                     * get next disease record
.
WRDG1600  CALL      MHDG1000                     * get mental health diagnoses
.
WRDG1900  IF        COUNTER = 0 & DISPFLAG = 1
            DISPLAY   "No data for [DG1] segment",*R,*N;
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      WRDG1999
.
WRDG1910  MOVE      ONE,EXIT
          GOTO      WRDG1999
.
WRDG1920  MOVE      TWO,EXIT
.
WRDG1999  RETURN
+
.*****************************************************************************
.*                           ADDG1000              Called by: WRDG1000       *
.*      Load the DG1 fields for an ADT message (free format diagnosis only)  *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
.         Check if we are sending the free text admitting/presenting diagnoses
.
ADDG1000  MOVE      ZERO,F1
          MOVE      PTCNADIG,F1
          IF        F1 < 1 | F1 > 5
            GOTO      ADDG1900                   * no - finished
          ENDIF
.
.         First check for a free format diagnosis (either adiag1 or adiag2)
.
          MATCH     SP50,ADIAG1                  * admitting diagnosis 1 blank ?
          IF        @EQUAL
            MATCH     SP50,ADIAG2                * admitting diagnosis 2 blank ?
            GOTO      ADDG1500 IF EQUAL          * yes - check for ICD code
          ENDIF
.
          CALL      CLDG1000                     * no - clear DG1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,DG1001               * set id
          SQUEEZE   DG1001
.
          MOVE      ADIAG1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1004              * load admitting diagnosis 1
          STRIP     DG1004
.
          MATCH     SP50,ADIAG2                  * admitting diagnosis 2 blank?
          GOTO      ADDG1100 IF EQUAL
.
          ENDSET    DG1004                       * no - append diagnosis 2
          MATCH     SP50,ADIAG1                  * admitting diagnosis 1 blank ?
          IF        !@EQUAL
            APPEND    SP1,DG1004                 * send space between diag 1 & 2
          ENDIF
          MOVE      ADIAG2,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,DG1004              * load diagnosis 2
          RESET     DG1004
          STRIP     DG1004
.
ADDG1100  MOVE      ANSA,DG1006                  * set type to "Admitting"
.
          PACK      SEGSTRNG,ANSD,ANSG,ONE,PIPE:
                         DG1001,PIPE,DG1002,PIPE,DG1003,PIPE,DG1004,PIPE:
                         DG1005,PIPE,DG1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,ADDG1910:               * connection lost
                         ADDG1920                * timeout
.
.         Now check if there is a provisional ICD diagnosis code
.
ADDG1500  MATCH     SP9,PMVXPICD                 * provisional diagnosis blank ?
          GOTO      ADDG1900 IF EQUAL            * yes - finished
.
          CALL      CLDG1000                     * no - clear DG1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,DG1001               * set id
          SQUEEZE   DG1001
.
          MOVE      PMVXPICD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1003              * load provisional diagnosis
.
          MOVE      ADATE,CODINGDT
          CALL      GTICD000                     * get ICD description/version
.
          MOVE      ANSA,DG1006                  * set type to "Admitting"
.
          PACK      SEGSTRNG,ANSD,ANSG,ONE,PIPE:
                         DG1001,PIPE,DG1002,PIPE,DG1003,PIPE,DG1004,PIPE:
                         DG1005,PIPE,DG1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,ADDG1910:               * connection lost
                         ADDG1920                * timeout
.
ADDG1900  MOVE      ZERO,EXIT
          GOTO      ADDG1999
.
ADDG1910  MOVE      ONE,EXIT
          GOTO      ADDG1999
.
ADDG1920  MOVE      TWO,EXIT
.
ADDG1999  RETURN
+
.*****************************************************************************
.*                           WRDRG000           Called by: A08A0000,A03A0000 *
.*                  Write Diagnostic Related Group segment                   *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WRDRG000  MATCH     "1",PTCNSDRG
          GOTO      WRDRG999 IF NOT EQUAL        * sending DRG segment ?
.
          MOVE      "DRG",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [DRG] segment",*R,*N;
          ENDIF
.
          CALL      CLDRG000                     * clear DRG fields
.
          CALL      GTDRG000                     * Get DRG code and version
.
          MATCH     SP70,DDRGCODE
          IF        @EQUAL
            MOVE      BLANKSTR,DRG001            * blank DRG code
            GOTO      WRDRG900
          ENDIF
.
          UNPACK    DRGVER,D2,D1
          MOVE      D2,F2
          PACK      D4,F2,DOT,D1                 * format DRG version
          MATCH     " 6.2",D4
          IF        @EQUAL
            MOVE      " 6.x",D4
          ENDIF
          SQUEEZE   D4
.
          MOVE      DDRGCODE,FIELDSTR            * DRG code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DRG001
          ENDSET    DRG001
.
          MOVE      "No DRG description",FIELDSTR
          PACK      KEY7,DDRGCODE,DRGVER,SP70
          CALL      RDPTDGW1
          IF        OVRCD = 0
            MOVE      PTDWDESC,FIELDSTR          * DRG description
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,DRG001
          APPEND    FIELDSTR,DRG001
          APPEND    CARET,DRG001
          APPEND    D4,DRG001                    * DRG version
          RESET     DRG001
.
WRDRG900  PACK      SEGSTRNG,ANSD,ANSR,ANSG,PIPE:
                             DRG001,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRDRG910:               * connection lost
                         WRDRG920                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      WRDRG999
.
WRDRG910  MOVE      ONE,EXIT
          GOTO      WRDRG999
.
WRDRG920  MOVE      TWO,EXIT
.
WRDRG999  RETURN
+
.*****************************************************************************
.*                             GTICD000            Called by: WRDG1000       *
.*               Get the ICD version of coding                               *
.* Requires:   CODINGDT - date of coding                                     *
.*             DG1003 - with first component (ICD code) & no trailing spaces *
.*             PTCNGDX3 - Go live date for ICD10 version 13        *I-0956210*
.*             PTCNGDX2 - Go live date for ICD10 version 12        *I-0917793*
.*             PTCNGDX1 - Go live date for ICD10 version 11        *I-0869412*
.*             PTCNGDVX - Go live date for ICD10 version 10        *I-0833093*
.*             PTCNGDV9 - Go live date for ICD10 version 9         *I-311669 *
.*             PTCNGDV8 - Go live date for ICD10 version 8         *I-284420 *
.*             PTCNGDV7 - Go live date for ICD10 version 7         *I-219246 *
.*             PTCNGDV6 - Go live date for ICD10 version 6                   *
.*             PTCNGDV5 - Go live date for ICD10 version 5                   *
.* Returns:    DG1003 - with all 3 components                                *
.*             DG1004 - diagnosis description (for backward compatibility)   *
.*****************************************************************************
.
GTICD000  MOVE      BLANKSTR,ICDVERSN
          MOVE      CODINGDT,ICDRDDTE
          CALL      OPICD1
          PACK      KEY9,DG1003,SP9
          ENDSET    DG1003
          APPEND    CARET,DG1003
          MOVE      "Unknown code",FIELDSTR      * get ICD description
          CALL      RDPTICD1
          IF        OVRCD = 0
            IF        ICDRDVER < 8
              MOVE      DDESC,FIELDSTR
            ELSE
              MOVE      PT0DDSC2,FIELDSTR
            ENDIF
            CALL      SPCHR000                   * convert special characters
            MOVE      "ICD10.",ICDVERSN
            ENDSET    ICDVERSN
            APPEND    ICDRDVER,ICDVERSN          * load ICD version
            RESET     ICDVERSN
            SQUEEZE   ICDVERSN
          ENDIF
.
          APPEND    FIELDSTR,DG1003              * load diagnosis description
          APPEND    CARET,DG1003
          APPEND    ICDVERSN,DG1003              * load ICD version
          RESET     DG1003
.
          MOVE      FIELDSTR,DG1004
.
GTICD999  RETURN
+
.*****************************************************************************
.*                             GTICO000            Called by: WPR10000       *
.*               Get the ICD version of coding                               *
.* Requires:   CODINGDT - date of coding                                     *
.*             PR1003 - with first component (ICD code) & no trailing spaces *
.*             PTCNGDX3 - Go live date for ICD10 version 13        *I-0956210*
.*             PTCNGDX2 - Go live date for ICD10 version 12        *I-0917793*
.*             PTCNGDX1 - Go live date for ICD10 version 11        *I-0869412*
.*             PTCNGDVX - Go live date for ICD10 version 10        *I-0833093*
.*             PTCNGDV9 - Go live date for ICD10 version 9         *I-311669 *
.*             PTCNGDV8 - Go live date for ICD10 version 8         *I-284420 *
.*             PTCNGDV7 - Go live date for ICD10 version 7         *I-219246 *
.*             PTCNGDV6 - Go live date for ICD10 version 6                   *
.*             PTCNGDV5 - Go live date for ICD10 version 5                   *
.* Returns:    PR1003 - with all 3 components                                *
.*****************************************************************************
.
GTICO000  MOVE      BLANKSTR,ICDVERSN
          MOVE      CODINGDT,ICDRDDTE
          CALL      OPICO1
          PACK      KEY9,PR1003,SP9
          ENDSET    PR1003
          APPEND    CARET,PR1003
          MOVE      "Unknown code",FIELDSTR      * get ICD description
          CALL      RDPTICO1
          IF        OVRCD = 0
            IF        ICDRDVER < 8
              MOVE      ODESC,FIELDSTR
            ELSE
              MOVE      PT0ODSC2,FIELDSTR
            ENDIF
            CALL      SPCHR000                   * convert special characters
            MOVE      "ICD10.",ICDVERSN
            ENDSET    ICDVERSN
            APPEND    ICDRDVER,ICDVERSN          * load ICD version
            RESET     ICDVERSN
            SQUEEZE   ICDVERSN
          ENDIF
.
          APPEND    FIELDSTR,PR1003              * load diagnosis description
          APPEND    CARET,PR1003
          APPEND    ICDVERSN,PR1003              * load ICD version
          RESET     PR1003
.
GTICO999  RETURN
+
.*****************************************************************************
.*                           WRIN1000              Called by: A01A0000       *
.*                  Write Insurance segment                   A04O0000       *
.* Note:  This segment is not being sent for A28, A31 & A34   A04E0000       *
.*        messages.  Branch statements have included these    A05O0000       *
.*        messages for completeness in case they are          A08A0000       *
.*        required at a later date.                           A08O0000       *
.* Returns:  EXIT  0 = Segment sent ok                        A08E0000       *
.*                 1 = Connection lost                        A13A0000       *
.*                 2 = Timeout                                A13E0000       *
.*                                                            A14E0000       *
.*****************************************************************************
.
WRIN1000  COMPARE   ZERO,REFLFLAG                * O/P Referral message ?
          GOTO      WRIN1900 IF EQUAL            * yes - don't send IN1
.
.         If this is HL7QUERY running, then we need to determine if
.         this is a compensable claim.  If it is, then we will need to send
.         additional information in the segment for the CHARM interface.
.
          MOVE      ZERO,CHRMFLAG                * load default value
          MATCH     "HL7QUERY",PRGID             * HL7QUERY ?
          GOTO      WRIN1100 IF NOT EQUAL        * no
.
          MOVE      SP20,WCCLMNO                 * clear insurance fields
          MOVE      SP20,MREFNO
          MOVE      SP20,VCLMNO
          MOVE      SP30,INAME
          PACK      IADD1,SP30,SP5
          PACK      IADD2,SP30,SP5
          PACK      IADD3,SP30,SP5
          PACK      IADD4,SP30,SP5
          MOVE      SP8,IPOST
          MOVE      SP30,ICONT
          MOVE      SP20,ITELEB
.
          MATCH     SP3,ACLAIM                   * financial class blank ?
          GOTO      WRIN1100 IF EQUAL            * yes
.
          MOVE      ZERO,COUNTER                 * initialise counter
          PACK      KEY5,ANSC,ANSL,ACLAIM
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 0
            WHILE     COUNTER < 5
              ADD      ONE,COUNTER
              LOAD     ANS,COUNTER,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
              MATCH    SP1,ANS                   * blank indicator ?
              IF       !@EQUAL
                MATCH    ANSW,ANS                * no - worker's comp ?
                IF       @EQUAL
                  MOVE     AADMNO,KEY8
                  CALL     RDWCOM1               * worker's comp record found ?
                  BRANCH   OVRCD,WRIN1100        * no
                  MOVE     ONE,CHRMFLAG          * yes
                  MOVE     FIVE,COUNTER
                ELSE
                  MATCH    ANSM,ANS              * motor accident ?
                  IF       @EQUAL
                    MOVE     AADMNO,KEY8
                    CALL     RDWMAB1             * TAC record found ?
                    BRANCH   OVRCD,WRIN1100      * no
                    MOVE     TWO,CHRMFLAG        * yes
                    MOVE     FIVE,COUNTER
                  ELSE
                    MATCH    ANSV,ANS            * veteran's affair ?
                    IF       @EQUAL
                      MOVE     AADMNO,KEY8
                      CALL     RDWVET1           * Vet Affairs record found ?
                      BRANCH   OVRCD,WRIN1100    * no
                      MOVE     THREE,CHRMFLAG    * yes
                      MOVE     FIVE,COUNTER
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            DO
          ENDIF
.
          COMPARE   ZERO,CHRMFLAG                * compensable claim ?
          GOTO      WRIN1100 IF EQUAL            * no
.
.         This is a compensable claim for HL7QUERY, so get the corresponding
.         insurance company record.
.
          MOVE      SP6,KEY6
          LOAD      KEY6,CHRMFLAG,WCICODE,CMABINS,CVETINS
          MATCH     SP6,KEY6
          GOTO      WRIN1100 IF EQUAL
          CALL      RDINSR1                      * insurance co. record found ?
.
WRIN1100  MOVE      "IN1",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [IN1] segment",*R,*N;
          ENDIF
.
          CALL      CLIN1000                     * clear IN1 fields
.
.         Set patient class
.
          MOVE      ONE,IN1001                   * set id
.
.         Set Health Fund Table
.
          BRANCH    MESSNUMB,WRIN1130:           * ADT Admission
                             WRIN1900:           * ADT Transfer (not used)
                             WRIN1900:           * ADT Discharge (not used)
                             WRIN1900:           * Emerg. Discharge (not used)
                             WRIN1120:           * O/P Attendance
                             WRIN1110:           * Emerg. Attendance
                             WRIN1120:           * O/P Booking
                             WRIN1130:           * ADT Visit Update
                             WRIN1120:           * O/P Visit Update
                             WRIN1110:           * Emer. Visit Update
                             WRIN1900:           * ADT Cancel Admiss. (not used)
                             WRIN1900:           * O/P Unattend (not used)
                             WRIN1900:           * Emer. Cancel Visit (not used)
                             WRIN1900:           * ADT Cancel Trans. (not used)
                             WRIN1130:           * ADT Cancel Discharge
                             WRIN1110:           * Emer. Cancel Discharge
                             WRIN1130:           * ADT Pre-admit
                             WRIN1900:           * ADT On-leave (not used)
                             WRIN1900:           * ADT Return f Leave (not used)
                             WRIN1900:           * ADT Cancel P-admit (not used)
                             WRIN1900:           * PMI Registration (not used)
                             WRIN1900:           * PMI Update (not used)
                             WRIN1900:           * PMI Merge (not used)
                             WRIN1900:           * O/P Cancel Booking (not used)
                             WRIN1900:           * ADT Move Visit (not used)
                             WRIN1900:           * O/P Move Visit (not used)
                             WRIN1900:           * Emerg. Move Visit (not used)
                             WRIN1900:           * HCP Master File (not used)
                             WRIN1900:           * add new theatre booking
                             WRIN1900:           * change theatre booking
                             WRIN1900:           * cancel theatre booking
                             WRIN1900:           * add A/H referral
                             WRIN1900:           * modify A/H referral
                             WRIN1900:           * cancel A/H referral
                             WRIN1900:           * add A/H encounter
                             WRIN1900:           * modify A/H encounter
                             WRIN1900:           * cancel A/H encounter
                             WRIN1900:           * W/L booking
                             WRIN1900:           * W/L booking update
                             WRIN1900:           * W/L cancel booking
                             WRIN1900:           * OUT Master File (not used)
                             WRIN1900:           * W/L Move Visit (not used)
                             WRIN1900:           * W/L transfer
                             WRIN1900:           * O/P discharge
                             WRIN1120:           * Cancel O/P discharge
                             WRIN1900:           * A/H Move Visit (not used)
                             WRIN1900:           * Add W/L entry
                             WRIN1900:           * Update W/L entry
                             WRIN1900:           * Remove W/L entry
                             WRIN1900            * PMI UnMerge (not used)
.
WRIN1110  MOVE      EMVITABL,DIM8                * Emergency 
          GOTO      WRIN1200 
.
WRIN1120  MOVE      OTBBTBLE,DIM8                * O/P
          GOTO      WRIN1200
.
WRIN1130  MOVE      AFNDTB,DIM8                  * I/P
.
WRIN1200  MATCH     SP8,DIM8                     * blank H.F. table ?
          IF        @EQUAL
            MOVE      BLANKSTR,IN1002            * yes
          ELSE
            MOVE      DIM8,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,IN1002            * set insurance plan id
            ENDSET    IN1002
            APPEND    CARET,IN1002
            APPEND    CARET,IN1002
            APPEND    "webPAS",IN1002
            RESET     IN1002
          ENDIF
.
.         Set Health Fund Code
.
          BRANCH    MESSNUMB,WRIN1230:           * ADT Admission
                             WRIN1900:           * ADT Transfer (not used)
                             WRIN1900:           * ADT Discharge (not used)
                             WRIN1900:           * Emerg. Discharge (not used)
                             WRIN1220:           * O/P Attendance
                             WRIN1210:           * Emerg. Attendance
                             WRIN1220:           * O/P Booking
                             WRIN1230:           * ADT Visit Update
                             WRIN1220:           * O/P Visit Update
                             WRIN1210:           * Emer. Visit Update
                             WRIN1900:           * ADT Cancel Admiss. (not used)
                             WRIN1900:           * O/P Unattend (not used)
                             WRIN1900:           * Emer. Cancel Visit (not used)
                             WRIN1900:           * ADT Cancel Trans. (not used)
                             WRIN1230:           * ADT Cancel Discharge
                             WRIN1210:           * Emer. Cancel Discharge
                             WRIN1230:           * ADT Pre-admit
                             WRIN1900:           * ADT On-leave (not used)
                             WRIN1900:           * ADT Return f Leave (not used)
                             WRIN1900:           * ADT Cancel P-admit (not used)
                             WRIN1900:           * PMI Registration (not used)
                             WRIN1900:           * PMI Update (not used)
                             WRIN1900:           * PMI Merge (not used)
                             WRIN1900:           * O/P Cancel Booking (not used)
                             WRIN1900:           * ADT Move Visit (not used)
                             WRIN1900:           * O/P Move Visit (not used)
                             WRIN1900:           * Emerg. Move Visit (not used)
                             WRIN1900:           * HCP Master File (not used)
                             WRIN1900:           * add new theatre booking
                             WRIN1900:           * change theatre booking
                             WRIN1900:           * cancel theatre booking
                             WRIN1900:           * add A/H referral
                             WRIN1900:           * modify A/H referral
                             WRIN1900:           * cancel A/H referral
                             WRIN1900:           * add A/H encounter
                             WRIN1900:           * modify A/H encounter
                             WRIN1900:           * cancel A/H encounter
                             WRIN1900:           * W/L booking
                             WRIN1900:           * W/L booking update
                             WRIN1900:           * W/L cancel booking
                             WRIN1900:           * OUT Master File (not used)
                             WRIN1900:           * W/L Move Visit (not used)
                             WRIN1900:           * W/L transfer
                             WRIN1900:           * O/P discharge
                             WRIN1220:           * Cancel O/P discharge
                             WRIN1900:           * A/H Move Visit (not used)
                             WRIN1900:           * Add W/L entry
                             WRIN1900:           * Update W/L entry
                             WRIN1900:           * Remove W/L entry
                             WRIN1900            * PMI UnMerge (not used)
.
WRIN1210  MOVE      EMVIFUND,DIM6                * Emergency
          GOTO      WRIN1300
.
WRIN1220  MOVE      OTBBFUND,DIM6                * O/P
          GOTO      WRIN1300
.
WRIN1230  MOVE      AFUNDH,DIM6                  * I/P
.
WRIN1300  MATCH     SP6,DIM6                     * blank H.F. ?
          IF        @EQUAL
            MOVE      BLANKSTR,IN1003            * yes
          ELSE
            MOVE      DIM6,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,IN1003            * set insurance company id
          ENDIF
.
.         This is the HL7QUERY running and this is a compensable claim.
.         Add the financial class (patmi1af.aclaim) to component 5 of IN1-03
.
          COMPARE   ZERO,CHRMFLAG                * running for HL7QUERY ?
          GOTO      WRIN1305 IF EQUAL            * no
.
          ENDSET    IN1003
          APPEND    CARET,IN1003
          APPEND    CARET,IN1003
          APPEND    CARET,IN1003
          APPEND    CARET,IN1003
          MOVE      ACLAIM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,IN1003
          RESET     IN1003
.
.         Populate IN1-4 for compensable claims with the insurance company name
.
          MATCH     SP30,INAME
          IF        @EQUAL
            MOVE      BLANKSTR,IN1004
          ELSE
            MOVE      INAME,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,IN1004
          ENDIF
.
.         Populate IN1-5 for compensable claims with the insurance company
.         address
.
          MATCH     SP35,IADD1
          IF        @EQUAL
            MOVE      BLANKSTR,IN1005
          ELSE
            MOVE      IADD1,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,IN1005
          ENDIF
          ENDSET    IN1005
          APPEND    CARET,IN1005 
.
          MATCH     SP35,IADD2
          IF        @EQUAL
            APPEND    BLANKSTR,IN1005
          ELSE
            MOVE      IADD2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,IN1005
          ENDIF
          APPEND    CARET,IN1005 
.
          MATCH     SP35,IADD3
          IF        @EQUAL
            APPEND    BLANKSTR,IN1005
          ELSE
            MOVE      IADD3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,IN1005
          ENDIF
          APPEND    CARET,IN1005 
.
          MATCH     SP35,IADD4
          IF        @EQUAL
            APPEND    BLANKSTR,IN1005
          ELSE
            MOVE      IADD4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,IN1005
          ENDIF
          APPEND    CARET,IN1005 
.
          MATCH     SP35,IPOST
          IF        @EQUAL
            APPEND    BLANKSTR,IN1005
          ELSE
            MOVE      IPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,IN1005
          ENDIF
          APPEND    CARET,IN1005 
          APPEND    CARET,IN1005 
          APPEND    ANSB,IN1005                  * address type = B (business)
          RESET     IN1005
.
.         Populate IN1-6 for compensable claims with the insurance company
.         contact person
.
          MATCH     SP30,ICONT
          IF        @EQUAL
            MOVE      BLANKSTR,IN1006
          ELSE
            MOVE      ICONT,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,IN1006
          ENDIF
.
.         Populate IN1-7 for compensable claims with the insurance company
.         phone number
.
          MATCH     SP20,ITELEB
          IF        @EQUAL
            PACK      IN1007,CARET,CARET,CARET,CARET,CARET,CARET,CARET,CARET:
                             BLANKSTR
          ELSE
            MOVE      ITELEB,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            SQUEEZE   FIELDSTR
            PACK      IN1007,CARET,CARET,CARET,CARET,CARET,CARET,CARET,CARET:
                             FIELDSTR
          ENDIF
.
.         Set Health Fund Membership Number
.
WRIN1305  BRANCH    MESSNUMB,WRIN1400:           * ADT Admission
                             WRIN1900:           * ADT Transfer (not used)
                             WRIN1900:           * ADT Discharge (not used)
                             WRIN1900:           * Emerg. Discharge (not used)
                             WRIN1500:           * O/P Attendance
                             WRIN1400:           * Emerg. Attendance
                             WRIN1500:           * O/P Booking
                             WRIN1400:           * ADT Visit Update
                             WRIN1500:           * O/P Visit Update
                             WRIN1400:           * Emer. Visit Update
                             WRIN1900:           * ADT Cancel Admiss. (not used)
                             WRIN1900:           * O/P Unattend (not used)
                             WRIN1900:           * Emer. Cancel Visit (not used)
                             WRIN1900:           * ADT Cancel Trans. (not used)
                             WRIN1400:           * ADT Cancel Discharge
                             WRIN1400:           * Emer. Cancel Discharge
                             WRIN1400:           * ADT Pre-admit
                             WRIN1900:           * ADT On-leave (not used)
                             WRIN1900:           * ADT Return f Leave (not used)
                             WRIN1900:           * ADT Cancel P-admit (not used)
                             WRIN1900:           * PMI Registration (not used)
                             WRIN1900:           * PMI Update (not used)
                             WRIN1900:           * PMI Merge (not used)
                             WRIN1900:           * O/P Cancel Booking (not used)
                             WRIN1900:           * ADT Move Visit (not used)
                             WRIN1900:           * O/P Move Visit (not used)
                             WRIN1900:           * Emerg. Move Visit (not used)
                             WRIN1900:           * HCP Master File (not used)
                             WRIN1900:           * add new theatre booking
                             WRIN1900:           * change theatre booking
                             WRIN1900:           * cancel theatre booking
                             WRIN1900:           * add A/H referral
                             WRIN1900:           * modify A/H referral
                             WRIN1900:           * cancel A/H referral
                             WRIN1900:           * add A/H encounter
                             WRIN1900:           * modify A/H encounter
                             WRIN1900:           * cancel A/H encounter
                             WRIN1900:           * W/L booking
                             WRIN1900:           * W/L booking update
                             WRIN1900:           * W/L cancel booking
                             WRIN1900:           * OUT Master File (not used)
                             WRIN1900:           * W/L Move Visit (not used)
                             WRIN1900:           * W/L transfer
                             WRIN1900:           * O/P discharge
                             WRIN1500:           * Cancel O/P discharge
                             WRIN1900:           * A/H Move Visit (not used)
                             WRIN1900:           * Add W/L entry
                             WRIN1900:           * Update W/L entry
                             WRIN1900:           * Remove W/L entry
                             WRIN1900            * PMI UnMerge (not used)
.
WRIN1400  MATCH     SP15,PMVXFNDM                * blank H.F. Policy No.?
          IF        @EQUAL
            MOVE      BLANKSTR,IN1036            * yes
          ELSE
            MOVE      PMVXFNDM,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,IN1036            * set policy number
          ENDIF
.
          COMPARE   ZERO,CHRMFLAG
          GOTO      WRIN1500 IF EQUAL
.
.         This is the HL7QUERY running and this is a compensable claim.
.         Populate IN1-49 for compensable claims with the insurance company
.         claim number
.
          MOVE      SP20,DIM20
          LOAD      DIM20,CHRMFLAG,WCCLMNO,MREFNO,VCLMNO
          PACK      DIM20,DIM20,SP20
          MATCH     SP20,DIM20
          IF        @EQUAL
            MOVE      BLANKSTR,IN1049
          ELSE
            MOVE      DIM20,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,IN1049
          ENDIF
          ENDSET    IN1049
          APPEND    CARET,IN1049
          APPEND    CARET,IN1049
          APPEND    CARET,IN1049
          APPEND    CARET,IN1049
          MOVE      ACLAIM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,IN1049
          RESET     IN1049
.
WRIN1500  IF        CHRMFLAG = 0
            PACK      SEGSTRNG,ANSI,ANSN,ONE,PIPE:
                               IN1001,PIPE,IN1002,PIPE,IN1003,PIPE,IN1004,PIPE:
                               IN1005,PIPE,IN1006,PIPE,IN1007,PIPE,IN1008,PIPE:
                               IN1009,PIPE,IN1010,PIPE,IN1011,PIPE,IN1012,PIPE:
                               IN1013,PIPE,IN1014,PIPE,IN1015,PIPE,IN1016,PIPE:
                               IN1017,PIPE,IN1018,PIPE,IN1019,PIPE,IN1020,PIPE:
                               IN1021,PIPE,IN1022,PIPE,IN1023,PIPE,IN1024,PIPE:
                               IN1025,PIPE,IN1026,PIPE,IN1027,PIPE,IN1028,PIPE:
                               IN1029,PIPE,IN1030,PIPE,IN1031,PIPE,IN1032,PIPE:
                               IN1033,PIPE,IN1034,PIPE,IN1035,PIPE,IN1036:
                               CRETURN
          ELSE
            PACK      SEGSTRNG,ANSI,ANSN,ONE,PIPE:
                               IN1001,PIPE,IN1002,PIPE,IN1003,PIPE,IN1004,PIPE:
                               IN1005,PIPE,IN1006,PIPE,IN1007,PIPE,IN1008,PIPE:
                               IN1009,PIPE,IN1010,PIPE,IN1011,PIPE,IN1012,PIPE:
                               IN1013,PIPE,IN1014,PIPE,IN1015,PIPE,IN1016,PIPE:
                               IN1017,PIPE,IN1018,PIPE,IN1019,PIPE,IN1020,PIPE:
                               IN1021,PIPE,IN1022,PIPE,IN1023,PIPE,IN1024,PIPE:
                               IN1025,PIPE,IN1026,PIPE,IN1027,PIPE,IN1028,PIPE:
                               IN1029,PIPE,IN1030,PIPE,IN1031,PIPE,IN1032,PIPE:
                               IN1033,PIPE,IN1034,PIPE,IN1035,PIPE,IN1036,PIPE:
                               IN1037,PIPE,IN1038,PIPE,IN1039,PIPE,IN1040,PIPE:
                               IN1041,PIPE,IN1042,PIPE,IN1043,PIPE,IN1044,PIPE:
                               IN1045,PIPE,IN1046,PIPE,IN1047,PIPE,IN1048,PIPE:
                               IN1049,CRETURN
          ENDIF
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRIN1910:               * connection lost
                         WRIN1920                * timeout
.
WRIN1900  MOVE      ZERO,EXIT
          GOTO      WRIN1999
.
WRIN1910  MOVE      ONE,EXIT
          GOTO      WRIN1999
.
WRIN1920  MOVE      TWO,EXIT
.
WRIN1999  RETURN
+
.*****************************************************************************
.*                           WRPV1000           Called by: all message types *
.*              Write Patient Visit segment                except A28 & A31  *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WRPV1000  MOVE      SP70,PV1CLCOD
          MOVE      "PV1",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [PV1] segment",*R,*N;
          ENDIF
.
          CALL      CLPV1000                     * clear PV1 fields
.
          BRANCH    MESSNUMB,WRPV1100:           * ADT Admission
                             WRPV1100:           * ADT Transfer
                             WRPV1100:           * ADT Discharge
                             WRPV1300:           * Emergency Discharge
                             WRPV1200:           * O/P Attendance
                             WRPV1300:           * Emergency Attendance
                             WRPV1200:           * O/P Booking
                             WRPV1100:           * ADT Visit Update
                             WRPV1200:           * O/P Visit Update
                             WRPV1300:           * Emergency Visit Update
                             WRPV1100:           * ADT Cancel Admission
                             WRPV1200:           * O/P Unattend
                             WRPV1300:           * Emergency Cancel Visit
                             WRPV1100:           * ADT Cancel Transfer
                             WRPV1100:           * ADT Cancel Discharge
                             WRPV1300:           * Emergency Cancel Discharge
                             WRPV1100:           * ADT Pre-admit
                             WRPV1100:           * ADT On-leave
                             WRPV1100:           * ADT Return from Leave
                             WRPV1100:           * ADT Cancel Pre-admit
                             WRPV1100:           * PMI Registration
                             WRPV1100:           * PMI Update
                             WRPV1900:           * PMI Merge (not used)
                             WRPV1200:           * O/P Cancel Booking
                             WRPV1900:           * ADT Move Visit (not used)
                             WRPV1900:           * O/P Move Visit (not used)
                             WRPV1900:           * Emerg. Move Visit (not used)
                             WRPV1900:           * HCP Master File (not used)
                             WRPV1400:           * Add new theatre booking
                             WRPV1400:           * Change Theatre Booking
                             WRPV1400:           * Cancel Theatre Booking
                             WRPV1500:           * add A/H referral
                             WRPV1500:           * modify A/H referral
                             WRPV1500:           * cancel A/H referral
                             WRPV1500:           * add A/H encounter
                             WRPV1500:           * modify A/H encounter
                             WRPV1500:           * cancel A/H encounter
                             WRPV1600:           * W/L booking
                             WRPV1600:           * W/L booking update
                             WRPV1600:           * W/L cancel booking
                             WRPV1900:           * OUT Master File (not used)
                             WRPV1900:           * W/L Move Visit (not used)
                             WRPV1600:           * W/L transfer
                             WRPV1200:           * O/P discharge
                             WRPV1200:           * Cancel O/P discharge
                             WRPV1900:           * A/H Move Visit (not used)
                             WRPV1600:           * Add W/L entry
                             WRPV1600:           * Update W/L entry
                             WRPV1600:           * Remove W/L entry
                             WRPV1900            * PMI UnMerge (not used)
.
WRPV1100  CALL      ADPV1000                     * ADT messages
          GOTO      WRPV1800
.
WRPV1200  CALL      OPV10000                     * O/P messages
          GOTO      WRPV1800
.
WRPV1300  CALL      EPV10000                     * Emergency messages
          GOTO      WRPV1800
.
WRPV1400  CALL      TPV10000                     * Theatre Booking messages
          GOTO      WRPV1800
.
WRPV1500  CALL      LPV10000                     * A/H messages
          GOTO      WRPV1800
.
WRPV1600  CALL      BPV10000                     * W/L booking messages
          GOTO      WRPV1800
.
WRPV1800  CALL      SENDM000                     * send message
          BRANCH    EXIT,WRPV1910:               * connection lost
                         WRPV1920                * timeout
.
WRPV1900  MOVE      ZERO,EXIT
          GOTO      WRPV1999
.
WRPV1910  MOVE      ONE,EXIT
          GOTO      WRPV1999
.
WRPV1920  MOVE      TWO,EXIT
.
WRPV1999  RETURN
+
.*****************************************************************************
.*                           ADPV1000           Called by: WRPV1000          *
.*              Load the PV1 fields for ADT messages                         *
.*****************************************************************************
.
.         Set patient class.  If the patient is discharged, then use the
.         discharge and admission dates to see if the patient was overnight
.         or sameday.  If the patient is not discharged, then use the discharge
.         intention to determine if the patient was intended to be overnight
.         or sameday
.
ADPV1000  MOVE      ANSI,PV1002                  * default to Overnight patient
.
.         For PMI registration (A28) or PMI update (A31), only need to send
.         up to PV1.2
.
          IF        MESSNUMB = 21|MESSNUMB = 22
            PACK      SEGSTRNG,ANSP,ANSV,ONE,PIPE:
                               PV1001,PIPE,PV1002
            ENDSET    SEGSTRNG
            GOTO      ADPV1900
          ENDIF
.
          IF        ASTAT = 3
            MATCH     ADATE,DDATE
            IF        @EQUAL
              MOVE      ANSS,PV1002              * set to Sameday
            ENDIF
          ELSE
            MOVE      "P ",TCODE                 * default Category "P "
            MOVE      ACLSS,ACODE
            IF        PTCNDSCI > 1 & PTCNDSCI < 6
              PACK      TCODE,ANSU,PTCNDSCI
              LOAD      ACODE,PTCNDSCI,AUSR1,AUSR2,AUSR3,AUSR4,AUSR5
            ELSE
              IF        PTCNDSCI = 6
                MOVE    "VI",TCODE
                MOVE    PMVXIDUS,ACODE
              ENDIF
            ENDIF
            MATCH     SP3,ACODE
            IF        !@EQUAL
              PACK      KEY5,TCODE,ACODE
              CALL      RDCODE1                  * code on file ?
              IF        OVRCD = 0
                MATCH     "2",TCINDC1
                IF        @EQUAL
                  MOVE      ANSS,PV1002          * set to Sameday
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
.         Set assigned patient
.
          BRANCH    MESSNUMB,ADPV1030:           * admit
                             ADPV1030:           * transfer
                             ADPV1030:           * discharge (ADT)
                             ADPV1999:           * discharge (Emergency)
                             ADPV1999:           * O/P attendance
                             ADPV1999:           * Emergency attendance
                             ADPV1999:           * new O/P booking
                             ADPV1030:           * ADT update
                             ADPV1999:           * O/P update
                             ADPV1999:           * Emergency update
                             ADPV1030:           * cancel admit
                             ADPV1999:           * cancel O/P attendance
                             ADPV1999:           * cancel Emergency attendance
                             ADPV1030:           * cancel transfer
                             ADPV1030:           * cancel I/P discharge
                             ADPV1999:           * cancel ED discharge
                             ADPV1050:           * pre-admission
                             ADPV1030:           * on-leave
                             ADPV1030:           * return from leave
                             ADPV1050:           * cancel pre-admission
                             ADPV1999:           * add person information
                             ADPV1999:           * update person information
                             ADPV1999:           * merge person information
                             ADPV1999:           * cancel O/P booking
                             ADPV1999:           * change U/R for I/P visit
                             ADPV1999:           * change U/R for O/P visit
                             ADPV1999            * change U/R for EMR visit
.
          GOTO      ADPV1999
.
.         Check if this is an update of a pre-admission, and if so, no need to
.         set ward
.
ADPV1030  IF        (MESSNUMB = 8) & (ASTAT = 1)
            GOTO      ADPV1050
          ENDIF
.
.         Get current ward/bed.
.
          MOVE      TWARD,WRDSTRNG
          MOVE      TBED,BEDSTRNG
.
          MATCH     "1",PTCNH7WD                * using short description ?
          GOTO      ADPV1035 IF NOT EQUAL       * no
.
          PACK      KEY6,TWARD,SP6
          CALL      RDWARD1
          BRANCH    OVRCD,ADPV1035
.
          MOVE      PTWDSDES,WRDSTRNG
.
ADPV1035  MOVE      WRDSTRNG,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PV1003
.
          MATCH     SP3,BEDSTRNG                 * bed blank ?
          GOTO      ADPV1040 IF EQUAL            * yes
.
          MATCH     "1",PTCNH7WD                 * using short description ?
          GOTO      ADPV1037 IF NOT EQUAL        * no
.
          PACK      KEY6,TWARD,TBED
          CALL      RDWARD1
          BRANCH    OVRCD,ADPV1037
.
          MOVE      PTWDSDES,BEDSTRNG
.
ADPV1037  ENDSET    PV1003                       * no - load bed
.
.     Checks if flag for ignoring bed for patient on standby
.
          IF        MESSNUMB=1|MESSNUMB=2|MESSNUMB=3|MESSNUMB=8|MESSNUMB=18|MESSNUMB=19
            MATCH     "1",PTCNDBVC
            IF        @EQUAL
              IF        H7CITRID=52
                ENDSET    PV1003
                APPEND    CARET,PV1003
                APPEND    CARET,PV1003
                GOTO      ADPV1040
              ENDIF
              MATCH     WSTBY,AADMNO
              IF        @EQUAL
                ENDSET    PV1003
                APPEND    CARET,PV1003
                APPEND    CARET,PV1003
                GOTO      ADPV1040
              ELSE
.               Checks flag for ignoring bed for patient on leave
.                                             or patienst being discharged
                IF        MESSNUMB=2
                  MATCH     ZEROVISN,WADMNO
                  IF        !@EQUAL
                    MATCH     WADMNO,AADMNO
                    IF        !@EQUAL
                      ENDSET    PV1003
                      APPEND    CARET,PV1003
                      APPEND    CARET,PV1003
                      GOTO      ADPV1040
                    ENDIF
                  ENDIF
                ENDIF
                IF        MESSNUMB=18
                  MATCH     "1",PTCNDBVC
                  IF        @EQUAL
                    ENDSET    PV1003
                    APPEND    CARET,PV1003
                    APPEND    CARET,PV1003
                    GOTO      ADPV1040
                  ENDIF
                ELSE
                  IF        MESSNUMB=19 & H7CITRID=3
                    MATCH     "PATDISCH",H7CIINCL     * A22 before discharge
                    IF        @EQUAL
                      MATCH     "1",PTCNDBVC
                      IF        @EQUAL
                        ENDSET    PV1003
                        APPEND    CARET,PV1003
                        APPEND    CARET,PV1003
                        GOTO      ADPV1040
                      ENDIF
                    ENDIF
                  ENDIF
                  IF        MESSNUMB=3 & H7CITRID=53
                    MATCH     "1",PTCNDBVC
                    IF        @EQUAL
                      ENDSET    PV1003
                      APPEND    CARET,PV1003
                      APPEND    CARET,PV1003
                      GOTO      ADPV1040
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
          MOVE      BEDSTRNG,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1003
          RESET     PV1003
.
.     Set location status (parameter based)
.
ADPV1040  MATCH     "1",PTCNH7LS
          GOTO      ADPV1050 IF NOT EQUAL
.
          MATCH     SP3,BEDSTRNG                 * bed blank ?
          IF        @EQUAL
            ENDSET    PV1003
            APPEND    CARET,PV1003
            APPEND    CARET,PV1003
          ENDIF
.
.         Check if the patient is on-leave or on standby before setting the
.         location status
.
          ENDSET    PV1003
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
.
          MATCH     WSTBY,AADMNO
          IF        @EQUAL
            MATCH     "1",PTCNDBVC
            IF        @EQUAL
              APPEND    ANSN,PV1003
            ELSE
              APPEND    ANSS,PV1003
            ENDIF
          ELSE
            IF        ASTAT = 4
              MATCH     "1",PTCNDBVC
              IF        @EQUAL
                APPEND    ANSN,PV1003
              ELSE
                APPEND    ANSL,PV1003
              ENDIF
            ELSE 
.         TSK 0953715/0935149: Set to 'S' if bed is occupied by a different
.         patient and message is A22 (return-from-leave) or A03 (discharge)
              IF      (MESSNUMB=19|MESSNUMB=3)
                MATCH   ZEROVISN,WADMNO
                IF      !@EQUAL
                  MATCH   AADMNO,WADMNO
                  IF      !@EQUAL
                    APPEND    ANSS,PV1003
                  ELSE
                    APPEND    ANSN,PV1003
                  ENDIF
                ELSE
                  APPEND    ANSN,PV1003
                ENDIF
              ELSE
                IF        MESSNUMB=18
                  MATCH     "1",PTCNDBVC
                  IF        @EQUAL
                    APPEND    ANSN,PV1003
                  ELSE
                    APPEND    ANSL,PV1003
                  ENDIF
                ELSE
                  APPEND    ANSN,PV1003
                ENDIF
              ENDIF
            ENDIF
          ENDIF
          RESET     PV1003
.
.         Set admission type.
.         If parameter is set for using Cat CC instead of Cat P, then send
.         the code (acare) & description, otherwise use the standard Cat P and
.         send the code (aclss) only.
.
ADPV1050  MOVE      BLANKSTR,PV1004              * default to blank
          IF        PTCNPV04 = 1
            MATCH     SP3,ACARE                  * care class blank ?
            IF        !@EQUAL
              MOVE      ACARE,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1004          * set admission type
.
              PACK      KEY5,ANSC,ANSC,ACARE
              CALL      RDCODE1
              IF        OVRCD = 0
                ENDSET    PV1004
                APPEND    CARET,PV1004
                MOVE      TDESC,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,PV1004        * set admission type
                RESET     PV1004
              ENDIF
            ENDIF
          ELSE
            MATCH     SP3,ACLSS                  * admiss. type (Cat P) blank ?
            IF        !@EQUAL
              MOVE      ACLSS,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1004          * set admission type
            ENDIF
          ENDIF
.
          MOVE      AADMNO,PV1005                * set pre-admit number
          SQUEEZE   PV1005
          CALL      ALVIS000                     * check for alternate visit id
.
.         Set prior patient location except where:
.         A01 - admission
.         A08 - update (pre-admision)
.         A11 - cancel admission
.         A14 - pre-admission
.         A27 - cancel pre-admission
.         OR
.         Any other message type where there was no previous location
.
.
.         A02 (Transfer)
.            PV1003 = New Location after transfer
.            PV1006 = Location prior to transfer
.         A03 (Discharge)
.            PV1003 = Location prior to discharge
.            PV1006 = Location prior to transfer
.         A08 (Visit Update - Admitted)
.            PV1003 = Current location
.            PV1006 = Location prior to current location
.         A08 (Visit Update - Discharged)
.            PV1003 = Location prior to discharge
.            PV1006 = Location prior to discharge location
.         A12 (Cancel Transfer)
.            PV1003 = Location prior to original transfer
.            PV1006 = Location prior to that in PV1003
.         A13 (Cancel Discharge)
.            PV1003 = Location after cancellation processed
.            PV1006 = Location prior to that in PV1003
.         A21 (On Leave)
.            PV1003 = Location at time of leave
.            PV1006 = Location prior to that in PV1003
.         A22 (Return from Leave)
.            PV1003 = Location on return
.            PV1006 = Location prior to that in PV1003
.
          IF        MESSNUMB=1|MESSNUMB=11|MESSNUMB=17|MESSNUMB=20|(MESSNUMB=8 & ASTAT=1)
            GOTO      ADPV1100
          ELSE
            CALL      GTPL0000
            IF        EXIT = 0
              MOVE      WRDSTRNG,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1006
.
              IF        MESSNUMB=2|MESSNUMB=8
                MATCH     "1",PTCNDBVP
                IF        @EQUAL
                  IF        H7CITRID=52
                    GOTO      ADPV1100
                  ENDIF
                  PACK      KEY6,TWARD,TBED
                  CALL      RDWARD1
                  BRANCH    OVRCD,ADPV1100
                  MATCH     WADMNO,AADMNO
                  IF        !@EQUAL
                    MATCH     ZEROVISN,WADMNO
                    IF        !@EQUAL
                      GOTO      ADPV1100
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
.
              IF        MESSNUMB=19
                MATCH     "1",PTCNDBVP
                IF        @EQUAL
                  GOTO      ADPV1100
                ENDIF
              ENDIF
.
              MATCH     SP3,BEDSTRNG             * bed blank ?
              IF        !@EQUAL
                ENDSET    PV1006                 * no - load bed
                APPEND    CARET,PV1006
                APPEND    CARET,PV1006
                MOVE      BEDSTRNG,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,PV1006
                RESET     PV1006
              ENDIF
            ENDIF
.
.           After reading the previous tran record, we need to restore
.           the tran variables for the message record
.
            IF        A08XFLAG = 0
              MATCH     "HL7QUERY",PRGID
              IF        !@EQUAL
                PACK      KEY22,H7CIMESI,SP1,ONE   * restore tran variables
                CALL      RDPMQVI1
                GOTO      ADPV1100
              ENDIF
            ENDIF
            MOVE      SAVKEY30,KEY30             * A08x from A31 or HL7QUERY
            CALL      RDTRAN2
          ENDIF
.
.         Format Referring Doctor Name
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
ADPV1100  MOVE      SP60,DOCFNAME
          CLEAR     DOCFNAME
          MOVE      BLANKSTR,PV1008              * default to blank
          MATCH     SP10,PMVXRHC1                * doctor seen blank ?
          IF        !@EQUAL
            MOVE      PMVXRHC1,FIELDSTR          * no - load dr code
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PV1008
            ENDSET    PV1008
            APPEND    CARET,PV1008
.
            MOVE      PMVXRHC1,KEY10
            CALL      RDPMHCP1
            IF        OVRCD = 0
              MOVE      PMHCSNAM,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      PMHCGNAM,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      PMHCTITL,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              RESET     DOCFNAME
              APPEND    DOCFNAME,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    "webPAS",PV1008
.
              MOVE      PMVXRHC1,LINKDHCP        * hcp
              MOVE      PMVXRH1G,LINKDHCG        * practice
              CALL      LNKPR000                 * get linked provider/practice
.
            ELSE
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    "webPAS",PV1008
            ENDIF
            RESET     PV1008
          ENDIF
.
.         Format Consulting Doctor Name & Hospital Service (Specialty)
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
          MOVE      SP60,DOCFNAME
          CLEAR     DOCFNAME
          MOVE      BLANKSTR,ATTDOCTR            * default consultant to blank
          MOVE      BLANKSTR,PV1010              * default hosp service to blank
          MATCH     SP6,ADOCTA                   * attending doctor blank ?
          IF        !@EQUAL
            MOVE      ADOCTA,FIELDSTR            * no - load dr code
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,ATTDOCTR
            ENDSET    ATTDOCTR
            APPEND    CARET,ATTDOCTR
.
            MOVE      ADOCTA,KEY6
            CALL      RDDOCT1
            IF        OVRCD = 0
              MATCH     SP3,DRTYPE
              IF        !@EQUAL
                MOVE      DRTYPE,FIELDSTR             
                CALL      SPCHR000               * convert special characters
                MOVE      FIELDSTR,PV1010        * set hospital service
              ENDIF
.
              MOVE      DSNAME,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      DGNAME,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      DTITL,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              RESET     DOCFNAME
              APPEND    DOCFNAME,ATTDOCTR
              APPEND    CARET,ATTDOCTR
              APPEND    CARET,ATTDOCTR
              APPEND    "webPAS",ATTDOCTR
.
              MOVE      ZERO,FORM1               * initialise counter
              WHILE     FORM1 < 6
                APPEND    TILDA,ATTDOCTR
                ADD       ONE,FORM1              * increment counter
                LOAD      DIM10,FORM1,DPROV,PTDOPRO2,PTDOPRO3:
                                      PTDOPRO4,PTDOPRO5,PTDONHSN
                MATCH     SP10,DIM10             * provider blank ?
                IF        @EQUAL
                  APPEND    BLANKSTR,ATTDOCTR
                ELSE
                  MOVE      DIM10,FIELDSTR
                  CALL      SPCHR000             * convert special characters
                  APPEND    FIELDSTR,ATTDOCTR
                ENDIF
                APPEND    CARET,ATTDOCTR
                APPEND    DOCFNAME,ATTDOCTR
                APPEND    CARET,ATTDOCTR
                APPEND    CARET,ATTDOCTR
                IF        FORM1 = 6
                  MOVE      PRESCRIB,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,ATTDOCTR
                ELSE
                  MOVE      PROVIDER,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,ATTDOCTR
                  APPEND    FORM1,ATTDOCTR
                ENDIF
              DO
            ELSE
              APPEND    CARET,ATTDOCTR
              APPEND    CARET,ATTDOCTR
              APPEND    CARET,ATTDOCTR
              APPEND    CARET,ATTDOCTR
              APPEND    CARET,ATTDOCTR
              APPEND    CARET,ATTDOCTR
              APPEND    "webPAS",ATTDOCTR
            ENDIF
            RESET     ATTDOCTR
          ENDIF
.
.         Load Attending doctor into PV1-07 or PV1-09 depending on whether
.         the "Send attending doctor in PV1-07" parameter is set.
.
          MATCH     "1",PTCNH7AD
          IF        @EQUAL
            MOVE      ATTDOCTR,PV1007
          ELSE
            MOVE      ATTDOCTR,PV1009
          ENDIF
.
.         If the parameter is turned on for sending health specialty, then
.         add this data to PV1-10.
.
          MATCH     "1",PTCNH7HS                 * parameter on ?
          IF        @EQUAL
            ENDSET    PV1010                     * yes
            APPEND    CARET,PV1010
            MATCH     SP3,ATYPE                  * admission type blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,PV1010          * yes
              APPEND    CARET,PV1010
              APPEND    BLANKSTR,PV1010
            ELSE
              MOVE      ATYPE,FIELDSTR           * no - load admission type code
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PV1010
              APPEND    CARET,PV1010
.
              PACK      KEY5,ANSA,SP1,ATYPE
              CALL      RDCODE1
              IF        OVRCD = 0
                MOVE      TDESC,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,PV1010
              ELSE
                APPEND    BLANKSTR,PV1010
              ENDIF
            ENDIF
            RESET     PV1010
          ENDIF
.
.         Source of Referral
.
          MOVE      BLANKSTR,PV1014              * default to blank
          MATCH     SP3,ASRCE                    * admit source blank ?
          IF        !@EQUAL
            PACK      KEY5,ANSS,SP1,ASRCE
            CALL      RDCODE1
            IF        OVRCD = 0
              TYPE      TCINDC3
              IF        @EQUAL
                MOVE      TCINDC3,ANS
                REP       "03112233435363738393",ANS
                MOVE      ANS,PV1014
              ENDIF
            ENDIF
          ENDIF
.
.         Format Admitting Doctor  (Local GP for NZ only)
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
          IF        PTCNNHII = 1
            MOVE      SP60,DOCFNAME
            CLEAR     DOCFNAME
            MOVE      BLANKSTR,PV1017            * default to blank
            MATCH     SP10,PMPXRHC1              * doctor seen blank ?
            IF        !@EQUAL
              MOVE      PMPXRHC1,FIELDSTR        * no - load dr code
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1017
              ENDSET    PV1017
              APPEND    CARET,PV1017
.
              MOVE      PMPXRHC1,KEY10
              CALL      RDPMHCP1
              IF        OVRCD = 0
                MOVE      PMHCSNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCGNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCTITL,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                RESET     DOCFNAME
                APPEND    DOCFNAME,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    "webPAS",PV1017
.
                MOVE      ZERO,FORM1             * initialise counter
                WHILE     FORM1 < 6
                  APPEND    TILDA,PV1017
                  ADD       ONE,FORM1            * increment counter
                  LOAD      DIM10,FORM1,PMHCPRV1,PMHCPRV2,PMHCPRV3:
                                        PMHCPRV4,PMHCPRV5,PMHCNHSN
                  MATCH     SP10,DIM10           * provider blank ?
                  IF        @EQUAL
                    APPEND    BLANKSTR,PV1017
                  ELSE
                    MOVE      DIM10,FIELDSTR
                    CALL      SPCHR000           * convert special characters
                    APPEND    FIELDSTR,PV1017
                  ENDIF
                  APPEND    CARET,PV1017
                  APPEND    DOCFNAME,PV1017
                  APPEND    CARET,PV1017
                  APPEND    CARET,PV1017
                  IF        FORM1 = 6
                    MOVE      PRESCRIB,DOCTORID  * load dr. id type
                    STRIP     DOCTORID
                    APPEND    DOCTORID,PV1017
                  ELSE
                    MOVE      PROVIDER,DOCTORID  * load dr. id type
                    STRIP     DOCTORID
                    APPEND    DOCTORID,PV1017
                    APPEND    FORM1,PV1017
                  ENDIF
                DO
              ELSE
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    "webPAS",PV1017
              ENDIF
              RESET     PV1017
            ENDIF
          ENDIF
.
.         Patient Type
.
          MOVE      BLANKSTR,PV1018                * set default to blank
          IF        PTCNPV18 = 1
            MATCH     SP3,ACLSS                    * admission type blank ?
            IF        !@EQUAL
              PACK      KEY5,ANSP,SP1,ACLSS        * no
              CALL      RDCODE1                    * code on file ?
              IF        OVRCD = 0
                MATCH     SP1,TCINDC6              * yes - indicator 6 blank ?
                IF        !@EQUAL
                  MOVE      TCINDC6,PV1018         * no - load value
                ENDIF
              ENDIF
            ENDIF
          ELSE
            MATCH     SP3,ACARE                    * care class blank ?
            IF        !@EQUAL
              PACK      KEY5,ANSC,ANSC,ACARE
              CALL      RDCODE1
              IF        OVRCD = 0
                COMPARE   ZERO,TCFORM6
                IF        !@EQUAL
                  IF        TCFORM6 > 0 & TCFORM6 < 17
                    LOAD      PV1018,TCFORM6,CARE01P0,CARE02P1,CARE02P2:
                                             CARE02P3,CARE03P1,CARE03P2:
                                             CARE03P3,CARE04P0,CARE05P0:
                                             CARE06P0,CARE07P0,CARE08P0:
                                             CARE09P0,CARE10P0,CARE02P0:
                                             CARE03P0
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
.         Visit Number
.
          IF        MESSNUMB = 20 | MESSNUMB = 17 | (MESSNUMB = 8 & ASTAT = 1)
            GOTO      ADPV1280
          ELSE
            MOVE      AADMNO,PV1019              * set visiting number
            SQUEEZE   PV1019
          ENDIF
.
.         Check if sending claim code or indicator for financial class
.
ADPV1280  MOVE      ACLAIM,PV1CLCOD             * save for send ZEC segment
          MATCH     "1",PTCNCLCD                 * sending claim code ?
          IF        @EQUAL
            MATCH     SP3,ACLAIM                 * yes - blank financial class ?
            IF        @EQUAL
              MOVE      BLANKSTR,PV1020          * yes
            ELSE
              MOVE      ACLAIM,FIELDSTR
              CALL      SPCHR000                 * no -convert special chars
              MOVE      FIELDSTR,PV1020          * set financial class
            ENDIF
            MOVE      AADMNO,KEY8
            CALL      GTACC000                   * get ACC details if relevant
            GOTO      ADPV1300
          ENDIF
.
.         Sending indicator
.
          MATCH     SP3,ACLAIM                   * financial class blank ?
          IF        @EQUAL
            MOVE      NINE,PV1020                * not stated/not known
          ELSE
            MOVE      ZERO,COUNTER
            MOVE      TWO,PV1020                 * no-default to non-compensable
            PACK      KEY5,ANSC,ANSL,ACLAIM
            CALL      RDCODE1
            IF        OVRCD = 0
              WHILE     COUNTER < 5
                ADD      ONE,COUNTER
                LOAD     ANS,COUNTER,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
                MATCH    SP1,ANS                 * blank indicator ?
                IF       !@EQUAL
                  MATCH    ANSW,ANS              * no - worker's comp ?
                  IF       @EQUAL
                    MOVE     ONE,PV1020          * yes
                    MOVE     FIVE,COUNTER
                    MOVE     AADMNO,KEY8
                    CALL     GTACC000            * get ACC details if relevant
                  ELSE
                    MATCH    ANSM,ANS            * motor accident ?
                    IF       @EQUAL
                      MOVE     ONE,PV1020        * yes 
                      MOVE     FIVE,COUNTER
                    ELSE
                      MATCH    ANSV,ANS          * veteran's affair ?
                      IF       @EQUAL
                        MOVE     ONE,PV1020      * yes
                        MOVE     FIVE,COUNTER
                      ENDIF
                    ENDIF
                  ENDIF
                ENDIF
              DO
            ENDIF
          ENDIF
.
.         Pack up the message string with the first 20 fields which have
.         just been loaded, as from this point on, not all messages are
.         populated the same.
.
ADPV1300  PACK      SEGSTRNG,ANSP,ANSV,ONE,PIPE:
                             PV1001,PIPE,PV1002,PIPE,PV1003,PIPE,PV1004,PIPE:
                             PV1005,PIPE,PV1006,PIPE,PV1007,PIPE,PV1008,PIPE:
                             PV1009,PIPE,PV1010,PIPE,PV1011,PIPE,PV1012,PIPE:
                             PV1013,PIPE,PV1014,PIPE,PV1015,PIPE,PV1016,PIPE:
                             PV1017,PIPE,PV1018,PIPE,PV1019,PIPE,PV1020
          ENDSET    SEGSTRNG
.
.         Fields 21 through 50 don't need to be sent for A08 (update
.         Pre-admission only), A14 (Preadmit) and A27 (cancel pre-admission)
.
          IF        (MESSNUMB=8) & (ASTAT=1) | MESSNUMB=17 | MESSNUMB=20
            GOTO      ADPV1350                   * pre-admission update - finish
          ENDIF
.
.         Set discharge disposition (separation mode) if patient discharged
.         or this is a cancel discharge (A13) message.
.
          IF        MESSNUMB = 3 | ASTAT = 3 & MESSNUMB = 8 | MESSNUMB = 15
            IF        PTCNDRSM = 1 | PTCNPV36 = 1
              PACK      TCODE,ANSD,SP1           * using category D
              MOVE      DSTAT,ACODE
            ELSE
              PACK      TCODE,ANSD,ANSD          * using category DD
              MOVE      DDEST,ACODE
            ENDIF
.
.           Use Indicator 5 to set this field, unless the parameter for
.           using Cat D instead of DD is set, in which case simply send the
.           code and description
.
            MOVE      BLANKSTR,PV1036
            MATCH     SP3,ACODE                  * disch. disposition blank ?
            IF        !@EQUAL
              IF        PTCNPV36 = 1
                MOVE      ACODE,FIELDSTR
                CALL      SPCHR000               * convert special characters
                MOVE      FIELDSTR,PV1036
.
                PACK      KEY5,TCODE,ACODE
                CALL      RDCODE1
                IF        OVRCD = 0
                  ENDSET    PV1036
                  APPEND    CARET,PV1036
                  MOVE      TDESC,FIELDSTR
                  CALL      SPCHR000             * convert special characters
                  APPEND    FIELDSTR,PV1036
                  RESET     PV1036
                ENDIF
              ELSE
                PACK      KEY5,TCODE,ACODE
                CALL      RDCODE1
                IF        OVRCD = 0
                  TYPE      TCINDC5
                  IF        @EQUAL
                    MOVE      TCINDC5,PV1036
                  ENDIF
                ENDIF
              ENDIF
              MATCH     "1",PTCNUHDD             * use HDP for Cat.D/Cat.DD ?
              IF        @EQUAL
                PACK      KEY5,TCODE,ACODE
                CALL      RDCODE1
                IF        OVRCD = 0
                  MOVE      THCSCOD,PV1036
                ENDIF
              ENDIF
            ENDIF
            STRIP     PV1036
          ENDIF
.
.         For NZ sites, populate discharge destination using Cat DD.
.         Set discharge disposition (separation mode) if patient discharged
.         or this is a cancel discharge (A13) message.
.
          IF        MESSNUMB = 3 | ASTAT = 3 & MESSNUMB = 8 | MESSNUMB = 15
            IF        PTCNNHII = 1
              MOVE      BLANKSTR,PV1037          * default to blank
              MATCH     SP3,DDEST                * destination blank ?
              IF        !@EQUAL
                MOVE      DDEST,FIELDSTR         * no
                CALL      SPCHR000               * convert special characters
                MOVE      FIELDSTR,PV1037
.
                PACK      KEY5,ANSD,ANSD,DDEST
                CALL      RDCODE1                * code on file ?
                IF        OVRCD = 0
                  ENDSET    PV1037
                  APPEND    CARET,PV1037
                  MOVE      TDESC,FIELDSTR       * yes
                  CALL      SPCHR000             * convert special characters
                  APPEND    FIELDSTR,PV1037
                  RESET     PV1037
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
.         Set Diet Type
.
          MOVE      BLANKSTR,PV1038              * default to blank
          MATCH     SP3,ADIET                    * diet code blank ?
          IF        !@EQUAL
            MOVE      ADIET,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PV1038            * set diet code
            ENDSET    PV1038
            APPEND    CARET,PV1038
            PACK      KEY5,ANSD,ANSC,ADIET
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PV1038
            ENDIF
            APPEND    CARET,PV1038
            APPEND    "webPAS",PV1038
            RESET     PV1038
          ENDIF
.
.         Set Admit Date/Time
.         This will not include an update of a pre-admission (A08), a
.         pre-admission (A14), or cancel pre-admission (A27)
.
          IF        (MESSNUMB = 8 & ASTAT = 1) | MESSNUMB = 17 | MESSNUMB = 20
            GOTO      ADPV1350
          ELSE
            UNPACK    ATIME,CHOUR,ANS,CMIN,ANS,CSEC
            PACK      PV1044,ADATE,CHOUR,CMIN,CSEC
            REP       " 0",PV1044
          ENDIF
.
.         Fields 21 thru 44 only need to be populated for A01, A02, A08
.         (Update admission only), A12, A13, A21 and A22
.
ADPV1350  APPEND    PIPE,SEGSTRNG
          APPEND    PV1021,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1022,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1023,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1024,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1025,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1026,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1027,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1028,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1029,SEGSTRNG
          APPEND    PIPE,SEGSTRNG 
          APPEND    PV1030,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1031,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1032,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1033,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1034,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1035,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1036,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1037,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1038,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1039,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1040,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1041,SEGSTRNG
ADPV1400  APPEND    PIPE,SEGSTRNG
.
.         Set Pending Location (PV1042)
.         This will only be set for an update of a pre-admission (A08), a
.         pre-admission (A14), or cancel pre-admission (A27)
.
          IF        (MESSNUMB = 8 & ASTAT = 1) | MESSNUMB = 17 | MESSNUMB = 20
.
.           Get expected ward/bed.
.
            MOVE      PTMIXWRD,WRDSTRNG
            MOVE      PTMIEBED,BEDSTRNG
.
            MATCH     "1",PTCNH7WD                * using short description ?
            GOTO      ADPV1435 IF NOT EQUAL       * no
.
            PACK      KEY6,PTMIXWRD,SP6
            CALL      RDWARD1
            BRANCH    OVRCD,ADPV1435
.
            MOVE      PTWDSDES,WRDSTRNG
.
ADPV1435    MOVE      WRDSTRNG,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,PV1042
.
            MATCH     SP3,BEDSTRNG                 * bed blank ?
            GOTO      ADPV1440 IF EQUAL            * yes
.
            MATCH     "1",PTCNH7WD                 * using short description ?
            GOTO      ADPV1437 IF NOT EQUAL        * no
.
            PACK      KEY6,PTMIXWRD,PTMIEBED
            CALL      RDWARD1
            BRANCH    OVRCD,ADPV1437
.
            MOVE      PTWDSDES,BEDSTRNG
.
ADPV1437    ENDSET    PV1042                       * no - load bed
            APPEND    CARET,PV1042
            APPEND    CARET,PV1042
            MOVE      BEDSTRNG,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            APPEND    FIELDSTR,PV1042
            RESET     PV1042
.
.           Set location status (parameter based)
.
ADPV1440    MATCH     "1",PTCNH7LS
            GOTO      ADPV1450 IF NOT EQUAL
.
            MATCH     SP3,BEDSTRNG                 * bed blank ?
            IF        @EQUAL
              ENDSET    PV1042
              APPEND    CARET,PV1042
              APPEND    CARET,PV1042
            ENDIF
.
            ENDSET    PV1042
            APPEND    CARET,PV1042
            APPEND    CARET,PV1042
            APPEND    ANSN,PV1042                  * location status = N
            RESET     PV1042
          ENDIF
.
ADPV1450  APPEND    PV1042,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1043,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1044,SEGSTRNG
.
.         Set discharge date/time
.         This will only apply to a discharge (A03), and update of a discharged
.         visit (A08), and a cancel discharge (A13)
.
          IF        MESSNUMB = 3 | ASTAT = 3 & MESSNUMB = 8 | MESSNUMB = 15
            UNPACK    DTIME,CHOUR,ANS,CMIN,ANS,CSEC
            PACK      PV1045,DDATE,CHOUR,CMIN,CSEC
            REP       " 0",PV1045
          ENDIF
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1045,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1046,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1047,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1048,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1049,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          CALL      OTHVIS00                     * check for other visits
          APPEND    PV1050,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1051,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
.
.         Load Other Healthcare Provider (PV1.52)
.         (Specifically added for BHS to send Secondary Doctor - CAR 200967)
.
          MOVE      BLANKSTR,PV1052
          MATCH     SP10,PMVXEDC1                * blank secondary doctor ?
          GOTO      ADPV1890 IF EQUAL            * yes - don't send sec doctor
.
          MATCH     SP3,PMVXEDU1                 * blank secondary unit ?
          GOTO      ADPV1890 IF EQUAL            * yes - don't send sec doctor
.
.         Check that we haven't gone past the end date for the secondary
.         doctor
.
          PACK      KEY24,VISNUMBR,TILDA40
          CALL      RSPMDTC1                     * position after visit no.
ADPV1600  CALL      RPPMDTC1                     * read previous record
          BRANCH    OVRCD,ADPV1700               * eof - send sec. doctor
.
          MATCH     VISNUMBR,PMDTVISN            * same visit number still ?
          GOTO      ADPV1700 IF NOT EQUAL        * no - send sec. doctor
.
          MATCH     PMVXEDC1,PMDTDOCT            * same secondary doctor still ?
          GOTO      ADPV1600 IF NOT EQUAL        * no - get next record
.
          MATCH     PMVXEDU1,PMDTUNIT            * same secondary unit still ?
          GOTO      ADPV1600 IF NOT EQUAL        * no - get next record
.
          MATCH     SP8,PMDTEDAT                 * blank end date ?
          GOTO      ADPV1700 IF EQUAL            * yes - send sec. doctor
.
          MOVE      PMDTEDAT,KEY14               * load end date/time
          ENDSET    KEY14
          MATCH     SP8,PMDTETIM
          IF        @EQUAL
            MOVE      "00:00:00",KEY8
          ELSE
            MOVE      PMDTETIM,KEY8
          ENDIF
          REP       ": ",KEY8
          SQUEEZE   KEY8
          APPEND    KEY8,KEY14
          RESET     KEY14
.
          MATCH     DATETIME,KEY14               * end date < current date
          GOTO      ADPV1890 IF LESS             * yes - don't send sec. doctor
.
.         Format Secondary Doctor Name
.
ADPV1700  MOVE      SP60,DOCFNAME
          CLEAR     DOCFNAME
.
          MOVE      PMVXEDC1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PV1052
.
          ENDSET    PV1052
          APPEND    CARET,PV1052
.
          MOVE      PMVXEDC1,KEY10
          CALL      RDPMHCP1                     * HCP on file ?
          IF        OVRCD = 1
            APPEND    CARET,PV1052               * no
            APPEND    CARET,PV1052
            APPEND    CARET,PV1052
            APPEND    CARET,PV1052
            APPEND    CARET,PV1052
            APPEND    CARET,PV1052
            APPEND    "webPAS",PV1052
            GOTO      ADPV1800
          ENDIF
.
          MOVE      PMHCSNAM,FIELDSTR            * yes
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,DOCFNAME
          APPEND    CARET,DOCFNAME
.
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,DOCFNAME
.
          APPEND    CARET,DOCFNAME
          APPEND    CARET,DOCFNAME
          APPEND    CARET,DOCFNAME
.
          MOVE      PMHCTITL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,DOCFNAME
          RESET     DOCFNAME
          APPEND    DOCFNAME,PV1052
.
          APPEND    CARET,PV1052
          APPEND    CARET,PV1052
          APPEND    "webPAS",PV1052
.
ADPV1800  RESET     PV1052
.
ADPV1890  APPEND    PV1052,SEGSTRNG
.
ADPV1900  APPEND    CRETURN,SEGSTRNG
          RESET     SEGSTRNG
.
ADPV1999  RETURN
+
.*****************************************************************************
.*                           OPV10000           Called by: WRPV1000          *
.*      Load the PV1 fields for O/P messages according to whether this is    *
.*      O/P referral message or not.                                         *
.*****************************************************************************
.
OPV10000  BRANCH    REFLFLAG,OPV11000            * not an O/P referral message
.
.         This an O/P referral message, so see if there is a booking
.         record associated with the referral
.
          MATCH     SP6,OTRLBSIT                 * blank site code ?
          GOTO      OPV10500 IF EQUAL            * yes - no booking record
.
          MOVE      ZERO,OVRCD                   * no - get the site prefix
          TRAP      OVERCOND IF IO
          OPEN      OUTSITA1,"outsitaf"          * open site file
          TRAPCLR   IO
          BRANCH    OVRCD,OPV10500               * site file not found
.
          MOVE      OTRLBSIT,KEY6
          CALL      RDSITA1                      * site on file ?
          BRANCH    OVRCD,OPV10500               * no
.
          MOVE      ZERO,OVRCD
          PACK      CFNAME,OSTFILE,FILBOKA1
          TRAP      OVERCOND IF IO
          OPEN      OUTBOKA1,CFNAME              * open booking file
          TRAPCLR   IO
          BRANCH    OVRCD,OPV10500               * booking file not found
.
          PACK      KEY28,OTRLBSIT,OTRLBCLI,OTRLBDTE,OTRLBSTR,OTRLBSLT
          CALL      RDBOKA1                      * booking record found ?
          BRANCH    OVRCD,OPV10500               * no
.
          MOVE      ZERO,OVRCD
          PACK      CFNAME,OSTFILE,FILBB1A1
          TRAP      OVERCOND IF IO
          OPEN      OUTBB1A1,CFNAME              * open booking file
          TRAPCLR   IO
          BRANCH    OVRCD,OPV10500               * booking file not found
.
          MOVE      OTRLOUTN,KEY8
          CALL      RDBOKB1                      * booking record found ?
          BRANCH    OVRCD,OPV10500               * no
.
.         A booking related to the O/P referral was found, so
.         process as for a non O/P referral message.
.
          GOTO      OPV11000
.
.         A booking record couldn't be found for the O/P referral message, so
.         process using only the referral details.
.
OPV10500  CALL      RPV10000
          GOTO      OPV19999
.
.         Process as per a standard non O/P referral message
.
OPV11000  MOVE      ANSO,PV1002                  * O/P patient class
.
.         Set assigned location to the clinic id code.
.
          MOVE      OBACLIN,FIELDSTR             
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PV1003              * set assigned location
          ENDSET    PV1003
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
.
          MOVE      BLANKSTR,FIELDSTR          * default blank
          MOVE      OBASITE,KEY6               * get site prefix
          CALL      RDSITA1                    * site found ?
          BRANCH    OVRCD,OPV11400             * no
.
          PACK      FNAME,OSTFILE,FILMA1A1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTMA1A1,FNAME             * open O/P clinic master file
          TRAPCLR   IO
          BRANCH    OVRCD,OPV11400             * file not found
.
.         Get the day of the week for the clinic
.                            
          UNPACK    OBADATE,CCENT,CYEAR,CMON,CDAY
          CALL      DAYOFWEK
.         
          PACK      KEY18,OBASITE,OBACLIN,WEEKDAY,OBASTRT
          CALL      RDMASA1                    * clinic master record found ?
          BRANCH    OVRCD,OPV11400             * no
.
          MOVE      OTMAHOSP,FIELDSTR          * yes
          CALL      SPCHR000                   * convert special characters
.
OPV11400  APPEND    FIELDSTR,PV1003
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
.
          MOVE      "Unknown Code",FIELDSTR      * default clinic description
          MOVE      OBASITE,KEY6                 * get clinic doctor
          CALL      RDSITA1                      * site found ?
          BRANCH    OVRCD,OPV11500               * no
.
          PACK      CFNAME,OSTFILE,FILCLIA1      
          OPEN      OUTCLIA1,CFNAME
          PACK      KEY20,OBASITE,OBACLIN,OBADATE
          CALL      RDCLIA1                      * site/clinic/date rec. found?
          IF        OVRCD = 1
            CALL      RDPCLIA1                   * no - read previous record
            BRANCH    OVRCD,OPV11500             * no
.             
            MATCH     OBASITE,OCASITE            * same site still ?
            GOTO      OPV11500 IF NOT EQUAL      * no
.             
            MATCH     OBACLIN,OCACLIN            * same clinic still ?
            GOTO      OPV11500 IF NOT EQUAL      * no
          ENDIF
.
          MATCH     SP6,OCADOCT
          IF        @EQUAL
            MOVE      OCADESC,FIELDSTR           * clinic description
            CALL      SPCHR000                   * convert special characters
          ELSE
            MOVE      OCADOCT,KEY6
            CALL      RDDOCT1
            IF        OVRCD = 0
              MOVE      DTITL,PACTITLE
              MOVE      DGNAME,PACGNAME
              MOVE      DSNAME,PACSNAME
              MOVE      ONE,PACFRMT
              CALL      PACNAME
              STRIP     PACFNAME
              MOVE      PACFNAME,FIELDSTR        * doctor formatted name
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
OPV11500  APPEND    FIELDSTR,PV1003
          RESET     PV1003
.
.         Set admission type
.
          IF        PTCNPV04 <> 1
            MATCH     SP3,OBACAT                 * patient category blank ?
            IF        @EQUAL
              MOVE      BLANKSTR,PV1004          * yes
            ELSE
              MOVE      OBACAT,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1004          * set admission type
            ENDIF
          ENDIF
.
          MOVE      OBAOUTNO,PV1005              * O/P number
          SQUEEZE   PV1005
          CALL      ALVIS000                     * check for alternate visit id
.
.         Format Attending Doctor Name
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
          MOVE      SP60,DOCFNAME
          CLEAR     DOCFNAME
          MOVE      BLANKSTR,PV1007              * default to blank
          MATCH     SP10,OTBBADCS                 * doctor seen blank ?
          IF        !@EQUAL
            MOVE      OTBBADCS,FIELDSTR          * no - load dr code
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PV1007
            ENDSET    PV1007
            APPEND    CARET,PV1007
.
            MOVE      OTBBADCS,KEY10
            CALL      RDPMHCP1
            IF        OVRCD = 0
              MOVE      PMHCSNAM,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      PMHCGNAM,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      PMHCTITL,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              RESET     DOCFNAME
              APPEND    DOCFNAME,PV1007
              APPEND    CARET,PV1007
              APPEND    CARET,PV1007
              APPEND    "webPAS",PV1007
.
              MOVE      ZERO,FORM1               * initialise counter
              WHILE     FORM1 < 6
                APPEND    TILDA,PV1007
                ADD       ONE,FORM1              * increment counter
                LOAD      DIM10,FORM1,PMHCPRV1,PMHCPRV2,PMHCPRV3:
                                      PMHCPRV4,PMHCPRV5,PMHCNHSN
                MATCH     SP10,DIM10             * provider blank ?
                IF        @EQUAL
                  APPEND    BLANKSTR,PV1007
                ELSE
                  MOVE      DIM10,FIELDSTR
                  CALL      SPCHR000             * convert special characters
                  APPEND    FIELDSTR,PV1007
                ENDIF
                APPEND    CARET,PV1007
                APPEND    DOCFNAME,PV1007
                APPEND    CARET,PV1007
                APPEND    CARET,PV1007
                IF        FORM1 = 6
                  MOVE      PRESCRIB,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,PV1007
                ELSE
                  MOVE      PROVIDER,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,PV1007
                  APPEND    FORM1,PV1007
                ENDIF
              DO
            ELSE
              APPEND    CARET,PV1007
              APPEND    CARET,PV1007
              APPEND    CARET,PV1007
              APPEND    CARET,PV1007
              APPEND    CARET,PV1007
              APPEND    CARET,PV1007
              APPEND    "webPAS",PV1007
            ENDIF
            RESET     PV1007
          ENDIF
.
.         Format Referring Doctor  (NZ only)
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
          MOVE      ZERO,FORM1
          MOVE      PTCNSLPD,FORM1               * send linked practice/prov.?
          IF        (PTCNNHII = 1) | (FORM1 = 1)
            MOVE      SP60,DOCFNAME
            CLEAR     DOCFNAME
            MOVE      BLANKSTR,PV1008            * default to blank
            MATCH     SP10,OTBBRFGP              * doctor referring blank ?
            IF        !@EQUAL
              MOVE      OTBBRFGP,FIELDSTR        * no - load dr code
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1008
              ENDSET    PV1008
              APPEND    CARET,PV1008
.
              MOVE      OTBBRFGP,KEY10
              CALL      RDPMHCP1
              IF        OVRCD = 0
                MOVE      PMHCSNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCGNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCTITL,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                RESET     DOCFNAME
                APPEND    DOCFNAME,PV1008
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    "webPAS",PV1008
.
                MOVE      OTBBRFGP,LINKDHCP        * hcp
                MOVE      OTBBGPPC,LINKDHCG        * practice
                CALL      LNKPR000                 * get linked provider/prac
.
              ELSE
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    "webPAS",PV1008
              ENDIF
              RESET     PV1008
            ENDIF
          ENDIF
.
.         Format Attending Doctor Name & Hospital Service (Specialty)
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
          MOVE      SP60,DOCFNAME
          CLEAR     DOCFNAME
          MOVE      BLANKSTR,PV1009              * default consultant to blank
          MOVE      BLANKSTR,PV1010              * default hosp service to blank
          MOVE      OBASITE,KEY6                 * get clinic doctor
          CALL      RDSITA1                      * site found ?
          BRANCH    OVRCD,OPV12000               * no - ignore field
.
          PACK      CFNAME,OSTFILE,FILCLIA1
          OPEN      OUTCLIA1,CFNAME
          PACK      KEY20,OBASITE,OBACLIN,OBADATE
          CALL      RDCLIA1                      * site/clinic/date rec. found?
          IF        OVRCD = 1
            CALL      RDPCLIA1                   * no - read previous record
            BRANCH    OVRCD,OPV12000             * no - ignore field
.
            MATCH     OBASITE,OCASITE            * same site still ?
            GOTO      OPV12000 IF NOT EQUAL      * no - ignore field
.
            MATCH     OBACLIN,OCACLIN            * same clinic still ?
            GOTO      OPV12000 IF NOT EQUAL      * no - ignore field
          ENDIF
.
          MATCH     SP6,OCADOCT                  * blank doctor code ?
          GOTO      OPV12000 IF EQUAL            * yes - ignore field
.
          MATCH     SP6,OCADOCT                  * doctor seen blank ?
          IF        !@EQUAL
            MOVE      OCADOCT,FIELDSTR           * no - load dr code
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PV1009
            ENDSET    PV1009
            APPEND    CARET,PV1009
.
            MOVE      OCADOCT,KEY6
            CALL      RDDOCT1
            IF        OVRCD = 0
              MATCH     SP3,DRTYPE
              IF        !@EQUAL
                MOVE      DRTYPE,FIELDSTR             
                CALL      SPCHR000               * convert special characters
                MOVE      FIELDSTR,PV1010        * set hospital service
              ENDIF
.
              MOVE      DSNAME,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      DGNAME,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      DTITL,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              RESET     DOCFNAME
              APPEND    DOCFNAME,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    "webPAS",PV1009
.
              MOVE      ZERO,FORM1               * initialise counter
              WHILE     FORM1 < 6
                APPEND    TILDA,PV1009
                ADD       ONE,FORM1              * increment counter
                LOAD      DIM10,FORM1,DPROV,PTDOPRO2,PTDOPRO3:
                                      PTDOPRO4,PTDOPRO5,PTDONHSN
                MATCH     SP10,DIM10             * provider blank ?
                IF        @EQUAL
                  APPEND    BLANKSTR,PV1009
                ELSE
                  MOVE      DIM10,FIELDSTR
                  CALL      SPCHR000             * convert special characters
                  APPEND    FIELDSTR,PV1009
                ENDIF
                APPEND    CARET,PV1009
                APPEND    DOCFNAME,PV1009
                APPEND    CARET,PV1009
                APPEND    CARET,PV1009
                IF        FORM1 = 6
                  MOVE      PRESCRIB,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,PV1009
                ELSE
                  MOVE      PROVIDER,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,PV1009
                  APPEND    FORM1,PV1009
                ENDIF
              DO
            ELSE
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    "webPAS",PV1009
            ENDIF
            RESET     PV1009
          ENDIF
.             
.         If the parameter is turned on for sending health specialty, then
.         add this data to PV1-10.               
.               
OPV12000  MATCH     "1",PTCNH7HS                 * parameter on ?
          IF        @EQUAL
            ENDSET    PV1010                     * yes
            APPEND    CARET,PV1010
            MATCH     SP6,OBACTYP                * clinic type blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,PV1010          * yes
              APPEND    CARET,PV1010
              APPEND    BLANKSTR,PV1010
            ELSE    
              MOVE      OBACTYP,FIELDSTR         * no - load clinic type code
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PV1010
              APPEND    CARET,PV1010
.
              PACK      FNAME,OSTFILE,FILCTYA1
              MOVE      ZERO,OVRCD
              TRAP      OVERCOND IF IO
              OPEN      OUTCTYA1,FNAME
              TRAPCLR   IO
              IF        OVRCD = 1
                APPEND    BLANKSTR,PV1010
              ELSE
                PACK      KEY12,OBASITE,OBACTYP
                CALL      RDCTYA1                * location on file
                IF        OVRCD = 0
                  MOVE      OCTDESC,FIELDSTR
                  CALL      SPCHR000             * convert special characters
                  APPEND    FIELDSTR,PV1010
                ELSE
                  APPEND    BLANKSTR,PV1010
                ENDIF
              ENDIF
            ENDIF
            APPEND    CARET,PV1010
            MATCH     SP3,OBACLASS               * Patient Classification blank?
            IF        @EQUAL
              APPEND    BLANKSTR,PV1010          * yes
              APPEND    CARET,PV1010
              APPEND    BLANKSTR,PV1010
            ELSE
              MOVE      OBACLASS,FIELDSTR        * no - load pat classification
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PV1010
              APPEND    CARET,PV1010
.
              MOVE      "Unknown Code",FIELDSTR
              PACK      KEY5,ANSA,SP1,OBACLASS
              CALL      RDCODE1
              IF        OVRCD = 0
                MOVE      TDESC,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,PV1010
              ELSE
                APPEND    BLANKSTR,PV1010
              ENDIF
            ENDIF
            RESET     PV1010
          ENDIF
.
.         Source of Referral
.
          MATCH     SP3,OBASRCR                  * admit source blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,PV1014            * yes
          ELSE
            MOVE      OBASRCR,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PV1014            * set admit source
          ENDIF
.
.         Format Admitting Doctor  (Local GP for NZ only)
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
          IF        PTCNNHII = 1
            MOVE      SP60,DOCFNAME
            CLEAR     DOCFNAME
            MOVE      BLANKSTR,PV1017            * default to blank
            MATCH     SP10,PMPXRHC1              * doctor seen blank ?
            IF        !@EQUAL
              MOVE      PMPXRHC1,FIELDSTR        * no - load dr code
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1017
              ENDSET    PV1017
              APPEND    CARET,PV1017
.
              MOVE      PMPXRHC1,KEY10
              CALL      RDPMHCP1
              IF        OVRCD = 0
                MOVE      PMHCSNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCGNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCTITL,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                RESET     DOCFNAME
                APPEND    DOCFNAME,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    "webPAS",PV1017
.
                MOVE      ZERO,FORM1             * initialise counter
                WHILE     FORM1 < 6
                  APPEND    TILDA,PV1017
                  ADD       ONE,FORM1            * increment counter
                  LOAD      DIM10,FORM1,PMHCPRV1,PMHCPRV2,PMHCPRV3:
                                        PMHCPRV4,PMHCPRV5,PMHCNHSN
                  MATCH     SP10,DIM10           * provider blank ?
                  IF        @EQUAL
                    APPEND    BLANKSTR,PV1017
                  ELSE
                    MOVE      DIM10,FIELDSTR
                    CALL      SPCHR000           * convert special characters
                    APPEND    FIELDSTR,PV1017
                  ENDIF
                  APPEND    CARET,PV1017
                  APPEND    DOCFNAME,PV1017
                  APPEND    CARET,PV1017
                  APPEND    CARET,PV1017
                  IF        FORM1 = 6
                    MOVE      PRESCRIB,DOCTORID  * load dr. id type
                    STRIP     DOCTORID
                    APPEND    DOCTORID,PV1017
                  ELSE
                    MOVE      PROVIDER,DOCTORID  * load dr. id type
                    STRIP     DOCTORID
                    APPEND    DOCTORID,PV1017
                    APPEND    FORM1,PV1017
                  ENDIF
                DO
              ELSE
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    "webPAS",PV1017
              ENDIF
              RESET     PV1017
            ENDIF
          ENDIF
.
.         If the HL7 parameter is set for using Cat P instead of Cat CC, then
.         populate PV1-18 for O/P with hardcoded "O"
.
          IF        PTCNPV18 = 1
            MOVE      ANSO,PV1018
          ENDIF
.
.         Load visit number if not A05 (O/P booking), A08 (update of an O/P
.         booking), or A38 (Cancel booking)
.
OPV12500  IF        MESSNUMB = 7 | MESSNUMB = 9 & OBASTAT = 1 | MESSNUMB = 24
            GOTO      OPV13000
          ELSE
            MOVE      OBAOUTNO,PV1019            * Visit Number
            SQUEEZE   PV1019
          ENDIF
.
.         Check if sending claim code or indicator for financial class
.
OPV13000  MOVE      OBACOMP,PV1CLCOD             * save for send ZEC segment
          MATCH     "1",PTCNCLCD                 * sending claim code ?
          IF        @EQUAL
            MATCH     SP3,OBACOMP                * yes - blank financial class ?
            IF        @EQUAL
              MOVE      BLANKSTR,PV1020          * yes
            ELSE
              MOVE      OBACOMP,FIELDSTR
              CALL      SPCHR000                 * no -convert special chars
              MOVE      FIELDSTR,PV1020          * set financial class
            ENDIF
            MOVE      OBAOUTNO,KEY8
            CALL      GTACC000                   * get ACC details if relevant
            GOTO      OPV13100
          ENDIF
.
.         Sending indicator
.
          MATCH     SP3,OBACOMP                  * financial class blank ?
          IF        @EQUAL
            MOVE      NINE,PV1020                * yes - not stated/not known
          ELSE
            MOVE      ZERO,COUNTER
            MOVE      TWO,PV1020                 * no - non-compensable
            PACK      KEY5,ANSC,ANSL,OBACOMP
            CALL      RDCODE1
            IF        OVRCD = 0
              WHILE     COUNTER < 5
                ADD      ONE,COUNTER
                LOAD     ANS,COUNTER,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
                MATCH    SP1,ANS                 * blank indicator ?
                IF       !@EQUAL
                  MATCH    ANSW,ANS              * no - worker's comp ?
                  IF       @EQUAL
                    MOVE     ONE,PV1020          * yes
                    MOVE     FIVE,COUNTER
                    MOVE     OBAOUTNO,KEY8
                    CALL     GTACC000            * get ACC details if relevant
                  ELSE
                    MATCH    ANSM,ANS            * motor accident ?
                    IF       @EQUAL
                      MOVE     ONE,PV1020        * yes
                      MOVE     FIVE,COUNTER
                    ELSE
                      MATCH    ANSV,ANS          * veteran's affair ?
                      IF       @EQUAL
                        MOVE     ONE,PV1020      * yes
                        MOVE     FIVE,COUNTER
                      ENDIF
                    ENDIF
                  ENDIF
                ENDIF
              DO
            ENDIF
          ENDIF
.
.         The minimum number of fields to be sent is 20, so pack up the message
.         string with the first 20 fields which have just been loaded.
.
OPV13100  PACK      SEGSTRNG,ANSP,ANSV,ONE,PIPE:
                             PV1001,PIPE,PV1002,PIPE,PV1003,PIPE,PV1004,PIPE:
                             PV1005,PIPE,PV1006,PIPE,PV1007,PIPE,PV1008,PIPE:
                             PV1009,PIPE,PV1010,PIPE,PV1011,PIPE,PV1012,PIPE:
                             PV1013,PIPE,PV1014,PIPE,PV1015,PIPE,PV1016,PIPE:
                             PV1017,PIPE,PV1018,PIPE,PV1019,PIPE,PV1020
          ENDSET    SEGSTRNG
.
.         Load the OP location Code if the CCDHB customisation parameter
.         is turned on.  This is determined from the O/P clinic master record.
.
OPV13500  IF        PTCNOLOC = 1
            MOVE      BLANKSTR,PV1039
            MOVE      OBASITE,KEY6               * get site prefix
            CALL      RDSITA1                    * site found ?
            BRANCH    OVRCD,OPV14000             * no - ignore field
.
            PACK      FNAME,OSTFILE,FILMA1A1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      OUTMA1A1,FNAME             * open O/P clinic master file
            TRAPCLR   IO
            BRANCH    OVRCD,OPV14000             * file not found - ignore field
.
.           Get the day of the week for the clinic
.
            UNPACK    OBADATE,CCENT,CYEAR,CMON,CDAY
            CALL      DAYOFWEK
.
            PACK      KEY18,OBASITE,OBACLIN,WEEKDAY,OBASTRT
            CALL      RDMASA1                    * clinic master record found ?
            BRANCH    OVRCD,OPV14000             * no - ignore field
.
            MATCH     SP3,OTMALTYP               * blank location code ?
            IF        !@EQUAL
              MOVE      OTMALTYP,FIELDSTR        * yes
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1039
              ENDSET    PV1039
              APPEND    CARET,PV1039
.
              MOVE      "Unknown code",TDESC
              PACK      KEY5,ANSC,ANST,OTMALTYP
              CALL      RDCODE1
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PV1039
              RESET     PV1039
            ENDIF
          ENDIF
.
.         If this message was triggered by HL7REGEN, then we only need
.         to populate PV1.44 if the message is an A04
.
OPV14000  MATCH     "HL7REGEN",H7CIPGID
          GOTO      OPV14100 IF NOT EQUAL
.
          COMPARE   FIVE,MESSNUMB                * O/P attendance ?
          GOTO      OPV14200 IF EQUAL            * yes
.
          COMPARE   SEVEN,MESSNUMB               * O/P booking ?
          GOTO      OPV14300 IF EQUAL            * yes
.
OPV14100  IF        OBASTAT <> 4 & MESSNUMB <> 12
            GOTO      OPV14300
          ENDIF
.
.         The patient is attended, so load the visit date/check-in time
.
OPV14200  MOVE      OBADATE,PV1044
          MATCH     SP70,OTBBCITM
          GOTO      OPV14300 IF EQUAL
.
          ENDSET    PV1044
          UNPACK    OTBBCITM,CHOUR,ANS,CMIN                * CAR 309375
          APPEND    CHOUR,PV1044
          APPEND    CMIN,PV1044
          APPEND    ZERO,PV1044
          APPEND    ZERO,PV1044
          RESET     PV1044
          SQUEEZE   PV1044
.
OPV14300  APPEND    PIPE,SEGSTRNG
          APPEND    PV1021,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1022,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1023,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1024,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1025,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1026,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1027,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1028,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1029,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1030,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1031,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1032,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1033,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1034,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1035,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
.
          MATCH     "HL7REGEN",H7CIPGID
          GOTO      OPV14400 IF NOT EQUAL
.
          COMPARE   FIVE,MESSNUMB                * O/P attendance ?
          GOTO      OPV14500 IF EQUAL            * yes
.
          COMPARE   SEVEN,MESSNUMB               * O/P booking ?
          GOTO      OPV14600 IF EQUAL            * yes
.
.         For attended patient's, send the outcome
.
OPV14400  COMPARE   FOUR,OBASTAT
          GOTO      OPV14600 IF NOT EQUAL
.
OPV14500  MATCH     SP3,OTBBOUTC
          IF        @EQUAL
            MOVE      BLANKSTR,PV1036
          ELSE
            MOVE      OTBBOUTC,FIELDSTR
            CALL      SPCHR000                 * convert special characters
            MOVE      FIELDSTR,PV1036
          ENDIF
.
OPV14600  APPEND    PV1036,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1037,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1038,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1039,SEGSTRNG
.
.         Only 44 PV1 fields need to be sent for A04 and A08 (Visit Update
.         only where patient has attended)
.
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1040,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1041,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1042,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1043,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1044,SEGSTRNG
.
.         For attended patient's, send the discharge date/time
.
          MATCH     "HL7REGEN",H7CIPGID
          GOTO      OPV14700 IF NOT EQUAL
.
          COMPARE   FIVE,MESSNUMB                * O/P attendance ?
          GOTO      OPV14800 IF EQUAL            * yes
.
          COMPARE   SEVEN,MESSNUMB               * O/P booking ?
          GOTO      OPV14900 IF EQUAL            * yes
.
.         For attended patient's, send the outcome
.
OPV14700  COMPARE   FOUR,OBASTAT
          GOTO      OPV14900 IF NOT EQUAL
.
OPV14800  MOVE      OBADATE,PV1045
          MATCH     SP5,OTBBDPTM
          IF        !@EQUAL
            ENDSET    PV1045
            UNPACK    OTBBDPTM,CHOUR,ANS,CMIN
            APPEND    CHOUR,PV1045
            APPEND    CMIN,PV1045
            APPEND    ZERO,PV1045
            APPEND    ZERO,PV1045
            RESET     PV1045
          ENDIF
          REP       " 0",PV1045
.
OPV14900  APPEND    PIPE,SEGSTRNG
          APPEND    PV1045,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1046,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1047,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1048,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1049,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          CALL      OUTVIS00                     * check for other visits
          APPEND    PV1050,SEGSTRNG
.
OPV19000  APPEND    CRETURN,SEGSTRNG
          RESET     SEGSTRNG
.
OPV19999  RETURN
+
.*****************************************************************************
.*                           RPV10000           Called by: OPV10000          *
.*              Load the PV1 fields for O/P Referral messages                *
.*              where there is no booking record.                            *
.*****************************************************************************
.
RPV10000  MOVE      ANSO,PV1002                  * O/P patient class
.
          MOVE      OTRLOUTN,PV1005              * O/P number
          SQUEEZE   PV1005
          CALL      ALVIS000                     * check for alternate visit id
.
.         Format Referring Doctor  (NZ only)
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
          IF        PTCNNHII = 1
            MOVE      SP60,DOCFNAME
            CLEAR     DOCFNAME
            MOVE      BLANKSTR,PV1008            * default to blank
            MATCH     SP10,OTRLRFGP              * doctor referring blank ?
            IF        !@EQUAL
              MOVE      OTRLRFGP,FIELDSTR        * no - load dr code
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1008
              ENDSET    PV1008
              APPEND    CARET,PV1008
.
              MOVE      OTRLRFGP,KEY10
              CALL      RDPMHCP1
              IF        OVRCD = 0
                MOVE      PMHCSNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCGNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCTITL,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                RESET     DOCFNAME
                APPEND    DOCFNAME,PV1008
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    "webPAS",PV1008
.
                MOVE      ZERO,FORM1             * initialise counter
                WHILE     FORM1 < 6
                  APPEND    TILDA,PV1008
                  ADD       ONE,FORM1            * increment counter
                  LOAD      DIM10,FORM1,PMHCPRV1,PMHCPRV2,PMHCPRV3:
                                        PMHCPRV4,PMHCPRV5,PMHCNHSN
                  MATCH     SP10,DIM10           * provider blank ?
                  IF        @EQUAL
                    APPEND    BLANKSTR,PV1008
                  ELSE
                    MOVE      DIM10,FIELDSTR
                    CALL      SPCHR000           * convert special characters
                    APPEND    FIELDSTR,PV1008
                  ENDIF
                  APPEND    CARET,PV1008
                  APPEND    DOCFNAME,PV1008
                  APPEND    CARET,PV1008
                  APPEND    CARET,PV1008
                  IF        FORM1 = 6
                    MOVE      PRESCRIB,DOCTORID  * load dr. id type
                    STRIP     DOCTORID
                    APPEND    DOCTORID,PV1008
                  ELSE
                    MOVE      PROVIDER,DOCTORID  * load dr. id type
                    STRIP     DOCTORID
                    APPEND    DOCTORID,PV1008
                    APPEND    FORM1,PV1008
                  ENDIF
                DO
              ELSE
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                APPEND    "webPAS",PV1008
              ENDIF
              RESET     PV1008
            ENDIF
          ENDIF
.
.         Hospital Service
.
          MOVE      BLANKSTR,PV1010              * default hosp service to blank
.
          MATCH     SP6,OTRLCONS                 * consultant blank ?
          IF        !@EQUAL
            MOVE      OTRLCONS,KEY6              * no
            CALL      RDDOCT1                    * doctor on file ?
            IF        OVRCD = 0
              MATCH     SP3,DRTYPE               * yes - doc. type blank ?
              IF        !@EQUAL
                MOVE      DRTYPE,FIELDSTR        * no
                CALL      SPCHR000               * convert special characters
                MOVE      FIELDSTR,PV1010        * set hospital service
              ENDIF
            ENDIF
          ENDIF
.
.         If the parameter is turned on for sending health specialty, then
.         add this data to PV1-10.
.
          MATCH     "1",PTCNH7HS                 * parameter on ?
          IF        @EQUAL
            ENDSET    PV1010                     * yes
            APPEND    CARET,PV1010
            MATCH     SP6,OTRLCTYP               * clinic type blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,PV1010          * yes
              APPEND    CARET,PV1010
              APPEND    BLANKSTR,PV1010
            ELSE
              MOVE      OTRLCTYP,FIELDSTR        * no - load clinic type code
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PV1010
              APPEND    CARET,PV1010
.
              MOVE      OTRLSITE,KEY6
              CALL      RDSITA1                  * site found ?
              IF        OVRCD = 0
                PACK      FNAME,OSTFILE,FILCTYA1
                MOVE      ZERO,OVRCD
                TRAP      OVERCOND IF IO
                OPEN      OUTCTYA1,FNAME
                TRAPCLR   IO
                IF        OVRCD = 1
                  APPEND    BLANKSTR,PV1010
                ELSE
                  PACK      KEY12,OTRLSITE,OTRLCTYP
                  CALL      RDCTYA1              * location on file
                  IF        OVRCD = 0
                    MOVE      OCTDESC,FIELDSTR
                    CALL      SPCHR000           * convert special characters
                    APPEND    FIELDSTR,PV1010
                  ELSE
                    APPEND    BLANKSTR,PV1010
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
            RESET     PV1010
          ENDIF
.
.         Source of Referral
.
          MATCH     SP3,OTRLSRCE                 * referral source blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,PV1014            * yes
          ELSE
            MOVE      OTRLSRCE,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PV1014            * set admit source
          ENDIF
.
.         Format Admitting Doctor  (Local GP for NZ only)
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
          IF        PTCNNHII = 1
            MOVE      SP60,DOCFNAME
            CLEAR     DOCFNAME
            MOVE      BLANKSTR,PV1017            * default to blank
            MATCH     SP10,PMPXRHC1              * doctor seen blank ?
            IF        !@EQUAL
              MOVE      PMPXRHC1,FIELDSTR        * no - load dr code
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1017
              ENDSET    PV1017
              APPEND    CARET,PV1017
.
              MOVE      PMPXRHC1,KEY10
              CALL      RDPMHCP1
              IF        OVRCD = 0
                MOVE      PMHCSNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCGNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCTITL,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                RESET     DOCFNAME
                APPEND    DOCFNAME,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    "webPAS",PV1017
.
                MOVE      ZERO,FORM1             * initialise counter
                WHILE     FORM1 < 6
                  APPEND    TILDA,PV1017
                  ADD       ONE,FORM1            * increment counter
                  LOAD      DIM10,FORM1,PMHCPRV1,PMHCPRV2,PMHCPRV3:
                                        PMHCPRV4,PMHCPRV5,PMHCNHSN
                  MATCH     SP10,DIM10           * provider blank ?
                  IF        @EQUAL
                    APPEND    BLANKSTR,PV1017
                  ELSE
                    MOVE      DIM10,FIELDSTR
                    CALL      SPCHR000           * convert special characters
                    APPEND    FIELDSTR,PV1017
                  ENDIF
                  APPEND    CARET,PV1017
                  APPEND    DOCFNAME,PV1017
                  APPEND    CARET,PV1017
                  APPEND    CARET,PV1017
                  IF        FORM1 = 6
                    MOVE      PRESCRIB,DOCTORID  * load dr. id type
                    STRIP     DOCTORID
                    APPEND    DOCTORID,PV1017
                  ELSE
                    MOVE      PROVIDER,DOCTORID  * load dr. id type
                    STRIP     DOCTORID
                    APPEND    DOCTORID,PV1017
                    APPEND    FORM1,PV1017
                  ENDIF
                DO
              ELSE
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    "webPAS",PV1017
              ENDIF
              RESET     PV1017
            ENDIF
          ENDIF
.
.         If the HL7 parameter is set for using Cat P instead of Cat CC, then
.         populate PV1-18 for O/P with hardcoded "O"
.
          IF        PTCNPV18 = 1
            MOVE      ANSO,PV1018
          ENDIF
.
          MOVE      VISNUMBR,PV1019
          SQUEEZE   PV1019
.
.         Check if sending claim code or indicator for financial class
.
          MOVE      OTRLCLAM,PV1CLCOD            * save for send ZEC segment
          MATCH     "1",PTCNCLCD                 * sending claim code ?
          IF        @EQUAL
            MATCH     SP3,OTRLCLAM               * yes - blank financial class ?
            IF        @EQUAL
              MOVE      BLANKSTR,PV1020          * yes
            ELSE
              MOVE      OTRLCLAM,FIELDSTR
              CALL      SPCHR000                 * no -convert special chars
              MOVE      FIELDSTR,PV1020          * set financial class
            ENDIF
            MOVE      OTRLOUTN,KEY8
            CALL      GTACC000                   * get ACC details if relevant
            GOTO      RPV13100
          ENDIF
.
.         Sending indicator
.
          MATCH     SP3,OTRLCLAM                 * financial class blank ?
          IF        @EQUAL
            MOVE      NINE,PV1020                * yes - not stated/not known
          ELSE
            MOVE      ZERO,COUNTER
            MOVE      TWO,PV1020                 * no - non-compensable
            PACK      KEY5,ANSC,ANSL,OTRLCLAM
            CALL      RDCODE1
            IF        OVRCD = 0
              WHILE     COUNTER < 5
                ADD      ONE,COUNTER
                LOAD     ANS,COUNTER,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
                MATCH    SP1,ANS                 * blank indicator ?
                IF       !@EQUAL
                  MATCH    ANSW,ANS              * no - worker's comp ?
                  IF       @EQUAL
                    MOVE     ONE,PV1020          * yes
                    MOVE     FIVE,COUNTER
                    MOVE     OTRLOUTN,KEY8
                    CALL     GTACC000            * get ACC details if relevant
                  ELSE
                    MATCH    ANSM,ANS            * motor accident ?
                    IF       @EQUAL
                      MOVE     ONE,PV1020        * yes
                      MOVE     FIVE,COUNTER
                    ELSE
                      MATCH    ANSV,ANS          * veteran's affair ?
                      IF       @EQUAL
                        MOVE     ONE,PV1020      * yes
                        MOVE     FIVE,COUNTER
                      ENDIF
                    ENDIF
                  ENDIF
                ENDIF
              DO
            ENDIF
          ENDIF
.
.         Pack up the message string with the fields which have just been loaded
.
RPV13100  PACK      SEGSTRNG,ANSP,ANSV,ONE,PIPE:
                             PV1001,PIPE,PV1002,PIPE,PV1003,PIPE,PV1004,PIPE:
                             PV1005,PIPE,PV1006,PIPE,PV1007,PIPE,PV1008,PIPE:
                             PV1009,PIPE,PV1010,PIPE,PV1011,PIPE,PV1012,PIPE:
                             PV1013,PIPE,PV1014,PIPE,PV1015,PIPE,PV1016,PIPE:
                             PV1017,PIPE,PV1018,PIPE,PV1019,PIPE,PV1020,CRETURN
.
RPV19999  RETURN
+
.*****************************************************************************
.*                            OUTVIS00             Called by: OPV10000       *
.*         Check if this patient has other visit numbers:                    *
.* Requires: VISNUMBR - O/P visit number                                     *
.*           PV1050 - alternate visit number (which may or may not already   *
.*                    be populated).                                         *
.* Returns:  PV1050 - alternate visit number populated with WL booking no.   *
.*****************************************************************************
.
.         check for an ANAE Appt
.
OUTVIS00  MOVE      BLANKSTR,DIM8                * set default
.
          PACK      KEY8,VISNUMBR
          CALL      RDWTOPS2
          BRANCH    OVRCD,OUTVIS30
.
          PACK      KEY19,WTOSURNO,WTOSCODE,WTOSCOUN
          CALL      RDTREA1
          BRANCH    OVRCD,OUTVIS30
.
          MOVE      WMBOOK,DIM8
          SQUEEZE   DIM8
.
OUTVIS30  IF        PV150CNT = 0
            MOVE      DIM8,PV1050                * load WL booking number
            ENDSET    PV1050
          ELSE
            ENDSET    PV1050
            APPEND    TILDA,PV1050
            APPEND    DIM8,PV1050
          ENDIF
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    "webPAS-ANAE",PV1050
          APPEND    CARET,PV1050
          APPEND    ANSV,PV1050
          APPEND    ANSN,PV1050
          RESET     PV1050
.
          ADD       ONE,PV150CNT                 * increment repeat count
.
.         check for PAC Appt
.
          MOVE      BLANKSTR,DIM8                * set default
.
          PACK      KEY8,VISNUMBR
          CALL      RDWTOPA2
          BRANCH    OVRCD,OUTVIS40
.
          PACK      KEY19,WTOPURNO,WTOPCODE,WTOPCOUN
          CALL      RDTREA1
          BRANCH    OVRCD,OUTVIS40
.
          MOVE      WMBOOK,DIM8
          SQUEEZE   DIM8
.
OUTVIS40  IF        PV150CNT = 0
            MOVE      DIM8,PV1050                * load WL booking number
            ENDSET    PV1050
          ELSE
            ENDSET    PV1050
            APPEND    TILDA,PV1050
            APPEND    DIM8,PV1050
          ENDIF
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    "webPAS-PAC",PV1050
          APPEND    CARET,PV1050
          APPEND    ANSV,PV1050
          APPEND    ANSN,PV1050
          RESET     PV1050
.
          ADD       ONE,PV150CNT                 * increment repeat count
.
OUTVIS99  RETURN
+
.*****************************************************************************
.*                           ODG10000              Called by: WRDG1000       *
.*      Load the DG1 fields for an O/P message (free format diagnosis only)  *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
.         Check if we are sending the free text admitting/presenting diagnoses
.           
ODG10000  MOVE      ZERO,F1
          MOVE      PTCNADIG,F1
          IF        F1 < 1 | F1 > 5
            GOTO      ODG19000                   * no - finished
          ENDIF
.
          MOVE      VISNUMBR,KEY8
          CALL      RDPMVX11                     * get visit ext. record
          BRANCH    OVRCD,ODG15000               * not found  - ignore
.
          MATCH     SP50,PMVXUDF1                * admitting diagnosis blank ?
          GOTO      ODG15000 IF EQUAL            * yes
.
          CALL      CLDG1000                     * yes - clear DG1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,DG1001               * set id
          SQUEEZE   DG1001
.
          MOVE      PMVXUDF1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1004              * load admitting diagnosis 1
.
          MOVE      ANSA,DG1006                  * set type to "Admitting"
.
          PACK      SEGSTRNG,ANSD,ANSG,ONE,PIPE:
                         DG1001,PIPE,DG1002,PIPE,DG1003,PIPE,DG1004,PIPE:
                         DG1005,PIPE,DG1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,ODG19100:               * connection lost
                         ODG19200                * timeout
.
.         Now check if there are diagnoses on outdiagf
.
ODG15000  MATCH     SP6,OBASITE                  * blank site code ?
          GOTO      ODG19000 IF EQUAL            * yes - no booking record
.
          MOVE      ZERO,OVRCD                   * no - get the site prefix
          TRAP      OVERCOND IF IO
          OPEN      OUTSITA1,"outsitaf"          * open site file
          TRAPCLR   IO
          BRANCH    OVRCD,ODG19000               * site file not found
.             
          MOVE      OBASITE,KEY6
          CALL      RDSITA1                      * site on file ?
          BRANCH    OVRCD,ODG19000               * no
.               
          MOVE      ZERO,OVRCD
          PACK      CFNAME,OSTFILE,FILDIAG1
          TRAP      OVERCOND IF IO
          OPEN      OUTDIAG1,CFNAME              * open diagnosis file
          TRAPCLR   IO
          BRANCH    OVRCD,ODG19000               * diagnosis file not found
.
          MOVE      VISNUMBR,KEY8
          CALL      RDDIAG1                      * diagnosis record on file ?
          BRANCH    OVRCD,ODG19000               * no - finished
.
.         A diagnosis record has been found, so check the 5 diagnosis
.         descriptions and load if populated.
. 
          MOVE      ZERO,FORM1                   * initialise counter
.
ODG16000  ADD       ONE,FORM1                    * increment counter
          COMPARE   FORM1,FIVE                   * all five checked ?
          GOTO      ODG19000 IF LESS             * yes - finished
.
          LOAD      DIM9,FORM1,OPDICODE,OPDICOD2,OPDICOD3,OPDICOD4,OPDICOD5
          LOAD      DIM50,FORM1,OPDIDESC,OPDIDES2,OPDIDES3,OPDIDES4,OPDIDES5
.
          MATCH     SP9,DIM9                     * diagnosis code blank ?
          GOTO      ODG17000 IF NOT EQUAL        * no
.
          MATCH     SP50,DIM50                   * diagnosis description blank ?
          GOTO      ODG16000 IF EQUAL            * yes
.
.         The diagnosis code and/or description field is populated,
.         so load the data
.
ODG17000  CALL      CLDG1000                     * clear DG1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,DG1001               * set id
          SQUEEZE   DG1001
.
          MATCH     SP9,DIM9
          GOTO      ODG18000 IF EQUAL
.
          MOVE      DIM9,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1003              * set diagnosis code
.
          MOVE      OBADATE,CODINGDT
          CALL      GTICD000                     * get ICD description/version
.
ODG18000  MATCH     SP50,DIM50
          GOTO      ODG18500 IF EQUAL
.
          MOVE      DIM50,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1004              * load diagnosis description
.
ODG18500  MOVE      ANSA,DG1006                  * set type to "Admitting"
.
          PACK      SEGSTRNG,ANSD,ANSG,ONE,PIPE:
                         DG1001,PIPE,DG1002,PIPE,DG1003,PIPE,DG1004,PIPE:
                         DG1005,PIPE,DG1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,ODG19100:               * connection lost
                         ODG19200                * timeout
.
          GOTO      ODG16000                     * get next diagnosis
.
ODG19000  MOVE      ZERO,EXIT
          GOTO      ODG19999
.
ODG19100  MOVE      ONE,EXIT
          GOTO      ODG19999
.
ODG19200  MOVE      TWO,EXIT
.
ODG19999  RETURN
+
.*****************************************************************************
.*                             LVIN0000         Called by: WRZXV000          *
.*    Load ZXV.32 with visit-based interpreter required    WLZXV000          *
.* Requires: PMVXINTR - visit based interpreter required.                    *
.* Returns:  ZXV032.                                                         *
.*****************************************************************************
.
LVIN0000  MOVE      ANSN,ZXV032
          MATCH     "1",PMVXINTR
          IF        @EQUAL
            MOVE      ANSY,ZXV032
          ENDIF
.
LVIN9999  RETURN
+
.*****************************************************************************
.*                           SAPCM000                                        *
.*              Send Additional PV1.3 location components for Emergency      *
.*****************************************************************************
SAPCM000  MATCH     "1",PTCNSAPC
          GOTO      SAPCM999 IF NOT EQUAL
.
          MOVE      "ED",D2                      * room (PV1.3.2)
.
          MOVE      BLANKSTR,D3
          MATCH     SP3,EMVILOCN
          IF        !@EQUAL
            MOVE      EMVILOCN,D3                * bed (PV1.3.3)
          ENDIF
.
          COMPARE   ONE,HEROTABL
          IF        @EQUAL
            MOVE      SP70,DIM20                 * Don't populate PV1.3.6 if
            GOTO      SAPCM999                   * not using HERO Location table
          ENDIF
.
          MOVE      BLANKSTR,DIM20
          PACK      KEY7,TWO,EMVILOCN,EMVISITE,SP70
          CALL      RDPMUHL1
          IF        OVRCD=1
            UNPACK    SP70,PMULTYPE,PMULWDCD,PMULBDCD,PMULUHID
          ELSE
            MOVE      PMULUHID,DIM20            * person location type (PV1.3.6)
          ENDIF
.
SAPCM999  RETURN
+
.*****************************************************************************
.*                           EPV10000           Called by: WRPV1000          *
.*              Load the PV1 fields for Emergency messages                   *
.*****************************************************************************
.
.         Patient Class
.
EPV10000  MOVE      ANSE,PV1002                  * Emergency patient class
.
.         Load Emergency Site Details
.
          MATCH     SP3,EMVISITE
          IF        @EQUAL
            MOVE      BLANKSTR,PV1003
            GOTO      EPV10500                   * blank site so finish
          ENDIF
.
          MOVE      EMVISITE,PV1003              * emr site exists (PV1.3.1)
          STRIP     PV1003
          ENDSET    PV1003
          APPEND    CARET,PV1003
.
          MOVE      SP2,D2
          MOVE      SP3,D3
          MOVE      SP20,DIM20
          CALL      SAPCM000                     * additional PV1.3 components?
.
          STRIP     D2
          APPEND    D2,PV1003                    * room (PV1.3.2)
          APPEND    CARET,PV1003
.
          STRIP     D3
          APPEND    D3,PV1003                    * bed (PV1.3.3)
          APPEND    CARET,PV1003
.
EPV10200  MOVE      BLANKSTR,DIM3
          MOVE      BLANKSTR,DIM25
          MOVE      EMVISITE,KEY3
          CALL      RDEMSIT1                     * emr site on file ?
          BRANCH    OVRCD,EPV10300
.
          MATCH     SP3,EMSTHSNO
          IF        !@EQUAL
            MOVE      EMSTHSNO,DIM3              * hospital (PV1.3.4)
          ENDIF
.
          MATCH     SP25,EMSTDESC
          IF        !@EQUAL
            MOVE      EMSTDESC,DIM25             * site description (PV1.3.9)
          ENDIF
.
EPV10300  STRIP     DIM3
          STRIP     DIM25
          APPEND    DIM3,PV1003                  * hospital (PV1.3.4)
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
          STRIP     DIM20
          APPEND    DIM20,PV1003                 * person location type(PV1.3.6)
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
          APPEND    DIM25,PV1003                 * site description (PV1.3.9)
          RESET     PV1003
.
.         Format Referring Doctor Name
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
EPV10500  MATCH     "1",PTCNSLPD                 * send linked practice/prov.?
          IF        @EQUAL
            MOVE      PMPXRHC1,EMVIREFD          * use pmi hcp
            MOVE      PMPXRH1G,LINKDHCG          * use pmi hcp practice
          ELSE
            MOVE      SP70,LINKDHCG              * practice
          ENDIF
.
          MOVE      SP60,DOCFNAME
          CLEAR     DOCFNAME
          MOVE      BLANKSTR,PV1008              * default to blank
          MATCH     SP10,EMVIREFD                * doctor seen blank ?
          IF        !@EQUAL
            MOVE      EMVIREFD,FIELDSTR          * no - load dr code
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PV1008
            ENDSET    PV1008
            APPEND    CARET,PV1008
.
            MOVE      EMVIREFD,KEY10
            CALL      RDPMHCP1
            IF        OVRCD = 0
              MOVE      PMHCSNAM,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      PMHCGNAM,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      PMHCTITL,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              RESET     DOCFNAME
              APPEND    DOCFNAME,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    "webPAS",PV1008
.
              MOVE      EMVIREFD,LINKDHCP        * hcp
              CALL      LNKPR000                 * get linked provider/practice
.
            ELSE
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    "webPAS",PV1008
            ENDIF
            RESET     PV1008
          ENDIF
.
.         Format Attending Doctor Name & Hospital Service (Specialty)
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
EPV11000  MATCH     "1",PTCNEDDD
          IF        @EQUAL
            MOVE      EMVIUR02,EMRVDOCT          * using ED Discharge Doctor
          ELSE
            MOVE      EMVIDOCT,EMRVDOCT          * using Attending Doctor
          ENDIF
          MOVE      SP60,DOCFNAME
          CLEAR     DOCFNAME
          MOVE      BLANKSTR,PV1009              * default consultant to blank
          MOVE      BLANKSTR,PV1010              * default hosp service to blank
          MATCH     SP10,EMRVDOCT                * doctor seen blank ?
          IF        !@EQUAL
            MOVE      EMRVDOCT,FIELDSTR          * no - load dr code
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PV1009
            ENDSET    PV1009
            APPEND    CARET,PV1009
.
            MOVE      EMRVDOCT,KEY6
            CALL      RDDOCT1
            IF        OVRCD = 0
              MATCH     SP3,DRTYPE
              IF        !@EQUAL
                MOVE      DRTYPE,FIELDSTR             
                CALL      SPCHR000               * convert special characters
                MOVE      FIELDSTR,PV1010        * set hospital service
              ENDIF
.
              MOVE      DSNAME,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      DGNAME,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      DTITL,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              RESET     DOCFNAME
              APPEND    DOCFNAME,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    "webPAS",PV1009
.
              MOVE      ZERO,FORM1               * initialise counter
              WHILE     FORM1 < 6
                APPEND    TILDA,PV1009
                ADD       ONE,FORM1              * increment counter
                LOAD      DIM10,FORM1,DPROV,PTDOPRO2,PTDOPRO3:
                                      PTDOPRO4,PTDOPRO5,PTDONHSN
                MATCH     SP10,DIM10             * provider blank ?
                IF        @EQUAL
                  APPEND    BLANKSTR,PV1009
                ELSE
                  MOVE      DIM10,FIELDSTR
                  CALL      SPCHR000             * convert special characters
                  APPEND    FIELDSTR,PV1009
                ENDIF
                APPEND    CARET,PV1009
                APPEND    DOCFNAME,PV1009
                APPEND    CARET,PV1009
                APPEND    CARET,PV1009
                IF        FORM1 = 6
                  MOVE      PRESCRIB,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,PV1009
                ELSE
                  MOVE      PROVIDER,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,PV1009
                  APPEND    FORM1,PV1009
                ENDIF
              DO
            ELSE
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    "webPAS",PV1009
            ENDIF
            RESET     PV1009
          ENDIF
.             
.         If the parameter is turned on for sending health specialty, then
.         add this data to PV1-10.               
.               
          MATCH     "1",PTCNH7HS                 * parameter on ?
          IF        @EQUAL
            ENDSET    PV1010                     * yes
            APPEND    CARET,PV1010
            MATCH     SP3,EMVILOCN               * location blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,PV1010          * yes
              APPEND    CARET,PV1010
              APPEND    BLANKSTR,PV1010
            ELSE    
              MOVE      EMVILOCN,FIELDSTR        * no - load location code
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PV1010
              APPEND    CARET,PV1010
.
              MOVE      EMVILOCN,KEY3
              CALL      RDEMLOC1                 * location on file
              IF        OVRCD = 0
                MOVE      EMLODESC,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,PV1010
              ELSE
                APPEND    BLANKSTR,PV1010
              ENDIF
            ENDIF
            APPEND    CARET,PV1010
            MATCH     SP3,EMVICLAS               * Patient Classification blank?
            IF        @EQUAL
              APPEND    BLANKSTR,PV1010          * yes
              APPEND    CARET,PV1010
              APPEND    BLANKSTR,PV1010
            ELSE
              MOVE      EMVICLAS,FIELDSTR        * no - load pat classification
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PV1010
              APPEND    CARET,PV1010
.
              MOVE      "Unknown Code",FIELDSTR
              PACK      KEY5,ANSA,SP1,EMVICLAS
              CALL      RDCODE1
              IF        OVRCD = 0
                MOVE      TDESC,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,PV1010
              ELSE
                APPEND    BLANKSTR,PV1010
              ENDIF
            ENDIF
            RESET     PV1010
          ENDIF
.
.         Source of Referral
.
          MATCH     SP3,EMVISRCE                 * admit source blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,PV1014            * yes
          ELSE
            MOVE      EMVISRCE,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PV1014            * set hospital service
          ENDIF
.
.         Format Admitting Doctor  (Local GP for NZ only)
.         Send repeating fields which contain, Doctor code, Provider 1,
.         Provider 2, Provider 3, Provider 4, Provider 5, Prescriber
.
          IF        PTCNNHII = 1
            MOVE      SP60,DOCFNAME
            CLEAR     DOCFNAME
            MOVE      BLANKSTR,PV1017            * default to blank
            MATCH     SP10,PMPXRHC1              * doctor seen blank ?
            IF        !@EQUAL
              MOVE      PMPXRHC1,FIELDSTR        * no - load dr code
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1017
              ENDSET    PV1017
              APPEND    CARET,PV1017
.
              MOVE      PMPXRHC1,KEY10
              CALL      RDPMHCP1
              IF        OVRCD = 0
                MOVE      PMHCSNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCGNAM,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                APPEND    CARET,DOCFNAME
                MOVE      PMHCTITL,FIELDSTR
                CALL      SPCHR000               * convert special characters
                APPEND    FIELDSTR,DOCFNAME
                RESET     DOCFNAME
                APPEND    DOCFNAME,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    "webPAS",PV1017
.
                MOVE      ZERO,FORM1             * initialise counter
                WHILE     FORM1 < 6
                  APPEND    TILDA,PV1017
                  ADD       ONE,FORM1            * increment counter
                  LOAD      DIM10,FORM1,PMHCPRV1,PMHCPRV2,PMHCPRV3:
                                        PMHCPRV4,PMHCPRV5,PMHCNHSN
                  MATCH     SP10,DIM10           * provider blank ?
                  IF        @EQUAL
                    APPEND    BLANKSTR,PV1017
                  ELSE
                    MOVE      DIM10,FIELDSTR
                    CALL      SPCHR000           * convert special characters
                    APPEND    FIELDSTR,PV1017
                  ENDIF
                  APPEND    CARET,PV1017
                  APPEND    DOCFNAME,PV1017
                  APPEND    CARET,PV1017
                  APPEND    CARET,PV1017
                  IF        FORM1 = 6
                    MOVE      PRESCRIB,DOCTORID  * load dr. id type
                    STRIP     DOCTORID
                    APPEND    DOCTORID,PV1017
                  ELSE
                    MOVE      PROVIDER,DOCTORID  * load dr. id type
                    STRIP     DOCTORID
                    APPEND    DOCTORID,PV1017
                    APPEND    FORM1,PV1017
                  ENDIF
                DO
              ELSE
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    CARET,PV1017
                APPEND    "webPAS",PV1017
              ENDIF
              RESET     PV1017
            ENDIF
          ENDIF
.
.         If the parameter is set for using Cat P instead of Cat CC, then
.         this field is hard-coded to be "E" for emergency
.
          IF        PTCNPV18 = 1
            MOVE      ANSE,PV1018
          ENDIF
.
.         Visit Number
.
EPV12500  MOVE      EMVIADMN,PV1019              * set visiting number
          SQUEEZE   PV1019
          CALL      ALVIS000                     * check for alternate visit id
.
.         Check if sending claim code or indicator for financial class
.
          MOVE      EMVICOMP,PV1CLCOD            * save for send ZEC segment
          MATCH     "1",PTCNCLCD                 * sending claim code ?
          IF        @EQUAL
            MATCH     SP3,EMVICOMP               * yes - blank financial class ?
            IF        @EQUAL
              MOVE      BLANKSTR,PV1020          * yes
            ELSE
              MOVE      EMVICOMP,FIELDSTR
              CALL      SPCHR000                 * no -convert special chars
              MOVE      FIELDSTR,PV1020          * set financial class
            ENDIF
            MOVE      EMVIADMN,KEY8
            CALL      GTACC000                   * get ACC details if relevant
            GOTO      EPV13000
          ENDIF
.
.         Sending indicator
.
          MATCH     SP3,EMVICOMP                 * financial class blank ?
          IF        @EQUAL
            MOVE      NINE,PV1020                * yes - not stated/not known
          ELSE
            MOVE      ZERO,COUNTER
            MOVE      TWO,PV1020                 * no - non-compensable
            PACK      KEY5,ANSC,ANSL,EMVICOMP
            CALL      RDCODE1
            IF        OVRCD = 0
              WHILE     COUNTER < 5
                ADD      ONE,COUNTER
                LOAD     ANS,COUNTER,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
                MATCH    SP1,ANS                 * blank indicator ?
                IF       !@EQUAL
                  MATCH    ANSW,ANS              * no - worker's comp ?
                  IF       @EQUAL
                    MOVE     ONE,PV1020          * yes
                    MOVE     FIVE,COUNTER
                    MOVE     EMVIADMN,KEY8
                    CALL     GTACC000            * get ACC details if relevant
                  ELSE
                    MATCH    ANSM,ANS            * motor accident ?
                    IF       @EQUAL
                      MOVE     ONE,PV1020        * yes
                      MOVE     FIVE,COUNTER
                    ELSE
                      MATCH    ANSV,ANS          * veteran's affair ?
                      IF       @EQUAL
                        MOVE     ONE,PV1020      * yes
                        MOVE     FIVE,COUNTER
                      ENDIF
                    ENDIF
                  ENDIF
                ENDIF
              DO
            ENDIF
          ENDIF
.
.         The minimum number of fields to be sent is 20, so pack up the message
.         string with the first 20 fields which have just been loaded.
.
EPV13000  PACK      SEGSTRNG,ANSP,ANSV,ONE,PIPE:
                             PV1001,PIPE,PV1002,PIPE,PV1003,PIPE,PV1004,PIPE:
                             PV1005,PIPE,PV1006,PIPE,PV1007,PIPE,PV1008,PIPE:
                             PV1009,PIPE,PV1010,PIPE,PV1011,PIPE,PV1012,PIPE:
                             PV1013,PIPE,PV1014,PIPE,PV1015,PIPE,PV1016,PIPE:
                             PV1017,PIPE,PV1018,PIPE,PV1019,PIPE,PV1020
          ENDSET    SEGSTRNG
.
.         Set discharge disposition if A03 (discharge), A13 (discharge
.         cancellation) or A08 (update of discharged patient).
.         If the HL7 parameter is set for using Cat EW instead of Cat ED,
.         then send the code (emviwait) and the description, otherwise, send
.         the associated number from Cat ED
.
          IF        MESSNUMB = 4 | MESSNUMB = 16 | MESSNUMB = 10 & EMVISTAT > 1
            MOVE      BLANKSTR,PV1036            * set default to blank
            IF        PTCNPW36 = 1
              MATCH     SP3,EMVIWAIT             * blank field ?
              IF        !@EQUAL
                MOVE      EMVIWAIT,FIELDSTR
                CALL      SPCHR000               * convert special characters
                MOVE      FIELDSTR,PV1036
.
                PACK      KEY5,ANSE,ANSW,EMVIWAIT
                CALL      RDCODE1
                IF        OVRCD = 0
                  ENDSET    PV1036
                  APPEND    CARET,PV1036
                  MOVE      TDESC,FIELDSTR
                  CALL      SPCHR000             * convert special characters
                  APPEND    FIELDSTR,PV1036
                  RESET     PV1036
                ENDIF
              ENDIF
            ELSE
              MATCH     SP3,EMVIDSTA             * disch. disposition blank ?
              IF        !@EQUAL
                PACK      KEY5,ANSE,ANSD,EMVIDSTA
                CALL      RDCODE1
                IF        OVRCD = 0
                  MOVE      THCSCOD,ANS
                  TYPE      ANS
                  IF        @EQUAL
                    MOVE      ANS,FORM1
                    IF        FORM1 > 0 & FORM1 < 8
                      MOVE      THCSCOD,FIELDSTR
                      CALL      SPCHR000         * convert special characters
                      MOVE      FIELDSTR,PV1036
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
.         For NZ sites, populate discharge destination using Cat ED.
.         Set discharge disposition if A03 (discharge), A13 (discharge
.         cancellation) or A08 (update of discharged patient).
.
          IF        MESSNUMB = 4 | MESSNUMB = 16 | MESSNUMB = 10 & EMVISTAT > 1
            IF        PTCNNHII = 1
              MOVE      BLANKSTR,PV1037          * default to blank
              MATCH     SP3,EMVIDSTA             * destination blank ?
              IF        !@EQUAL
                MOVE      EMVIDSTA,FIELDSTR      * no
                CALL      SPCHR000               * convert special characters
                MOVE      FIELDSTR,PV1037
.
                PACK      KEY5,ANSE,ANSD,EMVIDSTA
                CALL      RDCODE1                * code on file ?
                IF        OVRCD = 0
                  ENDSET    PV1037
                  APPEND    CARET,PV1037
                  MOVE      TDESC,FIELDSTR       * yes
                  CALL      SPCHR000             * convert special characters
                  APPEND    FIELDSTR,PV1037
                  RESET     PV1037
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
.         Load the ED location Code if the CCDHB customisation parameter
.         is turned on.
.
          IF        PTCNOLOC = 1
            MOVE      BLANKSTR,PV1039
.
            MATCH     SP3,EMVILOCN               * blank location code ?
            IF        !@EQUAL
              MOVE      EMVILOCN,FIELDSTR        * yes
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV1039
              ENDSET    PV1039
              APPEND    CARET,PV1039
.
              MOVE      "Unknown code",EMLODESC
              MOVE      EMVILOCN,KEY3
              CALL      RDEMLOC1
              MOVE      EMLODESC,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PV1039
.
              MATCH     ANSO,EMLOTYPE
              IF        @EQUAL
                APPEND    CARET,PV1039
                APPEND    ANSO,PV1039            * location type = 'other'
              ENDIF
.
              RESET     PV1039
            ENDIF
          ENDIF
.
.         Set Admit Date/Time
.
          UNPACK    EMVITIME,CHOUR,ANS,CMIN,ANS,CSEC
          PACK      PV1044,EMVIDATE,CHOUR,CMIN,CSEC
.
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1021,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1022,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1023,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1024,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1025,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1026,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1027,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1028,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1029,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1030,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1031,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1032,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1033,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1034,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1035,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1036,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1037,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1038,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1039,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1040,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1041,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1042,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1043,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    PV1044,SEGSTRNG
.
.         All 45 PV1 fields to be sent for A03 (discharge), A13 (cancel
.         discharge) or A08 (discharge update only)
.
EPV15000  IF        MESSNUMB = 4 | MESSNUMB = 16 | EMVISTAT > 1 & MESSNUMB = 10
            MATCH     SP70,EMVIDDAT
            IF        @EQUAL
              MOVE      BLANKSTR,PV1045     * blank discharge date
            ELSE
              MATCH     SP70,EMVIDTIM
              IF        @EQUAL
                MOVE      EMVIDDAT,PV1045   * blank discharge time
              ELSE
                UNPACK    EMVIDTIM,CHOUR,ANS,CMIN,ANS,CSEC
                PACK      PV1045,EMVIDDAT,CHOUR,CMIN,CSEC
                REP       " 0",PV1045
              ENDIF
            ENDIF
            APPEND    PIPE,SEGSTRNG
            APPEND    PV1045,SEGSTRNG
          ENDIF
.
EPV19000  APPEND    CRETURN,SEGSTRNG
          RESET     SEGSTRNG
.
EPV19999  RETURN
+
.*****************************************************************************
.*                           EDG10000              Called by: WRDG1000       *
.*      Load the DG1 fields for an ED message (free format diagnosis only)   *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
.         Check if we are sending the free text admitting/presenting diagnoses
.
EDG10000  MOVE      ZERO,F1
          MOVE      PTCNADIG,F1
          IF        F1 < 1 | F1 > 5
            GOTO      EDG15000                   * no - finished
          ENDIF
.
          MATCH     "1",PTCNADIG
          GOTO      EDG13000 IF EQUAL            * 1 = use free text desc only
.
          MATCH     "4",PTCNADIG
          GOTO      EDG13000 IF EQUAL            * 4 = use free text desc only
.
EDG12000  MATCH     SP50,EMVIUC20                * Pres Compl (Cat el) blank ?
          GOTO      EDG15000 IF EQUAL            * yes
.
          CALL      CLDG1000                     * yes - clear DG1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,DG1001               * set id
          SQUEEZE   DG1001
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATel,EMVIUC20
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      PTCDLDES,FIELDSTR          * load cat el long desc
            CALL      SPCHR000                   * convert special characters
          ENDIF
          MOVE      FIELDSTR,DG1004              * load pres. complaint desc
          STRIP     DG1004
.
          MATCH     "2",PTCNADIG
          IF        @EQUAL
            GOTO      EDG14000                   * 2 = use Cat el desc only
          ELSE
            MATCH     SP50,EMVICOM1              * admitting diagnosis 1 blank?
            IF        !@EQUAL
              ENDSET    DG1004                   * no - append diagnosis 1
              APPEND    SP1,DG1004
              MOVE      EMVICOM1,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DG1004          * load diagnosis 1
              RESET     DG1004
              STRIP     DG1004
            ENDIF
            GOTO      EDG13500                   * 3 = use Cat el and free text
          ENDIF
.
EDG13000  MATCH     SP50,EMVICOM1                * admitting diagnosis 1 blank ?
          GOTO      EDG15000 IF EQUAL            * yes
.
          CALL      CLDG1000                     * yes - clear DG1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,DG1001               * set id
          SQUEEZE   DG1001
.
          MOVE      EMVICOM1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1004              * load admitting diagnosis 1
          STRIP     DG1004
EDG13500  MATCH     SP50,EMVICOM2                * admitting diagnosis 2 blank?
          IF        !@EQUAL
            ENDSET    DG1004                     * no - append diagnosis 2
            APPEND    SP1,DG1004
            MOVE      EMVICOM2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,DG1004            * load diagnosis 2
            RESET     DG1004
            STRIP     DG1004
          ENDIF
.
          MATCH     "4",PTCNADIG                 * 4 = use 6 lines of free text
          IF        !@EQUAL
            MATCH     "5",PTCNADIG
            GOTO      EDG14000 IF NOT EQUAL      * 5 = use 6 lines of free text
          ENDIF
.
          MATCH     SP50,EMVICOM3                * admitting diagnosis 3 blank?
          IF        !@EQUAL
            ENDSET    DG1004                     * no - append diagnosis 3
            APPEND    SP1,DG1004
            MOVE      EMVICOM3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,DG1004            * load diagnosis 3
            RESET     DG1004
            STRIP     DG1004
          ENDIF
.
          MATCH     SP50,EMVICOM4                * admitting diagnosis 4 blank?
          IF        !@EQUAL
            ENDSET    DG1004                     * no - append diagnosis 4
            APPEND    SP1,DG1004
            MOVE      EMVICOM4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,DG1004            * load diagnosis 4
            RESET     DG1004
            STRIP     DG1004
          ENDIF
.
          MATCH     SP50,EMVICOM5                * admitting diagnosis 5 blank?
          IF        !@EQUAL
            ENDSET    DG1004                     * no - append diagnosis 5
            APPEND    SP1,DG1004
            MOVE      EMVICOM5,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,DG1004            * load diagnosis 5
            RESET     DG1004
            STRIP     DG1004
          ENDIF
.
          MATCH     SP50,EMVICOM6                * admitting diagnosis 6 blank?
          IF        !@EQUAL
            ENDSET    DG1004                     * no - append diagnosis 6
            APPEND    SP1,DG1004
            MOVE      EMVICOM6,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,DG1004            * load diagnosis 6
            RESET     DG1004
            STRIP     DG1004
          ENDIF
.
EDG14000  MOVE      ANSA,DG1006                  * set type to "Admitting"
.
          PACK      SEGSTRNG,ANSD,ANSG,ONE,PIPE:
                         DG1001,PIPE,DG1002,PIPE,DG1003,PIPE,DG1004,PIPE:
                         DG1005,PIPE,DG1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,EDG19100:               * connection lost
                         EDG19200                * timeout
.
.         Now send any coded discharge data (diagnosis code and/or description)
.
EDG15000  MATCH     "1",EMCNSEIC
          IF        @EQUAL
            CALL      GEVCD000                   * get icd codes from emrvcd
            GOTO      EDG19999
          ENDIF
.
          CALL      CLDG1000                     * clear DG1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,DG1001               * set id
          SQUEEZE   DG1001
.
.         Load Discharge ICD10 code
.
          MOVE      BLANKSTR,DG1003              * default diagnosis code
.
          MATCH     SP9,PMVXPICD                 * diagnosis code blank ?
          GOTO      EDG16000 IF EQUAL            * yes
.
          MOVE      PMVXPICD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1003
.
          MOVE      EMVIDATE,CODINGDT
          CALL      GTICD000                     * get ICD description/version
.
.         Load Discharge Diagnosis (free text)
.
EDG16000  MOVE      BLANKSTR,DG1004              * default diagnosis desc.
.
          MATCH     EMVITXT2,SP70                * diagnosis desc. blank ?
          GOTO      EDG19000 IF EQUAL            * yes
.
          MOVE      EMVITXT2,FIELDSTR            * no - load discharge diagnosis
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1004
.
EDG18000  MOVE      ANSF,DG1006                  * set type to "Final"
.
          PACK      SEGSTRNG,ANSD,ANSG,ONE,PIPE:
                         DG1001,PIPE,DG1002,PIPE,DG1003,PIPE,DG1004,PIPE:
                         DG1005,PIPE,DG1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,EDG19100:               * connection lost
                         EDG19200                * timeout
.
EDG19000  MOVE      ZERO,EXIT
          GOTO      EDG19999
.
EDG19100  MOVE      ONE,EXIT
          GOTO      EDG19999
.
EDG19200  MOVE      TWO,EXIT
.
EDG19999  RETURN
+
.*****************************************************************************
.*                             GEVCD000                                      *
.*               Get the ICD coding from emrvcdaf                            *
.*****************************************************************************
GEVCD000  MOVE      SP70,D3
.
GEVCD100  CALL      CLDG1000                     * clear DG1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,DG1001               * set id
          SQUEEZE   DG1001
.
.         Load EMR ICD10 code
.
          MOVE      BLANKSTR,DG1003              * default diagnosis code
.
          MOVE      EMVIADMN,DEMVIADM
          PACK      KEY14,DEMVIADM,ZERO,ZERO,FIVE,D3
          CALL      RSEMVCD1
          CALL      RKEMVCD1
          BRANCH    OVRCD,GEVCD900               * end of emrvcdaf ?
.
          MATCH     DEMVIADM,EMVCVIST
          GOTO      GEVCD900 IF NOT EQUAL        * same visit ?
.
          MATCH     "005",EMVCTYPE
          GOTO      GEVCD900 IF NOT EQUAL        * same type ?
.
          MATCH     SP70,EMVCMNCD                * diagnosis code blank ?
          GOTO      GEVCD100 IF EQUAL            * yes
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          BRANCH    OVRCD,GEVCD600               * code on emricdaf ?
.
          MOVE      EMVCMNCD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1003
.
          ENDSET    DG1003
          APPEND    CARET,DG1003
.
          MOVE      EMICVEMD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,DG1003
.
          RESET     DG1003
.
.         Load EMR Diagnosis (free text)
.
GEVCD600  MOVE      BLANKSTR,DG1004              * default diagnosis desc.
.
          MATCH     EMVCFTXT,SP70                * diagnosis desc. blank ?
          GOTO      GEVCD800 IF EQUAL            * yes
.
          MOVE      EMVCFTXT,FIELDSTR            * no - load diagnosis desc
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1004
.
GEVCD800  MOVE      ANSE,DG1006                  * set type to "Emergency"
.
          PACK      SEGSTRNG,ANSD,ANSG,ONE,PIPE:
                         DG1001,PIPE,DG1002,PIPE,DG1003,PIPE,DG1004,PIPE:
                         DG1005,PIPE,DG1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,GEVCD910:               * connection lost
                         GEVCD920                * timeout
.
          MOVE      EMVCUNIQ,D3
          GOTO      GEVCD100                     * more diagnoses ?
.
GEVCD900  MOVE      ZERO,EXIT
          GOTO      GEVCD999
.
GEVCD910  MOVE      ONE,EXIT
          GOTO      GEVCD999
.
GEVCD920  MOVE      TWO,EXIT
.
GEVCD999  RETURN
+
.*****************************************************************************
.*                           EMZXV000                                        *
.*                  Format EMR Extra visit details segment                   *
.*****************************************************************************
.
.         ZXV.59    Ambulance Handover Date/Time
.
EMZXV000  MOVE      BLANKSTR,ZXV059              * load default value
.
          MATCH     SP8,EMVIAHDT                 * date populated ?
          GOTO      EMZXV010 IF EQUAL            * no - finished field
.
          MOVE      EMVIAHDT,ZXV059
          MATCH     SP8,EMVIAHTM                 * time populated ?
          GOTO      EMZXV010 IF EQUAL            * no - finished field
.
          UNPACK    EMVIAHTM,CHOUR,ANS,CMIN,ANS,CSEC
          ENDSET    ZXV059
          APPEND    CHOUR,ZXV059
          APPEND    CMIN,ZXV059
          APPEND    CSEC,ZXV059
.
          RESET     ZXV059
          REP       " 0",ZXV059
.
.         ZXV.60    Ambulance Case Number
.
EMZXV010  MOVE      BLANKSTR,ZXV060              * load default value
.
          MATCH     SP15,EMVIAMBL                * field populated ?
          GOTO      EMZXV020 IF EQUAL            * no - finished field
.
          MOVE      EMVIAMBL,ZXV060
          STRIP     ZXV060
.
.         ZXV.61    Ambulance Case Created Date/Time
.
EMZXV020  MOVE      BLANKSTR,ZXV061              * load default value
.
          MATCH     SP8,EMVIUD09                 * date populated ?
          GOTO      EMZXV030 IF EQUAL            * no - finished field
.
          MOVE      EMVIUD09,ZXV061
          MATCH     SP8,EMVIUT09                 * time populated ?
          GOTO      EMZXV030 IF EQUAL            * no - finished field
.
          UNPACK    EMVIUT09,CHOUR,ANS,CMIN,ANS,CSEC
          ENDSET    ZXV061
          APPEND    CHOUR,ZXV061
          APPEND    CMIN,ZXV061
          APPEND    CSEC,ZXV061
.
          RESET     ZXV061
          REP       " 0",ZXV061
.
.         ZXV.62    Initial Assessor Code
.
EMZXV030  MOVE      BLANKSTR,ZXV062              * load default value
.
          MATCH     SP10,EMVIMDCD                * field populated ?
          GOTO      EMZXV040 IF EQUAL            * no - finished field
.
          MOVE      EMVIMDCD,FIELDSTR            * load hcp code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV062
.
          MOVE      EMVIMDCD,KEY10
          CALL      RDPMHCP1
          BRANCH    OVRCD,EMZXV040               * hcp not on file
.
          ENDSET    ZXV062
          APPEND    CARET,ZXV062
          MOVE      PMHCSNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV062
          APPEND    CARET,ZXV062
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV062
          APPEND    CARET,ZXV062
          APPEND    CARET,ZXV062
          APPEND    CARET,ZXV062
          MOVE      PMHCTITL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV062
          APPEND    CARET,ZXV062
          APPEND    CARET,ZXV062
          MOVE      PMHCPRV1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV062
.
          RESET     ZXV062
.
.         ZXV.63    Initial Assessor Date/Time
.
EMZXV040  MOVE      BLANKSTR,ZXV063              * load default value
.
          MATCH     SP8,EMVIMDDT                 * date populated ?
          GOTO      EMZXV050 IF EQUAL            * no - finished field
.
          MOVE      EMVIMDDT,ZXV063
          MATCH     SP8,EMVIMDTM                 * time populated ?
          GOTO      EMZXV050 IF EQUAL            * no - finished field
.
          UNPACK    EMVIMDTM,CHOUR,ANS,CMIN,ANS,CSEC
          ENDSET    ZXV063
          APPEND    CHOUR,ZXV063
          APPEND    CMIN,ZXV063
          APPEND    CSEC,ZXV063
.
          RESET     ZXV063
          REP       " 0",ZXV063
.
.         ZXV.64    Initial Assessor Reason
.
EMZXV050  MOVE      BLANKSTR,ZXV064              * set default value
.
          MATCH     SP3,EMVIUC31                 * field populated ?
          GOTO      EMZXV060 IF EQUAL            * no
.
          MOVE      EMVIUC31,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV064
          ENDSET    ZXV064
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSY,ANSN,EMVIUC31
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV064
          APPEND    FIELDSTR,ZXV064
          APPEND    CARET,ZXV064
          APPEND    "webPAS",ZXV064
          RESET     ZXV064
.
.         ZXV.65    Treating Doctor Date/Time
.
EMZXV060  MOVE      BLANKSTR,ZXV065              * load default value
.
          MOVE      EMVIADMN,DEMVIADM
          PACK      KEY22,DEMVIADM,Z70
          CALL      RSEMHIS1
EMZXV065  CALL      RPEMHIS1                     * loop emrhisaf
          BRANCH    OVRCD,EMZXV070
.
          MATCH     DEMVIADM,EMHIVIS             * same visit ?
          GOTO      EMZXV070 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT              * most recent doctor update
          GOTO      EMZXV065 IF NOT EQUAL
.
          MATCH     SP8,EMHIDSD                  * date populated ?
          GOTO      EMZXV070 IF EQUAL            * no - finished field
.
          MOVE      EMHIDSD,ZXV065
          MATCH     SP8,EMHIDST                  * time populated ?
          GOTO      EMZXV070 IF EQUAL            * no - finished field
.
          UNPACK    EMHIDST,CHOUR,CMIN,CSEC
          ENDSET    ZXV065
          APPEND    CHOUR,ZXV065
          APPEND    CMIN,ZXV065
          APPEND    CSEC,ZXV065
.
          RESET     ZXV065
          REP       " 0",ZXV065
.
.         ZXV.66    Treating Nurse Code
.
EMZXV070  MOVE      BLANKSTR,ZXV066              * load default value
.
          MATCH     SP10,EMVIATNS                * field populated ?
          GOTO      EMZXV080 IF EQUAL            * no - finished field
.
          MOVE      EMVIATNS,FIELDSTR            * load nurse code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV066
.
          MOVE      EMVIATNS,KEY6
          CALL      RDOPNUR1
          BRANCH    OVRCD,EMZXV080               * nurse not on file
.
          ENDSET    ZXV066
          APPEND    CARET,ZXV066
          MOVE      OPNRSNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV066
          APPEND    CARET,ZXV066
          MOVE      OPNRGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV066
.
          RESET     ZXV066
.
.         ZXV.67    Treating Nurse Date/Time
.
EMZXV080  MOVE      BLANKSTR,ZXV067              * load default value
.
          MOVE      EMVIADMN,DEMVIADM
          PACK      KEY22,DEMVIADM,Z70
          CALL      RSEMHIS1
EMZXV085  CALL      RPEMHIS1                     * loop emrhisaf
          BRANCH    OVRCD,EMZXV090
.
          MATCH     DEMVIADM,EMHIVIS             * same visit ?
          GOTO      EMZXV090 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT              * most recent nurse update
          GOTO      EMZXV085 IF NOT EQUAL
.
          MATCH     SP8,EMHINSD                  * date populated ?
          GOTO      EMZXV090 IF EQUAL            * no - finished field
.
          MOVE      EMHINSD,ZXV067
          MATCH     SP8,EMHINST                  * time populated ?
          GOTO      EMZXV090 IF EQUAL            * no - finished field
.
          UNPACK    EMHINST,CHOUR,CMIN,CSEC
          ENDSET    ZXV067
          APPEND    CHOUR,ZXV067
          APPEND    CMIN,ZXV067
          APPEND    CSEC,ZXV067
.
          RESET     ZXV067
          REP       " 0",ZXV067
.
.         ZXV.68    MH Practitioner Code
.
EMZXV090  MOVE      BLANKSTR,ZXV068              * load default value
.
          MATCH     SP10,EMVIMPRA                * field populated ?
          GOTO      EMZXV100 IF EQUAL            * no - finished field
.
          MOVE      EMVIMPRA,FIELDSTR            * load hcp code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV068
.
          MOVE      EMVIMPRA,KEY10
          CALL      RDPMHCP1
          BRANCH    OVRCD,EMZXV100               * hcp not on file
.
          ENDSET    ZXV068
          APPEND    CARET,ZXV068
          MOVE      PMHCSNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV068
          APPEND    CARET,ZXV068
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV068
          APPEND    CARET,ZXV068
          APPEND    CARET,ZXV068
          APPEND    CARET,ZXV068
          MOVE      PMHCTITL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV068
          APPEND    CARET,ZXV068
          APPEND    CARET,ZXV068
          MOVE      PMHCPRV1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV068
.
          RESET     ZXV068
.
.         ZXV.69    MH Practitioner Date/Time
.
EMZXV100  MOVE      BLANKSTR,ZXV069              * load default value
.
          MATCH     SP8,EMVIMPDT                 * date populated ?
          GOTO      EMZXV110 IF EQUAL            * no - finished field
.
          MOVE      EMVIMPDT,ZXV069
          MATCH     SP8,EMVIMPTM                 * time populated ?
          GOTO      EMZXV110 IF EQUAL            * no - finished field
.
          UNPACK    EMVIMPTM,CHOUR,ANS,CMIN,ANS,CSEC
          ENDSET    ZXV069
          APPEND    CHOUR,ZXV069
          APPEND    CMIN,ZXV069
          APPEND    CSEC,ZXV069
.
          RESET     ZXV069
          REP       " 0",ZXV069
.
.         ZXV.70    First Seen By Doctor Code
.
EMZXV110  MOVE      BLANKSTR,ZXV070              * load default value
.
          MOVE      EMVIADMN,DEMVIADM
          PACK      KEY22,DEMVIADM,SP70
          CALL      RSEMHIS1
EMZXV115  CALL      RKEMHIS1                     * loop emrhisaf
          BRANCH    OVRCD,EMZXV120
.
          MATCH     DEMVIADM,EMHIVIS             * same visit ?
          GOTO      EMZXV120 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT              * first doctor update
          GOTO      EMZXV115 IF NOT EQUAL
.
          MATCH     SP10,EMHIDOC                 * field populated ?
          GOTO      EMZXV120 IF EQUAL            * no - finished field
.
          MOVE      EMHIDOC,FIELDSTR             * load hcp code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV070
.
          MOVE      EMHIDOC,KEY10
          CALL      RDPMHCP1
          BRANCH    OVRCD,EMZXV120               * hcp not on file
.
          ENDSET    ZXV070
          APPEND    CARET,ZXV070
          MOVE      PMHCSNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV070
          APPEND    CARET,ZXV070
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV070
          APPEND    CARET,ZXV070
          APPEND    CARET,ZXV070
          APPEND    CARET,ZXV070
          MOVE      PMHCTITL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV070
          APPEND    CARET,ZXV070
          APPEND    CARET,ZXV070
          MOVE      PMHCPRV1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV070
.
          RESET     ZXV070
.
.         ZXV.71    First Seen By Doctor Date/Time
.
EMZXV120  MOVE      BLANKSTR,ZXV071              * load default value
.
          MATCH     SP8,EMVIDRDT                 * date populated ?
          GOTO      EMZXV130 IF EQUAL            * no - finished field
.
          MOVE      EMVIDRDT,ZXV071
          MATCH     SP8,EMVIDRTM                 * time populated ?
          GOTO      EMZXV130 IF EQUAL            * no - finished field
.
          UNPACK    EMVIDRTM,CHOUR,ANS,CMIN,ANS,CSEC
          ENDSET    ZXV071
          APPEND    CHOUR,ZXV071
          APPEND    CMIN,ZXV071
          APPEND    CSEC,ZXV071
.
          RESET     ZXV071
          REP       " 0",ZXV071
.
.         ZXV.72    Decision to Admit Date/Time
.
EMZXV130  MOVE      BLANKSTR,ZXV072              * load default value
.
          MATCH     SP8,EMVIDADT                 * date populated ?
          GOTO      EMZXV140 IF EQUAL            * no - finished field
.
          MOVE      EMVIDADT,ZXV072
          MATCH     SP8,EMVIDATM                 * time populated ?
          GOTO      EMZXV140 IF EQUAL            * no - finished field
.
          UNPACK    EMVIDATM,CHOUR,ANS,CMIN,ANS,CSEC
          ENDSET    ZXV072
          APPEND    CHOUR,ZXV072
          APPEND    CMIN,ZXV072
          APPEND    CSEC,ZXV072
.
          RESET     ZXV072
          REP       " 0",ZXV072
.
.         ZXV.73    Readiness to Admit
.
EMZXV140  MOVE      BLANKSTR,ZXV073              * load default value
.
          MATCH     SP3,EMVIUC28                 * field populated ?
          GOTO      EMZXV150 IF EQUAL            * no
.
          MOVE      EMVIUC28,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV073
          ENDSET    ZXV073
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATet,EMVIUC28
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV073
          APPEND    FIELDSTR,ZXV073
          APPEND    CARET,ZXV073
          APPEND    "webPAS",ZXV073
          RESET     ZXV073
.
.         ZXV.74    Admitting Doctor Code
.
EMZXV150  MOVE      BLANKSTR,ZXV074              * load default value
.
          MATCH     SP10,EMVIUR01                * field populated ?
          GOTO      EMZXV160 IF EQUAL            * no - finished field
.
          MOVE      EMVIUR01,FIELDSTR            * load hcp code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV074
.
          MOVE      EMVIUR01,KEY10
          CALL      RDPMHCP1
          BRANCH    OVRCD,EMZXV160               * hcp not on file
.
          ENDSET    ZXV074
          APPEND    CARET,ZXV074
          MOVE      PMHCSNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV074
          APPEND    CARET,ZXV074
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV074
          APPEND    CARET,ZXV074
          APPEND    CARET,ZXV074
          APPEND    CARET,ZXV074
          MOVE      PMHCTITL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV074
          APPEND    CARET,ZXV074
          APPEND    CARET,ZXV074
          MOVE      PMHCPRV1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXV074
.
          RESET     ZXV074
.
.         ZXV.75    Admitting Doctor Contacted
.
EMZXV160  MOVE      SP1,ZXV075                   * load default value
.
          COMPARE   ZERO,EMVIYN01                 * doctor not contacted ?
          IF        @EQUAL
            MOVE      "N",ZXV075
          ENDIF
          COMPARE   ONE,EMVIYN01                 * doctor contacted ?
          IF        @EQUAL
            MOVE      "Y",ZXV075
          ENDIF
          STRIP     ZXV075
.
.         ZXV.76    Escort Source
.
EMZXV170  MOVE      BLANKSTR,ZXV076              * load default value
.
          MATCH     SP3,EMVIUC10                 * field populated ?
          GOTO      EMZXV180 IF EQUAL            * no
.
          MOVE      EMVIUC10,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV076
          ENDSET    ZXV076
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATeb,EMVIUC10
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV076
          APPEND    FIELDSTR,ZXV076
          APPEND    CARET,ZXV076
          APPEND    "webPAS",ZXV076
          RESET     ZXV076
.
.         Other Clinical Information
.
EMZXV180  MOVE      EMVIADMN,DEMVIADM
          PACK      KEY8,DEMVIADM,SP70
          CALL      RDEMCLI1
          BRANCH    OVRCD,EMZXV230               * visit not on emrcliaf
.
.         ZXV.77    Relative Contacted
.
EMZXV185  MOVE      BLANKSTR,ZXV077              * load default value
.
          MATCH     SP10,EMCIRCCD                * field populated ?
          GOTO      EMZXV190 IF EQUAL            * no
.
          MOVE      EMCIRCCD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV077
          ENDSET    ZXV077
.
          MOVE      "Unknown Code",FIELDSTR
          MOVE      EMCIRCCD,KEY10
          CALL      RDPMREL1
          IF        OVRCD = 0
            MOVE      PMRLDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV077
          APPEND    FIELDSTR,ZXV077
          APPEND    CARET,ZXV077
          APPEND    "webPAS",ZXV077
          RESET     ZXV077
.
.         ZXV.78    Relative Contacted Time
.
EMZXV190  MOVE      BLANKSTR,ZXV078
.
          MATCH     SP5,EMCIRCTM                 * field populated ?
          GOTO      EMZXV200 IF EQUAL            * no - finished field
.
          UNPACK    EMCIRCTM,CHOUR,ANS,CMIN
          MOVE      CHOUR,ZXV078
          ENDSET    ZXV078
          APPEND    CMIN,ZXV078
          APPEND    SP2,ZXV078
.
          RESET     ZXV078
          REP       " 0",ZXV078
.
.         ZXV.79    Risk Assessment
.
EMZXV200  MOVE      SP1,ZXV079                   * load default value
.
          MATCH     "0",EMCIOR08                 * not completed ?
          IF        @EQUAL
            MOVE      "N",ZXV079
          ENDIF
          MATCH     "1",EMCIOR08                 * completed ?
          IF        @EQUAL
            MOVE      "Y",ZXV079
          ENDIF
          STRIP     ZXV079
.
.         ZXV.80    Specialist / other hospital contacted Name
.
EMZXV210  MOVE      BLANKSTR,ZXV080              * load default value
.
          MATCH     SP70,EMCISCFF                * field populated ?
          GOTO      EMZXV220 IF EQUAL            * no - finished field
.
          MOVE      EMCISCFF,ZXV080
          STRIP     ZXV080
.
.         ZXV.81    Specialist / other hospital contacted via
.
EMZXV220  MOVE      BLANKSTR,ZXV081              * load default value
.
          MATCH     SP3,EMCISCVC                 * field populated ?
          GOTO      EMZXV230 IF EQUAL            * no
.
          MOVE      EMCISCVC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV081
          ENDSET    ZXV081
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATCZ,EMCISCVC
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV081
          APPEND    FIELDSTR,ZXV081
          APPEND    CARET,ZXV081
          APPEND    "webPAS",ZXV081
          RESET     ZXV081
.
.         ZXV.82    ED Ready to Discharge Date/Time
.
EMZXV230  MOVE      BLANKSTR,ZXV082              * load default value
.
          MATCH     SP8,EMVIUD01                 * date populated ?
          GOTO      EMZXV240 IF EQUAL            * no - finished field
.
          MOVE      EMVIUD01,ZXV082
          MATCH     SP8,EMVIUT01                 * time populated ?
          GOTO      EMZXV240 IF EQUAL            * no - finished field
.
          UNPACK    EMVIUT01,CHOUR,ANS,CMIN,ANS,CSEC
          ENDSET    ZXV082
          APPEND    CHOUR,ZXV082
          APPEND    CMIN,ZXV082
          APPEND    CSEC,ZXV082
.
          RESET     ZXV082
          REP       " 0",ZXV082
.
.         ZXV.83    Referred to On Departure
.
EMZXV240  MOVE      BLANKSTR,ZXV083              * load default value
.
          MATCH     SP3,EMVIUC11                 * field populated ?
          GOTO      EMZXV250 IF EQUAL            * no
.
          MOVE      EMVIUC11,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV083
          ENDSET    ZXV083
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATec,EMVIUC11
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV083
          APPEND    FIELDSTR,ZXV083
          APPEND    CARET,ZXV083
          APPEND    "webPAS",ZXV083
          RESET     ZXV083
.
.         ZXV.84    Reason for Transfer
.
EMZXV250  MOVE      BLANKSTR,ZXV084              * load default value
.
          MATCH     SP3,EMVIUC12                 * field populated ?
          GOTO      EMZXV260 IF EQUAL            * no
.
          MOVE      EMVIUC12,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV084
          ENDSET    ZXV084
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATed,EMVIUC12
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV084
          APPEND    FIELDSTR,ZXV084
          APPEND    CARET,ZXV084
          APPEND    "webPAS",ZXV084
          RESET     ZXV084
.
.         ZXV.85    Transport Mode
.
EMZXV260  MOVE      BLANKSTR,ZXV085              * load default value
.
          MATCH     SP3,EMVIUC09                 * field populated ?
          GOTO      EMZXV270 IF EQUAL            * no
.
          MOVE      EMVIUC09,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV085
          ENDSET    ZXV085
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATea,EMVIUC09
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV085
          APPEND    FIELDSTR,ZXV085
          APPEND    CARET,ZXV085
          APPEND    "webPAS",ZXV085
          RESET     ZXV085
.
.         ZXV.86    Ambulance Booking Time
.
EMZXV270  MOVE      BLANKSTR,ZXV086              * load default value
.
          MATCH     SP8,EMVIUT07                 * time populated ?
          GOTO      EMZXV280 IF EQUAL            * no - finished field
.
          UNPACK    EMVIUT07,CHOUR,ANS,CMIN,ANS,CSEC
          MOVE      CHOUR,ZXV086
          ENDSET    ZXV086
          APPEND    CMIN,ZXV086
          APPEND    CSEC,ZXV086
.
          RESET     ZXV086
          REP       " 0",ZXV086
.
.         ZXV.87    ED Extended Visit Reason
.
EMZXV280  MOVE      BLANKSTR,ZXV087              * load default value
.
          MATCH     SP3,EMVIEXRS                 * field populated ?
          GOTO      EMZXV290 IF EQUAL            * no
.
          MOVE      EMVIEXRS,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV087
          ENDSET    ZXV087
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATRX,EMVIEXRS
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV087
          APPEND    FIELDSTR,ZXV087
          APPEND    CARET,ZXV087
          APPEND    "webPAS",ZXV087
          RESET     ZXV087
.
.         ZXV.107 Senior Doctor
.
EMZXV290  MOVE      SP70,DOCFNAME
          CLEAR     DOCFNAME
          MOVE      BLANKSTR,ZXV107              * default to blank
          MATCH     SP70,EMVIUR04                * senior doctor blank?
          IF        !@EQUAL
            MOVE      EMVIUR04,FIELDSTR          * no - load dr code
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,ZXV107
            ENDSET    ZXV107
            APPEND    CARET,ZXV107
.
            MOVE      EMVIUR04,KEY10
            CALL      RDPMHCP1
            IF        OVRCD=0
              MOVE      PMHCSNAM,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      PMHCGNAM,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      PMHCTITL,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              RESET     DOCFNAME
              APPEND    DOCFNAME,ZXV107
              APPEND    CARET,ZXV107
              APPEND    CARET,ZXV107
              APPEND    "webPAS",ZXV107
            ELSE
              APPEND    CARET,ZXV107
              APPEND    CARET,ZXV107
              APPEND    CARET,ZXV107
              APPEND    CARET,ZXV107
              APPEND    CARET,ZXV107
              APPEND    CARET,ZXV107
              APPEND    "webPAS",ZXV107
            ENDIF
            RESET     ZXV107
            STRIP     ZXV107
          ENDIF
.
.         ZXV.108 Place of Incident Code
.
EMZXV300  MOVE      BLANKSTR,ZXV108               * Load default value
.
          MATCH     SP70,EMVIPLIN                 * Field populated
          GOTO      EMZXV310 IF EQUAL             * no
.
          MOVE      EMVIPLIN,FIELDSTR
          CALL      SPCHR000                      * convert special characters
          MOVE      FIELDSTR,ZXV108
          ENDSET    ZXV108
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATAP,EMVIPLIN
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                    * Convert special characters
          ENDIF
          APPEND    CARET,ZXV108
          APPEND    FIELDSTR,ZXV108
          APPEND    CARET,ZXV108
          APPEND    "webPAS",ZXV108
          RESET     ZXV108
          STRIP     ZXV108
.
.         ZXV.109 Injury Description Line 1
.
EMZXV310  MOVE      BLANKSTR,ZXV109
.
          MATCH     SP70,EMVIINJ1
          GOTO      EMZXV320 IF EQUAL
.        
          MOVE      EMVIINJ1,ZXV109
          RESET     ZXV109
          STRIP     ZXV109
.
.         ZXV.110 Injury Description Line 2
.
EMZXV320  MOVE      BLANKSTR,ZXV110
.
          MATCH     SP70,EMVIINJ2
          GOTO      EMZXV330 IF EQUAL
.
          MOVE      EMVIINJ2,ZXV110
          RESET     ZXV110
          STRIP     ZXV110
.
.         ZXV.111 Injury Cause (Category ey)
.
EMZXV330  MOVE      BLANKSTR,ZXV111               * Load default value
.
          MATCH     SP70,EMVIINJC                 * Field populated
          GOTO      EMZXV340 IF EQUAL             * no
.
          MOVE      EMVIINJC,FIELDSTR
          CALL      SPCHR000                      * convert special characters
          MOVE      FIELDSTR,ZXV111
          ENDSET    ZXV111
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATeyLW,EMVIINJC         * cat ey (lowercase)
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                    * Convert special characters
          ENDIF
          APPEND    CARET,ZXV111
          APPEND    FIELDSTR,ZXV111
          APPEND    CARET,ZXV111
          APPEND    "webPAS",ZXV111
          RESET     ZXV111
          STRIP     ZXV111
.
.         ZXV.112 Human Intent (category ez)
.
EMZXV340  MOVE      BLANKSTR,ZXV112               * Load default value
.
          MATCH     SP70,EMVIHUMI                 * Field populated
          GOTO      EMZXV350 IF EQUAL             * no
.
          MOVE      EMVIHUMI,FIELDSTR
          CALL      SPCHR000                      * convert special characters
          MOVE      FIELDSTR,ZXV112
          ENDSET    ZXV112
          STRIP     ZXV112
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATez,EMVIHUMI
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                    * Convert special characters
          ENDIF
          APPEND    CARET,ZXV112
          APPEND    FIELDSTR,ZXV112
          APPEND    CARET,ZXV112
          APPEND    "webPAS",ZXV112
          RESET     ZXV112
          STRIP     ZXV112
.
.         ZXV.113 Activity When Injured (category EY)
.
EMZXV350  MOVE      BLANKSTR,ZXV113               * Load default value
.
          MATCH     SP70,EMVIACTI                 * Field populated
          GOTO      EMZXV360 IF EQUAL             * no
.
          MOVE      EMVIACTI,FIELDSTR
          CALL      SPCHR000                      * convert special characters
          MOVE      FIELDSTR,ZXV113
          ENDSET    ZXV113
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATEY,EMVIACTI
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                    * Convert special characters
          ENDIF
          APPEND    CARET,ZXV113
          APPEND    FIELDSTR,ZXV113
          APPEND    CARET,ZXV113
          APPEND    "webPAS",ZXV113
          RESET     ZXV113
          STRIP     ZXV113
.
.         Consent MyHR Record Upload (ZXV.89)
.>>>>     Commented below out as this field should not be populated at this
.         stage, but will be done at a later date.
EMZXV360  
.         CALL      GMYHR000
.
EMZXV999  RETURN
+
.*****************************************************************************
.*                            OTHVIS00             Called by: ADPV1000       *
.*         Check if this patient has other visit numbers:                    *
.*         eg: ED visit # if admitted from an ED visit                       *
.*             Statistical admission original visit #                        *
.* Requires: PURNO - Patient U/R number                                      *
.*           VISNUMBR - I/P visit number                                     *
.*           PV1050 - alternate visit number (which may or may not already   *
.*                    be populated).                                         *
.* Returns:  PV1050 - alternate visit number populated with ED visit number  *
.*****************************************************************************
.
.         First, check for a related ED visit.
.
OTHVIS00  MOVE      BLANKSTR,DIM8                * set default
.
          PACK      KEY16,PURNO,TILDA40
          CALL      RSEMVIS3                     * position after U/R
OTHVIS10  CALL      RPEMVIS3                     * read previous record
          BRANCH    OVRCD,OTHVIS15
.
          MATCH     PURNO,EMVIURNO               * same patient still ?
          GOTO      OTHVIS15 IF NOT EQUAL        * no - finished
.
          MATCH     VISNUMBR,EMVIPADM            * same visit number ?
          GOTO      OTHVIS10 IF NOT EQUAL        * no - no ignore record
.
          COMPARE   FOUR,EMVISTAT                * cancelled ed visit ?
          GOTO      OTHVIS10 IF EQUAL            * yes - ignore record
.
          MOVE      EMVIADMN,DIM8
          SQUEEZE   DIM8
.
OTHVIS15  IF        PV150CNT = 0
            MOVE      DIM8,PV1050                * load ED visit number
            ENDSET    PV1050
          ELSE
            ENDSET    PV1050
            APPEND    TILDA,PV1050
            APPEND    DIM8,PV1050
          ENDIF
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    "webPAS-ED",PV1050
          APPEND    CARET,PV1050
          APPEND    ANSV,PV1050
          APPEND    ANSN,PV1050
          RESET     PV1050
.
          ADD       ONE,PV150CNT                 * increment repeat count
.
.         Now check if this was a statistical admission
.
          MOVE      BLANKSTR,DIM8                * set default
.
          MATCH     SP8,PTMIOGNO                 * original admiss. no. blank ?
          IF        !@EQUAL
            MOVE      PTMIOGNO,DIM8              * no
            SQUEEZE   DIM8
          ENDIF
.
          IF        PV150CNT = 0
            MOVE      DIM8,PV1050                * load orig visit number
            ENDSET    PV1050
          ELSE
            ENDSET    PV1050
            APPEND    TILDA,PV1050
            APPEND    DIM8,PV1050
          ENDIF
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    "webPAS-SA",PV1050
          APPEND    CARET,PV1050
          APPEND    ANSV,PV1050
          APPEND    ANSN,PV1050
          RESET     PV1050
.
          ADD       ONE,PV150CNT                 * increment repeat count
.
OTHVIS99  CALL      CLEMRVIS
          RETURN
+
.*****************************************************************************
.*                            EPSVIS00             Called by: ALVIS000       *
.*        Get eadmission id if we are using edi & Episoft interface          *
.* Requires: PURNO - Patient U/R number                                      *
.*           VISNUMBR - I/P visit number                                     *
.*           PV1050 - alternate visit number (which may or may not already   *
.*                    be populated).                                         *
.* Returns:  PV1050 - alternate visit number populated with eadmission id    *
.*****************************************************************************
EPSVIS00  MATCH     "1",IBCNUCIS
          GOTO      EPSVIS99 IF EQUAL            * only using socket - not EDI
.
          MATCH     "1",PTCNEPIS
          GOTO      EPSVIS99 IF NOT EQUAL        * using episoft ?
.
          BRANCH    EPISFLAG,EPSVIS99            * edi not valid for episoft
.
          PACK      KEY28,VISNUMBR,SP70
          CALL      RSPMEHB5
          CALL      RKPMEHB5                     * get eadmission id
          BRANCH    OVRCD,EPSVIS50
.
          MATCH     VISNUMBR,PMHBVISN
          GOTO      EPSVIS50 IF NOT EQUAL   * check visit number
.
          MATCH     SP70,PMHBEAID
          GOTO      EPSVIS50 IF EQUAL       * only send if eadmission id exists
.
          COMPARE   ONE,ASTAT
          GOTO      EPSVIS50 IF NOT EQUAL   * only send preadmissions
.....     0935317
.....     IF        MESSNUMB = 8
.....       MATCH     ADATE,PMHBADAT        * only send A08 if adm date changed
.....       GOTO      EPSVIS50 IF EQUAL
.....     ENDIF
.
.         Update the eAdmission expected admission date with the changed
.         admission date from webPAS, so that A08 pre-admission updates
.         are only ever sent when the admission date changes.
.
          MOVE      ADATE,PMHBADAT
          CALL      UPPMEHB5
.
          MOVE      PMHBEAID,DIM20               * set eadmission id
.
          IF        PV150CNT = 0
            MOVE      DIM20,PV1050
            ENDSET    PV1050
          ELSE
            ENDSET    PV1050
            APPEND    TILDA,PV1050
            APPEND    DIM20,PV1050
          ENDIF
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    "webPAS-EPS",PV1050
          APPEND    CARET,PV1050
          APPEND    ANSV,PV1050
          APPEND    ANSN,PV1050
          RESET     PV1050
.
          ADD       ONE,PV150CNT                 * increment repeat count
          GOTO      EPSVIS99
.
EPSVIS50  CLOSE     SEDIFILE,DELETE              * close & delete edi file
          MOVE      ONE,EPISFLAG                 * don't send edi message
.
EPSVIS99  RETURN
+
.*****************************************************************************
.*                          GTACC000               Called by: ADPV1000       *
.*                                                            EPV10000       *
.*                                                            OPV10000       *
.*             Get the ACC details if the parameter is turned on             *
.* Requires:  KEY8 to be set with visit number for read on patwc1af.         *
.*            PV1020 with component 1 set.                                   *
.* Returns :  PV1020 with components 1, 3 and 4 set.                         *
.*****************************************************************************
.
GTACC000  MATCH     "1",PTCNH7AC                 * ACC parameter turned on ?
          GOTO      GTACC999 IF NOT EQUAL        * no - finished
.
.         We need to send the ACC details, so get the patwc1af record
.
          CALL      RDWCOM1                      * ACC record found ?
          BRANCH    OVRCD,GTACC020
.
.         Read the ACC extention table in case details were cancelled
.
          CALL      RDPMWX11
          IF        OVRCD = 0
            MATCH     "3",PMWXCSTA               * Cancelled
            GOTO      GTACC020 IF EQUAL
          ENDIF
.
.         Create PV1-20 Segement with accident Date and ACC flag = Y
.
          ENDSET    PV1020                     * yes
          APPEND    CARET,PV1020
.
          MATCH     SP8,WCACDAT                * accident date blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PV1020          * yes
          ELSE
            APPEND    WCACDAT,PV1020           * no - load ACC accident date
          ENDIF
.
          APPEND    CARET,PV1020
          APPEND    ANSY,PV1020
          APPEND    CARET,PV1020
.
          MATCH     SP20,WCCLMNO               * blank claim # ?
          IF        @EQUAL
            APPEND    BLANKSTR,PV1020          * yes
          ELSE
            MOVE      WCCLMNO,FIELDSTR         * no - load ACC #
            CALL      SPCHR000                 * convert special characters
            APPEND    FIELDSTR,PV1020
          ENDIF
.
          GOTO      GTACC090
.
.         No WC detail, therefore create segment with ACC flag = N
.
GTACC020  ENDSET    PV1020
          APPEND    CARET,PV1020
          APPEND    CARET,PV1020
          APPEND    ANSN,PV1020 
          APPEND    CARET,PV1020
          APPEND    BLANKSTR,PV1020
.
GTACC090  RESET     PV1020
.
GTACC999  RETURN
+
.*****************************************************************************
.*                           SPCHR000              Called by: Lots           *
.*        Check for special HL7 characters, and if found, convert to         *
.*        the corresponding escape sequence:                                 *
.*        Field Separator         "|" becomes "\F\"                          *
.*        Component separator     "^" becomes "\S\"                          *
.*        Sub-component separator "&" becomes "\T\"                          *
.*        Repetition separator    "~" becomes "\R\"                          *
.*        Escape character        "\" becomes "\E\"                          *
.*        Hex 96 (MS Word)        "-" becomes "-"                            *
.* Requires: FIELDSTR - raw field string                                     *
.* Returns : FIELDSTR - field string with converted HL7 special characters   *
.*                      and stripped of trailing blanks                      *
.*****************************************************************************
.
SPCHR000  STRIP     FIELDSTR                     * remove trailing spaces
          MOVELPTR  FIELDSTR,FORM3               * get string length
          COMPARE   ZERO,FORM3                   * string length zero ?
          GOTO      SPCHR999 IF EQUAL            * yes - ignore
.
          MOVE      SP30,STRBUFFR                * clear the temporary string
          CLEAR     STRBUFFR
.
.         Loop through the field string checking each character to see
.         if it is a HL7 special character
.
SCHR0500  MOVE      FIELDSTR,ANS                 * load the next character
.
.         Check if character is a pipe
.
          MATCH     PIPE,ANS                     * is character "|" ?
          IF        @EQUAL
            APPEND    PIPESEQN,STRBUFFR          * yes - load "\F\"
            GOTO      SPCHR100                   * get next character
          ENDIF
.
.         Check if character is a caret
.
          MATCH     CARET,ANS                    * is character "^" ?
          IF        @EQUAL
            APPEND    CARTSEQN,STRBUFFR          * yes - load "\S\"
            GOTO      SPCHR100                   * get next character
          ENDIF
.
.         Check if character is an ampersand
.
          MATCH     AMPRSAND,ANS                 * is character "&" ?
          IF        @EQUAL
            APPEND    AMPRSEQN,STRBUFFR          * yes - load "\T\"
            GOTO      SPCHR100                   * get next character
          ENDIF
.
.         Check if character is a tilda
.
          MATCH     TILDA,ANS                    * is character "~" ?
          IF        @EQUAL
            APPEND    TILDSEQN,STRBUFFR          * yes - load "\R\"
            GOTO      SPCHR100                   * get next character
          ENDIF
.
.         Check if character is a backslash
.
          MATCH     "\",ANS                      * is character "\" ?
          IF        @EQUAL
            APPEND    BSLASEQN,STRBUFFR          * yes - load "\E\"
            GOTO      SPCHR100                   * get next character
          ENDIF
.
.         Check if character is a MS Word dash/hyphen
.
          MATCH     HEXDASH,ANS                  * is character Hex 96 ?
          IF        @EQUAL
            APPEND    "-",STRBUFFR               * yes - load "-"
            GOTO      SPCHR100                   * get next character
          ENDIF
.
.         No HL7 special characters were found, so load this character
.         into the temporary string
.
          APPEND    ANS,STRBUFFR
.
SPCHR100  BUMP      FIELDSTR                     * position on next character
          GOTO      SPCHR900 IF EOS              * eos - finished
          GOTO      SCHR0500
.
SPCHR900  RESET     STRBUFFR
          MOVE      STRBUFFR,FIELDSTR
.
SPCHR999  RETURN
+
.*****************************************************************************
.*                              CONCD000           Called by: WRPID000       *
.*     See if the patient has concession card of a given type on file        *
.* Requires: CARDTYPE - Concession Card Type                                 *
.*                      1 = Centrelink                                       *
.*                      2 = Safety Net                                       *
.*                      3 = DVA                                              *
.*                      4 = Pension                                          *
.*                      5 = Seniors                                          *
.*                      6 = Chemotherapy Card                                *
.*                      7 = NDIS Card                                        *
.*                      8 = Ambulance Card                                   *
.*           DATETIME - date/time (ccyymmddhhmmss)                           *
.*           PURNO - U/R number                                              *
.* Returns:  EXIT  0 = valid concession card found                           *
.*                 1 = no valid concession card found                        *
.*           DIM20 - Concession Card Number                                  *
.*           ZXP001 - Pension Number Expiry Date                             *
.*           ZXP005 - DVA Expiry Date                                        *
.*           ZXP006 - Safety Net Expiry Date                                 *
.*           ZXP057 - Chemotherapy Card Expiry Date                          *
.*           ZXP060 - NDIS Card Expiry Date                                  *
.*           DVCOLOUR - DVA card colour                                      *
.*****************************************************************************
.         
CONCD000  MOVE      SP4,CARDHDPD                 * card hdp default
.
          PACK      KEY19,PURNO,TILDA40
          CALL      RSPMCCD1                     * position on U/R
CONCD050  CALL      RPPMCCD1                     * read previous record
          BRANCH    OVRCD,CONCD910               * eof - nothing found
.
          MATCH     PURNO,PMCDURNO               * same U/R still ?
          GOTO      CONCD910 IF NOT EQUAL        * no - nothing found
.
.         Check if the card type is DVA or Pension (Cat ct, Indicator 1)
.
          PACK      KEY5,CATCT,PMCDCTYP
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,CONCD050               * no - ignore record
.
          MATCH     SP1,TCINDC1                  * blank indicator 1 ?
          GOTO      CONCD050 IF EQUAL            * yes - ignore record
.
          TYPE      TCINDC1                      * numeric indicator 1 ?
          GOTO      CONCD050 IF NOT EQUAL        * no - ignore record
.
          MOVE      TCINDC1,FORM1
          COMPARE   FORM1,CARDTYPE               * same concession card type ?
          GOTO      CONCD050 IF NOT EQUAL        * no - ignore record
.
.         A concession card of the same type has been found, so check
.         if there is an expiry date
.
          MATCH     SP8,PMCDEXDT                 * expiry date blank ?
          GOTO      CONCD100 IF EQUAL            * yes - assume valid
.
.         If this is a Centrelink, Ambulance or Senior's card type,
.         then don't worry about loading an expiry date, as this is not being
.         sent in the message.
.
          IF        CARDTYPE = 1 | CARDTYPE = 5 | CARDTYPE = 8
            GOTO      CONCD100
          ENDIF
.
.         There is an expiry date for the card, so check that the
.         card is current
.
          MOVE      DATETIME,DIM8
          MATCH     DIM8,PMCDEXDT                * card valid for date ?
          GOTO      CONCD910 IF LESS             * no
.
          STORE     PMCDEXDT,CARDTYPE,KEY8,ZXP006,ZXP005,ZXP001,KEY8,ZXP057:
                    ZXP060,KEY8
.
.         Concession card is current
.
CONCD100  MATCH     SP20,PMCDCNUM                * card number blank ?
          GOTO      CONCD910 IF EQUAL            * yes - nothing found
.
          MOVE      PMCDCNUM,DIM20               * load concession card number
          IF        CARDTYPE = 3
            MOVE      PMCDDVAC,DVCOLOUR
          ENDIF
.
          MOVE      THCSCOD,CARDHDPD             * save hdp default
.
          MOVE      ZERO,EXIT
          GOTO      CONCD999
.
CONCD910  MOVE      ONE,EXIT
.
CONCD999  RETURN
+
.******************************************************************************
.*                               GALID000          Called by: WRPID000        *
.*                   Get the alternate id check digit                         *
.******************************************************************************
.
GALID000  MATCH     "1",PTCNCKDG                 * sending check digit in U/R ?
          GOTO      GALID999 IF NOT EQUAL        * no - finished
.
          MOVE      ZERO,COUNTER                 * initialise counter
.
.         See if there is one or more alternate id's for the U/R.  If there
.         is only one, then use the last character for this number as
.         component 2 of PID-03.  If there is more than one alternate id for
.         the U/R, then don't populate the field as we have no way of knowing
.         which is the one we need to use.
.
          PACK      KEY31,PURNO,SP30,SP1
          CALL      RSPMAID1                     * position on U/R
GALID050  CALL      RKPMAID1                     * read next record
          BRANCH    OVRCD,GALID500
.
          MATCH     PURNO,PMAIURNO               * same U/R still ?
          GOTO      GALID500 IF NOT EQUAL        * yes
.
.         Valid id found for U/R.  If this is the first U/R, then save
.         the prefix
.
          ADD       ONE,COUNTER                  * increment counter
          IF        COUNTER = 1
            ENDSET    PMAIALID
            MOVE      PMAIALID,ANS
            RESET     PMAIALID
          ENDIF
          GOTO      GALID050                     * get next record
.
.         We have checked all the alternate id records for the U/R, so
.         see if we only have one record, and if so, load the prefix.
.
GALID500  IF        COUNTER = 1
            APPEND    ANS,PID003
          ENDIF
.
GALID999  RETURN
+
.******************************************************************************
.*                               GTUPI000          Called by: WRPID000        *
.*                   Get the alternate id UPI number for NSLHD                *
.******************************************************************************
GTUPI000  PACK      DIM20,SP70
          PACK      KEY5,ANSA,ANSI,SP70
          CALL      RDSCODE1
GTUPI100  CALL      RDKCODE1
          BRANCH    OVRCD,GTUPI999
.
          MATCH     "AI",TCODE
          GOTO      GTUPI999 IF NOT EQUAL        * category AI still ?
.
          MATCH     "U",TCINDC4
          GOTO      GTUPI100 IF NOT EQUAL        * find the code for type=UPI
.
          PACK      KEY31,PURNO,ACODE,SP70
          CALL      RSPMAID1                     * position on U/R
GTUPI150  CALL      RKPMAID1                     * read next record
          BRANCH    OVRCD,GTUPI999
.
          MATCH     PURNO,PMAIURNO               * same U/R still ?
          GOTO      GTUPI999 IF NOT EQUAL        * no
.
          MATCH     ACODE,PMAITYPE               * ID type = UPI ?
          GOTO      GTUPI999 IF NOT EQUAL        * no
.
          MOVE      PMAIALID,DIM20               * we have a UPI
.
GTUPI999  RETURN
+
.*****************************************************************************
.*                              SENDM000           Called by: Lots           *
.*             Send the message segment to Third Party receiver              *
.* Requires:  SEGSTRNG - the segment string to be sent                       *
.* Returns:   EXIT    0 = message sent ok                                    *
.*                    1 = connection lost, message not sent                  *
.*                    2 = timeout occurred                                   *
.*****************************************************************************
.
SENDM000  MOVELPTR  SEGSTRNG,STRNGLEN            * get string length
.
          IF        DISPFLAG = 1
            DISPLAY   "Sending [",SEGMENT,"] segment",*R,*N;
            MOVE      ZERO,COUNTR
            MOVE      STRNGLEN,FORM4
            DISPLAY   "Sending ",FORM4," bytes: (* = carriage return)",*R,*N;
            WHILE     FORM4 > 0
              ADD       ONE,COUNTR
              MATCH     CRETURN,SEGSTRNG
              IF        @EQUAL
                MOVE      ASK,ANS
              ELSE
                MOVE      SEGSTRNG,ANS
              ENDIF
              IF        COUNTR = 1
                DISPLAY   "[";
              ENDIF
              DISPLAY   *HON,ANS,*HOFF;
              IF        COUNTR = 70
                DISPLAY   "]",*R,*N;
                MOVE      ZERO,COUNTR
              ENDIF
              SUB       ONE,FORM4
              BUMP      SEGSTRNG
            DO
            DISPLAY     "]",*R,*N;
            RESET       SEGSTRNG
          ENDIF
.
          MATCH     "2",PTCNHL7L
          IF        @EQUAL
            MOVE      "Send ",ERORTEXT
            ENDSET    ERORTEXT
            APPEND    SEGMENT,ERORTEXT
            APPEND    " Start @ ",ERORTEXT
            RESET     ERORTEXT                   * log start segment time
          ENDIF
          MOVE      ONE,MLOGFLAG
          CALL      LOGM0000                     * write segment to log file
.
          MATCH     "2",IBCNUCIS
          GOTO      SENDM800 IF EQUAL            * using EDI only
.
.         Set TRAP for loss of connection then send segment
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF SIGPIPE                  * set trap
          WRITE     COMSOCKT,STRNGLEN,RPLYTIME;SEGSTRNG; * send segment
          TRAPCLR   SIGPIPE                              * clear trap
          GOTO      SENDM920 IF TIMEOUT                  * timeout expired
          BRANCH    OVRCD,SENDM910                       * connection lost
.
SENDM800  MATCH     "2",PTCNHL7L
          IF        @EQUAL
            MOVE      "Send ",ERORTEXT
            ENDSET    ERORTEXT
            APPEND    SEGMENT,ERORTEXT
            APPEND    " End   @ ",ERORTEXT
            APPEND    TIMSTAMP,ERORTEXT
            RESET     ERORTEXT
            WRITE     TEXTFILE,SEQ;*+,ERORTEXT   * log finish segment time
          ENDIF
.
          IF        DISPFLAG = 1
            DISPLAY   "[",SEGMENT,"] segment sent",*R,*N;
          ENDIF
.
.         If this is message receiver, then write the response to the
.         log file
.
          MATCH     "HL7QUERY",PRGID
          IF        @EQUAL
            WRITE     TEXTFILE,SEQ;*+,SEGSTRNG;
          ENDIF
.
          PACK      SEGSTRNG,SP100,SP100,SP100,SP100,SP100,SP100,SP100,SP100:
                             SP100,SP100,SP100,SP100,SP100,SP100,SP100,SP100:
                             SP100,SP100,SP100,SP100
          CLEAR     SEGSTRNG                     * clear segment string
          MOVE      ZERO,EXIT                    * sent ok
          GOTO      SENDM999
.
SENDM910  MOVE      ONE,EXIT
          GOTO      SENDM999
.
SENDM920  MOVE      TWO,EXIT
          GOTO      SENDM999
.
SENDM999  RETURN
+
.******************************************************************************
.*                               LNKPR000                                     *
.*           Get the linked practice & provider number for hcp                *
.******************************************************************************
LNKPR000  MATCH     "1",PTCNSLPD                 * sending linked practice?
          GOTO      LNKPR500 IF NOT EQUAL
.
          MATCH     SP70,LINKDHCG                * practice exists?
          GOTO      LNKPR500 IF EQUAL
.
          MATCH     SP70,LINKDHCP                * hcp exists?
          GOTO      LNKPR500 IF EQUAL
.
          PACK      KEY20,LINKDHCP,LINKDHCG,SP70
          CALL      RDPMHCL1
          BRANCH    OVRCD,LNKPR500               * link record exists?
.
          PACK      DIM10,PMHLPRV1,SP70
          MATCH     DIM10,SP70                   * provider number exists?
          GOTO      LNKPR500 IF EQUAL
.
          APPEND    TILDA,PV1008
          MOVE      DIM10,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1008
          APPEND    CARET,PV1008
          APPEND    DOCFNAME,PV1008
          APPEND    CARET,PV1008
          APPEND    CARET,PV1008
          MOVE      PROVIDER,DOCTORID            * load dr. id type
          STRIP     DOCTORID
          APPEND    DOCTORID,PV1008
          APPEND    ONE,PV1008                   * provider 1
          APPEND    TILDA,PV1008
          MOVE      PMHLHCPR,FIELDSTR            * practice code
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1008
          ENDSET    PV1008
          APPEND    CARET,PV1008
          APPEND    DOCFNAME,PV1008
          APPEND    CARET,PV1008
          APPEND    CARET,PV1008
          MOVE      "Practice",DOCTORID
          STRIP     DOCTORID
          APPEND    DOCTORID,PV1008
          GOTO      LNKPR999
.
.         Use original method to send hcp details
.
LNKPR500  MOVE      ZERO,FORM1               * initialise counter
          WHILE     FORM1 < 6
            APPEND    TILDA,PV1008
            ADD       ONE,FORM1              * increment counter
            LOAD      DIM10,FORM1,PMHCPRV1,PMHCPRV2,PMHCPRV3:
                                  PMHCPRV4,PMHCPRV5,PMHCNHSN
            MATCH     SP10,DIM10             * provider blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,PV1008
            ELSE
              MOVE      DIM10,FIELDSTR
              CALL      SPCHR000             * convert special characters
              APPEND    FIELDSTR,PV1008
            ENDIF
            APPEND    CARET,PV1008
            APPEND    DOCFNAME,PV1008
            APPEND    CARET,PV1008
            APPEND    CARET,PV1008
            IF        FORM1 = 6
              MOVE      PRESCRIB,DOCTORID  * load dr. id type
              STRIP     DOCTORID
              APPEND    DOCTORID,PV1008
            ELSE
              MOVE      PROVIDER,DOCTORID  * load dr. id type
              STRIP     DOCTORID
              APPEND    DOCTORID,PV1008
              APPEND    FORM1,PV1008
            ENDIF
          DO
.
LNKPR999  RETURN
+
.*****************************************************************************
.*                                ALVIS000         Called by: ADPV1000       *
.*      Check if there is an alternate visit number           OPV10000       *
.*      and if so, use it to populate PV1.50.                 EPV10000       *
.* Requires: VISNUMBR  Visit Number (webPAS)                  LPV10000       *
.* Returns:  PV1.50    Alternate Visit Number (Third Party)   TPV10000       *
.*****************************************************************************
.
ALVIS000  CALL      EPSVIS00                     * check for episoft visits
.
          MOVE      BLANKSTR,DIM20               * set default value
.
          MOVE      VISNUMBR,KEY8
          CALL      RDIBALV1                     * alternate visit record found?
          BRANCH    OVRCD,ALVIS050               * no
.
          MATCH     " 1",IBAVTYPE                * eReferral type record ?
          GOTO      ALVIS050 IF EQUAL            * yes - ignore record
.
          MOVE      IBAVAVIS,DIM20               * yes - load alt. visit no.
          STRIP     DIM20
.
ALVIS050  IF        PV150CNT = 0
            MOVE      DIM20,PV1050
            ENDSET    PV1050
          ELSE
            ENDSET    PV1050
            APPEND    TILDA,PV1050
            APPEND    DIM20,PV1050
          ENDIF
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          MATCH     " M",IBAVTYPE                * MOSAIQ type record ?
          IF        @EQUAL
            APPEND    "MOSAIQ",PV1050
          ELSE
            APPEND    "LEGACY",PV1050
          ENDIF
          APPEND    CARET,PV1050
          APPEND    ANSV,PV1050
          APPEND    ANSN,PV1050
          RESET     PV1050
.
          ADD       ONE,PV150CNT                 * increment PV1.50 count
.
ALVIS999  RETURN
+
.*****************************************************************************
.*                            GTOBR000             Called by: WRPID000       *
.*             Check if this patient has a time of birth                     *
.* Requires:  PURNO/PBDATE/PMPXUTM5 - from valid read of pmsqptaf/pmsqpxaf   *
.*            H7CIMESI - unique message id for this triggered event.         *
.* Returns:   PID007 - Patient Date/Time of Birth                            *
.*****************************************************************************
.         Send Time Of Birth (parameter based - TSK 0907196)
.
GTOBR000  MATCH     "1",PTCNTOFB
          GOTO      GTOBR999 IF NOT EQUAL        * sending time of birth ?
.
GTOBR500  MATCH     SP8,PMPXUTM5
          IF        @EQUAL
            MOVE      PBDATE,PID007              * set dob only
          ELSE
            UNPACK    PMPXUTM5,CHOUR,ANS,CMIN,ANS,CSEC
            PACK      PID007,PBDATE,CHOUR,CMIN,CSEC   * set date/time of birth
          ENDIF
.
GTOBR999  RETURN
+
.*****************************************************************************
.*                            GLINK000             Called by: WRPID000       *
.*             Check if this patient has a mother-child link                 *
.* Requires:  PURNO & PBDATE - from valid read of pmsqptaf.                  *
.*            H7CIMESI - unique message id for this triggered event.         *
.* Returns:   PID021 - Mother's identifier                                   *
.*****************************************************************************
.
GLINK000  MOVE      BLANKSTR,PID021              * default setting
          MOVE      PURNO,D8                     * save U/R
          MOVE      ONE,F1                       * don't re-read pmsqptaf
.
          PACK      KEY16,PURNO,SP20
          CALL      RDSLINK1                     * position on U/R
GLINK050  CALL      RDKLINK1                     * read next record
          BRANCH    OVRCD,GLINK900               * eof - finished
.
          MATCH     PURNO,LINKFUR                * same U/R still ?
          GOTO      GLINK900 IF NOT EQUAL        * no - finished
.
          MATCH     SP3,LINKREA                  * blank link reason ?
          GOTO      GLINK050 IF EQUAL            * yes - ignore record
.
          PACK      KEY5,ANSL,ANSU,LINKREA
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,GLINK050               * no - ignore record
.
          MATCH     ANSM,TCINDC1                 * mother-child link ?
          GOTO      GLINK050 IF NOT EQUAL        * no - ignore record
.
          MOVE      PBDATE,SAVEBDAT              * save current patient dob
          MOVE      LINKTUR,KEY8
          CALL      RDMAST1                      * PMI master record on file ?
          MOVE      ZERO,F1                      * re-read pmsqptaf
          BRANCH    OVRCD,GLINK050               * no - ignore record
.
          MATCH     ANSF,PSEX                    * female patient ?
          GOTO      GLINK050 IF NOT EQUAL        * no - ignore record
.
          MATCH     SAVEBDAT,PBDATE              * patient dob > linked dob ?
          GOTO      GLINK050 IF NOT LESS         * no - ignore record
.
.         We have a mother-child link, so load PID.21 with the mothers
.         identifier
.
          MOVE      PURNO,PID021
          SQUEEZE   PID021
          ENDSET    PID021
          APPEND    CARET,PID021
          APPEND    CARET,PID021
          APPEND    CARET,PID021
          APPEND    CARET,PID021
          APPEND    "MR",PID021
          RESET      PID021
.
.         Re-read the patient holding file to restore PMI details
.
GLINK900  BRANCH    F1,GLINK999
.
          MATCH     "HL7QUERY",PRGID
          IF        @EQUAL
            MOVE      D8,KEY8                    * restore U/R master details
            CALL      RDMAST1
          ELSE
            MOVE      H7CIMESI,KEY20             * restore U/R holding details
            CALL      RDPMQPT1
          ENDIF
.
GLINK999  RETURN
+
.*****************************************************************************
.*                           WRZXP000           Called by: all message types *
.*                  Write Extra PMI details segment                          *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WRZXP000  MOVE      "ZXP",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZXP] segment",*R,*N;
          ENDIF
.
.         Note:  ZXP fields are cleared with the PID fields in WRPID000
.
.         Note:  ZXP001 - Pension No. Expiry Date has already been loaded
.                         as part of PID processing.
          STRIP     ZXP001
.
.         Load Medicare Expiry Date
.
          MATCH     SP6,PMPXMEDC                 * medicare expiry date blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,ZXP002            * yes
          ELSE
            MOVE      PMPXMEDC,ZXP002            * no
          ENDIF
.
.         Load Death Notification if patient is deceased
          MOVE      BLANKSTR,ZXP003              * default to blank
          COMPARE   ONE,PCEASE                   * patient deceased ?
          GOTO      WRZXP100 IF NOT EQUAL        * no
.
          MATCH     SP3,PMPXDETY                 * field populated ?
          GOTO      WRZXP100 IF EQUAL            * no
.
          MOVE      PMPXDETY,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP003
          ENDSET    ZXP003
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSD,ANSY,PMPXDETY
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP003
          APPEND    FIELDSTR,ZXP003
          APPEND    CARET,ZXP003
          APPEND    "webPAS",ZXP003
          RESET     ZXP003
.
.         Load Privacy Indicator
.
WRZXP100  MATCH     SP3,PMPXPRVI
          IF        @EQUAL
            MOVE      BLANKSTR,ZXP004
            GOTO      WRZXP200
          ENDIF
.
          MOVE      PMPXPRVI,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP004
          ENDSET    ZXP004
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSP,ANSV,PMPXPRVI
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP004
          APPEND    FIELDSTR,ZXP004
          APPEND    CARET,ZXP004
          APPEND    "webPAS",ZXP004
          RESET     ZXP004
.
.         Note:  ZXP005 - DVA Expiry Date has already been loaded
.                         as part of PID processing.
          STRIP     ZXP005
.
.         Note:  ZXP006 - Safety Net Expiry Date has already been loaded
.                         as part of PID processing.
          STRIP     ZXP006
.
.         Load the Local GP/Practice details for all messages sending ZXP.
.         First, load HCP Code (ZXP.7)
.
WRZXP200  MOVE      BLANKSTR,ZXP007              * set HCP default values
          MOVE      BLANKSTR,ZXP008
          MOVE      BLANKSTR,ZXP009
          MOVE      BLANKSTR,ZXP010
          MOVE      BLANKSTR,ZXP011
          MOVE      BLANKSTR,ZXP012
          MOVE      BLANKSTR,ZXP013
          MOVE      BLANKSTR,ZXP014
          MOVE      BLANKSTR,ZXP015
.
          MATCH     SP10,PMPXRHC1                * blank HCP ?
          GOTO      WRZXP300 IF EQUAL            * yes
.
          MOVE      PMPXRHC1,FIELDSTR            * load HCP code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP007
          ENDSET    ZXP007
          APPEND    CARET,ZXP007
.
.         Load HCP Name (ZXP.7)
.
          MOVE      PMPXRHC1,KEY10
          CALL      RDPMHCP1                     * doctor on file ?
          IF        OVRCD = 1
            APPEND    "Unknown HCP^^^^^^webPAS",ZXP007   * no
            RESET     ZXP007
            GOTO      WRZXP300
          ENDIF
.
.         The HCP code is valid
.
          MOVE      PMHCSNAM,FIELDSTR            * load HCP name
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXP007
          APPEND    CARET,ZXP007
.
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXP007
          APPEND    CARET,ZXP007
          APPEND    CARET,ZXP007
          APPEND    CARET,ZXP007
          MATCH     SP10,PMHCTITL
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP007
          ELSE
            MOVE      PMHCTITL,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP007
          ENDIF
          APPEND    CARET,ZXP007
          APPEND    CARET,ZXP007
          APPEND    "webPAS",ZXP007
          RESET     ZXP007
.
.         Load HCP Surgery Address (ZXP.8)
.
          MATCH     PMHCADR1,SP70                * blank surg. address line 1 ?
          GOTO      WRZXP220 IF EQUAL            * yes
.
          MOVE      PMHCADR1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP008
          ENDSET    ZXP008
          APPEND    CARET,ZXP008
.
          MATCH     PMHCADR2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP008
          ELSE
            MOVE      PMHCADR2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP008
          ENDIF
          APPEND    CARET,ZXP008
.
          MATCH     PMHCADR3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP008
          ELSE
            MOVE      PMHCADR3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP008
          ENDIF
          APPEND    CARET,ZXP008
.
          MATCH     PMHCADR4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP008
          ELSE
            MOVE      PMHCADR4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP008
          ENDIF
          APPEND    CARET,ZXP008
.
          MATCH     PMHCPOST,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP008
          ELSE
            MOVE      PMHCPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP008
          ENDIF
          RESET     ZXP008
.
.         Load Provider Number (ZXP.9)
.
WRZXP220  MATCH     SP10,PMHCPRV1                * blank provider ?
          GOTO      WRZXP230 IF EQUAL            * yes
.
          MOVE      PMHCPRV1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP009
.
.         Load Surgery Email Address (ZXP.10)
.
WRZXP230  MATCH     SP10,PMHCSEML                * blank email address ?
          GOTO      WRZXP240 IF EQUAL            * yes
.
          MOVE      PMHCSEML,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP010
.
.         Load Mobile Phone (ZXP.11)
.
WRZXP240  MATCH     SP20,PMHCMOBN                * blank mobile phone # ?
          GOTO      WRZXP250 IF EQUAL            * yes
.
          MOVE      PMHCMOBN,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP011
.
.         Load Home Phone (ZXP.12)
.
WRZXP250  MATCH     SP20,PMHCHTEL                * blank home phone # ?
          GOTO      WRZXP260 IF EQUAL            * yes
.
          MOVE      PMHCHTEL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP012
.
.         Load Fax Number (ZXP.13)
.
WRZXP260  MATCH     SP20,PMHCFAXN                * blank fax # ?
          GOTO      WRZXP270 IF EQUAL            * yes
.
          MOVE      PMHCFAXN,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP013
.
.         Load Office Phone (ZXP.14)
.
WRZXP270  MATCH     SP20,PMHCSTEL                * blank office phone # ?
          GOTO      WRZXP280 IF EQUAL            * yes
.
          MOVE      PMHCSTEL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP014
.
.         Load Pager Phone (ZXP.15)
.
WRZXP280  MATCH     SP20,PMHCPAGR                * blank office phone # ?
          GOTO      WRZXP300 IF EQUAL            * yes
.
          MOVE      PMHCPAGR,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP015
.
.         Load HCP Practice and Count Details (ZXP.16/ZXP.17)
.
WRZXP300  MOVE      BLANKSTR,ZXP016              * initialise practice fields
          MOVE      BLANKSTR,ZXP017
          MOVE      BLANKSTR,ZXP018
          MOVE      BLANKSTR,ZXP019
          MOVE      BLANKSTR,ZXP020
          MOVE      BLANKSTR,ZXP021
.
          PACK      DIM10,PMPXRH1G,SP70
          MATCH     SP10,DIM10                   * blank HCP Practice ?
          GOTO      WRZXP340 IF EQUAL            * yes
.
          MOVE      PMPXRH1G,FIELDSTR            * load HCP practice
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP016
          ENDSET    ZXP016
          APPEND    CARET,ZXP016
.
          MOVE      PMPXR1GC,ZXP017
          SQUEEZE   ZXP017
.
          PACK      KEY12,PMPXRH1G,PMPXR1GC
          CALL      RDPMHCG1                     * practice on file ?
          IF        OVRCD = 1
            APPEND    "Unknown PracticeCount^webPAS",ZXP016
            RESET     ZXP016
            GOTO      WRZXP340
          ENDIF
.
.         The HCP Practice code is valid
.
          MATCH     PMHGPNAM,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP016
          ELSE
            MOVE      PMHGPNAM,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP016
          ENDIF
          APPEND    CARET,ZXP016
.
          APPEND    "webPAS",ZXP016
          RESET     ZXP016
.
.         Load Practice Address (ZXP.18)
.
          MATCH     PMHGADD1,SP70                * blank prac. address line 1 ?
          GOTO      WRZXP310 IF EQUAL            * yes
.
          MOVE      PMHGADD1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP018
          ENDSET    ZXP018
          APPEND    CARET,ZXP018
.
          MATCH     PMHGADD2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP018
          ELSE
            MOVE      PMHGADD2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP018
          ENDIF
          APPEND    CARET,ZXP018
.
          MATCH     PMHGADD3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP018
          ELSE
            MOVE      PMHGADD3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP018
          ENDIF
          APPEND    CARET,ZXP018
.
          MATCH     PMHGADD4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP018
          ELSE
            MOVE      PMHGADD4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP018
          ENDIF
          APPEND    CARET,ZXP018
.
          MATCH     PMHGPOST,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP018
          ELSE
            MOVE      PMHGPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP018
          ENDIF
          RESET     ZXP018
.
.         Load Practice Phone (ZXP.19)
.
WRZXP310  MATCH     SP20,PMHGPTEL                * blank practice phone # ?
          GOTO      WRZXP320 IF EQUAL            * yes
.
          MOVE      PMHGPTEL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP019
.
.         Load Practice Fax (ZXP.20)
.
WRZXP320  MATCH     SP20,PMHGPFAX                * blank practice fax # ?
          GOTO      WRZXP330 IF EQUAL            * yes
.
          MOVE      PMHGPFAX,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP020
.
.         Load Practice Email (ZXP.21)
.
WRZXP330  MATCH     SP20,PMHGPEML                * blank practice fax # ?
          GOTO      WRZXP340 IF EQUAL            * yes
.
          MOVE      PMHGPEML,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP021
.
.         Preferred method of Contact (ZXP.22)
.
WRZXP340  MOVE      BLANKSTR,ZXP022              * set default value
.
          MATCH     SP3,PMPXPMCN                 * field populated ?
          GOTO      WRZXP350 IF EQUAL            * no
.
          MOVE      PMPXPMCN,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP022
          ENDSET    ZXP022
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATPn,PMPXPMCN
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP022
          APPEND    FIELDSTR,ZXP022
          APPEND    CARET,ZXP022
          APPEND    "webPAS",ZXP022
          RESET     ZXP022
.
.         Preferred method of Correspondence (ZXP.23)
.
WRZXP350  MOVE      BLANKSTR,ZXP023              * set default value
.
          MATCH     SP3,PMPXPMCR                 * field populated ?
          GOTO      WRZXP360 IF EQUAL            * no
.
          MOVE      PMPXPMCR,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP023
          ENDSET    ZXP023
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATPr,PMPXPMCR
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP023
          APPEND    FIELDSTR,ZXP023
          APPEND    CARET,ZXP023
          APPEND    "webPAS",ZXP023
          RESET     ZXP023
.
.         Consent for Info Release for Local GP (ZXP.24)
.
WRZXP360  MOVE      ANSU,ZXP024              * set default value to Unknown
          MATCH     "0",PMPXCRIN
          IF        @EQUAL
            MOVE      ANSN,ZXP024            * set to No
          ENDIF
          MATCH     "1",PMPXCRIN
          IF        @EQUAL
            MOVE      ANSY,ZXP024            * set to Yes
          ENDIF
.
.         Load the Second GP/Practice details for all messages sending ZXP.
.         First, load HCP Code (ZXP.25)
.
WRZXP370  MOVE      BLANKSTR,ZXP025              * set HCP default values
          MOVE      BLANKSTR,ZXP026
          MOVE      BLANKSTR,ZXP027
          MOVE      BLANKSTR,ZXP028
          MOVE      BLANKSTR,ZXP029
          MOVE      BLANKSTR,ZXP030
          MOVE      BLANKSTR,ZXP031
          MOVE      BLANKSTR,ZXP032
          MOVE      BLANKSTR,ZXP033
.
          MATCH     SP10,PTMAHCP1                * blank HCP ?
          GOTO      WRZXP450 IF EQUAL            * yes
.
          MOVE      PTMAHCP1,FIELDSTR            * load HCP code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP025
          ENDSET    ZXP025
          APPEND    CARET,ZXP025
.
.         Load HCP Name (ZXP.25)
.
          MOVE      PTMAHCP1,KEY10
          CALL      RDPMHCP1                     * doctor on file ?
          IF        OVRCD = 1
            APPEND    "Unknown HCP^^^^^^webPAS",ZXP025   * no
            RESET     ZXP025
            GOTO      WRZXP450
          ENDIF
.
.         The HCP code is valid
.
          MOVE      PMHCSNAM,FIELDSTR            * load HCP name
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXP025
          APPEND    CARET,ZXP025
.
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXP025
          APPEND    CARET,ZXP025
          APPEND    CARET,ZXP025
          APPEND    CARET,ZXP025
          MATCH     SP10,PMHCTITL
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP025
          ELSE
            MOVE      PMHCTITL,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP025
          ENDIF
          APPEND    CARET,ZXP025
          APPEND    CARET,ZXP025
          APPEND    "webPAS",ZXP025
          RESET     ZXP025
.
.         Load HCP Surgery Address (ZXP.26)
.
          MATCH     PMHCADR1,SP70                * blank surg. address line 1 ?
          GOTO      WRZXP380 IF EQUAL            * yes
.
          MOVE      PMHCADR1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP026
          ENDSET    ZXP026
          APPEND    CARET,ZXP026
.
          MATCH     PMHCADR2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP026
          ELSE
            MOVE      PMHCADR2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP026
          ENDIF
          APPEND    CARET,ZXP026
.
          MATCH     PMHCADR3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP026
          ELSE
            MOVE      PMHCADR3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP026
          ENDIF
          APPEND    CARET,ZXP026
.
          MATCH     PMHCADR4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP026
          ELSE
            MOVE      PMHCADR4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP026
          ENDIF
          APPEND    CARET,ZXP026
.
          MATCH     PMHCPOST,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP026
          ELSE
            MOVE      PMHCPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP026
          ENDIF
          RESET     ZXP026
.
.         Load Provider Number (ZXP.27)
.
WRZXP380  MATCH     SP10,PMHCPRV1                * blank provider ?
          GOTO      WRZXP390 IF EQUAL            * yes
.
          MOVE      PMHCPRV1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP027
.
.         Load Surgery Email Address (ZXP.28)
.
WRZXP390  MATCH     SP10,PMHCSEML                * blank email address ?
          GOTO      WRZXP400 IF EQUAL            * yes
.
          MOVE      PMHCSEML,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP028
.
.         Load Mobile Phone (ZXP.29)
.
WRZXP400  MATCH     SP20,PMHCMOBN                * blank mobile phone # ?
          GOTO      WRZXP410 IF EQUAL            * yes
.
          MOVE      PMHCMOBN,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP029
.
.         Load Home Phone (ZXP.30)
.
WRZXP410  MATCH     SP20,PMHCHTEL                * blank home phone # ?
          GOTO      WRZXP420 IF EQUAL            * yes
.
          MOVE      PMHCHTEL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP030
.
.         Load Fax Number (ZXP.31)
.
WRZXP420  MATCH     SP20,PMHCFAXN                * blank fax # ?
          GOTO      WRZXP430 IF EQUAL            * yes
.
          MOVE      PMHCFAXN,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP031
.
.         Load Office Phone (ZXP.32)
.
WRZXP430  MATCH     SP20,PMHCSTEL                * blank office phone # ?
          GOTO      WRZXP440 IF EQUAL            * yes
.
          MOVE      PMHCSTEL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP032
.
.         Load Pager Phone (ZXP.33)
.
WRZXP440  MATCH     SP20,PMHCPAGR                * blank office phone # ?
          GOTO      WRZXP450 IF EQUAL            * yes
.
          MOVE      PMHCPAGR,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP033
.
.         Load HCP Practice and Count Details (ZXP.34/ZXP.35)
.
WRZXP450  MOVE      BLANKSTR,ZXP034              * initialise practice fields
          MOVE      BLANKSTR,ZXP035
          MOVE      BLANKSTR,ZXP036
          MOVE      BLANKSTR,ZXP037
          MOVE      BLANKSTR,ZXP038
          MOVE      BLANKSTR,ZXP039
.
          PACK      DIM10,PTMAHCL1,SP70
          MATCH     SP10,DIM10                   * blank HCP Practice ?
          GOTO      WRZXP490 IF EQUAL            * yes
.
          MOVE      PTMAHCL1,FIELDSTR            * load HCP practice
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP034
          ENDSET    ZXP034
          APPEND    CARET,ZXP034
.
          MOVE      PTMAHCG1,ZXP035
          SQUEEZE   ZXP035
.
          PACK      KEY12,PTMAHCL1,PTMAHCG1
          CALL      RDPMHCG1                     * practice on file ?
          IF        OVRCD = 1
            APPEND    "Unknown PracticeCount^webPAS",ZXP034
            RESET     ZXP034
            GOTO      WRZXP490
          ENDIF
.
.         The HCP Practice code is valid
.
          MATCH     PMHGPNAM,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP034
          ELSE
            MOVE      PMHGPNAM,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP034
          ENDIF
          APPEND    CARET,ZXP034
.
          APPEND    "webPAS",ZXP034
          RESET     ZXP034
.
.         Load Practice Address (ZXP.36)
.
          MATCH     PMHGADD1,SP70                * blank prac. address line 1 ?
          GOTO      WRZXP460 IF EQUAL            * yes
.
          MOVE      PMHGADD1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP036
          ENDSET    ZXP036
          APPEND    CARET,ZXP036
.
          MATCH     PMHGADD2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP036
          ELSE
            MOVE      PMHGADD2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP036
          ENDIF
          APPEND    CARET,ZXP036
.
          MATCH     PMHGADD3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP036
          ELSE
            MOVE      PMHGADD3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP036
          ENDIF
          APPEND    CARET,ZXP036
.
          MATCH     PMHGADD4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP036
          ELSE
            MOVE      PMHGADD4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP036
          ENDIF
          APPEND    CARET,ZXP036
.
          MATCH     PMHGPOST,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP036
          ELSE
            MOVE      PMHGPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP036
          ENDIF
          RESET     ZXP036
.
.         Load Practice Phone (ZXP.37)
.
WRZXP460  MATCH     SP20,PMHGPTEL                * blank practice phone # ?
          GOTO      WRZXP470 IF EQUAL            * yes
.
          MOVE      PMHGPTEL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP037
.
.         Load Practice Fax (ZXP.38)
.
WRZXP470  MATCH     SP20,PMHGPFAX                * blank practice fax # ?
          GOTO      WRZXP480 IF EQUAL            * yes
.
          MOVE      PMHGPFAX,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP038
.
.         Load Practice Email (ZXP.39)
.
WRZXP480  MATCH     SP20,PMHGPEML                * blank practice fax # ?
          GOTO      WRZXP490 IF EQUAL            * yes
.
          MOVE      PMHGPEML,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP039
.
.         Consent for Info Release for HCP (ZXP.40)
.
WRZXP490  MOVE      ANSU,ZXP040              * set default value to Unknown
          MATCH     "0",PMPXCRN1
          IF        @EQUAL
            MOVE      ANSN,ZXP040            * set to No
          ENDIF
          MATCH     "1",PMPXCRN1
          IF        @EQUAL
            MOVE      ANSY,ZXP040            * set to Yes
          ENDIF
.
.         Load the Third GP/Practice details for all messages sending ZXP.
.         First, load HCP Code (ZXP.41)
.
WRZXP500  MOVE      BLANKSTR,ZXP041              * set HCP default values
          MOVE      BLANKSTR,ZXP042
          MOVE      BLANKSTR,ZXP043
          MOVE      BLANKSTR,ZXP044
          MOVE      BLANKSTR,ZXP045
          MOVE      BLANKSTR,ZXP046
          MOVE      BLANKSTR,ZXP047
          MOVE      BLANKSTR,ZXP048
          MOVE      BLANKSTR,ZXP049
.
          MATCH     SP10,PTMAHCP2                * blank HCP ?
          GOTO      WRZXP580 IF EQUAL            * yes
.
          MOVE      PTMAHCP2,FIELDSTR            * load HCP code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP041
          ENDSET    ZXP041
          APPEND    CARET,ZXP041
.
.         Load HCP Name (ZXP.41)
.
          MOVE      PTMAHCP2,KEY10
          CALL      RDPMHCP1                     * doctor on file ?
          IF        OVRCD = 1
            APPEND    "Unknown HCP^^^^^^webPAS",ZXP041   * no
            RESET     ZXP041
            GOTO      WRZXP580
          ENDIF
.
.         The HCP code is valid
.
          MOVE      PMHCSNAM,FIELDSTR            * load HCP name
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXP041
          APPEND    CARET,ZXP041
.
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZXP041
          APPEND    CARET,ZXP041
          APPEND    CARET,ZXP041
          APPEND    CARET,ZXP041
          MATCH     SP10,PMHCTITL
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP041
          ELSE
            MOVE      PMHCTITL,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP041
          ENDIF
          APPEND    CARET,ZXP041
          APPEND    CARET,ZXP041
          APPEND    "webPAS",ZXP041
          RESET     ZXP041
.
.         Load HCP Surgery Address (ZXP.42)
.
          MATCH     PMHCADR1,SP70                * blank surg. address line 1 ?
          GOTO      WRZXP510 IF EQUAL            * yes
.
          MOVE      PMHCADR1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP042
          ENDSET    ZXP042
          APPEND    CARET,ZXP042
.
          MATCH     PMHCADR2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP042
          ELSE
            MOVE      PMHCADR2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP042
          ENDIF
          APPEND    CARET,ZXP042
.
          MATCH     PMHCADR3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP042
          ELSE
            MOVE      PMHCADR3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP042
          ENDIF
          APPEND    CARET,ZXP042
.
          MATCH     PMHCADR4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP042
          ELSE
            MOVE      PMHCADR4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP042
          ENDIF
          APPEND    CARET,ZXP042
.
          MATCH     PMHCPOST,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP042
          ELSE
            MOVE      PMHCPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP042
          ENDIF
          RESET     ZXP042
.
.         Load Provider Number (ZXP.43)
.
WRZXP510  MATCH     SP10,PMHCPRV1                * blank provider ?
          GOTO      WRZXP520 IF EQUAL            * yes
.
          MOVE      PMHCPRV1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP043
.
.         Load Surgery Email Address (ZXP.44)
.
WRZXP520  MATCH     SP10,PMHCSEML                * blank email address ?
          GOTO      WRZXP530 IF EQUAL            * yes
.
          MOVE      PMHCSEML,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP044
.
.         Load Mobile Phone (ZXP.45)
.
WRZXP530  MATCH     SP20,PMHCMOBN                * blank mobile phone # ?
          GOTO      WRZXP540 IF EQUAL            * yes
.
          MOVE      PMHCMOBN,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP045
.
.         Load Home Phone (ZXP.46)
.
WRZXP540  MATCH     SP20,PMHCHTEL                * blank home phone # ?
          GOTO      WRZXP550 IF EQUAL            * yes
.
          MOVE      PMHCHTEL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP046
.
.         Load Fax Number (ZXP.47)
.
WRZXP550  MATCH     SP20,PMHCFAXN                * blank fax # ?
          GOTO      WRZXP560 IF EQUAL            * yes
.
          MOVE      PMHCFAXN,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP047
.
.         Load Office Phone (ZXP.48)
.
WRZXP560  MATCH     SP20,PMHCSTEL                * blank office phone # ?
          GOTO      WRZXP570 IF EQUAL            * yes
.
          MOVE      PMHCSTEL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP048
.
.         Load Pager Phone (ZXP.49)
.
WRZXP570  MATCH     SP20,PMHCPAGR                * blank office phone # ?
          GOTO      WRZXP580 IF EQUAL            * yes
.
          MOVE      PMHCPAGR,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP049
.
.         Load HCP Practice and Count Details (ZXP.50/ZXP.51)
.
WRZXP580  MOVE      BLANKSTR,ZXP050              * initialise practice fields
          MOVE      BLANKSTR,ZXP051
          MOVE      BLANKSTR,ZXP052
          MOVE      BLANKSTR,ZXP053
          MOVE      BLANKSTR,ZXP054
          MOVE      BLANKSTR,ZXP055
.
          PACK      DIM10,PTMAHCL2,SP70
          MATCH     SP10,DIM10                   * blank HCP Practice ?
          GOTO      WRZXP620 IF EQUAL            * yes
.
          MOVE      PTMAHCL2,FIELDSTR            * load HCP practice
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP050
          ENDSET    ZXP050
          APPEND    CARET,ZXP050
.
          MOVE      PTMAHCG2,ZXP051
          SQUEEZE   ZXP051
.
          PACK      KEY12,PTMAHCL2,PTMAHCG2
          CALL      RDPMHCG1                     * practice on file ?
          IF        OVRCD = 1
            APPEND    "Unknown PracticeCount^webPAS",ZXP050
            RESET     ZXP050
            GOTO      WRZXP620
          ENDIF
.
.         The HCP Practice code is valid
.
          MATCH     PMHGPNAM,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP050
          ELSE
            MOVE      PMHGPNAM,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP050
          ENDIF
          APPEND    CARET,ZXP050
.
          APPEND    "webPAS",ZXP050
          RESET     ZXP050
.
.         Load Practice Address (ZXP.52)
.
          MATCH     PMHGADD1,SP70                * blank prac. address line 1 ?
          GOTO      WRZXP590 IF EQUAL            * yes
.
          MOVE      PMHGADD1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP052
          ENDSET    ZXP052
          APPEND    CARET,ZXP052
.
          MATCH     PMHGADD2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP052
          ELSE
            MOVE      PMHGADD2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP052
          ENDIF
          APPEND    CARET,ZXP052
.
          MATCH     PMHGADD3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP052
          ELSE
            MOVE      PMHGADD3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP052
          ENDIF
          APPEND    CARET,ZXP052
.
          MATCH     PMHGADD4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP052
          ELSE
            MOVE      PMHGADD4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP052
          ENDIF
          APPEND    CARET,ZXP052
.
          MATCH     PMHGPOST,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZXP052
          ELSE
            MOVE      PMHGPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZXP052
          ENDIF
          RESET     ZXP052
.
.         Load Practice Phone (ZXP.53)
.
WRZXP590  MATCH     SP20,PMHGPTEL                * blank practice phone # ?
          GOTO      WRZXP600 IF EQUAL            * yes
.
          MOVE      PMHGPTEL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP053
.
.         Load Practice Fax (ZXP.54)
.
WRZXP600  MATCH     SP20,PMHGPFAX                * blank practice fax # ?
          GOTO      WRZXP610 IF EQUAL            * yes
.
          MOVE      PMHGPFAX,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP054
.
.         Load Practice Email (ZXP.55)
.
WRZXP610  MATCH     SP20,PMHGPEML                * blank practice fax # ?
          GOTO      WRZXP620 IF EQUAL            * yes
.
          MOVE      PMHGPEML,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP055
.
.         Consent for Info Release for HCP (ZXP.56)
.
WRZXP620  MOVE      ANSU,ZXP056              * set default value to Unknown
          MATCH     "0",PMPXCRN2
          IF        @EQUAL
            MOVE      ANSN,ZXP056            * set to No
          ENDIF
          MATCH     "1",PMPXCRN2
          IF        @EQUAL
            MOVE      ANSY,ZXP056            * set to Yes
          ENDIF
.
.         Note:  ZXP057 - Chemotherapy Card Expiry Date has already been loaded
.                         as part of PID processing.
          STRIP     ZXP057
.
.         PCEHR Flag (Advertised MyHR icon) (ZXP.58)
.
          MATCH     SP1,PMPXSN10                 * blank ?
          IF        @EQUAL
            MOVE      "0",ZXP058                 * yes
          ELSE
            MOVE      PMPXSN10,ZXP058            * no
          ENDIF
.
.         Unknown/Estimated Date of Death Flag (ZXP.59)
.
          MATCH     SP1,PTMAUKDD                 * blank ?
          IF        !@EQUAL
            MOVE      PTMAUKDD,ZXP059            * no
          ENDIF
.
.         Note:  ZXP060 - NDIS Card Expiry Date has already been loaded
.                         as part of PID processing.
          STRIP     ZXP060
.
.         Folder Selection (ZXP.61)
.
WRZXP630  MOVE      BLANKSTR,ZXP061              * set default value
.
          MATCH     SP3,PMPXFLDR                 * field populated ?
          GOTO      WRZXP640 IF EQUAL            * no
.
          MOVE      PMPXFLDR,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP061
          ENDSET    ZXP061
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSF,ANSS,PMPXFLDR
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP061
          APPEND    FIELDSTR,ZXP061
          APPEND    CARET,ZXP061
          APPEND    "webPAS",ZXP061
          RESET     ZXP061
.
.         PMI User Defined Y/N Field 2 (ZXP.62)
.
WRZXP640  IF        PUYN2 = 1
            MOVE      ANSN,ZXP062                * set to No
          ENDIF
          IF        PUYN2 = 2
            MOVE      ANSY,ZXP062                * set to Yes
          ENDIF
.
.         Verified Address Flag (ZXP.63)
.
          MATCH     SP1,PMPXSN19                 * field populated ?
          GOTO      WRZXP650 IF EQUAL            * no
.
          MOVE      PMPXSN19,ZXP063              * send value
.
.         PMI User Defined Field 1 (ZXP.64)
.
WRZXP650  MOVE      BLANKSTR,ZXP064              * set default value
.
          MATCH     SP3,PUSR1                    * field populated ?
          GOTO      WRZXP660 IF EQUAL            * no
.
          MOVE      PUSR1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP064
          ENDSET    ZXP064
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSP,ONE,PUSR1
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP064
          APPEND    FIELDSTR,ZXP064
          APPEND    CARET,ZXP064
          APPEND    "webPAS",ZXP064
          RESET     ZXP064
.
.         PMI User Defined Field 2 (ZXP.65)
.
WRZXP660  MOVE      BLANKSTR,ZXP065              * set default value
.
          MATCH     SP3,PUSR2                    * field populated ?
          GOTO      WRZXP670 IF EQUAL            * no
.
          MOVE      PUSR2,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP065
          ENDSET    ZXP065
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSP,TWO,PUSR2
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP065
          APPEND    FIELDSTR,ZXP065
          APPEND    CARET,ZXP065
          APPEND    "webPAS",ZXP065
          RESET     ZXP065
.
.         PMI User Defined Field 3 (ZXP.66)
.
WRZXP670  MOVE      BLANKSTR,ZXP066              * set default value
.
          MATCH     SP3,PUSR3                    * field populated ?
          GOTO      WRZXP680 IF EQUAL            * no
.
          MOVE      PUSR3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP066
          ENDSET    ZXP066
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSP,THREE,PUSR3
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP066
          APPEND    FIELDSTR,ZXP066
          APPEND    CARET,ZXP066
          APPEND    "webPAS",ZXP066
          RESET     ZXP066
.
.         PMI User Defined Field 4 (ZXP.67)
.
WRZXP680  MOVE      BLANKSTR,ZXP067              * set default value
.
          MATCH     SP3,PUSR4                    * field populated ?
          GOTO      WRZXP690 IF EQUAL            * no
.
          MOVE      PUSR4,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP067
          ENDSET    ZXP067
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSP,FOUR,PUSR4
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP067
          APPEND    FIELDSTR,ZXP067
          APPEND    CARET,ZXP067
          APPEND    "webPAS",ZXP067
          RESET     ZXP067
.
.         PMI User Defined Field 5 (ZXP.68)
.
WRZXP690  MOVE      BLANKSTR,ZXP068              * set default value
.
          MATCH     SP3,PUSR5                    * field populated ?
          GOTO      WRZXP700 IF EQUAL            * no
.
          MOVE      PUSR5,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP068
          ENDSET    ZXP068
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSP,FIVE,PUSR5
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP068
          APPEND    FIELDSTR,ZXP068
          APPEND    CARET,ZXP068
          APPEND    "webPAS",ZXP068
          RESET     ZXP068
.
.         Mutliple Birth Type of Birth (ZXP.69)
.
WRZXP700  MOVE      BLANKSTR,ZXP069              * set default value
.
          MATCH     SP3,MULTBTYP                 * field populated ?
          GOTO      WRZXP710 IF EQUAL            * no
.
          MOVE      MULTBTYP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP069
          ENDSET    ZXP069
.
          MOVE      "Unknown Code",FIELDSTR
          MOVE      "mX",D2
          PACK      KEY5,D2,MULTBTYP
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP069
          APPEND    FIELDSTR,ZXP069
          APPEND    CARET,ZXP069
          APPEND    "webPAS",ZXP069
          RESET     ZXP069
.
.         Identifying Gender (ZXP.70)
.
WRZXP710  MOVE      BLANKSTR,ZXP070              * set default value
.
          MATCH     SP3,PMPXUCC4                 * field populated ?
          GOTO      WRZXP720 IF EQUAL            * no
.
          MOVE      PMPXUCC4,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP070
          ENDSET    ZXP070
.
          MOVE      "Unknown Code",FIELDSTR
          MOVE      "Gi",D2
          PACK      KEY5,D2,PMPXUCC4
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      PTCDLDES,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP070
          APPEND    FIELDSTR,ZXP070
          APPEND    CARET,ZXP070
          APPEND    "webPAS",ZXP070
          RESET     ZXP070
.
.         Identifying Pronoun (ZXP.71)
.
WRZXP720  MOVE      BLANKSTR,ZXP071              * set default value
.
          MATCH     SP3,PMPXUCC5                 * field populated ?
          GOTO      WRZXP730 IF EQUAL            * no
.
          MOVE      PMPXUCC5,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP071
          ENDSET    ZXP071
.
          MOVE      "Unknown Code",FIELDSTR
          MOVE      "Gp",D2
          PACK      KEY5,D2,PMPXUCC5
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      PTCDLDES,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXP071
          APPEND    FIELDSTR,ZXP071
          APPEND    CARET,ZXP071
          APPEND    "webPAS",ZXP071
          RESET     ZXP071
.
.         Ancestry / Ethnicity 1 (ZXP.72)
.
WRZXP730  MOVE      BLANKSTR,ZXP072              * set default value
.
          MATCH     SP3,PMPXETH1                 * field populated ?
          GOTO      WRZXP740 IF EQUAL            * no
.
          MOVE      PMPXETH1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP072
          ENDSET    ZXP072
.
          MOVE      SP4,D4
          MOVE      "Unknown Code",FIELDSTR
          MOVE      "EN",D2
          PACK      KEY5,D2,PMPXETH1
          CALL      RDCODE1
          BRANCH    OVRCD,WRZXP735
.
          MOVE      THCSCOD,FIELDSTR             * hdp value
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,D4
.
          MOVE      PTCDLDES,FIELDSTR            * long description
          CALL      SPCHR000                     * convert special characters
.
WRZXP735  APPEND    CARET,ZXP072
          STRIP     D4
          APPEND    D4,ZXP072
          APPEND    " - ",ZXP072
          APPEND    FIELDSTR,ZXP072
          APPEND    CARET,ZXP072
          APPEND    "webPAS",ZXP072
          RESET     ZXP072
.
.         Ancestry / Ethnicity 2 (ZXP.73)
.
WRZXP740  MOVE      BLANKSTR,ZXP073              * set default value
.
          MATCH     SP3,PMPXETH2                 * field populated ?
          GOTO      WRZXP750 IF EQUAL            * no
.
          MOVE      PMPXETH2,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP073
          ENDSET    ZXP073
.
          MOVE      SP4,D4
          MOVE      "Unknown Code",FIELDSTR
          MOVE      "EN",D2
          PACK      KEY5,D2,PMPXETH2
          CALL      RDCODE1
          BRANCH    OVRCD,WRZXP745
.
          MOVE      THCSCOD,FIELDSTR             * hdp value
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,D4
.
          MOVE      PTCDLDES,FIELDSTR            * long description
          CALL      SPCHR000                     * convert special characters
.
WRZXP745  APPEND    CARET,ZXP073
          STRIP     D4
          APPEND    D4,ZXP073
          APPEND    " - ",ZXP073
          APPEND    FIELDSTR,ZXP073
          APPEND    CARET,ZXP073
          APPEND    "webPAS",ZXP073
          RESET     ZXP073
.
.         Main Language Spoken at Home 1 (ZXP.74)
.
WRZXP750  MOVE      BLANKSTR,ZXP074              * set default value
.
          MATCH     SP3,PMPXLAN1                 * field populated ?
          GOTO      WRZXP760 IF EQUAL            * no
.
          MOVE      PMPXLAN1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP074
          ENDSET    ZXP074
.
          MOVE      SP4,D4
          MOVE      "Unknown Code",FIELDSTR
          MOVE      "l1",D2
          PACK      KEY5,D2,PMPXLAN1
          CALL      RDCODE1
          BRANCH    OVRCD,WRZXP755
.
          MOVE      THCSCOD,FIELDSTR             * hdp value
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,D4
.
          MOVE      PTCDLDES,FIELDSTR            * long description
          CALL      SPCHR000                     * convert special characters
.
WRZXP755  APPEND    CARET,ZXP074
          STRIP     D4
          APPEND    D4,ZXP074
          APPEND    " - ",ZXP074
          APPEND    FIELDSTR,ZXP074
          APPEND    CARET,ZXP074
          APPEND    "webPAS",ZXP074
          RESET     ZXP074
.
.         Main Language Spoken at Home 2 (ZXP.75)
.
WRZXP760  MOVE      BLANKSTR,ZXP075              * set default value
.
          MATCH     SP3,PMPXLAN2                 * field populated ?
          GOTO      WRZXP770 IF EQUAL            * no
.
          MOVE      PMPXLAN2,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXP075
          ENDSET    ZXP075
.
          MOVE      SP4,D4
          MOVE      "Unknown Code",FIELDSTR
          MOVE      "l1",D2
          PACK      KEY5,D2,PMPXLAN2
          CALL      RDCODE1
          BRANCH    OVRCD,WRZXP765
.
          MOVE      THCSCOD,FIELDSTR             * hdp value
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,D4
.
          MOVE      PTCDLDES,FIELDSTR            * long description
          CALL      SPCHR000                     * convert special characters
.
WRZXP765  APPEND    CARET,ZXP075
          STRIP     D4
          APPEND    D4,ZXP075
          APPEND    " - ",ZXP075
          APPEND    FIELDSTR,ZXP075
          APPEND    CARET,ZXP075
          APPEND    "webPAS",ZXP075
          RESET     ZXP075
.
.         Email Validation Flag (ZXP.76)
.
WRZXP770  MATCH     SP1,PMPXSN21                 * field populated ?
          GOTO      WRZXP775 IF EQUAL            * no
.
          MOVE      PMPXSN21,ZXP076              * send value
.
.         Estimated DOB Flag (ZXP.77)
.
WRZXP775  MOVE      "PTCNEDOB",D8           * hospital parameter
          COMPARE   ZERO,IBCNMHOS
          GOTO      WRZXP776 IF EQUAL
.
          PACK      KEY11,PMVXMHOS,D8,SP70
          CALL      RDCMPAR1                * Read system parameter
          BRANCH    OVRCD,WRZXP776
.
          MATCH     "0",CMPAACTV
          GOTO      WRZXP777 IF EQUAL       * found active data
.
.         Check parameter with blank hospital
.
WRZXP776  PACK      KEY11,SP3,D8,SP70
          CALL      RDCMPAR1                * Read default system parameter
          BRANCH    OVRCD,WRZXP800
.
          MATCH     "0",CMPAACTV
          GOTO      WRZXP800 IF NOT EQUAL   * found active data
.
WRZXP777  MATCH     "1",CMPAVALU                 * Estimated DOB Flag Parameter
          GOTO      WRZXP800 IF NOT EQUAL
.
          MOVE      "N",ZXP077
          MATCH     "1",PMPXEDOB
          IF        @EQUAL
            MOVE      "Y",ZXP077
          ENDIF
.
WRZXP800
.
WRZXP900  PACK      SEGSTRNG,ANSZ,ANSX,ANSP,PIPE:
                             ZXP001,PIPE,ZXP002,PIPE,ZXP003,PIPE,ZXP004,PIPE:
                             ZXP005,PIPE,ZXP006,PIPE,ZXP007,PIPE,ZXP008,PIPE:
                             ZXP009,PIPE,ZXP010,PIPE,ZXP011,PIPE,ZXP012,PIPE:
                             ZXP013,PIPE,ZXP014,PIPE,ZXP015,PIPE,ZXP016,PIPE:
                             ZXP017,PIPE,ZXP018,PIPE,ZXP019,PIPE,ZXP020,PIPE:
                             ZXP021,PIPE,ZXP022,PIPE,ZXP023,PIPE,ZXP024,PIPE:
                             ZXP025,PIPE,ZXP026,PIPE,ZXP027,PIPE,ZXP028,PIPE:
                             ZXP029,PIPE,ZXP030,PIPE,ZXP031,PIPE,ZXP032,PIPE:
                             ZXP033,PIPE,ZXP034,PIPE,ZXP035,PIPE,ZXP036,PIPE:
                             ZXP037,PIPE,ZXP038,PIPE,ZXP039,PIPE,ZXP040,PIPE:
                             ZXP041,PIPE,ZXP042,PIPE,ZXP043,PIPE,ZXP044,PIPE:
                             ZXP045,PIPE,ZXP046,PIPE,ZXP047,PIPE,ZXP048,PIPE:
                             ZXP049,PIPE,ZXP050,PIPE,ZXP051,PIPE,ZXP052,PIPE:
                             ZXP053,PIPE,ZXP054,PIPE,ZXP055,PIPE,ZXP056,PIPE:
                             ZXP057,PIPE,ZXP058,PIPE,ZXP059,PIPE,ZXP060,PIPE:
                             ZXP061,PIPE,ZXP062,PIPE,ZXP063,PIPE,ZXP064,PIPE:
                             ZXP065,PIPE,ZXP066,PIPE,ZXP067,PIPE,ZXP068,PIPE:
                             ZXP069,PIPE,ZXP070,PIPE,ZXP071,PIPE,ZXP072,PIPE:
                             ZXP073,PIPE,ZXP074,PIPE,ZXP075,PIPE,ZXP076,PIPE:
                             ZXP077,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRZXP910:               * connection lost
                         WRZXP920                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      WRZXP999
.
WRZXP910  MOVE      ONE,EXIT
          GOTO      WRZXP999
.
WRZXP920  MOVE      TWO,EXIT
.
WRZXP999  RETURN
+
.*****************************************************************************
.*                           WRZSD000           Called by: A28,A31,A34,A44   *
.*                  Write Medical Record Locations segment                   *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WRZSD000  MATCH     "1",PTCNSZSD
          GOTO      WRZSD900 IF NOT EQUAL        * sending ZSD segment ?
.
          MOVE      "ZSD",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZSD] segment",*R,*N;
          ENDIF
.
          CALL      CLZSD000                     * clear ZSD fields
.
          MATCH     SP10,H7CIUSID
          IF        @EQUAL
            MOVE      BLANKSTR,ZSD001
            GOTO      WRZSD200
          ENDIF
.
          MOVE      H7CIUSID,FIELDSTR            * web user id
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZSD001
          ENDSET    ZSD001
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY10,H7CIUSID
          CALL      RDWBSE1
          IF        OVRCD = 0
            MOVE      WBSENAM,FIELDSTR           * web user name
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZSD001
          APPEND    FIELDSTR,ZSD001
          APPEND    CARET,ZSD001
          APPEND    "webPAS",ZSD001
          RESET     ZSD001
.
WRZSD200  MATCH     SP3,H7CIHOSP
          IF        @EQUAL
            MOVE      BLANKSTR,ZSD002
            GOTO      WRZSD300
          ENDIF
.
          CLEAR     PTHSNAME
          PACK      KEY3,H7CIHOSP
          CALL      RDPTHSP1
          IF        OVRCD = 0
            MOVE      PTHSAPPR,FIELDSTR          * hospital approval number
            CALL      SPCHR000                   * convert special characters
          ELSE
            MOVE      BLANKSTR,ZSD002
            GOTO      WRZSD300
          ENDIF
          MOVE      FIELDSTR,ZSD002
          ENDSET    ZSD002
.
          MOVE      PTHSNAME,FIELDSTR            * hospital name
          CALL      SPCHR000                     * convert special characters
          APPEND    CARET,ZSD002
          APPEND    FIELDSTR,ZSD002
          APPEND    CARET,ZSD002
          APPEND    "webPAS",ZSD002
          RESET     ZSD002
.
WRZSD300  IF        MESSNUMB = 23|MESSNUMB = 25|MESSNUMB = 26|MESSNUMB = 27|MESSNUMB = 42
            MOVE      PMQPOURN,KEY8              * use 'old' UR number
          ELSE
            MOVE      PURNO,KEY8
          ENDIF
.
          MATCH     SP8,KEY8
          IF        @EQUAL
            MOVE      BLANKSTR,ZSD003
            GOTO      WRZSD800
          ENDIF
.
          MOVE      ZERO,COUNTER                 * initialise loop counter
          MOVE      SP3,SAVEHOSP                 * initialise saved hospital
.
          PACK      KEY20,KEY8,SP70
          CALL      RSMRMAS1
WRZSD310  CALL      RKMRMAS1
          BRANCH    OVRCD,WRZSD800
.
          MATCH     KEY8,MRMAURNO
          GOTO      WRZSD800 IF NOT EQUAL
.
          MATCH     SP70,MRMAHHOS
          GOTO      WRZSD310 IF EQUAL
.
          MATCH     SP70,MRMADOTY
          GOTO      WRZSD310 IF EQUAL
.
          ADD       ONE,COUNTER                  * increment loop counter
          IF        COUNTER > 1
            APPEND    TILDA,ZSD003
            APPEND    TILDA,ZSD004
            APPEND    TILDA,ZSD005
            APPEND    TILDA,ZSD006
            APPEND    TILDA,ZSD007
            APPEND    TILDA,ZSD008
            APPEND    TILDA,ZSD009
          ENDIF
.
          MOVE      MRMAHHOS,SAVEHOSP            * save home hospital code
.
          CLEAR     PTHSNAME
          PACK      KEY3,MRMAHHOS
          CALL      RDPTHSP1
          IF        OVRCD = 0
            MOVE      PTHSAPPR,FIELDSTR          * hospital approval number
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZSD003
          ELSE
            APPEND    BLANKSTR,ZSD003
          ENDIF
.
          APPEND    CARET,ZSD003
          MOVE      PTHSNAME,FIELDSTR            * hospital name
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZSD003
          APPEND    CARET,ZSD003
          APPEND    "webPAS",ZSD003
.
.         Load Home Location (ZSD.4 - CE)
.
          MATCH     SP4,MRMAHLOC
          IF        @EQUAL
            APPEND    BLANKSTR,ZSD004
          ELSE
            STRIP     MRMAHLOC
            APPEND    MRMAHLOC,ZSD004
          ENDIF
          APPEND    CARET,ZSD004
.
          PACK      KEY7,MRMAHHOS,MRMAHLOC,SP7
          CALL      RDMRLOC1
          IF        OVRCD = 0
            MOVE      MRLODESC,FIELDSTR          * location description
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZSD004
          ELSE
            APPEND    BLANKSTR,ZSD004
          ENDIF
          APPEND    CARET,ZSD004
          APPEND    "webPAS",ZSD004
.
.         Load Type of Document (ZSD.5 - CE)
.
          MATCH     SP3,MRMADOTY
          IF        @EQUAL
            APPEND    BLANKSTR,ZSD005
          ELSE
            STRIP     MRMADOTY
            APPEND    MRMADOTY,ZSD005
          ENDIF
          APPEND    CARET,ZSD005
.
          PACK      KEY5,ANST,ANSY,MRMADOTY,SP5
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR             * document type description
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZSD005
          ELSE
            APPEND    BLANKSTR,ZSD005
          ENDIF
          APPEND    CARET,ZSD005
          APPEND    "webPAS",ZSD005
.
.         Load Volume Number (ZSD.6 - NM)
.
          MOVE      MRMAVOLN,DIM2
          SQUEEZE   DIM2
          APPEND    DIM2,ZSD006
.
.         Load Status (Cat RS - ZSD.7 - CE)
.
          MATCH     SP3,MRMASTAT
          IF        @EQUAL
            APPEND    BLANKSTR,ZSD007
          ELSE
            STRIP     MRMASTAT
            APPEND    MRMASTAT,ZSD007
          ENDIF
          APPEND    CARET,ZSD007
.
          PACK      KEY5,ANSR,ANSS,MRMASTAT,SP5
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR             * status description
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZSD007
          ELSE
            APPEND    BLANKSTR,ZSD007
          ENDIF
          APPEND    CARET,ZSD007
          APPEND    "webPAS",ZSD007
.
.         Load Current Hospital (ZSD.8 - CE)
.
          CLEAR     PTHSNAME
          MOVE      MRMACHOS,KEY3
          CALL      RDPTHSP1
          IF        OVRCD = 0
            MOVE      PTHSAPPR,FIELDSTR          * hospital approval number
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZSD008
          ELSE
            APPEND    BLANKSTR,ZSD008
          ENDIF
.
          APPEND    CARET,ZSD008
          MOVE      PTHSNAME,FIELDSTR            * hospital name
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZSD008
          APPEND    CARET,ZSD008
          APPEND    "webPAS",ZSD008
.
.         Load Current Location (ZSD.9)
.
          MATCH     SP4,MRMACLOC
          IF        @EQUAL
            APPEND    BLANKSTR,ZSD009
          ELSE
            STRIP     MRMACLOC
            APPEND    MRMACLOC,ZSD009
          ENDIF
          APPEND    CARET,ZSD009
.
          PACK      KEY7,MRMACHOS,MRMACLOC,SP7
          CALL      RDMRLOC1
          IF        OVRCD = 0
            MOVE      MRLODESC,FIELDSTR          * location description
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZSD009
          ELSE
            APPEND    BLANKSTR,ZSD009
          ENDIF
          APPEND    CARET,ZSD009
          APPEND    "webPAS",ZSD009
.
          PACK      KEY20,KEY8,SAVEHOSP,Z70      * move to next hospital
          GOTO      WRZSD310
.
WRZSD800  IF        COUNTER = 0
            MOVE      BLANKSTR,ZSD003            * no M/R at any hospital
            MOVE      BLANKSTR,ZSD004
            MOVE      BLANKSTR,ZSD005
            MOVE      BLANKSTR,ZSD006
            MOVE      BLANKSTR,ZSD007
            MOVE      BLANKSTR,ZSD008
            MOVE      BLANKSTR,ZSD009
          ELSE
            RESET     ZSD003
            RESET     ZSD004
            RESET     ZSD005
            RESET     ZSD006
            RESET     ZSD007
            RESET     ZSD008
            RESET     ZSD009
          ENDIF
.
          PACK      SEGSTRNG,ANSZ,ANSS,ANSD,PIPE:
                             ZSD001,PIPE,ZSD002,PIPE,ZSD003,PIPE,ZSD004,PIPE:
                             ZSD005,PIPE,ZSD006,PIPE,ZSD007,PIPE,ZSD008,PIPE:
                             ZSD009,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRZSD910:               * connection lost
                         WRZSD920                * timeout
.
WRZSD900  MOVE      ZERO,EXIT
          GOTO      WRZSD999
.
WRZSD910  MOVE      ONE,EXIT
          GOTO      WRZSD999
.
WRZSD920  MOVE      TWO,EXIT
.
WRZSD999  RETURN
+
.*****************************************************************************
.*                           WRZXV000           Called by: many message types*
.*                  Write Extra visit details segment                        *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WRZXV000  MOVE      "ZXV",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZXV] segment",*R,*N;
          ENDIF
.
          CALL      CLZXV000                     * clear ZXV fields
.
          BRANCH    MESSNUMB,WRZXV010:  A01 - ADT Admission
                             WRZXV010:  A02 - ADT Transfer
                             WRZXV010:  A03 - ADT Discharge
                             WRZXV200:  A03 - Emergency Discharge
                             WRZXV100:  A04 - O/P Attendance
                             WRZXV060:  A04 - Emergency Attendance
                             WRZXV100:  A05 - O/P Booking
                             WRZXV010:  A08 - ADT Visit Update
                             WRZXV100:  A08 - O/P Visit Update
                             WRZXV060:  A08 - Emergency Visit Update
                             WRZXV010:  A11 - ADT Cancel Admission
                             WRZXV100:  A11 - O/P Unattend
                             WRZXV400:  A11 - Emergency Cancel Visit
                             WRZXV010:  A12 - ADT Cancel Transfer
                             WRZXV010:  A13 - ADT Cancel Discharge
                             WRZXV400:  A13 - Emergency Cancel Discharge
                             WRZXV010:  A14 - ADT Pre-admit
                             WRZXV010:  A21 - ADT On-Leave
                             WRZXV010:  A22 - ADT Return from Leave
                             WRZXV010:  A27 - ADT Cancel Pre-admit
                             WRZXV900:  A28 - PMI Patient Registration
                             WRZXV900:  A31 - PMI Update
                             WRZXV900:  A34 - PMI Merge
                             WRZXV100:  A38 - O/P Cancel Booking
                             WRZXV900:  A44 - ADT Move Visit
                             WRZXV900:  A44 - O/P Move Visit
                             WRZXV900:  A44 - Emergency Move Visit
                             WRZXV900:  M02 - HCP Master File
                             WRZXV900:  S12 - Notify New Booking
                             WRZXV900:  S14 - Notify Change Booking
                             WRZXV900:  S15 - Notify Cancel Booking
                             WRZXV700:  I12 - Add A/H Referral
                             WRZXV700:  I13 - Change A/H Referral
                             WRZXV700:  I14 - Delete A/H Referral
                             WRZXV750:  A03 - Add A/H Encounter
                             WRZXV750:  A08 - Modify A/H Encounter
                             WRZXV750:  A13 - Cancel A/H Encounter
                             WRZXV600:  A05 - W/L Booking
                             WRZXV600:  A08 - W/L Booking Update
                             WRZXV600:  A38 - W/L Cancel Booking
                             WRZXV900:  M01 - O/P clinic master & type
                             WRZXV900:  A44 - Change U/R for Waiting List
                             WRZXV600:  A02 - W/L Transfer
                             WRZXV100:  A03 - O/P discharge
                             WRZXV100:  A13 - Cancel O/P discharge
                             WRZXV900:  A44 - Change U/R for Referral
                             WRZXV600:  I12 - Add W/L entry
                             WRZXV600:  I13 - Update W/L entry
                             WRZXV600:  I14 - Remove W/L entry
                             WRZXV900   A37 - PMI UnMerge
.
          GOTO      WRZXV900                     * invalid message
.
.         I/P Only Data
.
WRZXV010  CALL      IPZXV000                     * I/P ZXV fields
.
.         Load Visitors Allowed
.
WRZXV015  MOVE      ANSN,ZXV001
          MATCH     "1",PMVXVALW
          IF        @EQUAL
            MOVE      ANSY,ZXV001
          ENDIF
.
.         Load Employment Status Indicator
.
          MOVE      BLANKSTR,ZXV002              * set default value
.
          MATCH     SP3,PMVXEMPL                 * field populated ?
          GOTO      WRZXV020 IF EQUAL            * no
.
          MOVE      PMVXEMPL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV002
          ENDSET    ZXV002
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSK,ANSD,PMVXEMPL
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV002
          APPEND    FIELDSTR,ZXV002
          APPEND    CARET,ZXV002
          APPEND    "webPAS",ZXV002
          RESET     ZXV002
.
.         Load Non WA Hospital Contact
.
WRZXV020  MOVE      BLANKSTR,ZXV003              * set default value
.
          MATCH     SP3,PMVXNWHC                 * field populated ?
          GOTO      WRZXV030 IF EQUAL            * no
.
          MOVE      PMVXNWHC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV003
          ENDSET    ZXV003
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATCW,PMVXNWHC
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV003
          APPEND    FIELDSTR,ZXV003
          APPEND    CARET,ZXV003
          APPEND    "webPAS",ZXV003
          RESET     ZXV003
.
.         Load Waitlist Urgency
.
WRZXV030  COMPARE   ONE,MESSNUMB                 * A01 message ?
          GOTO      WRZXV040 IF NOT EQUAL        * no - don't populate
.
          MOVE      BLANKSTR,ZXV004              * set default value
.
          PACK      KEY19,PURNO,SP20
          CALL      RDSTREA1                     * position on U/R number
WRZXV035  CALL      RDKTREA1                     * read next record
          BRANCH    OVRCD,WRZXV040               * eof - no procedure found
.
          MATCH     PURNO,WMURNO                 * same U/R number still ?
          GOTO      WRZXV040 IF NOT EQUAL        * no - no procedure found
.
          MOVE      WMBOOK,DIM8
          MATCH     VISNUMBR,DIM8                * same visit number ?
          GOTO      WRZXV035 IF NOT EQUAL        * no - get next record
.
          MATCH     SP3,WMPTY                    * field populated ?
          GOTO      WRZXV040 IF EQUAL            * no
.
          MOVE      WMPTY,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV004
          ENDSET    ZXV004
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANST,ANSP,WMPTY
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV004
          APPEND    FIELDSTR,ZXV004
          APPEND    CARET,ZXV004
          APPEND    "webPAS",ZXV004
          RESET     ZXV004
.
.         Load Mental Health Referral Source & Discharge Status
.
WRZXV040  MOVE      VISNUMBR,KEY8
          CALL      RDMHVIS1                     * MH visit record on file ?
          BRANCH    OVRCD,WRZXV050               * no
.
          MOVE      BLANKSTR,ZXV005              * set default values
          MOVE      BLANKSTR,ZXV018
.
          MATCH     SP3,MHVIPSPS                 * field populated ?
          GOTO      WRZXV045 IF EQUAL            * no
.
          MOVE      MHVIPSPS,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV005
          ENDSET    ZXV005
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSP,ANST,MHVIPSPS
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV005
          APPEND    FIELDSTR,ZXV005
          APPEND    CARET,ZXV005
          APPEND    "webPAS",ZXV005
          RESET     ZXV005
.
WRZXV045  MOVE      VISNUMBR,KEY8
          CALL      RDMHDSC1                     * MH discharge record on file ?
          BRANCH    OVRCD,WRZXV050               * no
.
          MATCH     SP3,MHDSUSR1                 * field populated ?
          GOTO      WRZXV050 IF EQUAL            * no
.
          MOVE      MHDSUSR1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV018
          ENDSET    ZXV018
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSW,FIVE,MHDSUSR1
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV018
          APPEND    FIELDSTR,ZXV018
          APPEND    CARET,ZXV018
          APPEND    "webPAS",ZXV018
          RESET     ZXV018
.
.         Load Care Type / Patient Type
.
WRZXV050  MOVE      BLANKSTR,ZXV016              * set default value
.
          MATCH     SP3,ACARE                    * field populated ?
          GOTO      WRZXV060 IF EQUAL            * no
.
          MOVE      ACARE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV016
          ENDSET    ZXV016
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSC,ANSC,ACARE
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV016
          APPEND    FIELDSTR,ZXV016
          APPEND    CARET,ZXV016
          APPEND    "webPAS",ZXV016
          RESET     ZXV016
.
.         Load Inform GP
.
WRZXV060  MOVE      ANSN,ZXV019                  * no (default value)
          MATCH     "1",PMVXINGP
          IF        @EQUAL
            MOVE      ANSY,ZXV019                * yes
          ENDIF
.
          IF        MESSNUMB = 6 | MESSNUMB = 10
            GOTO      WRZXV200                   * ED A04 & A08
          ENDIF
.
.         Additional Leave related fields.
.
          COMPARE   TEN8,MESSNUMB                * A21 message ?
          GOTO      WRZXV080 IF NOT EQUAL        * no
.
.         Leave Type
.
          MOVE      BLANKSTR,ZXV020              * set default value
.
          MATCH     SP3,PTTRLTYP                 * field populated ?
          GOTO      WRZXV071 IF EQUAL            * no
.
          MOVE      PTTRLTYP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV020
          ENDSET    ZXV020
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANST,ANSL,PTTRLTYP
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV020
          APPEND    FIELDSTR,ZXV020
          APPEND    CARET,ZXV020
          APPEND    "webPAS",ZXV020
          RESET     ZXV020
.
.         Leave Start Date/Time
.
WRZXV071  MOVE      BLANKSTR,ZXV021              * load default value
.
          MATCH     SP8,TDATE                    * date populated ?
          GOTO      WRZXV072 IF EQUAL            * no - finished field
.
          MOVE      TDATE,ZXV021
          ENDSET    ZXV021
          UNPACK    TTIME,CHOUR,ANS,CMIN,ANS,CSEC
          APPEND    CHOUR,ZXV021
          APPEND    CMIN,ZXV021
          APPEND    CSEC,ZXV021
          RESET     ZXV021
          REP       " 0",ZXV021
.
.         Leave Expected Return Date/Time
.
WRZXV072  MOVE      BLANKSTR,ZXV022              * load default value
.
          PACK      KEY14,VISNUMBR,SP20
          CALL      RDSONLV2                     * position on visit number
          CALL      RDKONLV2                     * read next record
          BRANCH    OVRCD,WRZXV080               * eof - finished field
.
          MOVE      OADMNO,DIM8
          MATCH     VISNUMBR,DIM8                * same visit still ?
          GOTO      WRZXV080 IF NOT EQUAL        * no - finished field
.
          MATCH     SP8,OERDATE                  * date populated ?
          GOTO      WRZXV080 IF EQUAL            * no - finished field
.
          MOVE      OERDATE,ZXV022
          ENDSET    ZXV022
          UNPACK    OERTIME,CHOUR,ANS,CMIN,ANS,CSEC
          APPEND    CHOUR,ZXV022
          APPEND    CMIN,ZXV022
          APPEND    CSEC,ZXV022
          RESET     ZXV022
          REP       " 0",ZXV022
.
.         Load Division
.
WRZXV080  MOVE      BLANKSTR,ZXV023              * set default value
.
          MATCH     SP3,PMVXMHOS                 * hospital exists ?
          GOTO      WRZXV081 IF EQUAL            * no
.
          MATCH     SP3,ACLSSFT                  * unit exists ?
          GOTO      WRZXV081 IF EQUAL            * no
.
          PACK      KEY14,PMVXMHOS,ACLSSFT,PMVXTEAM,SP70
          CALL      RSPMDIV2                     * position on hosp/unit/team
          CALL      RKPMDIV2                     * read next record
          BRANCH    OVRCD,WRZXV081               * eof - finished field
.
          MATCH     PMVXMHOS,PMDIHOSP            * same hosp ?
          GOTO      WRZXV081 IF NOT EQUAL        * no - finished field
.
          MATCH     ACLSSFT,PMDIUNIT             * same unit ?
          GOTO      WRZXV081 IF NOT EQUAL        * no - finished field
.
          MATCH     PMVXTEAM,PMDITEAM            * same team ?
          GOTO      WRZXV081 IF NOT EQUAL        * no - finished field
.
          MATCH     SP3,PMDIDIVN                 * field populated ?
          GOTO      WRZXV081 IF EQUAL            * no
.
          MOVE      PMDIDIVN,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV023
          ENDSET    ZXV023
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATdv,PMDIDIVN
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV023
          APPEND    FIELDSTR,ZXV023
          APPEND    CARET,ZXV023
          APPEND    "webPAS",ZXV023
          RESET     ZXV023
.
.         Load Unit
.         
WRZXV081  MOVE      BLANKSTR,ZXV024              * set default value 
.         
          MATCH     SP3,ACLSSFT                  * field populated ?
          GOTO      WRZXV082 IF EQUAL            * no
.
          MOVE      ACLSSFT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV024
          ENDSET    ZXV024
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSA,ANSC,ACLSSFT
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV024
          APPEND    FIELDSTR,ZXV024
          APPEND    CARET,ZXV024
          APPEND    "webPAS",ZXV024
          RESET     ZXV024
.
.         Load Team
.         
WRZXV082  MOVE      BLANKSTR,ZXV025              * set default value
.         
          MATCH     SP5,PMVXTEAM                 * field populated ?
          GOTO      WRZXV083 IF EQUAL            * no
.
          MOVE      PMVXTEAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV025
          ENDSET    ZXV025
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,PMVXTEAM,SP70
          CALL      RDPMTEM1
          IF        OVRCD = 0
            MOVE      PMTMDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV025
          APPEND    FIELDSTR,ZXV025
          APPEND    CARET,ZXV025
          APPEND    "webPAS",ZXV025
          RESET     ZXV025
.
.         Load ADT Discharge Destination (ZXV.28)
.
WRZXV083  MOVE      BLANKSTR,ZXV028              * set default value
          COMPARE   THREE,ASTAT                  * discharged ?
          GOTO      WRZXV084 IF NOT EQUAL        * no
.
          IF        PTCNDRSM = 1
            PACK      TCODE,ANSD,SP1             * using category D
            MOVE      DSTAT,ACODE
          ELSE
            PACK      TCODE,ANSD,ANSD            * using category DD
            MOVE      DDEST,ACODE
          ENDIF
.
          MATCH     SP3,ACODE                    * ADT field populated ?
          GOTO      WRZXV084 IF EQUAL            * no
.         
          MOVE      ACODE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV028              
          ENDSET    ZXV028
.         
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,TCODE,ACODE
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV028
          APPEND    FIELDSTR,ZXV028
          APPEND    CARET,ZXV028
          APPEND    "webPAS",ZXV028
          RESET     ZXV028
.
.         Load ADT Transfer to Destination (ZXV.29)
.
WRZXV084  MOVE      BLANKSTR,ZXV029              * set default value
.
          MOVE      VISNUMBR,KEY8
          CALL      RDPTDAD1
          BRANCH    OVRCD,WRZXV085
.
          MATCH     SP5,PTDADCTS
          GOTO      WRZXV085 IF EQUAL
.
          MOVE      PTDADCTS,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV029
          ENDSET    ZXV029
.
          MOVE      "Unknown Code",FIELDSTR
          MOVE      PTDADCTS,KEY5
          CALL      RDPTVAD1
          IF        OVRCD = 0
            MOVE      PTVADESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV029
          APPEND    FIELDSTR,ZXV029
          APPEND    CARET,ZXV029
          APPEND    "webPAS",ZXV029
          RESET     ZXV029
.
.         Load ADT Return from Leave Date/Time (ZXV.30)
.
WRZXV085  COMPARE   TEN9,MESSNUMB                * A22 message ?
          GOTO      WRZXV086 IF NOT EQUAL        * no
.
          MOVE      BLANKSTR,ZXV030              * load default value
.
          MATCH     SP8,TDATE                    * date populated ?
          GOTO      WRZXV086 IF EQUAL            * no - finished field
.
          MOVE      TDATE,ZXV030
          ENDSET    ZXV030
          UNPACK    TTIME,CHOUR,ANS,CMIN,ANS,CSEC
          APPEND    CHOUR,ZXV030
          APPEND    CMIN,ZXV030
          APPEND    CSEC,ZXV030
          RESET     ZXV030
          REP       " 0",ZXV030
.
.         Load ADT Extra Meal Codes from pmsnutaf (ZXV.31)
.
WRZXV086  MATCH     "1",PTCNH7ED
          GOTO      WRZXV095 IF NOT EQUAL        * using zxv.31 field ?
.
.         "Using Type of Meal for Diet Template" (PTCNUTOM) parameter is ON
.
          MATCH     "1",PTCNUTOM                 * parameter on ?
          IF        @EQUAL
            CALL      LDCT0000                   * Load catcomaf info for ZXV.31
            GOTO      WRZXV095
          ENDIF
.
.         "Using Type of Meal for Diet Template" (PTCNUTOM) parameter is OFF
.
          PACK      KEY16,VISNUMBR,Z70           * get last record
          CALL      RSPMNUT1
          CALL      RPPMNUT1
          IF        OVRCD = 1
            MOVE      BLANKSTR,ZXV031
            GOTO      WRZXV095                   * no record
          ENDIF
.
          MATCH     VISNUMBR,PMNUADMN
          IF        !@EQUAL
            MOVE      BLANKSTR,ZXV031
            GOTO      WRZXV095                   * no record
          ENDIF
.
          MOVE      ZERO,FORM1                   * initialise counter
          WHILE     FORM1 < 4
            ADD       ONE,FORM1                  * increment counter
            LOAD      DIM3,FORM1,PMNUML01,PMNUML03,PMNUML05,PMNUML07
            MATCH     SP3,DIM3                   * field populated ?
            IF        @EQUAL
              APPEND    BLANKSTR,ZXV031
              APPEND    CARET,ZXV031
              APPEND    BLANKSTR,ZXV031
            ELSE
              MOVE      DIM3,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,ZXV031
              APPEND    CARET,ZXV031
              MOVE      "Unknown Code",FIELDSTR
              PACK      KEY5,CATMJ,DIM3
              CALL      RDCODE1
              IF        OVRCD = 0
                MOVE      TDESC,FIELDSTR
                CALL      SPCHR000               * convert special characters
              ENDIF
              APPEND    FIELDSTR,ZXV031
            ENDIF
.
.           Only send the Extra Dietary information if this is the first set
.           of data
.
            PERFORM   FORM1,LXDI0000             * load extra dietary info
.
            IF        FORM1 < 4
              APPEND    TILDA,ZXV031
            ENDIF
          DO
          RESET     ZXV031
.
WRZXV095  CALL      LVIN0000                     * load visit interpreter
.
          GOTO      WRZXV500
.
.         O/P Only Data
.         Load O/P Referral Priority & Allied Health Referral Number
.
WRZXV100  MOVE      BLANKSTR,ZXV006              * set default value
          MOVE      BLANKSTR,ZXV017
.
.         Check if there is a linked AH referral for this O/P visit
.
          PACK      KEY16,VISNUMBR,SP20
          CALL      RSALLNK2                     * position on visit number
          CALL      RKALLNK2                     * read next record
          BRANCH    OVRCD,WRZXV140               * eof - ignore field
.
          MATCH     VISNUMBR,ALLNLNKV            * same visit still ?
          GOTO      WRZXV140 IF NOT EQUAL        * no - ignore field
.
          MOVE      ALLNVISN,ZXV017              * load A/H referral Number
          SQUEEZE   ZXV017
.
.         There is a linked AH referral for this O/P visit, so read
.         the AH referral record
.
          MOVE      ALLNVISN,KEY8
          CALL      RDALREF1                     * AH referral record on file ?
          BRANCH    OVRCD,WRZXV140               * no
.
          MATCH     SP3,ALREPRTY                 * field populated ?
          GOTO      WRZXV110 IF EQUAL            * no
.
          MOVE      ALREPRTY,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV006
          ENDSET    ZXV006
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSP,ANSR,ALREPRTY
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV006
          APPEND    FIELDSTR,ZXV006
          APPEND    CARET,ZXV006
          APPEND    "webPAS",ZXV006
          RESET     ZXV006
.
.         Load O/P Referral Reason
.         Note: This field requires the read on allrefaf from the population
.               of the Referral Priority field.
.
WRZXV110  MOVE      BLANKSTR,ZXV007              * set default value
.
          MATCH     SP9,ALREPRO1                 * field populated ?
          GOTO      WRZXV120 IF EQUAL            * no
.
          MOVE      ALREPRO1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV007
          ENDSET    ZXV007
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY12,ALREDEPT,ALREPRO1
          CALL      RDALPRR1
          IF        OVRCD = 0
            MOVE      ALPRDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV007
          APPEND    FIELDSTR,ZXV007
          APPEND    CARET,ZXV007
          APPEND    "webPAS",ZXV007
          RESET     ZXV007
.
.         Load O/P Referral Date
.         Note: This field requires the read on allrefaf from the population
.               of the Referral Priority field.
.
WRZXV120  MOVE      BLANKSTR,ZXV008              * set default value
.
          MATCH     SP8,ALRERDAT                 * blank date ?
          GOTO      WRZXV130 IF EQUAL            * yes
.
          MOVE      ALRERDAT,ZXV008
.
.         Load O/P Referral Recorded Date
.         Note: This field requires the read on allrefaf from the population
.               of the Referral Priority field.
.
WRZXV130  MOVE      BLANKSTR,ZXV009              * set default value
.
          MATCH     SP8,ALRECDAT                 * blank date ?
          GOTO      WRZXV140 IF EQUAL            * yes
.
          MOVE      ALRECDAT,ZXV009
.
.         Load O/P Appointment Type
.
WRZXV140  MOVE      BLANKSTR,ZXV010              * set default value
.
          MATCH     SP3,OTBBOUTC                 * field populated ?
          GOTO      WRZXV150 IF EQUAL            * no
.
          MOVE      OTBBOUTC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV010
          ENDSET    ZXV010
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSO,ANSZ,OTBBOUTC
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV010
          APPEND    FIELDSTR,ZXV010
          APPEND    CARET,ZXV010
          APPEND    "webPAS",ZXV010
          RESET     ZXV010
.
WRZXV150  CALL      LVIN0000                     * load visit interpreter
.
.         Clinic Start Time
.
          MOVE      BLANKSTR,ZXV033              * set default value
.
          MATCH     SP70,OBASTRT                 * field populated ?
          GOTO      WRZXV160 IF EQUAL            * no
.
          UNPACK    OBASTRT,CHOUR,ANS,CMIN
          MOVE      "00",CSEC
          PACK      ZXV033,CHOUR,CMIN,CSEC
.
.         Site
.
WRZXV160  MOVE      BLANKSTR,ZXV035              * set default value
.
          MATCH     SP70,OBASITE                 * field populated ?
          GOTO      WRZXV170 IF EQUAL            * no
.
          MOVE      OBASITE,KEY6
          CALL      RDSITA1                      * site found ?
          BRANCH    OVRCD,WRZXV170               * no - ignore field
.
          MOVE      OBASITE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV035
          ENDSET    ZXV035
.
          MOVE      OSTDESC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
.
          APPEND    CARET,ZXV035
          APPEND    FIELDSTR,ZXV035
          APPEND    CARET,ZXV035
          APPEND    "webPAS",ZXV035
          RESET     ZXV035
.
.         Tier 2 Code (category NC)
.
WRZXV170  MOVE      BLANKSTR,ZXV050              * set default value
.
          MATCH     SP3,OTBBTCOD                 * field populated ?
          GOTO      WRZXV180 IF EQUAL            * no
.
          MOVE      OTBBTCOD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV050
          ENDSET    ZXV050
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSN,ANSC,OTBBTCOD
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV050
          APPEND    FIELDSTR,ZXV050
          APPEND    CARET,ZXV050
          APPEND    "webPAS",ZXV050
          RESET     ZXV050
.
.         O/P Purchaser (Cat HP)
.
WRZXV180  MOVE      BLANKSTR,ZXV051              * set default value
.
          MATCH     SP3,OTBBPURC                 * field populated ?
          GOTO      WRZXV185 IF EQUAL            * no
.
          MOVE      OTBBPURC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV051
          ENDSET    ZXV051
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSH,ANSP,OTBBPURC
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV051
          APPEND    FIELDSTR,ZXV051
          APPEND    CARET,ZXV051
          APPEND    "webPAS",ZXV051
          RESET     ZXV051
.
.         O/P Service Delivery Mode (Cat sd)
.
WRZXV185  MOVE      BLANKSTR,ZXV057              * set default value
.
          MATCH     SP3,OTBBSRVD                 * field populated ?
          GOTO      WRZXV186 IF EQUAL            * no
.
          MOVE      OTBBSRVD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV057
          ENDSET    ZXV057
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATsd,OTBBSRVD
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV057
          APPEND    FIELDSTR,ZXV057
          APPEND    CARET,ZXV057
          APPEND    "webPAS",ZXV057
          RESET     ZXV057
.
.         O/P comments (vismdtaf/vismtxaf)
.
WRZXV186  MOVE      ZERO,COUNTER                 * initialise counter
          MOVE      BLANKSTR,ZXV013              * set default value
.
          PACK      KEY17,VISNUMBR,VSCMTTYP,SP70
          CALL      RSVSMDT1
WRZXV187  CALL      RKVSMDT1
          BRANCH    OVRCD,WRZXV189
.
          MATCH     VISNUMBR,VSMDVISN
          GOTO      WRZXV189 IF NOT EQUAL
.
          MATCH     VSCMTTYP,VSMDTYPE
          GOTO      WRZXV189 IF NOT EQUAL
.
          MATCH     "1",VSMDDELT            * is comment deleted
          GOTO      WRZXV187 IF EQUAL
.
          PACK      KEY20,VSMDVISN,VSMDTYPE,VSMDNOTE,SP70
          CALL      RSVSMTX1
WRZXV188  CALL      RKVSMTX1
          BRANCH    OVRCD,WRZXV187
.
          MATCH     VSMDVISN,VSMTVISN   
          GOTO      WRZXV187 IF NOT EQUAL
.
          MATCH     VSMDTYPE,VSMTTYPE
          GOTO      WRZXV187 IF NOT EQUAL
.
          MATCH     VSMDNOTE,VSMTNOTE
          GOTO      WRZXV187 IF NOT EQUAL
.
.         We have a comment record for the O/P visit
.
          IF        COUNTER = 0
            MOVE      VSMTCMNT,FIELDSTR
            CALL      SPCHR000
            MOVE      FIELDSTR,ZXV013            * 1st comment line
          ELSE
            ENDSET    ZXV013
            MATCH     "1",PTCNH7IL
            IF        @EQUAL
              RESET     ZXV013
              STRIP     ZXV013
              ENDSET    ZXV013
              APPEND    LINBREAK,ZXV013          * include line break
            ENDIF
            MOVE      VSMTCMNT,FIELDSTR
            CALL      SPCHR000
            APPEND    FIELDSTR,ZXV013
          ENDIF
.
          ADD       ONE,COUNTER                  * increment line count
.
          MATCH     "1",PTCNH7IL
          IF        @EQUAL
            RESET     ZXV013
            STRIP     ZXV013
            MOVELPTR  ZXV013,F4                  * increment char count
            COMPARE   "996",F4
            GOTO      WRZXV188 IF LESS           * 1000 chars max (inc. lfeed)
          ELSE
            COMPARE   TEN4,COUNTER
            GOTO      WRZXV188 IF LESS           * 14 lines max
          ENDIF
.
WRZXV189  IF        COUNTER > 0
            RESET     ZXV013
            STRIP     ZXV013
            MOVELPTR  ZXV013,F4
            IF        F4 = 0
              MOVE      BLANKSTR,ZXV013          * set default value
            ENDIF
          ENDIF
.
.         O/P Telehealth Status (Cat OM)
.
WRZXV190  MOVE      BLANKSTR,ZXV090              * set default value
.
          MATCH     SP3,OTTHSTAT                 * field populated ?
          GOTO      WRZXV191 IF EQUAL            * no
          GOTO      WRZXV191 IF EOS              * no
.
          MOVE      OTTHSTAT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV090
          ENDSET    ZXV090
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATOM,OTTHSTAT
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV090
          APPEND    FIELDSTR,ZXV090
          APPEND    CARET,ZXV090
          APPEND    "webPAS",ZXV090
          RESET     ZXV090
.
.         O/P Telehealth Receiving Site Name
.
WRZXV191  MOVE      BLANKSTR,ZXV091              * set default value
.
          MATCH     SP70,OTTHRSIT                * field populated ?
          GOTO      WRZXV192 IF EQUAL            * no
          GOTO      WRZXV192 IF EOS              * no
.
          PACK      ZXV091,OTTHRSIT,SP100
          RESET     ZXV091
          STRIP     ZXV091
.
.         O/P Telehealth Receiving Code
.
WRZXV192  MOVE      BLANKSTR,ZXV092              * set default value
.
          MATCH     SP70,OTTHRCOD                * field populated ?
          GOTO      WRZXV193 IF EQUAL            * no
          GOTO      WRZXV193 IF EOS              * no
.
          PACK      ZXV092,OTTHRCOD,SP100
          RESET     ZXV092
          STRIP     ZXV092
.
.         O/P Telehealth Receiving Address
.
WRZXV193  MOVE      BLANKSTR,ZXV093              * set default value
.
          MATCH     SP70,OTTHRADD                * field populated ?
          GOTO      WRZXV194 IF EQUAL            * no
          GOTO      WRZXV194 IF EOS              * no
.
          PACK      ZXV093,OTTHRADD,SP100
          RESET     ZXV093
          STRIP     ZXV093
.
.         O/P Telehealth Waiting Room URL
.
WRZXV194  MOVE      BLANKSTR,ZXV094              * set default value
.
          MATCH     SP70,OTTHWURL                * field populated ?
          GOTO      WRZXV195 IF EQUAL            * no
          GOTO      WRZXV195 IF EOS              * no
.
          PACK      ZXV094,OTTHWURL,SP100
          RESET     ZXV094
          STRIP     ZXV094
.
.         O/P Telehealth Receiving E164
.
WRZXV195  MOVE      BLANKSTR,ZXV095              * set default value
.
          MATCH     SP70,OTTHE164                * field populated ?
          GOTO      WRZXV196 IF EQUAL            * no
          GOTO      WRZXV196 IF EOS              * no
.
          PACK      ZXV095,OTTHE164,SP100
          RESET     ZXV095
          STRIP     ZXV095
.
.         O/P Telehealth Notes
.
WRZXV196  MOVE      ZERO,COUNTER                 * initialise counter
          MOVE      BLANKSTR,ZXV096              * set default value
.
          PACK      KEY14,VISNUMBR,ZERO,TWO,ONE,SP20
          CALL      RSVSCMT1                     * position on visit
WRZXV197  CALL      RKVSCMT1                     * read next record
          BRANCH    OVRCD,WRZXV198               * eof - finished
.
          MATCH     VISNUMBR,VSCTVIST            * same visit still ?
          GOTO      WRZXV198 IF NOT EQUAL        * no - finished
.
          MATCH     "021",VSCTTYPE               * same comment type still ?
          GOTO      WRZXV198 IF NOT EQUAL        * no - finished
.
.         We have a telehealth note record for the OP visit
.
          IF        COUNTER = 0
            MOVE      VSCTDATA,FIELDSTR          * 1st comment line
            CALL      SPCHR000
            MOVE      FIELDSTR,ZXV096
          ELSE
            ENDSET    ZXV096
.0861253    MATCH     "1",PTCNH7IL
.0861253    IF        @EQUAL
.0861253      RESET     ZXV096
.0861253      STRIP     ZXV096
.0861253      ENDSET    ZXV096
.0861253      APPEND    LINBREAK,ZXV096          * include line break
.0861253    ENDIF
            MOVE      VSCTDATA,FIELDSTR
            CALL      SPCHR000
            APPEND    FIELDSTR,ZXV096
          ENDIF
.
          ADD       ONE,COUNTER                  * increment line count
.
.0861253  MATCH     "1",PTCNH7IL
.0861253  IF        @EQUAL
.0861253    RESET     ZXV096
.0861253    STRIP     ZXV096
.0861253    MOVELPTR  ZXV096,F4                  * increment char count
.0861253    COMPARE   "996",F4
.0861253    GOTO      WRZXV197 IF LESS           * 1000 chars max (inc. lfeed)
.0861253  ELSE
            COMPARE   TEN1,COUNTER
            GOTO      WRZXV197 IF LESS           * 11 lines max
.0861253  ENDIF
.
WRZXV198  IF        COUNTER > 0
            RESET     ZXV096
            STRIP     ZXV096
            MOVELPTR  ZXV096,F4
            IF        F4 = 0
              MOVE      BLANKSTR,ZXV096          * set default value
            ENDIF
          ENDIF
.
.         O/P Appointment Confirmed
.
WRZXV199  MATCH     SP1,PMVXCONF                 * field populated ?
          IF        !@EQUAL
            MATCH     "0",PMVXCONF
            IF        @EQUAL
              MOVE      ANSN,ZXV097              * set value to "N"
            ENDIF
            MATCH     "1",PMVXCONF
            IF        @EQUAL
              MOVE      ANSY,ZXV097              * set value to "Y"
            ENDIF
          ENDIF
.
          GOTO      WRZXV500
.
.         Emergency Only Data
.         Check that patient is not cancelled
.
WRZXV200  COMPARE   FOUR,EMVISTAT                * cancelled ?
          GOTO      WRZXV400 IF EQUAL            * yes
.
.         Load Mode of Arrival
.
          MOVE      BLANKSTR,ZXV011              * set default value
.
          MATCH     SP3,EMVIMODE                 * field populated ?
          GOTO      WRZXV210 IF EQUAL            * no
.
          MOVE      EMVIMODE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV011
          ENDSET    ZXV011
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSE,ANSA,EMVIMODE
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV011
          APPEND    FIELDSTR,ZXV011
          APPEND    CARET,ZXV011
          APPEND    "webPAS",ZXV011
          RESET     ZXV011
.
.         Load Triage Code
.
WRZXV210  MOVE      BLANKSTR,ZXV012              * set default value
.
          MATCH     SP3,EMVITRIG                 * field populated ?
          GOTO      WRZXV220 IF EQUAL            * no
.
          MOVE      EMVITRIG,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV012
          ENDSET    ZXV012
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSA,ANSA,EMVITRIG
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV012
          APPEND    FIELDSTR,ZXV012
          APPEND    CARET,ZXV012
          APPEND    "webPAS",ZXV012
          RESET     ZXV012
.
WRZXV220  MOVE      ZERO,COUNTER                 * initialise counter
          MOVE      BLANKSTR,ZXV013              * set default value
.
          PACK      KEY14,VISNUMBR,ZERO,ZERO,TWO,SP20
          CALL      RSVSCMT1                     * position on visit
WRZXV225  CALL      RKVSCMT1                     * read next record
          BRANCH    OVRCD,WRZXV229               * eof - finished
.
          MATCH     VISNUMBR,VSCTVIST            * same visit still ?
          GOTO      WRZXV229 IF NOT EQUAL        * no - finished
.
          MATCH     "002",VSCTTYPE               * same comment type still ?
          GOTO      WRZXV229 IF NOT EQUAL        * no - finished
.
.         We have a comment record for the ED visit
.
          IF        COUNTER = 0
            MOVE      VSCTDATA,FIELDSTR          * 1st comment line
            CALL      SPCHR000
            MOVE      FIELDSTR,ZXV013
          ELSE
            ENDSET    ZXV013
            MATCH     "1",PTCNH7IL
            IF        @EQUAL
              RESET     ZXV013
              STRIP     ZXV013
              ENDSET    ZXV013
              APPEND    LINBREAK,ZXV013          * include line break
            ENDIF
            MOVE      VSCTDATA,FIELDSTR
            CALL      SPCHR000
            APPEND    FIELDSTR,ZXV013
          ENDIF
.
          ADD       ONE,COUNTER                  * increment line count
.
          MATCH     "1",PTCNH7IL
          IF        @EQUAL
            RESET     ZXV013
            STRIP     ZXV013
            MOVELPTR  ZXV013,F4                  * increment char count
            COMPARE   "996",F4
            GOTO      WRZXV225 IF LESS           * 1000 chars max (inc. lfeed)
          ELSE
            COMPARE   TEN,COUNTER
            GOTO      WRZXV225 IF LESS           * 10 lines max
          ENDIF
.
WRZXV229  IF        COUNTER > 0
            RESET     ZXV013
            STRIP     ZXV013
            MOVELPTR  ZXV013,F4
            IF        F4 = 0
              MOVE      BLANKSTR,ZXV013          * set default value
            ENDIF
          ENDIF
.
.         Load Transfer From Source for ED visits only
.
WRZXV400  MOVE      BLANKSTR,ZXV014              * set default value
          MATCH     SP5,EMVITSRC                 * blank transfer source ?
          GOTO      WRZXV410 IF EQUAL            * yes
.
          MOVE      EMVITSRC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV014
          ENDSET    ZXV014
.
          MOVE      "Unknown Code",FIELDSTR
          MOVE      EMVITSRC,KEY5
          CALL      RDPTVAD1
          IF        OVRCD = 0
            MOVE      PTVADESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV014
          APPEND    FIELDSTR,ZXV014
          APPEND    CARET,ZXV014
          APPEND    "webPAS",ZXV014
          RESET     ZXV014
.
.         Load Employment Status Indicator
.
WRZXV410  MOVE      BLANKSTR,ZXV002              * set default value
.
          MATCH     SP3,PMVXEMPL                 * field populated ?
          GOTO      WRZXV450 IF EQUAL            * no
.
          MOVE      PMVXEMPL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV002
          ENDSET    ZXV002
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSK,ANSD,PMVXEMPL
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV002
          APPEND    FIELDSTR,ZXV002
          APPEND    CARET,ZXV002
          APPEND    "webPAS",ZXV002
          RESET     ZXV002
.
.         Load EMR Discharge Destination (ZXV.28)
.
WRZXV450  MOVE      BLANKSTR,ZXV028              * set default value
.
          MATCH     SP3,EMVIDSTA                 * EMR field populated ?
          GOTO      WRZXV460 IF EQUAL            * no
.
          MOVE      EMVIDSTA,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV028
          ENDSET    ZXV028
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSE,ANSD,EMVIDSTA
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV028
          APPEND    FIELDSTR,ZXV028
          APPEND    CARET,ZXV028
          APPEND    "webPAS",ZXV028
          RESET     ZXV028
.
.         Load EMR Transfer to Destination (ZXV.29)
.
WRZXV460  MOVE      BLANKSTR,ZXV029              * set default value
.
          MATCH     SP5,EMVIDEST
          GOTO      WRZXV470 IF EQUAL
.
          MOVE      EMVIDEST,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV029
          ENDSET    ZXV029
.
          MOVE      "Unknown Code",FIELDSTR
          MOVE      EMVIDEST,KEY5
          CALL      RDPTVAD1
          IF        OVRCD = 0
            MOVE      PTVADESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV029
          APPEND    FIELDSTR,ZXV029
          APPEND    CARET,ZXV029
          APPEND    "webPAS",ZXV029
          RESET     ZXV029
.
          CALL      LVIN0000                     * load visit interpreter
.
.         ED Purchaser (Cat HP)
.
WRZXV470  MOVE      BLANKSTR,ZXV051              * set default value
.
          MATCH     SP3,EMVIPURC                 * field populated ?
          GOTO      WRZXV500 IF EQUAL            * no
.
          MOVE      EMVIPURC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV051
          ENDSET    ZXV051
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSH,ANSP,EMVIPURC
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV051
          APPEND    FIELDSTR,ZXV051
          APPEND    CARET,ZXV051
          APPEND    "webPAS",ZXV051
          RESET     ZXV051
.
          GOTO      WRZXV550
.
.         Load Transfer From Source
.
WRZXV500  MOVE      BLANKSTR,ZXV014              * set default value
.
          MOVE      VISNUMBR,KEY8
          CALL      RDPTDAD1
          BRANCH    OVRCD,WRZXV550
.
          MATCH     SP5,PTDAADTS
          GOTO      WRZXV550 IF EQUAL
.
          MOVE      PTDAADTS,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV014
          ENDSET    ZXV014
.
          MOVE      "Unknown Code",FIELDSTR
          MOVE      PTDAADTS,KEY5
          CALL      RDPTVAD1
          IF        OVRCD = 0
            MOVE      PTVADESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV014
          APPEND    FIELDSTR,ZXV014
          APPEND    CARET,ZXV014
          APPEND    "webPAS",ZXV014
          RESET     ZXV014
.
.         Load Referral Source
.
WRZXV550  MOVE      BLANKSTR,ZXV015              * set default value
.
          BRANCH    MESSNUMB,WRZXV560:  A01 - ADT Admission
                             WRZXV560:  A02 - ADT Transfer
                             WRZXV560:  A03 - ADT Discharge
                             WRZXV580:  A03 - Emergency Discharge
                             WRZXV570:  A04 - O/P Attendance
                             WRZXV580:  A04 - Emergency Attendance
                             WRZXV570:  A05 - O/P Booking
                             WRZXV560:  A08 - ADT Visit Update
                             WRZXV570:  A08 - O/P Visit Update
                             WRZXV580:  A08 - Emergency Visit Update
                             WRZXV560:  A11 - ADT Cancel Admission
                             WRZXV570:  A11 - O/P Unattend
                             WRZXV580:  A11 - Emergency Cancel Visit
                             WRZXV560:  A12 - ADT Cancel Transfer
                             WRZXV560:  A13 - ADT Cancel Discharge
                             WRZXV580:  A13 - Emergency Cancel Discharge
                             WRZXV560:  A14 - ADT Pre-admit
                             WRZXV560:  A21 - ADT On-Leave
                             WRZXV560:  A22 - ADT Return from Leave
                             WRZXV560:  A27 - ADT Cancel Pre-admit
                             WRZXV800:  A28 - PMI Patient Registration
                             WRZXV800:  A31 - PMI Update
                             WRZXV800:  A34 - PMI Merge
                             WRZXV570:  A38 - O/P Cancel Booking
                             WRZXV560:  A44 - ADT Move Visit
                             WRZXV570:  A44 - O/P Move Visit
                             WRZXV580:  A44 - Emergency Move Visit
                             WRZXV900:  M02 - HCP Master File
                             WRZXV900:  S12 - Notify New Booking
                             WRZXV900:  S14 - Notify Change Booking
                             WRZXV900:  S15 - Notify Cancel Booking
                             WRZXV900:  I12 - Add A/H Referral
                             WRZXV900:  I13 - Change A/H Referral
                             WRZXV900:  I14 - Delete A/H Referral
                             WRZXV900:  A03 - Add A/H Encounter
                             WRZXV900:  A08 - Modify A/H Encounter
                             WRZXV900:  A13 - Cancel A/H Encounter
                             WRZXV800:  A05 - W/L Booking
                             WRZXV800:  A08 - W/L Booking Update
                             WRZXV800:  A38 - W/L Cancel Booking
                             WRZXV900:  M01 - O/P clinic master & type
                             WRZXV900:  A44 - Change U/R for Waiting List
                             WRZXV800:  A02 - W/L Transfer
                             WRZXV570:  A03 - O/P discharge
                             WRZXV570:  A13 - Cancel O/P discharge
                             WRZXV900:  A44 - Change U/R for Referral
                             WRZXV800:  I12 - Add W/L entry
                             WRZXV800:  I13 - Update W/L entry
                             WRZXV800:  I14 - Remove W/L entry
                             WRZXV800   A34 - PMI UnMerge
.
.         I/P source of referral is based on Cat S
.
WRZXV560  PACK      TCODE,ANSS,SP1
          MOVE      ASRCE,DIM3
          CALL      SSREF000                     * set zxv.015 for ip/op/emr
          GOTO      WRZXV800
.
.         O/P source of referral is based on outsitaf.ostcatg
.
WRZXV570  MATCH     SP3,OBASITE                  * site blank ?
          GOTO      WRZXV800 IF EQUAL            * yes
.
          MOVE      OBASITE,KEY6
          CALL      RDSITA1                      * site on file ?
          BRANCH    OVRCD,WRZXV800               * no
.
          MATCH     SP2,OSTCATG                  * site category blank ?
          GOTO      WRZXV800 IF EQUAL            * yes
.
          MOVE      OSTCATG,TCODE
          MOVE      OBASRCR,DIM3
          CALL      SSREF000                     * set zxv.015 for ip/op/emr
          GOTO      WRZXV800
.
.         ED source of referral is based on Cat em
.
WRZXV580  PACK      TCODE,CATEM
          MOVE      EMVIUC21,DIM3
.
          CALL      SSREF000                     * set zxv.015 for ip/op/emr
          GOTO      WRZXV595
.
WRZXV595  CALL      EMZXV000                     * EMR additional ZXV fields
          GOTO      WRZXV800
.
WRZXV600  CALL      WLZXV000                     * W/L ZXV fields
          GOTO      WRZXV800
.
WRZXV700  CALL      AHZXV000                     * A/H Referral ZXV fields
          GOTO      WRZXV800
.
WRZXV750  CALL      ENZXV000                     * Encounter ZXV fields
          GOTO      WRZXV800
.
WRZXV800  PACK      SEGSTRNG,ANSZ,ANSX,ANSV,PIPE:
                             ZXV001,PIPE,ZXV002,PIPE,ZXV003,PIPE,ZXV004,PIPE:
                             ZXV005,PIPE,ZXV006,PIPE,ZXV007,PIPE,ZXV008,PIPE:
                             ZXV009,PIPE,ZXV010,PIPE,ZXV011,PIPE,ZXV012,PIPE:
                             ZXV013,PIPE,ZXV014,PIPE,ZXV015,PIPE,ZXV016,PIPE:
                             ZXV017,PIPE,ZXV018,PIPE,ZXV019,PIPE,ZXV020,PIPE:
                             ZXV021,PIPE,ZXV022,PIPE,ZXV023,PIPE,ZXV024,PIPE:
                             ZXV025,PIPE,ZXV026,PIPE,ZXV027,PIPE,ZXV028,PIPE:
                             ZXV029,PIPE,ZXV030,PIPE,ZXV031,PIPE,ZXV032,PIPE:
                             ZXV033,PIPE,ZXV034,PIPE,ZXV035,PIPE,ZXV036,PIPE:
                             ZXV037,PIPE,ZXV038,PIPE,ZXV039,PIPE,ZXV040,PIPE:
                             ZXV041,PIPE,ZXV042,PIPE,ZXV043,PIPE,ZXV044,PIPE:
                             ZXV045,PIPE,ZXV046,PIPE,ZXV047,PIPE,ZXV048,PIPE:
                             ZXV049,PIPE,ZXV050,PIPE,ZXV051,PIPE,ZXV052,PIPE:
                             ZXV053,PIPE,ZXV054,PIPE,ZXV055,PIPE,ZXV056,PIPE:
                             ZXV057,PIPE,ZXV058,PIPE,ZXV059,PIPE,ZXV060,PIPE:
                             ZXV061,PIPE,ZXV062,PIPE,ZXV063,PIPE,ZXV064,PIPE:
                             ZXV065,PIPE,ZXV066,PIPE,ZXV067,PIPE,ZXV068,PIPE:
                             ZXV069,PIPE,ZXV070,PIPE,ZXV071,PIPE,ZXV072,PIPE:
                             ZXV073,PIPE,ZXV074,PIPE,ZXV075,PIPE,ZXV076,PIPE:
                             ZXV077,PIPE,ZXV078,PIPE,ZXV079,PIPE,ZXV080,PIPE:
                             ZXV081,PIPE,ZXV082,PIPE,ZXV083,PIPE,ZXV084,PIPE:
                             ZXV085,PIPE,ZXV086,PIPE,ZXV087,PIPE,ZXV088,PIPE:
                             ZXV089,PIPE,ZXV090,PIPE,ZXV091,PIPE,ZXV092,PIPE:
                             ZXV093,PIPE,ZXV094,PIPE,ZXV095,PIPE,ZXV096,PIPE:
                             ZXV097,PIPE,ZXV098,PIPE,ZXV099,PIPE,ZXV100,PIPE:
                             ZXV101,PIPE,ZXV102,PIPE,ZXV103,PIPE,ZXV104,PIPE:
                             ZXV105,PIPE,ZXV106,PIPE,ZXV107,PIPE,ZXV108,PIPE:
                             ZXV109,PIPE,ZXV110,PIPE,ZXV111,PIPE,ZXV112,PIPE:
                             ZXV113,PIPE,ZXV114,PIPE,ZXV115,PIPE,ZXV116,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRZXV910:               * connection lost
                         WRZXV920                * timeout
.
WRZXV900  MOVE      ZERO,EXIT
          GOTO      WRZXV999
.
WRZXV910  MOVE      ONE,EXIT
          GOTO      WRZXV999
.
WRZXV920  MOVE      TWO,EXIT
.
WRZXV999  RETURN
+
.*****************************************************************************
.*                            SSREF000             Called by: WRZXV000       *
.*          Used for IP/OP/EMR source of referral zxv015                     *
.*****************************************************************************
SSREF000  MATCH     SP3,DIM3                     * field populated ?
          GOTO      SSREF999 IF EQUAL            * no
.
          MOVE      DIM3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV015
          ENDSET    ZXV015
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,TCODE,DIM3
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV015
          APPEND    FIELDSTR,ZXV015
          APPEND    CARET,ZXV015
          APPEND    "webPAS",ZXV015
          RESET     ZXV015
.
SSREF999  RETURN
+
.*****************************************************************************
.*                            BLNK0000             Called by: WRZXV000       *
.*          There are no catcomaf records for the visit, so write these      *
.*          fields as blanks, but include the pmsnutaf fields                *
.*****************************************************************************
.
BLNK0000  COMPARE  ZERO,MEALNUMB
          GOTO     BLNK9999 IF NOT EQUAL
.
          MOVE     ONE,MEALNUMB                  * initialise meal number
.
.         Loop through writing a record for each meal type (1, 3 and 5)
.
          WHILE    MEALNUMB < 6
            IF       MEALNUMB > 1
              APPEND   TILDA,ZXV031
            ENDIF
            IF       MEALNUMB = 1
              APPEND    PMNUDATE,ZXV031          * meal date
              APPEND    CARET,ZXV031
            ENDIF
            APPEND   MEALNUMB,ZXV031             * load blank catcomaf fields
            APPEND   CARET,ZXV031
            APPEND   BLANKSTR,ZXV031
            APPEND   CARET,ZXV031
            APPEND   BLANKSTR,ZXV031
.
.           Load the extra dietary information from pmsnutaf if this is the
.           first record
.
            PERFORM  MEALNUMB,LXDI0000           * load extra dietary info
.
            MOVE      ZERO,FORM1                 * initialise counter
            WHILE     FORM1 < 4
              ADD       ONE,FORM1
              APPEND    TILDA,ZXV031
              APPEND    MEALNUMB,ZXV031
              APPEND    CARET,ZXV031
              APPEND    BLANKSTR,ZXV031
              APPEND    CARET,ZXV031
              APPEND    BLANKSTR,ZXV031
            DO
.
            ADD      TWO,MEALNUMB                * increment meal number
          DO
.
BLNK9999  RETURN
+
.*****************************************************************************
.*                            LXDI0000             Called by: WRZXV000       *
.*                Load Extra Dietary Information for ZXV.31                  *
.*****************************************************************************
.
.           Load Fasting Flag
.
LXDI0000    APPEND    CARET,ZXV031
            MATCH     SP1,PMNUFAST               * fasting blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,ZXV031          * yes
            ELSE
              APPEND    PMNUFAST,ZXV031          * no
            ENDIF
.
.           Load Dietary Comment 1
.
            APPEND    CARET,ZXV031
            MATCH     PMNUCOM1,SP70              * comment text blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,ZXV031          * yes
            ELSE
              MOVE      PMNUCOM1,FIELDSTR        * no
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,ZXV031
            ENDIF
.
.           Load Dietary Comment 2
.
            APPEND    CARET,ZXV031
            MATCH     PMNUCOM2,SP70              * comment text blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,ZXV031          * yes
            ELSE
              MOVE      PMNUCOM2,FIELDSTR        * no
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,ZXV031
            ENDIF
.
.           Load Dietary Comment 3
.
            APPEND    CARET,ZXV031
            MATCH     PMNUCOM3,SP70              * comment text blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,ZXV031          * yes
            ELSE
              MOVE      PMNUCOM3,FIELDSTR        * no
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,ZXV031
            ENDIF
.
.           Load Dietary Comment 4
.
            APPEND    CARET,ZXV031
            MATCH     PMNUCOM4,SP70              * comment text blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,ZXV031          * yes
            ELSE
              MOVE      PMNUCOM4,FIELDSTR        * no
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,ZXV031
            ENDIF
.
.           Load Dietary Comment 5
.
            APPEND    CARET,ZXV031
            MATCH     PMNUCOM5,SP70              * comment text blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,ZXV031          * yes
            ELSE
              MOVE      PMNUCOM5,FIELDSTR        * no
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,ZXV031
            ENDIF
.
LXDI9999  RETURN
+
.*****************************************************************************
.*                            LDCT0000             Called by: WRZXV000       *
.*                Load catcomaf dietary Information for ZXV.31               *
.*****************************************************************************
LDCT0000  PACK      KEY16,VISNUMBR,CURRDATE,SP70 * current meal date onwards
          CALL      RDPMNUT1
          IF        OVRCD=0
            GOTO      LDCT0105
          ELSE
            MOVE      BLANKSTR,ZXV031
            GOTO      LDCT0900                   * no record
          ENDIF
.
LDCT0100  CALL      RKPMNUT1
          BRANCH    OVRCD,LDCT0900
.
          MATCH     VISNUMBR,PMNUADMN            * same visit still ?
          GOTO      LDCT0900 IF NOT EQUAL
.
          APPEND    TILDA,ZXV031                 * another meal date exists
.
.         Get the catcomaf record data for this meal date
.
LDCT0105  MOVE      ZERO,MEALNUMB                * initialise meal number
.
          PACK      KEY17,VISNUMBR,PMNUDATE,SP20
          CALL      RSCTCOM1                     * position before visit/date
LDCT0110  CALL      RKCTCOM1                     * read next record
          IF        OVRCD = 1
            CALL      BLNK0000                   * load catcomaf as blank data
            GOTO      LDCT0100                   * get next pmsnut record
          ENDIF
.
          MOVE      CTCOADMN,DIM8
          MATCH     VISNUMBR,DIM8                * same visit still ?
          IF        !@EQUAL
            CALL      BLNK0000                   * load catcomaf as blank data
            GOTO      LDCT0100                   * get next pmsnut record
          ENDIF
.
          MATCH     PMNUDATE,CTCODATE            * same date still ?
          GOTO      LDCT0100 IF NOT EQUAL        * get next pmsnut record
.
          ADD       ONE,MEALNUMB                 * increment meal number
.
          MOVE      ZERO,FORM1                   * initialise counter
          WHILE     FORM1 < 5
            IF        MEALNUMB > 1 & FORM1 = 0
              APPEND    TILDA,ZXV031
            ENDIF
            IF        (FORM1 = 0) & (MEALNUMB = 1)
              APPEND    PMNUDATE,ZXV031          * meal date
              APPEND    CARET,ZXV031
            ENDIF
.
            APPEND    CTCOMEAL,ZXV031            * meal type
            APPEND    CARET,ZXV031
.
            ADD       ONE,FORM1                  * increment counter
            LOAD      DIM3,FORM1,CTCODIET,CTCOIT02,CTCOIT03,CTCOIT04,CTCOIT05
            LOAD      DIM2,FORM1,CATDC,CATMJ,CATMJ,CATMJ,CATMJ
            MATCH     SP3,DIM3                   * field populated ?
            IF        @EQUAL
              APPEND    BLANKSTR,ZXV031
              APPEND    CARET,ZXV031
              APPEND    BLANKSTR,ZXV031
            ELSE
              MOVE      DIM3,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,ZXV031
              APPEND    CARET,ZXV031
              MOVE      "Unknown Code",FIELDSTR
              PACK      KEY5,DIM2,DIM3
              CALL      RDCODE1
              IF        OVRCD = 0
                MOVE      TDESC,FIELDSTR
                CALL      SPCHR000               * convert special characters
              ENDIF
              APPEND    FIELDSTR,ZXV031
            ENDIF
.
.           Only send the Extra Dietary information if this is the first set
.           of data for the first catcomaf record
.
            IF        (FORM1 = 1) & (MEALNUMB = 1)
              CALL      LXDI0000                 * load extra dietary info
            ENDIF
.
            IF        FORM1 < 5
              APPEND    TILDA,ZXV031
            ENDIF
          DO
          GOTO      LDCT0110
.
LDCT0900  RESET     ZXV031
.
LDCT9999  RETURN
+
.*****************************************************************************
.*                           IPZXV000                                        *
.*                  Format IP Extra visit details                            *
.*****************************************************************************
.
IPZXV000
.         Usual Accommodation
.
IPZXV100  MOVE      BLANKSTR,ZXV100              * set default value
.
          MATCH     SP3,PMVXUSAC                 * field populated ?
          GOTO      IPZXV103 IF EQUAL            * no
.
          MOVE      PMVXUSAC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV100
          ENDSET    ZXV100
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSK,ANSP,PMVXUSAC
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV100
          APPEND    FIELDSTR,ZXV100
          APPEND    CARET,ZXV100
          APPEND    "webPAS",ZXV100
          RESET     ZXV100
.
.         Coding Complete Date (ZXV.103) and Coding Complete Status (ZXV.104)
.
IPZXV103  MOVE      BLANKSTR,ZXV103              * set default value
          MOVE      "N",ZXV104                   * coding status = incomplete
.
          MATCH     SP8,ACODDTE                  * field populated ?
          GOTO      IPZXV104 IF EQUAL            * no
.
          MOVE      ACODDTE,ZXV103               * coding complete date
          MOVE      "Y",ZXV104                   * coding status = complete
.
IPZXV104  
.0930147  CALL      CODFLG00                     * TSK 0918020
.
.         Invoice Pending (ZXV.105)
.
          MOVE      ZERO,F1
IPZXV105  MOVE      BLANKSTR,ZXV105              * set default value
.
          PACK      KEY11,AADMNO,ZERO,ZERO,THREE,SP70
          CALL      RDVSXDC1
          IF        OVRCD<>1
            MATCH     SP70,VSXDVAL1
            IF        !@EQUAL
              MOVE      VSXDVAL1,ZXV105          * Amount to be Invoiced
              SQUEEZE   ZXV105
            ENDIF
          ELSE
            ADD       ONE,F1
            IF        F1<5
              CALL      CPOL0000                    * Check pooling table
              COMPARE   ZERO,OVRCD
              GOTO      IPZXV105 IF EQUAL
            ENDIF
          ENDIF
.
.         Invoice Total (ZXV.106)
.
IPZXV106  MOVE      BLANKSTR,ZXV106              * set default value
.
          PACK      KEY16,AADMNO,SP70
          CALL      RSPTINV3
          CALL      RKPTINV3
          BRANCH    OVRCD,IPZXV420
.
          MATCH     PINVADM,AADMNO
          GOTO      IPZXV420 IF NOT EQUAL        * get 1st invoice for adm
.
          MOVE      PINVAMT,FORM17P2
          MOVE      FORM17P2,ZXV106
          SQUEEZE   ZXV106

.         IP Intended Stay
.
IPZXV420  MOVE      BLANKSTR,ZXV042              * set default value
.
          MATCH     SP3,PMVXIDUS                 * field populated ?
          GOTO      IPZXV430 IF EQUAL            * no
.
          MOVE      PMVXIDUS,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV042
          ENDSET    ZXV042
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSV,ANSI,PMVXIDUS
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV042
          APPEND    FIELDSTR,ZXV042
          APPEND    CARET,ZXV042
          APPEND    "webPAS",ZXV042
          RESET     ZXV042
.
.         IP Preferred Accommodation
.
IPZXV430  MOVE      BLANKSTR,ZXV043              * set default value
.
          MATCH     SP3,PMVXPACC                 * field populated ?
          GOTO      IPZXV510 IF EQUAL            * no
.
          MOVE      PMVXPACC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV043
          ENDSET    ZXV043
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSB,ANSP,PMVXPACC
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV043
          APPEND    FIELDSTR,ZXV043
          APPEND    CARET,ZXV043
          APPEND    "webPAS",ZXV043
          RESET     ZXV043
.
.         I/P Purchaser (Cat HP)
.
IPZXV510  MOVE      BLANKSTR,ZXV051              * set default value
.
          MATCH     SP3,PTMIPHPU                 * field populated ?
          GOTO      IPZXV580 IF EQUAL            * no
.
          MOVE      PTMIPHPU,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV051
          ENDSET    ZXV051
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSH,ANSP,PTMIPHPU
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV051
          APPEND    FIELDSTR,ZXV051
          APPEND    CARET,ZXV051
          APPEND    "webPAS",ZXV051
          RESET     ZXV051
.
.         Phone Calls Allowed (ZXV.58)  - I/P ADT^A08 only
.
IPZXV580  IF        MESSNUMB = 8
            MATCH     "1",PMVXPALW
            IF        @EQUAL
              MOVE      ANSY,ZXV058
            ELSE
              MOVE      ANSN,ZXV058
            ENDIF
          ENDIF
.
.         Consent MyHR Record Upload (ZXV.89)
.
          CALL      GMYHR000
.
.         Discharge Delay / Cleared for Discharge Information (ZXV.114/115/116)
.
          CALL      GDISCH00
.
IPZXV999  RETURN
+
.---------------------------------------------------------------------------
.         Check if the Admission number in Pooling table 
.         ie. still in in the Queue for process to calculate invoice pending
.---------------------------------------------------------------------------
CPOL0000  BRANCH    COMPTABL,CPOL9000       * comparaf file doesn't exist
          BRANCH    IBAPTABL,CPOL9000       * 2nd index ibapolaf doesn't exist
.
          MOVE      "PTCNCIPA",D8           * hospital parameter
          COMPARE   ZERO,IBCNMHOS
          GOTO      CPOL1000 IF EQUAL
.
          PACK      KEY11,PMVXMHOS,D8,SP70
          CALL      RDCMPAR1                * Read system parameter
          BRANCH    OVRCD,CPOL1000
.
          MATCH     "0",CMPAACTV
          GOTO      CPOL2000 IF EQUAL       * found active data
.
.         Check parameter with blank hospital
.
CPOL1000  PACK      KEY11,SP3,D8,SP70
          CALL      RDCMPAR1                * Read default system parameter
          BRANCH    OVRCD,CPOL9000
.
          MATCH     "0",CMPAACTV
          GOTO      CPOL9000 IF NOT EQUAL   * found active data
.
.         Check if record in ibapolaf file waiting for process
.
CPOL2000  MOVE      "018",KEY3
          PACK      KEY21,KEY3,AADMNO,SP70
          CALL      RSIBPOL2
          CALL      RKIBPOL2
          BRANCH    OVRCD,CPOL9999
.
          MATCH     KEY3,IBPLTYPE            * Same type ?
          GOTO      CPOL9000 IF NOT EQUAL
.
          MATCH     AADMNO,IBPLVISN          * Same visit number ?
          GOTO      CPOL9000 IF NOT EQUAL
.
          DISPLAY   *W                       * wait 1 second
          MOVE      ZERO,OVRCD
          GOTO      CPOL9999
.
CPOL9000  MOVE      ONE,OVRCD
CPOL9999  RETURN
+
.---------------------------------------------------------------------------
. Get current Discharge (Delay) details from patatraf with type 028
. Input : PURNO    - UR Number
.       : VISNUMBR - Visit Number
.       : 028      - Visit Attribute Type
. Output: ZXV114   - Medically Cleared for Discharge Date/Time
.         ZXV115   - Primary Reason for Discharge Delay
.         ZXV116   - Secondary Reason for Discharge Delay
.---------------------------------------------------------------------------
GDISCH00  PACK      KEY35,PURNO,VISNUMBR,ZERO,TWO,EIGHT,Z70
          CALL      RSPTATR3
GDISCH10  CALL      RPPTATR3
          BRANCH    OVRCD,GDISCH99               * no record
.
          MATCH     PURNO,PTARURNO
          GOTO      GDISCH99 IF NOT EQUAL        * not same UR
.
          MATCH     VISNUMBR,PTARVISN
          GOTO      GDISCH99 IF NOT EQUAL        * not same Visit
.
          MATCH     "028",PTARTYPE
          GOTO      GDISCH99 IF NOT EQUAL        * not same type
.
GDISCH20  MATCH     "1",PTARDELR
          GOTO      GDISCH10 IF EQUAL            * record deleted, check next
.
.         Valid record type 028 found so populate Discharge Detail/Delay fields
.
.         ZXV.114   Medically Cleared for Discharge Date/Time
.
GDISCH30  MOVE      BLANKSTR,ZXV114              * load default value
.
          MATCH     SP8,PTARTXT1                 * date populated ?
          GOTO      GDISCH40 IF EQUAL            * no - finished field
.
          MOVE      PTARTXT1,ZXV114
          STRIP     ZXV114
          MATCH     SP8,PTARTXT2                 * time populated ?
          GOTO      GDISCH35 IF EQUAL            * no - finished field
.
          UNPACK    PTARTXT2,CHOUR,ANS,CMIN,ANS,CSEC
          ENDSET    ZXV114
          APPEND    CHOUR,ZXV114
          APPEND    CMIN,ZXV114
          APPEND    CSEC,ZXV114
.
GDISCH35  RESET     ZXV114
          REP       " 0",ZXV114
.
.         ZXV.115   Primary Reason for Discharge Delay
.
GDISCH40  MOVE      BLANKSTR,ZXV115              * set default value
.
          MATCH     SP3,PTARCOD1                 * field populated ?
          GOTO      GDISCH50 IF EQUAL            * no
.
          MOVE      PTARCOD1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV115
          ENDSET    ZXV115
.
          MOVE      SP4,D4
          MOVE      "Unknown Code",FIELDSTR
          MOVE      "z1",D2
          PACK      KEY5,D2,PTARCOD1
          CALL      RDCODE1
          BRANCH    OVRCD,GDISCH45
.
          MOVE      THCSCOD,FIELDSTR             * hdp value
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,D4
.
          MOVE      PTCDLDES,FIELDSTR            * long description
          CALL      SPCHR000                     * convert special characters
.
GDISCH45  APPEND    CARET,ZXV115
          STRIP     D4
          APPEND    D4,ZXV115
          APPEND    " - ",ZXV115
          APPEND    FIELDSTR,ZXV115
          APPEND    CARET,ZXV115
          APPEND    "webPAS",ZXV115
          RESET     ZXV115
.
.         ZXV.116   Secondary Reason for Discharge Delay
.
GDISCH50  MOVE      BLANKSTR,ZXV116              * set default value
.
          MATCH     SP3,PTARCOD2                 * field populated ?
          GOTO      GDISCH90 IF EQUAL            * no
.
          MOVE      PTARCOD2,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV116
          ENDSET    ZXV116
.
          MOVE      SP4,D4
          MOVE      "Unknown Code",FIELDSTR
          MOVE      "z1",D2
          PACK      KEY5,D2,PTARCOD2
          CALL      RDCODE1
          BRANCH    OVRCD,GDISCH55
.
          MOVE      THCSCOD,FIELDSTR             * hdp value
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,D4
.
          MOVE      PTCDLDES,FIELDSTR            * long description
          CALL      SPCHR000                     * convert special characters
.
GDISCH55  APPEND    CARET,ZXV116
          STRIP     D4
          APPEND    D4,ZXV116
          APPEND    " - ",ZXV116
          APPEND    FIELDSTR,ZXV116
          APPEND    CARET,ZXV116
          APPEND    "webPAS",ZXV116
          RESET     ZXV116
.
GDISCH90
.
GDISCH99  RETURN
+
.*****************************************************************************
.*                        CODFLG00 (from MRTWEB02)                           *
.* Coding Complete/Saved flag                                                *
.*****************************************************************************
CODFLG00  MOVE      ZERO,EXIT
.
          PACK      KEY13,AADMNO,Z70
          CALL      RSPTECD1
          CALL      RPPTECD1
          IF        OVRCD=1
            MOVE      ONE,EXIT
            GOTO      CODFLG10
          ENDIF
.
          MATCH     AADMNO,PTEDADMN
          IF        !@EQUAL
            MOVE      ONE,EXIT
            GOTO      CODFLG10
          ENDIF
.
CODFLG10  PACK      KEY13,AADMNO,Z70
          CALL      RSPTECO1
          CALL      RPPTECO1
          IF        OVRCD=1
            IF        EXIT=1
              GOTO      CODFLG90
            ENDIF
          ENDIF
.
          MATCH     AADMNO,PTEOADMN
          IF        !@EQUAL
            IF        EXIT=1
              GOTO      CODFLG90
            ENDIF
          ENDIF
.
          MOVE      ANSY,ZXV104                  * coding complete flag = Y
          GOTO      CODFLG99
.
CODFLG90  MOVE      ANSN,ZXV104                  * coding complete flag = N
CODFLG99  RETURN
+
.*****************************************************************************
.*                            GMYHR000             Called by: IPZXV000       *
.*          Get the MyHR Consent value and populate ZXV.89                   *
.* Requires: PTCNBMYH: parameter for value to send for blank field           *
.*           PMVXUDF7: MyHR Consent field                                    *
.* Returns:  ZXV.89: MyHR Consent ("", N or Y)                               *
.*****************************************************************************
.
GMYHR000  MATCH     SP1,PMVXUDF7            * MyHR consent populated ?
          GOTO      GMYHR500 IF NOT EQUAL   * yes
.
.         The MyHR consent field is blank, so use the parameter
.         to determine what to send in ZXV.89
.
          MATCH     SP1,PTCNBMYH            * no - send blank as blank ?
          GOTO      GMYHR900 IF EQUAL       * yes
.
          MATCH     "0",PTCNBMYH            * send blank as "N" ?
          GOTO      GMYHR920 IF EQUAL       * yes
.
          GOTO      GMYHR910                * send blank as "Y"
. 
GMYHR500  MATCH     "0",PMVXUDF7            * set to "N" ?
          GOTO      GMYHR920 IF EQUAL       * yes - send "N"
. 
          GOTO      GMYHR910                * no - send "Y"
.
GMYHR900  MOVE      BLANKSTR,ZXV089
          GOTO      GMYHR999
.
GMYHR910  MOVE      ANSY,ZXV089
          GOTO      GMYHR999
.
GMYHR920  MOVE      ANSN,ZXV089
.
GMYHR999  RETURN
+
.*****************************************************************************
.*                           WRZLS000           Called by: all message types *
.*            Write Mental Health Legal Status segment                       *
.* Send based on parameter PTCNSZLS: 1 = Send for A31 messages only          *
.*                                   2 = Send for all patient messages       *
.*                               Other = Not sending ZLS segment             *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WRZLS000  MATCH     "1",PTCNSZLS
          IF        @EQUAL
            COMPARE   TWENTY2,MESSNUMB
            GOTO      WRZLS900 IF NOT EQUAL      * message type is not A31
          ELSE
            MATCH     "2",PTCNSZLS
            GOTO      WRZLS900 IF NOT EQUAL      * not sending ZLS segment
          ENDIF
.
          MOVE      "ZLS",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZLS] segment",*R,*N;
          ENDIF
.
.         Send a "delete" segment first to indicate to the receiver that
.         it needs to delete all the current records
.
          MOVE      BLANKSTR,ZLS001              * set all fields to null
          MOVE      BLANKSTR,ZLS002
          MOVE      BLANKSTR,ZLS003
          MOVE      BLANKSTR,ZLS004
          MOVE      BLANKSTR,ZLS005
          MOVE      BLANKSTR,ZLS006
          MOVE      BLANKSTR,ZLS007
          MOVE      BLANKSTR,ZLS008
          MOVE      BLANKSTR,ZLS009
          MOVE      BLANKSTR,ZLS010
          MOVE      BLANKSTR,ZLS011
          MOVE      BLANKSTR,ZLS012
          MOVE      BLANKSTR,ZLS013
          MOVE      BLANKSTR,ZLS014
          MOVE      BLANKSTR,ZLS015
          MOVE      BLANKSTR,ZLS016
          MOVE      BLANKSTR,ZLS017
          MOVE      BLANKSTR,ZLS018
          MOVE      BLANKSTR,ZLS019
          MOVE      BLANKSTR,ZLS020
          MOVE      BLANKSTR,ZLS021
.
          PACK      SEGSTRNG,ANSZ,ANSL,ANSS,PIPE:
                             ZLS001,PIPE,ZLS002,PIPE,ZLS003,PIPE,ZLS004,PIPE:
                             ZLS005,PIPE,ZLS006,PIPE,ZLS007,PIPE,ZLS008,PIPE:
                             ZLS009,PIPE,ZLS010,PIPE,ZLS011,PIPE,ZLS012,PIPE:
                             ZLS013,PIPE,ZLS014,PIPE,ZLS015,PIPE,ZLS016,PIPE:
                             ZLS017,PIPE,ZLS018,PIPE,ZLS019,PIPE,ZLS020,PIPE:
                             ZLS021,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRZLS910:               * connection lost
                         WRZLS920                * timeout
.
.         Now send the mental health legal status details for the patient
.
          MOVE      ZERO,COUNTER                 * initialise record counter
.
          PACK      KEY16,PURNO,SP70
          CALL      RSMHHLS1
WRZLS250  CALL      RKMHHLS1                     * Legal Status Header table
          BRANCH    OVRCD,WRZLS900               * eof - finished
.
          MATCH     PURNO,MHHLURNO               * same U/R still ?
          GOTO      WRZLS900 IF NOT EQUAL        * no - finished
.
          MATCH     SP70,MHHLEDAT
          GOTO      WRZLS250 IF NOT EQUAL        * status end date ?
.
          PACK      KEY32,MHHLURNO,MHHLUNIQ,SP70
          CALL      RSMHDLS1
WRZLS350  CALL      RKMHDLS1                     * Legal Status Header table
          BRANCH    OVRCD,WRZLS250               * eof - finished
.
          MATCH     MHHLURNO,MHDLURNO            * same U/R still ?
          GOTO      WRZLS250 IF NOT EQUAL        * no - finished
.
          MATCH     MHHLUNIQ,MHDLUNIQ            * same unique number ?
          GOTO      WRZLS250 IF NOT EQUAL        * no - finished
.
          MATCH     "0",MHDLACTV
          GOTO      WRZLS350 IF NOT EQUAL        * status active ?
.
          PACK      KEY5,ANSL,ANSS,MHDLSCOD,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,WRZLS350
.
          MATCH     "I",TCINDC1
          GOTO      WRZLS350 IF EQUAL            * don't send if 'informal'
.
.         legal status record found so load details to send
.
WRZLS400  CALL      CLZLS000                     * clear all ZLS fields
.
.         Set ID (ZLS.1)
.
WRZLS410  ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,ZLS001               * load set id
          SQUEEZE   ZLS001
.
.         Legal Status Code (category LS) (ZLS.2)
.
WRZLS420  MOVE      BLANKSTR,ZLS002              * default to blank
          MATCH     SP3,MHDLSCOD
          GOTO      WRZLS430 IF EQUAL
.
          MOVE      MHDLSCOD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS002
          ENDSET    ZLS002
          APPEND    CARET,ZLS002
          MOVE      TDESC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZLS002
          APPEND    CARET,ZLS002
          APPEND    "webPAS",ZLS002
          RESET     ZLS002
.
.         Start Date/Time (ZLS.3)
.
WRZLS430  MOVE      BLANKSTR,ZLS003              * default to blank
          MATCH     SP70,MHDLSDAT
          GOTO      WRZLS440 IF EQUAL
.
          MOVE      MHDLSDAT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS003
          ENDSET    ZLS003
.
          UNPACK    MHDLSTIM,CHOUR,ANS,CMIN,ANS,CSEC
          APPEND    CHOUR,ZLS003
          APPEND    CMIN,ZLS003
          APPEND    CSEC,ZLS003
          RESET     ZLS003
          REP       " 0",ZLS003
.
.         End Date/Time (ZLS.4)
.
WRZLS440  MOVE      BLANKSTR,ZLS004              * default to blank
          MATCH     SP70,MHDLEDAT
          GOTO      WRZLS450 IF EQUAL
.
          MOVE      MHDLEDAT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS004
          ENDSET    ZLS004
.
          UNPACK    MHDLETIM,CHOUR,ANS,CMIN,ANS,CSEC
          APPEND    CHOUR,ZLS004
          APPEND    CMIN,ZLS004
          APPEND    CSEC,ZLS004
          RESET     ZLS004
          REP       " 0",ZLS004
.
.         Review Status (category LR) (ZLS.5)
.
WRZLS450  MOVE      BLANKSTR,ZLS005              * default to blank
          MATCH     SP70,MHDLSTAT
          GOTO      WRZLS460 IF EQUAL
.
          MOVE      MHDLSTAT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS005
          ENDSET    ZLS005
          APPEND    CARET,ZLS005
.
          PACK      KEY5,ANSL,ANSR,MHDLSTAT,SP70
          CALL      RDCODE1
          IF        OVRCD = 1
            MOVE      "Unknown Code",FIELDSTR
          ELSE
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,ZLS005
          APPEND    CARET,ZLS005
          APPEND    "webPAS",ZLS005
          RESET     ZLS005
.
.         Review HCP (ZLS.6)
.
WRZLS460  MOVE      BLANKSTR,ZLS006              * default to blank
          MATCH     SP70,MHDLHCPC
          GOTO      WRZLS470 IF EQUAL
.
          MOVE      MHDLHCPC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS006
          ENDSET    ZLS006
          APPEND    CARET,ZLS006
.
          MOVE      MHDLHCPC,KEY10
          CALL      RDPMHCP1
          IF        OVRCD = 1
            APPEND    "Unknown code",ZLS006
            APPEND    CARET,ZLS006
            APPEND    CARET,ZLS006
            APPEND    CARET,ZLS006
            APPEND    CARET,ZLS006
          ELSE
            MOVE      PMHCSNAM,FIELDSTR          * load HCP surname
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZLS006
            APPEND    CARET,ZLS006
.
            MOVE      PMHCGNAM,FIELDSTR          * load HCP given names
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZLS006
            APPEND    CARET,ZLS006
            APPEND    CARET,ZLS006
            APPEND    CARET,ZLS006
.
            MOVE      PMHCTITL,FIELDSTR          * load HCP title
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZLS006
          ENDIF
          APPEND    CARET,ZLS006
          APPEND    CARET,ZLS006
          APPEND    "webPAS",ZLS006
          RESET     ZLS006
.
.         Review Location (category PO) (ZLS.7)
.
WRZLS470  MOVE      BLANKSTR,ZLS007              * default to blank
          MATCH     SP70,MHDLPOCC
          GOTO      WRZLS480 IF EQUAL
.
          MOVE      MHDLPOCC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS007
          ENDSET    ZLS007
          APPEND    CARET,ZLS007
.
          PACK      KEY5,ANSP,ANSO,MHDLPOCC
          CALL      RDCODE1
          IF        OVRCD = 1
            MOVE      "Unknown Code",FIELDSTR
          ELSE
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,ZLS007
          APPEND    CARET,ZLS007
          APPEND    "webPAS",ZLS007
          RESET     ZLS007
.
.         Review Date/Time (ZLS.8)
.
WRZLS480  MOVE      BLANKSTR,ZLS008              * default to blank
          MATCH     SP70,MHDLRDAT
          GOTO      WRZLS490 IF EQUAL
.
          MOVE      MHDLRDAT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS008
          ENDSET    ZLS008
.
          UNPACK    MHDLRTIM,CHOUR,ANS,CMIN,ANS,CSEC
          APPEND    CHOUR,ZLS008
          APPEND    CMIN,ZLS008
          APPEND    CSEC,ZLS008
          RESET     ZLS008
          REP       " 0",ZLS008
.
.         Reminder Date (ZLS.9)
.
WRZLS490  MOVE      BLANKSTR,ZLS009              * default to blank
          MATCH     SP70,MHDLREMD
          GOTO      WRZLS500 IF EQUAL
.
          MOVE      MHDLREMD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS009
          RESET     ZLS009
          REP       " 0",ZLS009
.
.         Comments (ZLS.10)
.
WRZLS500  MATCH     SP70,MHDLCMNT
          IF        @EQUAL
            MATCH     SP70,MHDLCMN2
            IF        @EQUAL
              MOVE      BLANKSTR,ZLS010          * blankstr if 2 blank lines
              GOTO      WRZLS505
            ENDIF
          ELSE
            MOVE      MHDLCMNT,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,ZLS010
            ENDSET    ZLS010
            APPEND    SP1,ZLS010
          ENDIF
          MATCH     SP70,MHDLCMN2
          IF        !@EQUAL
            MOVE      MHDLCMN2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZLS010
          ENDIF
WRZLS505  RESET     ZLS010
          STRIP     ZLS010
.
.         User ID created (websecaf) (ZLS.11)
.
WRZLS510  MOVE      BLANKSTR,ZLS011              * default to blank
          MATCH     SP70,MHDLCUID
          GOTO      WRZLS520 IF EQUAL
.
          MOVE      MHDLCUID,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS011
          ENDSET    ZLS011
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY10,MHDLCUID
          CALL      RDWBSE1
          IF        OVRCD = 0
            MOVE      WBSENAM,FIELDSTR           * web user name
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZLS011
          APPEND    FIELDSTR,ZLS011
          APPEND    CARET,ZLS011
          APPEND    "webPAS",ZLS011
          RESET     ZLS011
.
.         Date/Time Record created (ccyymmddhhmmss) (ZLS.12)
.
WRZLS520  MOVE      BLANKSTR,ZLS012              * default to blank
          MATCH     SP70,MHDLCDAT
          GOTO      WRZLS530 IF EQUAL
.
          MOVE      MHDLCDAT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS012
          ENDSET    ZLS012
.
          UNPACK    MHDLCTIM,CHOUR,ANS,CMIN,ANS,CSEC
          APPEND    CHOUR,ZLS012
          APPEND    CMIN,ZLS012
          APPEND    CSEC,ZLS012
          RESET     ZLS012
          REP       " 0",ZLS012
.
.         User ID updated (websecaf) (ZLS.13)
.
WRZLS530  MOVE      BLANKSTR,ZLS013              * default to blank
          MATCH     SP70,MHDLUUID
          GOTO      WRZLS540 IF EQUAL
.
          MOVE      MHDLUUID,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS013
          ENDSET    ZLS013
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY10,MHDLUUID
          CALL      RDWBSE1
          IF        OVRCD = 0
            MOVE      WBSENAM,FIELDSTR           * web user name
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZLS013
          APPEND    FIELDSTR,ZLS013
          APPEND    CARET,ZLS013
          APPEND    "webPAS",ZLS013
          RESET     ZLS013
.
.         Date/Time Record updated (ccyymmddhhmmss) (ZLS.14)
.
WRZLS540  MOVE      BLANKSTR,ZLS014              * default to blank
          MATCH     SP70,MHDLUDAT
          GOTO      WRZLS550 IF EQUAL
.
          MOVE      MHDLUDAT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS014
          ENDSET    ZLS014
.
          UNPACK    MHDLUTIM,CHOUR,ANS,CMIN,ANS,CSEC
          APPEND    CHOUR,ZLS014
          APPEND    CMIN,ZLS014
          APPEND    CSEC,ZLS014
          RESET     ZLS014
          REP       " 0",ZLS014
.
.         Supplementary Legal Status (category LS) (ZLS.15)
.
WRZLS550  MOVE      BLANKSTR,ZLS015              * default to blank
          MATCH     SP70,MHDLSULS
          GOTO      WRZLS560 IF EQUAL
.
          MOVE      MHDLSULS,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS015
          ENDSET    ZLS015
          APPEND    CARET,ZLS015
.
          PACK      KEY5,ANSL,ANSS,MHDLSULS
          CALL      RDCODE1
          IF        OVRCD = 1
            MOVE      "Unknown Code",FIELDSTR
          ELSE
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,ZLS015
          APPEND    CARET,ZLS015
          APPEND    "webPAS",ZLS015
          RESET     ZLS015
.
.         Supplementary LS Date (ccyymmdd) (ZLS.16)
.
WRZLS560  MOVE      BLANKSTR,ZLS016              * default to blank
          MATCH     SP70,MHDLSLSD
          GOTO      WRZLS570 IF EQUAL
.
          MOVE      MHDLSLSD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS016
          RESET     ZLS016
          REP       " 0",ZLS016
.
.         Date Review Performed (ccyymmdd) (ZLS.17)
.
WRZLS570  MOVE      BLANKSTR,ZLS017              * default to blank
          MATCH     SP70,MHDLRPDT
          GOTO      WRZLS580 IF EQUAL
.
          MOVE      MHDLRPDT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS017
          RESET     ZLS017
          REP       " 0",ZLS017
.
.         Court Notices Sent Date (ccyymmdd) (ZLS.18)
.
WRZLS580  MOVE      BLANKSTR,ZLS018              * default to blank
          MATCH     SP70,MHDLCNSD
          GOTO      WRZLS590 IF EQUAL
.
          MOVE      MHDLCNSD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS018
          RESET     ZLS018
          REP       " 0",ZLS018
.
.         Tribunal Date (ccyymmdd) (ZLS.19)
.
WRZLS590  MOVE      BLANKSTR,ZLS019              * default to blank
          MATCH     SP70,MHDLTRDT
          GOTO      WRZLS600 IF EQUAL
.
          MOVE      MHDLTRDT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS019
          RESET     ZLS019
          REP       " 0",ZLS019
.
.         Lodged with Court Date (ccyymmdd) (ZLS.20)
.
WRZLS600  MOVE      BLANKSTR,ZLS020              * default to blank
          MATCH     SP70,MHDLLWCD
          GOTO      WRZLS610 IF EQUAL
.
          MOVE      MHDLLWCD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS020
          RESET     ZLS020
          REP       " 0",ZLS020
.
.         Court Type Code (category xy) (ZLS.21)
.
WRZLS610  MOVE      BLANKSTR,ZLS021              * default to blank
          MATCH     SP70,MHDLCTCD
          GOTO      WRZLS800 IF EQUAL
.
          MOVE      MHDLCTCD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLS021
          ENDSET    ZLS021
          APPEND    CARET,ZLS021
.
          PACK      KEY5,CATxy,MHDLCTCD
          CALL      RDCODE1
          IF        OVRCD = 1
            MOVE      "Unknown Code",FIELDSTR
          ELSE
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,ZLS021
          APPEND    CARET,ZLS021
          APPEND    "webPAS",ZLS021
          RESET     ZLS021
.
.         Send the ZLS segment
.
WRZLS800  PACK      SEGSTRNG,ANSZ,ANSL,ANSS,PIPE:
                             ZLS001,PIPE,ZLS002,PIPE,ZLS003,PIPE,ZLS004,PIPE:
                             ZLS005,PIPE,ZLS006,PIPE,ZLS007,PIPE,ZLS008,PIPE:
                             ZLS009,PIPE,ZLS010,PIPE,ZLS011,PIPE,ZLS012,PIPE:
                             ZLS013,PIPE,ZLS014,PIPE,ZLS015,PIPE,ZLS016,PIPE:
                             ZLS017,PIPE,ZLS018,PIPE,ZLS019,PIPE,ZLS020,PIPE:
                             ZLS021,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRZLS910:               * connection lost
                         WRZLS920                * timeout
.
          GOTO      WRZLS350                     * get next record
.
WRZLS900  MOVE      ZERO,EXIT
          GOTO      WRZLS999
.
WRZLS910  MOVE      ONE,EXIT
          GOTO      WRZLS999
.
WRZLS920  MOVE      TWO,EXIT
.
WRZLS999  RETURN
+
.*****************************************************************************
.*                           WRZEC000         Called by: A08A,A08O,A08E,I13L *
.*                  Write Extra Compensable details segment                  *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WRZEC000  MATCH     "1",PTCNSZEC                 * sending ZEC segment ?
          GOTO      WRZEC900 IF NOT EQUAL        * no - finished
.
          MOVE      "ZEC",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZEC] segment",*R,*N;
          ENDIF
.
          CALL      CLZEC000                    * clear ZEC fields
.
.         Read record for claim type matching PV1 Segment PV1-020
.
          PACK      KEY11,VISNUMBR,PV1CLCOD,SP70
          CALL      RDPMEXT1                    * record on file ?
          BRANCH    OVRCD,WRZEC900              * no - finished
.
          PACK      KEY5,ANSC,ANSL,PV1CLCOD,SP70
          CALL      RDCODE1                     * code on file ?
          BRANCH    OVRCD,WRZEC900              * no - finished
.
          MATCH     "A",TCINDC1                 * Australian Defence Force
          IF        @EQUAL
            CALL      ZECA0000                  * Australian Defence Force
            GOTO      WRZEC800
          ENDIF
.
          MATCH     "E",TCINDC1                 * Overseas Student
          IF        @EQUAL
            CALL      ZECE0000                  * Overseas Student
            GOTO      WRZEC800
          ENDIF
.
          MATCH     "F",TCINDC1                 * Foreign Defence Force
          IF        @EQUAL
            CALL      ZECF0000                  * Foreign Defence Force
            GOTO      WRZEC800
          ENDIF
.
          MATCH     "G",TCINDC1                 * Ineligible Overseas Visitor
          IF        @EQUAL
            CALL      ZECG0000                  * Ineligible Overseas Visitor
            GOTO      WRZEC800
          ENDIF
.
          MATCH     "H",TCINDC1                 * Privately Insured
          IF        @EQUAL
            CALL      ZECH0000                  * Privately Insured
            GOTO      WRZEC800
          ENDIF
.
          MATCH     "J",TCINDC1                 * Privately Uninsured
          IF        @EQUAL
            CALL      ZECJ0000                  * Privately Uninsured
            GOTO      WRZEC800
          ENDIF
.
          MATCH     "M",TCINDC1                 * Motor Vehicle Accident
          IF        @EQUAL
            CALL      ZECM0000                  * Motor Vehicle Accident
            GOTO      WRZEC800
          ENDIF
.
          MATCH     "O",TCINDC1                 * Other Compensable
          IF        @EQUAL
            CALL      ZECO0000                  * Other Compensable
            GOTO      WRZEC800
          ENDIF
.
          MATCH     "P",TCINDC1                 * Public
          IF        @EQUAL
            CALL      ZECP0000                  * Public
            GOTO      WRZEC800
          ENDIF
.
          MATCH     "S",TCINDC1                 * Shipping
          IF        @EQUAL
            CALL      ZECS0000                  * Shipping
            GOTO      WRZEC800
          ENDIF
.
          MATCH     "V",TCINDC1                 * Veteran Affairs
          IF        @EQUAL
            CALL      ZECV0000                  * Veteran Affairs
            GOTO      WRZEC800
          ENDIF
.
          MATCH     "W",TCINDC1                 * Worker Compensation
          IF        @EQUAL
            CALL      ZECW0000                  * Worker Compensation
            GOTO      WRZEC800
          ENDIF
          GOTO      WRZEC900
.
WRZEC800  PACK      SEGSTRNG,ANSZ,ANSE,ANSC,PIPE:
                             ZEC001,PIPE,ZEC002,PIPE,ZEC003,PIPE,ZEC004,PIPE:
                             ZEC005,PIPE,ZEC006,PIPE,ZEC007,PIPE,ZEC008,PIPE:
                             ZEC009,PIPE,ZEC010,PIPE,ZEC011,PIPE,ZEC012,PIPE:
                             ZEC013,PIPE,ZEC014,PIPE,ZEC015,PIPE,ZEC016,PIPE:
                             ZEC017,PIPE,ZEC018,PIPE,ZEC019,PIPE,ZEC020,PIPE:
                             ZEC021,PIPE,ZEC022,PIPE,ZEC023,PIPE,ZEC024,PIPE:
                             ZEC025,PIPE,ZEC026,PIPE,ZEC027,PIPE,ZEC028,PIPE:
                             ZEC029,PIPE,ZEC030,PIPE,ZEC031,PIPE,ZEC032,PIPE:
                             ZEC033,PIPE,ZEC034,PIPE,ZEC035,PIPE,ZEC036,PIPE:
                             ZEC037,PIPE,ZEC038,PIPE,ZEC039,PIPE,ZEC040,PIPE:
                             ZEC041,PIPE,ZEC042,PIPE,ZEC043,PIPE,ZEC044,PIPE:
                             ZEC045,PIPE,ZEC046,PIPE,ZEC047,PIPE,ZEC048,PIPE:
                             ZEC049,PIPE,ZEC050,PIPE,ZEC051,PIPE,ZEC052,PIPE:
                             ZEC053,PIPE,ZEC054,PIPE,ZEC055,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRZEC910:               * connection lost
                         WRZEC920                * timeout
.
WRZEC900  MOVE      ZERO,EXIT
          GOTO      WRZEC999
.
WRZEC910  MOVE      ONE,EXIT
          GOTO      WRZEC999
.
WRZEC920  MOVE      TWO,EXIT
.
WRZEC999  RETURN
.------------------------------------------------------------
. ZEC Segment Based on Claim Type Indicator 1
.------------------------------------------------------------
. ZEC Segment - Australian Defence Force (TINDC1=A)
.------------------------------------------------------------
ZECA0000  CALL      ZEC01300     * Military Compensation
          CALL      ZEC01000     * Service
          CALL      ZEC02600     * Rank
          CALL      ZEC01100     * Service Number
          CALL      ZEC01400     * Unit
          CALL      ZEC01200     * Bases
          CALL      ZEC02700     * Comments
.
          PACK      KEY6,PMEXICOD,SP70
          MATCH     SP70,KEY6
          GOTO      ZECA0100 IF EQUAL
          CALL      RDINSR1
          BRANCH    OVRCD,ZECA0100
          CALL      ZEC00400     * Insurance Company
.
          MATCH     IADD1,SP70   * blank address line 1 ?
          IF        !@EQUAL     
            CALL      ZEC00500   * Insurance Address Segement
          ENDIF
          CALL      ZEC00600     * Insurance Contact Name Segement
          CALL      ZEC00700     * Insurance Phone Segement
          CALL      ZEC00800     * Insurance Fax Segement
          GOTO      ZECA9999
.
ZECA0100  MATCH     SP70,PMEXCAD1
          IF        !@EQUAL
            CALL      ZEC03800   * Address Details from PMEXCAD1.4
          ENDIF
          CALL      ZEC03900     * Contact Details from PMEXCNAM
          CALL      ZEC04000     * Phone Details from PMEXCPHN
.
ZECA9999  RETURN          * Australian Defence Force
.--------------------------------------------------
. ZEC Segment - Overseas Student
.--------------------------------------------------
ZECE0000  CALL      ZEC04800     * Student Number
          CALL      ZEC03400     * Passport Number
          CALL      ZEC03500     * Passport Country
          CALL      ZEC03300     * Visa Expiry Date
          CALL      ZEC02700     * Comments
.
          MATCH     SP70,PMEXSCHL
          GOTO      ZECE0100 IF EQUAL
          PACK      KEY7,ANSC,PMEXSCHL,SP70
          CALL      RDPTEOR1                    * Get School Organisation Record
          BRANCH    OVRCD,ZECE0100
.
          CALL      ZEC04900     * School Code
          MATCH     SP70,PTERADD1
          IF        !@EQUAL
            CALL      ZEC05000     * School Address
          ENDIF
          CALL      ZEC05100     * School Contact
          CALL      ZEC05200     * School Phone
          GOTO      ZECE0200
. 
ZECE0100  CALL      ZEC03600      * Employer Contact Name
          CALL      ZEC03700      * Employer Contact Number
          MATCH     SP70,PMEXCAD1
          IF        !@EQUAL
            CALL      ZEC03800   * Address Details from PMEXCAD1.4
          ENDIF
          CALL      ZEC03900      * PMCECNAM Name 
          CALL      ZEC04000      * PMCECPHN Phone 
.
ZECE0200  PACK      KEY6,PMEXICOD,SP70
          MATCH     SP70,KEY6
          GOTO      ZECE0300 IF EQUAL
          CALL      RDINSR1
          BRANCH    OVRCD,ZECE0300
          CALL      ZEC00400     * Insurance Company
.
          MATCH     IADD1,SP70   * blank address line 1 ?
          IF        !@EQUAL
            CALL      ZEC00500   * Insurance Address Segement
          ENDIF
          CALL      ZEC00600     * Insurance Contact Name Segement
          CALL      ZEC00700     * Insurance Phone Segement
          CALL      ZEC00800     * Insurance Fax Segement
.
ZECE0300  CALL      ZEC01800     * Insurance Fund Membership No
          CALL      ZEC01900     * Insurance Expiry Date
.
ZECE9999  RETURN          * Overseas Student
.
.--------------------------------------------------
. ZEC Segment   Foreign Defence Force-
.--------------------------------------------------
ZECF0000  CALL      ZEC04800     * ID Number
          CALL      ZEC00100     * Duty Station Name
          MATCH     PMEXADD1,SP70
          IF        !@EQUAL
            CALL      ZEC00200     * Duty Station Address
          ENDIF
.
          PACK      KEY6,PMEXICOD,SP70
          MATCH     SP70,KEY6
          GOTO      ZECF0100 IF EQUAL
          CALL      RDINSR1
          BRANCH    OVRCD,ZECF0100
          CALL      ZEC00400     * Insurance Company
          MATCH     IADD1,SP70   * blank address line 1 ?
          IF        !@EQUAL
            CALL      ZEC00500   * Insurance Address Segement
          ENDIF
          CALL      ZEC00600     * Insurance Contact Name Segement
          CALL      ZEC00700     * Insurance Phone Segement
          CALL      ZEC00800     * Insurance Fax Segement
          GOTO      ZECF0200  
.
ZECF0100  MATCH     SP70,PMEXCAD1
          IF        !@EQUAL
            CALL      ZEC03800   * Address Details from PMEXCAD1.4
          ENDIF
          CALL      ZEC03900      * PMCECNAM Name 
          CALL      ZEC04000      * PMCECPHN Phone 

ZECF0200  CALL      ZEC01500     * Social Security Number
          CALL      ZEC01000     * Branch of Service
          CALL      ZEC01600     * Country
          CALL      ZEC02600     * Rank
          CALL      ZEC02700     * Comments
.
ZECF9999  RETURN          * Foreign Defence Force
.
.--------------------------------------------------
. ZEC Segment - Ineligible Overseas Visitor
.--------------------------------------------------
ZECG0000  CALL      ZEC02000     * Send Bill to Local Address
          CALL      ZEC03400     * Passport Number
          CALL      ZEC03500     * Passport Country
          CALL      ZEC03200     * Visa Type
          CALL      ZEC03300     * Visa Expiry Date
          CALL      ZEC02700     * Comments
          CALL      ZEC02100     * Travel Insurance
          PACK      KEY6,PMEXICOD,SP70
          MATCH     SP70,KEY6
          GOTO      ZECG0100 IF EQUAL
          CALL      RDINSR1
          BRANCH    OVRCD,ZECG0100
          CALL      ZEC00400     * Insurance Company
          MATCH     IADD1,SP70   * blank address line 1 ?
          IF        !@EQUAL
            CALL      ZEC00500   * Insurance Address Segement
          ENDIF
          CALL      ZEC00600     * Insurance Contact Name Segement
          CALL      ZEC00700     * Insurance Phone Segement
          CALL      ZEC00800     * Insurance Fax Segement
.
ZECG0100  CALL      ZEC02200     * Insurance policy Number
          CALL      ZEC01900     * Insurance Expiry Date
          CALL      ZEC03600     * Employer Contact Name
          CALL      ZEC03700     * Employer Contact Number
          MATCH     SP70,PMEXCAD1
          IF        !@EQUAL
            CALL      ZEC03800   * Address Details from PMEXCAD1.4
          ENDIF
.
ZECG9999  RETURN                 * Ineligible Overseas Visitor End
.
.--------------------------------------------------
. ZEC Segment - Privately Insured
.--------------------------------------------------
ZECH0000  CALL      ZEC05500     * Health Fund Contributors Name
          CALL      ZEC02700     * Comments
ZECH9999  RETURN                 * Privately Insured End
.
.--------------------------------------------------
. ZEC Segment - Privately Uninsured
.--------------------------------------------------
ZECJ0000        
ZECJ9999  RETURN          * Privately Uninsured
.
.--------------------------------------------------
. ZEC Segment - Motor Vehicle Accident
.--------------------------------------------------
ZECM0000  CALL      ZEC00900     * Claim Number
          CALL      ZEC04700     * Alternate Election
          CALL      ZEC04500     * Settled MVIT
          CALL      ZEC00300     * Date of Accident
          CALL      ZEC04600     * Accident Type
          CALL      ZEC04100     * Accident Location
          CALL      ZEC02700     * Comments
          MATCH     SP70,PMEXSAD1
          IF        !@EQUAL
            CALL      ZEC02900     * Solicitors Address
          ENDIF
          CALL      ZEC03100     * Solicitors Phone
          CALL      ZEC03000     * Solicitors Contact Name
.
          PACK      KEY6,PMEXICOD,SP70
          MATCH     SP70,KEY6
          GOTO      ZECM0100 IF EQUAL
          CALL      RDINSR1
          BRANCH    OVRCD,ZECM0100
          CALL      ZEC00400     * Insurance Company
          MATCH     IADD1,SP70   * blank address line 1 ?
          IF        !@EQUAL
            CALL      ZEC00500   * Insurance Address Segement
          ENDIF
          CALL      ZEC00600     * Insurance Contact Name Segement
          CALL      ZEC00700     * Insurance Phone Segement
          CALL      ZEC00800     * Insurance Fax Segement
          GOTO      ZECM9999 
.
ZECM0100  MATCH     SP70,PMEXCAD1
          IF        !@EQUAL
            CALL      ZEC03800   * Address Details from PMEXCAD1.4
          ENDIF
          CALL      ZEC03900     * Insurance Contact Free Format
          CALL      ZEC04000     * Insurance Phone Free Format
.
ZECM9999  RETURN          * Motor Vehicle Accident
.
.--------------------------------------------------
. ZEC Segment - Other Compensable
.--------------------------------------------------
ZECO0000  CALL      ZEC04700     * Alternate Election
          CALL      ZEC00300     * Date of Accident
          CALL      ZEC04100     * Accident Location
.
          MATCH     SP70,PMEXSCHL
          GOTO      ZECE0100 IF EQUAL
          PACK      KEY7,ANSO,PMEXSCHL,SP70
          CALL      RDPTEOR1                    * Get School Organisation Record
          BRANCH    OVRCD,ZECE0100
.
          CALL      ZEC05300     * Police Officer
          MATCH     PTERADD1,SP70
          IF        !@EQUAL
            CALL      ZEC05400     * Police Address
          ENDIF
          MATCH     SP70,PMEXSAD1
          IF        !@EQUAL
            CALL      ZEC02900     * Solicitors Address
          ENDIF
          CALL      ZEC03100     * Solicitors Phone
          CALL      ZEC03000     * Solicitors Contact Name
          CALL      ZEC02700     * Comments
.
ZECO9999  RETURN          * Other Compensable
.
.--------------------------------------------------
. ZEC Segment - Public
.--------------------------------------------------
ZECP0000        
ZECP9999  RETURN          * Public
.
.--------------------------------------------------
. ZEC Segment - Shipping
.--------------------------------------------------
ZECS0000  CALL      ZEC02300     * Ships Name
          CALL      ZEC02400     * Ships Agent
          MATCH     SP70,PMEXCAD1
          IF        !@EQUAL
            CALL      ZEC03800   * Address Details from PMEXCAD1.4
          ENDIF
          CALL      ZEC02700     * Comments
          CALL      ZEC03900     * Contact Name
          CALL      ZEC04000     * Contact Phone
ZECS9999  RETURN          * Shipping
.
.--------------------------------------------------
. ZEC Segment - Veteran Affairs
.--------------------------------------------------
ZECV0000  CALL      ZEC04700     * Alternate Election
          CALL      ZEC04300     * Auth Number
          CALL      ZEC04400     * Auth Date
          CALL      ZEC02700     * Comments
          CALL      ZEC02500     * DVA Contact Name
          CALL      ZEC01700     * DVA Contact Phone
.
ZECV9999  RETURN          * Veteran Affairs
.
.--------------------------------------------------
. ZEC Segment - Worker Compensation 
.--------------------------------------------------
ZECW0000  CALL      ZEC00900     * Claim Number
          CALL      ZEC04700     * Alternate Election
          CALL      ZEC04500     * Settled WC
          CALL      ZEC04200     * MV Involved
          CALL      ZEC00100     * Employers Name
          MATCH     PMEXADD1,SP70
          IF        !@EQUAL
            CALL      ZEC00200     * Duty Station Address
          ENDIF
          CALL      ZEC03600     * Employer Contact Name
          CALL      ZEC03700     * Employer Contact Number
          CALL      ZEC02700     * Comments
          CALL      ZEC00300     * Date of Accident
          CALL      ZEC04100     * Accident Location
          CALL      ZEC02800     * Solicitors Name
          MATCH     SP70,PMEXSAD1
          IF        !@EQUAL
            CALL      ZEC02900     * Solicitors Address
          ENDIF
          CALL      ZEC03100     * Solicitors Conatact Name
          CALL      ZEC03000     * Solicitors Phone Number
.
          PACK      KEY6,PMEXICOD,SP70
          MATCH     SP70,KEY6
          GOTO      ZECW0100 IF EQUAL
          CALL      RDINSR1
          BRANCH    OVRCD,ZECW0100
          CALL      ZEC00400     * Insurance Company
          MATCH     IADD1,SP70   * blank address line 1 ?
          IF        !@EQUAL
            CALL      ZEC00500   * Insurance Address Segement
          ENDIF
          CALL      ZEC00600     * Insurance Contact Name Segement
          CALL      ZEC00700     * Insurance Phone Segement
          CALL      ZEC00800     * Insurance Fax Segement
          GOTO      ZECW9999
.
ZECW0100  MATCH     SP70,PMEXCAD1
          IF        !@EQUAL
            CALL      ZEC03800   * Address Details from PMEXCAD1.4
          ENDIF
          CALL      ZEC03900     * Insurance Contact Free Format
          CALL      ZEC04000     * Insurance Phone Free Format
.
ZECW9999  RETURN          * Worker Compensation
.
.------------------------------------------------------------------------------
. Load ZEC001 with Employer Name from PMEXNAME
.------------------------------------------------------------------------------
.
ZEC00100  MOVE      BLANKSTR,ZEC001              * default to blank
.
          MATCH     SP70,PMEXNAME
          IF        !@EQUAL
            MOVE      PMEXNAME,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC001
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC002 with Employer Address from PMEXADD1,PMEXADD2,PMEXADD3,PMEXADD4,
. PMEXPOST
.------------------------------------------------------------------------------
.
ZEC00200  MOVE      PMEXADD1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC002
          ENDSET    ZEC002
          APPEND    CARET,ZEC002
.
          MATCH     PMEXADD2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC002
          ELSE
            MOVE      PMEXADD2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC002
          ENDIF
          APPEND    CARET,ZEC002
.
          MATCH     PMEXADD3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC002
          ELSE
            MOVE      PMEXADD3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC002
          ENDIF
          APPEND    CARET,ZEC002
.
          MATCH     PMEXADD4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC002
          ELSE
            MOVE      PMEXADD4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC002
          ENDIF
          APPEND    CARET,ZEC002
.
          MATCH     PMEXPOST,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC002
          ELSE
            MOVE      PMEXPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC002
          ENDIF
          RESET     ZEC002
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC003 with Date Of Accident from PMEXADAT
.------------------------------------------------------------------------------
.
ZEC00300  MOVE      BLANKSTR,ZEC003              * default to blank
.
          MATCH     SP70,PMEXADAT
          IF        !@EQUAL
            MOVE      PMEXADAT,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC003
            RESET     ZEC003
            REP       " 0",ZEC030
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC004 with Insurance Company Code and Name from PATIN1AF
.------------------------------------------------------------------------------
.
ZEC00400  MOVE      PMEXICOD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC004
          ENDSET    ZEC004
          APPEND    CARET,ZEC004
          MOVE      INAME,FIELDSTR
          CALL      SPCHR000                   * convert special characters
          APPEND    FIELDSTR,ZEC004
          APPEND    CARET,ZEC004
          APPEND    "webPAS",ZEC004
          RESET     ZEC004
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC005 with Address from PATIN1AF
.------------------------------------------------------------------------------
.
ZEC00500  MOVE      IADD1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC005
          ENDSET    ZEC005
          APPEND    CARET,ZEC005
.
          MATCH     IADD2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC005
          ELSE
            MOVE      IADD2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC005
          ENDIF
          APPEND    CARET,ZEC005
.
          MATCH     IADD3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC005
          ELSE
            MOVE      IADD3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC005
          ENDIF
          APPEND    CARET,ZEC005
.
          MATCH     IADD4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC005
          ELSE
            MOVE      IADD4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC005
          ENDIF
          APPEND    CARET,ZEC005
.
          MATCH     IPOST,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC005
          ELSE
            MOVE      IPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC005
          ENDIF
          RESET     ZEC005
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC006 with Insurance Contact from PATIN1AF
.------------------------------------------------------------------------------
ZEC00600  MOVE      BLANKSTR,ZEC006              * default to blank
.
          MATCH     SP70,ICONT
          IF        !@EQUAL
            MOVE      ICONT,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC006
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC007 with Insurance Business Phone Number from PATIN1AF
.------------------------------------------------------------------------------
.
ZEC00700  MOVE      BLANKSTR,ZEC007              * default to blank
.
          MATCH     SP70,ITELEB
          IF        !@EQUAL
            MOVE      ITELEB,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC007
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC008 with Insurance Company Fax Number from PATIN1AF
.------------------------------------------------------------------------------
.
ZEC00800  MOVE      BLANKSTR,ZEC008              * default to blank
.
          MATCH     SP70,PTINFAXN
          IF        !@EQUAL
            MOVE      PTINFAXN,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC008
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC009 with Insurance Claim Number from PMEXCLMN
.------------------------------------------------------------------------------
ZEC00900  MOVE      BLANKSTR,ZEC009              * default to blank
.
          MATCH     SP70,PMEXCLMN
          IF        !@EQUAL
            MOVE      PMEXCLMN,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC009
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Create ZEC010 with Service Code Category Ve
.------------------------------------------------------------------------------
ZEC01000  MOVE      BLANKSTR,ZEC010              * default to blank
.
          MATCH     SP70,PMEXSERV
          GOTO      ZEC01099 IF EQUAL
.
          MOVE      PMEXSERV,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC010
          ENDSET    ZEC010
          APPEND    CARET,ZEC010
.
          PACK      KEY5,CATVe,PMEXSERV
          CALL      RDCODE1
          IF        OVRCD = 1
            MOVE      "Unknown Code",FIELDSTR
          ELSE
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,ZEC010
          APPEND    CARET,ZEC010
          APPEND    "webPAS",ZEC010
          RESET     ZEC010
.
ZEC01099  RETURN
+
.------------------------------------------------------------------------------
. Load ZEC011 with Service Number from PMSEXTAF
.------------------------------------------------------------------------------
.
ZEC01100  MOVE      BLANKSTR,ZEC011              * default to blank
.
          MATCH     SP70,PMEXSNUM
          IF        !@EQUAL
            MOVE      PMEXSNUM,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC011
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC012 with Barracks/Bases from PMSEXTAF
.------------------------------------------------------------------------------
.
ZEC01200  MOVE      BLANKSTR,ZEC012              * default to blank
.
          MATCH     SP70,PMEXBASE
          IF        !@EQUAL
            MOVE      PMEXBASE,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC012
          ENDIF
.
          MATCH     SP70,PMEXBASC
          IF        !@EQUAL
            MOVE      "Br",KEY2
            PACK      KEY5,KEY2,PMEXBASC
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                   * convert special characters
              MOVE      FIELDSTR,ZEC012
            ENDIF
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC013 with Military Compensation Code Category Vf
.------------------------------------------------------------------------------
.
ZEC01300  MOVE      BLANKSTR,ZEC013              * default to blank
.
          MATCH     SP70,PMEXMCOM
          GOTO      ZEC01399 IF EQUAL
.
          MOVE      PMEXMCOM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC013
          ENDSET    ZEC013
          APPEND    CARET,ZEC013
.
          PACK      KEY5,CATVf,PMEXMCOM
          CALL      RDCODE1
          IF        OVRCD = 1
            MOVE      "Unknown Code",FIELDSTR
          ELSE
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,ZEC013
          APPEND    CARET,ZEC013
          APPEND    "webPAS",ZEC013
          RESET     ZEC013
.
ZEC01399  RETURN
+
.------------------------------------------------------------------------------
. Load ZEC014 with Unit from PMSEXTAF
.------------------------------------------------------------------------------
.
ZEC01400  MOVE      BLANKSTR,ZEC014              * default to blank
.
          MATCH     SP70,PMEXUNIT
          IF        !@EQUAL
            MOVE      PMEXUNIT,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC014
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC015 with Social Security Number from PMSEXTAF
.------------------------------------------------------------------------------
.
ZEC01500  MOVE      BLANKSTR,ZEC015              * default to blank
.
          MATCH     SP70,PMEXSSNM
          IF        !@EQUAL
            MOVE      PMEXSSNM,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC015
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC016 with Country Code from PMEXCONT
.------------------------------------------------------------------------------
.
ZEC01600  MOVE      BLANKSTR,ZEC016              * default to blank
.
          MATCH     SP70,PMEXCONT
          IF        !@EQUAL
            MOVE      PMEXCONT,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC016
            ENDSET    ZEC016
            APPEND    CARET,ZEC016
            PACK      KEY5,CATC,PMEXCONT
            CALL      RDCODE1
            IF        OVRCD = 1
              MOVE      "Unknown Code",FIELDSTR
            ELSE
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                   * convert special characters
            ENDIF
            APPEND    FIELDSTR,ZEC016
            APPEND    CARET,ZEC016
            APPEND    "webPAS",ZEC016
            RESET     ZEC016
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC017 with Contact Phone Number from PMSEXTAF
.------------------------------------------------------------------------------
.
ZEC01700  MOVE      BLANKSTR,ZEC017              * default to blank
.
          MATCH     SP70,PMEXCTEL
          IF        !@EQUAL
            MOVE      PMEXCTEL,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC017
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC018 with Health Fund Membership Number from PMSEXTAF
.------------------------------------------------------------------------------
.
ZEC01800  MOVE      BLANKSTR,ZEC018              * default to blank
.
          MATCH     SP70,PMEXOMEM
          IF        !@EQUAL
            MOVE      PMEXOMEM,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC018
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC019 with Insurance Expiry Date from PMEXVEXP
.------------------------------------------------------------------------------
.
ZEC01900  MOVE      BLANKSTR,ZEC019              * default to blank
.
          MATCH     SP70,PMEXIEDT
          IF        !@EQUAL
            MOVE      PMEXIEDT,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC019
            REP       " 0",ZEC019
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC020 Send Bill to Local Address Y or No
.------------------------------------------------------------------------------
.
ZEC02000  MOVE      "N",ZEC020
.
          MATCH     "1",PMEXSBIL
          IF        @EQUAL
            MOVE      "Y",ZEC020
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC021 Travel Insurance Y or N
.------------------------------------------------------------------------------
.
ZEC02100  MOVE      "N",ZEC021
.
          MATCH     "1",PMEXTINS
          IF        @EQUAL
            MOVE      "Y",ZEC021
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC022 with Travel Insurance Policy Number PMEXIPOL
.------------------------------------------------------------------------------
.
ZEC02200  MOVE      BLANKSTR,ZEC022              * default to blank
.
          MATCH     SP70,PMEXIPOL
          IF        !@EQUAL
            MOVE      PMEXIPOL,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC022
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC023 with Ship's name PMEXSNAM
.------------------------------------------------------------------------------
.
ZEC02300  MOVE      BLANKSTR,ZEC023              * default to blank
.
          MATCH     SP70,PMEXSNAM
          IF        !@EQUAL
            MOVE      PMEXSNAM,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC023
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC024 with Shiping Agent PMEXSAGN
.------------------------------------------------------------------------------
.
ZEC02400  MOVE      BLANKSTR,ZEC024              * default to blank
.
          MATCH     SP70,PMEXSAGN
          IF        !@EQUAL
            MOVE      PMEXSAGN,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC024
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC025 with Contact Name PMEXSCON
.------------------------------------------------------------------------------
.
ZEC02500  MOVE      BLANKSTR,ZEC025              * default to blank
.
          MATCH     SP70,PMEXSCON
          IF        !@EQUAL
            MOVE      PMEXSCON,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC025
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC026 with Rank from PMEXCAT1
.------------------------------------------------------------------------------
.
ZEC02600  MOVE      BLANKSTR,ZEC026              * default to blank
.
          MATCH     SP70,PMEXCAT1
          IF        !@EQUAL
            MOVE      PMEXCAT1,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC026
            ENDSET    ZEC026
            APPEND    CARET,ZEC026
            PACK      KEY5,CATVg,PMEXCAT1
            CALL      RDCODE1
            IF        OVRCD = 1
              MOVE      "Unknown Code",FIELDSTR
            ELSE
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                   * convert special characters
            ENDIF
            APPEND    FIELDSTR,ZEC026
            APPEND    CARET,ZEC026
            APPEND    "webPAS",ZEC026
            RESET     ZEC026
          ENDIF
.
          RETURN
+
.-----------------------------------------------------------------------------
. Load ZEC027 with Free Text Comments PMEXUCM1-3
.-----------------------------------------------------------------------------
.
ZEC02700  MOVE      PMEXUCM1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC027
.
          MATCH     SP70,PMEXUCM1
          IF        @EQUAL
            MOVE      BLANKSTR,ZEC027            * default to blank
          ELSE
            MOVE      PMEXUCM1,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,ZEC027
          ENDIF
.
          ENDSET    ZEC027
          APPEND    LINBREAK,ZEC027          * include line break
          MATCH     SP70,PMEXUCM2
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC027            * default to blank
          ELSE
            MOVE      PMEXUCM2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC027
          ENDIF
.
          ENDSET    ZEC027
          APPEND    LINBREAK,ZEC027          * include line break
          MATCH     SP70,PMEXUCM3
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC027            * default to blank
          ELSE
            MOVE      PMEXUCM3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC027
          ENDIF
          RESET     ZEC027
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC028 with Solicitor's Name PMEXSLNM
.------------------------------------------------------------------------------
.
ZEC02800  MOVE      BLANKSTR,ZEC028              * default to blank
.
          MATCH     SP70,PMEXSLNM
          IF        !@EQUAL
            MOVE      PMEXSLNM,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC028
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC029 with Solicitor's Address from PMEXSAD1,PMEXSAD2,PMEXSAD3,
. PMEXSAD4,PMEXSPOS
.------------------------------------------------------------------------------
.
ZEC02900  MOVE      PMEXSAD1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC029
          ENDSET    ZEC029
          APPEND    CARET,ZEC029
.
          MATCH     PMEXSAD2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC029
          ELSE
            MOVE      PMEXSAD2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC029
          ENDIF
          APPEND    CARET,ZEC029
.
          MATCH     PMEXSAD3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC029
          ELSE
            MOVE      PMEXSAD3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC029
          ENDIF
          APPEND    CARET,ZEC029
.
          MATCH     PMEXSAD4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC029
          ELSE
            MOVE      PMEXSAD4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC029
          ENDIF
          APPEND    CARET,ZEC029
.
          MATCH     PMEXSPOS,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC029
          ELSE
            MOVE      PMEXSPOS,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC029
          ENDIF
          RESET     ZEC029
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC030 with Solicitor's Phone PMEXSTEL
.------------------------------------------------------------------------------
.
ZEC03000  MOVE      BLANKSTR,ZEC030              * default to blank
.
          MATCH     SP70,PMEXSTEL
          IF        !@EQUAL
            MOVE      PMEXSTEL,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC030
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC031 with Solicitor's Contact Name PMEXSCNM
.------------------------------------------------------------------------------
.
ZEC03100  MOVE      BLANKSTR,ZEC031              * default to blank
.
          MATCH     SP70,PMEXSCNM
          IF        !@EQUAL
            MOVE      PMEXSCNM,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC031
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC032 with Visa Type from PMEXVTYP
.------------------------------------------------------------------------------
.
ZEC03200  MOVE      BLANKSTR,ZEC032              * default to blank
.
          MATCH     SP70,PMEXVTYP
          IF        !@EQUAL
            MOVE      PMEXVTYP,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC032
            ENDSET    ZEC032
            APPEND    CARET,ZEC032
            PACK      KEY5,CATvt,PMEXVTYP
            CALL      RDCODE1
            IF        OVRCD = 1
              MOVE      "Unknown Code",FIELDSTR
            ELSE
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                   * convert special characters
            ENDIF
            APPEND    FIELDSTR,ZEC032
            APPEND    CARET,ZEC032
            APPEND    "webPAS",ZEC032
            RESET     ZEC032
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC033 with Visa Expiry Date from PMEXVEXP
.------------------------------------------------------------------------------
.
ZEC03300  MOVE      BLANKSTR,ZEC033              * default to blank
.
          MATCH     SP70,PMEXVEXP
          IF        !@EQUAL
            MOVE      PMEXVEXP,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC033
            REP       " 0",ZEC033
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC034 with Passport Number PMEXPASN
.------------------------------------------------------------------------------
.
ZEC03400  MOVE      BLANKSTR,ZEC034              * default to blank
.
          MATCH     SP70,PMEXPASN
          IF        !@EQUAL
            MOVE      PMEXPASN,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC034
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC035 with Passport Country Code from PMEXPASC
.------------------------------------------------------------------------------
.
ZEC03500  MOVE      BLANKSTR,ZEC035              * default to blank
.
          MATCH     SP70,PMEXPASC
          IF        !@EQUAL
            MOVE      PMEXPASC,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC035
            ENDSET    ZEC035
            APPEND    CARET,ZEC035
            PACK      KEY5,CATC,PMEXPASC
            CALL      RDCODE1
            IF        OVRCD = 1
              MOVE      "Unknown Code",FIELDSTR
            ELSE
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                   * convert special characters
            ENDIF
            APPEND    FIELDSTR,ZEC035
            APPEND    CARET,ZEC035
            APPEND    "webPAS",ZEC035
            RESET     ZEC035
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC036 with Employer Contact Name PMEXECON
.------------------------------------------------------------------------------
.
ZEC03600  MOVE      BLANKSTR,ZEC036              * default to blank
.
          MATCH     SP70,PMEXECON
          IF        !@EQUAL
            MOVE      PMEXECON,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC036
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC037 with Employer Contact Phone PMEXEPHN
.------------------------------------------------------------------------------
.
ZEC03700  MOVE      BLANKSTR,ZEC037              * default to blank
.
          MATCH     SP70,PMEXEPHN
          IF        !@EQUAL
            MOVE      PMEXEPHN,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC037
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC038 with Free Format Address from PMEXCAD1,PMEXCAD2,PMEXCAD3,
. PMEXCAD4,PMEXCPCD
.------------------------------------------------------------------------------
.
ZEC03800  MOVE      PMEXCAD1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC038
          ENDSET    ZEC038
          APPEND    CARET,ZEC038
.
          MATCH     PMEXCAD2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC038
          ELSE
            MOVE      PMEXCAD2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC038
          ENDIF
          APPEND    CARET,ZEC038
.
          MATCH     PMEXCAD3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC038
          ELSE
            MOVE      PMEXCAD3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC038
          ENDIF
          APPEND    CARET,ZEC038
.
          MATCH     PMEXCAD4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC038
          ELSE
            MOVE      PMEXCAD4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC038
          ENDIF
          APPEND    CARET,ZEC038
.
          MATCH     PMEXCPCD,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC038
          ELSE
            MOVE      PMEXCPCD,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC038
          ENDIF
          RESET     ZEC038
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC039 with Free Format Contact Name from PMEXCNAM
.------------------------------------------------------------------------------
.
ZEC03900  MOVE      BLANKSTR,ZEC039              * default to blank
.
          MATCH     SP70,PMEXCNAM
          IF        !@EQUAL
            MOVE      PMEXCNAM,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC039
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC040 with Free Format Contact Phone Number from PMEXCPHN
.------------------------------------------------------------------------------
.
ZEC04000  MOVE      BLANKSTR,ZEC040              * default to blank
.
          MATCH     SP70,PMEXCPHN
          IF        !@EQUAL
            MOVE      PMEXCPHN,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC040
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC041 with Accident Location from PMEXALOC
.------------------------------------------------------------------------------
.
ZEC04100  MOVE      BLANKSTR,ZEC041              * default to blank
.
          MATCH     SP70,PMEXALOC
          IF        !@EQUAL
            MOVE      PMEXALOC,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC041
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC042 Involves Moving Vehicle on a Public Road Y or No
.------------------------------------------------------------------------------
.
ZEC04200  MOVE      "N",ZEC042
.
          MATCH     "1",PMEXMOVV
          IF        @EQUAL
            MOVE      "Y",ZEC042
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC043 with Authorisation Number from PMEXAUTH
.------------------------------------------------------------------------------
.
ZEC04300  MOVE      BLANKSTR,ZEC043              * default to blank
.
          MATCH     SP70,PMEXAUTH
          IF        !@EQUAL
            MOVE      PMEXAUTH,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC043
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC044 with Authorisation Date from PMEXAUDA
.------------------------------------------------------------------------------
.
ZEC04400  MOVE      BLANKSTR,ZEC044              * default to blank
.
          MATCH     SP70,PMEXAUDA
          IF        !@EQUAL
            MOVE      PMEXAUDA,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC044
            REP       " 0",ZEC044
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC045 Claim Form Settled Y or No
.------------------------------------------------------------------------------
.
ZEC04500  MOVE      "N",ZEC045
.
          MATCH     "1",PMEXTCLM
          IF        @EQUAL
            MOVE      "Y",ZEC045
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC046 with Role in Accident Code from PMEXMTYP
.------------------------------------------------------------------------------
.
ZEC04600  MOVE      BLANKSTR,ZEC046              * default to blank
.
          MATCH     SP70,PMEXMTYP
          IF        !@EQUAL
            MOVE      PMEXMTYP,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC046
            ENDSET    ZEC046
            APPEND    CARET,ZEC046
            PACK      KEY5,CATRA,PMEXMTYP
            CALL      RDCODE1
            IF        OVRCD = 1
              MOVE      "Unknown Code",FIELDSTR
            ELSE
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                   * convert special characters
            ENDIF
            APPEND    FIELDSTR,ZEC046
            APPEND    CARET,ZEC046
            APPEND    "webPAS",ZEC046
            RESET     ZEC046
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC047 with Alternate Election Code from PMEXALEL
.------------------------------------------------------------------------------
.
ZEC04700  MOVE      BLANKSTR,ZEC047              * default to blank
.
          MATCH     SP70,PMEXALEL
          IF        !@EQUAL
            MOVE      PMEXALEL,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC047
            ENDSET    ZEC047
            APPEND    CARET,ZEC047
            PACK      KEY5,CATCL,PMEXALEL
            CALL      RDCODE1
            IF        OVRCD = 1
              MOVE      "Unknown Code",FIELDSTR
            ELSE
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                   * convert special characters
            ENDIF
            APPEND    FIELDSTR,ZEC047
            APPEND    CARET,ZEC047
            APPEND    "webPAS",ZEC047
            RESET     ZEC047
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC048 with Identification Number from PMEXIDNO
.------------------------------------------------------------------------------
.
ZEC04800  MOVE      BLANKSTR,ZEC048              * default to blank
.
          MATCH     SP70,PMEXIDNO
          IF        !@EQUAL
            MOVE      PMEXIDNO,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC048
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC049 with Name of School from PMEXSCHL
.------------------------------------------------------------------------------
.
ZEC04900  MOVE      PMEXSCHL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC049
          ENDSET    ZEC049
          APPEND    CARET,ZEC049
          MOVE      PTERNAME,FIELDSTR
          CALL      SPCHR000                   * convert special characters
          APPEND    FIELDSTR,ZEC049
          APPEND    CARET,ZEC049
          APPEND    "webPAS",ZEC049
          RESET     ZEC049
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC050 with School Address from PTERADD1,PTERADD2,PTERADD3,PTERADD4,
. PTERPOST
.------------------------------------------------------------------------------
.
ZEC05000  MOVE      PTERADD1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC050
          ENDSET    ZEC050
          APPEND    CARET,ZEC050
.
          MATCH     PTERADD2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC050
          ELSE
            MOVE      PTERADD2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC050
          ENDIF
          APPEND    CARET,ZEC050
.
          MATCH     PTERADD3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC050
          ELSE
            MOVE      PTERADD3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC050
          ENDIF
          APPEND    CARET,ZEC050
.
          MATCH     PTERADD4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC050
          ELSE
            MOVE      PTERADD4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC050
          ENDIF
          APPEND    CARET,ZEC050
.
          MATCH     PTERPOST,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC050
          ELSE
            MOVE      PTERPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC050
          ENDIF
          RESET     ZEC050
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC051 with School Contact Name PTERCONT
.------------------------------------------------------------------------------
.
ZEC05100  MOVE      BLANKSTR,ZEC051              * default to blank
.
          MATCH     SP70,PTERCONT
          IF        !@EQUAL
            MOVE      PTERCONT,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC051
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC052 with School Telephone Number from PTERTELP
.------------------------------------------------------------------------------
.
ZEC05200  MOVE      BLANKSTR,ZEC052              * default to blank
.
          MATCH     SP70,PTERTELP
          IF        !@EQUAL
            MOVE      PTERTELP,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC052
          ENDIF
.
          RETURN
+
.------------------------------------------------------------------------------
. Load ZEC053 with Police Officer Details from PMEXSCHL
.------------------------------------------------------------------------------
.
ZEC05300  MOVE      PMEXSCHL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC053
          ENDSET    ZEC053
          APPEND    CARET,ZEC053
          MOVE      PTERNAME,FIELDSTR
          CALL      SPCHR000                   * convert special characters
          APPEND    FIELDSTR,ZEC053
          APPEND    CARET,ZEC053
          APPEND    "webPAS",ZEC053
          RESET     ZEC053
.
          RETURN
+
.------------------------------------------------------------------------------
. Create ZEC054 with Police Officer Address from PTERADD1,PTERADD2,PTERADD3,
. PTERADD4,PTERPOST
.------------------------------------------------------------------------------
.
ZEC05400  MOVE      PTERADD1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZEC054
          ENDSET    ZEC054
          APPEND    CARET,ZEC054
.
          MATCH     PTERADD2,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC054
          ELSE
            MOVE      PTERADD2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC054
          ENDIF
          APPEND    CARET,ZEC054
.
          MATCH     PTERADD3,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC054
          ELSE
            MOVE      PTERADD3,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC054
          ENDIF
          APPEND    CARET,ZEC054
.
          MATCH     PTERADD4,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC054
          ELSE
            MOVE      PTERADD4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC054
          ENDIF
          APPEND    CARET,ZEC054
.
          MATCH     PTERPOST,SP70
          IF        @EQUAL
            APPEND    BLANKSTR,ZEC054
          ELSE
            MOVE      PTERPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZEC054
          ENDIF
          RESET     ZEC054
.
          RETURN
+
.------------------------------------------------------------------------------
. Create ZEC055 with Health Fund Contributor Name from PMVXCOMN
.------------------------------------------------------------------------------
.
ZEC05500  MOVE      BLANKSTR,ZEC055              * default to blank
.
          MATCH     SP70,PMVXCONM
          IF        !@EQUAL
            MOVE      PMVXCONM,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZEC055
          ENDIF
.
          RETURN
+
.****************************************************************************
.*                              POTAD000               Called by: WRPID000  *
.*    Send mailing address as first component of PID.11 (address ID = M)    *
.*    PMSCEXAF - CAT tc IND1 = 2                                            * 
.****************************************************************************
POTAD000  MATCH     SP70,PMCEADD1                * address line 1 blank ?
          IF        @EQUAL
            PACK      PID011,BLANKSTR            * yes
          ELSE
            MOVE      PMCEADD1,FIELDSTR          * load address line 1
            CALL      SPCHR000                   * convert special characters
            PACK      PID011,FIELDSTR
          ENDIF
          ENDSET    PID011
          APPEND    CARET,PID011
.
          MATCH     SP70,PMCEADD2                * address line 2 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PMCEADD2,FIELDSTR          * load address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
          APPEND    CARET,PID011
.
.         We need to populate the remainder of the components based
.         one whether this is a local or an oversease address.
.         If the postcode is "8888", then this is an overseas address and
.         address line 4 will contain the country description.
.         If the postcode is not "8888", it may still be an overseas address
.         if the corresponding postcode (ibapostf) record has the state
.         (ibpostat) set to "OS".  In this case, the country description
.         will be contained in the suburb field.
.         Otherwise, the address is treated as a local address.
.
          MATCH     "8888",PMCEPOST              * overseas address ?
          GOTO      POTAD115 IF EQUAL            * yes
.
.         Given that an overseas address based on "OS" in the postcode
.         record, stores the country description in the suburb (PMCEADD3),
.         then if the suburb is blank, it must either be a local address
.         or an overseas address based on an "8888" postcode.
.
          MATCH     SP70,PMCEADD3                * address line 3 blank ?
          GOTO      POTAD120 IF EQUAL            * yes
.
.         The suburb is populated, so if the postcode is not "8888", then
.         we need to see if it is an overseas address using the postcode record
.
          MATCH     PMCEADD4,SP70                * blank state ?
          GOTO      POTAD105 IF EQUAL            * yes
.
.         Check if the postcode/suburb/state combination is valid
.
          PACK      KEY45,PMCEADD3,SP70
          PACK      KEY56,PMCEPOST,KEY45,PMCEADD4
          CALL      RDIBPOS1                     * pcode/suburb/state on file ?
          COMPARE   ZERO,OVRCD
          GOTO      POTAD110 IF EQUAL            * yes
.
.         Check if the postcode/suburb combination is valid
.
POTAD105  PACK      KEY56,PMCEPOST,PMCEADD3,SP70
          CALL      RDIBPOS1                     * postcode/suburb on file ?
          COMPARE   ZERO,OVRCD
          GOTO      POTAD110 IF EQUAL            * yes - valid
.
          CALL      RKIBPOS1                     * no - get next record
          BRANCH    OVRCD,POTAD125               * eof - set as local address
.
          MATCH     PMCEPOST,IBPOPCOD            * same postcode still ?
          GOTO      POTAD125 IF NOT EQUAL        * no - set as local address
.
          MATCH     PMCEADD3,IBPOSUBR            * same suburb still ?
          GOTO      POTAD125 IF NOT EQUAL        * no - set as local address
.
.         Check if this is an overseas address
.
POTAD110  MATCH     "OS ",IBPOSTAT               * overseas patient ?
          GOTO      POTAD125 IF NOT EQUAL        * no
.
          APPEND    BLANKSTR,PID011              * blank suburb
          APPEND    CARET,PID011
          APPEND    BLANKSTR,PID011              * blank address line 4
          APPEND    CARET,PID011
          APPEND    "8888",PID011                * blank postcode
          APPEND    CARET,PID011
          MOVE      PMCEADD3,FIELDSTR            * load country
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID011
          GOTO      POTAD140
.
POTAD115  MATCH     SP70,PMCEADD3                * blank suburb ?
          GOTO      POTAD125 IF NOT EQUAL        * no
.
POTAD120  APPEND    BLANKSTR,PID011
          APPEND    CARET,PID011
          GOTO      POTAD130
.
POTAD125  MOVE      PMCEADD3,FIELDSTR            * load address line 3
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID011
          APPEND    CARET,PID011
.
.         If the postcode is "8888", then this is an overseas address and
.         address line 4 will contain the country description
.
POTAD130  MATCH     "8888",PMCEPOST              * overseas address ?
          GOTO      POTAD135 IF NOT EQUAL        * no
.
          APPEND    BLANKSTR,PID011              * yes - blank address line 4
          APPEND    CARET,PID011
          APPEND    "8888",PID011                * blank postcode
          APPEND    CARET,PID011
          MOVE      PMCEADD4,FIELDSTR            * load country
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID011
          GOTO      POTAD140
.
.         Not an overseas address, so send address line 4 & postcode as normal
.
POTAD135  MATCH     SP70,PMCEADD4                * address line 4 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PMCEADD4,FIELDSTR          * load address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
          APPEND    CARET,PID011
.
          MATCH     SP8,PMCEPOST                 * postcode blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PMCEPOST,FIELDSTR          * load postcode
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
          APPEND    CARET,PID011
.
          COMPARE   ZERO,PTCNHDPS                * Australia or NZ ?
          GOTO      POTAD140 IF EQUAL            * no
.
          IF        PTCNHDPS = 1
            APPEND    "NEW ZEALAND",PID011
          ELSE
            APPEND    "AUSTRALIA",PID011
          ENDIF
POTAD140  APPEND    CARET,PID011
          APPEND    ANSM,PID011                  * address type=M (mailing)
          RESET     PID011
.
POTAD999  RETURN
+
.****************************************************************************
.*                              POSTAD00               Called by: WRPID000  *
.*    Send mailing address as first component of PID.11 (address ID = M)    *
.****************************************************************************
PSTAD000  MATCH     SP70,PTMXADD1                * address line 1 blank ?
          IF        @EQUAL
            PACK      PID011,BLANKSTR            * yes
          ELSE
            MOVE      PTMXADD1,FIELDSTR          * load address line 1
            CALL      SPCHR000                   * convert special characters
            PACK      PID011,FIELDSTR
          ENDIF
          ENDSET    PID011
          APPEND    CARET,PID011
.
          MATCH     SP70,PTMXADD2                * address line 2 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PTMXADD2,FIELDSTR          * load address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
          APPEND    CARET,PID011
.
.         We need to populate the remainder of the components based
.         one whether this is a local or an oversease address.
.         If the postcode is "8888", then this is an overseas address and
.         address line 4 will contain the country description.
.         If the postcode is not "8888", it may still be an overseas address
.         if the corresponding postcode (ibapostf) record has the state
.         (ibpostat) set to "OS".  In this case, the country description
.         will be contained in the suburb field.
.         Otherwise, the address is treated as a local address.
.
          MATCH     "8888",PTMXPOST              * overseas address ?
          GOTO      PSTAD115 IF EQUAL            * yes
.
.         Given that an overseas address based on "OS" in the postcode
.         record, stores the country description in the suburb (PTMXADD3),
.         then if the suburb is blank, it must either be a local address
.         or an overseas address based on an "8888" postcode.
.
          MATCH     SP70,PTMXADD3                * address line 3 blank ?
          GOTO      PSTAD120 IF EQUAL            * yes
.
.         The suburb is populated, so if the postcode is not "8888", then
.         we need to see if it is an overseas address using the postcode record
.
          MATCH     PTMXADD4,SP70                * blank state ?
          GOTO      PSTAD105 IF EQUAL            * yes
.
.         Check if the postcode/suburb/state combination is valid
.
          PACK      KEY45,PTMXADD3,SP70
          PACK      KEY56,PTMXPOST,KEY45,PTMXADD4
          CALL      RDIBPOS1                     * pcode/suburb/state on file ?
          COMPARE   ZERO,OVRCD
          GOTO      PSTAD110 IF EQUAL            * yes
.
.         Check if the postcode/suburb combination is valid
.
PSTAD105  PACK      KEY56,PTMXPOST,PTMXADD3,SP70
          CALL      RDIBPOS1                     * postcode/suburb on file ?
          COMPARE   ZERO,OVRCD
          GOTO      PSTAD110 IF EQUAL            * yes - valid
.
          CALL      RKIBPOS1                     * no - get next record
          BRANCH    OVRCD,PSTAD125               * eof - set as local address
.
          MATCH     PTMXPOST,IBPOPCOD            * same postcode still ?
          GOTO      PSTAD125 IF NOT EQUAL        * no - set as local address
.
          MATCH     PTMXADD3,IBPOSUBR            * same suburb still ?
          GOTO      PSTAD125 IF NOT EQUAL        * no - set as local address
.
.         Check if this is an overseas address
.
PSTAD110  MATCH     "OS ",IBPOSTAT               * overseas patient ?
          GOTO      PSTAD125 IF NOT EQUAL        * no
.
          APPEND    BLANKSTR,PID011              * blank suburb
          APPEND    CARET,PID011
          APPEND    BLANKSTR,PID011              * blank address line 4
          APPEND    CARET,PID011
          APPEND    "8888",PID011                * blank postcode
          APPEND    CARET,PID011
          MOVE      PTMXADD3,FIELDSTR            * load country
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID011
          GOTO      PSTAD140
.
PSTAD115  MATCH     SP70,PTMXADD3                * blank suburb ?
          GOTO      PSTAD125 IF NOT EQUAL        * no
.
PSTAD120  APPEND    BLANKSTR,PID011
          APPEND    CARET,PID011
          GOTO      PSTAD130
.
PSTAD125  MOVE      PTMXADD3,FIELDSTR            * load address line 3
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID011
          APPEND    CARET,PID011
.
.         If the postcode is "8888", then this is an overseas address and
.         address line 4 will contain the country description
.
PSTAD130  MATCH     "8888",PTMXPOST              * overseas address ?
          GOTO      PSTAD135 IF NOT EQUAL        * no
.
          APPEND    BLANKSTR,PID011              * yes - blank address line 4
          APPEND    CARET,PID011
          APPEND    "8888",PID011                * blank postcode
          APPEND    CARET,PID011
          MOVE      PTMXADD4,FIELDSTR            * load country
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PID011
          GOTO      PSTAD140
.
.         Not an overseas address, so send address line 4 & postcode as normal
.
PSTAD135  MATCH     SP70,PTMXADD4                * address line 4 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PTMXADD4,FIELDSTR          * load address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
          APPEND    CARET,PID011
.
          MATCH     SP8,PTMXPOST                 * postcode blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PID011            * yes
          ELSE
            MOVE      PTMXPOST,FIELDSTR          * load postcode
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PID011
          ENDIF
          APPEND    CARET,PID011
.
          COMPARE   ZERO,PTCNHDPS                * Australia or NZ ?
          GOTO      PSTAD140 IF EQUAL            * no
.
          IF        PTCNHDPS = 1
            APPEND    "NEW ZEALAND",PID011
          ELSE
            APPEND    "AUSTRALIA",PID011
          ENDIF
PSTAD140  APPEND    CARET,PID011
          APPEND    ANSM,PID011                  * address type=M (mailing)
          RESET     PID011
.
PSTAD999  RETURN
+
.****************************************************************************
.*                              GENDR000               Called by: WRPID000  *
.*    Get gender value from Cat.G to populate PID.8 (patient sex)           *
.****************************************************************************
GENDR000  MOVE      ANSU,PID008                  * default to 'unknown'
          PACK      KEY5,ANSG,SP1,PSEX,SP70
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,GENDR999               * no
.
          IF        PTCNNHII = 1
            MOVE      TCINDC2,ANS                * use indc.2 (NZ)
          ELSE
            MOVE      THCSCOD,ANS                * use hdp default (non-NZ)
          ENDIF
.
GENDR900  MOVE      ANS,PID008                   * use value from Cat.G
GENDR999  RETURN
+
.****************************************************************************
.*                              CTMP0000               Called by:           *
.*               Clear all records from the temporary table                 *
.****************************************************************************
.
CLRTMP00  PACK      KEY90,SP70,SP70
          CALL      RSALIAS1                     * position at start of file
          CALL      RKALIAS1                     * read next record
          BRANCH    OVRCD,CLRTMP99               * eof - finished
.
          PACK      KEY90,TEMPSNAM,TEMPFGIV,TEMPSGIV
          CALL      DEALIAS1                     * delete current record
          GOTO      CLRTMP00                     * get next record
.
CLRTMP99  RETURN
+
.*****************************************************************************
.*                              CRTMP000               Called by:            *
.*             Create a new temporary file for aliases                       *
.*****************************************************************************
.
CRTMP000  CALL      KILTMP00                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      ALIASTMP,TEMPFILE            * open temp index file
.
CRTMP999  RETURN    
+         
.****************************************************************************
.*                              KILTMP00               Called by:           *
.*               Close and erase the temporary file for aliases             *
.****************************************************************************
.         
KILTMP00  CLOSE     ALIASTMP                     * close file
.         
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILTMP99 RETURN
+
.*****************************************************************************
.*                               SEPR0000          Called by: ALNK1000       *
.*        Separate out the first and subsequent given names for a patient    *
.* Requires: DIM25 - Given names field                                       *
.* Returns:  NK1030 - Loaded with surname and given names                    *
.*****************************************************************************
.
SEPR0000  MATCH     DIM25,SP30                   * blank given names ?
          IF        @EQUAL
            APPEND    BLANKSTR,NK1030            * yes
            APPEND    CARET,NK1030
            APPEND    BLANKSTR,NK1030
            GOTO      SEPR9999
          ENDIF
.
          MOVE      ZERO,CARETCNT
          MOVE      DIM25,KEY25
          STRIP     KEY25
SEPR1000  MOVE      KEY25,ANS                    * find first character
          MATCH     SP1,ANS
          GOTO      SEPR2000 IF NOT EQUAL
.
SEPR1500  BUMP      KEY25
          GOTO      SEPR9999 IF EOS
          GOTO      SEPR1000
.
SEPR2000  APPEND    ANS,NK1030
          BUMP      KEY25
          GOTO      SEPR9999 IF EOS
.
          MOVE      KEY25,ANS
          MATCH     SP1,ANS
          IF        @EQUAL
            IF        CARETCNT < 1
              APPEND    CARET,NK1030
              ADD       ONE,CARETCNT
              GOTO      SEPR1500
            ENDIF
          ENDIF
.
          GOTO      SEPR2000
.
SEPR9999  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR ALIAS TEMPORARY FILE                              *
.****************************************************************************
.
RAALIAS1  MOVE      ZERO,OVRCD
          READ      ALIASTMP,KEY90;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSALIAS1  READ      ALIASTMP,KEY90;;
          RETURN
.
RDALIAS1  MOVE      ZERO,OVRCD
          READ      ALIASTMP,KEY90;TEMPSNAM,TEMPFGIV,TEMPSGIV
          GOTO      OVERCOND IF OVER
          RETURN
.
RKALIAS1  MOVE      ZERO,OVRCD
          READKS    ALIASTMP;TEMPSNAM,TEMPFGIV,TEMPSGIV
          GOTO      OVERCOND IF OVER
          RETURN
.
RPALIAS1  MOVE      ZERO,OVRCD
          READKP    ALIASTMP;TEMPSNAM,TEMPFGIV,TEMPSGIV
          GOTO      OVERCOND IF OVER
          RETURN
.
WRALIAS1  WRITE     ALIASTMP,KEY90;TEMPSNAM,TEMPFGIV,TEMPSGIV
          RETURN
.
UPALIAS1  UPDATE    ALIASTMP;TEMPSNAM,TEMPFGIV,TEMPSGIV
          RETURN
.
DEALIAS1  DELETE    ALIASTMP,KEY90
          RETURN
+
.****************************************************************************
          INC       CLPMSCEX

          INC       PMSEHBIO/INC
          INC       PMSUHLIO/INC
+
