.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.11.01 07/01/2009 Steve Armstrong  CAR 185927
.          Extended length of CMDLINE from 127 to 140.
.          Recompiled for changes to SINALLCD.
.-------------------------------------------------------
. V9.04.01  13.04.2005 Peter Vela CAR 59696
.           Recompiled for SINCGAFD
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 09.11.2000 Charles Handaya
.           Modified for sincchaf change
.           Modified for Warehouse Security
.-------------------------------------------------------
AMOUNT    FORM      12.2
BOTHDESC  INIT      " - Stock & Non-Stock Catalogs"
CHCKCOMM  DIM       5
CHECKCAT  DIM       7
CHECKCST  DIM       5
CHECKDAT  DIM       6
CHECKSUB  DIM       5
CHKDIM7   DIM       7
CMDLINE   DIM       140
DIM14CHK  DIM       1
ENDCST    DIM       5
FIRSTHRU  FORM      1
F13TOT1   DIM       15
F13TOT2   DIM       15
F13TOT3   DIM       15
F13TOT4   DIM       15
F13TOT5   DIM       15
F13TOT6   DIM       15
F13TOT7   DIM       15
F13TOT8   DIM       15
F13TOT9   DIM       15
F13TOT10  DIM       15
F13TOT11  DIM       15
F13TOT12  DIM       15
F13TOT13  DIM       15
GPER1     FORM      12.2
GPER2     FORM      12.2
GPER3     FORM      12.2
GPER4     FORM      12.2
GPER5     FORM      12.2
GPER6     FORM      12.2
GPER7     FORM      12.2
GPER8     FORM      12.2
GPER9     FORM      12.2
GPER10    FORM      12.2
GPER11    FORM      12.2
GPER12    FORM      12.2
GPER13    FORM      12.2
INCLTYPE  FORM      1
KEY25A    DIM       25
NONDESC   INIT      " - Non-Stock Catalogs Only   "
PER1      FORM      12.2
PER2      FORM      12.2
PER3      FORM      12.2
PER4      FORM      12.2
PER5      FORM      12.2
PER6      FORM      12.2
PER7      FORM      12.2
PER8      FORM      12.2
PER9      FORM      12.2
PER10     FORM      12.2
PER11     FORM      12.2
PER12     FORM      12.2
PER13     FORM      12.2
PRINTCST  DIM       7
REPTSTKF  FORM      1
REPTDESC  DIM       29
STKDESC   INIT      " - Stock Catalogs Only       "
STRCST    DIM       5
TPER1     FORM      12.2
TPER2     FORM      12.2
TPER3     FORM      12.2
TPER4     FORM      12.2
TPER5     FORM      12.2
TPER6     FORM      12.2
TPER7     FORM      12.2
TPER8     FORM      12.2
TPER9     FORM      12.2
TPER10    FORM      12.2
TPER11    FORM      12.2
TPER12    FORM      12.2
TPER13    FORM      12.2
EXPORTFL  FILE      ASCII, FIXED=400
TABDELM   EQU       0x09
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB51
.   Function      :   Yearly Cost Centre Stock Usage          
.   Generated  On :   08/01/2009
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       SINALLFD/INC
          INC       SINCCAFD/INC
          INC       SINCCBFD/INC
          INC       SINCCEFD/INC
          INC       SINCCFFD/INC
          INC       SINCCHFD/INC
          INC       SINCGAFD/INC
          INC       SINCIAFD/INC
          INC       SINCIEFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
          INC       SINSUAFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMCST   DIM      46 * Scr 00 Fld     4
TOCST     DIM      46 * Scr 00 Fld     5
FROMWAR   DIM      46 * Scr 00 Fld     6
TOWAR     DIM      46 * Scr 00 Fld     7
EXPORTYN  FORM      1 * Scr 00 Fld     8
USYEAR    DIM       4 * Scr 00 Fld    10
REPTSTCK  DIM       1 * Scr 00 Fld    14
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB51"
PRGNAM    INIT      "Yearly Cost Centre Stock Usage          "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      ONAT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccbaf";
          OPEN      SINCCBA1,"sinccbaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA1,"sincceaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA2,"sincceaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA1,"sinccfaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA2,"sinccfaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA1,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA2,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA3,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA4,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA5,"sincchaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA1,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA2,"sincgaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA2,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA2,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA3,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA4,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA2,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA3,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA4,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA5,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA6,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA7,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA1,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA2,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA3,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Program Options                    
          ENDIF
          RETURN
.--------------------------------
. Screen - Program Options                    
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      MVACCEPT
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Program Options                    
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
          MOVE      SP70,FROMCST 
          MOVE      SP70,TOCST   
          MOVE      SP70,FROMWAR 
          MOVE      SP70,TOWAR   
          MOVE      ZERO,EXPORTYN
          MOVE      SP70,USYEAR  
          MOVE      SP70,REPTSTCK
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Program Options                    
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Program Options                    
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Program Options                    
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Program Options                    
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Program Options                    
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103,PS00L104,PS00L105:
                            PS00L999,PS00L106,PS00L999,PS00L999:
                           PS00L999,PS00L107
          GOTO     PS00L999
.
PS00L101
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      TOCST,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FROMWAR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      TOWAR,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      USYEAR,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      REPTSTCK,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Program Options                    
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L104,SF00L006,SF00L105:
                            SF00L006,SF00L106,SF00L006,SF00L006:
                           SF00L006,SF00L107
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L020,SF00L104,SF00L020,SF00L105:
                            SF00L020,SF00L106,SF00L020,SF00L020:
                           SF00L020,SF00L107
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PRNTA000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCST   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RCOST000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCST,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOWAR   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EWAR0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMWAR,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOWAR,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      USYEAR,VAR       
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ESTCK000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPTSTCK,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
.********************************************************************
.  Print Report
.********************************************************************
PRNTA000  PACK      DISPMSG,SP70,SP70            * save line 24
          CALL      MESSAGE2
          MOVE      SP70,SIWAWAR
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TWENTY3;*95,HACCNT,*124,HORDDES,*133,SNCONOPR
          READ      CONTROLF,TWENTY4;*1,HAPER1,HAPER2,HAPER3,HAPER4,HAPER5:
                                        HAPER6,HAPER7,HAPER8,HAPER9,HAPER10:
                                        HAPER11,HAPER12
          READ      CONTROLF,SIXTY3;*75,HAPER13,*143,HNONUSAG
.
          CALL      LOAD0000
.
          IF        EXPORTYN=1
            CALL      MAKEXP00
          ENDIF
.
          DISPLAY   *P1:24,*EL,"Printing :   ";
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * init last line number
.
          CALL      WRIA0000
.
          COMPARE   ZERO,CPAGENO                 * print header if
          CALL      HEAD0000 IF EQUAL            * nothing printed
          CALL      PRTOT000
.
PRNTA900  MOVE      ZERO,EXIT                    * exit screen
          GOTO      PRNTA999
.
PRNTA950  MOVE      ONE,EXIT                     * continue
.
PRNTA999  CALL      MESSAGE3                     * restore line 24
          CALL      KLALL000
          IF        EXPORTYN=1
            CALL      TRAN0000
          ENDIF
          RETURN
.------------------------------------------------------------
. Print Catalog Analysis (Full Report)
.------------------------------------------------------------
WRIA0000  MOVE      TRUE,FIRSTHRU
          MOVE      ZERO,PER1
          MOVE      ZERO,PER2
          MOVE      ZERO,PER3
          MOVE      ZERO,PER4
          MOVE      ZERO,PER5
          MOVE      ZERO,PER6
          MOVE      ZERO,PER7
          MOVE      ZERO,PER8
          MOVE      ZERO,PER9
          MOVE      ZERO,PER10
          MOVE      ZERO,PER11
          MOVE      ZERO,PER12
          MOVE      ZERO,PER13
          MOVE      ZERO,TPER1
          MOVE      ZERO,TPER2
          MOVE      ZERO,TPER3
          MOVE      ZERO,TPER4
          MOVE      ZERO,TPER5
          MOVE      ZERO,TPER6
          MOVE      ZERO,TPER7
          MOVE      ZERO,TPER8
          MOVE      ZERO,TPER9
          MOVE      ZERO,TPER10
          MOVE      ZERO,TPER11
          MOVE      ZERO,TPER12
          MOVE      ZERO,TPER13
          MOVE      ZERO,GPER1
          MOVE      ZERO,GPER2
          MOVE      ZERO,GPER3
          MOVE      ZERO,GPER4
          MOVE      ZERO,GPER5
          MOVE      ZERO,GPER6
          MOVE      ZERO,GPER7
          MOVE      ZERO,GPER8
          MOVE      ZERO,GPER9
          MOVE      ZERO,GPER10
          MOVE      ZERO,GPER11
          MOVE      ZERO,GPER12
          MOVE      ZERO,GPER13
          MOVE      SP70,CHECKCST
          MOVE      SP7,FCATALOG
          PACK      KEY28,STRCST,FCATALOG,USYEAR,SP70
          CALL      RSSIAL3
WRIA1000  CALL      RKSIAL3
          BRANCH    OVRCD,WRIA9000
.
. ------- First Time Thru Set Check Var and Reset Firsthru var
         IF        FIRSTHRU=TRUE
            MOVE      SIALCST,CHECKCST
            MOVE      SIALCAT,CHECKCAT
            MOVE      CHECKCST,PRINTCST
            MOVE      FALSE,FIRSTHRU
          ENDIF
.
.
. ------- Has it Changed Cost Centres
          MATCH     SIALCST,CHECKCST
          IF        !@EQUAL
            CALL      ASUB0000
            CALL      ATOT0000
            MOVE      "600",CLNO
            GOTO      WRIA2000
          ENDIF
.
. ------- Has it Changed Catalog Code
          MATCH     SIALCAT,CHECKCAT
          IF        !@EQUAL
            CALL      ASUB0000
            GOTO      WRIA2000
          ENDIF
.
. ------- Update the Actual and Year to Date Figures
WRIA2000  UNPACK    SIALDAT,DIM4,DIM2
          MOVE      DIM2,F2
          LOAD      AMOUNT,F2,PER1,PER2,PER3,PER4,PER5,PER6,PER7,PER8:
                              PER9,PER10,PER11,PER12,PER13
          ADD       SIALUAM,AMOUNT
          STORE     AMOUNT,F2,PER1,PER2,PER3,PER4,PER5,PER6,PER7,PER8:
                              PER9,PER10,PER11,PER12,PER13
          GOTO      WRIA1000
.
WRIA9000  CALL      ASUB0000
          CALL      ATOT0000
.
WRIA9999  RETURN
.--------------------------------------------------------------------
. Print Sub-Totals if Not Zero
.--------------------------------------------------------------------
ASUB0000  COMPARE   ZERO,PER1
          GOTO      ASUB1000 IF NOT EQUAL
          COMPARE   ZERO,PER2
          GOTO      ASUB1000 IF NOT EQUAL
          COMPARE   ZERO,PER3
          GOTO      ASUB1000 IF NOT EQUAL
          COMPARE   ZERO,PER4
          GOTO      ASUB1000 IF NOT EQUAL
          COMPARE   ZERO,PER5
          GOTO      ASUB1000 IF NOT EQUAL
          COMPARE   ZERO,PER6
          GOTO      ASUB1000 IF NOT EQUAL
          COMPARE   ZERO,PER7
          GOTO      ASUB1000 IF NOT EQUAL
          COMPARE   ZERO,PER8
          GOTO      ASUB1000 IF NOT EQUAL
          COMPARE   ZERO,PER9
          GOTO      ASUB1000 IF NOT EQUAL
          COMPARE   ZERO,PER10
          GOTO      ASUB1000 IF NOT EQUAL
          COMPARE   ZERO,PER11
          GOTO      ASUB1000 IF NOT EQUAL
          COMPARE   ZERO,PER12
          GOTO      ASUB1000 IF NOT EQUAL
          IF        SNCONOPR=13
            COMPARE   ZERO,PER13
            GOTO      ASUB1000 IF NOT EQUAL
          ENDIF
          GOTO      ASUB2000
.
ASUB1000  COMPARE   "53",CLNO                    * end of page ?
          CALL      HEAD0000 IF NOT LESS         * start new page
.
          MOVE      "9999,999,999.99",F13TOT1
          MOVE      "9999,999,999.99",F13TOT2
          MOVE      "9999,999,999.99",F13TOT3
          MOVE      "9999,999,999.99",F13TOT4
          MOVE      "9999,999,999.99",F13TOT5
          MOVE      "9999,999,999.99",F13TOT6
          MOVE      "9999,999,999.99",F13TOT7
          MOVE      "9999,999,999.99",F13TOT8
          MOVE      "9999,999,999.99",F13TOT9
          MOVE      "9999,999,999.99",F13TOT10
          MOVE      "9999,999,999.99",F13TOT11
          MOVE      "9999,999,999.99",F13TOT12
          MOVE      "9999,999,999.99",F13TOT13
          FEDIT     PER1,F13TOT1
          FEDIT     PER2,F13TOT2
          FEDIT     PER3,F13TOT3
          FEDIT     PER4,F13TOT4
          FEDIT     PER5,F13TOT5
          FEDIT     PER6,F13TOT6
          FEDIT     PER7,F13TOT7
          FEDIT     PER8,F13TOT8
          FEDIT     PER9,F13TOT9
          FEDIT     PER10,F13TOT10
          FEDIT     PER11,F13TOT11
          FEDIT     PER12,F13TOT12
          FEDIT     PER13,F13TOT13
.
          MATCH     CHECKCAT,SP70
          IF        @EQUAL
            CALL      SNON0000
          ELSE
            PACK      KEY7,CHECKCAT,SP70
            CALL      RDSIIA1
          ENDIF
          UNPACK    SIIADES,KEY25,KEY25A
          MATCH     SIIACAT,SP20
          MOVE      SP1,DIM1
          IF        SIIANON=1
            MOVE      "*",DIM1
          ENDIF
.
          PRINT     "|",DIM1,SIIACAT,SP1,KEY25,"|":
                    F13TOT1," ",F13TOT2," ",F13TOT3," ",F13TOT4," ":
                    F13TOT5," ",F13TOT6,*132,"|":
                    *N,"|",*11,KEY25A,*36,"|",F13TOT7," ",F13TOT8:
                    " ",F13TOT9," ":
                    F13TOT10," ",F13TOT11," ",F13TOT12,*132,"|"
          ADD       THREE,CLNO
.
          IF        SNCONOPR=13
            PRINT     "|",*36,"|",F13TOT13,*132,"|"
          ELSE
            PRINT     "|",*36,"|",*132,"|"
          ENDIF
          IF        EXPORTYN=1
            CALL      WREXPT00
          ENDIF
.
          ADD       PER1,TPER1
          ADD       PER2,TPER2
          ADD       PER3,TPER3
          ADD       PER4,TPER4
          ADD       PER5,TPER5
          ADD       PER6,TPER6
          ADD       PER7,TPER7
          ADD       PER8,TPER8
          ADD       PER9,TPER9
          ADD       PER10,TPER10
          ADD       PER11,TPER11
          ADD       PER12,TPER12
          ADD       PER13,TPER13
.
ASUB2000  MOVE      ZERO,PER1
          MOVE      ZERO,PER2
          MOVE      ZERO,PER3
          MOVE      ZERO,PER4
          MOVE      ZERO,PER5
          MOVE      ZERO,PER6
          MOVE      ZERO,PER7
          MOVE      ZERO,PER8
          MOVE      ZERO,PER9
          MOVE      ZERO,PER10
          MOVE      ZERO,PER11
          MOVE      ZERO,PER12
          MOVE      ZERO,PER13
          MOVE      SIALCST,CHECKCST
          MOVE      SIALCAT,CHECKCAT
          MOVE      SIALDAT,CHECKDAT
.
ASUB9999  RETURN
.--------------------------------------------------------------------
. Print Totals if Not Zero
.--------------------------------------------------------------------
ATOT0000  COMPARE   ZERO,TPER1
          GOTO      ATOT1000 IF NOT EQUAL
          COMPARE   ZERO,TPER2
          GOTO      ATOT1000 IF NOT EQUAL
          COMPARE   ZERO,TPER3
          GOTO      ATOT1000 IF NOT EQUAL
          COMPARE   ZERO,TPER4
          GOTO      ATOT1000 IF NOT EQUAL
          COMPARE   ZERO,TPER5
          GOTO      ATOT1000 IF NOT EQUAL
          COMPARE   ZERO,TPER6
          GOTO      ATOT1000 IF NOT EQUAL
          COMPARE   ZERO,TPER7
          GOTO      ATOT1000 IF NOT EQUAL
          COMPARE   ZERO,TPER8
          GOTO      ATOT1000 IF NOT EQUAL
          COMPARE   ZERO,TPER9
          GOTO      ATOT1000 IF NOT EQUAL
          COMPARE   ZERO,TPER10
          GOTO      ATOT1000 IF NOT EQUAL
          COMPARE   ZERO,TPER11
          GOTO      ATOT1000 IF NOT EQUAL
          COMPARE   ZERO,TPER12
          GOTO      ATOT1000 IF NOT EQUAL
          IF        SNCONOPR=13
            COMPARE   ZERO,TPER13
            GOTO      ATOT1000 IF NOT EQUAL
          ENDIF
          GOTO      ATOT2000
.
ATOT1000  MOVE      "9999,999,999.99",F13TOT1
          MOVE      "9999,999,999.99",F13TOT2
          MOVE      "9999,999,999.99",F13TOT3
          MOVE      "9999,999,999.99",F13TOT4
          MOVE      "9999,999,999.99",F13TOT5
          MOVE      "9999,999,999.99",F13TOT6
          MOVE      "9999,999,999.99",F13TOT7
          MOVE      "9999,999,999.99",F13TOT8
          MOVE      "9999,999,999.99",F13TOT9
          MOVE      "9999,999,999.99",F13TOT10
          MOVE      "9999,999,999.99",F13TOT11
          MOVE      "9999,999,999.99",F13TOT12
          MOVE      "9999,999,999.99",F13TOT13
          FEDIT     TPER1,F13TOT1
          FEDIT     TPER2,F13TOT2
          FEDIT     TPER3,F13TOT3
          FEDIT     TPER4,F13TOT4
          FEDIT     TPER5,F13TOT5
          FEDIT     TPER6,F13TOT6
          FEDIT     TPER7,F13TOT7
          FEDIT     TPER8,F13TOT8
          FEDIT     TPER9,F13TOT9
          FEDIT     TPER10,F13TOT10
          FEDIT     TPER11,F13TOT11
          FEDIT     TPER12,F13TOT12
          FEDIT     TPER13,F13TOT13
.
          MOVE      SICADESC,KEY30
          CALL      UND132
          PRINT     "| Cost Centre ",SICACODE," Total",*36,"|":
                    F13TOT1," ",F13TOT2," ",F13TOT3," ",F13TOT4," ":
                    F13TOT5," ",F13TOT6,*132,"|":
                    *N,"| ",KEY30,*36,"|",F13TOT7:
                    " ",F13TOT8," ",F13TOT9," ":
                    F13TOT10," ",F13TOT11," ",F13TOT12,*132,"|"
          ADD       TWO,CLNO
.
          IF        SNCONOPR=13
            PRINT     "|",*36,"|",F13TOT13,*132,"|"
            ADD       ONE,CLNO
          ENDIF
.
          ADD       TPER1,GPER1
          ADD       TPER2,GPER2
          ADD       TPER3,GPER3
          ADD       TPER4,GPER4
          ADD       TPER5,GPER5
          ADD       TPER6,GPER6
          ADD       TPER7,GPER7
          ADD       TPER8,GPER8
          ADD       TPER9,GPER9
          ADD       TPER10,GPER10
          ADD       TPER11,GPER11
          ADD       TPER12,GPER12
          ADD       TPER13,GPER13
.
ATOT2000  MOVE      ZERO,TPER1
          MOVE      ZERO,TPER2
          MOVE      ZERO,TPER3
          MOVE      ZERO,TPER4
          MOVE      ZERO,TPER5
          MOVE      ZERO,TPER6
          MOVE      ZERO,TPER7
          MOVE      ZERO,TPER8
          MOVE      ZERO,TPER9
          MOVE      ZERO,TPER10
          MOVE      ZERO,TPER11
          MOVE      ZERO,TPER12
          MOVE      ZERO,TPER13
.
ATOT9999  RETURN
.--------------------------------------------------------------------------
. Print Report Totals
.--------------------------------------------------------------------------
PRTOT000  CALL      UND132
PRTOT100  MOVE      "9999,999,999.99",F13TOT1
          MOVE      "9999,999,999.99",F13TOT2
          MOVE      "9999,999,999.99",F13TOT3
          MOVE      "9999,999,999.99",F13TOT4
          MOVE      "9999,999,999.99",F13TOT5
          MOVE      "9999,999,999.99",F13TOT6
          MOVE      "9999,999,999.99",F13TOT7
          MOVE      "9999,999,999.99",F13TOT8
          MOVE      "9999,999,999.99",F13TOT9
          MOVE      "9999,999,999.99",F13TOT10
          MOVE      "9999,999,999.99",F13TOT11
          MOVE      "9999,999,999.99",F13TOT12
          MOVE      "9999,999,999.99",F13TOT13
          MOVE      "9999,999,999.99",F13TOT2
          FEDIT     GPER1,F13TOT1
          FEDIT     GPER2,F13TOT2
          FEDIT     GPER3,F13TOT3
          FEDIT     GPER4,F13TOT4
          FEDIT     GPER5,F13TOT5
          FEDIT     GPER6,F13TOT6
          FEDIT     GPER7,F13TOT7
          FEDIT     GPER8,F13TOT8
          FEDIT     GPER9,F13TOT9
          FEDIT     GPER10,F13TOT10
          FEDIT     GPER11,F13TOT11
          FEDIT     GPER12,F13TOT12
          FEDIT     GPER13,F13TOT13
.
          PRINT     "| Report Total",*36,"|":
                    F13TOT1," ",F13TOT2," ",F13TOT3," ",F13TOT4," ":
                    F13TOT5," ",F13TOT6,*132,"|":
                    *N,"|",*36,"|",F13TOT7," ",F13TOT8," ",F13TOT9," ":
                    F13TOT10," ",F13TOT11," ",F13TOT12,*132,"|"
          ADD       TWO,CLNO
          IF        SNCONOPR=13
            PRINT     "|",*36,"|",F13TOT13,*132,"|"
            ADD       ONE,CLNO
          ENDIF
          GOTO      PRTOT900
.
.
PRTOT900  CALL      UND132
          IF        CPAGENO>0 & REPTSTKF=0 & HNONUSAG=1
            PRINT     *34,"******  These Figures are Calculated ":
                             "as at Receival Time  ******"
          ELSE
            IF        CPAGENO>0 & REPTSTKF=0 & HNONUSAG=2
              PRINT     *34,"******  These Figures are Calculated ":
                               "as at Purchase Order Time  ******"
            ENDIF
          ENDIF
          PRINT     *50,"***** End of Report *****",*N:
                    *1,"WARNING : Information reported is restricted ":
                    "to User Security Access"
.
          RETURN
.------------------------------------------------------------
. Print Report Heading
.------------------------------------------------------------
HEAD0000  CALL      HEAD132                     * print heading
          MOVE      NONDESC,REPTDESC
          LOAD      REPTDESC,REPTSTKF,STKDESC,BOTHDESC
          IF        CPAGENO=1
            STRIP     FROMCST
            STRIP     TOCST
            STRIP     FROMWAR
            STRIP     TOWAR
            PRINT     *+,"Cost Centre Range : ",FROMCST," to ",TOCST,*N:
                      "Warehouse   Range : ",FROMWAR," to ",TOWAR,*N
            ADD       THREE,CLNO
          ENDIF
.
          PACK      KEY5,CHECKCST,SP70
          CALL      RDSICA1
          IF        OVRCD=1
            MOVE      SP70,SICACODE
            MOVE      "Unknown Cost Centre",SICADESC
          ENDIF
.
          MOVE      SICADESC,KEY32
          PRINT     "Cost Centre: ",CHECKCST,SP1,KEY32:
                    *53,"Financial Year ",USYEAR,REPTDESC
          CALL      UND132                      * print line
.
          PRINT     "| Catalog":
                        *36,"|",*46,HAPER1,*60,HAPER2,*72,HAPER3,*90,HAPER4:
                                *105,HAPER5,*121,HAPER6,*132,"|",*N:
                    "|",*36,"|",*46,HAPER7,*60,HAPER8,*72,HAPER9,*90,HAPER10:
                                *105,HAPER11,*121,HAPER12,*132,"|"
          ADD       TWO,CLNO
          IF        SNCONOPR=13
            PRINT     "|",*36,"|",HAPER13,*132,"|"
            ADD       ONE,CLNO
          ENDIF
          CALL      UND132                      * print line
.
HEAD9999  RETURN
.--------------------------------------------------------------------------
.------------------------------------------------------------------------
. Input Parameters
. ----------------
. STRCST    =   From Cost Centre
. ENDCST    =   To Cost Centre
. SIWAWAR   =   Warehouse - Blank if All
. FWAREHS   =   From Warehouse
. TWAREHS   =   To Warehouse
. FCATALOG  =   From Catalog Code
. TCATALOG  =   To Catalog Code
. FPRODGP   =   From Subjective/Product Group
. TPRODGP   =   To Subjective/Product Group
. FDESCRP   =   From Catalog Description
. TDESCRP   =   To Catalog Description
. HNONUSAG  =   System Parameter
.                1 = Take Non-Stock/Catalog Usage at Receival Time
.                2 = Take Non-Stock/Catalog Usage at Purchase Time
. INCLTYPE  =   What type of Usage is required
.                0 = All Stock and Non-Stock/Catalog
.                1 = Stock Only
.                2 = Non-Stock Only
.                3 = Stock Only (Medical & Surgical)
.                4 = Stock Only (Catering)
.                5 = Stock Only (Domestic)
.                6 = Stock Only (Engineering)
.                7 = Stock Only (Printing)
.                8 = Stock Only (Sundry Supplies)
. USYEAR     =   Usage Year
. SIPEPER    =   Usage Period
.
. Input Files Required
. -------------------
. SINPOCFD
. SINPOCIO
. SINPOFFD
. SINPOFIO
. SINPOAFD
. SINPOAIO
. SINCCHFD
. SINCCHIO
. SINCIHFD
. SINCIHIO
. SINWARFD
. SINWARIO
. SINALLFD        -        Temporary Usage File FD
. SINALLCD        -        Temporary Usage File IO
.
. Returns
. -------
. Output index File:  sinallpp     (pp - port number)
. Index            :  SINALLA1
.------------------------------------------------------------------------
. Calculate Usage
.------------------------------------------------------------------------
LOAD0000  CALL      CRALL000                * Build Temp File
.
          IF        INCLTYPE = 1
            GOTO      LOAD4000               * Stock Cata Usage
          ENDIF
.
          DISPLAY   *P1:24,*EL,"Loading Non-Stock/Catalog Usage Data.....";
.
          IF        HNONUSAG = 2
            GOTO      LOAD2000
          ENDIF
.
          PACK      KEY6,USYEAR,SP70
          CALL      RSSIPF3
LOAD1000  CALL      RKSIPF3
          BRANCH    OVRCD,LOAD4000
.
          ADD       ONE,SECTOR
          IF        (SECTOR%100=0)
             DISPLAY   *P1:24,"Scanning Receivals ",SECTOR," - ",SIPFPON,*EL;
          ENDIF
.
          UNPACK    SIPFUDT,DIM4,DIM2
          MATCH     USYEAR,DIM4
          GOTO      LOAD4000 IF NOT EQUAL
.
          PACK      KEY7,SIPFPON,SP70
          CALL      RDSIPA1
          BRANCH    OVRCD,LOAD1000     * get header data (should be there)
.
          PACK      KEY10,SIPFPON,SIPFITM,SP70
          CALL      RDSIPC1
          BRANCH    OVRCD,LOAD1000     * get item data (should be there)
.
          MOVE      SIPCPRD,KEY5
          CALL      RDSISA1
.
          CALL      SNOL0000                 * Set up non variables
.
          MATCH     SP7,SIPCCAT
          GOTO      LOAD1100 IF EQUAL
.
          PACK      KEY7,SIPCCAT,SP70
          CALL      RDSIIA1
          IF        OVRCD=1 | SIIANON=0
            GOTO      LOAD1000
          ELSE
            MOVE      ONE,SIFACTOR
            PACK      KEY30,SIIAISS,SIPFSUT
            CALL      RDSIFA1
          ENDIF
.
LOAD1100  MOVE      SIPCPRD,SICHSUB          * For Range Checking
          MOVE      SIPCCST,SICHCST          * For Range Checking
          MOVE      SP70,SICHWAR             * For Range Checking
.
          CALL      SUBR0000
          BRANCH    EXIT,LOAD1000
.
          MOVE      SP5,SIPCWAR
          PACK      KEY28,SIPCPRD,SIPCCAT,SIPCCST,SIPCWAR,SIPFUDT
          CALL      RDSIAL1
          IF        OVRCD=1
            PACK      SIALDAT,SIPFUDT,SP70
            PACK      SIALCAT,SIPCCAT,SP70
            PACK      SIALSUB,SIPCPRD,SP70
            PACK      SIALCST,SIPCCST,SP70
            PACK      SIALWAR,SIPCWAR,SP70
            ASSIGN    SIPFCST*SIPFQTY,SIALUAM
            ASSIGN    SIPFQTY*SIFACTOR,SIALUQT
            IF        SIALUQT<>0 | SIALUAM<>0
              CALL      WRSIAL1
            ENDIF
          ELSE
            ASSIGN    SIPFCST*SIPFQTY+SIALUAM,SIALUAM
            ASSIGN    SIPFQTY*SIFACTOR+SIALUQT,SIALUQT
            CALL      UPSIAL1
          ENDIF
          GOTO        LOAD1000
.
LOAD2000  PACK      KEY6,USYEAR,SP70
          CALL      RSSIPC7
LOAD2500  CALL      RKSIPC7
          BRANCH    OVRCD,LOAD4000
.
          ADD       ONE,SECTOR
          IF        (SECTOR%100=0)
             DISPLAY   *P1:24,"Scanning Receivals ",SECTOR," - ",SIPFPON,*EL;
          ENDIF
.
          UNPACK    SIPCDAT,DIM4,DIM2
          MATCH     USYEAR,DIM4   * only process desired date range
          GOTO      LOAD4000 IF NOT EQUAL
.
          PACK      KEY7,SIPCPON,SP70
          CALL      RDSIPA1
          BRANCH    OVRCD,LOAD2500     * get header data (should be there)
.
          MOVE      SIPCPRD,KEY5
          CALL      RDSISA1
          IF        OVRCD=1
            DISPLAY   *P50:24,*EL,"Product Group Missing : ",KEY5;
            CALL      HITENTER
            GOTO      LOAD2500
          ENDIF
.
          CALL      SNOL0000                 * Set up non variables
.
          MATCH     SP7,SIPCCAT
          GOTO      LOAD2600 IF EQUAL
.
          PACK      KEY7,SIPCCAT,SP70
          CALL      RDSIIA1
          IF        OVRCD=1 | SIIANON=0
            GOTO      LOAD2500
          ENDIF
.
LOAD2600  MOVE      SIPCPRD,SICHSUB          * For Range Checking
          MOVE      SIPCCST,SICHCST          * For Range Checking
          MOVE      SP70,SICHWAR             * For Range Checking
.
          CALL      SUBR0000                 * Check Ranges for SUB order
          BRANCH    EXIT,LOAD2500            * Outside Chosen Range
.
          MOVE      SP5,SIPCWAR
          PACK      KEY28,SIPCPRD,SIPCCAT,SIPCCST,SIPCWAR,SIPCDAT
          CALL      RDSIAL1
          IF        OVRCD=1
            PACK      SIALDAT,SIPCDAT,SP70
            PACK      SIALCAT,SIPCCAT,SP70
            PACK      SIALSUB,SIPCPRD,SP70
            PACK      SIALCST,SIPCCST,SP70
            PACK      SIALWAR,SIPCWAR,SP70
            ASSIGN    SIPCECT*SIPCOQT,SIALUAM
            MOVE      SIPCOQT,SIALUQT
            IF        SIALUQT<>0 | SIALUAM<>0
              CALL      WRSIAL1
            ENDIF
          ELSE
            ASSIGN    SIPCECT*SIPCOQT+SIALUAM,SIALUAM
            ADD       SIPCOQT,SIALUQT
            CALL      UPSIAL1
          ENDIF
          GOTO        LOAD2500
.
. ------- Get Stock Usage
LOAD4000  IF        INCLTYPE=2
            GOTO      LOAD9999
          ENDIF
.
          DISPLAY   *P1:24,*EL,"Loading Stock Usage Data.....";
          PACK      KEY5,STRCST,SP70
          CALL      RSSICA1
          CALL      RPSICA1
.
LOAD6000  CALL      RKSICA1
          BRANCH    OVRCD,LOAD9999
.
          PACK      KEY28,SICACODE,USYEAR,SP70
          CALL      RSSICH3
.
LOAD8000  CALL      RKSICH3
          BRANCH    OVRCD,LOAD6000
.
          MATCH     SICACODE,SICHCST
          GOTO      LOAD6000 IF NOT EQUAL
.
          UNPACK    SICHDAT,DIM4,DIM2
          MATCH     DIM4,USYEAR
          GOTO      LOAD6000 IF NOT EQUAL         * Only Want Year to date
.
          PACK      SIIACAT,SICHCAT,SP70
          PACK      KEY7,SICHCAT,SP70
          CALL      RDSIIA1
          IF        OVRCD=1 | SIIANON=1
            GOTO      LOAD8000               * No Non-Stock, Stock only
          ENDIF
.
          CALL      SUBR0000                 * Check Ranges for SUB order
          BRANCH    EXIT,LOAD8000
.
          PACK      KEY28,SICHSUB,SICHCAT,SICHCST,SICHWAR,SICHDAT
          CALL      RDSIAL1
          IF        OVRCD=1
            PACK      SIALDAT,SICHDAT,SP70
            PACK      SIALCAT,SICHCAT,SP70
            PACK      SIALSUB,SICHSUB,SP70
            PACK      SIALCST,SICHCST,SP70
            PACK      SIALWAR,SICHWAR,SP70
            MOVE      SICHUAM,SIALUAM
            MOVE      SICHUQT,SIALUQT
            IF        SIALUQT<>0 | SIALUAM<>0
              CALL      WRSIAL1
            ENDIF
          ELSE
            PACK      SIALDAT,SICHDAT,SP70
            PACK      SIALCAT,SICHCAT,SP70
            PACK      SIALSUB,SICHSUB,SP70
            PACK      SIALCST,SICHCST,SP70
            PACK      SIALWAR,SICHWAR,SP70
            ADD       SICHUAM,SIALUAM
            ADD       SICHUQT,SIALUQT
            CALL      UPSIAL1
          ENDIF
          GOTO     LOAD8000
.
LOAD9999  RETURN
.----------------------------------------------------------
. Set Non-Data up for calulations and printing for
. if not using sincchaf then warehouse is relavent
.----------------------------------------------------------
SNON0000  MOVE      "Non-Catalogued Item",SIIADES
          PACK      SIIADES,SIIADES,SP70
          MOVE      ZERO,SIIAAVC
          MOVE      ONE,SIIAISS
          MOVE      SP70,SIIACAT
          MOVE      ONE,SIIANON
          MOVE      " 1",SIIESID
          MOVE      " 0",SIIASTI
.
SNON9999  RETURN
.----------------------------------------------------------
. Set Non-Data up for calulations and printing
. if using sincchaf then warehouse is not relavent
.----------------------------------------------------------
SNOL0000  MOVE      "Non-Catalogued Item",SIIADES
          PACK      SIIADES,SIIADES,SP70
          MOVE      ZERO,SIIAAVC
          MOVE      ONE,SIIAISS
          MOVE      SP70,SIIACAT
          MOVE      ONE,SIIANON
          MOVE      " 1",SIIESID
          MOVE      " 0",SIIASTI
          MOVE      SP70,SIWAWAR
.
SNOL9999  RETURN
.----------------------------------------------------------
. Check Ranges for Report
. Requires:      SIIACAT    match to FROM,TCATALOG
.                SIIADES    match to FROM,TDESCRP
.                SICHSUB    match to FROM,TPRODGP
.                SIIHWAR    match to FROM,SIWAWAR
.                SICHCST    match to FROM,ENDCST
.----------------------------------------------------------
SUBR0000  MOVE      ZERO,EXIT
.
          MATCH     STRCST,SICHCST
          GOTO      SUBR9000 IF LESS
          MATCH     SICHCST,ENDCST
          GOTO      SUBR9000 IF LESS
.
          MATCH     SP70,SICHWAR
          IF        !@EQUAL
            MATCH     FWAREHS,SICHWAR
            GOTO      SUBR9000 IF LESS
            MATCH     SICHWAR,TWAREHS
            GOTO      SUBR9000 IF LESS
.
            PACK      KEY9,PASSCODE,SICHWAR,SP70   * check warehouse security
            CALL      RDSIWS1
            BRANCH    OVRCD,SUBR9000
.
            PACK      KEY12,SIIACAT,SICHWAR
            CALL      RDSIIE1
            BRANCH    OVRCD,SUBR9000
          ENDIF
.
SUBR1000  BRANCH    INCLTYPE,SUBR9999,SUBR3000,SUBR2000
          GOTO      SUBR9999
.
. SIIANON   FORM      1      Non-Stock Item 0=No
.------------------------------------------------
SUBR2000  COMPARE   ONE,SIIANON
          GOTO      SUBR9000 IF EQUAL   * Non-Stock Only
          GOTO      SUBR9999
.
SUBR3000  COMPARE   ZERO,SIIANON
          GOTO      SUBR9000 IF EQUAL   * Stock Only
          GOTO      SUBR9999
.
SUBR9000  MOVE      ONE,EXIT
.
SUBR9999  RETURN
.--------------------------------------------------------------------------
. Execute Transfer Script eg softerm
.--------------------------------------------------------------------------
TRAN0000  MOVE     YES,DEFYESNO
          CLOSE    EXPORTFL
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          MOVE     "EXPORT",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   KEY8,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTFL,KEY8
          CLOSE    EXPORTFL
.
TRAN9999  RETURN
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  MOVE     "EXPORT",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          PREP     EXPORTFL,KEY8
MAKEXP10  WRITE    EXPORTFL,SEQ;"Year",TABDELM:
                           "Cost Centre",TABDELM,"Cost Centre Name",TABDELM:
                           "Stock/Non-Stock",TABDELM:
                           "Catalog",TABDELM,"Catalog Name",TABDELM:
                           HAPER1,TABDELM,HAPER2,TABDELM,HAPER3,TABDELM:
                           HAPER4,TABDELM,HAPER5,TABDELM,HAPER6,TABDELM:
                           HAPER7,TABDELM,HAPER8,TABDELM,HAPER9,TABDELM:
                           HAPER10,TABDELM,HAPER11,TABDELM,HAPER12,TABDELM:
                           HAPER13
          GOTO     MAKEXP99
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WREXPT00  WRITE     EXPORTFL,SEQ;USYEAR,TABDELM:
                               SICACODE,TABDELM,SICADESC,TABDELM:
                               DIM1,TABDELM,SIIACAT,TABDELM,SIIADES,TABDELM:
                               PER1,TABDELM,PER2,TABDELM,PER3,TABDELM:
                               PER4,TABDELM,PER5,TABDELM,PER6,TABDELM:
                               PER7,TABDELM,PER8,TABDELM,PER9,TABDELM:
                               PER10,TABDELM,PER11,TABDELM,PER12,TABDELM:
                               PER13
          GOTO      WREXPT99
WREXPT99  RETURN
.
.--------------------------------------------------
. Enter Range
.  where SICA    = System & File for Keyin Routines
.        CST     = Field ID
.        RCOST   = Call Routine Label
.        "    4" = Screen Item Number for "from" Variable
.        "    5" = Screen Item Number for "to" Variable
.        yyyyy.. = Description of Variable
.
.  Return Values
.        FROMCST  Code & Description for Start of Range
.        TOCST    Code & Description for End of Range
.        STRCST   Code for Start of Range
.        ENDCST   Code for End of Range
.--------------------------------------------------
RCOST000  MOVE      "    4",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
          CALL      KSICAA00
          BRANCH    EXIT,RCOST100,RCOST950
          MOVE      SICACODE,STRCST
          PACK      FROMCST,SICACODE,SP1,SICADESC
          GOTO      RCOST140
RCOST100  MOVE      "Start             ",FROMCST
          MOVE      SP70,STRCST

RCOST140  MOVE      FROMCST,VAR
          CALL      DISPITEM
.
RCOST150  MOVE      "    5",FLDID
          CALL      GETPOSIT
          CALL      KSICAA00
          BRANCH    EXIT,RCOST200,RCOST950
          MOVE      SICACODE,ENDCST
          PACK      TOCST,SICACODE,SP1,SICADESC
          MATCH     STRCST,ENDCST
          GOTO      RCOST900 IF EQUAL
          GOTO      RCOST900 IF NOT LESS
          BEEP
          MOVE      "To Cost Centre Must Be > From Cost Centre - ",DISPMSG
          MOVE      SP70,VAR
          CALL      DISPITEM
          CALL      MESSAGE1
          GOTO      RCOST000
.
RCOST200  MOVE      "Finish             ",TOCST
          MOVE      Z70,ENDCST
.
RCOST900  MOVE      "    4",FLDID
          CALL      GETPOSIT
          MOVE      ZERO,EXIT
          GOTO      RCOST999
.
RCOST950  MOVE      TWO,EXIT
          GOTO      RCOST999
.
RCOST999  RETURN
.
.----------------------------------------------------------------------
. Range of Warehouse Code with security checked
.----------------------------------------------------------------------
..EWAR0000  IF        INCLTYPE=2
..            MOVE      "    7",FLDID
..            CALL      GETPOSIT
..            MOVE      "Finish                                        ",TOWAR
..            PACK      VAR,TOWAR,SP70
..            CALL      DISPITEM
..            PACK      TWAREHS,Z70
.
..            MOVE      "    6",FLDID
..            CALL      GETPOSIT
..            MOVE      "Start                                         ",FROMWAR
..            PACK      VAR,FROMWAR,SP70
..            CALL      DISPITEM
..            PACK      FWAREHS,SP70
.
..            GOTO      EWAR9999
..          ENDIF
.
EWAR0000  MOVE      "    6",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          PACK      SIWAWAR,SP70
          PACK      SIWADES,SP70
          CALL      KSIWSA00
          BRANCH    EXIT,EWAR0100,EWAR9500
          MOVE      SIWAWAR,FWAREHS
          PACK      FROMWAR,SIWAWAR,SP1,SIWADES
          GOTO      EWAR0150
EWAR0100  MOVE      "Start                                         ",FROMWAR
          PACK      FWAREHS,SP70
.
EWAR0150  MOVE      FROMWAR,VAR
          CALL      DISPITEM
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          PACK      SIWAWAR,SP70
          PACK      SIWADES,SP70
          CALL      KSIWSA00
          BRANCH    EXIT,EWAR0200,EWAR9500
          MOVE      SIWAWAR,TWAREHS
          PACK      TOWAR,SIWAWAR,SP1,SIWADES
          MATCH     FWAREHS,TWAREHS
          GOTO      EWAR9000 IF EQUAL
          GOTO      EWAR9000 IF NOT LESS
          BEEP
          MOVE      "To Warehouse Must Be > From Warehouse - ",DISPMSG
          CALL      MESSAGE1
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          GOTO      EWAR0000
.
EWAR0200  MOVE      "Finish                                        ",TOWAR
          PACK      TWAREHS,Z70
.
EWAR9000  MOVE      "    6",FLDID
          CALL      GETPOSIT
          MOVE      ZERO,EXIT
          GOTO      EWAR9999
.
EWAR9500  MOVE      TWO,EXIT
          GOTO      EWAR9999
.
EWAR9999  RETURN
.
.----------------------------------------------------------------------
. Keyin Year
.----------------------------------------------------------------------
EYEAR000  CALL      RINPECON
          MOVE      SIPECYR,USYEAR
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,USYEAR
          PACK      USYEAR,USYEAR,SP70
.
          MATCH     SP70,USYEAR
          GOTO      EYEAR950 IF EQUAL
          PACK      KEY4,SP3,EXITCHAR
          MATCH     KEY4,USYEAR
          GOTO      EYEAR950 IF EQUAL
.
          TYPE      USYEAR
          GOTO      EYEAR000 IF NOT EQUAL
.
          MOVE      USYEAR,SIPEYF4
          IF        SIPEYF4<100
            SQUEEZE   USYEAR
            MOVE      USYEAR,FORM2
            PACK      USYEAR,CCC,FORM2,SP70
          ENDIF
.
          REP       " 0",USYEAR
.
EYEAR900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      EYEAR999
.
EYEAR950  MOVE      TWO,EXIT                     * quit screen
.
EYEAR999  RETURN
ESTCK000  MOVE      FALSE,EXIT
          MOVE      ANSS,REPTSTCK
          KEYIN     *PCCOL:CVERT,*EL,*V2LON,*RV,REPTSTCK
          PACK      REPTSTCK,REPTSTCK,SP10
.
          MATCH     EXITCHAR,REPTSTCK
          IF        @EQUAL
            MOVE      TWO,EXIT
            GOTO      ESTCK999
          ENDIF
.
          TYPE      REPTSTCK
          GOTO      ESTCK900 IF EQUAL
          REP       UPPLOW,REPTSTCK
          MOVE      REPTSTCK,ANS
          REP       "A2S1N0",ANS
          TYPE      ANS
          GOTO      ESTCK900 IF NOT EQUAL
.
. -------- Valid Option
          MOVE      ANS,FORM1
          IF        FORM1=2
            MOVE      ANSA,REPTSTCK          * Stock & Non-Stock
            MOVE      ZERO,INCLTYPE
            DISPLAY   *PCCOL:CVERT,*EL,*V2LON,"All Stock & Non-Stock"
            MOVE      FORM1,REPTSTKF           * Report Variable
            GOTO      ESTCK999
          ENDIF
.
          IF        FORM1=1
            MOVE      ANSS,REPTSTCK          * Only Stock
            MOVE      ONE,INCLTYPE
            DISPLAY   *PCCOL:CVERT,*EL,*V2LON,"Stock Only"
            MOVE      FORM1,REPTSTKF           * Report Variable
            GOTO      ESTCK999
          ENDIF
.
          IF        FORM1=0
            MOVE      ANSN,REPTSTCK          * Only Non-Stock
            MOVE      TWO,INCLTYPE
            DISPLAY   *PCCOL:CVERT,*EL,*V2LON,"Non-Stock Only"
            MOVE      FORM1,REPTSTKF           * Report Variable
            GOTO      ESTCK999
          ENDIF
.
ESTCK900  BEEP
          CLEAR     DISPMSG
          APPEND    "Invalid Option  ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          GOTO      ESTCK000
.
ESTCK999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       SINALLCD    
          INC       SINCCAIO/INC
          INC       SINCCAKY    
          INC       SINCCBIO/INC
          INC       SINCCEIO/INC
          INC       SINCCFIO/INC
          INC       SINCCHIO/INC
          INC       SINCGAIO/INC
          INC       SINCIAIO/INC
          INC       SINCIEIO/INC
          INC       SINFACIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
          INC       SINSUAIO/INC
          INC       SINWARIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
