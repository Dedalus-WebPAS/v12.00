.******************************************************************************
.* System   :  PATIENT MANAGEMENT SYSTEM                                      *
.* Program  :  IBAPMS26                                                       *
.* Desc     :  Management Analysis Generation                                 *
.******************************************************************************
.* Date     :  14/05/1991                                                     *
.* Author   :  DIG                                                            *
.* Comment  :  This is a total rewrite of IBAPMS26 which was originally       *
.*             copied from IBAPAT44.                                          *
.* Mods     :                                                                 *
.*                                                                            *
.*        V12.00.01 30/05/2025  Don Nguyen     TSK 0955096                    *
.*                  Alphanumeric visit number changes                         *
.*        V11.05.01 27/03/2024 Nikitha B       TSK 0958725                    *
.*                  Opened file pathspaf in INIT0000.                         *
.*        V11.04.01 14/03/2024 J.Tan           TSK 0910994                    *
.*                  Recompiled for CMXMATRX-Added Att.Doctor,Concession card  *
.*        V11.01.05 29/09/2021  J.Tan          TSK 0901515                    *
.*                  Recompiled for CMXMATRX - Added Primary Proc.to Matrix    *
.*        V11.01.04 07/07/2021  J.Tan           TSK 0908588                   *
.*                  Recompiled for CMXMATRX - Exclude Unqualified days for C/P*
.*        V11.01.03 07/04/2021  Tracey Nguyen   TSK 0901515                   *
.*                  Recompiled for PMSCMTFD - Added new fields                *
.*                  a) 1 File type for ICD procedure (PMCCIPF)                *
.*                  b) 3 new CMBS Field Type (PMCCFTS4/PMCCFT5C/PMCCFT6C)     *
.*                  c) 3 new CMBS Codes From (PMCCPC4F,PMCCSC5F,PMCCTC6F)     *
.*                  d) 3 new CMBS Codes To   (PMCCPC4T/PMCCSC5T,PMCCTC6T)     *
.*        V11.01.02 10/03/2021  Tracey Nguyen   TSK 0901515                   *
.*                  Recompiled for PMSCMTFD - Added Primary ICD Procedure 1-5 *
.*                  (PMCCICP1-5)                                              *
.*        V11.01.01 22/02/2021  J.Tan          TSK 0888639                    *
.*                  Changed patmmbs counter record to DIM3                    *
.*        V11.00.05 10/11/2020  J.Tan           TSK 0899562                   *
.*                  Recompiled for CMXMATRX - setup date for reading MBS item *
.*        V11.00.04 29/09/2020  J.Tan          TSK 0896829                    *
.*                  Recompiled for CMXMATRX - use National(PTPGNDRG)DRG       *
.*        V11.00.03 22/09/2020  J.Tan           TSK 0895330                   *
.*                  Recompiled for CMXMATRX - reposition read of Matrix table *
.*        V11.00.02 14/09/2020  J.Tan          TSK 0896303                    *
.*                  Mod to check Casemix flag from invocie file               *
.*        V11.00.01 11/03/2020  J.Tan          TSK 0838262                    *
.*                  Added Effective from and to date to MBS Item file         *
.*        V10.11.01 07/09/2017  J.Tan         TSK 0837479                     *
.*                  Recompiled for CMXMATRX - Consumption typ items           *
.*        V10.10.01 13/06/2017  J.Tan          TSK 0839991                    *
.*                  Recompiled for PATDBTYP (PATCMSTP)                        *
.*        V10.08.02 21/09/2016  J.Tan         TSK 0826370                     *
.*                  Recompiled for CMXMATRX - Chgd MCHGARR MCHGAMT array to F3*
.*        V10.08.01 25/08/2016  Don Nguyen     TSK 0312570                    *
.*                  Recompiled for CMXMATRX - Added check for PTCNDGED=1      *
.*                  Added PMSEDGFD/IO and GETEFDRG                            *
.*        V10.06.01 15/07/2015  J.Tan          CAR 319342                     *
.*                  Recompiled for CMXMATRX - Chg 'Disc.UDF' to 'Care Class'  *
.*        V10.04.05 15/04/2014  J.Tan          CAR 261630                     *
.*                  Removed port number from temp file name                   *
.*        V10.04.04 19/06/2014 J.Tan           CAR 302452                     *
.*                  Recompiled for PATDINVS - Changed MCHGARR/MCHGAMT         *
.*        V10.04.03 27/05/2014  J.Tan          CAR 300784                     *
.*                  Recompiled for STEPDOWN - force stepdown prior inv.fromdat*
.*        V10.04.02 04/04/2014  J.Tan          CAR 297283                     *
.*                  Added Preferred Language PTXAPLAN                         *
.*        V10.04.01 26/02/2014  Ania P         CAR 294994                     *
.*                  Changed KEY11 to KEY12 before calls to xxPTEXC1           *
.*        V10.03.05 13/12/2013  J.Tan          CAR 294609                     *
.*                  Recompiled for CMXMATRX - mods for Default Grouper Version*
.*        V10.03.04 09/09/2013  J.Tan          CAR 289708                     *
.*                  Mods to check Casemix matrix                              *
.*        V10.03.03 01/08/2013  Ebon Clements  CAR 289242                     *
.*                  Fixed write to PATEXCFD - Unique counter length issue     *
.*        V10.03.02 06/05/2013  J.Tan          CAR 284902                     *
.*                  Recompiled for STEPDOWN - force stepdown prior Inv.Fromdat*
.*        V10.03.01 19/06/2012  J.Tan          CAR 266720                     *
.*                  Fixed I*D writing record to patextc file                  *
.*        V10.02.01 28/03/2011  Mike Laming   CAR 240107                      *
.*                  Mods to PATECDaf & PATECOaf variables & Keys - file change*
.*        V10.01.01 24/02/2011  Peter Vela    CAR 233034                      *
.*                  Removed PATBF2FD and PATBF2IO                             *
.*        V10.00.02 14/07/2010  J.Tan         CAR 226158                      *
.*                  Recompiled for STEPDOWN - bed fees update                 *
.*        V10.00.01  Mike Laming   CAR 157391                                 *
.*                   Recompiled for changes to PATEX1FD.                      *
.******************************************************************************
.*        V9.12.04  11/03/2010  J.Tan         CAR 216044                      *
.*                  Mods to include Leave days in stepdown count for TAC      *
.*        V9.12.03  19/01/2010  J.Tan         CAR 166439                      *
.*                  Recompiled for PATCMSTP - C/P additional charge stepdown  *
.*        V9.12.02  18/01/2010  Mike Laming   CAR 157391                      *
.*                  Add PMSVX1FD fields to replace User Defined Fields        *
.*        V9.12.01  21/09/2009  J.Tan         CAR 204390                      *
.*                  Recompiled for STEPDOWN - mods to old bed fees file       *
.*        V9.11.01  13/05/2009  Jill Habasque CAR 196725                      *
.*                  Add counts for TOTMBS & TOTOPS to be after date validation*
.*        V9.09.03  18/04/2008  Peter Vela CAR 165181                         *
.*                  Modified referring doctor to assign from pmvxrhc1.pmsvx1af*
.*                  if adoctr.patmi1af is empty.                              *
.*        V9.09.02  02/01/2007  J.Tan     CAR 154054                          *
.*                  Mods to check NOFEE after STEPDOWN                        *
.*        V9.09.01  22/11/2007  Peter Vela       CAR 132264                   *
.*                  Recompiled for PATCHCFD                                   *
.*        V9.08.03  08/03/2007  Steve Armstrong  CAR 134788                   *
.*                  Added clear of temporary admission number file in CLRT0000*
.*        V9.08.02  05/03/2007  Steve Armstrong  CAR 134788                   *
.*                  Mods to simply OPEN extraction files, rather than         *
.*                  isbuilding them.                                          *
.*        V9.08.01  02/02/2007  Ebon Clements CAR 120001                      *
.*                  Added nz private billing files                            *
.******************************************************************************
.*        V9.04.03  15/09/2005  J.Tan         CAR 73847                       *
.*                  Fixed generating lumpsum                                  *
.*        V9.04.02  25/07/2005  Mike Laming   CAR 57045                       *
.*                  Correct DCFLAG and re-align with V5                       *
.*        V9.04.01  29/11/2004  Mike Laming   CAR 54534                       *
.*                  Re-comple for PATCMSTP - fix Addit.Charge Description     *
.******************************************************************************
.*        V9.03.05  05/08/2004  J.Tan    CAR  52141                           *
.*                  Fixed lumpsum amount                                      *
.*        V9.03.04  27/04/2004  Mike Laming   CAR 51770                       *
.*                  Add OPEN for PATDTRA3 in INIT0000                         *
.*        V9.03.03  27/04/2004  Mike Laming   CAR 48680                       *
.*                  Re-check differences to V6.11 & correct new 9.02 errors   *
.*        V9.03.02  19/04/2004  Sylvek Litewka  CAR 20222                     *
.*                  Modified procedure EXTC0000 to read ICD Procedures file   *
.*                  based on patient discharge date and using RDPTICO1 (new   *
.*                  common IO routine).                                       *
.*        V9.03.01  24/10/2003  J.Tan  CAR 44172                              *
.*                  Mods for Misc.Theatre item charges (pmsmtiaf)             *
.******************************************************************************
.*        V9.02.07  30/10/2002  J.Tan                                         *
.*                  Recompiled for PATCMSTP                                   *
.*        V9.02.06  04/09/2002  Jill Habasque SRF 17573	                      *
.*                  Changed to use RTIODAYS instead of NHOSPDAY               *
.*        V9.02.05  06/06/2002  J.Tan                                         *
.*                  Removed checking for hospital types                       *
.*        V9.02.04  07/05/2002  J.Tan                                         *
.*                  Recompiled for release 6.09 changes                       *
.*        V9.02.03  06/12/2001  Tonii                                         *
.*                   Removed episode type for casemix payment                 *
.*        V9.02.02  22/09/2001  Tonii  SRF 13075                              *
.*                  Recompiled for PATDINVS                                   *
.*        V9.02.01  11/09/2001  Steve Downing                                 *
.*                  Fixed I*D error when writing to extract C file            *
.******************************************************************************
.*        V5.10.B01 30/03/2001  Jill Habasque                                 *
.*                  Casemix mods - removed reference to episode type          *
.*        V5.08.02  04/08/2000  Tonii                                         *
.*                  Fixed I*D when updating/writing to extract B file         *
.******************************************************************************
.*        V5.08.01  16/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.B02 15/03/2000  Greg Horvat                                   *
.*                  Changed to get the coding from the episode coding files   *
.*        V5.08.B01 04/01/2000  Greg Horvat      SRF 636829                   *
.*                  Fixed I*D when updating/writing to extract B file         *
.*            V5.07.02  23/11/1999  Davin                                     *
.*                      Changed for 4 character drgs                          *
.*            V5.07.01  26/04/1999  J.Tan                                     *
.*                      Mods to implement stepdown                            *
.*            V5.07.B02 29/01/1999  Nicole Harrington 507 rebounds            *
.*                      Recompoled for NHOSPDAY                               *
.******************************************************************************
.*            V5.05.02  06/02/1998  Nick          SRF 643724                  *
.*                      Recompiled for PATEXAIO                               *
.*            V5.05.01  07/01/1998  Nick          SRF 643441                  *
.*                      added routine to empty extact files before killing    *
.*                      to avoid any problems with Oracle being unable to     *
.*                      isclear them.                                         *
.*            V5.01.02  17/12/91 J.Tan            SRF 112102                  *
.*                      Fixed doctor type for Extraction file C               *
.*            V5.01.03  14/01/92 DIG              SRF 112536                  *
.*                      Fixed problem with calculation of theatre charges and *
.*                      miscellaneous charges                                 *
.*            V5.01.04  26/03/92 i chung          SRF 112536                  *
.*                      Fixed problem with calculation of theatre charges and *
.*                      miscellaneous charges for Extraction file B           *
.*            V5.01.05  24/03/92 J.Tan            SRF 113107                  *
.*                      Fixed theatre, miscellaneous and bedfee for day cases *
.*        V5.01.06  12/06/92  Graeme Williams               SRF 114865        *
.*                  Changes for 9 character misc items                        *
.*            V5.01.07  14/10/92 J.Tan            SRF 116170                  *
.*                      Mods to include operations within the period only     *
.*            V5.01.08  04/12/92 J.Tan            SRF 119152                  *
.*                      Fixed to include misc.& theatre at the start of period*
.*            V5.01.09  15/01/93 J.Tan  SRF 119867                            *
.*                      Recompiled for PATEXCIO                               *
.*            V5.01.10  06/03/93 J.Tan                                        *
.*                      Fixed theatre figures for patients with care class chg*
.*        V5.01.11  15/07/93  WHIRLPOOL        SRF 123030                     *
.*                  Dudley postcode changes                                   *
.*        V5.01.12  03/02/1994   LOFTY and ROB    SRF 127643                  *
.*                  add the sformat after open of patexann                    *
.*        V5.01.13  26/05/1994 Ian Rutt                                       *
.*                  Fixed Global Recompile Bugs                               * 
.*        V5.01.14  26/09/1994  bez              SRF 129909  QUOTE 8131       *
.*                  Added Journal Adjustments (PTCNJADJ)                      *
.*                  Fixed  F * I                 SRF 131952                   *
.*        V5.02.01  05/12/1994  Whirlpool                                     *
.*                  Fixed packing of cdate so it does,t stuff up DISPHEAD     *
.*        V5.02.02  30/12/1994  Graeme Williams  SRF 129909  Quote 8131       *
.*                  Re-wrote code to calculate journal adjustments            *
.*        V5.03.02  18/10/1995  Howellsy         SRF 612297                   *
.*                  Call OPPTCAT to open patct1cf.                            *
.******************************************************************************
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
          INC       IBACONFD/INC
          INC       PATCALAG/INC
.
          INC       NZPBFEFD/INC
          INC       PATASDFD/INC
          INC       PATHDFFD/INC
          INC       PATHLFFD/INC
          INC       PATLSDFD/INC
          INC       PATLDFFD/INC
          INC       PATAFEFD/INC
          INC       PATFN1FD/INC
          INC       PATFX1FD/INC
          INC       PATCFAFD/INC
          INC       PATBFEFD/INC
          INC       PATCT1FD/INC
          INC       PATCHCFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDADFD/INC
          INC       PATDAYFD/INC
          INC       PATDINVS/INC
          INC       PATDO1FD/INC
          INC       PATDHEAD/INC
          INC       PATDSCFD/INC
          INC       PATDTRFD/INC
          INC       PATECDFD/INC
          INC       PATECOFD/INC
          INC       PATEX1FD/INC
          INC       PATEXBFD/INC
          INC       PATEXCFD/INC
          INC       PATICOFD/INC
          INC       PATITMFD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PMSPX2FD/INC
          INC       PATMI1FD/INC
          INC       PATMMBFD/INC
          INC       PATRCAUD/INC
          INC       PATTRNFD/INC
          INC       PATVISFD/INC
          INC       PATWR1FD/INC
          INC       PMSCIDFD/INC
          INC       PMSCCDFD/INC
          INC       PMSMTIFD/INC
          INC       PMSVX1FD/INC
          INC       PATINVFD/INC
          INC       PATCMXFD/INC
          INC       PATCMTFD/INC
          INC       PMSCMTFD/INC
          INC       PATPGRFD/INC
          INC       PATMCHFD/INC
          INC       PMSEDGFD/INC             * Effective DRG Dates
+
.**********************************************************************
.*                            TEMP FILES                              *
.**********************************************************************
PATTM1XX  IFILE     SQL, FIXED=9, KEY="U1-8"
.
DTMPADMN  DIM       8
.
.Redefine form field for key
.---------------------------
TMPADMN   DIM       8
+
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
ADMDATE   DIM       8
.
CODECL    INIT      "CL"
CHRGFLG   FORM      1
CALDAYS   FORM      4
CDYSDAYS  FORM      6
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
CDYSYEAR  FORM      2
CHDIM8    DIM       8
CMDLINE   DIM       50
.
DAYSCHRG  FORM      6
DISDATE   DIM       8
DIM18     DIM       18
DIM18A    DIM       18
DIM30     DIM       30
.
EFDIM8    DIM       8
EFTDATE   DIM       8         * Effective date (ccyymmdd)
ENDPONE   DIM       8
ETDIM8    DIM       8
EXBDIM8   DIM       8
EXCDATE   DIM       10
EXFDATE   DIM       10
EXTDATE   DIM       10
.
FILEDIM8  DIM       8
FORM92    FORM      9.2
FILEDAY   DIM       8
FILETEMP  DIM       8
FLAGAORB  FORM      1
FLAGDATA  FORM      1
FLAGDISC  FORM      1
FLAGGOT1  FORM      1
FLAGGOT2  FORM      1
FLAGLAST  FORM      1
.
HTMLFILE  FIFO      ASCII, FIXED=250
LASTTYPE  DIM       1
LSTDATE   DIM       8
.
NEWEXTB   FORM      1                                                  *I-48680
.
RTDAYS    FORM      4
SAVADOCT  DIM       6
SAVALLW   FORM      6.2
SAVATYPE  DIM       3
SAVDEPT   DIM       3
SAVDDTE   DIM       8
SAVDISC   FORM      6.2
SAVEDATE  DIM       8
SAVEXTRA  FORM      6.2
SAVRATEF  FORM      6.2
SAVRATEH  FORM      6.2
SAVTALLW  FORM      6.2
SAVTCHST  DIM       3
SAVTMOVE  DIM       1
SAVBEND   FORM      3
SDAYMON   DIM       4
SEC       FORM      2
SYEAR     DIM       4
.
TDAYMON   DIM       4
TODAY     DIM       10
TOTMBS    FORM      6
TOTOPS    FORM      6
TRDATE    DIM       8
TRWRIT    DIM       6
TDYEAR    DIM       4
TTDATE    DIM       8
.
USERID    DIM       10                                                *I-157391
.
WDATE1    DIM       8
WDATE2    DIM       8
WBSEUID   DIM       10
WORKDATE  DIM       8
XDATE1    DIM       8
.
CFPAYCOD  DIM       3        * 3M Codefinder PAY Code
OPCNCONS  DIM       1
.
+
.**********************************************************************
.*                             CONSTANTS                              *
.**********************************************************************
OPNFLAG   FORM      "0"
.
PATEXB    INIT      "patexb"
PATEXC    INIT      "patexc"
.
PRGID     INIT      "IBAPMS26"
PRGNAM    INIT      "Management Analysis Generation"
VERSION   INIT      "V12.00.01"
+
.**********************************************************************
.*                           MAINLINE                                 *
.*                       Controlling Logic                            *
.**********************************************************************
ML0000    CALL      INIT0000           * initialization - open files &
.                                                         display header
ML1000    CALL      GEXTN              * select the extraction file
          COMPARE   ZERO,OPTION
          GOTO      ML9999 IF EQUAL
.
          CALL      DATE0000           * enter extraction dates
          BRANCH    EXIT,ML1000
.
          CALL      INTC0000           * initialize the control file
          CALL      CLRT0000           * clear extract files after opening
          BRANCH    EXIT,ML9999        * error opening extraction file
.
          CALL      LOAD0000           * load the temporary file
          CALL      PROC0000           * process the admission numbers
          CALL      UPDC0000           * update the control file
          GOTO      ML1000
.
ML9999    CALL      KILL0000
          CHAIN     PGM
+
.**********************************************************************
.*                           INIT0000                                 *
.*               Open files and display header                        *
.**********************************************************************
INIT0000  CALL      DISPHEAD                * display screen header
.
          DISPLAY   *P56:24,"Opening patct1cf";
          OPEN      PATCT1C1,"patct1cf"
.
          DISPLAY   *P64:24,"patchcof";
          OPEN      PATCHCO1,"patchcof"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdadaf";
          OPEN      PATDADA1,"patdadaf"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
.
          DISPLAY   *P64:24,"patdtraf";
          OPEN      PATDTRA1,"patdtraf"
          OPEN      PATDTRA3,"patdtraf"                                *I-51770
.
          DISPLAY   *P64:24,"patecdaf";
          OPEN      PATECDA2,"patecdaf"
.
          DISPLAY   *P64:24,"patecoaf";
          OPEN      PATECOA2,"patecoaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          OPEN      PATINVR3,"patinvrf"
.
          DISPLAY   *P64:24,"pmscidaf";
          OPEN      PMSCIDA1,"pmscidaf"
.
          DISPLAY   *P64:24,"paticdof";
          CALL      OPICO1
.
          DISPLAY   *P64:24,"patitemn";
          OPEN      PATITEM1,"patitemn"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"patmmbsf";
          OPEN      PATMMBS1,"patmmbsf"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P64:24,"pmsmtiaf";
          OPEN      PMSMTIA1,"pmsmtiaf"
.
          DISPLAY   *P64:24,"nzpbfeaf";
          OPEN      NZPBFEA1,"nzpbfeaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN;*184,CPRIMOP,CPRIMDS,*217,CAUDQ
          READ      CONTROLF,TEN3;*186,CMBSOPR:
                                  *245,CHOSTYP
          READ      CONTROLF,TEN5;*247,CSTDOWN
          READ      CONTROLF,TWENTY;*164,PTRESDAY,*199,PTCNBCUT,*211,PTCNCNDY
          READ      CONTROLF,FIFTY9;*1,CDLSTEP,*174,PTCNNDAT,*226,CCARECL
          READ      CONTROLF,EIGHTY8;*233,PTCNADES
.
          READ      CONTROLF,EIGHTY;*244,PTCNJADJ  * Journal Adjustments
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FILETEMP
.
INIT9999  RETURN
+
.**********************************************************************
.*                           DATE0000                                 *
.*                   Keyin the extraction dates                       *
.**********************************************************************
DATE0000  MOVE      FALSE,EXIT
          MOVE      FIVE,CVERT
          ADD       OPTION,CVERT
          CALL      IBACLOCK 
          PACK      EDATE,CCC,CYY,CMM,CDD      
          REP       " 0",EDATE
          UNPACK    EDATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      PACDATE                 * pack todays date
          MOVE      CPCDATE,TODAY
.
          DISPLAY   *P20:CVERT,*V2LON,TODAY;
.
.------ keyin from date for the extraction ------
.
DATE1000  MOVE      FORTY,CCOL
          MOVE      FIVE,CVERT
          ADD       OPTION,CVERT
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          MOVE      SP8,EFDATE
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          REP       " 0",CCENT
          DISPLAY   *P40:CVERT,*EL;
.
DATE1100  CALL      KEYDATE                 * keyin the extraction from date
          BRANCH    CQUEST,DATE1100
          BRANCH    OVRCD,DATE9000
          PACK      EFDATE,CCENT,CYEAR,CMON,CDAY
.
          MATCH     PTCNNDAT,EFDATE         * match to date for next update
          GOTO      DATE9100 IF NOT LESS
.
          DISPLAY   *P51:CVERT,"to";
.
DATE2000  MOVE      FIFTY4,CCOL
          MOVE      SP8,ETDATE
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          REP       " 0",CCENT
.
DATE2100  CALL      KEYDATE                 * keyin the extraction "to" date
          BRANCH    CQUEST,DATE2100
          BRANCH    OVRCD,DATE9000
          PACK      ETDATE,CCENT,CYEAR,CMON,CDAY
.
          MATCH     PTCNNDAT,ETDATE         * match to date for next update
          GOTO      DATE9100 IF NOT LESS
.
          MATCH     EFDATE,ETDATE           * match date range
          GOTO      DATE3000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Invalid date range entered **    ";
          CALL      HITENTER
          GOTO      DATE2000
.
DATE3000  MOVE      ZERO,EXIT                                         *I-157391
....      CALL      USID0000                * keyin the User Id.      *I-157391
.
          CALL      CONTQST
          BRANCH    CEXIT,DATE3100,DATE1000,DATE3200
.
.------ yes selected ------
.
DATE3100  UNPACK    ETDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
.
          CALL      DMYCON                  * convert to julian format
.
          ADD       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
.
          CALL      JULCON                  * convert back to CCYYMMDD format
.
          PACK      ENDPONE,CC,YY,MM,DD
          REP       " 0",ENDPONE
.
          UNPACK    EFDATE,EFDIM8
          UNPACK    ETDATE,ETDIM8
          GOTO      DATE9999
.
.------ cancel selected ------
.
DATE3200  MOVE      TRUE,EXIT
          MOVE      SP8,EDATE
          MOVE      SP8,EFDATE
          MOVE      SP8,ETDATE
          GOTO      DATE9999
.
.------ invalid date entered ------
.
DATE9000  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Invalid date entered **    ";
          CALL      HITENTER
.
          COMPARE   FORTY,CCOL              * see if we are entering the
          GOTO      DATE1000 IF EQUAL         first date
          GOTO      DATE2000
.
.------ date entered is >= date for next daily update ------
.
DATE9100  DISPLAY   *P1:24,*EL,*B,*V2LON,"** ",*BLINKON,"ERROR",*HOFF,*V2LON:
                    " - date not on the Day File **    ";
          CALL      HITENTER
.
          COMPARE   FORTY,CCOL              * see if we are entering the
          GOTO      DATE1000 IF EQUAL         first date
          GOTO      DATE2000
.
DATE9999  RETURN
+
.**********************************************************************
.*                                INTC0000                            *
.*                       Initialize the control file                  *
.**********************************************************************
INTC0000  CALL      ETABPOS                 * get the sector and position for
.                                             the update of the dates on the 
          MOVE      ZERO,EDOPERS              control file
.
          WRITAB    CONTROLF,SEC;*ETABPS,SP8,SP8,SP8,EDOPERS
.
          CALL      ETOTPOS                 * get the sector and position for
.                                             the update of the totals on the
          MOVE      ZERO,EADMNS               control file
          MOVE      ZERO,EBDAYS
          MOVE      ZERO,EDCASES
          MOVE      ZERO,ENETAMT
          MOVE      ZERO,ETPRIMOP
          MOVE      ZERO,ETPRIMDS
.
          WRITAB    CONTROLF,SEC;*ETABPS,EADMNS,ETPRIMOP,ETPRIMDS,EBDAYS:
                                  EDCASES,ENETAMT
.
          MOVE      ZERO,TOTOPS
          MOVE      ZERO,TOTMBS
.
INTC9999  RETURN
+
.******************************************************************
.*                            CLRT0000                            *
.*                   Clear extraction files                       *
.* Requires: OPTION - Management generation option selected       *
.* Returns:  EXIT   0 = Ok to continue                            *
.*                  1 = error opening extraction files            *
.******************************************************************
.
CLRT0000  MOVE      OPTION,DIM2
          REP       " 0",DIM2
.
.         Open extraction file A
.
          PACK      FILEDIM8,FILEX1A1,DIM2
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATEX1A1,FILEDIM8            * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,CLRT9100               * no - error
.
.         Clear extraction file A records
.
CLRT2500  MOVE      SP10,KEY8
          CALL      RSPTEXA1                     * position at start of file
          CALL      RKPTEXA1                     * read next record
          BRANCH    OVRCD,CLRT4000               * eof - clear next file
.
          MOVE      PTXAADMN,KEY8
          CALL      DEPTEXA1                     * delete record
          GOTO      CLRT2500                     * get next record
.
.         Open extraction file B
.
CLRT4000  PACK      FILEDIM8,PATEXB,DIM2
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATEXTB1,FILEDIM8            * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,CLRT9100               * no - error
.
.         Clear extraction file B records
.         
CLRT4500  MOVE      SP20,KEY17
          CALL      RSPTEXB1                     * position at start of file
          CALL      RKPTEXB1                     * read next record
          BRANCH    OVRCD,CLRT6000               * eof - clear next file
.         
          PACK      KEY17,DPTXBADM,PTXBTDAT,PTXBTYPE
          CALL      DEPTEXB1                     * delete record
          GOTO      CLRT4500                     * get next record
.         
.         Open extraction file C
.         
CLRT6000  PACK      FILEDIM8,PATEXC,DIM2
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATEXTC1,FILEDIM8            * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,CLRT9100               * no - error
.         
.         Clear extraction file C records
.         
CLRT6500  MOVE      SP20,KEY12
          CALL      RSPTEXC1                     * position at start of file
          CALL      RKPTEXC1                     * read next record
          BRANCH    OVRCD,CLRT7000               * eof - finished
.
          PACK      KEY12,PTXCADMN,PTXCTYPE,PTXCUNIQ
          CALL      DEPTEXC1                     * delete record
          GOTO      CLRT6500                     * get next record
.
.         Create temporary indexed table for admission numbers
.
CLRT7000  CALL      KILL0000
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FILETEMP,CMDLINE
          APPEND    " 9 u1-8",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID               * build temp file
          OPEN      PATTM1XX,FILETEMP            * open temp file
.         
CLRT8000  MOVE      SP8,KEY8
          CALL      RSTMPR1                      * position at start of file
          CALL      RKTMPR1                      * read next record
          BRANCH    OVRCD,CLRT9999               * eof - finished
.         
          MOVE      TMPADMN,KEY8
          CALL      DETMPR1                      * delete record
          GOTO      CLRT8000                     * get next record
.
CLRT9000  MOVE      ZERO,EXIT
          GOTO      CLRT9999                     
.         
CLRT9100  PRINT     *1,"Extraction file ",FILEDIM8," not found."
          MOVE      ONE,EXIT
.
CLRT9999  RETURN
+
.**********************************************************************
.         Remove temp file
.**********************************************************************
KILL0000  CLOSE     PATTM1XX
          PACK      CMDLINE,SP30,SP30
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FILETEMP,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          RETURN
+
.**********************************************************************
.*                               LOAD0000                             *
.*            Load the temporary file with the patients who           *
.*            are in hospital in the period selected                  *
.**********************************************************************
LOAD0000  DISPLAY   *P1:24,*EL,*P20:24,"Admission No : ",*P50:24,"Scanning : ";
.
          UNPACK    ETDATE,TDYEAR,TDAYMON
          UNPACK    EFDATE,SYEAR,SDAYMON
.
.------ open the required day file ------
.
LOAD1000  CLOSE     PATDAYA1
          PACK      FILEDAY,FILDAYA1,SYEAR
.
          TRAP      CREA0000 IF IO          * create day file
          OPEN      PATDAYA1,FILEDAY
          TRAPCLR   IO
.
          PACK      KEY12,SDAYMON,SP10
          CALL      RSPTDAY1                * position on the day file
.
.------ read through the day file ------
.
LOAD2000  CALL      RKPTDAY1
          BRANCH    OVRCD,LOAD5000
.
          UNPACK    PTDYDATE,XMON,XDAY
          DISPLAY   *P1:24,XDAY,SLASH,XMON;
          DISPLAY   *P61:24,*EL,PTDYADMN;
.
          MATCH     TDYEAR,SYEAR             * see if we are processing the 
          GOTO      LOAD3000 IF NOT EQUAL     end year in the period
.
          MATCH     PTDYDATE,TDAYMON        * finished if we have gone past the
          GOTO      LOAD9999 IF LESS          end day in the period
.
.------ see if admission number is on the temp file ------
.
LOAD3000  MOVE      PTDYADMN,KEY8
          CALL      RDTMPR1                 * read the temp file
          BRANCH    OVRCD,LOAD4000
          GOTO      LOAD2000              
.
.------ admission number is not on the temp file ------
.
LOAD4000  MOVE      PTDYADMN,KEY8
          CALL      RDMISS1                 * read the admission file
          BRANCH    OVRCD,LOAD2000
.
          PACK      ADMDATE,ADATE
          REP       " 0",ADMDATE
.
          MATCH     ADMDATE,ETDATE          * see if admitted outside end 
          GOTO      LOAD2000 IF LESS          of period
.
          BRANCH    ASTAT,LOAD2000,LOAD4500,LOAD4100,LOAD4500,LOAD2000
.
.------ patient is discharged ------
.
LOAD4100  MOVE      AADMNO,KEY8
          CALL      RDDSCH1                 * read the discharge file
          BRANCH    OVRCD,LOAD2000
.
.------ pack the discharge date variable ------
.
LOAD4200  PACK      DISDATE,DDATE
          REP       " 0",DISDATE
.
          MATCH     EFDATE,DISDATE          * see if discharged before start
          GOTO      LOAD2000 IF LESS          of period
.
.------ write this admission to the temp file ------
.
LOAD4500  DISPLAY   *P35:24,*V2LON,PTDYADMN;
.
          MOVE      PTDYADMN,KEY8
          CALL      WRTMPR1                 * write to the temp file
          GOTO      LOAD2000              
.
.------ reached end of current day file ------
.
LOAD5000  MATCH     TDYEAR,SYEAR             * finished if current year has
          GOTO      LOAD9999 IF NOT LESS      passed the end year of the period
.
          MOVE      SYEAR,FORM4
          ADD       ONE,FORM4
          MOVE      FORM4,SYEAR
          REP       " 0",SYEAR
          MOVE      "0101",SDAYMON
          GOTO      LOAD1000
.
LOAD9999  RETURN
+
.**********************************************************************
.*                         CREA0000                                   *
.*        Create the patient day file that doesn't exist              *
.**********************************************************************
CREA0000  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FILEDAY,CMDLINE
          APPEND    " 13 U1-4,5-12 ",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      PATDAYA1,FILEDAY          
.
CREA9999  RETURN
+
.**********************************************************************
.*                              PROC0000                              *
.*                 Process the admission numbers                      *
.**********************************************************************
PROC0000  DISPLAY   *P1:24,*EL,"Processing Admission : ";
          MOVE      FALSE,FLAGDATA
          MOVE      SP8,KEY8
          CALL      RSTMPR1                 * position on the temp file
.
.------ read through the temp file ------
.
PROC1000  CALL      RKTMPR1
          BRANCH    OVRCD,PROC9000
.
          MOVE      TMPADMN,KEY8
          CALL      RDMISS1                 * read the admissions file
          BRANCH    OVRCD,PROC1000
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1                 * read patient master file
          BRANCH    OVRCD,PROC1000
          CALL      RDPMPX21
          BRANCH    OVRCD,PROC1000
.
          MOVE      SP70,ICDRDDTE           * Initialize ICD files access date
          MOVE      TMPADMN,KEY8
          CALL      RDVISA1                 * read patient visit file         
          BRANCH    OVRCD,PROC1000
          MOVE      FALSE,FLAGDISC          * initialise discharge flag
.
          MOVE      TMPADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,PROC1000
.
          COMPARE   THREE,ASTAT
          GOTO      PROC2000 IF NOT EQUAL
.
          MOVE      AADMNO,KEY8
          CALL      RDDSCH1                 * read patient discharge file
          BRANCH    OVRCD,PROC1000
          MOVE      TRUE,FLAGDISC           * set discharge flag
.
.------ pack the discharge date variable ------
.
PROC1900  PACK      DISDATE,DDATE
          REP       " 0",DISDATE
          MOVE      DISDATE,ICDRDDTE        * set for reading ICD files
.
.------ process this admission number ------
.
PROC2000  DISPLAY   *P24:24,*V2LON,TMPADMN:
                    *P40:24,*HOFF,"Extracting File : ",*V2LON,ANSA;
.
          CALL      CLRA0000                * clear variables for first
.                                             extraction file
          CALL      EXTA0000                * extract data for first
.                                             extraction file
          DISPLAY   *P40:24,*HOFF,"Extracting File : ",*V2LON,ANSB;
.
          CALL      CLRB0000                * clear variables for second
.                                             extraction file
          CALL      EXTB0000                * extract data for second
.                                             extraction file
          DISPLAY   *P40:24,*HOFF,"Extracting File : ",*V2LON,ANSC;
.
          CALL      CLRC0000                * clear variables for third
.                                             extraction file
          CALL      EXTC0000                * extract data for third
.                                             extraction file
          MOVE      TRUE,FLAGDATA           * set data found flag
          GOTO      PROC1000
.
.------ end of processing ------
.
PROC9000  BRANCH    FLAGDATA,PROC9500       * skip if data found
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** No data extracted for given date range **    ";
          CALL      HITENTER
          GOTO      PROC9999
.
.------ data was found ------
.
PROC9500  DISPLAY   *P1:24,*EL,*B,*V2LON,"Extraction Completed.     ";
          CALL      HITENTER
.
PROC9999  RETURN
+
.**********************************************************************
.*                               CLRA0000                             *
.*     Clear all working variables for the first extraction file      *
.**********************************************************************
CLRA0000  MOVE      ZERO,PTXADAYC
          MOVE      ZERO,PTXAPLOS
          MOVE      ZERO,PTXAALOS
          MOVE      ZERO,PTXAPLVE
          MOVE      ZERO,PTXAALVE
          UNPACK    SP30,PTXADDAT,PTXAAWRD,PTXAABED,PTXASWRD,PTXASBED,PTXADWRD:
                         PTXADBED,PTXAATYP
          UNPACK    SP30,PTXASTYP,PTXADTYP,PTXASEX,PTXAPOST,PTXAMLGA,PTXAPLGA:
                         PTXARELG,PTXACONT,PTXARESI
          MOVE      ZERO,PTXAAAGD
          MOVE      ZERO,PTXAAAGM
          MOVE      ZERO,PTXAAAGY
          MOVE      ZERO,PTXASAGD
          MOVE      ZERO,PTXASAGM
          MOVE      ZERO,PTXASAGY
          MOVE      ZERO,PTXADAGD
          MOVE      ZERO,PTXADAGM
          MOVE      ZERO,PTXADAGY
          UNPACK    SP30,PTXAMSTT,PTXAPUS1,PTXAPUS3,PTXAPUS4,PTXAPUS5:
                         PTXAPUS6,PTXAPYN1,PTXAPYN2,PTXAPYN3,PTXADCSE,PTXADDTH
          UNPACK    SP30,PTXABADD,PTXAAADC,PTXAAADT,PTXASADC,PTXASADT:
                         PTXADADC,PTXADADT
          UNPACK    SP30,PTXAARDC,PTXAARDT,PTXAATDC,PTXAATDT,PTXASOUR
          UNPACK    SP30,PTXAAHOS,PTXACLMC,PTXADIET,PTXAACLS,PTXAACRE:
                         PTXASCRE,PTXADCRE,PTXAADPT,PTXASDPT
          UNPACK    SP30,PTXADDPT,PTXAFUND,PTXAFTBL,PTXAAUS1,PTXAAUS2:
                         PTXAAUS3,PTXAAUS4
          UNPACK    SP30,PTXAAUS5,PTXAAUS6,PTXAAUS7,PTXAADIA,PTXADDIA,PTXADSTT
          UNPACK    SP30,PTXADDST,PTXADHOS,PTXADUS1,PTXADUS2,PTXADUS3:
                         PTXADUS4,PTXADUS5
          UNPACK    SP20,PTXADRGC,PTXAMDCC
.                                                                     *I-157391
          UNPACK    SP70,PTXAOPID,PTXARLOC,PTXAABRG,PTXACADM,PTXAIRAD:
                         PTXAIDUS,PTXAMHLS,PTXAASUT,PTXAELPS,PTXAEMPL:
                         PTXAREAD,PTXAUDIN,PTXAUREA,PTXAUVTH
          UNPACK    SP70,PTXAPLAN
          PACK      PTXASPRE,SP70
.
CLRA9999  RETURN
+
.*********************************************************************
.*                               EXTA0000                            *
.*                Extract data for extraction file A                 *
.*********************************************************************
EXTA0000  MOVE      AADMNO,PTXAADMN
          MOVE      PVIDATE,PTXAADAT
          MOVE      PSEX,PTXASEX
          MOVE      PPOST,PTXAPOST
          MOVE      PTMXLGA,PTXAMLGA
          MOVE      PREG,PTXARELG
          MOVE      PCONT,PTXACONT
          MOVE      PVIRESI,PTXARESI
          MOVE      PMSTAT,PTXAMSTT
          MOVE      PUSR1,PTXAPUS1
          MOVE      PUSR2,PTXAPUS2
          MOVE      PUSR3,PTXAPUS3
          MOVE      PUSR4,PTXAPUS4
          MOVE      PUSR5,PTXAPUS5
          MOVE      PUSR6,PTXAPUS6
          MOVE      ANSN,PTXAPYN1
          LOAD      PTXAPYN1,PUYN1,ANSY
          MOVE      ANSN,PTXAPYN2
          LOAD      PTXAPYN2,PUYN2,ANSY
          MOVE      ANSN,PTXAPYN3
          LOAD      PTXAPYN3,PUYN3,ANSY
          MOVE      ANSN,PTXADCSE
          LOAD      PTXADCSE,PCEASE,ANSY
          MOVE      PDECDTE,PTXADDTH
          MOVE      ANSN,PTXABADD
          LOAD      PTXABADD,PBDEBT,ANSY
.
          MATCH     SP70,ADOCTR
          IF        @EQUAL | @EOS
            MOVE      PMVXRHC1,PTXAARDC
          ELSE
            MOVE      ADOCTR,PTXAARDC
          ENDIF
.
          MOVE      ADOCTT,PTXAATDC
          MOVE      ASRCE,PTXASOUR
          MOVE      ACLAIM,PTXACLMC
          MOVE      ADIET,PTXADIET
          MOVE      ACLSS,PTXAACLS
          MOVE      ACLSSFT,PTXAADPT                                   *I-48680
          MOVE      ACLSSFT,PTXASDPT                                   *I-48680
          MOVE      ACLSSFT,PTXADDPT                                   *I-48680
          MOVE      AFUNDH,PTXAFUND
          PACK      PTXAFTBL,AFNDTB,SP4
          MOVE      AUSR1,PTXAAUS1
          MOVE      AUSR2,PTXAAUS2
          MOVE      AUSR3,PTXAAUS3
          MOVE      AUSR4,PTXAAUS4
          MOVE      AUSR5,PTXAAUS5
          MOVE      AUSR6,PTXAAUS6
          MOVE      AUSR7,PTXAAUS7
          MOVE      AMBS,PTXAADIA
.
          MOVE      PMVXWEBU,PTXAOPID                         * start *I-157391
          MOVE      PMVXMLOC,PTXARLOC   
          MOVE      PMVXABRG,PTXAABRG   
          MOVE      PMVXCADM,PTXACADM   
          MOVE      PMVXIRAD,PTXAIRAD   
          MOVE      PMVXIDUS,PTXAIDUS   
          MOVE      PMVXMHLS,PTXAMHLS   
          MOVE      PMVXASUT,PTXAASUT   
          MOVE      PMVXELPS,PTXAELPS   
          MOVE      PMVXEMPL,PTXAEMPL   
          MOVE      PMVXREAD,PTXAREAD   
          MOVE      PMVXUDIN,PTXAUDIN   
          MOVE      PMVXUREA,PTXAUREA   
          MOVE      PMVXUVTH,PTXAUVTH
          MOVE      PMPXLNG1,PTXAPLAN
          PACK      PTXASPRE,SP20,SP20                        * end   *I-157391
.
          UNPACK    SP20,PTXADRGC,PTXAMDCC
          IF        ASTAT = 3
            PACK      PTXADRGC,PTDSDDRG,SP10    * use discharged DRG/MDC
            PACK      PTXAMDCC,PTDSDMDC,SP10
          ELSE
            UNPACK    PTMIPCMX,PTXADRGC     * use prov.casemix code
          ENDIF
.
          MATCH     EFDATE,PTXAADAT         * see if patient is admitted in
          GOTO      EXTA0050 IF LESS          the period
          ADD       ONE,EADMNS
.
.------ continue processing ------
.
EXTA0050  COMPARE   ZERO,FLAGDISC           * skip if patient is not discharged
          GOTO      EXTA1000 IF EQUAL
.
          MATCH     DISDATE,ETDATE          * skip if not discharged in period
          GOTO      EXTA1000 IF LESS
.
          MOVE      DISDATE,PTXADDAT
          MOVE      DFMBS,PTXADDIA
          MOVE      DSTAT,PTXADSTT
          MOVE      DDEST,PTXADDST
          MOVE      DUSD1,PTXADUS1
          MOVE      DUSD2,PTXADUS2
          MOVE      DUSD3,PTXADUS3
          MOVE      DUSD4,PTXADUS4
          MOVE      DUSD5,PTXADUS5
.
          MOVE      TMPADMN,KEY8
          CALL      RDPTDAD1                * read transfer destination file
          BRANCH    OVRCD,EXTA0100
          MOVE      PTDADCTS,PTXADHOS
          MOVE      PTDAADTS,PTXAAHOS
.
.------ see if patient is a day case ------
.
EXTA0100  MATCH     PTXAADAT,PTXADDAT
          GOTO      EXTA1000 IF NOT EQUAL
          MOVE      ONE,PTXADAYC
          ADD       ONE,EDCASES
          GOTO      EXTA2000
.
.------ calculate length of stay and leave days for non daycases ------
.
EXTA1000  MOVE      EFDIM8,FROMDATE
          MOVE      ENDPONE,TODATE
.
          CALL      RTIODAYS                * calculate number of bed days
          MOVE      NBRDAYS,PTXAPLOS
          ADD       PTXAPLOS,EBDAYS                                    *I-48680
.
          MOVE      ADATE,FROMDATE
          MOVE      ENDPONE,TODATE
.
          CALL      RTIODAYS                * calculate number of bed days
          MOVE      NBRDAYS,PTXAALOS
.
          PACK      CDYSFDTE,ADATE
          REP       " 0",CDYSFDTE
.
          MATCH     ADATE,EFDIM8            * skip if start of period is less
          GOTO      EXTA1100 IF LESS          than the admission date
          MOVE      EFDATE,CDYSFDTE
.
.------ work out end date for calculation ------
.
EXTA1100  COMPARE   ZERO,FLAGDISC           * skip if patient not discharged
          GOTO      EXTA1150 IF EQUAL
.
          PACK      CDYSTDTE,DDATE
          REP       " 0",CDYSTDTE
.
          MATCH     ENDPONE,DDATE           * skip if discharge date is less 
          GOTO      EXTA1200 IF LESS          than the end of period + 1
.
.------ set working date to the end of period + 1 ------
.
EXTA1150  PACK      CDYSTDTE,ENDPONE
          REP       " 0",CDYSTDTE
.
.------ get maximum number of days patient could have been in hospital ------
.------ in order to work out leave days ------
.
EXTA1200  CALL      CALCDAYS                * calculate difference between
.                                             dates
          SUB       ONE,CDYSDAYS
          MOVE      CDYSDAYS,PTXAPLVE
          SUB       PTXAPLOS,PTXAPLVE
.
          PACK      CDYSFDTE,ADATE
          REP       " 0",CDYSFDTE
.
          COMPARE   ZERO,FLAGDISC           * skip if patient not discharged
          GOTO      EXTA1250 IF EQUAL
.
          PACK      CDYSTDTE,DDATE
          REP       " 0",CDYSTDTE
.
          MATCH     ENDPONE,DDATE           * skip if discharge date is less 
          GOTO      EXTA1300 IF LESS          than the end of period + 1
.
.------ set working date to the end of period + 1 ------
.
EXTA1250  PACK      CDYSTDTE,ENDPONE
          REP       " 0",CDYSTDTE
.
.------ get maximum number of days patient could have been in hospital ------
.------ in order to work out leave days ------
.
EXTA1300  CALL      CALCDAYS                * calculate difference between
.                                             dates
          SUB       ONE,CDYSDAYS
          MOVE      CDYSDAYS,PTXAALVE
          SUB       PTXAALOS,PTXAALVE
.
.------ continue processing for all patients ------
.------ i.e. whether a day case or not ------
.
EXTA2000  MOVE      TMPADMN,AADMNO
          PACK      KEY30,AADMNO,SP30
          CALL      RDSTRAN2                * get first transfer file record
          CALL      RDKTRAN2
          BRANCH    OVRCD,EXTA2100
.
          MATCH     AADMNO,TADMN            * compare admission numbers
          GOTO      EXTA2100 IF NOT EQUAL
.
          MOVE      TWARD,PTXAAWRD
          MOVE      TBED,PTXAABED
          MOVE      TDEPT,PTXAADPT
          MOVE      TATYPE,PTXAATYP
          MOVE      TADOCT,PTXAAADC
          MOVE      TADOCT,KEY6
          CALL      RDDOCT1                 * read doctors file
          BRANCH    OVRCD,EXTA2100
.
          MOVE      DRTYPE,PTXAAADT
.
.------ continue processing ------
.
EXTA2100  MATCH     EFDATE,PVIDATE          * skip if visit date is < the
          GOTO      EXTA2500 IF LESS          start date of the period
.
          MOVE      PTXAAWRD,PTXASWRD
          MOVE      PTXAABED,PTXASBED
          MOVE      PTXAATYP,PTXASTYP
          MOVE      PTXAAADC,PTXASADC
          MOVE      PTXAADPT,PTXASDPT
          GOTO      EXTA3000
.
.------ get last transfer file record before the start of the period ------
.
EXTA2500  MOVE      TMPADMN,AADMNO
          PACK      KEY30,AADMNO,SP30
          CALL      RDSTRAN2                * position on the transfer file
.
.------ read through the transfer file ------
.
EXTA2600  CALL      RDKTRAN2
          BRANCH    OVRCD,EXTA2900
.
          MATCH     AADMNO,TADMN            * compare admission numbers
          GOTO      EXTA2900 IF NOT EQUAL
.
          MATCH     EFDIM8,TDATE            * skip if transfer date is >=
          GOTO      EXTA2900 IF NOT LESS      start of period
.
          MOVE      TWARD,SAVWARD
          MOVE      TBED,SAVBED
          MOVE      TATYPE,SAVATYPE
          MOVE      TADOCT,SAVADOCT
          MOVE      TDEPT,SAVDEPT
          GOTO      EXTA2600
.
.------ set up variables for the start of the period ------
.
EXTA2900  MOVE      SAVWARD,PTXASWRD
          MOVE      SAVBED,PTXASBED
          MOVE      SAVATYPE,PTXASTYP
          MOVE      SAVADOCT,PTXASADC
          MOVE      SAVDEPT,PTXASDPT
.
.------ get last transfer file record <= to the end of the period ------
.
EXTA3000  MOVE      TMPADMN,AADMNO
          PACK      KEY30,AADMNO,SP30
          CALL      RDSTRAN2
.
.------ read through the transfer file ------
.
EXTA3100  CALL      RDKTRAN2
          BRANCH    OVRCD,EXTA3900
.
          MATCH     AADMNO,TADMN            * compare admission numbers
          GOTO      EXTA3900 IF NOT EQUAL
.
          MATCH     TDATE,ETDIM8            * skip if transfer date is >
          GOTO      EXTA3900 IF LESS          end of period
.
          MOVE      TWARD,SAVWARD
          MOVE      TBED,SAVBED
          MOVE      TATYPE,SAVATYPE
          MOVE      TADOCT,SAVADOCT
          MOVE      TDEPT,SAVDEPT
          GOTO      EXTA3100
.
.------ set up variables for the end of the period ------
.
EXTA3900  MOVE      SAVWARD,PTXADWRD
          MOVE      SAVBED,PTXADBED
          MOVE      SAVATYPE,PTXADTYP
          MOVE      SAVADOCT,PTXADADC
          MOVE      SAVDEPT,PTXADDPT
.
          MOVE      PPOST,KEY4
          CALL      RDCATC1                 * read catchment file
          BRANCH    OVRCD,EXTA4000
          MOVE      CTCLGA,PTXAPLGA
.
.------ continue processing ------
.
EXTA4000  MOVE      PTXASADC,KEY6
          CALL      RDDOCT1                 * read doctors file
          BRANCH    OVRCD,EXTA4100
          MOVE      DRTYPE,PTXASADT
.
.------ continue processing ------
.
EXTA4100  MOVE      PTXADADC,KEY6
          CALL      RDDOCT1                 * read doctors file
          BRANCH    OVRCD,EXTA4200
          MOVE      DRTYPE,PTXADADT
.
.------ continue processing ------
.
EXTA4200  MOVE      PVIDATE,AGEDATE
          CALL      CALCAGE                 * calculate patients age
.
          MOVE      PSAGEDAY,PTXAAAGD
          MOVE      PSAGEMNT,PTXAAAGM
          MOVE      PSAGEYRS,PTXAAAGY
.
          MATCH     EFDATE,PVIDATE          * see if admission date is <
          GOTO      EXTA4300 IF LESS          the start date of the period
.
          MOVE      PTXAAAGD,PTXASAGD
          MOVE      PTXAAAGM,PTXASAGM
          MOVE      PTXAAAGY,PTXASAGY
          GOTO      EXTA4500
.
.------ admission date is < start of the period ------
.
EXTA4300  MOVE      EFDATE,AGEDATE
          CALL      CALCAGE                 * calculate patients age
.
          MOVE      PSAGEDAY,PTXASAGD
          MOVE      PSAGEMNT,PTXASAGM
          MOVE      PSAGEYRS,PTXASAGY
.
.------ continue processing ------
.
EXTA4500  MOVE      ETDATE,AGEDATE
.
          COMPARE   ZERO,FLAGDISC           * skip if patient not discharged
          GOTO      EXTA4600 IF EQUAL
.
          MATCH     ETDATE,DISDATE          * see if discharge date is >= 
          GOTO      EXTA4600 IF NOT LESS      end date in period
          MOVE      DISDATE,AGEDATE
.
.------ calculate ages for end of period ------
.
EXTA4600  CALL      CALCAGE                 * calculate patients age
.
          MOVE      PSAGEDAY,PTXADAGD
          MOVE      PSAGEMNT,PTXADAGM
          MOVE      PSAGEYRS,PTXADAGY
.
          MOVE      PTXAARDC,KEY6
          CALL      RDDOCT1                 * read doctors file
          BRANCH    OVRCD,EXTA4700
          MOVE      DRTYPE,PTXAARDT
.
.------ continue processing ------
.
EXTA4700  MOVE      PTXAATDC,KEY6
          CALL      RDDOCT1                 * read doctors file
          BRANCH    OVRCD,EXTA5000
          MOVE      DRTYPE,PTXAATDT
.
.------ continue processing ------
.
EXTA5000  BRANCH    CCARECL,EXTA5100        * skip if using datable care class
          MOVE      ACARE,PTXAACRE
          MOVE      ACARE,PTXASCRE
          MOVE      ACARE,PTXADCRE
          GOTO      EXTA9000
.
.------ using datable care class ------
.
EXTA5100  MOVE      ACARE,PTXAACRE
          MOVE      ACARE,PTXASCRE
          MOVE      ACARE,PTXADCRE
          MOVE      FALSE,FLAGGOT1          * initialise 1st care class flag
          MOVE      FALSE,FLAGGOT2          * initialise 2nd care class flag
          PACK      KEY24,TMPADMN,SP20
          CALL      RDSCHCO1                * position on the code changes file
.
.------ read through the code changes file ------
.
EXTA5200  CALL      RDKCHCO1
          BRANCH    OVRCD,EXTA9000
.
          MATCH     TMPADMN,CHADMN          * compare admission numbers
          GOTO      EXTA9000 IF NOT EQUAL
.
          MATCH     "CC",CHCATG             * see if we have a category "CC"
          GOTO      EXTA5200 IF NOT EQUAL     code
.
          BRANCH    FLAGGOT2,EXTA5400       * skip if we have the 2nd care
.                                             class field already
          BRANCH    FLAGGOT1,EXTA5300       * skip if we have the 1st care
.                                             class field already
          MOVE      CHCODE,PTXAACRE         
          MOVE      TRUE,FLAGGOT1           * set we have got the 1st care 
.                                             class field flag
.------ test for the 2nd care class field------
.
EXTA5300  MATCH     EFDATE,CHDATE           * continue if the date the code is
          GOTO      EXTA5200 IF LESS          valid to is >= start of period
          MOVE      CHCODE,PTXASCRE         
          MOVE      TRUE,FLAGGOT2           * set we have got the 2nd care
.                                             class field flag
.------ test for the 3rd care class field ------
.
EXTA5400  MATCH     ETDATE,CHDATE           * continue if the date the code is
          GOTO      EXTA5200 IF LESS          valid to is >= end of period
          MOVE      CHCODE,PTXADCRE         
.
.------ write to extraction file A ------
.
EXTA9000  MOVE      TMPADMN,KEY8
          CALL      WRPTEXA1                * write to the 1st extraction file
.                                             
EXTA9999  RETURN
+
.*********************************************************************
.*                               CLRB0000                            *
.*     Clear all working variables for the second extraction file    *
.*********************************************************************
CLRB0000  UNPACK    SP30,PTXBTWRD,PTXBTBED,PTXBTTYP,PTXBTCRE,PTXBTDPT:
                         PTXBTADC,PTXBTADT
          MOVE      ZERO,PTXBNDAY
          MOVE      ZERO,PTXBACCM
          MOVE      ZERO,PTXBACCP
          MOVE      ZERO,PTXBACCR
          MOVE      ZERO,PTXBDISC
          MOVE      ZERO,PTXBALLW
          MOVE      ZERO,PTXBTHET
          MOVE      ZERO,PTXBTHTP
          MOVE      ZERO,PTXBTHTR
          MOVE      ZERO,PTXBMISC
          MOVE      ZERO,PTXBMISP
          MOVE      ZERO,PTXBMISR
          MOVE      ZERO,PTXBLSPT
          MOVE      ZERO,PTXBLSRB
          PACK      PTXBSPAR,SP20,SP20
.
CLRB9999  RETURN
+
.*********************************************************************
.*                               EXTB0000                            *
.*                Extract data for extraction file B                 *
.*********************************************************************
EXTB0000  MOVE      SP6,SAVDDTE
          MOVE      SP6,TRWRIT
.
          MOVE      ENDPONE,TTDATE
          MOVE      SP10,STDATE
          MOVE      SP70,CONTRCID
          MOVE      SP70,CMXCONTR
.
.------ step up variables for stepdown routine ------
.
          MOVE      SP10,SIDATET
          MOVE      SP10,LSTDATE
          MOVE      ZERO,ENDFLAG
          MOVE      ALACDTE,IDATEF           * set starting date for next inv.
          MOVE      IDATEF,SIDATET           * set starting date for next inv.
.
          CALL      GTAB0000                 * get health fund table
          PACK      CMDRG,PTMIPCMX,SP20      * Default to prov.casemix code
.
          UNPACK    SP10,KEY4,KEY5
          UNPACK    PTMIPCMX,KEY4,KEY5
          MATCH     SP5,KEY5
          IF        @EQUAL
            IF        ASTAT = 3
              MATCH     SP4,PTDSDDRG
              IF        !@EQUAL
                PACK      CMDRG,PTDSDDRG,SP20        * Use discharge DRG Code
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      ZERO,CHRGFLG
.
          MOVE      ZERO,DCFLAG
          COMPARE   THREE,ASTAT
          GOTO      EXTB0500 IF NOT EQUAL
          MATCH     ADATE,DDATE
....      IF        !@EQUAL                                             D-57045
          IF        @EQUAL
            MOVE      ONE,DCFLAG            * sameday
          ENDIF
.
. -----  check if casemix patient ------
.
EXTB0500  MOVE      ZERO,CMXFLAG            * default to patient classification
          MOVE      SP70,CMCODE
          CALL      CCPY0000                * Check for Casepayment
.
          MOVE      ZERO,PTDTLSPT
          MOVE      ZERO,PTDTLSRB
          IF        AINVPRT <> 0
            CALL      RDDT0000            * new routine to read the DTR
            MOVE      PTDTLSPT,SPTTRLSP
            MOVE      PTDTLSRB,SPTTRLSR
          ENDIF
.
          PACK      KEY30,TMPADMN,SP20,SP20 * set the Admission No.
          CALL      RDSTRAN2                * position on the transfer file
.
.------ read through the transfer file ------
.
EXTB1000  CALL      RDKTRAN2
          BRANCH    OVRCD,EXTB4000
.
          MATCH     AADMNO,TADMN            * compare admission numbers
          GOTO      EXTB4000 IF NOT EQUAL
.
          RESET     TDATE
          REP       " 0",TDATE
          RESET     TDATE
.
          MOVE      TDATE,XDATE1            * Save transfer date
          MOVE      TDATE,LSTDATE
.
          IF        AINVPRT <> 0
            MATCH     "A",TMOVE
            IF        @EQUAL
               MOVE      PTDTLSPT,SPTTRLSP
               MOVE      PTDTLSRB,SPTTRLSR
             ENDIF
          ELSE
            IF        DCFLAG=1
              CALL      DLUM0000              * generate lumpsum for daycase
              MOVE      PTLSLPAT,SPTTRLSP
              MOVE      PTLSLREB,SPTTRLSR
            ELSE
              CALL      OLUM0000              * generate lumpsum for overnight
              MOVE      PTHLLPAT,SPTTRLSP
              MOVE      PTHLLREB,SPTTRLSR
            ENDIF
.           MOVE      PTTRLSPT,FORM92
.           ADD       PTTRLSRB,FORM92
.           IF        FORM92<>0
.             MOVE      PTTRLSPT,SPTTRLSP
.             MOVE      PTTRLSRB,SPTTRLSR
.           ENDIF
          ENDIF
.
EXTB1010  IF        CMXFLAG=1
            BRANCH    DCFLAG,EXTB1020       * sameday, no stepdown
            CALL      PATCMSTP
            IF        NOFEE=1
              MOVE      XDATE1,TDATE
            ENDIF
            GOTO      EXTB1020
          ENDIF
.
.------ check if stepdown is required ------
.
          BRANCH    CHOSTYP,EXTB1020                                   *I-48680
          IF        CSTDOWN=1
            CALL      STEPDOWN
            IF        NOFEE=1
              MOVE      XDATE1,TDATE
            ENDIF
          ENDIF
.
EXTB1020  COMPARE   ZERO,ENDFLAG
          GOTO      EXTB1040 IF EQUAL
.
          MATCH     LSTDATE,TDATE           * has it looped back 'cos stepdown?
          GOTO      EXTB1200 IF EQUAL
.
          MATCH     TDATE,ETDIM8
          GOTO      EXTB4300 IF LESS
.
EXTB1040  MATCH     TDATE,ETDIM8            * end if transfer date is
          GOTO      EXTB4000 IF LESS          after the end date
.
          MATCH     EFDIM8,TDATE            * skip if transfer date is not
          GOTO      EXTB1500 IF NOT LESS      before the start of the period
.
          MOVE      EFDIM8,STDATE
          PACK      CDYSFDTE,STDATE
          REP       " 0",CDYSFDTE
.
          MATCH     ANSL,TMOVE              * skip if we have a leave record
          GOTO      EXTB1150 IF EQUAL
          MOVE      ANSB,TMOVE
          GOTO      EXTB1150
.
.------ save current transfer file variables ------
.
EXTB1100  MOVE      TDATE,STDATE
EXTB1150  CALL      SAVV0000                * save transfer file variables
.
.------ save stepdown variables ------
.
EXTB1200  MOVE      TATYPE,STATYPE
          MOVE      TRBTYP,STRBTYP
          MOVE      TRBEND,STRBEND
          MOVE      PTTRAEND,SPTTRAEN
          MOVE      TDATE,SIDATET
          GOTO      EXTB1000
.
.------ transfer date is in the period ------
.
EXTB1500  MOVE      TMOVE,ANS
          REP       "A1C2L3R4D5",ANS
          MOVE      ANS,FORM1
.
          BRANCH    FORM1,EXTB1100,EXTB2000,EXTB2000,EXTB1100,EXTB2000 *I-48680
.                           "A"      "C"      "L"      "R"      "D"
.
.------ we have a "C", "L", "R", or "D" record ------
.
EXTB2000  PACK      CDYSTDTE,TDATE
          REP       " 0",CDYSTDTE
          PACK      CDYSFDTE,STDATE
          REP       " 0",CDYSFDTE
.
          CALL      CALCDAYS                * calculate the date difference
          SUB       ONE,CDYSDAYS
.
          COMPARE   ZERO,CDYSDAYS           * skip if we have bed days
          GOTO      EXTB2900 IF LESS
          GOTO      EXTB2500 IF NOT EQUAL
.
          MATCH     ANSA,SAVTMOVE           * see if saved transfer movement
          GOTO      EXTB2500 IF EQUAL         is type "A"
.
          MATCH     ANSB,SAVTMOVE           * see if saved transfer movement
          GOTO      EXTB2900 IF NOT EQUAL     is type "B"
.
EXTB2500  BRANCH    PTXADAYC,EXTB2900       * daycase patient
          CALL      WRIB0000                * write a rec. to extraction file B
.
.------ save current transfer file variables ------
.
EXTB2900  MATCH     ANSD,TMOVE              * skip if we are processing the
          GOTO      EXTB3000 IF EQUAL         "D" record
          GOTO      EXTB1100
.
.------ we are processing the "D" record on the transfer file ------
.
EXTB3000  COMPARE   ONE,PTXADAYC
          GOTO      EXTB3100 IF NOT EQUAL
          MOVE      ANSA,SAVTMOVE
          CALL      WRIB0000                * write a rec. to Ext. B for d'case
.....     GOTO      EXTB5000                * removed for srf 629546    D-48680
.
EXTB3100  MOVE      ANSZ,TMOVE
          CALL      SAVV0000                * save transfer file variables
          MOVE      ZERO,CDYSDAYS
.
          CALL      WRIB0000                * write a rec. to extraction file B
          GOTO      EXTB5000
.
.----------------------------------------------------------------------------
.------ No more transfer file records for this admission in the period ------
.
EXTB4000  MOVE      ONE,ENDFLAG
          BRANCH    FLAGDISC,EXTB4100       * patient discharged
          PACK      XDATE1,CCC,CYY,CMM,CDD  * use current date
          GOTO      EXTB4200
.
EXTB4100  MOVE      LSTDATE,XDATE1          * use transfer date
.
EXTB4200  REP       " 0",XDATE1
.
          IF        CMXFLAG = 1
            BRANCH    DCFLAG,EXTB4300       * no stepdown for daycase
            MOVE      XDATE1,TDATE
            MOVE      SP1,TMOVE
            LOAD      TMOVE USING ASTAT OF ANSC,ANSC,ANSC,ANSR
            MOVE      STATYPE,TATYPE
            MOVE      STRBTYP,TRBTYP
            MOVE      STRBEND,TRBEND
            MOVE      SPTTRAEN,PTTRAEND
            MOVE      ZERO,PTTREPSD                                    *I-48680
            CALL      PATCMSTP
            MOVE      ONE,ENDFLAG
            BRANCH    NOFEE,EXTB4400
            GOTO      EXTB4250
          ENDIF
.
.------ check if stepdown is required ------
.
          BRANCH    CHOSTYP,EXTB4300                                   *I-48680
          COMPARE   ONE,CSTDOWN
          GOTO      EXTB4300 IF NOT EQUAL
.
          MOVE      XDATE1,TDATE                                       *M-48680
          MOVE      SP1,TMOVE
          LOAD      TMOVE,ASTAT,ANSC,ANSC,ANSC,ANSR * type of movement
.                               changed record,return from leave
          MOVE      STATYPE,TATYPE          * move previously saved variables
          MOVE      STRBTYP,TRBTYP          * back
          MOVE      STRBEND,TRBEND
          CALL      STEPDOWN                * stepdown routine
          MOVE      ONE,ENDFLAG             * last tran record
          BRANCH    NOFEE,EXTB4400
.
.------ check if a stepdown was indicated = shown by a new TDATE ------
.
EXTB4250  MATCH     TDATE,XDATE1
          GOTO      EXTB4300 IF EQUAL
.
          MATCH     TDATE,LSTDATE
          GOTO      EXTB1020 IF LESS
          GOTO      EXTB1200
.
EXTB4300  
.         MATCH     TDATE,EFDIM8
.         GOTO      EXTB4320 IF NOT LESS
.
          MATCH     TTDATE,TDATE
          GOTO      EXTB4320 IF NOT LESS
.
          PACK      CDYSTDTE,TDATE
          REP       " 0",CDYSTDTE
          GOTO      EXTB4340
.
EXTB4320  PACK      CDYSTDTE,ENDPONE
          REP       " 0",CDYSTDTE
.
EXTB4340  PACK      CDYSFDTE,STDATE
          REP       " 0",CDYSFDTE
.
          CALL      CALCDAYS                * calculate the date difference
          SUB       ONE,CDYSDAYS
.
          COMPARE   ZERO,CDYSDAYS           * skip if we have bed days
          GOTO      EXTB4400 IF NOT EQUAL
.
          MATCH     ANSA,SAVTMOVE           * see if saved transfer movement
          GOTO      EXTB4400 IF EQUAL         is type "A"
.
          MATCH     ANSB,SAVTMOVE           * see if saved transfer movement
          GOTO      EXTB5000 IF NOT EQUAL     is type "B"
.
EXTB4400  BRANCH    PTXADAYC,EXTB5000       * daycase patient
          MATCH     ANSL,SAVTMOVE
          GOTO      EXTB5000 IF EQUAL
          MOVE      ETDIM8,TDATE
          CALL      WRIB0000                * write a rec. to extraction file B
.
.------ we have finished processing this admission, ------
.------ now see if we need to change the records written to cater ------
.------ for a datable care class ------
.
EXTB5000  COMPARE   ZERO,CCARECL            * skip if not using datable care
          GOTO      EXTB9999 IF EQUAL         class
          MOVE      ADATE,WORKDATE
.
          MATCH     EFDIM8,ADATE            * skip if admission date is >=
          GOTO      EXTB5100 IF NOT LESS      the from date of the period
          MOVE      EFDIM8,WORKDATE
.
.------ position on the codes changes file ------
.
EXTB5100  MOVE      FALSE,FLAGAORB          * initialize updated A or B record
.                                             flag
          MOVE      FALSE,FLAGLAST          * initialize need to update the 
.                                             last care class flag
          PACK      KEY24,TMPADMN,SP20        
          CALL      RDSCHCO1
          CALL      RDKCHCO1                * make sure we have change of care
          BRANCH    OVRCD,EXTB9999            class record first
.
          MATCH     TMPADMN,CHADMN          * compare admission numbers
          GOTO      EXTB9999 IF NOT EQUAL
          GOTO      EXTB5250
.
.------ read through the codes changes file ------
.
EXTB5200  CALL      RDKCHCO1
          BRANCH    OVRCD,EXTB5230
.
          MATCH     TMPADMN,CHADMN          * compare admission numbers
          GOTO      EXTB5250 IF EQUAL
.
.------ no more records on the care class changes file for this admission -----
.
EXTB5230  MOVE      ACARE,CHCODE
          MOVE      TRUE,FLAGLAST           * initialize updating the last care
.                                             class flag
.------ process this change of care class ------
.
EXTB5250  UNPACK    CHDATE,CHDIM8
.
          MATCH     CHDATE,ETDATE           * see if end date is >= date
          GOTO      EXTB5300 IF NOT LESS      code is valid until
          MOVE      ENDPONE,CHDIM8
.
.------ skip if category is not for care class ------
.
EXTB5300  MATCH     "CC",CHCATG
          GOTO      EXTB6000 IF NOT EQUAL
.
.------ process this change of care class ------
.
EXTB5350  MOVE      ENDPONE,EXBDIM8         * set extraction file B date to
.                                             end date + 1 - if no record
          PACK      KEY17,TMPADMN,WORKDATE,SP20                        *I-48680
          CALL      RSPTEXB1                * position on extraction file B
          CALL      RKPTEXB1                  for the workdate
          BRANCH    OVRCD,EXTB5500
.
          MATCH     PTXBADMN,TMPADMN        * compare admission numbers
          GOTO      EXTB5500 IF NOT EQUAL
.
          UNPACK    PTXBTDAT,EXBDIM8                                   *I-48680
.
          MATCH     WORKDATE,EXBDIM8        * skip if no record on extraction
          GOTO      EXTB5500 IF NOT EQUAL     file B = the work date
          GOTO      EXTB5420
.
.------ read through extraction file B ------
.
EXTB5400  CALL      RKPTEXB1
          BRANCH    OVRCD,EXTB6000
.
          MATCH     PTXBADMN,TMPADMN        * compare admission numbers
          GOTO      EXTB6000 IF NOT EQUAL
.
          UNPACK    PTXBTDAT,EXBDIM8
.
.------ process this record ------
.
EXTB5420  MATCH     CHDIM8,EXBDIM8          * skip if extraction file B record
          GOTO      EXTB6000 IF NOT LESS      is >= date code is valid until
.
          COMPARE   ZERO,FLAGAORB           * skip if we have not updated the A
          GOTO      EXTB5450 IF EQUAL         or B record yet
.
          MATCH     ANSA,PTXBTYPE           * if we have an A or B record again
          GOTO      EXTB5400 IF EQUAL         we don't want to update as we
.                                             want the A and B records to 
          MATCH     ANSB,PTXBTYPE             represent the starting care class
          GOTO      EXTB5400 IF EQUAL
.
.------ update the extraction file B record with the change of care class -----
.
EXTB5450  MOVE      CHCODE,PTXBTCRE
          CALL      UPPTEXB1                * update extraction file B record
.
          MOVE      PTXBTYPE,ANS
          REP       "A1B1",ANS
          MOVE      ANS,FLAGAORB            * set updated A or B record flag
.                                             if appropriate
          GOTO      EXTB5400
.
.------ no record found on the extraction file B with a date = work date -----
.------ so we need to insert a change record ------
.
EXTB5500  MOVE      EXBDIM8,SAVEDATE
.
          CALL      RPPTEXB1                * get previous extraction file B
          BRANCH    OVRCD,EXTB6000            record - should always exist
.
          MATCH     PTXBADMN,TMPADMN        * compare admission numbers - 
          GOTO      EXTB6000 IF NOT EQUAL     record should always exist
.
          MOVE      PTXBTDAT,CDYSFDTE
          PACK      CDYSTDTE,WORKDATE
          REP       " 0",CDYSTDTE
.
          CALL      CALCDAYS                * calculate bed days
          SUB       ONE,CDYSDAYS
          MOVE      CDYSDAYS,PTXBNDAY
.
          CALL      UPPTEXB1                * update previous extraction file B
.                                             record with bed days
          PACK      CDYSFDTE,WORKDATE
          REP       " 0",CDYSFDTE
          PACK      CDYSTDTE,SAVEDATE
          REP       " 0",CDYSTDTE
.
          CALL      CALCDAYS                * calculate bed days
.
          SUB       ONE,CDYSDAYS
          MOVE      CDYSDAYS,PTXBNDAY
          PACK      PTXBTDAT,WORKDATE
          REP       " 0",PTXBTDAT
          MOVE      CHCODE,PTXBTCRE
.
          MOVE      ZERO,PTXBACCM
          MOVE      ZERO,PTXBACCP
          MOVE      ZERO,PTXBACCR
          MOVE      ZERO,PTXBDISC
          MOVE      ZERO,PTXBALLW
          MOVE      ZERO,PTXBTHET
          MOVE      ZERO,PTXBTHTP
          MOVE      ZERO,PTXBTHTR
          MOVE      ZERO,PTXBMISC
          MOVE      ZERO,PTXBMISP
          MOVE      ZERO,PTXBMISR
          MOVE      ZERO,PTXBLSRB                                      *I-48680
          MOVE      ZERO,PTXBLSPT                                      *I-48680
.
          MOVE      TMPADMN,PTXBADMN
          MOVE      ANSC,PTXBTYPE
          PACK      KEY17,PTXBADMN,PTXBTDAT,PTXBTYPE
          CALL      RAPTEXB1                * Pos read extract file B
          IF        OVRCD=1
            CALL      WRPTEXB1              * Write extract file B
          ELSE
.....       CALL      UPPTEXB1              * Update extract file B     D-48680
          ENDIF
.
          CALL      RSPTEXB1                * position on record just written
          GOTO      EXTB5400
.
.------ see if we need to check another change of care class ------
.------ and if we do set the work variable ------
.
EXTB6000  BRANCH    FLAGLAST,EXTB9999       * skip if we have processed the 
.                                             last change of care class
          MATCH     CHDATE,ETDATE           * finished if date code is valid 
          GOTO      EXTB9999 IF LESS          until is >= end of period
.
          UNPACK    CHDATE,CHDIM8
          MOVE      CHDIM8,WORKDATE
          GOTO      EXTB5200
.
EXTB9999  RETURN
+
.-----------------------------------------------------------
.         Check for Casepayment patient
.-----------------------------------------------------------
CCPY0000  MOVE      ZERO,CMXFLAG
          MOVE      PTMIPCMX,CMCODE
          PACK      KEY9,ACLAIM,AFUNDH
          CALL      GETCNEFF               * Get Contract Effective From
          BRANCH    EXIT,CCPY8000
.
          MOVE      ZERO,LOWFLAG            * initialise low outliers
          MOVE      ADATE,CEFFDATE
          LOAD      CEFFDATE,CNTRCEFR,ADATE,DDATE
          CALL      CDSC0000                * Check for 'Disc.Eff.Date From'
          BRANCH    EXIT,CCPY8000
.
          MOVE      TWO,PROGFLAG
          MOVE      ONE,MSGFLAG
          CALL      CMXMATRX                * Check for matrix
.
.         current patient and no matrix found, use provisional code if entered
.
          COMPARE   ONE,CMXFLAG
          GOTO      CCPY1000 IF NOT EQUAL   * if current patient, check prov.cod
          MATCH     SP70,CONTRCID
          GOTO      CCPY1000 IF EQUAL
.
          PACK      PTMIPCMX,CMCODE,SP70
          GOTO      CCPY6000
.
CCPY1000  COMPARE   THREE,ASTAT
          GOTO      CCPY8000 IF EQUAL
          MATCH     ANSY,PTMICMXP
          GOTO      CCPY8000 IF NOT EQUAL
          MATCH     SP10,PTMIPCMX           * Casemix code entered?
          GOTO      CCPY8000 IF EQUAL
.
.         Use provisional code
.
          PACK      KEY18,ACLAIM,AFUNDH,PTMIPCMX,SP70
          CALL      VALCMXFN              * get the contract ID (CONTRCID)
          BRANCH    EXIT,CCPY9999
          MOVE      PTMIPCMX,CMCODE
.
CCPY6000  CALL      CHKCMXPT
          GOTO      CCPY9999
.
CCPY8000  MOVE      ZERO,CMXFLAG
CCPY9999  RETURN
+
.*****************************************************************************
.         If Contract Effective From is 'For Discharges From', Discharged date
.         is blank and TCINDC19=D, default Effective date to Current date
.*****************************************************************************
CDSC0000  MOVE      ZERO,EXIT
          COMPARE   TWO,CNTRCEFR
          GOTO      CDSC9999 IF NOT EQUAL      * Not 'For Discharges From'
.
          PACK      DDATE,DDATE,SP70
          MATCH     SP70,DDATE
          GOTO      CDSC9999 IF NOT EQUAL
.
          PACK      KEY5,CODECL,ACLAIM
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     "D",TCINDC19
            IF        @EQUAL
              PACK      CEFFDATE,CCC,CYY,CMM,CDD,SP70
              REP       " 0",CEFFDATE
              GOTO      CDSC9999
            ENDIF
          ENDIF
          MOVE      ONE,EXIT
CDSC9999  RETURN
+
.******************************************** Start of Addition        *I-48680
.**********************************************************************
.*                               RDDT0000
.*                 Read a DTR record to get Lumpsum values
.**********************************************************************
RDDT0000  PACK      KEY18,AADMNO,SP30
          CALL      RDSDTRN3
RDDT1000  CALL      RDKDTRN3
          BRANCH    OVRCD,RDDT2000          * End-of-File
.
          MATCH     TADMNO,AADMNO           * compare admission numbers
          GOTO      RDDT2000 IF NOT EQUAL   * Admission record not found
.
          COMPARE   ONE,TRECTYPE
          GOTO      RDDT2000 IF NOT EQUAL   * Not an Accomodation record
.
          MOVE      ZERO,FORM92
          MOVE      PTDTLSPT,FORM92
          ADD       PTDTLSRB,FORM92
          COMPARE   ZERO,FORM92
          GOTO      RDDT1000 IF EQUAL     * Lumpsum not necessary first DTR rec.
.
.         Check if any invoice raised as Casepayment
.
RDDT2000  PACK      KEY16,AADMNO,SP70
          CALL      RDSINV3
          CALL      RDKINV3
          BRANCH    OVRCD,RDDT9999
.
          MATCH     PINVADM,AADMNO
          GOTO      RDDT9999 IF NOT EQUAL
.
          IF        PTINCMIX=1
            MOVE      ONE,CMXFLAG
            PACK      CMCODE,PTINCMCD,SP70
          ELSE
            MOVE      ZERO,CMXFLAG
            MOVE      SP70,CMCODE
          ENDIF
.
RDDT9999  RETURN
.********************************************   End of Addition        *I-48680
+
.**********************************************************************
.*                               WRIB0000                             *
.*                 Write a record to extraction file B                *
.**********************************************************************
WRIB0000  CALL      CLRB0000                * clear the data variables
.
.******************************************** Start of Addition        *I-48680
          MOVE      TMPADMN,DPTXBADM                                   *I-48680
          MOVE      STDATE,PTXBTDAT
          MOVE      SAVTMOVE,PTXBTYPE
.
.                                           * Check if this Ext.B recd is an
          MATCH     ANSR,SAVTMOVE           * "R"eturn, that the previous recd
          IF        @EQUAL
            MATCH     ANSL,LASTTYPE         * was a "L"eave record
            IF        !@EQUAL
              MOVE      ANSC,PTXBTYPE       * if not, make this a "C"hange
            ENDIF
          ENDIF
.
.                                           * now see if one exists
          PACK      KEY17,DPTXBADM,PTXBTDAT,PTXBTYPE
          CALL      RDPTEXB1
          MOVE      OVRCD,NEWEXTB           * set the New Record flag
.
.********************************************   End of Addition        *I-48680
.
          MOVE      CDYSDAYS,DAYSCHRG
          MOVE      CDYSDAYS,PTXBNDAY
          MOVE      SAVWARD,PTXBTWRD
          MOVE      SAVBED,PTXBTBED
          MOVE      SAVATYPE,PTXBTTYP
          MOVE      ACARE,PTXBTCRE
          MOVE      SAVDEPT,PTXBTDPT
          PACK      PTXBSPAR,SP20,SP20
.
          COMPARE   ZERO,PTXADAYC           * skip if patient is not a day case
          GOTO      WRIB0050 IF EQUAL
          MOVE      ONE,DAYSCHRG
.
.------ continue processing ------
.
WRIB0050  MOVE      SAVADOCT,PTXBTADC
          MOVE      SAVADOCT,KEY6
          CALL      RDDOCT1                 * read the doctors file
          BRANCH    OVRCD,WRIB0100
          MOVE      DRTYPE,PTXBTADT
.
.------ continue processing ------
.
WRIB0100  MOVE      ZERO,OVRCD                                         *C-48680
.
.******************************************** Start of Deletion         D-48680
....WRIB0100  MOVE      SAVTMOVE,PTXBTYPE
.
....      MATCH     ANSR,SAVTMOVE           * see if we are about to write an
....      GOTO      WRIB0200 IF NOT EQUAL     "R" record
....
....      MATCH     ANSL,LASTTYPE           * skip if last record type is
....      GOTO      WRIB0150 IF NOT EQUAL     not an "L" record
....
....      MOVE      SAVTMOVE,PTXBTYPE       * restore transfer type "R"
....      GOTO      WRIB0200
.
.....------ last record before movement type "R" is not an "L" record ------
.....------ so write new record as a "C" ------
.
....WRIB0150  MOVE      ANSC,PTXBTYPE
.********************************************   End of Deletion         D-48680
.
.------ continue processing ------
.
WRIB0200  BRANCH    CMXFLAG,WRIB0220                                   *C-48680
.
          MATCH     ANSL,PTXBTYPE           * see if we have transfer type "L"
          GOTO      WRIB1000 IF EQUAL
.
          MATCH     ANSZ,PTXBTYPE           * see if we have transfer type "Z"
          GOTO      WRIB1000 IF EQUAL
.
          GOTO      WRIB0300                * not casemix              *I-48680
.
.                                           * process casemix only
.
WRIB0220  IF        DCFLAG = 1 
            BRANCH    CHRGFLG,WRIB1000
            MOVE      ZERO,DAYSCHRG
            MATCH     EFDATE,ADATE   
            GOTO      WRIB1000 IF LESS
            MATCH     ADATE,ETDATE    
            GOTO      WRIB1000 IF LESS 
            IF        PTXADAYC <> 1
              MOVE      ONE,DAYSCHRG
            ENDIF
            MOVE      ONE,CHRGFLG
            MOVE      SPTTRLSP,PTXBLSPT
            MOVE      SPTTRLSR,PTXBLSRB
            MOVE      ZERO,SPTTRLSP
            MOVE      ZERO,SPTTRLSR
          ELSE
            BRANCH    CHRGFLG,WRIB0300
            MATCH     EFDATE,ADATE   
            GOTO      WRIB0300 IF LESS
            MATCH     ADATE,ETDATE    
            GOTO      WRIB0300 IF LESS 
.
            MOVE      SPTTRLSP,PTXBLSPT
            MOVE      SPTTRLSR,PTXBLSRB
            MOVE      ZERO,SPTTRLSP
            MOVE      ZERO,SPTTRLSR
            MOVE      ONE,CHRGFLG
          ENDIF
.
WRIB0300  MOVE      SAVRATEF,PTXBACCM
          ADD       SAVRATEH,PTXBACCM
          ADD       SPTTRADP,PTXBACCM
          ADD       SPTTRADR,PTXBACCM
          ADD       SAVEXTRA,PTXBACCM
          SUB       SAVDISC,PTXBACCM
          SUB       SAVTALLW,PTXBACCM
          MULT      DAYSCHRG,PTXBACCM
.                                           * now add Lumpsum to Accomm.
          ADD       PTXBLSPT,PTXBACCM                                  *I-48680
          ADD       PTXBLSRB,PTXBACCM                                  *I-48680
          ADD       PTXBACCM,ENETAMT
.
          MOVE      SAVRATEF,PTXBACCP
          ADD       SPTTRADP,PTXBACCP
          ADD       SAVEXTRA,PTXBACCP
          SUB       SAVDISC,PTXBACCP
          SUB       SAVTALLW,PTXBACCP
          MULT      DAYSCHRG,PTXBACCP
.
          MOVE      SAVRATEH,PTXBACCR
          ADD       SPTTRADR,PTXBACCR
          MULT      DAYSCHRG,PTXBACCR
.
          IF        PTCNJADJ = 1
            MOVE      ZERO,PTXBDISC          * will be using this for journals
          ELSE
            MOVE      SAVDISC,PTXBDISC
            MULT      DAYSCHRG,PTXBDISC
          ENDIF
.
          MOVE      SAVTALLW,PTXBALLW
          MULT      DAYSCHRG,PTXBALLW
.
.....     ADD       PTXBNDAY,EBDAYS                                     D-48680
.
.------ set up the charging variables ------
.
WRIB1000  MOVE      ZERO,MTIFLAG
          MOVE      TMPADMN,AADMNO
          PACK      KEY22,AADMNO,SP20       * position on the debtors 
          CALL      RDSDTRN1                  transaction file 
.
          COMPARE   ZERO,CDYSDAYS           * see if we have zero bed days
          GOTO      WRIB1100 IF NOT EQUAL
.
          MATCH     ANSA,SAVTMOVE
          GOTO      WRIB1100 IF EQUAL
.
          MATCH     ANSB,SAVTMOVE
          GOTO      WRIB1100 IF EQUAL
.
          MATCH     ANSZ,PTXBTYPE           * see if we are processing the
          GOTO      WRIB8000 IF NOT EQUAL     discharge record
.
          COMPARE   ZERO,FLAGDISC           * make sure patient is actually
          GOTO      WRIB8000 IF EQUAL         discharged
.
          MATCH     ADATE,DDATE             * see if we have a day case
          GOTO      WRIB1100 IF EQUAL
.
          MATCH     DISDATE,EFDATE          * see if patient was discharged on
          GOTO      WRIB8000 IF NOT EQUAL     the start date of the period
.
.------ read through the debtors transaction file ------
.
WRIB1100  CALL      RDKDTRN1
          BRANCH    OVRCD,WRIB3000
.
          MATCH     AADMNO,TADMNO           * compare admission numbers
          GOTO      WRIB3000 IF NOT EQUAL
.
          BRANCH    TRECTYPE,WRIB1100,WRIB1500,WRIB1500,WRIB1100,WRIB1100:
                             WRIB1200
.
.------ check if journals are being collected ------
.
WRIB1200  IF        PTCNJADJ <> 1
            GOTO      WRIB1100
          ENDIF
.
.------ set up the transaction date ------
.
WRIB1500  PACK      TRDATE,TFCENT,TFYEAR,TFMONTH,TFDAY
          REP       " 0",TRDATE
.
WRIB1520  MATCH     ADATE,TRDATE            * see if less than admission date
          GOTO      WRIB1600 IF NOT LESS
          MOVE      ADATE,TRDATE
          GOTO      WRIB1700
.
.------ see if patient is discharged ------
.
WRIB1600  COMPARE   ZERO,FLAGDISC           * skip if patient not discharged
          GOTO      WRIB1700 IF EQUAL
.
          MATCH     TRDATE,DDATE            * skip if discharge date is >=
          GOTO      WRIB1700 IF NOT LESS      the transaction date
          MOVE      DDATE,TRDATE
.
.------ see if transaction date is inside the period selected ------
.
WRIB1700  MATCH     STDATE,TRDATE         * get next record if transaction
          GOTO      WRIB2000 IF LESS          date is = or < saved transaction
          GOTO      WRIB1710 IF EQUAL         date for this record
          GOTO      WRIB1720
.
WRIB1710  MATCH     ANSC,SAVTMOVE           * saved transaction a change rec. ?
          GOTO      WRIB1720 IF NOT EQUAL   * no
.         MATCH     ANSC,TMOVE              * yes - is current transaction a
.         GOTO      WRIB2000 IF EQUAL               change record ?
          MATCH     ANSD,TMOVE
          GOTO      WRIB2000 IF EQUAL               discharge record ?
.
WRIB1720  MATCH     TRDATE,TDATE            * see if transaction date is >
          GOTO      WRIB2000 IF LESS          end date for this record
.
          MATCH     TRDATE,SAVDDTE          * see if the transaction date has
          GOTO      WRIB2000 IF EQUAL         already been processed
.
          MOVE      TRDATE,TRWRIT           * save accepted transaction date
.
          COMPARE   SIX,TRECTYPE            * test for a journal adjustment
          GOTO      WRIB1900 IF EQUAL
.
          COMPARE   TWO,TRECTYPE            * test for a theatre charge
          GOTO      WRIB1800 IF NOT EQUAL
.
          ADD       TPATAMTP,PTXBTHTP
          ADD       TREBATE,PTXBTHTR
          GOTO      WRIB2000
.
.------ charge is a miscellaneous one ------
.
WRIB1800  ADD       TPATAMTP,PTXBMISP
          ADD       TREBATE,PTXBMISR
          GOTO      WRIB2000
.
.------ charge is a miscellaneous one ------
.
WRIB1900  ADD       TPATAMTT,PTXBDISC
          GOTO      WRIB2000
.
WRIB2000  BRANCH    MTIFLAG,WRIB3200
          GOTO      WRIB1100
.
.       Check for item in Misc.Theatre item charges file
.
WRIB3000  MOVE      ONE,MTIFLAG
          PACK      KEY14,AADMNO,SP20       * position on pmsmtiaf
          CALL      RSPMMTI1
WRIB3200  CALL      RKPMMTI1
          BRANCH    OVRCD,WRIB8000
          MOVE      TMPADMN,DAADMNO
          MATCH     PMMIVISN,DAADMNO
          GOTO      WRIB8000 IF NOT EQUAL
.
          MOVE      PMMITDAT,TRDATE
          MOVE      PMMIITEM,TITEMNO
          MOVE      ZERO,TRECTYPE
          MOVE      PMMIRTYP,TRECTYPE
          MOVE      PMMIAMTP,TPATAMTP
          MOVE      PMMIRBAT,TREBATE
          MOVE      PMMIAMTT,TPATAMTT
          GOTO      WRIB1520
.
.------ finished processing this patient so add variables to the totals ------
.
WRIB8000  ADD       PTXBTHTP,PTXBTHET
          ADD       PTXBTHTR,PTXBTHET
          ADD       PTXBTHET,ENETAMT
          ADD       PTXBMISP,PTXBMISC
          ADD       PTXBMISR,PTXBMISC
          ADD       PTXBMISC,ENETAMT
.
          MOVE      TMPADMN,PTXBADMN
          PACK      KEY17,DPTXBADM,PTXBTDAT,PTXBTYPE
.******************************************** Start of Changes         *C-48680
....      CALL      RAPTEXB1                * Pos read extract file B
....      IF        OVRCD=1
....        CALL      WRPTEXB1              * Write extract file B
....      ELSE
....        CALL      UPPTEXB1              * Update extract file B
....      ENDIF
          IF        NEWEXTB = 1
            CALL      WRPTEXB1              * Write extract file B
          ELSE
            CALL      UPPTEXB1              * Update extract file B
          ENDIF
.******************************************** Start of Changes         *C-48680
.
          CALL      RSPTEXB1                * position on record just written
.
          MOVE      PTXBTYPE,LASTTYPE
          MOVE      TRWRIT,SAVDDTE          * set already processed transaction
.                                             date to saved accepted trans. date
WRIB9999  RETURN
+
.**********************************************************************
.*                               SAVV0000                             *
.*       Routine to save the neccessary transfer file variables       *
.**********************************************************************
SAVV0000  MOVE      TATYPE,SAVATYPE
          MOVE      TADOCT,SAVADOCT
          MOVE      TBED,SAVBED
          MOVE      TDISC,SAVDISC
          MOVE      TEXTRA,SAVEXTRA
          MOVE      TRATEF,SAVRATEF
          MOVE      TRATEH,SAVRATEH
          MOVE      PTTRADPT,SPTTRADP
          MOVE      PTTRADRB,SPTTRADR
          MOVE      TALLW,SAVTALLW
.
          MATCH     ANSZ,TMOVE                                         *I-48680
          IF        @EQUAL
            MOVE      TDATE,STDATE                                     *I-48680
          ENDIF                                                        *I-48680
.
          MOVE      TCHSTAT,SAVTCHST
          MOVE      TMOVE,SAVTMOVE
          MOVE      TWARD,SAVWARD
          MOVE      TDEPT,SAVDEPT
.
SAVV9999  RETURN
+
.**********************************************************************
.*                               CLRC0000                             *
.*     Clear all working variables for the third extraction file      *
.**********************************************************************
CLRC0000  UNPACK    SP30,PTXCCTYP,PTXCCODE,PTXCDATE,PTXCMADC,PTXCMADT,PTXCMWRD
          UNPACK    SP30,PTXCMBED,PTXCSPAR
          MOVE      ZERO,PTXCCOST
.
CLRC9999  RETURN
+
.*********************************************************************
.*                               EXTC0000                            *
.*                Extract data for extraction file C                 *
.*********************************************************************
EXTC0000  MOVE      TMPADMN,AADMNO
          PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECD2
EXTC1000  CALL      RKPTECD2
          BRANCH    OVRCD,EXTC3000
.
          MATCH     AADMNO,PTEDADMN
          GOTO      EXTC3000 IF NOT EQUAL
.
          PACK      KEY12,TMPADMN,ANSD,PTEDUNQN
          MOVE      PTEDTYPE,PTXCCTYP
          MOVE      PTEDCODE,PTXCCODE
          MOVE      PTXADADC,PTXCMADC
          MOVE      PTXADADT,PTXCMADT
          MOVE      PTXADWRD,PTXCMWRD
          MOVE      PTXADBED,PTXCMBED
          MOVE      SP20,PTXCSPAR
.
EXTC2000  PACK      KEY12,TMPADMN,ANSD,PTEDUNQN
          CALL      RAPTEXC1
          IF        OVRCD=1
            CALL      WRPTEXC1                * write to extraction file C
          ELSE
            ADD       ONE,PTEDUNQN
            GOTO      EXTC2000
          ENDIF
          GOTO      EXTC1000
.
.------ position on the medical records operations file ------
.
EXTC3000  MOVE      TMPADMN,AADMNO
          PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECO2
EXTC3100  CALL      RKPTECO2
          BRANCH    OVRCD,EXTC6000
.
          MATCH     AADMNO,PTEOADMN
          GOTO      EXTC6000 IF NOT EQUAL
.
          MATCH     PTCNEDRG,PTEOCODE                                  *I-48680
          GOTO      EXTC3100 IF EQUAL       * Ignore PRS2 dummy code   *I-48680
.
          PACK      KEY12,TMPADMN,ANSO,PTEOUNQN
          MOVE      PTEOTYPE,PTXCCTYP
          MOVE      PTEOCODE,PTXCCODE
.
          MATCH     SP8,PTEODATE
          GOTO      EXTC3200 IF EQUAL
.
          MOVE      PTEODATE,PTXCDATE
          MOVE      PTEODATE,WORKDATE
.
.         Check if the operation date is within the period
.
          MATCH     EFDIM8,WORKDATE
          GOTO      EXTC3100 IF LESS
.
          MATCH     WORKDATE,ETDIM8
          GOTO      EXTC3100 IF LESS
.
.------ continue processing ------
.
EXTC3200  ADD       ONE,TOTOPS
          MOVE      PTEOCODE,KEY9
          CALL      RDPTICO1
          BRANCH    OVRCD,EXTC3300
          MOVE      OFEE,PTXCCOST
.
.------ continue processing ------
.
EXTC3300  MOVE      PTXADADC,PTXCMADC
          MOVE      PTXADADT,PTXCMADT
          MOVE      PTXADWRD,PTXCMWRD
          MOVE      PTXADBED,PTXCMBED
.
          MATCH     SP8,PTEODATE
          GOTO      EXTC3400 IF EQUAL
.
          PACK      KEY30,AADMNO,PTEODATE,PTEOEDTM,SP20,SP20           *I-48680
          CALL      RDSTRAN2                * position on transfer file for
          CALL      RDKTRAN2                * operation date and time
          BRANCH    OVRCD,EXTC3400
.
          MATCH     TADMN,AADMNO            * compare admission numbers
          GOTO      EXTC3400 IF NOT EQUAL
.
          MATCH     TDATE,WORKDATE          * see if transfer date is the same
          GOTO      EXTC3350 IF EQUAL       * as the operation date
.
          CALL      RDPTRAN2                * get the previous transfer file
          BRANCH    OVRCD,EXTC3400          * record
.
          MATCH     TADMN,AADMNO            * compare admission numbers
          GOTO      EXTC3400 IF NOT EQUAL
.
.------ continue processing ------
.
EXTC3350  MOVE      TADOCT,PTXCMADC
          MOVE      TWARD,PTXCMWRD
          MOVE      TBED,PTXCMBED
          MOVE      TADOCT,KEY6
          CALL      RDDOCT1                 * read the doctors file
          BRANCH    OVRCD,EXTC3400
.
          MOVE      DRTYPE,PTXCMADT
.
.------ continue processing ------
.
EXTC3400  MOVE      SP20,PTXCSPAR
          CALL      RAPTEXC1
          IF        OVRCD = ONE
            CALL      WRPTEXC1                * write to extraction file C
          ELSE
            ADD       ONE,PTEOUNQN
            PACK      KEY12,TMPADMN,ANSO,PTEOUNQN
            GOTO      EXTC3400
          ENDIF
          GOTO      EXTC3100
.
.------ position on the medical records MBS file ------
.
EXTC6000  MOVE      TMPADMN,AADMNO
          PACK      KEY11,AADMNO,SP70
          CALL      RDSMMBS1
.
.------ read through the medical records MBS file ------
.
EXTC6100  CALL      RDKMMBS1
          BRANCH    OVRCD,EXTC9999
.
          MATCH     AADMNO,MMADMN           * compare admission numbers
          GOTO      EXTC9999 IF NOT EQUAL
.
          PACK      KEY12,TMPADMN,ANSM,MMRECN
          MOVE      ANSM,PTXCCTYP
          MOVE      MMCODE,PTXCCODE
.
          MATCH     SP8,MMDATE              * see if MBS date is spaces
          GOTO      EXTC6200 IF EQUAL
.
          UNPACK    MMDATE,CCENT,CYEAR,CMON,CDAY
          PACK      PTXCDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",PTXCDATE
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",WORKDATE
.
.         Check if the operation date is within the period
.
          MATCH     EFDIM8,WORKDATE
          GOTO      EXTC6100 IF LESS
.
          MATCH     WORKDATE,ETDIM8
          GOTO      EXTC6100 IF LESS
.
.------ continue processing ------
.
EXTC6200  ADD       ONE,TOTMBS
          MOVE      MMCODE,KEY9
          PACK      KEY17,KEY9,MMDATE,SP70
          CALL      PATITMRD                * read patient item file
          BRANCH    OVRCD,EXTC6300
          MOVE      IAMT,PTXCCOST
.
.------ continue processing ------
.
EXTC6300  MOVE      PTXADADC,PTXCMADC
          MOVE      PTXADADT,PTXCMADT
          MOVE      PTXADWRD,PTXCMWRD
          MOVE      PTXADBED,PTXCMBED
.
          MATCH     SP8,MMDATE              * see if MBS date is spaces
          GOTO      EXTC6400 IF EQUAL
.
          PACK      KEY30,AADMNO,CCENT,CYEAR,CMON,CDAY,MMETIM,SP20,SP20
          CALL      RDSTRAN2                * position on transfer file for
          CALL      RDKTRAN2                  MBS date and time
          BRANCH    OVRCD,EXTC6400
.
          MATCH     TADMN,AADMNO            * compare admission numbers
          GOTO      EXTC6400 IF NOT EQUAL
.
          MATCH     TDATE,WORKDATE          * see if transfer date is the same
          GOTO      EXTC6350 IF EQUAL         as the MBS date
.
          CALL      RDPTRAN2                * get the previous transfer file
          BRANCH    OVRCD,EXTC6400            record
.
          MATCH     TADMN,AADMNO            * compare admission numbers
          GOTO      EXTC6400 IF NOT EQUAL
.
.------ continue processing ------
.
EXTC6350  MOVE      TADOCT,PTXCMADC
          MOVE      TWARD,PTXCMWRD
          MOVE      TBED,PTXCMBED
          MOVE      TADOCT,KEY6
          CALL      RDDOCT1                 * read the doctors file
          BRANCH    OVRCD,EXTC6400
.
          MOVE      DRTYPE,PTXCMADT
.
.------ continue processing ------
.
EXTC6400  MOVE      SP20,PTXCSPAR
          CALL      RAPTEXC1
          IF        OVRCD = ONE
            CALL      WRPTEXC1                * write to extraction file C
          ELSE
            ADD       ONE,MMRECN
            PACK      KEY12,TMPADMN,ANSM,MMRECN
            GOTO      EXTC6400
          ENDIF
          GOTO      EXTC6100
.
EXTC9999  RETURN
+
.*********************************************************************
.*                              UPDC0000                             *
.*    Update the control file with the relevant extraction data      *
.*********************************************************************
UPDC0000  MOVE      TOTOPS,EDOPERS
          LOAD      EDOPERS,CMBSOPR,TOTMBS
          PACK      EDATE,CCC,CYY,CMM,CDD
          REP       " 0",EDATE
.
          CALL      ETABPOS                 * get sector and tab position
.
          WRITAB    CONTROLF,SEC;*ETABPS,EDATE,EFDATE,ETDATE,EDOPERS
.
          MOVE      CPRIMOP,ETPRIMOP
          MOVE      CPRIMDS,ETPRIMDS
.
          CALL      ETOTPOS                 * get sector and tab position
.
          WRITAB    CONTROLF,SEC;*ETABPS,EADMNS,ETPRIMOP,ETPRIMDS,EBDAYS:
                                  EDCASES,ENETAMT
.
UPDC9999  RETURN
.
.*******************************************************************************
.         Get the default charging claim code for multi hospital
.*******************************************************************************
DCLM0000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          IF        IBCNMHOS=1
            OPEN      PATHSPA1,"pathspaf"
            MOVE      PMVXMHOS,KEY3
            CALL      RDPTHSP1
            IF        OVRCD=0
              MOVE      PTHSDCLM,PTCNDCLM     * default claim code charging
            ENDIF
          ENDIF
DCLM9999  RETURN
+
.****************************************************************************
.         Keyin user id
.****************************************************************************
USID0000  KEYIN     *P1:22,*EL,"User Id      : ",USERID;
          PACK      USERID,USERID,SP70
          MATCH     SP70,USERID
          GOTO      USID0000 IF EQUAL
USID9999  RETURN
.
.*********************************************************************
.
.       I/O routines for Temp Indexed file
.
RATMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATTM1XX,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATTM1XX,KEY8;;
          RETURN
.
RDTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATTM1XX,KEY8;DTMPADMN
          GOTO      OVERCOND IF OVER
          MOVE      DTMPADMN,TMPADMN
          RETURN
.
RKTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKS    PATTM1XX;DTMPADMN
          GOTO      OVERCOND IF OVER
          MOVE      DTMPADMN,TMPADMN
          RETURN
.
RPTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKP    PATTM1XX;DTMPADMN
          GOTO      OVERCOND IF OVER
          MOVE      DTMPADMN,TMPADMN
          RETURN
.
WRTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          WRITE     PATTM1XX,KEY8;KEY8
          RETURN
.
UPTMPR1   MOVE      TMPADMN,DTMPADMN
          UPDATE    PATTM1XX;DTMPADMN
          RETURN
.
DETMPR1   RESET     KEY8
          DELETE    PATTM1XX,KEY8
          RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       CALCAGE
          INC       CALCDAYS
          INC       GETBFEES
          INC       RTIODAYS
          INC       PATGEXT
          INC       STEPDOWN
          INC       PATCMSTP
          INC       PATITMRD
.
          INC       NZPBFEIO/INC
          INC       PATASDIO/INC
          INC       PATHDFIO/INC
          INC       PATHLFIO/INC
          INC       PATLSDIO/INC
          INC       PATLDFIO/INC
          INC       PATAFEIO/INC
          INC       PATFN1IO/INC
          INC       PATFX1IO/INC
          INC       PATCFAIO/INC
          INC       PATBFEIO/INC
          INC       PATCHCIO/INC
          INC       PATDADIO/INC
          INC       PATDAYIO/INC
          INC       PATECDIO/INC
          INC       PATECOIO/INC
          INC       PATEX1IO/INC
          INC       PATEXBIO/INC
          INC       PATEXCIO/INC
          INC       PATCT1IO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATDSCIO/INC
          INC       PATDTRIO/INC
          INC       PATICOIO/INC
          INC       PATITMIO/INC
          INC       PATHSPIO/INC
          INC       PATMA1IO/INC
          INC       PMSPX2IO/INC
          INC       PATMI1IO/INC
          INC       PATMMBIO/INC
          INC       PATRCAIO/INC
          INC       PATTRNIO/INC
          INC       PATVISIO/INC
          INC       PATWR1IO/INC
          INC       PMSCIDIO/INC
          INC       PMSCCDIO/INC
          INC       PMSMTIIO/INC
          INC       PMSVX1IO/INC
          INC       PATINVIO/INC
          INC       PATCMXIO/INC
          INC       PATCMTIO/INC
          INC       PMSCMTIO/INC
          INC       PATPGRIO/INC
          INC       PATMCHIO/INC
          INC       PMSEDGIO/INC             * Effective DRG Dates
          INC       GETEFDRG
          INC       CMXMATRX
          INC       GETCNEFF
          INC       VALCMXFN
          INC       CHKCMXPT
          INC       NHOSPDAY
+
