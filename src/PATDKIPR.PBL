.------------------------------------------------------------
.  File          :  PATDKIPR.PBL
.
.  Function      :  Update Keyword Index File for Doctors Table
.
.  Parameters    :  DCODE - Key to Doctors Table
.
.  Modifications :  
.                   V10.11.01 08/08/2017 Tracey Nguyen  TSK 0299206
.                             Added HCPSW000 & GENSNDEX for Soundex keywords
.                             for Doctor Surname and Given Name            
.                   V10.05.01 25/07/2014 Ebon Clements CAR 295504
.                             Added preferred name to keywords
.                   V9.09.01  07/01/2008 Ebon Clements CAR 146550
.                             Added doctor code as a keyword
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Procedure to Update
.  a Key Word Index Table that can be used for searching 
.  Masterfiles. The procedure should be called from the 
.  Add, Update and Delete functions in the Masterfile 
.  Maintenance Function.
.  
.  A Key Word Index Table is Defined in the following Manner
.                              
.  PTDKxxxx    DIM       xx    * Code Field Segment 1
.  PTDKyyyy    DIM       xx    * Code Field Segment n
.  PTDKKWD     DIM       15    * Key Word
.  PTDKSPA     DIM       10    * Spare
.
.  Index 1   PTDKxxxx, PTDKyyyy, PTDKKWD
.  Index 2   PTDKKWD, PTDKxxxx, PTDKyyyy
.
.  To convert this Procedure the following should be performed
.    Global Change PAT to the System ID eg :%s/PAT/PAT/g
.    Global Change CKI to the File   ID eg :%s/CKI/CKI/g
.    Global Change PTDK to the IO Call ID eg :%s/PTDK/PTDK/g
.    Modify the KEYINDEX defintion to combined Code Field Lengths eg 6
.    Global Change KEY21 to the Key for the Key Word Table eg KEY21
.    Change xxxxxxx to the Code Fields eg DCODEhh
.    Change the GENR0000 routine to call the BWORD000 for each
.    string of key words to be indexed for the Coded Field
.    eg MOVE    DSNAME,KEYWORDS
.       CALL    BWORD000
.       MOVE    DGNAME,KEYWORDS
.       CALL    BWORD000
.       MOVE    TDESC,KEYWORDS
.       CALL    BWORD000
.------------------------------------------------------------
          DEFPROC   PATDKIUP
.
          INC       PATDKIFD/INC
          INC       GENSNDVR/INC      * Vars for GENSNDEX.PBL
.
CODEDT    INIT      "DT"
KEYINDEX  DIM       6         * Code Index in Table
KEYWORDS  DIM       60        * String Containing the Key Words to be Indexed
SIXTY     FORM      "60"
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       15
KEYWRD02  DIM       15
KEYWRD03  DIM       15
KEYWRD04  DIM       15
KEYWRD05  DIM       15
KEYWRD06  DIM       15
KEYWRD07  DIM       15
KEYWRD08  DIM       15
KEYWRD09  DIM       15
KEYWRD10  DIM       15
.
Z1        INIT      "~"

.------------------------------------------------------------
. Generate Word Index
.------------------------------------------------------------
GENR0000  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     PATDKIA1,"patdkiaf"
          TRAPCLR  IO
          BRANCH   OVRCD,GENR9999
.
          MOVE     DCODE,KEYINDEX
          CALL     CLEAR000           * Remove Current Key Word Index
          BRANCH   EXIT,GENR9999
.
          MOVE     DCODE,KEY6         * Validate Record on File
          CALL     RDDOCT1
          BRANCH   OVRCD,GENR1900     * If Not then it Must be a Delete/Clear
.
          MOVE     DCODE,KEYINDEX
.
          MOVE     DSNAME,KEYWORDS
          CALL     BWORD000
.
          MOVE     DGNAME,KEYWORDS
          CALL     BWORD000
.
          MOVE     DCODE,KEYWORDS
          CALL     BWORD000
.
          MATCH    SP70,PTDOPREF
          IF       !@EQUAL
            MOVE     PTDOPREF,KEYWORDS      * Preferred name
            CALL     BWORD000
          ENDIF
.
          MATCH    SP70,DRTYPE
          GOTO     GENR1010 IF EQUAL
          PACK     KEY5,CODEDT,DRTYPE
          CALL     RDCODE1
          IF       OVRCD=0
            MOVE     TDESC,KEYWORDS
            CALL     BWORD000
          ENDIF
.
GENR1010  MATCH    SP70,DRTYPE2
          GOTO     GENR1020 IF EQUAL
          PACK     KEY5,CODEDT,DRTYPE2
          CALL     RDCODE1
          IF       OVRCD=0
            MOVE     TDESC,KEYWORDS
            CALL     BWORD000
          ENDIF
.
GENR1020  MATCH    SP70,DRTYPE3
          GOTO     GENR1030 IF EQUAL
          PACK     KEY5,CODEDT,DRTYPE3
          CALL     RDCODE1
          IF       OVRCD=0
            MOVE     TDESC,KEYWORDS
            CALL     BWORD000
          ENDIF
.
GENR1030  MATCH    SP70,DRTYPE4
          GOTO     GENR1040 IF EQUAL
          PACK     KEY5,CODEDT,DRTYPE4
          CALL     RDCODE1
          IF       OVRCD=0
            MOVE     TDESC,KEYWORDS
            CALL     BWORD000
          ENDIF
.
GENR1040  MATCH    SP70,DRTYPE5
          GOTO     GENR1050 IF EQUAL
          PACK     KEY5,CODEDT,DRTYPE5
          CALL     RDCODE1
          IF       OVRCD=0
            MOVE     TDESC,KEYWORDS
            CALL     BWORD000
          ENDIF
.
GENR1050  MOVE     DPROV,KEYWORDS
          CALL     BWORD000
.
.
.         TSK 0299206 - Soundex
.
GENR1100  MOVE     DSNAME,KEYWORDS         * Doctor Surname
          CALL     HCPSW000
.
          MOVE     DGNAME,KEYWORDS         * Doctor Given Names
          CALL     HCPSW000
.
GENR1900  CLOSE    PATDKIA1
.
GENR9999  GOTO     PATDKIEP
.------------------------------------------------------------
. Clear Current Key Words
.------------------------------------------------------------
CLEAR000  PACK     KEY21,KEYINDEX,SP70
          CALL     RSPTDK1
          CALL     RKPTDK1
          BRANCH   OVRCD,CLEAR999
          MATCH    KEYINDEX,PTDKDOC
          GOTO     CLEAR999 IF NOT EQUAL
.
          PACK     KEY21,PTDKDOC,PTDKKWD,SP70
          CALL     DEPTDK1
          GOTO     CLEAR000
.
CLEAR999  RETURN
.-------------------------------------------------
. Determine Words to Index
.-------------------------------------------------
BWORD000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      BWORD000 IF NOT EOS
            GOTO      BWORD999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY60,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      BWORD100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handly form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Save this Word
.
BWORD100  MOVE      KEYWORDS,KEY15
          PACK      KEY15,KEY15,SP70
          REP       UPPLOW,KEY15             * Always Upper Case
          PACK      KEY21,KEYINDEX,KEY15
          UNPACK    KEY21,PTDKDOC,PTDKKWD
          CALL      RDPTDK1
          IF        OVRCD=1
            CALL      WRPTDK1
          ENDIF
          GOTO      BWORD190
.
.         Check for any more words
.
BWORD190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY60,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY60,KEYWORDS
          GOTO      BWORD000
.
BWORD999  RETURN
.
. TSK 0299206
.-----------------------------------------------------------------------------
. Determine Words to Index with Soundex algorithm
.-----------------------------------------------------------------------------
HCPSW000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      HCPSW000 IF NOT EOS
            GOTO      HCPSW999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY60,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      HCPSW100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handy form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Derive and save this sound-ex key word
.
HCPSW100  MOVE      KEYWORDS,SXKEYIN         * Keyword in to convert to Soundex
          CALL      GSNDX000                 * Derive Sound-Ex key
          PACK      KEY15,Z1,SXKEYOUT,SP70   * Add "~" to indicate Sound-Ex key
          PACK      KEY21,KEYINDEX,KEY15
          UNPACK    KEY21,PTDKDOC,PTDKKWD    * Write the Sound-Ex key
          CALL      RDPTDK1
          IF        OVRCD=1
            CALL      WRPTDK1
          ENDIF
          GOTO      HCPSW190
.
.         Check for any more words
.
HCPSW190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY60,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY60,KEYWORDS
          GOTO      HCPSW000
.
HCPSW999  RETURN
.
.------------------------------------------------------------------------------
.
          INC       PATDKIIO/INC
          INC       IBAOVRIO/INC
          INC       GENSNDEX               * Routine to generate Soundex key
.
PATDKIEP  ENDPROC                          * End of Procedure
.
