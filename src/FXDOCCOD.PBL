.*****************************************************************************
.* System    :   All                                                         *
.* Program   :   FXDOCCOD                                                    *
.* Desc      :   Fixit for Doctor fields for Healthscope webPAS              *
.*****************************************************************************
.* Date      :   12/06/2009                                                  *
.* Author    :   Peter Vela                                                  *
.* Function  :   This program will load mapping data from an ascii file      *
.*               (set up by the user) and then process all the webPAS        *
.*               fields using that mapping data to map the old codes to      *
.*               new codes.                                                  *
.* Mods      :                                                               *
.*        V11.03.01  20.03.2023 DA Sarkies Task 0909393                      *
.*                   Added hospital name as key to theatre booking           *
.*        V10.15.04  09/12/2019 Peter Vela Task 0871644                      *
.*                   Recompiled for OPRREQTM                                 *
.*        V10.15.03  28/11/2019  Peter Vela       TSK 0871644                *
.*                   Recompiled for OPRREQFD                                 *
.*        V10.15.02  21/11/2019  Peter Vela       TSK 0871644                *
.*                   Added OPPCCLSS                                          *
.*        V10.15.01  13/11/2019  Davin            TSK 0861253                *
.*                   Added OUTTHIFD for O/P telehealth fields                *
.*****************************************************************************
.*        V10.14.02 17/04/2019  Steve Armstrong  TSK 0868837                 *
.*                  Recompiled for changes to ALLHDTFD.                      *
.*        V10.14.01  15/03/2019  Jill Parkinson Task 0863524                 *
.*                   Changed to use key21 for oprsemaf                       *
.*****************************************************************************
.*        V10.13.01  02/08/2018  Ebon Clements TSK 0853101                   *
.*                   Added hospital to theatre comments key - oprcomaf       *
.*                   26/07/2018  J.Tan         TSK 0848506                   *
.*                   Commented updating PP files with doctor fields          *
.*****************************************************************************
.*        V10.09.01  28/11/2016  Peter Vela    TSK 0814744                   *
.*                   Recompiled for EMREXPFD                                 *
.*****************************************************************************
.*        V10.08.01  10/07/2016  J.Tan         TSK 0822042                   *
.*                   Mods checking CFEETYP before opening pmsmteaf           *
.*****************************************************************************
.*        V10.07.01  05/11/2015  Steve Armstrong  CAR 303363                 *
.*                   Recompiled for changes to RESHEAFD                      *
.*****************************************************************************
.*        V10.06.02  25/06/2015  Steve Armstrong   CAR 318558                *
.*                   Recompiled for changes to BOKQUEFD & BOKQUEIO           *
.*        V10.06.01  12/03/2015  Steve Armstrong   CAR 314108                *
.*                   Removed reference to PATCGPFD (no longer in use)        *
.*****************************************************************************
.*        V10.05.02  26/08/2014  Ania P            CAR 303210                *
.*                   Recompiled for MEHHONFD                                 *
.*        V10.05.01  11/08/2014  Don Nguyen        CAR 297774                *
.*                   Recompiled for changes to PMSBRQFD/IO                   *
.*****************************************************************************
.*        V10.04.03  15/05/2014  Steve Armstrong   CAR 285465                *
.*                   Recompiled for changes to ALLHDTFD                      *
.*        V10.04.02  28/04/2014  Steve Armstrong   CAR 261630                *
.*                   Removed references to PATAUTFD (No longer in use)       *
.*        V10.04.01  31/12/2013  Don Nguyen        CAR 294371                *
.*                   Recompiled for changes to EMREXPFD and EMREXPIO         *
.*****************************************************************************
.*        V10.03.06  10/09/2013  Steve Armstrong   CAR 291089                *
.*                   Recompiled for changes to PMSQVIIO.                     *
.*        V10.03.05  18/05/2013  Steve Armstrong   CAR 268961                *
.*                   Recompiled for changes to PMSQVIFD                      *
.*        V10.03.04  06/05/2013  Ebon Clements     CAR 261630                *
.*                   Removed port number from temp file name                 *
.*        V10.03.03  05/12/2012  Steve Armstrong   CAR 272756                *
.*                   Mods for cater for changes to ALLHDTFD.                 *
.*        V10.03.02  06/07/2012  Mike Laming       CAR 261603                *
.*                   Correct key for MEHPATaf Key 30 should be KEY32         *
.*        V10.03.01  10/04/2012  Mike Laming       CAR 261603                *
.*                   Mods to MEHP..FD/IO to only execute if PTCNHDPS = "1"   *
.*****************************************************************************
.*        V10.02.02  21/09/2011  Steve Armstrong   CAR 251515                *
.*                   Recompiled for changes to WATQUEFD.                     *
.*        V10.02.01  23/03/2011  Mike Laming       CAR 240107                *
.*                   Remove PTCNUCEP PATMRDFD/IO and PATMROFD/IO             *
.*****************************************************************************
.*        V10.01.01  19/11/2010  Steve Armstrong   CAR 234061                *
.*                   Recompiled for changes to PMSNUTFD.                     *
.*                   Changed CALL's to PMSNUTIO.                             *
.*****************************************************************************
.*        V10.00.04  28/05/2010  Steve Armstrong   CAR 220289                *
.*                   Recompiled for changes to ALLHDTFD                      *
.*        V10.00.03  22/04/2010  Steve Armstrong   CAR 220289                *
.*                   Recompiled for changes to ALLHDTFD                      *
.*        V10.00.02  14/04/2010  Steve Armstrong      CAR 219933             *
.*                   Recompiled for changes to EMRVCDFD                      *
.*        V10.00.01  Mike Laming   CAR 208570                                *
.*                   Recompiled for changes to PATCRDFD.                     *
.*                   Mike Laming   CAR 157391                                *
.*                   Recompiled for changes to PATEX1FD.                     *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       AAECOTFD/INC
          INC       AAEDE1FD/INC
          INC       AAEDTRFD/INC
          INC       ALLACTFD/INC
          INC       ALLAEFFD/INC
          INC       ALLERCFD/INC
          INC       ALLADSFD/INC
          INC       ALLCONFD/INC
          INC       ALLCTMFD/INC
          INC       ALLENCFD/INC
          INC       ALLEXTFD/INC
          INC       ALLGEHFD/INC
          INC       ALLGRHFD/INC
          INC       ALLHDTFD/INC
          INC       ALLQUEFD/INC
          INC       ALLREFFD/INC
          INC       CCSEPSFD/INC
          INC       CEASTRFD/INC
          INC       CEATFMFD/INC
          INC       CEATGMFD/INC
          INC       CEAVAMFD/INC
          INC       CCIBAUFD/INC
          INC       CCIBTRFD/INC
          INC       CCIUTLFD/INC
          INC       CLAVARFD/INC
          INC       HICCLMFD/INC
.         INC       HL7OBRFD/INC
.         INC       HL7OBXFD/INC
.         INC       HL7ORCFD/INC
.         INC       HL7PV1FD/INC
          INC       EMRDOCFD/INC
          INC       EMREXPFD/INC
          INC       EMRHISFD/INC
          INC       EMRINCFD/INC
          INC       EMRISMFD/INC
          INC       EMRQUEFD/INC
          INC       EMRVCDFD/INC
          INC       EMRVISFD/INC
          INC       EOCACCFD/INC
          INC       IBASEQFD/INC
          INC       LEGBOAFD/INC
          INC       LEGBOBFD/INC
          INC       LEGCLIFD/INC
          INC       LEGDEAFD/INC
          INC       LEGDOCFD/INC
          INC       LEGDTRFD/INC
          INC       LEGMAAFD/INC
          INC       LEGMISFD/INC
          INC       LEGTRNFD/INC
          INC       LEGVISFD/INC
          INC       MEHDLSFD/INC
          INC       MEHLERFD/INC
          INC       MEHHLSFD/INC
          INC       MEHHONFD/INC
          INC       MEHPATFD/INC
          INC       MEHPCOFD/INC
          INC       MEHPLSFD/INC
          INC       MRTDSRFD/INC
          INC       MRTPDSFD/INC
          INC       MRTREXFD/INC
          INC       NHIMASFD/INC
          INC       BOKQUEFD/INC
          INC       BOKRC1FD/INC
          INC       BOKRX1FD/INC
          INC       OPR001FD/INC
          INC       OPRANEFD/INC
          INC       OPRATTFD/INC
          INC       OPRAVEFD/INC
          INC       OPRCLIFD/INC
          INC       OPRCOMFD/INC
          INC       OPRCOSFD/INC
          INC       OPRCOUFD/INC
          INC       OPRCSCFD/INC
          INC       OPRCSUFD/INC
          INC       OPRCTSFD/INC
          INC       OPRDEAFD/INC
          INC       OPRDEBFD/INC
          INC       OPRDLVFD/INC
          INC       OPRDPFFD/INC
          INC       OPRDPHFD/INC
          INC       OPRPCMFD/INC
          INC       OPRPRFFD/INC
          INC       OPRQUEFD/INC
          INC       OPRRALFD/INC
          INC       OPRREQFD/INC
          INC       OPRSEMFD/INC
          INC       OPRSESFD/INC
          INC       OPRSOSFD/INC
          INC       OPRSOUFD/INC
          INC       OPRTSMFD/INC
          INC       MAMMASFD/INC
          INC       OUTBOAFD/INC
          INC       OUTBB1FD/INC
          INC       OUTCANFD/INC
          INC       OUTCLIFD/INC
          INC       OUTHEDFD/INC
          INC       OUTLADFD/INC
          INC       OUTMA1FD/INC
          INC       OUTMXSFD/INC
          INC       OUTQUEFD/INC
          INC       OUTRF1FD/INC
          INC       OUTRSHFD/INC
          INC       OUTSITFD/INC
.         INC       OUTRQUFD/INC
          INC       OUTSESFD/INC
          INC       OUTTHIFD/INC
          INC       OUTUATFD/INC
          INC       OUTXSCFD/INC
          INC       ARCVX1FD/INC
          INC       MLTCFNFD/INC
          INC       MLTHCPFD/INC
          INC       NZPPICFD/INC
          INC       NZPRPIFD/INC
          INC       NZPSPRFD/INC
          INC       PATAA1FD/INC
          INC       PATAD1FD/INC
          INC       PATAXEFD/INC
          INC       PATCONFD/INC
          INC       PATC1SFD/INC
          INC       PATC2SFD/INC
          INC       PATCRCFD/INC
          INC       PATCRDFD/INC
          INC       PATCUNFD/INC
          INC       PATDFEFD/INC
          INC       PATDKIFD/INC
          INC       PATDO1FD/INC
          INC       PATDSTFD/INC
          INC       PATDSCFD/INC
          INC       PATDTRFD/INC
          INC       PATEX1FD/INC
          INC       PATEXBFD/INC
          INC       PATEXCFD/INC
.         INC       PATHDOFD/INC
          INC       PATIMMFD/INC
          INC       PATINPFD/INC
          INC       PATMA1FD/INC
.         INC       PATMX1FD/INC
          INC       PATMI1FD/INC
          INC       PATNADFD/INC
          INC       PATNIDFD/INC
          INC       PATONLFD/INC
          INC       PATPERFD/INC
          INC       PATPRVFD/INC
          INC       PATRE1FD/INC
.         INC       PATSQAFD/INC
          INC       PATTRNFD/INC
          INC       PATVISFD/INC
          INC       PATWR1FD/INC
          INC       PMSBDCFD/INC
          INC       PMSBRQFD/INC
          INC       PMSDLTFD/INC
          INC       PMSDSLFD/INC
          INC       PMSDTCFD/INC
          INC       PMSDUNFD/INC
          INC       PMSEVTFD/INC
          INC       PMSFCIFD/INC
          INC       PMSGPAFD/INC
          INC       PMSHCGFD/INC
          INC       PMSHCLFD/INC
          INC       PMSHCPFD/INC
          INC       PMSHKIFD/INC
          INC       PMSMTEFD/INC
          INC       PMSMTIFD/INC
          INC       PMSNUTFD/INC
          INC       PMSPX2FD/INC
          INC       PMSQDRFD/INC
          INC       PMSQITFD/INC
          INC       PMSQPTFD/INC
          INC       PMSQVIFD/INC
          INC       PMSRFLFD/INC
          INC       PMSTCOFD/INC
          INC       PMSVX1FD/INC
          INC       PMSWORFD/INC
          INC       PMSWX1FD/INC
.         INC       SAVPX2FD/INC
.
          INC       PRIBULFD/INC
          INC       PRIDOCFD/INC
          INC       PRIDTRFD/INC
          INC       PRIFCIFD/INC
          INC       PRIFLSFD/INC
          INC       PRIFSLFD/INC
          INC       PRIGSLFD/INC
          INC       PRIHREFD/INC
          INC       PRIHTRFD/INC
          INC       PRIINVFD/INC
          INC       PRIPCEFD/INC
          INC       PRIPRAFD/INC
          INC       PRISTAFD/INC
          INC       PRITMPFD/INC
          INC       RESHEAFD/INC
          INC       RESLNKFD/INC
          INC       RESLURFD/INC
          INC       TFILEVAR/INC
          INC       WATCPTFD/INC
          INC       WATEXTFD/INC
          INC       WATHISFD/INC
          INC       WATTR1FD/INC
          INC       WATQUEFD/INC
          INC       WATSCUFD/INC
          INC       WATSEIFD/INC
          INC       WATTX1FD/INC
          INC       WATUDCFD/INC
          INC       WATUDSFD/INC
          INC       WATUNSFD/INC
          INC       WATUPCFD/INC
          INC       WATVWLFD/INC
          INC       WATWTAFD/INC
          INC       WEBERRFD/INC
          INC       WEBSECFD/INC
.
.
.         ASCII Mapping File Definition
.         -----------------------------
AMAPFILE  FILE      ASCII,FIXED=20
.
.Name     Type      Length	Start Pos.     Description
.-------- ----      ------      ----------     ----------------------------
OLDCODE   DIM       6              1           Old code to be replaced
NEWCODE   DIM       6              7           New code to replace old code
.
.End of Record                    20
.
.
.
.         Indexed Mapping Temporary File Definition
.         -----------------------------------------
.         Filename : TXXXXXXX.dat
.
MAPTEMP1  IFILE SQL, FIXED=13, KEY="U1-6"
.
.NAME     TYPE    LENGTH   PHYSICAL   START   DESCRIPTION
.----     ----    ------   --------   -----   -----------
.OLDCODE  DIM       6                   1     Old code to be replaced
.NEWCODE  DIM       6                   7     New code to replace old code
.
.End of Record                         13
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ACC       DIM       2                        * Needed for UPDUR
ACTION    DIM       1 
ADD       DIM       2                        * Needed for UPDUR
AMM       DIM       2 
AYY       DIM       2  
ADMNTYPE  DIM       3
ARCFLAG   FORM      1
MAMFLAG   FORM      1
.
CLAMCODE  DIM       3
.CMDLINE   DIM       80
CODEDFLD  DIM       6
.COUNTER   FORM      2
.
.DOCTCODE  DIM       6
.
ERORFLAG  FORM      1             * Load Error Flag
.                                    0 = No error occurred
.                                    1 = Error occurred
FILENAME  DIM       50
FINFLAG   FORM      1             * Finance Flag
.                                       0 = using patfinsf
.                                       1 = using patfigaf
FUNDCODE  DIM       6
.
GROUPCDE  DIM       3
.
ITEMFLAG  DIM       2
ITEMCODE  DIM       9
.
JRNLCODE  DIM       3
.
OPERCODE  DIM       4 
.
PREFCHAR  DIM       1
.
SAVTXWRD  DIM       3
.
SAVKEY4   DIM       4
SAVKEY5   DIM       5
SAVKEY6   DIM       6
SAVKEY8   DIM       8
SAVKEY9   DIM       9
SAVKEY10  DIM       10
SAVKEY11  DIM       11
SAVKEY12  DIM       12
SAVKEY13  DIM       13
SAVKEY14  DIM       14
SAVKEY15  DIM       15
SAVKEY16  DIM       16
SAVKEY17  DIM       17
SAVKEY18  DIM       18
SAVKEY19  DIM       19
SAVKEY20  DIM       20
SAVKEY21  DIM       21
SAVKEY22  DIM       22
SAVKEY23  DIM       23
SAVKEY24  DIM       24
SAVKEY25  DIM       25
SAVKEY26  DIM       26
SAVKEY27  DIM       27
SAVKEY28  DIM       28
SAVKEY29  DIM       29
SAVKEY30  DIM       30
SAVKEY31  DIM       31
SAVKEY32  DIM       32
SAVKEY34  DIM       34
SAVKEY35  DIM       35
SAVKEY36  DIM       36
SAVKEY40  DIM       40
SAVKEY42  DIM       42
SAVKEY46  DIM       46
SAVKEY54  DIM       54
SUBITEMC  DIM       3
.
TEMPFILE  DIM       8
TIMEIS    DIM       8  
.
UPDTFLAG  FORM      1             * Update Flag
.                                    0 = Update record
.                                    1 = Don't update record
.
WARDCODE  DIM       3
.
.
. PROGRAM CONSTANTS
. -----------------
ERASE     INIT      "iserase "
ISBUILD   INIT      "isbuild "
CATA      INIT      "A "
CATBT     INIT      "BT"
CATCC     INIT      "CC"
CATCL     INIT      "CL"
CATCR     INIT      "cr"
CATDD     INIT      "DD"
CATDT     INIT      "DT"
CATDX     INIT      "DX"
CATFI     INIT      "FI"
CATHT     INIT      "HT"
CATJ      INIT      "J "
CATP      INIT      "P "
CATS      INIT      "S "
UKEY      INIT      " 13 U1-6"
.
.
PRGID     INIT      "FXDOCCOD"
PRGNAM    INIT      "Fixit for Doctor fields for Healthscope"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9000          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with fixit
.
MAIN1000  CALL      GMAP0000               * get ascii map file name
          BRANCH    EXIT,MAIN0100          * nothing input or not found
.
          CALL      CREA0000               * create temp indexed file
.
          CALL      LOAD0000               * load code mappings into temp file
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      PROC0000               * process files with coded fields
.
MAIN9000  CALL      KILL0000               * clean up temp files
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"aaecotaf";
          OPEN      AAECOTA1,"aaecotaf"
.
          DISPLAY   *P64:24,"aaede1af";
          OPEN      AAEDE1A1,"aaede1af"
.
          DISPLAY   *P64:24,"aaedtref";
          OPEN      AAEDTRE1,"aaedtref"
.
          DISPLAY   *P64:24,"allactaf";
          OPEN      ALLACTA1,"allactaf"
.
          DISPLAY   *P64:24,"alladsaf";
          OPEN      ALLADSA1,"alladsaf"
.
          DISPLAY   *P64:24,"allctmaf";
          OPEN      ALLCTMA1,"allctmaf"
.
          DISPLAY   *P64:24,"allencaf";
          OPEN      ALLENCA1,"allencaf"
.
          DISPLAY   *P64:24,"allextaf";
          OPEN      ALLEXTA1,"allextaf"
.
          DISPLAY   *P64:24,"allgehaf";
          OPEN      ALLGEHA1,"allgehaf"
.
          DISPLAY   *P64:24,"allgrhaf";
          OPEN      ALLGRHA1,"allgrhaf"
.
          DISPLAY   *P64:24,"allhdtaf";
          OPEN      ALLHDTA1,"allhdtaf"
.
          DISPLAY   *P64:24,"allqueaf";
          OPEN      ALLQUEA1,"allqueaf"
.
          DISPLAY   *P64:24,"allrefaf";
          OPEN      ALLREFA1,"allrefaf"
.
          DISPLAY   *P64:24,"ccsepsaf";
          OPEN      CCSEPSA1,"ccsepsaf"
.
          DISPLAY   *P64:24,"ceastraf";
          OPEN      CEASTRA1,"ceastraf"
.
          DISPLAY   *P64:24,"ceatfmaf";
          OPEN      CEATFMA1,"ceatfmaf"
.
          DISPLAY   *P64:24,"ceatgmaf";
          OPEN      CEATGMA1,"ceatgmaf"
.
          DISPLAY   *P64:24,"ceavamaf";
          OPEN      CEAVAMA1,"ceavamaf"
.
          DISPLAY   *P64:24,"ccibauaf";
          OPEN      CCIBAUA1,"ccibauaf"
.
          DISPLAY   *P64:24,"ccibtraf";
          OPEN      CCIBTRA1,"ccibtraf"
.
          DISPLAY   *P64:24,"cciutlaf";
          OPEN      CCIUTLL1,"cciutlaf"
.
          DISPLAY   *P64:24,"clavaraf";
          OPEN      CLAVARA1,"clavaraf"
.
          DISPLAY   *P64:24,"hicclmaf";
          OPEN      HICCLMA1,"hicclmaf"
.
.         DISPLAY   *P64:24,"hl7pv1af";
.         OPEN      HL7PV1A1,"hl7pv1af"
.
          DISPLAY   *P64:24,"emrdocaf";
          OPEN      EMRDOCA1,"emrdocaf"
.
          DISPLAY   *P64:24,"emrexpaf";
          OPEN      EMREXPA1,"emrexpaf"
.
          DISPLAY   *P64:24,"emrhisaf";
          OPEN      EMRHISA1,"emrhisaf"
.
          DISPLAY   *P64:24,"emrincaf";
          OPEN      EMRINCA1,"emrincaf"
.
          DISPLAY   *P64:24,"emrismaf";
          OPEN      EMRISMA1,"emrismaf"
.
          DISPLAY   *P64:24,"emrqueaf";
          OPEN      EMRQUEA1,"emrqueaf"
.
          DISPLAY   *P64:24,"emrvcdaf";
          OPEN      EMRVCDA1,"emrvcdaf"
.
          DISPLAY   *P64:24,"emrvisaf";
          OPEN      EMRVISA1,"emrvisaf"
.
          DISPLAY   *P64:24,"eocaccaf";
          OPEN      EOCACCA1,"eocaccaf"
.
          DISPLAY   *P64:24,"legbokbf";
          OPEN      LEGBOKB1,"legbokbf"
.
          DISPLAY   *P64:24,"legcliaf";
          OPEN      LEGCLIA1,"legcliaf"
.
          DISPLAY   *P64:24,"legdetaf";
          OPEN      LEGDETA1,"legdetaf"
.
          DISPLAY   *P64:24,"legdtraf";
          OPEN      LEGDTRA1,"legdtraf"
.
          DISPLAY   *P64:24,"legmasaf";
          OPEN      LEGMASA1,"legmasaf"
.
          DISPLAY   *P64:24,"legmissf";
          OPEN      LEGMISS1,"legmissf"
.
          DISPLAY   *P64:24,"legtranf";
          OPEN      LEGTRAN1,"legtranf"
.
          DISPLAY   *P64:24,"legvisaf";
          OPEN      LEGVISA1,"legvisaf"
.
          DISPLAY   *P64:24,"mehdlsaf";
          OPEN      MEHDLSA1,"mehdlsaf"
.
          DISPLAY   *P64:24,"mehhlsaf";
          OPEN      MEHHLSA1,"mehhlsaf"
.
          DISPLAY   *P64:24,"mehhonaf";
          OPEN      MEHHONA1,"mehhonaf"
.
          DISPLAY   *P58:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
          READ      CONTROLF,TEN9;*212,CFEETYP
.
          IF        PTCNHDPS = 1
            DISPLAY   *P64:24,"mehpataf";
            OPEN      MEHPATA1,"mehpataf"
.
            DISPLAY   *P64:24,"mehpcoaf";
            OPEN      MEHPCOA1,"mehpcoaf"
.
            DISPLAY   *P64:24,"mehplsaf";
            OPEN      MEHPLSA1,"mehplsaf"
          ENDIF
.
          DISPLAY   *P64:24,"mrtdsraf";
          OPEN      MRTDSRA1,"mrtdsraf"
.
          DISPLAY   *P64:24,"mrtpdsaf";
          OPEN      MRTPDSA1,"mrtpdsaf"
.
          DISPLAY   *P64:24,"mrtrexaf";
          OPEN      MRTREXA1,"mrtrexaf"
.
          DISPLAY   *P64:24,"bokqueaf";
          OPEN      BOKQUEA1,"bokqueaf"
.
          DISPLAY   *P64:24,"bokrc1af";
          OPEN      BOKRC1A1,"bokrc1af"
.
          DISPLAY   *P64:24,"bokrx1af";
          OPEN      BOKRX1A1,"bokrx1af"
.
          DISPLAY   *P64:24,"opranaef";
          OPEN      OPRANAE1,"opranaef"
.
          DISPLAY   *P64:24,"oprattaf";
          OPEN      OPRATTA1,"oprattaf"
.
          DISPLAY   *P64:24,"opraveaf";
          OPEN      OPRAVEA1,"opraveaf"
.
          DISPLAY   *P64:24,"oprcliaf";
          OPEN      OPRCLIA1,"oprcliaf"
.
          DISPLAY   *P64:24,"oprcomaf";
          OPEN      OPRCOMA1,"oprcomaf"
.
          DISPLAY   *P64:24,"oprcosaf";
          OPEN      OPRCOSA1,"oprcosaf"
.
          DISPLAY   *P64:24,"oprcouaf";
          OPEN      OPRCOUA1,"oprcouaf"
.
          DISPLAY   *P64:24,"oprcscaf";
          OPEN      OPRCSCA1,"oprcscaf"
.
          DISPLAY   *P64:24,"oprcsuaf";
          OPEN      OPRCSUA1,"oprcsuaf"
.
          DISPLAY   *P64:24,"oprctsaf";
          OPEN      OPRCTSA1,"oprctsaf"
.
          DISPLAY   *P64:24,"oprdetaf";
          OPEN      OPRDETA1,"oprdetaf"
.
          DISPLAY   *P64:24,"oprdetbf";
          OPEN      OPRDETB1,"oprdetbf"
.
          DISPLAY   *P64:24,"oprdlvaf";
          OPEN      OPRDLVA1,"oprdlvaf"
.
          DISPLAY   *P64:24,"oprdpfaf";
          OPEN      OPRDPFA1,"oprdpfaf"
.
          DISPLAY   *P64:24,"oprdphaf";
          OPEN      OPRDPHA1,"oprdphaf"
.
          DISPLAY   *P64:24,"oprpcmaf";
          OPEN      OPRPCMA1,"oprpcmaf"
.
          DISPLAY   *P64:24,"oprprfaf";
          OPEN      OPRPRFA1,"oprprfaf"
.
          DISPLAY   *P64:24,"oprqueaf";
          OPEN      OPRQUEA1,"oprqueaf"
.
          DISPLAY   *P64:24,"oprralaf";
          OPEN      OPRRALA1,"oprralaf"
.
          DISPLAY   *P64:24,"oprreqaf";
          OPEN      OPRREQA1,"oprreqaf"
.
          DISPLAY   *P64:24,"oprsemaf";
          OPEN      OPRSEMA1,"oprsemaf"
.
          DISPLAY   *P64:24,"oprsesaf";
          OPEN      OPRSESA1,"oprsesaf"
.
          DISPLAY   *P64:24,"oprsosaf";
          OPEN      OPRSOSA1,"oprsosaf"
.
          DISPLAY   *P64:24,"oprsouaf";
          OPEN      OPRSOUA1,"oprsouaf"
.
          DISPLAY   *P64:24,"oprtsmaf";
          OPEN      OPRTSMA1,"oprtsmaf"
.
          DISPLAY   *P64:24,"outbb1af";
          OPEN      OUTBB1A1,"outbb1af"
.
          DISPLAY   *P64:24,"outcliaf";
          OPEN      OUTCLIA1,"outcliaf"
.
          DISPLAY   *P64:24,"outhedaf";
          OPEN      OUTHEDA1,"outhedaf"
.
          DISPLAY   *P64:24,"outladaf";
          OPEN      OUTLADA1,"outladaf"
.
          DISPLAY   *P64:24,"outma1af";
          OPEN      OUTMA1A1,"outma1af"
.
          DISPLAY   *P64:24,"outmxsaf";
          OPEN      OUTMXSA1,"outmxsaf"
.
          DISPLAY   *P64:24,"outqueaf";
          OPEN      OUTQUEA1,"outqueaf"
.
          DISPLAY   *P64:24,"outrf1af";
          OPEN      OUTRF1A1,"outrf1af"
.
          DISPLAY   *P64:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
.         DISPLAY   *P64:24,"outrquaf";
.         OPEN      OUTRQUA1,"outrquaf"
.
          DISPLAY   *P64:24,"outsesaf";
          OPEN      OUTSESA1,"outsesaf"
.
          DISPLAY   *P64:24,"outuataf";
          OPEN      OUTUATA1,"outuataf"
.
          DISPLAY   *P64:24,"outxscaf";
          OPEN      OUTXSCA1,"outxscaf"
.
          DISPLAY   *P64:24,"arcvx1af";
.         OPEN      ARCVX1A1,"arcvx1af"
.
          MOVE      ZERO,ARCFLAG
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      ARCVX1A1,"arcvx1af"
          TRAPCLR   IO
          IF        OVRCD=0
            MOVE      ONE,ARCFLAG
          ENDIF
.
          MOVE      ZERO,MAMFLAG
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      MAMMASX1,"mammasxf"
          TRAPCLR   IO
          IF        OVRCD=0
            MOVE      ONE,MAMFLAG
          ENDIF
.
          DISPLAY   *P64:24,"mltcfnaf";
          OPEN      MLTCFNA1,"mltcfnaf"
.
          DISPLAY   *P64:24,"mlthcpaf";
          OPEN      MLTHCPA1,"mlthcpaf"
.
          DISPLAY   *P64:24,"nzppicaf";
          OPEN      NZPPICA1,"nzppicaf"
.
          DISPLAY   *P64:24,"nzprpiaf";
          OPEN      NZPRPIA1,"nzprpiaf"
.
          DISPLAY   *P64:24,"nzpspraf";
          OPEN      NZPSPRA1,"nzpspraf"
.
.         DISPLAY   *P64:24,"pataa1af";
.         OPEN      PATAUAA1,"pataa1af"
.
.         DISPLAY   *P64:24,"patad1af";
.         OPEN      PATAD1A1,"patad1af"
.
.         DISPLAY   *P64:24,"pataudt";
.         OPEN      PATAUDT,"pataudt"
.
          DISPLAY   *P64:24,"pataxeaf";
          OPEN      PATAXEA1,"pataxeaf"
.
          DISPLAY   *P64:24,"patc1sad";
          OPEN      PATC1SA1,"patc1sad"
.
          DISPLAY   *P64:24,"patc2saf";
          OPEN      PATC2SA1,"patc2saf"
.
          DISPLAY   *P64:24,"patcrcaf";
          OPEN      PATCRCA1,"patcrcaf"
.
          DISPLAY   *P64:24,"patcrdaf";
          OPEN      PATCRDA1,"patcrdaf"
.
          DISPLAY   *P64:24,"patcunof";
          OPEN      PATCUNO1,"patcunof"
.
          DISPLAY   *P64:24,"patdfeaf";
          OPEN      PATDFEA1,"patdfeaf"
.
          DISPLAY   *P64:24,"patdkiaf";
          OPEN      PATDKIA1,"patdkiaf"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patdstat";
          OPEN      PATDSTA1,"patdstat"
.
          DISPLAY   *P64:24,"patdtraf";
          OPEN      PATDTRA1,"patdtraf"
.
.         DISPLAY   *P64:24,"patex1af";
.         OPEN      PATEX1A1,"patex1af"
.
.         DISPLAY   *P64:24,"patexbaf";
.         OPEN      PATEXTB1,"patexbaf"
.
.         DISPLAY   *P64:24,"patexcaf";
.         OPEN      PATEXTC1,"patexcaf"
.
.         DISPLAY   *P64:24,"pathdoct";
.         OPEN      PATHDOC1,"pathdoct"
.
          DISPLAY   *P64:24,"patimmaf";
          OPEN      PATIMMA1,"patimmaf"
.
          DISPLAY   *P64:24,"patinpaf";
          OPEN      PATINPA1,"patinpaf"
.
.         DISPLAY   *P64:24,"patma1af";
.         OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"patnadaf";
          OPEN      PATNADA1,"patnadaf"
.
          DISPLAY   *P64:24,"patperss";
          OPEN      PATPERS1,"patperss"
.
          DISPLAY   *P64:24,"patprvaf";
          OPEN      PATPRVA1,"patprvaf"
.
.         DISPLAY   *P64:24,"patsqaaf";
.         OPEN      PATSQAA1,"patsqaaf"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN1,"pattranf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"pmsbdcaf";
          OPEN      PMSBDCA1,"pmsbdcaf"
.
          DISPLAY   *P64:24,"pmsbrqaf";
          OPEN      PMSBRQA1,"pmsbrqaf"
.
          DISPLAY   *P64:24,"pmsdltaf";
          OPEN      PMSDLTA1,"pmsdltaf"
.
          DISPLAY   *P64:24,"pmsdslaf";
          OPEN      PMSDSLA1,"pmsdslaf"
.
          DISPLAY   *P64:24,"pmsdtcaf";
          OPEN      PMSDTCA1,"pmsdtcaf"
.
          DISPLAY   *P64:24,"pmsdunaf";
          OPEN      PMSDUNA1,"pmsdunaf"
.
          DISPLAY   *P64:24,"pmsevtaf";
          OPEN      PMSEVTA1,"pmsevtaf"
.
          DISPLAY   *P64:24,"pmsfciaf";
          OPEN      PMSFCIA1,"pmsfciaf"
.
          DISPLAY   *P64:24,"pmsgpaaf";
          OPEN      PMSGPAA1,"pmsgpaaf"
.
          DISPLAY   *P64:24,"pmshcgaf";
          OPEN      PMSHCGA1,"pmshcgaf"
.
          DISPLAY   *P64:24,"pmshclaf";
          OPEN      PMSHCLA1,"pmshclaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pmshkiaf";
          OPEN      PMSHKIA1,"pmshkiaf"
.
          DISPLAY   *P64:24,"pmsmtiaf";
          OPEN      PMSMTIA1,"pmsmtiaf"
.
          DISPLAY   *P64:24,"pmsnutaf";
          OPEN      PMSNUTA1,"pmsnutaf"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsqdraf";
          OPEN      PMSQDRA1,"pmsqdraf"
.
          DISPLAY   *P64:24,"pmsqitaf";
          OPEN      PMSQITA1,"pmsqitaf"
.
          DISPLAY   *P64:24,"pmsqptaf";
          OPEN      PMSQPTA1,"pmsqptaf"
.
          DISPLAY   *P64:24,"pmsqviaf";
          OPEN      PMSQVIA1,"pmsqviaf"
.
          DISPLAY   *P64:24,"pmsrflaf";
          OPEN      PMSRFLA1,"pmsrflaf"
.
          DISPLAY   *P64:24,"pmstcoaf";
          OPEN      PMSTCOA1,"pmstcoaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"pmsworaf";
          OPEN      PMSWORA1,"pmsworaf"
.
          DISPLAY   *P64:24,"pmswx1af";
          OPEN      PMSWX1A1,"pmswx1af"
.
.         DISPLAY   *P64:24,"pribulkf";
.         OPEN      PRIBULK1,"pribulkf"
.
.         DISPLAY   *P64:24,"pridoctf";
.         OPEN      PRIDOCT1,"pridoctf"
.
.         DISPLAY   *P64:24,"pridtraf";
.         OPEN      PRIDTRA1,"pridtraf"
.
.         DISPLAY   *P64:24,"prifciaf";
.         OPEN      PRIFCIA1,"prifciaf"
.
.         DISPLAY   *P64:24,"priflsaf";
.         OPEN      PRIFLSA1,"priflsaf"
.
.         DISPLAY   *P64:24,"prifslaf";
.         OPEN      PRIFSLA1,"prifslaf"
.
.         DISPLAY   *P64:24,"prigslaf";
.         OPEN      PRIGSLA1,"prigslaf"
.
.         DISPLAY   *P64:24,"prihreff";
.         OPEN      PRIHREF1,"prihreff"
.
.         DISPLAY   *P64:24,"prihtraf";
.         OPEN      PRIHTRA1,"prihtraf"
.
.         DISPLAY   *P64:24,"priinvof";
.         OPEN      PRIINVO1,"priinvof"
.
.         DISPLAY   *P64:24,"pripceaf";
.         OPEN      PRIPCEA1,"pripceaf"
.
.         DISPLAY   *P64:24,"pripracf";
.         OPEN      PRIPRAC1,"pripracf"
.
.         DISPLAY   *P64:24,"pristatf";
.         OPEN      PRISTAT1,"pristatf"
.
.         DISPLAY   *P64:24,"pritmpaf";
.         OPEN      PRITMPA1,"pritmpaf"
.
.         DISPLAY   *P64:24,"resheaaf";
.         OPEN      RESHEAA1,"resheaaf"
.
.         DISPLAY   *P64:24,"reslnkaf";
.         OPEN      RESLNKA1,"reslnkaf"
.
.         DISPLAY   *P64:24,"resluraf";
.         OPEN      RESLURA1,"resluraf"
.
          DISPLAY   *P64:24,"watcptaf";
          OPEN      WATCPTA1,"watcptaf"
.
          DISPLAY   *P64:24,"watextaf";
          OPEN      WATEXTA1,"watextaf"
.
          DISPLAY   *P64:24,"wathisaf";
          OPEN      WATHISA1,"wathisaf"
.
          DISPLAY   *P64:24,"watqueaf";
          OPEN      WATQUEA1,"watqueaf"
.
          DISPLAY   *P64:24,"watscuaf";
          OPEN      WATSCUA1,"watscuaf"
.
          DISPLAY   *P64:24,"watseiaf";
          OPEN      WATSEIA1,"watseiaf"
.
          DISPLAY   *P64:24,"wattr1af";
          OPEN      WATTR1A1,"wattr1af"
.
          DISPLAY   *P64:24,"watudcaf";
          OPEN      WATUDCA1,"watudcaf"
.
          DISPLAY   *P64:24,"watudsaf";
          OPEN      WATUDSA1,"watudsaf"
.
          DISPLAY   *P64:24,"watunsaf";
          OPEN      WATUNSA1,"watunsaf"
.
          DISPLAY   *P64:24,"watupcaf";
          OPEN      WATUPCA1,"watupcaf"
.
          DISPLAY   *P64:24,"watvwlaf";
          OPEN      WATVWLA1,"watvwlaf"
.
          DISPLAY   *P64:24,"watwtaaf";
          OPEN      WATWTAA1,"watwtaaf"
.
          DISPLAY   *P64:24,"websecaf";
          OPEN      WEBSECA1,"websecaf"
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run fixit                               *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               GMAP0000              Called by: MAIN0000   *
.*         Get the user to input the ASCII Mapping filename, then            *
.*         open the file                                                     *
.* Returns:  FILENAME - ascii mapping file name                              *
.*           EXIT  0 = Ok to continue                                        *
.*                 1 = Error                                                 *
.*****************************************************************************
.
GMAP0000  KEYIN     *P1:11,*EF,"ASCII Mapping Filename: ",*V2LON,FILENAME
.
          PACK      FILENAME,FILENAME,SP70
          MATCH     SP70,FILENAME                 * anything entered ?
          GOTO      GMAP9100 IF EQUAL            * no
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      AMAPFILE,FILENAME            * ascii file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,GMAP8000               * no - error
.
          MOVE      ZERO,EXIT                    * yes
          GOTO      GMAP9999
.
GMAP8000  DISPLAY   *P1:24,*EL,*B,"File not found.  ";
          CALL      HITENTER
          GOTO      GMAP0000
.
GMAP9100  MOVE      ONE,EXIT
.
GMAP9999  RETURN
+
.*****************************************************************************
.*                               LOAD0000              Called by: MAIN0000   *
.*     Loop through the ASCII mapping file and load each of the codes        *
.*     to be mapped and their corresponding new codes.                       *
.*****************************************************************************
.
LOAD0000  MOVE      ZERO,ERORFLAG                * initialise error flag
.
.         Loop through the ascii map file
.
LOAD0500  READ      AMAPFILE,SEQ;OLDCODE,NEWCODE 
          GOTO      LOAD9000 IF OVER             * eof - finished
.
.         Make sure the record doesn't already exist on the temp file
.
          PACK      KEY6,OLDCODE,SP70
          CALL      RATEMP1               
          IF        OVRCD = 0
            DISPLAY   *P1:24,*EL,*B,"Key: [",*V2LON,OLDCODE:
                      *HOFF,"] already exists.  ";
            CALL      HITENTER
            MOVE      ONE,ERORFLAG               * error occurred
            GOTO      LOAD0500
          ENDIF
.
          CALL      WRTEMP1                      * write new map record
          GOTO      LOAD0500                     * get next ascii record
.
LOAD9000  IF        ERORFLAG = 1
            DISPLAY   *P1:23,*EL,*B,"Errors occurred while loading.";
          ENDIF
.
LOAD9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*       Process all the relevant files containing coded fields              *
.*****************************************************************************
.
PROC0000  CALL      IBACLOCK
          DISPLAY   *P1:15,*EF,"Started:",*V2LON,CTIMEIS,*HOFF:
                    *P1:24,"Processing ";
.
          CALL      ACOT0000                     * process aaecotaf
          CALL      ADE10000                     * process aaede1af
          CALL      ADTR0000                     * process aaedtraf
          CALL      AACT0000                     * process allactaf
          CALL      AADS0000                     * process alladsaf
          CALL      ACTM0000                     * process allctmaf
          CALL      AENC0000                     * process allencaf
          CALL      AEXT0000                     * process allextaf
          CALL      AGEH0000                     * process allgehaf
          CALL      AGRH0000                     * process allgrhaf
          CALL      AHDT0000                     * process allhdtaf
          CALL      AQUE0000                     * process allqueaf
          CALL      AREF0000                     * process allrefaf
          CALL      CEPS0000                     * process ccsepsaf
          CALL      CSTR0000                     * process ceastraf
          CALL      CTFM0000                     * process ceatfmaf
          CALL      CTGM0000                     * process ceatgmaf
          CALL      CVAM0000                     * process ceavamaf
          CALL      CBTR0000                     * process ccibtraf
          CALL      CUTL0000                     * process cciutlaf
          CALL      CVAR0000                     * process clavaraf
          CALL      HCLM0000                     * process hicclmaf
.         CALL      HPV10000                     * process hl7pv1af
          CALL      EDOC0000                     * process emrdocaf
          CALL      EEXP0000                     * process emrexpaf
          CALL      EHIS0000                     * process emrhisaf
          CALL      EINC0000                     * process emrincaf
          CALL      EISM0000                     * process emrismaf
          CALL      EQUE0000                     * process emrqueaf
          CALL      EVCD0000                     * process emrvcdaf
          CALL      EVIS0000                     * process emrvisaf
          CALL      EACC0000                     * process eocaccaf
.         CALL      LBOB0000                     * process legbobaf
.         CALL      LCLI0000                     * process legcliaf
.         CALL      LDEA0000                     * process legdeaaf
.         CALL      LDOC0000                     * process legdocaf
.         CALL      LDTR0000                     * process legdtraf
.         CALL      LMAA0000                     * process legmasaf
.         CALL      LMIS0000                     * process legmissf
.         CALL      LTRN0000                     * process legtrnaf
.         CALL      LVIS0000                     * process legvisaf
          CALL      MDLS0000                     * process mehdlsaf
          CALL      MHLS0000                     * process mehhlsaf
          CALL      MHON0000                     * process mehhonaf
          IF        PTCNHDPS = 1
            CALL      MPAT0000                   * process mehpataf
            CALL      MPCO0000                   * process mehpcoaf
            CALL      MPLS0000                   * process mehplsaf
          ENDIF
          CALL      MDSR0000                     * process mrtdsraf
          CALL      MPDS0000                     * process mrtpdsaf
          CALL      MREX0000                     * process mrtrexaf
          CALL      BQUE0000                     * process bokqueaf
          CALL      BRC10000                     * process bokrc1af
          CALL      BRX10000                     * process bokrx1af
          CALL      OANE0000                     * process opraneaf
          CALL      OATT0000                     * process oprattaf
          CALL      OAVE0000                     * process opraveaf
          CALL      OCLI0000                     * process oprcliaf
          CALL      OCOM0000                     * process oprcomaf
          CALL      OCOS0000                     * process oprcosaf
          CALL      OCOU0000                     * process oprcouaf
          CALL      OCSC0000                     * process oprcscaf
          CALL      OCSU0000                     * process oprcsuaf
          CALL      OCTS0000                     * process oprctsaf
          CALL      ODEA0000                     * process oprdetaf
          CALL      ODEB0000                     * process oprdetbf
          CALL      ODLV0000                     * process oprdlvaf
          CALL      ODPF0000                     * process oprdpfaf
          CALL      ODPH0000                     * process oprdphaf
          CALL      OPCM0000                     * process oprpcmaf
          CALL      OPRF0000                     * process oprprfaf
          CALL      OQUE0000                     * process oprqueaf
          CALL      ORAL0000                     * process oprralaf
          CALL      OREQ0000                     * process oprreqaf
          CALL      OSEM0000                     * process oprsemaf
          CALL      OSES0000                     * process oprsesaf
          CALL      OSOS0000                     * process oprsosaf
          CALL      OSOU0000                     * process oprsouaf
          CALL      OTSM0000                     * process oprtsmaf
          CALL      MMAS0000                     * process mammasxf
.         CALL      OBB10000                     * process outbb1af
.         CALL      OCLI0000                     * process outcliaf
.         CALL      OHED0000                     * process outhedaf
.         CALL      OLAD0000                     * process outladaf
.         CALL      OMA10000                     * process outma1af
.         CALL      OMXS0000                     * process outmxsaf
          CALL      OUTQ0000                     * process outqueaf
          CALL      ORF10000                     * process outrf1af
.         CALL      ORQU0000                     * process outrquaf
.         CALL      OSES0000                     * process outsesaf
.         CALL      OUAT0000                     * process outuataf
.         CALL      OXSC0000                     * process outxscaf
          CALL      POUT0000
          CALL      AVX10000                     * process arcvx1af
          CALL      MCFN0000                     * process mltcfnaf
          CALL      MHCP0000                     * process mlthcpaf
          CALL      NPIC0000                     * process nzppicaf
          CALL      NRPI0000                     * process nzprpiaf
          CALL      NSPR0000                     * process nzpspraf
.         CALL      PAA10000                     * process pataa1af
.         CALL      PAD10000                     * process patad1af
.         CALL      PAUT0000                     * process pataudt
          CALL      PAXE0000                     * process pataxeaf
          CALL      PC1S0000                     * process patc1saf
          CALL      PC2S0000                     * process patc2saf
          CALL      PCRC0000                     * process patcrcaf
          CALL      PCRD0000                     * process patcrdaf
          CALL      PCUN0000                     * process patcunaf
          CALL      PDFE0000                     * process patdfeaf
          CALL      PDKI0000                     * process patdkiaf
          CALL      PDO10000                     * process patdo1af
          CALL      PDST0000                     * process patdstaf
          CALL      PDTR0000                     * process patdtraf
.         CALL      PHDO0000                     * process pathdoaf
          CALL      PIMM0000                     * process patimmaf
          CALL      PINP0000                     * process patinpaf
.         CALL      PMA10000                     * process patma1af
          CALL      PMI10000                     * process patmi1af
          CALL      PNAD0000                     * process patnadaf
          CALL      PPER0000                     * process patperss
          CALL      PPRV0000                     * process patprvaf
.         CALL      PSQA0000                     * process patsqaaf
          CALL      PTRN0000                     * process pattranf
          CALL      PVIS0000                     * process patvisaf
          CALL      PBDC0000                     * process pmsbdcaf
          CALL      PBRQ0000                     * process pmsbrqaf
          CALL      PDLT0000                     * process pmsdltaf
          CALL      PDSL0000                     * process pmsdslaf
          CALL      PDTC0000                     * process pmsdtcaf
          CALL      PDUN0000                     * process pmsdunaf
          CALL      PEVT0000                     * process pmsevtaf
          CALL      PFCI0000                     * process pmsfciaf
          CALL      PGPA0000                     * process pmsgpaaf
          CALL      PHCG0000                     * process pmshcgaf
          CALL      PHCL0000                     * process pmshclaf
          CALL      PHCP0000                     * process pmshcpaf
          CALL      PHKI0000                     * process pmshkiaf
          CALL      PMTE0000                     * process pmsmteaf
          CALL      PMTI0000                     * process pmsmtiaf
          CALL      PNUT0000                     * process pmsnutaf
          CALL      PPX20000                     * process pmspx2af
          CALL      PQDR0000                     * process pmsqdraf
          CALL      PQIT0000                     * process pmsqitaf
.         CALL      PQPT0000                     * process pmsqptaf
.         CALL      PQVI0000                     * process pmsqviaf
          CALL      PRFL0000                     * process pmsrflaf
          CALL      PTCO0000                     * process pmstcoaf
          CALL      PVX10000                     * process pmsvx1af
          CALL      PWOR0000                     * process pmsworaf
          CALL      PWX10000                     * process pmswx1af
.         CALL      PBUL0000                     * process pribulkf
.         CALL      PDOC0000                     * process pridoctf
.         CALL      PRDT0000                     * process pridtraf
.         CALL      PRIF0000                     * process prifciaf
.         CALL      PFLS0000                     * process priflsaf
.         CALL      PFSL0000                     * process prifslaf
.         CALL      PGSL0000                     * process prigslaf
.         CALL      PHRE0000                     * process prihreaf
.         CALL      PHTR0000                     * process prihtraf
.         CALL      PINV0000                     * process priinvof
.         CALL      PPCE0000                     * process pripceaf
.         CALL      PPRA0000                     * process pripracf
.         CALL      PSTA0000                     * process pristatf
.         CALL      PTMP0000                     * process pritmpaf
.         CALL      RHEA0000                     * process resheaaf
.         CALL      RLUR0000                     * process resluraf
          CALL      WCPT0000                     * process watcptaf
          CALL      WEXT0000                     * process watextaf
          CALL      WHIS0000                     * process wathisaf
          CALL      WQUE0000                     * process watqueaf
          CALL      WSCU0000                     * process watscuaf
          CALL      WSEI0000                     * process watseiaf
          CALL      WTR10000                     * process wattr1af
          CALL      WUDC0000                     * process watudcaf
          CALL      WUDS0000                     * process watudsaf
          CALL      WUNS0000                     * process watunsaf
          CALL      WUPC0000                     * process watupcaf
          CALL      WVWL0000                     * process watvwlaf
          CALL      WWTA0000                     * process watwtaaf
          CALL      WSEC0000                     * process websecaf
.
          CALL      IBACLOCK
          DISPLAY   *P1:16,*EF,"Stopped:",*V2LON,CTIMEIS,*HOFF:
                    *P1:24,"Fixit completed.  ";
          CALL      HITENTER
.
PROC9999  RETURN
+
.*****************************************************************************
.*                               POUT0000              Called by: PROC0000   *
.*       Process all the site dependent outpatient files                     *
.*****************************************************************************
.
.         Loop through the site file to get each site prefix
.
POUT0000  DISPLAY   *P1:23,*EL,"O/P Site:";
.
          MOVE      SP70,KEY6
          CALL      RDSSITA1                     * position at start of file
POUT0500  CALL      RDKSITA1                     * read next record
          BRANCH    OVRCD,POUT9000               * eof - finished
.
          DISPLAY   *P11:23,*EL,*V2LON,OSTSITE;
.
.         CALL      OBB10000                     * process outbb1af
          CALL      OUTC0000                     * process outcliaf
          CALL      OHED0000                     * process outhedaf
          CALL      OLAD0000                     * process outladaf
          CALL      OMA10000                     * process outma1af
          CALL      OMXS0000                     * process outmxsaf
.         CALL      OUTQ0000                     * process outqueaf
.         CALL      ORF10000                     * process outrf1af
.         CALL      ORQU0000                     * process outrquaf
          CALL      OUTS0000                     * process outsesaf
          CALL      OUAT0000                     * process outuataf
          CALL      OXSC0000                     * process outxscaf
.
          GOTO      POUT0500                     * get next site
.
POUT9000  DISPLAY   *P1:23,*EL;
.
POUT9999  RETURN
+
.*****************************************************************************
.*                              OBB10000              Called by: PROC0000    *
.*       Loop through outbb1af and fix any relevant doctor fields            *
.*****************************************************************************
.         
OBB10000  DISPLAY   *P12:24,*EL,OSTFILE,"bb1af:";
          PACK      CFNAME,OSTFILE,FILBB1A1      
          MOVE      ZERO,OVRCD                   
          TRAP      OVERCOND IF IO               
          OPEN      OUTBB1A1,CFNAME              * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,OBB19999               * no - get next site
.         
.         Process all the records for this site
.         
          MOVE      SP70,KEY8
          CALL      RDSBOKB1                     * position at start of file
OBB10500  CALL      RDKBOKB1                     * read next record 
          BRANCH    OVRCD,OBB19900               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OBAOUTNO  
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OBADOCT
.
          PACK      CODEDFLD,OBADOCT,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OBB11000                * no
.
          MOVE      NEWCODE,OBADOCT              * yes - load new code
.
.         Check OTBBRFGP
.
OBB11000  PACK      CODEDFLD,OTBBRFGP,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OBB12000                * no
.
          MOVE      NEWCODE,OTBBRFGP             * yes - load new code
.
.         Check OTBBADCS
.
OBB12000  PACK      CODEDFLD,OTBBADCS,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OBB19000                * no
.
          MOVE      NEWCODE,OTBBADCS             * yes - load new code
.
OBB19000  BRANCH    UPDTFLAG,OBB10500            * no mappings
          CALL      UPBOKB1
          GOTO      OBB10500                     * get next record
.
OBB19900  CLOSE     OUTBB1A1
.
OBB19999  RETURN
+
.*****************************************************************************
.*                              OUTC0000              Called by: PROC0000    *
.*       Loop through outcliaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
OUTC0000  DISPLAY   *P12:24,*EL,OSTFILE,"cliaf:";
          PACK      CFNAME,OSTFILE,FILCLIA1      
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               
          OPEN      OUTCLIA1,CFNAME              * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,OUTC9999               * no - get next site
.         
.         Process all the records for this site  
.         
          MOVE      SP70,KEY20
          CALL      RDSCLIA1                     * position at start of file
OUTC0500  CALL      RDKCLIA1                     * read next record
          BRANCH    OVRCD,OUTC9900               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OCASITE,OCACLIN,OCADATE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OCADOCT
.
          PACK      CODEDFLD,OCADOCT,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OUTC1000                * no
.
          MOVE      NEWCODE,OCADOCT              * yes - load new code
.
.         Check OCACCONS
.
OUTC1000  PACK      CODEDFLD,OCACCONS,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OUTC9000                * no
.
          MOVE      NEWCODE,OCACCONS             * yes - load new code
.
OUTC9000  BRANCH    UPDTFLAG,OUTC0500            * no mappings
          CALL      UPCLIA1
          GOTO      OUTC0500                     * get next record
.
OUTC9900  CLOSE     OUTCLIA1
.
OUTC9999  RETURN
+
.*****************************************************************************
.*                              OHED0000              Called by: PROC0000    *
.*       Loop through outhedaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
OHED0000  DISPLAY   *P12:24,*EL,OSTFILE,"hedaf:";
          PACK      CFNAME,OSTFILE,FILHEDA1      
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               
          OPEN      OUTHEDA1,CFNAME              * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,OHED9999               * no - get next site
.
.         Process all the records for this site
.
          MOVE      SP70,KEY28
          CALL      RSOTHED1                     * position at start of file
OHED0500  CALL      RKOTHED1                     * read next record
          BRANCH    OVRCD,OHED9900               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OTHESITE,OTHECLIN,OTHEWDAY,OTHESTRT:
                                       OTHESHNO,OTHESDAT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OTHEDEFD
.
          PACK      CODEDFLD,OTHEDEFD,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OHED9000                * no
.
          MOVE      NEWCODE,OTHEDEFD              * yes - load new code
.
OHED9000  BRANCH    UPDTFLAG,OHED0500            * no mappings
          CALL      UPOTHED1
          GOTO      OHED0500                     * get next record
.
OHED9900  CLOSE     OUTHEDA1
.
OHED9999  RETURN
+
.*****************************************************************************
.*                              OLAD0000              Called by: PROC0000    *
.*       Loop through outladaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OLAD0000  DISPLAY   *P12:24,*EL,OSTFILE,"ladaf:";
          PACK      CFNAME,OSTFILE,FILLADA1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTLADA1,CFNAME              * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,OLAD9999               * no - get next site
.
.         Process all the records for this site
.
          MOVE      SP30,KEY25
          CALL      RSOTLAD1                     * position at start of file
OLAD0500  CALL      RKOTLAD1                     * read next record
          BRANCH    OVRCD,OLAD9900               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OTLASEID,OTLAPCLS,OTLAOUTN,OTLACLID:
                                       OTLACLTY
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OTLADOCT
.
          PACK      CODEDFLD,OTLADOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OLAD9000                * no
.
          MOVE      NEWCODE,OTLADOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OLAD9000  BRANCH    UPDTFLAG,OLAD0500            * no mappings
          CALL      UPOTLAD1
          GOTO      OLAD0500                     * get next record
.
OLAD9900  CLOSE     OUTLADA1
.
OLAD9999  RETURN
+
.*****************************************************************************
.*                              OMA10000              Called by: PROC0000    *
.*       Loop through outma1af and fix any relevant doctor fields            *
.*****************************************************************************
.
OMA10000  DISPLAY   *P12:24,*EL,OSTFILE,"ma1af:";
          PACK      CFNAME,OSTFILE,FILMA1A1      
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTMA1A1,CFNAME              * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,OMA19999               * no - get next site
.
.         Process all the records for this site
.
          MOVE      SP70,KEY18
          CALL      RDSMASA1                     * position at start of file
OMA10500  CALL      RDKMASA1                     * read next record
          BRANCH    OVRCD,OMA19900               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OMASITE,OMACLIN,OMATYP,DOMADAY,OMASTART
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check  OTMADEFD
.
          PACK      CODEDFLD,OTMADEFD,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OMA19000                * no
.
          MOVE      NEWCODE,OTMADEFD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OMA19000  BRANCH    UPDTFLAG,OMA10500            * no mappings
          CALL      UPMASA1
          GOTO      OMA10500                     * get next record
.
OMA19900  CLOSE     OUTMA1A1
.
OMA19999  RETURN
+
.*****************************************************************************
.*                              OMXS0000              Called by: PROC0000    *
.*       Loop through outmxsaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OMXS0000  DISPLAY   *P12:24,*EL,OSTFILE,"mxsaf:";
          PACK      CFNAME,OSTFILE,FILMXSA1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTMXSA1,CFNAME              * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,OMXS9999               * no - get next site
.
.         Process all the records for this site
.
          MOVE      SP70,KEY20
          CALL      RSOTMXS1                     * position at start of file
OMXS0500  CALL      RKOTMXS1                     * read next record
          BRANCH    OVRCD,OMXS9900               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OTXSSITE,OTXSCLIN,OTXSDAY,OTXSTIME:
                                       OTXSCNT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OTXSDOCT
.
          PACK      CODEDFLD,OTXSDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OMXS9000                * no
.
          MOVE      NEWCODE,OTXSDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OMXS9000  BRANCH    UPDTFLAG,OMXS0500            * no mappings
          CALL      UPOTMXS1
          GOTO      OMXS0500                     * get next record
.
OMXS9900  CLOSE     OUTMXSA1
.
OMXS9999  RETURN
+
.*****************************************************************************
.*                              OUTQ0000              Called by: PROC0000    *
.*       Loop through outqueaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OUTQ0000  DISPLAY   *P12:24,*EL,"outqueaf:";
          MOVE      SP70,KEY20
          CALL      RSOTQUE1                     * position at start of file
OUTQ0500  CALL      RKOTQUE1                     * read next record
          BRANCH    OVRCD,OUTQ9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DOTQUMES
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OBADOCT
.
          PACK      CODEDFLD,OBADOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OUTQ1000                * no
.
          MOVE      NEWCODE,OBADOCT             * yes - load new code
.
.         Check OTBBADCS
.
OUTQ1000  PACK      CODEDFLD,OTBBADCS,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OUTQ9000                * no
.
          MOVE      NEWCODE,OTBBADCS             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OUTQ9000  BRANCH    UPDTFLAG,OUTQ0500            * no mappings
          CALL      UPOTQUE1
.
          GOTO      OUTQ0500                     * get next record
.
OUTQ9999  RETURN
+
.*****************************************************************************
.*                              ORF10000              Called by: PROC0000    *
.*       Loop through outrf1af and fix any relevant doctor fields            *
.*****************************************************************************
.         
ORF10000  DISPLAY   *P12:24,*EL,"outrf1af:";     
          MOVE      SP70,KEY8
          CALL      RSOTRFL1                     * position at start of file
ORF10500  CALL      RKOTRFL1                     * read next record
          BRANCH    OVRCD,ORF19999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OTRLOUTN  
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OTRLRDOC
.
          PACK      CODEDFLD,OTRLRDOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ORF11000                * no
.
          MOVE      NEWCODE,OTRLRDOC             * yes - load new code
.
.         Check OTRLRFGP
.
ORF11000  PACK      CODEDFLD,OTRLRFGP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ORF12000                * no
.
          MOVE      NEWCODE,OTRLRFGP             * yes - load new code
.
.         Check OTRLRHCP
.
ORF12000  PACK      CODEDFLD,OTRLRHCP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ORF19000                * no
.
          MOVE      NEWCODE,OTRLRHCP             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
ORF19000  BRANCH    UPDTFLAG,ORF10500            * no mappings
          CALL      UPOTRFL1
.
          GOTO      ORF10500                     * get next record
.
ORF19999  RETURN
+
.*****************************************************************************
.*                              ORQU0000              Called by: PROC0000    *
.*       Loop through outrquaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
.ORQU0000  DISPLAY   *P12:24,*EL,"outrquaf:";     
.          MOVE      SP70,KEY20
.          CALL      RSOTRQU1                     * position at start of file
.ORQU0500  CALL      RKOTRQU1                     * read next record
.          BRANCH    OVRCD,ORQU9999               * eof - finished
.
.          DISPLAY   *P22:24,*EL,*V2LON,DOTRQMES  
.          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check OTRLRDOC
.         
.          PACK      CODEDFLD,OTRLRDOC,SP10       * load coded field
.          CALL      CMAP0000                     * mapping required ?
.          BRANCH    EXIT,ORQ11000                * no
.
.          MOVE      NEWCODE,OTRLRDOC             * yes - load new code
.
.         Check OTRLCONS
.
.ORQ11000  PACK      CODEDFLD,OTRLCONS,SP10       * load coded field
.          CALL      CMAP0000                     * mapping required ?
.          BRANCH    EXIT,ORQU2000                * no
.
.          MOVE      NEWCODE,OTRLCONS             * yes - load new code
.
.         Check OTRLRFGP
.
.ORQU2000  PACK      CODEDFLD,OTRLRFGP,SP10       * load coded field
.          CALL      CMAP0000                     * mapping required ?
.          BRANCH    EXIT,ORQU3000                * no
.
.          MOVE      NEWCODE,OTRLRFGP             * yes - load new code
.
.         Check OTRLRHCP
.
.ORQU3000  PACK      CODEDFLD,OTRLRHCP,SP10       * load coded field
.          CALL      CMAP0000                     * mapping required ?
.          BRANCH    EXIT,ORQU9000                * no
.
.          MOVE      NEWCODE,OTRLRHCP             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
.ORQU9000  BRANCH    UPDTFLAG,ORQU0500            * no mappings
.          CALL      UPOTRQU1
.
.          GOTO      ORQU0500                     * get next record
.
.ORQU9999  RETURN
+
.*****************************************************************************
.*                              OUTS0000              Called by: PROC0000    *
.*       Loop through outsesaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OUTS0000  DISPLAY   *P12:24,*EL,OSTFILE,"sesaf:";
          PACK      CFNAME,OSTFILE,FILSESA1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTSESA1,CFNAME              * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,OSES9999               * no - get next site
.         
.         Process all the records for this site
.         
          MOVE      SP70,KEY25
          CALL      RDSSESA1                     * position at start of file
OUTS0500  CALL      RDKSESA1                     * read next record
          BRANCH    OVRCD,OUTS9900               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OSESITE,OSECLIN,OSEDATE,OSESTRT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OSESGHCP
.
          PACK      CODEDFLD,OSESGHCP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OUTS9000                * no
.
          MOVE      NEWCODE,OSESGHCP             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OUTS9000  BRANCH    UPDTFLAG,OUTS0500            * no mappings
          CALL      UPSESA1
          GOTO      OUTS0500                     * get next record
.
OUTS9900  CLOSE     OUTSESA1
.
OUTS9999  RETURN
+
.*****************************************************************************
.*                              OUAT0000              Called by: PROC0000    *
.*       Loop through outuataf and fix any relevant coded fields             *
.*****************************************************************************
.
OUAT0000  DISPLAY   *P12:24,*EL,OSTFILE,"uataf:";
          PACK      CFNAME,OSTFILE,FILUATA1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTUATA1,CFNAME              * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,OUAT9999               * no - get next site
.
.         Process all the records for this site
.
          MOVE      SP20,KEY19
          CALL      RSOPUAT1                     * position at start of file
OUAT0500  CALL      RKOPUAT1                     * read next record
          BRANCH    OVRCD,OUAT9900               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPUAOUTN,OPUAURNO,OPUAUNIQ
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPUADOCT
.
          PACK      CODEDFLD,OPUADOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OUAT9000                * no
.
          MOVE      NEWCODE,OPUADOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OUAT9000  BRANCH    UPDTFLAG,OUAT0500            * no mappings
          CALL      UPOPUAT1
          GOTO      OUAT0500                     * get next record
.
OUAT9900  CLOSE     OUTUATA1
.
OUAT9999  RETURN
+
.*****************************************************************************
.*                              OXSC0000              Called by: PROC0000    *
.*       Loop through outxscaf and fix any relevant coded fields             *
.*****************************************************************************
.
OXSC0000  DISPLAY   *P12:24,*EL,OSTFILE,"xscaf:";
          PACK      CFNAME,OSTFILE,FILXSCA1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTXSCA1,CFNAME              * file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,OXSC9999               * no - get next site
.
.         Process all the records for this site
.
          MOVE      SP20,KEY8
          CALL      RSOTXSC1                     * position at start of file
OXSC0500  CALL      RKOTXSC1                     * read next record
          BRANCH    OVRCD,OXSC9900               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DOTXSOUT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OTXSDOC1
.
          PACK      CODEDFLD,OTXSDOC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OXSC1000                * no
.
          MOVE      NEWCODE,OTXSDOC1             * yes - load new code
.
.         Check OTXSDOC2
.
OXSC1000  PACK      CODEDFLD,OTXSDOC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OXSC2000                * no
.
          MOVE      NEWCODE,OTXSDOC2             * yes - load new code
.
.         Check OTXSDOC3
.
OXSC2000  PACK      CODEDFLD,OTXSDOC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OXSC9000                * no
.
          MOVE      NEWCODE,OTXSDOC3             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OXSC9000  BRANCH    UPDTFLAG,OXSC0500            * no mappings
          CALL      UPOTXSC1
          GOTO      OXSC0500                     * get next record
.
OXSC9900  CLOSE     OUTXSCA1
.
OXSC9999  RETURN
+

.*****************************************************************************
.*                               ACOT0000              Called by: PROC0000   *
.*       Loop through aaecotaf and fix any relevant doctor fields            *
.*****************************************************************************
.
ACOT0000  DISPLAY   *P12:24,*EL,"aaecotaf:";
          MOVE      SP70,KEY13
          CALL      RSAECOT1                     * position at start of file
ACOT0500  CALL      RKAECOT1                     * read next record
          BRANCH    OVRCD,ACOT9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,AECTDATE," ",AECTDATE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check AECTCONS
.
          PACK      CODEDFLD,AECTCONS,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ACOT9000                * no 
.
          MOVE      NEWCODE,AECTCONS             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
ACOT9000  BRANCH    UPDTFLAG,ACOT0500            * no mappings
          CALL      UPAECOT1
          GOTO      ACOT0500                     * get next record
.
ACOT9999  RETURN
+
.*****************************************************************************
.*                               ADE10000              Called by: PROC0000   *
.*       Loop through aaede1af and fix any relevant doctor fields            *
.*****************************************************************************
.
ADE10000  DISPLAY   *P12:24,*EL,"aaede1af:";
          MOVE      SP70,KEY8
          CALL      RDSDETA1                     * position at start of file
ADE10500  CALL      RDKDETA1                     * read next record
          BRANCH    OVRCD,ADE19999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DADANUMB
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ADADOCT
.
          PACK      CODEDFLD,ADADOCT,SP10        * load doctor field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ADE11000                * no 
.
          MOVE      NEWCODE,ADADOCT              * yes - load new doctor
.
.         Check AEDACONS
.
ADE11000  PACK      CODEDFLD,AEDACONS,SP10       * load doctor field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ADE12000                * no 
.
          MOVE      NEWCODE,AEDACONS             * yes - load new doctor
.
.         Check AEDARDOC
.
ADE12000  PACK      CODEDFLD,AEDARDOC,SP10       * load doctor field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ADE19000                * no
.
          MOVE      NEWCODE,AEDARDOC             * yes - load new doctor
.
.         Check if there were any mappings and if so, update the record
.
ADE19000  BRANCH    UPDTFLAG,ADE10500            * no mappings
          CALL      UPDETA1 
          GOTO      ADE10500                     * get next record
.
ADE19999  RETURN
+
.*****************************************************************************
.*                              ADTR0000              Called by: PROC0000    *
.*       Loop through aaedtraf and fix any relevant doctor fields            *
.*****************************************************************************
.
ADTR0000  DISPLAY   *P12:24,*EL,"aaedtraf:";
          MOVE      SP70,KEY22
          CALL      RDSDTRE1                     * position at start of file
ADTR0500  CALL      RDKDTRE1                     * read next record
          BRANCH    OVRCD,ADTR9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DATNUMB,ATINVNO,DATTRANS
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ATDTEDAD
.
          PACK      CODEDFLD,ATDTEDAD,SP70       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ADTR9000                * no 
.
          MOVE      NEWCODE,ATDTEDAD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
ADTR9000  BRANCH    UPDTFLAG,ADTR0500            * no mappings
          CALL      UPDTRE1
.
          GOTO      ADTR0500                     * get next record
.
ADTR9999  RETURN
+
.*****************************************************************************
.*                              AACT0000              Called by: PROC0000    *
.*       Loop through allactaf and fix any relevant doctor fields            *
.*****************************************************************************
.
AACT0000  DISPLAY   *P12:24,*EL,"allactaf:";
          MOVE      SP70,KEY29
AACT0200  CALL      RSALACT1                     * position at start of file
AACT0500  CALL      RKALACT1                     * read next record
          BRANCH    OVRCD,AACT9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,ALACDEPT,ALACCODT,ALACCOTM,ALACDOCT
          PACK      SAVKEY29,ALACDEPT,ALACCODT,ALACCOTM,ALACDOCT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ALACDOCT
.         
          PACK      CODEDFLD,ALACDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AACT1000                * no
.
          MOVE      NEWCODE,ALACDOCT             * yes - load new code
.
.         Check ALACUHC1
.
AACT1000  PACK      CODEDFLD,ALACUHC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AACT2000                * no 
.
          MOVE      NEWCODE,ALACUHC1             * yes - load new code
.
.         Check ALACUHC2
.
AACT2000  PACK      CODEDFLD,ALACUHC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AACT3000                * no
.
          MOVE      NEWCODE,ALACUHC2             * yes - load new code
.
.         Check ALACUHC3
.
AACT3000  PACK      CODEDFLD,ALACUHC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AACT4000                * no
.
          MOVE      NEWCODE,ALACUHC3             * yes - load new code
.
.         Check ALACUHC4
.
AACT4000  PACK      CODEDFLD,ALACUHC4,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AACT9000                * no
.         
          MOVE      NEWCODE,ALACUHC4             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
AACT9000  BRANCH    UPDTFLAG,AACT0500            * no mappings
          CALL      UPALACT1
.
          MOVE      SAVKEY29,KEY29          
          GOTO      AACT0200                     * get next record
.
AACT9999  RETURN
+
.*****************************************************************************
.*                              AADS0000              Called by: PROC0000    *
.*       Loop through alladsaf and fix any relevant doctor fields            *
.*****************************************************************************
.
AADS0000  DISPLAY   *P12:24,*EL,"alladsaf:";
          MOVE      SP70,KEY16
          CALL      RSALADS1                     * position at start of file
AADS0500  CALL      RKALADS1                     * read next record
          BRANCH    OVRCD,AADS9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,ALADREFN,ALADANUM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ALADHCP1
.
          PACK      CODEDFLD,ALADHCP1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AADS1000                * no 
.
          MOVE      NEWCODE,ALADHCP1             * yes - load new code
.
.         Check ALADHCP2
.
AADS1000  PACK      CODEDFLD,ALADHCP2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AADS2000                * no 
.
          MOVE      NEWCODE,ALADHCP2             * yes - load new code
.
.         Check ALADHCP3        
.
AADS2000  PACK      CODEDFLD,ALADHCP3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AADS3000                * no
.
          MOVE      NEWCODE,ALADHCP3             * yes - load new code
.
.         Check ALADHCP4
.
AADS3000  PACK      CODEDFLD,ALADHCP4,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AADS4000                * no
.
          MOVE      NEWCODE,ALADHCP4             * yes - load new code
.
.         Check ALADHCP5
.         
AADS4000  PACK      CODEDFLD,ALADHCP5,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AADS5000                * no
.
          MOVE      NEWCODE,ALADHCP5             * yes - load new code
.
.         Check ALADHCP6
.         
AADS5000  PACK      CODEDFLD,ALADHCP6,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AADS6000                * no
.
          MOVE      NEWCODE,ALADHCP6             * yes - load new code
.
.         Check ALADHCP7
.
AADS6000  PACK      CODEDFLD,ALADHCP7,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AADS7000                * no
.
          MOVE      NEWCODE,ALADHCP7             * yes - load new code
.
.         Check ALADHCP8
.         
AADS7000  PACK      CODEDFLD,ALADHCP8,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AADS8000                * no
.
          MOVE      NEWCODE,ALADHCP8             * yes - load new code
.
.         Check ALADHCP9
.         
AADS8000  PACK      CODEDFLD,ALADHCP9,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AADS9000                * no
.
          MOVE      NEWCODE,ALADHCP9             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
AADS9000  BRANCH    UPDTFLAG,AADS0500            * no mappings
          CALL      UPALADS1
          GOTO      AADS0500                     * get next record
.
AADS9999  RETURN
+
.*****************************************************************************
.*                              ACTM0000              Called by: PROC0000    *
.*       Loop through allctmaf and fix any relevant doctor fields            *
.*****************************************************************************
.
ACTM0000  DISPLAY   *P12:24,*EL,"allactaf:";
          MOVE      SP30,KEY20
ACTM0200  CALL      RSALCTM1                     * position at start of file
ACTM0500  CALL      RKALCTM1                     * read next record
          BRANCH    OVRCD,ACTM9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,ALCTTEAM,ALCTHCPC
          PACK      SAVKEY20,ALCTTEAM,ALCTHCPC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ALCTHCPC
.
          PACK      CODEDFLD,ALCTHCPC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ACTM9000                * no 
.
          MOVE      NEWCODE,ALCTHCPC             * yes - load new code
.
ACTM9000  BRANCH    UPDTFLAG,ACTM0500            * no mappings
          CALL      UPALCTM1
.
          MOVE      SAVKEY20,KEY20
          GOTO      ACTM0200                     * get next record
.
ACTM9999  RETURN
+
.*****************************************************************************
.*                              AENC0000              Called by: PROC0000    *
.*       Loop through allencaf and fix any relevant doctor fields            *
.*****************************************************************************
.
AENC0000  DISPLAY   *P12:24,*EL,"allencaf:";
          MOVE      SP30,KEY16
          CALL      RSALENC1                     * position at start of file
AENC0500  CALL      RKALENC1                     * read next record
          BRANCH    OVRCD,AENC9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,ALENVISN,ALENENCT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ALENHCP
.
          PACK      CODEDFLD,ALENHCP,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AENC1000                * no 
.
          MOVE      NEWCODE,ALENHCP              * yes - load new code
.
.         Check ALENUHC1
.
AENC1000  PACK      CODEDFLD,ALENUHC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AENC2000                * no 
.
          MOVE      NEWCODE,ALENUHC1             * yes - load new code
.
.         Check ALENUHC2
.
AENC2000  PACK      CODEDFLD,ALENUHC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AENC3000                * no 
.
          MOVE      NEWCODE,ALENUHC2             * yes - load new code
.
.         Check ALENUHC3
.
AENC3000  PACK      CODEDFLD,ALENUHC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AENC4000                * no 
.
          MOVE      NEWCODE,ALENUHC3             * yes - load new code
.
.         Check ALENUHC4
.
AENC4000  PACK      CODEDFLD,ALENUHC4,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AENC9000                * no
.
          MOVE      NEWCODE,ALENUHC4             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
AENC9000  BRANCH    UPDTFLAG,AENC0500            * no mappings
          CALL      UPALENC1
.
          MOVE      SAVKEY16,KEY16
          GOTO      AENC0500                     * get next record
.
AENC9999  RETURN
+
.*****************************************************************************
.*                              AEXT0000              Called by: PROC0000    *
.*       Loop through allextef and fix any relevant doctor fields            *
.*****************************************************************************
.
AEXT0000  DISPLAY   *P12:24,*EL,"allextef:";
          MOVE      SP30,KEY16
          CALL      RSALEXT1                     * position at start of file
AEXT0500  CALL      RKALEXT1                     * read next record
          BRANCH    OVRCD,AEXT9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,ALEXVISN,ALEXEXTR
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ALEXAHCP
.
          PACK      CODEDFLD,ALEXAHCP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AEXT1000                * no 
.
          MOVE      NEWCODE,ALEXAHCP             * yes - load new code
.
.         Check ALEXHCPC
.
AEXT1000  PACK      CODEDFLD,ALEXHCPC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AEXT9000                * no 
.
          MOVE      NEWCODE,ALEXHCPC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
AEXT9000  BRANCH    UPDTFLAG,AEXT0500            * no mappings
          CALL      UPALEXT1
.
          MOVE      SAVKEY16,KEY16
          GOTO      AEXT0500                     * get next record
.
AEXT9999  RETURN
+
.*****************************************************************************
.*                              AGEH0000              Called by: PROC0000    *
.*       Loop through allgehaf and fix any relevant doctor fields            *
.*****************************************************************************
.
AGEH0000  DISPLAY   *P12:24,*EL,"allgehaf:";
          MOVE      SP30,KEY21
AGEH0200  CALL      RSALGEH1                     * position at start of file
AGEH0500  CALL      RKALGEH1                     * read next record
          BRANCH    OVRCD,AGEH9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,ALGCCONT,ALGCHCPC,ALGCSPEC
          PACK      SAVKEY21,ALGCCONT,ALGCHCPC,ALGCSPEC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ALGCHCPC
.
          PACK      CODEDFLD,ALGCHCPC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AGEH9000                * no 
.
          MOVE      NEWCODE,ALGCHCPC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
AGEH9000  BRANCH    UPDTFLAG,AGEH0500            * no mappings
          CALL      UPALGEH1
.
          MOVE      SAVKEY21,KEY21
          GOTO      AGEH0200                     * get next record
.
AGEH9999  RETURN
+
.*****************************************************************************
.*                              AGRH0000              Called by: PROC0000    *
.*       Loop through allgrhaf and fix any relevant doctor fields            *
.*****************************************************************************
.
AGRH0000  DISPLAY   *P12:24,*EL,"allgrhaf:";
          MOVE      SP70,KEY21
AGRH0200  CALL      RSALGRH1                     * position at start of file
AGRH0500  CALL      RKALGRH1                     * read next record
          BRANCH    OVRCD,AGRH9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,ALGHSESN,ALGHHCPC,ALGHSPEC
          PACK      SAVKEY21,ALGHSESN,ALGHHCPC,ALGHSPEC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ALGHHCPC
.
          PACK      CODEDFLD,ALGHHCPC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AGRH9000                * no 
.
          MOVE      NEWCODE,ALGHHCPC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
AGRH9000  BRANCH    UPDTFLAG,AGRH0500            * no mappings
          CALL      UPALGRH1
.
          MOVE      SAVKEY21,KEY21
          GOTO      AGRH0200                     * get next record
.
AGRH9999  RETURN
+
.*****************************************************************************
.*                              AHDT0000              Called by: PROC0000    *
.*       Loop through allhdtaf and fix any relevant doctor fields            *
.*****************************************************************************
.
AHDT0000  DISPLAY   *P12:24,*EL,"allhdtaf:";
          MOVE      SP70,KEY42
          CALL      RSALHDT1                     * position at start of file
AHDT0500  CALL      RKALHDT1                     * read next record
          BRANCH    OVRCD,AHDT9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,ALHDSTAT,ALHDURNO,ALHDVISN,ALHDCONT:
                                       ALHDDTTM,ALHDRTYP,ALHDACTN
          PACK      SAVKEY42,ALHDSTAT,ALHDURNO,ALHDVISN,ALHDCONT:
                                       ALHDDTTM,ALHDRTYP,ALHDACTN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ALHDPGRP
.
          PACK      CODEDFLD,ALHDPGRP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AHDT1000                * no 
.
          MOVE      NEWCODE,ALHDPGRP             * yes - load new code
.
.         Check ALHDPGR1
.
AHDT1000  PACK      CODEDFLD,ALHDPGR1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AHDT2000                * no 
.
          MOVE      NEWCODE,ALHDPGR1             * yes - load new code
.
.         Check ALHDPGR2
.
AHDT2000  PACK      CODEDFLD,ALHDPGR2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AHDT3000                * no 
.
          MOVE      NEWCODE,ALHDPGR2             * yes - load new code
.
.         Check ALHDPGR3
.
AHDT3000  PACK      CODEDFLD,ALHDPGR3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AHDT4000                * no
.
          MOVE      NEWCODE,ALHDPGR3             * yes - load new code
.
.         Check ALHDPGR4
.
AHDT4000  PACK      CODEDFLD,ALHDPGR4,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AHDT9000                * no
.
          MOVE      NEWCODE,ALHDPGR4             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
AHDT9000  BRANCH    UPDTFLAG,AHDT0500            * no mappings
          CALL      UPALHDT1
.
          MOVE      SAVKEY42,KEY42
          GOTO      AHDT0500                     * get next record
.
AHDT9999  RETURN
+
.*****************************************************************************
.*                              AQUE0000              Called by: PROC0000    *
.*       Loop through allqueaf and fix any relevant doctor fields            *
.*****************************************************************************
.
AQUE0000  DISPLAY   *P12:24,*EL,"allqueaf:";
          MOVE      SP30,KEY20
          CALL      RSALQUE1                     * position at start of file
AQUE0500  CALL      RKALQUE1                     * read next record
          BRANCH    OVRCD,AQUE9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DALQUMES
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ALENHCP
.
          PACK      CODEDFLD,ALENHCP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AQUE1000                * no 
.
          MOVE      NEWCODE,ALENHCP             * yes - load new code
.
.         Check ALENUHC1
.
AQUE1000  PACK      CODEDFLD,ALENUHC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AQUE2000                * no 
.
          MOVE      NEWCODE,ALENUHC1             * yes - load new code
.
.         Check ALENUHC2
.
AQUE2000  PACK      CODEDFLD,ALENUHC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AQUE3000                * no 
.
          MOVE      NEWCODE,ALENUHC2             * yes - load new code
.
.         Check ALENUHC3
.
AQUE3000  PACK      CODEDFLD,ALENUHC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AQUE4000                * no
.
          MOVE      NEWCODE,ALENUHC3             * yes - load new code
.
.         Check ALENUHC4
.
AQUE4000  PACK      CODEDFLD,ALENUHC4,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AQUE5000                * no
.
          MOVE      NEWCODE,ALENUHC4             * yes - load new code
.
.         Check ALRERHCP
.         
AQUE5000  PACK      CODEDFLD,ALRERHCP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AQUE6000                * no
.
          MOVE      NEWCODE,ALRERHCP             * yes - load new code
.
.         Check ALREHCP
.         
AQUE6000  PACK      CODEDFLD,ALREHCP,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AQUE7000                * no
.         
          MOVE      NEWCODE,ALREHCP              * yes - load new code
.
.         Check ALREUHC1
.
AQUE7000  PACK      CODEDFLD,ALREUHC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AQUE8000                * no
.
          MOVE      NEWCODE,ALREUHC1             * yes - load new code
.
.         Check ALREUHC2
.
AQUE8000  PACK      CODEDFLD,ALREUHC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AQUE8100                * no
.
          MOVE      NEWCODE,ALREUHC2             * yes - load new code
.
.         Check ALREUHC3
.
AQUE8100  PACK      CODEDFLD,ALREUHC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AQUE8200                * no
.
          MOVE      NEWCODE,ALREUHC3             * yes - load new code
.
.         Check ALREUHC4
.
AQUE8200  PACK      CODEDFLD,ALREUHC4,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AQUE9000                * no
.
          MOVE      NEWCODE,ALREUHC4             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
AQUE9000  BRANCH    UPDTFLAG,AQUE0500            * no mappings
          CALL      UPALQUE1
.
          MOVE      SAVKEY20,KEY20
          GOTO      AQUE0500                     * get next record
.
AQUE9999  RETURN
+
.*****************************************************************************
.*                              AREF0000              Called by: PROC0000    *
.*       Loop through allrefaf and fix any relevant doctor fields            *
.*****************************************************************************
.
AREF0000  DISPLAY   *P12:24,*EL,"allrefaf:";
          MOVE      SP30,KEY8
          CALL      RSALREF1                     * position at start of file
AREF0500  CALL      RKALREF1                     * read next record
          BRANCH    OVRCD,AREF9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,ALREVISN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ALRERHCP
.
          PACK      CODEDFLD,ALRERHCP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AREF1000                * no 
.
          MOVE      NEWCODE,ALRERHCP             * yes - load new code
.
.         Check ALREHCP
.
AREF1000  PACK      CODEDFLD,ALREHCP,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AREF2000                * no 
.
          MOVE      NEWCODE,ALREHCP              * yes - load new code
.
.         Check ALREUHC1
.
AREF2000  PACK      CODEDFLD,ALREUHC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AREF3000                * no 
.
          MOVE      NEWCODE,ALREUHC1             * yes - load new code
.
.         Check ALREUHC2
.
AREF3000  PACK      CODEDFLD,ALREUHC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AREF4000                * no
.
          MOVE      NEWCODE,ALREUHC2             * yes - load new code
.
.         Check ALREUHC3
.
AREF4000  PACK      CODEDFLD,ALREUHC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AREF9000                * no
.
          MOVE      NEWCODE,ALREUHC3             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
AREF9000  BRANCH    UPDTFLAG,AREF0500            * no mappings
          CALL      UPALREF1
.
          MOVE      SAVKEY8,KEY8
          GOTO      AREF0500                     * get next record
.
AREF9999  RETURN
+
.*****************************************************************************
.*                              CEPS0000              Called by: PROC0000    *
.*       Loop through ccsepsaf and fix any relevant coded fields             *
.*****************************************************************************
.
CEPS0000  DISPLAY   *P12:24,*EL,"ccsepsaf:";
          MOVE      SP30,KEY18
          CALL      RSCCEP1                      * position at start of file
CEPS0500  CALL      RKCCEP1                      * read next record
          BRANCH    OVRCD,CEPS9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,CCEPHCD,CCEPEPS
          PACK      SAVKEY18,CCEPHCD,CCEPEPS
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check CCEPARDC
.
          PACK      CODEDFLD,CCEPARDC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CEPS1000                * no 
.
          MOVE      NEWCODE,CCEPARDC             * yes - load new code
.
.         Check CCEPATDC
.
CEPS1000  PACK      CODEDFLD,CCEPATDC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CEPS2000                * no 
.
          MOVE      NEWCODE,CCEPATDC             * yes - load new code
.
.         Check CCEPAADC
.
CEPS2000  PACK      CODEDFLD,CCEPAADC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CEPS3000                * no 
.
          MOVE      NEWCODE,CCEPAADC             * yes - load new code
.
.         Check CCEPDADC
.
CEPS3000  PACK      CODEDFLD,CCEPDADC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CEPS4000                * no 
.
          MOVE      NEWCODE,CCEPDADC             * yes - load new code
.
.         Check CCEPRHCP
.
CEPS4000  PACK      CODEDFLD,CCEPRHCP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CEPS5000                * no 
.
          MOVE      NEWCODE,CCEPRHCP             * yes - load new code
.
.         Check CCEPSERP
.
CEPS5000  PACK      CODEDFLD,CCEPSERP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CEPS9000                * no
.
          MOVE      NEWCODE,CCEPSERP             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
CEPS9000  BRANCH    UPDTFLAG,CEPS0500            * no mappings
          CALL      UPCCEP1
.
          MOVE      SAVKEY18,KEY18
          GOTO      CEPS0500                     * get next record
.
CEPS9999  RETURN
+
.*****************************************************************************
.*                              CSTR0000              Called by: PROC0000    *
.*       Loop through ceastraf and fix any relevant doctor fields            *
.*****************************************************************************
.
CSTR0000  DISPLAY   *P12:24,*EL,"ceastraf:";
          MOVE      SP9,KEY9
          CALL      RSCEST1                      * position at start of file
CSTR0500  CALL      RKCEST1                      * read next record
          BRANCH    OVRCD,CSTR9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,CESTBAT,CESTLIN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check CESTDCD
.
          PACK      CODEDFLD,CESTDCD,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CSTR9000                * no 
.
          MOVE      NEWCODE,CESTDCD              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
CSTR9000  BRANCH    UPDTFLAG,CSTR0500            * no mappings
          CALL      UPCEST1
          GOTO      CSTR0500                     * get next record
.
CSTR9999  RETURN
+
.*****************************************************************************
.*                              CTFM0000              Called by: PROC0000    *
.*       Loop through ceatfmaf and fix any relevant doctor fields            *
.*****************************************************************************
.
CTFM0000  DISPLAY   *P12:24,*EL,"ceatfmaf:";
          MOVE      SP30,KEY16
CTFM0200  CALL      RSCETF1                      * position at start of file
CTFM0500  CALL      RKCETF1                      * read next record
          BRANCH    OVRCD,CTFM9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,CETFCLI,CETFSPC,CETFPSC
          PACK      SAVKEY16,CETFCLI,CETFSPC,CETFPSC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check CETFCLI
.
          PACK      CODEDFLD,CETFCLI,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CTFM9000                * no 
.
          MOVE      NEWCODE,CETFCLI              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
CTFM9000  BRANCH    UPDTFLAG,CTFM0500            * no mappings
          CALL      UPCETF1
.
          MOVE      SAVKEY16,KEY16
          GOTO      CTFM0200                     * get next record
.
CTFM9999  RETURN
+
.*****************************************************************************
.*                              CTGM0000              Called by: PROC0000    *
.*       Loop through ceatgmaf and fix any relevant doctor fields            *
.*****************************************************************************
.
CTGM0000  DISPLAY   *P12:24,*EL,"ceatgmaf:";
          MOVE      SP30,KEY16
CTGM0200  CALL      RSCETG1                      * position at start of file
CTGM0500  CALL      RKCETG1                      * read next record
          BRANCH    OVRCD,CTGM9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,CETGCLI,CETGSPC,CETGPSC
          PACK      SAVKEY16,CETGCLI,CETGSPC,CETGPSC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check CETGCLI
.
          PACK      CODEDFLD,CETGCLI,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CTGM9000                * no 
.
          MOVE      NEWCODE,CETGCLI              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
CTGM9000  BRANCH    UPDTFLAG,CTGM0500            * no mappings
          CALL      UPCETG1
.
          MOVE      SAVKEY16,KEY16
          GOTO      CTGM0200                     * get next record
.
CTGM9999  RETURN
+
.*****************************************************************************
.*                              CVAM0000              Called by: PROC0000    *
.*       Loop through ceavamaf and fix any relevant doctor fields            *
.*****************************************************************************
.
CVAM0000  DISPLAY   *P12:24,*EL,"ceavamaf:";
          PACK      KEY16,SP30
CVAM0200  CALL      RSCEVA1                     * position at start of file
CVAM0500  CALL      RKCEVA1                     * read next record
          BRANCH    OVRCD,CVAM9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,CEVADOC,CEVASPC,CEVAPSC
          PACK      SAVKEY16,CEVADOC,CEVASPC,CEVAPSC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check CEVADOC
.
          PACK      CODEDFLD,CEVADOC,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CVAM9000                * no 
.
          MOVE      NEWCODE,CEVADOC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
CVAM9000  BRANCH    UPDTFLAG,CVAM0500            * no mappings
          CALL      UPCEVA1
.
          MOVE      SAVKEY16,KEY16
          GOTO      CVAM0200                     * get next record
.
CVAM9999  RETURN
+
.*****************************************************************************
.*                              CBTR0000              Called by: PROC0000    *
.*       Loop through ccibtraf and fix any relevant doctor fields            *
.*****************************************************************************
.
CBTR0000  DISPLAY   *P12:24,*EL,"ccibtraf:";
          MOVE      SP70,KEY46
          CALL      RSCCBTR1                     * position at start of file
CBTR0500  CALL      RKCCBTR1                     * read next record
          BRANCH    OVRCD,CBTR9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DCCBTBAT,CCBTUNIQ,CCBTSDAT,CCBTDEPT:
                                       CCBTEVNT,CCBTPROC,CCBTURNO
          PACK      SAVKEY46,DCCBTBAT,CCBTUNIQ,CCBTSDAT,CCBTDEPT:
                                       CCBTEVNT,CCBTPROC,CCBTURNO
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check CCBTORDD
.
          PACK      CODEDFLD,CCBTORDD,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CBTR9000                * no 
.
          MOVE      NEWCODE,CCBTORDD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
CBTR9000  BRANCH    UPDTFLAG,CBTR0500            * no mappings
          CALL      UPCCBTR1
.
          MOVE      SAVKEY46,KEY46
          GOTO      CBTR0500                     * get next record
.
CBTR9999  RETURN
+
.*****************************************************************************
.*                              CUTL0000              Called by: PROC0000    *
.*       Loop through cciutlaf and fix any relevant doctor fields            *
.*****************************************************************************
.
CUTL0000  DISPLAY   *P12:24,*EL,"cciutlaf:";
          MOVE      SP30,KEY42
CUTL0200  CALL      RSCCUTL1                     * position at start of file
CUTL0500  CALL      RKCCUTL1                     * read next record
          BRANCH    OVRCD,CUTL9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,CCUTDATE,CCUTDEPT,DCCUTEVN,CCUTPROC:
                                       CCUTURNO,DCCUTBAT
          PACK      SAVKEY42,CCUTDATE,CCUTDEPT,DCCUTEVN,CCUTPROC:
                                       CCUTURNO,DCCUTBAT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check CCUTORDD
.
          PACK      CODEDFLD,CCUTORDD,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CUTL9000                * no 
.
          MOVE      NEWCODE,CCUTORDD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
CUTL9000  BRANCH    UPDTFLAG,CUTL0500            * no mappings
          CALL      UPCCUTL1
.
          MOVE      SAVKEY42,KEY42
          GOTO      CUTL0200                     * get next record
.
CUTL9999  RETURN
+
.*****************************************************************************
.*                              CVAR0000              Called by: PROC0000    *
.*       Loop through clavaraf and fix any relevant doctor fields            *
.*****************************************************************************
.
CVAR0000  DISPLAY   *P12:24,*EL,"clavaraf:";
          MOVE      SP30,KEY22
          CALL      RSCAVAR1                     * position at start of file
CVAR0500  CALL      RKCAVAR1                     * read next record
          BRANCH    OVRCD,CVAR9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,CAVRSITE,CAVRVIST,CAVRUNIQ,CAVRTHEU
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check CAVRDOCT
.
          PACK      CODEDFLD,CAVRDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,CVAR9000                * no 
.
          MOVE      NEWCODE,CAVRDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
CVAR9000  BRANCH    UPDTFLAG,CVAR0500            * no mappings
          CALL      UPCAVAR1
.
          GOTO      CVAR0500                     * get next record
.
CVAR9999  RETURN
+
.*****************************************************************************
.*                              HCLM0000              Called by: PROC0000    *
.*       Loop through hicclmaf and fix any relevant doctor fields            *
.*****************************************************************************
.
HCLM0000  DISPLAY   *P12:24,*EL,"hicclmaf:";
          MOVE      SP30,KEY8
          CALL      RSHCCLM1                     * position at start of file
HCLM0500  CALL      RKHCCLM1                     * read next record
          BRANCH    OVRCD,HCLM9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,HCCLCLMN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check HCCLADOC
.
          PACK      CODEDFLD,HCCLADOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,HCLM9000                * no 
.
          MOVE      NEWCODE,HCCLADOC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
HCLM9000  BRANCH    UPDTFLAG,HCLM0500            * no mappings
          CALL      UPHCCLM1
.
          GOTO      HCLM0500                     * get next record
.
HCLM9999  RETURN
+
.*****************************************************************************
.*                              EDOC0000              Called by: PROC0000    *
.*       Loop through emrdocaf and fix any relevant doctor fields            *
.*****************************************************************************
.
EDOC0000  DISPLAY   *P12:24,*EL,"emrdocaf:";
          MOVE      SP30,KEY10
EDOC0200  CALL      RSEMDO1                      * position at start of file
EDOC0500  CALL      RKEMDO1                      * read next record
          BRANCH    OVRCD,EDOC9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,EMDODOC
          PACK      SAVKEY10,EMDODOC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check EMDODOC
.
          PACK      CODEDFLD,EMDODOC,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EDOC9000                * no 
.
          MOVE      NEWCODE,EMDODOC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
EDOC9000  BRANCH    UPDTFLAG,EDOC0500            * no mappings
          CALL      UPEMDO1
.
          MOVE      SAVKEY10,KEY10
          GOTO      EDOC0200                     * get next record
.
EDOC9999  RETURN
+
.*****************************************************************************
.*                              EEXP0000              Called by: PROC0000    *
.*       Loop through emrexpaf and fix any relevant doctor fields            *
.*****************************************************************************
.
EEXP0000  DISPLAY   *P12:24,*EL,"emrexpaf:";
          MOVE      SP20,KEY10
          CALL      RSEMEXP1                     * position at start of file
EEXP0500  CALL      RKEMEXP1                     * read next record
          BRANCH    OVRCD,EEXP9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,EMEXUNIQ
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check EMEXGPCD
.
          PACK      CODEDFLD,EMEXGPCD,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EEXP9000                * no 
.
          MOVE      NEWCODE,EMEXGPCD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
EEXP9000  BRANCH    UPDTFLAG,EEXP0500            * no mappings
          CALL      UPEMEXP1
.
          MOVE      SAVKEY10,KEY10
          GOTO      EEXP0500                     * get next record
.
EEXP9999  RETURN
+
.*****************************************************************************
.*                              EHIS0000              Called by: PROC0000    *
.*       Loop through emrhisaf and fix any relevant doctor fields            *
.*****************************************************************************
.
EHIS0000  DISPLAY   *P12:24,*EL,"emrhisaf:";
          MOVE      SP8,KEY22
          CALL      RSEMHIS1                     * position at start of file
EHIS0500  CALL      RKEMHIS1                     * read next record
          BRANCH    OVRCD,EHIS9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,EMHIVIS,EMHIDAT,EMHITIM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check EMHIDOC
.
          PACK      CODEDFLD,EMHIDOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EHIS9000                * no 
.
          MOVE      NEWCODE,EMHIDOC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
EHIS9000  BRANCH    UPDTFLAG,EHIS0500            * no mappings
          CALL      UPEMHIS1
          GOTO      EHIS0500                     * get next record
.
EHIS9999  RETURN
+
.*****************************************************************************
.*                              EINC0000              Called by: PROC0000    *
.*       Loop through emrincaf and fix any relevant doctor fields            *
.*****************************************************************************
.
EINC0000  DISPLAY   *P12:24,*EL,"emrincaf:";
          MOVE      SP9,KEY8
          CALL      RSEMINC1                     * position at start of file
EINC0500  CALL      RKEMINC1                     * read next record
          BRANCH    OVRCD,EINC9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,EMIPADMN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check EMIPDOCT
.
          PACK      CODEDFLD,EMIPDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EINC9000                * no 
.
          MOVE      NEWCODE,EMIPDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
EINC9000  BRANCH    UPDTFLAG,EINC0500            * no mappings
          CALL      UPEMINC1
.
          GOTO      EINC0500                     * get next record
.
EINC9999  RETURN
+
.*****************************************************************************
.*                              EISM0000              Called by: PROC0000    *
.*       Loop through emrismaf and fix any relevant doctor fields            *
.*****************************************************************************
.
EISM0000  DISPLAY   *P12:24,*EL,"emrismaf:";
          MOVE      SP30,KEY11
EISM0200  CALL      RSEMISM1                     * position at start of file
EISM0500  CALL      RKEMISM1                     * read next record
          BRANCH    OVRCD,EISM9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,EMISTYPE,EMISCODE
          PACK      SAVKEY11,EMISTYPE,EMISCODE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check EMISCODE
.
          PACK      CODEDFLD,EMISCODE,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EISM9000                * no 
.
          MOVE      NEWCODE,EMISCODE             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
EISM9000  BRANCH    UPDTFLAG,EISM0500            * no mappings
          CALL      UPEMISM1
.
          MOVE      SAVKEY11,KEY11
          GOTO      EISM0200                     * get next record
.
EISM9999  RETURN
+
.*****************************************************************************
.*                              EQUE0000              Called by: PROC0000    *
.*       Loop through emrvcdaf and fix any relevant doctor fields            *
.*****************************************************************************
.
EQUE0000  DISPLAY   *P12:24,*EL,"emrqueaf:";
          MOVE      SP30,KEY20
          CALL      RSEMQUE1                     * position at start of file
EQUE0500  CALL      RKEMQUE1                     * read next record
          BRANCH    OVRCD,EQUE9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DEMQUMES
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check EMVIDOCT
.
          PACK      CODEDFLD,EMVIDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EQUE1000                * no 
.
          MOVE      NEWCODE,EMVIDOCT             * yes - load new code
.
.         Check EMVIREFG
.
EQUE1000  PACK      CODEDFLD,EMVIREFG,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EQUE2000                * no 
.
          MOVE      NEWCODE,EMVIREFG             * yes - load new code
.
.         Check EMVIREFD
.
EQUE2000  PACK      CODEDFLD,EMVIREFD,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EQUE9000                * no 
.
          MOVE      NEWCODE,EMVIREFD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
EQUE9000  BRANCH    UPDTFLAG,EQUE0500            * no mappings
          CALL      UPEMQUE1
.
          MOVE      SAVKEY20,KEY20
          GOTO      EQUE0500                     * get next record
.
EQUE9999  RETURN
+
.*****************************************************************************
.*                              EVCD0000              Called by: PROC0000    *
.*       Loop through emrvcdaf and fix any relevant doctor fields            *
.*****************************************************************************
.
EVCD0000  DISPLAY   *P12:24,*EL,"emrvcdaf:";
          MOVE      SP20,KEY14
          CALL      RSEMVCD1                     * position at start of file
EVCD0500  CALL      RKEMVCD1                     * read next record
          BRANCH    OVRCD,EVCD9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,EMVCVIST,EMVCTYPE,EMVCUNIQ
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check EMVCEDAD
.
          PACK      CODEDFLD,EMVCEDAD,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EVCD9000                * no 
.
          MOVE      NEWCODE,EMVCEDAD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
EVCD9000  BRANCH    UPDTFLAG,EVCD0500            * no mappings
          CALL      UPEMVCD1
.
          MOVE      SAVKEY14,KEY14
          GOTO      EVCD0500                     * get next record
.
EVCD9999  RETURN
+
.*****************************************************************************
.*                              EVIS0000              Called by: PROC0000    *
.*       Loop through emrvisaf and fix any relevant doctor fields            *
.*****************************************************************************
.
EVIS0000  DISPLAY   *P12:24,*EL,"emrvisaf:";
          MOVE      SP30,KEY8
          CALL      RSEMVIS1                     * position at start of file
EVIS0500  CALL      RKEMVIS1                     * read next record
          BRANCH    OVRCD,EVIS9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DEMVIADM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check EMVIDOCT
.
          PACK      CODEDFLD,EMVIDOCT,SP10          * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EVIS1000                * no 
.
          MOVE      NEWCODE,EMVIDOCT             * yes - load new code
.
.         Check EMVIREFD
.
EVIS1000  PACK      CODEDFLD,EMVIREFD,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EVIS2000                * no 
.
          MOVE      NEWCODE,EMVIREFD             * yes - load new code
.
.         Check EMVIUR01
.
EVIS2000  PACK      CODEDFLD,EMVIUR01,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EVIS3000                * no 
.
          MOVE      NEWCODE,EMVIUR01             * yes - load new code
.
.         Check EMVIUR02
.
EVIS3000  PACK      CODEDFLD,EMVIUR02,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EVIS4000                * no 
.
          MOVE      NEWCODE,EMVIUR02             * yes - load new code
.
.         Check EMVIUR03
.
EVIS4000  PACK      CODEDFLD,EMVIUR03,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EVIS5000                * no 
.
          MOVE      NEWCODE,EMVIUR03            * yes - load new code
.
.         Check EMVIUR04
.
EVIS5000  PACK      CODEDFLD,EMVIUR04,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EVIS6000                * no
.
          MOVE      NEWCODE,EMVIUR04            * yes - load new code
.
.         Check EMVIUR05
.         
EVIS6000  PACK      CODEDFLD,EMVIUR05,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EVIS9000                * no
.
          MOVE      NEWCODE,EMVIUR05            * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
EVIS9000  BRANCH    UPDTFLAG,EVIS0500            * no mappings
          CALL      UPEMVIS1
.
          MOVE      SAVKEY8,KEY8
          GOTO      EVIS0500                     * get next record
.
EVIS9999  RETURN
+
.*****************************************************************************
.*                              EACC0000              Called by: PROC0000    *
.*       Loop through eocaccaf and fix any relevant doctor fields            *
.*****************************************************************************
.
EACC0000  DISPLAY   *P12:24,*EL,"eocaccaf:";
          MOVE      SP70,KEY20
          CALL      RSECACC1                     * position at start of file
EACC0500  CALL      RKECACC1                     * read next record
          BRANCH    OVRCD,EACC9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,ECACACCN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ECACDOC1
.
          PACK      CODEDFLD,ECACDOC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EACC1000                * no 
.
          MOVE      NEWCODE,ECACDOC1             * yes - load new code
.
.         Check ECACDOC2
.
EACC1000  PACK      CODEDFLD,ECACDOC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EACC2000                * no
.
          MOVE      NEWCODE,ECACDOC2             * yes - load new code
.
.         Check ECACDOC3
.
EACC2000  PACK      CODEDFLD,ECACDOC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EACC3000                * no
.
          MOVE      NEWCODE,ECACDOC3             * yes - load new code
.
.         Check ECACDOC4
.         
EACC3000  PACK      CODEDFLD,ECACDOC4,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EACC4000                * no
.
          MOVE      NEWCODE,ECACDOC4             * yes - load new code
.
.         Check ECACDOC5
.
EACC4000  PACK      CODEDFLD,ECACDOC5,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EACC5000                * no
.
          MOVE      NEWCODE,ECACDOC5             * yes - load new code
.
.         Check ECACDOC6
.
EACC5000  PACK      CODEDFLD,ECACDOC6,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,EACC9000                * no
.
          MOVE      NEWCODE,ECACDOC6             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
EACC9000  BRANCH    UPDTFLAG,EACC0500            * no mappings
          CALL      UPECACC1
.
          MOVE      SAVKEY20,KEY20
          GOTO      EACC0500                     * get next record
.
EACC9999  RETURN
+
.*****************************************************************************
.*                              MDLS0000              Called by: PROC0000    *
.*       Loop through mehdlsaf and fix any relevant doctor fields            *
.*****************************************************************************
.
MDLS0000  DISPLAY   *P12:24,*EL,"mehdlsaf:";
          MOVE      SP70,KEY32
          CALL      RSMHDLS1                     * position at start of file
MDLS0500  CALL      RKMHDLS1                     * read next record
          BRANCH    OVRCD,MDLS9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,MHDLURNO,MHDLUNIQ,MHDLSDAT,MHDLSTIM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check MHDLHCPC
.
          PACK      CODEDFLD,MHDLHCPC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MDLS9000                * no 
.
          MOVE      NEWCODE,MHDLHCPC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MDLS9000  BRANCH    UPDTFLAG,MDLS0500            * no mappings
          CALL      UPMHDLS1
          GOTO      MDLS0500                     * get next record
.
MDLS9999  RETURN
+
.*****************************************************************************
.*                              MHLS0000              Called by: PROC0000    *
.*       Loop through mehhlsaf and fix any relevant doctor fields            *
.*****************************************************************************
.
MHLS0000  DISPLAY   *P12:24,*EL,"mehhlsaf:";
          MOVE      SP30,KEY16
          CALL      RSMHHLS1                     * position at start of file
MHLS0500  CALL      RKMHHLS1                     * read next record
          BRANCH    OVRCD,MHLS9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,MHHLURNO,MHHLUNIQ
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check MHHLHCPC
.
          PACK      CODEDFLD,MHHLHCPC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MHLS9000                * no 
.
          MOVE      NEWCODE,MHHLHCPC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MHLS9000  BRANCH    UPDTFLAG,MHLS0500            * no mappings
          CALL      UPMHHLS1
.
          MOVE      SAVKEY16,KEY16
          GOTO      MHLS0500                     * get next record
.
MHLS9999  RETURN
+
.*****************************************************************************
.*                              MHON0000              Called by: PROC0000    *
.*       Loop through mehhonaf and fix any relevant doctor fields            *
.*****************************************************************************
.
MHON0000  DISPLAY   *P12:24,*EL,"mehhonaf:";
          MOVE      SP20,KEY16
          CALL      RSMHHON1                     * position at start of file
MHON0500  CALL      RKMHHON1                     * read next record
          BRANCH    OVRCD,MHON9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,MHHNVISN,MHHNUNIQ
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check MHHNRHCP
.
          PACK      CODEDFLD,MHHNRHCP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MHON1000                * no 
.
          MOVE      NEWCODE,MHHNRHCP             * yes - load new code
.
.         Check MHHNPHCP
.
MHON1000  PACK      CODEDFLD,MHHNPHCP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MHON9000                * no 
.
          MOVE      NEWCODE,MHHNPHCP             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MHON9000  BRANCH    UPDTFLAG,MHON0500            * no mappings
          CALL      UPMHHON1
.
          MOVE      SAVKEY16,KEY16
          GOTO      MHON0500                     * get next record
.
MHON9999  RETURN
+
.*****************************************************************************
.*                              MPAT0000              Called by: PROC0000    *
.*       Loop through mehpataf and fix any relevant doctor fields            *
.*****************************************************************************
.
MPAT0000  DISPLAY   *P12:24,*EL,"mehpataf:";
          PACK      KEY32,SP70
          CALL      RSMHPAT1                     * position at start of file
MPAT0500  CALL      RKMHPAT1                     * read next record
          BRANCH    OVRCD,MPAT9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,MHPTXDAT,MHPTXNUM,MHPTVISN,MHPTURNO:
                                       MHPTOCUR
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check MHPTWCPN
.
          PACK      CODEDFLD,MHPTWCPN,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MPAT9000                * no 
.
          MOVE      NEWCODE,MHPTWCPN             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MPAT9000  BRANCH    UPDTFLAG,MPAT0500            * no mappings
          CALL      UPMHPAT1
          GOTO      MPAT0500                     * get next record
.
MPAT9999  RETURN
+
.*****************************************************************************
.*                              MPCO0000              Called by: PROC0000    *
.*       Loop through mehpcoaf and fix any relevant doctor fields            *
.*****************************************************************************
.
MPCO0000  DISPLAY   *P12:24,*EL,"mehpcoaf:";
          MOVE      SP30,KEY30
          CALL      RSMHPCO1                     * position at start of file
MPCO0500  CALL      RKMHPCO1                     * read next record
          BRANCH    OVRCD,MPCO9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,MHPOXDAT,MHPOXNUM,MHPOVISN,MHPOURNO:
                                       MHPOOCUR
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check MHPOWCPN
.
          PACK      CODEDFLD,MHPOWCPN,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MPCO9000                * no 
.
          MOVE      NEWCODE,MHPOWCPN             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MPCO9000  BRANCH    UPDTFLAG,MPCO0500            * no mappings
          CALL      UPMHPCO1
.
          GOTO      MPCO0500                     * get next record
.
MPCO9999  RETURN
+
.*****************************************************************************
.*                              MPLS0000              Called by: PROC0000    *
.*       Loop through mehplsaf and fix any relevant doctor fields            *
.*****************************************************************************
.
MPLS0000  DISPLAY   *P12:24,*EL,"mehplsaf:";
          MOVE      SP20,KEY22
          CALL      RSMHPLS1                     * position at start of file
MPLS0500  CALL      RKMHPLS1                     * read next record
          BRANCH    OVRCD,MPLS9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,MHPSXDAT,MHPSXNUM,MHPSVISN,MHPSUNIQ
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check MHPSRCPN
.
          PACK      CODEDFLD,MHPSRCPN,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MPLS9000                * no 
.
          MOVE      NEWCODE,MHPSRCPN             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MPLS9000  BRANCH    UPDTFLAG,MPLS0500            * no mappings
          CALL      UPMHPLS1
.
          GOTO      MPLS0500                     * get next record
.
MPLS9999  RETURN
+
.*****************************************************************************
.*                              MDSR0000              Called by: PROC0000    *
.*       Loop through mrtdsraf and fix any relevant doctor fields            *
.*****************************************************************************
.
MDSR0000  DISPLAY   *P12:24,*EL,"mrtdsraf:";
          MOVE      SP30,KEY11
          CALL      RSMRDSR1                     * position at start of file
MDSR0500  CALL      RKMRDSR1                     * read next record
          BRANCH    OVRCD,MDSR9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,MRDSVISN,DMRDSCNT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check MRDSCONS
.
          PACK      CODEDFLD,MRDSCONS,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MDSR9000                * no 
.
          MOVE      NEWCODE,MRDSCONS              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MDSR9000  BRANCH    UPDTFLAG,MDSR0500            * no mappings
          CALL      UPMRDSR1
          GOTO      MDSR0500                     * get next record
.
MDSR9999  RETURN
+
.*****************************************************************************
.*                              MPDS0000              Called by: PROC0000    *
.*       Loop through mrtpdsaf and fix any relevant doctor fields            *
.*****************************************************************************
.
MPDS0000  DISPLAY   *P12:24,*EL,"mrtpdsaf:";
          MOVE      SP8,KEY8
          CALL      RSMRPDS1                     * position at start of file
MPDS0500  CALL      RKMRPDS1                     * read next record
          BRANCH    OVRCD,MPDS9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DMRPDADM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check MRPDDOCT
.
          PACK      CODEDFLD,MRPDDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MPDS9000                * no 
.
          MOVE      NEWCODE,MRPDDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MPDS9000  BRANCH    UPDTFLAG,MPDS0500            * no mappings
          CALL      UPMRPDS1
          GOTO      MPDS0500                     * get next record
.
MPDS9999  RETURN
+
.*****************************************************************************
.*                              MREX0000              Called by: PROC0000    *
.*       Loop through mrtrexaf and fix any relevant doctor fields            *
.*****************************************************************************
.
MREX0000  DISPLAY   *P12:24,*EL,"mrtrexaf:";
          MOVE      SP8,KEY4
          CALL      RSMRREX1                     * position at start of file
MREX0500  CALL      RKMRREX1                     * read next record
          BRANCH    OVRCD,MREX9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,MRRXEXID
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check MRRXDOCT
.
          PACK      CODEDFLD,MRRXDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MREX9000                * no 
.
          MOVE      NEWCODE,MRRXDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MREX9000  BRANCH    UPDTFLAG,MREX0500            * no mappings
          CALL      UPMRREX1
          GOTO      MREX0500                     * get next record
.
MREX9999  RETURN
+
.*****************************************************************************
.*                              BQUE0000              Called by: PROC0000    *
.*       Loop through bokqueaf and fix any relevant doctor fields            *
.*****************************************************************************
.
BQUE0000  DISPLAY   *P12:24,*EL,"bokqueaf:";
          MOVE      SP70,KEY20
          CALL      RSBKQUE1                     * position at start of file
BQUE0500  CALL      RKBKQUE1                     * read next record
          BRANCH    OVRCD,BQUE9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DBKQUMES
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check BKREADOC
.
          PACK      CODEDFLD,BKREADOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BQUE1000                * no 
.
          MOVE      NEWCODE,BKREADOC             * yes - load new code
.
.         Check BKRESDOC
.
BQUE1000  PACK      CODEDFLD,BKRESDOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BQUE2000                * no
.
          MOVE      NEWCODE,BKRESDOC             * yes - load new code
.
.         Check BKRETDOC        
.
BQUE2000  PACK      CODEDFLD,BKRETDOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BQUE3000                * no
.         
          MOVE      NEWCODE,BKRETDOC             * yes - load new code
.
.         Check BKRERFGP
.
BQUE3000  PACK      CODEDFLD,BKRERFGP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BQUE4000                * no
.
          MOVE      NEWCODE,BKRERFGP             * yes - load new code
.
.         Check BKRXEDC1
.         
BQUE4000  PACK      CODEDFLD,BKRXEDC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BQUE5000                * no
.
          MOVE      NEWCODE,BKRXEDC1             * yes - load new code
.
.         Check BKRXEDC2
.
BQUE5000  PACK      CODEDFLD,BKRXEDC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BQUE6000                * no
.
          MOVE      NEWCODE,BKRXEDC2             * yes - load new code
.
.         Check BKRXEDC3
.
BQUE6000  PACK      CODEDFLD,BKRXEDC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BQUE9000                * no
.
          MOVE      NEWCODE,BKRXEDC3             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
BQUE9000  BRANCH    UPDTFLAG,BQUE0500            * no mappings
          CALL      UPBKQUE1
          GOTO      BQUE0500                     * get next record
.
BQUE9999  RETURN
+
.*****************************************************************************
.*                              BRC10000              Called by: PROC0000    *
.*       Loop through bokrc1af and fix any relevant doctor fields            *
.*****************************************************************************
.
BRC10000  DISPLAY   *P12:24,*EL,"bokrc1af:";
          MOVE      SP20,KEY8
          CALL      RSBKREC1                     * position at start of file
BRC10500  CALL      RKBKREC1                     * read next record
          BRANCH    OVRCD,BRC19999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DBKREBOO
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check BKREADOC
.
          PACK      CODEDFLD,BKREADOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BRC11000                * no 
.
          MOVE      NEWCODE,BKREADOC             * yes - load new code
.
.         Check BKRESDOC
.
BRC11000  PACK      CODEDFLD,BKRESDOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BRC12000                * no 
.
          MOVE      NEWCODE,BKRESDOC             * yes - load new code
.
.         Check BKRETDOC
.
BRC12000  PACK      CODEDFLD,BKRETDOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BRC13000                * no
.
          MOVE      NEWCODE,BKRETDOC             * yes - load new code
.
.         Check BKRERFGP
.
BRC13000  PACK      CODEDFLD,BKRERFGP,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BRC19000                * no
.
          MOVE      NEWCODE,BKRERFGP             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
BRC19000  BRANCH    UPDTFLAG,BRC10500            * no mappings
          CALL      UPBKREC1
.
          GOTO      BRC10500                     * get next record
.
BRC19999  RETURN
+
.*****************************************************************************
.*                              BRK10000              Called by: PROC0000    *
.*       Loop through bokrx1af and fix any relevant doctor fields            *
.*****************************************************************************
.
BRX10000  DISPLAY   *P12:24,*EL,"bokrx1af:";
          PACK      KEY8,SP30
          CALL      RSBKRX11                     * position at start of file
BRX10500  CALL      RKBKRX11                     * read next record
          BRANCH    OVRCD,BRX19999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,BKRXBNUM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check BKRXEDC1
.
          PACK      CODEDFLD,BKRXEDC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BRX11000                * no 
.
          MOVE      NEWCODE,BKRXEDC1             * yes - load new code
.
.         Check BKRXEDC2
.
BRX11000  PACK      CODEDFLD,BKRXEDC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BRX12000                * no
.
          MOVE      NEWCODE,BKRXEDC2             * yes - load new code
.
.         Check BKRXEDC3
.
BRX12000  PACK      CODEDFLD,BKRXEDC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,BRX19000                * no
.
          MOVE      NEWCODE,BKRXEDC3             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
BRX19000  BRANCH    UPDTFLAG,BRX10500            * no mappings
          CALL      UPBKRX11
.
          GOTO      BRX10500                     * get next record
.
BRX19999  RETURN
+
.*****************************************************************************
.*                              OANE0000              Called by: PROC0000    *
.*       Loop through opraneaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OANE0000  DISPLAY   *P12:24,*EL,"opraneaf:";
          MOVE      SP70,KEY15
OANE0200  CALL      RSOPANE1                     * position at start of file
OANE0500  CALL      RKOPANE1                     * read next record
          BRANCH    OVRCD,OANE9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPANDATE,OPANDOCT,OPANTYPE
          PACK      SAVKEY15,OPANDATE,OPANDOCT,OPANTYPE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPANDOCT
.
          PACK      CODEDFLD,OPANDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OANE9000                * no 
.
          MOVE      NEWCODE,OPANDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OANE9000  BRANCH    UPDTFLAG,PEVT0500            * no mappings
          CALL      UPOPANE1
.
          MOVE      SAVKEY15,KEY15
          GOTO      OANE0200                     * get next record
.
OANE9999  RETURN
+
.*****************************************************************************
.*                              OATT0000              Called by: PROC0000    *
.*       Loop through oprattaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OATT0000  DISPLAY   *P12:24,*EL,"oprattaf:";
          MOVE      SP20,KEY12
OATT0200  CALL      RSOPATT1                     * position at start of file
OATT0500  CALL      RKOPATT1                     * read next record
          BRANCH    OVRCD,OATT9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPATDATE,OPATDOCT
          PACK      SAVKEY12,OPATDATE,OPATDOCT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPATDOCT
.
          PACK      CODEDFLD,OPATDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OATT9000                * no 
.
          MOVE      NEWCODE,OPATDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OATT9000  BRANCH    UPDTFLAG,OATT0500            * no mappings
          CALL      UPOPATT1
.
          MOVE      SAVKEY12,KEY12
          GOTO      OATT0200                     * get next record
.
OATT9999  RETURN
+
.*****************************************************************************
.*                              OAVE0000              Called by: PROC0000    *
.*       Loop through opraveaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OAVE0000  DISPLAY   *P12:24,*EL,"opraveaf:";
          PACK      KEY15,SP30
OAVE0200  CALL      RSOPAVE1                     * position at start of file
OAVE0500  CALL      RKOPAVE1                     * read next record
          BRANCH    OVRCD,OAVE9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPAVCODE,OPAVDOCT
          PACK      SAVKEY15,OPAVCODE,OPAVDOCT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPAVDOCT
.
          PACK      CODEDFLD,OPAVDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OAVE9000                * no 
.
          MOVE      NEWCODE,OPAVDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OAVE9000  BRANCH    UPDTFLAG,OAVE0500            * no mappings
          CALL      UPOPAVE1
.
          MOVE      SAVKEY15,KEY15
          GOTO      OAVE0200                     * get next record
.
OAVE9999  RETURN
+
.*****************************************************************************
.*                              OCLI0000              Called by: PROC0000    *
.*       Loop through oprcliaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OCLI0000  DISPLAY   *P12:24,*EL,"oprcliaf:";
          MOVE      SP8,KEY6
          CALL      RSOPCLI1                     * position at start of file
OCLI0500  CALL      RKOPCLI1                     * read next record
          BRANCH    OVRCD,OCLI9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPCLCLIN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPCLDOCT
.
          PACK      CODEDFLD,OPCLDOCT,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OCLI1000                * no 
.
          MOVE      NEWCODE,OPCLDOCT             * yes - load new code
.
.         Check OPCLCLIN
.
OCLI1000  PACK      CODEDFLD,OPCLCLIN,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OCLI9000                * no
.
          MOVE      NEWCODE,OPCLCLIN             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OCLI9000  BRANCH    UPDTFLAG,OCLI0500            * no mappings
          CALL      UPOPCLI1
.
          GOTO      OCLI0500                     * get next record
.
OCLI9999  RETURN
+
.*****************************************************************************
.*                              OCOM0000              Called by: PROC0000    *
.*       Loop through oprcomaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OCOM0000  DISPLAY   *P12:24,*EL,"oprcomaf:";
          MOVE      SP70,KEY25
OCOM0200  CALL      RSOPCOM1                     * position at start of file
OCOM0500  CALL      RKOPCOM1                     * read next record
          BRANCH    OVRCD,OCOM9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPCMDATE,OPCMTIME,OPCMCLIN,DOPCMLIN:
                                       OPCMHOSP
          PACK      SAVKEY25,OPCMDATE,OPCMTIME,OPCMCLIN,DOPCMLIN,OPCMHOSP
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPCMCLIN
.
          PACK      CODEDFLD,OPCMCLIN,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OCOM9000                * no 
.
          MOVE      NEWCODE,OPCMCLIN             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OCOM9000  BRANCH    UPDTFLAG,OCOM0500            * no mappings
          CALL      UPOPCOM1
.
          MOVE      SAVKEY25,KEY25
          GOTO      OCOM0200                     * get next record
.
OCOM9999  RETURN
+
.*****************************************************************************
.*                              OCOS0000              Called by: PROC0000    *
.*       Loop through oprcosaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OCOS0000  DISPLAY   *P12:24,*EL,"oprcosaf:";
          MOVE      SP70,KEY21
OCOS0200  CALL      RSOPCOS1                     * position at start of file
OCOS0500  CALL      RKOPCOS1                     * read next record
          BRANCH    OVRCD,OCOS9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPCPDATE,OPCPDOCT,OPCPOPER
          PACK      SAVKEY21,OPCPDATE,OPCPDOCT,OPCPOPER 
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPCPDOCT
.
          PACK      CODEDFLD,OPCPDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OCOS9000                * no 
.
          MOVE      NEWCODE,OPCPDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OCOS9000  BRANCH    UPDTFLAG,OCOS0500            * no mappings
          CALL      UPOPCOS1
.
          MOVE      SAVKEY21,KEY21
          GOTO      OCOS0200                     * get next record
.
OCOS9999  RETURN
+
.*****************************************************************************
.*                              OCOU0000              Called by: PROC0000    *
.*       Loop through oprcouaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OCOU0000  DISPLAY   *P12:24,*EL,"oprcouaf:";
          MOVE      SP70,KEY21
OCOU0200  CALL      RSOPCOU1                     * position at start of file
OCOU0500  CALL      RKOPCOU1                     * read next record
          BRANCH    OVRCD,OCOU9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPCODATE,OPCODOCT,OPCOTYPE,OPCOOTYP:
                                       OPCOTPER,DOPCOATY,DOPCOOWN
          PACK      SAVKEY21,OPCODATE,OPCODOCT,OPCOTYPE,OPCOOTYP:
                                       OPCOTPER,DOPCOATY,DOPCOOWN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPCODOCT
.
          PACK      CODEDFLD,OPCODOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OCOU9000                * no
.
          MOVE      NEWCODE,OPCODOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OCOU9000  BRANCH    UPDTFLAG,OCOU0500            * no mappings
          CALL      UPOPCOU1
.
          MOVE      SAVKEY21,KEY21
          GOTO      OCOU0200                     * get next record
.
OCOU9999  RETURN
+
.*****************************************************************************
.*                              OCSC0000              Called by: PROC0000    *
.*       Loop through oprcscaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OCSC0000  DISPLAY   *P12:24,*EL,"oprcscaf:";
          MOVE      SP70,KEY20
OCSC0200  CALL      RSOPCSC1                     * position at start of file
OCSC0500  CALL      RKOPCSC1                     * read next record
          BRANCH    OVRCD,OCSC9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,OPCCDATE,OPCCDOCT,OPCCTYPE,OPCCTIME:
                                       DOPCCCTY,OPCCCODE
          PACK      SAVKEY20,OPCCDATE,OPCCDOCT,OPCCTYPE,OPCCTIME:
                                       DOPCCCTY,OPCCCODE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check OPCCDOCT
.         
          PACK      CODEDFLD,OPCCDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OCSC9000                * no
.
          MOVE      NEWCODE,OPCCDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OCSC9000  BRANCH    UPDTFLAG,OCSC0500            * no mappings
          CALL      UPOPCSC1
.
          MOVE      SAVKEY20,KEY20
          GOTO      OCSC0200                     * get next record
.
OCSC9999  RETURN
+
.*****************************************************************************
.*                              OCSU0000              Called by: PROC0000    *
.*       Loop through oprcsuaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
OCSU0000  DISPLAY   *P12:24,*EL,"oprcsuaf:";
          MOVE      SP70,KEY16
OCSU0200  CALL      RSOPCSU1                     * position at start of file
OCSU0500  CALL      RKOPCSU1                     * read next record
          BRANCH    OVRCD,OCSU9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPCSDATE,OPCSDOCT,OPCSTYPE,OPCSTIME
          PACK      SAVKEY16,OPCSDATE,OPCSDOCT,OPCSTYPE,OPCSTIME
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPCSDOCT
.
          PACK      CODEDFLD,OPCSDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OCSU9000                * no
.
          MOVE      NEWCODE,OPCSDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OCSU9000  BRANCH    UPDTFLAG,OCSU0500            * no mappings
          CALL      UPOPCSU1
.
          MOVE      SAVKEY16,KEY16
          GOTO      OCSU0200                     * get next record
.
OCSU9999  RETURN
+
.*****************************************************************************
.*                              OCTS0000              Called by: PROC0000    *
.*       Loop through oprctsaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
OCTS0000  DISPLAY   *P12:24,*EL,"oprctsaf:";
          MOVE      SP70,KEY18
OCTS0200  CALL      RSOPCTS1                     * position at start of file
OCTS0500  CALL      RKOPCTS1                     * read next record
          BRANCH    OVRCD,OCTS9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,OPCTDATE,OPCTCLIN,OPCTPERD,OPCTUSER
          PACK      SAVKEY18,OPCTDATE,OPCTCLIN,OPCTPERD,OPCTUSER
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check OPCTCLIN
.         
          PACK      CODEDFLD,OPCTCLIN,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OCTS9000                * no
.         
          MOVE      NEWCODE,OPCTCLIN             * yes - load new code
.         
.         Check if there were any mappings and if so, update the record
.
OCTS9000  BRANCH    UPDTFLAG,OCTS0500            * no mappings
          CALL      UPOPCTS1
.
          MOVE      SAVKEY18,KEY18
          GOTO      OCTS0200                     * get next record
.
OCTS9999  RETURN
+
.*****************************************************************************
.*                              ODEA0000              Called by: PROC0000    *
.*       Loop through oprdetaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
ODEA0000  DISPLAY   *P12:24,*EL,"oprdetaf:";
          MOVE      SP70,KEY26
ODEA0200  CALL      RSOPDEA1                     * position at start of file
ODEA0500  CALL      RKOPDEA1                     * read next record
          BRANCH    OVRCD,ODEA9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,OPDAHOSP,OPDADATE,OPDATIME,OPDACLIN:
                                       DOPDASTA,OPDACASE
          PACK      SAVKEY26,OPDAHOSP,OPDADATE,OPDATIME,OPDACLIN,DOPDASTA:
                                       OPDACASE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check OPDACLIN
.         
          PACK      CODEDFLD,OPDACLIN,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODEA9000                * no
.
          MOVE      NEWCODE,OPDACLIN             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
ODEA9000  BRANCH    UPDTFLAG,ODEA0500            * no mappings
          CALL      UPOPDEA1
.
          MOVE      SAVKEY23,KEY23
          GOTO      ODEA0200                     * get next record
.
ODEA9999  RETURN
+
.*****************************************************************************
.*                              ODEB0000              Called by: PROC0000    *
.*       Loop through oprdetbf and fix any relevant doctor fields            *
.*****************************************************************************
.
ODEB0000  DISPLAY   *P12:24,*EL,"oprdetbf:";
          MOVE      SP70,KEY11
ODEB0200  CALL      RSOPDEB1                     * position at start of file
ODEB0500  CALL      RKOPDEB1                     * read next record
          BRANCH    OVRCD,ODEB9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPDBUNIQ,OPDBTEAM
          PACK      SAVKEY11,OPDBUNIQ,OPDBTEAM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPDBDCC1
.
          PACK      CODEDFLD,OPDBDCC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODEB1000                * no
.
          MOVE      NEWCODE,OPDBDCC1             * yes - load new code
.
.         Check OPDBDCC2
.
ODEB1000  PACK      CODEDFLD,OPDBDCC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODEB2000                * no
.
          MOVE      NEWCODE,OPDBDCC2             * yes - load new code
.
.         Check OPDBDCC3
.
ODEB2000  PACK      CODEDFLD,OPDBDCC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODEB3000                * no
.
          MOVE      NEWCODE,OPDBDCC3             * yes - load new code
.
.         Check OPDBDCC4
.
ODEB3000  PACK      CODEDFLD,OPDBDCC4,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODEB4000                * no
.
          MOVE      NEWCODE,OPDBDCC4             * yes - load new code
.
.         Check OPDBDCC5
.
ODEB4000  PACK      CODEDFLD,OPDBDCC5,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODEB5000                * no
.
          MOVE      NEWCODE,OPDBDCC5             * yes - load new code
.
.         Check OPDBDCC6
.
ODEB5000  PACK      CODEDFLD,OPDBDCC6,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODEB6000                * no
.
          MOVE      NEWCODE,OPDBDCC6             * yes - load new code
.
.         Check OPDBDCC7
.         
ODEB6000  PACK      CODEDFLD,OPDBDCC7,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODEB7000                * no
.
          MOVE      NEWCODE,OPDBDCC7             * yes - load new code
.
.         Check OPDBDCC8
.
ODEB7000  PACK      CODEDFLD,OPDBDCC8,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODEB9000                * no
.
          MOVE      NEWCODE,OPDBDCC8             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
ODEB9000  BRANCH    UPDTFLAG,ODEB0500            * no mappings
          CALL      UPOPDEB1
.
          MOVE      SAVKEY11,KEY11
          GOTO      ODEB0200                     * get next record
.
ODEB9999  RETURN
+
.*****************************************************************************
.*                              ODLV0000              Called by: PROC0000    *
.*       Loop through oprdlvaf and fix any relevant doctor fields            *
.*****************************************************************************
.
ODLV0000  DISPLAY   *P12:24,*EL,"oprdlvaf:";
          MOVE      SP70,KEY14
ODLV0200  CALL      RSOPDLV1                     * position at start of file
ODLV0500  CALL      RKOPDLV1                     * read next record
          BRANCH    OVRCD,ODLV9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPDVDOCT,OPDVFDTE
          PACK      SAVKEY14,OPDVDOCT,OPDVFDTE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPDVDOCT
.
          PACK      CODEDFLD,OPDVDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODLV9000                * no
.
          MOVE      NEWCODE,OPDVDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
ODLV9000  BRANCH    UPDTFLAG,ODLV0500            * no mappings
          CALL      UPOPDLV1
.
          MOVE      SAVKEY14,KEY14
          GOTO      ODLV0200                     * get next record
.
ODLV9999  RETURN
+
.*****************************************************************************
.*                              ODPF0000              Called by: PROC0000    *
.*       Loop through oprdpfaf and fix any relevant doctor fields            *
.*****************************************************************************
.
ODPF0000  DISPLAY   *P12:24,*EL,"oprdpfaf:";
          MOVE      SP70,KEY34
ODPF0200  CALL      RSOPDPF1                     * position at start of file
ODPF0500  CALL      RKOPDPF1                     * read next record
          BRANCH    OVRCD,ODPF9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,OPDFCODE,OPDFPREF,OPDFCLSS,OPDFTYPE:
                                       OPDFITEM
          PACK      SAVKEY34,OPDFCODE,OPDFPREF,OPDFCLSS,OPDFTYPE:
                                       OPDFITEM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPDFCODE
.
          PACK      CODEDFLD,OPDFCODE,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODPF9000                * no
.
          MOVE      NEWCODE,OPDFCODE             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
ODPF9000  BRANCH    UPDTFLAG,ODPF0500            * no mappings
          CALL      UPOPDPF1
.
          MOVE      SAVKEY34,KEY34
          GOTO      ODPF0200                     * get next record
.
ODPF9999  RETURN
+
.*****************************************************************************
.*                              ODPH0000              Called by: PROC0000    *
.*       Loop through oprdphaf and fix any relevant doctor fields            *
.*****************************************************************************
.
ODPH0000  DISPLAY   *P12:24,*EL,"oprdphaf:";
          MOVE      SP70,KEY15
ODPH0200  CALL      RSOPDPH1                     * position at start of file
ODPH0500  CALL      RKOPDPH1                     * read next record
          BRANCH    OVRCD,ODPH9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPDHCODE,OPDHPREF
          PACK      SAVKEY15,OPDHCODE,OPDHPREF
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPDHCODE
.
          PACK      CODEDFLD,OPDHCODE,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODPH9000                * no
.
          MOVE      NEWCODE,OPDHCODE             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
ODPH9000  BRANCH    UPDTFLAG,ODPH0500            * no mappings
          CALL      UPOPDPH1
.
          MOVE      SAVKEY15,KEY15
          GOTO      ODPH0200                     * get next record
.
ODPH9999  RETURN
+
.*****************************************************************************
.*                              OPCM0000              Called by: PROC0000    *
.*       Loop through oprpcmaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OPCM0000  DISPLAY   *P12:24,*EL,"oprpcmaf:";
          MOVE      SP70,KEY21
OPCM0200  CALL      RSOPPCM1                     * position at start of file
OPCM0500  CALL      RKOPPCM1                     * read next record
          BRANCH    OVRCD,OPCM9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPPCCODE,OPPCPREF,OPPCCLSS,DOPPCLIN
          PACK      SAVKEY21,OPPCCODE,OPPCPREF,OPPCCLSS,DOPPCLIN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPPCCODE
.
          PACK      CODEDFLD,OPPCCODE,SP10       * load coded field          
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OPCM9000                * no
.
          MOVE      NEWCODE,OPPCCODE             * yes - load new code
.         
.         Check if there were any mappings and if so, update the record
.
OPCM9000  BRANCH    UPDTFLAG,OPCM0500            * no mappings
          CALL      UPOPPCM1
.
          MOVE      SAVKEY21,KEY21
          GOTO      OPCM0200                     * get next record
.
OPCM9999  RETURN
+
.*****************************************************************************
.*                              OPRF0000              Called by: PROC0000    *
.*       Loop through oprprfaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OPRF0000  DISPLAY   *P12:24,*EL,"oprprfaf:";
          MOVE      SP70,KEY32
OPRF0200  CALL      RSOPPRF1                     * position at start of file
OPRF0500  CALL      RKOPPRF1                     * read next record
          BRANCH    OVRCD,OPRF9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPPRUNIQ,OPPRTEAM,OPPRPREF,OPPRDCOD
          PACK      SAVKEY32,OPPRUNIQ,OPPRTEAM,OPPRPREF,OPPRDCOD
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPPRDCOD
.
          PACK      CODEDFLD,OPPRDCOD,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OPRF9000                * no
.
          MOVE      NEWCODE,OPPRDCOD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OPRF9000  BRANCH    UPDTFLAG,OPRF0500            * no mappings
          CALL      UPOPPRF1
.
          MOVE      SAVKEY32,KEY32
          GOTO      OPRF0200                     * get next record
.
OPRF9999  RETURN
+
.*****************************************************************************
.*                              OQUE0000              Called by: PROC0000    *
.*       Loop through oprqueaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OQUE0000  DISPLAY   *P12:24,*EL,"oprqueaf:";
          MOVE      SP70,KEY20
          CALL      RSOPQUE1                     * position at start of file
OQUE0500  CALL      RKOPQUE1                     * read next record
          BRANCH    OVRCD,OQUE9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,DOPQUMES
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPDACLIN
.
          PACK      CODEDFLD,OPDACLIN,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OQUE9000                * no
.
          MOVE      NEWCODE,OPDACLIN             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OQUE9000  BRANCH    UPDTFLAG,OQUE0500            * no mappings
          CALL      UPOPQUE1
.
          GOTO      OQUE0500                     * get next record
.
OQUE9999  RETURN
+
.*****************************************************************************
.*                              ORAL0000              Called by: PROC0000    *
.*       Loop through oprralaf and fix any relevant doctor fields            *
.*****************************************************************************
.
ORAL0000  DISPLAY   *P12:24,*EL,"oprralaf:";
          MOVE      SP70,KEY30
ORAL0200  CALL      RSOPRAL1                     * position at start of file
ORAL0500  CALL      RKOPRAL1                     * read next record
          BRANCH    OVRCD,ORAL9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPRLDATE,OPRLSTOR,OPRLSUOR,OPRLSTNW:
                                       OPRLSUNW
          PACK      SAVKEY30,OPRLDATE,OPRLSTOR,OPRLSUOR,OPRLSTNW:
                                       OPRLSUNW
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPRLSUOR
.
          PACK      CODEDFLD,OPRLSUOR,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ORAL1000                * no
.
          MOVE      NEWCODE,OPRLSUOR             * yes - load new code
.
.         Check OPRLSUNW
.
ORAL1000  PACK      CODEDFLD,OPRLSUNW,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ORAL9000                * no
.
          MOVE      NEWCODE,OPRLSUNW             * yes - load new c
.
.         Check if there were any mappings and if so, update the record
.
ORAL9000  BRANCH    UPDTFLAG,ORAL0500            * no mappings
          CALL      UPOPRAL1
.
          MOVE      SAVKEY30,KEY30
          GOTO      ORAL0200                     * get next record
.
ORAL9999  RETURN
+
.*****************************************************************************
.*                              OREQ0000              Called by: PROC0000    *
.*       Loop through oprreqaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
OREQ0000  DISPLAY   *P12:24,*EL,"oprreqaf:";
          MOVE      SP70,KEY36
OREQ0200  CALL      RSOPREQ1                     * position at start of file
OREQ0500  CALL      RKOPREQ1                     * read next record
          BRANCH    OVRCD,OREQ9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,OPRQUNIQ,OPRQTEAM,OPRQDCOD,OPRQCLSS:
                                       OPRQTYPE,OPRQITEM
          PACK      SAVKEY36,OPRQUNIQ,OPRQTEAM,OPRQDCOD,OPRQCLSS:
                                       OPRQTYPE,OPRQITEM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPRQDCOD
.
          PACK      CODEDFLD,OPRQDCOD,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OREQ9000                * no
.
          MOVE      NEWCODE,OPRQDCOD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OREQ9000  BRANCH    UPDTFLAG,OREQ0500            * no mappings
          CALL      UPOPREQ1
.
          MOVE      SAVKEY36,KEY36
          GOTO      OREQ0200                     * get next record
.
OREQ9999  RETURN
+
.*****************************************************************************
.*                              OSEM0000              Called by: PROC0000    *
.*       Loop through oprsemaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
OSEM0000  DISPLAY   *P12:24,*EL,"oprsemaf:";
          MOVE      SP70,KEY21
OSEM0200  CALL      RSOPSEM1                     * position at start of file
OSEM0500  CALL      RKOPSEM1                     * read next record
          BRANCH    OVRCD,OSEM9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,OPSMCLIN,DOPSMDAY,OPSMTIME
          PACK      SAVKEY21,OPSMHOSP,OPSMCLIN,DOPSMDAY,OPSMTIME,OPSMTHET
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check OPSMCLIN
.         
          PACK      CODEDFLD,OPSMCLIN,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSEM1000                * no
.         
          MOVE      NEWCODE,OPSMCLIN             * yes - load new code
.
.         Check OPSMXDOC
.
OSEM1000  PACK      CODEDFLD,OPSMXDOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSEM9000                * no
.
          MOVE      NEWCODE,OPSMXDOC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OSEM9000  BRANCH    UPDTFLAG,OSEM0500            * no mappings
          CALL      UPOPSEM1
.
          MOVE      SAVKEY21,KEY21
          GOTO      OSEM0200                     * get next record
.
OSEM9999  RETURN
+
.*****************************************************************************
.*                              OSES0000              Called by: PROC0000    *
.*       Loop through oprsesaf and fix any relevant doctor fields            *
.*****************************************************************************
.
OSES0000  DISPLAY   *P12:24,*EL,"oprsesaf:";
          MOVE      SP70,KEY22
OSES0200  CALL      RSOPSES1                     * position at start of file
OSES0500  CALL      RKOPSES1                     * read next record
          BRANCH    OVRCD,OSES9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPSEHOSP,OPSEDATE,OPSETIME,OPSECLIN
          PACK      SAVKEY22,OPSEHOSP,OPSEDATE,OPSETIME,OPSECLIN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPSECLIN
.
          PACK      CODEDFLD,OPSECLIN,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES1000                * no
.
          MOVE      NEWCODE,OPSECLIN             * yes - load new code
.
.         Check OPSEANAE
.
OSES1000  PACK      CODEDFLD,OPSEANAE,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES2000                * no
.
          MOVE      NEWCODE,OPSEANAE             * yes - load new code
.
.         Check OPSEDCC1
.
OSES2000  PACK      CODEDFLD,OPSEDCC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES3000                * no
.
          MOVE      NEWCODE,OPSEDCC1             * yes - load new code
.
.         Check OPSEDCC2
.
OSES3000  PACK      CODEDFLD,OPSEDCC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES4000                * no
.
          MOVE      NEWCODE,OPSEDCC2             * yes - load new code
.
.         Check OPSEDCC3
.
OSES4000  PACK      CODEDFLD,OPSEDCC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES5000                * no
.
          MOVE      NEWCODE,OPSEDCC3             * yes - load new code
.
.         Check OPSEDCC4
.
OSES5000  PACK      CODEDFLD,OPSEDCC4,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES6000                * no
.
          MOVE      NEWCODE,OPSEDCC4             * yes - load new code
.
.         Check OPSEDCC5
.
OSES6000  PACK      CODEDFLD,OPSEDCC5,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES7000                * no
.
          MOVE      NEWCODE,OPSEDCC5             * yes - load new code
.
.         Check OPSEDCC6
.
OSES7000  PACK      CODEDFLD,OPSEDCC6,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES8000                * no
.
          MOVE      NEWCODE,OPSEDCC6             * yes - load new code
.
.         Check OPSEDCC7
.
OSES8000  PACK      CODEDFLD,OPSEDCC7,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES8100                * no
.
          MOVE      NEWCODE,OPSEDCC7             * yes - load new code
.
.         Check OPSEDCC8
.
OSES8100  PACK      CODEDFLD,OPSEDCC8,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES8200                * no
.
          MOVE      NEWCODE,OPSEDCC8             * yes - load new code
.
.         Check OPSEXDOC
.
OSES8200  PACK      CODEDFLD,OPSEXDOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES9000                * no
.
          MOVE      NEWCODE,OPSEXDOC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OSES9000  BRANCH    UPDTFLAG,OSES0500            * no mappings
          CALL      UPOPSES1
.
          MOVE      SAVKEY22,KEY22
          GOTO      OSES0200                     * get next record
.
OSES9999  RETURN
+
.*****************************************************************************
.*                              OSOS0000              Called by: PROC0000    *
.*       Loop through oprsosaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
OSOS0000  DISPLAY   *P12:24,*EL,"oprsosaf:";
          MOVE      SP70,KEY21
OSOS0200  CALL      RSOPSOS1                     * position at start of file
OSOS0500  CALL      RKOPSOS1                     * read next record
          BRANCH    OVRCD,OSOS9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,OPSPDATE,OPSPDOCT,OPSPOPER
          PACK      SAVKEY21,OPSPDATE,OPSPDOCT,OPSPOPER
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPSPDOCT
.
          PACK      CODEDFLD,OPSPDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSOS9000                * no
.
          MOVE      NEWCODE,OPSPDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OSOS9000  BRANCH    UPDTFLAG,OSOS0500            * no mappings
          CALL      UPOPSOS1
.
          MOVE      SAVKEY21,KEY21
          GOTO      OSOS0200                     * get next record
.
OSOS9999  RETURN
+
.*****************************************************************************
.*                              OSOU0000              Called by: PROC0000    *
.*       Loop through oprsouaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
OSOU0000  DISPLAY   *P12:24,*EL,"oprsouaf:";
          MOVE      SP70,KEY19
OSOU0200  CALL      RSOPSOU1                     * position at start of file
OSOU0500  CALL      RKOPSOU1                     * read next record
          BRANCH    OVRCD,OSOU9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,OPSODATE,OPSODOCT,OPSOTYPE,OPSOOTYP:
                                       DOPSOATY,DOPSOOWN,DOPSOTRN
          PACK      SAVKEY19,OPSODATE,OPSODOCT,OPSOTYPE,OPSOOTYP:
                                       DOPSOATY,DOPSOOWN,DOPSOTRN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check OPSODOCT
.
          PACK      CODEDFLD,OPSODOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSOU9000                * no
.
          MOVE      NEWCODE,OPSODOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OSOU9000  BRANCH    UPDTFLAG,OSOU0500            * no mappings
          CALL      UPOPSOU1
.
          MOVE      SAVKEY19,KEY19
          GOTO      OSOU0200                     * get next record
.
OSOU9999  RETURN
+
.*****************************************************************************
.*                              OTSM0000              Called by: PROC0000    *
.*       Loop through oprtsmaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
OTSM0000  DISPLAY   *P12:24,*EL,"oprtsmaf:";
          MOVE      SP70,KEY35
OTSM0200  CALL      RSOPTSM1                     * position at start of file
OTSM0500  CALL      RKOPTSM1                     * read next record
          BRANCH    OVRCD,OTSM9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPTSUNID,OPTSTMNO,DOPTSSIN,OPTSSCDE:
                                       OPTSSDAT,OPTSSTIM
          PACK      SAVKEY35,OPTSUNID,OPTSTMNO,DOPTSSIN,OPTSSCDE:
                                       OPTSSDAT,OPTSSTIM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPTSSCDE
.
          PACK      CODEDFLD,OPTSSCDE,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OTSM9000                * no
.
          MOVE      NEWCODE,OPTSSCDE             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OTSM9000  BRANCH    UPDTFLAG,OTSM0500            * no mappings
          CALL      UPOPTSM1
.
          MOVE      SAVKEY35,KEY35
          GOTO      OTSM0200                     * get next record
.
OTSM9999  RETURN
+
.*****************************************************************************
.*                              MMAS0000              Called by: PROC0000    *
.*       Loop through mammasxf and fix any relevant doctor fields            *
.*****************************************************************************
.         
MMAS0000  COMPARE   ONE,MAMFLAG
          GOTO      MMAS9999 IF NOT EQUAL
.
          DISPLAY   *P12:24,*EL,"mammasxf:";
          MOVE      SP70,KEY8
          CALL      RDSMASX1                     * position at start of file
MMAS0500  CALL      RDKMASX1                     * read next record
          BRANCH    OVRCD,MMAS9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DMAXNO
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check MAXRDOCT
.
          PACK      CODEDFLD,MAXRDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MMAS9000                * no
.
          MOVE      NEWCODE,MAXRDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MMAS9000  BRANCH    UPDTFLAG,MMAS0500            * no mappings
          CALL      UPMASX1
.
          GOTO      MMAS0500                     * get next record
.
MMAS9999  RETURN
+
.*****************************************************************************
.*                              AVX10000              Called by: PROC0000    *
.*       Loop through arcvx1af and fix any relevant doctor fields            *
.*****************************************************************************
.         
AVX10000  COMPARE   ONE,ARCFLAG
          GOTO      AVX19999 IF NOT EQUAL
.
          DISPLAY   *P12:24,*EL,"arcvx1af:";
          MOVE      SP70,KEY8
          CALL      RSARVX11                     * position at start of file
AVX10500  CALL      RKARVX11                     * read next record
          BRANCH    OVRCD,AVX19999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,ARVXVISN
          PACK      SAVKEY8,ARVXVISN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check ARVXDOCA
.
          PACK      CODEDFLD,ARVXDOCA,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AVX11000                * no
.
          MOVE      NEWCODE,ARVXDOCA             * yes - load new code
.
.         Check ARVXDOCT
.
AVX11000  PACK      CODEDFLD,ARVXDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AVX12000                * no
.
          MOVE      NEWCODE,ARVXDOCT             * yes - load new code
.
.         Check ARVXRHC1
.
AVX12000  PACK      CODEDFLD,ARVXRHC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AVX13000                * no
.
          MOVE      NEWCODE,ARVXRHC1             * yes - load new code
.
.         Check ARVXRHC2
.
AVX13000  PACK      CODEDFLD,ARVXRHC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AVX14000                * no
.
          MOVE      NEWCODE,ARVXRHC2             * yes - load new code
.
.         Check ARVXRHC3
.         
AVX14000  PACK      CODEDFLD,ARVXRHC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AVX15000                * no
.
          MOVE      NEWCODE,ARVXRHC3             * yes - load new code
.
.         Check ARVXRHC4
.         
AVX15000  PACK      CODEDFLD,ARVXRHC4,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AVX16000                * no
.
          MOVE      NEWCODE,ARVXRHC4             * yes - load new code
.
.         Check ARVXEDC1
.
AVX16000  PACK      CODEDFLD,ARVXEDC1,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AVX17000                * no
.
          MOVE      NEWCODE,ARVXEDC1             * yes - load new code
.
.         Check ARVXEDC2
.         
AVX17000  PACK      CODEDFLD,ARVXEDC2,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AVX18000                * no
.
          MOVE      NEWCODE,ARVXEDC2             * yes - load new code
.
.         Check ARVXEDC3
.         
AVX18000  PACK      CODEDFLD,ARVXEDC3,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,AVX19000                * no
.
          MOVE      NEWCODE,ARVXEDC3             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
AVX19000  BRANCH    UPDTFLAG,AVX10500            * no mappings
          CALL      UPARVX11
.
          GOTO      AVX10500                     * get next record
.
AVX19999  RETURN
+
.*****************************************************************************
.*                              MCFN0000              Called by: PROC0000    *
.*       Loop through mltcfnaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
MCFN0000  DISPLAY   *P12:24,*EL,"mltcfnaf:";
          MOVE      SP70,KEY40
MCFN0200  CALL      RSMLCFN1                     * position at start of file
MCFN0500  CALL      RKMLCFN1                     * read next record
          BRANCH    OVRCD,MCFN9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,MLCFHOSP,MLCFCLMC,MLCFCNTR,MLCFPROC:
                                       MLCFSTYP,MLCFSDAT,MLCFHCPC
          PACK      SAVKEY40,MLCFHOSP,MLCFCLMC,MLCFCNTR,MLCFPROC:
                                       MLCFSTYP,MLCFSDAT,MLCFHCPC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check MLCFHCPC
.
          PACK      CODEDFLD,MLCFHCPC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MCFN9000                * no
.
          MOVE      NEWCODE,MLCFHCPC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MCFN9000  BRANCH    UPDTFLAG,MCFN0500            * no mappings
          CALL      UPMLCFN1
.
          MOVE      SAVKEY40,KEY40
          GOTO      MCFN0200                     * get next record
.
MCFN9999  RETURN
+
.*****************************************************************************
.*                              MHCP0000              Called by: PROC0000    *
.*       Loop through mlthcpaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
MHCP0000  DISPLAY   *P12:24,*EL,"mlthcpaf:";
          MOVE      SP70,KEY13
MHCP0200  CALL      RSMLHCP1                     * position at start of file
MHCP0500  CALL      RKMLHCP1                     * read next record
          BRANCH    OVRCD,MHCP9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,MLHCHOSP,MLHCHCPC
          PACK      SAVKEY13,MLHCHOSP,MLHCHCPC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check MLHCHCPC
.
          PACK      CODEDFLD,MLHCHCPC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,MHCP9000                * no
.
          MOVE      NEWCODE,MLHCHCPC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
MHCP9000  BRANCH    UPDTFLAG,MHCP0500            * no mappings
          CALL      UPMLHCP1
.
          MOVE      SAVKEY13,KEY13
          GOTO      MHCP0200                     * get next record
.
MHCP9999  RETURN
+
.*****************************************************************************
.*                              NPIC0000              Called by: PROC0000    *
.*       Loop through nzppicaf and fix any relevant doctor fields            *
.*****************************************************************************
.
NPIC0000  DISPLAY   *P12:24,*EL,"nzppicaf:";
          MOVE      SP70,KEY22
          CALL      RSNZPIC1                     * position at start of file
NPIC0500  CALL      RKNZPIC1                     * read next record
          BRANCH    OVRCD,NPIC9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,NZPIADMN,NZPIINVN,NZPIUNIQ
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check NZPISURG
.
          PACK      CODEDFLD,NZPISURG,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,NPIC1000                * no
.
          MOVE      NEWCODE,NZPISURG             * yes - load new code
.
.         Check NZPIANAE
.
NPIC1000  PACK      CODEDFLD,NZPIANAE,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,NPIC9000                * no
.
          MOVE      NEWCODE,NZPIANAE             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
NPIC9000  BRANCH    UPDTFLAG,NPIC0500            * no mappings
          CALL      UPNZPIC1
.
          GOTO      NPIC0500                     * get next record
.
NPIC9999  RETURN
+
.*****************************************************************************
.*                              NRPI0000              Called by: PROC0000    *
.*       Loop through nzprpiaf and fix any relevant doctor fields            *
.*****************************************************************************
.
NRPI0000  DISPLAY   *P12:24,*EL,"nzprpiaf:";
          MOVE      SP70,KEY36
          CALL      RSNZRPI1                     * position at start of file
NRPI0500  CALL      RKNZRPI1                     * read next record
          BRANCH    OVRCD,NRPI9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,NZRPADMN,NZRPINVN,NZRPRINV
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check NZRPPCOD
.
          PACK      CODEDFLD,NZRPPCOD,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,NRPI9000                * no
.
          MOVE      NEWCODE,NZRPPCOD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
NRPI9000  BRANCH    UPDTFLAG,NRPI0500            * no mappings
          CALL      UPNZRPI1
.
          GOTO      NRPI0500                     * get next record
.
NRPI9999  RETURN
+
.*****************************************************************************
.*                              NSPR0000              Called by: PROC0000    *
.*       Loop through nzpspraf and fix any relevant doctor fields            *
.*****************************************************************************
.
NSPR0000  DISPLAY   *P12:24,*EL,"nzpspraf:";
          MOVE      SP70,KEY11
          CALL      RSNZSPR1                     * position at start of file
NSPR0500  CALL      RKNZSPR1                     * read next record
          BRANCH    OVRCD,NSPR9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,NZSPADMN,NZSPUNIQ
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check NZSPSURG
.
          PACK      CODEDFLD,NZSPSURG,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,NSPR1000                * no
.
          MOVE      NEWCODE,NZSPSURG             * yes - load new code
.
.         Check NZSPANAE
.
NSPR1000  PACK      CODEDFLD,NZSPANAE,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,NSPR9000                * no
.
          MOVE      NEWCODE,NZSPANAE             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
NSPR9000  BRANCH    UPDTFLAG,NSPR0500            * no mappings
          CALL      UPNZSPR1
.
          GOTO      NSPR0500                     * get next record
.
NSPR9999  RETURN
+
.*****************************************************************************
.*                              PAXE0000              Called by: PROC0000    *
.*       Loop through pataxeaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PAXE0000  DISPLAY   *P12:24,*EL,"pataxeaf:";
          MOVE      SP70,KEY8
          CALL      RSPTAXE1                     * position at start of file
PAXE0500  CALL      RKPTAXE1                     * read next record
          BRANCH    OVRCD,PAXE9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,DPTAXADM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTAXDFPC
.         
          PACK      CODEDFLD,PTAXDFPC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PAXE1000                * no
.
          MOVE      NEWCODE,PTAXDFPC             * yes - load new code
.
.         Check PTAXDFOC
.
PAXE1000  PACK      CODEDFLD,PTAXDFOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PAXE2000                * no
.
          MOVE      NEWCODE,PTAXDFOC             * yes - load new code
.
.         Check PTAXDFDC
.
PAXE2000  PACK      CODEDFLD,PTAXDFDC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PAXE3000                * no
.
          MOVE      NEWCODE,PTAXDFDC             * yes - load new code
.
.         Check PTAXDFBC
.
PAXE3000  PACK      CODEDFLD,PTAXDFBC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PAXE4000                * no
.
          MOVE      NEWCODE,PTAXDFBC             * yes - load new code
.
.         Check PTAXDFAC
.         
PAXE4000  PACK      CODEDFLD,PTAXDFAC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PAXE9000                * no
.
          MOVE      NEWCODE,PTAXDFAC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PAXE9000  BRANCH    UPDTFLAG,PAXE0500            * no mappings
          CALL      UPPTAXE1
.
          GOTO      PAXE0500                     * get next record
.
PAXE9999  RETURN
+
.*****************************************************************************
.*                              PC1S0000              Called by: PROC0000    *
.*       Loop through patc1saf and fix any relevant doctor fields            *
.*****************************************************************************
.
PC1S0000  DISPLAY   *P12:24,*EL,"patc1sad:";
          MOVE      SP70,KEY16
PC1S0200  CALL      RSPTC1S1                     * position at start of file
PC1S0500  CALL      RKPTC1S1                     * read next record
          BRANCH    OVRCD,PC1S9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PTC1DATE,PTC1TYPE,PTC1DOCT,PTC1TYPP
          PACK      SAVKEY16,PTC1DATE,PTC1TYPE,PTC1DOCT,PTC1TYPP
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PTC1DOCT
.
          PACK      CODEDFLD,PTC1DOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PC1S9000                * no
.
          MOVE      NEWCODE,PTC1DOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PC1S9000  BRANCH    UPDTFLAG,PC1S0500            * no mappings
          CALL      UPPTC1S1
.
          MOVE      SAVKEY16,KEY16
          GOTO      PC1S0200                     * get next record
.
PC1S9999  RETURN
+
.*****************************************************************************
.*                              PC2S0000              Called by: PROC0000    *
.*       Loop through patc2saf and fix any relevant doctor fields            *
.*****************************************************************************
.
PC2S0000  DISPLAY   *P12:24,*EL,"patc2sad:";
          MOVE      SP70,KEY15
PC2S0200  CALL      RSPTC2S1                     * position at start of file
PC2S0500  CALL      RKPTC2S1                     * read next record
          BRANCH    OVRCD,PC2S9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PTC2DATE,PTC2CLSS,PTC2DOCT
          PACK      SAVKEY15,PTC2DATE,PTC2CLSS,PTC2DOCT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTC2DOCT
.
          PACK      CODEDFLD,PTC2DOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PC2S9000                * no
.
          MOVE      NEWCODE,PTC2DOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PC2S9000  BRANCH    UPDTFLAG,PC2S0500            * no mappings
          CALL      UPPTC2S1
.
          MOVE      SAVKEY15,KEY15
          GOTO      PC2S0200                     * get next record
.
PC2S9999  RETURN
+
.*****************************************************************************
.*                              PCRC0000              Called by: PROC0000    *
.*       Loop through patcrcaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PCRC0000  DISPLAY   *P12:24,*EL,"patcrcaf:";
          MOVE      SP70,KEY31
PCRC0200  CALL      RSPTCRC1                     * position at start of file
PCRC0500  CALL      RKPTCRC1                     * read next record
          BRANCH    OVRCD,PCRC9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,DPTCRBIL,PTCRDOCT,PTCRREFD,DPTCRCNT
          PACK      SAVKEY31,DPTCRBIL,PTCRDOCT,PTCRREFD,DPTCRCNT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTCRDOCT
.         
          PACK      CODEDFLD,PTCRDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PCRC1000                * no
.         
          MOVE      NEWCODE,PTCRDOCT             * yes - load new code
.
.         Check PTCRREFD
.
PCRC1000  PACK      CODEDFLD,PTCRREFD,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PCRC9000                * no
.
          MOVE      NEWCODE,PTCRREFD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PCRC9000  BRANCH    UPDTFLAG,PCRC0500            * no mappings
          CALL      UPPTCRC1
.
          MOVE      SAVKEY31,KEY31
          GOTO      PCRC0200                     * get next record
.
PCRC9999  RETURN
+
.*****************************************************************************
.*                              PCRD0000              Called by: PROC0000    *
.*       Loop through patcrdaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PCRD0000  DISPLAY   *P12:24,*EL,"patcrdaf:";
          MOVE      SP70,KEY25
          CALL      RSPTCRD1                     * position at start of file
PCRD0500  CALL      RKPTCRD1                     * read next record
          BRANCH    OVRCD,PCRD9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,DPTCDDAD,PTCDPRMM,DPTCDCNR
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTCDDOCC
.         
          PACK      CODEDFLD,PTCDDOCC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PCRD1000                * no
.         
          MOVE      NEWCODE,PTCDDOCC             * yes - load new code
.         
.         Check PTCDDOCN
.
PCRD1000  PACK      CODEDFLD,PTCDDOCN,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PCRD9000                * no
.
          MOVE      NEWCODE,PTCDDOCN             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PCRD9000  BRANCH    UPDTFLAG,PCRD0500            * no mappings
          CALL      UPPTCRD1
.
          GOTO      PCRC0500                     * get next record
.
PCRD9999  RETURN
+
.*****************************************************************************
.*                              PCUN0000              Called by: PROC0000    *
.*       Loop through patcunaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PCUN0000  DISPLAY   *P12:24,*EL,"patcunof:";
          MOVE      SP70,KEY9
PCUN0200  CALL      RDSCUNO1                     * position at start of file
PCUN0500  CALL      RDKCUNO1                     * read next record
          BRANCH    OVRCD,PCUN9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,CUNDOCT,CUNWARD
          PACK      SAVKEY9,CUNDOCT,CUNWARD
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check CUNDOCT
.
          PACK      CODEDFLD,CUNDOCT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PCUN9000                * no
.
          MOVE      NEWCODE,CUNDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PCUN9000  BRANCH    UPDTFLAG,PCUN0500            * no mappings
          CALL      UPCUNO1
.
          MOVE      SAVKEY9,KEY9
          GOTO      PCUN0200                     * get next record
.
PCUN9999  RETURN
+
.*****************************************************************************
.*                              PDFE0000              Called by: PROC0000    *
.*       Loop through patdfeaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PDFE0000  DISPLAY   *P12:24,*EL,"patdfeaf:";
          MOVE      SP70,KEY15
PDFE0200  CALL      RSPTDFE1                     * position at start of file
PDFE0500  CALL      RKPTDFE1                     * read next record
          BRANCH    OVRCD,PDFE9999               * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PTDFDCOD,PTDFPAID,PTDFADMN
          PACK      SAVKEY15,PTDFDCOD,PTDFPAID,PTDFADMN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTDFDCOD
.         
          PACK      CODEDFLD,PTDFDCOD,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDFE9000                * no
.
          MOVE      NEWCODE,PTDFDCOD            * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PDFE9000  BRANCH    UPDTFLAG,PDFE0500            * no mappings
          CALL      UPPTDFE1
.
          MOVE      SAVKEY15,KEY15
          GOTO      PDFE0200                     * get next record
.
PDFE9999  RETURN
+
.*****************************************************************************
.*                              PDKI0000              Called by: PROC0000    *
.*       Loop through patdkiaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PDKI0000  DISPLAY   *P12:24,*EL,"patdkiaf:";
          MOVE      SP70,KEY21
PDKI0200  CALL      RSPTDK1                     * position at start of file
PDKI0500  CALL      RKPTDK1                     * read next record
          BRANCH    OVRCD,PDKI9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PTDKDOC,PTDKKWD
          PACK      SAVKEY21,PTDKDOC,PTDKKWD
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTDKDOC
.         
          PACK      CODEDFLD,PTDKDOC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDKI9000                * no
.         
          MOVE      NEWCODE,PTDKDOC            * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PDKI9000  BRANCH    UPDTFLAG,PDKI0500            * no mappings
          CALL      UPPTDK1 
.
          MOVE      SAVKEY21,KEY21
          GOTO      PDKI0200                     * get next record
.
PDKI9999  RETURN
+
.*****************************************************************************
.*                              PDO10000              Called by: PROC0000    *
.*       Loop through patdo1af and fix any relevant doctor fields            *
.*****************************************************************************
.
PDO10000  DISPLAY   *P12:24,*EL,"patdo1af:";
          MOVE      SP70,KEY6
PDO10200  CALL      RDSDOCT1                    * position at start of file
PDO10500  CALL      RDKDOCT1                    * read next record
          BRANCH    OVRCD,PDO19999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DCODE
          PACK      SAVKEY6,DCODE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check DCODE
.
          PACK      CODEDFLD,DCODE,SP10          * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDO19000                * no
.
          MOVE      NEWCODE,DCODE                * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PDO19000  BRANCH    UPDTFLAG,PDO10500            * no mappings
          CALL      UPDOCT1
.
          MOVE      SAVKEY6,KEY6
          GOTO      PDO10200                     * get next record
.
PDO19999  RETURN
+
.*****************************************************************************
.*                              PDST0000              Called by: PROC0000    *
.*       Loop through patdstaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PDST0000  DISPLAY   *P12:24,*EL,"patdstaf:";
          MOVE      SP70,KEY13
PDST0200  CALL      RDSDSTA1                    * position at start of file
PDST0500  CALL      RDKDSTA1                    * read next record
          BRANCH    OVRCD,PDST9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PTDSYEAR,PTDSPERD,PTDSTYPE,PTDSCODE
          PACK      SAVKEY13,PTDSYEAR,PTDSPERD,PTDSTYPE,PTDSCODE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTDSCODE
.
          PACK      CODEDFLD,PTDSCODE,SP10          * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDST9000                * no
.
          MOVE      NEWCODE,PTDSCODE                * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PDST9000  BRANCH    UPDTFLAG,PDST0500            * no mappings
          CALL      UPDSTA1
.
          MOVE      SAVKEY13,KEY13
          GOTO      PDST0200                     * get next record
.
PDST9999  RETURN
+
.*****************************************************************************
.*                              PDTR0000              Called by: PROC0000    *
.*       Loop through patdtraf and fix any relevant doctor fields            *
.*****************************************************************************
.
PDTR0000  DISPLAY   *P12:24,*EL,"patdtraf:";
          MOVE      SP70,KEY22
          CALL      RDSDTRN1                    * position at start of file
PDTR0500  CALL      RDKDTRN1                    * read next record
          BRANCH    OVRCD,PDTR9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DTADMNO,TREF,DTTRANSN1
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check TDOCTA
.
          PACK      CODEDFLD,TDOCTA,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDTR1000                * no
.
          MOVE      NEWCODE,TDOCTA               * yes - load new code
.
.         Check TDOCTO
.
PDTR1000  PACK      CODEDFLD,TDOCTO,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDTR9000                * no
.
          MOVE      NEWCODE,TDOCTO               * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PDTR9000  BRANCH    UPDTFLAG,PDTR0500            * no mappings
          CALL      UPDTRN1
.
          GOTO      PDTR0500                     * get next record
.
PDTR9999  RETURN
+
.*****************************************************************************
.*                              PIMM0000              Called by: PROC0000    *
.*       Loop through patimmaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PIMM0000  DISPLAY   *P12:24,*EL,"patimmaf:";
          MOVE      SP70,KEY19
          CALL      RSPTIMM1                    * position at start of file
PIMM0500  CALL      RKPTIMM1                    * read next record
          BRANCH    OVRCD,PIMM9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PTIMURNO,PTIMDATE,PTIMTYPE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PTIMPROV
.
          PACK      CODEDFLD,PTIMPROV,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PIMM9000                * no
.
          MOVE      NEWCODE,PTIMPROV               * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PIMM9000  BRANCH    UPDTFLAG,PIMM0500            * no mappings
          CALL      UPPTIMM1
.
          GOTO      PIMM0500                     * get next record
.
PIMM9999  RETURN
+
.*****************************************************************************
.*                              PINP0000              Called by: PROC0000    *
.*       Loop through patinpaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PINP0000  DISPLAY   *P12:24,*EL,"patinpaf:";
          MOVE      SP70,KEY16
          CALL      RSPTINP1                    * position at start of file
PINP0500  CALL      RKPTINP1                    * read next record
          BRANCH    OVRCD,PINP9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,DPTIPADM,PTIPRTYP,DPTIPTRN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTIPADOC
.         
          PACK      CODEDFLD,PTIPADOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PINP1000                * no
.         
          MOVE      NEWCODE,PTIPADOC               * yes - load new code
.
.         Check PTIPDDOC
.
PINP1000  PACK      CODEDFLD,PTIPDDOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PINP2000                * no
.         
          MOVE      NEWCODE,PTIPDDOC               * yes - load new code
.
.         Check PTIPRDOC
.
PINP2000  PACK      CODEDFLD,PTIPRDOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PINP9000                * no
.
          MOVE      NEWCODE,PTIPRDOC               * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PINP9000  BRANCH    UPDTFLAG,PINP0500            * no mappings
          CALL      UPPTINP1
.
          GOTO      PINP0500                     * get next record
.
PINP9999  RETURN
+
.*****************************************************************************
.*                              PMI10000              Called by: PROC0000    *
.*       Loop through patmi1af and fix any relevant doctor fields            *
.*****************************************************************************
.
PMI10000  DISPLAY   *P12:24,*EL,"patmi1af:";
          MOVE      SP70,KEY8
          CALL      RSPTMIS1                    * position at start of file
PMI10500  CALL      RKPTMIS1                    * read next record
          BRANCH    OVRCD,PMI19999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DAADMNO
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ADOCTR
.
          PACK      CODEDFLD,ADOCTR,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PMI11000                * no
.
          MOVE      NEWCODE,ADOCTR               * yes - load new code
.
.         Check ADOCTA
.
PMI11000  PACK      CODEDFLD,ADOCTA,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PMI12000                * no
.
          MOVE      NEWCODE,ADOCTA               * yes - load new code
.
.         Check ADOCTL
.
PMI12000  PACK      CODEDFLD,ADOCTL,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PMI13000                * no
.
          MOVE      NEWCODE,ADOCTL               * yes - load new code
.
.         Check ADOCTT
.         
PMI13000  PACK      CODEDFLD,ADOCTT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PMI14000                * no
.
          MOVE      NEWCODE,ADOCTT               * yes - load new code
.
.         Check PTMIADOC
.
PMI14000  PACK      CODEDFLD,PTMIADOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PMI19000                * no
.
          MOVE      NEWCODE,PTMIADOC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PMI19000  BRANCH    UPDTFLAG,PMI10500            * no mappings
          CALL      UPPTMIS1
.
          GOTO      PMI10500                     * get next record
.
PMI19999  RETURN
+
.*****************************************************************************
.*                              PNAD0000              Called by: PROC0000    *
.*       Loop through patnadaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PNAD0000  DISPLAY   *P12:24,*EL,"patnadaf:";
          MOVE      SP70,KEY16
          CALL      RSPTNAD1                    * position at start of file
PNAD0500  CALL      RKPTNAD1                    * read next record
          BRANCH    OVRCD,PNAD9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PTNDURNO,PTNDRDAT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTNDPROV
.         
          PACK      CODEDFLD,PTNDPROV,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PNAD9000                * no
.
          MOVE      NEWCODE,PTNDPROV               * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PNAD9000  BRANCH    UPDTFLAG,PNAD0500            * no mappings
          CALL      UPPTNAD1
.
          GOTO      PNAD0500                     * get next record
.
PNAD9999  RETURN
+
.*****************************************************************************
.*                              PPER0000              Called by: PROC0000    *
.*       Loop through patperaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PPER0000  DISPLAY   *P12:24,*EL,"patperss:";
          MOVE      SP70,KEY12
PPER0200  CALL      RDSPERS1                    * position at start of file
PPER0500  CALL      RDKPERS1                    * read next record
          BRANCH    OVRCD,PPER9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PECODE,PETYPE,DPEPAGE,DPELINE
          PACK      SAVKEY12,PECODE,PETYPE,DPEPAGE,DPELINE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PECODE
.
          PACK      CODEDFLD,PECODE,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PPER9000                * no
.
          MOVE      NEWCODE,PECODE               * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PPER9000  BRANCH    UPDTFLAG,PPER0500            * no mappings
          CALL      UPPERS1
.
          MOVE      SAVKEY12,KEY12
          GOTO      PPER0200                     * get next record
.
PPER9999  RETURN
+
.*****************************************************************************
.*                              PPRV0000              Called by: PROC0000    *
.*       Loop through patprvaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PPRV0000  DISPLAY   *P12:24,*EL,"patprvaf:";
          MOVE      SP70,KEY6
PPRV0200  CALL      RSPTPRV1                    * position at start of file
PPRV0500  CALL      RKPTPRV1                    * read next record
          BRANCH    OVRCD,PPRV9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PTPVCODE
          PACK      SAVKEY6,PTPVCODE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTPVCODE
.
          PACK      CODEDFLD,PTPVCODE,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PPRV9000                * no
.
          MOVE      NEWCODE,PTPVCODE             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PPRV9000  BRANCH    UPDTFLAG,PPRV0500            * no mappings
          CALL      UPPTPRV1
.
          MOVE      SAVKEY6,KEY6
          GOTO      PPRV0200                     * get next record
.
PPRV9999  RETURN
+
.*****************************************************************************
.*                              PSQA0000              Called by: PROC0000    *
.*       Loop through patsqaaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
.PSQA0000  DISPLAY   *P12:24,*EL,"patsqaaf:";
.          MOVE      SP70,KEY10
.PSQA0200  CALL      RSPTSQA1                    * position at start of file
.PSQA0500  CALL      RKPTSQA1                    * read next record
.          BRANCH    OVRCD,PSQA9999              * eof - finished
.         
.          DISPLAY   *P22:24,*EL,*V2LON,PTSQCODE,PTSQTCOM,PTSQTCOD
.          PACK      SAVKEY10,PTSQCODE,PTSQTCOM,PTSQTCOD
.          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTSQCODE
.
.          PACK      CODEDFLD,PTSQCODE,SP10         * load coded field
.          CALL      CMAP0000                     * mapping required ?
.          BRANCH    EXIT,PSQA9000                * no
.
.          MOVE      NEWCODE,PTSQCODE             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
.PSQA9000  BRANCH    UPDTFLAG,PSQA0500            * no mappings
.          CALL      UPPTSQA1
.
.          MOVE      SAVKEY10,KEY10
.          GOTO      PSQA0200                     * get next record
.
.PSQA9999  RETURN
+
.*****************************************************************************
.*                              PTRN0000              Called by: PROC0000    *
.*       Loop through pattranf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PTRN0000  DISPLAY   *P12:24,*EL,"pattranf:";
          MOVE      SP70,KEY30
          CALL      RDSTRAN1                    * position at start of file
PTRN0500  CALL      RDKTRAN1                    * read next record
          BRANCH    OVRCD,PTRN9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,TWARD,TBED,TDATE,TTIME,DTADMN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check TADOCT
.         
          PACK      CODEDFLD,TADOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PTRN9000                * no
.
          MOVE      NEWCODE,TADOCT               * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PTRN9000  BRANCH    UPDTFLAG,PTRN0500            * no mappings
          PACK      TRCDATE,CCC,CYY,CMM,CDD
          REP       " 0",TRCDATE
          CLOCK     TIME,TRCTIME
          MOVE      WBSEUID,PTTRUUID
.
          CALL      UPTRAN1
.
          GOTO      PTRN0500                     * get next record
.
PTRN9999  RETURN
+
.*****************************************************************************
.*                              PVIS0000              Called by: PROC0000    *
.*       Loop through patvisaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PVIS0000  DISPLAY   *P12:24,*EL,"patvisaf:";
          MOVE      SP70,KEY8
          CALL      RSPTVIS1                    * position at start of file
PVIS0500  CALL      RKPTVIS1                    * read next record
          BRANCH    OVRCD,PVIS9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,DPVIBILL
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PVIDOCT
.
          PACK      CODEDFLD,PVIDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PVIS9000                * no
.
          MOVE      NEWCODE,PVIDOCT               * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PVIS9000  BRANCH    UPDTFLAG,PVIS0500            * no mappings
          CALL      UPPTVIS1
.
          GOTO      PVIS0500                     * get next record
.
PVIS9999  RETURN
+
.*****************************************************************************
.*                              PBDC0000              Called by: PROC0000    *
.*       Loop through pmsbdcaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PBDC0000  DISPLAY   *P12:24,*EL,"pmsbdcaf:";
          MOVE      SP70,KEY22
          CALL      RSPMBDC1                    * position at start of file
PBDC0500  CALL      RKPMBDC1                    * read next record
          BRANCH    OVRCD,PBDC9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMBCWARD,PMBCBED,PMBCFRDT,PMBCFRTM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PMBCDOCT
.
          PACK      CODEDFLD,PMBCDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PBDC9000                * no
.
          MOVE      NEWCODE,PMBCDOCT              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PBDC9000  BRANCH    UPDTFLAG,PBDC0500            * no mappings
          CALL      UPPMBDC1
.
          GOTO      PBDC0500                     * get next record
.
PBDC9999  RETURN
+
.*****************************************************************************
.*                              PBRQ0000              Called by: PROC0000    *
.*       Loop through pmsbrqaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PBRQ0000  DISPLAY   *P12:24,*EL,"pmsbrqaf:";
          MOVE      SP70,KEY24
          CALL      RSPMBRQ1                    * position at start of file
PBRQ0500  CALL      RKPMBRQ1                    * read next record
          BRANCH    OVRCD,PBRQ9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMBRVISN,PMBRREQD,PMBRREQT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PMBRRHCP
.
          PACK      CODEDFLD,PMBRRHCP,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PBRQ9000                * no
.
          MOVE      NEWCODE,PMBRRHCP              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PBRQ9000  BRANCH    UPDTFLAG,PBRQ0500            * no mappings
          CALL      UPPMBRQ1
.
          GOTO      PBRQ0500                     * get next record
.
PBRQ9999  RETURN
+
.*****************************************************************************
.*                              PDLT0000              Called by: PROC0000    *
.*       Loop through pmsdltaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PDLT0000  DISPLAY   *P12:24,*EL,"pmsdltaf:";
          MOVE      SP70,KEY4
          CALL      RSPMDLT1                    * position at start of file
PDLT0500  CALL      RKPMDLT1                    * read next record
          BRANCH    OVRCD,PDLT9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMDSSELI
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PMDSHCPF
.
          PACK      CODEDFLD,PMDSHCPF,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDLT1000                * no
.
          MOVE      NEWCODE,PMDSHCPF              * yes - load new code
.
.         Check PMDSHCPT
.
PDLT1000  PACK      CODEDFLD,PMDSHCPT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDLT9000                * no
.
          MOVE      NEWCODE,PMDSHCPT              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PDLT9000  BRANCH    UPDTFLAG,PDLT0500            * no mappings
          CALL      UPPMDLT1
.
          GOTO      PDLT0500                     * get next record
.
PDLT9999  RETURN
+
.*****************************************************************************
.*                              PDSL0000              Called by: PROC0000    *
.*       Loop through patdslaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PDSL0000  DISPLAY   *P12:24,*EL,"patdslaf:";
          MOVE      SP70,KEY14
PDSL0200  CALL      RSPMDSL1                    * position at start of file
PDSL0500  CALL      RKPMDSL1                    * read next record
          BRANCH    OVRCD,PDSL9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMDLSELI,PMDLHCPC
          PACK      SAVKEY14,PMDLSELI,PMDLHCPC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMDLHCPC
.
          PACK      CODEDFLD,PMDLHCPC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDSL9000                * no
.
          MOVE      NEWCODE,PMDLHCPC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PDSL9000  BRANCH    UPDTFLAG,PDSL0500            * no mappings
          CALL      UPPMDSL1
.
          MOVE      SAVKEY14,KEY14
          GOTO      PDSL0200                     * get next record
.
PDSL9999  RETURN
+
.*****************************************************************************
.*                              PDTC0000              Called by: PROC0000    *
.*       Loop through pmsdtcaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PDTC0000  DISPLAY   *P12:24,*EL,"pmsdtcaf:";
          MOVE      SP70,KEY24
          CALL      RSPMDTC1                    * position at start of file
PDTC0500  CALL      RKPMDTC1                    * read next record
          BRANCH    OVRCD,PDTC9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PMDTVISN,PMDTSDAT,PMDTSTIM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMDTDOCT
.
          PACK      CODEDFLD,PMDTDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDTC9000                * no
.
          MOVE      NEWCODE,PMDTDOCT              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PDTC9000  BRANCH    UPDTFLAG,PDTC0500            * no mappings
          CALL      UPPMDTC1
.
          GOTO      PDTC0500                     * get next record
.
PDTC9999  RETURN
+
.*****************************************************************************
.*                              PDUN0000              Called by: PROC0000    *
.*       Loop through patdunaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PDUN0000  DISPLAY   *P12:24,*EL,"patdunaf:";
          MOVE      SP70,KEY9
PDUN0200  CALL      RSPMDUN1                    * position at start of file
PDUN0500  CALL      RKPMDUN1                    * read next record
          BRANCH    OVRCD,PDUN9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PMDUDOCT,PMDUUNIT
          PACK      SAVKEY9,PMDUDOCT,PMDUUNIT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMDUDOCT
.
          PACK      CODEDFLD,PMDUDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDUN9000                * no
.
          MOVE      NEWCODE,PMDUDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PDUN9000  BRANCH    UPDTFLAG,PDUN0500            * no mappings
          CALL      UPPMDUN1
.
          MOVE      SAVKEY9,KEY9
          GOTO      PDUN0200                     * get next record
.
PDUN9999  RETURN
+
.*****************************************************************************
.*                              PEVT0000              Called by: PROC0000    *
.*       Loop through pmsevtaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PEVT0000  DISPLAY   *P12:24,*EL,"pmsevtaf:";
          MOVE      SP70,KEY8
          CALL      RSPMEVT1                    * position at start of file
PEVT0500  CALL      RKPMEVT1                    * read next record
          BRANCH    OVRCD,PEVT9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMEVVISN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PMEVACON
.
          PACK      CODEDFLD,PMEVACON,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PEVT1000                * no
.
          MOVE      NEWCODE,PMEVACON              * yes - load new code
.
.         Check PMEVREFB
.
PEVT1000  PACK      CODEDFLD,PMEVREFB,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PEVT9000                * no
.
          MOVE      NEWCODE,PMEVREFB              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PEVT9000  BRANCH    UPDTFLAG,PEVT0500            * no mappings
          CALL      UPPMEVT1
.
          GOTO      PEVT0500                     * get next record
.
PEVT9999  RETURN
+
.*****************************************************************************
.*                              PFCI0000              Called by: PROC0000    *
.*       Loop through pmsfciaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PFCI0000  DISPLAY   *P12:24,*EL,"pmsfciaf:";
          MOVE      SP70,KEY30
          CALL      RSPMFCI1                    * position at start of file
PFCI0500  CALL      RKPMFCI1                    * read next record
          BRANCH    OVRCD,PFCI9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PMFCVISN,PMFCINVN,PMFCTRAN,PMFCCRNO
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMFCTDOC
.
          PACK      CODEDFLD,PMFCTDOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PFCI1000                * no
.
          MOVE      NEWCODE,PMFCTDOC              * yes - load new code
.
.         Check PMFCODOC
.
PFCI1000  PACK      CODEDFLD,PMFCODOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PFCI9000                * no
.
          MOVE      NEWCODE,PMFCODOC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PFCI9000  BRANCH    UPDTFLAG,PFCI0500            * no mappings
          CALL      UPPMFCI1
.
          GOTO      PFCI0500                     * get next record
.
PFCI9999  RETURN
+
.*****************************************************************************
.*                              PGPA0000              Called by: PROC0000    *
.*       Loop through pmsgpaaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PGPA0000  DISPLAY   *P12:24,*EL,"pmsgpaaf:";
          MOVE      SP70,KEY34
          CALL      RSPMGPA1                    * position at start of file
PGPA0500  CALL      RKPMGPA1                    * read next record
          BRANCH    OVRCD,PGPA9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMGPURNO,PMGPWEBU,PMGPDATC,PMGPTIMC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PMGPUGPC
.         
          PACK      CODEDFLD,PMGPUGPC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PGPA1000                * no
.         
          MOVE      NEWCODE,PMGPUGPC              * yes - load new code
.         
.         Check PMGPPGPC
.
PGPA1000  PACK      CODEDFLD,PMGPPGPC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PGPA9000                * no
.
          MOVE      NEWCODE,PMGPPGPC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PGPA9000  BRANCH    UPDTFLAG,PGPA0500            * no mappings
          CALL      UPPMGPA1
.
          GOTO      PGPA0500                     * get next record
.
PGPA9999  RETURN
+
.*****************************************************************************
.*                              PHCG0000              Called by: PROC0000    *
.*       Loop through pmshcgaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PHCG0000  DISPLAY   *P12:24,*EL,"pmshcgaf:";
          MOVE      SP70,KEY12
          CALL      RSPMHCG1                    * position at start of file
PHCG0500  CALL      RKPMHCG1                    * read next record
          BRANCH    OVRCD,PHCG9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PMHGPRAC,PMHGCNTR
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMHGSPCD
.
          PACK      CODEDFLD,PMHGSPCD,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PHCG9000                * no
.
          MOVE      NEWCODE,PMHGSPCD              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PHCG9000  BRANCH    UPDTFLAG,PHCG0500            * no mappings
          CALL      UPPMHCG1
.
          GOTO      PHCG0500                     * get next record
.
PHCG9999  RETURN
+
.*****************************************************************************
.*                              PHCL0000              Called by: PROC0000    *
.*       Loop through pathclaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PHCL0000  DISPLAY   *P12:24,*EL,"pathclaf:";
          MOVE      SP70,KEY20
PHCL0200  CALL      RSPMHCL1                    * position at start of file
PHCL0500  CALL      RKPMHCL1                    * read next record
          BRANCH    OVRCD,PHCL9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PMHLHCPC,PMHLHCPR
          PACK      SAVKEY20,PMHLHCPC,PMHLHCPR
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMHLHCPC
.
          PACK      CODEDFLD,PMHLHCPC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PHCL9000                * no
.
          MOVE      NEWCODE,PMHLHCPC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PHCL9000  BRANCH    UPDTFLAG,PHCL0500            * no mappings
          CALL      UPPMHCL1
.
          MOVE      SAVKEY20,KEY20
          GOTO      PHCL0200                     * get next record
.
PHCL9999  RETURN
+
.*****************************************************************************
.*                              PHCP0000              Called by: PROC0000    *
.*       Loop through pathcpaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PHCP0000  DISPLAY   *P12:24,*EL,"pathcpaf:";
          MOVE      SP70,KEY10
PHCP0200  CALL      RSPMHCP1                    * position at start of file
PHCP0500  CALL      RKPMHCP1                    * read next record
          BRANCH    OVRCD,PHCP9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PMHCHCPC
          PACK      SAVKEY10,PMHCHCPC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMHCHCPC
.
          PACK      CODEDFLD,PMHCHCPC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PHCP9000                * no
.
          MOVE      NEWCODE,PMHCHCPC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PHCP9000  BRANCH    UPDTFLAG,PHCP0500            * no mappings
          CALL      UPPMHCP1
.
          MOVE      SAVKEY10,KEY10
          GOTO      PHCP0200                     * get next record
.
PHCP9999  RETURN
+
.*****************************************************************************
.*                              PHKI0000              Called by: PROC0000    *
.*       Loop through pathkiaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PHKI0000  DISPLAY   *P12:24,*EL,"pathkiaf:";
          MOVE      SP70,KEY25
PHKI0200  CALL      RSPMHKI1                    * position at start of file
PHKI0500  CALL      RKPMHKI1                    * read next record
          BRANCH    OVRCD,PHKI9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMHKHCPC,PMHKKKWD
          PACK      SAVKEY25,PMHKHCPC,PMHKKKWD
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PMHKHCPC
.
          PACK      CODEDFLD,PMHKHCPC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PHKI9000                * no
.
          MOVE      NEWCODE,PMHKHCPC             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PHKI9000  BRANCH    UPDTFLAG,PHKI0500            * no mappings
          CALL      UPPMHKI1
.
          MOVE      SAVKEY25,KEY25
          GOTO      PHKI0200                     * get next record
.
PHKI9999  RETURN
+
.*****************************************************************************
.*                              PMTE0000              Called by: PROC0000    *
.*       Loop through pmsmteaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PMTE0000  COMPARE   NINE,CFEETYP
          GOTO      PMTE9999 IF NOT EQUAL       * Not using Johns Hopkins Bedfee
.
          DISPLAY   *P12:24,*EL,"pmsmteaf:";
          OPEN      PMSMTEA1,"pmsmteaf"
.
          MOVE      SP70,KEY14                   
          CALL      RSPMMTE1                    * position at start of file
PMTE0500  CALL      RKPMMTE1                    * read next record
          BRANCH    OVRCD,PMTE9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PMMIVISN,PMMITRAN 
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMMITDOC
.
          PACK      CODEDFLD,PMMITDOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PMTE1000                * no
.
          MOVE      NEWCODE,PMMITDOC              * yes - load new code
.
.         Check PMMIODOC
.
PMTE1000  PACK      CODEDFLD,PMMIODOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PMTE9000                * no
.
          MOVE      NEWCODE,PMMIODOC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PMTE9000  BRANCH    UPDTFLAG,PMTE0500            * no mappings
          CALL      UPPMMTE1
.
          GOTO      PMTE0500                     * get next record
.
PMTE9999  RETURN
+
.*****************************************************************************
.*                              PMTI0000              Called by: PROC0000    *
.*       Loop through pmsmtiaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PMTI0000  DISPLAY   *P12:24,*EL,"pmsmtiaf:";
          MOVE      SP70,KEY14                   
          CALL      RSPMMTI1                    * position at start of file
PMTI0500  CALL      RKPMMTI1                    * read next record
          BRANCH    OVRCD,PMTI9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PMMIVISN,PMMITRAN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMMITDOC
.
          PACK      CODEDFLD,PMMITDOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PMTI1000                * no
.
          MOVE      NEWCODE,PMMITDOC              * yes - load new code
.
.         Check PMMIODOC
.
PMTI1000  PACK      CODEDFLD,PMMIODOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PMTI2000                * no
.
          MOVE      NEWCODE,PMMIODOC              * yes - load new code
.
.         Check PMMIEDAD
.
PMTI2000  PACK      CODEDFLD,PMMIEDAD,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PMTI9000                * no
.         
          MOVE      NEWCODE,PMMIEDAD              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PMTI9000  BRANCH    UPDTFLAG,PMTI0500            * no mappings
          CALL      UPPMMTI1
.
          GOTO      PMTI0500                     * get next record
.
PMTI9999  RETURN
+
.*****************************************************************************
.*                              PNUT0000              Called by: PROC0000    *
.*       Loop through pmsnutaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PNUT0000  DISPLAY   *P12:24,*EL,"pmsnutaf:";
          MOVE      SP70,KEY16                     
          CALL      RSPMNUT1                    * position at start of file
PNUT0500  CALL      RKPMNUT1                    * read next record
          BRANCH    OVRCD,PNUT9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMNUADMN,PMNUDATE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMNUDCDE
.         
          PACK      CODEDFLD,PMNUDCDE,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PNUT9000                * no
.
          MOVE      NEWCODE,PMNUDCDE              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PNUT9000  BRANCH    UPDTFLAG,PNUT0500            * no mappings
          CALL      UPPMNUT1
.
          GOTO      PNUT0500                     * get next record
.
PNUT9999  RETURN
+
.*****************************************************************************
.*                              PPX20000              Called by: PROC0000    *
.*       Loop through pmspx2af and fix any relevant doctor fields            *
.*****************************************************************************
.         
PPX20000  DISPLAY   *P12:24,*EL,"pmspx2af:";
          MOVE      SP70,KEY8              
          CALL      RSPMPX21                    * position at start of file
PPX20500  CALL      RKPMPX21                    * read next record
          BRANCH    OVRCD,PPX29999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMPXURNO
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PMPXRHC1
.
          PACK      CODEDFLD,PMPXRHC1,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PPX21000                * no
.
          MOVE      NEWCODE,PMPXRHC1              * yes - load new code
.
.         Check PMPXVGPC
.
PPX21000  PACK      CODEDFLD,PMPXVGPC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PPX29000                * no
.
          MOVE      NEWCODE,PMPXVGPC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PPX29000  BRANCH    UPDTFLAG,PPX20500            * no mappings
          CALL      UPPMPX21
.
          GOTO      PPX20500                     * get next record
.
PPX29999  RETURN
+
.*****************************************************************************
.*                              PQDR0000              Called by: PROC0000    *
.*       Loop through pmsqdraf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PQDR0000  DISPLAY   *P12:24,*EL,"pmsqdraf:";     
          MOVE      SP70,KEY20
          CALL      RSPMQDR1                    * position at start of file
PQDR0500  CALL      RKPMQDR1                    * read next record
          BRANCH    OVRCD,PQDR9999              * eof - finished 
.
          DISPLAY   *P22:24,*EL,*V2LON,DPMQRMES  
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMHCHCPC
.
          PACK      CODEDFLD,PMHCHCPC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQDR1000                * no
.
          MOVE      NEWCODE,PMHCHCPC              * yes - load new code
.
.         Check PMHCWAHC
.
PQDR1000  PACK      CODEDFLD,PMHCWAHC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQDR9000                * no
.
          MOVE      NEWCODE,PMHCWAHC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PQDR9000  BRANCH    UPDTFLAG,PQDR0500            * no mappings
          CALL      UPPMQDR1
.
          GOTO      PQDR0500                     * get next record
.
PQDR9999  RETURN
+
.*****************************************************************************
.*                              PQIT0000              Called by: PROC0000    *
.*       Loop through pmsqitaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PQIT0000  DISPLAY   *P12:24,*EL,"pmsqitaf:";
          MOVE      SP70,KEY20
          CALL      RSPMQIT1                    * position at start of file
PQIT0500  CALL      RKPMQIT1                    * read next record
          BRANCH    OVRCD,PQIT9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DPMQIMES
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMQIDOCT
.
          PACK      CODEDFLD,PMQIDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQIT9000                * no
.
          MOVE      NEWCODE,PMQIDOCT              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PQIT9000  BRANCH    UPDTFLAG,PQIT0500            * no mappings
          CALL      UPPMQIT1
.
          GOTO      PQIT0500                     * get next record
.
PQIT9999  RETURN
+
.*****************************************************************************
.*                              PQPT0000              Called by: PROC0000    *
.*       Loop through pmsqptaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PQPT0000  DISPLAY   *P12:24,*EL,"pmsqptaf:";
          MOVE      SP70,KEY20
          CALL      RSPMQPT1                    * position at start of file
PQPT0500  CALL      RKPMQPT1                    * read next record
          BRANCH    OVRCD,PQPT9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,DPMQPMES
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PTMXREGP
.
          PACK      CODEDFLD,PTMXREGP,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQPT1000                * no
.
          MOVE      NEWCODE,PTMXREGP              * yes - load new code
.
.         Check PMPXRHC1
.
PQPT1000  PACK      CODEDFLD,PMPXRHC1,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQPT9000                * no
.
          MOVE      NEWCODE,PMPXRHC1              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PQPT9000  BRANCH    UPDTFLAG,PQPT0500            * no mappings
          CALL      UPPMQPT1
.
          GOTO      PQPT0500                     * get next record
.
PQPT9999  RETURN
+
.*****************************************************************************
.*                              PQVI0000              Called by: PROC0000    *
.*       Loop through pmsqviaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PQVI0000  DISPLAY   *P12:24,"pmsqviaf:";     
          MOVE      SP70,KEY22
          CALL      RSPMQVI1                    * position at start of file
PQVI0500  CALL      RKPMQVI1                    * read next record
          BRANCH    OVRCD,PQVI9999              * eof - finished 
.
          DISPLAY   *P22:24,*EL,*V2LON,DPMQVMES,DPMQVTRN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check ADOCTR 
.
          PACK      CODEDFLD,ADOCTR ,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI1000                * no
.
          MOVE      NEWCODE,ADOCTR               * yes - load new code
.
.         Check ADOCTT
.
PQVI1000  PACK      CODEDFLD,ADOCTT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI2000                * no
.
          MOVE      NEWCODE,ADOCTT              * yes - load new code
.
.         Check PTMSRFGP
.
PQVI2000  PACK      CODEDFLD,PTMSRFGP,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI3000                * no
.
          MOVE      NEWCODE,PTMSRFGP            * yes - load new code
.
.         Check PTMIADOC
.         
PQVI3000  PACK      CODEDFLD,PTMIADOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI4000                * no
.
          MOVE      NEWCODE,PTMIADOC            * yes - load new code
.
.         Check TADOCT
.
PQVI4000  PACK      CODEDFLD,TADOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI5000                * no
.
          MOVE      NEWCODE,TADOCT            * yes - load new code
.
.         Check PMVXRHC1 
.
PQVI5000  PACK      CODEDFLD,PMVXRHC1,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI6000                * no
.
          MOVE      NEWCODE,PMVXRHC1            * yes - load new code
.
.         Check PMVXRHC2 
.         
PQVI6000  PACK      CODEDFLD,PMVXRHC2,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI7000                * no
.
          MOVE      NEWCODE,PMVXRHC2            * yes - load new code
.
.         Check PMVXRHC3
.
PQVI7000  PACK      CODEDFLD,PMVXRHC3,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI8000                * no
.
          MOVE      NEWCODE,PMVXRHC3            * yes - load new code
.
.         Check PMVXRHC4
.
PQVI8000  PACK      CODEDFLD,PMVXRHC4,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI8010                * no
.
          MOVE      NEWCODE,PMVXRHC4            * yes - load new code
.
.         Check PMVXEDC1
.
PQVI8010  PACK      CODEDFLD,PMVXEDC1,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI8020                * no
.
          MOVE      NEWCODE,PMVXEDC1            * yes - load new code
.
.         Check PMVXEDC2
.         
PQVI8020  PACK      CODEDFLD,PMVXEDC2,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI8030                * no
.
          MOVE      NEWCODE,PMVXEDC2            * yes - load new code
.
.         Check PMVXEDC3
.         
PQVI8030  PACK      CODEDFLD,PMVXEDC3,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PQVI9000                * no
.
          MOVE      NEWCODE,PMVXEDC3            * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PQVI9000  BRANCH    UPDTFLAG,PQVI0500            * no mappings
          CALL      UPPMQVI1
.
          GOTO      PQVI0500                     * get next record
.
PQVI9999  RETURN
+
.*****************************************************************************
.*                              PRFL0000              Called by: PROC0000    *
.*       Loop through pmsrflaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PRFL0000  DISPLAY   *P12:24,*EL,"pmsrflaf:";
          MOVE      SP70,KEY26
PRFL0200  CALL      RSPMRFL1                    * position at start of file
PRFL0500  CALL      RKPMRFL1                    * read next record
          BRANCH    OVRCD,PRFL9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMRFURNO,PMRFCONS,PMRFEXPD
          PACK      SAVKEY26,PMRFURNO,PMRFCONS,PMRFEXPD
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PMRFCONS
.         
          PACK      CODEDFLD,PMRFCONS,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PRFL1000                * no
.         
          MOVE      NEWCODE,PMRFCONS             * yes - load new code
.
.         Check PMRFRFGP
.
PRFL1000  PACK      CODEDFLD,PMRFRFGP,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PRFL9000                * no
.
          MOVE      NEWCODE,PMRFRFGP             * yes - load new code
.         
.         Check if there were any mappings and if so, update the record
.
PRFL9000  BRANCH    UPDTFLAG,PRFL0500            * no mappings
          CALL      UPPMRFL1
.
          MOVE      SAVKEY26,KEY26
          GOTO      PRFL0200                     * get next record
.
PRFL9999  RETURN
+
.*****************************************************************************
.*                              PTCO0000              Called by: PROC0000    *
.*       Loop through pmstcoaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PTCO0000  DISPLAY   *P12:24,*EL,"pmstcoaf:";
          MOVE      SP70,KEY16
PTCO0200  CALL      RSPMTCO1                    * position at start of file
PTCO0500  CALL      RKPMTCO1                    * read next record
          BRANCH    OVRCD,PTCO9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PMTCCODE,PMTCTCOM,PMTCLNUM
          PACK      SAVKEY16,PMTCCODE,PMTCTCOM,PMTCLNUM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMTCCODE
.
          PACK      CODEDFLD,PMTCCODE,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PTCO9000                * no
.
          MOVE      NEWCODE,PMTCCODE             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PTCO9000  BRANCH    UPDTFLAG,PTCO0500            * no mappings
          CALL      UPPMTCO1
.
          MOVE      SAVKEY16,KEY16
          GOTO      PTCO0200                     * get next record
.
PTCO9999  RETURN
+
.*****************************************************************************
.*                              PVX10000              Called by: PROC0000    *
.*       Loop through pmsvx1af and fix any relevant doctor fields            *
.*****************************************************************************
.
PVX10000  DISPLAY   *P12:24,*EL,"pmsvx1af:";
          MOVE      SP70,KEY8
          CALL      RSPMVX11                    * position at start of file
PVX10500  CALL      RKPMVX11                    * read next record
          BRANCH    OVRCD,PVX19999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PMVXVISN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PMVXDOCA
.
          PACK      CODEDFLD,PMVXDOCA,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PVX11000                * no
.
          MOVE      NEWCODE,PMVXDOCA              * yes - load new code
.
.         Check PMVXDOCT
.
PVX11000  PACK      CODEDFLD,PMVXDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PVX12000                * no
.
          MOVE      NEWCODE,PMVXDOCT              * yes - load new code
.
.         Check PMVXRHC1
.
PVX12000  PACK      CODEDFLD,PMVXRHC1,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PVX13000                * no
.
          MOVE      NEWCODE,PMVXRHC1              * yes - load new code
.
.         Check PMVXRHC2
.
PVX13000  PACK      CODEDFLD,PMVXRHC2,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PVX14000                * no
.
          MOVE      NEWCODE,PMVXRHC2              * yes - load new code
.
.         Check PMVXRHC3
.
PVX14000  PACK      CODEDFLD,PMVXRHC3,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PVX15000                * no
.
          MOVE      NEWCODE,PMVXRHC3              * yes - load new code
.
.         Check PMVXRHC4
.         
PVX15000  PACK      CODEDFLD,PMVXRHC4,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PVX16000                * no
.
          MOVE      NEWCODE,PMVXRHC4              * yes - load new code
.
.         Check PMVXEDC1
.         
PVX16000  PACK      CODEDFLD,PMVXEDC1,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PVX17000                * no
.
          MOVE      NEWCODE,PMVXEDC1              * yes - load new code
.
.         Check PMVXEDC2
.         
PVX17000  PACK      CODEDFLD,PMVXEDC2,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PVX18000                * no
.
          MOVE      NEWCODE,PMVXEDC2              * yes - load new code
.
.         Check PMVXEDC3
.
PVX18000  PACK      CODEDFLD,PMVXEDC3,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PVX19000                * no
.
          MOVE      NEWCODE,PMVXEDC3              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PVX19000  BRANCH    UPDTFLAG,PVX10500            * no mappings
          CALL      UPPMVX11
.
          GOTO      PVX10500                     * get next record
.
PVX19999  RETURN
+
.*****************************************************************************
.*                              PWOR0000              Called by: PROC0000    *
.*       Loop through pmsworaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PWOR0000  DISPLAY   *P12:24,*EL,"pmsworaf:";
          MOVE      SP70,KEY8
          CALL      RSPMWOR1                    * position at start of file
PWOR0500  CALL      RKPMWOR1                    * read next record
          BRANCH    OVRCD,PWOR9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMWOADMN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PMWOCORD
.         
          PACK      CODEDFLD,PMWOCORD,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PWOR9000                * no
.
          MOVE      NEWCODE,PMWOCORD              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PWOR9000  BRANCH    UPDTFLAG,PWOR0500            * no mappings
          CALL      UPPMWOR1
.
          GOTO      PWOR0500                     * get next record
.
PWOR9999  RETURN
+
.*****************************************************************************
.*                              PWX10000              Called by: PROC0000    *
.*       Loop through pmswx1af and fix any relevant doctor fields            *
.*****************************************************************************
.
PWX10000  DISPLAY   *P12:24,*EL,"pmswx1af:";
          MOVE      SP70,KEY8
          CALL      RSPMWX11                    * position at start of file
PWX10500  CALL      RKPMWX11                    * read next record
          BRANCH    OVRCD,PWX19999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PMWXVISN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PMWXTPRO
.         
          PACK      CODEDFLD,PMWXTPRO,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PWX19000                * no
.         
          MOVE      NEWCODE,PMWXTPRO              * yes - load new code
.         
.         Check if there were any mappings and if so, update the record
.
PWX19000  BRANCH    UPDTFLAG,PWX10500            * no mappings
          CALL      UPPMWX11
.
          GOTO      PWX10500                     * get next record
.
PWX19999  RETURN
+
.*****************************************************************************
.*                              PBUL0000              Called by: PROC0000    *
.*       Loop through pribulkf and fix any relevant doctor fields            *
.*****************************************************************************
.
PBUL0000  DISPLAY   *P12:24,*EL,"pribulkf:";
          MOVE      SP70,KEY28
          CALL      RSPRBB1                    * position at start of file
PBUL0500  CALL      RKPRBB1                    * read next record
          BRANCH    OVRCD,PBUL9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,DPRBBCLM,PRBBINVN,PRBBITMN,PRBBREGR
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PRBBDOCT
.         
          PACK      CODEDFLD,PRBBDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PBUL9000                * no
.         
          MOVE      NEWCODE,PRBBDOCT              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PBUL9000  BRANCH    UPDTFLAG,PBUL0500            * no mappings
          CALL      UPPRBB1
.
          GOTO      PBUL0500                     * get next record
.
PBUL9999  RETURN
+
.*****************************************************************************
.*                              PDOC0000              Called by: PROC0000    *
.*       Loop through pridoctf and fix any relevant doctor fields            *
.*****************************************************************************
.
PDOC0000  DISPLAY   *P12:24,*EL,"pridoctf:";
          MOVE      SP70,KEY18
PDOC0200  CALL      RSPRDO1                    * position at start of file
PDOC0500  CALL      RKPRDO1                    * read next record
          BRANCH    OVRCD,PDOC9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PRDOPRAC,PRDODOCT,PRDOCLAM,PRDOPIND
          PACK      SAVKEY18,PRDOPRAC,PRDODOCT,PRDOCLAM,PRDOPIND
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PRDODOCT
.         
          PACK      CODEDFLD,PRDODOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PDOC9000                * no
.         
          MOVE      NEWCODE,PRDODOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PDOC9000  BRANCH    UPDTFLAG,PDOC0500            * no mappings
          CALL      UPPRDO1
.
          MOVE      SAVKEY18,KEY18
          GOTO      PDOC0200                     * get next record
.
PDOC9999  RETURN
+
.*****************************************************************************
.*                              PRDT0000              Called by: PROC0000    *
.*       Loop through pridtraf and fix any relevant doctor fields            *
.*****************************************************************************
.
PRDT0000  DISPLAY   *P12:24,*EL,"pridtraf:";
          MOVE      SP70,KEY22
          CALL      RSPRDT1                    * position at start of file
PRDT0500  CALL      RKPRDT1                    * read next record
          BRANCH    OVRCD,PRDT9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DPRDTUNQ,PRDTINVN,DPRDTTRN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PRDTDOCT
.
          PACK      CODEDFLD,PRDTDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PRDT1000                * no
.
          MOVE      NEWCODE,PRDTDOCT              * yes - load new code
.
.         Check PRDTREFD
.
PRDT1000  PACK      CODEDFLD,PRDTREFD,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PRDT9000                * no
.
          MOVE      NEWCODE,PRDTREFD              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PRDT9000  BRANCH    UPDTFLAG,PRDT0500            * no mappings
          CALL      UPPRDT1
.
          GOTO      PRDT0500                     * get next record
.
PRDT9999  RETURN
+
.*****************************************************************************
.*                              PRIF0000              Called by: PROC0000    *
.*       Loop through prifciaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PRIF0000  DISPLAY   *P12:24,*EL,"prifciaf:";
          MOVE      SP70,KEY32
          CALL      RSPRFCI1                   * position at start of file
PRIF0500  CALL      RKPRFCI1                   * read next record
          BRANCH    OVRCD,PRIF9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PRFCDEBT,PRFCSCAN,PRFCINVN,PRFCTRAN:
                                       PRFCCRNO
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PRFCSDOC
.         
          PACK      CODEDFLD,PRFCSDOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PRIF9000                * no
.         
          MOVE      NEWCODE,PRFCSDOC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PRIF9000  BRANCH    UPDTFLAG,PRIF0500            * no mappings
          CALL      UPPRFCI1
.
          GOTO      PRIF0500                     * get next record
.
PRIF9999  RETURN
+
.*****************************************************************************
.*                              PFLS0000              Called by: PROC0000    *
.*       Loop through priflsaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PFLS0000  DISPLAY   *P12:24,*EL,"priflsaf:";
          MOVE      SP70,KEY4
          CALL      RSPRFLS1                   * position at start of file
PFLS0500  CALL      RKPRFLS1                   * read next record
          BRANCH    OVRCD,PFLS9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PRFLSEID
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PRFLSDFR
.         
          PACK      CODEDFLD,PRFLSDFR,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PFLS1000                * no
.
          MOVE      NEWCODE,PRFLSDFR              * yes - load new code
.
.         Check PRFLSDTO
.
PFLS1000  PACK      CODEDFLD,PRFLSDTO,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PFLS9000                * no
.
          MOVE      NEWCODE,PRFLSDTO              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PFLS9000  BRANCH    UPDTFLAG,PFLS0500            * no mappings
          CALL      UPPRFLS1
.
          GOTO      PFLS0500                     * get next record
.
PFLS9999  RETURN
+
.*****************************************************************************
.*                              PFSL0000              Called by: PROC0000    *
.*       Loop through prifslaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PFSL0000  DISPLAY   *P12:24,*EL,"prifslaf:";     
          MOVE      SP70,KEY22
          CALL      RSPRFSL1                   * position at start of file
PFSL0500  CALL      RKPRFSL1                   * read next record
          BRANCH    OVRCD,PFSL9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PRFSSEID,PRFSDEBT,DPRFSSCA,DPRFSUNI
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PRFSPRAC
.
          PACK      CODEDFLD,PRFSPRAC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PFSL1000                * no
.
          MOVE      NEWCODE,PRFSPRAC              * yes - load new code
.
.         Check PRFSSDOC
.
PFSL1000  PACK      CODEDFLD,PRFSSDOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PFSL9000                * no
.
          MOVE      NEWCODE,PRFSSDOC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PFSL9000  BRANCH    UPDTFLAG,PFSL0500            * no mappings
          CALL      UPPRFSL1
.
          GOTO      PFSL0500                     * get next record
.
PFSL9999  RETURN
+
.*****************************************************************************
.*                              PGSL0000              Called by: PROC0000    *
.*       Loop through prigslaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PGSL0000  DISPLAY   *P12:24,*EL,"prigslaf:";     
          MOVE      SP70,KEY22
          CALL      RSPRGSL1                   * position at start of file
PGSL0500  CALL      RKPRGSL1                   * read next record
          BRANCH    OVRCD,PGSL9999              * eof - finished 
.
          DISPLAY   *P22:24,*EL,*V2LON,PRGSSEID,PRGSDEBT,DPRGSSCA,DPRGSUNI
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PRGSPRAC
.
          PACK      CODEDFLD,PRGSPRAC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PGSL1000                * no
.
          MOVE      NEWCODE,PRGSPRAC              * yes - load new code
.
.         Check PRGSSDOC
.
PGSL1000  PACK      CODEDFLD,PRGSSDOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PGSL9000                * no
.
          MOVE      NEWCODE,PRGSSDOC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PGSL9000  BRANCH    UPDTFLAG,PGSL0500            * no mappings
          CALL      UPPRGSL1
.
          GOTO      PGSL0500                     * get next record
.
PGSL9999  RETURN
+
.*****************************************************************************
.*                              PHRE0000              Called by: PROC0000    *
.*       Loop through prihreaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PHRE0000  DISPLAY   *P12:24,*EL,"prihreaf:";
          MOVE      SP70,KEY23
PHRE0200  CALL      RSPRHR1                    * position at start of file
PHRE0500  CALL      RKPRHR1                    * read next record
          BRANCH    OVRCD,PHRE9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DPRHRUNQ,PRHRPRAC,PRHRDOCT,PRHRPIND
          PACK      SAVKEY23,DPRHRUNQ,PRHRPRAC,PRHRDOCT,PRHRPIND
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check PRHRDOCT
.
          PACK      CODEDFLD,PRHRDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PHRE1000                * no
.
          MOVE      NEWCODE,PRHRDOCT             * yes - load new code
.
.         Check PRHRREFD
.
PHRE1000  PACK      CODEDFLD,PRHRREFD,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PHRE9000                * no
.
          MOVE      NEWCODE,PRHRREFD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PHRE9000  BRANCH    UPDTFLAG,PHRE0500            * no mappings
          CALL      UPPRHR1
.
          MOVE      SAVKEY23,KEY23
          GOTO      PHRE0200                     * get next record
.
PHRE9999  RETURN
+
.*****************************************************************************
.*                              PHTR0000              Called by: PROC0000    *
.*       Loop through prihtraf and fix any relevant doctor fields            *
.*****************************************************************************
.
PHTR0000  DISPLAY   *P12:24,*EL,"prihtraf:";
          MOVE      SP70,KEY54
PHTR0200  CALL      RSPRHT1                    * position at start of file
PHTR0500  CALL      RKPRHT1                    * read next record
          BRANCH    OVRCD,PHTR9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,DPRHTUNQ,PRHTPRAC,PRHTDOCT,PRHTPIND:
                                       PRHTREFD,PRHTRDAT,DPRHTFLG,PRHTITMN:
                                       PRHTSUBN,DPRHTNUM
          PACK      SAVKEY54,DPRHTUNQ,PRHTPRAC,PRHTDOCT,PRHTPIND:
                                       PRHTREFD,PRHTRDAT,DPRHTFLG,PRHTITMN:
                                       PRHTSUBN,DPRHTNUM
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PRHTDOCT
.
          PACK      CODEDFLD,PRHTDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PHTR1000                * no
.
          MOVE      NEWCODE,PRHTDOCT             * yes - load new code
.
.         Check PRHTREFD
.
PHTR1000  PACK      CODEDFLD,PRHTREFD,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PHTR9000                * no
.
          MOVE      NEWCODE,PRHTREFD             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PHTR9000  BRANCH    UPDTFLAG,PHTR0500            * no mappings
          CALL      UPPRHT1
.
          MOVE      SAVKEY54,KEY54
          GOTO      PHTR0200                     * get next record
.
PHTR9999  RETURN
+
.*****************************************************************************
.*                              PINV0000              Called by: PROC0000    *
.*       Loop through priinvof and fix any relevant doctor fields            *
.*****************************************************************************
.
PINV0000  DISPLAY   *P12:24,*EL,"priinvof:";
          MOVE      SP70,KEY8
          CALL      RSPRIN1                    * position at start of file
PINV0500  CALL      RKPRIN1                    * read next record
          BRANCH    OVRCD,PINV9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PRINNUMB
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PRINDOCT
.
          PACK      CODEDFLD,PRINDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PINV9000                * no
.
          MOVE      NEWCODE,PRINDOCT              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PINV9000  BRANCH    UPDTFLAG,PINV0500            * no mappings
          CALL      UPPRIN1
.
          GOTO      PINV0500                     * get next record
.
PINV9999  RETURN
+
.*****************************************************************************
.*                              PPCE0000              Called by: PROC0000    *
.*       Loop through pripceaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PPCE0000  DISPLAY   *P12:24,*EL,"pripceaf:";
          MOVE      SP70,KEY27
PPCE0200  CALL      RSPRPCE1                   * position at start of file
PPCE0500  CALL      RSPRPCE1                   * read next record
          BRANCH    OVRCD,PPCE9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,PRPCFTYP,PRPCDOCT,PRPCFCOD,PRPCPORT
          PACK      SAVKEY27,PRPCFTYP,PRPCDOCT,PRPCFCOD,PRPCPORT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PRPCDOCT
.
          PACK      CODEDFLD,PRPCDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PPCE9000                * no
.
          MOVE      NEWCODE,PRHTDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PPCE9000  BRANCH    UPDTFLAG,PPCE0500            * no mappings
          CALL      UPPRPCE1
.
          MOVE      SAVKEY27,KEY27
          GOTO      PPCE0200                     * get next record
.
PPCE9999  RETURN
+
.*****************************************************************************
.*                              PPRA0000              Called by: PROC0000    *
.*       Loop through pripracf and fix any relevant doctor fields            *
.*****************************************************************************
.
PPRA0000  DISPLAY   *P12:24,*EL,"pripracf:";
          MOVE      SP70,KEY6
          CALL      RSPRPR1                    * position at start of file
PPRA0500  CALL      RKPRPR1                    * read next record
          BRANCH    OVRCD,PPRA9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PRPRCODE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PRPRPDOC
.
          PACK      CODEDFLD,PRPRPDOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PPRA9000                * no
.
          MOVE      NEWCODE,PRPRPDOC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PPRA9000  BRANCH    UPDTFLAG,PPRA0500            * no mappings
          CALL      UPPRPR1
.
          GOTO      PPRA0500                     * get next record
.
PPRA9999  RETURN
+
.*****************************************************************************
.*                              PSTA0000              Called by: PROC0000    *
.*       Loop through pristatf and fix any relevant doctor fields            *
.*****************************************************************************
.         
PSTA0000  DISPLAY   *P12:24,*EL,"pristatf:";
          MOVE      SP70,KEY16
PSTA0200  CALL      RSPRST1                    * position at start of file
PSTA0500  CALL      RKPRST1                    * read next record
          BRANCH    OVRCD,PSTA9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PRSTYEAR,PRSTPRAC,PRSTDOCT
          PACK      SAVKEY16,PRSTYEAR,PRSTPRAC,PRSTDOCT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PRSTDOCT
.
          PACK      CODEDFLD,PRSTDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PSTA9000                * no
.
          MOVE      NEWCODE,PRSTDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PSTA9000  BRANCH    UPDTFLAG,PSTA0500            * no mappings
          CALL      UPPRST1
.
          MOVE      SAVKEY16,KEY16
          GOTO      PSTA0200                     * get next record
.
PSTA9999  RETURN
+
.*****************************************************************************
.*                              PTMP0000              Called by: PROC0000    *
.*       Loop through pritmpaf and fix any relevant doctor fields            *
.*****************************************************************************
.
PTMP0000  DISPLAY   *P12:24,*EL,"pritmpaf:";
          MOVE      SP70,KEY31
PTMP0200  CALL      RSPRTMP1                   * position at start of file
PTMP0500  CALL      RKPRTMP1                   * read next record
          BRANCH    OVRCD,PTMP9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,PRTMUNIQ,PRTMPRAC,PRTMDOCT,PRTMPIND:
                                       PRTMCNTR
          PACK      SAVKEY31,PRTMUNIQ,PRTMPRAC,PRTMDOCT,PRTMPIND:
                                       PRTMCNTR
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check PRTMDOCT
.
          PACK      CODEDFLD,PRTMDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,PTMP9000                * no
.
          MOVE      NEWCODE,PRTMDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
PTMP9000  BRANCH    UPDTFLAG,PTMP0500            * no mappings
          CALL      UPPRTMP1
.
          MOVE      SAVKEY31,KEY31
          GOTO      PTMP0200                     * get next record
.
PTMP9999  RETURN
+
.*****************************************************************************
.*                              RHEA0000              Called by: PROC0000    *
.*       Loop through resheaaf and fix any relevant doctor fields            *
.*****************************************************************************
.         
RHEA0000  DISPLAY   *P12:24,*EL,"resheaaf:";
          MOVE      SP70,KEY17                    
          CALL      RSREHA1                    * position at start of file
RHEA0500  CALL      RKREHA1                    * read next record
          BRANCH    OVRCD,RHEA9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,REHARDT,REHARTM,REHARUN       
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check REHADSS
.
          PACK      CODEDFLD,REHADSS,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,RHEA1000                * no
.
          MOVE      NEWCODE,REHADSS              * yes - load new code
.
.         Check REHAADC
.
RHEA1000  PACK      CODEDFLD,REHAADC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,RHEA9000                * no
.
          MOVE      NEWCODE,REHAADC              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
RHEA9000  BRANCH    UPDTFLAG,RHEA0500            * no mappings
          CALL      UPREHA1
.
          GOTO      RHEA0500                     * get next record
.
RHEA9999  RETURN
+
.*****************************************************************************
.*                              RLUR0000              Called by: PROC0000    *
.*       Loop through resluraf and fix any relevant doctor fields            *
.*****************************************************************************
.         
RLUR0000  DISPLAY   *P12:24,*EL,"resluraf:";     
          MOVE      SP70,KEY25
          CALL      RSRELU1                    * position at start of file
RLUR0500  CALL      RKRELU1                    * read next record
          BRANCH    OVRCD,RLUR9999              * eof - finished 
.
          DISPLAY   *P22:24,*EL,*V2LON,RELUURN,RELURDT,RELURTM,RELURUN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check RELUDSS
.
          PACK      CODEDFLD,RELUDSS,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,RLUR9000                * no
.
          MOVE      NEWCODE,RELUDSS              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
RLUR9000  BRANCH    UPDTFLAG,RLUR0500            * no mappings
          CALL      UPRELU1
.
          GOTO      RLUR0500                     * get next record
.
RLUR9999  RETURN
+
.*****************************************************************************
.*                              WCPT0000              Called by: PROC0000    *
.*       Loop through watcptaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WCPT0000  DISPLAY   *P12:24,*EL,"watcptaf:";
          MOVE      SP70,KEY15
WCPT0200  CALL      RSWTCPT1                   * position at start of file
WCPT0500  CALL      RKWTCPT1                   * read next record
          BRANCH    OVRCD,WCPT9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,WTCPDOCT,WTCPPROC
          PACK      SAVKEY15,WTCPDOCT,WTCPPROC
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check WTCPDOCT
.         
          PACK      CODEDFLD,WTCPDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WCPT9000                * no
.
          MOVE      NEWCODE,WTCPDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WCPT9000  BRANCH    UPDTFLAG,WCPT0500            * no mappings
          CALL      UPWTCPT1
.
          MOVE      SAVKEY15,KEY15
          GOTO      WCPT0200                     * get next record
.
WCPT9999  RETURN
+
.*****************************************************************************
.*                              WEXT0000              Called by: PROC0000    *
.*       Loop through watextaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WEXT0000  DISPLAY   *P12:24,*EL,"watextaf:";
          MOVE      SP70,KEY4
          CALL      RSWTEXT1                   * position at start of file
WEXT0500  CALL      RKWTEXT1                   * read next record
          BRANCH    OVRCD,WEXT9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,WTEXCODE
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check WTEXCON
.
          PACK      CODEDFLD,WTEXCON,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WEXT9000                * no
.
          MOVE      NEWCODE,WTEXCON              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WEXT9000  BRANCH    UPDTFLAG,WEXT0500            * no mappings
          CALL      UPWTEXT1
.
          GOTO      WEXT0500                     * get next record
.
WEXT9999  RETURN
+
.*****************************************************************************
.*                              WHIS0000              Called by: PROC0000    *
.*       Loop through wathisaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WHIS0000  DISPLAY   *P12:24,*EL,"wathisaf:";
          MOVE      SP70,KEY31
          CALL      RSWTHIS1                   * position at start of file
WHIS0500  CALL      RKWTHIS1                   * read next record
          BRANCH    OVRCD,WHIS9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,WTHIURNO,WTHIPROC,DWTHIPCN,WTHIEDAT:
                                       DWTHIUCN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check WTHIDOCT
.
          PACK      CODEDFLD,WTHIDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WHIS1000                * no
.
          MOVE      NEWCODE,WTHIDOCT              * yes - load new code
.
.         Check WTHIASSR
.
WHIS1000  PACK      CODEDFLD,WTHIASSR,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WHIS9000                * no
.
          MOVE      NEWCODE,WTHIASSR              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WHIS9000  BRANCH    UPDTFLAG,WHIS0500            * no mappings
          CALL      UPWTHIS1
.
          GOTO      WHIS0500                     * get next record
.
WHIS9999  RETURN
+
.*****************************************************************************
.*                              WQUE0000              Called by: PROC0000    *
.*       Loop through watqueaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WQUE0000  DISPLAY   *P12:24,*EL,"watqueaf:";
          MOVE      SP70,KEY20
          CALL      RSWTQUE1                   * position at start of file
WQUE0500  CALL      RKWTQUE1                   * read next record
          BRANCH    OVRCD,WQUE9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,DWTQUMES
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check WMDOCTOR 
.         
          PACK      CODEDFLD,WMDOCTOR,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WQUE1000                * no
.         
          MOVE      NEWCODE,WMDOCTOR             * yes - load new code
.
.         Check WTWMRFGP
.
WQUE1000  PACK      CODEDFLD,WTWMRFGP,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WQUE9000                * no
.
          MOVE      NEWCODE,WTWMRFGP              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WQUE9000  BRANCH    UPDTFLAG,WQUE0500            * no mappings
          CALL      UPWTQUE1
.
          GOTO      WQUE0500                     * get next record
.
WQUE9999  RETURN
+
.*****************************************************************************
.*                              WSCU0000              Called by: PROC0000    *
.*       Loop through watscuaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WSCU0000  DISPLAY   *P12:24,*EL,"watscuaf:";
          MOVE      SP70,KEY18
WSCU0200  CALL      RSWTSCU1                   * position at start of file
WSCU0500  CALL      RKWTSCU1                   * read next record
          BRANCH    OVRCD,WSCU9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,WTSCDATE,WTSCUNIT,WTSCDOCT,WTSCPRTY
          PACK      SAVKEY18,WTSCDATE,WTSCUNIT,WTSCDOCT,WTSCPRTY
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check WTSCDOCT
.
          PACK      CODEDFLD,WTSCDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WSCU9000                * no
.
          MOVE      NEWCODE,WTSCDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WSCU9000  BRANCH    UPDTFLAG,WSCU0500            * no mappings
          CALL      UPWTSCU1
.
          MOVE      SAVKEY18,KEY18
          GOTO      WSCU0200                     * get next record
.
WSCU9999  RETURN
+
.*****************************************************************************
.*                              WSEI0000              Called by: PROC0000    *
.*       Loop through watseiaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WSEI0000  DISPLAY   *P12:24,*EL,"watseiaf:";
          MOVE      SP70,KEY13
WSEI0200  CALL      RSWTSEI1                   * position at start of file
WSEI0500  CALL      RKWTSEI1                   * read next record
          BRANCH    OVRCD,WSEI9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,WTSICONS,WTSILTYP,WTSIUSER
          PACK      SAVKEY13,WTSICONS,WTSILTYP,WTSIUSER
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check WTSICONS
.
          PACK      CODEDFLD,WTSICONS,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WSEI9000                * no
.
          MOVE      NEWCODE,WTSICONS             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WSEI9000  BRANCH    UPDTFLAG,WSEI0500            * no mappings
          CALL      UPWTSEI1
.
          MOVE      SAVKEY13,KEY13
          GOTO      WSEI0200                     * get next record
.
WSEI9999  RETURN
+
.*****************************************************************************
.*                              WTR10000              Called by: PROC0000    *
.*       Loop through wattr1af and fix any relevant doctor fields            *
.*****************************************************************************
.
WTR10000  DISPLAY   *P12:24,*EL,"wattr1af:";
          MOVE      SP70,KEY19
          CALL      RDSTREA1                   * position at start of file
WTR10500  CALL      RDKTREA1                   * read next record
          BRANCH    OVRCD,WTR19999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,WMURNO,WMCODE,DWMCNT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check WMDOCTOR
.         
          PACK      CODEDFLD,WMDOCTOR,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WTR11000                * no
.         
          MOVE      NEWCODE,WMDOCTOR             * yes - load new code
.
.         Check WTWMRFGP
.
WTR11000  PACK      CODEDFLD,WTWMRFGP,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WTR19000                * no
.
          MOVE      NEWCODE,WTWMRFGP              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WTR19000  BRANCH    UPDTFLAG,WTR10500            * no mappings
          CALL      UPTREA1
.
          GOTO      WTR10500                     * get next record
.
WTR19999  RETURN
+
.*****************************************************************************
.*                              WUDC0000              Called by: PROC0000    *
.*       Loop through watudcaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WUDC0000  DISPLAY   *P12:24,*EL,"watudcaf:";
          MOVE      SP70,KEY21
WUDC0200  CALL      RDSUDCA1                   * position at start of file
WUDC0500  CALL      RDKUDCA1                   * read next record
          BRANCH    OVRCD,WUDC9999              * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,WTUCDATE,WTUCUNIT,WTUCDOCT,WTUCPRTY:
                                       WTUCCCOD
          PACK      SAVKEY21,WTUCDATE,WTUCUNIT,WTUCDOCT,WTUCPRTY:
                                       WTUCCCOD
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check WTUCDOCT
.
          PACK      CODEDFLD,WTUCDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WUDC9000                * no
.
          MOVE      NEWCODE,WTUCDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WUDC9000  BRANCH    UPDTFLAG,WUDC0500            * no mappings
          CALL      UPUDCA1
.
          MOVE      SAVKEY21,KEY21
          GOTO      WUDC0200                     * get next record
.
WUDC9999  RETURN
+
.*****************************************************************************
.*                              WUDS0000              Called by: PROC0000    *
.*       Loop through watudsaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WUDS0000  DISPLAY   *P12:24,*EL,"watudsaf:";
          MOVE      SP70,KEY18
WUDS0200  CALL      RDSUDSA1                   * position at start of file
WUDS0500  CALL      RDKUDSA1                   * read next record
          BRANCH    OVRCD,WUDS9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,WTUDDATE,WTUDUNIT,WTUDDOCT,WTUDPRTY
          PACK      SAVKEY18,WTUDDATE,WTUDUNIT,WTUDDOCT,WTUDPRTY
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check WTUDDOCT
.         
          PACK      CODEDFLD,WTUDDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WUDS9000                * no
.
          MOVE      NEWCODE,WTUDDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WUDS9000  BRANCH    UPDTFLAG,WUDS0500            * no mappings
          CALL      UPUDSA1
.
          MOVE      SAVKEY18,KEY18
          GOTO      WUDS0200                     * get next record
.
WUDS9999  RETURN
+
.*****************************************************************************
.*                              WUNS0000              Called by: PROC0000    *
.*       Loop through watunsaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WUNS0000  DISPLAY   *P12:24,*EL,"watunsaf:";
          MOVE      SP70,KEY18
WUNS0200  CALL      RDSUNSA1                   * position at start of file
WUNS0500  CALL      RDKUNSA1                   * read next record
          BRANCH    OVRCD,WUNS9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,WTUNDATE,WTUNUNIT,WTUNDOCT,WTUNPRTY
          PACK      SAVKEY18,WTUNDATE,WTUNUNIT,WTUNDOCT,WTUNPRTY
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check WTUNDOCT
.         
          PACK      CODEDFLD,WTUNDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WUNS9000                * no
.
          MOVE      NEWCODE,WTUNDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WUNS9000  BRANCH    UPDTFLAG,WUNS0500            * no mappings
          CALL      UPUNSA1
.
          MOVE      SAVKEY18,KEY18
          GOTO      WUNS0200                     * get next record
.
WUNS9999  RETURN
+
.*****************************************************************************
.*                              WUPC0000              Called by: PROC0000    *
.*       Loop through watupcaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WUPC0000  DISPLAY   *P12:24,*EL,"watupcaf:";
          MOVE      SP70,KEY21
WUPC0200  CALL      RSWTUPC1                   * position at start of file
WUPC0500  CALL      RKWTUPC1                   * read next record
          BRANCH    OVRCD,WUPC9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,WTUPDATE,WTUPUNIT,WTUPDOCT,WTUPOPTY:
                                       WTUPNPTY
          PACK      SAVKEY21,WTUPDATE,WTUPUNIT,WTUPDOCT,WTUPOPTY:
                                       WTUPNPTY
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check WTUPDOCT
.         
          PACK      CODEDFLD,WTUPDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WUPC9000                * no
.
          MOVE      NEWCODE,WTUPDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WUPC9000  BRANCH    UPDTFLAG,WUPC0500            * no mappings
          CALL      UPWTUPC1
.
          MOVE      SAVKEY21,KEY21
          GOTO      WUPC0200                     * get next record
.
WUPC9999  RETURN
+
.*****************************************************************************
.*                              WVWL0000              Called by: PROC0000    *
.*       Loop through watvwlaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WVWL0000  DISPLAY   *P12:24,*EL,"watvwlaf:";
          MOVE      SP70,KEY9
WVWL0200  CALL      RSWTVWL1                   * position at start of file
WVWL0500  CALL      RKWTVWL1                   * read next record
          BRANCH    OVRCD,WVWL9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,WTVWCONS,WTVWLTYP
          PACK      SAVKEY9,WTVWCONS,WTVWLTYP
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check WTVWCONS
.         
          PACK      CODEDFLD,WTVWCONS,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WVWL9000                * no
.
          MOVE      NEWCODE,WTVWCONS             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WVWL9000  BRANCH    UPDTFLAG,WVWL0500            * no mappings
          CALL      UPWTVWL1
.
          MOVE      SAVKEY9,KEY9
          GOTO      WVWL0200                     * get next record
.
WVWL9999  RETURN
+
.*****************************************************************************
.*                              WWTA0000              Called by: PROC0000    *
.*       Loop through watwtaaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WWTA0000  DISPLAY   *P12:24,*EL,"watwtaaf:";
          MOVE      SP70,KEY24
WWTA0200  CALL      RSWTWTA1                   * position at start of file
WWTA0500  CALL      RKWTWTA1                   * read next record
          BRANCH    OVRCD,WWTA9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,WTWTDATE,WTWTPROC,WTWTDOCT,WTWTUNIT
          PACK      SAVKEY24,WTWTDATE,WTWTPROC,WTWTDOCT,WTWTUNIT
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.         
.         Check WTWTDOCT
.         
          PACK      CODEDFLD,WTWTDOCT,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WWTA9000                * no
.         
          MOVE      NEWCODE,WTWTDOCT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WWTA9000  BRANCH    UPDTFLAG,WWTA0500            * no mappings
          CALL      UPWTWTA1
.
          MOVE      SAVKEY24,KEY24
          GOTO      WWTA0200                     * get next record
.
WWTA9999  RETURN
+
.*****************************************************************************
.*                              WSEC0000              Called by: PROC0000    *
.*       Loop through websecaf and fix any relevant doctor fields            *
.*****************************************************************************
.
WSEC0000  DISPLAY   *P12:24,*EL,"websecaf:";
          MOVE      SP70,KEY10
          CALL      RSWBSE1                   * position at start of file
WSEC0500  CALL      RKWBSE1                   * read next record
          BRANCH    OVRCD,WSEC9999              * eof - finished
.         
          DISPLAY   *P22:24,*EL,*V2LON,WBSEUID
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check WBSEDOC
.
          PACK      CODEDFLD,WBSEDOC,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WSEC1000                * no
.
          MOVE      NEWCODE,WBSEDOC             * yes - load new code
.
.         Check WBSEGPCD
.
WSEC1000  PACK      CODEDFLD,WBSEGPCD,SP10         * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,WSEC9000                * no
.
          MOVE      NEWCODE,WBSEGPCD              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
WSEC9000  BRANCH    UPDTFLAG,WSEC0500            * no mappings
          CALL      UPWBSE1
.
          GOTO      WSEC0500                     * get next record
.
WSEC9999  RETURN
+
.*****************************************************************************
.*                              CMAP0000               Called by: PROC0000   *
.*             Check for a mapped code on the temp index file                *
.* Requires:  CODEDFLD - the old code from the current record                *
.* Returns:   NEWCODE - the new mapped code for the current field            *
.*            EXIT  0 = mapped code on file for old code                     *
.*                  1 = no mapped code on file for old code                  *
.*            UPDTFLAG 0 = one or more fields mapped, so update record       *
.*****************************************************************************
.
CMAP0000  MATCH     SP70,CODEDFLD                 * blank code ?
          GOTO      CMAP9100 IF EQUAL            * yes - no mapping req'd
.
          PACK      KEY6,CODEDFLD,SP20
          CALL      RDTEMP1                      * old code on map file ?
          BRANCH    OVRCD,CMAP9100               * no - no mapping req'd.
.
          MOVE      ZERO,UPDTFLAG                * set flag for record update
.
          MOVE      ZERO,EXIT
          GOTO      CMAP9999
.
CMAP9100  MOVE      ONE,EXIT
.
CMAP9999  RETURN
+
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             Create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      MAPTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: MAIN0000  *
.*               Close and erase the temporary file               CREA0000  *
.****************************************************************************
.
KILL0000  CLOSE     MAPTEMP1                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RATEMP1   MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      MAPTEMP1,KEY6;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMP1   READ      MAPTEMP1,KEY6;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      MAPTEMP1,KEY6;OLDCODE,NEWCODE
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    MAPTEMP1;OLDCODE,NEWCODE
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    MAPTEMP1;OLDCODE,NEWCODE
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   WRITE     MAPTEMP1,KEY6;OLDCODE,NEWCODE
          RETURN
.
UPTEMP1   UPDATE    MAPTEMP1;OLDCODE,NEWCODE
          RETURN
.
DETEMP1   DELETE    MAPTEMP1,KEY6
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       CLPMSQPX
.
          INC       AAECOTIO/INC
          INC       AAEDE1IO/INC
          INC       AAEDTRIO/INC
          INC       ALLACTIO/INC
          INC       ALLADSIO/INC
          INC       ALLCTMIO/INC
          INC       ALLENCIO/INC
          INC       ALLEXTIO/INC
          INC       ALLGEHIO/INC
          INC       ALLGRHIO/INC
          INC       ALLHDTIO/INC
          INC       ALLQUEIO/INC
          INC       ALLREFIO/INC
          INC       CCSEPSIO/INC
          INC       CEASTRIO/INC
          INC       CEATFMIO/INC
          INC       CEATGMIO/INC
          INC       CEAVAMIO/INC
          INC       CCIBAUIO/INC
          INC       CCIBTRIO/INC
          INC       CCIUTLIO/INC
          INC       CLAVARIO/INC
          INC       HICCLMIO/INC
.         INC       HL7OBRIO/INC
.         INC       HL7OBXIO/INC
.         INC       HL7ORCIO/INC
.         INC       HL7PV1IO/INC
          INC       EMRDOCIO/INC
          INC       EMREXPIO/INC
          INC       EMRHISIO/INC
          INC       EMRINCIO/INC
          INC       EMRISMIO/INC
          INC       EMRQUEIO/INC
          INC       EMRVCDIO/INC
          INC       EMRVISIO/INC
          INC       EOCACCIO/INC
          INC       IBASEQIO/INC
          INC       LEGBOBIO/INC
          INC       LEGCLIIO/INC
          INC       LEGDEAIO/INC
          INC       LEGDOCIO/INC
          INC       LEGDTRIO/INC
          INC       LEGMAAIO/INC
          INC       LEGMISIO/INC
          INC       LEGTRNIO/INC
          INC       LEGVISIO/INC
          INC       MEHDLSIO/INC
          INC       MEHHLSIO/INC
          INC       MEHHONIO/INC
          INC       MEHPATIO/INC
          INC       MEHPCOIO/INC
          INC       MEHPLSIO/INC
          INC       MRTDSRIO/INC
          INC       MRTPDSIO/INC
          INC       MRTREXIO/INC
          INC       BOKQUEIO/INC
          INC       BOKRC1IO/INC
          INC       BOKRX1IO/INC
.         INC       OPR001IO/INC
          INC       OPRANEIO/INC
          INC       OPRATTIO/INC
          INC       OPRAVEIO/INC
          INC       OPRCLIIO/INC
          INC       OPRCOMIO/INC
          INC       OPRCOSIO/INC
          INC       OPRCOUIO/INC
          INC       OPRCSCIO/INC
          INC       OPRCSUIO/INC
          INC       OPRCTSIO/INC
          INC       OPRDEAIO/INC
          INC       OPRDEBIO/INC
          INC       OPRDLVIO/INC
          INC       OPRDPFIO/INC
          INC       OPRDPHIO/INC
          INC       OPRPCMIO/INC
          INC       OPRPRFIO/INC
          INC       OPRQUEIO/INC
          INC       OPRRALIO/INC
          INC       OPRREQIO/INC
          INC       OPRSEMIO/INC
          INC       OPRSESIO/INC
          INC       OPRSOSIO/INC
          INC       OPRSOUIO/INC
          INC       OPRTSMIO/INC
          INC       MAMMASIO/INC
          INC       OUTBB1IO/INC
          INC       OUTCLIIO/INC
          INC       OUTHEDIO/INC
          INC       OUTLADIO/INC
          INC       OUTMA1IO/INC
          INC       OUTMXSIO/INC
          INC       OUTQUEIO/INC
          INC       OUTRF1IO/INC
          INC       OUTSITIO/INC
.         INC       OUTRQUIO/INC
          INC       OUTSESIO/INC
          INC       OUTUATIO/INC
          INC       OUTXSCIO/INC
          INC       ARCVX1IO/INC
          INC       MLTCFNIO/INC
          INC       MLTHCPIO/INC
          INC       NZPPICIO/INC
          INC       NZPRPIIO/INC
          INC       NZPSPRIO/INC
          INC       PATAA1IO/INC
          INC       PATAD1IO/INC
          INC       PATAXEIO/INC
          INC       PATC1SIO/INC
          INC       PATC2SIO/INC
          INC       PATCRCIO/INC
          INC       PATCRDIO/INC
          INC       PATCUNIO/INC
          INC       PATDFEIO/INC
          INC       PATDKIIO/INC
          INC       PATDO1IO/INC
          INC       PATDSTIO/INC
          INC       PATDTRIO/INC
          INC       PATEX1IO/INC
          INC       PATEXBIO/INC
          INC       PATEXCIO/INC
.         INC       PATHDOIO/INC
          INC       PATIMMIO/INC
          INC       PATINPIO/INC
.         INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATNADIO/INC
          INC       PATPERIO/INC
          INC       PATPRVIO/INC
.         INC       PATSQAIO/INC
          INC       PATTRNIO/INC
          INC       PATVISIO/INC
          INC       PMSBDCIO/INC
          INC       PMSBRQIO/INC
          INC       PMSDLTIO/INC
          INC       PMSDSLIO/INC
          INC       PMSDTCIO/INC
          INC       PMSDUNIO/INC
          INC       PMSEVTIO/INC
          INC       PMSFCIIO/INC
          INC       PMSGPAIO/INC
          INC       PMSHCGIO/INC
          INC       PMSHCLIO/INC
          INC       PMSHCPIO/INC
          INC       PMSHKIIO/INC
          INC       PMSMTEIO/INC
          INC       PMSMTIIO/INC
          INC       PMSNUTIO/INC
          INC       PMSPX2IO/INC
          INC       PMSQDRIO/INC
          INC       PMSQITIO/INC
          INC       PMSQPTIO/INC
          INC       PMSQVIIO/INC
          INC       PMSRFLIO/INC
          INC       PMSTCOIO/INC
          INC       PMSVX1IO/INC
          INC       PMSWORIO/INC
          INC       PMSWX1IO/INC
.         INC       SAVPX2IO/INC
          INC       PRIBULIO/INC
          INC       PRIDOCIO/INC
          INC       PRIDTRIO/INC
          INC       PRIFCIIO/INC
          INC       PRIFLSIO/INC
          INC       PRIFSLIO/INC
          INC       PRIGSLIO/INC
          INC       PRIHREIO/INC
          INC       PRIHTRIO/INC
          INC       PRIINVIO/INC
          INC       PRIPCEIO/INC
          INC       PRIPRAIO/INC
          INC       PRISTAIO/INC
          INC       PRITMPIO/INC
          INC       RESHEAIO/INC
          INC       RESLNKIO/INC
          INC       RESLURIO/INC
          INC       TFILENAM
          INC       WATCPTIO/INC
          INC       WATEXTIO/INC
          INC       WATHISIO/INC
          INC       WATQUEIO/INC
          INC       WATSCUIO/INC
          INC       WATSEIIO/INC
          INC       WATTR1IO/INC
          INC       WATUDCIO/INC
          INC       WATUDSIO/INC
          INC       WATUNSIO/INC
          INC       WATUPCIO/INC
          INC       WATVWLIO/INC
          INC       WATWTAIO/INC
          INC       WEBERRIO/INC
          INC       WEBSECIO/INC
.
