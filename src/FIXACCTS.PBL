. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   FIXACCTS                                             *
. * Desc      :   Account Fixit Program                                *
. **********************************************************************
. * Date      :   08.07.91                                             *
. * Author    :   Neeriem Dye                                          *
. * Mods      :                                                        *
. * V10.03.01 27/02/2013  Ania P                        CAR 281021     *
. *           RECOMPILED for FMSBNKKY                                  *
. * VF.09.01  06/09/2002  Tonii Srf 21069                              *
. *           New option to check and fix fmswasaf (option 3) all other*
. *           options after is incremented by one                      *
. **********************************************************************
. * VF.09 B01 20.11.2000 Sandra Barcham                                *
. *           Added fmsgyyyy into all options                          *
. **********************************************************************
. * VF.00.08  07.06.2000 Sandra Barcham                                *
. *           Added fmsdyyyy into option 6                             *
. * VF.00.07  28.04.2000 Sandra Barcham                                *
. *           Recompiled for FMSBNKKY Change                           *
. * VF.00.06  10.02.2000 Sandra Barcham                                *
. *           Fix default date for option 9                            *
. * VF.00.05  13.01.2000 Sandra Barcham                                *
. *           Recompiled for FMSBNKKY change                           *
. * VF.00.04  05.01.2000 Charles Handaya                               *
. *           Recompiled for APSMASIO change                           *
. * VF.00.03  12.11.1999 Sandra Barcham                                *
. *           Recompiled for change to FMSCCAFD                        *
. *           srf 646145                                               *
. *           Delete direct debits from apscilaf as well as cheques    *
. *           srf 635048                                               *
. * VF.00.02  02.09.1999 Sandra Barcham                                *
. *           Add in Creditor Keyword Search                           *
. *           srf 631485                                               *
. * VF.00.01  01.07.1999 Sandra Barcham                                *
. *           Recompiled for PRCFMSUB                                  *
. *           srf 632424                                               *
. **********************************************************************
. * V6.00.66  28.10.1998 Sandra Barcham                                *
. *           Stop compile errors for D30 undefined                    *
. * V6.00.65  25.09.1997 Sandra Barcham                                *
. *           Fix updating if not account master record                *
. *           srf 621942                                               *
. * V6.00.64  18.06.1997 Sandra Barcham                                *
. *           Fix balance a/p to gl                                    *
. * V6.00.63  12.06.1997 Sandra Barcham                                *
. *           Recalculate cost centre and subjective descriptions to nw*
. *           lengths defined in system set up parameters              *
. *           srf 620157                                               *
. * V6.00.62  14.05.1997 Sandra Barcham                                *
. *           Check for journals in trade creditors                    *
. *           Check g/l batchs to a/p batchs                           *
. *           srf 642740                                               *
. * V6.00.61  14.05.1997 Sandra Barcham                                *
. *           Check a/p batchs to g/l batchs                           *
. *           srf 642740                                               *
. * V6.00.60  22.04.1997 Sandra Barcham                                *
. *           Allow for discount when balancing a/p batchs             *
. *           srf 642740                                               *
. * V6.00.59  03.04.1997 Sandra Barcham                                *
. *           Allow X to exit                                          *
. *           srf 618183                                               *
. * V6.00.58  06.03.1997 Sandra Barcham                                *
. *           Print creditors name correctly in batch print            *
. *           srf 619299                                               *
. * V6.00.57  16.01.1997 Sandra Barcham                                *
. *           Change error messages to include batch number            *
. *           srf 618498                                               *
. * V6.00.56  05.11.1996 B.G.Ackland                                   *
. *           Remove credmsta & credmstb                               *
. *           srf 617390                                               *
. * V6.00.55  06.08.1996 B.G.Ackland                                   *
. *           Recompiled for FMSCHQFD & APSAPYFD Changes               *
. *           quote 8691                                               *
. * V6.00.54  06.08.1996 Sandra Barcham                                *
. *           Recompiled for FMSACCCD fmamtype update problem          *
. *           srf 641858                                               *
. * V6.00.53  14.05.1996 Sandra Barcham                                *
. *           Recompiled for FMSACCCD FTE problem                      *
. *           srf 641454                                               *
. * V6.00.52  08.12.1995 Sandra Barcham                                *
. *           Added Option to balance accounts payable batchs          *
. * V6.00.51  05.04.1995 Robert Sumsion                                *
. *           Added Report for the fmstcfaf records which are missing  *
. *           and exist in the fmsamaaf file.                          *
. *           srf 135648                                               *
. * V6.00.50  20.02.1995 Robert Sumsion                                *
. *           Recompiled for the changes to FMSBNKKY (lookup part)     *
. *           (ie the bottom item on lookups was being missed)         *
. *           srf 134661                                               *
. * V6.00.49  10.06.1994 Robert Sumsion                                *
. *           Recompiled for changes to apsapyaf file includes         *
. *           srf 129416                                               *
. * V6.00.48  27.04.1994 Robert Sumsion                                *
. *           Modified for new budget audit files.                     *
. *           srf 127778                                               *
. * V6.00.47  21.10.1993 Neeriem Dye                                   *
. *           Recompiled for new committed expenditure update          *
. * V6.00.46  20.10.1993 Neeriem Dye                                   *
. *           Fix update of stat transactions to period summary file   *
. * V6.00.45  30.09.1993 Neeriem Dye                                   *
. *           Modify accounts payable batch check to allow a batch     *
. *           range and fix records that should be set for update      *
. * V6.00.44  15.09.1993 Neeriem Dye                                   *
. *           Add check for stat-total sub cost centre level           *
. *           Use Subjective Description Type for Consol Cost Centres  *
. *           srf 600463                                               *
. * V6.00.43  10.09.1993 Neeriem Dye                                   *
. *           Update Batch Date                                        *
. *           srf 122288                                               *
. * V6.00.42  05.07.1993 Neeriem Dye                                   *
. *           Update APIMOUT                                           *
. * V6.00.41  17.05.1993 Neeriem Dye                                   *
. *           Modify Subjective Parameters                             *
. * V6.00.40  13.05.1993 Neeriem Dye                                   *
. *           Delete items for cc + subj report not required           *
. * V6.00.39  05.05.1993 Neeriem Dye                                   *
. *           Delete accounts with stuffed separator character         *
. * V6.00.37  23.04.1993 Neeriem Dye                                   *
. *           Fix bank rec file                                        *
. *           srf 122040                                               *
. * V6.00.36  16.12.1992 Neeriem Dye                                   *
. *           Delete batch option now allows cash delete only          *
. * V6.00.35  14.12.1992 Neeriem Dye                                   *
. *           Recalc stat-posting accounts in calc acct from trans     *
. * V6.00.33  17.11.1992 Neeriem Dye                                   *
. *           remove displays for every record                         *
. * V6.00.32  12.10.1992 Neeriem Dye                                   *
. *           Dont update suspension flag of each CC/Subj acc          *
. *           srf 116999                                               *
. * V6.00.31  22.09.1992 Neeriem Dye                                   *
. *           Recompiled for FMSACCCD (CCC handling)                   *
. *           srf 117151                                               *
. * V6.00.30  18.09.1992 Neeriem Dye                                   *
. *           Fix batch check routine                                  *
. * V6.00.29  02.09.1992 Neeriem Dye                                   *
. *           Modified create DOF from processed batch option          *
. *           srf 114492                                               *
. * V6.00.28  02.09.1992 Neeriem Dye                                   *
. *           Added create DOF from processed batch option             *
. *           srf 114492                                               *
. * V6.00.27  14.08.1992 Neeriem Dye                                   *
. *           Remove use of enquiry parameters                         *
. *           srf 114492                                               *
. * V6.00.25  09.06.1992 Neeriem Dye                                   *
. *           Add create audit report option                           *
. **********************************************************************
.$$$$$$
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUPDDF           * FMS update routines
          INC       FMSUDADF           * FMS update routines
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
.
          INC       APSAPYDF
          INC       APSAPYFD/INC
          INC       APSBMFFD/INC
          INC       APSCAFFD/INC
          INC       APSCILFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSNSCFD/INC
          INC       APSSCXFD/INC
          INC       IBABATFD/INC
          INC       IBACONFD/INC
          INC       IBAPASFD/INC
          INC       FMSBASFD/INC
          INC       FMSBPFFD/INC
          INC       FMSBCFFD/INC
          INC       FMSBNKFD/INC
          INC       FMSCHQFD/INC
          INC       FMSCSAFD/INC
          INC       FMSCTRFD/INC
          INC       FMSCCAFD/INC
          INC       FMSCCCFD/INC
          INC       FMSDSFFD/INC
          INC       FMSLEVFD/INC
          INC       FMSLMBFD/INC
          INC       FMSRSFFD/INC
          INC       FMSWASFD/INC
          INC       FMSSBAFD/INC
          INC       FMSSSCFD/INC
          INC       FMSSLBFD/INC
          INC       FMSTRNFD/INC
          INC       FMSSTRFD/INC
          INC       FMSSCZFD/INC
          INC       FMSXCSFD/INC
          INC       FMSSIBFD/INC
          INC       FMSCAFFD/INC
          INC       FMSUWPFD/INC
.
ISBUILD   INIT      "isbuild "         * define temp file variables
ISERASE   INIT      "iserase "
TMP0ADAT  INIT      " 123 U1-17"
NEZTMP0A  IFILE     SQL, FIXED=123, KEY="U1-17"
NAMEA     INIT      "neztmp0A"
KILLTMPA  DIM       80
MAKETMPA  DIM       80
.
.Name     Type      Length Physical Start Description
.----------------------------------------------------
NEZACRED  DIM       5      5        1     creditor
NEZACODE  DIM       12     12       6     charge code
NEZAAMT   FORM      12.2   8        18    amount (COLLECT if cred & code="    ")
NEZACNUM  DIM       8      8        25    consecutive number
NEZABUT1  DIM       18     18       33    butt line 1(used if char cod = "~~..")
.                                              (DATERUN if cred & code="    ")
NEZABUT2  DIM       18     18       51    butt line 2(used if char cod = "~~..")
.                                              (APAPDOF if cred & code="    ")
NEZABUT3  DIM       18     18       69    butt line 3(used if char cod = "~~..")
.                                              (BCHTOTAL if cred & code="    ")
NEZABUT4  DIM       18     18       87    butt line 4(used if char cod = "~~..")
NEZABUT5  DIM       18     18       105   butt line 5(used if char cod = "~~..")
.
.End of file                        123
.
TMP0BDAT  INIT      " 11 U1-2"
NEZTMP0B  IFILE     SQL, FIXED=11, KEY="U1-2"
NAMEB     INIT      "neztmp0B"
KILLTMPB  DIM       80
MAKETMPB  DIM       80
.
.Name     Type      Length Physical Start Description
.----------------------------------------------------
NEZBLEDG  DIM       2      2        1     ledger
NEZBAMT   FORM      12.2   8        3     amount
.
.Data File Definition
.--------------------
NZCAMAKE  INIT  "isbuild nezcafaf 74 U1-8,9-13,14-28 U29-30,1-8,9-13,14-28"
NZCAKILL  INIT  "iserase nezcafaf"
NZCAFILE  INIT  "nezcafaf"
NEZCAFA1   IFILE    SQL, FIXED=74, KEY="U1-8,9-13,14-28"                        
NEZCAFA2   IFILE    SQL, FIXED=74, KEY="U29-30,1-8,9-13,14-28"                  
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
NZCACHQ   DIM       8      8        1     Cheque Number                      
NZCACRD   DIM       5      5        9     Creditor                           
NZCAINV   DIM       15     15       14    Invoice                            
NZCALED   DIM       2      2        29    Ledger                             
NZCAAMT   FORM      12.2   8        31    Amount                             
NZCADES   DIM       35     35       39    Transaction Description            
.
.End of Record                      74   
.
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
.
. data definitions for FMSACCCD
. -----------------------------
DSIX      INIT      "6"
DSEVEN    INIT      "7"
DEIGHT    INIT      "8"
DNINE     INIT      "9"
FMSO      INIT      "fmso"
.
CORREF    DIM       15
COSTCODE  DIM       12       * cc code
CCLEV     DIM       3        * cc level
DELALL    FORM      1        * 1=delete to top of tree
FILENAME  DIM       8        * filename
OLDADDT   DIM       12       * old add to account
OLDDCOST  FORM      1        * 1=use old cc data
OLDPPOS   DIM       5        * old print pos
OLDDSUBJ  FORM      1        * 1=use old subj data
OLDSTAT   FORM      2        * old status type
POSTACCT  DIM       12       * account
RCOSCODE  DIM       12
RSUBCODE  DIM       12
RTOTACCT  DIM       12
RESTFMSA  DIM       14       * restore subjective key
SCRNO     FORM      2
SFMTS01   DIM       43
SFMTS02   DIM       43
SFMTS03   DIM       43
SFMTS04   DIM       43
SFMTS05   DIM       43
SFMTS06   DIM       43
SFMTS07   DIM       43
SFMTS08   DIM       43
SFMTS09   DIM       43
SFMTS10   DIM       43
SKEY12    DIM       12       * key save
SKEY27    DIM       27
SKEY28    DIM       28       * key save
SKEY31    DIM       31       * key save
SKEY33    DIM       33       * key save
SKEY43    DIM       43       * key save
SKIPFMTU  FORM      1        * 1=no total account update req
SLBNAME   DIM       8        * filename
SUBJ1     DIM       12       * subj code
SUBJ2     DIM       12       * subj code
SUBJCODE  DIM       12       * subj code
TEMPACCT  DIM       12       * cc
TEMPCOST  DIM       12       * cc
TEMPCPOS  DIM       5        * cc print position
TEMPSPOS  DIM       5        * subj print position
TEMPSUBJ  DIM       12       * subj
WRECLEV   FORM      1        * must be set to zero
.
DIM1E     DIM       1
XIM14     DIM       14
DIMA14    DIM       14
DIMB14    DIM       14
DIMC5     DIM       5
DIMD35    DIM       35
DIME5     DIM       5
SAVEDATA  DIM       50
SAVECCC   DIM       50       * field to ccc data
.
IMSTOTAL  FORM      13.2
INPTOTAL  FORM      13.2
.
ALL       INIT      "All Ledgers                        "
NINE10    INIT      "9999999999"
ZERO10    INIT      "0000000000"
.
ACCEPT    FORM      1        * accept mode (1=on)
ACCYEAR   DIM       4        * year
BALANCE   FORM      13.2     * balance
BASFLAG   FORM      1
BATCH1    DIM       5        * batch
BATCH2    DIM       5        * batch
BATCHA    FORM      5        * batch counter error accrual
BATCHC    FORM      5        * batch counter error cash
BATCHE    FORM      5        * batch counter error accounts
BATCHT    FORM      5        * batch counter
BATCHX    FORM      5        * batch counter error XX trans
CASYEAR   DIM       4        * year
.
D30       DIM       30
FMSA      INIT      "fmsa"
FMSD      INIT      "fmsd"
FMSG      INIT      "fmsg"
FMSR      INIT      "fmsr"
FMST      INIT      "fmst"
FMSZ      INIT      "fmsz"
SIBPRE    DIM       1
FMSAFILE  DIM       8        * file
FMSDFILE  DIM       8        * file
FMSGFILE  DIM       8        * file
FMSPFILE  DIM       8        * file
FMSRFILE  DIM       8        * file
FMSSFILE  DIM       8        * file
FMSTFILE  DIM       8        * file
FMSZFILE  DIM       8        * file
.
OPTIONA   FORM      2        * screen A selection keyin var
OPTIONC   FORM      2        * screen C selection keyin var
OPTIOND   FORM      2        * screen D selection keyin var
OPTIONF   FORM      2        * screen F selection keyin var
OPTIONG   FORM      2        * screen G selection keyin var
OPTIONH   FORM      2        * screen H selection keyin var
OPTIONI   FORM      2        * screen I selection keyin var
OPTIONJ   FORM      2        * screen J selection keyin var
OPTIONK   FORM      2        * screen K selection keyin var
OPTIONL   FORM      2        * screen L selection keyin var
OPTIONM   FORM      2        * screen M selection keyin var
OPTIONN   FORM      2        * screen N selection keyin var
OPTIONO   FORM      2        * screen O selection keyin var
OPTIONS   FORM      2        * screen S selection keyin var
FILPATH   DIM       40       * filename
READFILE  FILE      ASCII,FIXED=80     * read file
CUROPTN   FORM      2        * menu selection keyin var
SKEY14    DIM       14       * key save
SKEY26    DIM       26       * save key
HEADSEQ   INIT      "00000"
TOTSEQ    INIT      "ZZZZZ"
SAVEPRT   DIM       3        * save for print type
DELRSF    FORM      1        * delete all recs from rsf file (1=only cc/s reps)
BATDATE   DIM       8        * from batch date
BATCH     DIM       5        * batch
BCH       INIT      "bch"
SAVLEVEL  DIM       3
LNO       FORM      3
EXITMODE  FORM      "0"
STARTSCR  FORM      "6"
OPDES     INIT      "                                   "
OPDES1    INIT      "Check fmstcfaf For Invalid Accounts"
OPDES2    INIT      "Check fmsrsfaf For Invalid Accounts"
OPDES3    INIT      "Check fmswasaf For Invalid Accounts"
OPDES4    INIT      "Fix CC & Subj Total Accounts       "
OPDES5    INIT      "Recreate CC/Subj Accounts          "
OPDES6    INIT      "Complete Validation                "
OPDES7    INIT      "Recalc an Account from Transactions"
OPDES8    INIT      "Run Update for an Account          "
OPDES9    INIT      "Delete an Account                  "
OPDES10   INIT      "Check Balances of Processed Batches"
OPDES11   INIT      "Check Batch Format                 "
OPDES12   INIT      "Update CC Levels                   "
OPDES13   INIT      "Update for range of Subjectives    "
OPDES14   INIT      "Cheque/Receipt Validation          "
OPDES15   INIT      "Update Cheque Numbers For A Batch  "
OPDES16   INIT      "Delete a Processed Batch           "
OPDES17   INIT      "Recalc APIMPAY and APIMOUT         "
OPDES18   INIT      "Create cheque audit report         "
OPDES19   INIT      "List un-updated batches for a Cred "
OPDES20   INIT      "Check TCF file for range of accts  "
OPDES21   INIT      "Fork to another program            "
OPDES22   INIT      "Re-create DOF Batch                "
OPDES23   INIT      "Create a List of Accounts          "
OPDES24   INIT      "Add missing recs to FMSBKAF        "
OPDES25   INIT      "Remove accounts with wrong sep char"
OPDES26   INIT      "Modify CC/Subj Parameters          "
OPDES27   INIT      "Modify Processed Batch Date        "
OPDES28   INIT      "Report missing fmstcfaf records    "
OPDES29   INIT      "Check A/P Batch balances           "
OPDES30   INIT      "Balance A/P to General Ledger      "
OPDES31   INIT      "Check for journals in Trade Cred.  "
OPDES32   INIT      "Balance G/L to Accounts Payable    "
OPDES33   INIT      "Change Cost Centre Subjective Desc."
OPDES34   INIT      "Delete unused Cost & Subjectives   "
.
ERRFILE   FILE      ASCII,FIXED=80     * log file
LOGFILE   INIT      "error"
ATOT01    FORM      12.6
ATOT02    FORM      12.6
ATOT03    FORM      12.6
ATOT04    FORM      12.6
ATOT05    FORM      12.6
ATOT06    FORM      12.6
ATOT07    FORM      12.6
ATOT08    FORM      12.6
ATOT09    FORM      12.6
ATOT10    FORM      12.6
ATOT11    FORM      12.6
ATOT12    FORM      12.6
ATOT13    FORM      12.6
CTOA01    FORM      12.6
CTOA02    FORM      12.6
CTOA03    FORM      12.6
CTOA04    FORM      12.6
CTOA05    FORM      12.6
CTOA06    FORM      12.6
CTOA07    FORM      12.6
CTOA08    FORM      12.6
CTOA09    FORM      12.6
CTOA10    FORM      12.6
CTOA11    FORM      12.6
CTOA12    FORM      12.6
CTOA13    FORM      12.6
.
LEDG1     DIM       2
LEDG2     DIM       2
LEDG1D    DIM       35
LEDG2D    DIM       35
ACCT1     DIM       12
ACCT1D    DIM       35
ACCT2     DIM       12
ACCT2D    DIM       35
DESC1     DIM       127
YEAR1     DIM       4
KREF1     DIM       15
KREF2     DIM       15
T70       INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~":
                    "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
LASTBAT   DIM       5
LASTCRE   DIM       5
LASTPRE   DIM       1
LASTREF   DIM       15
CHQTOT    FORM      13.2
GRPTOT    FORM      13.2
ERRFLAG   FORM      1
REFDESC   INIT      "       "
REFDESC0  INIT      "Cheque "
REFDESC1  INIT      "Receipt"
CHEQSTEP  FORM      8
XORM8     FORM      8
XORM15    FORM      15
ERRFLAG2  FORM      1
.
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
CREDFROM  DIM       5
CREDTO    DIM       5
CURRCRD   DIM       5
CURRREF   DIM       15
SKEY40    DIM       40
TOTAL     FORM      12.2
ALLTOTAL  FORM      12.2
F15       FORM      15
LASTCHEQ  DIM       8
LASTCRED  DIM       5
LASTDOC   DIM       41
LASTLEDG  DIM       2
LEDTOTAL  FORM      12.2
SKEY51    DIM       51
TEMPAMT   FORM      12.5
PROGRAMN  DIM       8
BCHTOTAL  FORM      12.2
F14       FORM      14
LINE1     DIM       32
LINE2     DIM       32
LINE3     DIM       32
COLLECT   FORM      1
COUNTDIS  FORM      5
DATERUN   DIM       8
DELBCH    FORM      1
.
ACCPER    FORM      2     * Accrual Period
CASPER    FORM      2     * Accrual Period
BATNAME   DIM       8
D15       DIM       15
LLPOS     FORM      2
LASTDRCR  DIM       2
LASTNAME  DIM       40
STATBAT   DIM       5
STATDESC  DIM       30
MENUOPT11  FORM      1
PRTDESC   DIM       7
POSTDATE  DIM       10
BATDESC   DIM       18
BSTATUS   FORM      1
BATCHNO   FORM      5
DIM5A     DIM       5
ENTRDATE  DIM       10
ENDPDATE  DIM       10
SIB       INIT      "sib"
SIBFILE   DIM       8
SIBTOTAL  FORM      12.6
REPUNIQ   INIT      "yzxywxvwuvtustrsqrpqopnomnlmkljkijhighfgefdecdbcabZa":
                    "YZXYWXVWUVTUSTRSQRPQOPNOMNLMKLJKIJHIGHFGEFDECDBCAB9A":
                    "8978675645342312 1"
RESTART   FORM     1
PAMOUNT   FORM     12.2  * Period Amount
DAMOUNT   FORM     12.2  * Dissection Amount
TRUNIQ    FORM     5
DEBCRED   DIM       2
FORMAT    INIT      "(999,999,999.99 "
FORMAT2   INIT      "(999,999,999,999.99 "
FORMAT3   INIT      "(99,999,999,999,999.99 "
OUTFORM   DIM       16
OUTFORM1  DIM       20
OUTFORM2  DIM       20
OUTFORM3  DIM       23
RECCOUNT  FORM      2
TOTDEBS   FORM      14.2
TOTCREDS  FORM      14.2 
Z5        INIT      "~~~~~"
SCANCHAR  DIM       1
SCANPOS   FORM      2
NSEPYN    FORM      1
NSEPCH    DIM       1
NSBLEN    FORM      2
NCCLEN    FORM      2
NSABLEN   FORM      2
NCABLEN   FORM      2
OSEPYN    FORM      1
OSEPCH    DIM       1
OSBLEN    FORM      2
OSABLEN   FORM      2
OCABLEN   FORM      2
OCCLEN    FORM      2
OLDACCT   DIM       12
ACCDATE   DIM       8
ACCPER1   FORM      2
ACCPER2   FORM      2
CASDATE   DIM       8
CASPER1   FORM      2
CASPER2   FORM      2
.
CRDTOTAL  FORM      12.2
FMSTOTAL  FORM      12.2
DIFTOTAL  FORM      12.2
SAVKEY40  DIM       40
.
DIM2A     DIM       2
IN        INIT      "IN"
CRED      INIT      "CR"
PY        INIT      "PY"
CANC      INIT      "CC"
RI        INIT      "RI"
.
TOTAMT    FORM      14.2
TOTAMTDR  FORM      14.2
TOTAMTCR  FORM      14.2
.
SAVEBAT   DIM       5
SAVLEDG   DIM       2
SAVSUBJ   DIM       12
.
PRGID     INIT      "FIXACCTS"
PRGNAM    INIT      "Account Fixit Program"
VERSION   INIT      "V12.00.00"
.******************************************************************************
.   MAINLINE - Controlling Logic
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
          BRANCH    EXIT,ML9999        * control file ok ?
.
ML1000    CALL      MENU0000           * get options
          BRANCH    CUROPTN,ML1900,ML1900,ML1900,ML1900,ML1900:
                            ML1900:
                            ML3100,ML3200,ML3300,ML3400,ML3500:
                            ML3600,ML3700,ML3800,ML3900,ML4000:
                            ML4100,ML4200,ML4300,ML4400,ML4500:
                            ML4600,ML4700,ML4800,ML4900,ML5000:
                            ML5100,ML5200,ML5300,ML5400,ML5500:
                            ML5600,ML5700,ML5800
          GOTO      ML9999
.
ML1900    CALL      SELA0000           * get options
          BRANCH    EXIT,ML1000        * exit program
          BRANCH    CUROPTN,ML2100,ML2200,ML2300,ML2400,ML2500:
                            ML2600:
                            ML9999,ML9999,ML9999,ML9999,ML9999:
                            ML9999,ML9999,ML9999,ML9999,ML9999:
                            ML9999,ML9999,ML9999,ML9999,ML9999:
                            ML9999,ML9999,ML9999,ML9999,ML9999:
                            ML9999,ML9999,ML9999,ML9999,ML9999:
                            ML9999,ML9999,ML9999
.
.---- option 1 ----
.
ML2100    CALL      FTCF0000           * fix tcf file
          CALL      COMP0000           * update completed
          GOTO      ML1000
.
.---- option 2 ----
.
ML2200    CALL      FRSF0000           * fix rsf file
          CALL      COMP0000           * update completed
          GOTO      ML1000
.
.---- option 3 ----
.
ML2300    CALL      FWAS0000           * fix 'was' file
          CALL      COMP0000           * updated completed
          GOTO      ML1000
.
.---- option 4 ----
.
ML2400    CALL      FCCS0000           * fix cc & subj total accounts
          CALL      COMP0000           * update completed
          GOTO      ML1000
.
.---- option 5 ----
.
ML2500    CALL      DELT0000           * delete cc/subj total accounts
          MOVE      SP70,SUBJ1
          MOVE      T70,SUBJ2
          CALL      FACC0000           * create all cc/subj accounts
          CALL      COMP0000           * update completed
          GOTO      ML1000
.
.---- option 6 ----
.
ML2600    CALL      FCCS0000           * fix cc & subj total accounts
          CALL      FTCF0000           * fix tcf file
          CALL      DELT0000           * delete cc/subj total accounts
          MOVE      SP70,SUBJ1
          MOVE      T70,SUBJ2
          CALL      FACC0000           * create all cc/subj accounts
          CALL      FRSF0000           * fix rsf file
          CALL      FWAS0000           * fix was file
          CALL      COMP0000           * update completed
          GOTO      ML1000
.
.---- option 7 ----
.
ML3100    CALL      SELG0000           * get ledger/account
          BRANCH    EXIT,ML1000
.
          CALL      CTUP0000           * Update all changed accounts
          GOTO      ML1000
.
.---- option 8 ----
.
ML3200    CALL      SELB0000           * get ledger/account
          BRANCH    EXIT,ML1000
.
          MOVE      "0",SKIPFMTU       * 0=total account update required
          CALL      SETU0000           * set for update
          CALL      CTUP0000           * Update all changed accounts
          GOTO      ML3200
.
.---- option 9 ----
.
ML3300    CALL      SELB0000           * get ledger/account
          BRANCH    EXIT,ML1000
.
          MOVE      ZERO,DELRSF
          CALL      DELA0000           * delete account
          GOTO      ML3300
.
.---- option 10 ----
.
ML3400    CALL      SELC0000           * get batches
          BRANCH    EXIT,ML1000
.
          CALL      SBAT0000           * search for out of balance batches
          GOTO      ML1000
.
.---- option 11 ----
.
ML3500    CALL      SELD0000           * get batch
          GOTO      ML1000
.
.---- option 12 ----
.
ML3600    CALL      SELE0000           * do option
          GOTO      ML1000
.
.---- option 13 ----
.
ML3700    CALL      SELF0000           * do option
          GOTO      ML1000
.
.---- option 14 ----
.
ML3800    CALL      SELH0000           * do option
          GOTO      ML1000
.
.---- option 15 ----
.
ML3900    CALL      SELI0000           * do option
          GOTO      ML1000
.
.---- option 16 ----
.
ML4000    CALL      SELJ0000           * do option
          GOTO      ML1000
.
.---- option 17 ----
.
ML4100    CALL      SELK0000           * do option
          GOTO      ML1000
.
.---- option 18 ----
.
ML4200    CALL      SELL0000           * do option
          GOTO      ML1000
.
.---- option 19 ----
.
ML4300    CALL      SELM0000           * do option
          GOTO      ML1000
.
.---- option 20 ----
.
ML4400    CALL      CTCF0000           * do option
          CALL      COMP0000           * update completed
          GOTO      ML1000
.
.---- option 21 ----
.
ML4500    KEYIN     *P1:24,*EL,"Enter Program : ",PROGRAMN
          PACK      PROGRAMN,PROGRAMN,SP70
          MATCH     SP70,PROGRAMN
          IF        !@EQUAL
            CALL      CLOS0000         * close files
            FORK      PROGRAMN,TASKID
            CALL      INIT0000         * open files
          ENDIF
          GOTO      ML1000
.
.---- option 22 ----
.
ML4600    
....      CALL      SELN0000           * (must be changed for new format)
          GOTO      ML1000
.
.---- option 23 ----
.
ML4700    CALL      SELO0000           * do option
          GOTO      ML1000
.
.---- option 24 ----
.
ML4800    CALL      SELP0000           * do option
          BRANCH    EXIT,ML1000
.
          CALL      UPDP0000           * search for out of balance batches
          GOTO      ML1000
.
.---- option 25 ----
.
ML4900    CALL      SELQ0000           * do option
          BRANCH    EXIT,ML1000
.
          CALL      UPDQ0000           * fix stuffed separator characters
          GOTO      ML1000
.
.---- option 26 ----
.
ML5000    CALL      SELR0000           * do option
          BRANCH    EXIT,ML1000
.
          CALL      UPDR0000           * modify data
          GOTO      ML1000
.
.---- option 27 ----
.
ML5100    CALL      SELS0000           * do option
          GOTO      ML1000
.
.---- option 28 ----
.
ML5200    CALL      REPT0000           * do option
          GOTO      ML1000
.
.---- option 29 ----
.
ML5300    CALL      APBA0000           * get batches
          GOTO      ML1000
.
.---- option 30 ----
.
ML5400    CALL      APGL0000           * Balance accounts payable to G/L
          GOTO      ML1000
.
.---- option 31 ----
.
ML5500    CALL      JNGL0000           * Check for journals in trade creditors
          GOTO      ML1000
.
.---- option 32 ----
.
ML5600    CALL      GLAP0000           * Balance g/l to accounts payable
          GOTO      ML1000
.
.---- option 33 ----
.
ML5700    CALL      SEDE0000           * do option
          BRANCH    EXIT,ML1000
.
          CALL      UPDE0000           * modify data
          GOTO      ML1000
.
.---- option 34 ----
.
ML5800    CALL      DCCS0000           *Delete unused cost centres & subjectives
          CALL      COMP0000           * update completed
          GOTO      ML1000
.
.
ML9999    CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.  INIT - Open Files                             Called by ML
.******************************************************************************
INIT0000  CALL      DISPHEAD
          CALL      OUPD0000
          CALL      OUDA0000
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          MOVE      PORT,PORTCODE
.
          READ      CONTROLF,ZERO;*107,IBCNUBAS,IBCNBSFY
.
          DISPLAY   *P56:24,"Opening ",LOGFILE;
          PREP      ERRFILE,LOGFILE
.
          DISPLAY   *P56:24,"Opening ihapassf";
          OPEN      IHAPASS1,"ihapassf"
.
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          OPEN      APSBMFA2,"apsbmfaf"
.
          DISPLAY   *P56:24,"Opening apscilaf";
          OPEN      APSCIlA1,"apscilaf"
.
          DISPLAY   *P56:24,"Opening apsscxaf";
          OPEN      APSSCXA1,"apsscxaf"
          OPEN      APSSCXA2,"apsscxaf"
.
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA1,"apsimsaf"
          OPEN      APSIMSA2,"apsimsaf"
          OPEN      APSIMSA3,"apsimsaf"
          OPEN      APSIMSA4,"apsimsaf"
          OPEN      APSIMSA5,"apsimsaf"
          OPEN      APSIMSA6,"apsimsaf"
.
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          OPEN      APSINPA2,"apsinpaf"
.
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
.
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA1,"apsnscaf"
.
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
.
          DISPLAY   *P56:24,"Opening fmsbpfaf";
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P56:24,"Opening fmscafaf";
          OPEN      FMSCAFA1,"fmscafaf"
.
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P56:24,"Opening fmsbcfaf";
          OPEN      FMSBCFA1,"fmsbcfaf"
          OPEN      FMSBCFA2,"fmsbcfaf"
.
          DISPLAY   *P56:24,"Opening fmsccaaf";
          OPEN      FMSCCAA1,"fmsccaaf"
.
          DISPLAY   *P56:24,"Opening fmscccaf";  * consolidated cost centre file
          OPEN      FMSCCCA1,"fmscccaf"
          OPEN      FMSCCCA2,"fmscccaf"
.
          DISPLAY   *P56:24,"Opening fmssbaaf";
          OPEN      FMSSBAA1,"fmssbaaf"
          OPEN      FMSSBAA2,"fmssbaaf"
.
          DISPLAY   *P56:24,"Opening fmssscaf";
          OPEN      FMSSSCA1,"fmssscaf"
          OPEN      FMSSSCA2,"fmssscaf"
.
          DISPLAY   *P56:24,"Opening fmsrsfaf";
          OPEN      FMSRSFA1,"fmsrsfaf"
          OPEN      FMSRSFA2,"fmsrsfaf"
.
          DISPLAY   *P56:24,"Opening fmswasaf";
          OPEN      FMSWASA1,"fmswasaf"
.
          DISPLAY   *P56:24,"Opening fmslmbaf";
          OPEN      FMSLMBA1,"fmslmbaf"
.
          DISPLAY   *P56:24,"Opening fmsleva1";
          OPEN      FMSLEVA1,"fmslevaf"
.
          DISPLAY   *P56:24,"Opening fmsxcsaf";
          OPEN      FMSXCSA1,"fmsxcsaf"
          OPEN      FMSXCSA2,"fmsxcsaf"
          OPEN      FMSXCSA3,"fmsxcsaf"
.
          DISPLAY   *P56:24,"Opening fmschqaf";
          OPEN      FMSCHQA1,"fmschqaf"
.
          DISPLAY   *P56:24,"Opening fmsuwpaf";
          OPEN      FMSUWPA1,"fmsuwpaf"
.
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBNKA4,"fmsbnkaf"
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      INIT5000 IF EQUAL
.
          DISPLAY   *P1:20;
          MOVE      "isadd fmsbnkaf U80-84,85-89,1-15,16-20",CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBNKA4,"fmsbnkaf"
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      INIT5000 IF EQUAL
.
          GOTO      INIT9600
.
INIT5000  OPEN      FMSBNKA1,"fmsbnkaf"
          OPEN      FMSBNKA2,"fmsbnkaf"
.
          COMPARE   ZERO,FMSUUD3A                * check params ok
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD4A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD5A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD6A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD7A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD8A
          GOTO      INIT9500 IF EQUAL
.
INIT9000  MOVE      ZERO,EXIT
          MOVE      ZERO,ERRFLAG2
          GOTO      INIT9999
.
INIT9500  MOVE      ONE,EXIT
          MOVE      ONE,ERRFLAG2
          DISPLAY   *P1:24,*B,*EF,"Incorrect System Parameter Set Up - ";
          CALL      HITENTER
          GOTO      INIT9999
.
INIT9600  MOVE      ZERO,EXIT
          MOVE      ONE,ERRFLAG2
          DISPLAY   *P1:24,*B,*EF,"Could not add 4th index to fmsbnkaf - ";
          CALL      HITENTER
          GOTO      INIT9999
.
INIT9999  DISPLAY   *P1:24,*EF;
          RETURN
.******************************************************************************
.  CLOS - Close Files                             Called by ML
.******************************************************************************
CLOS0000  
          DISPLAY   *P50:24,"Closing Files";
          CLOSE     ERRFILE
.
          CLOSE     CONTROLF
          CLOSE     FMSAMAA1
          CLOSE     FMSAMAA2
          CLOSE     FMSAMAA3
          CLOSE     FMSAMAA4
          CLOSE     FMSBTYA1
          CLOSE     FMSLMAA1
          CLOSE     FMSLMCA1
          CLOSE     FMSTCFA1
          CLOSE     FMSTCFA2
          CLOSE     FMSTUPA1
          CLOSE     FMSTUPA2
          CLOSE     FMSTUPA3
.
          CLOSE     IHAPASS1
          CLOSE     APSBMFA1
          CLOSE     APSBMFA2
          CLOSE     APSCIlA1
          CLOSE     APSIMSA1
          CLOSE     APSIMSA2
          CLOSE     APSIMSA3
          CLOSE     APSIMSA4
          CLOSE     APSIMSA5
          CLOSE     APSIMSA6
          CLOSE     APSINPA1
          CLOSE     APSINPA2
          CLOSE     APSMXRA1
          CLOSE     APSMASA1
          CLOSE     FMSCSAA1
          CLOSE     FMSBCFA1
          CLOSE     FMSBCFA2
          CLOSE     FMSCCAA1
          CLOSE     FMSCCCA1
          CLOSE     FMSCCCA2
          CLOSE     FMSSBAA1
          CLOSE     FMSSBAA2
          CLOSE     FMSSSCA1
          CLOSE     FMSRSFA1
          CLOSE     FMSRSFA2
          CLOSE     FMSWASA1
          CLOSE     FMSLMBA1
          CLOSE     FMSLEVA1
          CLOSE     FMSXCSA1
          CLOSE     FMSCHQA1
          CLOSE     FMSBNKA4
          CLOSE     FMSBNKA1
          CLOSE     FMSBNKA2
          RETURN
.******************************************************************************
.  SCRA - Display Screen A                       Called by SELA, redisps
.******************************************************************************
SCRA0000  MOVE      "1",SCRNO
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Ledger (CR for All)  : ":
                          *V2LON,FMLALEDG,*HOFF,SP2,FMLADESC;
.
SCRA9999  RETURN
.******************************************************************************
.  SELA - Perform Screen A                       Called by ML
.         Returns : EXIT     (1=exit program)
.******************************************************************************
SELA0000  UNPACK    SP70,FMLALEDG,FMLADESC
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONA       * reset item desired
          CALL      SCRA0000           * display screen A
.
SELA0100  ADD       ONE,OPTIONA        * get next item
          BRANCH    ACCEPT,SELA0110    * in accept mode ?
          CALL      MQSA0000           * get option if not in accept mode
          MOVE      CCITEM,OPTIONA
.
SELA0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONA,CVERT
          MOVE      OPTIONA,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELA9500,SELA9000:                       * quit, continue
                       SELA1100                                 * execute option
          BRANCH    ACCEPT,SELA0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELA0100           * get another option
.
SELA0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELA0100
.
.---- option 1 ----
.
SELA1100  CALL      KLMAFM00
          BRANCH    EXIT,SELA1150,SELA9500
.
SELA1150  LOAD      FMLALEDG,EXIT,SP70
          LOAD      FMLADESC,EXIT,ALL
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SP2,FMLADESC;
          GOTO      SELA0100
.
.
SELA9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT           * quit
.
SELA9999  RETURN
.**********************************************************************
.  MQSA - select, post, cancel, run report              Called By SELA
.        Returns  - CCITEM   (0=run update, -1=exit, other=select
.**********************************************************************
MQSA0000  MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EF,"Select Item, (",*V2LON:
                    "R",*HOFF,")un Update, e(",*V2LON:
                    "X",*HOFF,")it ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQSA0000 IF EOS    * nothing entered ?
          REP       UPPLOW,CCITEMD
.
          MOVE      " 0",CCITEM
          MATCH     "  R",CCITEMD      * run update ?
          GOTO      MQSA9999 IF EQUAL
.
          MOVE      "-1",CCITEM
          MATCH     "  X",CCITEMD      * exit ?
          GOTO      MQSA9999 IF EQUAL
.
          MOVE      ZERO,CCITEM
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM         * select item ?
          GOTO      MQSA9999 IF NOT LESS
.
          BEEP
          GOTO      MQSA0000
.
MQSA9999  RETURN
.******************************************************************************
.  MENU - Get desired function                    Called by ML                 
.******************************************************************************
MENU0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0",*HOFF,"=Exit":
                    *P1:5,*V2LON," 1",*HOFF,"=",OPDES1:
                    *P1:6,*V2LON," 2",*HOFF,"=",OPDES2:
                    *P1:7,*V2LON," 3",*HOFF,"=",OPDES3:
                    *P1:8,*V2LON," 4",*HOFF,"=",OPDES4:
                    *P1:9,*V2LON," 5",*HOFF,"=",OPDES5:
                    *P1:10,*V2LON," 6",*HOFF,"=",OPDES6:
                   *P1:12,*V2LON," 7",*HOFF,"=",OPDES7:
                   *P1:13,*V2LON," 8",*HOFF,"=",OPDES8:
                   *P1:14,*V2LON," 9",*HOFF,"=",OPDES9:
                   *P1:15,*V2LON,"10",*HOFF,"=",OPDES10:
                   *P1:16,*V2LON,"11",*HOFF,"=",OPDES11:
                   *P1:17,*V2LON,"12",*HOFF,"=",OPDES12:
                   *P1:18,*V2LON,"13",*HOFF,"=",OPDES13:
                   *P1:19,*V2LON,"14",*HOFF,"=",OPDES14:
                   *P1:20,*V2LON,"15",*HOFF,"=",OPDES15:
                   *P1:21,*V2LON,"16",*HOFF,"=",OPDES16:
                   *P40:4,*V2LON,"17",*HOFF,"=",OPDES17:
                   *P40:5,*V2LON,"18",*HOFF,"=",OPDES18:
                   *P40:6,*V2LON,"19",*HOFF,"=",OPDES19:
                   *P40:7,*V2LON,"20",*HOFF,"=",OPDES20:
                   *P40:8,*V2LON,"21",*HOFF,"=",OPDES21:
                   *P40:9,*V2LON,"22",*HOFF,"=",OPDES22:
                  *P40:10,*V2LON,"23",*HOFF,"=",OPDES23:
                  *P40:11,*V2LON,"24",*HOFF,"=",OPDES24:
                  *P40:12,*V2LON,"25",*HOFF,"=",OPDES25:
                  *P40:13,*V2LON,"26",*HOFF,"=",OPDES26:
                  *P40:14,*V2LON,"27",*HOFF,"=",OPDES27:
                  *P40:15,*V2LON,"28",*HOFF,"=",OPDES28:
                  *P40:16,*V2LON,"29",*HOFF,"=",OPDES29:
                  *P40:17,*V2LON,"30",*HOFF,"=",OPDES30:
                  *P40:18,*V2LON,"31",*HOFF,"=",OPDES31:
                  *P40:19,*V2LON,"32",*HOFF,"=",OPDES32:
                  *P40:20,*V2LON,"33",*HOFF,"=",OPDES33:
                  *P40:21,*V2LON,"34",*HOFF,"=",OPDES34:
                 *P1:22,"Note : Warning and errors are sent to 'error.txt' ":
                 *P1:23,"which is cleared each time this program is initialized"
.
MENU1000  KEYIN     *P1:24,"Select Option : _",*EL:
                   *P17:24,*V2LON,CUROPTN
          COMPARE   ZERO TO CUROPTN
          GOTO      MENU9999 IF EQUAL       * exit ?
.
          MOVE      SP70,OPDES
          LOAD      OPDES,CUROPTN,OPDES1,OPDES2,OPDES3,OPDES4,OPDES5:
                                  OPDES6,OPDES7,OPDES8,OPDES9,OPDES10:
                                  OPDES11,OPDES12,OPDES13,OPDES14,OPDES15:
                                  OPDES16,OPDES17,OPDES18,OPDES19,OPDES20:
                                  OPDES21,OPDES22,OPDES23,OPDES24,OPDES25:
                                  OPDES26,OPDES27,OPDES28,OPDES29,OPDES30:
                                  OPDES31,OPDES32,OPDES33,OPDES34
          MATCH     SP70,OPDES
          GOTO      MENU9000 IF NOT EQUAL
          BEEP                              * illegal option, get another
          GOTO      MENU1000
.
MENU9000  DISPLAY   *P43:3,*V2LON,"- ",OPDES;
.
MENU9999  RETURN
.**********************************************************************
.  COMP - update completed                             Called By ML
.**********************************************************************
COMP0000  DISPLAY   *P1:24,*B,*EF,"Update Completed - ";
          CALL      HITENTER
.
COMP9999  RETURN
.**********************************************************************
.  FTCF - Fix FMSTCFAF                                 Called By ML
.**********************************************************************
FTCF0000  CALL      CLRS0000
          MOVE      ZERO,EXITMODE
          PACK      KEY33,FMLALEDG,SP70
          PACK      SKEY28,SP70
          CALL      RSFMTC2
.
FTCF1000  CALL      RKFMTC2            * go through total calc file
          BRANCH    OVRCD,FTCF9999     * no more records ?
          MATCH     FMLALEDG,SP70      * all ledgers ?
          GOTO      FTCF1100 IF EQUAL
          MATCH     FMLALEDG,FMTCSLED  * correct ledger
          GOTO      FTCF9999 IF NOT EQUAL
.
FTCF1100  PACK      KEY33,FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,FMTCASEQ,SP70
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing fmstcfaf":
                      " : ",*V2LON,KEY33,*EF;
          ENDIF
.
.---- check if accounts valid ----
.
          MATCH     KEY33,SKEY28
          GOTO      FTCF1200 IF NOT EQUAL
.
          UNPACK    SKEY28,FMAMLEDG,FMAMACCT,KEY2,KEY12
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Warning - Account ",*V2LON,FMAMLEDG,SLASH:
                    FMAMACCT,*HOFF," adds to ",*V2LON,KEY2,SLASH,KEY12:
                    *HOFF," more than once",*EL;
          WRITE     ERRFILE,SEQ;"Warning - Account ",FMAMLEDG,SLASH:
                    FMAMACCT," adds to ",KEY2,SLASH,KEY12:
                    " more than once"
          ADD       ONE,LNO
.
FTCF1200  MOVE      KEY33,SKEY28
.
          PACK      SKEY33,KEY33,SP70
          CALL      HTCF0000
          COMPARE   ZERO,EXIT
          GOTO      FTCF1000 IF EQUAL
.
          PACK      KEY33,SKEY33,SP70
          CALL      DEFMTC2
          CALL      RSFMTC2
          GOTO      FTCF1000
.
FTCF9999  RETURN
.**********************************************************************
.  CTCF - Fix FMSTCFAF                                 Called By ML
.**********************************************************************
CTCF0000  CALL      SRAN0000           * select range
          BRANCH    EXIT,CTCF9999
.
          CALL      CLRS0000
          MOVE      ZERO,EXITMODE
.
.---- loop 1 ----
.
          PACK      KEY33,LEDG1,ACCT1,SP70
          PACK      SKEY28,SP70
          CALL      RSFMTC1
.
CTCF1000  CALL      RKFMTC1            * go through total calc file
          BRANCH    OVRCD,CTCF5000     * no more records ?
          MATCH     LEDG1,FMTCTLED  * correct ledger
          GOTO      CTCF5000 IF NOT EQUAL
          MATCH     FMTCTACC,ACCT2  * correct account
          GOTO      CTCF5000 IF LESS
.
          PACK      KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC,SP70
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing fmstcfaf1":
                      " : ",*V2LON,KEY33,*EF;
          ENDIF
.
.---- check if accounts valid ----
.
          PACK      SKEY33,KEY33,SP70
          CALL      HTCF0000
          COMPARE   ZERO,EXIT
          GOTO      CTCF1000 IF EQUAL
.
          PACK      KEY33,SKEY33,SP70
          CALL      DEFMTC1
          CALL      RSFMTC1
          GOTO      CTCF1000
.
.---- loop 2 ----
.
CTCF5000  PACK      KEY33,LEDG1,ACCT1,SP70
          PACK      SKEY28,SP70
          CALL      RSFMTC2
.
CTCF6000  CALL      RKFMTC2            * go through total calc file
          BRANCH    OVRCD,CTCF9999     * no more records ?
          MATCH     LEDG1,FMTCSLED  * correct ledger
          GOTO      CTCF9999 IF NOT EQUAL
          MATCH     FMTCSACC,ACCT2  * correct account
          GOTO      CTCF9999 IF LESS
.
          PACK      KEY33,FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,FMTCASEQ,SP70
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing fmstcfaf2":
                      " : ",*V2LON,KEY33,*EF;
          ENDIF
.
.---- check if accounts valid ----
.
          MATCH     KEY33,SKEY28
          GOTO      CTCF6100 IF NOT EQUAL
.
          UNPACK    SKEY28,FMAMLEDG,FMAMACCT,KEY2,KEY12
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Warning - Account ",*V2LON,FMAMLEDG,SLASH:
                    FMAMACCT,*HOFF," adds to ",*V2LON,KEY2,SLASH,KEY12:
                    *HOFF," more than once",*EL;
          WRITE     ERRFILE,SEQ;"Warning - Account ",FMAMLEDG,SLASH:
                    FMAMACCT," adds to ",KEY2,SLASH,KEY12:
                    " more than once"
          ADD       ONE,LNO
.
CTCF6100  MOVE      KEY33,SKEY28
.
          PACK      SKEY33,KEY33,SP70
          CALL      HTCF0000
          COMPARE   ZERO,EXIT
          GOTO      CTCF6000 IF EQUAL
.
          PACK      KEY33,SKEY33,SP70
          CALL      DEFMTC1
          CALL      RSFMTC1
          GOTO      CTCF6000
.
CTCF9999  RETURN
.**********************************************************************
.  HTCF - check if tcf ok                              Called By ML
.         Returns : EXIT (1=delete record)
.**********************************************************************
HTCF0000
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,HTCF1900     * account does not exist
          MATCH     SP70,FMAMLEDG
          GOTO      HTCF1930 IF EQUAL  * blank ledger ?
          MATCH     SP70,FMAMACCT
          GOTO      HTCF1930 IF EQUAL  * blank account ?
          PACK      SAVLEVEL,FMAMCLEV,SP70
.
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,HTCF1900     * account does not exist
          MATCH     SP70,FMAMLEDG
          GOTO      HTCF1930 IF EQUAL  * blank ledger ?
          MATCH     SP70,FMAMACCT
          GOTO      HTCF1930 IF EQUAL  * blank account ?
.
          PACK      KEY15,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,KEY15        * check if account adds to itself
          GOTO      HTCF1910 IF EQUAL
.
          MATCH     "8",FMAMTYPE       * check subj stat post recs
          GOTO      HTCF1800 IF NOT EQUAL
          PACK      ACCOUNT,FMTCSACC,SP70
          CALL      GCOD0000           * break up acct code into cc/subj
          PACK      KEY14,FMTCSLED,SUBJCODE,SP70
          MATCH     KEY14,KEY15        * adding to tot stat-post subj ?
          GOTO      HTCF1800 IF NOT EQUAL
          CALL      RDFMSA1
          BRANCH    OVRCD,HTCF1800
          MATCH     FMTCASEQ,FMSAPPOS
          GOTO      HTCF1800 IF EQUAL
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70 * set up acct for err msg
          GOTO      HTCF1920
.
HTCF1800  MATCH     SAVLEVEL,FMAMCLEV
          GOTO      HTCF1940 IF NOT LESS         * levels incorrect ?
          GOTO      HTCF9000
.
HTCF1900  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," does not exist on fmsamaaf",*EL;
          WRITE     ERRFILE,SEQ;"Error - Account ",FMAMLEDG,SLASH,FMAMACCT:
                    " does not exist on fmsamaaf"
          ADD       ONE,LNO
          GOTO      HTCF9500
.
HTCF1910  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," adds to itself",*EL;
          WRITE     ERRFILE,SEQ;"Error - Account ",FMAMLEDG,SLASH,FMAMACCT:
                    " adds to itself"
          ADD       ONE,LNO
          GOTO      HTCF9500
.
HTCF1920  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," has an invalid acct seq ",*V2LON,FMTCASEQ,*EL;
          WRITE     ERRFILE,SEQ;"Error - Account ",FMAMLEDG,SLASH,FMAMACCT:
                    " has an invalid acct seq ",FMTCASEQ
          ADD       ONE,LNO
          GOTO      HTCF9500
.
HTCF1930  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," is invalid ",*EL;
          WRITE     ERRFILE,SEQ;"Error - Account ",FMAMLEDG,SLASH,FMAMACCT:
                    " is invalid "
          ADD       ONE,LNO
          UNPACK    KEY14,LEDGER,ACCOUNT
          MOVE      ZERO,DELRSF
          CALL      DELA0000                     * delete invalid account
          GOTO      HTCF9500
.
HTCF1940  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Warning - Sub Account ",*V2LON,FMTCSLED,SLASH:
                    FMTCSACC,*HOFF," level ",*V2LON,FMAMCLEV,*HOFF:
                    " not less than",*EL;
          WRITE     ERRFILE,SEQ;"Warning - Sub Account ",FMTCSLED,SLASH:
                    FMTCSACC," level ",FMAMCLEV:
                    " not less than"
          ADD       ONE,LNO
          DISPLAY   *P1:LNO,"          Tot Account ",*V2LON,FMTCTLED,SLASH:
                    FMTCTACC,*HOFF," level ",*V2LON,SAVLEVEL;
          WRITE     ERRFILE,SEQ;"          Tot Account ",FMTCTLED,SLASH:
                    FMTCTACC," level ",SAVLEVEL
          ADD       ONE,LNO
          GOTO      HTCF9000
.
HTCF9000  MOVE      ZERO,EXIT
          GOTO      HTCF9999
.
HTCF9500  MOVE      ONE,EXIT
          GOTO      HTCF9999
.
HTCF9999  RETURN
.**********************************************************************
.  FRSF - Fix FMSRSFAF                                 Called By ML
.**********************************************************************
FRSF0000  CALL      CLRS0000
          MOVE      ZERO,EXITMODE
          PACK      KEY26,FMLALEDG,SP70
          CALL      RSFMRF2
.
FRSF1000  CALL      RKFMRF2            * go through report seq file
          BRANCH    OVRCD,FRSF9999     * no more records ?
          MATCH     FMLALEDG,SP70      * all ledgers ?
          GOTO      FRSF1100 IF EQUAL
          MATCH     FMLALEDG,FMRFLED   * correct ledger
          GOTO      FRSF9999 IF NOT EQUAL
.
FRSF1100  PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing fmsrsfaf":
                      " : ",*V2LON,KEY26,*EF;
          ENDIF
.
.---- check if accounts valid ----
.
          PACK      KEY14,FMRFLED,FMRFACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,FRSF1810     * account does not exist
          MATCH     "6",FMAMTYPE
          GOTO      FRSF1800 IF LESS   * post account ?
.
          BRANCH    FMCOSTPO,FRSF1200  * stat post account valid ?
          MATCH     "8",FMAMTYPE
          GOTO      FRSF1800 IF EQUAL  * stat post account ?
.
FRSF1200  PACK      KEY2,FMRFREP,SP70
          CALL      RDFMLB1
          BRANCH    OVRCD,FRSF1820     * report does not exist ?
.
          PACK      KEY2,FMSUUD7A,SP70 * check if subj report
          REP       " 0",KEY2
          MATCH     KEY2,FMRFREP
          IF        @EQUAL
            CALL      RDFMSA1          * must be a subjective
            IF        OVRCD=1
              GOTO      FRSF1830
            ENDIF
          ENDIF
.
          PACK      KEY2,FMSUUD8A,SP70 * check if cc report
          REP       " 0",KEY2
          MATCH     KEY2,FMRFREP
          IF        @EQUAL
            CALL      RDFMSA1          * must not be a subjective
            IF        OVRCD=0
              GOTO      FRSF1830
            ENDIF
          ENDIF
.
          GOTO      FRSF4000
.
FRSF1800  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," has an invalid type ",*V2LON,FMAMTYPE,*EL;
          WRITE     ERRFILE,SEQ;"Error - Account ",FMAMLEDG,SLASH,FMAMACCT:
                    " has an invalid type ",FMAMTYPE
          ADD       ONE,LNO
          GOTO      FRSF2000
.
FRSF1810  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," does not exist on fmsamaaf",*EL;
          WRITE     ERRFILE,SEQ;"Error - Account ",FMAMLEDG,SLASH,FMAMACCT:
                    " does not exist on fmsamaaf"
          ADD       ONE,LNO
          GOTO      FRSF2000
.
FRSF1820  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," has an invalid report ",*V2LON,FMRFREP,*EL;
          WRITE     ERRFILE,SEQ;"Error - Account ",FMAMLEDG,SLASH,FMAMACCT:
                    " has an invalid report ",FMRFREP
          ADD       ONE,LNO
          GOTO      FRSF2000
.
FRSF1830  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," invalid for report ",*V2LON,FMRFREP,*EL;
          WRITE     ERRFILE,SEQ;"Error - Account ",FMAMLEDG,SLASH,FMAMACCT:
                    " invalid for report ",FMRFREP
          ADD       ONE,LNO
          GOTO      FRSF2000
.
FRSF2000  CALL      DEFMRF2            * delete RSF rec
          CALL      RSFMRF2
.
FRSF4000                               * get next record
          GOTO      FRSF1000
.
FRSF9999  RETURN
.**********************************************************************
.  FWAS - Fix FMSWASAF  srf 21069                      Called By ML
.**********************************************************************
FWAS0000  CALL      CLRS0000
          MOVE      ZERO,EXITMODE
          PACK      KEY21,SP70
          CALL      RSFMWA1
.
FWAS1000  CALL      RKFMWA1            * go through report seq file
          BRANCH    OVRCD,FWAS9999     * no more records ?
          MATCH     FMLALEDG,SP70      * all ledgers ?
          GOTO      FWAS1100 IF EQUAL
          MATCH     FMLALEDG,FMWALEDG   * correct ledger
          GOTO      FWAS1000 IF NOT EQUAL
.
FWAS1100  PACK      KEY21,FMWASEC,FMWASEQ,FMWALEDG,FMWAACCT,SP20
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing fmswasaf":
                      " : ",*V2LON,KEY26,*EF;
          ENDIF
.
.---- check if accounts valid ----
. 
          PACK      KEY14,FMWALEDG,FMWAACCT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,FWAS1810
.
          MATCH     SP70,FMAMLEDG
          GOTO      FWAS1930 IF EQUAL  * blank ledger ?
          MATCH     SP70,FMAMACCT
          GOTO      FWAS1930 IF EQUAL  * blank account ?
.
          GOTO      FWAS1000
.
FWAS1810  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," does not exist on fmsamaaf",*EL;
          WRITE     ERRFILE,SEQ;"Error - Account ",FMAMLEDG,SLASH,FMAMACCT:
                    " does not exist on fmsamaaf"
          ADD       ONE,LNO
          GOTO      FWAS2000
.
FWAS1930  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," is invalid ",*EL;
          WRITE     ERRFILE,SEQ;"Error - Account ",FMAMLEDG,SLASH,FMAMACCT:
                    " is invalid "
          ADD       ONE,LNO
          GOTO      FWAS2000
.
FWAS2000  CALL      DEFMWA1            * delete WAS rec
          CALL      RSFMWA1
          GOTO      FWAS1000
.
FWAS9999  RETURN
.**********************************************************************
.  FCCS - Fix cc & subj total accounts                 Called By ML
.**********************************************************************
.
.---- process cc's ----
.
FCCS0000  DISPLAY   *P1:5,*EF;
          CALL      CLRS0000
          MOVE      ZERO,EXITMODE
          PACK      KEY14,FMLALEDG,SP70
          CALL      RSFMCC1
          CALL      RPFMCC1
.
FCCS1000  CALL      RKFMCC1            * go through cc file
          BRANCH    OVRCD,FCCS5000     * no more records ?
          MATCH     FMLALEDG,SP70      * all ledgers ?
          GOTO      FCCS1100 IF EQUAL
          MATCH     FMLALEDG,FMCCLEDG  * correct ledger
          GOTO      FCCS5000 IF NOT EQUAL
.
FCCS1100  PACK      KEY14,FMCCLEDG,FMCCCOCE,SP70
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing fmsccaaf":
                      " : ",*V2LON,KEY14,*EF;
          ENDIF
.
.---- check if account valid ----
.
          MATCH     SP70,FMCCLEDG
          GOTO      FCCS1900 IF EQUAL  * blank ledger ?
          MATCH     SP70,FMCCCOCE
          GOTO      FCCS1900 IF EQUAL  * blank cc ?
.
          CALL      RDFMAM1
          COMPARE   ONE,OVRCD          * account does not exist ?
          GOTO      FCCS1200 IF NOT EQUAL
.
          CALL      INCS0000                     * increment line
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          DISPLAY   *P1:LNO,"Error - CC Total Account ":
                    *V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," Missing ",*EL;
          WRITE     ERRFILE,SEQ;"Error - CC Total Account ":
                    FMAMLEDG,SLASH,FMAMACCT:
                    " Missing "
          ADD       ONE,LNO
          MOVE      "040",FMAMCLEV
.
FCCS1200  MOVE      FMCCLEDG,FMAMLEDG      * set up account master details
          MOVE      FMCCCOCE,FMAMACCT
          MOVE      FMCCDESC,FMAMDESC
          MOVE      SIX,FMAMTYPE           * set to a total record
          MOVE      ONE,FMAMMULT
          MOVE      ONE,FMAMDIV
          MOVE      ZERO,FMAMAYTD
          MOVE      ZERO,FMAMDPLA
          UNPACK    SP70,FMAMUNIT
          PACK      KEY14,FMCCLEDG,FMCCCOCE,SP70
          CALL      DEFMAM1
          CALL      WRFMAM1
.
.---- check report seq record ----
.
          PACK      FMRFREP,FMSUUD8A,SP70
          REP       " 0",FMRFREP
          PACK      KEY26,KEY14,FMRFREP,FMCCPPOS,TOTSEQ,SP70
          UNPACK    KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          PACK      KEY16,FMRFLED,FMRFACC,FMRFREP,SP70
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,SP70
          PACK      KEY50,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MOVE      SP70,SAVEPRT
.
FCCS1400  CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,FCCS1500          * any more records ?
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MATCH     KEY26,KEY16
          GOTO      FCCS1500 IF NOT EQUAL
.
          MATCH     KEY26,KEY50             * is this the correct record ?
          GOTO      FCCS1400 IF EQUAL
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Illegal Report Sequence CC Record ":
                    *V2LON,FMAMLEDG,SLASH,FMAMACCT,*EL;
          WRITE     ERRFILE,SEQ;"Error - Illegal Report Sequence CC Record ":
                    FMAMLEDG,SLASH,FMAMACCT
          ADD       ONE,LNO
          CALL      DEFMRF2
          MOVE      FMRFPRT,SAVEPRT
          GOTO      FCCS1400
.
FCCS1500  MOVE      SAVEPRT,FMRFPRT
          PACK      KEY26,KEY50
          UNPACK    KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          CALL      RDFMRF2
          COMPARE   ONE,OVRCD          * account does not exist ?
          GOTO      FCCS1600 IF NOT EQUAL
.
          CALL      INCS0000                     * increment line
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          DISPLAY   *P1:LNO,"Error - Report Sequence CC Record ":
                    *V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," Missing ",*EL;
          WRITE     ERRFILE,SEQ;"Error - Report Sequence CC Record ":
                    FMAMLEDG,SLASH,FMAMACCT:
                    " Missing "
          ADD       ONE,LNO
          CALL      WRFMRF2
.
FCCS1600
          GOTO      FCCS1000           * get next record
.
FCCS1900  CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - CC ":
                    *V2LON,FMCCLEDG,SLASH,FMCCCOCE:
                    *HOFF," Illegal ",*EL;
          WRITE     ERRFILE,SEQ;"Error - CC ":
                    FMCCLEDG,SLASH,FMCCCOCE:
                    " Illegal "
          ADD       ONE,LNO
          PACK      KEY14,FMCCLEDG,FMCCCOCE,SP70 * illegal code
          PACK      SKEY14,FMCCLEDG,FMCCCOCE,SP70
          UNPACK    KEY14,LEDGER,ACCOUNT
          MOVE      ZERO,DELRSF
          CALL      DELA0000
          PACK      KEY14,SKEY14,SP70
          CALL      DEFMCC1
          CALL      RSFMCC1
          GOTO      FCCS1000           * get next record
.
.---- process subj's ----
.
FCCS5000  DISPLAY   *P1:5,*EF;
          PACK      KEY14,FMLALEDG,SP70
          UNPACK    KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          CALL      RSFMSA1
          CALL      RPFMSA1
.
FCCS6000  CALL      RKFMSA1            * go through subj file
          BRANCH    OVRCD,FCCS9999     * no more records ?
          MATCH     FMLALEDG,SP70      * all ledgers ?
          GOTO      FCCS6100 IF EQUAL
          MATCH     FMLALEDG,FMSALEDG  * correct ledger
          GOTO      FCCS9999 IF NOT EQUAL
.
FCCS6100  PACK      KEY14,FMSALEDG,FMSASUBJ,SP70
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing fmssbaaf":
                      " : ",*V2LON,KEY14,*EF;
          ENDIF
.
.---- check if account valid ----
.
          MATCH     SP70,FMSALEDG
          GOTO      FCCS6900 IF EQUAL  * blank ledger ?
          MATCH     SP70,FMSASUBJ
          GOTO      FCCS6900 IF EQUAL  * blank subj ?
.
          CALL      RDFMAM1
          COMPARE   ONE,OVRCD          * account does not exist ?
          GOTO      FCCS6200 IF NOT EQUAL
.
          CALL      INCS0000                     * increment line
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          DISPLAY   *P1:LNO,"Error - Subj Total Account ":
                    *V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," Missing ",*EL;
          WRITE     ERRFILE,SEQ;"Error - Subj Total Account ":
                    FMAMLEDG,SLASH,FMAMACCT:
                    " Missing "
          ADD       ONE,LNO
          PACK      FMAMDPLA,FMSADPLA,SP70
          PACK      FMAMUNIT,FMSAUNIT,SP70
          MOVE      FMSAAYTD,FMAMAYTD
          MOVE      FMSAMULT,FMAMMULT
          MOVE      FMSADIV,FMAMDIV
          MOVE      SP70,FMSALOCK
          MOVE      "020",FMAMCLEV
          MATCH     SP70,FMSADLEV
          GOTO      FCCS6200 IF EQUAL
          MOVE      FMSADLEV,FMAMCLEV
.
FCCS6200  MATCH     "0",FMSADLEV
          GOTO      FCCS6300 IF EQUAL       * normal subj ?
          MATCH     "3",FMSADLEV
          GOTO      FCCS6300 IF EQUAL       * stat-post subj ?
.
          MATCH     SP70,FMSADLEV
          GOTO      FCCS6250 IF NOT EQUAL
          MOVE      FMAMCLEV,FMSADLEV
          PACK      KEY14,FMSALEDG,FMSASUBJ,SP70
          CALL      UPFMSA1
          CALL      RDFMSA1
.
FCCS6250  MATCH     "2",FMSADLEV
          GOTO      FCCS6300 IF EQUAL       * heading subj ?
.
          MATCH     FMAMCLEV,FMSADLEV
          GOTO      FCCS6300 IF LESS        * default lev less than total lev ?
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Subj Total Account ":
                    *V2LON,FMSALEDG,SLASH,FMSASUBJ:
                    *HOFF," Level Invalid ",*EL;
          WRITE     ERRFILE,SEQ;"Error - Subj Total Account ":
                    FMSALEDG,SLASH,FMSASUBJ:
                    " Level Invalid "
          ADD       ONE,LNO
          PACK      KEY3,FMAMCLEV,SP70
          MOVE      "999",FMLVCODE
          CALL      RSFMLV1
          CALL      RKFMLV1
          MOVE      FMLVCODE,FMAMCLEV
.
FCCS6300  MOVE      FMSALEDG,FMAMLEDG      * set up account master details
          MOVE      FMSASUBJ,FMAMACCT
          MOVE      FMSADESC,FMAMDESC
          MOVE      ZERO,F1
          MOVE      FMSASTYP,F1
          PACK      FMAMTYPE,DSIX
          LOAD      FMAMTYPE,F1,DSIX,DSEVEN,DNINE,DNINE
          PACK      KEY14,FMSALEDG,FMSASUBJ,SP70
          CALL      DEFMAM1
          CALL      WRFMAM1
.
.---- check report seq record ----
.
          PACK      FMRFREP,FMSUUD7A,SP70
          REP       " 0",FMRFREP
          MOVE      ZERO,F1
          MOVE      FMSASTYP,F1
          PACK      FMTCASEQ,TOTSEQ
          LOAD      FMTCASEQ,F1,TOTSEQ,HEADSEQ,HEADSEQ,TOTSEQ
          PACK      KEY26,KEY14,FMRFREP,FMSAPPOS,FMTCASEQ,SP70
          UNPACK    KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          PACK      KEY16,FMRFLED,FMRFACC,FMRFREP,SP70
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,SP70
          PACK      KEY50,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MOVE      SP70,SAVEPRT
.
FCCS6400  CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,FCCS6500          * any more records ?
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MATCH     KEY26,KEY16
          GOTO      FCCS6500 IF NOT EQUAL
.
          MATCH     KEY26,KEY50             * is this the correct record ?
          GOTO      FCCS6400 IF EQUAL
          CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Illegal Report Sequence Subj Record ":
                    *V2LON,FMAMLEDG,SLASH,FMAMACCT,*EL;
          WRITE     ERRFILE,SEQ;"Error - Illegal Report Sequence Subj Record ":
                    FMAMLEDG,SLASH,FMAMACCT
          ADD       ONE,LNO
          CALL      DEFMRF2
          MOVE      FMRFPRT,SAVEPRT
          GOTO      FCCS6400
.
FCCS6500  MOVE      SAVEPRT,FMRFPRT
          PACK      KEY26,KEY50
          UNPACK    KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          CALL      RDFMRF2
          COMPARE   ONE,OVRCD          * account does not exist ?
          GOTO      FCCS6600 IF NOT EQUAL
.
          CALL      INCS0000                     * increment line
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          DISPLAY   *P1:LNO,"Error - Report Sequence Subj Record ":
                    *V2LON,FMAMLEDG,SLASH,FMAMACCT:
                    *HOFF," Missing ",*EL;
          WRITE     ERRFILE,SEQ;"Error - Report Sequence Subj Record ":
                    FMAMLEDG,SLASH,FMAMACCT:
                    " Missing "
          ADD       ONE,LNO
          CALL      WRFMRF2
.
FCCS6600
          GOTO      FCCS6000           * get next record
.
FCCS6900  CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Subj ":
                    *V2LON,FMSALEDG,SLASH,FMSASUBJ:
                    *HOFF," Illegal ",*EL;
          WRITE     ERRFILE,SEQ;"Error - Subj ":
                    FMSALEDG,SLASH,FMSASUBJ:
                    " Illegal "
          ADD       ONE,LNO
          PACK      KEY14,FMSALEDG,FMSASUBJ,SP70 * illegal code
          PACK      SKEY14,FMSALEDG,FMSASUBJ,SP70
          UNPACK    KEY14,LEDGER,ACCOUNT
          MOVE      ZERO,DELRSF
          CALL      DELA0000
          PACK      KEY14,SKEY14,SP70
          CALL      DEFMSA1
          CALL      RSFMSA1
          GOTO      FCCS6000           * get next record
.
FCCS9999  RETURN
.**********************************************************************
.  DELT - delete cc/subj total accounts               Called By ML
.**********************************************************************
DELT0000  DISPLAY   *P1:5,*EF;
          PACK      SKEY26,FMLALEDG,SP70
          CALL      RSFMXC1
.
DELT1000  PACK      KEY26,SKEY26,SP70
          CALL      RSFMXC1            * go through xref file
          CALL      RKFMXC1
          BRANCH    OVRCD,DELT9999     * no more records ?
          MATCH     FMLALEDG,SP70      * all ledgers ?
          GOTO      DELT1050 IF EQUAL
          MATCH     FMLALEDG,FMXCLED   * correct ledger
          GOTO      DELT9999 IF NOT EQUAL
.
DELT1050  PACK      SKEY26,FMXCLED,FMXCSUB,FMXCCOS,SP70
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Pass 1     fmsxcsaf : ",*V2LON,SKEY26,*EF;
          ENDIF
.
          PACK      LEDGER,FMXCLED,SP70
          PACK      SUBJCODE,FMXCSUB,SP70
          PACK      COSTCODE,FMXCCOS,SP70
          CALL      BCOD0000
.
          PACK      KEY14,LEDGER,SUBJCODE,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,DELT1200     * subjective not found ?
.
          MATCH     "1",FMSASTYP       * total subj type
          GOTO      DELT1000 IF NOT EQUAL
.
.---- delete account ----
.
DELT1200  MOVE      ONE,DELRSF
          CALL      DELA0000           * delete existing account data
          GOTO      DELT1000
.
DELT9999  RETURN
.**********************************************************************
.  FACC - Fix cc/subj accounts                         Called By ML
.**********************************************************************
FACC0000  CALL      CLRS0000
          PACK      SKEY26,FMLALEDG,SUBJ1,SP70
          CALL      RSFMXC1
.
FACC1000  PACK      KEY26,SKEY26,SP70
          CALL      RSFMXC1            * go through total calc file
          CALL      RKFMXC1
          BRANCH    OVRCD,FACC9999     * no more records ?
          MATCH     FMLALEDG,SP70      * all ledgers ?
          GOTO      FACC1100 IF EQUAL
          MATCH     FMLALEDG,FMXCLED   * correct ledger
          GOTO      FACC9999 IF NOT EQUAL
.
FACC1100  PACK      SKEY26,FMXCLED,FMXCSUB,FMXCCOS,SP70
          MATCH     FMXCSUB,SUBJ2
          GOTO      FACC9999 IF LESS
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Pass 2     fmsxcsaf : ",*V2LON,SKEY26,*EF;
          ENDIF
.
          PACK      LEDGER,FMXCLED,SP70
          PACK      SUBJCODE,FMXCSUB,SP70
          PACK      COSTCODE,FMXCCOS,SP70
          CALL      BCOD0000
.
          PACK      KEY14,LEDGER,COSTCODE,SP70
          CALL      RDFMCC1
          BRANCH    OVRCD,FACC9100     * cost centre not found ?
.
          PACK      KEY14,LEDGER,SUBJCODE,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,FACC9200     * subjective not found ?
.
          MATCH     "0",FMSASTYP
          GOTO      FACC1200 IF EQUAL  * normal subj type
          MATCH     "1",FMSASTYP
          GOTO      FACC1000 IF EQUAL  * total subj type
          MATCH     "2",FMSASTYP
          GOTO      FACC1200 IF EQUAL  * heading subj type
          MATCH     "3",FMSASTYP
          GOTO      FACC1200 IF EQUAL  * stat-post subj type
          MATCH     "4",FMSASTYP
          GOTO      FACC1200 IF EQUAL  * stat-total subj type
          GOTO      FACC9300           * illegal subj type
.
.---- update account ----
.
FACC1200  MOVE      ONE,DELRSF
          CALL      DELA0000           * delete existing account data
.
          UNPACK    SKEY26,LEDGER,SUBJCODE,COSTCODE
          MOVE      "0",SKIPFMTU       * 1=no total account update required
          MOVE      ZERO,OLDDCOST      * 1=use old cc data
          MOVE      ZERO,OLDDSUBJ      * 1=use old subj data
          MOVE      ONE,DELALL         * 1=delete to top of tree
          CALL      DREC0000           * delete account data
.
          UNPACK    SKEY26,LEDGER,SUBJCODE,COSTCODE
          MOVE      "0",SKIPFMTU       * 1=no total account update required
          MOVE      ZERO,WRECLEV       * must be set to zero
          CALL      WREC0000           * write new account data
          GOTO      FACC1000
.
.---- delete account ----
.
FACC9100  CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Cost Centre ":
                    *V2LON,LEDGER,SLASH,COSTCODE:
                    *HOFF," does not exist on fmsccaaf",*EL;
          WRITE     ERRFILE,SEQ;"Error - Cost Centre ":
                    LEDGER,SLASH,COSTCODE:
                    " does not exist on fmsccaaf"
          ADD       ONE,LNO
          GOTO      FACC9500
.
FACC9200  CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Subjective ":
                    *V2LON,LEDGER,SLASH,SUBJCODE:
                    *HOFF," does not exist on fmssbaaf",*EL;
          WRITE     ERRFILE,SEQ;"Error - Subjective ":
                    LEDGER,SLASH,SUBJCODE:
                    " does not exist on fmssbaaf"
          ADD       ONE,LNO
          GOTO      FACC9500
.
FACC9300  CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"Error - Subjective ":
                    *V2LON,LEDGER,SLASH,SUBJCODE:
                    *HOFF," has an illegal subj type of '":
                    *V2LON,FMSASTYP,*HOFF,"'",*EL;
          WRITE     ERRFILE,SEQ;"Error - Subjective ":
                    LEDGER,SLASH,SUBJCODE:
                    " has an illegal subj type of '":
                    FMSASTYP,"'"
          ADD       ONE,LNO
          GOTO      FACC9500
.
FACC9500  MOVE      ZERO,DELRSF
          CALL      DELA0000           * delete existing account data
          PACK      KEY26,SKEY26,SP70
          CALL      DEFMXC1            * delete xref record
          GOTO      FACC1000
.
FACC9999  RETURN
.**********************************************************************
.  DELA - delete account data                          Called By lots
.**********************************************************************
DELA0000  PACK      KEY33,LEDGER,ACCOUNT,SP70
          PACK      XIM14,LEDGER,ACCOUNT,SP70
.
.---- delete for fmstcfa1 ----
.
DELA1000  CALL      RSFMTC1
          CALL      RKFMTC1
          BRANCH    OVRCD,DELA1500
          PACK      KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC,SP70
          MATCH     XIM14,KEY33
          GOTO      DELA1500 IF NOT EQUAL
          CALL      DEFMTC1
          GOTO      DELA1000
.
DELA1500  PACK      KEY33,LEDGER,ACCOUNT,SP70
          PACK      XIM14,LEDGER,ACCOUNT,SP70
.
.---- delete for fmstcfa2 ----
.
DELA1600  CALL      RSFMTC2
          CALL      RKFMTC2
          BRANCH    OVRCD,DELA1900
          PACK      KEY33,FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,FMTCASEQ,SP70
          MATCH     XIM14,KEY33
          GOTO      DELA1900 IF NOT EQUAL
.
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,DELA1650
          MATCH     "9",FMAMTYPE
          GOTO      DELA1600 IF EQUAL
.
          PACK      SKEY12,ACCOUNT
          PACK      ACCOUNT,FMAMACCT,SP70
          CALL      GCOD0000
          UNPACK    SKEY12,ACCOUNT
.
          PACK      KEY26,FMAMLEDG,SUBJCODE,COSTCODE,SP70
          CALL      RDFMXC1
          BRANCH    OVRCD,DELA1600
.
DELA1650  CALL      DEFMTC2
          GOTO      DELA1600
.
DELA1900  PACK      KEY26,LEDGER,ACCOUNT,SP70
          PACK      XIM14,LEDGER,ACCOUNT,SP70
.
.---- delete for fmsrsfaf ----
.
DELA2000  CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,DELA2900
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MATCH     XIM14,KEY26
          GOTO      DELA2900 IF NOT EQUAL
.
          COMPARE   ZERO,DELRSF        * del all rsf recs ?
          GOTO      DELA2100 IF EQUAL
.
          MOVE      FMSUUD7A,KEY2      * subj report
          REP       " 0",KEY2
          MATCH     FMRFREP,KEY2
          GOTO      DELA2100 IF EQUAL
.
          MOVE      FMSUUD8A,KEY2      * cc report
          REP       " 0",KEY2
          MATCH     FMRFREP,KEY2
          GOTO      DELA2100 IF EQUAL
          GOTO      DELA2000
.
DELA2100  CALL      DEFMRF2
          GOTO      DELA2000
.
.---- delete for fmsamaaf ----
.
DELA2900  PACK      KEY14,LEDGER,ACCOUNT,SP70
          CALL      DEFMAM1
.
.---- delete for fmsxcsa1 ----
.
          CALL      GCOD0000
          PACK      KEY26,LEDGER,SUBJCODE,COSTCODE,SP70
          CALL      DEFMXC1
.
DELA9999  RETURN
.******************************************************************************
.  SCRB - Display Screen B                       Called by SELB, redisps
.******************************************************************************
SCRB0000  PACK      KEY14,LEDGER,ACCOUNT,SP70
          MOVE      SP70,FMAMDESC
          CALL      RDFMAM1
.
          DISPLAY   *P1:4,"    Ledger/Account       : ":
                    *V2LON,LEDGER,SLASH,ACCOUNT,SP2,FMAMDESC,*EF;
.
SCRB9999  RETURN
.******************************************************************************
.  SELB - Perform Screen B                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELB0000  MATCH     "1426",PASSCODE
          GOTO      SELB1000 IF EQUAL
          COMPARE   "8",CUROPTN
          GOTO      SELB1000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"Only IBA Can Run This Option - ";
          CALL      HITENTER
          GOTO      SELB9500
.
SELB1000  UNPACK    SP70,LEDGER,ACCOUNT
          CALL      SCRB0000           * display screen B
.
          MOVE      "4",CVERT
          MOVE      "28",CCOL
          CALL      KLMAFM00
          BRANCH    EXIT,SELB9500,SELB9500
          PACK      LEDGER,FMLALEDG,SP70
          PACK      FMAMLEDG,FMLALEDG,SP70
          PACK      TOTLEDG,FMLALEDG,SP70
          CALL      SCRB0000           * display screen B
.
          UNPACK    SP70,ACCOUNT
          MOVE      "4",CVERT
          MOVE      "31",CCOL
.
          COMPARE   "8",CUROPTN
          CALL      XAMAFM00 IF EQUAL  * allow to delete a non-existant acct
          COMPARE   "8",CUROPTN
          CALL      KAMAFM00 IF NOT EQUAL
.
          BRANCH    EXIT,SELB0000,SELB9500
          PACK      ACCOUNT,FMAMACCT,SP70
          PACK      TOTACCNT,FMAMACCT,SP70
          CALL      SCRB0000           * display screen B
.
          COMPARE   "8",CUROPTN
          GOTO      SELB8000 IF EQUAL
.
          KEYIN     *P1:5,"    Year/Budget (CR=All) : ",*V2LON,UTYPE
          PACK      UTYPE,UTYPE,SP70
          KEYIN     *P1:6,"    Port        (SP=All) : ":
                    *P28:6,*DV,PORTCODE:
                    *P28:6,*V2LON,*RV,PORTCODE:
                    *P28:6,*DV,PORTCODE;
.
SELB8000  CALL      CONTQST
          SUB       ONE,CEXIT
          BRANCH    CEXIT,SELB1000,SELB9500
.
SELB9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELB9999
.
SELB9500  MOVE      ONE,EXIT           * quit
.
SELB9999  RETURN
.******************************************************************************
.  SCRC - Display Screen C                       Called by SELC, redisps
.******************************************************************************
SCRC0000  MOVE      "3",SCRNO
          UNPACK    BATDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Search From Batch    : ":
                          *V2LON,BATCH1:
                    *P1:5," 2",*HOFF,".        To   Batch    : ":
                          *V2LON,BATCH2:
                    *P1:6," 3",*HOFF,". From Post To Date    : ":
                          *V2LON,CPCDATE;
.
SCRC9999  RETURN
.******************************************************************************
.  SELC - Perform Screen C                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELC0000  UNPACK    SP70,BATCH1,BATCH2,BATDATE
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONC       * reset item desired
          CALL      SCRC0000           * display screen C
.
SELC0100  ADD       ONE,OPTIONC        * get next item
          BRANCH    ACCEPT,SELC0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONC
.
SELC0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONC,CVERT
          MOVE      OPTIONC,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELC9500,SELC9000:                       * quit, continue
                       SELC1100,SELC1200,SELC1300               * execute option
          BRANCH    ACCEPT,SELC0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELC0100           * get another option
.
SELC0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELC0100
.
.---- option 1 ----
.
SELC1100  CALL      KBCFFM00                * get data
          BRANCH    EXIT,SELC1150,SELC9500  * entry ok ? (1=blank, 2=EXITCHAR)
          PACK      BATCH1,FMBCBAT,SP70
          REP       " 0",BATCH1
.
SELC1150  LOAD      BATCH1,EXIT,ZERO10
          DISPLAY   *PCCOL:CVERT,*V2LON,BATCH1;
          GOTO      SELC0100
.
.---- option 2 ----
.
SELC1200  CALL      KBCFFM00                * get data
          BRANCH    EXIT,SELC1160,SELC9500  * entry ok ? (1=blank, 2=EXITCHAR)
          PACK      BATCH2,FMBCBAT,SP70
          REP       " 0",BATCH2
.
SELC1160  LOAD      BATCH2,EXIT,NINE10
          DISPLAY   *PCCOL:CVERT,*V2LON,BATCH2;
          GOTO      SELC0100
.
.---- option 3 ----
.
SELC1300  CALL      KEYDATE
          PACK      BATDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",BATDATE
          GOTO      SELC0100
.
.
SELC9000  MATCH     BATCH1,BATCH2
          GOTO      SELC9100 IF NOT LESS
          DISPLAY   *P1:24,*B,*EF,"From Batch Must Be Less Than To Batch - ";
          CALL      HITENTER
          GOTO      SELC0100
.
SELC9100  MOVE      ZERO,EXIT          * continue
          GOTO      SELC9999
.
SELC9500  MOVE      ONE,EXIT           * quit
.
SELC9999  RETURN
.**********************************************************************
.  SBAT - Search for unbalanced processed batches      Called By ML
.**********************************************************************
SBAT0000  MOVE      ZERO,BATCHA
          MOVE      ZERO,BATCHC
          MOVE      ZERO,BATCHE
          MOVE      ZERO,BATCHX
          MOVE      ZERO,BATCHT
          UNPACK    SP70,FMSTFILE,FMSRFILE,FMSPFILE,FMSSFILE
          PACK      KEY6,FOUR,BATCH1,SP70
          CALL      RSFMBC2
          CALL      RPFMBC2
.
.---- loop through batches ----
.
SBAT1000  CALL      RKFMBC2
          BRANCH    OVRCD,SBAT9000
          MATCH     "4",FMBCSTA
          GOTO      SBAT9000 IF NOT EQUAL
          MATCH     FMBCBAT,BATCH2          * in batch range ?
          GOTO      SBAT9000 IF LESS
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing : ",*V2LON,FMBCBAT,*EF;
          ENDIF
.
          MATCH     BATDATE,FMBCPDAT        * in date range ? (accrual)
          GOTO      SBAT1010 IF NOT LESS
          MATCH     BATDATE,FMBCCDAT        * in date range ? (cash)
          GOTO      SBAT1010 IF NOT LESS
          GOTO      SBAT1000
.
SBAT1010  PACK      KEY2,FMBCLED
          CALL      RDFMLA1
          ADD       ONE,BATCHT
.
          PACK      KEY5,FMBCBAT
          CALL      RDAPBM1
          BRANCH    OVRCD,SBAT1020
.
          COMPARE   APBMTOT,FMBCTOT
          GOTO      SBAT1020 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"ERROR - G/L Batch Total",*V2LON:
                    FMBCBAT,"/",FMBCTOT,*HOFF:
                    " Not Equal to A/P Balance",*V2LON,APBMTOT,*HOFF," - ";
          WRITE     ERRFILE,SEQ;"ERROR - Batch ",FMBCBAT:
                    " Doesn't Balance with A/P ",FMBCTOT,"/",APBMTOT
          CALL      HITENTER
          MATCH     "*",ANS
          GOTO      SBAT9999 IF EQUAL
.
.
.---- open files ----
.
SBAT1020  MOVE      FMBCPDAT,WORKDATE
          CALL      CFYR0000
          MOVE      CURYEAR,ACCYEAR
          PACK      FILENAME,FMST,ACCYEAR,SP70
.
          MATCH     FILENAME,FMSTFILE       * file already open ?
          GOTO      SBAT1100 IF EQUAL
.
          MOVE      FILENAME,FMSTFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FMSTFILE
          TRAPCLR   IO
          LOAD      FMSTFILE,OVRCD,SP70
          BRANCH    OVRCD,SBAT1000
.
SBAT1100  MOVE      FMBCCDAT,WORKDATE
          CALL      CFYR0000
          MOVE      CURYEAR,CASYEAR
          PACK      FILENAME,FMSR,CASYEAR,SP70
.
          MATCH     FILENAME,FMSRFILE       * file already open ?
          GOTO      SBAT1200 IF EQUAL
.
          MOVE      FILENAME,FMSRFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSCTRA1,FMSRFILE
          TRAPCLR   IO
          LOAD      FMSRFILE,OVRCD,SP70
          BRANCH    OVRCD,SBAT1000
.
.---- loop through files ----
.
SBAT1200  MOVE      ZERO,BALANCE
          PACK      KEY10,FMBCBAT,SP70
          CALL      RSFMTR1
.
SBAT1300  CALL      RKFMTR1
          BRANCH    OVRCD,SBAT1400
          MATCH     FMBCBAT,FMTRBAT
          GOTO      SBAT1400 IF NOT EQUAL
.
          MOVE      "Accrual   ",KEY10
          CALL      CHXX0000           * check for XX trans
.
          CALL      CHAC0000           * check if account exists
.
          CALL      CAMT0000
          ADD       FMTRAMT,BALANCE
          GOTO      SBAT1300
.
SBAT1400  COMPARE   ZERO,BALANCE
          GOTO      SBAT2200 IF EQUAL
          ADD       ONE,BATCHA
          DISPLAY   *P1:24,*B,*EF,"ERROR - Batch ",*V2LON,FMBCBAT,*HOFF:
                    " Has Accrual Bal ",*V2LON,BALANCE,*HOFF," - ";
          WRITE     ERRFILE,SEQ;"ERROR - Batch ",FMBCBAT:
                    " Has Accrual Bal ",BALANCE
          CALL      HITENTER
          MATCH     "*",ANS
          GOTO      SBAT9999 IF EQUAL
.
SBAT2200  MOVE      ZERO,BALANCE
          PACK      KEY10,FMBCBAT,SP70
          CALL      RSFMCT1
.
SBAT2300  CALL      RKFMCT1
          BRANCH    OVRCD,SBAT2400
          MATCH     FMBCBAT,FMCTBAT
          GOTO      SBAT2400 IF NOT EQUAL
.
          MOVE      FMCTTYPE,FMTRTYPE
          MOVE      FMCTAMT,FMTRAMT
          MOVE      FMCTLEDG,FMTRLEDG
          MOVE      FMCTACCT,FMTRACCT
          MOVE      FMCTUNIQ,FMTRUNIQ
          MOVE      "Cash      ",KEY10
          CALL      CHXX0000           * check for XX trans
.
          CALL      CHAC0000           * check if account exists
.
          CALL      CAMT0000
          ADD       FMTRAMT,BALANCE
          GOTO      SBAT2300
.
SBAT2400  COMPARE   ZERO,BALANCE
          GOTO      SBAT3200 IF EQUAL
          ADD       ONE,BATCHC
          DISPLAY   *P1:24,*B,*EF,"ERROR - Batch ",*V2LON,FMBCBAT,*HOFF:
                    " Has Cash Bal ",*V2LON,BALANCE,*HOFF," - ";
          WRITE     ERRFILE,SEQ;"ERROR - Batch ",FMBCBAT:
                    " Has Cash Bal ",BALANCE
          CALL      HITENTER
          MATCH     "*",ANS
          GOTO      SBAT9999 IF EQUAL
.
SBAT3200  
          GOTO      SBAT1000
.
SBAT9000  DISPLAY   *P1:19,*B,*EF:
                    "No. of Processed Cash    Batches out of Balance ":
                    *V2LON,BATCHC,*HOFF:
                    *P1:20:
                    "No. of Processed Accrual Batches out of Balance ":
                    *V2LON,BATCHA,*HOFF:
                    *P1:21:
                    "No. of Processed Batches With Invalid Accounts  ":
                    *V2LON,BATCHE,*HOFF:
                    *P1:22:
                    "No. of Processed Batches With XX Transactions   ":
                    *V2LON,BATCHX,*HOFF:
                    *P1:24:
                    "No. of Processed Batches Checked                ":
                    *V2LON,BATCHT,*HOFF," - ";
          CALL      HITENTER
.
SBAT9999  RETURN
.**********************************************************************
.  CHXX - Check for XX transactions                    Called By SBAT
.        Requires - FMTRTYPE
.**********************************************************************
CHXX0000  MATCH     "XX",FMTRTYPE
          GOTO      CHXX9000 IF NOT EQUAL
.
          ADD       ONE,BATCHX
          DISPLAY   *P1:23,*EF,"ERROR - Batch ",*V2LON,FMBCBAT,*HOFF:
                    " Has 'XX' Transactions";
          WRITE     ERRFILE,SEQ;"ERROR - Batch ",FMBCBAT:
                    " Has 'XX' Transactions"
.
CHXX9000  
.
CHXX9999  RETURN
.**********************************************************************
.  CHAC - Check if account exists                      Called By SBAT
.        Requires - FMTRLEDG, FMTRACCT
.**********************************************************************
CHAC0000  PACK      KEY14,FMTRLEDG,FMTRACCT
          CALL      RDFMAM1
          COMPARE   ONE,OVRCD
          GOTO      CHAC9000 IF NOT EQUAL
.
          ADD       ONE,BATCHE
          DISPLAY   *P1:23,*EF,"ERROR - Batch ",KEY10,*V2LON,FMBCBAT:
                    SLASH,FMTRUNIQ,*HOFF:
                    " Has Invalid Acct ",FMTRLEDG,SLASH,FMTRACCT;
          WRITE     ERRFILE,SEQ;"ERROR - Batch ",KEY10,FMBCBAT:
                    SLASH,FMTRUNIQ:
                    " Has Invalid Acct ",FMTRLEDG,SLASH,FMTRACCT
          GOTO      CHAC9999
.
CHAC9000  
          MATCH     "6",FMAMTYPE
          GOTO      CHAC9999 IF LESS
.
          ADD       ONE,BATCHE
          DISPLAY   *P1:23,*EF,"ERROR - Batch ",*V2LON,KEY10,FMBCBAT:
                    SLASH,FMTRUNIQ,*HOFF:
                    " Has Invalid Acct Type ",FMTRLEDG,SLASH,FMTRACCT;
          WRITE     ERRFILE,SEQ;"ERROR - Batch ",KEY10,FMBCBAT:
                    SLASH,FMTRUNIQ:
                    " Has Invalid Acct Type ",FMTRLEDG,SLASH,FMTRACCT
.
CHAC9999  RETURN
.**********************************************************************
.  CAMT -  Fix amount                                  Called By Lots
.**********************************************************************
CAMT0000  MATCH     "JA",FMTRTYPE
          GOTO      CAMT9999 IF EQUAL
.
          MATCH     "PY",FMTRTYPE
          GOTO      CAMT9999 IF EQUAL
.
          MATCH     "IN",FMTRTYPE
          GOTO      CAMT9999 IF EQUAL
.
          MULT      SEQ,FMTRAMT
.
CAMT9999  RETURN
.******************************************************************************
.  SCRD - Display Screen D                       Called by SELD, redisps
.******************************************************************************
SCRD0000  DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Batch Number         : ";
.
SCRD9999  RETURN
.******************************************************************************
.  SELD - Perform Screen D                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELD0000  UNPACK    SP70,BATCH
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIOND       * reset item desired
          CALL      SCRD0000           * display screen D
.
SELD0100  ADD       ONE,OPTIOND        * get next item
          BRANCH    ACCEPT,SELD0110    * in accept mode ?
          CALL      MQSD0000           * get option if not in accept mode
          MOVE      CCITEM,OPTIOND
.
SELD0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIOND,CVERT
          MOVE      OPTIOND,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELD9500,SELD9000:                       * quit, continue
                       SELD1100                                 * execute option
          BRANCH    ACCEPT,SELD0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELD0100           * get another option
.
SELD0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELD0100
.
.---- option 1 ----
.
SELD1100  UNPACK    UNDLN70,BATCH
          KEYIN     *PCCOL:CVERT,*DV,BATCH:
                    *PCCOL:CVERT,*V2LON,*DE,*JR,*ZF,BATCH:
                    *PCCOL:CVERT,*DV,BATCH;
          PACK      BATCH,BATCH,SP70
          REP       " 0",BATCH
          MATCH     "0000000000",BATCH
          GOTO      SELD9500 IF EQUAL
          GOTO      SELD0100
.
.
SELD9000  CALL      CBAT0000           * check batch
          GOTO      SELD0100
.
SELD9500  
.
SELD9999  RETURN
.**********************************************************************
.  SELE - Update CC levels                             Called By ML
.**********************************************************************
SELE0000  MATCH     "1426",PASSCODE
          GOTO      SELE1000 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"Only IBA Can Run This Option - ";
          CALL      HITENTER
          GOTO      SELE9999
.
SELE1000  KEYIN     *P1:4,"    Ledger (CR for All)  : __",*EF:
                    *P28:4,*ZF,*JR,*V2LON,FMLALEDG:
                    *P28:4,*DV,FMLALEDG;
          PACK      FMLALEDG,FMLALEDG,SP70
          MATCH     "0\",FMLALEDG
          GOTO      SELA9999 IF EQUAL
          MATCH     SP70,FMLALEDG
          GOTO      SELA1500 IF EQUAL
          PACK      KEY2,FMLALEDG,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,SELE1000
.
SELA1500  KEYIN     *P1:6,"    Change to Level      : ___":
                    *P28:6,*ZF,*DE,*JR,*V2LON,SAVLEVEL:
                    *P28:6,*DV,SAVLEVEL;
          PACK      SAVLEVEL,SAVLEVEL,SP70
          REP       " 0",SAVLEVEL
          MATCH     "0\",SAVLEVEL
          GOTO      SELA9999 IF EQUAL
          PACK      KEY3,SAVLEVEL,SP70
          CALL      RDFMLV1
          BRANCH    OVRCD,SELE1000
.
          DISPLAY   SP2,FMLVDESC;
          PACK      KEY14,FMLALEDG,SP70
          CALL      RSFMCC1
.
SELE2000  CALL      RKFMCC1
          BRANCH    OVRCD,SELE9999     * no more records ?
          MATCH     FMLALEDG,SP70      * all ledgers ?
          GOTO      SELE1100 IF EQUAL
          MATCH     FMLALEDG,FMCCLEDG  * correct ledger
          GOTO      SELE9999 IF NOT EQUAL
.
SELE1100  PACK      KEY14,FMCCLEDG,FMCCCOCE,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,SELE2000
.
          DISPLAY   *P1:8,"    Ledger               : ":
                    *V2LON,FMCCLEDG,*HOFF:
                    *P1:9,"    Cost Centre          : ":
                    *V2LON,FMCCCOCE,*HOFF,SP2,FMCCDESC:
                   *P1:10,"    Old Level            : ":
                    *V2LON,FMAMCLEV;
.
          CALL      CONTQST
          SUB       ONE,CEXIT
          BRANCH    CEXIT,SELE2000,SELE9999
.
          MOVE      SAVLEVEL,FMAMCLEV
          CALL      UPFMAM1
          GOTO      SELE2000
.
SELE9999  RETURN
.******************************************************************************
.  SCRF - Display Screen F                       Called by SELF, redisps
.******************************************************************************
SCRF0000  MOVE      "4",SCRNO
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Ledger               : ":
                          *V2LON,FMLALEDG,*HOFF,SP2,FMLADESC,*V2LON:
                    *P1:5," 2",*HOFF,". From Subjective      : ":
                          *V2LON,SUBJ1:
                    *P1:6," 3",*HOFF,". To   Subjective      : ":
                          *V2LON,SUBJ2:
                    *P1:10,"Note : This will not directly update total Subj's":
                    *P1:11,"       You must run for the base posting accounts";
.
SCRF9999  RETURN
.******************************************************************************
.  SELF - Perform Screen F                       Called by ML
.******************************************************************************
SELF0000  MATCH     "1426",PASSCODE
          GOTO      SELF0010 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"Only IBA Can Run This Option - ";
          CALL      HITENTER
          GOTO      SELF9999
.
SELF0010  UNPACK    SP70,SUBJ1,SUBJ2
          UNPACK    SP70,FMLALEDG,FMLADESC
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONF       * reset item desired
          CALL      SCRF0000           * display screen F
.
SELF0100  ADD       ONE,OPTIONF        * get next item
          BRANCH    ACCEPT,SELF0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONF
.
SELF0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONF,CVERT
          MOVE      OPTIONF,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELF9500,SELF9000:                       * quit, continue
                       SELF1100,SELF1200,SELF1300               * execute option
          BRANCH    ACCEPT,SELF0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELF0100           * get another option
.
SELF0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELF0100
.
.---- option 1 ----
.
SELF1100  CALL      KLMAFM00                * get data
          BRANCH    EXIT,SELF9500,SELF9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SP2,FMLADESC;
          GOTO      SELF0100
.
.---- option 2 ----
.
SELF1200  CALL      KSBAFM00                * get data
          BRANCH    EXIT,SELF1200,SELF9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSASUBJ;
          PACK      SUBJ1,FMSASUBJ,SP70
          GOTO      SELF0100
.
.---- option 3 ----
.
SELF1300  CALL      KSBAFM00                * get data
          BRANCH    EXIT,SELF1300,SELF9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSASUBJ;
          PACK      SUBJ2,FMSASUBJ,SP70
          GOTO      SELF0100
.
.
SELF9000  MOVE      ZERO,EXIT          * continue
          CALL      FACC0000           * fix accounts
          GOTO      SELF9999
.
SELF9500  MOVE      ONE,EXIT           * quit
.
SELF9999  RETURN
.******************************************************************************
.  SCRG - Display Screen G                       Called by SELG, redisps
.******************************************************************************
SCRG0000  DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". From Ledger          : ":
                          *V2LON,LEDG1,*HOFF,SP2,SP10,LEDG1D,*V2LON:
                    *P1:5," 2",*HOFF,". From Account         : ":
                          *V2LON,ACCT1,*HOFF,SP2,ACCT1D,*V2LON:
                    *P1:6," 3",*HOFF,". To   Ledger          : ":
                          *V2LON,LEDG2,*HOFF,SP2,SP10,LEDG2D,*V2LON:
                    *P1:7," 4",*HOFF,". To Account           : ":
                          *V2LON,ACCT2,*HOFF,SP2,ACCT2D,*V2LON:
                    *P1:8," 5",*HOFF,". Financial Year       : ":
                          *V2LON,YEAR1;
.
SCRG9999  RETURN
.******************************************************************************
.  SELG - Perform Screen G                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELG0000  MOVE      "5",SCRNO
          UNPACK    SP70,FMSTFILE,FMSRFILE,FMSPFILE,FMSSFILE
          UNPACK    SP70,LEDG1,LEDG2,ACCT1,ACCT2,YEAR1
          UNPACK    SP70,LEDG1D,LEDG2D
          UNPACK    SP70,ACCT1D,ACCT2D
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONG       * reset item desired
          CALL      SCRG0000           * display screen G
.
SELG0100  ADD       ONE,OPTIONG        * get next item
          BRANCH    ACCEPT,SELG0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONG
.
SELG0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONG,CVERT
          MOVE      OPTIONG,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELG9500,SELG9000:                       * quit, continue
                       SELG1100,SELG1200,SELG1300,SELG1400,SELG1500
          BRANCH    ACCEPT,SELG0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELG0100           * get another option
.
SELG0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELG0100
.
.---- option 1 ----
.
SELG1100  CALL      KLMAFM00                * get data
          BRANCH    EXIT,SELG1100,SELG9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SP2,SP10,FMLADESC;
          PACK      LEDG1,FMLALEDG,SP70
          PACK      LEDG1D,FMLADESC,SP70
          GOTO      SELG0100
.
.---- option 2 ----
.
SELG1200  MOVE      LEDG1,FMAMLEDG
          MOVE      LEDG1,FMLALEDG
          CALL      KAMAFM00                * get data
          BRANCH    EXIT,SELG1290,SELG9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT,*HOFF,SP2,FMAMDESC;
          PACK      ACCT1,FMAMACCT,SP70
          PACK      ACCT1D,FMAMDESC,SP70
          GOTO      SELG0100
.
SELG1290  PACK      ACCT1,SP70
          PACK      ACCT1D,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,ACCT1;
          GOTO      SELG0100
.
.---- option 3 ----
.
SELG1300  CALL      KLMAFM00                * get data
          BRANCH    EXIT,SELG1300,SELG9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SP2,SP10,FMLADESC;
          PACK      LEDG2,FMLALEDG,SP70
          PACK      LEDG2D,FMLADESC,SP70
          GOTO      SELG0100
.
.---- option 4 ----
.
SELG1400  MOVE      LEDG2,FMAMLEDG
          MOVE      LEDG2,FMLALEDG
          CALL      KAMAFM00                * get data
          BRANCH    EXIT,SELG1490,SELG9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT,*HOFF,SP2,FMAMDESC;
          PACK      ACCT2,FMAMACCT,SP70
          PACK      ACCT2D,FMAMDESC,SP70
          GOTO      SELG0100
.
SELG1490  MOVE      T70,ACCT2
          PACK      ACCT2D,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,ACCT2;
          GOTO      SELG0100
.
.---- option 5 ----
.
SELG1500  CALL      KLMCFM00                * get data
          BRANCH    EXIT,SELG1500,SELG9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLCYEAR;
          PACK      YEAR1,FMLCYEAR,SP70
          GOTO      SELG0100
.
.
SELG9000  MATCH     LEDG1,LEDG2
          GOTO      SELG9100 IF NOT LESS
.
          DISPLAY   *P1:24,*B,*EF:
                    "From Ledger Must Not Be After To Ledger - ";
          CALL      HITENTER
          GOTO      SELG0100
.
SELG9100  
          MATCH     LEDG1,LEDG2
          IF        @EQUAL
            MATCH     ACCT1,ACCT2
            GOTO      SELG9400 IF NOT LESS
          ELSE
            GOTO      SELG9400
          ENDIF
.
          DISPLAY   *P1:24,*B,*EF:
                    "From Account Must Not Be After To Account - ";
          CALL      HITENTER
          GOTO      SELG0100
.
SELG9400  MOVE      ZERO,EXIT          * continue
          CALL      UPDG0000           * update data
          GOTO      SELG9999
.
SELG9500  MOVE      ONE,EXIT           * quit
.
SELG9999  RETURN
.**********************************************************************
.  UPDG - Update fmsp from fmst                        Called By SELG
.**********************************************************************
UPDG0000  UNPACK    SP70,FMSAFILE,FMSZFILE,FMSTFILE,FMSSFILE,FMSRFILE
          PACK      FILENAME,FMST,YEAR1,SP70
.
          MATCH     FILENAME,FMSTFILE       * file already open ?
          GOTO      UPDG0100 IF EQUAL
.
          MOVE      FILENAME,FMSTFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,FMSTFILE
          TRAPCLR   IO
          LOAD      FMSTFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDG9500
.
UPDG0100  PACK      FILENAME,FMSR,YEAR1,SP70
.
          MATCH     FILENAME,FMSRFILE       * file already open ?
          GOTO      UPDG0200 IF EQUAL
.
          MOVE      FILENAME,FMSRFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSCTRA2,FMSRFILE
          TRAPCLR   IO
          LOAD      FMSRFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDG9500
.
UPDG0200  PACK      FILENAME,FMSP,YEAR1,SP70
.
          MATCH     FILENAME,FMSPFILE       * file already open ?
          GOTO      UPDG0300 IF EQUAL
.
          MOVE      FILENAME,FMSPFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FMSPFILE
          TRAPCLR   IO
          LOAD      FMSPFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDG9500
.
UPDG0300  PACK      FILENAME,FMSA,YEAR1,SP70
.
          MATCH     FILENAME,FMSAFILE       * file already open ?
          GOTO      UPDG0400 IF EQUAL
.
          MOVE      FILENAME,FMSAFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA2,FMSAFILE
          TRAPCLR   IO
          LOAD      FMSAFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDG9500
.
UPDG0400  PACK      FILENAME,FMSZ,YEAR1,SP70
.
          MATCH     FILENAME,FMSZFILE       * file already open ?
          GOTO      UPDG0500 IF EQUAL
.
          MOVE      FILENAME,FMSZFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSCZA2,FMSZFILE
          TRAPCLR   IO
          LOAD      FMSZFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDG9500
.
UPDG0500  PACK      FILENAME,FMSS,YEAR1,SP70
.
          MATCH     FILENAME,FMSSFILE       * file already open ?
          GOTO      UPDG0600 IF EQUAL
.
          MOVE      FILENAME,FMSSFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA1,FMSSFILE
          TRAPCLR   IO
          LOAD      FMSSFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDG9500
.
.
UPDG0600  PACK      FILENAME,FMSD,YEAR1,SP70
.
          MATCH     FILENAME,FMSDFILE       * file already open ?
          GOTO      UPDG0900 IF EQUAL
.
          MOVE      FILENAME,FMSDFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSDSFA1,FMSDFILE
          TRAPCLR   IO
          LOAD      FMSDFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDG9500
.
UPDG0900  PACK      KEY14,LEDG1,ACCT1,SP70
          CALL      RSFMAM1
          CALL      RPFMAM1
          MOVE      ZERO,COUNTDIS
.
UPDG1000  CALL      RKFMAM1
          BRANCH    OVRCD,UPDG9999
          MATCH     FMAMLEDG,LEDG2
          GOTO      UPDG9999 IF LESS
          MATCH     FMAMLEDG,LEDG2
          IF        @EQUAL
            MATCH     FMAMACCT,ACCT2
            GOTO      UPDG9999 IF LESS
          ENDIF
.
          MATCH     "8",FMAMTYPE
          GOTO      UPDG1010 IF EQUAL
          MATCH     "6",FMAMTYPE
          GOTO      UPDG1000 IF NOT LESS
.
UPDG1010  ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*EF;
          ENDIF
.
          PACK      KEY2,FMAMLEDG,SP70
          CALL      RDFMLA1
.
          CALL      CTOA0000           * clear totals
          CALL      ATRN0000           * calc accrual trans
          CALL      CTRN0000           * calc cash trans
          CALL      CBAL0000           * check balance
.
          GOTO      UPDG1000           * get next account
.
.
UPDG9500  DISPLAY   *P1:24,*B,*EF,"File Missing for Year ",YEAR1," - ";
          CALL      HITENTER
.
UPDG9999  RETURN
.**********************************************************************
.  CTOA - Clear totals                                 Called By UPDG
.**********************************************************************
CTOA0000  PACK      KEY23,FMAMLEDG,FMAMACCT,SP70
          CALL      RSFMDF1
.
CTOA1000  CALL      RKFMDF1
          BRANCH    OVRCD,CTOA2000
.
          MATCH     FMAMLEDG,FMDFLEDG
          GOTO      CTOA2000 IF NOT EQUAL
          MATCH     FMAMACCT,FMDFACCT
          GOTO      CTOA2000 IF NOT EQUAL
.
          MOVE      ZERO,FMDF01
          MOVE      ZERO,FMDF02
          MOVE      ZERO,FMDF03
          MOVE      ZERO,FMDF04
          MOVE      ZERO,FMDF05
          MOVE      ZERO,FMDF06
          MOVE      ZERO,FMDF07
          MOVE      ZERO,FMDF08
          MOVE      ZERO,FMDF09
          MOVE      ZERO,FMDF10
          MOVE      ZERO,FMDF11
          MOVE      ZERO,FMDF12
          MOVE      ZERO,FMDF13
.
          CALL      UPFMDF1
          GOTO      CTOA1000
.
CTOA2000  MOVE      ZERO,ATOT01
          MOVE      ZERO,ATOT02
          MOVE      ZERO,ATOT03
          MOVE      ZERO,ATOT04
          MOVE      ZERO,ATOT05
          MOVE      ZERO,ATOT06
          MOVE      ZERO,ATOT07
          MOVE      ZERO,ATOT08
          MOVE      ZERO,ATOT09
          MOVE      ZERO,ATOT10
          MOVE      ZERO,ATOT11
          MOVE      ZERO,ATOT12
          MOVE      ZERO,ATOT13
.
          MOVE      ZERO,CTOA01
          MOVE      ZERO,CTOA02
          MOVE      ZERO,CTOA03
          MOVE      ZERO,CTOA04
          MOVE      ZERO,CTOA05
          MOVE      ZERO,CTOA06
          MOVE      ZERO,CTOA07
          MOVE      ZERO,CTOA08
          MOVE      ZERO,CTOA09
          MOVE      ZERO,CTOA10
          MOVE      ZERO,CTOA11
          MOVE      ZERO,CTOA12
          MOVE      ZERO,CTOA13
.
CTOA9999  RETURN
.**********************************************************************
.  ATRN - Calc accrual totals                          Called By UPDG
.**********************************************************************
ATRN0000  MATCH     "8",FMAMTYPE
          GOTO      ATRN5000 IF NOT LESS
.
.---- normal account ----
.
          PACK      KEY32,FMAMLEDG,FMAMACCT,SP70
          CALL      RSFMTR2
.
ATRN1000  CALL      RKFMTR2
          BRANCH    OVRCD,ATRN9999
          PACK      KEY14,FMTRLEDG,FMTRACCT,SP70
          MATCH     KEY14,KEY32
          GOTO      ATRN9999 IF NOT EQUAL
.
          PACK      WORKDATE,FMTRPDAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,ATRN2000
          MOVE      "Invalid Year",ERRMSG
          MATCH     CURYEAR,YEAR1
          GOTO      ATRN2000 IF NOT EQUAL
.
          CALL      CAMT0000
          LOAD      F12P5,PERCNT,ATOT01,ATOT02,ATOT03,ATOT04,ATOT05,ATOT06:
                          ATOT07,ATOT08,ATOT09,ATOT10,ATOT11,ATOT12,ATOT13
          ADD       FMTRAMT,F12P5
          STORE     F12P5,PERCNT,ATOT01,ATOT02,ATOT03,ATOT04,ATOT05,ATOT06:
                          ATOT07,ATOT08,ATOT09,ATOT10,ATOT11,ATOT12,ATOT13
.
ATRN1300  PACK      KEY23,FMTRLEDG,FMTRACCT,FMTRDISS,FMTRRESP,SP70
          CALL      RDFMDF1
          BRANCH    OVRCD,ATRN1500
.
          LOAD      F12P5,PERCNT,FMDF01,FMDF02,FMDF03,FMDF04,FMDF05,FMDF06: 
                          FMDF07,FMDF08,FMDF09,FMDF10,FMDF11,FMDF12,FMDF13
          ADD       FMTRAMT,F12P5
          STORE     F12P5,PERCNT,FMDF01,FMDF02,FMDF03,FMDF04,FMDF05,FMDF06:
                          FMDF07,FMDF08,FMDF09,FMDF10,FMDF11,FMDF12,FMDF13
          CALL      UPFMDF1
          GOTO      ATRN1000
.
ATRN1500  MOVE      FMTRLEDG,FMDFLEDG
          MOVE      FMTRACCT,FMDFACCT
          MOVE      FMTRDISS,FMDFDISS
          MOVE      FMTRRESP,FMDFRESP
          MOVE      ZERO,FMDFBF
          MOVE      ZERO,FMDF01
          MOVE      ZERO,FMDF02
          MOVE      ZERO,FMDF03
          MOVE      ZERO,FMDF04
          MOVE      ZERO,FMDF05
          MOVE      ZERO,FMDF06
          MOVE      ZERO,FMDF07
          MOVE      ZERO,FMDF08
          MOVE      ZERO,FMDF09
          MOVE      ZERO,FMDF10
          MOVE      ZERO,FMDF11
          MOVE      ZERO,FMDF12
          MOVE      ZERO,FMDF13
          CALL      WRFMDF1
          GOTO      ATRN1300
.
ATRN2000  DISPLAY   *P1:24,*EF,*+,ERRMSG,SP1,FMTRBAT,SLASH,FMTRUNIQ;
          WRITE     ERRFILE,SEQ;ERRMSG,SP1,FMTRBAT,SLASH,FMTRUNIQ
          GOTO      ATRN1000
.
.---- stat account ----
.
ATRN5000  
          PACK      KEY30,FMAMLEDG,FMAMACCT,SP70
          CALL      RSFMSR2
.
ATRN6000  CALL      RKFMSR2
          BRANCH    OVRCD,ATRN9999
          PACK      KEY14,FMSRLEDG,FMSRACCT,SP70
          MATCH     KEY14,KEY30
          GOTO      ATRN9999 IF NOT EQUAL
.
          PACK      WORKDATE,FMSRDATE,SP70
          CALL      CFYR0000
          BRANCH    EXIT,ATRN7000
          MOVE      "Invalid Year",ERRMSG
          MATCH     CURYEAR,YEAR1
          GOTO      ATRN7000 IF NOT EQUAL
.
          LOAD      F12P5,PERCNT,ATOT01,ATOT02,ATOT03,ATOT04,ATOT05,ATOT06:
                          ATOT07,ATOT08,ATOT09,ATOT10,ATOT11,ATOT12,ATOT13
          ADD       FMSRUNIT,F12P5
          STORE     F12P5,PERCNT,ATOT01,ATOT02,ATOT03,ATOT04,ATOT05,ATOT06:
                          ATOT07,ATOT08,ATOT09,ATOT10,ATOT11,ATOT12,ATOT13
.
          GOTO      ATRN6000
.
ATRN7000  DISPLAY   *P1:24,*EF,*+,ERRMSG,SP1,FMSRBAT,SLASH,FMSRUNIQ;
          WRITE     ERRFILE,SEQ;ERRMSG,SP1,FMSRBAT,SLASH,FMSRUNIQ
          GOTO      ATRN6000
.
ATRN9999  RETURN
.**********************************************************************
.  CTRN - Calc cash totals                          Called By UPDG
.**********************************************************************
CTRN0000  MATCH     "8",FMAMTYPE
          GOTO      CTRN5000 IF NOT LESS
.
.---- normal account ----
.
          PACK      KEY32,FMAMLEDG,FMAMACCT,SP70
          CALL      RSFMCT2
.
CTRN1000  CALL      RKFMCT2
          BRANCH    OVRCD,CTRN9999
          PACK      KEY14,FMCTLEDG,FMCTACCT,SP70
          MATCH     KEY14,KEY32
          GOTO      CTRN9999 IF NOT EQUAL
.
          PACK      WORKDATE,FMCTPDAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,CTRN2000
          MOVE      "Invalid Year",ERRMSG
          MATCH     CURYEAR,YEAR1
          GOTO      CTRN2000 IF NOT EQUAL
.
          MOVE      FMCTAMT,FMTRAMT
          MOVE      FMCTTYPE,FMTRTYPE
          CALL      CAMT0000
          LOAD      F12P5,PERCNT,CTOA01,CTOA02,CTOA03,CTOA04,CTOA05,CTOA06:
                          CTOA07,CTOA08,CTOA09,CTOA10,CTOA11,CTOA12,CTOA13
          ADD       FMTRAMT,F12P5
          STORE     F12P5,PERCNT,CTOA01,CTOA02,CTOA03,CTOA04,CTOA05,CTOA06:
                          CTOA07,CTOA08,CTOA09,CTOA10,CTOA11,CTOA12,CTOA13
.
          GOTO      CTRN1000
.
CTRN2000  DISPLAY   *P1:24,*EF,*+,ERRMSG,SP1,FMCTBAT,SLASH,FMCTUNIQ;
          WRITE     ERRFILE,SEQ;ERRMSG,SP1,FMCTBAT,SLASH,FMCTUNIQ
          GOTO      CTRN1000
.
.---- stat account ----
.
CTRN5000  
          PACK      KEY30,FMAMLEDG,FMAMACCT,SP70
          CALL      RSFMSZ2
.
CTRN6000  CALL      RKFMSZ2
          BRANCH    OVRCD,CTRN9999
          PACK      KEY14,FMSZLEDG,FMSZACCT,SP70
          MATCH     KEY14,KEY30
          GOTO      CTRN9999 IF NOT EQUAL
.
          PACK      WORKDATE,FMSZDATE,SP70
          CALL      CFYR0000
          BRANCH    EXIT,CTRN7000
          MOVE      "Invalid Year",ERRMSG
          MATCH     CURYEAR,YEAR1
          GOTO      CTRN7000 IF NOT EQUAL
.
          LOAD      F12P5,PERCNT,CTOA01,CTOA02,CTOA03,CTOA04,CTOA05,CTOA06:
                          CTOA07,CTOA08,CTOA09,CTOA10,CTOA11,CTOA12,CTOA13
          ADD       FMSZUNIT,F12P5
          STORE     F12P5,PERCNT,CTOA01,CTOA02,CTOA03,CTOA04,CTOA05,CTOA06:
                          CTOA07,CTOA08,CTOA09,CTOA10,CTOA11,CTOA12,CTOA13
.
          GOTO      CTRN6000
.
CTRN7000  DISPLAY   *P1:24,*EF,*+,ERRMSG,SP1,FMSZBAT,SLASH,FMSZUNIQ;
          WRITE     ERRFILE,SEQ;ERRMSG,SP1,FMSZBAT,SLASH,FMSZUNIQ
          GOTO      CTRN6000
.
CTRN9999  RETURN
.**********************************************************************
.  CBAL - Make sure in balance                         Called By PLIN
.**********************************************************************
CBAL0000  
          MATCH     "8",FMAMTYPE
          GOTO      CBAL0100 IF NOT LESS
.
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      CFPS0000           * clear fps data
          CALL      RDFMFP1            * normal account
.
          MOVE      FMFPA01,FMSSA1
          MOVE      FMFPA02,FMSSA2
          MOVE      FMFPA03,FMSSA3
          MOVE      FMFPA04,FMSSA4
          MOVE      FMFPA05,FMSSA5
          MOVE      FMFPA06,FMSSA6
          MOVE      FMFPA07,FMSSA7
          MOVE      FMFPA08,FMSSA8
          MOVE      FMFPA09,FMSSA9
          MOVE      FMFPA10,FMSSA10
          MOVE      FMFPA11,FMSSA11
          MOVE      FMFPA12,FMSSA12
          MOVE      FMFPA13,FMSSA13
          MOVE      FMFPC01,FMSSC1
          MOVE      FMFPC02,FMSSC2
          MOVE      FMFPC03,FMSSC3
          MOVE      FMFPC04,FMSSC4
          MOVE      FMFPC05,FMSSC5
          MOVE      FMFPC06,FMSSC6
          MOVE      FMFPC07,FMSSC7
          MOVE      FMFPC08,FMSSC8
          MOVE      FMFPC09,FMSSC9
          MOVE      FMFPC10,FMSSC10
          MOVE      FMFPC11,FMSSC11
          MOVE      FMFPC12,FMSSC12
          MOVE      FMFPC13,FMSSC13
          GOTO      CBAL0200
.
CBAL0100  
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          UNPACK    KEY14,FMSSLEDG,FMSSACCT
          CALL      CSMA0000           * clear sma data
          CALL      RDFMSS1            * stat account
.
CBAL0200  
          COMPARE   ATOT01,FMSSA1
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT02,FMSSA2
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT03,FMSSA3
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT04,FMSSA4
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT05,FMSSA5
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT06,FMSSA6
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT07,FMSSA7
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT08,FMSSA8
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT09,FMSSA9
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT10,FMSSA10
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT11,FMSSA11
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT12,FMSSA12
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   ATOT13,FMSSA13
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA01,FMSSC1
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA02,FMSSC2
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA03,FMSSC3
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA04,FMSSC4
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA05,FMSSC5
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA06,FMSSC6
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA07,FMSSC7
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA08,FMSSC8
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA09,FMSSC9
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA10,FMSSC10
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA11,FMSSC11
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA12,FMSSC12
          GOTO      CBAL1000 IF NOT EQUAL
          COMPARE   CTOA13,FMSSC13
          GOTO      CBAL1000 IF NOT EQUAL
          GOTO      CBAL9999
.
CBAL1000  MOVE      ZERO,SKIPFMTU
          MOVE      FMAMLEDG,TOTLEDG
          MOVE      FMAMACCT,TOTACCNT
          MOVE      YEAR1,UTYPE
          CALL      SETU0000           * set for update
.
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P5:8,"Ledger/Account : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT
            DISPLAY   *P1:9,*V2LON,"Period":
                      *P17:9,"Old Accrual Val",*P33:9,"New Accrual Val":
                      *P50:9,"   Old Cash Val",*P65:9,"   New Cash Val"
            DISPLAY   *P1:10,"  01",*P17:10,FMSSA1,*P33:10,ATOT01:
                      *P50:10,FMSSC1,*P65:10,CTOA01
            DISPLAY   *P1:11,"  02",*P17:11,FMSSA2,*P33:11,ATOT02:
                      *P50:11,FMSSC2,*P65:11,CTOA02
            DISPLAY   *P1:12,"  03",*P17:12,FMSSA3,*P33:12,ATOT03:
                      *P50:12,FMSSC3,*P65:12,CTOA03
            DISPLAY   *P1:13,"  04",*P17:13,FMSSA4,*P33:13,ATOT04:
                      *P50:13,FMSSC4,*P65:13,CTOA04
            DISPLAY   *P1:14,"  05",*P17:14,FMSSA5,*P33:14,ATOT05:
                      *P50:14,FMSSC5,*P65:14,CTOA05
            DISPLAY   *P1:15,"  06",*P17:15,FMSSA6,*P33:15,ATOT06:
                      *P50:15,FMSSC6,*P65:15,CTOA06
            DISPLAY   *P1:16,"  07",*P17:16,FMSSA7,*P33:16,ATOT07:
                      *P50:16,FMSSC7,*P65:16,CTOA07
            DISPLAY   *P1:17,"  08",*P17:17,FMSSA8,*P33:17,ATOT08:
                      *P50:17,FMSSC8,*P65:17,CTOA08
            DISPLAY   *P1:18,"  09",*P17:18,FMSSA9,*P33:18,ATOT09:
                      *P50:18,FMSSC9,*P65:18,CTOA09
            DISPLAY   *P1:19,"  10",*P17:19,FMSSA10,*P33:19,ATOT10:
                      *P50:19,FMSSC10,*P65:19,CTOA10
            DISPLAY   *P1:20,"  11",*P17:20,FMSSA11,*P33:20,ATOT11:
                      *P50:20,FMSSC11,*P65:20,CTOA11
            DISPLAY   *P1:21,"  12",*P17:21,FMSSA12,*P33:21,ATOT12:
                      *P50:21,FMSSC12,*P65:21,CTOA12
            DISPLAY   *P1:22,"  13",*P17:22,FMSSA13,*P33:22,ATOT13:
                      *P50:22,FMSSC13,*P65:22,CTOA13
          ENDIF
.
          WRITE     ERRFILE,SEQ;"Ledger/Account : ",FMAMLEDG,SLASH,FMAMACCT
          WRITE     ERRFILE,SEQ;"Perd ":
                    "   Old Accrual Val","    New Accrual Val":
                    "      Old Cash Val","       New Cash Val"
          WRITE     ERRFILE,SEQ;"  01 ",FMSSA1,ATOT01:
                    FMSSC1,CTOA01
          WRITE     ERRFILE,SEQ;"  02 ",FMSSA2,ATOT02:
                    FMSSC2,CTOA02
          WRITE     ERRFILE,SEQ;"  03 ",FMSSA3,ATOT03:
                    FMSSC3,CTOA03
          WRITE     ERRFILE,SEQ;"  04 ",FMSSA4,ATOT04:
                    FMSSC4,CTOA04
          WRITE     ERRFILE,SEQ;"  05 ",FMSSA5,ATOT05:
                    FMSSC5,CTOA05
          WRITE     ERRFILE,SEQ;"  06 ",FMSSA6,ATOT06:
                    FMSSC6,CTOA06
          WRITE     ERRFILE,SEQ;"  07 ",FMSSA7,ATOT07:
                    FMSSC7,CTOA07
          WRITE     ERRFILE,SEQ;"  08 ",FMSSA8,ATOT08:
                    FMSSC8,CTOA08
          WRITE     ERRFILE,SEQ;"  09 ",FMSSA9,ATOT09:
                    FMSSC9,CTOA09
          WRITE     ERRFILE,SEQ;"  10 ",FMSSA10,ATOT10:
                    FMSSC10,CTOA10
          WRITE     ERRFILE,SEQ;"  11 ",FMSSA11,ATOT11:
                    FMSSC11,CTOA11
          WRITE     ERRFILE,SEQ;"  12 ",FMSSA12,ATOT12:
                    FMSSC12,CTOA12
          WRITE     ERRFILE,SEQ;"  13 ",FMSSA13,ATOT13:
                    FMSSC13,CTOA13
.
          MATCH     "8",FMAMTYPE
          GOTO      CBAL1100 IF NOT LESS
.
.---- update normal data ----
.
          MOVE      ATOT01,FMFPA01
          MOVE      ATOT02,FMFPA02
          MOVE      ATOT03,FMFPA03
          MOVE      ATOT04,FMFPA04
          MOVE      ATOT05,FMFPA05
          MOVE      ATOT06,FMFPA06
          MOVE      ATOT07,FMFPA07
          MOVE      ATOT08,FMFPA08
          MOVE      ATOT09,FMFPA09
          MOVE      ATOT10,FMFPA10
          MOVE      ATOT11,FMFPA11
          MOVE      ATOT12,FMFPA12
          MOVE      ATOT13,FMFPA13
          MOVE      CTOA01,FMFPC01
          MOVE      CTOA02,FMFPC02
          MOVE      CTOA03,FMFPC03
          MOVE      CTOA04,FMFPC04
          MOVE      CTOA05,FMFPC05
          MOVE      CTOA06,FMFPC06
          MOVE      CTOA07,FMFPC07
          MOVE      CTOA08,FMFPC08
          MOVE      CTOA09,FMFPC09
          MOVE      CTOA10,FMFPC10
          MOVE      CTOA11,FMFPC11
          MOVE      CTOA12,FMFPC12
          MOVE      CTOA13,FMFPC13
.
          MOVE      ATOT01,FMFPA01D
          MOVE      ATOT02,FMFPA02D
          MOVE      ATOT03,FMFPA03D
          MOVE      ATOT04,FMFPA04D
          MOVE      ATOT05,FMFPA05D
          MOVE      ATOT06,FMFPA06D
          MOVE      ATOT07,FMFPA07D
          MOVE      ATOT08,FMFPA08D
          MOVE      ATOT09,FMFPA09D
          MOVE      ATOT10,FMFPA10D
          MOVE      ATOT11,FMFPA11D
          MOVE      ATOT12,FMFPA12D
          MOVE      ATOT13,FMFPA13D
          MOVE      CTOA01,FMFPC01D
          MOVE      CTOA02,FMFPC02D
          MOVE      CTOA03,FMFPC03D
          MOVE      CTOA04,FMFPC04D
          MOVE      CTOA05,FMFPC05D
          MOVE      CTOA06,FMFPC06D
          MOVE      CTOA07,FMFPC07D
          MOVE      CTOA08,FMFPC08D
          MOVE      CTOA09,FMFPC09D
          MOVE      CTOA10,FMFPC10D
          MOVE      CTOA11,FMFPC11D
          MOVE      CTOA12,FMFPC12D
          MOVE      CTOA13,FMFPC13D
.
          MOVE      ATOT01,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA01T
          MOVE      ATOT02,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA02T
          MOVE      ATOT03,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA03T
          MOVE      ATOT04,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA04T
          MOVE      ATOT05,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA05T
          MOVE      ATOT06,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA06T
          MOVE      ATOT07,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA07T
          MOVE      ATOT08,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA08T
          MOVE      ATOT09,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA09T
          MOVE      ATOT10,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA10T
          MOVE      ATOT11,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA11T
          MOVE      ATOT12,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA12T
          MOVE      ATOT13,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPA13T
          MOVE      CTOA01,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC01T
          MOVE      CTOA02,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC02T
          MOVE      CTOA03,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC03T
          MOVE      CTOA04,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC04T
          MOVE      CTOA05,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC05T
          MOVE      CTOA06,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC06T
          MOVE      CTOA07,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC07T
          MOVE      CTOA08,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC08T
          MOVE      CTOA09,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC09T
          MOVE      CTOA10,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC10T
          MOVE      CTOA11,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC11T
          MOVE      CTOA12,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC12T
          MOVE      CTOA13,F12P5
          DIV       "1000",F12P5
          MOVE      F12P5,FMFPC13T
.
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      DEFMFP1
          CALL      WRFMFP1
          GOTO      CBAL9999
.
.---- update stat data ----
.
CBAL1100  
          MOVE      ATOT01,FMSSA1
          MOVE      ATOT02,FMSSA2
          MOVE      ATOT03,FMSSA3
          MOVE      ATOT04,FMSSA4
          MOVE      ATOT05,FMSSA5
          MOVE      ATOT06,FMSSA6
          MOVE      ATOT07,FMSSA7
          MOVE      ATOT08,FMSSA8
          MOVE      ATOT09,FMSSA9
          MOVE      ATOT10,FMSSA10
          MOVE      ATOT11,FMSSA11
          MOVE      ATOT12,FMSSA12
          MOVE      ATOT13,FMSSA13
          MOVE      CTOA01,FMSSC1
          MOVE      CTOA02,FMSSC2
          MOVE      CTOA03,FMSSC3
          MOVE      CTOA04,FMSSC4
          MOVE      CTOA05,FMSSC5
          MOVE      CTOA06,FMSSC6
          MOVE      CTOA07,FMSSC7
          MOVE      CTOA08,FMSSC8
          MOVE      CTOA09,FMSSC9
          MOVE      CTOA10,FMSSC10
          MOVE      CTOA11,FMSSC11
          MOVE      CTOA12,FMSSC12
          MOVE      CTOA13,FMSSC13
.
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          UNPACK    KEY14,FMSSLEDG,FMSSACCT
          CALL      DEFMSS1
          CALL      WRFMSS1
.
CBAL9999  RETURN
.**********************************************************************
.  CSMA - clear SMA file                               Called By CBAL
.**********************************************************************
CSMA0000  
          MOVE      ZERO,FMSSA1
          MOVE      ZERO,FMSSA2
          MOVE      ZERO,FMSSA3
          MOVE      ZERO,FMSSA4
          MOVE      ZERO,FMSSA5
          MOVE      ZERO,FMSSA6
          MOVE      ZERO,FMSSA7
          MOVE      ZERO,FMSSA8
          MOVE      ZERO,FMSSA9
          MOVE      ZERO,FMSSA10
          MOVE      ZERO,FMSSA11
          MOVE      ZERO,FMSSA12
          MOVE      ZERO,FMSSA13
.
          MOVE      ZERO,FMSSC1
          MOVE      ZERO,FMSSC2
          MOVE      ZERO,FMSSC3
          MOVE      ZERO,FMSSC4
          MOVE      ZERO,FMSSC5
          MOVE      ZERO,FMSSC6
          MOVE      ZERO,FMSSC7
          MOVE      ZERO,FMSSC8
          MOVE      ZERO,FMSSC9
          MOVE      ZERO,FMSSC10
          MOVE      ZERO,FMSSC11
          MOVE      ZERO,FMSSC12
          MOVE      ZERO,FMSSC13
.
CSMA9999  RETURN
.**********************************************************************
.  CFPS - clear fps file                               Called By CBAL
.**********************************************************************
CFPS0000  MOVE      ZERO,FMFPCBF
          MOVE      ZERO,FMFPC01
          MOVE      ZERO,FMFPC02
          MOVE      ZERO,FMFPC03
          MOVE      ZERO,FMFPC04
          MOVE      ZERO,FMFPC05
          MOVE      ZERO,FMFPC06
          MOVE      ZERO,FMFPC07
          MOVE      ZERO,FMFPC08
          MOVE      ZERO,FMFPC09
          MOVE      ZERO,FMFPC10
          MOVE      ZERO,FMFPC11
          MOVE      ZERO,FMFPC12
          MOVE      ZERO,FMFPC13
.
          MOVE      ZERO,FMFPABF
          MOVE      ZERO,FMFPA01
          MOVE      ZERO,FMFPA02
          MOVE      ZERO,FMFPA03
          MOVE      ZERO,FMFPA04
          MOVE      ZERO,FMFPA05
          MOVE      ZERO,FMFPA06
          MOVE      ZERO,FMFPA07
          MOVE      ZERO,FMFPA08
          MOVE      ZERO,FMFPA09
          MOVE      ZERO,FMFPA10
          MOVE      ZERO,FMFPA11
          MOVE      ZERO,FMFPA12
          MOVE      ZERO,FMFPA13
.
          MOVE      ZERO,FMFPCOM
          MOVE      ZERO,FMFPCOM2
.
          MOVE      ZERO,FMFPCBFD
          MOVE      ZERO,FMFPC01D
          MOVE      ZERO,FMFPC02D
          MOVE      ZERO,FMFPC03D
          MOVE      ZERO,FMFPC04D
          MOVE      ZERO,FMFPC05D
          MOVE      ZERO,FMFPC06D
          MOVE      ZERO,FMFPC07D
          MOVE      ZERO,FMFPC08D
          MOVE      ZERO,FMFPC09D
          MOVE      ZERO,FMFPC10D
          MOVE      ZERO,FMFPC11D
          MOVE      ZERO,FMFPC12D
          MOVE      ZERO,FMFPC13D
.
          MOVE      ZERO,FMFPABFD
          MOVE      ZERO,FMFPA01D
          MOVE      ZERO,FMFPA02D
          MOVE      ZERO,FMFPA03D
          MOVE      ZERO,FMFPA04D
          MOVE      ZERO,FMFPA05D
          MOVE      ZERO,FMFPA06D
          MOVE      ZERO,FMFPA07D
          MOVE      ZERO,FMFPA08D
          MOVE      ZERO,FMFPA09D
          MOVE      ZERO,FMFPA10D
          MOVE      ZERO,FMFPA11D
          MOVE      ZERO,FMFPA12D
          MOVE      ZERO,FMFPA13D
.
          MOVE      ZERO,FMFPCOMD
.
          MOVE      ZERO,FMFPCBFT
          MOVE      ZERO,FMFPC01T
          MOVE      ZERO,FMFPC02T
          MOVE      ZERO,FMFPC03T
          MOVE      ZERO,FMFPC04T
          MOVE      ZERO,FMFPC05T
          MOVE      ZERO,FMFPC06T
          MOVE      ZERO,FMFPC07T
          MOVE      ZERO,FMFPC08T
          MOVE      ZERO,FMFPC09T
          MOVE      ZERO,FMFPC10T
          MOVE      ZERO,FMFPC11T
          MOVE      ZERO,FMFPC12T
          MOVE      ZERO,FMFPC13T
.
          MOVE      ZERO,FMFPABFT
          MOVE      ZERO,FMFPA01T
          MOVE      ZERO,FMFPA02T
          MOVE      ZERO,FMFPA03T
          MOVE      ZERO,FMFPA04T
          MOVE      ZERO,FMFPA05T
          MOVE      ZERO,FMFPA06T
          MOVE      ZERO,FMFPA07T
          MOVE      ZERO,FMFPA08T
          MOVE      ZERO,FMFPA09T
          MOVE      ZERO,FMFPA10T
          MOVE      ZERO,FMFPA11T
          MOVE      ZERO,FMFPA12T
          MOVE      ZERO,FMFPA13T
.
          MOVE      ZERO,FMFPCOMT
.
CFPS9999  RETURN
.**********************************************************************
.  MQSD - select, post, exit, run report              Called By SELD
.        Returns  - CCITEM   (0=Check Batch, -1=exit, other=select)
.**********************************************************************
MQSD0000  MOVE      SP70,CCITEMD
          KEYIN     *P1:24,*EF,"Select Item, (",*V2LON:
                    "C",*HOFF,")heck Batch, e(",*V2LON:
                    "X",*HOFF,")it ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQSD0000 IF EOS    * nothing entered ?
          REP       UPPLOW,CCITEMD
.
          MOVE      " 0",CCITEM
          MATCH     "  C",CCITEMD      * Check Batch ?
          GOTO      MQSD9999 IF EQUAL
.
          MOVE      "-1",CCITEM
          MATCH     "  X",CCITEMD      * exit ?
          GOTO      MQSD9999 IF EQUAL
.
          MOVE      ZERO,CCITEM
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM         * select item ?
          GOTO      MQSD9999 IF NOT LESS
.
          BEEP
          GOTO      MQSD0000
.
MQSD9999  RETURN
.**********************************************************************
.  CBAT - check batch format                           Called By SELD
.**********************************************************************
CBAT0000  PACK      FILENAME,BCH,BATCH,SP70
          REP       " 0",FILENAME
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          TRAP      OVERCOND IF FORMAT
          TRAP      OVERCOND IF RANGE
          OPEN      BATFILE,FILENAME
          BRANCH    OVRCD,CBAT9100
.
          MOVE      ZERO,HNREC
          CALL      RDBAT0
          BRANCH    OVRCD,CBAT9200
.
          MOVE      ONE,HNREC
          CALL      RDBAT1
          BRANCH    OVRCD,CBAT9200
.
CBAT1000  ADD       ONE,HNREC
          COMPARE   BC0NXTSC,HNREC
          GOTO      CBAT2000 IF NOT LESS
          CALL      RDBATO
          BRANCH    OVRCD,CBAT9200
          GOTO      CBAT1000
.
CBAT2000  CALL      RDBATO
          BRANCH    OVRCD,CBAT3000          * extra sectors ?
          ADD       ONE,HNREC
          GOTO      CBAT2000
.
CBAT3000  SUB       ONE,HNREC
          COMPARE   BC0NXTSC,HNREC
          GOTO      CBAT9500 IF NOT EQUAL   * nect sector ok ?
          GOTO      CBAT9900
.
CBAT9100  DISPLAY   *P1:24,*B,*EF,"Batch File ",*V2LON,FILENAME,*HOFF:
                    " Not Found - ";
          CALL      HITENTER
          GOTO      CBAT9999
.
CBAT9200  DISPLAY   *P1:24,*B,*EF,"Batch ",*V2LON,BATCH,*HOFF:
                    " Error in Sector ",*V2LON,HNREC,*HOFF," - ";
          CALL      HITENTER
          GOTO      CBAT9999
.
CBAT9500  DISPLAY   *P1:24,*B,*EF,"Batch ",*V2LON,BATCH,*HOFF:
                    " BC0NXTSC=",*V2LON,BC0NXTSC,*HOFF:
                    " Should Be ",*V2LON,HNREC,*HOFF:
                    " - ";
          CALL      HITENTER
          GOTO      CBAT9999
.
CBAT9900  DISPLAY   *P1:24,*EF,"Batch ",*V2LON,BATCH,*HOFF:
                    " Ok - ";
          CALL      HITENTER
          GOTO      CBAT9999
.
CBAT9999  TRAPCLR   IO
          TRAPCLR   FORMAT
          TRAPCLR   RANGE
          RETURN
.******************************************************************************
.  SCRH - Display Screen H                       Called by SELH, redisps
.******************************************************************************
SCRH0000  MOVE      "6",SCRNO
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Cheque Account       : ":
                          *V2LON,FMCHCHQ:
                    *P1:5," 2",*HOFF,". Cheque or Receipt    : ":
                          *V2LON,CCHEQREC,*HOFF,SP2,REFDESC,*V2LON:
                    *P1:6," 3",*HOFF,". From Cheque/Receipt  : ":
                          *V2LON,KREF1:
                    *P1:7," 4",*HOFF,". To   Cheque/Receipt  : ":
                          *V2LON,KREF2;
.
SCRH9999  RETURN
.******************************************************************************
.  SELH - Perform Screen H                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELH0000  UNPACK    SP70,FMCHCHQ,KREF1,KREF2,REFDESC
          MOVE      ZERO,CCHEQREC
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONH       * reset item desired
          CALL      SCRH0000           * display screen H
.
SELH0100  ADD       ONE,OPTIONH        * get next item
          BRANCH    ACCEPT,SELH0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONH
.
SELH0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONH,CVERT
          MOVE      OPTIONH,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELH9500,SELH9000:                       * quit, continue
                       SELH1100,SELH1200,SELH1300,SELH1400      * execute option
          BRANCH    ACCEPT,SELH0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELH0100           * get another option
.
SELH0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELH0100
.
.---- option 1 ----
.
SELH1100  CALL      KCHQFM00                * get data
          BRANCH    EXIT,SELH9500,SELH9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMCHCHQ;
          GOTO      SELH0100
.
.---- option 2 ----
.
SELH1200  KEYIN     *PCCOL:CVERT,*DV,CCHEQREC,*EL:
                    *PCCOL:CVERT,*V2LON,*RV,CCHEQREC;
          COMPARE   TWO,CCHEQREC
          GOTO      SELH1200 IF NOT LESS
.
          MOVE      REFDESC0,REFDESC
          LOAD      REFDESC,CCHEQREC,REFDESC1
          DISPLAY   *PCCOL:CVERT,*V2LON,CCHEQREC,*HOFF,SP2,REFDESC;
          GOTO      SELH0100
.
.---- option 3 ----
.
SELH1300  CALL      KBNKFM00                * get data
          BRANCH    EXIT,SELH1310,SELH9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
SELH1310  LOAD      CRECNO,EXIT,SP70
          PACK      KREF1,CRECNO,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,CRECNO;
          GOTO      SELH0100
.
.---- option 4 ----
.
SELH1400  CALL      KBNKFM00                * get data
          BRANCH    EXIT,SELH1410,SELH9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
SELH1410  LOAD      CRECNO,EXIT,T70
          PACK      KREF2,CRECNO,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,CRECNO;
          GOTO      SELH0100
.
.
SELH9000  MOVE      ZERO,EXIT          * continue
          MATCH     KREF1,KREF2
          GOTO      SELH9100 IF NOT LESS
.
          DISPLAY   *P1:24,*B,*EF,"To Cheque Cannot Be Before From Cheque - ";
          CALL      HITENTER
          GOTO      SELA0100
.
SELH9100  CALL      UPDH0000           * look for stuffed cheques
          CALL      COMP0000           * update completed
          GOTO      SELH9999
.
SELH9500  MOVE      ONE,EXIT           * quit
.
SELH9999  RETURN
.**********************************************************************
.  UPDH - Check cheques                                Called By SELH
.**********************************************************************
UPDH0000  PACK      KEY36,FMCHCHQ,CCHEQREC,KREF1,SP70
          CALL      RSFMBN2
.
          PACK      KEY36,FMCHCHQ,CCHEQREC,KREF2,SP70
          UNPACK    SP70,LASTBAT,LASTCRE,LASTREF,LASTPRE
          MOVE      ZERO,GRPTOT
          MOVE      ZERO,CHQTOT
          MOVE      ZERO,ERRFLAG
          CALL      CLRS0000
.
UPDH1000  CALL      RKFMBN2
          BRANCH    OVRCD,UPDH9000            * no more cheques on file ?
          PACK      KEY31,FMBNBNK,FMBNTYP,FMBNREF,SP70
          MATCH     KEY31,KEY36
          GOTO      UPDH9000 IF LESS          * not in range
          DISPLAY   *P1:24,"Processing : ",*V2LON,FMBNREF,*EF;
.
          MATCH     LASTREF,FMBNREF
          GOTO      UPDH2000 IF EQUAL
          COMPARE   ONE,ERRFLAG
          CALL      DISG0000 IF EQUAL
.
UPDH1500  MOVE      FMBNREF,LASTREF
          MOVE      FMBNBCH,LASTBAT
          MOVE      FMBNPRE,LASTPRE
          MOVE      FMBNCRE,LASTCRE
          MOVE      ZERO,GRPTOT
          MOVE      ZERO,CHQTOT
          MOVE      ZERO,ERRFLAG
.
UPDH2000  MATCH     FMBNBCH,LASTBAT
          GOTO      UPDH3000 IF NOT EQUAL
          MATCH     FMBNPRE,LASTPRE
          GOTO      UPDH3000 IF NOT EQUAL
          MATCH     FMBNCRE,LASTCRE
          GOTO      UPDH3000 IF NOT EQUAL
.
          GOTO      UPDH4000
.
UPDH3000  CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"   Sub Total "," = ",GRPTOT:
                    " Cred ",LASTCRE," Batch ",LASTBAT:
                    " Status ",LASTPRE,*EL;
          WRITE     ERRFILE,SEQ;"   Sub Total "," = ",GRPTOT:
                    " Cred ",LASTCRE," Batch ",LASTBAT:
                    " Status ",LASTPRE
          ADD       ONE,LNO
          MOVE      ONE,ERRFLAG
          MOVE      ZERO,GRPTOT
          MOVE      FMBNBCH,LASTBAT
          MOVE      FMBNPRE,LASTPRE
          MOVE      FMBNCRE,LASTCRE
.
UPDH4000  ADD       FMBNAMT,GRPTOT
          ADD       FMBNAMT,CHQTOT
          GOTO      UPDH1000
.
UPDH9000  COMPARE   ONE,ERRFLAG
          CALL      DISG0000 IF EQUAL
.
UPDH9999  RETURN
.**********************************************************************
.  DISG - Display cheque                               Called By UPDH
.**********************************************************************
DISG0000  CALL      INCS0000                     * increment line
          DISPLAY   *P1:LNO,"   Sub Total "," = ",GRPTOT:
                    " Cred ",LASTCRE," Batch ",LASTBAT:
                    " Status ",LASTPRE,*EL;
          WRITE     ERRFILE,SEQ;"   Sub Total "," = ",GRPTOT:
                    " Cred ",LASTCRE," Batch ",LASTBAT:
                    " Status ",LASTPRE
          ADD       ONE,LNO
          DISPLAY   *P1:LNO,"Total For ",REFDESC,*V2LON,SP1,LASTREF:
                    *HOFF," = ",CHQTOT,*EL;
          WRITE     ERRFILE,SEQ;"Total For ",REFDESC,SP1,LASTREF:
                    " = ",CHQTOT
          ADD       ONE,LNO
.
DISG9999  RETURN
.******************************************************************************
.  SCRI - Display Screen I                       Called by SELI, redisps
.******************************************************************************
SCRI0000  MOVE      "7",SCRNO
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Batch to Change      : ":
                          *V2LON,FMBCBAT:
                    *P1:5," 2",*HOFF,". Const to + to Chq No : ":
                          *V2LON,CHEQSTEP;
.
SCRI9999  RETURN
.******************************************************************************
.  SELI - Perform Screen I                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELI0000  BRANCH    ERRFLAG2,SELI9500
          UNPACK    SP70,FMBCBAT
          MOVE      ZERO,CHEQSTEP
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONI       * reset item desired
          CALL      SCRI0000           * display screen I
.
SELI0100  ADD       ONE,OPTIONI        * get next item
          BRANCH    ACCEPT,SELI0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONI
.
SELI0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONI,CVERT
          MOVE      OPTIONI,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELI9500,SELI9000:                       * quit, continue
                       SELI1100,SELI1200                        * execute option
          BRANCH    ACCEPT,SELI0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELI0100           * get another option
.
SELI0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELI0100
.
.---- option 1 ----
.
SELI1100  CALL      KBCFFM00                * get data
          BRANCH    EXIT,SELI1100,SELI9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMBCBAT;
          MATCH     "PY",FMBCTRT
          GOTO      SELI0100 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"Must Be A Payments Batch - ";
          CALL      HITENTER
          GOTO      SELI1100
.
.---- option 2 ----
.
SELI1200  KEYIN     *PCCOL:CVERT,*DV,CHEQSTEP:
                    *PCCOL:CVERT,*V2LON,*RV,CHEQSTEP:
                    *PCCOL:CVERT,*DV,CHEQSTEP;
          COMPARE   ZERO,CHEQSTEP
          GOTO      SELI0100 IF NOT EQUAL
          BEEP
          GOTO      SELI1200
.
.
SELI9000  MOVE      ZERO,EXIT          * continue
          CALL      UPDI0000
          GOTO      SELI9999
.
SELI9500  MOVE      ONE,EXIT           * quit
.
SELI9999  RETURN
.**********************************************************************
.  UPDI - Update for screen I                          Called By SELI
.**********************************************************************
UPDI0000  UNPACK    SP70,FMSTFILE,FMSRFILE
          DISPLAY   *P1:24,"Processing : ",*V2LON,FMBCBAT,*EF;
.
          PACK      KEY2,FMBCLED,SP70
          CALL      RDFMLA1
.
.---- open files ----
.
          MOVE      FMBCPDAT,WORKDATE
          CALL      CFYR0000
          MOVE      CURYEAR,ACCYEAR
          PACK      FILENAME,FMST,ACCYEAR,SP70
.
          MATCH     FILENAME,FMSTFILE       * file already open ?
          GOTO      UPDI1100 IF EQUAL
.
          MOVE      FILENAME,FMSTFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FMSTFILE
          TRAPCLR   IO
          LOAD      FMSTFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDI9000
.
UPDI1100  MOVE      FMBCCDAT,WORKDATE
          CALL      CFYR0000
          MOVE      CURYEAR,CASYEAR
          PACK      FILENAME,FMSR,CASYEAR,SP70
.
          MATCH     FILENAME,FMSRFILE       * file already open ?
          GOTO      UPDI1900 IF EQUAL
.
          MOVE      FILENAME,FMSRFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSCTRA1,FMSRFILE
          TRAPCLR   IO
          LOAD      FMSRFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDI9000
.
.---- update transactions ----
.
UPDI1900  PACK      KEY10,FMBCBAT,SP70
.
UPDI2000  CALL      RSFMTR1
          CALL      RKFMTR1
          BRANCH    OVRCD,UPDI2900
          MATCH     FMBCBAT,FMTRBAT
          GOTO      UPDI2900 IF NOT EQUAL
          PACK      KEY10,FMTRBAT,FMTRUNIQ,SP70
.
          MOVE      ZERO,XORM8
          MOVE      FMTRORD,XORM8
          COMPARE   ZERO,XORM8
          GOTO      UPDI2000 IF EQUAL
          ADD       CHEQSTEP,XORM8
          MOVE      XORM8,FMTRORD
          CALL      UPFMTR1
          GOTO      UPDI2000
.
.---- update cash transactions ----
.
UPDI2900  PACK      KEY10,FMBCBAT,SP70
.
UPDI3000  CALL      RSFMCT1
          CALL      RKFMCT1
          BRANCH    OVRCD,UPDI3900
          MATCH     FMBCBAT,FMCTBAT
          GOTO      UPDI3900 IF NOT EQUAL
          PACK      KEY10,FMCTBAT,FMCTUNIQ,SP70
.
          MOVE      ZERO,XORM8
          MOVE      FMCTORD,XORM8
          COMPARE   ZERO,XORM8
          GOTO      UPDI3000 IF EQUAL
          ADD       CHEQSTEP,XORM8
          MOVE      XORM8,FMCTORD
          CALL      UPFMCT1
          GOTO      UPDI3000
.
.---- update bank rec transactions ----
.
UPDI3900  PACK      KEY30,FMBCBAT,SP70
.
UPDI4000  CALL      RSFMBN4
          CALL      RKFMBN4
          BRANCH    OVRCD,UPDI4900
          MATCH     FMBCBAT,FMBNBCH
          GOTO      UPDI4900 IF NOT EQUAL
          PACK      KEY30,FMBNBCH,FMBNLNO,FMBNBNK,FMBNUNQ,SP70
.
          MOVE      ZERO,XORM15
          MOVE      FMBNREF,XORM15
          COMPARE   ZERO,XORM15
          GOTO      UPDI4000 IF EQUAL
          ADD       CHEQSTEP,XORM15
          MOVE      XORM15,FMBNREF
          CALL      UPFMBN4
          GOTO      UPDI4000
.
.---- update creditor transactions ----
.
UPDI4900  
          IF        CHEQSTEP>0
            PACK      KEY40,FMBCBAT,T70
          ELSE
            PACK      KEY40,FMBCBAT,SP70
          ENDIF
.
UPDI5000  CALL      RSAPIM1
          IF        CHEQSTEP>0
            CALL      RPAPIM1
          ELSE
            CALL      RKAPIM1
          ENDIF
          BRANCH    OVRCD,UPDI5900
          MATCH     FMBCBAT,APIMBCH
          GOTO      UPDI5900 IF NOT EQUAL
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
.
          MOVE      ZERO,XORM8
          UNPACK    APIMDOC,KEY7,KEY8
          MOVE      KEY8,XORM8
          COMPARE   ZERO,XORM8
          GOTO      UPDI5000 IF EQUAL
          ADD       CHEQSTEP,XORM8
          MOVE      XORM8,KEY8
          PACK      APIMDOC,SP7,KEY8
          CALL      UPAPIM1
.
          PACK      KEY41,KEY40,SP70
          PACK      KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF
          CALL      RDAPCL1
          IF        OVRCD=0
            MOVE      APIMDOC,APCLDOC
            CALL      UPAPCL1
          ENDIF
          PACK      KEY40,KEY41,SP70
.
          PACK      KEY51,KEY40,SP70
.
UPDI5200  CALL      RSAPIN1
          CALL      RKAPIN1
          BRANCH    OVRCD,UPDI5500
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
          MATCH     KEY51,KEY40
          GOTO      UPDI5500 IF NOT EQUAL
.
          MOVE      APIMDOC,APINDOC
          CALL      UPAPIN1
          GOTO      UPDI5200
.
UPDI5500
          GOTO      UPDI5000
.
UPDI5900  
          GOTO      UPDI9999
.
.
UPDI9000  DISPLAY   *P1:24,*B,*EF,"Cannot Open Transaction File - ";
          CALL      HITENTER
.
UPDI9999  RETURN
.******************************************************************************
.  SCRJ - Display Screen J                       Called by SELJ, redisps
.******************************************************************************
SCRJ0000  MOVE      "8",SCRNO
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Batch to Delete      : ":
                          *V2LON,FMBCBAT:
                    *P1:5," 2",*HOFF,". Type                 : ":
                          *V2LON,DELBCH;
.
SCRJ9999  RETURN
.******************************************************************************
.  SELJ - Perform Screen J                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELJ0000  BRANCH    ERRFLAG2,SELJ9500
          UNPACK    SP70,FMBCBAT
          MOVE      ZERO,DELBCH
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONJ       * reset item desired
          CALL      SCRJ0000           * display screen J
.
SELJ0100  ADD       ONE,OPTIONJ        * get next item
          BRANCH    ACCEPT,SELJ0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONJ
.
SELJ0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONJ,CVERT
          MOVE      OPTIONJ,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELJ9500,SELJ9000:                       * quit, continue
                       SELJ1100,SELJ1200                        * execute option
          BRANCH    ACCEPT,SELJ0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELJ0100           * get another option
.
SELJ0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELJ0100
.
.---- option 1 ----
.
SELJ1100  CALL      XBCFFM00                * get data
          BRANCH    EXIT,SELJ1100,SELJ9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMBCBAT;
          GOTO      SELJ0100
.
.---- option 2 ----
.
SELJ1200  
          KEYIN     *P1:24,*V2LON:
                    "0",*HOFF,"=Delete All, ",*V2LON:
                    "1",*HOFF,"=Delete Cash Details Only":
                    *PCCOL:CVERT,*V2LON,DELBCH:
                    *P1:24,*EL;
          GOTO      SELJ0100
.
.
SELJ9000  MOVE      ZERO,EXIT          * continue
          CALL      UPDJ0000
          GOTO      SELJ9999
.
SELJ9500  MOVE      ONE,EXIT           * quit
.
SELJ9999  RETURN
.**********************************************************************
.  UPDJ - Update for screen J                          Called By SELJ
.**********************************************************************
UPDJ0000  UNPACK    SP70,FMSTFILE,FMSRFILE
          DISPLAY   *P1:24,"Processing : ",*V2LON,FMBCBAT,*EF;
.
          PACK      KEY5,FMBCBAT,SP70
          CALL      RDFMBC1
          BRANCH    OVRCD,UPDJ0100
.
          COMPARE   ONE,DELBCH              * must be CJ to allow cash delete
          GOTO      UPDJ0010 IF NOT EQUAL
          MATCH     "CJ",FMBCTRT
          GOTO      UPDJ0010 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF,FMBCBAT," is not type CJ - ";
          CALL      HITENTER
          GOTO      UPDJ9999
.
UPDJ0010  
          PACK      KEY2,FMBCLED,SP70
          CALL      RDFMLA1
.
          MOVE      FMBCPDAT,WORKDATE
          CALL      CFYR0000
          MOVE      CURYEAR,ACCYEAR
.
          MOVE      FMBCCDAT,WORKDATE
          CALL      CFYR0000
          MOVE      CURYEAR,CASYEAR
          GOTO      UPDJ0200
.
UPDJ0100
          PACK      KEY2,SP70
          CALL      RSFMLA1
          CALL      RKFMLA1
          MOVE      FMLACYRR,ACCYEAR
          MOVE      FMLACYRR,CASYEAR
.
UPDJ0200
.
.---- update transactions ----
.
          BRANCH    DELBCH,UPDJ2800         * 1=del cash only
.
          PACK      FILENAME,FMST,ACCYEAR,SP70
.
          MATCH     FILENAME,FMSTFILE       * file already open ?
          GOTO      UPDJ1900 IF EQUAL
.
          MOVE      FILENAME,FMSTFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FMSTFILE
          TRAPCLR   IO
          LOAD      FMSTFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDJ2100
.
UPDJ1900  PACK      KEY10,FMBCBAT,SP70
.
UPDJ2000  CALL      RSFMTR1
          CALL      RKFMTR1
          BRANCH    OVRCD,UPDJ2100
          MATCH     FMBCBAT,FMTRBAT
          GOTO      UPDJ2100 IF NOT EQUAL
          PACK      KEY10,FMTRBAT,FMTRUNIQ,SP70
.
          CALL      DEFMTR1
          GOTO      UPDJ2000
.
.---- update BAS transactions (BAS File) ----
.
.
UPDJ2100  MATCH     IBCNBSFY,ACCYEAR
          GOTO      UPDJ2800 IF LESS
.
          PACK      FILENAME,FMSG,ACCYEAR,SP70
.
          MATCH     FILENAME,FMSGFILE       * file already open ?
          GOTO      UPDJ2200 IF EQUAL
.
          MOVE      FILENAME,FMSGFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBASA1,FMSGFILE
          TRAPCLR   IO
          LOAD      FMSGFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDJ2800
.
UPDJ2200  PACK      KEY10,FMBCBAT,SP70
.
UPDJ2300  CALL      RSFMBS1
          CALL      RKFMBS1
          BRANCH    OVRCD,UPDJ2800
          MATCH     FMBCBAT,FMBSBAT
          GOTO      UPDJ2800 IF NOT EQUAL
          PACK      KEY10,FMBSBAT,FMBSUNIQ,SP70
.
          CALL      DEFMBS1
          GOTO      UPDJ2300
.
.---- update cash transactions (Cash File) ----
.
UPDJ2800  PACK      FILENAME,FMSR,CASYEAR,SP70
.
          MATCH     FILENAME,FMSRFILE       * file already open ?
          GOTO      UPDJ2900 IF EQUAL
.
          MOVE      FILENAME,FMSRFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSCTRA1,FMSRFILE
          TRAPCLR   IO
          LOAD      FMSRFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDJ3800
.
UPDJ2900  
          PACK      KEY10,FMBCBAT,SP70
.
UPDJ3000  CALL      RSFMCT1
          CALL      RKFMCT1
          BRANCH    OVRCD,UPDJ3800
          MATCH     FMBCBAT,FMCTBAT
          GOTO      UPDJ3800 IF NOT EQUAL
          PACK      KEY10,FMCTBAT,FMCTUNIQ,SP70
.
          CALL      DEFMCT1
          GOTO      UPDJ3000
.
.---- update cash transactions (Accrual File) ----
.
UPDJ3800  
          BRANCH    DELBCH,UPDJ4800         * 1=del cash only
.
          PACK      FILENAME,FMST,CASYEAR,SP70
.
          MATCH     FILENAME,FMSTFILE       * file already open ?
          GOTO      UPDJ3900 IF EQUAL
.
          MOVE      FILENAME,FMSTFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FMSTFILE
          TRAPCLR   IO
          LOAD      FMSTFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDJ4800
.
UPDJ3900  
          PACK      KEY10,FMBCBAT,SP70
.
UPDJ4000  CALL      RSFMTR1
          CALL      RKFMTR1
          BRANCH    OVRCD,UPDJ4800
          MATCH     FMBCBAT,FMTRBAT
          GOTO      UPDJ4800 IF NOT EQUAL
          PACK      KEY10,FMTRBAT,FMTRUNIQ,SP70
.
          CALL      DEFMTR1
          GOTO      UPDJ4000
.
.---- update bank rec transactions ----
.
UPDJ4800  PACK      KEY30,FMBCBAT,SP70
.
UPDJ5000  CALL      RSFMBN4
          CALL      RKFMBN4
          BRANCH    OVRCD,UPDJ5900
          MATCH     FMBCBAT,FMBNBCH
          GOTO      UPDJ5900 IF NOT EQUAL
          PACK      KEY30,FMBNBCH,FMBNLNO,FMBNBNK,FMBNUNQ,SP70
.
          CALL      DEFMBN4
          GOTO      UPDJ5000
.
.---- update creditor transactions ----
.
UPDJ5900  
          BRANCH    DELBCH,UPDJ9000         * 1=del cash only
.
          PACK      KEY40,FMBCBAT,SP70
.
UPDJ6000  CALL      RSAPIM1
          CALL      RKAPIM1
          BRANCH    OVRCD,UPDJ6900
          MATCH     FMBCBAT,APIMBCH
          GOTO      UPDJ6900 IF NOT EQUAL
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
.
          CALL      DEAPIM1
          GOTO      UPDJ6000
.
.---- update creditor transactions ----
.
UPDJ6900  PACK      KEY51,FMBCBAT,SP70
.
UPDJ7000  CALL      RSAPIN1
          CALL      RKAPIN1
          BRANCH    OVRCD,UPDJ7900
          MATCH     FMBCBAT,APINBCH
          GOTO      UPDJ7900 IF NOT EQUAL
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
.
          CALL      DEAPIN1
          GOTO      UPDJ7000
.
.---- update creditor transactions ----
.
UPDJ7900  PACK      KEY40,SP70
.
UPDJ8000  CALL      RSAPCL1
          CALL      RKAPCL1
          BRANCH    OVRCD,UPDJ8900
          PACK      KEY40,APCLDOC,APCLBCH,APCLCRD,APCLREF,SP70
          MATCH     FMBCBAT,APCLBCH
          GOTO      UPDJ8000 IF NOT EQUAL
.
          CALL      DEAPCL1
          GOTO      UPDJ8000
.
.---- delete batch headers ----
.
UPDJ8900  
          PACK      KEY5,FMBCBAT,SP70
          CALL      DEFMBC1
          CALL      DEAPBM1
.
          PACK      FILENAME,BCH,FMBCBAT,SP70
          REP       " 0",FILENAME
          PREP      BATFILE,FILENAME
          CLOSE     BATFILE
          GOTO      UPDJ9999
.
.---- modify batch headers ----
.
UPDJ9000  
          PACK      KEY5,FMBCBAT,SP70
          MOVE      "JA",FMBCTRT
          CALL      UPFMBC1
          GOTO      UPDJ9999
.
UPDJ9999  RETURN
.******************************************************************************
.  SCRK - Display Screen K                       Called by SELK, redisps
.******************************************************************************
SCRK0000  MOVE      "9",SCRNO
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". From Creditor        : ":
                          *V2LON,CREDFROM:
                    *P1:5," 2",*HOFF,". To   Creditor        : ":
                          *V2LON,CREDTO;
.
SCRK9999  RETURN
.******************************************************************************
.  SELK - Perform Screen K                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELK0000  
          UNPACK    SP70,CREDFROM,CREDTO
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONK       * reset item desired
          CALL      SCRK0000           * display screen K
.
SELK0100  ADD       ONE,OPTIONK        * get next item
          BRANCH    ACCEPT,SELK0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONK
.
SELK0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONK,CVERT
          MOVE      OPTIONK,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELK9500,SELK9000:                       * quit, continue
                       SELK1100,SELK1200                        * execute option
          BRANCH    ACCEPT,SELK0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELK0100           * get another option
.
SELK0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELK0100
.
.---- option 1 ----
.
SELK1100  CALL      KAPMAA00                * get data
          BRANCH    EXIT,SELK1190,SELK9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
SELK1190  MOVE      APMACRD,CREDFROM
          LOAD      CREDFROM,EXIT,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,CREDFROM;
          GOTO      SELK0100
.
.---- option 2 ----
.
SELK1200  CALL      KAPMAA00                * get data
          BRANCH    EXIT,SELK1290,SELK9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
SELK1290  MOVE      APMACRD,CREDTO
          LOAD      CREDTO,EXIT,T70
          DISPLAY   *PCCOL:CVERT,*V2LON,CREDTO;
          GOTO      SELK0100
.
.
SELK9000  MOVE      ZERO,EXIT          * continue
          CALL      UPDK0000
          GOTO      SELK9999
.
SELK9500  MOVE      ONE,EXIT           * quit
.
SELK9999  RETURN
.**********************************************************************
.  UPDK - Update for screen K                          Called By SELK
.**********************************************************************
UPDK0000  
          PACK      SKEY40,CREDFROM,SP70
.
          MOVE      SP70,CURRREF
          MOVE      SP70,CURRCRD
.
UPDK1000  MOVE      SKEY40,KEY40
          CALL      RSAPIM3
          CALL      RKAPIM3
          BRANCH    OVRCD,UPDK8000
.
          PACK      SKEY40,APIMCRD,APIMREF,APIMDOC,APIMBCH,SP70
          MATCH     APIMCRD,CREDTO
          GOTO      UPDK8000 IF LESS
          MOVE      ZERO,F1
          MOVE      APIMTYP,F1
          BRANCH    F1,UPDK1000,UPDK1000
.
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing : ",*V2LON,SKEY40,*EF;
          ENDIF
.
          MOVE      APIMREF,CURRREF         * set up current cred/invoice
          MOVE      APIMCRD,CURRCRD
.
          CALL      EXTRA000                * extract data
.
          GOTO      UPDK1000
.
UPDK8000  
.
UPDK9999  RETURN
.----------------------------------------------------------------------
. Extract data
.         Requires - APSMASAF read for creditor
.                    APSIMFAF read for batch/cred/inv/doc
.                    CHEQACCT cheque account
.----------------------------------------------------------------------
EXTRA000
          MOVE      ZERO,TOTAL               * clear running total
.
          PACK      KEY40,CURRCRD,CURRREF,SP70
          PACK      KEY20,CURRCRD,CURRREF,SP70
          CALL      RSAPIM3
.
.---- APSIMSAF loop ----
.
EXTRA100
          CALL      RKAPIM3
          BRANCH    OVRCD,EXTRA200
          PACK      KEY40,APIMCRD,APIMREF,APIMDOC,APIMBCH,SP70
          MATCH     KEY20,KEY40
          GOTO      EXTRA200 IF NOT EQUAL
.
          MATCH     "0",APIMUPD        * check if data updated
          GOTO      EXTRA100 IF EQUAL
.
          MOVE      APIMTYP,F1    * 0=inv, 1=crd, 2=pay, 3=cc, 4=ri
          IF        1=F1
            MULT      SEQ,APIMTOT
            MULT      SEQ,APIMGST
          ENDIF
          IF        2=F1
            MULT      SEQ,APIMTOT
            MULT      SEQ,APIMGST
          ENDIF
          IF        3=F1
            GOTO      EXTRA100
          ENDIF
.
          ASSIGN    APIMTOT-APIMDIS+APIMGST+TOTAL,TOTAL
          GOTO      EXTRA100
.
EXTRA200  
          MOVE      SKEY40,KEY40            * update original record
          CALL      RDAPIM3
          BRANCH    OVRCD,EXTRA999
.
          IF        TOTAL=0
            CALL      EXTRB000
          ENDIF
.
EXTRA999  RETURN
.----------------------------------------------------------------------
. Extract data
.----------------------------------------------------------------------
EXTRB000
          MOVE      ZERO,TOTAL               * clear running total
.
          PACK      KEY40,CURRCRD,CURRREF,SP70
          PACK      KEY20,CURRCRD,CURRREF,SP70
          CALL      RSAPIM3
.
.---- APSIMSAF loop ----
.
EXTRB100
          CALL      RKAPIM3
          BRANCH    OVRCD,EXTRB900
          PACK      KEY40,APIMCRD,APIMREF,APIMDOC,APIMBCH,SP70
          MATCH     KEY20,KEY40
          GOTO      EXTRB900 IF NOT EQUAL
.
          MATCH     "0",APIMUPD        * check if data updated
          GOTO      EXTRB100 IF EQUAL
.
          MOVE      ZERO,APIMTOT       * recalc amounts
          MOVE      ZERO,APIMGST
          MOVE      ZERO,APIMPAY
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      KEY51,KEY40,SP70
          CALL      RSAPIN1
.
EXTRB300  
          CALL      RKAPIN1
          BRANCH    OVRCD,EXTRB4000
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
          MATCH     KEY40,KEY51
          GOTO      EXTRB400 IF NOT EQUAL
.
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing : ",*V2LON,KEY51,*EF;
          ENDIF
.
          ADD       APINAMT,APIMTOT
          ADD       APINGST,APIMGST
          ASSIGN    APINAMT+APINGST,APINPAY
          CALL      UPAPIN1
          GOTO      EXTRB300
.
EXTRB400  
          ASSIGN    APIMTOT+APIMGST-APIMDIS,APIMPAY
          MOVE      ZERO,APIMOUT
          CALL      UPAPIM3
          GOTO      EXTRB100
.
EXTRB900  
.
EXTRB999  RETURN
.******************************************************************************
.  SCRL - Display Screen L                       Called by SELL, redisps
.******************************************************************************
SCRL0000  MOVE      "10",SCRNO
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Payments Batch       : ":
                          *V2LON,FMBCBAT;
.
SCRL9999  RETURN
.******************************************************************************
.  SELL - Perform Screen L                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELL0000  
          UNPACK    SP70,FMBCBAT
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONL       * reset item desired
          CALL      SCRL0000           * display screen L
.
SELL0100  ADD       ONE,OPTIONL        * get next item
          BRANCH    ACCEPT,SELL0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONL
.
SELL0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONL,CVERT
          MOVE      OPTIONL,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELL9500,SELL9000:                       * quit, continue
                       SELL1100                                 * execute option
          BRANCH    ACCEPT,SELL0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELL0100           * get another option
.
SELL0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELL0100
.
.---- option 1 ----
.
SELL1100  MOVE      "PY",APBMTYP
          CALL      KAPBMY00                * get data
          BRANCH    EXIT,SELL1100,SELL9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,APBMBCH;
          GOTO      SELL0100
.
.
SELL9000  MOVE      ZERO,EXIT          * continue
          CALL      DELNZ000           * delete temp file
          CALL      MAKNZ000           * create temp file
          CALL      UPDL0000           * extract data
          CALL      PRAUD000           * print report
          CALL      DELNZ000           * delete temp file
          GOTO      SELL9999
.
SELL9500  MOVE      ONE,EXIT           * quit
.
SELL9999  RETURN
.
.**********************************************************************
. UPDL - Extract data                                 Called By SELL
.**********************************************************************
UPDL0000  PACK      KEY51,APBMBCH,SP70
          CALL      RSAPIN1
.
UPDL1000  
          CALL      RKAPIN1
          BRANCH    OVRCD,UPDL9999
          MATCH     APINBCH,APBMBCH
          GOTO      UPDL9999 IF NOT EQUAL
.
          MOVE      ZERO,F15
          MOVE      APINDOC,F15
          MOVE      F15,F8
          IF        !(F8=0)
            PACK      SKEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
            MOVE      ZERO,NZCAAMT
            ASSIGN    APINAMT+APINGST,TEMPAMT
.
            PACK      KEY40,APINCRD,APINREF,APINREF,SP70
            CALL      RSAPIM3
            CALL      RKAPIM3
            PACK      KEY35,APIMCRD,APIMREF,APIMDOC,SP70
            LOAD      KEY35,OVRCD,SP70
.
            MOVE      SP70,APINDES
            MATCH     KEY35,KEY40
            IF        @EQUAL
              PACK      KEY51,APIMBCH,APINCRD,APINREF,APINREF,APINORD,APINLIN
              CALL      RDAPIN1
            ENDIF
.
            PACK      KEY28,F8,APINCRD,APINREF,SP70
            UNPACK    KEY28,NZCACHQ,NZCACRD,NZCAINV
            CALL      RDNZCA1
            IF        OVRCD=1
              MOVE      APINLED,NZCALED
              MOVE      APINDES,NZCADES
              CALL      WRNZCA1
            ENDIF
.
            PACK      KEY13,F8,APINCRD,SP70           * update first record
            PACK      KEY28,F8,APINCRD,SP70
            CALL      RSNZCA1
            CALL      RKNZCA1
            BRANCH    OVRCD,UPDL3000
            PACK      KEY28,NZCACHQ,NZCACRD,NZCAINV,SP70
            MATCH     KEY28,KEY13
            GOTO      UPDL3000 IF NOT EQUAL
            ADD       TEMPAMT,NZCAAMT
            CALL      UPNZCA1
.
UPDL3000  
            MOVE      SKEY51,KEY51
            CALL      RDAPIN1
.
          ENDIF
          GOTO      UPDL1000
.
UPDL9999  RETURN
.**********************************************************************
. PRAUD - Print Cheque Audit Report                    Called By SPRNT
.**********************************************************************
PRAUD000
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,CPAGENO
          MOVE      "999",CLNO
          MOVE      SP70,LASTCHEQ
          MOVE      ZERO,ALLTOTAL
          PACK      KEY28,SP70
.
.---- print cheque audit report ----
.
          CALL      RSNZCA1
.
PRAUD100
          CALL      RKNZCA1
          BRANCH    OVRCD,PRAUD500
.
          COMPARE   "55",CLNO
          CALL      HEAA0000 IF NOT LESS
.
          MATCH     NZCACHQ,LASTCHEQ
          IF        !@EQUAL
            MOVE      SP70,APMACN1
            MOVE      SP70,APMACN2
            PACK      KEY5,NZCACRD,SP70
            CALL      RDAPMA1
            PRINT     *N,NZCACHQ,*10,NZCACRD,SP1,APMACN1,*40,NZCAAMT;
            MOVE      NZCACHQ,LASTCHEQ
            ADD       NZCAAMT,ALLTOTAL
            ADD       ONE,CLNO
          ENDIF
.
          PRINT     *60,NZCAINV,*80,NZCADES
          ADD       ONE,CLNO
          GOTO      PRAUD100
.
PRAUD500
          COMPARE   ZERO,CPAGENO
          CALL      ENDA0000 IF NOT EQUAL
.
.---- Print Payments Posting Summary ----
.
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,CPAGENO
          MOVE      "999",CLNO
          MOVE      SP70,LASTLEDG
          MOVE      ZERO,ALLTOTAL
          PACK      KEY30,SP70
          CALL      RSNZCA2
.
PRAUD600
          CALL      RKNZCA2
          BRANCH    OVRCD,PRAUD900
.
          COMPARE   "55",CLNO
          CALL      HEAB0000 IF NOT LESS
.
          MATCH     NZCALED,LASTLEDG
          IF        !@EQUAL
            MATCH     SP70,LASTLEDG
            IF        !@EQUAL
              MOVE      SP70,FMLADESC
              PACK      KEY2,LASTLEDG,SP70
              CALL      RDFMLA1
              PRINT     LASTLEDG,SP1,FMLADESC,*65,LEDTOTAL
              ADD       LEDTOTAL,ALLTOTAL
              ADD       ONE,CLNO
            ENDIF
            MOVE      ZERO,LEDTOTAL
            MOVE      NZCALED,LASTLEDG
            MOVE      SP70,LASTCHEQ
          ENDIF
.
          MATCH     NZCACHQ,LASTCHEQ
          IF        !@EQUAL
            ADD       NZCAAMT,LEDTOTAL
            MOVE      NZCACHQ,LASTCHEQ
          ENDIF
.
          GOTO      PRAUD600
.
PRAUD900
          MATCH     SP70,LASTLEDG
          IF        !@EQUAL
            MOVE      SP70,FMLADESC
            PACK      KEY2,LASTLEDG,SP70
            CALL      RDFMLA1
            PRINT     LASTLEDG,SP1,FMLADESC,*65,LEDTOTAL
            ADD       LEDTOTAL,ALLTOTAL
            ADD       ONE,CLNO
          ENDIF
.
          COMPARE   ZERO,CPAGENO
          CALL      ENDB0000 IF NOT EQUAL
.
PRAUD999  RETURN
.**********************************************************************
.  HEAA - Print Heading                                Called By PRAUD
.**********************************************************************
HEAA0000  CALL      HEAD132
.
          PRINT     "Cheque Audit Report"
          CALL      UND132
          PRINT     *1,"Cheque",*10,"Creditor",*40,"         Amount":
                    *60,"Invoice Number",*80,"Transaction Description"
          CALL      UND132
          ADD       "2",CLNO
.
HEAA9999  RETURN
.**********************************************************************
.  HEAB - Print Heading                                Called By PRAUD
.**********************************************************************
HEAB0000  CALL      HEAD80
.
          PRINT     "Payments Posting Summary"
          CALL      UND80
          PRINT     *1,"Ledger",*65,"         Amount"
          CALL      UND80
          ADD       "2",CLNO
.
HEAB9999  RETURN
.**********************************************************************
.  ENDA - Print End                                    Called By PRAUD
.**********************************************************************
ENDA0000  CALL      UND132
          PRINT     *10,"Total",*40,ALLTOTAL
          CALL      UND132
          ADD       "1",CLNO
.
ENDA9999  RETURN
.**********************************************************************
.  ENDB - Print End                                    Called By PRAUD
.**********************************************************************
ENDB0000  CALL      UND80
          PRINT     *10,"Total",*65,ALLTOTAL
          CALL      UND80
          ADD       "1",CLNO
.
ENDB9999  RETURN
.**********************************************************************
.  CHKNZ - Check if cheque audit file exists              Called By lots
.        Returns  - OVRCD    (1=doesn't exist)
.**********************************************************************
CHKNZ000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      NEZCAFA1,NZCAFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHKNZ999
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      NEZCAFA2,NZCAFILE
          TRAPCLR   IO
.
CHKNZ999  RETURN
.**********************************************************************
.  MAKNZ - Create cheque audit file (if possible)         Called By lots
.        Returns  - EXIT     (1=already exists, 2=cant create)
.**********************************************************************
MAKNZ000  CALL      CHKNZ0000          * check if file exists
          COMPARE   ZERO,OVRCD
          GOTO      MAKNZ950 IF EQUAL
.
          DISPLAY   *P1:20;            * move cursor so error displayed to scrn
          EXECUTE   NZCAMAKE,TASKID    * create file
.
          CALL      CHKNZ0000          * check if file was created
          COMPARE   ONE,OVRCD
          GOTO      MAKNZ970 IF EQUAL
.
.
MAKNZ900  MOVE      ZERO,EXIT          * continue
          GOTO      MAKNZ999
.
MAKNZ950  MOVE      ONE,EXIT           * already exists
          GOTO      MAKNZ999
.
MAKNZ970  MOVE      TWO,EXIT           * cant create !!
          GOTO      MAKNZ999
.
MAKNZ999  RETURN
.**********************************************************************
.  DELNZ - Delete cheque audit file (if possible)         Called By lots
.        Returns  - EXIT     (1=doesn't exist, 2=cant delete)
.**********************************************************************
DELNZ000  CALL      CHKNZ0000          * check if file exists
          COMPARE   ONE,OVRCD
          GOTO      DELNZ950 IF EQUAL
.
          DISPLAY   *P1:20;            * move cursor so error displayed to scrn
          CLOSE     NEZCAFA1
          CLOSE     NEZCAFA2
          EXECUTE   NZCAKILL,TASKID    * delete file
.
          CALL      CHKNZ0000          * check if file was deleted
          COMPARE   ZERO,OVRCD
          GOTO      DELNZ970 IF EQUAL
.
.
DELNZ900  MOVE      ZERO,EXIT          * continue
          GOTO      DELNZ999
.
DELNZ950  MOVE      ONE,EXIT           * doesn't exist
          GOTO      DELNZ999
.
DELNZ970  MOVE      TWO,EXIT           * cant delete !!
          GOTO      DELNZ999
.
DELNZ999  RETURN
.
. NEZCAFIO    
. --------
. Filename     : nezcafaf.dat
.
RSNZCA1   RESET     KEY28                                                       
          READ      NEZCAFA1,KEY28;;                                            
          RETURN
.
RANZCA1   RESET     KEY28                                                       
          MOVE      ZERO,OVRCD
          READ      NEZCAFA1,KEY28;ANS                                          
          GOTO      OVERCOND IF OVER
          RETURN
.
RDNZCA1   RESET     KEY28                                                       
          MOVE      ZERO,OVRCD
          READ      NEZCAFA1,KEY28;NZCACHQ,NZCACRD,NZCAINV,NZCALED,NZCAAMT:     
                        NZCADES                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
RKNZCA1                                                                         
          MOVE      ZERO,OVRCD
          READKS    NEZCAFA1;NZCACHQ,NZCACRD,NZCAINV,NZCALED,NZCAAMT:           
                        NZCADES                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
RPNZCA1                                                                         
          MOVE      ZERO,OVRCD
          READKP    NEZCAFA1;NZCACHQ,NZCACRD,NZCAINV,NZCALED,NZCAAMT:           
                        NZCADES                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
UPNZCA1                                                                         
          UPDATE    NEZCAFA1;NZCACHQ,NZCACRD,NZCAINV,NZCALED,NZCAAMT:           
                        NZCADES                                                 
          RETURN
.
WRNZCA1   RESET     KEY28                                                       
          WRITE     NEZCAFA1,KEY28;NZCACHQ,NZCACRD,NZCAINV,NZCALED,NZCAAMT:     
                        NZCADES                                                 
          RETURN
.
DENZCA1   RESET     KEY28                                                       
          DELETE    NEZCAFA1,KEY28                                              
          RETURN
.
RSNZCA2   RESET     KEY30                                                       
          READ      NEZCAFA2,KEY30;;                                            
          RETURN
.
RANZCA2   RESET     KEY30                                                       
          MOVE      ZERO,OVRCD
          READ      NEZCAFA2,KEY30;ANS                                          
          GOTO      OVERCOND IF OVER
          RETURN
.
RDNZCA2   RESET     KEY30                                                       
          MOVE      ZERO,OVRCD
          READ      NEZCAFA2,KEY30;NZCACHQ,NZCACRD,NZCAINV,NZCALED,NZCAAMT:     
                        NZCADES                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
RKNZCA2                                                                         
          MOVE      ZERO,OVRCD
          READKS    NEZCAFA2;NZCACHQ,NZCACRD,NZCAINV,NZCALED,NZCAAMT:           
                        NZCADES                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
RPNZCA2                                                                         
          MOVE      ZERO,OVRCD
          READKP    NEZCAFA2;NZCACHQ,NZCACRD,NZCAINV,NZCALED,NZCAAMT:           
                        NZCADES                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
UPNZCA2                                                                         
          UPDATE    NEZCAFA2;NZCACHQ,NZCACRD,NZCAINV,NZCALED,NZCAAMT:           
                        NZCADES                                                 
          RETURN
.
WRNZCA2   RESET     KEY30                                                       
          WRITE     NEZCAFA2,KEY30;NZCACHQ,NZCACRD,NZCAINV,NZCALED,NZCAAMT:     
                        NZCADES                                                 
          RETURN
.
DENZCA2   RESET     KEY30                                                       
          DELETE    NEZCAFA2,KEY30                                              
          RETURN
.******************************************************************************
.  SCRM - Display Screen M                       Called by SELM, redisps
.******************************************************************************
SCRM0000  MOVE      "11",SCRNO
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". From Batch           : ":
                          *V2LON,BATCH1:
                    *P1:5," 2",*HOFF,". To   Batch           : ":
                          *V2LON,BATCH2;
.
SCRM9999  RETURN
.******************************************************************************
.  SELM - Perform Screen M                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELM0000  
          UNPACK    SP70,BATCH1,BATCH2
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONM       * reset item desired
          CALL      SCRM0000           * display screen M
.
SELM0100  ADD       ONE,OPTIONM        * get next item
          BRANCH    ACCEPT,SELM0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONM
.
SELM0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONM,CVERT
          MOVE      OPTIONM,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELM9500,SELM9000:                       * quit, continue
                       SELM1100,SELM1200                        * execute option
          BRANCH    ACCEPT,SELM0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELM0100           * get another option
.
SELM0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELM0100
.
.---- option 1 ----
.
SELM1100  CALL      KAPBMA00                * get data
          BRANCH    EXIT,SELM1150,SELM9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
          MOVE      APBMBCH,BATCH1
          DISPLAY   *PCCOL:CVERT,*V2LON,BATCH1;
          GOTO      SELM0100
.
SELM1150  MOVE      SP70,BATCH1
          DISPLAY   *PCCOL:CVERT,*V2LON,BATCH1;
          GOTO      SELM0100
.
.
.---- option 2 ----
.
SELM1200  CALL      KAPBMA00                * get data
          BRANCH    EXIT,SELM1250,SELM9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
          MOVE      APBMBCH,BATCH2
          DISPLAY   *PCCOL:CVERT,*V2LON,BATCH2;
          GOTO      SELM0100
.
SELM1250  MOVE      Z70,BATCH2
          DISPLAY   *PCCOL:CVERT,*V2LON,BATCH2;
          GOTO      SELM0100
.
.
SELM9000  MOVE      ZERO,EXIT          * continue
          CALL      UPDM0000
          GOTO      SELM9999
.
SELM9500  MOVE      ONE,EXIT           * quit
.
SELM9999  RETURN
.**********************************************************************
.  UPDM - List not updated data                        Called By lots
.**********************************************************************
UPDM0000  CALL      CLRS0000
          MOVE      ZERO,TOTAL
          PACK      KEY40,SP70
          PACK      KEY51,BATCH1,SP70
          CALL      RSAPIN1
.
UPDM1000  
          CALL      RKAPIN1
          BRANCH    OVRCD,UPDM4000
          MATCH     APINCRD,BATCH2
          GOTO      UPDM4000 IF LESS
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Searching apsinpaf : ",*V2LON,APINBCH,APINCRD,*EL;
          ENDIF
.
          PACK      KEY41,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH     KEY41,KEY40
          IF        !@EQUAL
            MATCH     SP70,KEY40
            IF        !@EQUAL
              CALL      RDAPIM1
              IF        OVRCD=1
                CALL      INCS0000
                DISPLAY   *P1:LNO,"ERROR - APSIMSAF record=",KEY40:
                          " Does not Exist"
                WRITE     ERRFILE,SEQ;"ERROR - APSIMSAF record=",KEY40:
                          " Does not Exist"
              ELSE
                MATCH     "0",APIMUPD
                IF        @EQUAL
                  MATCH     "00000000",APBMUDT
                  IF        @EQUAL
                    CALL      INCS0000
                    DISPLAY   *P1:LNO,"File APSIMSA1 -":
                              " Bch=",APIMBCH," Crd=",APIMCRD:
                              " Ref=",APIMREF," Doc=",APIMDOC
                    WRITE     ERRFILE,SEQ;"File APSIMSA1 -":
                              " Bch=",APIMBCH," Crd=",APIMCRD:
                              " Ref=",APIMREF," Doc=",APIMDOC
                  ELSE
                    CALL      INCS0000
                    DISPLAY   *P1:LNO,"ERROR APSIMSA1 -":
                              " Bch=",APIMBCH," Crd=",APIMCRD:
                              " Ref=",APIMREF," Doc=",APIMDOC:
                              " not updated"
                    WRITE     ERRFILE,SEQ;"ERROR APSIMSA1 -":
                              " Bch=",APIMBCH," Crd=",APIMCRD:
                              " Ref=",APIMREF," Doc=",APIMDOC:
                              " not updated"
                    MOVE      "1",APIMUPD
                    CALL      UPAPIM1
                  ENDIF
                ENDIF
                IF        TOTAL<>APIMTOT+APIMGST
                  CALL      INCS0000
                  DISPLAY   *P1:LNO,"ERROR APSIMSA1 -":
                            " Bch=",APIMBCH," Crd=",APIMCRD:
                            " Ref=",APIMREF," Doc=",APIMDOC:
                            " total doesnt equal apin data",TOTAL
                  WRITE     ERRFILE,SEQ;"ERROR APSIMSA1 -":
                            " Bch=",APIMBCH," Crd=",APIMCRD:
                            " Ref=",APIMREF," Doc=",APIMDOC:
                            " total doesnt equal apin data",TOTAL
                ENDIF
              ENDIF
            ENDIF
            MOVE      ZERO,TOTAL
            PACK      KEY40,KEY41,SP70
          ENDIF
.
          MOVE      SP70,APBMUDT
          PACK      KEY5,APINBCH,SP70
          CALL      RDAPBM1
          REP       " 0",APBMUDT
          IF        OVRCD=1
            CALL      INCS0000
            DISPLAY   *P1:LNO,"ERROR - Batch=",APINBCH:
                      " Does not Exist"
            WRITE     ERRFILE,SEQ;"ERROR - Batch=",APINBCH:
                      " Does not Exist"
          ENDIF
.
          ASSIGN    TOTAL+APINAMT+APINGST,TOTAL
.
          MATCH     "0",APINUPD
          IF        @EQUAL
            MATCH     "00000000",APBMUDT
            IF        @EQUAL
              CALL      INCS0000
              DISPLAY   *P1:LNO,"File APSINPA1 -":
                        " Bch=",APINBCH," Crd=",APINCRD:
                        " Ref=",APINREF," Doc=",APINDOC:
                        " Ord=",APINORD," Lin=",APINLIN
              WRITE     ERRFILE,SEQ;"File APSINPA1 -":
                        " Bch=",APINBCH," Crd=",APINCRD:
                        " Ref=",APINREF," Doc=",APINDOC:
                        " Ord=",APINORD," Lin=",APINLIN
            ELSE
              CALL      INCS0000
              DISPLAY   *P1:LNO,"ERROR APSINPA1 -":
                        " Bch=",APINBCH," Crd=",APINCRD:
                        " Ref=",APINREF," Doc=",APINDOC:
                        " Ord=",APINORD," Lin=",APINLIN:
                        " not updated"
              WRITE     ERRFILE,SEQ;"ERROR APSINPA1 -":
                        " Bch=",APINBCH," Crd=",APINCRD:
                        " Ref=",APINREF," Doc=",APINDOC:
                        " Ord=",APINORD," Lin=",APINLIN:
                        " not updated"
              MOVE      "1",APINUPD
              CALL      UPAPIN1
            ENDIF
          ENDIF
          GOTO      UPDM1000
.
UPDM4000  
          MATCH     SP70,KEY40
          IF        !@EQUAL
            CALL      RDAPIM1
            IF        OVRCD=1
              CALL      INCS0000
              DISPLAY   *P1:LNO,"ERROR - APSIMSAF record=",KEY40:
                        " Does not Exist"
              WRITE     ERRFILE,SEQ;"ERROR - APSIMSAF record=",KEY40:
                        " Does not Exist"
            ELSE
              MATCH     "0",APIMUPD
              IF        @EQUAL
                MATCH     "00000000",APBMUDT
                IF        @EQUAL
                  CALL      INCS0000
                  DISPLAY   *P1:LNO,"File APSIMSA1 -":
                            " Bch=",APIMBCH," Crd=",APIMCRD:
                            " Ref=",APIMREF," Doc=",APIMDOC
                  WRITE     ERRFILE,SEQ;"File APSIMSA1 -":
                            " Bch=",APIMBCH," Crd=",APIMCRD:
                            " Ref=",APIMREF," Doc=",APIMDOC
                ELSE
                  CALL      INCS0000
                  DISPLAY   *P1:LNO,"ERROR APSIMSA1 -":
                            " Bch=",APIMBCH," Crd=",APIMCRD:
                            " Ref=",APIMREF," Doc=",APIMDOC:
                            " not updated"
                  WRITE     ERRFILE,SEQ;"ERROR APSIMSA1 -":
                            " Bch=",APIMBCH," Crd=",APIMCRD:
                            " Ref=",APIMREF," Doc=",APIMDOC:
                            " not updated"
                  MOVE      "1",APIMUPD
                  CALL      UPAPIM1
                ENDIF
              ENDIF
              IF        TOTAL<>APIMTOT+APIMGST
                CALL      INCS0000
                DISPLAY   *P1:LNO,"ERROR APSIMSA1 -":
                          " Bch=",APIMBCH," Crd=",APIMCRD:
                          " Ref=",APIMREF," Doc=",APIMDOC:
                          " total doesnt equal apin data",TOTAL
                WRITE     ERRFILE,SEQ;"ERROR APSIMSA1 -":
                          " Bch=",APIMBCH," Crd=",APIMCRD:
                          " Ref=",APIMREF," Doc=",APIMDOC:
                          " total doesnt equal apin data",TOTAL
              ENDIF
            ENDIF
          ENDIF
.
          CALL      COMP0000
.
UPDM9999  RETURN
.
.******************************************************************************
.  SCRN - Display Screen N                       Called by SELN, redisps
.******************************************************************************
SCRN0000  MOVE      "12",SCRNO
          DISPLAY   *P1:3,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Fms Batch            : ":
                          *V2LON,FMBCBAT:
                    *P1:5," 2",*HOFF,". DOF Batch            : ":
                          *V2LON,APAPDOF
.
SCRN9999  RETURN
.******************************************************************************
.  SELN - Perform Screen N                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELN0000  UNPACK    SP70,ANS
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONN       * reset item desired
          CALL      SCRN0000           * display screen N
.
SELN0100  ADD       ONE,OPTIONN        * get next item
          BRANCH    ACCEPT,SELN0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONN
.
SELN0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONN,CVERT
          MOVE      OPTIONN,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELN9500,SELN9000:                       * quit, continue
                       SELN1100,SELN1200                        * execute option
          BRANCH    ACCEPT,SELN0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELN0100           * get another option
.
SELN0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELN0100
.
.---- option 1 ----
.
SELN1100  CALL      KBCFFM00
          BRANCH    EXIT,SELN9500,SELN9500
          GOTO      SELN0100
.
.---- option 2 ----
.
SELN1200  
          KEYIN     *PCCOL:CVERT,*V2LON,*DE,*JR,*ZF,APAPDOF:
                    *PCCOL:CVERT,*DV,APAPDOF
          PACK      APAPDOF,APAPDOF,SP70
          MATCH     SP70,APAPDOF
          GOTO      SELN1200 IF EQUAL
          GOTO      SELN0100
.
.
SELN9000  MOVE      ZERO,EXIT          * continue
.
          CALL      MAKAP000           * check if proposed payments active
          IF        EXIT=1
            CLEAR     DISPMSG
            APPEND    "ERROR - Proposed Payments Already in Progress - ",DISPMSG
            CALL      MESSAGE1
            GOTO      SELN9999
          ENDIF
          IF        EXIT=2
            CLEAR     DISPMSG
            APPEND    "ERROR - Could Not Create Payments File - ",DISPMSG
            CALL      MESSAGE1
            GOTO      SELN9999
          ENDIF
          PACK      KEY52,SP70
          UNPACK    KEY52,APAPCRD,APAPREF,APAPTYP,APAPDOC:
                           APAPORD,APAPLIN,APAPBCH
          CALL      WRAPAP1            * add dummy record
.
          PACK      MAKETMPA,ISBUILD,NAMEA,TMP0ADAT
          PACK      KILLTMPA,ISERASE,NAMEA
          CLOSE     NEZTMP0A
          EXECUTE   KILLTMPA,TASKID
          EXECUTE   MAKETMPA,TASKID
          OPEN      NEZTMP0A,NAMEA
.
          PACK      MAKETMPB,ISBUILD,NAMEB,TMP0BDAT
          PACK      KILLTMPB,ISERASE,NAMEB
          CLOSE     NEZTMP0B
          EXECUTE   KILLTMPB,TASKID
          EXECUTE   MAKETMPB,TASKID
          OPEN      NEZTMP0B,NAMEB
.
          CALL      CHKCH000
.
          GOTO      SELN9999
.
SELN9500  MOVE      ONE,EXIT           * quit
.
SELN9999  RETURN
.----------------------------------------------------------------------
. CHKCH000 - Check data                  Called by PRNPY000
.----------------------------------------------------------------------
CHKCH000  
          CALL      RDFMCO50                     * read parameters
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
.
          MOVE      ZERO,BCHTOTAL
          PACK      KEY51,FMBCBAT,SP70
          CALL      RSAPIN1
.
CHKCH100
          CALL      RKAPIN1                      * loop through payments file
          BRANCH    OVRCD,CHKCH900
.
          MATCH     APINBCH,FMBCBAT             * new creditor ?
          GOTO      CHKCH900 IF NOT EQUAL
          ASSIGN    APINAMT+APINGST+BCHTOTAL,BCHTOTAL
.
          PACK      KEY41,APINCRD,APINREF,APINDOC,APINBCH,SP70
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing 1 : ",*V2LON,KEY41,*EL;
          ENDIF
.
          PACK      KEY2,APINLED,SP70            * save ledger totals
          UNPACK    KEY2,NEZBLEDG
          CALL      RDNEZB1
          IF        OVRCD=1
            ASSIGN    APINAMT+APINGST,NEZBAMT
            CALL      WRNEZB1
          ELSE
            ASSIGN    APINAMT+APINGST+NEZBAMT,NEZBAMT
            CALL      UPNEZB1
          ENDIF
.
.---- get charge code by account ----
.
          PACK      KEY26,APINLED,APINACC,SP70
          CALL      RSAPSC2                      * get charge code (if exists)
          CALL      RKAPSC2
          BRANCH    OVRCD,CHKCH300
          PACK      KEY14,APSCLED,APSCSUB,SP70
          MATCH     KEY14,KEY26
          GOTO      CHKCH300 IF NOT EQUAL
          MATCH     "1",APSCTYP
          GOTO      CHKCH300 IF NOT EQUAL
          GOTO      CHKCH400
.
.---- get charge code by subj ----
.
CHKCH300  
          PACK      ACCOUNT,APINACC,SP70
          CALL      GCOD0000                     * get subjective/cost centre
          PACK      KEY26,APINLED,SUBJCODE,SP70
          CALL      RSAPSC2                      * get charge code (if exists)
          CALL      RKAPSC2
          BRANCH    OVRCD,CHKCH950
          PACK      KEY14,APSCLED,APSCSUB,SP70
          MATCH     KEY14,KEY26
          GOTO      CHKCH950 IF NOT EQUAL
          MATCH     " ",APSCTYP
          GOTO      CHKCH950 IF NOT EQUAL
.
CHKCH400  
          PACK      KEY17,APINCRD,APSCCOD,SP70
          UNPACK    KEY17,NEZACRED,NEZACODE
          CALL      RDNEZA1                      * update temp file (charge cod)
          IF        OVRCD=1
            ASSIGN    APINGST+APINAMT,NEZAAMT
            PACK      NEZABUT1,SP70
            PACK      NEZABUT2,SP70
            PACK      NEZABUT3,SP70
            PACK      NEZABUT4,SP70
            PACK      NEZABUT5,SP70
            PACK      KEY15,APINDOC,SP70
            SQUEEZE   KEY15
            PACK      NEZACNUM,SP2,KEY15,SP70
            CALL      WRNEZA1
          ELSE
            ASSIGN    APINGST+APINAMT+NEZAAMT,NEZAAMT
            PACK      NEZABUT1,SP70
            PACK      NEZABUT2,SP70
            PACK      NEZABUT3,SP70
            PACK      NEZABUT4,SP70
            PACK      NEZABUT5,SP70
            CALL      UPNEZA1
          ENDIF
.
          MOVE      "~~~~~~~~~~~~",APSCCOD
          PACK      KEY17,APINCRD,APSCCOD,SP70
          UNPACK    KEY17,NEZACRED,NEZACODE
          CALL      RDNEZA1                      * update temp file (butt lines)
          IF        OVRCD=1
            ASSIGN    APINGST+APINAMT,NEZAAMT
            PACK      NEZABUT1,APINREF,SP70
            PACK      NEZABUT2,SP70
            PACK      NEZABUT3,SP70
            PACK      NEZABUT4,SP70
            PACK      NEZABUT5,SP70
            CALL      WRNEZA1
          ELSE
            ASSIGN    APINGST+APINAMT+NEZAAMT,NEZAAMT
.
            CALL      BUTT0000                   * update butt lines
.
            CALL      UPNEZA1
          ENDIF
.
          GOTO      CHKCH100
.
CHKCH900  MOVE      ZERO,EXIT
          CALL      CRTCH000         * create transfer file
.
          CLEAR     DISPMSG          * display completed message
          APPEND    "DOF Transfer Batch ",DISPMSG
          APPEND    APAPDOF,DISPMSG
          APPEND    " Created - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          GOTO      CHKCH9999
.
CHKCH950  
          CLEAR     DISPMSG
          APPEND    "Charge Code Missing for Account ",DISPMSG
          APPEND    APINLED,DISPMSG
          APPEND    SLASH,DISPMSG
          APPEND    APINACC,DISPMSG
          APPEND    " - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,EXIT
.
CHKCH999  RETURN
.----------------------------------------------------------------------
. BUTT0000 - Handle butt lines
.----------------------------------------------------------------------
BUTT0000  
          MATCH     NEZABUT1,APINREF      * check if invoice exists
          GOTO      BUTT9999 IF EQUAL
          MATCH     NEZABUT2,APINREF
          GOTO      BUTT9999 IF EQUAL
          MATCH     NEZABUT3,APINREF
          GOTO      BUTT9999 IF EQUAL
          MATCH     NEZABUT4,APINREF
          GOTO      BUTT9999 IF EQUAL
          MATCH     NEZABUT5,APINREF
          GOTO      BUTT9999 IF EQUAL
.
          MATCH     NEZABUT5,SP70         * set up butt lines
          IF        @EQUAL
            MATCH     NEZABUT4,SP70
            IF        @EQUAL
              MATCH     NEZABUT3,SP70
              IF        @EQUAL
                MATCH     NEZABUT2,SP70
                IF        @EQUAL
                  MATCH     NEZABUT1,SP70
                  IF        @EQUAL
                    PACK      NEZABUT1,APINREF,SP70
                  ELSE
                    PACK      NEZABUT2,APINREF,SP70
                  ENDIF
                ELSE
                  PACK      NEZABUT3,APINREF,SP70
                ENDIF
              ELSE
                PACK      NEZABUT4,APINREF,SP70
              ENDIF
            ELSE
              PACK      NEZABUT5,APINREF,SP70
            ENDIF
          ENDIF
.
BUTT9999  RETURN
.----------------------------------------------------------------------
. CRTCH000 - Create transfer file        Called by PRNPY000
.----------------------------------------------------------------------
CRTCH000  
.
.---- write header record ----
.
....      PACK      KEY17,SP70              * update temp file (collect ?)
....      UNPACK    KEY17,NEZACRED,NEZACODE
....      MOVE      ZERO,COLLECT
....      MOVE      COLLECT,NEZAAMT
....      PACK      DATERUN,CCC,CYY,CMM,CDD,SP70
....      REP       " 0",DATERUN
....      PACK      NEZABUT1,DATERUN,SP70
....      PACK      NEZABUT2,APAPDOF,SP70
....      PACK      NEZABUT3,BCHTOTAL,SP70
....      PACK      NEZABUT4,SP70
....      PACK      NEZABUT5,SP70
....      PACK      NEZACNUM,SP70
....      CALL      DENEZA1
....      CALL      WRNEZA1
.
.---- create file ----
.
....      CALL      CRDOF000
....      IF        OVRCD=1
....        CLEAR     DISPMSG
....        APPEND    "Cant Create Transfer File ",DISPMSG
....        APPEND    DOFFILE,DISPMSG
....        APPEND    " - ",DISPMSG
....        CALL      MESSAGE1
....        GOTO      CRTCH999
....      ENDIF
.
.---- write header ----
.
....      MOVE      BCHTOTAL,F12P2
....      CALL      FORM0000
....      UNPACK    DATERUN,CCENT,CYEAR,CMON,CDAY
....      WRITE     APSDOFF1,SEQ;"(\LD\",APAPDOF,"\11\",FMCODFAO:
....                               "\\",KEY14,"\\\",KEY6,"_"
....      WRITE     APSDOFF1,SEQ;"0\",FMCODFDN,"\",FMCODFDL:
....                             "\",FMCODFPH,"\",FMCODFEX,"_"
.
.---- write data records ----
.
....      PACK      LASTCHEQ,SP70
....      PACK      KEY17,SP70
....      CALL      RSNEZA1
.
CRTCH100
....      CALL      RKNEZA1                      * loop through temp file
....      BRANCH    OVRCD,CRTCH900
.
....      PACK      KEY17,NEZACRED,NEZACODE,SP70
....      ADD       ONE,COUNTDIS       * display every 1000th record
....      IF        (COUNTDIS%1000=1)
....        DISPLAY   *P1:24,"Processing 2 : ",*V2LON,KEY17,*EL;
....      ENDIF
.
....      MATCH     LASTCHEQ,NEZACNUM            * next consecutive no. ?
....      IF        !@EQUAL
....        PACK      LASTCHEQ,NEZACNUM,SP70
....        UNPACK    NEZACNUM,KEY2,KEY6
....        WRITE     APSDOFF1,SEQ;"1\",KEY6,"_"
....      ENDIF
.
....      MATCH     "~~~~~~~~~~~~",NEZACODE      * charging record ?
....      IF        @EQUAL
....        CALL      PCRED000                   * print creditor & voucher info
....      ELSE
....        MOVE      NEZAAMT,F12P2
....        CALL      FORM0000
....        MOVE      NEZACODE,KEY9
....        WRITE     APSDOFF1,SEQ;"2\\\\",KEY9,"\",KEY14;
....        IF        NEZAAMT<0
....          WRITE     APSDOFF1,SEQ;"-_"
....        ELSE
....          WRITE     APSDOFF1,SEQ;"_"
....        ENDIF
....      ENDIF
.
....      GOTO      CRTCH100
.
.---- write trailer ----
.
CRTCH900  
....      WRITE     APSDOFF1,SEQ;")_"
....      CLOSE     APSDOFF1                     * close file
.
CRTCH999  RETURN
.****************************************************************************
.  FORM - Format number
.****************************************************************************
FORM0000  
....      IF        F12P2<0
....        MULT      SEQ,F12P2
....      ENDIF
.
....      ASSIGN    F12P2*100.0,F14
....      MOVE      F14,KEY14
....      REP       " 0",KEY14
.
FORM9999  RETURN
.****************************************************************************
. PCRED - print creditor and voucher amount
.****************************************************************************
PCRED000  
....      PACK      KEY5,NEZACRED,SP70
....      CALL      RDAPMA1                    * get creditor info
....      MATCH     SP70,APMACN1               * print creditor name
....      IF        !@EQUAL
....        PACK      LINE1,APMACN1,SP70
....        WRITE     APSDOFF1,SEQ;"3\",LINE1,"_"
....      ENDIF
....      MATCH     SP70,APMACN2
....      IF        !@EQUAL
....        PACK      LINE1,APMACN2,SP70
....        WRITE     APSDOFF1,SEQ;"3\",LINE1,"_"
....      ENDIF
.
....      PACK      LINE1,SP70,SP70
....      PACK      LINE2,SP70,SP70
....      PACK      LINE3,SP70,SP70
....      PACK      KEY9,SP1,APMACPC,SP70    * pack creditor address
....      IF        COLLECT=1
....        MATCH     SP70,APMACA3
....        IF        !@EQUAL
....          PACK      LINE3,APMACA3,KEY9,SP70
....          MOVE      SP70,KEY9
....        ENDIF
....        MATCH     SP70,APMACA2
....        IF        !@EQUAL
....          PACK      LINE2,APMACA2,KEY9,SP70
....          MOVE      SP70,KEY9
....        ENDIF
....        MATCH     SP70,APMACA1
....        IF        !@EQUAL
....          PACK      LINE1,APMACA1,KEY9,SP70
....        ENDIF
....      ENDIF
.
....      MATCH     SP70,LINE1                 * print creditor address
....      IF        !@EQUAL
....        WRITE     APSDOFF1,SEQ;"3\",LINE1,"_"
....      ENDIF
....      MATCH     SP70,LINE2
....      IF        !@EQUAL
....        WRITE     APSDOFF1,SEQ;"3\",LINE2,"_"
....      ENDIF
....      MATCH     SP70,LINE3
....      IF        !@EQUAL
....        WRITE     APSDOFF1,SEQ;"3\",LINE3,"_"
....      ENDIF
.
....      MATCH     SP70,NEZABUT1
....      IF        !@EQUAL
....        WRITE     APSDOFF1,SEQ;"9\",NEZABUT1,"_"
....      ENDIF
....      MATCH     SP70,NEZABUT2
....      IF        !@EQUAL
....        WRITE     APSDOFF1,SEQ;"9\",NEZABUT2,"_"
....      ENDIF
....      MATCH     SP70,NEZABUT3
....      IF        !@EQUAL
....        WRITE     APSDOFF1,SEQ;"9\",NEZABUT3,"_"
....      ENDIF
....      MATCH     SP70,NEZABUT4
....      IF        !@EQUAL
....        WRITE     APSDOFF1,SEQ;"9\",NEZABUT4,"_"
....      ENDIF
....      MATCH     SP70,NEZABUT5
....      IF        !@EQUAL
....        WRITE     APSDOFF1,SEQ;"9\",NEZABUT5,"_"
....      ENDIF
.
....      MOVE      NEZAAMT,F12P2
....      CALL      FORM0000
....      WRITE     APSDOFF1,SEQ;"5\",KEY14,"_"
.
PCRED999  RETURN
.******************************************************************************
.  SCRZ - Display Screen                         Called by SRAN, redisps
.******************************************************************************
SCRZ0000  DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Ledger               : ":
                          *V2LON,LEDG1,*HOFF,SP2,LEDG1D,*V2LON:
                    *P1:5," 2",*HOFF,". From Account         : ":
                          *V2LON,ACCT1,*HOFF,SP2,ACCT1D,*V2LON:
                    *P1:6," 3",*HOFF,". To Account           : ":
                          *V2LON,ACCT2,*HOFF,SP2,ACCT2D;
.
SCRZ9999  RETURN
.******************************************************************************
.  SRAN - Perform Screen Z                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SRAN0000  MOVE      "99",SCRNO
          UNPACK    SP70,LEDG1,ACCT1,ACCT2
          UNPACK    SP70,LEDG1D
          UNPACK    SP70,ACCT1D,ACCT2D
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONG       * reset item desired
          CALL      SCRZ0000           * display screen Z
.
SRAN0100  ADD       ONE,OPTIONG        * get next item
          BRANCH    ACCEPT,SRAN0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONG
.
SRAN0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONG,CVERT
          MOVE      OPTIONG,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SRAN9500,SRAN9000:                       * quit, continue
                       SRAN1100,SRAN1200,SRAN1300               * execute option
          BRANCH    ACCEPT,SRAN0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SRAN0100           * get another option
.
SRAN0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SRAN0100
.
.---- option 1 ----
.
SRAN1100  CALL      KLMAFM00                * get data
          BRANCH    EXIT,SRAN1100,SRAN9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SP2,FMLADESC;
          PACK      FMAMLEDG,FMLALEDG,SP70
          PACK      LEDG1,FMLALEDG,SP70
          PACK      LEDG1D,FMLADESC,SP70
          GOTO      SRAN0100
.
.---- option 2 ----
.
SRAN1200  CALL      KAMAFM00                * get data
          BRANCH    EXIT,SRAN1290,SRAN9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT,*HOFF,SP2,FMAMDESC;
          PACK      ACCT1,FMAMACCT,SP70
          PACK      ACCT1D,FMAMDESC,SP70
          GOTO      SRAN0100
.
SRAN1290  PACK      ACCT1,SP70
          PACK      ACCT1D,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,ACCT1;
          GOTO      SRAN0100
.
.---- option 3 ----
.
SRAN1300  CALL      KAMAFM00                * get data
          BRANCH    EXIT,SRAN1390,SRAN9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT,*HOFF,SP2,FMAMDESC;
          PACK      ACCT2,FMAMACCT,SP70
          PACK      ACCT2D,FMAMDESC,SP70
          GOTO      SRAN0100
.
SRAN1390  MOVE      T70,ACCT2
          PACK      ACCT2D,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,ACCT2;
          GOTO      SRAN0100
.
.
SRAN9000  MATCH     ACCT1,ACCT2
          GOTO      SRAN9400 IF NOT LESS
.
          DISPLAY   *P1:24,*B,*EF:
                    "From Account Must Not Be After To Account - ";
          CALL      HITENTER
          GOTO      SRAN0100
.
SRAN9400  MOVE      ZERO,EXIT          * continue
          GOTO      SRAN9999
.
SRAN9500  MOVE      ONE,EXIT           * quit
.
SRAN9999  RETURN
.
.**********************************************************************
. SELO - read in new accounts
.**********************************************************************
SELO0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      READFILE,"readfile"
          TRAPCLR   IO
          BRANCH    OVRCD,SELO9500
.
SELO1000  
          READ      READFILE,SEQ;FMAMLEDG,ANS,FMAMACCT
          GOTO      SELO9999 IF OVER
.
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMAM1
          COMPARE   ONE,OVRCD
          GOTO      SELO1000 IF NOT EQUAL
.
          CALL      POSO0000           * add new account
          GOTO      SELO1000
.
SELO9500  
          DISPLAY   *P1:24,*B,*EF,"File 'readfile' not found - ";
          CALL      HITENTER
          GOTO      SELO9999
.
SELO9999  RETURN
.******************************************************************************
.* POSO - Post data                              Called by ML0000             *
.******************************************************************************
POSO0000  
          MOVE      ONE,FMAMMULT
          MOVE      ONE,FMAMDIV
          MOVE      ZERO,FMAMAYTD
          MOVE      ZERO,FMAMDPLA
          UNPACK    SP70,FMAMUNIT
          MOVE      "0000000000",FMAMCLEV
          MOVE      "DELETED                            ",FMAMDESC
          MOVE      "1",FMAMTYPE
          MOVE      "2",FMAMSTAT
          MOVE      "0",FMAMCTRL
          MOVE      "0",FMAMASST
          MOVE      "0",FMAMPPT
          MOVE      "0",FMAMONC
          MOVE      "   ",FMAMONCC
.
          CALL      DEFMAM1                 * delete old record (if possible)
          CALL      WRFMAM1                 * write new record
.
POSO9999  RETURN
.******************************************************************************
.  SCRP - Display Screen P                       Called by SELP, redisps
.******************************************************************************
SCRP0000  MOVE      "13",SCRNO
          UNPACK    BATDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Search From Batch    : ":
                          *V2LON,BATCH1:
                    *P1:5," 2",*HOFF,".        To   Batch    : ":
                          *V2LON,BATCH2:
                    *P1:6," 3",*HOFF,". From Post To Date    : ":
                          *V2LON,CPCDATE;
.
SCRP9999  RETURN
.******************************************************************************
.  SELP - Perform Screen C                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELP0000  UNPACK    SP70,BATCH1,BATCH2,BATDATE
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONC       * reset item desired
          CALL      SCRP0000           * display screen C
.
SELP0100  ADD       ONE,OPTIONC        * get next item
          BRANCH    ACCEPT,SELP0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONC
.
SELP0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONC,CVERT
          MOVE      OPTIONC,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELP9500,SELP9000:                       * quit, continue
                       SELP1100,SELP1200,SELP1300               * execute option
          BRANCH    ACCEPT,SELP0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELP0100           * get another option
.
SELP0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELP0100
.
.---- option 1 ----
.
SELP1100  CALL      KBCFFM00                * get data
          BRANCH    EXIT,SELP1150,SELP9500  * entry ok ? (1=blank, 2=EXITCHAR)
          PACK      BATCH1,FMBCBAT,SP70
          REP       " 0",BATCH1
.
SELP1150  LOAD      BATCH1,EXIT,ZERO10
          DISPLAY   *PCCOL:CVERT,*V2LON,BATCH1;
          GOTO      SELP0100
.
.---- option 2 ----
.
SELP1200  CALL      KBCFFM00                * get data
          BRANCH    EXIT,SELP1160,SELP9500  * entry ok ? (1=blank, 2=EXITCHAR)
          PACK      BATCH2,FMBCBAT,SP70
          REP       " 0",BATCH2
.
SELP1160  LOAD      BATCH2,EXIT,NINE10
          DISPLAY   *PCCOL:CVERT,*V2LON,BATCH2;
          GOTO      SELP0100
.
.---- option 3 ----
.
SELP1300  MOVE      CCC,CCENT
          CALL      KEYDATE
          PACK      BATDATE,CCENT,CYEAR,CMON,CDAY
          GOTO      SELP0100
.
.
SELP9000  MATCH     BATCH1,BATCH2
          GOTO      SELP9100 IF NOT LESS
          DISPLAY   *P1:24,*B,*EF,"From Batch Must Be Less Than To Batch - ";
          CALL      HITENTER
          GOTO      SELP0100
.
SELP9100  MOVE      ZERO,EXIT          * continue
          GOTO      SELP9999
.
SELP9500  MOVE      ONE,EXIT           * quit
.
SELP9999  RETURN
.**********************************************************************
.  UPDP - Search for unbalanced processed batches      Called By ML
.**********************************************************************
UPDP0000  
          UNPACK    SP70,FMSTFILE,FMSRFILE,FMSPFILE,FMSSFILE
          PACK      KEY6,FOUR,BATCH1,SP70
          CALL      RSFMBC2
          CALL      RPFMBC2
.
.---- loop through batches ----
.
UPDP1000  CALL      RKFMBC2
          BRANCH    OVRCD,UPDP9000
          MATCH     "4",FMBCSTA
          GOTO      UPDP9000 IF NOT EQUAL
          MATCH     FMBCBAT,BATCH2          * in batch range ?
          GOTO      UPDP9000 IF LESS
          ADD       ONE,COUNTDIS       * display every 1000th record
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing : ",*V2LON,FMBCBAT,*EF;
          ENDIF
.
          MATCH     BATDATE,FMBCCDAT        * in date range ? (cash)
          GOTO      UPDP1010 IF NOT LESS
          GOTO      UPDP1000
.
UPDP1010  PACK      KEY2,FMBCLED
          CALL      RDFMLA1
          ADD       ONE,BATCHT
.
.---- open files ----
.
          MOVE      FMBCCDAT,WORKDATE
          CALL      CFYR0000
          MOVE      CURYEAR,CASYEAR
.
          MOVE      FMBCPDAT,WORKDATE
          CALL      CFYR0000
          MOVE      CURYEAR,ACCYEAR
.
          PACK      FILENAME,FMST,ACCYEAR,SP70
.
          MATCH     FILENAME,FMSTFILE       * file already open ?
          GOTO      UPDP1200 IF EQUAL
.
          MOVE      FILENAME,FMSTFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FMSTFILE
          TRAPCLR   IO
          LOAD      FMSTFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDP1000
.
.---- loop through files ----
.
UPDP1200  
          MOVE      ZERO,BALANCE
          PACK      KEY10,FMBCBAT,SP70
          CALL      RSFMTR1
.
UPDP2300  CALL      RKFMTR1
          BRANCH    OVRCD,UPDP2400
          MATCH     FMBCBAT,FMTRBAT
          GOTO      UPDP2400 IF NOT EQUAL
.
          MOVE      "Accrual   ",KEY10
          CALL      CHXX0000           * check for XX trans
.
          CALL      CHAC0000           * check if account exists
.
          CALL      UBNK0000           * update bank rec
.
          CALL      CAMT0000
          ADD       FMTRAMT,BALANCE
          GOTO      UPDP2300
.
UPDP2400  COMPARE   ZERO,BALANCE
          GOTO      UPDP3200 IF EQUAL
          ADD       ONE,BATCHC
          DISPLAY   *P1:24,*B,*EF,"ERROR - Batch ",*V2LON,FMBCBAT,*HOFF:
                    " Has Cash Bal ",*V2LON,BALANCE,*HOFF," - ";
          WRITE     ERRFILE,SEQ;"ERROR - Batch ",FMBCBAT:
                    " Has Cash Bal ",BALANCE
          CALL      HITENTER
          MATCH     "*",ANS
          GOTO      UPDP9999 IF EQUAL
.
UPDP3200  
          GOTO      UPDP1000
.
UPDP9000  DISPLAY   *P1:19,*B,*EF:
                    *P1:20:
                    "No. of Processed Accrual Batches out of Balance ":
                    *V2LON,BATCHA,*HOFF:
                    *P1:21:
                    "No. of Processed Batches With Invalid Accounts  ":
                    *V2LON,BATCHE,*HOFF:
                    *P1:22:
                    "No. of Processed Batches With XX Transactions   ":
                    *V2LON,BATCHX,*HOFF:
                    *P1:24:
                    "No. of Processed Batches Checked                ":
                    *V2LON,BATCHT,*HOFF," - ";
          CALL      HITENTER
.
UPDP9999  RETURN
.**********************************************************************
.  UBNK - Update bank rec from transaction file        Called By lots
.**********************************************************************
UBNK0000  
          MATCH    "PY",FMTRTYPE    * Payment
          GOTO     UBNK0100 IF EQUAL
.
          MATCH    "CC",FMTRTYPE    * Cancelled Cheque
          GOTO     UBNK0100 IF EQUAL
.
          MATCH    "RI",FMTRTYPE    * Cancelled Cheque
          GOTO     UBNK0100 IF EQUAL
.
          MATCH    "CS",FMTRTYPE    * Cash Receipt
          GOTO     UBNK0100 IF EQUAL
.
          MATCH    "CS",FMBCTRT     * Cash Receipt
          GOTO     UBNK0100 IF EQUAL
.
.
          MATCH    "PY",FMBCTRT     * Journal Entry for payment
          GOTO     UBNK9999 IF EQUAL
.
          MATCH    "CC",FMBCTRT     * Journal Entry for cancelled Cheq
          GOTO     UBNK9999 IF EQUAL
.
          MATCH    "RI",FMBCTRT     * Reinstated invoice
          GOTO     UBNK9999 IF EQUAL
.
.---- check if already on file ----
.
UBNK0100  
          PACK      KEY30,FMTRBAT,FMTRUNIQ,SP70
          PACK      KEY10,FMTRBAT,FMTRUNIQ,SP70
.
UBNK1000  CALL      RSFMBN4            * check if in bank rec file
          CALL      RKFMBN4
          BRANCH    OVRCD,UBNK1900
          PACK      KEY30,FMBNBCH,FMBNLNO,FMBNBNK,FMBNUNQ,SP70
          MATCH     KEY10,KEY30
          GOTO      UBNK1900 IF NOT EQUAL
.
          GOTO      UBNK9999
.
.---- write to bank rec file ----
.
UBNK1900  
          PACK      KEY2,FMTRLEDG,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,UBNK9999
.
          MOVE      SP70,FMCSBNK
          PACK      KEY14,FMTRLEDG,FMTRACCT,SP70
          CALL      RDFMCS1
          MATCH     SP70,FMCSBNK
          GOTO      UBNK1910 IF NOT EQUAL
          MOVE      FMLABNK,FMCSBNK
UBNK1910
.
          MOVE      "** Unknown **                                     ",APMACN1
          PACK      KEY5,FMTRCRED,SP70
          CALL      RDAPMA1
.
          PACK      BCREFER,FMTRDOCR,SP70
          PACK      BCCONT,FMCSBNK,SP70
          PACK      BCORD,FMTRORD,SP70
          PACK      BCCDESC,APMACN1,SP70
          PACK      BCLEDG,FMTRLEDG,SP70
          PACK      BCACCT,FMTRACCT,SP70
          MOVE      SP70,KEY20
          CALL      BANK0000           * update bank rec
.
          MATCH     KEY20,SP70
          GOTO      UBNK9999 IF EQUAL
          DISPLAY   *P1:24,"Added to FMSBNKAF ",*V2LON,FMTRBAT,SLASH:
                    FMTRUNIQ,*HOFF," KEY20 ",*V2LON,KEY20,*EL;
          WRITE     ERRFILE,SEQ;"Added to FMSBNKAF ",FMTRBAT,SLASH:
                    FMTRUNIQ," KEY20 ",KEY20
.
UBNK9999  RETURN
.******************************************************************************
.  SCRQ - Display Screen Q                       Called by SELQ, redisps
.******************************************************************************
SCRQ0000  
          ASSIGN    FMSUUD4A+1,SCANPOS
.
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Old separator char   : ":
                          *V2LON,SCANCHAR:
                    *P1:10,"Warning, this will delete all accounts with the ":
                    *P1:11,"above separator character in position ",SCANPOS:
                    *P1:13,"Complete validation should be run if this option":
                    *P1:14,"deletes any accounts"
.
SCRQ9999  RETURN
.******************************************************************************
.  SELQ - Perform Screen L                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELQ0000  UNPACK    SP70,SCANCHAR
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONC       * reset item desired
          CALL      SCRQ0000           * display screen C
.
SELQ0100  ADD       ONE,OPTIONC        * get next item
          BRANCH    ACCEPT,SELQ0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONC
.
SELQ0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONC,CVERT
          MOVE      OPTIONC,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELQ9500,SELQ9000:                       * quit, continue
                       SELQ1100                                 * execute option
          BRANCH    ACCEPT,SELQ0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELQ0100           * get another option
.
SELQ0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELQ0100
.
.---- option 1 ----
.
SELQ1100  
          KEYIN     *PCCOL:CVERT,*V2LON,SCANCHAR;
          PACK      SCANCHAR,SCANCHAR,SP70
          GOTO      SELQ0100
.
.
SELQ9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELQ9999
.
SELQ9500  MOVE      ONE,EXIT           * quit
.
SELQ9999  RETURN
.**********************************************************************
.  UPDQ - Delete accounts with SCANCHAR                Called By ML
.**********************************************************************
UPDQ0000  
          MOVE      ZERO,COUNTDIS
          MOVE      ZERO,F14
          PACK      KEY14,SP70
.
UPDQ1000  
          CALL      RSFMAM1
          CALL      RKFMAM1
          BRANCH    OVRCD,UPDQ9000
.
          ADD       ONE,COUNTDIS
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing fmsamaaf":
                      " : ",*V2LON,KEY14,*EF;
          ENDIF
.
          RESET     FMAMACCT,SCANPOS
          CMATCH    FMAMACCT,SCANCHAR
          IF        @EQUAL
            CALL      DEFMAM1
            WRITE     ERRFILE,SEQ;"Account ",FMAMLEDG,SLASH,FMAMACCT," deleted"
            ADD       ONE,F14
          ENDIF
.
          GOTO      UPDQ1000
.
UPDQ9000  DISPLAY   *P1:24,F14," Accounts Deleted - ";
          WRITE     ERRFILE,SEQ;F14," Accounts Deleted"
          CALL      HITENTER
.
UPDQ9999  RETURN
.******************************************************************************
.  SCRR - Display Screen R                       Called by SELR, redisps
.******************************************************************************
SCRR0000  
          DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON," 1",*HOFF,". Separate CC/Subj     (Y/N)  :":
                    *P50:4,"Separator Character :":
                    *P1:5,*V2LON," 2",*HOFF,". Subjective Code Length      :":
                    *P1:6,*V2LON," 3",*HOFF,". Cost Centre Code Length     :";
.
          MOVE      NO,KEY3
          STORE     YES,NSEPYN,KEY3
.
          DISPLAY   *P35:4,*V2LON,KEY3,*P72:4,NSEPCH:
                    *P35:5,NSBLEN,*P35:6,NCCLEN
.
SCRR9999  RETURN
.******************************************************************************
.  SELR - Perform Screen R                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELR0000  
.  FMSUUD2A  (separate CC/Subj 1=yes)
.  FMSUUD2B  (separater char)
.  FMSUUD3A  (subjective code length)
.  FMSUUD4A  (cost centre code length)
          CALL      RDFMCO51
          MOVE      FMSUUD2A,NSEPYN
          MOVE      FMSUUD2B,NSEPCH
          MOVE      FMSUUD3A,NSBLEN
          MOVE      FMSUUD4A,NCCLEN
          MOVE      FMSUUD2A,OSEPYN
          MOVE      FMSUUD2B,OSEPCH
          MOVE      FMSUUD3A,OSBLEN
          MOVE      FMSUUD4A,OCCLEN
.
          MOVE      ZERO,ACCEPT        * in accept mode
          MOVE      ZERO,OPTIONC       * reset item desired
          CALL      SCRR0000           * display screen C
.
SELR0100  ADD       ONE,OPTIONC        * get next item
          BRANCH    ACCEPT,SELR0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONC
.
SELR0110  MOVE      "35",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONC,CVERT
          MOVE      OPTIONC,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELR9500,SELR9000:                       * quit, continue
                       SELR1100,SELR1200,SELR1300               * execute option
          BRANCH    ACCEPT,SELR0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELR0100           * get another option
.
SELR0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELR0100
.
.---- option 1 ----
.
SELR1100  
          MOVE      "_",DEFYESNO
          CALL      YORN0000                     * get yes/no
          MOVE      FYESNO,NSEPYN
          MOVE      SP70,NSEPCH
          DISPLAY   *P72:CVERT,*EL;
          COMPARE   ONE,NSEPYN
          GOTO      SELR0100 IF NOT EQUAL        * no entered ?
.
          KEYIN     *P72:CVERT,"_":            * get separator
                    *P72:CVERT,*V2LON,NSEPCH,*EL
          PACK      NSEPCH,NSEPCH,SP70
          GOTO      SELR0100
.
.---- option 2 ----
.
SELR1200  
          KEYIN     *PCCOL:CVERT,"__",*EL:
                    *PCCOL:CVERT,*V2LON,NSBLEN:
                    *PCCOL:CVERT,*DV,NSBLEN
          COMPARE   NSBLEN,ZERO
          GOTO      SELR0100 IF LESS   * entry greater than zero
.
          DISPLAY   *P1:24,*EL,*B,"Entry Must Be Greater Than Zero - ";
          CALL      HITENTER
          GOTO      SELR1200
.
.---- option 3 ----
.
SELR1300  
          KEYIN     *PCCOL:CVERT,"__",*EL:
                    *PCCOL:CVERT,*V2LON,NCCLEN:
                    *PCCOL:CVERT,*DV,NCCLEN
          COMPARE   NCCLEN,ZERO
          GOTO      SELR0100 IF LESS   * entry greater than zero
.
          DISPLAY   *P1:24,*EL,*B,"Entry Must Be Greater Than Zero - ";
          CALL      HITENTER
          GOTO      SELR1300
.
.
SELR9000  MOVE      ZERO,EXIT          * continue
          MOVE      NSBLEN,F2
          ADD       NCCLEN,F2
          COMPARE   "12",F2
          GOTO      SELR9999 IF LESS   * lengths < 12 ?
.
          DISPLAY   *P1:24,*EL,*B:
                    "Sum of Subj and CC Code Lengths Must Be Less Than 12 - ";
          CALL      HITENTER
          GOTO      SELR0100
.
SELR9500  MOVE      ONE,EXIT           * quit
.
SELR9999  RETURN
.**********************************************************************
.  UPDR - Delete accounts with SCANCHAR                Called By ML
.**********************************************************************
UPDR0000  
          CALL      RDFMCO51
          MOVE      NSEPYN,FMSUUD2A
          MOVE      NSEPCH,FMSUUD2B
          MOVE      NSBLEN,FMSUUD3A
          MOVE      NCCLEN,FMSUUD4A
          CALL      WRFMCO51
.
          UNPACK    SP70,FMSTFILE,FMSRFILE,FMSPFILE,FMSSFILE
          MOVE      ZERO,COUNTDIS
          MOVE      ZERO,F14
          PACK      KEY26,SP70
          CALL      RSFMXC1
.
UPDR1000  
          CALL      RKFMXC1
          BRANCH    OVRCD,UPDR9000
.
          PACK      SUBJCODE,FMXCSUB,SP70
          PACK      COSTCODE,FMXCCOS,SP70
.
          MOVE      OSEPYN,FMSUUD2A
          MOVE      OSEPCH,FMSUUD2B
          MOVE      OSBLEN,FMSUUD3A
          MOVE      OCCLEN,FMSUUD4A
          CALL      BCOD0000
          PACK      OLDACCT,ACCOUNT,SP70
.
          MOVE      NSEPYN,FMSUUD2A
          MOVE      NSEPCH,FMSUUD2B
          MOVE      NSBLEN,FMSUUD3A
          MOVE      NCCLEN,FMSUUD4A
          CALL      BCOD0000
.
          MATCH     ACCOUNT,OLDACCT         * skip if no change !
          GOTO      UPDR1000 IF EQUAL
.
          PACK      KEY14,FMXCLED,OLDACCT,SP70
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMAM1
          BRANCH    OVRCD,UPDR1000
.
          ADD       ONE,COUNTDIS
          IF        (COUNTDIS%100=1)
            DISPLAY   *P1:24,"Processing fmsamaaf":
                      " : ",*V2LON,KEY14,*EF;
          ENDIF
.
          CALL      MODA0000                * modify accounts
.
          PACK      KEY14,FMXCLED,ACCOUNT,SP70
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      UPFMAM1
          ADD       ONE,F14
.
          GOTO      UPDR1000
.
UPDR9000  DISPLAY   *P1:24,F14," Accounts modified - ";
          WRITE     ERRFILE,SEQ;F14," Accounts modified"
          CALL      HITENTER
.
UPDR9999  RETURN
.******************************************************************************
.  SCRS - Display Screen S                       Called by SELS, redisps
.******************************************************************************
SCRS0000  MOVE      "14",SCRNO
          DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Batch to Update      : ":
                          *V2LON,FMBCBAT:
                    *P1:5," 2",*HOFF,". Batch Accrual Date   : ":
                          *V2LON:
                    *P1:6," 3",*HOFF,". Batch Cash    Date   : ":
                          *V2LON;
.
SCRS9999  RETURN
.******************************************************************************
.  SELS - Perform Screen S                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SELS0000  
          UNPACK    SP70,FMBCBAT
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONS       * reset item desired
          CALL      SCRS0000           * display screen S
.
SELS0100  ADD       ONE,OPTIONS        * get next item
          BRANCH    ACCEPT,SELS0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONS
.
SELS0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONS,CVERT
          MOVE      OPTIONS,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELS9500,SELS9000:                       * quit, continue
                       SELS1100,SELS1200,SELS1300               * execute option
          BRANCH    ACCEPT,SELS0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELS0100           * get another option
.
SELS0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELS0100
.
.---- option 1 ----
.
SELS1100  CALL      KBCFFM00                * get data
          BRANCH    EXIT,SELS1100,SELS9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMBCBAT;
          MOVE      FMBCPDAT,ACCDATE
          MOVE      FMBCCDAT,CASDATE
          MOVE      ONE,ACCEPT
          GOTO      SELS0100
.
.---- option 2 ----
.
SELS1200  
          UNPACK    ACCDATE,CCENT,CYEAR,CMON,CDAY
          IF        ACCEPT=0
            CALL      KEYDATE
            PACK      ACCDATE,CCENT,CYEAR,CMON,CDAY
          ELSE
            CALL      PACDATE
            DISPLAY   *PCCOL:CVERT,*V2LON,CPCDATE
          ENDIF
          GOTO      SELS0100
.
.---- option 3 ----
.
SELS1300  
          UNPACK    CASDATE,CCENT,CYEAR,CMON,CDAY
          IF        ACCEPT=0
            CALL      KEYDATE
            PACK      CASDATE,CCENT,CYEAR,CMON,CDAY
          ELSE
            CALL      PACDATE
            DISPLAY   *PCCOL:CVERT,*V2LON,CPCDATE
          ENDIF
          GOTO      SELS0100
.
.
SELS9000  MOVE      ZERO,EXIT          * continue
          CALL      UPDS0000
          GOTO      SELS9999
.
SELS9500  MOVE      ONE,EXIT           * quit
.
SELS9999  RETURN
.**********************************************************************
.  REPT - Report on missing fmstcfaf links             Called By SELS
.**********************************************************************
REPT0000  CALL      RDFMCO50                     * read parameters
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          DISPLAY   *P1:4,*EF,"Create Report for missing fmstcfaf records":
                    *P1:24,*EL,"Ledger/Account: "
          PACK      KEY14,SP70
          CALL      RSFMAM1
REPT1000  CALL      RKFMAM1
          BRANCH    OVRCD,REPT9000
.
          DISPLAY   *P17:24,FMAMLEDG,SLASH,FMAMACCT
.
          CALL      GSBA0000                     * Get Subjective Code
.
          PACK      KEY14,FMAMLEDG,RSUBCODE,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,REPT1000
.
          MATCH     "6",FMSATYPE
          GOTO      REPT1000 IF NOT LESS
.
          MATCH     FMSAADDT,SP70
          GOTO      REPT1000 IF EQUAL
.
          IF        FMSUUD2A=1
            PACK      RTOTACCT,RCOSCODE,FMSUUD2B,FMSAADDT,SP70
          ELSE
            PACK      RTOTACCT,RCOSCODE,FMSAADDT,SP70
          ENDIF
.
          PACK      KEY33,FMAMLEDG,FMAMACCT,FMAMLEDG,RTOTACCT,SP70
          CALL      RSFMTC2
          CALL      RPFMTC2
          CALL      RKFMTC2
          BRANCH    OVRCD,REPT1000
.
          PACK      KEY28,FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,FMTCASEQ
          MATCH     KEY28,KEY33
          GOTO      REPT1000 IF EQUAL
.
          IF        CPAGENO=0
            MOVE      "99",CLNO
          ENDIF
          IF        CLNO>56
            CALL      RHEAD000
          ENDIF
          PRINT     *01,FMTCSLED,SLASH,FMTCSACC,*21,FMAMLEDG,SLASH,RTOTACCT
          ADD       ONE,CLNO
          GOTO      REPT1000
.
REPT9000  PRINT     *01," ---------------------    ":
                    *34,"END  OF  REPORT    --------------------- "
.
          DISPLAY   *P1:24,*EL,"Print Process Complete - ";
          CALL      HITENTER
.
REPT9999  RETURN
.**********************************************************************
.  HEAD - Head of Report              
.**********************************************************************
RHEAD000  MOVE      " - Missing Accounts ",CPHDROPT
          CALL      HEAD80
          PRINT     *N:
                    *01,"Sub Ledger/Account ":
                    *21,"Total Ledger/Account ",*N:
                    *01,"------------------ ":
                    *21,"-------------------- "
          MOVE      SEVEN,CLNO
.
RHEAD999  RETURN
.**********************************************************************
.  GSBA - Get Subjective Information
.**********************************************************************
GSBA0000
          IF        FMSUUD4A=1
            UNPACK    FMAMACCT,KEY1,KEY12
          ELSE
          IF        FMSUUD4A=2
            UNPACK    FMAMACCT,KEY2,KEY12
          ELSE
          IF        FMSUUD4A=3
            UNPACK    FMAMACCT,KEY3,KEY12
          ELSE
          IF        FMSUUD4A=4
            UNPACK    FMAMACCT,KEY4,KEY12
          ELSE
          IF        FMSUUD4A=5
            UNPACK    FMAMACCT,KEY5,KEY12
          ELSE
          IF        FMSUUD4A=6
            UNPACK    FMAMACCT,KEY6,KEY12
          ELSE
          IF        FMSUUD4A=7
            UNPACK    FMAMACCT,KEY7,KEY12
          ELSE
          IF        FMSUUD4A=8
            UNPACK    FMAMACCT,KEY8,KEY12
          ELSE
          IF        FMSUUD4A=9
            UNPACK    FMAMACCT,KEY9,KEY12
          ELSE
          IF        FMSUUD4A=10
            UNPACK    FMAMACCT,KEY10,KEY12
          ELSE
          IF        FMSUUD4A=11
            UNPACK    FMAMACCT,KEY11,KEY12
          ELSE
            MOVE      FMAMACCT,KEY12   
            MOVE      SP70,KEY12
          ENDIF
          ENDIF
          ENDIF
          ENDIF
          ENDIF
          ENDIF
          ENDIF
          ENDIF
          ENDIF
          ENDIF
          ENDIF
.
          IF        FMSUUD2A=1
            UNPACK    KEY12,ANS,RSUBCODE
          ELSE
            MOVE      KEY12,RSUBCODE
          ENDIF
.
          LOAD      RCOSCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6,KEY7:
                                      KEY8,KEY9,KEY10,KEY11,KEY12
.
GSBA9999  RETURN
.**********************************************************************
.  UPDS - Update for screen S                          Called By SELS
.**********************************************************************
UPDS0000  UNPACK    SP70,FMSTFILE,FMSRFILE
          DISPLAY   *P1:24,"Processing : ",*V2LON,FMBCBAT,*EF;
.
          PACK      KEY5,FMBCBAT,SP70
          CALL      RDFMBC1
          BRANCH    OVRCD,UPDS0100
.
          PACK      KEY2,FMBCLED,SP70
          CALL      RDFMLA1
.
          MOVE      FMBCPDAT,WORKDATE
          CALL      CFYR0000
          MOVE      CURYEAR,ACCYEAR
          MOVE      PERCNT,ACCPER1
.
          MOVE      ACCDATE,WORKDATE
          CALL      CFYR0000
          MOVE      PERCNT,ACCPER2
          MATCH     CURYEAR,ACCYEAR
          IF        !@EQUAL
            DISPLAY   *P1:24,*B,*EF,"Cant modify accross financial years - ";
            CALL      HITENTER
            GOTO      UPDS9999
          ENDIF
.
          MOVE      FMBCCDAT,WORKDATE
          CALL      CFYR0000
          MOVE      CURYEAR,CASYEAR
          MOVE      PERCNT,CASPER1
.
          MOVE      CASDATE,WORKDATE
          CALL      CFYR0000
          MOVE      PERCNT,CASPER2
          MATCH     CURYEAR,CASYEAR
          IF        !@EQUAL
            DISPLAY   *P1:24,*B,*EF,"Cant modify accross financial years - ";
            CALL      HITENTER
            GOTO      UPDS9999
          ENDIF
          GOTO      UPDS0200
.
UPDS0100
          PACK      KEY2,SP70
          CALL      RSFMLA1
          CALL      RKFMLA1
          MOVE      FMLACYRR,ACCYEAR
          MOVE      FMLACYRR,CASYEAR
.
UPDS0200
.
.---- update transactions ----
.
          PACK      FILENAME,FMST,ACCYEAR,SP70
.
          MATCH     FILENAME,FMSTFILE       * file already open ?
          GOTO      UPDS1900 IF EQUAL
.
          MOVE      FILENAME,FMSTFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FMSTFILE
          TRAPCLR   IO
          LOAD      FMSTFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDS2800
.
UPDS1900
          PACK      FILENAME,FMSP,ACCYEAR,SP70
          MOVE      FILENAME,FMSPFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FMSPFILE
          TRAPCLR   IO
          LOAD      FMSPFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDS2800
.
          PACK      KEY10,FMBCBAT,SP70
.
UPDS2000  CALL      RSFMTR1
          CALL      RKFMTR1
          BRANCH    OVRCD,UPDS2800
          MATCH     FMBCBAT,FMTRBAT
          GOTO      UPDS2800 IF NOT EQUAL
          PACK      KEY10,FMTRBAT,FMTRUNIQ,SP70
.
          PACK      FMTRPDAT,ACCDATE,SP70
          CALL      UPFMTR1
.
          CALL      CFPS0000
          PACK      KEY14,FMTRLEDG,FMTRACCT,SP70
          CALL      RDFMFP1
          IF        OVRCD=0 & ACCPER1<>ACCPER2
            LOAD      F12P2,ACCPER1,FMFPA01,FMFPA02,FMFPA03,FMFPA04,FMFPA05:
                 FMFPA06,FMFPA07,FMFPA08,FMFPA09,FMFPA10,FMFPA11,FMFPA12,FMFPA13
            SUB       FMTRAMT,F12P2
            STORE     F12P2,ACCPER1,FMFPA01,FMFPA02,FMFPA03,FMFPA04,FMFPA05:
                 FMFPA06,FMFPA07,FMFPA08,FMFPA09,FMFPA10,FMFPA11,FMFPA12,FMFPA13
.
            LOAD      F12P2,ACCPER2,FMFPA01,FMFPA02,FMFPA03,FMFPA04,FMFPA05:
                 FMFPA06,FMFPA07,FMFPA08,FMFPA09,FMFPA10,FMFPA11,FMFPA12,FMFPA13
            ADD       FMTRAMT,F12P2
            STORE     F12P2,ACCPER2,FMFPA01,FMFPA02,FMFPA03,FMFPA04,FMFPA05:
                 FMFPA06,FMFPA07,FMFPA08,FMFPA09,FMFPA10,FMFPA11,FMFPA12,FMFPA13
            CALL      UPDOL000
            CALL      UPFMFP1
.
            MOVE      ZERO,SKIPFMTU
            MOVE      FMTRLEDG,TOTLEDG
            MOVE      FMTRACCT,TOTACCNT
            MOVE      ACCYEAR,UTYPE
            CALL      SETU0000         * set for update
          ENDIF
          GOTO      UPDS2000
.
.---- update cash transactions (Cash File) ----
.
UPDS2800  
          PACK      FILENAME,FMSR,CASYEAR,SP70
.
          MATCH     FILENAME,FMSRFILE       * file already open ?
          GOTO      UPDS2900 IF EQUAL
.
          MOVE      FILENAME,FMSRFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSCTRA1,FMSRFILE
          TRAPCLR   IO
          LOAD      FMSRFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDS3800
.
UPDS2900  
          PACK      FILENAME,FMSP,CASYEAR,SP70
          MOVE      FILENAME,FMSPFILE       * open file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FMSPFILE
          TRAPCLR   IO
          LOAD      FMSPFILE,OVRCD,SP70
          BRANCH    OVRCD,UPDS3800
.
          PACK      KEY10,FMBCBAT,SP70
.
UPDS3000  CALL      RSFMCT1
          CALL      RKFMCT1
          BRANCH    OVRCD,UPDS3800
          MATCH     FMBCBAT,FMCTBAT
          GOTO      UPDS3800 IF NOT EQUAL
          PACK      KEY10,FMCTBAT,FMCTUNIQ,SP70
.
          PACK      FMCTPDAT,CASDATE,SP70
          CALL      UPFMCT1
.
          CALL      CFPS0000
          PACK      KEY14,FMCTLEDG,FMCTACCT,SP70
          CALL      RDFMFP1
          IF        OVRCD=0 & CASPER1<>CASPER2
            LOAD      F12P2,CASPER1,FMFPC01,FMFPC02,FMFPC03,FMFPC04,FMFPC05:
                 FMFPC06,FMFPC07,FMFPC08,FMFPC09,FMFPC10,FMFPC11,FMFPC12,FMFPC13
            SUB       FMCTAMT,F12P2
            STORE     F12P2,CASPER1,FMFPC01,FMFPC02,FMFPC03,FMFPC04,FMFPC05:
                 FMFPC06,FMFPC07,FMFPC08,FMFPC09,FMFPC10,FMFPC11,FMFPC12,FMFPC13
.
            LOAD      F12P2,CASPER2,FMFPC01,FMFPC02,FMFPC03,FMFPC04,FMFPC05:
                 FMFPC06,FMFPC07,FMFPC08,FMFPC09,FMFPC10,FMFPC11,FMFPC12,FMFPC13
            ADD       FMCTAMT,F12P2
            STORE     F12P2,CASPER2,FMFPC01,FMFPC02,FMFPC03,FMFPC04,FMFPC05:
                 FMFPC06,FMFPC07,FMFPC08,FMFPC09,FMFPC10,FMFPC11,FMFPC12,FMFPC13
            CALL      UPDOL000
            CALL      UPFMFP1
.
            MOVE      ZERO,SKIPFMTU
            MOVE      FMCTLEDG,TOTLEDG
            MOVE      FMCTACCT,TOTACCNT
            MOVE      CASYEAR,UTYPE
            CALL      SETU0000         * set for update
          ENDIF
          GOTO      UPDS3000
.
UPDS3800  
.
.---- update creditor transactions ----
.
          PACK      KEY40,FMBCBAT,SP70
          CALL      RDAPBM1
          IF        OVRCD=0
            PACK      APBMADT,ACCDATE,SP70
            CALL      UPAPBM1
          ENDIF
.
          PACK      FMBCPDAT,ACCDATE,SP70
          PACK      FMBCCDAT,CASDATE,SP70
          CALL      UPFMBC1
.
          CALL      CTUP0000           * Update all changed accounts
.
UPDS9999  RETURN
.**********************************************************************
.  UPDOL- Calc dollars and thousands
.**********************************************************************
UPDOL000  MOVE      FMFPA01,FMFPA01D
          ASSIGN    FMFPA01/1000,F12P2
          MOVE      F12P2,FMFPA01T
          MOVE      FMFPA02,FMFPA02D
          ASSIGN    FMFPA02/1000,F12P2
          MOVE      F12P2,FMFPA02T
          MOVE      FMFPA03,FMFPA03D
          ASSIGN    FMFPA03/1000,F12P2
          MOVE      F12P2,FMFPA03T
          MOVE      FMFPA04,FMFPA04D
          ASSIGN    FMFPA04/1000,F12P2
          MOVE      F12P2,FMFPA04T
          MOVE      FMFPA05,FMFPA05D
          ASSIGN    FMFPA05/1000,F12P2
          MOVE      F12P2,FMFPA05T
          MOVE      FMFPA06,FMFPA06D
          ASSIGN    FMFPA06/1000,F12P2
          MOVE      F12P2,FMFPA06T
          MOVE      FMFPA07,FMFPA07D
          ASSIGN    FMFPA07/1000,F12P2
          MOVE      F12P2,FMFPA07T
          MOVE      FMFPA08,FMFPA08D
          ASSIGN    FMFPA08/1000,F12P2
          MOVE      F12P2,FMFPA08T
          MOVE      FMFPA09,FMFPA09D
          ASSIGN    FMFPA09/1000,F12P2
          MOVE      F12P2,FMFPA09T
          MOVE      FMFPA10,FMFPA10D
          ASSIGN    FMFPA10/1000,F12P2
          MOVE      F12P2,FMFPA10T
          MOVE      FMFPA11,FMFPA11D
          ASSIGN    FMFPA11/1000,F12P2
          MOVE      F12P2,FMFPA11T
          MOVE      FMFPA12,FMFPA12D
          ASSIGN    FMFPA12/1000,F12P2
          MOVE      F12P2,FMFPA12T
          MOVE      FMFPA13,FMFPA13D
          ASSIGN    FMFPA13/1000,F12P2
          MOVE      F12P2,FMFPA13T
.
          MOVE      FMFPC01,FMFPC01D
          ASSIGN    FMFPC01/1000,F12P2
          MOVE      F12P2,FMFPC01T
          MOVE      FMFPC02,FMFPC02D
          ASSIGN    FMFPC02/1000,F12P2
          MOVE      F12P2,FMFPC02T
          MOVE      FMFPC03,FMFPC03D
          ASSIGN    FMFPC03/1000,F12P2
          MOVE      F12P2,FMFPC03T
          MOVE      FMFPC04,FMFPC04D
          ASSIGN    FMFPC04/1000,F12P2
          MOVE      F12P2,FMFPC04T
          MOVE      FMFPC05,FMFPC05D
          ASSIGN    FMFPC05/1000,F12P2
          MOVE      F12P2,FMFPC05T
          MOVE      FMFPC06,FMFPC06D
          ASSIGN    FMFPC06/1000,F12P2
          MOVE      F12P2,FMFPC06T
          MOVE      FMFPC07,FMFPC07D
          ASSIGN    FMFPC07/1000,F12P2
          MOVE      F12P2,FMFPC07T
          MOVE      FMFPC08,FMFPC08D
          ASSIGN    FMFPC08/1000,F12P2
          MOVE      F12P2,FMFPC08T
          MOVE      FMFPC09,FMFPC09D
          ASSIGN    FMFPC09/1000,F12P2
          MOVE      F12P2,FMFPC09T
          MOVE      FMFPC10,FMFPC10D
          ASSIGN    FMFPC10/1000,F12P2
          MOVE      F12P2,FMFPC10T
          MOVE      FMFPC11,FMFPC11D
          ASSIGN    FMFPC11/1000,F12P2
          MOVE      F12P2,FMFPC11T
          MOVE      FMFPC12,FMFPC12D
          ASSIGN    FMFPC12/1000,F12P2
          MOVE      F12P2,FMFPC12T
          MOVE      FMFPC13,FMFPC13D
          ASSIGN    FMFPC13/1000,F12P2
          MOVE      F12P2,FMFPC13T
.
UPDOL999  RETURN
.**********************************************************************
.  MODA - Modify Account Code
.**********************************************************************
MODA0000  PACK      KEY14,FMAMLEDG,OLDACCT,SP70
          PACK      KEY33,KEY14,SP70
.
MODA0100  CALL      RSFMTC1
          CALL      RKFMTC1
          BRANCH    OVRCD,MODA0190
          PACK      KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC,SP70
          MATCH     KEY33,KEY14
          GOTO      MODA0190 IF NOT EQUAL
.
          MOVE      ACCOUNT,FMTCTACC
          CALL      UPFMTC1
          GOTO      MODA0100
.
MODA0190  PACK      KEY14,FMAMLEDG,OLDACCT,SP70
          PACK      KEY33,KEY14,SP70
.
MODA0200  CALL      RSFMTC2
          CALL      RKFMTC2
          BRANCH    OVRCD,MODA0290
          PACK      KEY33,FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,FMTCASEQ,SP70
          MATCH     KEY33,KEY14
          GOTO      MODA0290 IF NOT EQUAL
.
          MOVE      ACCOUNT,FMTCSACC
          CALL      UPFMTC2
          GOTO      MODA0200
.
MODA0290  PACK      KEY14,FMAMLEDG,OLDACCT,SP70
          PACK      KEY26,KEY14,SP70
.
MODA0300  CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,MODA0390
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MATCH     KEY26,KEY14
          GOTO      MODA0390 IF NOT EQUAL
.
          MOVE      ACCOUNT,FMRFACC
          CALL      UPFMRF2
          GOTO      MODA0300
.
MODA0390  
.
MODA9999  RETURN
.**********************************************************************
.  CLRS - Clear screen                                 Called By lots
.**********************************************************************
CLRS0000  MOVE      ZERO,COUNTDIS
          MOVE      STARTSCR,LNO
          DISPLAY   *P1:LNO,*EF;
.
CLRS9999  RETURN
.**********************************************************************
.  INCS - Increment line on screen                     Called By lots
.**********************************************************************
INCS0000  ADD       ONE,LNO
          LOAD      LNO,LNO,STARTSCR,STARTSCR,STARTSCR:
                            STARTSCR,STARTSCR:
                            LNO,LNO,LNO,LNO,LNO:
                            LNO,LNO,LNO,LNO,LNO:
                            LNO,LNO,LNO,LNO,LNO:
                            SIXTY,SIXTY,SIXTY,SIXTY,SIXTY,SIXTY,SIXTY
          COMPARE   SIXTY,LNO
          CALL      CLRS0000 IF NOT LESS
.
INCS9999  RETURN
.**********************************************************************
. NEZTMP0A IO routines                           Called by Lots
.**********************************************************************
RSNEZA1   RESET     KEY17
          READ      NEZTMP0A,KEY17;;
          RETURN
.
RANEZA1   RESET     KEY17
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY17;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDNEZA1   RESET     KEY17
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY17;NEZACRED,NEZACODE,NEZAAMT:
                                   NEZACNUM,NEZABUT1,NEZABUT2:
                                   NEZABUT3,NEZABUT4,NEZABUT5
          GOTO      OVERCOND IF OVER
          RETURN
.
RKNEZA1   MOVE      ZERO,OVRCD
          READKS    NEZTMP0A;NEZACRED,NEZACODE,NEZAAMT:
                                   NEZACNUM,NEZABUT1,NEZABUT2:
                                   NEZABUT3,NEZABUT4,NEZABUT5
          GOTO      OVERCOND IF OVER
          RETURN
.
RPNEZA1   MOVE      ZERO,OVRCD
          READKP    NEZTMP0A;NEZACRED,NEZACODE,NEZAAMT:
                                   NEZACNUM,NEZABUT1,NEZABUT2:
                                   NEZABUT3,NEZABUT4,NEZABUT5
          GOTO      OVERCOND IF OVER
          RETURN
.
UPNEZA1   UPDATE    NEZTMP0A;NEZACRED,NEZACODE,NEZAAMT:
                                   NEZACNUM,NEZABUT1,NEZABUT2:
                                   NEZABUT3,NEZABUT4,NEZABUT5
          RETURN
.
WRNEZA1   RESET     KEY17
          WRITE     NEZTMP0A,KEY17;NEZACRED,NEZACODE,NEZAAMT:
                                   NEZACNUM,NEZABUT1,NEZABUT2:
                                   NEZABUT3,NEZABUT4,NEZABUT5
          RETURN
.
DENEZA1   RESET     KEY17
          DELETE    NEZTMP0A,KEY17
          RETURN
.
.
RSNEZB1   RESET     KEY2
          READ      NEZTMP0B,KEY2;;
          RETURN
.
RANEZB1   RESET     KEY2
          MOVE      ZERO,OVRCD
          READ      NEZTMP0B,KEY2;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDNEZB1   RESET     KEY2
          MOVE      ZERO,OVRCD
          READ      NEZTMP0B,KEY2;NEZBLEDG,NEZBAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKNEZB1   MOVE      ZERO,OVRCD
          READKS    NEZTMP0B;NEZBLEDG,NEZBAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RPNEZB1   MOVE      ZERO,OVRCD
          READKP    NEZTMP0B;NEZBLEDG,NEZBAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
UPNEZB1   UPDATE    NEZTMP0B;NEZBLEDG,NEZBAMT
          RETURN
.
WRNEZB1   RESET     KEY2
          WRITE     NEZTMP0B,KEY2;NEZBLEDG,NEZBAMT
          RETURN
.
DENEZB1   RESET     KEY2
          DELETE    NEZTMP0B,KEY2
          RETURN
.-------------------------------------------------------------------------------
. Normal Code Keyin - Code May or may not exist
.-------------------------------------------------------------------------------
XAMAFM00  MOVE      UNDLN70,FMAMACCT
          KEYIN     *PCCOL:CVERT,*EL,*DV,FMAMACCT:
                    *PCCOL:CVERT,*V2LON,FMAMACCT: 
                    *PCCOL:CVERT,*EL,*DV,FMAMACCT
.
          ENDSET    FMAMACCT
          APPEND    SP70,FMAMACCT
          RESET     FMAMACCT
          MATCH     SP70,FMAMACCT             * System Code Spaces so exit set
          GOTO      XAMAFM90 IF EQUAL
.
          CMATCH    EXITCHAR,FMAMACCT         * Exit Selected
          GOTO      XAMAFM95 IF EQUAL
.
          CMATCH    QUEST,FMAMACCT            * Help Required  
          GOTO      XAMAFM10 IF NOT EQUAL
          CALL      QFMAMA00                  * Display List Of FMAMACCTs
          PACK      CDATASAV,FMAMACCT,SP70    * save account
          CALL      RAMAFM00                  * Redisplay Routine
          PACK      FMAMACCT,CDATASAV,SP70    * restore account
.
          ENDSET    FMAMACCT
          APPEND    SP70,FMAMACCT
          RESET     FMAMACCT
          MATCH     SP70,FMAMACCT             * System Code Spaces so exit set
          GOTO      XAMAFM00 IF EQUAL
.
XAMAFM10  
          MOVE      ZERO,EXIT                 * valid entry
          GOTO      XAMAFM99
.
XAMAFM90  MOVE      ONE,EXIT                  * null entry so exit is set
          GOTO      XAMAFM99
.
XAMAFM95  MOVE      TWO,EXIT                  * Exit character entered    
.
XAMAFM99  RETURN
.******************************************************************************
.  Redisplays         
.******************************************************************************
RAMAFM00  
RBCFFM00  
RBNKFM00  
RCHQFM00  
RLMCFM00  
RLMAFM00  
RSBAFM00  
          BRANCH    SCRNO,RDISA000,RDISB000,RDISC000,RDISF000,RDISG000,RDISH000:
                          RDISI000,RDISJ000,RDISK000,RDISL000,RDISM000,RDISN000:
                          RDISP000,RDISS000
          COMPARE   "99",SCRNO
          GOTO      RDISRANG IF EQUAL
.
RDISA000  CALL      SCRA0000
          RETURN
.
RDISB000  CALL      SCRB0000
          RETURN
.
RDISC000  CALL      SCRC0000
          RETURN
.
RDISF000  CALL      SCRF0000
          RETURN
.
RDISG000  CALL      SCRG0000
          RETURN
.
RDISH000  CALL      SCRH0000
          RETURN
.
RDISI000  CALL      SCRI0000
          RETURN
.
RDISJ000  CALL      SCRJ0000
          RETURN
.
RDISK000  CALL      SCRK0000
          RETURN
.
RDISL000  CALL      SCRL0000
          RETURN
.
RDISM000  CALL      SCRM0000
          RETURN
.
RDISN000  CALL      SCRN0000
          RETURN
.
RDISP000  CALL      SCRP0000
          RETURN
.
RDISS000  CALL      SCRS0000
          RETURN
.
RDISRANG  CALL      SCRZ0000
          RETURN
.
.******************************************************************************
.-------------------------------------------------------------------------------
.   System    :   FMS Financial System  
.                           
.   Program   :   FMSBCFFM 
.                            
.   Routines  :   XBCFFM00 Keyin Batch   - Returns a valid record
.   
.   Return    :   EXIT = 1 null entry EXIT = 2 EXITCHAR entered
.
.   Internal  :   HBCFFM00 Help Display for Batch  
.                            
.   Redisplay :   RBCFFM00 Screen Redisplay Called for Batch  
.-------------------------------------------------------------------------------
.   Mods      :    
.-------------------------------------------------------------------------------
. Normal Code Keyin - Code Must Exist Exit = 1 if Null Entry
.-------------------------------------------------------------------------------
XBCFFM00  MOVE      UNDLN70,FMBCBAT
          KEYIN     *PCCOL:CVERT,*EL,*DV,FMBCBAT:
                    *PCCOL:CVERT,*V2LON,*ZF,*JR,FMBCBAT
.
          ENDSET    FMBCBAT
          APPEND    SP70,FMBCBAT
          RESET     FMBCBAT
          MATCH     SP70,FMBCBAT             * System Code Spaces so exit set
          GOTO      XBCFFM90 IF EQUAL
          MATCH     "0000000000",FMBCBAT     * System Code Zeros so exit set
          GOTO      XBCFFM90 IF EQUAL
.
          MOVE      "0000000000",KEY4
          PACK      KEY5,KEY4,EXITCHAR
          MATCH     KEY5,FMBCBAT         * Exit Selected
          GOTO      XBCFFM95 IF EQUAL
.
          PACK      KEY5,KEY4,QUEST
          MATCH     KEY5,FMBCBAT            * Help Required  
          GOTO      XBCFFM10 IF NOT EQUAL
.
          CALL      HBCFFM00                  * Display List Of FMBCBATs
          PACK      CDATASAV,FMBCBAT,SP70    * save data entered
          CALL      RBCFFM00                  * Redisplay Routine
          PACK      FMBCBAT,CDATASAV,SP70    * restore data entered
.
          ENDSET    FMBCBAT
          APPEND    SP70,FMBCBAT
          RESET     FMBCBAT
          MATCH     SP70,FMBCBAT             * System Code Spaces so exit set
          GOTO      XBCFFM00 IF EQUAL
.
XBCFFM10  DISPLAY   *PCCOL:CVERT,*V2LON,FMBCBAT
          PACK      KEY5,FMBCBAT,SP70
          CALL      RDFMBC1                                   
          BRANCH    OVRCD,XBCFFM80
          MOVE      ZERO,EXIT                 * no entry so exit is set
          GOTO      XBCFFM99
.
XBCFFM80  
          MOVE      ZERO,EXIT                 * invalid but continue anyway
          GOTO      XBCFFM99
.
XBCFFM90  MOVE      ONE,EXIT                  * null entry so exit is set
          GOTO      XBCFFM99
.
XBCFFM95  MOVE      TWO,EXIT                  * Exit character entered    
.
XBCFFM99  RETURN
.
APBA0000  DISPLAY   *P1:3,*EF,*P1:4,"Starting Batch Number : ":
                              *P1:5,"Ending   Batch Number : "
.
          MOVE      SP5,BATCH1
          MOVE      TWENTY5,CCOL
          MOVE      FOUR,CVERT
          CALL      KAPBMA00
          BRANCH    EXIT,APBA0100,APBA9999
.
          MOVE      APBMBCH,BATCH1
.
APBA0100  MOVE      "~~~~~",BATCH2
          MOVE      FIVE,CVERT
          CALL      KAPBMA00
          BRANCH    EXIT,APBA0200,APBA9999
.
          MOVE      APBMBCH,BATCH2
.
APBA0200  MATCH     BATCH1,BATCH2
          GOTO      APBA0220 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Starting Batch must be less than ":
                    "the Ending Batch. ";
          CALL      HITENTER
          GOTO      APBA0000
.
APBA0220  CALL      CONTQST
          BRANCH    CEXIT,APBA0250,APBA0000,APBA9999
.
APBA0250  DISPLAY   *P1:24,*EL;
          MOVE      SIXTY,CLNO
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
          PACK      KEY5,BATCH1,SP70
          CALL      RDAPBM1
          COMPARE   ZERO,OVRCD
          GOTO      APBA1050 IF EQUAL
.
APBA1000  CALL      RKAPBM1
          BRANCH    OVRCD,APBA9999
.
APBA1050  DISPLAY   *P20:24,*EL,APBMBCH
.
          MATCH     APBMBCH,BATCH2
          GOTO      APBA9999 IF LESS
.
          MATCH     SP8,APBMUDT
          GOTO      APBA1000 IF EQUAL
.
          MATCH     "00000000",APBMUDT
          GOTO      APBA1000 IF EQUAL
.
          MOVE      ZERO,IMSTOTAL
          MOVE      ZERO,INPTOTAL
.
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
.
APBA1100  CALL      RKAPIM1
          BRANCH    OVRCD,APBA2000
.
          MATCH     APBMBCH,APIMBCH
          GOTO      APBA2000 IF NOT EQUAL
.
          ASSIGN    APIMTOT-APIMDIS+APIMGST+IMSTOTAL,IMSTOTAL
          GOTO      APBA1100
.
APBA2000  PACK      KEY51,APBMBCH,SP70
          CALL      RSAPIN1
.
APBA2100  CALL      RKAPIN1
          BRANCH    OVRCD,APBA2900
.
          MATCH     APBMBCH,APINBCH
          GOTO      APBA2900 IF NOT EQUAL
.
          ASSIGN    APINAMT+APINGST+INPTOTAL,INPTOTAL
          GOTO      APBA2100
.
APBA2900  
          COMPARE   APBMTOT,IMSTOTAL
          GOTO      APBA3000 IF NOT EQUAL
          COMPARE   IMSTOTAL,INPTOTAL
          GOTO      APBA1000 IF EQUAL
.
APBA3000  ADD       ONE,CLNO
          COMPARE   "56",CLNO
          CALL      APBA4000 IF NOT LESS
.
          PRINT     *1,APBMBCH,*10,APBMTOT,*30,IMSTOTAL,*50,INPTOTAL
          ADD       ONE,CLNO
          GOTO      APBA1000
.
APBA4000  CALL      HEAD132
          PRINT     *1,"BATCH",*14,"BATCH TOTAL",*37,"IMS TOTAL":
                    *57,"INP TOTAL"
          ADD       ONE,CLNO
          RETURN
.
APBA9999  RETURN
.
APGL0000  DISPLAY   *P1:4,*EF,*P1:6,"Ledger/Account : ":
                    *P1:8,"Financial Year : "
          MOVE      "60",CLNO
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
.
APGL0100  MOVE      "18",CCOL
          MOVE      "6",CVERT               * set up screen address
          CALL      KLMAFM00                * get ledger
          BRANCH    EXIT,APGL9999,APGL9999  * quit program ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,SLASH;
          MOVE      "21",CCOL
          MOVE      "6",CVERT               * set up screen address
          CALL      KAMAFM00                * get ledger
          BRANCH    EXIT,APGL0100,APGL0100  * enter ledger ?
.
          MATCH     "4",FMAMTYPE
          GOTO      APGL0200 IF EQUAL
.
          DISPLAY   *P1:24,*EL,"Must be a Liability - ";
          CALL      HITENTER
          GOTO      APGL0000
.
APGL0200  MOVE      "18",CCOL
          MOVE      "8",CVERT               * set up screen address
          CALL      KLMCFM00
          BRANCH    EXIT,APGL0000,APGL0000
          PACK      YEAR1,FMLCYEAR,SP70
.
          CALL      CONTQST
          CMATCH    "1",ANS
          GOTO      APGL0000 IF NOT EQUAL
.
          PACK      FILENAME,FMST,YEAR1,SP70
          OPEN      FMSTRNA1,FILENAME
          DISPLAY   *P64:24,*EL,FILENAME
.
APGL0300  DISPLAY   *P1:24,*EL;
          PACK      KEY5,SP70
          CALL      RSAPBM1
.
APGL0310  CALL      RKAPBM1
          BRANCH    OVRCD,APGL0000
.
          MATCH     FMLC01FR,APBMADT
          GOTO      APGL0310 IF LESS
          MATCH     APBMADT,FMLC12TO
          GOTO      APGL0310 IF LESS
.
          DISPLAY   *P20:24,APBMBCH
.
APGL0400  MOVE      ZERO,CRDTOTAL
          MOVE      SP2,DIM2
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
.
APGL0410  CALL      RKAPIM1
          BRANCH    OVRCD,APGL0500
.
          MATCH     APIMBCH,APBMBCH
          GOTO      APGL0500 IF NOT EQUAL
.
          UNPACK    APIMCRD,DIM2,DIM3
          MATCH     "~~",DIM2
          GOTO      APGL0410 IF EQUAL
          MATCH     "3",APIMTYP
          GOTO      APGL0410 IF EQUAL
.
          MATCH     "0",APIMUPD
          GOTO      APGL0410 IF EQUAL
.
          MOVE      APIMTYP,FORM1
          ADD       ONE,FORM1
          LOAD      DIM2A,FORM1,IN,CRED,PY,CANC,RI
          ASSIGN    CRDTOTAL+APIMTOT+APIMGST-APIMDIS,CRDTOTAL
          ASSIGN    APIMTOT+APIMGST-APIMDIS,IMSTOTAL
.
          MOVE      ZERO,INPTOTAL
          MOVE      ZERO,DIFTOTAL
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      SAVKEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RSAPIN1
APGL0420  CALL      RKAPIN1
          BRANCH    OVRCD,APGL0430
.
          PACK      KEY40,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH     SAVKEY40,KEY40
          GOTO      APGL0430 IF NOT EQUAL
.
          MATCH     "0",APINUPD
          GOTO      APGL0420 IF EQUAL
.
          MATCH     APINLED,FMAMLEDG
          GOTO      APGL0425 IF EQUAL
.
          ASSIGN    APINAMT+APINGST,DIFTOTAL
          ASSIGN    CRDTOTAL-DIFTOTAL,CRDTOTAL
          ASSIGN    IMSTOTAL-DIFTOTAL,IMSTOTAL
          GOTO      APGL0420
.
APGL0425  ASSIGN    INPTOTAL+APINAMT+APINGST,INPTOTAL
          GOTO      APGL0420
.
APGL0430  COMPARE   INPTOTAL,IMSTOTAL
          GOTO      APGL0410 IF EQUAL
.
          COMPARE   "54",CLNO
          CALL      APGLHEAD IF NOT LESS
          PRINT     "apsimsaf & apsinpaf imbalance : ",SAVKEY40,"/",INPTOTAL:
                    "/",IMSTOTAL
          ADD       ONE,CLNO
          GOTO      APGL0410
.
APGL0500  PACK      KEY5,APBMBCH,SP70
          CALL      RDFMBC1
          IF        OVRCD=1
            CALL      APGL0560
            GOTO      APGL0310
          ENDIF
.
          PACK      KEY10,APBMBCH,SP30
          MOVE      ZERO,FMSTOTAL
          CALL      RSFMTR1
.
APGL0510  CALL      RKFMTR1
          BRANCH    OVRCD,APGL0590
.
          MATCH     APBMBCH,FMTRBAT
          GOTO      APGL0590 IF NOT EQUAL
.
          MATCH     FMAMLEDG,FMTRLEDG
          GOTO      APGL0510 IF NOT EQUAL
          MATCH     FMAMACCT,FMTRACCT
          GOTO      APGL0510 IF NOT EQUAL
.
          MATCH     FMTRPDAT,APBMADT
          CALL      APGL0570 IF NOT EQUAL
.
          ADD       FMTRAMT,FMSTOTAL
          GOTO      APGL0510
.
APGL0560  COMPARE   "54",CLNO
          CALL      APGLHEAD IF NOT LESS
          PRINT     "Batch Missing from General Ledger : ",APBMBCH
          ADD       ONE,CLNO
          RETURN
.
APGL0570  COMPARE   "54",CLNO
          CALL      APGLHEAD IF NOT LESS
          PRINT     "G/L Posting Date Different : ",FMTRBAT,"/",FMTRUNIQ,"/":
                    FMTRPDAT,"/",FMBCPDAT
          ADD       ONE,CLNO
          RETURN
.
APGL0590  IF        !(CRDTOTAL=FMSTOTAL)
            COMPARE   "54",CLNO
            CALL      APGLHEAD IF NOT LESS
            PRINT     APBMBCH," ",DIM2A,"  FMSTOTAL=",FMSTOTAL:
                      "  CRDTOTAL=",CRDTOTAL
            ADD       ONE,CLNO
          ENDIF
          GOTO      APGL0310
.
APGL9999  RETURN
.
APGLHEAD  CALL      HEAD80
          PRINT     *1,OPDES29
          PRINT     *1,"Ledger/Account : ",FMAMLEDG,"/",FMAMACCT:
                    "       Financial Year : ",YEAR1,*N
          ADD       ONE,CLNO
          RETURN
.
JNGL0000  DISPLAY   *P1:4,*EF,*P1:6,"Ledger/Account : ":
                    *P1:8,"Financial Year : "
.
JNGL0100  MOVE      "18",CCOL
          MOVE      "6",CVERT               * set up screen address
          CALL      KLMAFM00                * get ledger
          BRANCH    EXIT,JNGL9999,JNGL9999  * quit program ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,SLASH;
          MOVE      "21",CCOL
          MOVE      "6",CVERT               * set up screen address
          CALL      KAMAFM00                * get ledger
          BRANCH    EXIT,JNGL0100,JNGL0100  * enter ledger ?
.
          MATCH     "4",FMAMTYPE
          GOTO      JNGL0200 IF EQUAL
.
          DISPLAY   *P1:24,*EL,"Must be a Liability - ";
          CALL      HITENTER
          GOTO      JNGL0000
.
JNGL0200  MOVE      "18",CCOL
          MOVE      "8",CVERT               * set up screen address
          CALL      KLMCFM00
          BRANCH    EXIT,JNGL0000,JNGL0000
          PACK      YEAR1,FMLCYEAR,SP70
.
          CALL      CONTQST
          CMATCH    "1",ANS
          GOTO      JNGL0000 IF NOT EQUAL
.
          PACK      FILENAME,FMST,YEAR1,SP70
          OPEN      FMSTRNA2,FILENAME
          DISPLAY   *P64:24,*EL,FILENAME
.
          MOVE      ZERO,CPAGENO
          MOVE      "60",CLNO
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,SECTOR
          MOVE      ZERO,TOTAMT
          MOVE      ZERO,TOTAMTCR
          MOVE      ZERO,TOTAMTDR
          PACK      KEY32,FMAMLEDG,FMAMACCT,SP30
          CALL      RSFMTR2
.
JNGL1000  CALL      RKFMTR2
          BRANCH    OVRCD,JNGL7000
.
          ADD       ONE,SECTOR
          IF        SECTOR%1000=1
            DISPLAY   *P1:24,*EL,SECTOR," - ",FMTRBAT,"/",FMTRUNIQ
          ENDIF
.
          MATCH     FMAMLEDG,FMTRLEDG
          GOTO      JNGL7000 IF NOT EQUAL
          MATCH     FMAMACCT,FMTRACCT
          GOTO      JNGL7000 IF NOT EQUAL
.
          MATCH     "INVOICE        ",FMTRDOCR
          GOTO      JNGL1000 IF EQUAL
          MATCH     "CREDITS        ",FMTRDOCR
          GOTO      JNGL1000 IF EQUAL
          MATCH     "CANCEL CHEQUE  ",FMTRDOCR
          GOTO      JNGL1000 IF EQUAL
          MATCH     "PY",FMTRTYPE
          GOTO      JNGL1000 IF EQUAL
          MATCH     "CC",FMTRTYPE
          GOTO      JNGL1000 IF EQUAL
          MATCH     "RI",FMTRTYPE
          GOTO      JNGL1000 IF EQUAL
.
          COMPARE   "55",CLNO
          CALL      JNGL8000 IF NOT LESS
.
          MATCH     "JA",FMTRTYPE
          IF        @EQUAL
            PRINT     *1,FMTRBAT,"/",FMTRUNIQ," Accrual  ",*30,FMTRAMT
            ADD       FMTRAMT,TOTAMTDR
          ELSE
            PRINT     *1,FMTRBAT,"/",FMTRUNIQ," Accrual  ",*45,FMTRAMT
            ADD       FMTRAMT,TOTAMTCR
          ENDIF
          ADD       ONE,CLNO
          GOTO      JNGL1000
.
JNGL7000  COMPARE   "55",CLNO
          CALL      JNGL8000 IF NOT LESS
.
          PRINT     *N,*10,"Totals: ",*28,TOTAMTDR,*43,TOTAMTCR;
          SUB       TOTAMTCR,TOTAMTDR
          PRINT     *63,"| ",TOTAMTDR
          MOVE      ZERO,TOTAMTDR
          MOVE      ZERO,TOTAMTCR
          MOVE      "60",CLNO
          GOTO      JNGL0000
.
JNGL8000  CALL      HEAD80
.
          PRINT     "Ledger/Account: ",FMAMLEDG,"/",FMAMACCT,*55,FMLCYEAR:
                    *N,"Batch/Line Number",*39,"Debit",*54,"Credit"
          ADD       ONE,CLNO
          RETURN
.
JNGL9999  RETURN
.
GLAP0000  DISPLAY   *P1:4,*EF,*P1:6,"Ledger/Account : ":
                    *P1:8,"Financial Year : "
          MOVE      "60",CLNO
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
.
GLAP0100  MOVE      "18",CCOL
          MOVE      "6",CVERT               * set up screen address
          CALL      KLMAFM00                * get ledger
          BRANCH    EXIT,GLAP9999,GLAP9999  * quit program ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,SLASH;
          MOVE      "21",CCOL
          MOVE      "6",CVERT               * set up screen address
          CALL      KAMAFM00                * get ledger
          BRANCH    EXIT,GLAP0100,GLAP0100  * enter ledger ?
.
          MATCH     "4",FMAMTYPE
          GOTO      GLAP0200 IF EQUAL
.
          DISPLAY   *P1:24,*EL,"Must be a Liability - ";
          CALL      HITENTER
          GOTO      GLAP0000
.
GLAP0200  MOVE      "18",CCOL
          MOVE      "8",CVERT               * set up screen address
          CALL      KLMCFM00
          BRANCH    EXIT,GLAP0000,GLAP0000
          PACK      YEAR1,FMLCYEAR,SP70
.
          CALL      CONTQST
          CMATCH    "1",ANS
          GOTO      GLAP0000 IF NOT EQUAL
.
          PACK      FILENAME,FMST,YEAR1,SP70
          OPEN      FMSTRNA2,FILENAME
          DISPLAY   *P64:24,*EL,FILENAME
.
          MOVE      ZERO,SECTOR
          MOVE      SP5,SAVEBAT
.
          PACK      KEY32,FMAMLEDG,FMAMACCT,SP30
          CALL      RSFMTR2
GLAP1000  CALL      RKFMTR2
          BRANCH    OVRCD,GLAP9999
.
          ADD       ONE,SECTOR
          IF        SECTOR%1000=1
            DISPLAY   *P1:24,*EL,SECTOR," - ",FMTRBAT,"/",FMTRUNIQ
          ENDIF
.
          MATCH     FMAMLEDG,FMTRLEDG
          GOTO      GLAP9999 IF NOT EQUAL
          MATCH     FMAMACCT,FMTRACCT
          GOTO      GLAP9999 IF NOT EQUAL
.
          MATCH     FMTRBAT,SAVEBAT
          GOTO      GLAP1100 IF NOT EQUAL
.
          MATCH     FMTRPDAT,FMBCPDAT
          CALL      GLAP8200 IF NOT EQUAL
.
          ADD       FMTRAMT,FMSTOTAL
          GOTO      GLAP1000
.
GLAP1100  MATCH     SP5,SAVEBAT
          GOTO      GLAP1120 IF EQUAL
.
          CALL      GLAP2000
.
GLAP1120  MOVE      FMTRBAT,SAVEBAT
          MOVE      FMTRAMT,FMSTOTAL
.
          PACK      KEY5,FMTRBAT,SP70
          CALL      RDFMBC1
          COMPARE   ONE,OVRCD
          CALL      GLAP8000 IF EQUAL
          CALL      RDAPBM1
          COMPARE   ZERO,OVRCD
          GOTO      GLAP1130 IF EQUAL
.         
          CALL      GLAP8100
          GOTO      GLAP1000
.
GLAP1130  MATCH     FMBCPDAT,APBMADT
          GOTO      GLAP1000 IF EQUAL
.
          COMPARE   "56",CLNO
          CALL      GLAPHEAD IF NOT LESS
          PRINT     "Batch Posting Dates are different. G/L:",KEY5,"/":
                    FMBCPDAT," A/P:",KEY5,"/",APBMADT
          ADD       ONE,CLNO
          GOTO      GLAP1000
.
GLAP2000  MOVE      ZERO,CRDTOTAL
          MOVE      SP2,DIM2
          PACK      KEY40,SAVEBAT,SP70
          CALL      RSAPIM1
.
GLAP2100  CALL      RKAPIM1
          BRANCH    OVRCD,GLAP2900
.
          MATCH     APIMBCH,SAVEBAT
          GOTO      GLAP2900 IF NOT EQUAL
.
          UNPACK    APIMCRD,DIM2,DIM3
          MATCH     "~~",DIM2
          GOTO      GLAP2100 IF EQUAL
          MATCH     "3",APIMTYP
          GOTO      GLAP2100 IF EQUAL
          MATCH     "0",APIMUPD
          GOTO      GLAP2100 IF EQUAL
.
          MOVE      APIMTYP,FORM1
          ADD       ONE,FORM1
          LOAD      DIM2A,FORM1,IN,CR,PY,CANC,RI
          ASSIGN    CRDTOTAL+APIMTOT+APIMGST-APIMDIS,CRDTOTAL
          ASSIGN    APIMTOT+APIMGST-APIMDIS,IMSTOTAL
.
          MOVE      ZERO,INPTOTAL
          MOVE      ZERO,DIFTOTAL
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      SAVKEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RSAPIN1
GLAP2200  CALL      RKAPIN1
          BRANCH    OVRCD,GLAP2400
.
          PACK      KEY40,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH     SAVKEY40,KEY40
          GOTO      GLAP2400 IF NOT EQUAL
.
          MATCH     "0",APINUPD
          GOTO      GLAP2200 IF EQUAL
.
          MATCH     APINLED,FMAMLEDG
          GOTO      GLAP2300 IF EQUAL
.
          ASSIGN    APINAMT+APINGST,DIFTOTAL
          ASSIGN    CRDTOTAL-DIFTOTAL,CRDTOTAL
          ASSIGN    IMSTOTAL-DIFTOTAL,IMSTOTAL
          GOTO      GLAP2200
.
GLAP2300  ASSIGN    INPTOTAL+APINAMT+APINGST,INPTOTAL
          GOTO      GLAP2200
.
GLAP2400  COMPARE   INPTOTAL,IMSTOTAL
          GOTO      GLAP2100 IF EQUAL
.
          COMPARE   "54",CLNO
          CALL      GLAPHEAD IF NOT LESS
          PRINT     "apsimsaf & apsinpaf imbalance : ",SAVKEY40,"/",INPTOTAL:
                    "/",IMSTOTAL
          ADD       ONE,CLNO
          GOTO      GLAP2100
.
GLAP2900  IF        !(CRDTOTAL=FMSTOTAL)
            COMPARE   "56",CLNO
            CALL      GLAPHEAD IF NOT LESS
            PRINT     SAVEBAT," ",FMBCTRT,"  FMSTOTAL=",FMSTOTAL:
                      "  CRDTOTAL=",CRDTOTAL
            ADD       ONE,CLNO
          ENDIF
.
GLAP2999  RETURN
.
GLAP8000  COMPARE   "56",CLNO
          CALL      GLAPHEAD IF NOT LESS
          PRINT     "G/L Batch Missing : ",SAVEBAT
          ADD       ONE,CLNO
          MOVE      "99999999",FMBCPDAT
          RETURN
.
GLAP8100  COMPARE   "56",CLNO
          CALL      GLAPHEAD IF NOT LESS
          PRINT     "A/P Batch Missing : ",SAVEBAT," ",FMBCTRT
          ADD       ONE,CLNO
          MOVE      "99999999",APBMADT
          RETURN
.
GLAP8200  COMPARE   "56",CLNO
          CALL      GLAPHEAD IF NOT LESS
          PRINT     "G/L Posting Date Different : ",FMTRBAT,"/",FMTRUNIQ,"/":
                    FMTRPDAT,"/",FMBCPDAT
          ADD       ONE,CLNO
          RETURN
.
GLAPHEAD  CALL      HEAD80
          PRINT     *1,OPDES31
          PRINT     *1,"Ledger/Account : ",FMAMLEDG,"/",FMAMACCT:
                    "       Financial Year : ",YEAR1,*N
          ADD       ONE,CLNO
          RETURN
.
GLAP9999  RETURN
.
.******************************************************************************
.  SCDE - Display Screen T                       Called by SEDE, redisps
.******************************************************************************
SCDE0000  
          DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON," 1",*HOFF,". Subjective Abb. Desc Length :":
                    *P1:5,*V2LON," 2",*HOFF,". Cost Centre Abb. Desc Length:";
.
          DISPLAY   *P35:4,*V2LON,NSABLEN,*P35:5,NCABLEN
.
SCDE9999  RETURN
.******************************************************************************
.  SEDE - Perform Screen T                       Called by ML
.         Returns : EXIT     (1=quit)
.******************************************************************************
SEDE0000  
.  FMSUUD5A  (subjective code abb. description length)
.  FMSUUD6A  (cost centre code abb. description length)
          CALL      RDFMCO51
.
          MOVE      FMSUUD5A,NSABLEN
          MOVE      FMSUUD6A,NCABLEN
          MOVE      FMSUUD5A,OSABLEN
          MOVE      FMSUUD6A,OCABLEN
.
          MOVE      ZERO,ACCEPT        * in accept mode
          MOVE      ZERO,OPTIONC       * reset item desired
          CALL      SCDE0000           * display screen C
.
SEDE0100  ADD       ONE,OPTIONC        * get next item
          BRANCH    ACCEPT,SEDE0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONC
.
SEDE0110  MOVE      "35",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONC,CVERT
          MOVE      OPTIONC,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SEDE9500,SEDE9000:                       * quit, continue
                       SEDE1100,SEDE1200                        * execute option
          BRANCH    ACCEPT,SEDE0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SEDE0100           * get another option
.
SEDE0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SEDE0100
.
.---- option 1 ----
.
SEDE1100  
          KEYIN     *PCCOL:CVERT,"__",*EL:
                    *PCCOL:CVERT,*V2LON,NSABLEN:
                    *PCCOL:CVERT,*DV,NSABLEN
          IF        NSABLEN<1
            DISPLAY   *P1:24,*EL,*B,"Entry Must Be Greater Than Zero - ";
            CALL      HITENTER
            GOTO      SEDE1100
          ENDIF
          GOTO      SEDE0100
.
.---- option 2 ----
.
SEDE1200  KEYIN     *PCCOL:CVERT,"__",*EL:
                    *PCCOL:CVERT,*V2LON,NCABLEN:
                    *PCCOL:CVERT,*DV,NCABLEN
          IF        NCABLEN<1
            DISPLAY   *P1:24,*EL,*B,"Entry Must Be Greater Than Zero - ";
            CALL      HITENTER
            GOTO      SEDE1200
          ENDIF
          GOTO      SEDE0100
.
SEDE9000  MOVE      ZERO,EXIT          * continue
          MOVE      NSABLEN,F2
          ADD       NCABLEN,F2
          COMPARE   "35",F2
          GOTO      SEDE9999 IF LESS   * lengths < 12 ?
.
          DISPLAY   *P1:24,*EL,*B:
                    "Sum of Abbrev. Desc. Lengths Must Be Less Than 35 - ";
          CALL      HITENTER
          GOTO      SEDE0100
.
SEDE9500  MOVE      ONE,EXIT           * quit
.
SEDE9999  RETURN
.**********************************************************************
.  UPDE - Recalculate account description              Called By ML
.**********************************************************************
UPDE0000  CALL      RDFMCO51
          MOVE      NSABLEN,FMSUUD5A
          MOVE      NCABLEN,FMSUUD6A
          CALL      WRFMCO51
.
          UNPACK    SP70,FMSTFILE,FMSRFILE,FMSPFILE,FMSSFILE
          MOVE      ZERO,COUNTDIS
          MOVE      ZERO,F14
          PACK      KEY26,SP70
          CALL      RSFMXC1
.
UPDE1000  CALL      RKFMXC1
          BRANCH    OVRCD,UPDE9000
.
          PACK      SUBJCODE,FMXCSUB,SP70
          PACK      COSTCODE,FMXCCOS,SP70
.
          CALL      BCOD0000
.
          PACK      FMSADESC,SP70
          PACK      KEY14,FMXCLED,FMXCSUB,SP70
          CALL      RDFMSA1
.
          PACK      FMCCDESC,SP70
          PACK      KEY14,FMXCLED,FMXCCOS,SP70
          CALL      RDFMCC1
.
          PACK      KEY14,FMXCLED,ACCOUNT,SP70
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMAM1
          BRANCH    OVRCD,UPDE1000
.
          ADD       ONE,COUNTDIS
          IF        (COUNTDIS%1000=1)
            DISPLAY   *P1:24,"Processing fmsamaaf":
                      " : ",*V2LON,KEY14,*EF;
          ENDIF
.
          MOVE      NSABLEN,FMSUUD5A
          MOVE      NCABLEN,FMSUUD6A
          CALL      BDES0000
.
          CALL      UPFMAM1
          ADD       ONE,F14
.
          GOTO      UPDE1000
.
UPDE9000  DISPLAY   *P1:24,F14," Accounts modified - ";
          WRITE     ERRFILE,SEQ;F14," Accounts modified"
          CALL      HITENTER
.
UPDE9999  RETURN
.
.**********************************************************************
.  DCCS - Delete unused cost centres & subjectives     Called By ML
.**********************************************************************
DCCS0000  DISPLAY   *P1:24,*EL,"Cost Centre : "
          PACK      KEY14,SP20
          CALL      RSFMCC1
.
DCCS1000  CALL      RKFMCC1
          BRANCH    OVRCD,DCCS5000
.
          DISPLAY   *P15:24,FMCCLEDG,SLASH,FMCCCOCE
.
          PACK      KEY31,FMCCLEDG,FMCCCOCE,SP70
          CALL      RSFMXC3
          CALL      RKFMXC3
          BRANCH    OVRCD,DCCS1100
.
          MATCH     FMCCLEDG,FMXCLED
          GOTO      DCCS1100 IF NOT EQUAL
          MATCH     FMCCCOCE,FMXCCOS
          GOTO      DCCS1000 IF EQUAL
.
DCCS1100  PACK      KEY26,FMCCLEDG,FMCCCOCE,SP70
          CALL      RSFMCF2
          CALL      RKFMCF2
          BRANCH    OVRCD,DCCS1200
.
          MATCH     FMCCLEDG,FMCFLEDG
          GOTO      DCCS1200 IF NOT EQUAL
          MATCH     FMCCCOCE,FMCFSCOS
          GOTO      DCCS1000 IF EQUAL
.
DCCS1200  PACK      KEY17,FMCCLEDG,FMCCCOCE,SP70
          PACK      KEY14,FMCCLEDG,FMCCCOCE,SP70
.
DCCS1220  CALL      RSFMUW1
          CALL      RKFMUW1
          BRANCH    OVRCD,DCCS1300
.
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          MATCH     KEY14,KEY17
          GOTO      DCCS1300 IF NOT EQUAL
.
          CALL      DEFMUW1
          GOTO      DCCS1220
.
DCCS1300  PACK      KEY26,FMCCLEDG,FMCCCOCE,SP70
          PACK      KEY14,FMCCLEDG,FMCCCOCE,SP70
.
DCCS1320  CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,DCCS1400
.
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MATCH     KEY26,KEY14
          GOTO      DCCS1400 IF NOT EQUAL
.
          CALL      DEFMRF2
          GOTO      DCCS1320
.
DCCS1400  PACK      KEY14,FMCCLEDG,FMCCCOCE,SP70
          DISPLAY   *P40:24,*V2LON,"Deleting ",FMCCLEDG,FMCCCOCE,*EL;
          CALL      DEFMCC1
          CALL      DEFMAM1
          GOTO      DCCS1000
.
DCCS5000  DISPLAY   *P1:24,*EL,"Subjective : "
          PACK      KEY14,SP20
          CALL      RSFMSA1
.
DCCS5100  CALL      RKFMSA1
          BRANCH    OVRCD,DCCS9999
.
          DISPLAY   *P14:24,FMSASUBJ
.
          MOVE      FMSALEDG,SAVLEDG
          MOVE      FMSASUBJ,SAVSUBJ
.
          MATCH     "1",FMSASTYP
          GOTO      DCCS5200 IF NOT EQUAL
.
          PACK      KEY14,SAVLEDG,SP70
          CALL      RSFMSA1
.
DCCS5110  CALL      RKFMSA1
          BRANCH    OVRCD,DCCS5200
.
          MATCH     FMSALEDG,SAVLEDG
          GOTO      DCCS5200 IF NOT EQUAL
          MATCH     FMSAADDT,SAVSUBJ
          GOTO      DCCS5200 IF NOT EQUAL
.
          PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
          CALL      RDFMSA1
          GOTO      DCCS5100
.
DCCS5200  PACK      KEY31,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMXC2
          CALL      RKFMXC2
          BRANCH    OVRCD,DCCS5300
.
          MATCH     FMXCLED,SAVLEDG
          GOTO      DCCS5300 IF NOT EQUAL
          MATCH     FMXCSUB,SAVSUBJ
          GOTO      DCCS5300 IF NOT EQUAL
.
          PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
          CALL      RDFMSA1
          GOTO      DCCS5100
.
DCCS5300  PACK      KEY31,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMTS1
          CALL      RKFMTS1
          BRANCH    OVRCD,DCCS5350
.
          MATCH     FMTSTLED,SAVLEDG
          GOTO      DCCS5350 IF NOT EQUAL
          MATCH     FMTSTACC,SAVSUBJ
          GOTO      DCCS5350 IF NOT EQUAL
.
          PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
          CALL      RDFMSA1
          GOTO      DCCS5100
.
DCCS5350  PACK      KEY31,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMTS2
          CALL      RKFMTS2
          BRANCH    OVRCD,DCCS5500
.
          MATCH     FMTSTLED,SAVLEDG
          GOTO      DCCS5500 IF NOT EQUAL
          MATCH     FMTSSACC,SAVSUBJ
          GOTO      DCCS5500 IF NOT EQUAL
.
          PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
          CALL      RDFMSA1
          GOTO      DCCS5100
.
DCCS5500  DISPLAY   *P40:24,*V2LON,"Deleting ",SAVLEDG,SAVSUBJ,*EL;
          PACK      KEY17,SAVLEDG,SAVSUBJ,SP70
          PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
.
DCCS5510  CALL      RSFMUW1
          CALL      RKFMUW1
          BRANCH    OVRCD,DCCS5600
.
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          MATCH     KEY14,KEY17
          GOTO      DCCS5600 IF NOT EQUAL
.
          CALL      DEFMUW1
          GOTO      DCCS5510
.
DCCS5600  PACK      KEY26,SAVLEDG,SAVSUBJ,SP70
          PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
.
DCCS5610  CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,DCCS5700
.
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MATCH     KEY26,KEY14
          GOTO      DCCS5700 IF NOT EQUAL
.
          CALL      DEFMRF2
          GOTO      DCCS5610
.
DCCS5700  PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,DCCS5800
          CALL      DEFMSA1
.
DCCS5800  CALL      RDFMAM1
          BRANCH    OVRCD,DCCS5100
          CALL      DEFMAM1
          GOTO      DCCS5100
.
DCCS9999  RETURN
.
.******************************************************************************
.  INCLUDES FOR I/O'S
.******************************************************************************
          INC       APSBMFIO/INC
          INC       APSCILIO/INC
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       APSMASIO/INC
          INC       APSMXRIO/INC
          INC       APSNSCIO/INC
          INC       IBABATIO/INC
          INC       IBAPASIO/INC
          INC       FMSBASIO/INC
          INC       FMSBPFIO/INC
          INC       FMSBCFIO/INC
          INC       FMSBNKIO/INC
          INC       FMSCHQIO/INC
          INC       FMSCTRIO/INC
          INC       FMSCSAIO/INC
          INC       FMSCCAIO/INC
          INC       FMSCCCIO/INC
          INC       FMSDSFIO/INC
          INC       FMSLEVIO/INC
          INC       FMSLMBIO/INC
          INC       FMSRSFIO/INC
          INC       FMSWASIO/INC
          INC       FMSSBAIO/INC
          INC       FMSSSCIO/INC
          INC       FMSSLBIO/INC
          INC       FMSSTRIO/INC
          INC       FMSSCZIO/INC
          INC       FMSTRNIO/INC
          INC       FMSXCSIO/INC
          INC       FMSSIBIO/INC
          INC       FMSCAFIO/INC
          INC       FMSUWPIO/INC
.
          INC       APSAPYCD
          INC       APSSCXIO/INC
          INC       APSAPYIO/INC
          INC       APSCAFIO/INC
          INC       APSBMFKY
          INC       APSCKIKY
          INC       APSMASKY
          INC       FMSAMAKY
          INC       FMSBCFKY
          INC       FMSBNKKY
          INC       FMSCHQKY
          INC       FMSLMAKY
          INC       FMSLMCKY
          INC       FMSSBAKY
.
          INC       PRCFMSUB
          INC       FMSACCCD           * FMS cc/subj creation routines
          INC       FMSUPDCD           * FMS update routines
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSUDACD           * FMS update routines
