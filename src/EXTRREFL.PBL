.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   EXTRREFL                                                    *
.* Desc      :   Allied Health Referral Data Extraction Program              *
.*****************************************************************************
.* Date      :   15/12/2014                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will extract the allied health open referrals  *
.*               into a pipe delimited file in a format that will feed into  *
.*               CONVREFL.                                                   *
.* Mods:                                                                     *
.*****************************************************************************
.*        V10.13.02 23/08/2018  Steve Armstrong  TSK 0845563                 *
.*                  Updated WRTRAU00 to use CLALLAUD.                        *
.*        V10.13.01 31/07/2018  Thanh T          TSK 0845563                 *
.*                  Recompiled for ALLAUDFD                                  *
.*****************************************************************************
.*        V10.11.02 09/11/2017  Peter Vela       TSK 0847214                 *
.*                  Recompiled for EXACCDAT                                  *
.*        V10.11.01 27/07/2017  Ebon Clements    TSK 0268970                 *
.*                  Change to use OUTCLIFD index 1 instead of index 2        *
.*****************************************************************************
.*        V10.08.05 27/10/2016  Steve Armstrong  TSK 0819758                 *
.*                  Mods to extract ACC Comment data                         *
.*        V10.08.04 23/09/2016  Steve Armstrong  TSK 0826685                 *
.*                  Mods to clear REFLCLID prior to population               *
.*        V10.08.03 13/08/2016  Steve Armstrong  TSK 0825778                 *
.*                  Fixed to not load clinic id's which are inactive         *
.*        V10.08.02 09/08/2016  Ebon Clements    TSK 0820569                 *
.*                  Recompiled for DGCLII13 - set CISMFLAG                   *
.*        V10.08.01 04/07/2016  Steve Armstrong  TSK 0815948                 *
.*                  Added new referral field (REFLUHC4)                      *
.*****************************************************************************
.*        V10.07.01 01/09/2015  Steve Armstrong  CAR 319165                  *
.*                  Added new referral fields (REFLUC20, REFLUC21, REFLUD10, *
.*                  REFLUC25, REFLUYN4 and REFLLINK) for NDHB.  Also added   *
.*                  new record type (2) for referral comments for NDHB.      *
.*****************************************************************************
.*        V10.06.04 01/09/2015  Steve Armstrong  CAR 318304                  *
.*                  Mods to select a range of departments (Cat CG) to extract*
.*        V10.06.03 10/08/2015  Steve Armstrong  CAR 320430                  *
.*                  Mods to populate REFLAVIS with the old webPAS Referral   *
.*                  number (ALREVISN)                                        *
.*        V10.06.02 27/02/2015  Steve Armstrong  CAR 313858                  *
.*                  Mods to handle ACC data extraction (CRISP).              *
.*                  Also added REFLPURC, REFLUHC1, REFLORIG, REFLOUTP,       *
.*                  REFLUC22 and REFLCONT fields to the Referral details     *
.*                  record (CRISP).                                          *
.*        V10.06.01 12/03/2015  Steve Armstrong  CAR 314108                  *
.*                  Removed reference to PATCGPFD (No Longer in use)         *
.*****************************************************************************
.*        V10.05.00 15/12/2014  Steve Armstrong  CAR 305263                  *
.*                  Created program.                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ACCCMTFD/INC
          INC       ALLAUDFD/INC
          INC       ALLCONFD/INC
          INC       ALLENCFD/INC
          INC       ALLQUEFD/INC
          INC       ALLREFFD/INC
          INC       ALLRLNFD/INC
          INC       ALLSTSFD/INC
          INC       HL7CISFD/INC
          INC       HL7INBFD/INC
          INC       IBACONFD/INC
          INC       NHIMASFD/INC
          INC       OUTCLIFD/INC
          INC       OUTSITFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PATNIDFD/INC
          INC       PATWC1FD/INC
          INC       PMSPX2FD/INC
          INC       PMSWX1FD/INC
          INC       PMSQPTFD/INC
          INC       PMSVX1FD/INC
          INC       VISMDTFD/INC
          INC       VISMTXFD/INC
          INC       WEBSECFD/INC
.
.
.         A/H Open Referrals upload file layout - convrefl.txt
.         (as per CONVREFL)
.
REFLTEXT  FILE      HL7, FIXED=4012
.
REFLTYPE  DIM       1    A/H record type
.                           0 = Referral
REFLURNO  DIM       8    U/R Number                            (alreurno)
REFLDACT  DIM       8    Date Active (ccyymmdd)                (alredact)
REFLRDAT  DIM       8    Date of Referral (ccyymmdd)           (alrerdat)
REFLRHCP  DIM       10   Referring HCP (pmshcpaf)              (alrerhcp)
REFLDEPT  DIM       3    Department Code (alldepaf)            (alredept)
REFLPRTY  DIM       3    Priority (Cat PR)                     (alreprty)
REFLPRO1  DIM       9    Problem Code 1 (allprraf)             (alrepro1)
REFLSRCE  DIM       3    Source of Referral (outsitaf.ostcatg) (alresrce)
REFLCOMP  DIM       3    Compensation Code (Cat CL)            (alrecomp)
REFLHCP   DIM       10   Responsible HCP (pmshcpaf)            (alrehcp)
REFLDREC  DIM       8    Date Referral Received (ccyymmdd)     (alredrec)
REFLCTYP  DIM       6    Clinic Type (outctyaf)                (alrectyp)
REFLFHCP  DIM       60   Free Format Referring HCP             (alrefhcp)
REFLSTYP  DIM       3    Slot Type (Cat CV)                    (alrestyp)
REFLPRCM  DIM       50   Free Format Presenting Complaint      (alreprcm)
REFLPSIT  DIM       6    Preferred Site (outsitaf)             (alrepsit)
REFLCLID  DIM       6    Clinic Id (outcliaf)                  (alreclid)
REFLRTYP  DIM       3    Type of Referral (Cat RI)             (alrertyp)
REFLMDAT  DIM       8    Must be Seen By Date (ccyymmdd)       (alremdat)
REFLPRDT  DIM       8    Priority Date (ccyymmdd)              (alreprdt)
REFLCDAT  DIM       8    Date Record Created (ccyymmdd)        (alrecdat)
REFLCTIM  DIM       8    Time Record Created (hh:mm:ss)        (alrectim)
REFLCUID  DIM       10   Web User Created (websecaf)           (alrecuid)
REFLUDAT  DIM       8    Date Record Updated (ccyymmdd)        (alreudat)
REFLUTIM  DIM       8    Time Record Updated (hh:mm:ss)        (alreutim)
REFLUUID  DIM       10   Web User Updated (websecaf)           (alreuuid)
REFLAVIS  DIM       20   Alternate Visit Number                (alrevisn)
REFLREXP  DIM       8    Referral Expiry Date (ccyymmdd)       (alrerexp)
REFLUFR1  DIM       60   User Defined Free Format 1            (alreufr1)
REFLUFR2  DIM       60   User Defined Free Format 2            (alreufr2)
REFLRHCR  DIM       10   Referring Practice (pmshclaf)         (alrerhcr)
REFLDIA1  DIM       9    Diagnosis Code 1 (alldiaaf)           (alredia1)
REFLDIA2  DIM       9    Diagnosis Code 2 (alldiaaf)           (alredia2)
REFLDIA3  DIM       9    Diagnosis Code 3 (alldiaaf)           (alredia3)
REFLHOSN  DIM       3    Hospital Id (pathspaf)                (alrehosn)
REFLSTAT  DIM       1    Referral Status                       (alrestat)
REFLINTR  DIM       1    Interpreter Req'd (Y/N)               (pmvxintr)
REFLRHCT  DIM       2    Referring Group Count                 (alrerhct)
REFLPURC  DIM       3    Health Purchaser (Cat HP)             (alrepurc)
REFLUHC1  DIM       10   Prioritising HCP (pmshcpaf)           (alreuhc1)
REFLORIG  DIM       30   Referral Originator                   (alreorig)
REFLOUTP  DIM       3    Outcome of Priority (Cat AO)          (alreoutp)
REFLUC22  DIM       3    NPF Suspicion of Cancer (Cat lv)      (alreuc22)
.                        Triaging HCP
REFLCONT  DIM       3    Contract (Cat gb)                     (alrecont)
REFLUC20  DIM       3    NPF Type Proc. Clinical Exclusion     (alreuc20)
.                        Code (Cat lt)
REFLUC21  DIM       3    NPF Suspicion of Cancer (Cat lu)      (alreuc21)
.                        Referrer
REFLUD10  DIM       8    NPF Date Suspicion of Cancer - Triage (alreud10)
.                        (ccyymmdd)
REFLUC25  DIM       3    UDF Code 25 (Cat ly)                  (alreuc25)
.                        Out of Area Acceptance Reason
REFLUYN4  DIM       1    Master Referral Indicator             (alreuyn4)
.                        Y = Master Referral
.                        N = Internal Referral
REFLLINK  DIM       20   Linked Master Referral Visit No.      (alrlvisn)
.                        (for Internal Referral only)
REFLUHC4  DIM       10   Case Team (allcasaf)                  (alreuhc4)
.
.         ACC Data Records
.
.REFLTYPE DIM       1     A/H record type
.                           1 = ACC Data
.REFLURNO DIM       8     U/R Number                                  (ptwcurno)
ACCDNAME  DIM       30    Employer Name                               (wcename)
ACCDADD1  DIM       35    Employer Address Line 1                     (wceadd1)
ACCDADD2  DIM       35    Employer Address Line 2                     (wceadd2)
ACCDADD3  DIM       35    Employer Address Line 3                     (wceadd3)
ACCDADD4  DIM       35    Employer Address Line 4                     (wceadd4)
ACCDPOST  DIM       8     Employer Postcode                           (wcepost)
ACCDTELP  DIM       20    Employer Telephone                          (wcetele)
ACCDACDT  DIM       8     Date of Accident (ccyymmdd)                 (wcacdat)
ACCDACPT  DIM       1     Accepted by Ins. Co. (Y/N)                  (wcaccpt)
ACCDINSR  DIM       6     Insurance Company Code                      (wcicode)
ACCDCLNO  DIM       20    Insurance Claim Number                      (wcclmno)
ACCDCOM1  DIM       40    Comments 1                                  (wccomn1)
ACCDCOM2  DIM       40    Comments 2                                  (wccomn2)
ACCDALOC  DIM       50    Accident Location                           (pmwxaloc)
ACCDCINJ  DIM       3     Cause of Injury (Cat IK)                    (pmwxcinj)
ACCDICOD  DIM       3     Injury Code (Cat IJ)                        (pmwxicod)
ACCDCNAM  DIM       40    Contact Name                                (pmwxcnam)
ACCDCDTE  DIM       8     Date Record Created (ccyymmdd)              (pmwxcdte)
ACCDCTIM  DIM       8     Time Record Created (hh:mm:ss)              (pmwxctim)
ACCDWEBC  DIM       10    WEB User ID Record Creator                  (pmwxwebc)
ACCDLUPD  DIM       8     Last Update Date (ccyymmdd)                 (pmwxlupd)
ACCDLUPT  DIM       8     Last Update Time (hh:mm:ss)                 (pmwxlupt)
ACCDWEBU  DIM       10    WEB User ID Record Updator                  (pmwxwebu)
ACCDACCF  DIM       3     Work Related (Cat IQ)                       (pmwxaccf)
ACCDPLIN  DIM       3     Place Injury Occurred (Cat IP)              (pmwxplin)
ACCDACTI  DIM       3     Activity When Injured (Cat IO)              (pmwxacti)
ACCDADTE  DIM       8     ACC Decline Date (ccyymmdd)                 (pmwxadte)
ACCDATME  DIM       8     Accident Time (hh:mm:ss)                    (pmwxatme)
ACCDACLC  DIM       3     Accident Location (Cat IM)                  (pmwxaclc)
ACCDAINZ  DIM       1     Accident in NZ (Y/N)                        (pmwxainz)
ACCDMOVV  DIM       1     Involves Moving Vehicle on Public Road (Y/N)(pmwxmovv)
ACCDSPTI  DIM       1     Sporting Injury (Y/N)                       (pmwxspti)
ACCDSPRT  DIM       3     Sport Name (Cat IB)                         (pmwxsprt)
ACCDRECI  DIM       1     Recurring Injury Indicator (Y/N)            (pmwxreci)
ACCDTRIC  DIM       1     Treatment Injury Claim (Y/N)                (pmwxtric)
ACCDESTA  DIM       3     Employment Status (Cat IF)                  (pmwxesta)
ACCDPDDT  DIM       8     Patient Declaration Date (ccyymmdd)         (pmwxpddt)
ACCDARG1  DIM       20    Authorised Representative Given Name 1      (pmwxarg1)
ACCDARG2  DIM       20    Authorised Representative Given Name 2      (pmwxarg2)
ACCDARSN  DIM       25    Authorised Representative Surname           (pmwxasrn)
ACCDARTL  DIM       4     Authorised Representative Title             (pmwxartl)
ACCDARRP  DIM       10    Authorised Representative Relation          (pmwxarrp)
ACCDASST  DIM       1     Assistance is Required (Y/N)                (pmwxasst)
ACCDNEED  DIM       1     Need to Call HP (Y/N)                       (pmwxneed)
ACCDCONT  DIM       1     Continue Normal Hours of Work (Y/N)         (pmwxcont)
ACCDALTW  DIM       1     Alternative Work Indicator (Y/N)            (pmwxaltw)
ACCDTYPA  DIM       3     Type of Alternative Work (Cat IH)           (pmwxtypa)
ACCDSALT  DIM       8     Start Date of Alternative Work (ccyymmdd)   (pmwxsalt)
ACCDHPDA  DIM       2     Hours per Day of Alternative Work           (pmwxhpda)
ACCDUNFD  DIM       3     Unfit for Work for Duration                 (pmwxunfd)
ACCDUNFT  DIM       3     Unfit for Work for Type (Cat UI)            (pmwxunft)
ACCDFISD  DIM       8     Full Incapacity Start Date (ccyymmdd)       (pmwxfisd)
ACCDRNWD  DIM       8     Return to Normal Work Date (ccyymmdd)       (pmwxrnwd)
ACCDCSTA  DIM       1     Claim Status                                (pmwxcsta)
.                           0 = Existing
.                           1 = Parked
.                           2 = Completed
ACCDTWRK  DIM       3     Type of Work (Cat IX)                       (pmwxtwrk)
ACCDOEST  DIM       50    Other Employment Status                     (pmwxoest)
ACCDTPRO  DIM       10    HCP Treatment Provider                      (pmwxtpro)
ACCDECOD  DIM       6     Employer Code (pateoraf)                    (pmwxecod)
ACCDTYP1  DIM       3     Hard-coded Comment Type                     (accmtype)
.                           001 = Cause of Injury
ACCDDAT1  DIM       500   Cause of Injury Comments                    (accmdata)
ACCDTYP2  DIM       3     Hard-coded Comment Type                     (accmtype)
.                           002 = Injury Comments
ACCDDAT2  DIM       500   Injury Comments                             (accmdata)
ACCDTYP3  DIM       3     Hard-coded Comment Type                     (accmtype)
.                           003 = Alternative Work Restrictions
ACCDDAT3  DIM       500   Alternative Work Restrictions Comments      (accmdata)
.
.         A/H Referral Comment Records
.
.REFLTYPE DIM       1     A/H record type
.                           2 = Comment Data
.REFLURNO DIM       8     U/R Number                                  (alreurno)
REFLCOMM  DIM       4000  Referral Comments                           (vsmtcmnt)
.                         (40 x 100 character lines)
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ACCCMTYP  DIM       3
ACCCOUNT  FORM      10
AUDITKEY  DIM       24
CISMFLAG  FORM      1
CODE      DIM       2
COMMTFLG  FORM      1             * Extract comments flag
.                                   0 = No
.                                   1 = Yes
CURRDATE  DIM       8
CURRTIME  DIM       8
DIM500    DIM       500
EXTCOUNT  FORM      10
IBAMFLAG  FORM      1
LINCOUNT  FORM      1
MESSAGID  DIM       20
NMPNUMB   DIM       20
RECCOUNT  FORM      10
SAVECODE  DIM       3
SAVEEDEP  DIM       3
SAVENOTE  DIM       6
SAVESDEP  DIM       3
SAVKEY17  DIM       17
TYPCOUNT  FORM      1
VISNUMBR  DIM       8
.
.
. PROGRAM CONSTANTS
. -----------------
ACCTYPE1  INIT      "001"
ACCTYPE2  INIT      "002"
ACCTYPE3  INIT      "003"
ACTNCODE  INIT      "   "
COMMENTY  INIT      "Closed by EXTRREFL"
PIPE      INIT      "|"
.
.
.
PRGID     INIT      "EXTRREFL"
PRGNAM    INIT      "Allied Health Open Referral Extraction"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * A/H Open referrals extract
.
MAIN1000  CALL      GHOS0000               * get hospital code
          BRANCH    EXIT,MAIN0100          * nothing or exitchar entered
.
          CALL      GCLO0000               * get closure reason code
          BRANCH    EXIT,MAIN0100          * nothing or exitchar entered
.
          CALL      GSDP0000               * get starting department
          BRANCH    EXIT,MAIN0100          * exitchar entered
.
          CALL      GEDP0000               * get ending department
          BRANCH    EXIT,MAIN0100          * exitchar entered
.
          CALL      QCOM0000               * se if extracting A/H comments
          BRANCH    EXIT,MAIN0100          * exitchar entered
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN5000  CALL      CFIL0000               * create file
          BRANCH    EXIT,MAIN0100          * file exists
.
          CALL      PROC0000               * process
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"allrefaf";
          OPEN      ALLREFA3,"allrefaf"
.
          DISPLAY   *P64:24,"acccmtaf";
          OPEN      ACCCMTA1,"acccmtaf"
.
          DISPLAY   *P64:24,"allaudaf";
          OPEN      ALLAUDA1,"allaudaf"
          OPEN      ALLAUDA2,"allaudaf"
.
          DISPLAY   *P64:24,"allrlnaf";
          OPEN      ALLRLNA2,"allrlnaf"
.
          DISPLAY   *P64:24,"allstsaf";
          OPEN      ALLSTSA1,"allstsaf"
.
          DISPLAY   *P64:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"vismdtaf";
          OPEN      VISMDTA1,"vismdtaf"
.
          DISPLAY   *P64:24,"vismtxaf";
          OPEN      VISMTXA1,"vismtxaf"
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
          READ      CONTROLF,HUND06;*27,ALCNRAUD,*28,ALCNEAUD,*201,ALCNACTW:
                                    *203,ALCNMDES,*213,ALCNLAUD,*224,ALCNDHOS:
                                    *225,ALCNDEVP
.
          MOVE      ONE,CNEWDS
.
          MATCH     "1",ALCNRAUD
          IF        @EQUAL
            OPEN      ALLAUDRE,"allaudre"
          ENDIF
.
          MATCH     "1",ALCNEAUD
          IF        @EQUAL
            OPEN      ALLAUDEN,"allauden"
          ENDIF
.
.         If NZ, open files for ACC data
.
          IF        PTCNHDPS = 1
            DISPLAY   *P64:24,"patwc1af";
            OPEN      PATWC1A1,"patwc1af"
.
            DISPLAY   *P64:24,"pmswx1af";
            OPEN      PMSWX1A1,"pmswx1af"
          ENDIF
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data extraction                     *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". A/H Open Referrals ":
                                           "Data Extract & Close":
                    *P1:6,*V2LON,TWO,*HOFF,". A/H Open Referrals Report Only"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run extraction
                            OPTN9000             * run report
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                                  CFIL0000       Called by: MAIN0000       *
.*                         Create the extract file                           *
.*****************************************************************************
.
CFIL0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          IF        COPTION = 1
            OPEN      REFLTEXT,"convrefl"
          ELSE
            OPEN      REFLTEXT,"convrefl.tst"
          ENDIF
          TRAPCLR   IO
          BRANCH    OVRCD,CFIL5000
.
          DISPLAY   *P1:23,*B,*EF,"The extract file convrefl.";
          IF        COPTION = 1
            DISPLAY   "txt";
          ELSE
            DISPLAY   "tst";
          ENDIF
          DISPLAY   " already exists."
CFIL1000  KEYIN     *P1:24,"Overwrite it (",*V2LON,*DV,ANSY,*HOFF,"/":
                    *V2LON,*DV,ANSN,*HOFF,")?":
                    *P21:24,*V2LON,ANS
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS                * "Y" entered ?
          GOTO      CFIL2000 IF EQUAL       * yes - continue
.
          MATCH     ANSN,ANS                * "N" entered ?
          GOTO      CFIL9100 IF EQUAL       * no
.
          BEEP
          GOTO      CFIL1000
.
.         Delete the existing file
.
CFIL2000  CLOSE     REFLTEXT,DELETE
.
.         Create a new extract file
.
CFIL5000  IF        COPTION = 1
            PREP      REFLTEXT,"convrefl"
          ELSE
            PREP      REFLTEXT,"convrefl.tst"
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      CFIL9999
.
CFIL9100  MOVE      ONE,EXIT
.
CFIL9999  RETURN
+
.*****************************************************************************
.*                               GHOS0000              Called by: MAIN0000   *
.*                    Get the user to input the required hospital code       *
.* Requires: IBCNMHOS - multi hospital parameter                             *
.* Returns: EXIT  0 - Ok to continue                                         *
.*                1 - Nothing or exitchar entered                            *
.*          PTHSHOSP - Hospital required code                                *
.*****************************************************************************
.
GHOS0000  COMPARE   ONE,IBCNMHOS                 * using multi-campus ?
          GOTO      GHOS9999 IF NOT EQUAL        * no - finished
.
          MOVE      TWENTY6,ECOL
          MOVE      TEN,EVERT
          DISPLAY   *P1:10,*EL,"Hospital               :"
          MOVE      SP3,CKYIDEF3                 * no default value
          MOVE      ZERO,CKYIMAND                * not mandatory
.
          CALL      PATHSPKY
          BRANCH    EXIT,GHOS9100:               * nothing or spaces entered
                         GHOS9100                * exitchar entered
.
          DISPLAY   *P33:10,*EL,PTHSNAME
.
          MOVE      ZERO,EXIT
          GOTO      GHOS9999
.
GHOS9100  MOVE      ONE,EXIT
.
GHOS9999  RETURN
+
.*****************************************************************************
.*                               GCLO0000              Called by: MAIN0000   *
.*                    Get the user to input the closure code                 *
.* Returns: EXIT  0 - Ok to continue                                         *
.*                1 - Nothing or exitchar entered                            *
.*          SAVECODE - Closure code (Cat LL)                                 *
.*****************************************************************************
.
GCLO0000  BRANCH    COPTION,GCLO1000:            * Extract and Cancel
                            GCLO9000             * Report Only
.
GCLO1000  MOVE      TWENTY6,ECOL
          MOVE      TEN1,EVERT
          PACK      CODE,ANSL,ANSL
          DISPLAY   *P1:11,*EL,"Closure Reason         :"
          MOVE      SP3,CKYIDEF3                 * no default value
          MOVE      ZERO,CKYIMAND                * not mandatory
.
          CALL      PATCODKY
          BRANCH    EXIT,GCLO9100:               * nothing or spaces entered
                         GCLO9100                * exitchar entered
.
          MOVE      ACODE,SAVECODE               * save code
          DISPLAY   *P33:11,*EL,TDESC
.
GCLO9000  MOVE      ZERO,EXIT
          GOTO      GCLO9999
.
GCLO9100  MOVE      ONE,EXIT
.
GCLO9999  RETURN
+
.*****************************************************************************
.*                               GSDP0000              Called by: MAIN0000   *
.*                    Get the user to input the starting department code     *
.* Returns: EXIT  0 - Ok to continue                                         *
.*                1 - Nothing or exitchar entered                            *
.*          SAVESDEP - Starting Department Code (patcodes - Cat CG)          *
.*****************************************************************************
.
GSDP0000  MOVE      TWENTY6,ECOL
          MOVE      TEN3,EVERT
          PACK      CODE,ANSC,ANSG
          DISPLAY   *P1:13,*EL,"Starting Department    :"
          MOVE      SP3,CKYIDEF3                 * no default value
          MOVE      ZERO,CKYIMAND                * not mandatory
.
          CALL      PATCODKY
          BRANCH    EXIT,GSDP8000:               * nothing or spaces entered
                         GSDP9100                * exitchar entered
.
          MOVE      ACODE,SAVESDEP               * save code
          DISPLAY   *P33:13,*EL,TDESC
          GOTO      GSDP9000
.
GSDP8000  MOVE      SP3,SAVESDEP
          DISPLAY   *P26:13,*V2LON,"Start"
.
GSDP9000  MOVE      ZERO,EXIT
          GOTO      GSDP9999
.
GSDP9100  MOVE      ONE,EXIT
.
GSDP9999  RETURN
+
.*****************************************************************************
.*                               GEDP0000              Called by: MAIN0000   *
.*                    Get the user to input the starting department code     *
.* Returns: EXIT  0 - Ok to continue                                         *
.*                1 - Nothing or exitchar entered                            *
.*          SAVEEDEP - Ending Department Code (patcodes - Cat CG)            *
.*****************************************************************************
.
GEDP0000  MOVE      TWENTY6,ECOL
          MOVE      TEN4,EVERT
          PACK      CODE,ANSC,ANSG
          DISPLAY   *P1:14,*EL,"Ending   Department    :"
          MOVE      SP3,CKYIDEF3                 * no default value
          MOVE      ZERO,CKYIMAND                * not mandatory
.
          CALL      PATCODKY
          BRANCH    EXIT,GEDP8000:               * nothing or spaces entered
                         GEDP9100                * exitchar entered
.
          MOVE      ACODE,SAVEEDEP               * save code
          DISPLAY   *P33:14,*EL,TDESC
.
          MATCH     SAVESDEP,SAVEEDEP
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"End code less than start code.  ";
            CALL      HITENTER
            GOTO      GEDP0000
          ENDIF
.
          GOTO      GEDP9000
.
GEDP8000  MOVE      "~~~",SAVEEDEP
          DISPLAY   *P26:14,*V2LON,"End"
.
GEDP9000  MOVE      ZERO,EXIT
          GOTO      GEDP9999
.
GEDP9100  MOVE      ONE,EXIT
.
GEDP9999  RETURN
+
.*****************************************************************************
.*                               QCOM0000              Called by: MAIN0000   *
.*             See if the user wants to extract associated A/H comments      *
.* Returns: EXIT  0 - Ok to continue                                         *
.*                1 - Nothing entered                                        *
.*          COMMTFLG - Extract comments flag                                 *
.*                     0 = No                                                *
.*                     1 = Yes                                               *
.*****************************************************************************
.
QCOM0000  KEYIN     *P1:16,*EL,"Extract Comments (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") :":
                    *P26:16,*V2LON,ANS
.
          PACK      ANS,ANS,SP1                  * anything entered ?
          GOTO      QCOM9100 IF EQUAL            * no - finished
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS                     * "Y" entered ?
          IF        @EQUAL
            MOVE      ONE,COMMTFLG               * yes
            DISPLAY   *P26:16,*V2LON,DYES
            GOTO      QCOM9000
          ENDIF
.
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS                     * "N" entered ?
          IF        @EQUAL
            MOVE      ZERO,COMMTFLG              * yes
            DISPLAY   *P26:16,*V2LON,DNO
            GOTO      QCOM9000
          ENDIF
.
          BEEP                                   * invalid input
          GOTO      QCOM0000
.
QCOM9000  MOVE      ZERO,EXIT
          GOTO      QCOM9999
.
QCOM9100  MOVE      ONE,EXIT
.
QCOM9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*   Loop through the A/H Referrals file and extract each record             *
.*****************************************************************************
.
PROC0000  MOVE      ZERO,RECCOUNT                * initialise record count
          MOVE      ZERO,EXTCOUNT                * initialise extract count
          MOVE      ZERO,ACCCOUNT                * initialise acc count
          DISPLAY   *P1:24,*EL,"Processing:";
.
          CALL      IBACLOCK                     * get current date/time
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CTIMEIS,CURRTIME
          REP       " 0",CURRTIME
.
          PACK      KEY17,ZERO,SP70
PROC0400  CALL      RSALREF3                     * position at start of file
PROC0500  CALL      RKALREF3                     * read next record
          BRANCH    OVRCD,PROC9000               * eof - finished
.
          TYPE      ALRESTAT                     * numeric status ?
          GOTO      PROC9000 IF NOT EQUAL        * no
.
          MOVE      ALRESTAT,FORM1
          BRANCH    FORM1,PROC1000:              * Active
                          PROC9000:              * Closed
                          PROC9000:              * Inactive
                          PROC9000:              * Cancelled
                          PROC9000               * Rejected
.
PROC1000  IF        IBCNMHOS = 1
            MATCH     PTHSHOSP,ALREHOSN          * same hospital code ?
            GOTO      PROC0500 IF NOT EQUAL      * no - get next record
          ENDIF
.
          MATCH     SAVESDEP,ALREDEPT            * department in range ?
          GOTO      PROC0500 IF LESS             * no - ignore record
.
          MATCH     ALREDEPT,SAVEEDEP            * department in range ?
          GOTO      PROC0500 IF LESS             * no - ignore record
.
          MOVE      SP3,PMVXINTR
          MOVE      ALREVISN,KEY8
          CALL      RDPMVX11                     * visit extension found ?
.
          IF        COPTION = 1
            PACK      SAVKEY17,ALRESTAT,ALRERDAT,ALREVISN
          ENDIF
.
          ADD       ONE,RECCOUNT                 * increment record counter
.
          DISPLAY   *P13:24,*V2LON,RECCOUNT
.
          MOVE      ALREURNO,REFLURNO
          SQUEEZE   REFLURNO
          MOVE      ALREDACT,REFLDACT
          SQUEEZE   REFLDACT
          MOVE      ALRERDAT,REFLRDAT
          SQUEEZE   REFLRDAT
          MOVE      ALRERHCP,REFLRHCP
          SQUEEZE   REFLRHCP
          MOVE      ALREDEPT,REFLDEPT
          SQUEEZE   REFLDEPT
          MOVE      ALREPRTY,REFLPRTY
          SQUEEZE   REFLPRTY
          MOVE      ALREPRO1,REFLPRO1
          SQUEEZE   REFLPRO1
          MOVE      ALRESRCE,REFLSRCE
          SQUEEZE   REFLSRCE
          MOVE      ALRECOMP,REFLCOMP
          SQUEEZE   REFLCOMP
          MOVE      ALREHCP,REFLHCP 
          SQUEEZE   REFLHCP 
          MOVE      ALREDREC,REFLDREC
          SQUEEZE   REFLDREC
          MOVE      ALRECTYP,REFLCTYP
          SQUEEZE   REFLCTYP
          MOVE      ALREFHCP,REFLFHCP
          STRIP     REFLFHCP
          MOVE      ALRESTYP,REFLSTYP
          SQUEEZE   REFLSTYP
          MOVE      ALREPRCM,REFLPRCM
          STRIP     REFLPRCM
          MOVE      ALREPSIT,REFLPSIT
          SQUEEZE   REFLPSIT
          MOVE      SP6,REFLCLID
.
.         Check to see if the clinic is currently active and if not, then
.         leave the clinic id blank (as per webPAS front-end functionality)
.         (TSK 0825778)
.
          MATCH     SP6,ALRECLID                 * blank clinic id ?
          GOTO      PROC1100 IF EQUAL            * yes - leave field blank
.
          MATCH     SP6,ALREPSIT                 * blank preferred site ?
          GOTO      PROC1100 IF EQUAL            * yes - leave field blank
.
          MOVE      ALREPSIT,KEY6
          CALL      RDSITA1                      * site on file ?
          BRANCH    OVRCD,PROC1100               * no - leave field blank
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,OSTFILE,FILCLIA1
          OPEN      OUTCLIA1,CFNAME              * open new file
          TRAPCLR   IO
          BRANCH    OVRCD,PROC1100               * file not found
.
          PACK      KEY20,ALREPSIT,ALRECLID,CURRDATE
          CALL      RDCLIA1                      * clinic id on file for date ?
          IF        OVRCD = 1
            CALL      RDPCLIA1                   * no - previous date on file ?
            BRANCH    OVRCD,PROC1100             * no - leave field blank
.
            MATCH     ALREPSIT,OCASITE           * yes - same site still ?
            GOTO      PROC1100 IF NOT EQUAL      * no - leave field blank
.
            MATCH     ALRECLID,OCACLIN           * yes - same clinic still ?
            GOTO      PROC1100 IF NOT EQUAL      * no - leave field blank
          ENDIF
.
          MATCH     "0",OTCLIACT                 * active clinic ?
          IF        @EQUAL
            MOVE      ALRECLID,REFLCLID          * yes - load clinic id
          ENDIF
.
PROC1100  SQUEEZE   REFLCLID
.
          MOVE      ALRERTYP,REFLRTYP
          SQUEEZE   REFLRTYP
          MOVE      ALREMDAT,REFLMDAT
          SQUEEZE   REFLMDAT
          MOVE      ALREPRDT,REFLPRDT
          SQUEEZE   REFLPRDT
          MOVE      ALRECDAT,REFLCDAT
          SQUEEZE   REFLCDAT
          MOVE      ALRECTIM,REFLCTIM
          SQUEEZE   REFLCTIM
          MOVE      ALRECUID,REFLCUID
          SQUEEZE   REFLCUID
          MOVE      ALREUDAT,REFLUDAT
          SQUEEZE   REFLUDAT
          MOVE      ALREUTIM,REFLUTIM
          SQUEEZE   REFLUTIM
          MOVE      ALREUUID,REFLUUID
          SQUEEZE   REFLUUID
          MOVE      ALREVISN,REFLAVIS
          SQUEEZE   REFLAVIS
          MOVE      ALREREXP,REFLREXP
          SQUEEZE   REFLREXP
          MOVE      ALREUFR1,REFLUFR1
          STRIP     REFLUFR1
          MOVE      ALREUFR2,REFLUFR2
          STRIP     REFLUFR2
          MOVE      ALRERHCR,REFLRHCR
          SQUEEZE   REFLRHCR
          MOVE      ALREDIA1,REFLDIA1
          SQUEEZE   REFLDIA1
          MOVE      ALREDIA2,REFLDIA2
          SQUEEZE   REFLDIA2
          MOVE      ALREDIA3,REFLDIA3
          SQUEEZE   REFLDIA3
          MOVE      PTHSHOSP,REFLHOSN
          SQUEEZE   REFLHOSN
          MOVE      ALRESTAT,REFLSTAT
          SQUEEZE   REFLSTAT
.
          MATCH     "1",PMVXINTR
          IF        @EQUAL
            MOVE      ANSY,REFLINTR
          ELSE
            MOVE      ANSN,REFLINTR
          ENDIF
.
          MOVE      ALRERHCT,REFLRHCT
          SQUEEZE   REFLRHCT
          MOVE      ALREPURC,REFLPURC
          SQUEEZE   REFLPURC
          MOVE      ALREUHC1,REFLUHC1
          SQUEEZE   REFLUHC1
          MOVE      ALREORIG,REFLORIG
          STRIP     REFLORIG
          MOVE      ALREOUTP,REFLOUTP
          SQUEEZE   REFLOUTP
          MOVE      ALREUC22,REFLUC22
          SQUEEZE   REFLUC22
          MOVE      ALRECONT,REFLCONT
          SQUEEZE   REFLCONT
          MOVE      ALREUC20,REFLUC20
          SQUEEZE   REFLUC20
          MOVE      ALREUC21,REFLUC21
          SQUEEZE   REFLUC21
          MOVE      ALREUD10,REFLUD10
          SQUEEZE   REFLUD10
          MOVE      ALREUC25,REFLUC25
          SQUEEZE   REFLUC25
          MOVE      ALREUYN4,REFLUYN4
          REP       " N0N1Y",REFLUYN4
          MOVE      SP20,REFLLINK
          CALL      CLNK0000                     * load REFLLINK
          SQUEEZE   REFLLINK
          MOVE      ALREUHC4,REFLUHC4
          SQUEEZE   REFLUHC4
.
          MOVE      "0",REFLTYPE
.
          WRITE     REFLTEXT,SEQ;*+,REFLTYPE,PIPE,REFLURNO,PIPE,REFLDACT,PIPE:
                                    REFLRDAT,PIPE,REFLRHCP,PIPE,REFLDEPT,PIPE:
                                    REFLPRTY,PIPE,REFLPRO1,PIPE,REFLSRCE,PIPE:
                                    REFLCOMP,PIPE,REFLHCP,PIPE,REFLDREC,PIPE:
                                    REFLCTYP,PIPE,REFLFHCP,PIPE,REFLSTYP,PIPE:
                                    REFLPRCM,PIPE,REFLPSIT,PIPE,REFLCLID,PIPE:
                                    REFLRTYP,PIPE,REFLMDAT,PIPE,REFLPRDT,PIPE:
                                    REFLCDAT,PIPE,REFLCTIM,PIPE,REFLCUID,PIPE:
                                    REFLUDAT,PIPE,REFLUTIM,PIPE,REFLUUID,PIPE:
                                    REFLAVIS,PIPE,REFLREXP,PIPE,REFLUFR1,PIPE:
                                    REFLUFR2,PIPE,REFLRHCR,PIPE,REFLDIA1,PIPE:
                                    REFLDIA2,PIPE,REFLDIA3,PIPE,REFLHOSN,PIPE:
                                    REFLSTAT,PIPE,REFLINTR,PIPE,REFLRHCT,PIPE:
                                    REFLPURC,PIPE,REFLUHC1,PIPE,REFLORIG,PIPE:
                                    REFLOUTP,PIPE,REFLUC22,PIPE,REFLCONT,PIPE:
                                    REFLUC20,PIPE,REFLUC21,PIPE,REFLUD10,PIPE:
                                    REFLUC25,PIPE,REFLUYN4,PIPE,REFLLINK,PIPE:
                                    REFLUHC4,*-
.
          ADD       ONE,EXTCOUNT                 * increment extract count
.
.         Now get matching ACC data record for NZ sites only
.
          MOVE      ALREVISN,VISNUMBR
          CALL      EXACCDAT                     * extract ACC data for NZ only
          BRANCH    EXIT,PROC2000:               * no ACC data
                         PROC2000                * not NZ
.
          MOVE      "1",REFLTYPE
.
          WRITE     REFLTEXT,SEQ;*+,REFLTYPE,PIPE,REFLURNO,PIPE:
                                    ACCDNAME,PIPE,ACCDADD1,PIPE,ACCDADD2,PIPE:
                                    ACCDADD3,PIPE,ACCDADD4,PIPE,ACCDPOST,PIPE:
                                    ACCDTELP,PIPE,ACCDACDT,PIPE,ACCDACPT,PIPE:
                                    ACCDINSR,PIPE,ACCDCLNO,PIPE,ACCDCOM1,PIPE:
                                    ACCDCOM2,PIPE,ACCDALOC,PIPE,ACCDCINJ,PIPE:
                                    ACCDICOD,PIPE,ACCDCNAM,PIPE,ACCDCDTE,PIPE:
                                    ACCDCTIM,PIPE,ACCDWEBC,PIPE,ACCDLUPD,PIPE:
                                    ACCDLUPT,PIPE,ACCDWEBU,PIPE,ACCDACCF,PIPE:
                                    ACCDPLIN,PIPE,ACCDACTI,PIPE,ACCDADTE,PIPE:
                                    ACCDATME,PIPE,ACCDACLC,PIPE,ACCDAINZ,PIPE:
                                    ACCDMOVV,PIPE,ACCDSPTI,PIPE,ACCDSPRT,PIPE:
                                    ACCDRECI,PIPE,ACCDTRIC,PIPE,ACCDESTA,PIPE:
                                    ACCDPDDT,PIPE,ACCDARG1,PIPE,ACCDARG2,PIPE:
                                    ACCDARSN,PIPE,ACCDARTL,PIPE,ACCDARRP,PIPE:
                                    ACCDASST,PIPE,ACCDNEED,PIPE,ACCDCONT,PIPE:
                                    ACCDALTW,PIPE,ACCDTYPA,PIPE,ACCDSALT,PIPE:
                                    ACCDHPDA,PIPE,ACCDUNFD,PIPE,ACCDUNFT,PIPE:
                                    ACCDFISD,PIPE,ACCDRNWD,PIPE,ACCDCSTA,PIPE:
                                    ACCDTWRK,PIPE,ACCDOEST,PIPE,ACCDTPRO,PIPE:
                                    ACCDECOD,PIPE,ACCDTYP1,PIPE,ACCDDAT1,PIPE:
                                    ACCDTYP2,PIPE,ACCDDAT2,PIPE,ACCDTYP3,PIPE:
                                    ACCDDAT3,*-
.
          ADD       ONE,ACCCOUNT                 * increment acc count
.
.         Now get active comments from vismdtaf/vismtxaf for this visit
.         if the user as indicated they should be loaded
.
PROC2000  PERFORM   COMMTFLG,GCOM0000
.
.         Check if closing referrals
.
          IF        COPTION = 1
            MOVE      TWO,AUDTTYPE          * before history record
            CALL      WAALRE00
.
            MOVE      SP3,ALRERINA          * set fields as per ALLWEB02
            MOVE      SP8,ALREDINA
            MOVE      SP8,ALRETINA
            MOVE      SP8,ALREDINU
            MOVE      SP10,ALREUINA
.
            MOVE      SP70,ALRESREJ
            MOVE      SP70,ALRESRDT
            MOVE      SP70,ALRESRTM
            MOVE      SP70,ALRESRUI
.
            MOVE      CURRDATE,ALREUDAT          * current date
            MOVE      CURRTIME,ALREUTIM          * current time
            MOVE      "EXTRREFL",ALREUUID        * user id
.
            MOVE      "2",ALRESTAT               * update status to closed
            MOVE      SAVECODE,ALRERCLO          * load closure reason
            MOVE      CURRDATE,ALREDCLO          * load closure date
            MOVE      CURRTIME,ALRETCLO          * load closure time
            MOVE      "EXTRREFL",ALREUCLO        * load closure user
            CALL      UPALREF3
.
.>>>>       CALL      COPD0000              * Write OPD Close action
.
            PACK      KEY8,ALREURNO,SP70
            CALL      RDMAST1
            BRANCH    OVRCD,PROC5000        * invalid UR number
.
            PACK      KEY8,ALREURNO,SP70
            CALL      RDPMPX21              * read 2nd master file extension
            BRANCH    OVRCD,PROC5000        * invalid UR number
.
            CALL      PMIGTNID              * get national id for dgate write
            MOVE      NMPNUMB,PTNINMPI
            MOVE      ONE,HL7TRGID
            MOVE      SP8,HL7INCLD
            CALL      DGCLII13              * broadcast Update Ref. (REF^I13)
.
PROC5000    MOVE      THREE,AUDTTYPE        * after history record
            CALL      WAALRE00
.
.                                   ***** write to Referral History Table
            MOVE      ALREDCLO,ALSTSDAT
            CALL      WRTRSH00              * write a record to allstsaf
.
            CALL      WRTRAU00              * write to the referral audit table
.
.>>>>       CALL      ACTW0000              * Auto Activate waiting referral
.
            MOVE      SAVKEY17,KEY17
            GOTO      PROC0400                   * get next record
          ELSE
            GOTO      PROC0500                   * get next record
          ENDIF
.
PROC9000  DISPLAY   *P1:21,*EF,"Extraction complete.":
                    *P1:22,*V2LON,EXTCOUNT,*HOFF," A/H Open Referral records";
          IF        COPTION = 1
            DISPLAY   " extracted.";
          ELSE
            DISPLAY   " listed.";
          ENDIF
.
          DISPLAY   *P1:23,*V2LON,ACCCOUNT,*HOFF," A/H ACC records ";
          IF        COPTION = 1
            DISPLAY   "extracted.";
          ELSE
            DISPLAY   "listed.";
          ENDIF
.
          DISPLAY   *P1:24;
          CALL      HITENTER
.
PROC9999  RETURN
+
.******************************************************************************
.      write a record to the Referral Status History Table
.******************************************************************************
WRTRSH00  MOVE      ALREVISN,ALSTVISN       * Populate all the fields and write
          MOVE      ALRESTAT,ALSTSTAT
          PACK      ALSTCDAT,CCC,CYY,CMM,CDD
          REP       " 0",ALSTCDAT
          CLOCK     TIME,ALSTCTIM
          MOVE      "EXTRREFL",ALSTCUID
          PACK      KEY17,ALSTVISN,ALSTSTAT,ALSTSDAT,SP70
          CALL      RAALSTS1
          IF        OVRCD=0
            CALL      UPALSTS1                * update to the file
          ELSE
            CALL      WRALSTS1                * write to the file
          ENDIF
.
WRTRSH99  RETURN
+
.******************************************************************************
.      write a record to the Referral Audit Table
.******************************************************************************
WRTRAU00  CALL      CLALLAUD                     * clear allaudaf variables
.
          MOVE      ALREVISN,ALAUVISN
          PACK      ALAUADAT,CCC,CYY,CMM,CDD
          REP       " 0",ALAUADAT
          CLOCK     TIME,ALAUATIM
          MOVE      "C",ALAUUPDT          * Update type
          MOVE      "EXTRREFL",ALAUAUID
.
          MATCH     SP70,ACTNCODE
          IF        !@EQUAL
            MOVE      ACTNCODE,ALAUACTI
          ENDIF
.
          MATCH     SP70,COMMENTY
          IF        !@EQUAL
            MOVE      COMMENTY,ALAUCOMM
          ENDIF
.
          PACK      AUDITKEY,ALAUVISN,ALAUADAT,ALAUATIM,SP70
          PACK      KEY24,ALAUVISN,ALAUADAT,ALAUATIM,SP70
          CALL      RDALAUD1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRALAUD1                * write to the file
            TRAPCLR   IO
            BRANCH    OVRCD,WRTRAU99
          ENDIF
.
WRTRAU99  RETURN
+
.*****************************************************************************
.*                             GCOM0000            Called by: PROC0000       *
.*        Get any referral comment notes and load REFLCOMM                   *
.* Returns: REFLCOMM - A/H comments field                                    *
.*****************************************************************************
.
GCOM0000  PACK      KEY17,ALREVISN,ZERO,ZERO,EIGHT,SP70
          CALL      RSVSMDT1                     * position for A/H visit
GCOM0500  CALL      RKVSMDT1                     * read next record
          BRANCH    OVRCD,GCOM9999               * eof - finished comments
.
          MATCH     ALREVISN,VSMDVISN            * same visit still ?
          GOTO      GCOM9999 IF NOT EQUAL        * no - finished comments
.
          MATCH     "008",VSMDTYPE               * same type still ?
          GOTO      GCOM9999 IF NOT EQUAL        * no - finished note
.
          MATCH     "1",VSMDDELT                 * deleted comments ?
          GOTO      GCOM0500 IF EQUAL            * yes - ignore comments
.
.         We have found a valid header record, so get the associated
.         detail comment records
.
          CLEAR     REFLCOMM
          MOVE      SP6,SAVENOTE
.
          PACK      KEY20,VSMDVISN,ZERO,ZERO,EIGHT,VSMDNOTE,SP70
          CALL      RSVSMTX1                     * position for A/H visit
GCOM1500  CALL      RKVSMTX1                     * read next record
          BRANCH    OVRCD,GCOM8000               * eof - finished note
.
          MATCH     VSMDVISN,VSMTVISN            * same visit still ?
          GOTO      GCOM8000 IF NOT EQUAL        * no - finished note
.
          MATCH     "008",VSMTTYPE               * same type still ?
          GOTO      GCOM8000 IF NOT EQUAL        * no - finished note
.
          MATCH     VSMDNOTE,VSMTNOTE            * same note still ?
          GOTO      GCOM8000 IF NOT EQUAL        * no - finished note
.
          MATCH     SP6,SAVENOTE                 * blank note number ?
          IF        @EQUAL
            MOVE      VSMTNOTE,SAVENOTE          * yes - save note number
          ENDIF
.
          APPEND    VSMTCMNT,REFLCOMM            * load comment line
          GOTO      GCOM1500
.
.         Write the comments associated with a Note
.
GCOM8000  MATCH     SP6,SAVENOTE                 * anything found ?
          GOTO      GCOM0500 IF EQUAL            * no
.
          RESET     REFLCOMM                     * yes
          STRIP     REFLCOMM
.
          MOVE      "2",REFLTYPE
.
          WRITE     REFLTEXT,SEQ;*+,REFLTYPE,PIPE,REFLURNO,PIPE,REFLCOMM
.
          GOTO      GCOM0500                     * get next Note
.
GCOM9999  RETURN
+
.*****************************************************************************
.*                                 CLNK0000        Called by: PROC0000       *
.*         Check if internal referral is linked to a master referral         *
.* Returns: REFLLINK - linked master referral visit number                   *
.*****************************************************************************
.
CLNK0000  MATCH     "1",ALREUYN4                 * master referral record ?
          GOTO      CLNK9999 IF EQUAL            * yes - finished
.
.         This is an internal referral, so check if it is linked to
.         a master referral
.
          PACK      KEY16,ALREVISN,SP20
          CALL      RSALRLN2                     * position on internal referral
          CALL      RKALRLN2                     * read next record
          BRANCH    OVRCD,CLNK9999               * eof - finished
.
          MATCH     ALREVISN,ALRLLNKV            * same internal ref. still ?
          GOTO      CLNK9999 IF NOT EQUAL        * no - finished
.
          MOVE      ALRLVISN,REFLLINK            * save master referral
.
CLNK9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       BRHLCOMN
          INC       CLALLAUD
          INC       CLPMSWX1
          INC       DGCLII13
          INC       EXACCDAT
          INC       PATCODKY
          INC       PATHSPKY
          INC       PMIGTNID
.
          INC       ACCCMTIO/INC
          INC       ALLAUDIO/INC
          INC       ALLQUEIO/INC
          INC       ALLREFIO/INC
          INC       ALLRLNIO/INC
          INC       ALLSTSIO/INC
          INC       HL7CISIO/INC
          INC       HL7INBIO/INC
          INC       NHIMASIO/INC
          INC       OUTCLIIO/INC
          INC       OUTSITIO/INC
          INC       PATCODIO/INC
          INC       PATHSPIO/INC
          INC       PATMA1IO/INC
          INC       PATNIDIO/INC
          INC       PATWC1IO/INC
          INC       PMSPX2IO/INC
          INC       PMSWX1IO/INC
          INC       PMSQPTIO/INC
          INC       PMSVX1IO/INC
          INC       VISMDTIO/INC
          INC       VISMTXIO/INC
          INC       WEBSECIO/INC
