. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAPIN11                                             *
. * Desc      :   Private Practice General Ledger Interface Maintenance*
. **********************************************************************
. * Date      :   11/08/92                                             *
. * Author    :   DIG                                                  *
. * Comments  :   This program has been directly copied from IBAPIN01  *
. *           :   and then modified for Private Practice.              *
. *           :   N.B. The Journal section of this program has been    *
. *           :        commented out as it is no longer relevant. It   *
. *           :        may be at some stage, so, the code has been left*
. *           :        in the program                                  *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.01  18/10/2001  J.Tan                                        *
. *           Mods to keyin free format accounts if not using fms      *
. * V9.02.00  09/10/2001  J.Tan                                        *
. *           Ported from 5.09                                         *
. * V5.09.B02 15/01/2001  Charles Handaya                              *
. *           BAS Statement Modification                               *
. * V5.09.B01 15/12/2000  Sandra Barcham                               *
. *           Changed file from fmspataf to patfmsaf                   *
. **********************************************************************
. * V5.08.B03 28/03/2000  Jill Habasque                                *
. *           GST Mods                                                 *
. * V5.08.B02 08/03/2000  Steve Downing                                *
. *           Fixed read position for IBCNUGST                         *
. * V5.08.B01 15/02/2000  Steve Downing                                *
. *           Added GST Interface Details screen                       *
. **********************************************************************
. * V5.05.01  07/10/1997  Steve Armstrong       WWM Mods for G/L       *
. *           Mods for changes to FMSPRIFD.                            *
. *           Uncomented original journal code.                        *
. **********************************************************************
.
. Standard FMS Accounting System Include
.---------------------------------------
          INC       STDGENDF
.
.
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       IBABASFD/INC
.
          INC       FMSAMAFD/INC                 * Accounts
          INC       FMSAMADF                     * Accounts
          INC       FMSDISFD/INC                 * Dissection
          INC       FMSLMAFD/INC                 * Ledger
          INC       FMSRESFD/INC                 * Responsibility
          INC       PRIFMSFD/INC                 * Interface File
          INC       FMSCSAFD/INC
.
          INC       PATCODFD/INC                 * Codes file
.
          INC       PRICONFD/INC                 * Private Practice Control File
          INC       PRIITMFD/INC                 * Private Practice Item File
.
.
.LOCAL VARIABLE DEFINITION
.-------------------------
.
ACCEPT    FORM      1                            * accept mode (1=on)
.
CLAIM     DIM       3
CODE      DIM       2
IBCNUBAS  FORM      1
IBCNUGST  FORM      1
.
FILEOPEN  DIM       30
PRFMKEY   DIM       18
GSTJRNL   FORM      1
PTCNUFMS  FORM      1
.
IBASDESC  DIM       30
ICADESC   DIM       35
IDADESC   DIM       35
IDIDESC   DIM       35
IGADESC   DIM       35
IFLAG     FORM      2                            * for PRIITMDS
ILDDESC   DIM       35
IREDESC   DIM       35
ITEMFLAG  FORM      2
ITEMNUMB  DIM       9
ITEMTYPE  DIM       3
ITMDESC   DIM       30                           * for PRIITMDS
ITMFLAG   FORM      1                            * for PRIITMDS
.
LOCCITEM  FORM      2
.
PATHFLAG  FORM      1                            * for PRIITMDS
.
SAVSECT   FORM      1
SECTION   FORM      1
SERDATE   DIM       8                            * for PRIITMDS
SHTDESC   DIM       23                           * for PRIITMDS
SUBITEM   DIM       3
SUBSECT   FORM      1
.
TCADESC   DIM       35
TDADESC   DIM       35
TDIDESC   DIM       35
TLDDESC   DIM       35
TREDESC   DIM       35
.
WARD      DIM       3
.
.
. PROGRAM CONSTANTS
. -----------------
AMA       INIT      "AMA"
CODECL    INIT      "CL"
CODEFI    INIT      "FI"
CODEJ     INIT      "J "
CODEPG    INIT      "PG"
FMSAMA    INIT      "fmsamaaf"
FMSDIS    INIT      "fmsdisaf"
FMSLMA    INIT      "fmslmaaf"
FMSRES    INIT      "fmsresaf"
MBS       INIT      "MBS"
NINE8     FORM      "99999999"                   * for PRIITMDS
UNKNOWN   INIT      "Unknown Code"
.
.
PRGID     INIT      "IBAPIN11"
PRGNAM    INIT      "Private Practice General Ledger Interface Maintenance"
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                             ML0000                                         *
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
.
ML0000    CALL      INIT0000                     * display heading & open files
.
ML0200    CALL      PROC0000                     * get entry
          BRANCH    EXIT,ML9999,ML9999           * exit option
          CALL      SCRA0000                     * display screen A
.
.         Add/Modify/Delete data
.
          CALL      SELA0000                     * modify screen A
          BRANCH    EXIT,ML0200,ML2000           * Don't Save,  Delete
.
          CALL      POST0000                     * post screen A data
          GOTO      ML0200                       * get next entry
.
.         Delete data
.
ML2000    CALL      DELQST                       * ok to delete (y/n/c) ?
          BRANCH    CEXIT,ML2100,ML0200,ML0200
.
ML2100    CALL      DELT0000                     * delete screen A data
          GOTO      ML0200                       * get next entry
.
ML9999    CHAIN     PGM                          * chain back to menu
+
.******************************************************************************
.*                           INIT0000                  Called by: ML0000      *
.*                 Initialisation and open files                              *
.******************************************************************************
.
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P30:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,ZERO;*85,IBCNUGST:
                                 *107,IBCNUBAS
          READ      CONTROLF,THIRTY4;*166,PRCNGLIN,PRCNGLPA
          READ      CONTROLF,FIFTY9;*60,PTCNUFMS
.
.         Check if using G/L Interface
.
          COMPARE   ONE,PRCNGLIN 
          IF        !@EQUAL
            DISPLAY   *P1:24,*B,*EL,"General Ledger Interface is Turned Off.  ";
            CALL      HITENTER
            GOTO      INIT9500                   * Finished
          ENDIF
.
INIT1000  SQUEEZE   PRCNGLPA                     * remove blanks from G/L path
.
.         Open the fms private practice interface file
.
          DISPLAY   *P38:24,"prifmsaf";
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PRIFMSA1,"prifmsaf"
          TRAPCLR   IO
          BRANCH    OVRCD,INIT8000
.
.         Open the fms account master file
.
          PACK      FILEOPEN,PRCNGLPA,FMSAMA
          DISPLAY   *P38:24,FILEOPEN;
          OPEN      FMSAMAA1,FILEOPEN
          OPEN      FMSAMAA2,FILEOPEN
          OPEN      FMSAMAA3,FILEOPEN
          OPEN      FMSAMAA4,FILEOPEN
.
.         Open the fms dissection codes file
.
          PACK      FILEOPEN,PRCNGLPA,FMSDIS
          DISPLAY   *P38:24,FILEOPEN;
          OPEN      FMSDISA1,FILEOPEN
.
.         Open the fms Ledger Master file
.
          PACK      FILEOPEN,PRCNGLPA,FMSLMA
          DISPLAY   *P38:24,FILEOPEN;
          OPEN      FMSLMAA1,FILEOPEN
.
.         Open the fms responsibility file
.
          PACK      FILEOPEN,PRCNGLPA,FMSRES
          DISPLAY   *P38:24,FILEOPEN;
          OPEN      FMSRESA1,FILEOPEN
.
          DISPLAY   *P38:24,*EL,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P38:24,"priitemf";
          OPEN      PRIITEM1,"priitemf"           * PRI Item File
          OPEN      PRIITEM2,"priitemf"
.
          DISPLAY   *P38:24,"ibabasaf";
          OPEN      IBABASA1,"ibabasaf"
.
          GOTO      INIT9000
.
INIT8000  DISPLAY   *P1:24,*EL,*B,"File Not Found, prifmsaf.  ";
          CALL      HITENTER
          GOTO      INIT9500                     * Finished
.
INIT9000  DISPLAY   *P1:24,*EL;
          MOVE      ONE,CNEWDS
          MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9500  MOVE      ONE,EXIT
.
INIT9999  RETURN
+
.******************************************************************************
.* SCRA - Display Screen A                       Called by SELA0000, redisps  *
.*       Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
.
SCRA0000  CALL      DSCR0000              * Display screen
          UNPACK    SP70,IDIDESC,IREDESC
          UNPACK    SP70,ILDDESC,ICADESC
          UNPACK    SP70,IDADESC,IGADESC
          UNPACK    SP70,IBASDESC
          UNPACK    SP70,TDIDESC,TREDESC
          UNPACK    SP70,TLDDESC,TCADESC
          UNPACK    SP70,TDADESC
.
          MOVE      SP70,FMDSDESC
          MOVE      SP70,FMLADESC
          MOVE      SP70,FMRSDESC
          MOVE      SP70,FMAMDESC
.
          MOVE      PRFMIDI,KEY5
          CALL      RDFMDS1
          IF        OVRCD=0
            MOVE      FMDSDESC,IDIDESC
          ENDIF
.
          MOVE      PRFMIRE,KEY4
          CALL      RDFMRS1
          IF        OVRCD=0
            MOVE      FMRSDESC,IREDESC
          ENDIF
.
          MOVE      PRFMILD,KEY2
          CALL      RDFMLA1
          IF        OVRCD=0
            MOVE      FMLADESC,ILDDESC
          ENDIF
.
          MATCH     SP2,KEY2
          IF        !@EQUAL
            CALL      GACC0000                 * Get debtors & GST control
          ENDIF
.
          DISPLAY   *P28:10,*V2LON:
                    *P28:10,*V2LON,PRFMIDI,*HOFF,*P41:10,IDIDESC:
                    *P28:11,*V2LON,PRFMIRE,*HOFF,*P41:11,IREDESC:
                    *P28:12,*V2LON,PRFMILD,*HOFF,*P41:12,ILDDESC:
                    *P28:13,*V2LON,PRFMICA,*HOFF,*P41:13,ICADESC;
.
          BRANCH    PTCNUFMS,SCRA1000       * using fms system
          DISPLAY   *P28:14,*EL:
                    *P28:15,*EL;
          GOTO      SCRA2000
.
SCRA1000  DISPLAY   *P28:14,*V2LON,PRFMIDA,*HOFF,*P41:14,IDADESC;
.
          IF        SECTION<>2 & IBCNUGST=2
            DISPLAY   *P28:15,*V2LON,PRFMIGS,*HOFF,*P41:15,IGADESC;
          ENDIF
.
SCRA2000  IF        IBCNUBAS=1
            PACK      KEY3,PRFMBASC,SP70
            CALL      RDIBBA1
            IF        OVRCD=0
              MOVE      IBBADESC,IBASDESC
            ENDIF
            DISPLAY   *P28:16,*V2LON,PRFMBASC,*HOFF,*P41:16,IBASDESC;
          ENDIF
.
          COMPARE   TWO,SECTION               * Journal ?
          GOTO      SCRA9999 IF EQUAL           * Yes, no to be Invoiced section
.
          MOVE      PRFMTDI,KEY5
          CALL      RDFMDS1
          IF        OVRCD=0
            MOVE      FMDSDESC,TDIDESC
          ENDIF
.
          MOVE      PRFMTRE,KEY4
          CALL      RDFMRS1
          IF        OVRCD=0
            MOVE      FMRSDESC,TREDESC
          ENDIF
.
          MOVE      PRFMTLD,KEY2
          CALL      RDFMLA1
          IF        OVRCD=0
            MOVE      FMLADESC,TLDDESC
          ENDIF
.
          PACK      KEY14,PRFMTLD,PRFMTCA
          CALL      RDFMAM1
          IF        OVRCD=0
            MOVE      FMAMDESC,TCADESC
          ENDIF
.
          PACK      KEY14,PRFMTLD,PRFMTDA
          CALL      RDFMAM1
          IF        OVRCD=0
            MOVE      FMAMDESC,TDADESC
          ENDIF
.
          DISPLAY   *P28:18,*V2LON,PRFMTDI,*HOFF,*P41:18,TDIDESC:
                    *P28:19,*V2LON,PRFMTRE,*HOFF,*P41:19,TREDESC:
                    *P28:20,*V2LON,PRFMTLD,*HOFF,*P41:20,TLDDESC:
                    *P28:21,*V2LON,PRFMTCA,*HOFF,*P41:21,TCADESC:
                    *P28:22,*V2LON,PRFMTDA,*HOFF,*P41:22,TDADESC
.
SCRA9999  RETURN
+
.******************************************************************************
.* DSCR0000 - Display Screen A                                                *
.******************************************************************************
DSCR0000  DISPLAY   *P1:09,*EF:
                    *P5:09,*ULON,*V2LON,"Fees Invoiced       ",*HOFF:
                    *P1:10,*V2LON," 1",*HOFF,". Dissection           : ":
                    *P1:11,*V2LON," 2",*HOFF,". Responsibility       : ":
                    *P1:12,*V2LON," 3",*HOFF,". Ledger               : ";
.
          COMPARE   TWO,IBCNUGST
          GOTO      DSCR3000 IF NOT EQUAL
.
.         Accommodation & Misc. screens have GST control
.
          IF        SECTION=1
            DISPLAY   *P1:13,*V2LON," 4",*HOFF,". Income Account       : ";
.
            IF        PTCNUFMS=1
              DISPLAY   *P1:14,*V2LON,"  ",*HOFF,"  Debtors Control Acct.: ":
                        *P1:15,*V2LON,"  ",*HOFF,"  GST Control Account  : "
            ELSE
              DISPLAY   *P1:14,*EL:
                        *P1:15,*EL;
            ENDIF
            IF        IBCNUBAS=1
              DISPLAY   *P1:16,*V2LON," 5",*HOFF,". BAS Code             : ":
                        *P5:17,*ULON,*V2LON,"Fees to be Invoiced ",*HOFF:
                        *P1:18,*V2LON," 6",*HOFF,". Dissection           : ":
                        *P1:19,*V2LON," 7",*HOFF,". Responsibility       : ":
                        *P1:20,*V2LON," 8",*HOFF,". Ledger               : ":
                        *P1:21,*V2LON," 9",*HOFF,". Credit Account       : ":
                        *P1:22,*V2LON,"10",*HOFF,". Debit Account        : ";
            ELSE
              DISPLAY   *P5:17,*ULON,*V2LON,"Fees to be Invoiced ",*HOFF:
                        *P1:18,*V2LON," 5",*HOFF,". Dissection           : ":
                        *P1:19,*V2LON," 6",*HOFF,". Responsibility       : ":
                        *P1:20,*V2LON," 7",*HOFF,". Ledger               : ":
                        *P1:21,*V2LON," 8",*HOFF,". Credit Account       : ":
                        *P1:22,*V2LON," 9",*HOFF,". Debit Account        : ";
            ENDIF
.
            GOTO      DSCR9999
          ELSE
            IF        SECTION=2 & GSTJRNL=1
              DISPLAY   *P1:14,*V2LON," 4",*HOFF,". Debtors Control (CR) : ":
                        *P1:15,*V2LON," 5",*HOFF,". GST Control (DR)     : ";
              GOTO      DSCR9999
            ENDIF
          ENDIF
.
DSCR3000  DISPLAY   *P1:13,*V2LON," 4",*HOFF,". Credit Account       : ":
                    *P1:14,*V2LON," 5",*HOFF,". Debit Account        : ";
.
.         Journals don't have to be Invoiced section
.
          COMPARE   TWO,SECTION
          GOTO      DSCR9999 IF EQUAL
.
          DISPLAY   *P5:17,*ULON,*V2LON,"Fees to be Invoiced ",*HOFF:
                    *P1:18,*V2LON," 6",*HOFF,". Dissection           : ":
                    *P1:19,*V2LON," 7",*HOFF,". Responsibility       : ":
                    *P1:20,*V2LON," 8",*HOFF,". Ledger               : ":
                    *P1:21,*V2LON," 9",*HOFF,". Credit Account       : ":
                    *P1:22,*V2LON,"10",*HOFF,". Debit Account        : ";
.
DSCR9999  RETURN
+
.******************************************************************************
.* GACC0000 - Get Debtors & GST control details                              *
.******************************************************************************
GACC0000  COMPARE   TWO,IBCNUGST
          GOTO      GACC2000 IF NOT EQUAL
          COMPARE   TWO,SECTION            * Journal ?
          GOTO      GACC2000 IF EQUAL        * Yes, no GST control
.
          MOVE      FMLADEB,FMCSDEB
          MOVE      FMLAAGST,FMCSAGST
          PACK      KEY14,PRFMILD,PRFMICA    * ledger,income
          OPEN      FMSCSAA1,"fmscsaaf"
          CALL      RDFMCS1
          MATCH     SP70,FMCSDEB
          IF        @EQUAL
            MOVE      FMLADEB,PRFMIDA        * Debit account/Debtor account
          ELSE
            MOVE      FMCSDEB,PRFMIDA        * Debit account/Debtor account
          ENDIF
          MATCH     SP70,FMCSAGST
          IF        @EQUAL
            MOVE      FMLAAGST,PRFMIGS       * GST Control
          ELSE
            MOVE      FMCSAGST,PRFMIGS       * GST Control
          ENDIF
          PACK      KEY14,PRFMILD,PRFMIGS    * GST account
          CALL      RDFMAM1
          MOVE      FMAMDESC,IGADESC
.
GACC2000  PACK      KEY14,PRFMILD,PRFMICA      * Credit account/Income
          CALL      RDFMAM1
          IF        OVRCD=0
            MOVE      FMAMDESC,ICADESC
          ENDIF
.
          PACK      KEY14,PRFMILD,PRFMIDA      * Debit account/Debtor account
          CALL      RDFMAM1
          IF        OVRCD=0
            MOVE      FMAMDESC,IDADESC
          ENDIF
.
GACC9999  RETURN
+
.******************************************************************************
.* PROC - Enter On-Cost Code                  Called by ML0000                *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMONCODE (variable entered)                               *
.******************************************************************************
.
PROC0000  DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON," 0.",*HOFF," Exit":
                    *P1:5,*V2LON," 1.",*HOFF," Items":
                    *P1:6,*V2LON," 2.",*HOFF," Journals"
.
          KEYIN     *P1:8,"Selection : ",*V2LON,SECTION
.
          MOVE      ZERO,SUBSECT                 * initialise sub-section
          COMPARE   ZERO,SECTION                 * exit selected ?
          GOTO      PROC9500 IF EQUAL            * yes
.
PROC0050  BRANCH    SECTION,PROC1000:            * items
                            PROC2000             * journals
.
          BEEP                                   * invalid input
          GOTO      PROC0000
.
.         Misc. Items
.
PROC1000  CALL      MPRO0000                     * get item details
          BRANCH    EXIT,PROC0000                * exit selected
          GOTO      PROC9000
.
.         Journals
.
PROC2000  CALL      JPRO0000                     * get journal details
          BRANCH    EXIT,PROC0000                * exit selected
.
.
PROC9000  MOVE      ZERO,EXIT
          GOTO      PROC9999
.
PROC9500  MOVE      ONE,EXIT
.
PROC9999  RETURN
+
.****************************************************************************
.*                            JPRO0000                 Called by: PROC0000  *
.*  Keyin journal Code and see if interface record exists on file           *
.****************************************************************************
.
JPRO0000  MOVE      ZERO,GSTJRNL
          COMPARE   ZERO,SUBSECT
          GOTO      JPRO0200 IF NOT EQUAL
.
JPRO0010  DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON," 0.",*HOFF," Exit":
                    *P1:5,*V2LON," 1.",*HOFF," Defaults":
                    *P1:6,*V2LON," 2.",*HOFF," Journal Codes"
.
JPRO0100  KEYIN     *P1:8,"Selection : ",*V2LON,SUBSECT
.
          MOVE      SUBSECT,SAVSECT              * save sub-section
.
          COMPARE   ZERO,SUBSECT                 * exit selected ?
          GOTO      JPRO9500 IF EQUAL            * yes
.
JPRO0200  BRANCH    SUBSECT,JPRO1000:            * defaults selected
                            JPRO2000             * journal codes selected
.
          BEEP                                   * invalid selection
          GOTO      JPRO0100
.
.         Default Journals
.
JPRO1000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Default Journal Interface Details"
          PACK      KEY18,THREE,SP70
          MOVE      KEY18,PRFMKEY                * Save Key
          MOVE      ZERO,SUBSECT
          GOTO      JPRO8000
.
.         Journal Codes
.
JPRO2000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Journal Code         : "
.
          MOVE      TWENTY8,ECOL
          MOVE      FOUR,EVERT
          MOVE      CODEJ,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY                     * keyin code
          BRANCH    EXIT,JPRO0010:               * nothing entered
                         JPRO0010                * exitchar entered
.
.         Valid journal code entered
.
          UNPACK    ACODE,KEY2,KEY1
          DISPLAY   *P31:4,TDESC
.
          CMATCH    ANSG,THCSCOD
          IF        @EQUAL
            MOVE      ONE,GSTJRNL           * GST Journal
          ENDIF
.
          PACK      KEY18,THREE,KEY2,SP70
          MOVE      KEY18,PRFMKEY   * Save Key
.
.         Initialise interface file variables 
.
JPRO8000  CALL      CLER0000
.
.         See if record exists on file
.
          MOVE      ZERO,ACCEPT                  * set to change mode
          CALL      RDPRFM1                      * record on file ?
          LOAD      ACCEPT,OVRCD,ONE
          MOVE      ZERO,EXIT
          GOTO      JPRO9999
.
JPRO9500  MOVE      ONE,EXIT
.
JPRO9999  RETURN
+
.****************************************************************************
.*                          CLER0000                   Called by: JPRO0000  *
.*        Initialise interface file variables                     MPRO0000  *
.****************************************************************************
.
CLER0000  MOVE      SP70,PRFMIDI
          MOVE      SP70,PRFMIRE
          MOVE      SP70,PRFMILD
          MOVE      SP70,PRFMICA
          MOVE      SP70,PRFMIDA
          MOVE      SP70,PRFMTDI
          MOVE      SP70,PRFMTRE
          MOVE      SP70,PRFMTLD
          MOVE      SP70,PRFMTCA
          MOVE      SP70,PRFMTDA
          MOVE      SP70,PRFMIGS
          MOVE      SP70,PRFMBASC
          MOVE      SP70,PRFMSPA
.
CLER9999  RETURN
+
.****************************************************************************
.*                          MPRO0000                   Called by: PROC0000  *
.*  Keyin item details and see if record exists on interface file           *
.****************************************************************************
.
MPRO0000  COMPARE   ZERO,SUBSECT
          GOTO      MPRO0200 IF NOT EQUAL
.
MPRO0010  DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON," 0.",*HOFF," Exit":
                    *P1:5,*V2LON," 1.",*HOFF," Defaults":
                    *P1:6,*V2LON," 2.",*HOFF," Group Codes":
                    *P1:7,*V2LON," 3.",*HOFF," Item Codes"
.
MPRO0100  KEYIN     *P1:9,"Selection : ",*V2LON,SUBSECT
.
          MOVE      SUBSECT,SAVSECT              * save sub-section
.
          COMPARE   ZERO,SUBSECT                 * exit selected ?
          GOTO      MPRO9500 IF EQUAL            * yes
.
MPRO0200  BRANCH    SUBSECT,MPRO1000:            * defaults
                            MPRO2000:            * group codes
                            MPRO3000             * item codes
.
          BEEP                                   * invalid
          GOTO      MPRO0100
.
.         Default Items
.
MPRO1000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Default Items Interface Details"
          PACK      KEY18,ONE,SP70
          MOVE      KEY18,PRFMKEY                * Save Key
          MOVE      ZERO,SUBSECT
          GOTO      MPRO9000
.
.         Group Codes
.
MPRO2000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Set Code             : "
.
          MOVE      TWENTY8,ECOL
          MOVE      FOUR,EVERT
          MOVE      CODEPG,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY                     * keyin code
          BRANCH    EXIT,MPRO0010:               * nothing entered
                         MPRO0010                * exitchar entered
.
.         Valid set code entered
.
          MOVE      ACODE,KEY3
          DISPLAY   *P31:4,TDESC
.
          PACK      KEY18,ONE,KEY3,SP70
          MOVE      KEY18,PRFMKEY   * Save Key
          GOTO      MPRO9000
.
.         Item Codes
.
MPRO3000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Item Type            : ":
                    *P5:5,"Item Code            : ";
.
.         Keyin the item flag

MPRO3100  DISPLAY   *P28:4,*EL:
                    *P1:24,*EL,*V2LON,ZERO,*HOFF," = MBS, ",*V2LON,ONE,*HOFF:
                           " = AMA";
          MOVE      SP1,DIM1
          KEYIN     *P28:4,*V2LON,DIM1;
.
          PACK      DIM1,DIM1,SP1
.
          MATCH     SP1,DIM1                     * anything entered ?
          GOTO      MPRO0010 IF EQUAL            * no
.
          TYPE      DIM1                         * yes - see if we have a number
          IF        !@EQUAL
            BEEP                                 * no - rekey
            GOTO      MPRO3100
          ELSE
            MOVE      DIM1,ITEMFLAG
            IF        (ITEMFLAG = 0) | (ITEMFLAG = 1)
              MOVE      MBS,ITEMTYPE
              LOAD      ITEMTYPE,ITEMFLAG,AMA
              DISPLAY   *P32:4,ITEMTYPE,*P1:24,*EL;
              GOTO      MPRO3300
            ELSE
              DISPLAY   *P1:24,*EL,*B,"Invalid Item Type.  ";
              CALL      HITENTER
              GOTO      MPRO3100
            ENDIF
          ENDIF
.
.         Keyin the item number and sub-item number
.
MPRO3300  MOVE      ITEMFLAG,IFLAG               * load item type
          MOVE      FIVE,CVERT                   * load row
          MOVE      TWENTY8,CCOL                 * load column
.
          CALL      KYPRIITM                     * input item
          BRANCH    EXIT,MPRO3000:               * exitchar entered
                         MPRO3400:               * ? entered
                         MPRO3000                * nothing entered
.
          CALL      CHKI0000                     * valid item ?
          BRANCH    EXIT,MPRO3300                * no - rekey
.
          MATCH     SP3,SUBITEM                  * sub item keyed in ?
          IF        !@EQUAL
            DISPLAY   *P37:5,*V2LON,"(",SUBITEM,")"     * yes
          ENDIF
.
          DISPLAY   *P45:5,PRITDESC
          GOTO      MPRO3900
.
MPRO3400  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
          MOVE      ONE,ITMFLAG                  * display regardless of date
          MOVE      ONE,PATHFLAG                 * set to display all items
MPRO3450  CALL      PRIITMDS                     * display items on file
.
MPRO4000  DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      TWENTY4,CVERT                * load row
          MOVE      TEN4,CCOL                    * load column
          CALL      KYPRIITM
          BRANCH    EXIT,MPRO8000:               * exitchar entered
                         MPRO3450:               * ? entered
                         MPRO8000                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,MPRO4000                * no
.
          CALL      PUTSCR00                     * restore screen
          DISPLAY   *P28:5,*V2LON,ITEMNUMB
.
          MATCH     SP3,SUBITEM                  * subitem entered ?
          IF        !@EQUAL
            DISPLAY   *P37:5,*V2LON,"(",SUBITEM,")" * yes
          ENDIF
.
          DISPLAY   *P45:5,PRITDESC
          GOTO      MPRO3900
.
MPRO8000  CALL      FRESCR00                     * free screen
          GOTO      MPRO3000                     * re-key item type
.
.         Item was found so display the item details
.
MPRO3900  PACK      KEY18,ONE,PRITSETC,ITEMFLAG,ITEMNUMB,SUBITEM,SP70
          MOVE      KEY18,PRFMKEY   * Save Key
.
.         Initialise interface variables
.
MPRO9000  CALL      CLER0000
.
          MOVE      ZERO,ACCEPT                  * set to change mode
          CALL      RDPRFM1
          LOAD      ACCEPT,OVRCD,ONE             * set to insert mode
          MOVE      ZERO,EXIT
          GOTO      MPRO9999
.
MPRO9500  MOVE      ONE,EXIT
.
MPRO9999  RETURN
+
.****************************************************************************
.*                               CHKI0000              Called by: MPRO0000  *
.*                     see if valid item entered                            *
.*   RETURNS:      EXIT    0 = valid item                                   *
.*                         1 = not valid item                               *
.****************************************************************************
.
CHKI0000  PACK      KEY22,ITEMFLAG,ITEMNUMB,SUBITEM,NINE8
          CALL      RDPRIT1                      * record on file ?
          COMPARE   ZERO,OVRCD  
          GOTO      CHKI9000 IF EQUAL            * yes - ok
.
          CALL      RPPRIT1                      * read previous record
          BRANCH    OVRCD,CHKI1000               * end of file
.
          COMPARE   ITEMFLAG,PRITFLAG            * same item type ?
          GOTO      CHKI1000 IF NOT EQUAL        * no
.
          MATCH     ITEMNUMB,PRITITMN            * same item number ?
          GOTO      CHKI1000 IF NOT EQUAL        * no
.
          MATCH     SUBITEM,PRITSUBN             * same subitem number ?
          GOTO      CHKI1000 IF NOT EQUAL        * no
.
          GOTO      CHKI9000                     * yes
.
CHKI1000  DISPLAY   *P1:24,*EL,*B,"Item not on file. ";
          CALL      HITENTER
          GOTO      CHKI9500
.
CHKI9000  MOVE      ZERO,EXIT
          GOTO      CHKI9999
.
CHKI9500  MOVE      ONE,EXIT
.
CHKI9999  RETURN
+
.******************************************************************************
.* SELA - Modify screen A data                   Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMONDISS (variable entered)                               *
.******************************************************************************
.
SELA0000  MOVE      ZERO,LOCCITEM 
.  
.         Determine option to execute
.
SELA0100  ADD       ONE,LOCCITEM                   * get next option
          BRANCH    ACCEPT,SELA0500              * in accept mode ?
          CALL      MAINDEL                      * select/post/cancel ?
.
          COMPARE   ZERO,LOCCITEM
          GOTO      SELA9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,LOCCITEM
          GOTO      SELA9500 IF EQUAL            * cancel ?
.
          COMPARE   "-2",LOCCITEM
          GOTO      SELA9600 IF EQUAL            * Delete    
.
SELA0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      " 9",CVERT
.
.         Can not keyin Debtors/GST acct. for GST Accommodation& Misc.
.
          IF        IBCNUBAS=0 & IBCNUGST=2 & SECTION<>2 & LOCCITEM>4
            IF        ACCEPT=1
               IF       LOCCITEM=5
                 ADD       ONE,LOCCITEM
               ENDIF
            ELSE
               ADD      ONE,LOCCITEM
            ENDIF
          ENDIF
.
          ADD       LOCCITEM,CVERT
.
          BRANCH    LOCCITEM,SELA1100,SELA1200,SELA1300,SELA1400,SELA1500
          ADD       THREE,CVERT
.
          COMPARE   TWO,SECTION
          GOTO      SELA0600 IF EQUAL       * Journal has no to be invoiced
.
          BRANCH    LOCCITEM,SELA1100,SELA1200,SELA1300,SELA1400,SELA1500:
                           SELA1600,SELA1700,SELA1800,SELA1900,SELA2000
.
SELA0600  BRANCH    ACCEPT,SELA0900              * finished accept mode ?
          BEEP                                   * illegal option
.
SELA0900  MOVE      ZERO,ACCEPT                  * clear accept mode
          GOTO      SELA0100                     * get next option
.
.---- option 1 ----
.
SELA1100  CALL      KFMDSA00
          BRANCH    EXIT,SELA1100,SELA9500
          MOVE      FMDSCODE,PRFMIDI
          MOVE      FMDSDESC,IDIDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMIDI,*HOFF,*P41:CVERT,IDIDESC
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1200  CALL      KFMRSA00
          BRANCH    EXIT,SELA1200,SELA9500
          MOVE      FMRSCODE,PRFMIRE
          MOVE      FMRSDESC,IREDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMIRE,*HOFF,*P41:CVERT,IREDESC
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1300  CALL      KLMAFM00
          BRANCH    EXIT,SELA1300,SELA9500
          MOVE      FMLALEDG,PRFMILD
          MOVE      FMLADESC,ILDDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMILD,*HOFF,*P41:CVERT,ILDDESC
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1400  MOVE      PRFMILD,KEY2
          CALL      RDFMLA1
          MOVE      ONE,CACCTIND
.
          BRANCH    PTCNUFMS,SELA1420       * using fms system
          CALL      FAMAFM00
          MOVE      FMAMACCT,PRFMICA
          MOVE      "N/A",ICADESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMICA,*HOFF,*P41:CVERT,ICADESC
          GOTO      SELA0100
.
SELA1420  CALL      KAMAFM00
          BRANCH    EXIT,SELA1400,SELA9500
          MOVE      FMAMACCT,PRFMICA
          MOVE      FMAMDESC,ICADESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMICA,*HOFF,*P41:CVERT,ICADESC
.
          IF        IBCNUGST=2 & SECTION<>2
            CALL      GACC0000                   * Get debtors & GST control
            DISPLAY   *P28:14,*V2LON,PRFMIDA,*HOFF,*P41:14,IDADESC:
                      *P28:15,*V2LON,PRFMIGS,*HOFF,*P41:15,IGADESC;
          ENDIF
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1500
          IF        IBCNUBAS=1 & SECTION<>2
.
. BAS Code entry
.
            MOVE      " 28",CCOL
            MOVE      "16",CVERT
            CALL      KIBBAA00         * Standard Keyin BAS Code
            BRANCH    EXIT,SELA1500,SELA9500
            MOVE      IBBABASC,PRFMBASC
            MOVE      IBBADESC,IBASDESC
            DISPLAY   *PCCOL:CVERT,*V2LON,PRFMBASC,*HOFF,*P41:CVERT,IBASDESC
            GOTO      SELA0100
          ENDIF
.
          MOVE      PRFMILD,KEY2
          CALL      RDFMLA1
          MOVE      ONE,CACCTIND
.
          BRANCH    PTCNUFMS,SELA1520   * Using fms system
          CALL      FAMAFM00            * Keyin debtors account
          MOVE      FMAMACCT,PRFMIDA
          MOVE      "N/A",IDADESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMIDA,*HOFF,*P41:CVERT,IDADESC
          GOTO      SELA0100
.
SELA1520  CALL      KAMAFM00
          BRANCH    EXIT,SELA1500,SELA9500
          MOVE      FMAMACCT,PRFMIDA
          MOVE      FMAMDESC,IDADESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMIDA,*HOFF,*P41:CVERT,IDADESC
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1600  CALL      KFMDSA00
          BRANCH    EXIT,SELA1600,SELA9500
          MOVE      FMDSCODE,PRFMTDI
          MOVE      FMDSDESC,TDIDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMTDI,*HOFF,*P41:CVERT,TDIDESC
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1700  CALL      KFMRSA00
          BRANCH    EXIT,SELA1700,SELA9500
          MOVE      FMRSCODE,PRFMTRE
          MOVE      FMRSDESC,TREDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMTRE,*HOFF,*P41:CVERT,TREDESC
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1800  CALL      KLMAFM00
          BRANCH    EXIT,SELA1800,SELA9500
          MOVE      FMLALEDG,PRFMTLD
          MOVE      FMLADESC,TLDDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMTLD,*HOFF,*P41:CVERT,TLDDESC
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1900  MOVE      PRFMTLD,KEY2
          CALL      RDFMLA1
          MOVE      ONE,CACCTIND
.
          BRANCH    PTCNUFMS,SELA1920   * Using fms system
          CALL      FAMAFM00            * Keyin income account
          MOVE      FMAMACCT,PRFMTCA
          MOVE      "N/A",TCADESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMTCA,*HOFF,*P41:CVERT,TCADESC
          GOTO      SELA0100
.
SELA1920  CALL      KAMAFM00
          BRANCH    EXIT,SELA1900,SELA9500
          MOVE      FMAMACCT,PRFMTCA
          MOVE      FMAMDESC,TCADESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMTCA,*HOFF,*P41:CVERT,TCADESC
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA2000  MOVE      PRFMTLD,KEY2
          CALL      RDFMLA1
          MOVE      ONE,CACCTIND
.
          BRANCH    PTCNUFMS,SELA2020   * Using fms system
          CALL      FAMAFM00            * Keyin income account
          MOVE      FMAMACCT,PRFMTDA
          MOVE      "N/A",TDADESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMTDA,*HOFF,*P41:CVERT,TDADESC
          GOTO      SELA0100
.
SELA2020  CALL      KAMAFM00
          BRANCH    EXIT,SELA2000,SELA9500
          MOVE      FMAMACCT,PRFMTDA
          MOVE      FMAMDESC,TDADESC
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMTDA,*HOFF,*P41:CVERT,TDADESC
          GOTO      SELA0100
.
.---- exit points ----
.
SELA9000  MOVE      ZERO,EXIT                    * post
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT                     * cancel
          GOTO      SELA9999
.
SELA9600  MOVE      TWO,EXIT                     * delete
          GOTO      SELA9999
.
SELA9999  RETURN
+
.******************************************************************************
.* POST - Post data                              Called by ML0000             *
.******************************************************************************
.
POST0000  MOVE      PRFMKEY,KEY18
          CALL      RAPRFM1                 * record exists ?
          BRANCH    OVRCD,POST1000
          CALL      DEPRFM1                 * delete old record (if possible)
.
POST1000  CALL      WRPRFM1                 * write new record
.
POST9999  RETURN
+
.******************************************************************************
.* DELT - Delete data                            Called by ML0000             *
.******************************************************************************
.
DELT0000  MOVE      PRFMKEY,KEY18
          CALL      DEPRFM1                 * delete old record (if possible)
.
DELT9999  RETURN
+
.------------------------------------------------------------
. Redisplay Routines
.------------------------------------------------------------
RAMAFM00
RDISFM00
RLMAFM00
RRESFM00
          BRANCH    SECTION,REDI1000,REDI2000
.
REDI1000  BRANCH    SAVSECT,REDI1100,REDI1200,REDI1300
REDI1100  DISPLAY   *P1:4,*EF:
                    *P5:4,"Default Items Interface Details"
          GOTO      REDI5000
.
REDI1200  DISPLAY   *P1:4,*EF
          UNPACK    PRFMKEY,KEY1,KEY3
          DISPLAY   *P5:4,"Group Code           : ",*V2LON,KEY3,SP1,*HOFF,TDESC
          GOTO      REDI5000
.
REDI1300  DISPLAY   *P1:4,*EF
          UNPACK    PRFMKEY,KEY1,KEY2,KEY9,KEY3
          DISPLAY   *P5:4,"Item Type            : ",*V2LON,KEY2:
                    *P32:4,ITEMTYPE:
                    *P5:5,"Item Code            : ",*V2LON,KEY9,SP1,*HOFF:
                           PRITDESC:
                    *P5:6,"Sub-Item Code            : ",*V2LON,KEY3;
          GOTO      REDI5000
.
REDI2000  BRANCH    SAVSECT,REDI2100,REDI2200
REDI2100  DISPLAY   *P1:4,*EF:
                    *P5:4,"Default Journal Interface Details"
          GOTO      REDI5000
REDI2200  DISPLAY   *P1:4,*EF
          UNPACK    PRFMKEY,KEY1,KEY2
          DISPLAY   *P5:4,"Journal Code         : ",*V2LON,KEY2,SP1,*HOFF,TDESC
.
REDI5000  DISPLAY   *P1:10,*EF:
                    *P5:10,*ULON,*V2LON,"Fees Invoiced       ",*HOFF:
                    *P1:11,*V2LON," 1",*HOFF,". Dissection           : ":
                    *P1:12,*V2LON," 2",*HOFF,". Responsibility       : ":
                    *P1:13,*V2LON," 3",*HOFF,". Ledger               : ":
                    *P1:14,*V2LON," 4",*HOFF,". Credit Account       : ":
                    *P1:15,*V2LON," 5",*HOFF,". Debit Account        : ":
                    *P5:17,*ULON,*V2LON,"Fees to be Invoiced ",*HOFF:
                    *P1:18,*V2LON," 6",*HOFF,". Dissection           : ":
                    *P1:19,*V2LON," 7",*HOFF,". Responsibility       : ":
                    *P1:20,*V2LON," 8",*HOFF,". Ledger               : ":
                    *P1:21,*V2LON," 9",*HOFF,". Credit Account       : ":
                    *P1:22,*V2LON,"10",*HOFF,". Debit Account        : ";
.
          MOVE      SP70,FMDSDESC
          MOVE      SP70,FMLADESC
          MOVE      SP70,FMRSDESC
          MOVE      SP70,FMAMDESC
          MOVE      PRFMIDI,KEY5
          CALL      RDFMDS1
          MOVE      FMDSDESC,IDIDESC
.
          MOVE      PRFMTDI,KEY5
          CALL      RDFMDS1
          MOVE      FMDSDESC,TDIDESC
.
          MOVE      PRFMIRE,KEY4
          CALL      RDFMRS1
          MOVE      FMRSDESC,IREDESC
.
          MOVE      PRFMTRE,KEY4
          CALL      RDFMRS1
          MOVE      FMRSDESC,TREDESC
.
          MOVE      PRFMILD,KEY2
          CALL      RDFMLA1
          MOVE      FMLADESC,ILDDESC
.
          MOVE      PRFMTLD,KEY2
          CALL      RDFMLA1
          MOVE      FMLADESC,TLDDESC
.
          PACK      KEY14,PRFMILD,PRFMIDA
          CALL      RDFMAM1
          MOVE      FMAMDESC,IDADESC
.
          PACK      KEY14,PRFMILD,PRFMICA
          CALL      RDFMAM1
          MOVE      FMAMDESC,ICADESC
.
          PACK      KEY14,PRFMTLD,PRFMTDA
          CALL      RDFMAM1
          MOVE      FMAMDESC,TDADESC
.
          PACK      KEY14,PRFMTLD,PRFMTCA
          CALL      RDFMAM1
          MOVE      FMAMDESC,TCADESC
.
          DISPLAY   *P28:11,*V2LON:
                    *P28:11,*V2LON,PRFMIDI,*HOFF,*P41:11,IDIDESC:
                    *P28:12,*V2LON,PRFMIRE,*HOFF,*P41:12,IREDESC:
                    *P28:13,*V2LON,PRFMILD,*HOFF,*P41:13,ILDDESC:
                    *P28:14,*V2LON,PRFMICA,*HOFF,*P41:14,ICADESC:
                    *P28:15,*V2LON,PRFMIDA,*HOFF,*P41:15,IDADESC:
                    *P28:18,*V2LON,PRFMTDI,*HOFF,*P41:18,TDIDESC:
                    *P28:19,*V2LON,PRFMTRE,*HOFF,*P41:19,TREDESC:
                    *P28:20,*V2LON,PRFMTLD,*HOFF,*P41:20,TLDDESC:
                    *P28:21,*V2LON,PRFMTCA,*HOFF,*P41:21,TCADESC:
                    *P28:22,*V2LON,PRFMTDA,*HOFF,*P41:22,TDADESC
          RETURN
.
MAINDEL   MOVE      ZERO,LOCCITEM
          MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"C",*HOFF,")ancel, (":
                    *V2LON,"D",*HOFF,")elete ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MAINDEL IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  C",CCITEMD
          GOTO      MAINDEL1 IF EQUAL
.
          MATCH     "  P",CCITEMD
          GOTO      MAINDEL2 IF EQUAL
.
          MATCH     "  D",CCITEMD
          GOTO      MAINDEL3 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      MAINDELE IF NOT EQUAL
.
          MOVE      CCITEMD,LOCCITEM
          COMPARE   ONE,LOCCITEM
          GOTO      MAINDELE IF LESS
.
          RETURN
.
MAINDELE  BEEP
          GOTO      MAINDEL
.
MAINDEL1  MOVE      "-1",LOCCITEM
          RETURN
.
MAINDEL2  MOVE      "0",LOCCITEM
          RETURN
+
MAINDEL3  MOVE      "-2",LOCCITEM
          RETURN
+
.-------------------------------------------------------------------------------
. Accept Code Keyin - Code can either be Exist or not
.-------------------------------------------------------------------------------
FAMAFM00  MOVE      TWO,CKEYTYP
          MOVE      SP70,FMAMDESC
          MOVE      FMLALEDG,FMAMLEDG
          DISPLAY   *PCCOL:CVERT,*EL;
          CALL      KFMAMA00
          RETURN
+
.******************************************************************************
.*        I/O Includes                                                        *
.******************************************************************************
.
          INC       STDGENCD           * FMS Acc. standard routines
.
          INC       FMSAMAKY        * Accounts
          INC       FMSDISKY        * Accounts
          INC       FMSLMAKY        * Accounts
          INC       FMSRESKY        * Accounts
          INC       KYPRIITM
          INC       PATCODKY
          INC       PRIITMDS
.
          INC       IBABASKY        * BAS code
          INC       IBABASIO/INC    * BAS code
.
          INC       FMSAMAIO/INC    * Accounts
          INC       FMSCSAIO/INC    * Control accounts
          INC       FMSDISIO/INC    * Dissection
          INC       FMSLMAIO/INC    * Ledger
          INC       FMSRESIO/INC    * Responsibility
          INC       PRIFMSIO/INC    * Interface File
.
          INC       PATCODIO/INC
          INC       PRIITMIO/INC    * Declared in program because of conflict
.                                   * with Standard FMS ITEMNO
