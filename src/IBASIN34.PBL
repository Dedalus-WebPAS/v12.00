.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  11.04.2005 Peter Vela CAR 59696
.           Recompiled for SINUSAGE
. V9.03.01  10.09.2003 Steve Downing (VF.11.01 CAR 9375)
.           Recompiled for SINREBFD & SINREBIO
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 02.11.2000 Charles Handaya
.           Recompiled for sincchaf and SINUSAGE change
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.01.01  18.07.2000 Charles Handaya
.           Omnicell import file - Add Restock ID (SIBARESI, SIBPRESI)
.           Quote 9817
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           22.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  03.11.1999 Sandra Barcham
.           Change locked message to use X
.-------------------------------------------------------
CMDLINE   DIM       80
.
PRTQTY    FORM      7
PRTCST    FORM      8.4
PRTAMT    FORM      10.2
PRTTOT    FORM      10.2
.
TMBANAME  DIM       8
TMBANAMA  INIT      "tmpbac"
TOTALEFT  FORM      12.2
.
TMPBACA1  IFILE     SQL, FIXED=61, KEY="U26-33,21-25,6-12,1-5,13-20"
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASIN34
.   Function      :   Input Return of Stock                   
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       SINBACFD/INC
          INC       SINBATFD/INC
          INC       SINBPSFD/INC
          INC       SINCCAFD/INC
          INC       SINCCBFD/INC
          INC       SINCCCFD/INC
          INC       SINCCEFD/INC
          INC       SINCCFFD/INC
          INC       SINCCHFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCIBFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCIGFD/INC
          INC       SINCIHFD/INC
          INC       SINCIIFD/INC
          INC       SINCONFD/INC
          INC       SINITMFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINREAFD/INC
          INC       SINREBFD/INC
          INC       SINRTFFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWRKDF    
          INC       SINWRKFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
.
.    Multi Item Key Fields Scr 00 Fld    13
.-------------------------------------------------------
SIRT1NAM  INIT      "SIRT1"
SIRT1LEN  FORM      "62"
SIRT1IDX  INIT      "DC1-5 UC6-8"
SIRT1FNM  DIM       8  * Filename
SIRT1AFL  FORM      1  * End Accept Mode
SIRT1END  FORM      1  * End Display
SIRT1SNO  FORM      5  * Number of Items on the Screen
SIRT1NXT  DIM          8
SIRT1FL1  IFILE     SQL, FIXED=62,  KEY="D1-5"
SIRT1FL2  IFILE     SQL, FIXED=62, KEY="U6-8"
SIRT1CNT  FORM      3  * Number of Items on Screen
NOTECATA  DIM       1 * Scr 00 Fld    26
CATASOH   FORM     12.2 * Scr 00 Fld    27
CATADES   DIM       7 * Scr 00 Fld    28
CATACODE  DIM       7 * Scr 00 Fld    29
CATARAS   DIM       8 * Scr 00 Fld    30
NOTESICC  DIM       5 * Scr 00 Fld    31
.
.Word Processor File * Scr 00 Fld    32
.
NAMSICC1  INIT      "Wsicc1"
FILSICC1  DIM       8
.
CATAAVC   FORM     12.4 * Scr 00 Fld    33
NOTESIIG  DIM       1 * Scr 00 Fld    34
.
.Word Processor File * Scr 01 Fld    16
.
NAMSIIG1  INIT      "Wsiig1"
FILSIIG1  DIM       8
.
.
.Word Processor File * Scr 01 Fld    17
.
NAMSIIB1  INIT      "Wsiib1"
FILSIIB1  DIM       8
.
.
.    Multi Item Key Fields Scr BA Fld     1
.-------------------------------------------------------
SIBT1NAM  INIT      "SIBT1"
SIBT1LEN  FORM      "58"
SIBT1IDX  INIT      "DC1-5 UC6-13"
SIBT1FNM  DIM       8  * Filename
SIBT1AFL  FORM      1  * End Accept Mode
SIBT1END  FORM      1  * End Display
SIBT1SNO  FORM      5  * Number of Items on the Screen
SIBT1NXT  DIM         13
SIBT1FL1  IFILE     SQL, FIXED=58,  KEY="D1-5"
SIBT1FL2  IFILE     SQL, FIXED=58, KEY="U6-13"
SIBT1CNT  FORM      3  * Number of Items on Screen
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASIN34"
PRGNAM    INIT      "Input Return of Stock                   "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RINCOCAT
          CALL      SC00L000
          CLOSE     SIRT1FL2
          CLOSE     SIRT1FL1,DELETE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILSICC1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILSIIG1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILSIIB1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          CLOSE     SIBT1FL2
          CLOSE     SIBT1FL1,DELETE
.
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA1,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA2,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA3,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbataf";
          OPEN      SINBATA1,"sinbataf"
          DISPLAY   *P56:24,"Opening sinbpsaf";
          OPEN      SINBPSA1,"sinbpsaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccbaf";
          OPEN      SINCCBA1,"sinccbaf"
          DISPLAY   *P56:24,"Opening sincccaf";
          OPEN      SINCCCA1,"sincccaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA1,"sincceaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA1,"sinccfaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA1,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA2,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA3,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA4,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA5,"sincchaf"
          DISPLAY   *P56:24,"Opening sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincibaf";
          OPEN      SINCIBA1,"sincibaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA1,"sincifaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA2,"sincifaf"
          DISPLAY   *P56:24,"Opening sincigaf";
          OPEN      SINCIGA1,"sincigaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sinciiaf";
          OPEN      SINCIIA1,"sinciiaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA1,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA2,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA1,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA4,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA1,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA2,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA3,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrtfaf";
          OPEN      SINRTFA1,"sinrtfaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
.--------------------------------------------------------
. Initialise Batch Screen Unique ID                          
.--------------------------------------------------------
          MOVE     ZERO,SIRT1SNO
          MOVE     "00   13",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,SIRT1SNO
            ENDIF
          ENDIF
.--------------------------------------------------------
. Initialise Wp Filename for Cost Centre Notes                  
.--------------------------------------------------------
          PACK      FILSICC1,NAMSICC1,PORT
          REP       " 0",FILSICC1
          DISPLAY   *P56:24,"Create & Open ",FILSICC1;
          PREP      TEMPWORD,FILSICC1
.
.--------------------------------------------------------
. Initialise Wp Filename for Catalog/Warehouse Notes            
.--------------------------------------------------------
          PACK      FILSIIG1,NAMSIIG1,PORT
          REP       " 0",FILSIIG1
          DISPLAY   *P56:24,"Create & Open ",FILSIIG1;
          PREP      TEMPWORD,FILSIIG1
.
.--------------------------------------------------------
. Initialise Wp Filename for Catalog Notes                      
.--------------------------------------------------------
          PACK      FILSIIB1,NAMSIIB1,PORT
          REP       " 0",FILSIIB1
          DISPLAY   *P56:24,"Create & Open ",FILSIIB1;
          PREP      TEMPWORD,FILSIIB1
.
.--------------------------------------------------------
. Initialise Batch Screen Requisition                        
.--------------------------------------------------------
          MOVE     ZERO,SIBT1SNO
          MOVE     "BA    1",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,SIBT1SNO
            ENDIF
          ENDIF
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Input Return of Stock              
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Catalog Notes Display              
          ENDIF
          MATCH     "BA",SCRID
          IF         @EQUAL
            CALL       PSBAL000   * Backorder Allocation               
          ENDIF
          RETURN
.--------------------------------
. Screen - Input Return of Stock              
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   40",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      DEFAULTS
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Input Return of Stock              
.-------------------------------------------------------
CF00L000
          MOVE      SP70,SIPEPER 
          MOVE      SP70,SIPEYEAR
          MOVE      SP70,SIRACST 
          MOVE      SP70,SICADESC
          MOVE      SP70,SICATELE
          MOVE      SP70,SICACONT
          MOVE      SP70,SIRADEL 
          MOVE      SP70,SIRADAT 
          MOVE      SP70,SIRTUNI 
          MOVE      SP70,SIRTWAR 
          MOVE      SP70,SIRTCAT 
          MOVE      ZERO,SIRTREQ 
          MOVE      SP70,SIIADES 
          MOVE      SP70,SIIAISS 
          MOVE      SP70,NOTECATA
          MOVE      ZERO,CATASOH 
          MOVE      SP70,CATADES 
          MOVE      SP70,CATACODE
          MOVE      SP70,CATARAS 
          MOVE      SP70,NOTESICC
          MOVE      ZERO,CATAAVC 
          MOVE      SP70,NOTESIIG
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Input Return of Stock              
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SICADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SICATELE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SICACONT
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      NSICC000
.
.
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NOTESICC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "1",CKEYTYP
          CALL      ECOST000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ONE,ACCEPT
          MOVE      SIRACST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SICADESC,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SICATELE,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SICACONT,VAR     
            CALL      DISPITEM
          ENDIF
          CALL      NSICC000
.
.
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NOTESICC,VAR     
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Input Return of Stock              
.---------------------------------------------------------
WP00L000
          PREP     TEMPWORD,FILSICC1
          PACK     KEY8,SICACODE,SP70
          MOVE     KEY8,SAVKEY80
          SETLPTR  SAVKEY80,5 
          CALL      RDSICC1 
          IF        OVRCD=0
            CALL      RPSICC1 
          ENDIF
WP00L100
          CALL     RKSICC1 
          BRANCH   OVRCD,WP00L105
          PACK     KEY8,SICCCST,SICCLIN
          MATCH    SAVKEY80,KEY8    
          GOTO     WP00L105 IF NOT EQUAL
          PACK     VAR,SICCCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     SICCCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP00L100
WP00L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Input Return of Stock              
.---------------------------------------------------------
LM00L000
.---------------------------------------------------------
. Load for :    13 Unique ID                          
.---------------------------------------------------------
          UNPACK    SP70,SIRTPOR,SIRTUNI
          PACK      SIRT1FNM,ANST,SIRT1NAM,PORT
          REP       " 0",SIRT1FNM
          MOVE      ZERO,SIRT1AFL
          CLOSE     SIRT1FL2
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SIRT1FL1,SIRT1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     SIRT1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,SIRT1FNM,SP1,SIRT1LEN,SP1,SIRT1IDX
          DISPLAY   *P1:3;
          EXECUTE   KEY80,TASKID
          OPEN      SIRT1FL1,SIRT1FNM
          OPEN      SIRT1FL2,SIRT1FNM
          PACK      KEY5,PORT,SP70
          MOVE      KEY5,SAVKEY80
          SETLPTR   SAVKEY80,2 
          CALL      RDSIRT1 
          IF        OVRCD=0
            CALL      RPSIRT1 
          ENDIF
LM00L100
          CALL      RKSIRT1 
          BRANCH    OVRCD,LM00L105
          PACK      KEY5,SIRTPOR,SIRTUNI
          MATCH     SAVKEY80,KEY5    
          GOTO      LM00L105 IF NOT EQUAL
          RESET     KEY5,3
          MOVE      KEY5,KEY3
          MOVE      SP70,SCTMROW
          MOVE      SP70,SCTMCOL
          CALL      TASIRT12
          IF        OVRCD=0
            CALL      TUSIRT12
          ELSE
            CALL      TWSIRT12
          ENDIF
          GOTO     LM00L100
LM00L105
          MOVE     SP70,KEY3   
          CALL     TSSIRT12
          RETURN
.---------------------------------------------------------
. Batch Item Selected Screen : Input Return of Stock              
.---------------------------------------------------------
SM00L000
          MOVE      ZERO,STDGSFLG
          MOVE      SCPSITM,FIRSTITM
          MOVE      SCPSROW,SCTMROW
          MOVE      SCPSCOL,SCTMCOL
          PACK      KEY15,PRGID,SCRID,SCPSROW,SCPSCOL
          MOVE      KEY15,SKSCPS15
          CALL      RDSCPS1
          COMPARE   ZERO,ACCEPT
          GOTO      SM00L010 IF EQUAL
SM00L005
          MOVE      SCPSROW,CVERT
          MOVE      SCPSCOL,CCOL
          MOVE      SCPSITM,FIELDNO
          MOVE      ONE,STDGSFLG
          BRANCH    FIELDNO,SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L101,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                           SM00L010,SM00L010,SM00L010,SM00L010
SM00L006
          CALL      RKSCPS1
          BRANCH    OVRCD,SM00L007
          MATCH     PRGID,SCPSPID
          GOTO      SM00L007 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      SM00L007 IF NOT EQUAL
          MATCH     FIRSTITM,SCPSITM
          GOTO      SM00L007 IF EQUAL
          MATCH     NAMSSFFI,SCPSMTY
          GOTO      SM00L006 IF NOT EQUAL
          GOTO      SM00L005
SM00L007
          MOVE      ZERO,STDGSFLG
          MOVE      SKSCPS15,KEY15
          CALL      RDSCPS1
SM00L010
          BRANCH    STDGSFLG,SM00L006
          CALL      RKSCPS1
          BRANCH    OVRCD,SM00L900
          MATCH     PRGID,SCPSPID
          GOTO      SM00L900 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      SM00L900 IF NOT EQUAL
          MATCH     FIRSTITM,SCPSITM
          GOTO      SM00L900 IF EQUAL
          MATCH     NAMSSFFI,SCPSMTY
          GOTO      SM00L010 IF NOT EQUAL
          MOVE      SCPSROW,CVERT
          MOVE      SCPSCOL,CCOL
          MOVE      SCPSITM,FIELDNO
          BRANCH    FIELDNO,SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L102,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                            SM00L010,SM00L010,SM00L010,SM00L010:
                           SM00L010,SM00L010,SM00L010,SM00L010
          GOTO      SM00L010
.
SM00L101
          MOVE     ZERO,SIRT1AFL
          MOVE     Z70,KEY3   
          CALL     TSSIRT12
          CALL     TPSIRT12
          IF       OVRCD=1
            MOVE      "3",SECTOR
            NFORMAT   FORM21,SECTOR,ZERO
            MOVE     ONE,FORM21
            MOVE     FORM21,SIRTUNI 
          ELSE
            MOVE      "3",SECTOR
            NFORMAT   FORM21,SECTOR,ZERO
            MOVE     SIRTUNI,FORM21
            ADD      ONE,FORM21
            MOVE     FORM21,SIRTUNI 
          ENDIF
          PACK     KEY5,SIRTPOR,SIRTUNI                                                            
          RESET    KEY5,3
          MOVE     KEY5,KEY3
          CALL      TASIRT12
          IF        OVRCD=0
            MOVE      "Record Already On File - ",DISPMSG
            CALL      MESSAGE1
            GOTO      SM00L101
          ENDIF
          MOVE      SIRTUNI,VAR      
          CALL      DISPITEM
          CALL      ITMDET00
          GOTO     SM00L010
.
SM00L102
          MOVE      "0",CKEYTYP
          CALL      EWARE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SM00L102
            ENDIF
            BRANCH    EXIT,SM00L102,SM00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SM00L990 IF EQUAL
          ENDIF
          MOVE      SIRTWAR,VAR      
          CALL      DISPITEM
          GOTO     SM00L010
SM00L900
          MATCH    "SIRT1",NAMSSFFI
          IF       @EQUAL
            PACK     KEY5,SIRTPOR,SIRTUNI
            RESET    KEY5,3
            MOVE     KEY5,KEY3
            CALL      TASIRT12
            IF        OVRCD=0
              CALL      TUSIRT12
            ELSE
              CALL      TWSIRT12
            ENDIF
            GOTO      SM00L999
          ENDIF
          GOTO      SM00L999
SM00L990
          MATCH    "SIRT1",NAMSSFFI
          IF       @EQUAL
            MOVE     ONE,SIRT1AFL
          ENDIF
SM00L999
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP00L000
          MOVE     ZERO,SIRT1CNT
          MOVE     ZERO,SIRT1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP00L600
          MATCH    PRGID,SCPSPID
          GOTO     DP00L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP00L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP00L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP00L010,DP00L010,DP00L010,DP00L010:
                            DP00L010,DP00L010,DP00L010,DP00L010:
                            DP00L010,DP00L010,DP00L010,DP00L010:
                            DP00L101,DP00L102,DP00L103,DP00L104:
                            DP00L010,DP00L010,DP00L010,DP00L010:
                            DP00L010,DP00L010,DP00L010,DP00L105:
                            DP00L106,DP00L107,DP00L010,DP00L010:
                            DP00L010,DP00L010,DP00L010,DP00L010:
                            DP00L010,DP00L010,DP00L010,DP00L010:
                           DP00L010,DP00L010,DP00L010,DP00L010
          GOTO      DP00L010
.
DP00L101
          IF        SIRT1END=0
            CALL      TKSIRT12
            IF        OVRCD=1
              MOVE      ONE,SIRT1END
            ELSE
              MOVE      ZERO,SIRT1END
              MOVE      SCPSROW,SCTMROW
              MOVE      SCPSCOL,SCTMCOL
              CALL      TUSIRT12
              MOVE      SIRTUNI,VAR      
              CALL      DISPITEM
          CALL      ITMDET00
            ENDIF
          ENDIF
          IF        SIRT1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L102
          IF        SIRT1END=0
            MOVE      SIRTWAR,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L103
          IF        SIRT1END=0
            MOVE      SIRTCAT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L104
          IF        SIRT1END=0
            MOVE      SIRTREQ,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L105
          IF        SIRT1END=0
            MOVE      SIIADES,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L106
          IF        SIRT1END=0
            MOVE      SIIAISS,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L107
          IF        SIRT1END=0
            MOVE      NOTECATA,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
DP00L600
          MATCH    "SIRT1",NAMSSFFI
          GOTO     DP00L605 IF NOT EQUAL
          GOTO     DP00L999
DP00L605
DP00L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP00L000
.
          CALL     CT00L000
          MATCH    "SIRT1",NAMSSFFI
          GOTO     FP00L105 IF NOT EQUAL
          MOVE     SP70,KEY3   
          CALL     TSSIRT12 * Start
          CALL     DP00L000
          GOTO     FP00L999
FP00L105
FP00L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP00L000
.
          CALL     CT00L000
          MATCH    "SIRT1",NAMSSFFI
          GOTO     LP00L105 IF NOT EQUAL
          PACK     KEY3,Z70
          CALL     TSSIRT12
          IF       OVRCD=1
            CALL     TPSIRT12 * End
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<SIRT1SNO
            CALL     TPSIRT12
            ADD      ONE,SECTOR
          DO
          CALL     DP00L000
          GOTO     LP00L999
LP00L105
LP00L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP00L000
.
PP00L100
          MATCH    "SIRT1",NAMSSFFI
          GOTO     PP00L115 IF NOT EQUAL
PP00L105
          MOVE     SP70,SIRT1NXT
          PACK     KEY5,SP1,ONE,SP70
          CALL     TSSIRT11
          CALL     TKSIRT11 * First on Page
          MOVE     KEY3,SIRT1NXT
          CALL     TSSIRT12
          CALL     TPSIRT12 * Get Key
          IF       OVRCD=1
            BEEP
            GOTO      PP00L999
          ENDIF
.
          CALL     CT00L000
.
. Position and Display Page
.--------------------------
PP00L110
          MOVE     SIRT1NXT,KEY3   
          CALL     TSSIRT12
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=SIRT1SNO
            CALL     TPSIRT12
            ADD      ONE,SECTOR
          DO
          CALL     DP00L000
          GOTO     PP00L999
PP00L115
PP00L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP00L000
          MATCH    "SIRT1",NAMSSFFI
          GOTO     NP00L115 IF NOT EQUAL
NP00L105
          MOVE     SP70,SIRT1NXT
          PACK     KEY5,Z70
          CALL     TSSIRT11
          CALL     TPSIRT11
          MOVE     KEY3,SIRT1NXT
          CALL     TSSIRT12
          CALL     TKSIRT12
          IF       OVRCD=1
            BEEP
            GOTO      NP00L999
          ENDIF
.
          CALL     CT00L000
.
. Position and Display Page
.--------------------------
NP00L110
          MOVE     SIRT1NXT,KEY3   
          CALL     TSSIRT12
          CALL     DP00L000
          GOTO     NP00L999
NP00L115
NP00L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT00L000
          MATCH    "SIRT1",NAMSSFFI
          GOTO     CT00L115 IF NOT EQUAL
CT00L105
          PACK     KEY5,SP1,ONE,SP70
          CALL     TSSIRT11
          CALL     TKSIRT11
          BRANCH   OVRCD,CT00L110
          CALL     TRSIRT12
          MOVE     SP70,SCTMROW
          MOVE     SP70,SCTMCOL
          CALL     TUSIRT12
          GOTO     CT00L105
CT00L110
          GOTO     CT00L999
CT00L115
CT00L999  RETURN
.----------------------------------
. Clear Pages of Multi Items 
.----------------------------------
CP00L000
          CALL     CT00L000
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
CP00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,CP00L999
          MATCH    PRGID,SCPSPID
          GOTO     CP00L999 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     CP00L999 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     CP00L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,CP00L010,CP00L010,CP00L010,CP00L010:
                            CP00L010,CP00L010,CP00L010,CP00L010:
                            CP00L010,CP00L010,CP00L010,CP00L010:
                            CP00L100,CP00L100,CP00L100,CP00L100:
                            CP00L010,CP00L010,CP00L010,CP00L010:
                            CP00L010,CP00L010,CP00L010,CP00L100:
                            CP00L100,CP00L100,CP00L010,CP00L010:
                            CP00L010,CP00L010,CP00L010,CP00L010:
                            CP00L010,CP00L010,CP00L010,CP00L010:
                           CP00L010,CP00L010,CP00L010,CP00L010
.
CP00L100
          PACK     VAR,SP70,SP70
          CALL     DISPITEM  * Display Blank Item
          GOTO     CP00L010
CP00L999  RETURN
.---------------------------------------------------------
. Add Items
.---------------------------------------------------------
AD00L000
          CALL      CP00L000 * Clear Screen of Items
          PACK      KEY20,PRGID,SCRID,ITMSSFFI,SP70
          CALL      RSSCPS2
AD00L010  CALL      RKSCPS2
          BRANCH    OVRCD,AD00L000
          MATCH     PRGID,SCPSPID
          GOTO      AD00L000 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      AD00L000 IF NOT EQUAL
          MATCH     ITMSSFFI,SCPSITM
          GOTO      AD00L000 IF NOT EQUAL
          PACK      SKSCPS20,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SCPSCOL
          MOVE      ACCEPT,SACCEPT
          MOVE      ONE,ACCEPT
          CALL      SM00L000
          MOVE      SACCEPT,ACCEPT
          MOVE      SKSCPS20,KEY20
          CALL      RDSCPS2
          MATCH     "SIRT1",NAMSSFFI
          IF        @EQUAL
            COMPARE   ZERO,SIRT1AFL
            GOTO      AD00L010 IF EQUAL
            CALL      FP00L000
            GOTO      AD00L999
          ENDIF
AD00L999
          RETURN
.---------------------------------------------------------
. Delete Items
.---------------------------------------------------------
DL00L000  
          MOVE      SCSLDES,DISPMSG
          CALL      MESSAGE2
DL00L005  
          CALL      MDELQ000
          BRANCH    EXIT,DL00L900,DL00L900
          MOVE      SCSLITM,FIELDNO
          MATCH     ITMSSFFI,SCSLITM
          GOTO      DL00L100 IF NOT EQUAL
          CALL      SELECTED
          MATCH     "SIRT1",SCPSMTY
          IF        @EQUAL
            PACK      KEY5,SCSLROW,SCSLCOL
            CALL      TRSIRT11
            IF        OVRCD=0
              CALL      TDSIRT12
            ELSE
              BEEP
              GOTO      DL00L005
            ENDIF
            PACK      KEY5,SP1,ONE,SP70
            CALL      TSSIRT11
            CALL      TKSIRT11
            MOVE     KEY3,SIRT1NXT
            CALL      CT00L000
            MOVE      SIRT1NXT,KEY3   
            CALL      TSSIRT12
            CALL      TPSIRT12
            CALL      DP00L000
            GOTO      DL00L005
          ENDIF
DL00L100  MOVE      "Invalid Selection. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      DL00L005
DL00L900  CALL      MESSAGE3
          RETURN
.---------------------------------------------------------
. Batch IO for Screen : Input Return of Stock              
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :    13 Unique ID                          
.---------------------------------------------------------
TSSIRT11  RESET     KEY5
          READ      SIRT1FL1,KEY5;;
          RETURN
.
TSSIRT12  RESET     KEY3   
          READ      SIRT1FL2,KEY3;;
          RETURN
.
TASIRT12  RESET     KEY3   
          MOVE      ZERO,OVRCD
          READ      SIRT1FL2,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
TDSIRT11  RESET     KEY5
          DELETE    SIRT1FL1,KEY5
          RETURN
.
TDSIRT12  RESET     KEY3
          DELETE    SIRT1FL2,KEY3
          RETURN
.
TKSIRT11  MOVE      ZERO,OVRCD
          READKS    SIRT1FL1;SCTMROW,SCTMCOL,KEY3:
                        SIRTPOR,SIRTUNI,SIRTWAR,SIRTCAT,SIRTREQ:
                        SIRTISS,SIRTSPA                                         
          GOTO      OVERCOND IF OVER
          RETURN
.
TKSIRT12  MOVE      ZERO,OVRCD
          READKS    SIRT1FL2;SCTMROW,SCTMCOL,KEY3:
                        SIRTPOR,SIRTUNI,SIRTWAR,SIRTCAT,SIRTREQ:
                        SIRTISS,SIRTSPA                                         
          GOTO      OVERCOND IF OVER
          RETURN
.
TPSIRT11  MOVE      ZERO,OVRCD
          READKP    SIRT1FL1;SCTMROW,SCTMCOL,KEY3:
                        SIRTPOR,SIRTUNI,SIRTWAR,SIRTCAT,SIRTREQ:
                        SIRTISS,SIRTSPA                                         
          GOTO      OVERCOND IF OVER
          RETURN
.
TPSIRT12  MOVE      ZERO,OVRCD
          READKP    SIRT1FL2;SCTMROW,SCTMCOL,KEY3:
                        SIRTPOR,SIRTUNI,SIRTWAR,SIRTCAT,SIRTREQ:
                        SIRTISS,SIRTSPA                                         
          GOTO      OVERCOND IF OVER
          RETURN
.
TRSIRT11  RESET     KEY5
          MOVE      ZERO,OVRCD
          READ      SIRT1FL1,KEY5;SCTMROW,SCTMCOL,KEY3:
                        SIRTPOR,SIRTUNI,SIRTWAR,SIRTCAT,SIRTREQ:
                        SIRTISS,SIRTSPA                                         
          GOTO      OVERCOND IF OVER
          RETURN
.
TRSIRT12  RESET     KEY3   
          MOVE      ZERO,OVRCD
          READ      SIRT1FL2,KEY3;SCTMROW,SCTMCOL,KEY3:
                        SIRTPOR,SIRTUNI,SIRTWAR,SIRTCAT,SIRTREQ:
                        SIRTISS,SIRTSPA                                         
          GOTO      OVERCOND IF OVER
          RETURN
.
TUSIRT11  UPDATE    SIRT1FL1;SCTMROW,SCTMCOL,KEY3:
                        SIRTPOR,SIRTUNI,SIRTWAR,SIRTCAT,SIRTREQ:
                        SIRTISS,SIRTSPA                                         
          RETURN
.
TUSIRT12
          UPDATE    SIRT1FL2;SCTMROW,SCTMCOL,KEY3:
                        SIRTPOR,SIRTUNI,SIRTWAR,SIRTCAT,SIRTREQ:
                        SIRTISS,SIRTSPA                                         
          RETURN
.
TWSIRT12  RESET     KEY3   
          WRITE     SIRT1FL2,KEY3;SCTMROW,SCTMCOL,KEY3:
                        SIRTPOR,SIRTUNI,SIRTWAR,SIRTCAT,SIRTREQ:
                        SIRTISS,SIRTSPA                                         
          RETURN
.---------------------------------------------------------
. Display Fields for : Input Return of Stock              
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
          MOVE      "SIRT1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      FP00L000
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Input Return of Stock              
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L101,PS00L102:
                            PS00L999,PS00L999,PS00L999,PS00L103:
                            PS00L104,PS00L105,PS00L106,PS00L107:
                            PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L108,PS00L109:
                            PS00L110,PS00L111,PS00L112,PS00L113:
                            PS00L114,PS00L115,PS00L999,PS00L999:
                           PS00L999,PS00L999,PS00L999,PS00L999
          GOTO     PS00L999
.
PS00L101
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      SICADESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      SICATELE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      SICACONT,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      SIRADEL,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          UNPACK    SIRADAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      CATASOH,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      CATADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      CATACODE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      CATARAS,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          CALL      NSICC000
          MOVE      NOTESICC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE     FILSICC1,WORDNAME
          CALL     DISPWORD
          GOTO     PS00L999
.
PS00L114
          MOVE      CATAAVC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      NOTESIIG,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Input Return of Stock              
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L101,SF00L102:
                            SF00L103,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L104,SF00L105,SF00L106:
                            SF00L107,SF00L108,SF00L109,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L110:
                            SF00L006,SF00L006,SF00L111,SF00L006:
                           SF00L112,SF00L113,SF00L006,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L101,SF00L102:
                            SF00L103,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L110:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                           SF00L020,SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          MOVE      "SIRT1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      FP00L000
          GOTO     SF00L001
.
SF00L101
          CALL     SELECTED
          STRIP     SIRADEL 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIRADEL,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIRADEL 
          SFORMAT   VAR,127
          ENDSET    SIRADEL 
          APPEND    SP70,SIRADEL 
          RESET     SIRADEL 
          CMATCH    EXITCHAR,SIRADEL 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SIRADEL 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L101
            ENDIF
          ENDIF
          MOVE      SIRADEL,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L102
.
.
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIPEPER 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIPEYEAR
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ERADT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    SIRADAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
.
.
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIPEPER,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIPEYEAR,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L103
          CALL      SELECTED
          BRANCH    EXIT,SF00L001
          MOVE      "SIRT1",NAMSSFFI
          MOVE      SCPSITM,ITMSSFFI
          IF        ACCEPT=0
            PACK      KEY5,SCPSROW,SCPSCOL
            CALL      TRSIRT11
            BRANCH    OVRCD,SF00L001
            MATCH     SCTMROW,SCSLROW
            GOTO      SF00L001 IF NOT EQUAL
            MATCH     SCTMCOL,SCSLCOL
            GOTO      SF00L001 IF NOT EQUAL
            CALL      SM00L000 * Change Line
          ELSE
            IF        SIRT1AFL=0
              MOVE      "SIRT1",NAMSSFFI
              MOVE     "   13",ITMSSFFI
              CALL      AD00L000 * Add Line
            ENDIF
          ENDIF
          GOTO     SF00L001
.
SF00L104
          MOVE      "SIRT1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      NP00L000
          GOTO     SF00L001
.
SF00L105
          MOVE      "SIRT1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      PP00L000
          GOTO     SF00L001
.
SF00L106
          MOVE      "SIRT1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      AD00L000
          GOTO     SF00L001
.
SF00L107
          MOVE      "SIRT1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      DL00L000
          GOTO     SF00L001
.
SF00L108
          MOVE      "SIRT1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      FP00L000
          GOTO     SF00L001
.
SF00L109
          MOVE      "SIRT1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      LP00L000
          GOTO     SF00L001
.
SF00L110
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "10",SCPSROW
              MOVE     "  1",SCPSCOL
              MOVE     " 78",SCPSLEN
              MOVE     "12",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILSICC1,WORDNAME
              MOVE     " 12",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILSICC1,WORDNAME
            MOVE     " 12",WORDTYPE
            IF       ACCEPT=0
               CALL     EDITWORD
            ENDIF
          ENDIF
          GOTO     SF00L001
.
SF00L111
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      SC01L000
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   40",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF00L001
.
SF00L112
          CALL      POST0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L113
          CALL      CANC0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Catalog Notes Display              
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Catalog Notes Display              
.-------------------------------------------------------
CF01L000
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Catalog Notes Display              
.--------------------------------------------------------
KY01L000
.
KY01L110
.
.
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIWADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KSIWSA00
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      ZERO,ACCEPT
          MOVE      SIWAWAR,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIWADES,VAR      
            CALL      DISPITEM
          ENDIF
.
KY01L120
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIIADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KSIIAA00
          BRANCH    EXIT,KY01L110,KY01L900
          MOVE      ZERO,ACCEPT
          MOVE      SIIACAT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIIADES,VAR      
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Catalog Notes Display              
.---------------------------------------------------------
WP01L000
          PREP     TEMPWORD,FILSIIG1
          PACK     KEY15,SIIACAT,SIWAWAR,SP70
          MOVE     KEY15,SAVKEY80
          SETLPTR  SAVKEY80,12
          CALL      RDSIIG1 
          IF        OVRCD=0
            CALL      RPSIIG1 
          ENDIF
WP01L100
          CALL     RKSIIG1 
          BRANCH   OVRCD,WP01L105
          PACK     KEY15,SIIGCAT,SIIGWAR,SIIGLIN
          MATCH    SAVKEY80,KEY15   
          GOTO     WP01L105 IF NOT EQUAL
          PACK     VAR,SIIGCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     SIIGCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP01L100
WP01L105  CLOSE    TEMPWORD
          PREP     TEMPWORD,FILSIIB1
          PACK     KEY10,SIIACAT,SP70
          MOVE     KEY10,SAVKEY80
          SETLPTR  SAVKEY80,7 
          CALL      RDSIIB1 
          IF        OVRCD=0
            CALL      RPSIIB1 
          ENDIF
WP01L110
          CALL     RKSIIB1 
          BRANCH   OVRCD,WP01L115
          PACK     KEY10,SIIBCAT,SIIBLIN
          MATCH    SAVKEY80,KEY10   
          GOTO     WP01L115 IF NOT EQUAL
          PACK     VAR,SIIBCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     SIIBCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP01L110
WP01L115  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Catalog Notes Display              
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Catalog Notes Display              
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Catalog Notes Display              
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L101,PS01L102:
                            PS01L103,PS01L104,PS01L105,PS01L106:
                            PS01L107,PS01L108,PS01L109,PS01L110:
                            PS01L111,PS01L112,PS01L113,PS01L114:
                            PS01L115,PS01L999,PS01L999,PS01L999
          GOTO     PS01L999
.
PS01L101
          MOVE      SIWADES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      SIIASUB,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      SIIAISS,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      SIIASTI,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      SIIAAVC,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      SIIANAT,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      SIIAABC,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      SIIAPSC,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      SIIAREX,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      SIIANON,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      SIIASAB,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      SIIASUS,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE     FILSIIG1,WORDNAME
          CALL     DISPWORD
          GOTO     PS01L999
.
PS01L115
          MOVE     FILSIIB1,WORDNAME
          CALL     DISPWORD
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Catalog Notes Display              
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L101:
                            SF01L102,SF01L103,SF01L104,SF01L006
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L101:
                            SF01L102,SF01L020,SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     " 6",SCPSROW
              MOVE     "  1",SCPSCOL
              MOVE     " 78",SCPSLEN
              MOVE     "16",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILSIIG1,WORDNAME
              MOVE     " 12",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILSIIG1,WORDNAME
            MOVE     " 12",WORDTYPE
            IF       ACCEPT=0
               CALL     EDITWORD
            ENDIF
          ENDIF
          GOTO     SF01L001
.
SF01L102
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     " 6",SCPSROW
              MOVE     "  1",SCPSCOL
              MOVE     " 78",SCPSLEN
              MOVE     "16",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILSIIB1,WORDNAME
              MOVE     " 12",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILSIIB1,WORDNAME
            MOVE     " 12",WORDTYPE
            IF       ACCEPT=0
               CALL     EDITWORD
            ENDIF
          ENDIF
          GOTO     SF01L001
.
SF01L103
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L104
          MOVE      ONE,EXIT
          GOTO      SF01L999
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - Backorder Allocation               
.--------------------------------
SCBAL000
SCBAL100
          MOVE      "BA",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SCBAL200
          CALL      CFBAL000 * Clear Fields
SCBAL300
          CALL      KYBAL000 * Enter Key Fields
          BRANCH    EXIT,SCBAL999,SCBAL999
SCBAL400
          CALL      WPBAL000 * Load any WP Details
SCBAL500
          CALL      LMBAL000 * Load any Batch Details
SCBAL600
          CALL      DFBAL000 * Display Fields
SCBAL700
          CALL      SFBAL000 * Select Fields
          BRANCH    EXIT,SCBAL100,SCBAL100,SCBAL200
SCBAL800
SCBAL900
SCBAL999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Backorder Allocation               
.-------------------------------------------------------
CFBAL000
CFBAL999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Backorder Allocation               
.--------------------------------------------------------
KYBAL000
          MOVE      ZERO,EXIT
          GOTO      KYBAL999
.
KYBAL900  MOVE      ONE,EXIT
KYBAL999  RETURN
.---------------------------------------------------------
. Load WP files for : Backorder Allocation               
.---------------------------------------------------------
WPBAL000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Backorder Allocation               
.---------------------------------------------------------
LMBAL000
.---------------------------------------------------------
. Load for :     1 Requisition                        
.---------------------------------------------------------
          UNPACK    SP70,SIBTPON,SIBTREQ
          PACK      SIBT1FNM,ANST,SIBT1NAM,PORT
          REP       " 0",SIBT1FNM
          MOVE      ZERO,SIBT1AFL
          CLOSE     SIBT1FL2
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SIBT1FL1,SIBT1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     SIBT1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,SIBT1FNM,SP1,SIBT1LEN,SP1,SIBT1IDX
          DISPLAY   *P1:3;
          EXECUTE   KEY80,TASKID
          OPEN      SIBT1FL1,SIBT1FNM
          OPEN      SIBT1FL2,SIBT1FNM
          PACK      KEY15,PORT,SP70
          MOVE      KEY15,SAVKEY80
          SETLPTR   SAVKEY80,7 
          CALL      RDSIBT1 
          IF        OVRCD=0
            CALL      RPSIBT1 
          ENDIF
LMBAL100
          CALL      RKSIBT1 
          BRANCH    OVRCD,LMBAL105
          PACK      KEY15,SIBTPON,SIBTREQ
          MATCH     SAVKEY80,KEY15   
          GOTO      LMBAL105 IF NOT EQUAL
          RESET     KEY15,8
          MOVE      KEY15,KEY8
          MOVE      SP70,SCTMROW
          MOVE      SP70,SCTMCOL
          CALL      TASIBT12
          IF        OVRCD=0
            CALL      TUSIBT12
          ELSE
            CALL      TWSIBT12
          ENDIF
          GOTO     LMBAL100
LMBAL105
          MOVE     SP70,KEY8   
          CALL     TSSIBT12
          RETURN
.---------------------------------------------------------
. Batch Item Selected Screen : Backorder Allocation               
.---------------------------------------------------------
SMBAL000
          MOVE      ZERO,STDGSFLG
          MOVE      SCPSITM,FIRSTITM
          MOVE      SCPSROW,SCTMROW
          MOVE      SCPSCOL,SCTMCOL
          PACK      KEY15,PRGID,SCRID,SCPSROW,SCPSCOL
          MOVE      KEY15,SKSCPS15
          CALL      RDSCPS1
          COMPARE   ZERO,ACCEPT
          GOTO      SMBAL010 IF EQUAL
SMBAL005
          MOVE      SCPSROW,CVERT
          MOVE      SCPSCOL,CCOL
          MOVE      SCPSITM,FIELDNO
          MOVE      ONE,STDGSFLG
          BRANCH    FIELDNO,SMBAL101,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010
SMBAL006
          CALL      RKSCPS1
          BRANCH    OVRCD,SMBAL007
          MATCH     PRGID,SCPSPID
          GOTO      SMBAL007 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      SMBAL007 IF NOT EQUAL
          MATCH     FIRSTITM,SCPSITM
          GOTO      SMBAL007 IF EQUAL
          MATCH     NAMSSFFI,SCPSMTY
          GOTO      SMBAL006 IF NOT EQUAL
          GOTO      SMBAL005
SMBAL007
          MOVE      ZERO,STDGSFLG
          MOVE      SKSCPS15,KEY15
          CALL      RDSCPS1
SMBAL010
          BRANCH    STDGSFLG,SMBAL006
          CALL      RKSCPS1
          BRANCH    OVRCD,SMBAL900
          MATCH     PRGID,SCPSPID
          GOTO      SMBAL900 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      SMBAL900 IF NOT EQUAL
          MATCH     FIRSTITM,SCPSITM
          GOTO      SMBAL900 IF EQUAL
          MATCH     NAMSSFFI,SCPSMTY
          GOTO      SMBAL010 IF NOT EQUAL
          MOVE      SCPSROW,CVERT
          MOVE      SCPSCOL,CCOL
          MOVE      SCPSITM,FIELDNO
          BRANCH    FIELDNO,SMBAL010,SMBAL010,SMBAL010,SMBAL102:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010
          GOTO      SMBAL010
.
SMBAL101
          MOVE     ZERO,SIBT1AFL
          STRIP     SIBTREQ 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIBTREQ,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIBTREQ 
          SFORMAT   VAR,127
          ENDSET    SIBTREQ 
          APPEND    SP70,SIBTREQ 
          RESET     SIBTREQ 
          MATCH     SP70,SIBTREQ 
          GOTO      SMBAL990 IF EQUAL
          CMATCH    EXITCHAR,SIBTREQ 
          GOTO      SMBAL990 IF EQUAL
          PACK     KEY15,SIBTPON,SIBTREQ                                                           
          RESET    KEY15,8
          MOVE     KEY15,KEY8
          CALL      TASIBT12
          IF        OVRCD=0
            MOVE      "Record Already On File - ",DISPMSG
            CALL      MESSAGE1
            GOTO      SMBAL101
          ENDIF
          MOVE      SIBTREQ,VAR      
          CALL      DISPITEM
          CALL      BACLIN00
          GOTO     SMBAL010
.
SMBAL102
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,SIBTISS 
          IF        SCPSMAN=1
            COMPARE   ZERO,SIBTISS 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SMBAL102
            ENDIF
          ENDIF
          MOVE      SIBTISS,VAR      
          CALL      DISPITEM
          GOTO     SMBAL010
SMBAL900
          MATCH    "SIBT1",NAMSSFFI
          IF       @EQUAL
            PACK     KEY15,SIBTPON,SIBTREQ
            RESET    KEY15,8
            MOVE     KEY15,KEY8
            CALL      TASIBT12
            IF        OVRCD=0
              CALL      TUSIBT12
            ELSE
              CALL      TWSIBT12
            ENDIF
            GOTO      SMBAL999
          ENDIF
          GOTO      SMBAL999
SMBAL990
          MATCH    "SIBT1",NAMSSFFI
          IF       @EQUAL
            MOVE     ONE,SIBT1AFL
          ENDIF
SMBAL999
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DPBAL000
          MOVE     ZERO,SIBT1CNT
          MOVE     ZERO,SIBT1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DPBAL010
          CALL     RKSCPS1
          BRANCH   OVRCD,DPBAL600
          MATCH    PRGID,SCPSPID
          GOTO     DPBAL600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DPBAL600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DPBAL010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DPBAL101,DPBAL102,DPBAL103,DPBAL104:
                            DPBAL105,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010
          GOTO      DPBAL010
.
DPBAL101
          IF        SIBT1END=0
            CALL      TKSIBT12
            IF        OVRCD=1
              MOVE      ONE,SIBT1END
            ELSE
              MOVE      ZERO,SIBT1END
              MOVE      SCPSROW,SCTMROW
              MOVE      SCPSCOL,SCTMCOL
              CALL      TUSIBT12
              MOVE      SIBTREQ,VAR      
              CALL      DISPITEM
          CALL      BACLIN00
            ENDIF
          ENDIF
          IF        SIBT1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL102
          IF        SIBT1END=0
            MOVE      SIBTCST,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL103
          IF        SIBT1END=0
            MOVE      SIBTQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL104
          IF        SIBT1END=0
            MOVE      SIBTISS,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL105
          IF        SIBT1END=0
            MOVE      SICADESC,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
DPBAL600
          MATCH    "SIBT1",NAMSSFFI
          GOTO     DPBAL605 IF NOT EQUAL
          GOTO     DPBAL999
DPBAL605
DPBAL999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FPBAL000
.
          CALL     CTBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     FPBAL105 IF NOT EQUAL
          MOVE     SP70,KEY8   
          CALL     TSSIBT12 * Start
          CALL     DPBAL000
          GOTO     FPBAL999
FPBAL105
FPBAL999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LPBAL000
.
          CALL     CTBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     LPBAL105 IF NOT EQUAL
          PACK     KEY8,Z70
          CALL     TSSIBT12
          IF       OVRCD=1
            CALL     TPSIBT12 * End
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<SIBT1SNO
            CALL     TPSIBT12
            ADD      ONE,SECTOR
          DO
          CALL     DPBAL000
          GOTO     LPBAL999
LPBAL105
LPBAL999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PPBAL000
.
PPBAL100
          MATCH    "SIBT1",NAMSSFFI
          GOTO     PPBAL115 IF NOT EQUAL
PPBAL105
          MOVE     SP70,SIBT1NXT
          PACK     KEY5,SP1,ONE,SP70
          CALL     TSSIBT11
          CALL     TKSIBT11 * First on Page
          MOVE     KEY8,SIBT1NXT
          CALL     TSSIBT12
          CALL     TPSIBT12 * Get Key
          IF       OVRCD=1
            BEEP
            GOTO      PPBAL999
          ENDIF
.
          CALL     CTBAL000
.
. Position and Display Page
.--------------------------
PPBAL110
          MOVE     SIBT1NXT,KEY8   
          CALL     TSSIBT12
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=SIBT1SNO
            CALL     TPSIBT12
            ADD      ONE,SECTOR
          DO
          CALL     DPBAL000
          GOTO     PPBAL999
PPBAL115
PPBAL999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NPBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     NPBAL115 IF NOT EQUAL
NPBAL105
          MOVE     SP70,SIBT1NXT
          PACK     KEY5,Z70
          CALL     TSSIBT11
          CALL     TPSIBT11
          MOVE     KEY8,SIBT1NXT
          CALL     TSSIBT12
          CALL     TKSIBT12
          IF       OVRCD=1
            BEEP
            GOTO      NPBAL999
          ENDIF
.
          CALL     CTBAL000
.
. Position and Display Page
.--------------------------
NPBAL110
          MOVE     SIBT1NXT,KEY8   
          CALL     TSSIBT12
          CALL     DPBAL000
          GOTO     NPBAL999
NPBAL115
NPBAL999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CTBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     CTBAL115 IF NOT EQUAL
CTBAL105
          PACK     KEY5,SP1,ONE,SP70
          CALL     TSSIBT11
          CALL     TKSIBT11
          BRANCH   OVRCD,CTBAL110
          CALL     TRSIBT12
          MOVE     SP70,SCTMROW
          MOVE     SP70,SCTMCOL
          CALL     TUSIBT12
          GOTO     CTBAL105
CTBAL110
          GOTO     CTBAL999
CTBAL115
CTBAL999  RETURN
.----------------------------------
. Clear Pages of Multi Items 
.----------------------------------
CPBAL000
          CALL     CTBAL000
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
CPBAL010
          CALL     RKSCPS1
          BRANCH   OVRCD,CPBAL999
          MATCH    PRGID,SCPSPID
          GOTO     CPBAL999 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     CPBAL999 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     CPBAL010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,CPBAL100,CPBAL100,CPBAL100,CPBAL100:
                            CPBAL100,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010
.
CPBAL100
          PACK     VAR,SP70,SP70
          CALL     DISPITEM  * Display Blank Item
          GOTO     CPBAL010
CPBAL999  RETURN
.---------------------------------------------------------
. Add Items
.---------------------------------------------------------
ADBAL000
          CALL      CPBAL000 * Clear Screen of Items
          PACK      KEY20,PRGID,SCRID,ITMSSFFI,SP70
          CALL      RSSCPS2
ADBAL010  CALL      RKSCPS2
          BRANCH    OVRCD,ADBAL000
          MATCH     PRGID,SCPSPID
          GOTO      ADBAL000 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      ADBAL000 IF NOT EQUAL
          MATCH     ITMSSFFI,SCPSITM
          GOTO      ADBAL000 IF NOT EQUAL
          PACK      SKSCPS20,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SCPSCOL
          MOVE      ACCEPT,SACCEPT
          MOVE      ONE,ACCEPT
          CALL      SMBAL000
          MOVE      SACCEPT,ACCEPT
          MOVE      SKSCPS20,KEY20
          CALL      RDSCPS2
          MATCH     "SIBT1",NAMSSFFI
          IF        @EQUAL
            COMPARE   ZERO,SIBT1AFL
            GOTO      ADBAL010 IF EQUAL
            CALL      FPBAL000
            GOTO      ADBAL999
          ENDIF
ADBAL999
          RETURN
.---------------------------------------------------------
. Delete Items
.---------------------------------------------------------
DLBAL000  
          MOVE      SCSLDES,DISPMSG
          CALL      MESSAGE2
DLBAL005  
          CALL      MDELQ000
          BRANCH    EXIT,DLBAL900,DLBAL900
          MOVE      SCSLITM,FIELDNO
          MATCH     ITMSSFFI,SCSLITM
          GOTO      DLBAL100 IF NOT EQUAL
          CALL      SELECTED
          MATCH     "SIBT1",SCPSMTY
          IF        @EQUAL
            PACK      KEY5,SCSLROW,SCSLCOL
            CALL      TRSIBT11
            IF        OVRCD=0
              CALL      TDSIBT12
            ELSE
              BEEP
              GOTO      DLBAL005
            ENDIF
            PACK      KEY5,SP1,ONE,SP70
            CALL      TSSIBT11
            CALL      TKSIBT11
            MOVE     KEY8,SIBT1NXT
            CALL      CTBAL000
            MOVE      SIBT1NXT,KEY8   
            CALL      TSSIBT12
            CALL      TPSIBT12
            CALL      DPBAL000
            GOTO      DLBAL005
          ENDIF
DLBAL100  MOVE      "Invalid Selection. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      DLBAL005
DLBAL900  CALL      MESSAGE3
          RETURN
.---------------------------------------------------------
. Batch IO for Screen : Backorder Allocation               
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :     1 Requisition                        
.---------------------------------------------------------
TSSIBT11  RESET     KEY5
          READ      SIBT1FL1,KEY5;;
          RETURN
.
TSSIBT12  RESET     KEY8   
          READ      SIBT1FL2,KEY8;;
          RETURN
.
TASIBT12  RESET     KEY8   
          MOVE      ZERO,OVRCD
          READ      SIBT1FL2,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
TDSIBT11  RESET     KEY5
          DELETE    SIBT1FL1,KEY5
          RETURN
.
TDSIBT12  RESET     KEY8
          DELETE    SIBT1FL2,KEY8
          RETURN
.
TKSIBT11  MOVE      ZERO,OVRCD
          READKS    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TKSIBT12  MOVE      ZERO,OVRCD
          READKS    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TPSIBT11  MOVE      ZERO,OVRCD
          READKP    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TPSIBT12  MOVE      ZERO,OVRCD
          READKP    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TRSIBT11  RESET     KEY5
          MOVE      ZERO,OVRCD
          READ      SIBT1FL1,KEY5;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TRSIBT12  RESET     KEY8   
          MOVE      ZERO,OVRCD
          READ      SIBT1FL2,KEY8;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TUSIBT11  UPDATE    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.
TUSIBT12
          UPDATE    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.
TWSIBT12  RESET     KEY8   
          WRITE     SIBT1FL2,KEY8;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.---------------------------------------------------------
. Display Fields for : Backorder Allocation               
.---------------------------------------------------------
DFBAL000
          BRANCH   ACCEPT,DFBAL999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DFBAL010
          CALL     RKSCPS1
          BRANCH   OVRCD,DFBAL900
          MATCH    PRGID,SCPSPID
          GOTO     DFBAL900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DFBAL900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DFBAL010 IF NOT EQUAL
.
          CALL     PSBAL000 * Display Field
          GOTO     DFBAL010
DFBAL900
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FPBAL000
DFBAL999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Backorder Allocation               
.---------------------------------------------------------
PSBAL000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PSBAL999,PSBAL999,PSBAL999,PSBAL999:
                            PSBAL999,PSBAL999,PSBAL999,PSBAL999:
                            PSBAL999,PSBAL999,PSBAL999,PSBAL101:
                            PSBAL102,PSBAL103,PSBAL104,PSBAL999:
                            PSBAL999,PSBAL999,PSBAL999,PSBAL999:
                            PSBAL999
          GOTO     PSBAL999
.
PSBAL101
          MOVE      TOTALREC,VAR     
          CALL      DISPITEM
          GOTO     PSBAL999
.
PSBAL102
          MOVE      SIIACAT,VAR      
          CALL      DISPITEM
          GOTO     PSBAL999
.
PSBAL103
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PSBAL999
.
PSBAL104
          MOVE      SIIAISS,VAR      
          CALL      DISPITEM
          GOTO     PSBAL999
PSBAL999
          RETURN
.---------------------------------------------------------
. Selections for : Backorder Allocation               
.---------------------------------------------------------
SFBAL000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SFBAL001  BRANCH   ACCEPT,SFBAL020
.
SFBAL005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFBAL101,SFBAL006,SFBAL006,SFBAL006:
                            SFBAL006,SFBAL006,SFBAL006,SFBAL006:
                            SFBAL102,SFBAL006,SFBAL006,SFBAL006:
                            SFBAL006,SFBAL006,SFBAL006,SFBAL103:
                            SFBAL104,SFBAL006,SFBAL006,SFBAL105:
                            SFBAL106
SFBAL006  BEEP
          GOTO     SFBAL005
SFBAL020  CALL     RKSCSL1
          BRANCH   OVRCD,SFBAL090
          MATCH    PRGID,SCSLPID
          GOTO     SFBAL090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SFBAL090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFBAL101,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020
          GOTO     SFBAL020
SFBAL090  MOVE     ZERO,ACCEPT
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FPBAL000
          GOTO     SFBAL001
.
SFBAL101
          CALL      SELECTED
          BRANCH    EXIT,SFBAL001
          MOVE      "SIBT1",NAMSSFFI
          MOVE      SCPSITM,ITMSSFFI
          IF        ACCEPT=0
            PACK      KEY5,SCPSROW,SCPSCOL
            CALL      TRSIBT11
            BRANCH    OVRCD,SFBAL001
            MATCH     SCTMROW,SCSLROW
            GOTO      SFBAL001 IF NOT EQUAL
            MATCH     SCTMCOL,SCSLCOL
            GOTO      SFBAL001 IF NOT EQUAL
            CALL      SMBAL000 * Change Line
          ELSE
            IF        SIBT1AFL=0
              MOVE      "SIBT1",NAMSSFFI
              MOVE     "    1",ITMSSFFI
              CALL      ADBAL000 * Add Line
            ENDIF
          ENDIF
          GOTO     SFBAL001
.
SFBAL102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      BALAN000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SFBAL999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SFBAL001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SFBAL999
          ENDIF
          MOVE      "BA",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DFBAL000
          ENDIF
          GOTO      SFBAL001
.
SFBAL103
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      NPBAL000
          GOTO     SFBAL001
.
SFBAL104
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      PPBAL000
          GOTO     SFBAL001
.
SFBAL105
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FPBAL000
          GOTO     SFBAL001
.
SFBAL106
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      LPBAL000
          GOTO     SFBAL001
SFBAL990  MOVE      ONE,EXIT * Exit Char Restart
SFBAL999  RETURN
.@@@@@ Function Restart Point @@@@@
. ------------------------------------------------------------
. Read Catalog Code Keyin Control Information
.
. INCOCATE  FORM      1         67      Catalog Code Type
. 0 Normal Keyin,   1 *JR *DE,   2 Generated ,  3 Generated with Check Digit
. INCONCAT  FORM      7         68      Next Generated Catalog Number
.------------------------------------------------------------
RINCOCAT  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*67,INCOCATE:
                                    *150,SNCOPRS,SNCOPPR,SNCOIMS
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCOCATE
            MOVE      ZERO,SNCOPRS
            MOVE      ZERO,SNCOPPR
            MOVE      ZERO,SNCOIMS
            WRITAB    CONTROLF,SIXTY3;*67,INCOCATE:
                                    *150,SNCOPRS,SNCOPPR,SNCOIMS
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,TWENTY3;*120,HBACK
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,HBACK
            WRITAB    CONTROLF,TWENTY3;*120,HBACK
          ENDIF
.
          RETURN
DEFAULTS  MOVE      PORT,SIRTPOR
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      CDD,CDAY
.
          PACK      KEY5,SP70
          CALL      RSSIWA1
          CALL      RKSIWA1
          MOVE      SIWAWAR,DEFTWAR
          MOVE      SIWADES,DEFWDESC
          MOVE      SIWAWAR,SIRTWAR
          MOVE      ANSR,SIRATYP
          CALL      ONAT0000
.
          RETURN
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
ITMDET00  MOVE      SIRTCAT,KEY7
          CALL      RDSIIA1
          MOVE      SIRTWAR,KEY5
          CALL      RDSIWA1
          PACK      KEY12,SIRTCAT,SIRTWAR
          CALL      RDSIIE1
          CALL      NCATA000
          RETURN
NSICC000  MOVE    SP70,NOTESICC
          PACK    KEY8,SICACODE,SP70
          CALL    RSSICC1
NSICC100  CALL    RKSICC1
          BRANCH  OVRCD,NSICC999
          MATCH   SP70,SICCCOM
          GOTO    NSICC100 IF EQUAL
          MOVE    "Notes",NOTESICC
NSICC999  RETURN
ECOST000  MOVE     ZERO,CKEYTYP
          CALL     KSICAA00
          BRANCH   EXIT,ECOST999,ECOST999
          IF       SICALOC=1
            BEEP
            MOVE     "Cost Centre Not Available for Requisitions - ",DISPMSG
            CALL     MESSAGE1
            GOTO     ECOST000
          ENDIF
.
          MATCH    SP70,SICAMES
          IF       !(@EQUAL)
            BEEP
            MOVE     SICAMES,DISPMSG
            CALL     MESSAGE1
          ENDIF
          MOVE     SICACODE,SIRACST
          MOVE     ONE,OVRCD
          MOVE     ONE,ACCEPT
.
ECOST999  RETURN
.------------------------------------------------------------
. Enter Requisition Date
.------------------------------------------------------------
ERADT000  CALL      KEYDATE
          PACK      SIRADAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SIRADAT
          MOVE      SIRADAT,SIPEDATE
          CALL      RSIPE000   * Get Period End Date
          IF        OVRCD=1
            MOVE      "Period Not on File. Invalid Date - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ERADT000
          ENDIF
          IF        SIPELOC=1
            MOVE      "Period Locked. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ERADT000
          ENDIF
.
          MATCH     SIPEYEAR,SIPECYR
          IF        !(@EQUAL)
            MOVE      "WARNING : Period Not in Current Year. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
          ENDIF
.
          RETURN
EWARE000  GETVAR    SIDAT80,SIATT80,1,24
          DISPLAY   *P1:24,*EL,*P15:24,"** Enter #"",*V2LON,EXITCHAR,*HOFF:
                    "#" for Warehouse or Catalog to End Input **"
.
EWARE001  MOVE      "   15",FLDID
          CALL      GETMLPOS
          DISPLAY   *PCCOL:CVERT,*EL
.
          MOVE       "   14",FLDID
          CALL      GETMLPOS
.
EWARE005  KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,DEFTWAR
          MOVE      DEFTWAR,SIWAWAR
          ENDSET    SIWAWAR
          APPEND    SP70,SIWAWAR
          RESET     SIWAWAR
.
          MATCH     SP70,SIWAWAR
          GOTO      EWARE900 IF EQUAL
.
          CMATCH    EXITCHAR,SIWAWAR
          GOTO      EWARE950 IF EQUAL
.
          CMATCH    QUEST,SIWAWAR
          GOTO      EWARE010 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HSIWSA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    SIWAWAR
          APPEND    SP70,SIWAWAR
          RESET     SIWAWAR
.
          MATCH     SP70,SIWAWAR
          GOTO      EWARE001 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,SIWAWAR
EWARE010  PACK      KEY5,SIWAWAR
          CALL      RDSIWA1
          BRANCH    OVRCD,EWARE800
          MOVE      SIWAWAR,SIRTWAR
.
          CALL      CSIWSA00           * check security
          IF        OVRCD=1
            MOVE      "You Have No Access To That Warehouse - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EWARE001
          ENDIF
.
          MOVE      SIWAWAR,VAR
          CALL      DISPITEM
.
EWARE100
          MOVE      "   15",FLDID
          CALL      GETMLPOS
          DISPLAY   *PCCOL:CVERT,*EL
          CALL      ECATA000
          BRANCH    EXIT,EWARE001,EWARE999
.
          MOVE       "   16",FLDID
          CALL      GETMLPOS
          CALL      EREQU000
          BRANCH    EXIT,EWARE100,EWARE999
.
          MOVE       "   14",FLDID
          CALL      GETMLPOS
          MOVE      ZERO,EXIT
          GOTO      EWARE999
.
EWARE800  MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,EWARE999,EWARE999
          MOVE      "Warehouse Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EWARE001
EWARE900  MOVE      ONE,EXIT
          GOTO      EWARE999
EWARE950  MOVE      TWO,EXIT
.
EWARE999  PUTVAR    SIDAT80,SIATT80,1,24
          RETURN
ECATA000  MOVE      "S",CKEYSTCK
          MOVE      ZERO,CKEYTYP
          CALL      KSIIEA00     * Keyin Catalog for this warehouse
          BRANCH    EXIT,ECATA999,ECATA999
          MOVE      SIIECAT,SIIACAT
          MOVE      SIIACAT,VAR
          CALL      DISPITEM
.
          CALL      FCATA000     * Check Flags and Warehouse
          BRANCH    EXIT,ECATA000
.
          MOVE      SIIACAT,SIRTCAT
          MOVE      SP70,NOTECATA
          CALL      NCATA000     * Check for Notes
          CALL      DCATA000     * Display Static Fields After Catalog Entry
          MOVE      ZERO,EXIT
          GOTO      ECATA999
ECATA999  RETURN
.
. Check Flags for Catalog
.------------------------
FCATA000  MOVE      ZERO,EXIT
          PACK      KEY12,SIIACAT,SIRTWAR
          CALL      RDSIIE1
          IF        OVRCD=1
            BEEP
            MOVE      "Catalog Not Available in that Warehouse. - ",DISPMSG
            CALL      MESSAGE1
            MOVE      ONE,EXIT
          ENDIF
.
          PACK      KEY12,SIIACAT,SIRTWAR,SP70
          CALL      SISIWK1
          IF        OVRCD=0
            BEEP
            MOVE      "Stocktake in Progress for This Item. - ",DISPMSG
            CALL      MESSAGE1
            MOVE      ONE,EXIT
          ENDIF
.
          IF        SIIANON=1
            BEEP
            MOVE      "Catalog is a Non-Stock Item. - ",DISPMSG
            CALL      MESSAGE1
            MOVE      ONE,EXIT
          ENDIF
.
          IF        SIIASUS=1|SIIASUS=3
            BEEP
            MOVE      "Catalog has been Suspended. - ",DISPMSG
            CALL      MESSAGE1
            MOVE      ONE,EXIT
          ENDIF
.
          IF        SIIESUS=1|SIIESUS=3
            BEEP
            MOVE      "Warehouse/Catalog has been Suspended. - ",DISPMSG
            CALL      MESSAGE1
            MOVE      ONE,EXIT
          ENDIF
          RETURN
.
. Display Fields After Catalog
.-----------------------------
DCATA000  PACK      SAVKEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
          MATCH     SP70,NOTECATA
          IF        !(@EQUAL)
            MOVE      "   34",FLDID
            CALL      GETPOSIT
            IF        EXIT=0
              MOVE      NOTECATA,VAR
              CALL      DISPITEM
            ENDIF
            MOVE      "   26",FLDID
            CALL      GETMLPOS
            IF        EXIT=0
              MOVE      NOTECATA,VAR
              CALL      DISPITEM
            ENDIF
          ENDIF
.
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIIERAS,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIIACAT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIIADES,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   24",FLDID
          CALL      GETMLPOS
          IF        EXIT=0
            MOVE      SIIADES,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   25",FLDID
          CALL      GETMLPOS
          IF        EXIT=0
            MOVE      SIIAISS,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   27",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIIESOH,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIIAAVC,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      SAVKEY15,KEY15
          CALL      RDSCPS1
          RETURN
.
. Check for Notes
.----------------
NCATA000  MOVE      SP70,NOTECATA
          PACK      KEY10,SIIACAT,SP70
          CALL      RSSIIB1
          PACK      KEY15,SIIACAT,SIWAWAR,SP70
          CALL      RSSIIG1
NCATA100
          CALL      RKSIIB1
          BRANCH    OVRCD,NCATA200
          MATCH     SIIACAT,SIIBCAT
          GOTO      NCATA200 IF NOT EQUAL
          MATCH     SP70,SIIBCOM
          GOTO      NCATA100 IF EQUAL
          MOVE      "C",NOTECATA
NCATA200
          CALL      RKSIIG1
          BRANCH    OVRCD,NCATA300
          MATCH     SIIACAT,SIIGCAT
          GOTO      NCATA300 IF NOT EQUAL
          MATCH     SIWAWAR,SIIGWAR
          GOTO      NCATA300 IF NOT EQUAL
          MATCH     SP70,SIIGCOM
          GOTO      NCATA200 IF EQUAL
          MATCH     "C",NOTECATA
          IF        @EQUAL
            MOVE      "B",NOTECATA
          ELSE
            MOVE      "W",NOTECATA
          ENDIF
.
NCATA300  RETURN
.
EREQU000  IF        ACCEPT=1
            MOVE      ZERO,QTYFORM8
          ELSE
            MOVE      SIRTREQ,QTYFORM8
          ENDIF
.
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,QTYFORM8
          MOVE      QTYFORM8,SIRTREQ
          MOVE      SIRTREQ,VAR
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          IF        QTYFORM8=0
            MOVE      ONE,EXIT
            GOTO      EREQU999
          ENDIF
          IF        QTYFORM8<1
            BEEP
            MOVE      "Returned must be Greater Than 0 - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EREQU000
          ENDIF
EREQU999  RETURN
.
.
POST0000  PACK       KEY3,SP70
          CALL       TSSIRT12
          CALL       TKSIRT12
          IF         OVRCD=1
            MOVE       "No Entries to Post. Return Cancelled - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       POST9999
          ENDIF
          CLOCK      TIME,CTIMEIS
          MOVE       ZERO,CPAGENO
          MOVE       ZERO,PRTTOT
          MOVE       "99",CLNO
.
. Get Next Return Number
.
POST0100  MOVE      ANSR,SIRATYP
          READ      CONTROLF,TWENTY3;*194,HISSUE
          ADD       ONE,HISSUE
          WRITAB    CONTROLF,TWENTY3;*194,HISSUE
          SUB       ONE,HISSUE
          MOVE      HISSUE,SIRAREQ
          PACK      KEY8,SIRATYP,SIRAREQ
          CALL      RASIRA1
          COMPARE   ZERO,OVRCD
          GOTO      POST0100 IF EQUAL
.
          MOVE      ONE,SIRAIND
          MOVE      ZERO,SIRATOT
          CALL      WRSIRA1
          CALL      RLSIRA1    * Lock Requisition
          PACK      SKEY8,KEY8
          MOVE      ZERO,TOTALOUT
.
          BEEP
          DISPLAY   *P1:24,*EL,"Generated Return Number is ",*V2LON,SIRAREQ:
                    *HOFF," ";
          CALL      HITENTER
.
          DISPLAY    *P1:24,*EL,"Posting Return : "
          MOVE       ZERO,SECTOR
          PACK       KEY3,SP70
          CALL       TSSIRT12
.
POST1000  CALL       TKSIRT12
          BRANCH     OVRCD,POST9000
          ADD        ONE,SECTOR
          DISPLAY    *P23:24,*V2LON,SIRAREQ,*HOFF,"/",*V2LON,SECTOR
.
. Lock Catalog/Warehouse Record
.
POST1100  PACK       KEY12,SIRTCAT,SIRTWAR
          CALL       RLSIIE1   * Lock
          BRANCH     OVRCD,POST5000,POST4000
.
          CALL       SISIWK1   * check if stocktake in progress
          COMPARE    ZERO,OVRCD
          GOTO       POST4100 IF EQUAL
.
          PACK       KEY7,SIRTCAT
          CALL       RDSIIA1   * Read Catalog File
          BRANCH     OVRCD,POST5000
.
          MOVE      SKEY8,KEY8
          CALL      RDSIRA1
.
          PACK      KEY5,SIIASUB,SP70
          CALL      RDSISA1
.
          IF        SNCOPRS=1
            CALL      PRTLIN00
          ENDIF
          CALL       UPSOH000  * Update Stock on Hand
          CALL       UPREB000  * Update Requisition Details
          CALL       UPITM000  * Update Item History
.
          PACK       KEY5,SIRACST
          CALL       RDSICA1   * Read Cost Centre
.
          ASSIGN     SEQ*SIRTISS*SIIAAVC,SIUSCST
          ASSIGN     SIRTISS*SEQ,SIUSQTY
          CALL       SINUSAGE  * Update Usage
.
          ADD        SIUSCST,TOTALOUT
.
          MOVE       SIRTISS,TOTALREC
          CALL       BACK0000  * Update Backorders
.
          CALL       UUSIIE1   * Unlock
          GOTO       POST1000
.
POST4000  MOVE       ZERO,COUNT
          REPEAT
            ADD        ONE,COUNT
            DISPLAY    *P1:24,*W
            PACK       KEY12,SIRTCAT,SIRTWAR
            CALL       RLSIIE1
          UNTIL     (OVRCD=0)|(COUNT=5)
.
          COMPARE   ZERO,OVRCD
          GOTO      POST1100 IF EQUAL
          BEEP
          DISPLAY    *P1:24,*EL,"Catalog/Warehouse Locked : ":
                     *V2LON,SIRTCAT,*HOFF,"/",*V2LON,SIRTWAR,*HOFF:
                     " - Hit <Enter> to Retry ";
          KEYIN      ANS
          DISPLAY    *P1:24,*EL,"Posting Requisition : "
          DISPLAY    *P23:24,*V2LON,SIRAREQ,*HOFF,"/",*V2LON,SECTOR
          GOTO       POST1100
.
POST4100  DISPLAY    *P1:24,*EL,"Catalog/Warehouse Deleted. STOCKTAKE : ":
                     *V2LON,SIRTCAT,*HOFF,"/",*V2LON,SIRTWAR,*HOFF;
          CALL       HITENTER
          DISPLAY    *P1:24,*EL,"Posting Requisition : "
          DISPLAY    *P23:24,*V2LON,SIRAREQ,*HOFF,"/",*V2LON,SECTOR
          GOTO       POST1000
.
POST5000  DISPLAY    *P1:24,*EL,"Catalog/Warehouse Deleted : ":
                     *V2LON,SIRTCAT,*HOFF,"/",*V2LON,SIRTWAR,*HOFF;
          CALL       HITENTER
          DISPLAY    *P1:24,*EL,"Posting Requisition : "
          DISPLAY    *P23:24,*V2LON,SIRAREQ,*HOFF,"/",*V2LON,SECTOR
          GOTO       POST1000
.
POST9000
          IF        SNCOPRS=1
            CALL      PRTEND00
          ENDIF
.
          MOVE      SKEY8,KEY8
          CALL      RDSIRA1
          MOVE      TOTALOUT,SIRATOT
.
          CALL      UPSIRA1    * Update Requisition Total
          CALL      UUSIRA1    * Unlock Requisition
.
POST9999  RETURN
.------------------------------------------------------------
. Print Return Docket Details
.------------------------------------------------------------
PRTLIN00  COMPARE   "55",CLNO
          CALL      PRTHED00 IF NOT LESS
          MOVE      SIIADES,KEY30
          MOVE      SIRTREQ,PRTQTY
          MOVE      SIIAAVC,PRTCST
          ASSIGN    PRTCST*PRTQTY,PRTAMT
          ADD       PRTAMT,PRTTOT
          PRINT     SIIACAT,SP1,KEY30,SP1,SIIERAS,PRTQTY,PRTCST,PRTAMT
          ADD       ONE,CLNO
          RETURN
.
PRTHED00  CALL      HEAD80
          PRINT     "Return Number      : ",SIRATYP,SIRAREQ
          PRINT     "Cost Centre        : ",SICACODE,SP1,SICADESC
          PRINT     "Reason for Return  : ",SIRADEL
          UNPACK    SIRADAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     "Return Date        : ",CPCDATE
          CALL      UND80
          PRINT     "Catalog                                R & S ":
                    "      Qty     Av. Cost        Total"
          CALL      UND80
          RETURN
.
PRTEND00  CALL      UND80
          PRINT     *68,PRTTOT
          CALL      UND80
          RETURN
.--------------------------------------------
. Update Stock on hand
.--------------------------------------------
UPSOH000  MOVE      SIRTREQ,SIRTISS
          ADD       SIRTISS,SIIESOH
          CALL      UPSIIE1
.
UPSOH999  RETURN
.-----------------------------------
. Update Requisition Details File
.-----------------------------------
UPREB000  MOVE      SIRATYP,SIRBTYP
          MOVE      SIRAREQ,SIRBREQ
          MOVE      SIRTWAR,SIRBWAR
          MOVE      SIRTCAT,SIRBCAT
          PACK      KEY20,SIRBTYP,SIRBREQ,SIRBWAR,SIRBCAT
          CALL      RDSIRB1
          IF        OVRCD=0
            SUB       SIRTREQ,SIRBRQT
            SUB       SIRTISS,SIRBIQT
            ASSIGN    SIIAAVC*SIRBIQT,SIRBAMT
            CALL      UPSIRB1
          ELSE
            ASSIGN    SIRTREQ*SEQ,SIRBRQT
            ASSIGN    SIRTISS*SEQ,SIRBIQT
            ASSIGN    SIIAAVC*SIRBIQT,SIRBAMT
            MOVE      SIRADAT,SIRBDAT
            CALL      WRSIRB1
          ENDIF
          RETURN
.-----------------------------------
. Update Item History
.-----------------------------------
UPITM000  MOVE      SIRADAT,SIPEDATE
          CALL      RSIPE000                       * Get Usage Period
          PACK      SIITPER,SIPEYEAR,SIPEPER
.
          MOVE      SIRTWAR,SIITWAR                * Warehouse
          MOVE      SIRTCAT,SIITCAT                * Catalog
          ASSIGN    SIRTISS,SIITQTY                * Quantity
          ASSIGN    SIRTISS*SIIAAVC,SIITAMT
          MOVE      SIRACST,SIITCST                * Cost Centre
          PACK      SIITREQ,SIRATYP,SIRAREQ
          MOVE      "8",SIITTYP                    * Return
          MOVE      SP70,SIITPUR
          MOVE      SP70,SIITSPA
          MOVE      SIIESOH,SIITSOH            * Stock on Hand
          MOVE      SP70,SIITREF
.
          MOVE      PRGID,SIITPRG
          MOVE      PORT,SIITPOR
          MOVE      PASSCODE,SIITOPR
          PACK      SIITDAT,CCC,CYY,CMM,CDD
          REP       " 0",SIITDAT
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
          RETURN
.
.----------------------------------------------------------------------
. Process Back Orders
. Requires : TOTALREC (quantity to allocate)
.----------------------------------------------------------------------
BACK0000  READ      CONTROLF,TWENTY3;*120,HBACK
          READ      CONTROLF,SIXTY3;*144,HALLOCBO
.
          COMPARE   ONE,HBACK
          GOTO      BACK9999 IF NOT EQUAL
.
          MOVE      ZERO,TOTALSOB
          MOVE      ZERO,COUNT
.
          PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          CALL      RSSIBA2
.
BACK1000  CALL      RKSIBA2
          BRANCH    OVRCD,BACK1100
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACK1100 IF NOT EQUAL
.
BACK1050  CALL      RLSIBA2
          IF        OVRCD=2
            BEEP
            DISPLAY   *P1:24,*EL,"Back Order Locked : ",KEY25
            GOTO      BACK1050
          ENDIF
.
          ADD       SIBAQTY,TOTALSOB      * Total of Requisitions
          ADD       ONE,COUNT             * Number of Requisitions
          GOTO      BACK1000
.
BACK1100  COMPARE   ZERO,TOTALSOB
          GOTO      BACK9000 IF EQUAL
.
          IF        TOTALREC>TOTALSOB
            CALL      BACALL00           * Allocate all Backorders
            GOTO      BACK9000
          ENDIF
.
          IF        COUNT=1
            CALL      BACONE00           * Allocate to Single Back Order
            GOTO      BACK9000
          ENDIF
.
          CALL      BACUSR00           * Allow User to Allocate Backorder
.
BACK9000  CALL      UUSIBA2
.
BACK9999  RETURN
.-------------------------------------------------------------------
. Not Enough Received to Cover All Back Orders.
.-------------------------------------------------------------------
BACUSR00  CALL      KLTMBA00
          CALL      CRTMBA00
.
          PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          PACK      SKEY7,PORT,SP70
          CALL      RSSIBA2
.
BACUSR10  CALL      RKSIBA2
          BRANCH    OVRCD,BACUSR20
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACUSR20 IF NOT EQUAL
.
          IF        HALLOCBO=2
            PACK      KEY33,SIBADAT,KEY25
          ELSE
            PACK      KEY33,SP8,KEY25
          ENDIF
.
          CALL      RATMBA1
          IF        OVRCD=1
            CALL      WRTMBA1
          ENDIF
          GOTO      BACUSR10
.
BACUSR20  MOVE      SP70,KEY33
          MOVE      TOTALREC,TOTALEFT
          CALL      RSTMBA1
BACUSR30  CALL      RKTMBA1
          BRANCH    OVRCD,BACUSR40
.
          PACK      SIBTPON,SKEY7,SP70
          MOVE      SIBAREQ,SIBTREQ
          MOVE      SIBACST,SIBTCST
          MOVE      SIBAQTY,SIBTQTY
.
          IF        HALLOCBO=2
            IF        TOTALEFT>=SIBTQTY
              MOVE      SIBTQTY,SIBTISS
              SUB       SIBTQTY,TOTALEFT
            ELSE
              MOVE      TOTALEFT,SIBTISS
              MOVE      ZERO,TOTALEFT
            ENDIF
          ELSE
            ASSIGN    (SIBAQTY/TOTALSOB),F12P2
            ASSIGN    (F12P2*TOTALREC)+.50,F12P2
            MOVE      F12P2,QTYFORM8
            IF        TOTALEFT>=QTYFORM8
              MOVE      QTYFORM8,SIBTISS
              SUB       QTYFORM8,TOTALEFT
            ELSE
              MOVE      TOTALEFT,SIBTISS
              MOVE      ZERO,TOTALEFT
            ENDIF
          ENDIF
.
          PACK      KEY15,SIBTPON,SIBTREQ
          CALL      RASIBT1
          IF        OVRCD=1
            CALL      WRSIBT1
          ENDIF
          GOTO      BACUSR30
.
BACUSR40  CALL      KLTMBA00
          CALL      SCBAL000
.
          PACK      KEY8,SP70
          CALL      TSSIBT12
.
BACUSR50  CALL      TKSIBT12
          BRANCH    OVRCD,BACUSR99
          MOVE      SIIEWAR,SIBPWAR
          MOVE      SIBTCST,SIBPCST
.
          COMPARE   ZERO,SIBTISS
          GOTO      BACUSR80 IF EQUAL
.
          PACK      KEY25,SIIEWAR,SIIECAT,SIBTCST,SIBTREQ,SP70
          CALL      RDSIBA2
          BRANCH    OVRCD,BACUSR50
.
          MOVE      SIBTISS,SIBPAQT
          ASSIGN    SIBAQTY-SIBTISS,SIBPBQT
          CALL      WRPIC000
.
          ASSIGN    SIBAQTY-SIBTISS,SIBAQTY
          IF        SIBAQTY>0
            CALL      UPSIBA2
          ELSE
            CALL      DESIBA2
          ENDIF
.
BACUSR80  PACK      KEY15,SKEY7,SIBTREQ,SP70
          CALL      RASIBT1
          IF        OVRCD=0
            CALL      DESIBT1
          ENDIF
          GOTO      BACUSR50
.
BACUSR99  RETURN
.-----------------------------------------------------------------
. Kill the Temporary Backorder File
.-----------------------------------------------------------------
KLTMBA00  PACK      TMBANAME,TMBANAMA,PORT
          CLOSE     TMPBACA1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TMBANAME,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KLTMBA99  RETURN
.-----------------------------------------------------------------
. Create the Temporary Backorder File
.-----------------------------------------------------------------
CRTMBA00  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMBANAME,CMDLINE
.
          APPEND    " 61 UC26-33,21-25,6-12,1-5,13-20",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      TMPBACA1,TMBANAME
.
CRTMBA99  RETURN
.-----------------------------------------------------------------
. Enough Received to Cover All Back Orders.
.-----------------------------------------------------------------
BACALL00  PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          CALL      RSSIBA2
.
BACALL10  CALL      RKSIBA2
          BRANCH    OVRCD,BACALL99
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACALL99 IF NOT EQUAL
.
          MOVE      SIBAQTY,SIBPAQT
          MOVE      ZERO,SIBPBQT
          CALL      WRPIC000   * Write to Picking Sheets
.
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          CALL      DESIBA2    * Back Order Compltete So Remove
          GOTO      BACALL10
.
BACALL99  RETURN
.----------------------------------------------------------------------
. Single Item on Back Order Only.
.----------------------------------------------------------------------
BACONE00  PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          CALL      RSSIBA2
          CALL      RKSIBA2
          BRANCH    OVRCD,BACONE99
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACONE99 IF NOT EQUAL
.
          MOVE      TOTALREC,SIBPAQT
          ASSIGN    SIBAQTY-TOTALREC,SIBPBQT
.
          CALL      WRPIC000
.
          ASSIGN    SIBAQTY-TOTALREC,SIBAQTY
          IF        SIBAQTY=0
            CALL      DESIBA2
          ELSE
            CALL      UPSIBA2
          ENDIF
.
BACONE99  RETURN
.-----------------------------------------------
. Write to Picking Sheet File for Back Orders
.-----------------------------------------------
WRPIC000  CALL      GETREQ00    * Post Requisition File Entry
.
          MOVE      SIIEWAR,SIBPWAR    * Warehouse
          MOVE      SIIECAT,SIBPCAT    * Catalog
          MOVE      SIBAQTY,SIBPRQT    * Quantity Required
          MOVE      BACKDEL,SIBPDEL    * Delivery Details
          MOVE      SIRACST,SIBPCST    * Cost Centre
          MOVE      SIIERAS,SIBPRAC    * Rack&Shelf
          MOVE      SIRATYP,SIBPTYP    * Req Type
          MOVE      SIRAREQ,SIBPREQ    * Req No.
          MOVE      SP2,SIBPPFL
          MOVE      SIBARESI,SIBPRESI  * Restock ID             Quote 9817
          PACK    KEY83,SIBPWAR,SIBPCST,SIBPDEL,SIBPRAC,SIBPCAT,SIBPTYP,SIBPREQ
          CALL      RASIBP1
          IF        OVRCD=1
            CALL      WRSIBP1
          ENDIF
.
          SUB       SIBPAQT,SIIESOH
          CALL      UPSIIE1
.
          PACK      SIITPER,SIPEYEAR,SIPEPER
          MOVE      SIBPWAR,SIITWAR            * Warehouse
          MOVE      SIBPCAT,SIITCAT            * Catalog
          ASSIGN    SIBPAQT*SEQ,SIITQTY        * Quantity
          ASSIGN    SEQ*SIBPAQT*SIIAAVC,SIITAMT
          MOVE      SIBPCST,SIITCST            * Cost Centre
          PACK      SIITREQ,SIBPTYP,SIBPREQ
          MOVE      "6",SIITTYP                * Back Order Requisition
          MOVE      SP7,SIITPUR                * Order Number
          MOVE      SIIESOH,SIITSOH            * Stock on Hand
          MOVE      SP70,SIITSPA               * Spare
.
          MOVE      PRGID,SIITPRG
          MOVE      PORT,SIITPOR
          MOVE      PASSCODE,SIITOPR
.
          PACK      SIITDAT,CCC,CYY,CMM,CDD
          REP       " 0",SIITDAT
          PACK      SIPEDATE,SIITDAT,SP70
          CALL      RSIPE000
          IF        OVRCD=1
            UNPACK    SIITDAT,CCENT,CYEAR,CMON,CDAY
            PACK      SIITPER,CCENT,CYEAR,CMON,SP70
          ELSE
            PACK      SIITPER,SIPEYEAR,SIPEPER,SP70
          ENDIF
          REP       " 0",SIITPER
.
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
.
          ASSIGN    SIBPAQT,SIUSQTY        * Quantity
          ASSIGN    SIBPAQT*SIIAAVC,SIUSCST
.
          MOVE      SIBACST,KEY5
          CALL      RDSICA1
.
          CALL      SINUSAGE
.
          RETURN
.------------------------------------------------------------
. Write Backorder Requisition Details
.------------------------------------------------------------
GETREQ00  PACK      KEY8,ANSB,Z70
          CALL      RSSIRA1
          CALL      RPSIRA1
          IF        OVRCD=1
            MOVE      ZERO,F7
          ELSE
            MOVE      SIRAREQ,F7
          ENDIF
.
          MOVE      SP70,SIRADEL
          PACK      KEY8,SIBAREQ,SP70
          CALL      RDSIRA1
          MOVE      SIRADEL,BACKDEL
.
GETREQ10  ADD       ONE,F7
          PACK      KEY8,ANSB,F7
          CALL      RDSIRA1
          COMPARE   ZERO,OVRCD
          GOTO      GETREQ10 IF EQUAL
.
          UNPACK    KEY8,SIRATYP,SIRAREQ   * Move in details
          MOVE      SIBACST,SIRACST
          MOVE      ZERO,SIRAIND
          PACK      SIRADAT,CCC,CYY,CMM,CDD
          REP       " 0",SIRADAT
          ASSIGN    SIBPAQT*SIIAAVC,SIRATOT
.
          CLEAR     SIRADEL
          APPEND    "Stock Return : ",SIRADEL
          APPEND    SIRAREQ,SIRADEL
          APPEND    SP70,SIRADEL
          RESET     SIRADEL
.
          CALL      WRSIRA1                * Write to Header File
.
          PACK      KEY20,SIRATYP,SIRAREQ,SIBAWAR,SIBACAT
          UNPACK    KEY20,SIRBTYP,SIRBREQ,SIRBWAR,SIRBCAT
          CALL      RASIRB1
          IF        OVRCD=0
            CALL      DESIRA1
            GOTO      GETREQ10
          ELSE
            MOVE      SIBAQTY,SIRBRQT
            MOVE      SIBPAQT,SIRBIQT
            ASSIGN    SIBPAQT*SIIAAVC,SIRBAMT
            UNPACK    SP70,SIRBBCH,SIRBLED,SIRBACC,SIRBSPA
            MOVE      SIRADAT,SIRBDAT
            CALL      WRSIRB1              * Write to Details File
          ENDIF
          RETURN
CANC0000
          RETURN
BACLIN00  MOVE     SIBTCST,KEY5
          CALL     RDSICA1
          RETURN
BALAN000  MOVE      ZERO,EXIT
          MOVE      ZERO,F12P2
          PACK      KEY8,SP70
          CALL      TSSIBT12
BALAN100  CALL      TKSIBT12
          BRANCH    OVRCD,BALAN200
          ADD       SIBTISS,F12P2
          GOTO      BALAN100
.
BALAN200  MOVE      ZERO,EXIT
          COMPARE   F12P2,TOTALREC
          GOTO      BALAN999 IF EQUAL
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
BALAN300  DISPLAY   *P1:24,*EL,*B,"Received :",*V2LON,TOTALREC,*HOFF:
                    "  Allocated :",*V2LON,F12P2,*HOFF," Continue (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? "
          KEYIN     *P71:24,*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      BALAN400 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      BALAN300 IF NOT EQUAL
          MOVE      ONE,EXIT
          CALL      MESSAGE3
          GOTO      BALAN999
.
BALAN400
          IF        F12P2>TOTALREC
            MOVE      ONE,EXIT
          ELSE
            MOVE      ZERO,EXIT
          ENDIF
.
          CALL      MESSAGE3
.
BALAN999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       SINBACIO/INC
          INC       SINBATIO/INC
          INC       SINBOTIO/INC
          INC       SINBPSIO/INC
          INC       SINCCAIO/INC
          INC       SINCCAKY    
          INC       SINCCBIO/INC
          INC       SINCCCIO/INC
          INC       SINCCEIO/INC
          INC       SINCCFIO/INC
          INC       SINCCHIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCIAKY    
          INC       SINCIBIO/INC
          INC       SINCIEIO/INC
          INC       SINCIEKY    
          INC       SINCIFIO/INC
          INC       SINCIGIO/INC
          INC       SINCIHIO/INC
          INC       SINCIIIO/INC
          INC       SINITMIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINREAIO/INC
          INC       SINREBIO/INC
          INC       SINRTFIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINUSAGE    
          INC       SINWARIO/INC
          INC       SINWRKCD    
          INC       SINWRKIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
