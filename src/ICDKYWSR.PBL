.------------------------------------------------------------
. Function          : Procedure for Seach of 
.                      Fill in description of Search
.
. Parameters        : CKEYSUSP    1=Show Suspended 
.                   : CKEYORDR    0=Key Word Search, 1=Alphabetic Search
.                      Fill in Other Parameters Required
.
. Includes Required :
. Open Tables Req   :
. Returns Fields    : OVRCD    0=Valid Record Selected, 1=No Record Selected
.                     Record Read from xxxxxxx Table
.
. Modifications :
.         V5.08.01  21/09/2000  Greg Horvat
.                   Changed to validate the ICD version 2 code when a code is
.                   selected
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Routine to Seach for
.  a coded field via either a Key Word Index or Alphabetical
.  Index and output a ? Selection List.
.  
.  A Key Word Index Table is Defined in the following Manner
.
.  patdicaf
.  PATDICA1
.  PATDICA2    
.  
.  PTDIICD     DIM       xx    * Code Field 
.  PTDIKWD     DIM       15    * Key Word
.
.  Index 1   PTDIICD, PTDIKWD
.  Index 2   PTDIKWD, PTDIICD
.
.To convert this Procedure the following should be performed in this sequence
.    Global Change paticddf to name of Alphabetic Search Table   eg patdo1af
.    Global Change PATICDD3 to index of Alphabetic Search Table  eg PATDO1A2
.    Global Change RDICD3  to the Read on Alpha Search Index    eg RDDOCT2
.    Global Change RDKICD3 to the Read Next Alpha Search Index  eg RDKDOCT2
.    Global Change RDPICD3 to the Read Prev Alpha Search Index  eg RDPDOCT2
.    Global Change RDSICD3 to the Read Post Alpha Search Index  eg RDSDOCT2
.    Global Change DPCODE to the Code Field from the Table     eg DCODE
.    Global Change DDESC to the Name Field from the Table     eg DSNAME
.    Global Change KEY79    to the Key for the Aplha Index       eg KEY26
.    Global Change patdicaf to name of Key Word Table            eg patdkiaf
.    Global Change PATDICA1 to index 1 of Key Word Table         eg PATDKIA1
.    Global Change PATDICA2 to index 2 of Key Word Table         eg PATDKIA2
.    Global Change PTDIICD to Key Word Index Code Field         eg PTDKDOC
.    Global Change PTDIKWD to Key Word Index Word Field         eg PTDKKWD
.    Global Change HPTDIA   to Routine Label                     eg HPTDKA00
.    Global Change KEY24    to the Key needed for Key Word Table eg KEY21
.    Global Change KEY9    to the Key for the Code Field        eg KEY6
.    Global Change RDICD1 to the Read on Master Table          eg RDDOCT1
.    Global Change PTDI     to the IO Call ID for the Key Words  eg PTDK
.    Global Change INACTV to the field to Indicate Inactive Code eg DRSTAT
.
.    Modify List Display to Suit
.
.    Note : vi Global change command   :%s/FromString/ToString/g
.  
.  A Alphabetic Index on a Master Table is Defined in the following Manner
.                              
.  DPCODE    DIM       xx    * Code Field 
.  DDESC    DIM       xx    * Name or Description Field
.
.------------------------------------------------------------
. Search 
.------------------------------------------------------------
HPTDIA00  MOVE      CKEYSUSP,SHOWSUSP
          MOVE      CKEYORDR,SEARCHTY
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATDICA1,"patdicaf"
          TRAPCLR   IO
          IF        OVRCD=1
            BEEP
            MOVE      "ERROR: Search Table Missing (patdicaf)- ",DISPMSG
            CALL      MESSAGE1
            GOTO      HPTDIA99
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          CALL      OPICD2
          TRAPCLR   IO
          IF        OVRCD=1
            BEEP
            MOVE      "ERROR: Search Table Missing (paticddf)- ",DISPMSG
            CALL      MESSAGE1
            GOTO      HPTDIA99
          ENDIF
.
          OPEN      PATDICA2,"patdicaf"
          MOVE      ZERO,CSCRSIZ
.
          MOVE      "08",HTOP
          MOVE      "24",HBOT
          MOVE      "01",HLEF
          MOVE      "80",HRIG
.
HPTDIA10  CALL      KWINT000
          BRANCH    EXIT,HPTDIA90
          MOVE      STDCOL00,STDCOL01
          ADD       " 5",STDCOL01
          DISPLAY   *PSTDCOL01:STDROW,*V2LON,*ULON,"Code"            
          MOVE      STDCOL01,STDCOL02
          ADD       "10",STDCOL02
          DISPLAY   *PSTDCOL02:STDROW,*V2LON,*ULON,"Description",*HOFF
          MOVE      STDCOL02,STDCOL03
          ADD       "25",STDCOL03
.
          CALL      SHOWFL00                * Display Flags
          CLIP
          FLUSH     HLEF,HTOP,HRIG,HBOT
.
HPTDIA20  IF        SEARCHTY=1
            CALL      ALPSCH00              * Alphabetic Search
          ELSE
            CALL      KEYSCH00              * Key Word Search
          ENDIF
          BRANCH    DOAGAIN,HPTDIA10,HPTDIA20
.
          ADD       ONE,CSSCRNUM
          GETSCR    CSSCRNUM,1,24,80,24
          CALL      VDV2C000                * Validate disease ICD10 ver 2 codes
          PUTSCR    CSSCRNUM
          SUB       ONE,CSSCRNUM
          BRANCH    EXIT,HPTDIA20
.
          PUTSCR    CSSCRNUM,HLEF,HTOP,HRIG,HBOT
          CALL      FRESCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
.
HPTDIA90  CLOSE     PATDICA1
          CLOSE     PATDICA2
HPTDIA99  RETURN
.------------------------------------------------------------
. Perform Key Word Search
.------------------------------------------------------------
KEYSCH00  MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          ADD       ONE,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          ASSIGN    STDROW+1,FLAGROW
          ASSIGN    ((HRIG-HLEF)/2)-13,FLAGCOL      
          DISPLAY   *PFLAGCOL:FLAGROW,*V2LON,*ULON,"Enter Key Words for Search"
          ASSIGN    STDROW+3,FLAGROW
          ASSIGN    ((HRIG-HLEF)/2)-30,FLAGCOL
          KEYIN     *PFLAGCOL:FLAGROW,*V2LON,KEYWRD00
          MOVE      MINITEM,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          PACK      KEYWRD00,KEYWRD00,SP30,SP30
          RESET     KEYWRD00
          CALL      GETWRD00     * Break Words into Seprate Fields
.
KEYSCH09  MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          MOVE      SP9,PTDIICD 
.
          STRIP     KEYWRD01
          PACK      KEY24,KEYWRD01,SP30
          CALL      RSPTDI2 
KEYSCH10  CALL      RKPTDI2 
          BRANCH    OVRCD,KEYSCH15
.
          CALL      CHKRC000
          BRANCH    OVRCD,KEYSCH10,KEYSCH15
.
          ADD       ONE,SELITMNO
          ADD       ONE,STDROW
          PACK      KEY24,PTDIKWD,PTDIICD
          STORE     KEY24,SELITMNO,ST1,ST2,ST3,ST4,ST5:                      
                                 ST6,ST7,ST8,ST9,ST10:
                                 ST11,ST12,ST13,ST14,ST15:
                                 ST16,ST17
          DISPLAY   *PSTDCOL00:STDROW,SP1,*V2LON,SELITMNO,DOT;
          IF        CHECKSUS<>0
            DISPLAY   *V2LON,*BLINKON,"*"
          ENDIF
          DISPLAY   *PSTDCOL01:STDROW,PTDIICD
          DISPLAY   *PSTDCOL02:STDROW,DDESC
. 
          COMPARE   MAXITEM,SELITMNO
          GOTO      KEYSCH10 IF NOT EQUAL
.
KEYSCH15  MOVE      ONE,NEWDITEM
          MOVE      ONE,DITEM
          MOVE      MINITEM,DROW
          ADD       ONE,DROW
          DISPLAY   *PSTDCOL00:DROW,*V2LON,*HON,SP1,NEWDITEM,DOT
.
KEYSCH20  CALL      KWSEL000
          BRANCH    EXIT,KEYSCH30,KEYSCH35,KEYSCH40,KEYSCH45,KEYSCH98:
                                  KEYSCH91,KEYSCH00,KEYSCH70
.                        Next     Last     Home     End      Expand/Reduce
.                                 Exit     Search   Flags
          GOTO      KEYSCH92
.
KEYSCH30  CALL      RKPTDI2 
          BRANCH    OVRCD,KEYSCH85
          CALL      CHKRC000
          BRANCH    OVRCD,KEYSCH30,KEYSCH85
.
          PACK      KEY24,PTDIKWD,PTDIICD,SP30                                  
          CALL      RPPTDI2 
          MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      KEYSCH10
.
KEYSCH35  MOVE      ST1,KEY24
          CALL      RDPTDI2 
.
KEYSCH36  CALL      RPPTDI2 
          BRANCH    OVRCD,KEYSCH85
          CALL      CHKRC000
          BRANCH    OVRCD,KEYSCH36,KEYSCH85
          PACK      KEY24,PTDIKWD,PTDIICD,SP30                                  
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,SELITMNO
.
KEYSCH37  CALL      RPPTDI2 
          BRANCH    OVRCD,KEYSCH38
          CALL      CHKRC000
          BRANCH    OVRCD,KEYSCH37,KEYSCH38
.
          SUB       ONE,SELITMNO
          COMPARE   ZERO,SELITMNO
          GOTO      KEYSCH37 IF NOT EQUAL
.
KEYSCH38  MOVE      ZERO,SELITMNO
          GOTO      KEYSCH10
.
KEYSCH40  MOVE      ST1,KEY24
          CALL      RDPTDI2 
KEYSCH41  CALL      RPPTDI2 
          BRANCH    OVRCD,KEYSCH85
          CALL      CHKRC000
          BRANCH    OVRCD,KEYSCH41,KEYSCH85
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      KEYSCH09
.
KEYSCH45  CALL      RKPTDI2 
          BRANCH    OVRCD,KEYSCH85
          CALL      CHKRC000
          BRANCH    OVRCD,KEYSCH45,KEYSCH85
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      ZERO,SELITMNO
          PACK      KEY24,KEYWRD01,Z70                                          
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,SELITMNO
          CALL      RSPTDI2 
.
KEYSCH46  CALL      RPPTDI2 
          BRANCH    OVRCD,KEYSCH47
          CALL      CHKRC000
          BRANCH    OVRCD,KEYSCH46,KEYSCH47
.
          SUB       ONE,SELITMNO
          COMPARE   ZERO,SELITMNO
          GOTO      KEYSCH46 IF NOT EQUAL
.
KEYSCH47  MOVE      ZERO,SELITMNO
          GOTO      KEYSCH10
.
KEYSCH70  CALL      FLAGD000
          MOVE      TWO,DOAGAIN
          GOTO      KEYSCH99
.
KEYSCH85  LOAD      KEY24,SELITMNO,ST1,ST2,ST3,ST4,ST5:                         
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY24,PTDIKWD,PTDIICD
          CALL      RDPTDI2 
.
KEYSCH90  BEEP
          GOTO      KEYSCH20
.
KEYSCH91  MOVE      SP30,KEY24
          MOVE      SP9,PTDIICD 
          MOVE      SP20,PTDIKWD 
          MOVE      ONE,OVRCD
          GOTO      KEYSCH96
.
KEYSCH92  MOVE      SP30,KEY24
          MOVE      SP9,PTDIICD 
          LOAD      KEY24,CCITEM,ST1,ST2,ST3,ST4,ST5:                           
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY24,PTDIKWD,PTDIICD
          MOVE      PTDIICD,KEY9
          CALL      RDICD1
.
KEYSCH96  MOVE      ZERO,DOAGAIN
          GOTO      KEYSCH99
.
KEYSCH98  MOVE      ONE,DOAGAIN
.
KEYSCH99  RETURN
.------------------------------------------------------------
. Perform Alphabetic Search
.------------------------------------------------------------
ALPSCH00  MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          ADD       ONE,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          ASSIGN    STDROW+1,FLAGROW
          ASSIGN    ((HRIG-HLEF)/2)-10,FLAGCOL
          DISPLAY   *PFLAGCOL:FLAGROW,*V2LON,*ULON,"Enter Name for Search"
          ASSIGN    STDROW+3,FLAGROW
          ASSIGN    ((HRIG-HLEF)/2)-30,FLAGCOL
          KEYIN     *PFLAGCOL:FLAGROW,*V2LON,KEYWRD00
          MOVE      MINITEM,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          PACK      KEYWRD00,KEYWRD00,SP30,SP30
          RESET     KEYWRD00
.
ALPSCH09  MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          MOVE      SP9,DPCODE 
.
          STRIP     KEYWRD00
          PACK      KEY79,KEYWRD00,SP30,SP30,SP20
          CALL      RDSICD2
ALPSCH10  CALL      RDKICD2
          BRANCH    OVRCD,ALPSCH15
.
          CALL      CHKRC000
          BRANCH    OVRCD,ALPSCH10,ALPSCH15
.
          ADD       ONE,SELITMNO
          ADD       ONE,STDROW
          PACK      KEY79,DDESC,DPCODE
          STORE     KEY79,SELITMNO,ST1,ST2,ST3,ST4,ST5:                        
                                 ST6,ST7,ST8,ST9,ST10:
                                 ST11,ST12,ST13,ST14,ST15:
                                 ST16,ST17
          DISPLAY   *PSTDCOL00:STDROW,SP1,*V2LON,SELITMNO,DOT;
          IF        CHECKSUS<>0
            DISPLAY   *V2LON,*BLINKON,"*"
          ENDIF
          DISPLAY   *PSTDCOL01:STDROW,DPCODE
          DISPLAY   *PSTDCOL02:STDROW,DDESC 
.
          COMPARE   MAXITEM,SELITMNO
          GOTO      ALPSCH10 IF NOT EQUAL
.
ALPSCH15  MOVE      ONE,NEWDITEM
          MOVE      ONE,DITEM
          MOVE      MINITEM,DROW
          ADD       ONE,DROW
          DISPLAY   *PSTDCOL00:DROW,*V2LON,*HON,SP1,NEWDITEM,DOT
.
ALPSCH20  CALL      KWSEL000
          BRANCH    EXIT,ALPSCH30,ALPSCH35,ALPSCH40,ALPSCH45,ALPSCH98:
                                  ALPSCH91,ALPSCH00,ALPSCH70
.                        Next     Last     Home     End      Expand/Reduce
.                                 Exit     Search   Flags
          GOTO      ALPSCH92
.
ALPSCH30  CALL      RDKICD2
          BRANCH    OVRCD,ALPSCH85
          CALL      CHKRC000
          BRANCH    OVRCD,ALPSCH30,ALPSCH85
.
          PACK      KEY79,DDESC,DPCODE,SP30,SP30,SP20
          CALL      RDPICD2
          MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      ALPSCH10
.
ALPSCH35  MOVE      ST1,KEY79
          CALL      RDICD2
.
ALPSCH36  CALL      RDPICD2
          BRANCH    OVRCD,ALPSCH85
          CALL      CHKRC000
          BRANCH    OVRCD,ALPSCH36,ALPSCH85
          PACK      KEY79,DDESC,DPCODE,SP30,SP30,SP20
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,SELITMNO
.
ALPSCH37  CALL      RDPICD2
          BRANCH    OVRCD,ALPSCH38
          CALL      CHKRC000
          BRANCH    OVRCD,ALPSCH37,ALPSCH38
.
          SUB       ONE,SELITMNO
          COMPARE   ZERO,SELITMNO
          GOTO      ALPSCH37 IF NOT EQUAL
.
ALPSCH38  MOVE      ZERO,SELITMNO
          GOTO      ALPSCH10
.
ALPSCH40  MOVE      ST1,KEY79
          CALL      RDICD2
ALPSCH41  CALL      RDPICD2
          BRANCH    OVRCD,ALPSCH85
          CALL      CHKRC000
          BRANCH    OVRCD,ALPSCH41,ALPSCH85
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      ALPSCH09
.
ALPSCH45  CALL      RDKICD2
          BRANCH    OVRCD,ALPSCH85
          CALL      CHKRC000
          BRANCH    OVRCD,ALPSCH45,ALPSCH85
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      ZERO,SELITMNO
          PACK      KEY79,KEYWRD01,Z70,Z70                                          
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,SELITMNO
          CALL      RDSICD2
.
ALPSCH46  CALL      RDPICD2
          BRANCH    OVRCD,ALPSCH47
          CALL      CHKRC000
          BRANCH    OVRCD,ALPSCH46,ALPSCH47
.
          SUB       ONE,SELITMNO
          COMPARE   ZERO,SELITMNO
          GOTO      ALPSCH46 IF NOT EQUAL
.
ALPSCH47  MOVE      ZERO,SELITMNO
          GOTO      ALPSCH10
.
ALPSCH70  CALL      FLAGD000
          MOVE      TWO,DOAGAIN
          GOTO      ALPSCH99
.
ALPSCH85  LOAD      KEY79,SELITMNO,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY79,DDESC,DPCODE                                       
          CALL      RDICD2
.
ALPSCH90  BEEP
          GOTO      ALPSCH20
.
ALPSCH91  MOVE      SP9,DPCODE 
          PACK      KEY79,SP30,SP30,SP20
          PACK      DDESC,SP30,SP30,SP10
          MOVE      ONE,OVRCD
          GOTO      ALPSCH96
.
ALPSCH92  PACK      KEY79,SP30,SP30,SP10
          LOAD      KEY79,CCITEM,ST1,ST2,ST3,ST4,ST5:                           
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY79,DDESC,DPCODE                                       
          MOVE      DPCODE,KEY9
          CALL      RDICD1
.
ALPSCH96  MOVE      ZERO,DOAGAIN
          GOTO      ALPSCH99
.
ALPSCH98  MOVE      ONE,DOAGAIN
.
ALPSCH99  MOVE      NEWDITEM,DITEM
          RETURN
.------------------------------------------------------------
. Alter Flags
.------------------------------------------------------------
FLAGD000  BOXCLR    CLEF,CTOP,CRIG,CBOT
          ASSIGN    MINITEM+2,F2
FLAGD110  MOVE      "N",ANS
          KEYIN     *PSTDCOL02:F2,"Show Inactive (",*V2LON,"Y",*HOFF,"/":
                                  *V2LON,"N",*HOFF,")    : ",*V2LON,*RV,ANS
          REP       UPPLOW,ANS
          MOVE      ONE,SHOWSUSP
          MATCH     "Y",ANS
          GOTO      FLAGD190 IF EQUAL
          MATCH     "N",ANS
          GOTO      FLAGD110 IF NOT EQUAL
          MOVE      ZERO,SHOWSUSP
FLAGD190  ASSIGN    MINITEM+3,F2
FLAGD210  MOVE      "K",ANS
          KEYIN     *PSTDCOL02:F2,*V2LON,"K",*HOFF,"ey Word or ":
                                  *V2LON,"A",*HOFF,"lphabetic Search : ":
                                  *V2LON,*RV,ANS
          REP       UPPLOW,ANS
          MOVE      ZERO,SEARCHTY
          MATCH     "K",ANS
          GOTO      FLAGD290 IF EQUAL
          MATCH     "A",ANS
          GOTO      FLAGD210 IF NOT EQUAL
          MOVE      ONE,SEARCHTY
FLAGD290
          CALL      SHOWFL00
          RETURN 
.------------------------------------------------------------
. Display Flag Settings
.------------------------------------------------------------
SHOWFL00  CLEAR     FLAGDESC
          IF        SHOWSUSP=1
            APPEND    "Show Inactive, ",FLAGDESC
          ELSE
            APPEND    "Hide Inactive, ",FLAGDESC
          ENDIF
          IF        SEARCHTY=1
            APPEND    "Alphabetic Search",FLAGDESC
          ELSE
            APPEND    "Key Word Search",FLAGDESC
          ENDIF
          RESET     FLAGDESC
.
          ASSIGN    HBOT,FLAGROW
          MOVELPTR  FLAGDESC,F2
          ADD       "9",F2
          ASSIGN    ((HRIG-HLEF)/2)-(F2/2),FLAGCOL
          MOVELPTR  FLAGDESC,F2
          SFORMAT   DISPVAR,F2
          MOVE      FLAGDESC,DISPVAR
          DISPLAY   *PFLAGCOL:FLAGROW,*V2LON,*ULON," Flags: ",DISPVAR,SP1
          SFORMAT   DISPVAR,127
.
          RETURN
.------------------------------------------------------------
. Check Record
.------------------------------------------------------------
CHKRC000  BRANCH    SEARCHTY,CHKRC100
          MATCH     KEYWRD01,PTDIKWD
          GOTO      CHKRC920 IF NOT EQUAL                                       
          IF        KEYWRDNO>1
            PACK      SAVKEY24,PTDIKWD,PTDIICD
            CALL      MACHWD00
            BRANCH    EXIT,CHKRC910
            MOVE      SAVKEY24,KEY24
            CALL      RDPTDI2
          ENDIF
.
          MOVE      PTDIICD,KEY9
          CALL      RDICD1
          BRANCH    OVRCD,CHKRC910
          GOTO      CHKRC800
.
CHKRC100  MATCH     KEYWRD00,DDESC
          GOTO      CHKRC920 IF NOT EQUAL                                       
.
CHKRC800  MOVE      ZERO,INACTV
          MOVE      INACTV,CHECKSUS
          BRANCH    SHOWSUSP,CHKRC900
          BRANCH    INACTV,CHKRC910
.
CHKRC900  MOVE      ZERO,OVRCD
          GOTO      CHKRC999
CHKRC910  MOVE      ONE,OVRCD
          GOTO      CHKRC999
CHKRC920  MOVE      TWO,OVRCD
CHKRC999  RETURN
.------------------------------------------------------------
. Check for Matching Words
.------------------------------------------------------------
MACHWD00  PACK      SAVKEY9,PTDIICD
          MOVE      ONE,F2
          MOVE      ZERO,EXIT
.
MACHWD10  COMPARE   KEYWRDNO,F2
          GOTO      MACHWD99 IF EQUAL
          ADD       ONE,F2
          LOAD      KEYWRDXX,F2,KEYWRD01,KEYWRD02,KEYWRD03,KEYWRD04,KEYWRD05:
                             KEYWRD06,KEYWRD07,KEYWRD08,KEYWRD09,KEYWRD10
          PACK      KEY24,SAVKEY9,KEYWRDXX
          CALL      RDPTDI1
          COMPARE   ZERO,OVRCD
          GOTO      MACHWD10 IF EQUAL
.
          CALL      RKPTDI1
          BRANCH    OVRCD,MACHWD90
          PACK      KEY9,PTDIICD,SP9
          MATCH     SAVKEY9,KEY9 
          GOTO      MACHWD90 IF NOT EQUAL
.
          STRIP     KEYWRDXX
          MATCH     PTDIKWD,KEYWRDXX
          GOTO      MACHWD90 IF NOT EQUAL
          GOTO      MACHWD10
.
MACHWD90  MOVE      ONE,EXIT
MACHWD99  RETURN
