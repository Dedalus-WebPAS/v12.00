.******************************************************************************
.* System         : Patient Billing                                           *
.* Program        : IBAADT21.PBL                                              *
.* Name           : Fees Estimation Screen                                    *
.******************************************************************************
.* Date           : 28/01/1997                                                *
.* Author         : Elieen Greening                                           *
.* Function       : Key in different parameters, & from these parameters work *
.*                  out the Bed fees, Theatre fees, & Costs per night         *
.* Modifications  :                                                           *
.*        V11.04.02 13/03/2024  J.Tan          TSK 0919335                    *
.*                  Mod checking for HF history (TSRVDATE)                    *
.*        V11.04.01 29/01/2024  Jacob Jackson  TSK 0919335                    *
.*                  Add new local variable and recompile for GETTFEES         *
.*        V11.00.01 04/03/2020  J.Tan          TSK 0838262                    *
.*                  Added Effective from and to date to MBS Item file         *
.*        V10.08.01 13/04/2016 J.Tan           CAR 0313842                    *
.*                  Added a new field PMFDUBAS                                *
.*        V10.05.02 02/10/2014 J.Tan           CAR 253233                     *
.*                  Mods to skip IFC record from pmsfedaf file                *
.*        V10.05.01 12/09/2014 J.Tan           CAR 253233                     *
.*                  Fixed key for reading patsgcaf (KEY18 for RDPTSGC1)       *
.*        V10.04.01 17/06/2014 Steve Armstrong CAR 301639                     *
.*                  Added call to TFILENAM for FNAMPOST (AUTOPCOD) into       *
.*                  INIT0000.                                                 *
.*                  Moved calls to TFILENAM for FNAMET & FNAMEM into INIT0000.*
.*                  Recompiled for changes to AUTOPCOD AND AUPCDVAR.          *
.******************************************************************************
.*        V10.03.04 19/12/2012 Patrick Adair   CAR 261630                     *
.*                  Removed port number from temp file name                   *
.*        V10.03.03 12/12/2012 J.Tan           CAR 274399                     *
.*                  Fixed validating Contract for Accommodations              *
.*        V10.03.02 23/03/2012 J.Tan           CAR 261644                     *
.*                  Fixed printing theatre fees                               *
.*        V10.03.01 24/11/2011  J.Tan            CAR 255151                   *
.*                  Recompiled for GETTFEES - get theatre fees                *
.*        V10.02.01 08/04/2011  J.Tan         CAR 233034                      *
.*                  Fixed generating bed fees                                 *
.******************************************************************************
.*        V10.01.02 17/12/2010  Mike Laming   CAR 233046                      *
.*                  Mods to Misc.Charges PATMCHFD - Key change, logic changes *
.*                  13/01/11 J.Tan    CAR 233048                              *
.*                  Mods theatre fees file to use health fund table type      *
.*        V10.01.01 03/12/10 J.Tan    CAR 233034                              *
.*                  Mods bed fees file to use health fund table type          *
.*        V10.00.02 30/04/2010 J.Tan         CAR 220887                       *
.*                  Mods checking for Active/Inactive of Misc.charge          *
.*        V10.00.01 16/04/2010 J.Tan         CAR 188189                       *
.*                  Added HCP Doctor to pmsfedaf file                         *
.*        V9.12.01  08/09/2009 J.Tan         CAR 205303                       *
.*                  Added Casemix Contract ID                                 *
.*        V9.10.01  15/07/2008 Ebon Clements CAR 160213                       *
.*                  Recompiled for update fee estimate functionality changes  *
.*        V9.09.05  29/11/2007 Peter Vela    CAR 155775                       *
.*                  Added read and validation for "Discharged from" record @  *
.*                  CKCM0000                                                  *
.*                  Fixed validation for 0 cutoff days (PTHLCOFF=0) @ CBDF1000*
.*        V9.09.04  15/10/2007 Peter Vela    CAR 148954                       *
.*                  Recompiled for PMSREGFD                                   *
.*        V9.09.03  10/10/2007 Peter Vela    CAR 148954                       *
.*                  Recompiled for PMSREGFD                                   *
.*        V9.09.02  05/10/2007 J.Tan         CAR 149570                       *
.*                  Fixed Daycase Suggested classification                    *
.*        V9.09.01  19/06/2007 J.Tan         CAR 131867                       *
.*                  Fixed Suggested classfication                             *
.*        V9.08.07  08/05/2007  Mike Laming  CAR 137125 HDP 2007 DRG 5.2      *
.*                  Mods to PATDGWDS - Added PTDWDRGV to PATDGWFD             *
.*        V9.08.06  08/05/2007  Mike Laming  CAR 137125 HDP 2007 DRG 5.2      *
.*                  Mods to PATDGWDS - Added PTDWDRGV to PATDGWFD             *
.*        V9.08.05  15/03/2007 J.Tan         CAR 136149                       *
.*                  Mods to use default claim code from system parameter      *
.*        V9.08.04  23/01/2007 Peter Vela    CAR 128097                       *
.*                  Added functionality for enquiry display misc items        *
.*        V9.08.03  27/11/2006 Peter Vela    CAR 126013                       *
.*                  Recompiled for PMSREGFD PMSREGIO                          *
.*        V9.08.02  18/10/2006 J.Tan         CAR 118861                       *
.*                  Fixed miscellaneous descriptions                          *
.*        V9.08.01  20/09/2006 J.Tan         CAR 119336                       *
.*                  Added claim code to Suggested classification file         *
.*        V9.07.01  11/09/06 J.Tan    CAR 103367                              *
.*                  Added option 4 - Regimes code instead of Theatre code     *
.*        V9.04.03  18/10/05 J.Tan    CAR 52606                               *
.*                  Added 6 Prosthetics/Misc.code fields                      *
.*        V9.04.02  03/08/05 J.Tan    CAR 62750                               *
.*                  Removed redefined amount variables                        *
.*        V9.04.01  10/08/2004  Lina Vo  CAR 51011                            *
.*                  Fixed Bed Fee estimate to use Default Claim Code rather   *
.*                  than zero.                                                *
.******************************************************************************
.*        V9.03.05  03/08/2004  J.Tan    CAR 52039                            *
.*                  Added prosthetic and pharmacy fields                      *
.*        V9.03.04  17/03/2004  Lina vo         CAR 47662                     *
.*                  Replaced AMBS with ITEMNO. PATITMKY uses ITEMNO. Program  *
.*                  was not estimating on entered theatre fees.               *
.*        V9.03.03  20/02/2004  Lina vo         CAR 47662                     *
.*                  Removed Underline (*ULON) from PRINT statements           *
.*        V9.03.02  20/11/2003  Steve Armstrong CAR 44631                     *
.*                  Removed PI command                                        *
.*        V9.03.01  22/05/2003  Dean Cramer    CAR 36506                      *
.*                  Fix where no Health Fund Table access on screen selection *
.*                  if no admission record or no Health Fund details on       *
.*                  admission record.                                         *
.******************************************************************************
.*        V9.02.03  10/02/2003  Lina Vo                                       *
.*                  Remove open of outpreaf - not used.                       *
.*                  Open patmx1af - fix I*C problem.                          *
.*        V9.02.02  24/04/2002  Dean Cramer                                   *
.*                  Changed references to patsurnf to patgsrnf                *
.*        V9.02.01  12/04/2002  Dean Cramer                                   *
.*                  Ported 6.09 to 9.02 plus necessary changes                *
.*        V6.09.B03 09/02/2001  Jill Habasque                                 *
.*                  Fixed version                                             *
.*        V6.09.B02 10/01/2001  Jill Habasque                                 *
.*                  Casemix mods                                              *
.*        V6.09.B01 23/11/2000  Caleb Sharman                                 *
.*                  Recompiled for PATCMXFD                                   *
.*        V6.07.04  12/10/.2000 Ebon Clements SRF 4992                        *
.*                  Mods to include GST                                       *
.*        V6.07.03  08/08/2000  J.Tan  SRF 4922                               *
.*                  Mods to include GST                                       *
.*        V6.07.02  21/07/2000  Tonii  srf 4302                               *
.*                  Recompiled for PATCMXKY - fixed display of Casemix field  *
.*        V6.07.01  20/07/2000  Caleb Sharman  SRF 2714                       *
.*                  Recompiled for PATCMXKY                                   *
.*        V6.07.B01 03/04/2000  J.Tan                                         *
.*                  Recompiled for GST                                        *
.*        V6.06.06  07/01/2000  Tonii Tang  SRF636861                         *
.*                  Recompiled for changes to PATSRCH                         *
.*        V6.06.05  15/12/1999  Greg Horvat                                   *
.*                  Recompiled for PATCMXKY - Changed the DRG code to be left *
.*                  justified                                                 *
.*        V6.06.04  22/06/1999  Jill Habasque                                 *
.*                  Recompiled for PATITMDS                                   *
.*        V6.06.03  16/04/1999  Steve Armstrong                               *
.*                  Recompiled for PATFNDKY/PATTBLKY/PATIOFND                 *
.*        V6.06.02  30/03/1999  Jill Habasque                                 *
.*                  Recompiled for changes to PATTBLKY                        *
.*        V6.06.01  10/02/1999  Jill Habasque                                 *
.*                  Fixed DISPHEAD display                                    *
.*        V6.05.04  08/12/1998 J Habasque                                     *
.*                  Removed CCENTRY                                           *
.*        V6.05.03  29/10/98 J.Tan                                            *
.*                  Fixed to recalculate theatre fee after change mode        *
.*        V6.05.02  17/08/98 J.Tan                                            *
.*                  Mods to keyin century                                     *
.*        V6.05.01  17/07/98 J.Tan    SRF 626807                              *
.*                  Fixed calculating theatre fees                            *
.*        V6.05.B01 11/06/1998  Steve Armstrong                               *
.*                  Recompiled for change in DRG from 3 to 4 chars.           *
.******************************************************************************
.*        V6.04.08  13/05/1998  Davin  SRF 622750 (Rebound)                   *
.*                  Changes to PATITMKY                                       *
.*                  Mods to default admission type from patsgcaf / patitemn   *
.*        V6.04.07  22/04/98 J.Tan  SRF 622750                                *
.*                  Recompiled PATITMKY - Fixed ? option on theatre fee for   *
.*                  exclusion list item                                       *
.*        V6.04.06  21/01/98 J.Tan  SRF 622750                                *
.*                  Mods to default to admission type                         *
.*        V6.04.05  18/01/98 J.Tan  SRF 62022                                 *
.*                  Add parameter to check for a prosth.when validating item  *
.*        V6.04.04  15/01/98 J.Tan   SRF 623284                               *
.*                  Fixed printing time                                       *
.*        V6.04.03  29/09/97 J.Tan    SRF 621229                              *
.*                  Mods to display item from highest band                    *
.*        V6.04.02  25/09/97 J.Tan    SRF 621524                              *
.*                  Fixed printing fund gap and hospital fees                 *
.*        V6.04.01  15/04/97 J.Tan                                            *
.*                  Recompiled for PATCMXKY - keyin casemix code              *
.*                                                                            *
.******************************************************************************
+
          INC       STD001FD
          INC       STDKWSDF
          INC       STDHLPDF
          INC       WEBDATDF
          INC       AUPCDVAR/INC            * Auto postcode variables
          INC       PATCOMM/INC             * Data variables for PATCOMN1
          INC       PATCMXVR/INC            * Data variables for PATCMXKY
.
          INC       PATFX1FD/INC
          INC       PATCFAFD/INC
          INC       BOKRC1FD/INC            * Booking file
          INC       NZHISIFD/INC
          INC       OUTPREFD/INC            * Outpatients pre attendence file
          INC       PATAFEFD/INC            * Additional charge overnight file
          INC       PATASDFD/INC            * Additional charge daycase file
          INC       PATBFEFD/INC            * Bed fee file
          INC       PATCMCFD/INC
          INC       PATCMXFD/INC            * Casemix funding file
          INC       PMSCIDFD/INC            * Contract ID file
          INC       PATCONFD/INC            * Control file
          INC       PATCODFD/INC            * Codes file
          INC       PATCTFFD/INC            * DRG/MBS theatre fee file
          INC       PATDGWFD/INC            * DRG file
          INC       PATDDHFD/INC            * HF History file
          INC       PMSFEDFD/INC            
          INC       PMSFENFD/INC            
          INC       PMSFESFD/INC            
          INC       PATHSPFD/INC            * Hospital file
          INC       PATFN1FD/INC            * Health fund file
          INC       PATHDFFD/INC            * Daily fee inlier file
          INC       PATHLFFD/INC            * Lumpsum overnight file
          INC       PATITMFD/INC            * Item file
          INC       PATMCHFD/INC            * Misc.Charge file
          INC       PATLDFFD/INC            * Daily fee outlier file
          INC       PATLSDFD/INC            * Lumpsum daycase file
          INC       PATMA1FD/INC            * Master file
          INC       HL7BMTFD/INC
          INC       PATMI1FD/INC            * Admission file
          INC       PATPR1FD/INC            * Pre admission file
          INC       PATSGCFD/INC            * Suggested classif. exceptions
          INC       PATGSRFD/INC            * Surname file
          INC       PATTFEFD/INC            * Theatre fee file
          INC       PATVISFD/INC            * Visit file
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC            * Visit Extention file
          INC       PMSREGFD/INC            * Regime codes file
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
          INC       PATGTUFD/INC
          INC       PATCALAG/INC
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
. ----- Program Variables -----
.
ADMDATE   DIM       8                       * Admission date (ccyymmdd)
ADMTYPE   DIM       3                       * Admission type
ADMDESC   DIM       20                      * Admission type description
ACQGST    DIM       1                       * GST on accomodation (Y/N)
ACCGDS    DIM       3                       * GST on accomodation description
.
BEDTYPE   DIM       3                       * Bed type
BEDDESC   DIM       20                      * Bed type description
BJDAY     FORM      3
.
CONTRCID  DIM       6
CJDAY     FORM      3
CALLPOSN  FORM      1
CLMTYPE   DIM       3                       * Claim type
CLMDESC   DIM       20                      * Claim type description
CURRDATE  DIM       8
CMXFLAG   FORM      1                       * Casemix flag
CODE      DIM       3
COL       FORM      2                       * Column position
COUNT     FORM      2                       * Column position
CMDLINE   DIM       50
CNTRCEFR  FORM      1
CEFFDATE  DIM       8
.
DCFLAG    FORM      1
DCASEFLG  DIM       1                       * Daycase flag
DCOL      FORM      2                       * Description column position
DIM5      DIM       5
DIM8      DIM       8
DIM18     DIM       18
DIM18A    DIM       18
DDATE     DIM       8
DRGVERZ   DIM       3                                                 *I-137125
DV1       DIM       1                                                 *I-137125
DV2       DIM       1                                                 *I-137125
.
ERRFLAG   FORM      1
EPSTYPE   DIM       2                       * Episode type
FNAMET    DIM       8
FNAMEM    DIM       8
FORM3     FORM      3  
FORM4B    FORM      4  
FORM5     FORM      5
FORM52    FORM      5.2
FORM82    FORM      8.2
FREEFLAG  FORM      1
FRSTGNAM  DIM       40
FULLGNAM  DIM       80
FUNDGAP   FORM      5.2
FORM12P2  FORM      12.2
.
HFCODE    DIM       6                       * Health fund
HFDESC    DIM       30                      * Health fund description
HFTCODE   DIM       8                       * Health fund table
HFTDESC   DIM       30                      * Health fund table description
HFHIFUND  FORM      2
.
IBCNUGST  FORM      1                       * Using GST ?
IBCNMHOS  FORM       1
.
KEY13A    DIM       13
KEY18A    DIM       18
KEY23A    DIM       23
KEY21A    DIM       21
KEY26A    DIM       26
KEYATYP   DIM       3
.
MBSCONTR  DIM       6
MODE      DIM       1                       * Mode flag
NMPNUMB   DIM       20
NONIGHTS  FORM      4                       * No of nights stay
.
OVRGAP    FORM      10.2                    * Overnight fund total
OVRFUNDT  FORM      10.2                    * Overnight fund total
OVRHOSPT  FORM      10.2                    * Overnight hospital total
OVRTOTAL  FORM      10.2                    * Overnight total
OVRGST    FORM      10.2                    * Overnight total - gst
OVRTOTGS  FORM      10.2                    * Overnight total
QUOTENQ   DIM       12
FQUOTENQ  FORM      12
PRTFLAG   FORM      1
PSAGECON  DIM       3
PSAGETYP  DIM       1
PROSTHET  FORM      5.2
PHARMACY  FORM      5.2
.
RANGE     FORM      1
RECNUM    FORM      1
RECGSTA   FORM      1                       * GST applicable on record
RECGSTC   DIM       6                       * GST code on record 
SAVCOL    FORM      2
SAVKEY13  DIM       13
SKEY18    DIM       18
SAVEITMN  DIM       10
SAVVERT   FORM      2
SCNDGNAM  DIM       40
.
TSRVDATE  DIM       8
TRNSDATE  DIM       8
WRKAGST   FORM      10.2                    * Work total GST
WRKTGST   FORM      10.2                    * Theatre gst    
WRKOGST   FORM      10.2                    * Overnight GST  
WRKTOTAL  FORM      10.2                    * Work total
WRKTOTGS  FORM      10.2                    * Work total
.
TABTYPE   DIM       3                       * Table type
TEMPITEM  DIM       9                       * Item number
THTOTAL   FORM      5.2
THFUND    FORM      5.2
THT1CODE  DIM       9                       * Theatre fee code 1
THT2CODE  DIM       9                       * Theatre fee code 2
THT3CODE  DIM       9                       * Theatre fee code 3
THT4CODE  DIM       9                       * Theatre fee code 4
THT5CODE  DIM       9                       * Theatre fee code 5
THT6CODE  DIM       9                       * Theatre fee code 6
.
THT1GSTA  FORM      1                       * Theatre fee 1 GST applicable
THT2GSTA  FORM      1                       * Theatre fee 2 GST applicable
THT3GSTA  FORM      1                       * Theatre fee 3 GST applicable
THT4GSTA  FORM      1                       * Theatre fee 4 GST applicable
THT5GSTA  FORM      1                       * Theatre fee 5 GST applicable
THT6GSTA  FORM      1                       * Theatre fee 6 GST applicable
.
THT1GSTC  DIM       6                       * Theatre fee 1 GST payable code
THT2GSTC  DIM       6                       * Theatre fee 2 GST payable code
THT3GSTC  DIM       6                       * Theatre fee 3 GST payable code
THT4GSTC  DIM       6                       * Theatre fee 4 GST payable code
THT5GSTC  DIM       6                       * Theatre fee 5 GST payable code
THT6GSTC  DIM       6                       * Theatre fee 6 GST payable code
.
THTFUNDT  FORM      10.2                    * Theatre fee fund total
THTHOSPT  FORM      10.2                    * Theatre fee hospital total
THTTOTAL  FORM      10.2                    * Theatre fee total
MCHFUNDT  FORM      10.2                    * Theatre fee fund total
MCHHOSPT  FORM      10.2                    * Theatre fee hospital total
MCHTOTAL  FORM      10.2                    * Theatre fee total
.
REG1CODE  DIM       10                      * Regime Charge code 1
REG2CODE  DIM       10                      * Regime Charge code 2
REG3CODE  DIM       10                      * Regime Charge code 3
REG4CODE  DIM       10                      * Regime Charge code 4
REG5CODE  DIM       10                      * Regime Charge code 5
REG6CODE  DIM       10                      * Regime Charge code 6
.
REG1HCHR  FORM      10.2
REG2HCHR  FORM      10.2
REG3HCHR  FORM      10.2
REG4HCHR  FORM      10.2
REG5HCHR  FORM      10.2
REG6HCHR  FORM      10.2
.
REG1PCHR  FORM      10.2
REG2PCHR  FORM      10.2
REG3PCHR  FORM      10.2
REG4PCHR  FORM      10.2
REG5PCHR  FORM      10.2
REG6PCHR  FORM      10.2
.
MIS1CODE  DIM       9                       * Misc.Charge code 1
MIS2CODE  DIM       9                       * Misc.Charge code 2
MIS3CODE  DIM       9                       * Misc.Charge code 3
MIS4CODE  DIM       9                       * Misc.Charge code 4
MIS5CODE  DIM       9                       * Misc.Charge code 5
MIS6CODE  DIM       9                       * Misc.Charge code 6
.
MIS1PCHR  FORM      10.2                    * Misc.Charge fee 1 (patient portion
MIS2PCHR  FORM      10.2                    * Misc.Charge fee 2
MIS3PCHR  FORM      10.2                    * Misc.Charge fee 3
MIS4PCHR  FORM      10.2                    * Misc.Charge fee 4
MIS5PCHR  FORM      10.2                    * Misc.Charge fee 5
MIS6PCHR  FORM      10.2                    * Misc.Charge fee 6
.
MIS1HCHR  FORM      10.2                    * Misc.Charge fee 1 (hf portion)
MIS2HCHR  FORM      10.2                    * Misc.Charge fee 2
MIS3HCHR  FORM      10.2                    * Misc.Charge fee 3
MIS4HCHR  FORM      10.2                    * Misc.Charge fee 4
MIS5HCHR  FORM      10.2                    * Misc.Charge fee 5
MIS6HCHR  FORM      10.2                    * Misc.Charge fee 6
MIS1GSTA  FORM      1                       * Misc.Charge 1 GST applicable
MIS2GSTA  FORM      1                       * Misc.Charge 2 GST applicable
MIS3GSTA  FORM      1                       * Misc.Charge 3 GST applicable
MIS4GSTA  FORM      1                       * Misc.Charge 4 GST applicable
MIS5GSTA  FORM      1                       * Misc.Charge 5 GST applicable
MIS6GSTA  FORM      1                       * Misc.Charge 6 GST applicable
.
MIS1GSTC  DIM       6                       * Misc.Charge 1 GST payable code
MIS2GSTC  DIM       6                       * Misc.Charge 2 GST payable code
MIS3GSTC  DIM       6                       * Misc.Charge 3 GST payable code
MIS4GSTC  DIM       6                       * Misc.Charge 4 GST payable code
MIS5GSTC  DIM       6                       * Misc.Charge 5 GST payable code
MIS6GSTC  DIM       6                       * Misc.Charge 6 GST payable code
.
THCFLG    FORM      2
UNIQ      FORM      5
.
MCFILE    IFILE     SQL, FIXED=14, KEY="u1-9"
XCHARGE   DIM       9        9        1
XMCCNT    FORM      5        4        10
.EOF                                  14
.
TTFILE    IFILE     SQL, FIXED=126, KEY="u1-18"
DXAMT     DIM      11      11      1
DXMBS     DIM       5       5     12
DUNIQ     DIM       1       1     17
XTHEA     DIM       9       9     18
XBAND     DIM       3       3     27
.TFPAT1   FORM   12.2       8     30
.TFPAT2   FORM   12.2       8     38
.TFPAT3   FORM   12.2       8     46
.TFPAT4   FORM   12.2       8     54
.TFPAT5   FORM   12.2       8     62
.TFPAT6   FORM   12.2       8     70
.TFHF1    FORM   12.2       8     78
.TFHF2    FORM   12.2       8     86
.TFHF3    FORM   12.2       8     94
.TFHF4    FORM   12.2       8    102
.TFHF5    FORM   12.2       8    110
.TFHF6    FORM   12.2       8    118
.EOR                             126
.
XMBS      FORM    4
XAMT      FORM    8.2
.
. ----- Program Constants -----
.
SP12      INIT      "            "
SP14      INIT      "              "
SP100     INIT      "                                                  ":
                    "                                                  "
ZERO8     INIT      "0000    "
.
PRGID     INIT      "IBAADT21"
PRGNAM    INIT      "Fees Estimation Screen"
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                                 Main Module                                *
.******************************************************************************
ML0000    CALL      INIT0000                * Initialise variables & open files
ML1000    CALL      OPTN0000                * Choose main option
          BRANCH    OPTION,ML2000,ML3000,ML3500,ML2000,ML3000
          BRANCH    EXIT,ML9000
.
ML2000    CALL      KYUR0000                * Keyin the U/R no
          BRANCH    EXIT,ML1000
          GOTO      ML4000
.
ML3000    CALL      KYFR0000                * Keyin the free format details
          BRANCH    EXIT,ML1000
          GOTO      ML4000
.
ML3500    CALL      ENOP0000                * display enquiry options
          BRANCH    EXIT,ML1000
.
ML3600    CALL      PENQ0000                * Process enquiry
          BRANCH    EXIT,ML1000             * No selection made
          GOTO      ML7000
.
ML3700             
          GOTO      ML7000
.
ML4000    CALL      KYDT0000                * Keyin details
          BRANCH    EXIT,ML1000
.
          CALL      WRDT0000                * write detail record to pmsfedaf
ML4500    CALL      HEAD0000                * Print header
.
          BRANCH    CMXFLAG,ML5000          * Casemix patient
.
. ----- Non casemix patient -----
.
          CALL      NBDF0000                * Print non casemix bed fees
.
          IF        OPTION=4 | OPTION=5
            CALL      PREG0000                * Print Regime code
          ENDIF
.
          CALL      PNCT0000                * Print non casemix theatre fees
          CALL      PMSC0000                * Print misc.charge 
          CALL      NOVR0000                * Print non casemix overnight costs
          GOTO      ML6000
.
. ----- Casemix patient -----
.
ML5000    CALL      CBDF0000                * Print casemix bed fees
          CALL      PCTF0000                * Print casemix theatre fees
          CALL      PMSC0000                * Print casemix misc.charge 
          CALL      COVR0000                * Print casemix overnight costs

ML6000    CALL      TAIL0000                * Print tail
          GOTO      ML1000
.
ML7000    IF        PRTFLAG<>1
            GOTO      ML1000
          ENDIF
.
          CALL      HEAD0000
          CALL      PBFE0000
          CALL      PTFE0000
          CALL      PTME0000
          CALL      POVR0000
          CALL      TAIL0000
.
ML9000    CALL      KILL0000                * Delete tempfile
          CALL      KILM0000                * Delete tempfile
ML9999    CHAIN     PGM
+
.******************************************************************************
.*                                  INIT0000              Called by: ML0000   *
.*                       Initialise Variable & Open Files                     *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          DISPLAY   *P56:24,"Opening controlf"
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS:
                                  *85,IBCNUGST
          READ      CONTROLF,TWENTY;*193,PTCNDCLM
          READ      CONTROLF,NINTY8;*130,PTCNAGST
          READ      CONTROLF,SEVENTY9;*115,PTCNDGUP,PTCNDGUA,PTCNDGMU:
                                           PTCNDGUU:
                                      *239,PTCNDGAD,PTCNDGDS,PTCNDGTR:
                                           PTCNDGRG
          READ      CONTROLF,HUND05;*190,PTSGCOPT:    * Using suggested class.
                                    *130,PTCNAUAT
.
          MATCH     SP3,PTCNDCLM      * Default Claim code
          IF        @EQUAL
            MOVE      "0  ",PTCNDCLM
          ENDIF
.
          DISPLAY   *P64:24,"patafeaf";
          OPEN      PATAFEA1,"patafeaf"
.
          DISPLAY   *P64:24,"patasdaf";
          OPEN      PATASDA1,"patasdaf"
.
          DISPLAY   *P64:24,"patbfeef";
          OPEN      PATBFEE1,"patbfeef"
.
          DISPLAY   *P64:24,"patcmcaf";
          OPEN      PATCMCA1,"patcmcaf"
.
          DISPLAY   *P64:24,"patcmxaf";
          OPEN      PATCMXA1,"patcmxaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patctfaf";
          OPEN      PATCTFA1,"patctfaf"
          OPEN      PATCTFA2,"patctfaf"
.
          DISPLAY   *P64:24,"patdgwaf";
          OPEN      PATDGWA1,"patdgwaf"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"pathdfaf";
          OPEN      PATHDFA1,"pathdfaf"
.
          DISPLAY   *P64:24,"pathlfaf";
          OPEN      PATHLFA1,"pathlfaf"
.
          DISPLAY   *P64:24,"patitemn";
          OPEN      PATITEM1,"patitemn"
.
          DISPLAY   *P64:24,"patmchgf";
          OPEN      PATMCHG1,"patmchgf"
.
          DISPLAY   *P64:24,"patldfaf";
          OPEN      PATLDFA1,"patldfaf"
.
          DISPLAY   *P64:24,"patlsdaf";
          OPEN      PATLSDA1,"patlsdaf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patpr1af";
          OPEN      PATPR1A1,"patpr1af"
.
          DISPLAY   *P64:24,"patpx1af";
          OPEN      PATPX1A1,"patpx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patgsrnf";
          OPEN      PATGSRN1,"patgsrnf"
          OPEN      PATGSRN2,"patgsrnf"
          OPEN      PATGSRN3,"patgsrnf"
.
          DISPLAY   *P64:24,"pattfeef";
          OPEN      PATTFEE1,"pattfeef"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA2,"patvisaf"
.
          DISPLAY   *P64:24,"pmsfedaf";
          OPEN      PMSFEDA1,"pmsfedaf"
.
          DISPLAY   *P64:24,"pmsfedaf";
          OPEN      PMSFEDA2,"pmsfedaf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"pmsfesaf";
          OPEN      PMSFESA1,"pmsfesaf"
.
          DISPLAY   *P64:24,"pmsfenaf";
          OPEN      PMSFENA1,"pmsfenaf"
          OPEN      PMSFENA2,"pmsfenaf"
.
          DISPLAY   *P64:24,"patsgcaf";
          OPEN      PATSGCA1,"patsgcaf"
.
          DISPLAY   *P64:24,"pmsregaf";
          OPEN      PMSREGA1,"pmsregaf"
.
          READ      CONTROLF,HUND09;PTCNQUM1,PTCNQUM2
          MOVE      "26",COL
          MOVE      "36",DCOL
          MOVE      ONE,CNEWDS
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMET
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEM
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMPOST
.
INIT9000  MOVE      ZERO,EXIT
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: ML0000   *
.*                                Select Option                               *
.******************************************************************************
OPTN0000  MOVE      ZERO,EXIT
          MOVE      ZERO,OPTION
          CALL      DISPHEAD
          MOVE      ZERO,FREEFLAG
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = By U/R Number":
                    *P1:6,*V2LON,"2",*HOFF," = By Free Format Name":
                    *P1:7,*V2LON,"3",*HOFF," = Enquiry":
                    *P1:8,*V2LON,"4",*HOFF," = By U/R Number (Regime)":
                    *P1:9,*V2LON,"5",*HOFF," = By Free Format (Regime)":
                    *P1:10,"Select Option : ";
OPTN1000  KEYIN     *P17:10,*V2LON,*DV,UNDLN2,*P17:10,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          COMPARE   TWO,OPTION
          IF        @EQUAL
            MOVE      ONE,FREEFLAG
          ENDIF
          BRANCH    OPTION,OPTN2000,OPTN3000,OPTN4000,OPTN5000,OPTN6000
.
          BEEP
          GOTO      OPTN1000
.
OPTN2000  DISPLAY   *P51:2,*V2LON,*+," - By U/R Number";
          GOTO      OPTN9000
.
OPTN3000  DISPLAY   *P51:2,*V2LON,*+," - By Free Format Name";
          GOTO      OPTN9000
.
OPTN4000  DISPLAY   *P51:2,*V2LON,*+," - Enquiry";
          GOTO      OPTN9000
.
OPTN5000  DISPLAY   *P51:2,*V2LON,*+," - By U/R Number (Regime)";
          GOTO      OPTN9000
.
OPTN6000  DISPLAY   *P51:2,*V2LON,*+," - By Free Format Name(Regime)";
          GOTO      OPTN9000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
OPTN9999  RETURN
+
.******************************************************************************
.*                                  KYUR0000              Called by: ML0000   *
.*                              Keyin The U/R No                              *
.******************************************************************************
KYUR0000  DISPLAY   *P1:3,*EF,*P1:4,"U/R Number : "
          MOVE      "4",CVERT
          MOVE      "14",CCOL
          CALL      KURN                    * Keyin the U/R number
          BRANCH    EXIT,KYUR9500
          BRANCH    OVRCD,KYUR1000
.
          CALL      CLPATMIS                * Clear admission file variables
          MOVE      PURNO,PVIURNO
          PACK      KEY24,PVIURNO,Z70
          CALL      RDSVISA2                * Position on & read last visit
KYUR2000  CALL      RDPVISA2
          BRANCH    OVRCD,KYUR9000
.
          MATCH     PURNO,PVIURNO
          GOTO      KYUR9000 IF NOT EQUAL   * Different U/R no
.
          COMPARE   THREE,PVITYPE
          GOTO      KYUR2000 IF NOT EQUAL   * Not an inpatient visit type
.
          MOVE      PVIBILL,AADMNO
          PACK      KEY8,AADMNO
          CALL      RDMISS1                 * Read the admission file
          BRANCH    OVRCD,KYUR2000
.
          GOTO      KYUR9000
.
KYUR1000  DISPLAY   *P1:24,*EL,*B,"U/R Number does not exist.  ";
          CALL      HITENTER
          GOTO      KYUR0000
.
KYUR9000  MOVE      ZERO,EXIT
          GOTO      KYUR9999
.
KYUR9500  MOVE      ONE,EXIT
KYUR9999  RETURN
+
.******************************************************************************
.*                                  KSUR0000                                  *
.*                              Keyin surname and given name for enquiry      *
.******************************************************************************
KSUR0000  DISPLAY   *P1:4,*EF,*P1:4,"Surn.: ",*P29:4,"Given: "
          KEYIN     *P8:4,*V2LON,SRCHSUR
          PACK      SRCHSUR,SRCHSUR,SP30
.
          MATCH     SP20,SRCHSUR
          GOTO      KSUR9500 IF EQUAL
. 
          KEYIN     *P36:4,*V2LON,SRCHGIV,*HOFF
          PACK      SRCHGIV,SRCHGIV,SP30 
.
          MATCH     SP25,SRCHGIV
          GOTO      KSUR9000 IF NOT EQUAL
.
KSUR8000  MOVE      ZERO,EXIT
          STRIP     SRCHSUR
          GOTO      KSUR9999
.
KSUR9000  MOVE      ZERO,EXIT
          STRIP     SRCHSUR
          STRIP     SRCHGIV
          GOTO      KSUR9999
.
KSUR9500  MOVE      ONE,EXIT
.
KSUR9999  RETURN
+
.******************************************************************************
.*                                  KYFR0000              Called by: ML0000   *
.*                        Keyin The Free Format Details                       *
.******************************************************************************
KYFR0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 1.",*HOFF," Title   : ":
                    *P1:5,*V2LON," 2.",*HOFF," Given   : ":
                    *P1:6,*V2LON," 3.",*HOFF," Surname : ":
                    *P1:7,*V2LON," 4.",*HOFF," Address : ":
                    *P1:8,*V2LON," 5.",*HOFF,"         : ":
                    *P1:9,*V2LON," 6.",*HOFF,"         : ":
                    *P32:9,*V2LON," 7.",*HOFF," : ";
.
          CALL      CLPATMAS                * Clear master file variables
          CALL      CLPATMIS                * Clear admission file variables
          MOVE      ANSI,MODE               * Insert mode
.
KYFR1000  KEYIN     *P15:4,*V2LON,*RV,PTITL;
.
          ENDSET    PTITL
          APPEND    SP30,PTITL
          RESET     PTITL
.
          MOVE      PTITL,PMFNTITL
          MATCH     ANSC,MODE
          GOTO      KYFR8000 IF EQUAL       * Change mode
.
KYFR2000  KEYIN     *P15:5,*V2LON,*RV,PGNAME;
.
          ENDSET    PGNAME
          APPEND    SP30,PGNAME
          RESET     PGNAME
.
          MOVE      PGNAME,PMFNGNAM
          MATCH     ANSC,MODE
          GOTO      KYFR8000 IF EQUAL       * Change mode
.
KYFR3000  KEYIN     *P15:6,*V2LON,*RV,PSNAME;
.
          ENDSET    PSNAME
          APPEND    SP30,PSNAME
          RESET     PSNAME
.
          MOVE      PSNAME,PMFNSNAM
          MATCH     ANSC,MODE
          GOTO      KYFR8000 IF EQUAL       * Change mode
.
KYFR4000  KEYIN     *P15:7,*V2LON,*RV,PADD1;
.
          ENDSET    PADD1
          APPEND    SP30,PADD1
          RESET     PADD1
.
          MOVE      PADD1,PMFNADD1
          MATCH     ANSC,MODE
          GOTO      KYFR8000 IF EQUAL       * Change mode
.
KYFR5000  KEYIN     *P15:8,*V2LON,*RV,PADD2;
.
          ENDSET    PADD2
          APPEND    SP30,PADD2
          RESET     PADD2
.
          MATCH     "IBARSH",PGM            * skip call AUTOPCOD
          GOTO      KYFR5100 IF EQUAL
.
          MOVE      PADD2,PMFNADD2
          MOVE      TWO,SUBKYLIN            * 2nd address line keyin
          PACK      IBAADLN2,PADD2,SP30,SP30
          PACK      IBAADLN3,PSUBRB,SP30,SP30
          PROC      AUTOPCOD                * Auto generation of the postcode
          BRANCH    EXIT,KYFR5000,KYFR5100
.
          MOVE      IBAPCOD,PPOST
          DISPLAY   *P38:9,*V2LON,PPOST;
          MOVE      PPOST,PMFNPOST
.
KYFR5100  MATCH     ANSC,MODE
          GOTO      KYFR8000 IF EQUAL       * Change mode
.
KYFR6000  KEYIN     *P15:9,*V2LON,*RV,PSUBRB;
.
          MATCH     "IBARSH",PGM            * skip call AUTOPCOD
          GOTO      KYFR6100 IF EQUAL
.
          MOVE      PSUBRB,PMFNSUBR
          MOVE      THREE,SUBKYLIN          * 3rd address line keyin
          PACK      IBAADLN2,PADD2,SP30,SP30
          PACK      IBAADLN3,PSUBRB,SP30,SP30
          PROC      AUTOPCOD                * Auto generation of the postcode
          BRANCH    EXIT,KYFR6000,KYFR6100
.
          MOVE      IBAPCOD,PPOST
          DISPLAY   *P38:9,*V2LON,PPOST;
          MOVE      PPOST,PMFNPOST
.
KYFR6100  ENDSET    PSUBRB
          APPEND    SP30,PSUBRB
          RESET     PSUBRB
.
          MATCH     ANSC,MODE
          GOTO      KYFR8000 IF EQUAL       * Change mode
.
KYFR7000  KEYIN     *P38:9,*V2LON,*RV,PPOST;
.
          MOVE      PPOST,PMFNPOST
          ENDSET    PPOST
          APPEND    SP30,PPOST
          RESET     PPOST
.
KYFR8000  MOVE      ANSC,MODE               * Change mode
          CALL      MAINQST                 * Select Item, (P)ost, (C)ancel ?
          COMPARE   ZERO,CCITEM
          GOTO      KYFR9000 IF EQUAL       * Post
          GOTO      KYFR9500 IF LESS        * Cancel
.
          BRANCH    CCITEM,KYFR1000,KYFR2000,KYFR3000,KYFR4000,KYFR5000:
                           KYFR6000,KYFR7000
          GOTO      KYFR8000
.
KYFR9000  MOVE      ZERO,EXIT
          MOVE      " 95",PRXCODE                * set sector for locking
          CALL      GETSLK00                     * lock sector
          READ      CONTROLF,NINTY5;*153,PTCNQUOT
          ADD       ONE,PTCNQUOT
          WRITAB    CONTROLF,NINTY5;*153,PTCNQUOT
          CALL      RELSLK00                     * release lock
.
          SUB       ONE,PTCNQUOT          * get quote number
          MOVE      ZERO,PURNO
          MOVE      PTCNQUOT,PMFNQUOT
          PACK      KEY12,PTCNQUOT
          CALL      RAPMFEN1
          IF        OVRCD=0
            CALL      UPPMFEN1
          ELSE
            CALL      WRPMFEN1
          ENDIF
          GOTO      KYFR9999
.
KYFR9500  MOVE      ONE,EXIT
KYFR9999  RETURN
+
.******************************************************************************
.*                                  DBCK0000              Called by: ML0000   *
.*                        Display The Background Screen                       *
.******************************************************************************
DBCK0000 
.
.         DISPLAY   *P1:3,*EF:
.                   *P1:4,"Estimate For : ";
.         IF        OPTION=1
.           DISPLAY   *P63:4,"U/R No : ",*V2LON,PURNO;
.         ENDIF
.
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME                 * Format the patient name
          MOVE      PACFNAME,KEY45
          MOVE      PACFNAME,KEY30
.         DISPLAY   *P16:4,*V2LON,KEY45:
.                   *P16:5,PADD1,*P16:6,PADD2,*P16:7,PSUBRB,*P33:7,PPOST:
.
          DISPLAY   *P2:2,*V2LON,"Fees Estimation for - U/R No ",PURNO:
                     " - ",KEY30;
.
          DISPLAY   *P1:3,*V2LON," 1.",*HOFF," No of Nights Stay  :":
                    *P1:4,*V2LON," 2.",*HOFF," Admission Date     :":
                    *P1:5,*V2LON," 3.",*HOFF," Claim Type         :":
                    *P1:6,*V2LON," 4.",*HOFF," Health Fund        :":
                    *P1:7,*V2LON," 5.",*HOFF," Health Fund Table  :";
.
          IF        OPTION=4 |OPTION=5
            DISPLAY   *P1:8,*V2LON," 6.",*HOFF," Regime Code 1 :":
                      *P1:9,*V2LON," 7.",*HOFF," Regime Code 2 :":
                      *P1:10,*V2LON," 8.",*HOFF," Regime Code 3 :":
                      *P1:11,*V2LON," 9.",*HOFF," Regime Code 4 :":
                      *P1:12,*V2LON,"10.",*HOFF," Regime Code 5 :":
                      *P1:13,*V2LON,"11.",*HOFF," Regime Code 6 :";
          ELSE
            DISPLAY   *P1:8,*V2LON," 6.",*HOFF," Theatre Fee Code 1 :":
                      *P1:9,*V2LON," 7.",*HOFF," Theatre Fee Code 2 :":
                      *P1:10,*V2LON," 8.",*HOFF," Theatre Fee Code 3 :":
                      *P1:11,*V2LON," 9.",*HOFF," Theatre Fee Code 4 :":
                      *P1:12,*V2LON,"10.",*HOFF," Theatre Fee Code 5 :":
                      *P1:13,*V2LON,"11.",*HOFF," Theatre Fee Code 6 :";
          ENDIF
.
          DISPLAY   *P1:14,*V2LON,"12.",*HOFF," Misc.Charge Code 1 :":
                    *P1:15,*V2LON,"13.",*HOFF," Misc.Charge Code 2 :":
                    *P1:16,*V2LON,"14.",*HOFF," Misc.Charge Code 3 :":
                    *P1:17,*V2LON,"15.",*HOFF," Misc.Charge Code 4 :":
                    *P1:18,*V2LON,"16.",*HOFF," Misc.Charge Code 5 :":
                    *P1:19,*V2LON,"17.",*HOFF," Misc.Charge Code 6 :":
                    *P1:20,*V2LON,"18.",*HOFF," Casemix Code       :":
                    *P1:21,*V2LON,"19.",*HOFF," Prosthetic         :":
                    *P1:22,*V2LON,"20.",*HOFF," Pharmacy           :":
                    *P1:23,*V2LON,"21.",*HOFF," Bed Type           :":
                    *P50:22,*V2LON,"22.",*HOFF,"Adm.Type:":
                    *P50:23,*V2LON,"23.",*HOFF,"Accom.GST:"
.
DBCK9000  MOVE      ZERO,EXIT
DBCK9999  RETURN
+
.******************************************************************************
.*                                  CLER0000              Called by: ML0000   *
.*                               Clear Varibales                              *
.******************************************************************************
CLER0000  MOVE      ZERO,NONIGHTS
          PACK      ADMDATE,CCC,CYY,CMM,CDD
          REP       " 0",ADMDATE
          MOVE      AFUNDH,HFCODE
          MOVE      AFNDTB,HFTCODE
          MOVE      SP3,TABTYPE
          MOVE      SP9,TEMPITEM
          MOVE      AMBS,THT1CODE
          UNPACK    SP100,THT2CODE,THT3CODE,THT4CODE,THT5CODE,THT6CODE:
                          ADMTYPE,CLMTYPE,BEDTYPE,CMXCODE
          UNPACK    SP100,MIS2CODE,MIS3CODE,MIS4CODE,MIS5CODE,MIS6CODE
          MOVE      ZERO,DCFLAG
          UNPACK    SP100,HFDESC,HFTDESC
          UNPACK    SP100,ADMDESC,CLMDESC,BEDDESC,CMXDESC
          MOVE      ZERO,MIS1PCHR
          MOVE      ZERO,MIS2PCHR
          MOVE      ZERO,MIS3PCHR
          MOVE      ZERO,MIS4PCHR
          MOVE      ZERO,MIS5PCHR
          MOVE      ZERO,MIS6PCHR
          MOVE      ZERO,MIS1HCHR
          MOVE      ZERO,MIS2HCHR
          MOVE      ZERO,MIS3HCHR
          MOVE      ZERO,MIS4HCHR
          MOVE      ZERO,MIS5HCHR
          MOVE      ZERO,MIS6HCHR
          MOVE      ZERO,REG1PCHR
          MOVE      ZERO,REG2PCHR
          MOVE      ZERO,REG3PCHR
          MOVE      ZERO,REG4PCHR
          MOVE      ZERO,REG5PCHR
          MOVE      ZERO,REG6PCHR
          MOVE      ZERO,REG1HCHR
          MOVE      ZERO,REG2HCHR
          MOVE      ZERO,REG3HCHR
          MOVE      ZERO,REG4HCHR
          MOVE      ZERO,REG5HCHR
          MOVE      ZERO,REG6HCHR
          MOVE      ANSI,MODE
          MOVE      SP70,CONTRCID
CLER9000  MOVE      ZERO,EXIT
CLER9999  RETURN
+
.******************************************************************************
.*                                  KYDT0000              Called by: ML0000   *
.*                                Keyin Details                               *
.******************************************************************************
KYDT0000  CALL      DBCK0000                * Display the background screen
          CALL      CLER0000                * Clear variables
.
KYDT0500  CALL      KYNS0000                * Keyin the no of nights stay
          BRANCH    EXIT,KYDT9000,KYDT9500
.
KYDT1000  CALL      KYAD0000                * Keyin the admission date
          BRANCH    EXIT,KYDT0500,KYDT9500
.
KYDT1200  CALL      KYCT0000                * Keyin the claim type
          BRANCH    EXIT,KYDT1000,KYDT9500
.
KYDT1500  CALL      KYHF0000                * Keyin the health fund
          BRANCH    EXIT,KYDT1200,KYDT9500,KYDT2500
.
KYDT2000  CALL      KYHT0000                * Keyin the health fund table
          BRANCH    EXIT,KYDT1500,KYDT9500
.
KYDT2500  COMPARE   FOUR,OPTION
          GOTO      KYDT3000 IF EQUAL       * Keyin regime codes
          COMPARE   FIVE,OPTION
          GOTO      KYDT3000 IF EQUAL       * Keyin regime codes
.
          CALL      KYT10000                * Keyin the theatre code 1
          BRANCH    EXIT,KYDT5210,KYDT9500
.
          CALL      KYT20000                * Keyin the theatre code 2
          BRANCH    EXIT,KYDT5210,KYDT9500
.
          CALL      KYT30000                * Keyin the theatre code 3
          BRANCH    EXIT,KYDT5210,KYDT9500
.
          CALL      KYT40000                * Keyin the theatre code 4
          BRANCH    EXIT,KYDT5210,KYDT9500
.
          CALL      KYT50000                * Keyin the theatre code 5
          BRANCH    EXIT,KYDT5210,KYDT9500
.
          CALL      KYT60000                * Keyin the theatre code 6
          BRANCH    EXIT,KYDT5210,KYDT9500
          GOTO      KYDT5210
.
KYDT3000  CALL      KYR10000                * Keyin the Regime code 1
          BRANCH    EXIT,KYDT5210,KYDT9500
.
          CALL      KYR20000                * Keyin the Regime code 2
          BRANCH    EXIT,KYDT5210,KYDT9500
.
          CALL      KYR30000                * Keyin the Regime code 3
          BRANCH    EXIT,KYDT5210,KYDT9500
.
          CALL      KYR40000                * Keyin the Regime code 4
          BRANCH    EXIT,KYDT5210,KYDT9500
.
          CALL      KYR50000                * Keyin the Regime code 5
          BRANCH    EXIT,KYDT5210,KYDT9500
.
          CALL      KYR60000                * Keyin the Regime code 6
          BRANCH    EXIT,KYDT5210,KYDT9500
.
KYDT5210  CALL      KYM10000                * Keyin the Misc.Charge code 1
          BRANCH    EXIT,KYDT5500,KYDT9500
.
KYDT5220  CALL      KYM20000                * Keyin the Misc.Charge code 2
          BRANCH    EXIT,KYDT5500,KYDT9500
.
KYDT5230  CALL      KYM30000                * Keyin the Misc.Charge code 3
          BRANCH    EXIT,KYDT5500,KYDT9500
.
KYDT5240  CALL      KYM40000                * Keyin the Misc.Charge code 4
          BRANCH    EXIT,KYDT5500,KYDT9500
.
KYDT5250  CALL      KYM50000                * Keyin the Misc.Charge code 5
          BRANCH    EXIT,KYDT5500,KYDT9500
.
KYDT5260  CALL      KYM60000                * Keyin the Misc.Charge code 6
          BRANCH    EXIT,KYDT5500,KYDT9500
.
KYDT5500  COMPARE   FOUR,OPTION
          GOTO      KYDT5700 IF EQUAL
          COMPARE   FIVE,OPTION
          GOTO      KYDT5700 IF EQUAL
.
          CALL      KYCC0000                * Keyin the casemix code
          BRANCH    EXIT,KYDT2500,KYDT9500
.
          MATCH     SP9,CMXCODE
          GOTO      KYDT5700 IF EQUAL
.
.         For casemix patient, defaults to overnight for getting the suggested
.         classfication
.
..          MOVE      ZERO,DCFLAG             * Default to overnight casemix
.
KYDT5700  CALL      KYPR0000                * Keyin prosthetic
          BRANCH    EXIT,KYDT5500,KYDT9500
.
KYDT5800  CALL      KYPH0000                * Keyin pharmacy
          BRANCH    EXIT,KYDT5700,KYDT9500
.
KYDT6000  CALL      KYBT0000                * Keyin the bed type
          BRANCH    EXIT,KYDT5800,KYDT9500
.
          COMPARE   FOUR,OPTION
          GOTO      KYDT7000 IF EQUAL     * With Regime codes
          COMPARE   FIVE,OPTION
          GOTO      KYDT7000 IF EQUAL     * With Regime codes
.
.         we need to generate theatre fees, to get the highest item for 
.         the suggested classification.
.
          CALL      CALC0000              * Get theatre fees
.
KYDT7000  CALL      KYAT0000              * Keyin the admission type
          BRANCH    EXIT,KYDT6000,KYDT9500
.
          CALL      KYAG0000
.
.         MATCH     SP9,CMXCODE
.         GOTO      KYDT7500 IF EQUAL
.         CALL      CALC0000                * Get theatre fees
.
KYDT7500  CALL      MAINQST                 * Select Item, (P)ost, (C)ancel ?
          COMPARE   ZERO,CCITEM
          GOTO      KYDT8000 IF EQUAL       * Post
          GOTO      KYDT9500 IF LESS        * Cancel
.
          MOVE      ANSC,MODE
          IF        OPTION=4 |OPTION=5
            PERFORM   CCITEM,KYNS0000,KYAD0000,KYCT0000,KYHF0000:
                             KYHT0000,KYR10000:
                             KYR20000,KYR30000,KYR40000,KYR50000,KYR60000:
                             KYM10000,KYM20000,KYM30000,KYM40000,KYM50000:
                             KYM60000:
                             KYCC0000,KYPR0000,KYPH0000,KYBT0000:
                             KYAT0000,KYAG0000
          ELSE
            PERFORM   CCITEM,KYNS0000,KYAD0000,KYCT0000,KYHF0000:
                             KYHT0000,KYT10000:
                             KYT20000,KYT30000,KYT40000,KYT50000,KYT60000:
                             KYM10000,KYM20000,KYM30000,KYM40000,KYM50000:
                             KYM60000:
                             KYCC0000,KYPR0000,KYPH0000,KYBT0000:
                             KYAT0000,KYAG0000
          ENDIF
          BRANCH    EXIT,KYDT7500,KYDT9500
          GOTO      KYDT7500
.
.         Regenerate the theatre fee again, incase it has changed to daycase 
.         casemix from the admission type
.
KYDT8000  IF        OPTION=4 |OPTION=5
            CALL      CALR0000              * Get Regime fees
          ELSE
            CALL      CALC0000              * Get theatre fees
          ENDIF
          CALL      CALM0000                * Get misc.charge
.
KYDT9000  MOVE      ZERO,EXIT
          GOTO      KYDT9999
.
KYDT9500  MOVE      ONE,EXIT
KYDT9999  RETURN
+
.******************************************************************************
.*                                  WRDT0000              Called by: ML0000   *
.*                         Write to pmsfedaf - detail record                  *
.******************************************************************************
WRDT0000  BRANCH    FREEFLAG,WRDT1000 
          MOVE      " 95",PRXCODE                * set sector for locking
          CALL      GETSLK00                     * lock sector
          READ      CONTROLF,NINTY5;*153,PTCNQUOT
          ADD       ONE,PTCNQUOT
          WRITAB    CONTROLF,NINTY5;*153,PTCNQUOT
          CALL      RELSLK00                     * release lock
.
          SUB       ONE,PTCNQUOT          * get quote number
.
WRDT1000  MOVE      PURNO,PMFDURNO
          MOVE      PTCNQUOT,PMFDQUOT
          MOVE      NONIGHTS,PMFDNONS
          MOVE      ADMDATE,PMFDADAT
          MOVE      HFCODE,PMFDHFUN
          MOVE      HFTCODE,PMFDHFTB
          MOVE      CMXCODE,PMFDCMCD
          MOVE      CLMTYPE,PMFDCLTY
          MOVE      BEDTYPE,PMFDBDTY
          MOVE      ADMTYPE,PMFDATYP
          MOVE      ZERO,PMFDAGST
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            MOVE      ONE,PMFDAGST
          ENDIF
          MOVE      SP70,PMFDDOCT
          MOVE      SP70,PMFDACHR
          MOVE      SP70,PMFDUBAS
.
          PACK      KEY12,PMFDQUOT,SP20
          CALL      RAPMFED1
          IF        OVRCD<>0
            CALL      WRPMFED1           * write detail record
          ELSE
            CALL      UPPMFED1           * record already exists
          ENDIF
.
          PACK      KEY12,PMFDQUOT,SP20
          MOVE      PMFDQUOT,PMFNQUOT
          MOVE      PTITL,PMFNTITL
          MOVE      PSNAME,PMFNSNAM
          MOVE      PGNAME,PMFNGNAM
          MOVE      PADD1,PMFNADD1
          MOVE      PADD2,PMFNADD2
          MOVE      PSUBRB,PMFNSUBR
.
          CALL      RAPMFEN1
          IF        OVRCD<>0
            CALL      WRPMFEN1           * write detail record
          ELSE
            CALL      UPPMFEN1           * record already exists
          ENDIF
.
WRDT9999  RETURN
+
.******************************************************************************
.*                                  WRTF0000              Called by: ML0000   *
.*                  Write theatre fees to pmsfesaf                            *
.******************************************************************************
WRTF0000  BRANCH    FREEFLAG,WRTF9999
          MOVE      ZERO,UNIQ
          PACK      KEY17,PMFDQUOT,SP20
          CALL      RSPMFES1
WRTF1000  CALL      RKPMFES1
          BRANCH    OVRCD,WRTF2000
.
          MATCH     PURNO,PMFSURNO
          GOTO      WRTF2000 IF NOT EQUAL
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      WRTF2000 IF NOT EQUAL
.
          MOVE      PMFSUNIQ,UNIQ
          GOTO      WRTF1000
.
WRTF2000  MOVE      PURNO,PMFSURNO
          MOVE      PMFDQUOT,PMFSQUOT
          ADD       ONE,UNIQ
          MOVE      UNIQ,PMFSUNIQ
.
. -----   write theatre fee records -----
.
          MOVE      THREE,PMFSRTYP
          MOVE      KEY9,PMFSTHIT
          MOVE      WRKTOTAL,PMFSTHEH
          MOVE      BFHF,PMFSTHEF
          MOVE      ZERO,PMFSLUMH
          MOVE      ZERO,PMFSLUMF
          MOVE      ZERO,PMFSDAFR
          MOVE      ZERO,PMFSDAYT
          MOVE      ZERO,PMFSDAYH
          MOVE      ZERO,PMFSDAHF
          MOVE      SP70,PMFSGSTP
          MOVE      SP70,PMFSGSTC
.
          PACK      KEY17,PMFSQUOT,PMFSUNIQ
          CALL      WRPMFES1
.
WRTF9999  RETURN
+
.******************************************************************************
.*                                  WRLS0000              Called by: ML0000   *
.*                  Write lump sum charge to pmsfesaf                         *
.******************************************************************************
WRLS0000  BRANCH    FREEFLAG,WRLS9999
          MOVE      ZERO,UNIQ
          PACK      KEY17,PMFDQUOT,SP20
          CALL      RSPMFES1
WRLS1000  CALL      RKPMFES1
          BRANCH    OVRCD,WRLS2000
.
          MATCH     PURNO,PMFSURNO
          GOTO      WRLS2000 IF NOT EQUAL
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      WRLS2000 IF NOT EQUAL
.
          MOVE      PMFSUNIQ,UNIQ
          GOTO      WRLS1000
.
WRLS2000  MOVE      PURNO,PMFSURNO
          MOVE      PMFDQUOT,PMFSQUOT
          ADD       ONE,UNIQ
          MOVE      UNIQ,PMFSUNIQ
.
. -----   write lumpsum records -----
.
          MOVE      ONE,PMFSRTYP
          MOVE      SP9,PMFSTHIT
          MOVE      WRKTOTAL,PMFSLUMH
          MOVE      PTLSLREB,PMFSLUMF
          MOVE      ZERO,PMFSTHEH
          MOVE      ZERO,PMFSTHEF
          MOVE      ZERO,PMFSDAFR
          MOVE      ZERO,PMFSDAYT
          MOVE      ZERO,PMFSDAYH
          MOVE      ZERO,PMFSDAHF
.
          PACK      KEY17,PMFSQUOT,PMFSUNIQ
          CALL      WRPMFES1
.
WRLS9999  RETURN
+
.******************************************************************************
.*                                  WRDC0000              Called by: ML0000   *
.*                  Write the daily charges to pmsfesaf                       *
.******************************************************************************
WRDC0000  BRANCH    FREEFLAG,WRDC9999
          MOVE      ZERO,UNIQ
          PACK      KEY17,PMFDQUOT,SP20
          CALL      RSPMFES1
WRDC1000  CALL      RKPMFES1
          BRANCH    OVRCD,WRDC2000
.
          MATCH     PURNO,PMFSURNO
          GOTO      WRDC2000 IF NOT EQUAL
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      WRDC2000 IF NOT EQUAL
.
          MOVE      PMFSUNIQ,UNIQ
          GOTO      WRDC1000
.
WRDC2000  MOVE      PURNO,PMFSURNO
          MOVE      PMFDQUOT,PMFSQUOT
          ADD       ONE,UNIQ
          MOVE      UNIQ,PMFSUNIQ
.
. -----   write daily charge  -----
.
          MOVE      TWO,PMFSRTYP
          MOVE      SP9,PMFSTHIT
          MOVE      WRKTOTAL,PMFSDAYH
          MOVE      PTHDDREB,PMFSDAHF
          MOVE      ZERO,PMFSTHEH
          MOVE      ZERO,PMFSTHEF
          MOVE      FORM4,PMFSDAFR
          MOVE      PTHDEDAY,PMFSDAYT
          MOVE      ZERO,PMFSLUMH
          MOVE      ZERO,PMFSLUMF
.
          PACK      KEY17,PMFSQUOT,PMFSUNIQ
          CALL      WRPMFES1
.
WRDC9999  RETURN
+
.******************************************************************************
.*                                  WRAC0000              Called by: ML0000   *
.*                  Write the additional charges to pmsfesaf                  *
.******************************************************************************
WRAC0000  BRANCH    FREEFLAG,WRAC9999
          MOVE      ZERO,UNIQ
          PACK      KEY17,PMFDQUOT,Z70
          CALL      RSPMFES1
WRAC1000  CALL      RPPMFES1
          BRANCH    OVRCD,WRAC2000
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      WRAC2000 IF NOT EQUAL
.
          MOVE      PMFSUNIQ,UNIQ
.
WRAC2000  MOVE      PURNO,PMFSURNO
          MOVE      PMFDQUOT,PMFSQUOT
          ADD       ONE,UNIQ
          MOVE      UNIQ,PMFSUNIQ
.
. -----   write additional charge  -----
.
          MOVE      FOUR,PMFSRTYP
          MOVE      SP9,PMFSTHIT
          MOVE      WRKTOTAL,PMFSDAYH
          MOVE      PTADDREB,PMFSDAHF
          MOVE      ZERO,PMFSTHEH
          MOVE      ZERO,PMFSTHEF
          MOVE      FORM4,PMFSDAFR
          MOVE      FORM4B,PMFSDAYT
          MOVE      ZERO,PMFSLUMH
          MOVE      ZERO,PMFSLUMF
.
          PACK      KEY17,PMFSQUOT,PMFSUNIQ
          CALL      WRPMFES1
.
WRAC9999  RETURN
+
.******************************************************************************
.*                                  WROC0000              Called by: ML0000   *
.*                  Write the Overnight Costs to pmsfesaf                     *
.******************************************************************************
WROC0000  BRANCH    FREEFLAG,WROC9999
          MOVE      ZERO,UNIQ
          PACK      KEY17,PMFDQUOT,Z70
          CALL      RSPMFES1
WROC1000  CALL      RPPMFES1
          BRANCH    OVRCD,WROC2000
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      WROC2000 IF NOT EQUAL
.
          MOVE      PMFSUNIQ,UNIQ
.
WROC2000  MOVE      PURNO,PMFSURNO
          MOVE      PMFDQUOT,PMFSQUOT
          ADD       ONE,UNIQ
          MOVE      UNIQ,PMFSUNIQ
.
. -----   write overnight fees  -----
.
          MOVE      FIVE,PMFSRTYP
          MOVE      SP9,PMFSTHIT
          MOVE      OVRTOTAL,PMFSDAYH
          MOVE      OVRFUNDT,PMFSDAHF
          MOVE      ZERO,PMFSTHEH
          MOVE      ZERO,PMFSTHEF
          MOVE      ZERO,PMFSDAFR
          MOVE      FORM4,PMFSDAYT
          MOVE      ZERO,PMFSLUMH
          MOVE      ZERO,PMFSLUMF
.
          PACK      KEY17,PMFSQUOT,PMFSUNIQ
          CALL      WRPMFES1
.
WROC9999  RETURN
+
.
.******************************************************************************
.*                                  KYNS0000              Called by: KYDT0000 *
.*                         Keyin The No Of Nights Stay                        *
.******************************************************************************
KYNS0000  MOVE      NONIGHTS,KEY4
          DISPLAY   *PDCOL:3,*EL,"0=Daycase";
          KEYIN     *PCOL:3,*V2LON,*RV,*JR,KEY4;
.
          ENDSET    KEY4
          APPEND    SP3,KEY4
          RESET     KEY4
.
          SCAN      EXITCHAR,KEY4
          GOTO      KYNS9900 IF EQUAL       * Exitchar, exit
.
          TYPE      KEY4
          GOTO      KYNS1000 IF NOT EQUAL   * Not numeric, error
.
          MOVE      ZERO,FORM4
          MOVE      KEY4,FORM4
          IF        FORM4<0 | FORM4>9999
            GOTO      KYNS1000
          ENDIF
.
          MOVE      FORM4,NONIGHTS
          DISPLAY   *PCOL:3,*EL,*V2LON,NONIGHTS;
.
          MOVE      SP1,DCASEFLG            * Daycase flag - not daycase
          IF        NONIGHTS=0
            MOVE      ANSD,DCASEFLG         * Daycase flag - daycase
            MOVE      ONE,DCFLAG            * Daycase flag - daycase
          ENDIF
          GOTO      KYNS9000
.
KYNS1000  BEEP
          GOTO      KYNS0000
.
KYNS9000  MOVE      ZERO,EXIT
          GOTO      KYNS9999
.
KYNS9500  MOVE      ONE,EXIT
          GOTO      KYNS9999
.
KYNS9900  MOVE      TWO,EXIT
KYNS9999  RETURN
+
.******************************************************************************
.*                                  KYAD0000              Called by: KYDT0000 *
.*                          Keyin The Admission Date                          *
.******************************************************************************
KYAD0000  UNPACK    ADMDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      COL,CCOL
          MOVE      "4",CVERT
          CALL      KEYDATE                 * Keyin the admission date
          BRANCH    OVRCD,KYAD9500
.
          PACK      ADMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ADMDATE
.
KYAD9000  MOVE      ZERO,EXIT
          GOTO      KYAD9999
.
KYAD9500  MOVE      ONE,EXIT
          GOTO      KYAD9999
.
KYAD9900  MOVE      TWO,EXIT
KYAD9999  RETURN
+
.******************************************************************************
.*                                  KYCT0000              Called by: KYDT0000 *
.*                            Keyin The Claim Type                            *
.******************************************************************************
KYCT0000  MOVE      COL,ECOL
          MOVE      "30",DCOL
          MOVE      "5",EVERT
          PACK      CODE,ANSC,ANSL
          MOVE      CLMTYPE,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY                * Keyin the claim type
          BRANCH    EXIT,KYCT9500,KYCT9900
.
          MOVE      ACODE,CLMTYPE
          MOVE      TDESC,CLMDESC
          DISPLAY   *PECOL:EVERT,SP3,SP20,*PECOL:EVERT,*V2LON,CLMTYPE:
                    *PDCOL:EVERT,*HOFF,CLMDESC;
.
KYCT9000  MATCH     ANSC,MODE
          GOTO      KYCT9200 IF NOT EQUAL
          CALL      CALC0000                * Get theatre fees
          CALL      CALM0000                * Get misc.charge
.
KYCT9200  MOVE      ZERO,EXIT
          GOTO      KYCT9999
.
KYCT9500  UNPACK    SP100,CLMTYPE,CLMDESC
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYCT9999
.
KYCT9900  MOVE      TWO,EXIT
KYCT9999  MOVE      "36",DCOL
          RETURN
+
.******************************************************************************
.*                                  KYHF0000              Called by: KYDT0000 *
.*                            Keyin The Health Fund                           *
.******************************************************************************
KYHF0000  MOVE      COL,ECOL
          MOVE      "6",EVERT
          MOVE      HFCODE,CKYIDEF6
          MOVE      ZERO,CKYIMAND
          CALL      PATFNDKY                * Keyin the health fund
          BRANCH    EXIT,KYHF9500,KYHF9700,KYHF1000
.
          MATCH     HFCODE,HCODE
          IF        !@EQUAL
            UNPACK    SP100,HFTCODE,HFTDESC * Diff H/F, clear the H/F table
            DISPLAY   *PECOL:7,*EL;
          ENDIF
.
          MOVE      HCODE,HFCODE
          MOVE      HFNAME,HFDESC
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,HFCODE:
                    *PDCOL:EVERT,*HOFF,HFDESC;
.
          MATCH     ANSC,MODE
          GOTO      KYHF9000 IF NOT EQUAL
          CALL      CALC0000                * Calculate theatre fees
          CALL      CALM0000                * Calculate misc.charge
          GOTO      KYHF9000
.
KYHF1000  UNPACK    SP100,HFCODE,HFDESC,HFTCODE,AFUNDH,AFNDTB
          DISPLAY   *PECOL:EVERT,*EL;
          DISPLAY   *PECOL:7,*EL;
          GOTO      KYHF9900
.
KYHF9000  MOVE      ZERO,EXIT
          MATCH     ANSC,MODE
          GOTO      KYHT0000 IF EQUAL
          GOTO      KYHF9999
.
KYHF9500  MOVE      ONE,EXIT
          GOTO      KYHF9999
.
KYHF9700  MOVE      TWO,EXIT
          GOTO      KYHF9999
.
KYHF9900  MOVE      THREE,EXIT
KYHF9999  RETURN
+
.******************************************************************************
.*                                  KYHT0000              Called by: KYDT0000 *
.*                         Keyin The Health Fund Table                        *
.******************************************************************************
KYHT0000  MOVE      COL,ECOL
          MOVE      "7",EVERT
          MOVE      HFTCODE,CKYIDEF8
          MOVE      ZERO,CKYIMAND
          MOVE      HCODE,MHFUND
          CALL      PATTBLKY                * Keyin the health fund table
          BRANCH    EXIT,KYHT9500,KYHT9900,KYHT9500
.
          MOVE      HFTABL,HFTCODE
          MOVE      HFNAME,HFTDESC
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,HFTCODE:
                    *PDCOL:EVERT,*HOFF,HFTDESC;
.
          MATCH     SP3,PTHFBCAT
          GOTO      KYHT9000 IF EQUAL       * Blank table type
.
          PACK      KEY5,ANSH,ANST,PTHFBCAT
          CALL      RDCODE1                 * Read the codes file
          BRANCH    OVRCD,KYHT9000
.
          MOVE      PTHFBCAT,TABTYPE        * Table type
.
KYHT9000  MOVE      ZERO,EXIT
          GOTO      KYHT9999
.
KYHT9500  UNPACK    SP100,HFTCODE,HFTDESC
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYHT9999
.
KYHT9900  MOVE      TWO,EXIT
KYHT9999  RETURN
+
.******************************************************************************
.*                                  KYT10000              Called by: KYDT0000 *
.*                          Keyin The Theatre Code 1                          *
.******************************************************************************
KYT10000  MOVE      COL,ECOL
          MOVE      "8",EVERT
          MOVE      THT1CODE,CKYIDEF9
          MOVE      ZERO,CKYIMAND
          CALL      PATITMKY                 * Keyin the theatre fee code
.
          CALL      KGST0000
.
          MOVE      PTITGSTA,THT1GSTA        * Theatre fee GST applicable
          MOVE      PTITGSTC,THT1GSTC        * Theatre fee GST payable code
.
          BRANCH    EXIT,KYT19500,KYT19900
.
          MOVE      ITEMNO,THT1CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,THT1CODE:
                    *PDCOL:EVERT,*HOFF,IDESC;
.
KYT19000  MOVE      ZERO,EXIT
          GOTO      KYT19999
.
KYT19500  UNPACK    SP10,THT1CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYT19999
.
KYT19900  MOVE      TWO,EXIT
KYT19999  RETURN
+
.******************************************************************************
.*                                  KYT20000              Called by: KYDT0000 *
.*                          Keyin The Theatre Code 2                          *
.******************************************************************************
KYT20000  MOVE      COL,ECOL
          MOVE      "9",EVERT
          MOVE      THT2CODE,CKYIDEF9
          MOVE      ZERO,CKYIMAND
          CALL      PATITMKY                * Keyin the theatre fee code
.
          CALL      KGST0000
.
          MOVE      PTITGSTA,THT2GSTA        * Theatre fee GST applicable
          MOVE      PTITGSTC,THT2GSTC        * Theatre fee GST payable code
.
          BRANCH    EXIT,KYT29500,KYT29900
.
          MOVE      ITEMNO,THT2CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,THT2CODE:
                    *PDCOL:EVERT,*HOFF,IDESC;
.
KYT29000  MOVE      ZERO,EXIT
          GOTO      KYT29999
.
KYT29500  UNPACK    SP10,THT2CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYT29999
.
KYT29900  MOVE      TWO,EXIT
KYT29999  RETURN
+
.******************************************************************************
.*                                  KYT30000              Called by: KYDT0000 *
.*                          Keyin The Theatre Code 3                          *
.******************************************************************************
KYT30000  MOVE      COL,ECOL
          MOVE      "10",EVERT
          MOVE      THT3CODE,CKYIDEF9
          MOVE      ZERO,CKYIMAND
          CALL      PATITMKY                * Keyin the theatre fee code
.
          CALL      KGST0000
.
          MOVE      PTITGSTA,THT3GSTA        * Theatre fee GST applicable
          MOVE      PTITGSTC,THT3GSTC        * Theatre fee GST payable code
.
          BRANCH    EXIT,KYT39500,KYT39900
.
          MOVE      ITEMNO,THT3CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,THT3CODE:
                    *PDCOL:EVERT,*HOFF,IDESC;
.
KYT39000  MOVE      ZERO,EXIT
          GOTO      KYT39999
.
KYT39500  UNPACK    SP10,THT3CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYT39999
.
KYT39900  MOVE      TWO,EXIT
KYT39999  RETURN
+
.******************************************************************************
.*                                  KYT40000              Called by: KYDT0000 *
.*                          Keyin The Theatre Code 4                          *
.******************************************************************************
KYT40000  MOVE      COL,ECOL
          MOVE      "11",EVERT
          MOVE      THT4CODE,CKYIDEF9
          MOVE      ZERO,CKYIMAND
          CALL      PATITMKY                * Keyin the theatre fee code
.
          CALL      KGST0000
.
          MOVE      PTITGSTA,THT4GSTA        * Theatre fee GST applicable
          MOVE      PTITGSTC,THT4GSTC        * Theatre fee GST payable code
.
          BRANCH    EXIT,KYT49500,KYT49900
.
          MOVE      ITEMNO,THT4CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,THT4CODE:
                    *PDCOL:EVERT,*HOFF,IDESC;
.
KYT49000  MOVE      ZERO,EXIT
          GOTO      KYT49999
.
KYT49500  UNPACK    SP10,THT4CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYT49999
.
KYT49900  MOVE      TWO,EXIT
KYT49999  RETURN
+
.******************************************************************************
.*                                  KYT50000              Called by: KYDT0000 *
.*                          Keyin The Theatre Code 5                          *
.******************************************************************************
KYT50000  MOVE      COL,ECOL
          MOVE      "12",EVERT
          MOVE      THT5CODE,CKYIDEF9
          MOVE      ZERO,CKYIMAND
          CALL      PATITMKY                * Keyin the theatre fee code
.
          CALL      KGST0000
.
          MOVE      PTITGSTA,THT5GSTA        * Theatre fee GST applicable
          MOVE      PTITGSTC,THT5GSTC        * Theatre fee GST payable code
.
          BRANCH    EXIT,KYT59500,KYT59900
.
          MOVE      ITEMNO,THT5CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,THT5CODE:
                    *PDCOL:EVERT,*HOFF,IDESC;
.
KYT59000  MOVE      ZERO,EXIT
          GOTO      KYT59999
.
KYT59500  UNPACK    SP10,THT5CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYT59999
.
KYT59900  MOVE      TWO,EXIT
KYT59999  RETURN
+
.******************************************************************************
.*                                  KYT60000              Called by: KYDT0000 *
.*                          Keyin The Theatre Code 6                          *
.******************************************************************************
KYT60000  MOVE      COL,ECOL
          MOVE      "13",EVERT
          MOVE      THT6CODE,CKYIDEF9
          MOVE      ZERO,CKYIMAND
          CALL      PATITMKY                * Keyin the theatre fee code
.
          CALL      KGST0000
.
          MOVE      PTITGSTA,THT6GSTA        * Theatre fee GST applicable
          MOVE      PTITGSTC,THT6GSTC        * Theatre fee GST payable code
.
          BRANCH    EXIT,KYT69500,KYT69900
.
          MOVE      ITEMNO,THT6CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,THT6CODE:
                    *PDCOL:EVERT,*HOFF,IDESC;
.
KYT69000  MOVE      ZERO,EXIT
          GOTO      KYT69999
.
KYT69500  UNPACK    SP10,THT6CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYT69999
.
KYT69900  MOVE      TWO,EXIT
KYT69999  RETURN
+
.******************************************************************************
.*                                  KYM10000              Called by: KYDT0000 *
.*                          Keyin The Misc.Charge code 1                      *
.******************************************************************************
KYM10000  MOVE      COL,ECOL
          MOVE      "14",EVERT
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,MIS1CODE:
                    *PECOL:EVERT,*DV,MIS1CODE
          ENDSET    MIS1CODE
          APPEND    SP9,MIS1CODE
          RESET     MIS1CODE
          MATCH     SP9,MIS1CODE
          GOTO      KYM19500 IF EQUAL       * nothing
.
          MOVE      MIS1CODE,MCHARGE
          CALL      GETMSC00
          CALL      MGST0000
          MOVE      PTMCGSTA,MIS1GSTA        * Misc.Charge GST applicable
          MOVE      PTMCGSTC,MIS1GSTC        * Misc.Charge GST payable code
.
          MOVE      MIS1CODE,MCHARGE
          MOVE      MCHARGE,MIS1CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,MIS1CODE:
                    *PDCOL:EVERT,*HOFF,MDESC;
.
KYM19000  MOVE      ZERO,EXIT
          GOTO      KYM19999
.
KYM19500  UNPACK    SP10,MIS1CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYM19999
.
KYM19900  MOVE      TWO,EXIT
KYM19999  RETURN
.
.******************************************************************************
.*                                  KYM20000              Called by: KYDT0000 *
.*                          Keyin The Misc.Charge code 2                      *
.******************************************************************************
KYM20000  MOVE      COL,ECOL
          MOVE      "15",EVERT
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,MIS2CODE:
                    *PECOL:EVERT,*DV,MIS2CODE
          ENDSET    MIS2CODE
          APPEND    SP9,MIS2CODE
          RESET     MIS2CODE
          MATCH     SP9,MIS2CODE
          GOTO      KYM29500 IF EQUAL       * nothing
.
          MOVE      MIS2CODE,MCHARGE
          CALL      GETMSC00
          CALL      MGST0000
          MOVE      PTMCGSTA,MIS2GSTA        * Misc.Charge GST applicable
          MOVE      PTMCGSTC,MIS2GSTC        * Misc.Charge GST payable code
.
          MOVE      MIS2CODE,MCHARGE
          MOVE      MCHARGE,MIS2CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,MIS2CODE:
                    *PDCOL:EVERT,*HOFF,MDESC;
.
KYM29000  MOVE      ZERO,EXIT
          GOTO      KYM29999
.
KYM29500  UNPACK    SP10,MIS2CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYM29999
.
KYM29900  MOVE      TWO,EXIT
KYM29999  RETURN
.******************************************************************************
.*                                  KYM30000              Called by: KYDT0000 *
.*                          Keyin The Misc.Charge code 3                      *
.******************************************************************************
KYM30000  MOVE      COL,ECOL
          MOVE      "16",EVERT
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,MIS3CODE:
                    *PECOL:EVERT,*DV,MIS3CODE
          ENDSET    MIS3CODE
          APPEND    SP9,MIS3CODE
          RESET     MIS3CODE
          MATCH     SP9,MIS3CODE
          GOTO      KYM39500 IF EQUAL       * nothing
.
          MOVE      MIS3CODE,MCHARGE
          CALL      GETMSC00
          CALL      MGST0000
          MOVE      PTMCGSTA,MIS3GSTA        * Misc.Charge GST applicable
          MOVE      PTMCGSTC,MIS3GSTC        * Misc.Charge GST payable code
.
          MOVE      MIS3CODE,MCHARGE
          MOVE      MCHARGE,MIS3CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,MIS3CODE:
                    *PDCOL:EVERT,*HOFF,MDESC;
.
KYM39000  MOVE      ZERO,EXIT
          GOTO      KYM39999
.
KYM39500  UNPACK    SP10,MIS3CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYM39999
.
KYM39900  MOVE      TWO,EXIT
KYM39999  RETURN
.******************************************************************************
.*                                  KYM40000              Called by: KYDT0000 *
.*                          Keyin The Misc.Charge code 4                      *
.******************************************************************************
KYM40000  MOVE      COL,ECOL
          MOVE      "17",EVERT
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,MIS4CODE:
                    *PECOL:EVERT,*DV,MIS4CODE
          ENDSET    MIS4CODE
          APPEND    SP9,MIS4CODE
          RESET     MIS4CODE
          MATCH     SP9,MIS4CODE
          GOTO      KYM49500 IF EQUAL       * nothing
.
          MOVE      MIS4CODE,MCHARGE
          CALL      GETMSC00
          CALL      MGST0000
          MOVE      PTMCGSTA,MIS4GSTA        * Misc.Charge GST applicable
          MOVE      PTMCGSTC,MIS4GSTC        * Misc.Charge GST payable code
.
          MOVE      MIS4CODE,MCHARGE
          MOVE      MCHARGE,MIS4CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,MIS4CODE:
                    *PDCOL:EVERT,*HOFF,MDESC;
.
KYM49000  MOVE      ZERO,EXIT
          GOTO      KYM49999
.
KYM49500  UNPACK    SP10,MIS4CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYM49999
.
KYM49900  MOVE      TWO,EXIT
KYM49999  RETURN
.******************************************************************************
.*                                  KYM50000              Called by: KYDT0000 *
.*                          Keyin The Misc.Charge code 5                      *
.******************************************************************************
KYM50000  MOVE      COL,ECOL
          MOVE      "18",EVERT
.
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,MIS5CODE:
                    *PECOL:EVERT,*DV,MIS5CODE
          ENDSET    MIS5CODE
          APPEND    SP9,MIS5CODE
          RESET     MIS5CODE
          MATCH     SP9,MIS5CODE
          GOTO      KYM59500 IF EQUAL       * nothing
.
          MOVE      MIS5CODE,MCHARGE
          CALL      GETMSC00
          CALL      MGST0000
          MOVE      PTMCGSTA,MIS5GSTA        * Misc.Charge GST applicable
          MOVE      PTMCGSTC,MIS5GSTC        * Misc.Charge GST payable code
.
          MOVE      MIS5CODE,MCHARGE
          MOVE      MCHARGE,MIS5CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,MIS5CODE:
                    *PDCOL:EVERT,*HOFF,MDESC;
.
KYM59000  MOVE      ZERO,EXIT
          GOTO      KYM59999
.
KYM59500  UNPACK    SP10,MIS5CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYM59999
.
KYM59900  MOVE      TWO,EXIT
KYM59999  RETURN
.******************************************************************************
.*                                  KYM60000              Called by: KYDT0000 *
.*                          Keyin The Misc.Charge code 6                      *
.******************************************************************************
KYM60000  MOVE      COL,ECOL
          MOVE      "19",EVERT
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,MIS6CODE:
                    *PECOL:EVERT,*DV,MIS6CODE
          ENDSET    MIS6CODE
          APPEND    SP9,MIS6CODE
          RESET     MIS6CODE
          MATCH     SP9,MIS6CODE
          GOTO      KYM69500 IF EQUAL       * nothing
.
          MOVE      MIS6CODE,MCHARGE
          CALL      GETMSC00
          CALL      MGST0000
          MOVE      PTMCGSTA,MIS6GSTA        * Misc.Charge GST applicable
          MOVE      PTMCGSTC,MIS6GSTC        * Misc.Charge GST payable code
.
          MOVE      MIS6CODE,MCHARGE
          MOVE      MCHARGE,MIS6CODE
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,MIS6CODE:
                    *PDCOL:EVERT,*HOFF,MDESC;
.
KYM69000  MOVE      ZERO,EXIT
          GOTO      KYM69999
.
KYM69500  UNPACK    SP10,MIS6CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYM69999
.
KYM69900  MOVE      TWO,EXIT
KYM69999  RETURN
.
.******************************************************************************
.*                                  KYR10000              Called by: KYDT0000 *
.*                          Keyin The Regime code 1                           *
.******************************************************************************
KYR10000  MOVE      COL,ECOL
          MOVE      "8",EVERT
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,REG1CODE:
                    *PECOL:EVERT,*DV,REG1CODE
          ENDSET    REG1CODE
          APPEND    SP10,REG1CODE
          RESET     REG1CODE
          MATCH     SP10,REG1CODE
          GOTO      KYR19500 IF EQUAL       * nothing
.
          MOVE      "  0",PMREUNIQ
          PACK      KEY13,REG1CODE,PMREUNIQ,SP70
          CALL      RDPMREG1
          BRANCH    OVRCD,KYR19500
.
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,REG1CODE:
                    *PDCOL:EVERT,*HOFF,PMREDESC;
.
KYR19000  MOVE      ZERO,EXIT
          GOTO      KYR19999
.
KYR19500  UNPACK    SP10,REG1CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYR19999
.
KYR19900  MOVE      TWO,EXIT
KYR19999  RETURN
.
.******************************************************************************
.*                                  KYR20000              Called by: KYDT0000 *
.*                          Keyin The Regime code 2                           *
.******************************************************************************
KYR20000  MOVE      COL,ECOL
          MOVE      "9",EVERT
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,REG2CODE:
                    *PECOL:EVERT,*DV,REG2CODE
          ENDSET    REG2CODE
          APPEND    SP10,REG2CODE
          RESET     REG2CODE
          MATCH     SP10,REG2CODE
          GOTO      KYR29500 IF EQUAL       * nothing
.
          MOVE      "  0",PMREUNIQ
          PACK      KEY13,REG2CODE,PMREUNIQ,SP70
          CALL      RDPMREG1
          BRANCH    OVRCD,KYR29500
.
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,REG2CODE:
                    *PDCOL:EVERT,*HOFF,PMREDESC;
.
KYR29000  MOVE      ZERO,EXIT
          GOTO      KYR29999
.
KYR29500  UNPACK    SP10,REG2CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYR29999
.
KYR29900  MOVE      TWO,EXIT
KYR29999  RETURN


.******************************************************************************
.*                                  KYR30000              Called by: KYDT0000 *
.*                          Keyin The Regime code 3                           *
.******************************************************************************
KYR30000  MOVE      COL,ECOL
          MOVE      "10",EVERT
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,REG3CODE:
                    *PECOL:EVERT,*DV,REG3CODE
          ENDSET    REG3CODE
          APPEND    SP10,REG3CODE
          RESET     REG3CODE
          MATCH     SP10,REG3CODE
          GOTO      KYR39500 IF EQUAL       * nothing
.
          MOVE      "  0",PMREUNIQ
          PACK      KEY13,REG3CODE,PMREUNIQ,SP70
          CALL      RDPMREG1
          BRANCH    OVRCD,KYR39500
.
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,REG3CODE:
                    *PDCOL:EVERT,*HOFF,PMREDESC;
.
KYR39000  MOVE      ZERO,EXIT
          GOTO      KYR39999
.
KYR39500  UNPACK    SP10,REG3CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYR39999
.
KYR39900  MOVE      TWO,EXIT
KYR39999  RETURN
.
.******************************************************************************
.*                                  KYR40000              Called by: KYDT0000 *
.*                          Keyin The Regime code 4                           *
.******************************************************************************
KYR40000  MOVE      COL,ECOL
          MOVE      "11",EVERT
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,REG4CODE:
                    *PECOL:EVERT,*DV,REG4CODE
          ENDSET    REG4CODE
          APPEND    SP10,REG4CODE
          RESET     REG4CODE
          MATCH     SP10,REG4CODE
          GOTO      KYR49500 IF EQUAL       * nothing
.
          MOVE      "  0",PMREUNIQ
          PACK      KEY13,REG4CODE,PMREUNIQ,SP70
          CALL      RDPMREG1
          BRANCH    OVRCD,KYR49500
.
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,REG4CODE:
                    *PDCOL:EVERT,*HOFF,PMREDESC;
.
KYR49000  MOVE      ZERO,EXIT
          GOTO      KYR49999
.
KYR49500  UNPACK    SP10,REG4CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYR49999
.
KYR49900  MOVE      TWO,EXIT
KYR49999  RETURN
.
.******************************************************************************
.*                                  KYR50000              Called by: KYDT0000 *
.*                          Keyin The Regime code 5                           *
.******************************************************************************
KYR50000  MOVE      COL,ECOL
          MOVE      "12",EVERT
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,REG5CODE:
                    *PECOL:EVERT,*DV,REG5CODE
          ENDSET    REG5CODE
          APPEND    SP10,REG5CODE
          RESET     REG5CODE
          MATCH     SP10,REG5CODE
          GOTO      KYR59500 IF EQUAL       * nothing
.
          MOVE      "  0",PMREUNIQ
          PACK      KEY13,REG5CODE,PMREUNIQ,SP70
          CALL      RDPMREG1
          BRANCH    OVRCD,KYR59500
.
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,REG5CODE:
                    *PDCOL:EVERT,*HOFF,PMREDESC;
.
KYR59000  MOVE      ZERO,EXIT
          GOTO      KYR59999
.
KYR59500  UNPACK    SP10,REG1CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYR59999
.
KYR59900  MOVE      TWO,EXIT
KYR59999  RETURN
.
.******************************************************************************
.*                                  KYR60000              Called by: KYDT0000 *
.*                          Keyin The Regime code 6                           *
.******************************************************************************
KYR60000  MOVE      COL,ECOL
          MOVE      "13",EVERT
          KEYIN     *PECOL:EVERT,*DV,UNDLN2:      * no default used
                    *PECOL:EVERT,*V2LON,REG6CODE:
                    *PECOL:EVERT,*DV,REG6CODE
          ENDSET    REG6CODE
          APPEND    SP10,REG6CODE
          RESET     REG6CODE
          MATCH     SP10,REG6CODE
          GOTO      KYR69500 IF EQUAL       * nothing
.
          MOVE      "  0",PMREUNIQ
          PACK      KEY13,REG6CODE,PMREUNIQ,SP70
          CALL      RDPMREG1
          BRANCH    OVRCD,KYR69500
.
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,REG6CODE:
                    *PDCOL:EVERT,*HOFF,PMREDESC;
.
KYR69000  MOVE      ZERO,EXIT
          GOTO      KYR69999
.
KYR69500  UNPACK    SP10,REG6CODE
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYR69999
.
KYR69900  MOVE      TWO,EXIT
KYR69999  RETURN
.
.******************************************************************************
.*                                  KYAT0000              Called by: KYDT0000 *
.*                          Keyin The Admission Type                          *
.******************************************************************************
KYAT0000  MOVE      "62",COL
          MOVE      COL,ECOL
          MOVE      "66",DCOL
          MOVE      "22",EVERT
.
          PACK      CODE,ANSA,SP1
          MOVE      SP70,KEYATYP
.>>>>     MOVE      ATYPE,ADMTYPE           * Default to admission type
          MOVE      ADMTYPE,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY                * Keyin the admission type
          BRANCH    EXIT,KYAT9500,KYAT9900
.
          MOVE      ACODE,KEYATYP
          MOVE      ACODE,ADMTYPE
          MOVE      TDESC,ADMDESC
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,ADMTYPE:
                    *PDCOL:EVERT,*HOFF,ADMDESC;
.
          PACK      KEY5,ANSA,SP1,ADMTYPE
          CALL      RDCODE1                 * Read the codes file
.
.         Validating admission type.
.        
          MOVE      ZERO,FORM1
          MOVE      TCINDC6,FORM1
.
.         MATCH     SP9,CMXCODE
.         IF        @EQUAL
.           MATCH     ANSY,PTMICMXP
.           IF        @EQUAL
.             DISPLAY   *P1:24,*EL,*B,*V2LON,"Casemix Code is not entered for ":
.                       "the admission type.  ";
.             CALL      HITENTER
.             GOTO      KYAT0000
.           ENDIF
.         ELSE
....        IF        FORM1 <> 3 & FORM1 <> 5
....          DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid Admission type for ":
....                    "Casemix Funding Patient.  ";
....          CALL      HITENTER
....          GOTO      KYAT0000
....        ENDIF
.         ENDIF
.
..          MOVE      ZERO,DCFLAG             * Default to overnight
.
KYAT9000  MATCH     ANSC,MODE
          GOTO      KYAT9200 IF NOT EQUAL
          CALL      CALC0000                * Get theatre fees
          CALL      CALM0000                * Get misc.charge
.
KYAT9200  MOVE      ZERO,EXIT
          GOTO      KYAT9999
.
KYAT9500  UNPACK    SP100,ADMTYPE,ADMDESC
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KYAT9999
.
KYAT9900  MOVE      TWO,EXIT
KYAT9999  MOVE      "26",COL
          MOVE      "36",DCOL
          RETURN
+
.******************************************************************************
.*                                  KYPR0000              Called by: KYDT0000 *
.*                            Keyin The Prosthetic                            *
.******************************************************************************
KYPR0000  MOVE      ZERO,EXIT
          MOVE      PROSTHET,KEY8
          KEYIN     *PCOL:21,*V2LON,*RV,*JR,KEY8;
.
          ENDSET    KEY8
          APPEND    SP70,KEY8
          RESET     KEY8
.
          SCAN      EXITCHAR,KEY8
          GOTO      KYPR9500 IF EQUAL       * Exitchar, exit
.
          TYPE      KEY8
          GOTO      KYPR1000 IF NOT EQUAL   * Not numeric, error
.
          MOVE      ZERO,FORM52
          MOVE      KEY8,FORM52
          IF        FORM52<0 | FORM52>99999.99
            GOTO      KYPR1000
          ENDIF
.
          MOVE      FORM52,PROSTHET
          DISPLAY   *PCOL:21,*EL,*V2LON,PROSTHET;
          GOTO      KYPR9000
.
KYPR1000  BEEP
          GOTO      KYPR0000
.
KYPR9000  MOVE      ZERO,EXIT
          GOTO      KYPR9999
.
KYPR9500  MOVE      ONE,EXIT
          GOTO      KYPR9999
KYPR9999  RETURN
+
.******************************************************************************
.*                                  KYPH0000              Called by: KYDT0000 *
.*                            Keyin The Pharmacy                              *
.******************************************************************************
KYPH0000  MOVE      ZERO,EXIT
          MOVE      PHARMACY,KEY8
          KEYIN     *PCOL:22,*V2LON,*RV,*JR,KEY8;
.
          ENDSET    KEY8
          APPEND    SP70,KEY8
          RESET     KEY8
.
          SCAN      EXITCHAR,KEY8
          GOTO      KYPH9500 IF EQUAL       * Exitchar, exit
.
          TYPE      KEY8
          GOTO      KYPH1000 IF NOT EQUAL   * Not numeric, error
.
          MOVE      ZERO,FORM52
          MOVE      KEY8,FORM52
          IF        FORM52<0 | FORM52>99999.99
            GOTO      KYPH1000
          ENDIF
.
          MOVE      FORM52,PHARMACY
          DISPLAY   *PCOL:22,SP20,*PCOL:22,*V2LON,PHARMACY;
          GOTO      KYPH9000
.
KYPH1000  BEEP
          GOTO      KYPH0000
.
KYPH9000  MOVE      ZERO,EXIT
          GOTO      KYPH9999
.
KYPH9500  MOVE      ONE,EXIT
          GOTO      KYPH9999
KYPH9999  RETURN
+
.******************************************************************************
.*                                  KYBT0000              Called by: KYDT0000 *
.*                             Keyin The Bed Type                             *
.******************************************************************************
KYBT0000  MOVE      COL,ECOL
          MOVE      "30",DCOL
          MOVE      "23",EVERT
          PACK      CODE,ANSB,ANST
          MOVE      BEDTYPE,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY                * Keyin the bed type
          BRANCH    EXIT,KYBT9500,KYBT9900
.
          MOVE      ACODE,BEDTYPE
          MOVE      TDESC,BEDDESC
          DISPLAY   *PECOL:EVERT,SP2,SP20,*PECOL:EVERT,*V2LON,BEDTYPE:
                    *PDCOL:EVERT,*HOFF,BEDDESC;
.
KYBT9000  MATCH     ANSC,MODE
          GOTO      KYBT9200 IF NOT EQUAL
          CALL      CALC0000                * Get theatre fees
          CALL      CALM0000                * Get misc.charge
.
KYBT9200  MOVE      ZERO,EXIT
          GOTO      KYBT9999
.
KYBT9500  UNPACK    SP100,BEDTYPE,BEDDESC
          DISPLAY   *PECOL:EVERT,SP20;
          MOVE      ONE,EXIT
          GOTO      KYBT9999
.
KYBT9900  MOVE      TWO,EXIT
KYBT9999  MOVE      "36",DCOL
          RETURN
+
.******************************************************************************
.*                                  KYCC0000              Called by: KYDT0000 *
.*                           Keyin The Casemix Code                           *
.******************************************************************************
KYCC0000  MOVE      COL,ECOL
          MOVE      "20",EVERT
          MOVE      "20",CVERT
          MOVE      DCOL,ECOL1
          MOVE      COL,CCOL
          CALL      KPTCAA00                * Keyin the casemix code
          BRANCH    EXIT,KYCC1000,KYCC9900
          MOVE      PTCACODE,CMXCODE
          PACK      CMXDESC,PTCADES1,SP70
.
KYCC1000  DISPLAY   *PECOL:EVERT,*EL,*V2LON,CMXCODE:
                    *PDCOL:EVERT,*HOFF,CMXDESC;
.
KYCC9000  MATCH     ANSI,MODE
          GOTO      KYCC9200 IF EQUAL       * Get theatre fees
.
.         If casemix code is entered, must use casemix admission type 
.
....      MATCH     SP9,CMXCODE
....      IF        @EQUAL
....        MATCH     ANSY,PTMICMXP
....        IF        @EQUAL
....          DISPLAY   *P1:24,*EL,*B,*V2LON,"Casemix Code is not entered for ":
....                    "the admission type.  ";
....          CALL      HITENTER
....          GOTO      KYCC0000
....        ENDIF
....      ELSE
....        IF        FORM1 <> 3 & FORM1 <> 5
....          DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid Admission type for ":
....                    "Casemix Funding Patient.  ";
....          CALL      HITENTER
....          GOTO      KYCC0000
....        ENDIF
....      ENDIF
.
          CALL      CALC0000                * Get theatre fees
          CALL      CALM0000                * Get misc.charge
.
KYCC9200  MOVE      ZERO,EXIT
          GOTO      KYCC9999
.
KYCC9500  MOVE      ONE,EXIT
          GOTO      KYCC9999
.
KYCC9900  MOVE      TWO,EXIT
KYCC9999  RETURN
+
.******************************************************************************
.*                                  KYAG0000              Called by: KYDT0000 *
.*                          Key in GST on accommodation (y/n)                 *
.*                          1 = YES                                           *
.*                          0 = NO                                            *
.******************************************************************************
KYAG0000  DISPLAY   *P65:23,*HOFF,SP10   
          KEYIN     *P65:23,*V2LON,ACQGST
          REP       UPPLOW,ACQGST
          MATCH     "Y",ACQGST
          IF        @EQUAL
            MOVE      "Yes",ACCGDS   
            CALL      AGST0000
          ELSE
            MATCH     "N",ACQGST
            IF        @EQUAL
              MOVE      "No",ACCGDS   
            ELSE
              BEEP
              GOTO     KYAG0000
            ENDIF
          ENDIF
          DISPLAY   *P65:23,*V2LON,ACCGDS   
KYAG9999  RETURN
+
.******************************************************************************
.*                                  CALC0000                                  *
.*                          Calculate theatre fees                            *
.******************************************************************************
CALC0000  CALL      CKCM0000                * Check if casemix patient
          IF        CMXFLAG = 1
            CALL      CTHF0000              * Get casemix theatre fees
          ELSE
            CALL      NTHF0000              * Get non-casemix theatre fees
          ENDIF
          CALL      GSCL0000                * Get suggested classif. (cat A)
CALC9999  RETURN
+
.******************************************************************************
.*                                  CALM0000                                  *
.*                          Calculate Misc.Charge code                        *
.******************************************************************************
CALM0000  CALL      CKCM0000                * Check if casemix patient
          CALL      CMSC0000              * Get casemix theatre fees
CALM9999  RETURN
+
.******************************************************************************
.*                                  CKCM0000              Called by: KYDT0000 *
.*                          Check If Casemix Patient                          *
.******************************************************************************
CKCM0000  MATCH     SP9,CMXCODE
          GOTO      CKCM9000 IF EQUAL       * Non casemix patient
.
          PACK      KEY18,CLMTYPE,HFCODE,CMXCODE,SP70
          MOVE      ADMDATE,CEFFDATE
          CALL      VALCMXFN                * Validate Casemix funding
          BRANCH    OVRCD,CKCM9000
.
          MOVE      ONE,CMXFLAG             * Casemix flag - using casemix
          GOTO      CKCM9999
.
CKCM9000  MOVE      ZERO,CMXFLAG            * Casemix flag - not using casemix
          GOTO      CKCM9999
.
CKCM9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: ML0000   *
.*                                Print Header                                *
.******************************************************************************
HEAD0000  PACK      KEY8,CCC,CYY,CMM,CDD
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Format the current date
          REP       " 0",CPCDATE
.
          CALL      IBACLOCK
          IF        PRTFLAG=1
            PRINT     *25,"****  COPY OF ESTIMATION ****",*N
          ELSE
            PRINT     *N
          ENDIF
          PRINT     *1,"Date: ",CPCDATE:
                    *30,"Fees Estimation",*N:
                    *1,"Time: ",CTIMEIS,*N:
                    *30,CNAME,*N
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME                 * Format the patient name
          MOVE      PACFNAME,KEY50
.
          PRINT     *1,"Estimate for ",KEY50;
          IF        OPTION=1|OPTION=3
            PRINT     *65,"U/R No ",PURNO;
          ENDIF
          PRINT     *N:
                    *14,PADD1,*N,*14,PADD2,*N,*14,PSUBRB,*31,PPOST:
                    *60,"Quote No",PMFDQUOT,*N
.
          UNPACK    ADMDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Format the admission date
          REP       " 0",CPCDATE
          PRINT     *1,"Estimations for a hospitalisation for ",NONIGHTS:
                       " nights",*N:
                    *1,"based on admission date of ",CPCDATE,*N
.
          PRINT     *1,"Claim Code         : ",*22,CLMTYPE,*32,CLMDESC,*N:
                    *1,"Health Fund        : ",*22,HFCODE,*32,HFDESC,*N:
                    *1,"Health Fund Table  : ",*22,HFTCODE,*32,HFTDESC,*N:
                    *1,"Classification     : ",*22,ADMTYPE,*32,ADMDESC,*N:
                    *1,"Bed Type           : ",*22,BEDTYPE,*32,BEDDESC
          MOVE      "18",CLNO
.
          IF        CMXFLAG=1
            PRINT     *1,"Casemix Code       : ",*22,CMXCODE,*32,CMXDESC
            ADD       "1",CLNO
          ENDIF
.
          MOVE      ZERO,RECNUM
HEAD1000  ADD       ONE,RECNUM
          MOVE      SP10,KEY9
          LOAD      KEY9,RECNUM,THT1CODE,THT2CODE,THT3CODE,THT4CODE,THT5CODE:
                               THT6CODE
          MATCH     SP9,KEY9
          GOTO      HEAD2000 IF EQUAL       * Blank item, exit
.
          PACK      KEY17,KEY9,ADMDATE,SP70
          CALL      PATITMRD                * Read the item file
          BRANCH    OVRCD,HEAD2000
.
          PRINT     *1,"Theatre Fee Item ",RECNUM," : ",*22,KEY9,*32,IDESC
          ADD       "1",CLNO
.
          COMPARE   SIX,RECNUM
          GOTO      HEAD1000 IF LESS        * < 6 items, get next
.
HEAD2000  MOVE      ZERO,RECNUM
HEAD2200  ADD       ONE,RECNUM
          MOVE      SP10,KEY9
          LOAD      KEY9,RECNUM,MIS1CODE,MIS2CODE,MIS3CODE,MIS4CODE,MIS5CODE:
                                MIS6CODE
          MATCH     SP9,KEY9
          GOTO      HEAD9000 IF EQUAL       * Blank item, exit
.
          MOVE      KEY9,MCHARGE
          CALL      GETMSC00
          IF        EXIT=1
            MOVE      SP70,MDESC
          ENDIF
.
          PRINT     *1,"Misc.Charge Code ",RECNUM," : ",*22,KEY9,*32,MDESC
          ADD       "1",CLNO
.
          COMPARE   SIX,RECNUM
          GOTO      HEAD2200 IF LESS        * < 6 items, get next
.
HEAD9000  MOVE      ZERO,EXIT
HEAD9999  RETURN
+
.******************************************************************************
.*                                  GSCL0000              Called by: KYDT0000 *
.*                     Get suggested classification (cat A)                   *
.******************************************************************************
GSCL0000  PACK      KEY18,SP20
          CALL      RSTM0000
          CALL      RKTM0000                * Read first tempfile record
          BRANCH    OVRCD,GSCL9999
.
          COMPARE   ONE,PTCNAUAT
          GOTO      GSCL9999 IF NOT EQUAL
.
          MOVE      KEY9,TEMPITEM
          PACK      KEY17,KEY9,ADMDATE,SP70
          CALL      PATITMRD                * If not in 'patsgcaf'
          BRANCH    OVRCD,GSCL9999
.
          MOVE      ICLSS,ADMTYPE           * Get suggested class
          IF        NONIGHTS=0
            MOVE      PTITDCSC,ADMTYPE
          ENDIF
.
          COMPARE   ONE,PTSGCOPT            * Using suggested class.?
          GOTO      GSCL8000 IF NOT EQUAL
.
          PACK      KEY18,CLMTYPE,HFCODE,KEY9,SP20
          CALL      RDPTSGC1                * Get suggested adm. type
          BRANCH    OVRCD,GSCL8000
          MOVE      PTSGCLSS,ADMTYPE
.
GSCL8000  MATCH     SP70,ADMTYPE
          GOTO      GSCL9000 IF NOT EQUAL
          MOVE      KEYATYP,ADMTYPE
.
GSCL9000  PACK      KEY5,ANSA,SP1,ADMTYPE,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            MOVE      TDESC,ADMDESC
          ENDIF
GSCL9999  RETURN
+
.******************************************************************************
.*                                  NBDF0000              Called by: ML0000   *
.*                          Print Non Casemix Bed Fee                         *
.******************************************************************************
NBDF0000  PRINT     *N,*N:
                    *1,"Accommodation Fee Table":
                    *N,*N:
                    *21,"    Days   ":
                    *34,"Hospital Fee ":
                    *49," Fund Rebate ",*64,"  Fund Gap   "
          ADD       "5",CLNO
.
          MOVE      ZERO,FORM2
          MOVE      ONE,FORM1
          MOVE      ONE,FORM4
          MOVE      SP70,CONTRCID
.
          PACK      KEY23,CLMTYPE,HFCODE,HFTCODE,ADMTYPE,BEDTYPE
          COMPARE   NINE,CFEETYP
          GOTO      NBDF1000 IF EQUAL        * Johns Hopkins bed fees
.
          PACK      KEY9,CLMTYPE,HFCODE,SP70
          CALL      GETCNEFF                 * Get Contract Effective details
          BRANCH    EXIT,NBDF9000
.
          MOVE      SP70,PTHFBCAT
          PACK      KEY14,HFCODE,HFTCODE
          CALL      RDFUND1
          PACK      KEY18,CLMTYPE,HFCODE,PTHFBCAT,ADMTYPE,BEDTYPE
.
NBDF1000  IF        CFEETYP=5
            OPEN      JHSBFEA1,"jhsbfeaf"
            PACK      KEY26,KEY23,SP30
            CALL      RSJHBFE1                * Position on & read the bed fee
          ELSE
            PACK      KEY27,KEY18,SP30
            CALL      RDSBFEE1                * Position on & read the bed fee
          ENDIF
NBDF2000  IF        CFEETYP=5
            CALL      RKJHBFE1
            BRANCH    OVRCD,NBDF3000
            PACK      KEY23A,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE
            MATCH     KEY23,KEY23A
            GOTO      NBDF3000 IF NOT EQUAL
          ELSE
            CALL      RDKBFEE1
            BRANCH    OVRCD,NBDF3000
            PACK      KEY18A,BFCLM,BFHFUND,PTBFHTYP,BFATYPE,BFBTYPE
            MATCH     KEY18,KEY18A
            GOTO      NBDF3000 IF NOT EQUAL
.
            MOVE      PTBFCNID,KEY6           * Contract ID
            MOVE      ADMDATE,CEFFDATE
            CALL      VALCONTR                * Validate Contract ID
            BRANCH    EXIT,NBDF2000
            LOAD      CONTRCID,FORM1,PTBFCNID * save the Contract ID
            ADD       ONE,FORM1
          ENDIF
          GOTO      NBDF6000                * Same bed fee rate, print
.
NBDF3000  ADD       ONE,FORM2
          BRANCH    FORM2,NBDF4000,NBDF5000
.
          DISPLAY   *P1:24,*EL,*B,"No bed fee detail found.  Default not set ":
                                  "up.  ";
          CALL      HITENTER
          GOTO      NBDF9000
.
NBDF4000  PACK      KEY18,CLMTYPE,SP6,SP3,ADMTYPE,BEDTYPE
          PACK      KEY23,CLMTYPE,SP6,SP8,ADMTYPE,BEDTYPE
          GOTO      NBDF1000
.
NBDF5000  PACK      KEY18,PTCNDCLM,SP6,SP3,ADMTYPE,BEDTYPE
          PACK      KEY23,PTCNDCLM,SP6,SP8,ADMTYPE,BEDTYPE
          GOTO      NBDF1000
.
NBDF6000  ASSIGN    BFPAT+BFHF,WRKTOTAL
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            CALL      AGST0000
            ASSIGN    BFPAT+BFHF,WRKTOTGS
            ASSIGN     (WRKTOTGS * IBGEAMNT),WRKAGST
            DIV        "100.00",WRKAGST
            ASSIGN     (BFPAT + WRKAGST),BFPAT
            ASSIGN     (WRKTOTAL + WRKAGST),WRKTOTAL
          ENDIF
.
          IF        BFENDDY=0
            IF        NONIGHTS=0
              MOVE      BFHF,FORM82
              PRINT     *23,"Daycase",*34,WRKTOTAL,*51,FORM82;
              MOVE      BFPAT,FORM82
              PRINT     *66,FORM82
              ADD       "1",CLNO
              MOVE      BFHF,PTHDDREB
              MOVE      ZERO,FORM4
              MOVE      ZERO,PTHDEDAY
              CALL      WRDC0000                * write accommodation charges
            ENDIF
          ELSE
            MOVE      BFHF,FORM82
            PRINT     *21,FORM4," -  ",BFENDDY,*34,WRKTOTAL,*51,FORM82;
            MOVE      BFPAT,FORM82
            PRINT     *66,FORM82
            ADD       "1",CLNO
            MOVE      BFENDDY,PTHDEDAY
            MOVE      BFHF,PTHDDREB
            CALL      WRDC0000                * write accommodation charges
            MOVE      BFENDDY,FORM4
            ADD       ONE,FORM4
          ENDIF
.
          COMPARE   NONIGHTS,BFENDDY
          GOTO      NBDF9000 IF NOT LESS    * Bed days > nights of stay, exit
.
          IF        CFEETYP=5
            CALL      RKJHBFE1                * Read next bed fee file record
            BRANCH    OVRCD,NBDF9000
            PACK      KEY23A,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE
            MATCH     KEY23,KEY23A
            GOTO      NBDF6000 IF EQUAL       * Same bed fee rate, print
          ELSE
            CALL      RDKBFEE1                * Read next bed fee file record
            BRANCH    OVRCD,NBDF9000
            PACK      KEY18A,BFCLM,BFHFUND,PTBFHTYP,BFATYPE,BFBTYPE
            MATCH     KEY18,KEY18A
            GOTO      NBDF9000 IF NOT EQUAL
.
            MATCH     CONTRCID,PTBFCNID
            GOTO      NBDF6000 IF EQUAL       * Same bed fee rate, print
          ENDIF
.
NBDF9000  MOVE      ZERO,EXIT
NBDF9999  RETURN
+
.******************************************************************************
.*                                  NTHF0000              Called by: ML0000   *
.*                        Get Non Casemix Theatre Fee                         *
.******************************************************************************
NTHF0000  CALL      CREA0000                * Create tempfile
          OPEN      TTFILE,FNAMET
.
          MOVE      ZERO,RECNUM
          MOVE      ZERO,THTHOSPT
          MOVE      ZERO,THTFUNDT
          MOVE      ZERO,THTTOTAL
.
. ----- Get the item details -----
.
NTHF1000  MOVE      DCASEFLG,KEY1
          ADD       ONE,RECNUM
          MOVE      SP10,KEY9
          LOAD      KEY9,RECNUM,THT1CODE,THT2CODE,THT3CODE,THT4CODE,THT5CODE:
                               THT6CODE
          MATCH     SP9,KEY9
          GOTO      NTHF9999 IF EQUAL       * Blank item, exit
.
          PACK      KEY17,KEY9,ADMDATE,SP70
          CALL      PATITMRD                * Read the item file
          BRANCH    OVRCD,NTHF9999
.
. ----- Get the default theatre classification -----
.
          MOVE      ZERO,CNTRCEFR
          MOVE      ADMDATE,CEFFDATE
          MOVE      ADMDATE,TSRVDATE
          PACK      KEY18,CLMTYPE,HFCODE,HFTCODE,KEY1,SP20
          CALL      GETTFEES
          IF        EXIT=1
            MOVE      ZERO,TFPAT1
            MOVE      ZERO,TFHF1
          ENDIF
.
. ----- write to tempfile in MBS amount order -----
.
          MOVE      TFPAT1,FORM82
          ADD       TFHF1,FORM82
          MOVE      SP10,XBAND
          CALL      WRTM0000                * write to tempfile
          GOTO      NTHF1000
.
NTHF9999  RETURN
+
.******************************************************************************
.*                                  PNCT0000              Called by: ML0000   *
.*                        Print Non Casemix Theatre Fee                       *
.******************************************************************************
PNCT0000  COMPARE   FOUR,OPTION
          GOTO      PNCT0100 IF EQUAL        * by U/R with regime code
.
          COMPARE   FIVE,OPTION              * by free format with regime code
          GOTO      PNCT0200 IF NOT EQUAL
.
PNCT0100  COMPARE   ZERO,PHARMACY
          GOTO      PNCT3000 IF NOT EQUAL
          GOTO      PNCT9999
.
PNCT0200  PRINT     *N,*N:
                    *1,"Theatre Fees":
                    *N,*N:
                    *23,"  Items  ",*HOFF,*34,"Hospital Fee ":
                    *49," Fund Rebate ",*64,"  Fund Gap   "
          ADD       "5",CLNO
.
. ------  Read through tempfile -----
.
PNCT1000  MOVE      ZERO,RECNUM
          MOVE      SP20,KEY18
          CALL      RSTM0000
.
PNCT2000  ADD       ONE,RECNUM
          CALL      RKTM0000
          BRANCH    OVRCD,PNCT3000
.
          MOVE      ZERO,BFPAT
          LOAD      BFPAT,RECNUM,TFPAT1,TFPAT2,TFPAT3,TFPAT4,TFPAT5,TFPAT6
.
.------ calculate gst on patient amounts
.
          LOAD      RECGSTA,RECNUM,THT1GSTA,THT2GSTA,THT3GSTA,THT4GSTA:
                            THT5GSTA,THT6GSTA
          IF        RECGSTA = 1
            LOAD      RECGSTC,RECNUM,THT1GSTC,THT2GSTC,THT3GSTC,THT4GSTC:
                      THT5GSTC,THT6GSTC
            CALL      TGST0000
            ASSIGN     (BFPAT * IBGEAMNT),WRKTGST
            DIV        "100.00",WRKTGST
            ASSIGN     (BFPAT + WRKTGST),BFPAT
          ENDIF
.
          ADD       BFPAT,THTHOSPT
.
          MOVE      ZERO,BFHF
          LOAD      BFHF,RECNUM,TFHF1,TFHF2,TFHF3,TFHF4,TFHF5,TFHF6
          ADD       BFHF,THTFUNDT
.
. ------  Print theatre fee details -----
          ASSIGN    BFPAT+BFHF,WRKTOTAL
          ADD       WRKTOTAL,THTTOTAL
.
          MOVE      BFHF,FORM82
          PRINT     *23,KEY9,*34,WRKTOTAL,*51,FORM82;
          MOVE      BFPAT,FORM82
          PRINT     *66,FORM82
          CALL      WRTF0000                * write theatre fees to pmsfesaf
          ADD       "1",CLNO
.
          COMPARE   SIX,RECNUM
          GOTO      PNCT2000 IF LESS        * < 6 items, get next
.
PNCT3000  IF        PHARMACY<>0
            PRINT     *23,"Pharmacy",*39,PHARMACY,*69,PHARMACY
            ADD       PHARMACY,THTTOTAL
            ADD       PHARMACY,THTHOSPT
          ENDIF
.
          PRINT     *N:
                    *23,"TOTAL",*34,THTTOTAL,*49,THTFUNDT,*64,THTHOSPT,*N
          ADD       "3",CLNO
          CALL      UND80                   * Print underline
          MOVE      ZERO,EXIT
PNCT9999  RETURN
+
.******************************************************************************
.*                                  PMSC0000              Called by: ML0000   *
.*                        Print Miscellaneous charge                          *
.******************************************************************************
PMSC0000  PRINT     *N,*N:
                    *1,"Prosthetics Costs":
                    *N,*N:
                    *23,"  Items  ",*HOFF,*34,"Hospital Fee ":
                    *49," Fund Rebate ",*64,"  Fund Gap   "
          ADD       "5",CLNO
          MOVE      ZERO,RECNUM
          MOVE      ZERO,MCHHOSPT
          MOVE      ZERO,MCHFUNDT
          MOVE      ZERO,MCHTOTAL
.
PMSC1000  COMPARE   SIX,RECNUM
          GOTO      PMSC2000 IF NOT LESS
          ADD       ONE,RECNUM
          MOVE      SP10,KEY9
          LOAD      KEY9,RECNUM,MIS1CODE,MIS2CODE,MIS3CODE,MIS4CODE,MIS5CODE:
                                MIS6CODE
          MATCH     SP70,KEY9
          GOTO      PMSC1000 IF EQUAL
.
          LOAD      BFPAT,RECNUM,MIS1PCHR,MIS2PCHR,MIS3PCHR:
                                 MIS4PCHR,MIS5PCHR,MIS6PCHR
.
.------ calculate gst on patient amounts
.
          LOAD      RECGSTA,RECNUM,MIS1GSTA,MIS2GSTA,MIS3GSTA,MIS4GSTA:
                            MIS5GSTA,MIS6GSTA
          IF        RECGSTA = 1
            LOAD      RECGSTC,RECNUM,MIS1GSTC,MIS2GSTC,MIS3GSTC,MIS4GSTC:
                      MIS5GSTC,MIS6GSTC
            CALL      TGST0000
            ASSIGN    (BFPAT * IBGEAMNT),WRKTGST
            DIV       "100.00",WRKTGST
            ASSIGN    (BFPAT + WRKTGST),BFPAT
          ENDIF
.

          ADD       BFPAT,THTHOSPT
          ADD       BFPAT,MCHHOSPT
.
          MOVE      ZERO,BFHF
          LOAD      BFHF,RECNUM,MIS1HCHR,MIS2HCHR,MIS3HCHR:
                                MIS4HCHR,MIS5HCHR,MIS6HCHR
          ADD       BFHF,THTFUNDT
          ADD       BFHF,MCHFUNDT
.
. ------  Print theatre fee details -----
          ASSIGN    BFPAT+BFHF,WRKTOTAL
          ADD       WRKTOTAL,THTTOTAL
          ADD       WRKTOTAL,MCHTOTAL
.
          MOVE      BFHF,FORM82
          PRINT     *23,KEY9,*34,WRKTOTAL,*51,FORM82;
          MOVE      BFPAT,FORM82
          PRINT     *66,FORM82
          CALL      WRMF0000
          ADD       "1",CLNO
          GOTO      PMSC1000
.
PMSC2000  IF        PROSTHET<>0
            PRINT     *23,"Prosthetic",*39,PROSTHET,*69,PROSTHET
            ADD       PROSTHET,THTTOTAL
            ADD       PROSTHET,THTHOSPT
            ADD       PROSTHET,MCHTOTAL
            ADD       PROSTHET,MCHHOSPT
          ENDIF
.
          PRINT     *N:
                    *23,"TOTAL",*34,MCHTOTAL,*49,MCHFUNDT,*64,MCHHOSPT,*N
          ADD       "3",CLNO
          CALL      UND80                   * Print underline
          MOVE      ZERO,EXIT
PMSC9999  RETURN
+
.******************************************************************************
.*                                  PREG0000              Called by: ML0000   *
.*                        Print Regime codes                                  *
.******************************************************************************
PREG0000  PRINT     *N,*N:
                    *1,"Regime Code Costs":
                    *N,*N:
                    *23,"  Items  ",*HOFF,*34,"Hospital Fee ":
                    *49," Fund Rebate ",*64,"  Fund Gap   "
          ADD       "5",CLNO
          MOVE      ZERO,RECNUM
          MOVE      ZERO,MCHHOSPT
          MOVE      ZERO,MCHFUNDT
          MOVE      ZERO,MCHTOTAL
.
PREG1000  COMPARE   SIX,RECNUM
          GOTO      PREG2000 IF NOT LESS
          ADD       ONE,RECNUM
          MOVE      SP10,KEY10
          LOAD      KEY10,RECNUM,REG1CODE,REG2CODE,REG3CODE,REG4CODE,REG5CODE:
                                REG6CODE
          MATCH     SP70,KEY10
          GOTO      PREG1000 IF EQUAL
.
          LOAD      BFPAT,RECNUM,REG1PCHR,REG2PCHR,REG3PCHR:
                                 REG4PCHR,REG5PCHR,REG6PCHR
.
          ADD       BFPAT,THTHOSPT
          ADD       BFPAT,MCHHOSPT
.
          MOVE      ZERO,BFHF
          LOAD      BFHF,RECNUM,REG1HCHR,REG2HCHR,REG3HCHR:
                                REG4HCHR,REG5HCHR,REG6HCHR
          ADD       BFHF,THTFUNDT
          ADD       BFHF,MCHFUNDT
.
. ------  Print theatre fee details -----
          ASSIGN    BFPAT+BFHF,WRKTOTAL
          ADD       WRKTOTAL,THTTOTAL
          ADD       WRKTOTAL,MCHTOTAL
.
          MOVE      BFHF,FORM82
          PRINT     *23,KEY10,*34,WRKTOTAL,*51,FORM82;
          MOVE      BFPAT,FORM82
          PRINT     *66,FORM82
          ADD       "1",CLNO
          GOTO      PREG1000
.
PREG2000  PRINT     *N:
                    *23,"TOTAL",*34,MCHTOTAL,*49,MCHFUNDT,*64,MCHHOSPT,*N
          ADD       "3",CLNO
          CALL      UND80                   * Print underline
          MOVE      ZERO,EXIT
PREG9999  RETURN
+
.******************************************************************************
.*                                  NOVR0000              Called by: ML0000   *
.*                      Print Non Casemix Overnight Costs                     *
.******************************************************************************
NOVR0000  PRINT     *N:
                    *1,"Overnight Costs":
                    *N,*N:
                    *20,"No of Nights":
                    *34,"Hospital Amnt":
                    *49," Fund Amount ",*64,"Fund Gap Amnt"
          ADD       "4",CLNO
.
          MOVE      ZERO,FORM2
          MOVE      ONE,FORM1
          MOVE      ONE,FORM4
          MOVE      ZERO,OVRHOSPT
          MOVE      ZERO,OVRFUNDT
          MOVE      ZERO,OVRTOTAL
          MOVE      SP70,CONTRCID
.
          PACK      KEY23,CLMTYPE,HFCODE,HFTCODE,ADMTYPE,BEDTYPE
          COMPARE   NINE,CFEETYP
          GOTO      NOVR1000 IF EQUAL        * Johns Hopkins bed fees
.
          PACK      KEY9,CLMTYPE,HFCODE,SP70
          CALL      GETCNEFF                 * Get Contract Effective details
          BRANCH    EXIT,NOVR9000
.
          MOVE      SP70,PTHFBCAT
          PACK      KEY14,HFCODE,HFTCODE
          CALL      RDFUND1
          PACK      KEY18,CLMTYPE,HFCODE,PTHFBCAT,ADMTYPE,BEDTYPE
.
NOVR1000  IF        CFEETYP=5
            OPEN      JHSBFEA1,"jhsbfeaf"
            PACK      KEY26,KEY23,SP30
            CALL      RSJHBFE1                * Position on & read the bed fee
          ELSE
            PACK      KEY27,KEY18,SP30
            CALL      RDSBFEE1                * Position on & read the bed fee
          ENDIF
NOVR2000  IF        CFEETYP=5
            CALL      RKJHBFE1
            PACK      KEY23A,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE
            MATCH     KEY23,KEY23A
            GOTO      NOVR3000 IF NOT EQUAL
          ELSE
            CALL      RDKBFEE1                  file
            BRANCH    OVRCD,NOVR3000
            PACK      KEY18A,BFCLM,BFHFUND,PTBFHTYP,BFATYPE,BFBTYPE
            MATCH     KEY18,KEY18A
            GOTO      NOVR3000 IF NOT EQUAL
.
            MOVE      ADMDATE,CEFFDATE
            MOVE      PTBFCNID,KEY6           * Contract ID
            CALL      VALCONTR                * Validate Contract ID
            BRANCH    EXIT,NOVR2000
            LOAD      CONTRCID,FORM1,PTBFCNID * save the Contract ID
            ADD       ONE,FORM1
          ENDIF
          GOTO      NOVR6000                * Same bed fee rate, print
.
NOVR3000  ADD       ONE,FORM2
          BRANCH    FORM2,NOVR4000,NOVR5000
          GOTO      NOVR9000
.
NOVR4000  PACK      KEY18,CLMTYPE,SP6,SP3,ADMTYPE,BEDTYPE
          PACK      KEY23,CLMTYPE,SP6,SP8,ADMTYPE,BEDTYPE
          GOTO      NOVR1000
.
NOVR5000  PACK      KEY18,PTCNDCLM,SP6,SP3,ADMTYPE,BEDTYPE
          PACK      KEY23,PTCNDCLM,SP6,SP8,ADMTYPE,BEDTYPE
          GOTO      NOVR1000
.
NOVR6000  MATCH     ANSD,DCASEFLG
          GOTO      NOVR7000 IF NOT EQUAL   * Overnight stay
.
          ADD       BFPAT,OVRHOSPT
          ADD       BFHF,OVRFUNDT

          ASSIGN    OVRHOSPT+OVRFUNDT,OVRTOTAL
.
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            CALL       AGST0000
            ASSIGN     BFPAT + BFHF,OVRTOTGS
            ASSIGN     (OVRTOTGS * IBGEAMNT),WRKOGST
            DIV        "100.00",WRKOGST
            ASSIGN     (OVRHOSPT + WRKOGST),OVRHOSPT
            ASSIGN     (OVRTOTAL + WRKOGST),OVRTOTAL
          ENDIF
.
          ASSIGN    (OVRTOTAL + THTHOSPT+THTFUNDT),OVRTOTAL
          ADD       THTFUNDT,OVRFUNDT
          ASSIGN    (OVRTOTAL-OVRFUNDT),OVRHOSPT
.
          PRINT     *23,"Daycase",*34,OVRTOTAL,*49,OVRFUNDT,*64,OVRHOSPT
          MOVE      ZERO,FORM4
          CALL      WROC0000                * write overnight costs to pmsfesaf
          ADD       "1",CLNO
          GOTO      NOVR9000
.
NOVR7000  COMPARE   ZERO,BFENDDY
          GOTO      NOVR8000 IF EQUAL       * Daycase bed fee, dont print
.
          ADD       BFPAT,OVRHOSPT
          ADD       BFHF,OVRFUNDT
          ASSIGN    OVRHOSPT+OVRFUNDT,OVRTOTAL
.
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            CALL       AGST0000
            ASSIGN     BFPAT + BFHF,OVRTOTGS
            ASSIGN     (OVRTOTGS * IBGEAMNT),WRKOGST
            DIV        "100.00",WRKOGST
            ASSIGN     (OVRHOSPT + WRKOGST),OVRHOSPT
            ASSIGN     (OVRTOTAL + WRKOGST),OVRTOTAL
          ENDIF
.
          ASSIGN    (OVRTOTAL + THTHOSPT+THTFUNDT),OVRTOTAL
          ADD       THTFUNDT,OVRFUNDT
          ASSIGN    (OVRTOTAL-OVRFUNDT),OVRHOSPT
.
          PRINT     *24,FORM4,*34,OVRTOTAL,*49,OVRFUNDT,*64,OVRHOSPT
          CALL      WROC0000                * write overnight costs to pmsfesaf
          ADD       "1",CLNO
          ADD       ONE,FORM4
          SUB       THTHOSPT,OVRHOSPT
          SUB       THTFUNDT,OVRFUNDT
.
          COMPARE   "60",CLNO
          CALL      PNEW0000 IF NOT LESS    * > 60 lines, print new page
.
          COMPARE   FORM4,BFENDDY
          GOTO      NOVR8000 IF LESS        * Bed days < bed count
.
          COMPARE   FORM4,NONIGHTS
          GOTO      NOVR7000 IF NOT LESS    * Nights of stay > bed count
.
NOVR8000  COMPARE   FORM4,NONIGHTS
          GOTO      NOVR9000 IF LESS        * Bed days < nights of stay, exit
.
          IF        CFEETYP=5
            CALL      RKJHBFE1                * Read next bed fee file record
            BRANCH    OVRCD,NOVR9000
            PACK      KEY23A,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE
            MATCH     KEY23,KEY23A
            GOTO      NOVR7000 IF EQUAL       * Same bed fee rate, print
          ELSE
            CALL      RDKBFEE1                * Read next bed fee file record
            BRANCH    OVRCD,NOVR9000
            PACK      KEY18A,BFCLM,BFHFUND,PTBFHTYP,BFATYPE,BFBTYPE
            MATCH     KEY18,KEY18A
            GOTO      NOVR9000 IF NOT EQUAL
.
            MATCH     CONTRCID,PTBFCNID
            GOTO      NOVR7000 IF EQUAL       * Same bed fee rate, print
          ENDIF
.
NOVR9000  MOVE      ZERO,EXIT
NOVR9999  RETURN
+
.******************************************************************************
.*                                  CBDF0000              Called by: ML0000   *
.*                            Print Casemix Bed Fee                           *
.******************************************************************************
CBDF0000  PRINT     *N,*N:
                    *1,"Accommodation Fee Table":
                    *N,*N:
                    *21,"    Days   ":
                    *34,"Hospital Fee ":
                    *49," Fund Rebate ",*64,"  Fund Gap   "
          ADD       "5",CLNO
.
          MOVE      ZERO,FORM2
          MOVE      ONE,FORM4
          MOVE      ZERO,WRKTOTAL
.
          COMPARE   ONE,DCFLAG
          GOTO      CBDF1000 IF NOT EQUAL   * Overnight stay
.
. ----- Daycase -----
.
          PACK      KEY27,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE
          CALL      RDPTLSD1                * Read the lumpsum daycase file
          BRANCH    OVRCD,CBDF0200
.
          ASSIGN    PTLSLPAT+PTLSLREB,WRKTOTAL
.
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            CALL       AGST0000
            ASSIGN    PTLSLPAT+PTLSLREB,WRKTOTGS
            ASSIGN     (WRKTOTGS * IBGEAMNT),WRKAGST
            DIV        "100.00",WRKAGST
            ASSIGN     (PTLSLPAT + WRKAGST),PTLSLPAT
            ASSIGN     (WRKTOTAL + WRKAGST),WRKTOTAL
          ENDIF
.
          MOVE      PTLSLREB,FORM82
          PRINT     *1,"Lump Sum Charge",*34,WRKTOTAL,*51,FORM82;
          MOVE      PTLSLPAT,FORM82
          PRINT     *66,FORM82
          CALL      WRLS0000                * write lumpsum to pmsfesaf
          ADD       "1",CLNO
          ADD       ONE,FORM2
.
CBDF0200  PACK      KEY30,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE,BEDTYPE
          CALL      RDPTASD1                * Read the addition charge d/c file
          BRANCH    OVRCD,CBDF7000
.
          ASSIGN    PTADDPAT+PTADDREB,WRKTOTAL
.
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            CALL       AGST0000
            ASSIGN    PTADDPAT+PTADDREB,WRKTOTGS
            ASSIGN     (WRKTOTGS * IBGEAMNT),WRKAGST
            DIV        "100.00",WRKAGST
            ASSIGN     (PTADDPAT + WRKAGST),PTADDPAT
            ASSIGN     (WRKTOTAL + WRKAGST),WRKTOTAL
          ENDIF
.
          MOVE      PTADDREB,FORM82
          PRINT     *1,"Additional Charge",*23,"Daycase",*34,WRKTOTAL:
                    *51,FORM82;
          MOVE      PTADDPAT,FORM82
          PRINT     *66,FORM82
          MOVE      ZERO,FORM4
          MOVE      ZERO,FORM4B
          CALL      WRAC0000                * write additional chrg to pmsfesaf
          ADD       "1",CLNO
          GOTO      CBDF9000
.
. ----- Overnight stay -----
.
CBDF1000  PACK      KEY27,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE
          CALL      RDPTHLF1                * Read the lumpsum overnight file
          BRANCH    OVRCD,CBDF3000
.
          MOVE      ZERO,FORM5
          MOVE      NONIGHTS,FORM5
          COMPARE   FORM5,PTHLCOFF
          GOTO      CBDF2800 IF LESS        * Outlier cut off day < ngts of stay
.
          COMPARE   ZERO,PTHLCOFF
          IF        @EQUAL
            COMPARE   ONE,FORM5
            GOTO      CBDF2800 IF EQUAL
          ENDIF
.
. ----- Read the outlier file -----
.
          PACK      KEY31,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE,SP30
          CALL      RSPTLDF1                * Position on & read the daily fee
CBDF2000  CALL      RKPTLDF1                  outliers file
          BRANCH    OVRCD,CBDF5000
.
          MATCH     CONTRCID,PTLDCNID
          GOTO      CBDF5000 IF NOT EQUAL   * Different contract id
.
          MATCH     CLMTYPE,PTLDCLMN
          GOTO      CBDF5000 IF NOT EQUAL   * Different claim type
.
          MATCH     HFCODE,PTLDHFND
          GOTO      CBDF5000 IF NOT EQUAL   * Different health fund
.
          MATCH     TABTYPE,PTLDTABT
          GOTO      CBDF5000 IF NOT EQUAL   * Different table type
.
          MATCH     CMXCODE,PTLDCASM
          GOTO      CBDF5000 IF NOT EQUAL   * Different casemix code
.
          ADD       ONE,FORM2
          PRINT     *1,"Daily Charge";
.
          ASSIGN    PTLDDPAT+PTLDDREB,WRKTOTAL
.
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            CALL       AGST0000
            ASSIGN    PTLDDPAT+PTLDDREB,WRKTOTGS
            ASSIGN     (WRKTOTGS * IBGEAMNT),WRKAGST
            DIV        "100.00",WRKAGST
            ASSIGN     (PTLDDPAT + WRKAGST),PTLDDPAT
            ASSIGN     (WRKTOTAL + WRKAGST),WRKTOTAL
          ENDIF
.
          MOVE      PTLDDREB,FORM82
          PRINT     *21,FORM4," - ",PTLDEDAY,*34,WRKTOTAL,*51,FORM82;
          MOVE      PTLDDPAT,FORM82
          PRINT     *66,FORM82
          ADD       "1",CLNO
          MOVE      PTLDDREB,PTHDDREB
          MOVE      PTLDEDAY,PTHDEDAY
          CALL      WRDC0000                * write daily charges to pmsfesaf
          MOVE      PTLDEDAY,FORM4
          ADD       ONE,FORM4
.
          COMPARE   NONIGHTS,PTLDEDAY
          GOTO      CBDF5000 IF NOT LESS    * Endding day > nights of stay
          GOTO      CBDF2000
.
CBDF2800  ASSIGN    PTHLLPAT+PTHLLREB,WRKTOTAL
.
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            CALL       AGST0000
            ASSIGN    PTHLLPAT+PTHLLREB,WRKTOTGS
            ASSIGN     (WRKTOTGS * IBGEAMNT),WRKAGST
            DIV        "100.00",WRKAGST
            ASSIGN     (PTHLLPAT + WRKAGST),PTHLLPAT
            ASSIGN     (WRKTOTAL + WRKAGST),WRKTOTAL
          ENDIF
.
          MOVE      PTHLLREB,FORM82
          PRINT     *1,"Lump Sum Charge",*34,WRKTOTAL,*51,FORM82;
          MOVE      PTHLLPAT,FORM82
          PRINT     *66,FORM82
          MOVE      PTHLLREB,PTLSLREB
          CALL      WRLS0000                * write lumpsum to pmsfesaf
          ADD       "1",CLNO
          ADD       ONE,FORM2
.
. ----- Read the inlier file -----
.
CBDF3000  PACK      KEY31,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE,SP30
          CALL      RSPTHDF1                * Position on & read the daily fee
CBDF4000  CALL      RKPTHDF1                  inliers file
          BRANCH    OVRCD,CBDF5000
.
          MATCH     CONTRCID,PTHDCNID
          GOTO      CBDF5000 IF NOT EQUAL   * Different contract ID
.
          MATCH     CLMTYPE,PTHDCLMN
          GOTO      CBDF5000 IF NOT EQUAL   * Different claim type
.
          MATCH     HFCODE,PTHDHFND
          GOTO      CBDF5000 IF NOT EQUAL   * Different health fund
.
          MATCH     TABTYPE,PTHDTABT
          GOTO      CBDF5000 IF NOT EQUAL   * Different table type
.
          MATCH     CMXCODE,PTHDCASM
          GOTO      CBDF5000 IF NOT EQUAL   * Different casemix code
.
          ADD       ONE,FORM2
          PRINT     *1,"Daily Charge";
.
          ASSIGN    PTHDDPAT+PTHDDREB,WRKTOTAL
.
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            CALL       AGST0000
            ASSIGN    PTHDDPAT+PTHDDREB,WRKTOTGS
            ASSIGN     (WRKTOTGS * IBGEAMNT),WRKAGST
            DIV        "100.00",WRKAGST
            ASSIGN     (PTHDDPAT + WRKAGST),PTHDDPAT
            ASSIGN     (WRKTOTAL + WRKAGST),WRKTOTAL
          ENDIF
.
          MOVE      PTHDDREB,FORM82
          PRINT     *21,FORM4," - ",PTHDEDAY,*34,WRKTOTAL,*51,FORM82;
          MOVE      PTHDDPAT,FORM82
          PRINT     *66,FORM82
          CALL      WRDC0000                 * write daily charge to pmsfesaf
          ADD       "1",CLNO
          MOVE      PTHDEDAY,FORM4
          ADD       ONE,FORM4
.
          COMPARE   NONIGHTS,PTHDEDAY
          GOTO      CBDF5000 IF NOT LESS    * Endding day > nights of stay
          GOTO      CBDF4000
.
. ----- Print the additional charges -----
.
CBDF5000  MOVE      ONE,FORM4
          PACK      KEY34,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE,BEDTYPE,SP30
          CALL      RSPTAFE1                * Position on & read the additional
CBDF6000  CALL      RKPTAFE1                  charges overnight file
          BRANCH    OVRCD,CBDF7000
.
          MATCH     CONTRCID,PTFECNID
          GOTO      CBDF7000 IF NOT EQUAL   * Different contract ID
.
          MATCH     CLMTYPE,PTFECLMN
          GOTO      CBDF7000 IF NOT EQUAL   * Different claim type
.
          MATCH     HFCODE,PTFEHFND
          GOTO      CBDF7000 IF NOT EQUAL   * Different health fund
.
          MATCH     TABTYPE,PTFETABT
          GOTO      CBDF7000 IF NOT EQUAL   * Different table type
.
          MATCH     CMXCODE,PTFECASM
          GOTO      CBDF7000 IF NOT EQUAL   * Different casemix code
.
          MATCH     BEDTYPE,PTFEBTYP
          GOTO      CBDF7000 IF NOT EQUAL   * Different bed type
.
          ADD       ONE,FORM2
          PRINT     *1,"Additional Charge";
.
          ASSIGN    PTFEDPAT+PTFEDREB,WRKTOTAL
.
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            CALL       AGST0000
            ASSIGN    PTFEDPAT+PTFEDREB,WRKTOTGS
            ASSIGN     (WRKTOTGS * IBGEAMNT),WRKAGST
            DIV        "100.00",WRKAGST
            ASSIGN     (PTFEDPAT + WRKAGST),PTFEDPAT
            ASSIGN     (WRKTOTAL + WRKAGST),WRKTOTAL
          ENDIF
.
          MOVE      PTFEDREB,FORM82
          PRINT     *21,FORM4," - ",PTFEEDAY,*34,WRKTOTAL,*51,FORM82;
          MOVE      PTFEDPAT,FORM82
          PRINT     *66,FORM82
          MOVE      PTFEEDAY,FORM4B
          MOVE      PTFEDREB,PTADDREB
          CALL      WRAC0000                * write additional chrg to pmsfesaf
          ADD       "1",CLNO
          MOVE      PTFEEDAY,FORM4
          ADD       ONE,FORM4
.
          COMPARE   NONIGHTS,PTFEEDAY
          GOTO      CBDF7000 IF NOT LESS    * Endding day > nights of stay
          GOTO      CBDF6000
.
CBDF7000  COMPARE   ZERO,FORM2
          GOTO      CBDF9000 IF NOT EQUAL   * Additional charges printed, exit
.
CBDF8000  DISPLAY   *P1:24,*EL,*B,"Accommodation fees not setup for casemix ":
                    "patients.  ";
          CALL      HITENTER
.
CBDF9000  MOVE      ZERO,EXIT
CBDF9999  RETURN
+
.******************************************************************************
.*                                  CTHF0000              Called by: ML0000   *
.*                          Get Casemix Theatre Fee                           *
.******************************************************************************
CTHF0000  CALL      CREA0000                * Create tempfile
          OPEN      TTFILE,FNAMET
.
          MOVE      ZERO,RECNUM
          MOVE      ZERO,THTHOSPT
          MOVE      ZERO,THTFUNDT
          MOVE      ZERO,THTTOTAL
.
          MOVE      ZERO,TCFORM6
          PACK      KEY5,ANSC,ANSL,CLMTYPE
          CALL      RDCODE1                 * Read the codes file
          BRANCH    OVRCD,CTHF9999
.
          MOVE      TCFORM6,HFBAND
          MATCH     SP6,HFCODE
          IF        !@EQUAL
            PACK      KEY14,HFCODE,ZERO8
            CALL      RDFUND1               * Read the health fund file
            BRANCH    OVRCD,CTHF9999
.
            MOVE      "03",KEY2     * check HF history for Theatre charging ind.
            PACK      KEY17,HFCODE,KEY2,ADMDATE,SP70
            CALL      PATDDHRD
          ENDIF
.
. ----- Get the item details -----
.
CTHF0500  MOVE      ZERO,FORM2
          ADD       ONE,RECNUM
          MOVE      SP10,KEY9
          LOAD      KEY9,RECNUM,THT1CODE,THT2CODE,THT3CODE,THT4CODE,THT5CODE:
                                THT6CODE
          MATCH     SP9,KEY9
          GOTO      CTHF9999 IF EQUAL       * Blank item, exit
.
          PACK      KEY17,KEY9,ADMDATE,SP70
          CALL      PATITMRD                * Read the item file
          BRANCH    OVRCD,CTHF9999
.
          MOVE      SP5,KEY3
          LOAD      KEY3,HFBAND,IBAND1,IBAND2,IBAND3,IBAND4,IBAND5:
                                IBAND6,IBAND7,IBAND8,IBAND9,IBAND10:
                                IBAND11,IBAND12,IBAND13,IBAND14,IBAND15:
                                IBAND16
.
          MOVE      ONE,FORM2               * Default to first sequence number
          MOVE      ZERO,ERRFLAG
          CALL      CSTF0000                * Get casemix theatre fee
          IF        EXIT=1
            MOVE      ZERO,PTCTDPAT
            MOVE      ZERO,PTCTDREB
          ENDIF
.
. ----- write to tempfile in MBS amount order -----
.
          MOVE      PTCTDPAT,FORM82
          ADD       PTCTDREB,FORM82

          MOVE      KEY3,XBAND
          CALL      WRTM0000                * write to tempfile
          GOTO      CTHF0500
.
CTHF9999  RETURN
+
.******************************************************************************
.*                                  CMSC0000              Called by: ML0000   *
.*                          Get Casemix Miscellaneous charge                  *
.******************************************************************************
CMSC0000  CALL      CRET0000                * Create tempfile
          OPEN      MCFILE,FNAMEM
          MOVE      ZERO,RECNUM
.
CMSC1000  COMPARE   SIX,RECNUM
          GOTO      CMSC9999 IF EQUAL
.
          ADD       ONE,RECNUM
          MOVE      SP10,KEY9
          LOAD      KEY9,RECNUM,MIS1CODE,MIS2CODE,MIS3CODE,MIS4CODE,MIS5CODE:
                                MIS6CODE
          MATCH     SP70,KEY9
          GOTO      CMSC1000 IF EQUAL
.
          MOVE      KEY9,MCHARGE
          CALL      GETMSC00                * Get misc.charge
          BRANCH    EXIT,CMSC2000
.
          COMPARE   ONE,CMXFLAG
          GOTO      CMSC4000 IF NOT EQUAL
          COMPARE   ZERO,PTMCCFCY
          GOTO      CMSC2000 IF EQUAL            * No charge on all items
.
          PACK      KEY9,MCHARGE
          CALL      RDTEMP1
          IF        OVRCD = 1
            MOVE      MCHARGE,XCHARGE
            MOVE      ONE,XMCCNT
            CALL      WRTEMP1
          ELSE
            ADD       ONE,XMCCNT
            CALL      UPTEMP1
          ENDIF
.
          COMPARE   PTMCCFCY,XMCCNT            * charge from item number ?
          GOTO      CMSC2000 IF LESS           * no charge
          GOTO      CMSC4000
.
CMSC2000  MOVE      ZERO,MPATPOR                 * no charge
          MOVE      ZERO,MHFPOR
.
CMSC4000  MOVE      MPATPOR,FORM12P2
          STORE     FORM12P2,RECNUM,MIS1PCHR,MIS2PCHR,MIS3PCHR,MIS4PCHR:
                                    MIS5PCHR,MIS6PCHR
.
          MOVE      MHFPOR,FORM12P2
          STORE     FORM12P2,RECNUM,MIS1HCHR,MIS2HCHR,MIS3HCHR,MIS4HCHR:
                                    MIS5HCHR,MIS6HCHR
.
          GOTO      CMSC1000
.
CMSC9999  RETURN
+
.------------------------------------------------------------
. Get the appropriate miscellaneous charges record
.------------------------------------------------------------
GETMSC00  MOVE      ZERO,EXIT
          MOVE      MCHARGE,KEY9
.
          UNPACK    SP20,PTHFBCAT      * change "H/F Table" to "Table Type"
          PACK      KEY14,HFCODE,HFTCODE,SP20
          CALL      RDFUND1            * "Table Type code" now in PTHFBCAT

          PACK      KEY29,CLMTYPE,HFCODE,PTHFBCAT,KEY9,CURRDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file 
          COMPARE   ZERO,EXIT
          GOTO      GETMSC99 IF EQUAL
.
.                                           * - try a blank health fund
GETMSC10  PACK      KEY29,CLMTYPE,SP6,SP3,KEY9,CURRDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file 
          COMPARE   ZERO,EXIT
          GOTO      GETMSC99 IF EQUAL
.
.                                           * - last chance, try default claim
GETMSC20  MOVE      PTCNDCLM,MCLMCOD
          COMPARE   ONE,IBCNMHOS
          GOTO      GETMSC40 IF NOT EQUAL
          BRANCH    OPTION,GETMSC30,GETMSC40,GETMSC40,GETMSC30,GETMSC40
.
GETMSC30  IF        IBCNMHOS=1 
            MOVE      AADMNO,KEY8
            CALL      RDPMVX11
            IF        OVRCD=0
              PACK      KEY3,PMVXMHOS         * Hospital id
              CALL      RDPTHSP1
              IF        OVRCD=0
                MOVE      PTHSDCLM,MCLMCOD
              ENDIF
            ENDIF
          ENDIF
.
GETMSC40  PACK      KEY29,MCLMCOD,SP6,SP3,KEY9,CURRDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file 
          COMPARE   ZERO,EXIT
          GOTO      GETMSC99 IF EQUAL

.                 * EXIT is set - 0=OK, 1=invalid, inactive, not in date range 
GETMSC99  RETURN
+
.******************************************************************************
.*                                  CALR0000              Called by: ML0000   *
.*                          Get Regime charges                                *
.******************************************************************************
CALR0000  MOVE      ZERO,RECNUM
.
CALR1000  COMPARE   SIX,RECNUM
          GOTO      CALR9999 IF EQUAL
.
          ADD       ONE,RECNUM
          MOVE      SP10,KEY10
          LOAD      KEY10,RECNUM,REG1CODE,REG2CODE,REG3CODE,REG4CODE,REG5CODE:
                                 REG6CODE
          MATCH     SP70,KEY10
          GOTO      CALR1000 IF EQUAL
.
          PACK      KEY13,KEY10,SP70
          CALL      RSPMREG1
CALR2000  CALL      RKPMREG1
          BRANCH    OVRCD,CALR1000
          MATCH     KEY10,PMREREGM          * Same code?
          GOTO      CALR1000 IF NOT EQUAL
          MATCH     "  0",PMREUNIQ
          GOTO      CALR2000 IF EQUAL       * Header record
.
          MOVE      PMREITMN,SAVEITMN
          MATCH     "1",PMREITYP            * Misc.Item code?
          GOTO      CALR3000 IF EQUAL
.
.         It's another regime code
.
          PACK      SAVKEY13,PMREREGM,PMREUNIQ,SP70
          CALL      CHKR0000                * Get items for this regime code
          MOVE      SAVKEY13,KEY13
          CALL      RDPMREG1
          GOTO      CALR2000
.
CALR3000  PACK      MCHARGE,PMREITMN
          CALL      GETMSC00                * Get misc.charge
          IF        EXIT=1
            MOVE      ZERO,MPATPOR
            MOVE      ZERO,MHFPOR
            MOVE      ZERO,PTMCGSTA
          ENDIF
.
          IF        PTMCGSTA=1
            MOVE      PTMCGSTC,RECGSTC
            CALL      TGST0000
            ASSIGN    (MPATPOR * IBGEAMNT),WRKTGST
            DIV       "100.00",WRKTGST
            ASSIGN    (MPATPOR + WRKTGST),MPATPOR
          ENDIF
.
          LOAD      FORM12P2,RECNUM,REG1PCHR,REG2PCHR,REG3PCHR,REG4PCHR:
                                    REG5PCHR,REG6PCHR
          ADD       MPATPOR,FORM12P2
          STORE     FORM12P2,RECNUM,REG1PCHR,REG2PCHR,REG3PCHR,REG4PCHR:
                                    REG5PCHR,REG6PCHR
.
          LOAD      FORM12P2,RECNUM,REG1HCHR,REG2HCHR,REG3HCHR,REG4HCHR:
                                    REG5HCHR,REG6HCHR
          ADD       MHFPOR,FORM12P2
          STORE     FORM12P2,RECNUM,REG1HCHR,REG2HCHR,REG3HCHR,REG4HCHR:
                                    REG5HCHR,REG6HCHR
.
          GOTO      CALR2000
.
CALR9999  RETURN
+
.******************************************************************************
.         Get misc.charge items of a regime code
.******************************************************************************
CHKR0000  PACK      KEY13,SAVEITMN,SP70
          CALL      RSPMREG1
CHKR1000  CALL      RKPMREG1
          BRANCH    OVRCD,CHKR9999
          MATCH     SAVEITMN,PMREREGM          * Same code?
          GOTO      CHKR9999 IF NOT EQUAL
          MATCH     "  0",PMREUNIQ
          GOTO      CHKR1000 IF EQUAL       * Header record
.
          MATCH     "2",PMREITYP            * Misc.Item code?
          GOTO      CHKR1000 IF EQUAL     * Can't have reg inside a regime code
.
          PACK      MCHARGE,PMREITMN
          CALL      GETMSC00                * Get misc.charge
          IF        EXIT=1
            MOVE      ZERO,MPATPOR
            MOVE      ZERO,MHFPOR
            MOVE      ZERO,PTMCGSTA
          ENDIF
.
          IF        PTMCGSTA=1
            MOVE      PTMCGSTC,RECGSTC
            CALL      TGST0000
            ASSIGN    (MPATPOR * IBGEAMNT),WRKTGST
            DIV       "100.00",WRKTGST
            ASSIGN    (MPATPOR + WRKTGST),MPATPOR
          ENDIF
.
          LOAD      FORM12P2,RECNUM,REG1PCHR,REG2PCHR,REG3PCHR,REG4PCHR:
                                    REG5PCHR,REG6PCHR
          ADD       MPATPOR,FORM12P2
          STORE     FORM12P2,RECNUM,REG1PCHR,REG2PCHR,REG3PCHR,REG4PCHR:
                                    REG5PCHR,REG6PCHR
.
          LOAD      FORM12P2,RECNUM,REG1HCHR,REG2HCHR,REG3HCHR,REG4HCHR:
                                    REG5HCHR,REG6HCHR
          ADD       MHFPOR,FORM12P2
          STORE     FORM12P2,RECNUM,REG1HCHR,REG2HCHR,REG3HCHR,REG4HCHR:
                                    REG5HCHR,REG6HCHR
          GOTO      CHKR1000
.
CHKR9999  RETURN
+
.******************************************************************************
.*                                  PCTF0000              Called by: ML0000   *
.*                          Print Casemix Theatre Fee                         *
.******************************************************************************
PCTF0000  PRINT     *N,*N:
                    *1,"Theatre Fees":
                    *N,*N:
                    *23,"  Items  ",*34,"Hospital Fee ":
                    *49," Fund Rebate ",*64,"  Fund Gap   "
          ADD       "5",CLNO
          MOVE      ZERO,THTHOSPT
          MOVE      ZERO,THTFUNDT
          MOVE      ZERO,THTTOTAL
.
. ------  Read through tempfile ------
.
PCTF1000  MOVE      ZERO,RECNUM
          MOVE      SP20,KEY18
          CALL      RSTM0000
.
PCTF2000  ADD       ONE,RECNUM
          CALL      RKTM0000
          BRANCH    OVRCD,PCTF3000
.
          MOVE      RECNUM,FORM2             * Sequence number
          MOVE      ONE,ERRFLAG             * No error message
          MOVE      XBAND,KEY3
          CALL      CSTF0000                * Get casemix theatre fee
          IF        EXIT=1
            MOVE      ZERO,PTCTDPAT
            MOVE      ZERO,PTCTDREB
          ENDIF
.
.------ calculate gst on patient amounts
.
          LOAD      RECGSTA,RECNUM,THT1GSTA,THT2GSTA,THT3GSTA,THT4GSTA:
                            THT5GSTA,THT6GSTA
          IF        RECGSTA = 1
            LOAD      RECGSTC,RECNUM,THT1GSTC,THT2GSTC,THT3GSTC,THT4GSTC:
                      THT5GSTC,THT6GSTC
            CALL      TGST0000
            ASSIGN     PTCTDPAT + PTCTDREB,WRKTOTGS
            ASSIGN     (WRKTOTGS * IBGEAMNT),WRKTGST
            DIV        "100.00",WRKTGST
            ASSIGN     (PTCTDPAT + WRKTGST),PTCTDPAT
          ENDIF
.
          ADD       PTCTDPAT,THTHOSPT
          ADD       PTCTDREB,THTFUNDT
          ASSIGN    PTCTDPAT+PTCTDREB,WRKTOTAL
          ADD       WRKTOTAL,THTTOTAL
.
          MOVE      PTCTDREB,FORM82
          PRINT     *23,KEY9,*34,WRKTOTAL,*51,FORM82;
          MOVE      PTCTDPAT,FORM82
          PRINT     *66,FORM82
          MOVE      PTCTDREB,BFHF
          CALL      WRTF0000                * write theatre fees to pmsfesaf
          ADD       "1",CLNO
.
          COMPARE   SIX,RECNUM
          GOTO      PCTF2000 IF LESS        * < 6 items, get next
.
PCTF3000  
          IF        PHARMACY<>0
            PRINT     *23,"Pharmacy",*39,PHARMACY,*69,PHARMACY
            ADD       PHARMACY,THTTOTAL
            ADD       PHARMACY,THTHOSPT
          ENDIF
.
          PRINT     *N:
                    *23,"TOTAL",*34,THTTOTAL,*49,THTFUNDT,*64,THTHOSPT,*N
          ADD       "3",CLNO
          CALL      UND80                   * Print underline
          MOVE      ZERO,EXIT
PCTF9999  RETURN
+
.******************************************************************************
.*                                  COVR0000              Called by: ML0000   *
.*                        Print Casemix Overnight Costs                       *
.******************************************************************************
COVR0000  PRINT     *N:
                    *1,"Overnight Costs":
                    *N,*N:
                    *20,"No of Nights":
                    *34,"Hospital Amnt":
                    *49," Fund Amount ",*64,"Fund Gap Amnt"
          ADD       "4",CLNO
.
          MOVE      ONE,FORM4
.
          MOVE      ZERO,OVRHOSPT
          MOVE      ZERO,OVRFUNDT
          MOVE      ZERO,OVRTOTAL
          MOVE      ZERO,PTLDEDAY
          MOVE      ZERO,PTHDEDAY
          MOVE      ZERO,PTFEEDAY
.
          COMPARE   ONE,DCFLAG
          GOTO      COVR1000 IF NOT EQUAL   * Overnight stay
.
. ----- Daycase -----
.
          PACK      KEY27,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE
          CALL      RDPTLSD1                * Read the lumpsum daycase file
          BRANCH    OVRCD,COVR0100
.
          ADD       PTLSLPAT,OVRHOSPT
          ADD       PTLSLREB,OVRFUNDT
.
COVR0100  PACK      KEY30,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE,BEDTYPE
          CALL      RDPTASD1                * Read the addition charge d/c file
          BRANCH    OVRCD,COVR0200
.
          ADD       PTADDPAT,OVRHOSPT
          ADD       PTADDREB,OVRFUNDT
COVR0200  ASSIGN    OVRHOSPT+OVRFUNDT,OVRTOTAL
.
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            CALL       AGST0000
            ASSIGN     PTFEDPAT + PTFEDREB,OVRTOTGS
            ASSIGN     (OVRTOTGS * IBGEAMNT),WRKOGST
            DIV        "100.00",WRKOGST
            ASSIGN     (OVRHOSPT + WRKOGST),OVRHOSPT
            ASSIGN     (OVRTOTAL + WRKOGST),OVRTOTAL
          ENDIF
.
          ASSIGN    (OVRTOTAL + THTHOSPT+THTFUNDT),OVRTOTAL
          ADD       THTFUNDT,OVRFUNDT
          ASSIGN    (OVRTOTAL-OVRFUNDT),OVRHOSPT
.
          PRINT     *23,"Daycase",*34,OVRTOTAL,*49,OVRFUNDT,*64,OVRHOSPT
          MOVE      ZERO,FORM4
          CALL      WROC0000                * write overnight costs to pmsfesaf
          ADD       "1",CLNO
          GOTO      COVR9000
.
. ----- Overnight stay -----
.
COVR1000  MOVE      ZERO,PTHLCOFF
          PACK      KEY27,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE
          CALL      RDPTHLF1                * Read the lumpsum overnight file
          BRANCH    OVRCD,COVR4000
.
.         If no of night <= cutoff, no lumpsum
.
          IF        NONIGHTS>PTHLCOFF
            ADD       PTHLLPAT,OVRHOSPT     * lumpsum 
            ADD       PTHLLREB,OVRFUNDT
          ENDIF
.
COVR2000  COMPARE   NONIGHTS,PTHLCOFF
          GOTO      COVR4000 IF LESS        * Outlier cut off day < ngts of stay
.
. ----- Read the outlier file -----
.
          COMPARE   FORM4,PTLDEDAY
          GOTO      COVR3000 IF NOT LESS    * Endding day > bed count
.
          IF        FORM4=1
            PACK      KEY31,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE,SP30
            CALL      RSPTLDF1              * Position on the daily fee out file
          ENDIF
.
          CALL      RKPTLDF1                * Read next daily fee outliers file
          BRANCH    OVRCD,COVR3800
.
          MATCH     CONTRCID,PTLDCNID
          GOTO      COVR3800 IF NOT EQUAL   * Different Contract ID
.
          MATCH     CLMTYPE,PTLDCLMN
          GOTO      COVR3800 IF NOT EQUAL   * Different claim type
.
          MATCH     HFCODE,PTLDHFND
          GOTO      COVR3800 IF NOT EQUAL   * Different health fund
.
          MATCH     TABTYPE,PTLDTABT
          GOTO      COVR3800 IF NOT EQUAL   * Different table type
.
          MATCH     CMXCODE,PTLDCASM
          GOTO      COVR3800 IF NOT EQUAL   * Different casemix code
.
COVR3000  ADD       PTLDDPAT,OVRHOSPT
          ADD       PTLDDREB,OVRFUNDT
          GOTO      COVR6000
.
COVR3800  MOVE      ZERO,PTLDEDAY
          MOVE      ZERO,PTLDDPAT
          MOVE      ZERO,PTLDDREB
          GOTO      COVR6000
.
. ----- Read the inlier file -----
.
COVR4000  COMPARE   FORM4,PTHDEDAY
          GOTO      COVR5000 IF NOT LESS    * Endding day > bed count 
.
          IF        FORM4=1
            PACK      KEY31,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE,SP30
            CALL      RSPTHDF1              * Position on the daily fee in file
          ENDIF
.
          CALL      RKPTHDF1                * Read next daily fee inliers file
          BRANCH    OVRCD,COVR5200
.
          MATCH     CONTRCID,PTHDCNID
          GOTO      COVR5200 IF NOT EQUAL   * Different contract ID
.
          MATCH     CLMTYPE,PTHDCLMN
          GOTO      COVR5200 IF NOT EQUAL   * Different claim type
.
          MATCH     HFCODE,PTHDHFND
          GOTO      COVR5200 IF NOT EQUAL   * Different health fund
.
          MATCH     TABTYPE,PTHDTABT
          GOTO      COVR5200 IF NOT EQUAL   * Different table type
.
          MATCH     CMXCODE,PTHDCASM
          GOTO      COVR5200 IF NOT EQUAL   * Different casemix code
.
COVR5000  ADD       PTHDDPAT,OVRHOSPT
          ADD       PTHDDREB,OVRFUNDT
          GOTO      COVR6000
.
COVR5200  MOVE      ZERO,PTHDEDAY
          MOVE      ZERO,PTHDDPAT
          MOVE      ZERO,PTHDDREB
.
. ----- Print the additional charges -----
.
COVR6000  COMPARE   FORM4,PTFEEDAY
          GOTO      COVR7000 IF NOT LESS     * Endding day > bed count 
.
          IF        FORM4=1
            PACK      KEY34,CONTRCID,CLMTYPE,HFCODE,TABTYPE,CMXCODE,BEDTYPE,SP30
            CALL      RSPTAFE1              * Position on add charge over file
          ENDIF
.
          CALL      RKPTAFE1                * Read the add charge over file
          BRANCH    OVRCD,COVR7800
.
          MATCH     CONTRCID,PTFECNID
          GOTO      COVR7800 IF NOT EQUAL   * Different contract ID
.
          MATCH     CLMTYPE,PTFECLMN
          GOTO      COVR7800 IF NOT EQUAL   * Different claim type
.
          MATCH     HFCODE,PTFEHFND
          GOTO      COVR7800 IF NOT EQUAL   * Different health fund
.
          MATCH     TABTYPE,PTFETABT
          GOTO      COVR7800 IF NOT EQUAL   * Different table type
.
          MATCH     CMXCODE,PTFECASM
          GOTO      COVR7800 IF NOT EQUAL   * Different casemix code
.
          MATCH     BEDTYPE,PTFEBTYP
          GOTO      COVR7800 IF NOT EQUAL   * Different bed type
.
COVR7000  ADD       PTFEDPAT,OVRHOSPT
          ADD       PTFEDREB,OVRFUNDT
          GOTO      COVR8000
.
COVR7800  MOVE      ZERO,PTFEEDAY
          MOVE      ZERO,PTFEDPAT
          MOVE      ZERO,PTFEDREB
.
COVR8000  ASSIGN    OVRHOSPT+OVRFUNDT,OVRTOTAL
.
          MATCH     ANSY,ACQGST
          IF        @EQUAL
            CALL       AGST0000
            ASSIGN     (OVRTOTAL * IBGEAMNT),WRKOGST
            DIV        "100.00",WRKOGST
            ASSIGN     (OVRTOTAL + WRKOGST),OVRTOTAL
          ENDIF
.
          ASSIGN    (OVRTOTAL + THTHOSPT+THTFUNDT),OVRTOTAL
          ADD       THTFUNDT,OVRFUNDT
          ASSIGN    (OVRTOTAL-OVRFUNDT),OVRHOSPT
.
          PRINT     *24,FORM4,*34,OVRTOTAL,*49,OVRFUNDT,*64,OVRHOSPT
          CALL      WROC0000                * write overnight costs to pmsfesaf
          ADD       "1",CLNO
          ADD       ONE,FORM4
          SUB       THTHOSPT,OVRHOSPT
          SUB       THTFUNDT,OVRFUNDT
          COMPARE   "60",CLNO
          CALL      PNEW0000 IF NOT LESS    * > 60 lines, print new page
.
          COMPARE   FORM4,NONIGHTS
          GOTO      COVR2000 IF NOT LESS    * Nights of stay > bed count
.
COVR9000  MOVE      ZERO,EXIT
COVR9999  RETURN
+
.******************************************************************************
.*                                  TAIL0000              Called by: ML0000   *
.*                                 Print Tail                                 *
.******************************************************************************
TAIL0000  PRINT     *N,*N:
                    *1,"THIS IS ONLY AN ESTIMATION - ":
                    "TOTAL PRICE IS GST INCLUSIVE":
                    *N,*N:
                    *1,PTCNQUM1,*N:
                    *1,PTCNQUM2
.
TAIL9000  MOVE      ZERO,EXIT
TAIL9999  RETURN
+
.******************************************************************************
.*                                  PNEW0000              Called by: NOVR0000 *
.*                               Print New Page                               *
.******************************************************************************
PNEW0000  PRINT     *N:
                    *18,"***** Estimation Continued On Next Page *****",*N,*F
.
          PACK      KEY8,CCC,CYY,CMM,CDD
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Format the current date
          REP       " 0",CPCDATE
.
          CALL      IBACLOCK
          IF        PRTFLAG=1
            PRINT     *25,"****  COPY OF ESTIMATION ****"
          ELSE
            PRINT     *N
          ENDIF
          PRINT     *1,"Date: ",CPCDATE:
                    *30,"Fees Estimation",*N:
                    *1,"Time: ",CTIMEIS,*N:
                    *30,CNAME,*N
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME                 * Format the patient name
          MOVE      PACFNAME,KEY50
.
          PRINT     *1,"Estimate for ",KEY50;
          IF        OPTION=1|OPTION=3
            PRINT     *65,"U/R No ",PURNO;
          ENDIF
          PRINT     *N:
                    *14,PADD1,*N,*14,PADD2,*N,*14,PSUBRB,*31,PPOST:
                    *60,"Quote No",PMFDQUOT,*N
.
          PRINT     *N:
                    *1,"Overnight Costs":
                    *N,*N:
                    *20,"No of Nights":
                    *34,"Hospital Amnt":
                    *49," Fund Amount ",*64,"Fund Gap Amnt"
          MOVE      "14",CLNO
.
PNEW9000  MOVE      ZERO,EXIT
PNEW9999  RETURN
+
.******************************************************************************
.*                       Routines To Keep PATSRCH Happy                       *
.******************************************************************************
GETSVAR   RETURN
+
.******************************************************************************
.*                       Get casemix theatre fee                              *
.******************************************************************************
CSTF0000  MOVE      ZERO,EXIT
          MOVE      ZERO,FORM1
          PACK      KEY33,CONTRCID,CLMTYPE,HFCODE,TABTYPE,KEY3,SP9,DCFLAG,FORM2
CSTF4500  CALL      RDPTCTF2                * Read the DRG/MBS theatre fee file
          COMPARE   ZERO,OVRCD
          GOTO      CSTF9999 IF EQUAL       * Valid record found, print details
.
. ----- Combination not setup, try with different defaults -----
.
          ADD       ONE,FORM1
          BRANCH    FORM1,CSTF5000,CSTF5500
          GOTO      CSTF7000
.
. ----- Try combination without health fund code -----
.
CSTF5000  PACK      KEY33,CONTRCID,CLMTYPE,SP6,SP3,KEY3,SP9,DCFLAG,FORM2
          GOTO      CSTF4500
.
. ----- Try combination with zero claim type & no health code -----
.
CSTF5500  PACK      KEY33,CONTRCID,PTCNDCLM,SP6,SP3,KEY3,SP9,DCFLAG,FORM2
          GOTO      CSTF4500
.
. ----- Error -----
.
CSTF7000  BRANCH    ERRFLAG,CSTF9999
          DISPLAY   *P1:24,*EL,*B,"Unable to get theatre fee details for ":
                    *V2LON,KEY9,*HOFF,".  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
CSTF9999  RETURN
+
.******************************************************************************
. ------  Get Theatre Fee GST Rate---
.******************************************************************************
TGST0000  MOVE     ZERO,IBGEAMNT            * Initialise GST percentage amount
          OPEN     IBAGEDA1,"ibagedaf"
.
          MOVE     ZERO,IBGEAMNT             * zero GST percentage
          PACK     KEY8,CCC,CYY,CMM,CDD
          REP      " 0",KEY8
          PACK     KEY14,RECGSTC,KEY8
          CALL     RDIBGE1
          COMPARE  ZERO,OVRCD
          GOTO     TGST9000 IF EQUAL         * found GST amount for current date
.
          CALL     RPIBGE1                   * read previous record
          BRANCH   OVRCD,TGST8000
.
          MATCH    RECGSTC,IBGECODE         * Same code ?
          GOTO     TGST9000 IF EQUAL
.
TGST8000  MOVE     ZERO,IBGEAMNT
.
TGST9000  CLOSE    IBAGEDA1
TGST9999  RETURN
+
.******************************************************************************
. ------  Get Accommodation GST -----
.******************************************************************************
AGST0000  MOVE     ZERO,IBGEAMNT            * Initialise GST percentage amount
          COMPARE  TWO,IBCNUGST
          GOTO     AGST9999 IF NOT EQUAL    * not using Aust.GST
.
          OPEN     IBAGEDA1,"ibagedaf"
.
          MATCH    ANSY,ACQGST              * check the admission GST
          GOTO     AGST9000 IF NOT EQUAL    * no accommodation charge
.
          MOVE     ZERO,IBGEAMNT             * zero GST percentage
          PACK     KEY8,CCC,CYY,CMM,CDD
          REP      " 0",KEY8
          PACK     KEY14,PTCNAGST,KEY8
          CALL     RDIBGE1
          COMPARE  ZERO,OVRCD
          GOTO     AGST9000 IF EQUAL         * found GST amount for current date
.
          CALL     RPIBGE1                   * read previous record
          BRANCH   OVRCD,AGST8000
.
          MATCH    PTCNAGST,IBGECODE         * Same code ?
          GOTO     AGST9000 IF EQUAL
.
AGST8000  MOVE     ZERO,IBGEAMNT
.
AGST9000  CLOSE    IBAGEDA1
AGST9999  RETURN
.
.******************************************************************************
. ------  Write to tempfile in MBS amount order ------
.******************************************************************************
WRTM0000  MOVE      "99999999.99",XAMT
          SUB       FORM82,XAMT
.
          MOVE      "9999",XMBS
          SUB       IAMT,XMBS
.
          MOVE      SP10,DXAMT
          MOVE      SP10,DXMBS
          MOVE      XAMT,DXAMT
          MOVE      XMBS,DXMBS
          MOVE      RECNUM,DUNIQ
.
          PACK      KEY18,DXAMT,DXMBS,DUNIQ
          WRITE     TTFILE,KEY18;DXAMT,DXMBS,DUNIQ,KEY9,XBAND:
                                 TFPAT1,TFPAT2,TFPAT3,TFPAT4,TFPAT5,TFPAT6:
                                 TFHF1,TFHF2,TFHF3,TFHF4,TFHF5,TFHF6
WRTM9999  RETURN
.
RSTM0000  RESET     KEY18
          READ      TTFILE,KEY18;;
          RETURN
.
RKTM0000  MOVE      ZERO,OVRCD
          READKS    TTFILE;DXAMT,DXMBS,DUNIQ,KEY9,XBAND:
                                 TFPAT1,TFPAT2,TFPAT3,TFPAT4,TFPAT5,TFPAT6:
                                 TFHF1,TFHF2,TFHF3,TFHF4,TFHF5,TFHF6
          GOTO      OVERCOND IF OVER
RKTM9999  RETURN
+
.******************************************************************************
.*                       Deleting an indexed file                             *
.******************************************************************************
KILL0000  
.         DISPLAY   *P1:24,*EL,*P22:24,*V2LON:
.                   "** Deleting Temporary Indexed File ** ";
          CLOSE     TTFILE
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAMET,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          DISPLAY   *P1:24,*EL;
KILL9999  RETURN
+
.******************************************************************************
.*                       Deleting an indexed file                             *
.******************************************************************************
KILM0000  
.         DISPLAY   *P1:24,*EL,*P22:24,*V2LON:
.                   "** Deleting Temporary Indexed File ** ";
          CLOSE     MCFILE
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAMEM,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          DISPLAY   *P1:24,*EL;
KILM9999  RETURN
+
.******************************************************************************
.*                       Creating an indexed file                             *
.******************************************************************************
CREA0000  CALL      KILL0000                * deleting temporary file
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAMET,CMDLINE
          APPEND    " 126 U1-18",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.>>>>     DISPLAY   *P1:9,*EF;
CREA9999  RETURN
+
.******************************************************************************
.*                       Creating an indexed file                             *
.******************************************************************************
CRET0000  CALL      KILM0000                * deleting temporary file
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAMEM,CMDLINE
          APPEND    " 14 U1-9",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
CRET9999  RETURN
.
.****************************************************************************
.  KGST0000 - Check if GST code need to be entered only for Aust.GST and the
.             GST flag is unknown for the item.
.****************************************************************************
KGST0000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*85,IBCNUGST
          COMPARE   TWO,IBCNUGST           * Using Aust.GST ?
          GOTO      KGST9000 IF NOT EQUAL  * no.
.
          COMPARE   TWO,PTITGSTA           * Unknown GST ?
          GOTO      KGST9000 IF NOT EQUAL
.
          OPEN      IBAGSTA1,"ibagstaf"
          OPEN      IBAGSTA2,"ibagstaf"
          CALL      GETSCR00
          BOXCLR    10,15,70,20
          BOX       16,10,15,70,20
KGST0200  MOVE      SP1,ANS
          KEYIN     *P17:17,"Is GST Payable (Y/N) ? : ",ANS;
          REP       UPPLOW,ANS
          MOVE      ANS,PTITGSTA
.
          MATCH     ANSY,ANS
          GOTO      KGST2000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      KGST3000 IF EQUAL
.
          BEEP
          GOTO      KGST0200
.
KGST2000  MOVE      ONE,PTITGSTA          * GST Payable
          GOTO      KGST4000
.
KGST3000  MOVE      ZERO,PTITGSTA         * GST Free
          GOTO      KGST5000
.
KGST4000  MOVE      PTITGSTC,IBGSCODE     * Default from item file
          DISPLAY   *P17:19,"             GST Code  : "
          MOVE      CCOL,SAVCOL
          MOVE      CVERT,SAVVERT
          MOVE      "41",CCOL
          MOVE      "19",CVERT
          CALL      KIBGSA00              * Keyin GST Code
.
          MATCH     SP6,IBGSCODE
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*V2LON,*B:
                      "GST Code is mandatory for GST payable Item. ";
            CALL      HITENTER
            GOTO      KGST4000
          ENDIF
          MOVE      IBGSCODE,PTITGSTC
          MOVE      SAVCOL,CCOL
          MOVE      SAVVERT,CVERT
.
KGST5000  BOXCLR    10,15,70,20
          CALL      PUTSCR00
KGST9000  CLOSE     IBAGSTA1
          CLOSE     IBAGSTA2
KGST9999  RETURN
+
.****************************************************************************
.  MGST0000 - Check if GST code need to be entered only for Aust.GST and the
.             GST flag is unknown for the item.
.****************************************************************************
MGST0000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*85,IBCNUGST
          COMPARE   TWO,IBCNUGST           * Using Aust.GST ?
          GOTO      MGST9000 IF NOT EQUAL  * no.
.
          COMPARE   TWO,PTMCGSTA           * Unknown GST ?
          GOTO      MGST9000 IF NOT EQUAL
.
          OPEN      IBAGSTA1,"ibagstaf"
          OPEN      IBAGSTA2,"ibagstaf"
          CALL      GETSCR00
          BOXCLR    10,15,70,20
          BOX       16,10,15,70,20
MGST0200  MOVE      SP1,ANS
          KEYIN     *P17:17,"Is GST Payable (Y/N) ? : ",ANS;
          REP       UPPLOW,ANS
          MOVE      ANS,PTITGSTA
.
          MATCH     ANSY,ANS
          GOTO      MGST2000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      MGST3000 IF EQUAL
.
          BEEP
          GOTO      MGST0200
.
MGST2000  MOVE      ONE,PTMCGSTA          * GST Payable
          GOTO      MGST4000
.
MGST3000  MOVE      ZERO,PTMCGSTA         * GST Free
          GOTO      MGST5000
.
MGST4000  MOVE      PTMCGSTC,IBGSCODE     * Default from item file
          DISPLAY   *P17:19,"             GST Code  : "
          MOVE      CCOL,SAVCOL
          MOVE      CVERT,SAVVERT
          MOVE      "41",CCOL
          MOVE      "19",CVERT
          CALL      KIBGSA00              * Keyin GST Code
.
          MATCH     SP6,IBGSCODE
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*V2LON,*B:
                      "GST Code is mandatory for GST payable Item. ";
            CALL      HITENTER
            GOTO      MGST4000
          ENDIF
          MOVE      IBGSCODE,PTMCGSTC
          MOVE      SAVCOL,CCOL
          MOVE      SAVVERT,CVERT
.
MGST5000  BOXCLR    10,15,70,20
          CALL      PUTSCR00
MGST9000  CLOSE     IBAGSTA1
          CLOSE     IBAGSTA2
MGST9999  RETURN
.
.****************************************************************************
.  ENOP0000 - Enquiry options                                                
.****************************************************************************
ENOP0000  MOVE      ZERO,EXIT
          MOVE      ZERO,OPTION
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = By U/R Number":
                    *P1:6,*V2LON,"2",*HOFF," = By Surname":
                    *P1:8,"Select Option : ";
ENOP1000  KEYIN     *P17:8,*V2LON,*DV,UNDLN2,*P17:8,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      ENOP9500 IF EQUAL
.
          BRANCH    OPTION,ENOP2000,ENOP3000
.
          BEEP
          GOTO      ENOP1000
.
ENOP2000  DISPLAY   *P51:2,*V2LON,*+," - Enquiry by U/R Number";
          GOTO      ENOP9000
.
ENOP3000  DISPLAY   *P51:2,*V2LON,*+," - Enquiry by Surname";
          GOTO      ENOP9000
.
ENOP9000  MOVE      ZERO,EXIT
          GOTO      ENOP9999
.
ENOP9500  MOVE      ONE,EXIT
.
ENOP9999  RETURN
+
.****************************************************************************
.  PENQ0000 - Process Enquiry                                                
.****************************************************************************
PENQ0000  BRANCH    OPTION,PENQ1000,PENQ2000
.
PENQ1000  CALL      ENQR0000                     * Enquiry by U/R number
          BRANCH    EXIT,PENQ9500
          GOTO      PENQ9000
.
PENQ2000  CALL      ENQS0000                     * Enquiry by surname
          BRANCH    EXIT,PENQ9500
          GOTO      PENQ9000
.
PENQ90000 MOVE      ZERO,EXIT
          GOTO      PENQ9999
.
PENQ9500  MOVE      ONE,EXIT
.
PENQ9999  RETURN
+
.****************************************************************************
.  ENQR0000 - Enquiry for a previous quote by u/r number                     
.****************************************************************************
ENQR0000  MOVE      ZERO,PRTFLAG
          CALL      KYUR0000                  * keyin the UR number
          BRANCH    EXIT,ENQR9999
.
          CALL      KYQT0000                  * keyin the quote number
          BRANCH    EXIT,ENQR0000
.
          CALL      DBCK0000                  * display background
          CALL      DSVL0000                  * display quote variables
.
          CALL      PRNT0000                  * display options, print or next
          IF        PRTFLAG=0
            GOTO      ENQR0000
          ENDIF
.
ENQR9999  RETURN
+
.****************************************************************************
.  ENQS0000 - Enquiry for a previous quote by surname                        
.****************************************************************************
ENQS0000  MOVE      ZERO,PRTFLAG
          CALL      KSUR0000                  * keyin the surname search
          BRANCH    EXIT,ENQS9999
.
          CALL      KYQS0000                  * keyin the quote number
          BRANCH    EXIT,ENQS0000
.
          CALL      DBCK0000                  * display background
          CALL      DSVL0000                  * display quote variables
.
          CALL      PRNT0000                  * display options, print or next
          IF        PRTFLAG=0
            GOTO      ENQS0000
          ENDIF
.
ENQS9999  RETURN
+
.****************************************************************************
.  KYQT0000 - Keyin the quote number for this patient u/r 
.****************************************************************************
KYQT0000  MOVE      SP70,QUOTENQ
          KEYIN     *P1:5,"Quote Number: ",QUOTENQ
.
          PACK      QUOTENQ,QUOTENQ,SP70
          MATCH     SP70,QUOTENQ
          GOTO      KYQT9000 IF EQUAL
.
          MATCH     QUEST,QUOTENQ             * search for quotes
          GOTO      KYQT5000 IF EQUAL
.
          SQUEEZE   QUOTENQ
          MOVE      QUOTENQ,FQUOTENQ
          MOVE      FQUOTENQ,QUOTENQ
KYQT1000  PACK      KEY12,QUOTENQ,SP20
          CALL      RDPMFED1
          IF        OVRCD<>0
            DISPLAY   *P1:24,*V2LON,"Quote does not exist. ",*HOFF;
            CALL      HITENTER
            GOTO      KYQT0000
          ELSE
            GOTO      KYQT9999                * valid record
          ENDIF
.
KYQT5000  DISPLAY   *P3:6,*ULON,*V2LON,"Quote Number":
                    *P17:6,"Admission Date"
.
          MOVE      ZERO,COUNT
.
          MOVE      SEVEN,CVERT
          MOVE      THREE,CCOL
          PACK      KEY20,PURNO,SP20
          CALL      RSPMFED2
KYQT6000  CALL      RKPMFED2
          BRANCH    OVRCD,KYQT7000
.
          MATCH     PURNO,PMFDURNO
          GOTO      KYQT7000 IF NOT EQUAL
.
          MATCH     "9",PMFDQUOT
          GOTO      KYQT6000 IF EQUAL         * Skip IFC record
.
          UNPACK    PMFDADAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          COMPARE   TWENTY3,CVERT
          IF        @EQUAL
            ADD       THIRTY1,CCOL
            MOVE      SEVEN,CVERT
            DISPLAY   *PCCOL:6,*ULON,*V2LON,"Quote Number":
                      *HOFF,SP5,*ULON,*V2LON,"Admission Date"
          ENDIF
.
          DISPLAY   *PCCOL:CVERT,PMFDQUOT,SP5,CPCDATE
          ADD       ONE,CVERT
          ADD       ONE,COUNT
          GOTO      KYQT6000
.
KYQT7000  IF        COUNT=0
            DISPLAY   *P1:24,*V2LON,"No previous quotes for this patient. ";
            CALL      HITENTER
            GOTO      KYQT9000
          ENDIF
.
          GOTO      KYQT0000
.
KYQT9000  MOVE      ONE,EXIT
.
KYQT9999  RETURN
+
.****************************************************************************
.  KYQS0000 - Keyin the quote number for this patient surname search
.****************************************************************************
KYQS0000  MOVE      SP70,QUOTENQ
          KEYIN     *P1:5,"Quote Number: ",QUOTENQ
.
          PACK      QUOTENQ,QUOTENQ,SP70
          MATCH     SP70,QUOTENQ
          GOTO      KYQS9000 IF EQUAL
.
          MATCH     QUEST,QUOTENQ             * search for quotes
          GOTO      KYQS5000 IF EQUAL
.
          SQUEEZE   QUOTENQ
          MOVE      QUOTENQ,FQUOTENQ
          MOVE      FQUOTENQ,QUOTENQ
KYQS1000  PACK      KEY12,QUOTENQ,SP20
          CALL      RDPMFED1
          IF        OVRCD<>0
            DISPLAY   *P1:24,*V2LON,"Quote does not exist. ",*HOFF;
            CALL      HITENTER
            GOTO      KYQS0000
          ELSE
            MOVE      PMFNTITL,PTITL
            MOVE      PMFNSNAM,PSNAME
            MOVE      PMFNGNAM,PGNAME
            MOVE      PMFNADD1,PADD1
            MOVE      PMFNADD2,PADD2
            MOVE      PMFNSUBR,PSUBRB
            MOVE      PMFNPOST,PPOST
            GOTO      KYQS9999                * valid record
          ENDIF
.
KYQS5000  DISPLAY   *P3:6,*ULON,*V2LON,"Quote Number":
                    *P17:6,"Admission Date":
                    *P33:6,"Quote Name"
.
          MOVE      ZERO,COUNT
.
          MOVE      SEVEN,CVERT
          MOVE      THREE,CCOL
          PACK      KEY32,SRCHSUR,SP20
          CALL      RSPMFEN2
KYQS6000  CALL      RKPMFEN2
          BRANCH    OVRCD,KYQS7000
.
          MATCH     SRCHSUR,PMFNSNAM
          GOTO      KYQS7000 IF NOT EQUAL
.
          MATCH     SP25,SRCHGIV
          GOTO      KYQS6500 IF EQUAL
.
          MATCH     SRCHGIV,PMFNGNAM
          GOTO      KYQS6000 IF NOT EQUAL
.
KYQS6500  PACK      PMFDADAT,SP30 
          PACK      KEY12,PMFNQUOT
          CALL      RDPMFED1 
          BRANCH    OVRCD,KYQS6000
          UNPACK    PMFDADAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      PMFNSNAM,PACSNAME
          MOVE      PMFNGNAM,PACGNAME
          MOVE      PMFNTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
KYQS6600  COMPARE   TWENTY3,CVERT
          IF        @EQUAL
            DISPLAY   *P1:24,"(",*V2LON,"C",*HOFF,")ontinue, ":
                             "(",*V2LON,"N",*HOFF,")ext page : "
            KEYIN     *P27:24,*V2LON,DIM1
. 
            REPLACE     UPPLOW,DIM1
.
            MATCH       ANSC,DIM1
            GOTO        KYQS7000 IF EQUAL
.
            MATCH       ANSN,DIM1
            IF          @EQUAL
              MOVE      SEVEN,CVERT
              MOVE      THREE,CCOL
              DISPLAY   *P1:7,*EF
            ENDIF
.
            BEEP
            GOTO        KYQS6600
          ENDIF
.
          DISPLAY   *PCCOL:CVERT,PMFNQUOT,SP5,CPCDATE,*P33:CVERT,PACFNAME
          ADD       ONE,CVERT
          DISPLAY   *PCCOL:CVERT,*P33:CVERT,PMFNADD1,SP2,PMFNSUBR
          ADD       ONE,CVERT
          ADD       ONE,COUNT
          GOTO      KYQS6000
.
KYQS7000  IF        COUNT=0
            DISPLAY   *P1:24,*V2LON,"No previous quotes for this patient. ";
            CALL      HITENTER
            GOTO      KYQS9000
          ENDIF
.
          GOTO      KYQS0000
.
KYQS9000  MOVE      ONE,EXIT
.
KYQS9999  RETURN
+
.****************************************************************************
+
.****************************************************************************
.  DSVL0000 - Display the quote variables             
.****************************************************************************
DSVL0000  DISPLAY   *P27:9,PMFDNONS       * no of nights
          MOVE      PMFDNONS,NONIGHTS
.
          UNPACK    PMFDADAT,CCENT,CYEAR,CMON,CDAY  * admission date
          CALL      PACDATE
          DISPLAY   *P27:10,CPCDATE
          PACK      ADMDATE,PMFDADAT
.
          PACK      KEY14,PMFDHFUN,ZERO8,SP20       * health fund
          CALL      RDFUND1
          IF        OVRCD=0
            DISPLAY   *P27:11,PMFDHFUN,SP5,HFNAME
            PACK      HFCODE,PMFDHFUN
            PACK      HFDESC,HFNAME
          ENDIF
.
          PACK      KEY14,PMFDHFUN,PMFDHFTB,SP20
          CALL      RDFUND1
          IF        OVRCD=0
            DISPLAY   *P27:12,PMFDHFTB,SP5,HFNAME
            PACK      HFTCODE,PMFDHFTB
            PACK      HFTDESC,HFNAME
          ENDIF
.
          MOVE      ONE,FORM1
          MOVE      TEN3,CVERT
          PACK      KEY17,PMFDQUOT,SP20
          CALL      RSPMFES1
DSVL1000  CALL      RKPMFES1
          BRANCH    OVRCD,DSVL1500
.
          MATCH     PMFDURNO,PMFSURNO
          GOTO      DSVL1500 IF NOT EQUAL
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      DSVL1500 IF NOT EQUAL
.
          COMPARE   THREE,PMFSRTYP
          GOTO      DSVL1000 IF NOT EQUAL
.
          DISPLAY   *P27:CVERT,PMFSTHIT
          STORE     PMFSTHIT,FORM1,THT1CODE,THT2CODE,THT3CODE,THT4CODE:
                             THT5CODE,THT6CODE
          ADD       ONE,FORM1
          ADD       ONE,CVERT
          GOTO      DSVL1000
.
DSVL1500  UNPACK    SP100,MIS1CODE,MIS2CODE,MIS3CODE,MIS4CODE,MIS5CODE,MIS6CODE
          MOVE      ONE,FORM1
          PACK      KEY17,PMFDQUOT,SP20
          CALL      RSPMFES1
DSVL1750  CALL      RKPMFES1
          BRANCH    OVRCD,DSVL2000
.
          MATCH     PMFDURNO,PMFSURNO
          GOTO      DSVL2000 IF NOT EQUAL
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      DSVL2000 IF NOT EQUAL
.
          COMPARE   SIX,PMFSRTYP
          GOTO      DSVL1750 IF NOT EQUAL
.
          DISPLAY   *P27:CVERT,PMFSTHIT
          STORE     PMFSTHIT,FORM1,MIS1CODE,MIS2CODE,MIS3CODE,MIS4CODE:
                             MIS5CODE,MIS6CODE
          ADD       ONE,FORM1
          ADD       ONE,CVERT
          GOTO      DSVL1750
.
DSVL2000  PACK      KEY9,PMFDCMCD,SP10
          CALL      RDPTCMC1
          IF        OVRCD=0
            DISPLAY   *P27:19,PMFDCMCD,SP5,PTCADES1
            PACK      CMXCODE,PMFDCMCD,SP10
            PACK      CMXDESC,PTCADES1,SP70
            PACK      CLMTYPE,PMFDCLTY,SP10
            PACK      HFCODE,HFCODE,SP10
            CALL      CKCM0000            * check if valid casemix
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,PMFDCLTY
          CALL      RDCODE1
          IF        OVRCD=0
            DISPLAY   *P27:20,PMFDCLTY,SP5,TDESC
            PACK      CLMTYPE,PMFDCLTY
            PACK      CLMDESC,TDESC
          ENDIF
.
          PACK      KEY5,ANSB,ANST,PMFDBDTY
          CALL      RDCODE1
          IF        OVRCD=0
            DISPLAY   *P27:21,PMFDBDTY,SP5,TDESC
            PACK      BEDTYPE,PMFDBDTY
            PACK      BEDDESC,TDESC
          ENDIF
.
          PACK      KEY5,ANSA,SP1,PMFDATYP
          CALL      RDCODE1
          IF        OVRCD=0
            DISPLAY   *P27:22,PMFDATYP,SP5,TDESC
            PACK      ADMTYPE,PMFDATYP
            PACK      ADMDESC,TDESC
          ENDIF
.
          COMPARE   ONE,PMFDAGST
          IF        @EQUAL
            DISPLAY   *P27:23,"Yes"
          ELSE
            DISPLAY   *P27:23,"No"
          ENDIF 
.
DSVL9999  RETURN
+
.****************************************************************************
.  PRNT0000 - Display options, print or next
.****************************************************************************
PRNT0000  KEYIN     *P1:24,"(",*V2LON,"P",*HOFF,")rint, (",*V2LON,"N":
                    *HOFF,")ext ? ",ANS
.
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS
          GOTO      PRNT9999 IF EQUAL
.
          MATCH     ANSP,ANS
          GOTO      PRNT0000 IF NOT EQUAL
.
          MOVE      ONE,PRTFLAG
.
PRNT9999  RETURN
+
.******************************************************************************
.*                                  PBFE0000              Called by: ML0000   *
.*                  Print Bed Fee from enquiry option                         *
.******************************************************************************
PBFE0000  PRINT     *N,*N:
                    *1,"Accommodation Fee Table":
                    *N,*N:
                    *21,"    Days   ":
                    *34,"Hospital Fee ":
                    *49," Fund Rebate ",*64,"  Fund Gap   "
          ADD       "5",CLNO
.
          PACK      KEY17,PMFDQUOT,SP20
          CALL      RSPMFES1
PBFE1000  CALL      RKPMFES1
          BRANCH    OVRCD,PBFE9999
.
          MATCH     PURNO,PMFSURNO
          GOTO      PBFE9999 IF NOT EQUAL
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      PBFE9999 IF NOT EQUAL
.
          COMPARE   ONE,PMFSRTYP
          IF        @EQUAL
            ASSIGN    (PMFSLUMH-PMFSLUMF),FUNDGAP
            PRINT     *1,"Lump Sum Charge",*32,PMFSLUMH,*48,PMFSLUMF:
                      *69,FUNDGAP
            ADD       ONE,CLNO
          ENDIF
.
          COMPARE   TWO,PMFSRTYP
          IF        @EQUAL
            IF        CMXFLAG=1
              PRINT     *1,"Daily Charge";
            ENDIF
            ASSIGN    (PMFSDAYH-PMFSDAHF),FUNDGAP
            IF        PMFDNONS=0
              PRINT     *21,"Daycase",*32,PMFSDAYH,*48,PMFSDAHF:
                        *69,FUNDGAP
            ELSE
              MOVE      PMFSDAFR,FORM4A
              MOVE      PMFSDAYT,FORM4B
              PRINT     *21,FORM4A," - ",FORM4B,*32,PMFSDAYH,*48,PMFSDAHF:
                        *69,FUNDGAP
            ENDIF
            ADD       ONE,CLNO
          ENDIF
.
          COMPARE   FOUR,PMFSRTYP
          IF        @EQUAL
            ASSIGN    (PMFSDAYH-PMFSDAHF),FUNDGAP
            PRINT     *1,"Additional Charge";
            IF        CMXFLAG=1
              MOVE      PMFSDAFR,FORM4A
              MOVE      PMFSDAYT,FORM4B
              PRINT     *21,FORM4A," - ",FORM4B,*32,PMFSDAYH,*48,PMFSDAHF:
                        *69,FUNDGAP
            ELSE
              PRINT     *21,"Daycase",*32,PMFSDAYH,*48,PMFSDAHF:
                        *69,FUNDGAP
            ENDIF
            ADD       ONE,CLNO
          ENDIF
.
          GOTO      PBFE1000
.
PBFE9999  RETURN
+
.******************************************************************************
.*                                  PTFE0000              Called by: ML0000   *
.*                        Print Theatre Fees from enquiry                     *
.******************************************************************************
PTFE0000  PRINT     *N,*N:
                    *1,"Theatre Fees":
                    *N,*N:
                    *23,"  Items  ",*34,"Hospital Fee ":
                    *49," Fund Rebate ",*64,"  Fund Gap   "
          ADD       "5",CLNO
.
          MOVE      ZERO,THTOTAL
          MOVE      ZERO,THFUND
          MOVE      ONE,FORM1
          PACK      KEY17,PMFDQUOT,SP20
          CALL      RSPMFES1
PTFE1000  CALL      RKPMFES1
          BRANCH    OVRCD,PTFE9999
.
          MATCH     PURNO,PMFSURNO
          GOTO      PBFE9999 IF NOT EQUAL
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      PBFE9999 IF NOT EQUAL
.
          ASSIGN    (PMFSTHEH-PMFSTHEF),FUNDGAP
          COMPARE   THREE,PMFSRTYP
          IF        @EQUAL
            PRINT     *23,PMFSTHIT,*32,PMFSTHEH,*47,PMFSTHEF,*69,FUNDGAP
            ADD       ONE,CLNO
            ASSIGN    (THTOTAL+PMFSTHEH),THTOTAL 
            ASSIGN    (THFUND+PMFSTHEF),THFUND 
          ENDIF
          GOTO      PTFE1000
.
PTFE9999  ASSIGN    (THTOTAL-THFUND),THTHOSPT 
          PRINT     *N:
                    *23,"TOTAL",*39,THTOTAL,*54,THFUND,*64,THTHOSPT,*N
          ADD       "3",CLNO
          CALL      UND80                   * Print underline
          MOVE      ZERO,EXIT
          RETURN
+
.******************************************************************************
.*                                  POVR0000              Called by: ML0000   *
.*                      Print Overnight Costs from enquiry                    *
.******************************************************************************
POVR0000  PRINT     *N:
                    *1,"Overnight Costs":
                    *N,*N:
                    *20,"No of Nights":
                    *34,"Hospital Amnt":
                    *49," Fund Amount ",*64,"Fund Gap Amnt"
          ADD       "4",CLNO
          MOVE      THTOTAL,OVRHOSPT
          MOVE      THFUND,OVRFUNDT
          MOVE      ZERO,OVRGAP
          MOVE      ONE,FORM4
.
          PACK      KEY17,PMFDQUOT,SP20
          CALL      RSPMFES1
POVR1000  CALL      RKPMFES1
          BRANCH    OVRCD,POVR9999
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      POVR9999 IF NOT EQUAL
.
          COMPARE   FIVE,PMFSRTYP
          GOTO      POVR1000 IF NOT EQUAL
.
          ASSIGN    (PMFSDAYH-PMFSDAHF),OVRGAP
          IF        PMFDNONS=0             
            PRINT     *23,"Daycase",*34,PMFSDAYH,*49,PMFSDAHF,*65,OVRGAP
            ADD       ONE,CLNO
          ELSE
            PRINT     *23,PMFSDAYT,*34,PMFSDAYH,*49,PMFSDAHF,*65,OVRGAP
            ADD       ONE,CLNO
          ENDIF
          COMPARE   "60",CLNO
          CALL      PNEW0000 IF NOT LESS    * > 60 lines, print new page
.
          GOTO      POVR1000
.
POVR9999  RETURN
+
.******************************************************************************
.*                                  WRMF0000              Called by: ML0000   *
.*                  Write misc charge fees to pmsfesaf                        *
.******************************************************************************
WRMF0000  BRANCH    FREEFLAG,WRMF9999
          MOVE      ZERO,UNIQ
          PACK      KEY17,PMFDQUOT,SP20
          CALL      RSPMFES1
WRMF1000  CALL      RKPMFES1
          BRANCH    OVRCD,WRMF2000
.
          MATCH     PURNO,PMFSURNO
          GOTO      WRMF2000 IF NOT EQUAL
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      WRMF2000 IF NOT EQUAL
.
          MOVE      PMFSUNIQ,UNIQ
          GOTO      WRMF1000
.
WRMF2000  MOVE      PURNO,PMFSURNO
          MOVE      PMFDQUOT,PMFSQUOT
          ADD       ONE,UNIQ
          MOVE      UNIQ,PMFSUNIQ
.
. -----   write misc charge fee records -----
.
          MOVE      SIX,PMFSRTYP
          MOVE      KEY9,PMFSTHIT
          MOVE      WRKTOTAL,PMFSTHEH
          MOVE      BFHF,PMFSTHEF
          MOVE      ZERO,PMFSLUMH
          MOVE      ZERO,PMFSLUMF
          MOVE      ZERO,PMFSDAFR
          MOVE      ZERO,PMFSDAYT
          MOVE      ZERO,PMFSDAYH
          MOVE      ZERO,PMFSDAHF
.
          PACK      KEY17,PMFSQUOT,PMFSUNIQ
          CALL      WRPMFES1
.
WRMF9999  RETURN
+
.******************************************************************************
.*                                  PTME0000              Called by: ML0000   *
.*                        Print Misc Fees from enquiry                        *
.******************************************************************************
PTME0000  PRINT     *N,*N:
                    *1,"Prosthetics Costs":
                    *N,*N:
                    *23,"  Items  ",*34,"Hospital Fee ":
                    *49," Fund Rebate ",*64,"  Fund Gap   "
          ADD       "5",CLNO
.
          MOVE      ZERO,THTOTAL
          MOVE      ZERO,THFUND
          MOVE      ONE,FORM1
          PACK      KEY17,PMFDQUOT,SP20
          CALL      RSPMFES1
PTME1000  CALL      RKPMFES1
          BRANCH    OVRCD,PTME9999
.
          MATCH     PURNO,PMFSURNO
          GOTO      PBFE9999 IF NOT EQUAL
.
          MATCH     PMFDQUOT,PMFSQUOT
          GOTO      PBFE9999 IF NOT EQUAL
.
          ASSIGN    (PMFSTHEH-PMFSTHEF),FUNDGAP
          COMPARE   SIX,PMFSRTYP
          IF        @EQUAL
            PRINT     *23,PMFSTHIT,*32,PMFSTHEH,*47,PMFSTHEF,*69,FUNDGAP
            ADD       ONE,CLNO
            ASSIGN    (THTOTAL+PMFSTHEH),THTOTAL
            ASSIGN    (THFUND+PMFSTHEF),THFUND
          ENDIF
          GOTO      PTME1000
.
PTME9999  ASSIGN    (THTOTAL-THFUND),THTHOSPT
          PRINT     *N:
                    *23,"TOTAL",*39,THTOTAL,*54,THFUND,*64,THTHOSPT,*N
          ADD       "3",CLNO
          CALL      UND80                   * Print underline
          MOVE      ZERO,EXIT
          RETURN
+
.----------------------------------------------------------------------
. Adjust Date in CDAY,CMON,CCENT,CYEAR by ADJDAYS number of Days
.    ADJDAYS must be < Number of Days in Month
.----------------------------------------------------------------------
ADJDAT00  PACK      KEY4,CCENT,CYEAR
          REP       " 0",KEY4
          MOVE      KEY4,CURYER
          MOVE      CMON,CURMON
          MOVE      CDAY,CURDAY
          MOVE      CURDAY,NUMBDAYS
          ADD       ADJDAYS,NUMBDAYS
.
ADJDAT10  IF        NUMBDAYS<1
            SUB       ONE,CURMON
            IF        CURMON=0
              ASSIGN    31+NUMBDAYS,NUMBDAYS
              MOVE      "12",CURMON
              SUB       ONE,CURYER
              PACK      KEY8,CURYER,CURMON,CURDAY
              REP       " 0",KEY8
              UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
              GOTO      ADJDAT10
            ENDIF
            MOVE      CURMON,CMON
            CALL      MTHEND00
            ASSIGN    MTHENDDY+NUMBDAYS,NUMBDAYS
            PACK      KEY8,CURYER,CURMON,CURDAY
            REP       " 0",KEY8
            UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
            GOTO      ADJDAT10
          ENDIF
.
ADJDAT20  CALL      MTHEND00
          IF        NUMBDAYS>MTHENDDY
            ADD       ONE,CURMON
            IF        CURMON=13
              ASSIGN    NUMBDAYS-31,NUMBDAYS
              MOVE      "1",CURMON
              ADD       ONE,CURYER
              PACK      KEY8,CURYER,CURMON,CURDAY
              REP       " 0",KEY8
              UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
              GOTO      ADJDAT20
            ENDIF
            ASSIGN    NUMBDAYS-MTHENDDY,NUMBDAYS
            PACK      KEY8,CURYER,CURMON,CURDAY
            REP       " 0",KEY8
            UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
            GOTO      ADJDAT20
          ENDIF
.
ADJDAT90  MOVE      NUMBDAYS,CURDAY
          PACK      KEY8,CURYER,CURMON,CURDAY
          REP       " 0",KEY8
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
.
          RETURN
.------------------------------------------------------------
. Calculate the End of Month  Input CMON  Output MTHENDDY
.------------------------------------------------------------
MTHEND00  MOVE      CMON,F2
          LOAD      KEY2,F2,D31,D28,D31,D30,D31,D30,D31,D31,D30,D31,D30,D31
          MOVE      KEY2,MTHENDDY
          IF        F2=2
            PACK      KEY4,CCENT,CYEAR
            REP       " 0",KEY4
            MOVE      KEY4,F4
            IF        F4%4=0
              MOVE      D29,MTHENDDY
            ENDIF
          ENDIF
          RETURN
+
.------------------------------------------------------------------------------
.* Temp file IO
.------------------------------------------------------------------------------
RDTEMP1   MOVE      ZERO,OVRCD
          READ      MCFILE,KEY9;XCHARGE,XMCCNT
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   MOVE      ZERO,OVRCD
          WRITE     MCFILE,KEY9;XCHARGE,XMCCNT
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTEMP1   MOVE      ZERO,OVRCD
          UPDATE    MCFILE;XCHARGE,XMCCNT
          GOTO      OVERCOND IF OVER
          RETURN
.
DETEMP1   RESET     KEY9
          DELETE    MCFILE,KEY9
          RETURN
.
.==============================================================================
.
          INC       STD001IO
          INC       STDKWSCD
          INC       STDHLPCD
.
          INC       AUTOPCOD                * Auto generation of the postcode
          INC       CLPATMAS                * Clear master file variables
          INC       CLPATMIS                * Clear admission file variables
          INC       PATCMCKY
          INC       PATCMXKY                * Keyin the casemix code
          INC       PATCOMN1                * Patient standard library
          INC       PATFNDKY                * Keyin the health fund
          INC       PATSNDX                 * Change surname into sound ex
          INC       PATTBLKY                * Keyin the health fund table
          INC       PATMCHRD                * Miscellaneous Charges read routine
          INC       PATDDHRD
          INC       IBAGSTKY
          INC       IBAGKIKY
          INC       CALCAGE
          INC       PATSNX2
          INC       GETCNEFF
          INC       GETTFEES
          INC       TFILENAM                     * Generate Temp File Name
          INC       VALCMXFN
          INC       VALCONTR
          INC       PATITMRD
.
          INC       PATFX1IO/INC
          INC       PATCFAIO/INC
          INC       BOKRC1IO/INC            * Booking file
          INC       OUTPREIO/INC            * Outpatients pre attendence file
          INC       PATAFEIO/INC            * Additional charge overnight file
          INC       PATASDIO/INC            * Additional charge daycase file
          INC       PATBFEIO/INC            * Bed fee file
          INC       PATCMCIO/INC
          INC       PATCMXIO/INC            * Casemix funding file
          INC       PMSCIDIO/INC            * Contract ID file
          INC       PATCODIO/INC            * Codes file
          INC       PATCTFIO/INC            * DRG/MBS theatre fee file
          INC       PATDGWIO/INC            * DRG file
          INC       PATDDHIO/INC            * HF History file
          INC       PMSFEDIO/INC            
          INC       PMSFENIO/INC            
          INC       PMSFESIO/INC            
          INC       PATHSPIO/INC            * Hospital file
          INC       PMSREGIO/INC            * Regime codes file
          INC       PATFN1IO/INC            * Health fund file
          INC       PATHDFIO/INC            * Daily fee inlier file
          INC       PATHLFIO/INC            * Lumpsum overnight file
          INC       PATITMIO/INC            * Item file
          INC       PATMCHIO/INC            * Misc.Charge file
          INC       PATLDFIO/INC            * Daily fee outlier file
          INC       PATLSDIO/INC            * Lumpsum daycase file
          INC       PATSGCIO/INC            * Suggested classif. exceptions
          INC       PATMA1IO/INC            * Master file
          INC       HL7BMTIO/INC
          INC       PATMI1IO/INC            * Admission file
          INC       PATPR1IO/INC            * Pre admission file
          INC       PATGSRIO/INC            * Surname file
          INC       PATTFEIO/INC            * Theatre fee file
          INC       PATVISIO/INC            * Visit file
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC 
          INC       IBAGEDIO/INC
          INC       IBAGSTIO/INC
          INC       PATGTUIO/INC
          INC       NZCOMPIO/INC
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       WEBERRIO/INC                 * Web Server Error Logging
+
.

