.******************************************************************************
.* System   :  PATIENT MANAGEMENT SYSTEM                                      *
.* Program  :  IBAPMS76               (re-write of IBAPMS26)                  *
.* Desc     :  Management Analysis Generation                                 *
.******************************************************************************
.* Date     :  14/05/1991                                                     *
.* Author   :  DIG                                                            *
.* Comment  :  This is a re-write of EXTRACT B (which only uses Tran records  *
.*             in the original IBAPMS26)                                      *
.* Mods     :                                                                 *
.*        V12.00.01 15.05.2025  DA Sarkies     TSK 0955096                    *
.*                  Updated for Alpha-Numeric Visit Number                    *
.*        V11.01.01 22/02/2021  J.Tan          TSK 0888639                    *
.*                  Changed patmmbs counter record to DIM3                    *
.*                  01/03/2021  Tracey Nguyen  TSK 0888639                    *
.*                  Fixed I*L on index PATEXTC1 - SET0000                     *
.*                  Fixed I*C on index PATEX1A1 - SET0000                     *
.*        V11.00.01 11/03/2020  J.Tan          TSK 0838262                    *
.*                  Added Effective from and to date to MBS Item file         *
.*        V10.13.01 22/01/2019  Ania P         TSK 0261630                    *
.*                  Removed PORT                                              *
.*        V10.10.01 13/06/2017  J.Tan          TSK 0839991                    *
.*                  Recompiled for PATDBTYP (PATCMSTP)                        *
.*        V10.04.02 27/05/2014  J.Tan          CAR 300784                     *
.*                  Recompiled for STEPDOWN - force stepdown prior inv.fromdat*
.*        V10.04.01 26/02/2014  Ania P         CAR 294994                     *
.*                  Changed KEY11 to KEY12 before calls to xxPTEXC1           *
.*        V10.03.02 01/08/2013  Ebon Clements  CAR 289242                     *
.*                  Fixed write to PATEXCFD - Unique counter length issue     *
.*        V10.03.01 06/05/2013  J.Tan          CAR 284902                     *
.*                  Recompiled for STEPDOWN - force stepdown prior Inv.Fromdat*
.*        V10.02.01 28/03/2011  Mike Laming   CAR 240107                      *
.*                  Mods to PATECDaf & PATECOaf variables & Keys - file change*
.*        V10.01.01 24/02/2011  Peter Vela    CAR 233034                      *
.*                  Removed PATBF2FD and PATBF2IO                             *
.*        V10.00.02 14/07/2010  J.Tan         CAR 226158                      *
.*                  Recompiled for STEPDOWN - bed fees update                 *
.*        V10.00.01  Mike Laming   CAR 157391                                 *
.*                   Recompiled for changes to PATEX1FD.                      *
.******************************************************************************
.*        V9.12.03  11/03/2010  J.Tan         CAR 216044                      *
.*                  Mods to include Leave days in stepdown count for TAC      *
.*        V9.12.02  19/01/2010  J.Tan         CAR 166439                      *
.*                  Recompiled for PATCMSTP - C/P additional charge stepdown  *
.*        V9.12.01  21/09/2009  J.Tan         CAR 204390                      *
.*                  Recompiled for STEPDOWN - mods to old bed fees file       *
.******************************************************************************
.*        V9.09.02  18/04/2008  Peter Vela    CAR 165181                      *
.*                  Modified referring doctor to assign from pmvxrhc1.pmsvx1af*
.*                  if adoctr.patmi1af is empty                               *
.*        V9.09.01  22/11/2007  Peter Vela    CAR 132264                      *
.*                  Recompiled for PATCHCFD                                   *
.******************************************************************************
.*        V9.08.01  02/02/2007  Ebon Clements CAR 120001                      *
.*                  Added nz private billing files                            *
.******************************************************************************
.*        V9.05.01  09/02/2006  Peter Vela    CAR 78604                       *
.*                  Ported from 5.13                                          *
.******************************************************************************
.*        V5.13.01  25/07/2005  Mike Laming   CAR 57045                       *
.*                  Add CKDR0000 (to revert to Trans if Doctor change)        *
.*        V5.12.01  24/11/2004  Mike Laming   CAR 54534                       *
.*                  Re-comple for PATCMSTP - fix Addit.Charge Description     *
.*        V5.12.00  23/09/2004  Mike Laming   CAR 45951                       *
.*                  Re-write Extract B to use DTR for Invoiced data           *
.*                  Add EPGMID to List of Extractions (also PATGEXT & PATCONFD*
.*--------------------------------------------------------------------------- *
.*                            IBAPMS26 History                                *
.*        V5.11.03  26/03/2004  Mike Laming   CAR 47732                       *
.*                  Re-compile for PATCMSTP - fix Casemix Stepdown            *
.*        V5.11.02  05/01/2004  CAR 44262   Mike Laming                       *
.*                  Added Lumpsum PTXBLSRB/PTXBLSPT to PTXBACCM as per record *
.*                  layout PATEXBFD (and added to ENETAMT in CONTROLF)        *
.*        V5.11.01  26/06/2003  CAR 35475   Steve Downing                     *
.*                  Recompiled for PATCMSTP - Fixed additional rate stepdown  *
.******************************************************************************
.
          INC       STD001FD
          INC       IBACONFD/INC
          INC       PATCALAG/INC
.
          INC       NZPBFEFD/INC
          INC       PATASDFD/INC
          INC       PATHDFFD/INC
          INC       PATHLFFD/INC
          INC       PATLSDFD/INC
          INC       PATLDFFD/INC
          INC       PATAFEFD/INC
          INC       PATFN1FD/INC
          INC       PATFX1FD/INC
          INC       PATCFAFD/INC
          INC       PATBFEFD/INC
          INC       PATCT1FD/INC
          INC       PATCHCFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDADFD/INC
          INC       PATDAYFD/INC
          INC       PATDINVS/INC
          INC       PATDO1FD/INC
          INC       PATDHEAD/INC
          INC       PATDSCFD/INC
          INC       PATDTRFD/INC
          INC       PATECDFD/INC
          INC       PATECOFD/INC
          INC       PATEX1FD/INC
          INC       PATEXBFD/INC
          INC       PATEXCFD/INC
          INC       PATICOFD/INC
          INC       PATITMFD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PMSPX2FD/INC
          INC       PATMI1FD/INC
          INC       PATMMBFD/INC
          INC       PATRCAUD/INC
          INC       PATTRNFD/INC
          INC       PATVISFD/INC
          INC       PMSCIDFD/INC
          INC       PMSVX1FD/INC
          INC       PATWR1FD/INC
          INC       WEBSECFD/INC
          INC       IBASEQFD/INC 
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
+
.**********************************************************************
.*                            TEMP FILES                              *
.**********************************************************************
PATTM1XX  IFILE     SQL, FIXED=9, KEY="U1-8"
.
DTMPADMN   DIM       8
.
.Redefine form field for key
.---------------------------
TMPADMN    DIM       8
+
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
ADMDATE   DIM       8
.
CHRGFLG   FORM      1
CALDAYS   FORM      4
CDYSDAYS  FORM      6
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
CDYSYEAR  FORM      2
CHDIM8    DIM       8
CMDLINE   DIM       50
.
DATEWORK  DATE      8
DAYSCHRG  FORM      6
DISCREC   FORM      1
DONEDTR   FORM      1
DISDATE   DIM       8
DTRFRDT   DIM       8
DTRTODT   DIM       8
DIM18     DIM       18
DIM18A    DIM       18
DIM19A    DIM       19
DIM30     DIM       30
.
EFTDATE   DIM       8         * Effective date (ccyymmdd)
EXTFRDT   DIM       8
EXTTO1DT  DIM       8
EXTTODT   DIM       8
EXBDIM8   DIM       8
EXCDATE   DIM       10
EXFDATE   DIM       10
EXTDATE   DIM       10
.
FORM3A    FORM      3
FILEDAY   DIM       8
FILEEXTA  DIM       8
FILEEXTB  DIM       8
FILEEXTC  DIM       8
FILENAM   DIM       8
FILETEMP  DIM       8
FLAGAORB  FORM      1
FLAGDATA  FORM      1
FLAGDISC  FORM      1
FLAGGOT1  FORM      1
FLAGGOT2  FORM      1
FLAGLAST  FORM      1
FOUND     FORM      1
.
JYEAR     FORM      2
.
LASTTYPE  DIM       1
LSTDATE   DIM       8
.
NEWEXTB   FORM      1
.
ORIGTDAT  DIM       8
.
PREVDOC   DIM       6
.
SAVADOCT  DIM       6
SAVALLW   FORM      6.2
SAVATYPE  DIM       3
SAVDEPT   DIM       3
SAVDDTE   DIM       8
SAVDISC   FORM      6.2
SAVTDISC  FORM      8.2
SAVEDATE  DIM       8
SAVEXTRA  FORM      6.2
SAVRATEF  FORM      6.2
SAVRATEH  FORM      6.2
SAVTALLW  FORM      6.2
SAVTCHST  DIM       3
SAVTMOVE  DIM       1
.SAVTWARD  DIM       3
.SAVTBED   DIM       3
SAVBEND   FORM      3
SDAYMON   DIM       4
SEC       FORM      2
STTRNDT   DIM       8
SVPATPOR  FORM      8.2
SVXBACCM  FORM      8.2
SVXBACCP  FORM      8.2
SVXBACCR  FORM      8.2
SYEAR     DIM       4
.
TDAYMON   DIM       4
TODAY     DIM       10
TOTMBS    FORM      6
TOTOPS    FORM      6
TRDATE    DIM       8
TRWRIT    DIM       6
TDYEAR    DIM       4
.
WDATE1    DIM       8
WDATE2    DIM       8
WORKDATE  DIM       8
+
.**********************************************************************
.*                             CONSTANTS                              *
.**********************************************************************
OPNFLAG   FORM      "0"
.
PATEXB    INIT      "patexb"
PATEXC    INIT      "patexc"
SP14      INIT      "              "
Z20       INIT      "ZZZZZZZZZZZZZZZZZZZZ"
.
PRGID     INIT      "IBAPMS76"
PRGNAM    INIT      "MANAGEMENT ANALYSIS GENERATION"
VERSION   INIT      "V12.00.01"
+
.**********************************************************************
.*                           MAINLINE                                 *
.*                       Controlling Logic                            *
.**********************************************************************
ML0000    CALL      INIT0000           * initialization - open files &
.                                                         display header
ML1000    CALL      GEXTN              * select the extraction file
          COMPARE   ZERO,OPTION
          GOTO      ML9999 IF EQUAL
.
          CALL      DATE0000           * enter extraction dates
          BRANCH    EXIT,ML1000
.
          CALL      INTC0000           * initialize the control file
          MOVE      OPTION,DIM2
          CALL      CLRT0000           * clear extract files before erasing
          CALL      SET0000            * set up the extraction files & temp file
          CALL      LOAD0000           * load the temporary file
          CALL      PROC0000           * process the admission numbers
          CALL      UPDC0000           * update the control file
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.**********************************************************************
.*                           INIT0000                                 *
.*               Open files and display header                        *
.**********************************************************************
INIT0000  CALL      DISPHEAD                * display screen header
.
          DISPLAY   *P56:24,"Opening patct1cf";
          OPEN      PATCT1C1,"patct1cf"
.
          DISPLAY   *P64:24,"patchcof";
          OPEN      PATCHCO1,"patchcof"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdadaf";
          OPEN      PATDADA1,"patdadaf"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
.
          DISPLAY   *P64:24,"patdtraf";
          OPEN      PATDTRA1,"patdtraf"
          OPEN      PATDTRA4,"patdtraf"
.
          DISPLAY   *P64:24,"patecdaf";
          OPEN      PATECDA2,"patecdaf"
.
          DISPLAY   *P64:24,"patecoaf";
          OPEN      PATECOA2,"patecoaf"
.
          DISPLAY   *P64:24,"paticdof";
          OPEN      PATICDO1,"paticdof"
.
          DISPLAY   *P64:24,"pati10of";
          OPEN      PATI10O1,"pati10of"
.
          DISPLAY   *P64:24,"patitemn";
          OPEN      PATITEM1,"patitemn"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"patmmbsf";
          OPEN      PATMMBS1,"patmmbsf"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P64:24,"nzpbfeaf";
          OPEN      NZPBFEA1,"nzpbfeaf"
.
          DISPLAY   *P64:24,"pmscidaf";
          OPEN      PMSCIDA1,"pmscidaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN;*184,CPRIMOP,CPRIMDS,*217,CAUDQ
          READ      CONTROLF,TEN3;*186,CMBSOPR:
                                  *245,CHOSTYP
          READ      CONTROLF,TEN5;*247,CSTDOWN
          READ      CONTROLF,TWENTY;*164,PTRESDAY,*199,PTCNBCUT,*211,PTCNCNDY
          READ      CONTROLF,FIFTY9;*1,CDLSTEP,*174,PTCNNDAT,*226,CCARECL
          READ      CONTROLF,EIGHTY8;*233,PTCNADES
.
          READ      CONTROLF,EIGHTY;*244,PTCNJADJ  * Journal Adjustments
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILETEMP
.
INIT9999  RETURN
+
.**********************************************************************
.*                           DATE0000                                 *
.*                   Keyin the extraction dates                       *
.**********************************************************************
DATE0000  MOVE      FALSE,EXIT
          MOVE      FIVE,CVERT
          ADD       OPTION,CVERT
          CALL      IBACLOCK 
          PACK      WORKDATE,CCC,CYY,CMM,CDD      
          REP       " 0",WORKDATE
          UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      PACDATE                 * pack todays date
          MOVE      CPCDATE,TODAY
.
          DISPLAY   *P20:CVERT,*V2LON,TODAY;
.
.------ keyin from date for the extraction ------
.
DATE1000  MOVE      FORTY,CCOL
          MOVE      FIVE,CVERT
          ADD       OPTION,CVERT
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          MOVE      SP8,EXTFRDT
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          REP       " 0",CCENT
          DISPLAY   *P40:CVERT,*EL;
.
DATE1100  CALL      KEYDATE                 * keyin the extraction from date
          BRANCH    CQUEST,DATE1100
          BRANCH    OVRCD,DATE9000
          PACK      EXTFRDT,CCENT,CYEAR,CMON,CDAY
.
          MATCH     PTCNNDAT,EXTFRDT        * match to date for next update
          GOTO      DATE9100 IF NOT LESS
.
          DISPLAY   *P51:CVERT,"to";
.
DATE2000  MOVE      FIFTY4,CCOL
          MOVE      SP8,EXTTODT
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          REP       " 0",CCENT
.
DATE2100  CALL      KEYDATE                 * keyin the extraction from date
          BRANCH    CQUEST,DATE2100
          BRANCH    OVRCD,DATE9000
          PACK      EXTTODT,CCENT,CYEAR,CMON,CDAY
.
          MATCH     PTCNNDAT,EXTTODT        * match to date for next update
          GOTO      DATE9100 IF NOT LESS
.
          MATCH     EXTFRDT,EXTTODT           * match date range
          GOTO      DATE3000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Invalid date range entered **    ";
          CALL      HITENTER
          GOTO      DATE2000
.
DATE3000  CALL      CONTQST
          BRANCH    CEXIT,DATE3100,DATE1000,DATE3200
.
.------ yes selected ------
.
DATE3100  MOVE      EXTTODT,DATEWORK
          ADD       ONE,DATEWORK
          MOVE      DATEWORK,EXTTO1DT
.
          GOTO      DATE9999
.
.------ cancel selected ------
.
DATE3200  MOVE      TRUE,EXIT
          MOVE      SP8,WORKDATE
          MOVE      SP8,EXTFRDT
          MOVE      SP8,EXTTODT
          GOTO      DATE9999
.
.------ invalid date entered ------
.
DATE9000  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Invalid date entered **    ";
          CALL      HITENTER
.
          COMPARE   FORTY,CCOL              * see if we are entering the
          GOTO      DATE1000 IF EQUAL         first date
          GOTO      DATE2000
.
.------ date entered is >= date for next daily update ------
.
DATE9100  DISPLAY   *P1:24,*EL,*B,*V2LON,"** ",*BLINKON,"ERROR",*HOFF,*V2LON:
                    " - date not on the Day File **    ";
          CALL      HITENTER
.
          COMPARE   FORTY,CCOL              * see if we are entering the
          GOTO      DATE1000 IF EQUAL         first date
          GOTO      DATE2000
.
DATE9999  RETURN
+
.**********************************************************************
.*                                INTC0000                            *
.*                       Initialize the control file                  *
.**********************************************************************
INTC0000  CALL      ETABPOS                 * get the sector and position for
.                                             the update of the dates on the 
          MOVE      ZERO,EDOPERS              control file
.
          WRITAB    CONTROLF,SEC;*ETABPS,SP8,SP8,SP8,EDOPERS
.
          CALL      ETOTPOS                 * get the sector and position for
.                                             the update of the totals on the
          MOVE      ZERO,EADMNS               control file
          MOVE      ZERO,EBDAYS
          MOVE      ZERO,EDCASES
          MOVE      ZERO,ENETAMT
          MOVE      ZERO,ETPRIMOP
          MOVE      ZERO,ETPRIMDS
.
          WRITAB    CONTROLF,SEC;*ETABPS,EADMNS,ETPRIMOP,ETPRIMDS,EBDAYS:
                                  EDCASES,ENETAMT
.
          MOVE      ZERO,TOTOPS
          MOVE      ZERO,TOTMBS
.
INTC9999  RETURN
+
.******************************************************************
.*                            CLRT0000                            *
.*                   Clear extraction files                       *
.******************************************************************
CLRT0000  CALL      OPPTEXA1         
          BRANCH    OVRCD,CLRT4000
CLRT2500  PACK      KEY8,SP10
          CALL      RSPTEXA1
          CALL      RKPTEXA1
          BRANCH    OVRCD,CLRT4000
.
          PACK      KEY8,PTXAADMN
          CALL      DEPTEXA1
          GOTO      CLRT2500
.
CLRT4000  PACK      FILENAM,PATEXB,DIM2
          REP       " 0",FILENAM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO 
          OPEN      PATEXTB1,FILENAM
          BRANCH    OVRCD,CLRT6000
          TRAPCLR   IO
CLRT4500  PACK      KEY17,SP20
          CALL      RSPTEXB1
          CALL      RKPTEXB1
          BRANCH    OVRCD,CLRT6000
.
          PACK      KEY17,DPTXBADM,PTXBTDAT,PTXBTYPE
          CALL      DEPTEXB1
          GOTO      CLRT4500
.
CLRT6000  PACK      FILENAM,PATEXC,DIM2
          REP       " 0",FILENAM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATEXTC1,FILENAM
          BRANCH    OVRCD,CLRT9999
          TRAPCLR   IO
CLRT6500  PACK      KEY12,SP20
          CALL      RSPTEXC1
          CALL      RKPTEXC1
          BRANCH    OVRCD,CLRT9999
.
          PACK      KEY12,PTXCADMN,PTXCTYPE,PTXCUNIQ
          CALL      DEPTEXC1
          GOTO      CLRT6500
.
CLRT9999  RETURN
+
.**********************************************************************
.*                              SET0000                               *
.*             Routine to set up the extraction files and             *
.*             temporary file                                         *
.**********************************************************************
SET0000   DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Creating indexed files":
                           *HOFF,*V2LON," - Please wait";
.
          CLEAR     FILEEXTA
          OPEN      CONTROLF,"controlf"
          APPEND    FILEX1A1,FILEEXTA       * extraction file A
          APPEND    OPTION,FILEEXTA
          RESET     FILEEXTA
          REP       " 0",FILEEXTA
.
          CLEAR     FILEEXTB
          APPEND    "patexb",FILEEXTB       * extraction file B
          APPEND    OPTION,FILEEXTB
          RESET     FILEEXTB
          REP       " 0",FILEEXTB
.
          CLEAR     FILEEXTC
          APPEND    "patexc",FILEEXTC       * extraction file C
          APPEND    OPTION,FILEEXTC
          RESET     FILEEXTC
          REP       " 0",FILEEXTC
.
          CALL      KILL0000                * kill existing files
.
.------ Build new indexed files ------
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FILETEMP,CMDLINE        * temp file of admission numbers
          APPEND    " 9 u1-8",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM1XX,FILETEMP
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FILEEXTA,CMDLINE        * extraction file A
          APPEND    " 400 U1-8",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          MOVE      OPTION,DIM2              * set up parameter
          CALL      OPPTEXA1                 * open extraction file A
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FILEEXTB,CMDLINE        * extraction file B
          APPEND    " 200 u1-8,9-16,17-17",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      PATEXTB1,FILEEXTB
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FILEEXTC,CMDLINE        * extraction file C
          APPEND    " 70 u1-8,9-9,10-12",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      PATEXTC1,FILEEXTC
.
SET9999   DISPLAY   *P1:24,*EL;
          RETURN
+
.**********************************************************************
.*                              KILL0000                              *
.*             Kill the indexed files if they already exist           *
.**********************************************************************
KILL0000  CLOSE     PATTM1XX
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FILETEMP,CMDLINE        * temp file for admission numbers
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLOSE     PATEX1A1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FILEEXTA,CMDLINE        * extraction file A
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLOSE     PATEXTB1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FILEEXTB,CMDLINE        * extraction file B
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLOSE     PATEXTC1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FILEEXTC,CMDLINE        * extraction file C
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
KILL9999  RETURN
+
.**********************************************************************
.*                               LOAD0000                             *
.*            Load the temporary file with the patients who           *
.*            are in hospital in the period selected                  *
.**********************************************************************
LOAD0000  DISPLAY   *P1:24,*EL,*P20:24,"Admission No : ",*P50:24,"Scanning : ";
.
          UNPACK    EXTTODT,TDYEAR,TDAYMON
          UNPACK    EXTFRDT,SYEAR,SDAYMON
.
.------ open the required day file ------
.
LOAD1000  CLOSE     PATDAYA1
          PACK      FILEDAY,FILDAYA1,SYEAR
.
          TRAP      CREA0000 IF IO          * create day file
          OPEN      PATDAYA1,FILEDAY
          TRAPCLR   IO
.
          PACK      KEY12,SDAYMON,SP10
          CALL      RSPTDAY1                * position on the day file
.
.------ read through the day file ------
.
LOAD2000  CALL      RKPTDAY1
          BRANCH    OVRCD,LOAD5000
.
          UNPACK    PTDYDATE,XMON,XDAY
          DISPLAY   *P1:24,XDAY,SLASH,XMON;
          DISPLAY   *P61:24,*EL,PTDYADMN;
.
          MATCH     TDYEAR,SYEAR             * see if we are processing the 
          GOTO      LOAD3000 IF NOT EQUAL     end year in the period
.
          MATCH     PTDYDATE,TDAYMON        * finished if we have gone past the
          GOTO      LOAD9999 IF LESS          end day in the period
.
.------ see if admission number is on the temp file ------
.
LOAD3000  MOVE      PTDYADMN,KEY8
          CALL      RDTMPR1                 * read the temp file
          BRANCH    OVRCD,LOAD4000
          GOTO      LOAD2000              
.
.------ admission number is not on the temp file ------
.
LOAD4000  MOVE      PTDYADMN,KEY8
          CALL      RDMISS1                 * read the admission file
          BRANCH    OVRCD,LOAD2000
.
          PACK      ADMDATE,ADATE
          REP       " 0",ADMDATE
.
          MATCH     ADMDATE,EXTTODT          * see if admitted outside end 
          GOTO      LOAD2000 IF LESS          of period
.
          BRANCH    ASTAT,LOAD2000,LOAD4500,LOAD4100,LOAD4500,LOAD2000
.
.------ patient is discharged ------
.
LOAD4100  MOVE      AADMNO,KEY8
          CALL      RDDSCH1                 * read the discharge file
          BRANCH    OVRCD,LOAD2000
.
.------ pack the discharge date variable ------
.
LOAD4200  MOVE      DDATE,DISDATE
.
          MATCH     EXTFRDT,DISDATE          * see if discharged before start
          GOTO      LOAD2000 IF LESS          of period
.
.------ write this admission to the temp file ------
.
LOAD4500  DISPLAY   *P35:24,*V2LON,PTDYADMN;
.
          MOVE      PTDYADMN,KEY8
          CALL      WRTMPR1                 * write to the temp file
          GOTO      LOAD2000              
.
.------ reached end of current day file ------
.
LOAD5000  MATCH     TDYEAR,SYEAR            * finished if current year has
          GOTO      LOAD9999 IF NOT LESS      passed the end year of the period
.
          MOVE      SYEAR,FORM4
          ADD       ONE,FORM4
          MOVE      FORM4,SYEAR
          REP       " 0",SYEAR
          MOVE      "0101",SDAYMON
          GOTO      LOAD1000
.
LOAD9999  RETURN
+
.**********************************************************************
.*                         CREA0000                                   *
.*        Create the patient day file that doesn't exist              *
.**********************************************************************
CREA0000  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FILEDAY,CMDLINE
          APPEND    " 13 U1-4,5-12 ",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      PATDAYA1,FILEDAY          
.
CREA9999  RETURN
+
.**********************************************************************
.*                              PROC0000                              *
.*                 Process the admission numbers                      *
.**********************************************************************
PROC0000  DISPLAY   *P1:24,*EL,"Processing Admission : ";
          MOVE      FALSE,FLAGDATA
          MOVE      SP8,KEY8
          CALL      RSTMPR1                 * position on the temp file
.
.------ read through the temp file ------
.
PROC1000  CALL      RKTMPR1
          BRANCH    OVRCD,PROC9000
.
          MOVE      TMPADMN,KEY8
          CALL      RDMISS1                 * read the admissions file
          BRANCH    OVRCD,PROC1000
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1                 * read patient master file
          BRANCH    OVRCD,PROC1000
.
          MOVE      TMPADMN,KEY8
          CALL      RDVISA1                 * read patient visit file         
          BRANCH    OVRCD,PROC1000
          MOVE      FALSE,FLAGDISC          * initialise discharge flag
.
          MOVE      TMPADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,PROC1000
.
          COMPARE   THREE,ASTAT
          GOTO      PROC2000 IF NOT EQUAL
.
          MOVE      AADMNO,KEY8
          CALL      RDDSCH1                 * read patient discharge file
          BRANCH    OVRCD,PROC1000
          MOVE      TRUE,FLAGDISC           * set discharge flag
.
.------ pack the discharge date variable ------
.
PROC1900  MOVE      DDATE,DISDATE
.
.
.------ process this admission number ------
.
PROC2000  DISPLAY   *P24:24,*V2LON,TMPADMN:
                    *P40:24,*HOFF,"Extracting File : ",*V2LON,ANSA;
.
          CALL      CLRA0000                * clear variables for first
.                                             extraction file
          CALL      EXTA0000                * extract data for first
.                                             extraction file
          DISPLAY   *P40:24,*HOFF,"Extracting File : ",*V2LON,ANSB;
.
          CALL      CLRB0000                * clear variables for second
.                                             extraction file
          CALL      EXTB0000                * extract data for second
.                                             extraction file
          DISPLAY   *P40:24,*HOFF,"Extracting File : ",*V2LON,ANSC;
.
          CALL      CLRC0000                * clear variables for third
.                                             extraction file
          CALL      EXTC0000                * extract data for third
.                                             extraction file
          MOVE      TRUE,FLAGDATA           * set data found flag
          GOTO      PROC1000
.
.------ end of processing ------
.
PROC9000  BRANCH    FLAGDATA,PROC9500       * skip if data found
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** No data extracted for given date range **    ";
          CALL      HITENTER
          GOTO      PROC9999
.
.------ data was found ------
.
PROC9500  DISPLAY   *P1:24,*EL,*B,*V2LON,"Extraction Completed.     ";
          CALL      HITENTER
.
PROC9999  RETURN
+
.**********************************************************************
.*                               CLRA0000                             *
.*     Clear all working variables for the first extraction file      *
.**********************************************************************
CLRA0000  MOVE      ZERO,PTXADAYC
          MOVE      ZERO,PTXAPLOS
          MOVE      ZERO,PTXAALOS
          MOVE      ZERO,PTXAPLVE
          MOVE      ZERO,PTXAALVE
          UNPACK    SP30,PTXADDAT,PTXAAWRD,PTXAABED,PTXASWRD,PTXASBED,PTXADWRD:
                         PTXADBED,PTXAATYP
          UNPACK    SP30,PTXASTYP,PTXADTYP,PTXASEX,PTXAPOST,PTXAMLGA,PTXAPLGA:
                         PTXARELG,PTXACONT,PTXARESI
          MOVE      ZERO,PTXAAAGD
          MOVE      ZERO,PTXAAAGM
          MOVE      ZERO,PTXAAAGY
          MOVE      ZERO,PTXASAGD
          MOVE      ZERO,PTXASAGM
          MOVE      ZERO,PTXASAGY
          MOVE      ZERO,PTXADAGD
          MOVE      ZERO,PTXADAGM
          MOVE      ZERO,PTXADAGY
          UNPACK    SP30,PTXAMSTT,PTXAPUS1,PTXAPUS3,PTXAPUS4,PTXAPUS5:
                         PTXAPUS6,PTXAPYN1,PTXAPYN2,PTXAPYN3,PTXADCSE,PTXADDTH
          UNPACK    SP30,PTXABADD,PTXAAADC,PTXAAADT,PTXASADC,PTXASADT:
                         PTXADADC,PTXADADT
          UNPACK    SP30,PTXAARDC,PTXAARDT,PTXAATDC,PTXAATDT,PTXASOUR
          UNPACK    SP30,PTXAAHOS,PTXACLMC,PTXADIET,PTXAACLS,PTXAACRE:
                         PTXASCRE,PTXADCRE,PTXAADPT,PTXASDPT
          UNPACK    SP30,PTXADDPT,PTXAFUND,PTXAFTBL,PTXAAUS1,PTXAAUS2:
                         PTXAAUS3,PTXAAUS4
          UNPACK    SP30,PTXAAUS5,PTXAAUS6,PTXAAUS7,PTXAADIA,PTXADDIA,PTXADSTT
          UNPACK    SP30,PTXADDST,PTXADHOS,PTXADUS1,PTXADUS2,PTXADUS3:
                         PTXADUS4,PTXADUS5
          UNPACK    SP20,PTXADRGC,PTXAMDCC
          PACK      PTXASPRE,SP20,SP20
.
CLRA9999  RETURN
+
.*********************************************************************
.*                               EXTA0000                            *
.*                Extract data for extraction file A                 *
.*********************************************************************
EXTA0000  MOVE      AADMNO,PTXAADMN
          MOVE      PVIDATE,PTXAADAT
          MOVE      PSEX,PTXASEX
          MOVE      PPOST,PTXAPOST
          MOVE      PTMXLGA,PTXAMLGA
          MOVE      PREG,PTXARELG
          MOVE      PCONT,PTXACONT
          MOVE      PVIRESI,PTXARESI
          MOVE      PMSTAT,PTXAMSTT
          MOVE      PUSR1,PTXAPUS1
          MOVE      PUSR2,PTXAPUS2
          MOVE      PUSR3,PTXAPUS3
          MOVE      PUSR4,PTXAPUS4
          MOVE      PUSR5,PTXAPUS5
          MOVE      PUSR6,PTXAPUS6
          MOVE      ANSN,PTXAPYN1
          LOAD      PTXAPYN1,PUYN1,ANSY
          MOVE      ANSN,PTXAPYN2
          LOAD      PTXAPYN2,PUYN2,ANSY
          MOVE      ANSN,PTXAPYN3
          LOAD      PTXAPYN3,PUYN3,ANSY
          MOVE      ANSN,PTXADCSE
          LOAD      PTXADCSE,PCEASE,ANSY
          MOVE      PDECDTE,PTXADDTH
          MOVE      ANSN,PTXABADD
          LOAD      PTXABADD,PBDEBT,ANSY
.
          MATCH     SP70,ADOCTR
          IF        @EQUAL | @EOS
            MOVE      PMVXRHC1,PTXAARDC
          ELSE
            MOVE      ADOCTR,PTXAARDC
          ENDIF
.
          MOVE      ADOCTT,PTXAATDC
          MOVE      ASRCE,PTXASOUR
          MOVE      ACLAIM,PTXACLMC
          MOVE      ADIET,PTXADIET
          MOVE      ACLSS,PTXAACLS
          MOVE      AFUNDH,PTXAFUND
          PACK      PTXAFTBL,AFNDTB,SP4
          MOVE      AUSR1,PTXAAUS1
          MOVE      AUSR2,PTXAAUS2
          MOVE      AUSR3,PTXAAUS3
          MOVE      AUSR4,PTXAAUS4
          MOVE      AUSR5,PTXAAUS5
          MOVE      AUSR6,PTXAAUS6
          MOVE      AUSR7,PTXAAUS7
          MOVE      AMBS,PTXAADIA
          UNPACK    SP20,PTXADRGC,PTXAMDCC
          PACK      PTXASPRE,SP20,SP20
.
          IF        ASTAT = 3
            PACK      PTXADRGC,PTDSDDRG,SP10    * use discharged DRG/MDC
            PACK      PTXAMDCC,PTDSDMDC,SP10
          ELSE
            UNPACK    PTMIPCMX,PTXADRGC     * use prov.casemix code
          ENDIF
.
          MATCH     EXTFRDT,PTXAADAT         * see if patient is admitted in
          GOTO      EXTA0050 IF LESS          the period
          ADD       ONE,EADMNS
.
.------ continue processing ------
.
EXTA0050  COMPARE   ZERO,FLAGDISC           * skip if patient is not discharged
          GOTO      EXTA1000 IF EQUAL
.
          MATCH     DISDATE,EXTTODT          * skip if not discharged in period
          GOTO      EXTA1000 IF LESS
.
          MOVE      DISDATE,PTXADDAT
          MOVE      DFMBS,PTXADDIA
          MOVE      DSTAT,PTXADSTT
          MOVE      DDEST,PTXADDST
          MOVE      DUSD1,PTXADUS1
          MOVE      DUSD2,PTXADUS2
          MOVE      DUSD3,PTXADUS3
          MOVE      DUSD4,PTXADUS4
          MOVE      DUSD5,PTXADUS5
.
          MOVE      TMPADMN,KEY8
          CALL      RDPTDAD1                * read transfer destination file
          BRANCH    OVRCD,EXTA0100
          MOVE      PTDADCTS,PTXADHOS
          MOVE      PTDAADTS,PTXAAHOS
.
.------ see if patient is a day case ------
.
EXTA0100  MATCH     PTXAADAT,PTXADDAT
          GOTO      EXTA1000 IF NOT EQUAL
          MOVE      ONE,PTXADAYC
          ADD       ONE,EDCASES
          GOTO      EXTA2000
.
.------ calculate length of stay and leave days for non daycases ------
.
EXTA1000  MOVE      EXTFRDT,FROMDATE
          MOVE      EXTTO1DT,TODATE
.
          CALL      NHOSPDAY                * calculate number of bed days
          MOVE      NBRDAYS,PTXAPLOS
          ADD       PTXAPLOS,EBDAYS
.
          MOVE      ADATE,FROMDATE
          MOVE      EXTTO1DT,TODATE
.
          CALL      NHOSPDAY                * calculate number of bed days
          MOVE      NBRDAYS,PTXAALOS
.
          MOVE      ADATE,CDYSFDTE
.
          MATCH     ADATE,EXTFRDT            * skip if start of period is less
          GOTO      EXTA1100 IF LESS          than the admission date
          MOVE      EXTFRDT,CDYSFDTE
.
.------ work out end date for calculation ------
.
EXTA1100  COMPARE   ZERO,FLAGDISC           * skip if patient not discharged
          GOTO      EXTA1150 IF EQUAL
.
          MOVE      DDATE,CDYSTDTE
.
          MATCH     EXTTO1DT,DDATE           * skip if discharge date is less 
          GOTO      EXTA1200 IF LESS          than the end of period + 1
.
.------ set working date to the end of period + 1 ------
.
EXTA1150  MOVE      EXTTO1DT,CDYSTDTE
.
.------ get maximum number of days patient could have been in hospital ------
.------ in order to work out leave days ------
.
EXTA1200  CALL      CALCDAYS                * calculate difference between
.                                             dates
          SUB       ONE,CDYSDAYS
          MOVE      CDYSDAYS,PTXAPLVE
          SUB       PTXAPLOS,PTXAPLVE
.
          MOVE      ADATE,CDYSFDTE
.
          COMPARE   ZERO,FLAGDISC           * skip if patient not discharged
          GOTO      EXTA1250 IF EQUAL
.
          MOVE      DDATE,CDYSTDTE
.
          MATCH     EXTTO1DT,DDATE           * skip if discharge date is less 
          GOTO      EXTA1300 IF LESS          than the end of period + 1
.
.------ set working date to the end of period + 1 ------
.
EXTA1250  MOVE      EXTTO1DT,CDYSTDTE
.
.------ get maximum number of days patient could have been in hospital ------
.------ in order to work out leave days ------
.
EXTA1300  CALL      CALCDAYS                * calculate difference between
.                                             dates
          SUB       ONE,CDYSDAYS
          MOVE      CDYSDAYS,PTXAALVE
          SUB       PTXAALOS,PTXAALVE
.
.------ continue processing for all patients ------
.------ i.e. whether a day case or not ------
.
EXTA2000  MOVE      TMPADMN,AADMNO
          PACK      KEY30,AADMNO,SP30
          CALL      RDSTRAN2                * get first transfer file record
          CALL      RDKTRAN2
          BRANCH    OVRCD,EXTA2100
.
          MATCH     AADMNO,TADMN            * compare admission numbers
          GOTO      EXTA2100 IF NOT EQUAL
.
          MOVE      TWARD,PTXAAWRD
          MOVE      TBED,PTXAABED
          MOVE      TDEPT,PTXAADPT
          MOVE      TATYPE,PTXAATYP
          MOVE      TADOCT,PTXAAADC
          MOVE      TADOCT,KEY6
          CALL      RDDOCT1                 * read doctors file
          BRANCH    OVRCD,EXTA2100
.
          MOVE      DRTYPE,PTXAAADT
.
.------ continue processing ------
.
EXTA2100  MATCH     EXTFRDT,PVIDATE         * skip if visit date is < the
          GOTO      EXTA2500 IF LESS        * start date of the period
.
          MOVE      PTXAAWRD,PTXASWRD
          MOVE      PTXAABED,PTXASBED
          MOVE      PTXAATYP,PTXASTYP
          MOVE      PTXAAADC,PTXASADC
          MOVE      PTXAADPT,PTXASDPT
          GOTO      EXTA3000
.
.------ get last transfer file record before the start of the period ------
.
EXTA2500  MOVE      TMPADMN,AADMNO
          PACK      KEY30,AADMNO,SP30
          CALL      RDSTRAN2                * position on the transfer file
.
.------ read through the transfer file ------
.
EXTA2600  CALL      RDKTRAN2
          BRANCH    OVRCD,EXTA2900
.
          MATCH     AADMNO,TADMN            * compare admission numbers
          GOTO      EXTA2900 IF NOT EQUAL
.
          MATCH     EXTFRDT,TDATE            * skip if transfer date is >=
          GOTO      EXTA2900 IF NOT LESS      start of period
.
          MOVE      TWARD,SAVWARD
          MOVE      TBED,SAVBED
          MOVE      TATYPE,SAVATYPE
          MOVE      TADOCT,SAVADOCT
          MOVE      TDEPT,SAVDEPT
          GOTO      EXTA2600
.
.------ set up variables for the start of the period ------
.
EXTA2900  MOVE      SAVWARD,PTXASWRD
          MOVE      SAVBED,PTXASBED
          MOVE      SAVATYPE,PTXASTYP
          MOVE      SAVADOCT,PTXASADC
          MOVE      SAVDEPT,PTXASDPT
.
.------ get last transfer file record <= to the end of the period ------
.
EXTA3000  MOVE      TMPADMN,AADMNO
          PACK      KEY30,AADMNO,SP30
          CALL      RDSTRAN2
.
.------ read through the transfer file ------
.
EXTA3100  CALL      RDKTRAN2
          BRANCH    OVRCD,EXTA3900
.
          MATCH     AADMNO,TADMN            * compare admission numbers
          GOTO      EXTA3900 IF NOT EQUAL
.
          MATCH     TDATE,EXTTODT            * skip if transfer date is >
          GOTO      EXTA3900 IF LESS          end of period
.
          MOVE      TWARD,SAVWARD
          MOVE      TBED,SAVBED
          MOVE      TATYPE,SAVATYPE
          MOVE      TADOCT,SAVADOCT
          MOVE      TDEPT,SAVDEPT
          GOTO      EXTA3100
.
.------ set up variables for the end of the period ------
.
EXTA3900  MOVE      SAVWARD,PTXADWRD
          MOVE      SAVBED,PTXADBED
          MOVE      SAVATYPE,PTXADTYP
          MOVE      SAVADOCT,PTXADADC
          MOVE      SAVDEPT,PTXADDPT
.
          MOVE      PPOST,KEY4
          CALL      RDCATC1                 * read catchment file
          BRANCH    OVRCD,EXTA4000
          MOVE      CTCLGA,PTXAPLGA
.
.------ continue processing ------
.
EXTA4000  MOVE      PTXASADC,KEY6
          CALL      RDDOCT1                 * read doctors file
          BRANCH    OVRCD,EXTA4100
          MOVE      DRTYPE,PTXASADT
.
.------ continue processing ------
.
EXTA4100  MOVE      PTXADADC,KEY6
          CALL      RDDOCT1                 * read doctors file
          BRANCH    OVRCD,EXTA4200
          MOVE      DRTYPE,PTXADADT
.
.------ continue processing ------
.
EXTA4200  MOVE      PVIDATE,AGEDATE
          CALL      CALCAGE                 * calculate patients age
.
          MOVE      PSAGEDAY,PTXAAAGD
          MOVE      PSAGEMNT,PTXAAAGM
          MOVE      PSAGEYRS,PTXAAAGY
.
          MATCH     EXTFRDT,PVIDATE          * see if admission date is <
          GOTO      EXTA4300 IF LESS          the start date of the period
.
          MOVE      PTXAAAGD,PTXASAGD
          MOVE      PTXAAAGM,PTXASAGM
          MOVE      PTXAAAGY,PTXASAGY
          GOTO      EXTA4500
.
.------ admission date is < start of the period ------
.
EXTA4300  MOVE      EXTFRDT,AGEDATE
          CALL      CALCAGE                 * calculate patients age
.
          MOVE      PSAGEDAY,PTXASAGD
          MOVE      PSAGEMNT,PTXASAGM
          MOVE      PSAGEYRS,PTXASAGY
.
.------ continue processing ------
.
EXTA4500  MOVE      EXTTODT,AGEDATE
.
          COMPARE   ZERO,FLAGDISC           * skip if patient not discharged
          GOTO      EXTA4600 IF EQUAL
.
          MATCH     EXTTODT,DISDATE          * see if discharge date is >= 
          GOTO      EXTA4600 IF NOT LESS      end date in period
          MOVE      DISDATE,AGEDATE
.
.------ calculate ages for end of period ------
.
EXTA4600  CALL      CALCAGE                 * calculate patients age
.
          MOVE      PSAGEDAY,PTXADAGD
          MOVE      PSAGEMNT,PTXADAGM
          MOVE      PSAGEYRS,PTXADAGY
.
          MOVE      PTXAARDC,KEY6
          CALL      RDDOCT1                 * read doctors file
          BRANCH    OVRCD,EXTA4700
          MOVE      DRTYPE,PTXAARDT
.
.------ continue processing ------
.
EXTA4700  MOVE      PTXAATDC,KEY6
          CALL      RDDOCT1                 * read doctors file
          BRANCH    OVRCD,EXTA5000
          MOVE      DRTYPE,PTXAATDT
.
.------ continue processing ------
.
EXTA5000  BRANCH    CCARECL,EXTA5100        * skip if using datable care class
          MOVE      ACARE,PTXAACRE
          MOVE      ACARE,PTXASCRE
          MOVE      ACARE,PTXADCRE
          GOTO      EXTA9000
.
.------ using datable care class ------
.
EXTA5100  MOVE      ACARE,PTXAACRE
          MOVE      ACARE,PTXASCRE
          MOVE      ACARE,PTXADCRE
          MOVE      FALSE,FLAGGOT1          * initialise 1st care class flag
          MOVE      FALSE,FLAGGOT2          * initialise 2nd care class flag
          PACK      KEY24,TMPADMN,SP20
          CALL      RDSCHCO1                * position on the code changes file
.
.------ read through the code changes file ------
.
EXTA5200  CALL      RDKCHCO1
          BRANCH    OVRCD,EXTA9000
.
          MATCH     TMPADMN,CHADMN          * compare admission numbers
          GOTO      EXTA9000 IF NOT EQUAL
.
          MATCH     "CC",CHCATG             * see if we have a category "CC"
          GOTO      EXTA5200 IF NOT EQUAL     code
.
          BRANCH    FLAGGOT2,EXTA5400       * skip if we have the 2nd care
.                                             class field already
          BRANCH    FLAGGOT1,EXTA5300       * skip if we have the 1st care
.                                             class field already
          MOVE      CHCODE,PTXAACRE         
          MOVE      TRUE,FLAGGOT1           * set we have got the 1st care 
.                                             class field flag
.------ test for the 2nd care class field------
.
EXTA5300  MATCH     EXTFRDT,CHDATE           * continue if the date the code is
          GOTO      EXTA5200 IF LESS          valid to is >= start of period
          MOVE      CHCODE,PTXASCRE         
          MOVE      TRUE,FLAGGOT2           * set we have got the 2nd care
.                                             class field flag
.------ test for the 3rd care class field ------
.
EXTA5400  MATCH     EXTTODT,CHDATE           * continue if the date the code is
          GOTO      EXTA5200 IF LESS          valid to is >= end of period
          MOVE      CHCODE,PTXADCRE         
.
.------ write to extraction file A ------
.
EXTA9000  MOVE      TMPADMN,KEY8
          CALL      WRPTEXA1                * write to the 1st extraction file
.                                             
EXTA9999  RETURN
+
.*********************************************************************
.*                               CLRB0000                            *
.*     Clear all working variables for the second extraction file    *
.*********************************************************************
CLRB0000  UNPACK    SP30,PTXBTWRD,PTXBTBED,PTXBTTYP,PTXBTCRE,PTXBTDPT:
                         PTXBTADC,PTXBTADT
          MOVE      ZERO,PTXBNDAY
          MOVE      ZERO,PTXBACCM
          MOVE      ZERO,PTXBACCP
          MOVE      ZERO,PTXBACCR
          MOVE      ZERO,PTXBDISC
          MOVE      ZERO,PTXBALLW
          MOVE      ZERO,PTXBTHET
          MOVE      ZERO,PTXBTHTP
          MOVE      ZERO,PTXBTHTR
          MOVE      ZERO,PTXBMISC
          MOVE      ZERO,PTXBMISP
          MOVE      ZERO,PTXBMISR
          MOVE      ZERO,PTXBLSPT
          MOVE      ZERO,PTXBLSRB
          PACK      PTXBSPAR,SP20,SP20
.
CLRB9999  RETURN
+
.*********************************************************************
.*                               EXTB0000                            *
.*                Extract data for extraction file B                 *
.*********************************************************************
EXTB0000  MOVE      SP6,SAVDDTE
          MOVE      SP6,TRWRIT
          MOVE      SP10,STDATE
.
          MOVE      ZERO,SPTTRLSP           * zero Lump Sum amounts
          MOVE      ZERO,SPTTRLSR
.
          MOVE      ZERO,DCFLAG             * check if a Daycase
          COMPARE   ZERO,FLAGDISC           * skip if patient not discharged
          GOTO      EXTB0500 IF EQUAL
.
          MATCH     ADATE,DDATE
          IF        @EQUAL
            MOVE      ONE,DCFLAG            * sameday (daycase)
          ENDIF
.                                       -----  check if casemix patient ------
EXTB0500  MOVE      ZERO,CMXFLAG            * patient classification (default)
          MATCH     ANSY,PTMICMXP
          IF        @EQUAL
            MOVE      ONE,CMXFLAG           * casemix patient
          ENDIF
.
.------ step up variables for stepdown routine ------
.
          MOVE      SP10,SIDATET
          MOVE      SP10,LSTDATE
          MOVE      ZERO,ENDFLAG
          MOVE      ALACDTE,IDATEF           * set starting date for next inv.
          MOVE      IDATEF,SIDATET           * set starting date for next inv.
.
          CALL      GTAB0000                 * get health fund table
.
............................................ * this bit of code is not used
...B1000  PACK      CMDRG,PTMIPCMX,SP20      * Default to prov.casemix code
...
...       UNPACK    SP10,KEY4,KEY5
...       UNPACK    PTMIPCMX,KEY4,KEY5
...       MATCH     SP5,KEY5
...       IF        @EQUAL
...         IF        ASTAT = 3
...           MATCH     SP4,PTDSDDRG
...           IF        !@EQUAL
...             PACK      CMDRG,PTDSDDRG,SP20        * Use discharge DRG Code
...           ENDIF
...         ENDIF
...       ENDIF
............................................. no other reference to CMDRG
.
EXTB2000  MOVE      EXTFRDT,STTRNDT         * set Start date for TRAN extract
          MOVE      ZERO,DONEDTR
.
.                                           * if invoice is printed - extract
.                                           * from DTRs first, then TRANs
          IF        AINVPRT <> 0
            CALL      PDTR0000              * process DTR records
            BRANCH    EXIT,EXTB5000         * finished processing to End-Period
          ENDIF
.
EXTB3000  CALL      PTRN0000                * process TRAN records
.
.
.
.------ we have finished processing this admission, ------
.------ now see if we need to change the records written to cater ------
.------ for a datable care class ------
.
EXTB5000  COMPARE   ZERO,CCARECL            * skip if not using datable care
          GOTO      EXTB9999 IF EQUAL         class
          MOVE      ADATE,WORKDATE
.
          MATCH     EXTFRDT,ADATE            * skip if admission date is >=
          GOTO      EXTB5100 IF NOT LESS      the from date of the period
          MOVE      EXTFRDT,WORKDATE
.
.------ position on the codes changes file ------
.
EXTB5100  MOVE      FALSE,FLAGAORB          * initialize updated A or B record
.                                             flag
          MOVE      FALSE,FLAGLAST          * initialize need to update the 
.                                             last care class flag
          PACK      KEY24,TMPADMN,SP20        
          CALL      RDSCHCO1
          CALL      RDKCHCO1                * make sure we have change of care
          BRANCH    OVRCD,EXTB9999            class record first
.
          MATCH     TMPADMN,CHADMN          * compare admission numbers
          GOTO      EXTB9999 IF NOT EQUAL
          GOTO      EXTB5250
.
.------ read through the codes changes file ------
.
EXTB5200  CALL      RDKCHCO1
          BRANCH    OVRCD,EXTB5230
.
          MATCH     TMPADMN,CHADMN          * compare admission numbers
          GOTO      EXTB5250 IF EQUAL
.
.------ no more records on the care class changes file for this admission -----
.
EXTB5230  MOVE      ACARE,CHCODE
          MOVE      TRUE,FLAGLAST           * initialize updating the last care
.                                             class flag
.------ process this change of care class ------
.
EXTB5250  UNPACK    CHDATE,CHDIM8
.
          MATCH     CHDATE,EXTTODT           * see if end date is >= date
          GOTO      EXTB5300 IF NOT LESS      code is valid until
          MOVE      EXTTO1DT,CHDIM8
.
.------ skip if category is not for care class ------
.
EXTB5300  MATCH     "CC",CHCATG
          GOTO      EXTB6000 IF NOT EQUAL
.
.------ process this change of care class ------
.
EXTB5350  MOVE      EXTTO1DT,EXBDIM8         * set extraction file B date to
.                                             end date + 1 - if no record
          PACK      KEY17,TMPADMN,WORKDATE,SP20
          CALL      RSPTEXB1                * position on extraction file B
          CALL      RKPTEXB1                  for the workdate
          BRANCH    OVRCD,EXTB5500
.
          MATCH     PTXBADMN,TMPADMN        * compare admission numbers
          GOTO      EXTB5500 IF NOT EQUAL
.
          UNPACK    PTXBTDAT,EXBDIM8
.
          MATCH     WORKDATE,EXBDIM8        * skip if no record on extraction
          GOTO      EXTB5500 IF NOT EQUAL     file B = the work date
          GOTO      EXTB5420
.
.------ read through extraction file B ------
.
EXTB5400  CALL      RKPTEXB1
          BRANCH    OVRCD,EXTB6000
.
          MATCH     PTXBADMN,TMPADMN        * compare admission numbers
          GOTO      EXTB6000 IF NOT EQUAL
.
          UNPACK    PTXBTDAT,EXBDIM8
.
.------ process this record ------
.
EXTB5420  MATCH     CHDIM8,EXBDIM8          * skip if extraction file B record
          GOTO      EXTB6000 IF NOT LESS      is >= date code is valid until
.
          COMPARE   ZERO,FLAGAORB           * skip if we have not updated the A
          GOTO      EXTB5450 IF EQUAL         or B record yet
.
          MATCH     ANSA,PTXBTYPE           * if we have an A or B record again
          GOTO      EXTB5400 IF EQUAL         we don't want to update as we
.                                             want the A and B records to 
          MATCH     ANSB,PTXBTYPE             represent the starting care class
          GOTO      EXTB5400 IF EQUAL
.
.------ update the extraction file B record with the change of care class -----
.
EXTB5450  MOVE      CHCODE,PTXBTCRE
          CALL      UPPTEXB1                * update extraction file B record
.
          MOVE      PTXBTYPE,ANS
          REP       "A1B1",ANS
          MOVE      ANS,FLAGAORB            * set updated A or B record flag
.                                             if appropriate
          GOTO      EXTB5400
.
.------ no record found on the extraction file B with a date = work date -----
.------ so we need to insert a change record ------
.
EXTB5500  MOVE      EXBDIM8,SAVEDATE
.
          CALL      RPPTEXB1                * get previous extraction file B
          BRANCH    OVRCD,EXTB6000            record - should always exist
.
          MATCH     PTXBADMN,TMPADMN        * compare admission numbers - 
          GOTO      EXTB6000 IF NOT EQUAL     record should always exist
.
          MOVE      PTXBTDAT,CDYSFDTE
          MOVE      WORKDATE,CDYSTDTE
.
          CALL      CALCDAYS                * calculate bed days
          SUB       ONE,CDYSDAYS
          MOVE      CDYSDAYS,PTXBNDAY
.
          CALL      UPPTEXB1                * update previous extraction file B
.                                             record with bed days
          MOVE      WORKDATE,CDYSFDTE
          MOVE      SAVEDATE,CDYSTDTE
.
          CALL      CALCDAYS                * calculate bed days
.
          SUB       ONE,CDYSDAYS
          MOVE      CDYSDAYS,PTXBNDAY
          MOVE      WORKDATE,PTXBTDAT
          MOVE      CHCODE,PTXBTCRE
.
          MOVE      ZERO,PTXBACCM
          MOVE      ZERO,PTXBACCP
          MOVE      ZERO,PTXBACCR
          MOVE      ZERO,PTXBDISC
          MOVE      ZERO,PTXBALLW
          MOVE      ZERO,PTXBTHET
          MOVE      ZERO,PTXBTHTP
          MOVE      ZERO,PTXBTHTR
          MOVE      ZERO,PTXBMISC
          MOVE      ZERO,PTXBMISP
          MOVE      ZERO,PTXBMISR
          MOVE      ZERO,PTXBLSRB                                      *I-51102
          MOVE      ZERO,PTXBLSPT                                      *I-51102
.
          MOVE      TMPADMN,PTXBADMN
          MOVE      ANSC,PTXBTYPE
          PACK      KEY17,PTXBADMN,PTXBTDAT,PTXBTYPE
          CALL      RAPTEXB1                * Pos read extract file B
          IF        OVRCD=1
            CALL      WRPTEXB1              * Write extract file B
          ELSE
            CALL      UPPTEXB1              * Update extract file B
          ENDIF
.
          CALL      RSPTEXB1                * position on record just written
          GOTO      EXTB5400
.
.------ see if we need to check another change of care class ------
.------ and if we do set the work variable ------
.
EXTB6000  BRANCH    FLAGLAST,EXTB9999       * skip if we have processed the 
.                                             last change of care class
          MATCH     CHDATE,EXTTODT           * finished if date code is valid 
          GOTO      EXTB9999 IF LESS          until is >= end of period
.
          UNPACK    CHDATE,CHDIM8
          MOVE      CHDIM8,WORKDATE
          GOTO      EXTB5200
.
EXTB9999  RETURN
+
.**********************************************************************
.*                               PDTR0000
.*                  Process DTR records to Extract B file
.**********************************************************************
PDTR0000  MOVE      ZERO,EXIT
          MOVE      ZERO,DISCREC
.
.                                           * check if there is a Doctor change
          CALL      CKDR0000
          BRANCH    FOUND,PDTR9999          * revert to Tran search if found
.
          PACK      KEY31,AADMNO,SP30
          CALL      RDSDTRN4
.
PDTR1000  CALL      RDKDTRN4
          BRANCH    OVRCD,PDTR9999          * End-of-File
.
          MATCH     TADMNO,AADMNO           * compare admission numbers
          GOTO      PDTR9999 IF LESS        * Admission record not found
.
          MATCH     "00000000",TREF
          GOTO      PDTR1000 IF EQUAL       * DTR is not Invoiced
.
          COMPARE   ONE,TRECTYPE
          GOTO      PDTR9999 IF NOT EQUAL   * Not an Accomodation record
.
          PACK      DTRFRDT,DTFCENT,DTFYEAR,DTFMONTH,DTFDAY
          REP       " 0",DTRFRDT
          PACK      DTRTODT,TTCENT,TTYEAR,TTMONTH,TTDAY
          REP       " 0",DTRTODT
.
.                                           * Check the date ranges
          MATCH     DTRFRDT,EXTTODT
          GOTO      PDTR9000 IF LESS        * DTR FROM date after Period TO date
.
          MATCH     DTRTODT,EXTFRDT
          GOTO      PDTR1000 IF NOT LESS    * DTR TO date before Period FROM dte
.
.                                           * check Admis.Date vs DTR vs Period
          MATCH     ADATE,DTRFRDT           * first Accom record ?
          IF        @EQUAL
            MATCH     EXTFRDT,DTRFRDT
            IF        @LESS
              MOVE      "B",SAVTMOVE
              MOVE      EXTFRDT,DTRFRDT     * use Period FROM date in DTR
              MOVE      ZERO,SPTTRLSP       * clear Lump Sum amounts
              MOVE      ZERO,SPTTRLSR
            ELSE
              MOVE      "A",SAVTMOVE
              MOVE      PTDTLSPT,SPTTRLSP   * save Lump Sum amounts
              MOVE      PTDTLSRB,SPTTRLSR
            ENDIF
          ENDIF
.
.                                           * change dates to be selected range
          MATCH     EXTFRDT,DTRFRDT
          IF        @LESS
            MOVE      EXTFRDT,DTRFRDT       * DTR FROM date before Period FROM
          ENDIF
.
          MATCH     DTRTODT,EXTTO1DT
          IF        @LESS
            MOVE      EXTTO1DT,DTRTODT      * DTR TO date after Period TO date
          ENDIF
.
.                                           * check if Discharge is in period
          COMPARE   THREE,ASTAT
          GOTO      PDTR2000 IF NOT EQUAL
.
          MATCH     DDATE,DTRTODT
          GOTO      PDTR2000 IF NOT EQUAL   * not the last/discharge DTR
.
          MOVE      ONE,DISCREC             * create a Discharge "Z" record
.
.                                           * start setup for Extract B recd
.
PDTR2000  MOVE      DTRTODT,STTRNDT         * save TO date for checking Trans
.
          MOVE      DTRFRDT,CDYSFDTE
          MOVE      DTRTODT,CDYSTDTE
          CALL      CALCDAYS                * ans in CDYSDAYS
.
          SUB       ONE,CDYSDAYS
          MOVE      CDYSDAYS,DAYSCHRG
.                                           * skip if patient is not a day case
          IF        CDYSDAYS = 0 & ACDAYCS = 1
            MOVE      ONE,DAYSCHRG          * set charging to 1 day for Day Case
          ENDIF
.
.                                           *
.                                           * READ the TRAN records
.
          UNPACK    SP20,SAVTBED
          MOVE      ZERO,SAVTALLW
          MOVE      ZERO,SAVTDISC
          MOVE      ZERO,SAVEXTRA
.
          MOVE      DTRFRDT,DATEWORK        * find the appropriate Tran record
          ADD       ONE,DATEWORK            * to get Ward & BED
          PACK      KEY30,DTADMNO,DATEWORK,SP30
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          MATCH     DTADMNO,DTADMN
          GOTO      PDTR3000 IF NOT EQUAL
          MATCH     DTRFRDT,TDATE
          GOTO      PDTR3000 IF NOT EQUAL
.                                           * matching Tran record
          MATCH     SP6,TADOCT
          IF        !@EQUAL
            MOVE      TADOCT,SAVADOCT
          ENDIF
          MOVE      TBED,SAVTBED
          MOVE      TDISC,SAVTDISC
          MOVE      TALLW,SAVTALLW
          MOVE      TEXTRA,SAVEXTRA
.
.                                           * rework DTR fields to TRAN fields
PDTR3000  MOVE      TREBATE,SAVRATEH        * may include CMX Addit.Charges
          DIV       TNODAYS,SAVRATEH
          MOVE      TPATAMTT,SVPATPOR       * Patient Portion
          SUB       TREBATE,SVPATPOR
          DIV       TNODAYS,SVPATPOR
.                                           * Accomodation Charge
          MOVE      TPATAMTI,SVXBACCM        * LSTRATE
          MULT      DAYSCHRG,SVXBACCM
          ADD       SPTTRLSP,SVXBACCM       * add lump sum
          ADD       SPTTRLSR,SVXBACCM
          ADD       SVXBACCM,ENETAMT        * control record total
.
.                                           * Patient Portion of Charge
          MOVE      SVPATPOR,SVXBACCP
          MULT      DAYSCHRG,SVXBACCP
.
.                                           * Rebate Portion of Charge
          MOVE      SAVRATEH,SVXBACCR
          MULT      DAYSCHRG,SVXBACCR
.
.                                           * setup and write Extract B record
.
PDTR5000  CALL      CLRB0000
.
          MOVE      DTADMNO,DPTXBADM
          MOVE      DTRFRDT,PTXBTDAT
          MOVE      SAVTMOVE,PTXBTYPE
.                                           * now see if an extract B exists
          PACK      KEY17,DPTXBADM,PTXBTDAT,PTXBTYPE
          CALL      RDPTEXB1
          MOVE      OVRCD,NEWEXTB           * set the New Record flag reqd
          COMPARE   ZERO,OVRCD
          GOTO      PDTR7000 IF EQUAL       * Extract B recd found
.
.                                           * setup Extract B data fields
PDTR6000  MOVE      TDWARD,PTXBTWRD
          MOVE      SAVTBED,PTXBTBED
          MOVE      TADMTYP,PTXBTTYP
          MOVE      ACARE,PTXBTCRE
          MOVE      ACLSSFT,PTXBTDPT
.
          MOVE      SAVADOCT,PTXBTADC
          MOVE      PTXBTADC,KEY6
          CALL      RDDOCT1                 * read the doctors file
          BRANCH    OVRCD,PDTR6500
          MOVE      DRTYPE,PTXBTADT
PDTR6500  PACK      PTXBSPAR,SP20,SP20
.
.                                           * now the charges
PDTR7000  ADD       SPTTRLSP,PTXBLSPT       * lump sum
          ADD       SPTTRLSR,PTXBLSRB
          MOVE      ZERO,SPTTRLSP
          MOVE      ZERO,SPTTRLSR
.
.
          ADD       CDYSDAYS,PTXBNDAY
          ADD       SVXBACCM,PTXBACCM
          ADD       SVXBACCP,PTXBACCP
          ADD       SVXBACCR,PTXBACCR
          ADD       SAVTDISC,PTXBDISC
          ADD       SAVTALLW,PTXBALLW
.
          IF        NEWEXTB = 0
            CALL      UPPTEXB1
          ELSE
            CALL      WRPTEXB1
          ENDIF
.
          MOVE      "C",SAVTMOVE            * make the rest "C" records
          MOVE      ONE,DONEDTR
          BRANCH    DISCREC,PDTR8000        * finish - Discharge rec found
          GOTO      PDTR1000
.
.                                           * write Extract B "Z" record
.
PDTR8000  MATCH     ADATE,DDATE
          GOTO      PDTR8100 IF EQUAL       * if its a day case - continue
          MATCH     DDATE,EXTTODT           * check if 1st day next period -
          GOTO      PDTR9000 IF LESS        * coz we used EXTTO1DT to get here
.
PDTR8100  CALL      CLRB0000
.
          MOVE      DTADMNO,DPTXBADM
          MOVE      DDATE,PTXBTDAT
          MOVE      "Z",PTXBTYPE
.                                           * now see if an extract B exists
          PACK      KEY17,DPTXBADM,PTXBTDAT,PTXBTYPE
          CALL      RDPTEXB1
.
          IF        OVRCD = 0
            CALL      UPPTEXB1
          ELSE
            MOVE      TDWARD,PTXBTWRD
            MOVE      SAVTBED,PTXBTBED
            MOVE      TADMTYP,PTXBTTYP
            MOVE      ACARE,PTXBTCRE
            MOVE      ACLSSFT,PTXBTDPT
            MOVE      SAVADOCT,PTXBTADC
            MOVE      PTXBTADC,KEY6
            CALL      RDDOCT1                * read the doctors file
            BRANCH    OVRCD,PDTR8500
            MOVE      DRTYPE,PTXBTADT
PDTR8500    PACK      PTXBSPAR,SP20,SP20
            CALL      WRPTEXB1
          ENDIF
.
.                                           * processing finished to End-Period
PDTR9000  MOVE      ONE,EXIT                * set EXIT to bypass Tran processing
.
PDTR9999  RETURN
+
+
.**********************************************************************
.*                               CKDR0000
.*       Check if Attending Doctor changes (can't work DTRs correctly)
.**********************************************************************
CKDR0000  MOVE      ZERO,FOUND
          MOVE      SP6,PREVDOC
.
          PACK      KEY30,TMPADMN,SP20
          CALL      RDSTRAN2                * position on the transfer file
.
.------ read through the transfer file ------
.
CKDR1000  CALL      RDKTRAN2
          BRANCH    OVRCD,CKDR9999
.
          MATCH     AADMNO,TADMN            * compare admission numbers
          GOTO      CKDR9999 IF NOT EQUAL
.
          MATCH     PREVDOC,TADOCT
          GOTO      CKDR1000 IF EQUAL
.
          MATCH     SP6,PREVDOC             * PREVDOC is blank if first time
          GOTO      CKDR2000 IF NOT EQUAL
          MOVE      TADOCT,PREVDOC
          GOTO      CKDR1000
.
CKDR2000  MOVE      ONE,FOUND               * a doctor change found
.
CKDR9999  RETURN
+
.**********************************************************************
.*                               PTRN0000
.*                  Process TRN records to Extract B files
.**********************************************************************
PTRN0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,CHRGFLG
          MOVE      TMPADMN,AADMNO
          PACK      KEY30,AADMNO,SP20
          CALL      RDSTRAN2                * position on the transfer file
.
.------ read through the transfer file ------
.
PTRN1000  CALL      RDKTRAN2
          BRANCH    OVRCD,PTRN4000
.
          MATCH     AADMNO,TADMN            * compare admission numbers
          GOTO      PTRN4000 IF NOT EQUAL
.
          MOVE      TDATE,ORIGTDAT          * Save transfer date
          MOVE      TDATE,LSTDATE
.
          MATCH     "A",TMOVE
          IF        @EQUAL
            MATCH     STTRNDT,TDATE         * Extract date or DTR date vs TDATE
            IF        @LESS
              MOVE      ZERO,SPTTRLSP       * clear Lum Sum values
              MOVE      ZERO,SPTTRLSR
              MOVE      "B",SAVTMOVE
              IF        DONEDTR = 1
                MOVE      "C",SAVTMOVE      * create a "C", not a "B"
              ENDIF
            ELSE                            * save Lum Sum from Admis. Tran
              MOVE      PTTRLSPT,SPTTRLSP
              MOVE      PTTRLSRB,SPTTRLSR
              MOVE      "A",SAVTMOVE
            ENDIF
          ENDIF
.
.                                ------ check if either stepdown is reqd ------
.
PTRN1010  IF        CMXFLAG = 1
            BRANCH    DCFLAG,PTRN1020     * sameday, no stepdown
            CALL      PATCMSTP
            GOTO      PTRN1020
          ENDIF
.
          BRANCH    CHOSTYP,PTRN1020
          COMPARE   ONE,CSTDOWN
          CALL      STEPDOWN IF EQUAL
.
PTRN1020  COMPARE   ZERO,ENDFLAG
          GOTO      PTRN1040 IF EQUAL
.
          MATCH     LSTDATE,TDATE
          GOTO      PTRN1200 IF EQUAL
.
          MATCH     TDATE,EXTTODT
          GOTO      PTRN4300 IF LESS
.
PTRN1040  MATCH     TDATE,EXTTODT           * skip if transfer date is
          GOTO      PTRN4000 IF LESS        * after the end date
.
          MATCH     STTRNDT,TDATE
          GOTO      PTRN1500 IF NOT LESS    * if tran-date >= from-date
.
.                                           * trans-date < from-date
          MOVE      STTRNDT,STDATE
          MOVE      STDATE,CDYSFDTE
          MOVE      TADOCT,SAVADOCT
.
          MATCH     ANSL,TMOVE              * skip if we have a leave record
          GOTO      PTRN1150 IF EQUAL
          MOVE      ANSB,TMOVE              * ******** "B" tmove - "B"egin
          IF        DONEDTR = 1
            MOVE      "C",TMOVE             * "B" record already output
          ENDIF
          GOTO      PTRN1150
.
.------ save current transfer file variables ------
.
PTRN1100  MOVE      TDATE,STDATE
PTRN1150  CALL      SAVV0000                * save transfer file variables
.
.------ save stepdown variables ------
.
PTRN1200  MOVE      TATYPE,STATYPE
          MOVE      TRBTYP,STRBTYP
          MOVE      TRBEND,STRBEND
          MOVE      PTTRAEND,SPTTRAEN
          MOVE      TDATE,SIDATET
          GOTO      PTRN1000
.
.------ transfer date is in the period ------
.
PTRN1500  MOVE      TMOVE,ANS
          REP       "A1C2L3R4D5",ANS
          MOVE      ANS,FORM1
.
          BRANCH    FORM1,PTRN1100,PTRN2000,PTRN2000,PTRN1100,PTRN2000
.                           "A"      "C"      "L"      "R"      "D"
.
.------ we have a "C", "L", "R", or "D" record ------
.
PTRN2000  MOVE      TDATE,CDYSTDTE
          MOVE      STDATE,CDYSFDTE
.
          CALL      CALCDAYS                * calculate the date difference
          SUB       ONE,CDYSDAYS
.
          COMPARE   ZERO,CDYSDAYS           * skip if we have bed days
          GOTO      PTRN2900 IF LESS
          GOTO      PTRN2500 IF NOT EQUAL
.
          MATCH     ANSA,SAVTMOVE           * see if saved transfer movement
          GOTO      PTRN2500 IF EQUAL         is type "A"
.
          MATCH     ANSB,SAVTMOVE           * see if saved transfer movement
          GOTO      PTRN2900 IF NOT EQUAL     is type "B"
.
PTRN2500  BRANCH    PTXADAYC,PTRN2900       * daycase patient
          CALL      WRIB0000                * write a rec. to extraction file B
.
.------ save current transfer file variables ------
.
PTRN2900  MATCH     ANSD,TMOVE              * skip if we are processing the
          GOTO      PTRN3000 IF EQUAL         "D" record
          GOTO      PTRN1100
.
.------ we are processing the "D" record on the transfer file ------
.
PTRN3000  COMPARE   ONE,PTXADAYC
          GOTO      PTRN3100 IF NOT EQUAL
          MOVE      ANSA,SAVTMOVE
          CALL      WRIB0000                * write a rec. to Ext. B for daycase
....      GOTO      PTRN9999                * (should this be here ?? - see V6)
.
PTRN3100  MOVE      ANSZ,TMOVE
          CALL      SAVV0000                * save transfer file variables
          MOVE      ZERO,CDYSDAYS
.
          CALL      WRIB0000                * write a rec. to extraction file B
          GOTO      PTRN9999
.
.----------------------------------------------------------------------------
.------ No more transfer file records for this admission in the period ------
.
PTRN4000  MOVE      ONE,ENDFLAG
          BRANCH    FLAGDISC,PTRN4100        * patient discharged
          PACK      ORIGTDAT,CCC,CYY,CMM,CDD      * use current date
          GOTO      PTRN4200
.
PTRN4100  MOVE      LSTDATE,ORIGTDAT          * use transfer date
.
PTRN4200  REP       " 0",ORIGTDAT
.
          IF        CMXFLAG = 1
            BRANCH    DCFLAG,PTRN4300         * no stepdown for Daycase
            MOVE      ORIGTDAT,TDATE
            MOVE      SP1,TMOVE
            LOAD      TMOVE USING ASTAT OF ANSC,ANSC,ANSC,ANSR
            MOVE      STATYPE,TATYPE
            MOVE      STRBTYP,TRBTYP
            MOVE      STRBEND,TRBEND
            MOVE      SPTTRAEN,PTTRAEND
            CALL      PATCMSTP
            MOVE      ONE,ENDFLAG
            GOTO      PTRN4250
          ENDIF
.
.------ check if stepdown is required ------
.
          MOVE      ORIGTDAT,TDATE
          BRANCH    CHOSTYP,PTRN4300
          COMPARE   ONE,CSTDOWN
          GOTO      PTRN4300 IF NOT EQUAL
.
          MOVE      SP1,TMOVE
          LOAD      TMOVE,ASTAT,ANSC,ANSC,ANSC,ANSR * type of movement
.                               changed record,return from leave
          MOVE      STATYPE,TATYPE          * move previously saved variables
          MOVE      STRBTYP,TRBTYP          * back
          MOVE      STRBEND,TRBEND
          CALL      STEPDOWN                * stepdown routine
          MOVE      ONE,ENDFLAG             * last tran record
.
.------ check if a stepdown was indicated = shown by a new TDATE ------
.
PTRN4250  MATCH     TDATE,ORIGTDAT
          GOTO      PTRN4300 IF EQUAL
.
          MATCH     TDATE,LSTDATE
          GOTO      PTRN1020 IF LESS
          GOTO      PTRN1200
.
PTRN4300 
          MATCH     EXTTO1DT,TDATE
          GOTO      PTRN4320 IF NOT LESS
.
          PACK      CDYSTDTE,TDATE
          REP       " 0",CDYSTDTE
          GOTO      PTRN4340
.
PTRN4320  MOVE      EXTTO1DT,CDYSTDTE
.
PTRN4340  MOVE      STDATE,CDYSFDTE
.
          CALL      CALCDAYS                * calculate the date difference
          SUB       ONE,CDYSDAYS
.
          COMPARE   ZERO,CDYSDAYS           * skip if we have bed days
          GOTO      PTRN4400 IF NOT EQUAL
.
          MATCH     ANSA,SAVTMOVE           * see if saved transfer movement
          GOTO      PTRN4400 IF EQUAL         is type "A"
.
          MATCH     ANSB,SAVTMOVE           * see if saved transfer movement
          GOTO      PTRN9999 IF NOT EQUAL     is type "B"
.
PTRN4400  BRANCH    PTXADAYC,PTRN9999       * daycase patient
          MATCH     ANSL,SAVTMOVE
          GOTO      PTRN9999 IF EQUAL
          MOVE      EXTTODT,TDATE
          CALL      WRIB0000                * write a rec. to extraction file B
.
PTRN9999  RETURN
+
.**********************************************************************
.*                               WRIB0000                             *
.*                 Write a record to extraction file B                *
.**********************************************************************
WRIB0000  CALL      CLRB0000                * clear the data variables
.
          MOVE      TMPADMN,DPTXBADM                                   *I-48680
          MOVE      STDATE,PTXBTDAT
          MOVE      SAVTMOVE,PTXBTYPE
.
.                                           * Check if this Ext.B recd is a
          MATCH     ANSR,SAVTMOVE           * "R"eturn, that the previous recd
          IF        @EQUAL
            MATCH     ANSL,LASTTYPE         * was a "L"eave record
            IF        !@EQUAL
              MOVE      ANSC,PTXBTYPE       * if not, make this a "C"hange
            ENDIF
          ENDIF
.
.                                           * now see if one exists
          PACK      KEY17,DPTXBADM,PTXBTDAT,PTXBTYPE
          CALL      RDPTEXB1
          MOVE      OVRCD,NEWEXTB           * set the New Record flag reqd
.
          MOVE      CDYSDAYS,DAYSCHRG
          MOVE      CDYSDAYS,PTXBNDAY
          MOVE      SAVWARD,PTXBTWRD
          MOVE      SAVBED,PTXBTBED
          MOVE      SAVATYPE,PTXBTTYP
          MOVE      ACARE,PTXBTCRE
          MOVE      SAVDEPT,PTXBTDPT
          PACK      PTXBSPAR,SP20,SP20
.
          COMPARE   ZERO,PTXADAYC           * skip if patient is not a day case
          GOTO      WRIB0050 IF EQUAL
          MOVE      ONE,DAYSCHRG
.
.------ continue processing ------
.
WRIB0050  MOVE      SAVADOCT,PTXBTADC
          MOVE      SAVADOCT,KEY6
          CALL      RDDOCT1                 * read the doctors file
          BRANCH    OVRCD,WRIB0100
          MOVE      DRTYPE,PTXBTADT
.
.------ continue processing ------
.
WRIB0100  MOVE      ZERO,OVRCD
.
WRIB0200  BRANCH    CMXFLAG,WRIB0220
.
          MATCH     ANSL,PTXBTYPE           * see if we have transfer type "L"
          GOTO      WRIB1000 IF EQUAL
.
          MATCH     ANSZ,PTXBTYPE           * see if we have transfer type "Z"
          GOTO      WRIB1000 IF EQUAL
.
          COMPARE   ONE,CMXFLAG
          GOTO      WRIB0300 IF NOT EQUAL
.
WRIB0220  IF        DCFLAG = 1 
            BRANCH    CHRGFLG,WRIB1000
            MOVE      ZERO,DAYSCHRG
            MATCH     EXTFRDT,ADATE   
            GOTO      WRIB1000 IF LESS
            MATCH     ADATE,EXTTODT    
            GOTO      WRIB1000 IF LESS 
            IF        PTXADAYC <> 1
              MOVE      ONE,DAYSCHRG
            ENDIF
            MOVE      ONE,CHRGFLG
            MOVE      SPTTRLSP,PTXBLSPT
            MOVE      SPTTRLSR,PTXBLSRB
            MOVE      ZERO,SPTTRLSP
            MOVE      ZERO,SPTTRLSR
          ELSE
            BRANCH    CHRGFLG,WRIB0300
            MATCH     EXTFRDT,ADATE   
            GOTO      WRIB0300 IF LESS
            MATCH     ADATE,EXTTODT    
            GOTO      WRIB0300 IF LESS 
.
            MOVE      SPTTRLSP,PTXBLSPT
            MOVE      SPTTRLSR,PTXBLSRB
            MOVE      ZERO,SPTTRLSP
            MOVE      ZERO,SPTTRLSR
            MOVE      ONE,CHRGFLG
          ENDIF
.
WRIB0300  MOVE      SAVRATEF,PTXBACCM
          ADD       SAVRATEH,PTXBACCM
          ADD       SPTTRADP,PTXBACCM
          ADD       SPTTRADR,PTXBACCM
          ADD       SAVEXTRA,PTXBACCM
          SUB       SAVDISC,PTXBACCM
          SUB       SAVTALLW,PTXBACCM
          MULT      DAYSCHRG,PTXBACCM
.                                           * now add Lumpsum to Accomm.
          ADD       PTXBLSPT,PTXBACCM                                  *I-51105
          ADD       PTXBLSRB,PTXBACCM                                  *I-51102
          ADD       PTXBACCM,ENETAMT
.
          MOVE      SAVRATEF,PTXBACCP
          ADD       SPTTRADP,PTXBACCP
          ADD       SAVEXTRA,PTXBACCP
          SUB       SAVDISC,PTXBACCP
          SUB       SAVTALLW,PTXBACCP
          MULT      DAYSCHRG,PTXBACCP
.
          MOVE      SAVRATEH,PTXBACCR
          ADD       SPTTRADR,PTXBACCR
          MULT      DAYSCHRG,PTXBACCR
.
          IF        PTCNJADJ = 1
            MOVE      ZERO,PTXBDISC          * will be using this for journals
          ELSE
            MOVE      SAVDISC,PTXBDISC
            MULT      DAYSCHRG,PTXBDISC
          ENDIF
.
          MOVE      SAVTALLW,PTXBALLW
          MULT      DAYSCHRG,PTXBALLW
.
.------ set up the charging variables ------
.
WRIB1000  MOVE      TMPADMN,AADMNO
          PACK      KEY22,AADMNO,SP20       * position on the debtors 
          CALL      RDSDTRN1                  transaction file 
.
          COMPARE   ZERO,CDYSDAYS           * see if we have zero bed days
          GOTO      WRIB1100 IF NOT EQUAL
.
          MATCH     ANSA,SAVTMOVE
          GOTO      WRIB1100 IF EQUAL
.
          MATCH     ANSB,SAVTMOVE
          GOTO      WRIB1100 IF EQUAL
.
          MATCH     ANSZ,PTXBTYPE           * see if we are processing the
          GOTO      WRIB2000 IF NOT EQUAL     discharge record
.
          COMPARE   ZERO,FLAGDISC           * make sure patient is actually
          GOTO      WRIB2000 IF EQUAL         discharged
.
          MATCH     ADATE,DDATE             * see if we have a day case
          GOTO      WRIB1100 IF EQUAL
.
          MATCH     DISDATE,EXTFRDT          * see if patient was discharged on
          GOTO      WRIB2000 IF NOT EQUAL     the start date of the period
.
.------ read through the debtors transaction file ------
.
WRIB1100  CALL      RDKDTRN1
          BRANCH    OVRCD,WRIB2000
.
          MATCH     AADMNO,TADMNO           * compare admission numbers
          GOTO      WRIB2000 IF NOT EQUAL
.
          BRANCH    TRECTYPE,WRIB1100,WRIB1500,WRIB1500,WRIB1100,WRIB1100:
                             WRIB1200
.
.------ check if journals are being collected ------
.
WRIB1200  IF        PTCNJADJ <> 1
            GOTO      WRIB1100
          ENDIF
.
.------ set up the transaction date ------
.
WRIB1500  PACK      TRDATE,TFCENT,TFYEAR,TFMONTH,TFDAY
          REP       " 0",TRDATE
.
          MATCH     ADATE,TRDATE            * see if less than admission date
          GOTO      WRIB1600 IF NOT LESS
          MOVE      ADATE,TRDATE
          GOTO      WRIB1700
.
.------ see if patient is discharged ------
.
WRIB1600  COMPARE   ZERO,FLAGDISC           * skip if patient not discharged
          GOTO      WRIB1700 IF EQUAL
.
          MATCH     TRDATE,DDATE            * skip if discharge date is >=
          GOTO      WRIB1700 IF NOT LESS      the transaction date
          MOVE      DDATE,TRDATE
.
.------ see if transaction date is inside the period selected ------
.
WRIB1700  MATCH     STDATE,TRDATE         * get next record if transaction
          GOTO      WRIB1100 IF LESS          date is = or < saved transaction
          GOTO      WRIB1710 IF EQUAL         date for this record
          GOTO      WRIB1720
.
WRIB1710  MATCH     ANSC,SAVTMOVE           * saved transaction a change rec. ?
          GOTO      WRIB1720 IF NOT EQUAL   * no
.         MATCH     ANSC,TMOVE              * yes - is current transaction a
.         GOTO      WRIB1100 IF EQUAL               change record ?
          MATCH     ANSD,TMOVE
          GOTO      WRIB1100 IF EQUAL               discharge record ?
.
WRIB1720  MATCH     TRDATE,TDATE            * see if transaction date is >
          GOTO      WRIB1100 IF LESS          end date for this record
.
          MATCH     TRDATE,SAVDDTE          * see if the transaction date has
          GOTO      WRIB1100 IF EQUAL         already been processed
.
          MOVE      TRDATE,TRWRIT           * save accepted transaction date
.
          COMPARE   SIX,TRECTYPE            * test for a journal adjustment
          GOTO      WRIB1900 IF EQUAL
.
          COMPARE   TWO,TRECTYPE            * test for a theatre charge
          GOTO      WRIB1800 IF NOT EQUAL
.
          ADD       TPATAMTP,PTXBTHTP
          ADD       TREBATE,PTXBTHTR
          GOTO      WRIB1100
.
.------ charge is a miscellaneous one ------
.
WRIB1800  ADD       TPATAMTP,PTXBMISP
          ADD       TREBATE,PTXBMISR
          GOTO      WRIB1100
.
.------ charge is a miscellaneous one ------
.
WRIB1900  ADD       TPATAMTT,PTXBDISC
          GOTO      WRIB1100
.
.------ finished processing this patient so add variables to the totals ------
.
WRIB2000  ADD       PTXBTHTP,PTXBTHET
          ADD       PTXBTHTR,PTXBTHET
          ADD       PTXBTHET,ENETAMT
          ADD       PTXBMISP,PTXBMISC
          ADD       PTXBMISR,PTXBMISC
          ADD       PTXBMISC,ENETAMT
.
          MOVE      TMPADMN,PTXBADMN
          PACK      KEY17,DPTXBADM,PTXBTDAT,PTXBTYPE
          IF        NEWEXTB = 1
            CALL      WRPTEXB1              * Write extract file B
          ELSE
            CALL      UPPTEXB1              * Update extract file B
          ENDIF
.
....      CALL      RSPTEXB1                * position on record just written
.
          MOVE      PTXBTYPE,LASTTYPE
          MOVE      TRWRIT,SAVDDTE          * set already processed transaction
.                                             date to saved accepted trans. date
WRIB9999  RETURN
+
.**********************************************************************
.*                               SAVV0000                             *
.*       Routine to save the neccessary transfer file variables       *
.**********************************************************************
SAVV0000  MOVE      TATYPE,SAVATYPE
          MOVE      TADOCT,SAVADOCT
          MOVE      TDISC,SAVDISC
          MOVE      TEXTRA,SAVEXTRA
          MOVE      TRATEF,SAVRATEF
          MOVE      TRATEH,SAVRATEH
          MOVE      PTTRADPT,SPTTRADP
          MOVE      PTTRADRB,SPTTRADR
          MOVE      TALLW,SAVTALLW
.
          MATCH     ANSZ,TMOVE
          IF        @EQUAL
            MOVE      TDATE,STDATE
          ENDIF
.
          MOVE      TCHSTAT,SAVTCHST
          MOVE      TMOVE,SAVTMOVE
          MOVE      TWARD,SAVWARD
          MOVE      TBED,SAVBED
          MOVE      TDEPT,SAVDEPT
.
SAVV9999  RETURN
+
.**********************************************************************
.*                               CLRC0000                             *
.*     Clear all working variables for the third extraction file      *
.**********************************************************************
CLRC0000  UNPACK    SP30,PTXCCTYP,PTXCCODE,PTXCDATE,PTXCMADC,PTXCMADT,PTXCMWRD
          UNPACK    SP30,PTXCMBED,PTXCSPAR
          MOVE      ZERO,PTXCCOST
.
CLRC9999  RETURN
+
.*********************************************************************
.*                               EXTC0000                            *
.*                Extract data for extraction file C                 *
.*********************************************************************
EXTC0000  MOVE      TMPADMN,AADMNO
          PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECD2
EXTC1000  CALL      RKPTECD2
          BRANCH    OVRCD,EXTC3000
.
          MATCH     AADMNO,PTEDADMN
          GOTO      EXTC3000 IF NOT EQUAL
.
          PACK      KEY12,TMPADMN,ANSD,PTEDUNQN
          MOVE      PTEDTYPE,PTXCCTYP
          MOVE      PTEDCODE,PTXCCODE
          MOVE      PTXADADC,PTXCMADC
          MOVE      PTXADADT,PTXCMADT
          MOVE      PTXADWRD,PTXCMWRD
          MOVE      PTXADBED,PTXCMBED
          MOVE      SP20,PTXCSPAR
.
          CALL      WRPTEXC1                * write to extraction file C
          GOTO      EXTC1000
.
.------ position on the medical records operations file ------
.
EXTC3000  MOVE      TMPADMN,AADMNO
          PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECO2
EXTC3100  CALL      RKPTECO2
          BRANCH    OVRCD,EXTC6000
.
          MATCH     AADMNO,PTEOADMN
          GOTO      EXTC6000 IF NOT EQUAL
.
          PACK      KEY12,TMPADMN,ANSO,PTEOUNQN
          MOVE      PTEOTYPE,PTXCCTYP
          MOVE      PTEOCODE,PTXCCODE
          ADD       ONE,TOTOPS
.
          MATCH     SP8,PTEODATE
          GOTO      EXTC3200 IF EQUAL
.
          MOVE      PTEODATE,PTXCDATE
          MOVE      PTEODATE,WORKDATE
.
.         Check if the operation date is within the period
.
          MATCH     EXTFRDT,WORKDATE
          GOTO      EXTC3100 IF LESS
.
          MATCH     WORKDATE,EXTTODT
          GOTO      EXTC3100 IF LESS
.
.------ continue processing ------
.
EXTC3200  MOVE      PTEOCODE,KEY9
          CALL      RD10T9O1
          IF        OVRCD=1
            CALL      RDPT10O1
          ENDIF
          BRANCH    OVRCD,EXTC3300
          MOVE      OFEE,PTXCCOST
.
.------ continue processing ------
.
EXTC3300  MOVE      PTXADADC,PTXCMADC
          MOVE      PTXADADT,PTXCMADT
          MOVE      PTXADWRD,PTXCMWRD
          MOVE      PTXADBED,PTXCMBED
.
          MATCH     SP8,PTEODATE
          GOTO      EXTC3400 IF EQUAL
.
          PACK      KEY30,AADMNO,CCENT,CYEAR,CMON,CDAY,PTEOEDTM,SP20,SP20
          CALL      RDSTRAN2                * position on transfer file for
          CALL      RDKTRAN2                * operation date and time
          BRANCH    OVRCD,EXTC3400
.
          MATCH     TADMN,AADMNO            * compare admission numbers
          GOTO      EXTC3400 IF NOT EQUAL
.
          MATCH     TDATE,WORKDATE          * see if transfer date is the same
          GOTO      EXTC3350 IF EQUAL       * as the operation date
.
          CALL      RDPTRAN2                * get the previous transfer file
          BRANCH    OVRCD,EXTC3400          * record
.
          MATCH     TADMN,AADMNO            * compare admission numbers
          GOTO      EXTC3400 IF NOT EQUAL
.
.------ continue processing ------
.
EXTC3350  MOVE      TADOCT,PTXCMADC
          MOVE      TWARD,PTXCMWRD
          MOVE      TBED,PTXCMBED
          MOVE      TADOCT,KEY6
          CALL      RDDOCT1                 * read the doctors file
          BRANCH    OVRCD,EXTC3400
.
          MOVE      DRTYPE,PTXCMADT
.
.------ continue processing ------
.
EXTC3400  MOVE      SP20,PTXCSPAR
          CALL      RAPTEXC1
          IF        OVRCD = ONE
            CALL      WRPTEXC1                * write to extraction file C
          ENDIF
          GOTO      EXTC3100
.
.------ position on the medical records MBS file ------
.
EXTC6000  MOVE      TMPADMN,AADMNO
          PACK      KEY11,AADMNO,SP70
          CALL      RDSMMBS1
.
.------ read through the medical records MBS file ------
.
EXTC6100  CALL      RDKMMBS1
          BRANCH    OVRCD,EXTC9999
.
          MATCH     AADMNO,MMADMN           * compare admission numbers
          GOTO      EXTC9999 IF NOT EQUAL
.
          PACK      KEY12,TMPADMN,ANSM,MMRECN
          MOVE      ANSM,PTXCCTYP
          MOVE      MMCODE,PTXCCODE
          ADD       ONE,TOTMBS
.
          MATCH     SP8,MMDATE              * see if MBS date is spaces
          GOTO      EXTC6200 IF EQUAL
.
          UNPACK    MMDATE,CCENT,CYEAR,CMON,CDAY
          PACK      PTXCDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",PTXCDATE
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",WORKDATE
.
.         Check if the operation date is within the period
.
          MATCH     EXTFRDT,WORKDATE
          GOTO      EXTC6100 IF LESS
.
          MATCH     WORKDATE,EXTTODT
          GOTO      EXTC6100 IF LESS
.
.------ continue processing ------
.
EXTC6200  MOVE      MMCODE,KEY9
          PACK      KEY17,KEY9,MMDATE,SP70
          CALL      PATITMRD                * read patient item file
          BRANCH    OVRCD,EXTC6300
          MOVE      IAMT,PTXCCOST
.
.------ continue processing ------
.
EXTC6300  MOVE      PTXADADC,PTXCMADC
          MOVE      PTXADADT,PTXCMADT
          MOVE      PTXADWRD,PTXCMWRD
          MOVE      PTXADBED,PTXCMBED
.
          MATCH     SP8,MMDATE              * see if MBS date is spaces
          GOTO      EXTC6400 IF EQUAL
.
          PACK      KEY30,AADMNO,CCENT,CYEAR,CMON,CDAY,MMETIM,SP20,SP20
          CALL      RDSTRAN2                * position on transfer file for
          CALL      RDKTRAN2                  MBS date and time
          BRANCH    OVRCD,EXTC6400
.
          MATCH     TADMN,AADMNO            * compare admission numbers
          GOTO      EXTC6400 IF NOT EQUAL
.
          MATCH     TDATE,WORKDATE          * see if transfer date is the same
          GOTO      EXTC6350 IF EQUAL         as the MBS date
.
          CALL      RDPTRAN2                * get the previous transfer file
          BRANCH    OVRCD,EXTC6400            record
.
          MATCH     TADMN,AADMNO            * compare admission numbers
          GOTO      EXTC6400 IF NOT EQUAL
.
.------ continue processing ------
.
EXTC6350  MOVE      TADOCT,PTXCMADC
          MOVE      TWARD,PTXCMWRD
          MOVE      TBED,PTXCMBED
          MOVE      TADOCT,KEY6
          CALL      RDDOCT1                 * read the doctors file
          BRANCH    OVRCD,EXTC6400
.
          MOVE      DRTYPE,PTXCMADT
.
.------ continue processing ------
.
EXTC6400  MOVE      SP20,PTXCSPAR
          CALL      RAPTEXC1
          IF        OVRCD = ONE
            CALL      WRPTEXC1                * write to extraction file C
          ENDIF
          GOTO      EXTC6100
.
EXTC9999  RETURN
+
.*********************************************************************
.*                              UPDC0000                             *
.*    Update the control file with the relevant extraction data      *
.*********************************************************************
UPDC0000  MOVE      TOTOPS,EDOPERS
          LOAD      EDOPERS,CMBSOPR,TOTMBS
          PACK      WORKDATE,CCC,CYY,CMM,CDD
          REP       " 0",WORKDATE
          MOVE      WORKDATE,EDATE
          MOVE      EXTFRDT,EFDATE 
          MOVE      EXTTODT,ETDATE
.         MOVE      "1",EPGMID              * Prgm ID for IBAPMS76     *I-45951
.
          CALL      ETABPOS                 * get sector and tab position
.
          WRITAB    CONTROLF,SEC;*ETABPS,EDATE,EFDATE,ETDATE,EDOPERS
.                                *EPGMPS,EPGMID                        *I-45951
.
          MOVE      CPRIMOP,ETPRIMOP
          MOVE      CPRIMDS,ETPRIMDS
.
          CALL      ETOTPOS                 * get sector and tab position
.
          WRITAB    CONTROLF,SEC;*ETABPS,EADMNS,ETPRIMOP,ETPRIMDS,EBDAYS:
                                  EDCASES,ENETAMT
.
UPDC9999  RETURN
.
.*******************************************************************************
.         Get the default charging claim code for multi hospital
.*******************************************************************************
DCLM0000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          IF        IBCNMHOS=1
            OPEN      PATHSPA1,"pathspaf"
            MOVE      PMVXMHOS,KEY3
            CALL      RDPTHSP1
            IF        OVRCD=0
              MOVE      PTHSDCLM,PTCNDCLM     * default claim code charging
            ENDIF
          ENDIF
DCLM9999  RETURN
+
.*********************************************************************
.
.       I/O routines for Temp Indexed file
.
RATMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATTM1XX,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATTM1XX,KEY8;;
          RETURN
.
RDTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATTM1XX,KEY8;DTMPADMN
          GOTO      OVERCOND IF OVER
          MOVE      DTMPADMN,TMPADMN
          RETURN
.
RKTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKS    PATTM1XX;DTMPADMN
          GOTO      OVERCOND IF OVER
          MOVE      DTMPADMN,TMPADMN
          RETURN
.
RPTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKP    PATTM1XX;DTMPADMN
          GOTO      OVERCOND IF OVER
          MOVE      DTMPADMN,TMPADMN
          RETURN
.
WRTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          WRITE     PATTM1XX,KEY8;KEY8
          RETURN
.
UPTMPR1   MOVE      TMPADMN,DTMPADMN
          UPDATE    PATTM1XX;DTMPADMN
          RETURN
.
DETMPR1   RESET     KEY8
          DELETE    PATTM1XX,KEY8
          RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       CALCAGE
          INC       CALCDAYS
          INC       GETBFEES
          INC       NHOSPDAY
          INC       PATGEXT
          INC       STEPDOWN
          INC       PATCMSTP
          INC       PATITMRD
.
          INC       NZPBFEIO/INC
          INC       PATASDIO/INC
          INC       PATHDFIO/INC
          INC       PATHLFIO/INC
          INC       PATLSDIO/INC
          INC       PATLDFIO/INC
          INC       PATAFEIO/INC
          INC       PATFN1IO/INC
          INC       PATFX1IO/INC
          INC       PATCFAIO/INC
          INC       PATBFEIO/INC
          INC       PATCHCIO/INC
          INC       PATDADIO/INC
          INC       PATDAYIO/INC
          INC       PATECDIO/INC
          INC       PATECOIO/INC
          INC       PATEX1IO/INC
          INC       PATEXBIO/INC
          INC       PATEXCIO/INC
          INC       PATCT1IO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATDSCIO/INC
          INC       PATDTRIO/INC
          INC       PATICOIO/INC
          INC       PATITMIO/INC
          INC       PATHSPIO/INC
          INC       PATMA1IO/INC
          INC       PMSPX2IO/INC
          INC       PATMI1IO/INC
          INC       PATMMBIO/INC
          INC       PATRCAIO/INC
          INC       PATTRNIO/INC
          INC       PATVISIO/INC
          INC       PMSCIDIO/INC
          INC       PMSVX1IO/INC
          INC       PATWR1IO/INC
          INC       GETCNEFF
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
+
