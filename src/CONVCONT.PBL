.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVCONT                                                    *
.* Desc      :   Data Migration Program to upload active PMI related extra   *
.*               contacts data from a third party legacy system into the PMI *
.*               webPAS module.                                              *
.*****************************************************************************
.* Date      :   12/04/2011                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the convcont.txt file and    *
.*               for each valid record found, it will write a new pmscexaf   *
.*               record for the patient.                                     *
.* Mods      :                                                               *
.*****************************************************************************
.*        V11.04.02  14/06/2024  Ebon Clements TSK 0947743                   * 
.*                   Added clear of fields not available for import          *
.*                   SETV0000                                                *
.*        V11.04.01  22/01/2024  Ebon Clements TSK 0932545                   * 
.*                   Recompiled for PMSCEXTM - Added VAR, TEXTAREA and       *
.*                   CONFFILE                                                *
.*        V11.00.01  07/05/2020  Thanh T           TSK 0876574               *
.*                   Recompiled for PMSCEXTM/PMSCEXTD changes                *
.*        V10.07.01  04/02/2016  Steve Armstrong   CAR 0813244               *
.*                   Mods to ask user if title is mandatory or not.          *
.*****************************************************************************
.*        V10.06.03  05/05/2015  Steve Armstrong   CAR 316350                *
.*                   Mods to not uppercase address line 4 (CONTADD4) if it   *
.*                   is an overseas address (postcode 8888)                  *
.*        V10.06.02  21/04/2015  Steve Armstrong   CAR 295025                *
.*                   Added two new fields to upload file format (CONTSLET &  *
.*                   CONTCONT)                                               *
.*        V10.06.01  20/04/2015  Steve Armstrong   CAR 295025                *
.*                   Mods to provide mapping functionality for coded fields. *
.*****************************************************************************
.*        V10.04.01  17/03/2014  Steve Armstrong   CAR 296128                *
.*                   Added display of warning message if error records found.*
.*****************************************************************************
.*        V10.03.04  12/12/2012 Steve Armstrong    CAR 278014                *
.*                   Mods to validate mandatory fields based on the type of  *
.*                   contact (Category tc, Indicator 1).                     *
.*        V10.03.03  08/12/2011 Ebon Clements      CAR 248529                *
.*                   Added webPAS unique id to contacts                      *
.*        V10.03.02  26/11/2011  Steve Armstrong   CAR 248529                *
.*                   Added CONTTPID.                                         *
.*                   22/11/2011  Steve Armstrong   CAR 248529                *
.*                   Mods to call CONC0000 to get next type count so that    *
.*                   multiple contacts of the same type can be uploaded for  *
.*                   single patient.                                         *
.*                   Also added CONTTPID (third party unique id).            *
.*        V10.03.01  10/11/2011  Ebon Clements     CAR 248529                *
.*                   Added multiple contacts of the same type functionality  *
.*****************************************************************************
.*        V10.02.03  12/08/2011  Steve Armstrong   CAR 248504                *
.*                   Mods to restore address line to be non-mandatory.       *
.*                   (webPAS has this field as non-mandatory).               *
.*        V10.02.02  24/06/2011  Steve Armstrong   CAR 245199                *
.*                   Mods to make address line 1 mandatory (req'd for HL7)   *
.*        V10.02.01  07/06/2011  Steve Armstrong   CAR 240722                *
.*                   Mods to cater for new second given name field and       *
.*                   recompiled for changes in length of name fields.        *
.*        V10.02.00  25/02/2011  Steve Armstrong   CAR 241396                *
.*                   Created program                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATMA1FD/INC
          INC       PMSCEXFD/INC
          INC       PMSCEXTD/INC
          INC       PMSRELFD/INC
          INC       PMSTLEFD/INC
          INC       WEBSECFD/INC
.
.         PMI Related Extra Contacts upload file layout - convcont.txt
.
CNTCTUPL  FILE      HL7, FIXED=4000         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
CONTURNO  DIM       8      1      * U/R Number                        (pmceurno)
.PIPE     DIM       1      9      * Pipe Delimiter
CONTTYPE  DIM       3      10     * Type of Contact (Cat tc)          (pmcetype)
.PIPE     DIM       1      13     * Pipe Delimiter
CONTTITL  DIM       4      14     * Title (pmstleaf)                  (pmcetitl)
.PIPE     DIM       1      18     * Pipe Delimiter
CONTSNAM  DIM       40     19     * Surname                           (pmcesnam)
.PIPE     DIM       1      59     * Pipe Delimiter
CONTGNM1  DIM       40     60     * First Given Name                  (pmcegnam)
.PIPE     DIM       1      100    * Pipe Delimiter
CONTGNM2  DIM       40     101    * Second Given Name                 (pmcegnm2)
.PIPE     DIM       1      141    * Pipe Delimiter
CONTADD1  DIM       35     142    * Address Line 1                    (pmceadd1)
.PIPE     DIM       1      177    * Pipe Delimiter
CONTADD2  DIM       35     178    * Address Line 2                    (pmceadd2)
.PIPE     DIM       1      213    * Pipe Delimiter
CONTADD3  DIM       35     214    * Address Line 3                    (pmceadd3)
.PIPE     DIM       1      249    * Pipe Delimiter
CONTADD4  DIM       35     250    * Address Line 4                    (pmceadd4)
.PIPE     DIM       1      285    * Pipe Delimiter
CONTPOST  DIM       8      286    * Postcode                          (pmcepost)
.PIPE     DIM       1      294    * Pipe Delimiter
CONTTELP  DIM       20     295    * Private Telephone Number          (pmcetelp)
.PIPE     DIM       1      315    * Pipe Delimiter
CONTTELB  DIM       20     316    * Business Telephone Number         (pmcetelb)
.PIPE     DIM       1      336    * Pipe Delimiter
CONTTELM  DIM       20     337    * Mobile Telephone Number           (pmcetelm)
.PIPE     DIM       1      357    * Pipe Delimiter
CONTRELP  DIM       10     358    * Relationship (pmsrelaf)           (pmcerelp)
.PIPE     DIM       1      368    * Pipe Delimiter
CONTEMAI  DIM       80     369    * Email address                     (pmceemai)
.PIPE     DIM       1      449    * Pipe Delimiter
CONTCDAT  DIM       8      450    * Date Record Created (ccyymmdd)    (pmcecdat)
.PIPE     DIM       1      458    * Pipe Delimiter
CONTCTIM  DIM       8      459    * Time Record Created (hh:mm:ss)    (pmcectim)
.PIPE     DIM       1      467    * Pipe Delimiter
CONTCUID  DIM       10     468    * Web User ID Created               (pmcecuid)
.PIPE     DIM       1      478    * Pipe Delimiter
CONTUDAT  DIM       8      479    * Date Record Updated (ccyymmdd)    (pmceudat)
.PIPE     DIM       1      487    * Pipe Delimiter
CONTUTIM  DIM       8      488    * Time Record Updated (hh:mm:ss)    (pmceutim)
.PIPE     DIM       1      496    * Pipe Delimiter
CONTUUID  DIM       10     497    * Web User ID Updated               (pmceuuid)
.PIPE     DIM       1      507    * Pipe Delimiter
CONTTPID  DIM       20     508    * Third Party Unique ID             (pmcetpid)
.PIPE     DIM       1      528    * Pipe Delimiter
CONTSLET  DIM       1      529    * Send Letter (Y/N)                 (pmceslet)
.PIPE     DIM       1      530    * Pipe Delimiter
CONTCONT  DIM       3      531    * Country of Birth (Cat C)          (pmcecont)
.
. End of Record            534
.
.
.         Temporary Mapping Tables
.
.         Category-Codes File - catcodes.dat
.
CATCDFLG  FORM      1                            * Cat-Code mapping flag
TEMP1     IFILE     SQL, FIXED=11, KEY="U1-2,3-5"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDCTCAT  DIM       2        2          1       Old category
OLDCTCOD  DIM       3        3          3       Old code
NEWCTCAT  DIM       2        2          6       New category
NEWCTCOD  DIM       3        3          8       New code
.End of Record                         11
.
.
.         Title File - titlecod.dat
.
TITLECOD  FORM      1                       * Title Code file flag
TEMP2     IFILE     SQL, FIXED=9, KEY="U1-4"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDTITLE  DIM       4        4          1       Old Title Code
NEWTITLE  DIM       4        4          5       New Title Code
.End of Record                          9
.
.
.         NOK Relationship File - relation.dat
.
RELATION  FORM      1                       * NOK Relationship file flag
TEMP3     IFILE     SQL, FIXED=21, KEY="U1-10"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDRELNS  DIM       10       10         1       Old NOK Relationship
NEWRELNS  DIM       10       10         11      New NOK Relationship
.End of Record                          21
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ADDCOUNT  FORM      8             * added record count
.
CATEGORY  DIM       2
CODCOUNT  FORM      8             * code error record count
CODE      DIM       3
CONFFILE  FILE      ASCII, FIXED=250
CURRCENT  FORM      2             * current century
CURRDATE  DIM       8             * current date
.
DATEFLG1  FORM      1             * Date Type flag
.                                     0 = full date (ccyymmdd)
.                                     1 = partial date (ccyymm)
DATEFLG2  FORM      1             * Dates Allowed flag
.                                     0 = any date allowed
.                                     1 = future dates not allowed
.
DIM1A     DIM       1
DIM1B     DIM       1
DIM2C     DIM       2
DIM2D     DIM       2
DIM2H     DIM       2
DIM2M     DIM       2
DIM2S     DIM       2
DIM2Y     DIM       2
DIM3      DIM       3
DIM4      DIM       4
DIM44     DIM       44
DIM127    DIM       127
DTECOUNT  FORM      8             * date error record count
DUPCOUNT  FORM      8             * duplicate record count  >>>(may not be used)
.
ERORDESC  DIM       70
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
F3A       FORM      3
FLDITMNO  FORM      3
FORM10    FORM      10
.
HTMLFILE  FIFO      ASCII, FIXED=250
.
MANCOUNT  FORM      8             * mandatory field error record count
MANDFLAG  FORM      1             * mandatory field check flag
.                                     0 = dont check based on Cat tc
.                                     1 = check title, etc based on Cat tc
.                                     2 = check address based on Cat tc
MANDTITL  FORM      1             * title mandatory flag
.                                     1 = not mandatory
.                                     0 = mandatory
MANDTPID  FORM      1             * third party unqiue id mandatory flag
.                                     1 = not mandatory
.                                     0 = mandatory
MTHNAM3   DIM       3
.
NUMCOUNT  FORM      8             * numeric error record count
.
QRYDATA   DIM       240
QRYNAME   DIM       9
.
RECCOUNT  FORM      8             * record read counter
.
TEMPCATG  DIM       6             * Category (or HF for HF Table validation)
TEMPCODE  DIM       10            * Coded field (length = max code field length)
TEMPDATE  DIM       8
TEMPTIME  DIM       8
TEMPTYPE  FORM      1             * Type of coded field
.                                     1 = patcodes
.                                     ....add other files as required
TEXTAREA  FORM      1
TIMCOUNT  FORM      8             * time error record count
TMPFIELD  DIM       8             * Field name
TMPSTRNG  DIM       40            * Temporary string (max field length)
.
UNKCOUNT  FORM      8             * unknown U/R counter
.
VCHKFLAG  FORM      1             * Validation flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
VAR       DIM       127
.
.
.
. PROGRAM CONSTANTS
. -----------------
JAN       INIT      "January"
FEB       INIT      "February"
MAR       INIT      "March"
APR       INIT      "April"
MAY       INIT      "May"
JUN       INIT      "June"
JUL       INIT      "July"
AUG       INIT      "August"
SEP       INIT      "September"
OCT       INIT      "October"
NOV       INIT      "November"
DEC       INIT      "December"
.
LOWCASEC  INIT      "c"
LOWCASET  INIT      "t"
.
PIPE      INIT      "|"
.
.
.
PRGID     INIT      "CONVCONT"
PRGNAM    INIT      "Upload Extra Patient Contacts"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with upload
.
MAIN1000  CALL      OPEN0000               * open upload file
          BRANCH    EXIT,MAIN0100          * file not found
.
          CALL      DMAP0000               * display mapping files
          CALL      ASKQ0000               * validation run only ?
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      UPLD0000               * process upload
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"pmscexaf";
          OPEN      PMSCEXA1,"pmscexaf"
          OPEN      PMSCEXA1,"pmscexaf"
          OPEN      PMSAUDC2,"pmsaudce"
.
          DISPLAY   *P64:24,"pmsrelaf";
          OPEN      PMSRELA1,"pmsrelaf"
.
          DISPLAY   *P64:24,"pmstleaf";
          OPEN      PMSTLEA1,"pmstleaf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"controlf"
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,HUND18;*167,PTCNNWCA,*179,PTCNH7ID
.
          MOVE      ONE,CNOUNDLN
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data upload                         *
.*                        TRUE  (1)  Exit selected                           *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run data upload
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               OPEN0000              Called by: MAIN0000   *
.*                  Open upload file (convcont.txt)                          *
.*****************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      CNTCTUPL,"convcont"
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
.         Category-Codes mapping file (patcodes)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP1,"catcodes"             * Cat-Code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,CATCDFLG              * no
          ELSE
            MOVE      ONE,CATCDFLG               * yes
          ENDIF
.
.         Title (pmstleaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP2,"titlecod"        * Check for title code file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,TITLECOD         * file doesnt exist
          ELSE
            MOVE      ONE,TITLECOD          * file does exist
          ENDIF
.
.         Relationship (pmsrelaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP3,"relation"       * Check for NOK relationship file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,RELATION         * file doesnt exist
          ELSE
            MOVE      ONE,RELATION          * file does exist
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  DISPLAY   *P1:24,*EL,*B,"Upload file - convcont.txt - not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.******************************************************************************
.*                                  DMAP0000              Called by: MAIN0000 *
.*                       Display File Name & Mapping files                    *
.* Requires: Mapping Flags                                                    *
.******************************************************************************
.
DMAP0000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save current screen
.
          DISPLAY   *P1:4,*EF,*V2LON,SP9,*ULON,"Mapping Tables"
.
          MOVE      DNO,DIM3
          LOAD      DIM3,CATCDFLG,DYES
.
          DISPLAY   *P1:6,*EL,"Mapping Category/Codes (patcodes)      ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,TITLECOD,DYES
.
          DISPLAY   *P1:7,*EL,"Mapping Title (pmstleaf)               ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,RELATION,DYES
.
          DISPLAY   *P1:8,*EL,"Mapping Relationship (pmsrelaf)        ":
                    *V2LON,DIM3
.
          DISPLAY   *P1:24;
          CALL      HITENTER
          CALL      PUTSCR00                     * restore previous screen
.
DMAP9999  RETURN
+
.*****************************************************************************
.*                               ASKQ0000              Called by: MAIN0000   *
.*                  Ask run related questions                                *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.*          MANDTPID  - third party unique id flag                           *
.*                       1 = not mandatory                                   *
.*                       0 = mandatory                                       *
.*          MANDTITL  - title mandatory flag                                 *
.*                       1 = not mandatory                                   *
.*                       0 = mandatory                                       *
.*****************************************************************************
.
.         First, check if this is a validation only run
.
ASKQ0000  MOVE      ANSY,ANS
          KEYIN     *P1:9,*EL,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:9,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:9,*V2LON,DYES,*HOFF:
                      *P35:9,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKQ5000
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:9,*V2LON,DNO,*HOFF:
                      *P35:9,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKQ5000
          ENDIF
.
          GOTO      ASKQ0000                     * invalid input
.
.         Now check if the Third Party Unique ID is mandatory
.
ASKQ5000  MOVE      ANSY,ANS
          KEYIN     *P1:11,*EL,"Third Party Unique ID Mandatory (":
                    *V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P41:11,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P41:11,*V2LON,DYES
            MOVE      ZERO,MANDTPID              * yes
            GOTO      ASKQ7000
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P41:11,*V2LON,DNO
            MOVE      ONE,MANDTPID               * no
            GOTO      ASKQ7000
          ENDIF
.
          GOTO      ASKQ5000                     * invalid input
.
.         Now check if the Title is mandatory
.
ASKQ7000  MOVE      ANSY,ANS
          KEYIN     *P1:12,*EL,"Title Mandatory (":
                    *V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P41:12,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P41:12,*V2LON,DYES
            MOVE      ZERO,MANDTITL              * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P41:12,*V2LON,DNO
            MOVE      ONE,MANDTITL               * no
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ7000                     * invalid input
.
ASKQ9999  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                  Process the Patient Extra Contacts upload records         *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CURRCENT
.
          DISPLAY   *P1:14,"Processing ",*V2LON,"convcont.txt",*HOFF:
                    *P1:15,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:17,"U/R Number : ":
                    *P1:18,"Surname    : ":
                    *P1:19,"Records    : "
.
          MOVE      ZERO,RECCOUNT                * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,DTECOUNT                * init. date error record count
          MOVE      ZERO,TIMCOUNT                * init. time error record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
          MOVE      ZERO,NUMCOUNT                * init. num error record count
          MOVE      ZERO,UNKCOUNT                * init. unknown pt record count
.
          CALL      HEAD0000                     * Print the report header
.
.         Loop through upload file records
.
UPLD1000  READ      CNTCTUPL,SEQ;CONTURNO,CONTTYPE,CONTTITL,CONTSNAM,CONTGNM1:
                                 CONTGNM2,CONTADD1,CONTADD2,CONTADD3,CONTADD4:
                                 CONTPOST,CONTTELP,CONTTELB,CONTTELM,CONTRELP:
                                 CONTEMAI,CONTCDAT,CONTCTIM,CONTCUID,CONTUDAT:
                                 CONTUTIM,CONTUUID,CONTTPID,CONTSLET,CONTCONT
          GOTO      UPLD9000 IF OVER
.
          ADD       ONE,RECCOUNT                 * increment records read
          IF        (RECCOUNT%1000) = 0 | RECCOUNT = 1
            DISPLAY   *P14:17,*V2LON,CONTURNO:
                      *P14:18,CONTSNAM:
                      *P14:19,RECCOUNT;
          ENDIF
.
          REP       UPPLOW,CONTSNAM
          REP       UPPLOW,CONTGNM1
          REP       UPPLOW,CONTGNM2
          REP       UPPLOW,CONTADD1
          REP       UPPLOW,CONTADD2
          REP       UPPLOW,CONTADD3
.
.         The address line 4 should not be uppercased unless this
.         is an overseas address, otherwise the country description
.         may not match the Cat C description.  If not an overseas
.         address, uppercasing will be done in SETV0000 (CAR 316350).
.
.>>>>>    REP       UPPLOW,CONTADD4
.
          CALL      POUT0000                     * pad out fields with spaces
.
          CALL      CLPMSCEX                     * clear database variables
          CALL      CLPATMAS                     * clear patient master vars.
.
          CALL      VURN0000                     * validate U/R
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      MAND0000                     * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      DVAL0000                     * date validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      TVAL0000                     * time validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VNUM0000                     * validate numeric fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          MOVE      CONTURNO,PMCEX001
          MOVE      CONTTYPE,PMCEX002
          CALL      CONC0000                     * get next contact type counter
          MOVE      PMCEX003,PMCECNTR
.
          CALL      SETV0000                     * set up file variables
.
          CALL      CVAL0000                     * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      CONU0000                     * Get contact webPAS unique id
.
          PACK      KEY14,PMCEURNO,PMCETYPE,PMCECNTR,SP70
          CALL      RAPMCEX1
          IF        OVRCD = 1
            BRANCH    VCHKFLAG,UPLD1000          * error checking only
            CALL      WRPMCEX1                   * write new record
            ADD       ONE,ADDCOUNT               * increment added record count
          ELSE
            MOVE      "Contact record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
          GOTO      UPLD1000                     * get next record
.
.         Upload completed
.
UPLD9000  ASSIGN    (CODCOUNT+DUPCOUNT+DTECOUNT+TIMCOUNT+MANCOUNT+NUMCOUNT+UNKCOUNT),FORM10
          IF        FORM10 > 0
            CALL      LINE0000                   * print bottom line if errors
          ENDIF
.
          COMPARE   CLNO,FIFTY3                  * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:19,*V2LON,RECCOUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",RECCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT,*N:
                    *1,"Duplicate Records detected            - ",DUPCOUNT,*N:
                    *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records with invalid dates detected   - ",DTECOUNT,*N:
                    *1,"Records with invalid times detected   - ",TIMCOUNT,*N:
                    *1,"Records with unknown U/R number       - ",UNKCOUNT,*N:
                    *1,"Records with invalid numbers detected - ",NUMCOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      CONTTYPE,TMPSTRNG
          MOVE      "CONTTYPE",TMPFIELD          * Type of contact
          CALL      CHKM0000
.
          MATCH     SP3,CONTTYPE                 * type of contact blank ?
          GOTO      MAND8000 IF EQUAL            * yes
.
          PACK      KEY5,LOWCASET,LOWCASEC,CONTTYPE
          CALL      RDCODE1                      * contact type code on file ?
          BRANCH    OVRCD,MAND8000               * no
.
.         The value of Indicator 1 will determine which of the remaining 
.         contact fields are mandatory or not, according to the tables below:
.         --------------------------------------------------------------
.         | Ind. 1 | Description                    | Mandatory Fields |
.         -------------------------------------------------------------|
.         |  C     | Carer Contact                  |                  |
.         ------------------------------------------| Title            |
.         |  1     | Next of Kin                    | Surname          |
.         ------------------------------------------| First Given Name |
.         |  3     | Emergency Contact              | Relationship     |
.         ------------------------------------------|                  |
.         |  6     | Person Responsible for Account |                  |
.         ------------------------------------------|                  |
.         |  8     | Nearest Relative               |                  |
.         ------------------------------------------|                  |
.         |  9     | Other Contact                  |                  |
.         --------------------------------------------------------------
.
.         ------------------------------------------------------------------
.         | Ind. 1 | Description                        | Mandatory Fields |
.         -----------------------------------------------------------------|
.         |  A     | Alternate Address (Transport)      |                  |
.         |---------------------------------------------| Address Line 1   |
.         |  2     | Postal Address                     | Address Line 3   |
.         |---------------------------------------------| Postcode         |
.         |  7     | Local Address for Overseas patient |                  |
.         ------------------------------------------------------------------
.
.         --------------------------------------------------------------
.         | Ind. 1 | Description                    | Mandatory Fields |
.         -------------------------------------------------------------|
.         |  4     | Mother                         |                  |
.         |-----------------------------------------|     N/A          |
.         |  5     | Father                         |                  |
.         --------------------------------------------------------------
.
.         Check which fields need to be validated as mandatory
.
          CALL      CKTC0000
          BRANCH    MANDFLAG,MAND1000:           * check title, etc
                             MAND2000            * check address fields
          GOTO      MAND8000                     * none
.
.         Title, Surname, First Given Name and Relationship are only
.         mandatory for Indicator 1 =  C, 1, 3, 6, 8 or 9
.
MAND1000  IF        MANDTITL = 0
            MOVE      CONTTITL,TMPSTRNG
            MOVE      "CONTTITL",TMPFIELD        * Title
            CALL      CHKM0000
          ENDIF
.
          MOVE      CONTSNAM,TMPSTRNG
          MOVE      "CONTSNAM",TMPFIELD          * Surname
          CALL      CHKM0000
.
          MOVE      CONTGNM1,TMPSTRNG
          MOVE      "CONTGNM1",TMPFIELD          * First Given Name
          CALL      CHKM0000
.
          MOVE      CONTRELP,TMPSTRNG
          MOVE      "CONTRELP",TMPFIELD          * Relationship
          CALL      CHKM0000
          GOTO      MAND8000
.
.         Address Line 1, Address Line 3, and Postcode are only
.         mandatory for Indicator 1 =  A, 2 or 7
.
MAND2000  MOVE      CONTADD1,TMPSTRNG
          MOVE      "CONTADD1",TMPFIELD          * Address Line 1
          CALL      CHKM0000
.
          MOVE      CONTADD3,TMPSTRNG
          MOVE      "CONTADD3",TMPFIELD          * Address Line 3
          CALL      CHKM0000
.
          MOVE      CONTPOST,TMPSTRNG
          MOVE      "CONTPOST",TMPFIELD          * Postcode
          CALL      CHKM0000
.
MAND8000  BRANCH    MANDTPID,MAND9000
.
          MOVE      CONTTPID,TMPSTRNG
          MOVE      "CONTTPID",TMPFIELD          * Third Party Unique ID
          CALL      CHKM0000
.
MAND9000  BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: TMPSTRNG - field to be checked                                  *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     TMPSTRNG,SP70                * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.******************************************************************************
.*                                  CKTC0000              Called by: MAND0000 *
.*                           Print The Report Header                          *
.* Requires: TCINDC1 from a valid patcodes record (Cat tc)                    *
.* Returns : MANDLFAG  0 = no checking required based on Cat tc               *
.*                     1 = check title, etc based on Cat tc                   *
.*                     2 = check address fields based on Cat tc               *
.******************************************************************************
.
CKTC0000  MATCH     ANSC,TCINDC1
          GOTO      CKTC9100 IF EQUAL
.
          MATCH     "1",TCINDC1
          GOTO      CKTC9100 IF EQUAL
.
          MATCH     "3",TCINDC1
          GOTO      CKTC9100 IF EQUAL
.
          MATCH     "6",TCINDC1
          GOTO      CKTC9100 IF EQUAL
.
          MATCH     "8",TCINDC1
          GOTO      CKTC9100 IF EQUAL
.
          MATCH     "9",TCINDC1
          GOTO      CKTC9100 IF EQUAL
.
          MATCH     ANSA,TCINDC1
          GOTO      CKTC9200 IF EQUAL
.
          MATCH     "2",TCINDC1
          GOTO      CKTC9200 IF EQUAL
.
          MATCH     "7",TCINDC1
          GOTO      CKTC9200 IF EQUAL
.
          MOVE      ZERO,MANDFLAG
          GOTO      CKTC9999
.
CKTC9100  MOVE      ONE,MANDFLAG
          GOTO      CKTC9999
.
CKTC9200  MOVE      TWO,MANDFLAG
.
CKTC9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          PRINT     *1,"< convcont.txt >"
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"U/R No.",*12,PIPE,*14,"Patient Name":
                    *59,PIPE,*61,"Error Description",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  SETV0000              Called by: UPLD0000 *
.*                       Load the record variables                            *
.******************************************************************************
.
.         Load U/R again as CONC0000 will have changed it
.
SETV0000  MOVE      CONTURNO,PMCEURNO
.
          MOVE      CONTTYPE,PMCETYPE
          IF        CATCDFLG = 1
            PACK      KEY5,LOWCASET,LOWCASEC,PMCETYPE
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMCETYPE        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      CONTTITL,PMCETITL            * title (pmstleaf)
          IF        TITLECOD = 1
            PACK      KEY4,PMCETITL
            CALL      RDTEMP2                    * title code on map file ?
            IF        OVRCD = 0
              MOVE      NEWTITLE,PMCETITL        * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      CONTSNAM,PMCESNAM
          MOVE      CONTGNM1,PMCEGNAM
          MOVE      CONTGNM2,PMCEGNM2
          MOVE      CONTADD1,PMCEADD1
          MOVE      CONTADD2,PMCEADD2
          MOVE      CONTADD3,PMCEADD3
          MOVE      CONTADD4,PMCEADD4
          MATCH     "8888    ",CONTPOST
          IF        !@EQUAL
            REP       UPPLOW,PMCEADD4       * CAR 316350
          ENDIF
          MOVE      CONTPOST,PMCEPOST
          MOVE      CONTTELP,PMCETELP
          MOVE      CONTTELB,PMCETELB
          MOVE      CONTTELM,PMCETELM
.
          MOVE      CONTRELP,PMCERELP            * relationship (pmsrelaf)
          IF        RELATION = 1
            PACK      KEY10,PMCERELP
            CALL      RDTEMP3                    * rel'ship code on map file ?
            IF        OVRCD = 0
              MOVE      NEWRELNS,PMCERELP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      CONTEMAI,PMCEEMAI
          MOVE      CONTCDAT,PMCECDAT
          MOVE      CONTCTIM,PMCECTIM
          MOVE      CONTCUID,PMCECUID

          MOVE      CONTUDAT,PMCEUDAT
          MOVE      CONTUTIM,PMCEUTIM
          MOVE      CONTUUID,PMCEUUID

          MOVE      CONTTPID,PMCETPID
          MOVE      CONTSLET,PMCESLET
.
          MOVE      CONTCONT,PMCECONT
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,SP1,PMCECONT
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMCECONT        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ZERO,PMCEACTV
.
.         If there is no user id for creation of the record, then
.         default to program name and date/time of upload.
.
          MATCH     SP10,PMCECUID
          IF        @EQUAL
            MOVE      "CONVCONT  ",PMCECUID
            MOVE      CURRDATE,PMCECDAT
            MOVE      CTIMEIS,PMCECTIM
          ENDIF
.
. Clear fields not currently available to import
.
          PACK      PMCEDINA,SP70
          PACK      PMCEWPID,SP70
          PACK      PMCESSMS,SP70
          PACK      PMCECMED,SP70
          PACK      PMCECREF,SP70
          PACK      PMCECDOB,SP70
          PACK      PMCEFTXT,SP70,SP70,SP70,SP70
          PACK      PMCELAN1,SP70
          PACK      PMCELAN2,SP70
          PACK      PMCESPAR,SP70
.
SETV9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces given that we        *
.*            are dealing with pipe delimited records                        *
.*****************************************************************************
.
POUT0000  PACK      CONTURNO,CONTURNO,SP8
          RJUSTIFY  CONTURNO
          PACK      CONTTYPE,CONTTYPE,SP3
          PACK      CONTTITL,CONTTITL,SP4
          PACK      CONTSNAM,CONTSNAM,SP30,SP10
          PACK      CONTGNM1,CONTGNM1,SP30,SP10
          PACK      CONTGNM2,CONTGNM2,SP30,SP10
          PACK      CONTADD1,CONTADD1,SP30,SP5
          PACK      CONTADD2,CONTADD2,SP30,SP5
          PACK      CONTADD3,CONTADD3,SP30,SP5
          PACK      CONTADD4,CONTADD4,SP30,SP5
          PACK      CONTPOST,CONTPOST,SP8
          PACK      CONTTELP,CONTTELP,SP20
          PACK      CONTTELB,CONTTELB,SP20
          PACK      CONTTELM,CONTTELM,SP20
          PACK      CONTRELP,CONTRELP,SP10
          PACK      CONTEMAI,CONTEMAI,SP30,SP30,SP20
          PACK      CONTCDAT,CONTCDAT,SP8
          PACK      CONTCTIM,CONTCTIM,SP8
          PACK      CONTCUID,CONTCUID,SP10
          PACK      CONTUDAT,CONTUDAT,SP8
          PACK      CONTUTIM,CONTUTIM,SP8
          PACK      CONTUUID,CONTUUID,SP10
          PACK      CONTTPID,CONTTPID,SP20
          PACK      CONTSLET,CONTSLET,SP1
          REP       " 0y1Y1n0N0",CONTSLET
          PACK      CONTCONT,CONTCONT,SP3
.
POUT9999  RETURN
+
.*****************************************************************************
.*                              DVAL0000           Called by: UPLD0000       *
.*                  Validate all date fields                                 *
.* Returns:  EXIT - 0 = No date validation errors                            *
.*                  1 = Date validation errors                               *
.*          DTECOUNT - updated count of records with date field errors       *
.*****************************************************************************
.
DVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      CONTCDAT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "CONTCDAT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      CONTUDAT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "CONTUDAT",TMPFIELD
          CALL      VDAT0000
.
          BRANCH    ERORFLAG,DVAL9100            * errors on date validation
.
          MOVE      ZERO,EXIT                    * no errors on date validation
          GOTO      DVAL9999
.
DVAL9100  ADD       ONE,DTECOUNT                 * incr. date error record count
          MOVE      ONE,EXIT
.
DVAL9999  RETURN
+
.*****************************************************************************
.*                              VDAT0000           Called by: DVAL0000       *
.*                  Validate a date field                                    *
.* Requires:  TEMPDATE - Date in format ccyymmdd                             *
.*            DATEFLG1 - Date Type flag                                      *
.*                          0 = full date (ccyymmdd)                         *
.*                          1 = partial date (ccyymm)                        *
.*            DATEFLG2 - Dates Allowed flag                                  *
.*                          0 = any date allowed                             *
.*                          1 = no future dates allowed                      *
.*            TMPFIELD - Date field name                                     *
.* Returns:   ERORFLAG = 1 if an error in date validation occurs.            *
.*****************************************************************************
.
VDAT0000  MATCH     SP8,TEMPDATE                 * blank date ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Validate that the date has been fully populated
.
          SQUEEZE   TEMPDATE
          MOVELPTR  TEMPDATE,FORM1
          IF        DATEFLG1 = 0 & FORM1 <> 8 | DATEFLG1 = 1 & FORM1 <> 6
            MOVE      "Insufficient digits ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate that the date is numeric
.
VDAT0100  TYPE      TEMPDATE
          IF        !@EQUAL
            MOVE      "Not numeric ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          UNPACK    TEMPDATE,DIM2C,DIM2Y,DIM2M,DIM2D
.
.         Validate the century is >= 18 and <= current century
.
          MOVE      DIM2C,FORM2
          IF        FORM2 < 18 | FORM2 > CURRCENT
            MOVE      "Century not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate the month
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 1 | FORM2 > 12
            MOVE      "Month not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          COMPARE   ONE,DATEFLG1                 * short date (ccyymm) ?
          GOTO      VDAT9999 IF EQUAL            * yes - finished
.
.         Validate the day is:
.              < 32 for January, March, May, July, August, October & December
.              < 31 for April, June, September & November
.              < 29 for February, except in a leap year where it is < 30
.
          BRANCH    FORM2,VDAT1000:              * Jan
                          VDAT3000:              * Feb
                          VDAT1000:              * Mar
                          VDAT2000:              * Apr
                          VDAT1000:              * May
                          VDAT2000:              * Jun
                          VDAT1000:              * Jul
                          VDAT1000:              * Aug
                          VDAT2000:              * Sep
                          VDAT1000:              * Oct
                          VDAT2000:              * Nov
                          VDAT1000               * Dec
.
.         Validate days for month of 31 days
.
VDAT1000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for month of 30 days
.
VDAT2000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 30
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for February
.         A leap year is one where:
.           1. Every year divisible by 4 is a leap year.
.           2. But every year divisible by 100 is NOT a leap year
.           3. Unless the year is also divisible by 400, then it is still a
.              leap year.
.
VDAT3000  MOVE      DIM2D,FORM2
          PACK      DIM4,DIM2C,DIM2Y
          MOVE      DIM4,FORM4
          IF        (FORM4%4) = 0
            IF        (FORM4%100) = 0
              IF        (FORM4%400) = 0
                GOTO      VDAT3200
              ENDIF
            ELSE
              GOTO      VDAT3200
            ENDIF
          ENDIF
.
.         Check for normal Feb days
.
VDAT3100  IF        FORM2 < 1 | FORM2 > 28
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Check for leap year Feb days
.
VDAT3200  IF        FORM2 < 1 | FORM2 > 29
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
VDAT3900  MOVE      "Day not valid ",ERORDESC
          CALL      DERR0000
          GOTO      VDAT9999
.
VDAT4000  COMPARE   ZERO,DATEFLG2                * any date allowed ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Make sure the date is not in the future
.
          MATCH     TEMPDATE,CURRDATE
          IF        @LESS
            MOVE      "Cannot be in the future ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
VDAT9999  RETURN
+
.*****************************************************************************
.*                            DERR0000             Called by: VDAT0000       *
.*                    Process date error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:  ERORFLAG = 1 if an error in date validation occurs.             *
.*****************************************************************************
.
DERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set date error flag
.
DERR9999  RETURN
+
.*****************************************************************************
.*                              TVAL0000           Called by: UPLD0000       *
.*                  Validate all time fields                                 *
.* Returns:  EXIT - 0 = No time validation errors                            *
.*                  1 = Time validation errors                               *
.*          TIMCOUNT - updated count of records with time field errors       *
.*****************************************************************************
.
TVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      CONTCDAT,TEMPDATE
          MOVE      CONTCTIM,TEMPTIME            * contact create time
          MOVE      "CONTCTIM",TMPFIELD
          CALL      VTIM0000
.
          MOVE      CONTUDAT,TEMPDATE
          MOVE      CONTUTIM,TEMPTIME            * contact update time
          MOVE      "CONTUTIM",TMPFIELD
          CALL      VTIM0000
.
          BRANCH    ERORFLAG,TVAL9100            * errors on time validation
.
          MOVE      ZERO,EXIT                    * no errors on time validation
          GOTO      TVAL9999
.
TVAL9100  ADD       ONE,TIMCOUNT                 * incr. time error record count
          MOVE      ONE,EXIT
.
TVAL9999  RETURN
+
.*****************************************************************************
.*                            VTIM0000             Called by: TVAL0000       *
.*                    Validate time fields                                   *
.* Requires:  TEMPTIME - Time in format hh:mm:ss                             *
.*            TEMPDATE - Date in format ccyymmdd                             *
.*            TMPFIELD - Time field name                                     *
.* Returns:   ERORFLAG = 1 if an error in time validation occurs.            *
.*****************************************************************************
.
VTIM0000  MATCH     SP8,TEMPTIME                 * blank time ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     SP8,TEMPDATE                 * blank date ?
          IF        @EQUAL
            MOVE      "Time without corresponding date ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          UNPACK    TEMPTIME,DIM2H,DIM1A,DIM2M,DIM1B,DIM2S    * (hh:mm:ss)
.
.         Make sure colon's separate the hours, minutes and seconds
.
          MATCH     DIM1A,DIM1B
          GOTO      VTIM1000 IF NOT EQUAL
.
          MATCH     COLON,DIM1A
          GOTO      VTIM1000 IF NOT EQUAL
.
          GOTO      VTIM2000
.
VTIM1000  MOVE      "Format not valid ",ERORDESC
          CALL      TERR0000
          GOTO      VTIM9999
.
.         Validate the hour
.
VTIM2000  MOVE      DIM2H,FORM2
          IF        FORM2 < 0 | FORM2 > 23
            MOVE      "Hour not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the minute
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Minutes not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the second
.
          MOVE      DIM2S,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Seconds not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          MATCH     SP8,TEMPDATE                 * date blank ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
.         Make sure that the transaction time is not in the future
.
          MATCH     TEMPDATE,CURRDATE
          IF        @EQUAL
            MATCH     TEMPTIME,CTIMEIS
            IF        @LESS
              MOVE      "Time in the future ",ERORDESC
              CALL      TERR0000
            ENDIF
          ENDIF
.
VTIM9999  RETURN
+
.*****************************************************************************
.*                            TERR0000             Called by: VTIM0000       *
.*                    Process time error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:  ERORFLAG = 1 if an error in time validation occurs.             *
.*****************************************************************************
.
TERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set time error flag
.
TERR9999  RETURN
+
.*****************************************************************************
.*                            VNUM0000             Called by: UPLD0000       *
.*                    Validate numeric fields                                *
.* Returns:  EXIT - 0 = No mumeric validation errors                         *
.*                  1 = Numeric validation errors                            *
.*          NUMCOUNT - updated count of records with numeric field errors    *
.*****************************************************************************
.
VNUM0000  MOVE      ZERO,ERORFLAG                * initialise error flag
.
.         Send Letter (valid values 0 and 1)
.
          TYPE      CONTSLET                     * send letter numeric ?
          GOTO      VNUM0010 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      CONTSLET,FORM1
          COMPARE   FORM1,ONE                    * smoker 0 or 1 ?
          GOTO      VNUM0010 IF LESS             * no - error
          GOTO      VNUM9000                     * yes - valid value
.
VNUM0010  MOVE      "CONTSLET",TMPFIELD
          CALL      NERR0000
.
VNUM9000  BRANCH    ERORFLAG,VNUM9100            * errors on number validation
.
          MOVE      ZERO,EXIT                    * no errors on no. validation
          GOTO      VNUM9999
.
VNUM9100  ADD       ONE,NUMCOUNT                 * incr. num. error record count
          MOVE      ONE,EXIT
.
VNUM9999  RETURN
+
.*****************************************************************************
.*                            NERR0000             Called by: VNUM0000       *
.*                    Process number error                                   *
.* Requires: TMPFIELD - field name                                           *
.* Returns:  ERORFLAG = 1 if an error in number validation occurs.           *
.*****************************************************************************
.
NERR0000  MOVE      "Invalid numeric field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set number error flag
.
NERR9999  RETURN
+
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields.                   *
.*        This validation is performed on the database fields just prior     *
.*        to writing the data and after any mappings have been performed.    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      "tc",TEMPCATG
          PACK      TEMPCODE,PMCETYPE,SP10
          MOVE      "CONTTYPE",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (type)
          CALL      VCOD0000
.
          MATCH     SP4,PMCETITL                 * blank code ?
          GOTO      CVAL0100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMCETITL,SP10
          MOVE      "CONTTITL",TMPFIELD
          MOVE      TWO,TEMPTYPE                 * pmstleaf (title)
          CALL      VCOD0000
.
CVAL0100  MATCH     SP10,PMCERELP                * blank code ?
          GOTO      CVAL0200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMCERELP,SP10
          MOVE      "CONTRELP",TMPFIELD
          MOVE      THREE,TEMPTYPE               * pmsrelaf (relationship)
          CALL      VCOD0000
.
CVAL0200  MATCH     SP3,PMCECONT                 * blank code ?
          GOTO      CVAL9999 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,SP1
          PACK      TEMPCODE,PMCECONT,SP10
          MOVE      "CONTCONT",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (COB)
          CALL      VCOD0000
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100            * errors on code validation
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCATG - temporary category variable                          *
.*           TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.* Returns:  ERORFLAG = 1 if an error in code validation occurs.             *
.*****************************************************************************
.
VCOD0000  BRANCH    TEMPTYPE,VCOD1000:           * patcodes (category-codes)
                             VCOD2000:           * pmstleaf (titles)
                             VCOD3000            * pmsrelaf (relationship)
.
.         Validate a category-coded field (patcodes)
.
VCOD1000  PACK      KEY5,TEMPCATG,TEMPCODE
          CALL      RDCODE1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a title field (pmstleaf)
.
VCOD2000  MOVE      TEMPCODE,KEY4
          CALL      RDPMTLE1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a relationship field (pmsrelaf)
.>>>>>    Need to check if this should be a coded field or just free text.
.>>>>>    Looks like free text.
.
VCOD3000  MOVE      TEMPCODE,KEY10
          CALL      RDPMREL1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
          MOVE      ONE,ERORFLAG                 * set code error flag
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: UPLD0000       *
.*                   Print an error detail line               CHKM0000       *
.* Requires: Valid read on PMI records (for name fields)      DERR0000       *
.*           ERORDESC - error description                     TERR0000       *
.*           CLNO - current page line count                   VURN0000       *
.* Returns:  CLNO - updated page line count                   NERR0000       *
.*                                                            VCOD0000       *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          MOVE      PSNAME,PACSNAME              * format patient name
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DIM44
.
          PRINT     *1,PIPE,*3,CONTURNO,*12,PIPE,*14,DIM44,*59,PIPE:
                    *61,ERORDESC,*132,PIPE
          ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
.*****************************************************************************
.*                              VURN0000           Called by: UPLD0000       *
.*                        Validate U/R Number                                *
.* Requires: CONTURNO - U/R number (right justified)                         *
.* Returns:  Valid read on PMI data                                          *
.*           EXIT  0 = PMI record found - ok to continue                     *
.*                 1 = PMI record not found - ignore record                  *
.*          UNKCOUNT - updated count of unknown U/R numbers                  *
.*          PMCEURNO - U/R number right justified                            *
.*****************************************************************************
.
VURN0000  MATCH     SP8,CONTURNO                 * blank U/R ?
          IF        @EQUAL
            MOVE      "U/R missing ",ERORDESC    * yes
            GOTO      VURN9150
          ENDIF
.
          MOVE      CONTURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,VURN9100               * no - error
.
          COMPARE   ONE,PSTAT                    * merged U/R ?
          GOTO      VURN9000 IF NOT EQUAL        * no
.
.         We have a merged U/R record, so get the new U/R
.
          MATCH     PPSNAME,SP20                 * blank previous name field ?
          GOTO      VURN9100 IF EQUAL            * yes - error
.
          MOVE      PPSNAME,CONTURNO             * no - load new U/R
          GOTO      VURN0000                     * get new pmi record
.
VURN9000  MOVE      CONTURNO,PMCEURNO            * load U/R number
          MOVE      ZERO,EXIT
          GOTO      VURN9999
.
VURN9100  MOVE      "PMI Record not found ",ERORDESC
VURN9150  CALL      PERR0000                     * print error line
          ADD       ONE,UNKCOUNT                 * increment unknown U/R count
          MOVE      ONE,EXIT
.
VURN9999  RETURN
+
.*****************************************************************************
.*        Temp File I/O Routines                                             *
.*****************************************************************************
.
.         Category-Codes (patcodes)
.
RDTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      TEMP1,KEY5;OLDCTCAT,OLDCTCOD,NEWCTCAT,NEWCTCOD
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Title (pmstleaf)
.
RDTEMP2   MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      TEMP2,KEY4;OLDTITLE,NEWTITLE
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Relationship (pmsrelaf)
.
RDTEMP3   MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      TEMP3,KEY10;OLDRELNS,NEWRELNS
          GOTO      OVERCOND IF OVER
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CLPATMAS
          INC       CLPMSCEX
          INC       PMSCEXTM
.
          INC       PATCODIO/INC
          INC       PATMA1IO/INC
          INC       PMSCEXIO/INC
          INC       PMSRELIO/INC
          INC       PMSTLEIO/INC
