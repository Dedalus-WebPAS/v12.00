.******************************************************************************
.*  HL7SVORU  :  Observational Report Message Service                         *
.*               This Service will accept Unsolicited HL7 Observational       *
.*               Report Messages (ORU) and Update the IBA Clinical            *
.*               Results Database.                                            *
.*                                                                            *
.*  Author    :                                                               *
.*                                                                            *
.*  Mod's     :                                                               *
.*        V12.00.01 14/05/2025  J.Tan          TSK 0955096                    *
.*                  Added alpanumeric visit number generation                 *
.******************************************************************************
.*        V11.05.01 03.12.2024  DA Sarkies       TSK 0952965                  *
.*                  Recompiled for changes to HL7OBXFD                        *
.******************************************************************************
.*        V11.04.01 03.12.2024  DA Sarkies       TSK 0952965                  *
.*                  Recompiled for changes to HL7OBXFD                        *
.******************************************************************************
.*        V10.07.01 05/11/2015  Steve Armstrong  CAR 303363                   *
.*                  Recompiled for changes to RESHEAFD                        *
.******************************************************************************
.*        V10.01.01 10/03/2011 Jill Parkinson CAR 233088                      *
.*                  Added pmsvx1af                                            *
.******************************************************************************
.*        V9.03.01  13/02/2004  Peter Vela    CAR 38290                       *
.*                  Added functionality for opening yearly RESLNKFD files     *
.*                  (reln1999, reln2000, reln2001, reln2002, etc...)          *
.******************************************************************************
.*        V5.08.01  31/10/2000  Greg Horvat                                   *
.*                  Recompiled for changes to HL7MSHFD HL7PIDFD & HL7PV1FD    *
.*                                                                            *
.******************************************************************************
.
 IFGE     $$VER,7
.
          INC       STD002FD       * use this to set up common
          INC       IBAHL7DF
.
          INC       AAEDE1FD/INC
          INC       HL7MSHFD/INC
          INC       HL7PIDFD/INC
          INC       HL7ORCFD/INC
          INC       HL7OBRFD/INC
          INC       HL7OBXFD/INC
          INC       HL7NTEFD/INC
          INC       NHIMASFD/INC
          INC       OUTBOAFD/INC
          INC       OUTBB1FD/INC
          INC       OUTCLIFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDO1FD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PMSVX1FD/INC
          INC       PATVISFD/INC
          INC       RESHEAFD/INC
          INC       RESDEAFD/INC
          INC       RESDEBFD/INC
          INC       RESDECFD/INC
          INC       RESHEBFD/INC
          INC       RESHECFD/INC
          INC       RESHEDFD/INC
          INC       RESTMBFD/INC
          INC       RESLNKFD/INC
          INC       RESPIDFD/INC
.
. ------- Program Variables ----------
.
CFILEPRE  DIM       3
CMNDLINE  DIM       127
.
CARET     INIT      "^"
CRFORM    INIT      015
.
LINENO    FORM      3
LINKTYPE  DIM       2
LINKKEYS  DIM       20 
.
NEXTSEG   DIM       4
NTEFTESC  DIM       3
.
OBRCOUNT  FORM      4
OBXCOUNT  FORM      4
OBXFTESC  DIM       3
.
PIDISAUR  FORM      1
.
REQTIME   DIM       5
RESLNKFL  DIM       8         * File name var for reslnk CAR 38290
RESULTYR  DIM       4
.
SETID     FORM      3
.
TEMPHRS   DIM       2
TEMPMIN   DIM       2
.
UNIQUEID  FORM      4
UNISCHE   DIM       12
UNICODE   DIM       12
UNIDESC   DIM       50
.
YEAROPEN  DIM       4
.
.
MESSPROC  INIT      "HL7SVORU - Message Processed"    * dummy processed message
.
PREHEA    INIT      "reha"
PREHEB    INIT      "rehb"
PREHEC    INIT      "rehc"
PREHED    INIT      "rehd"
PREDEA    INIT      "reda"
PREDEB    INIT      "redb"
PREDEC    INIT      "redc"
PRELEN    INIT      "reln"    * I CAR 38290
.
PRGID     INIT      "HL7SVORU"
PRGNAM    INIT      "Observation Report Message Service"
VERSION   INIT      "V12.00.01"
.*************************************************************************
.*  Start of Program                                                     *
.*************************************************************************
MAIN0000  CALL      INIT0000               * initialisation
          BRANCH    EXIT,MAIN9999          * initialisation failure
.
MAIN1000  CALL      HL7STA00               * update stats on screen
          CALL      HL7HED00               * Wait for Message Header
          BRANCH    OVRCD,MAIN9999
.
          DISPLAY   *P23:10,*V2LON,*HON,"Processing":
                    *HOFF,SP1,*V2LON,"(",MESSTYPE,")"
.
. Check valid type of messages
.
          MATCH     "ORU",MESSTYPE         * Observation Report
          GOTO      MAIN1100 IF EQUAL
          GOTO      MAIN9100
.
MAIN1100  CALL      PORU0000               * Process ORU Message
          BRANCH    EXIT,MAIN8000
          GOTO      MAIN7000
.
MAIN7000  ADD       ONE,SUCCPROC
          CALL      HL7END00
          GOTO      MAIN1000               * get next message
.------------------------------------------------------------
.  Error during processing of ORU Message
.------------------------------------------------------------
MAIN8000  CALL      HL7END00
          GOTO      MAIN1000               * Get next message
.----------------------------------------------------------------------------
. invalid message
.
.     NB.  SP1 at end of reply has been added because the interpreter does
.     not place a "|" after the last field, and Datagate requires this.  By
.     putting an extra field on the end (which is blank), a "|" will then
.     be added after the last field.
.----------------------------------------------------------------------------
MAIN9100  MOVE      "00010",RPLYCODE
          MOVE      "Invalid Message type",RPLYDESC
          MOVE      "ORU",RPLYHEAD
          GOTO      MAIN9900
. 
MAIN9200  MOVE      "01100",RPLYCODE      * no - return error
          MOVE      "Patient Master Details not found",RPLYDESC
          MOVE      "???",RPLYHEAD
          GOTO      MAIN9900
.
.         Send back error message
.
MAIN9900  CALL      HL7CLR00
          CALL      HL7ERR00
          GOTO      MAIN1000                * get next message
.
. finished
.
MAIN9999  IF        SHUTDOWN=0
            DISPLAY   *P1:24,*EL,*B,"Server has been shutdown.  ";
            CALL      HITENTER
          ENDIF
          TRAPCLR   INT                           * clear traps
..         CLOSE     DGATEINP                      * close inbound datagate file
          CLOSE     DGATEOUT                      * close outbound datagate file
.
MAIN0999  STOP
.----------------------------------------------------------------------------
. Initialisation
.----------------------------------------------------------------------------
INIT0000  CALL      SETX0000                      * set up common
          CALL      DISPHEAD                      * IBA header
.
.          OPEN      CONTROLF,"controlf"
.          MOVE      "96",AUDTSECT
.          READ      CONTROLF,AUDTSECT;DFILEINP,DFILEOUT
.          KEYIN     *P3:20,"Input Service   : ",DFILEINP
          KEYIN     *P3:21,"Output Service  : ",DFILEOUT
.
          CALL      HL7INT00         * Open In/Out Services
          BRANCH    EXIT,INIT9999
.

..    Open Other Tables Required Here
.
          OPEN       NHIMASA1,"nhimasaf"
          OPEN       OUTCLIA1,"outcliaf"
          OPEN       PATCODE1,"patcodes"
          OPEN       PATVISA1,"patvisaf"
.
          OPEN       AAEDE1A1,"aaede1af"
          OPEN       PATDO1A1,"patdo1af"
          OPEN       PATMA1A1,"patma1af"
          OPEN       PATMX1A1,"patmx1af"
          OPEN       PATMI1A1,"patmi1af"
          OPEN       PMSVX1A1,"pmsvx1af"
.
          MOVE       "out",CFILEPRE
          PACK       CFNAME,CFILEPRE,FILBB1A1
          CALL       OPOTBB11               * Open the file
.
          OPEN       RESLNKA1,"reslnkaf"
          OPEN       RESTMBA1,"restmbaf"
          OPEN       RESPIDA1,"respidaf"
.
          CALL       IBACLOCK
          PACK       YEAROPEN,CCC,CYY
          REP        " 0",YEAROPEN
          MOVE       YEAROPEN,RESULTYR
          CALL       RESOPN00                     * Open result tables
          BRANCH     EXIT,INIT9999
.
          CALL       HL7SCR00                      * draw box & screen layout
          MOVE       ZERO,EXIT
          GOTO       INIT9999
.
INIT9900  MOVE       ONE,EXIT
INIT9999  RETURN
.------------------------------------------------------------------------------
. Open result tables
.------------------------------------------------------------------------------
RESOPN00  CLOSE     RESHEAA1
          CLOSE     RESHEBA1
          CLOSE     RESHECA1
          CLOSE     RESHEDA1
          CLOSE     RESDEAA1
          CLOSE     RESDEBA1
          CLOSE     RESDECA1 
          CLOSE     RESPIDA1
.
          PACK      FILENAME,PREHEA,RESULTYR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESHEAA1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,RESOPN90
.
          PACK      FILENAME,PREHEB,RESULTYR
          OPEN      RESHEBA1,FILENAME
          PACK      FILENAME,PREHEC,RESULTYR
          OPEN      RESHECA1,FILENAME
          PACK      FILENAME,PREHED,RESULTYR
          OPEN      RESHEDA1,FILENAME
          PACK      FILENAME,PREDEA,RESULTYR
          OPEN      RESDEAA1,FILENAME
          PACK      FILENAME,PREDEB,RESULTYR
          OPEN      RESDEBA1,FILENAME
          PACK      FILENAME,PREDEC,RESULTYR
          OPEN      RESDECA1,FILENAME
.
          MOVE      RESULTYR,YEAROPEN
          GOTO      RESOPN99
.
RESOPN90  CALL      MAKRES00
          BRANCH    EXIT,RESOPN99
          GOTO      RESOPN00
.
RESOPN99  RETURN
.------------------------------------------------------------------------------
.  Create new files
.------------------------------------------------------------------------------
MAKRES00  MOVE      ZERO,TASKID 
          CLEAR     CMNDLINE 
          PACK      FILENAME,PREHEA,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 365 U1-8,9-13,14-17 ",CMNDLINE
          APPEND    "U96-101,102-121,1-8,9-13,14-17",CMNDLINE  
          RESET     CMNDLINE 
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE 
          PACK      FILENAME,PREHEB,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 158 U1-8,9-13,14-17,18-20",CMNDLINE
          RESET     CMNDLINE 
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE 
          PACK      FILENAME,PREHEC,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 157 U1-8,9-13,14-17,18-19",CMNDLINE
          RESET     CMNDLINE 
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE 
          PACK      FILENAME,PREDEA,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 276 U1-8,9-13,14-17,18-21",CMNDLINE
          RESET     CMNDLINE 
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE 
          PACK      FILENAME,PREDEB,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 162 U1-8,9-13,14-17,18-21,22-24",CMNDLINE
          RESET     CMNDLINE 
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE 
          PACK      FILENAME,PREDEC,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 162 U1-8,9-13,14-17,18-21,22-24",CMNDLINE
          RESET     CMNDLINE 
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE 
          PACK      FILENAME,PREHED,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 155 U1-8,9-13,14-17",CMNDLINE
          RESET     CMNDLINE 
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
          GOTO      MAKRES99
.
MAKRES90  DISPLAY   *P5:20,"Unix Error - ",TASKID 
          MOVE      ONE,EXIT
.
MAKRES99  RETURN
.------------------------------------------------------------------------------
. Process Unsolicited Order Result Message (ORU)
.------------------------------------------------------------------------------
PORU0000  CALL      HL7SEG00         * Get Next Segment
          BRANCH    OVRCD,PORU9000   * No PID Segment Found
          MATCH     "PID",HL7SEGID   * Must have PID Record
          GOTO      PORU9000 IF NOT EQUAL
.
PORU1000  CALL      PROPID00         * Get & Process PID Record
          BRANCH    EXIT,PORU9900    * Error
.
PORU1100  CALL      HL7SEG00         * Get Next Segment
          BRANCH    OVRCD,PORU8000   * No More Segments 
          MATCH     "ORC",HL7SEGID
          GOTO      PORU2100 IF EQUAL
          MATCH     "OBR",HL7SEGID
          GOTO      PORU2200 IF EQUAL
          MATCH     "NTE",HL7SEGID
          GOTO      PORU2300 IF EQUAL
          GOTO      PORU9100        * Invalid Segment Found
. 
PORU2100  CALL      PROORC00       * Process ORC Segment 
          BRANCH    EXIT,PORU9900
          GOTO      PORU1100       * Get Next Segment
.
PORU2200  CALL      PROOBR00       * Process OBR Segment 
          BRANCH    EXIT,PORU9900
          GOTO      PORU1100       * Get Next Segment
.
PORU2300  CALL      PRNTER00       * Process NTE Segment  (Ignore Segment)
          BRANCH    EXIT,PORU9900
          GOTO      PORU1100       * Get Next Segment
.
. Finish Processing Message
.
PORU8000
          GOTO      PORU9999
.
. Errors
.
PORU9000  MOVE      "05100",RPLYCODE      * no - return error
          MOVE      "Missing PID segment.",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
          GOTO      PORU9900
.
PORU9100  MOVE      "05101",RPLYCODE      * no - return error
          MOVE      "Invalid segment found",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
.
.         Send back error message
.
PORU9900  CALL      HL7CLR00
          CALL      HL7ERR00
          MOVE      ONE,EXIT
          GOTO      PORU9999
.
PORU9999  RETURN
.----------------------------------------------------------------------
. Process PID Segment
.----------------------------------------------------------------------
PROPID00  CALL      RHL7PID                 * Read in the PID segment
          BRANCH    OVRCD,PROPID90
.
          MOVE      PID00201,KEY7
          CALL      RDNHMAS1                * Check if NHI record exists
          BRANCH    OVRCD,PROPID10          * No -Not a NHI number 
.
          MATCH     PID00701,NHMADOB       
          GOTO      PROPID91 IF NOT EQUAL
.
          MATCH     PID008,NHMASEX          
          GOTO      PROPID91 IF NOT EQUAL
.
          MOVE      NHMAURNO,KEY8
          CALL      RDMAST1                 * Check if UR record exists
          BRANCH    OVRCD,PROPID91          * No - does not exist
.
          MOVE      ZERO,OBRCOUNT           * Init counter for OBR segment
          MOVE      ONE,PIDISAUR            * Yes - PID is a UR number
          MOVE      ZERO,EXIT
          GOTO      PROPID99
.
.  Non Hospital Patient Details
.
PROPID10  MOVE      PID00201,REPIPID
          MOVE      PID00501,REPISNM
          MOVE      PID00502,REPIGNM
          MOVE      PID00503,REPIINT
          MOVE      PID00701,REPIDOB
          MOVE      PID008,REPISEX 
          MOVE      PID01101,REPIAD1
          MOVE      PID01102,REPIAD2
          MOVE      PID01103,REPIAD3
          MOVE      PID01104,REPIAD4
          MOVE      PID01105,REPIPC
          MOVE      PID013,REPIPHH
          MOVE      PID014,REPIPHB
.
          PACK      KEY16,REPIPID
          CALL      WRREPI1
.
          MOVE      ZERO,PIDISAUR            * No - PID is not a UR number
          MOVE      ZERO,EXIT
          GOTO      PROPID99
.
PROPID90  MOVE      "05102",RPLYCODE      * no - return error
          MOVE      "Error reading PID segment",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
          GOTO      PROPID99
.
PROPID91  MOVE      "01100",RPLYCODE      * no - return error
          MOVE      "Patient Master Details not found",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
PROPID99  RETURN
.----------------------------------------------------------------------
. Process ORC Segment
.----------------------------------------------------------------------
PROORC00  CALL      RHL7ORC                 * Read In the ORC segment
          BRANCH    OVRCD,PROORC90          * Error reading segment
.
          MOVE      ZERO,EXIT
          GOTO      PROORC99
.      
PROORC90  MOVE      "05103",RPLYCODE      * no - return error
          MOVE      "Error Reading ORC segment",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
.
PROORC99  RETURN
.----------------------------------------------------------------------
. Process OBR Segment
.----------------------------------------------------------------------
PROOBR00  CALL      RHL7OBR                 * Read in OBR segment
          BRANCH    OVRCD,PROOBR90 
.
          ADD       ONE,OBRCOUNT         
          MOVE      OBR001,SETID
          COMPARE   OBRCOUNT,SETID 
          GOTO      PROOBR91 IF NOT EQUAL
.
          UNPACK    OBR00701,RESULTYR 
          MATCH     YEAROPEN,RESULTYR              * check correct year open 
          IF         !@EQUAL
            CALL       RESOPN00                     * Open result tables
            BRANCH     EXIT,PROOBR99
          ENDIF
.
          BEGIN
          CALL      WRHEAD00                * Write header record        
          CALL      WRLNKS00                * Write results link record
          MOVE      ONE,OBXCOUNT            * Init counter for OBX segments
.
PROOBR10  CALL      HL7SEG00                * Get Next Segment
          BRANCH    OVRCD,PROOBR80          * No more segments found
          MATCH     "NTE",HL7SEGID
          GOTO      PROOBR20 IF EQUAL
          MATCH     "OBX",HL7SEGID
          GOTO      PROOBR30 IF EQUAL
          GOTO      PROOBR92                * Invalid Segment Found
.
PROOBR20  CALL      PRNTEX00
          GOTO      PROOBR10
.
PROOBR30  CALL      PROOBX00 
          GOTO      PROOBR10
.
PROOBR80  MOVE      ZERO,EXIT
          GOTO      PROOBR99
.          
PROOBR90  MOVE      "05104",RPLYCODE      * no - return error
          MOVE      "Error reading OBR segment",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
          GOTO      PROOBR99
.
PROOBR91  MOVE      "85107",RPLYCODE      * no - return error
          MOVE      "OBR set ID error",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
          GOTO      PROOBR99
.
PROOBR92  MOVE      "05101",RPLYCODE      * no - return error
          MOVE      "Invalid segment found",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
PROOBR99  RETURN
.----------------------------------------------------------------------
. Process OBX Segment
.----------------------------------------------------------------------
PROOBX00  MOVE      ZERO,REDATFL
.
          CALL      SHL7OBX                 * Read in start of OBX segment
          BRANCH    OVRCD,PROOBX90 
.
          ADD       ONE,OBRCOUNT         
          MOVE      OBX001,SETID
          COMPARE   OBXCOUNT,SETID 
          GOTO      PROOBX91 IF NOT EQUAL
.
          MATCH     "NM",OBX002             * value type numeric
          GOTO      PROOBX10 IF EQUAL
          MATCH     "ST",OBX002             * value type string
          GOTO      PROOBX20 IF EQUAL
          MATCH     "TX",OBX002             * value type text
          GOTO      PROOBX30 IF EQUAL
          MATCH     "FT",OBX002             * value type formatted text
          GOTO      PROOBX40 IF EQUAL
          GOTO      PROOBX92                * Invalid valid type
.
PROOBX10  CALL      OBXNM000
          GOTO      PROOBX80
.
PROOBX20  CALL      OBXST000
          GOTO      PROOBX80
.
PROOBX30  CALL      OBXTX000
          GOTO      PROOBX80
.
PROOBX40  CALL      OBXFT000
          GOTO      PROOBX80
.
PROOBX80  PACK      OBX008,OBX008,SP70
          MATCH     OBX008,SP5
          IF        !@EQUAL
            MATCH     "N",OBX005
            CALL      UPDHEA00 IF NOT EQUAL
          ENDIF 
.
          MOVE      ZERO,EXIT
          GOTO      PROOBX99
.
PROOBX90  MOVE      "05105",RPLYCODE      * no - return error
          MOVE      "Error reading OBX segment",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
          GOTO      PROOBX99
.
PROOBX91  MOVE      "05108",RPLYCODE      * no - return error
          MOVE      "OBX set id error",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
          GOTO      PROOBX99
.
PROOBX92  MOVE      "05109",RPLYCODE      * no - return error
          MOVE      "Invalid value type",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
PROOBX99  RETURN
.----------------------------------------------------------------------
.  Update normal indicator in result header table
.----------------------------------------------------------------------
UPDHEA00  PACK      KEY17,REHARDT,REHARTM,REHARUN
          CALL      RDREHA1
          BRANCH    OVRCD,UPDHEA99
          MOVE      ZERO,REHANOR
          CALL      UPREHA1
.
UPDHEA99  RETURN
.----------------------------------------------------------------------
.  Read Numeric value result
.----------------------------------------------------------------------
OBXNM000  CALL      RHL7OBX1
          BRANCH    OVRCD,OBXNM900 
          CALL      EHL7OBX                 * Read in end of OBX segment
          BRANCH    OVRCD,OBXNM900 
          CALL      WRRES000                * Write result details
          GOTO      OBXNM999
.
OBXNM900  MOVE      "05105",RPLYCODE      * no - return error
          MOVE      "Error reading OBX segment",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
OBXNM999 RETURN
.----------------------------------------------------------------------
.  Read string value result
.----------------------------------------------------------------------
OBXST000  CALL      RHL7OBX1
          BRANCH    OVRCD,OBXST900 
          CALL      EHL7OBX                 * Read in end of OBX segment
          BRANCH    OVRCD,OBXST900 
          CALL      WRRES000                * Write result details
          GOTO      OBXST999
.
OBXST900  MOVE      "05105",RPLYCODE      * no - return error
          MOVE      "Error reading OBX segment",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
OBXST999 RETURN
.----------------------------------------------------------------------
.  Text
.----------------------------------------------------------------------
OBXTX000  MOVE      ZERO,LINENO
.
OBXTX100  CALL      ROBXTX00                * Read text 
          BRANCH    EXIT,OBXTX900           * Reached end of component
          BRANCH    OVRCD,OBXTX910          * No more characters to read
.
          ADD       ONE,LINENO
          MOVE      OBX005,REDBTXT
          PACK      KEY24,REHARDT,REHARTM,REHARUN,OBX001,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1 
          GOTO      OBXTX100
.
OBXTX900  IF        LINENO>0
            ADD       ONE,LINENO
            MOVE      OBX005,REDBTXT
            PACK      KEY24,REHARDT,REHARTM,REHARUN,OBX001,LINENO
            UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
            CALL      WRREDB1 
            MOVE      ONE,REDATFL
          ELSE
            MOVE      ZERO,REDATFL
            MOVE      OBX005,REDAVST
          ENDIF
.
....          GOTO      OBXTX100        ??????????????
          CALL      EHL7OBX                 * Read in end of OBX segment
          BRANCH    OVRCD,OBXTX910 
          CALL      WRRES000                * Write result details
          GOTO      OBXTX999
.
OBXTX910 MOVE      "05105",RPLYCODE      * no - return error
          MOVE      "Error reading OBX segment",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
OBXTX999  RETURN
.----------------------------------------------------------------------
.  Formatted Text
.----------------------------------------------------------------------
OBXFT000  MOVE      ZERO,LINENO 
.
OBXFT100  CALL      ROBXFT00                * Read formatted text
          BRANCH    EXIT,OBXFT900           * Reached end of component
          BRANCH    OVRCD,OBXFT910          * No more characters to read
.
          ADD       ONE,LINENO
          MOVE      OBX005,REDBTXT
          PACK      KEY24,REHARDT,REHARTM,REHARUN,OBX001,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1 
          GOTO      OBXFT100
.
OBXFT900  IF        LINENO>0
            ADD       ONE,LINENO
            MOVE      OBX005,REDBTXT
            PACK      KEY24,REHARDT,REHARTM,REHARUN,OBX001,LINENO
            UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
            CALL      WRREDB1 
            MOVE      ONE,REDATFL
          ELSE
            MOVE      ZERO,REDATFL
            MOVE      OBX005,REDAVST
          ENDIF

          CALL      EHL7OBX                 * Read in end of OBX segment
          BRANCH    OVRCD,OBXFT910 
          CALL      WRRES000                * Write result details
          GOTO      OBXTX999
.
OBXFT910  MOVE      "05105",RPLYCODE      * no - return error
          MOVE      "Error reading OBX segment",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
OBXFT999  RETURN
.----------------------------------------------------------------------
.   Write the result detail table
.----------------------------------------------------------------------
WRRES000  MOVE      REHARDT,REDARDT
          MOVE      REHARTM,REDARTM
          MOVE      REHARUN,REDARUN
          MOVE      OBX001,REDASID
          MOVE      OBX002,REDAVTY
          MOVE      OBX00301,REDAOTY 
          MOVE      OBX00303,REDAOCS
          MOVE      OBX00401,REDAOSC
          MOVE      OBX00402,REDAOSD
          MOVE      OBX005,REDAVST          * value string
.
          MOVE      ZERO,REDAVNM          * value numeric 
          SQUEEZE   OBX005
          TYPE      OBX005
          IF        @EQUAL
            MOVE      OBX005,REDAVNM          * value numeric 
          ENDIF
.
          MOVE      OBX006,REDAUNI
          MOVE      OBX007,REDARFR
          MOVE      OBX008,REDAABF
          MOVE      OBX009,REDAPRB
          MOVE      OBX010,REDANAT
          MOVE      OBX011,REDASTA
.
          PACK      KEY21,REHARDT,REHARTM,REHARUN,REDASID
          CALL      WRREDA1                 * Write the results
.
          MOVE      REDAOTY,UNICODE
          MOVE      REDAOCS,UNISCHE
          MOVE      OBX00302,UNIDESC
          CALL      UPRTSC00                * update result service codes
.
WRRES999  RETURN
.----------------------------------------------------------------------
. Update the result template by service code table
.----------------------------------------------------------------------
UPRTSC00  PACK      KEY24,UNISCHE,UNICODE
          CALL      RARETB1
          IF        OVRCD=1
            MOVE      UNISCHE,RETBUCS
            MOVE      UNICODE,RETBCOD
            MOVE      UNIDESC,RETBDES
            MOVE      SP70,RETBPRG
            MOVE      SP70,RETBREP
            MOVE      SP70,RETBTEM
            MOVE      ZERO,RETBCUM          * default value 
            MOVE      SP70,RETBUR1
            MOVE      SP70,RETBUR2
            MOVE      SP70,RETBUD1
            MOVE      SP70,RETBUD2
            MOVE      SP70,RETBUY1
            MOVE      SP70,RETBUY2
            MOVE      SP70,RETBSPA
.
            PACK      KEY24,RETBUCS,RETBCOD
            CALL      WRRETB1
          ENDIF
.
UPRTSC99  RETURN
.----------------------------------------------------------------------
. Process NTE Segment following OBR segment 
.----------------------------------------------------------------------
PRNTER00  MOVE      ZERO,LINENO
          CALL      RHL7NTE
          BRANCH    OVRCD,PRNTER90
.
PRNTER10  CALL      RNTEFT00                * Read in comments as formatted text
          BRANCH    OVRCD,PRNTER90
.
          ADD       ONE,LINENO
          MOVE      REHARDT,REHBRDT
          MOVE      REHARTM,REHBRTM
          MOVE      REHARUN,REHBRUN
          MOVE      LINENO,REHBLIN
          MOVE      NTE003,REHBTXT
.
          PACK      KEY20,REHARDT,REHARTM,REHARUN,REHBLIN
          CALL      WRREHB1
          BRANCH    EXIT,PRNTER80
          GOTO      PRNTEX10
.
PRNTER80  MOVE      ZERO,EXIT
          GOTO      PRNTER99
.
PRNTER90  MOVE      "05106",RPLYCODE      * no - return error
          MOVE      "Error reading NTE segment",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
PRNTER99  RETURN
.----------------------------------------------------------------------
. Process NTE Segment following OBX segment 
.----------------------------------------------------------------------
PRNTEX00  MOVE      ZERO,LINENO 
          CALL      RHL7NTE
          BRANCH    OVRCD,PRNTEX90
.
PRNTEX10  CALL      RNTEFT00                * Read in comments as formatted text
          BRANCH    OVRCD,PRNTEX90
.
          ADD       ONE,LINENO
          MOVE      REDARDT,REDCRDT
          MOVE      REDARTM,REDCRTM
          MOVE      REDARUN,REDCRUN
          MOVE      REDASID,REDCSID
          MOVE      LINENO,REDCLNO
          MOVE      NTE003,REDCTXT
.
          PACK      KEY20,REDARDT,REDARTM,REDARUN,REDCLNO
          CALL      WRREDC1
          BRANCH    EXIT,PRNTEX80
          GOTO      PRNTEX10
.
PRNTEX80  MOVE      ZERO,EXIT
          GOTO      PRNTEX99
.
PRNTEX90  MOVE      "05106",RPLYCODE      * no - return error
          MOVE      "Error reading NTE segment",RPLYDESC
          MOVE      "???",RPLYHEAD
          MOVE      ONE,EXIT
PRNTEX99  RETURN
.----------------------------------------------------------------------
.         Write header record        
.----------------------------------------------------------------------
WRHEAD00  UNPACK    OBR00702,TEMPHRS,TEMPMIN
          PACK      REQTIME,TEMPHRS,COLON,TEMPMIN
          PACK      KEY17,OBR00701,REQTIME,Z70 
          MOVE      ZERO,UNIQUEID
          CALL      RSREHA1
          CALL      RPREHA1
          BRANCH    OVRCD,WRHEAD10
          MATCH     REHARDT,OBR00701
          GOTO      WRHEAD10 IF NOT EQUAL
          MATCH     REHARTM,REQTIME
          GOTO      WRHEAD10 IF NOT EQUAL
          MOVE      REHARUN,UNIQUEID
.
WRHEAD10  MOVE      OBR00701,REHARDT        
          MOVE      REQTIME,REHARTM        
.
          IF        PIDISAUR<>ONE
            MOVE      REPIPID,REHAPID     
          ELSE
            MOVE      NHMAURNO,REHAPID    
          ENDIF
          MOVE      PIDISAUR,REHAFUR     
.
          CALL      GETVIS00        * Determine Visit
          MOVE      PVIBILL,REHAVIS
.
          MOVE      MSH00301,REHASID
          MOVE      MSH007,REHAMDT
          MOVE      MSH007,REHAMTM
          MOVE      MSH010,REHAMID
          MOVE      OBR00202,REHAPAP
          MOVE      OBR00201,REHAPOR
          MOVE      OBR00302,REHAFAP
          MOVE      OBR00301,REHAFOR
          MOVE      OBR00401,REHAUSC
          MOVE      OBR00403,REHAUCS
          MOVE      ONE,REHANOR             * 1=yes 
          MOVE      SP8,REHACDT
          MOVE      SP5,REHACTM
          MOVE      OBR010,REHACID
          MOVE      OBR01401,REHASDT
          MOVE      OBR01402,REHASTM
          MOVE      OBR01601,REHAOID
          MOVE      OBR01602,REHAOSN
          MOVE      OBR01603,REHAOGN
          MOVE      OBR02201,REHARRD
          MOVE      OBR02202,REHARRT
          MOVE      OBR024,REHADSS
          MOVE      OBR00601,REHARED          
          MOVE      OBR00602,REHARET   
          MOVE      OBR025,REHARST
          MOVE      OBR032,REHAIBY
          MOVE      SP70,REHAADC
          CALL      CHKRCI00                * Check for relevant clinical info
.
          MOVE      REHAUSC,UNICODE
          MOVE      REHAUCS,UNISCHE
          MOVE      OBR00402,UNIDESC
          CALL      UPRTSC00                * update result service codes
.
WRHEAD70  ADD       ONE,UNIQUEID
          MOVE      UNIQUEID,REHARUN
          PACK      KEY17,REHARDT,REHARTM,REHARUN
          CALL      RAREHA1
          BRANCH    OVRCD,WRHEAD80
          GOTO      WRHEAD70
.
WRHEAD80  CALL      WRREHA1
          CALL      RLREHA1
.
WRHEAD99  RETURN 
.----------------------------------------------------------------------
.  Check for relevant clinical info
.----------------------------------------------------------------------
CHKRCI00  MATCH     OBR013,SP70
          IF        @EQUAL
            MOVE      ZERO,REHAFCI          * clear indicator - no info
          ELSE
            MOVE      REHARDT,REHDRDT
            MOVE      REHARTM,REHDRTM
            MOVE      REHARUN,REHDRUN
            MOVE      OBR013,REHDRCI
.
            PACK      KEY17,REHDRDT,REHDRTM,REHDRUN
            CALL      WRREHD1
            MOVE      ONE,REHAFCI           * set indicator - yes info
          ENDIF
.
CHKRCI99  RETURN
.----------------------------------------------------------------------
.  Write results link record
.----------------------------------------------------------------------
WRLNKS00  MOVE      "01",LINKTYPE
          PACK      LINKKEYS,REHAPID,SP70
          CALL      NEWLNK00
.
          MATCH     ZEROVISN,PVIBILL
          GOTO      WRLNKS99 IF EQUAL
.
          MOVE      PVIBILL,KEY8
          CALL      RDVISA1            * Check for Visit No Passed in Message
          BRANCH    OVRCD,WRLNKS99     * Not Valid
.
          MOVE      "02",LINKTYPE
          PACK      LINKKEYS,PVIBILL,SP70
          CALL      NEWLNK00
.
          BRANCH    PVITYPE,WRLNKS10,WRLNKS20,WRLNKS30
.
WRLNKS10  PACK      KEY8,PVIBILL
          CALL      RDDETA1
          BRANCH    OVRCD,WRLNKS99
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,ADADOCT,SP70
          CALL      UPDADC00                
          CALL      NEWLNK00
.
          MOVE      "05",LINKTYPE
          PACK      LINKKEYS,AEDARFGP,SP70
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,AEDARDOC,SP70
          CALL      NEWLNK00
          GOTO      WRLNKS99
.
WRLNKS20  PACK      KEY8,REHAPID
          CALL      RDBOKB1
          BRANCH    OVRCD,WRLNKS99
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,OBADOCT,SP70
          CALL      UPDADC00                
          CALL      NEWLNK00
.
          MOVE      "05",LINKTYPE
          PACK      LINKKEYS,OTBBRFGP,SP70
          CALL      NEWLNK00
.
          GOTO      WRLNKS99
.
WRLNKS30  PACK      KEY8,PVIBILL
          CALL      RDMISS1
          BRANCH    OVRCD,WRLNKS99          * No record
.
          MOVE      "04",LINKTYPE           * Ward link
          PACK      LINKKEYS,AWARD,SP70
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE           * Attending doctor link
          PACK      LINKKEYS,ADOCTA,SP70
          CALL      UPDADC00                
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE           * Treating doctor link
          PACK      LINKKEYS,ADOCTT,SP70
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE           * Referring Doctor link
          PACK      LINKKEYS,ADOCTR,SP70
          CALL      NEWLNK00
.
WRLNKS99  RETURN
.------------------------------------------------------------
. Update Attending Doctor in Header Record
.------------------------------------------------------------
UPDADC00  PACK      KEY17,REHARDT,REHARTM,REHARUN
          CALL      RDREHA1
          BRANCH    OVRCD,UPDHEA99
          MOVE      LINKKEYS,REHAADC
          CALL      UPREHA1
UPDADC99  RETURN
.----------------------------------------------------------------------
. Write New link Record
.----------------------------------------------------------------------
NEWLNK00  PACK      KEY29,LINKTYPE,LINKKEYS,REHARDT,REHARTM,REHARUN,SP70
          UNPACK    KEY29,RELNLTY,RELNLKY,RELNRDT,RELNRTM,RELNRUN
.
          PACK      RESLNKFL,PRELEN,RELNRDT           * I CAR 38290
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESLNKA1,RESLNKFL
          TRAPCLR   IO
.
          COMPARE   ONE,OVRCD
          GOTO      NEWLNK99 IF EQUAL                 * end I CAR 38290
.
          CALL      RDRELN1
          IF        OVRCD=1
            MOVE      ZERO,RELNMSN            * Marked as seen, 0=no.
            MOVE      SP70,RELNSDT
            MOVE      SP70,RELNSTM
            MOVE      SP70,RELNSPC
            MOVE      REHAFUR,RELNFUR
            MOVE      REHAPID,RELNPID
            MOVE      REHAUCS,RELNUCS         * coding scheme
            MOVE      REHAUSC,RELNUSC         * code
            MOVE      REHADSS,RELNDSS
            MOVE      REHANOR,RELNNOR
            CALL      WRRELN1
          ENDIF
NEWLNK99  RETURN
.------------------------------------------------------------
. Get Visit Details
.------------------------------------------------------------
GETVIS00  SQUEEZE   PID00401
          MOVE      PID00401,F8
          MOVE      F8,KEY8
          CALL      RDVISA1            * Check for Visit No Passed in Message
          BRANCH    OVRCD,GETVIS10     * Not Valid
          MATCH     REHAPID,PVIURNO    * Check U.R
          GOTO      GETVIS99 IF EQUAL  * Matches U/R Assume the Correct Visit
.
GETVIS10  PACK      KEY24,REHAPID,REHARDT,Z70
          CALL      RDSVISA2
          CALL      RDPVISA2
          BRANCH    OVRCD,GETVIS20
          MATCH     PVIURNO,REHAPID
          GOTO      GETVIS99 IF EQUAL
.
GETVIS20  PACK      KEY24,REHAPID,REHARDT,SP70
          CALL      RDSVISA2
          CALL      RDKVISA2
          BRANCH    OVRCD,GETVIS30
          MATCH     PVIURNO,REHAPID
          GOTO      GETVIS99 IF EQUAL
.
GETVIS30  MOVE      ZEROVISN,PVIBILL
.
GETVIS99  RETURN
.----------------------------------------------------------------------
. Code Includes
.----------------------------------------------------------------------
.
          INC       STD002IO
.
          INC       AAEDE1IO/INC
          INC       HL7PIDIO/INC
          INC       HL7ORCIO/INC
          INC       HL7OBRIO/INC
          INC       HL7OBXIO/INC
          INC       HL7NTEIO/INC
          INC       NHIMASIO/INC
          INC       OUTBB1IO/INC
          INC       OUTCLIIO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PMSVX1IO/INC
          INC       PATVISIO/INC
          INC       RESHEAIO/INC
          INC       RESDEAIO/INC
          INC       RESDEBIO/INC
          INC       RESDECIO/INC
          INC       RESHEBIO/INC
          INC       RESHECIO/INC
          INC       RESHEDIO/INC
          INC       RESTMBIO/INC
          INC       RESLNKIO/INC
          INC       RESPIDIO/INC
.
          INC       IBAHL7CD
.
 XIF
.
