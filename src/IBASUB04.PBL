.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  13.04.2005 Peter Vela CAR 59696
.           Recompiled for SINSUAFD
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           29.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  02.09.1999 Sandra Barcham
.           Add in Creditor Keyword Search
.           srf 631485
.-------------------------------------------------------
SUPPCNT   FORM      6
AVGLINES  FORM      6.1
AVGTOTAL  FORM      12.2
TOTALONT  FORM      12
TOTALORD  FORM      12
EXPORTF1  FILE      ASCII, FIXED=400
EXPORTF2  FILE      ASCII, FIXED=400
TABDELM   EQU       0x09
EXCPFLAG  FORM      1
EXPDATE   DIM       10
DELDATE   DIM       10
EXPDAT    DIM       8
PERLST    DIM       6[120]
PERCNT    FORM      3
SAVKEY11  DIM       11
.
FILLRATE  FORM      6.1
ORDOK     FORM      1
ORDFLAG   FORM      1
ORDCOUNT  FORM      8
LASTSUP   DIM       5
.
CDYSDAYS  FORM      6
CDYSYEAR  FORM      2
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
.
DATEF1    FORM      8
DATEF2    FORM      8
.
STRCRD    DIM       5
ENDCRD    DIM       5
STRPGP    DIM       5
ENDPGP    DIM       5
STRDAT    DIM       8
ENDDAT    DIM       8
STRORI    DIM       3
ENDORI    DIM       3
.
RECQTY    FORM      12.2
ORDLINES  FORM      3
ONTIME    FORM      3
EARLY     FORM      3
LATE01    FORM      3
LATE02    FORM      3
LATE03    FORM      3
LATE04    FORM      3
LATE05    FORM      3
LATE06    FORM      3
LATE99    FORM      3
.
PERCT    FORM      4.1     * Total Number of Orders
PERCE    FORM      4.1     * Total Number Orders Early
PERC0    FORM      4.1     * Total Number Orders On Time
PERC1    FORM      4.1     * Total Number Orders -1-
PERC2    FORM      4.1     * Total Number Orders -2-
PERC3    FORM      4.1     * Total Number Orders -3-
PERC4    FORM      4.1     * Total Number Orders -4-
PERC5    FORM      4.1     * Total Number Orders -5-
PERC60   FORM      4.1     * Total Number Orders  6-10
PERC10   FORM      4.1     * Total Number Orders  >10
.
TOTLNT    FORM      6     * Total Number of Order Lines
TOTTORD   FORM      12.2  * Total $ Ordered
TOTTREC   FORM      12.2  * Total $ Received
RECTOTAL  FORM      12.2  * Total $ Ordered
ORDTOTAL  FORM      12.2  * Total $ Received
.
TOTORT    FORM      6     * Total Number of Orders
TOTORE    FORM      6     * Total Number Orders Early
TOTOR0    FORM      6     * Total Number Orders On Time
TOTOR1    FORM      6     * Total Number Orders -1-
TOTOR2    FORM      6     * Total Number Orders -2-
TOTOR3    FORM      6     * Total Number Orders -3-
TOTOR4    FORM      6     * Total Number Orders -4-
TOTOR5    FORM      6     * Total Number Orders -5-
TOTOR60   FORM      6     * Total Number Orders  6-10
TOTOR10   FORM      6     * Total Number Orders  >10
.
TEMPSEQ1   IFILE      SQL, FIXED=100, KEY="U1-5"
TEMPSEQ2   IFILE      SQL, FIXED=100, KEY="U6-15,1-5"
.
SEQNSUP    DIM       5   1   * Supplier
SEQNAMT    DIM      10   6   * Sequence Amount
.                       16
.
TEMPFILL   IFILE      SQL, FIXED=200, KEY="U1-5,6-11"
.
FILLSUP    DIM       5     * Supplier
FILLPER    DIM       6     * Period
.
FILLORT    FORM      6     * Total Number of Orders
FILLORE    FORM      6     * Total Number Orders Early
FILLOR0    FORM      6     * Total Number Orders On Time
FILLOR1    FORM      6     * Total Number Orders -1-
FILLOR2    FORM      6     * Total Number Orders -2-
FILLOR3    FORM      6     * Total Number Orders -3-
FILLOR4    FORM      6     * Total Number Orders -4-
FILLOR5    FORM      6     * Total Number Orders -5-
FILLOR60   FORM      6     * Total Number Orders  6-10
FILLOR10   FORM      6     * Total Number Orders   >10
.
FILLLNT    FORM      6     * Total Number of Lines
FILLLNE    FORM      6     * Total Number Lines  Early
FILLLN0    FORM      6     * Total Number Lines  On Time
FILLLN1    FORM      6     * Total Number Lines  -1-
FILLLN2    FORM      6     * Total Number Lines  -2-
FILLLN3    FORM      6     * Total Number Lines  -3-
FILLLN4    FORM      6     * Total Number Lines  -4-
FILLLN5    FORM      6     * Total Number Lines  -5-
FILLLN60   FORM      6     * Total Number Lines   6-10
FILLLN10   FORM      6     * Total Number Lines   >10
.
FILLTORD   FORM      12.2  * Total Order Cost
FILLTREC   FORM      12.2  * Total Order Received
.
EXCEPTFL   IFILE      SQL, FIXED=100, KEY="U1-5,6-12,13-15"
.
EXCPSUP    DIM       5     * Supplier
EXCPPON    DIM       7     * Order
EXCPITM    DIM       3     * Line
.-----------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB04
.   Function      :   Supplier Key Performance Indicators     
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       SINCIAFD/INC
          INC       SINORIFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
          INC       SINSUAFD/INC
.=========================
.Local Variable Definition
.-------------------------
CREDFROM  DIM      40 * Scr 00 Fld     4
CREDEND   DIM      40 * Scr 00 Fld     5
FROMPGP   DIM      45 * Scr 00 Fld     6
TOPGP     DIM      45 * Scr 00 Fld     7
FROMDAT   DIM      10 * Scr 00 Fld     8
TODAT     DIM      10 * Scr 00 Fld     9
FROMORI   DIM      40 * Scr 00 Fld    10
TOORI     DIM      40 * Scr 00 Fld    11
REPTLEV   FORM      1 * Scr 00 Fld    12
RLEVDESC  DIM      20 * Scr 00 Fld    13
REPTINC   FORM      1 * Scr 00 Fld    14
RINCDESC  DIM      20 * Scr 00 Fld    15
EXPORTYN  FORM      1 * Scr 00 Fld    16
REPTSEQ   FORM      1 * Scr 00 Fld    17
RSEQDESC  DIM      20 * Scr 00 Fld    18
FIRSTXXX  FORM      6 * Scr 00 Fld    19
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB04"
PRGNAM    INIT      "Supplier Key Performance Indicators     "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinoriaf";
          OPEN      SINORIA1,"sinoriaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA2,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA3,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA4,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA2,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA3,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA4,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA5,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA1,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Options                            
          ENDIF
          RETURN
.--------------------------------
. Screen - Options                            
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETSCR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Options                            
.-------------------------------------------------------
CF00L000
          MOVE      SP70,CREDFROM
          MOVE      SP70,FROMPGP 
          MOVE      SP70,FROMDAT 
          MOVE      SP70,FROMORI 
          MOVE      ZERO,REPTLEV 
          MOVE      ZERO,REPTINC 
          MOVE      ZERO,EXPORTYN
          MOVE      ZERO,REPTSEQ 
          MOVE      ZERO,FIRSTXXX
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Options                            
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Options                            
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Options                            
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Options                            
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Options                            
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103,PS00L104,PS00L105:
                            PS00L106,PS00L107,PS00L108,PS00L109:
                            PS00L110,PS00L111,PS00L112,PS00L113:
                            PS00L114,PS00L115,PS00L116
          GOTO     PS00L999
.
PS00L101
          MOVE      CREDFROM,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      CREDEND,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FROMPGP,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      TOPGP,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      FROMDAT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      TODAT,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      FROMORI,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      TOORI,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      REPTLEV,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      RLEVDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      REPTINC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      RINCDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      REPTSEQ,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      RSEQDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      FIRSTXXX,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Options                            
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L104,SF00L006,SF00L105:
                            SF00L006,SF00L106,SF00L006,SF00L107:
                            SF00L006,SF00L108,SF00L006,SF00L109:
                            SF00L110,SF00L006,SF00L111
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L020,SF00L104,SF00L020,SF00L105:
                            SF00L020,SF00L106,SF00L020,SF00L107:
                            SF00L020,SF00L108,SF00L020,SF00L109:
                            SF00L110,SF00L020,SF00L111
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      REPT0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CREDEND 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RCRED000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CREDFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CREDEND,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOPGP   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RPROD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMPGP,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOPGP,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODAT   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RDATE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMDAT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODAT,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOORI   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RORIG000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMORI,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOORI,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,RLEVDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ERLEV000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPTLEV,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      RLEVDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L108
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,RINCDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ERINC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPTINC,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      RINCDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L109
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L110
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,RSEQDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ERSEQ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L110
            ENDIF
            BRANCH    EXIT,SF00L110,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPTSEQ,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      RSEQDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L111
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,FIRSTXXX
          IF        SCPSMAN=1
            COMPARE   ZERO,FIRSTXXX
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L111
            ENDIF
          ENDIF
          MOVE      FIRSTXXX,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------
. Set Default Parameters
.------------------------------------------------------------
SETSCR00   MOVE      ONE,REPTLEV
           MOVE      ONE,REPTSEQ
           MOVE      ONE,REPTINC
           MOVE      "999999",FIRSTXXX
           MOVE      ZERO,EXPORTYN
           MOVE      "Order",RLEVDESC
           MOVE      "Total Cost",RSEQDESC
           MOVE      "All Catalogs",RINCDESC
           MOVE      "Start   ",FROMORI
           MOVE      "Finish  ",TOORI
           MOVE      "Start   ",FROMDAT
           MOVE      "Finish  ",TODAT
           MOVE      "Start   ",FROMPGP
           MOVE      "Finish  ",TOPGP
           MOVE      "Start   ",CREDFROM
           MOVE      "Finish  ",CREDEND
           MOVE      SP70,STRORI
           MOVE      SP70,STRDAT
           MOVE      SP70,STRPGP
           MOVE      SP70,STRCRD
           MOVE      Z70,ENDORI
           MOVE      Z70,ENDDAT
           MOVE      Z70,ENDPGP
           MOVE      Z70,ENDCRD
.
SETSCR99   RETURN
.-----------------------------------------------------------
. Print Order Fill Rate Report
.-----------------------------------------------------------
REPT0000  CALL      MKTM1000       * Make Temp File
          CALL      MKTM2000       * Make Temp File
          CALL      MKTM3000       * Make Temp File
.
          CALL      EXTR0000       * Extract Orders Range
.
          CALL      MAKEXP00       * Create Export File
.
          BRANCH    REPTLEV,REPT1000,REPT2000
.
REPT1000  CALL      PORD0000       * Print Report
          GOTO      REPT9000
.
REPT2000  CALL      PLIN0000       * Print Report
          GOTO      REPT9000
.
REPT9000  CLOSE     TEMPFILL,DELETE
          CLOSE     TEMPSEQ2
          CLOSE     TEMPSEQ1,DELETE
          CLOSE     EXCEPTFL,DELETE
          CALL      TRAN0000
.
REPT9999  RETURN
.------------------------------------------------------------
. Extract Matching Orders
.------------------------------------------------------------
EXTR0000  MOVE      ZERO,ORDCOUNT
          CALL      CLRPER00
          DISPLAY   *P1:24,*EL,"Extracting Orders ..."
          PACK      KEY15,STRDAT,SP70
          CALL      RSSIPA4
EXTR1000  CALL      RKSIPA4
          BRANCH    OVRCD,EXTR9000
          MATCH     SIPADIN,ENDDAT
          GOTO      EXTR9000 IF LESS
          MATCH     SP70,SIPADCN        * Cancelled
          GOTO      EXTR1000 IF NOT EQUAL
.
          ADD       ONE,ORDCOUNT
          IF        ORDCOUNT%500=1
            DISPLAY   *P30:24,ORDCOUNT
          ENDIF
.
          CALL      ORDRAN00            * Check Ranges
          BRANCH    EXIT,EXTR1000
.
          CALL      EXLIN000            * Extract Line Items
.
          GOTO      EXTR1000
EXTR9000
EXTR9999  RETURN
.------------------------------------------------------------
. Extract Lines
.------------------------------------------------------------
EXLIN000  MOVE      ONE,ORDFLAG
          MOVE      ONE,ORDOK
          MOVE      ZERO,ORDLINES
          MOVE      ZERO,RECTOTAL
          MOVE      ZERO,ORDTOTAL
          MOVE      ZERO,ONTIME
          MOVE      ZERO,EARLY
          MOVE      ZERO,LATE01
          MOVE      ZERO,LATE02
          MOVE      ZERO,LATE03
          MOVE      ZERO,LATE04
          MOVE      ZERO,LATE05
          MOVE      ZERO,LATE06
          MOVE      ZERO,LATE99
          MOVE      ZERO,LATE99
          PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
EXLIN100  CALL      RKSIPC1                    * Order Line Items Details
          BRANCH    OVRCD,EXLIN900
          MATCH     SIPCPON,SIPAPON
          GOTO      EXLIN900 IF NOT EQUAL
.
          CALL      CHKRAN00                   * Check Ranges
          BRANCH    EXIT,EXLIN100
.
.
          MATCH     SP70,SIPCFDD               * Have We Received ?
          GOTO      EXLIN100 IF EQUAL
.
          CALL      GETREC00
.
          ADD       ONE,ORDLINES
          ADD       SIPCTCR,RECTOTAL
          IF        SIPCECT>0
            ASSIGN    ORDTOTAL+SIPCOQT*SIPCECT,ORDTOTAL
          ENDIF
.
          COMPARE   RECQTY,SIPCOQT
          IF        !@EQUAL
...            CALL      UPEXCP00                * Update Exceptions File
            MOVE      ZERO,ORDOK
            GOTO      EXLIN100
          ENDIF
.
          REP       " 0",SIPCFDD
          REP       " 0",EXPDAT
          MATCH     EXPDAT,SIPCFDD            * On Time
          IF        @EQUAL
            ADD       ONE,ONTIME
            GOTO      EXLIN100
          ENDIF
.
          MOVE      EXPDAT,CDYSFDTE    * Expected
          MOVE      SIPCFDD,CDYSTDTE   * Delivery Date
.
          DAYSEP    CDYSFDTE,CDYSTDTE,CDYSDAYS
          SUB       ONE,CDYSDAYS       * Days Between
          IF        CDYSDAYS<0
            ADD       ONE,EARLY
            GOTO      EXLIN100
          ENDIF
          CALL      LATE0000
          GOTO      EXLIN100
.
EXLIN900  MOVE      SIPADIN,KEY6        * CCYYMM
          PACK      KEY11,SIPASUP,KEY6  * Supplier Record
          UNPACK    KEY11,FILLSUP,FILLPER
          CALL      RDFILL1
          IF        OVRCD=0
            CALL      ADDORD00
            CALL      UPFILL1
          ELSE
            CALL      SETFIL00
            CALL      ADDORD00
            CALL      WRFILL1
          ENDIF
.
          MOVE      SIPADIN,KEY6        * CCYYMM
          MOVE      Z70,KEY5            * Summary Record for All Suppliers
          PACK      KEY11,KEY5,KEY6
          UNPACK    KEY11,FILLSUP,FILLPER
          CALL      RDFILL1
          IF        OVRCD=0
            CALL      ADDORD00
            CALL      UPFILL1
          ELSE
            CALL      SETFIL00
            MOVE      Z70,FILLSUP
            CALL      ADDORD00
            CALL      WRFILL1
          ENDIF
.
          CALL      ADDPER00            * Add to Period Array
.
EXLIN999  RETURN
.------------------------------------------------------------
. Update Exceptions Temp File
.------------------------------------------------------------
.UPEXCP00  PACK      KEY15,SIPASUP,SIPCPON,SIPCITM
.          UNPACK    KEY15,EXCPSUP,EXCPPON,EXCPITM
.          CALL      RDEXCP1
.          IF        OVRCD=1
.            CALL      WREXCP1
.          ENDIF
.UPEXCP99  RETURN
.------------------------------------------------------------
. Add Order Details
.------------------------------------------------------------
ADDORD00  ADD        ONE,FILLORT
          ADD        ORDLINES,FILLLNT  * Total Number of Lines
          ADD        ORDTOTAL,FILLTORD * Total $ Ordered
          ADD        RECTOTAL,FILLTREC * Total $ Received
          ADD        EARLY,FILLLNE     * Total Number Lines  Early
          ADD        ONTIME,FILLLN0    * Total Number Lines  On Time
          ADD        LATE01,FILLLN1    * Total Number Lines  -1-
          ADD        LATE02,FILLLN2    * Total Number Lines  -2-
          ADD        LATE03,FILLLN3    * Total Number Lines  -3-
          ADD        LATE04,FILLLN4    * Total Number Lines  -4-
          ADD        LATE05,FILLLN5    * Total Number Lines  -5-
          ADD        LATE06,FILLLN60   * Total Number Lines   6-10
          ADD        LATE99,FILLLN10   * Total Number Lines   >10
.
          COMPARE    ZERO,LATE99
          GOTO       ADDORD10 IF EQUAL
          ADD        ONE,FILLOR10   * Total Number Orders  >10
          GOTO       ADDORD99
.
ADDORD10  COMPARE    ZERO,LATE06
          GOTO       ADDORD20 IF EQUAL
          ADD        ONE,FILLOR60   * Total Number Orders  6-10
          GOTO       ADDORD99
.
ADDORD20  COMPARE    ZERO,LATE05
          GOTO       ADDORD30 IF EQUAL
          ADD        ONE,FILLOR5    * Total Number Orders  5
          GOTO       ADDORD99
.
ADDORD30  COMPARE    ZERO,LATE04
          GOTO       ADDORD40 IF EQUAL
          ADD        ONE,FILLOR4    * Total Number Orders  4
          GOTO       ADDORD99
.
ADDORD40  COMPARE    ZERO,LATE03
          GOTO       ADDORD50 IF EQUAL
          ADD        ONE,FILLOR3    * Total Number Orders  3
          GOTO       ADDORD99
.
ADDORD50  COMPARE    ZERO,LATE02
          GOTO       ADDORD60 IF EQUAL
          ADD        ONE,FILLOR2    * Total Number Orders  2
          GOTO       ADDORD99
.
ADDORD60  COMPARE    ZERO,LATE01
          GOTO       ADDORD70 IF EQUAL
          ADD        ONE,FILLOR1    * Total Number Orders  1
          GOTO       ADDORD99
.
ADDORD70  COMPARE    ZERO,ONTIME
          GOTO       ADDORD80 IF EQUAL
          ADD        ONE,FILLOR0    * Total Number Orders  Ontime
          GOTO       ADDORD99
.
ADDORD80  COMPARE    ZERO,EARLY
          GOTO       ADDORD90 IF EQUAL
          ADD        ONE,FILLORE    * Total Number Orders  Ontime
          GOTO       ADDORD99
.
ADDORD90
.
ADDORD99  RETURN
.------------------------------------------------------------------------------
. Calculate Total Received for First Delivery Date & Get Expected Delivery Date
.------------------------------------------------------------------------------
GETREC00  MOVE      ZERO,RECQTY
          MOVE      SIPCEDD,EXPDAT
          PACK      KEY12,SIPCPON,SIPCITM,SP70
          CALL      RSSIPF1
GETREC05  CALL      RKSIPF1            * Receival Details
          BRANCH    OVRCD,GETREC99
          MATCH     SIPFPON,SIPCPON
          GOTO      GETREC99 IF NOT EQUAL
          MATCH     SIPFITM,SIPCITM
          GOTO      GETREC99 IF NOT EQUAL
          COMPARE   ZERO,SIPFQTY       * Ignore Zero Qty Receivals
          GOTO      GETREC05 IF EQUAL
          MOVE      SIPFDAT,SIPCFDD    * Date of First Delivery
          MOVE      SIPFEDD,EXPDAT     * Expected Delivery Date
.
          PACK      KEY12,SIPCPON,SIPCITM,SP70
          CALL      RSSIPF1
GETREC10  CALL      RKSIPF1            * Receival Details
          BRANCH    OVRCD,GETREC99
          MATCH     SIPFPON,SIPCPON
          GOTO      GETREC99 IF NOT EQUAL
          MATCH     SIPFITM,SIPCITM
          GOTO      GETREC99 IF NOT EQUAL
          MATCH     SIPFDAT,SIPCFDD
          GOTO      GETREC20 IF NOT EQUAL
          ADD       SIPFQTY,RECQTY
          GOTO      GETREC10
.
GETREC20  MATCH     EXPDAT,SIPFDAT
          GOTO      GETREC10 IF NOT LESS
          ADD       SIPFQTY,RECQTY
          GOTO      GETREC10
.
GETREC99  RETURN
.------------------------------------------------------------
. Late Order Line
.------------------------------------------------------------
LATE0000  BRANCH    CDYSDAYS,LATE1000,LATE2000,LATE3000,LATE4000,LATE5000:
                             LATE6000,LATE6000,LATE6000,LATE6000,LATE6000
          ADD       ONE,LATE99
...          CALL      UPEXCP00                * Update Exceptions File
          GOTO      LATE9999
LATE1000  ADD       ONE,LATE01
          GOTO      LATE9999
LATE2000  ADD       ONE,LATE02
          GOTO      LATE9999
LATE3000  ADD       ONE,LATE03
          GOTO      LATE9999
LATE4000  ADD       ONE,LATE04
          GOTO      LATE9999
LATE5000  ADD       ONE,LATE05
          GOTO      LATE9999
LATE6000  ADD       ONE,LATE06
...          CALL      UPEXCP00                * Update Exceptions File
          GOTO      LATE9999
LATE9999  RETURN
.------------------------------------------------------------
. Check Line in Ranges Specified
.------------------------------------------------------------
CHKRAN00  MOVE      ZERO,EXIT
          MATCH     STRPGP,SIPCPRD      * Check Product Group Range
          GOTO      CHKRAN90 IF LESS
          MATCH     SIPCPRD,ENDPGP
          GOTO      CHKRAN90 IF LESS
          BRANCH    REPTINC,CHKRAN99,CHKRAN10,CHKRAN20,CHKRAN30
.
CHKRAN10  MATCH     SP70,SIPCCAT        * Stock Only
          GOTO      CHKRAN90 IF EQUAL
          MOVE      SIPCCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,CHKRAN90
          COMPARE   ZERO,SIIANON
          GOTO      CHKRAN90 IF NOT EQUAL
          GOTO      CHKRAN99
.
CHKRAN20  MATCH     SP70,SIPCCAT        * Non Stock Only
          GOTO      CHKRAN90 IF EQUAL
          MOVE      SIPCCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,CHKRAN90
          COMPARE   ZERO,SIIANON
          GOTO      CHKRAN90 IF EQUAL
          GOTO      CHKRAN99
.
CHKRAN30  MATCH     SP70,SIPCCAT        * Non Catalog Only
          GOTO      CHKRAN90 IF NOT EQUAL
          GOTO      CHKRAN99
.
CHKRAN90  MOVE      ONE,EXIT
CHKRAN99  RETURN
.------------------------------------------------------------
. Check Order Range
.------------------------------------------------------------
ORDRAN00  MATCH     STRCRD,SIPASUP      * Check Creditor/Supplier Range
          GOTO      ORDRAN90 IF LESS
          MATCH     SIPASUP,ENDCRD
          GOTO      ORDRAN90 IF LESS
.
          MATCH     STRORI,SIPAORI      * Check Originator Range
          GOTO      ORDRAN90 IF LESS
          MATCH     SIPAORI,ENDORI
          GOTO      ORDRAN90 IF LESS
          MOVE      ZERO,EXIT
          GOTO      ORDRAN99
ORDRAN90  MOVE      ONE,EXIT
ORDRAN99  RETURN
.------------------------------------------------------------
. Set Fill Rate Record for New Record
.------------------------------------------------------------
SETFIL00  MOVE      SIPASUP,FILLSUP
          MOVE      SIPADIN,FILLPER
.
          MOVE      ZERO,FILLORT
          MOVE      ZERO,FILLTORD
          MOVE      ZERO,FILLTREC
          MOVE      ZERO,FILLLNT
          MOVE      ZERO,FILLORE
          MOVE      ZERO,FILLLNE
          MOVE      ZERO,FILLOR0
          MOVE      ZERO,FILLLN0
          MOVE      ZERO,FILLOR1
          MOVE      ZERO,FILLLN1
          MOVE      ZERO,FILLOR2
          MOVE      ZERO,FILLLN2
          MOVE      ZERO,FILLOR3
          MOVE      ZERO,FILLLN3
          MOVE      ZERO,FILLOR4
          MOVE      ZERO,FILLLN4
          MOVE      ZERO,FILLOR5
          MOVE      ZERO,FILLLN5
          MOVE      ZERO,FILLOR60
          MOVE      ZERO,FILLLN60
          MOVE      ZERO,FILLOR10
          MOVE      ZERO,FILLLN10
.
          RETURN
.------------------------------------------------------------
. Print Report
.------------------------------------------------------------
PORD0000  MOVE      "90",CLNO
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P1:24,*EL,"Printing Report ..."
          MOVE      ZERO,CPAGENO
          MOVE      ZERO,SUPPCNT
.
          READ      TEMPSEQ2,Z70;;
PORD0100  READKP    TEMPSEQ2;SEQNSUP,SEQNAMT
          GOTO      PORD9000 IF OVER
          COMPARE   SUPPCNT,FIRSTXXX
          GOTO      PORD9000 IF EQUAL
          ADD       ONE,SUPPCNT
.
          CALL      HEAD0000
          CALL      WRTEX200               * Export Summary
          MOVE      ZERO,TOTLNT
          MOVE      ZERO,TOTTREC
          MOVE      ZERO,TOTTORD
          MOVE      ZERO,TOTORT
          MOVE      ZERO,TOTORE
          MOVE      ZERO,TOTOR0
          MOVE      ZERO,TOTOR1
          MOVE      ZERO,TOTOR2
          MOVE      ZERO,TOTOR3
          MOVE      ZERO,TOTOR4
          MOVE      ZERO,TOTOR5
          MOVE      ZERO,TOTOR60
          MOVE      ZERO,TOTOR10
.
          PACK      KEY11,SEQNSUP,SP70
          CALL      RSFILL1
PORD1000  CALL      RKFILL1
          BRANCH    OVRCD,PORD1900
          MATCH     FILLSUP,SEQNSUP
          GOTO      PORD1900 IF NOT EQUAL
.
PORD1200  UNPACK    FILLPER,CCENT,CYEAR,CMON
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          ADD       ONE,CLNO
          ASSIGN    ((FILLORE+FILLOR0)/FILLORT)*100.0,FILLRATE
          ASSIGN    FILLLNT/FILLORT,AVGLINES
          ASSIGN    FILLTORD/FILLORT,AVGTOTAL
          PRINT     SP20,CMON,"/",CCENT,CYEAR,SP4,FILLRATE,SP2,FILLORT,SP2:
                    FILLLNT,SP2,FILLTORD,SP5,AVGLINES,SP2,AVGTOTAL
.
          ADD       FILLLNT,TOTLNT
          ADD       FILLTORD,TOTTORD
          ADD       FILLTREC,TOTTREC
          ADD       FILLORT,TOTORT
          ADD       FILLORE,TOTORE
          ADD       FILLOR0,TOTOR0
          CALL      WRTEX100         * Write to Export File
          GOTO      PORD1000
.
PORD1900  CALL      TOTSUP00
          GOTO      PORD0100
.
PORD9000  CALL      TOTSUP00
          CALL      UND132
          PRINT     *30,"*** End of Report ***"
.
PORD9999  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WRTEX100  COMPARE   ONE,EXPORTYN
          GOTO      WRTEX199 IF NOT EQUAL
          WRITE     EXPORTF1,SEQ;FILLSUP,SP1,APMASN1,TABDELM:
                                 CMON,"/",CCENT,CYEAR,TABDELM:
                                 FILLRATE,TABDELM,FILLORT,TABDELM:
                                 FILLLNT,TABDELM,FILLTORD,TABDELM:
                                 AVGLINES,TABDELM,AVGTOTAL
WRTEX199  RETURN
.------------------------------------------------------------
. Write to Summary Export File
.------------------------------------------------------------
WRTEX200  COMPARE  ONE,EXPORTYN
          GOTO     WRTEX299 IF NOT EQUAL
          PACK     SAVKEY11,SEQNSUP,FILLPER
          MOVE     SEQNSUP,KEY5
          CALL     RDAPMA1
          MATCH    Z70,SEQNSUP
          IF       @EQUAL
             MOVE    "Grand Total",APMASN1
             MOVE    SP70,APMASN2
          ENDIF
          WRITE    EXPORTF2,SEQ;SEQNSUP,SP1,APMASN1;
          MOVE     ZERO,TOTALONT
          MOVE     ZERO,TOTALORD
.
          MOVE     ZERO,F3
WRTEX210  ADD      ONE,F3
          PACK     KEY11,SEQNSUP,PERLST[F3]
          CALL     RDFILL1
          IF       OVRCD=0
            IF       REPTLEV=1
              ASSIGN   ((FILLORE+FILLOR0)/FILLORT)*100.0,FILLRATE
              ASSIGN   TOTALONT+FILLORE+FILLOR0,TOTALONT
              ASSIGN   TOTALORD+FILLORT,TOTALORD
              WRITE    EXPORTF2,SEQ;TABDELM,FILLRATE;
            ELSE
              ASSIGN   ((FILLLNE+FILLLN0)/FILLLNT)*100.0,FILLRATE
              ASSIGN   TOTALONT+FILLLNE+FILLLN0,TOTALONT
              ASSIGN   TOTALORD+FILLLNT,TOTALORD
              WRITE    EXPORTF2,SEQ;TABDELM,FILLRATE;
            ENDIF
          ELSE
            WRITE    EXPORTF2,SEQ;TABDELM,SP1;
          ENDIF
          COMPARE  PERCNT,F3
          GOTO     WRTEX210 IF NOT EQUAL
          ASSIGN   (TOTALONT/TOTALORD)*100.0,FILLRATE
          WRITE    EXPORTF2,SEQ;TABDELM,FILLRATE
.
          MOVE     SAVKEY11,KEY11
          CALL     RDFILL1
.
WRTEX299  RETURN
.------------------------------------------------------------
. Print Total For Supplier
.------------------------------------------------------------
TOTSUP00  CALL      UND132
          IF        REPTLEV=1
            ASSIGN    ((TOTORE+TOTOR0)/TOTORT)*100.0,FILLRATE
          ELSE
            ASSIGN    ((TOTORE+TOTOR0)/TOTLNT)*100.0,FILLRATE
          ENDIF
          ASSIGN    TOTLNT/TOTORT,AVGLINES
          ASSIGN    TOTTORD/TOTORT,AVGTOTAL
          PRINT     SP20,"Total  ",SP4,FILLRATE,SP2,TOTORT,SP2:
                    TOTLNT,SP2,TOTTORD,SP5,AVGLINES,SP2,AVGTOTAL
          ADD       ONE,CLNO
...          CALL      UND132
...          CALL      EXCP0000     * Print Exceptions for Supplier
.
          RETURN
.------------------------------------------------------------
. Print Exceptions
.------------------------------------------------------------
.EXCP0000  PACK      KEY15,SEQNSUP,SP70
.          CALL      RSEXCP1
.          CALL      RKEXCP1
.          BRANCH    OVRCD,EXCP9999
.          MATCH     SEQNSUP,EXCPSUP
.          GOTO      EXCP9999 IF NOT EQUAL
.
.          MOVE      ONE,EXCPFLAG
.          PRINT     *50,"ORDER EXCEPTIONS LIST"
.          PRINT     "Order/Line   Expected    Delivered   Days     ":
.                    "Order Qty       Recd Qty  Description    ":
.                    "                Part Number"
.          CALL      UND132
.
.          GOTO      EXCP1100
.
.EXCP1000  CALL      RKEXCP1
.          BRANCH    OVRCD,EXCP9999
.          MATCH     SEQNSUP,EXCPSUP
.          GOTO      EXCP9999 IF NOT EQUAL
.EXCP1100  PACK      KEY10,EXCPPON,EXCPITM
.          CALL      RDSIPC1
..
.          CALL      GETREC00
..
.          UNPACK    EXPDAT,CCENT,CYEAR,CMON,CDAY
.          CALL      PACDATE
.          MOVE      CPCDATE,EXPDATE
.          UNPACK    SIPCFDD,CCENT,CYEAR,CMON,CDAY
.          CALL      PACDATE
.          MOVE      CPCDATE,DELDATE
.          COMPARE   "55",CLNO
.          CALL      HEAD0000 IF NOT LESS
.          ADD       ONE,CLNO
.          MOVE      EXPDAT,CDYSFDTE   * Expected
.          MOVE      SIPCFDD,CDYSTDTE   * Delivery Date
.          CALL      CALCDAYS           * Calculate Days Between Exp/Del
.          SUB       ONE,CDYSDAYS       * Days Between
.          PRINT     EXCPPON,"/",EXCPITM,SP2,EXPDATE,SP2:
.                    DELDATE,SP1,CDYSDAYS,SIPCOQT,RECQTY,SP2,SIPCPD,SP1,SIPCPN
.          GOTO      EXCP1000
..
.EXCP9999  MOVE      ZERO,EXCPFLAG
.          RETURN
.------------------------------------------------------------
. Page Header
.------------------------------------------------------------
HEAD0000  CALL      HEAD132
          DISPLAY   *P30:24,CPAGENO
          CALL      PRAN0000
.
          MOVE      SEQNSUP,KEY5
          CALL      RDAPMA1
          MATCH     Z70,SEQNSUP
          IF        @EQUAL
             MOVE     "Grand Total",APMASN1
             MOVE     SP70,APMASN2
          ENDIF
          PRINT     *N,"Supplier : ",SEQNSUP,SP1,APMASN1,APMASN2
.          BRANCH    EXCPFLAG,HEAD1000
          CALL      UND132
          PRINT     SP20,"Period  Fill Rate %  Orders   Lines       To":
                    "tal Cost    Avg Lines         Avg Cost"
          PRINT     SP20,"                                            ":
                    "            per Order        per Order"
          CALL      UND132
          GOTO      HEAD9000
.
.HEAD1000  CALL      UND132
.          PRINT     *50,"ORDER EXCEPTIONS LIST"
.          PRINT     "Order/Line   Expected    Delivered    Days      ":
.                    "Order Qty       Recd Qty  Description    ":
.                    "                Part Number"
.          CALL      UND132
.
HEAD9000  ADD       "4",CLNO
          RETURN
.------------------------------------------------------------
. Print Ranges in Page Heading
.------------------------------------------------------------
PRAN0000  MATCH     SP70,STRCRD
          GOTO      PRAN0100 IF NOT EQUAL
          MATCH     Z70,ENDCRD
          GOTO      PRAN0190 IF EQUAL
PRAN0100  PRINT     "Supplier Code From : ",CREDFROM," to ",CREDEND
          ADD       ONE,CLNO
.
PRAN0190  MATCH     SP70,STRPGP
          GOTO      PRAN0200 IF NOT EQUAL
          MATCH     Z70,ENDPGP
          GOTO      PRAN0290 IF EQUAL
PRAN0200  PRINT     "Product Group From : ",FROMPGP," to ",TOPGP
          ADD       ONE,CLNO
.
PRAN0290  MATCH     SP70,STRDAT
          GOTO      PRAN0300 IF NOT EQUAL
          MATCH     Z70,ENDDAT
          GOTO      PRAN0390 IF EQUAL
PRAN0300  PRINT     "Date          From : ",FROMDAT," to ",TODAT
          ADD       ONE,CLNO
.
PRAN0390  MATCH     SP70,STRORI
          GOTO      PRAN0400 IF NOT EQUAL
          MATCH     Z70,ENDORI
          GOTO      PRAN0490 IF EQUAL
PRAN0400  PRINT     "Originator    From : ",FROMORI," to ",TOORI
          ADD       ONE,CLNO
PRAN0490
PRAN9999  RETURN
.------------------------------------------------------------
. Print Report
.------------------------------------------------------------
PLIN0000  MOVE      "90",CLNO
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P1:24,*EL,"Printing Report ..."
          MOVE      ZERO,CPAGENO
          MOVE      ZERO,SUPPCNT
          READ      TEMPSEQ2,Z70;;
PLIN0100  READKP    TEMPSEQ2;SEQNSUP,SEQNAMT
          GOTO      PLIN9000 IF OVER
          COMPARE   SUPPCNT,FIRSTXXX
          GOTO      PLIN9000 IF EQUAL
          ADD       ONE,SUPPCNT
.
          CALL      HEAD0000
          CALL      WRTEX200               * Export Summary
          MOVE      ZERO,TOTLNT
          MOVE      ZERO,TOTTREC
          MOVE      ZERO,TOTTORD
          MOVE      ZERO,TOTORT
          MOVE      ZERO,TOTORE
          MOVE      ZERO,TOTOR0
          MOVE      ZERO,TOTOR1
          MOVE      ZERO,TOTOR2
          MOVE      ZERO,TOTOR3
          MOVE      ZERO,TOTOR4
          MOVE      ZERO,TOTOR5
          MOVE      ZERO,TOTOR60
.
          PACK      KEY11,SEQNSUP,SP70
          CALL      RSFILL1
PLIN1000  CALL      RKFILL1
          BRANCH    OVRCD,PLIN1900
          MATCH     FILLSUP,SEQNSUP
          GOTO      PLIN1900 IF NOT EQUAL
.
.
PLIN1200  UNPACK    FILLPER,CCENT,CYEAR,CMON
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          ADD       ONE,CLNO
          ASSIGN    ((FILLLNE+FILLLN0)/FILLLNT)*100.0,FILLRATE
          ASSIGN    FILLLNT/FILLORT,AVGLINES
          ASSIGN    FILLTORD/FILLORT,AVGTOTAL
          PRINT     SP20,CMON,"/",CCENT,CYEAR,SP4,FILLRATE,SP2,FILLORT,SP2:
                    FILLLNT,SP2,FILLTORD,SP5,AVGLINES,SP2,AVGTOTAL
.
          ADD       FILLLNT,TOTLNT
          ADD       FILLTORD,TOTTORD
          ADD       FILLTREC,TOTTREC
          ADD       FILLORT,TOTORT
          ADD       FILLLNE,TOTORE
          ADD       FILLLN0,TOTOR0
          CALL      WRTEX100        * Write to Export File
          GOTO      PLIN1000
.
PLIN1900  CALL      TOTSUP00
          GOTO      PLIN0100
.
PLIN9000  CALL      TOTSUP00
          CALL      UND132
          PRINT     *30,"*** End of Report ***"
.
PLIN9999  RETURN
.------------------------------------------------------------
. Temporary File IO
.------------------------------------------------------------
RSFILL1   READ     TEMPFILL,KEY11;;
          RETURN
.
RAFILL1   MOVE     ZERO,OVRCD
          READ     TEMPFILL,KEY11;ANS
          GOTO     OVERCOND IF OVER
          RETURN
.
RDFILL1   MOVE     ZERO,OVRCD
          READ     TEMPFILL,KEY11;FILLSUP,FILLPER,FILLORT,FILLORE,FILLOR0:
                                  FILLOR1,FILLOR2,FILLOR3,FILLOR4,FILLOR5:
                                  FILLOR60,FILLOR10,FILLLNT,FILLLNE,FILLLN0:
                                  FILLLN1,FILLLN2,FILLLN3,FILLLN4,FILLLN5:
                                  FILLLN60,FILLLN10,FILLTORD,FILLTREC
          GOTO     OVERCOND IF OVER
          RETURN
.
RKFILL1   MOVE     ZERO,OVRCD
          READKS   TEMPFILL;FILLSUP,FILLPER,FILLORT,FILLORE,FILLOR0:
                            FILLOR1,FILLOR2,FILLOR3,FILLOR4,FILLOR5:
                            FILLOR60,FILLOR10,FILLLNT,FILLLNE,FILLLN0:
                            FILLLN1,FILLLN2,FILLLN3,FILLLN4,FILLLN5:
                            FILLLN60,FILLLN10,FILLTORD,FILLTREC
          GOTO     OVERCOND IF OVER
          RETURN
.
UPFILL1   UPDATE   TEMPFILL;FILLSUP,FILLPER,FILLORT,FILLORE,FILLOR0:
                            FILLOR1,FILLOR2,FILLOR3,FILLOR4,FILLOR5:
                            FILLOR60,FILLOR10,FILLLNT,FILLLNE,FILLLN0:
                            FILLLN1,FILLLN2,FILLLN3,FILLLN4,FILLLN5:
                            FILLLN60,FILLLN10,FILLTORD,FILLTREC
          CALL     SEQUPD00
          RETURN
.
WRFILL1   WRITE    TEMPFILL,KEY11;FILLSUP,FILLPER,FILLORT,FILLORE,FILLOR0:
                                  FILLOR1,FILLOR2,FILLOR3,FILLOR4,FILLOR5:
                                  FILLOR60,FILLOR10,FILLLNT,FILLLNE,FILLLN0:
                                  FILLLN1,FILLLN2,FILLLN3,FILLLN4,FILLLN5:
                                  FILLLN60,FILLLN10,FILLTORD,FILLTREC
          CALL     SEQUPD00
          RETURN
.------------------------------------------------------------
. Update Sequence File
.------------------------------------------------------------
SEQUPD00  MOVE     FILLSUP,KEY5
          READ     TEMPSEQ1,KEY5;SEQNSUP,SEQNAMT
          GOTO     SEQUPD10 IF NOT OVER
          MOVE     ZERO,F10
          MOVE     F10,SEQNAMT
          MOVE     FILLSUP,SEQNSUP
          WRITE    TEMPSEQ1,KEY5;SEQNSUP,SEQNAMT
          READ     TEMPSEQ1,KEY5;SEQNSUP,SEQNAMT
.
SEQUPD10  MOVE     SEQNAMT,F10
          BRANCH   REPTSEQ,SEQUPD20,SEQUPD30,SEQUPD40
.
SEQUPD20  ADD      FILLTORD,F10
          GOTO     SEQUPD90
.
SEQUPD30  ADD      FILLORT,F10
          GOTO     SEQUPD90
.
SEQUPD40  ADD      FILLLNT,F10
          GOTO     SEQUPD90
.
SEQUPD90  MOVE     F10,SEQNAMT
          UPDATE   TEMPSEQ1;SEQNSUP,SEQNAMT
          RETURN
.------------------------------------------------------------
. I/O for Exceptions Reporting
.------------------------------------------------------------
.RSEXCP1   READ     EXCEPTFL,KEY15;;
.          RETURN
..
.RDEXCP1   MOVE     ZERO,OVRCD
.          READ     EXCEPTFL,KEY15;EXCPSUP,EXCPPON,EXCPITM
.          GOTO     OVERCOND IF OVER
.          RETURN
.
.RKEXCP1   MOVE     ZERO,OVRCD
.          READKS   EXCEPTFL;EXCPSUP,EXCPPON,EXCPITM
.          GOTO     OVERCOND IF OVER
.          RETURN
.
.WREXCP1   WRITE    EXCEPTFL,KEY15;EXCPSUP,EXCPPON,EXCPITM
.          RETURN
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE  ONE,EXPORTYN
          GOTO     MAKEXP99 IF NOT EQUAL
.
          MOVE     "EXPRT1",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          PREP     EXPORTF1,KEY8
          WRITE    EXPORTF1,SEQ;"Supplier",TABDELM:
                               "Period",TABDELM:
                               "Fill Rate",TABDELM,"No. Orders",TABDELM:
                               "No. Lines",TABDELM,"Total Cost",TABDELM:
                               "Av. Lines per Order",TABDELM:
                               "Av. Cost per Order"
.
          MOVE     "EXPRT2",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          PREP     EXPORTF2,KEY8
          WRITE    EXPORTF2,SEQ;"Supplier";
.
          MOVE     ZERO,F3
MAKEXP10  ADD      ONE,F3
          UNPACK   PERLST[F3],CCENT,CYEAR,CMON
          WRITE    EXPORTF2,SEQ;TABDELM,CMON,"/",CCENT,CYEAR;
          COMPARE  PERCNT,F3
          GOTO     MAKEXP10 IF NOT EQUAL
          WRITE    EXPORTF2,SEQ;TABDELM,"Total"
.
MAKEXP99  RETURN
.------------------------------------------------------------
. Create Temp File for Fill Rate Stats
.------------------------------------------------------------
MKTM1000  MOVE     "TEMPF1",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     TEMPFILL,KEY8
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE    TEMPFILL,DELETE
          ENDIF
          CLEAR    KEY80
          APPEND   "isbuild ",KEY80
          APPEND   KEY8,KEY80
          APPEND   " 200 U1-5,6-11",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
          OPEN     TEMPFILL,KEY8
          RETURN
.------------------------------------------------------------
. Create Temp File for Fill Rate Exceptions
.------------------------------------------------------------
MKTM2000  MOVE     "TEMPF2",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     EXCEPTFL,KEY8
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE    EXCEPTFL,DELETE
          ENDIF
          CLEAR    KEY80
          APPEND   "isbuild ",KEY80
          APPEND   KEY8,KEY80
          APPEND   " 100 U1-5,6-12,13-15",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
          OPEN     EXCEPTFL,KEY8
          RETURN
.------------------------------------------------------------
. Create Temp File for Report Sequence
.------------------------------------------------------------
MKTM3000  MOVE     "TEMPF3",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     TEMPSEQ1,KEY8
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE    TEMPSEQ1,DELETE
          ENDIF
          CLEAR    KEY80
          APPEND   "isbuild ",KEY80
          APPEND   KEY8,KEY80
          APPEND   " 100 U1-5 U6-15,1-5",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
          OPEN     TEMPSEQ1,KEY8
          OPEN     TEMPSEQ2,KEY8
          RETURN
.--------------------------------------------------------------------------
. Execute Transfer Script eg softerm
.--------------------------------------------------------------------------
TRAN0000  COMPARE  ONE,EXPORTYN
          GOTO     TRAN9999 IF NOT EQUAL
          MOVE     YES,DEFYESNO
          CLOSE    EXPORTF1
          CLOSE    EXPORTF2
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          MOVE     "EXPRT1",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   KEY8,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          MOVE     "EXPRT2",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   KEY8,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTF1,KEY8
          CLOSE    EXPORTF1
          PREP     EXPORTF2,KEY8
          CLOSE    EXPORTF2
.
TRAN9999  RETURN
.------------------------------------------------------------
. Clear Array of Periods for Summary Export
.------------------------------------------------------------
CLRPER00  MOVE     ZERO,PERCNT
CLRPER10  ADD      ONE,PERCNT
          MOVE     SP70,PERLST[PERCNT]
          COMPARE  "120",PERCNT
          GOTO     CLRPER10 IF NOT EQUAL
.
          MOVE     ZERO,PERCNT
CLRPER99  RETURN
.------------------------------------------------------------
. Add Period to Array of Periods
.------------------------------------------------------------
ADDPER00  COMPARE  ZERO,PERCNT
          GOTO     ADDPER10 IF EQUAL
          MATCH    PERLST[PERCNT],SIPADIN
          GOTO     ADDPER99 IF EQUAL
ADDPER10  ADD      ONE,PERCNT
          IF       PERCNT>120
            MOVE      "120",PERCNT         * Only ten Years
          ENDIF
          MOVE     SIPADIN,PERLST[PERCNT]
ADDPER99  RETURN
.
.----------------------------------------------------------------------
. Enter Creditor Code Range
.----------------------------------------------------------------------
RCRED000  MOVE       "    4",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPMAA00
          BRANCH     EXIT,RCRED010,RCRED999
          MOVE       APMACRD,STRCRD
          PACK       CREDFROM,APMACRD,SP1,APMACN1
          GOTO       RCRED020
.
RCRED010  MOVE       SP70,STRCRD
          MOVE       "Start ",CREDFROM
.
RCRED020  MOVE       CREDFROM,VAR
          CALL       DISPITEM
.
RCRED030  MOVE       "    5",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPMAA00
          BRANCH     EXIT,RCRED900,RCRED999
          MOVE       APMACRD,ENDCRD
          PACK       CREDEND,APMACRD,SP1,APMACN1
          MATCH      STRCRD,ENDCRD
          GOTO       RCRED999 IF NOT LESS
.
          BEEP
          MOVE       "To Creditor Code Must Be > From Creditor Code - ",DISPMSG
          CALL       MESSAGE1
          MOVE       "    4",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       RCRED000
.
RCRED900  MOVE       "~~~~~",ENDCRD
          MOVE       "Finish ",CREDEND
.
RCRED999  MOVE       "    5",FLDID
          RETURN
.
.----------------------------------------------------------------------
. Enter Product Group Code Range
.----------------------------------------------------------------------
RPROD000  MOVE       "    6",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KSISAA00
          BRANCH     EXIT,RPROD010,RPROD999
          MOVE       SISACODE,STRPGP
          PACK       FROMPGP,SISACODE,SP1,SISADESC
          GOTO       RPROD020
.
RPROD010  MOVE       SP70,STRPGP
          MOVE       "Start ",FROMPGP
.
RPROD020  MOVE       FROMPGP,VAR
          CALL       DISPITEM
.
RPROD030  MOVE       "    7",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KSISAA00
          BRANCH     EXIT,RPROD900,RPROD999
          MOVE       SISACODE,ENDPGP
          PACK       TOPGP,SISACODE,SP1,SISADESC
          MATCH      STRPGP,ENDPGP
          GOTO       RPROD999 IF NOT LESS
.
          BEEP
          MOVE       "To Code Must Be > From Code - ",DISPMSG
          CALL       MESSAGE1
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       RPROD000
.
RPROD900  MOVE       "~~~~~",ENDPGP
          MOVE       "Finish ",TOPGP
.
RPROD999  MOVE       "    6",FLDID
          RETURN
.
.----------------------------------------
. Enter Date Range
.  where DAT     = Field ID
.        RDATE   = Call Routine Label
.        "    1" = Screen Item Number for "from" Variable
.        "    2" = Screen Item Number for "to" Variable
.
.  Return Values
.        FROMDAT  Date for Start of Range Formatted in a DIM 10
.        TODAT    Date for End of Range Formatted in a DIM 10
.        STRDAT   Date for Start of Range Format CCYYMMDD
.        ENDDAT   Date for End of Range Format CCYYMMDD
.----------------------------------------
RDATE000   MOVE     "    8",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,RDATE100
           MATCH    SP2,CDAY
           GOTO     RDATE100 IF EQUAL
           PACK     STRDAT,CCENT,CYEAR,CMON,CDAY
           REP      " 0",STRDAT
           CALL     PACDATE
           MOVE     CPCDATE,FROMDAT
           GOTO     RDATE140
RDATE100   MOVE     "Start             ",FROMDAT
           MOVE     SP70,STRDAT
.
RDATE140   MOVE     FROMDAT,VAR
           CALL     DISPITEM
.
RDATE150   MOVE     "    9",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,RDATE200
           MATCH    SP2,CDAY
           GOTO     RDATE200 IF EQUAL
           PACK     ENDDAT,CCENT,CYEAR,CMON,CDAY
           REP      " 0",ENDDAT
           CALL     PACDATE
           MOVE     CPCDATE,TODAT
           MATCH    STRDAT,ENDDAT
           GOTO     RDATE999 IF EQUAL
           GOTO     RDATE999 IF NOT LESS
           BEEP
           MOVE     "To Date Must Be > From Date - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RDATE000
.
RDATE200   MOVE     "Finish             ",TODAT
           MOVE     "99999999",ENDDAT
.
RDATE999   MOVE     "    8",FLDID
           CALL     GETPOSIT
           RETURN
.
.--------------------------------------------------
. Enter Range
.  where SIOR    = System & File for Keyin Routines
.        ORI     = Field ID
.        RORIG   = Call Routine Label
.        "    1" = Screen Item Number for "from" Variable
.        "    2" = Screen Item Number for "to" Variable
.        yyyyy.. = Description of Variable
.
.  Return Values
.        FROMORI  Code & Description for Start of Range
.        TOORI    Code & Description for End of Range
.        STRORI   Code for Start of Range
.        ENDORI   Code for End of Range
.--------------------------------------------------
RORIG000   MOVE     "   10",FLDID
           CALL     GETPOSIT
           CALL     KSIORA00
           BRANCH   EXIT,RORIG100,RORIG999
           MOVE     SIORORIG,STRORI
           PACK     FROMORI,SIORORIG,SP1,SIORNAME
           GOTO     RORIG140
RORIG100   MOVE     "Start             ",FROMORI
           MOVE     SP70,STRORI
.
RORIG140   MOVE     FROMORI,VAR
           CALL     DISPITEM
.
RORIG150   MOVE     "   11",FLDID
           CALL     GETPOSIT
           CALL     KSIORA00
           BRANCH   EXIT,RORIG200,RORIG999
           MOVE     SIORORIG,ENDORI
           PACK     TOORI,SIORORIG,SP1,SIORNAME
           MATCH    STRORI,ENDORI
           GOTO     RORIG999 IF EQUAL
           GOTO     RORIG999 IF NOT LESS
           BEEP
           MOVE     "To Code Must Be > From Code - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RORIG000
.
RORIG200   MOVE     "Finish             ",TOORI
           MOVE     Z70,ENDORI
.
RORIG999   MOVE     "   10",FLDID
           CALL     GETPOSIT
           RETURN
.
.------------------------------------------------------------
. Enter Report Level
.------------------------------------------------------------
ERLEV000   CALL      DRLEV000
           MOVE      ZERO,REPTLEV
ERLEV001   KEYIN     *PCCOL:CVERT,*V2LON,*RV,REPTLEV
           BRANCH    REPTLEV,ERLEV010,ERLEV020
           BEEP
           GOTO      ERLEV001
.
ERLEV010   MOVE      "Order",RLEVDESC
           GOTO      ERLEV999
.
ERLEV020   MOVE      "Line Item",RLEVDESC
           GOTO      ERLEV999
.
ERLEV030   MOVE      "Line Quantity",RLEVDESC
           GOTO      ERLEV999
.
ERLEV999   CALL      PUTSCR00
           RETURN
.------------------------------------------------------------
. Display Levels Available
.------------------------------------------------------------
DRLEV000   MOVE      "19",HTOP
           MOVE      "55",HLEF
           MOVE      "24",HBOT
           MOVE      "80",HRIG
           CALL      GETSCR00
.
           BOXCLR    HLEF,HTOP,HRIG,HBOT
           BOX       16,HLEF,HTOP,HRIG,HBOT
           DISPLAY   *P60:20,*V2LON,*ULON,"Report Level",*HOFF:
                     *P57:21,*V2LON,"1. ",*HOFF,"Order":
                     *P57:22,*V2LON,"2. ",*HOFF,"Line Item"
...                     *P57:23,*V2LON,"3. ",*HOFF,"Line Quantity"
           RETURN
.
.------------------------------------------------------------
. Enter Report Level
.------------------------------------------------------------
ERINC000   CALL      DRINC000
           MOVE      ZERO,REPTINC
ERINC001   KEYIN     *PCCOL:CVERT,*V2LON,*RV,REPTINC
           BRANCH    REPTINC,ERINC010,ERINC020,ERINC030,ERINC040
           BEEP
           GOTO      ERINC001
.
ERINC010   MOVE      "All Catalogs",RINCDESC
           GOTO      ERINC999
.
ERINC020   MOVE      "Stock Only",RINCDESC
           GOTO      ERINC999
.
ERINC030   MOVE      "Non Stock Only",RINCDESC
           GOTO      ERINC999
.
ERINC040   MOVE      "Non Catalog Only",RINCDESC
           GOTO      ERINC999
.
ERINC999   CALL      PUTSCR00
           RETURN
.------------------------------------------------------------
. Display Include Available
.------------------------------------------------------------
DRINC000   MOVE      "18",HTOP
           MOVE      "55",HLEF
           MOVE      "24",HBOT
           MOVE      "80",HRIG
           CALL      GETSCR00
.
           BOXCLR    HLEF,HTOP,HRIG,HBOT
           BOX       16,HLEF,HTOP,HRIG,HBOT
           DISPLAY   *P60:19,*V2LON,*ULON,"Report Include",*HOFF:
                     *P57:20,*V2LON,"1. ",*HOFF,"All Catalogs":
                     *P57:21,*V2LON,"2. ",*HOFF,"Stock Only":
                     *P57:22,*V2LON,"3. ",*HOFF,"Non Stock Only":
                     *P57:23,*V2LON,"4. ",*HOFF,"Non Catalog Only"
           RETURN
.
.------------------------------------------------------------
. Enter Report Sequence
.------------------------------------------------------------
ERSEQ000   CALL      DRSEQ000
           MOVE      ZERO,REPTSEQ
ERSEQ001   KEYIN     *PCCOL:CVERT,*V2LON,*RV,REPTSEQ
           BRANCH    REPTSEQ,ERSEQ010,ERSEQ020,ERSEQ030
           BEEP
           GOTO      ERSEQ001
.
ERSEQ010   MOVE      "Total Cost",RSEQDESC
           GOTO      ERSEQ999
.
ERSEQ020   MOVE      "No. Orders",RSEQDESC
           GOTO      ERSEQ999
.
ERSEQ030   MOVE      "No. Lines",RSEQDESC
           GOTO      ERSEQ999
.
ERSEQ999   CALL      PUTSCR00
           RETURN
.------------------------------------------------------------
. Display Sequence Available
.------------------------------------------------------------
DRSEQ000   MOVE      "19",HTOP
           MOVE      "55",HLEF
           MOVE      "24",HBOT
           MOVE      "80",HRIG
           CALL      GETSCR00
.
           BOXCLR    HLEF,HTOP,HRIG,HBOT
           BOX       16,HLEF,HTOP,HRIG,HBOT
           DISPLAY   *P60:20,*V2LON,*ULON,"Report Sequence",*HOFF:
                     *P57:21,*V2LON,"1. ",*HOFF,"Total Cost":
                     *P57:22,*V2LON,"2. ",*HOFF,"No. Orders":
                     *P57:23,*V2LON,"3. ",*HOFF,"No. Lines"
           RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSCKIKY    
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       SINCIAIO/INC
          INC       SINORIIO/INC
          INC       SINORIKY    
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
          INC       SINSUAIO/INC
          INC       SINSUAKY    
.
          INC       STDGENCD
.
