.------------------------------------------------------------
.  File          :  PMSCKIPR.PBL
.
.  Function      :  Update Keyword Index File for Contract ID Table
.
.  Parameters    :  PMCICNTR - Key to Contract ID Table
.
.  Modifications :  V10.01.00 17/12/2010  Davin        CAR 233033
.                             Created keyword update routine
.                   V10.02.01 31/03/2011  Davin        CAR 233033
.                             Added 'effective from date'
.
.  Modifications :
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Procedure to Update
.  a Key Word Index Table that can be used for searching 
.  Masterfiles. The procedure should be called from the 
.  Add, Update and Delete functions in the Masterfile 
.  Maintenance Function.
.  
.  A Key Word Index Table is Defined in the following Manner
.                              
.  PTDKxxxx    DIM       xx    * Code Field Segment 1
.  PTDKyyyy    DIM       xx    * Code Field Segment n
.  PMHKKKWD     DIM       15    * Key Word
.  PTDKSPA     DIM       10    * Spare
.
.  Index 1   PTDKxxxx, PTDKyyyy, PMHKKKWD
.  Index 2   PMHKKKWD, PTDKxxxx, PTDKyyyy
.
.  To convert this Procedure the following should be performed
.    Global Change PAT to the System ID eg :%s/PAT/PAT/g
.    Global Change CKI to the File   ID eg :%s/CKI/CKI/g
.    Global Change PTDK to the IO Call ID eg :%s/PTDK/PTDK/g
.    Modify the KEYINDEX defintion to combined Code Field Lengths eg 6
.    Global Change KEY21 to the Key for the Key Word Table eg KEY21
.    Change xxxxxxx to the Code Fields eg DCODEhh
.    Change the HCGE0000 routine to call the HCPBW000 for each
.    string of key words to be indexed for the Coded Field
.    eg MOVE    DSNAME,KEYWORDS
.       CALL    HCPBW000
.       MOVE    DGNAME,KEYWORDS
.       CALL    HCPBW000
.       MOVE    TDESC,KEYWORDS
.       CALL    HCPBW000
.------------------------------------------------------------
          DEFPROC   PMSCKIUP
.
          INC       PMSCKIFD/INC
.
KEYINDEX  DIM       6         * Code Index in Table
KEYWORDS  DIM       80        * String Containing the Key Words to be Indexed
EIGHTY    FORM      "80"
KEYWRDNO  FORM      2
KEYWRD00  DIM       80
KEYWRD01  DIM       15
KEYWRD02  DIM       15
KEYWRD03  DIM       15
KEYWRD04  DIM       15
KEYWRD05  DIM       15
KEYWRD06  DIM       15
KEYWRD07  DIM       15
KEYWRD08  DIM       15
KEYWRD09  DIM       15
KEYWRD10  DIM       15
.------------------------------------------------------------
. Generate Word Index
.------------------------------------------------------------
CIGE0000  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     PMSCKIA1,"pmsckiaf"
          TRAPCLR  IO
          BRANCH   OVRCD,CIGE9999
.
          PACK     KEYINDEX,PMCICNTR
          CALL     CIDCL000           * Remove Current Key Word Index
          BRANCH   EXIT,CIGE9999
.
          PACK     KEY6,PMCICNTR           * Validate Record on File
          CALL     RDPMCID1
          BRANCH   OVRCD,CIGE1900     * If Not then it Must be a Delete/Clear
.
          PACK     KEYINDEX,PMCICNTR
          MOVE     PMCIDESC,KEYWORDS
          CALL     CIDBW000
.
          MOVE     PMCICNTR,KEYWORDS
          CALL     CIDBW000
.
          MOVE     PMCIFDAT,KEYWORDS
          CALL     CIDBW000
.
CIGE1900  CLOSE    PMSCKIA1
.
CIGE9999  GOTO     PMSCKIEP
.------------------------------------------------------------
. Clear Current Key Words
.------------------------------------------------------------
CIDCL000  PACK     KEY21,KEYINDEX,SP70
          CALL     RSPMCKI1
          CALL     RKPMCKI1
          BRANCH   OVRCD,CIDCL999
.
          MATCH    KEYINDEX,PMCKCNTR
          GOTO     CIDCL999 IF NOT EQUAL
.
          PACK     KEY21,PMCKCNTR,PMCKKKWD,SP70
          CALL     DEPMCKI1
          GOTO     CIDCL000
.
CIDCL999  RETURN
.-------------------------------------------------
. Determine Words to Index
.-------------------------------------------------
CIDBW000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      CIDBW000 IF NOT EOS
            GOTO      CIDBW999               * entire name if blank
          ENDIF
          PACK      KEY80,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY80,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      CIDBW100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handly form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Save this Word
.
CIDBW100  MOVE      KEYWORDS,KEY15
          PACK      KEY15,KEY15,SP70
          REP       UPPLOW,KEY15             * Always Upper Case
          PACK      KEY21,KEYINDEX,KEY15
          UNPACK    KEY21,PMCKCNTR,PMCKKKWD
          CALL      RDPMCKI1
          IF        OVRCD=1
            CALL      WRPMCKI1
          ENDIF
          GOTO      CIDBW190
.
.         Check for any more words
.
CIDBW190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY80,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY80,KEYWORDS
          GOTO      CIDBW000
.
CIDBW999  RETURN
.
          INC       PMSCKIIO/INC
          INC       IBAOVRIO/INC
.
PMSCKIEP  ENDPROC                          * End of Procedure
.
