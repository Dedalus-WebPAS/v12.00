.***************************************************************************
.* System    :   Allied Health                                             *
.* Program   :   CHKLNKRF                                                  *
.* Desc      :   Checks if there are any internal linked referrals which   *
.*               are also SACS referrals (which should not be possible)    *
.***************************************************************************
.* Date      :   01/02/2007                                                *
.* Author    :   Steve Armstrong                                           *
.* Function  :   Option 1 - Allows the user to view the records where an   *
.*                          internal referral has the SACS referral flag   *
.*                          set.                                           *
.*               Option 2 - Allows the user to reset the flag on all those *
.*                          records where an internal referral has the     *
.*                          SACS referral flag set.                        *
.***************************************************************************
.*               V9.07.00  Ebon Clements  CAR 141588                       *
.*                         Fix program to repair data because the close    *
.*                         referral template was changing internal         *
.*                         referrals into sacs master referrals.           *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ALLCONFD/INC
          INC       ALLREFFD/INC
          INC       ALLRLNFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
COUNTER   FORM      8             * error count
.
PRGID     INIT      "CHKLNKRF"
PRGNAM    INIT      "Check Linked Internal Referrals"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              MAIN0000                                  *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN2000:      * proceed with enquiry
                            MAIN1000       * proceed with fixit
.
MAIN1000  CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      PROC0000               * process
          GOTO      MAIN0100
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: MAIN0000  *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"allrefaf";
          OPEN      ALLREFA1,"allrefaf"
.
          DISPLAY   *P64:24,"allrlnaf"
          OPEN      ALLRLNA2,"allrlnaf"
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: MAIN0000  *
.*                        get user options or exit                          *
.*    Returns:  EXIT    = FALSE (0)  Run option selected                    *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Enquiry":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Fixit"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run enquiry
                            OPTN9000             * run fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*           Loop through the linked referrals file and make sure            *
.*           that internal referrals are not flagged as SACS referrals       *
.*****************************************************************************
.
PROC0000  IF        COPTION = 1
            DISPLAY   *P1:4,*EF,*ULON,*V2LON:
                      *P1:4,"Department":
                      *P13:4,"Date Active":
                      *P26:4,"Visit Number":
                      *P40:4,"U/R Number"
            MOVE      FOUR,CVERT                 * initialise display row
          ELSE
            DISPLAY   *P1:24,*EL,"Processing:":
                      *P40:24,"Fixing:";
          ENDIF
.
          MOVE      ZERO,COUNTER                 * initialise error count
.
          MOVE      SP20,KEY16
          CALL      RSALRLN2                     * position at start of file
PROC0500  CALL      RKALRLN2                     * read next record
          BRANCH    OVRCD,PROC9000               * eof - finished
.
          IF        COPTION = 2
            DISPLAY   *P13:24,*V2LON,ALRLLNKV;
          ENDIF
.
.         Get the referral record for the linked referral
.
          MOVE      ALRLLNKV,KEY8
          CALL      RDALREF1                     * referral record on file ?
          BRANCH    OVRCD,PROC0500               * no - get next link record
.
          MATCH     "1",ALREUYN4                 * SACS referral ?
          GOTO      PROC0500 IF NOT EQUAL        * no - ignore record
.
          ADD       ONE,COUNTER                  * yes - increment error counter
.
          COMPARE   TWO,COPTION                  * running fixit ?
          GOTO      PROC5000 IF EQUAL            * yes
.
.         Running enquiry option so display error record details to the screen
.
          IF        CVERT = 23
            KEYIN     *P1:24,*EL,"e(",*V2LON,*DV,ANSX,*HOFF,")it or Hit <":
                      *V2LON,"ENTER",*HOFF,"> to continue":
                      *P35:24,*V2LON,ANS
            PACK      ANS,ANS,SP1
            MATCH     ANSX,ANS
            GOTO      PROC9999 IF EQUAL
.
            MOVE      FOUR,CVERT
            DISPLAY   *P1:5,*EF;
          ENDIF
          ADD       ONE,CVERT                    * increment row
          MOVE      SP10,CPCDATE
          MATCH     SP8,ALREDACT
          IF        !@EQUAL
            UNPACK    ALREDACT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
          ENDIF
          DISPLAY   *P1:CVERT,ALREDEPT:
                    *P13:CVERT,CPCDATE:
                    *P30:CVERT,ALREVISN:
                    *P42:CVERT,ALREURNO;
.
          GOTO      PROC0500                     * get next linked record
.
.         Running fixit option, so reset SACS flag to "No"
.
PROC5000  DISPLAY   *P48:24,*V2LON,ALRLLNKV;
          MOVE      ZERO,ALREUYN4                * set SACS flag to "No"
          CALL      UPALREF1                     * update record
          GOTO      PROC0500                     * get next linked record
.
PROC9000  DISPLAY   *P1:24,*EL,"Total errors: ",*V2LON,COUNTER,*HOFF,".  ";
          CALL      HITENTER
.
PROC9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       ALLREFIO/INC
          INC       ALLRLNIO/INC
