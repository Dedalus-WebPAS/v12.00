.----------------------------------------------------------------------
. Program       : EMRWEB02
.
. Function      : Emergency Details Server
.
. Modifications :
.
.----------------------------------------------------------------------
. V12.00.09 11/09/2025  Nikitha B      TSK 0965462
.           Recomplied for EMRCHMAN
. V12.00.08 01/08/2025  Thanh T        TSK 0959732
.           Changed NEWPAT00 to add DIURD000 function
. V12.00.07 01/08/2025  Thanh T        TSK 0959732
.           Changed NEWPAT00 to add DIURD000 function
. V12.00.06 23/07/2025  Ebon Clements  TSK 0964287
.           Restored open of EMRVISA3
. V12.00.05 21/07/2025  Ebon Clements  TSK 0964287
.           Open file limit of 255 reached. Closed unused open files
.           WEBSCHA2, WEBSCHA3, WEBSCHA4, EMRMTXA1, EMRVISA3 and MRTMOVA1
. V12.00.04 03.07.2025  DA Sarkies     TSK 0961623
.           Added EOS when checking for blank ADMISSNO
. V12.00.03 17/06/2025  Ebon Clements  TSK 0961998
.           Added open of PMSCCDA1 to WESIS000
. V12.00.02 16/06/2025  Ebon Clements  TSK 0937594
.           Fixed FDV related diagnosis read - FDVRL000
. V12.00.01 13/05/2025  Ebon Clements  TSK 0955096
.           Added alpanumeric visit number generation - ZUNK0000, UMAS5000
.           GENANVIS
.           14/05/2025  Davin          TSK 0955096
.           Changed for Alphanumeric Visit Numbers
. V11.05.11 09/05/2025  Ebon Clements  TSK 0960501
.           Write ED history audit for additional presenting complaint
.           text update UPDPRI00 - PRADD. Removed call to UPALIA00 from WRTHIS80
. V11.05.10 07/05/2025  Nikitha B      TSK 0959601
.           Recomplied for PATMISTM.
. V11.05.09 01/05/2025 Nikitha B       TSK 0956437
.           Stripped DTITL,DGNAME & DSNAME at LDOC2000 to remove whitespaces.
. V11.05.08 01/05/2025 Don Nguyen      TSK 0958238
.           Added tag for mandatory field check; TRSX1300
. V11.05.07 31.03.2025 DA Sarkies      TSK 0937594
.           Added tag to retrieve Sex HDP code
. V11.05.06 31.03.2025 Ebon Clements   TSK 0937594
.           Fixed FDV audit write - UPEM0000 - UPDFIELD 19
. V11.05.05 06.03.2025  DA Sarkies     TSK 0955909
.           Added code to retrieve and record NDIS number in watespaf 
. V11.05.04 19/02/2025  Davin          TSK 0954821
.           Set location and reason for undischarge before hl7 A13 (UNDS0000)
. V11.05.03 05.12.2024  DA Sarkies     TSK 0951086
.           Increased size of LOS from 3 to 4
. V11.05.02 21.11.2024  Ebon Clements  TSK 0953786
.           Added identifying gender to ESIS patient details watespaf
. V11.05.01 18.11.2024 DA Sarkies      TSK 0937594
.           Added subroutine to determine whether diagnosis is FDV related
.           and report to front end.
. V11.04.33 31.03.2025 DA Sarkies      TSK 0937594
.           Added tag to retrieve Sex HDP code
. V11.04.32 31.03.2025 Ebon Clements   TSK 0937594
.           Fixed FDV audit write - UPEM0000 - UPDFIELD 19
. V11.04.31 19/02/2025  Davin          TSK 0954821
.           Set location and reason for undischarge before hl7 A13 (UNDS0000)
. V11.04.30 21.11.2024  Ebon Clements  TSK 0953786
.           Added identifying gender to ESIS patient details watespaf
. V11.04.29 18.11.2024 DA Sarkies      TSK 0937594
.           Added subroutine to determine whether diagnosis is FDV related
.           and report to front end.
. V11.04.28 13.11.2024 DA Sarkies      TSK 0937594 
.           Added code to add FDV Audit note for adding emergency record
.           Added coe to add userid where not retrieved from front page
. V11.04.27 11.11.2024 Ebon Clements   TSK 0951979 
.           Remove discharge history record if mandatory fields for
.           discharge are outstanding - DISC9300
. V11.04.26 11.11.2024 DA Sarkies      TSK 0937594 
.           Added FDV update to the audit file for emergency attendance 
.           19 in EMCHUPTY
. V11.04.25 08/11/2024 PJ Le Febour    TSK 0950014b
.           corrected test when PMEXCLAM UPDated clear pmsextaf.PMEXICOD
. V11.04.24 07/11/2024 PJ Le Febour    TSK 0950014a
.           when PMEXCLAM updated and PMEXT049=1 clear pmsextaf.PMEXICOD
. V11.04.23 28/10/2024 PJ Le Febour    TSK 0950014
.           SAVVCOMP new variable to determine when PMEXCLAM updated
.           if amended UPD existing row pmsextaf and NOT insert a new row
. V11.04.22 10/10/2024 Ebon Clements   TSK 0944150
.           Added discharged incomplete departure status test to prevent
.           second discharge - DISC0000 SJOGSUMD
. V11.04.21 23/09/2024 J.Tan           TSK 0950577
.           Recompiled for PATIPERH - Fixed issue with Hold Invoice audit
. V11.04.20 02/09/2024  Bella Turco     TSK 0911922
.           Added Pref Surname to alias functionality UPALIA00
. V11.04.19 20/08/2024 Bella Turco     TSK 0911922
.           Added routine for writing a new alias for Preferred Name UPALIA00
. V11.04.18 13/08/2024 Peter Vela      TSK 0939978
.           Fixed multihospital display in TRSR2500 for 004 Suburb, 005 State
. V11.04.17 29/07/2024 Peter Vela      TSK 0939978
.           Fixed Discharge Summary Version Number incrmement in MISC0560
. V11.04.16 18.07.2024 DA Sarkies      TSK 0939978
.           Changed code to retrieve version number and add one to it
.           or display one, if no version number found.
. V11.04.15 10.07.2024 DA Sarkies      TSK 0939978
.           Added kube to clear the VISNOTES string
. V11.04.14 04.07.2024 DA Sarkies      TSK 0939978
.           Fixed tag displaying private practive items to read correctly
. V11.04.13 27.06.2024 DA Sarkies      TSK 0939978
.           Added check to hospital address field to check if state is blank
. V11.04.12 26.06.2024 DA Sarkies      TSK 0948535
.           Recompiled for PATMSXTM
. V11.04.11 26.06.2024 DA Sarkies      TSK 0939978
.           Removed the span from the tags producing principal diagnosis    
. V11.04.10 05.06.2024 DA Sarkies      TSK 0939978
.           Changed spelling on principal, added new variable so that Admiss
.           progress comes out without date & author. Removed Principal diag
.           title. Added code to select correct long description
 .V11.04.09 05.06.2024 DA Sarkies      TSK 0939978
.           Added word-wrap style to reaction comments 
 .V11.04.08 29.05.2024 DA Sarkies      TSK 0939978
.           Changed styling for Alert/Allergies spans
 .V11.04.07 28.05.2024 DA Sarkies      TSK 0939978
.           Recompiled for PATMSXTM
 .V11.04.06 07/05/2024 Ebon Clements   TSK 0945947
.           Save and restore update type when writing move location
.           history record. UPEM0000 - SAVUPDTY
.           06/05/2024  Thanh T       TSK 0941543
.           Recompiled as PMSPX2TM changes          
. V11.04.05 30/04/2024 Bella Turco     TSK 0943738
.           Demographics Last Updated fields are now updated even when
.           Confirmed Demographics Date is blank (STVIS500)
. V11.04.04 15/04/2024 Thanh T         TSK 0931173
.           Added MAIN3700/UPDPRI00 
. V11.04.03 14.03.2024 DA Sarkies      TSK 0939978
.           Added sections to display details on a discharge summary
. V11.04.02 14.03.2024  Jacob Jackson  TSK 0914658
.           Ensure that PMEXUYN1 can only be updated with values of "0" 
.           (No) or "1" (Yes)
.           Add update for PMEXUYN1 for ED registration
. V11.04.01 20.02.2024  PJ Le Febour   TSK 0929044d
.           SETOEW00 update WBOCCUID with USERID 
.           update WBOCUUID WBOCUDTE WBOCUTIM before call WRWBOEC1
. V11.03.24 14.03.2024 Jacob Jackson   TSK 0914658
.           Add this validation to all cases of PMEXUYN1 being updated
. V11.03.23 14.03.2024 Jacob Jackson   TSK 0914658
.           Add validation to ensure PMEXUYN1 can only be updated with
.           values of "0" (No) or "1" (Yes)
. V11.03.22 14.03.2024 DA Sarkies      TSK 0939978
.           Added sections to display details on a discharge summary
. V11.03.21 13/03/2024 Jacob Jackson   TSK 0914658
.           Add clear of PMSEXTFD
. V11.03.20 15/02/2024 Jacob Jackson   TSK 0914658
.           Add update for PMEXUYN1 for ED registration
. V11.03.19 11/01/2024 Ebon Clements   TSK 0941629
.           Recompiled for WEBPRTCD - Inactive printers
. V11.03.18 14.11.2023  DA Sarkies     TSK 0931559
.           Added section to display preferred contact details on EMR 
.           discharge letter
. V11.03.17 06/11/2023  Jacob Jackson  TSK 0914658
.           Ensure claim details are correctly read
. V11.03.16 30/10/2023  Ebon Clements  TSK 0888745
.           Write EDWARD ED visit update trigger on for ED location 
.           managment add update and delete.
. V11.03.15 27/10/2023  Ebon Clements  TSK 0888745
.           Update current ED location after add/update/delete location
.           via location management - LOCMGA00, LOCMGU00, LOCMGD00
. V11.03.14 27/10/2023  Jacob Jackson  TSK 0914658
.           Populate MISC0360 tag with new value that calls PMEX0000 
. V11.03.13 18/10/2023  DA Sarkies     TSK 0935493
.           Added check to update demographic audit if Demographic Comfirmed
.           is populated with a date
. V11.03.12 17/10/2023  Ebon Clements  TSK 0888745
.           Populate EMRHISFD created by fields - WRTHIS00 WDHIST00
. V11.03.11 04/10/2023  Ebon Clements  TASK 0888745
.           Added ED location managment add update and delete - LOCMGA00
.           LOCMGU00 and LOCMGD00
.           11/10/2023 Thanh T         TSK 0935874
.           Changed UMAS7000, DISC7200 to comment out the codes for
.           PTCNUNET = '1 since it is no longer used 
. V11.03.10 04/10/2023  J.Tan          TASK 0938230
.           Recompiled for ABFAECCL - Emergency ABF
. V11.03.09 23/08/2023  Ebon Clements  TASK 0888745
.           Added clear of EMRHISFD created/update by fields - WRTHIS00 WDHIST00
.           Added report 26 - ED Location management - LOCMGT00
.           Added update icon to loction management - LOCMAN00
. V11.03.08 23/08/2023  Nikitha B      TASK 0930228
.           Added TRSX0900 and TRSX01000 new tags for reason for deletion-
.           Category EC and comments for deletion of ED Visits. 
.           Created CLEMRDLA.PBL - Clear routine for EMRDLAFD.PBL
. V11.03.07 18/08/2023  J.Tan          TASK 0935226
.           Set PMMRARDT to discharged date instead of Current date
. V11.03.06 26/07/2023  Bella Turco    TSK 0926218
.           Added check for different Demographics Confirmed Date time and 
.           userID before writing to pmsdauaf in SJGAU240
. V11.03.05 17/07/2023  Alina Bhari    TSK 0934280
.           displayed occupational group code instead of description for note
.           for this attendance field -DISNOT00                              
. V11.03.04 17/05/2023  Ebon Clements  TSK 0932616
.           Recompiled for PMSPX2TM - Current IP
. V11.03.03 12.05.2023  DA Sarkies     TSK 0928369
.           Added check to determine whether NDIS Card present and validity
. V11.03.02 11.04.2023  DA Sarkies     TSK 0927930
.           Added checks to prevent double update of management comments
. V11.03.01 04/04/2023  Ebon Clements  TSK 0888745
. V11.02.24 06.04.2023  DA Sarkies     TSK 0927930
.           Added checks to prevent double update of management comments
. V11.02.23 27/10/2022  Ebon Clements  TSK 0924802
.           Added EDWARD Indigenous status change trigger - CHEDW000
. V11.02.22 30/09/2022  Ebon Clements  TSK 0900069
.           Recompiled for EMRVISTM - Claim code selection list indicators
. V11.02.21 28/09/2022  Davin          TSK 0919110
.           Recompiled for DISPVISN - Added NOTEDETL=2 (Display Visit Notes tag)
. V11.02.20 05/09/2022  Thanh T         TSK 0907640
.           Changed ADEX0000 to show error when expected patient is added
.           to another site when Allow a current ED Patient to be a new
.           Expected Patient at another ED Site parameter is not ticked 
. V11.02.19 05/09/2022  Ebon Clements   TSK 0922654
.           Recompiled for VISCMTCD
. V11.02.18 17/08/2022  Thanh T         TSK 0907640
.            Added ADEXCV00 and MISC0440 for expected patient functionality 
. V11.02.17 26/07/2022  Thanh T         TSK 0907640
.           Changed ADEX0000 to check if the patient is allowed to be 
.           added to another emergency site 
. V11.02.16 18/07/2022 Jacob Jackson   TSK 0922155
.           Recompiled for UPDUR and WRTUR
. V11.02.15 18/07/2022 J.Tan           TSK 0906596
.           Mods for Claim code Indic2=N (NWAUFLAG)
. V11.02.14 14/07/2022  Thanh T         TSK 0907640
.           Added ADEXCV00 for expected patient functionality 
. V11.02.13 13/07/2022  Thanh T         TSK 0907640
.           Added EXPTCH00 for expected patient functionality
. V11.02.12 19/05/2022  Ebon Clements   TSK 0920058
.           Open file limit of 255 reached. Closed unused open files
.           PATGSRN2, PATGSRN3, PATGSRN4, MEHHLSA1, MEHCJAA1 and MEHLEGA1
. V11.02.11 29/06/2022 J.Tan           TSK 0920712
.           Recompiled for ABFAECCL - I*D on emrvcdaf file
. V11.02.10 28/06/2022  Thanh T        TSK 0907700
.           Added TRSX0800 for family violence related tag 
. V11.02.09 21/06/2022 Ebon Clements   TSK 0920224
.           Changed CHODC000 to use EMVIUD09/EMVIUT09 instead of
.           EMVIUD10/EMVIUT10 if not using EDWARD - PTCNNSSI - (SJOG)
. V11.02.08 31/04/2022 J.Tan           TSK 0915626
.           Recompiled for AAECHRG - check if ABF Invoice has been raised
. V11.02.07 19/05/2022  Ebon Clements   TSK 0920058
.           Open file limit of 255 reached. Closed unused open files
.           MLTCODA2, EMRDOCA2, EMRTHSA2, EMRVDGA1, PATWR1A3
.           COMDEPA1 and DISPATA2
. V11.02.06 19/05/2022 J.Tan           TSK 0837128
.           Recompiled for PRFAINSR - to use Cat CL indic 24
. V11.02.05 26/04/2022 J.Tan           TSK 0837128
.           Mod Default PRFA based on Claim type (PRFAINSR)
. V11.02.04 21/04/2022  J.Tan           TSK 0916690
.           Mod to update delete flag for AECC class (DAEC0000)
. V11.02.03 13/04/2022 Thanh T         TSK 0903453
.           Added WAUDT800 to write out death audit table for type 008
. V11.02.02 01/03/2022  Alina Bhari   TSK 0900613
.           Recompiled for PATMASTM
.           Aboriginality Icon dislayed on Patient Banner if INDC 3=D
. V11.02.01 09/02/2022  Thanh T       TSK 0905641
.           Recompiled as OUTMA1FD (PATMASTM) changes
. V11.01.20 22/12/2021  Thanh T         TSK 0877055
.           Changed SJGAU200  for demographic confirm PMI enhancement
. V11.01.19 08/12/2021  Thanh T         TSK 0877055
.           Changed SJGAU200  for demographic confirm PMI enhancement
. V11.01.18 08/11/2021 J.Tan           TSK 0880410
.           Recompiled for PATIPERH - added Hospital and System
. V11.01.17 17/11/2021  J.Tan          TSK 0913621
.           Recompiled for ABFAEINV - Mod for Multiple NEP Values
. V11.01.16 05/11/2021 Ebon Clements   TSK 0888259
.           Changed EMVIS093 to a DIM and to use a Z70 test - EMVIYN03
. V11.01.15 28/10/2021 J.Tan           TSK 0913056
.           Recompiled for ABFAECCL-ADMFLAG and CCAR0000(Clinical Care)
. V11.01.14 13/10/2021 J.Tan    TSK 0905305
.           Recompiled for ABFAECCL - Adjustment type 068 & 069
. V11.01.13 15/09/2021  Thanh T         TSK 0889595
.           Changed SJGAU200 to add Alias status field PMDEFL08   
. V11.01.12 09/08/2021  J.Tan           TSK 0905305
.           Recompiled for AAECHRG/ABFAEINV - AE Care class for 2021/2022
. V11.01.11 17/08/2021  Ebon Clements   TSK 0908587
.           Added screen refresh edit to the summary screen post to make 
.           sure it's not trying to remove discharge details - CHKDS000
. V11.01.10 11/08/2021  Thanh T         TSK 0873184
.           Initialize EMVIS096 field by Z70 instead of ZERO to fix
.           issue with EMVIYN06 rest to zero.
. V11.01.09 06/08/2021  Thanh T         TSK 0873184
.           Changed OTDHIS10 to select EMHIUPT = 'OTDOC'
.                   DOCHIS10 to select EMHIUPT = 'ALDOC'              
.                   NURHIS10 to select EMHIUPT = 'ALNUR'  
. V11.01.08 21/07/2021  Ebon Clements   TSK 0905585
.           When defaulting the latest visit number only select
.           ED visits from the users current ED site - CHKADM92
. V11.01.07 08/07/2021  J.Tan           TSK 0897953
.           Removed UPDHFUND functionality, Health fund details tags
. V11.01.06 17/06/2021  Thanh T         TSK 0873184
.           Changed check for PTCNNSSI with 20 zeros as well as spaces
. V11.01.05 21/05/2021  Thanh T        TSK 0873184
.           Added EMVIS179 to EMVIS182 for EMRVISTM changes
. V11.01.04 14/05/2021  Thanh T        TSK 0886023
.           Changed CHODC000 to use EMVIUD10/EMVIUT10 instead of 
.           EMVIUD09/EMVIUT09    
. V11.01.03 26/04/2021  Ebon Clements  TSK 0898349
.           Added gender validation when updating pmi detail - VLSEX000
. V11.01.02 29/03/2021  Davin          TSK 0903436
.           Validate location before triggering HL7 undischarge (UNDS1000)
. V11.01.01 10/03/2021  Ebon Clements  TSK 0903065
.           Read the expected patient file instead of an RA prior to
.           the update in UPDEMX00 (ZUNK0000 and UMAS0000) was creating I * U
. V11.00.26 12/01/2021  Ebon Clements  TSK 0901440
.           Fixed deposit file read comdepaf index 2 key size - KEY26
. V11.00.25 09/12/2020  J.Tan          Task 0900292
.           Fixed PRFA for Defence force
.           09/12/2020  Thanh T        TSK 0872840
.           Added PMSCCDFD/PMSCCDIO as PMSPX2TM changes
. V11.00.24 30/11/2020  Jill Parkinson Task 0898168
.           Added MISC0410 for expected patient gender output
. V11.00.23 02/11/2020  Thanh T        TSK 0878747
.           Added MISC0390 and MISC0400 for multiple birth
. V11.00.22 02/11/2020  Thanh T        TSK 0878747
.           Added MISC0390 and MISC0400 for multiple birth
. V11.00.21 21/10/2020  Ebon Clements   TSK 0886441
.           Added medical history without created by details tag - TRSX0700
. V11.00.20 22/10/2020  J.Tan           TSK 0898866
.           Recompiled for PATIPERH - on hold invoice(Contract for Eff.Adm.from)
. V11.00.19 08/10/2020  Ebon Clements   TSK 0898282
.           Recompiled for EMRVISTM - Hospital specific claim code list
.           Recompiled for PATMASTM - Logged in hospital Id
.           Recompiled for PATMSXTM - Logged in hospital Id
. V11.00.18 01/10/2020  Ebon Clements   TSK 0867112
.           Changed cross consult list to display the speciality - CRCL0000
. V11.00.17 01/10/2020  Ebon Clements   TSK 0867112
.           Added Referred to Consultant Unit to CCNTEMP1
. V11.00.16 01/10/2020  Ebon Clements   TSK 0867112
.           Changed consult list to use a temp file to sort by date time.
.           Added index 2 to CCNTEMP2 and changed it's layout
. V11.00.15 21/09/2020  Tracey Nguyen   TSK 0897531
.           Validated for @EOS when checking UPDHFUND flag
. V11.00.14 08/09/2020  Ebon Clements   TSK 0867112
.           Recompiled for EMRVISTM
. V11.00.13 28/08/2020  Peter Vela      TSK 0895969
.           Added WebServices OECW 
. V11.00.12 30/06/2020  Tracey Nguyen   TSK 0886178
.           Added UPDHFUND functionality, new Health fund details tags
.           MISC0360,MISC0370    
. V11.00.11 29/06/2020  J.Tan           TSK 0893767
.           Recompiled for ABFAEINV - Changed CALCFLAG to 01/01/2021
. V11.00.10 23/06/2020  Peter Vela     Task 0878550
.           Validate for blank previous value for MyHR Consent in SJGAU200
. V11.00.09 20/04/2020 J.Tan           TSK 0890733
.           Recompiled for ABFAEINV - ABF new 2020 calculation
. V11.00.08  10/06/2020  Peter Vela        TSK 0878550
.            Added MyHR Consent to PMI Audit 
. V11.00.07  06/05/2020  Ebon Clements     TSK 0891235
.            Delete medical record link when cancelling a visit - DELE1900
. V11.00.06  06/05/2020  Thanh T           TSK 0876574
.            Recompiled for PMSCEXTM/PMSCEXTD changes
. V11.00.05 22/04/2020  Ebon Clements     TSK 0850105    
.           Clear PMCUTSTA and PMCUTLOC before write to pmscuraf  
. V11.00.04 09/04/2020  J.Tan             TSK 0868813
.           Mod to set PACFRMT to 3 for PKNAME
. V11.00.03  06/04/2020  Ebon Clements  TSK 0889617
.            Added LABELTY3, LBLPRIN3 & NOLABEL3 to CLRPAR00
. V11.00.02 31/03/2020  J.Tan            TSK 0868813
.           Changed PKNAME from DIM30 to DIM 80
. V11.00.01  24/02/2020  J.Tan          TSK 0838262
.            Added Effective from and to date to MBS Item file
. V10.15.03  13/02/2020  J.Tan          Task 0888319
.            Mod to call CHGAE000 at the end of process
. V10.15.02  24/01/2019  Peter Vela       TSK 0878227
.            Added tag for linked current admission date/time
.            28/01/2019  J.Tan            TSK 0857392
.            Added FNAMEP for ABF
. V10.15.01  16/01/2020  Ebon Clements    TSK 0885191
.            Added save of previous GP detail vars SAVEPHCP,SAVEPRAC & SAVEPCTR
.            UMAS0000 ALLEX0000
. V10.14.35  25/09/2019  Peter Vela      TSK 0875296
.            Added tag for existing OEC 
. V10.14.34  20/09/2019  J.Tan           TSK 0857392
.            Mod Deleting ABF visit to delete inv.pending
. V10.14.33  19/09/2019  Peter  Vela     TSK 0875296
.            Added tag for Cat el User defined field 4
. V10.14.32  16/09/2019  Thanh T         TSK 0880390
.            Changed NXTV0000 to select only visits with emergency site
.            the same as the user log on emergency site 
. V10.14.31  11/09/2019  Richa Phogat    TSK 0880277
.            Recompiled for EMRVISTM
. V10.14.30  03/09/2019  J.Tan           TSK 0857392
.            Mod for ABF charge
. V10.14.29  30/08/2019  Peter Vela      TSK 0875296
.            Added Eclipse OEC Emergency
.            30/08/2019  Jill Parkinson Task 0880287
.            Added Eclipse OEC Emergency
. V10.14.28  28/08/2019  Ebon Clements   TSK 0880096
.            Added indicatior 6 "A"ssessor test to mandatory field 169 mandatory
.            diagnosis test -  CHKDOC00 CHKNUR00 CHKPSC00
.            27/08/2019  J.Tan           TSK 0857392
.            Recompiled for AAECHRG - ABF invoice
. V10.14.27  16/08/2019  Jill Parkinson  TSK 0878505
.            Added writes of ambulance changes for Inpatient edward
. V10.14.26  14/08/2019  Thanh T.        TSK 0878422
.            Recompiled for MEHHLSTM changes
. V10.14.25  06/08/2019  Richa Phogat    TSK 0873017
.            Added DELRC000 under DELE0000 to update/delete record from 
.            patwc1af & pmswx1af when an EMR visit is deleted
. V10.14.24  05/08/2019  J.Tan           TSK 0857392
.            Recompiled for ABF invoice
. V10.14.23  29/07/2019  Peter Vela     TSK 0877614
.            Added some more Telehealth validation rules in CHKMAN00 CHKDOC00
.            CHKNUR00 CHKPSC00
. V10.14.22  25/07/2019  Ebon Clements  TSK 0878652
.            Added trap to patvisaf write for double clicks when
.            allocating an existing U/R to a visit - ALLEX000
. V10.14.21  09/07/2019  Peter Vela     TSK 0877978
.            Added traps around WRVSCMT1 calls
. V10.14.20  01/07/2019  Ebon Clements  TSK 0876030
.            Fixed EDWARD mbulance changes write - WINP0000
. V10.14.19  27/06/2019  Peter Vela     TSK 0875925
.            Added validation for telehealth in CHKMAN00 CHKDOC00 CHKNUR00
.            CHKPSC00
. V10.14.18  26/06/2019  Tracey Nguyen  TSK 0852803
.            Added LABELTY3,LBLPRIN3,NOLABEL3
. V10.14.17  13/06/2019  Peter Vela     TSK 0871798
.            Added PTCNEMPL validation to SAVEUSR7
. V10.14.16  13/06/2019  Peter Vela    Task 0871667
.            Changed error messages to say Amb Destination in
.            DATEVL10 DATEVL11
. V10.14.15  31/05/2019  Peter Vela    TSK 0871667
.            Added inactive validation at MISC0320
. V10.14.14  31/05/2019  Thanh T.      TSK 0870996
.            Changed DITB0000 to setup the changed values for update 
.            type 9 and 13.
. V10.14.13  15/05/2019  Peter Vela    TSK 0871667
.            Added tag for default service type for vemd private facilities
.            14/05/2019  Davin         TSK 0821139
.            Added tag for emr site/hospital output (MISC0310)
. V10.14.12  01/05/2019  Don Nguyen    TSK 0868834
.            Modified Mandatory Field check (CHKMAN00) to include validations
.            for Diagnosis (Code 169) where Discharge Status has Indc3=N.
.            Re-worked code for Procedures/Diagnosis validation (VICD0000).
. V10.14.11  30/04/2019  Richa Phogat  TSK 0869550
.            Added ACCAUDCK
.            30/04/2019  Don Nguyen    TSK 0833548
.            Added new tag (MISC0300) - Site Stationery Template for ED
.            Discharge Summary.
. V10.14.10  29/04/2019  Don Nguyen    TSK 0868834
.            Fixed report processing code to proceed with reading the
.            Transfer Destination file when Using Mental Health system (MHCNUSE)
.            and the visit is not a Mental Health one (PROC9800).
. V10.14.09  18/04/2019  Ebon Clements TSK 0868834
.            Fixed mandatory diagnosis test 169 - CHKMAN00
. V10.14.08  16/04/2019  Don Nguyen    TSK 0821139
.            Modified Undischarge code (UNDS0000) to set all Telehealth records'
.            Status value to '4' - Exited ETS.
.            Added Telehealth locations to the Expected Patient Triage Location 
.            selection list (TRLC0000).
.            Recompiled for changes to EMRTHSCD - modified Telehealth Add/Update
.            code (AUTS0000) to cater for new Status value '4' - Exited ETS.
.            09/04/2019  Tracey Nguyen TSK  0871443
.            Recompiled for PATATRTD/PATATRTM
. V10.14.07  01/04/2019  Ebon Clements  TSK  0869562
.            Added only display available locations functionality - EMCNLODD = 2
. V10.14.06  13/03/2019  Ebon Clements  TSK  0868834
.            VEMD 2019 - Added EMVIVSTY and EMVIVPLC
.            Telehealth mandatory field departure status changes
.            22/03/2019  Richa Phogat   TSK 0869550
.            Added ACCAUDFD/IO, CLACCAUD, MVACCREM
. V10.14.05  04/03/2019  Ebon Clements  Task 0871097
.            Added EDWARD presenting complaint change trigger - WEDP0000
. V10.14.04  27/02/2019  Don Nguyen     TSK 0821139
.            Added code to Add/Update a 'Telehealth Service' record (AUTS0000)
.            when the patient location is updated (UMAS0000,UPEM0000,PATLOC00).
.            Modified Location occupied validation code (VALLOC00 & UPDLOC00)
.            to also ignore 'Telehealth Service' room type.
.            Recompiled for EMRVISTM - Modified Location selection list code
.            25/02/2019  Jill Parkinson Task 0870828
.            Fixed call to WINP0000 so ambulance changes write to edward table
.            18/02/2019  Thanh T.       TSK 0821139
.            Changed DISC7000/UNDS0000/DELE7000 to update the status of 
.            existing Telehealth Services record (emrthsaf) for discharge ("2"),
.            undischarge ("1") or cancelled ("3")
.            Changed ZUNK00000 to Add codes to call AUTS0000 to insert the new
.            'Telehealth Service' record when location within the site is ETS
.            Added CHKETS00 to Check if the site/location is ETS, then setup 
.            site and location to site and location
. V10.14.03  13/02/2019  Ebon Clements  TSK 0862664
.            Added Meth. related diagnosis tag - METHD000
. V10.14.02  12/02/2019  Ebon Clements  TSK 0862664
.            Recompiled for VISCODTM
. V10.14.01  11/02/2019  Ebon Clements  TSK 0866794
.            Set nurse complete details to no if MANDINUR is yes - DISC1005
.            08/02/2019  Don Nguyen     TSK 0833548
.            Added new tags for Discharge Text (MISC0210-MISC0220) & DISPVISN.
.            07/02/2019  Ebon Clements  TSK 0866794
.            Perform mandatory ambulance handover test 176 and 177 for vic
.            departures 10 & 11 - left after advice and did not wait - CHKMAN00
. V10.13.19  08/01/2019  Ebon Clements  TSK 0866794
.            Removed V10.12.35 changes. It should always report missing
.            mandatory fields on discharge.
.            Perform mandatory ambulance handover test 176 and 177 for all vic
.            departures - CHKMAN00
. V10.13.18  07/01/2019  Jill Parkinson Task 0867688
.            Added write to pmsadwaf when ambulance number is changed
. V10.13.17  11/12/2018  Thanh T        TSK 0866795
.            Changed CHKMAN60 to not write out error message when
.            EMWFMND NOT = '1' (Mandatory for transaction = 'Discharge') and
.            FORMACTN = 'D ' or 'D2'
. V10.13.16  04/12/2018  Don Nguyen     TSK 0866947
.            Updated Date Validation error messaging (DATEVL00) with HEAEDFLG
. V10.13.15  28/11/2018  Ebon Clements  TSK 0865961
.            Added EDWARD visit alteration write to all remote scripts WEDV0000
. V10.13.14  20/11/2018  Peter Vela     TSK 0845218
.            Added validation for SJOG PMI Audit for emrweb0202002.html
. V10.13.13  08/11/2018  Tracey Nguyen  TSK 0863870
.            Added trap to write to emr history file (emrhisaf) and
.            added SP70 when packing into KEY22 - WDHIST80
. V10.13.12  07/11/2018  Don Nguyen      TSK 0853817
.            Moved Workers Comp. multiple claims check into include (CHKWCCLM)
. V10.13.11  24/10/2018  Steve Armstrong TSK 0863512
.            Recompiled for changes to DGCLICUD, DGCLICCE & DGCLICAE.
.            Also added read of pmsvx1af prior to above DGCLI.. calls
.            where it was previously missing.
. V10.13.10  23/10/2018  Don Nguyen      TSK 0865091
.            Added new Location tag for default Waiting Room code (MISC0200)
.            17/10/2018  Don Nguyen      TSK 0838558
.            Deleted temp file (VSCTTFIL) after processing.
. V10.13.09  26/09/2018  Ebon Clements   TSK 0863783
.            Added PMSVX128 and PMSVX129 cgi vars
. V10.13.08  21/09/2018  Don Nguyen      TSK 0853817
.            Modified DEWCOM00 (Delete Workers comp. details) to only set
.            Claim Status to Cancelled for NZ, instead of deleting the record.
. V10.13.07  13/09/2018  Ebon Clements    TSK 0816770
.            Write EDWARD alteration record to presenting complaint update
.            PRECOM00
. V10.13.06  05/09/2018  Peter Vela       TSK 0859742
.            Added Eclipse Store and Forward functionality
.            Added EMVIREFP EMVIREPM EMVIREDT
. V10.13.05  23/08/2018  Richa Phogat     TSJ 0860241
.            Added MHRI0000 to update current/future episode with new PMI level
.            My HR Consent value
. V10.13.04  16/08/2018  Richa Phogat   TSK 0851999
.            Recompiled for PMSPX2TM
. V10.13.03  13/08/2018  Peter Vela     Task 0845218
.            Fixed PMI Audit to include new contacts
.            Added update previous address to UMAS0000
.            15/08/2018  Tracey Nguyen  TASK 0852969
.            Recompiled for MEHHLSTM
. V10.13.02  08/08/2018  Peter Vela     Task 0852438
.            Recompiled for WEBEMRVR
. V10.13.01  02/08/2018  Peter Vela     Task 0860396
.            Added RA reads before the writes to viscmt in EMCMN000 EMCMD000
. V10.12.19  18/07/2018  Peter Vela     Task 0860108
.            Added validaton for Indicator 3 = N  against Diagnosis in 
.            CHKMAN00, CHKDOC00, CHKNUR00, CHKPSC00
. V10.12.18  18/07/2018  Jill Parkinson Task 0860345
.            Added call to CLEMRVIS in CLRPAR00 to stop using previous EMVISITE
. V10.12.17  17/07/2018  Ebon Clements    TSK 0849291
.            Only populate death notification if blank - DTHN0000
.            12/07/2018  Peter Vela       TSK 0845218
.            Added PMI Audit functionality for SJOG
. V10.12.16  03/07/2018  Ebon Clements  TSK 0859521   
.            Exit GTASGC00 if post code is blank
. V10.12.15  14/06/2018  Ebon Clements  TSK 0855359   
.            Added EMVIS172 and EMVIS173 - MH practitioner seen date/time
. V10.12.14  31/05/2018  Jill Parkinson TSK 0857884   
.            Moved "move one, exit" to be after WEBERR00 in VERUSR00
.            Moved "move two, exit" to be after WEBERR00 in LOCK9600
. V10.12.13  14/05/2018  Jill Parkinson TSK 0854624   
.            Added check for Victoria before calling CLAIMN00 (same as patweb89)
. V10.12.12  13/04/2018  Peter Vela      TSK 0835644
.            Added missing goto in MANF0000 to prevent duplicate error messages
. V10.12.11  09/04/2018  Peter Vela      TSK 0835644
.            Added new business rules around CHKMAN00 to validate
.            Ambulance Handover Date and Time for Vic VEMD
. V10.12.10  29/03/2018  Ebon Clements    TSK 0848319
.            Fixed EDWARD visit alteration file key pack - WEDV0000
. V10.12.09  20/03/2018  Ebon Clements    TSK 0848319
.            Added EDWARD visit alteration file write to un discharge - WEDV0000
. V10.12.08  20/03/2018  Ebon Clements    TSK 0848319
.            Added EDWARD visit alteration file write to discharge - WEDV0000
. V10.12.07  16/03/2018  Tracey Nguyen    TSK 0851888
.            Modified UPDLOC00 to check if the maximum number of patients
.            has reached for the selected location to be updated for the visit
. V10.12.06  27/02/2018  Thanh T.         TSK 0851142
.            Fixed duplicate key error when writing out vismdtaf/vismtxaf.
.            Changed ADDNOT00.
. V10.12.05  19/02/2018  Ebon Clements    TSK 0851366
.            Removed V10.11.22 changes - read of websec by username - WRTHIS40
.            Changed ACCESSAL to a DIM 80
. V10.12.04  15/02/2018  Ania P           TSK 0851366
.            Changed ACCESSAL from DIM 10 to DIM 256 for active directory logins
. V10.12.03  05/02/2018  Ebon Clements    TSK 0851856
.            Added PMSVX125 to UMAS0000 and ZUNK0000
. V10.12.02  22/01/2018  Ania P           TSK 0851366
.            Fixed write of wbseuid to emrhisaf
. V10.12.01  16/01/2018  Peter Vela       TSK 0851185
.            Added trap for I*D around WRVSMDT1
.            11/01/2018 Tracey Nguyen  TSK 0825792
.            1)Modified CHKDN000/NUPD0000/FNUR0000/AUDHIS00/NURHIS00/NURTAB00/
.            AUDHI200/NURHI200 to use pmshcpaf if EMCNURSE=1
.            2)Recompiled for EMRVISTM 
. V10.11.20  27/12/2017  Steve Armstrong  TSK 0850165
.            Recompiled for changes to DGCLICAC.
.            28/12/2017  Ania P        TSK 0848601
.            Recompiled for changes to DGCLICAE
. V10.11.19  19/12/2017 Peter Vela     TSK 0841602
.            Fixed validation for Ambulance Handover Date/Time in UMAS6000
. V10.11.18  15/12/2017 Ebon Clements  TSK 0841235
.            Fixed PMSVX125 cgi and save
. V10.11.17  07/12/2017 Ebon Clements  TSK 0841235
.            Added TRSX0000 extension tags to TRSR0000
.            Fixed PMSVX125 cgi and save
. V10.11.16  05/12/2017 Peter Vela     TSK 0841602
.            Fixed Ambulance Handover Date and Time validation in ZUNK0100
.            UMAS1000
.            Added EMVIUC31 in CHINT000
.            Changed order of pack UPDVALUE NEWVALUE in CHINT
. V10.11.15  05/12/2017 Ebon Clements  TSK 0849440
.            Added using web user id for application authentication - VERUSR00
. V10.11.14  29/11/2017 J.Tan          TSK 0848799
.            Fixed deleting records from viscmtaf
. V10.11.13  24/11/2017 Peter Vela     TSK 0841602
.            Added hea ambulance handover date/time over write
.            functionality
. V10.11.12  22/11/2017 Ania P         TSK 0261630
.            Moved TFILNAME to CFNAMEDP in INIT0000
. V10.11.11  05/10/2017 Peter Vela     TSK 0845925
.            Moved assignment of PMVXWEBC in UPEM0000
. V10.11.10  03/10/2017 Peter Vela     TSK 0845925
.            Added update to PMVXWEBU in UPEM0000
. V10.11.09  15/09/2017 Ebon Clements  TSK 0841602
.            Check discharge status when validating discharge date - CHINT200
. V10.11.08  04/09/2017 Jill Parkinson TSK 0831185
.            Recompiled for WEBEMRCM - PKADD4 not getting updated
. V10.11.07  18/08/2017  Ania P         TSK 0843179
.            Recompiled for IBAWEBCD
. V10.11.06  14/08/2017 Ebon Clements   TSK 0840687
.            Removed V10.10.12 changes -  VISITSUB from UPDDIR00
. V10.11.05  30/07/2017  Thanh T.       TSK 0821710
.            Audit admission/outpatient/UR comments. changed PATMASTM/PMSPX2TM.
. V10.11.04  28/07/2017 Ebon Clements   TSK 0842284
.            Restored DATEVL10 validation for Amb Arrival Date/Time
. V10.11.03  26/07/2017 Ania P          TSK 0839943
.            Addeed CHGMD950
. V10.11.02  20/07/2017  Richa Phogat   TSK 0820753
.            Add condition to display an error message on Triage, Register, New
.            Expected(ADEX0000) & New Expected Advice templates if ED site is 
.            inactive
. V10.11.01  14/07/2017  Thanh T.       TSK 0821710
.            Audit Amission/outpatient visit comments. PATMISTM changed.
.----------------------------------------------------------------------
. V10.10.12  11/07/2017 Ania P         TSK 0840687
.            Added fix for duplicate emr registrations
. V10.10.11  03/07/2017  Jill Parkinson TSK 0831185 
.            Added check for NZ around call to PRAUP000 as NZ do not 
.            want PRFA record written
. V10.10.10  22/06/2017  Richa Phogat    TSK 0839070
.            Update array count from 10 to 21 for MSGARR
. V10.10.09  25/05/2017  Peter Vela      TSK 0833345
.            Recompiled for EMRCHMAN
. V10.10.08  22/05/2017  Peter Vela      TSK 0833345
.            Recompiled for EMRCHMAN
. V10.10.07  18/05/2017  Ebon Clements   TSK 0814741
.            Added don't group records by consultant option - ALLCCL00
. V10.10.06  04/05/2017  Peter Vela     TSK  0833345
.            Added Visit Extra Data functionality (Alcohol Data Capture in ED)
. V10.10.05  20/04/2017  Tracey Nguyen  TSK  0933750
.            Cancel bed request on cancellation/deletion of any ED visit
. V10.10.04  29/03/2017  Ebon Clements  TSK  0833052
.            Recompiled for PATMX1FD - New filed - Episode Special Purpose Flag
.            29/03/2017  Tracey Nguyen  TSK  0833454
.            Recompiled for PATATRTD/PATATRTM
. V10.10.03  21/03/2017 Peter Vela     TSK 0815584
.            Added validation for Primary Diagnosis in GEMVC000
. V10.10.02  14/03/2017 Ebon Clements  TSK 0814747
.            Recompiled for VISCODTM - Long desciption tag
. V10.10.01  03/03/2017 Richa Phogat   TSK 0323865
.            Added Nurse PMI address Update functionality UADR0000 
. V10.09.16  24/02/2017 Peter Vela     TSK 085584
.            Added update functionality to WWAHVC00
. V10.09.15  15/02/2017 Peter Vela     TSK 0814748
.            Added first seen by nurse/doctor date/time tag - FNUR8000 FDOC8000
. V10.09.14  07/02/2017 Peter Vela     TSK 0815584
.            Added new tag for EMRVCD diagnosis paticd and emricd in MISC0000
.            Added write diagnosis functionality to UPEM0000 and DISC0000
.            for wahealth
. V10.09.13  02/02/2017 Jill Parkinson TSK 0832624
.            Added new tag for Cross consult list with time and without hours
. V10.09.12  30/01/2017 Jill Parkinson TSK 0831185
.            Recompiled for PERRESAC - removed @ from PRFA
. V10.09.11  01/02/2017 Jill Parkinson TSK 0832624
.            Changed Referred Consultant to Referred To Consultant
. V10.09.10  19/01/2017 Ania P          CAR 814741
.            Fixed output in ALLCCL00
. V10.09.09  16/01/2017 Davin           TSK 0814742
.            Default to emr site hospital for paeds hydro max.age (trsr9700)
.            Recompiled for VISCODTM - mods to selection list output
. V10.09.08  03/01/2017 Jill Parkinson TSK 0823703
.            Recompiled for CLEMRVIS - Added EMVISITE
. V10.09.07  03/01/2017 Steve Armstrong  TSK 0814744
.            Added new FD fields to CLEDET00
. V10.09.06  28/12/2016 Ania P         TSK 0814741
.            Extra wahealth outputs
. V10.09.05  21/12/2016 Ebon Clements  TSK 0814744 
.            Fixed active cat code test - UPDEMX00
. V10.09.04  21/12/2016 Jill Parkinson TSK 0823703 
.            Changed STVIS000 to only move users logged in site to emvisite if
.            it is blank (stop moving emr visit from one hospital to another)
. V10.09.03  09/12/2016 Davin           TSK 0814742
.            Added tag - max age for paediatric hydration (trsr9700)
. V10.09.02  03/12/2016  Ania P         CAR 814741
.            Recompiled for PATCRCFD/IO
. V10.09.01  28/11/2016  Peter Vela     TSK 0814744
.            Recompiled for EMREXPFD
.            Added functionality for new fields in EMREXPFD
.----------------------------------------------------------------------
. V10.08.20  24/11/2016  Ebon Clements  TSK 0829818
.            Fixed I * C on allrefaf
. V10.08.19  18/11/2016  Peter Vela     TSK 0827671
.            Added single space after Parent of <Initial>.
.            before write to patre1af
. V10.08.18  08/11/2016  Ebon Clements  TSK 0825010
.            Added U/R already allocated edit - ALLEX975
. V10.08.17  02/11/2016  Ania P         CAR 822868
.            Recompile for EMRVISTM
. V10.08.16  26/10/2016  Don Nguyen     TSK 0817345
.            Increased size of UPDATEKY from 22 to 32 (to include WEBUSEID)
.            Modified CLINOT00, MANNOT00 and UPEM0000 to pack UPDATEKY 
.            with WEBUSEID for use in UPVCM000.
. V10.08.15  21/10/2016  Ebon Clements  TSK 0321623
.            Added display quick reg tag - GETQKR00
. V10.08.14  19/10/2016  Ania P         CAR 0822868
.            Strip doctor fields in LDOC0000 & FDOC0000
. V10.08.13  04/10/2016  Ania P         CAR 0822868
.            Recompile for PATDOCCD
. V10.08.12  28/09/2016  Ania P         CAR 0822868
.            Added code to EMRA0700 for PTCNHDPS/nz
. V10.08.11  08/08/2016  Davin             TSK 0321234
.            Added Chronic Condition Alert (PMPXSN11/SAVESN11)
. V10.08.10  05/08/2016  Jill Parkinson TSK 0821156 
.            Recompiled for EMRVISTM - LOCN0000 incorrect goto's for in use locs
. V10.08.09  02/08/2016  Jill Parkinson TSK 0821156 
.            Recompiled for EMRVISTM - LOCN0000 showing inactive locations
. V10.08.08  21/07/2016  J.Tan           TSK 0816861
.            Mods PRECMP000 - Presenting Complaint to check for Hosp.Specific
. V10.08.07  08/07/2016  Jill Parkinson  TSK 0822002  
.            Added check for attribute type=001 for body mass index
. V10.08.06  20.06.2016  B.G.Ackland       TSK 0821135
.            Secuity fix for reads on WBSE7 index
. V10.08.05  27/05/2016 Jill Parkinson TSK 0814124
.            Changed emrmtxaf to use emid9cod instead of emicvemd
.            10/06/2016  Peter Vela    TSK 0816991
.            Recompiled for EMRVISTM
. V10.08.04  20/05/2016  Peter Vela    TSK 0818585
.            Added EMVIDOCT tag in MISC1100 with DOCF0000
. V10.08.03  11/05/2016  Peter Vela     TSK 0817170
.            Fixed validation for category ED in DISC0000, MANF0000 for nz
. V10.08.02  02/05/2016  Peter Vela     TSK 0817170
.            Validate Category ED before CHKMAN00 in DISC0000
.            Move zero to exit after CHMAN000 in DISC0000
. V10.08.01  28/04/2016  Don Nguyen     TSK 0316489
.            Recompiled for PATATRTM & PATATRFD/IO
.----------------------------------------------------------------------
. V10.07.07  11/01/2016  Ebon Clements  TSK 0294154
.            Added write to opt out of SMS file - PMSOOSFD
. V10.07.06  04/01/2016 Ebon Clements  TSK 0294154 
.            Added Opt out of SMS to prev address file write
. V10.07.05  18/12/2015 Ebon Clements  TSK 0294154 
.            Added Opt out of SMS functionality
. V10.07.04  15/12/2015  Don Nguyen    TSK 0318657
.            Recompiled for PATMSXTM - Added output for PUYN2
. V10.07.03  15/12/2015  Peter Vela      CAR 320033
.            Added tag for bed request status RBED0000
. V10.07.02  09/11/2015  Ebon Clements   CAR 320017
.            Added nextpage 20 Return New registration U/R and Visit - REGADM00
. V10.07.01  09/10/2015  Peter Vela      CAR 317170
.            Recompiled for  EMRCHMAN
.----------------------------------------------------------------------
. V10.06.27  18/09/2015  Peter Vela       CAR 321618
.            Recompiled for PATCODTM
.            27/08/2015  Ania P           CAR 303291
.            Recompiled for EMRCLITM
. V10.06.26  05/08/2015  Peter Vela    CAR 320066
.            Reocmpiled for EMRVISTM
. V10.06.25  04/08/2015  Peter Vela    CAR 317976
.            Added End Triage Date / Time Supervisor changes to UPEM0000
.            Added End Triage Date / Time to DITB0000
. V10.06.24  28/07/2015  Peter Vela    CAR 319930
.            Added tags for EMVIUR04 EMVIUR05
. V10.06.23  24/07/2015  Peter Vela    CAR 318301
.            Validate existing initial assessor record in emrhisaf
.            in CHINT900
. V10.06.22  22/07/2015  Don Nguyen    CAR 297670
.            Added PRODH000, MISC0050 - MISC0080 for Doctor Handover (new form)
.            14/07/2015  J.Tan             CAR 317921
.            Recompiled for PMSEXTTM - checking for inactive Insurance code
. V10.06.21  09.07.2015  B.G.Ackland   CAR 319313 
.            Emergency Discharge Summary Template Changes
.            Default Hospital Details to Control File if No Visit Hospital
.            Output Alerts in a new format for document template
.            Output Medical History in a new format for document template
. V10.06.20  03/07/2015  Don Nguyen    CAR 313365
.            Added IADD4 in FPRA0500 and fixed FPRA7250 to correctly map PKADD4
. V10.06.19  24/06/2015  Ebon Clements    CAR 318514
.            Recompiled for EMRDRCHR - Fixed presenting complaint update - KEY22
. V10.06.18  22/06/2015  Peter Vela       CAR 311435
.            Recompiled for EMRVISTM
. V10.06.17  05/06/2015  Peter Vela       CAR 317471
.            Added validation for delete indicator in GETDFA00
.            Added validation for delete indicator in GETDFD00
. V10.06.16  01/06/2015  Ania P           CAR 313313
.            Added PMRSSTDN
. V10.06.15  27/05/2015 Peter Vela     CAR 314567
.            Removed nowrap from nurse column in AUDHI200
.            27/05/2015  J.Tan            CAR 244314
.            Mods Disc.mandatory field DSCMN000 to check to Att.doctor
. V10.06.14  27/05/2015 Peter Vela     CAR 314567
.            Appended spaces between names in AUDHI2000
. V10.06.13  21/05/2015 Ebon Clements  CAR 314585
.            Fixed display of first other doctor - OTDHIS00
. V10.06.12  18/05/2015 Patrick Adair  CAR 208170
.            Recompiled for changes to UPDUR
. V10.06.11  27/04/2015  Peter Vela CAR 314567 
.            Added AUDHI200 for sjog-standard
.            Added Other Doctor to WRTHIS00
.            Added DOCHI200 and NURHI200 for sjog-standard
. V10.06.10  15/04/2015  Ebon Clements  CAR 3145853
.            Display initial assessor name in audit history - AUDHIS00
.            15/04/2015  Peter Vela     CAR 312723
.            Recompiled for DEATHAUD
. V10.06.09  08/04/2015  J.Tan          CAR 244314
.            Checked Discharge Mandatory field 
.            08/04/2015  Don Nguyen     CAR 308974
.            Fixed AUDHIS00 so that Nurse Seen Date/Time displays correctly
.            08/04/2015  Ebon Clements  CAR 312047
.            Update nurse seen from the supervisor update first nurse
.            seen date and time screen - CHGNR900
.            08/04/2015  Ebon Clements  CAR 312049
.            Added dispay of date and time for last doctor deleted - DITB0000
. V10.06.08  04/01/2055  Don Nguyen     CAR 308974
.            Added output for Nurse Seen Date & Time in AUDHIS00
. V10.06.07  17/03/2015  Peter Vela     CAR 282090
.            Added tag for PSEX TRSR7200
.            Added update to demographic fields in emrunkaf UPEM0000
.            Added Location order functionality to ELCN0000
.            Added Location order functionality to EMDL6800
.            Added tag for Arrival Date/Time from emrhisaf TRSR7300
.            Added reportno to submit supervisor changes to WAHealth
.            Added Initial Assessor functionality MAIN3300
.            Added Senoir Doctor functionality MAIN3400
.            Added tags for Treating Doctor Date / Time TRSR7400
.            Added tags for Previous Treating Doctor Date / Time TRSR7500
.            Added tags for Treating Nurse Date / Time TRSR7600
.            Added tags for Previous Treating Nurse Date / Time TRSR7700
.            Added tag for NXVS0000 Next emergency patient redirect tag
.                          same Emergency Site.
.            Added functionality for Emergency Discharge Comments
. V10.06.06  25/03/2015  Ebon Clements  CAR 312047
.            Restored correct cgi move FRSTDOCT  to ed doctors after changes
.            from V10.05.13 - CHGDT900
. V10.06.05  24/03/2015  Ebon Clements  CAR 282146
.            Recompiled for PMSPX2FD - Opt out of SMS
. V10.06.04  23/03/2015  Don Nguyen     CAR 306757
.            Removed branch exit on call to UPDMEH00 (removed EXIT set)
. V10.06.03  20/03/2015  Don Nguyen     CAR 306757
.            Recompiled for MEHVISTM - Modified MHVS5800 to read mehdlsaf
. V10.06.02  20/03/2015  Ebon Clements  CAR 304779
.            Added EMVIS167 to EMVIS171 - User defined cat codes
. V10.06.01  16/03/2015  Don Nguyen     CAR 306757
.            Added Mental Health functionality; MISC0000, DISMEH00 & UPDMEH00
.            12/03/2015  Steve Armstrong  CAR 314108
.            Removed reference to PATCGPFD (No Longer in use)
.----------------------------------------------------------------------
. V10.05.21  11/02/2015  Patrick Adair  CAR 208170
.            Added Previous HCP/Practice Audit Details and corrected Death Audit
.            Include new HCP save variables as SVMAS variables are too small
.            for new fields
. V10.05.20  19/01/2015  Peter Vela      CAR 304847
.            Added tag for emergency disposition plan flag
. V10.05.19  07/01/2015  Ebon Clements   CAR 304779
.            Added Z70 test before cgi move of EMVIS096
.            14/01/2015  Jill Parkinson CAR 310744
.            Added formatting to alerts to show - between desc and comments
. V10.05.18  19/12/2014  B.G.Ackland     CAR 310348
.            Recompiled for changes to IBAWEBCD
. V10.05.17  14/11/2014  Jill Parkinson CAR 308062
.            Added output of alerts for discharge summary (OUTALR00)
. V10.05.16  11/11/2014  Ebon Clements    CAR 308165
.            Only perform multi hospital test if multi hospital - CHKADM92
. V10.05.15  30/10/2014  Ebon Clements  CAR 301898
.            Lock control file when getting next visit number - ZUNK0000
. V10.05.14  28/10/2014  Davin          CAR 306399
.            Added pmuduser when updating demographics record (wrupd000)
. V10.05.13  24/09/2014  Ania P         CAR 297062
.            Match vars with Z70 before moving to EMVIDOCT
. V10.05.12  11/09/2014  Jill Parkinson CAR 305786
.            Removed DATEVL11 & 12 validations for Amb Arrival Date/Time check
.            10/09/2014  J.Tan             CAR 274958
.            Added Employer code to pmswx1af file
. V10.05.11  04/09/2014  Ania P           CAR 305481 
.            Removed duplicate call to WDAU0000
. V10.05.10  26/08/2014  Ania P           CAR 303879
.            Increased EMVIS034 from 6 to 15
. V10.05.09  21/08/2014  Peter Vela     CAR 303909
.            Recompiled for EMRVISTM
.            21/08/2014  Don Nguyen     CAR 303878
.            Recompiled for changes to PATMASTM
. V10.05.08  19/08/2014 Peter Vela      CAR 303879
.            Added the following variables:
.            Meet & Greet Assessment Nurse Code
.            Meet & Greet Ass. Nurse Date Seen
.            Meet & Greet Ass. Nurse Time Seen
.            Meet & Greet Ass. Doctor Code
.            Meet & Greet Ass. Doctor Date Seen
.            Meet & Greet Ass. Doctor Time Seen
.            19/08/2014  Ania P           CAR 305130
.            Added EMDARECD to CLEDET00
. V10.05.07  19/08/2014  Peter Vela       CAR 304873
.            Recompiled for EMRVISTM
.            Added DATED000
. V10.05.06  19/08/2014  Ania P           CAR 303879
.            Increased EMEXP026 from 6 to 15
. V10.05.05  18/08/2014  Peter Vela       CAR 304973
.            Recompiled for EMRVISTM
. V10.05.04  13/08/2014  J.Tan            CAR 279251
.            Mods Discharging deceased patient to write to audit file
.            13/08/2014  Don Nguyen       CAR 299099
.            Recompiled for changes to MRTRQHFD/IO - Added Index 6
. V10.05.03  11/08/2014  Don Nguyen       CAR 297774
.            Recompiled for changes to PMSBRQFD/IO
. V10.05.02  29/07/2014  Peter Vela       CAR 301176
.            Added calculated bmi to TRSR5300 
. V10.05.01  17/07/2014  Ebon Clements    CAR 251384
.            Clear sub system key for ibapolaf write
. V10.04.26  08/07/2014  Ebon Clements    CAR 303097
.            Fixed setting of exit flag in VALINJ00. Fixed injury data 
.            population when Adding/Updating a diagnosis - ADDCOD00 PDGH0000
. V10.04.25  25/06/2014  Don Nguyen       CAR 302616
.            Fixed DATEVL10 and DATEVL11 to output correct error messages
.            for case when amb arrival date/time > triage date/time.
. V10.04.24  18/06/2014  Jill Parkinson   CAR 275582
.            Added setting of EMRCN029                 
. V10.04.23  18/06/2014  Jill Parkinson   CAR 275582
.            Changed keystroke count to 6 for EMRSCH88
. V10.04.22  13/06/2014  Jill Parkinson   CAR 275582
.            Added EMRCN029 cgi variable
. V10.04.21  13/06/2014  Jill Parkinson   CAR 275582
.            Added read of EMCNEDFP 
. V10.04.20  22/05/2014  Peter Vela       CAR 292130
.            Recompiled for EMRCHMAN
.            Added Cross Consultation Display
. V10.04.19  19/05/2014  Ebon Clements    CAR 298155
.            Fixed non multi hospital user id defaults - CRMED000
. V10.04.18  08/05/2014  Ebon Clements    CAR 300679
.            Re read pmsvx1af record for the ED visit after reading
.            patmi1af for the linked IP visit as it also reads pmsvx1af
. V10.04.17  07/04/2014  Peter Vela      CAR 286258
.            Recompiled for PATMASTM
. V10.04.16  31.03.2014  B.G.Ackland  CAR 299363
.            Replace META Tag Redirect with Javascript in Common RDIREC00
.            & RFRESH00 Routine
. V10.04.15  31/03/2014  Peter Vela       CAR 261630
.            Removed port from Presenting Complaint temp file in CLRPAR00
. V10.04.14  24/03/2014  J.Tan            CAR 279251
.            Mods to write to Death audit file and added generic user
. V10.04.13  20/03/2014  Don Nguyen       CAR 298261
.            Modified UPEM0200 - moved visit status validation down so WRTHIS00
.            is not skipped for an update on a discharged visit.
. V10.04.12  18/03/2014 Peter Vela        CAR 294920
.            Added ELCN0000. Get Emergency Location Selection List based on
.            EMVISITE
. V10.04.11  11/03/2014 Ebon Clements     CAR 294181
.            2014 VEMD Changes
.            03/03/2014 Ebon Clements     CAR 290208
.            Update linked pre adm date/time with discharge date if vic.
.            03/02/2014  Ania P        
.            Added EMRSCH00, DATE2INT, INT2DATE
.            21/02/2014  Davin            CAR 296955
.            Added reads on patma1/pmspx2/pmsvx1 before dgclicec triggers 28/29
.            27/02/2014  J.Tan            CAR 275810
.            Fixed updating Defence force claim details
.            28/02/2014  Don Nguyen       CAR 291879
.            Call WIPL0000 in the relevant routines
.            14/04/2014 Peter McMullen CAR 294083 
.            Check username  against loginid (index 7) of websecaf 
. V10.04.10  24/01/2014  Peter Vela       CAR 286158
.            Changed PATATR reads and writes
. V10.04.09  22/01/2014  Peter Vela       CAR 294608
.            Recompiled for CALCBMIN
. V10.04.08  22/01/2014  Don Nguyen       CAR 295972
.            Modified UPAD0000 - KEY16 to KEY24. Updated key PACK.
. V10.04.07  17/01/2014  Peter Vela       CAR 286158
.            Changed BMI underweight to purple
. V10.04.06  13/01/2014  Peter Vela       CAR 286158
.            Fixed BMI colors
. V10.04.05  31/12/2013  Don Nguyen       CAR 294371
.            Recompiled for changes to EMREXPFD and EMREXPIO
. V10.04.04  19/12/2013  Peter Vela       CAR 286159
.            Fixed Patient Attributes Date and Time tag
. V10.04.03  18/12/2013  Don Nguyen       CAR 256198
.            Added LDOC0000 and LNUR0000
. V10.04.02  17/12/2013  Peter Vela       CAR 286158
.            Fixed BMI colors
. V10.04.01  17/12/2013  Jill Parkinson   CAR 285739
.            Added check for cancelled visits in PROC9100
.----------------------------------------------------------------------
. V10.03.107 05/12/2013  Peter Vela       CAR 286158
.            Added Patient BMI/Attributes functionality
. V10.03.106 03/12/2013  Davin            CAR 215623
.            Added tags for expected ward & allocation date/time - to default
.            from pmsbrqaf (cbed0000,trsr4800,trsr4900,trsr5000)
. V10.03.105 18/11/2013  Don Nguyen       CAR 293848
.            Added TRSR4700 - CODITM00 Cat 'fw' (Reason for Handover).
.            Modified DOCHIS00 and NURHIS00 to output 'Reason for Handover' 
.            when applicable.
.            Added REASONHO for WRTHIS00.
. V10.03.104 13/11/2013  Peter Vela       CAR 293546
.            Added tags for EMVIUR01 in TRSR0000 for Basic EMR Discharge Update/
.            Enquiry templates
. V10.03.103 11/11/2013  Davin            CAR 292582
.            Recompiled for VISCODTM - added tag options for cancer reg
. V10.03.102 08/11/2013  Don Nguyen       CAR 291628
.            Initialised EXIT to 0 in UPCLMD00 (since DEAPOL00 sets it to 1)
. V10.03.101 11/10/2013  Ebon Clements    CAR 269946
.            Moved write of the move location history record to be 
.            after the write of the triage history record - UPEM0200 
. V10.03.100 09/10/2013  Ebon Clements    CAR 275205
.            Added EBS unknown U/R edits to limit U/R usage
. V10.03.99 08/10/2013  Ania P            CAR 291841
.           Added EMCHUP13
. V10.03.98 03/10/2013  Patrick Adair     CAR 291634
.           Do not update pmsupdaf on Triage Update
. V10.03.97 02/10/2013  Peter Vela        CAR 291724
.           Recompiled for VISCODTM
. V10.03.96 19/09/2013  Patrick Adair     CAR 284311
.           Modified UPEX0000 to check if patient already exists in emergency
. V10.03.95 10/09/2013  Don Nguyen        CAR 291231
.           Modified TRSR0000 to use EMVIDOCT instead if EMVIUR01 is blank
.           10/09/2013  Steve Armstrong   CAR 291089
.           Recompiled for changes to PMSQVIFD.
. V10.03.94 30/08/2013  Don Nguyen        CAR 286273
.           Added TRSR4300 (Cross Consultations) & TRSR4400 (Ward/Bed requests)
. V10.03.93 08/08/2013  Patrick Adair     CAR 289460
.           Remove QUOTE & APOSTROPHE from EMVITXT2 (Discharge Diagnosis)
. V10.03.92 06/08/2013  Ania P            CAR 285947
.           Fixed logic in STVIS000 for updating PTMADCxx variables 
. V10.03.91 30/07/2013  Ebon Clements     CAR 283202
.           Recompiled for PMSPX2TM - Preferred method of contact
. V10.03.90 26/07/2013  Steve Armstrong   CAR 287787
.           Recompiled for changes to DGCLICUA.
. V10.03.89 25/07/2013  Don Nguyen        CAR 289103
.           Added check on EMVISTAT before calls to WRTHIS00 for 'Move Location'
.           audit record.
. V10.03.88 18/07/2013  Steve Armstrong   CAR 268961
.           Recompiled for changes to PMSQVIFD.
. V10.03.87 10/07/2013  Davin             CAR 283509
.           Recompiled for change to viscodfd
. V10.03.86 20/06/2013  Peter Vela        CAR 283202
.           Recompiled for PMSPX2FD
.           30/06/2013  Davin             CAR 283202
.           Recompiled for changes to hl7 messaging (pmsqptfd)
.           19/06/2013  Ebon Clements     CAR 286907
.           Check WBSEHHOS and WHSEHLOC are both populated before using
.           18/06/2013  Don Nguyen        CAR 284598
.           Modified DITB0000 to output doctor/nurse name before date/time
.           29/05/2013  Peter Vela        CAR 261630
.           Removed port number from temp file name
. V10.03.85 16.05.2013  Peter Vela        CAR 284594
.           Fixed Description of old value for Removal of First Doctor Seen
. V10.03.84 15/05/2013  Peter Vela        CAR 284594
.           Added 12 - Removal of First Doctor Seen to DITB0000
. V10.03.83 14/05/2013  Peter Vela        CAR 270353
.           Added pack spaces to emvilocn @ UPEM0200
. V10.03.82 10/05/2013  Ebon Clements CAR 283008
.           Added nextpage 19 TOGMPP00
. V10.03.81 08/05/2013  Patrick Adair CAR 269338
.           Check Max Number of Patients is not exceeded for a location
. V10.03.80 07/05/2013  J.Tan            CAR 284694
.           Mods Overseas Student PRFA to default to Local address
. V10.03.79 06/05/2013  Peter Vela        CAR 270353
.           Added Short Stay defaults for Emergency Discharge SSDEP000
. V10.03.78 03/05/2013  Peter Vela        CAR 270353
.           Added reload to top.content @ REDMAP00
. V10.03.77 02/05/2013  Don Nguyen       CAR 284693
.           Recompiled for changes to IBAWEBCD (TITLESEL & RELATSEL).
.           01/05/2013  Steve Armstrong  CAR 284376
.           Recompiled for changes to DGCLICUP.
. V10.03.76 01/05/2013  Don Nguyen       CAR 284625
.           Modified DISPPT00 to display web user name instead of id.
.           Modified ADDPAT00 to clear other delete variables before write.
. V10.03.75 15/04/2013  Steve Armstrong  CAR 267329
.           Fixed read (RAIBPOL1) on ibapolaf to increment counter
. V10.03.74 16/04/2013  Don Nguyen       CAR 284099
.           Added ISEDLITE processing for ED Lite templates
.           17/04/2013  Steve Armstrong  CAR 248199
.           Moved Trigger 3 (A04 - EMR Registration) to after the
.           WRITE/UPDATE of the pmsvx1af record.
.           where a record already exists.
. V10.03.73 09/04/2013  J.Tan       CAR 282669
.           Added tag for Prisoner
. V10.03.72 22.03.2013  B.G.Ackland CAR 283010
.           Added Hospital Details for Emergency Discharge Letter
.           New Include PATHSPTM
.           New tag for Arrival time as HH:MM
. V10.03.71 03/04/2013  Davin          CAR 270648
.           Recompiled for changes to HL7 messaging includes
. V10.03.70 20/03/2013  Steve Armstrong  CAR 268971
.           Removed HL7 Trigger 5 (ED A08 Update message) as Trigger 6
.           makes it redundant.
. V10.03.69 19/03/2013  Jill Parkinson CAR 282814
.           Recompiled for PATMASTM - Disability alert DSAL0000 change
. V10.03.68 14/03/2013  J.Tan         CAR 281349
.           Recompiled for EMRCHMAN - Clinical notes from vismdtaf file
. V10.03.67 08/03/2013  Davin            CAR 268971
.           Added HL7 visit triggers for PMI changes - new table ibapolaf
.           (SH7VP000/CH7VP000/WH7VP000)
. V10.03.66 05.03.2013 Peter McMullen CAR 271555
.           Convert VERUSR00 to use standard authenticaion VFYUSR00
. V10.03.65 01/03/2013  Jill Parkinson CAR 257831  
.           Added WRUPD000 - write/update of pmsupdaf when demographics updated
. V10.03.64 25/02/2013  Ania P           CAR 281021
.           RECOMPILED for EMRCLITM
. V10.03.63 25/02/2013  Davin            CAR 279947
.           Added A08 broadcast for linked inpatient admission (brdlnk00)
. V10.03.62 12/02/2013  Don Nguyen       CAR 280029
.           Added template match for '016' in NEWPAT16 and NEWPAT20 to skip 
.           visit check for new patient visit add.
. V10.03.61 09/01/2013  Peter Vela       CAR 268131
.           Added Previous Hospitalisation functionality
. V10.03.60 10/12/2012  J.Tan            CAR 276875
.           Mods 'Send Bill to Local' address for Overseas patient
. V10.03.59 21/11/2012  Don Nguyen       CAR 276754
.           Recompiled for PATMASTM - WRWBLUR1
. V10.03.58 12/11/2012  Don Nguyen       CAR 275940
.           Added new variables to clear in UNDS0000 for other discharge fields
. V10.03.57 07/11/2012  Peter Vela       CAR 275781
.           Fixed UNDS0000 to accommodate zero urs
. V10.03.56 01/11/2012  Don Nguyen       CAR 275579
.           Modified CHGDT200 to check discharge date/time if correct status
. V10.03.55 31/10/2012  Don Nguyen       CAR 275232
.           Modified EMVIS000 to allow EMVIS024 to store empty value
. V10.03.54 30/10/2012  Don Nguyen       CAR 275345
.           Modified EMVIS000 to remove RESET call on QRYDATA.
.           Added code to allow EMVIS071 to store empty value.
. V10.03.53 26/10/2012  Don Nguyen       CAR 275345
.           Modified EMVIS000 to call RESET on QRYDATA for empty values
. V10.03.52 17/10/2012  Peter Vela       CAR 274779
.           Added tag for Emergency Default Location
.           16/10/2012  Don Nguyen       CAR 273899
.           Modified ALLCCL00 to allow the display of multiple records of the
.           same Speciality.
. V10.03.51 11/10/2012 Peter Vela        CAR 274563
.           Added zero ur validation @ DISPPT00
. V10.03.50 11/10/2012  Don Nguyen       CAR 273899
.           Modified ALLCCL00 to enable the display of multiple records with
.           the same Referred Consultant (as individual list rows).
. V10.03.49 11/10/2012  Steve Armstrong  CAR 274402
.           Added call to DGCLICDI for a discharged ED patient
. V10.03.48 08/10/2012  Don Nguyen       CAR 270231
.           Removed any trailing spaces from comment lines in DISPNT00
. V10.03.47 04/10/2012  Ebon Clements    CAR 273463
.           Recompiled for VISCODTM 
. V10.03.46 02/10/2012  Saroeun Soeur    CAR 267036
.           DOCHIS00 - matched for FRDOC and dont display.
.           Uncommented DDHIST90 we still want to record the history
. V10.03.45 01/10/2012  J.Tan            CAR 273822
.           Mods to use CAGECOFF for 'Parent of' PRFA
. V10.03.44 28/09/2012  Ebon Clements    CAR 273869
.           Added site test to doctor and nurse handover
. V10.03.43 24/09/2012  Ebon Clements    CAR 273254
.           Changed TOGMAP00 to also reload content page
. V10.03.42 21/09/2012  Don Nguyen       CAR 270231
.           Removed any trailing spaces from WBSENAM in DISNOT00
. V10.03.41 20/09/2012  Ebon Clements    CAR 273077
.           Write a visit extension file record for zero UR ED visits
. V10.03.40 18/09/2012  J.Tan            CAR 273187
.           Fixed Prefix PRFA for deceased patients
. V10.03.39 13/09/2012  Don Nguyen       CAR 270231
.           Recompiled for changes to PATCODTM
. V10.03.38 11/09/2012  Ebon Clements    CAR 270231
.           Fixed cross consultation display
. V10.03.37 10/09/2012  Saroeun Soeur    CAR 267036
.           Update first doctor seen without creating another record
.           commented out DDHIST90
. V10.03.36 06/09/2012 Patrick Adair     CAR 270065
.           Populate Death Notification based on Cat ED and DY
. V10.03.35 04/09/2012 Ebon Clements     CAR 270231
.           Added ward bed request allocated ward, date and time tags
. V10.03.34 03/09/2012 Nicole Torrisi    CAR 261203
.           Fixed check on DPURNO/PURNO in CHKVIS00
. V10.03.33 23/08/2012  Ebon Clements    CAR 270231
.           Added wahealth trauma assessment field functionality
.           Added EMEXPSIT to store websec Emergency Site Code - Don Nguyen
.           Added EMTM0000 and PMSVX112 (Departure Means) - Don Nguyen
. V10.03.32 16/08/2012  Ebon Clements    CAR 260888
.           Added STATNCD6 to PFRM0000
. V10.03.31 10/08/2012  Don Nguyen     CAR 268547
.           Added new variable CABCPYTW and processing for it 
. V10.03.30 02/08/2012  J.Tan          CAR 263723
.           Mods checking Claim code TCINDC18 for PRFA
. V10.03.29 30/07/2012 Saroeun Soeur     CAR 267009
.            RDOPNUR1 - for Data Integrity Type 8
. V10.03.28 23/07/2012 Patrick Adair     CAR 269159
.           Recompiled for changes to PATCOMN2
. V10.03.27 19/07/2012  Steve Armstrong  CAR 268870
.           Recompiled for changes to UPDUR & PATCOMN2
. V10.03.26 12/07/2012  Saroeun Soeur   CAR 268807
.           STVIS000 -  EMVIS024 ability to store empty string
. V10.03.25 12/07/2012  Jill Parkinson  CAR 268849   
.           Added sub 2 days before deleting pmscuraf record
.           09/07/2012  Peter Vela         CAR 261649
.           Added Emergency Template Mapping functionality
. V10.03.23 04/07/2012  Peter Vela         CAR 265655
.           Added functionalitu for EMCNDDSS parameter - Display discharged
.           patients in Short Stay if admission ward is EOU or EMU
. V10.03.22 09/07/2012  Steve Armstrong    CAR 267675
.           Recompiled for changes to PATCOMN2.
. V10.03.21 21/06/2012  Peter Vela         CAR 264245
.           Added tags for First Seen Doctor Code and Desc
. V10.03.20 24/05/2012  Don Nguyen         CAR 264578
.           Also now clears the EMVIDSTA on an Undischarge
. V10.03.19 15/05/2012 J.Tan               CAR 255708
.           Recompiled for AAECHRG - Mods checking for Hold Invoices From Date
. V10.03.18 10/05/2012  Ebon Clements  CAR 250905
.           Added nextpage 18 TOGMAP00
. V10.03.17 10/05/2012  Peter Vela     CAR 232137
.           Recompiled for BEDBDVCD
. V10.03.16 27/04/2012  Don Nguyen     CAR 254988
.           TCINDC11 will now also work with 'M', as it did with 'E'
. V10.03.15 19/04/2012  Jill Parkinson CAR 263850
.           Recompiled for PATCOMN2 - GNXTUR locking sector 19
. V10.03.14 27/02/2012  Peter Vela     CAR 257196
.           Recompiled for CLPMSVX1
. V10.03.13 23/02/2012  Jill Parkinson CAR 260753  
.           Recompiled for VISCMTCD - pack of KEY14 for wrvscmt1
. V10.03.12 22/02/2012  Peter McMullen CAR 245067  
.           Allow different update types in the same time period
. V10.03.11 14/02/2012  J.Tan          CAR 259631
.           Mods to update HF Contributor (pmspx2af) for Priv.Compensable
. V10.03.10 17/01/2012  J.Tan             CAR 258661
.           Fixed PRFA for WA Workers Comp.
. V10.03.09 16/01/2012  Sandra Barcham  CAR 256563
.           Recompiled for PATMASTM
. V10.03.08 09/12/2011 J.Tan            CAR 256194
.           Fixed PRFA for wa Veteran Affairs
. V10.03.07 08/12/2011 Ebon Clements    CAR 248529
.           Added webPAS unique id to contacts
. V10.03.06 06/12/2011  J.Tan           CAR 256194
.           Mods to update PRFA details for Public (for Extra compensable)
. V10.03.05 01/12/2011  Mike Laming    CAR 250985
.           Added MultiDatabase to DEAPOL00 (DEATHPOL), added variables etc to
.           this for DEATHPOL.PBL
. V10.03.04 29/11/2011  Jill Parkinson CAR 249362 
.           Changed alert table keys
. V10.03.03 18/11/2011  Ebon Clements   CAR 255133
.           Added functionality to clear ed fields on un discharge - UNDS0000
. V10.03.02 11/11/2011  Ebon Clements     CAR 248529
.           Added multiple contacts of the same type functionality
.           17/11/2011  Mike Laming     CAR 240184
.           Changes to IBAPOSTF Post Code table - added State to Keys
.           04/11/2011  Davin           CAR 249257
.           Added A08 triggers for prfa change - hl7trgid 28,29
. V10.03.01 11/11/2011  Ebon Clements   CAR 255047
.           Recompiled for EMRVISTM - Claim code tag
. V10.02.25 27/10/2011  Steve Armstrong CAR 251323
.           Recompiled for PMSQVIFD changes
. V10.02.24 14/10/2011  Ebon Clements    CAR 251052
.           Check valid ED visit when opening supervisor screens - PROC9960
. V10.02.23 11/10/2011  Mark Coupland    CAR 252429
.           Recompiled for PMSPX2TM and PATMASTM
. V10.02.22 30/09/2011  Jill Parkinson CAR 248486  
.           Recompiled for IBAWEBCD
. V10.02.21 26/09/2011  Steve Armstrong  CAR 249584
.           Added read of pmsvx1af record prior to calls to DGCLICEC.
.           Recompiled for changes to DGCLICEC and DGCLICDI.
.           21/09/2011  Jill Parkinson CAR 248486
.           Added output tag for PMVXMHOS - TRSR2500
. V10.02.20 18/09/2011  Nicole Torrisi CAR 239447
.           Added output tag for EMEXGPCD - TRSR2400
. V10.02.19 13/09/2011 Jill Parkinson  CAR 248652
.           Recompiled for PMSPX2TM - Added read of pmsvx1af in GETCURIP
. V10.02.18 08/09/2011  Peter Vela        CAR 249984
.           Mods to delete disptlaf dispataf and alternate id records when
.           cancelling outpatient
. V10.02.17 02/09/2011  Peter Vela        CAR 249285
.           Fixed System Disaster first captured in DISVAL00
. V10.02.16 26/08/2011  Peter Vela        CAR 249292
.           Added prefix functionality to NWDALT00
. V10.02.15 26/08/2011  Davin             CAR 249255
.           Changed label printer cgis to 6 chars
. V10.02.14 12/08/2011  Peter Vela        CAR 248294
.           Added tag for Disaster Description
. V10.02.13 05/08/2011  Peter Vela        CAR 239559
.           Removed functionality for PTCNDIAI and used DISMASFD.DSMAAICD
. V10.02.12 04/08/2011  Ebon Clements     CAR 247627
.           Added DGCLICUP trigger for patalrtf & pmsaidaf.
.           Also removed call to HL7ALERT.
. V10.02.11 28/07/2011  Ebon Clements     CAR 243582
.           Added using tracking receipt functionality
. V10.02.10 28/07/2011  Peter Vela        CAR 242439
.           Added Emr Management Notes WAHealth
. V10.02.09 17/07/2011  Peter Vela        CAR 242439
.           Added Disaster functionality WAHealth
.           Added remote script for Management Notes VISCMT WAHealth
. V10.02.08 15/07/2011  Steve Armstrong   CAR 245199
.           Added HL7 trigger for WRPMCEX and UPPMCEX calls.
. V10.02.07 27/05/2011  J.Tan             CAR 239592
.           Mods for capturing extra compensable details
. V10.02.06 22/06/2011  Steve Armstrong   CAR 240722
.           Recompiled for changes to PATLOCFD.
.           Mods to cater for changes to PMSCURFD:
.                - PMCUSURN & PMCUGNAM extended to 40 chars.
.                - PMCUGNM2 added.
. V10.02.05 26/05/2011  Mike Laming      CAR 240724 
.           Mods for MRT Hospital/Location - add Hospitals, change Keys on 
.           "mrtlocaf" and "mrtmasaf"
.           14/06/2011 J.Tan             CAR 239592
.           Mods to extra compensable file
. V10.02.04 03/05/2011  Davin          CAR 239539
.           Changed to allow 3 alert indicators to be saved (CHKALR00)
. V10.02.03 10/05/2011  J.Tan          CAR 239588
.           Created CLPMSRES - clear patient Residency file
. V10.02... 11/05/2011  Mike Laming      CAR 240707 
.           Mods to use CLMRTHIS - caused by MRTHISFD file change. 
. V10.02.02 21/04/2011  Jill Parkinson CAR 240721
.           Recompiled for PATCOMN2 - UR Format generation      
. V10.02.01 28/03/2011  Ebon Clements  CAR 239311
.           Recompiled for EMRDCMTX - Save free format diagnosis
.----------------------------------------------------------------------
. V10.01.11 24/03/2011  Jill Parkinson CAR 233088
.           Mods to populate PMVXHFMN
. V10.01.10 01/03/2011  Ebon Clements  CAR 223822
.           Added EMDCLUID and EMDCSPAR to emr free text diagnosis
. V10.01.09 02/02/2011  Steve Armstrong   CAR 237520
.           Mods to remove Detente interface (PATDETNT)
. V10.01.08 28/01/2011  Ebon Clements  CAR 235686
.           Added EMCNLDIA test when saving free format diagnosis
. V10.01.07 17/01/2011  Ebon Clements  CAR 236087
.           Added defence force claim functionality
. V10.01.06 11/01/2011  Ebon Clements  CAR 215701
.           Recompiled for BEDBDVCD -  H/F stepdown
. V10.01.05 11/01/2011  Jill Parkinson CAR 236279
.           Added PTMASNAM
. V10.01.04 06/01/2011  Ebon Clements  CAR 233737
.           Write change of location history in UPEM0000 - SAVELOCN - UPEM0000
. V10.01.03 06/12/2010  Ebon Clements     CAR 233927
.           Added reason for hold update to invoice pending
. V10.01.02 02/12/2010  Ebon Clements  CAR 232827
.           Allocate seen doctor when adding MH practitioner - MDTI0000
. V10.01.01 17/11/2010  Jill Parkinson CAR 233088
.           Increased PTMAS037 from 10 to 19
.----------------------------------------------------------------------
. V10.00.25 08/10/2010  Ebon Clements  CAR 230999
.           Added change first nurse seen functionality - NRTI0000
. V10.00.24 06/10/2010  Ebon Clements  CAR 231396
.           Recompiled for BEDBDVCD - Post op records expected ward/bed
. V10.00.23 04/10/2010 Ebon Clements     CAR 218982
.           Added doctor code to seen date/time data integrity audit
. V10.00.22 28/09/2010 Ebon Clements     CAR 230978
.           Added update first seen by MH practitioner functionality to DOSEEN00
. V10.00.21 17/09/2010  Peter Vela        CAR 207227
.           Added tag for First Seen Nurse Code/Date/Time from EMRHISFD
. V10.00.20 17/09/2010  Ebon Clements     CAR 230239
.           Re-Compiled for MRTVISCD - Home Location and Document type test
. V10.00.19 16/09/2010  Ebon Clements     CAR 200011
.           Added trap to write to emr history file - WRTHIS80
. V10.00.18 16/09/2010  Ebon Clements     CAR 230180
.           Added data integrity audit to doctor seen date time change CHGDT000
. V10.00.17 02/09/2010  Ebon Clements     CAR 202417
.           Added update type 11 Research to data integrity audit
. V10.00.16 24/08/2010  Mike Laming       CAR 195158
.           Recompiled for PATMASTM - Legal Status Icon changes
. V10.00.15 17/08/2010 Peter Vela        CAR 228433
.           Added SP70 when packing into KEY22 @ WRTHIS80 
. V10.00.14 09/08/2010 Saroeun Soeur     CAR 227401
.           changed cgi emvis091 to a DIM field
. V10.00.13 09/08/2010 Peter Vela        CAR 216620
.           Recompiled for EMRVISTM
.           Added functionality for Updating Primary Diagnosis from Discharge
.           Screen
. V10.00.12 18/06/2010 Mike Laming       CAR 221911
.           Re-compiled for PATMASTM - NZ LS Alerts
. V10.00.11 15/06/2010 Peter Vela        CAR 216620
.           Added EMVCD033 - EMVCFTXT
. V10.00.10 09/06/2010 Ebon Clements     CAR 218982
.           Added data integrity audit functionality
. V10.00.09 26/05/2010 J.Tan             CAR 155955
.           Mods changing claim code after invoiced to write to audit (pmscauaf)
. V10.00.08 12/05/2010 Jill Parkinson    CAR 221348
.           Mods to write to emrchaaf                
. V10.00.07 19/04/2010 Ebon Clements     CAR 219859
.           Fixed alert indicator save - CHKALR00
. V10.00.06 14/04/2010 Steve Armstrong   CAR 219933
.           Recompiled for changes to EMRVCDFD
. V10.00.05 14/04/2010 Jill Parkinson    CAR 216634
.           Added move of LBLPRINT to SELPRINT for LABELTY2
. V10.00.04 09/04/2010 Steve Armstrong   CAR 219045
.           Recompiled for changes PATMRGFD.
. V10.00.03 31/03/2010  Ebon Clements  CAR 216782
.           Added EMVIS150 to EMVIS154 cgi vars
.           18/03/2010 Steve Armstrong  CAR 135505
.           Added setting of HL7TRGID & HL7INCLD for all broadcast
.           messages
. V10.00.02 16/03/2010 Jill Parkinson CAR 216634
.           Mods to save printers and stationery codes
. V10.00.01 16/03/2010 Ebon Clements CAR 210096
.           Calculate unknown patient age EMUNAGE on triage - ZUNK0000
.----------------------------------------------------------------------
. V9.12.25  11/03/2010 Ebon Clements  CAR 216621
.           Added triguser cgi test to triage new patient ZUNK0000 and UMAS0000
. V9.12.24  09/03/2010 Jill Parkinson CAR 216634
.           Added 5 stationery types
. V9.12.23  03/03/2010 Ebon Clements CAR 2158233
.           Recompiled for EMRCHMAN - Ambulance case number
. V9.12.22  20/01/2010  J.Tan          CAR 155955
.           Added option to change claim code from after invoiced
. V9.12.21  19/01/2010  Ebon Clements  CAR 211396
.           Write history record when updating injury data - UPIN0000
. V9.12.20  19/01/2010  Ebon Clements  CAR 213775
.           Fixed write of history record if key already existed - WRTHIS80
. V9.12.19  13/01/2010  Ebon Clements  CAR 207700
.           Added clear of PTREMOBL before write to PFRA
. V9.12.18  08/01/2010  J.Tan          CAR 206736
.           Recompiled for AAECHRG - only checking for facility fee if HESYST<>0
. V9.12.17  26/11/2009  Mike Laming    CAR 205505
.           Mod to fix Patient Folders from defaulting to "Overseas" @ CHKF0000
. V9.12.16  25/11/2009  Saroeun Soeur  CAR 208502
.           check for UPDFLAG1 on unknow patient
. V9.12.15  24/11/2009  Ebon Clements  CAR 210183
.           Added accessal cgi and tag for access all supervisor functions
. V9.12.14  20/11/2009  Saroeun Soeur  CAR 208502
.           added cgi UPDFLAG1 and changed UPCLMD00 to accept REGIS update type
. V9.12.13  13/10/2009  Mike Laming    CAR 207911
.           Add ReadA before Update of "emrincaf" in CHKINC00 & UNDS0000
. V9.12.12  13/10/2009  Jill Parkinson CAR 203391
.           Recompiled for EMRVISTM
. V9.12.11  21/09/2009  Ebon Clements  CAR 202317
.           Changed save of last label name, copies and printer PLAB0000
.           and PFRM0000
. V9.12.10  14/09/2009  Peter Vela     CAR 205229
.           Stop Medical Record Request in MRWRT000 if Current Location and
.           Destination are the same
.           Removed TEMR0000 and added CRMED000 to ALLEX000
. V9.12.09  11/09/2009  Peter Vela     CAR 205229
.           Added TEMR0000 to ALLEX0000 Track Medical Record on UR Allocation
. V9.12.08  20/08/2009  Ebon Clements  CAR 202317
.           Added save of last label, copies and printer PLAB0000
. V9.12.07  20/08/2009  Ebon Clements  CAR 199972
.           Fixed save of history record date and time for nurser shift change
. V9.12.06  17/08/2009  Ebon Clements  CAR 202914
.           Added save of last label/form name, copies and printer
. V9.12.05  24/06/2009  Ebon Clements  CAR 199232
.           Recompiled for BEDBDVCD
. V9.12.04  22/06/2009  Saroeun Soeur  CAR 197930
.           created CLND0000,UCLN0000 subroutines for other clinic details
.           file update
. V9.12.03  25/05/2009  Peter Vela     CAR 193078
.           Added validation for PKNAME in FPRA3000
. V9.12.02  18/05/2009  Ebon Clements  CAR 196896
.           Changed position of call to CHKTRD00 in UPEM0000 to be
.           before UPEMVIS1
. V9.12.01  14/05/2009  Jill Habasque  CAR 196646
.           Added ptmas070 - Employment Status
. V9.11.10  07/04/2009  Peter Vela     CAR 183976
.           Move spaces to PMVXPILC before WRPMVX11
. V9.11.09  02/04/2009  Peter McMullen CAR 191055
.           Prevent I*D on EMRLPCAF                                             
. V9.11.08  23/02/2009  Ebon Clements CAR 189654
.           Changed DATEVL00 branch on exit to goto UPEM9700 to retain exit = 1
.           in UPEM0000
. V9.11.07  17/02/2009  Ebon Clements CAR 189319
.           Changed EMVIS133 to a DIM with a Z70 match on update
. V9.11.06  17/02/2009  Peter Vela    CAR 183976
.           Move spaces to PMVXPOEC before WRPMVX11
. V9.11.05  22/01/2009  Ebon Clements CAR 187852
.           Recompiled for EMRVISTM -  Added semi colon to EMVIADMT tag
. V9.11.04  05/11/2008  Peter McMullen CAR 174725
.           convert internal javascript to W3C standards
. V9.11.03  30/10/2008  Peter Vela     CAR 182189
.           Don't check the doctor seen date/time for patients that
.           have a linked inpatient admission unless a current emergency
.           visit if being discharged.
. V9.11.02  08/10/2008  Ebon Clements  CAR 174068
.           Update bed board and expected patient file patients name
. V9.11.01  08/10/2008  Ebon Clements  CAR 174074
.           Populate hospital id in morgue management table
. V9.10.12  01/10/2008  Peter Vela     CAR 156875
.           Changed position of call to DATEVL00 in UPEM0000 to be 
.           before UPEMVIS1
. V9.10.11  12/08/2008  Ebon Clements  CAR 175464
.           Changed CRMED000 to request the highest medical record volume
. V9.10.10  05/08/2008  Ebon Clements  CAR 175414
.           Changed UPCLMD00 to only call update of PRFA if not
.           compensable and you are updating the registration details
. V9.10.09  01/08/2008  J.Tan   CAR 175246
.           Mods not to updating facility fee (CHGAE000)for disc./update
. V9.10.08  31/07/2008  Ebon Clements  CAR 175105
.           Set value of new var TYPCLAIM in DOCLMN00 if compensable to
.           fix update of PRFA from registration details screen.
. V9.10.07  31/07/2008  Jill Habasque  CAR 174982
.           Fixed to pack WTEPEDOB instead of WTEPPDOB with PMPXEDOB
. V9.10.06  25/07/2008  Ebon Clements  CAR 173412
.           Set value of CLAIMTYP cgi in DOCLMN00 if compensable to
.           fix update of PRFA from registration details screen.
. V9.10.05  01/07/2008  Jill Habasque  CAR 162660
.           Added CHKALR00 to update ptmxsin1 with new alert functionality
. V9.10.04  10/06/2008  Ebon Clements CAR 168256
.           Fixed DOCHIS00 display of first seen date/time if EMCNDDTM = 1
. V9.10.03  15/05/2008  Ebon Clements     CAR 166566
.           Added inform gp tag and cgi
. V9.10.02  05/05/2008  J.Tan          CAR 162313
.           Added Deposit status to comdepaf
. V9.10.01  30/04/2008  Jill Habasque  CAR 165994
.           Added WTEPEDOB for ESIS
. V9.09.26  11/04/2008  Ebon Clements  CAR 165984
.           Fixed key when writing to morgue table
. V9.09.25  09/04/2008  Ebon Clements CAR 165480
.           Fixed write/update of aaede1af in ZUNK0000 and UMAS0000
. V9.09.24  04/04/2008  Ebon Clements CAR 165534
.           Added print forms functionality to the triage pages - PFRM0000
. V9.09.23  18/03/2008  Peter Vela    CAR 160184
.           Added functionality for Automatic Med Rec Req for Emr Registration
. V9.09.22  14/02/2008  Ebon Clements CAR 159315
.           Added update of primary diagnosis when discharging
. V9.09.21  11/02/2008  Ebon Clements CAR 159717
.           Set values of websteaf in VERUSR70 even if no security for user
. V9.09.20  25/01/2007  Ebon Clements CAR 160167
.           Recompiled for EMRVISTM - Date selection list to display 365 days
. V9.09.19  08/01/2007  Ebon Clements CAR 158929
.           Added pack of KEY8 in FPRA9000 when writing patre1af records
. V9.09.18  17/12/2007  Ebon Clements CAR 140650
.           Added CLEDET00 to NEWPAT15 to clear expected patient file vars
. V9.09.17  12/12/2007  Peter Vela    CAR 151602
.           Added Auto record request functionality to UPEM0000
. V9.09.16  11/12/2007  Peter Vela    CAR 155520
.           Added calls to FPRA0000 and DOCLMN000 to UPCLMD00
. V9.09.15  15/11/2007  Ebon Clements CAR 151894
.           Added ward/bed request functionality
. V9.09.14  08/11/2007  Jill Habasque CAR 149561
.           Fixed branch in FRPA0000
. V9.09.13  01/11/2007  Ebon Clements  CAR 151800
.           Added EMCNRETC - Using retain patient cubicle in map functionality
. V9.09.12  31/10/2007  Peter Vela    CAR 151159
.           Add Morgue Management functionality
. V9.09.11  30/10/2007  J.Tan         CAR 151803
.           Recompiled for AAECHRG (Triage fee)
. V9.09.10  26/10/2007  Peter Vela    CAR 151199
.           Added new Emergency Cancellation status
.           26/10/2007  Ebon Clements CAR 152914
.           Removed clamflag cgi so UPCLMD00 will always update the PRFA
. V9.09.09  14/09/2007  Ebon Clements CAR 150226
.           Added PTCNUFFR - Using frame friendly
. V9.09.08  05/09/2007  Ebon Clements CAR 95394
.           Added patient folder overseas/ineligible CHKF0000
.           27/08/2007  Peter Vela   CAR 147747
.           Added variables for PATCOMN2 Cabrini Health UR format
. V9.09.07  20/08/2007  Steve Armstrong CAR 147953
.           Recompiled for changes to HL7ALERT.
.         - 10/08/2007  Steve Armstrong    CAR 145650
.           Added call to DGCLICEC when visit is updated to no longer be
.           an ACC (patwc1af) claim.
.           Added call to DGCLICEC when ACC (patwc1af) record is created.
. V9.09.06  10/08/2007  Peter Vela         CAR 147539
.           Added check for empty labeltyp before printing labels @ MAIN1800
. V9.09.05  09/08/2007  Jill Habasque      CAR 145547
.           Changed EMVIS101-105 to be dims instead of forms
. V9.09.04  26/07/2007  Peter Vela         CAR 145533
.           Added Stationery template forms submit to ReportNo=8
. V9.09.03  05/07/2007  Peter Vela         CAR 144548
.           Default PRA on emergency visit update SJOG
. V9.09.02  03/07/2007  Peter Vela         CAR 142173
.           Added default functionality to PRA if Claim Type is TAC, Vet
.           Affairs or Work Cover
. V9.09.01  21/06/2007  Peter Vela         CAR 142173
.           Added priitemf to LOKCOD00
.----------------------------------------------------------------------
. V9.08.11  25/05/2007  Jill Habasque      CAR 141653
.           Removed open of reslnkaf
. V9.08.10  07/05/2007  Neelkamal Pyla CAR 139467
.           Mods to NURTAB20, DOCTAB20 -Changed the code that displays Triage
.           Icon,Doctor Name and Nurse Name
. V9.08.09  19/04/2007  Peter Vela    CAR 126219
.           Fixed tag for EMRVISFD.EMVICOMP @ EMDL8400
. V9.08.08  12/04/2007  Peter Vela    CAR 126219
.           Recompiled for PMSPX2TM
. V9.08.07  12/04/2007  Peter Vela    CAR 126219
.           Added tags for EMRVISFD.EMVICOMP, EMRVISFD.EMVIFUND/EMVITABL
. V9.08.06  14/03/2007  Peter Vela    CAR 112999
.           Added validation for Active/Inactive Emergency Location @ PATLOC00
.           Remote Script for Emr Map View
. V9.08.05  19/02/2007 Janet George     CAR 132080
.           Modified to store the correct date format in PMWXLUPD
. V9.08.04  13/02/2007 Janet George         114378
.           Populated web user id field pmpxwbid (pmspx2af) 
. V9.08.03  29/01/2007 Peter Vela           127930
.           Added functionality for Auto Record Request from ED
. V9.08.02  06/11/2006 Peter Vela           122764
.           Removed LADM9200 validation - "Emergency visit is already Linked".
.           Allow update of linked visit.
. V9.08.01  03/11/2006 Sandra Barcham       97227
.           Mod to output user name instead of code
.----------------------------------------------------------------------
. V9.07.07  08/09/2006  Steve Armstrong CAR 107632
.           Added calls to HL7ALERT               
. V9.07.06  06/09/2006  Steve Armstrong    CAR 108060
.           Added calls to PMIGTNID prior to all DGCLI* routines so that
.           the nhi variables are set.
. V9.07.05  20/07/2006  Peter Vela    CAR 112999
.           Added default code to Location column if EMRLOC record not found
.           AUDHIS00
.           Added validation for Active/Inactive indicator EMR Location 
.           EMDL6800
. V9.07.04  22/06/2006  Peter Vela    CAR 104539
.           Added doctor and nurse default tags to ESCH0000
. V9.07.03  12/07/2006  Ebon Clements     CAR 103365
.           Added adm expected payor functionality
. V9.07.02  07/07/2006  Ebon Clements     CAR 103365
.           Added expected payor functionality to pmi add/update
. V9.07.01  03/07/2006  Ebon Clements    CAR 109801
.           Commented out <b> from DISNOT00
.----------------------------------------------------------------------
. V9.06.05  19/06/2006  Ebon Clements    CAR 105542
.           Added udpate of pmspx2af in UMAS0000 of pmspx2af cgis are received
. V9.06.04  08/06/2006  Steve Armstrong  CAR 108060
.           Recompiled for changes to UPDUR
. V9.06.03  06/06/2006  Sunil CAR 105057
.           Converted the SRCHPDOB to CCYYMMDD format
. V9.06.02  26/04/2006  Jill Habasque     CAR 97227 
.           Mods to output WBSENAM instead of code for clinical notes
. V9.06.01  21/04/2006  Ebon Clements     CAR 101705
.           Added check for left before seen by doctor to CHKNUR00 and CHKPSC00
.----------------------------------------------------------------------
. V9.05.04  31/03/2006  Ebon Clements     CAR 78527
.           Added hospital to current patients
. V9.05.03  22/03/2006  Ebon Clements     CAR 94905
.           Added visa number to pmsresaf
. V9.05.02  21/03/2006  Steve Armstrong   CAR 99223
.           Moved call to DGCLICUD to be triggered before visit record
.           is updated so that discharge date/time is still populated.
. V9.05.01  09/03/2006  Ebon Clements CAR 78533
.           Mods for PATCODTM - Hospital specific category codes
. V9.05.B04 17/02/2006  Peter Vela    CAR 95305
.           Added PTMSX049 - PTMXDEAF Hearing Cat DK
. V9.05.B03 30/01/2006  Ebon Clements CAR 93186
.           Mods for REDIRECT length change. Recompiled for IBAWEBDF
. V9.05.B02 14/12/2005  Steve Armstrong  CAR 88829
.           Recompiled for changes to DGCLICEC, DGCLICAE, DGCLICEC and
.           new DGCLICDI & DGCLICUD routines (for HL7 messages).
.           Added read on PMI details before sending broadcast messages.
.------------------------------------------------------------------------------
. V9.04.52  15/11/2005  Ebon Clements CAR 73252
.           Added RFRESH00 - redirect map content and reload menu frame
. V9.04.51  21/10/2005  Jill Habasque CAR 75952
.           Added write/update of pmsresaf
. V9.04.50  02/11/2005  Ebon Clements CAR 82339
.           Added read of pmspx2af in NEWPAT00
.           21/10/2005  Ebon Clements CAR 81121 
.           Added clear of emrvis file variables in NEWU0000
. V9.04.49  18/10/2005  Ebon Clements CAR 80456
.           Added showflag to PARDIR00 for concession card popup and UPDDIR00
.           for cal act registration redirect
. V9.04.48  17/10/2005  Ebon Clements CAR 80130
.           Added report 28 - LADM0000 to link inpatient admissions
. V9.04.47  26/09/2005  Ebon Clements CAR 56868
.           Recompiled for web user id in DEATHPOL
. V9.04.46  12/09/2005  Ebon Clements      CAR 61061
.           Added PTCNCOMF - Using compensable details patient folders
. V9.04.45  30/08/2005  Ebon Clements      CAR 72422
.           Changed to decease patient if discharge status is deceased
. V9.04.44  29/08/2005  Ebon Clements      CAR 57317
.           Skip clear of emrvisaf in UMAS0000 when creating a new ur and visit
. V9.04.43  25/08/2005  Ebon Clements      CAR 57209
.           Added TRIREDIR - triage redirect flag
.           Added TRIGUSER - Set triage nurse from user id
. V9.04.42  24/08/2005  Ebon Clements      CAR 70766
.           Recompiled for hcp file changes - Show free format local gp
. V9.04.41  22/08/2005  Ebon Clements      CAR 57315
.           Added new tag for next emergency visit - NXTV0000
. V9.04.40  19/08/2005  Ebon Clements      CAR 71403
.           Added new deleted by fields from OBSMDTFD
. V9.04.39  15/08/2005  Ebon Clements      CAR 70738
.           Added change first doctor seen functionality to DDTI0000
. V9.04.38  10/08/2005  Ebon Clements      CAR 57816
.           Added mandatory fields for discharge functionality
. V9.04.37  01/08/2005  Ebon Clements      CAR 67637
.           Added test to DATEVL08 to only check doctor date/time for visits
.           with linked inpatient admission when discharging emergency visit
. V9.04.36  29/07/2005  Ebon Clements      CAR 57835
.           Added observation data available tag - EMDL7300
. V9.04.35  27/07/2005  Ebon Clements      CAR 57309
.           Added defalut of presenting comp from expected pat on registration
. V9.04.34  20/07/2005  Ebon Clements      CAR 57811
.           Recompiled for EMRVISTM - Injury data available tag
.           11/07/2005  Ebon Clements      CAR 56056
.           Added missing fields to clear of expected patients file CLEDET00
.           Added UPCPAT00 to ALLEX00 to update current patient file name
.           08/07/2005  Mike Laming        CAR 63036
.           Change RDICD1 & RDICO1 to RDPTICD1/RDPTICO1 to use ICD10 V1-4
. V9.04.33  07/07/2005  Peter Vela         CAR 66408
.           Recompiled for IBAWEBCD
. V9.04.32  04/07/2005  Jill Habasque      CAR 61468
.           Added DOCLMN000                           
. V9.04.31  30/06/2005  Ebon Clements      CAR 62137
.           Added Pack webuseid with SP70 in SETPAR00
. V9.04.30  10/06/2005  Jill Habasque      CAR 61761
.           Recompiled for IBAWEBCD - Title selection list
. V9.04.29  07/06/2005  Jill Habasque      CAR 60165
.           Added call to WESIS000 when updating pmspx2af
. V9.04.28  01/06/2005  Peter Vela         CAR 60166
.           Recompiled for EMRCONFD
. V9.04.27  30/05/2005  Ebon Clements      CAR 59676
.           Added NOTEORDR for display management/clinical notes order
. V9.04.26  03/05/2005  Jill Habasque      CAR 52841
.           Added <br> in TABCOD00  
. V9.04.25  29/04/2005  Peter Vela         CAR 55214
.           Recompiled for MRTCONFD
. V9.04.24  12/03/2005  Ebon Clements      CAR 58443
.           Added option to print bradma labels
. V9.04.23  18/03/2005  Ebon Clements      CAR 58443
.           Added security alerts to set PTMXSIN1 to 2 if security alerts exist
.           TCINDC4 = S
. V9.04.22  07/03/2005  Steve Armstrong    CAR 59137
.           Recompiled for changes to CISINADT, HL7CISIN & HL7CISVR
. V9.04.21  07/03/2005  Peter Vela        CAR 57547
.           Recompiled for PATVADFD and PATVADIO
.           22/02/2005  Jill Habasque     CAR 58007
.           Fixed update of watespaf for medicare reference
. V9.04.20  04/02/2005  Ebon Clements     CAR 56056
.           Added EMEXEXPL tag to EMDL0000
. V9.04.19  31/01/2005  Ebon Clements     CAR 57475
.           Moved VALLOC00 before CLEMRVIS in UMAS0000 as it re read emrvisaf
. V9.04.18  31/01/2005  Ebon Clements     CAR 53466
.           Recompiled for VISCMTCD
. V9.04.17  28/01/2005 Peter Vela     CAR 56546
.           Unlock Clinical Notes (viscmtaf) after error message display.
. V9.04.16  25/02/2005 Ebon Clements  CAR 56789
.           Set values of websteaf in VERUSR00 even if no security is set for 
.           the update type. WBSTUID is used for writing history
. V9.04.15  24/01/2005 Ebon Clements  CAR 56722
.           Added update of doctor seen date/time from supervisor screen
.           if the arrival date/time is changed for a triage cat 1 patient
. V9.04.14  24/01/2005 Ebon Clements  CAR 56364
.           Added print emergency labels at triage PLAB0000
. V9.04.13  24/12/2004 Ebon Clements  CAR 56056
.           Added new fields to expected patient processing
.           Added visit based comments processing VISMDTFD and VISMTXFD
. V9.04.12  21/12/2004 Ebon Clements  CAR 55262
.           Changed VALLOC00 & UPDLOC00 to test for WR and 00 using location 
.           room type
.           01/12/2004 Jill Habasque  CAR 54731
.           Added call to WESP0000
. V9.04.11  23/11/2004  Davin             CAR 34707
.           Changed CHKCCD00 to return "1" if at least one valid concession
.           card exists
. V9.04.10  28/10/2004 Ebon Clements  CAR 53787
.           Redirect to single click screen and load update pmi details 
.           after emr registration.
. V9.04.09  21/10/2004 Ebon Clements  CAR 54531
.           Pack locacode with spaces in setpar
. V9.04.08  20/10/2004  Ebon Clements     CAR 54085
.           Added EFRDIS00 to default emergency departure date/time if
.           discharged from EMG ward/bed
. V9.04.07  18/10/2004  Ebon Clements     CAR 54197
.           Added new tag for emrwfmaf mandatory field status
.           14/10/2004  Ebon Clements     CAR 54202
.           Added SHOWFLAG for concession card popup and redirect
.           12/10/2004  Ebon Clements     CAR 53466
.           Recompiled for removal of changes in V9.03.43 VISCMTCD
. V9.04.06  08/10/2004  Ebon Clements     CAR 54148
.           Added CHKDTE00 to UMAS0000 to check arrival date/time is in the past
. V9.04.05  06/10/2004  Peter Vela        CAR 49647
.           Recompiled for UPDUR
.           04/10/2004  Ebon Clements     CAR 54001
.           Fixed STVIS000 cgi update emvis109 is EMVIUR04 not EMVIUN04
.           Only check time in CHKDTE00 if EMVIDATE is equal to current date
. V9.04.04  29/09/2004  Peter Vela        CAR 53711
.           Separated Medical History header line DISPNT00
. V9.04.03  27/09/2004  Ebon Clements            CAR 53266
.           Multi hospital changes for ADDVIS00 - medical record link
.           17/09/2004  Peter Vela        CAR 53466
.           Recompiled for VISCMTCD
.           Declared BLNKFLAG
.           Allow blank lines in Diagnosis textbox
.           23/09/2004  Davin             CAR  53679
.           Changed medical notes variable (mednotes) to be 100 chars
. V9.04.02  30/08/2004  Davin             CAR  52594
.           Added tag for default location to waiting room
.           Changed to not populate triage date/time if no triage category
. V9.04.01  26/08/2004  Jill Habasque     CAR 52930
.           Added write/update of pmvxmhos
.           25/08/2004  Ebon Clements     CAR 52976
.           Added EFRADM00 - Check bed type for emergency admission
.--------------------------------------------------------
. V9.03.41  30/07/2004  Davin             CAR  34707
.           Added concession card check
.           28/07/2004  Jill Habasque CAR 50611
.           Added new NZ ACC fields
. V9.03.40  15/07/2004  Jill Habasque CAR 51539
.           Added call to DEEMINC1 after "Patient Discharged" message
. V9.03.39  28/06/2004  Steve Armstrong      CAR 51167
.           Recompiled for changes to HL7CISIN
. V9.03.38  07/06/2004 Peter Vela    CAR 49016
.           2004 Statutory Changes - recompiled for PMSPX2TM
. V9.03.37  25/04/2004 Ebon Clements CAR 49875                          
.           Added reads and tag for episode of care ACC number - ECRFACCN
.           26/04/2004  Steve Armstrong   PAS-CIS Product Integration
.           Recompiled for changes in UPDUR to call CISA31BR    CAR 49679
. V9.03.36  29/03/2004  Peter Vela   CAR 13038
.           Recompiled for PATDOCCD - Doctor Name Format Parameter
.           24/03/2004 Ebon Clements CAR 18703
.           Added transfer source date validations
. V9.03.35  15/03/2004 Guomin Fu     CAR 47219
.           Fixed in CHKDOC to override "mandatory" status of
.           "Doctor Seen Date/time","Nurse Seen date/time" and "Diagnosis"
.           when discharge status is "11" or "10".
. V9.03.34  10/03/2004 Guomin Fu     CAR 47828
.           Recompiled for UPDUR
.           10/03/2004 Ebon Clements CAR 48159
.           Fixed tag for EMEXURNO
. V9.03.33  27/02/2004 Guomin Fu     CAR 47219         
.           Fixed in VICD000 so patients are not displayed in
.           doctor's incomplete list as "Diagnosis" required even
.           when Diagnosis is filled.
. V9.03.32  25/02/2004 Ebon Clements CAR 47677
.           Changed CHGDT000 to allow the arrival and doctor seen date/time
.           to be the same for triage category 1 patients.
. V9.03.31  23/01/2004 Ebon Clements CAR 38490 and 46979
.           Recompiled for MRTVISCD - Auto create medical records             
. V9.03.30  09/01/2004 Peter Vela    CAR 45795
.           Added tag for emergency doctors in emergency doctors shift change
. V9.03.29  06/01/2004 Sylvek Litewka CAR 39867
.           Changed processing of CGI variables EMVIS017 and EMVIS018 to be
.           initialaised with and checked against Z70 instead of SP70.
. V9.03.28  18/12/2003 Peter Vela     CAR 43134
.           Recompiled for MRTCONFD
. V9.03.27  15/12/2003 Ebon Clements  CAR 45481
.           Mods for PMSCURFD file change - added outpatient site
. V9.03.26  05/12/2003 Ebon Clements  CAR 44092
.           Changed the cancel visit deposit error to user the new rcp files
. V9.03.25  12/11/2003 Ebon Clements  CAR 44092
.           Added an error if you try to cancel a visit with a deposit
. V9.03.24  12/11/2003 Peter Vela    CAR 44734
.           Fixed Update to Current Patient Search file
.           30/10/2003 Peter Vela    CAR 43016
.           Put validation for departure status 10 back when validat-
.           ing against mandatory fields nurse/doctor date/time.
. V9.03.23  28/10/2003 Ebon Clements  CAR 44623
.           Changed mandatory fields to use category EZ for responsibility
. V9.03.22  24/10/2003  J.Tan  CAR 44172
.           Recompiled for AAEDTRFD - added credit note
. V9.03.21  24/10/2003  Steve Armstrong   CAR 38016
.           Mods to use standard CLEMRVIS instead of local CLEMRDET
.           21/10/2003 Ebon Clements CAR 44496
.           Recompiled for EMRDOCFD
. V9.03.20  20/10/2003 Peter Vela    CAR 23608
.           Added Update to Current Patient Search file (pmscuraf) in
.           discharge of patient
. V9.03.19  13/10/2003 Davin         CAR 39038
.           Recompiled for change to viscmtfd & obsmtxfd
.           13/10/2003 Ebon Clements CAR 44193
.           Changed VERUSR00 to not check server security if the updated type
.           has no security level set.
. V9.03.18  07/10/2003 Peter Vela    CAR 42905
.           Ported over further 2003 Stat Changes from V5.11
. V9.03.17  03/10/2003 Peter Vela    CAR 41114
.           Recompiled for WEBEMRCM
. V9.03.16  01/20/2003 Ebon Clements CAR 40414
.           Added standard TAC validations
. V9.03.15  05/09/2003 Ebon Clements CAR 42971
.           Changed UPDURT00 to make the wait time EMVIDURN zero if
.           the patient has not been seen. ie EMVIDRDT and EMVIDRTM blank
. V9.03.14  28/08/2003 Ebon Clements CAR 42877
.           Added EMCNDDTM and updated WRTHIS00. This parameter will use
.           the keyed in doctor date and time not the current date and time
.           27/08/2003 Jill Habasque CAR 42877
.           Added HISTTYPE
. V9.03.13  26/08/2003 Peter Vela    CAR 42825
.           Recompiled for EMRVISTM
. V9.03.12  25/08/2003 Ebon Clements CAR 42813
.           Recompiled for EMRSITFD changes that were missing in V9 that
.           had been made in 5.09 - EMSTDLOC
.           25/08/2003  Peter Vela    CAR 42744
.           Assigned PTMSX048 directly to PTMXMCCD (Medicare Code)
. V9.03.11  22/08/2003  Peter Vela   CAR 42450
.           Do not check for mandatory fields if dep status of patient is
.           "Left before seen by doctor"
. V9.03.10  21/08/2003  Jill Habasque
.           Added emrdocaf
. V9.03.09  05/08/2003  CAR 42055   Peter Vela
.           Added update to Resident Status in patvisaf
. V9.03.08  15/08/2003  CAR 41395   Henry Son
.           Added Check to EMVIYN02(C-Type).
.           If C-Type is 1-yes then set Status to 2-Inc. Disc.
. V9.03.07  11/06/2003 Jill Habasque    CAR 39505
.           Added update of prepat in upem0100      
.           11/06/2003 Ebon Clements    CAR 38099
.           Added read of the visit extn file in UPEM0000 for VEMD - PMVXUSAC
. V9.03.06  27/05/2003 Ebon Clements    CAR 38099
.           VEMD Mods added update of PMVXINTR,PMVXABRG and PMVXLNG1
. V9.03.05  27/05/2003 Lina Vo          CAR 37504
.           Write SLA/ASGC code from ibapostf to visit extension table for 
.           for emergency admisson & update.
.           27/05/2003 Ebon Clements    CAR 38099
.           VEMD Mods added update of PMVXINTR,PMVXABRG and PMVXLNG1
. V9.03.04  20/05/2003 Lina Vo          CAR 38677
.           Mods to DDTI0000 & NRTI0000 to call WRTHIS00 with updttype=ERROR.
. V9.03.03  19/05/2003 Lina Vo          CAR 38501
.           Mods to DISC0000 to call DISLOC00 before setting CHGSTAT in DISC1010
. V9.03.02  15/05/2003 Lina Vo          CAR 38501
.           Added EMCNDOCT tag                                                
. V9.03.01  09/05/2003 Ebon Clements    CAR 38892
.           Added UPFOLD00 to update pmi folder details when TAC,WORK or VET   
.           details are added and updated.
.           09/05/2003 Lina Vo
.           Mods to CLINOT00 & DIADTX00 to read emrvisaf for WRTHIS00. 
.           WRTHIS00 was writing to the wrong visit.
.--------------------------------------------------------
. V9.02.84  09/04/2003 Lina Vo          CAR 37659
.           Added "|" dividers in Medical Notes display (DISPNT00) to separate
.           each note line. Display error with textarea wrapping.
.           08/04/2003 Ebon Clements    CAR 37959
.           Mods to claim details function UPCLMD00 for TAC,WORK and VET      
. V9.02.83  24/03/2003 Lina Vo          CAR 35435
.           Mods to DOCHIS00 & NURHIS00 to display arrival date & time on the
.           Doctor & Nurse Handover History list.
. V9.02.82  24/03/2003 Lina Vo          CAR 36796
.           Mods to DISC0000 to write waiting time to EMVIDURN. 
.           Mods to UPDURT20 to use discharge date & time on discharge screen
.           if there is no doctor seen date & time to calculate waiting time.
.           Added CALCWAIT cgi field to recalculate waiting time for update
.           discharge functionality.
. V9.02.81  21/03/2003 Lina Vo          CAR 37045
.           Mods to UPEM0000 to save previous address.          
.           20/03/2003 Peter Vela       CAR 37438
.           Recompiled for EMRVISTM - Added new tag (EMRA8500)
. V9.02.80  18/03/2003 Lina Vo          SRF37098
.           Make history Date & time in WRTHIS00 same as 
.           triage/arrival date & time for new registrations.
. V9.02.79  27/02/2003 Lina Vo          SRF34682
.           Recompile for VISCMTCD. 
.           Add check for blank lines in GETPRE00 and GETDIA00
. V9.02.78  17/02/2003 Lina Vo          SRF35915
.           Added new CHKDN000 to validate doctor & nurse code before updating 
.           emergency visit in UPEM0000. 
. V9.02.77  07/02/2003 Tonii CAR 35992
.           Recompiled for PATMISTM - inactive codes in patfundf
. V9.02.76  28/01/2003  Sylvek Litewka  SRF 22693
.           Added read and display of PTCNUEOC for link to EOC ACC screens.
. V9.02.75  16/01/2003  Sylvek Litewka  SRF 34772
.           Added UPDTTYPE "SVDIS" (Supervisor Discharge) in DISC0000 
.           procedure.
.           10/01/2003  Sylvek Litewka  SRF 34771
.           Set UPDTTYPE to "MOVEL" in PATLOC00 procedure before writing to
.           history file.
. V9.02.74  18/12/2002  Jill Habasque   SRF 34675
.           Changed to use the VEMD code to read the matrix
. V9.02.73  11/12/2002  Ebon Clements            SRF 23449
.           Recompiled for EMRCHMAN - Z099 primary diagnosis visit number
. V9.02.72  10/12/2002 Jill Habasque SRF 34324
.           Changed CHKADM00 to loop through patvisaf to find the latest visit
. V9.02.71  26/11/2002 Ebon Clements SRF 22706
.           Changed procudure list for clinicals page to not diplay procedures
.           if the delete flag is set to yes
. V9.02.70  25/11/2002  Ebon Clements            SRF 23449
.           Recompiled for EMRCHMAN - Z099 primary diagnosis
. V9.02.69  21/11/2002  Pat Dirito               SRF 33644
.           Fixed read of PTCNI10D was reading incorrect position
. V9.02.68  13/11/2002 Ebon Clements SRF 22705
.           Added report 16 patient notes                    
. V9.02.67  29/10/2002 Ebon Clements SRF 23044
.           Added MAIN2500 nurse seen date and time update
.           Added edit checks to doctor and nurse seen date and time updates
. V9.02.66  09/10/2002 Peter Vela    SRF 17693
.           Recompiled for PATMISTM - Admitting Point
. V9.02.65  30/09/2002 Ebon Clements SRF 17768                
.           Added update of pmi variable PREPAT in UPCLMD30
. V9.02.64  25/09/2002 Ebon Clements SRF 20300                
.           Added new tag EMDL5200 for the injury data mandatory flag
. V9.02.63  19/09/2002 Ebon Clements SRF 20539 20540 20542
.           Added new routine EFRBTY00 for the EFR bed type tag         
.           16/09/2002  Jill Habasque SRF 20302 
.           Added EMRCHMAN                                              
. V9.02.62  10/09/2002  Jill Habasque SRF 20497 
.           Added delete of emrincaf record when removing a visit       
. V9.02.61  09/09/2002  Jill Habasque SRF 20326 
.           Fixed saving of EMVITRDT (not to always be the current date)
. V9.02.60  15/08/2002  Steve Downing  SRF 14635
.           Added ETHDES1-3 for changes to PATDETNT
. V9.02.59  13/08/2002 Ebon Clements SRF 20721
.           Fixed size of PTMAS cgi variable address fields
.           Changed reads in UPIN0000 to validate the correct admission 
.           and diagnosis
. V9.02.58  24/07/2002 Bronko sosic          
.           Added a new flag to ignore the date/time cheack for 
.           updating enrvisaf                 
. V9.02.57  09/07/2002 Jill Habasque SRF 19459
.           Added read of pmxpx2af before update               
. V9.02.56  05/07/2002 Jill Habasque SRF 19273
.           Added given name and UR to pmscuraf
. V9.02.55  28/06/2002 Ebon Clements SRF 19105
.           Recompiled for sigpipe trap
. V9.02.54  27/06/2002 Bronko sosic
.           Changed C-type for ST V. so it works out on doctor date/time
.           I wish they could make up their minds!
. V9.02.53  24/06/2002  Tonii SVHM Transition II Extract 7
.           Changed format of read and write of cciex7af 
. V9.02.52  21/06/2002 Jill Habasque
.           Changed to move injury code to EMVINATI instead of EMVIUC08  
. V9.02.51  13/06/2002 Bronko sosic
.           Changed C-type for ST V. so it works out on triage date/time
.           I wish they could make up their minds!
. V9.02.50  06/06/2002 J.Tan
.           Recompiled for AAECHRG I*D on aaedtref
. V9.02.49  25/05/2002 Bronko sosic
.           Changed C-type to include the nurse or doctor
. V9.02.48  15/05/2002 Bronko sosic
.           Added a new NXTPAG00 option 11
.           14/05/2002  J.Tan
.           Recompiled for PATMISTM - added casemix code
. V9.02.47  03.05.2002 Steve Armstrong   Defect No. 3681
.           Recompiled for changes to DGCLICAE, DGCLICEC and DGCLICCE.
.           (Mods to not send Emergency broadcast messages for "0" U/R numbers.)
. V9.02.46  23.04.2002 Bronko Sosic
.           Added a RDAMAS1 on CGI updating EMVIURNO 
. V9.02.45  22.04.2002 Bronko Sosic
.           Added Option for printing Inpatient forms in EMR
. V9.02.44  21.04.2002 B.G.Ackland
.           Set Flag for Presenting Compliant Comments
. V9.02.43  12.04.2002 Bronko Sosic                      
.           New option main2400 to change the doctor seen date and time  
. V9.02.42  12.04.2002 Bronko Sosic                      
.           Changed VALLOC00 and UPDLOC00                                
. V9.02.41  12.04.2002 Bronko Sosic                      
.           Changed output of table for Doctor Handover                  
. V9.02.40  12.04.2002 Tonii SVHM Transition II extract 7
.           Removed the changes below, added to EMRWEB08 instead
.           Added call to SAVESVHM, wrong records were being updated
. V9.02.39  11.04.2002 Tonii SVHM Transition II extract 7
.           Made to read the emergency history table to check whether or not 
.           the doctor code has been changed 
. V9.02.38  11.04.2002 Bronko Sosic                      
.           changed the way the text area is saved for Expected Patients
.           11.04.2002 Tonii SVHM Transition II extract 7
.           Removed any check for changes to patient master details when 
.           determining whether a cciex7af records needs to be created
. V9.02.37  10.04.2002 Tonii SVHM Transition II extract 7
.           Added extra check for EMVISTAT before writing to cciex7af
. V9.02.36  05.04.2002 Tonii SVHM Transition II extract 7
.           Made to include EMVISTAT 2 and 3 when validating the conditions 
.           for Extract 7
. V9.02.35  04.04.2002 Tonii SVHM Transition II extract 7
.           Made to read in CCCNSVHM parameter
.           Changed to write to cciex7af file only when emr patient is disch.
. V9.02.34  28.03.2002 Bronko Sosic
.           Recompiled for EMRICDFD
. V9.02.33  24.03.2002 B.G.Ackland
.           More Remote Scripts
. V9.02.32  22.03.2002 Ebon Clements 
.           Changed Category of EMDARECD to cat EC was ex
. V9.02.31  19.03.2002 B.G.Ackland
.           Fix Discharge Map Location
. V9.02.30  19.03.2002 B.G.Ackland
.           Fix Discharge Map Location
. V9.02.29  19.03.2002 B.G.Ackland
.           Fix Discharge Map Location
. V9.02.28  19.03.2002 B.G.Ackland
.           Fix Clinical Notes & Management Notes
. V9.02.27  17.03.2002 B.G.Ackland
.           Fix Location for Discharged Patients
. V9.02.26  17.03.2002 B.G.Ackland
.           C-Type Admission
. V9.02.25  17.03.2002 B.G.Ackland
.           Fix Diagnosis Update
. V9.02.24  17.03.2002 B.G.Ackland
.           Fix Medical History Display
. V9.02.23  17.03.2002 B.G.Ackland
.           Move UR from Visit file in for 0 UR
. V9.02.22  09.03.2002 B.G.Ackland
.           Remove Write of Primary Diagnosis for Injury Data
. V9.02.21  04.03.2002 B.G.Ackland
.           Make sure Incomplete Table Written on Triage
.           04.03.2002 Ebon Clements
.           Mods to STVIS000 for check box cgi variables emvis100 and emvis147
. V9.02.20  28.02.2002 Bronko
.           Added new cgi that passes through undischarge patient           
. V9.02.19  24.02.2002 Bronko
.           Changed CHKINC00                                                
. V9.02.18  18.02.2002 Bronko
.           changed Redirect from discharge                                 
. V9.02.17  31.01.2002 Bronko
.           changed Functionality within Map View                           
. V9.02.16  21.01.2002 Davin
.           Send CAE,CEC,CCE broadcast messages when changing emr visit file
. V9.02.15  21.12.2001 Jill Habasque
.           Added write to the current patient table
. V9.02.14  20.12.2001 Bronko Sosic
.           Changes to the discharge process
. V9.02.13  26.11.2001 Bronko Sosic
.           Changes For St.V
. V9.02.12  26.11.2001 Bronko Sosic
.           Removed EMRDOCFD
. V9.02.11  26.11.2001  J.Tan
.           Mods for emergency billing
. V9.02.10  22.11.2001  Bronko Sosic                               
.           Changed label print to check for forms
.           and print them as well
. V9.02.09  20.11.2001  B.G.Ackland                       
.           Remove pi's from Program
. V9.02.08  18.11.2001 Bronko
.           Added option MAIN2100 MAIN2200 MAIN2300 Remote script for
.           Map view               
. V9.02.07  22.10.2001 J.Tan
.           Mods for billing
.           08/11/2001 Mike Laming
.           Rename DGCLIUPM to DGCLICUP
. V9.02.06  28.09.2001 Bronko
.           Fix VEMD Matrix for EMR               
. V9.02.05  27.09.2001 Bronko
.           Fix injury data not being registered.
. V9.02.04  17.09.2001 Harvider
.           Modified to add discharge process from the supervisor screen
. V9.02.03  10.09.2001 Harvider
.           Modified for Health fund Table.
. V9.02.02  08.09.2001 Harvinder
.           Fixed Jump Queue, Location validation,
.           Patient Deceased validation
. V9.02.01  30.08.2001 Raghu, Harvinder
.           New routines for incomplete mandatory fields,
.           Compiled for EMRHISFD file, fixed audit history
.           Modified for writting to visit extension file    
. V9.01.02  16.08.2001 J.Tan
.           Recompiled for PATMASTM
. V9.00.001 13.08.2001 J.Tan
.           Recompiled for PATMASTM
. V9.00.10  13.08.2001 kuldeep - HPS
.           Modified for updation of waiting patient 
. V9.00.09  13.08.2001 kuldeep - HPS
.           Modified for updation of expected patient functionality 
. V9.00.08  12.08.2001 Surve - HPS
.           Modified for Incomplete Doctor/Nurse
. V9.00.07  12.08.2001  Harvinder - HPS
.           Modified for Triage category code.
. V9.00.06  11.08.2001  Harvinder - HPS
.           Changed for arrival time and date.
. V9.00.05  09.08.2001  HPS
.           Modified for Triage Nurse and Attending Nurse
.           Doctor 
. V9.00.04  08.08.2001  HPS
.           Modified for Emergency Patient Clinical Details
.           medical history date/time/webuserid 
. V9.00.03  07.08.2001 Saiprasad - HPS
.           Modified in EMRVISTM for expected ward.
. V9.00.02  03.08.2001 B.G.Ackland
.           Modified for Triage date
. V9.00.01  02.08.2001 Harvinder -HPS
.           Expected Patient and Triage Patient Functionality added
. V9.00.B06 13.07.2001 Sandra Barcham
.           Replaced GP with HCP
. V9.00.B05 20.06.2001 Dean Cramer  
.           Fields changes and additions to EMRVISFD 
.           require alterations to CGI's for that file
.           aswell as changes to EMRVISTM
. V9.00.B04 14.06.2001 B.G.Ackland
.           Recompile for Changes to PATMASTM
. V9.00.B03 30.05.2001 B.G.Ackland
.           Remove MAPREG00 CALL
. V9.00.B02 18.05.2001 B.G.Ackland
.           Remove ALLOC000 Code 
. V9.00.B01 17.05.2001 B.G.Ackland
.           Re-organised Code for options 3 & 5 to be removed
.--------------------------------------------------------
.                 V5.10.B04  3/04/2001 Glenn Saunders
.                            Remove access to PTCNSNDX and associated processing
.                            Remove all references to PATSUR file (old surnames)
.                            Replace WEBEMCM2 with PATCOMN2 (now web-verted)    
.                 V5.10.B03 03.04.2001 Ebon Clements
.                           Recompiled for PMSPX2FD layout changes    
.                 V5.10.B02 23.03.2001 Ebon Clements
.                           Added write to PMSPX2FD master extn2 file
.                 V5.10.B01 27/02/2001 J.Tan
.                           Added new fields to patwmabf file
.                           23.03.2001 Katie Nelson
.                           Ported bug fixes from 5.08
.                 V5.09.03  06/02/2001 Katie Nelson  
.                           Fixed code in ALLEX000 to save alias srf - 8289
.                           Recompiled for MRTVISCD 
.                           Recompiled for PATMASTM 
.                 V5.09.02  04/01/2001  Bronko Sosic
.                           Added include MRTVISCD to write a file to
.                           MRTVISFD when a visit is added
.                 V5.08.12  05/10/2000 Katie Nelson
.                           Added open routine for surname files
.                 V5.08.11  05/10/2000 Katie Nelson
.                           509 Changes  
.                 V5.08.10  15/09/2000  Pat Dirito
.                           Recompiled for EMRVISTM
.                 V5.08.08  16/08/2000  Caleb Sharman
.                           Changed Health Fund variables to be 8 chars
.                 V5.08.07  22/08/2000  J Habasque 
.                           Added Detente variables
.                 V5.08.06  23/06/2000  B.G.Ackland
.                           Various Fixed
.                 V5.08.05  22/06/2000  B.G.Ackland
.                           Injury Data Defaults
.                           22/06/2000  B.G.Ackland
.                           Fix Membership Number Saving to Masterfile
.                           19/06/2000  B.G.Ackland
.                           Check all RK & RP Calls for incorrect looping
.                           No longer populates injury data descrription with
.                           diagnosis. Does what it used to. Populates with .
.                           triage complaint line.
.                           19/06/2000  B.G.Ackland
.                           Strip Trailing Spaces from Complaint Fields
.                           19/06/2000  B.G.Ackland
.                           Change Order for Transfer Source to Alpha
.                 V5.08.04  15/06/2000  Pat Dirito 
.                           Added Flag REGSFLAG to ALLOC000 for patient
.                           registration 
.                 V5.08.03  10/06/2000  Pat Dirito 
.                           Changed Injury Surv to validate Body Region &
.                           Nature of Injury, Also display default Primary
.                           Diagnosis, if no injury data.. Write injury data    
.                           to Emr Visit Coding File
.                           Changed STVIS000 to save Health Fund Code & table
.                           to PMI 
.                           07/06/2000  Bronko Sosic
.                           Recompiled for PATMASTM
.                 V5.08.02  11/05/2000  Pat Dirito
.                           Fixed Image for relative pathing
.                 V5.08.01  08/05/2000  Nicole harrington
.                           Recompiled for changes to EMRVISFD
.----------------------------------------------------------------------
. Modifications : V5.07.11  30/03/2000  Nicole harrington
.                           Changed error mesage when validating site
.                 V5.07.10  29/03/2000  Nicole harrington
.                           Fixed writing of patvisaf for zero u/r
.                 V5.07.09  06/03/2000  Nicole harrington
.                           Removed VALUR000 from CHKUR000
.                 V5.07.08  02/03/2000  Nicole harrington
.                           Added alert if merged U/R
.                 V5.07.07  15/02/2000  Nicole harrington
.                           Added debugs to track down I*C - DBGCLS00
.                 V5.07.06  02/02/2000  Nicole harrington
.                           Fixed I*C - moved one to exit in NEWPAT00 after 
.                           calling WEBERR00 (NEWPAT90)
.                 V5.07.05  28/01/2000  Nicole harrington
.                           Minor mods after porting to 6.06
.                 V5.07.04  19/01/2000  Nicole harrington
.                           Changed ALLOC000 to redirect registration to 
.                           PROC0000 if not a zero U/R for new standards
.                 V5.07.03  17/01/2000  Nicole harrington
.                           Added validation of accident dates - VALCLM00
.                 V5.07.02  12/01/2000  Nicole harrington
.                           Changed open of PATWC1A1 to call OPPTWCO1
.                 V5.07.01  20/09/1999  Nicole harrington
.                           Changes for Ballarat
.                 V5.07.00  20/07/1999  Nicole Harrington
.                           Ported from 6.06 - 5.07                
.----------------------------------------------------------------------
.                 V6.06.01  07/07/1999  Nicole Harrington
.                           Added results available link to server
.                 V6.06.00  23/02/1999  Nicole Harrington
.                           Modified skeleton server to create program
.
.----------------------------------------------------------------------
          INC       IBAWEBDF    
          INC       WEBDATDF    
          INC       VISCMTDF
          INC       RSHWEBDF
.
          INC       MULTVISV/INC        * PATDPATH variables          *I-250985
          INC       PATDPTHV/INC        * PATDPATH variables          *I-250985
          INC       ABFVARS/INC
.
          INC       PATFINFD/INC
.
          INC       AAEDE1FD/INC
          INC       AAEDEBFD/INC
          INC       AAEDI1FD/INC
          INC       ACCAUDFD/INC            * New ACC Audit file
          INC       ALLCONFD/INC
          INC       ALLREFFD/INC
          INC       AAEDTRFD/INC
          INC       ALLTMPFD/INC
          INC       APSMASFD/INC
          INC       BOKRC1FD/INC
          INC       BOKRX1FD/INC
          INC       EOCLNKFD/INC
          INC       EOCREFFD/INC
          INC       CCICONFD/INC
          INC       CCIEX7FD/INC
          INC       COMDEPFD/INC            * Receipting deposit details
          INC       DEATHATD/INC
          INC       DISMASFD/INC
          INC       DISPATFD/INC
          INC       DISPTLFD/INC
          INC       DTTMADVR/INC
          INC       EMRCHAFD/INC
          INC       EMRCLIFD/INC
          INC       EMRCLITD/INC
          INC       EMRCONFD/INC
          INC       EMRDAYFD/INC
          INC       EMRDCMFD/INC            * Diagnosis comment file
          INC       EMRDLAFD/INC
          INC       EMRDOCFD/INC
          INC       EMRTHSFD/INC            * Emergency Telehealth Services
          INC       EMREXPFD/INC            * Emergency expected patients table
          INC       EMRGRCFD/INC
          INC       EMRHISFD/INC
          INC       EMRICDFD/INC
          INC       EMRINCFD/INC            * Incomplete Visit table
          INC       EMRINVFD/INC
          INC       EMRISMFD/INC            * Incomplete visit summary table
          INC       EMRKEDFD/INC
          INC       EMRLOCFD/INC
          INC       EMRLPCFD/INC
          INC       EMRMTXFD/INC
          INC       EMRPROFD/INC
          INC       EMRSECFD/INC
          INC       EMRSITFD/INC
          INC       EMRTRFFD/INC
          INC       EMRUNKFD/INC
          INC       EMRUTYFD/INC
          INC       EMRVCDFD/INC
          INC       EMRVDGFD/INC
          INC       EMRVISFD/INC
          INC       EMRVPRFD/INC
          INC       EMRWFMFD/INC
          INC       IBAPOLFD/INC
          INC       IBAPOSFD/INC            * Postcode file          
          INC       MEHLERFD/INC
          INC       MRTCONFD/INC
          INC       MRTMASFD/INC
          INC       MRTHISFD/INC
          INC       MRTMOVFD/INC
          INC       MRTVISFD/INC
          INC       MRTRQHFD/INC
          INC       MRTRQDFD/INC
          INC       NHIETHFD/INC 
          INC       NHIMASFD/INC
          INC       OBSMDTFD/INC            * Patient Medical Notes
          INC       OBSMTXFD/INC            * Patient Medical Notes Free text
          INC       OBSDETFD/INC
          INC       OBSPCOFD/INC
          INC       OPRNURFD/INC            * Nurse file
          INC       OUTBOAFD/INC
          INC       OUTSITFD/INC
          INC       PATAK1FD/INC
          INC       PATALRFD/INC
          INC       PATAM1FD/INC
          INC       PATCALAG/INC
          INC       PATCFAFD/INC
          INC       PATCMCFD/INC
          INC       PMSUCHFD/INC
          INC       PMSUCDFD/INC
          INC       EMRECHFD/INC
          INC       EMRECLFD/INC
          INC       PATMASTD/INC
          INC       PATCOMM/INC
          INC       PATCONFD/INC
          INC       PATCRCFD/INC
          INC       PATDHEAD/INC
          INC       PATDO1FD/INC
          INC       PATDSCFD/INC
          INC       PATECDFD/INC
          INC       PATEORFD/INC
          INC       PATFN1FD/INC 
          INC       PATFX1FD/INC
          INC       PATFHIFD/INC
          INC       PATGSRFD/INC
          INC       PATHOSFD/INC                                      *I-250985
          INC       PATICDFD/INC
          INC       PATICOFD/INC
          INC       PATIN1FD/INC
          INC       PATINVFD/INC
          INC       PATIPEFD/INC
          INC       PATITMFD/INC
          INC       PATATRFD/INC
          INC       PATATRTD/INC
          INC       PRIITMFD/INC
          INC       PATLOCFD/INC
          INC       PATMA1FD/INC
          INC       PATONLFD/INC
          INC       PMSDAUFD/INC
          INC       PMSBBDFD/INC
          INC       PMSBRQFD/INC
          INC       PMSVMTFD/INC
          INC       PMSCEXTD/INC
          INC       PMSCEXFD/INC
          INC       PMSEPBFD/INC
          INC       PMSEXTTD/INC
          INC       PMSEXTFD/INC
          INC       PMSRELFD/INC
          INC       PMSRESFD/INC
          INC       PMSTLEFD/INC
          INC       PMSPAYFD/INC
          INC       PATMI1FD/INC
          INC       PATMRGFD/INC
          INC       PATNIDFD/INC
          INC       PATPA1FD/INC
          INC       PATPCPFD/INC
          INC       PATPR1FD/INC
          INC       PATRE1FD/INC
          INC       PATTRNFD/INC
          INC       PATURAFD/INC
          INC       PATVADFD/INC
          INC       PATVISFD/INC
          INC       PATWC1FD/INC
          INC       PATWMAFD/INC
          INC       PATWR1FD/INC
          INC       PATWVEFD/INC
          INC       VISCMTFD/INC
          INC       VISXDCFD/INC
          INC       VISXDCTD/INC
          INC       WEBEMRVR/INC
.
          INC       PATONHFD/INC
          INC       PMSAIDFD/INC
          INC       PMSCAUFD/INC
          INC       PMSADWFD/INC
          INC       PMSALAFD/INC
          INC       PMSALNFD/INC
          INC       PMSCURFD/INC            * Current Patient File
          INC       PMSEDWFD/INC
          INC       PMSELFFD/INC 
          INC       PMSOECFD/INC
          INC       PMSOESFD/INC
          INC       PMSHCGFD/INC 
          INC       PMSHCGTD/INC 
          INC       PMSHCPFD/INC 
          INC       PMSHCPTD/INC 
          INC       PMSPHSFD/INC
.          INC       PMSIPLFD/INC
          INC       PMSMDTFD/INC            * Patient Notes
          INC       PMSMTIFD/INC            * Misc.Items and Theatre Charges
          INC       PMSMORFD/INC
          INC       PMSMTXFD/INC            * Patient Notes free text
          INC       PMSOOSFD/INC
          INC       PMSPX2FD/INC
          INC       PMSPX2TD/INC       * CGI variables for PMI extension file
          INC       PMSUPDFD/INC
          INC       PMSVX1FD/INC            * Visit Extension File
          INC       PMSWX1FD/INC
          INC       WATESPFD/INC
          INC       PATHSPFD/INC
          INC       MRTLOCFD/INC
          INC       VISCODFD/INC
          INC       VISCODTD/INC
          INC       VISMDTFD/INC
          INC       VISMTXFD/INC
          INC       VISPAYFD/INC
          INC       PATDTHFD/INC
          INC       TFILEVAR/INC
          INC       MEHCONFD/INC
          INC       MEHVI1FD/INC            * MH Visit
          INC       MEHVISTD/INC            * MH Visit (local vars)
          INC       MEHDS1FD/INC            * MH Discharge Details
          INC       MEHDISTD/INC            * MH Discharge (local vars)
          INC       MEHHLSFD/INC            * MH Legal Status Header
          INC       MEHHLSTD/INC            * MH Legal Status (vars)
          INC       MEHLEGFD/INC            * MH Legal Status History
          INC       MEHLEGTD/INC            * MH Legal Status History (vars)
          INC       MEHCJAFD/INC            * MH CJA Status History
          INC       MEHDLSFD/INC            * MH Legal Status Detail
          INC       ALLCASFD/INC            * HCP Case Team Details
          INC       ALLCTMFD/INC            * HCP Case Team Member Details
          INC       PATDGWFD/INC            * DRG Description and Weightings
          INC       PATASFFD/INC            * Special Funding Arrangement Codes
          INC       PATDADFD/INC            * Patient Transfer Destination
          INC       PATMISTD/INC
          INC       PMSCCDFD/INC            * Concession Card Details
.
          INC       WEBOECFD/INC
          INC       WEBOESFD/INC
          INC       WEBELFFD/INC
.
COMFILAF  FILE      ASCII, FIXED=127        * For Presenting Complaint
COMFILBF  FILE      ASCII, FIXED=127        * For Patient Notes
COMFILCF  FILE      ASCII, FIXED=127        * For Emergency Comments
COMFILDF  FILE      ASCII, FIXED=127        * For Emergency Discharge Comments
PRECOMAF  FILE      ASCII, FIXED=127        * For Presenting Complaint
COMFILVF  FILE      ASCII, FIXED=127        * For visit Notes
ADDCOMAF  FILE      ASCII, FIXED=127        * For Additional Comments
.
.
. LOCAL VARIABLES
. ---------------
.
ACCESSAL  DIM       80 
AECNCHRS  FORM      1
AECNFTYP  FORM      1
ALLOCTCD  DIM       6
ARIVDATE  DIM       16                      * arrival date/time for validation
ARRCOUNT  FORM      3
ARRDATE   DIM       10
ARRTIME   DIM       8
AUDDATE   DIM       10
AUDTIME   DIM       8
AUDIFLAG  FORM      1                       * audit type
ACCAUDCK  DIM       1
.
BIREQ001  DIM       1
BMIINDIC  DIM       1
BLNKFLAG  FORM      1
BODMASIN  DIM       5
BODMASRN  DIM       60
BODMASUW  INIT      "<font color=purple>"
BODMASHE  INIT      "<font color=black>"
BODMASFT  INIT      "<font color=red>"
BOLD      INIT      "<b>"
EDWARDFL  FORM      1                      * Using EDWARD 1 = Yes
ENDBOLD   INIT      "</b>"
ENDFONT   INIT      "</font>"
.
CABCPYTW  FORM      1         * Cabrini flag - copy transfer ward on discharge
CALDAYS   FORM      4
CALCWAIT  FORM      1                       * Flag to recalculate waiting time
CALCTOTD  DIM       4
CALLPOSN  FORM      1
CARDNUMB  DIM       20
CONSFILN  DIM       8
PENDHOSP  DIM       3
PENDSYST  DIM       2
PENDSDAT  DIM       8
PENDADAT  DIM       8
PENDDDAT  DIM       8
PENDFUND  DIM       6
PENDCLAM  DIM       3
PRFAFLAG  DIM       1
CENT      DIM       2
CFILEPRE  DIM       3
CHCKNAME  FORM      1
CHGADD    FORM      1
CHGFLAG   FORM      1
CHGSFNT   FORM      1
CHGSTAT   FORM      1
CHGUR     FORM      1
CHKDAT    FORM      8
CHKINJUR  DIM       1
CLAIMTYP  DIM       1
CLMFLG    FORM      2                   
CLMUPDFL  FORM      1
CMDLIN2   DIM       227
CODEDESC  DIM       70
CODETYP   DIM       3 
COMM127   DIM       127
COMFILNB  DIM       8
COMFILNC  DIM       8
COMFILND  DIM       8
COMFILNM  DIM       8
COMFILNV  DIM       8
COUNTER   FORM      3
CONFDEMO  DIM       1
CTYPDATE  DIM       8
CTYPETIM  DIM       8                      
CTYPTIME  DIM       8
CALCDATE  DATE      8
CURRDATE  DIM       8         * Current date
CURRTIME  DIM       8         * Current time
CURSPACE  FORM      3
.
DATE      DIM       8
DATETIME  DIM       22
DAY       DIM       2
DCC       DIM       2
DDD       DIM       2
DETNTREC  FORM      2
DIAGCMFL  FORM      1
DIAGNSIS  DIM       6      * Diagnosis Code
DIAGCODE  DIM       3
DIM1IND6  DIM       1
DIM9      DIM       9
DIM10     DIM       10
DIM11     DIM       11
DIM16     DIM       16
DIM2A     DIM       2
DIM2B     DIM       2
DIM22     DIM       22
DIM37     DIM       37
DIM80     DIM       80
DIM100    DIM       100
DISINTAS  DIM       50
DISINTA2  DIM       100
DISOTDOC  DIM       50
DISOTDO2  DIM       100
DISPOVAL  DIM       127
DISPCVAL  DIM       127
DISPT001  DIM       9
DISPT002  DIM       20
DISP200   DIM       200
DISPREAS  FORM      1
DMM       DIM       2
DOCDATE   DIM       10
DOCTCODE  DIM       6
DOCTDATE  DIM       8
DOCTIME   DIM       8
DOCTNAME  DIM       50
DOCTRHIS  DIM       50
DOCTRHI2  DIM       100
DOCTRNAM  DIM       50
DOCTTIME  DIM       8
DONTCHEC  DIM       1                       * Flag to ignore date/time check
DONTGRBC  FORM      1      * Don't group records by consultant
DPURNO    DIM       8
DSCHAUTP  FORM      1
DYY       DIM       2 
DYCNT     FORM      4
ENTALCDT  DIM       1
EACINDCT  DIM       1
SEENDATE  DIM       10
SEENTIME  DIM       8
.
EXPCMFLG  FORM      1
EXPCMLIN  FORM      3
CLINECNT  FORM      3
QRYDATA1  DIM       240
DISPDATE  DIM       11
DISPUSNM  DIM       30
.
EXPCMTAF  FILE      ASCII, FIXED=127
EXPCMTNM  DIM       8
.
EMDCT001  DIM       50   * Free text 1
EMDCT002  DIM       50   * Free text 2
EMDCT003  DIM       50   * Free text 3 
EMDCT004  DIM       50   * Free text 4
EMDCT005  DIM       50   * Free text 5
EMDCT006  DIM       50   * Free text 6
EMDCT007  DIM       50   * Free text 7
EMDCT008  DIM       50   * Free text 8
EMDCT009  DIM       50   * Free text 9
EMDLA001  DIM       3
EMDLA002  DIM       40
EMEXP001  DIM       10   * Expected Patient ID
EMEXP002  DIM       20   * Surname
EMEXP003  DIM       25   * Given Names
EMEXP004  DIM       1    * Sex
EMEXP005  DIM       12   * Date of Birth 
EMEXP006  DIM       3    * Age
EMEXP007  DIM       3    * Presenting Complaint (category el)
EMEXP008  DIM       50   * Presenting Complaint 1
EMEXP009  DIM       50   * Presenting Complaint 2  
EMEXP010  DIM       50   * Presenting Complaint 3
EMEXP011  DIM       50   * Presenting Complaint 4
EMEXP012  DIM       50   * Presenting Complaint 5
EMEXP013  DIM       50   * Presenting Complaint 6
EMEXP014  DIM       3    * Transport
EMEXP015  DIM       12   * Expected Date
EMEXP016  DIM       5    * Expected Time
EMEXP017  DIM       10   * GP Code                            
EMEXP018  DIM       8    * U/R Number
EMEXP019  DIM       3    * Attendance Source (Cat em)
EMEXP020  DIM       3    * Accepting Source (Cat ZQ)
EMEXP021  DIM       3    * Accepting Source Trauma (Cat ZQ)
EMEXP022  DIM       12   * ETA Date
EMEXP023  DIM       8    * ETA Time
EMEXP024  DIM       3    * Triage Code on Route (Cat AA)
EMEXP025  DIM       3    * Expected Location
EMEXP026  DIM       15   * Ambulance Case Number
EMEXPSIT  DIM       3    * Emergency Site Code
EMEXP027  DIM       3    * Not used
EMEXP028  DIM       1    * Contact Type
EMEXP029  DIM       1    * Removed (0 = yes)
EMEXP030  DIM       3    * Removal Reason
EMEXP031  DIM       5    * Transfer Source
EMEXP032  DIM       100  * Caller name and contact 
EMEXP033  DIM       100  * Additional Information 1
EMEXP034  DIM       100  * Additional Information 2
EMEXP035  DIM       100  * Additional Information 3
EMEXP036  DIM       100  * Additional Information 4
EMEXP037  DIM       100  * Additional Information 5
EMRCN029  DIM       6    * Fax printer
PCOMDEFT  DIM       1    * Default presenting complaint on registration
.
EMUNK001  DIM       50
EMUNK002  DIM       50
EMUNK003  DIM       1
EMUNK004  DIM       8
UNKPATUP  DIM       1
.
EMVCD001  DIM       8    * Visit Number
EMVCD002  DIM       3    * Coding Type
EMVCD003  DIM       3    * Unique Record No
EMVCD004  DIM       2    * Coding System
EMVCD005  DIM       10   * Main Code
EMVCD006  DIM       3    * Sequencing
EMVCD007  DIM       8    * Date
EMVCD008  DIM       8    * Time
EMVCD009  DIM       3    * User Def Code 1
EMVCD010  DIM       3    * User Def Code 2
EMVCD011  DIM       3    * User Def Code 3
EMVCD012  DIM       3    * User Def Code 4
EMVCD013  DIM       40   * User Def Reference 1
EMVCD014  DIM       40   * User Def Reference 2
EMVCD015  DIM       1    * User Def Y/N 1
EMVCD016  DIM       1    * User Def Y/N 2
EMVCD017  DIM       1    * User Def Y/N 3
EMVCD018  DIM       1    * User Def Y/N 4
EMVCD019  FORM      12.2 * User Def Amount 1
EMVCD020  FORM      12.2 * User Def Amount 2
EMVCD021  FORM      12.2 * User Def Amount 3
EMVCD022  FORM      12.2 * User Def Amount 4
EMVCD023  DIM       8    * User Def Date 1
EMVCD024  DIM       8    * User Def Date 2
EMVCD025  DIM       8    * User Def Date 3
EMVCD026  DIM       8    * User Def Date 4
EMVCD027  DIM       6    * User Def Time 1
EMVCD028  DIM       6    * User Def Time 2
EMVCD029  DIM       6    * User Def Time 3
EMVCD030  DIM       6    * User Def Time 4
EMVCD031  DIM       1    * Extract Flag
EMVCD032  DIM       1    * Delete Flag
EMVCD033  DIM       100  * Free Format Text
.
EMVIS001  DIM       11
EMVIS002  DIM       8
EMVIS003  DIM       3
EMVIS004  DIM       50
EMVIS005  DIM       50
EMVIS006  DIM       3
EMVIS007  DIM       10
EMVIS008  DIM       3
EMVIS009  DIM       3
EMVIS010  DIM       3
EMVIS011  DIM       3
EMVIS012  DIM       3
EMVIS013  DIM       3
EMVIS014  DIM       20
EMVIS015  DIM       3
EMVIS016  DIM       3
EMVIS017  DIM       6
EMVIS018  DIM       8
EMVIS019  DIM       10
EMVIS020  DIM       10
EMVIS021  DIM       3
EMVIS022  DIM       3
EMVIS023  DIM       3
EMVIS024  DIM       11
EMVIS025  DIM       8
EMVIS026  DIM       3
EMVIS027  DIM       3
EMVIS028  DIM       11
EMVIS029  DIM       8
EMVIS030  DIM       11
EMVIS031  DIM       8
EMVIS032  DIM       5
EMVIS033  DIM       5
EMVIS034  DIM       15
EMVIS035  DIM       2
EMVIS036  DIM       50
EMVIS037  DIM       50
EMVIS038  DIM       50
EMVIS039  DIM       50
EMVIS040  DIM       50
EMVIS041  DIM       3
EMVIS042  DIM       3
EMVIS043  DIM       3
EMVIS044  DIM       3
EMVIS045  DIM       3
EMVIS046  DIM       3
EMVIS047  DIM       3
EMVIS048  DIM       3
EMVIS049  DIM       3
EMVIS050  DIM       3
EMVIS051  DIM       3
EMVIS052  DIM       3
EMVIS053  DIM       3                                       
EMVIS054  DIM       3
EMVIS055  DIM       3
EMVIS056  DIM       3
EMVIS057  DIM       3
EMVIS058  DIM       3
EMVIS059  DIM       3
EMVIS060  DIM       3
EMVIS061  DIM       3
EMVIS062  DIM       3
EMVIS063  DIM       3                                       
EMVIS064  DIM       3
EMVIS065  DIM       3
EMVIS066  DIM       3
EMVIS067  DIM       3
EMVIS068  DIM       3
EMVIS069  DIM       3
EMVIS070  DIM       3
EMVIS071  DIM       11
EMVIS072  DIM       11
EMVIS073  DIM       11
EMVIS074  DIM       11
EMVIS075  DIM       11
EMVIS076  DIM       11
EMVIS077  DIM       11
EMVIS078  DIM       11
EMVIS079  DIM       11
EMVIS080  DIM       11
EMVIS081  DIM       8
EMVIS082  DIM       8
EMVIS083  DIM       8
EMVIS084  DIM       8
EMVIS085  DIM       8
EMVIS086  DIM       8
EMVIS087  DIM       8
EMVIS088  DIM       8
EMVIS089  DIM       8
EMVIS090  DIM       8
EMVIS091  DIM       1         * changed to DIM
EMVIS092  FORM      1
EMVIS093  DIM       1
EMVIS094  FORM      1
EMVIS095  DIM       1
EMVIS096  DIM       1
EMVIS097  FORM      1
EMVIS098  FORM      1
EMVIS099  FORM      1
EMVIS100  FORM      1
EMVIS101  DIM       6
EMVIS102  DIM       6
EMVIS103  DIM       6
EMVIS104  DIM       6
EMVIS105  DIM       6
EMVIS106  DIM       6
EMVIS107  DIM       6
EMVIS108  DIM       6
EMVIS109  DIM       6
EMVIS110  DIM       6
EMVIS111  DIM       50
EMVIS112  DIM       50
EMVIS113  DIM       1
EMVIS114  FORM      3
EMVIS115  DIM       8
EMVIS116  DIM       3
EMVIS117  DIM       3
EMVIS118  DIM       8
EMVIS119  DIM       9    * procedure code
EMVIS120  DIM       1    * send proc code in extract?
EMVIS121  DIM       9    * diagnosis code
EMVIS122  DIM       1    * primary diagnosis? 
EMVIS123  DIM       1    * send diag code in extract?
EMVIS124  DIM       19   * HF membership no
EMVIS125  DIM       3    * Admission Class
EMVIS126  DIM       3    * Care Class
EMVIS127  DIM       10   * Triage Nurse
EMVIS128  DIM       11   * Triage Date
EMVIS129  DIM       8    * Triage Time
EMVIS130  DIM       10   * Attending Nurse
EMVIS131  DIM       3    * External Location
EMVIS132  DIM       3    * Emergency Site Code
EMVIS133  DIM       1    * Admitted to hospital? 0=No, 1=Yes
EMVIS134  DIM       3    * Unit (category AC)
EMVIS135  DIM       50   * Complaint Line 3   
EMVIS136  DIM       50   * Complaint Line 4   
EMVIS137  DIM       50   * Complaint Line 5   
EMVIS138  DIM       50   * Complaint Line 6   
EMVIS139  DIM       50   * Injury Description Line 1
EMVIS140  DIM       50   * Injury Description Line 2
EMVIS141  DIM       3    * Nature of Main Injury (category ex)
EMVIS142  DIM       3    * Injury Cause (category ey)
EMVIS143  DIM       3    * Human Intent (category ez)
EMVIS144  DIM       3    * Activity When Injured (category EZ)
EMVIS145  DIM       25   * Other Location Description
EMVIS146  FORM      1    * LOS due to Access/Adm Block
EMVIS147  FORM      1    * C-Type Admissions
EMVIS148  FORM      1    * GP Letter Sent
EMVIS149  DIM       50   * Location Note
EMVIS150  DIM       11   * Departure Date (CCYYMMDD)
EMVIS151  DIM       8    * Departure Time (HH:MM:SS)
EMVIS152  DIM       3    * Extended Visit Reason (Cat RX)
EMVIS153  DIM       3    * Departure Delay Reason (Cat RY)
EMVIS154  DIM       11   * Ambulance Arrival Date (CCYYMMDD
EMVIS155  DIM       8    * Ambulance Arrival Time (HH:MM:SS)
EMVIS156  DIM       11   * Ambulance Handover Date (CCYYMMDD
EMVIS157  DIM       8    * Ambulance Handover Time (HH:MM:SS)
EMVIS158  DIM       11   * Decision to Admit Date (CCYYMMDD
EMVIS159  DIM       8    * Decision to Admit Time (HH:MM:SS)
EMVIS160  DIM       3    * Health Purchaser
EMVIS161  DIM       10   * Meet & Greet Assessment Nurse Code
EMVIS162  DIM       11   * Meet & Greet Ass. Nurse Date Seen
EMVIS163  DIM       8    * Meet & Greet Ass. Nurse Time Seen
EMVIS164  DIM       10   * Meet & Greet Ass. Doctor Code
EMVIS165  DIM       11   * Meet & Greet Ass. Doctor Date Seen
EMVIS166  DIM       8    * Meet & Greet Ass. Doctor Time Seen
EMVIS167  DIM       3    * User Defined Code 31 (category YN)
EMVIS168  DIM       3    * User Defined Code 32 (category YO)
EMVIS169  DIM       3    * User Defined Code 33 (category YP)
EMVIS170  DIM       3    * User Defined Code 34 (category YQ)
EMVIS171  DIM       3    * User Defined Code 35 (category YR)
EMVIS172  DIM       11   * Date First Seen by MH Practitioner
EMVIS173  DIM       8    * Time First Seen by MH Practitioner
EMVIS174  DIM       3    * Referral Period (Category RF)
EMVIS175  DIM       2    * Referring Period Month
EMVIS176  DIM       11   * Referral Date
EMVIS177  DIM       3    * VEMD Service Type (Cat YW)
EMVIS178  DIM       3    * VEMD Patient Location (Cat YX)
EMVIS179  DIM       10   * Allied Health HCP Code (pmshcpaf)
EMVIS180  DIM       1    * Allied Health Status
EMVIS181  DIM       3    * Disposition Delay (Cat dd) 
EMVIS182  DIM       1    * Drug / Alcohol Related 
.
EMVISFLG  FORM      1
ERRFLAG   FORM      1
EXTRACT   DIM       3
EXPDATE   DATE      8
.
FAXITFLG  DIM       1    * Send Fax Discharge Summary? cab only. emrweb0201101
FCC       FORM      2
FDD       FORM      2
FLDNO     DIM       2
FMM       FORM      2
FNAMEP    DIM       8
FNAMEN    DIM       8
FNAMFLAG  FORM      1
FORM2P1   FORM      2.1
FORM2P1A  FORM      2.1
FORM2P2   FORM      2.2
FORM2P2A  FORM      2.2
FORM4P2   FORM      4.2
F3A       FORM      3
FORM5     FORM      5
FORM6P1   FORM      6.1
FORM6P1A  FORM      6.1
FORM6A    FORM      6
FORM8     FORM      8
FORM10    FORM      10
FORM12D2  FORM      12.2
FORMACTN  DIM       2        * N1 = zero u/r N2 = PRA zero u/r N3 , N4 , U1
FROMDATE  DIM       8
FRSTCONS  FORM      1
TODATE    DIM       8
TRNSFSRC  DIM       5                * cgi param for Transfer Source
DEFTVIEW  FORM      1
UPDFLAG1  DIM       1
.
HEANBHFL  DIM       1
FRMEMRLS  DIM       1
.
UPTYDESC  DIM       35
FOLDERTY  DIM       1          * Flag to update PMI folder details
FRMPRINT  DIM       6        * Form printer 
FRMPRNT2  DIM       6
FRMPRNT3  DIM       6
FRMPRNT4  DIM       6
FRMPRNT5  DIM       6
FRMPRNT6  DIM       6
FRSTDOCT  DIM       10
FRSTNURS  DIM       10
FTODAY    FORM      8
FYY       FORM      2
.
HEAAMBIN  DIM       1
HEAINDIC  DIM       1
HELPAGE   FORM      1
HELSIZE   FORM      1
HESYST    FORM      1
HISTTYPE  DIM       5
HOSPCODE  DIM       4                                                 *I-250985
HOSPITAL  DIM       25                                                *I-250985
HOUR      DIM       2
HOURTM    DIM       2
.
INJTXT1   DIM       50
INJTXT2   DIM       50
INJUR001  DIM       3    * Nature of Main Injury
INJUR002  DIM       50   * Description of Body Injury 1
INJUR003  DIM       50   * Description of Body Injury 2
INJUR004  DIM       3    * Injury Cause
INJUR005  DIM       3    * Human Intent
INJUR006  DIM       3    * Activity When Injured
INVADMNO  DIM       8
INVDFLAG  FORM      1
ISEDLITE  DIM       1    * Flag for whether or not it is ED Lite?
ISERASE   INIT      "iserase "
VISDHOSP  DIM       50
WAHINDIC  DIM       1
USEINVAD  FORM      1

.
KEY4A     DIM       4
.
LABELTYP  DIM       10
LABELTY2  DIM       10
LABELTY3  DIM       10                                          *T0852803
LASTITEM  FORM      3   * Last Item
LASTPRES  FORM      3   * Last Item
LASTDIAG  FORM      3   * Last Item
LBLPRINT  DIM       6        * Label printer
LBLPRIN2  DIM       6        * Label printer 2
LBLPRIN3  DIM       6        * Label printer 3                  *T0852803
LINK2PRT  FORM      1   * Key for Keyword index
LINKVIST  DIM       8        * Link to inpatient admission
LOADFLAG  FORM      1
LOCACODE  DIM       3        * Location Code
LOCADATE  DIM       8
LOCATIME  DIM       8
LOCNCNTR  FORM      4                                               * CAR 269338
LOCKTYPE  DIM       8
.
MAPVFLAG  FORM      1
MANDDISC  FORM      1        
MANDINUR  FORM      1
MASUPDFL  FORM      1
MEDNOTES  DIM       100
NLOCACOD  DIM       3        * Location Code
NLOCADAT  DIM       8
NLOCATIM  DIM       8
MIN       DIM       2
MINTIME   DIM       2
MODE1     DIM       1
MONTH     DIM       3
MONTH2    FORM      2
MRGEFLAG  FORM      1
MRLOCKEY  DIM       7                       * work area for MRMA*HOS, MRMA*LOC
MSGARR    DIM       50[21]
MSGARRNO  FORM      2
MHFUND    DIM       6
.
NOATTRIB  FORM      1
NATMNINJ  DIM       3        * Nature of Main Injury Variable
NBRDAYS   FORM      4
NEWLOCAC  DIM       3
NEWLOCAT  DIM       3
NEWLOCTN  DIM       3
NEWSTAND  FORM      1        * Standards flag - 1=New std's, 0=Old std's
NEXTPAGE  FORM      2        * 0=Close Window, 1=Redirect, 2=Insert
NMPNUMB   DIM       20
NODAYS    FORM      8
TOTNDAYS  FORM      4
NOLABEL   FORM      3
NOLABEL2  FORM      3
NOLABEL3  FORM      3                                           *T0852803
NOLABELF  FORM      3
NOLABLF2  FORM      3
NOLABLF3  FORM      3
NOLABLF4  FORM      3
NOLABLF5  FORM      3
NOLABLF6  FORM      3
NOTETYPE  DIM       3
NOTEDETL  DIM       1      * Note display details flag
NOTEFILT  DIM       3      * Note display filter (Note Type)
NOTEORDR  FORM      1      * Note display order
NOTEHEAD  DIM       1
NOSDR001  DIM       10
NURSDATE  DIM       8
NURSEHIS  DIM       50
NURSEHI2  DIM       100
NURSNAME  DIM       50
NURSTIME  DIM       8
.
NEWDEATH  DIM       30     * New Death Details
OECCHBOX  DIM       1      * Eclipse Emergency OEC Indicator
OLDDEATH  DIM       30     * Old Death Details
OBDET001  DIM       11     * Observation Date
OBDET002  DIM       8      * Observation Time
OBDET003  DIM       3      * Observation Type
OBDET004  DIM       3      * Pulse
OBDET005  DIM       6      * Temperature
OBDET006  DIM       3      * Blood Pressure Systolic
OBDET007  DIM       3      * Blood Pressure Diastolic
OBDET008  DIM       3      * Respiration
OBDET009  DIM       3      * Pulse / Oximeter Sa O2
OBDET010  DIM       3      * Oxygen Flow Litres per Min
OBDET011  DIM       4      * Peak Flow
OBDET012  DIM       3      * Fluids Output Code
OBDET013  DIM       3      * Fluids Intake Code
OBDET014  DIM       6      * Fluids Output
OBDET015  DIM       6      * Fluids Intake
OBDET016  DIM       1      * Eyes Open
OBDET017  DIM       1      * Best Verbal Response
OBDET018  DIM       1      * Best Motor Response
OBDET019  DIM       1      * Pupil Size Left
OBDET020  DIM       1      * Pupil Size Right
OBDET021  DIM       1      * Pupil Reaction Left
OBDET022  DIM       1      * Pupil Reaction Right
OBDET023  DIM       1      * Limb Movement Left Arm
OBDET024  DIM       1      * Limb Movement Right Arm
OBDET025  DIM       1      * Limb Movement Left Leg
OBDET026  DIM       1      * Limb Movement Right Leg
OBDET027  DIM       3      * Action/Comment Code
OBDET028  DIM       1      * User Defined Y/N 1
OBDET029  DIM       1      * User Defined Y/N 2
OBDET030  DIM       1      * User Defined Y/N 3
OBDET031  DIM       1      * User Defined Y/N 4
OBDET032  DIM       3      * User Defined Code 1
OBDET033  DIM       3      * User Defined Code 2
OBDET034  DIM       12     * User Defined Numeric 1
OBDET035  DIM       12     * User Defined Numeric 2
OBDET036  DIM       12     * User Defined Numeric 3
OBDET037  DIM       12     * User Defined Numeric 4
OBDET038  DIM       40     * Comment 1
OBDET039  DIM       40     * Comment 2
OBDET040  DIM       40     * Comment 3
OBDET041  DIM       2      * Pain Score (0-10)       * I CAR 10484
OBDET042  DIM       1      * CVP (1-8)               * I CAR 10485
OTHRFLAG  FORM      1
OTSTFLAG  FORM      1
OTAMFLAG  FORM      1
OECWINDC  FORM      1
.
PMRES001  DIM       3
PMRES002  DIM       8
PMRES003  DIM       8
PMRES004  DIM       127
PMRES005  DIM       10
PASSWORD  DIM       256
PMSVX010  DIM       1      * Inform GP
PMSVX045  DIM       6      * Patient Weight (Form 4.2 stored as Form 6)
PMSVX075  DIM       9      * Provisional ICD10 Code
PMSVX079  DIM       3      * Employment Status CAT KD
PMSVX091  DIM       3      * Usual Accommodation CAT KP
PMSVX112  DIM       3      * Transport SOR (Cat.SI)
PMSVX122  DIM       3      * Family Violence (Cat fv)
PMSVX125  DIM       3      * UDF 7
PMSVX128  DIM       3      * UDF 10
PMSVX129  DIM       3      * UDF 11
PMSVX141  DIM       3      * Funding Source
PMSVX142  DIM       40     * Contributor Name
PMSVX135  DIM       3      * Non WA Hospital Contact
PMI2FLAG  FORM      1        * Have we received pmpx2af cgi vars 1 = Yes
POPREGSC  DIM       1                       * Flag for regestration screen 
PRAUPDFL  FORM      1
PRDGFLAG  FORM      1        * procedure/diagnosis mandatory check
PRECINWA  DIM       1        * Presenting complaint indicator WAHealth
PRECOMFL  FORM      1
PRECOMNM  DIM       8        * Presenting complaint comment
ADDCOMFL  FORM      1
ADDCOMNM  DIM       8
PREVADDR  FORM      1
PRIMARY   DIM       3
PTCLM001  DIM       35
PTCLM002  DIM       35
PTCLM003  DIM       35
PTCLM004  DIM       35
PTCLM005  DIM       4
PTCLM006  DIM       20
PTCLM007  DIM       8
PTCLM008  DIM       1
PTCLM009  DIM       6
PTCLM010  DIM       20
PTCLM011  DIM       20
PTCLM012  DIM       20
PTCLM013  DIM       8
PTCLM014  DIM       20
PTCLM015  DIM       36
PTCLM016  DIM       30
PTCLM017  DIM       30
PTCLM018  DIM       30
PTCLM019  DIM       10
PTCLM020  FORM      1
PTCLM021  DIM       20
PTCLM022  DIM       30
PTCLM023  DIM       30
PTCLM024  DIM       20
PTCLM025  DIM       30
PTCLM026  DIM       12
PTCLM027  DIM       40
PTCLM028  DIM       35
PTCLM029  DIM       1
PTCLM030  DIM       3
PTCLM031  DIM       3
PTCLM032  DIM       50
PTCLM033  DIM       3
PTCLM034  DIM       40
PTCLM035  DIM       3
PTCLM036  DIM       3
PTCLM037  DIM       3
PTCLM038  DIM       12
PTCLM083  DIM       6
PTCUPDFL  FORM      1
.
.  Free Format OEC cgi variables
.
PTELF001  DIM       8      * U/R Number
PTELF002  DIM       1      * Patient OEC Consent
PTELF003  DIM       4      * Title
PTELF004  DIM       40     * Patient First Name
PTELF005  DIM       40     * Patient Second Name
PTELF006  DIM       40     * Health Fund Given Name
PTELF007  DIM       40     * Health Fund Surname
PTELF008  DIM       1      * Gender
PTELF009  DIM       8      * Date of Birth
PTELF010  DIM       8      * Expected Admission Date
PTELF011  DIM       3      * Intended Stay
PTELF012  DIM       3      * Planned LOS
PTELF013  DIM       3      * Discharge Intention
PTELF014  DIM       1      * PEA Indicator
PTELF015  DIM       1      * Emergency Admission
PTELF016  DIM       3      * Presenting Illness Code
PTELF017  DIM       9      * Presenting Illness MBS
PTELF018  DIM       3      * Claim Type
PTELF019  DIM       6      * Health Fund
PTELF020  DIM       8      * Health Fund Table
PTELF021  DIM       19     * Health Fund Membership Number
PTELF022  DIM       50     * Diagnosis
PTELF023  DIM       9      * Service Code 1
PTELF024  DIM       9      * Service Code 2
PTELF025  DIM       9      * Service Code 3
PTELF026  DIM       9      * Service Code 4
PTELF027  DIM       9      * Service Code 5
.
PTELF028  DIM       3      * Service Code Quantity 1
PTELF029  DIM       3      * Service Code Quantity 2
PTELF030  DIM       3      * Service Code Quantity 3
PTELF031  DIM       3      * Service Code Quantity 4
PTELF032  DIM       3      * Service Code Quantity 5
.
PTELF033  DIM       10     * Repatriation Number
PTELF034  DIM       1      * Gender
.
PTMAS001  DIM       4
PTMAS002  DIM       1
PTMAS003  DIM       3
PTMAS004  DIM       1
PTMAS005  DIM       40
PTMAS006  DIM       25
PTMAS007  DIM       19
PTMAS008  DIM       35
PTMAS009  DIM       35
PTMAS010  DIM       35
PTMAS011  DIM       8
PTMAS012  DIM       20
PTMAS013  DIM       20
PTMAS014  DIM       1
PTMAS015  DIM       3
PTMAS016  DIM       11
PTMAS017  DIM       3
PTMAS018  DIM       3
PTMAS019  DIM       3
PTMAS020  DIM       3
PTMAS021  DIM       14
PTMAS022  DIM       10
PTMAS023  DIM       15
PTMAS024  DIM       6
PTMAS025  DIM       10
PTMAS026  DIM       1
PTMAS027  DIM       20
PTMAS028  DIM       1
PTMAS029  DIM       1
PTMAS030  DIM       1
PTMAS031  DIM       3
PTMAS032  DIM       3
PTMAS033  DIM       3
PTMAS034  DIM       30
PTMAS035  DIM       6
PTMAS036  DIM       8
PTMAS037  DIM       19
PTMAS038  DIM       3
PTMAS039  DIM       3
PTMAS040  DIM       3
PTMAS041  DIM       3
PTMAS042  DIM       3
PTMAS043  DIM       3
PTMAS044  DIM       1
PTMAS045  DIM       1
PTMAS046  DIM       1
PTMAS047  DIM       2
PTMAS048  DIM       20
PTMAS049  DIM       35
PTMAS050  DIM       35
PTMAS051  DIM       35
PTMAS052  DIM       8
PTMAS053  DIM       20
PTMAS054  DIM       20
PTMAS055  DIM       10
PTMAS056  DIM       3
PTMAS057  DIM       2
PTMAS058  DIM       6
PTMAS059  DIM       11
PTMAS060  DIM       3
PTMAS061  DIM       35
PTMAS062  DIM       35
PTMAS063  DIM       35
PTMAS064  DIM       35
PTMAS065  DIM       8
PTMAS066  DIM       20
PTMAS067  DIM       20
PTMAS068  DIM       10
PTMAS069  DIM       35
PTMAS070  DIM       3
PTMAS081  DIM       2
PTMAS082  DIM       6
PTMAS083  DIM       20
PTMAS084  DIM       20
PTMAS085  DIM       35
PTMAS086  DIM       8 
PTMSX001  DIM       8        * Registration Date
PTMSX002  DIM       30       * Special Meal Requirements
PTMSX003  DIM       4        * LGA Code
PTMSX004  DIM       3        * Current Legal Status (Cat LS)
PTMSX005  DIM       8        * Date of Legal Status
PTMSX006  DIM       1        * Familial History of mental disorder? 1=yes, 2=No
PTMSX007  DIM       3        * M.H. User Defined Field (Cat V6)
PTMSX008  DIM       3        * M.H. User Defined Field (Cat V7)
PTMSX009  DIM       3        * M.H. User Defined Field (Cat V8)
PTMSX010  DIM       20       * Emergency Contact Name
PTMSX011  DIM       35       * Emergency Contact Address Line 1
PTMSX012  DIM       35       * Emergency Contact Address Line 2
PTMSX013  DIM       35       * Emergency Contact Address Line 3
PTMSX014  DIM       35       * Emergency Contact Address Line 4
PTMSX015  DIM       8        * Emergency Contact Postcode
PTMSX016  DIM       20       * Emergency Contact Private Phone
PTMSX017  DIM       20       * Emergency Contact Business Phone
PTMSX018  DIM       10       * Emergency Contact Relationship
PTMSX019  DIM       20       * Nearest Relative Name
PTMSX020  DIM       35       * Nearest Relative Address Line 1
PTMSX021  DIM       35       * Nearest Relative Address Line 2
PTMSX022  DIM       35       * Nearest Relative Address Line 3
PTMSX023  DIM       35       * Nearest Relative Address Line 4
PTMSX024  DIM       8        * Nearest Relative Post Code
PTMSX025  DIM       20       * Nearest Relative Private Phone
PTMSX026  DIM       20       * Nearest Relative Business Phone
PTMSX027  DIM       10       * Nearest Relative Relationship
PTMSX028  DIM       8        * 3B certificate Expiry Date
PTMSX029  DIM       8        * Card number (NZ billing)
PTMSX030  DIM       8        * Card expiry date (NZ billing)
PTMSX031  DIM       3        * Card exemption type (Cat XM)
PTMSX032  DIM       12       * Family ID
PTMSX033  DIM       20       * Chinese Name
PTMSX034  DIM       3        * Disctrict of Residence (Cat DA)
PTMSX035  DIM       8        * Registered GP
PTMSX036  DIM       6        * GP Practice Code
PTMSX037  DIM       20       * Supplementary ID
PTMSX038  DIM       2        * GP Practice Count
PTMSX039  DIM       8        * Date Arrived From Overseas
PTMSX040  DIM       4        * Sec. Code Operator Who Created Record
PTMSX041  DIM       1        * Unknown Date Arrived from O/S (Y/N)
PTMSX042  DIM       20       * Cellular Phone Number
PTMSX043  DIM       35       * Postal Address Line 1
PTMSX044  DIM       35       * Postal Address Line 2
PTMSX045  DIM       35       * Postal Address Line 3
PTMSX046  DIM       35       * Postal Address Line 4
PTMSX047  DIM       8        * Postal Address Post Code
PTMSX048  DIM       2        * Medicare Code
PTMSX049  DIM       3        * Hearing
PTMSX050  DIM       1        * Opt out of SMS
PTMSX051  DIM       2        * Episode Special Purpose Flag
.
PTPRA001  DIM       80
PTPRA002  DIM       35
PTPRA003  DIM       35
PTPRA004  DIM       35
PTPRA005  DIM       35
PTPRA006  DIM       8
PTPRA007  DIM       20
PTPRA008  DIM       20
PTPRA009  DIM       10
PTPRA010  DIM       20
.
QCKREGHD  DIM       1
.
REASDESC  DIM       20            * Reason for handover description
REASONHO  DIM       3             * Reason for handover (Cat 'fw')
RECORDKY  DIM       1
REDIREC1  DIM       250
REFDNAME  DIM       50
REGSFLAG  FORM      1
REGIFLAG  FORM      1
REGEXSTM  DIM       3
REPUNIQ   INIT      "yzxywxvwuvtustrsqrpqopnomnlmkljkijhighfgefdecdbcab"
FDVUPDT   INIT      "FDV Related - "
.
.
SAVISTAT  DIM       1             * Save visit status
SAVEADAT  FORM      8
SAVEAMBL  DIM       20
SAVEUD09  DIM       8
SAVEUT09  DIM       8
SAVEAMNT  FORM      3.2
SAVCOUNT  FORM      3
SAVECMNT  DIM       40
SAVDISKY  DIM       17
SAVEDIAG  DIM       100
SAVDOC    DIM       10
SAVEALIA  FORM      1
SAVECOMM  DIM       100
SAVEACTN  DIM       3
SAVEDATE  DIM       8            * saved date for WRTHIS00
SAVEDOCT  DIM       10
SAVEFDOC  DIM       10           * saved first doctor seen
SAVEDRDT  DIM       8
SAVEDRTM  DIM       6
SAVELOCN  DIM       3
SAVEOTDC  DIM       10
SAVEOTDT  DIM       8
SAVEOTTM  DIM       6
SAVENRDT  DIM       8
SAVENRTM  DIM       6
SAVENURS  DIM       10
SAVEREPT  FORM      2
SAVESIN1  DIM       1
SAVESIN7  DIM       1
SAVESIN8  DIM       1
SAVESIN9  DIM       1
SAVESN11  DIM       1
SAVESPEC  DIM       20
SAVETIME  DIM       6            * saved time for WRTHIS00
SAVETIM2  DIM       8            * saved time for WRTHIS00
.
SAVESNAM  DIM       40
SAVEXFNM  DIM       40
SAVEXSNM  DIM       40
SAVETITL  DIM       4
SAVEPSEX  DIM       1
SAVEPDOB  DIM       8
SAVEPFGN  DIM       25
SAVEPMST  DIM       3
SAVEPREG  DIM       3
SAVEPCNT  DIM       3
SAVEPTYP  DIM       3
SAVEABRG  DIM       3
SAVEUSR7  DIM       3
SAVEMEDI  DIM       10
SAVEUSR1  DIM       3
SAVEMCCD  DIM       2
SAVEMEDC  DIM       8
SAVECONP  DIM       1
SAVEUPRF  DIM       3
SAVEINTR  DIM       1
SAVELNG1  DIM       3
SAVEPRVI  DIM       3
SAVEFLDR  DIM       3
SAVECUID  DIM       8
SAVECDAT  DIM       8
SAVECTIM  DIM       8
SAVEDCDT  DIM       8
.
SAVKEY3   DIM       3
SAVKEY8A  DIM       8
SAVKEY18  DIM       18
SAVKEY19  DIM       19
SAVKEY16  DIM       16
SAVLOC    DIM       3
SAVNUR    DIM       10
SAVPFUND  DIM       6
SAVEREFD  DIM       10
SAVSPACE  FORM      3
SAVXPRVI  DIM       3
SAVXRHC1  DIM       10
SAVXRH1G  DIM       10
SAVEPHCP  DIM       10               * Used for HCP Audit as SVMAS variable
SAVEPRAC  DIM       10               * are too small
SAVEPCTR  DIM       2
SAVESN16  DIM       1                * save Status Indicator 16
SAVUPDTY  DIM       5                * Save update type
SPPXUCC4  DIM       3
SPPXUCC5  DIM       3
SPPXATF1  DIM       80
SPPXATF2  DIM       80
.
SAVEUC20  DIM       3      * Save Presenting Complaint (Cat el)
SAVECOM1  DIM       50     * Save Complaint Line 1
SAVECOM2  DIM       50     * Save Complaint Line 2
SAVECOM3  DIM       50     * Save Complaint Line 3
SAVECOM4  DIM       50     * Save Complaint Line 4
SAVECOM5  DIM       50     * Save Complaint Line 5
SAVECOM6  DIM       50     * Save Complaint Line 6
SAVXABRG  DIM       3      * Save indig. status
SAVVCOMP  DIM       3                                
.
SEC       DIM       2
SECTIME   DIM       2
SELCDATE  DIM       8
SELECTCD  DIM       6
SETEMRCM  DIM       1
SETEMRCD  DIM       1
SEQFLAG   FORM      3
SMERGURN  DIM       8
SHOWCDET  FORM      1
SHOWFLAG  DIM       1            * Concession Card or registration flag
SHOWMAND  DIM       1
SPPEML    DIM       80               * Saved email address
SRCHGNAM  DIM       25
SRCHPAGE  DIM       3
SRCHPDOB  DIM       8
SRCHPSEX  DIM       1
SRCHSNAM  DIM       20
STARTKEY  DIM       10       * Starting key
STATNCOD  DIM       6
STATNCD2  DIM       6
STATNCD3  DIM       6
STATNCD4  DIM       6
STATNCD5  DIM       6
STATNCD6  DIM       6
SJOGAUDT  DIM       1
SJOGAUDI  DIM       1
SJOGSUMD  FORM      1
ALIASSTS  DIM       1
STOREFLG  FORM      2
SUPRFLAG  DIM       1
SVEMADMN  DIM       8             * visit Admission Number
SVEMCOMP  DIM       3             * Compensation Code (Cat CL)
SVEMDATE  DIM       8             * arrival Date
SVEMDDAT  DIM       8             * Discharge Date
SVEMDOCT  DIM       10            * Attending doctor
SVEMDTIM  DIM       8             * Discharge Time
SVEMREFD  DIM       10            * Referring doctor
SVEMSRCE  DIM       3             * of Referal (Cat S)
SVEMTIME  DIM       8             * arrival time
SVEMUNIT  DIM       3             * unit (Cat AC)
SVEMURNO  DIM       8             * visit U/R Number (if applicable)
SVPXABRG  DIM       3             * Aboriginality (Cat VA)
SVMABDAT  DIM       8             * Patient birth date
SVMACONT  DIM       3             * Patient Country of Birth (Cat C)
SVMAGNAM  DIM       25            * Patient Givenname
SVPXHOML  DIM       1             * Homeless (Y/N)
SVPXINTR  DIM       1             * Interpreter Required? (Y/N)
SVMAMEDI  DIM       10            * Patient Medicare number
SVMAMSTA  DIM       3             * Patient martial status (Cat M)
SVMAPOST  DIM       8             * Patient Post code
SVMAPREG  DIM       3             * Patient religion (Cat R)
SVMAPSEX  DIM       1             * patient Sex
SVMASNAM  DIM       20            * Patient Surname
SVMASUBB  DIM       35            * Patient suburb
.
SEENDTIM  DIM       16
TABLNAME  DIM       8
TESTDTIM  DIM       16
TESTDATE  DIM       8
TESTTIME  DIM       8
.
TEMPDATE  DIM       12
TESTKEY   DIM       22
THETFLAG  FORM      1
TIME      DIM       8
TODDATE   FORM      8
TODTIME   FORM      4
TODYDATE  DIM       8
TRIREDIR  DIM       1                       * triage redirect flag
TRIGDATE  DIM       16                      * triage date/time for validation
TRIGUSER  DIM       1                       * triage date/time for validation
TRNSCODE  DIM       5
TRNSDATE  DIM       8
TSTAMP0   DIM       12       * working timestamp 0
TSTAMP1   DIM       12       * working timestamp 1
TYPCLAIM  DIM       1
.
UNIQF5    FORM      5
UNKFLAG   FORM      1
REASONFC  DIM       3        * emrchaaf reason for change
REASFC01  DIM       3        * emrchaaf reason for change 1
REASFC02  DIM       3        * emrchaaf reason for change 2
NEWVALUE  DIM       80       * emrchaaf new field value
NEWVAL01  DIM       80       * emrchaaf new field value 1
NEWVAL02  DIM       80       * emrchaaf new field value 2
UPDFIELD  DIM       2        * emrchaaf update type
UPDFLD01  DIM       2        * emrchaaf update type 1
UPDFLD02  DIM       2        * emrchaaf update type 2
UPDVALUE  DIM       80       * emrchaaf old field value
UPDVAL01  DIM       80       * emrchaaf old field value 1
UPDVAL02  DIM       80       * emrchaaf old field value 2
UPDATEKY  DIM       32       * admissno,ccyymmdd,hhmmss,webuseid
UPDTTYPE  DIM       5
USERNAME  DIM       256
URCHKDGT  FORM      4
URNLNGTH  FORM      2
URCHKPRD  FORM      2
URNOWGHT  FORM      1
UPDATPMI  DIM       1
UPSTATUS  DIM       1
.
VAR50     DIM       50
VARIABLE  DIM       3
VCODE     DIM       5
VISITCNT  FORM      2
VISITLST  DIM       8[99]
VISNOTES  DIM       100
VISXDCIN  FORM      1
.
WARCOUNT  FORM      2
WEBCNAME  DIM       30
WEBUNAME  DIM       30
WEBUSEID  DIM       10                      * Web user id
WEBWARNG  DIM       127[12]
WITHTIME  FORM      1
WRITEFLG  DIM       1
WDWPR001  DIM       3
WLDWC001  DIM       80
.
XDATTIME  DIM       14     * Date/Time (ccyymmddhhmmss)
XPRIDIAG  DIM       6      * Primary Diagnosis
XADDIAG1  DIM       6      * Additional Diagnosis 1
.
YEAR2     DIM       2
.
. Mental Health / Legal Status
.
CHNGLEGL  FORM      1         * change legal status flag
.                                 0 = no change
.                                 1 = changed
CHNGREVW  FORM      1         * change review status flag
.                                 0 = no change
.                                 1 = changed
MBSDESC   DIM       40
NEWLEGFL  FORM      1
SAVEREVW  DIM       3
UPDMHDSC  FORM      1        * Update MH patient discharge details (incl. diag)
.
NEWDOCTR  DIM       10       * Doctor Code for new doctor handover
.
CHWCURNO  DIM       8        * Check UR Number (Workers Compensation)
CHWCADMN  DIM       8        * Check Admission Number (Workers Compensation)
.
HEAEDFLG  DIM       1        * Healthscope (NBH) ED flag
.
TELECNTR  DIM       3        * Telehealth record counter
TELESITE  DIM       3        * Telehealth Emergency Site Code (emrsitaf)
TELELOCN  DIM       3        * Telehealth Location
ETSVISFL  FORM      1        * ETS Visit Flag
.
. Following fields are used in AAECHRG/ABFAEINV (CHGAE000)
.
CALCFLAG  FORM      1
CEFFDATE  DIM       8
CNTRCEFR  FORM      1
CONTRCID  DIM       6
NOFEE     FORM      "0"
PROGFLAG  FORM      1
SAVCONTR  DIM       6
WEBFLAG   FORM      1
NETTOT    FORM      12.2
GROSSTOT  FORM      12.2
LSTRATE   FORM      12.2
LINETOT   FORM      12.2
LINEGST   FORM      12.2
CNEXTINV  FORM      8
DFDATE    DIM       8
RECFLAG   FORM      1
FGSTFLAG  FORM      1
SVMGCMMT  FORM      1
XLINETOT  FORM      6.2
XLINEGST  FORM      6.2
NOTELOCN  FORM      1
.
.
. PROGRAM CONSTANTS
. -----------------
.
ADM       INIT      "&admissno="
BEDRWARD  INIT      "~~B"
CATA1     INIT      "A1"
CATA2     INIT      "A2"
CATA3     INIT      "A3"
CATA4     INIT      "A4"
CATA5     INIT      "A5"
CATA6     INIT      "A6"
CATA7     INIT      "A7"
CATA8     INIT      "A8"
CATAP     INIT      "AP"
CATTC     INIT      "tc"
CTAc      INIT      "Ac"
CATct     INIT      "ct"
CATcz     INIT      "cz"
CATSI     INIT      "SI"
CATfw     INIT      "fw"
CATrR     INIT      "rR"
CATtm     INIT      "tm"
CATwl     INIT      "wl"
COMFILPC  INIT      "ECOMNT"
COMFILPR  INIT      "COMFIL"
COMFILPT  INIT      "COMPAT"
COMFILPV  INIT      "COMVIS"
DIMN      INIT      "N"
DISPLYAT  INIT      "at"
DISPLYRS  INIT      "Reason: "
DZEROF    INIT      "005"
EMCHUP01  INIT      "Arrival Date/Time"
EMCHUP02  INIT      "Triage Date/Time"
EMCHUP03  INIT      "Triage Category"
EMCHUP04  INIT      "First Seen By Nurse Date/Time"
EMCHUP05  INIT      "First Seen By Doctor Date/Time"
EMCHUP06  INIT      "First Seen By MH Prac Date/Time"
EMCHUP07  INIT      "Departure Date/Time"
EMCHUP08  INIT      "Triage Nurse"
EMCHUP09  INIT      "Removal of Nurse Seen"
EMCHUP10  INIT      "Departure Status"
EMCHUP11  INIT      "Research"
EMCHUP12  INIT      "Removal of First Doctor Seen"
EMCHUP13  INIT      "Removal of Last Doctor Allocated"
EMCHUP14  INIT      "Update Initial Assessor"
EMCHUP15  INIT      "Update Other"
EMCHUP16  INIT      "Triage End Date/Time"
EMCHUP17  INIT      "Ambulance Handover Date/Time"
EMCHUP18  INIT      "Service Type Update"
EMCHUP19  INIT      "Family Domestic Violence FDV"
.
NWAUFLAG  FORM      "0"
NINETY1   FORM      "91"
NINETY7   FORM      "97"
PRECOMPR  INIT      "PREFIL"
SECALERT  FORM      1
SETSHOWF  INIT      "&showflag=1"
SHOWREGI  INIT      "&regiflag=1"
U         INIT      "U "
UR        INIT      "&urnumber="
SEC1      FORM      "00005"
SP80      INIT      "                                        ":
                    "                                        "
TYPE4     INIT      "004"
TYPE5     INIT      "005"
URWTARAY  INIT      "234567"
ZERO6     INIT      "000000"
ZERO8     INIT      "00000000"
ZERO20    INIT      "00000000000000000000"
.
CCNLUKEY  INIT      " 307 U1-8,72-79,9-18,19-28,29-31":
                    " U1-8,72-79,96-103,9-18,19-28,29-31"
CCNLFILE  DIM       8
.
.         Temporary File Definition
.         -------------------------
.
CCNTEMP1  IFILE SQL, FIXED=307, KEY="U1-8,72-79,9-18,19-28,29-31"
CCNTEMP2  IFILE SQL, FIXED=307, KEY="U1-8,72-79,96-103,9-18,19-28,29-31"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
DSVCRBIL  DIM       8           8      1  Visit number
SVCRDOCT  DIM       10          10     9  Referring consultant
SVCRREFD  DIM       10          10    19  Referred  consultant
DSVCRCNT  DIM       3           3     29  Count
SVCRCMNT  DIM       40         40     32  Comments (for Count = 1)
SVCRDATE  DIM       8           8     72  Date seen
SVCRAMNT  FORM      3.2         4     80  Time Taken (Hrs)
SVCRMISC  DIM       9           9     84  Misc charge (patitemn)
SVCRSPEC  DIM       3           3     93  Speciality Code (Cat 'AC')
SVCRTIME  DIM       8           8     96  Consult Time
SVCRACTN  DIM       3           3     104 Action Code (Cat Ac)
SVCRCOMM  DIM       100       100     107 Comments
SVCRUNIT  DIM       3           3     207 Referred to Consultant Unit
SVCRSPAR  DIM       97          97    210 Spare variable
.
.End of Record                        307
.
.Redefine form fields from key
.-----------------------------
. Name    Type      Length  Description
. ----    ----      ------  --------------------------------------
SVCRBILL  DIM       8       Visit number
SVCRCNTR  FORM      3       Count
.
.-----------------------------------------------------------
PRGID     INIT      "EMRWEB02"
VERSION   INIT      "V12.00.09"
PRGNAM    INIT      "Emergency Details Server"
.-----------------------------------------------------------
.
.------------------------------------------------------------
.         Mainline
.------------------------------------------------------------
MAIN0000  CALL      WEBINT00       * Initialise Fifo Etc.
          CALL      INIT0000       * Open Files
.
MAIN1000  CALL      WEBRED00       * Read Fifo WEBPID and USERID
.
          MOVE      WBSEESC,KEY3
          CALL      RDEMSIT1
          IF        OVRCD=1
            MOVE      "Emergency Site Invalid",WEBTITLE
            CALL      WEBERR00
            GOTO      MAIN1000
          ENDIF
.
          COMPARE   "999",REPORTNO * End Server Process on Report Option 999
          GOTO      MAIN9999 IF EQUAL
.
          CALL      GETMAP00
.
MAIN1020  BRANCH    REPORTNO,MAIN1100,MAIN1200,MAIN1300,MAIN1400,MAIN1500:
                             MAIN1600,MAIN1700,MAIN1800,MAIN1900,MAIN2000:  *10
                             MAIN2100,MAIN2200,MAIN2300,MAIN2400,MAIN2500:
                             MAIN2600,MAIN2700,MAIN2800,MAIN2900,MAIN3000:  *20
                             MAIN3100,MAIN3200,MAIN3300,MAIN3400,MAIN3500:
                             MAIN3600,MAIN3700
.
          PACK      WEBTITLE,PRGID,SP1,VERSION,SP1,PRGNAM,SP70
          MOVE      "INVALID OPTION",WEBTITLE
          CALL      WEBERR00   * Create Output File and Write HTML Page Header
          GOTO      MAIN1000
.
MAIN1100  CALL      PROC0000            * process templates for display/update
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000            * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN1200  CALL      NEWPAT00            * process templates for new patient 
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000            * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN1300  MOVE      UPDTTYPE,F1
          BRANCH    F1,MAIN1310,MAIN1320
          CALL      PATLOC00            * Remote Script for Map View  
          GOTO      MAIN1000
.
MAIN1310  CALL      DOSEEN00            * Remote Script for Doctor Seen
          GOTO      MAIN1000
.
MAIN1320  CALL      QJUMP000            * Remote Script for Que Jump    
          GOTO      MAIN1000
.
MAIN1400  CALL      SHIFT000
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000
          GOTO      MAIN1000
.
MAIN1500  
          GOTO      MAIN1000
.
MAIN1600  
          GOTO      MAIN1000
.
MAIN1700  CALL      INJS0000           * Injury Surveillance Data Capture
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000
          GOTO      MAIN1000
.
MAIN1800  MATCH     SP70,LABELTYP
          IF        !@EQUAL
            MOVE      LBLPRINT,SELPRINT
            MOVE      ONE,REPORTNO       * Labels
            CALL      ADDLP000
            MOVE      "EMRLABLS",PRGID
            CALL      UPDFPL00
            MOVE      "EMRWEB02",PRGID
          ENDIF
.
          MATCH     SP70,LABELTY2
          IF        !@EQUAL
            IF        NOLABEL2 <> 0
              MOVE      LABELTY2,LABELTYP  * Label type
              MOVE      LBLPRIN2,LBLPRINT  * Label printer
              MOVE      NOLABEL2,NOLABEL   * Number of labels
              MOVE      LBLPRINT,SELPRINT
              MOVE      ONE,REPORTNO       * Labels
              CALL      ADDLP000
              MOVE      "EMRLABL2",PRGID
              CALL      UPDFPL00
              MOVE      "EMRWEB02",PRGID
            ENDIF
          ENDIF

.-------- T0852803-start
          MATCH     SP70,LABELTY3
          IF        !@EQUAL
            IF        NOLABEL3 <> 0
              MOVE      LABELTY3,LABELTYP  * Label type
              MOVE      LBLPRIN3,LBLPRINT  * Label printer
              MOVE      NOLABEL3,NOLABEL   * Number of labels
              MOVE      LBLPRINT,SELPRINT
              MOVE      ONE,REPORTNO       * Labels
              CALL      ADDLP000
              MOVE      "EMRLABL3",PRGID
              CALL      UPDFPL00
              MOVE      "EMRWEB02",PRGID
            ENDIF
          ENDIF
.-------- T0852803-end
.
          MATCH     SP70,STATNCOD      * Check to see if there are form to print
          IF        @EQUAL
            GOTO      MAIN1850
          ENDIF
          MOVE      NOLABELF,NOLABEL   * Set up number of forms to print
.
          MOVE      FRMPRINT,SELPRINT
          MOVE      TWO,REPORTNO
          CALL      ADDLP000
          MOVE      "EMRFORMS",PRGID
          CALL      UPDFPF00
          MOVE      "EMRWEB02",PRGID
.
MAIN1850  MATCH     SP70,STATNCD2
          IF        !@EQUAL
            MOVE      STATNCD2,STATNCOD
            MOVE      NOLABLF2,NOLABEL
            MOVE      FRMPRNT2,SELPRINT
            MOVE      FRMPRNT2,FRMPRINT
            MOVE      TWO,REPORTNO
            CALL      ADDLP000
.
            MOVE      "EMRFORM2",PRGID
            MOVE      "02",REPORTNO
            CALL      UPDFPF00
            MOVE      "EMRWEB02",PRGID
            MOVE      "08",REPORTNO
          ENDIF
.
          MATCH     SP70,STATNCD3
          IF        !@EQUAL
            MOVE      STATNCD3,STATNCOD
            MOVE      NOLABLF3,NOLABEL
            MOVE      FRMPRNT3,SELPRINT
            MOVE      FRMPRNT3,FRMPRINT
            MOVE      TWO,REPORTNO
            CALL      ADDLP000
.
            MOVE      "EMRFORM2",PRGID
            MOVE      "03",REPORTNO
            CALL      UPDFPF00
            MOVE      "EMRWEB02",PRGID
            MOVE      "08",REPORTNO
          ENDIF
.
          MATCH     SP70,STATNCD4
          IF        !@EQUAL
            MOVE      STATNCD4,STATNCOD
            MOVE      NOLABLF4,NOLABEL
            MOVE      FRMPRNT4,SELPRINT
            MOVE      FRMPRNT4,FRMPRINT
            MOVE      TWO,REPORTNO
            CALL      ADDLP000
.
            MOVE      "EMRFORM2",PRGID
            MOVE      "04",REPORTNO
            CALL      UPDFPF00
            MOVE      "EMRWEB02",PRGID
            MOVE      "08",REPORTNO
          ENDIF
.
          MATCH     SP70,STATNCD5
          IF        !@EQUAL
            MOVE      STATNCD5,STATNCOD
            MOVE      NOLABLF5,NOLABEL
            MOVE      FRMPRNT5,SELPRINT
            MOVE      FRMPRNT5,FRMPRINT
            MOVE      TWO,REPORTNO
            CALL      ADDLP000
.
            MOVE      "EMRFORM2",PRGID
            MOVE      "05",REPORTNO
            CALL      UPDFPF00
            MOVE      "EMRWEB02",PRGID
            MOVE      "08",REPORTNO
          ENDIF
.
          MATCH     SP70,STATNCD6
          IF        !@EQUAL
            MOVE      STATNCD6,STATNCOD
            MOVE      NOLABLF6,NOLABEL
            MOVE      FRMPRNT6,SELPRINT
            MOVE      FRMPRNT6,FRMPRINT
            MOVE      TWO,REPORTNO
            CALL      ADDLP000
.
            MOVE      "EMRFORM2",PRGID
            MOVE      "06",REPORTNO
            CALL      UPDFPF00
            MOVE      "EMRWEB02",PRGID
            MOVE      "08",REPORTNO
          ENDIF
.
          CALL      NXTPG000
          GOTO      MAIN1000
.
MAIN1900  MOVE      FRMPRINT,SELPRINT
          MOVE      TWO,REPORTNO            * Forms
          CALL      ADDLP000
          CALL      WINALT00
          GOTO      MAIN1000
.
MAIN2000  CALL      MEDNOT00                * Routine for medical notes
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000
          GOTO      MAIN1000
.
MAIN2100  CALL      PRECOM00            * Remote Script for Text Presenting Com
          GOTO      MAIN1000
.
MAIN2200  CALL      CLINOT00            * Remote Script for Clinical Notes
          GOTO      MAIN1000
.
MAIN2300  CALL      DIADTX00            * Remote Script for Diagnosis Text
          GOTO      MAIN1000
.
MAIN2400  CALL      DDTI0000            * Change Docter Seen Date and Time
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000            * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN2500  CALL      NRTI0000            * Change Nurse Seen Date and Time
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000            * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN2600  CALL      PATNOT00                * Routine for patient notes
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000
          GOTO      MAIN1000
.
MAIN2700  CALL      VISNOT00                * Routine for visit notes
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000
          GOTO      MAIN1000
.
MAIN2800  CALL      LADM0000                * Link inpatient admission          
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000                * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN2900  CALL      MDTI0000                * MH Practitioner Seen Date and Time
          BRANCH    EXIT,MAIN1000
.
          CALL      DSEE0000                * Allocate Doctor Seen Date and Time
.
          CALL      NXTPG000                * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN3000  CALL      MANNOT00            * Remote Script for Management Notes 
          GOTO      MAIN1000            * WAHealth
.
MAIN3100  CALL      INTA0000                * Initial Assessor Seen Date & Time
          BRANCH    EXIT,MAIN1000           * (Meet & Greet Ass. Doctor)
.
          CALL      NXTPG000                * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN3200  CALL      ODOC0000                * Other Doctor Seen Date & Time
          BRANCH    EXIT,MAIN1000           * (EMVIUR04)
.
          CALL      NXTPG000                * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN3300  CALL      IAWA0000                * Initial Assessor Seen Date & Time
          BRANCH    EXIT,MAIN1000           * WAHealth
.
          CALL      NXTPG000                * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN3400  CALL      SDWA0000                * Senior Doctor Seen Date & Time
          BRANCH    EXIT,MAIN1000           * WAHealth
.
          CALL      NXTPG000                * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN3500  CALL      PRODH000                * Process Doctor Handover Form (new)
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000                * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN3600  CALL      LOCMGT00                * Location management
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000                * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN3700  CALL      UPDPRI00                * Remote Script for Presenting
.                                           * Complaint Additional Info
          GOTO      MAIN1000
.
MAIN9999  MOVE      "SERVER SHUTDOWN COMPLETE",WEBTITLE
          CALL      WEBERR00
          STOP
.
.------------------------------------------------------------
.        Update Presenting Complant Text
.-----------------------------------------------------------
PRECOM00  CALL      XMLHED00
          BRANCH    EXIT,PRECOM99
.
PRECOM01  CALL      UPDKEY00
          BRANCH    EXIT,PRECOM92
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RLEMVIS1
          BRANCH    OVRCD,PRECOM90,PRECOM91
.
          MOVE      EMVIUC20,SAVEUC20  * Save Presenting Complaint (Cat el)
          MOVE      EMVICOM1,SAVECOM1  * Save Complaint Line 1
          MOVE      EMVICOM2,SAVECOM2  * Save Complaint Line 2
          MOVE      EMVICOM3,SAVECOM3  * Save Complaint Line 3
          MOVE      EMVICOM4,SAVECOM4  * Save Complaint Line 4
          MOVE      EMVICOM5,SAVECOM5  * Save Complaint Line 5
          MOVE      EMVICOM6,SAVECOM6  * Save Complaint Line 6
.
          CALL      ADDPRE00
. 
          CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
.
.         Broadcast update message
.
          MOVE      EMVIURNO,KEY8              * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,PRECOM70
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,PRECOM70
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,PRECOM70
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      ONE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                     * send update emr details
.
PRECOM70  CALL      WRTHIS00
          PROC      EMRDRCHR                    * Update Visit Billing Complete
          CALL      WEDP0000                * Write EDWARD Presenting comp.
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;KEY22;                   * Return History Key
          WRITE     HTMLFILE;"</RETURN_VALUE>"

          GOTO      PRECOM98
.
PRECOM90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      PRECOM98
.
PRECOM91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      PRECOM98
.
PRECOM92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Updated by Another User.":
                             "</RETURN_VALUE>"
          GOTO      PRECOM98
.
PRECOM98  CALL      XMLEND00
PRECOM99  CLOSE     PRECOMAF,DELETE
          RETURN
.------------------------------------------------------------
.        Update Clinical Notes Text
.-----------------------------------------------------------
CLINOT00  CALL      XMLHED00
          BRANCH    EXIT,CLINOT99
.
          CALL      UPDKEY00
          BRANCH    EXIT,CLINOT91
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,CLINOT90
.
          MATCH     SP70,WEBUSEID
          IF        !@EQUAL
            UNPACK    UPDATEKY,ADMISSNO,DIM8,DIM6
            PACK      UPDATEKY,ADMISSNO,DIM8,DIM6,WEBUSEID,SP70
          ENDIF
.
          CALL      UPVCM000
          CALL      WRTHIS00
          PROC      EMRDRCHR                    * Update Visit Billing Complete
          CALL      WEDV0000                     * EDWARD visit alteration
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;KEY22;                   * Return History Key
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      CLINOT98
.
CLINOT90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      CLINOT98
.
CLINOT91  PACK      KEY14,ADMISSNO,ZERO,ZERO,ONE,SP1,SP1,ONE,SP70      *I-56546
          CALL      RDVSCMT1
          BRANCH    OVRCD,CLINOT97
.
          UNPACK    VSCTUKEY,KEY14
          PACK      VSCTUKEY,KEY14,SP70
          CALL      UPVSCMT1                                       *end I-56546
.
CLINOT97  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Updated by another user.":
                             "</RETURN_VALUE>"

CLINOT98  CALL      XMLEND00
CLINOT99  CLOSE     VSCTTFIL,DELETE    * Delete temp file created by CLRVCM00
          RETURN
+
.------------------------------------------------------------
.        Update Diagnosis Text
.-----------------------------------------------------------
DIADTX00  CALL      XMLHED00
          BRANCH    EXIT,DIADTX99
.
..          CALL      CHKREM00
..          BRANCH    EXIT,DIADTX98
. 
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,DIADTX90
.
          MOVE      ADMISSNO,EMDCADMI      * Updating diagnosis comments
          PACK      KEY8,EMDCADMI,SP70
          CALL      RDEMDCM1
          IF        OVRCD=1
            MOVE      ADMISSNO,EMDCADMI      * Updating diagnosis comments
            CALL      ADDDIA00               * Diagnosis file variable storage 
            CALL      WREMDCM1
          ELSE
            MOVE      ADMISSNO,EMDCADMI      * Updating diagnosis comments
            CALL      ADDDIA00               * Diagnosis file variable storage 
            CALL      UPEMDCM1
          ENDIF
.
          CALL      WRTHIS00
          PROC      EMRDRCHR                 * Update Visit Billing Complete
          CALL      WEDV0000                     * EDWARD visit alteration
.
          IF        EXIT<>TWO        
            MOVE      SP70,EXIT
          ENDIF
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
..          WRITE     HTMLFILE;KEY22,"|",TESTKEY,"|",EXIT;                                
          WRITE     HTMLFILE;"</RETURN_VALUE>"

          GOTO      DIADTX98
.
DIADTX90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      DIADTX98
.
DIADTX98  CALL      XMLEND00
DIADTX99  CLOSE     COMFILAF,DELETE
          RETURN
.------------------------------------------------------------
.  Next Page                               Called by MAIN0000
.------------------------------------------------------------
NXTPG000  IF        NEXTPAGE=0
            CALL      WINCLS00 
.            CALL      UPDWCL00              * Refresh parent and close window
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=1
..            CALL      UPDREF00
            CALL      DBGCLS00
.            CALL      WINCLS00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=2
            CALL      RDIREC00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=3
            CALL      UPDDIR00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=4
            CALL      UPDCLS00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=5
            CALL      UCLOSE00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=6
            MOVE      "Your UR number is ",WEBTITLE 
            ENDSET    WEBTITLE
            APPEND    URNUMBER,WEBTITLE
            CALL      UPDDSP00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=7
            CALL      UPDRED00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=8
            CALL      REDMAP00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=9
            CALL      PARDIR00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=10
            CALL      BSIREC00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=11
            CALL      BSDDIR00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=12
            CALL      HDIREC00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=13
            CALL      WARREC00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=14
            CALL      REGREC00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=15
            CALL      MENRED00
          ENDIF
.
          IF        NEXTPAGE=16
            CALL      RCTREC00
          ENDIF
.
          IF        NEXTPAGE=17
            CALL      RFRESH00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=18
            CALL      TOGMAP00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=19
            CALL      TOGMPP00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=20
            CALL      REGADM00
            GOTO      NXTPG999
          ENDIF
.
          IF        NEXTPAGE=21
            CALL      UPDRUA00
            GOTO      NXTPG999
          ENDIF
.
NXTPG999  RETURN
.------------------------------------------------------------
.         UPDDSP00  & Display alert which contains UR Number
.------------------------------------------------------------
UPDDSP00  CALL      OPENHTML
          BRANCH    EXIT,UPDDSP90
.
          REP       " +",ADMISSNO
          REP       " +",URNUMBER
          PACK      REDIRECT,REDIRECT,ADM,ADMISSNO,UR,URNUMBER
          SQUEEZE   REDIRECT
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             " alert(#"",WEBTITLE,"#");":
                             " opener.location.href=#"",REDIRECT,"#";":
                             " self.close();":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          GOTO      UPDDSP99
.
UPDDSP90  DISPLAY   "*** Fifo Not Found ***"
.
UPDDSP99  RETURN
.------------------------------------------------------------
. Refresh Parent and Close Window
.------------------------------------------------------------
DBGCLS00  CALL      OPENHTML
          BRANCH    EXIT,DBGCLS90
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#" ":
                             "src=#"../js/Standard.js#"></script>":
                             "<script type=#"text/javascript#" ":
                             "src=#"../js/Custom.js#"></script>":
                             "<script type=#"text/javascript#"> {":
                             " if (self.name==#"PopUpFrame#") {":
                             "  reloadParentFrame();}":
                             " else { ":
                             "  window.history.go(-1);":
                             "  self.close(); }}":
                             "</script>"
          CALL      CLOSHTML
          GOTO      DBGCLS99
.
DBGCLS90  DISPLAY   "*** Fifo Not Found *** Rep:",REPORTNO:
                    " FA:",FORMACTN," UR:",URNUMBER," Adm:",ADMISSNO
.
DBGCLS99  RETURN
.------------------------------------------------------------
.         UPDWCL00
.------------------------------------------------------------
UPDWCL00  CALL      OPENHTML
          BRANCH    EXIT,UPDWCL90
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             "    if (opener.name==#"PopUpFrame#") {":
                             "     opener.parent.PopupScreen.style.display=":
                             "     #"none#"; ":
                             "     opener.parent.location.reload(1);":
                             "     self.close();}":
                             "    else { ":
                             "     opener.opener.history.go(0);":
                             "     opener.close;":
                             "     self.close();}":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          GOTO      UPDWCL99
.
UPDWCL90  DISPLAY   "*** Fifo Not Found ***"
.
UPDWCL99  RETURN
.------------------------------------------------------------
.         UPDREF00
.------------------------------------------------------------
UPDREF00  CALL      OPENHTML
          BRANCH    EXIT,UPDREF90
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             " opener.history.go(0);":
                             " self.close();":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          GOTO      UPDREF99
.
UPDREF90  DISPLAY   "*** Fifo Not Found ***"
.
UPDREF99  RETURN
.------------------------------------------------------------
.  Redirect URL
.------------------------------------------------------------
HDIREC00  CALL      OPENHTML
          BRANCH    EXIT,HDIREC99
          WRITE     HTMLFILE;"<script type=#"text/javascript#" ":
                             " src=#"../js/Standard.js#"></script>":
                             "<script type=#"text/javascript#" ":
                             " src=#"../js/Custom.js#"></script>":
                             "<script type=#"text/javascript#"> {":
                             " if (self.name.match(/PopUpFrame/)) {":
                             "  redirectParentFrame(#"",REDIRECT,"#");}":
                             " else {":
                             "  location.href=#"",REDIRECT,"#"}":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          GOTO      HDIREC99
.
HDIREC90  DISPLAY   "*** Fifo Not Found ***"
.
HDIREC99  RETURN
.------------------------------------------------------------
.  Redirect URL and display warnings.
.------------------------------------------------------------
WARREC00  CALL      OPENHTML
          BRANCH    EXIT,WARREC99
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {"
.
          COMPARE   ZERO,WARCOUNT
          GOTO      WARREC20 IF EQUAL
.
          MOVE      ONE,COUNTER
WARREC10  WRITE     HTMLFILE;"    alert(#"",WEBWARNG[COUNTER],"#");",012
          ADD       ONE,COUNTER
          COMPARE   COUNTER,WARCOUNT
          GOTO      WARREC20 IF LESS
          GOTO      WARREC10
.
WARREC20  WRITE     HTMLFILE;" if (self.name.match(/PopUpFrame/)) {":
                       "  parent.PopUpScreen.style.display=#"none#"; ":
                            "  parent.location.href=#"",REDIRECT,"#"}":
                            " else {":
                            "  location.href=#"",REDIRECT,"#"}":
                            "}":
                            "</script>"
          CALL      CLOSHTML
          GOTO      WARREC99
.
WARREC90  DISPLAY   "*** Fifo Not Found ***"
.
WARREC99  RETURN
.------------------------------------------------------------
.         UPDRED00
.------------------------------------------------------------
UPDRED00  CALL      OPENHTML
          BRANCH    EXIT,UPDRED90
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             "if (opener.name==#"PopUpFrame#") {":
                             " opener.parent.PopUpScreen.style.display=":
                             " #"none#"; ":
                             " opener.parent.location.href=#"",REDIRECT,"#";":
                             " self.close();}":
                             "else {":
                             " opener.location.href=#"",REDIRECT,"#";":
                             " self.close();}":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          GOTO      UPDRED99
.
UPDRED90  DISPLAY   "*** Fifo Not Found ***"
.
UPDRED99  RETURN
.------------------------------------------------------------
.         REDMAP00
.------------------------------------------------------------
REDMAP00  CALL      OPENHTML
          BRANCH    EXIT,REDMAP90
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#" ":
                             "src=#"../js/Standard.js#"></script>":
                             "<script type=#"text/javascript#" ":
                             "src=#"../js/Custom.js#"></script>":
                             "<script type=#"text/javascript#"> ":
                               " alert(#"",WEBTITLE,"#");":
                               "getTop().menu.location.reload();":
                               "getTop().content.location.reload();":
                             "</script>"
.
          CALL      CLOSHTML
          GOTO      REDMAP99
.
REDMAP90  DISPLAY   "*** Fifo Not Found ***"
.
REDMAP99  RETURN
.
.------------------------------------------------------------
.         TOGMAP00
.------------------------------------------------------------
TOGMAP00  CALL      OPENHTML
          BRANCH    EXIT,TOGMAP90
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#" ":
                             "src=#"../js/Standard.js#"></script>":
                             "<script type=#"text/javascript#" ":
                             "src=#"../js/Custom.js#"></script>":
                             "<script type=#"text/javascript#"> ":
                               "getTop().menu.location.reload();":
                               "getTop().content.location.reload();":
                               "top.TogglePanel();":
                             "</script>"
.
          CALL      CLOSHTML
          GOTO      TOGMAP99
.
TOGMAP90  DISPLAY   "*** Fifo Not Found ***"
.
TOGMAP99  RETURN
.
.
.------------------------------------------------------------
.         TOGMPP00
.------------------------------------------------------------
TOGMPP00  CALL      OPENHTML
          BRANCH    EXIT,TOGMPP90
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#" ":
                             "src=#"../js/Standard.js#"></script>":
                             "<script type=#"text/javascript#" ":
                             "src=#"../js/Custom.js#"></script>":
                             "<script type=#"text/javascript#"> ":
                               "getTop().menu.location.reload();":
                               " redirectTopContent(#"",REDIRECT,"#"); ":
                             "</script>"
.
          CALL      CLOSHTML
          GOTO      TOGMPP99
.
TOGMPP90  DISPLAY   "*** Fifo Not Found ***"
.
TOGMPP99  RETURN
.
.------------------------------------------------------------
.         PARDIR00
.------------------------------------------------------------
PARDIR00  CALL      OPENHTML
          BRANCH    EXIT,PARDIR90
.
          REP       " +",ADMISSNO
          REP       " +",URNUMBER
          PACK      REDIRECT,REDIRECT,ADM,ADMISSNO,UR,URNUMBER
          SQUEEZE   REDIRECT
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
.
.
          MATCH     "1",SHOWFLAG
          IF        @EQUAL
            PACK      REDIREC1,REDIRECT,SETSHOWF
            SQUEEZE   REDIREC1
            WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                               " parent.location.href=#"",REDIREC1,"#";":
                               "}":
                               "</script>"
          ELSE
            WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                               " parent.location.href=#"",REDIRECT,"#";":
                               "}":
                               "</script>"
          ENDIF
.
          CALL      CLOSHTML
          GOTO      PARDIR99
.
PARDIR90  DISPLAY   "*** Fifo Not Found ***"
.
PARDIR99  RETURN
.------------------------------------------------------------
.         UPDDIR00
.------------------------------------------------------------
UPDDIR00  CALL      OPENHTML
          BRANCH    EXIT,UPDDIR90
.
          REP       " +",ADMISSNO
          REP       " +",URNUMBER
          PACK      REDIRECT,REDIRECT,ADM,ADMISSNO,UR,URNUMBER
          SQUEEZE   REDIRECT
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
.
          MATCH     "1",SHOWFLAG
          IF        @EQUAL
            PACK      REDIREC1,REDIRECT,SETSHOWF
            SQUEEZE   REDIREC1
            WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                               " opener.location.href=#"",REDIREC1,"#";":
                               " self.close();":
                               "}":
                               "</script>"
          ELSE
            WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                               " opener.location.href=#"",REDIRECT,"#";":
                               " self.close();":
                               "}":
                               "</script>"
          ENDIF
.
          CALL      CLOSHTML
          GOTO      UPDDIR99
.
UPDDIR90  DISPLAY   "*** Fifo Not Found ***"
.
UPDDIR99  RETURN
.
.------------------------------------------------------------
.         REGREC00
.------------------------------------------------------------
REGREC00  CALL      OPENHTML
          BRANCH    EXIT,REGREC90
.
          REP       " +",ADMISSNO
          REP       " +",URNUMBER
          PACK      REDIRECT,REDIRECT,UR,URNUMBER,ADM,ADMISSNO,SHOWREGI
          SQUEEZE   REDIRECT
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
..                             " alert(#"",WEBTITLE,"#");":
                             " opener.location.href=#"",REDIRECT,"#";":
                             " self.close();":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          GOTO      REGREC99
.
REGREC90  DISPLAY   "*** Fifo Not Found ***"
.
REGREC99  RETURN
.
.------------------------------------------------------------
.         REGADM00
.------------------------------------------------------------
REGADM00  CALL      OPENHTML
          BRANCH    EXIT,REGADM90
.
          REP       " +",ADMISSNO
          REP       " +",URNUMBER
          PACK      REDIRECT,REDIRECT,UR,URNUMBER,ADM,ADMISSNO
          SQUEEZE   REDIRECT
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
.
          WRITE     HTMLFILE;REDIRECT;
.
          CALL      CLOSHTML
          GOTO      REGADM99
.
REGADM90  DISPLAY   "*** Fifo Not Found ***"
.
REGADM99  RETURN
.------------------------------------------------------------
.         close and redirect
.------------------------------------------------------------
UPDCLS00  CALL      OPENHTML
          BRANCH    EXIT,UPDCLS90
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             "if (opener.opener.name==#"content#") {":
                             " opener.opener.location.href=#"",REDIRECT,"#" }":
                             " else { ":
                             " opener.opener.opener.location.reload(); ":
                             " opener.opener.close();":
                             "}":
                             " opener.close();":
                             " self.close();":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          GOTO      UPDCLS99
.
UPDCLS90  DISPLAY   "*** Fifo Not Found ***"
.
UPDCLS99  RETURN
.------------------------------------------------------------
.  Redirect URL + error
.------------------------------------------------------------
BSIREC00  CALL      OPENHTML
          BRANCH    EXIT,BSIREC99
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             " alert(#"",WEBTITLE,"#");":
                             " location.href=#"",REDIRECT,"#";":
                             "}":
                             "</script>"

          CALL      CLOSHTML
          GOTO      BSIREC99

BSIREC90  DISPLAY   "*** Fifo Not Found ***"
.
BSIREC99  RETURN
.------------------------------------------------------------
. Output HTML Error File & go back 2 pages
.------------------------------------------------------------
WEBER200  CALL      OPENHTML
          BRANCH    EXIT,WEBER295
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             "    if(self.name==#"PopUpFrame#");":
                             "    alert(#"",WEBTITLE,"#");":
                             "    opener.history.go(-2);":
                             "    self.close;":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          GOTO      WEBER299
.
WEBER295  DISPLAY   "*** Fifo Not Found ***"
.
WEBER299  RETURN
.------------------------------------------------------------
.         UPDDIR00
.------------------------------------------------------------
BSDDIR00  CALL      OPENHTML
          BRANCH    EXIT,BSDDIR90
.
          REP       " +",ADMISSNO
          REP       " +",URNUMBER
          PACK      REDIRECT,REDIRECT,ADM,ADMISSNO,UR,URNUMBER
          SQUEEZE   REDIRECT
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
.
          MATCH     "1",SHOWFLAG
          IF        @EQUAL
            PACK      REDIREC1,REDIRECT,SETSHOWF
            SQUEEZE   REDIREC1
.
            MATCH     "1",PTCNUFFR
            IF        @EQUAL
              WRITE     HTMLFILE;"<script type=#"text/javascript#" ":
                             "src=#"../js/Standard.js#"></script>":
                                 "<script type=#"text/javascript#"> {":
            " getTop().menu.EmergencyFrameLink(#"",REDIREC1,"#",0,0,1008,521);":
..                               " self.close();":
                               "}":
                               "</script>"
            ELSE
              WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                 " top.menu.EmergencyFrameLink(#"",REDIREC1,"#",0,0,1008,521);":
..                               " self.close();":
                               "}":
                               "</script>"
            ENDIF
          ELSE
            MATCH     "1",PTCNUFFR
            IF        @EQUAL
              WRITE     HTMLFILE;"<script type=#"text/javascript#" ":
                             "src=#"../js/Standard.js#"></script>":
                                 "<script type=#"text/javascript#"> {":
            " getTop().menu.EmergencyFrameLink(#"",REDIRECT,"#",0,0,1008,521);":
..                               " self.close();":
                               "}":
                               "</script>"
            ELSE
              WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                 " top.menu.EmergencyFrameLink(#"",REDIRECT,"#",0,0,1008,521);":
..                               " self.close();":
                               "}":
                               "</script>"
            ENDIF
          ENDIF
          CALL      CLOSHTML
          GOTO      BSDDIR99
.
BSDDIR90  DISPLAY   "*** Fifo Not Found ***"
.
BSDDIR99  RETURN
.------------------------------------------------------------
.------------------------------------------------------------
. Patient Medical Note Maintenance
.------------------------------------------------------------
MEDNOT00  PACK      KEY8,URNUMBER,SP70
          CALL      RDMAST1
          BRANCH    OVRCD,MEDNOT90
.
          RESET     UPDTTYPE
          MATCH     SP70,UPDTTYPE
          GOTO      MEDNOT99 IF EQUAL
.          GOTO      MEDNOT40 IF EQUAL
.
          MATCH     "A",UPDTTYPE           * Add Formaction
          GOTO      MEDNOT10 IF EQUAL
.
          GOTO      MEDNOT91
.
MEDNOT10  CALL      ADDMED00              * Add New Type of Note SubRoutine
          MOVE      ZERO,EXIT
          GOTO      MEDNOT99
.
MEDNOT90  MOVE      "Invalid Patient Visit Number ",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      MEDNOT99
.
MEDNOT91  MOVE      "Invalid Form Action.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      MEDNOT99
.
MEDNOT99  CLOSE     COMFILAF,DELETE
          RETURN
.------------------------------------------------------------
. Get the time in waiting
.------------------------------------------------------------
GETWAT00  MOVE      EMVIDATE,FIRSTDAT
          UNPACK    EMVITIME,HOUR,D1,MIN
          PACK      FIRSTIME,HOUR,MIN
          REP       " 0",FIRSTDAT
          REP       " 0",FIRSTIME
.
          PACK      LASTDATE,CCC,CYY,CMM,CDD
          REP       " 0",LASTDATE
          UNPACK    CTIMEIS,HOUR,D1,MIN
          PACK      LASTTIME,HOUR,MIN
          REP       " 0",LASTTIME
          CALL      TIMEDIFF
          MOVE      CALCTIME,WAITTIME
GETWAT99  RETURN
.------------------------------------------------------------
. Get the time for C-Type indicator, if > than 4 hours 
.------------------------------------------------------------
GETCTP00  CALL      CHKWHO00 

..          MOVE      EMVITRDT,CTYPDATE      * Triage date
..          MOVE      EMVITRTM,CTYPTIME      * Triage time
.
          MOVE      CTYPDATE,FIRSTDAT       * Doctor/Nurse seen date
          UNPACK    CTYPTIME,HOUR,D1,MIN    * Doctor/Nurse seen time
          PACK      FIRSTIME,HOUR,MIN
          REP       " 0",FIRSTDAT
          REP       " 0",FIRSTIME
.
          PACK      LASTDATE,CCC,CYY,CMM,CDD
          REP       " 0",LASTDATE
          UNPACK    CTIMEIS,HOUR,D1,MIN
          PACK      LASTTIME,HOUR,MIN
          REP       " 0",LASTTIME
          CALL      TIMEDIFF
          MOVE      CALCTIME,CTYPETIM
GETCTP99  RETURN
.------------------------------------------------------------
. Check who the c-type will be worked out from doctor/nurse
.------------------------------------------------------------
CHKWHO00  MOVE      SP70,CTYPDATE   
          MOVE      SP70,CTYPTIME

          MATCH     SP70,EMVIDOCT
          IF        @EQUAL           
            MATCH     SP70,EMVIATNS
            IF        @EQUAL
              GOTO      CHKWHO99
            ELSE
              MOVE      EMVINSDT,CTYPDATE 
              MOVE      EMVINSTM,CTYPTIME
              GOTO      CHKWHO99
            ENDIF
          ELSE
            MATCH     SP70,EMVIATNS
            IF        @EQUAL
              MOVE      EMVIDRDT,CTYPDATE 
              MOVE      EMVIDRTM,CTYPTIME
              GOTO      CHKWHO99
            ENDIF
          ENDIF

          PACK      KEY16,EMVIDRDT,EMVIDRTM,SP70
          REP       ":0",KEY16
          PACK      SAVKEY16,EMVINSDT,EMVINSTM,SP70
          REP       ":0",SAVKEY16
.
          MATCH     SAVKEY16,KEY16    * Check Who was first 
          IF        @LESS
            MOVE      EMVIDRDT,CTYPDATE 
            MOVE      EMVIDRTM,CTYPTIME
          ELSE
            MOVE      EMVINSDT,CTYPDATE 
            MOVE      EMVINSTM,CTYPTIME
          ENDIF 
.
CHKWHO99  RETURN
.------------------------------------------------------------
. Process Template Fields                  Called by WEBBOD00
.------------------------------------------------------------
PROFLD00  BRANCH    REPORTNO,PROFLD10,PROFLD10,PROFLD30,PROFLD40,PROFLD50:
                             PROFLD60,PROFLD70,PROFLD99,PROFLD99,PROFLD99:
                             PROFLD99,PROFLD99,PROFLD99,PROFLD99,PROFLD99:
                             PROFLD99,PROFLD99,PROFLD99,PROFLD99,PROFLD99:
                             PROFLD99,PROFLD99,PROFLD99,PROFLD99,PROFLD10:
                             PROFLD99
          GOTO      PROFLD99
.
PROFLD10  BRANCH    FLDSETNO,PROFLD11,PROFLD12,PROFLD13,PROFLD14,PROFLD15:
                             PROFLD16,PROFLD17,PROFLD18,PROFLD19,PROFLD20
          GOTO      PROFLD99
.
PROFLD11  CALL      MASF0000             * master file fields
          GOTO      PROFLD99
.
PROFLD12  CALL      EMRA0000             * emrvisaf/emrunkaf/emrvpraf/emrvdgaf
          GOTO      PROFLD99
.
PROFLD13  CALL      EMRB0000             * emrvisaf user defined fields
          GOTO      PROFLD99
.
PROFLD14  MOVE      PTMXREGP,GENPCODE
          CALL      MSXF0000
          GOTO      PROFLD99
.
PROFLD15  CALL      EMDL0000             * Emergency Details
          GOTO      PROFLD99
.
PROFLD16  CALL      TRSR0000             * Transfer Source Listing    
          GOTO      PROFLD99
.
PROFLD17  CALL      PMIX0000             * PMI extension file
          GOTO      PROFLD99
.
PROFLD18  CALL      GETCTP00             * Routine to get time diff 
          WRITE     HTMLFILE;CTYPETIM;
          GOTO      PROFLD99
.
PROFLD19  CALL      EMRC0000             * Other Clinic details
          GOTO      PROFLD99
.
PROFLD20  CALL      MISC0000             * Other misc tags
          GOTO      PROFLD99
.
PROFLD30  BRANCH    FLDSETNO,PROFLD31,PROFLD32,PROFLD33
          GOTO      PROFLD99    
.
PROFLD31  CALL      MASF0000
          GOTO      PROFLD99
.
PROFLD32  CALL      EMRA0000
          GOTO      PROFLD99
.
PROFLD33  CALL      EMDL0000
          GOTO      PROFLD99
.
PROFLD40  BRANCH    FLDSETNO,PROFLD41,PROFLD42
          GOTO      PROFLD99
.
PROFLD41  CALL      ESCH0000             * Emergency Shift change
          GOTO      PROFLD99
.
PROFLD42  CALL      TRSR0000             * Transfer Source Listing
          GOTO      PROFLD99
.
PROFLD50  BRANCH    FLDSETNO,PROFLD51,PROFLD52,PROFLD53
          GOTO      PROFLD99             
.
PROFLD51  CALL      MASF0000
          GOTO      PROFLD99
.
PROFLD52  CALL      EMRA0000
          GOTO      PROFLD99             * Not Currently Used
.
PROFLD53  CALL      EMDL0000
          GOTO      PROFLD99
.
PROFLD60  BRANCH    FLDSETNO,PROFLD61,PROFLD62,PROFLD63,PROFLD64,PROFLD65:
                             PROFLD66
          GOTO      PROFLD99
.
PROFLD61
          GOTO      PROFLD99
.
PROFLD62  CALL      MASF0000
          GOTO      PROFLD99
.
PROFLD63  CALL      EMRA0000
          GOTO      PROFLD99
.
PROFLD64  CALL      EMRB0000
          GOTO      PROFLD99
.
PROFLD65  CALL      MSXF0000
          GOTO      PROFLD99
.
PROFLD66  CALL      EMDL0000
          GOTO      PROFLD99
.
PROFLD70  BRANCH    FLDSETNO,PROFLD71,PROFLD72,PROFLD73,PROFLD74
.
PROFLD71  CALL      MASF0000
          GOTO      PROFLD99
.
PROFLD72  CALL      EMRA0000
          GOTO      PROFLD99
.
PROFLD73  CALL      EMRB0000
          GOTO      PROFLD99
.
PROFLD74  CALL      EMDL0000
          GOTO      PROFLD99
.
PROFLD99  RETURN
+
.------------------------------------------------------------
.         Process other misc tags
.------------------------------------------------------------
MISC0000  BRANCH    FLDITMNO,MISC0010,MISC0020,MISC0030,MISC0040,MISC0050:
                             MISC0060,MISC0070,MISC0080,MISC0090,MISC0100:
                             MISC0110,MISC0120,MISC0130,MISC0140,MISC0150:
                             MISC0160,MISC0170,MISC0180,MISC0190,MISC0200:
                             MISC0210,MISC0220,MISC0230,MISC0240,MISC0250:
                             MISC0260,MISC0270,MISC0280,MISC0290,MISC0300:
                             MISC0310,MISC0320,MISC0330,MISC0340,MISC0350:
                             MISC0360,MISC0370,MISC0380,MISC0390,MISC0400:
                             MISC0410,MISC0420,MISC0430,MISC0440,MISC0450:
                             MISC0460,MISC0470,MISC0480,MISC0490,MISC0500:
                             MISC0510,MISC0520,MISC0530,MISC0540,MISC0550:
                             MISC0560,MISC0570,MISC0580,MISC0590,MISC0600
          GOTO      MISC9999
.
MISC0010  UNPACK    DIM127,D1,KEY3,DIM127
          MOVE      ZERO,FLDITMNO
          MOVE      KEY3,FLDITMNO
          CALL      MISF0000
          GOTO      MISC9999
.
MISC0020  UNPACK    DIM127,D1,KEY3,DIM127
          MOVE      ZERO,FLDITMNO
          MOVE      KEY3,FLDITMNO
          CALL      MHVS0000      * Mental Health Visit Details
          GOTO      MISC9999
.
MISC0030  UNPACK    DIM127,D1,KEY3,DIM127
          MOVE      ZERO,FLDITMNO
          MOVE      KEY3,FLDITMNO
          CALL      MHDS0000      * Mental Health Discharge Details
          GOTO      MISC9999
.
MISC0040  UNPACK    DIM127,D1,KEY3,DIM127
          MOVE      ZERO,FLDITMNO
          MOVE      KEY3,FLDITMNO
          CALL      HLSF0000      * Mental Health Legal Status Header Details
          GOTO      MISC9999
.
MISC0050  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          MOVE      SP70,DOCTRHIS
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
MISC0051  CALL      RPEMHIS1
          BRANCH    OVRCD,MISC9999
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      MISC9999 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT         * Doctor allocated?
          GOTO      MISC0051 IF NOT EQUAL
.
          BRANCH    F1,MISC0052
.
          WRITE     HTMLFILE;EMHIDOC;
          GOTO      MISC9999
.
MISC0052  PACK      KEY6,EMHIDOC,SP70
          CALL      RDDOCT1
          IF        OVRCD=0
            STRIP     DTITL
            APPEND    DTITL,DOCTRHIS
            APPEND    SP1,DOCTRHIS
            STRIP     DGNAME
            APPEND    DGNAME,DOCTRHIS
            APPEND    SP1,DOCTRHIS
            STRIP     DSNAME
            APPEND    DSNAME,DOCTRHIS
          ENDIF
          RESET     DOCTRHIS
          WRITE     HTMLFILE;DOCTRHIS
          GOTO      MISC9999
.
MISC0060  MOVE      SP70,DOCTRHIS
          PACK      KEY6,NEWDOCTR,SP70      * New doctor code (Doctor Handover)
          CALL      RDDOCT1
          IF        OVRCD=0
            STRIP     DTITL
            APPEND    DTITL,DOCTRHIS
            APPEND    SP1,DOCTRHIS
            STRIP     DGNAME
            APPEND    DGNAME,DOCTRHIS
            APPEND    SP1,DOCTRHIS
            STRIP     DSNAME
            APPEND    DSNAME,DOCTRHIS
          ENDIF
          RESET     DOCTRHIS
          WRITE     HTMLFILE;DOCTRHIS
          GOTO      MISC9999
.
MISC0070  CALL      PATNAB00
          WRITE     HTMLFILE;PATFNAME;      * Patient name with Title first
          GOTO      MISC9999
.
MISC0080  WRITE     HTMLFILE;NEWDOCTR;      * New doctor code
          GOTO      MISC9999
.
MISC0090  UNPACK    DIM127,D1,FLDITEM,DIM127
          MOVE      FLDITEM,FLDITMNO
          MATCH     SP70,EMVIUR04
          GOTO      MISC9999 IF EQUAL
.
          MOVE      EMVIUR04,KEY6
          CALL      RDDOCT1
          BRANCH    OVRCD,MISC9999
.
          CALL      DOCF0000
          GOTO      MISC9999
.
MISC0100  UNPACK    DIM127,D1,FLDITEM,DIM127
          MOVE      FLDITEM,FLDITMNO
          MATCH     SP70,EMVIUR05
          GOTO      MISC9999 IF EQUAL
.
          MOVE      EMVIUR05,KEY6
          CALL      RDDOCT1
          BRANCH    OVRCD,MISC9999
.
          CALL      DOCF0000
          GOTO      MISC9999
.
MISC0110  UNPACK    DIM127,D1,FLDITEM,DIM127
          MOVE      FLDITEM,FLDITMNO
          MATCH     SP70,EMVIDOCT
          GOTO      MISC9999 IF EQUAL
.
          MOVE      EMVIDOCT,KEY6
          CALL      RDDOCT1
          BRANCH    OVRCD,MISC9999
.
          CALL      DOCF0000
          GOTO      MISC9999
.
MISC0120  CALL      GETQKR00
          WRITE     HTMLFILE;QCKREGHD;
          GOTO      MISC9999
.
MISC0130  CALL      GEMVC000
          GOTO      MISC9999
.
MISC0140  COMPARE   ONE,VISXDCIN
          GOTO      MISC9999 IF EQUAL
.
          MOVE      ONE,VSTYPIND       * Data Type 1 ('Alcohol')
          MOVE      ONE,VSVALIND       * Value Field 1
          MOVE      ADMISSNO,VSXDC001
          CALL      GETOVL00           * Get Value Field value 1
          WRITE     HTMLFILE;VSVALVAL;
          GOTO      MISC9999
.
MISC0150  COMPARE   ONE,VISXDCIN
          GOTO      MISC9999 IF EQUAL
.
          MOVE      ONE,VSTYPIND       * Data Type 1 ('Alcohol')
          MOVE      ONE,VSCODIND       * Coded Field 1
          MOVE      ADMISSNO,VSXDC001
          CALL      GETVCV00           * Get Coded Field value 1
          WRITE     HTMLFILE;VSCODVAL;
          GOTO      MISC9999
.
MISC0160  COMPARE   ONE,VISXDCIN
          GOTO      MISC9999 IF EQUAL
.
          MOVE      ONE,VSTYPIND       * Data Type 1 ('Alcohol')
          MOVE      ONE,VSTXTIND       * Text Field 1
          MOVE      ADMISSNO,VSXDC001
          CALL      GETTVV00           * Get Text Field value 1
          WRITE     HTMLFILE;VSTXTVAL;
          GOTO      MISC9999
.
MISC0170  COMPARE   ONE,VISXDCIN
          GOTO      MISC9999 IF EQUAL
.
          MOVE      ONE,VSTYPIND       * Data Type 1 ('Alcohol')
          MOVE      ONE,VSYENIND       * Y/N Field 1
          MOVE      ADMISSNO,VSXDC001
          CALL      GETVYN00           * Get Y/N Field value 1
          WRITE     HTMLFILE;VSYENVAL;
          GOTO      MISC9999
.
MISC0180  MOVE      "al",CATEGORY
          MOVE      VSXDCOD1,CODE
          CALL      CODITM00
          GOTO      MISC9999
.
MISC0190  MATCH     "1",PTCNUESF
          GOTO      MISC9999 IF NOT EQUAL
.
          MATCH     SP70,EMVIUC21
          GOTO      MISC9999 IF EQUAL
          GOTO      MISC9999 IF EOS
.
          MOVE      "em",CATEGORY
          MOVE      EMVIUC21,CODE
.
          PACK      KEY5,CATEGORY,CODE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,MISC9999
.
          MATCH     "R",TCINDC4
          GOTO      MISC9999 IF NOT EQUAL
.
          WRITE     HTMLFILE;ONE;
.
          GOTO      MISC9999
.
MISC0200  PACK      KEY7,WBSEESC,ANSW,SP70
          CALL      RSEMLOC3
MISC0201  CALL      RKEMLOC3
          BRANCH    OVRCD,MISC9999
.
          MATCH     ANSW,EMLOTYPE
          IF        @EQUAL
            WRITE     HTMLFILE;EMLOLOCA;    * default Waiting Room location
            GOTO      MISC9999
          ENDIF
          GOTO      MISC0201
.
MISC0210  UNPACK    DIM127,D1,NOTEFILT,DIM127
.
          PACK      KEY17,ADMISSNO,NOTEFILT,SP70
          CALL      RSVSMDT1
          CALL      RKVSMDT1
          BRANCH    OVRCD,MISC0212
.
          MATCH     VSMDVISN,ADMISSNO
          GOTO      MISC0212 IF NOT EQUAL
.
          MATCH     VSMDTYPE,NOTEFILT
          GOTO      MISC0212 IF NOT EQUAL
.
          MATCH     "1",VSMDDELT       * Deleted?
          GOTO      MISC0212 IF EQUAL
.
MISC0211  WRITE     HTMLFILE;ONE;      * Note Type exists for admission
          GOTO      MISC9999
.
MISC0212  WRITE     HTMLFILE;ZERO;     * Note Type does NOT exist for admission
          GOTO      MISC9999
.
MISC0220  UNPACK    DIM127,D1,NOTEFILT,DIM127
          UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,NOTEORDR
          MOVE      KEY1,NOTEORDR
.
          UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,NOTEDETL
          MOVE      KEY1,NOTEDETL
.
          PROC      DISPVISN           * Display Visit Notes
          GOTO      MISC9999
.
MISC0230  CALL      METHD000                * Meth. Related diagnosis?
          GOTO      MISC9999
.
MISC0240  WRITE     HTMLFILE;WBSEDOC;       * Linked Doctor Code 
          GOTO      MISC9999
.
MISC0250  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
.
          MATCH     SP70,PTDAADTS           * Admission transfer source
          GOTO      MISC9999 IF EQUAL
          BRANCH    F1,MISC0255
.
          WRITE     HTMLFILE;PTDAADTS;
          GOTO      MISC9999
.
MISC0255  PACK      KEY5,PTDAADTS,SP70
          CALL      RDPTVAD1
          BRANCH    OVRCD,MISC9999
.
          WRITE     HTMLFILE;PTVADESC;
          GOTO      MISC9999
.
MISC0260  WRITE     HTMLFILE;TELECNTR;      * Telehealth record counter
          GOTO      MISC9999
.
MISC0270  WRITE     HTMLFILE;TELESITE;      * Telehealth Emergency Site Code
          GOTO      MISC9999
.
MISC0280  WRITE     HTMLFILE;TELELOCN;      * Telehealth Location
          GOTO      MISC9999
.
MISC0290  WRITE     HTMLFILE;ETSVISFL;      * ETS Visit Flag
          GOTO      MISC9999
.
MISC0300  WRITE     HTMLFILE;EMSTEDST;      * Site Stat. Template for Disch Sum
          GOTO      MISC9999
.
MISC0310  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          BRANCH    F1,MISC0311,MISC0312    *0=desc,1=code,2=sel list(site/hosp)
.
          PACK      KEY3,EMVISITE,SP70      * description
          CALL      RDEMSIT1
          IF        OVRCD=1
            MOVE      SP70,EMSTDESC
          ENDIF
.
          MATCH     SP70,EMSTDESC
          GOTO      MISC9999 IF EQUAL
          WRITE     HTMLFILE;EMSTDESC;
          GOTO      MISC9999
.
MISC0311  MATCH     SP70,EMVISITE
          GOTO      MISC9999 IF EQUAL
          WRITE     HTMLFILE;EMVISITE;      * code
          GOTO      MISC9999
.
MISC0312  PACK      KEY3,SP70               * selection list (site,hospital)
          CALL      RSEMSIT1
MISC0313  CALL      RKEMSIT1
          BRANCH    OVRCD,MISC9999
.
          MATCH     SP70,EMSTSCOD
          GOTO      MISC0313 IF EQUAL
.
          MATCH     "1",EMSTACTV
          GOTO      MISC0313 IF EQUAL       * active only
.
          PACK      KEY8,QUOTE,EMSTSCOD,EMSTHSNO,QUOTE
          MATCH     EMVISITE,EMSTSCOD
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY8," selected>":
                               EMSTDESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY8,">",EMSTDESC,"</option>"
          ENDIF
          GOTO      MISC0313
.
MISC0320  PACK      KEY5,ANSY,ANSW,SP70
          CALL      RDSCODE1
MISC0325  CALL      RDKCODE1
          BRANCH    OVRCD,MISC9999
.
          MATCH     "YW",TCODE
          GOTO      MISC9999 IF NOT EQUAL
.
          MATCH     "H",TCINDC2
          GOTO      MISC0325 IF NOT EQUAL
.
          MATCH     "I",PTCOACTV
          GOTO      MISC0325 IF EQUAL
.
          WRITE     HTMLFILE;ACODE;
.
          GOTO      MISC9999
.
MISC0330  CALL      OECIND00                * Enable Emergency Eclipse OEC? 
          GOTO      MISC9999
.
MISC0340  MATCH     SP70,EMVIUC20
          GOTO      MISC9999 IF EQUAL
          GOTO      MISC9999 IF EOS
.
          MOVE      "el",CATEGORY
          MOVE      EMVIUC20,CODE
.
          PACK      KEY5,CATEGORY,CODE,SP70 
          CALL      RDCODE1
          BRANCH    OVRCD,MISC9999 
.
          WRITE     HTMLFILE;PTCDUDF4;
.
          GOTO      MISC9999
.
MISC0350  MATCH     "1",PTCNOECE
          GOTO      MISC0355 IF EQUAL
.
          PACK      KEY16,EMVIURNO,SP70
          CALL      RSPMELF2
MISC0351  CALL      RKPMELF2
          BRANCH    OVRCD,MISC9999
.
          MATCH     EMVIURNO,PMEFURNO
          GOTO      MISC9999 IF NOT EQUAL
.
          MATCH     DEMVIADM,PMEFVISN
          GOTO      MISC0351 IF NOT EQUAL
.
          WRITE     HTMLFILE;ONE;
.
          GOTO      MISC9999
.
MISC0355  MATCH     "1",PTCNWSIN
          GOTO      MISC9999 IF NOT EQUAL
.
          MATCH     "1",PTCNOECW
          GOTO      MISC9999 IF NOT EQUAL
.
          COMPARE   ONE,OECWINDC
          GOTO      MISC9999 IF NOT EQUAL
.
          PACK      KEY16,EMVIURNO,SP70
          CALL      RSWBELF2
MISC0356  CALL      RKWBELF2
          BRANCH    OVRCD,MISC9999
.
          MATCH     EMVIURNO,WBEFURNO
          GOTO      MISC9999 IF NOT EQUAL
.
          MATCH     DEMVIADM,WBEFVISN
          GOTO      MISC0356 IF NOT EQUAL
.
          WRITE     HTMLFILE;ONE
.
          GOTO      MISC9999
.
MISC0360  PACK      KEY11,DEMVIADM,EMVICOMP
          CALL      RDPMEXT1
          IF        OVRCD=1
            CALL      CLPMSEXT
          ENDIF
.
          UNPACK    DIM127,D1,KEY3,DIM127
          MOVE      ZERO,FLDITMNO
          MOVE      KEY3,FLDITMNO
          CALL      PMEX0000               *Claim Extension Details
          GOTO      MISC9999
.
MISC0370  
          GOTO      MISC9999
.
MISC0380  CALL      EMDAKW00              * Get first non primary emr diagnosis
          GOTO      MISC9999              * first keyword 
.
.-------------------------------------------------------------------------
. Return a flag to indicate if the multiple birth attribute (022) exists
. for an ur number.
.-------------------------------------------------------------------------
MISC0390  MOVE      "0",DIM1
          MOVE      ATYPE022,KEY3
          PACK      KEY8,SP7,ZERO
          PACK      KEY35,URNUMBER,KEY8,KEY3,Z70
          CALL      RSPTATR3
          CALL      RPPTATR3
          BRANCH    OVRCD,MISC0398
.
          MATCH     URNUMBER,PTARURNO
          GOTO      MISC0398 IF NOT EQUAL
.
          MATCH     KEY8,PTARVISN
          GOTO      MISC0398 IF NOT EQUAL
.
          MATCH     KEY3,PTARTYPE
          GOTO      MISC0398 IF NOT EQUAL
.
          MATCH     "1",PTARDELR
          GOTO      MISC0398 IF EQUAL
.
          MATCH     SP70,PTARFDTE
          GOTO      MISC0398 IF NOT EQUAL
.
          MATCH     SP70,PTARFTME
          GOTO      MISC0398 IF NOT EQUAL
.
          MOVE      "1",DIM1
.
MISC0398  WRITE     HTMLFILE;DIM1;
          GOTO      MISC9999
.
.-------------------------------------------------------------------------
. Return multiple order details (PTARTYPE = 022)
.-------------------------------------------------------------------------
MISC0400  MOVE      "Order Not Stated",DIM16
          MOVE      ATYPE022,KEY3
          PACK      KEY8,SP7,ZERO
          PACK      KEY35,URNUMBER,KEY8,KEY3,Z70
          CALL      RSPTATR3
          CALL      RPPTATR3
          BRANCH    OVRCD,MISC0408
.
          MATCH     URNUMBER,PTARURNO
          GOTO      MISC0408 IF NOT EQUAL
.
          MATCH     KEY8,PTARVISN
          GOTO      MISC0408 IF NOT EQUAL
.
          MATCH     KEY3,PTARTYPE
          GOTO      MISC0408 IF NOT EQUAL
.
          MATCH     "1",PTARDELR
          GOTO      MISC0408 IF EQUAL
.
          MATCH     SP70,PTARFDTE
          GOTO      MISC0408 IF NOT EQUAL
.
          MATCH     SP70,PTARFTME
          GOTO      MISC0398 IF NOT EQUAL
.
          MATCH     SP70,PTARVAL1
          IF        !@EQUAL
            MATCH     "0",PTARVAL1
            IF        !@EQUAL
              MOVE      PTARVAL1,DIM16
            ENDIF
          ENDIF
.
          MOVE      "mX",KEY2
          PACK      KEY5,KEY2,PTARCOD1
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      PTARCOD1,TDESC
          ENDIF
          STRIP     TDESC       
.
          CLEAR     DIM37
          APPEND    TDESC,DIM37
          APPEND    SP1,DIM37
          APPEND    DIM16,DIM37
          RESET     DIM37
.
          WRITE     HTMLFILE;DIM37;
          GOTO      MISC9999
.
MISC0408  WRITE     HTMLFILE;"";
          GOTO      MISC9999
.
MISC0410  MOVE      "G ",CATEGORY       * Gender/Sex Category G
          PACK      CODE,EMEXSEX,SP70
          CALL      CODITM00
          GOTO      MISC9999
.
MISC0420  MOVE      ZERO,NOTEHEAD
          CALL      EXPTCH00
          GOTO      MISC9999
.
MISC0430  MOVE      ONE,NOTEHEAD 
          CALL      EXPTCH00
          GOTO      MISC9999
.
MISC0440  WRITE     HTMLFILE;DEFTVIEW;
          GOTO      MISC9999
.
MISC0450  CALL      LOCMAN00                * location history management table
          GOTO      MISC9999
.
MISC0460  CALL      LOCDEL00                * deleted location history table
          GOTO      MISC9999
.
MISC0470  OPEN      PMSCCDA1,"pmsccdaf"     * Load Concession Cards
.
          CALL      IBACLOCK
          PACK      XDATE,CC,CYY,CMM,CDD
          REP       " 0",XDATE
.
          PACK      KEY19,URNUMBER,SP70
          CALL      RSPMCCD1
MISC0471  CALL      RKPMCCD1
          BRANCH    OVRCD,MISC0478
.
          MATCH     URNUMBER,PMCDURNO
          GOTO      MISC0478 IF NOT EQUAL
.
          MOVE      "ct",KEY2
          PACK      KEY5,KEY2,PMCDCTYP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,MISC0471

          MATCH     "7",TCINDC1
          GOTO      MISC0471 IF NOT EQUAL
.
          MATCH     SP70,PMCDEXDT
          IF        @EQUAL
            GOTO      MISC0477
          ELSE
            MATCH     XDATE,PMCDEXDT
            IF        @LESS
              GOTO      MISC0471
            ENDIF
          ENDIF
.
MISC0477  WRITE     HTMLFILE;"1";
          GOTO      MISC0479
.
MISC0478  WRITE     HTMLFILE;"0";
.
MISC0479  CLOSE     PMSCCDA1
          GOTO      MISC9999
.
MISC0480  MATCH     SP70,EMHIDAT       * ED history date (Location manag.)
          GOTO      MISC9999 IF EQUAL
          GOTO      MISC9999 IF EOS
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      MISC9999
.
MISC0490  MATCH     SP70,EMHITIM       * ED history time (Location manag.)
          GOTO      MISC9999 IF EQUAL
          GOTO      MISC9999 IF EOS
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          WRITE     HTMLFILE;HOUR,COLON,MIN,COLON,SEC;
          GOTO      MISC9999
.
MISC0500  WRITE     HTMLFILE;EMHILOC;  * ED History location (Locatio Manag.)
          GOTO      MISC9999
.
MISC0510  PACK      KEY3,SP70
          CALL      RSEMLOC1
MISC0515  CALL      RKEMLOC1           * All ED locations (Locatio Manag.)
          BRANCH    OVRCD,MISC9999
.
          MATCH     EMLOSCOD,WBSEESC
          GOTO      MISC0515 IF NOT EQUAL
.
          MATCH     "1",EMLOACTV
          GOTO      MISC0515 IF EQUAL
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          WRITE     HTMLFILE;"<option value=",KEY5,">",EMLODESC,"</option>"
.
          GOTO      MISC0515
.
MISC0520  UNPACK    DIM127,D1,DIM1,DIM127
          PACK      KEY14,DEMVIADM,SP70
          CALL      RSEMVCD1
MISC0521  CALL      RKEMVCD1
          BRANCH    OVRCD,MISC9999
.
          MATCH     DEMVIADM,EMVCVIST
          GOTO      MISC9999 IF NOT EQUAL
.
          MOVE      DIM1,FORM1
          BRANCH    FORM1,MISC0523

          MATCH     "005",EMVCTYPE          * Emergency diagnosis ?
          GOTO      MISC0521 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU          * Primary diagnosis
          GOTO      MISC0521 IF NOT EQUAL
.
MISC0522  IF        EMVCCSYS=1
            CALL      OPICD1
            PACK      KEY9,EMVCMNCD,SP70
            CALL      RDPTICD1
            IF        OVRCD=0
              MATCH     SP70,PT0DDSC2
              IF        !@EQUAL
                PACK      DISP200,PT0DDSC2,SP70,SP70,SP70    * 200 chars
              ELSE
                MATCH     SP70,PT0DDESC
                IF        !@EQUAL
                  PACK      DISP200,PT0DDESC,SP70,SP70       * 100 chars
                ELSE
                  PACK      DISP200,DDESC,SP70               * 70 chars
                ENDIF
              ENDIF

              WRITE     HTMLFILE;DISP200;
            ENDIF
            CALL      CLICD1
          ELSE
            PACK      KEY9,EMVCMNCD,SP70
            CALL      RDEMICD1
            IF        OVRCD=0
              WRITE     HTMLFILE;EMICDESC;
            ENDIF
          ENDIF
          GOTO      MISC9999
.
MISC0523  MATCH     "004",EMVCTYPE          * Emergency proceedure?
          GOTO      MISC0521 IF NOT EQUAL
.
          BRANCH    EMVCCSYS,MISC0524,MISC0525,MISC0526,MISC0527,MISC0528:
                             MISC0529
.
MISC0524  PACK      KEY9,EMVCMNCD,SP70
          MOVE      EMVCDATE,ICDRDDTE
          CALL      RDPTICD1
          IF        OVRCD=0
            WRITE     HTMLFILE;"<div><span style='display:inline-block;":
                               "width:5em'><b>",EMVCMNCD,":</b></span>":
                               "<span style='margin-left:10%'>",DDESC:
                               "</span></div>";
          ENDIF
          GOTO      MISC0521
.
MISC0525  PACK      KEY9,EMVCMNCD,SP70
          MOVE      EMVCDATE,ICDRDDTE
          CALL      RDPTICO1
          IF        OVRCD=0
            WRITE     HTMLFILE;"<div><span style='display:inline-block;":
                               "width:5em'><b>",EMVCMNCD,":</b></span>":
                               "<span style='margin-left:10%'>",ODESC:
                               "</span></div>";
          ENDIF
          GOTO      MISC0521
.
MISC0526  PACK      KEY17,EMVCMNCD,SP70
          CALL      RDITEM1
          IF        OVRCD=0
            WRITE     HTMLFILE;"<div><span style='display:inline-block;":
                               "width:5em'><b>",EMVCMNCD,":</b></span>":
                               "<span style='margin-left:10%'>",IDESC:
                               "</span></div>";
          ENDIF
          GOTO      MISC0521
.
MISC0527  PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMPRO1
          IF        OVRCD=0
            WRITE     HTMLFILE;"<div><span style='display:inline-block;":
                               "width:5em'><b>",EMVCMNCD,":</b></span>":
                               "<span style='margin-left:10%'>",EMPRDESC:
                               "</span></div>"
          ENDIF
          GOTO      MISC0521
.
MISC0528  PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          IF        OVRCD=0
            WRITE     HTMLFILE;"<div><span style='display:inline-block;":
                               "width:5em'><b>",EMVCMNCD,":</b></span>":
                               "<span style='margin-left:10%'>",EMICDESC:
                               "</span></div>";
          ENDIF
          GOTO      MISC0521
.
MISC0529  MOVE      " 0",D2
          PACK      KEY22,D2,EMVCMNCD,SP70
          CALL      RSPRIT1
MISC052A  CALL      RKPRIT1
          BRANCH    OVRCD,MISC0521
.
          SQUEEZE   D2
          MOVE      D2,FORM2
          COMPARE   FORM2,PRITFLAG
          GOTO      MISC0521 IF NOT EQUAL
.
          MATCH     EMVCMNCD,PRITITMN
          GOTO      MISC0521 IF NOT EQUAL
.
          MATCH     PRITDAT1,EMVCDATE
          GOTO      MISC052A IF LESS          
.                          
          WRITE     HTMLFILE;"<div><span style='display:inline-block;":
                             "width:5em'><b>",EMVCMNCD,":</b></span>":
                             "<span style='margin-left:10%'>",PRITDESC:
                             "</span></div>";
          GOTO      MISC0521
.
MISC0530  UNPACK    DIM127,D1,KEY3,DIM127
          MOVE      ZERO,FLDITMNO
          MOVE      KEY3,FLDITMNO
          MOVE      "001",VSCMTTYP
          CALL      MISF0000
          GOTO      MISC9999
.
MISC0540  CALL      ADRC0000
          GOTO      MISC9999
.
MISC0550  CALL      VSTTX000
          GOTO      MISC9999
.
MISC0560  PACK      KEY28,ADMISSNO,Z70
          CALL      RSOBPC2
MISC0561  CALL      RPOBPC2
          BRANCH    OVRCD,MISC0565
.
          MATCH     ADMISSNO,OBPCCVIS
          GOTO      MISC0565 IF NOT EQUAL
.
          MOVE      OBPCCPID,F4
          ADD       ONE,F4
          WRITE     HTMLFILE;F4;
          GOTO      MISC9999
.
MISC0565  WRITE     HTMLFILE;ONE;
          GOTO      MISC9999
.
MISC0570  MOVE      SP70,NOTEFILT
          UNPACK    DIM127,D1,NOTEFILT,DIM127
          UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ONE,NOTELOCN
          MOVE      ZERO,NOTEORDR
          MOVE      KEY1,NOTEORDR
.
          CALL      CLVNOT00
          CALL      DISNOT00
          GOTO      MISC9999
.
MISC0580  CALL      FDVRL000
          GOTO      MISC9999
.
MISC0590  PACK      KEY3,WBSEESC,SP70
          CALL      RDEMSIT1
          IF        OVRCD=1
            MOVE      SP70,EMSTDLOC
          ENDIF
.
          WRITE     HTMLFILE;EMSTDLOC;
          GOTO      MISC9999
.
MISC0600  WRITE     HTMLFILE;FRMEMRLS;
          GOTO      MISC9999
.
MISC9999  RETURN
.
.-----------------------------------------------------------------------
. Retrieve expected patient comment details
.-----------------------------------------------------------------------
EXPTCH00  CLOSE     VISMDTA1    
          CLOSE     VISMTXA1
          OPEN      EMRECHA1,"emrechaf"
          OPEN      EMRECLA1,"emreclaf"
          MOVE      ZERO,F1  
.
          UNPACK    DIM127,D1,NOTEFILT,DIM127
          PACK      KEY19,EMEXP001,NOTEFILT,Z70
          CALL      RSEMECH1
EXPTCH10  CALL      RPEMECH1
          BRANCH    OVRCD,EXPTCH90
.
          MATCH     EMEXP001,EMEHUNIQ
          GOTO      EXPTCH90 IF NOT EQUAL
.
          MATCH     NOTEFILT,EMEHTYPE
          GOTO      EXPTCH90 IF NOT EQUAL
.
          MATCH     "1",EMEHDELT            * is comment deleted
          GOTO      EXPTCH10 IF EQUAL
.
. Retrieve comment header
.
          MATCH     EMEHCDAT,SP70
          IF        @EQUAL
            MOVE     SP70,DISPDATE
            GOTO     EXPTCH20
          ENDIF
.
          UNPACK    EMEHCDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN:
                               JUL,AUG,SEP,OCT,NOV,DEC
          PACK      DISPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
.
EXPTCH20  PACK      KEY10,EMEHCUID,SP70
          CALL      RDWBSE1
          IF        OVRCD = 0
            MOVE      WBSENAM,DISPUSNM
          ELSE
            MOVE      EMEHCUID,DISPUSNM
          ENDIF
          STRIP     DISPUSNM 
.
EXPTCH30  PACK      KEY22,SP70
          MATCH     EMEHOCCG,SP70
          IF        !@EQUAL
            MOVE      "w0",KEY2
            PACK      KEY5,KEY2,EMEHOCCG,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              PACK      KEY22,EMEHOCCG,SP70
            ELSE
              PACK      KEY22,TDESC,SP70
            ENDIF
          ENDIF
.
          ADD       ONE,F1
.
          IF        F1 = ONE
            MATCH     "1",NOTEHEAD
            IF        @EQUAL
              MOVE      "EXPECTED PATIENT NOTES:",EMELCMNT
              MOVELPTR  EMELCMNT,LENGTH 
              SFORMAT   VAR,LENGTH
              MOVE      EMELCMNT,VAR
              WRITE     HTMLFILE;VAR
              SFORMAT   VAR,100
            ENDIF 
          ENDIF
.
          PACK      EMELCMNT,DISPDATE,SP1,EMEHCTIM,SP1,DISPUSNM,SP1,KEY22,SP70
          STRIP     EMELCMNT
          MOVELPTR  EMELCMNT,LENGTH
.
          COMPARE   LENGTH,ZERO
          IF        @EQUAL
            MOVE      ONE,LENGTH
          ENDIF
.
          SFORMAT   VAR,LENGTH
          MOVE      EMELCMNT,VAR
          WRITE     HTMLFILE;VAR
          SFORMAT   VAR,100
.
          CALL      EXPTCL00
.
          GOTO      EXPTCH10
.
EXPTCH90  CLOSE     EMRECHA1
          CLOSE     EMRECLA1     
          OPEN      VISMDTA1,"vismdtaf"
          OPEN      VISMTXA1,"vismtxaf"
.
EXPTCH99  RETURN
.
.---------------------------------------------------------------------
. Retrieve comment text details
.---------------------------------------------------------------------
.
EXPTCL00  PACK      KEY22,EMEHUNIQ,EMEHTYPE,EMEHNOTE,SP70
          CALL      RSEMECL1
EXPTCL20  CALL      RKEMECL1
          BRANCH    OVRCD,EXPTCL99
.
          MATCH     EMEHUNIQ,EMELUNIQ
          GOTO      EXPTCL99 IF NOT EQUAL
.
          MATCH     EMEHTYPE,EMELTYPE
          GOTO      EXPTCL99 IF NOT EQUAL
.
          MATCH     EMEHNOTE,EMELNOTE
          GOTO      EXPTCL99 IF NOT EQUAL
.
          STRIP     EMELCMNT
          MOVELPTR  EMELCMNT,LENGTH
.
          COMPARE   LENGTH,ZERO
          IF        @EQUAL
            MOVE      ONE,LENGTH
          ENDIF
.
          SFORMAT   VAR,LENGTH
          MOVE      EMELCMNT,VAR
          WRITE     HTMLFILE;VAR
          SFORMAT   VAR,100
.
          GOTO      EXPTCL20
.
EXPTCL99  RETURN
+
.------------------------------------------------------------
. Emergency Tables and Extra Fields
.------------------------------------------------------------
EMDL0000  BRANCH    FLDITMNO,EMDL0100,EMDL0200,EMDL0300,EMDL0400,EMDL0500:
                             EMDL0600,EMDL0700,EMDL0800,EMDL0900,EMDL1000:
                             EMDL1100,EMDL1200,EMDL1300,EMDL1400,EMDL1500:
                             EMDL1600,EMDL1700,EMDL1800,EMDL1900,EMDL2000:
                             EMDL2100,EMDL2200,EMDL2300,EMDL2400,EMDL2500:
                             EMDL2600,EMDL2700,EMDL2800,EMDL2900,EMDL3000:
                             EMDL3100,EMDL3200,EMDL3300,EMDL3400,EMDL3500:
                             EMDL3600,EMDL3700,EMDL3800,EMDL3900,EMDL4000:
                             EMDL4100,EMDL4200,EMDL4300,EMDL4400,EMDL4500:
                             EMDL4600,EMDL4700,EMDL4800,EMDL4900,EMDL5000:
                             EMDL5100,EMDL5200,EMDL5300,EMDL5400,EMDL5500:
                             EMDL5600,EMDL5700,EMDL5800,EMDL5900,EMDL6000:
                             EMDL6100,EMDL6200,EMDL6300,EMDL6400,EMDL6500:
                             EMDL6600,EMDL6700,EMDL6800,EMDL6900,EMDL7000:
                             EMDL7100,EMDL7200,EMDL7300,EMDL7400,EMDL7500:
                             EMDL7600,EMDL7700,EMDL7800,EMDL7900,EMDL8000:
                             EMDL8100,EMDL8200,EMDL8300,EMDL8400,EMDL8500:
                             EMDL8600,EMDL8700,EMDL8800,EMDL8900,EMDL9000:
                             EMDL9100,EMDL9200,EMDL9300,EMDL9400,EMDL9500:
                             EMDL9600,EMDL9700,EMDL9800,EMDL9900
          GOTO      EMDL9999
.
EMDL0100  MOVE      "EC",CATEGORY           * Reason for Deletion
          MOVE      EMDARECD,CODE
          CALL      CODITM00
          GOTO      EMDL9999
.
EMDL0200  CALL      TABCOD00                * Procedure/Diagnosis Table
          GOTO      EMDL9999
.
EMDL0300  WRITE     HTMLFILE;EMEXP001;      *  
          GOTO      EMDL9999
.
EMDL0400  CALL      UKEY0000                * History Table Update Key
          GOTO      EMDL9999
.
EMDL0500  CALL      AUDHIS00                * audit history table
          GOTO      EMDL9999
.
EMDL0600  CALL      LOCHIS00                * location history table
          GOTO      EMDL9999
.
EMDL0700  CALL      DOCHIS00                * attending doctor history table
          GOTO      EMDL9999
.
EMDL0800  CALL      NURHIS00                * attending nurse history table
          GOTO      EMDL9999
.
EMDL0900  CALL      MANF0000                * missing mandatory fields
          GOTO      EMDL9999
.
EMDL1000  WRITE     HTMLFILE;EMEXUNIQ; 
          GOTO      EMDL9999
.
EMDL1100  WRITE     HTMLFILE;EMEXSNAM;
          GOTO      EMDL9999
.
EMDL1200  WRITE     HTMLFILE;EMEXGNAM;
          GOTO      EMDL9999
.
EMDL1300  WRITE     HTMLFILE;EMEXSEX;
          GOTO      EMDL9999
.
EMDL1400  MATCH     SP70,EMEXDOB
          GOTO      EMDL9999 IF EQUAL                                          
          UNPACK    EMEXDOB,CCENT,CYEAR,CMON,CDAY                             
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      EMDL9999 
.
EMDL1500  WRITE     HTMLFILE;EMEXAGE;
          GOTO      EMDL9999
.
EMDL1600  MOVE      "el",CATEGORY 
          MOVE      EMEXCOMP,CODE
          CALL      CODITM00
          GOTO      EMDL9999
.
EMDL1700  WRITE     HTMLFILE;EMEXCOM1;
          GOTO      EMDL9999
.
EMDL1800  WRITE     HTMLFILE;EMEXCOM2;
          GOTO      EMDL9999
.
EMDL1900  WRITE     HTMLFILE;EMEXCOM3;
          GOTO      EMDL9999
.
EMDL2000  WRITE     HTMLFILE;EMEXCOM4;
          GOTO      EMDL9999
.
EMDL2100  WRITE     HTMLFILE;EMEXCOM5;
          GOTO      EMDL9999
.
EMDL2200  WRITE     HTMLFILE;EMEXCOM6;
          GOTO      EMDL9999
.
EMDL2300  MOVE      "EA",CATEGORY
          MOVE      EMEXTRAN,CODE
          CALL      CODITM00 
          GOTO      EMDL9999
.
EMDL2400  MATCH     SP70,EMEXEDAT
          GOTO      EMDL9999 IF EQUAL
          UNPACK    EMEXEDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      EMDL9999 
.
EMDL2500  WRITE     HTMLFILE;EMEXETIM;
          GOTO      EMDL9999
.
EMDL2600  CALL      HCPDET00 
          GOTO      EMDL9999
.
EMDL2700  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          MATCH     SP70,EMEXCUID
          GOTO      EMDL9999 IF EQUAL
          BRANCH    F1,EMDL2710
          PACK      KEY10,EMEXCUID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,EMDL9999
          WRITE     HTMLFILE;WBSENAM;
          GOTO      EMDL9999
.         
EMDL2710  WRITE     HTMLFILE;EMEXCUID;
          GOTO      EMDL9999
.
EMDL2800  WRITE     HTMLFILE;EMEXCDAT;
          GOTO      EMDL9999
.
EMDL2900  WRITE     HTMLFILE;EMEXCTIM;
          GOTO      EMDL9999
.
EMDL3000  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          MATCH     SP70,EMEXUUID
          GOTO      EMDL9999 IF EQUAL
          BRANCH    F1,EMDL3010
          PACK      KEY10,EMEXUUID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,EMDL9999
          WRITE     HTMLFILE;WBSENAM;
          GOTO      EMDL9999
.
EMDL3010  WRITE     HTMLFILE;EMEXUUID;
          GOTO      EMDL9999 
.
EMDL3100  WRITE     HTMLFILE;EMEXUDAT;
          GOTO      EMDL9999
.
EMDL3200  WRITE     HTMLFILE;EMEXUTIM;
          GOTO      EMDL9999
.
EMDL3300  CALL      PRECMP00        * Presenting Comp Select with TCFORM6,
          GOTO      EMDL9999        * using to out put associated template!
.
EMDL3400  CALL      VCMHTM00
          GOTO      EMDL9999
.
EMDL3500  WRITE     HTMLFILE;EMEXURNO;
          GOTO      EMDL9999
.
EMDL3600  CALL      CLRNOT00
          CALL      DISPNT00
          GOTO      EMDL9999
.
EMDL3700  MATCH     SP70,EMDCTXT1
          GOTO      EMDL9999 IF EQUAL
          REP       "#"'",EMDCTXT1
          WRITE     HTMLFILE;EMDCTXT1;
          GOTO      EMDL9999
.
EMDL3800  MATCH     SP70,EMDCTXT2
          GOTO      EMDL9999 IF EQUAL
          REP       "#"'",EMDCTXT2
          WRITE     HTMLFILE;EMDCTXT2;
          GOTO      EMDL9999
.
EMDL3900  MATCH     SP70,EMDCTXT3
          GOTO      EMDL9999 IF EQUAL
          REP       "#"'",EMDCTXT3          
          WRITE     HTMLFILE;EMDCTXT3;
          GOTO      EMDL9999
.
EMDL4000  MATCH     SP70,EMDCTXT4
          GOTO      EMDL9999 IF EQUAL
          REP       "#"'",EMDCTXT4
          WRITE     HTMLFILE;EMDCTXT4;
          GOTO      EMDL9999
.
EMDL4100  MATCH     SP70,EMDCTXT5
          GOTO      EMDL9999 IF EQUAL
          REP       "#"'",EMDCTXT5
          WRITE     HTMLFILE;EMDCTXT5;
          GOTO      EMDL9999
.
EMDL4200  MATCH     SP70,EMDCTXT6
          GOTO      EMDL9999 IF EQUAL
          REP       "#"'",EMDCTXT6
          WRITE     HTMLFILE;EMDCTXT6;
          GOTO      EMDL9999
.
EMDL4300  MATCH     SP70,EMDCTXT7
          GOTO      EMDL9999 IF EQUAL
          REP       "#"'",EMDCTXT7
          WRITE     HTMLFILE;EMDCTXT7;
          GOTO      EMDL9999
.
EMDL4400  MATCH     SP70,EMDCTXT8
          GOTO      EMDL9999 IF EQUAL
          REP       "#"'",EMDCTXT8
          WRITE     HTMLFILE;EMDCTXT8;
          GOTO      EMDL9999
.
EMDL4500  MATCH     SP70,EMDCTXT9
          GOTO      EMDL9999 IF EQUAL
          REP       "#"'",EMDCTXT9
          WRITE     HTMLFILE;EMDCTXT9;
          GOTO      EMDL9999
.
EMDL4600  WRITE     HTMLFILE;LOADFLAG;
          MOVE      ZERO,LOADFLAG 
          GOTO      EMDL9999
.
EMDL4700  MATCH     SP70,EMVIPLIN 
          IF        @EQUAL
            WRITE     HTMLFILE;CHKINJUR;
          ELSE
            MOVE      ZERO,CHKINJUR
            WRITE     HTMLFILE;CHKINJUR;
          ENDIF
          GOTO      EMDL9999
.
EMDL4800  WRITE     HTMLFILE;POPREGSC;
          MOVE      ZERO,POPREGSC
          GOTO      EMDL9999
.
EMDL4900  CALL      IBACLOCK
          PACK      DATE,CCC,CYY,CMM,CDD
          REP       " 0",DATE
          PACK      TIME,CTIMEIS
          REP       " 0",TIME
          PACK      KEY16,DATE,TIME,SP70
          WRITE     HTMLFILE;KEY16;
          GOTO      EMDL9999
.
EMDL5000  PACK      KEY6,SP6
          CALL      RSIBTH1
EMDL5010  CALL      RKIBTH1
          BRANCH    OVRCD,EMDL9999
          WRITE     HTMLFILE;"<option value=#"",IBTHSCOD,"#">":
                              IBTHDESC,"</option>"
          GOTO      EMDL5010
.
EMDL5100  PACK      KEY8,ADMISSNO 
          CALL      RDMISS1
          IF        OVRCD=0
            WRITE     HTMLFILE;ADMISSNO;
          ELSE
            WRITE     HTMLFILE;EMVIPADM;
          ENDIF  
.
EMDL5200  PACK      KEY8,ADMISSNO
          CALL      RDEMVIS1
          BRANCH    OVRCD,EMDL9999
.
          CALL      MCHINJ00                * Check if injury data is mandatory
          WRITE     HTMLFILE;EXIT;               
          GOTO      EMDL9999
.
EMDL5300  CALL      CLRPAT00
          CALL      DISPPT00
          GOTO      EMDL9999
.
EMDL5400  WRITE     HTMLFILE;PTCNUEOC;      * Using episode of care
          GOTO      EMDL9999
.
EMDL5500  WRITE     HTMLFILE;EMCNDOCT;      * Using patdo1af or emrdocaf
          GOTO      EMDL9999
.
EMDL5600  MATCH     SP70,ECRFACCN
          GOTO      EMDL9999 IF EQUAL
.
          WRITE     HTMLFILE;ECRFACCN;      * Episode of care ACC number
          GOTO      EMDL9999
.
EMDL5700  PROC      CHKCCD00
          WRITE     HTMLFILE;EXIT;          * concession card indicator
          GOTO      EMDL9999
.
EMDL5800  PACK      KEY3,SP3
          CALL      RSEMLOC1
EMDL5810  CALL      RKEMLOC1
          BRANCH    OVRCD,EMDL9999
          MATCH     ANSW,EMLOTYPE
          IF        @EQUAL
            WRITE     HTMLFILE;EMLOLOCA;    * default waiting room location
            GOTO      EMDL9999
          ENDIF
          GOTO      EMDL5810
.
EMDL5900  WRITE     HTMLFILE;SHOWFLAG;
          GOTO      EMDL9999
.
EMDL6000  UNPACK    DIM127,D1,KEY5,DIM127
          PACK      KEY5,KEY5,SP70
          CALL      RDEMWFM1
          BRANCH    OVRCD,EMDL6050
.
          MATCH     "1",EMWFMAN
          GOTO      EMDL6050 IF NOT EQUAL
.
          WRITE     HTMLFILE;ONE;
          GOTO      EMDL9999
.
EMDL6050  WRITE     HTMLFILE;ZERO;
          GOTO      EMDL9999
.
EMDL6100  WRITE     HTMLFILE;REGIFLAG;
          GOTO      EMDL9999
.
EMDL6200  MOVE      "em",CATEGORY
          MOVE      EMEXATSR,CODE
          CALL      CODITM00
          GOTO      EMDL9999
.
EMDL6300  MOVE      "ZQ",CATEGORY
          MOVE      EMEXACPS,CODE
          CALL      CODITM00
          GOTO      EMDL9999
.
EMDL6400  MOVE      "ZR",CATEGORY
          MOVE      EMEXACPT,CODE
          CALL      CODITM00
          GOTO      EMDL9999
.
EMDL6500  MATCH     SP70,EMEXETAD
          GOTO      EMDL9999 IF EQUAL
.
          UNPACK    EMEXETAD,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      EMDL9999
.
EMDL6600  WRITE     HTMLFILE;EMEXETAT;
          GOTO      EMDL9999
.
EMDL6700  MOVE      "AA",CATEGORY
          MOVE      EMEXTRIG,CODE
          CALL      CODITM00
          GOTO      EMDL9999
.
EMDL6800  CALL      TRLC0000
          GOTO      EMDL9999
.
.EMDL6800  PACK      KEY3,SP70
.          CALL      RSEMLOC1
.EMDL6810  CALL      RKEMLOC1
.          BRANCH    OVRCD,EMDL9999
.
.          MATCH     "1",EMLOACTV
.          GOTO      EMDL6810 IF EQUAL
.
.          MATCH     EMLOSCOD,WBSEESC
.          GOTO      EMDL6810 IF NOT EQUAL
.
.          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
.          MATCH     EMEXEXPL,EMLOLOCA
.          IF        @EQUAL
.            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
.                               EMLODESC,"</option>"
.          ELSE
.            WRITE     HTMLFILE;"<option value=",KEY5,">",EMLODESC,"</option>"
.          ENDIF
.          GOTO      EMDL6810
.
EMDL6900  WRITE     HTMLFILE;EMEXAMBL;
          GOTO      EMDL9999
.
EMDL7000  PACK      KEY3,SP70
          CALL      RSEMLOC1
EMDL7010  CALL      RKEMLOC1
          BRANCH    OVRCD,EMDL9999
.
          MATCH     EMLOSCOD,WBSEESC
          GOTO      EMDL7010 IF NOT EQUAL
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          WRITE     HTMLFILE;"<option value=",KEY5,">",EMLODESC,"</option>"
.
          GOTO      EMDL7010
.
EMDL7100  MOVE      SP70,NOTEFILT
          UNPACK    DIM127,D1,NOTEFILT,DIM127
          UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,NOTEORDR
          MOVE      KEY1,NOTEORDR
.
          CALL      CLVNOT00
          CALL      DISNOT00
          GOTO      EMDL9999
.
EMDL7200  WRITE     HTMLFILE;EMEXEXPL;
          GOTO      EMDL9999
.
EMDL7300  PACK      KEY24,ADMISSNO,SP70
          CALL      RSOBDE1
          CALL      RKOBDE1
          BRANCH    OVRCD,EMDL9999
.
          MATCH     ADMISSNO,OBDEVIST
          IF        @EQUAL
            WRITE     HTMLFILE;ONE;         * Yes observations available
          ENDIF
.
          GOTO      EMDL9999
.
EMDL7400  WRITE     HTMLFILE;SHOWMAND;      * Mandatory field flag for discharge
          GOTO      EMDL9999
.
EMDL7500  CALL      FDOC0000                * First seen by doctor
          GOTO      EMDL9999
.
EMDL7600  PROC      NXTV0000                * Next emr patient tag
          GOTO      EMDL9999
.
EMDL7700  WRITE     HTMLFILE;TRIREDIR;      * Triage redirect flag
          GOTO      EMDL9999
.
EMDL7800  MOVE      "C ",CATEGORY
          MOVE      PMRSCONT,CODE
          CALL      CODITM00
          GOTO      EMDL9999
.
EMDL7900  MATCH     SP70,PMRSTEXP
          GOTO      EMDL9999 IF EQUAL
          UNPACK    PMRSTEXP,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      EMDL9999
.
EMDL8000  MATCH     SP70,PMRSGRDT
          GOTO      EMDL9999 IF EQUAL
          UNPACK    PMRSGRDT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      EMDL9999
.
EMDL8100  WRITE     HTMLFILE;PMRSCOMM;
          GOTO      EMDL9999
.
EMDL8200  CALL      CHKRES00             * Check for residency expiry
          WRITE     HTMLFILE;EXIT;
          GOTO      EMDL9999
.
EMDL8300  MATCH     SP70,PMRSVISN 
          GOTO      EMDL9999 IF EQUAL
.
          WRITE     HTMLFILE;PMRSVISN;
          GOTO      EMDL9999
.
EMDL8400  MATCH     "1",PTCNHCLM
          IF        !@EQUAL
            UNPACK    DIM127,D1,KEY1,DIM127
            GOTO      EMDL9999
          ENDIF
.         GOTO      EMDL9999 IF NOT EQUAL
.
          MOVE      "CL",CATEGORY
          MOVE      EMVICOMP,CODE
          CALL      CODITM00
          GOTO      EMDL9999
.
EMDL8500  MATCH     "1",PTCNHHFT
          GOTO      EMDL9999 IF NOT EQUAL
.
          MATCH     SP70,EMVIFUND
          IF        !@EQUAL & !@EOS
            WRITE     HTMLFILE;EMVIFUND,SLASH,EMVITABL;
          ENDIF
          GOTO      EMDL9999
.
EMDL8600  CALL      RBED0000                * Display requested ward/bed
          GOTO      EMDL9999
.
EMDL8700  WRITE     HTMLFILE;ACCESSAL;
          GOTO      EMDL9999
.
EMDL8800  MOVE      ZERO,F1
          PACK      KEY16,ADMISSNO,SP70
          CALL      RSPTINV3
EMDL8810  CALL      RKPTINV3
          BRANCH    OVRCD,EMDL8820
.
          MATCH     DPINVADM,ADMISSNO
          GOTO      EMDL8820 IF NOT EQUAL
          MATCH     "1",PTINCRST
          GOTO      EMDL8810 IF EQUAL     * Fully credited
          MATCH     "2",PTINCRST
          GOTO      EMDL8810 IF EQUAL     * Partial credit note
          MOVE      ONE,F1                * Found an invoice for the admiss.
.
EMDL8820  WRITE     HTMLFILE;F1;
          GOTO      EMDL9999
.
EMDL8900  CALL      DITB0000              * Data integrity audit
          GOTO      EMDL9999
.
EMDL9000  CALL      EMDGKW00              * Get emr diagnosis first keyword
          GOTO      EMDL9999
.
EMDL9100  MOVE      ONE,FORM1             * MAGRAN code
          CALL      MAGRAN00
          GOTO      EMDL9999
.
EMDL9200  MOVE      TWO,FORM1             * MAGRAN Date
          CALL      MAGRAN00
          GOTO      EMDL9999
.
EMDL9300  MOVE      THREE,FORM1           * MAGRAN Time
          CALL      MAGRAN00
          GOTO      EMDL9999
.
EMDL9400  MOVE      FOUR,FORM1            * MAGRAN Description
          CALL      MAGRAN00
          GOTO      EMDL9999
.
EMDL9500  WRITE     HTMLFILE;SUPRFLAG;    * Supervisor flag
          GOTO      EMDL9999
.
EMDL9600  CALL      FNUR0000              * First seen by nurse 
          GOTO      EMDL9999
.
EMDL9700  CALL      DISSEL00
          GOTO      EMDL9999
.
EMDL9800  CALL      DISCOD00
          GOTO      EMDL9999
.
EMDL9900  CALL      DISDSC00
          GOTO      EMDL9999
.
EMDL9999  RETURN
+
.*****************************************************************************
.*  CHKCCD00
.*  Procedure to check if a patient has a concession card
.*  Exit=0  No concession cards exist
.*      =1  Valid concession card(s) exist
.*      =2  Only expired concession card(s) exist
.*****************************************************************************
          DEFPROC   CHKCCD00
.
          INC       PMSCCDFD/INC
.
          CALL      IBACLOCK                * Get the current date
          PACK      XDATE,CCC,CYY,CMM,CDD
          REP       " 0",XDATE
.
          MOVE      ZERO,EXIT               * default to no ccards
          OPEN      PMSCCDA1,"pmsccdaf"
.
          PACK      KEY19,PURNO,SP70
          CALL      RSPMCCD1           * Read concession card table
CHKCCD10  CALL      RKPMCCD1
          BRANCH    OVRCD,CHKCCD99
.
          MATCH     PURNO,PMCDURNO     * Check same UR
          GOTO      CHKCCD99 IF NOT EQUAL
.
          MATCH     XDATE,PMCDEXDT     * check if exp. date is >= current date
          IF        !@LESS
            MOVE      ONE,EXIT         * valid ccard exists
            GOTO      CHKCCD99
          ENDIF
.
          MOVE      TWO,EXIT           * only expired ccard(s) exist
          GOTO      CHKCCD10
.
          INC       PMSCCDIO/INC
          INC       IBAOVRIO/INC
.
CHKCCD99  CLOSE     PMSCCDA1
.
          ENDPROC
+
.------------------------------------------------------------
.         Transfer Source Details
.------------------------------------------------------------
TRSR0000  BRANCH    FLDITMNO,TRSR0100,TRSR0200,TRSR0300,TRSR0400,TRSR0500:
                             TRSR0600,TRSR0700,TRSR0800,TRSR0900,TRSR1000:
                             TRSR1100,TRSR1200,TRSR1300,TRSR1400,TRSR1500:
                             TRSR1600,TRSR1700,TRSR1800,TRSR1900,TRSR2000:
                             TRSR2100,TRSR2200,TRSR2300,TRSR2400,TRSR2500:
                             TRSR2600,TRSR2700,TRSR2800,TRSR2900,TRSR3000:
                             TRSR3100,TRSR3200,TRSR3300,TRSR3400,TRSR3500:
                             TRSR3600,TRSR3700,TRSR3800,TRSR3900,TRSR4000:
                             TRSR4100,TRSR4200,TRSR4300,TRSR4400,TRSR4500:
                             TRSR4600,TRSR4700,TRSR4800,TRSR4900,TRSR5000:
                             TRSR5100,TRSR5200,TRSR5300,TRSR5400,TRSR5500:
                             TRSR5600,TRSR5700,TRSR5800,TRSR5900,TRSR6000:
                             TRSR6100,TRSR6200,TRSR6300,TRSR6400,TRSR6500:
                             TRSR6600,TRSR6700,TRSR6800,TRSR6900,TRSR7000:
                             TRSR7100,TRSR7200,TRSR7300,TRSR7400,TRSR7500:
                             TRSR7600,TRSR7700,TRSR7800,TRSR7900,TRSR8000:
                             TRSR8100,TRSR8200,TRSR8300,TRSR8400,TRSR8500:
                             TRSR8600,TRSR8700,TRSR8800,TRSR8900,TRSR9000:
                             TRSR9100,TRSR9200,TRSR9300,TRSR9400,TRSR9500:
                             TRSR9600,TRSR9700,TRSR9800,TRSR9900
.
          WRITE     HTMLFILE;"Invalid IBA Tag";
          GOTO      TRSR9999
.
TRSR0100  MOVE      ZERO,LINK2PRT           * Link to alternate Program
          CALL      TRTBL000                * Table of item code
          GOTO      TRSR9999 
.
TRSR0200  MOVE      ONE,LINK2PRT            * Link to Parent
          CALL      TRTBL000                * Table of item code
          GOTO      TRSR9999 
.
TRSR0300  MOVE      TWO,LINK2PRT            * Link to Window
          CALL      TRTBL000                * Table of item code
          GOTO      TRSR9999 
.
TRSR0400  CALL      PREVTR00
          GOTO      TRSR9999
.
TRSR0500  CALL      NEXTTR00
          GOTO      TRSR9999
.
TRSR0600  CALL      EFRBTY00                * Tag for the EFR bed type
          GOTO      TRSR9999
.
TRSR0700  MOVE      "KP",CATEGORY            * Usual Accommodation Cat KP
          PACK      CODE,PMVXUSAC,SP70
          CALL      CODITM00
          GOTO      TRSR9999
.
TRSR0800  CALL      EFRADM00                * Check what bed type the admission
          GOTO      TRSR9999                * was for
.
TRSR0900  CALL      EFRDIS00                * Check if the inpatient admission
          GOTO      TRSR9999                * is discharged
.
TRSR1000  WRITE     HTMLFILE;PMVXINGP;      * Inform GP
          GOTO      TRSR9999
.
TRSR1100  MATCH     SP70,EMVIPADM
          GOTO      TRSR9999 IF EQUAL
.
          PACK      KEY8,EMVIPADM
          CALL      RDMISS1
          BRANCH    OVRCD,TRSR9999
.
          PACK      KEY8,EMVIADMN,SP70   * Restore ED visits pmsvx1af record
          CALL      RDPMVX11             * after the admission file read
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          WRITE     HTMLFILE;ACLSSFT;       * Unit of linked admission
          GOTO      TRSR9999
.
TRSR1200  MATCH     SP70,EMVIPADM
          GOTO      TRSR9999 IF EQUAL
.
          PACK      KEY8,EMVIPADM
          CALL      RDMISS1
          BRANCH    OVRCD,TRSR9999
.
          PACK      KEY8,EMVIADMN,SP70   * Restore ED visits pmsvx1af record
          CALL      RDPMVX11             * after the admission file read
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          IF        ASTAT=1
            WRITE     HTMLFILE;PTMIXWRD;    * Ward of linked adm
            GOTO      TRSR9999
          ENDIF
.
          IF        ASTAT=2
            WRITE     HTMLFILE;AWARD;       * Ward of linked adm
            GOTO      TRSR9999
          ENDIF
.
          GOTO      TRSR9999
.
TRSR1300  MOVE      "cw",CATEGORY            * Usual Accommodation Cat KP
          PACK      CODE,PMVXNWHC,SP70
          CALL      CODITM00
          GOTO      TRSR9999
.
TRSR1400  MOVE      "cx",CATEGORY            * Usual Accommodation Cat KP
          PACK      CODE,PMVXFSRC,SP70
          CALL      CODITM00
          GOTO      TRSR9999
.
TRSR1500  WRITE     HTMLFILE;PMVXPICD;      * ICD10 Provisional Code
          GOTO      TRSR9999
.
TRSR1600  MATCH     SP70,EMVIUR01
          IF        @EQUAL
            WRITE     HTMLFILE;EMVIDOCT;    * Attending Doctor Code
          ELSE
            WRITE     HTMLFILE;EMVIUR01;    * User Defined Doctor Code 1   
          ENDIF
          GOTO      TRSR9999
.
TRSR1700  WRITE     HTMLFILE;EMVIUR02;      * User Defined Doctor Code 2
          GOTO      TRSR9999
.
TRSR1800  WRITE     HTMLFILE;EMVIUR03;      * User Defined Doctor Code 3
          GOTO      TRSR9999
.
TRSR1900  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          CALL      DSTN0000              * Get Stationery code for claim code
          GOTO      TRSR9999
.
TRSR2000  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          CALL      DFPR0000             * Set default printer for each claim
          GOTO      TRSR9999
.
TRSR2100  MATCH     SP70,EMVIUR01           * User Defined Doctor?
          IF        @EQUAL
            PACK      KEY6,EMVIDOCT,SP70    * no; use Attending Doctor instead
          ELSE
            PACK      KEY6,EMVIUR01,SP70
          ENDIF
          CALL      RDDOCT1
          IF        OVRCD=1
            MOVE     SP70,DOCFNAME
          ELSE
            MOVE     DTITL,FMTTITLE
            MOVE     DGNAME,FMTGNAME
            MOVE     DSNAME,FMTSNAME
            CALL     DOCNM000
          ENDIF
.
          WRITE      HTMLFILE;DOCFNAME;
          GOTO       TRSR9999
.
TRSR2200  PACK      KEY6,EMVIUR02,SP70         * Get Doctors full name
          CALL      RDDOCT1
          IF        OVRCD=1
            MOVE     SP70,DOCFNAME
          ELSE
            MOVE     DTITL,FMTTITLE
            MOVE     DGNAME,FMTGNAME
            MOVE     DSNAME,FMTSNAME
            CALL     DOCNM000
          ENDIF
.
          WRITE      HTMLFILE;DOCFNAME;
          GOTO       TRSR9999
.
TRSR2300  PACK      KEY6,EMVIUR03,SP70         * Get Doctors full name
          CALL      RDDOCT1
          IF        OVRCD=1
            MOVE      SP70,DOCFNAME
          ELSE
            MOVE      DTITL,FMTTITLE
            MOVE      DGNAME,FMTGNAME
            MOVE      DSNAME,FMTSNAME
            CALL      DOCNM000
          ENDIF
.
          WRITE     HTMLFILE;DOCFNAME;
          GOTO      TRSR9999
.
TRSR2400  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          BRANCH    F1,TRSR2410
          PACK      KEY10,EMEXGPCD
          CALL      RDPMHCP1
          BRANCH    OVRCD,TRSR9999
          MOVE      PMHCTITL,FMTTITLE
          MOVE      PMHCGNAM,FMTGNAME
          MOVE      PMHCSNAM,FMTSNAME
          CALL      DOCNM000
          WRITE     HTMLFILE;DOCFNAME;
.
          GOTO      TRSR9999
.
TRSR2410  WRITE     HTMLFILE;EMEXGPCD;
          GOTO      TRSR9999
.
TRSR2500  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          BRANCH    F1,TRSR2510  * 0=Desc 1=Code
.
          PACK      KEY3,PMVXMHOS,SP10
          CALL      RDPTHSP1
          IF        OVRCD=1              
            MOVE      CNAME,PTHSNAME     * Use Control File Parameters if No Visit Hospital
            MOVE      CHADD1,PTHSADD1
            MOVE      CHADD2,PTHSADD2
            MOVE      SP70,PTHSADD3
            MOVE      SP70,PTHSADD4
            MOVE      CHPOST,PTHSPCOD
            MOVE      CHTELEB,PTHSTELE   *Hospital Telephone number
            MOVE      PTCNHFAX,PTHSFAXN  *Hospital Fax Number
          ENDIF
          BRANCH    F1,TRSR2510,TRSR2520  * 0=Desc 1=Code 3=Table Field
.
          WRITE     HTMLFILE;PTHSNAME;
          GOTO      TRSR9999
.
TRSR2510  WRITE     HTMLFILE;PMVXMHOS;
          GOTO      TRSR9999
.
TRSR2520  UNPACK    DIM127,D1,KEY3,DIM127
          MOVE      ZERO,FLDITMNO
          MOVE      KEY3,FLDITMNO
          IF        FLDITMNO=5
            MATCH     SP70,PTHSADD3
            IF        @EQUAL
              MOVE      33,FLDITMNO
            ENDIF
          ENDIF
.
          IF        IBCNMHOS=1
            MATCH     SP70,PTHSADD2
            IF        @EQUAL|@EOS
              MATCH     "004",KEY3
              IF        @EQUAL
                MOVE      FIVE,FLDITMNO
              ENDIF
              MATCH     "005",KEY3
              IF        @EQUAL
                MOVE      SIX,FLDITMNO
              ENDIF
            ENDIF
          ENDIF
.
          CALL      HSPD0000
          GOTO      TRSR9999
.
TRSR2600  CALL      FRSNDC00                * Get First Seen Doctor Code
          GOTO      TRSR9999
.
TRSR2700  CALL      FRSNDS00                * Get First Seen Doctor Desc
          GOTO      TRSR9999
.
TRSR2800  CALL      VISITM00                * Visit based coding
          GOTO      TRSR9999
.
TRSR2900  COMPARE   ZERO,PMVXPWGT
          GOTO      TRSR9999 IF EQUAL
.
          MOVE      PMVXPWGT,F6P2
          DIV       "100",F6P2
          WRITE     HTMLFILE;F6P2;          * Patient Weight
.
          GOTO      TRSR9999
.
TRSR3000  CALL      EMDM0000                * Departure Means (SOR)
          GOTO      TRSR9999
.
TRSR3100  MOVE      ZERO,WITHTIME
          MOVE      ZERO,DONTGRBC           * Group records by consultant
          CALL      ALLCCL00                * All Cross Consultations List
          GOTO      TRSR9999
.
TRSR3200  CALL      ABED0000                * Display bed request
          GOTO      TRSR9999                * allocated ward, date and time
.
TRSR3300  WRITE     HTMLFILE;EMEXSITE;
          GOTO      TRSR9999
.
TRSR3400  WRITE     HTMLFILE;EMSTDLOC;      * Default Location Code
          GOTO      TRSR9999
.
TRSR3500  CALL      CORIG000
          GOTO      TRSR9999
.
TRSR3600  MOVE      "KD",CATEGORY            * Employment Status Cat KD
          PACK      CODE,PMVXEMPL,SP70
          CALL      CODITM00
          GOTO      TRSR9999
.
TRSR3700  MOVE      EMVITIME,KEY5
          WRITE     HTMLFILE;KEY5;          * Arrival Time HH:MM Only
          GOTO      TRSR9999
.
TRSR3800  MOVE      ZERO,F1
          PACK      KEY5,EMVITSRC,SP70
          CALL      RDPTVAD1
          BRANCH    OVRCD,TRSR3880
.
          MATCH     "R",PTVADTYP            * From prison
          GOTO      TRSR3880 IF NOT EQUAL
          MOVE      ONE,F1
.
TRSR3880  WRITE     HTMLFILE;F1;
          GOTO      TRSR9999
.
TRSR3900  WRITE     HTMLFILE;ISEDLITE;
          GOTO      TRSR9999
.
TRSR4000  MOVE      ONE,FORM1               * Get Short Stay Departure Date
          CALL      SSDEP000
          GOTO      TRSR9999
.
TRSR4100  MOVE      TWO,FORM1               * Get Short Stay Departure Time
          CALL      SSDEP000
          GOTO      TRSR9999
.
TRSR4200  MOVE      THREE,FORM1             * Get Short Stay Departure Status
          CALL      SSDEP000
          GOTO      TRSR9999
.
TRSR4300  PACK      KEY31,ADMISSNO,SP70
          CALL      RSPTCRC1
          CALL      RKPTCRC1
          BRANCH    OVRCD,TRSR4310
.
          MATCH     ADMISSNO,DPTCRBIL       * Same visit?
          GOTO      TRSR4310 IF NOT EQUAL   * No
.
          WRITE     HTMLFILE;ONE;           * Cross Consultations exists
          GOTO      TRSR9999
.
TRSR4310  WRITE     HTMLFILE;ZERO;          * No Cross Consultations
          GOTO      TRSR9999
.
TRSR4400  PACK      KEY24,ADMISSNO,SP70
          CALL      RSPMBRQ1
          CALL      RKPMBRQ1
          BRANCH    OVRCD,TRSR4410
.
          MATCH     ADMISSNO,PMBRVISN       * Same visit?
          GOTO      TRSR4410 IF NOT EQUAL   * No
.
          WRITE     HTMLFILE;ONE;           * Ward/Bed requests exists
          GOTO      TRSR9999
.
TRSR4410  WRITE     HTMLFILE;ZERO;          * No Ward/Bed requests
          GOTO      TRSR9999
.
TRSR4500  WRITE     HTMLFILE;EMVIUR01;      * User Defined Doctor Code 1
          GOTO      TRSR9999
.
TRSR4600  PACK      KEY6,EMVIUR01,SP70
          CALL      RDDOCT1
          IF        OVRCD=1
            MOVE     SP70,DOCFNAME
          ELSE
            MOVE     DTITL,FMTTITLE
            MOVE     DGNAME,FMTGNAME
            MOVE     DSNAME,FMTSNAME
            CALL     DOCNM000
          ENDIF
.
          WRITE      HTMLFILE;DOCFNAME;
          GOTO       TRSR9999
.
TRSR4700  MOVE      "fw",CATEGORY            * EMR History Reason for Handover
          PACK      CODE,EMHIRHND,SP70
          CALL      CODITM00
          GOTO      TRSR9999
.
TRSR4800  CALL      CBED0000                * for HDH CAR 215623
          MATCH     SP70,EMVIUD04
          IF        @EQUAL
            MOVE      PMBRADAT,D8           * default from requests table
          ELSE
            MOVE      EMVIUD04,D8           * Ward Allocation Date
          ENDIF
.
          UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          BRANCH    F1,TRSR4810,TRSR4820
.
          MATCH     SP70,D8
          GOTO      TRSR9999 IF EQUAL
          UNPACK    D8,CCENT,CYEAR,CMON,CDAY
          MATCH     "00",CMON
          GOTO      TRSR9999 IF EQUAL
          MATCH     "00",CDAY
          GOTO      TRSR9999 IF EQUAL
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      TRSR9999
.
TRSR4810  PACK      SELCDATE,D8
          CALL      DATES000
          GOTO      TRSR9999
.
TRSR4820  PACK      SELCDATE,D8
          CALL      DATED000
          GOTO      TRSR9999
.
TRSR4900  CALL      CBED0000                * for HDH CAR 215623
          MATCH     SP70,EMVIUT04
          IF        @EQUAL
            MOVE      PMBRATIM,D8           * default from requests table
          ELSE
            MOVE      EMVIUT04,D8           * Ward Allocation Time
          ENDIF
          WRITE     HTMLFILE;D8;
          GOTO      TRSR9999
.
TRSR5000  CALL      CBED0000                * for HDH CAR 215623
          MATCH     SP70,EMVIEWRD
          IF        @EQUAL
            MOVE      PMBREWRD,D3           * default from requests table
          ELSE
            MOVE      EMVIEWRD,D3           * Expected Ward (Patient System)
          ENDIF
.
          UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          BRANCH    F1,TRSR5010,TRSR5020,TRSR5030
.
          PACK      KEY6,D3,SP70
          CALL      RDWARD1
          BRANCH    OVRCD,TRSR9999
.
          MATCH     SP70,WBDESC
          GOTO      TRSR9999 IF EQUAL
          WRITE     HTMLFILE;WBDESC;
          GOTO      TRSR9999

TRSR5010  MATCH     SP70,D3
          GOTO      TRSR9999 IF EQUAL
          WRITE     HTMLFILE;D3;
          GOTO      TRSR9999
.
TRSR5020  PACK      KEY3,D3
          PROC      WSELP000
          GOTO      TRSR9999
.
TRSR5030  MATCH     SP70,D3
          IF        @EQUAL
            MOVE      WBSEWRD,D3      * Default to ward against security
          ENDIF
          PACK      KEY3,D3
          PROC      WSELP000
          GOTO      TRSR9999
.
TRSR5100  WRITE     HTMLFILE;PTARVAL1;
          GOTO      TRSR9999
.
TRSR5200  WRITE     HTMLFILE;PTARVAL2;
          GOTO      TRSR9999
.
TRSR5300  MATCH     SP70,PTARVAL3
          IF        @EQUAL
            CALL      CLCBMI00
          ELSE
            PACK      BODMASIN,PTARVAL3,SP70
          ENDIF 
.
          CALL      RNGBMI00
          WRITE     HTMLFILE;BODMASRN;
          GOTO      TRSR9999
.
TRSR5400  MATCH     SP70,PTARUDTE
          GOTO      TRSR5410 IF EQUAL
.
          UNPACK    PTARUDTE,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,SP1,PTARUTME;
          GOTO      TRSR9999
.
TRSR5410  MATCH     SP70,PTARCDTE
          GOTO      TRSR9999 IF EQUAL
.
          UNPACK    PTARCDTE,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,SP1,PTARCTME;
          GOTO      TRSR9999
.
TRSR5500  WRITE     HTMLFILE;BMIINDIC;
          GOTO      TRSR9999
.
TRSR5600  CALL      LDOC0000      * Get Last Seen Doctor (code/name)
          GOTO      TRSR9999
.
TRSR5700  CALL      LNUR0000      * Get Last Seen Nurse (code/name)
          GOTO      TRSR9999
.
TRSR5800  MATCH     SP70,EMVIPADM        * Linked IP visit admission status
          GOTO      TRSR9999 IF EQUAL
.
          PACK      KEY8,EMVIPADM
          CALL      RDMISS1
          BRANCH    OVRCD,TRSR9999
.
          PACK      KEY8,EMVIADMN,SP70   * Restore ED visits pmsvx1af record
          CALL      RDPMVX11             * after the admission file read
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          WRITE     HTMLFILE;ASTAT;
          GOTO      TRSR9999
.
TRSR5900  MATCH     SP70,EMVIPADM        * Linked IP visit admission date
          GOTO      TRSR9999 IF EQUAL
.
          PACK      KEY8,EMVIPADM
          CALL      RDMISS1
          BRANCH    OVRCD,TRSR9999
.
          PACK      KEY8,EMVIADMN,SP70   * Restore ED visits pmsvx1af record
          CALL      RDPMVX11             * after the admission file read
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,SP1,PTARCTME;
          GOTO      TRSR9999
.
TRSR6000  MATCH     SP70,EMVIPADM        * Linked IP visit admission time
          GOTO      TRSR9999 IF EQUAL
.
          PACK      KEY8,EMVIPADM
          CALL      RDMISS1
          BRANCH    OVRCD,TRSR9999
.
          PACK      KEY8,EMVIADMN,SP70   * Restore ED visits pmsvx1af record
          CALL      RDPMVX11             * after the admission file read
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          WRITE     HTMLFILE;ATIME;
          GOTO      TRSR9999
.
TRSR6100  WRITE     HTMLFILE;EMSTEDFP;
          GOTO      TRSR9999
.
TRSR6200  CALL      ELCN0000
          GOTO      TRSR9999
.
TRSR6300  WRITE     HTMLFILE;WBSEGENR;
          GOTO      TRSR9999
.
TRSR6400  CALL      STVCCL00                * STV All Cross Consultations List
          GOTO      TRSR9999
.
TRSR6500  CALL      OUTALR00                * output printable alerts
          GOTO      TRSR9999
.
TRSR6600  CALL      GETDSP00
          GOTO      TRSR9999
.
TRSR6700  CALL      GETDSF00
          GOTO      TRSR9999
.
TRSR6800  MOVE      SP70,NOTEFILT
          UNPACK    DIM127,D1,NOTEFILT,DIM127
          UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,NOTEORDR
          MOVE      KEY1,NOTEORDR
.
          CALL      CLVNOT00
          CALL      DIFNOT00
          GOTO      TRSR9999
.
TRSR6900  CALL      GETDFA00
          GOTO      TRSR9999
.
TRSR7000  CALL      GETDFD00
          GOTO      TRSR9999
.
TRSR7100  OPEN      PMSDAUA1,"pmsdauaf"
          PACK      KEY27,URNUMBER,Z70
          CALL      RDPMDAU1
          CALL      RPPMDAU1
          BRANCH    OVRCD,TRSR7110
.
          MATCH     URNUMBER,PMDEURNO
          GOTO      TRSR7110 IF NOT EQUAL
.
          MOVE      ONE,D1
          GOTO      TRSR7120
.
TRSR7110  MOVE      ZERO,D1
          GOTO      TRSR7120
.
TRSR7120  SQUEEZE   D1
          WRITE     HTMLFILE;D1;
          CLOSE     PMSDAUA1
          GOTO      TRSR9999
.
TRSR7200  WRITE     HTMLFILE;PSEX;
          GOTO      TRSR9999
.
TRSR7300  CALL      GTARDT00
          GOTO      TRSR9999
.
TRSR7400  CALL      GTTRDT00
          GOTO      TRSR9999
.
TRSR7500  CALL      GTPRDT00
          GOTO      TRSR9999
.
TRSR7600  CALL      GTTNDT00
          GOTO      TRSR9999
.
TRSR7700  CALL      GTPNDT00
          GOTO      TRSR9999
.
TRSR7800  PROC      NXVS0000                * Next emr patient tag
          GOTO      TRSR9999                * same emr site
.
TRSR7900  MOVE      "SI",CATEGORY
          PACK      CODE,PMVXSTRA,SP70
          CALL      CODITM00
          GOTO      TRSR9999
.
TRSR8000  CALL      PTLKT000
          GOTO      TRSR9999
.
TRSR8100  CALL      DSCMN000                 * Check Discharge Mandatory field
          GOTO      TRSR9999
.
TRSR8200  CALL      AUDHI200                 * Audit History for sjog-standard
          GOTO      TRSR9999
.
TRSR8300  CALL      OTDHIS00                 * Other Doctor History
          GOTO      TRSR9999
.
TRSR8400  CALL      DOCHI200
          GOTO      TRSR9999
.
TRSR8500  CALL      NURHI200
          GOTO      TRSR9999
.
TRSR8600  WRITE     HTMLFILE;PMRSSTDN;
          GOTO      TRSR9999
.
TRSR8700  CALL      CLRNOT00
          MOVE      ONE,SHOWCDET           * Don't show created by details
          CALL      PRTPNT00
          GOTO      TRSR9999
.
TRSR8800  WRITE     HTMLFILE;EMEXAIN1;
          GOTO      TRSR9999
.
TRSR8900  WRITE     HTMLFILE;EMEXAIN2;
          GOTO      TRSR9999
.
TRSR9000  WRITE     HTMLFILE;EMEXAIN3;
          GOTO      TRSR9999
.
TRSR9100  WRITE     HTMLFILE;EMEXAIN4;
          GOTO      TRSR9999
.
TRSR9200  WRITE     HTMLFILE;EMEXAIN5;
          GOTO      TRSR9999
.
TRSR9300  WRITE     HTMLFILE;EMEXCALL;
          GOTO      TRSR9999
.
TRSR9400  WRITE     HTMLFILE;EMEXTSRC;
          GOTO      TRSR9999
.
TRSR9500  MOVE      "rR",CATEGORY
          PACK      CODE,EMEXREMV,SP70
          CALL      CODITM00
          GOTO      TRSR9999
.
TRSR9600  WRITE     HTMLFILE;EMEXCONT;
          GOTO      TRSR9999
.
TRSR9700  MATCH     SP70,EMSTHSNO
          IF        !@EQUAL
            MOVE      EMSTHSNO,D3
          ENDIF
          MATCH     SP70,PMVXMHOS
          IF        !@EQUAL
            MOVE      PMVXMHOS,D3
          ENDIF
.
          PACK      KEY3,D3,SP10
          CALL      RDPTHSP1
          BRANCH    OVRCD,TRSR9710
.
          MATCH     SP70,PTHSMAPH
          IF        !@EQUAL
            WRITE     HTMLFILE;PTHSMAPH;
            GOTO      TRSR9999
          ENDIF
.
TRSR9710  WRITE     HTMLFILE;EMCNMAPH;
          GOTO      TRSR9999
.
TRSR9800  MOVE      ONE,WITHTIME
          MOVE      ONE,DONTGRBC            * Don't group records by consultant
          CALL      ALLCCL00                * All Cross Consultations List
          GOTO      TRSR9999
.
TRSR9900  UNPACK    DIM127,D1,KEY3,DIM127
          MOVE      KEY3,FLDITMNO
          CALL      TRSX0000
          GOTO      TRSR9999
.
TRSR9999  RETURN
.
.------------------------------------------------------------------------------
. TRSR0000 extension tags  eg. %EMRWEB02.01.599.XXX
.------------------------------------------------------------------------------
TRSX0000  BRANCH    FLDITMNO,TRSX0100,TRSX0200,TRSX0300,TRSX0400,TRSX0500:
                             TRSX0600,TRSX0700,TRSX0800,TRSX0900,TRSX1000:
                             TRSX1100,TRSX1200,TRSX1300
.
          WRITE     HTMLFILE;"Invalid IBA Tag";
          GOTO      TRSX9999
.
TRSX0100  WRITE     HTMLFILE;PMVXUDF7;       * Upload to PCEHR 0=No 1=Yes
          GOTO      TRSX9999
.
TRSX0200  MOVE      "ae",CATEGORY            * UDF 10 - Receive a survey
          PACK      CODE,PMVXUD10,SP70
          CALL      CODITM00
          GOTO      TRSX9999
.
TRSX0300  MOVE      "af",CATEGORY            * UDF 11 - Find out about Hosp
          PACK      CODE,PMVXUD11,SP70
          CALL      CODITM00
          GOTO      TRSX9999
.
TRSX0400  MATCH     SP70,EMVIPADM        * Linked IP visit admission date
          GOTO      TRSX9999 IF EQUAL
.
          PACK      KEY8,EMVIPADM
          CALL      RDMISS1
          BRANCH    OVRCD,TRSX9999
.
          PACK      KEY8,EMVIADMN,SP70   * Restore ED visits pmsvx1af record
          CALL      RDPMVX11             * after the admission file read
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          COMPARE   TWO,ASTAT
          GOTO      TRSX9999 IF NOT EQUAL
.
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,SP1,PTARCTME;
          GOTO      TRSX9999
.
TRSX0500  MATCH     SP70,EMVIPADM        * Linked IP visit admission time
          GOTO      TRSX9999 IF EQUAL
.
          PACK      KEY8,EMVIPADM
          CALL      RDMISS1
          BRANCH    OVRCD,TRSX9999
.
          PACK      KEY8,EMVIADMN,SP70   * Restore ED visits pmsvx1af record
          CALL      RDPMVX11             * after the admission file read
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          COMPARE   TWO,ASTAT
          GOTO      TRSX9999 IF NOT EQUAL
.
          WRITE     HTMLFILE;ATIME;
          GOTO      TRSX9999
.
TRSX0600  CALL      CRCL0000                * Cross consultation list
          GOTO      TRSX9999
.
TRSX0700  CALL      CLRNOT00
          MOVE      ZERO,SHOWCDET           * Don't show created by details
          CALL      PRTPNT00
          GOTO      TRSX9999
.
TRSX0800  MOVE      "fv",CATEGORY           * Family violent
          PACK      CODE,PMVXFVIO,SP70
          CALL      CODITM00
          GOTO      TRSR9999
.
TRSX0900  MOVE      "EC",CATEGORY           * Reason for deletion-ED visits
          MOVE      EMDARECD,CODE
          CALL      CODITM00
          GOTO      TRSR9999
.
TRSX1000  WRITE     HTMLFILE;EMDACOMM;      * Comments for deletion-ED visits
          GOTO      TRSX9999 
.
TRSX1100  MATCH     "H",PMPXPMCN            * Private Phone Contact
          IF        @EQUAL
            WRITE     HTMLFILE;PTELEP;
            GOTO      TRSX9999
          ENDIF
.
          MATCH     "W",PMPXPMCN            * Business Phone Contact
          IF        @EQUAL
            WRITE     HTMLFILE;PTELEB;
            GOTO      TRSX9999
          ENDIF
.
          MATCH     "M",PMPXPMCN            * Mobile Phone Contact
          IF        @EQUAL
            WRITE     HTMLFILE;PTMXCELL;
            GOTO      TRSX9999
          ENDIF
.
          MATCH     "S",PMPXPMCN            * SMS Contact
          IF        @EQUAL
            WRITE     HTMLFILE;PTMXCELL;
            WRITE     HTMLFILE;" SMS";
            GOTO      TRSX9999
          ENDIF
.
          MATCH     "E",PMPXPMCN            * Email Contact
          IF        @EQUAL
            WRITE     HTMLFILE;PMPXPEML;
            GOTO      TRSX9999
          ENDIF
.                                           If No Preferred Contant
          MATCH     SP70,PTMXCELL           * Mobile
          IF        !@EQUAL
            WRITE     HTMLFILE;PTMXCELL;
            GOTO      TRSX9999
          ENDIF
.
          MATCH     SP70,PTELEP  
          IF        !@EQUAL
            WRITE     HTMLFILE;PTELEP;     * Home Phone
            GOTO      TRSX9999
          ENDIF
.
          MATCH     SP70,PTELEB            * Business Phone
          IF        !@EQUAL
            WRITE     HTMLFILE;PTELEB;
            GOTO      TRSX9999
          ENDIF
.
          MATCH     SP70,PMPXPEML          * Email
          IF        !@EQUAL
            WRITE     HTMLFILE;PMPXPEML;
            GOTO      TRSX9999
          ENDIF
.
TRSX1200  MOVE      "G ",CATEGORY            
          PACK      CODE,PSEX,SP70
          CALL      GETCOD00
          WRITE     HTMLFILE;THCSCOD;
          GOTO      TRSX9999
.
TRSX1300  CALL      MANFLD00      * Mandatory field check
          GOTO      TRSX9999
.
TRSX9999  RETURN
+
.------------------------------------------------------------------------------
.  Mandatory field check
.
.  Example: %EMRWEB02.01.599.013.XXX.0 / %EMRWEB02.01.599.013.XXX.1)
.
.  Where:
.    XXX - Field number
.    '0' - Mandatory
.    '1' - Mandatory For Discharge
.------------------------------------------------------------------------------
MANFLD00  MOVE      ZERO,F1
          UNPACK    DIM127,D1,KEY3,D1,KEY1,DIM127
          MOVE      KEY1,F1
.
          MOVE      KEY3,FORM5
          MOVE      FORM5,KEY5
          PACK      KEY5,KEY5,SP70
          CALL      RDEMWFM1
          BRANCH    OVRCD,MANFLD90
.
          MATCH     "1",EMWFMAN
          GOTO      MANFLD90 IF NOT EQUAL        * Not Mandatory
.
          IF        F1=1
            MATCH     "1",EMWFMND
            GOTO      MANFLD90 IF NOT EQUAL      * Not Mandatory For Discharge
          ENDIF
.
          GOTO      MANFLD91
.
MANFLD90  WRITE     HTMLFILE;ZERO;
          GOTO      MANFLD99
.
MANFLD91  WRITE     HTMLFILE;ONE;
MANFLD99  RETURN
+
.------------------------------------------------------------------------------
.  Cross consultation list - sjog clinical screen view
.------------------------------------------------------------------------------
CRCL0000  CALL      CREA0000

          PACK      KEY31,ADMISSNO,SP70
          CALL      RSPTCRC1
CRCL1000  CALL      RKPTCRC1                * Read consults
          BRANCH    OVRCD,CRCL4000     
.
          MATCH     ADMISSNO,DPTCRBIL       * Same visit number?
          GOTO      CRCL4000 IF NOT EQUAL  
.
          CALL      SAVCCT00
          CALL      ALLWRT00
          GOTO      CRCL1000

CRCL4000  PACK      KEY47,ADMISSNO,Z70
          CALL      RSTEMP2
CRCL5000  CALL      RPTEMP2                 * Read consults
          BRANCH    OVRCD,CRCL9000     
.
          MATCH     ADMISSNO,DSVCRBIL       * Same visit number?
          GOTO      CRCL9000 IF NOT EQUAL  
.
          PACK      KEY10,SVCRDOCT,SP70     * Get Referring Consultant's name
          CALL      RDPMHCP1
          IF        OVRCD=0
            MOVE      PMHCTITL,FMTTITLE            * I CAR 13038
            MOVE      PMHCGNAM,FMTGNAME
            MOVE      PMHCSNAM,FMTSNAME
            CALL      DOCNM000                  * end I CAR 13038
          ELSE
            CLEAR     DOCFNAME
            APPEND    "Invalid Doctor - ",DOCFNAME
            APPEND    SVCRDOCT,DOCFNAME
            RESET     DOCFNAME
          ENDIF
          MOVE      DOCFNAME,DOCTNAME
.
          MOVE      SP70,REFDNAME
          MATCH     SP70,SVCRREFD
          IF        !@EQUAL
            PACK      KEY10,SVCRREFD,SP70    * Get Referred Consultant's name
            CALL      RDPMHCP1
            IF        OVRCD=0
              MOVE      PMHCTITL,FMTTITLE            * I CAR 13038
              MOVE      PMHCGNAM,FMTGNAME
              MOVE      PMHCSNAM,FMTSNAME
              CALL      DOCNM000                  * end I CAR 13038
            ELSE
              CLEAR     DOCFNAME
              APPEND    "Invalid Doctor - ",DOCFNAME
              APPEND    SVCRREFD,DOCFNAME
              RESET     DOCFNAME
            ENDIF
            MOVE      DOCFNAME,REFDNAME
          ENDIF
.
          MOVE      SP70,DIM20
          MATCH     SP3,SVCRACTN
          IF        !@EQUAL
            PACK      KEY5,CTAc,SVCRACTN,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      SVCRACTN,DIM20
            ELSE
              MOVE      TDESC,DIM20
            ENDIF
          ENDIF
.
          MOVE      SP70,TDESC
          MATCH     SP70,SVCRSPEC
          IF        !@EQUAL
            PACK      KEY5,ANSA,ANSC,SVCRSPEC,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      SVCRSPEC,TDESC
            ENDIF
          ENDIF
.
          WRITE     HTMLFILE;"<tr>":
                             "<td>&nbsp;":
                             "<img src=../images/MaintenanceIcon.gif ":
                             " class=Icon ":
                             "onclick='CrossConsDetails(#"":
                             URNUMBER,"#",#"",DSVCRBIL,"#",#"":
                             SVCRDOCT,"#",#"",SVCRREFD,"#",#"":
                             DSVCRCNT,"#");'></td>":
                             "<td>&nbsp;",DOCTNAME,"</td>":
                             "<td>&nbsp;",SVCRTIME,"</td>":
                             "<td>&nbsp;",REFDNAME,"</td>":
                             "<td>&nbsp;",TDESC,"</td>":
                             "<td>&nbsp;",DIM20,"</td>":
                             "<td>&nbsp;",SVCRCOMM,"</td>":
                             "</tr>"
.
          GOTO      CRCL5000
.
CRCL9000  CALL      KILL0000
.
CRCL9999  RETURN
+
.------------------------------------------------------------------------------
.         Selection List of Departure Means (Cat 'SI') - EMR discharge
.------------------------------------------------------------------------------
EMDM0000  MOVE      CATSI,CATEGORY
          MOVE      SP70,CODE
.
          PACK      KEY5,CATEGORY,SP70
          CALL      RDSCODE1
EMDM0010  CALL      RDKCODE1
          BRANCH    OVRCD,EMDM9999
.
          MATCH     CATEGORY,TCODE
          GOTO      EMDM9999 IF NOT EQUAL
.
          MATCH     SP70,ACODE
          GOTO      EMDM0010 IF EQUAL
.
          MATCH     PMVXSTRA,ACODE
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=#"",ACODE,"#" selected>":
                               TDESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=#"",ACODE,"#">",TDESC,"</option>"
          ENDIF
.
          GOTO      EMDM0010
.
EMDM9999  RETURN
+
.------------------------------------------------------------------------------
.  Output Presenting Complaint selection list with TCFORM6 which will contain
.  the associated Manchester Coding template.
.------------------------------------------------------------------------------
PRECMP00  MOVE      "el",CATEGORY
..          MOVE      EMEXCOMP,CODE
          MOVE      SP70,CODE
.
          PACK      PTCDKEY2,CATEGORY,SP70
          CALL      RDSCODE2
PRECMP10  CALL      RDKCODE2
          BRANCH    OVRCD,PRECMP99
.
          MATCH     CATEGORY,TCODE
          GOTO      PRECMP99 IF NOT EQUAL
.
          MATCH     SP70,ACODE
          GOTO      PRECMP10 IF EQUAL
.
          MATCH     "I",PTCOACTV
          GOTO      PRECMP10 IF EQUAL
.
          IF        IBCNMHOS=1
            MATCH    "1",PTCDHOSS
            IF       @EQUAL
              PACK     KEY8,WBSEHOSP,TCODE,ACODE,SP70
              CALL     RDMLCOD1
              BRANCH   OVRCD,PRECMP10
            ENDIF
          ENDIF
.
          PACK      KEY6,TCFORM6  * Will always contain a 2 digit template no
          SQUEEZE   KEY6
          MOVE      KEY6,KEY2
          PACK      KEY2,KEY2,SP70
          PACK      KEY7,QUOTE,ACODE,KEY2,QUOTE
.
          MATCH     CODE,ACODE
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY7," selected>":
                               TDESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY7,">",TDESC,"</option>"
          ENDIF
.
          GOTO      PRECMP10
.
PRECMP99  RETURN
.-----------------------------------------------------------
.         Clears the notes file variables
.-----------------------------------------------------------
CLRNOT00  MOVE      SP70,OBMDURNO  *  UR NUMBER
          MOVE      SP70,OBMDNOTE  *  Note Number
          MOVE      SP70,OBMDDATE  *  Date
          MOVE      SP70,OBMDTIME  *  TIME
          MOVE      SP70,OBMDUSER  *  User
          MOVE      SP70,OBMDOCCG  *  Occupational Gp.
          MOVE      SP70,OBMDDELT  *  Delete Indicator
          MOVE      SP70,OBMDDDAT  *  Delete Date
          MOVE      SP70,OBMDDTIM  *  Delete Time
          MOVE      SP70,OBMDDUSE  *  Delete User
.
          MOVE      SP70,OBMTURNO  *  UR Number
          MOVE      SP70,OBMTNOTE  *  Note
          MOVE      SP70,OBMTUNIQ  *  Uniq line number
          PACK      OBMTCMNT,SP70,SP70  *  Comment line
.
CLRNOT99  RETURN
.------------------------------------------------------------
.         Notes Display in the text area
.
. Note: Error with textarea wrapping - "|" dividers are added.
. Remember to do the following in the template display field correctly.
.    MedNoteLine="%EMRWEB02.01.436"
.    NoteArray=MedNoteLine.split("|");
.    NewNotes=NoteArray[0]
.    for (var j=1; j < NoteArray.length; j++) {
.      if (!isWhitespace(NoteArray[j])) {
.        NewNotes=NewNotes+"\n"+NoteArray[j];
.    } }
.    document.UpdateForm.medichis.value=NewNotes;
.------------------------------------------------------------
DISPNT00  MOVE      URNUMBER,OBMDURNO
          PACK      KEY14,OBMDURNO,Z70
          CALL      RSOBMDT1
DISPNT10  CALL      RPOBMDT1
          BRANCH    OVRCD,DISPNT99
          MATCH     URNUMBER,OBMDURNO
          GOTO      DISPNT99 IF NOT EQUAL
          MATCH     "1",OBMDDELT
          GOTO      DISPNT10 IF EQUAL 
.
          MATCH     SP70,OBMDDATE
          IF        !@EQUAL
            UNPACK    OBMDDATE,CCENT,CYEAR,CMON,CDAY
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      TEMPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR        
          ENDIF
.
          PACK      WBSENAM,SP70
          PACK      KEY10,OBMDUSER,SP70
          CALL      RDWBSE1
.
          CLEAR     MEDNOTES
          APPEND    TEMPDATE,MEDNOTES
          APPEND    "  ",MEDNOTES
          APPEND    OBMDTIME,MEDNOTES
          APPEND    "  ",MEDNOTES
          STRIP     WBSENAM
          APPEND    WBSENAM,MEDNOTES
          APPEND    "  ",MEDNOTES
          APPEND    OBMDOCCG,MEDNOTES
          RESET     MEDNOTES 
.
          STRIP     MEDNOTES
          MOVELPTR  MEDNOTES,LENGTH
.
          SFORMAT   VAR,LENGTH
          MOVE      MEDNOTES,VAR
          WRITE     HTMLFILE;VAR,"|";
.
          PACK      KEY17,URNUMBER,OBMDNOTE,SP70
          CALL      RSOBMTX1
DISPNT20  CALL      RKOBMTX1
          BRANCH    OVRCD,DISPNT10
          MATCH     OBMTURNO,OBMDURNO
          GOTO      DISPNT10 IF NOT EQUAL
          MATCH     OBMTNOTE,OBMDNOTE
          GOTO      DISPNT10 IF NOT EQUAL
.
          STRIP     OBMTCMNT
          MOVELPTR  OBMTCMNT,LENGTH
.
          SFORMAT   VAR,LENGTH
          MOVE      OBMTCMNT,VAR
          WRITE     HTMLFILE;VAR,"|";
          GOTO      DISPNT20         
. 
DISPNT99 RETURN
.------------------------------------------------------------
.         Medical Hisoty Notes Print
.------------------------------------------------------------
PRTPNT00  MOVE      URNUMBER,OBMDURNO
          PACK      KEY14,OBMDURNO,Z70
          CALL      RSOBMDT1
PRTPNT10  CALL      RPOBMDT1
          BRANCH    OVRCD,PRTPNT99
.
          MATCH     URNUMBER,OBMDURNO
          GOTO      PRTPNT99 IF NOT EQUAL
.
          MATCH     "1",OBMDDELT
          GOTO      PRTPNT10 IF EQUAL 
.
          COMPARE   ONE,SHOWCDET           * Don't show created by details
          GOTO      PRTPNT15 IF EQUAL
.
          MATCH     SP70,OBMDDATE
          IF        !@EQUAL
            UNPACK    OBMDDATE,CCENT,CYEAR,CMON,CDAY
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      TEMPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR        
          ENDIF
.
          PACK      WBSENAM,SP70
          PACK      KEY10,OBMDUSER,SP70
          CALL      RDWBSE1
.
          CLEAR     MEDNOTES
          APPEND    TEMPDATE,MEDNOTES
          APPEND    "  ",MEDNOTES
          APPEND    OBMDTIME,MEDNOTES
          APPEND    "  ",MEDNOTES
          STRIP     WBSENAM
          APPEND    WBSENAM,MEDNOTES
          APPEND    "  ",MEDNOTES
          APPEND    OBMDOCCG,MEDNOTES
          RESET     MEDNOTES 
.
          STRIP     MEDNOTES
          MOVELPTR  MEDNOTES,LENGTH
.
          SFORMAT   VAR,LENGTH
          MOVE      MEDNOTES,VAR
          WRITE     HTMLFILE;VAR,"<br>";
.
PRTPNT15  PACK      KEY17,URNUMBER,OBMDNOTE,SP70
          CALL      RSOBMTX1
PRTPNT20  CALL      RKOBMTX1
          BRANCH    OVRCD,PRTPNT10
          MATCH     OBMTURNO,OBMDURNO
          GOTO      PRTPNT10 IF NOT EQUAL
          MATCH     OBMTNOTE,OBMDNOTE
          GOTO      PRTPNT10 IF NOT EQUAL
.
          STRIP     OBMTCMNT
          MOVELPTR  OBMTCMNT,LENGTH
.
          SFORMAT   VAR,LENGTH
          MOVE      OBMTCMNT,VAR
          WRITE     HTMLFILE;VAR,"<br>";
          GOTO      PRTPNT20         
. 
PRTPNT99 RETURN
.------------------------------------------------------------
.         Transfer Source
.------------------------------------------------------------
TRTBL000  IF        LINK2PRT<>1
            UNPACK    DIM127,D1,LINKPRG,DIM127
            UNPACK    DIM127,D1,LINKREP,DIM127
            UNPACK    DIM127,D1,LINKTEM,DIM127
          ENDIF
.
          CALL      TRHED000                 * Table heading
.
.          MATCH     SP70,EMVITSRC
.          GOTO      TRTBL999  IF EQUAL
          IF        NORECORD=0
            MOVE      "10",NORECORD         * Set Default No Records to Display
          ENDIF
          MOVE      ZERO,RECNUMB
          MOVE      ZERO,DISNUMB
.
          PACK      KEY35,STARTKEY,SP70
          CALL      RSPTVAD2 
TRTBL100  CALL      RKPTVAD2
          BRANCH    OVRCD,TRTBL999
.          MATCH     ITMTY001,DPRITFLG
.          GOTO      TRTBL999 IF NOT EQUAL
.
          ADD       ONE,RECNUMB
          IF        STARTNUM>=RECNUMB
            GOTO     TRTBL100
          ENDIF
.
          CALL      TSROW000    * Display Table Details Row
          ADD       ONE,DISNUMB
          COMPARE   NORECORD,DISNUMB
          GOTO      TRTBL100 IF NOT EQUAL
.
TRTBL999  RETURN
.------------------------------------------------------------
. Item Code Table Details (TABLE HEADING)
.------------------------------------------------------------
TRHED000   WRITE     HTMLFILE;"<tr>":
                              "<td colspan=2 class=HeadingCell align=center>":
                              " You Searched for ":
                              STARTKEY,"</td></tr>";
.
           WRITE     HTMLFILE;"<tr>":
                               "<td class=HeadingCell width=30%>":
                               "TransferSource Code</td>":
                               "<td class=HeadingCell width=70%>":
                               "Description</td>":
                               "</tr>";
.
TRHED999  RETURN
.
.------------------------------------------------------------
.               Transfer Source Row Display       
.------------------------------------------------------------
TSROW000  BRANCH    LINK2PRT,TSROW010,TSROW020
.
          WRITE     HTMLFILE;"<tr valign=top>":
                                "<td nowrap><a href=",LINKPRG,".pbl?":
                                "&reportno=",LINKREP:
                                "&template=",LINKTEM:
                                "&=itmty001",PTVACODE:
                                "&=itmco002",PTVADESC,">":
                                PTVACODE,"</a></td>":
                                "<td>",PTVADESC,"</td>":
                              "</tr>";
          GOTO      TSROW999 
.
TSROW010  WRITE     HTMLFILE;"<tr><td nowrap>":
                               "<A HREF='javascript:updateParent":
                               "(#"",PTVACODE,"#",#"":
                               PTVADESC,"#")'>":
                               PTVACODE,"</a></td>":
                               "<td>",PTVADESC,"</td>":
                             "</tr>";
          GOTO      TSROW999 
.
TSROW020  WRITE     HTMLFILE;"<tr valign=top>":
                               "<td nowrap><a href=#"":
                               "javascript:ShowDetail('":
                               LINKPRG,".pbl?":
                               "&reportno=",LINKREP:
                               "&template=",LINKTEM:
                               "&=itmty001",PTVACODE:
                               "&=itmco002",PTVADESC:
                               "');#">":
                               PTVACODE,"</a></td>":
                               "<td>",PTVADESC,"</td>":
                             "</tr>";
          GOTO      TSROW999 
.
TSROW999  RETURN
.-------------------------------------------------------------
. Link to Prev Group option 8
.-------------------------------------------------------------
PREVTR00  MOVE      NORECORD,KEY2
          REP       " +",KEY2
          ASSIGN    STARTNUM-NORECORD,F3
          IF        F3<0
            MOVE      ZERO,F3
          ENDIF
          MOVE      F3,KEY3
          REP       " +",KEY3
          UNPACK    DIM127,D1,FLDPARA,DIM127
          MOVE      REPORTNO,F1
.
          REP       " +",STARTKEY
.
          WRITE     HTMLFILE;"emrweb02.pbl":
                                "?reportno=",F1:
                                "&template=501":
                                "&startnum=",KEY3:
                                "&norecord=",KEY2:
                                "&startkey=",STARTKEY;
.
          REP       "+ ",STARTKEY
.
PREVTR99  RETURN
.-----------------------------------------------------------
. Link to Next Group option 8
.-----------------------------------------------------------
NEXTTR00  MOVE      NORECORD,KEY2
          REP       " +",KEY2
          ASSIGN    STARTNUM+NORECORD,F3
          MOVE      F3,KEY3
          REP       " +",KEY3
          UNPACK    DIM127,D1,D3,DIM127
          MOVE      REPORTNO,F1
.
          REP       " +",STARTKEY
.
          WRITE     HTMLFILE;"emrweb02.pbl":
                                 "?reportno=",F1:
                                 "&template=",D3:
                                 "&startnum=",KEY3:
                                 "&norecord=",KEY2:
                                 "&startkey=",STARTKEY;
.
          REP       "+ ",STARTKEY
.
NEXTTR99  RETURN
.
.------------------------------------------------------------
.         Emergency Shift Change
.------------------------------------------------------------
ESCH0000  BRANCH    FLDITMNO,ESCH0100,ESCH0200,ESCH0300,ESCH0400,ESCH0500:
                             ESCH0600,ESCH0700
          GOTO      ESCH9999
.
ESCH0100  PACK      KEY6,SP70         * nurse selection list
          CALL      RSOPNUR1
ESCH0110  CALL      RKOPNUR1
          BRANCH    OVRCD,ESCH9999
.
          SQUEEZE   OPNRSNAM
          SQUEEZE   OPNRGNAM
          PACK      KEY60,OPNRGNAM,SP1,OPNRSNAM
          MATCH     SELECTCD,OPNRCODE
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",OPNRCODE," selected>":
                               KEY60,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",OPNRCODE,">",KEY60,"</option>"
          ENDIF
.
          GOTO      ESCH0110
.
ESCH0200  BRANCH    EMCNDOCT,ESCH0500     * I CAR 45795
          MOVE      SP70,KEY6             * doctor selection list
          CALL      RDSDOCT1
ESCH0210  CALL      RDKDOCT1
          BRANCH    OVRCD,ESCH9999
.
          MATCH     SP70,DCODE
          GOTO      ESCH0210 IF EQUAL
.
          COMPARE   ZERO,DRSTAT
          GOTO      ESCH0210 IF NOT EQUAL
.
          SQUEEZE   DTITL 
          SQUEEZE   DGNAME
          SQUEEZE   DSNAME
          PACK      KEY60,DTITL,SP1,DGNAME,SP1,DSNAME
          
          MATCH     SELECTCD,DCODE
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",DCODE," selected>":
                               KEY60,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",DCODE,">",KEY60,"</option>"
          ENDIF
.
          GOTO      ESCH0210
.
ESCH0300  CALL      NURTAB00            * table of patients for selected nurse
          GOTO      ESCH9999
.
ESCH0400  CALL      DOCTAB00            * table of patients for selected doctor
          GOTO      ESCH9999
.
ESCH0500  MOVE      SP70,KEY10          * I CAR 45795
          CALL      RSEMDO1
ESCH0510  CALL      RKEMDO1
          BRANCH    OVRCD,ESCH9999
.
          MATCH     SP70,EMDODOC
          GOTO      ESCH0510 IF EQUAL
.
          MATCH     "1",EMDOACT
          GOTO      ESCH0510 IF NOT EQUAL
.
          STRIP     EMDODNM
          PACK      KEY60,EMDODNM
.
          MATCH     SELECTCD,EMDODOC
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",EMDODOC,"selected>":
                               KEY60,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",emdodoc,">",KEY60,"</option>"
          ENDIF
.
          GOTO      ESCH0510             * end I CAR 45795
.
ESCH0600  WRITE     HTMLFILE;SELECTCD;
          GOTO      ESCH9999
.                               
ESCH0700  WRITE     HTMLFILE;ALLOCTCD;
          GOTO      ESCH9999    
.
ESCH9999  RETURN
.------------------------------------------------------------
.         Table of patients for selected nurse
.------------------------------------------------------------
NURTAB00  UNPACK    DIM127,D1,LINKPRG,DIM127
          UNPACK    DIM127,D1,LINKREP,DIM127
          UNPACK    DIM127,D1,LINKTEM,DIM127
.
          RESET     SELECTCD
          MATCH     SP70,SELECTCD
          GOTO      NURTAB99 IF EQUAL
.
          MATCH     "1",EMCNURSE               * Use pmshcpaf for ED Nurse?
          GOTO      NURTAB04 IF EQUAL          * Yes
.
.         CONTROL.EMCNURSE=0 - Use oprnuraf for nurse
          PACK      KEY6,SELECTCD,SP70
          CALL      RDOPNUR1
          BRANCH    OVRCD,NURTAB99
          GOTO      NURTAB06
.
.         CONTROL.EMCNURSE=1 - Use pmshcpaf for nurse
NURTAB04  PACK      KEY10,SELECTCD,SP70
          CALL      RDPMHCP1
          BRANCH    OVRCD,NURTAB99
          GOTO      NURTAB06
.
NURTAB06  WRITE     HTMLFILE;"<tr>":
                                "<td class=HeadingCell align=left>Triage</td>":
                                "<td class=HeadingCell align=left>Patient</td>":
                                "<td class=HeadingCell align=left>Doctor</td>":
                                "<td class=HeadingCell align=left>":
                                "Complaint</td>":
                                "<td class=HeadingCell align=left>Location":
                                "</td>":
                                "<td class=HeadingCell align=center>":
                                "Transfer</td>":
                             "</tr>"
.
          PACK      KEY12,WBSEESC,ONE,SP70
          CALL      RSEMVIS5
NURTAB10  CALL      RKEMVIS5
          BRANCH    OVRCD,NURTAB99
.
          MATCH     WBSEESC,EMVISITE
          GOTO      NURTAB99 IF NOT EQUAL
.
          COMPARE   ONE,EMVISTAT
          GOTO      NURTAB99 IF NOT EQUAL
.
          MATCH     EMVIATNS,SELECTCD
          GOTO      NURTAB10 IF NOT EQUAL
.
          PACK      KEY8,EMVIURNO
          CALL      RDMAST1
          IF        OVRCD=1
            PACK      KEY8,EMVIADMN
            CALL      RDEMUNK1
            IF        OVRCD=1
              UNPACK    SP70,PTITL,PSNAME,PGNAME
              UNPACK    SP70,PTMASNAM
              MOVE      ONE,FNAMFLAG
            ELSE
              CALL      RDPRAM1
              MOVE      "       0",PURNO
              MOVE      SP70,PTITL 
              MOVE      EMUNDET2,PGNAME
              MOVE      EMUNDET1,PSNAME
              MOVE      EMUNDET1,PTMASNAM
            ENDIF
          ENDIF
.
          BRANCH    FNAMFLAG,NURTAB20
.
          CALL      PATNAA00
.
NURTAB20  MOVE      "AA",CATEGORY
          MOVE      EMVITRIG,CODE              * triage code for gif to display
          CALL      GETCOD00
.
          PACK      KEY6,EMVIDOCT,SP70         * Get Doctors full name
          CALL      RDDOCT1
          IF        OVRCD=1
            MOVE     SP70,DOCFNAME
          ELSE
            MOVE     DTITL,FMTTITLE
            MOVE     DGNAME,FMTGNAME
            MOVE     DSNAME,FMTSNAME
            CALL     DOCNM000
          ENDIF
.
          MOVE      SP70,EMLODESC
          MOVE      EMVILOCN,KEY3
          CALL      RDEMLOC1
.
          MOVE      EMVIADMN,ADMISSNO
          MOVE      EMVIURNO,URNUMBER
          REP       " +",ADMISSNO
          REP       " +",URNUMBER
.
          PACK      KEY10,QUOTE,EMVIADMN,QUOTE
.
          WRITE     HTMLFILE;"<tr><td><img src=../images/triage",TCINDC1,".gif":
                             " hspace=4 align=absmiddle border=0></td>":
                             "<td><a href=",LINKPRG,".pbl?reportno=":
                             LINKREP,"&template=",LINKTEM,"&urnumber=":
                             URNUMBER,"&admissno=",ADMISSNO,">":
                             "<img src=../images/patdet.gif hspace=4 ":
                             "align=absmiddle ":
                             "border=0></a>",PATFNAME,"&nbsp;</td>":
                             "<td>",DOCFNAME,"&nbsp;</td>":
                             "<td>",EMVICOM1,"&nbsp;</td>":
                             "<td>",EMLODESC,"&nbsp;</td>":
                             "<td align=center><input type=checkbox ":
                             "name=visitlst checked value=",KEY10:
                             "></td></tr>"
.
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
.
          GOTO      NURTAB10
.
NURTAB99  RETURN
.------------------------------------------------------------
.         Table of patients for selected doctor
.------------------------------------------------------------
DOCTAB00  UNPACK    DIM127,D1,LINKPRG,DIM127
          UNPACK    DIM127,D1,LINKREP,DIM127
          UNPACK    DIM127,D1,LINKTEM,DIM127
.
          RESET     SELECTCD
          MATCH     SP70,SELECTCD
          GOTO      DOCTAB99 IF EQUAL
.
          PACK      KEY6,SELECTCD,SP70
          CALL      RDDOCT1
          BRANCH    OVRCD,DOCTAB99
.
          WRITE     HTMLFILE;"<tr>":
                                 "<td class=HeadingCell align=left>Triage</td>":
                                 "<td class=HeadingCell align=left>":
                                 "Patient</td>":
                                 "<td class=HeadingCell align=left>Nurse</td>":
                                 "<td class=HeadingCell align=left>":
                                 "Complaint</td>":
                                 "<td class=HeadingCell align=left>":
                                 "Location</td>":
                                 "<td class=HeadingCell align=center>":
                                 "Transfer</td>":
                             "</tr>"
.
          PACK      KEY12,WBSEESC,ONE,SP70
          CALL      RSEMVIS5
DOCTAB10  CALL      RKEMVIS5
          BRANCH    OVRCD,DOCTAB99
.
          MATCH     WBSEESC,EMVISITE
          GOTO      DOCTAB99 IF NOT EQUAL
.
          COMPARE   ONE,EMVISTAT
          GOTO      DOCTAB99 IF NOT EQUAL
.
          MATCH     EMVIDOCT,SELECTCD
          GOTO      DOCTAB10 IF NOT EQUAL
.
          PACK      KEY8,EMVIURNO
          CALL      RDMAST1
          IF        OVRCD=1
            PACK      KEY8,EMVIADMN
            CALL      RDEMUNK1
            IF        OVRCD=1
              UNPACK    SP70,PTITL,PSNAME,PGNAME
              UNPACK    SP70,PTMASNAM
              MOVE      ONE,FNAMFLAG
            ELSE
              CALL      RDPRAM1
              MOVE      "       0",PURNO
              MOVE      SP70,PTITL 
              MOVE      EMUNDET2,PGNAME
              MOVE      EMUNDET1,PSNAME
              MOVE      EMUNDET1,PTMASNAM
            ENDIF
          ENDIF
.
          BRANCH    FNAMFLAG,DOCTAB20
.
          CALL      PATNAA00
.
DOCTAB20  MOVE      "AA",CATEGORY
          MOVE      EMVITRIG,CODE              * triage code for gif to display
          CALL      GETCOD00
.
          PACK      NURSNAME,SP70
          PACK      KEY6,EMVIATNS,SP70         * Get Nurse full name
          CALL      RDOPNUR1
          IF        OVRCD=0
            SQUEEZE   OPNRGNAM
            PACK      NURSNAME,OPNRGNAM,SP1,OPNRSNAM
          ENDIF
.
          MOVE      SP70,EMLODESC
          MOVE      EMVILOCN,KEY3
          CALL      RDEMLOC1
.
          MOVE      EMVIADMN,ADMISSNO
          MOVE      EMVIURNO,URNUMBER
          REP       " +",ADMISSNO
          REP       " +",URNUMBER
.
          PACK      KEY10,QUOTE,EMVIADMN,QUOTE
.
          WRITE     HTMLFILE;"<tr><td><img src=../images/triage",TCINDC1,".gif":
                             " hspace=4 align=absmiddle border=0></td>":
                             "<td><a href=",LINKPRG,".pbl?reportno=":
                             LINKREP,"&template=",LINKTEM,"&urnumber=":
                             URNUMBER,"&admissno=",ADMISSNO,">":
                             "<img src=../images/patdet.gif hspace=4 ":
                             "align=absmiddle ":
                             "border=0></a>",PATFNAME,"&nbsp;</td>":
                             "<td>",NURSNAME,"&nbsp;</td>":
                             "<td>",EMVICOM1,"&nbsp;</td>":
                             "<td>",EMLODESC,"&nbsp;</td>":
                             "<td align=center><input type=checkbox ":
                             "name=visitlst checked value=",KEY10:
                             "></td></tr>"
.
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
.
          GOTO      DOCTAB10
.
DOCTAB99  RETURN
.------------------------------------------------------------
.         Output updateky
.------------------------------------------------------------
UKEY0000  RESET     ADMISSNO 
          MATCH     ADMISSNO,SP70
          IF        @EQUAL
            MOVE      EMVIADMN,ADMISSNO
          ENDIF
.
          PACK      KEY22,ADMISSNO,Z70
          PACK      UPDATEKY,ADMISSNO,SP70
          CALL      RSEMHIS1
          CALL      RPEMHIS1
          BRANCH    OVRCD,UKEY9000
          MATCH     ADMISSNO,EMHIVIS
          GOTO      UKEY9000 IF NOT EQUAL
.
          REP       " 0",EMHIDAT
          REP       " 0",EMHITIM
          PACK      UPDATEKY,EMHIVIS,EMHIDAT,EMHITIM
.
UKEY9000  WRITE     HTMLFILE;UPDATEKY;
.
UKEY9999  RETURN
.------------------------------------------------------------
. Open Files and Initialize Variables      Called by MAIN0000
.------------------------------------------------------------
INIT0000  CALL      INTMAS00
.
          CLOSE     WEBSCHA2           * Close not used files from WEBINT00
          CLOSE     WEBSCHA3           * Close not used files from WEBINT00
          CLOSE     WEBSCHA4           * Close not used files from WEBINT00
.
          OPEN      MRTMASA2,"mrtmasaf"
          OPEN      AAEDI1A1,"aaedi1af"
          OPEN      PATPR1A1,"patpr1af"
          OPEN      AAEDE1A1,"aaede1af"
          OPEN      AAEDTRE1,"aaedtref"
          OPEN      AAEDETB1,"aaedetbf"
          OPEN      ACCAUDA1,"accaudaf"
          OPEN      ALLTMPA1,"alltmpaf"
          OPEN      ALLREFA1,"allrefaf"
          OPEN      EMRCHAA1,"emrchaaf"
          OPEN      EMRHISA1,"emrhisaf"
          OPEN      EMRAUDHI,"emraudhi"
          OPEN      EMRAUDH2,"emraudhi"
          OPEN      EMRDAYA1,"emrdayaf"
          OPEN      EMRDOCA1,"emrdocaf"
....      OPEN      EMRDOCA2,"emrdocaf"
          OPEN      EMRDLAA1,"emrdlaaf"
          OPEN      EMRGRCA1,"emrgrcaf"
          OPEN      EMRLPCA1,"emrlpcaf"
....      OPEN      EMRMTXA1,"emrmtxaf"
          OPEN      EMRMTXA3,"emrmtxaf"
          OPEN      EMRPROA1,"emrproaf"
          OPEN      EMRSITA1,"emrsitaf"
          OPEN      EMRLOCA1,"emrlocaf"
          OPEN      EMRLOCA3,"emrlocaf"
          OPEN      EMRUNKA1,"emrunkaf"
          OPEN      EMRUTYA1,"emrutyaf"
          OPEN      EMRCLIA1,"emrcliaf"
          OPEN      EMRKEDA1,"emrkedaf"
          OPEN      EMRVCDA1,"emrvcdaf"
          OPEN      EMRVCDA2,"emrvcdaf"
....      OPEN      EMRVDGA1,"emrvdgaf"
          OPEN      EMRVISA1,"emrvisaf"
          OPEN      EMRVISA2,"emrvisaf"
          OPEN      EMRVISA3,"emrvisaf"
          OPEN      EMRVISA5,"emrvisaf"
          OPEN      EMRVISA7,"emrvisaf"
          OPEN      EMRVPRA1,"emrvpraf"
          OPEN      EMRWFMA1,"emrwfmaf"
          OPEN      EMRWFMA3,"emrwfmaf"
          OPEN      MRTVISA1,"mrtvisaf"
          OPEN      MRTHISA1,"mrthisaf"
....      OPEN      MRTMOVA1,"mrtmovaf"
          OPEN      PATDO1A1,"patdo1af"
          OPEN      PATFX1A1,"patfx1af"
          OPEN      PATIN1A1,"patin1af"
          OPEN      PATITEM1,"patitemn"
          OPEN      PATCFAA1,"patcfaaf"
          OPEN      PATCODE1,"patcodes"
          OPEN      PATCODE2,"patcodes"
          OPEN      PATCRCA1,"patcrcaf"
          OPEN      PATDADA1,"patdadaf"
          OPEN      PATPA1A1,"patpa1af"
          OPEN      PATPCPA1,"patpcpaf"
          OPEN      PATRE1A1,"patre1af"
          OPEN      PATVADA1,"patvadaf"
          OPEN      PATVADA2,"patvadaf"
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATVISA2,"patvisaf"
          OPEN      PATVISA4,"patvisaf"
          OPEN      PATWC1A1,"patwc1af"
          OPEN      PATWC1A2,"patwc1af"
          OPEN      PMSAIDA1,"pmsaidaf"
          OPEN      PMSBRQA1,"pmsbrqaf"
          OPEN      PMSBRQA2,"pmsbrqaf"
          OPEN      PMSBBDA2,"pmsbbdaf"
          OPEN      PMSVMTA1,"pmsvmtaf"
          OPEN      PMSEPBA2,"pmsepbaf"
          OPEN      PMSADWA1,"pmsadwaf"
          OPEN      PMSOECA1,"pmsoecaf"
          OPEN      PMSOESA1,"pmsoesaf"
          OPEN      PMSELFA1,"pmselfaf"
          OPEN      PMSELFA2,"pmselfaf" 
          OPEN      PMSEXTA1,"pmsextaf"
          OPEN      PMSRESA1,"pmsresaf"
          OPEN      PMSRELA1,"pmsrelaf"
          OPEN      PMSPAYA1,"pmspayaf"
          OPEN      PMSPAYA2,"pmspayaf"
          OPEN      PRIITEM1,"priitemf"
          OPEN      EMRWFMA2,"emrwfmaf"
          OPEN      PATWMAB1,"patwmabf"
          OPEN      PMSUPDA1,"pmsupdaf"
          OPEN      PMSWX1A1,"pmswx1af"
          OPEN      PATWVET1,"patwvetf"
          OPEN      PATWR1A1,"patwr1af"
....      OPEN      PATWR1A3,"patwr1af"
          OPEN      PATIPEN1,"patipenf"
          OPEN      PMSCCDA1,"pmsccdaf"
.
          OPEN      PMSALAA1,"pmsalaaf"
          OPEN      PMSALNA1,"pmsalnaf"
          OPEN      PATICDO1,"paticdof"     
          OPEN      PATINVR3,"patinvrf"
          OPEN      PMSPHSA1,"pmsphsaf"
          OPEN      PMSHCPA1,"pmshcpaf"     * HCP file
          OPEN      PMSHCGA1,"pmshcgaf"     * HCP Practice file
          OPEN      PMSMTIA1,"pmsmtiaf"     * Misc.Items and Theatre Charges
          OPEN      PMSMORA1,"pmsmoraf"
          OPEN      OPRNURA1,"oprnuraf"     * Nurse File
          OPEN      EMRINCA1,"emrincaf"     * Incomplete visit table
          OPEN      EMRISMA1,"emrismaf"     * Incomplete summary table
          OPEN      EMREXPA1,"emrexpaf"     * Emergency Expected patients
          OPEN      EMRTRFA1,"emrtrfaf"
          OPEN      VISCMTA1,"viscmtaf"     * Visit Comments Table
          OPEN      OBSMDTA1,"obsmdtaf"     * Patient Medical Notes
          OPEN      OBSMTXA1,"obsmtxaf"     * Patient Medical Notes free text
          OPEN      OBSDETA1,"obsdetaf"     * Patient Observations
          OPEN      OBSPCOA2,"obspcoaf"     * Observation Patient Corro
          OPEN      PMSMDTA1,"pmsmdtaf"     * Patient Notes
          OPEN      PMSMTXA1,"pmsmtxaf"     * Patient Notes free text
          OPEN      BOKRC1A1,"bokrc1af"	    * Booking file    
          OPEN      BOKRX1A1,"bokrx1af"	    * Booking extn file    
          OPEN      PMSVX1A1,"pmsvx1af"	    * Visit Extension File    
          OPEN      PMSCURA1,"pmscuraf"	    * Current Patient File    
          OPEN      EMRDCMA1,"emrdcmaf"     * Diagnosis comment file
          OPEN      PATDTHA1,"patdthaf"     * Death polling 
          OPEN      PMSTLEA1,"pmstleaf"
.
          OPEN      IBATMHA1,"ibatmhaf"
          OPEN      IBAPDFA1,"ibapdfaf"
          OPEN      IHAPASS1,"ihapassf"
          OPEN      IBACODE1,"ibacodef"
          OPEN      IBAPOST1,"ibapostf"
          OPEN      IBAPRTA1,"ibaprtaf"
          OPEN      PATTRAN2,"pattranf"
          OPEN      PATDSCH1,"patdschf"
....      OPEN      COMDEPA1,"comdepaf"
          OPEN      COMDEPA2,"comdepaf"
          OPEN      DISMASA1,"dismasaf"
          OPEN      DISPATA1,"dispataf"
....      OPEN      DISPATA2,"dispataf"
          OPEN      DISPTLA1,"disptlaf"
          OPEN      EOCLNKA3,"eoclnkaf"
          OPEN      EOCREFA1,"eocrefaf"
          OPEN      WATESPA1,"watespaf"
          OPEN      PATHSPA1,"pathspaf"
          OPEN      MRTLOCA1,"mrtlocaf"
          OPEN      MRTRQHR1,"mrtrqhaf"
          OPEN      MRTRQHR2,"mrtrqhaf"
          OPEN      MRTRQDR1,"mrtrqdaf"
          OPEN      MRTRQDR2,"mrtrqdaf"
          OPEN      VISCODA1,"viscodaf"
          OPEN      VISMDTA1,"vismdtaf"
          OPEN      VISMTXA1,"vismtxaf"
          OPEN      VISPAYA1,"vispayaf"
          OPEN      VISPAYA2,"vispayaf"
....      OPEN      PMSIPLA1,"pmsiplaf"     * Polling table for DHS Medicare
          OPEN      MEHVI1A1,"mehvi1af"     * Mental Health Visit Details
          OPEN      MEHDS1A1,"mehds1af"     * Mental Health Discharge Details
....      OPEN      MEHHLSA1,"mehhlsaf"     * Mental Health Legal Status Header
          OPEN      MEHHLSA2,"mehhlsaf"     * Mental Health Legal Status Header
....      OPEN      MEHCJAA1,"mehcjaaf"     * Mental Health CJA Status
....      OPEN      MEHLEGA1,"mehlegaf"     * Mental Health Legal Status History
          OPEN      MEHDLSA1,"mehdlsaf"     * Mental Health Legal Status Detail
          OPEN      ALLCASA1,"allcasaf"   * Allied Health HCP Case Team Details
          OPEN      ALLCTMA2,"allctmaf"   * Allied Health HCP Case Team Member
          OPEN      PATMI1A1,"patmi1af"
.         OPEN      PATASFA1,"patasfaf"   * Special Funding Arrangement Codes
.         OPEN      PATDGWA1,"patdgwaf"   * DRG Description and Weightings
          OPEN      WEBSECA1,"websecaf"
.
          MOVE      "out",CFILEPRE
          CALL      OPNOUT00
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TEN;*94,CAGECOFF:
                                 *196,CGENRUR,*211,CAUDK,*213,CAUDM:
                                 *244,CHOSPNUM

          READ      CONTROLF,TEN3;*188,CMABINS,*194,CVETINS
          READ      CONTROLF,TEN8;*246,CMAXAGE
          READ      CONTROLF,TEN9;*208,CPMIAD,*209,CSRESP
          READ      CONTROLF,TEN3;*1,CHADD1,CHADD2,CHPOST,CHPADD1,CHPADD2:
                                     CHPPOST,CHTELEB
          READ      CONTROLF,TWENTY;*52,PTPCLRES
          READ      CONTROLF,TWENTY1;*237,PTCNPAOF,*238,PTCNAGEC
          READ      CONTROLF,TWENTY2;*53,STCNPEMR
          READ      CONTROLF,THIRTY;*89,HELPAGE,HELPRNT,HELSIZE,HEPMR5:
                                    *95,HESYST,*187,HEMR5COD,*195,HINPCLM:
                                    *196,AECNCHRS,*197,AEALERT,*200,AECNFTYP
          READ      CONTROLF,FIFTY9;*234,PTCNNMPI
          READ      CONTROLF,EIGHTY;*241,PTCNUCGP,*250,PTCNHDPS
          READ      CONTROLF,EIGHTY9;*27,EMCNSCRN,*28,EMCNCAP1,*41,EMCNCAP2:
                                     *54,EMCNCAP3,*67,EMCNCAP4,*80,EMCNCAP5:
                                     *93,EMCNTIME,*97,EMCNEXTR:
                                     *98,EMCNMAXP,*100,EMCNMAXD:
                                     *106,EMCNUDFC,*108,EMCNUDDA,*110,EMCNUDTA:
                                     *112,EMCNUDFD,*114,EMCNUDFE:
                                     *116,EMCNUDFF,*118,EMCNUDFG,*122,EMCNUDXA:
                                     *124,EMCNUDXB,*138,EMCNICDF,*139,EMCNPCIE:
                                     *144,EMCNDOCT,*145,EMCNDDTM,*222,EMCNRETC:
                                     *235,EMCNLDIA,*237,EMCNDDSS
          READ      CONTROLF,SEVENTY1;*200,CCCNSVHM
          READ      CONTROLF,SEVENTY9;*120,PTCNUEOC
          READ      CONTROLF,EIGHTY8;*59,PTCNI10D,*237,PTCNEMPL,*246,PTCNH7VP
          READ      CONTROLF,NINETY7;*152,MRCNACRR,*166,MRCNRRED,*169,MRCNEMRT
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,HUND03;*214,PTCNHHFT,*215,PTCNHCLM:
                                    *220,PTCNDEES,*221,PTCNDDES
          READ      CONTROLF,HUND10;*243,PTCNCOMF,*248,PTCNEPAY
          READ      CONTROLF,HUND12;*96,PTCNH7AC,*101,PTCNUFFR,*105,PTCNMORG:
                                    *106,PTCNBEDM
          READ      CONTROLF,HUND16;*222,PTCNXCOM
          READ      CONTROLF,HUND18;*84,PTCNHFAX,*138,PTCNNEWC,*167,PTCNNWCA,*179,PTCNH7ID
          READ      CONTROLF,HUND20;*132,PTCNUNDW,*137,PTCNHEFR:
                                    *142,PTCNHETO,*147,PTCNOVRW,*152,PTCNOBES
..        READ      CONTROLF,HUND20;*158,PTCNUNET,*243,PTCNSMSN
          READ      CONTROLF,HUND20;*243,PTCNSMSN
          READ      CONTROLF,HUND25;*93,PTCNNSSI
          READ      CONTROLF,SIXTY9;*43,MHCNAUDA,MHCNAUDB,*69,MHCNUSE
          READ      CONTROLF,HUND22;*3,EMCNLODD,*6,EMCNMAPH,*8,EMCNURSE:
                                    *12,EMCNPBSD,*17,EMCNALEX,*27,EMCNHISA:
                                    *51,EMCPRCMP
          READ      CONTROLF,HUND24;*147,PTCNSUID,*222,PTCNUESF
          READ      CONTROLF,HUND28;*105,PTCNUABF,*226,PTCNNMPR
.
          IF        MHCNAUDA=0
            OPEN      MEHAUVI1,"mehauvi1"  * audits for mehvi1af
          ENDIF
.
          IF        MHCNAUDB=0
            OPEN      MEHAUDS1,"mehauds1"  * audits for mehds1af
          ENDIF
.
          PACK      DIM8,CCC,CYY,CMM,CDD
          REP       " 0",DIM8
          MOVE      DIM8,CURRDATE 
          MATCH     PTCNI10D,DIM8
          IF        !@LESS
              MOVE      ONE,EMICFLAG       * Using ICD10
          ELSE
              MOVE      ZERO,EMICFLAG      * Using ICD9
          ENDIF
.
          IF        IBCNMHOS=1
            OPEN      MLTCODA1,"mltcodaf"
....        OPEN      MLTCODA2,"mltcodaf"
          ENDIF
.
          MATCH     "1",PTCNNWCA
          IF        @EQUAL
            OPEN      PMSAUDCE,"pmsaudce"
            OPEN      PMSAUDC2,"pmsaudce"
          ENDIF
.
          IF        EMCNICDF=0
.******************************************** start of changes         *I-63036
....          OPEN      PATICDD1,"paticddf"
....          OPEN      PATICDD2,"paticddf"
....          OPEN      PATI10D1,"pati10df"
....          OPEN      PATI10D2,"pati10df"
              CALL      OPICD1              * Open ICD10 V1-4 Dis file
              CALL      OPICD2
              CALL      OPICO1              * Open ICD10 V1-4 Op files
              CALL      OPICO2
.********************************************   end of changes         *I-63036
          ELSE
              OPEN      EMRICDA1,"emricdaf"
              OPEN      EMRICDA2,"emricdaf"
              OPEN      EMRICDA3,"emricdaf"
          ENDIF
.
          OPEN      EMRICDA1,"emricdaf"
.
.
          CALL      CRMAUD
.
          BRANCH    CAUDM,INIT1000
          OPEN      PATAM1A1,"patam1af"
.
INIT1000  BRANCH    CAUDK,INIT2000
          OPEN      PATAK1A1,"patak1af"
.
INIT2000  CALL      OPSU0000                * Open Surname Files
.
          MATCH     "1",PTCNH7VP
          IF        @EQUAL
            OPEN      IBAPOLA1,"ibapolaf"     * visit based HL7 PMI triggers
          ENDIF
.
          CALL      TFILENAM
          MOVE      TFILNAME,COMFILNB
          CALL      TFILENAM
          MOVE      TFILNAME,COMFILNC
          CALL      TFILENAM
          MOVE      TFILNAME,COMFILND
          CALL      TFILENAM
          MOVE      TFILNAME,COMFILNM
          CALL      TFILENAM
          MOVE      TFILNAME,COMFILNV
          CALL      TFILENAM
          MOVE      TFILNAME,PRECOMNM
          CALL      TFILENAM
          MOVE      TFILNAME,ADDCOMNM
          CALL      TFILENAM
          MOVE      TFILNAME,CFNAMEDP
          CALL      TFILENAM
          MOVE      TFILNAME,CONSFILN
.
          MOVE      ZERO,NOATTRIB
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATATRA1,"patatraf"
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ONE,NOATTRIB
          ENDIF
          OPEN      PATATRA3,"patatraf"
.
...  used in ABFAECCL (CHGAE000,AAECHRG)
          CALL      TFILENAM                * Get file name calculating Exponent
          MOVE      TFILNAME,FNAMEN
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,CCNLFILE
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,EXPCMTNM
.
          MOVE      ZERO,VISXDCIN
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      VISXDCA1,"visxdcaf"
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ONE,VISXDCIN
          ENDIF
.
          OPEN      EMRTHSA1,"emrthsaf"
....      OPEN      EMRTHSA2,"emrthsaf"
.
          READ      CONTROLF,HUND29;*61,PTCNWSIN,*71,PTCNOECW,*72,PTCNOECE
.
          MOVE      ONE,OECWINDC
          MATCH     "1",PTCNOECW
          IF         @EQUAL
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBOECA1,"weboecaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBOESA1,"weboesaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBELFA1,"webelfaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBELFA2,"webelfaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
          ENDIF
.
INIT9999  RETURN
.
.------------------------------------------------------------
. Open Outpatient files
.------------------------------------------------------------
OPNOUT00  PACK      CFNAME,CFILEPRE,FILBOKA6  * Get the name of the BOKA6 file
          OPEN      OUTBOKA6,CFNAME           * Open the file
.
OPNOUT99  RETURN

.------------------------------------------------------------
. Open Surname files
.------------------------------------------------------------
OPSU0000  OPEN      PATGSRN1,"patgsrnf"
....      OPEN      PATGSRN2,"patgsrnf"
....      OPEN      PATGSRN3,"patgsrnf"
....      OPEN      PATGSRN4,"patgsrnf"
OPSU9999  RETURN
.------------------------------------------------------------
. Clear Parameters                         Called by WEBRED00
.------------------------------------------------------------
CLRPAR00  MOVE      ZERO,PRECOMFL
          MOVE      ZERO,ADDCOMFL
.
          MOVE      SP70,DONTCHEC
          MOVE      ZERO,DIAGCMFL
          MOVE      SP70,WEBUSEID
          MOVE      SP70,POPREGSC
          MOVE      SP70,NEWLOCTN 
          MOVE      SP70,REPORTNO
          MOVE      SP70,CHKINJUR
          MOVE      ZERO,DSCHAUTP
          MOVE      Z70,LINKVIST
          MOVE      SP70,HEAINDIC
          MOVE      SP70,WAHINDIC
          MOVE      SP70,INVADMNO
          MOVE      SP70,VISDHOSP
          MOVE      ZERO,USEINVAD
.
          MOVE      SP70,REPORTNO
          MOVE      ZERO,PRAUPDFL
          MOVE      ZERO,REGSFLAG
          MOVE      SP70,TEMPLATE
          MOVE      SP70,ADMISSNO
          MOVE      SP70,URNUMBER
          MOVE      SP70,SMERGURN
          MOVE      SP70,DOCTCODE
          MOVE      SP70,FRSTNURS
          MOVE      SP70,FORMACTN 
          MOVE      SP70,UPDFLAG1
          MOVE      SP70,LOCKTYPE
          MOVE      SP70,UPDATEKY
          MOVE      SP70,UPDTTYPE
          MOVE      SP70,RECORDKY
          MOVE      ZERO,SAVEALIA
          MOVE      ZERO,NEXTPAGE
          MOVE      ZERO,MASTFLAG
          MOVE      ZERO,EMVISFLG
          MOVE      ZERO,MRGEFLAG
          MOVE      ZERO,STOREFLG
          MOVE      SP70,STATNCOD
          MOVE      SP70,STATNCD2
          MOVE      SP70,STATNCD3
          MOVE      SP70,STATNCD4
          MOVE      SP70,STATNCD5
          MOVE      SP70,STATNCD6
          MOVE      SP70,SETEMRCM
          MOVE      SP70,SETEMRCD
          MOVE      ZERO,CHGFLAG
          MOVE      SP70,PATFNAME
          MOVE      SP256,PASSWORD
          MOVE      SP70,SELECTCD
          MOVE      SP70,ALLOCTCD
          MOVE      SP256,USERNAME
          PACK      ACCESSAL,SP70,SP70,SP70,SP70
          MOVE      Z70,FRSTDOCT
          PACK      REDIREC1,SP70,SP70,SP70,SP70
          PACK      REDIRECT,SP70,SP70,SP70,SP70
          PACK      WEBTITLE,SP70,SP70
          MOVE      SP70,SELPRINT
          MOVE      SP70,LBLPRINT
          MOVE      SP70,LBLPRIN2
          MOVE      SP70,LBLPRIN3
          MOVE      SP70,FRMPRINT
          MOVE      SP70,FRMPRNT2
          MOVE      SP70,FRMPRNT3
          MOVE      SP70,FRMPRNT4
          MOVE      SP70,FRMPRNT5
          MOVE      SP70,FRMPRNT6
          MOVE      SP70,ADMISSNO
          MOVE      SP70,LABELTYP
          MOVE      SP70,LABELTY2
          MOVE      SP70,LABELTY3
          MOVE      ZERO,NOLABEL
          MOVE      ZERO,NOLABEL2
          MOVE      ZERO,NOLABEL3
          MOVE      ZERO,NOLABELF
          MOVE      ZERO,NOLABLF2
          MOVE      ZERO,NOLABLF3
          MOVE      ZERO,NOLABLF4
          MOVE      ZERO,NOLABLF5
          MOVE      ZERO,NOLABLF6
          MOVE      SP70,SRCHSNAM
          MOVE      SP70,SRCHGNAM
          MOVE      SP70,SRCHPSEX
          MOVE      SP70,SRCHPAGE
          MOVE      SP70,SRCHPDOB
          MOVE      SP70,CLAIMTYP
          MOVE      SP70,PRFAFLAG
          MOVE      SP70,REGEXSTM
          MOVE      SP70,NEWSTAND
          MOVE      SP70,MEDNOTES
          MOVE      SP70,SUPRFLAG
          MOVE      ZERO,SHOWFLAG
          MOVE      ZERO,SHOWMAND
          MOVE      SP70,TRIREDIR
          MOVE      Z70,TRIGUSER
          MOVE      SP70,CONFDEMO
          MOVE      Z70,EMRCN029
          MOVE      ZERO,WITHTIME
          MOVE      SP70,ACCAUDCK
          MOVE      SP70,LOCACODE
          MOVE      SP70,LOCADATE
          MOVE      SP70,LOCATIME
          MOVE      SP70,NLOCACOD
          MOVE      SP70,NLOCADAT
          MOVE      SP70,NLOCATIM
.
          CALL      CLEMRVIS
          CALL      CLVISLST
.
          MOVE      SP70,OBDET001
          MOVE      SP70,OBDET002
          MOVE      Z70,OBDET003
          MOVE      Z70,OBDET004
          MOVE      Z70,OBDET005
          MOVE      Z70,OBDET006
          MOVE      Z70,OBDET007
          MOVE      Z70,OBDET008
          MOVE      Z70,OBDET009
          MOVE      Z70,OBDET010
          MOVE      Z70,OBDET011
          MOVE      Z70,OBDET012
          MOVE      Z70,OBDET013
          MOVE      Z70,OBDET014
          MOVE      Z70,OBDET015
          MOVE      Z70,OBDET016
          MOVE      Z70,OBDET017
          MOVE      Z70,OBDET018
          MOVE      Z70,OBDET019
          MOVE      Z70,OBDET020
          MOVE      Z70,OBDET021
          MOVE      Z70,OBDET022
          MOVE      Z70,OBDET023
          MOVE      Z70,OBDET024
          MOVE      Z70,OBDET025
          MOVE      Z70,OBDET026
          MOVE      Z70,OBDET027
          MOVE      Z70,OBDET028
          MOVE      Z70,OBDET029
          MOVE      Z70,OBDET030
          MOVE      Z70,OBDET031
          MOVE      Z70,OBDET032
          MOVE      Z70,OBDET033
          MOVE      Z70,OBDET034
          MOVE      Z70,OBDET035
          MOVE      Z70,OBDET036
          MOVE      Z70,OBDET037
          MOVE      Z70,OBDET038
          MOVE      Z70,OBDET039
          MOVE      Z70,OBDET040
          MOVE      Z70,OBDET041      
          MOVE      Z70,OBDET042      
.
          PACK      PTPRA001,Z70,Z70
          MOVE      Z70,PTPRA002
          MOVE      Z70,PTPRA003
          MOVE      Z70,PTPRA004
          MOVE      Z70,PTPRA005
          MOVE      Z70,PTPRA006
          MOVE      Z70,PTPRA007
          MOVE      Z70,PTPRA008
          MOVE      Z70,PTPRA009
          MOVE      Z70,PTPRA010
.
          MOVE      Z70,PTMAS001
          MOVE      Z70,PTMAS002
          MOVE      Z70,PTMAS003
          MOVE      Z70,PTMAS004
          MOVE      Z70,PTMAS005
          MOVE      Z70,PTMAS006
          MOVE      Z70,PTMAS007
          MOVE      Z70,PTMAS008
          MOVE      Z70,PTMAS009
          MOVE      Z70,PTMAS010
          MOVE      Z70,PTMAS011
          MOVE      Z70,PTMAS012
          MOVE      Z70,PTMAS013
          MOVE      Z70,PTMAS014
          MOVE      Z70,PTMAS015
          MOVE      Z70,PTMAS016
          MOVE      Z70,PTMAS017
          MOVE      Z70,PTMAS018
          MOVE      Z70,PTMAS019
          MOVE      Z70,PTMAS020
          MOVE      Z70,PTMAS021
          MOVE      Z70,PTMAS022
          MOVE      Z70,PTMAS023
          MOVE      Z70,PTMAS024
          MOVE      Z70,PTMAS025
          MOVE      Z70,PTMAS026
          MOVE      Z70,PTMAS027
          MOVE      Z70,PTMAS028
          MOVE      Z70,PTMAS029
          MOVE      Z70,PTMAS030
          MOVE      Z70,PTMAS031
          MOVE      Z70,PTMAS032
          MOVE      Z70,PTMAS033
          MOVE      Z70,PTMAS034
          MOVE      Z70,PTMAS035
          MOVE      Z70,PTMAS036
          MOVE      Z70,PTMAS037
          MOVE      Z70,PTMAS038
          MOVE      Z70,PTMAS039
          MOVE      Z70,PTMAS040
          MOVE      Z70,PTMAS041
          MOVE      Z70,PTMAS042
          MOVE      Z70,PTMAS043
          MOVE      Z70,PTMAS044
          MOVE      Z70,PTMAS045
          MOVE      Z70,PTMAS046
          MOVE      Z70,PTMAS047
          MOVE      Z70,PTMAS048
          MOVE      Z70,PTMAS049
          MOVE      Z70,PTMAS050
          MOVE      Z70,PTMAS051
          MOVE      Z70,PTMAS052
          MOVE      Z70,PTMAS053
          MOVE      Z70,PTMAS054
          MOVE      Z70,PTMAS055
          MOVE      Z70,PTMAS056
          MOVE      Z70,PTMAS057
          MOVE      Z70,PTMAS058
          MOVE      Z70,PTMAS059
          MOVE      Z70,PTMAS060
          MOVE      Z70,PTMAS061
          MOVE      Z70,PTMAS062
          MOVE      Z70,PTMAS063
          MOVE      Z70,PTMAS064
          MOVE      Z70,PTMAS065
          MOVE      Z70,PTMAS066
          MOVE      Z70,PTMAS067
          MOVE      Z70,PTMAS068
          MOVE      Z70,PTMAS069
          MOVE      Z70,PTMAS070
          MOVE      Z70,PTMAS081
          MOVE      Z70,PTMAS082
          MOVE      Z70,PTMAS083
          MOVE      Z70,PTMAS084
          MOVE      Z70,PTMAS085
          MOVE      Z70,PTMAS086
.
          MOVE      Z70,PTCLM001
          MOVE      Z70,PTCLM002
          MOVE      Z70,PTCLM003
          MOVE      Z70,PTCLM004
          MOVE      Z70,PTCLM005
          MOVE      Z70,PTCLM006
          MOVE      Z70,PTCLM007
          MOVE      ZERO,PTCLM008
          MOVE      Z70,PTCLM009
          MOVE      Z70,PTCLM010
          MOVE      Z70,PTCLM011
          MOVE      Z70,PTCLM012
          MOVE      Z70,PTCLM013
          MOVE      Z70,PTCLM014
          MOVE      Z70,PTCLM015
          MOVE      Z70,PTCLM016
          MOVE      Z70,PTCLM017
          MOVE      Z70,PTCLM018
          MOVE      Z70,PTCLM019
          MOVE      ZERO,PTCLM020
          MOVE      Z70,PTCLM021
          MOVE      Z70,PTCLM022
          MOVE      Z70,PTCLM023
          MOVE      Z70,PTCLM024
          MOVE      Z70,PTCLM025
          MOVE      Z70,PTCLM026
          MOVE      Z70,PTCLM027
          MOVE      Z70,PTCLM028
          MOVE      Z70,PTCLM029
          MOVE      Z70,PTCLM030
          MOVE      Z70,PTCLM031
          MOVE      Z70,PTCLM032
          MOVE      Z70,PTCLM033
          MOVE      Z70,PTCLM034
          MOVE      Z70,PTCLM035
          MOVE      Z70,PTCLM036
          MOVE      Z70,PTCLM037
          MOVE      Z70,PTCLM038
          MOVE      Z70,PTCLM083
.
          MOVE      SP70,PTELF001
          MOVE      SP70,PTELF002
          MOVE      SP70,PTELF003
          MOVE      SP70,PTELF004
          MOVE      SP70,PTELF005
          MOVE      SP70,PTELF006
          MOVE      SP70,PTELF007
          MOVE      SP70,PTELF008
          MOVE      SP70,PTELF009
          MOVE      SP70,PTELF010
          MOVE      SP70,PTELF011
          MOVE      SP70,PTELF012
          MOVE      SP70,PTELF013
          MOVE      SP70,PTELF014
          MOVE      SP70,PTELF015
          MOVE      SP70,PTELF016
          MOVE      SP70,PTELF017
          MOVE      SP70,PTELF018
          MOVE      SP70,PTELF019
          MOVE      SP70,PTELF020
          MOVE      SP70,PTELF021
          MOVE      SP70,PTELF022
          MOVE      SP70,PTELF023
          MOVE      SP70,PTELF024
          MOVE      SP70,PTELF025
          MOVE      SP70,PTELF026
          MOVE      SP70,PTELF027
.
          MOVE      SP70,PTELF028
          MOVE      SP70,PTELF029
          MOVE      SP70,PTELF030
          MOVE      SP70,PTELF031
          MOVE      SP70,PTELF032
.
          MOVE      SP70,PTELF033
          MOVE      SP70,PTELF034
.
          MOVE      SP70,EMDCT001  
          MOVE      SP70,EMDCT002
          MOVE      SP70,EMDCT003
          MOVE      SP70,EMDCT004
          MOVE      SP70,EMDCT005
          MOVE      SP70,EMDCT006
          MOVE      SP70,EMDCT007
          MOVE      SP70,EMDCT008
          MOVE      SP70,EMDCT009
.
          MOVE      Z70,EMVIS001
          MOVE      Z70,EMVIS002
          MOVE      Z70,EMVIS003
          MOVE      Z70,EMVIS004
          MOVE      Z70,EMVIS005
          MOVE      Z70,EMVIS006
          MOVE      Z70,EMVIS007
          MOVE      Z70,EMVIS008
          MOVE      Z70,EMVIS009
          MOVE      Z70,EMVIS010
          MOVE      Z70,EMVIS011
          MOVE      Z70,EMVIS012
          MOVE      Z70,EMVIS013
          MOVE      Z70,EMVIS014
          MOVE      Z70,EMVIS015
          MOVE      Z70,EMVIS016
          MOVE      Z70,EMVIS017
          MOVE      Z70,EMVIS018
          MOVE      Z70,EMVIS019
          MOVE      Z70,EMVIS020
          MOVE      Z70,EMVIS021
          MOVE      Z70,EMVIS022
          MOVE      Z70,EMVIS023
          MOVE      Z70,EMVIS024
          MOVE      Z70,EMVIS025
          MOVE      Z70,EMVIS026
          MOVE      Z70,EMVIS027
          MOVE      Z70,EMVIS028
          MOVE      Z70,EMVIS029
          MOVE      Z70,EMVIS030
          MOVE      Z70,EMVIS031
          MOVE      Z70,EMVIS032
          MOVE      Z70,EMVIS033
          MOVE      Z70,EMVIS034
          MOVE      Z70,EMVIS035
          MOVE      Z70,EMVIS036
          MOVE      Z70,EMVIS037
          MOVE      Z70,EMVIS038
          MOVE      Z70,EMVIS039
          MOVE      Z70,EMVIS040
          MOVE      Z70,EMVIS041
          MOVE      Z70,EMVIS042
          MOVE      Z70,EMVIS043
          MOVE      Z70,EMVIS044
          MOVE      Z70,EMVIS045
          MOVE      Z70,EMVIS046
          MOVE      Z70,EMVIS047
          MOVE      Z70,EMVIS048
          MOVE      Z70,EMVIS049
          MOVE      Z70,EMVIS050
          MOVE      Z70,EMVIS051
          MOVE      Z70,EMVIS052
          MOVE      Z70,EMVIS053
          MOVE      Z70,EMVIS054
          MOVE      Z70,EMVIS055
          MOVE      Z70,EMVIS056
          MOVE      Z70,EMVIS057
          MOVE      Z70,EMVIS058
          MOVE      Z70,EMVIS059
          MOVE      Z70,EMVIS060
          MOVE      Z70,EMVIS061
          MOVE      Z70,EMVIS062
          MOVE      Z70,EMVIS063
          MOVE      Z70,EMVIS064
          MOVE      Z70,EMVIS065
          MOVE      Z70,EMVIS066
          MOVE      Z70,EMVIS067
          MOVE      Z70,EMVIS068
          MOVE      Z70,EMVIS069
          MOVE      Z70,EMVIS070
          MOVE      Z70,EMVIS071
          MOVE      Z70,EMVIS072
          MOVE      Z70,EMVIS073
          MOVE      Z70,EMVIS074
          MOVE      Z70,EMVIS075
          MOVE      Z70,EMVIS076
          MOVE      Z70,EMVIS077
          MOVE      Z70,EMVIS078
          MOVE      Z70,EMVIS079
          MOVE      Z70,EMVIS080
          MOVE      Z70,EMVIS081
          MOVE      Z70,EMVIS082
          MOVE      Z70,EMVIS083
          MOVE      Z70,EMVIS084
          MOVE      Z70,EMVIS085
          MOVE      Z70,EMVIS086
          MOVE      Z70,EMVIS087
          MOVE      Z70,EMVIS088
          MOVE      Z70,EMVIS089
          MOVE      Z70,EMVIS090
          MOVE      Z70,EMVIS091
          MOVE      ZERO,EMVIS092
          MOVE      Z70,EMVIS093
          MOVE      ZERO,EMVIS094
          MOVE      Z70,EMVIS095
          MOVE      Z70,EMVIS096
          MOVE      ZERO,EMVIS097
          MOVE      ZERO,EMVIS098
          MOVE      ZERO,EMVIS099
          MOVE      ZERO,EMVIS100
          MOVE      Z70,EMVIS101
          MOVE      Z70,EMVIS102
          MOVE      Z70,EMVIS103
          MOVE      Z70,EMVIS104
          MOVE      Z70,EMVIS105
          MOVE      Z70,EMVIS106
          MOVE      Z70,EMVIS107
          MOVE      Z70,EMVIS108
          MOVE      Z70,EMVIS109
          MOVE      Z70,EMVIS110
          MOVE      Z70,EMVIS111
          MOVE      Z70,EMVIS112
          MOVE      Z70,EMVIS113
          MOVE      ZERO,EMVIS114
          MOVE      Z70,EMVIS115
          MOVE      Z70,EMVIS116
          MOVE      Z70,EMVIS117
          MOVE      SP70,EMVIS118
          MOVE      Z70,EMVIS119
          MOVE      Z70,EMVIS120
          MOVE      Z70,EMVIS121
          MOVE      Z70,EMVIS122
          MOVE      Z70,EMVIS123
          MOVE      Z70,EMVIS124
          MOVE      Z70,EMVIS125
          MOVE      Z70,EMVIS126
          MOVE      Z70,EMVIS127
          MOVE      Z70,EMVIS128
          MOVE      Z70,EMVIS129
          MOVE      Z70,EMVIS130
          MOVE      Z70,EMVIS131 
          MOVE      Z70,EMVIS132 
          MOVE      Z70,EMVIS133 
          MOVE      Z70,EMVIS134 
          MOVE      Z70,EMVIS135 
          MOVE      Z70,EMVIS136
          MOVE      Z70,EMVIS137
          MOVE      Z70,EMVIS138
          MOVE      Z70,EMVIS139
          MOVE      Z70,EMVIS140
          MOVE      Z70,EMVIS141 
          MOVE      Z70,EMVIS142 
          MOVE      Z70,EMVIS143 
          MOVE      Z70,EMVIS144 
          MOVE      Z70,EMVIS145 
          MOVE      ZERO,EMVIS146
          MOVE      ZERO,EMVIS147
          MOVE      ZERO,EMVIS148
          MOVE      Z70,EMVIS149
          MOVE      Z70,EMVIS150
          MOVE      Z70,EMVIS151
          MOVE      Z70,EMVIS152
          MOVE      Z70,EMVIS153
          MOVE      Z70,EMVIS154
          MOVE      Z70,EMVIS155
          MOVE      Z70,EMVIS156
          MOVE      Z70,EMVIS157
          MOVE      Z70,EMVIS158
          MOVE      Z70,EMVIS159
          MOVE      Z70,EMVIS160
          MOVE      Z70,EMVIS161
          MOVE      Z70,EMVIS162
          MOVE      Z70,EMVIS163
          MOVE      Z70,EMVIS164
          MOVE      Z70,EMVIS165
          MOVE      Z70,EMVIS166
          MOVE      Z70,EMVIS167
          MOVE      Z70,EMVIS168
          MOVE      Z70,EMVIS169
          MOVE      Z70,EMVIS170
          MOVE      Z70,EMVIS171
          MOVE      Z70,EMVIS172
          MOVE      Z70,EMVIS173
          MOVE      Z70,EMVIS174
          MOVE      Z70,EMVIS175
          MOVE      Z70,EMVIS176
          MOVE      Z70,EMVIS177
          MOVE      Z70,EMVIS178
          MOVE      Z70,EMVIS179
          MOVE      Z70,EMVIS180
          MOVE      Z70,EMVIS181
          MOVE      Z70,EMVIS182
.
          MOVE      SP70,EMEXP001
          MOVE      SP70,EMEXP002
          MOVE      SP70,EMEXP003
          MOVE      SP70,EMEXP004
          MOVE      SP70,EMEXP005
          MOVE      SP70,EMEXP006
          MOVE      SP70,EMEXP007
          MOVE      SP70,EMEXP008
          MOVE      SP70,EMEXP009
          MOVE      SP70,EMEXP010
          MOVE      SP70,EMEXP011
          MOVE      SP70,EMEXP012
          MOVE      SP70,EMEXP013
          MOVE      SP70,EMEXP014
          MOVE      SP70,EMEXP015
          MOVE      SP70,EMEXP016
          MOVE      SP70,EMEXP017
          MOVE      SP70,EMEXP018
          MOVE      SP70,EMEXP019
          MOVE      SP70,EMEXP020
          MOVE      SP70,EMEXP021
          MOVE      SP70,EMEXP022
          MOVE      SP70,EMEXP023
          MOVE      SP70,EMEXP024
          MOVE      SP70,EMEXP025
          MOVE      SP70,EMEXP026
          MOVE      SP70,EMEXP027
          MOVE      SP70,EMEXP028
          MOVE      SP70,EMEXP029
          MOVE      SP70,EMEXP030
          MOVE      SP70,EMEXP031
          MOVE      SP70,EMEXP032
          MOVE      SP70,EMEXP033
          MOVE      SP70,EMEXP034
          MOVE      SP70,EMEXP035
          MOVE      SP70,EMEXP036
          MOVE      SP70,EMEXP037
.
          MOVE      SP70,EMEXPSIT
          MOVE      ZERO,PCOMDEFT
.
          MOVE      SP70,EMVCD001
          MOVE      SP70,EMVCD002
          MOVE      SP70,EMVCD003
          MOVE      SP70,EMVCD004
          MOVE      SP70,EMVCD005
          MOVE      SP70,EMVCD006
          MOVE      SP70,EMVCD007
          MOVE      SP70,EMVCD008
          MOVE      SP70,EMVCD009
          MOVE      SP70,EMVCD010
          MOVE      SP70,EMVCD011
          MOVE      SP70,EMVCD012
          MOVE      SP70,EMVCD013
          MOVE      SP70,EMVCD014
          MOVE      SP70,EMVCD015
          MOVE      SP70,EMVCD016
          MOVE      SP70,EMVCD017
          MOVE      SP70,EMVCD018
          MOVE      ZERO,EMVCD019
          MOVE      ZERO,EMVCD020
          MOVE      ZERO,EMVCD021
          MOVE      ZERO,EMVCD022
          MOVE      SP70,EMVCD023
          MOVE      SP70,EMVCD024
          MOVE      SP70,EMVCD025
          MOVE      SP70,EMVCD026
          MOVE      SP70,EMVCD027
          MOVE      SP70,EMVCD028
          MOVE      SP70,EMVCD029
          MOVE      SP70,EMVCD030
          MOVE      SP70,EMVCD031
          MOVE      ZERO,EMVCD032
          PACK      EMVCD033,SP70,SP70
.
          MOVE      SP70,EMUNK001
          MOVE      SP70,EMUNK002
          MOVE      SP70,EMUNK003
          MOVE      SP70,EMUNK004
          MOVE      SP70,UNKPATUP
.
          MOVE      Z70,INJUR001
          MOVE      Z70,INJUR002
          MOVE      Z70,INJUR003
          MOVE      Z70,INJUR004
          MOVE      Z70,INJUR005
          MOVE      Z70,INJUR006
.
          MOVE      Z70,PTMSX001
          MOVE      Z70,PTMSX002
          MOVE      Z70,PTMSX003
          MOVE      Z70,PTMSX004
          MOVE      Z70,PTMSX005
          MOVE      Z70,PTMSX006
          MOVE      Z70,PTMSX007
          MOVE      Z70,PTMSX008
          MOVE      Z70,PTMSX009
          MOVE      Z70,PTMSX010
          MOVE      Z70,PTMSX011
          MOVE      Z70,PTMSX012
          MOVE      Z70,PTMSX013
          MOVE      Z70,PTMSX014
          MOVE      Z70,PTMSX015
          MOVE      Z70,PTMSX016
          MOVE      Z70,PTMSX017
          MOVE      Z70,PTMSX018
          MOVE      Z70,PTMSX019
          MOVE      Z70,PTMSX020
          MOVE      Z70,PTMSX021
          MOVE      Z70,PTMSX022
          MOVE      Z70,PTMSX023
          MOVE      Z70,PTMSX024
          MOVE      Z70,PTMSX025
          MOVE      Z70,PTMSX026
          MOVE      Z70,PTMSX027
          MOVE      Z70,PTMSX028
          MOVE      Z70,PTMSX029
          MOVE      Z70,PTMSX030
          MOVE      Z70,PTMSX031
          MOVE      Z70,PTMSX032
          MOVE      Z70,PTMSX033
          MOVE      Z70,PTMSX034
          MOVE      Z70,PTMSX035
          MOVE      Z70,PTMSX036
          MOVE      Z70,PTMSX037
          MOVE      Z70,PTMSX038
          MOVE      Z70,PTMSX039
          MOVE      Z70,PTMSX040
          MOVE      Z70,PTMSX041
          MOVE      Z70,PTMSX042
          MOVE      Z70,PTMSX043
          MOVE      Z70,PTMSX044
          MOVE      Z70,PTMSX045
          MOVE      Z70,PTMSX046
          MOVE      Z70,PTMSX047
          MOVE      Z70,PTMSX048
          MOVE      Z70,PTMSX049
          MOVE      Z70,PTMSX050
          MOVE      Z70,PTMSX051
.
          CALL      CLPMSVX1
          MOVE      SP70,DOCTDATE
          MOVE      SP70,DOCTTIME
          MOVE      SP70,NURSDATE
          MOVE      SP70,NURSTIME
          MOVE      ZERO,MAPVFLAG
.
          MOVE      Z70,SAVEDATE
          MOVE      Z70,SAVETIME
          MOVE      ZERO,PREVADDR
          MOVE      ZERO,CALCWAIT
          MOVE      Z70,PMSVX010
          MOVE      Z70,PMSVX045
          MOVE      Z70,PMSVX075
          MOVE      Z70,PMSVX079
          MOVE      Z70,PMSVX091
          MOVE      Z70,PMSVX112
          MOVE      Z70,PMSVX122
          MOVE      Z70,PMSVX125
          MOVE      Z70,PMSVX128
          MOVE      Z70,PMSVX129
          MOVE      Z70,PMSVX135
          MOVE      Z70,PMSVX141
          MOVE      Z70,PMSVX142
          MOVE      SP70,HISTTYPE
          MOVE      ZERO,WARCOUNT
          MOVE      ZERO,NOTELOCN
          MOVE      ZERO,REGIFLAG
          MOVE      SP70,NOTETYPE
          MOVE      ZERO,PMI2FLAG
.
          MOVE      ONE,COUNTER
          WHILE     COUNTER <= 12
            PACK      WEBWARNG[COUNTER],SP70,SP70
            ADD       ONE,COUNTER
          DO
          MOVE      ZERO,COUNTER
.
          PACK      PMRES001,Z70
          PACK      PMRES002,Z70
          PACK      PMRES003,Z70
          PACK      PMRES004,Z70
          PACK      PMRES005,Z70
.
          PACK      UPDFIELD,Z70
          PACK      UPDFLD01,Z70
          PACK      UPDFLD02,Z70
          PACK      UPDVALUE,Z70
          PACK      UPDVAL01,SP70
          PACK      UPDVAL02,SP70
          PACK      NEWVALUE,Z70
          PACK      NEWVAL01,SP70
          PACK      NEWVAL02,SP70
          PACK      REASONFC,Z70
          PACK      REASFC01,Z70
          PACK      REASFC02,Z70
          MOVE      SP70,UPDATPMI
.
          CALL      CVPMI000            * clear parameter for PMI Extension
.
          CALL      CLRCLM00            * Clear cliam code file vars
.          
          CALL      CPAR0000            * move Z70 to cgi variables 
.                                         other clinic variables
.
          CALL      CPPMEX00
.
          MOVE      SP70,DISPT001
          MOVE      SP70,DISPT002
.
          MOVE      SP70,PRECINWA
.
          MOVE      ZERO,CABCPYTW
.
          CALL      CPVSCO00
.
          MOVE      SP70,ISEDLITE
          MOVE      SP70,REASONHO
.
          CALL      CLPATATR
.
          MOVE      ZERO,UPDMHDSC      * Update MH patient discharge
          MOVE      SP70,NEWDOCTR
.
          MOVE      SP70,EACINDCT
.
          CALL      CLRVXD00
          MOVE      SP70,NOSDR001
          MOVE      SP70,WDWPR001
          MOVE      SP70,WLDWC001
          MOVE      SP70,BIREQ001
          MOVE      SP70,ENTALCDT
.
          MOVE      SP70,HEAAMBIN
.
          MOVE      SP70,SJOGAUDT
          MOVE      SP70,SJOGAUDI
          MOVE      SP70,HEAEDFLG
          MOVE      ZERO,SJOGSUMD
          MOVE      SP70,ALIASSTS
.
          CALL      CLRVCM00           * Create comments temp file
.
          MOVE      SP70,SAVELOCN      * clear saved location
          MOVE      Z70,TRNSFSRC
          MOVE      SP70,TELECNTR      * clear Telehealth record counter
          MOVE      SP70,TELESITE      * clear Telehealth Emergency Site Code
          MOVE      SP70,TELELOCN      * clear Telehealth Location
          MOVE      ZERO,ETSVISFL      * clear Telehealth (ETS) Visit Flag
.
          MOVE      SP70,OECCHBOX
          MOVE      ZERO,EXPCMFLG
          MOVE      ZERO,EXPCMLIN
          MOVE      ZERO,DEFTVIEW
          MOVE      ZERO,SVMGCMMT
          PACK      DISP200,SP70,SP70,SP70,SP70
.
CLRPAR99  RETURN
+
.------------------------------------------------------------
. Set Parameters                           Called by WEBRED00
.------------------------------------------------------------
SETPAR00  MATCH     "reportno=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REPORTNO
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "template=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,TEMPLATE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "admissno=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,ADMISSNO
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "urnumber=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,URNUMBER
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "invadmno=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,INVADMNO
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "useinvad=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,USEINVAD
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "formactn=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,FORMACTN
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updflag1=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,UPDFLAG1
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "locktype=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,LOCKTYPE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "chkinjur=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,CHKINJUR
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "dontchec=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,DONTCHEC
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "popregsc=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,POPREGSC
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updttype=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,UPDTTYPE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updateky=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,UPDATEKY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emrcn029=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMRCN029
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nextpage=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,NEXTPAGE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "redirect=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REDIRECT
            SQUEEZE   REDIRECT
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "regsflag=",QRYNAME
          IF        @EQUAL
            SQUEEZE   QRYDATA
            MOVE      QRYDATA,REGSFLAG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emdct",QRYNAME
          IF        @EQUAL
            CALL      EMDCT000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvis",QRYNAME
          IF        @EQUAL
            CALL      EMVIS000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "ptpra",QRYNAME
          IF        @EQUAL
            CALL      SPPRA000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emdla001=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMDLA001 
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emdla002=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMDLA002 
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "ptmas",QRYNAME
          IF        @EQUAL
            CALL      SPMAS000
            COMPARE   ZERO,EXIT
            GOTO      SETPAR99 IF EQUAL
          ENDIF
.
          MATCH     "ptmsx",QRYNAME
          IF        @EQUAL
            CALL      SPMSX000
            COMPARE   ZERO,EXIT
            GOTO      SETPAR99 IF EQUAL
          ENDIF
.
          MATCH     "pmpxi",QRYNAME
          IF        @EQUAL
            CALL      SVPMI000
            COMPARE   ZERO,EXIT
            IF        @EQUAL
              MOVE      ONE,PMI2FLAG
              GOTO      SETPAR99
            ENDIF
          ENDIF
.
          MATCH     "chckname=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,CHCKNAME
            GOTO      SETPAR99 
          ENDIF
.
          MATCH     "savealia=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SAVEALIA
            GOTO      SETPAR99 
          ENDIF
.
          MATCH     "doctcode=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,DOCTCODE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "frstnurs=",QRYNAME
          IF        @EQUAL
            PACK      FRSTNURS,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "username=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,USERNAME
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "accessal=",QRYNAME
          IF        @EQUAL
            PACK      ACCESSAL,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "password=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PASSWORD
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "showflag=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SHOWFLAG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "mapvflag=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,MAPVFLAG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "showmand=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SHOWMAND
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "alloctcd=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,ALLOCTCD
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "selectcd=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SELECTCD
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "visitlst=",QRYNAME
          IF        @EQUAL
            ADD       ONE,VISITCNT
            MOVE      QRYDATA,VISITLST[VISITCNT]
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "injur",QRYNAME
          IF        @EQUAL
            CALL      INJUR000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "srchsnam=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SRCHSNAM
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "srchgnam=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SRCHGNAM
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "srchpdob=",QRYNAME
          IF        @EQUAL
            MATCH     SP70,QRYDATA
            GOTO      SETPAR99 IF EQUAL
            GOTO      SETPAR99 IF EOS
.
            UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00              * Set CMON from MTHNAM3
            PACK      SRCHPDOB,CCENT,CYEAR,CMON,CDAY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "srchpage=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SRCHPAGE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "srchpsex=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SRCHPSEX
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nolabels=",QRYNAME
          IF        @EQUAL
            SQUEEZE   QRYDATA
            MOVE      QRYDATA,NOLABEL
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nolabel2=",QRYNAME
          IF        @EQUAL
            SQUEEZE   QRYDATA
            MOVE      QRYDATA,NOLABEL2
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nolabel3=",QRYNAME                         *T0852803
          IF        @EQUAL
            SQUEEZE   QRYDATA
            MOVE      QRYDATA,NOLABEL3
            GOTO      SETPAR99
          ENDIF

          MATCH     "nolabelf=",QRYNAME
          IF        @EQUAL
            SQUEEZE   QRYDATA
            MOVE      QRYDATA,NOLABELF
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nolablf2=",QRYNAME
          IF        @EQUAL
            SQUEEZE   QRYDATA
            MOVE      QRYDATA,NOLABLF2
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nolablf3=",QRYNAME
          IF        @EQUAL
            SQUEEZE   QRYDATA
            MOVE      QRYDATA,NOLABLF3
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nolablf4=",QRYNAME
          IF        @EQUAL
            SQUEEZE   QRYDATA
            MOVE      QRYDATA,NOLABLF4
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nolablf5=",QRYNAME
          IF        @EQUAL
            SQUEEZE   QRYDATA
            MOVE      QRYDATA,NOLABLF5
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nolablf6=",QRYNAME
          IF        @EQUAL
            SQUEEZE   QRYDATA
            MOVE      QRYDATA,NOLABLF6
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "lblprint=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,LBLPRINT
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "lblprin2=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,LBLPRIN2
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "lblprin3=",QRYNAME                         *T0852803
          IF        @EQUAL
            MOVE      QRYDATA,LBLPRIN3
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "frmprint=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,FRMPRINT
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "frmprnt2=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,FRMPRNT2
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "frmprnt3=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,FRMPRNT3
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "frmprnt4=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,FRMPRNT4
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "frmprnt5=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,FRMPRNT5
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "frmprnt6=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,FRMPRNT6
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "selprint=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SELPRINT
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "statncod=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,STATNCOD
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "statncd2=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,STATNCD2
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "statncd3=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,STATNCD3
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "statncd4=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,STATNCD4
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "statncd5=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,STATNCD5
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "statncd6=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,STATNCD6
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updatpmi",QRYNAME
          IF        @EQUAL
            PACK      UPDATPMI,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "newloctn=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,NEWLOCTN
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "labeltyp=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,LABELTYP
            GOTO      SETPAR99
          ENDIF
          MATCH     "labelty2=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,LABELTY2
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "labelty3=",QRYNAME                         *T0852803
          IF        @EQUAL
            MOVE      QRYDATA,LABELTY3
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "ptclm",QRYNAME
          IF        @EQUAL
            CALL      SPCLM000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmext",QRYNAME
          IF        @EQUAL
            CALL      SPPME000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "claimtyp=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,CLAIMTYP
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "regiflag=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REGIFLAG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "regexstm=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REGEXSTM
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "newstand=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,NEWSTAND
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvcd",QRYNAME
          IF        @EQUAL
            CALL      EMVCD000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emexpsit=",QRYNAME    * Expected Emergency Site Code
          IF        @EQUAL
            MOVE      QRYDATA,EMEXPSIT
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emexp",QRYNAME        * Expected Patients 
          IF        @EQUAL
            CALL      EMEXP000
            GOTO      SETPAR99
          ENDIF
.
         MATCH     "vicmt001",QRYNAME      * For Clinical
          IF        @EQUAL
            CALL      SETVCM00
            GOTO      SETPAR99
          ENDIF
.
         MATCH     "vicmt002",QRYNAME      * For Management
          IF        @EQUAL
            CALL      SETVCM00
            GOTO      SETPAR99
          ENDIF
.
         MATCH     "vicmt023",QRYNAME      * For Management
          IF        @EQUAL
            CALL      SETVCM00
            GOTO      SETPAR99
          ENDIF
.
         MATCH     "uniqpatid",QRYNAME      * Unique Patient ID
          IF        @EQUAL
            MOVE    QRYDATA,EMEXUNIQ
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "startkey=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,STARTKEY
            PACK      STARTKEY,STARTKEY,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "norecord=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,NORECORD
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "startnum=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,STARTNUM
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "locacode=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,LOCACODE
            PACK      LOCACODE,LOCACODE,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "getnotes=",QRYNAME
          IF        @EQUAL
            CALL      GETCOM00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "patnotes=",QRYNAME
          IF        @EQUAL
            CALL      GETPAT00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "notetype=",QRYNAME
          IF        @EQUAL
            PACK      NOTETYPE,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "visnotes=",QRYNAME
          IF        @EQUAL
            CALL      GETNOT00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "suprflag=",QRYNAME     * Flag for supervisor discharge
          IF        @EQUAL
            MOVE      QRYDATA,SUPRFLAG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "loadflag=",QRYNAME     * Flag for supervisor discharge
          IF        @EQUAL
            MOVE      QRYDATA,LOADFLAG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "prcom001=",QRYNAME     * presenting complaint comments
          IF        @EQUAL
            CALL      GETPRE00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "patdiag1=",QRYNAME     * diagnosis comments           
          IF        @EQUAL
            CALL      GETDIA00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "webuseid=",QRYNAME
          IF        @EQUAL
            PACK      WEBUSEID,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "doctdate=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,KEY11  * Change Date as format is (DD MON CCYY)
            PACK      KEY11,KEY11,SP70
            MATCH     SP70,KEY11
            IF        !@EQUAL
              UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
              CALL      SETMTH00
              PACK      DOCTDATE,CCENT,CYEAR,CMON,CDAY
              REP       " 0",DOCTDATE
            ENDIF
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "docttime=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,DOCTTIME
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nursdate=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,KEY11  * Change Date as format is (DD MON CCYY)
            PACK      KEY11,KEY11,SP70
            MATCH     SP70,KEY11
            IF        !@EQUAL
              UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
              CALL      SETMTH00
              PACK      NURSDATE,CCENT,CYEAR,CMON,CDAY
              REP       " 0",NURSDATE
            ENDIF
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nurstime=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,NURSTIME
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "prevaddr=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PREVADDR
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "calcwait=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,CALCWAIT
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx010=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX010
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx045=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX045
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx075=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX075
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx079=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX079
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx091=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX091
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx112=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX112
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx122=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX122
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx125=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX125
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx128=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX128
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx129=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX129
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx135=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX135
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmsvx141=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX141
            GOTO      SETPAR99
          ENDIF

.
          MATCH     "pmsvx142=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMSVX142
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "histtype=",QRYNAME
          IF        @EQUAL
            PACK      HISTTYPE,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "obdet",QRYNAME
          IF        @EQUAL
            CALL      SPODS000              * Set Observation parameters
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pcomdeft=",QRYNAME
          IF        @EQUAL
            PACK      PCOMDEFT,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "frstdoct=",QRYNAME
          IF        @EQUAL
            PACK      FRSTDOCT,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "triredir=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,TRIREDIR
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "triguser=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,TRIGUSER
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "dschautp=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,DSCHAUTP
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "linkvist=",QRYNAME
          IF        @EQUAL
            PACK      LINKVIST,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmres001=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMRES001
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmres002=",QRYNAME
          IF        @EQUAL
            MATCH     SP70,QRYDATA
            IF        @EQUAL|@EOS
              PACK      PMRES002,QRYDATA,SP70
              GOTO      SETPAR99
            ENDIF
.
            UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00              * Set CMON from MTHNAM3
            PACK      PMRES002,CCENT,CYEAR,CMON,CDAY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmres003=",QRYNAME
          IF        @EQUAL
            MATCH     SP70,QRYDATA
            GOTO      SETPAR99 IF EQUAL
            GOTO      SETPAR99 IF EOS
.
            UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00              * Set CMON from MTHNAM3
            PACK      PMRES003,CCENT,CYEAR,CMON,CDAY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmres004=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMRES004
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmres005=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PMRES005
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "prfaflag=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PRFAFLAG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emrcl",QRYNAME
          IF        @EQUAL
            CALL      SPAR0000
            GOTO      SETPAR99        
          ENDIF
.
          MATCH     "updfield=",QRYNAME
          IF        @EQUAL
            PACK      UPDFIELD,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updfld01=",QRYNAME
          IF        @EQUAL
            PACK      UPDFLD01,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updfld02=",QRYNAME
          IF        @EQUAL
            PACK      UPDFLD02,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "reasonfc=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REASONFC
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "reasfc01=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REASFC01
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "reasfc02=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REASFC02
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "heaindic=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,HEAINDIC
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "wahindic=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,WAHINDIC
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "pmcex",QRYNAME
          IF        @EQUAL
            CALL      SPPMC000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "dispt001",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,DISPT001
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "dispt002",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,DISPT002
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "precinwa",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PRECINWA
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "setemrcm",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SETEMRCM
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "setemrcd",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SETEMRCD
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emcommnt",QRYNAME
          IF        @EQUAL
            CALL      GETEMR00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emcomdis",QRYNAME
          IF        @EQUAL
            CALL      GETEMD00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "cabcpytw",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,CABCPYTW
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "vscdcatg",QRYNAME
          IF        @EQUAL
            CALL      SVSCAT00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "vscdcode",QRYNAME
          IF        @EQUAL
            CALL      SVSCOD00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "confdemo=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,CONFDEMO
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "isedlite=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,ISEDLITE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "reasonho=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REASONHO
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "faxitflg=",QRYNAME   *Cabrini only emrweb0201101.html
          IF        @EQUAL
            MOVE      QRYDATA,FAXITFLG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "mehds",QRYNAME
          IF        @EQUAL
            CALL      SETMDS00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updmhdsc=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,UPDMHDSC
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emunk001",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMUNK001
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emunk002",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMUNK002
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emunk003",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMUNK003
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emunk004",QRYNAME
          IF        @EQUAL
            MATCH     SP70,QRYDATA
            GOTO      SETPAR99 IF EQUAL
            GOTO      SETPAR99 IF EOS
.
            UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00              * Set CMON from MTHNAM3
            PACK      EMUNK004,CCENT,CYEAR,CMON,CDAY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "unkpatup",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,UNKPATUP
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "newdoctr=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,NEWDOCTR
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "adcom001=",QRYNAME     * Additional Comments
          IF        @EQUAL
            CALL      GETACM00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "eacindct=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EACINDCT
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nosdr001=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,NOSDR001
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "wdwpr001=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,WDWPR001
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "wldwc001=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,WLDWC001
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "bireq001=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,BIREQ001
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "entalcdt=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,ENTALCDT
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "heaambin=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,HEAAMBIN
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "sjogaudt=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SJOGAUDT
            PACK      SJOGAUDT,SJOGAUDT,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "sjogaudi=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SJOGAUDI
            PACK      SJOGAUDI,SJOGAUDI,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "aliassts=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,ALIASSTS
            PACK      ALIASSTS,ALIASSTS,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "heaedflg=",QRYNAME     * Healthscope (NBH) ED flag
          IF        @EQUAL
            MOVE      QRYDATA,HEAEDFLG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "trnsfsrc=",QRYNAME
          IF        @EQUAL
            PACK      TRNSFSRC,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "telecntr=",QRYNAME
          IF        @EQUAL
            PACK      TELECNTR,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "telesite=",QRYNAME
          IF        @EQUAL
            PACK      TELESITE,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "telelocn=",QRYNAME
          IF        @EQUAL
            PACK      TELELOCN,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "etsvisfl=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,ETSVISFL
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "oecchbox=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,OECCHBOX
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "ptelf",QRYNAME
          IF        @EQUAL
            CALL      STELF000              * Set free format oec fields
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "sjogsumd=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SJOGSUMD
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "exptcmnt=",QRYNAME
          IF        @EQUAL
            MOVE      ONE,EXPCMFLG
            CALL      GTEXCM00               * Read in expected pat comments
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "deftview=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,DEFTVIEW
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "svmgcmmt=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,SVMGCMMT
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "locadate",QRYNAME
          IF        @EQUAL
            MATCH     SP70,QRYDATA
            GOTO      SETPAR99 IF EQUAL
            GOTO      SETPAR99 IF EOS
.
            UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00              * Set CMON from MTHNAM3
            PACK      LOCADATE,CCENT,CYEAR,CMON,CDAY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "locatime=",QRYNAME
          IF        @EQUAL
            PACK      LOCATIME,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nlocacod=",QRYNAME
          IF        @EQUAL
            PACK      NLOCACOD,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nlocadat",QRYNAME
          IF        @EQUAL
            MATCH     SP70,QRYDATA
            GOTO      SETPAR99 IF EQUAL
            GOTO      SETPAR99 IF EOS
.
            UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00              * Set CMON from MTHNAM3
            PACK      NLOCADAT,CCENT,CYEAR,CMON,CDAY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nlocatim=",QRYNAME
          IF        @EQUAL
            PACK      NLOCATIM,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "heanbhfl=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,HEANBHFL
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "frmemrls=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,FRMEMRLS
            GOTO      SETPAR99
          ENDIF
.
SETPAR99  RETURN
.
.-----------------------------------------------------------------
. GTEXCM00 - Get Comments from input comment TextArea and
.            and write them to the temporary file for updating
.            to the database
.-----------------------------------------------------------------
.
GTEXCM00  PREP      EXPCMTAF,EXPCMTNM
          GOTO      GTEXCM20
.
GTEXCM10  READ      CONFFILE,SEQ;QRYNAME,QRYDATA
          GOTO      GTEXCM99 IF OVER
.
          MATCH     SP70,QRYNAME
          GOTO      GTEXCM80 IF NOT EQUAL
.
GTEXCM20  MOVE      QRYDATA,QRYDATA1
          SQUEEZE   QRYDATA1                 * skip the blank line
          GOTO      GTEXCM10 IF EOS
.
          ADD       ONE,EXPCMLIN
          WRITE     EXPCMTAF,SEQ;QRYDATA
          COMPARE   "999",EXPCMLIN
          GOTO      GTEXCM99 IF EQUAL
.
          GOTO      GTEXCM10
.
GTEXCM80  MOVE      ONE,TEXTAREA             * Flag for Next CGI Param
.
GTEXCM99  RETURN
+
.*******************************************************************************
.                 Get Presenting Complaint Comments
.*******************************************************************************
GETPRE00  PREP      PRECOMAF,PRECOMNM
          MOVE      ONE,F3
          WRITE     PRECOMAF,SEQ;QRYDATA
          MOVE      ONE,PRECOMFL
.
GETPRE10  READ      CONFFILE,SEQ;QRYNAME,QRYDATA
          GOTO      GETPRE90 IF OVER
          MATCH     SP70,QRYNAME
          GOTO      GETPRE80 IF NOT EQUAL
          MATCH     SP70,QRYDATA
          GOTO      GETPRE10 IF EQUAL
          GOTO      GETPRE10 IF EOS
          ADD       ONE,F3
          WRITE     PRECOMAF,SEQ;QRYDATA
          GOTO      GETPRE10
.
GETPRE80  MOVE      ONE,TEXTAREA                 * Flag for Next CGI Parameter
GETPRE90  MOVE      F3,LASTPRES
          OPEN      PRECOMAF,PRECOMNM
GETPRE99  RETURN
.
.*******************************************************************************
.                 Get Diagnosis Comments
.*******************************************************************************
GETDIA00  PREP      COMFILAF,COMFILNM
          MOVE      ONE,DIAGCMFL
          MOVE      ONE,F3
          WRITE     COMFILAF,SEQ;QRYDATA
.
GETDIA10  READ      CONFFILE,SEQ;QRYNAME,QRYDATA
          GOTO      GETDIA90 IF OVER
          MATCH     SP70,QRYNAME
          GOTO      GETDIA80 IF NOT EQUAL
          MATCH     SP70,QRYDATA
          GOTO      GETDIA10 IF EQUAL
          GOTO      GETDIA10 IF EOS
          ADD       ONE,F3
          WRITE     COMFILAF,SEQ;QRYDATA
          GOTO      GETDIA10
.
GETDIA80  MOVE      ONE,TEXTAREA                 * Flag for Next CGI Parameter
GETDIA90  MOVE      F3,LASTDIAG
          OPEN      COMFILAF,COMFILNM
GETDIA99  RETURN
.------------------------------------------------------------
.   Set Parameters for Person Responsible for Account
.------------------------------------------------------------
SPPRA000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          BRANCH    F3,SPPRA010,SPPRA020,SPPRA030,SPPRA040,SPPRA050:
                       SPPRA060,SPPRA070,SPPRA080,SPPRA090,SPPRA100
.
          MOVE      ONE,EXIT
          GOTO      SPPRA999
.
SPPRA010  MOVE      QRYDATA,PTPRA001
          GOTO      SPPRA900
.
SPPRA020  MOVE      QRYDATA,PTPRA002
          GOTO      SPPRA900
.
SPPRA030  MOVE      QRYDATA,PTPRA003
          GOTO      SPPRA900
.
SPPRA040  MOVE      QRYDATA,PTPRA004
          GOTO      SPPRA900
.
SPPRA050  MOVE      QRYDATA,PTPRA005
          GOTO      SPPRA900
.
SPPRA060  MOVE      QRYDATA,PTPRA006
          GOTO      SPPRA900
.
SPPRA070  MOVE      QRYDATA,PTPRA007
          GOTO      SPPRA900
.
SPPRA080  MOVE      QRYDATA,PTPRA008
          GOTO      SPPRA900
.
SPPRA090  MOVE      QRYDATA,PTPRA009
          GOTO      SPPRA900
.
SPPRA100  MOVE      QRYDATA,PTPRA010
          GOTO      SPPRA900
.
SPPRA900  MOVE      ONE,PRAUPDFL
.
SPPRA999  RETURN
.------------------------------------------------------------
.         INJUR000
.------------------------------------------------------------
INJUR000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          STORE     QRYDATA,F3,INJUR001,INJUR002,INJUR003:
                               INJUR004,INJUR005,INJUR006
.
INJUR999  RETURN
.------------------------------------------------------------
.   Stationary Codes Selection List        Called by MAIN0000 
.------------------------------------------------------------
SCODL000  PACK      KEY6,SP6
          CALL      RSIBTH1
SCODL100  CALL      RKIBTH1
          BRANCH    OVRCD,SCODL999
.
          IF        IBTHSTFM<>SEVEN           
                                            * (stationary type 2 = MR5)
            GOTO      SCODL100
          ENDIF
.
          LOAD      F1,IBTHSTFM,TWO,ONE,THREE,THREE,THREE,THREE,ONE
          COMPARE   F1,ONE                  * (Pvitype=1 which is A&E)
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=#"",IBTHSCOD,"#">":
                               IBTHDESC,"</option>";
          ENDIF
          GOTO      SCODL100

SCODL999  RETURN
.------------------------------------------------------------
.  Table of Visit Coding
.------------------------------------------------------------
TABCOD00  MOVE      ZERO,DIM1
          UNPACK    DIM127,KEY1,EMVCD002,KEY1,DIM1,DIM127
          PACK      KEY14,ADMISSNO,EMVCD002,SP70
          CALL      RSEMVCD1
TABCOD10  CALL      RKEMVCD1
          BRANCH    OVRCD,TABCOD99
          MATCH     ADMISSNO,EMVCVIST
          GOTO      TABCOD99 IF NOT EQUAL
          MATCH     EMVCD002,EMVCTYPE
          GOTO      TABCOD99 IF NOT EQUAL
.
          MATCH     "1",EMVCDELE            * Skip if delete flag is yes
          GOTO      TABCOD10 IF EQUAL
.
          MOVE      "0",EXIT
          CALL      LOKCOD00                * Lookup Code to get description
          BRANCH    EXIT,TABCOD99
          MOVE      CODEDESC,KEY40
          WRITE     HTMLFILE;KEY40;
          MATCH     "1",DIM1
          IF        @EQUAL
            WRITE     HTMLFILE;"<br>";
          ENDIF
          GOTO      TABCOD10
.     
TABCOD99  RETURN
.------------------------------------------------------------
.  Lookup Code to get description
.------------------------------------------------------------
LOKCOD00  BRANCH    EMVCCSYS,LOKCOD10,LOKCOD20,LOKCOD30,LOKCOD40,LOKCOD50:
                             LOKCOD60
.
.   User Defined
.
          GOTO      LOKCOD99
.            
LOKCOD10  PACK      KEY9,EMVCMNCD,SP70
          MOVE      EMVCDATE,ICDRDDTE                                  *I-63036
          CALL      RDPTICD1                             * was RDICD1  *C-63036
          IF        OVRCD=1
            MOVE      "Invalid Diagnoses",CODEDESC
            GOTO      LOKCOD99
          ENDIF
.
          MOVE      DDESC,CODEDESC
          GOTO      LOKCOD99
.
LOKCOD20  PACK      KEY9,EMVCMNCD,SP70
          MOVE      EMVCDATE,ICDRDDTE                                  *I-63036
          CALL      RDPTICO1                             * was RDICO1  *C-63036
          IF        OVRCD=1
            MOVE      "Invalid Procedure",CODEDESC
            GOTO      LOKCOD99
          ENDIF
.
          MOVE      ODESC,CODEDESC
          GOTO      LOKCOD99
.
LOKCOD30  PACK      KEY17,EMVCMNCD,SP70
          CALL      PATITMRD
          IF        OVRCD=1
            MOVE      "Invalid MBS",CODEDESC
            GOTO      LOKCOD99
          ENDIF
.
          MOVE      IDESC,CODEDESC
          GOTO      LOKCOD99
.
LOKCOD40  PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMPRO1
          IF        OVRCD=1
            MOVE      "Invalid Procedure",CODEDESC
            GOTO      LOKCOD99
          ENDIF
.
          MOVE      EMPRDESC,CODEDESC
          GOTO      LOKCOD99
.
LOKCOD50  PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          IF        OVRCD=1
            MOVE      "Invalid Diagnosis",CODEDESC
            GOTO      LOKCOD99
          ENDIF
.
          MOVE      EMICDESC,CODEDESC
          GOTO      LOKCOD99
.
LOKCOD60  CALL      CHKPTM00
          GOTO      LOKCOD99
.
LOKCOD99  RETURN
.------------------------------------------------------------
. Set Parameters for Emergency Visit Details
.------------------------------------------------------------
EMVIS000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          STORE     QRYDATA,F3,EMVIS001,EMVIS002,EMVIS003,EMVIS004,EMVIS005:
                               EMVIS006,EMVIS007,EMVIS008,EMVIS009,EMVIS010:
                               EMVIS011,EMVIS012,EMVIS013,EMVIS014,EMVIS015:
                               EMVIS016,EMVIS017,EMVIS018,EMVIS019,EMVIS020:
                               EMVIS021,EMVIS022,EMVIS023,EMVIS024,EMVIS025:
                               EMVIS026,EMVIS027,EMVIS028,EMVIS029,EMVIS030:
                               EMVIS031,EMVIS032,EMVIS033,EMVIS034,EMVIS035:
                               EMVIS036,EMVIS037,EMVIS038,EMVIS039,EMVIS040:
                               EMVIS041,EMVIS042,EMVIS043,EMVIS044,EMVIS045:
                               EMVIS046,EMVIS047,EMVIS048,EMVIS049,EMVIS050:
                               EMVIS051,EMVIS052,EMVIS053,EMVIS054,EMVIS055:
                               EMVIS056,EMVIS057,EMVIS058,EMVIS059,EMVIS060:
                               EMVIS061,EMVIS062,EMVIS063,EMVIS064,EMVIS065:
                               EMVIS066,EMVIS067,EMVIS068,EMVIS069,EMVIS070:
                               EMVIS071,EMVIS072,EMVIS073,EMVIS074,EMVIS075:
                               EMVIS076,EMVIS077,EMVIS078,EMVIS079,EMVIS080:
                               EMVIS081,EMVIS082,EMVIS083,EMVIS084,EMVIS085:
                               EMVIS086,EMVIS087,EMVIS088,EMVIS089,EMVIS090:
                               EMVIS091,EMVIS092,EMVIS093,EMVIS094,EMVIS095:
                               EMVIS096,EMVIS097,EMVIS098,EMVIS099,EMVIS100:
                               EMVIS101,EMVIS102,EMVIS103,EMVIS104,EMVIS105:
                               EMVIS106,EMVIS107,EMVIS108,EMVIS109,EMVIS110:
                               EMVIS111,EMVIS112,EMVIS113,EMVIS114,EMVIS115:
                               EMVIS116,EMVIS117,EMVIS118,EMVIS119,EMVIS120: 
                               EMVIS121,EMVIS122,EMVIS123,EMVIS124,EMVIS125:
                               EMVIS126,EMVIS127,EMVIS128,EMVIS129,EMVIS130:
                               EMVIS131,EMVIS132,EMVIS133,EMVIS134,EMVIS135:
                               EMVIS136,EMVIS137,EMVIS138,EMVIS139,EMVIS140:
                               EMVIS141,EMVIS142,EMVIS143,EMVIS144,EMVIS145:
                               EMVIS146,EMVIS147,EMVIS148,EMVIS149,EMVIS150:
                               EMVIS151,EMVIS152,EMVIS153,EMVIS154,EMVIS155:
                               EMVIS156,EMVIS157,EMVIS158,EMVIS159,EMVIS160:
                               EMVIS161,EMVIS162,EMVIS163,EMVIS164,EMVIS165:
                               EMVIS166,EMVIS167,EMVIS168,EMVIS169,EMVIS170:
                               EMVIS171,EMVIS172,EMVIS173,EMVIS174,EMVIS175:
                               EMVIS176,EMVIS177,EMVIS178,EMVIS179,EMVIS180:
                               EMVIS181,EMVIS182
.
          IF        F3=71
            PACK      EMVIS071,EMVIS071,SP70
          ENDIF
.
          IF        F3=24
            PACK      EMVIS024,EMVIS024,SP70
          ENDIF
.
          IF        F3=154
            PACK      EMVIS154,EMVIS154,SP70
          ENDIF
.
          IF        F3=155
            PACK      EMVIS155,EMVIS155,SP70
          ENDIF
.
          IF        F3=156
            PACK      EMVIS156,EMVIS156,SP70
          ENDIF
.
          IF        F3=157
            PACK      EMVIS157,EMVIS157,SP70
          ENDIF
.
          IF        F3=158
            PACK      EMVIS158,EMVIS158,SP70
          ENDIF
.
          IF        F3=159
            PACK      EMVIS159,EMVIS159,SP70
          ENDIF
.
          IF        F3=162
            PACK      EMVIS162,EMVIS162,SP70
          ENDIF
.
          IF        F3=163
            PACK      EMVIS163,EMVIS163,SP70
          ENDIF
.
          IF        F3=176
            PACK      EMVIS176,EMVIS176,SP70
          ENDIF
.
          IF        F3=177
            PACK      EMVIS177,EMVIS177,SP70
          ENDIF
.
          IF        F3=178
            PACK      EMVIS178,EMVIS178,SP70
          ENDIF
.
          IF        F3=179
            PACK      EMVIS179,EMVIS179,SP70
          ENDIF
.
          IF        F3=180
            PACK      EMVIS180,EMVIS180,SP70
          ENDIF
.
          IF        F3=181
            PACK      EMVIS181,EMVIS181,SP70
          ENDIF
.
          IF        F3=182
            PACK      EMVIS182,EMVIS182,SP70
          ENDIF

.
EMVIS999  RETURN
.
.------------------------------------------------------------
. Set Parameters for Emergency System Expected Patients Table
.------------------------------------------------------------
.
EMEXP000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          STORE     QRYDATA,F3,EMEXP001,EMEXP002,EMEXP003,EMEXP004,EMEXP005:
                               EMEXP006,EMEXP007,EMEXP008,EMEXP009,EMEXP010: 
                               EMEXP011,EMEXP012,EMEXP013,EMEXP014,EMEXP015:
                               EMEXP016,EMEXP017,EMEXP018,EMEXP019,EMEXP020:
                               EMEXP021,EMEXP022,EMEXP023,EMEXP024,EMEXP025:
                               EMEXP026,EMEXP027,EMEXP028,EMEXP029,EMEXP030:
                               EMEXP031,EMEXP032,EMEXP033,EMEXP034,EMEXP035:
                               EMEXP036,EMEXP037
.
EMEXP999  RETURN
.
.------------------------------------------------------------
. Set Parameters for Emergency diagnosis file
.------------------------------------------------------------
EMDCT000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          STORE     QRYDATA,F3,EMDCT001,EMDCT002,EMDCT003,EMDCT004,EMDCT005:
                               EMDCT006,EMDCT007,EMDCT008,EMDCT009
.
EMDCT999  RETURN
.------------------------------------------------------------
. Processing emergency patient
.------------------------------------------------------------
PROC0000  MATCH     SP70,INVADMNO
          IF        !@EQUAL
            CALL      OHVIS000
          ENDIF
.
          MATCH     SP70,FORMACTN
          GOTO      PROC9000 IF EQUAL
.
          MATCH     "C1",FORMACTN
          IF        @EQUAL
            CALL      UPEM0000              * update emergency visit
            BRANCH    EXIT,PROC9999
.
            MOVE      EMVIPADM,AADMNO    * Use linked admno to look up MH visit
            CALL      UPDMEH00
.
            MATCH     "1",SJOGAUDT
            IF        @EQUAL
              CALL      SJGAU200
            ELSE
              CALL      WAUDT800
            ENDIF
.
            CALL      EMROEC00
            CALL      EMROEW00
.
            MOVE      "Update Complete",WEBTITLE
            GOTO      PROC9999
          ENDIF
.
          MATCH     "C2",FORMACTN
          IF        @EQUAL
            CALL      UPEM0000              * update emergency visit with other clinic
            CALL      UCLN0000
            BRANCH    EXIT,PROC9999
.
            MOVE      EMVIPADM,AADMNO    * Use linked admno to look up MH visit
            CALL      UPDMEH00
.
            MOVE      "Update Complete",WEBTITLE
            GOTO      PROC9999
          ENDIF
.
          MATCH     "C3",FORMACTN
          IF        @EQUAL
            CALL      UADR0000           * update previous address file
            BRANCH    EXIT,PROC9999
            MOVE      "Update Complete",WEBTITLE
            GOTO      PROC9999
          ENDIF
.
          MATCH     "D ",FORMACTN
          IF        @EQUAL
            CALL      DISC0000    * discharge emergency visit 
            GOTO      PROC9999 
          ENDIF
.
          MATCH     "D2",FORMACTN
          IF        @EQUAL
            CALL      DISC0000    * discharge emergency visit with other clinic
            CALL      UCLN0000         
            GOTO      PROC9999
          ENDIF

          MATCH     "U ",FORMACTN
          IF        @EQUAL
            CALL      UNDS0000          * undischarge emergency visit
            GOTO      PROC9999
          ENDIF
.
          MATCH     "DE",FORMACTN       * Delete EMR event
          IF        @EQUAL
            CALL      DELE0000
            GOTO      PROC9999
          ENDIF
.
          MATCH     "NW",FORMACTN       * Allocate new U/R
          IF        @EQUAL
            CALL      ALLNW000
            GOTO      PROC9999
          ENDIF
.
          MATCH     "EX",FORMACTN       * Allocate existing U/R
          IF        @EQUAL
            CALL      ALLEX000
            GOTO      PROC9999
          ENDIF
.
          MATCH     "VD",FORMACTN       * Visit Extra Data (Alcohol Data)
          IF        @EQUAL
            CALL      UPVXDC00
            GOTO      PROC9999
          ENDIF
.
PROC9000  MATCH     "103",TEMPLATE          * Opening cancel ED visit 
          GOTO      PROC9050 IF EQUAL  
.
          GOTO      PROC9100
.
PROC9050  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,PROC9960
.
PROC9100  CALL      CHKADM00
.
          COMPARE   FOUR,EMVISTAT  * CAR 285739 - do not allow cancelled visits
          IF        @EQUAL
            MATCH     "017",TEMPLATE    * Allow enquiry page for cancelled
            GOTO      PROC9200 IF EQUAL
.
            MATCH     "021",TEMPLATE    * Allow enquiry page for cancelled
            GOTO      PROC9200 IF EQUAL
.
            MATCH     "100",TEMPLATE    * Allow enquiry page for cancelled
            GOTO      PROC9200 IF EQUAL
.
            GOTO      PROC9955
          ENDIF
.
PROC9200  MOVE      EMVIADMN,KEY8
          CALL      RDEMDCM1
          IF        OVRCD=1
            MOVE      SP70,EMDCTXT1
            MOVE      SP70,EMDCTXT2
            MOVE      SP70,EMDCTXT3
            MOVE      SP70,EMDCTXT4
            MOVE      SP70,EMDCTXT5
            MOVE      SP70,EMDCTXT6
            MOVE      SP70,EMDCTXT7
            MOVE      SP70,EMDCTXT8
            MOVE      SP70,EMDCTXT9
            MOVE      SP70,EMDCLUID
            MOVE      SP70,EMDCSPAR
          ENDIF
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDPMVX11
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          MATCH     SP8,URNUMBER
          IF        @EQUAL | @EOS
            MOVE      EMVIURNO,URNUMBER
          ENDIF
.
          CALL      EXPPAT00
.
          CALL      CHKUR000 
.
          CALL      GETACC00
.
          CALL      CLND0000
.
          CALL      PATATR00                * Patient Attributes
.
          CALL      VISXDC00                * Visit Extra Data (Alcohol Data)
.
          CALL      RDEMDA1
          IF        OVRCD=1
            CALL      CLEMRDLA         * Clear visit extention details
          ENDIF
.
          COMPARE   ONE,MHCNUSE
          IF        @EQUAL
            MOVE      EMVIPADM,KEY8    * Use linked admno
            CALL      RDMHVIS1
            BRANCH    OVRCD,PROC9800
.
            CALL      RDMISS1
            IF        OVRCD=1
              CALL      CLPATMIS       * Clear Patient Admission details
            ENDIF
.
            CALL      RDMHDSC1
            IF        OVRCD=1
              CALL      CLMEHDIS       * Clear MH Discharge details
            ENDIF
          ENDIF
.
PROC9800  MATCH     "1",EMCNHISA           * Location management enabled
          IF        @EQUAL
            MATCH     SP70,LOCADATE
            IF        !@EQUAL
              UNPACK    LOCATIME,HOUR,D1,MIN,D1,SEC
              PACK      D8,HOUR,MIN,SEC,SP70
              PACK      KEY22,ADMISSNO,LOCADATE,D8,SP70
              CALL      RDEMHIS1
              IF        OVRCD=1
                CALL      CLEMRHIS
              ENDIF
            ENDIF
          ENDIF
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDPTDAD1                * Read Transfer Destination
          IF        OVRCD=1
            UNPACK    SP70,PTDAADTS,PTDADCTS
          ENDIF
.
PROC9900  CALL      PATNAA00
          MOVE      PATFNAME,WEBTITLE
          CALL      WEBHED00
          BRANCH    EXIT,PROC9999
          CALL      WEBBOD00
          CALL      WEBEND00
.
PROC9950  MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9955  MOVE      "Emergency Visit has been cancelled.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9960  MOVE      "Invalid Emergency Visit Record.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9999  CLOSE     COMFILCF,DELETE
          CLOSE     COMFILDF,DELETE
          CLOSE     COMFILAF,DELETE
          CLOSE     PRECOMAF,DELETE
          RETURN
+
.---------------------------------------------------------------------------
.         PRODH000 - Process Doctor Handover Form (NEW)
.---------------------------------------------------------------------------
PRODH000  MATCH     SP70,FORMACTN
          GOTO      PRODH700 IF EQUAL
.
.
.
PRODH700  CALL      CHKADM00
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDPMVX11
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          MATCH     SP8,URNUMBER
          IF        @EQUAL | @EOS
            MOVE      EMVIURNO,URNUMBER
          ENDIF
.
          CALL      CHKUR000
.
          COMPARE   ONE,MHCNUSE
          IF        @EQUAL
            MOVE      EMVIPADM,KEY8    * Use linked admno
            CALL      RDMHVIS1
            BRANCH    OVRCD,PRODH900
.
            CALL      RDMISS1
            IF        OVRCD=1
              CALL      CLPATMIS       * Clear Patient Admission details
            ENDIF
.
            CALL      RDMHDSC1
            IF        OVRCD=1
              CALL      CLMEHDIS       * Clear MH Discharge details
            ENDIF
          ENDIF
.
PRODH900  CALL      PATNAA00
          MOVE      PATFNAME,WEBTITLE
          CALL      WEBHED00
          BRANCH    EXIT,PRODH999
          CALL      WEBBOD00
          CALL      WEBEND00
.
          MOVE      ONE,EXIT
          GOTO      PRODH999
.
PRODH999  RETURN
+
.---------------------------------------------------------------------------
.         CLND0000 - other clinic details
.---------------------------------------------------------------------------
.
CLND0000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMCLI1
          IF        OVRCD=1
            CALL      CLRC0000
          ENDIF
.
CLND9999  RETURN
+
.---------------------------------------------------------------------------
.
.---------------------------------------------------------------------------
UCLN0000  PACK      KEY8,ADMISSNO,SP70            * get other clinic details
          CALL      RDEMCLI1
          IF        OVRCD=1
            CALL      CLRC0000                    * Clear all the file variables
            CALL      UPAR0000
            PACK      EMCIVISN,ADMISSNO
            CALL      IBACLOCK
            REP       " 0",XDATE
            PACK      EMCIRCDT,XDATE
            PACK      EMCITRCD,CTIMEIS
            PACK      EMCIUWCR,WEBUSEID
            CALL      WREMCLI1
          ELSE
            CALL      UPAR0000
            CALL      IBACLOCK
            REP       " 0",XDATE
            PACK      EMCIRUDT,XDATE
            PACK      EMCITRUP,CTIMEIS
            PACK      EMCIUUPD,WEBUSEID
            CALL      UPEMCLI1
          ENDIF
.
UCLN9999  RETURN
.---------------------------------------------------------------------------
. Map Registration Screen
.------------------------
. If a patient does not have a U/R allocated then a different page must be
. used for registration details to allow the U/R to be allocated.  
. The Registration page for patients with a U/R will be 001.
. The Registration page for patients with out a U/R will be 002.
.---------------------------------------------------------------------------
MAPREG00  MOVE      TEMPLATE,F3
          COMPARE   ONE,F3
          GOTO      MAPREG99 IF NOT EQUAL
          MATCH     ZEROUR,URNUMBER
          IF        @EQUAL
            MOVE      "002",TEMPLATE
          ENDIF
MAPREG99  RETURN
.
.------------------------------------------------------------------------------
.  Verify UR number and save previous address if exist
.------------------------------------------------------------------------------
UADR0000  PACK      KEY8,URNUMBER,SP70      * Patient Referral Details
          CALL      RDMAST1
          BRANCH    OVRCD,UADR1000
.
          PACK      KEY8,URNUMBER,SP70
          CALL      RDPMPX21
          BRANCH    OVRCD,UADR1000
.
          IF        PREVADDR=1
            CALL      SVMAS000
            CALL      UPAD0000              * update previous address file
          ENDIF
.
          CALL      MADR0000           * move cgi variables
          CALL      UPMAST1            * Update PMI file with new address                                                details
.
          CALL      PMIGTNID                 * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      THIRTY2,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICUP                   * trigger PMI update
.
          GOTO      UADR9999
.
UADR1000  MOVE      "U/R Number does not exist",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UADR9999
.
UADR9999  RETURN
.
.------------------------------------------------------------------------------
.  Move CGI's into file variable to update PMI file with new address
.------------------------------------------------------------------------------
MADR0000  MATCH     PTMAS008,Z70
          IF        !@EQUAL
            MOVE      PTMAS008,PADD1
          ENDIF
.
          MATCH     PTMAS009,Z70
          IF        !@EQUAL
            MOVE      PTMAS009,PADD2
          ENDIF
.
          MATCH     PTMAS010,Z70
          IF        !@EQUAL
            MOVE      PTMAS010,PSUBRB
          ENDIF
.
          MATCH     PTMAS011,Z70
          IF        !@EQUAL
            MOVE      PTMAS011,PPOST
          ENDIF
.
          MATCH     PTMAS012,Z70
          IF        !@EQUAL
            MOVE      PTMAS012,PTELEP
          ENDIF
.
          MATCH     PTMAS013,Z70
          IF        !@EQUAL
            MOVE      PTMAS013,PTELEB
          ENDIF
.
          MATCH     Z70,PTMSX042
          IF        !@EQUAL
            MOVE      PTMSX042,PTMXCELL
          ENDIF
.
          MATCH     PTMAS085,Z70
          IF        !@EQUAL
            MOVE      PTMAS085,PADD4
          ENDIF
.
MADR9999  RETURN
.
.------------------------------------------------------------
. Add New Patient to Incomplete Table
.------------------------------------------------------------
ADDINC00  MOVE      "2",EMIPDCOM           * Set to two untill discharge     
          MOVE      "2",EMIPNCOM     
          MOVE      "0",EMIPCCOM
          MOVE      EMVIDOCT,EMIPDOCT
          MOVE      EMVITRNS,EMIPNURS
          MOVE      SP70,EMIPSPAR
          MOVE      EMVIADMN,EMIPADMN
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDEMINC1
          IF        OVRCD=1
            CALL      WREMINC1
          ENDIF
          RETURN
.------------------------------------------------------------
. Register a new emergency patient with a zero U/R
. (modified GPAT0000 from IBAEMR01)
.------------------------------------------------------------
ZUNK0000  MATCH     Z70,EMVIS132
          IF        !@EQUAL
            MOVE      EMVIS132,EMVISITE
          ELSE
            MATCH     SP70,EMVISITE
            IF        @EQUAL
              MOVE      WBSEESC,EMVISITE
            ENDIF
          ENDIF
.
          PACK      KEY3,EMVISITE,SP70           * Verify is site code is valid
          CALL      RDEMSIT1
          IF        OVRCD=0          
            MATCH     "1",EMSTACTV               * Verify if site code is active
            IF        @EQUAL                     
              GOTO      ZUNK9400                 * Not active
            ENDIF
          ENDIF
.
          CALL      VERUSR00       * verify security
          BRANCH    EXIT,ZUNK9999
.
          CALL      CLEMRVIS       * clear emergency details
          CALL      CLPRV000       * clear PRA variables
          CALL      CMASV000       * clear master file variables
          CALL      CLPMSVX1       * clear visit extn file variables
.
.---------Added By HPS---------------
          CALL      PATDEC00       * Check whether patient is deceased
          BRANCH    EXIT,ZUNK9300
          CALL      VALVIS00       * Checks whether already in emergency
          BRANCH    EXIT,ZUNK9100
          CALL      VALLOC00
          BRANCH    EXIT,ZUNK9200 
.
          MATCH     "1",TRIGUSER        * Use user id nurse code as triage nurse
          IF        @EQUAL
            MATCH     SP70,WBSENURS
            IF        @EQUAL
              CLEAR     WEBTITLE
              APPEND    "User id nurse code is blank, this is ",WEBTITLE
              APPEND    "mandatory for triage",WEBTITLE
              RESET     WEBTITLE
              CALL      WEBERR00
              MOVE      ONE,EXIT
              GOTO      ZUNK9999
            ELSE
              MOVE      WBSENURS,EMVIS127
            ENDIF
          ENDIF
.
.-----------------------------------
.
 
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,EIGHTY9;*108,EMCNUDDA,*110,EMCNUDTA,*122,EMCNPCIE
.
          READ      CONTROLF,HUND30;*75,PTCNUANV      * Using AN Visit Numbers
.
          MATCH     "1",PTCNUANV
          IF        @EQUAL
            CALL      GANV0000                * Get next AN visit number
            MOVE      PTCNNXTV,EMVIADMN
          ELSE
            MOVE      " 10",PRXCODE   * System Lock Sector 10
            CALL      GETSLK00        * Get System Lock of Sector 10
            READ      CONTROLF,TEN;*1,FORM8V    * Get next visit number
            ADD       ONE,FORM8V
            WRITAB    CONTROLF,TEN;*1,FORM8V
            CALL      RELSLK00        * Release System Lock of Sector 10
            SUB       ONE,FORM8V
            MOVE      FORM8V,EMVIADMN
          ENDIF
.
.         Make sure new visit number does not already exist
.
          MOVE      EMVIADMN,PVIBILL
          MOVE      PVIBILL,KEY8
          CALL      RDAVISA1                    * visit already on file?
          COMPARE   ZERO,OVRCD
          GOTO      ZUNK0000 IF EQUAL
.
          MATCH     SP70,EMEXP001
          IF        !@EQUAL
            PACK      KEY10,EMEXP001,SP70
            CALL      RDEMEXP1
            IF        OVRCD=0
               MATCH    "1",EACINDCT
               IF       @EQUAL
                 CALL     UPDEMX00
               ELSE
                 CALL     DEEMEXP1
               ENDIF
            ENDIF
          ENDIF
.
          CALL      CLEMRVIS                    * Clear emrvisaf file variables
          MOVE      KEY8,EMVIADMN
.
          MOVE      ZEROUR,EMVIURNO 
          MOVE      ONE,EMVISTAT
          MOVE      PASSCODE,EMVIOPR1
.
          CALL      STVIS000                 * store EMVISxxx vars in file vars
.
.         check that a location exists, default to waiting room if blank
.
          PACK      EMVILOCN,EMVILOCN,SP70
.
.         check that name has been entered, default to Unknown Patient if blank
.
          PACK      EMUNDET1,EMUNDET1,SP70
          PACK      EMUNDET2,EMUNDET2,SP70
          MATCH     SP70,EMUNDET1
          IF        @EQUAL
            MATCH     SP70,EMUNDET2
            IF        @EQUAL
              MOVE      "Unknown",EMUNDET1
              MOVE      EMVIADMN,EMUNDET2
            ELSE
              MOVE      EMUNDET2,EMUNDET1
              MOVE      EMVIADMN,EMUNDET2
            ENDIF
          ENDIF
.
          MATCH     "N1",FORMACTN           * Current Triage date and time
          IF        @EQUAL                  
            MATCH     SP70,EMVITRDT
            IF        @EQUAL
              PACK      EMVITRDT,CCC,CYY,CMM,CDD
              CLOCK     TIME,EMVITRTM
            ENDIF
            REP       " 0",EMVITRDT         * Date
            PACK      EMVIDATE,EMVITRDT
            PACK      EMVITIME,EMVITRTM
          ELSE
            PACK      EMVITRDT,EMVIDATE
            PACK      EMVITRTM,EMVITIME
          ENDIF
          MOVE      EMVIDATE,SAVEDATE       * save date & time for WRTHIS00
          UNPACK    EMVITIME,HOUR,D1,MIN,D1,SEC
          PACK      SAVETIME,HOUR,MIN,SEC
.
ZUNK0100  MATCH     "1",HEAAMBIN
          IF        @EQUAL
            MATCH    SP70,EMVIAHDT
            GOTO     ZUNK0200 IF NOT EQUAL
.
            MATCH    SP70,EMVIAHTM
            GOTO     ZUNK0200 IF NOT EQUAL
.
            GOTO     ZUNK0300
.
ZUNK0200    MOVE     EMVITRDT,EMVIAHDT
            MOVE     EMVITRTM,EMVIAHTM

          ENDIF
.
ZUNK0300  CALL      DATEVL00
          BRANCH    EXIT,ZUNK9000
.
ZUNK1000  CALL      CHKDTE00               * check dates are valid
          BRANCH    EXIT,ZUNK9000
.
          CALL      IBACLOCK
.
          PACK      EMVIDATE,EMVIDATE,SP70
          MATCH     SP70,EMVIDATE
          IF        @EQUAL
            PACK      EMVIDATE,CCC,CYY,CMM,CDD
            REP       " 0",EMVIDATE
          ENDIF
.
          PACK      EMVITIME,EMVITIME,SP70
          MATCH     SP70,EMVITIME
          IF        @EQUAL
            PACK      EMVITIME,CTIMEIS
          ENDIF
.
          CALL      GETDAY00
          MOVE      DYCNT,EMVIUN01
.
          CALL      WREMVIS1               * write new emergency record
.
          MATCH     "1",EMCPRCMP
          IF        @EQUAL
            MOVE      EMVIADMN,ADMISSNO
            CALL      UPVCM000             * write presenting complaint add info
          ENDIF
.
          MOVE      EMVIADMN,PMVXVISN
          MOVE      EMVIDATE,PMVXVSDT
          PACK      PMVXCDTE,CCC,CYY,CMM,CDD
          REP       " 0",PMVXCDTE           * Date
          CLOCK     TIME,PMVXCTIM
.
          MOVE      EMVIDOCT,PMVXDOCA
          MOVE      USERID,PMVXWEBC
.
          MATCH     Z70,PMSVX010
          IF        !@EQUAL
            MOVE      PMSVX010,PMVXINGP    * Inform GP
          ENDIF
.
          MATCH     PMSVX045,Z70           * Weight
          IF        !@EQUAL
            SQUEEZE   PMSVX045
            MOVE      ZERO,F6P2
            MOVE      PMSVX045,F6P2
            MULT      "100",F6P2
            MOVE      F6P2,PMVXPWGT
          ENDIF
.
          MATCH     Z70,PMSVX091
          IF        !@EQUAL
            MOVE      PMSVX091,PMVXUSAC    * Usual Accommodation
          ENDIF
.
          MATCH     Z70,PMSVX135
          IF        !@EQUAL
            MOVE      PMSVX135,PMVXNWHC    * Usual Accommodation
          ENDIF
.
          MATCH     Z70,PMSVX141
          IF        !@EQUAL
            MOVE      PMSVX141,PMVXFSRC    * Funding Source
          ENDIF
.
          MATCH     Z70,PMSVX122
          IF        !@EQUAL
            MOVE      PMSVX122,PMVXFVIO    * Family Violence 
          ENDIF
.
          MATCH     Z70,PMSVX125
          IF        !@EQUAL
            MOVE      PMSVX125,PMVXUDF7    * UDF 7
          ENDIF
.
          MATCH     Z70,PMSVX128
          IF        !@EQUAL
            MOVE      PMSVX128,PMVXUD10
          ENDIF
.
          MATCH     Z70,PMSVX129
          IF        !@EQUAL
            MOVE      PMSVX129,PMVXUD11
          ENDIF
.
          PACK      KEY3,EMVISITE,SP70
          CALL      RDEMSIT1
          IF        OVRCD<>1
            PACK      PMVXMHOS,EMSTHSNO,SP70
          ENDIF
.
          MOVE      PMVXVISN,KEY8
ZUNK2000  CALL      RAPMVX11
          IF        OVRCD=1
            CALL      WRPMVX11              * write visit extension record
          ELSE
            CALL      UPPMVX11
          ENDIF
.
          CALL      AUTS0000               * Add/Update Telehealth Services
.
.         Broadcast registration message
.
          CALL      PMIGTNID               * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TWO,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAE               * send emr visit message
.
          CALL      STEXP000
          MOVE      EMEXSEX,EMUNSEX
          MOVE      EMEXDOB,EMUNBDAT
          MOVE      EMEXAGE,EMUNAGE
.
          MATCH     SP70,EMUNBDAT
          IF        !@EQUAL
            IF        EMUNAGE=0
              MOVE      EMUNBDAT,PBDATE          * If birthday populated and the
              PACK      AGEDATE,CCC,CYY,CMM,CDD  * age is zero calculate age
              REP       " 0",AGEDATE
              CALL      CALCAGE
              MOVE      PSAGEYRS,EMUNAGE
            ENDIF   
          ENDIF
.
          MOVE      EMVIADMN,KEY8
          CALL      WREMUNK1               * write new unknown record
          MOVE      EMUNDET1,PSNAME
          MOVE      EMUNDET1,PTMASNAM
          MOVE      EMUNDET2,PGNAME
          MOVE      ZERO,PURNO
          CALL      WRCPAT00               * write to current patient table
.
          CALL      MVVSCO00               * Save visit based coding
.
          CALL      ADDOBS00               * Write observation
          CALL      PLAB0000               * Print labels 
          CALL      PFRM0000               * Print forms
.
.         Write a new record to the old A&E files
.
          CALL      CLDT0000             * clear a&e files
          CALL      UPDTA000             * update aae detail fields
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDADETA1
          IF        OVRCD=1
            CALL      WRDETA1              * write aae details record
          ELSE
            CALL      UPDETA1
          ENDIF
.
.         If a discharge date has been entered, then create an aae discharge
.         record.  (This probably won't happen but the code is included
.         just in case).
.
          CALL      CLDS0000
          MATCH     SP8,EMVIDDAT
          IF        !@EQUAL
            CALL      UPDSA000           * clear aae discharge fields
            CALL      WRDISA1
          ENDIF
.
          IF        PTCNHDPS<>1
            CALL      PRAUP000
          ENDIF
.
          CALL      CLAMC000             * write claim details
.
          CALL      TSRC0000             * Write transfer destination
.
          MOVE      EMVIADMN,ADMISSNO
          MOVE      EMVIURNO,URNUMBER
.
          CALL      ADEXCV00      
.  
          CALL      WRTHIS00
          PROC      EMRDRCHR                 * Update Visit Billing Complete
.
          MOVE      "Triage Complete",WEBTITLE
          MOVE      ZERO,EXIT
          GOTO      ZUNK9999
.
ZUNK9100  MOVE      "Patient Already in Emergency",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ZUNK9999
.
ZUNK9200  MOVE      "Location Already occupied",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ZUNK9999
.
ZUNK9300  MOVE      "Patient is Deceased",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ZUNK9999
.
ZUNK9400  MOVE      "Site Code Inactive",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ZUNK9999
.
ZUNK9000  MOVE      ONE,EXIT          
          GOTO      ZUNK9999
.
ZUNK9999  RETURN 
.------------------------------------------------------------
. Write to the current patient list
.------------------------------------------------------------
WRCPAT00  CALL      CALRAN00
.
          MATCH     STRTDATE,EMVIDATE        * before start date
          GOTO      WRCPAT99 IF LESS
.
          MATCH     EMVIDATE,LASTDATE        * after end date
          GOTO      WRCPAT99 IF LESS
.
          MOVE      DEMVIADM,PMCUVISN
          MOVE      EMVIDATE,PMCUDATE
          MOVE      PTMASNAM,PMCUSURN
          MOVE      PMPXFNAM,PMCUGNAM
          MOVE      PMPXSNAM,PMCUGNM2
          MOVE      PURNO,PMCUURNO
          MOVE      "1",PMCUSYST
          MOVE      SP70,PMCULOCN
          MOVE      SP70,PMCUOSIT
          MOVE      EMSTHSNO,PMCUHOSP
          MOVE      SP70,PMCUTSTA
          MOVE      SP70,PMCUTLOC
.
          PACK      KEY8,PMCUVISN,SP70
          CALL      RAPMCUR1
          IF        OVRCD=1
            CALL      WRPMCUR1
          ENDIF
.
WRCPAT99  RETURN
+
.------------------------------------------------------------
. Calculate the date range for current patient records
.------------------------------------------------------------
CALRAN00  READ      CONTROLF,HUND01;*49,CWEBSDAY  * no of days for search
          MOVE      SP70,STRTDATE
          MOVE      SP70,LASTDATE
.
. ---  calculate starting date ---
.
          CALL      IBACLOCK
          CALL      DMYCON
          SUB       CWEBSDAY,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      STRTDATE,CC,YY,MM,DD
          REP       " 0",STRTDATE
.
. ---  calculate last date ---
.
          CALL      IBACLOCK
          CALL      DMYCON
          ADD       CWEBSDAY,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      LASTDATE,CC,YY,MM,DD
          REP       " 0",LASTDATE
.
CALRAN99  RETURN
+
.------------------------------------------------------------
.         PATDEC00  Patient Deceased ?
.------------------------------------------------------------
PATDEC00  MATCH     SP70,EMVIS118
          GOTO      PATDEC99 IF EQUAL
.
          MOVE      EMVIS118,KEY8
          CALL      RDMAST1
          CALL      RDPMPX21
          BRANCH    PCEASE,PATDEC90         * Patient Deceased
          GOTO      PATDEC99
.
        
PATDEC90  MOVE     ONE,EXIT
          GOTO     PATDEC99  
.
PATDEC99  RETURN
.------------------------------------------------------------
.         VALVIS00  Checks whether patient is already in emergency
.------------------------------------------------------------
VALVIS00  PACK      KEY16,EMVIS118,Z70
          CALL      RSEMVIS3
          CALL      RPEMVIS3
          BRANCH    OVRCD,VALVIS90
.
          MATCH     EMVIS118,EMVIURNO
          GOTO      VALVIS90 IF NOT EQUAL
.
          MATCH     SP70,EMVIDDAT
          IF        @EQUAL
            MOVE      ONE,EXIT
            GOTO      VALVIS99
          ENDIF
.
VALVIS90  MOVE     ZERO,EXIT 
          GOTO     VALVIS99
.
VALVIS99  RETURN
.------------------------------------------------------------
.         VALLOC00  Checks whether location is already occupied
.
.         Returns:
.           EXIT    0 - empty
.                   1 - occupied
.------------------------------------------------------------
VALLOC00  PACK      KEY3,EMVIS006,SP70
          CALL      RDEMLOC1
          BRANCH    OVRCD,VALLOC90
.
          MATCH     "O",EMLOTYPE            * Other Departments
          GOTO      VALLOC90 IF EQUAL
.
          MATCH     "W",EMLOTYPE            * Waiting Room
          GOTO      VALLOC90 IF EQUAL
.
          MATCH     "E",EMLOTYPE            * Emergency Telehealth Service
          GOTO      VALLOC90 IF EQUAL
.
          MOVE      ZERO,LOCNCNTR
          PACK      KEY11,EMVIS006,SP70
          CALL      RSEMVIS7
VALLOC20  CALL      RKEMVIS7
          BRANCH    OVRCD,VALLOC85
.
          MATCH     EMVIS006,EMVILOCN
          GOTO      VALLOC85 IF NOT EQUAL
.
          COMPARE   ONE,EMVISTAT
          GOTO      VALLOC20 IF NOT EQUAL
.
          MATCH     EMVISITE,WBSEESC
          GOTO      VALLOC20 IF NOT EQUAL
.
          ADD       ONE,LOCNCNTR
          GOTO      VALLOC20
.
VALLOC85  IF          EMLOMAXP = 0
            GOTO        VALLOC90                  * Zero assumes unlimited!!!!!!
          ENDIF
.
          IF        LOCNCNTR < EMLOMAXP
            GOTO      VALLOC90
          ENDIF
.
          MOVE      ONE,EXIT
          GOTO      VALLOC99
.
VALLOC90  MOVE     ZERO,EXIT
          GOTO     VALLOC99
.
VALLOC99  RETURN
.------------------------------------------------------------
.         UPDLOC00  Location check while updating
.------------------------------------------------------------
UPDLOC00  PACK      KEY3,EMVIS006,SP70
          CALL      RDEMLOC1
          BRANCH    OVRCD,UPDLOC90
.
          MATCH     "O",EMLOTYPE            * Other Departments
          GOTO      UPDLOC90 IF EQUAL
.
          MATCH     "W",EMLOTYPE            * Waiting Room
          GOTO      UPDLOC90 IF EQUAL
.
          MATCH     "E",EMLOTYPE            * Emergency Telehealth Service
          GOTO      UPDLOC90 IF EQUAL
.
          MOVE      ZERO,LOCNCNTR           * Initialize location counter
          PACK      KEY11,EMVIS006,SP70
          CALL      RSEMVIS7
UPDLOC20  CALL      RKEMVIS7
          BRANCH    OVRCD,UPDLOC85            * Check max pat for location
.
          MATCH     EMVIS006,EMVILOCN
          GOTO      UPDLOC85 IF NOT EQUAL     * Check max pat for location
.
          MATCH     DEMVIADM,ADMISSNO
          IF        @EQUAL
            MATCH     EMVIS006,EMVILOCN
            GOTO      UPDLOC90 IF EQUAL
            GOTO      UPDLOC85 IF NOT EQUAL   * Check max pat for location
          ENDIF
.
          COMPARE   ONE,EMVISTAT
          GOTO      UPDLOC20 IF NOT EQUAL
.
          MATCH     EMVISITE,WBSEESC
          GOTO      UPDLOC20 IF NOT EQUAL
.
          ADD       ONE,LOCNCNTR              * Increment location counter
          GOTO      UPDLOC20                  * Read next EMR visit record
.
.      Check if max number of patients has reached for the location
UPDLOC85  IF          EMLOMAXP = 0
            GOTO        UPDLOC90              * Zero assumes unlimited!!!!!!
          ENDIF
.
          IF        LOCNCNTR < EMLOMAXP
            GOTO      UPDLOC90                * Location is available for update
          ENDIF
.
          MOVE      ONE,EXIT                  * Location already occupied
          GOTO      UPDLOC99
.
UPDLOC90  MOVE     ZERO,EXIT
          GOTO     UPDLOC99
.
UPDLOC99  RETURN
.------------------------------------------------------------
.         CHKDTE00  Check dates are valid on input
.------------------------------------------------------------
CHKDTE00  CALL      IBACLOCK
          PACK      DIM8,CCC,CYY,CMM,CDD
          REP       " 0",DIM8
          MOVE      DIM8,TODDATE
.
          UNPACK    CTIMEIS,HOUR,ANS,MIN
          PACK      DIM4,HOUR,MIN
          MOVE      DIM4,TODTIME
.
          MATCH     SP70,EMVIDATE
          IF        !@EQUAL
            MOVE      EMVIDATE,FORM8
            COMPARE   FORM8,TODDATE
            IF        @LESS
              CLEAR     WEBTITLE
              APPEND    "Arrival Date must be less than or equal ",WEBTITLE
              APPEND    "to current date",WEBTITLE
              RESET     WEBTITLE
              CALL      WEBERR00
              MOVE      ONE,EXIT
              GOTO      CHKDTE99
            ENDIF 
.
            IF        !@EQUAL
              GOTO      CHKDTE99            * If not today do not check time.
            ENDIF
.
          ENDIF
.
          MATCH     SP70,EMVITIME
          IF        !@EQUAL
            MATCH     SP70,EMVIDATE
            GOTO      CHKDTE99 IF EQUAL
.
            UNPACK    EMVITIME,HOUR,ANS,MIN
            PACK      DIM4,HOUR,MIN
            REP       " 0",DIM4
            MOVE      DIM4,FORM4
            COMPARE   FORM4,TODTIME
            IF        @LESS
              CLEAR     WEBTITLE
              APPEND    "Arrival Time must be less than or equal ",WEBTITLE
              APPEND    "to current time",WEBTITLE
              RESET     WEBTITLE
              CALL      WEBERR00
              MOVE      ONE,EXIT
              GOTO      CHKDTE99
            ENDIF 
          ENDIF
.
CHKDTE99  RETURN
.------------------------------------------------------------
.         UMAS0000  Admit a patient with a valid U/R
.------------------------------------------------------------
UMAS0000  MATCH     Z70,EMVIS132
          IF        !@EQUAL
            MOVE      EMVIS132,EMVISITE
          ELSE
            MATCH     SP70,EMVISITE
            IF        @EQUAL
              MOVE      WBSEESC,EMVISITE
            ENDIF
          ENDIF
. 
          PACK      KEY3,EMVISITE,SP70           * Verify is site code is valid
          CALL      RDEMSIT1
          IF        OVRCD=0       
            MATCH     "1",EMSTACTV
            IF        @EQUAL
              GOTO      UMAS9870
            ENDIF
          ENDIF
.
          CALL      VERUSR00             * verify user
          BRANCH    EXIT,UMAS9999
.
          CALL      CLWCV000             * clear w.c. temp fields
          CALL      CLTAV000             * clear TAC temp fields
          CALL      CLVAV000             * clear V.A. temp fields
          CALL      CLPRV000             * clear PRA fields
          CALL      CMASV000             * clear master file variables
.
          BRANCH    STOREFLG,UMAS0100    * skip clear when creating new ur
.
          CALL      CLEMRVIS             * clear emr visit file variables
UMAS0100  CALL      CLPMSVX1             * clear visit extn file variables
.
          MATCH     SP70,EMEXP001        * If it was a expected patient
          IF        !@EQUAL
            PACK      KEY10,EMEXP001,SP70
            CALL      RDEMEXP1
            IF        OVRCD=0
               MATCH    "1",EACINDCT
               IF       @EQUAL
                 CALL     UPDEMX00
               ELSE
                 CALL     DEEMEXP1
               ENDIF
            ENDIF
          ENDIF
.
          REP       "+ ",URNUMBER
          MOVE      URNUMBER,PURNO
.          CALL      INEM0000
.
          CALL      VALUR000
          BRANCH    EXIT,UMAS9999
.
          COMPARE   FOUR,PSTAT              * EBS Unknown U/R
          GOTO      UMAS9860 IF EQUAL
.
          PACK      KEY8,PURNO
          CALL      RLPTMAS1
          BRANCH    OVRCD,UMAS9700:             * not found
                          UMAS9800              * already locked
.
          CALL      RDPMPX21
          BRANCH    OVRCD,UMAS9700,UMAS9800
.
          MOVE      PMPXRHC1,SAVEPHCP       * Save variable for HCP Audit
          MOVE      PMPXRH1G,SAVEPRAC       * Save variable for HCP Audit
          MOVE      PMPXR1GC,SAVEPCTR       * Save variable for HCP Audit
.
          CALL      SVMAS000
          CALL      ACTMSAV
          CALL      SJGSAV00
.
          CALL      GPAC0000
          CALL      STAT0000
          BRANCH    EXIT,UMAS9500
.
          CALL      VALLOC00                * Validate location
          BRANCH    EXIT,UMAS9850
.
          MATCH     "1",TRIGUSER        * Use user id nurse code as triage nurse
          IF        @EQUAL
            MATCH     SP70,WBSENURS
            IF        @EQUAL
              CLEAR     WEBTITLE
              APPEND    "User id nurse code is blank, this is ",WEBTITLE
              APPEND    "mandatory for triage",WEBTITLE
              RESET     WEBTITLE
              CALL      WEBERR00
              MOVE      ONE,EXIT
              GOTO      UMAS9999
            ELSE
              MOVE      WBSENURS,EMVIS127
            ENDIF
          ENDIF
.
          BRANCH    STOREFLG,UMAS1000
.
          CALL      CLEMRVIS
          CALL      STVIS000
.
          PACK      EMVILOCN,EMVILOCN,SP70
.
UMAS1000  CALL      DATEVL00
          BRANCH    EXIT,UMAS9500
.
          CALL      CHKDTE00               * check dates are valid
          BRANCH    EXIT,UMAS9500
.
          CALL      CTRN0000                     * Check transfer source
          BRANCH    EXIT,UMAS9500
.
          IF        PMI2FLAG=1
            CALL      UPVPMI00                * Update PMI extension table 2
            CALL      UPPMPX21                * if cgis where on triage page
          ENDIF
.
          CALL      PMIU0000           
          BRANCH    EXIT,UMAS9500
.
.         Now write the new emergency record
.
UMAS5000  READ      CONTROLF,HUND30;*75,PTCNUANV      * Using AN Visit Numbers
.
          MATCH     "1",PTCNUANV
          IF        @EQUAL
            CALL      GANV0000                * Get next AN visit number
            MOVE      PTCNNXTV,EMVIADMN
          ELSE
            OPEN      CONTROLF,"controlf"
            MOVE      " 10",PRXCODE   * System Lock Sector 10
            CALL      GETSLK00        * Get System Lock of Sector 10
            READ      CONTROLF,TEN;*1,FORM8V        * get next visit number
            ADD       ONE,FORM8V
            WRITAB    CONTROLF,TEN;*1,FORM8V
            CALL      RELSLK00        * Release System Lock of Sector 10
            SUB       ONE,FORM8V
            MOVE      FORM8V,EMVIADMN
          ENDIF
.
.         Make sure that the new visit number does not exist already
.
          MOVE      EMVIADMN,PVIBILL
          MOVE      EMVIADMN,DEMVIADM
          MOVE      PVIBILL,KEY8
          CALL      RDAVISA1             * visit already on file?
          COMPARE   ZERO,OVRCD
          GOTO      UMAS5000 IF EQUAL    * yes - get next number
.
          MOVE      PURNO,EMVIURNO       * load U/E
          MOVE      ONE,EMVISTAT         * set for current patient
          MOVE      PASSCODE,EMVIOPR1    * set operator
.
          CALL      IBACLOCK 
.
          PACK      EMVIDATE,EMVIDATE,SP70
          MATCH     SP70,EMVIDATE
          IF        @EQUAL
            PACK      EMVIDATE,CCC,CYY,CMM,CDD
            REP       " 0",EMVIDATE
          ENDIF
.
          PACK      EMVITIME,EMVITIME,SP70
          MATCH     SP70,EMVITIME
          IF        @EQUAL
            PACK      EMVITIME,CTIMEIS
          ENDIF
.
          CALL      GETDAY00
          MOVE      DYCNT,EMVIUN01
.
          PACK      EMVITRIG,EMVITRIG,SP70       * no triage cat=no triage date
          MATCH     SP70,EMVITRIG
          IF        @EQUAL
            PACK      EMVITRDT,SP70
            PACK      EMVITRTM,SP70
            GOTO      UMAS6000
          ENDIF
          COMPARE   ONE,EMCNDDTM         * Keying in triage date and time ?
          IF        !@EQUAL
            PACK      EMVITRDT,EMVIDATE  * Populate triage date and time if
            PACK      EMVITRTM,EMVITIME  * not keying in triage date and time
          ENDIF
.
          CALL      ADEXCV00
.
UMAS6000  MATCH     "1",HEAAMBIN
          IF        @EQUAL
            MATCH    SP70,EMVIAHDT
            GOTO     UMAS6500 IF NOT EQUAL
.
            MATCH    SP70,EMVIAHTM
            GOTO     UMAS6500 IF NOT EQUAL
.
            GOTO     UMAS7000
.
UMAS6500    MOVE     EMVITRDT,EMVIAHDT
            MOVE     EMVITRTM,EMVIAHTM
          ENDIF
.
UMAS7000  MOVE      EMVIDATE,SAVEDATE       * save date & time for WRTHIS00
          UNPACK    EMVITIME,HOUR,D1,MIN,D1,SEC
          PACK      SAVETIME,HOUR,MIN,SEC
.
          MATCH     "1",PCOMDEFT  
          IF        @EQUAL
            CALL      PCOM0000           * default presenting complaint
          ENDIF
.
          CALL      WREMVIS1             * write new emergency record
.
          CALL      UPALIA00             * write new alias for Preferred Name
.
          MATCH     "1",EMCPRCMP
          IF        @EQUAL
            MOVE      EMVIADMN,ADMISSNO
            CALL      UPVCM000           * write presenting complaint add info
          ENDIF
.
          CALL      WRCPAT00             * write to current patient table
.
          CALL      MVVSCO00             * Save visit based coding
.
          CALL      ADDOBS00             * Write observation
          CALL      PLAB0000               * Print labels
          CALL      PFRM0000               * Print forms
.
.         Write any clinical notes if there are any on file
.
.         CALL      TRCMA000             * write clinical notes 
.
          CALL      VISDS000             * determine PVISTAT value
.
          MOVE      EMVIURNO,PVIURNO
          MOVE      EMVIDATE,PVIDATE
          MOVE      EMVIADMN,PVIBILL
          MOVE      ONE,PVITYPE
          MOVE      EMVIDOCT,PVIDOCT
          MOVE      ONE,PVITRAN
          MOVE      SP30,PVISPAR
          MOVE      SP10,PVISITE
          MOVE      SP2,PVILOCK
.
          MATCH     "19",UPDFIELD
          IF        @EQUAL
            MATCH     PMSVX122,PMVXFVIO
            IF        !@EQUAL
              PACK    UPDVALUE,FDVUPDT,PMVXFVIO,SP70
              MOVE    PMSVX122,PMVXFVIO
              PACK    NEWVALUE,FDVUPDT,PMVXFVIO,SP70
              CALL    WRCHA000               * write to emrchaaf if required
              CALL    WRCHB000               * write to emrchaaf if required
            ENDIF
          ENDIF  
.
          MOVE      PVIBILL,KEY8
          CALL      RDAVISA1
          IF        OVRCD=1
            CALL      WRVISA1              * write visit record
            CALL      AEXP0000             * write adm based expected payors
          ELSE
            CALL      UPVISA1
          ENDIF
.
          MOVE      EMVIADMN,PMVXVISN
          MOVE      EMVIDATE,PMVXVSDT	
          PACK      PMVXCDTE,CCC,CYY,CMM,CDD
          REP       " 0",PMVXCDTE           * Date
          CLOCK     TIME,PMVXCTIM

          MOVE      EMVIDOCT,PMVXDOCA
          MOVE      USERID,PMVXWEBC
          MOVE      SP20,PMVXSPAR
          MOVE      PPOST,PMVXPOST
          MATCH     Z70,PMSVX010
          IF        !@EQUAL
            MOVE      PMSVX010,PMVXINGP    * Inform GP
          ENDIF
.
          MATCH     PMSVX045,Z70           * Weight
          IF        !@EQUAL
            SQUEEZE   PMSVX045
            MOVE      ZERO,F6P2
            MOVE      PMSVX045,F6P2
            MULT      "100",F6P2
            MOVE      F6P2,PMVXPWGT
          ENDIF
.
          MATCH     Z70,PMSVX079
          IF        !@EQUAL
            MOVE      PMSVX079,PMVXEMPL    * Employment Status Cat KD
          ENDIF
.
          MATCH     Z70,PMSVX091
          IF        !@EQUAL
            MOVE      PMSVX091,PMVXUSAC    * Usual Accommodation
          ENDIF
.
          MATCH     Z70,PMSVX135
          IF        !@EQUAL
            MOVE      PMSVX135,PMVXNWHC    * Usual Accommodation
          ENDIF
.
          MATCH     Z70,PMSVX141
          IF        !@EQUAL
            MOVE      PMSVX141,PMVXFSRC    * Funding Source
          ENDIF
.
          MATCH     Z70,PMSVX122
          IF        !@EQUAL
            MOVE      PMSVX122,PMVXFVIO    * Family Violence 
          ENDIF
.
          MATCH     Z70,PMSVX125
          IF        !@EQUAL
            MOVE      PMSVX125,PMVXUDF7    * UDF 7
          ENDIF
.
          MATCH     Z70,PMSVX128
          IF        !@EQUAL
            MOVE      PMSVX128,PMVXUD10
          ENDIF
.
          MATCH     Z70,PMSVX129
          IF        !@EQUAL
            MOVE      PMSVX129,PMVXUD11
          ENDIF
.
          MOVE      PMPXABRG,PMVXABRG      * Set Resident Status
          MOVE      PMPXINTR,PMVXINTR      * Interpreter required
          MOVE      PMPXLNG1,PMVXLNG1      * Preferred Language 1
          CALL      GTASGC00               * SLA/ASGC code
.
          PACK      KEY3,EMVISITE,SP70
          CALL      RDEMSIT1
          IF        OVRCD<>1
            PACK      PMVXMHOS,EMSTHSNO,SP70
          ENDIF
.
          MOVE      PMVXVISN,KEY8
          CALL      RAPMVX11
          IF        OVRCD=1
            MOVE      SP70,PMVXPOEC
            MOVE      SP70,PMVXPILC
            CALL      WRPMVX11              * write visit extension record
          ELSE
            CALL      UPPMVX11
          ENDIF
.
.         Broadcast registration message
.
          CALL      PMIGTNID             * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      THREE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAE             * send emr visit message
.
          CALL      ADDVIS00             * Addes record to MRTVISFD
.
.         Write a new record to the old A&E files
.
          CALL      CLDT0000             * clear a&e files
          CALL      UPDTA000             * update aae detail fields
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDADETA1
          IF        OVRCD=1
            CALL      WRDETA1              * write aae details record
          ELSE
            CALL      UPDETA1
          ENDIF
.
.         If a discharge date has been entered, then create an aae discharge
.         record.  (This probably won't happen but the code is included
.         just in case).
.
          CALL      CLDS0000
          MATCH     SP8,EMVIDDAT
          IF        !@EQUAL
            CALL      UPDSA000           * clear aae discharge fields
            CALL      WRDISA1
          ENDIF
.
          IF        PTCNHDPS<>1
            CALL      PRAUP000
          ENDIF
.
          CALL      CLAMC000             * write claim details
.
          MOVE      EMVIADMN,ADMISSNO
          MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRTHIS00
            PROC      EMRDRCHR                 * Update Visit Billing Complete
          ENDIF
.
          MATCH     "1",MRCNRRED
          IF        @EQUAL
            CALL      CRMED000
          ENDIF
.
          CALL      AUTS0000           * Add/Update Telehealth Services record
.
          CALL      DISVAL00
          BRANCH    EXIT,UMAS9999
          CALL      EMCMN000
.
          MATCH     "1",PTCNXCOM              * if using Extra Compensation
          IF        @EQUAL
            CALL      CPRA0000                * check if we need to update PRFA
          ENDIF
.
          MOVE      EMVIDSTA,ADSDISC
.
.          MATCH     "1",PTCNUNET
.          IF        @EQUAL
.            MOVE      "01",KEY2                 * IHI Validation
.            PACK      KEY11,WBSEUID,SP70        * User ID
.            PACK      KEY50,EMVIURNO,SP70
.            CALL      WIPL0000                  * Write to polling table
.          ENDIF
.
          IF        PREVADDR=1
            CALL      UPAD0000              * update previous address file
          ENDIF
.
          CALL      TSRC0000                * Write transfer destination
.
          CALL      CHGAE000                * check if still chargeable
.
          MOVE      ZERO,EXIT
          MOVE      "Registration Complete",WEBTITLE
          GOTO      UMAS9999
.
UMAS9500  MOVE      PURNO,KEY8
          CALL      UUPTMAS1
          MOVE      ONE,EXIT
          GOTO      UMAS9999
.
UMAS9700  MATCH     ZEROUR,URNUMBER
          IF        @EQUAL
            MOVE      "Cannot register zero U/R through Patient Search",WEBTITLE
          ELSE
            MOVE      "U/R Number does not exist",WEBTITLE
          ENDIF
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UMAS9999
.
UMAS9800  MOVE      "U/R Number already locked",WEBTITLE
          CALL      WEBER200
          MOVE      ONE,EXIT
          GOTO      UMAS9999
.
UMAS9850  MOVE      PURNO,KEY8
          CALL      UUPTMAS1
          MOVE      "Location Already occupied",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UMAS9999
.
UMAS9860  CLEAR     WEBTITLE
          APPEND    "Patient has an inappropriate identifier for ",WEBTITLE
          APPEND    "this function.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UMAS9999
.
UMAS9870  MOVE      "Site Code Inactive",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UMAS9999
.
UMAS9999  RETURN
+
.------------------------------------------------------------
.         INEM0000 Check if in emergency already
.------------------------------------------------------------
INEM0000  PACK      KEY9,ONE,SP10
          CALL      RDEMVIS2                     * position in file
INEM0500  CALL      RKEMVIS2                     * read next record
          BRANCH    OVRCD,INEM9999               * eof - finished
          COMPARE   ONE,EMVISTAT                 * current patient still ?
          GOTO      INEM9999 IF NOT EQUAL        * no - finished
.
          MOVE      PURNO,DPURNO
          MATCH     DPURNO,EMVIURNO              * same U/R as selected pt ?
          GOTO      INEM9000 IF EQUAL
.
          GOTO      INEM0500                     * get next record
.
INEM9000  CLEAR     WEBTITLE 
          APPEND    "Warning: ",WEBTITLE
          APPEND    "Patient already has a current emergency event",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBER200
.
INEM9999  RETURN
+
.------------------------------------------------------------
. Update Preferred Name alias
.------------------------------------------------------------
UPALIA00  MATCH     "0",PTCNNMPR             * Preferred Names not displayed on
                                             * Demographics screens
          GOTO      UPALIA99 IF EQUAL
.
          PACK      PMPXPFGN,PMPXPFGN,SP70
          PACK      PMPXPFSN,PMPXPFSN,SP70
.
          MATCH     SP70,PMPXPFGN
          IF        !@EQUAL
            PACK      GSRGNAM,PMPXPFGN,SP70      * if Pref GN not blank
            MATCH     SP70,PMPXPFSN
            IF        !@EQUAL
              PACK      GSRSNAM,PMPXPFSN,SP70    * if Pref GN & SN not blank
            ELSE
              PACK      GSRSNAM,PTMASNAM,SP70    * if Pref SN blank
            ENDIF
          ELSE
            PACK      GSRGNAM,PMPXFNAM,SP70      * if Pref GN blank
            MATCH     SP70,PMPXPFSN
            IF        !@EQUAL
              PACK      GSRSNAM,PMPXPFSN,SP70    * if Pref SN not blank
            ELSE
              GOTO      UPALIA99                 * if Pref GN & SN blank
            ENDIF
          ENDIF
.
          PACK      PTGSGNM2,PMPXSNAM,SP70   * Second Name
          MOVE      PBDATE,GSRDOB            * Date of birth
          MOVE      PSEX,GSRSEX              * Sex
          MOVE      PURNO,GSRURNO            * DOB
          MOVE      ZEROVISN,GSRBILL         * Billing Number
          MOVE      ZERO,GSRSYS              * System
          CALL      SOUNDEX                  * get soundex key for surname
          CALL      SOUNDX2                  * get soundex key for given names
.
          PACK      KEY115,GSRURNO,GSRBILL,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB:
                           GSRSEX
          CALL      RDPTGSR1                 * check if its already there
          IF        OVRCD = 1
            CALL      WRPTGSR1
          ENDIF
.
UPALIA99  RETURN
.------------------------------------------------------------
.         STAT0000  Check the status of the master file record
.------------------------------------------------------------
STAT0000  BRANCH    PSTAT,STAT1000:              * cancelled
                          STAT2000:              * has an associated U/R
                          STAT3000               * U/R is not yet allocated
.
          MOVE      ZERO,EXIT
          GOTO      STAT9999
.
STAT1000  MOVE      "U/R Number has been cancelled",WEBTITLE
          CALL      WEBERR00
          GOTO      STAT9500
.
STAT2000  CLEAR     WEBTITLE
          APPEND    "U/R Number ",WEBTITLE
          APPEND    PURNO,WEBTITLE
          APPEND    " has an associated U/R",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          GOTO      STAT9500
.
STAT3000  MOVE      "U/R Number is not yet allocated",WEBTITLE
          CALL      WEBERR00
          GOTO      STAT9500
.
STAT9500  MOVE      ONE,EXIT
.
STAT9999  RETURN
+
.------------------------------------------------------------
. PMIU0000  Update an existing PMI record
. Returns:    EXIT  0 = Ok to continue
.                   1 = Error
.------------------------------------------------------------
.
PMIU0000  MOVE      ONE,URSYST
. 
          CALL      UPDUR                        * update master file
          BRANCH    EXIT,PMIU9100
.                                                  & related records
          MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRUPD000  * write to demographics updated table
          ENDIF
.
          CALL      WESIS000
          MOVE      PURNO,KEY8
          CALL      UUPTMAS1
          MOVE      ZERO,EXIT
          GOTO      PMIU9999
.
PMIU9100  MOVE      PURNO,KEY8
          CALL      UUPTMAS1
          MOVE      ONE,EXIT
.
PMIU9999  RETURN
+
.------------------------------------------------------------
.         UPEM0000  Update emergency Visit           
.------------------------------------------------------------
UPEM0000  RESET     UPDTTYPE 
.
          CALL      VERUSR00            * verify user
          BRANCH    EXIT,UPEM9999
.
          CALL      CHKHFN00            * Check Health Fund
          BRANCH    EXIT,UPEM9999
.
          CALL      CHKDN000            * check for invalid doctor & nurse
          BRANCH    EXIT,UPEM9999
.
          MATCH     SP70,DONTCHEC       * This will ignore the date/time check
          IF        @EQUAL
            CALL      CHKKEY00
            BRANCH    EXIT,UPEM9999
          ENDIF
.
          CALL      CHKDS000            * check for clear of previously posted
          BRANCH    EXIT,UPEM9999       * discharge details
.
          MATCH     "1",TRIGUSER        * Use user id nurse code as triage nurse
          IF        @EQUAL
            MATCH     SP70,WBSENURS
            IF        @EQUAL
              CLEAR     WEBTITLE
              APPEND    "User id nurse code is blank, this is ",WEBTITLE
              APPEND    "mandatory for triage",WEBTITLE
              RESET     WEBTITLE
              CALL      WEBERR00
              MOVE      ONE,EXIT
              GOTO      UPEM9999
            ELSE
              MOVE      WBSENURS,EMVIS127
            ENDIF  
          ENDIF
.
          MATCH     SP70,ADMISSNO                 * admission no blank?
          GOTO      UPEM8000 IF EQUAL             * yes - display alert
.
          MATCH     ZEROVISN,ADMISSNO             * admission no blank?
          GOTO      UPEM8000 IF EQUAL             * yes - display alert
.
          MATCH     "UPDAT",UPDTTYPE
          IF        @EQUAL 
            CALL      UPDLOC00                   * check Location of patient
            BRANCH    EXIT,UPEM9100
          ENDIF
.
          MOVE      ADMISSNO,KEY8
          CALL      RLEMVIS1                     * read visit record with a lock
          BRANCH    OVRCD,UPEM9000:              * patient record not found 
                          UPEM9500               * record locked
.
          PACK      SAVEAMBL,EMVIAMBL,SP70
          PACK      SAVEUD09,EMVIUD09,SP70
          PACK      SAVEUT09,EMVIUT09,SP70
          MOVE      EMVIUC20,SAVEUC20  * Save Presenting Complaint (Cat el)
          MOVE      EMVICOM1,SAVECOM1  * Save Complaint Line 1
          MOVE      EMVICOM2,SAVECOM2  * Save Complaint Line 2
          MOVE      EMVICOM3,SAVECOM3  * Save Complaint Line 3
          MOVE      EMVICOM4,SAVECOM4  * Save Complaint Line 4
          MOVE      EMVICOM5,SAVECOM5  * Save Complaint Line 5
          MOVE      EMVICOM6,SAVECOM6  * Save Complaint Line 6
.
          PACK      SAVVCOMP,SP70                                   
          MOVE      EMVICOMP,SAVVCOMP  * Save original Claim code  
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDPMVX11
          IF        OVRCD=1
           CALL       CLPMSVX1
          ENDIF
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDPTDAD1                * Read Transfer Destination
          IF        OVRCD=1
            UNPACK    SP70,PTDAADTS,PTDADCTS
          ENDIF
.
          MATCH     "1",PRFAFLAG
          IF        @EQUAL
            PACK      KEY8,EMVIADMN,SP70         
            CALL      RDRESP1
            IF        OVRCD=0
              MATCH     SP70,PKNAME
              IF        !@EQUAL & !@EOS          
                GOTO      UPEM0050
              ENDIF
            ENDIF
          ENDIF 
.
          CALL      UPPRA000                * Update Person Respons for Acc
          CALL      EMCMD000
.
UPEM0050  MATCH     SP8,EMVIURNO                 * u/r number blank?    
          GOTO      UPEM1000 IF EQUAL 
.
          MATCH     ZEROUR,EMVIURNO              * u/r number zero?
          GOTO      UPEM1000 IF EQUAL
.
          PACK      KEY8,EMVIURNO                * no
          CALL      RLPTMAS1                     * read master file with lock
          BRANCH    OVRCD,UPEM9000,UPEM9500
          CALL      RDPMPX21
          BRANCH    OVRCD,UPEM9000,UPEM9500
          PACK      OLDDEATH,PDECDTE,PTMAUKDD,PMPXDETY,PTMADCNO,SP70 *Death det.
          MOVE      PMPXRHC1,SAVEPHCP       * Save variable for HCP Audit
          MOVE      PMPXRH1G,SAVEPRAC       * Save variable for HCP Audit
          MOVE      PMPXR1GC,SAVEPCTR       * Save variable for HCP Audit
          MOVE      PMPXSN16,SAVESN16       * save Status Indicator 16
          MOVE      PMPXABRG,SAVXABRG       * Save aboriginality for EWDARD
          CALL      SVMAS000
          CALL      ACTMSAV
          CALL      SAVESVHM
          MOVE      PFUNDH,SAVPFUND         * Save hfund for expected payor
          MOVE      PMPXPEML,SPPEML         * save email for prev adress check
          CALL      SJGSAV00
.
          IF        PREVADDR=1
            CALL      UPAD0000              * update previous address file
          ENDIF
.
          MOVE      EMVILOCN,SAVELOCN          * Save original location
.
          MOVE      EMVIS006,NEWLOCAT
          CALL      RETL0000                   * Retain patient prev location
.
          MATCH     Z70,UPDFIELD
          GOTO      UPEM0070 IF EQUAL
.
          MATCH     SP70,UPDFIELD
          GOTO      UPEM0070 IF EQUAL
.
          MATCH     "19",UPDFIELD
          IF        @EQUAL
            MATCH     PMSVX122,PMVXFVIO               * FDV
            IF        !@EQUAL
              PACK    UPDVALUE,FDVUPDT,PMVXFVIO,SP70
              MOVE    PMSVX122,PMVXFVIO
              PACK    NEWVALUE,FDVUPDT,PMVXFVIO,SP70
            ENDIF
            GOTO    UPEM0070
          ENDIF
.
          CALL      FMADTD00                  * format arrival and triage dates
.
          MATCH     "01",UPDFIELD
          IF        @EQUAL
            PACK     UPDVALUE,EMVIDATE,EMVITIME,SP70
            MATCH     Z70,EMVIS001
            IF        !@EQUAL & !@EOS
              MATCH     SP70,EMVIS001
              IF        !@EQUAL & !@EOS
                MOVE      EMVIS001,EMVIDATE
              ENDIF
            ENDIF
            MATCH     Z70,EMVIS002
            IF        !@EQUAL
              MOVE      EMVIS002,EMVITIME
            ENDIF
            PACK     NEWVALUE,EMVIDATE,EMVITIME,SP70
            GOTO     UPEM0075
          ENDIF
.
          MATCH     "02",UPDFIELD
          IF        @EQUAL
            PACK      UPDVALUE,EMVITRDT,EMVITRTM,SP70
            MATCH     Z70,EMVIS128
            IF        !@EQUAL & !@EOS
              MATCH     SP70,EMVIS128
              IF        !@EQUAL & !@EOS
                MOVE      EMVIS128,EMVITRDT
              ELSE
                PACK    EMVITRDT,SP70
              ENDIF
            ENDIF
.
            MATCH     Z70,EMVIS129
            IF        !@EQUAL
              MOVE      EMVIS129,EMVITRTM
            ENDIF
            PACK      NEWVALUE,EMVITRDT,EMVITRTM,SP70
            GOTO      UPEM0075
          ENDIF
.
          MATCH     "03",UPDFIELD
          IF        @EQUAL
            PACK      UPDVALUE,EMVITRIG,SP70
            MATCH     Z70,EMVIS003
            IF        !@EQUAL
              MOVE      EMVIS003,EMVITRIG
              PACK      EMVITRIG,EMVITRIG,SP70
            ENDIF
            PACK      NEWVALUE,EMVITRIG,SP70
            GOTO      UPEM0075
          ENDIF
. 
          MATCH     "08",UPDFIELD
          IF        @EQUAL
            PACK      UPDVALUE,EMVITRNS,SP70
            MATCH     Z70,EMVIS127
            IF        !@EQUAL
              MOVE      EMVIS127,EMVITRNS
            ENDIF
            PACK      NEWVALUE,EMVITRNS,SP70
            GOTO      UPEM0075
          ENDIF
.
          MATCH     "11",UPDFIELD
          IF        @EQUAL
            PACK      UPDVALUE,EMVIUC29,SP70
            MATCH     Z70,EMVIS069
            IF        !@EQUAL
              MOVE      EMVIS069,EMVIUC29
            ENDIF
            PACK      NEWVALUE,EMVIUC29,SP70
            GOTO      UPEM0075
          ENDIF
.
          MATCH     "16",UPDFIELD
          IF        @EQUAL
            PACK      UPDVALUE,EMVIUD10,EMVIUT10,SP70
            MATCH     Z70,EMVIS080
            IF        !@EQUAL & !@EOS
              MATCH     SP70,EMVIS080
              IF        !@EQUAL & !@EOS
                MOVE      EMVIS080,EMVIUD10
              ELSE
                PACK    EMVIUD10,SP70
              ENDIF
            ENDIF
.
            MATCH     Z70,EMVIS090
            IF        !@EQUAL
              MOVE      EMVIS090,EMVIUT10
            ENDIF
            PACK      NEWVALUE,EMVIUD10,EMVIUT10,SP70
            GOTO      UPEM0075
          ENDIF
.
          MATCH     "17",UPDFIELD
          IF        @EQUAL
            PACK      UPDVALUE,EMVIAHDT,EMVIAHTM,SP70
            REP       "0 ",EMVIS156
            MATCH     Z70,EMVIS156
            IF        !@EQUAL & !@EOS
              MATCH     SP70,EMVIS156
              IF        !@EQUAL & !@EOS
                UNPACK    EMVIS156,DAY,ANS,MONTH,ANS,CENT,YEAR2
                CALL      MONNUM00
                PACK      EMVIS156,CENT,YEAR2,MONTH2,DAY
                REP       " 0",EMVIS156
                MATCH     ZERO8,EMVIS156
                IF        @EQUAL
                  PACK      EMVIAHDT,SP70
                ELSE
                  MOVE      EMVIS156,EMVIAHDT
                ENDIF
              ELSE
                PACK    EMVIAHDT,SP70
              ENDIF
            ENDIF
.
            MATCH     Z70,EMVIS157
            IF        !@EQUAL
              MOVE      EMVIS157,EMVIAHTM
            ENDIF
.
            PACK      NEWVALUE,EMVIAHDT,EMVIAHTM,SP70
            GOTO      UPEM0075
          ENDIF
.
          MATCH     "18",UPDFIELD
          IF        @EQUAL
            PACK      UPDVALUE,EMVIVSTY,EMVIVPLC,PTDAADTS,SP70
            MATCH     Z70,EMVIS177
            IF        !@EQUAL
              MOVE      EMVIS177,EMVIVSTY
            ENDIF
            MATCH     Z70,EMVIS178
            IF        !@EQUAL
              MOVE      EMVIS178,EMVIVPLC
            ENDIF
            MATCH     Z70,TRNSFSRC
            IF        !@EQUAL
              MOVE      TRNSFSRC,PTDAADTS
            ENDIF
            PACK      NEWVALUE,EMVIVSTY,EMVIVPLC,PTDAADTS,SP70
            GOTO      UPEM0075
          ENDIF
.
UPEM0070  CALL      INTB0000                     * Before date integrity audit 
.
          CALL      STVIS000                     * store cgi params in file vars
.
          CALL      INTC0000                     * After data integrity audit
.
UPEM0075  CALL      CTRN0000                     * Check transfer source
          BRANCH    EXIT,UPEM9700
.
          CALL      CTSR0000                     * Check transfer destination
          BRANCH    EXIT,UPEM9700
.
          IF        CALCWAIT=1
            CALL      UPDURT00              * recalculate waiting time for
            MOVE      WAITTIME,EMVIDURN     * update discharge
          ENDIF
.
          CALL      CHKTRD00                * Check Triage Dte isn't b4 arrival
          BRANCH    EXIT,UPEM9700
.
          CALL      DATEVL00
          BRANCH    EXIT,UPEM9700
.
          CALL      VLSEX000                * Validate sex. Can only be Indeter
          BRANCH    EXIT,UPEM9700           * if age less than 90 days
.
.         Initialise the HL7 Trigger ID so we can tell later if the
.         visit was registered or updated
.
          MOVE      ZERO,HL7TRGID 
          MOVE      ZERO,ACCAUDCK
.
          MOVE      EMVIADMN,KEY8
          CALL      RAEMVIS1
          IF        OVRCD=1
            CALL      WREMVIS1
            CALL      WRCPAT00               * write to current patient table
.
.           Set HL7 Trgger ID for broadcast registration message triggered
.           later after the pmsvx1af write/update
.
            MOVE      FOUR,HL7TRGID
          ELSE
            CALL      UPEMVIS1               * update Emergency visit record
            MATCH     SAVEAMBL,EMVIAMBL
            IF        !@EQUAL
              CALL      WINP0000
            ENDIF  
            MATCH     SAVEUD09,EMVIUD09
            IF        !@EQUAL
              CALL      WINP0000
            ELSE
              MATCH     SAVEUT09,EMVIUT09
              IF        !@EQUAL
                CALL      WINP0000
              ENDIF
            ENDIF  
            CALL      WRCHA000               * write to emrchaaf if required
            CALL      WRCHB000               * write to emrchaaf if required
            CALL      DOCLMN00
            CALL      DELPAT00               * I CAR 23608
            IF        EMVISTAT = 2|EMVISTAT = 3
              IF        CCCNSVHM = 1
                OPEN      CCIEX7A1,"cciex7af"
                CALL      TRNSII00
                CLOSE     CCIEX7A1
              ENDIF
            ENDIF
.
.>>>>>>>    The broadcast trigger below has been removed as it looks like
.>>>>>>>    trigger 6 will also be executing the same message in all
.>>>>>>>    circumstances.
.
.           Broadcast update message
.           If this is a discharge, then don't send an A08 before sending
.           the A03
.
.           MATCH     "D ",FORMACTN
.           IF        !@EQUAL
.             CALL      PMIGTNID               * get national id for dgate write
.             MOVE      NMPNUMB,PTNINMPI
.             MOVE      FIVE,HL7TRGID
.             MOVE      SP8,HL7INCLD
.             PROC      DGCLICEC               * send update emr details
.           ENDIF
          ENDIF
.
          MOVE      EMVIURNO,PVIURNO             * Updating PATVISFD file
          MOVE      EMVIDATE,PVIDATE
          MOVE      EMVIADMN,PVIBILL
          MOVE      ONE,PVITYPE
          MOVE      EMVIDOCT,PVIDOCT
          MOVE      ONE,PVITRAN
          MOVE      SP30,PVISPAR
          MOVE      SP10,PVISITE
          MOVE      SP2,PVILOCK
          MOVE      PTYPE,PVIRESI           * I CAR 42055
.
          MOVE      PVIBILL,KEY8
          CALL      RDAVISA1
          IF        OVRCD=1
            CALL      WRVISA1              
            CALL      AEXP0000              * write adm based expected payors
          ELSE
            CALL      UPVISA1               * update visit record
          ENDIF
.
          CALL      CLDT0000                   * clear AAE fields
          CALL      UPDTA000                   * update AAE details fields
          PACK      KEY8,ADMISSNO
          CALL      RDADETA1
          IF        OVRCD=1
            CALL      WRDETA1              * write aae details record
          ELSE
            CALL      UPDETA1
          ENDIF
.
          CALL      MVVSCO00                * Save visit based coding
.
          CALL      ADDOBS00                * Write observation
          CALL      PLAB0000                * Print labels
          CALL      PFRM0000                * Print forms
.
          MOVE      EMVIADMN,PMVXVISN       * Updating visit extension file
          MOVE      EMVIDATE,PMVXVSDT

          MOVE      EMVIDOCT,PMVXDOCA
          MOVE      SP20,PMVXSPAR
          MOVE      PPOST,PMVXPOST
.
          MATCH     Z70,PMSVX010
          IF        !@EQUAL
            MOVE      PMSVX010,PMVXINGP    * Inform GP
          ENDIF
.
          MATCH     PMSVX045,Z70           * Weight
          IF        !@EQUAL
            SQUEEZE   PMSVX045
            MOVE      ZERO,F6P2
            MOVE      PMSVX045,F6P2
            MULT      "100",F6P2
            MOVE      F6P2,PMVXPWGT
          ENDIF
.
          MATCH     Z70,PMSVX075
          IF        !@EQUAL
            MOVE      PMSVX075,PMVXPICD    * ICD10 Provisional Code
          ENDIF
.
          MATCH     Z70,PMSVX079
          IF        !@EQUAL
            MOVE      PMSVX079,PMVXEMPL    * Employment Status Cat KD
          ENDIF
.
          MATCH     Z70,PMSVX091
          IF        !@EQUAL
            MOVE      PMSVX091,PMVXUSAC    * Usual Accommodation
          ENDIF
.
          MATCH     Z70,PMSVX112
          IF        !@EQUAL
            MOVE      PMSVX112,PMVXSTRA    * Transport SOR (Cat.SI)
          ENDIF
.
          MATCH     Z70,PMSVX122
          IF        !@EQUAL
            MOVE      PMSVX122,PMVXFVIO    * Family Violence 
          ENDIF
.
          MATCH     Z70,PMSVX125
          IF        !@EQUAL
            MOVE      PMSVX125,PMVXUDF7    * UDF 7
          ENDIF
.
          MATCH     Z70,PMSVX128
          IF        !@EQUAL
            MOVE      PMSVX128,PMVXUD10
          ENDIF
.
          MATCH     Z70,PMSVX129
          IF        !@EQUAL
            MOVE      PMSVX129,PMVXUD11
          ENDIF
.
          MATCH     Z70,PMSVX135
          IF        !@EQUAL
            MOVE      PMSVX135,PMVXNWHC    * Usual Accommodation
          ENDIF
.
          MATCH     Z70,PMSVX141
          IF        !@EQUAL
            MOVE      PMSVX141,PMVXFSRC    * Funding Source     
          ENDIF
.
          CALL      GTASGC00               * SLA/ASGC code
.
          CALL      SH7VP000           * Save PMI HL7 visit trigger variables
          CALL      UPVPMI00                * PMI extension table
          MOVE      EMVIURNO,PMPXURNO
          PACK      KEY8,PMPXURNO,SP70
          CALL      RAPMPX21
          IF        OVRCD=1
            CALL      WRPMPX21
          ELSE 
            CALL      UPPMPX21
            CALL      WESIS000
          ENDIF
          CALL      CH7VP000           * Check for PMI HL7 visit triggers
.
          CALL      UPALIA00             * write new alias for Preferred Name
.
          MOVE      PMPXABRG,PMVXABRG      * Set Resident Status
          MOVE      PMPXINTR,PMVXINTR      * Interpreter required
          MOVE      PMPXLNG1,PMVXLNG1      * Preferred Language 1
          PACK      KEY3,EMVISITE,SP70
          CALL      RDEMSIT1
          IF        OVRCD<>1
            PACK      PMVXMHOS,EMSTHSNO,SP70
          ENDIF
          MOVE      PMVXVISN,KEY8
          CALL      RAPMVX11
          IF        OVRCD=1
            MOVE      SP70,PMVXPOEC
            MOVE      SP70,PMVXPILC
            PACK      PMVXCDTE,CCC,CYY,CMM,CDD
            REP       " 0",PMVXCDTE
            CLOCK     TIME,PMVXCTIM
            MOVE      USERID,PMVXWEBC
            CALL      WRPMVX11
          ELSE
            PACK      PMVXLUPD,CCC,CYY,CMM,CDD
            REP       " 0",PMVXLUPD
            CLOCK     TIME,PMVXLUPT
            MOVE      USERID,PMVXWEBU
            CALL      UPPMVX11              * write visit extension record
          ENDIF

          PACK      KEY11,ADMISSNO,SAVVCOMP,SP70                
          CALL      RDPMEXT1

          IF        OVRCD=0 
            MATCH     "0",PMEXT049          * motor vehicle accident NO
            IF        @EQUAL
              PACK      PMEXCLAM,EMVICOMP,SP70                 
              MOVE      PMEXT049,PMEXUYN1
              CALL      UPPMEXT1
            ENDIF                
.
            MATCH     "1",PMEXT049          * motor vehicle accident YES
            IF        @EQUAL
              MATCH     EMVICOMP,SAVVCOMP
              GOTO      UPEM0110 IF EQUAL   * CLaim Code UPDated NO
              MOVE      SP70,PMEXICOD       * clear Insurer Code 
              GOTO      UPEM0110
              
UPEM0110      PACK      PMEXCLAM,EMVICOMP,SP70                 
              MOVE      PMEXT049,PMEXUYN1
              CALL      UPPMEXT1
            ENDIF
          ENDIF
.
.         Trigger a Broadcast message if this was a registration
.
          IF        HL7TRGID = 4
            CALL      PMIGTNID             * get national id for dgate write
            MOVE      NMPNUMB,PTNINMPI
            MOVE      SP8,HL7INCLD
            PROC      DGCLICAE             * send emr visit message
          ENDIF
.
          CALL      CLRDCM00               * Clears Freetext Variables
          COMPARE   ONE,DIAGCMFL
          CALL      UDIAGC00 IF EQUAL
.
          MOVE      ADMISSNO,KEY8
          CALL      UPEMVIS1                     * update emr visit record
          CALL      ULEMVIS1                     * unlock emr visit record
.
.         Broadcast update message
.         If this is a discharge, then don't send an A08 before sending the A03
.
          MATCH     "D ",FORMACTN
          IF        !@EQUAL
            CALL      PMIGTNID                 * get national id for dgate write
            MOVE      NMPNUMB,PTNINMPI
            MOVE      SIX,HL7TRGID
            MOVE      SP8,HL7INCLD
            PROC      DGCLICEC                   * send update emr details
          ENDIF
.
.--------Added by HPS------------------------
          MATCH     SP70,WEBUSEID
          IF        !@EQUAL
            UNPACK    UPDATEKY,ADMISSNO,DIM8,DIM6
            PACK      UPDATEKY,ADMISSNO,DIM8,DIM6,WEBUSEID,SP70
          ENDIF
          IF        SVMGCMMT<>1
            CALL      UPVCM000
          ENDIF
.--------------------------------------------
.
          MATCH     "C2",FORMACTN
          GOTO      UPEM0120 IF NOT EQUAL * Not from Update discharged screen
.
          COMPARE   TWO,EMVISTAT
          GOTO      UPEM0120 IF EQUAL     * Discharged incomplete
          COMPARE   THREE,EMVISTAT
          GOTO      UPEM0120 IF EQUAL     * Discharged complete
          GOTO      UPEM0130
.
UPEM0120  CALL      DEADST00              * Check for deceased indicators
.
UPEM0130  CALL      PMIU0000                * update record and unlock
          BRANCH    EXIT,UPEM9999
.
          MATCH     "D ",FORMACTN
          IF        !@EQUAL
            CALL      CHGAE000              * check if still chargeable
          ELSE
            IF        EMVISTAT=2 | EMVISTAT=3
              CALL      ABFX0000            * Check for ABF funding
              IF        EXIT=1
                CALL      CHGAE000          * Disc.ABF-check if still chargeable
              ENDIF
            ENDIF
          ENDIF
.
          CALL      DEAPOL00                * Update Patient Death Polling Table
.
          CALL      UPRES000
          CALL      UPCLMD00               
          BRANCH    EXIT,UPEM9999
.
          MATCH     ANSV,CLAIMTYP
          IF        @EQUAL
            MATCH     ZEROUR,PURNO
            IF        !@EQUAL
              PACK      KEY8,PURNO,SP70
              CALL      RDMAST1
              BRANCH    OVRCD,UPEM0200
              MOVE      VCLMNO,PREPAT
              CALL      UPMAST1
              CALL      WESIS000
            ENDIF
          ENDIF
.
UPEM0200  PACK      SAVELOCN,SAVELOCN,SP70
          PACK      EMVILOCN,EMVILOCN,SP70
.
.         Check if death details changed
.
          PACK      KEY30,PDECDTE,PTMAUKDD,PMPXDETY,PTMADCNO,SP70 *Death det.
          PACK      NEWDEATH,KEY30,SP70
.
.         If patient is discharged we don't need to write the 'Move Location'
.         audit record...
.
          IF        EMVISTAT = 2 | EMVISTAT = 3
            GOTO      UPEM0300              * Discharged; skip
          ENDIF
.
          MATCH     SAVELOCN,EMVILOCN
          IF        !@EQUAL
            MOVE      UPDTTYPE,SAVUPDTY     * Save update type
            MOVE      "MOVEL",UPDTTYPE      * Write change of location history
            CALL      WRTHIS00
            MOVE      SAVUPDTY,UPDTTYPE     * Restore update type
          ENDIF
. 
          MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRTHIS00
          ENDIF
.
UPEM0300  IF        CCCNSVHM = 1
            OPEN      CCIEX7A1,"cciex7af"
            CALL      TRNSII00
            CLOSE     CCIEX7A1
          ENDIF
.
          CALL      SUPD0000                * Supervisor update used
          CALL      UEXP0000                * Update expected payor
.
          MATCH     "011",TEMPLATE
          IF        @EQUAL
            MATCH     "1",MRCNRRED
            IF        @EQUAL
              CALL      CRMED000
            ENDIF
          ENDIF
.
          MATCH     "1",HEAINDIC
          IF        @EQUAL
            CALL      PDGH0000 
            CALL      EMDT0000              * Diagnosis Free Text Update
          ELSE
            CALL      PDIG0000                * Write Primary Diagnosis
            CALL      EMDT0000              * Diagnosis Free Text Update
          ENDIF
.
          CALL      DISVAL00
          BRANCH    EXIT,UPEM9999
          CALL      EMCMN000
          CALL      BEDN0000                * Update bed board/expected patient
.
          MATCH     "1",PTMXOSMS            * Opt out of SMS
          IF        @EQUAL
            CALL      OSMS0000              * Write opt of of SMS record
          ELSE
            CALL      DSMS0000              * Delete opt of of SMS record
          ENDIF
.
          CALL      WWAHVC00
.
          CALL      WEDV0000                * Write EDWARD visit alteration
          CALL      WEDP0000                * Write EDWARD Presenting comp.
          CALL      CHEDW000                * Write EDWARD PMI detail changes
.
          MATCH     Z70,PMPXI110
          IF        !@EQUAL
            MATCH     PMPXI110,SAVESN16
            IF        !@EQUAL
              CALL      MHRI0000          * Update current/future episodes with
            ENDIF                         * PMI level MyhealthRecord value
          ENDIF
.
          CALL      AUTS0000           * Add/Update Telehealth Services record
          CALL      TSRC0000           * Write transfer destination
.
          MOVE      ZERO,EXIT
          GOTO      UPEM9999                * finished updating
.
UPEM1000  MOVE      ADMISSNO,KEY8
          CALL      RLEMUNK1                * read unknown pat record with lock
          BRANCH    OVRCD,UPEM9000,UPEM9500
          CALL      SAVESVHM
.
          MOVE      EMVILOCN,SAVELOCN          * Save original location
.
          MOVE      EMVIS006,NEWLOCAT
          CALL      RETL0000                   * Retain patient prev location
.
          CALL      STVIS000
.
          CALL      CTRN0000                     * Check transfer source
          BRANCH    EXIT,UPEM9700
.
          CALL      CTSR0000                     * Check transfer destination
          BRANCH    EXIT,UPEM9700
.
          CALL      DATEVL00
          BRANCH    EXIT,UPEM9700
.
          IF        CALCWAIT=1
            CALL      UPDURT00              * recalculate waiting time for
            MOVE      WAITTIME,EMVIDURN     * update discharge
          ENDIF
.
          CALL      UPEMVIS1
.
          CALL      ULEMVIS1
.
          MOVE      EMVIADMN,PMVXVISN       * Updating visit extension file
          MOVE      EMVIDATE,PMVXVSDT

          MOVE      EMVIDOCT,PMVXDOCA
.
          MATCH     Z70,PMSVX010
          IF        !@EQUAL
            MOVE      PMSVX010,PMVXINGP    * Inform GP
          ENDIF
.
          MATCH     PMSVX045,Z70           * Weight
          IF        !@EQUAL
            SQUEEZE   PMSVX045
            MOVE      ZERO,F6P2
            MOVE      PMSVX045,F6P2
            MULT      "100",F6P2
            MOVE      F6P2,PMVXPWGT
          ENDIF
.
          MATCH     Z70,PMSVX075
          IF        !@EQUAL
            MOVE      PMSVX075,PMVXPICD    * ICD10 Provisional Code
          ENDIF
.
          MATCH     Z70,PMSVX079
          IF        !@EQUAL
            MOVE      PMSVX079,PMVXEMPL    * Employment Status Cat KD
          ENDIF
.
          MATCH     Z70,PMSVX091
          IF        !@EQUAL
            MOVE      PMSVX091,PMVXUSAC    * Usual Accommodation
          ENDIF
.
          MATCH     Z70,PMSVX112
          IF        !@EQUAL
            MOVE      PMSVX112,PMVXSTRA    * Transport SOR (Cat.SI)
          ENDIF
.
          MATCH     Z70,PMSVX122
          IF        !@EQUAL
            MOVE      PMSVX122,PMVXFVIO    * Family Violence 
          ENDIF
.
          MATCH     Z70,PMSVX125
          IF        !@EQUAL
            MOVE      PMSVX125,PMVXUDF7    * UDF 7
          ENDIF
.
          MATCH     Z70,PMSVX128
          IF        !@EQUAL
            MOVE      PMSVX128,PMVXUD10
          ENDIF
.
          MATCH     Z70,PMSVX129
          IF        !@EQUAL
            MOVE      PMSVX129,PMVXUD11
          ENDIF
.
          MATCH     Z70,PMSVX135
          IF        !@EQUAL
            MOVE      PMSVX135,PMVXNWHC    * Usual Accommodation
          ENDIF
.
          MATCH     Z70,PMSVX141
          IF        !@EQUAL
            MOVE      PMSVX141,PMVXFSRC    * Funding Source
          ENDIF
.
          PACK      KEY3,EMVISITE,SP70
          CALL      RDEMSIT1
          IF        OVRCD<>1
            PACK      PMVXMHOS,EMSTHSNO,SP70
          ENDIF
.
          MOVE      PMVXVISN,KEY8
          CALL      RAPMVX11
          IF        OVRCD=1
            PACK      PMVXCDTE,CCC,CYY,CMM,CDD
            REP       " 0",PMVXCDTE
            CLOCK     TIME,PMVXCTIM
            MOVE      USERID,PMVXWEBC
            CALL      WRPMVX11
          ELSE
            PACK      PMVXLUPD,CCC,CYY,CMM,CDD
            REP       " 0",PMVXLUPD
            CLOCK     TIME,PMVXLUPT
            MOVE      USERID,PMVXWEBU
            CALL      UPPMVX11              * write visit extension record
          ENDIF
.
          PACK      KEY11,ADMISSNO,SAVVCOMP,SP70                
          CALL      RDPMEXT1
          IF        OVRCD=0
            MATCH     "0",PMEXT049          * motor vehicle accident NO
            IF        @EQUAL
              MOVE      PMEXT049,PMEXUYN1
              PACK      PMEXCLAM,EMVICOMP,SP70                 
              CALL      UPPMEXT1
            ENDIF
.
            MATCH     "1",PMEXT049          * motor vehicle accident YES
            IF        @EQUAL
              MATCH     EMVICOMP,SAVVCOMP
              GOTO      UPEM1010 IF EQUAL   * CLaim Code UPDated NO
              MOVE      SP70,PMEXICOD       * clear Insurer Code 
              GOTO      UPEM1010

UPEM1010      MOVE      PMEXT049,PMEXUYN1  
              PACK      PMEXCLAM,EMVICOMP,SP70                 
              CALL      UPPMEXT1
            ENDIF
          ENDIF
.
          CALL      CLPATMAS                * force zero U/R
.
.         Broadcast update message
.
          CALL      PMIGTNID               * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      SEVEN,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                * send update emr details
.
          IF        CALCWAIT=1
            MOVE      EMVIADMN,KEY8
            CALL      RLAEDEA1                * read and lock record
            IF        OVRCD=0                 
              MOVE      WAITTIME,ADADURN      * update waiting duration
              CALL      UPDETA1               * update a&e details record
              CALL      UUAEDEA1              * unlock record
            ENDIF
          ENDIF
.
          CALL      CLRDCM00               * Clears Freetext Variables
          COMPARE   ONE,DIAGCMFL
          CALL      UDIAGC00 IF EQUAL
.
          MATCH     SP70,WEBUSEID
          IF        !@EQUAL
            UNPACK    UPDATEKY,ADMISSNO,DIM8,DIM6
            PACK      UPDATEKY,ADMISSNO,DIM8,DIM6,WEBUSEID,SP70
          ENDIF
          IF        SVMGCMMT<>1
            CALL      UPVCM000
          ENDIF
.
          CALL      MVVSCO00                * Save visit based coding
.
          CALL      ADDOBS00                * Write observation
          CALL      PLAB0000                * Print labels
          CALL      PFRM0000                * Print forms
.
          MATCH     "1",UNKPATUP
          IF        @EQUAL
            MOVE      EMUNK001,EMUNDET1
            MOVE      EMUNK002,EMUNDET2
            MOVE      EMUNK003,EMUNSEX
            MOVE      EMUNK004,EMUNBDAT
          ENDIF
.
          CALL      UPEMUNK1                * update unknown patient record
          CALL      ULEMUNK1                * unlock unknown patient record 
.
          CALL      UPCLMD00
          BRANCH    EXIT,UPEM9999
.
.         If patient is discharged we don't need to write the 'Move Location'
.         audit record...
.
          IF        EMVISTAT = 2 | EMVISTAT = 3
            GOTO      UPEM1020              * Discharged; skip
          ENDIF
.
          MATCH     SAVELOCN,EMVILOCN
          IF        !@EQUAL
            MOVE      UPDTTYPE,SAVUPDTY     * Save update type
            MOVE      "MOVEL",UPDTTYPE      * Write change of location history
            CALL      WRTHIS00
            MOVE      SAVUPDTY,UPDTTYPE     * Restore update type
          ENDIF
.
          MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRTHIS00
          ENDIF
.
UPEM1020  IF        CCCNSVHM = 1
            OPEN      CCIEX7A1,"cciex7af"
            CALL      TRNSII00
            CLOSE     CCIEX7A1
          ENDIF
.
          CALL      SUPD0000                * Supervisor update used
.
          MATCH     "1",HEAINDIC
          IF        @EQUAL
            CALL      PDGH0000
          ELSE
            CALL      PDIG0000                * Write Primary Diagnosis
          ENDIF
.
          CALL      WWAHVC00
.
          PROC      EMRDRCHR                * Update Visit Billing Complete
.
          CALL      WEDV0000                * Write EDWARD visit alteration
          CALL      WEDP0000                * Write EDWARD Presenting comp.
.
          MATCH     Z70,PMPXI110
          IF        !@EQUAL
            MATCH     PMPXI110,SAVESN16
            IF        !@EQUAL
              CALL      MHRI0000          * Update current/future episodes with
            ENDIF                         * PMI level MyhealthRecord value
          ENDIF
.
          CALL      AUTS0000           * Add/Update Telehealth Services record
          CALL      TSRC0000           * Write transfer destination
.
          MOVE      ZERO,EXIT
          GOTO      UPEM9999                * finished updating
.
UPEM8000  MOVE      "Patient status has changed (refresh screen)",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT 
          GOTO      UPEM9999
.
UPEM9000  MOVE      "Patient record not found",WEBTITLE
          CALL      WEBERR00
          MOVE      URNUMBER,KEY8
          CALL      UUPTMAS1
          MOVE      ADMISSNO,KEY8
          CALL      ULEMVIS1
          CALL      ULEMUNK1
          MOVE      ONE,EXIT
          GOTO      UPEM9999
.
UPEM9100  MOVE      "Location Already occupied",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPEM9999
.
UPEM9500  MOVE      "Record locked by another user",WEBTITLE
          CALL      WEBERR00
          MOVE      URNUMBER,KEY8
          CALL      UUPTMAS1
          MOVE      ADMISSNO,KEY8
          CALL      ULEMVIS1
          CALL      ULEMUNK1
          MOVE      ONE,EXIT
          GOTO      UPEM9999
.
UPEM9600  MOVE      ADMISSNO,KEY8
          CALL      ULEMVIS1
          CALL      ULEMUNK1
          MOVE      URNUMBER,KEY8
          CALL      UUPTMAS1
          MOVE      ZERO,EXIT
          GOTO      UPEM9999
.
UPEM9700  MOVE      ADMISSNO,KEY8
          CALL      ULEMVIS1
          CALL      ULEMUNK1
          MOVE      URNUMBER,KEY8
          CALL      UUPTMAS1
          MOVE      ONE,EXIT
          GOTO      UPEM9999
.
UPEM9999  CLOSE     VSCTTFIL,DELETE    * Delete temp file created by CLRVCM00
          RETURN
+
.------------------------------------------------------------
. Format arrival date and triage date cgi's for supervisor post
.------------------------------------------------------------
FMADTD00  MATCH     Z70,EMVIS001
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS001
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS001,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS001,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS001
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS128
          MATCH     Z70,EMVIS128
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS128
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS128,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS128,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS128
             ENDIF
           ENDIF
.
          REP       "0 ",EMVIS080
          MATCH     Z70,EMVIS080
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS080
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS080,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS080,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS080
             ENDIF
           ENDIF
.
FMADTD999  RETURN
.------------------------------------------------------------
. Update Emergency Field Change Audit if required
.------------------------------------------------------------
WRCHA000  MATCH     Z70,UPDFIELD
          GOTO      WRCHA999 IF EQUAL
.
          MATCH     SP70,UPDFIELD
          GOTO      WRCHA999 IF EQUAL
.
          MATCH     Z70,REASONFC
          GOTO      WRCHA999 IF EQUAL
.
          PACK      EMCHVISN,ADMISSNO,SP70 
          CALL      IBACLOCK
          PACK      EMCHDATE,CCC,CYY,CMM,CDD
          REPLACE   " 0",EMCHDATE
          CLOCK     TIME,EMCHTIME
          PACK      EMCHUPTY,UPDFIELD,SP70
          PACK      EMCHREAS,REASONFC,SP70
.
          MATCH     SP70,WEBUSEID
          IF        @EQUAL
            MOVE      USERID,EMCHUSID
          ELSE
            MOVE      WEBUSEID,EMCHUSID
          ENDIF
.
          PACK      EMCHOVAL,UPDVALUE
          PACK      EMCHCVAL,NEWVALUE
.
          PACK      KEY24,EMCHVISN,EMCHDATE,EMCHTIME,SP70
          CALL      RDEMCHA1
          IF        OVRCD=1
            CALL      WREMCHA1
          ENDIF
.
WRCHA999  RETURN
.
.------------------------------------------------------------
. Update Emergency Field Change Audit for first change
. on a page if required
.------------------------------------------------------------
WRCHB000  MATCH     Z70,UPDFLD01
          GOTO      WRCHB100 IF EQUAL
.         
          MATCH     SP70,UPDFLD01
          GOTO      WRCHB100 IF EQUAL
.
          PACK      EMCHVISN,ADMISSNO,SP70
          CALL      IBACLOCK
          PACK      EMCHDATE,CCC,CYY,CMM,CDD
          REPLACE   " 0",EMCHDATE
          CLOCK     TIME,EMCHTIME
          PACK      EMCHUPTY,UPDFLD01,SP70
          PACK      EMCHREAS,REASFC01,SP70
          MOVE      USERID,EMCHUSID
          PACK      EMCHOVAL,UPDVAL01
          PACK      EMCHCVAL,NEWVAL01
.
          PACK      KEY24,EMCHVISN,EMCHDATE,EMCHTIME,SP70
          CALL      RDEMCHA1
          IF        OVRCD=1
            CALL      WREMCHA1
          ENDIF
.
WRCHB100  MATCH     Z70,UPDFLD02
          GOTO      WRCHB999 IF EQUAL
.
          MATCH     SP70,UPDFLD02
          GOTO      WRCHB999 IF EQUAL
.
          PACK      EMCHVISN,ADMISSNO,SP70
          CALL      IBACLOCK
.
          PACK      EMCHDATE,CCC,CYY,CMM,CDD
          REPLACE   " 0",EMCHDATE
          CLOCK     TIME,EMCHTIME       
.
          UNPACK    EMCHTIME,HOUR,D1,MIN,D1,SEC
          PACK      XDATTIME,EMCHDATE,HOUR,MIN,SEC,SP70
          CALL      ASEC0000                     * add 1 sec to date/time
                                                 * to stop duplicate key
          UNPACK    XDATTIME,EMCHDATE,HOUR,MIN,SEC
          PACK      EMCHTIME,HOUR,COLON,MIN,COLON,SEC
.
          PACK      EMCHUPTY,UPDFLD02,SP70
          PACK      EMCHREAS,REASFC02,SP70
          MOVE      USERID,EMCHUSID
          PACK      EMCHOVAL,UPDVAL02
          PACK      EMCHCVAL,NEWVAL02
.
          PACK      KEY24,EMCHVISN,EMCHDATE,EMCHTIME,SP70
          CALL      RDEMCHA1
          IF        OVRCD=1
            CALL      WREMCHA1
          ENDIF
.
WRCHB999  RETURN
.
.*****************************************************************************
.*                            ASEC0000                                       *
.*               Add one second to date/time                                 *
.* Requires: XDATTIME - Date/time value (ccyymmddhhmmss)                     *
.* Returns : XDATTIME - Date/time value (ccyymmddhhmmss) incremented by 1 sec*
.*****************************************************************************
ASEC0000  UNPACK    XDATTIME,DIM8,HOURTM,MINTIME,SECTIME
          MATCH     "59",SECTIME
          IF        !@EQUAL
            MOVE      SECTIME,FORM2              * just increment seconds
            ADD       ONE,FORM2
            MOVE      FORM2,SECTIME
            REP       " 0",SECTIME
            PACK      XDATTIME,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      ASEC9999
          ENDIF
.
.         The seconds were "59", so reset these to "00" and increment the
.         minutes
.
          MOVE      "00",SECTIME
          MATCH     "59",MINTIME
          IF        !@EQUAL
            MOVE      MINTIME,FORM2              * just increment minutes
            ADD       ONE,FORM2
            MOVE      FORM2,MINTIME
            REP       " 0",MINTIME
            PACK      XDATTIME,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      ASEC9999
          ENDIF
.
.         The minutes were "59", so reset these to "00" and increment the
.         hours
.
          MOVE      "00",SECTIME
          MOVE      "00",MINTIME
          MATCH     "23",HOURTM
          IF        !@EQUAL
            MOVE      HOURTM,FORM2              * just increment hours
            ADD       ONE,FORM2
            MOVE      FORM2,HOURTM
            REP       " 0",HOURTM
            PACK      XDATTIME,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      ASEC9999
          ENDIF
.
.         The hours were "59", so reset these to "00" and increment the
.         date
.
          MOVE      "00",SECTIME
          MOVE      "00",MINTIME
          MOVE      "00",HOURTM
.
.         We need to increment the date by 1 day
.
          UNPACK    DIM8,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON                       * get julian day
          ADD       ONE,JULDAY                   * increment julian day
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON                       * get new date
          PACK      XDATTIME,CC,YY,MM,DD,ZERO6
          REP       " 0",XDATTIME
.
ASEC9999  RETURN
.
.------------------------------------------------------------
. Set the before values for the data integrity audit     
.------------------------------------------------------------
INTB0000  MATCH     "07",UPDFLD01
          IF        @EQUAL
            PACK      UPDVAL01,EMVIDDAT,EMVIDTIM,SP70
          ENDIF
.
          MATCH     "10",UPDFLD02
          IF        @EQUAL
            PACK      UPDVAL02,EMVIDSTA,SP70
          ENDIF
.
INTB9999  RETURN
.------------------------------------------------------------
. Set the changed values for the data integrity audit     
.------------------------------------------------------------
.
INTC0000  MATCH     "07",UPDFLD01
          IF        @EQUAL
            PACK      NEWVAL01,EMVIDDAT,EMVIDTIM,SP70
          ENDIF
.
          MATCH     "10",UPDFLD02
          IF        @EQUAL
            PACK      NEWVAL02,EMVIDSTA,SP70
          ENDIF
.
INTC9999  RETURN
.------------------------------------------------------------
. Get SLA/ASGC (govt local area code) from ibapostf
.------------------------------------------------------------
GTASGC00  MATCH     SP70,PPOST              * Exit if no post code
          GOTO      GTASGC99 IF EQUAL   
          GOTO      GTASGC99 IF EOS   
.
          MOVE      PPOST,D8
          SQUEEZE   D8
          MOVE      D8,F4
          MOVE      F4,D4
          REP       " 0",D4
          PACK      PPOST,D4,SP10
          PACK      KEY56,PPOST,PSUBRB,SP10,PADD4,SP70                *C-240184
          CALL      RDIBPOS1
          IF        OVRCD=0
            MOVE      IBPOASGC,PMVXASGC
          ELSE                                                        *I-240184
            PACK      KEY56,PPOST,PSUBRB,SP70
            CALL      RSIBPOS1
            CALL      RKIBPOS1
            BRANCH    OVRCD,GTASGC99
            MATCH     PPOST,IBPOPCOD
            IF        @EQUAL
              MATCH     PSUBRB,IBPOSUBR
              IF        @EQUAL
                MOVE      IBPOASGC,PMVXASGC
              ENDIF
            ENDIF
          ENDIF
.
GTASGC99  RETURN
.------------------------------------------------------------
.   Update address details save last address change for today
.------------------------------------------------------------
UPAD0000  PACK      PADATE,CCC,CYY,CMM,CDD
          REP       " 0",PADATE
          CLOCK     TIME,PATIME
.
          PACK      KEY24,PURNO,PADATE,PATIME
          CALL      RDPADD1                 * Read previous address file
          IF        OVRCD = 1
            MOVE      PURNO,PAURNO
            MOVE      SPADD1,PAADD1
            MOVE      SPADD2,PAADD2
            MOVE      SPSUBRB,PASUBR
            MOVE      SPADD4,PAADD4
            MOVE      SPPOST,PAPOST
            MOVE      SPTELEP,PATELEP
            MOVE      SPTELEB,PATELEB
            MOVE      SPCELL,PTPAMOBL
            MOVE      SPPEML,PTPAEMAL
            MOVE      SPOSMS,PTPAOSMS
            CALL      IBACLOCK
            PACK      PTPACDTE,CCC,CYY,CMM,CDD
            REPLACE   " 0",PTPACDTE
            CLOCK     TIME,PTPACTIM
            MOVE      USERID,PTPAWEBC
            MOVE      SP70,PTPALUPD
            MOVE      SP70,PTPALUPT
            MOVE      USERID,PTPAWEBU         * Updated by
            MOVE      SP70,PTPASPAR
            CALL      WRPADD1                 * Write to previous address file
          ELSE
            MOVE      PURNO,PAURNO
            MOVE      SPADD1,PAADD1
            MOVE      SPADD2,PAADD2
            MOVE      SPSUBRB,PASUBR
            MOVE      SPADD4,PAADD4
            MOVE      SPPOST,PAPOST
            MOVE      SPTELEP,PATELEP
            MOVE      SPTELEB,PATELEB
            MOVE      SPCELL,PTPAMOBL
            MOVE      SPPEML,PTPAEMAL
            MOVE      SPOSMS,PTPAOSMS
            CALL      IBACLOCK
            PACK      PTPALUPD,CCC,CYY,CMM,CDD
            REPLACE   " 0",PTPALUPD
            CLOCK     TIME,PTPALUPT
            MOVE      USERID,PTPAWEBU
            MOVE      SP70,PTPASPAR
            CALL      UPPADD1                 * Write to previous address file
          ENDIF
.
UPAD9999  RETURN
.------------------------------------------------------------
. Update Diagnosis Comments
.------------------------------------------------------------
UDIAGC00  MOVE      ADMISSNO,EMDCADMI      * Updating diagnosis comments
          PACK      KEY8,EMDCADMI,SP70
          CALL      RDEMDCM1
          IF        OVRCD=1
            MOVE      ADMISSNO,EMDCADMI      * Updating diagnosis comments
            CALL      ADDDIA00
            CALL      WREMDCM1
          ELSE
            MOVE      ADMISSNO,EMDCADMI      * Updating diagnosis comments
            CALL      ADDDIA00
            CALL      UPEMDCM1
          ENDIF
          RETURN
.
CHKHFN00  PACK      EMVIS017,EMVIS017,SP70
          PACK      EMVIS018,EMVIS018,SP70
          MATCH     Z70,EMVIS017
          GOTO      CHKHFN95 IF EQUAL
          MATCH     SP70,EMVIS017
          GOTO      CHKHFN95 IF EQUAL
          MATCH     Z70,EMVIS018
          GOTO      CHKHFN95 IF EQUAL
          MATCH     SP70,EMVIS018
          GOTO      CHKHFN95 IF EQUAL
          PACK      HCODE,EMVIS017,SP70
          MOVE      EMVIS018,HFTABL
          PACK      KEY14,HCODE,HFTABL,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,CHKHFN90
          GOTO      CHKHFN95 
.
CHKHFN90  MOVE      "Invalid Health Fund Table",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKHFN99 
CHKHFN95  MOVE      ZERO,EXIT
CHKHFN99  RETURN
.------------------------------------------------------------
. CHKDN000  Validate Doctor and Nurse Code      
.------------------------------------------------------------
CHKDN000  MOVE      ZERO,EXIT
.         
          MATCH     Z70,EMVIS007        * Check Doctor
          GOTO      CHKDN500 IF EQUAL
          GOTO      CHKDN500 IF EOS  
.
          PACK      KEY6,EMVIS007,SP70
          CALL      RDDOCT1
          BRANCH    OVRCD,CHKDN900
          BRANCH    DRSTAT,CHKDN910      
.
CHKDN500  MATCH     Z70,EMVIS130        * Check Nurse
          GOTO      CHKDN999 IF EQUAL
          GOTO      CHKDN999 IF EOS  
.
          MATCH     "1",EMCNURSE                * Use pmshcpaf for ED Nurse? 
          GOTO      CHKDN510 IF EQUAL           * Yes
.          
.         CONTROLF.EMCNURSE=0 - Use oprnuraf for nurse
          PACK      KEY6,EMVIS130,SP70          
          CALL      RDOPNUR1
          BRANCH    OVRCD,CHKDN920
.
          MOVE      ZERO,F1
          MOVE      OPNRSTAT,F1
          BRANCH    F1,CHKDN930
.
          GOTO      CHKDN999
. 
.         CONTROLF.EMCNURSE=1 - Use pmshcpaf for nurse
CHKDN510  PACK      KEY10,EMVIS130,SP70
          CALL      RDPMHCP1
          BRANCH    OVRCD,CHKDN920
.
          MOVE      ZERO,F1
          MOVE      PMHCSTTS,F1
          BRANCH    F1,CHKDN930
.
          GOTO      CHKDN999
.
CHKDN900  CLEAR     WEBTITLE
          APPEND    "Invalid Doctor Code - ",WEBTITLE
          APPEND    EMVIS007,WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKDN999 
.
CHKDN910  CLEAR     WEBTITLE
          APPEND    "Doctor Inactive - ",WEBTITLE
          APPEND    EMVIS007,WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKDN999 
.
CHKDN920  CLEAR     WEBTITLE
          APPEND    "Invalid Nurse Code - ",WEBTITLE
          APPEND    EMVIS130,WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKDN999 
.
CHKDN930  CLEAR     WEBTITLE
          APPEND    "Inactive Nurse Code - ",WEBTITLE
          APPEND    EMVIS130,WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKDN999 
.
CHKDN999  RETURN
.------------------------------------------------------------
. CLRDCM00  Clears Variables For EMRDCMFD       
.------------------------------------------------------------
CLRDCM00  MOVE      SP70,EMDCADMI
          MOVE      SP70,EMDCTXT1
          MOVE      SP70,EMDCTXT2
          MOVE      SP70,EMDCTXT3
          MOVE      SP70,EMDCTXT4
          MOVE      SP70,EMDCTXT5
          MOVE      SP70,EMDCTXT6
          MOVE      SP70,EMDCTXT7
          MOVE      SP70,EMDCTXT8
          MOVE      SP70,EMDCTXT9
          MOVE      SP70,EMDCLUID
          MOVE      SP70,EMDCSPAR
.
CLRDCM99  RETURN
.------------------------------------------------------------------------------
. MHRI0000 -Update current/future episode with new PMI level MyHR consent value
.------------------------------------------------------------------------------
.
MHRI0000  CALL      IBACLOCK                * get TODAY's date
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
.
          PACK      KEY24,URNUMBER,TODAY,SP70
          CALL      RSPTVIS2
MHRI0100  CALL      RKPTVIS2
          BRANCH    OVRCD,MHRI9999
.
          MATCH     URNUMBER,PVIURNO
          GOTO      MHRI9999 IF NOT EQUAL
.
          COMPARE   THREE,PVITYPE
          GOTO      MHRI0100 IF NOT EQUAL   * visit type is not inpatient
.
MHRI0200  PACK      KEY8,DPVIBILL,SP70
          CALL      RDPMVX11
          BRANCH    OVRCD,MHRI0100
.
          MATCH     PMPXI110,Z70
          IF        !@EQUAL
            MOVE      PMPXI110,PMVXUDF7
            CALL      UPPMVX11
          ENDIF
          GOTO      MHRI0100
.
MHRI9999  RETURN
+
.------------------------------------------------------------
. DISC0000  Discharge emergency Visit           
.------------------------------------------------------------
DISC0000  CALL      VERUSR00
          BRANCH    EXIT,DISC9999
.
          MATCH     SP70,DONTCHEC   * This will ignore the date/time check
          IF        @EQUAL                                                     
            CALL      CHKKEY00
            BRANCH    EXIT,DISC9999
          ENDIF
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1
          BRANCH    OVRCD,DISC9000
.
          CALL      CLRMSG00           * Clear Message Array
.
          MOVE      EMVISTAT,WINFLG
.
          COMPARE   ONE,SJOGSUMD            * Post of sjog summary screen
          IF        @EQUAL
            COMPARE   TWO,EMVISTAT          * Discharge Incomplete
            GOTO      DISC9600 IF EQUAL
          ENDIF
.
          BRANCH    EMVISTAT,DISC1000: * Current Patient
                             DISC1000: * Discharge Incomplete
                             DISC8000: * Patient already discharged
                             DISC8100  * Visit Cancelled
.
          MOVE      "Invalid Patient Status.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DISC9999
.
DISC1000  MOVE      EMVISTAT,CHGSTAT
          MOVE      ONE,CHGFLAG
.
          MATCH     "Y",SUPRFLAG         * Flag for supervisor discharge
          IF        @EQUAL 
            MOVE      "SVDIS",UPDTTYPE   * supervisor discharge update type
          ENDIF
.
          CALL      UPEM0000             * update all emr variables
          BRANCH    EXIT,DISC9999
.       
          MATCH     SP70,EMVIDOCT        * if patient discharged without
          IF        @EQUAL               
            MOVE      "Y",SUPRFLAG       * doctor we dont want any incompleates 
          ENDIF
.
.         MATCH     "Y",SUPRFLAG            * Flag for supervisor discharge
.         IF        !@EQUAL 
.           CALL      CHKINC00
.           CALL      CHKMAN00              * Check Mandatory Fields
.         ELSE
.           PACK      KEY8,DEMVIADM,SP70
.           CALL      DEEMINC1
.         ENDIF
.
          CALL      CHKINC00
          MOVE      ONE,OTSTFLAG
          MOVE      ZERO,OTAMFLAG
          CALL      CHKMAN00
          MOVE      ZERO,EXIT
.
DISC1005  MATCH     "Y",SUPRFLAG            * Flag for supervisor discharge
          IF        @EQUAL
            IF        MANDINUR=ONE
              PACK      KEY8,DEMVIADM,SP70
              CALL      RDEMINC1
              IF        OVRCD=0
                MOVE      ONE,EMIPDCOM
                MOVE      ZERO,EMIPNCOM
                MOVE      ONE,EMIPCCOM
                CALL      UPEMINC1            
              ENDIF
            ELSE
              IF        OTAMFLAG <> ONE
                PACK      KEY8,DEMVIADM,SP70
                CALL      DEEMINC1
              ENDIF
            ENDIF
          ENDIF
.
          BRANCH    MANDDISC,DISC9300       * discharge mandatory fields
.
          CALL      UPDURT00                * update waiting time
.
          MOVE      EMVIADMN,KEY8
          CALL      RLAEDEA1                * read and lock record
          BRANCH    OVRCD,DISC1010,DISC9500
.
          MOVE      WAITTIME,ADADURN        * update waiting duration
          CALL      UPDETA1                 * update a&e details record
          CALL      UUAEDEA1                * unlock record
.
DISC1010  CALL      DISLOC00                * Check Location to be Cleared
.
          IF        MSGARRNO>0
            MOVE      TWO,CHGSTAT
          ELSE
            MATCH     SP70,EMVILOCN
            IF        @EQUAL
              COMPARE   ONE,EMVIYN02        * C-Type is YES? I-41395
              IF        @EQUAL
                MOVE      TWO,CHGSTAT       * Incomplete Discharge
              ELSE
                MOVE      THREE,CHGSTAT
              ENDIF
            ELSE
              COMPARE   ONE,EMVIYN09
              IF        @EQUAL
                COMPARE   ONE,EMVIYN02      * C-Type is YES? I-41395
                IF        @EQUAL
                  MOVE      TWO,CHGSTAT     * Incomplete Discharge
                ELSE
                  MOVE      THREE,CHGSTAT
                ENDIF
              ELSE
                MOVE      FOUR,CHGSTAT
              ENDIF
            ENDIF
          ENDIF
.
DISC1100  MOVE      ADMISSNO,KEY8
          CALL      RLEMVIS1
          BRANCH    OVRCD,DISC9000,DISC9500
.
          IF        CHGSTAT=4
            MOVE      TWO,EMVISTAT
          ELSE
            MOVE      CHGSTAT,EMVISTAT
          ENDIF  
          MATCH     SP70,EMVIDDAT
          IF        @EQUAL
            CALL      IBACLOCK
            PACK      EMVIDDAT,CCC,CYY,CMM,CDD
            REP       " 0",EMVIDDAT
            PACK      EMVIDTIM,CTIMEIS
            REP       " 0",EMVIDTIM
          ENDIF
          MOVE      WAITTIME,EMVIDURN
          MOVE      PASSCODE,EMVIOPR2       * set operator
.
          MATCH     "Y",SUPRFLAG            * Flag for supervisor discharge
          IF        @EQUAL
            IF        MANDINUR=ONE
              MOVE      TWO,CHGSTAT           * mandatory diagnosis for nurse
.                                             * set in 178 EMRCHMAN
            ELSE
              MOVE      THREE,CHGSTAT         * If super discharge get rid of
            ENDIF
            MOVE      CHGSTAT,EMVISTAT        * Patient
            MOVE      SP70,EMVILOCN
            MOVE      SP70,EMVIPRLO
            MOVE      SP70,EMVIPRTM
          ENDIF
.
          CALL      DISLOC00                * Check Location to be Cleared
.
.         CAR 268547 ...
.
DISC6000  COMPARE   CABCPYTW,ONE
          GOTO      DISC7000 IF NOT EQUAL
.
.         Copy transfer ward number (from Transfer record - Admission) 
.         to EMR visit record (emrvisaf.EMRVIEWRD) if departure status has
.         HDP Equivalent of '2'.
.
	  PACK      KEY5,CODEED,EMVIDSTA
	  CALL      RDCODE1                    * code on file ?
	  IF        OVRCD=0
	    UNPACK    THCSCOD,DIM2
	    SQUEEZE   DIM2                     * get HDP Eq of departure status
	    MOVE      DIM2,FORM2
.
	    COMPARE   FORM2,TWO                * = '2'?
            GOTO      DISC7000 IF NOT EQUAL    * No; skip
.
            PACK      KEY30,EMVIPADM,Z70
	    CALL      RDSTRAN2             * position on last transfer record
DISC6100    CALL      RDPTRAN2
	    BRANCH    OVRCD,DISC7000
.
	    MATCH     EMVIPADM,DTADMN
	    GOTO      DISC7000 IF NOT EQUAL
.
            MATCH     "A",TMOVE
            GOTO      DISC6100 IF NOT EQUAL
.
            MOVE      TWARD,EMVIEWRD        * copy admission transfer ward
          ENDIF
.
DISC7000  CALL      UPEMVIS1                * update emr visit record
          IF        EMVISTAT = 2|EMVISTAT = 3
            IF        CCCNSVHM = 1
              OPEN      CCIEX7A1,"cciex7af"
              MATCH     SP10,EMVIPADM
              IF        @EQUAL
                MOVE      ANST,CLEXSTAT
                MOVE      ONE,CLEXTYPE
                MOVE      EMVIADMN,CLEXVISN
                PACK      KEY11,CLEXSTAT,CLEXTYPE,CLEXVISN
                CALL      RDCLEX71
                IF        OVRCD =1
                  CALL      WRCLEX71
                ENDIF
              ENDIF         
            ENDIF
            CLOSE     CCIEX7A1
          ENDIF
.
          MOVE      "2",UPSTATUS                 * Discharged
          CALL      UPEMTH00                     * update telehealth record
          CALL      DELPAT00                     * I CAR 23608
.
          CALL      ULEMVIS1                     * unlock visit record
.
          MATCH     SP3,EMVIDSTA
          IF        !@EQUAL
            CALL      DTHN0000               * set Death Notification Car 270065
          ENDIF
.
          MATCH     "1",PTCNMORG
          IF        @EQUAL
            CALL      MORGMN00                     * Morgue Management
          ENDIF
.
          CALL      BEDR0000                   * Ward/Bed Request
.
          MATCH     SP70,EMVIPADM              * Any linked IP visit
          GOTO      DISC7200 IF EQUAL
.
          COMPARE   THREE,PTCNHDPS             * Victoria only
          GOTO      DISC7200 IF NOT EQUAL
.
          PACK      KEY8,EMVIPADM,SP70         * Read linked IP visit
          CALL      RDMISS1
          BRANCH    OVRCD,DISC7200
.
          PACK      KEY8,EMVIADMN,SP70   * Restore ED visits pmsvx1af record
          CALL      RDPMVX11             * after the admission file read
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          COMPARE   ONE,ASTAT                 * Pre Admitted
          GOTO      DISC7200 IF NOT EQUAL
.
          MOVE      EMVIDDAT,ADATE            * Update pre adm date/time with
          MOVE      EMVIDTIM,ATIME            * the ED discharge date/time
          CALL      UPMISS1
.
.         Broadcast update message
.
DISC7200  CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      EIGHT,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICDI                     * send discharge emr details
.
          IF        CHGSTAT=2
             MOVE     "Patient discharged, incomplete mandatory fields",WEBTITLE
          ELSE 
             IF         CHGSTAT=3 
               MOVE     "Patient discharged",WEBTITLE
               PACK      KEY8,DEMVIADM,SP70
               CALL      DEEMINC1
             ELSE
               MOVE     "Patient discharged - Waiting on transfer",WEBTITLE
             ENDIF
          ENDIF
.
.         Schedule the Discharge Letter Job
.
          MATCH     "1",FAXITFLG
          CALL      EMRSCH00 IF EQUAL
.
.          MATCH     "1",PTCNUNET
.          IF        @EQUAL
.            MOVE      "01",KEY2                 * IHI Validation
.            PACK      KEY11,WBSEUID,SP70        * User ID
.            PACK      KEY50,EMVIURNO,SP70
.            CALL      WIPL0000                  * Write to polling table
.          ENDIF
.
          CALL      EMCMD000
.
          MOVE      EMVIPADM,AADMNO    * Use linked admno to look up MH visit
          CALL      DISMEH00           * Discharge Mental Health patient
.
          CALL      WEDV0000           * Write EDWARD visit alteration
.
          CALL      ABFX0000           * Check for ABF funding
          IF        EXIT=1
            CALL      CHGAE000         * Disc.ABF-check if still chargeable
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      DISC9999
.
DISC8000  CALL      ULEMVIS1
.
          MOVE      "Patient already discharged complete",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DISC9999
.
DISC8100  CALL      ULEMVIS1
.
          MOVE      "Emergency Visit has been cancelled.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DISC9999
.
DISC9000  MOVE      "Record not found - patient not discharged",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DISC9999
.
DISC9200  MOVE      "Zero U/R cannot be fully discharged",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DISC9999
.
DISC9300  CLEAR     WEBTITLE
          APPEND    "There are oustanding fields required ",WEBTITLE
          APPEND    "for discharge - Patient not discharged.",WEBTITLE
          RESET     WEBTITLE
.
.  Patient not discharged - delete discharge movement history record
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
          CALL      RPEMHIS1
          IF        OVRCD=0
            MATCH     ADMISSNO,EMHIVIS
            IF        @EQUAL
              MATCH     "DISCH",EMHIUPT
              IF        @EQUAL
                PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
                CALL      DEEMHIS1
              ENDIF
            ENDIF
          ENDIF
.
          IF        MAPVFLAG=1
            MOVE      "15",NEXTPAGE         * Discharge from Map view
          ELSE
            MOVE      "16",NEXTPAGE         * Not in map
          ENDIF
.
          REP       " +",URNUMBER
          REP       " +",ADMISSNO
          CLEAR     REDIRECT
          APPEND    "emrweb02.pbl?reportno=1&",REDIRECT
          APPEND    "&template=",REDIRECT
          APPEND    TEMPLATE,REDIRECT
          APPEND    "&urnumber=",REDIRECT
          APPEND    URNUMBER,REDIRECT
          APPEND    "&admissno=",REDIRECT
          APPEND    ADMISSNO,REDIRECT
          APPEND    "&showmand=1",REDIRECT
          RESET     REDIRECT
.
          REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
          GOTO      DISC9999
.
DISC9500  MOVE      "Record locked - patient not discharged",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DISC9999
.
DISC9600  CALL      ULEMVIS1
.
          MOVE      "Patient already discharged",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DISC9999
.
DISC9999  RETURN
+
.-----------------------------------------------------------------------------
. Update the status of all the emrthsaf row with a nominated status
.-----------------------------------------------------------------------------
UPEMTH00  PACK      KEY11,ADMISSNO,SP70
          CALL      RSEMTHS1
UPEMTH20  CALL      RKEMTHS1
          BRANCH    OVRCD,UPEMTH99          * end of file
.
          MATCH     ADMISSNO,EMTSVISN       * same Admission Number?
          GOTO      UPEMTH99 IF NOT EQUAL
.
          MOVE      UPSTATUS,EMTSSTAT
          CALL      UPEMTHS1
          GOTO      UPEMTH20
.
UPEMTH99  RETURN
.
.------------------------------------------------------------
. DISMEH00 - Discharge mental health patient.
.            This routine is borrowed from CHKMEH00 in PATWEB96
. Returns:     EXIT  0 = Ok to continue
.                    1 = Error
.------------------------------------------------------------
DISMEH00  COMPARE   ONE,MHCNUSE
          GOTO      DISMEH90 IF NOT EQUAL   * not a mental health patient
.
          MOVE      AADMNO,KEY8
          CALL      RDMHVIS1
          BRANCH    OVRCD,DISMEH90          * not a mental health patient
.
          MOVE      TWO,AUDIFLAG            * before change audit
          CALL      MHAUDVIS                * write audit
.
          CALL      MEHCLDSC                * clear discharge variables
          MOVE      MHVIADD1,MHDSADD1       * default value
          MOVE      MHVIADD2,MHDSADD2       * I SRF 33698
          MOVE      MHVISUBR,MHDSSUBR
          MOVE      MHVIADD4,MHDSADD4       * end I SRF 33698
          MOVE      MHVIACTY,MHDSACTY       * default value
.
          CALL      MVDIS000                * move cgi
.
. if discharged dead, dont keyin 2nd screen
.
          PACK      KEY5,ANSD,SP1,DSTAT
          CALL      RDCODE1
          BRANCH    OVRCD,DISMEH10
          MATCH     ANSD,TCINDC1
          GOTO      DISMEH10 IF EQUAL
.
.         write to meh discharge file
.
DISMEH10  MOVE      AADMNO,KEY8
          MOVE      AADMNO,MHDSADMN         * set admission number
          CALL      RAMHDSC1
          IF        OVRCD=1
            CALL      WRMHDSC1
            MOVE      ONE,AUDIFLAG          * add audit
            CALL      MHAUDDSC              * write audit
          ELSE
            CALL      RDMHDSC1
            CALL      MVDIS000
            CALL      UPMHDSC1
            MOVE      THREE,AUDIFLAG        * after change audit
            CALL      MHAUDDSC              * write audit
          ENDIF
.
.         CALL      MEHDIA00                * Update MH Diagnosis
.
.         update status on visit file
.
          MOVE      SIX,MHVISTAT            * set as discharged
          CALL      UPMHVIS1                * update visit file
          MOVE      THREE,AUDIFLAG          * after change audit
          CALL      MHAUDVIS                * write audit
.
          CALL      UPMAST1                 * update master file
.
          CALL      DEAPOL00                * Update Patient Death Polling Table
.
.         PACK      KEY8,AADMNO,SP70
.         CALL      RDPTRES1
.         IF        OVRCD=1
.           CALL      CPTRE100
.         ENDIF
.
.         CALL      PMIGTNID                 * get national id for dgate write
.         MOVE      NMPNUMB,PTNINMPI
.         MOVE      SEVEN,HL7TRGID
.         MOVE      SP8,HL7INCLD
.         PROC      DGCLICUP                 * write PMI changes to DG *C-90222
.
DISMEH90  MOVE      ZERO,EXIT
          GOTO      DISMEH99
.
DISMEH91  MOVE      ONE,EXIT
.
DISMEH99  RETURN
+
.------------------------------------------------------------
.                       UPDMEH00
.         Update Mental Health Discharge Details
.------------------------------------------------------------
UPDMEH00  COMPARE   ONE,MHCNUSE
          GOTO      UPDMEH99 IF NOT EQUAL   * not a mental health patient
.
          MOVE      AADMNO,KEY8
          CALL      RDMHVIS1
          BRANCH    OVRCD,UPDMEH99          * not a mental health patient
.
          CALL      RDMHDSC1
          BRANCH    OVRCD,UPDMEH99
.
          MOVE      TWO,AUDIFLAG            * before change audit
          CALL      MHAUDDSC                * write audit
.
          CALL      MVDIS000                * move cgi vars to file fields
          CALL      UPMHDSC1
.
          MOVE      THREE,AUDIFLAG          * after change audit
          CALL      MHAUDDSC                * write audit
.
UPDMEH99  RETURN
+
.------------------------------------------------------------
.                       EMRSCH00
.   Schedule ED Fax to be run via Program Scheduler
.------------------------------------------------------------
EMRSCH00  MOVE      "EMRSCH88",SCHDPGID
          MOVE      "ED Fax",SCHDDESC
          READ      CONTROLF,EIGHTY9;*244,EMCNEDFP
          MOVE      EMCNEDFP,SCHDPRNT
          MATCH     Z70,EMRCN029
          IF        !@EQUAL
            MOVE      EMRCN029,SCHDPRNT
          ENDIF
          MOVE      ONE,SCHDCOPY
          PACK      SCHDDATE,CCC,CYY,CMM,CDD
          REP       " 0",SCHDDATE
          CLOCK     TIME,SCHDTIME
          READ      CONTROLF,EIGHTY9;*241,EMCNEDFD
.
          CALL      IBACLOCK
          CALL      DATE2INT
          SQUEEZE   EMCNEDFD
          MOVE      EMCNEDFD,FORM3
          ASSIGN    (INTEGER+(FORM3*60)),INTEGER
          CALL      INT2DATE
          PACK      SCHDDATE,TWENTY,DTTMDATE
          MOVE      CTIMEIS,SCHDTIME
.
.         Keyin Parameters
.
          MOVE      "1",KEYSTARR[1]          * Option
          MOVE      ADMISSNO,KEYSTARR[2]     * Admission No
          MOVE      URNUMBER,KEYSTARR[3]     * UR Number
          MOVE      USERID,KEYSTARR[4]       * User ID
          MOVE      SCHDPRNT,KEYSTARR[5]     * Printer 
          MOVE      "Y",KEYSTARR[6]          * Continue Y/N/C
          MOVE      "6",KEYSTCNT             * Number of Keyins
          CALL      SCHPRO00                 * Schedule ED Fax
.
EMRSCH99  RETURN
.
.---------------------------------------------------------------------
. Check for Discharge Location to be Cleared on Discharge of Patient
.---------------------------------------------------------------------
DISLOC00  MATCH     "1",EMCNDDSS
          IF        @EQUAL
.
            PACK      KEY3,EMVILOCN,SP70
            CALL      RDEMLOC1
            BRANCH    OVRCD,DISLOC60
.
            MATCH     "1",EMLOSSIN
            GOTO      DISLOC20 IF EQUAL
.
            GOTO      DISLOC60
.
DISLOC20    
.           COMPARE   ONE,EMVIADMT
.           GOTO      DISLOC60 IF NOT EQUAL
.
            MATCH     SP70,EMVIPADM
            GOTO      DISLOC60 IF EQUAL
            GOTO      DISLOC60 IF EOS
.
            PACK      KEY8,EMVIPADM,SP70
            CALL      RDPTMIS1
            BRANCH    OVRCD,DISLOC60
.
            COMPARE   TWO,ASTAT
            GOTO      DISLOC60 IF NOT EQUAL
.
            MATCH     SP70,AWARD
            GOTO      DISLOC60 IF EQUAL
            GOTO      DISLOC60 IF EOS
.
            PACK      KEY6,AWARD,SP70
            CALL      RDWARD1
            BRANCH    OVRCD,DISLOC60
.
            MATCH     SP70,WEFRBT
            GOTO      DISLOC60 IF EQUAL
            GOTO      DISLOC60 IF EOS
.
            PACK      KEY5,ANSB,ANST,WEFRBT,SP70
            CALL      RDCODE1
            BRANCH    OVRCD,DISLOC60
.
            MATCH     ANSE,TCINDC11         * Emergency ward - leave on map
            GOTO      DISLOC99 IF EQUAL
.
            MATCH     ANSM,TCINDC11         * Emergency ward - leave on map
            GOTO      DISLOC99 IF EQUAL
.
            GOTO      DISLOC60
.
          ENDIF
.
DISLOC60  IF        EMVIYN02=1
            MOVE      SP70,EMVILOCN
            MOVE      SP70,EMVIPRLO
            MOVE      SP70,EMVIPRTM
            GOTO      DISLOC99
          ENDIF
          MATCH     SP70,EMVIDSTA
          GOTO      DISLOC99 IF EQUAL
.
          MOVE      "ED",CATEGORY
          MOVE      EMVIDSTA,CODE
          CALL      GETCOD00
          MATCH     "2",TCINDC2
          IF        !@EQUAL
            MOVE      SP70,EMVILOCN
            MOVE      SP70,EMVIPRLO
            MOVE      SP70,EMVIPRTM
          ENDIF
.
DISLOC99  RETURN
.-------------------------------------------------------------------------------
. Set Death Notification Code                                         Car 270065
.-------------------------------------------------------------------------------
DTHN0000  PACK      KEY5,ANSE,ANSD,EMVIDSTA,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,DTHN9999
.
          MATCH     ANSD,TCINDC1            * If not deceased continue
          GOTO      DTHN9999 IF NOT EQUAL
.
          IF        PTCNHDPS=1
            MATCH     SP70,PMPXDETY           * Is death notification already
            GOTO      DTHN9999 IF NOT EQUAL   * populated
          ENDIF
.
          PACK      KEY5,ANSD,ANSY,SP70     * find first death notification
          CALL      RDSCODE1                * value on code table
DTHN0100  CALL      RDKCODE1
          BRANCH    OVRCD,DTHN9000          * if eof continue
.
          MATCH     "DY",TCODE
          GOTO      DTHN9000 IF NOT EQUAL   * if no records exist continue
.
          MATCH     ANSA,TCINDC1
          GOTO      DTHN0100 IF NOT EQUAL   * loop if not notification code
.
          MOVE      EMVIURNO,PMPXURNO       * if record found set the code 
          PACK      KEY8,PMPXURNO,SP70
          CALL      RAPMPX21
          BRANCH    OVRCD,DTHN9000
.
          MOVE      ACODE,PMPXDETY
          CALL      UPPMPX21
.
DTHN9000  MATCH     NEWDEATH,OLDDEATH
          IF        !@EQUAL
            MOVE      "001",D3
            CALL      WDAU0000                * Write to Death details audit file
          ENDIF
.
DTHN9999  RETURN 
.
.------------------------------------------------------------
. Check for Admission Unit into hospital
.------------------------------------------------------------
ADUNIT00  PACK      EMVIUNIT,EMVIUNIT,SP70
          MATCH     SP70,EMVIUNIT
          IF        !@EQUAL
            MATCH     SP70,EMVIPADM
            IF        @EQUAL
              MOVE      ONE,EXIT
              GOTO      ADUNIT99
            ENDIF
          ENDIF
          MOVE     ZERO,EXIT
 
ADUNIT99  RETURN
.------------------------------------------------------------
. Check for Zero U/R
.------------------------------------------------------------
ZERUR000  MATCH     ZEROUR,EMVIURNO
          IF        @EQUAL
            MOVE      ONE,EXIT   
            GOTO      ZERUR999
          ENDIF
          MOVE      ZERO,EXIT

ZERUR999  RETURN
.------------------------------------------------------------
.  Check if all the mandatory fields are complete. 
.  Return Status status 3 if complete ,otherwise set it to 2.
.  Check if there are any outstanding mandatory fields for discharge
.------------------------------------------------------------
CHKMAN00  MOVE      ZERO,MANDDISC      * No mandatory discharge fields 
.  
          PACK      KEY6,ONE,SP70
          CALL      RSEMWFM2
CHKMAN10  CALL      RKEMWFM2
          BRANCH    OVRCD,CHKMAN99
          MATCH     "1",EMWFMAN
          GOTO      CHKMAN99 IF NOT EQUAL
.                                                * I CAR 42905
          MOVE      ZERO,FORM2
          MOVE      SP70,DIM1
          MOVE      SP70,DIM1IND6
          MATCH     SP70,EMVIDSTA
          IF        !@EQUAL
            PACK      KEY5,CODEED,EMVIDSTA
            CALL      RDCODE1                      * code on file ?
            IF        OVRCD=0
              UNPACK    THCSCOD,DIM2
              SQUEEZE   DIM2                       * Save HDP Eq.
              MOVE      DIM2,FORM2
              PACK      DIM1,TCINDC3,SP70
              PACK      DIM1IND6,TCINDC6,SP70
            ENDIF
          ENDIF
.                                                * end I CAR 42905
          MOVE      EMWFFLD,FORM5
          PACK      DIM80,SP70,SP70
          CALL      MYEMR000
          MATCH     SP80,DIM80
          GOTO      CHKMAN10 IF NOT EQUAL
.
          IF        PTCNHDPS=THREE & OTSTFLAG=ONE & (FORM5=10 | FORM5=11)
            IF       FORM5=176
              MOVE     ONE,OTAMFLAG
              GOTO     CHKMAN15
            ENDIF
            IF       FORM5=177
              MOVE     ONE,OTAMFLAG
              GOTO     CHKMAN15
            ENDIF
            GOTO     CHKMAN10
          ENDIF
.                                                * I CAR 42905 * I CAR 43016
          IF        FORM5=102|FORM5=103|FORM5=104|FORM5=105|FORM5=7
            IF        FORM2=11|FORM2=10|FORM2=30
              GOTO      CHKMAN10
            ENDIF
            MATCH     "T1",DIM2
            GOTO      CHKMAN10 IF EQUAL
.
            MATCH     "T1",DIM2
            GOTO      CHKMAN10 IF EQUAL
          ENDIF
.
          IF        FORM5=169
            IF        FORM2=10|FORM2=11|FORM2=30
              GOTO      CHKMAN10
            ENDIF
            MATCH     "T1",DIM2
            GOTO      CHKMAN10 IF EQUAL
            MATCH     "T1",DIM2
            GOTO      CHKMAN10 IF EQUAL
.
            MATCH     "N",DIM1
            IF        @EQUAL
              IF        FORM2=31
                MATCH     "A",DIM1IND6
                IF        @EQUAL
                  PACK      KEY30,EMVIDOCT,EMVIATNS,EMVIMDCD,SP70
                  MATCH     SP70,KEY30
                  GOTO      CHKMAN10 IF EQUAL
                ELSE
                  GOTO      CHKMAN10
                ENDIF
              ELSE
                GOTO      CHKMAN10
              ENDIF
            ENDIF 
.
            IF        FORM2=31
              PACK      KEY30,EMVIDOCT,EMVIATNS,EMVIMPRA,SP70
              MATCH     SP70,KEY30
              GOTO      CHKMAN10 IF EQUAL
            ENDIF
          ENDIF
.
          IF        PTCNHDPS=THREE & (FORM5=13 | FORM5=46 | FORM5=169) 
.
            MATCH     "T1",DIM2
            GOTO      CHKMAN13 IF EQUAL
            MATCH     "T2",DIM2
            GOTO      CHKMAN13 IF EQUAL
            MATCH     "T3",DIM2
            GOTO      CHKMAN13 IF EQUAL
            MATCH     "T4",DIM2
            GOTO      CHKMAN13 IF EQUAL
            MATCH     "T5",DIM2
            GOTO      CHKMAN13 IF EQUAL
            MATCH     "T6",DIM2
            GOTO      CHKMAN13 IF EQUAL
            MATCH     "T7",DIM2
            GOTO      CHKMAN13 IF EQUAL
.
            GOTO      CHKMAN15 
.
CHKMAN13    MOVE      "YW",CATEGORY
            MOVE      EMVIVSTY,CODE
            CALL      GETCOD00
.
            UNPACK    THCSCOD,DIM1A
            MATCH     "2",DIM1A
            GOTO      CHKMAN10 IF EQUAL    
          ENDIF
.                                                * end I CAR 42905
CHKMAN15  MOVE      "EZ",CATEGORY
          MOVE      EMWFRES,CODE
          CALL      GETCOD00
          MOVE      TCINDC1,F1

          BRANCH    F1,CHKMAN60,CHKMAN20,CHKMAN30
          GOTO      CHKMAN60
.
CHKMAN20  PACK      KEY10,EMVIDOCT,SP70 
          CALL      RDPMHCP1                * Reading the HCP file
          BRANCH    OVRCD,CHKMAN60
.
          MOVE      PMHCTITL,FMTTITLE
          MOVE      PMHCGNAM,FMTGNAME
          MOVE      PMHCSNAM,FMTSNAME
          CALL      DOCNM000                * Routine to format the doctor name
          MOVE      DOCFNAME,DOCTRNAM
          GOTO      CHKMAN60
.
CHKMAN30  PACK      KEY6,EMVITRNS,SP70
          CALL      RDOPNUR1                * Reading the nurse file
          IF        OVRCD=1
            MOVE      SP70,NURSNAME
            GOTO      CHKMAN60
          ENDIF
.
          MOVE      SP70,FMTTITLE
          MOVE      OPNRGNAM,FMTGNAME
          MOVE      OPNRSNAM,FMTSNAME
          CALL      DOCNM000                * Routine to format the nurse name
          MOVE      DOCFNAME,NURSNAME
          GOTO      CHKMAN60
.
CHKMAN60  MATCH     "1",EMWFMND             * Mandatory for discharge
          IF        @EQUAL
            IF        MANDDISC=0
              MOVE      ONE,MANDDISC        * Yes mandatory discharge fields
            ENDIF                           * are outstanding
          ENDIF
.
          PACK      DISPMSG,EMWFFLD,SP70
          CALL      ADDMSG00
          BRANCH    EXIT,CHKMAN99
          GOTO      CHKMAN10 
.
CHKMAN99  RETURN

.------------------------------------------------------------
.  Check if all the mandatory fields are complete.
.  Called when patient is being discharged
.------------------------------------------------------------
CHKINC00  PACK      KEY8,DEMVIADM,SP70
          CALL      RDEMINC1                * Reading Incomplete visit table 
          BRANCH    OVRCD,CHKINC99
.
          CALL      CHKDOC00
          MOVE      ZERO,MANDINUR
          CALL      CHKNUR00
          CALL      CHKPSC00
.
          MOVE      EMVIDOCT,EMIPDOCT
          MOVE      EMVITRNS,EMIPNURS
          CALL      RAEMINC1
          BRANCH    OVRCD,CHKINC99
          CALL      UPEMINC1                  * Updating incomplete table
.
          MATCH     SP70,EMVILOCN
          GOTO      CHKINC99 IF NOT EQUAL

          MATCH     "1",EMIPDCOM
          IF        @EQUAL
            MATCH     "1",EMIPNCOM
            IF        @EQUAL
              MATCH     "1",EMIPCCOM
              IF        @EQUAL
                CALL      DEEMINC1               * Delete record
              ENDIF
            ENDIF
          ENDIF 
.
CHKINC99  RETURN
.------------------------------------------------------------
. Check incomplete records for doctor
.------------------------------------------------------------
CHKDOC00  MOVE      "1",EMIPDCOM
          PACK      KEY6,ONE,SP70
          CALL      RSEMWFM2
CHKDOC10  CALL      RKEMWFM2
          BRANCH    OVRCD,CHKDOC99
          MATCH     "1",EMWFMAN
          GOTO      CHKDOC99 IF NOT EQUAL           
.
          MOVE      "EZ",CATEGORY
          MOVE      EMWFRES,CODE
          CALL      GETCOD00
.
          MATCH     "2",TCINDC1               * Should be Indicator NOT Code
          GOTO      CHKDOC10 IF NOT EQUAL
.                                                * I CAR 47219
          MOVE      ZERO,FORM2
          MOVE      SP70,DIM1
          MOVE      SP70,DIM1IND6
          MATCH     SP70,EMVIDSTA
          IF        !@EQUAL
            PACK      KEY5,CODEED,EMVIDSTA
            CALL      RDCODE1                      * code on file ?
            IF        OVRCD=0
              UNPACK    THCSCOD,DIM2
              SQUEEZE   DIM2                       * Save HDP Eq.
              MOVE      DIM2,FORM2
              PACK      DIM1,TCINDC3,SP70
              PACK      DIM1IND6,TCINDC6,SP70
            ENDIF
          ENDIF
.                                                * end I CAR 47219
          MOVE      EMWFFLD,FORM5
          PACK      DIM80,SP70,SP70
          CALL      MYEMR000                  * Loading the mandatory fields
          MATCH     SP80,DIM80
          GOTO      CHKDOC10 IF NOT EQUAL
. 
          IF        PTCNHDPS=THREE & (FORM5=10 | FORM5=11)
            IF       FORM5=176
              MOVE     ONE,OTAMFLAG
              GOTO     CHKDOC15
            ENDIF
            IF       FORM5=177
              MOVE     ONE,OTAMFLAG
              GOTO     CHKDOC15
            ENDIF
            GOTO     CHKDOC10
          ENDIF
.                                                * I CAR 47219
          IF        FORM5=102|FORM5=103|FORM5=104|FORM5=105|FORM5=7
            IF        FORM2=11|FORM2=10|FORM2=30
              GOTO      CHKDOC10
            ENDIF
            MATCH     "T1",DIM2
            GOTO      CHKDOC10 IF EQUAL
.
            MATCH     "T1",DIM2
            GOTO      CHKDOC10 IF EQUAL
          ENDIF
.
          IF        FORM5=169
            IF        FORM2=10|FORM2=11|FORM2=30
              GOTO      CHKDOC10
            ENDIF
            MATCH     "T1",DIM2
            GOTO      CHKDOC10 IF EQUAL
            MATCH     "T1",DIM2
            GOTO      CHKDOC10 IF EQUAL
.
            MATCH     "N",DIM1
            IF        @EQUAL
              IF        FORM2=31
                MATCH     "A",DIM1IND6
                IF        @EQUAL
                  PACK      KEY30,EMVIDOCT,EMVIATNS,EMVIMDCD,SP70
                  MATCH     SP70,KEY30
                  GOTO      CHKDOC10 IF EQUAL
                ELSE
                  GOTO      CHKDOC10
                ENDIF
              ELSE
                GOTO      CHKDOC10
              ENDIF
            ENDIF
.
            IF        FORM2=31
              PACK      KEY30,EMVIDOCT,EMVIATNS,EMVIMPRA,SP70
              MATCH     SP70,KEY30
              GOTO      CHKDOC10 IF EQUAL
            ENDIF
          ENDIF
.
          IF        PTCNHDPS=THREE & (FORM5=13 | FORM5=46 | FORM5=169)
.
            MATCH     "T1",DIM2
            GOTO      CHKDOC13 IF EQUAL
            MATCH     "T2",DIM2
            GOTO      CHKDOC13 IF EQUAL
            MATCH     "T3",DIM2
            GOTO      CHKDOC13 IF EQUAL
            MATCH     "T4",DIM2
            GOTO      CHKDOC13 IF EQUAL
            MATCH     "T5",DIM2
            GOTO      CHKDOC13 IF EQUAL
            MATCH     "T6",DIM2
            GOTO      CHKDOC13 IF EQUAL
            MATCH     "T7",DIM2
            GOTO      CHKDOC13 IF EQUAL
.
            GOTO      CHKDOC15
.
CHKDOC13    MOVE      "YW",CATEGORY
            MOVE      EMVIVSTY,CODE
            CALL      GETCOD00
.
            UNPACK    THCSCOD,DIM1A
            MATCH     "2",DIM1A
            GOTO      CHKDOC10 IF EQUAL
          ENDIF
.                                                * end I CAR 47219
CHKDOC15  MOVE      "0",EMIPDCOM              * Doctor incomplete
          MOVE      "1",EMISTYPE
          MOVE      EMVIDOCT,EMISCODE
          MOVE      SP70,EMIPSPAR
          PACK      KEY11,EMISTYPE,EMISCODE,SP70
          CALL      RDEMISM1                  * Reading Incomplete summary table
          IF        OVRCD=1
            MOVE      "1",EMISNOIN
            CALL      WREMISM1                * Writting summary table
          ELSE
            ADD       ONE,EMISNOIN
            CALL      UPEMISM1                * Updating summary table
          ENDIF       
.
CHKDOC99  RETURN
.------------------------------------------------------------
. Check incomplete records for nurse
.------------------------------------------------------------
CHKNUR00  MOVE      "1",EMIPNCOM              * Nurse complete 
          PACK      KEY6,ONE,SP70
          CALL      RSEMWFM2
CHKNUR10  CALL      RKEMWFM2
          BRANCH    OVRCD,CHKNUR99
          MATCH     "1",EMWFMAN
          GOTO      CHKNUR99 IF NOT EQUAL           
.
          MOVE      "EZ",CATEGORY
          MOVE      EMWFRES,CODE
          CALL      GETCOD00
. 
          MATCH     "3",TCINDC1               * Should be Indicator NOT Code
          GOTO      CHKNUR10 IF NOT EQUAL
.
          MOVE      ZERO,FORM2
          MOVE      SP70,DIM1
          MOVE      SP70,DIM1IND6
          MATCH     SP70,EMVIDSTA
          IF        !@EQUAL
            PACK      KEY5,CODEED,EMVIDSTA
            CALL      RDCODE1                      * code on file ?
            IF        OVRCD=0
              UNPACK    THCSCOD,DIM2
              SQUEEZE   DIM2                       * Save HDP Eq.
              MOVE      DIM2,FORM2
              PACK      DIM1,TCINDC3,SP70
              PACK      DIM1IND6,TCINDC6,SP70
            ENDIF
          ENDIF
. 
          MOVE      EMWFFLD,FORM5
          PACK      DIM80,SP70,SP70
          CALL      MYEMR000                  * Loading the mandatory fields
          MATCH     SP80,DIM80
          GOTO      CHKNUR10 IF NOT EQUAL
.
          IF        PTCNHDPS=THREE & (FORM5=10 | FORM5=11)
            IF       FORM5=176
              MOVE     ONE,OTAMFLAG
              GOTO     CHKNUR15
            ENDIF
            IF       FORM5=177
              MOVE     ONE,OTAMFLAG
              GOTO     CHKNUR15
            ENDIF
            GOTO     CHKNUR10
          ENDIF
.
          IF        FORM5=102|FORM5=103|FORM5=104|FORM5=105|FORM5=7
            IF        FORM2=11|FORM2=10|FORM2=30
              GOTO      CHKNUR10
            ENDIF   
            MATCH     "T1",DIM2
            GOTO      CHKNUR10 IF EQUAL
.
            MATCH     "T1",DIM2
            GOTO      CHKNUR10 IF EQUAL
          ENDIF     
.           
          IF        FORM5=169                      
            IF        FORM2=10|FORM2=11|FORM2=30
              GOTO      CHKNUR10
            ENDIF
            MATCH     "T1",DIM2
            GOTO      CHKNUR10 IF EQUAL
            MATCH     "T1",DIM2
            GOTO      CHKNUR10 IF EQUAL
.
            MATCH     "N",DIM1
            IF        @EQUAL
              IF        FORM2=31
                MATCH     "A",DIM1IND6
                IF        @EQUAL
                  PACK      KEY30,EMVIDOCT,EMVIATNS,EMVIMDCD,SP70
                  MATCH     SP70,KEY30
                  GOTO      CHKNUR10 IF EQUAL
                ELSE
                  GOTO      CHKNUR10
                ENDIF
              ELSE
                GOTO      CHKNUR10
              ENDIF
            ENDIF
.
            IF        FORM2=31
              PACK      KEY30,EMVIDOCT,EMVIATNS,EMVIMPRA,SP70
              MATCH     SP70,KEY30
              GOTO      CHKNUR10 IF EQUAL
            ENDIF
          ENDIF
.
          IF        PTCNHDPS=THREE & (FORM5=13 | FORM5=46 | FORM5=169)
.
            MATCH     "T1",DIM2
            GOTO      CHKNUR13 IF EQUAL
            MATCH     "T2",DIM2
            GOTO      CHKNUR13 IF EQUAL
            MATCH     "T3",DIM2
            GOTO      CHKNUR13 IF EQUAL
            MATCH     "T4",DIM2
            GOTO      CHKNUR13 IF EQUAL
            MATCH     "T5",DIM2
            GOTO      CHKNUR13 IF EQUAL
            MATCH     "T6",DIM2
            GOTO      CHKNUR13 IF EQUAL
            MATCH     "T7",DIM2
            GOTO      CHKNUR13 IF EQUAL
.
            GOTO      CHKNUR15
.
CHKNUR13    MOVE      "YW",CATEGORY
            MOVE      EMVIVSTY,CODE
            CALL      GETCOD00
.
            UNPACK    THCSCOD,DIM1A
            MATCH     "2",DIM1A
            GOTO      CHKNUR10 IF EQUAL
          ENDIF
.
CHKNUR15  MOVE      "0",EMIPNCOM              * Nurse incomplete
          MOVE      "2",EMISTYPE
          MOVE      EMVITRNS,EMISCODE
          MOVE      SP70,EMIPSPAR
          PACK      KEY11,EMISTYPE,EMISCODE,SP70
          CALL      RDEMISM1                  * Reading Incomplete summary table
          IF        OVRCD=1
            MOVE      "1",EMISNOIN
            CALL      WREMISM1                * Writting summary table
          ELSE
            ADD       ONE,EMISNOIN
            CALL      UPEMISM1                * Updating summary table
          ENDIF
.
CHKNUR99  RETURN          
.------------------------------------------------------------
. Three routines below are used when patient status is 
. discharged incomplete.
. Check incomplete records for PSC (Clerical)
.------------------------------------------------------------
CHKPSC00  MOVE      "1",EMIPCCOM              * Clerk record is complete
          PACK      KEY6,ONE,SP70
          CALL      RSEMWFM2
CHKPSC10  CALL      RKEMWFM2
          BRANCH    OVRCD,CHKPSC99
          MATCH     "1",EMWFMAN
          GOTO      CHKPSC99 IF NOT EQUAL
.
          MOVE      "EZ",CATEGORY
          MOVE      EMWFRES,CODE
          CALL      GETCOD00
.
          MATCH     "1",TCINDC1
          GOTO      CHKPSC10 IF NOT EQUAL
.
          MOVE      ZERO,FORM2
          MOVE      SP70,DIM1
          MOVE      SP70,DIM1IND6
          MATCH     SP70,EMVIDSTA
          IF        !@EQUAL
            PACK      KEY5,CODEED,EMVIDSTA
            CALL      RDCODE1                      * code on file ?
            IF        OVRCD=0
              UNPACK    THCSCOD,DIM2
              SQUEEZE   DIM2                       * Save HDP Eq.
              MOVE      DIM2,FORM2
              PACK      DIM1,TCINDC3,SP70
              PACK      DIM1IND6,TCINDC6,SP70
            ENDIF
          ENDIF
. 
          MOVE      EMWFFLD,FORM5
          PACK      DIM80,SP70,SP70
          CALL      MYEMR000                  * Loading the mandatory fields
.
          MATCH     SP70,DIM80
          GOTO      CHKPSC10 IF NOT EQUAL
.
          IF        PTCNHDPS=THREE & (FORM5=10 | FORM5=11)
            IF       FORM5=176
              MOVE     ONE,OTAMFLAG
              GOTO     CHKPSC15
            ENDIF
            IF       FORM5=177
              MOVE     ONE,OTAMFLAG
              GOTO     CHKPSC15
            ENDIF
            GOTO     CHKPSC10
          ENDIF
.
          IF        FORM5=102|FORM5=103|FORM5=104|FORM5=105|FORM5=7
            IF        FORM2=11|FORM2=10|FORM2=30
              GOTO      CHKPSC10
            ENDIF   
            MATCH     "T1",DIM2
            GOTO      CHKPSC10 IF EQUAL
.
            MATCH     "T1",DIM2
            GOTO      CHKPSC10 IF EQUAL
          ENDIF     
.           
          IF        FORM5=169                      
            IF        FORM2=10|FORM2=11|FORM2=30
              GOTO      CHKPSC10
            ENDIF
            MATCH     "T1",DIM2
            GOTO      CHKPSC10 IF EQUAL
            MATCH     "T1",DIM2
            GOTO      CHKPSC10 IF EQUAL
.
            MATCH     "N",DIM1
            IF        @EQUAL
              IF        FORM2=31
                MATCH     "A",DIM1IND6
                IF        @EQUAL
                  PACK      KEY30,EMVIDOCT,EMVIATNS,EMVIMDCD,SP70
                  MATCH     SP70,KEY30
                  GOTO      CHKPSC10 IF EQUAL
                ELSE
                  GOTO      CHKPSC10
                ENDIF
              ELSE
                GOTO      CHKPSC10
              ENDIF
            ENDIF
.
            IF        FORM2=31
              PACK      KEY30,EMVIDOCT,EMVIATNS,EMVIMPRA,SP70
              MATCH     SP70,KEY30
              GOTO      CHKPSC10 IF EQUAL
            ENDIF
          ENDIF
.
          IF        PTCNHDPS=THREE & (FORM5=13 | FORM5=46 | FORM5=169)
.
            MATCH     "T1",DIM2
            GOTO      CHKPSC13 IF EQUAL
            MATCH     "T2",DIM2
            GOTO      CHKPSC13 IF EQUAL
            MATCH     "T3",DIM2
            GOTO      CHKPSC13 IF EQUAL
            MATCH     "T4",DIM2
            GOTO      CHKPSC13 IF EQUAL
            MATCH     "T5",DIM2
            GOTO      CHKPSC13 IF EQUAL
            MATCH     "T6",DIM2
            GOTO      CHKPSC13 IF EQUAL
            MATCH     "T7",DIM2
            GOTO      CHKPSC13 IF EQUAL
.
            GOTO      CHKPSC15
.
CHKPSC13    MOVE      "YW",CATEGORY
            MOVE      EMVIVSTY,CODE
            CALL      GETCOD00
.
            UNPACK    THCSCOD,DIM1A
            MATCH     "2",DIM1A
            GOTO      CHKPSC10 IF EQUAL
          ENDIF
.
CHKPSC15  MOVE      "0",EMIPCCOM
.
CHKPSC99  RETURN
.------------------------------------------------------------
. Clear Message Array
.------------------------------------------------------------
CLRMSG00  MOVE      ZERO,MSGARRNO
          MOVE      SP70,MSGARR[1]
          MOVE      SP70,MSGARR[2]
          MOVE      SP70,MSGARR[3]
          MOVE      SP70,MSGARR[4]
          MOVE      SP70,MSGARR[5]
          MOVE      SP70,MSGARR[6]
          MOVE      SP70,MSGARR[7]
          MOVE      SP70,MSGARR[8]
          MOVE      SP70,MSGARR[9]
          MOVE      SP70,MSGARR[10]
          MOVE      SP70,MSGARR[11]
          MOVE      SP70,MSGARR[12]
          MOVE      SP70,MSGARR[13]
          MOVE      SP70,MSGARR[14]
          MOVE      SP70,MSGARR[15]
          MOVE      SP70,MSGARR[16]
          MOVE      SP70,MSGARR[17]
          MOVE      SP70,MSGARR[18]
          MOVE      SP70,MSGARR[19]
          MOVE      SP70,MSGARR[20]
          MOVE      SP70,MSGARR[21]
          MOVE      ZERO,MANDDISC
CLRMSG99  RETURN
.------------------------------------------------------------
. Add Message to Message Array
.------------------------------------------------------------
ADDMSG00  MOVE      ONE,EXIT
          ADD       ONE,MSGARRNO
          IF        MSGARRNO<21
            MOVE      DISPMSG,MSGARR[MSGARRNO]
            MOVE      ZERO,EXIT
          ENDIF
.
ADDMSG99  RETURN
.------------------------------------------------------------
.          LOCK0000 Lock patient visit record
.------------------------------------------------------------
LOCK0000  PACK      KEY8,ADMISSNO
          CALL      RLEMVIS1               * lock record
          BRANCH    OVRCD,LOCK9500:        * record not found
                          LOCK9600         * record already locked
.
          IF        (WINFLG = 1 & EMVISTAT <> 1) | (WINFLG = 2 & EMVISTAT <> 2)
            CALL      ULEMVIS1
            CLEAR     WEBTITLE
            APPEND    "Patient status has changed - refreshing screen",WEBTITLE
            RESET     WEBTITLE
            CALL      WEBERR00
            GOTO      LOCK9550
          ENDIF
.
          MATCH     ZEROUR,EMVIURNO
          IF        @EQUAL
            MOVE      ONE,URFLAG                            
            PACK      KEY8,EMVIADMN
            CALL      CUNK0000
            CALL      RDEMUNK1
            GOTO      LOCK1000
          ENDIF
.
LOCK1000  MOVE      ZERO,EXIT
          GOTO      LOCK9999
.
LOCK9500  MOVE      "Patient record not found",WEBTITLE
          CALL      WEBERR00
.
LOCK9550  MOVE      ONE,EXIT
          GOTO      LOCK9999
.
LOCK9600  MOVE      "Record locked by another user",WEBTITLE
          CALL      WEBERR00
          MOVE      TWO,EXIT
.
LOCK9999  RETURN
.------------------------------------------------------------
.         UPDURT00  Update duration of wait
.------------------------------------------------------------
UPDURT00  MOVE      ZERO,WAITTIME                * initialise duration
.
.         First make sure that the arrival date & time have been input
.
          MATCH     SP8,EMVIDATE                 * arrival date blank ?
          GOTO      UPDURT99 IF EQUAL            * yes
.
          MATCH     SP8,EMVITIME                 * arrival time blank ?
          GOTO      UPDURT99 IF EQUAL            * yes
.
.         The following section of code has been commented out as WGH
.         only want to base this calculation using the doctor date/time
.         seen, NOT the nurse date/time seen.
.
.         Check if the nurse has seen the patient
.
.         MATCH     SP8,EMVINSDT                 * seen by nurse date blank ?
.         GOTO      UPDURT10 IF EQUAL            * yes
.
.         MATCH     SP8,EMVINSTM                 * seen by nurse time blank ?
.         GOTO      UPDURT10 IF EQUAL            * yes
.
.
.         Patient has been seen by the nurse, so use this date and time
.         to calculate the waiting time
.
.         MOVE      EMVINSDT,CPDATE
.         MOVE      EMVINSTM,CTIMEIS
.         GOTO      UPDURT30
.
.         The nurse hasn't seen the patient, so check if the doctor has
.
UPDURT10  MATCH     SP8,EMVIDRDT                 * yes - seen by dr. date blank?
          GOTO      UPDURT20 IF EQUAL            * yes - still waiting
.
          MATCH     SP8,EMVIDRTM                 * yes - seen by dr. time blank?
          GOTO      UPDURT20 IF EQUAL            * yes - still waiting
.
.         Patient has been seen by the doctor, so use this date and time
.         to calculate the waiting time
.
          MOVE      EMVIDRDT,CPDATE
          MOVE      EMVIDRTM,CTIMEIS
          GOTO      UPDURT30
.
.
.         Patient is still waiting to be seen, so use the current date and time
.         to calculate the waiting time
.         Use discharge date & time from emvis024 & emvis025 updated in UPEM0000
.         if there is no doctor seen date & time to calculate waiting time.
.         If NZ and the patient has not been seen by a doctor then set the
.         the wait time to zero.
.
UPDURT20  IF        PTCNHDPS=1
            MOVE     ZERO,WAITTIME               * NZ and not seen by a doctor
            GOTO     UPDURT99                    * so set wait time to zero.
          ENDIF
.
          MATCH     SP8,EMVIDDAT                 * Check Discharged  
          GOTO      UPDURT21 IF EQUAL            * = Current Patient   
.
.                                                * Patient has been Discharged
          MOVE      EMVIDDAT,CPDATE              * Use Discharge Date 
          MOVE      EMVIDTIM,CTIMEIS             * and Time          
          GOTO      UPDURT30                     *                 
.
UPDURT21  CALL      IBACLOCK                     * get current date & time
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      CDD,CDAY
          PACK      CPDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CPDATE
.
.         Convert times to numeric hours and minutes
.
UPDURT30  UNPACK    EMVITIME,CHOUR,ANS,CMIN,ANS,ANS,ANS
          MOVE      CHOUR,IHOUR
          MOVE      CMIN,IMIN
          UNPACK    CTIMEIS,CHOUR,ANS,CMIN,ANS,ANS,ANS
          MOVE      CHOUR,NUMHOUR
          MOVE      CMIN,NUMMIN
.
.         Get the number of whole days the patient has been waiting
.
          DAYSEP    EMVIDATE,CPDATE,FORM1
          COMPARE   ZERO,FORM1                   * valid no. of days ?
          GOTO      UPDURT99 IF LESS             * no - invalid dates
          GOTO      UPDURT50 IF EQUAL            * yes - same day
.
.         Not same day as patient arrived
.
          IF        IMIN > 0
            ADD       ONE,IHOUR
            ASSIGN    (WAITTIME + (60-IMIN)),WAITTIME
          ENDIF
          ASSIGN    (WAITTIME + ((TWENTY4-IHOUR)*60)),WAITTIME
          ASSIGN    (WAITTIME + ((FORM1 - 1) * DAYMIN)),WAITTIME
.
          ASSIGN    (WAITTIME + NUMMIN + (NUMHOUR*60)),WAITTIME
          GOTO      UPDURT90
.
.         Still same day patient arrived
.
UPDURT50  IF        NUMMIN < IMIN
            ADD       ONE,IHOUR
            ADD       SIXTY,NUMMIN
          ENDIF
          ASSIGN    (WAITTIME + ((NUMHOUR - IHOUR) * 60)),WAITTIME
          ASSIGN    (WAITTIME + (NUMMIN - IMIN)),WAITTIME
.
UPDURT90  IF        WAITTIME < 0
            MOVE      NINE4,WAITTIME
          ENDIF
.
UPDURT99  RETURN
.------------------------------------------------------------
.         UNDS0000  Undischarge emergency Visit           
.------------------------------------------------------------
UNDS0000  CALL      VERUSR00
          BRANCH    EXIT,UNDS9999
.
          MATCH     SP70,DONTCHEC   * This will ignore the date/time check
          IF        @EQUAL                                                     
            CALL      CHKKEY00
            BRANCH    EXIT,UNDS9999
          ENDIF
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1
          BRANCH    OVRCD,UNDS9000
.
          MOVE      EMVISTAT,WINFLG
          CALL      LOCK0000                     * lock patient record
          BRANCH    EXIT,UNDS9500:
                         UNDS9500
.
          COMPARE   ONE,EMVISTAT
          IF        @EQUAL
            MOVE      "Patient not discharged, cannot undischarge",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
            GOTO      UNDS9999
          ENDIF
.
.         Set new location and reason for undischarge before A13 (TSK 0954821)
.
          MOVE      EMVIS058,EMVIUC18
          MOVE      NEWLOCTN,EMVILOCN
          MOVE      SP70,EMVIPRLO
          MOVE      SP70,EMVIPRTM
.
.         Broadcast cancel discharge message before the data is actually changed
.
UNDS1000  MOVE      EMVIURNO,KEY8              * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,UNDS6000
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,UNDS6000
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11                   * get visit ext. details
          BRANCH    OVRCD,UNDS6000
.
          PACK      KEY3,NEWLOCTN,SP70         * validate Location (TSK 0903436)
          CALL      RDEMLOC1
          BRANCH    OVRCD,UNDS6000
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      NINE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICUD                   * send update emr details
.
UNDS6000  MATCH     Z70,EMVIS026
          IF        !@EQUAL
            MOVE      EMVIS026,EMVIDSTA
          ENDIF
.
          MATCH     Z70,EMVIS033
          IF        !@EQUAL
            MOVE      EMVIS033,EMVIDEST
          ENDIF
.
          MATCH     Z70,EMVIS037
          IF        !@EQUAL
            MOVE      EMVIS037,EMVITXT2
            REP       "#" ' ",EMVITXT2                              * Car 289460
          ENDIF
.
          MATCH     Z70,EMVIS106
          IF        !@EQUAL
            MOVE      EMVIS106,EMVIUR01
          ENDIF
.
          MATCH     Z70,EMVIS107
          IF        !@EQUAL
            MOVE      EMVIS107,EMVIUR02
          ENDIF
.
          MATCH     Z70,EMVIS108
          IF        !@EQUAL
            MOVE      EMVIS108,EMVIUR03
          ENDIF
.
          PACK      KEY3,NEWLOCTN,SP70           * Get CURRENT Location
          CALL      RDEMLOC1
          BRANCH    OVRCD,UNDS9100
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11                   * get visit ext. details
          BRANCH    OVRCD,UNDS9200
.
          MOVE      ONE,EMVISTAT                 * change status to "current"
          PACK      EMVIDDAT,SP70
          PACK      EMVIDTIM,SP70
          PACK      EMVIDSTA,SP70
          PACK      EMVIUD01,SP70                * ED Ready to Discharge Date
          PACK      EMVIUT01,SP70                * ED Ready to Discharge Time
          PACK      EMVIUC11,SP70                * Referred to on Departure
.
          CALL      UPEMVIS1                     * update visit record
          MOVE      "4",UPSTATUS                 * Exited ETS
          CALL      UPEMTH00                     * update telehealth record
          CALL      AUTS0000
          CALL      ULEMVIS1                     * unlock visit record
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDPMVX11
          BRANCH    OVRCD,UNDS7000
.
          MATCH     Z70,PMSVX075
          IF        !@EQUAL
            MOVE      PMSVX075,PMVXPICD
          ENDIF
.
          PACK      PMVXSTRA,SP70                * Transport SOR (Cat.SI)
.
          CALL      UPPMVX11
.
          PACK      KEY8,EMVIADMN,SP70           * get other clinic details
          CALL      RDEMCLI1
          BRANCH    OVRCD,UNDS7000
.
          PACK      EMCIRCCD,SP70
          PACK      EMCIRCTM,SP70
          PACK      EMCIRCFF,SP70
          CALL      UPEMCLI1
.
UNDS7000  CALL      WRCPTU00                     * I CAR 23608
.
          PACK      KEY8,DEMVIADM,SP70
          CALL      RDEMINC1                * Reading Incomplete visit table
          IF        OVRCD=0
            MATCH     "0",EMIPNCOM
            IF        @EQUAL
              CALL      SUBNUR00 
            ENDIF
            MATCH     "0",EMIPDCOM
            IF        @EQUAL
              CALL      SUBDOC00
            ENDIF
            MOVE      "2",EMIPDCOM           * Set to two untill discharge
            MOVE      "2",EMIPNCOM
            PACK      KEY8,EMVIADMN,SP70
            CALL      RAEMINC1
            BRANCH    OVRCD,UNDS7500
            CALL      UPEMINC1
          ELSE
            MOVE      "2",EMIPDCOM           * Set to two untill discharge
            MOVE      "2",EMIPNCOM
            MOVE      "0",EMIPCCOM
            MOVE      EMVIDOCT,EMIPDOCT
            MOVE      EMVITRNS,EMIPNURS
            MOVE      SP70,EMIPSPAR
            MOVE      EMVIADMN,EMIPADMN
            PACK      KEY8,EMVIADMN,SP70
            CALL      WREMINC1
          ENDIF
.
UNDS7500  MATCH     "1",PTCNMORG
          IF        @EQUAL
            PACK     KEY8,DEMVIADM,SP70       * Delete morgue record if no
            CALL     RDPMMOR1               * collection date
            IF       OVRCD=0
              MATCH    SP70,PMMRACDT
              IF       @EQUAL
                CALL     DEPMMOR1
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRTHIS00
            PROC      EMRDRCHR              * Update Visit Billing Complete
          ENDIF
.
          CALL      WEDV0000                * Write EDWARD visit alteration
.
          CALL      ABFX0000                * Check for ABF funding
          IF        EXIT=1
            CALL      CIPN0000              * Check Invoice pending for ABF
          ENDIF
.
          MOVE      "Patient discharge reversed",WEBTITLE
..          CALL      DISALT00
          MOVE      ZERO,EXIT
          GOTO      UNDS9999
.
UNDS9000  MOVE      "Patient record not found",WEBTITLE
          CALL      WEBERR00
          GOTO      UNDS9500
.
UNDS9100  MOVE      "Location not found",WEBTITLE
          CALL      WEBERR00
          GOTO      UNDS9500
.
UNDS9200  MOVE      "Visit extension not found",WEBTITLE
          CALL      WEBERR00
          GOTO      UNDS9500
.
UNDS9500  MOVE      ONE,EXIT
.
UNDS9999  RETURN
.
.----------------------------------------------------------------------------
.         ABF Undischarged - remove Invoice pending if No item to be invoiced
.----------------------------------------------------------------------------
CIPN0000  PACK      KEY14,DEMVIADM,SP70       * loop through uninvoiced data
          CALL      RSPMMTI1
CIPN1000  CALL      RKPMMTI1                  * get the next record
          BRANCH    OVRCD,CIPN2000
.
          MATCH     DEMVIADM,PMMIVISN         * correct patient
          GOTO      CIPN9999 IF EQUAL
.
CIPN2000  IF        PTCNIPEN=0
            MOVE      DEMVIADM,KEY8
            CALL      DEIPEN1
          ENDIF
.
CIPN9999  RETURN
+
.------------------------------------------------------------
. Subtract one from the doctor counter                  
.------------------------------------------------------------
SUBDOC00  MATCH    "0",EMIPDCOM
          IF       @EQUAL
            MOVE      "1",DIM1
            MOVE      EMIPDOCT,EMISCODE
            PACK      KEY11,DIM1,EMISCODE,SP70
            CALL      RDEMISM1       * Reading Incomplete summary table
            IF        OVRCD=0
              IF        EMISNOIN=1
                CALL      DEEMISM1
              ELSE
                SUB       ONE,EMISNOIN
                CALL      UPEMISM1          * Updating summary table
              ENDIF
            ENDIF
          ENDIF
.
SUBDOC99  RETURN
.------------------------------------------------------------
. Subtract one from the nurse counter
.------------------------------------------------------------
SUBNUR00  MATCH    "0",EMIPNCOM
          IF       @EQUAL
            MOVE      "2",DIM1
            MOVE      EMIPNURS,EMISCODE
            PACK      KEY11,DIM1,EMISCODE,SP70
            CALL      RDEMISM1        * Reading Incomplete summary table
            IF        OVRCD=0
              IF        EMISNOIN=1
                CALL      DEEMISM1
              ELSE
                SUB       ONE,EMISNOIN
                CALL      UPEMISM1           * Updating summary table
              ENDIF
            ENDIF
          ENDIF
.
SUBNUR99  RETURN
.------------------------------------------------------------
.   Update person responsible for account
.------------------------------------------------------------
UPPRA000  COMPARE   ZERO,PRAUPDFL
          GOTO      UPPRA999 IF EQUAL
.
          CALL      CLPRA000
          CALL      UPDPRA00                * move pra cgi params into vars
.
          MOVE      ADMISSNO,PKADMN
          MOVE      PKADMN,KEY8
.
          MATCH     SP70,PKNAME             * If no name don't write a record
          GOTO      UPPRA200 IF EQUAL
.
          CALL      RDARESP1
          BRANCH    OVRCD,UPPRA100
.
          CALL      UPRESP1
          GOTO      UPPRA900
.
UPPRA100  CALL      WRRESP1
          GOTO      UPPRA900
.
UPPRA200  CALL      RDRESP1
          BRANCH    OVRCD,UPPRA900
          CALL      DERESP1
.
.         Send update broadcast message
.
UPPRA900  MOVE      EMVIURNO,KEY8          * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,UPPRA999
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,UPPRA999
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,UPPRA999
.
          CALL      PMIGTNID               * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TWENTY9,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                     * send A08
.
UPPRA999  RETURN
.
CLPRA000  MOVE       SP70,PKNAME    *      PERSON RESP FOR A/C NAME
          MOVE       SP70,PKADD1    *      P.R.A ADDRESS LINE 1
          MOVE       SP70,PKADD2    *      P.R.A ADDRESS LINE 2
          MOVE       SP70,PKSUBR    *      P.R.A SUBURB
          MOVE       SP70,PKADD4    *      P.R.A ADDRESS LINE 2
          MOVE       SP70,PKPOST    *      P.R.A POSTCODE
          MOVE       SP70,PKTELEP   *      P.R.A PRIVATE TELEPHONE 
          MOVE       SP70,PKTELEB   *      P.R.A BUSINESS TELEPHONE 
          MOVE       SP70,PKRELP    *      P.R.A RELATIONSHIP
          MOVE       SP70,PTREMOBL  *      P.R.A MOBILE
          RETURN
.-----------------------------------------------------------
.  Update person responsible for account details
.-----------------------------------------------------------
UPDPRA00  MATCH     PTPRA001,Z70
          IF        !@EQUAL
            MOVE      PTPRA001,PKNAME
          ENDIF
.
          MATCH     PTPRA002,Z70
          IF        !@EQUAL
            MOVE      PTPRA002,PKADD1
          ENDIF
.
          MATCH     PTPRA003,Z70
          IF        !@EQUAL
            MOVE      PTPRA003,PKADD2
          ENDIF
.
          MATCH     PTPRA004,Z70
          IF        !@EQUAL
            MOVE      PTPRA004,PKSUBR
          ENDIF
.
          MATCH     PTPRA005,Z70
          IF        !@EQUAL
            MOVE      PTPRA005,PKADD4
          ENDIF
.
          MATCH     PTPRA006,Z70
          IF        !@EQUAL
            MOVE      PTPRA006,PKPOST
          ENDIF
.
          MATCH     PTPRA007,Z70
          IF        !@EQUAL
            MOVE      PTPRA007,PKTELEP
          ENDIF
.
          MATCH     PTPRA008,Z70
          IF        !@EQUAL
            MOVE      PTPRA008,PKTELEB
          ENDIF
.
          MATCH     PTPRA009,Z70
          IF        !@EQUAL
            MOVE      PTPRA009,PKRELP
          ENDIF
.
          MATCH     PTPRA010,Z70
          IF        !@EQUAL
            MOVE      PTPRA010,PTREMOBL
          ENDIF
.
UPDPRA99  RETURN
.------------------------------------------------------------
.         STEMD000  Store EMDCTXXX vars in file vars
.------------------------------------------------------------
STEMD000  MATCH     SP70,EMDCT001
          IF        !@EQUAL
            MOVE      EMDCT001,EMDCTXT1
          ENDIF
.
          MATCH     SP70,EMDCT002
          IF        !@EQUAL
            MOVE      EMDCT002,EMDCTXT2
          ENDIF
.
          MATCH     SP70,EMDCT003
          IF        !@EQUAL
            MOVE      EMDCT003,EMDCTXT3
          ENDIF
.
          MATCH     SP70,EMDCT004
          IF        !@EQUAL
            MOVE      EMDCT004,EMDCTXT4
          ENDIF
.
          MATCH     SP70,EMDCT005
          IF        !@EQUAL
            MOVE      EMDCT005,EMDCTXT5
          ENDIF
.
          MATCH     SP70,EMDCT006
          IF        !@EQUAL
            MOVE      EMDCT006,EMDCTXT6
          ENDIF
.
          MATCH     SP70,EMDCT007
          IF        !@EQUAL
            MOVE      EMDCT007,EMDCTXT7
          ENDIF
.
          MATCH     SP70,EMDCT008
          IF        !@EQUAL
            MOVE      EMDCT008,EMDCTXT8
          ENDIF
          MOVE      SP70,EMDCT009
.
STEMD999  RETURN
.------------------------------------------------------------
. Add Diagnisis Comments 
.------------------------------------------------------------
ADDDIA00  MOVE      ZERO,F3
          MOVE      SP70,EMDCTXT1
          MOVE      SP70,EMDCTXT2
          MOVE      SP70,EMDCTXT3
          MOVE      SP70,EMDCTXT4
          MOVE      SP70,EMDCTXT5
          MOVE      SP70,EMDCTXT6
          MOVE      SP70,EMDCTXT7
          MOVE      SP70,EMDCTXT8
          MOVE      SP70,EMDCTXT9
          MOVE      SP70,EMDCLUID
          MOVE      SP70,EMDCSPAR
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      COMFILAF,COMFILNM
          TRAPCLR   IO
          BRANCH    OVRCD,ADDDIA99   
.
ADDDIA10  ADD       ONE,F3
          READ      COMFILAF,SEQ;OBMTCMNT
          GOTO      ADDDIA99 IF OVER
.
          STORE     OBMTCMNT,F3,EMDCTXT1,EMDCTXT2,EMDCTXT3,EMDCTXT4,EMDCTXT5:
                                EMDCTXT6,EMDCTXT7,EMDCTXT8
          GOTO      ADDDIA10
.
ADDDIA99  RETURN
.------------------------------------------------------------
.         STEXP000  Store EMEXPXXX vars in file vars
.------------------------------------------------------------
STEXP000  MATCH     SP70,EMEXP001
          IF        !@EQUAL
            MOVE      EMEXP001,EMEXUNIQ
          ENDIF  
.
          MATCH     SP70,EMEXP002
          IF        !@EQUAL
            MOVE      EMEXP002,EMEXSNAM
          ENDIF  
.
          MATCH     SP70,EMEXP003
          IF        !@EQUAL
            MOVE      EMEXP003,EMEXGNAM
          ENDIF   
.
          MATCH     SP70,EMEXP004
          IF        !@EQUAL
            MOVE      EMEXP004,EMEXSEX
          ENDIF  
.
          PACK      EMEXP005,EMEXP005,SP30
          UNPACK    EMEXP005,KEY8,KEY3 * Check for formatted or unformatted
          MATCH     SP70,KEY3
          IF        @EQUAL
             MOVE      EMEXP005,EMEXDOB * Do not change format = (CCYYMMDD)
          ELSE
             MOVE      EMEXP005,KEY11  * Change Date as format is (DD MON CCYY)
             PACK      KEY11,KEY11,SP70
             MATCH     SP70,KEY11
             IF        !@EQUAL
                UNPACK    EMEXP005,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
                CALL      SETMTH00
                PACK      EMEXDOB,CCENT,CYEAR,CMON,CDAY
                REP       " 0",EMEXDOB
              ENDIF
           ENDIF
.
          MATCH     SP70,EMEXP006
          IF        !@EQUAL
            MOVE      EMEXP006,EMEXAGE
          ENDIF  
.
          MATCH     SP70,EMEXP007
          IF        !@EQUAL
            MOVE      EMEXP007,EMEXCOMP
          ENDIF  
.
          CALL      ADDPRX00
.
          MOVE      EMEXP008,EMEXCOM1
          MOVE      EMEXP009,EMEXCOM2
          MOVE      EMEXP010,EMEXCOM3
          MOVE      EMEXP011,EMEXCOM4
          MOVE      EMEXP012,EMEXCOM5
          MOVE      EMEXP013,EMEXCOM6
.
          MATCH     SP70,EMEXP014
          IF        !@EQUAL
            MOVE      EMEXP014,EMEXTRAN
          ENDIF    
.
          PACK      EMEXP015,EMEXP015,SP30
          UNPACK    EMEXP015,KEY8,KEY3 * Check for formatted or unformatted
          MATCH     SP70,KEY3
          IF        @EQUAL
             MOVE      EMEXP015,EMEXEDAT * Do not change format = (CCYYMMDD)
          ELSE
             MOVE      EMEXP015,KEY11  * Change Date as format is (DD MON CCYY)
             PACK      KEY11,KEY11,SP70
             MATCH     SP70,KEY11
             IF        !@EQUAL
                UNPACK    EMEXP015,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
                CALL      SETMTH00
                PACK      EMEXEDAT,CCENT,CYEAR,CMON,CDAY
                REP       " 0",EMEXEDAT
              ENDIF
           ENDIF
.
          MATCH     SP70,EMEXP016
          IF        !@EQUAL
            MOVE      EMEXP016,EMEXETIM
          ENDIF      
.
          MATCH     SP70,EMEXP017
          IF        !@EQUAL
            MOVE      EMEXP017,EMEXGPCD
          ENDIF     
.
          MATCH     SP70,EMEXP018
          IF        !@EQUAL
            MOVE      EMEXP018,EMEXURNO
          ENDIF
.
          MOVE      EMEXP019,EMEXATSR
          MOVE      EMEXP020,EMEXACPS
          MOVE      EMEXP021,EMEXACPT
.
          PACK      EMEXP022,EMEXP022,SP30
          UNPACK    EMEXP022,KEY8,KEY3 * Check for formatted or unformatted
          MATCH     SP70,KEY3
          IF        @EQUAL
             MOVE      EMEXP022,EMEXETAD * Do not change format = (CCYYMMDD)
          ELSE
             MOVE      EMEXP022,KEY11  * Change Date as format is (DD MON CCYY)
             PACK      KEY11,KEY11,SP70
             MATCH     SP70,KEY11
             IF        !@EQUAL
                UNPACK    EMEXP022,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
                CALL      SETMTH00
                PACK      EMEXETAD,CCENT,CYEAR,CMON,CDAY
                REP       " 0",EMEXETAD
              ENDIF
           ENDIF
.
          MOVE      EMEXP023,EMEXETAT
          MOVE      EMEXP024,EMEXTRIG
          MOVE      EMEXP025,EMEXEXPL
          MOVE      EMEXP026,EMEXAMBL
          MOVE      EMEXPSIT,EMEXSITE
          MOVE      EMEXP028,EMEXCONT
          MOVE      EMEXP029,EMEXDELT
          MOVE      EMEXP030,EMEXREMV
          MOVE      EMEXP031,EMEXTSRC
          MOVE      EMEXP032,EMEXCALL
.
          CALL      ADDACM00
.
          MOVE      EMEXP033,EMEXAIN1
          MOVE      EMEXP034,EMEXAIN2
          MOVE      EMEXP035,EMEXAIN3
          MOVE      EMEXP036,EMEXAIN4
          MOVE      EMEXP037,EMEXAIN5
.
STEXP999  RETURN
.------------------------------------------------------------
.         STVIS000  Store EMVISXXX vars in file vars
.------------------------------------------------------------
STVIS000  REP       "0 ",EMVIS001
          MATCH     Z70,EMVIS001
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS001
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS001,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS001,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS001
              MATCH     ZERO8,EMVIS001
              IF        @EQUAL
                PACK      EMVIDATE,SP70
              ELSE
                MOVE      EMVIS001,EMVIDATE
              ENDIF
            ELSE
              PACK    EMVIDATE,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS002
          IF        !@EQUAL
            MOVE      EMVIS002,EMVITIME
          ENDIF
.
          MATCH     Z70,EMVIS003
          IF        !@EQUAL
            MOVE      EMVIS003,EMVITRIG
            PACK      EMVITRIG,EMVITRIG,SP70
          ENDIF
.
          MATCH     "1",PRECINWA
          IF        @EQUAL
            MATCH     Z70,EMVIS004
            IF        !@EQUAL
              MOVE      EMVIS004,EMVICOM1
            ENDIF
          ENDIF
.
          CALL      ADDPRE00
.
          MATCH     Z70,EMVIS006
          IF        !@EQUAL    
            MOVE      EMVIS006,EMVILOCN
          ENDIF
.
          MATCH     Z70,EMVIS007
          IF        !@EQUAL    
            MOVE      EMVIS007,EMVIDOCT
          ENDIF
.
          MATCH     Z70,EMVIS008
          IF        !@EQUAL    
            MOVE      EMVIS008,EMVICOMP
          ENDIF
.
          MATCH     Z70,EMVIS009
          IF        !@EQUAL
            MOVE      EMVIS009,EMVICLAS
          ENDIF
.
          MATCH     Z70,EMVIS010
          IF        !@EQUAL
            MOVE      EMVIS010,EMVIINSR
          ENDIF
.
          MATCH     Z70,EMVIS011
          IF        !@EQUAL
            MOVE      EMVIS011,EMVISRCE
          ENDIF
.
          MATCH     Z70,EMVIS012
          IF        !@EQUAL
            MOVE      EMVIS012,EMVISITN
          ENDIF
.
          MATCH     Z70,EMVIS013
          IF        !@EQUAL
            MOVE      EMVIS013,EMVIMODE
          ENDIF
.
          MATCH     Z70,EMVIS014
          IF        !@EQUAL
            MOVE      EMVIS014,EMVIEMPL
          ENDIF
.
          MATCH     Z70,EMVIS015
          IF        !@EQUAL
            MOVE      EMVIS015,EMVIWAIT
          ENDIF
.
          MATCH     Z70,EMVIS016
          IF        !@EQUAL
            MOVE      EMVIS016,EMVIPREV
          ENDIF
.
          MATCH     Z70,EMVIS017
          IF        !@EQUAL
            MOVE      EMVIS017,EMVIFUND
            MOVE      EMVIS017,PFUNDH
          ENDIF
.
          MATCH     Z70,EMVIS018
          IF        !@EQUAL
            MOVE      EMVIS018,EMVITABL
            MOVE      EMVIS018,PFNDTB
          ENDIF
.
          MATCH     Z70,EMVIS019
          IF        !@EQUAL
            MOVE      EMVIS019,EMVIREFG
          ENDIF
.
          MATCH     Z70,EMVIS020
          IF        !@EQUAL
            MOVE      EMVIS020,EMVIREFD
          ENDIF
.
          MATCH     Z70,EMVIS021 
          IF        !@EQUAL
            MOVE      EMVIS021,EMVIPLIN
          ENDIF
.
          MATCH     Z70,EMVIS022
          IF        !@EQUAL
            MOVE      EMVIS022,EMVIINIT
          ENDIF
.
          MATCH     Z70,EMVIS023
          IF        !@EQUAL
            MOVE      EMVIS023,EMVIRTAS
          ENDIF
.
          REP       "0 ",EMVIS024
          MATCH     Z70,EMVIS024
          IF        !@EQUAL
            MATCH     SP70,EMVIS024
            IF        !@EQUAL 
              UNPACK    EMVIS024,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS024,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS024
              MATCH     ZERO8,EMVIS024
              IF        @EQUAL
                PACK      EMVIDDAT,SP70
              ELSE
                MOVE      EMVIS024,EMVIDDAT
              ENDIF
            ELSE
              PACK    EMVIDDAT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS025
          IF        !@EQUAL
            MOVE      EMVIS025,EMVIDTIM
          ENDIF
.
          MATCH     Z70,EMVIS026
          IF        !@EQUAL
            MOVE      EMVIS026,EMVIDSTA
          ENDIF
.
          MATCH     Z70,EMVIS027
          IF        !@EQUAL
            MOVE      EMVIS027,EMVIELAP
          ENDIF
.
          REP       "0 ",EMVIS028
          MATCH     Z70,EMVIS028
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS028
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS028,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS028,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS028
              MATCH     ZERO8,EMVIS028
              IF        @EQUAL
                PACK      EMVINSDT,SP70
              ELSE
                MOVE      EMVIS028,EMVINSDT
              ENDIF
            ELSE
              PACK    EMVINSDT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS029
          IF        !@EQUAL
            MOVE      EMVIS029,EMVINSTM
          ENDIF
.
          REP       "0 ",EMVIS030
          MATCH     Z70,EMVIS030
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS030
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS030,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS030,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS030
              MATCH     ZERO8,EMVIS030
              IF        @EQUAL
                PACK      EMVIDRDT,SP70
              ELSE
                MOVE      EMVIS030,EMVIDRDT
              ENDIF
            ELSE
              PACK    EMVIDRDT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS031
          IF        !@EQUAL
            MOVE      EMVIS031,EMVIDRTM
          ENDIF
.
          MATCH     Z70,EMVIS032
          IF        !@EQUAL
            MOVE      EMVIS032,EMVITSRC
          ENDIF
.
          MATCH     Z70,EMVIS033
          IF        !@EQUAL
            MOVE      EMVIS033,EMVIDEST 
          ENDIF
.
          MATCH     Z70,EMVIS034
          IF        !@EQUAL
            MOVE      EMVIS034,EMVIAMBL 
          ENDIF
.
          MATCH     Z70,EMVIS035
          IF        !@EQUAL
            MOVE      EMVIS035,EMVIREGN
          ENDIF
.
          MATCH     Z70,EMVIS036
          IF        !@EQUAL
            MOVE      EMVIS036,EMVITXT1
          ENDIF
.
          MATCH     Z70,EMVIS037
          IF        !@EQUAL
            MOVE      EMVIS037,EMVITXT2
            REP       "#" ' ",EMVITXT2                              * Car 289460
          ENDIF
.
          MATCH     Z70,EMVIS038
          IF        !@EQUAL
            MOVE      EMVIS038,EMVITXT3
          ENDIF
.
          MATCH     Z70,EMVIS039
          IF        !@EQUAL
            MOVE      EMVIS039,EMVITXT4
          ENDIF
.
          MATCH     Z70,EMVIS040
          IF        !@EQUAL
            MOVE      EMVIS040,EMVITXT5
          ENDIF
.
          MATCH     Z70,EMVIS041
          IF        !@EQUAL
            MOVE      EMVIS041,EMVIUC01
          ENDIF
.
          MATCH     Z70,EMVIS042
          IF        !@EQUAL
            MOVE      EMVIS042,EMVIUC02
          ENDIF
.
          MATCH     Z70,EMVIS043
          IF        !@EQUAL
            MOVE      EMVIS043,EMVIUC03
          ENDIF
.
          MATCH     Z70,EMVIS044
          IF        !@EQUAL
            MOVE      EMVIS044,EMVIUC04
          ENDIF
.
          MATCH     Z70,EMVIS045
          IF        !@EQUAL
            MOVE      EMVIS045,EMVIUC05
          ENDIF
.
          MATCH     Z70,EMVIS046
          IF        !@EQUAL
            MOVE      EMVIS046,EMVIUC06
          ENDIF
.
          MATCH     Z70,EMVIS047
          IF        !@EQUAL
            MOVE      EMVIS047,EMVIUC07
          ENDIF
.
          MATCH     Z70,EMVIS048
          IF        !@EQUAL
            MOVE      EMVIS048,EMVIUC08
          ENDIF
.
          MATCH     Z70,EMVIS049
          IF        !@EQUAL
            MOVE      EMVIS049,EMVIUC09
          ENDIF
.
          MATCH     Z70,EMVIS050
          IF        !@EQUAL
            MOVE      EMVIS050,EMVIUC10
          ENDIF
.
          MATCH     Z70,EMVIS051
          IF        !@EQUAL
            MOVE      EMVIS051,EMVIUC11
          ENDIF
.
          MATCH     Z70,EMVIS052
          IF        !@EQUAL
            MOVE      EMVIS052,EMVIUC12
          ENDIF
.
          MATCH     Z70,EMVIS053
          IF        !@EQUAL
            MOVE      EMVIS053,EMVIUC13
          ENDIF
.
          MATCH     Z70,EMVIS054
          IF        !@EQUAL
            MOVE      EMVIS054,EMVIUC14
          ENDIF
.
          MATCH     Z70,EMVIS055
          IF        !@EQUAL
            MOVE      EMVIS055,EMVIUC15
          ENDIF
.
          MATCH     Z70,EMVIS056
          IF        !@EQUAL
            MOVE      EMVIS056,EMVIUC16
          ENDIF
.
          MATCH     Z70,EMVIS057
          IF        !@EQUAL
            MOVE      EMVIS057,EMVIUC17
          ENDIF
.
          MATCH     Z70,EMVIS058
          IF        !@EQUAL
            MOVE      EMVIS058,EMVIUC18
          ENDIF
.
          MATCH     Z70,EMVIS059
          IF        !@EQUAL
            MOVE      EMVIS059,EMVIUC19
          ENDIF
.
          MATCH     Z70,EMVIS060
          IF        !@EQUAL
            MOVE      EMVIS060,EMVIUC20
          ENDIF
.
          MATCH     Z70,EMVIS061
          IF        !@EQUAL
            MOVE      EMVIS061,EMVIUC21
          ENDIF
.
          MATCH     Z70,EMVIS062
          IF        !@EQUAL
            MOVE      EMVIS062,EMVIUC22
          ENDIF
.
          MATCH     Z70,EMVIS063
          IF        !@EQUAL
            MOVE      EMVIS063,EMVIUC23
          ENDIF
.
          MATCH     Z70,EMVIS064
          IF        !@EQUAL
            MOVE      EMVIS064,EMVIUC24
          ENDIF
.
          MATCH     Z70,EMVIS065
          IF        !@EQUAL
            MOVE      EMVIS065,EMVIUC25
          ENDIF
.
          MATCH     Z70,EMVIS066
          IF        !@EQUAL
            MOVE      EMVIS066,EMVIUC26
          ENDIF
.
          MATCH     Z70,EMVIS067
          IF        !@EQUAL
            MOVE      EMVIS067,EMVIUC27
          ENDIF
.
          MATCH     Z70,EMVIS068
          IF        !@EQUAL
            MOVE      EMVIS068,EMVIUC28
          ENDIF
.
          MATCH     Z70,EMVIS069
          IF        !@EQUAL
            MOVE      EMVIS069,EMVIUC29
          ENDIF
.
          MATCH     Z70,EMVIS070
          IF        !@EQUAL
            MOVE      EMVIS070,EMVIUC30
          ENDIF
.
          REP       "0 ",EMVIS071
          MATCH     Z70,EMVIS071
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS071
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS071,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS071,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS071
              MATCH     ZERO8,EMVIS071
              IF        @EQUAL
                PACK      EMVIUD01,SP70
              ELSE
                MOVE      EMVIS071,EMVIUD01
              ENDIF
            ELSE
              PACK    EMVIUD01,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS072
          MATCH     Z70,EMVIS072
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS072
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS072,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00 
              PACK      EMVIS072,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS072
              MATCH     ZERO8,EMVIS072
              IF        @EQUAL
                PACK      EMVIUD02,SP70 
              ELSE
                MOVE      EMVIS072,EMVIUD02
              ENDIF
            ELSE
              PACK    EMVIUD02,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS073
          MATCH     Z70,EMVIS073
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS073
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS073,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS073,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS073
              MATCH     ZERO8,EMVIS073
              IF        @EQUAL
                PACK      EMVIUD03,SP70
              ELSE
                MOVE      EMVIS073,EMVIUD03
              ENDIF
            ELSE
              PACK    EMVIUD03,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS074
          MATCH     Z70,EMVIS074
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS074
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS074,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS074,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS074
              MATCH     ZERO8,EMVIS074
              IF        @EQUAL
                PACK      EMVIUD04,SP70
              ELSE
                MOVE      EMVIS074,EMVIUD04
              ENDIF
            ELSE
              PACK    EMVIUD04,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS075
          MATCH     Z70,EMVIS075
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS075
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS075,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS075,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS075
              MATCH     ZERO8,EMVIS075
              IF        @EQUAL
                PACK      EMVIUD05,SP70
              ELSE
                MOVE      EMVIS075,EMVIUD05
              ENDIF
            ELSE
              PACK    EMVIUD05,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS076
          MATCH     Z70,EMVIS076
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS076
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS076,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS076,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS076
              MATCH     ZERO8,EMVIS076
              IF        @EQUAL
                PACK      EMVIUD06,SP70
              ELSE
                MOVE      EMVIS076,EMVIUD06
              ENDIF
            ELSE
              PACK    EMVIUD06,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS077
          MATCH     Z70,EMVIS077
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS077
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS077,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS077,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS077
              MATCH     ZERO8,EMVIS077
              IF        @EQUAL
                PACK      EMVIUD07,SP70
              ELSE
                MOVE      EMVIS077,EMVIUD07
              ENDIF
            ELSE
              PACK    EMVIUD07,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS078
          MATCH     Z70,EMVIS078
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS078
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS078,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS078,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS078
              MATCH     ZERO8,EMVIS078
              IF        @EQUAL
                PACK      EMVIUD08,SP70
              ELSE
                MOVE      EMVIS078,EMVIUD08
              ENDIF
            ELSE
              PACK    EMVIUD08,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS079
          MATCH     Z70,EMVIS079
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS079
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS079,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS079,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS079
              MATCH     ZERO8,EMVIS079
              IF        @EQUAL
                PACK      EMVIUD09,SP70
              ELSE
                MOVE      EMVIS079,EMVIUD09
              ENDIF
            ELSE
              PACK    EMVIUD09,SP70
            ENDIF
          ENDIF
. 
          REP       "0 ",EMVIS080
          MATCH     Z70,EMVIS080
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS080
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS080,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS080,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS080
              MATCH     ZERO8,EMVIS080
              IF        @EQUAL
                PACK      EMVIUD10,SP70
              ELSE
                MOVE      EMVIS080,EMVIUD10
              ENDIF
            ELSE
              PACK    EMVIUD10,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS081
          IF        !@EQUAL
            MOVE      EMVIS081,EMVIUT01
          ENDIF
.
          MATCH     Z70,EMVIS082
          IF        !@EQUAL
            MOVE      EMVIS082,EMVIUT02
          ENDIF
.
          MATCH     Z70,EMVIS083
          IF        !@EQUAL
            MOVE      EMVIS083,EMVIUT03
          ENDIF
.
          MATCH     Z70,EMVIS084
          IF        !@EQUAL
            MOVE      EMVIS084,EMVIUT04
          ENDIF
.
          MATCH     Z70,EMVIS085
          IF        !@EQUAL
            MOVE      EMVIS085,EMVIUT05
          ENDIF
.
          MATCH     Z70,EMVIS086
          IF        !@EQUAL
            MOVE      EMVIS086,EMVIUT06
          ENDIF
.
          MATCH     Z70,EMVIS087
          IF        !@EQUAL
            MOVE      EMVIS087,EMVIUT07
          ENDIF
.
          MATCH     Z70,EMVIS088
          IF        !@EQUAL
            MOVE      EMVIS088,EMVIUT08
          ENDIF
.
          MATCH     Z70,EMVIS089
          IF        !@EQUAL
            MOVE      EMVIS089,EMVIUT09
          ENDIF
.
          MATCH     Z70,EMVIS090
          IF        !@EQUAL
            MOVE      EMVIS090,EMVIUT10
          ENDIF
.
          MATCH     Z70,EMVIS091
          IF        !@EQUAL
            MOVE      EMVIS091,EMVIYN01
          ENDIF
.
          MOVE      EMVIS147,EMVIYN02
.
          MATCH     Z70,EMVIS093
          IF        !@EQUAL
            MOVE      EMVIS093,EMVIYN03
          ENDIF
.
          MOVE      EMVIS094,EMVIYN04
.
          MATCH     Z70,EMVIS095
          IF        !@EQUAL
            MOVE      EMVIS095,EMVIYN05
          ENDIF
.
          MATCH     Z70,EMVIS096
          IF        !@EQUAL
            MOVE      EMVIS096,EMVIYN06
          ENDIF
.
          MOVE      EMVIS097,EMVIYN07
.
          COMPARE   ZERO,EMVIS098
          IF        !@EQUAL
            MOVE      EMVIS098,EMVIYN08
          ENDIF
.
          COMPARE   ZERO,EMVIS098
          IF        !@EQUAL
            MOVE      EMVIS099,EMVIYN09
          ENDIF
.
..        COMPARE   ZERO,EMVIS100
..        IF        !@EQUAL
            MOVE      EMVIS100,EMVIYN10
..        ENDIF
.
          MATCH     Z70,EMVIS101
          IF        !@EQUAL
            MOVE      EMVIS101,EMVIUN01
          ENDIF
.
          MATCH     Z70,EMVIS102
          IF        !@EQUAL
            MOVE      EMVIS102,EMVIUN02
          ENDIF
.
          MATCH     Z70,EMVIS103
          IF        !@EQUAL
            MOVE      EMVIS103,EMVIUN03
          ENDIF
.
          MATCH     Z70,EMVIS104
          IF        !@EQUAL
            MOVE      EMVIS104,EMVIUN04
          ENDIF
.
          MATCH       Z70,EMVIS105
          IF          !@EQUAL
            MOVE      EMVIS105,EMVIUN05
          ENDIF
.
          MATCH     Z70,EMVIS106
          IF        !@EQUAL
            MOVE      EMVIS106,EMVIUR01
          ENDIF
.
          MATCH     Z70,EMVIS107
          IF        !@EQUAL
            MOVE      EMVIS107,EMVIUR02
          ENDIF
.
          MATCH     Z70,EMVIS108
          IF        !@EQUAL
            MOVE      EMVIS108,EMVIUR03
          ENDIF
.
          MATCH     Z70,EMVIS109
          IF        !@EQUAL
            MOVE      EMVIS109,EMVIUR04
          ENDIF
.
          MATCH     Z70,EMVIS110
          IF        !@EQUAL
            MOVE      EMVIS110,EMVIUR05
          ENDIF
.
          MATCH     Z70,EMVIS111
          IF        !@EQUAL
            MOVE      EMVIS111,EMUNDET1
          ENDIF
.
          MATCH     Z70,EMVIS112
          IF        !@EQUAL
            MOVE      EMVIS112,EMUNDET2
          ENDIF
.
          MATCH     Z70,EMVIS113
          IF        !@EQUAL
            MOVE      EMVIS113,EMUNSEX
          ENDIF
.
..          COMPARE   ZERO,EMVIS114
..          IF        !@EQUAL
            MOVE      EMVIS114,EMUNAGE
..          ENDIF
.
          MATCH     Z70,EMVIS115
          IF        !@EQUAL
            MOVE      EMVIS115,EMVIPADM
          ENDIF
.
          MATCH     Z70,EMVIS116
          IF        !@EQUAL
            MOVE      EMVIS116,EMVIEWRD
          ENDIF
.
          MATCH     Z70,EMVIS117
          IF        !@EQUAL
            MOVE      EMVIS117,EMVIEBED
          ENDIF
.
          PACK      KEY8,EMVIURNO,SP70             
          CALL      RDAMAST1
          IF        OVRCD=1
            PACK      EMVIS118,EMVIS118,SP70
            MATCH     SP70,EMVIS118
            IF        !@EQUAL
              MOVE      EMVIS118,EMVIURNO
            ELSE
              MATCH     SP70,EMVIURNO           
              IF        @EQUAL
                MOVE      ZEROUR,EMVIURNO
              ENDIF
            ENDIF
          ELSE
            PACK      EMVIURNO,EMVIURNO,SP70
          ENDIF  
.                                              
          MATCH     Z70,EMVIS124
          IF        !@EQUAL
            MOVE      EMVIS124,EMVIHFMN
            MOVE      EMVIS124,PMVXFNDM
            MOVE      EMVIS124,PFNDMM
          ENDIF
.
          MATCH     Z70,EMVIS125
          IF        !@EQUAL
            MOVE      EMVIS125,EMVIACLS
          ENDIF
.
          MATCH     Z70,EMVIS126
          IF        !@EQUAL
            MOVE      EMVIS126,EMVICCLS
          ENDIF
.
          MATCH     Z70,EMVIS127
          IF        !@EQUAL
            MOVE      EMVIS127,EMVITRNS
          ENDIF
.
          REP       "0 ",EMVIS128
          MATCH     Z70,EMVIS128
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS128
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS128,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS128,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS128
              MATCH     ZERO8,EMVIS128
              IF        @EQUAL
                PACK      EMVITRDT,SP70
              ELSE
                MOVE      EMVIS128,EMVITRDT
              ENDIF
            ELSE
              PACK    EMVITRDT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS129
          IF        !@EQUAL
            MOVE      EMVIS129,EMVITRTM
          ENDIF
.
          MATCH     Z70,EMVIS130
          IF        !@EQUAL
            MOVE      EMVIS130,EMVIATNS
          ENDIF
.
          MATCH     Z70,EMVIS131
          IF        !@EQUAL
            MOVE      EMVIS131,EMVIEXLC
          ENDIF
.
          MATCH     Z70,EMVIS132
          IF        !@EQUAL
            MOVE      EMVIS132,EMVISITE
          ELSE
            MATCH     SP70,EMVISITE
            IF        @EQUAL
              MOVE      WBSEESC,EMVISITE
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS133
          IF        !@EQUAL
            MOVE      EMVIS133,EMVIADMT
          ENDIF
.
          MATCH     Z70,EMVIS134
          IF        !@EQUAL
            MOVE      EMVIS134,EMVIUNIT
          ENDIF
.
          MATCH     Z70,EMVIS139
          IF        !@EQUAL
            MOVE      EMVIS139,EMVIINJ1
          ENDIF
.
          MATCH     Z70,EMVIS140
          IF        !@EQUAL
            MOVE      EMVIS140,EMVIINJ2
          ENDIF
.
          MATCH     Z70,EMVIS141
          IF        !@EQUAL
            MOVE      EMVIS141,EMVINATI
          ENDIF
.
          MATCH     Z70,EMVIS142
          IF        !@EQUAL
            MOVE      EMVIS142,EMVIINJC
          ENDIF
.
          MATCH     Z70,EMVIS143
          IF        !@EQUAL
            MOVE      EMVIS143,EMVIHUMI
          ENDIF
.
          MATCH     Z70,EMVIS144
          IF        !@EQUAL
            MOVE      EMVIS144,EMVIACTI
          ENDIF
.
          MATCH     Z70,EMVIS145
          IF        !@EQUAL
            MOVE      EMVIS145,EMVILOCO
          ENDIF
.
          COMPARE   ZERO,EMVIS146
          IF        !@EQUAL
            MOVE      EMVIS146,EMVIYN01
          ENDIF
.
          MOVE      EMVIS147,EMVIYN02
.
          COMPARE   ZERO,EMVIS148
          IF        !@EQUAL
            MOVE      EMVIS148,EMVIYN03
          ENDIF
.
          MATCH     Z70,EMVIS149
          IF        !@EQUAL
            MOVE      EMVIS149,EMVITXT1
          ENDIF
.
          REP       "0 ",EMVIS150
          MATCH     Z70,EMVIS150
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS150
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS150,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS150,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS150
              MATCH     ZERO8,EMVIS150
              IF        @EQUAL
                PACK      EMVIDPDT,SP70
              ELSE
                MOVE      EMVIS150,EMVIDPDT
              ENDIF
            ELSE
              PACK    EMVIDPDT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS151
          IF        !@EQUAL
            MOVE      EMVIS151,EMVIDPTM
          ENDIF
.
          MATCH     Z70,EMVIS152
          IF        !@EQUAL
            MOVE      EMVIS152,EMVIEXRS
          ENDIF
.
          MATCH     Z70,EMVIS153
          IF        !@EQUAL
            MOVE      EMVIS153,EMVIDLRS
          ENDIF
.
          MATCH     INJUR002,Z70
          IF        !@EQUAL
            MOVE      INJUR002,EMVIINJ1
          ENDIF
.
          MATCH     INJUR003,Z70
          IF        !@EQUAL
            MOVE      INJUR003,EMVIINJ2
          ENDIF
.
          MATCH     INJUR004,Z70
          IF        !@EQUAL
            MOVE      INJUR004,EMVIINJC
          ENDIF
.
          MATCH     INJUR005,Z70
          IF        !@EQUAL
            MOVE      INJUR005,EMVIHUMI
          ENDIF
.
          MATCH     INJUR006,Z70
          IF        !@EQUAL
            MOVE      INJUR006,EMVIACTI
          ENDIF
.
          MATCH     PTMAS001,Z70
          IF        !@EQUAL
            MOVE      PTMAS001,PTITL
          ENDIF
.
          MATCH     PTMAS002,Z70
          IF        !@EQUAL
            MOVE      PTMAS002,PHOSP
          ENDIF
.
          MATCH     PTMAS003,Z70
          IF        !@EQUAL
            MOVE      PTMAS003,PLDAYS
          ENDIF
.
          MATCH     PTMAS004,Z70
          IF        !@EQUAL
            MOVE      PTMAS004,PBDEBT
          ENDIF
.
          MATCH     PTMAS005,Z70
          IF        !@EQUAL
            MOVE      PTMAS005,PSNAME
            PACK      PSNAME,PSNAME,SP70
            MOVE      PTMAS005,PTMASNAM
            PACK      PTMASNAM,PTMASNAM,SP70
          ENDIF
.
          MATCH     PTMAS006,Z70
          IF        !@EQUAL
            MOVE      PTMAS006,PGNAME
            PACK      PGNAME,PGNAME,SP70
          ENDIF
.
          MATCH     PTMAS007,Z70
          IF        !@EQUAL
            MOVE      PTMAS007,PPSNAME
            PACK      PPSNAME,PPSNAME,SP70
          ENDIF
.
          MATCH     PTMAS008,Z70
          IF        !@EQUAL
            MOVE      PTMAS008,PADD1
          ENDIF
.
          MATCH     PTMAS009,Z70
          IF        !@EQUAL
            MOVE      PTMAS009,PADD2
          ENDIF
.
          MATCH     PTMAS010,Z70
          IF        !@EQUAL
            MOVE      PTMAS010,PSUBRB
          ENDIF
.
          MATCH     PTMAS011,Z70
          IF        !@EQUAL
            MOVE      PTMAS011,PPOST
          ENDIF
.
          MATCH     PTMAS012,Z70
          IF        !@EQUAL
            MOVE      PTMAS012,PTELEP
          ENDIF
.
          MATCH     PTMAS013,Z70
          IF        !@EQUAL
            MOVE      PTMAS013,PTELEB
          ENDIF
.
          MATCH     PTMAS014,Z70
          IF        !@EQUAL
            MOVE      PTMAS014,PSEX
          ENDIF
.
          MATCH     PTMAS015,Z70
          IF        !@EQUAL
            MOVE      PTMAS015,PMSTAT
          ENDIF
.
          REP       "0 ",PTMAS016
          MATCH     PTMAS016,Z70
          IF        !@EQUAL & !@EOS
            MATCH     PTMAS016,SP70
            IF        !@EQUAL & !@EOS
              UNPACK    PTMAS016,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      PTMAS016,CENT,YEAR2,MONTH2,DAY
              REP       " 0",PTMAS016
              MATCH     ZERO8,PTMAS016
              IF        @EQUAL
                PACK      PBDATE,SP70
              ELSE
                MOVE      PTMAS016,PBDATE
              ENDIF
            ELSE
              PACK    PBDATE,SP70
            ENDIF
          ENDIF
.
          MATCH     PTMAS017,Z70
          IF        !@EQUAL
            MOVE      PTMAS017,PSAGE
          ENDIF
.
          MATCH     PTMAS018,Z70
          IF        !@EQUAL
            MOVE      PTMAS018,PCONT
          ENDIF
.
          MATCH     PTMAS019,Z70
          IF        !@EQUAL
            MOVE      PTMAS019,PREG
          ENDIF
.
          MATCH     PTMAS020,Z70
          IF        !@EQUAL
            MOVE      PTMAS020,PTYPE
          ENDIF
.
          MATCH     PTMAS021,Z70
          IF        !@EQUAL
            MOVE      PTMAS021,POCCUP
          ENDIF
.
          MATCH     PTMAS022,Z70
          IF        !@EQUAL
            MOVE      PTMAS022,PMEDI
          ENDIF
.
          MATCH     PTMAS023,Z70
          IF        !@EQUAL
            SQUEEZE   PTMAS023
            MOVE      PTMAS023,PPENNO
          ENDIF
.
          MATCH     PTMAS024,Z70
          IF        !@EQUAL
            MOVE      PTMAS024,PPNDTE
          ENDIF
.
          MATCH     PTMAS025,Z70
          IF        !@EQUAL
            MOVE      PTMAS025,PREPAT
          ENDIF
.
          MATCH     PTMAS026,Z70
          IF        !@EQUAL
            MOVE      PTMAS026,PSMOK
          ENDIF
.
          MATCH     PTMAS027,Z70
          IF        !@EQUAL
            MOVE      PTMAS027,PMICRO
          ENDIF
.
          MATCH     PTMAS028,Z70
          IF        !@EQUAL
            MOVE      PTMAS028,PCEASE
          ENDIF
.
          MATCH     PTMAS029,Z70
          IF        !@EQUAL
            MOVE      PTMAS029,PCASE
          ENDIF
.
          MATCH     PTMAS030,Z70
          IF        !@EQUAL
            MOVE      PTMAS030,PAUTOPY
          ENDIF
.
          MATCH     PTMAS031,Z70
          IF        !@EQUAL
            MOVE      PTMAS031,PHIGH1
          ENDIF
.
          MATCH     PTMAS032,Z70
          IF        !@EQUAL
            MOVE      PTMAS032,PHIGH2
          ENDIF
.
          MATCH     PTMAS033,Z70
          IF        !@EQUAL
            MOVE      PTMAS033,PHIGH3
          ENDIF
.
          MATCH     PTMAS034,Z70
          IF        !@EQUAL
            MOVE      PTMAS034,PLOCDOC
          ENDIF
.
          MATCH     PTMAS035,Z70
          IF        !@EQUAL
            MOVE      PTMAS035,PFUNDH
          ENDIF
.
          MATCH     PTMAS036,Z70
          IF        !@EQUAL
            MOVE      PTMAS036,PFNDTB
          ENDIF
.
          MATCH     PTMAS037,Z70
          IF        !@EQUAL
            MOVE      PTMAS037,PFNDMM
          ENDIF
.
          MATCH     PTMAS038,Z70
          IF        !@EQUAL
            MOVE      PTMAS038,PUSR1
          ENDIF
.
          MATCH     PTMAS039,Z70
          IF        !@EQUAL
            MOVE      PTMAS039,PUSR2
          ENDIF
.
          MATCH     PTMAS040,Z70
          IF        !@EQUAL
            MOVE      PTMAS040,PUSR3
          ENDIF
.
          MATCH     PTMAS041,Z70
          IF        !@EQUAL
            MOVE      PTMAS041,PUSR4
          ENDIF
.
          MATCH     PTMAS042,Z70
          IF        !@EQUAL
            MOVE      PTMAS042,PUSR5
          ENDIF
.
          MATCH     PTMAS043,Z70
          IF        !@EQUAL
            MOVE      PTMAS043,PUSR6
          ENDIF
.
          MATCH     PTMAS044,Z70
          IF        !@EQUAL
            MOVE      PTMAS044,PUYN1
          ENDIF
.
          MATCH     PTMAS045,Z70
          IF        !@EQUAL
            MOVE      PTMAS045,PUYN2
          ENDIF
.
          MATCH     PTMAS046,Z70
          IF        !@EQUAL
            MOVE      PTMAS046,PUYN3
          ENDIF
.
          MATCH     PTMAS047,Z70
          IF        !@EQUAL
            MOVE      PTMAS047,PYRRES
          ENDIF
.
          MATCH     PTMAS048,Z70
          IF        !@EQUAL
            MOVE      PTMAS048,PNKNAME
          ENDIF
.
          MATCH     PTMAS049,Z70
          IF        !@EQUAL
            MOVE      PTMAS049,PNKADD1
          ENDIF
.
          MATCH     PTMAS050,Z70
          IF        !@EQUAL
            MOVE      PTMAS050,PNKADD2
          ENDIF
.
          MATCH     PTMAS051,Z70
          IF        !@EQUAL
            MOVE      PTMAS051,PNKSUBR
          ENDIF
.
          MATCH     PTMAS052,Z70
          IF        !@EQUAL
            MOVE      PTMAS052,PNKPOST
          ENDIF
.
          MATCH     PTMAS053,Z70
          IF        !@EQUAL
            MOVE      PTMAS053,PNKTELP
          ENDIF
.
          MATCH     PTMAS054,Z70
          IF        !@EQUAL
            MOVE      PTMAS054,PNKTELB
          ENDIF
.
          MATCH     PTMAS055,Z70
          IF        !@EQUAL
            MOVE      PTMAS055,PNKRELP
          ENDIF
.
          MATCH     PTMAS056,Z70
          IF        !@EQUAL
            MOVE      PTMAS056,PNXRAY
          ENDIF
.
          MATCH     PTMAS057,Z70
          IF        !@EQUAL
            MOVE      PTMAS057,PFNDYY
          ENDIF
.
          MATCH     PTMAS058,Z70
          IF        !@EQUAL
            MOVE      PTMAS058,PFNDCG
          ENDIF
.
          REP       "0 ",PTMAS059
          MATCH     PTMAS059,Z70
          IF        !@EQUAL
            MATCH     SP70,PTMAS059
            IF        !@EQUAL & !@EOS
              UNPACK    PTMAS059,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      PTMAS059,CENT,YEAR2,MONTH2,DAY
              REP       " 0",PTMAS059
              MATCH     ZERO8,PTMAS059
              IF        @EQUAL
                PACK      PDECDTE,SP70
              ELSE
                MOVE      PTMAS059,PDECDTE
              ENDIF
            ELSE
              PACK    PDECDTE,SP70
            ENDIF
          ENDIF
.
          MATCH     PTMAS060,Z70
          IF        !@EQUAL
            MOVE      PTMAS060,PDIET
          ENDIF
.
          MATCH     PTMAS061,Z70
          IF        !@EQUAL
            MOVE      PTMAS061,PKNAME
          ENDIF
.
          MATCH     PTMAS062,Z70
          IF        !@EQUAL
            MOVE      PTMAS062,PKADD1
          ENDIF
.
          MATCH     PTMAS063,Z70
          IF        !@EQUAL
            MOVE      PTMAS063,PKADD2
          ENDIF
.
          MATCH     PTMAS064,Z70
          IF        !@EQUAL
            MOVE      PTMAS064,PKSUBR
          ENDIF
.
          MATCH     PTMAS065,Z70
          IF        !@EQUAL
            MOVE      PTMAS065,PKPOST
          ENDIF
.
          MATCH     PTMAS066,Z70
          IF        !@EQUAL
            MOVE      PTMAS066,PKTELEP
          ENDIF
.
          MATCH     PTMAS067,Z70
          IF        !@EQUAL
            MOVE      PTMAS067,PKTELEB
          ENDIF
.
          MATCH     PTMAS068,Z70
          IF        !@EQUAL
            MOVE      PTMAS068,PKRELP
          ENDIF
.
          MATCH     PTMAS069,Z70
          IF        !@EQUAL
            MOVE      PTMAS069,PKADD4
          ENDIF
.
..          MATCH     PTMAS070,Z70
..          IF        !@EQUAL
..            MOVE      PTMAS070,PTNINMPI
..          ENDIF
.
..          MATCH     PTMAS081,Z70
..          IF        !@EQUAL
..            MOVE      PTMAS081,PTMAMCRN
..          ENDIF
.
..          MATCH     PTMAS082,Z70
..          IF        !@EQUAL
..            MOVE      PTMAS082,PTMAMCED
..          ENDIF
.
..          MATCH     PTMAS083,Z70
..          IF        !@EQUAL
..            MOVE      PTMAS083,PTMAECNM
..          ENDIF
.
..          MATCH     PTMAS084,Z70
..          IF        !@EQUAL
..            MOVE      PTMAS084,PTMAECPP
..          ENDIF
.
          MATCH     PTMAS085,Z70
          IF        !@EQUAL
            MOVE      PTMAS085,PADD4
          ENDIF
.
STVIS500  MATCH     PTMAS086,Z70
          IF        !@EQUAL
            MATCH     PTMAS086,PTMADCDT
            IF        !@EQUAL
              PACK      PTMADCUD,CCC,CYY,CMM,CDD * Set demographics confirmed
              REP       " 0",PTMADCUD            * updated by date,time and user
              CLOCK     TIME,PTMADCUT
              MOVE      USERID,PTMADCUU
            ENDIF
.
            MATCH     "1",CONFDEMO
            IF        @EQUAL
              PACK      KEY8,CCC,CYY,CMM,CDD
              REP       " 0",KEY8
              MATCH     KEY8,PTMAS086              * Today
              IF        @EQUAL
                PACK      PTMADCUD,CCC,CYY,CMM,CDD * Set demographics confirmed
                REP       " 0",PTMADCUD            * updated by date,time user
                CLOCK     TIME,PTMADCUT
                MOVE      USERID,PTMADCUU
              ENDIF
            ENDIF
.
            PACK      PTMADCDT,PTMAS086,SP70
          ENDIF
.
          CLOCK     TIME,PTMAUTIM
          MOVE      USERID,PTMAUUID
.
          CALL      UPMSX000
.
          MATCH     Z70,PTMAS070
          IF        !@EQUAL
            READ      CONTROLF,EIGHTY8;*237,PTCNEMPL
            MOVE      SP10,ACODE
            MOVE      ZERO,FORM1
            UNPACK    SP2,DIM1,DIM1A
            UNPACK    PTCNEMPL,DIM1,DIM1A
            MOVE      DIM1A,FORM1
            MATCH     ANSU,DIM1
            IF        @EQUAL
              STORE     PTMAS070,FORM1,AUSR1,AUSR2,AUSR3,AUSR4,AUSR5,AUSR6,AUSR7
            ENDIF
.
            MATCH     ANSP,DIM1
            IF        @EQUAL
              STORE     PTMAS070,FORM1,PUSR1,PUSR2,PUSR3,PUSR4,PUSR5,PUSR6
            ENDIF
          ENDIF
.
          MATCH     SP8,EMVIDATE                  * arrival date blank?
          IF        @EQUAL
            MATCH     SP8,EMVITRDT                * yes - triage date blank?
            IF        @EQUAL
              CALL      IBACLOCK                  * yes - write current date
              PACK      EMVIDATE,CCC,CYY,CMM,CDD
              REP       " 0",EMVIDATE
            ELSE
              PACK      EMVIDATE,EMVITRDT         * no - write triage date
            ENDIF
          ENDIF
.
          UNPACK    EMVIDATE,DCC,DYY,DMM,DDD
          MOVE      DCC,FCC
          MOVE      DYY,FYY
          MOVE      DMM,FMM
          MOVE      DDD,FDD
          PACK      EMVIDATE,FCC,FYY,FMM,FDD
          REP       " 0",EMVIDATE
.
          MATCH     SP8,EMVITIME                  * arrival time blank?
          IF        @EQUAL
            MATCH     SP8,EMVITRTM                * yes - triage time blank?
            IF        @EQUAL
              CALL      IBACLOCK                  * yes - write current time
              PACK      EMVITIME,CTIMEIS
              REP       " 0",EMVITIME
            ELSE
              PACK      EMVITIME,EMVITRTM         * no - write triage time
            ENDIF
          ENDIF                                             
.
          REP       "0 ",EMVIS154
          MATCH     Z70,EMVIS154
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS154
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS154,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS154,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS154
              MATCH     ZERO8,EMVIS154
              IF        @EQUAL
                PACK      EMVIAADT,SP70
              ELSE
                MOVE      EMVIS154,EMVIAADT
              ENDIF
            ELSE
              PACK    EMVIAADT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS155
          IF        !@EQUAL
            MOVE      EMVIS155,EMVIAATM
          ENDIF
.
          REP       "0 ",EMVIS156
          MATCH     Z70,EMVIS156
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS156
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS156,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS156,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS156
              MATCH     ZERO8,EMVIS156
              IF        @EQUAL
                PACK      EMVIAHDT,SP70
              ELSE
                MOVE      EMVIS156,EMVIAHDT
              ENDIF
            ELSE
              PACK    EMVIAHDT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS157
          IF        !@EQUAL
            MOVE      EMVIS157,EMVIAHTM
          ENDIF
.
          REP       "0 ",EMVIS158
          MATCH     Z70,EMVIS158
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS158
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS158,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS158,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS158
              MATCH     ZERO8,EMVIS158
              IF        @EQUAL
                PACK      EMVIDADT,SP70
              ELSE
                MOVE      EMVIS158,EMVIDADT
              ENDIF
            ELSE
              PACK    EMVIDADT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS159
          IF        !@EQUAL
            MOVE      EMVIS159,EMVIDATM
          ENDIF
.
          MATCH     Z70,EMVIS160
          IF        !@EQUAL
            MOVE      EMVIS160,EMVIPURC
          ENDIF
.
          MATCH     Z70,EMVIS161
          IF        !@EQUAL
            MOVE      EMVIS161,EMVIMNCD
          ENDIF
.
          REP       "0 ",EMVIS162
          MATCH     Z70,EMVIS162
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS162
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS162,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS162,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS162
              MATCH     ZERO8,EMVIS162
              IF        @EQUAL
                PACK      EMVIMNDT,SP70
              ELSE
                MOVE      EMVIS162,EMVIMNDT
              ENDIF
            ELSE
              PACK    EMVIMNDT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS163
          IF        !@EQUAL
            MOVE      EMVIS163,EMVIMNTM
          ENDIF
.
          MATCH     Z70,EMVIS164
          IF        !@EQUAL
            MOVE      EMVIS164,EMVIMDCD
          ENDIF
.
          REP       "0 ",EMVIS165
          MATCH     Z70,EMVIS165
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS165
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS165,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS165,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS165
              MATCH     ZERO8,EMVIS165
              IF        @EQUAL
                PACK      EMVIMDDT,SP70
              ELSE
                MOVE      EMVIS165,EMVIMDDT
              ENDIF
            ELSE
              PACK    EMVIMDDT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS166
          IF        !@EQUAL
            MOVE      EMVIS166,EMVIMDTM
          ENDIF
.
          MATCH     Z70,EMVIS167
          IF        !@EQUAL
            MOVE      EMVIS167,EMVIUC31
          ENDIF
.
          MATCH     Z70,EMVIS168
          IF        !@EQUAL
            MOVE      EMVIS168,EMVIUC32
          ENDIF
.
          MATCH     Z70,EMVIS169
          IF        !@EQUAL
            MOVE      EMVIS169,EMVIUC33
          ENDIF
.
          MATCH     Z70,EMVIS170
          IF        !@EQUAL
            MOVE      EMVIS170,EMVIUC34
          ENDIF
.
          MATCH     Z70,EMVIS171
          IF        !@EQUAL
            MOVE      EMVIS171,EMVIUC35
          ENDIF
.
          MATCH     Z70,EMVIS174
          IF        !@EQUAL
            MOVE      EMVIS174,EMVIREFP
          ENDIF
.
          MATCH     Z70,EMVIS175
          IF        !@EQUAL
            MOVE      EMVIS175,EMVIREPM
          ENDIF
.
STVIS050  REP       "0 ",EMVIS176
          MATCH     Z70,EMVIS176
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS176
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS176,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS176,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS176
              MATCH     ZERO8,EMVIS176
              IF        @EQUAL
                PACK      EMVIREDT,SP70
              ELSE
                MOVE      EMVIS176,EMVIREDT
              ENDIF
            ELSE
              MOVE    SP70,EMVIREDT
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS177
          IF        !@EQUAL
            MOVE      EMVIS177,EMVIVSTY
          ENDIF
.
          MATCH     Z70,EMVIS178
          IF        !@EQUAL
            MOVE      EMVIS178,EMVIVPLC
          ENDIF
.
          MATCH     Z70,EMVIS179
          IF        !@EQUAL
            MOVE      EMVIS179,EMVIAHCP
          ENDIF
.
          MATCH     Z70,EMVIS180
          IF        !@EQUAL
            MOVE      EMVIS180,EMVIAHST
          ENDIF
.
          MATCH     Z70,EMVIS181
          IF        !@EQUAL
            MOVE      EMVIS181,EMVIDISD
          ENDIF
.
          MATCH     Z70,EMVIS182
          IF        !@EQUAL
            MOVE      EMVIS182,EMVIDRUG
          ENDIF
.
          MATCH     SP70,EMVICOM1
          GOTO      STVIS999 IF NOT EQUAL
.
          MATCH     SP70,EMVICOM2
          GOTO      STVIS999 IF NOT EQUAL
.                                                           
          IF        EMCNPCIE=1                              
            LOAD      INJTXT1,EMCNUDXA,EMVITXT1,EMVITXT2,EMVITXT3,EMVITXT4:
                                       EMVITXT5             
          ELSE                                              
            GOTO    STVIS999
          ENDIF                                             
.                                                           
          PACK      EMVICOM1,INJTXT1,SP70                   
.                                                           
          LOAD      INJTXT2,EMCNUDXB,EMVITXT1,EMVITXT2,EMVITXT3,EMVITXT4:
                                     EMVITXT5               
.
          PACK      EMVICOM2,INJTXT2,SP70
.
STVIS999  RETURN

.-------------------------------------------------------------------
.   Add Presenting Complaint text
.------------------------------------------------------------------
ADDPRE00  COMPARE   ZERO,PRECOMFL     * No Comments in Update Ignore
          GOTO      ADDPRE99 IF EQUAL
          MOVE      ZERO,F3
          MOVE      SP70,EMVIS004
          MOVE      SP70,EMVIS005
          MOVE      SP70,EMVIS135
          MOVE      SP70,EMVIS136
          MOVE      SP70,EMVIS137
          MOVE      SP70,EMVIS138
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PRECOMAF,PRECOMNM
          TRAPCLR   IO
          BRANCH    OVRCD,ADDPRE99
.
ADDPRE10  ADD       ONE,F3
          MOVE      F3,OBMTUNIQ
          READ      PRECOMAF,SEQ;OBMTCMNT
          GOTO      ADDPRE80 IF OVER
          STORE     OBMTCMNT,F3,EMVIS004,EMVIS005,EMVIS135,EMVIS136,EMVIS137:
                                EMVIS138
          GOTO      ADDPRE10
.
ADDPRE80  MOVE      EMVIS004,EMVICOM1
          MOVE      EMVIS005,EMVICOM2
          MOVE      EMVIS135,EMVICOM3
          MOVE      EMVIS136,EMVICOM4
          MOVE      EMVIS137,EMVICOM5
          MOVE      EMVIS138,EMVICOM6
.
ADDPRE99  RETURN
.-------------------------------------------------------------------
.   Add Presenting Complaint text
.------------------------------------------------------------------
ADDPRX00  COMPARE   ZERO,PRECOMFL
          GOTO      ADDPRX99 IF EQUAL
          MOVE      ZERO,F3
          MOVE      SP70,EMEXP008
          MOVE      SP70,EMEXP009
          MOVE      SP70,EMEXP010
          MOVE      SP70,EMEXP011
          MOVE      SP70,EMEXP012
          MOVE      SP70,EMEXP013
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PRECOMAF,PRECOMNM
          TRAPCLR   IO
          BRANCH    OVRCD,ADDPRX99
.
ADDPRX10  ADD       ONE,F3
          MOVE      F3,OBMTUNIQ
          READ      PRECOMAF,SEQ;OBMTCMNT
          GOTO      ADDPRX99 IF OVER
          STORE     OBMTCMNT,F3,EMEXP008,EMEXP009,EMEXP010,EMEXP011,EMEXP012:
                                EMEXP013
          GOTO      ADDPRX10
.
ADDPRX99  RETURN
.-------------------------------------------------------------------------------
.  Display Mandatory Fields etc
.-------------------------------------------------------------------------------
DISMAN00  MOVE       ZERO,F2
DISMAN10  ADD        ONE,F2
          IF         F2>MSGARRNO
            GOTO        DISMAN99
          ENDIF
.
          IF         F2>21
            GOTO        DISMAN99
          ENDIF
.
          MOVE      MSGARR[F2],KEY5
          CALL      RDEMWFM1
          BRANCH    OVRCD,DISMAN10
.
          WRITE     HTMLFILE;"<tr><td>",EMWFSDE,"&nbsp;</td>":
                             "<td>",EMWFDES,"&nbsp;</td>";
.
          MOVE      "EZ",CATEGORY
          MOVE      EMWFRES,CODE
          CALL      GETCOD00
.
          MATCH     "3  ",TCINDC1
          IF        @EQUAL
            WRITE     HTMLFILE;"<td> Nurse:",NURSNAME,"&nbsp;</td>";
          ENDIF
          MATCH     "2  ",TCINDC1
          IF        @EQUAL
            WRITE     HTMLFILE;"<td> Doctor:",DOCTRNAM,"&nbsp;</td>";
          ENDIF
          MATCH     "1  ",TCINDC1
          IF        @EQUAL
            WRITE     HTMLFILE;"<td> PSC:&nbsp;</td>";
          ENDIF
.
          MATCH     "1",EMWFMND
          IF        @EQUAL
            WRITE     HTMLFILE;"<td>Discharge</td></tr>";
          ELSE
            WRITE     HTMLFILE;"<td>&nbsp;</td></tr>";
          ENDIF
.
.
          GOTO      DISMAN10
.
DISMAN99  RETURN
.------------------------------------------------------------
.         CUNK0000  Clear unknown patient file variables
.------------------------------------------------------------
CUNK0000  PACK      EMUNDET1,SP50
          PACK      EMUNDET2,SP50
          PACK      EMUNSEX,SP10
          CLEAR     EMUNAGE
.
CUNK9999  RETURN
.------------------------------------------------------------
.         CLDT0000  Clear old aae details file variables
.------------------------------------------------------------
CLDT0000  MOVE      SP8,ADADATE
          MOVE      SP8,ADATIME
          MOVE      SP3,ADACOMP
          MOVE      SP3,ADACLASS
          MOVE      SP3,ADASRC
          MOVE      SP3,ADAINSUR
          MOVE      SP3,ADASIT
          MOVE      SP3,ADAMODE
          MOVE      SP1,ADAFILL
          MOVE      SP3,ADAPREV
          MOVE      SP6,ADADOCT
          MOVE      SP5,ADASEEN
          MOVE      ZERO,ADAADMIT
          MOVE      SP2,ADALOCK
          MOVE      SP30,ADAEMPL
          PACK      ADAADD1,SP30,SP10
          PACK      ADAADD2,SP30,SP10
          PACK      ADASUBR,SP30,SP10
          MOVE      SP30,ADAPOST
          MOVE      SP30,ADATELE
          MOVE      SP30,ADACONT
.
          MOVE      SP3,ADAUSR1
          MOVE      SP3,ADAUSR2
          MOVE      SP3,ADAUSR3
          MOVE      SP3,ADAUSR4
          MOVE      SP3,ADAUSR5
          PACK      ADADIAG,SP30,SP30
          MOVE      SP5,ADAWAIT
          MOVE      SP8,ADASDTE
.
          MOVE      SP5,AEDARDOC 
.
CLDT9999  RETURN
.------------------------------------------------------------
.         CLDS0000  Clear old aae discharge variables
.------------------------------------------------------------
CLDS0000  MOVE      SP8,ADSDATE
          MOVE      SP5,ADSTIME
          MOVE      SP7,ADSDIAG
          MOVE      SP3,ADSDISC
          PACK      ADSSSES,SP30,SP30,SP20
.
CLDS9999  RETURN
.------------------------------------------------------------
.   DATEVL00  :   Date Validation                                           
.------------------------------------------------------------
.         If there is an arrival date/time on file, then make sure that it
.         is less than the nurse seen date/time, doctor seen date/time &
.         discharge date/time.
.
.         First check if arrival or discharge dates are blank
.
.         If there is an ambulance arrival date/time. Check it's before
.         the triage date/time and discharge date/time
.
DATEVL00  MATCH     SP8,EMVIDATE                 * arrival date blank ?
          GOTO      DATEVL06 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDDAT                 * discharge date blank ?
          GOTO      DATEVL02 IF EQUAL            * yes - check nurse date/time
.
.         Make sure discharge date is not prior to arrival date
.
          MATCH     EMVIDATE,EMVIDDAT            * dis. date = arr. date ?
          GOTO      DATEVL01 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Discharge date prior to arrival date",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL02                     * date > arrival date - ok
.
.         Check if arrival or discharge time is blank
.
DATEVL01  MATCH     SP8,EMVITIME                 * arrival time blank ?
          GOTO      DATEVL02 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDTIM                 * discharge time blank ?
          GOTO      DATEVL02 IF EQUAL            * yes - ignore this validation
.
.         The arrival date & discharge date are the same, so make sure
.         that the discharge time is not less than the arrival time.
.
          MATCH     EMVITIME,EMVIDTIM            * dis. time < arr. time ?
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Discharge time prior to arrival time",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE 
            GOTO      DATEVL95
          ENDIF
.
.         Check if nurse seen date is blank
.
DATEVL02  MATCH     SP8,EMVINSDT                 * nurse seen date blank ?
          GOTO      DATEVL04 IF EQUAL            * yes - ignore this validation
.
.         Make sure that the nurse seen date is not prior to the arrival date
.
          MATCH     EMVIDATE,EMVINSDT            * nurse seen date = arr. date ?
          GOTO      DATEVL03 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Nurse seen date prior to arrival date",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL04                     * date > arrival date
.
.         Check if the arrival or nurse seen times are blank
.
DATEVL03  MATCH     SP8,EMVITIME                 * arrival time blank ?
          GOTO      DATEVL04 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVINSTM                 * nurse seen time blank ?
          GOTO      DATEVL04 IF EQUAL            * yes - ignore this validation
.
.         The arrival date & nurse seen date are the same, so make sure
.         that the nurse seen time is not less than the arrival time.
.
          MATCH     EMVITIME,EMVINSTM            * nurse seen time < arr. time ?
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Nurse seen time prior to arrival time",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
.         Check if doctor seen date is blank
.
DATEVL04  MATCH     SP8,EMVIDRDT                 * doctor seen date blank ?
          GOTO      DATEVL06 IF EQUAL            * yes - ignore this validation
          GOTO      DATEVL06 IF EOS              * yes - ignore this validation
.
.         Make sure that the doctor seen date is not prior to the arrival date
.
          MATCH     EMVIDATE,EMVIDRDT            * dr. seen date = arr. date ?
          GOTO      DATEVL05 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Doctor seen date prior to arrival date",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL06                     * date > arrival date
.
.         Check if the arrival or doctor seen times are blank
.
DATEVL05  MATCH     SP8,EMVITIME                 * arrival time blank ?
          GOTO      DATEVL06 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDRTM                 * doctor seen time blank ?
          GOTO      DATEVL06 IF EQUAL            * yes - ignore this validation
.
.         The arrival date & doctor seen date are the same, so make sure
.         that the doctor seen time is not less than the arrival time.
.
          MATCH     EMVITIME,EMVIDRTM            * dr. seen time < arr. time ?
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Doctor seen time prior to arrival time",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
.         If there is a discharge date/time on file, then make sure that it
.         is not less than the nurse seen date/time and doctor seen date/time.
.
.         First check if discharge or nurse seen dates are blank
.
DATEVL06  MATCH     SP8,EMVIDDAT                 * discharge date blank ?
          GOTO      DATEVL10 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVINSDT                 * nurse seen date blank ?
          GOTO      DATEVL08 IF EQUAL            * yes - ignore this validation
.
.         Don't check the nurse seen date/time for patients that
.         have a linked inpatient admission unless a current emergency
.         visit if being discharged.
.
          MATCH     SP70,EMVIPADM                * Linked inpatient admission
          IF        !@EQUAL
            IF        EMVISTAT=1
              MATCH     "D ",FORMACTN            * Discharge a current
              GOTO      DATEVL10 IF NOT EQUAL    * emergency visit
            ENDIF
          ENDIF
.
.         Make sure nurse seen date is not after the discharge date
.
          MATCH     EMVINSDT,EMVIDDAT            * dis. date = nurse seen date ?
          GOTO      DATEVL07 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Nurse seen date prior to discharge date",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL08                     * date > nurse seen date - ok
.
.         Check if discharge or nurse seen time is blank
.
DATEVL07  MATCH     SP8,EMVIDTIM                 * discharge time blank ?
          GOTO      DATEVL08 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVINSTM                 * nurse seen time blank ?
          GOTO      DATEVL08 IF EQUAL            * yes - ignore this validation
.
.         The nurse seen date & discharge date are the same, so make sure
.         that the discharge time is not less than the nurse seen time.
.
          MATCH     EMVINSTM,EMVIDTIM            * dis. time < nurse seen time ?
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Discharge time prior to nurse seen time",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
.         Check if doctor seen date is blank
.
DATEVL08  MATCH     SP8,EMVIDRDT                 * doctor seen date blank ?
          GOTO      DATEVL10 IF EQUAL            * yes - ignore this validation
.
.         Don't check the doctor seen date/time for patients that
.         have a linked inpatient admission unless a current emergency
.         visit if being discharged.
.
          MATCH     SP70,EMVIPADM                * Linked inpatient admission
          IF        !@EQUAL
            IF        EMVISTAT=1
              MATCH     "D ",FORMACTN            * Discharge a current
              GOTO      DATEVL10 IF NOT EQUAL    * emergency visit
            ENDIF
          ENDIF
.
.         Make sure doctor seen date is not after the discharge date
.
          MATCH     EMVIDRDT,EMVIDDAT            * dis. date = dr. seen date ?
          GOTO      DATEVL09 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Discharge date prior to doctor seen date",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL10                     * date > doctor seen date - ok
.
.         Check if discharge or doctor seen time is blank
.
DATEVL09  MATCH     SP8,EMVIDTIM                 * discharge time blank ?
          GOTO      DATEVL10 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDRTM                 * doctor seen time blank ?
          GOTO      DATEVL10 IF EQUAL            * yes - ignore this validation
.
.         The doctor seen date & discharge date are the same, so make sure
.         that the discharge time is not less than the doctor seen time.
.
          MATCH     EMVIDRTM,EMVIDTIM            * dis. time < dr. seen time ?
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Discharge time prior to doctor seen time",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
.         Check if amb arrival or triage date are blank
.
DATEVL10  MATCH     SP8,EMVIAADT                 * amb Arrival date blank ?
          GOTO      DATEVL12 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVITRDT                 * triage date blank ?
          GOTO      DATEVL12 IF EQUAL            * yes - ignore this validation
.
.         Make sure amb arrival date is not after the triage date
.
          MATCH     EMVITRDT,EMVIAADT            * amd arr date = trige date
          GOTO      DATEVL11 IF EQUAL            * yes
          IF        !@LESS
            CLEAR     WEBTITLE
            APPEND    "Amb destination date after the triage date",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL12                * amb arr date > triage date - ok
.
.         Check if amb arrival or triage time are blank
.
DATEVL11  MATCH     SP8,EMVIAATM                 * amb arrival time blank ?
          GOTO      DATEVL12 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVITRTM                 * triage time blank ?
          GOTO      DATEVL12 IF EQUAL            * yes - ignore this validation
.
.         The amb arrival date & triage date are the same, so make sure
.         that the amb arrival time is not after the triage time.
.
          MATCH     EMVITRTM,EMVIAATM       * amb arrival time = triage time
          GOTO      DATEVL12 IF EQUAL            * yes - ignore this validation
          IF        !@LESS
            CLEAR     WEBTITLE
            APPEND    "Amb destination time after the triage time",WEBTITLE
            APPEND    ", not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
. Check if amb arrival or discharge date are blank
.
DATEVL12  GOTO      DATEVL14
.
..        MATCH     SP8,EMVIAADT                 * amb Arrival date blank ?
..        GOTO      DATEVL14 IF EQUAL            * yes - ignore this validation
.
..        MATCH     SP8,EMVIDDAT                 * discharge date blank ?
..        GOTO      DATEVL14 IF EQUAL            * yes - ignore this validation
.
.         Make sure amb arrival date is not after the discharge date
.
..        MATCH     EMVIAADT,EMVIDDAT            * amb arr date = discharge date
..        GOTO      DATEVL13 IF EQUAL            * yes
..        IF        @LESS
..          CLEAR     WEBTITLE
..          APPEND    "Amb arrival date must be prior to the discharge",WEBTITLE
..          APPEND    " date , not updated.",WEBTITLE
..          RESET     WEBTITLE
..          GOTO      DATEVL95
..        ENDIF
..        GOTO      DATEVL14                * amb arr date < discharge date - ok
.
.         Check if amb arrival or discharge time are blank
.
..DATEVL13  MATCH     SP8,EMVIAATM                 * amb arrival time blank ?
..        GOTO      DATEVL14 IF EQUAL            * yes - ignore this validation
.
..        MATCH     SP8,EMVIDTIM                 * discharge time blank ?
..        GOTO      DATEVL14 IF EQUAL            * yes - ignore this validation
.
.         The amb arrival date & discharge date are the same, so make sure
.         that the discharge time is not less than the amb arrival time.
.
..        MATCH     EMVIAATM,EMVIDTIM       * amb arrival time > discharge time
..        IF        @LESS
..          CLEAR     WEBTITLE
..          APPEND    "Amb arrival time must be prior to the discharge",WEBTITLE
..          APPEND    "time, not updated.",WEBTITLE
..          RESET     WEBTITLE
..          GOTO      DATEVL95
..        ENDIF
.
. Check if decision to admit or arrival date are blank
.
DATEVL14  MATCH     SP8,EMVIDADT                 * Decision to admit date blank?
          GOTO      DATEVL16 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDATE                 * arrival date blank ?
          GOTO      DATEVL16 IF EQUAL            * yes - ignore this validation
.
.         Make sure decision to admit date is after the arrival date
.
          MATCH     EMVIDATE,EMVIDADT            * Dec to adm date = disc date 
          GOTO      DATEVL15 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Decision to admit date prior to the arrival",WEBTITLE
            APPEND    " date , not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL16                * arr date < dec to adm date - ok
.
.         Check if decision to admit or arrival time are blank
.
DATEVL15  MATCH     SP8,EMVIDATM                 * decision to admit time blank?
          GOTO      DATEVL16 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVITIME                 * arrival time blank ?
          GOTO      DATEVL16 IF EQUAL            * yes - ignore this validation
.
.         The decision to admit date & arrival date are the same, so make sure
.         that the arrival time is not greater than the decision to admit time
.
          MATCH     EMVITIME,EMVIDATM       * arrival time > dec to admit time
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Decision to admit time must be after the ",WEBTITLE
            APPEND    "arrival time, not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
. Check if the decision to admit or discharge dates are blank
.
DATEVL16  MATCH     SP8,EMVIDADT                 * Decision to admit date blank?
          GOTO      DATEVL18 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDDAT                 * discharge date blank ?
          GOTO      DATEVL18 IF EQUAL            * yes - ignore this validation
.
.         Make sure discharge date is after the decision to admit date
.
          MATCH     EMVIDADT,EMVIDDAT            * Dec to adm date = disc date
          GOTO      DATEVL17 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Decision to admit date is after the discharge",WEBTITLE
            APPEND    " date , not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL18                * dec to adm date < disc date - ok
.
.         Check if decision to admit or discharge time are blank
.
DATEVL17  MATCH     SP8,EMVIDATM                 * decision to admit time blank?
          GOTO      DATEVL18 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDTIM                 * discharge time blank ?
          GOTO      DATEVL18 IF EQUAL            * yes - ignore this validation
.
.         The decision to admit date & arrival date are the same, so make sure
.         that the decision to admit time in not after the discharge time
.
          MATCH     EMVIDATM,EMVIDTIM       * dec to admit time > disc time
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Decision to admit time must be prior to the ",WEBTITLE
            APPEND    "discharge time, not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
. Ambulance handover => Triage Date
.
DATEVL18  MATCH     SP8,EMVIAHDT                 * Amb Handover date blank?
          GOTO      DATEVL20 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVITRDT                 * Triage date blank ?
          GOTO      DATEVL20 IF EQUAL            * yes - ignore this validation
.
.         Make sure Amb handover date >= triage date
.
          MATCH     EMVITRDT,EMVIAHDT            * Amb handover date=triage date
          GOTO      DATEVL19 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            MATCH     "1",HEAEDFLG
            IF        @EQUAL
              APPEND    "Ambulance Transfer of Care date must be after triage",WEBTITLE
            ELSE
              APPEND    "Ambulance handover date must be after triage",WEBTITLE
            ENDIF
            APPEND    " date, not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL20                * Triage Date <= Amb Handover - ok
.
DATEVL19  MATCH     SP8,EMVIAHTM                 * Amb handover time blank?
          GOTO      DATEVL20 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVITRTM                 * Triage time blank ?
          GOTO      DATEVL20 IF EQUAL            * yes - ignore this validation
.
.         Make sure Amb handover time => triage time
.
          MATCH     EMVITRTM,EMVIAHTM       * Amb handover time >= triage time
          IF        @LESS
            CLEAR     WEBTITLE
            MATCH     "1",HEAEDFLG
            IF        @EQUAL
              APPEND    "Ambulance Transfer of Care time must be after triage",WEBTITLE
            ELSE
              APPEND    "Ambulance handover time must be after triage",WEBTITLE
            ENDIF
            APPEND    " time, not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
. Ambulance handover <= Departure Date
.
DATEVL20  MATCH     SP8,EMVIAHDT                 * Amb Handover date blank?
          GOTO      DATEVL90 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDDAT                 * Departure date blank ?
          GOTO      DATEVL90 IF EQUAL            * yes - ignore this validation
.
.         Make sure Ambulance handover date <= Departure Date
.
          MATCH     EMVIAHDT,EMVIDDAT            * Amb handover date=triage date
          GOTO      DATEVL21 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            MATCH     "1",HEAEDFLG
            IF        @EQUAL
              APPEND    "Ambulance Transfer of Care date must be prior to",WEBTITLE
            ELSE
              APPEND    "Ambulance handover date must be prior to",WEBTITLE
            ENDIF
            APPEND    " departure date, not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL90                * Amb Handover Date <= Dept Date -ok
.
DATEVL21  MATCH     SP8,EMVIAHTM                 * Amb handover time blank?
          GOTO      DATEVL90 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDTIM                 * Departure time blank ?
          GOTO      DATEVL90 IF EQUAL            * yes - ignore this validation
.
.         Make sure Ambulance handover time <= Departure time
.
          MATCH     EMVIAHTM,EMVIDTIM       * Amb handover time <=Departure time
          IF        @LESS
            CLEAR     WEBTITLE
            MATCH     "1",HEAEDFLG
            IF        @EQUAL
              APPEND    "Ambulance Transfer of Care time must be prior to",WEBTITLE
            ELSE
              APPEND    "Ambulance handover time must be prior to",WEBTITLE
            ENDIF
            APPEND    " departure time, not updated.",WEBTITLE
            RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
DATEVL90  MOVE      ZERO,EXIT
          GOTO      DATEVL99
.
DATEVL95  CALL      WEBERR00
          MOVE      ONE,EXIT
.
DATEVL99  RETURN
.------------------------------------------------------------
.         NEWPAT00  Admit a new patient
.------------------------------------------------------------
NEWPAT00  MATCH     SP70,FORMACTN
          GOTO      NEWPAT15 IF EQUAL
.
          MATCH     "N1",FORMACTN
          IF        @EQUAL
            CALL      ZUNK0000              * Zero U/R, emrunkaf,emrvisaf
            CALL      ADDINC00              * Add to Incomplete
            GOTO      NEWPAT99
          ENDIF
.
          MATCH     "N3",FORMACTN
          IF        @EQUAL
            CALL      UMAS0000              * valid U/R, patma1af,emrvisaf
            BRANCH    EXIT,NEWPAT90
.
            CALL      ADDINC00              * Add to Incomplete
.
            MATCH     "1",SJOGAUDT
            IF        @EQUAL
              CALL      SJGAU200
            ELSE
              CALL      WAUDT800
            ENDIF
.
            GOTO      NEWPAT99
          ENDIF
.
          MATCH     "NU",FORMACTN
          IF        @EQUAL
            CALL      NEWU0000
            BRANCH    EXIT,NEWPAT90
.
            GOTO      NEWPAT99
          ENDIF
.
          MATCH     "AE",FORMACTN
          IF        @EQUAL
            CALL      ADEX0000
            GOTO      NEWPAT99
          ENDIF
.
          MATCH     "AU",FORMACTN
          IF        @EQUAL
            CALL      UPEX0000
            GOTO      NEWPAT99
          ENDIF
.
          MATCH     "AD",FORMACTN
          IF        @EQUAL
            CALL      DEEX0000
            GOTO      NEWPAT99
          ENDIF
.
          MATCH     "SP",FORMACTN
          IF        @EQUAL
            CALL      DIEX0000
            GOTO      NEWPAT16
          ENDIF
.
          MATCH     "SN",FORMACTN
          IF        @EQUAL
            CALL      DIURD000
            GOTO      NEWPAT50
          ENDIF
.
NEWPAT15  CALL      CLEDET00
.
NEWPAT16  MATCH     SP8,ADMISSNO
          IF        @EQUAL|@EOS
            GOTO      NEWPAT20
          ELSE
.
.         We'll skip the check visit routine for the 'Basic EMR Visit Add'
.         because it should allow the user to add with a warning message.
.
            MATCH     "016",TEMPLATE
            GOTO      NEWPAT20 IF EQUAL
.
            PACK      KEY8,ADMISSNO,SP70
            CALL      RDEMVIS1
            BRANCH    OVRCD,NEWPAT20
            COMPARE   ONE,EMVISTAT
            IF        @EQUAL
              MOVE      "Patient already registered in emergency",WEBTITLE
              CALL      WEBERR00
              GOTO      NEWPAT90
            ELSE
              GOTO      NEWPAT20
            ENDIF
          ENDIF
.
NEWPAT20  CALL      CLEMRVIS
.
          MATCH     SP8,URNUMBER
          IF        @EQUAL | @EOS
            CALL      CUNK0000
            CALL      CLPATMAS
            CALL      CLPMSPX2
            MOVE      "Register New Patient",WEBTITLE
            MOVE      SRCHSNAM,PSNAME
            PACK      PSNAME,PSNAME,SP70
            MOVE      SRCHGNAM,PGNAME
            PACK      PGNAME,PGNAME,SP70
            MOVE      SRCHPDOB,PBDATE
            MOVE      SRCHPAGE,PSAGEYRS
            MOVE      SRCHPSEX,PSEX
            MATCH     "u",PSEX
            IF        @EQUAL
              PACK     PSEX,SP70
            ENDIF
            GOTO      NEWPAT50
          ENDIF
.
          CALL      VALUR000
          BRANCH    EXIT,NEWPAT99
.
          PACK      KEY8,URNUMBER
          CALL      RDMAST1
          BRANCH    OVRCD,NEWPAT30
.
          PACK      KEY8,URNUMBER
          CALL      RDPMPX21
          BRANCH    OVRCD,NEWPAT30
.
          COMPARE   FOUR,PSTAT              * EBS Unknown U/R
          GOTO      NEWPAT35 IF EQUAL
.
          PACK      KEY8,PURNO,SP70
          CALL      RDPMRES1
          IF        OVRCD=1
            CALL      CLPMSRES
          ENDIF
.
.         We'll skip the check visit routine for the 'Basic EMR Visit Add'
.         because it should allow the user to add with a warning message.
.
          MATCH     "016",TEMPLATE
          GOTO      NEWPAT25 IF EQUAL
.
          CALL      CHKVIS00
          BRANCH    EXIT,NEWPAT90
.
NEWPAT25  CALL      PATNAA00
          MOVE      PATFNAME,WEBTITLE
          GOTO      NEWPAT50
.
NEWPAT30  MATCH     ZEROUR,URNUMBER
          IF        @EQUAL
            MOVE      "Cannot register zero U/R through this option",WEBTITLE
          ELSE
            MOVE      "U/R Number does not exist",WEBTITLE 
          ENDIF
          CALL      WEBERR00
          GOTO      NEWPAT90
.
NEWPAT35  CLEAR     WEBTITLE
          APPEND    "Patient has an inappropriate identifier for ",WEBTITLE
          APPEND    "this function.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          GOTO      NEWPAT90
.
NEWPAT50  CALL      WEBHED00
          BRANCH    EXIT,NEWPAT90
          CALL      WEBBOD00
          IF        MRGEFLAG=1
            CALL      MRGALT00
          ENDIF
          CALL      WEBEND00
          MOVE      ONE,EXIT
          GOTO      NEWPAT99
.
NEWPAT90  MOVE      ONE,EXIT
          GOTO      NEWPAT99
.
NEWPAT99  CLOSE     COMFILCF,DELETE
          CLOSE     PRECOMAF,DELETE
          CLOSE     ADDCOMAF,DELETE
          RETURN
.------------------------------------------------------------
.         CHKVIS00 Check visit file
.------------------------------------------------------------
CHKVIS00  PACK      KEY16,PURNO,Z70
          CALL      RSEMVIS3
CHKVIS10  CALL      RPEMVIS3
          BRANCH    OVRCD,CHKVIS80
.
          MATCH     PURNO,EMVIURNO
          GOTO      CHKVIS80 IF NOT EQUAL
          COMPARE   ONE,EMVISTAT
          IF        @EQUAL
            APPEND    "Patient already registered in emergency",WEBTITLE
            CALL      WEBERR00
            GOTO      CHKVIS90
          ENDIF
          GOTO      CHKVIS10
.
CHKVIS80  CALL      CLEMRVIS
          MOVE      ZERO,EXIT
          GOTO      CHKVIS99
.
CHKVIS90  MOVE      ONE,EXIT
          GOTO      CHKVIS99
.
CHKVIS99  RETURN
.------------------------------------------------------------
.        CLEDET00   Clears the Expected Patients Fields 
.------------------------------------------------------------
CLEDET00  MOVE     SP70,EMEXUNIQ
          MOVE     SP70,EMEXURNO
          MOVE     SP70,EMEXSNAM
          MOVE     SP70,EMEXGNAM
          MOVE     SP70,EMEXSEX
          MOVE     SP70,EMEXDOB
          MOVE     SP70,EMEXAGE
          MOVE     SP70,EMEXCOMP
          MOVE     SP70,EMEXCOM1
          MOVE     SP70,EMEXCOM2
          MOVE     SP70,EMEXCOM3
          MOVE     SP70,EMEXCOM4
          MOVE     SP70,EMEXCOM5
          MOVE     SP70,EMEXCOM6
          MOVE     SP70,EMEXTRAN
          MOVE     SP70,EMEXAMBL
          MOVE     SP70,EMEXEDAT
          MOVE     SP70,EMEXETIM
          MOVE     SP70,EMEXGPCD
          MOVE     SP70,EMEXCUID
          MOVE     SP70,EMEXCDAT
          MOVE     SP70,EMEXCTIM
          MOVE     SP70,EMEXUUID
          MOVE     SP70,EMEXUDAT
          MOVE     SP70,EMEXUTIM
          MOVE     SP70,EMEXATSR
          MOVE     SP70,EMEXACPS
          MOVE     SP70,EMEXACPT
          MOVE     SP70,EMEXETAD
          MOVE     SP70,EMEXETAT
          MOVE     SP70,EMEXTRIG
          MOVE     SP70,EMEXEXPL
          MOVE     SP70,EMEXSITE
          MOVE     SP70,EMEXCONT
          MOVE     SP70,EMEXDELT
          MOVE     SP70,EMEXREMV
          MOVE     SP70,EMEXTSRC
          PACK     EMEXCALL,SP70,SP70
          PACK     EMEXAIN1,SP70,SP70
          PACK     EMEXAIN2,SP70,SP70
          PACK     EMEXAIN3,SP70,SP70
          PACK     EMEXAIN4,SP70,SP70
          PACK     EMEXAIN5,SP70,SP70
          MOVE     SP70,EMDARECD
          PACK     EMEXSPAR,SP70,SP70
.
CLEDET99  RETURN 
.------------------------------------------------------------
.         MONNUM00  Convert month name to number
.------------------------------------------------------------
MONNUM00    MATCH     JAN,MONTH
            IF        @EQUAL
              MOVE      ONE,MONTH2
              GOTO      MONNUM99  
            ENDIF
.
            MATCH     FEB,MONTH
            IF        @EQUAL
              MOVE      TWO,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     MAR,MONTH
            IF        @EQUAL
              MOVE      THREE,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     APR,MONTH
            IF        @EQUAL
              MOVE      FOUR,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     MAY,MONTH
            IF        @EQUAL
              MOVE      FIVE,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     JUN,MONTH
            IF        @EQUAL
              MOVE      SIX,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     JUL,MONTH
            IF        @EQUAL
              MOVE      SEVEN,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     AUG,MONTH
            IF        @EQUAL
              MOVE      EIGHT,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     SEP,MONTH
            IF        @EQUAL
              MOVE      NINE,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     OCT,MONTH
            IF        @EQUAL
              MOVE      TEN,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     NOV,MONTH
            IF        @EQUAL
              MOVE      TEN1,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     DEC,MONTH
            IF        @EQUAL
              MOVE      TEN2,MONTH2
              GOTO      MONNUM99
            ENDIF

.
MONNUM99  RETURN
.------------------------------------------------------------
.         ALLNW000  Allocate a new U/R to zero U/R patient
.------------------------------------------------------------
ALLNW000  CALL      VERUSR00
          BRANCH    EXIT,ALLNW999
.
          MATCH     SP70,DONTCHEC   * This will ignore the date/time check
          IF        @EQUAL                                                     
            CALL      CHKKEY00
            BRANCH    EXIT,ALLNW999
          ENDIF
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1
          MOVE      EMVISTAT,WINFLG
.
          CALL      LOCK0000
          BRANCH    EXIT,ALLNW950:             * need to refresh screen
                         ALLNW950              * normal exit
.
          CALL      CLPMSVX1                   * get pmsvx1af record
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
.
ALLNW100  CALL      CLPATMAS
          CALL      CLPMSPX2
.
          MOVE      EMVIS006,NEWLOCAT
          CALL      RETL0000                   * Retain patient prev location
.
          CALL      STVIS000
.
          CALL      CTRN0000                     * Check transfer source
          BRANCH    EXIT,ALLNW960
.
          CALL      UPVPMI00
          PACK      EMVILOCN,EMVILOCN,SP70
          MOVE      ONE,CPSYSTEM
          CALL      GNXTUR                     * get next u/r number
          MOVE      ONE,PVITYPE
          MOVE      WBSEHOSP,PMPXIHOS
          MOVE      WBSEUID,PMPXWBID
          CALL      WRTUR
          BRANCH    EXIT,ALLNW990:
                         ALLNW990
.
          CALL      WEXP0000                * Write expected payor details
.         
ALLNW200  MOVE      ADMISSNO,EMVIADMN          * update emrvisaf record
          MOVE      PURNO,URNUMBER
          MOVE      PURNO,EMVIURNO
          CALL      UPEMVIS1
          IF        EMVISTAT = 2|EMVISTAT = 3
            IF        CCCNSVHM = 1
              OPEN      CCIEX7A1,"cciex7af"
              MOVE      ANST,CLEXSTAT
              MOVE      ONE,CLEXTYPE
              MOVE      EMVIADMN,CLEXVISN
              PACK      KEY11,CLEXSTAT,CLEXTYPE,CLEXVISN
              CALL      RDCLEX71
              IF        OVRCD =1
                CALL      WRCLEX71
              ENDIF
              CLOSE     CCIEX7A1
            ENDIF
          ENDIF
.
.         Broadcast registration message
.
          CALL      PMIGTNID               * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TEN,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAE                     * send update emr details
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMUNK1
          CALL      DEEMUNK1                   * delete emrunkaf record
.
          CALL      CLDT0000                   * clear AAE fields
          CALL      UPDTA000                   * update AAE details fields
.
          PACK      KEY8,ADMISSNO
          CALL      RDADETA1
          IF        OVRCD=1
            CALL      WRDETA1              * write aae details record
          ELSE
            CALL      UPDETA1
          ENDIF
.
          CALL      VISDS000                   * determine PVISTAT value
.
          MOVE      EMVIURNO,PVIURNO
          MOVE      EMVIDATE,PVIDATE
          MOVE      EMVIADMN,PVIBILL
          MOVE      ONE,PVITYPE
          MOVE      EMVIDOCT,PVIDOCT
          MOVE      ONE,PVITRAN
          MOVE      SP30,PVISPAR
          MOVE      SP10,PVISITE
          MOVE      SP2,PVILOCK
.
          PACK      KEY3,EMVISITE,SP70
          CALL      RDEMSIT1
          IF        OVRCD<>1
            PACK      PMVXMHOS,EMSTHSNO,SP70
          ENDIF
.
          MOVE      PVIBILL,KEY8
          CALL      RDAVISA1
          IF        OVRCD=1
            CALL      WRVISA1              * write visit record
            CALL      ADDVIS00             * Addes record to MRTVISFD
            CALL      AEXP0000             * write adm based expected payors
          ELSE
            CALL      UPVISA1
          ENDIF
.
ALLNW700  PACK      KEY8,PURNO,SP70
          CALL      RAPMPX21
          IF        OVRCD=1
            CALL      WRPMPX21
          ELSE
            CALL      UPPMPX21
         ENDIF
.
          CALL      CHGAE000                * check if still chargeable
.
          CALL      ULEMVIS1                     * unlock visit record
          MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRTHIS00
            PROC      EMRDRCHR              * Update Visit Billing Complete
          ENDIF
.
          CALL      AUTS0000           * Add/Update Telehealth Services record
.
ALLNW900  MOVE      ZERO,EXIT
          GOTO      ALLNW999
.
ALLNW950  MOVE      ONE,EXIT
          GOTO      ALLNW999
.
ALLNW960  CALL      ULEMVIS1                     * unlock visit record
          MOVE      ONE,EXIT
          GOTO      ALLNW999
.
ALLNW990  MOVE      "Error writing new U/R record",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ALLNW999 
.
ALLNW999  RETURN
.------------------------------------------------------------
. ALLEX000  Allocate an existing U/R to a Zero U/R patient 
.------------------------------------------------------------
ALLEX000  MATCH     ZEROUR,URNUMBER
          GOTO      ALLEX970 IF EQUAL
.
          CALL      VERUSR00
          BRANCH    EXIT,ALLEX999
.
          MATCH     SP70,DONTCHEC   * This will ignore the date/time check
          IF        @EQUAL                                                     
            CALL      CHKKEY00
            BRANCH    EXIT,ALLEX999
          ENDIF
.
          CALL      VALUR000
          BRANCH    EXIT,ALLEX999
.
          PACK      KEY8,URNUMBER
          CALL      RLPTMAS1
          BRANCH    OVRCD,ALLEX900,ALLEX910
.
          CALL      RDPMPX21
          BRANCH    OVRCD,ALLEX900
.
          COMPARE   FOUR,PSTAT              * EBS Unknown U/R
          GOTO      ALLEX920 IF EQUAL
.
          MOVE      PMPXRHC1,SAVEPHCP       * Save variable for HCP Audit
          MOVE      PMPXRH1G,SAVEPRAC       * Save variable for HCP Audit
          MOVE      PMPXR1GC,SAVEPCTR       * Save variable for HCP Audit
.
          CALL      ACTMSAV                 * Save master file variables
.
ALLEX200  PACK      KEY8,ADMISSNO
          CALL      RLEMVIS1
          BRANCH    OVRCD,ALLEX950,ALLEX960
.
          PACK      SAVEAMBL,EMVIAMBL
          PACK      SAVEUD09,EMVIUD09
          PACK      SAVEUT09,EMVIUT09
.
          CALL      CLPMSVX1                   * get pmsvx1af record
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
.
          MATCH     ZEROUR,EMVIURNO         * u/r number zero?
          GOTO      ALLEX975 IF NOT EQUAL
.
          CALL      CLSVHM00
          CALL      SAVESVHM
.
          PACK      KEY8,URNUMBER
.
          MOVE      EMVIS006,NEWLOCAT
          CALL      RETL0000                   * Retain patient prev location
.
          CALL      STVIS000
          PACK      EMVILOCN,EMVILOCN,SP70
.
          CALL      PMIU0000                * Update PMI Details
          BRANCH    EXIT,ALLEX965
.
          MOVE      EMVIURNO,SVEMURNO
          MOVE      URNUMBER,EMVIURNO
          PACK      KEY8,ADMISSNO
          CALL      UPEMVIS1
          MATCH     SAVEAMBL,EMVIAMBL
          IF        !@EQUAL
            CALL      WINP0000
          ENDIF
          MATCH     SAVEUD09,EMVIUD09
          IF        !@EQUAL
            CALL      WINP0000
          ELSE
            MATCH     SAVEUT09,EMVIUT09
            IF        !@EQUAL
              CALL      WINP0000
            ENDIF
          ENDIF
.
          IF        EMVISTAT = 2|EMVISTAT = 3
            IF        CCCNSVHM = 1
              OPEN      CCIEX7A1,"cciex7af"
              MATCH     EMVIURNO,SVEMURNO
              IF        !@EQUAL
                MOVE      ANST,CLEXSTAT
                MOVE      ONE,CLEXTYPE
                MOVE      EMVIADMN,CLEXVISN
                PACK      KEY11,CLEXSTAT,CLEXTYPE,CLEXVISN
                CALL      RDCLEX71
                IF        OVRCD =1
                  CALL      WRCLEX71
                ENDIF
              ENDIF
              CLOSE     CCIEX7A1
            ENDIF
          ENDIF
.
.         Broadcast registration message
.
          CALL      PMIGTNID               * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TEN1,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAE                     * send update emr details
.
.         Broadcast discharge message (CAR 274402)
.
          IF        EMVISTAT = 2 | EMVISTAT = 3
            CALL      PMIGTNID             * get national id for dgate write
            MOVE      NMPNUMB,PTNINMPI
            MOVE      THIRTY,HL7TRGID
            MOVE      SP8,HL7INCLD
            PROC      DGCLICDI                   * send discharge emr details
          ENDIF
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMUNK1
          CALL      DEEMUNK1                   * delete emrunkaf record
.
          CALL      CLDT0000                   * clear AAE fields
          CALL      UPDTA000                   * update AAE details fields
.
          PACK      KEY8,ADMISSNO
          CALL      RDADETA1
          IF        OVRCD=1
            CALL      WRDETA1              * write aae details record
          ELSE
            CALL      UPDETA1
          ENDIF
.
          CALL      VISDS000                   * determine PVISTAT value
.
          MOVE      EMVIURNO,PVIURNO
          MOVE      EMVIDATE,PVIDATE
          MOVE      EMVIADMN,PVIBILL
          MOVE      ONE,PVITYPE
          MOVE      EMVIDOCT,PVIDOCT
          MOVE      ONE,PVITRAN
          MOVE      SP30,PVISPAR
          MOVE      SP10,PVISITE
          MOVE      SP2,PVILOCK
.
          PACK      KEY3,EMVISITE,SP70
          CALL      RDEMSIT1
          IF        OVRCD<>1
            PACK      PMVXMHOS,EMSTHSNO,SP70
          ENDIF
.
          MOVE      PVIBILL,KEY8
          CALL      RDAVISA1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRVISA1              * write visit record
            TRAPCLR   IO
            CALL      ADDVIS00             * Addes record to MRTVISFD
            CALL      AEXP0000             * write adm based expected payors
          ELSE
            CALL      UPVISA1
          ENDIF
          CALL      ADDALR00                * Add Alerts to EMR Patient 
          CALL      CHGAE000                * check if still chargeable
          CALL      UPCPAT00                * Update current patient file name
.         CALL      TEMR0000                * Track Medical Record on
.                                             UR allocation
          MATCH     "1",MRCNRRED
          IF        @EQUAL
            CALL      CRMED000
          ENDIF
.
          CALL      AUTS0000           * Add/Update Telehealth Services record
.
ALLEX300  MOVE      ADMISSNO,KEY8
          CALL      ULEMVIS1                     * unlock visit record
          MOVE      ZERO,EXIT
          GOTO      ALLEX999
.
ALLEX900  CLEAR     WEBTITLE
          APPEND    "The U/R number you selected (",WEBTITLE
          APPEND    URNUMBER,WEBTITLE
          APPEND    ") does not exist. Not allocated",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ALLEX999
.
ALLEX910  CLEAR     WEBTITLE
          APPEND    "The U/R number you selected (",WEBTITLE
          APPEND    URNUMBER,WEBTITLE
          APPEND    ") is locked. Not allocated",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ALLEX999
.
ALLEX920  CLEAR     WEBTITLE
          APPEND    "Patient has an inappropriate identifier for ",WEBTITLE
          APPEND    "this function.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      URNUMBER,KEY8
          CALL      UUPTMAS1
          MOVE      ONE,EXIT
          GOTO      ALLEX999
.
ALLEX950  CLEAR     WEBTITLE
          MOVE      "Emergency record not found, not allocated",WEBTITLE
          CALL      WEBERR00
          MOVE      URNUMBER,KEY8
          CALL      UUPTMAS1
          MOVE      ADMISSNO,KEY8
          CALL      ULEMVIS1
          CALL      ULEMUNK1
          MOVE      ONE,EXIT
          GOTO      ALLEX999
.
ALLEX960  CLEAR     WEBTITLE
          MOVE      "Emergency record locked, not allocated",WEBTITLE
          CALL      WEBERR00
ALLEX965  MOVE      URNUMBER,KEY8
          CALL      UUPTMAS1
          MOVE      ADMISSNO,KEY8
          CALL      ULEMVIS1
          CALL      ULEMUNK1
          MOVE      ONE,EXIT
          GOTO      ALLEX999
.
ALLEX970  MOVE      "Attempt to allocate a U/R number failed.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ALLEX999
.
ALLEX975  CLEAR     WEBTITLE
          APPEND    "Visit ",WEBTITLE
          APPEND    ADMISSNO,WEBTITLE
          APPEND    " has been registered to U/R ",WEBTITLE
          APPEND    EMVIURNO,WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      URNUMBER,KEY8
          CALL      UUPTMAS1
          MOVE      ADMISSNO,KEY8
          CALL      ULEMVIS1
          CALL      ULEMUNK1
          MOVE      ONE,EXIT
          GOTO      ALLEX999
.
ALLEX999  RETURN
.------------------------------------------------------------
. Add Alerts to EMR Patient
.------------------------------------------------------------
ADDALR00  MOVE      ZERO,COUNT
          MOVE      ZERO,SECALERT
          PACK      KEY16,ADMISSNO,SP30      * Key is ADMISSNO number
          CALL      RSPTALT1                 * Read alerts code file
ADDALR10  CALL      RKPTALT1                 * Read next record
          BRANCH    OVRCD,ADDALR90           * no more alerts ?
.
          MATCH     ADMISSNO,PTALURNO        * For this patient ?
          GOTO      ADDALR90 IF NOT EQUAL    * no, read all alerts
          ADD       ONE,COUNT
.
          MOVE      PVIURNO,PTALURNO                                            
.
          PACK      KEY16,PVIURNO,PTALCATG,PTALCODE,PTALCNTR,SP70
          CALL      RAPTALR1
          IF        OVRCD=1
            CALL      WRPTALR1
.
            CALL      PMIGTNID                 * get national id for dgate write
            MOVE      NMPNUMB,PTNINMPI
            MOVE      TWENTY6,HL7TRGID
            MOVE      SP8,HL7INCLD
            PROC      DGCLICUP                   * trigger PMI update
          ENDIF
.
          PACK      KEY5,PTALCATG,PTALCODE,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     ANSS,TCINDC4
            IF        @EQUAL
              MOVE      ONE,SECALERT        * Yes security alert
            ENDIF
          ENDIF
.
          PACK      KEY16,ADMISSNO,PTALCATG,PTALCODE,PTALCNTR,SP70
          CALL      DEPTALT1
.
          GOTO      ADDALR10
.
ADDALR90  IF        COUNT > ZERO
            CALL      CHKALR00
            CALL      WESIS000
          ENDIF
.
          CALL      ALCMA000      * Writes away the comments 
.
ADDALR99  RETURN
+
.**************************************************************************
.*                               CHKALR00              Called by: PROC0000*
.*                                                                        *
.**************************************************************************
CHKALR00  MOVE      PVIURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,CHKALR99
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,CHKALR99
.
          MOVE      PTMXSIN1,SAVESIN1
          MOVE      PMPXSIN7,SAVESIN7
          MOVE      PMPXSIN8,SAVESIN8
          MOVE      PMPXSIN9,SAVESIN9
          MOVE      PMPXSN11,SAVESN11
          UNPACK    SP70,PTMXSIN1,PMPXSIN7,PMPXSIN8,PMPXSIN9,PMPXSN11
.
          PACK      KEY16,PVIURNO,SP70
          CALL      RSPTALR1
CHKALR10  CALL      RKPTALR1
          BRANCH    OVRCD,CHKALR90
.
          MATCH     PVIURNO,PTALURNO
          GOTO      CHKALR90 IF NOT EQUAL
.
          MATCH     SP70,PTALEDAT
          GOTO      CHKALR10 IF NOT EQUAL        * show alert as inactive
.
          PACK      KEY5,PTALCATG,PTALCODE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CHKALR10
.
          MATCH     ANSM,TCINDC5
          IF        @EQUAL
            MOVE      "1",PMPXSIN7               * wahealth medical alert
            GOTO      CHKALR10
          ENDIF
.
          MATCH     ANSB,TCINDC5
          IF        @EQUAL
            MOVE      "1",PMPXSIN8               * wahealth micro alert
            GOTO      CHKALR10
          ENDIF
.
          MATCH     ANSR,TCINDC5
          IF        @EQUAL
            MOVE      "1",PMPXSIN9               * wahealth risk alert
            GOTO      CHKALR10
          ENDIF
.
          MATCH     ANSC,TCINDC5
          IF        @EQUAL
            MOVE      "1",PMPXSN11               * wahealth chronic alert
            GOTO      CHKALR10
          ENDIF
.
.         Standard alert functionality
.
          REP       "S2 1",TCINDC4
.
          MATCH     "2",TCINDC4        * check for security alert, if yes stop
          IF        @EQUAL
            PACK      PTMXSIN1,TCINDC4
            GOTO      CHKALR90
          ENDIF
.
          MATCH     PTMXSIN1,TCINDC4
          IF        @LESS
            PACK      PTMXSIN1,TCINDC4
          ENDIF
          MATCH     SP70,PTMXSIN1
          IF        @EQUAL
            PACK      PTMXSIN1,TCINDC4
          ENDIF
.
          GOTO      CHKALR10
.
CHKALR90  MATCH     PTMXSIN1,SAVESIN1
          IF        !@EQUAL
            CALL      UPMAST1
          ENDIF
.
          MATCH     PMPXSIN7,SAVESIN7
          IF        @EQUAL
            MATCH     PMPXSIN8,SAVESIN8
            IF        @EQUAL
              MATCH     PMPXSIN9,SAVESIN9
              IF        @EQUAL
                MATCH     PMPXSN11,SAVESN11
                IF        @EQUAL
                  GOTO      CHKALR99        * no wahealth indicators changed
                ENDIF   
              ENDIF   
            ENDIF
          ENDIF     
          CALL      UPPMPX21                * update for wahealth alerts (indc5)
.
CHKALR99  RETURN
+
.------------------------------------------------------------
. Update Alert Comments Admisson number based
.------------------------------------------------------------
ALCMA000  PACK      KEY19,ADMISSNO,SP70
          CALL      RSPMALA1
ALCMA100  CALL      RKPMALA1
          BRANCH    OVRCD,ALCMA999          * end of file
.
          MATCH     ADMISSNO,PMANURNO       * same U/R Number?
          GOTO      ALCMA999 IF NOT EQUAL
.
          PACK      SAVKEY19,PMANURNO,PMANACAT,PMANACOD,PMANCNTR,PMANLNNO,SP70
          CALL      ADDNEW00
.
          PACK      KEY19,SAVKEY19,SP70
          CALL      DEPMALA1
          PACK      KEY19,SAVKEY19,SP70
          CALL      RSPMALA1
          GOTO      ALCMA100 
.
ALCMA999  RETURN
.---------------------------------------------------------------------.
.         now write the new comments back
.----------------------------------------------------------------------.
ADDNEW00  MOVE      PVIURNO,PMANURNO          * set U/R Number
.
          PACK      KEY19,PMANURNO,PMANACAT,PMANACOD,PMANCNTR,PMANLNNO,SP70
          CALL      RAPMALN1
          IF        OVRCD=1
            CALL      WRPMALN1
          ENDIF
.
ADDNEW99  RETURN 
.------------------------------------------------------------
.         DELE0000  Delete emergency event
.------------------------------------------------------------
DELE0000  CALL      VERUSR00
          BRANCH    EXIT,DELE9999
.
          CALL      CHKD0000                 * Check for deposits
          BRANCH    EXIT,DELE9850
.
          PACK      KEY14,ADMISSNO,SP20
          CALL      RSPMMTI1
          CALL      RKPMMTI1
          BRANCH    OVRCD,DELE0100
.
          MATCH     PMMIVISN,ADMISSNO
          GOTO      DELE9100 IF EQUAL
.
DELE0100  PACK      KEY16,ADMISSNO,SP20
          CALL      RSPTINV3
          CALL      RKPTINV3
          BRANCH    OVRCD,DELE0200
.
          MATCH     DPINVADM,ADMISSNO
          GOTO      DELE0200 IF NOT EQUAL
.
          MATCH     "1",PTINCRST
          GOTO      DELE9200 IF NOT EQUAL
.
DELE0200  MATCH     SP70,DONTCHEC   * This will ignore the date/time check
          IF        @EQUAL                                                     
            CALL      CHKKEY00
            BRANCH    EXIT,DELE9999
          ENDIF
.
          MOVE      ADMISSNO,KEY8
          CALL      RLEMVIS1                       * read and lock record
          BRANCH    OVRCD,DELE9800:                * not found
                          DELE9500                 * record already locked
.
          COMPARE   FOUR,EMVISTAT
          GOTO      DELE9300 IF EQUAL
.
.         Broadcast cancel registration message
.
          MOVE      EMVIURNO,KEY8              * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,DELE0700
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,DELE0700
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11                   * get visit extension details
          BRANCH    OVRCD,DELE0700
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TEN2,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICCE                       * send cancel emr details
.
DELE0700  MOVE      EMVIADMN,KEY8
          MOVE      FOUR,EMVISTAT
          MOVE      SP70,EMVILOCN
          MOVE      SP70,EMVIPRLO
          MOVE      SP70,EMVIPRTM
          CALL      UPEMVIS1
.
          CALL      CIPN0000                     * Check Invoice pending
.
          MOVE      "3",UPSTATUS                 * Cancelled
          CALL      UPEMTH00                     * update telehealth record
.
.         MOVE      EMVIADMN,KEY8
.         CALL      RLEMUNK1
.         BRANCH    OVRCD,DELE1800:
.                         DELE9300
.         CALL      DEEMUNK1
.
DELE1800  MOVE      EMVIADMN,KEY8
          CALL      RDEMINC1
          BRANCH    OVRCD,DELE1900
.
          MOVE      EMIPADMN,KEY8
          CALL      DEEMINC1
.
          CALL      RMDIS000
.
DELE1900  CALL      ULEMVIS1
.
          CALL      CNBRQ000               * Cancel bed request
          COMPARE   ONE,PTCNHDPS           * Is it for NZ?
          CALL      DELRC000 IF EQUAL      * del rec from from pmswx1af/patwc1af
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      DEMRVS1                * Delete medical record link
. 
          MOVE      ZERO,EXIT
          GOTO      DELE9900
.
DELE9100  APPEND    "Items exist for this visit.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          GOTO      DELE9600
.
DELE9200  APPEND    "Visit has been invoiced. Invoice not fully credited.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          GOTO      DELE9600
.
DELE9300  APPEND    "Visit has already been cancelled.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          GOTO      DELE9600
.
DELE9500  MOVE      "Emergency visit record locked",WEBTITLE
          CALL      WEBERR00
.
DELE9600  MOVE      ONE,EXIT                        * set for no refresh
          GOTO      DELE9999
.
DELE9800  MOVE      "Record not found",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DELE9999
.
DELE9850  MOVE      "Deposits Exist - Visit not deleted",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DELE9999
.
DELE9900  MOVE      ZERO,EXIT                         * set for refresh
          MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRTHIS00
            PROC      EMRDRCHR              * Update Visit Billing Complete
          ENDIF
          CALL      DELAUD00
          GOTO      DELE9999
.
DELE9999  RETURN

.------------------------------------------------------------------------------
.  DELRC000  Delete record from pmswx1af and patwc1af when EMR Visit is deleted
.------------------------------------------------------------------------------
DELRC000  MOVE      EMVIURNO,CHWCURNO
          MOVE      EMVIADMN,CHWCADMN
          PROC      CHKWCCLM              * check for multiple WC claims records
          BRANCH    EXIT,DELRC010
.
.         Only one record with the ACC number, so we just update the
.         Claim Status to "Cancelled" instead of deleting the patwc1af record.
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMWX11
          BRANCH    OVRCD,DELRC999
.
          MOVE      THREE,PMWXCSTA        * set Claim Status to "Cancelled"
          CALL      UPPMWX11
          CALL      MVACCREM              * Add record ACC Audit file
          GOTO      DELRC999
.
DELRC010  MOVE      EMVIADMN,KEY8
          CALL      RDWCOM1
          COMPARE   ZERO,OVRCD
          IF        @EQUAL
            CALL      MVACCREM            * Add record ACC Audit file
            CALL      DEWCOM1             * delete patwc1af record
          ENDIF
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMWX11
          COMPARE   ZERO,OVRCD
          CALL      DEPMWX11 IF EQUAL
.
DELRC999  RETURN
.------------------------------------------------------------
.          CHKADM00  Check ADMISSNO contents
.------------------------------------------------------------
CHKADM00  MATCH     SP8,ADMISSNO
          GOTO      CHKADM90 IF EQUAL
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1
          BRANCH    OVRCD,CHKADM90
.
          MATCH     "       0",URNUMBER 
          IF        @EQUAL
            MOVE      EMVIURNO,URNUMBER
          ENDIF
.
          GOTO      CHKADM99
.
CHKADM90  CALL      CLEMRVIS
.                                        * admissno to links from patweb98
          MATCH     SP8,URNUMBER                            
          GOTO      CHKADM99 IF EQUAL
          MATCH     "       0",URNUMBER 
          GOTO      CHKADM99 IF EQUAL
.
          PACK      KEY24,URNUMBER,Z70
          CALL      RDSVISA2
CHKADM92  CALL      RDPVISA2
          BRANCH    OVRCD,CHKADM99
          MATCH     URNUMBER,PVIURNO
          GOTO      CHKADM99 IF NOT EQUAL
          COMPARE   ONE,PVITYPE
          GOTO      CHKADM92 IF NOT EQUAL
.
          PACK      KEY8,DPVIBILL,SP70
          CALL      RDPMVX11
          IF        OVRCD<>1
            IF        IBCNMHOS=1
              MATCH     WBSEHOSP,PMVXMHOS
              GOTO      CHKADM92 IF NOT EQUAL
            ENDIF
          ENDIF
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,CHKADM95
.
          MATCH     EMVISITE,WBSEESC             * Current ED site
          GOTO      CHKADM92 IF NOT EQUAL
.
          MATCH     URNUMBER,EMVIURNO
          GOTO      CHKADM95 IF NOT EQUAL
          MOVE      EMVIADMN,ADMISSNO
          GOTO      CHKADM99
.
CHKADM95  CALL      CLEMRVIS
.
CHKADM99  RETURN
.------------------------------------------------------------
.         EXPPAT00 Reads the expected patient details
.------------------------------------------------------------
EXPPAT00  MATCH     SP10,EMEXUNIQ
          GOTO      EXPPAT90 IF EQUAL
.
          PACK      KEY10,EMEXUNIQ,SP70
          CALL      RDEMEXP1         
          BRANCH    OVRCD,EXPPAT90
.
          GOTO      EXPPAT99
.
EXPPAT90  CALL      CLEDET00
.
EXPPAT99  RETURN
.------------------------------------------------------------
.         CHKUR000 Check URNUMBER contents
.------------------------------------------------------------
CHKUR000  MOVE      ONE,UNKFLAG
.
          PACK      KEY8,URNUMBER,SP70
          CALL      RDMAST1
          IF        OVRCD=1
            CALL      CLPATMAS
            CALL      CLPMSPX2
            MOVE      ZERO,UNKFLAG
            MOVE      ZEROUR,URNUMBER
            MATCH     SP8,ADMISSNO
            IF        @EQUAL
              MOVE      EMVIADMN,ADMISSNO
            ENDIF
            GOTO      CHKUR990
          ENDIF
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          IF        OVRCD=1
            CALL      CLPMSPX2
          ELSE
            MOVE      PMPXABRG,SVPXABRG
            MOVE      PMPXHOML,SVPXHOML
            MOVE      PMPXINTR,SVPXINTR
          ENDIF
          PACK      KEY8,PURNO,SP70
          CALL      RDPMRES1
          IF        OVRCD=1
            CALL      CLPMSRES
          ENDIF
.
CHKUR990  BRANCH    UNKFLAG,CHKUR999
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMUNK1
          IF        OVRCD=1
            CALL      CUNK0000
            GOTO      CHKUR999
          ENDIF
          CALL      RDPRAM1
          MOVE      "       0",PURNO
.
          MOVE      EMUNDET2,PGNAME
          MOVE      EMUNDET1,PSNAME
          MOVE      EMUNAGE,PSAGEYRS
          MOVE      EMUNSEX,PSEX
          MOVE      EMUNBDAT,PBDATE
          PACK      PTITL,SP70 
.
CHKUR999  RETURN          
.------------------------------------------------------------
.         NEWU0000  Create new U/R
.------------------------------------------------------------
NEWU0000  CALL      VERUSR00
          BRANCH    EXIT,NEWU9999
.
          CALL      CLPATMAS
          CALL      CLPMSPX2
          CALL      CLEMRVIS             * clear emr visit file variables
.
          CALL      STVIS000
.
          CALL      CTRN0000                     * Check transfer source
          BRANCH    EXIT,NEWU9999
.
          MOVE      ONE,STOREFLG
          MOVE      ONE,CPSYSTEM
          CALL      GNXTUR
          MOVE      ONE,PVITYPE
          MOVE      WBSEHOSP,PMPXIHOS
          MOVE      WBSEUID,PMPXWBID
          CALL      WRTUR
          BRANCH    EXIT,NEWU9900:
                         NEWU9900
.
          CALL      WEXP0000                * Write expected payor details
.
          MOVE      PURNO,URNUMBER 
          CALL      UMAS0000
          BRANCH    EXIT,NEWU9910
.
          MOVE      EMVIADMN,ADMISSNO
          GOTO      NEWU9999
.
NEWU9900  MOVE      "Error writing new U/R record",WEBTITLE
          CALL      WEBERR00
NEWU9910  MOVE      ONE,EXIT
.
NEWU9999  RETURN
.------------------------------------------------------------
.         ADEX0000  Add Expected Patient
.------------------------------------------------------------
ADEX0000  CLOSE     VISMDTA1
          OPEN      EMREXPA3,"emrexpaf"
.        
          PACK      EMEXP018,EMEXP018,SP70
          MATCH     SP70,EMEXP018        * No UR 
          GOTO      ADEX0050 IF EQUAL
.
          MATCH     "1",EMCNALEX
          GOTO      ADEX0050 IF EQUAL
.
          MATCH     Z70,EMVIS132
          IF        !@EQUAL
            MOVE      EMVIS132,EMEXPSIT
          ENDIF 
.
. Check emr expected patient
.
          PACK      KEY18,EMEXP018,SP70
          CALL      RSEMEXP3
ADEX0020  CALL      RKEMEXP3
          BRANCH    OVRCD,ADEX0030
.
          MATCH     EMEXP018,EMEXURNO            * checking for UR 
          GOTO      ADEX0030 IF NOT EQUAL
.
          MATCH     "0",EMEXDELT
          GOTO      ADEX0020 IF EQUAL
.          
          MATCH     EMEXPSIT,EMEXSITE            * check same site
          GOTO      ADEX9991 IF NOT EQUAL
.
          GOTO      ADEX0020
.
. Check emr visit
.
ADEX0030  PACK      KEY24,EMEXP018,SP70
          CALL      RSPTVIS2
ADEX0040  CALL      RKPTVIS2
          BRANCH    OVRCD,ADEX0050
.
          MATCH     EMEXP018,PVIURNO
          GOTO      ADEX0050 IF NOT EQUAL
.
          COMPARE   ONE,PVITYPE                  * Emr Visit
          GOTO      ADEX0040 IF NOT EQUAL
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,ADEX0040          
.
          COMPARE   ONE,EMVISTAT                 * check same site  
          GOTO      ADEX0040 IF NOT EQUAL
.
          MATCH     EMEXPSIT,EMVISITE
          GOTO      ADEX9991 IF NOT EQUAL
.
          GOTO      ADEX0040
.
ADEX0050  PACK      KEY10,Z70
          CALL      RSEMEXP1
          CALL      RPEMEXP1                     * Read on last record
          IF        OVRCD=1
            CALL      CLEDET00
            PACK      EMEXUNIQ,SP9,ONE,SP70
          ELSE
            MOVE      EMEXUNIQ,F10
            ADD       ONE,F10
            CALL      CLEDET00
            MOVE      F10,EMEXUNIQ
          ENDIF
.
          CALL      ADEXCM00   
.
          CALL      STEXP000
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MOVE      KEY8,EMEXCDAT                * System date
          CLOCK     TIME,EMEXCTIM
          MOVE      USERID,EMEXCUID              * web user id 
          MOVE      SP70,EMEXUUID
          MOVE      SP70,EMEXUDAT
          MOVE      SP70,EMEXUTIM
          PACK      KEY10,EMEXUNIQ,SP70
.
          MATCH     Z70,EMVIS132
          IF        !@EQUAL
            CALL      CHKETS00
            GOTO      ADEX0100
          ENDIF 
. 
          PACK      KEY3,EMEXPSIT,SP70           * Verify if site code exists 
          CALL      RDEMSIT1
          BRANCH    OVRCD,ADEX0100
.
          MATCH     "1",EMSTACTV                 * Verify if site code is active
          IF        @EQUAL                       
            GOTO      ADEX9992                   * Not active
          ENDIF
.
ADEX0100  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          CALL      WREMEXP1
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      ADEX9998 IF EQUAL
.
          MOVE      EMEXUNIQ,F10
          ADD       ONE,F10
          MOVE      F10,EMEXUNIQ 
          GOTO      ADEX0100
.
ADEX9991  MOVE      "Patient already in Emergency",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ADEX9998 
.
ADEX9992  MOVE      "Site Code Inactive",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ADEX9998
.
ADEX9998  CLOSE     EMREXPA3
          OPEN      VISMDTA1,"vismdtaf"
.
ADEX9999  RETURN
.
.--------------------------------------------------------------
. Inserting new data into expected patient comment
.--------------------------------------------------------------
ADEXCM00  IF        EXPCMFLG <> 1
            GOTO      ADEXCM99
          ENDIF
.
          IF        EXPCMLIN = 0
            GOTO      ADEXCM99
          ENDIF
.
          CLOSE     VISMDTA1          * close 2 indexes to open 2 new indexes
          CLOSE     VISMTXA1
          OPEN      EMRECHA1,"emrechaf"
          OPEN      EMRECLA1,"emreclaf"
.
          MOVE      "001",NOTETYPE
.
.         Insert comment header
.
          MOVE      EMEXUNIQ,EMEHUNIQ       * Unique number
          MOVE      NOTETYPE,EMEHTYPE       * Notes Type
          MOVE      ONE,F6
          MOVE      F6,EMEHNOTE             * Note Number 
.
          CALL      IBACLOCK
          PACK      EMEHCDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMEHCDAT
          CLOCK     TIME,EMEHCTIM
          MOVE      USERID,EMEHCUID         * User
.
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          IF        OVRCD = 1
            MOVE      SP70,WBSEOCG
          ENDIF
          MOVE      WBSEOCG,EMEHOCCG        * Occupation Group
.
          MOVE      ZERO,EMEHDELT           * Delete Indicator
          MOVE      SP70,EMEHDDAT           * Delete Date
          MOVE      SP70,EMEHDTIM           * Delete Time
          MOVE      SP70,EMEHDUID           * Delete User
          MOVE      SP70,EMEHDOCC           * Delete User Occupation group
          MOVE      SP70,EMEHSPAR           * Spare
.
          PACK      KEY19,EMEHUNIQ,EMEHTYPE,EMEHNOTE,SP70
          CALL      WREMECH1              * Write Record
.
.         Insert comment details
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      EXPCMTAF,EXPCMTNM
          TRAPCLR   IO
          BRANCH    OVRCD,ADEXCM99
.
          MOVE      ZERO,CLINECNT
ADEXCM40  READ      EXPCMTAF,SEQ;EMELCMNT
          GOTO      ADEXCM98 IF OVER

          ADD       ONE,CLINECNT            * add to line number
.
          MOVE      EMEHUNIQ,EMELUNIQ       * set admission number
          MOVE      EMEHTYPE,EMELTYPE
          MOVE      EMEHNOTE,EMELNOTE
          MOVE      CLINECNT,EMELLINE
          MOVE      SP70,EMELSPAR
.
          PACK      KEY22,EMELUNIQ,EMELTYPE,EMELNOTE,EMELLINE,SP70
          CALL      WREMECL1
.
          IF        CLINECNT = 999
            GOTO      ADEXCM98
          ENDIF
          GOTO      ADEXCM40
.
ADEXCM98  CLOSE     EXPCMTAF,DELETE
          CLOSE     EMRECHA1 
          CLOSE     EMRECLA1
          OPEN      VISMDTA1,"vismdtaf"
          OPEN      VISMTXA1,"vismtxaf"
          MOVE      ZERO,EXIT
.
ADEXCM99  RETURN
.
.--------------------------------------------------------------
. Inserting expected patient comment into vismdtaf/vismtxaf
.--------------------------------------------------------------
ADEXCV00  IF        EXPCMFLG <> 1
            GOTO      ADEXCV99
          ENDIF
.
          IF        EXPCMLIN = 0
            GOTO      ADEXCV99
          ENDIF
.
          MOVE      "001",NOTETYPE
          MOVE      ZERO,F6
.
          PACK      KEY17,DEMVIADM,NOTETYPE,Z70
          CALL      RSVSMDT1
          CALL      RPVSMDT1                * read back to get last record
          IF        OVRCD = 1
            MOVE      ONE,F6
            MOVE      F6,VSMDNOTE           * Note Number
          ELSE
            MATCH     DEMVIADM,VSMDVISN     * Same UR
            IF        @EQUAL
              MATCH     NOTETYPE,VSMDTYPE    * Same note type
              IF        @EQUAL
                MOVE      VSMDNOTE,F6
                ADD       ONE,F6
                MOVE      F6,VSMDNOTE
              ELSE
                MOVE      ONE,F6
                MOVE      F6,VSMDNOTE       * Note Number
              ENDIF
            ELSE
              MOVE      ONE,F6
              MOVE      F6,VSMDNOTE         * Note Number
            ENDIF
          ENDIF
.
.         Insert comment header
.
          MOVE      DEMVIADM,VSMDVISN        
          MOVE      NOTETYPE,VSMDTYPE       
.
          MOVE      EMVIDATE,VSMDDATE
          MOVE      EMVITIME,VSMDTIME
          MOVE      USERID,VSMDUSER         * User
.
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          IF        OVRCD = 1
            MOVE      SP70,WBSEOCG
          ENDIF
          MOVE      WBSEOCG,VSMDOCCG        * Occupation Group
.
          MOVE      ZERO,VSMDDELT           * Delete Indicator
          MOVE      SP70,VSMDDDAT           * Delete Date
          MOVE      SP70,VSMDDTIM           * Delete Time
          MOVE      SP70,VSMDDUSE           * Delete User
          MOVE      SP70,VSMDDOCC           * Delete User Occupation group
          MOVE      SP70,VSMDSPAR           * Spare
.
          PACK      KEY17,VSMDVISN,VSMDTYPE,VSMDNOTE,SP70
          CALL      RDVSMDT1
          IF        OVRCD = 1
            CALL      WRVSMDT1              * Write Record
          ELSE
            GOTO      ADEXCV99
          ENDIF
.
.         Insert comment details
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      EXPCMTAF,EXPCMTNM
          TRAPCLR   IO
          BRANCH    OVRCD,ADEXCV99
.
          MOVE      ZERO,CLINECNT
ADEXCV40  READ      EXPCMTAF,SEQ;VSMTCMNT
          GOTO      ADEXCV98 IF OVER
.
          ADD       ONE,CLINECNT            * add to line number
.
          MOVE      VSMDVISN,VSMTVISN
          MOVE      VSMDTYPE,VSMTTYPE
          MOVE      VSMDNOTE,VSMTNOTE
          MOVE      CLINECNT,VSMTUNIQ
          MOVE      SP70,VSMTSPAR
.
          PACK      KEY20,VSMTVISN,VSMTTYPE,VSMTNOTE,VSMTUNIQ,SP70
          CALL      WRVSMTX1
.
          IF        CLINECNT = 999
            GOTO      ADEXCV98
          ENDIF
          GOTO      ADEXCV40
.
ADEXCV98  CLOSE     EXPCMTAF,DELETE
          MOVE      ZERO,EXIT
.
ADEXCV99  RETURN
.
.----------------------------------------------------------------
. Check if the Site/location is ETS, then setup site and location
. to the emrexpaf table 
.----------------------------------------------------------------
CHKETS00  PACK      KEY3,EMVIS132,SP70        * Verify if site code exists     
          CALL      RDEMSIT1
          BRANCH    OVRCD,CHKETS91
.
          MATCH     "1",EMSTACTV              * Verify if site code is active
          IF        @EQUAL
            GOTO      CHKETS92                * Not active
          ENDIF
.
          MATCH     SP70,EMVIS006
          GOTO      CHKETS99 IF EQUAL
.
          PACK      KEY3,EMVIS006,SP70
          CALL      RDEMLOC1
          BRANCH    OVRCD,CHKETS93
.
          MATCH     ANSE,EMLOTYPE             * Type Telehealth Service?
          GOTO      CHKETS99 IF NOT EQUAL
.
          PACK      EMEXSITE,EMVIS132,SP70
          PACK      EMEXEXPL,EMVIS006,SP70
.
          GOTO      CHKETS99          
.
CHKETS91  MOVE      "Site Code does not exist",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKETS99
.
CHKETS92  MOVE      "Site Code Inactive",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKETS99
.
CHKETS93  MOVE      "Site Code does not exist",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKETS99
.
CHKETS99  RETURN
.
.------------------------------------------------------------
.         DIEX0000  Display Expected Patient Details
.------------------------------------------------------------
DIEX0000  REP       "+ ",EMEXP001
          PACK      KEY10,EMEXP001,SP70
          CALL      RDEMEXP1
          BRANCH    OVRCD,DIEX9100
.
          MOVE      ZERO,EXIT
          GOTO      DIEX9999
.
DIEX9100  MOVE      "Invalid Record ID",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DIEX9999
.
DIEX9999  RETURN
.
.------------------------------------------------------------
. Display U/R
.------------------------------------------------------------
DIURD000  REP       "+ ",URNUMBER
.
          MATCH     SP70,URNUMBER
          GOTO      DIURD999 IF EQUAL
          GOTO      DIURD999 IF EOS
.
          PACK      KEY8,URNUMBER,SP70
          CALL      RDMAST1
          BRANCH    OVRCD,DIURD900
.
          MOVE      ZERO,EXIT
          GOTO      DIURD999
.
DIURD900  MOVE      "Invalid U/R Number",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DIURD999
.
DIURD999  RETURN
.
.------------------------------------------------------------
.         UPEX0000  Update Expected Patient Details
.------------------------------------------------------------
UPEX0000  REP       "+ ",EMEXP001 
          PACK      KEY10,EMEXP001,SP70
          CALL      RDEMEXP1
          BRANCH    OVRCD,UPEX9100
.
          PACK      EMEXP018,EMEXP018,SP70
          MATCH     SP70,EMEXP018                * No UR continue
          GOTO      UPEX2000 IF EQUAL
.
          MATCH     EMEXP018,EMEXURNO            * Same UR continue
          GOTO      UPEX2000 IF EQUAL
.
          PACK      KEY10,SP70
          CALL      RSEMEXP1
UPEX0500  CALL      RKEMEXP1
          BRANCH    OVRCD,UPEX1000
.
          MATCH     EMEXP018,EMEXURNO     * checking for UR
          GOTO      UPEX9200 IF EQUAL
          GOTO      UPEX0500
.
UPEX1000  PACK      KEY10,EMEXP001,SP70
          CALL      RDEMEXP1
          BRANCH    OVRCD,UPEX9100
.
UPEX2000  CALL      STEXP000
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MOVE      KEY8,EMEXUDAT                * System date
          CLOCK     TIME,EMEXUTIM
          MOVE      USERID,EMEXUUID              * web user id
.         MOVE      SP70,EMEXSPAR
          PACK      KEY10,EMEXP001,SP70
          CALL      UPEMEXP1  
          GOTO      UPEX9999
.
UPEX9100  MOVE      "Invalid Record ID",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPEX9999
.
UPEX9200  MOVE      "Patient already in Emergency",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPEX9999
.
UPEX9999  RETURN
.------------------------------------------------------------
.         DEEX0000  Delete Expected Patient Details
.------------------------------------------------------------
DEEX0000  REP       "+ ",EMEXP001 
          PACK      KEY10,EMEXP001,SP70
          CALL      RDEMEXP1
          BRANCH    OVRCD,DEEX9100
.
          CALL      DEEMEXP1
          GOTO      DEEX9999 
.
DEEX9100  MOVE      "Invalid Record ID",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DEEX9999
.
DEEX9999  RETURN
.------------------------------------------------------------
.         AUDHIS00  Audit History Table
.------------------------------------------------------------
AUDHIS00  PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
AUDHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,AUDHIS99
          MATCH     ADMISSNO,EMHIVIS
          GOTO      AUDHIS99 IF NOT EQUAL
.
          MOVE      "Unknown",EMUTDES
          MOVE      EMHIUPT,KEY5
          CALL      RDEMUTY1
.
          MOVE      SP70,DISINTAS                * Initial assessorr
          MATCH     SP70,EMVIMDCD
          IF        !@EQUAL
            PACK      KEY10,EMVIMDCD,SP70
            CALL      RDPMHCP1
            IF        OVRCD=1
              MOVE      EMVIMDCD,DISINTAS
            ELSE
              CLEAR     DISINTAS
              APPEND    PMHCTITL,DISINTAS
              APPEND    PMHCGNAM,DISINTAS
              APPEND    PMHCSNAM,DISINTAS
              RESET     DISINTAS
            ENDIF
          ENDIF
.
          MOVE      SP70,DISOTDOC                * Other doctor
          MATCH     SP70,EMVIUR04
          IF        !@EQUAL
            PACK      KEY10,EMVIUR04,SP70
            CALL      RDPMHCP1
            IF        OVRCD=1
              MOVE      EMVIUR04,DISOTDOC
            ELSE
              CLEAR     DISOTDOC
              APPEND    PMHCTITL,DISOTDOC
              APPEND    PMHCGNAM,DISOTDOC
              APPEND    PMHCSNAM,DISOTDOC
              RESET     DISOTDOC
            ENDIF
          ENDIF
.
          MOVE      SP70,DOCTRHIS
          MOVE      EMHIDOC,KEY6
          CALL      RDDOCT1
          IF        OVRCD=1
            MOVE      SP70,DOCTRHIS
          ELSE
            APPEND    DTITL,DOCTRHIS
            APPEND    DGNAME,DOCTRHIS
            APPEND    DSNAME,DOCTRHIS
          ENDIF 
.
          MOVE      SP70,KEY25
          MOVE      EMHILOC,KEY3
          CALL      RDEMLOC1
          IF        OVRCD=1
            MOVE      EMHILOC,KEY25
          ELSE
            MOVE      EMLODESC,KEY25
          ENDIF
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,AUDDATE
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      AUDTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",AUDTIME
.
          PACK      DIM22,SP70              * clear Doc seen date & time
          PACK      DATETIME,SP70           * clear Nurse seen date & time
.
          MATCH     SP70,EMHIDOC
          GOTO      AUDHIS15 IF EQUAL
.
          MATCH     SP70,EMHIDSD
          GOTO      AUDHIS15 IF EQUAL
.
          MATCH     SP70,EMHIDST
          GOTO      AUDHIS15 IF EQUAL
.
          UNPACK    EMHIDSD,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DOCDATE
.
          UNPACK    EMHIDST,HOUR,MIN,SEC
          PACK      DOCTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",DOCTIME
.
          CLEAR     DIM22
          APPEND    DOCDATE,DIM22
          APPEND    " at ",DIM22
          APPEND    DOCTIME,DIM22
          RESET     DIM22
.
AUDHIS15  MOVE      SP70,TDESC              * Nurse Description
          MOVE      SP70,NURSEHIS
          MATCH     SP70,EMHINUR
          GOTO      AUDHIS20 IF EQUAL
.
          MATCH     "1",EMCNURSE            * Use pmshcpaf for Ed Nurse?
          GOTO      AUDHIS16 IF EQUAL       * Yes
.
.         CONTROL.EMCNURSE=0 - Use oprnuraf for nurse
          PACK      KEY6,EMHINUR,SP70
          CALL      RDOPNUR1                * Reading the nurse file
          IF        OVRCD=1
            MOVE      SP70,NURSEHIS
          ELSE     
            APPEND    OPNRGNAM,NURSEHIS
            APPEND    OPNRSNAM,NURSEHIS
          ENDIF
.
          GOTO      AUDHIS17
.
.         CONTROL.EMCNURSE=1 - Use pmshcpaf for nurse
AUDHIS16  PACK      KEY10,EMHINUR,SP70
          CALL      RDPMHCP1
          BRANCH    OVRCD,AUDHIS17
.
          SQUEEZE   PMHCSNAM
          SQUEEZE   PMHCGNAM
          PACK      NURSEHIS,PMHCGNAM,SP1,PMHCSNAM            
          GOTO      AUDHIS17
.
AUDHIS17  MATCH     SP70,EMHINSD            * No nurse seen date?
          GOTO      AUDHIS20 IF EQUAL
.
          UNPACK    EMHINSD,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,SEENDATE
.
          UNPACK    EMHINST,HOUR,MIN,SEC
          PACK      SEENTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",SEENTIME
.
          CLEAR     DATETIME
          APPEND    SEENDATE,DATETIME
          APPEND    " at ",DATETIME
          APPEND    SEENTIME,DATETIME
          RESET     DATETIME
.
AUDHIS20  REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      EMHIEUS,KEY10
          CALL      RDWBSE1
          IF        OVRCD=1
            MOVE      SP70,WBSENAM
          ENDIF
          WRITE     HTMLFILE;"<tr><td nowrap>":
                             AUDDATE," at ",AUDTIME,"&nbsp;</td>":
                             "<td nowrap >":
                             EMUTDES,"&nbsp;";
.
          MATCH     "INTAS",EMUTUTY              * Initial assessor
          IF        @EQUAL
            WRITE     HTMLFILE;"- ",DISINTAS;
          ENDIF
.
          MATCH     "OTDOC",EMUTUTY              * Other doctor
          IF        @EQUAL
            WRITE     HTMLFILE;"- ",DISOTDOC;
          ENDIF
.
          WRITE     HTMLFILE;"</td><td nowrap >":
                             WBSENAM,"&nbsp;</td>":
                             "<td nowrap >":
                             KEY25,"&nbsp;</td>":
                             "<td nowrap >":
                             DOCTRHIS,"&nbsp;</td>":
                             "<td nowrap >":
                             DIM22,"&nbsp;</td>":
                             "<td nowrap >":
                             NURSEHIS,"&nbsp;</td>":
                             "<td nowrap >":
                             DATETIME,"&nbsp;</td>":
                             "</tr>"
.
          REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
.
          GOTO      AUDHIS10
.
AUDHIS99  MOVE      USERID,KEY10
          CALL      RDWBSE1
          RETURN
.------------------------------------------------------------
.         LOCHIS00  Location History Table
.------------------------------------------------------------
LOCHIS00  MOVE      SP70,SAVLOC
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
LOCHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,LOCHIS99
          MATCH     ADMISSNO,EMHIVIS
          GOTO      LOCHIS99 IF NOT EQUAL
.
          MATCH     SAVLOC,EMHILOC
          GOTO      LOCHIS10 IF EQUAL
.
          MOVE      SP70,EMLODESC
          MOVE      EMHILOC,KEY3
          CALL      RDEMLOC1
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      AUDTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",AUDTIME
.
LOCHIS20  REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      EMHIEUS,KEY10
          CALL      RDWBSE1
          IF        OVRCD=1
            MOVE      SP70,WBSENAM
          ENDIF
          WRITE     HTMLFILE;"<tr><td nowrap>":
                             CPCDATE," at ",AUDTIME,"&nbsp;</td>":
                             "<td nowrap >",WBSENAM,"&nbsp;</td>":
                             "<td nowrap >",EMLODESC,"&nbsp;</td>":
                             "</tr>"
.
          REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
          MOVE      EMHILOC,SAVLOC
          GOTO      LOCHIS10
.
LOCHIS99  MOVE      USERID,KEY10
          CALL      RDWBSE1
          RETURN
.
.------------------------------------------------------------
. LOCMAN00  Location Management History Table
.------------------------------------------------------------
LOCMAN00  MOVE      SP70,SAVLOC
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
LOCMAN10  CALL      RKEMHIS1                * Read ED location history
          BRANCH    OVRCD,LOCMAN99
.
          MATCH     ADMISSNO,EMHIVIS        * Same visit number 
          GOTO      LOCMAN99 IF NOT EQUAL
.
          MATCH     SP70,SAVLOC
          IF        @EQUAL
            MATCH     SAVLOC,EMHILOC               * First location on
            GOTO      LOCMAN10 IF EQUAL            * arrival
          ELSE
            MATCH     "MOVEL",EMHIUPT              * Move location
            IF        !@EQUAL
              MATCH     "NEWMV",EMHIUPT            * Inserted move location
              GOTO      LOCMAN10 IF NOT EQUAL
            ENDIF
          ENDIF
.
          PACK      KEY3,EMHILOC,SP70
          CALL      RDEMLOC1                        * Read location name
          IF        OVRCD=1
            MOVE      EMHILOC,EMLODESC
          ENDIF
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      AUDTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",AUDTIME
.
LOCMAN20  REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      SP70,WEBCNAME
          MATCH     SP70,EMHIEUS
          IF        !@EQUAL
            PACK      KEY10,EMHIEUS,SP70
            CALL      RDWBSE1                      * Get user name
            IF        OVRCD=1
              MOVE      SP70,WBSENAM
            ENDIF
            MOVE      WBSENAM,WEBCNAME             * Created By
          ENDIF
.
          MOVE      SP70,WEBUNAME
          MATCH     SP70,EMHIUUID
          IF        !@EQUAL
            PACK      KEY10,EMHIUUID,SP70
            CALL      RDWBSE1                      * Get user name
            IF        OVRCD=1
              MOVE      SP70,WBSENAM
            ENDIF
            MOVE      WBSENAM,WEBUNAME             * Updated By
          ENDIF
.
          PACK      KEY5,EMHIUPT,SP70
          CALL      RDEMUTY1                     * Get update type description
          IF        OVRCD=1
            MOVE      EMHIUPT,EMUTDES
          ENDIF
.
          WRITE     HTMLFILE;"<tr height=25><td nowrap>&nbsp;";
.
          MATCH     "MOVEL",EMHIUPT              * Move location
          IF        !@EQUAL
            MATCH     "NEWMV",EMHIUPT            * Inserted move location
            GOTO      LOCMAN30 IF NOT EQUAL
          ENDIF
.
          MOVE      SP70,KEY11
          MATCH     SP70,EMHIDAT
          IF        !@EQUAL
            UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN:
                                 JUL,AUG,SEP,OCT,NOV,DEC
            PACK      KEY11,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
          ENDIF
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      KEY8,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",KEY8
.
          WRITE     HTMLFILE;"<img src=../images/MaintenanceIcon.gif ":
                             "class=ListIcon ":
                             "onclick='UpdateLocationRecord(#"":
                             EMVIURNO,"#",#"":
                             EMHIVIS,"#",#"",KEY11,"#",#"":
                             KEY8,"#");'>";
.
          GOTO      LOCMAN35
.
LOCMAN30  WRITE     HTMLFILE;"<img src=../images/spacer1.gif ":
                             "class='ListIcon DisabledIcon'>";
.
LOCMAN35  WRITE     HTMLFILE;CPCDATE," at ",AUDTIME,"&nbsp;</td>":
                             "<td nowrap >",WEBCNAME;
.
          MATCH     SP70,WEBUNAME
          IF        !@EQUAL
            WRITE     HTMLFILE;"/",WEBUNAME;
          ENDIF
.
          WRITE     HTMLFILE;"&nbsp;</td>":
                             "<td nowrap >",EMLODESC,"&nbsp;</td>":
                             "<td nowrap >",EMUTDES,"&nbsp;</td>";
.
          MATCH     SP70,EMHICDAT
          IF        @EQUAL
            WRITE     HTMLFILE;"<td nowrap >&nbsp;</td>";
          ELSE
            UNPACK    EMHICDAT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            WRITE     HTMLFILE;"<td nowrap>":
                               CPCDATE," at ",EMHICTIM,"&nbsp;</td>";
          ENDIF
.
          WRITE     HTMLFILE;"</tr>"
.
          REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
          MOVE      EMHILOC,SAVLOC
          GOTO      LOCMAN10
.
LOCMAN99  MOVE      USERID,KEY10
          CALL      RDWBSE1
          RETURN
.
.------------------------------------------------------------
.         LOCDEL00  Deleted Location History Table
.------------------------------------------------------------
LOCDEL00  PACK      KEY27,ADMISSNO,SP70
          CALL      ASEMHIS2
LOCDEL10  CALL      AKEMHIS2                * Read deleted location history
          BRANCH    OVRCD,LOCDEL99
.
          MATCH     ADMISSNO,EMHIVIS        * Same visit number
          GOTO      LOCDEL99 IF NOT EQUAL
.
          MATCH     "D",EMHIAUDR            * Delete records only
          GOTO      LOCDEL10 IF NOT EQUAL
.
          PACK      KEY3,EMHILOC,SP70
          CALL      RDEMLOC1
          IF        OVRCD=1
            MOVE      EMHILOC,EMLODESC
          ENDIF
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      AUDTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",AUDTIME
.
LOCDEL20  REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      SP70,WEBCNAME
          MATCH     SP70,EMHIEUS
          IF        !@EQUAL
            PACK      KEY10,EMHIEUS,SP70
            CALL      RDWBSE1                      * Get user name
            IF        OVRCD=1
              MOVE      SP70,WBSENAM
            ENDIF
            MOVE      WBSENAM,WEBCNAME             * Created By
          ENDIF
.
          MOVE      SP70,WEBUNAME
          MATCH     SP70,EMHIUUID
          IF        !@EQUAL
            PACK      KEY10,EMHIUUID,SP70
            CALL      RDWBSE1                      * Get user name
            IF        OVRCD=1
              MOVE      SP70,WBSENAM
            ENDIF
            MOVE      WBSENAM,WEBUNAME             * Updated By
          ENDIF
.
          PACK      KEY5,EMHIUPT,SP70
          CALL      RDEMUTY1
          IF        OVRCD=1
            MOVE      EMHIUPT,EMUTDES
          ENDIF
.
          WRITE     HTMLFILE;"<tr height=25><td nowrap>&nbsp;":
                             CPCDATE," at ",AUDTIME,"&nbsp;</td>":
                             "<td nowrap >",WEBCNAME;
.
          MATCH     SP70,WEBUNAME
          IF        !@EQUAL
            WRITE     HTMLFILE;"/",WEBUNAME;
          ENDIF
.
          WRITE     HTMLFILE;"&nbsp;</td>":
                             "<td nowrap >",EMLODESC,"&nbsp;</td>":
                             "<td nowrap >",EMUTDES,"&nbsp;</td>";
.
          MATCH     SP70,EMHICDAT
          IF        @EQUAL
            WRITE     HTMLFILE;"<td nowrap >&nbsp;</td>";
          ELSE
            UNPACK    EMHICDAT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            WRITE     HTMLFILE;"<td nowrap>":
                               CPCDATE," at ",EMHICTIM,"&nbsp;</td>";
          ENDIF
.
          WRITE     HTMLFILE;"</tr>"
.
          REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
          MOVE      EMHILOC,SAVLOC
          GOTO      LOCDEL10
.
LOCDEL99  MOVE      USERID,KEY10
          CALL      RDWBSE1
          RETURN
.
.------------------------------------------------------------
.         Attending Doctor History
.------------------------------------------------------------
DOCHIS00  UNPACK    DIM127,D1,DIM1,DIM127
          MOVE      ZERO,DISPREAS
          MOVE      DIM1,DISPREAS
.
          PACK      KEY8,ADMISSNO
          CALL      RDEMVIS1
          IF        OVRCD=0          
            UNPACK    EMVIDATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,ARRDATE
            MOVE      EMVITIME,ARRTIME
          ELSE
            MOVE    SP70,ARRDATE
            MOVE    SP70,ARRTIME
          ENDIF
.
          MOVE      SP70,SAVDOC
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
DOCHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,DOCHIS99
          MATCH     ADMISSNO,EMHIVIS
          GOTO      DOCHIS99 IF NOT EQUAL
.
          MATCH     EMHIDOC,SAVDOC
          GOTO      DOCHIS10 IF EQUAL
.
          MATCH     "FRDOC",EMHIUPT
          GOTO      DOCHIS10 IF EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      DOCHIS10 IF NOT EQUAL
.
          COMPARE   ONE,EMCNDDTM             * Keying in doctor seen date/tmme
          GOTO      DOCHIS15 IF NOT EQUAL
.
          MATCH     SP70,EMHIDSD            * Seen date/time populated
          GOTO      DOCHIS15 IF NOT EQUAL
.
          MATCH     SP70,EMVIDRDT
          IF        !@EQUAL
            MOVE      EMVIDRDT,EMHIDSD         * First seen by date and time
            UNPACK    EMVIDRTM,HOUR,D1,MIN,D1,SEC
            PACK      EMHIDST,HOUR,MIN,SEC
            REP       " 0",EMHIDST
          ENDIF
.
DOCHIS15  MOVE      SP70,DOCTRHIS
          MOVE      EMHIDOC,KEY6
          CALL      RDDOCT1
          IF        OVRCD=1
            MOVE      SP70,DOCTRHIS
          ELSE
            APPEND    DTITL,DOCTRHIS
            APPEND    DGNAME,DOCTRHIS
            APPEND    DSNAME,DOCTRHIS
          ENDIF
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,AUDDATE
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      AUDTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",AUDTIME
.
          PACK      DIM22,SP70
.
          MATCH     SP70,EMHIDOC
          GOTO      DOCHIS20 IF EQUAL
.
          MATCH     SP70,EMHIDSD
          GOTO      DOCHIS20 IF EQUAL
.
          MATCH     SP70,EMHIDST
          GOTO      DOCHIS20 IF EQUAL
.
          UNPACK    EMHIDSD,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DOCDATE
.
          UNPACK    EMHIDST,HOUR,MIN,SEC
          PACK      DOCTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",DOCTIME
.
          CLEAR     DIM22
          APPEND    DOCDATE,DIM22
          APPEND    " at ",DIM22
          APPEND    DOCTIME,DIM22
          RESET     DIM22
.
DOCHIS20  REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      EMHIEUS,KEY10
          CALL      RDWBSE1
          IF        OVRCD=1
            MOVE      SP70,WBSENAM
          ENDIF
          MATCH     "035",TEMPLATE
          IF        @EQUAL 
            WRITE     HTMLFILE;"<tr><td nowrap>":
                               ARRDATE," at ",ARRTIME,"&nbsp;</td>":
                               "<td nowrap >":
                               DOCTRHIS,"&nbsp;</td>":
                               "<td nowrap >":
                               DIM22,"&nbsp;</td>":
                               "</tr>";
            GOTO      DOCHIS90
          ENDIF 
.
          WRITE     HTMLFILE;"<tr><td nowrap>":
                             AUDDATE," at ",AUDTIME,"&nbsp;</td>":
                             "<td nowrap >":
                             WBSENAM,"&nbsp;</td>":
                             "<td nowrap >":
                             DOCTRHIS,"&nbsp;</td>";
.
          IF        DISPREAS=1
            MOVE      SP70,REASDESC
            MATCH     SP70,EMHIRHND
            IF        !@EQUAL
              PACK      KEY5,CATfw,EMHIRHND     * Reason for Handover
              CALL      RDCODE1
              IF        OVRCD=0
                PACK      REASDESC,TDESC,SP70             
              ENDIF
            ENDIF
.
            WRITE     HTMLFILE;"<td nowrap >",REASDESC,"&nbsp;</td>";
          ENDIF

          WRITE     HTMLFILE;"<td nowrap >":
                             DIM22,"&nbsp;</td>";
.
DOCHIS90  REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
.
          MOVE      DCODE,SAVDOC
          GOTO      DOCHIS10
.
DOCHIS99  MOVE      USERID,KEY10
          CALL      RDWBSE1
          RETURN
.------------------------------------------------------------
.         Attending Nurse History
.------------------------------------------------------------
NURHIS00  UNPACK    DIM127,D1,DIM1,DIM127
          MOVE      ZERO,DISPREAS
          MOVE      DIM1,DISPREAS
.
          PACK      KEY8,ADMISSNO
          CALL      RDEMVIS1
          IF        OVRCD=0          
            UNPACK    EMVIDATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,ARRDATE
            MOVE      EMVITIME,ARRTIME
          ELSE
            MOVE    SP70,ARRDATE
            MOVE    SP70,ARRTIME
          ENDIF
.
          MOVE      SP70,SAVNUR
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
NURHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,NURHIS99
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NURHIS99 IF NOT EQUAL
.
          MATCH     SAVNUR,EMHINUR
          GOTO      NURHIS10 IF EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      NURHIS10 IF NOT EQUAL
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,AUDDATE
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      AUDTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",AUDTIME
.
          MATCH     SP70,EMHINSD
          IF        @EQUAL
            MOVE      AUDDATE,DOCDATE
            MOVE      AUDTIME,DOCTIME
          ELSE
            UNPACK    EMHINSD,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,DOCDATE
.
            UNPACK    EMHINST,HOUR,MIN,SEC
            PACK      DOCTIME,HOUR,COLON,MIN,COLON,SEC
            REP       " 0",DOCTIME
          ENDIF
.
          MOVE      SP70,TDESC             * Nurse Description
          MOVE      SP70,NURSEHIS
          MATCH     SP70,EMHINUR
          GOTO      NURHIS20 IF EQUAL
.
          MATCH     "1",EMCNURSE            * Use pmshcpaf for ED Nurse?
          GOTO      NURHIS11 IF EQUAL       * Yes
.
.         CONTROL.EMCNURSE=0 Use oprnuraf for nurse
          PACK      KEY6,EMHINUR,SP70
          CALL      RDOPNUR1                * Reading the nurse file
          IF        OVRCD=1
            MOVE      SP70,NURSEHIS
          ELSE
            APPEND    OPNRGNAM,NURSEHIS
            APPEND    OPNRSNAM,NURSEHIS
          ENDIF
          GOTO      NURHIS20
.
.         CONTROL.EMCNURSE=1 - Use pmshcpaf for nurse
NURHIS11  PACK      KEY10,EMHINUR,SP70
          CALL      RDPMHCP1
          BRANCH    OVRCD,NURHIS20
.
          SQUEEZE   PMHCSNAM
          SQUEEZE   PMHCGNAM
          PACK      NURSEHIS,PMHCGNAM,SP1,PMHCSNAM
          GOTO      NURHIS20
.
NURHIS20  REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      EMHIEUS,KEY10
          CALL      RDWBSE1
          IF        OVRCD=1
            MOVE      SP70,WBSENAM
          ENDIF
.
          MATCH    "036",TEMPLATE
          IF       @EQUAL
            WRITE     HTMLFILE;"<tr><td nowrap>":
                               ARRDATE," at ",ARRTIME,"&nbsp;</td>";
            WRITE     HTMLFILE;"<td nowrap >":
                               NURSEHIS,"&nbsp;</td>";
            WRITE     HTMLFILE;"<td nowrap>":
                               DOCDATE," at ",DOCTIME,"&nbsp;</td></tr>";
            GOTO       NURHIS90
          ENDIF
.
          WRITE     HTMLFILE;"<tr><td nowrap>":
                             AUDDATE," at ",AUDTIME,"&nbsp;</td>";
.
          WRITE     HTMLFILE;"<td nowrap >":
                             WBSENAM,"&nbsp;</td>";
.
          WRITE     HTMLFILE;"<td nowrap >":
                             NURSEHIS,"&nbsp;</td>";
.
          IF        DISPREAS=1
            MOVE      SP70,REASDESC
            MATCH     SP70,EMHIRHND
            IF        !@EQUAL
              PACK      KEY5,CATfw,EMHIRHND     * Reason for Handover
              CALL      RDCODE1
              IF        OVRCD=0
                PACK      REASDESC,TDESC,SP70
              ENDIF
            ENDIF
.
            WRITE     HTMLFILE;"<td nowrap >",REASDESC,"&nbsp;</td>";
          ENDIF
.
          WRITE     HTMLFILE;"<td nowrap>":
                             DOCDATE," at ",DOCTIME,"&nbsp;</td></tr>";
.
NURHIS90  REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
.
          MOVE      EMHINUR,SAVNUR
          GOTO      NURHIS10
.
NURHIS99  MOVE      USERID,KEY10
          CALL      RDWBSE1
          RETURN
.------------------------------------------------------------
.         Verify Username/password/security level for update type
.------------------------------------------------------------
VERUSR00  MOVE      UPDTTYPE,KEY5
          CALL      RDEMUTY1
          BRANCH    OVRCD,VERUSR95
.
          MATCH     "0",EMUTSID            * Security ID Required?
          GOTO      VERUSR70 IF EQUAL      * no - dont check for pwd/sec level
.
          MATCH     "1",PTCNSUID
          IF        @EQUAL
            PACK      KEY10,USERNAME,SP70  * Using web user id for application
            CALL      RDWBSE1              * authentication
            BRANCH    OVRCD,VERUSR85
.
            PACK      USERNAME,WBSELOGN,SP256    * re set to login name
          ELSE
            PACK      KEY80,USERNAME,SP256 * check for valid user ID
            CALL      RDWBSE7
            IF        OVRCD=1
              REP       LOWUPP,KEY80
              CALL      RDWBSE7
              BRANCH    OVRCD,VERUSR85
            ENDIF
          ENDIF
.
          MATCH     "0",EMUTPWD            * password required
          GOTO      VERUSR70 IF EQUAL      * no - check for name/sec level
.
.         check for user/password on apache file
.
          MOVE      USERNAME,SECUREID
          MOVE      PASSWORD,SECUREPW
          CALL      VFYUSR00
          BRANCH    EXIT,VERUSR80
.
VERUSR70  MATCH     SP70,EMUTSLV      * No security level set so ok to continue
          IF        @EQUAL
            PACK      KEY18,WBSEUID,PRGID,SP70
            CALL      RDWBST1
            IF        OVRCD=1
              MOVE      WBSEUID,WBSTUID     * WBSTUID used in WRTHIS00
              MOVE      SP70,WBSTPRG
              MOVE      ZERO,WBSTLEV
            ENDIF
            MOVE      ZERO,EXIT
            GOTO      VERUSR99
          ENDIF
.
          PACK      KEY18,WBSEUID,PRGID,SP70
          CALL      RDWBST1
          BRANCH    OVRCD,VERUSR75
.
          MOVE      ZERO,F2
          MOVE      EMUTSLV,FORM2     * level required>user sec level??
          IF        FORM2>WBSTLEV
            MOVE      "Security level inadquate for this update type",WEBTITLE
            GOTO      VERUSR98
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      VERUSR99
.
VERUSR75  MOVE      "Security invalid for this server",WEBTITLE
          GOTO      VERUSR98
.
VERUSR80  MOVE      "User ID/Password invalid",WEBTITLE
          GOTO      VERUSR98
.
VERUSR85  MOVE      "User ID invalid",WEBTITLE
          GOTO      VERUSR98
.
VERUSR95  MOVE      "Invalid Update Type",WEBTITLE
          GOTO      VERUSR98
.
VERUSR98  CALL      WEBERR00
          MOVE      ONE,EXIT
.
VERUSR99  RETURN
.------------------------------------------------------------
.         Write history record
.------------------------------------------------------------
WRTHIS00  MOVE      SP70,SAVEDRDT
          MOVE      SP70,SAVEDRTM
          MOVE      SP70,SAVENRDT
          MOVE      SP70,SAVENRTM
          MOVE      SP70,SAVEDOCT
          MOVE      SP70,SAVENURS
          MOVE      SP70,SAVEOTDC
          MOVE      SP70,SAVEOTDT
          MOVE      SP70,SAVEOTTM
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
WRTHIS05  CALL      RPEMHIS1
          BRANCH    OVRCD,WRTHIS10
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      WRTHIS10 IF NOT EQUAL
.
          MOVE      EMHIDSD,SAVEDRDT
          MOVE      EMHIDST,SAVEDRTM
          MOVE      EMHINSD,SAVENRDT
          MOVE      EMHINST,SAVENRTM
          MOVE      EMHIDOC,SAVEDOCT
          MOVE      EMHINUR,SAVENURS
          MOVE      EMHIODCD,SAVEOTDC
          MOVE      EMHIODSD,SAVEOTDT
          MOVE      EMHIODST,SAVEOTTM
.
WRTHIS10  MOVE      EMVIADMN,EMHIVIS
          CLOCK     TIME,CTIMEIS
.         
          MATCH     "N1",FORMACTN           * New registration without UR      
          GOTO      WRTHIS15 IF EQUAL
          MATCH     "N3",FORMACTN           * New registration with UR        
          GOTO      WRTHIS15 IF EQUAL
.
          PACK      EMHIDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMHIDAT
          UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
          PACK      EMHITIM,HOUR,MIN,SEC
          REP       " 0",EMHITIM
.
          GOTO      WRTHIS20
.
WRTHIS15  MOVE      SAVEDATE,EMHIDAT
          MOVE      SAVETIME,EMHITIM
.
WRTHIS20  MATCH     SAVEDOCT,EMVIDOCT       * Is this a new doctor
          IF        @EQUAL
            MOVE      SAVEDRDT,EMHIDSD        * Restore current doctor date and
            MOVE      SAVEDRTM,EMHIDST        * time
            IF        EMCNDDTM=1
              MOVE      EMVIDRDT,EMHIDSD        * Use keyed in doctor date/time
              UNPACK    EMVIDRTM,HOUR,D1,MIN,D1,SEC
              PACK      EMHIDST,HOUR,MIN,SEC,SP70 * from emrvisaf. Taranaki
            ENDIF
          ELSE
            IF        EMCNDDTM=1
              MOVE      EMVIDRDT,EMHIDSD        * Use keyed in doctor date/time
              UNPACK    EMVIDRTM,HOUR,D1,MIN,D1,SEC
              PACK      EMHIDST,HOUR,MIN,SEC,SP70 * from emrvisaf. Taranaki
            ELSE
              PACK      EMHIDSD,CCC,CYY,CMM,CDD * New doctor so seen date and 
              REP       " 0",EMHIDSD            * time are set the current and 
              PACK      EMHIDST,HOUR,MIN,SEC    * time
              REP       " 0",EMHIDST
            ENDIF
          ENDIF
.
          MATCH     SAVENURS,EMVIATNS       * Is this a new nurse
          IF        @EQUAL
            MOVE      SAVENRDT,EMHINSD        * Restore current nurse date and
            MOVE      SAVENRTM,EMHINST        * time
          ELSE
            PACK      EMHINSD,CCC,CYY,CMM,CDD * New nurse so seen date and time
            REP       " 0",EMHINSD            * are set the current and time
            PACK      EMHINST,HOUR,MIN,SEC
            REP       " 0",EMHINST
          ENDIF
.
          MATCH     SAVEOTDC,EMVIUR04       * Is this a new other doctor
          IF        @EQUAL
            MOVE      SAVEOTDT,EMHIODSD       * Restore current od date and
            MOVE      SAVEOTTM,EMHIODST       * time
          ELSE
            PACK      EMHIODSD,CCC,CYY,CMM,CDD * New nurse so seen date and time
            REP       " 0",EMHIODSD           * are set the current and time
            PACK      EMHIODST,HOUR,MIN,SEC
            REP       " 0",EMHIODST
          ENDIF
.
WRTHIS40  MOVE      UPDTTYPE,EMHIUPT
          MATCH     SP70,HISTTYPE
          IF        !@EQUAL
            MOVE      HISTTYPE,EMHIUPT
          ENDIF
.
          MATCH     SP70,WEBUSEID
          IF        !@EQUAL
            MOVE      WEBUSEID,EMHIEUS
          ELSE
            MOVE      WBSTUID,EMHIEUS
          ENDIF
.
          MOVE      EMVILOCN,EMHILOC
          MOVE      EMVIDOCT,EMHIDOC
          MOVE      EMVIATNS,EMHINUR
          MOVE      EMVIUR04,EMHIODCD
          PACK      EMHISPA,SP70,SP70
          PACK      EMHIDSD,EMHIDSD,SP70
          PACK      EMHIDST,EMHIDST,SP70
          PACK      EMHINSD,EMHINSD,SP70
          PACK      EMHINST,EMHINST,SP70
          PACK      EMHIODSD,EMHIODSD,SP70
          PACK      EMHIODST,EMHIODST,SP70
.
          MOVE      REASONHO,EMHIRHND
.
          MATCH     SP70,EMHINUR
          IF        @EQUAL
            MOVE      SP70,EMHINSD
            MOVE      SP70,EMHINST
          ENDIF
.
          MATCH     SP70,EMHIDOC
          IF        @EQUAL
            MOVE      SP70,EMHIDSD
            MOVE      SP70,EMHIDST
          ENDIF
.
          MATCH     SP70,EMHIODCD
          IF        @EQUAL
            MOVE      SP70,EMHIODSD
            MOVE      SP70,EMHIODST
          ENDIF
.
          CALL      IBACLOCK
          PACK      EMHICDAT,CCC,CYY,CMM,CDD  * Date Record Created (ccyymmdd)
          REP       " 0",EMHICDAT
          CLOCK     TIME,EMHICTIM             * Time Record Created (hh:mm:ss)
          MOVE      USERID,EMHICUID           * Web User Id Created (websecaf)
.
          MOVE      SP70,EMHIUDAT      * Date Record Updated (ccyymmdd)
          MOVE      SP70,EMHIUTIM      * Time Record Updated (hh:mm:ss)
          MOVE      SP70,EMHIUUID      * Web User Id Updated (websecaf)
.
WRTHIS80  PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
          CALL      RAEMHIS1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            MOVE      SP70,EMHIDRBC              * Billing Incomplete
            CALL      WREMHIS1
            TRAPCLR   IO
            BRANCH    OVRCD,WRTHIS85             * Add one second and try again
.
          ELSE
WRTHIS85    CALL      IBACLOCK                   * Set new date and time and
            PACK      EMHIDAT,CCC,CYY,CMM,CDD    * try write again
            REP       " 0",EMHIDAT
            CLOCK     TIME,CTIMEIS
            UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
            PACK      EMHITIM,HOUR,MIN,SEC
            REP       " 0",EMHITIM
            GOTO      WRTHIS80
          ENDIF
.
          MOVE      ZERO,EXIT
.
WRTHIS99  RETURN
.------------------------------------------------------------
. Check Update Key for Remote Script
.------------------------------------------------------------
UPDKEY00  MOVE      ZERO,EXIT
.         * split key to admissno and timestamp
          UNPACK    UPDATEKY,ADMISSNO,TSTAMP0
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
UPDKEY10  CALL      RPEMHIS1
          BRANCH    OVRCD,UPDKEY99
.                    * check if still same visit
          MATCH     ADMISSNO,EMHIVIS
          GOTO      UPDKEY99 IF NOT EQUAL
.                    * check if this is same or earlier timestamp
          PACK      TSTAMP1,EMHIDAT,EMHITIM
          MATCH     TSTAMP1,TSTAMP0
          GOTO      UPDKEY99 IF NOT LESS
.
          MATCH     UPDTTYPE,EMHIUPT
          GOTO      UPDKEY10 IF NOT EQUAL  * keep searching
.
.         if we get here we have a LATER update of same type
.
          MOVE      ONE,EXIT  * cannot allow update
.
UPDKEY99  RETURN
.
.------------------------------------------------------------
.         CHKREM00
.------------------------------------------------------------
CHKREM00  MOVE      ZERO,EXIT
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
          CALL      RPEMHIS1
          IF        OVRCD=1 
            PACK      TESTKEY,ADMISSNO,SP70
            GOTO      CHKREM90
          ENDIF
.
          MATCH     ADMISSNO,EMHIVIS
          IF        !@EQUAL
            PACK      TESTKEY,ADMISSNO,SP70
            GOTO      CHKREM90
          ENDIF
.
          REP       " 0",EMHIDAT
          REP       " 0",EMHITIM
          PACK      TESTKEY,EMHIVIS,EMHIDAT,EMHITIM
.
CHKREM90  MATCH     TESTKEY,UPDATEKY
          GOTO      CHKREM99 IF EQUAL
.
CHKREM95  MATCH     EMHIEUS,WBSTUID
          IF        @EQUAL
            MOVE      TWO,EXIT                   * Same user ignore
            GOTO      CHKREM99 
          ENDIF
          PACK      KEY22,ONE,SP70
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;KEY22,"|",TESTKEY;
          WRITE     HTMLFILE;"</RETURN_VALUE>"
.
          MOVE      ONE,EXIT
          GOTO      CHKREM99
.
CHKREM98  DISPLAY   "*** Fifo Not Found ***"
.
CHKREM99  RETURN
.------------------------------------------------------------
.         CHKKEY00
.------------------------------------------------------------
CHKKEY00  MOVE      ZERO,EXIT
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
          CALL      RPEMHIS1
          IF        OVRCD=1 
            PACK      TESTKEY,ADMISSNO,SP70
            GOTO      CHKKEY90
          ENDIF
.
          MATCH     ADMISSNO,EMHIVIS
          IF        !@EQUAL
            PACK      TESTKEY,ADMISSNO,SP70
            GOTO      CHKKEY90
          ENDIF
.
          REP       " 0",EMHIDAT
          REP       " 0",EMHITIM
          PACK      TESTKEY,EMHIVIS,EMHIDAT,EMHITIM
.
CHKKEY90  MATCH     TESTKEY,UPDATEKY
          GOTO      CHKKEY99 IF EQUAL
.
CHKKEY95  MATCH     EMHIEUS,WBSTUID
          GOTO      CHKKEY99 IF EQUAL
          
          CALL      OPENHTML
          BRANCH    EXIT,CHKKEY98
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             " alert(#"Patient details updated by":
                             " another user.\nThe screen will now be": 
                             " refreshed. \nChanges to details":
                             " have not been retained.#");":
                             " if (window.name.substr(0,4)=='Hide' ) {":
                             " opener.history.go(0); ":
                             " self.close() } ":
                             " else {":
                             " history.go(-1)}":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          MOVE      ONE,EXIT
          GOTO      CHKKEY99
.
CHKKEY98  DISPLAY   "*** Fifo Not Found ***"
.
CHKKEY99  RETURN
.------------------------------------------------------------
.         CLVISLST
.------------------------------------------------------------
CLVISLST  MOVE      ZERO,VISITCNT
          MOVE      ONE,ARRCOUNT
.
CLVIS100  MOVE      SP70,VISITLST[ARRCOUNT]
          ADD       ONE,ARRCOUNT
          IF        ARRCOUNT>99
            GOTO      CLVIS999
          ENDIF
          GOTO      CLVIS100
.
CLVIS999  RETURN
.------------------------------------------------------------
.         SHIFT000
.------------------------------------------------------------
SHIFT000  RESET     FORMACTN
          MATCH     SP1,FORMACTN
          GOTO      SHIFT300 IF EQUAL
.
          MATCH     "N",FORMACTN
          GOTO      SHIFT100 IF EQUAL
.
          MATCH     "D",FORMACTN
          GOTO      SHIFT200 IF EQUAL
.
          GOTO      SHIFT980
.
SHIFT100  CALL      NUPD0000
          GOTO      SHIFT999
.
SHIFT200  CALL      DUPD0000
          GOTO      SHIFT999
.
SHIFT300  CALL      WEBHED00
          BRANCH    EXIT,SHIFT990
          CALL      WEBBOD00
          CALL      WEBEND00
          MOVE      ONE,EXIT
          GOTO      SHIFT999
.
SHIFT980  MOVE      "Invalid form action",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      SHIFT999
.
SHIFT990  MOVE      ZERO,EXIT
.
SHIFT999  RETURN
.------------------------------------------------------------
.         Nurse Update
.------------------------------------------------------------
NUPD0000  MATCH     "1",EMCNURSE           * Use pmshcpaf for ED Nurse? 
          GOTO      NUPD0100 IF EQUAL      * Yes
.
.         CONTROLF.EMCNURSE=0 - Use oprnuraf for ED nurse
          PACK      KEY6,SELECTCD
          CALL      RAOPNUR1
          BRANCH    OVRCD,NUPD9000
.
          PACK      KEY6,ALLOCTCD
          CALL      RAOPNUR1
          BRANCH    OVRCD,NUPD9100
.
          MATCH     ALLOCTCD,SELECTCD
          GOTO      NUPD9200 IF EQUAL
.
          GOTO      NUPD0200                        * Verify User
.
.         CONTROLF.EMCNURSE=1 - Use pmshcpaf for ED nurse
NUPD0100  PACK      KEY10,SELECTCD,SP70
          CALL      RAPMHCP1
          BRANCH    OVRCD,NUPD9000
.
          PACK      KEY10,ALLOCTCD,SP70
          CALL      RAPMHCP1
          BRANCH    OVRCD,NUPD9100
.
          MATCH     ALLOCTCD,SELECTCD
          GOTO      NUPD9200 IF EQUAL
.
          GOTO      NUPD0200                        * Verify User
.
NUPD0200  CALL      VERUSR00                        * Verify User
          BRANCH    EXIT,NUPD9999
.
          COMPARE   VISITCNT,ZERO
          GOTO      NUPD1000 IF EQUAL
.
          PACK      FORMACTN,FORMACTN,SP70       
.
          MOVE      ZERO,SAVCOUNT
          WHILE     SAVCOUNT<VISITCNT
            ADD       ONE,SAVCOUNT
            MOVE      VISITLST[SAVCOUNT],KEY8
            CALL      RLEMVIS1
            BRANCH    OVRCD,NUPD9300,NUPD9400
            MOVE      ALLOCTCD,EMVIATNS
            CALL      UPEMVIS1
            CALL      ULEMVIS1
.
.           Broadcast update message
.
            MOVE      EMVIURNO,KEY8              * first - get the PMI details
            CALL      RDMAST1
            BRANCH    OVRCD,NUPD0700
.
            MOVE      EMVIURNO,KEY8
            CALL      RDPMPX21
            BRANCH    OVRCD,NUPD0700
.
            MOVE      EMVIADMN,KEY8
            CALL      RDPMVX11
            BRANCH    OVRCD,NUPD0700
.
            CALL      PMIGTNID                 * get national id for dgate write
            MOVE      NMPNUMB,PTNINMPI
            MOVE      TEN3,HL7TRGID
            MOVE      SP8,HL7INCLD
            PROC      DGCLICEC                   * send update emr details
.
NUPD0700  MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRTHIS00
          ENDIF

          DO
          PROC      EMRDRCHR                 * Update Visit Billing Complete
          MOVE      ZERO,EXIT
          GOTO      NUPD9999
.
NUPD1000  CALL      NALLUP00
          MOVE      ZERO,EXIT
          GOTO      NUPD9999
.
NUPD9000  MOVE      "Selected nurse not on file",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      NUPD9999
.
NUPD9100  MOVE      "Allocated nurse not on file",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      NUPD9999
.
NUPD9200  MOVE      "Allocated nurse matches selected nurse",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      NUPD9999
.
NUPD9300  MOVE      "Emergency Visit Record not found.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      NUPD9999
.
NUPD9400  MOVE      "Emergency Visit Record locked.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      NUPD9999
.
NUPD9999  RETURN
.------------------------------------------------------------
.         Doctor Update
.------------------------------------------------------------
DUPD0000  PACK      KEY6,SELECTCD
          CALL      RDDOCT1
          BRANCH    OVRCD,DUPD9000
.
          PACK      KEY6,ALLOCTCD
          CALL      RDDOCT1
          BRANCH    OVRCD,DUPD9100
.
          MATCH     ALLOCTCD,SELECTCD
          GOTO      DUPD9200 IF EQUAL
.
          CALL      VERUSR00
          BRANCH    EXIT,DUPD9999
.
          COMPARE   VISITCNT,ZERO
          GOTO      DUPD1000 IF EQUAL
.
          MOVE      ZERO,SAVCOUNT
          WHILE     SAVCOUNT<VISITCNT
            ADD       ONE,SAVCOUNT
            MOVE      VISITLST[SAVCOUNT],KEY8
            CALL      RLEMVIS1
            BRANCH    OVRCD,DUPD9300,DUPD9400
            MOVE      ALLOCTCD,EMVIDOCT
            CALL      UPEMVIS1
.
            CALL      ULEMVIS1
.
.           Broadcast update message
.
            MOVE      EMVIURNO,KEY8              * first - get the PMI details
            CALL      RDMAST1
            BRANCH    OVRCD,DUPD0700
.
            MOVE      EMVIURNO,KEY8
            CALL      RDPMPX21
            BRANCH    OVRCD,DUPD0700
.
            MOVE      EMVIADMN,KEY8
            CALL      RDPMVX11
            BRANCH    OVRCD,DUPD0700
.
            CALL      PMIGTNID                 * get national id for dgate write
            MOVE      NMPNUMB,PTNINMPI
            MOVE      TEN4,HL7TRGID
            MOVE      SP8,HL7INCLD
            PROC      DGCLICEC                   * send update emr details
.
DUPD0700  MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRTHIS00
          ENDIF
.
            IF        EMVISTAT = 2|EMVISTAT = 3
              IF        CCCNSVHM = 1
                OPEN      CCIEX7A1,"cciex7af"
                CALL      TRNSII00
                CLOSE     CCIEX7A1
              ENDIF
            ENDIF
          DO
.
          PROC      EMRDRCHR                 * Update Visit Billing Complete
          MOVE      ZERO,EXIT
          GOTO      DUPD9999
.
DUPD1000  CALL      DALLUP00
          MOVE      ZERO,EXIT
          GOTO      DUPD9999
.
DUPD9000  MOVE      "Selected doctor not on file",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DUPD9999
.
DUPD9100  MOVE      "Allocated doctor not on file",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DUPD9999
.
DUPD9200  MOVE      "Allocated doctor matches selected doctor",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DUPD9999
.
DUPD9300  MOVE      "Emergency Visit Record not found.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DUPD9999
.
DUPD9400  MOVE      "Emergency Visit Record locked.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DUPD9999
.
DUPD9999  RETURN
.------------------------------------------------------------
.         NALLUP00
.------------------------------------------------------------
NALLUP00  PACK      KEY9,ONE,SP70
          CALL      RSEMVIS2
NALLUP10  CALL      RKEMVIS2
          BRANCH    OVRCD,NALLUP99
          COMPARE   ONE,EMVISTAT
          GOTO      NALLUP99 IF NOT EQUAL
.
          MATCH     SELECTCD,EMVIATNS
          GOTO      NALLUP10 IF NOT EQUAL
.
          MOVE      ALLOCTCD,EMVIATNS
          CALL      UPEMVIS2
.
.         Broadcast update message
.
          MOVE      EMVIURNO,KEY8              * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,NALLUP10
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,NALLUP10
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,NALLUP10
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TEN5,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                   * send update emr details
.
          GOTO      NALLUP10
.
NALLUP99  RETURN
.------------------------------------------------------------
.         DALLUP00
.------------------------------------------------------------
DALLUP00  PACK      KEY9,ONE,SP70
          CALL      RSEMVIS2
DALLUP10  CALL      RKEMVIS2
          BRANCH    OVRCD,DALLUP99
          COMPARE   ONE,EMVISTAT
          GOTO      DALLUP99 IF NOT EQUAL
.
          MATCH     SELECTCD,EMVIDOCT
          GOTO      DALLUP10 IF NOT EQUAL
.
          MOVE      ALLOCTCD,EMVIDOCT
          CALL      UPEMVIS2
.
.         Broadcast update message
.
          MOVE      EMVIURNO,KEY8              * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,DALLUP10
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,DALLUP10
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,DALLUP10
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TEN6,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                   * send update emr details
.
          GOTO      DALLUP10
.
DALLUP99  RETURN
.------------------------------------------------------------
.  mandatory fields
.------------------------------------------------------------
MANF0000  MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1
          BRANCH    OVRCD,MANF9000
.
          CALL      CHKUR000
          CALL      PATNAA00
          CALL      CLRMSG00           * Clear Message Array
.
.         CALL      CHKMAN00           * D CAR 42450
.
          COMPARE   ONE,PTCNHDPS
          GOTO      MANF0500 IF EQUAL
.
          MOVE      ZERO,FORM2
          MATCH     SP70,EMVIDSTA
          IF        !@EQUAL
            PACK      KEY5,CODEED,EMVIDSTA
            CALL      RDCODE1                      * code on file ?
            IF        OVRCD=0
              UNPACK    THCSCOD,DIM2
              SQUEEZE   DIM2                       * Save HDP Eq.
              MOVE      DIM2,FORM2
            ENDIF
          ENDIF
.
          IF        FORM2=11 | FORM2=10
            MOVE      ONE,OTSTFLAG
            MOVE      ZERO,OTAMFLAG
            CALL      CHKMAN00
            COMPARE   ONE,OTAMFLAG
            GOTO      MANF2000 IF EQUAL
            GOTO      MANF1000
          ENDIF
.
MANF0500  MOVE      ZERO,OTSTFLAG
          MOVE      ZERO,OTAMFLAG
          CALL      CHKMAN00           * If dep status is not "Left before seen
          GOTO      MANF2000           * by Doctor" then check the Mand fields
.
MANF1000  PACK      KEY8,EMVIADMN,SP70 * If dep status is "Left before seen by
          IF        EMVISTAT=3 | EMVISTAT=4
            CALL      DEEMINC1           * Doctor" then delete incomplete record
          ENDIF
.
MANF2000                                   * end I CAR 42450

..          COMPARE   ZERO,EMCNEXTR
..          IF        @EQUAL
..            CALL      VICD0000           * ICD Validation
..            CALL      VALDD000           * Validate Discharge Status
..            CALL      VDOAF000           * DOA validation ok
..            CALL      ZERUR000           * Check for Zero UR
..            CALL      ADUNIT00           * Check for admission unit
..          ENDIF
.
          IF        MSGARRNO>0
            CALL      DISMAN00
          ENDIF
          MOVE      SP70,DOCTRNAM
          MOVE      SP70,NURSNAME
.
          MOVE      ZERO,EXIT
          GOTO      MANF9999
.
MANF9000  WRITE     HTMLFILE;"<tr><td>Admission record not on file</td></tr>"
          MOVE      ONE,EXIT
          GOTO      MANF9999
.
MANF9999  RETURN
.------------------------------------------------------------
.         Deletion Audit
.------------------------------------------------------------
DELAUD00  MOVE      EMVIADMN,KEY8
          CALL      RDEMDA1
          IF        OVRCD=0
            GOTO      DELAUD80
          ENDIF
.
.         MOVE      EMVIADMN,KEY8
.         CALL      RDEMVIS1
.         IF        OVRCD=0
.           GOTO      DELAUD85
.         ENDIF
.
          PACK      KEY22,EMVIADMN,Z70
          CALL      RSEMHIS1
DELAUD10  CALL      RPEMHIS1
          BRANCH    OVRCD,DELAUD90
.
          MATCH     DEMVIADM,EMHIVIS
          GOTO      DELAUD90 IF NOT EQUAL
.
          MATCH     "DELET",EMHIUPT
          GOTO      DELAUD10 IF NOT EQUAL
.
          PACK      EMDARECD,EMDLA001,SP70
          MATCH     SP70,EMDARECD
          GOTO      DELAUD95 IF EQUAL
.
          PACK      KEY5,ANSE,ANSC,EMDARECD
          CALL      RDCODE1
          BRANCH    OVRCD,DELAUD95
.
          MOVE      EMVIADMN,EMDAADMN
          MOVE      EMHIDAT,EMDADATE
          MOVE      EMHIEUS,EMDAWUID
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      EMDATIME,HOUR,COLON,MIN
          REP       " 0",EMDATIME
.
          PACK      EMDACOMM,EMDLA002,SP70
.
          PACK      KEY8,EMDAADMN
          CALL      WREMDA1
          MOVE      ZERO,EXIT
          GOTO      DELAUD99
.
DELAUD80  MOVE      "Deletion audit record exists for this admission",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DELAUD99
.
DELAUD85  MOVE      "Visit has not been deleted from visit file",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DELAUD99
.
DELAUD90  MOVE      "No record of visit delete in history file",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DELAUD99
.
DELAUD95  MOVE      "Invalid reason code",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DELAUD99
.
DELAUD99  RETURN
.------------------------------------------------------------
.         INJS0000  Injury Surveillance Data Capture
.------------------------------------------------------------
INJS0000  MATCH     SP70,FORMACTN
          GOTO      INJS1000 IF EQUAL
.
          MATCH     U,FORMACTN
          GOTO      INJS9000 IF NOT EQUAL
.
.          CALL      VALMTX00    * Validate Nature of Injury versus Body Region
.          BRANCH    EXIT,INJS9999
.
          CALL      UPIN0000    * Update injury data
          GOTO      INJS9999
.
INJS1000  CALL      CHKADM00
          MATCH     SP8,URNUMBER
          IF        @EQUAL | @EOS
            MOVE      EMVIURNO,URNUMBER
          ENDIF
.
          CALL      CHKUR000
          CALL      CHKINJ00    * Check for Default Injury Data
.
          LOAD      INJTXT1,EMCNUDXA,EMVITXT1,EMVITXT2,EMVITXT3,EMVITXT4:
                                     EMVITXT5
.
          MOVE      ZERO,EXIT
          PACK      INJTXT1,INJTXT1,SP70
          MATCH     SP70,INJTXT1
          GOTO      INJS2000 IF NOT EQUAL
.
          LOAD      INJTXT2,EMCNUDXB,EMVITXT1,EMVITXT2,EMVITXT3,EMVITXT4:
                                     EMVITXT5
.
          MOVE      ZERO,EXIT
          PACK      INJTXT2,INJTXT2,SP70
          MATCH     SP70,INJTXT2
          GOTO      INJS2000 IF NOT EQUAL
.
          PACK      INJTXT1,EMVICOM1,SP70
          PACK      INJTXT2,EMVICOM2,SP70
.
          STORE     INJTXT1,EMCNUDXA,EMVITXT1,EMVITXT2,EMVITXT3,EMVITXT4:
                                     EMVITXT5
.
          STORE     INJTXT2,EMCNUDXB,EMVITXT1,EMVITXT2,EMVITXT3,EMVITXT4:
                                     EMVITXT5
.
INJS2000  CALL      PATNAA00
          MOVE      PATFNAME,WEBTITLE
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          CALL      WEBHED00
          BRANCH    EXIT,INJS9999
          CALL      WEBBOD00
          CALL      WEBEND00
          MOVE      ONE,EXIT
          GOTO      INJS9999
.
INJS9000  MOVE      "Invalid Form Action",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      INJS9999
.
INJS9100  MOVE      "Invalid Visit Number",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      INJS9999
.
INJS9999  RETURN
.----------------------------------------------------------------------
.                           VALMTX00 
.  Validate whether Nature of Injury and Body Region can be
.  combined or vice versa.
.                  *** INPUT CGI VARIABLES ***
.  INJUR001   :   Nature of Injury 
.  EMVIS035   :   Body Region  
.                  *** Return Variables ***
.  DIAGNSIS   :   Diagnosis Code used in PRIMDG00   
.----------------------------------------------------------------------
VALMTX00  MOVE      "A8",CATEGORY  * Get Nature of Injury HDP Equivalent
          MOVE      INJUR001,CODE 
          PACK      KEY5,CATEGORY,CODE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,VALMTX81
.
          MOVE      THCSCOD,KEY2              
          PACK      KEY10,KEY2,EMVIS035,SP70
          CALL      RSEMMX1
          CALL      RKEMMX1
          BRANCH    OVRCD,VALMTX80 
          MATCH     KEY2,EMMXNAT       * Nature of Injury
          GOTO      VALMTX80 IF NOT EQUAL
.
          MATCH     EMVIS035,EMMXBRG   * Body Region
          GOTO      VALMTX80 IF NOT EQUAL
.
          MOVE      EMMXPDG,DIAGNSIS   * Set Diagnosis Code   
.
          GOTO      VALMTX90
.          
VALMTX80  MOVE      "Invalid Nature of Injury and Body Region Combined",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      VALMTX99
.          
VALMTX81  MOVE      "Invalid Nature of Injury Category Code",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      VALMTX99
.
VALMTX90  MOVE      ZERO,EXIT
VALMTX99  RETURN
.------------------------------------------------------------
.         UPIN0000  Update injury data
.------------------------------------------------------------
UPIN0000  MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1
          BRANCH    OVRCD,UPIN9900
.
          MOVE      EMVIS021,EMVIPLIN
          MOVE      INJUR002,EMVIINJ1
          MOVE      INJUR003,EMVIINJ2
          MOVE      INJUR004,EMVIINJC
          MOVE      INJUR005,EMVIHUMI
          MOVE      INJUR006,EMVIACTI
.
          PACK      KEY17,DEMVIADM,DZEROF,SP70
          CALL      RSEMVCD2
          CALL      RKEMVCD2
          BRANCH    OVRCD,UPIN1000
.
          MATCH     DEMVIADM,EMVCVIST
          GOTO      UPIN1000 IF NOT EQUAL
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          BRANCH    OVRCD,UPIN1000
.
          PACK      KEY10,EMIC9COD,SP70
          CALL      RSEMMX3
          CALL      RKEMMX3
          BRANCH    OVRCD,UPIN1000
.
          MATCH     EMIC9COD,EMMXPDG
          GOTO      UPIN1000 IF NOT EQUAL

          MOVE      EMMXBRG,EMVIREGN       * Body region
          MOVE      EMMXNAT,EMVINATI       * Nature of injury          
.
UPIN1000  CALL      VALINJ00
          BRANCH    EXIT,UPIN9999
.
          CALL      UPEMVIS1
.
.         Broadcast update message
.
          MOVE      EMVIURNO,KEY8              * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,UPIN9000
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,UPIN9000
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,UPIN9000
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TEN7,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                   * send update emr details
.
          CALL      WRTHIS00
          PROC      EMRDRCHR                 * Update Visit Billing Complete
          CALL      WEDV0000           * Write EDWARD visit alteration
.
UPIN9000  MOVE      ZERO,EXIT
          GOTO      UPIN9999
.
UPIN9900  MOVE      "Invalid Visit Number",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPIN9999
.
UPIN9999  RETURN
.------------------------------------------------------------
.         STRINJ00  Store injury fields
.------------------------------------------------------------
STRINJ00  PACK      INJUR001,INJUR001,SP70
          PACK      INJUR002,INJUR002,SP70
          PACK      INJUR003,INJUR003,SP70
          PACK      INJUR004,INJUR004,SP70
          PACK      INJUR005,INJUR005,SP70
          PACK      INJUR006,INJUR006,SP70
          PACK      EMVIS021,EMVIS021,SP70
          PACK      EMVIS035,EMVIS035,SP70
.
          MATCH     Z70,INJUR001
          GOTO      STRINJ10 IF EQUAL
          GOTO      STRINJ10 IF EOS
.
.         Nature of main injury - field no 43
.
          MOVE      " 43     ",KEY8
          MOVE      INJUR001,VARIABLE
          CALL      STCAT000
          BRANCH    EXIT,STRINJ99
.
STRINJ10  MATCH     Z70,INJUR002
          GOTO      STRINJ20 IF EQUAL
          GOTO      STRINJ20 IF EOS
.
          MOVE      " 45     ",KEY8
          MOVE      INJUR002,VAR50
          CALL      STTXT000
          BRANCH    EXIT,STRINJ99
.
STRINJ20  MATCH     Z70,INJUR003
          GOTO      STRINJ30 IF EQUAL
          GOTO      STRINJ30 IF EOS
.
          MOVE      " 46     ",KEY8
          MOVE      INJUR003,VAR50
          CALL      STTXT000
          BRANCH    EXIT,STRINJ99
.
STRINJ30  MATCH     Z70,INJUR004
          GOTO      STRINJ40 IF EQUAL
          GOTO      STRINJ40 IF EOS
.
.         Injury Cause - field no 47
.
          MOVE      " 47     ",KEY8
          MOVE      INJUR004,VARIABLE
          CALL      STCAT000
          BRANCH    EXIT,STRINJ99
.
STRINJ40  MATCH     Z70,INJUR005
          GOTO      STRINJ50 IF EQUAL
          GOTO      STRINJ50 IF EOS
.
.         Human Intent - field no 48
.
          MOVE      " 48     ",KEY8
          MOVE      INJUR005,VARIABLE
          CALL      STCAT000
          BRANCH    EXIT,STRINJ99
.
STRINJ50  MATCH     Z70,INJUR006
          GOTO      STRINJ60 IF EQUAL
          GOTO      STRINJ60 IF EOS
.
.         Activity When Injured - field no 50
.
          MOVE      " 50     ",KEY8
          MOVE      INJUR006,VARIABLE
          CALL      STCAT000
          BRANCH    EXIT,STRINJ99
.
STRINJ60  MATCH     Z70,EMVIS035
          GOTO      STRINJ70 IF EQUAL
          GOTO      STRINJ70 IF EOS
.
          MOVE      EMVIS035,EMVIREGN
.
STRINJ70  MATCH     Z70,EMVIS021           * place of incident
          GOTO      STRINJ99 IF EQUAL
          GOTO      STRINJ99 IF EOS
.
          MOVE      EMVIS021,EMVIPLIN
.
STRINJ99  RETURN
.------------------------------------------------------------
.         VALINJ00  Validate injury fields
.------------------------------------------------------------
VALINJ00   MOVE      ZERO,EXIT
.
.          MATCH     SP70,INJUR001           * Nature of Main Injury blank?
.          IF        @EQUAL | @EOS
.            CALL      CLBRF000
.            MOVE      ZERO,EXIT
.            GOTO      VALINJ99
.          ENDIF
.
.          MATCH     SP70,EMVIREGN
.          GOTO      VALINJ10 IF EQUAL
.          GOTO      VALINJ10 IF EOS
.
.          PACK      KEY2,EMVIREGN
.          CALL      RDEMGRC1
.          IF        OVRCD=1
.            MOVE      "Body Region Code Invalid",WEBTITLE
.            CALL      WEBERR00
.            MOVE      ONE,EXIT
.            GOTO      VALINJ99
.          ENDIF
.
.VALINJ10  MATCH     Z70,INJUR001  * Nature of Main Injury
.          GOTO      VALINJ20 IF EQUAL
..          GOTO      VALINJ20 IF EOS
.
.          MOVE      " 43     ",KEY8
.          CALL      LDCAT000
.          BRANCH    EXIT,VALINJ99
..
.          PACK      KEY5,CATEGORY,INJUR001
.          CALL      RDCODE1
.          IF        OVRCD=1
.            MOVE      "Nature of Main Injury Code Invalid",WEBTITLE
.            CALL      WEBERR00
.            MOVE      ONE,EXIT
.            GOTO      VALINJ99
.          ENDIF
..
VALINJ20  MATCH     Z70,INJUR004     * Injury Cause
          GOTO      VALINJ30 IF EQUAL
          GOTO      VALINJ30 IF EOS
.
          MOVE      " 47     ",KEY8
...          CALL      LDCAT000
          MOVE      "ey",CATEGORY
...       BRANCH    EXIT,VALINJ99
.
          PACK      KEY5,CATEGORY,INJUR004                                    
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      "Injury Cause Code Invalid",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
            GOTO      VALINJ99
          ENDIF
.
VALINJ30  MATCH     SP70,INJUR005         * Human intent
          GOTO      VALINJ40 IF EQUAL
          GOTO      VALINJ40 IF EOS
.
          MOVE      " 48     ",KEY8
...          CALL      LDCAT000
          MOVE      "ez",CATEGORY
...       BRANCH    EXIT,VALINJ999
.
          PACK      KEY5,CATEGORY,INJUR005                         
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      "Human Intent Code Invalid",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
            GOTO      VALINJ99
          ENDIF
.
VALINJ40  MATCH     Z70,INJUR006
          GOTO      VALINJ50 IF EQUAL
          GOTO      VALINJ50 IF EOS
.
          MOVE      " 50     ",KEY8
...          CALL      LDCAT000
          MOVE      "EY",CATEGORY
...       BRANCH    EXIT,VALINJ999
.
          PACK      KEY5,CATEGORY,INJUR006 
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      "Activity When Injured Code Invalid",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
            GOTO      VALINJ99
          ENDIF
.
VALINJ50  MATCH     Z70,EMVIPLIN
          GOTO      VALINJ99 IF EQUAL
          GOTO      VALINJ99 IF EOS
.
          PACK      KEY5,CATAP,EMVIPLIN
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      "Place of Incident Code Invalid",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
            GOTO      VALINJ99
          ENDIF
.
VALINJ99  RETURN
.------------------------------------------------------------
.         CLBRF000  Clear body region fields
.------------------------------------------------------------
CLBRF000  
CLBRF999  RETURN
.------------------------------------------------------------
.         STCAT000   Store in category codes user defined field
.         Requires extract field number in KEY8 and data to be stored
.         in VARIABLE
.------------------------------------------------------------
STCAT000  CALL      RSEMWFM3
          CALL      RKEMWFM3
          BRANCH    OVRCD,STCAT900     * field not set up for extract
.
          MATCH     KEY8,EMWFEXF
          GOTO      STCAT900 IF NOT EQUAL
.
          MOVE      EMWFFLD,F3
          IF        F3<TWENTY6 | F3>FIFTY5
            GOTO      STCAT900
          ENDIF
          STORE     VARIABLE,F3,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 10
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 20
                                ANS,ANS,ANS,ANS,ANS:
                                EMVIUC01,EMVIUC02,EMVIUC03,EMVIUC04,EMVIUC05: 30
                                EMVIUC06,EMVIUC07,EMVIUC08,EMVIUC09,EMVIUC10:
                                EMVIUC11,EMVIUC12,EMVIUC13,EMVIUC14,EMVIUC15: 40
                                EMVIUC16,EMVIUC17,EMVIUC18,EMVIUC19,EMVIUC20:
                                EMVIUC21,EMVIUC22,EMVIUC23,EMVIUC24,EMVIUC25: 50
                                EMVIUC26,EMVIUC27,EMVIUC28,EMVIUC29,EMVIUC30:
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 60
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 70
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 80
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 90
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 100
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 110
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 120
                                ANS,ANS,ANS                  *125
.
          MOVE      ZERO,EXIT
          GOTO      STCAT999
.
STCAT900  MOVE      "Extract field number not setup correctly.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      STCAT999
.
STCAT999  RETURN
.------------------------------------------------------------
.         LDCAT000   Load category to validate user defined cat.
.         Requires extract field number in KEY8 
.         Returns EXIT and CATEGORY is category to use for validation
.------------------------------------------------------------
LDCAT000  CALL      RSEMWFM3
          CALL      RKEMWFM3
          BRANCH    OVRCD,LDCAT900     * field not set up for extract
.
          MATCH     KEY8,EMWFEXF
          GOTO      LDCAT900 IF NOT EQUAL
.
          MOVE      EMWFFLD,F3
          IF        F3<TWENTY6 | F3>FIFTY5
            GOTO      LDCAT900
          ENDIF
          LOAD      CATEGORY,F3,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 10
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 20
                                ANS,ANS,ANS,ANS,ANS:
                                CATA1,CATA2,CATA3,CATA4,CATA5,CATA6,CATA7,CATA8:
                                CATEA,CATEB,CATEC,CATED,CATEE,CATEF,CATEG,CATEH:
                                CATEI,CATEJ,CATEK,CATEL,CATEM,CATEN,CATEO,CATEP:
                                CATEQ,CATER,CATES,CATET,CATEU,CATEV:
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 60
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 70
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 80
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 90
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 100
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 110
                                ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 120
                                ANS,ANS,ANS                  *125
.
          MOVE      ZERO,EXIT
          GOTO      LDCAT999
.
LDCAT900  MOVE      "Extract field number not setup correctly.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LDCAT999
.
LDCAT999  RETURN
.------------------------------------------------------------
.         STTXT000  Store text field
.------------------------------------------------------------
STTXT000  CALL      RSEMWFM3
          CALL      RKEMWFM3
          BRANCH    OVRCD,STTXT900     * field not set up for extract
.
          MATCH     KEY8,EMWFEXF
          GOTO      STTXT900 IF NOT EQUAL
.
          MOVE      EMWFFLD,F3
          IF        F3<EIGHTY6 | F3>NINTY
            GOTO      STTXT900
          ENDIF
          STORE     VAR50,F3,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 10
                             ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 20
                             ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 30
                             ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 40
                             ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 50
                             ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 60
                             ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 70
                             ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 80
                             ANS,ANS,ANS,ANS,ANS:
                             EMVITXT1,EMVITXT2,EMVITXT3,EMVITXT4,EMVITXT5: 90
                             ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 100
                             ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 110
                             ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 120
                             ANS,ANS,ANS                             *125
.
          MOVE      ZERO,EXIT
          GOTO      STTXT999
.
STTXT900  MOVE      "Extract field number not setup correctly.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      STTXT999
.
STTXT999  RETURN
.------------------------------------------------------------
.         CLOSE000
.------------------------------------------------------------
UCLOSE00  CALL      OPENHTML
          BRANCH    EXIT,UCLOSE99
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
..                             "    opener.close();":
                             "    self.close();":
                             "}":
                             "</script>"
          CALL      CLOSHTML
.
UCLOSE99  RETURN
.------------------------------------------------------------
.         Get day number
.------------------------------------------------------------
GETDAY00  CALL      IBACLOCK
          PACK      TODYDATE,CCC,CYY,CMM,CDD
          REP       " 0",TODYDATE
.
          MOVE      ZERO,DYCNT
          PACK      KEY8,SP70
          CALL      RSEMDY1
GETDAY10  CALL      RKEMDY1
          BRANCH    OVRCD,GETDAY20
.
          MATCH     TODYDATE,EMDYDAT
          GOTO      GETDAY30 IF EQUAL
.
          MOVE      EMDYDAT,KEY8
          CALL      RLEMDY1
          BRANCH    OVRCD,GETDAY00,GETDAY00
          CALL      DEEMDY1
          PACK      KEY8,SP70
          CALL      RSEMDY1
          GOTO      GETDAY10
.
GETDAY20  MOVE      ONE,DYCNT
          MOVE      TODYDATE,EMDYDAT
          MOVE      ONE,EMDYCNT
          MOVE      EMDYDAT,KEY8
          CALL      WREMDY1
          PACK      KEY8,SP70
          CALL      RSEMDY1
          GOTO      GETDAY10
.
GETDAY30  MOVE      EMDYDAT,KEY8
          CALL      RLEMDY1
          BRANCH    OVRCD,GETDAY00,GETDAY00
          MOVE      ZERO,DYCNT
          MOVE      EMDYCNT,DYCNT
          ADD       ONE,EMDYCNT
          CALL      UPEMDY1
          MOVE      EMDYDAT,KEY8
          CALL      UUEMDY1
.
GETDAY99  RETURN
.------------------------------------------------------------
.         Add record to label and form print control file
.------------------------------------------------------------
ADDLP000  MOVE      ZERO,UNIQF5
          PACK      KEY5,Z70
          CALL      RSEMLP1
          CALL      RPEMLP1
          BRANCH    OVRCD,ADDLP100
          MOVE      EMLPUNI,UNIQF5
ADDLP100  ADD       ONE,UNIQF5
          MOVE      URNUMBER,EMLPURN
          MOVE      ADMISSNO,EMLPADM
          MOVE      LBLPRINT,EMLPLPN
          MOVE      FRMPRINT,EMLPFPN
          MOVE      NOLABEL,EMLPCNO
          MOVE      STATNCOD,EMLPSTC
          MOVE      REPORTNO,EMLPREP
          MOVE      LABELTYP,EMLPLTY
          MOVE      PASSCODE,EMLPPSC
.
          MOVE      UNIQF5,KEY5
          MOVE      UNIQF5,EMLPUNI
          CALL      RAEMLP1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WREMLP1
            TRAPCLR   IO
            BRANCH    OVRCD,ADDLP100
          ENDIF  
.
          MOVE      "Printing Complete",WEBTITLE
.
ADDLP999  RETURN
.
.------------------------------------------------------------
. Add record to label and form print control file using
. EMVIURNO and EMVIADMN
.------------------------------------------------------------
TADLP000  MOVE      ZERO,UNIQF5
          PACK      KEY5,Z70
          CALL      RSEMLP1
          CALL      RPEMLP1
          BRANCH    OVRCD,TADLP100
          MOVE      EMLPUNI,UNIQF5
TADLP100  ADD       ONE,UNIQF5
          MOVE      EMVIURNO,EMLPURN
          MOVE      EMVIADMN,EMLPADM
          MOVE      LBLPRINT,EMLPLPN
          MOVE      FRMPRINT,EMLPFPN
          MOVE      NOLABEL,EMLPCNO
          MOVE      STATNCOD,EMLPSTC
          MOVE      REPORTNO,EMLPREP
          MOVE      LABELTYP,EMLPLTY
          MOVE      PASSCODE,EMLPPSC
.
          MOVE      UNIQF5,KEY5
          MOVE      UNIQF5,EMLPUNI
          CALL      RAEMLP1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WREMLP1
            TRAPCLR   IO
            BRANCH    OVRCD,TADLP100
          ENDIF
.
          MOVE      "Printing Complete",WEBTITLE
.
TADLP999  RETURN
.------------------------------------------------------------
.         UPMSX000  Update master file extension vars
.------------------------------------------------------------
UPMSX000  MATCH     Z70,PTMSX001
          IF        !@EQUAL
            MOVE      PTMSX001,PTMXRDAT
          ENDIF
.
          MATCH     Z70,PTMSX002
          IF        !@EQUAL
            MOVE      PTMSX002,PTMXMEAL
          ENDIF
.
          MATCH     Z70,PTMSX003
          IF        !@EQUAL
            MOVE      PTMSX003,PTMXLGA
          ENDIF
.
          MATCH     Z70,PTMSX004
          IF        !@EQUAL
            MOVE      PTMSX004,PTMXLS
          ENDIF
.
          MATCH     Z70,PTMSX005
          IF        !@EQUAL
            MOVE      PTMSX005,PTMXLSDT
          ENDIF
.
          MATCH     Z70,PTMSX006
          IF        !@EQUAL
            MOVE      PTMSX006,PTMXFHMD
          ENDIF
.
          MATCH     Z70,PTMSX007
          IF        !@EQUAL
            MOVE      PTMSX007,PTMXMHU1
          ENDIF
.
          MATCH     Z70,PTMSX008
          IF        !@EQUAL
            MOVE      PTMSX008,PTMXMHU2
          ENDIF
.
          MATCH     Z70,PTMSX009
          IF        !@EQUAL
            MOVE      PTMSX009,PTMXMHU3
          ENDIF
.
          MATCH     Z70,PTMSX010
          IF        !@EQUAL
            MOVE      PTMSX010,PTMXECNM
          ENDIF
.
          MATCH     Z70,PTMSX011
          IF        !@EQUAL
            MOVE      PTMSX011,PTMXECA1
          ENDIF
.
          MATCH     Z70,PTMSX012
          IF        !@EQUAL
            MOVE      PTMSX012,PTMXECA2
          ENDIF
.
          MATCH     Z70,PTMSX013
          IF        !@EQUAL
            MOVE      PTMSX013,PTMXECA3
          ENDIF
.
          MATCH     Z70,PTMSX014
          IF        !@EQUAL
            MOVE      PTMSX014,PTMXECA4
          ENDIF
.
          MATCH     Z70,PTMSX015
          IF        !@EQUAL
            MOVE      PTMSX015,PTMXECPC
          ENDIF
.
          MATCH     Z70,PTMSX016
          IF        !@EQUAL
            MOVE      PTMSX016,PTMXECPP
          ENDIF
.
          MATCH     Z70,PTMSX017
          IF        !@EQUAL
            MOVE      PTMSX017,PTMXECBP
          ENDIF
.
          MATCH     Z70,PTMSX018
          IF        !@EQUAL
            MOVE      PTMSX018,PTMXECRE
          ENDIF
.
          MATCH     Z70,PTMSX019
          IF        !@EQUAL
            MOVE      PTMSX019,PTMXNRNM
          ENDIF
.
          MATCH     Z70,PTMSX020
          IF        !@EQUAL
            MOVE      PTMSX020,PTMXNRA1
          ENDIF
.
          MATCH     Z70,PTMSX021
          IF        !@EQUAL
            MOVE      PTMSX021,PTMXNRA2
          ENDIF
.
          MATCH     Z70,PTMSX022
          IF        !@EQUAL
            MOVE      PTMSX022,PTMXNRA3
          ENDIF
.
          MATCH     Z70,PTMSX023
          IF        !@EQUAL
            MOVE      PTMSX023,PTMXNRA4
          ENDIF
.
          MATCH     Z70,PTMSX024
          IF        !@EQUAL
            MOVE      PTMSX024,PTMXNRPC
          ENDIF
.
          MATCH     Z70,PTMSX025
          IF        !@EQUAL
            MOVE      PTMSX025,PTMXNRPP
          ENDIF
.
          MATCH     Z70,PTMSX026
          IF        !@EQUAL
            MOVE      PTMSX026,PTMXNRBP
          ENDIF
.
          MATCH     Z70,PTMSX027
          IF        !@EQUAL
            MOVE      PTMSX027,PTMXNRRE
          ENDIF
.
          MATCH     Z70,PTMSX028
          IF        !@EQUAL
            MOVE      PTMSX028,PTMX3BEX
          ENDIF
.
          MATCH     Z70,PTMSX029
          IF        !@EQUAL
            MOVE      PTMSX029,PTMXCARD
          ENDIF
.
          MATCH     Z70,PTMSX030
          IF        !@EQUAL
            MOVE      PTMSX030,PTMXCEXP
          ENDIF
.
          MATCH     Z70,PTMSX031
          IF        !@EQUAL
            MOVE      PTMSX031,PTMXCXMP
          ENDIF
.
          MATCH     Z70,PTMSX032
          IF        !@EQUAL
            MOVE      PTMSX032,PTMXFMLY
          ENDIF
.
          MATCH     Z70,PTMSX033
          IF        !@EQUAL
            MOVE      PTMSX033,PTMXCHNM
          ENDIF
.
          MATCH     Z70,PTMSX034
          IF        !@EQUAL
            MOVE      PTMSX034,PTMXDOFR
          ENDIF
.
          MATCH     Z70,PTMSX035
          IF        !@EQUAL
            MOVE      PTMSX035,PTMXREGP
          ENDIF
.
          MATCH     Z70,PTMSX036
          IF        !@EQUAL
            MOVE      PTMSX036,PTMXGPPC
          ENDIF
.
          MATCH     Z70,PTMSX037
          IF        !@EQUAL
            MOVE      PTMSX037,PTMXSPID
          ENDIF
.
          MATCH     Z70,PTMSX038
          IF        !@EQUAL
            MOVE      PTMSX038,PTMXGPPT
          ENDIF
.
          MATCH     Z70,PTMSX039
          IF        !@EQUAL
            MOVE      PTMSX039,PTMXOSDT
          ENDIF
.
          MATCH     Z70,PTMSX040
          IF        !@EQUAL
            MOVE      PTMSX040,PTMXOPER
          ENDIF
.
          MATCH     Z70,PTMSX041
          IF        !@EQUAL
            MOVE      PTMSX041,PTMXUKDO
          ENDIF
.
          MATCH     Z70,PTMSX042
          IF        !@EQUAL
            MOVE      PTMSX042,PTMXCELL
          ENDIF
.
          MATCH     Z70,PTMSX043
          IF        !@EQUAL
            MOVE      PTMSX043,PTMXADD1
          ENDIF
.
          MATCH     Z70,PTMSX044
          IF        !@EQUAL
            MOVE      PTMSX044,PTMXADD2
          ENDIF
.
          MATCH     Z70,PTMSX045
          IF        !@EQUAL
            MOVE      PTMSX045,PTMXADD3
          ENDIF
.
          MATCH     Z70,PTMSX046
          IF        !@EQUAL
            MOVE      PTMSX046,PTMXADD4
          ENDIF
.
          MATCH     Z70,PTMSX047
          IF        !@EQUAL
            MOVE      PTMSX047,PTMXPOST
          ENDIF
.
          MATCH     Z70,PTMSX048
          IF        !@EQUAL
.           SQUEEZE   PTMSX048                 * D CAR 42744
.           MOVE      ZERO,FORM2
.           MOVE      PTMSX048,FORM2
.           MOVE      FORM2,PTMXMCCD           * end D CAR 42744
            MOVE      PTMSX048,PTMXMCCD        * I CAR 42744
          ENDIF
.
          MATCH     Z70,PTMSX049
          IF        !@EQUAL
            MOVE      PTMSX049,PTMXDEAF
          ENDIF
.
          MATCH     Z70,PTMSX050
          IF        !@EQUAL
            MOVE      PTMSX050,PTMXOSMS
          ENDIF
.
          MATCH     Z70,PTMSX051
          IF        !@EQUAL
            MOVE      PTMSX051,PTMXESPF
          ENDIF
.
UPMSX999  RETURN
.------------------------------------------------------------
.   Set Parameters for Master Extension Details
.------------------------------------------------------------
SPMSX000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          BRANCH    F3,SPMSX010,SPMSX020,SPMSX030,SPMSX040,SPMSX050:
                       SPMSX060,SPMSX070,SPMSX080,SPMSX090,SPMSX100:
                       SPMSX110,SPMSX120,SPMSX130,SPMSX140,SPMSX150:
                       SPMSX160,SPMSX170,SPMSX180,SPMSX190,SPMSX200:
                       SPMSX210,SPMSX220,SPMSX230,SPMSX240,SPMSX250:
                       SPMSX260,SPMSX270,SPMSX280,SPMSX290,SPMSX300:
                       SPMSX310,SPMSX320,SPMSX330,SPMSX340,SPMSX350:
                       SPMSX360,SPMSX370,SPMSX380,SPMSX390,SPMSX400:
                       SPMSX410,SPMSX420,SPMSX430,SPMSX440,SPMSX450:
                       SPMSX460,SPMSX470,SPMSX480,SPMSX490,SPMSX500:
                       SPMSX510
.
SPMSX010  UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
          CALL      SETMTH00            * Set CMON from MTHNAM3
          PACK      PTMSX001,CCENT,CYEAR,CMON,CDAY
          GOTO      SPMSX900
SPMSX020  MOVE      QRYDATA,PTMSX002
          GOTO      SPMSX900
SPMSX030  MOVE      QRYDATA,PTMSX003
          GOTO      SPMSX900
SPMSX040  MOVE      QRYDATA,PTMSX004
          GOTO      SPMSX900
SPMSX050  UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
          CALL      SETMTH00            * Set CMON from MTHNAM3
          PACK      PTMSX005,CCENT,CYEAR,CMON,CDAY
          GOTO      SPMSX900
SPMSX060  MOVE      QRYDATA,PTMSX006
          GOTO      SPMSX900
SPMSX070  MOVE      QRYDATA,PTMSX007
          GOTO      SPMSX900
SPMSX080  MOVE      QRYDATA,PTMSX008
          GOTO      SPMSX900
SPMSX090  MOVE      QRYDATA,PTMSX009
          GOTO      SPMSX900
SPMSX100  MOVE      QRYDATA,PTMSX010
          GOTO      SPMSX900
SPMSX110  MOVE      QRYDATA,PTMSX011
          GOTO      SPMSX900
SPMSX120  MOVE      QRYDATA,PTMSX012
          GOTO      SPMSX900
SPMSX130  MOVE      QRYDATA,PTMSX013
          GOTO      SPMSX900
SPMSX140  MOVE      QRYDATA,PTMSX014
          GOTO      SPMSX900
SPMSX150  MOVE      QRYDATA,PTMSX015
          GOTO      SPMSX900
SPMSX160  MOVE      QRYDATA,PTMSX016
          GOTO      SPMSX900
SPMSX170  MOVE      QRYDATA,PTMSX017
          GOTO      SPMSX900
SPMSX180  MOVE      QRYDATA,PTMSX018
          GOTO      SPMSX900
SPMSX190  MOVE      QRYDATA,PTMSX019
          GOTO      SPMSX900
SPMSX200  MOVE      QRYDATA,PTMSX020
          GOTO      SPMSX900
SPMSX210  MOVE      QRYDATA,PTMSX021
          GOTO      SPMSX900
SPMSX220  MOVE      QRYDATA,PTMSX022
          GOTO      SPMSX900
SPMSX230  MOVE      QRYDATA,PTMSX023
          GOTO      SPMSX900
SPMSX240  MOVE      QRYDATA,PTMSX024
          GOTO      SPMSX900
SPMSX250  MOVE      QRYDATA,PTMSX025
          GOTO      SPMSX900
SPMSX260  MOVE      QRYDATA,PTMSX026
          GOTO      SPMSX900
SPMSX270  MOVE      QRYDATA,PTMSX027
          GOTO      SPMSX900
SPMSX280  UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
          CALL      SETMTH00            * Set CMON from MTHNAM3
          PACK      PTMSX028,CCENT,CYEAR,CMON,CDAY
          GOTO      SPMSX900
SPMSX290  MOVE      QRYDATA,PTMSX029
          GOTO      SPMSX900
SPMSX300  UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
          CALL      SETMTH00            * Set CMON from MTHNAM3
          PACK      PTMSX030,CCENT,CYEAR,CMON,CDAY
          GOTO      SPMSX900
SPMSX310  MOVE      QRYDATA,PTMSX031
          GOTO      SPMSX900
SPMSX320  MOVE      QRYDATA,PTMSX032
          GOTO      SPMSX900
SPMSX330  MOVE      QRYDATA,PTMSX033
          GOTO      SPMSX900
SPMSX340  MOVE      QRYDATA,PTMSX034
          GOTO      SPMSX900
SPMSX350  MOVE      QRYDATA,PTMSX035
          GOTO      SPMSX900
SPMSX360  MOVE      QRYDATA,PTMSX036
          GOTO      SPMSX900
SPMSX370  MOVE      QRYDATA,PTMSX037
          GOTO      SPMSX900
SPMSX380  MOVE      QRYDATA,PTMSX038
          GOTO      SPMSX900
SPMSX390  UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
          CALL      SETMTH00            * Set CMON from MTHNAM3
          PACK      PTMSX039,CCENT,CYEAR,CMON,CDAY
          GOTO      SPMSX900
SPMSX400  MOVE      QRYDATA,PTMSX040
          GOTO      SPMSX900
SPMSX410  MOVE      QRYDATA,PTMSX041
          GOTO      SPMSX900
SPMSX420  MOVE      QRYDATA,PTMSX042
          GOTO      SPMSX900
SPMSX430  MOVE      QRYDATA,PTMSX043
          GOTO      SPMSX900
SPMSX440  MOVE      QRYDATA,PTMSX044
          GOTO      SPMSX900
SPMSX450  MOVE      QRYDATA,PTMSX045
          GOTO      SPMSX900
SPMSX460  MOVE      QRYDATA,PTMSX046
          GOTO      SPMSX900
SPMSX470  MOVE      QRYDATA,PTMSX047
          GOTO      SPMSX900
SPMSX480  MOVE      QRYDATA,PTMSX048
          GOTO      SPMSX900
SPMSX490  MOVE      QRYDATA,PTMSX049
          GOTO      SPMSX900
SPMSX500  MOVE      QRYDATA,PTMSX050
          GOTO      SPMSX900
SPMSX510  MOVE      QRYDATA,PTMSX051
          GOTO      SPMSX900
.
SPMSX900  MOVE      ONE,MASUPDFL
.
SPMSX999  RETURN
.------------------------------------------------------------
.------------------------------------------------------------
UPCLV000  COMPARE   ONE,CLMUPDFL
          GOTO      UPCLV999 IF NOT EQUAL
.
          MATCH     Z70,PTCLM001
          IF        !@EQUAL
            MOVE      PTCLM001,WCENAME
          ENDIF
.
          MATCH     Z70,PTCLM002
          IF        !@EQUAL
            MOVE      PTCLM002,WCEADD1
          ENDIF
.
          MATCH     Z70,PTCLM003
          IF        !@EQUAL
            MOVE      PTCLM003,WCEADD2
          ENDIF
.
          MATCH     Z70,PTCLM004
          IF        !@EQUAL
            MOVE      PTCLM004,WCEADD3
          ENDIF
          MATCH     Z70,PTCLM005
          IF        !@EQUAL
            MOVE      PTCLM005,WCEPOST
          ENDIF
.
          MATCH     Z70,PTCLM006
          IF        !@EQUAL
            MOVE      PTCLM006,WCETELE
          ENDIF
.
          MATCH     Z70,PTCLM007
          IF        !@EQUAL
            MOVE      PTCLM007,WCACDAT
          ENDIF
.
          MATCH     Z70,PTCLM008
          IF        !@EQUAL
            MOVE      PTCLM008,WCACCPT
          ENDIF
.
          MATCH     Z70,PTCLM009
          IF        !@EQUAL
            MOVE      PTCLM009,WCICODE
          ENDIF
.
          MATCH     Z70,PTCLM010
          IF        !@EQUAL
            MOVE      PTCLM010,WCCLMNO
          ENDIF
.
          MATCH     Z70,PTCLM011
          IF        !@EQUAL
            MOVE      PTCLM011,VCLMNO
          ENDIF
.
          MATCH     Z70,PTCLM012
          IF        !@EQUAL
            MOVE      PTCLM012,MREFNO
          ENDIF
.
          MATCH     Z70,PTCLM013
          IF        !@EQUAL
            MOVE      PTCLM013,MACDAT
          ENDIF
.
          MATCH     Z70,PTCLM014
          IF        !@EQUAL
            MOVE      PTCLM014,MPOLIC
          ENDIF
.
          MATCH     Z70,PTCLM015
          IF        !@EQUAL
            MOVE      PTCLM015,MCREGO
          ENDIF
.
          MATCH     Z70,PTCLM016
          IF        !@EQUAL
            MOVE      PTCLM016,MOTHDET1
          ENDIF
.
          MATCH     Z70,PTCLM017
          IF        !@EQUAL
            MOVE      PTCLM017,MOTHDET2
          ENDIF
.
          MATCH     Z70,PTCLM018
          IF        !@EQUAL
            MOVE      PTCLM018,MOTHDET3
          ENDIF
.
          MATCH     Z70,PTCLM019
          IF        !@EQUAL
            MOVE      PTCLM019,MMDTRANS
          ENDIF
.
          COMPARE   ZERO,PTCLM020
          IF        !@EQUAL
            MOVE      PTCLM020,MDPINDIC
          ENDIF
.
          MATCH     Z70,PTCLM021
          IF        !@EQUAL
            MOVE      PTCLM021,MENGAGED
          ENDIF
.
          MATCH     Z70,PTCLM022
          IF        !@EQUAL
            MOVE      PTCLM022,MPINJURE
          ENDIF
.
          MATCH     Z70,PTCLM023
          IF        !@EQUAL
            MOVE      PTCLM023,MMECHSEV
          ENDIF
.
          MATCH     Z70,PTCLM024
          IF        !@EQUAL
            MOVE      PTCLM024,MREGNSEV
          ENDIF
.
          MATCH     Z70,PTCLM025
          IF        !@EQUAL
            MOVE      PTCLM025,MSNAME
          ENDIF
.
          MATCH     Z70,PTCLM026
          IF        !@EQUAL
            MOVE      PTCLM026,MSTELE
          ENDIF
.
          MATCH     Z70,PTCLM027
          IF        !@EQUAL
            MOVE      PTCLM027,MACLOC
          ENDIF
.
          MATCH     Z70,PTCLM028
          IF        !@EQUAL
            MOVE      PTCLM028,WCEADD4
          ENDIF
.
          MATCH     Z70,PTCLM029
          IF        !@EQUAL
            MOVE      PTCLM029,PTWMTACF
          ELSE
            MOVE      ZERO,PTWMTACF
          ENDIF
.
          MATCH     Z70,PTCLM030
          IF        !@EQUAL
            MOVE      PTCLM030,PTWMTYPE
          ENDIF
.
          MATCH     Z70,PTCLM031
          IF        !@EQUAL
            MOVE      PTCLM031,PMWXCINJ
          ENDIF
.
          MATCH     Z70,PTCLM032
          IF        !@EQUAL
            MOVE      PTCLM032,PMWXALOC
          ENDIF
.
          MATCH     Z70,PTCLM033
          IF        !@EQUAL
            MOVE      PTCLM033,PMWXICOD
          ENDIF
.
          MATCH     Z70,PTCLM034
          IF        !@EQUAL
            MOVE      PTCLM034,PMWXCNAM
          ENDIF
.
          MATCH     Z70,PTCLM035
          IF        !@EQUAL
            MOVE      PTCLM035,PMWXACCF
          ENDIF
.
          MATCH     Z70,PTCLM036
          IF        !@EQUAL
            MOVE      PTCLM036,PMWXPLIN
          ENDIF
.
          MATCH     Z70,PTCLM037
          IF        !@EQUAL
            MOVE      PTCLM037,PMWXACTI
          ENDIF
.
          MATCH     Z70,PTCLM038
          IF        !@EQUAL
            MOVE      PTCLM038,PMWXADTE
          ENDIF
.
          MATCH     Z70,PTCLM083
          IF        !@EQUAL
            MOVE      PTCLM083,PMWXECOD
          ENDIF
.
          MOVE      ADMISSNO,PMWXVISN              * Visit No.
          MOVE      EMVIURNO,PTWMURNO              * Urnumber 
          MOVE      EMVIURNO,PTWCURNO              * Urnumber 
          PACK      PMWXCDTE,CCC,CYY,CMM,CDD       * Current Date
          MOVE      PMWXCDTE,PMWXLUPD              * Last Updated Date
          REP       " 0",PMWXLUPD          
          MOVE      PMWXCTIM,PMWXLUPT              * Last Updated Time
          REP       " 0",PMWXCDTE
          MOVE      CTIMEIS,PMWXCTIM               * Current Time
          MOVE      USERID,PMWXWEBC                * Current WebID
.
UPCLV999  RETURN
.------------------------------------------------------------
.   Set Parameters for Claim Details
.------------------------------------------------------------
SPCLM000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          BRANCH    F3,SPCLM010,SPCLM020,SPCLM030,SPCLM040,SPCLM050:
                       SPCLM060,SPCLM070,SPCLM080,SPCLM090,SPCLM100:
                       SPCLM110,SPCLM120,SPCLM130,SPCLM140,SPCLM150:
                       SPCLM160,SPCLM170,SPCLM180,SPCLM190,SPCLM200:
                       SPCLM210,SPCLM220,SPCLM230,SPCLM240,SPCLM250:
                       SPCLM260,SPCLM270,SPCLM280,SPCLM290,SPCLM300:
                       SPCLM310,SPCLM320,SPCLM330,SPCLM340,SPCLM350:
                       SPCLM360,SPCLM370,SPCLM380,SPCLM008,SPCLM008:
.
                       SPCLM008,SPCLM008,SPCLM008,SPCLM008,SPCLM008:
                       SPCLM008,SPCLM008,SPCLM008,SPCLM008,SPCLM008:
                       SPCLM008,SPCLM008,SPCLM008,SPCLM008,SPCLM008:
                       SPCLM008,SPCLM008,SPCLM008,SPCLM008,SPCLM008:
                       SPCLM008,SPCLM008,SPCLM008,SPCLM008,SPCLM008:
                       SPCLM008,SPCLM008,SPCLM008,SPCLM008,SPCLM008:
                       SPCLM008,SPCLM008,SPCLM008,SPCLM008,SPCLM008:
                       SPCLM008,SPCLM008,SPCLM008,SPCLM008,SPCLM008:
                       SPCLM008,SPCLM008,SPCLM830
.
SPCLM008  MOVE      ONE,EXIT
          GOTO      SPCLM999

SPCLM010  MOVE      QRYDATA,PTCLM001
          GOTO      SPCLM900
SPCLM020  MOVE      QRYDATA,PTCLM002
          GOTO      SPCLM900
SPCLM030  MOVE      QRYDATA,PTCLM003
          GOTO      SPCLM900
SPCLM040  MOVE      QRYDATA,PTCLM004
          GOTO      SPCLM900
SPCLM050  MOVE      QRYDATA,PTCLM005
          GOTO      SPCLM900
SPCLM060  MOVE      QRYDATA,PTCLM006
          GOTO      SPCLM900
SPCLM070  MATCH     SP70,QRYDATA
          IF        @EQUAL | @EOS
            PACK      PTCLM007,SP70
            GOTO      SPCLM900
          ENDIF
          UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
          CALL      SETMTH00                *Set CMON from MTHNAM3
          PACK      PTCLM007,CCENT,CYEAR,CMON,CDAY
          GOTO      SPCLM900
SPCLM080  MOVE      QRYDATA,PTCLM008
          GOTO      SPCLM900
SPCLM090  MOVE      QRYDATA,PTCLM009
          GOTO      SPCLM900
SPCLM100  MOVE      QRYDATA,PTCLM010
          GOTO      SPCLM900
SPCLM110  MOVE      QRYDATA,PTCLM011
          GOTO      SPCLM900
SPCLM120  MOVE      QRYDATA,PTCLM012
          GOTO      SPCLM900
SPCLM130  MATCH     SP70,QRYDATA
          IF        @EQUAL | @EOS
            PACK      PTCLM013,SP70
            GOTO      SPCLM900
          ENDIF
          UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
          CALL      SETMTH00                *Set CMON from MTHNAM3
          PACK      PTCLM013,CCENT,CYEAR,CMON,CDAY
          GOTO      SPCLM900
SPCLM140  MOVE      QRYDATA,PTCLM014
          GOTO      SPCLM900
SPCLM150  MOVE      QRYDATA,PTCLM015
          GOTO      SPCLM900
SPCLM160  MOVE      QRYDATA,PTCLM016
          GOTO      SPCLM900
SPCLM170  MOVE      QRYDATA,PTCLM017
          GOTO      SPCLM900
SPCLM180  MOVE      QRYDATA,PTCLM018
          GOTO      SPCLM900
SPCLM190  MOVE      QRYDATA,PTCLM019
          GOTO      SPCLM900
SPCLM200  MOVE      QRYDATA,PTCLM020
          GOTO      SPCLM900
SPCLM210  MOVE      QRYDATA,PTCLM021
          GOTO      SPCLM900
SPCLM220  MOVE      QRYDATA,PTCLM022
          GOTO      SPCLM900
SPCLM230  MOVE      QRYDATA,PTCLM023
          GOTO      SPCLM900
SPCLM240  MOVE      QRYDATA,PTCLM024
          GOTO      SPCLM900
SPCLM250  MOVE      QRYDATA,PTCLM025
          GOTO      SPCLM900
SPCLM260  MOVE      QRYDATA,PTCLM026
          GOTO      SPCLM900
SPCLM270  MOVE      QRYDATA,PTCLM027
          GOTO      SPCLM900
SPCLM280  MOVE      QRYDATA,PTCLM028
          GOTO      SPCLM900
SPCLM290  MOVE      QRYDATA,PTCLM029
          GOTO      SPCLM900
SPCLM300  MOVE      QRYDATA,PTCLM030
          GOTO      SPCLM900
SPCLM310  MOVE      QRYDATA,PTCLM031
          GOTO      SPCLM900
SPCLM320  MOVE      QRYDATA,PTCLM032
          GOTO      SPCLM900
SPCLM330  MOVE      QRYDATA,PTCLM033
          GOTO      SPCLM900
SPCLM340  MOVE      QRYDATA,PTCLM034
          GOTO      SPCLM900
SPCLM350  MOVE      QRYDATA,PTCLM035
          GOTO      SPCLM900
SPCLM360  MOVE      QRYDATA,PTCLM036
          GOTO      SPCLM900
SPCLM370  MOVE      QRYDATA,PTCLM037
          GOTO      SPCLM900
SPCLM380  MATCH     SP70,QRYDATA
          IF        @EQUAL | @EOS
            PACK      PTCLM038,SP70
            GOTO      SPCLM900
          ENDIF
          UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
          CALL      SETMTH00                *Set CMON from MTHNAM3
          PACK      PTCLM038,CCENT,CYEAR,CMON,CDAY
          GOTO      SPCLM900
.
SPCLM830  PACK      PTCLM083,QRYDATA,SP70
          GOTO      SPCLM900
.
SPCLM900  MOVE      ONE,CLMUPDFL
.
SPCLM999  RETURN
.------------------------------------------------------------
.         Update claim details
.------------------------------------------------------------
UPCLMD00  MOVE      ZERO,EXIT
          MATCH     "1",PTCNXCOM
          GOTO      UPCLMD04 IF NOT EQUAL * Not Using Extra Compensable table
.
          PACK      KEY5,ANSC,ANSL,EMVICOMP,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     "P",TCINDC1
            GOTO      UPCLMD90 IF EQUAL   * Public
          ENDIF
.
.         The following claim details are from Extra Compensable table
.
          MATCH     "A",CLAIMTYP          * Australian Defence Force
          GOTO      UPCLMD40 IF EQUAL
          MATCH     "O",CLAIMTYP          * Other Compensable
          GOTO      UPCLMD40 IF EQUAL
          MATCH     "F",CLAIMTYP          * Foreign Defence
          GOTO      UPCLMD40 IF EQUAL
          MATCH     "H",CLAIMTYP          * Private
          GOTO      UPCLMD40 IF EQUAL
          MATCH     "S",CLAIMTYP          * Shipping
          GOTO      UPCLMD40 IF EQUAL
.
          MATCH     "X",CLAIMTYP          * WA - Motor Vehicle
          GOTO      UPCLMD40 IF EQUAL
          MATCH     "Y",CLAIMTYP          * WA - Veterans Affairs
          GOTO      UPCLMD40 IF EQUAL
          MATCH     "Z",CLAIMTYP          * WA - Workers Comp.
          GOTO      UPCLMD40 IF EQUAL
          MATCH     "E",CLAIMTYP
          GOTO      UPCLMD40 IF EQUAL       * Overseas student
          MATCH     "G",CLAIMTYP
          GOTO      UPCLMD40 IF EQUAL       * Overseas visitor
.
          GOTO      UPCLMD06
.
UPCLMD04  MATCH     "W",CLAIMTYP                 * Work Cover
          GOTO      UPCLMD10 IF EQUAL
.
          MATCH     "M",CLAIMTYP                 * TAC
          GOTO      UPCLMD20 IF EQUAL
.
          MATCH     "V",CLAIMTYP                 * Vet
          GOTO      UPCLMD30 IF EQUAL
.
          MATCH     "D",CLAIMTYP                 * Defence Force
          GOTO      UPCLMD40 IF EQUAL
.
UPCLMD06  CALL      CHKF0000                     * Check for folder update
.
          CALL      DOCLMN00
.
          MATCH     SP70,TYPCLAIM
          IF        @EQUAL
            MATCH     "TRIAG",UPDTTYPE
            IF        @EQUAL
              CALL      FPRA0000                 * Update PRFA if not
            ENDIF                                * compensable and you are 
.                                                * saving registration details
            MATCH     "REGIS",UPDTTYPE
            IF        @EQUAL
              CALL      FPRA0000                 * Update PRFA if not
            ENDIF         
          ENDIF                          
. 
          GOTO      UPCLMD99
.
UPCLMD10  MOVE      ADMISSNO,KEY8                * Work Cover
          CALL      RDWCOM1
          IF        OVRCD=1
            CALL      UPCLV000
            CALL      VALCLM00
            BRANCH    EXIT,UPCLMD99
            MOVE      ADMISSNO,KEY8
            CALL      WRWCOM1
.         
.           If we are sending ACC details in PV1-20, then we need to
.           trigger an A08 message for the visit to reflect that this is
.           now an ACC patient
.
            MATCH     "1",PTCNH7AC               
            IF        @EQUAL 
              CALL      PMIGTNID               * get national id for dgate write
              MOVE      NMPNUMB,PTNINMPI         
              MOVE      TEN8,HL7TRGID
              MOVE      SP8,HL7INCLD
              PROC      DGCLICEC                 * send update emr details
            ENDIF
.
            MOVE      THREE,FOLDERTY             * Set default to Work Cover
            CALL      UPFOLD00                   * Update PMI folder details
          ELSE
            CALL      UPCLV000
            CALL      VALCLM00
            BRANCH    EXIT,UPCLMD99
            CALL      UPWCOM1
.         
.           If we are sending ACC details in PV1-20, then we need to
.           trigger an A08 message for the visit to reflect that this is
.           now an ACC patient
.
            MATCH     "1",PTCNH7AC               
            IF        @EQUAL 
              CALL      PMIGTNID               * get national id for dgate write
              MOVE      NMPNUMB,PTNINMPI         
              MOVE      TEN9,HL7TRGID
              MOVE      SP8,HL7INCLD
              PROC      DGCLICEC                 * send update emr details
            ENDIF
.
            MOVE      THREE,FOLDERTY             * Set default to Work Cover
            CALL      UPFOLD00                   * Update PMI folder details
          ENDIF
.
          MOVE      ADMISSNO,KEY8
          CALL      RDPMWX11
          IF        OVRCD=1
            CALL      UPCLV000
            MOVE      ADMISSNO,KEY8
            CALL      WRPMWX11
          ELSE
            CALL      UPCLV000
            CALL      UPPMWX11
          ENDIF
.
          CALL      DOCLMN00
          CALL      FPRA0000
.
          GOTO      UPCLMD99                * kcn
.
UPCLMD20  MOVE      ADMISSNO,KEY8
          CALL      RDWMAB1
          IF        OVRCD=1
            CALL      UPCLV000
.
            CALL      VALCLM00
            BRANCH    EXIT,UPCLMD99
.
            MOVE      ADMISSNO,KEY8
            CALL      WRWMAB1
.
            MOVE      TWO,FOLDERTY               * Set default to TAC
            CALL      UPFOLD00                   * Update PMI folder details
          ELSE
            CALL      UPCLV000
.
            CALL      VALCLM00
            BRANCH    EXIT,UPCLMD99
.
            CALL      UPWMAB1
.
            MOVE      TWO,FOLDERTY               * Set default to TAC
            CALL      UPFOLD00                   * Update PMI folder details
          ENDIF
.
          CALL      DOCLMN00
          CALL      FPRA0000

          GOTO      UPCLMD99
.
UPCLMD30  MOVE      ADMISSNO,KEY8
          CALL      RDWVET1
          IF        OVRCD=1
            CALL      UPCLV000
            CALL      VALCLM00
            BRANCH    EXIT,UPCLMD99
            MOVE      ADMISSNO,KEY8
            CALL      WRWVET1
            MOVE      VCLMNO,PREPAT         * Write DVA number back to PMI
            MOVE      ONE,FOLDERTY               * Set default to DVA
            CALL      UPFOLD00                   * Update PMI folder details
          ELSE
            CALL      UPCLV000
            CALL      VALCLM00
            BRANCH    EXIT,UPCLMD99
            CALL      UPWVET1
            MOVE      VCLMNO,PREPAT         * Write DVA number back to PMI
            MOVE      ONE,FOLDERTY               * Set default to DVA
            CALL      UPFOLD00                   * Update PMI folder details
          ENDIF
.
          CALL      DOCLMN00
          CALL      FPRA0000
          GOTO      UPCLMD99
.
UPCLMD40  PACK      KEY11,EMVIADMN,EMVICOMP,SP70
          CALL      RDPMEXT1
          IF        OVRCD=1
            CALL      CLPMSEXT
            CALL      MVPMEX00
            CALL      SCHA0000                    * Free format school Address
.
            PACK      PMEXCDAT,CCC,CYY,CMM,CDD
            REP       " 0",PMEXCDAT
            CLOCK     TIME,PMEXCTIM
            MOVE      USERID,PMEXCUID
.
            PACK      KEY11,EMVIADMN,EMVICOMP,SP70
            CALL      WRPMEXT1
          ELSE
            CALL      MVPMEX00
            CALL      SCHA0000                    * Free format school Address
.
            PACK      PMEXUDAT,CCC,CYY,CMM,CDD
            REP       " 0",PMEXUDAT
            CLOCK     TIME,PMEXUTIM
            MOVE      USERID,PMEXUUID
.
            CALL      UPPMEXT1
          ENDIF
.
          MATCH     "1",PTCNXCOM
          IF        !@EQUAL
            CALL      DOCLMN00
            CALL      FPRA0000
            GOTO      UPCLMD99
          ENDIF
.
          MATCH     "H",CLAIMTYP
          IF        @EQUAL
            CALL      STAD0000         * Update health fund details
          ENDIF
.
          MATCH     "E",CLAIMTYP
          GOTO      UPCLMD60 IF EQUAL
          MATCH     "G",CLAIMTYP
          GOTO      UPCLMD80 IF NOT EQUAL
.
UPCLMD60  CALL      UCTL0000           * Update Local addrss to pmscex(Contact)
          CALL      UMST0000           * Update overseas address to patma1af
.
UPCLMD80  MATCH     SP70,UPDATPMI
          IF        !@EQUAL
            CALL      URES0000         * Update pmi residency from extra compen.
          ENDIF
.
UPCLMD90  CALL      FPRA0000
          CALL      CIND0000           * Check prefix for Deceased patient

          GOTO      UPCLMD99
.
UPCLMD99  RETURN
.
.------------------------------------------------------------
.         Fix up free format school address
.------------------------------------------------------------
SCHA0000  MATCH     "E",CLAIMTYP
          GOTO      SCHA9999 IF NOT EQUAL
          MATCH     Z70,PMEXT143
          IF        @EQUAL
            MOVE      SP70,PMEXSCHL
          ENDIF
          MATCH     Z70,PMEXT078
          IF        @EQUAL
            UNPACK    SP70,PMEXCAD1,PMEXCAD2
            UNPACK    SP70,PMEXCAD3,PMEXCAD4
            UNPACK    SP70,PMEXCPCD,PMEXCNAM
            UNPACK    SP70,PMEXECON,PMEXCPHN
          ENDIF
SCHA9999  RETURN
+
.**********************************************************************
.         Set visit fields for Private
.**********************************************************************
STAD0000  MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1
          BRANCH    OVRCD,STAD9999
.
          MOVE      URNUMBER,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,STAD9999
.
          MOVE      ONE,OVRCD
          MATCH     Z70,EMVIS017
          IF        !@EQUAL
            MOVE      EMVIS017,EMVIFUND        * health fund
            PACK      EMVIFUND,EMVIFUND,SP70
            PACK      PFUNDH,EMVIFUND,SP70
            MOVE      ZERO,OVRCD
          ENDIF
          MATCH     Z70,EMVIS018
          IF        !@EQUAL
            MOVE      EMVIS018,EMVITABL        * health fund table
            PACK      EMVITABL,EMVITABL,SP70
            PACK      PFNDTB,EMVITABL,SP70
            MOVE      ZERO,OVRCD
          ENDIF
          MATCH     Z70,EMVIS124
          IF        !@EQUAL
            MOVE      EMVIS124,EMVIHFMN        * health fund membership
            PACK      EMVIHFMN,EMVIHFMN,SP70
            MOVE      EMVIS124,PFNDMM
            PACK      PFNDMM,PFNDMM,SP70
            MOVE      ZERO,OVRCD
          ENDIF
          BRANCH    OVRCD,STAD2000
          CALL      UPEMVIS1
          CALL      UPMAST1
.
.         Check if Contributor name is changed
.
STAD2000  MOVE      ADMISSNO,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,STAD9999
.
          MOVE      ONE,OVRCD
          MATCH     EMVIS124,Z70
          IF        !@EQUAL
            MOVE      EMVIS124,PMVXFNDM        * health fund membership
            PACK      PMVXFNDM,PMVXFNDM,SP70
            MOVE      ZERO,OVRCD
          ENDIF
.
          MATCH     PMSVX142,Z70
          IF        !@EQUAL
            MOVE      PMSVX142,PMVXCONM        * Contributor name
            PACK      PMVXCONM,PMVXCONM,SP70
            MOVE      ZERO,OVRCD
          ENDIF
          BRANCH    OVRCD,STAD9999
          CALL      UPPMVX11
.
          MATCH     PMSVX142,Z70
          IF        !@EQUAL
            MOVE      URNUMBER,KEY8
            CALL      RDPMPX21
            IF        OVRCD=0
              MOVE      PMSVX142,PMPXHFCN        * Contributor name
              PACK      PMPXHFCN,PMPXHFCN,SP70
              CALL      UPPMPX21
            ENDIF
          ENDIF
.
STAD9999  RETURN
+
.-------------------------------------------------------------------------------
.         Update Contact details for Local address
.-------------------------------------------------------------------------------
UCTL0000  MOVE      "7",KEY1                * Local address
          CALL      CNTY0000                * Get contact type for Local
.
          MOVE      URNUMBER,PMCEX001
          MOVE      ACODE,PMCEX002
          PACK      PMCEX004,PTITL,SP70
          PACK      PMCEX005,PTMASNAM,SP70
          PACK      PMCEX006,PMPXFNAM,SP70
          PACK      PMCEX019,PMPXSNAM,SP70
.
          OPEN      PMSCEXA1,"pmscexaf"
.
          PACK      KEY14,PMCEX001,PMCEX002,SP70
          CALL      RSPMCEX1
UCTL1000  CALL      RKPMCEX1
          BRANCH    OVRCD,UCTL4000
.
          MATCH     PMCEX001,PMCEURNO
          GOTO      UCTL4000 IF NOT EQUAL
.
          MATCH     PMCEX002,PMCETYPE
          GOTO      UCTL4000 IF NOT EQUAL
.
          MATCH     "1",PMCEACTV          * Skip if inactive
          GOTO      UCTL1000 IF EQUAL
.
          MOVE      PMCECNTR,PMCEX003
.
          MOVE      TWO,AUDTTYPE                 * write before audit record
          CALL      WAPMCE00
.
          CALL      MVPMCE00              * Move cgi to file vars
          PACK      PMCEUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMCEUDAT
          CLOCK     TIME,PMCEUTIM
          MOVE      USERID,PMCEUUID
          CALL      UPPMCEX1              * Update record
.
          MOVE      THREE,AUDTTYPE               * write after audit record
          CALL      WAPMCE00
.
          GOTO      UCTL6000
.
UCTL4000  CALL      CONC0000              * Calculate contact counter
. 
          CALL      CLPMSCEX              * Clear extra contact details
.
          CALL      MVPMCE00              * Move cgi to file vars
          PACK      PMCECDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMCECDAT
          CLOCK     TIME,PMCECTIM
          MOVE      USERID,PMCECUID
.
          CALL      CONU0000              * Get contact webPAS unique id
.
          PACK      KEY14,PMCEX001,PMCEX002,PMCEX003,SP70
          CALL      WRPMCEX1              * Write record
.
          MOVE      ONE,AUDTTYPE            * write add audit record
          CALL      WAPMCE00
.
.         If we are using the new contacts table (pmscexaf), then
.         trigger a PMI update message so that the latest contact details
.         will be sent in a broadcast message.
.
UCTL6000  MATCH     "1",PTCNNEWC            * using new contacts ?
          GOTO      UCTL9999 IF NOT EQUAL   * no
.
          CALL      PMIGTNID                * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TWENTY5,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICUP                * send HL7 message
.
UCTL9999  RETURN
+
.-----------------------------------------------------------------
.     Get the first Contact type code for a particular indicator
.-----------------------------------------------------------------
CNTY0000  MOVE      ONE,EXIT
          MOVE      "tc",KEY2
          PACK      KEY5,KEY2,SP70
          CALL      RDSCODE1
CNTY1000  CALL      RDKCODE1
          BRANCH    OVRCD,CNTY9999
          MATCH     KEY2,TCODE
          GOTO      CNTY9999 IF NOT EQUAL
          MATCH     "A",PTCOACTV
          GOTO      CNTY1000 IF NOT EQUAL      * Not active
.
          MATCH     KEY1,TCINDC1
          GOTO      CNTY1000 IF NOT EQUAL      * Indicator for Local address
          MOVE      ZERO,EXIT
CNTY9999  RETURN
+
.-------------------------------------------------------------------------------
.         Update (pmi)residency from extra compensable
.-------------------------------------------------------------------------------
URES0000  PACK      KEY8,URNUMBER,SP70
          CALL      RDPMRES1
          IF        OVRCD=1
            CALL      CLPMSRES
            PACK      PMRSURNO,URNUMBER,SP70
            PACK      PMRSCDAT,CCC,CYY,CMM,CDD
            REP       " 0",PMRSCDAT
            CLOCK     TIME,PMRSCTIM
            MOVE      USERID,PMRSCUID
            CALL      WRPMRES1
            CALL      RDPMRES1
          ENDIF
.
          PACK      KEY5,ANST,SP1,PTYPE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,URES9999
          MATCH     "S",TCINDC3
          GOTO      URES1000 IF EQUAL            * Overseas student
          MATCH     "O",TCINDC3
          GOTO      URES2000 IF EQUAL            * Overseas visitor
          GOTO      URES9999
.
.         Updating overseas student from visit to pmi details
.
URES1000  MOVE      PMEXIDNO,PMRSSTDN            * Student id
          MOVE      PMEXSCHL,PMRSSCHL            * Name of School
          MOVE      PMEXOMEM,PMRSINFM            * Insurance/Fund Membership no
          GOTO      URES8000
.
.         Updating overseas visitor from visit to pmi details
.
URES2000  MOVE      PMEXSBIL,PMRSSBIL            * send bill to local address
          MOVE      PMEXVTYP,PMRSVTYP            * visa type
          MOVE      PMEXECON,PMRSECON            * employer name
.
          MOVE      PMEXTINS,PMRSTINS            * travel insurance
          MOVE      PMEXIPOL,PMRSIPOL            * travel insurance policy no
.
URES8000  MOVE      PMEXICOD,PMRSINCD            * Insurance code
          MOVE      PMEXIEDT,PMRSINEX            * Insurance Expiry date
          MOVE      PMEXPASN,PMRSPNUM            * Passport no
          MOVE      PMEXPASC,PMRSPCOU            * Passport country
          MOVE      PMEXVEXP,PMRSVEXP            * Visa expiry date
.
          MOVE      PMEXCAD1,PMRSCAD1            * Address
          MOVE      PMEXCAD2,PMRSCAD2
          MOVE      PMEXCAD3,PMRSCAD3
          MOVE      PMEXCAD4,PMRSCAD4
          MOVE      PMEXCPCD,PMRSCPCD
          MOVE      PMEXUCM1,PMRSUCM1            * Comments
          MOVE      PMEXUCM2,PMRSUCM2
          MOVE      PMEXUCM3,PMRSUCM3
.
          PACK      PMRSUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMRSUDAT
          CLOCK     TIME,PMRSUTIM
          MOVE      USERID,PMRSUUID
          CALL      UPPMRES1
.
          GOTO      URES9999
.
URES9999  RETURN
+
.-------------------------------------------------------------------------------
.         Update Overseas address to master file
.-------------------------------------------------------------------------------
UMST0000  PACK      KEY8,URNUMBER
          CALL      RDMAST1
          BRANCH    OVRCD,UMST9999
.
          MOVE      ONE,F1
          MATCH     PTMAS008,Z70
          IF        !@EQUAL
            MOVE      PTMAS008,PADD1
            MOVE      ZERO,F1
          ENDIF
          MATCH     PTMAS009,Z70
          IF        !@EQUAL
            MOVE      PTMAS009,PADD2
            MOVE      ZERO,F1
          ENDIF
          MATCH     PTMAS010,Z70
          IF        !@EQUAL
            MOVE      PTMAS010,PSUBRB
          ENDIF
          MATCH     PTMAS085,Z70
          IF        !@EQUAL
            MOVE      PTMAS085,PADD4
          ENDIF
          MATCH     PTMAS011,Z70
          IF        !@EQUAL
            MOVE      PTMAS011,PPOST
          ENDIF
          BRANCH    F1,UMST9999
          CALL      UPMAST1
.
UMST9999  RETURN
+
.-----------------------------------------------------------------------------
. CHKF0000 - If the claim code is not TAC,WORK,VET and the claim code Ind. 1
.            is "1" (OVERSEAS/INELIGIBLE). If it is then, update the pmi folder
.-----------------------------------------------------------------------------
CHKF0000  PACK      KEY5,ANSC,ANSL,EMVICOMP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CHKF9999
.
          PACK      KEY5,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
.
....      SCAN      "1",KEY5                                          *D-205505
          MATCH     "1",TCINDC1             * Ind.1 O'seas/Incompens. *I-205505
          IF        @EQUAL
            MOVE      SIX,FOLDERTY
            CALL      UPFOLD00
          ENDIF
.
CHKF9999  RETURN
.
.------------------------------------------------------------
. Validate accident dates
.------------------------------------------------------------
VALCLM00  MOVE      ZERO,EXIT
          CALL      IBACLOCK
.
          MATCH     "W",CLAIMTYP
          GOTO      VALCLM10 IF EQUAL
.
          MATCH     "M",CLAIMTYP
          GOTO      VALCLM20 IF EQUAL
.
          MATCH     "M",CLAIMTYP
          GOTO      VALCLM30 IF EQUAL
.
          GOTO      VALCLM99
.
VALCLM10  PACK      WCACDAT,WCACDAT,SP70
          MATCH     SP70,WCACDAT
          GOTO      VALCLM99 IF EQUAL
.
          REP       " 0",WCACDAT
          MOVE      WCACDAT,CHKDAT
.
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
          MOVE      TODAY,FTODAY
.
          COMPARE   CHKDAT,FTODAY
          GOTO      VALCLM91 IF LESS
.
          GOTO      VALCLM99
.
VALCLM20  PACK      MACDAT,MACDAT,SP70
          MATCH     SP70,MACDAT
          GOTO      VALCLM99 IF EQUAL
.
          REP       " 0",MACDAT
          MOVE      MACDAT,CHKDAT
          GOTO      VALCLM50
.
VALCLM30  PACK      PMEXADAT,PMEXADAT,SP70
          MATCH     SP70,PMEXADAT
          GOTO      VALCLM99 IF EQUAL
.
          REP       " 0",PMEXADAT
          MOVE      PMEXADAT,CHKDAT
          GOTO      VALCLM50
.
VALCLM50  MATCH     "19010101",MACDAT
          GOTO      VALCLM80 IF EQUAL
.
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
          MOVE      TODAY,FTODAY
.
          COMPARE   CHKDAT,FTODAY
          GOTO      VALCLM90 IF LESS
.
          MATCH     SP8,EMVIURNO                 * u/r number blank?
          GOTO      VALCLM60 IF EQUAL
.
          MATCH     ZEROUR,EMVIURNO              * u/r number zero?
          GOTO      VALCLM60 IF EQUAL
.
          GOTO      VALCLM70
.
VALCLM60  MATCH     SP70,EMUNBDAT
          GOTO      VALCLM93 IF EQUAL
.
          MATCH     EMUNBDAT,MACDAT
          GOTO      VALCLM91 IF LESS
.
          GOTO      VALCLM80
.
VALCLM70  MATCH     PBDATE,MACDAT
          GOTO      VALCLM91 IF LESS
          GOTO      VALCLM80
.
VALCLM80  
.... For NSW, there is no format requirement for TAC(MREFNO) number. Therefore,
.... no need to do the following checking on TAC number.
          IF        PTCNHDPS<>3
            GOTO      VALCLM99
          ENDIF
          CALL      CLAIMN00
          BRANCH    ERRFLAG,VALCLM92,VALCLM92
.
          IF        ERRFLAG=3
            CLEAR     WEBTITLE
            APPEND    "Warning: Accident Date is more than 3 years ",WEBTITLE
            APPEND    "before the Claim date.",WEBTITLE
            APPEND    SP70,WEBTITLE
            RESET     WEBTITLE
            ADD       ONE,WARCOUNT
            MOVE      WEBTITLE,WEBWARNG[WARCOUNT]
          ENDIF
.
          GOTO      VALCLM99
.
VALCLM90  MOVE      "Accident date cannot be in the future",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      VALCLM99
.
VALCLM91  MOVE      "Date of Accident cannot be before date of birth",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      VALCLM99
.
VALCLM92  IF        ERRFLAG=1
            CLEAR     WEBTITLE
            APPEND    "Claim number must be 7 digits.",WEBTITLE
            APPEND    SP70,WEBTITLE
            RESET     WEBTITLE
          ELSE
            CLEAR     WEBTITLE
            APPEND    "Date of Accident must not be > 20",WEBTITLE
            APPEND    " years before Claim or Invalid",WEBTITLE
            APPEND    " Accident Date.",WEBTITLE
            APPEND    SP70,WEBTITLE
            RESET     WEBTITLE
          ENDIF
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      VALCLM99
.
VALCLM93  CLEAR     WEBTITLE
          APPEND    "Zero U/R date of birth blank - Cannot add",WEBTITLE
          APPEND    " TAC Details",WEBTITLE
          APPEND    SP70,WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      VALCLM99
.
VALCLM99  RETURN
+
.-----------------------------------------------------------------------------
. CLAIMN00   : Check claim number
.              If claim number is not blank, then must be in format YYNNNNN
.              where YY is year of the accident date and NNNNN is numeric or
.              C-U if the claim number is unknown
.
.  Error/Reject  - if the accident date is more than 20 years b/f claim date
.                - if claim number is not numeric
.  Warning - if the accident date is more than 3 years b/f claim date
.-----------------------------------------------------------------------------
CLAIMN00  MOVE      ZERO,ERRFLAG
          UNPACK    MACDAT,XCENT,XYEAR,XMON,XDAY
          ENDSET    MREFNO
          APPEND    SP70,MREFNO
          RESET     MREFNO
.
          MATCH     SP8,MREFNO
          IF        @EQUAL
            MOVE      "C-U     ",MREFNO
          ENDIF
.
          MATCH     "C-U     ",MREFNO
          IF        !@EQUAL
            UNPACK    SP70,KEY2,KEY5,KEY20
            UNPACK    MREFNO,KEY2,KEY5,KEY20
            MATCH     "19010101",MACDAT
            IF        !@EQUAL
              MATCH     SP20,KEY20
              GOTO      CLAIMN10 IF NOT EQUAL
              CALL      CYER0000           * Check year of Acc.date/TAC no
            ENDIF
.
            TYPE      KEY5
            GOTO      CLAIMN10 IF NOT EQUAL
          ENDIF
          GOTO      CLAIMN99
.
CLAIMN10  MOVE      ONE,ERRFLAG             * must be 5 digits
CLAIMN99  RETURN
+
.------------------------------------------------------------
. CYER0000  : Check TAC year against TAC number
.------------------------------------------------------------
CYER0000
.         Work out the financial year of claim using fist two digit of TAC no
.
          MOVE      ZERO,FORM2
          MOVE      KEY2,FORM2         * First two digit of TAC claim no
          IF        FORM2>50
            MOVE      "19",CCENT       * if year > 50, make century = 19
          ELSE
            MOVE      "20",CCENT       * if year < 50, make century = 20
          ENDIF
          PACK      KEY4A,CCENT,KEY2
          REP       " 0",KEY4A          * Financial year of claim
.
.         Get the financial year of the accident date
.
          UNPACK    MACDAT,XCENT,XYEAR,XMON,XDAY   * Accident date
          MOVE      ZERO,FORM2
          MOVE      XMON,FORM2
          IF        FORM2>=7
            PACK      KEY4,XCENT,XYEAR
          ELSE
            PACK      DIM4,XCENT,XYEAR
            REP       " 0",DIM4
            MOVE      ZERO,FORM4
            MOVE      DIM4,FORM4
            SUB       ONE,FORM4
            MOVE      FORM4,KEY4      * Financial year of accident date
          ENDIF
.
.         Get the number of years difference b/w financial year of
.         accident date and claim (ie the first two digits of TAC claim no)
.
          MOVE      ZERO,FORM4
          MOVE      ZERO,FORM4A
.
          MOVE      KEY4,FORM4         * year from Accident date
          MOVE      KEY4A,FORM4A       * financial year from TAC Claim no
          SUB       FORM4,FORM4A
          IF        FORM4A<0
            MOVE      TWO,ERRFLAG      * Reject accident date must be b/f claim
          ENDIF
.
.         Reject if date difference b/w accident date and claim date is more
.         than 20 years, Warning if more than 3 years.
.
          IF        FORM4A>20
            MOVE      TWO,ERRFLAG          * Reject
            GOTO      CYER9999
          ENDIF
.
          IF        FORM4A>3
            MOVE      THREE,ERRFLAG      * Warning
          ENDIF
CYER9999  RETURN
.------------------------------------------------------------
. Validate Procedures/Diagnoses
.------------------------------------------------------------
VICD0000  MOVE      ZERO,EXIT                 * I CAR 47219
          COMPARE   TWO,PRDGFLAG              * 0=Both 1=Diagnosis 2=Procedure
          GOTO      VICD1500 IF EQUAL
.
          PACK      KEY14,ADMISSNO,TYPE5,SP70
          CALL      RSEMVCD1
VICD1000  CALL      RKEMVCD1
          BRANCH    OVRCD,VICD9900
.
          MATCH     ADMISSNO,EMVCVIST
          GOTO      VICD9900 IF NOT EQUAL
.
          MATCH     TYPE5,EMVCTYPE          * Emergency diagnosis ?
          GOTO      VICD9900 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU
          GOTO      VICD1000 IF NOT EQUAL
.
          BRANCH    PRDGFLAG,VICD9999        * only checking for diagnosis
.
VICD1500  PACK      KEY14,ADMISSNO,TYPE4,SP70
          CALL      RSEMVCD1
VICD2000  CALL      RKEMVCD1
          BRANCH    OVRCD,VICD9900
.
          MATCH     ADMISSNO,EMVCVIST
          GOTO      VICD9900 IF NOT EQUAL
.
          MATCH     TYPE4,EMVCTYPE
          GOTO      VICD9900 IF NOT EQUAL
.
          MOVE      ZERO,EXIT                        * Coding Complete
          GOTO      VICD9999
.
VICD9900  MOVE      ONE,EXIT 
.
VICD9999  RETURN
.----------------------------------------------------------------------
. ASSURN00 : We have an associated U/R number. 
.            Now find the correct U/R number.
. Taken from PATCOMN1
.----------------------------------------------------------------------
ASSURN00  MOVE      PPSNAME,CPPURNO     * This is where the new U/R is hidden
          MOVE      PURNO,SMERGURN
.
.         We have to check this new U/R number, just in case it is also
.         associated to another U/R number. eg. A->B->C->D->...->H
.
          MOVE      CPPURNO,KEY8        * Key for new U/R number
          CALL      RDMAST1             * Read in the new PMI record
          BRANCH    OVRCD,ASSURN80      * New U/R number missing
          BRANCH    PSTAT,ASSURN00      * Another associated U/R number
.
.         We have the correct U/R number
.
..          KEYIN     *P1:24,*EL,*B:
..                    "This U/R is merged with ",*V2LON,*DV,PURNO,*HOFF:
..                    ". Hit ",*V2LON,"<ENTER>",*HOFF," to continue, or #"":
..                    *V2LON,"A",*HOFF:
..                    "#" to abort : ",*V2LON,ANS,*P1:24,*EL;
..          CMATCH    ANSA,ANS            * Check for the abort condition
..          GOTO      ASSURN95 IF EQUAL   * Yes. Try another U/R number
.
          MOVE      ZERO,EXIT
          GOTO      ASSURN99            * Return the U/R
.
.         Error in the data files. Tell the user, and ask for another U/R
.
ASSURN80  CLEAR     WEBTITLE
          APPEND    "Error: U/R merged with ",WEBTITLE
          APPEND    CPPURNO,WEBTITLE
          APPEND    " which is missing.",WEBTITLE
          CALL      WEBERR00
ASSURN95  MOVE      ONE,EXIT
ASSURN99  RETURN
.------------------------------------------------------------
. Validate the U/R - from routine KURN
.------------------------------------------------------------
VALUR000  MOVE      ZERO,EXIT
          MOVE      URNUMBER,PURNO          * Move to the master file variable
.
          MOVE      PURNO,KEY8
          CALL      RDMAST1                 * Validate U/R number against PMI
          COMPARE   ZERO,OVRCD
          GOTO      VALUR030 IF EQUAL       * Valid UR so Continue
.
          MOVE      ZERO,OVRCD
          COMPARE   ZERO,PTCNNMPI
          PROC      VALURNMP IF NOT EQUAL   * check if on patnmpaf
          BRANCH    OVRCD,VALUR990,VALUR990
.
. Check if this is an associated U/R number
.-------------------------------------------
VALUR030  COMPARE   ONE,PSTAT               * Is this an associated U/R number ?
          GOTO      VALUR999 IF NOT EQUAL   * No
.
          CALL      ASSURN00                * Yes, Get Associated UR Details
          BRANCH    EXIT,VALUR999           * Abort Selected
          GOTO      VALUR995
.
VALUR990  CLEAR     WEBTITLE
          APPEND    "Invalid U/R Number - ",WEBTITLE
          APPEND    URNUMBER,WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      VALUR999
.
VALUR995  MOVE      ONE,MRGEFLAG
          MOVE      PURNO,URNUMBER
          MOVE      ZERO,EXIT
          GOTO      VALUR999
.
VALUR999  RETURN
.------------------------------------------------------------
. Alert that this is a merged U/R
.------------------------------------------------------------
MRGALT00  MATCH     SP70,URNUMBER
          GOTO      MRGALT99 IF EQUAL
.
          MATCH     SP70,SMERGURN
          GOTO      MRGALT99 IF EQUAL
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             " alert('U/R Number ",SMERGURN," is merged with ":
                             URNUMBER,".\nUsing ",URNUMBER,".');":
                             "}":
                             "</script>"
          GOTO      MRGALT99
.
MRGALT99  RETURN
.------------------------------------------------------------------------
.                             CHKINJ00
. Check for blank injury data and default Nature of Injury and Body 
. region to values matching the Prim Diag.
.                *** INPUT CGI VARIABLES
.  EMVCD002 : Coding Type 
.------------------------------------------------------------------------
CHKINJ00  MOVE      ADMISSNO,KEY8       * Read Emergency Visit File
          CALL      RDEMVIS1
          BRANCH    OVRCD,CHKINJ99
.
          PACK      EMVIREGN,EMVIREGN,SP70 * Check if Body Region is empty
          MATCH     SP70,EMVIREGN
          GOTO      CHKINJ99 IF NOT EQUAL  * If set exit   
.
          MOVE      " 43     ",KEY8        * Get Nature of Injury              
          CALL      LDFLD000
          BRANCH    EXIT,CHKINJ99
.
          PACK      NATMNINJ,NATMNINJ,SP70 * Check if Nature of Injuy is empty
          MATCH     SP70,NATMNINJ
          GOTO      CHKINJ99 IF NOT EQUAL  * If set exit   
.
.   Read Emergency Visit Coding Table for a Primary Diagnosis Code(EMVCMNCD)
.
          MOVE      "000",KEY3       * Priority
          MOVE      "005",CODETYP    * Coding Type (EMR Diagnosis)
          PACK      KEY17,EMVIADMN,CODETYP,KEY3,SP70
          CALL      RSEMVCD2
          CALL      RKEMVCD2
          BRANCH    OVRCD,CHKINJ99      * No Primary Diagnosis exit?
.
.          CALL      LOKCOD00            * Get Description of Injury
.          MOVE      CODEDESC,EMVITXT1   * Set Description
.
.   Now check Injury Survalence Matrix based on Primary Diagnosis Code(EMVCMNCD)
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          BRANCH    OVRCD,CHKINJ99
.
          PACK      KEY10,EMIC9COD,SP70    
          CALL      RSEMMX3
CHKINJ10  CALL      RKEMMX3
          BRANCH    OVRCD,CHKINJ99
          MATCH     EMIC9COD,EMMXPDG
          GOTO      CHKINJ99 IF NOT EQUAL
.
          MOVE      EMMXBRG,EMVIREGN    * Set Body Region 
          CALL      GETMCD00
          BRANCH    EXIT,CHKINJ10
.
CHKINJ99  RETURN
.------------------------------------------------------------
. Get Nature Code
.------------------------------------------------------------
GETMCD00  MOVE      "ex",KEY2
          PACK      KEY5,KEY2,SP70
          CALL      RDSCODE1
GETMCD10  CALL      RDKCODE1
          BRANCH    OVRCD,GETMCD90
          MATCH     "ex",TCODE
          GOTO      GETMCD90 IF NOT EQUAL
          MATCH     EMMXNAT,THCSCOD
          GOTO      GETMCD10 IF NOT EQUAL
          MOVE      ACODE,EMVINATI    * Set Nature of Main Injury
          MOVE      ZERO,EXIT
          GOTO      GETMCD99 
GETMCD90  MOVE      ONE,EXIT
GETMCD99  RETURN
.------------------------------------------------------------
.         LDFLD000   Load NATMNINJ to check for blank field
.         Requires extract field number in KEY8
.         Returns EXIT and NATMNINJ 
.------------------------------------------------------------
LDFLD000  CALL      RSEMWFM3
          CALL      RKEMWFM3
          BRANCH    OVRCD,LDFLD900     * field not set up for extract
.
          MATCH     KEY8,EMWFEXF
          GOTO      LDFLD900 IF NOT EQUAL
.
          MOVE      ZERO,F3
          MOVE      EMWFFLD,F3
          IF        F3<TWENTY6 | F3>FIFTY5
            GOTO      LDFLD900
          ENDIF
          LOAD      FLDNO,F3,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 10
                             ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS: 20
                             ANS,ANS,ANS,ANS,ANS:
                             ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT:
                             NINE,TEN,TEN1,TEN2,TEN3,TEN4,TEN5,TEN6:
                             TEN7,TEN8,TEN9,TWENTY,TWENTY1,TWENTY2,TWENTY3:
                             TWENTY4,TWENTY5,TWENTY6,TWENTY7,TWENTY8,TWENTY9:
                             THIRTY
.
          MOVE      ZERO,F2
          MOVE      FLDNO,F2
          LOAD      NATMNINJ,F2,EMVIUC01,EMVIUC02,EMVIUC03,EMVIUC04,EMVIUC05:
                                EMVIUC06,EMVIUC07,EMVIUC08,EMVIUC09,EMVIUC10:
                                EMVIUC11,EMVIUC12,EMVIUC13,EMVIUC14,EMVIUC15:
                                EMVIUC16,EMVIUC17,EMVIUC18,EMVIUC19,EMVIUC20:
                                EMVIUC21,EMVIUC22,EMVIUC23,EMVIUC24,EMVIUC25:
                                EMVIUC26,EMVIUC27,EMVIUC28,EMVIUC29,EMVIUC30
.
          MOVE      ZERO,EXIT
          GOTO      LDFLD999
.
LDFLD900  MOVE      "Extract field number not setup correctly.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LDFLD999
.
LDFLD999  RETURN
.------------------------------------------------------------
. Check Triage Date and Time is not before arrival date and time
.------------------------------------------------------------
CHKTRD00  PACK      TRIGDATE,EMVIS128,EMVIS129
          MATCH     Z70,TRIGDATE
          GOTO      CHKTRD90 IF EQUAL
          REP       ": ",TRIGDATE
          SQUEEZE   TRIGDATE
          PACK      ARIVDATE,EMVIS001,EMVIS002
          MATCH     Z70,ARIVDATE
          GOTO      CHKTRD90 IF EQUAL
          REP       ": ",ARIVDATE
          SQUEEZE   ARIVDATE
.
          MATCH     ARIVDATE,TRIGDATE
          GOTO      CHKTRD80 IF LESS
          GOTO      CHKTRD90
.
CHKTRD80  CLEAR     WEBTITLE
          APPEND    "Triage Date/Time can not be before ",WEBTITLE
          APPEND    "Arrival Date/Time ",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          CALL      UUPTMAS1
          CALL      ULEMVIS1                     * unlock emr visit record
          GOTO      CHKTRD95
.
CHKTRD90  MOVE      ZERO,EXIT
          GOTO      CHKTRD99
.
CHKTRD95  MOVE      ONE,EXIT
CHKTRD99  RETURN
.------------------------------------------------------------
.        Update Patient Location
.------------------------------------------------------------
PATLOC00  CALL      XMLHED00
          BRANCH    EXIT,PATLOC99
.
          BRANCH    REGSFLAG,PATLOC10
          MOVE      SP70,EMVIS118
          MOVE      LOCACODE,EMVIS006
.
          PACK      KEY3,EMVIS006,SP70
          CALL      RDEMLOC1
          BRANCH    OVRCD,PATLOC93
.
          MATCH     "1",EMLOACTV
          GOTO      PATLOC94 IF EQUAL
.
          CALL      VALLOC00
          BRANCH    EXIT,PATLOC92
.
PATLOC10  PACK      KEY8,ADMISSNO,SP70
          CALL      RLEMVIS1
          BRANCH    OVRCD,PATLOC90,PATLOC91
.
          MOVE      LOCACODE,NEWLOCAT
          CALL      RETL0000                   * Retain patient prev location
.
          MOVE      LOCACODE,EMVILOCN
          CALL      UPEMVIS1
.
.         Broadcast update message
.
          MOVE      EMVIURNO,KEY8              * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,PATLOC70
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,PATLOC70
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,PATLOC70
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TWENTY,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                   * send update emr details
.
PATLOC70  PACK      KEY18,USERID,PRGID,SP70
          CALL      RDWBST1
          IF        OVRCD=1
            MOVE      USERID,WBSTUID    * WBSTUID used in WRTHIS00
            MOVE      SP70,WBSTPRG
            MOVE      ZERO,WBSTLEV
          ENDIF
.
          MOVE      "MOVEL",UPDTTYPE
          CALL      WRTHIS00
          PROC      EMRDRCHR                 * Update Visit Billing Complete
          CALL      WEDV0000                     * EDWARD visit alteration
.
          CALL      ULEMVIS1                     * Unlock emr visit record
.
          CALL      AUTS0000           * Add/Update Telehealth Services record
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Location Updated":
                             "</RETURN_VALUE>"
          GOTO      PATLOC98
.
PATLOC90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      PATLOC98
.
PATLOC91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      PATLOC98
.
PATLOC92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Room is occupied unable to move patient there!":
                             "</RETURN_VALUE>"
          GOTO      PATLOC98
.
PATLOC93  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Emergency Location record not found.":
                             "</RETURN_VALUE>"
          GOTO      PATLOC98
.
PATLOC94  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Emergency Location is inactive.":
                             "</RETURN_VALUE>" 
          GOTO      PATLOC98
.
PATLOC98  CALL      XMLEND00
PATLOC99  RETURN
.------------------------------------------------------------
.        Update Doctor Seen     
.-----------------------------------------------------------
DOSEEN00  CALL      XMLHED00
          BRANCH    EXIT,DOSEEN99
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RLEMVIS1
          BRANCH    OVRCD,DOSEEN90,DOSEEN91
.
          MATCH     Z70,EMVIS007
          IF        !@EQUAL
            MOVE      EMVIS007,EMVIDOCT
          ENDIF
.
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MOVE      KEY8,EMVIDRDT                * System date
          CLOCK     TIME,EMVIDRTM                * System Time
          CALL      UPEMVIS1
          IF        CCCNSVHM = 1
            OPEN      CCIEX7A1,"cciex7af"
            CALL      TRNSII00
            CLOSE     CCIEX7A1
          ENDIF
          CALL      ULEMVIS1                     * Unlock emr visit record
.
.         Broadcast update message
.
          MOVE      EMVIURNO,KEY8              * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,DOSEEN70
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,DOSEEN70
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,DOSEEN70
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TWENTY1,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                     * send update emr details
.
DOSEEN70  MOVE      SP70,EMVIS007
          MOVE      SP70,ADMISSNO
          CALL      WEDV0000                     * EDWARD visit alteration
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Doctor Seen Updated":
                             "</RETURN_VALUE>"
          GOTO      DOSEEN98
.
DOSEEN90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      DOSEEN98
.
DOSEEN91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      DOSEEN98
.
DOSEEN98  CALL      XMLEND00
DOSEEN99  RETURN
.------------------------------------------------------------
.         QJUMP000  Jumping the Queue 
.-----------------------------------------------------------
QJUMP000  CALL      XMLHED00
          PACK      KEY9,ONE,SP70
          CALL      RSEMVIS2
QJUMP010  CALL      RKEMVIS2
          BRANCH    OVRCD,QJUMP098
          COMPARE   ONE,EMVISTAT
          GOTO      QJUMP098 IF NOT EQUAL
          MATCH     EMVISITE,WBSEESC
          GOTO      QJUMP010 IF NOT EQUAL
          MATCH     ADMISSNO,DEMVIADM
          IF        @EQUAL
            MOVE      ONE,EMVIYN08
            GOTO      QJUMP080
          ENDIF
          COMPARE   ZERO,EMVIYN08
          GOTO      QJUMP010 IF EQUAL
          ADD       ONE,EMVIYN08
.
QJUMP080  CALL      UPEMVIS2
          GOTO      QJUMP010
.
QJUMP098  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":                   
                               "</RETURN_VALUE>"
          CALL      XMLEND00
QJUMP099  RETURN
.------------------------------------------------------------
.  Writing the Medical Notes 
.------------------------------------------------------------
ADDMED00  MOVE      ZERO,F6
          MOVE      URNUMBER,OBMDURNO       * UR number
.
          PACK      KEY14,URNUMBER,Z70
          CALL      RSOBMDT1
          CALL      RPOBMDT1                * read back to get last record
          IF        OVRCD=1
            MOVE      ONE,F6
            MOVE      F6,OBMDNOTE           * Note Number
          ELSE
            MATCH     URNUMBER,OBMDURNO
            IF        @EQUAL
              MOVE      OBMDNOTE,F6
              ADD       ONE,F6
              MOVE      F6,OBMDNOTE
            ELSE
              MOVE      ONE,F6
              MOVE      F6,OBMDNOTE         * Note Number
            ENDIF
          ENDIF
.
          PACK      OBMDDATE,CCC,CYY,CMM,CDD
          REP       " 0",OBMDDATE          * Date
          CLOCK     TIME,OBMDTIME
          MOVE      USERID,OBMDUSER        * User
.
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,ADDMED99
.
          MOVE      WBSEOCG,OBMDOCCG        * Occupation Group
          MOVE      "0",OBMDDELT            * Delete Indicator
          MOVE      SP70,OBMDSPAR           * Spare
          MOVE      URNUMBER,OBMDURNO
          MOVE      SP70,OBMDDDAT          * Delete Date
          MOVE      SP70,OBMDDTIM          * Delete Time
          MOVE      SP70,OBMDDUSE          * Delete User
.
          PACK      KEY14,URNUMBER,OBMDNOTE,SP70
          CALL      RDOBMDT1
          IF        OVRCD=1
            CALL      WROBMDT1              * Write Record
          ELSE
            GOTO      ADDMED99
          ENDIF
.

.         now write the medical notes
.
          MOVE      URNUMBER,OBMTURNO
          MOVE      OBMDNOTE,OBMTNOTE
          MOVE      ZERO,F3
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      COMFILAF,COMFILNM
          TRAPCLR   IO
          BRANCH    OVRCD,ADDMED99 
.
ADDMED90  ADD       ONE,F3
          MOVE      F3,OBMTUNIQ
.
          READ      COMFILAF,SEQ;OBMTCMNT
.
          PACK      KEY17,OBMTURNO,OBMTNOTE,OBMTUNIQ,SP70
          CALL      WROBMTX1
          IF        F3>=LASTITEM
            GOTO     ADDMED99
          ENDIF
          GOTO      ADDMED90
.
ADDMED99  RETURN
.------------------------------------------------------------
. Get Comments
.------------------------------------------------------------
GETCOM00  PREP      COMFILAF,COMFILNM
          MOVE      ONE,F3
          WRITE     COMFILAF,SEQ;QRYDATA
.
GETCOM10  READ      CONFFILE,SEQ;QRYNAME,QRYDATA
          GOTO      GETCOM90 IF OVER
          MATCH     SP70,QRYNAME
          GOTO      GETCOM80 IF NOT EQUAL
          ADD       ONE,F3
          WRITE     COMFILAF,SEQ;QRYDATA
          GOTO      GETCOM10
.
GETCOM80  MOVE      ONE,TEXTAREA                 * Flag for Next CGI Parameter
GETCOM90  MOVE      F3,LASTITEM
          OPEN      COMFILAF,COMFILNM
GETCOM99  RETURN
.------------------------------------------------------------
. Check to see if the CCIEX7AF table needs to be written to
.------------------------------------------------------------
TRNSII00  MATCH     EMVIADMN,SVEMADMN
          GOTO      TRNSII80 IF NOT EQUAL
.
          MATCH     EMVIDATE,SVEMDATE
          GOTO      TRNSII80 IF NOT EQUAL
.
          MATCH     EMVIURNO,SVEMURNO
          GOTO      TRNSII80 IF NOT EQUAL
.
          MATCH     EMVITIME,SVEMTIME
          GOTO      TRNSII80 IF NOT EQUAL
.
          MATCH     EMVIUNIT,SVEMUNIT
          GOTO      TRNSII80 IF NOT EQUAL
.
          MATCH     EMVISRCE,SVEMSRCE
          GOTO      TRNSII80 IF NOT EQUAL
.
          MATCH     EMVIDDAT,SVEMDDAT
          GOTO      TRNSII80 IF NOT EQUAL
.
          MATCH     EMVIDTIM,SVEMDTIM
          GOTO      TRNSII80 IF NOT EQUAL
.
          MATCH     EMVICOMP,SVEMCOMP
          GOTO      TRNSII80 IF NOT EQUAL
.
          MATCH     EMVIDOCT,SVEMDOCT
          GOTO      TRNSII80 IF NOT EQUAL
.
          MATCH     EMVIREFD,SVEMREFD
          GOTO      TRNSII80 IF NOT EQUAL
.
.
          GOTO      TRNSII99
.
TRNSII80  IF        EMVISTAT = 2|EMVISTAT = 3  
            MOVE      ANST,CLEXSTAT
            MOVE      ONE,CLEXTYPE
            MOVE      EMVIADMN,CLEXVISN
            PACK      KEY11,CLEXSTAT,CLEXTYPE,CLEXVISN
            CALL      RDCLEX71
            IF        OVRCD =1
              CALL      WRCLEX71
            ENDIF 
          ENDIF
TRNSII99  RETURN
.------------------------------------------------------------
. Save SVHM transition II emr variables
.------------------------------------------------------------
SAVESVHM  MOVE      EMVIADMN,SVEMADMN
          MOVE      EMVIDATE,SVEMDATE
          MOVE      EMVIURNO,SVEMURNO
          MOVE      EMVITIME,SVEMTIME
          MOVE      EMVIUNIT,SVEMUNIT
          MOVE      EMVISRCE,SVEMSRCE
          MOVE      EMVIDDAT,SVEMDDAT
          MOVE      EMVIDTIM,SVEMDTIM
          MOVE      EMVICOMP,SVEMCOMP
          MOVE      EMVIDOCT,SVEMDOCT
          MOVE      EMVIREFD,SVEMREFD
          RETURN
.------------------------------------------------------------
. Clear SVHM transition II save variables
.------------------------------------------------------------
CLSVHM00  MOVE      SP70,SVEMADMN
          MOVE      SP70,SVEMDATE
          MOVE      SP70,SVEMURNO
          MOVE      SP70,SVEMTIME
          MOVE      SP70,SVEMUNIT
          MOVE      SP70,SVEMSRCE
          MOVE      SP70,SVEMDDAT
          MOVE      SP70,SVEMDTIM
          MOVE      SP70,SVEMCOMP
          MOVE      SP70,SVEMDOCT
          MOVE      SP70,SVEMREFD
          MOVE      SP70,SVMABDAT
          MOVE      SP70,SVMASNAM
          MOVE      SP70,SVMAGNAM
          MOVE      SP70,SVMAPOST
          MOVE      SP70,SVMAPSEX
          MOVE      SP70,SVMAMSTA
          MOVE      SP70,SVMAPREG
          MOVE      SP70,SVMASUBB
          MOVE      SP70,SVMACONT
          MOVE      SP70,SVMAMEDI
          MOVE      SP70,SVPXHOML
          MOVE      SP70,SVPXINTR
          MOVE      SP70,SVPXABRG
.
CLSVHM99  RETURN
.------------------------------------------------------------
PATCALF
GHSP0000
PRLN0000
NXTTRAN1
WAAE0000
VISERR    RETURN    * Dummy routine for AAECHRG
.------------------------------------------------------------
.------------------------------------------------------------
. DDTI0000 Change doctor seen date/time
.------------------------------------------------------------
DDTI0000  RESET     UPDTTYPE
          MATCH     SP10,UPDTTYPE
          GOTO      DDTI9999 IF EQUAL
.
          MOVE      ZERO,EXIT
.
          MATCH     "ERROR",UPDTTYPE    * Update seen date and time
          IF       @EQUAL
            CALL     CHGDT000
            BRANCH   EXIT,DDTI9000,DDTI9100,DDTI9200,DDTI9300,DDTI9400:
                          DDTI9500
          ENDIF
.
          GOTO      DDTI9999
.
DDTI9000  MOVE      "Doctor Seen Date/Time before Arrival Date/Time",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DDTI9999
.
DDTI9100  MOVE      "Doctor Seen Date/Time is after Dischage Date/Time",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DDTI9999
.
DDTI9200  MOVE      "Doctor allocated Seen Date/Time are Mandatory",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DDTI9999
.
DDTI9300  MOVE      "No Doctor allocated Seen Date/Time must be blank",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DDTI9999
.
DDTI9400  MOVE      "First Doctor seen is a mandatory field",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DDTI9999
.
DDTI9500  MOVE      "Can't allocate Doctor using supervisor screen",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DDTI9999
.
DDTI9999  CLOSE     COMFILCF,DELETE
          CLOSE     PRECOMAF,DELETE
          RETURN
.-----------------------------------------------------------
. Change doctor seen date and time
.------------------------------------------------------------
CHGDT000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,CHGDT999
.
          PACK      KEY16,EMVIDATE,EMVITIME,SP70
          REP       ":0",KEY16
          PACK      SAVKEY16,DOCTDATE,DOCTTIME,SP70
          REP       ":0",SAVKEY16
.
          MOVE      "05",UPDFIELD
.
          CLEAR     UPDVALUE
          APPEND    EMVIDRDT,UPDVALUE
          APPEND    EMVIDRTM,UPDVALUE
.
          PACK      NEWVALUE,DOCTDATE,DOCTTIME,FRSTDOCT,SP70
.
          MATCH     SP70,EMVIDOCT   * Can't delete a doctor
          IF        !@EQUAL
            MATCH     SP70,FRSTDOCT
            IF        @EQUAL
              MOVE      FIVE,EXIT
              GOTO      CHGDT999
            ENDIF
          ENDIF
.
          MATCH     SP70,EMVIDOCT   * Can't allocate a doctor
          IF        @EQUAL
            MATCH     Z70,FRSTDOCT
            IF        !@EQUAL
              MATCH     SP70,FRSTDOCT
              GOTO      CHGDT050 IF EQUAL
.
              MOVE      SIX,EXIT
              GOTO      CHGDT999
            ENDIF
          ENDIF
.
CHGDT050  MATCH     SP70,SAVKEY16     * Can't allocate date/time if no doctor
          IF        !@EQUAL
            MATCH     SP70,EMVIDOCT
            GOTO      CHGDT100 IF NOT EQUAL
.
            MOVE      FOUR,EXIT
            GOTO      CHGDT999
          ENDIF
.
CHGDT100  MATCH     SP70,SAVKEY16     * Allow clear of date/time if no doctor
          IF        @EQUAL
            MATCH     SP70,EMVIDOCT
            GOTO      CHGDT900 IF EQUAL
.
            MOVE      THREE,EXIT
            GOTO      CHGDT999
          ENDIF
.
          MATCH     "1",EMVITRIG
          IF        @EQUAL
            MATCH     SAVKEY16,KEY16    * check arrival date/time ok to be
            GOTO      CHGDT200 IF EQUAL * equal if triage category 1
          ENDIF
.
          MATCH     SAVKEY16,KEY16    * check arrival date/time
          IF        !@LESS
            MOVE      ONE,EXIT
            GOTO      CHGDT999
          ENDIF
.
CHGDT200  PACK      KEY16,EMVIDDAT,EMVIDTIM,SP70
          MATCH     SP70,KEY16
          GOTO      CHGDT900 IF EQUAL
.
.         We only want to check discharge date/time if status is 'Discharged'
.
          MOVE      DEMVISTA,F1
          IF        F1=2 | F1=3
            REP       ":0",KEY16
	    MATCH     KEY16,SAVKEY16    * check discharge date/time
	    IF        !@LESS
	      MOVE      TWO,EXIT
	      GOTO      CHGDT999
	    ENDIF
	  ENDIF
.
CHGDT900  MOVE      DOCTDATE,EMVIDRDT
          MOVE      DOCTTIME,EMVIDRTM
.
          IF        CALCWAIT=1
            CALL      UPDURT00              * recalculate waiting time for
            MOVE      WAITTIME,EMVIDURN     * update discharge
.
            MOVE      EMVIADMN,KEY8
            CALL      RDDETA1
            IF        OVRCD=0
              MOVE      WAITTIME,ADADURN      * update waiting duration
              CALL      UPDETA1               * update a&e details record
            ENDIF
          ENDIF
.
          MATCH     Z70,FRSTDOCT
          IF        !@EQUAL
            MOVE      FRSTDOCT,EMVIDOCT
          ENDIF
.
          CALL      UPEMVIS1
.
          CALL      DDHIST00          * Change doctor seen date and time
.                                     * in the first history records
          PROC      EMRDRCHR          * Update Visit Billing Complete
.
          APPEND    SAVEFDOC,UPDVALUE * Save old first doctor for date integrity
          RESET     UPDVALUE
.
          CALL      WRCHA000          * Write date integrity audit
          CALL      MHUP0000          * Update MH practitioner seen date/time
.
CHGDT999  RETURN
.
.------------------------------------------------------------
. Change the doctor date and time in the history file
.------------------------------------------------------------
DDHIST00  MATCH     SP70,EMVIDOCT
          GOTO      DDHIST99 IF EQUAL
.
          MATCH     SP70,EMVIDRDT
          GOTO      DDHIST99 IF EQUAL
.
          MATCH     SP70,EMVIDRTM
          GOTO      DDHIST99 IF EQUAL
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
DDHIST10  CALL      RKEMHIS1
          BRANCH    OVRCD,DDHIST99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      DDHIST99 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          IF        @EQUAL
            MOVE      EMHIDOC,SAVEDOCT
            MOVE      EMHIDOC,SAVEFDOC      * Data integrity first doctor seen
            GOTO      DDHIST60
          ENDIF
.
          GOTO      DDHIST10
.
DDHIST50  CALL      RKEMHIS1
          BRANCH    OVRCD,DDHIST90
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      DDHIST90 IF NOT EQUAL
.
          MATCH     SAVEDOCT,EMHIDOC
          GOTO      DDHIST90 IF NOT EQUAL
.
DDHIST60  MOVE      EMVIDRDT,EMHIDSD
          UNPACK    EMVIDRTM,HOUR,D1,MIN,D1,SEC
          PACK      EMHIDST,HOUR,MIN,SEC
.
          MATCH     Z70,FRSTDOCT
          IF        !@EQUAL
            MATCH     FRSTDOCT,EMHIDOC
            IF        !@EQUAL
               MOVE     FRSTDOCT,EMHIDOC    * Update First seen by doctor code
               MOVE     SP70,EMHIDRBC       * Billing Incomplete
               MOVE     "FRDOC",UPDTTYPE    * First Doctor Change for history
            ENDIF
          ENDIF
.
          CALL      UPEMHIS1
.
          GOTO      DDHIST50
.
DDHIST90  MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRTHIS00
            PROC      EMRDRCHR              * Update Visit Billing Complete
          ENDIF
.
DDHIST99  RETURN
.
.------------------------------------------------------------
. Update the mental health practitioner code, seen date and time
.------------------------------------------------------------
MHUP0000  MATCH     SAVEFDOC,EMVIMPRA            * MH practitioner was the 
          GOTO      MHUP9999 IF NOT EQUAL        * old first doctor allocated
.
          PACK      KEY6,FRSTDOCT,SP70
          CALL      RDDOCT1
          BRANCH    OVRCD,MHUP9999
.
          MATCH     SP70,DRTYPE
          GOTO      MHUP9999 IF EQUAL
.
          PACK      KEY5,ANSD,ANST,DRTYPE,SP70   * Read primary specialty
          CALL      RDCODE1
          BRANCH    OVRCD,MHUP9999
.
          MATCH     ANSL,TCINDC1                 * MH practitioner
          GOTO      MHUP9999 IF NOT EQUAL
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RLEMVIS1 
          BRANCH    OVRCD,MHUP9999,MHUP9999
.
          MOVE      FRSTDOCT,EMVIMPRA            * Update MH practitoner
          MOVE      EMVIDRDT,EMVIMPDT            * date and time
          MOVE      EMVIDRTM,EMVIMPTM
.
          CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
.
MHUP9999  RETURN
.-----------------------------------------------------------
. EFRBTY00 - Get the EFR bed type for an emergency admission
.          - 0 = Patient has not been admitted to hospital
.          - 1 = No it is not an emergency ward/bed type
.          - 2 = Yes it is a emergency ward/bed type
.          - 3 = Yes it is a emergency ward/bed type - Short Stay Observation
.------------------------------------------------------------
EFRBTY00  MATCH     SP70,EMVIPADM
          GOTO      EFRBTY90 IF EQUAL
.
          PACK      KEY30,EMVIPADM,Z70
          CALL      RDSTRAN2             * position on the last transfer record
          CALL      RDPTRAN2
          BRANCH    OVRCD,EFRBTY90
.
          MATCH     EMVIPADM,DTADMN
          GOTO      EFRBTY90 IF NOT EQUAL
.
          PACK      KEY5,ANSB,ANST,TRBTYP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,EFRBTY90
.
          MATCH     ANSM,TCINDC11
          GOTO      EFRBTY10 IF EQUAL
.
          MATCH     ANSE,TCINDC11
          IF        @EQUAL
EFRBTY10    MATCH     ANSS,THCSCOD
            IF        @EQUAL
              WRITE     HTMLFILE;THREE;   * Yes it is an emergency ward/bed
            ELSE                          * Short stay observation unit
              WRITE     HTMLFILE;TWO;     * Yes it is an emergency ward/bed
            ENDIF
          ELSE
            WRITE     HTMLFILE;ONE;       * No it is not an emergency ward/bed
          ENDIF
          GOTO      EFRBTY99
.
EFRBTY90  WRITE     HTMLFILE;ZERO;
          GOTO      EFRBTY99
.
EFRBTY99  RETURN
.-----------------------------------------------------------
. EFRADM00 - Check if the admissions transfer file A record was to a
.          - normal ward bed or an emergency ward bed.
.          - 1 = Admitted directly to a normal ward bed. Then the emergency
.                discharge date and time will be the current date and time
.          - 0 = NOT Admitted directly to a normal ward bed
.------------------------------------------------------------
EFRADM00  MATCH     SP70,EMVIPADM
          GOTO      EFRADM90 IF EQUAL
.
          PACK      KEY30,EMVIPADM,SP70
          CALL      RDSTRAN2             * position on the transfer A record
          CALL      RDKTRAN2
          BRANCH    OVRCD,EFRADM90
.
          MATCH     EMVIPADM,DTADMN
          GOTO      EFRADM90 IF NOT EQUAL
.
          MATCH     ANSA,TMOVE
          GOTO      EFRADM90 IF NOT EQUAL
.
          PACK      KEY5,ANSB,ANST,TRBTYP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,EFRADM90
.
          MATCH     ANSM,TCINDC11
          GOTO      EFRADM90 IF EQUAL
.
          MATCH     ANSE,TCINDC11
          IF        @EQUAL
            GOTO      EFRADM90
          ELSE
            WRITE     HTMLFILE;ONE;       * YES they where admitted directly to
          ENDIF                           * a notmal ward/bed
          GOTO      EFRADM99
.
EFRADM90  WRITE     HTMLFILE;ZERO;        * NOT admitted directly to a normal
          GOTO      EFRADM99              * ward/bed
.
EFRADM99  RETURN
.
.-----------------------------------------------------------
. EFRDIS00 - Check if the admission is discharged or not. If
.          - it is use the discharge date/time and the emergency departure
.          - date/time. If it is not discharged use the current date/time as
.          - the emergency departure date/time.
.          - 1 = Inpatient admission is discharged
.          - 0 = Inpatient admission is not discharged
.------------------------------------------------------------
EFRDIS00  MATCH     SP70,EMVIPADM
          GOTO      EFRDIS90 IF EQUAL
.
          PACK      KEY8,EMVIPADM,SP70
          CALL      RDMISS1
          BRANCH    OVRCD,EFRDIS90
.
          PACK      KEY8,EMVIADMN,SP70   * Restore ED visits pmsvx1af record
          CALL      RDPMVX11             * aftre the admission file read
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          COMPARE   THREE,ASTAT          * Discharged
          GOTO      EFRDIS90 IF NOT EQUAL
.
          WRITE     HTMLFILE;ONE;        * Discharged so use discharge date/time
          GOTO      EFRDIS99             * as the emg discharge date/time
.
EFRDIS90  WRITE     HTMLFILE;ZERO;       * Not discharged so use current date
          GOTO      EFRDIS99             * /time for emg discharge date/time
.
EFRDIS99  RETURN
.
.------------------------------------------------------------
. NRTI0000 Change nurse seen date/time
.------------------------------------------------------------
NRTI0000  RESET     UPDTTYPE
          MATCH     SP10,UPDTTYPE
          GOTO      NRTI9999 IF EQUAL
.
          MOVE      ZERO,EXIT
.
          MATCH     "ERROR",UPDTTYPE    * Change formaction
          IF       @EQUAL
            CALL     CHGNR000
            BRANCH   EXIT,NRTI9000,NRTI9100,NRTI9200,NRTI9300,NRTI9400:
                          NRTI9500
          ENDIF
          GOTO      NRTI9999
.
NRTI9000  MOVE      "Nurse Seen Date/Time before Arrival Date/Time",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      NRTI9999
.
NRTI9100  MOVE      "Nurse Seen Date/Time is after Dischage Date/Time",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      NRTI9999
.
NRTI9200  MOVE      "Nurse allocated Seen Date/Time are Mandatory",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      NRTI9999
.
NRTI9300  MOVE      "No Nurse allocated Seen Date/Time must be blank",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      NRTI9999
.
NRTI9400  MOVE      "First Nurse seen is a mandatory field",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DDTI9999
.
NRTI9500  MOVE      "Can't allocate Nurse using supervisor screen",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DDTI9999
.
.
NRTI9999  CLOSE     COMFILCF,DELETE
          CLOSE     PRECOMAF,DELETE
          RETURN
.-----------------------------------------------------------
.         Includes
.------------------------------------------------------------
CHGNR000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,CHGNR999
.
          PACK      KEY16,EMVIDATE,EMVITIME,SP70
          REP       ":0",KEY16
          PACK      SAVKEY16,NURSDATE,NURSTIME,SP70
          REP       ":0",SAVKEY16
.
          MOVE      "04",UPDFIELD
.
          CLEAR     UPDVALUE
          APPEND    EMVINSDT,UPDVALUE
          APPEND    EMVINSTM,UPDVALUE
.
          PACK      NEWVALUE,NURSDATE,NURSTIME,FRSTNURS,SP70
.
          MATCH     SP70,EMVIATNS   * Can't delete a nurse
          IF        !@EQUAL
            MATCH     SP70,FRSTNURS
            IF        @EQUAL
              MOVE      FIVE,EXIT
              GOTO      CHGDT999
            ENDIF
          ENDIF
.
          MATCH     SP70,EMVIATNS   * Can't allocate a nurse
          IF        @EQUAL
            MATCH     Z70,FRSTNURS
            IF        !@EQUAL
              MATCH     SP70,FRSTNURS
              GOTO      CHGDT050 IF EQUAL
.
              MOVE      SIX,EXIT
              GOTO      CHGDT999
            ENDIF
          ENDIF
.
.
CHGNR050  MATCH     SP70,SAVKEY16     * Cant allocate date/time if no nurse
          IF        !@EQUAL
            MATCH     SP70,EMVIATNS
            GOTO      CHGNR100 IF NOT EQUAL
.
            MOVE      FOUR,EXIT
            GOTO      CHGNR999
          ENDIF
.
CHGNR100  MATCH     SP70,SAVKEY16     * Allow clear of date/time if no nurse
          IF        @EQUAL
            MATCH     SP70,EMVIATNS
            GOTO      CHGNR900 IF EQUAL
.
            MOVE      THREE,EXIT
            GOTO      CHGNR999
          ENDIF
.
          MATCH     "1",EMVITRIG
          IF        @EQUAL
            MATCH     SAVKEY16,KEY16    * check nurse date/time ok to be
            GOTO      CHGDT200 IF EQUAL * equal if triage category 1
          ENDIF
.
          MATCH     SAVKEY16,KEY16    * check arrival date/time
          IF        !@LESS
            MOVE      ONE,EXIT
            GOTO      CHGNR999
          ENDIF
.
CHGNR200  PACK      KEY16,EMVIDDAT,EMVIDTIM,SP70
          MATCH     SP70,KEY16
          GOTO      CHGNR900 IF EQUAL
          REP       ":0",KEY16
.
          MATCH     KEY16,SAVKEY16    * check discharge date/time
          IF        !@LESS
            MOVE      TWO,EXIT
            GOTO      CHGNR999
          ENDIF
.
CHGNR900  MOVE      NURSDATE,EMVINSDT
          MOVE      NURSTIME,EMVINSTM
.
          IF        CALCWAIT=1
            CALL      UPDURT00              * recalculate waiting time for
            MOVE      WAITTIME,EMVIDURN     * update discharge
.
            MOVE      EMVIADMN,KEY8
            CALL      RDDETA1
            IF        OVRCD=0
              MOVE      WAITTIME,ADADURN      * update waiting duration
              CALL      UPDETA1               * update a&e details record
            ENDIF
          ENDIF
.
          MATCH     Z70,FRSTNURS
          IF        !@EQUAL
            MOVE      FRSTNURS,EMVIATNS
          ENDIF
.
          CALL      UPEMVIS1
.
          CALL      NRHIST00          * Change nurse seen date and time
.                                     * in the first history records
.
          PROC      EMRDRCHR          * Update Visit Billing Complete
.
          APPEND    SAVEFDOC,UPDVALUE * Save old first nurse for date integrity
          RESET     UPDVALUE
.
          CALL      WRCHA000          * Write date integrity audit
.
CHGNR999  RETURN
.
.
.------------------------------------------------------------
. Change the nurse date and time in the history file
.------------------------------------------------------------
NRHIST00  MATCH     SP70,EMVIATNS
          GOTO      NRHIST99 IF EQUAL
.
          MATCH     SP70,EMVINSDT
          GOTO      NRHIST99 IF EQUAL
.
          MATCH     SP70,EMVINSTM
          GOTO      NRHIST99 IF EQUAL
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
NRHIST10  CALL      RKEMHIS1
          BRANCH    OVRCD,NRHIST99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NRHIST99 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          IF        @EQUAL
            MOVE      EMHINUR,SAVEDOCT           * Save Nurse code
            MOVE      EMHINUR,SAVEFDOC           * Save Nurse code
            GOTO      NRHIST60
          ENDIF
.
          GOTO      NRHIST10
.
NRHIST50  CALL      RKEMHIS1
          BRANCH    OVRCD,NRHIST90
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NRHIST90 IF NOT EQUAL
.
          MATCH     SAVEDOCT,EMHINUR
          GOTO      NRHIST90 IF NOT EQUAL
.
NRHIST60  MOVE      EMVINSDT,EMHINSD
          UNPACK    EMVINSTM,HOUR,D1,MIN,D1,SEC
          PACK      EMHINST,HOUR,MIN,SEC
.
          MATCH     Z70,FRSTNURS
          IF        !@EQUAL
            MATCH     FRSTNURS,EMHINUR
            IF        !@EQUAL
               MOVE     FRSTNURS,EMHINUR    * Update First seen by nurse code
               MOVE     "FRNUR",UPDTTYPE    * First Nurse Change for history
            ENDIF
          ENDIF
.
          CALL      UPEMHIS1
.
          GOTO      NRHIST50
.
NRHIST90  MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRTHIS00
          ENDIF
.
NRHIST99  RETURN
.
.------------------------------------------------------------
.------------------------------------------------------------
. Patient Note Maintenance
.------------------------------------------------------------
PATNOT00  PACK      KEY8,URNUMBER,SP70
          CALL      RDMAST1
          BRANCH    OVRCD,PATNOT90
.
          RESET     UPDTTYPE
          MATCH     SP70,UPDTTYPE
          GOTO      PATNOT99 IF EQUAL
.
          MATCH     "A",UPDTTYPE           * Add Formaction
          GOTO      PATNOT10 IF EQUAL
.
          GOTO      PATNOT91
.
PATNOT10  CALL      ADDPAT00              * Add New Type of Note SubRoutine
          MOVE      ZERO,EXIT
          GOTO      PATNOT99
.
PATNOT90  MOVE      "Invalid Patient Visit Number ",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      PATNOT99
.
PATNOT91  MOVE      "Invalid Form Action.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      PATNOT99
.
PATNOT99  CLOSE     COMFILBF,DELETE
          RETURN
+
.------------------------------------------------------------
.  Writing the Medical Notes
.------------------------------------------------------------
ADDPAT00  MOVE      ZERO,F6
          MOVE      URNUMBER,PMMDURNO       * UR number
.
          PACK      KEY14,URNUMBER,Z70
          CALL      RSPMMDT1
          CALL      RPPMMDT1                * read back to get last record
          IF        OVRCD=1
            MOVE      ONE,F6
            MOVE      F6,PMMDNOTE           * Note Number
          ELSE
            MATCH     URNUMBER,PMMDURNO
            IF        @EQUAL
              MOVE      PMMDNOTE,F6
              ADD       ONE,F6
              MOVE      F6,PMMDNOTE
            ELSE
              MOVE      ONE,F6
              MOVE      F6,PMMDNOTE         * Note Number
            ENDIF
          ENDIF
.
          PACK      PMMDDATE,CCC,CYY,CMM,CDD
          REP       " 0",PMMDDATE          * Date
          CLOCK     TIME,PMMDTIME
          MOVE      USERID,PMMDUSER        * User
.
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,ADDPAT99
.
          MOVE      WBSEOCG,PMMDOCCG        * Occupation Group
.
          MOVE      "0",PMMDDELT       * Delete Indicator
          MOVE      SP70,PMMDDDAT      * Delete Date
          MOVE      SP70,PMMDDTIM      * Delete Time
          MOVE      SP70,PMMDDUSE      * Delete by WEB User ID
          MOVE      SP70,PMMDDOCC      * Occupational Group WEB User ID Delete
          MOVE      SP70,PMMDSPAR      * Spare
          MOVE      URNUMBER,PMMDURNO
.
          PACK      KEY14,URNUMBER,PMMDNOTE,SP70
          CALL      RDPMMDT1
          IF        OVRCD=1
            CALL      WRPMMDT1              * Write Record
          ELSE
            GOTO      ADDPAT99
          ENDIF
.

.         now write the medical notes
.
          MOVE      URNUMBER,PMMTURNO
          MOVE      PMMDNOTE,PMMTNOTE
          MOVE      ZERO,F3
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      COMFILBF,COMFILNB
          TRAPCLR   IO
          BRANCH    OVRCD,ADDPAT99
.
ADDPAT90  ADD       ONE,F3
          MOVE      F3,PMMTUNIQ
.
          READ      COMFILBF,SEQ;PMMTCMNT
.
          PACK      KEY17,PMMTURNO,PMMTNOTE,PMMTUNIQ,SP70
          CALL      WRPMMTX1
          IF        F3>=LASTITEM
            GOTO     ADDPAT99
          ENDIF
          GOTO      ADDPAT90
.
ADDPAT99  RETURN
.
.-----------------------------------------------------------
.         Clears the patient notes file variables
.-----------------------------------------------------------
CLRPAT00  MOVE      SP70,PMMDURNO  *  UR NUMBER
          MOVE      SP70,PMMDNOTE  *  Note Number
          MOVE      SP70,PMMDDATE  *  Date
          MOVE      SP70,PMMDTIME  *  TIME
          MOVE      SP70,PMMDUSER  *  User
          MOVE      SP70,PMMDOCCG  *  Occupational Gp.
          MOVE      SP70,PMMDDELT  *  Delete Indicator
.
          MOVE      SP70,PMMTURNO  *  UR Number
          MOVE      SP70,PMMTNOTE  *  Note
          MOVE      SP70,PMMTUNIQ  *  Uniq line number
          MOVE      SP70,PMMTCMNT  *  Comment line
.
CLRPAT99  RETURN
.------------------------------------------------------------
.         Notes Display in the text area
.------------------------------------------------------------
DISPPT00  MATCH     "       0",URNUMBER
          GOTO      DISPPT99 IF EQUAL
.
          MOVE      URNUMBER,PMMDURNO
          PACK      KEY14,PMMDURNO,Z70
          CALL      RSPMMDT1
DISPPT10  CALL      RPPMMDT1
          BRANCH    OVRCD,DISPPT99
          MATCH     URNUMBER,PMMDURNO
          GOTO      DISPPT99 IF NOT EQUAL
          MATCH     "1",PMMDDELT
          GOTO      DISPPT10 IF EQUAL
.
          MATCH     SP70,PMMDDATE
          IF        !@EQUAL
            UNPACK    PMMDDATE,CCENT,CYEAR,CMON,CDAY
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      TEMPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
          ENDIF
.
          CLEAR     MEDNOTES
          APPEND    TEMPDATE,MEDNOTES
          APPEND    "  ",MEDNOTES
          APPEND    PMMDTIME,MEDNOTES
          APPEND    "  ",MEDNOTES
.
          PACK      WBSENAM,SP70
          PACK      KEY10,PMMDUSER,SP70
          CALL      RDWBSE1
          IF        OVRCD<>1
            STRIP     WBSENAM
            APPEND    WBSENAM,MEDNOTES
          ELSE
            APPEND    PMMDUSER,MEDNOTES
          ENDIF
.
          APPEND    "  ",MEDNOTES
          APPEND    PMMDOCCG,MEDNOTES
          RESET     MEDNOTES
.
          STRIP     MEDNOTES
          MOVELPTR  MEDNOTES,LENGTH
.
          SFORMAT   VAR,LENGTH
          MOVE      MEDNOTES,VAR
          WRITE     HTMLFILE;VAR
          SFORMAT   VAR,127
.
          PACK      KEY17,URNUMBER,PMMDNOTE,SP70
          CALL      RSPMMTX1
DISPPT20  CALL      RKPMMTX1
          BRANCH    OVRCD,DISPPT10
          MATCH     PMMTURNO,PMMDURNO
          GOTO      DISPPT10 IF NOT EQUAL
          MATCH     PMMTNOTE,PMMDNOTE
          GOTO      DISPPT10 IF NOT EQUAL
.
          STRIP     PMMTCMNT
          MOVELPTR  PMMTCMNT,LENGTH
.
          SFORMAT   VAR,LENGTH
          MOVE      PMMTCMNT,VAR
          WRITE     HTMLFILE;VAR
          SFORMAT   VAR,127
          GOTO      DISPPT20
.
DISPPT99 RETURN
.
.------------------------------------------------------------
. Get Comments
.------------------------------------------------------------
GETPAT00  PREP      COMFILBF,COMFILNB
          MOVE      ONE,F3
          WRITE     COMFILBF,SEQ;QRYDATA
.
GETPAT10  READ      CONFFILE,SEQ;QRYNAME,QRYDATA
          GOTO      GETPAT90 IF OVER
          MATCH     SP70,QRYNAME
          GOTO      GETPAT80 IF NOT EQUAL
          ADD       ONE,F3
          WRITE     COMFILBF,SEQ;QRYDATA
          GOTO      GETPAT10
.
GETPAT80  MOVE      ONE,TEXTAREA                 * Flag for Next CGI Parameter
GETPAT90  MOVE      F3,LASTITEM
          OPEN      COMFILBF,COMFILNB
GETPAT99  RETURN
.
.------------------------------------------------------------
.     Clear Claim Details
.------------------------------------------------------------
CLRCLM00  MOVE      SP70,WCENAME
          MOVE      SP70,WCEADD1
          MOVE      SP70,WCEADD2
          MOVE      SP70,WCEADD3
          MOVE      SP70,WCEADD4
          MOVE      SP70,WCEPOST
          MOVE      SP70,WCETELE
          MOVE      SP70,WCACDAT
          MOVE      SP70,WCACCPT
          MOVE      SP70,WCICODE
          MOVE      ZERO,WCCLMNO
          MOVE      SP70,WCCOMN1
          MOVE      SP70,WCCOMN2
          MOVE      SP70,PTWCURNO
          MOVE      SP70,PTWCVDAT
          MOVE      SP70,PTWCSPAR
.
          MOVE      SP70,VCLMNO
.
          MOVE      SP70,MREFNO
          MOVE      SP70,MPOLIC
          MOVE      SP70,MACDAT
          MOVE      SP70,MSNAME
          MOVE      SP70,MSTELE
          MOVE      SP70,MCREGO
          MOVE      SP70,MACLOC
          MOVE      ZERO,MDPINDIC
          MOVE      SP70,MENGAGED
          MOVE      SP70,MPINJURE
          MOVE      SP70,MMDTRANS
          MOVE      SP70,MMECHSEV
          MOVE      SP70,MREGNSEV
          MOVE      SP70,MOTHDET1
          MOVE      SP70,MOTHDET2
          MOVE      SP70,MOTHDET3
          MOVE      ZERO,PTWMTACF
          MOVE      SP70,PTWMTYPE
          MOVE      SP70,PTWMURNO
          MOVE      SP70,PTWMVDAT
.
          MOVE      SP70,PMWXVISN           * Visit Number
          MOVE      SP70,PMWXALOC           * Accident Location
          MOVE      SP70,PMWXCINJ           * of Injury (Cat IK)
          MOVE      SP70,PMWXICOD           * Injury Code (Cat IJ)
          MOVE      SP70,PMWXCNAM           * Contact Name
          MOVE      SP70,PMWXCDTE           * Date Record Created (ccyymmdd)
          MOVE      SP70,PMWXCTIM           * Time Record Created (hh:mm:ss)
          MOVE      SP70,PMWXWEBC           * WEB User Id rec. creator(websecaf)
          MOVE      SP70,PMWXLUPD           * Last Update Date (ccyymmdd)
          MOVE      SP70,PMWXLUPT           * Last Update Time (hh:mm:ss)
          MOVE      SP70,PMWXWEBU           * WEB User Id rec. updater(websecaf)
          MOVE      SP70,PMWXSPAR           * Spare Variable
.
CLRCLM99  RETURN
.
.--------------------------------------------------------------------------
. UPFOLD00 - This will update the pmi field PMPXFLDR with the appropriate
.            category code (cat FS) that has a matching TCINDC1 to FOLDERTY.
.
. Parameters: FOLDERT1 values 1=DVA,2=TAC,3=Work Comp and 4 = Family choice
.                             5=Civil Tort
.--------------------------------------------------------------------------
UPFOLD00  MATCH     "0",PTCNCOMF                 * Not using compensable folders
          GOTO      UPFOLD99 IF EQUAL
.
          MATCH     SP8,EMVIURNO                 * u/r number blank?
          GOTO      UPFOLD99 IF EQUAL
.
          MATCH     ZEROUR,EMVIURNO              * u/r number zero?
          GOTO      UPFOLD99 IF EQUAL
. 
          MOVE      "FS",CATEGORY
          PACK      KEY5,CATEGORY,SP70
          CALL      RDSCODE1
UPFOLD10  CALL      RDKCODE1
          BRANCH    OVRCD,UPFOLD99
.
          MATCH     CATEGORY,TCODE
          GOTO      UPFOLD99 IF NOT EQUAL
.
          MATCH     FOLDERTY,TCINDC1
          GOTO      UPFOLD80 IF EQUAL
.
          GOTO      UPFOLD10
.
UPFOLD80  PACK      KEY8,EMVIURNO,SP70
          CALL      RDPMPX21
          BRANCH    OVRCD,UPFOLD99
.
          MATCH     ACODE,PMPXFLDR
          GOTO      UPFOLD99 IF EQUAL
.
          MOVE      ACODE,PMPXFLDR
.
          CALL      UPPMPX21
.
UPFOLD99  RETURN
.
.------------------------------------------------------------    * I CAR 23608
.         Update pmscuraf (Current patient search file)
.------------------------------------------------------------
DELPAT00  CALL      IBACLOCK                              * Get current date
          PACK      CALCDATE,CCC,CYY,CMM,CDD
          REP       " 0",CALCDATE
          SUB       "2",CALCDATE
.
          MATCH     SP70,EMVIDDAT                         * I CAR 44734
          GOTO      DELPAT10 IF EQUAL
          GOTO      DELPAT10 IF EOS                       * end I CAR 44734
.
          MATCH     CALCDATE,EMVIDDAT                     * Is discharge date
          GOTO      DELPAT90 IF LESS                      * less than current
.                                                         * date
DELPAT10  MOVE      DEMVIADM,PMCUVISN                     * Populate pmscuraf
          MOVE      EMVIDATE,PMCUDATE                     * variables
          MOVE      PTMASNAM,PMCUSURN
          MOVE      PMPXFNAM,PMCUGNAM
          MOVE      PMPXSNAM,PMCUGNM2
          MOVE      PURNO,PMCUURNO
          MOVE      "1",PMCUSYST                          * Set emergency pat
          MOVE      SP70,PMCULOCN
          MOVE      SP70,PMCUOSIT
          MOVE      EMSTHSNO,PMCUHOSP
          MOVE      SP70,PMCUTSTA
          MOVE      SP70,PMCUTLOC
.
          PACK      KEY8,PMCUVISN,SP70
          CALL      RAPMCUR1                              * Check if there is
          IF        OVRCD=1
            CALL      WRPMCUR1                            * Write record
          ENDIF
          GOTO      DELPAT99
.
DELPAT90  MOVE      DEMVIADM,PMCUVISN                     * Discharge date is
          PACK      KEY8,PMCUVISN,SP70                    * less, delete record
          CALL      DEPMCUR1
.
DELPAT99  RETURN
+
.------------------------------------------------------------
.         Write to the current patient list undischarge
.------------------------------------------------------------
WRCPTU00  MOVE      DEMVIADM,PMCUVISN
          MOVE      EMVIDATE,PMCUDATE
          MOVE      PTMASNAM,PMCUSURN
          MOVE      PMPXFNAM,PMCUGNAM
          MOVE      PMPXSNAM,PMCUGNM2
          MOVE      PURNO,PMCUURNO
          MOVE      "1",PMCUSYST
          MOVE      SP70,PMCULOCN
          MOVE      SP70,PMCUOSIT
          MOVE      EMSTHSNO,PMCUHOSP
          MOVE      SP70,PMCUTSTA
          MOVE      SP70,PMCUTLOC
.
          PACK      KEY8,PMCUVISN,SP70
          CALL      RAPMCUR1
          IF        OVRCD=1
            CALL      WRPMCUR1
          ENDIF
.
WRCPTU99  RETURN
.
.------------------------------------------------------------
.         Update current patient list name with the ur
.         that has just been allocated
.------------------------------------------------------------
UPCPAT00  MOVE      EMVIADMN,PMCUVISN
          MOVE      EMVIDATE,PMCUDATE
          MOVE      PTMASNAM,PMCUSURN
          MOVE      PMPXFNAM,PMCUGNAM
          MOVE      PMPXSNAM,PMCUGNM2
          MOVE      PURNO,PMCUURNO
          MOVE      "1",PMCUSYST
          MOVE      SP70,PMCULOCN
          MOVE      EMSTHSNO,PMCUHOSP
.
          PACK      KEY8,PMCUVISN,SP70
          CALL      RAPMCUR1
          IF        OVRCD=0
            CALL      UPPMCUR1
          ENDIF
.
UPCPAT99  RETURN
.                                                             * end I CAR 23608
.**********************************************************************
.*  CHKD0000  - Check if there are any deposits for this visit if so  *
.*              display an error                                      *
.**********************************************************************
CHKD0000  MOVE      ZERO,EXIT
          MOVE      "0",CMDESTAT
          PACK      KEY26,ADMISSNO,CMDESTAT,SP70
          CALL      RSCMDEP2
CHKD1000  CALL      RKCMDEP2
          BRANCH    OVRCD,CHKD9999
.
          MATCH     ADMISSNO,CMDEADMN           * Same outpatient booking
          GOTO      CHKD9999 IF NOT EQUAL
          MATCH     "0",CMDESTAT                * deposit held
          GOTO      CHKD9999 IF NOT EQUAL
.
CHKD9000  MOVE      ONE,EXIT
          GOTO      CHKD9999

CHKD9999  RETURN
.
.-----------------------------------------------------------------------------
. CTRN0000 - Check transfer source
.-----------------------------------------------------------------------------
CTRN0000  PACK      TRNSCODE,EMVITSRC,SP70
.
          MATCH     SP70,EMVITSRC                * No transfer source
          GOTO      CTRN9000 IF EQUAL
.
          PACK      TRNSDATE,EMVIDATE,SP70
.
          MATCH     SP70,EMVIDATE                * No Visit date
          GOTO      CTRN9000 IF EQUAL
.
CTRN7000  CALL      CVAD0000                     * Validate transfer source
          BRANCH    EXIT,CTRN9999
.
CTRN9000  MOVE      ZERO,EXIT
          GOTO      CTRN9999
.
CTRN9999  RETURN
.
.-----------------------------------------------------------------------------
. CTSR0000 - Check transfer destination
.-----------------------------------------------------------------------------
CTSR0000  PACK      TRNSCODE,EMVIDEST,SP70
.
          MATCH     SP70,EMVIDEST                * No transfer source
          GOTO      CTSR9000 IF EQUAL
.
          PACK      TRNSDATE,EMVIDDAT,SP70
.
          MATCH     SP70,EMVIDDAT                * No Visit date
          GOTO      CTSR9000 IF EQUAL
.
CTSR7000  CALL      CVAD0000                     * Validate transfer source
          BRANCH    EXIT,CTSR9999
.
CTSR9000  MOVE      ZERO,EXIT
          GOTO      CTSR9999
.
CTSR9999  RETURN
.
.------------------------------------------------------------
. Retrieve EOC ACC number
.------------------------------------------------------------
GETACC00  COMPARE   ONE,PTCNUEOC                 * Using episodes of care
          GOTO      GETACC99 IF NOT EQUAL
.
          MATCH     ZEROUR,URNUMBER              * Skip if zero u/r
          GOTO      GETACC90 IF EQUAL
.
          PACK      KEY23,EMVIADMN,URNUMBER,SP70
          CALL      RSECLNK3
GETACC10  CALL      RKECLNK3
          BRANCH    OVRCD,GETACC90
.
          MATCH     EMVIADMN,ECLNVISI
          GOTO      GETACC90 IF NOT EQUAL
.
          MATCH     URNUMBER,ECLNURNO
          GOTO      GETACC90 IF NOT EQUAL
.
          PACK      KEY13,ECLNURNO,ECLNEPNO
          CALL      RDECREF1
          BRANCH    OVRCD,GETACC90
.
          GOTO      GETACC99
.
GETACC90  CALL      CLRRFL00                     * Clear file vars
          GOTO      GETACC99
.
GETACC99  RETURN
.
.------------------------------------------------------------
. CLRRFL00 - Clear the Referral Variables (EOCREFFD,EOCLNKFD)
.------------------------------------------------------------
CLRRFL00  MOVE      SP70,ECRFURNO
          MOVE      ZERO,ECRFEPNO
          MOVE      ZERO,ECRFHOSP
          MOVE      ZEROVISN,ECRFREFN
          MOVE      SP70,ECRFACCN
          MOVE      ZERO,ECRFSTAT
          MOVE      SP10,ECRFCDAT
          PACK      ECRFSPAR,SP70
.
          MOVE      SP70,ECLNURNO
          MOVE      ZERO,ECLNEPNO
          MOVE      ZERO,ECLNHOSP
          MOVE      ZEROVISN,ECLNVISI
          MOVE      SP70,ECLNSPAR
.
CLRRFL99  RETURN
.
.******************************************************************************
.*                                 WESIS000                                   *
.*                           Write/update watespaf                            *
.******************************************************************************
.
WESIS000  READ      CONTROLF,EIGHTY;*250,PTCNHDPS
.
          COMPARE   THREE,PTCNHDPS
          GOTO      WESIS999 IF NOT EQUAL   * Not in Victoria
.
          MOVE      SP70,CARDNUMB
          PACK      KEY16,PURNO,Z70
          CALL      RSWTESP1
          CALL      RPWTESP1
          BRANCH    OVRCD,WESIS999
.
          MATCH     PURNO,WTEPURNO
          GOTO      WESIS999 IF NOT EQUAL
.
          CALL      IBACLOCK
          PACK      XDATE,CCC,CYY,CMM,CDD
          REP       " 0",XDATE
.
          OPEN      PMSCCDA1,"pmsccdaf"
.
          PACK      KEY19,URNUMBER,SP70
          CALL      RSPMCCD1
WESIS100  CALL      RKPMCCD1
          BRANCH    OVRCD,WESIS200
.
          MATCH     URNUMBER,PMCDURNO
          GOTO      WESIS200 IF NOT EQUAL 
.
          MATCH     XDATE,PMCDEXDT
          IF        !@LESS
            PACK      KEY5,CATct,PMCDCTYP
            CALL      RDCODE1
            BRANCH    OVRCD,WESIS100
            MATCH     "7",TCINDC1
            IF        @EQUAL
              MOVE    PMCDCNUM,CARDNUMB
              GOTO    WESIS200
            ENDIF
          ENDIF
          GOTO      WESIS100
.
WESIS200  CALL      CHKESI00
          BRANCH    EXIT,WESIS999   * no changes
.
          CALL      CLRWTESI
.
WESIS250  PACK      WTEPURNO,PURNO
          PACK      WTEPEDAT,SP70
          PACK      WTEPPDOB,PBDATE,SP70
          PACK      WTEPEDOB,PMPXEDOB,SP70
          PACK      WTEPPSEX,PSEX,SP70
          PACK      WTEPMEDI,PMEDI,SP70
          SQUEEZE   PTMXMCCD
          PACK      WTEPMREF,PTMXMCCD,SP70
          PACK      WTEPRESI,PTYPE,SP70
          PACK      WTEPPOST,PPOST,SP70
          PACK      WTEPSUBR,PSUBRB,SP70
          PACK      WTEPABRG,PMPXABRG,SP70
          PACK      WTEPPGEN,PMPXUCC4,SP70
          PACK      WTEPNDIS,CARDNUMB,SP70
          PACK      WTEPSPAR,SP70
.
          PACK      KEY16,PURNO,SP70
          CALL      RAWTESP1
          IF        OVRCD=1
            PACK      WTEPWEBC,WBSEUID,SP70
            PACK      WTEPCDAT,CCC,CYY,CMM,CDD,SP70
            REP       " 0",WTEPCDAT
            PACK      WTEPCTIM,CTIMEIS,SP70
            REP       " 0",WTEPCTIM
            CALL      WRWTESP1
          ELSE
            PACK      WTEPWEBU,WBSEUID,SP70
            PACK      WTEPUDAT,CCC,CYY,CMM,CDD,SP70
            REP       " 0",WTEPUDAT
            PACK      WTEPUTIM,CTIMEIS,SP70
            REP       " 0",WTEPUTIM
            CALL      UPWTESP1
          ENDIF
.
WESIS999  RETURN
.
.******************************************************************************
.*                                 CHKESI00                                   *
.*                 Check if any ESIS have changed since last sent             *
.******************************************************************************
.
CHKESI00  MOVE      ZERO,EXIT
.
          MATCH     WTEPPDOB,PBDATE
          GOTO      CHKESI90 IF NOT EQUAL
.
          MATCH     WTEPEDOB,PMPXEDOB
          GOTO      CHKESI90 IF NOT EQUAL
.
          MATCH     WTEPPSEX,PSEX
          GOTO      CHKESI90 IF NOT EQUAL
.
          MATCH     WTEPMEDI,PMEDI
          GOTO      CHKESI90 IF NOT EQUAL
.
          MATCH     WTEPRESI,PTYPE
          GOTO      CHKESI90 IF NOT EQUAL
.
          MATCH     WTEPPOST,PPOST
          GOTO      CHKESI90 IF NOT EQUAL
.
          MATCH     WTEPSUBR,PSUBRB
          GOTO      CHKESI90 IF NOT EQUAL
.
          MATCH     WTEPABRG,PMPXABRG
          GOTO      CHKESI90 IF NOT EQUAL
.
          MATCH     WTEPPGEN,PMPXUCC4
          GOTO      CHKESI90 IF NOT EQUAL
.
          MATCH     WTEPNDIS,CARDNUMB
          GOTO      CHKESI90 IF NOT EQUAL
.
          MOVE      ONE,EXIT                 * No Changes
.
CHKESI90  GOTO      CHKESI99
.
CHKESI99  RETURN
+
CLRWTESI  PACK      WTEPURNO,SP70
          PACK      WTEPEDAT,SP70
          PACK      WTEPPDOB,SP70
          PACK      WTEPEDOB,SP70
          PACK      WTEPPSEX,SP70
          PACK      WTEPMEDI,SP70
          PACK      WTEPRESI,SP70
          PACK      WTEPPOST,SP70
          PACK      WTEPSUBR,SP70
          PACK      WTEPABRG,SP70
          PACK      WTEPWEBC,SP70
          PACK      WTEPCDAT,SP70
          PACK      WTEPCTIM,SP70
          PACK      WTEPWEBU,SP70
          PACK      WTEPUDAT,SP70
          PACK      WTEPUTIM,SP70
          PACK      WTEPPGEN,SP70
          PACK      WTEPNDIS,SP70
          PACK      WTEPSPAR,SP70
.
          RETURN
.
.******************************************************************************
.*                                 SH7VP000                                   *
.*                      Save PMI HL7 visit trigger variables                  *
.******************************************************************************
SH7VP000  PACK      SAVXPRVI,PMPXPRVI,SP70
          PACK      SAVXRHC1,PMPXRHC1,SP70
          PACK      SAVXRH1G,PMPXRH1G,SP70
SH7VP999  RETURN
+
.******************************************************************************
.*                                 CH7VP000                                   *
.*                Check for any PMI HL7 visit trigger variable changes        *
.******************************************************************************
CH7VP000  MATCH     "1",PTCNH7VP
          GOTO      CH7VP999 IF NOT EQUAL   * Not using visit based triggers
.
          PACK      PMPXPRVI,PMPXPRVI,SP70
          MATCH     PMPXPRVI,SAVXPRVI
          IF        !@EQUAL
            CALL      WH7VP000
            GOTO      CH7VP999
          ENDIF
          PACK      PMPXRHC1,PMPXRHC1,SP70
          MATCH     PMPXRHC1,SAVXRHC1
          IF        !@EQUAL
            CALL      WH7VP000
            GOTO      CH7VP999
          ENDIF
          PACK      PMPXRH1G,PMPXRH1G,SP70
          MATCH     PMPXRH1G,SAVXRH1G
          IF        !@EQUAL
            CALL      WH7VP000
            GOTO      CH7VP999
          ENDIF
.
CH7VP999  RETURN
+
.******************************************************************************
.*                                 WH7VP000                                   *
.* If any HL7 PMI visit trigger variables have changed, write/update ibapolaf *
.******************************************************************************
WH7VP000  MOVE      ZERO,FORM10
          PACK      KEY10,Z70
          CALL      RSIBPOL1
          CALL      RPIBPOL1
          BRANCH    OVRCD,WH7VP100
.
          MOVE      IBPLUNIQ,FORM10
WH7VP100  ADD       ONE,FORM10
.
          MOVE      FORM10,IBPLUNIQ
          MOVE      "001",IBPLTYPE     * Visit based HL7 Triggers for a UR
          MOVE      PURNO,IBPLURNO
          MOVE      SP8,IBPLVISN
          MOVE      SP70,IBPLSKEY
          MOVE      SP70,IBPLSPAR
.
          MOVE      FORM10,KEY10
          CALL      RAIBPOL1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRIBPOL1
            TRAPCLR   IO
            BRANCH    OVRCD,WH7VP100
          ELSE
            GOTO      WH7VP100
          ENDIF
.
WH7VP999  RETURN
+
.------------------------------------------------------------
. Visit Note Maintenance
.------------------------------------------------------------
VISNOT00  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,VISNOT90
.
          RESET     UPDTTYPE
          MATCH     SP70,UPDTTYPE
          GOTO      VISNOT99 IF EQUAL
.
          MATCH     "A",UPDTTYPE           * Add Management Notes Formaction
          GOTO      VISNOT10 IF EQUAL
.
          GOTO      VISNOT91
.
VISNOT10  MATCH     SP70,NOTETYPE
          GOTO      VISNOT92 IF EQUAL
.
          CALL      ADDNOT00              * Add New Type of Note SubRoutine
          MOVE      ZERO,EXIT
          GOTO      VISNOT99
.
VISNOT90  MOVE      "Invalid Patient Visit Number ",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      VISNOT99
.
VISNOT91  MOVE      "Invalid Form Action.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      VISNOT99
.
VISNOT92  MOVE      "Invalid Visit Note Type.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      VISNOT99
.
VISNOT99  CLOSE     COMFILVF,DELETE
          RETURN
.
.------------------------------------------------------------
.  Writing the visit Notes
.------------------------------------------------------------
ADDNOT00  CLOCK     TIME,CTIMEIS
          MOVE      ZERO,F6
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,ADDNOT99
.
ADDNOT02  PACK      KEY17,ADMISSNO,NOTETYPE,Z70
          CALL      RSVSMDT1
          CALL      RPVSMDT1                * read back to get last record
          BRANCH    OVRCD,ADDNOT05
          MATCH     ADMISSNO,VSMDVISN       * Same visit
          GOTO      ADDNOT05 IF NOT EQUAL
          MATCH     NOTETYPE,VSMDTYPE       * Same note type
          GOTO      ADDNOT05 IF NOT EQUAL
          MOVE      VSMDNOTE,F6
          ADD       ONE,F6
          MOVE      F6,VSMDNOTE
          GOTO      ADDNOT10
ADDNOT05  MOVE      ONE,F6
          MOVE      F6,VSMDNOTE             * Note Number
.
ADDNOT10  MOVE      ADMISSNO,VSMDVISN       * Visit number
          MOVE      NOTETYPE,VSMDTYPE       * Notes Type
          PACK      VSMDDATE,CCC,CYY,CMM,CDD
          REP       " 0",VSMDDATE           * Date
          MOVE      CTIMEIS,VSMDTIME
          MOVE      USERID,VSMDUSER         * User
          MOVE      WBSEOCG,VSMDOCCG        * Occupation Group
          MOVE      "0",VSMDDELT            * Delete Indicator
          MOVE      SP70,VSMDDDAT           * Delete Date
          MOVE      SP70,VSMDDTIM           * Delete Time
          MOVE      SP70,VSMDDUSE           * Delete User
          MOVE      SP70,VSMDDOCC           * Delete User Occupation group
          PACK      PMMDSPAR,SP70,SP70      * Spare
.
          PACK      KEY17,VSMDVISN,VSMDTYPE,VSMDNOTE,SP70
          TRAP      OVERCOND IF IO
          CALL      WRVSMDT1
          TRAPCLR   IO
          BRANCH    OVRCD,ADDNOT02
.
.         now write the visit comment notes
.
          MOVE      VSMDVISN,VSMTVISN
          MOVE      VSMDTYPE,VSMTTYPE
          MOVE      VSMDNOTE,VSMTNOTE
          MOVE      ZERO,F3
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      COMFILVF,COMFILNV
          TRAPCLR   IO
          BRANCH    OVRCD,ADDNOT99
.
ADDNOT80  ADD       ONE,F3
          MOVE      F3,VSMTUNIQ
.
          READ      COMFILVF,SEQ;VSMTCMNT
.
          PACK      KEY20,VSMTVISN,VSMTTYPE,VSMTNOTE,VSMTUNIQ,SP70
          CALL      WRVSMTX1
          IF        F3>=LASTITEM
            GOTO     ADDNOT99
          ENDIF
          GOTO      ADDNOT80
.
ADDNOT99  RETURN
.
.------------------------------------------------------------
. Get visit Comments
.------------------------------------------------------------
GETNOT00  PREP      COMFILVF,COMFILNV
          MOVE      ONE,F3
          WRITE     COMFILVF,SEQ;QRYDATA
.
GETNOT10  READ      CONFFILE,SEQ;QRYNAME,QRYDATA
          GOTO      GETNOT90 IF OVER
          MATCH     SP70,QRYNAME
          GOTO      GETNOT80 IF NOT EQUAL
          ADD       ONE,F3
          WRITE     COMFILVF,SEQ;QRYDATA
          GOTO      GETNOT10
.
GETNOT80  MOVE      ONE,TEXTAREA                 * Flag for Next CGI Parameter
GETNOT90  MOVE      F3,LASTITEM
          OPEN      COMFILVF,COMFILNV
GETNOT99  RETURN
.
.-----------------------------------------------------------
.         Clears the visit notes file variables
.-----------------------------------------------------------
CLVNOT00  MOVE      SP70,VSMDVISN      * Visit Number
          MOVE      SP70,VSMDTYPE      * Comment Type
          MOVE      SP70,VSMDNOTE      * Note Number
          MOVE      SP70,VSMDDATE      * Input Date (CCYYMMDD)
          MOVE      SP70,VSMDTIME      * Input Time (HH:MM:SS)
          MOVE      SP70,VSMDUSER      * Input by WEB User ID (websecaf)
          MOVE      SP70,VSMDOCCG      * Occupational Group WEB User ID
          MOVE      SP70,VSMDDELT      * Delete Indicator (0=No,1=Yes)
          MOVE      SP70,VSMDDELT      * Delete Indicator (0=No,1=Yes)
          MOVE      SP70,VSMDDDAT      * Delete Date (CCYYMMDD)
          MOVE      SP70,VSMDDTIM      * Delete Time (HH:MM:SS)
          MOVE      SP70,VSMDDUSE      * Delete by WEB User ID (websecaf)
          MOVE      SP70,VSMDDOCC      * Occupational Group WEB User ID Dele
          MOVE      SP70,VSMDSPAR      * Spare Variable
.
          MOVE      SP70,VSMTVISN      * Visit Number
          MOVE      SP70,VSMTTYPE      * Comment Type
          MOVE      SP70,VSMTNOTE      * Note Number
          MOVE      SP70,VSMTUNIQ      * Line Number
          MOVE      SP70,VSMTCMNT      * Comment
          MOVE      SP70,VSMTSPAR      * Spare Variable
.
CLVNOT99  RETURN
.------------------------------------------------------------
.         Visit Notes Display in the text area
.         NOTEORDR = 0 = Display new notes first
.                    1 = Display old notes first
.------------------------------------------------------------
DISNOT00  MOVE      ADMISSNO,VSMDVISN
          MOVE      SP70,VISNOTES
.
          IF        NOTEORDR=0
            PACK      KEY17,VSMDVISN,NOTEFILT,Z70
          ELSE
            PACK      KEY17,VSMDVISN,NOTEFILT,SP70
          ENDIF
.
          CALL      RSVSMDT1
DISNOT10  IF        NOTEORDR=0
            CALL      RPVSMDT1
          ELSE
            CALL      RKVSMDT1
          ENDIF
          BRANCH    OVRCD,DISNOT99
.
          MATCH     ADMISSNO,VSMDVISN
          GOTO      DISNOT99 IF NOT EQUAL
.
          MATCH     NOTEFILT,VSMDTYPE
          GOTO      DISNOT99 IF NOT EQUAL
.
          MATCH     "1",VSMDDELT
          GOTO      DISNOT10 IF EQUAL
.
          IF        NOTELOCN=0
            MOVE      SP70,TEMPDATE
            MATCH     SP70,VSMDDATE
            IF        !@EQUAL
              UNPACK    VSMDDATE,CCENT,CYEAR,CMON,CDAY
              MOVE      CMON,F2
              LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
              PACK      TEMPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
            ENDIF
.
            CLEAR     VISNOTES
            APPEND    TEMPDATE,VISNOTES
            APPEND    " ",VISNOTES
            APPEND    VSMDTIME,VISNOTES
            APPEND    " ",VISNOTES
            PACK      KEY10,VSMDUSER,SP70
            CALL      RDWBSE1
            IF        OVRCD<>1
              STRIP     WBSENAM
              APPEND    WBSENAM,VISNOTES
            ELSE
              APPEND    VSMDUSER,VISNOTES
            ENDIF
            APPEND    " ",VISNOTES
            APPEND    VSMDOCCG,VISNOTES
          ENDIF
.
.          MATCH     VSMDOCCG,SP70
.          IF        !@EQUAL
.            MOVE      "w0",KEY2
.            PACK      KEY5,KEY2,VSMDOCCG,SP70
.            CALL      RDCODE1
.            IF        OVRCD=1
.              APPEND    VSMDOCCG,VISNOTES
.            ELSE
.              APPEND    TDESC,VISNOTES
.            ENDIF
.          ENDIF
.
          RESET     VISNOTES
.
          STRIP     VISNOTES
          MOVELPTR  VISNOTES,LENGTH
.
          SFORMAT   VAR,LENGTH
          MOVE      VISNOTES,VAR
...       WRITE     HTMLFILE;"<b>";
          WRITE     HTMLFILE;VAR
...       WRITE     HTMLFILE;"</b>";
          SFORMAT   VAR,127
.
          PACK      KEY20,VSMDVISN,VSMDTYPE,VSMDNOTE,SP70
          CALL      RSVSMTX1
DISNOT20  CALL      RKVSMTX1
          BRANCH    OVRCD,DISNOT10
.
          MATCH     VSMDVISN,VSMTVISN
          GOTO      DISNOT10 IF NOT EQUAL
.
          MATCH     VSMDTYPE,VSMTTYPE
          GOTO      DISNOT10 IF NOT EQUAL
.
          MATCH     VSMDNOTE,VSMTNOTE
          GOTO      DISNOT10 IF NOT EQUAL
.
          STRIP     VSMTCMNT
          MOVELPTR  VSMTCMNT,LENGTH
.
          SFORMAT   VAR,LENGTH
          MOVE      VSMTCMNT,VAR
          WRITE     HTMLFILE;VAR
          IF        NOTELOCN=1
            WRITE     HTMLFILE;"<br>"
          ENDIF
          SFORMAT   VAR,127
.
          GOTO      DISNOT20
.
DISNOT99 RETURN
.
.-----------------------------------------------------------
. Write admission observation record on triage. eg Pain Score
.------------------------------------------------------------
ADDOBS00  MATCH     Z70,OBDET003           * Don't write observation if no
          GOTO      ADDOBS99 IF EQUAL      * observation type
.
          MATCH     Z70,OBDET041           * Don't write observation if no 
          GOTO      ADDOBS99 IF EQUAL      * pain score
.
          MATCH     SP70,OBDET041          * Don't write observation if pain
          GOTO      ADDOBS99 IF EQUAL      * score is blank
          GOTO      ADDOBS99 IF EOS                           
.
          MOVE      EMVIADMN,OBDEVIST
.
          MATCH     SP70,OBDET001
          IF        @EQUAL
            MOVE      EMVIDATE,OBDEDATE
          ELSE
            UNPACK    OBDET001,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00            * Set CMON from MTHNAM3
            PACK      OBDEDATE,CCENT,CYEAR,CMON,CDAY
          ENDIF
.
          MATCH     SP70,OBDET002
          IF        @EQUAL
            MOVE      EMVITIME,OBDETIME
          ELSE
            MOVE      OBDET002,OBDETIME
          ENDIF
.
          PACK      KEY24,OBDEVIST,OBDEDATE,OBDETIME
          CALL      RAOBDE1
          IF        OVRCD=1
            CALL      CLOBSDET
            UNPACK    KEY24,OBDEVIST,OBDEDATE,OBDETIME
            CALL      MOVOBS00
            PACK      OBDEMDAT,CCC,CYY,CMM,CDD
            REP       " 0",OBDEMDAT
            CLOCK     TIME,OBDEMTIM
            MOVE      USERID,OBDEUID
            CALL      WROBDE1
          ENDIF
.
ADDOBS99  RETURN
.
.------------------------------------------------------------
. Clear Basic Observation Details
.------------------------------------------------------------
CLOBSDET  MOVE      SP70,OBDEDATE
          MOVE      SP70,OBDETIME
          MOVE      SP70,OBDEVIST
          MOVE      SP70,OBDETYP
          MOVE      ZERO,OBDEPULS
          MOVE      ZERO,OBDETEMP
          MOVE      ZERO,OBDEBPSY
          MOVE      ZERO,OBDEBPDI
          MOVE      ZERO,OBDERESP
          MOVE      ZERO,OBDEPOX   * Pulse / Oximeter Sa O2
          MOVE      ZERO,OBDEO2F   * Oxygen Flow Litres per Min
          MOVE      ZERO,OBDEPFL   * Peak Flow
          MOVE      SP70,OBDEFOC   * Fluid Output Type (Cat wq)
          MOVE      SP70,OBDEFIC   * Fluid Intake Type (Cat wr)
          MOVE      ZERO,OBDEFOT   * Fluids Output
          MOVE      ZERO,OBDEFIN   * Fluid Intake
          MOVE      SP70,OBDEEYEO  * Eyes Open
          MOVE      SP70,OBDEVERB  * Best Verbal Response
          MOVE      SP70,OBDEMOTO  * Best Motor Response
          MOVE      SP70,OBDEPSL   * Pupil Size Left
          MOVE      SP70,OBDEPSR   * Pupil Size Right
          MOVE      SP70,OBDEPRL   * Pupil Reaction Left
          MOVE      SP70,OBDEPRR   * Pupil Reaction Right
          MOVE      SP70,OBDELMLA  * Limb Movement Left Arm
          MOVE      SP70,OBDELMRM  * Limb Movement Right Arm
          MOVE      SP70,OBDELMLL  * Limb Movement Left Leg
          MOVE      SP70,OBDELMRL  * Limb Movement Right Leg
          MOVE      SP70,OBDEACT   * Action/Comment Code (ws)
          MOVE      SP70,OBDEUY1   * User Def Y/N 1
          MOVE      SP70,OBDEUY2   * User Def Y/N 2
          MOVE      SP70,OBDEUY3   * User Def Y/N 3
          MOVE      SP70,OBDEUY4   * User Def Y/N 4
          MOVE      SP70,OBDEUC1   * User Def Code 1 (wt)
          MOVE      SP70,OBDEUC2   * User Def Code 2 (wu)
          MOVE      ZERO,OBDEUN1   * User Def Num 1
          MOVE      ZERO,OBDEUN2   * User Def Bum 2
          MOVE      ZERO,OBDEUN3   * User Def Num 3
          MOVE      ZERO,OBDEUN4   * User Def Num 4
          MOVE      SP70,OBDEUID   * Web User ID
          MOVE      SP70,OBDEMDAT  * Last Modified Date
          MOVE      SP70,OBDEMTIM  * Last Modified Time
          MOVE      SP70,OBDECOM1  * Comment 1
          MOVE      SP70,OBDECOM2  * Comment 2
          MOVE      SP70,OBDECOM3  * Comment 3
          MOVE      SP70,OBDEPNSC  * Pain Score (0-10)       * I CAR 10484
          MOVE      SP70,OBDECVPS  * CVP (1-8)               * I CAR 10485
          MOVE      SP70,OBDESPA   * Spare
.
          RETURN
.
.
MOVOBS00  MATCH     Z70,OBDET003
          IF        !@EQUAL
            MOVE      OBDET003,OBDETYP   *    Observation Type
          ENDIF
          MATCH     Z70,OBDET004
          IF        !@EQUAL
            SQUEEZE   OBDET004
            MOVE      OBDET004,OBDEPULS  *    Pulse
          ENDIF
          MATCH     Z70,OBDET005
          IF        !@EQUAL
            SQUEEZE   OBDET005
            MOVE      OBDET005,OBDETEMP  *    Temperature
          ENDIF
          MATCH     Z70,OBDET006
          IF        !@EQUAL
            SQUEEZE   OBDET006
            MOVE      OBDET006,OBDEBPSY  *    Blood Pressure Systolic
          ENDIF
          MATCH     Z70,OBDET007
          IF        !@EQUAL
            SQUEEZE   OBDET007
            MOVE      OBDET007,OBDEBPDI  *    Blood Pressure Diastoli
          ENDIF
          MATCH     Z70,OBDET008
          IF        !@EQUAL
            SQUEEZE   OBDET008
            MOVE      OBDET008,OBDERESP  *    Respiration
          ENDIF
          MATCH     Z70,OBDET009
          IF        !@EQUAL
            SQUEEZE   OBDET009
            MOVE      OBDET009,OBDEPOX   *    Pulse / Oximeter Sa O2
          ENDIF
          MATCH     Z70,OBDET010
          IF        !@EQUAL
            SQUEEZE   OBDET010
            MOVE      OBDET010,OBDEO2F   *    Oxygen Flow Litres per Min
          ENDIF
          MATCH     Z70,OBDET011
          IF        !@EQUAL
            SQUEEZE   OBDET011
            MOVE      OBDET011,OBDEPFL   *    Peak Flow
          ENDIF
          MATCH     Z70,OBDET012
          IF        !@EQUAL
            MOVE      OBDET012,OBDEFOC   *    Fluid Output Type (Cat wq)
          ENDIF
          MATCH     Z70,OBDET013
          IF        !@EQUAL
            MOVE      OBDET013,OBDEFIC   *    Fluid Intake Type (Cat wr)
          ENDIF
          MATCH     Z70,OBDET014
          IF        !@EQUAL
            SQUEEZE   OBDET014
            MOVE      OBDET014,OBDEFOT   *    Fluids Output
          ENDIF
          MATCH     Z70,OBDET015
          IF        !@EQUAL
            SQUEEZE   OBDET015
            MOVE      OBDET015,OBDEFIN   *    Fluid Intake
          ENDIF
          MATCH     Z70,OBDET016
          IF        !@EQUAL
            MOVE      OBDET016,OBDEEYEO  *    Eyes Open
          ENDIF
          MATCH     Z70,OBDET017
          IF        !@EQUAL
            MOVE      OBDET017,OBDEVERB  *    Best Verbal Response
          ENDIF
          MATCH     Z70,OBDET018
          IF        !@EQUAL
            MOVE      OBDET018,OBDEMOTO  *    Best Motor Response
          ENDIF
          MATCH     Z70,OBDET019
          IF        !@EQUAL
            MOVE      OBDET019,OBDEPSL   *    Pupil Size Left
          ENDIF
          MATCH     Z70,OBDET020
          IF        !@EQUAL
            MOVE      OBDET020,OBDEPSR   *    Pupil Size Right
          ENDIF
          MATCH     Z70,OBDET021
          IF        !@EQUAL
            MOVE      OBDET021,OBDEPRL   *    Pupil Reaction Left
          ENDIF
          MATCH     Z70,OBDET022
          IF        !@EQUAL
            MOVE      OBDET022,OBDEPRR   *    Pupil Reaction Right
          ENDIF
          MATCH     Z70,OBDET023
          IF        !@EQUAL
            MOVE      OBDET023,OBDELMLA  *    Limb Movement Left Arm
          ENDIF
          MATCH     Z70,OBDET024
          IF        !@EQUAL
            MOVE      OBDET024,OBDELMRM  *    Limb Movement Right Arm
          ENDIF
          MATCH     Z70,OBDET025
          IF        !@EQUAL
            MOVE      OBDET025,OBDELMLL  *    Limb Movement Left Leg
          ENDIF
          MATCH     Z70,OBDET026
          IF        !@EQUAL
            MOVE      OBDET026,OBDELMRL  *    Limb Movement Right Leg
          ENDIF
          MATCH     Z70,OBDET027
          IF        !@EQUAL
            MOVE      OBDET027,OBDEACT   *    Action/Comment Code (ws)
          ENDIF
          MATCH     Z70,OBDET028
          IF        !@EQUAL
            MOVE      OBDET028,OBDEUY1   *    User Def Y/N 1
          ENDIF
          MATCH     Z70,OBDET029
          IF        !@EQUAL
            MOVE      OBDET029,OBDEUY2   *    User Def Y/N 2
          ENDIF
          MATCH     Z70,OBDET030
          IF        !@EQUAL
            MOVE      OBDET030,OBDEUY3   *    User Def Y/N 3
          ENDIF
          MATCH     Z70,OBDET031
          IF        !@EQUAL
            MOVE      OBDET031,OBDEUY4   *    User Def Y/N 4
          ENDIF
          MATCH     Z70,OBDET032
          IF        !@EQUAL
            MOVE      OBDET032,OBDEUC1   *    User Def Code 1 (wt)
          ENDIF
          MATCH     Z70,OBDET033
          IF        !@EQUAL
            MOVE      OBDET033,OBDEUC2   *    User Def Code 2 (wu)
          ENDIF
          MATCH     Z70,OBDET034
          IF        !@EQUAL
            SQUEEZE   OBDET034
            MOVE      OBDET034,OBDEUN1   *    User Def Num 1
          ENDIF
          MATCH     Z70,OBDET035
          IF        !@EQUAL
            SQUEEZE   OBDET035
            MOVE      OBDET035,OBDEUN2   *    User Def Bum 2
          ENDIF
          MATCH     Z70,OBDET036
          IF        !@EQUAL
            SQUEEZE   OBDET036
          MOVE      OBDET036,OBDEUN3   *   User Def Num 3
          ENDIF
          MATCH     Z70,OBDET037
          IF        !@EQUAL
            SQUEEZE   OBDET037
          MOVE      OBDET037,OBDEUN4   *   User Def Num 4
          ENDIF
          MATCH     Z70,OBDET038
          IF        !@EQUAL
            MOVE      OBDET038,OBDECOM1  *   Comment 1
          ENDIF
          MATCH     Z70,OBDET039
          IF        !@EQUAL
            MOVE      OBDET039,OBDECOM2  *   Comment 2
          ENDIF
          MATCH     Z70,OBDET040
          IF        !@EQUAL
            MOVE      OBDET040,OBDECOM3  *   Comment 3
          ENDIF
          MATCH     Z70,OBDET041
          IF        !@EQUAL
            MOVE      OBDET041,OBDEPNSC  *   Pain Score (0-10) * I CAR 10484
          ENDIF
          MATCH     Z70,OBDET042
          IF        !@EQUAL
            MOVE      OBDET042,OBDECVPS  *   CVP (1-8)         * I CAR 10485
          ENDIF
          RETURN
.
.------------------------------------------------------------
. Set Parameters for Observation details
.------------------------------------------------------------
SPODS000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          STORE     QRYDATA,F3,OBDET001,OBDET002,OBDET003,OBDET004,OBDET005:
                               OBDET006,OBDET007,OBDET008,OBDET009,OBDET010:
                               OBDET011,OBDET012,OBDET013,OBDET014,OBDET015:
                               OBDET016,OBDET017,OBDET018,OBDET019,OBDET020:
                               OBDET021,OBDET022,OBDET023,OBDET024,OBDET025:
                               OBDET026,OBDET027,OBDET028,OBDET029,OBDET030:
                               OBDET031,OBDET032,OBDET033,OBDET034,OBDET035:
                               OBDET036,OBDET037,OBDET038,OBDET039,OBDET040:
                               OBDET041,OBDET042               * C CAR 10484
.                                                              * C CAR 10485
SPODS999  RETURN
.
.-----------------------------------------------------------
. Print labels from triage pages
.------------------------------------------------------------
PLAB0000  MATCH     SP70,LABELTYP      * Exit if no label type
          GOTO      PLAB9999 IF EQUAL
.
          COMPARE   ZERO,NOLABEL       * Exit if zero labels to print
          GOTO      PLAB9999 IF EQUAL
.
          MATCH     SP70,LBLPRINT      * Exit if no printer
          GOTO      PLAB9999 IF EQUAL
.
          MOVE      LBLPRINT,SELPRINT
.
          MOVE      ZERO,UNIQF5
          PACK      KEY5,Z70
          CALL      RSEMLP1
          CALL      RPEMLP1
          BRANCH    OVRCD,PLAB1000
.
          MOVE      EMLPUNI,UNIQF5
PLAB1000  ADD       ONE,UNIQF5
          MOVE      EMVIURNO,EMLPURN
          MOVE      EMVIADMN,EMLPADM
          MOVE      LBLPRINT,EMLPLPN
          MOVE      SP70,EMLPFPN
          MOVE      NOLABEL,EMLPCNO
          MOVE      STATNCOD,EMLPSTC
          MOVE      ONE,EMLPREP
          MOVE      LABELTYP,EMLPLTY
          MOVE      PASSCODE,EMLPPSC
.
          MOVE      UNIQF5,KEY5
          MOVE      UNIQF5,EMLPUNI
          CALL      RAEMLP1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WREMLP1
            TRAPCLR   IO
            BRANCH    OVRCD,PLAB1000
          ENDIF
.
          MOVE      REPORTNO,SAVEREPT
          MOVE      ONE,REPORTNO
          MOVE      "EMRTLBLS",PRGID
.         
          CALL      UPDFPL00                * Save printer defaults
          MOVE      SAVEREPT,REPORTNO
          MOVE      "EMRWEB02",PRGID
.
PLAB9999  RETURN
.
.-----------------------------------------------------------
. Print forms from triage pages
.------------------------------------------------------------
PFRM0000  MATCH     SP70,STATNCOD           * Any forms to print
          GOTO      PFRM6000 IF EQUAL
.
          COMPARE   ZERO,NOLABELF           * Exit if zero copies
          GOTO      PFRM6000 IF EQUAL
.
          MATCH     SP70,FRMPRINT           * Exit if not printer
          GOTO      PFRM6000 IF EQUAL
.
          MOVE      NOLABELF,NOLABEL        * Set up number of forms to print
          MOVE      FRMPRINT,SELPRINT       * set up printer
.
          MOVE      REPORTNO,SAVEREPT
          MOVE      TWO,REPORTNO
.
          CALL      TADLP000                * Schedule form to print
          MOVE      "EMRTFRMS",PRGID
.
          CALL      UPDFPF00                * Save printer defaults
          MOVE      SAVEREPT,REPORTNO
          MOVE      "EMRWEB02",PRGID
.
PFRM6000  MATCH     SP70,STATNCD6           * Any forms to print
          GOTO      PFRM9999 IF EQUAL
.
          COMPARE   ZERO,NOLABLF6           * Exit if zero copies
          GOTO      PFRM9999 IF EQUAL
.
          MATCH     SP70,FRMPRNT6           * Exit if not printer
          GOTO      PFRM9999 IF EQUAL
.
          MOVE      STATNCD6,STATNCOD
          MOVE      NOLABLF6,NOLABEL        * Set up number of forms to print

          MOVE      FRMPRNT6,FRMPRINT       * set up printer
          MOVE      FRMPRINT,SELPRINT       * set up printer
.
          MOVE      REPORTNO,SAVEREPT
          MOVE      TWO,REPORTNO
.
          CALL      TADLP000                * Schedule form to print
          MOVE      "EMRTFRMS",PRGID
.
          MOVE      SIX,REPORTNO
          CALL      UPDFPF00                * Save printer defaults
          MOVE      SAVEREPT,REPORTNO
          MOVE      "EMRWEB02",PRGID
.
PFRM9999  RETURN
.
.-----------------------------------------------------------
. If supervisor screen used to update triage cat 1 arrival
. date/time then update doctor seen date/time
.------------------------------------------------------------
SUPD0000  MATCH     "ERROR",UPDTTYPE        * Supervisor screen
          GOTO      SUPD9999 IF NOT EQUAL
.
          MATCH     SP70,EMVIDOCT           * Exit if no doctor allocated
          GOTO      SUPD9999 IF EQUAL
.
          MATCH     "1",EMVITRIG            * Triage category code 1
          GOTO      SUPD9999 IF NOT EQUAL
.
          MATCH     EMVIDATE,EMVIDRDT       * Arrival date / Seen date
          GOTO      SUPD5000 IF NOT EQUAL
.
          MATCH     EMVITIME,EMVIDRTM       * Arrival time / Seen time
          GOTO      SUPD5000 IF NOT EQUAL
.
          GOTO      SUPD9999                
.
SUPD5000  CALL      SUPDT000                * Change doctor seen date and time
.
SUPD9999  RETURN
.
.-----------------------------------------------------------
. Change doctor seen date and time from supervisor update of
. arrival date and time
.------------------------------------------------------------
SUPDT000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,SUPDT999
.
SUPDT100  MOVE      EMVIDATE,EMVIDRDT       * seen date
          MOVE      EMVITIME,EMVIDRTM       * seen time
.
          MATCH     SP70,EMVIATNS
          IF        !@EQUAL
            MOVE      EMVIDATE,EMVINSDT     * nurse date
            MOVE      EMVITIME,EMVINSTM     * nurse time
          ENDIF
.
          IF        CALCWAIT=1
            CALL      UPDURT00              * recalculate waiting time for
            MOVE      WAITTIME,EMVIDURN     * update discharge
.
            MOVE      EMVIADMN,KEY8
            CALL      RDDETA1
            IF        OVRCD=0
              MOVE      WAITTIME,ADADURN      * update waiting duration
              CALL      UPDETA1               * update a&e details record
            ENDIF
          ENDIF
.
          CALL      UPEMVIS1
.
          CALL      SUPHIS00          * Change doctor seen date and time
.                                     * in the first history records
SUPDT999  RETURN
.
.------------------------------------------------------------
. Change the doctor date and time in the history file
.------------------------------------------------------------
SUPHIS00  MATCH     SP70,EMVIDOCT
          GOTO      SUPHIS99 IF EQUAL
.
          MATCH     SP70,EMVIDRDT
          GOTO      SUPHIS99 IF EQUAL
.
          MATCH     SP70,EMVIDRTM
          GOTO      SUPHIS99 IF EQUAL
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
SUPHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,SUPHIS99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      SUPHIS99 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          IF        @EQUAL
            MOVE      EMHIDOC,SAVEDOCT
            GOTO      SUPHIS60
          ENDIF
.
          GOTO      SUPHIS10
.
SUPHIS50  CALL      RKEMHIS1
          BRANCH    OVRCD,SUPHIS99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      SUPHIS99 IF NOT EQUAL
.
          MATCH     SAVEDOCT,EMHIDOC
          GOTO      SUPHIS99 IF NOT EQUAL
.
SUPHIS60  MOVE      EMVIDRDT,EMHIDSD
          UNPACK    EMVIDRTM,HOUR,D1,MIN,D1,SEC
          PACK      EMHIDST,HOUR,MIN,SEC
.
          CALL      UPEMHIS1
.
          GOTO      SUPHIS50
.
SUPHIS99  RETURN
.
.-----------------------------------------------------------------------------
.         If patient changed to non-comp. claim, delete any claim details
.-----------------------------------------------------------------------------
.
.         Set the claim type indicator if this is a claim
.
DOCLMN00  MATCH     "1",PTCNXCOM              * if using Extra Compensation
          IF        @EQUAL
            CALL      CPRA0000                * check if we need to update PRFA
            CALL      CIND0000           * Check prefix for Deceased patient
            GOTO      DOCLMN99
          ENDIF
.
          MOVE      SP70,TYPCLAIM
          PACK      KEY5,CODECL,EMVICOMP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,DOCLMN99
.
.         Check the indicators for a W, M, or V (these are the claims)
.
          MOVE      ZERO,FORM2
DOCLMN10  ADD       ONE,FORM2
          COMPARE   SIX,FORM2
          GOTO      DOCLMN90 IF NOT LESS
.
          LOAD      ANS,FORM2,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
          CMATCH    "W",ANS
          IF        @EQUAL
            MOVE      ANSW,TYPCLAIM
            GOTO      DOCLMN99
          ENDIF
.
          CMATCH    "M",ANS
          IF        @EQUAL
            MOVE      ANSM,TYPCLAIM
            GOTO      DOCLMN99
          ENDIF
.
          CMATCH    "V",ANS
          IF        @EQUAL
            GOTO      DOCLMN99
          ENDIF
.
          CMATCH    "D",ANS
          IF        @EQUAL
            MOVE      ANSD,TYPCLAIM
            GOTO      DOCLMN99
          ENDIF
.
          CMATCH    "C",ANS
          GOTO      DOCLMN99 IF EQUAL
          GOTO      DOCLMN10
.
DOCLMN90  OPEN      PATWC1A1,"patwc1af"
          OPEN      PATWC1A2,"patwc1af"
          OPEN      PMSWX1A1,"pmswx1af"
          OPEN      PATWMAB1,"patwmabf"
          OPEN      PATWVET1,"patwvetf"
.
          CALL      DEWCOM00         * Delete Workers Comp.
          CALL      DEWMAB00         * Delete TAC
          CALL      DEWVET00         * Delete Veteran affairs
.
DOCLMN99  RETURN
+
.------------------------------------------------------------
.         Check if we need to update PRFA
.------------------------------------------------------------
CPRA0000  PACK      EMVICOMP,EMVICOMP,SP70
          MATCH     SP70,EMVICOMP
          GOTO      CPRA9999 IF EQUAL
.
          PACK      KEY5,ANSC,ANSL,EMVICOMP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CPRA9999
.
          MOVE      SP70,DIM1
          MOVE      TCINDC1,DIM1
          REP       "P~J~ ~",DIM1
          MATCH     "~",DIM1
          GOTO      CPRA9999 IF NOT EQUAL    * Not Public
.
          MOVE      "2",KEY1                 * Postal Address
          CALL      DADR0000
          BRANCH    EXIT,CPRA2000
.
          MOVE      SP1,ANS
          MOVE      PGNAME,PTREGNAM
          MOVE      PTMASNAM,PTRESNAM
          MOVE      PGNAME,ANS
          PACK      PKNAME,PTITL,SP1,ANS,DOT,PTMASNAM,SP70
          MOVE      PMCEADD1,PKADD1
          MOVE      PMCEADD2,PKADD2
          MOVE      PMCEADD3,PKSUBR
          MOVE      PMCEADD4,PKADD4
          MOVE      PMCEPOST,PKPOST
          MOVE      PMCETELB,PKTELEB
          MOVE      PMCERELP,PKRELP
          MOVE      PMCETELP,PKTELEP
          MOVE      PMCETELM,PTREMOBL
          MOVE      EMVIADMN,PKADMN
          CALL      PARN0000                  * Check for 'Parent of'
.
          PACK      KEY8,EMVIADMN,SP10
          CALL      RDARESP1
          IF        OVRCD=1
            CALL      WRRESP1
          ELSE
            CALL      UPRESP1
          ENDIF
          GOTO      CPRA9999
.
CPRA2000  CALL      PRAD0000           * write to person responsible file
CPRA9999  RETURN
+
.*******************************************************************************
.  PRAD0000  :  Write the Person Responsible for Account Details for RCH
.*******************************************************************************
PRAD0000  MOVE      ZERO,F1
          MOVE      PMPXCONP,F1
          BRANCH    F1,PRAD1000,PRAD2000,PRAD3000,PRAD4000,PRAD5000
.
. patient is responsible for account
.
          MOVE    PTMASNAM,PACSNAMX
          MOVE    PGNAME,ANS
          PACK    PACGNAME,ANS,DOT
          MOVE    PTITL,PACTITLE
          MOVE    THREE,PACFRMT
          CALL    PACNAME
.
          MOVE    EMVIADMN,PKADMN
          MOVE    PACFNAMX,PKNAME
          MOVE    PADD1,PKADD1
          MOVE    PADD2,PKADD2
          MOVE    PSUBRB,PKSUBR
          MOVE    PADD4,PKADD4
          MOVE    PPOST,PKPOST
          MOVE    PTELEP,PKTELEP
          MOVE    PTELEB,PKTELEB
          MOVE    "SELF      ",PKRELP
.
          CALL    PARN0000                  * Check for 'Parent of'
.
          GOTO    PRAD7000
.
. contact 1 is responsible for account
.
PRAD1000  MOVE    EMVIADMN,PKADMN
          MOVE    PMPXMSNA,PACSNAMX
          MOVE    PMPXMGNA,ANS
          PACK    PACGNAME,ANS,DOT
          MOVE    PMPXMTLE,PACTITLE
          MOVE    THREE,PACFRMT
          CALL    PACNAME
.
          MOVE    PACFNAMX,PKNAME
          MOVE    PMPXMAD1,PKADD1
          MOVE    PMPXMAD2,PKADD2
          MOVE    PMPXMAD3,PKSUBR
          MOVE    PMPXMAD4,PKADD4
          MOVE    PMPXMPOS,PKPOST
          MOVE    PMPXMPNO,PKTELEP
          MOVE    PMPXMBNO,PKTELEB
          MOVE    PMPXMREL,PKRELP
.
          GOTO    PRAD7000
.
. contact 2 is responsible for account
.
PRAD2000  MOVE    EMVIADMN,PKADMN
          MOVE    PMPXFSNA,PACSNAMX
          MOVE    PMPXFGNA,ANS
          PACK    PACGNAME,ANS,DOT
          MOVE    PMPXFTLE,PACTITLE
          MOVE    THREE,PACFRMT
          CALL    PACNAME
.
          MOVE    PACFNAMX,PKNAME
          MOVE    PMPXFAD1,PKADD1
          MOVE    PMPXFAD2,PKADD2
          MOVE    PMPXFAD3,PKSUBR
          MOVE    PMPXFAD4,PKADD4
          MOVE    PMPXFPOS,PKPOST
          MOVE    PMPXFPNO,PKTELEP
          MOVE    PMPXFBNO,PKTELEB
          MOVE    PMPXFREL,PKRELP
.
          GOTO    PRAD7000
.
. contact 3 is responsible for account
.
PRAD3000  MOVE    EMVIADMN,PKADMN
          MOVE    PNKNAME,PKNAME
          MOVE    PNKADD1,PKADD1
          MOVE    PNKADD2,PKADD2
          MOVE    PNKSUBR,PKSUBR
          MOVE    PNKADD4,PKADD4
          MOVE    PNKPOST,PKPOST
          MOVE    PNKTELP,PKTELEP
          MOVE    PNKTELB,PKTELEB
          MOVE    PNKRELP,PKRELP
.
          GOTO    PRAD7000
.
. contact 4 is responsible for account
.
PRAD4000  MOVE    EMVIADMN,PKADMN
          MOVE    PTMXECNM,PKNAME
          MOVE    PTMXECA1,PKADD1
          MOVE    PTMXECA2,PKADD2
          MOVE    PTMXECA3,PKSUBR
          MOVE    PTMXECA4,PKADD4
          MOVE    PTMXECPC,PKPOST
          MOVE    PTMXECPP,PKTELEP
          MOVE    PTMXECBP,PKTELEB
          MOVE    PTMXECRE,PKRELP
.
          GOTO    PRAD7000
.
. contact 5 is responsible for account
.
PRAD5000  MOVE    EMVIADMN,PKADMN
          MOVE    PTMXNRNM,PKNAME
          MOVE    PTMXNRA1,PKADD1
          MOVE    PTMXNRA2,PKADD2
          MOVE    PTMXNRA3,PKSUBR
          MOVE    PTMXNRA4,PKADD4
          MOVE    PTMXNRPC,PKPOST
          MOVE    PTMXNRPP,PKTELEP
          MOVE    PTMXNRBP,PKTELEB
          MOVE    PTMXNRRE,PKRELP
.
          GOTO    PRAD7000
.
PRAD7000  PACK    KEY8,EMVIADMN,SP10
          CALL    RDARESP1
          IF      OVRCD=1
            CALL    WRRESP1
          ELSE
            CALL    UPRESP1
          ENDIF
.
PRAD9500  MOVE      ZERO,EXIT
.
PRAD9999  RETURN
+
.***********************************************************************
.        Check for Using 'Parent of' option
.***********************************************************************
PARN0000 COMPARE   ONE,PTCNPAOF              * Using 'Parent of' option?
         GOTO      PARN9999 IF NOT EQUAL     * no
.
         PACK      AGEDATE,CCC,CYY,CMM,CDD
         CALL      CALCAGE                   * CALCAGE uses PBDATE
         COMPARE   PSAGEYRS,CAGECOFF         * Child?
         GOTO      PARN9999 IF LESS          * No
.
         UNPACK    PGNAME,ANS
         PACK      PKNAME,SP70
         CLEAR     PKNAME
         APPEND    "Parent of ",PKNAME
         APPEND    ANS,PKNAME
         APPEND    DOT,PKNAME
         APPEND    SP1,PKNAME
         APPEND    PTMASNAM,PKNAME
         APPEND    SP70,PKNAME
         RESET     PKNAME
         MOVE      "Parent    ",PKRELP
.
PARN9999 RETURN
+
.------------------------------------------------------------------------------
.         Check claim code indicator17 - No prefix for Deceased patient
.------------------------------------------------------------------------------
CIND0000  COMPARE   ONE,PCEASE
          GOTO      CIND9999 IF NOT EQUAL
.
          MATCH     "1",PTCNDEES
          GOTO      CIND9999 IF NOT EQUAL
          MATCH     SP70,PTCNDDES
          GOTO      CIND9999 IF EQUAL
.
          MOVE      ADMISSNO,KEY8
          CALL      RDRESP1
          BRANCH    OVRCD,CIND9999
.
          MATCH     "Parent of",PKNAME
          GOTO      CIND9999 IF EQUAL          * No prefix
.
          MATCH     SP70,EMVICOMP
          GOTO      CIND9000 IF EQUAL
.
          PACK      KEY5,ANSC,ANSL,EMVICOMP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CIND9000
.
.         The following Claim codes don't have pmsextaf record
.
          MATCH     "H",TCINDC1
          GOTO      CIND9999 IF EQUAL          * Private - No prefix
          MATCH     SP70,TCINDC1
          GOTO      CIND2000 IF EQUAL          * Blank
          MATCH     "J",TCINDC1
          GOTO      CIND2000 IF EQUAL          * Private Uninsured
          MATCH     "P",TCINDC1
          GOTO      CIND2000 IF EQUAL          * Public/All Funding Source
.
          PACK      KEY11,ADMISSNO,EMVICOMP,SP70
          CALL      RDPMEXT1
          BRANCH    OVRCD,CIND9000
.
.         INDIC1=Blank,O,E,G,J,P & INDIC17=Blank -Proceed with the Estate prefix
.
          MATCH     "O",TCINDC1
          GOTO      CIND1000 IF EQUAL          * Compsensable
          MATCH     "E",TCINDC1
          GOTO      CIND1000 IF EQUAL          * Overseas Student
          MATCH     "G",TCINDC1
          GOTO      CIND1000 IF EQUAL          * Overseas Visitor
.
          MATCH     "V",TCINDC1
          GOTO      CIND1000 IF EQUAL          * Veterans Affairs
.
.         INDIC1=A,F,M,H,S,W & INDIC17=D - Ignore the Estate prefix
.
          MATCH     "A",TCINDC1
          GOTO      CIND3200 IF EQUAL          * ADF
          MATCH     "F",TCINDC1
          GOTO      CIND3200 IF EQUAL          * Foreign Defence
          MATCH     "M",TCINDC1
          GOTO      CIND3200 IF EQUAL          * Motor Vehicle
          MATCH     "S",TCINDC1
          GOTO      CIND9999 IF EQUAL          * Shipping
          MATCH     "W",TCINDC1
          GOTO      CIND9999 IF EQUAL          * Workers Compensation
          GOTO      CIND9000
.
CIND1000
          MATCH     "O",TCINDC1
          GOTO      CIND2000 IF NOT EQUAL
.
.         If Billing address is not blank, No Prefix
.
          MATCH     "1",PMEXPOLC
          GOTO      CIND9999 IF EQUAL         * Police Officer checked(NoPrefix)
.
          MATCH     SP70,PMEXICOD
          GOTO      CIND9999 IF NOT EQUAL     * Insurance Code entered(NoPrefix)
.
CIND2000  MATCH     SP70,TCINDC17
          GOTO      CIND9000 IF EQUAL          * Proceed with the prefix
          GOTO      CIND9999
.
.------------------------------------------------------------------------------
.         ADF,Motor Vehicle,Foreign Defence
.
CIND3200  MATCH     SP70,PMEXICOD
          GOTO      CIND9999 IF NOT EQUAL      * has Insurance details
          MATCH     SP70,PMEXCAD1
          GOTO      CIND5000 IF NOT EQUAL
          GOTO      CIND9999
.
CIND5000  MATCH     "D",TCINDC17
          GOTO      CIND9000 IF NOT EQUAL      * Proceed with the prefix
          GOTO      CIND9999
.
CIND9000  MATCH     SP70,PKNAME
          GOTO      CIND9999 IF EQUAL
.
          SCAN      PTCNDDES,PKNAME
          GOTO      CIND9999 IF EQUAL          * already has prefix
.
          UNPACK    PKNAME,KEY80
          STRIP     PTCNDDES
          MOVE      PTCNDDES,KEY20
.
          PACK      PKNAME,KEY20,SP1,KEY80,SP30
          CALL      UPPTRES1
.
CIND9999  RETURN
+
.-----------------------------------------------------------------------------
.         Delete Workers comp. details
.-----------------------------------------------------------------------------
.
DEWCOM00  COMPARE   ONE,PTCNHDPS           * Is it for NZ?
          GOTO      DEWCOM10 IF NOT EQUAL  * Not NZ; proceed to delete WC record
.
          MOVE      EMVIURNO,CHWCURNO
          MOVE      EMVIADMN,CHWCADMN
          PROC      CHKWCCLM           * check for multiple WC claims records
          BRANCH    EXIT,DEWCOM10
.
.         Only one record with the ACC number, so we just update the
.         Claim Status to "Cancelled" instead of deleting the patwc1af record.
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMWX11
          BRANCH    OVRCD,DEWCOM99
.
          MOVE      THREE,PMWXCSTA     * set Claim Status to "Cancelled"
          CALL      UPPMWX11
          MATCH     "0",ACCAUDCK
          IF        @EQUAL
            CALL      MVACCREM           * Add record ACC Audit file
          ENDIF
          GOTO      DEWCOM99
.
DEWCOM10  MOVE      EMVIADMN,KEY8
          CALL      RDWCOM1
          COMPARE   ZERO,OVRCD
          IF        @EQUAL
            IF        PTCNHDPS=1 
              MATCH     "0",ACCAUDCK
              IF        @EQUAL
                CALL      MVACCREM           * Add record ACC Audit file
              ENDIF
            ENDIF
            CALL      DEWCOM1                    * delete patwc1af record
.
.           If we are sending ACC details in PV1-20, then we need to
.           trigger an A08 message for the visit to reflect that this is
.           no longer an ACC patient
.
            MATCH     "1",PTCNH7AC
            IF        @EQUAL
              CALL      PMIGTNID               * get national id for dgate write
              MOVE      NMPNUMB,PTNINMPI
              MOVE      TWENTY2,HL7TRGID
              MOVE      SP8,HL7INCLD
              PROC      DGCLICEC                 * send update emr details
            ENDIF
          ENDIF
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMWX11
          COMPARE   ZERO,OVRCD
          CALL      DEPMWX11 IF EQUAL
.
DEWCOM99  RETURN
+
.-----------------------------------------------------------------------------
.         Delete TAC details
.-----------------------------------------------------------------------------
.
DEWMAB00  MOVE      EMVIADMN,KEY8
          CALL      RDWMAB1
          COMPARE   ZERO,OVRCD
          CALL      DEWMAB1 IF EQUAL
.
DEWMAB99  RETURN
+
.-----------------------------------------------------------------------------
.         Delete Defence Force details
.-----------------------------------------------------------------------------
.
DEPMEX00  PACK      KEY11,EMVIADMN,EMVICOMP,SP70
          CALL      RDPMEXT1
          COMPARE   ZERO,OVRCD
          CALL      DEPMEXT1 IF EQUAL
.
DEPMEX99  RETURN
+
.-----------------------------------------------------------------------------
.         Delete Veteran Affairs details
.-----------------------------------------------------------------------------
.
DEWVET00  MOVE      EMVIADMN,KEY8
          CALL      RDWVET1
          COMPARE   ZERO,OVRCD
          CALL      DEWVET1 IF EQUAL
.
DEWVET99  RETURN
.-----------------------------------------------------------------------------
. Add record to ACC Audit file when patient changed to non-comp. claim
.-----------------------------------------------------------------------------
MVACCREM  MOVE      ONE,ACCAUDCK
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDWCOM1
          BRANCH    OVRCD,MVACCR99
.
          CALL      CLACCAUD
          MATCH     WCCLMNO,Z70
          IF        !@EQUAL
            MOVE      WCCLMNO,ACAUCLMN              * Claim Number
          ENDIF
.
          CALL      IBACLOCK
          PACK      ACAUDATE,CCC,CYY,CMM,CDD        * Date
          REP       " 0",ACAUDATE
          MOVE      CTIMEIS,ACAUTIME
          MOVE      USERID,ACAUWUID                 * Web UserId
.
          MATCH     ADMISSNO,Z70
          IF        !@EQUAL
            MOVE      ADMISSNO,ACAUADMN             * Admission No
          ENDIF
.
          MOVE      "D",ACAUAUTY                    * Audit Type
          MOVE      "A",ACAUTREC                    * ACC Type of Record
.
MVACCR10  PACK      KEY54,ACAUCLMN,ACAUADMN,ACAUDATE,ACAUTIME,ACAUWUID
          CALL      RAACAUD1
          IF        OVRCD=1
            CALL      WRACAUD1
            GOTO      MVACCR99
          ELSE
            CALL      IBACLOCK                    * Set new date and time and
            PACK      ACAUDATE,CCC,CYY,CMM,CDD    * try write again
            REP       " 0",ACAUDATE
            CLOCK     TIME,CTIMEIS
            PACK      ACAUTIME,CTIMEIS
            REP       " 0",ACAUTIME
            GOTO      MVACCR10
          ENDIF
.
MVACCR99  RETURN
.-----------------------------------------------------------------------------
.         Default the presenting complaint from the expected patient cgi vars
.         when doing a registration and a matching expected patient was found
.-----------------------------------------------------------------------------
PCOM0000  COMPARE   ZERO,PRECOMFL           * This can only happen if there
          GOTO      PCOM9999 IF NOT EQUAL   * was no presenting complaint
.                                           * textarea on the screen
          MATCH     SP70,EMEXP007
          IF        !@EQUAL
            MOVE      EMEXP007,EMVIUC20
          ENDIF
.
          MATCH     SP70,EMEXP008
          IF        !@EQUAL
            MOVE      EMEXP008,EMVICOM1
          ENDIF
.
          MATCH     SP70,EMEXP009
          IF        !@EQUAL
            MOVE      EMEXP009,EMVICOM2
          ENDIF
.
          MATCH     SP70,EMEXP010
          IF        !@EQUAL
            MOVE      EMEXP010,EMVICOM3
          ENDIF
.
          MATCH     SP70,EMEXP011
          IF        !@EQUAL
            MOVE      EMEXP011,EMVICOM4
          ENDIF
.
          MATCH     SP70,EMEXP012
          IF        !@EQUAL
            MOVE      EMEXP012,EMVICOM5
          ENDIF
.
          MATCH     SP70,EMEXP013
          IF        !@EQUAL
            MOVE      EMEXP013,EMVICOM6
          ENDIF
.
PCOM9999  RETURN
.
.------------------------------------------------------------
. Redirect top of map frame with alert
.------------------------------------------------------------
MENRED00  CALL      OPENHTML
          BRANCH    EXIT,MENRED90
.
          MATCH     "1",PTCNUFFR
          IF        @EQUAL
            WRITE     HTMLFILE;"<script type=#"text/javascript#" ":
                               "src=#"../js/Standard.js#"></script>":
                               "<script type=#"text/javascript#"> {":
                               " alert(#"",WEBTITLE,"#");":
            " getTop().menu.EmergencyFrameLink(#"",REDIRECT,"#",0,0,1008,521);":
                               "}":
                               "</script>"
          ELSE
            WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                               " alert(#"",WEBTITLE,"#");":
                 " top.menu.EmergencyFrameLink(#"",REDIRECT,"#",0,0,1008,521);":
                               "}":
                               "</script>"
          ENDIF
.
          CALL      CLOSHTML
          GOTO      MENRED99
.
MENRED90  DISPLAY   "*** Fifo Not Found ***"
.
MENRED99  RETURN
.
.------------------------------------------------------------
.  Redirect URL + error to top.content
.------------------------------------------------------------
RCTREC00  CALL      OPENHTML
          BRANCH    EXIT,RCTREC99
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#" ":
                             "src=#"../js/Standard.js#"></script>":
                             "<script type=#"text/javascript#" ":
                             "src=#"../js/Custom.js#"></script>":
                             "<script type=#"text/javascript#"> ":
                             " redirectTopContent(#"",REDIRECT,"#"); ":
                             "</script>";

.
          CALL      CLOSHTML
          GOTO      RCTREC99

RCTREC90  DISPLAY   "*** Fifo Not Found ***"
.
RCTREC99  RETURN
+
.-----------------------------------------------------------
. Get the first seen by doctors 
.------------------------------------------------------------
FDOC0000  UNPACK    DIM127,D1,KEY1,DIM127   * First seen by doctor
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          BRANCH    F1,FDOC5000,FDOC8000
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
FDOC1000  CALL      RKEMHIS1
          BRANCH    OVRCD,FDOC9999
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      FDOC9999 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      FDOC1000 IF NOT EQUAL
.
          WRITE     HTMLFILE;EMHIDOC;            * Doctor Code
          GOTO      FDOC9999
.
FDOC5000  PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
FDOC5500  CALL      RKEMHIS1
          BRANCH    OVRCD,FDOC9999
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      FDOC9999 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      FDOC5500 IF NOT EQUAL
.
          BRANCH    EMCNDOCT,FDOC7000
.
          PACK      KEY6,EMHIDOC,SP70
          CALL      RDDOCT1
          BRANCH    OVRCD,FDOC9999
.
          COMPARE   "1",PTCNHDPS
          IF        @EQUAL
            READ      CONTROLF,EIGHTY9;*144,EMCNDOCT
            COMPARE   "0",EMCNDOCT
            IF        @EQUAL
              MOVE      DTITL,FMTTITLE
              MOVE      DGNAME,FMTGNAME
              MOVE      DSNAME,FMTSNAME
              STRIP     FMTTITLE
              STRIP     FMTGNAME
              STRIP     FMTSNAME
              CALL      DOCNM000
              WRITE     HTMLFILE;DOCFNAME;
              GOTO      FDOC9999
            ENDIF
          ENDIF
.
          PACK      KEY60,DTITL,SP1,DGNAME,SP1,DSNAME  * Doctor's name
          WRITE     HTMLFILE;KEY60;
.
          GOTO      FDOC9999
.
FDOC7000  PACK      KEY10,EMHIDOC,SP70
          CALL      RDEMDO1
          BRANCH    OVRCD,FDOC9999
.
          WRITE     HTMLFILE;EMDODNM;            * emergency doctor name
          GOTO      FDOC9999
.
FDOC8000  PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
FDOC8100  CALL      RKEMHIS1
          BRANCH    OVRCD,FDOC9999
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      FDOC9999 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      FDOC8100 IF NOT EQUAL
.
          UNPACK    EMHIDSD,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          UNPACK    EMHIDST,HOUR,MIN,SEC
.
          WRITE     HTMLFILE;EMHIDOC:
                             CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                             HOUR,COLON,MIN,COLON,SEC;
          GOTO      FDOC9999
.
FDOC9999  RETURN
+
.------------------------------------------------------------
.         Get the Last Seen Doctor (code/name)
.------------------------------------------------------------
LDOC0000  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
LDOC1000  CALL      RPEMHIS1
          BRANCH    OVRCD,LDOC9999
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      LDOC9999 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      LDOC1000 IF NOT EQUAL
.
          BRANCH    F1,LDOC2000             * Get Doctor Name
.
          WRITE     HTMLFILE;EMHIDOC;       * Doctor Code
          GOTO      LDOC9999
.
LDOC2000  BRANCH    EMCNDOCT,LDOC3000       * Use patdo1af or emrdocaf file ?
.
          PACK      KEY6,EMHIDOC,SP70
          CALL      RDDOCT1
          BRANCH    OVRCD,LDOC9999
.
          COMPARE   "1",PTCNHDPS
          IF        @EQUAL
            READ      CONTROLF,EIGHTY9;*144,EMCNDOCT
            COMPARE   "0",EMCNDOCT
            IF        @EQUAL
              MOVE      DTITL,FMTTITLE
              MOVE      DGNAME,FMTGNAME
              MOVE      DSNAME,FMTSNAME
              STRIP     FMTTITLE
              STRIP     FMTGNAME
              STRIP     FMTSNAME
              CALL      DOCNM000
              WRITE     HTMLFILE;DOCFNAME;
              GOTO      LDOC9999
            ENDIF
          ENDIF
.
          STRIP     DTITL
          STRIP     DGNAME
          STRIP     DSNAME
          PACK      KEY60,DTITL,SP1,DGNAME,SP1,DSNAME      * Doctor's name
          WRITE     HTMLFILE;KEY60;
.
          GOTO      LDOC9999
.
LDOC3000  PACK      KEY10,EMHIDOC,SP70
          CALL      RDEMDO1
          BRANCH    OVRCD,LDOC9999
.
          WRITE     HTMLFILE;EMDODNM;       * Emergency doctor's name
          GOTO      LDOC9999
.
LDOC9999  RETURN
+
.------------------------------------------------------------
. Get the first seen by nurse
.------------------------------------------------------------
FNUR0000  UNPACK    DIM127,D1,KEY1,DIM127   * First seen by nurse
          MOVE      ZERO,F1
          MOVE      KEY1,F1
          BRANCH    F1,FNUR5000,FNUR8000
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
FNUR1000  CALL      RKEMHIS1
          BRANCH    OVRCD,FNUR9999
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      FNUR9999 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      FNUR1000 IF NOT EQUAL
.
          WRITE     HTMLFILE;EMHINUR;            * Nurse Code
          GOTO      FNUR9999
.
FNUR5000  PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
FNUR5500  CALL      RKEMHIS1
          BRANCH    OVRCD,FNUR9999
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      FNUR9999 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      FNUR5500 IF NOT EQUAL
.         
          MATCH     "1",EMCNURSE                 * Use pmshcpaf for ED Nurse?
          GOTO      FNUR5510 IF EQUAL            * Yes
.
.         CONTROL.EMCNURSE=0 - Use oprnuraf for nurse
          PACK      KEY6,EMHINUR,SP70
          CALL      RDOPNUR1
          BRANCH    OVRCD,FNUR9999
.
          SQUEEZE   OPNRSNAM
          SQUEEZE   OPNRGNAM
          PACK      KEY60,OPNRGNAM,SP1,OPNRSNAM
          WRITE     HTMLFILE;KEY60;
          GOTO      FNUR9999
.
.         CONTROL.EMCNURSE=1 - Use pmshcpaf for nurse
FNUR55100 PACK      KEY10,EMHINUR,SP70
          CALL      RDPMHCP1
          BRANCH    OVRCD,FNUR9999
.
          SQUEEZE   PMHCSNAM
          SQUEEZE   PMHCGNAM
          PACK      KEY60,PMHCSNAM,SP1,PMHCGNAM
          WRITE     HTMLFILE;KEY60;
          GOTO      FNUR9999
.
FNUR8000  PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
FNUR8100  CALL      RKEMHIS1
          BRANCH    OVRCD,FNUR9999
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      FNUR9999 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      FNUR8100 IF NOT EQUAL
.
          UNPACK    EMHINSD,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          UNPACK    EMHINST,HOUR,MIN,SEC
.
          WRITE     HTMLFILE;EMHINUR:
                             CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                             HOUR,COLON,MIN,COLON,SEC;
          GOTO      FNUR9999
.
FNUR9999  RETURN
+
.------------------------------------------------------------
.         Get the Last Seen Nurse (code/name)
.------------------------------------------------------------
LNUR0000  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
LNUR1000  CALL      RPEMHIS1
          BRANCH    OVRCD,LNUR9999
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      LNUR9999 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      LNUR1000 IF NOT EQUAL
.
          BRANCH    F1,LNUR2000             * Get Nurse Name
.
          WRITE     HTMLFILE;EMHINUR;       * Nurse Code
          GOTO      LNUR9999
.
LNUR2000  PACK      KEY6,EMHINUR,SP70
          CALL      RDOPNUR1
          BRANCH    OVRCD,LNUR9999
.
          SQUEEZE   OPNRSNAM
          SQUEEZE   OPNRGNAM
          PACK      KEY60,OPNRGNAM,SP1,OPNRSNAM
          WRITE     HTMLFILE;KEY60;
.
LNUR9999  RETURN
+
.*****************************************************************************
.*  NXTV0000 Next emergency patient redirect tag. 
.*  This tag will return a url of the next emergency patient by date/time 
.*  after this admissno
.*****************************************************************************
          DEFPROC   NXTV0000
.
          INC       EMRVISFD/INC
          OPEN      EMRVISA1,"emrvisaf"
          OPEN      EMRVISA4,"emrvisaf"
.
          UNPACK    DIM127,D1,DIM8,DIM127
          UNPACK    DIM127,D1,DIM2,DIM127
          UNPACK    DIM127,D1,DIM3,DIM127
.
          PACK      KEY10,USERID
          CALL      RDWBSE1
          IF        OVRCD=1
            MOVE      SP70,WBSEESC
          ENDIF
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,NXTV9000
.
          MOVE      EMVIDATE,KEY8
.
          PACK      KEY24,EMVIDATE,EMVITIME,EMVIADMN,SP70
          CALL      RSEMVIS4           * Position with exact key to skip
NXTV1000  CALL      RKEMVIS4           * current emergency visit
          BRANCH    OVRCD,NXTV9000
.
          MATCH     KEY8,EMVIDATE
          GOTO      NXTV9000 IF NOT EQUAL
.
          MATCH     EMVISITE,WBSEESC
          GOTO      NXTV1000 IF NOT EQUAL
.
          REP       " +",EMVIURNO
          REP       " +",DEMVIADM
.
          WRITE     HTMLFILE;DIM8,".pbl?reportno=",DIM2:
                                 "&template=",DIM3:
                                 "&urnumber=",EMVIURNO:
                                 "&admissno=",DEMVIADM;
.
          REP       "+ ",EMVIURNO
          REP       "+ ",DEMVIADM
.
NXTV9000  CLOSE     EMRVISA1
          CLOSE     EMRVISA4
          GOTO      NXTV9999
.
          INC       EMRVISIO/INC
          INC       IBAOVRIO/INC
.
NXTV9999  ENDPROC
.
+
.------------------------------------------------------------
. Check if the discharge status has a deceased indicator against it. 
. Requires: EMVIDSTA Cat ED indicator 1 = (D)eceased
.------------------------------------------------------------
.
DEADST00  MATCH     ZEROUR,EMVIURNO              * u/r number zero?
          GOTO      DEADST99 IF EQUAL
.
          MATCH     SP3,EMVIDSTA                 * discharge status blank ?
          GOTO      DEADST99 IF EQUAL            * yes - ignore
.
          PACK      KEY5,ANSE,ANSD,EMVIDSTA
          CALL      RDCODE1                      * dis. status code on file ?
          BRANCH    OVRCD,DEADST99               * no
.
          MATCH     ANSD,TCINDC1                 * deceased indicator set ?
          GOTO      DEADST95 IF EQUAL            * yes
.
          GOTO      DEADST99
.
DEADST95  MOVE      ONE,PCEASE                   * set as deceased
          MOVE      EMVIDDAT,PDECDTE             * set deceased date
          MOVE      DSCHAUTP,PAUTOPY
.
DEADST99  RETURN
.
.------------------------------------------------------------
. LADM0000 - Link inpatient admission to current emergency visit
.------------------------------------------------------------
LADM0000  RESET     UPDTTYPE
          MATCH     "ERROR",UPDTTYPE        * Link
          GOTO      LADM1000 IF EQUAL
          MATCH     "CHGCL",UPDTTYPE        * Change Claim Code
          GOTO      LADM2000 IF EQUAL
.
          GOTO      LADM9100
. 
LADM1000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,LADM9000
.
.         MATCH     SP70,EMVIPADM
.         GOTO      LADM9200 IF NOT EQUAL
.
          MATCH     SP70,EMVIPADM
          IF        !@EQUAL
            MATCH     SP70,LINKVIST
            IF        @EQUAL|@EOS
              CALL      WEDU0000            * write to edward alteration unlink
            ENDIF
          ENDIF
.
          MATCH     Z70,LINKVIST
          IF        !@EQUAL
            MOVE      LINKVIST,EMVIPADM     * Update linked inpatient admission
            CALL      WINP0000              * write to edward alteration table
          ENDIF
.
          CALL      UPEMVIS1
.
          CALL      WRTHIS00                * Update audit history
          PROC      EMRDRCHR              * Update Visit Billing Complete
.
          CALL      BRDLNK00                * Broadcast A08 for linked inp adm
.
          MOVE      ZERO,EXIT
          GOTO      LADM9999
.
LADM2000  MATCH     Z70,EMVIS008
          GOTO      LADM9999 IF EQUAL
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          IF        OVRCD=0
            PACK      EMVICOMP,EMVIS008,SP70
            CALL      UPEMVIS1
.
            MOVE      EMVICOMP,KEY3       * Claim code
            CALL      PRFAINSR            * Check Claim insurance details
            IF        OVRCD=0
              MOVE      ADMISSNO,PKADMN
              PACK      KEY8,ADMISSNO,SP70
              CALL      RDARESP1
              IF        OVRCD=1
                CALL      WRRESP1
              ELSE
                CALL      UPRESP1
              ENDIF
            ENDIF
          ENDIF
.
          OPEN      PMSCAUA1,"pmscauaf"
          UNPACK    SP70,PMCAOATY,PMCANATY,PMCAOHFN,PMCANHFN,PMCAOHFT,PMCANHFT
          UNPACK    SP70,PMCAOCLM,PMCANCLM
          MOVE      EMVIADMN,KEY8
          CALL      RDDETA1
          IF        OVRCD=0
            MOVE      ADACOMP,PMCAOCLM     * Save Old claim code
            PACK      ADACOMP,EMVIS008,SP70
            CALL      UPDETA1
          ENDIF
.
          MOVE      EMVIS008,PMCANCLM   * New Claim code
          PACK      KEY14,EMVIS008,SP70
          CALL      UAUD0000            * Update Change audit file
.
          MOVE      ZERO,EXIT
          GOTO      LADM9999
.
LADM9000  MOVE      "Invalid Visit Number",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LADM9999
.
LADM9100  MOVE      "Invalid Update Type",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LADM9999
.
.LADM9200  MOVE      "Emergency visit is already linked",WEBTITLE
.          CALL      WEBERR00
.          MOVE      ONE,EXIT
.          GOTO      LADM9999
.
LADM9999  RETURN
+
.-----------------------------------------------------------
.         Broadcast A08 for linked inpatient admission
.-----------------------------------------------------------
BRDLNK00  PACK      KEY8,LINKVIST,SP70
          CALL      RDMISS1
          BRANCH    OVRCD,BRDLNK99
.
          PACK      KEY8,AURNO,SP70
          CALL      RDMAST1
          BRANCH    OVRCD,BRDLNK99
.
          PACK      KEY8,AURNO,SP70
          CALL      RDPMPX21
          BRANCH    OVRCD,BRDLNK99
.
          PACK      KEY8,LINKVIST,SP70
          CALL      RDVISA1
          BRANCH    OVRCD,BRDLNK99
.
          PACK      KEY8,LINKVIST,SP70
          CALL      RDDSCH1
          IF        OVRCD=1
            CALL      CLPATDSC
          ENDIF
.
          PACK      KEY8,LINKVIST,SP70
          CALL      RDRESP1
          IF        OVRCD=1
            CALL      CLPATRE1
          ENDIF
.
          PACK      KEY30,LINKVIST,Z70
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,BRDLNK99
.
          MATCH     DTADMN,LINKVIST
          GOTO      BRDLNK99 IF NOT EQUAL
.
          CALL      PMIGTNID                 * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      THIRTY1,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAC                 * send update visit details
.
BRDLNK99  RETURN
+
.-----------------------------------------------------------
.         Update Change Audit file
.-----------------------------------------------------------
UAUD0000  MOVE      ADMISSNO,PMCAVISN        * Admission number
          PACK      PMCADATE,CCC,CYY,CMM,CDD
          REP       " 0",PMCADATE
          CLOCK     TIME,PMCATIME
.
          PACK      KEY24,PMCAVISN,PMCADATE,PMCATIME
          CALL      RAPMCAU1
          IF        OVRCD=1
            MOVE      USERID,PMCAWBID
            CALL      WRPMCAU1               * write a new record
            GOTO      UAUD9999
          ENDIF
.
.         If record already exit, just update the new code
.
          CALL      RDPMCAU1
          BRANCH    OVRCD,UAUD9999
.
          UNPACK    KEY14,PMCANCLM         * New claim code
          MOVE      USERID,PMCAWBID
          CALL      UPPMCAU1
UAUD9999  RETURN
+
.******************************************************************************
.*                           CHKRES00                                         *
.*            Check if expiry warning is required                             *
.******************************************************************************
.
CHKRES00  MOVE      ZERO,EXIT
          CALL      IBACLOCK
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
          MATCH     SP70,PTYPE
          GOTO      CHKRES99 IF EQUAL
.
          PACK      KEY5,ANST,SP1,PTYPE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CHKRES99
.
          MATCH     ANST,TCINDC3
          GOTO      CHKRES99 IF NOT EQUAL
.
          PACK      KEY8,URNUMBER,SP70
          CALL      RDPMRES1
          BRANCH    OVRCD,CHKRES99
.
          MATCH     TODAY,PMRSTEXP
          IF        @LESS
             MOVE     TWO,EXIT
             GOTO     CHKRES99
          ENDIF
.
          MOVE      PMRSTEXP,EXPDATE
          SUB       TCFORM6,EXPDATE
.
          MATCH     TODAY,EXPDATE
          IF        @LESS
          ENDIF
.
CHKRES99  RETURN
+
.******************************************************************************
.*                           UPRES000                    Called by : UPMAD000 *
.*            Update/write residency details                                  *
.******************************************************************************
.
UPRES000  PACK      KEY8,URNUMBER,SP70
.
          CALL      RDPMRES1
          BRANCH    OVRCD,UPRES100
.
          CALL      MVPMSRES
.
          PACK      PMRSUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMRSUDAT
          CLOCK     TIME,PMRSUTIM
          MOVE      USERID,PMRSUUID
          CALL      UPPMRES1
          GOTO      UPRES999
.
UPRES100  CALL      CLPMSRES
          CALL      MVPMSRES
.
          PACK      PMRSCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMRSCDAT
          CLOCK     TIME,PMRSCTIM
          MOVE      USERID,PMRSCUID
          PACK      KEY8,URNUMBER,SP70
          CALL      WRPMRES1
.
UPRES999  RETURN
+
MVPMSRES  PACK      PMRSURNO,URNUMBER,SP70
          MATCH     Z70,PMRES001
          IF        !@EQUAL
            PACK      PMRSCONT,PMRES001,SP70
          ENDIF
          MATCH     Z70,PMRES002
          IF        !@EQUAL
            PACK      PMRSTEXP,PMRES002,SP70
          ENDIF
          MATCH     Z70,PMRES003
          IF        !@EQUAL
            PACK      PMRSGRDT,PMRES003,SP70
          ENDIF
          MATCH     Z70,PMRES004
          IF        !@EQUAL
            PACK      PMRSCOMM,PMRES004,SP70,SP70
          ENDIF
          MATCH     Z70,PMRES005
          IF        !@EQUAL
            PACK      PMRSVISN,PMRES005,SP70,SP70
          ENDIF
.
          RETURN
.
.*******************************************************************************
. CRMED000 - Create a medical record
.*******************************************************************************
.
CRMED000  MOVE      SP70,MRMAURNO
          MOVE      SP70,MRMAHHOS
          MOVE      SP70,MRMAHLOC
          MOVE      SP70,MRMADOTY
          MOVE      ZERO,MRMAVOLN
          MOVE      SP70,MRMASTAT
          MOVE      SP70,MRMACOMM
          MOVE      SP70,MRMAKEY
          MOVE      SP70,MRMAFILM
          MOVE      SP70,MRMACHOS
          MOVE      SP70,MRMAOHOS
.
          OPEN      MRTMASA1,"mrtmasaf"
          OPEN      MRTMASA2,"mrtmasaf"
          MOVE      PURNO,MRMAURNO
.
          READ      CONTROLF,NINTY7;*154,MRCNUSRD,*176,MRCNTREC
.
          IF        IBCNMHOS=1
            PACK      KEY3,WBSEHOSP,SP70
            CALL      RDPTHSP1
            BRANCH    OVRCD,CRMED999
.
            MOVE      PTHSHHOS,MRMAHHOS            * Home Hospital
            MOVE      PTHSHLOC,MRMAHLOC            * Home Location
            MOVE      PTHSHHOS,MRMACHOS            * Current Hospital
            MOVE      PTHSHLOC,MRMACLOC            * Current Location
            MOVE      PTHSHHOS,MRMAOHOS            * Originating Hospital
            MOVE      PTHSRCTY,MRMADOTY            * Document Type
            MOVE      PTHSSTAT,MRMASTAT            * Status
            SQUEEZE   PTHSVOLM
            MOVE      PTHSVOLM,MRMAVOLN
          ELSE
            READ      CONTROLF,SIXTY;*84,MRCNHLOC
            READ      CONTROLF,SIXTY;*88,MRCNRCTY
            READ      CONTROLF,SIXTY;*91,MRCNVOLM
            READ      CONTROLF,SIXTY;*108,MRCNSTAT
            MOVE      MRCNHLOC,MRMAHLOC
            MOVE      MRCNHLOC,MRMACLOC
            MOVE      MRCNRCTY,MRMADOTY
            MOVE      MRCNSTAT,MRMASTAT
            SQUEEZE   MRCNVOLM
            MOVE      MRCNVOLM,MRMAVOLN
          ENDIF
.
          COMPARE   ONE,MRCNUSRD                 * Using websecaf auto create
          GOTO      CRMED200 IF NOT EQUAL        * MR defaults
.
          MATCH     SP70,WBSEDTYP
          IF        !@EQUAL
            MOVE      WBSEDTYP,MRMADOTY
          ENDIF
.
          IF        IBCNMHOS=1
            MATCH     SP70,WBSEHHOS
            GOTO      CRMED200 IF EQUAL
          ENDIF
.
          MATCH     SP70,WBSEHLOC
          IF        !@EQUAL
            MOVE      WBSEHHOS,MRMAHHOS
            MOVE      WBSEHLOC,MRMAHLOC
            MOVE      WBSEHHOS,MRMACHOS
            MOVE      WBSEHLOC,MRMACLOC
            MOVE      WBSEHHOS,MRMAOHOS
          ENDIF
.
CRMED200  MATCH     SP70,MRMAHLOC
          GOTO      CRMED999 IF EQUAL
.
          MATCH     SP70,MRMADOTY
          GOTO      CRMED999 IF EQUAL
.
          PACK      KEY20,MRMAURNO,MRMAHHOS,MRMAHLOC,MRMADOTY,MRMAVOLN,SP70
          CALL      RAMRMAS1
          COMPARE   ONE,OVRCD
          GOTO      CRMED400 IF NOT EQUAL
.
CRMED300  READ      CONTROLF,SIXTY;*95,MRCNUKEY
          ADD       ONE,MRCNUKEY
          WRITAB    CONTROLF,SIXTY;*95,MRCNUKEY
          SUB       ONE,MRCNUKEY
          MOVE      MRCNUKEY,MRMAKEY
.
          PACK      KEY10,MRMAKEY,SP70
          CALL      RAMRMAS2                * Read a master file record
          COMPARE   ONE,OVRCD
          GOTO      CRMED300 IF NOT EQUAL   * Record exists, get next unq key
.
          CALL      IBACLOCK
          PACK      MRMADTCR,CCC,CYY,CMM,CDD
          REP       " 0",MRMADTCR
          MOVE      CTIMEIS,MRMATMCR
          MOVE      WBSEUID,MRMACUID
          MOVE      SP70,MRMADTUP
          MOVE      SP70,MRMATMUP
          MOVE      SP70,MRMAUUID
          CALL      WRMRMAS1
.
CRMED400  PACK      SAVKEY18,MRMAURNO,MRMAHHOS,MRMAHLOC,MRMADOTY,SP70
          PACK      KEY20,MRMAURNO,MRMAHHOS,MRMAHLOC,MRMADOTY,Z70
          CALL      RSMRMAS1
          CALL      RPMRMAS1                * Find the highest volume
          BRANCH    OVRCD,CRMED999
.
          PACK      KEY18,MRMAURNO,MRMAHHOS,MRMAHLOC,MRMADOTY,SP70
          MATCH     SAVKEY18,KEY18
          GOTO      CRMED999 IF NOT EQUAL
.
          CALL      MRWRT000                * Request the highest volume
.
CRMED999  RETURN
+
.------------------------------------------------------------
. Loop through UR numbers and save Requests
.------------------------------------------------------------
MRWRT000  
.         MATCH     SP70,EMVITRIG
.         GOTO      MRWRT999 IF EQUAL
.         GOTO      MRWRT999 IF EOS
.
....      MATCH     EMSTDRLC,MRMACLOC
          PACK      MRLOCKEY,MRMACHOS,MRMACLOC,SP10 * Current MR Hosp. & Locatn
          PACK      KEY7,EMSTHSNO,EMSTDRLC,KEY10
          MATCH     KEY7,MRLOCKEY
          GOTO      MRWRT999 IF EQUAL
. 
          PACK      KEY20,MRMAKEY,SP70
          CALL      RSMRRQD2
MRWRT010  CALL      RKMRRQD2
          BRANCH    OVRCD,MRWRT030
.
          MATCH     MRMAKEY,MRRDRKEY
          GOTO      MRWRT030 IF NOT EQUAL
.
          PACK      DIM5,EMVITIME,SP70
.
          PACK      KEY23,EMVIDATE,DIM5,MRRDRQNO,SP70
          CALL      RDMRRQH2
          BRANCH    OVRCD,MRWRT010
.
          MOVE      EMVITRIG,MRRQTRIG
.         CLOCK     TIME,MRRQTMUP
.         PACK      MRRQDTUP,CCC,CYY,CMM,CDD
.         REP       " 0",MRRQDTUP
          MOVE      WBSEUID,MRRQUSUP
.
          CALL      UPMRRQH2
.
          GOTO      MRWRT999
.
MRWRT030  READ      CONTROLF,FIFTY9;*182,PTCNORNO
          ADD       ONE,PTCNORNO
          WRITAB    CONTROLF,FIFTY9;*182,PTCNORNO
.
          MOVE      PTCNORNO,KEY10
          CALL      RDMRRQH1
          COMPARE   ZERO,OVRCD
          GOTO      MRWRT000 IF EQUAL
.
          MOVE      PTCNORNO,MRRQRQNO
.         CALL      IBACLOCK
.         PACK      MRRQDTRQ,CCC,CYY,CMM,CDD
.         REP       " 0",MRRQDTRQ
.         MOVE      CTIMEIS,MRRQTMRQ
          MOVE      EMVIDATE,MRRQDTRQ
          MOVE      EMVITIME,MRRQTMRQ
          MOVE      EMSTDRLC,MRRQLOCR
          MOVE      WBSENAM,MRRQPERS
          MOVE      EMSTDRES,MRRQMOVR
          MOVE      SP70,MRRQURGY
          MOVE      SP70,MRRQEXTN
          MOVE      SP70,MRRQCOMM
          MOVE      EMSTHSNO,MRRQHOSC
          MOVE      SP70,MRRQPAGE
          MOVE      EMVITRIG,MRRQTRIG
.
          CLOCK     TIME,MRRQTIYM
          PACK      MRRQDAYE,CCC,CYY,CMM,CDD
          REP       " 0",MRRQDAYE
          MOVE      WBSEUID,MRRQUSID
.
          MOVE      MRRQRQNO,KEY10
          CALL      WRMRRQH1      * write to the medical record request Header
.
          MOVE      "N",MRRDFILL
          MOVE      SP70,MRRDSPAR

          PACK      KEY20,MRRQRQNO,MRMAKEY,SP70
          UNPACK    KEY20,MRRDRQNO,MRRDRKEY
          CALL      RAMRRQD1
          IF        OVRCD=0
            CALL      UPMRRQD1
          ELSE
            CALL      WRMRRQD1     * write to the medical record request Details
          ENDIF
.
MRWRT999  RETURN
+
.------------------------------------------------------------
.      validate item
.------------------------------------------------------------
CHKPTM00  PACK      DIM2,SP1,ZERO
          MOVE      ZERO,FORM2
.         PACK      EMVCMNCD,EMVCMNCD,SP70
          MOVE      EMVCMNCD,DIM9
.         PACK      EMVCSUBN,EMVCSUBN,SP70
          PACK      KEY22,DIM2,DIM9,EMVCSUBN,Z70
          CALL      RSPRIT1                      * position after last record
.                                                  for this item
CHKPTM10  CALL      RPPRIT1                      * read previous record
          BRANCH    OVRCD,CHKPTM99               * end of file
.
          SQUEEZE   DIM2
          MOVE      DIM2,FORM2
          COMPARE   FORM2,PRITFLAG               * same item type ?
          GOTO      CHKPTM99 IF NOT EQUAL        * no
.
          MATCH     EMVCMNCD,PRITITMN            * same item number ?
          GOTO      CHKPTM99 IF NOT EQUAL        * no
.
          MATCH     SP70,KEY3
          IF        !@EQUAL
            MATCH     EMVCSUBN,PRITSUBN          * same subitem number ?
            GOTO      CHKPTM99 IF NOT EQUAL      * no
          ENDIF
.
          MATCH     PRITDAT1,EMVCDATE            * item date > service date ?
          GOTO      CHKPTM10 IF LESS             * yes
.
          MOVE      PRITDESC,CODEDESC
.
CHKPTM99  RETURN
+
.------------------------------------------------------------
.  Fixed Person responsible for account
. Note:- copied from PATWEB98 (routine FPRA0000) to be applied
.        whenever Admission Claim Type is altered
.------------------------------------------------------------
FPRA0000 CALL       CLPRA000               * clear person responsible vars
.....    CALL       UPCLV000                * not used                 D-119915
         MOVE       ZERO,RESPFLAG
         MOVE       ADMISSNO,KEY8
         CALL       RDRESP1
         MOVE       OVRCD,RESPFLAG
         MOVE       ADMISSNO,PKADMN
.
         MOVE       ADACOMP,KEY3           * Claim code
         CALL       PRFAINSR               * Check Claim insurance details
         IF         OVRCD=0
           MOVE       ADMISSNO,PKADMN
           GOTO       FPRA9000
         ENDIF
.
         MATCH     "1",PTCNXCOM
         GOTO      FPRA0200 IF NOT EQUAL
.
         PACK       KEY11,ADMISSNO,ADACOMP,SP70
         CALL       RDPMEXT1
         IF         OVRCD=1
           CALL       CLPMSEXT
         ENDIF
.
         MATCH      "A",CLAIMTYP
         GOTO       FPRA7000 IF EQUAL       * Australian Defence Force
         MATCH      "O",CLAIMTYP
         GOTO       FPRA5000 IF EQUAL       * Use Organisation for Other Comp.
         MATCH      "F",CLAIMTYP
         GOTO       FPRA7000 IF EQUAL       * Foreign Defence Force
         MATCH      "S",CLAIMTYP
         GOTO       FPRA6000 IF EQUAL       * Shipping Agent
         MATCH      "E",CLAIMTYP
         GOTO       FPRA7300 IF EQUAL       * Overseas Student
         MATCH      "G",CLAIMTYP
         GOTO       FPRA7300 IF EQUAL       * Overseas Visitor
.
         REP        "XMYVZW",CLAIMTYP
         MATCH      "M",CLAIMTYP
         GOTO       FPRA7000 IF EQUAL       * Motor Vehicle
         MATCH      "W",CLAIMTYP
         GOTO       FPRA7250 IF EQUAL       * Workers Comp - Employer details
         MATCH      "V",CLAIMTYP
         GOTO       FPRA7500 IF EQUAL       * Vet.Affairs default to Local Addr.
.
         PACK       KEY5,ANSC,ANSL,EMVICOMP,SP70
         CALL       RDCODE1
         IF         OVRCD=0
           MOVE       TCINDC1,CLAIMTYP
         ENDIF
         MATCH      SP70,CLAIMTYP
         GOTO       FPRA7500 IF EQUAL       * Use Patient details
         MATCH      "P",CLAIMTYP
         GOTO       FPRA7500 IF EQUAL       * Public
         MATCH      "H",CLAIMTYP
         GOTO       FPRA6200 IF EQUAL       * Private
         MATCH      "J",CLAIMTYP
         GOTO       FPRA7500 IF EQUAL       * Private Uninsured
         MATCH      SP70,CLAIMTYP
         GOTO       FPRA7500 IF EQUAL       * Bulk Billing/Aff Funding/Unknown
.
         GOTO       FPRA9000

FPRA0100 BRANCH    PTPCLRES,FPRA3000,FPRA9900
         GOTO      FPRA3000
.
FPRA0200
.
.        PTPCLRES - 0 use insurance company, 1 use patient details
.                   2 use prfa details, 3 use TAC, MAB or DVA details
.
         BRANCH     PTPCLRES,FPRA3000,FPRA9900
.
         MATCH      "M",CLAIMTYP
         GOTO       FPRA1000 IF EQUAL       * TAC
         MATCH      "V",CLAIMTYP
         GOTO       FPRA2000 IF EQUAL       * Veteran affair
         MATCH      "W",CLAIMTYP
         GOTO       FPRA0500 IF EQUAL       * W/C
.
         MATCH      "D",CLAIMTYP            * Defence Force
         IF         @EQUAL
           PACK       KEY11,ADMISSNO,PMEXT002,SP70
           CALL       RDPMEXT1
           BRANCH     OVRCD,FPRA9900
           GOTO       FPRA7000
         ENDIF
.
         GOTO       FPRA3000
.
.        Set W/C claim details
.
.                                           * start of code added from V6.14
FPRA0500  COMPARE   THREE,PTPCLRES
          GOTO      FPRA0700 IF NOT EQUAL
.
          COMPARE   ONE,WCACCPT             * Check if accepted by insurance
          GOTO      FPRA0700 IF NOT EQUAL   * no
          MATCH     SP6,WCICODE             * check for insurance code
          GOTO      FPRA0700 IF EQUAL       * no insurance code
          MOVE      WCICODE,KEY6
          CALL      RDINSR1                 * read insurance detail
          BRANCH    OVRCD,FPRA0700
.
          MOVE      INAME,PKNAME
          MOVE      IADD1,PKADD1
          MOVE      IADD2,PKADD2
          MOVE      IADD3,PKSUBR
          MOVE      IADD4,PKADD4
          MOVE      IPOST,PKPOST
          MOVE      ITELEB,PKTELEB
          MOVE      "EMPL'S INS",PKRELP
          MOVE      SP20,PKTELEP
          MOVE      SP20,PTREMOBL
          MOVE      ADMISSNO,PKADMN          * was WCADMNO            *C-140841
          MOVE      SP70,PTRESNAM
          MOVE      SP70,PTREGNAM
          GOTO      FPRA9000
.                                           * end of code added from V6.14
FPRA0700 MOVE       WCENAME,PKNAME
         MOVE       WCEADD1,PKADD1
         MOVE       WCEADD2,PKADD2
         MOVE       WCEADD3,PKSUBR
         MOVE       WCEADD4,PKADD4
         MOVE       WCEPOST,PKPOST
         MOVE       WCETELE,PKTELEB
         MOVE       "Employer  ",PKRELP
         MOVE       SP20,PKTELEP
         MOVE       SP20,PTREMOBL
         MOVE       ADMISSNO,PKADMN
         MOVE       SP70,PTRESNAM
         MOVE       SP70,PTREGNAM
         GOTO       FPRA9000
.
.        Set TAC claim details
.
FPRA1000 MOVE       CMABINS,KEY6
         CALL       RDINSR1
         COMPARE    ZERO,OVRCD
         GOTO       FPRA9900 IF NOT EQUAL
.
         MOVE       INAME,PKNAME
         MOVE       IADD1,PKADD1
         MOVE       IADD2,PKADD2
         MOVE       IADD3,PKSUBR
         MOVE       IADD4,PKADD4
         MOVE       IPOST,PKPOST
         MOVE       ITELEB,PKTELEB
         MOVE       "T.A.C.    ",PKRELP
         MOVE       SP20,PKTELEP
         MOVE       SP20,PTREMOBL
         MOVE       ADMISSNO,PKADMN
         MOVE       SP70,PTRESNAM
         MOVE       SP70,PTREGNAM
         GOTO       FPRA9000
.
.        Set up Veteran affairs claim details
.
FPRA2000 MOVE       CVETINS,KEY6
         CALL       RDINSR1
         COMPARE    ZERO,OVRCD
         GOTO       FPRA9900 IF NOT EQUAL
.
         MOVE       INAME,PKNAME
         MOVE       IADD1,PKADD1
         MOVE       IADD2,PKADD2
         MOVE       IADD3,PKSUBR
         MOVE       IADD4,PKADD4
         MOVE       IPOST,PKPOST
         MOVE       ITELEB,PKTELEB
         MOVE       "Vet.Affair",PKRELP
         MOVE       SP20,PKTELEP
         MOVE       SP20,PTREMOBL
         MOVE       ADMISSNO,PKADMN
         MOVE       SP70,PTRESNAM
         MOVE       SP70,PTREGNAM
         GOTO       FPRA9000
.
FPRA3000 MATCH     SP70,PKNAME
         IF        !@EQUAL & !@EOS
           GOTO      FPRA9900
         ENDIF
.
FPRA3050 CALL      CPRT0000                  * Check 'Parent of Option
.
         PACK      PKADD1,PADD1,SP30,SP20
         PACK      PKADD2,PADD2,SP30,SP20
         PACK      PKSUBR,PSUBRB,SP20,SP30
         PACK      PKADD4,PADD4,SP30,SP10
         PACK      PKPOST,PPOST,SP10,SP20
         PACK      PKTELEP,PTELEP,SP20
         PACK      PKTELEB,PTELEB,SP20
         PACK      PTREMOBL,PTMXCELL,SP20
         MOVE      ADMISSNO,PKADMN
         MOVE      PGNAME,PTREGNAM
         MOVE      PTMASNAM,PTRESNAM
         GOTO      FPRA9000
.
.        Use Organisation details for PRFA
.
FPRA5000 MATCH     SP70,PMEXPOLC
         GOTO      FPRA5500 IF EQUAL
         GOTO      FPRA5500 IF EOS
.
         MATCH     SP70,PMEXSCHL
         GOTO      FPRA5500 IF EQUAL
         GOTO      FPRA5500 IF EOS
.
         OPEN      PATEORA1,"pateoraf"
         MOVE      "O",KEY1
         PACK      KEY7,KEY1,PMEXSCHL,SP70
         CALL      RDPTEOR1
         BRANCH    OVRCD,FPRA5500
.
         MOVE      PTERNAME,PKNAME
         MOVE      PTERADD1,PKADD1
         MOVE      PTERADD2,PKADD2
         MOVE      PTERADD3,PKSUBR
         MOVE      PTERADD4,PKADD4
         MOVE      PTERPOST,PKPOST
         MOVE      PTERTELP,PKTELEB
         MOVE      SP70,PKRELP
         MOVE      SP20,PKTELEP
         MOVE      SP20,PTREMOBL
         MOVE      ADMISSNO,PKADMN
         PACK      PTRESNAM,PTERCONT,SP70
         MOVE      SP70,PTREGNAM
         GOTO      FPRA9000
.
FPRA5500 MATCH     SP70,PMEXICOD
         GOTO      FPRA5800 IF EQUAL
         GOTO      FPRA5800 IF EOS
.
         PACK      KEY6,PMEXICOD,SP70
         CALL      RDINSR1
         BRANCH    OVRCD,FPRA5800
.
         MOVE      INAME,PKNAME
         MOVE      IADD1,PKADD1
         MOVE      IADD2,PKADD2
         MOVE      IADD3,PKSUBR
         MOVE      IADD4,PKADD4
         MOVE      IPOST,PKPOST
         MOVE      ITELEB,PKTELEB
         MOVE      SP70,PKRELP
         MOVE      SP70,PKTELEP
         MOVE      SP70,PTREMOBL
         MOVE      ADMISSNO,PKADMN
         PACK      PTRESNAM,ICONT,SP70
         MOVE      SP70,PTREGNAM
         GOTO      FPRA9000
.
FPRA5800 MOVE      "2",KEY1                 * Postal Address
         CALL      DADR0000
         IF        EXIT=1
           MOVE      "7",KEY1               * Local Address
           CALL      DADR0000
           BRANCH    EXIT,FPRA3050
         ENDIF
         GOTO      FPRA8800
.
.-------------------------------------------------------------------------------
.        Shipping Agent
.-------------------------------------------------------------------------------
FPRA6000 MATCH     SP70,PMEXCAD1
         GOTO      FPRA8000 IF EQUAL
         GOTO      FPRA8000 IF EOS
.
         MOVE      PMEXSAGN,PKNAME
         MOVE      PMEXCAD1,PKADD1
         MOVE      PMEXCAD2,PKADD2
         MOVE      PMEXCAD3,PKSUBR
         MOVE      PMEXCAD4,PKADD4
         MOVE      PMEXCPCD,PKPOST
         MOVE      PMEXCPHN,PKTELEB
         MOVE      SP70,PKRELP
         MOVE      SP20,PKTELEP
         MOVE      SP20,PTREMOBL
         MOVE      ADMISSNO,PKADMN
         PACK      PTRESNAM,PMEXCNAM,SP70
         MOVE      SP70,PTREGNAM
         GOTO      FPRA9000
.
.-------------------------------------------------------------------------------
.        Private
.-------------------------------------------------------------------------------
FPRA6200 MATCH     SP70,EMVIFUND
         GOTO      FPRA0100 IF EQUAL
.
         MOVE      "0000    ",HFTABL
         PACK      KEY14,EMVIFUND,HFTABL,SP70
         CALL      RDFUND1
         BRANCH    OVRCD,FPRA0100
.
         PACK      PKNAME,HFNAME,SP70
         PACK      PKADD1,HFADD1,SP70
         PACK      PKADD2,HFADD2,SP70
         PACK      PKSUBR,HFADD3,SP70
         PACK      PKADD4,HFADD4,SP70
         PACK      PKPOST,HFPCODE,SP70
.
         MOVE      HFTELE,PKTELEB
         MOVE      SP70,PKRELP
         MOVE      SP20,PKTELEP
         MOVE      SP20,PTREMOBL
         MOVE      ADMISSNO,PKADMN
         PACK      PTRESNAM,PTHFCNAM,SP70
         MOVE      SP70,PTREGNAM
         GOTO      FPRA9000
.
.-------------------------------------------------------------------------------
.
.        WA Extra Comp Australian Defence Force / Foreign Defence Force 
.
FPRA7000 MATCH     SP70,PMEXICOD
         GOTO      FPRA7100 IF NOT EQUAL        * insurance company
.
         MATCH     SP70,PMEXCAD1
         GOTO      FPRA7200 IF NOT EQUAL        * insurance company
.
         GOTO      FPRA8000                     * Check Indicator
.
FPRA7100 PACK      KEY6,PMEXICOD,SP70
         CALL      RDINSR1
         BRANCH    OVRCD,FPRA3050
.
         MOVE      INAME,PKNAME
         MOVE      IADD1,PKADD1
         MOVE      IADD2,PKADD2
         MOVE      IADD3,PKSUBR
         MOVE      IADD4,PKADD4
         MOVE      IPOST,PKPOST
         MOVE      ITELEB,PKTELEB
         MOVE      SP70,PKRELP
         MOVE      SP70,PKTELEP
         MOVE      SP70,PTREMOBL
         MOVE      ADMISSNO,PKADMN
         PACK      PTRESNAM,ICONT,SP70
         MOVE      SP70,PTREGNAM
.
         GOTO      FPRA9000
.
FPRA7200 CALL      CPRT0000                  * Check 'Parent of Option
.
         MOVE      PMEXCAD1,PKADD1
         MOVE      PMEXCAD2,PKADD2
         MOVE      PMEXCAD3,PKSUBR
         MOVE      PMEXCPCD,PKPOST
         MOVE      PMEXCAD4,PKADD4
         MOVE      PMEXCPHN,PKTELEB
         MOVE      SP70,PKRELP
         MOVE      SP70,PKTELEP
         MOVE      SP70,PTREMOBL
         MOVE      ADMISSNO,PKADMN
         PACK      PMEXCNAM,PSNAME,SP70
         PACK      PTREGNAM,PGNAME,SP70
.
         GOTO      FPRA9000
.
.-------------------------------------------------------------------------------
.        Workers Comp - default the Employer as PRFA
.-------------------------------------------------------------------------------
FPRA7250 MOVE      PMEXNAME,PKNAME
         MOVE      PMEXADD1,PKADD1
         MOVE      PMEXADD2,PKADD2
         MOVE      PMEXADD3,PKSUBR
         MOVE      PMEXADD4,PKADD4
         MOVE      PMEXPOST,PKPOST
         MOVE      PMEXEPHN,PKTELEB
         MOVE      "Employer  ",PKRELP
         MOVE      SP70,PKTELEP
         MOVE      SP70,PTREMOBL
         MOVE      ADMISSNO,PKADMN
         MOVE      SP70,PMEXCNAM
         MOVE      SP70,PTREGNAM
         GOTO      FPRA9000
.
.-------------------------------------------------------------------------------
.        Overseas Student or Overseas Visitor
.        Try Local and Overseas/patient Address
.-------------------------------------------------------------------------------
FPRA7300 MOVE      "7",KEY1               * Local Address
         CALL      DADR0000
         BRANCH    EXIT,FPRA3050          * default to patient details
.
         MATCH      "E",CLAIMTYP
         GOTO       FPRA8800 IF EQUAL       * Overseas Student
.
.      If 'Send bill to Local' is ticked, PRFA will be the Local address
.      If 'Send bill to Local' is not ticked, PRFA will be PMI/Overseas Address
.
         MATCH     "1",PMEXSBIL           * Send bill to Local address
         GOTO      FPRA3050 IF NOT EQUAL
.
         GOTO      FPRA8800
.
.        Try Postal address if no Postal default to patient's address
.
FPRA7500 MOVE      "2",KEY1               * Postal Address
         CALL      DADR0000
         BRANCH    EXIT,FPRA3050          * default to patient details
.
         GOTO      FPRA8800
.
.-------------------------------------------------------------------------------
.        If indicator18=B - Leave PRFA blank
.-------------------------------------------------------------------------------
FPRA8000 MATCH     SP70,PMEXCLAM
         GOTO      FPRA3050 IF EQUAL
.
         PACK      KEY5,ANSC,ANSL,PMEXCLAM,SP70
         CALL      RDCODE1
         IF        OVRCD=0
           MATCH     "B",TCINDC18
           IF        @EQUAL
             CALL      CLPATRE1              * Clear PRFA
             GOTO      FPRA9000
           ENDIF
         ENDIF
         GOTO      FPRA3050                  * Patient details
.
.-------------------------------------------------------------------------------
.        Default PRFA to use the Extra Contract details
.-------------------------------------------------------------------------------
FPRA8800 CALL      CPRT0000                  * Check 'Parent of Option
.
         MOVE      PMCEADD1,PKADD1
         MOVE      PMCEADD2,PKADD2
         MOVE      PMCEADD3,PKSUBR
         MOVE      PMCEADD4,PKADD4
         MOVE      PMCEPOST,PKPOST
         MOVE      PMCETELB,PKTELEB
         MOVE      PMCERELP,PKRELP
         MOVE      PMCETELP,PKTELEP
         MOVE      PMCETELM,PTREMOBL
         MOVE      ADMISSNO,PKADMN
         MOVE      PGNAME,PTREGNAM
         MOVE      PTMASNAM,PTRESNAM
         GOTO      FPRA9000
.
FPRA9000 IF        RESPFLAG=1
           PACK      KEY8,ADMISSNO,SP70
           CALL      WRRESP1
         ELSE
           CALL      UPRESP1
         ENDIF
.
.        Send update broadcast message
.
         MOVE      EMVIURNO,KEY8          * first - get the PMI details
         CALL      RDMAST1
         BRANCH    OVRCD,FPRA9900
.
         MOVE      EMVIURNO,KEY8
         CALL      RDPMPX21
         BRANCH    OVRCD,FPRA9900
.
         MOVE      EMVIADMN,KEY8
         CALL      RDPMVX11
         BRANCH    OVRCD,FPRA9900
.
         CALL      PMIGTNID               * get national id for dgate write
         MOVE      NMPNUMB,PTNINMPI
         MOVE      TWENTY8,HL7TRGID
         MOVE      SP8,HL7INCLD
         PROC      DGCLICEC                     * send A08
.
FPRA9900 MOVE      ZERO,EXIT
FPRA9999 RETURN
+
.------------------------------------------------------------
.        Check if we are using 'Parent of' Option
.------------------------------------------------------------
CPRT0000 MOVE      URNUMBER,KEY8
         CALL      RDMAST1
         BRANCH    OVRCD,CPRT9999
.
         COMPARE   ONE,PTCNPAOF              * Using 'Parent of' option?
         GOTO      CPRT8000 IF NOT EQUAL     * no
.
         PACK      AGEDATE,CCC,CYY,CMM,CDD
         CALL      CALCAGE                   * CALCAGE uses PBDATE
         COMPARE   PSAGEYRS,CAGECOFF         * Child?
         GOTO      CPRT8000 IF LESS          * No
.
.-------- Setup 'Parent of' as Person Responsible for Account
.
         MOVE      SP1,ANS
         MOVE      PGNAME,ANS
         PACK      PKNAME,SP70
.
         CLEAR     PKNAME
         APPEND    "Parent of ",PKNAME
         APPEND    ANS,PKNAME
         APPEND    DOT,PKNAME
         APPEND    SP1,PKNAME
         APPEND    PTMASNAM,PKNAME
         APPEND    SP70,PKNAME
         RESET     PKNAME
         MOVE      "Parent    ",PKRELP
         GOTO      CPRT9999
.
.-------- Use self as P.R.A.
CPRT8000 MOVE      SP1,ANS
         MOVE      PGNAME,ANS
         PACK      PKNAME,PTITL,SP1,ANS,DOT,PTMASNAM
         MOVE      SP70,PKRELP
.        MOVE      "SELF      ",PKRELP
.
CPRT9999 RETURN
+
.------------------------------------------------------------
.        Default Address from Extra Contract file
.------------------------------------------------------------
DADR0000  OPEN      PMSCEXA1,"pmscexaf"
          PACK      KEY14,URNUMBER,SP70
          CALL      RSPMCEX1
DADR1000  CALL      RKPMCEX1
          BRANCH    OVRCD,DADR9000
          MATCH     URNUMBER,PMCEURNO         * Same U/R?
          GOTO      DADR9000 IF NOT EQUAL
.
          MATCH     SP70,PMCETYPE
          GOTO      DADR1000 IF EQUAL
          MOVE      "tc",KEY2
          PACK      KEY5,KEY2,PMCETYPE
          CALL      RDCODE1
          BRANCH    OVRCD,DADR1000
          MATCH     KEY1,TCINDC1
          GOTO      DADR1000 IF NOT EQUAL
          MOVE      ZERO,EXIT
          GOTO      DADR99999
.
DADR9000  MOVE      ONE,EXIT
DADR9999  RETURN
+
.------------------------------------------------------------
.      MORGMN00 - Write to Morgue Management Table
.------------------------------------------------------------
MORGMN00  MATCH     SP70,EMVIDSTA
          GOTO      MORGMN99 IF EQUAL
.
          PACK      KEY5,ANSE,ANSD,EMVIDSTA,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,MORGMN99
.
          MATCH     ANSD,TCINDC1
          GOTO      MORGMN99 IF NOT EQUAL
.
          MOVE      EMVIURNO,PMMRURNO
          MOVE      EMVIADMN,PMMRADMN
          CALL      IBACLOCK
          PACK      PMMRARDT,CCC,CYY,CMM,CDD
          MATCH     SP70,EMVIDDAT
          IF        !@EQUAL
            MOVE      EMVIDDAT,PMMRARDT      * Use discharge date
          ENDIF
          REP       " 0",PMMRARDT
          PACK      PMMRARTM,CTIMEIS
          MOVE      SP70,PMMRLOCA
          MOVE      SP70,PMMRECBY
          MOVE      SP70,PMMRECDT
          MOVE      SP70,PMMRECTM
          MOVE      SP70,PMMRECCM
          MOVE      SP70,PMMRACBY
          MOVE      SP70,PMMRACDT
          MOVE      SP70,PMMRACTM
          MOVE      SP70,PMMRACCM
          MOVE      PMVXMHOS,PMMRHOSP
          PACK      PMMRSPAR,SP70,SP70 
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RAPMMOR1
          IF        OVRCD=1
            CALL      WRPMMOR1
          ELSE
            CALL      UPPMMOR1
          ENDIF
.
MORGMN99  RETURN
.
.*****************************************************************************
.*  RETL0000 - Retain the patients previous ED location/time if they are moving
.*             to a location with a type of other. Don't update the previous
.*             location if moving from a type other to a type other 
.*  REQUIRES - Valid read of EMRVISAF
.*             NEWLOCAT populated with the new location code
.*****************************************************************************
RETL0000  MATCH     "1",EMCNRETC                 * Using retain prev location
          GOTO      RETL8000 IF NOT EQUAL        
.         
          MATCH     Z70,NEWLOCAT                 * No change of location
          GOTO      RETL9999 IF EQUAL
.
          MATCH     EMVILOCN,NEWLOCAT            * No change of location
          GOTO      RETL9999 IF EQUAL
.
          MATCH     SP70,NEWLOCAT                * Clear prev location if
          GOTO      RETL8000 IF EQUAL            * deleting the current location
.         
          PACK      KEY3,EMVILOCN,SP70
          CALL      RDEMLOC1
          BRANCH    OVRCD,RETL8000
.         
          MATCH     ANSO,EMLOTYPE                * Check current location type
          IF        @EQUAL 
            MOVE      ONE,OTHRFLAG               * In an other location
          ELSE                                   
            MOVE      ZERO,OTHRFLAG              * Not in an other location
          ENDIF
.
          PACK      KEY3,NEWLOCAT,SP70
          CALL      RDEMLOC1
          BRANCH    OVRCD,RETL8000
.
          MATCH     ANSO,EMLOTYPE                * Check if new location type
          GOTO      RETL8000 IF NOT EQUAL        * is other
.
          BRANCH    OTHRFLAG,RETL9999            * Don't update
.
          MOVE      EMVILOCN,EMVIPRLO            * Save prev location
          CLOCK     TIME,EMVIPRTM                * Time left prev location
          GOTO      RETL9999
.
RETL8000  MOVE      SP70,EMVIPRLO
          MOVE      SP70,EMVIPRTM
.
RETL9999  RETURN
.
.------------------------------------------------------------
. Check if using ward bed requests and display the
. expected ward/bed
.------------------------------------------------------------
RBED0000  MATCH     "1",PTCNBEDM
          GOTO      RBED9999 IF NOT EQUAL
.
          PACK      KEY25,ADMISSNO,SP70
          CALL      RSPMBRQ2
RBED1000  CALL      RKPMBRQ2
          BRANCH    OVRCD,RBED9999
.
          MATCH     ADMISSNO,PMBRVISN
          GOTO      RBED9999 IF NOT EQUAL
.
          MATCH     " ",PMBRRSTA
          GOTO      RBED2000 IF EQUAL
.
          MATCH     "1",PMBRRSTA
          GOTO      RBED2000 IF EQUAL
.
          MATCH     "2",PMBRRSTA
          GOTO      RBED3000 IF EQUAL
.
          GOTO      RBED1000
.
RBED2000  MATCH     SP70,PMBRTYPE
          GOTO      RBED9999 IF EQUAL
.
          WRITE     HTMLFILE;"Requested";
.
          GOTO      RBED9999
.
RBED3000  MATCH     SP70,PMBREWRD
          GOTO      RBED9999 IF EQUAL
.
          WRITE     HTMLFILE;PMBREWRD,"/",PMBREBED;
          GOTO      RBED9999
.
RBED9999  RETURN
.
.
.------------------------------------------------------------
. Check if the expected ward/bed matches the admitted ward/bed
. and update the status to completed.
.------------------------------------------------------------
BEDR0000  MATCH     "1",PTCNBEDM
          GOTO      BEDR9999 IF NOT EQUAL
.
          PACK      KEY25,ADMISSNO,SP70
          CALL      RSPMBRQ2
BEDR1000  CALL      RKPMBRQ2
          BRANCH    OVRCD,BEDR9999
.
          MATCH     ADMISSNO,PMBRVISN
          GOTO      BEDR9999 IF NOT EQUAL
.
          MATCH     " ",PMBRRSTA
          GOTO      BEDR2000 IF EQUAL
.
          MATCH     "1",PMBRRSTA
          GOTO      BEDR2000 IF EQUAL
.
          MATCH     "2",PMBRRSTA
          GOTO      BEDR2000 IF EQUAL
.
          GOTO      BEDR1000
.
BEDR2000  MOVE      "3",PMBRRSTA            * Update status to completed
          CALL      UPPMBRQ2
.
          CALL      EXCL0000                * Clear expected patient
.
BEDR9999  RETURN
.
.------------------------------------------------------------
. Set Parameters for Emergency Coding
.------------------------------------------------------------
EMVCD000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
.
          IF        F3=7
            MATCH     SP70,QRYDATA
            GOTO      EMVCD999 IF EQUAL
            GOTO      EMVCD999 IF EOS
.
            UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00              * Set CMON from MTHNAM3
            PACK      EMVCD007,CCENT,CYEAR,CMON,CDAY
            GOTO      EMVCD9999
          ENDIF
.
          STORE     QRYDATA,F3,EMVCD001,EMVCD002,EMVCD003,EMVCD004,EMVCD005:
                               EMVCD006,EMVCD007,EMVCD008,EMVCD009,EMVCD010:
                               EMVCD011,EMVCD012,EMVCD013,EMVCD014,EMVCD015:
                               EMVCD016,EMVCD017,EMVCD018,EMVCD019,EMVCD020:
                               EMVCD021,EMVCD022,EMVCD023,EMVCD024,EMVCD025:
                               EMVCD026,EMVCD027,EMVCD028,EMVCD029,EMVCD030:
                               EMVCD031,EMVCD032,EMVCD033
EMVCD999  RETURN
.
.------------------------------------------------------------
. Write the diagnosis after discharge. This will not return
. any error or warning messages.
.------------------------------------------------------------
PDIG0000  MATCH     SP70,EMVCD001           * Exit if visit number
          GOTO      PDIG9999 IF EQUAL
.
          MATCH     SP70,EMVCD002           * Exit if no coding type
          GOTO      PDIG9999 IF EQUAL
.
          MATCH     "005",EMVCD002          * Exit if not diagnosis coding
          GOTO      PDIG9999 IF NOT EQUAL
.
          MATCH     "5",EMVCD004            * Exit if not emricdaf coding
          GOTO      PDIG9999 IF NOT EQUAL
.
          MATCH     SP70,EMVCD005           * Exit if no diagnosis
          GOTO      PDIG9999 IF EQUAL
.
          CALL      ADDCOD00
.
PDIG9999  RETURN
.
.------------------------------------------------------------
.  Add a code
.------------------------------------------------------------
ADDCOD00  PACK      KEY5,CATwl,EMVCD002,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,ADDCOD90
.
          MOVE      ZERO,SEQFLAG
          PACK      KEY14,EMVCD001,SP70
          CALL      RSEMVCD1
ADDCOD04  CALL      RKEMVCD1
          IF        OVRCD=1
.           MOVE      ZERO,SEQFLAG
            GOTO      ADDCOD05
          ENDIF
.
          MATCH     EMVCD001,EMVCVIST
          IF        !@EQUAL
.           MOVE      ZERO,SEQFLAG
            GOTO      ADDCOD05
          ENDIF
.
          MATCH     EMVCD005,EMVCMNCD
          GOTO      ADDCOD90 IF EQUAL
.
          MOVE      ZERO,FORM2
          MOVE      EMVCD004,FORM2
          COMPARE   EMVCCSYS,FORM2
          IF        @EQUAL
            MOVE      ONE,SEQFLAG
.           GOTO      ADDCOD05
          ENDIF
.
          GOTO      ADDCOD04
.
ADDCOD05  MOVE      ONE,COUNTER
          PACK      KEY14,EMVCD001,EMVCD002,Z70
          CALL      RSEMVCD1
ADDCOD10  CALL      RPEMVCD1
          BRANCH    OVRCD,ADDCOD20
          MATCH     EMVCD001,EMVCVIST
          GOTO      ADDCOD20 IF NOT EQUAL
.
          MOVE      EMVCUNIQ,COUNTER
          ADD       ONE,COUNTER
.
ADDCOD20  MOVE      COUNTER,EMVCD003
          REP       " 0",EMVCD003
.
          CALL      CLRVCD00                  * Clear all the file variables
.
          MOVE      WBSEUID,EMVCWUSR
          MOVE      WBSEUID,EMVCCUID          * user id created
.
          CALL      IBACLOCK
          PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
          REP       " 0",EMVCLUDT
          PACK      EMVCLUTM,CTIMEIS          * last update time
          PACK      EMVCCDAT,CCC,CYY,CMM,CDD  * date created
          REP       " 0",EMVCCDAT
          PACK      EMVCCTIM,CTIMEIS          * time created
          MOVE      SP70,EMVCSUBN
          MOVE      SP70,EMVCEDAD
.
          CALL      VCDSAV00      * Moves input variables to file variables
          PACK      KEY14,EMVCVIST,EMVCTYPE,EMVCUNIQ,SP70
          CALL      WREMVCD1      * Writes away the data
.
          MATCH     "000",EMVCSEQU               * Primary diagnosis
          GOTO      ADDCOD50 IF NOT EQUAL
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1                     * Get VEMD code
          BRANCH    OVRCD,ADDCOD50
.
          PACK      KEY10,EMIC9COD,SP70
          CALL      RSEMMX3
          CALL      RKEMMX3
          BRANCH    OVRCD,ADDCOD50
.
          MATCH     EMMXPDG,EMIC9COD             * Same diagnosis
          GOTO      ADDCOD50 IF NOT EQUAL
.
          MOVE      EMVCVIST,KEY8
          CALL      RDEMVIS1                     * Read EMR visit record
          BRANCH    OVRCD,ADDCOD50
.
          MOVE      EMMXBRG,EMVIREGN             * Update Body region
          MOVE      EMMXNAT,EMVINATI             * Update Nature of injury
          CALL      UPEMVIS1
.
ADDCOD50  CALL      SETEXT00      * Writes to EMR Text File for Emergency pat.
.
          MOVE      "EMRD",HISTTYPE
          MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            CALL      WRTHIS00
            PROC      EMRDRCHR              * Update Visit Billing Complete
          ENDIF
.
ADDCOD90  MOVE      ZERO,EXIT
          GOTO      ADDCOD99
.
ADDCOD99  RETURN
.
.------------------------------------------------------------
. Initialize's file data
.-----------------------------------------------------------
CLRVCD00  MOVE      SP70,EMVCVIST
          MOVE      SP70,EMVCTYPE
          MOVE      SP70,EMVCUNIQ
          MOVE      SP70,EMVCCSYS
          MOVE      SP70,EMVCMNCD
          MOVE      SP70,EMVCSEQU
          MOVE      SP70,EMVCDATE
          MOVE      SP70,EMVCTIME
          MOVE      SP70,EMVCUDC1
          MOVE      SP70,EMVCUDC2
          MOVE      SP70,EMVCUDC3
          MOVE      SP70,EMVCUDC4
          MOVE      SP70,EMVCUDR1
          MOVE      SP70,EMVCUDR2
          MOVE      SP70,EMVCUYN1
          MOVE      SP70,EMVCUYN2
          MOVE      SP70,EMVCUYN3
          MOVE      SP70,EMVCUYN4
          MOVE      ZERO,EMVCUDA1
          MOVE      ZERO,EMVCUDA2
          MOVE      ZERO,EMVCUDA3
          MOVE      ZERO,EMVCUDA4
          MOVE      SP70,EMVCUDD1
          MOVE      SP70,EMVCUDD2
          MOVE      SP70,EMVCUDD3
          MOVE      SP70,EMVCUDD4
          MOVE      SP70,EMVCUDT1
          MOVE      SP70,EMVCUDT2
          MOVE      SP70,EMVCUDT3
          MOVE      SP70,EMVCUDT4
          MOVE      SP70,EMVCEFLG
          MOVE      SP70,EMVCLUDT
          MOVE      SP70,EMVCLUTM
          MOVE      SP70,EMVCWUSR
          MOVE      SP70,EMVCSPAR
          MOVE      SP70,EMVCDELE
          MOVE      SP70,EMVCFTXT
.
CLRVCD99  RETURN
.
.------------------------------------------------------------
. Moves cgi variables into file variables
.------------------------------------------------------------
VCDSAV00  MOVE      EMVCD001,EMVCVIST
          MOVE      EMVCD002,EMVCTYPE
          MOVE      EMVCD003,EMVCUNIQ
          MOVE      EMVCD004,EMVCCSYS
          MOVE      EMVCD005,EMVCMNCD
.
          PACK      EMVCD006,EMVCD006,SP70
          MATCH     SP70,EMVCD006
          IF        @EQUAL
            MOVE      SEQFLAG,EMVCSEQU
            REP       " 0",EMVCSEQU
          ELSE
            MOVE      EMVCD006,EMVCSEQU
          ENDIF
.
          MOVE      EMVCD007,EMVCDATE
          MOVE      EMVCD008,EMVCTIME
          MOVE      EMVCD009,EMVCUDC1
          MOVE      EMVCD010,EMVCUDC2
          MOVE      EMVCD011,EMVCUDC3
          MOVE      EMVCD012,EMVCUDC4
          MOVE      EMVCD013,EMVCUDR1
          MOVE      EMVCD014,EMVCUDR2
          MOVE      EMVCD015,EMVCUYN1
          MOVE      EMVCD016,EMVCUYN2
          MOVE      EMVCD017,EMVCUYN3
          MOVE      EMVCD018,EMVCUYN4
          MOVE      EMVCD019,EMVCUDA1
          MOVE      EMVCD020,EMVCUDA2
          MOVE      EMVCD021,EMVCUDA3
          MOVE      EMVCD022,EMVCUDA4
          MOVE      EMVCD023,EMVCUDD1
          MOVE      EMVCD024,EMVCUDD2
          MOVE      EMVCD025,EMVCUDD3
          MOVE      EMVCD026,EMVCUDD4
          MOVE      EMVCD027,EMVCUDT1
          MOVE      EMVCD028,EMVCUDT2
          MOVE      EMVCD029,EMVCUDT3
          MOVE      EMVCD030,EMVCUDT4
          MOVE      EMVCD031,EMVCEFLG
          MOVE      EMVCD032,EMVCDELE
          MOVE      EMVCD033,EMVCFTXT
.
VCDSAV99  RETURN
.
.------------------------------------------------------------
.  Update EMR Test File
.------------------------------------------------------------
SETEXT00  BRANCH    EMVCCSYS,SETEXT99,SETEXT99,SETEXT99,SETEXT99
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          BRANCH    OVRCD,SETEXT99
.
          MOVE      SP70,KEY22
          MOVE      SP70,KEY48
          PACK      KEY8,EMVCVIST,SP70
          CALL      RDEMDCM1
          IF        OVRCD=1
            CALL      CLREMD00              * Clear the text file
            MOVE      EMVCVIST,EMDCADMI     * Updating diagnosis comments
.           UNPACK    EMICDESC,KEY48,KEY22                             *D-60868
            CALL      SPLDIA00                                         *I-60868
            MOVE      SP70,EMICDESC
            MOVE      KEY48,EMICDESC
            CALL      SETED000              * Diagnosis file variable storage
            MATCH     SP70,KEY22
            IF        !@EQUAL
              MOVE      SP70,EMICDESC
              MOVE      KEY22,EMICDESC
              CALL      SETED000              * Diagnosis file variable storage
            ENDIF
            CALL      WREMDCM1
          ELSE
            MOVE      EMVCVIST,EMDCADMI     * Updating diagnosis comments
.           UNPACK    EMICDESC,KEY48,KEY22                             *D-60868
            CALL      SPLDIA00                                         *I-60868
            MOVE      SP70,EMICDESC
            MOVE      KEY48,EMICDESC
            CALL      SETED000              * Diagnosis file variable storage
            MATCH     SP70,KEY22
            IF        !@EQUAL
              MOVE      SP70,EMICDESC
              MOVE      KEY22,EMICDESC
              CALL      SETED000              * Diagnosis file variable storage
            ENDIF
            CALL      UPEMDCM1
          ENDIF

SETEXT99  RETURN
.
.------------------------------------------------------------
.  Clear Diagnisis File
.------------------------------------------------------------
CLREMD00  MOVE      SP70,EMDCTXT1
          MOVE      SP70,EMDCTXT2
          MOVE      SP70,EMDCTXT3
          MOVE      SP70,EMDCTXT4
          MOVE      SP70,EMDCTXT5
          MOVE      SP70,EMDCTXT6
          MOVE      SP70,EMDCTXT7
          MOVE      SP70,EMDCTXT8
          MOVE      SP70,EMDCTXT9
          MOVE      SP70,EMDCLUID
          MOVE      SP70,EMDCSPAR
.
CLREMR99  RETURN
.
.------------------------------------------------------------
. Split Diagnosis in to KEY48 and KEY22                                *I-60868
.------------------------------------------------------------
SPLDIA00  MOVE      FORTY8,FORM2
SPLDIA10  RESET     EMICDESC,FORM2
          CMATCH    EMICDESC,SP1
.
          IF        @EQUAL
            UNPACK    EMICDESC,KEY22
            RESET     EMICDESC
            SETLPTR   EMICDESC,FORM2
            UNPACK    EMICDESC,KEY48
            RESET     EMICDESC
            GOTO      SPLDIA99
          ENDIF
.
          SUBTRACT  ONE,FORM2
.
          IF        FORM2=ZERO
            RESET     EMICDESC
            UNPACK    EMICDESC,KEY48,KEY22
          ELSE
            GOTO      SPLDIA10
          ENDIF
.
SPLDIA99  RETURN
.
.------------------------------------------------------------
.  Save Routen for Text
.------------------------------------------------------------
SETED000  MATCH     SP70,EMDCTXT1
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT1
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT2
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT2
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT3
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT3
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT4
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT4
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT5
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT5
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT6
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT6
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT7
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT7
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT8
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT8
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT9
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT9
            GOTO      SETED999
          ENDIF
.
SETED999  RETURN
.
.
.**********************************************************************
.         Update Default Printer File for User - LABELS
.**********************************************************************
UPDFPL00  MOVE      REPORTNO,F2
          MOVE      F2,KEY2
          REP       " 0",KEY2
          PACK      KEY20,PRGID,KEY2,WBSEUID,SP70
          UNPACK    KEY20,IBPDPID,IBPDREP,IBPDUID
.         
          MOVE      SELPRINT,IBPDPRT             * Printer
          MOVE      NOLABEL,IBPDCOP              * Number of copies
          UNPACK    LABELTYP,IBPDDOC,IBPDNUM     * Label name and number
.         
          MOVE      SP70,IBPDSPA
          CALL      RAIBPD1
          IF        OVRCD=0
            CALL      UPIBPD1
          ELSE
            CALL      WRIBPD1
          ENDIF
.
UPDFPL99  RETURN
.
.**********************************************************************
.         Update Default Printer File for User - FORMS
.**********************************************************************
UPDFPF00  MOVE      REPORTNO,F2
          MOVE      F2,KEY2
          REP       " 0",KEY2
          PACK      KEY20,PRGID,KEY2,WBSEUID,SP70
          UNPACK    KEY20,IBPDPID,IBPDREP,IBPDUID
.
          MOVE      SELPRINT,IBPDPRT             * Printer
          MOVE      NOLABEL,IBPDCOP              * Number of copies
          MOVE      STATNCOD,IBPDDOC             * Form name
          MOVE      SP70,IBPDNUM                 * Label number
.
          MOVE      SP70,IBPDSPA
          CALL      RAIBPD1
          IF        OVRCD=0
            CALL      UPIBPD1
          ELSE
            CALL      WRIBPD1
          ENDIF
.
UPDFPR99  RETURN
.
.------------------------------------------------------------------------------
. Track medical record to ED on pmi registration
.------------------------------------------------------------------------------
TEMR0000  MATCH     "1",MRCNEMRT                 * Auto track record to ED
          GOTO      TEMR9999 IF NOT EQUAL
.
          PACK      KEY8,ADMISSNO,SP70           * Linked medical record for
          CALL      RDMRVS1                      * this visit
          BRANCH    OVRCD,TEMR9999
.
          PACK      KEY10,MRVSMKEY,SP70          * Read medical record
          CALL      RDMRMAS2
          BRANCH    OVRCD,TEMR9999
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,TEMR9999
.
          PACK      KEY3,EMVISITE,SP70
          CALL      RDEMSIT1
          BRANCH    OVRCD,TEMR9999
.
          MATCH     SP70,EMSTDRES          * Movement Reason
          GOTO      TEMR9999 IF EQUAL
.
          MATCH     SP70,EMSTDRLC          * No tracking location for site
          GOTO      TEMR9999 IF EQUAL
.
....      MATCH     MRMACLOC,EMSTDRLC      * compare current loc to current ward
          PACK      MRLOCKEY,MRMACHOS,MRMACLOC,SP10 * Current MR Hosp. & Locatn
          PACK      KEY7,EMSTHSNO,EMSTDRLC,KEY10
          MATCH     KEY7,MRLOCKEY
          GOTO      TEMR9999 IF EQUAL
.
          CALL      CLMRTHIS               * Clear variables
          MOVE      MRMAKEY,MRHIKEY        * move record
          CALL      IBACLOCK
          PACK      MRHIDATE,CCC,CYY,CMM,CDD   * movement date
          REP       " 0",MRHIDATE
          CLOCK     TIME,MRHITIME          * movement time
          MOVE      EMSTDRLC,MRHILOC       * new location
..        MOVE      SP70,MRHIRECV          * receiver
          MOVE      EMSTDRES,MRHIREAS      * reason
..        MOVE      SP70,MRHIOPER          * operator
          CALL      CALDUE00               * calculate due date
          CALL      CALSTA00               * calculate status
.
          UNPACK    SP70,MRHIRCST,MRHIRCUI,MRHIRCDT,MRHIRCTM
.
          MATCH     "1",MRCNTREC            * System Using Tracking Receipt
          IF        @EQUAL
            MATCH     "1",MRLOTREC          * Location Using Tracking Receipt
            IF        @EQUAL
              MOVE      "1",MRHIRCST        * In Transit
            ELSE
              MOVE      "3",MRHIRCST        * Sent Direct
            ENDIF
          ENDIF
.
..        MOVE      SP70,MRHILOCK          * lock field
..        MOVE      SP70,MRHIREQB          * requested by
          MOVE      USERID,MRHIUSID        * userid
..        MOVE      SP70,MRHIEXTN          * extension
..        MOVE      SP70,MRHIPAGE          * pager
.
          PACK      KEY26,MRHIKEY,MRHIDATE,MRHITIME,SP70
          CALL      RAMRHIS1
          IF        OVRCD=1
            CALL      WRMRHIS1
          ENDIF
          MOVE      TWENTY3,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICRM       * Pass Med.Recs.Movement to DG
.
          PACK      KEY10,MRVSMKEY,SP70    * current location
          CALL      RDMRMAS2
          BRANCH    OVRCD,TEMR9999
.
          MOVE      EMSTHSNO,MRMACHOS      * new Hospital
          MOVE      EMSTDRLC,MRMACLOC      * new location
          CALL      IBACLOCK
          PACK      MRMADTUP,CCC,CYY,CMM,CDD
          REP       " 0",MRMADTUP
          MOVE      CTIMEIS,MRMATMUP
          MOVE      WBSEUID,MRMAUUID
          CALL      UPMRMAS2
.
TEMR9999  RETURN
.
.-------------------------------------------------------------------------------
. Calculate Status - returns MRHISTAT
.-------------------------------------------------------------------------------
CALSTA00  PACK      KEY7,MRMACHOS,MRMACLOC,SP70
          CALL      RDMRLOC1        * Read Location File for Indicator
          BRANCH    OVRCD,CALSTA99
.
          MATCH     "2",MRLOINDC
          IF        @EQUAL
            MOVE      ONE,MRHISTAT   * 1-Out
          ELSE
            MOVE      TWO,MRHISTAT   * 2-In
          ENDIF
.
CALSTA99  RETURN
.
.-------------------------------------------------------------------------------
. Calculate Due Date - returns MRHIDDUE
.-------------------------------------------------------------------------------
CALDUE00  MOVE      SP70,MRHIDDUE
.
          PACK      KEY4,MRHIREAS,SP70
          CALL      RDMRMOV1            * Get Borrowing Period
          BRANCH    OVRCD,CALDUE99
.
          UNPACK    MRHIDATE,CCENT,CYEAR,CMON,CDAY  * Date of Movement
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
          ADD       MRMOPERD,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      MRHIDDUE,CC,YY,MM,DD           * Calculated Due Date
          REP       " 0",MRHIDDUE
.
CALDUE99  RETURN
.
.-------------------------------------------------------------------------------
. Data integrity audit list
.-------------------------------------------------------------------------------
DITB0000  PACK      KEY24,ADMISSNO,SP70
          CALL      RSEMCHA1
DITB1000  CALL      RKEMCHA1
          BRANCH    OVRCD,DITB9999
.
          MATCH     ADMISSNO,EMCHVISN
          GOTO      DITB9999 IF NOT EQUAL
.
          PACK      HTMLLINK,SP70,SP70,SP70
.
          PACK      KEY10,EMCHUSID,SP70
          CALL      RDWBSE1
          IF        OVRCD=1
            MOVE      EMCHUSID,WBSENAM
          ENDIF
. 
          MOVE      SP70,UPTYDESC
          MOVE      ZERO,F2
          MOVE      EMCHUPTY,F2
          LOAD      UPTYDESC,F2,EMCHUP01,EMCHUP02,EMCHUP03,EMCHUP04,EMCHUP05:
                                EMCHUP06,EMCHUP07,EMCHUP08,EMCHUP09,EMCHUP10:
                                EMCHUP11,EMCHUP12,EMCHUP13,EMCHUP14,EMCHUP15:
                                EMCHUP16,EMCHUP17,EMCHUP18,EMCHUP19
.
          PACK      DISPOVAL,SP70,SP70
          PACK      DISPCVAL,SP70,SP70
.
          IF        F2=3|F2=19
            MOVE      EMCHOVAL,DISPOVAL
            MOVE      EMCHCVAL,DISPCVAL
            GOTO      DITB8000
          ENDIF
.
          IF        F2=4
            UNPACK    EMCHOVAL,CCENT,CYEAR,CMON,CDAY,KEY8,KEY10,EMCHOVAL
.
            MOVE      SP70,DOCFNAME
            MATCH     SP70,KEY10
            IF        !@EQUAL
              PACK      KEY6,KEY10,SP70
              CALL      RDOPNUR1
              IF        OVRCD<>1
                SQUEEZE   OPNRSNAM
                SQUEEZE   OPNRGNAM
                PACK      DOCFNAME,OPNRGNAM,SP1,OPNRSNAM
              ENDIF
            ENDIF
.
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      DISPOVAL,DOCFNAME,SP1,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                               SP1,DISPLYAT,SP1,KEY8
.
            UNPACK    EMCHCVAL,CCENT,CYEAR,CMON,CDAY,KEY8,KEY10,EMCHCVAL
.
            MOVE      SP70,DOCFNAME
            MATCH     SP70,KEY10
            IF        !@EQUAL
              PACK      KEY6,KEY10,SP70
              CALL      RDOPNUR1
              IF        OVRCD<>1
                SQUEEZE   OPNRSNAM
                SQUEEZE   OPNRGNAM
                PACK      DOCFNAME,OPNRGNAM,SP1,OPNRSNAM
              ENDIF
            ENDIF
.
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      DISPCVAL,DOCFNAME,SP1,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                               SP1,DISPLYAT,SP1,KEY8
            GOTO      DITB8000
          ENDIF
.
          IF        F2=5 | F2=6 | F2=14 | F2=15
            UNPACK    EMCHOVAL,CCENT,CYEAR,CMON,CDAY,KEY8,KEY10,KEY3,EMCHOVAL
            MATCH     SP70,CCENT
            IF        @EQUAL
              PACK      DISPOVAL,SP70,SP70
              GOTO      DITB2000
            ENDIF
.
            MOVE      SP70,DOCFNAME
            MATCH     SP70,KEY10
            IF        !@EQUAL
              CALL      RDPMHCP1
              IF        OVRCD<>1
                MOVE      PMHCTITL,FMTTITLE
                MOVE      PMHCGNAM,FMTGNAME
                MOVE      PMHCSNAM,FMTSNAME
                CALL      DOCNM000
              ENDIF
            ENDIF
.
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
.
            MATCH     SP70,KEY3
            IF        @EQUAL | @EOS
              PACK      DISPOVAL,DOCFNAME,SP1,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                                 SP1,DISPLYAT,SP1,KEY8
            ELSE
              PACK      DISPOVAL,DOCFNAME,SP1,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                                 SP1,DISPLYAT,SP1,KEY8,SP1,DISPLYRS,SP1,KEY3
            ENDIF
.           
DITB2000    UNPACK    EMCHCVAL,CCENT,CYEAR,CMON,CDAY,KEY8,KEY10,KEY3,EMCHCVAL
            MATCH     SP70,CCENT
            IF        @EQUAL
              PACK      DISPCVAL,SP70,SP70
              GOTO      DITB8000
            ENDIF
.
            MOVE      SP70,DOCFNAME
            MATCH     SP70,KEY10
            IF        !@EQUAL
              CALL      RDPMHCP1
              IF        OVRCD<>1
                MOVE      PMHCTITL,FMTTITLE
                MOVE      PMHCGNAM,FMTGNAME
                MOVE      PMHCSNAM,FMTSNAME
                CALL      DOCNM000
              ENDIF
            ENDIF
.
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
.
            MATCH     SP70,KEY3
            IF        @EQUAL | @EOS
              PACK      DISPCVAL,DOCFNAME,SP1,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                                 SP1,DISPLYAT,SP1,KEY8
            ELSE
              PACK      DISPCVAL,DOCFNAME,SP1,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                                 SP1,DISPLYAT,SP1,KEY8,SP1,DISPLYRS,SP1,KEY3
            ENDIF
            GOTO      DITB8000
          ENDIF
.
          IF        F2=1 | F2=2 | F2=7 | F2=16 | F2=17
            MATCH     SP70,EMCHOVAL
            IF        @EQUAL
              PACK      DISPOVAL,SP70,SP70
            ELSE
              UNPACK    EMCHOVAL,CCENT,CYEAR,CMON,CDAY,EMCHOVAL
              MOVE      CMON,F2
              LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV:
                                DEC
              PACK      DISPOVAL,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                                 SP1,DISPLYAT,SP1,EMCHOVAL
            ENDIF
.
            MATCH     SP70,EMCHCVAL
            IF        @EQUAL
              PACK      DISPCVAL,SP70,SP70
            ELSE
              UNPACK    EMCHCVAL,CCENT,CYEAR,CMON,CDAY,EMCHCVAL
              MOVE      CMON,F2
              LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV:
                                DEC
              PACK      DISPCVAL,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                                 SP1,DISPLYAT,SP1,EMCHCVAL
            ENDIF
            GOTO      DITB8000
          ENDIF
.
          IF        F2=8
            UNPACK    EMCHOVAL,KEY10,CCENT,CYEAR,CMON,CDAY,HOUR,MIN,SEC
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
.
            PACK      KEY6,KEY10,SP70
            CALL      RDOPNUR1
            IF        OVRCD=1
              UNPACK    SP70,DTITL,DGNAME,DSNAME
            ENDIF
.
            PACK      DISPOVAL,OPNRGNAM,OPNRSNAM,SP1
.
            UNPACK    EMCHCVAL,KEY10,CCENT,CYEAR,CMON,CDAY,HOUR,MIN,SEC
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC

            PACK      KEY6,KEY10,SP70
            CALL      RDOPNUR1
            IF        OVRCD=1
              UNPACK    SP70,DTITL,DGNAME,DSNAME
            ENDIF
.
            PACK      DISPCVAL,OPNRGNAM,OPNRSNAM,SP1
            GOTO      DITB8000
          ENDIF
.
          IF        F2=9
            CALL      ORGVLN00
            CALL      CHGVLN00  
            GOTO      DITB8000
          ENDIF
.
          IF        F2=10
            PACK      KEY5,ANSE,ANSD,EMCHOVAL,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              PACK      DISPOVAL,EMCHOVAL,SP70,SP70
            ELSE
              PACK      DISPOVAL,TDESC,SP70
            ENDIF
            PACK      KEY5,ANSE,ANSD,EMCHCVAL,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              PACK      DISPCVAL,EMCHCVAL,SP70,SP70
            ELSE
              PACK      DISPCVAL,TDESC,SP70
            ENDIF
            GOTO      DITB8000
          ENDIF
.
          IF        F2=11
            PACK      KEY5,CATEU,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      TDESC,UPTYDESC
            ENDIF
            MATCH     SP70,EMCHOVAL
            IF        !@EQUAL
              PACK      KEY5,CATEU,EMCHOVAL,SP70
              CALL      RDCODE1
              IF        OVRCD=1
                PACK      DISPOVAL,EMCHOVAL,SP70,SP70
              ELSE
                PACK      DISPOVAL,TDESC,SP70
              ENDIF     
            ENDIF
            MATCH     SP70,EMCHCVAL
            IF        !@EQUAL
              PACK      KEY5,CATEU,EMCHCVAL,SP70
              CALL      RDCODE1
              IF        OVRCD=1
                PACK      DISPCVAL,EMCHCVAL,SP70,SP70
              ELSE
                PACK      DISPCVAL,TDESC,SP70
              ENDIF   
            ENDIF
            GOTO      DITB8000
          ENDIF
.
          IF        F2=12|F2=13
            CALL      ORGVLD00
            CALL      CHGVLD00  
            GOTO      DITB8000
          ENDIF
.
          IF        F2=18
            UNPACK    EMCHOVAL,KEY3,D3,D5
            PACK      KEY5,ANSY,ANSW,KEY3,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      KEY3,TDESC
            ENDIF
            MOVE      TDESC,DIM20
.
            PACK      KEY5,ANSY,ANSX,D3,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      D3,TDESC
            ENDIF
.
            PACK      KEY5,D5,SP70
            CALL      RDPTVAD1
            IF        OVRCD=1
              MOVE      SP70,PTVADESC
            ENDIF
.
            PACK      DISPOVAL,DIM20,SP1,TDESC,SP1,PTVADESC

            UNPACK    EMCHCVAL,KEY3,D3,D5
            PACK      KEY5,ANSY,ANSW,KEY3,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      KEY3,TDESC
            ENDIF
            MOVE      TDESC,DIM20
.
            PACK      KEY5,ANSY,ANSX,D3,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      D3,TDESC
            ENDIF
.
            PACK      KEY5,D5,SP70
            CALL      RDPTVAD1
            IF        OVRCD=1
              MOVE      SP70,PTVADESC
            ENDIF
.
            PACK      DISPCVAL,DIM20,SP1,TDESC,SP1,PTVADESC
            GOTO      DITB8000
          ENDIF
.
DITB8000  MATCH     SP70,EMCHREAS
          IF        @EQUAL | @EOS
            MOVE      SP70,TDESC
            GOTO      DITB8010
          ENDIF
.
          PACK      KEY5,ANSF,ANSW,EMCHREAS,SP70
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      EMCHREAS,TDESC
          ENDIF
. 
DITB8010  WRITE     HTMLFILE;"t.addRow(#"",HTMLLINK,"#",":           * 0
                             "#"",EMCHDATE,EMCHTIME,"#",":           * 1
                             "#"",EMCHDATE,"#",":                    * 2
                             "#"",EMCHTIME,"#",":                    * 3
                             "#"",EMCHUSID,"#",":                    * 4
                             "#"",WBSENAM,"#",":                     * 5
                             "#"",EMCHREAS,"#",":                    * 6
                             "#"",TDESC,"#",":                       * 7
                             "#"",UPTYDESC,"#",":                    * 8 
                             "#"",DISPOVAL,"#",":                    * 9 
                             "#"",DISPCVAL,"#");"                    * 10 
.
          GOTO      DITB1000
.
DITB9999  RETURN
.
.------------------------------------------------------------
. Convert original value of emergency field change edit table 
. into display format for Doctor
.------------------------------------------------------------
ORGVLD00  MATCH     SP70,EMCHOVAL
          GOTO      ORGVLD99 IF EQUAL
.
          UNPACK    EMCHOVAL,KEY10,CCENT,CYEAR,CMON,CDAY,HOUR,MIN,SEC
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
.
          MOVE      SP70,DOCFNAME
          MATCH     SP70,KEY10
          IF        !@EQUAL
            CALL      RDPMHCP1
            IF        OVRCD<>1
              MOVE      PMHCTITL,FMTTITLE
              MOVE      PMHCGNAM,FMTGNAME
              MOVE      PMHCSNAM,FMTSNAME
              CALL      DOCNM000
            ENDIF
          ENDIF
.
          PACK      DISPOVAL,DOCFNAME,SP1:
                    CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                    SP1,DISPLYAT,SP1:
                    HOUR,COLON,MIN,COLON,SEC
.
ORGVLD99  RETURN
.
.------------------------------------------------------------
. Convert changed value of emergency field change edit table 
. into display format for doctor
.------------------------------------------------------------
CHGVLD00  MATCH     SP70,EMCHCVAL
          GOTO      CHGVLD99 IF EQUAL
.
          UNPACK    EMCHCVAL,KEY10,CCENT,CYEAR,CMON,CDAY,HOUR,MIN,SEC
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
.
          MOVE      SP70,DOCFNAME
          MATCH     SP70,KEY10
          IF        !@EQUAL
            CALL      RDPMHCP1
            IF        OVRCD<>1
              MOVE      PMHCTITL,FMTTITLE
              MOVE      PMHCGNAM,FMTGNAME
              MOVE      PMHCSNAM,FMTSNAME
              CALL      DOCNM000
            ENDIF
          ENDIF
.
          PACK      DISPCVAL,DOCFNAME,SP1:
                    CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                    SP1,DISPLYAT,SP1:
                    HOUR,COLON,MIN,COLON,SEC
.
CHGVLD99  RETURN
.
.------------------------------------------------------------
. Convert original value of emergency field change edit table 
. into display format for Nurse
.------------------------------------------------------------
ORGVLN00  MATCH     SP70,EMCHOVAL
          GOTO      ORGVLN99 IF EQUAL
.
          UNPACK    EMCHOVAL,KEY10,CCENT,CYEAR,CMON,CDAY,HOUR,MIN,SEC
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
.
          PACK      KEY6,KEY10,SP70
          CALL      RDOPNUR1
          IF        OVRCD=1
            MOVE      SP70,OPNRGNAM
            MOVE      SP70,OPNRSNAM
          ENDIF
.
          PACK      DISPOVAL,OPNRGNAM,OPNRSNAM,SP1:
                             CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                             SP1,DISPLYAT,SP1:
                             HOUR,COLON,MIN,COLON,SEC
.
ORGVLN99  RETURN
.
.------------------------------------------------------------
. Convert changed value of emergency field change edit table
. into display format for Nurse
.------------------------------------------------------------
CHGVLN00  MATCH     SP70,EMCHCVAL
          GOTO      CHGVLN99 IF EQUAL
.
          UNPACK    EMCHCVAL,KEY10,CCENT,CYEAR,CMON,CDAY,HOUR,MIN,SEC
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
.
          PACK      KEY6,KEY10,SP70
          CALL      RDOPNUR1
          IF        OVRCD=1
            MOVE      SP70,OPNRGNAM
            MOVE      SP70,OPNRSNAM
          ENDIF
.
          PACK      DISPCVAL,OPNRGNAM,OPNRSNAM,SP1:
                             CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                             SP1,DISPLYAT,SP1:
                             HOUR,COLON,MIN,COLON,SEC
.
CHGVLN99  RETURN
.
.------------------------------------------------------------
. MDTI0000 Change mental health practitioner seen date/time
.------------------------------------------------------------
MDTI0000  RESET     UPDTTYPE
          MATCH     SP10,UPDTTYPE
          GOTO      MDTI9999 IF EQUAL
.
          MOVE      ZERO,EXIT
.
          MATCH     "MHPRA",UPDTTYPE    * Update seen date and time
          IF       @EQUAL
            CALL     CHGMD000
            BRANCH   EXIT,MDTI9000,MDTI9100
          ENDIF
.
          GOTO      MDTI9999
.
MDTI9000  CLEAR     WEBTITLE
          APPEND    "Mental Health ",WEBTITLE
          APPEND    "Doctor Seen Date/Time before Arrival Date/Time",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      MDTI9999
.
MDTI9100  CLEAR     WEBTITLE
          APPEND    "Mental Health ",WEBTITLE
          APPEND    "Doctor Seen Date/Time is after Dischage Date/Time",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      MDTI9999
.
MDTI9999  RETURN
.-----------------------------------------------------------
. Change mental health practitioner seen date/time
.------------------------------------------------------------
CHGMD000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,CHGMD999
.
          PACK      KEY16,EMVIDATE,EMVITIME,SP70
          REP       ":0",KEY16
          PACK      SAVKEY16,DOCTDATE,DOCTTIME,SP70
          REP       ":0",SAVKEY16
.
          MATCH     SP70,EMVIMPRA
          IF        !@EQUAL
            MOVE      "06",UPDFIELD
            PACK      UPDVALUE,EMVIMPDT,EMVIMPTM,EMVIMPRA,SP70
            PACK      NEWVALUE,DOCTDATE,DOCTTIME,FRSTDOCT,SP70
          ENDIF
.
CHGMD050  MATCH     SP70,FRSTDOCT       * MH practitioner deletion
          GOTO      CHGMD900 IF EQUAL
.
          MATCH     "1",EMVITRIG
          IF        @EQUAL
            MATCH     SAVKEY16,KEY16    * check arrival date/time ok to be
            GOTO      CHGMD200 IF EQUAL * equal if triage category 1
          ENDIF
.
          MATCH     SAVKEY16,KEY16      * check arrival date/time
          IF        !@LESS
            MOVE      ONE,EXIT
            GOTO      CHGMD999
          ENDIF
.
CHGMD200  PACK      KEY16,EMVIDDAT,EMVIDTIM,SP70
          MATCH     SP70,KEY16
          GOTO      CHGMD900 IF EQUAL
          REP       ":0",KEY16
.
          MATCH     KEY16,SAVKEY16    * check discharge date/time
          IF        !@LESS
            MOVE      TWO,EXIT
            GOTO      CHGMD999
          ENDIF
.
CHGMD900  MOVE      FRSTDOCT,EMVIMPRA
          MOVE      DOCTDATE,EMVIMPDT
          MOVE      DOCTTIME,EMVIMPTM
.
          MATCH     Z70,EMVIS065
          IF        !@EQUAL
            MOVE      EMVIS065,EMVIUC25
          ENDIF
.
          MATCH     Z70,EMVIS167
          IF        !@EQUAL
            MOVE      EMVIS167,EMVIUC31
          ENDIF
.
          CALL      UPEMVIS1
.
          MATCH     SP70,FRSTDOCT
          IF        !@EQUAL
            CALL      WRTHIS00
          ELSE
            PACK      KEY22,ADMISSNO,Z70
            CALL      RSEMHIS1
CHGMD950    CALL      RPEMHIS1
            BRANCH    OVRCD,CHGMD960
.
            MATCH     ADMISSNO,EMHIVIS
            GOTO      CHGMD960 IF NOT EQUAL
.
            MATCH     "MHPRA",EMHIUPT
            GOTO      CHGMD950 IF NOT EQUAL
.
            PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
            CALL      DEEMHIS1
.
            GOTO      CHGMD950
          ENDIF
.
CHGMD960  PROC      EMRDRCHR          * Update Visit Billing Complete
          CALL      WRCHA000          * Write date integrity audit
.
CHGMD999  RETURN
.
.------------------------------------------------------------
. Change initial assessor seen date/time
. (Meet & Greet Ass. Doctor)
.------------------------------------------------------------
INTA0000  RESET     UPDTTYPE
          MATCH     SP10,UPDTTYPE
          GOTO      INTA9999 IF EQUAL
.
          MOVE      ZERO,EXIT
.
          MATCH     "INTAS",UPDTTYPE    * Update seen date and time
          IF       @EQUAL
            CALL     CHINT000
            BRANCH   EXIT,INTA9000,INTA9100,INTA9200
          ENDIF
.
          GOTO      INTA9999
.
INTA9000  CLEAR     WEBTITLE
          APPEND    "Initial Assessor ",WEBTITLE
          APPEND    "Seen Date/Time before Arrival Date/Time",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      INTA9999
.
INTA9100  CLEAR     WEBTITLE
          APPEND    "Initial Assessor ",WEBTITLE
          APPEND    "Seen Date/Time is after Dischage Date/Time",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      INTA9999
.
INTA9200  CLEAR     WEBTITLE
          APPEND    "Initial Assessor Seen ",WEBTITLE
          APPEND    "Date/Time after First Seen by Doctor Date/Time",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
INTA9999  RETURN
.
.-----------------------------------------------------------
. Change initial assessor seen date/time
. (Meet & Greet Ass. Doctor)
.------------------------------------------------------------
CHINT000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,CHINT999
.
          PACK      KEY16,EMVIDATE,EMVITIME,SP70
          REP       ":0",KEY16
          PACK      SAVKEY16,DOCTDATE,DOCTTIME,SP70
          REP       ":0",SAVKEY16
.
          MATCH     SP70,EMVIMDDT
          IF        !@EQUAL
            MOVE      "14",UPDFIELD
.
            MATCH     "1",HEAAMBIN
            IF        @EQUAL
              PACK      UPDVALUE,EMVIMDDT,EMVIMDTM,EMVIMDCD,EMVIUC31,SP70
              PACK      NEWVALUE,DOCTDATE,DOCTTIME,FRSTDOCT,EMVIS167,SP70
            ELSE
              PACK      UPDVALUE,EMVIMDDT,EMVIMDTM,EMVIMDCD,SP70
              PACK      NEWVALUE,DOCTDATE,DOCTTIME,FRSTDOCT,SP70
            ENDIF
          ENDIF
.
CHINT050  MATCH     SP70,FRSTDOCT       * Delete initial assessor
          GOTO      CHINT900 IF EQUAL
.
          MATCH     "1",EMVITRIG
          IF        @EQUAL
            MATCH     SAVKEY16,KEY16    * check arrival date/time ok to be
            GOTO      CHINT200 IF EQUAL * equal if triage category 1
          ENDIF
.
          MATCH     SAVKEY16,KEY16      * check arrival date/time
          IF        !@LESS
            MOVE      ONE,EXIT
            GOTO      CHINT999
          ENDIF
.
CHINT200  COMPARE   ONE,EMVISTAT       * Current visit
          GOTO      CHINT300 IF EQUAL
.
          PACK      KEY16,EMVIDDAT,EMVIDTIM,SP70
          MATCH     SP70,KEY16
          GOTO      CHINT300 IF EQUAL
          REP       ":0",KEY16
.
          MATCH     KEY16,SAVKEY16    * check discharge date/time
          IF        !@LESS
            MOVE      TWO,EXIT
            GOTO      CHINT999
          ENDIF
.
CHINT300  PACK      KEY16,EMVIDRDT,EMVIDRTM,SP70
          MATCH     SP70,KEY16
          GOTO      CHINT900 IF EQUAL
          REP       ":0",KEY16
.
          MATCH     SAVKEY16,KEY16    * check doctor seen date/time
          IF        @LESS
            MOVE      THREE,EXIT
            GOTO      CHINT999
          ENDIF
.
CHINT900  MOVE      FRSTDOCT,EMVIMDCD
          MOVE      DOCTDATE,EMVIMDDT
          MOVE      DOCTTIME,EMVIMDTM
.
          MATCH     Z70,EMVIS167
          IF        !@EQUAL
            MOVE      EMVIS167,EMVIUC31
          ENDIF
.
          CALL      UPEMVIS1
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
CHINT910  CALL      RKEMHIS1
          BRANCH    OVRCD,CHINT915
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      CHINT915 IF NOT EQUAL
.
          MATCH     "INTAS",EMHIUPT
          GOTO      CHINT920 IF EQUAL   
.
          GOTO      CHINT910
.
CHINT915  CALL      WRTHIS00
CHINT920  PROC      EMRDRCHR          * Update Visit Billing Complete
          CALL      WRCHA000          * Write date integrity audit
.
CHINT999  RETURN
.
.------------------------------------------------------------
. Change other doctor seen date/time
. (EMVIUR04)
.------------------------------------------------------------
ODOC0000  RESET     UPDTTYPE
          MATCH     SP10,UPDTTYPE
          GOTO      ODOC9999 IF EQUAL
.
          MOVE      ZERO,EXIT
.
          MATCH     "OTDOC",UPDTTYPE    * Update seen date and time
          IF       @EQUAL
            CALL     CHODC000
            BRANCH   EXIT,ODOC9000,ODOC9100
          ENDIF
.
          GOTO      ODOC9999
.
ODOC9000  CLEAR     WEBTITLE
          APPEND    "Other Doctor ",WEBTITLE
          APPEND    "Seen Date/Time before Arrival Date/Time",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ODOC9999
.
ODOC9100  CLEAR     WEBTITLE
          APPEND    "Other Doctor ",WEBTITLE
          APPEND    "Seen Date/Time is after Dischage Date/Time",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ODOC9999
.
ODOC9999  RETURN
.
.-----------------------------------------------------------
. Change other doctor seen date/time
. (EMVIUR04)
.------------------------------------------------------------
CHODC000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,CHODC999
.
          PACK      KEY16,EMVIDATE,EMVITIME,SP70
          REP       ":0",KEY16
          PACK      SAVKEY16,DOCTDATE,DOCTTIME,SP70
          REP       ":0",SAVKEY16
.
          MOVE      ZERO,EDWARDFL           * Not using EDWARD
.
          MATCH     SP70,PTCNNSSI           * no edward source system
          GOTO      CHODC020 IF EQUAL
.
          MATCH     ZERO20,PTCNNSSI         * no edward source system
          GOTO      CHODC020 IF EQUAL
.
          MOVE      ONE,EDWARDFL            * Yes using EDWARD
.
CHODC020  MATCH     SP70,EMVIMDDT
          IF        !@EQUAL
            MOVE      "15",UPDFIELD
            IF        EDWARDFL=1
              PACK      UPDVALUE,EMVIUR04,EMVIUD10,EMVIUT10,SP70
            ELSE
              PACK      UPDVALUE,EMVIUR04,EMVIUD09,EMVIUT09,SP70
            ENDIF
            PACK      NEWVALUE,FRSTDOCT,DOCTDATE,DOCTTIME,SP70
          ENDIF
.
CHODC050  MATCH     SP70,FRSTDOCT       * Delete initial assessor
          GOTO      CHODC900 IF EQUAL
.
          MATCH     "1",EMVITRIG
          IF        @EQUAL
            MATCH     SAVKEY16,KEY16    * check arrival date/time ok to be
            GOTO      CHODC200 IF EQUAL * equal if triage category 1
          ENDIF
.
          MATCH     SAVKEY16,KEY16      * check arrival date/time
          IF        !@LESS
            MOVE      ONE,EXIT
            GOTO      CHODC999
          ENDIF
.
CHODC200  PACK      KEY16,EMVIDDAT,EMVIDTIM,SP70
          MATCH     SP70,KEY16
          GOTO      CHODC900 IF EQUAL
          REP       ":0",KEY16
.
          MATCH     KEY16,SAVKEY16    * check discharge date/time
          IF        !@LESS
            MOVE      TWO,EXIT
            GOTO      CHODC999
          ENDIF
.
CHODC900  MOVE      FRSTDOCT,EMVIUR04
.
          IF        EDWARDFL=1
            MOVE      DOCTDATE,EMVIUD10
            MOVE      DOCTTIME,EMVIUT10
          ELSE
            MOVE      DOCTDATE,EMVIUD09
            MOVE      DOCTTIME,EMVIUT09
          ENDIF
.
          CALL      UPEMVIS1
.
          CALL      WRTHIS00
          PROC      EMRDRCHR          * Update Visit Billing Complete
          CALL      WRCHA000          * Write date integrity audit
.
CHODC999  RETURN

+
.------------------------------------------------------------
. Write the diagnosis after discharge. This will not return
. any error or warning messages.
.------------------------------------------------------------
PDGH0000  MATCH     SP70,EMVCD001           * Exit if visit number
          GOTO      PDGH9999 IF EQUAL
.
          MATCH     SP70,EMVCD002           * Exit if no coding type
          GOTO      PDGH9999 IF EQUAL
.
          MATCH     "005",EMVCD002          * Exit if not diagnosis coding
          GOTO      PDGH9999 IF NOT EQUAL
.
          MATCH     "5",EMVCD004            * Exit if not emricdaf coding
          GOTO      PDGH9999 IF NOT EQUAL
.
          MATCH     SP70,EMVCD005           * Delete Primary Diagnosis
          IF        @EQUAL
            CALL      DELCOD00
            GOTO      PDGH9999
          ENDIF
.
          PACK      KEY14,EMVCD001,EMVCD002,EMVCD003,SP70     * Update the 
          CALL      RDEMVCD1                                  * primary diag
          IF        OVRCD=0
            MOVE      EMVCD005,EMVCMNCD
            MOVE      EMVCD033,EMVCFTXT
            CALL      UPEMVCD1
.
            MATCH     "000",EMVCSEQU               * Primary diagnosis
            GOTO      PDGH9999 IF NOT EQUAL
.
            PACK      KEY9,EMVCMNCD,SP70
            CALL      RDEMICD1                     * Get VEMD code
            BRANCH    OVRCD,PDGH9999
.
            PACK      KEY10,EMIC9COD,SP70
            CALL      RSEMMX3
            CALL      RKEMMX3
            BRANCH    OVRCD,PDGH9999
.
            MATCH     EMMXPDG,EMIC9COD             * Same diagnosis
            GOTO      PDGH9999 IF NOT EQUAL
.
            MOVE      EMVCVIST,KEY8
            CALL      RDEMVIS1                     * Read EMR visit record
            BRANCH    OVRCD,PDGH9999
.
            MOVE      EMMXBRG,EMVIREGN             * Update Body region
            MOVE      EMMXNAT,EMVINATI             * Update Nature of injury
            CALL      UPEMVIS1
          ELSE
            CALL      ADDCOD00
          ENDIF
.
PDGH9999  RETURN
.
.------------------------------------------------------------
. Delete Primary Diagnosis from emrvcdaf
.------------------------------------------------------------
DELCOD00  PACK      KEY14,EMVCD001,EMVCD002,EMVCD003,SP70
          CALL      RDEMVCD1
          IF        OVRCD=0
            CALL      DEEMVCD1
.
            PACK      KEY8,EMVCD001,SP70
            CALL      DAEC0000         * Update delete flag for AECC Class rec.
.
            PACK      KEY14,EMVCD001,EMVCD002,SP70
            CALL      RSEMVCD1
            CALL      RKEMVCD1
            BRANCH    OVRCD,DELCOD99
.
            MATCH     EMVCD001,EMVCVIST
            GOTO      DELCOD99 IF NOT EQUAL
.
            MATCH     EMVCD002,EMVCTYPE
            GOTO      DELCOD99 IF NOT EQUAL
.
            MOVE      "000",EMVCSEQU
            CALL      UPEMVCD1
.
          ENDIF
.
DELCOD99  RETURN
.------------------------------------------------------------
. Get emr primary diagnosis key word     
.------------------------------------------------------------
EMDGKW00  PACK      KEY14,EMVIADMN,ZERO,ZERO,FIVE,SP70
          CALL      RSEMVCD1
EMDGKW10  CALL      RKEMVCD1
          BRANCH    OVRCD,EMDGKW99
.   
          MATCH     DEMVIADM,EMVCVIST
          GOTO      EMDGKW99 IF NOT EQUAL
.   
          MATCH     "005",EMVCTYPE          * Emergency diagnosis ?
          GOTO      EMDGKW99 IF NOT EQUAL
.   
          MATCH     "000",EMVCSEQU          * Primary diagnosis
          GOTO      EMDGKW10 IF NOT EQUAL
.
          PACK      KEY24,EMVCMNCD,SP70
          CALL      RSEMKED1
EMDGKW50  CALL      RKEMKED1
          BRANCH    OVRCD,EMDGKW99
.
          MOVE      EMVCMNCD,DIM9
          MATCH     DIM9,EMEDITM
          GOTO      EMDGKW99 IF NOT EQUAL
.
          MATCH     SP70,EMEDKWD
          GOTO      EMDGKW50 IF EQUAL
          GOTO      EMDGKW50 IF EOS
.
          WRITE     HTMLFILE;EMEDKWD;
.
EMDGKW99  RETURN
.
.------------------------------------------------------------
. Get emr first additional diagnosis key word
.------------------------------------------------------------
EMDAKW00  PACK      KEY14,EMVIADMN,ZERO,ZERO,FIVE,SP70
          CALL      RSEMVCD1
EMDAKW10  CALL      RKEMVCD1
          BRANCH    OVRCD,EMDAKW99
.
          MATCH     DEMVIADM,EMVCVIST
          GOTO      EMDAKW99 IF NOT EQUAL
.
          MATCH     "005",EMVCTYPE          * Emergency diagnosis ?
          GOTO      EMDAKW99 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU          * Skip Primary diagnosis
          GOTO      EMDAKW10 IF EQUAL
.
          PACK      KEY24,EMVCMNCD,SP70     * First additional diagnosis
          CALL      RSEMKED1
EMDAKW50  CALL      RKEMKED1
          BRANCH    OVRCD,EMDAKW99
.
          MOVE      EMVCMNCD,DIM9
          MATCH     DIM9,EMEDITM
          GOTO      EMDAKW99 IF NOT EQUAL
.
          MATCH     SP70,EMEDKWD
          GOTO      EMDAKW50 IF EQUAL
          GOTO      EMDAKW50 IF EOS
.
          WRITE     HTMLFILE;EMEDKWD;
.
EMDAKW99  RETURN
.
.-----------------------------------------------------------
.         MAGRAN tags  
.-----------------------------------------------------------
MAGRAN00  MOVE      SP70,EMHINUR
          MOVE      SP70,EMHINSD
          MOVE      SP70,EMHINST
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
MAGRAN10  CALL      RKEMHIS1
          BRANCH    OVRCD,MAGRAN99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      MAGRAN99 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      MAGRAN10 IF NOT EQUAL
.
          BRANCH    FORM1,MAGRAN20,MAGRAN30,MAGRAN40,MAGRAN50
          GOTO      MAGRAN99
.
MAGRAN20  WRITE     HTMLFILE;EMHINUR;
          GOTO      MAGRAN99
.
MAGRAN30  MATCH     SP70,EMHINSD
          GOTO      EMDL9999 IF EQUAL
.
          UNPACK    EMHINSD,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC 
.
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR; 
.
          GOTO      MAGRAN99
.
MAGRAN40  UNPACK    EMHINST,HOUR,MIN,SEC
          PACK      DOCTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",DOCTIME    
          WRITE     HTMLFILE;DOCTIME;
          GOTO      MAGRAN99
.
MAGRAN50  PACK      KEY6,EMHINUR,SP70
          CALL      RDOPNUR1
          BRANCH    OVRCD,MAGRAN99
          SQUEEZE   OPNRSNAM
          SQUEEZE   OPNRGNAM
          PACK      KEY60,OPNRGNAM,SP1,OPNRSNAM
          WRITE     HTMLFILE;KEY60;
          GOTO      MAGRAN99
.
MAGRAN99  RETURN
+
.-----------------------------------------------------------
. Allocate the doctor seen when adding a MH practitioner
.------------------------------------------------------------
DSEE0000  PACK      KEY8,ADMISSNO,SP70     
          CALL      RLEMVIS1
          BRANCH    OVRCD,DSEE9999,DSEE9999
.         
          MATCH     SP70,EMVIDOCT          * Already seen by a doctor so exit
          GOTO      DSEE9000 IF NOT EQUAL
.
          MATCH     SP70,EMVIDRDT          * Already seen by a doctor so exit
          GOTO      DSEE9000 IF NOT EQUAL        
.
          MATCH     SP70,EMVIMPRA          * No doctor to allocate so exit
          GOTO      DSEE9000 IF EQUAL
.           
          COMPARE   FOUR,EMVISTAT          * Exit if cancelled ED visit
          GOTO      DSEE9000 IF EQUAL
.               
          MATCH     "1",EMVITRIG           * Triage cat of 1 (RED)
          GOTO      DSEE1000 IF NOT EQUAL
.
          MOVE      EMVIMPRA,EMVIDOCT
          MOVE      EMVIDATE,EMVIDRDT      * Make seen date and time the same
          MOVE      EMVITIME,EMVIDRTM      * as arrival date and time
          GOTO      DSEE2000
.
DSEE1000  MOVE      EMVIMPRA,EMVIDOCT
          MOVE      EMVIMPDT,EMVIDRDT
          MOVE      EMVIMPTM,EMVIDRTM
.
DSEE2000  CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
.
          IF        CCCNSVHM = 1
            OPEN      CCIEX7A1,"cciex7af"
            IF        EMVISTAT=2|EMVISTAT=3
              MATCH     EMVIDOCT,SAVEDOCT
              IF        !@EQUAL
                MOVE      ANST,CLEXSTAT
                MOVE      ONE,CLEXTYPE
                MOVE      EMVIADMN,CLEXVISN
                PACK      KEY11,CLEXSTAT,CLEXTYPE,CLEXVISN
                CALL      RDCLEX71
                IF        OVRCD = 1
                  CALL      WRCLEX71
                ENDIF
              ENDIF
            ENDIF
            CLOSE     CCIEX7A1
          ENDIF
.
.         Send update broadcast message
.
          MOVE      EMVIURNO,KEY8          * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,DSEE7000
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,DSEE7000
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,DSEE7000
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TWENTY4,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                  * send update emr details
.
DSEE7000  CALL      WDHIST00                  * Write allocate doctor history
          GOTO      DSEE9999
.
DSEE9000  CALL      ULEMVIS1
.
DSEE9999  RETURN
.
.---------------------------------------------------------------
. Write allocate doctor history record from add MH practitioner
.---------------------------------------------------------------
WDHIST00  MOVE      SP70,SAVEDOCT
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
WDHIST05  CALL      RPEMHIS1                * There will always be a previous
          BRANCH    OVRCD,WDHIST99          * history record for the arrival
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      WDHIST99 IF NOT EQUAL
.
          MOVE      EMHIDOC,SAVEDOCT
.
WDHIST10  MOVE      EMVIADMN,EMHIVIS
          CLOCK     TIME,CTIMEIS
.
          PACK      EMHIDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMHIDAT
          UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
          PACK      EMHITIM,HOUR,MIN,SEC
          REP       " 0",EMHITIM
.
          MATCH     SAVEDOCT,EMVIDOCT         * Is this a new doctor
          GOTO      WDHIST99 IF EQUAL
.
          MATCH     "1",EMVITRIG              * Triage cat of RED
          IF        @EQUAL
            MOVE      EMVIDATE,EMHIDSD   * Make seen date/time the same as
            UNPACK    EMVITIME,HOUR,D1,MIN,D1,SEC * arrival date/time if
            PACK      EMHIDST,HOUR,MIN,SEC        * first doctor
            REP       " 0",EMHIDST
          ELSE
            MOVE      EMVIMPDT,EMHIDSD      * New doctor so seen date/time
            UNPACK    EMVIMPTM,HOUR,D1,MIN,D1,SEC * are set the MH practitioner
            PACK      EMHIDST,HOUR,MIN,SEC        * seen date/time
            REP       " 0",EMHIDST
          ENDIF
.
WDHIST40  MOVE      "ALDOC",EMHIUPT
.
          MATCH     SP70,WEBUSEID
          IF        !@EQUAL
            PACK      KEY80,WEBUSEID
            CALL      RDWBSE7
            IF        OVRCD=0
              MOVE      WBSEUID,EMHIEUS
            ENDIF
          ELSE
            MOVE      USERID,EMHIEUS
          ENDIF
.
          MOVE      EMVILOCN,EMHILOC
          MOVE      EMVIMPRA,EMHIDOC       * Set doctor seen to MH practitioner
          MOVE      EMVIATNS,EMHINUR
          PACK      EMHISPA,SP70,SP70
          PACK      EMHIDSD,EMHIDSD,SP70
          PACK      EMHIDST,EMHIDST,SP70
          PACK      EMHINSD,EMHINSD,SP70
          PACK      EMHINST,EMHINST,SP70
.
          MATCH     SP70,EMHINUR
          IF        @EQUAL
            MOVE      SP70,EMHINSD
            MOVE      SP70,EMHINST
          ENDIF
.
          MATCH     SP70,EMHIDOC
          IF        @EQUAL
            MOVE      SP70,EMHIDSD
            MOVE      SP70,EMHIDST
          ENDIF
.
          CALL      IBACLOCK
          PACK      EMHICDAT,CCC,CYY,CMM,CDD  * Date Record Created (ccyymmdd)
          REP       " 0",EMHICDAT
          CLOCK     TIME,EMHICTIM             * Time Record Created (hh:mm:ss)
          MOVE      USERID,EMHICUID           * Web User Id Created (websecaf)
.
          MOVE      SP70,EMHIUDAT      * Date Record Updated (ccyymmdd)
          MOVE      SP70,EMHIUTIM      * Time Record Updated (hh:mm:ss)
          MOVE      SP70,EMHIUUID      * Web User Id Updated (websecaf)
.
WDHIST80  PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
          CALL      RAEMHIS1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            MOVE      SP70,EMHIDRBC              * Billing Incomplete
            CALL      WREMHIS1
            TRAPCLR   IO
            BRANCH    OVRCD,WDHIST85             * Add one second and try again
.
          ELSE
WDHIST85    CALL      IBACLOCK                   * Set new date and time and
            PACK      EMHIDAT,CCC,CYY,CMM,CDD    * try write again
            REP       " 0",EMHIDAT
            CLOCK     TIME,CTIMEIS
            UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
            PACK      EMHITIM,HOUR,MIN,SEC
            REP       " 0",EMHITIM
            GOTO      WDHIST80
          ENDIF
.
          PROC      EMRDRCHR                 * Update Visit Billing Complete
          MOVE      ZERO,EXIT
.
WDHIST99  RETURN
.
.-------------------------------------------------------------------------------
.  DISVAL00 - Disaster Validations and Post
.-------------------------------------------------------------------------------
DISVAL00  MOVE      ZERO,EXIT
          MATCH     SP70,DISPT001
          GOTO      DISVAL99 IF EQUAL
          GOTO      DISVAL99 IF EOS
.
          PACK      KEY9,DISPT001,SP70
          CALL      RDDSMAS1
          BRANCH    OVRCD,DISVAL90
.
          MATCH     SP70,DSMASDAT
          IF        !@EQUAL & !@EOS
            MATCH     DSMASDAT,EMVIDATE
            IF        @LESS
              GOTO      DISVAL92
            ENDIF
          ENDIF
.
          MATCH     SP70,DSMAEDAT
          IF        !@EQUAL & !@EOS
            MATCH     EMVIDATE,DSMAEDAT
            IF        @LESS
              GOTO      DISVAL92
            ENDIF
          ENDIF
.
          MOVE      PURNO,DSPTURNO
          MOVE      DISPT002,DSPTDIID
          MOVE      DISPT001,DSPTCODE
          MOVE      DSMASDAT,DSPTSDAT
          MOVE      DSMAEDAT,DSPTEDAT
          MOVE      SP70,DSPTOTCM
          MOVE      " 1",DSPTFICA
          MOVE      SP70,DSPTSPAR
.
          PACK      KEY17,PURNO,DISPT001,SP70
          CALL      RADSPAT1
          IF        OVRCD=1
            MOVE      WBSEUID,DSPTCUSR
            CALL      IBACLOCK
            PACK      DSPTCDAT,CCC,CYY,CMM,CDD
            REP       " 0",DSPTCDAT
            CLOCK     TIME,CTIMEIS
            MOVE      CTIMEIS,DSPTCTIM
            MOVE      SP70,DSPTUUSR
            MOVE      SP70,DSPTUDAT
            MOVE      SP70,DSPTUTIM
            CALL      WRDSPAT1
          ELSE
            MOVE      WBSEUID,DSPTUUSR
            CALL      IBACLOCK
            PACK      DSPTUDAT,CCC,CYY,CMM,CDD
            REP       " 0",DSPTUDAT
            CLOCK     TIME,CTIMEIS
            MOVE      CTIMEIS,DSPTUTIM
            CALL      UPDSPAT1
          ENDIF
.
          MOVE      PURNO,DSPLURNO
          MOVE      DISPT001,DSPLCODE
          MOVE      DEMVIADM,DSPLVISN
          MOVE      SP70,DSPLSPAR
          PACK      KEY25,PURNO,DISPT001,DEMVIADM,SP70
          CALL      RADSPTL1
          IF        OVRCD=1
            MOVE      WBSEUID,DSPLCUSR
            CALL      IBACLOCK
            PACK      DSPLCDAT,CCC,CYY,CMM,CDD
            REP       " 0",DSPLCDAT
            CLOCK     TIME,CTIMEIS
            MOVE      CTIMEIS,DSPLCTIM
            MOVE      SP70,DSPLUUSR
            MOVE      SP70,DSPLUDAT
            MOVE      SP70,DSPLUTIM
            CALL      WRDSPTL1
          ELSE
            MOVE      WBSEUID,DSPLUUSR
            CALL      IBACLOCK
            PACK      DSPLUDAT,CCC,CYY,CMM,CDD
            REP       " 0",DSPLUDAT
            CLOCK     TIME,CTIMEIS
            MOVE      CTIMEIS,DSPTUTIM
            CALL      UPDSPTL1
          ENDIF
.
          CALL     NWDALT00
          GOTO     DISVAL99
.
DISVAL90  MOVE      "Disaster Master Record not found.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DISVAL99
.
DISVAL92  MOVE      "Date on list is not within the Disaster Start/End Date.",WEBTITLE
.
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DISVAL99
.
DISVAL99  RETURN
.
.---------------------------------------------------------------------
. NWDALT00 - Write a new alternate ID record for disaster patients
.---------------------------------------------------------------------
NWDALT00  PACK      PMAIURNO,PURNO,SP70
.
          MATCH     SP70,DSMAAICD
          GOTO      NWDALT99 IF EQUAL
          GOTO      NWDALT99 IF EOS
.
          PACK      PMAITYPE,DSMAAICD,SP70
.
          MATCH     SP70,DSPTDIID
          GOTO      NWDALT99 IF EQUAL
          GOTO      NWDALT99 IF EOS
.
          PACK      KEY5,ANSA,ANSI,DSMAAICD,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     SP70,TCINDC1
            IF        !@EQUAL & !@EOS
              PACK      PMAIALID,TCINDC1,DSPTDIID,SP70
            ELSE
              PACK      PMAIALID,DSPTDIID,SP70
            ENDIF
          ELSE
            PACK      PMAIALID,DSPTDIID,SP70
          ENDIF
.
          RJUSTIFY  PMAIALID
          PACK      PMAIDISU,SP70
          PACK      PMAIHOSP,SP70
          READ      CONTROLF,HUND10;*249,PTCNDAUR
          MATCH     "1",PTCNDAUR
          IF        @EQUAL
            MOVE      "1",PMAIDISU
          ENDIF
          PACK      PMAIRDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMAIRDAT
          UNPACK    SP70,PMAISPAR
.
          PACK      KEY31,PMAIURNO,PMAITYPE,PMAIALID,SP70
          CALL      RAPMAID1
          IF        OVRCD<>1
            GOTO      NWDALT99
          ENDIF
.
          MOVE      USERID,PMAICRUD
          CALL      IBACLOCK
          PACK      PMAICRDT,CCC,CYY,CMM,CDD
          REP       " 0",PMAICRDT
          MOVE      CTIMEIS,PMAICRTM
          MOVE      SP70,PMAIUPDT
          MOVE      SP70,PMAIUPTM
          MOVE      SP70,PMAIUPUD
.
          CALL      WRPMAID1
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TWENTY7,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICUP                     * trigger PMI update message
.
NWDALT99  RETURN
+
.------------------------------------------------------------
. DISSEL00 - Display Selection List for Disasters
.------------------------------------------------------------
.
DISSEL00  PACK      KEY9,SP70
          CALL      RSDSMAS1
DISSEL10  CALL      RKDSMAS1
          BRANCH    OVRCD,DISSEL99
.
          MATCH     "3",DSMAACTV
          GOTO      DISSEL10 IF EQUAL
.
          WRITE     HTMLFILE;"<option value=#"",DSMACODE,"#">":
                             DSMADESC,"</option>"
          GOTO      DISSEL10
.
DISSEL99  RETURN
+
.------------------------------------------------------------
. DISCOD00 - Get Disaster Code for UR/Visit No
.------------------------------------------------------------
DISCOD00  PACK      KEY25,EMVIURNO,SP70
          CALL      RSDSPTL1
DISCOD10  CALL      RKDSPTL1
          BRANCH    OVRCD,DISCOD99
.
          MATCH     EMVIURNO,DSPLURNO
          GOTO      DISCOD99 IF NOT EQUAL
.
          MATCH     DEMVIADM,DSPLVISN
          GOTO      DISCOD10 IF NOT EQUAL
.
          MATCH     SP70,DSPLCODE
          IF        !@EQUAL & !@EOS
            WRITE     HTMLFILE;DSPLCODE;
          ENDIF
.
DISCOD99  RETURN
.
.------------------------------------------------------------
. DISDSC00 - Get Disaster Desc for UR/Visit No
.------------------------------------------------------------
DISDSC00  PACK      KEY25,EMVIURNO,SP70
          CALL      RSDSPTL1
DISDSC10  CALL      RKDSPTL1
          BRANCH    OVRCD,DISDSC99
.
          MATCH     EMVIURNO,DSPLURNO
          GOTO      DISDSC99 IF NOT EQUAL
.
          MATCH     DEMVIADM,DSPLVISN
          GOTO      DISDSC10 IF NOT EQUAL
.
          MATCH     SP70,DSPLCODE
          IF        !@EQUAL & !@EOS
            PACK      KEY9,DSPLCODE,SP70
            CALL      RDDSMAS1
            IF        OVRCD=0
              WRITE     HTMLFILE;DSMADESC;
            ELSE
              WRITE     HTMLFILE;DSPLCODE;
            ENDIF
          ENDIF
.
DISDSC99  RETURN
+
.------------------------------------------------------------
.        Update Management Notes Text WAHealth
.-----------------------------------------------------------
MANNOT00  CALL      XMLHED00
          BRANCH    EXIT,MANNOT99
.
          CALL      UPDKEY00
          BRANCH    EXIT,MANNOT91
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,MANNOT90
.
          MATCH     SP70,WEBUSEID
          IF        !@EQUAL
            UNPACK    UPDATEKY,ADMISSNO,DIM8,DIM6
            PACK      UPDATEKY,ADMISSNO,DIM8,DIM6,WEBUSEID,SP70
          ENDIF
.
          CALL      UPVCM000
          CALL      WRTHIS00
          PROC      EMRDRCHR          * Update Visit Billing Complete
          CALL      WEDV0000                     * EDWARD visit alteration
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;KEY22;                   * Return History Key
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      MANNOT98
.
MANNOT90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      MANNOT98
.
MANNOT91  PACK      KEY14,ADMISSNO,ZERO,ZERO,TWO,SP1,SP1,ONE,SP70      *I-56546
          CALL      RDVSCMT1
          BRANCH    OVRCD,MANNOT97
.
          UNPACK    VSCTUKEY,KEY14
          PACK      VSCTUKEY,KEY14,SP70
          CALL      UPVSCMT1                                       *end I-56546
.
MANNOT97  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Updated by another user.":
                             "</RETURN_VALUE>"

MANNOT98  CALL      XMLEND00
MANNOT99  CLOSE     VSCTTFIL,DELETE    * Delete temp file created by CLRVCM00
          RETURN
+
.------------------------------------------------------------
.         Get Stationery code for the claim code
.------------------------------------------------------------
DSTN0000  MATCH     SP70,EMVICOMP
          GOTO      DSTN9999 IF EQUAL
.
          PACK      KEY5,ANSC,ANSL,EMVICOMP
          CALL      RDCODE1
          BRANCH    OVRCD,DSTN9999
.
          UNPACK    SP70,IBTHSCOD,IBTHDESC
          MOVE      PTCDFELC,KEY6
          CALL      RDIBTH1
          BRANCH    OVRCD,DSTN9999
.
          BRANCH    F1,DSTN1000
          WRITE     HTMLFILE;IBTHSCOD;           * Stationery code
          GOTO      DSTN9999
.
DSTN1000  WRITE     HTMLFILE;IBTHDESC;           * Stationery description
DSTN9999  RETURN
+
.------------------------------------------------------------
. Set default printer for each financial election
.------------------------------------------------------------
DFPR0000  MOVE      SP70,KEY10 
          PACK      KEY5,ANSC,ANSL,EMVICOMP
          CALL      RDCODE1
          BRANCH    OVRCD,DFPR9999
.
          MATCH     "A",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0A",KEY10         * Australian Defence
            GOTO      DFPR8000
          ENDIF
          MATCH     "O",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0O",KEY10         * Other Compensable
            GOTO      DFPR8000
          ENDIF
          MATCH     "M",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0X",KEY10         * Motor Vehicle
            GOTO      DFPR8000
          ENDIF
          MATCH     "F",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0F",KEY10         * Foreign Defence
            GOTO      DFPR8000
          ENDIF
          MATCH     "P",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0P",KEY10         * Public
            GOTO      DFPR8000
          ENDIF
          MATCH     "E",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0E",KEY10         * Overseas Student
            GOTO      DFPR8000
          ENDIF
          MATCH     "G",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0G",KEY10         * Overseas Visitor
            GOTO      DFPR8000
          ENDIF
          MATCH     "H",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0H",KEY10         * Private
            GOTO      DFPR8000
          ENDIF
          MATCH     "J",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0J",KEY10         * Private Uninsured
            GOTO      DFPR8000
          ENDIF
          MATCH     "S",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0S",KEY10         * Shipping
            GOTO      DFPR8000
          ENDIF
          MATCH     "V",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0Y",KEY10         * Veterans Affairs
            GOTO      DFPR8000
          ENDIF
          MATCH     "W",TCINDC1
          IF        @EQUAL
            MOVE      "ELECTFRM0Z",KEY10         * Workers Compensation
          ENDIF
.
DFPR8000  BRANCH    F1,DFPR8200
          WRITE     HTMLFILE;KEY10;
          GOTO      DFPR9999
.
DFPR8200  MATCH     SP70,KEY10
          GOTO      DFPR9999 IF EQUAL
.
          PACK      KEY20,KEY10,WBSEUID,SP70
          CALL      RDIBPD1
          BRANCH    OVRCD,DFPR9999
          WRITE     HTMLFILE;IBPDPRT;
DFPR9999  RETURN
+
.------------------------------------------------------------
. GETEMR00 - Get Emergency Comments
.------------------------------------------------------------
GETEMR00  PREP      COMFILCF,COMFILNC
          MOVE      ONE,F3
          WRITE     COMFILCF,SEQ;QRYDATA
.
GETEMR10  READ      CONFFILE,SEQ;QRYNAME,QRYDATA
          GOTO      GETEMR90 IF OVER
          MATCH     SP70,QRYNAME
          GOTO      GETEMR80 IF NOT EQUAL
          ADD       ONE,F3
          WRITE     COMFILCF,SEQ;QRYDATA
          GOTO      GETEMR10
.
GETEMR80  MOVE      ONE,TEXTAREA
GETEMR90  MOVE      F3,LASTITEM
          OPEN      COMFILCF,COMFILNC
GETEMR99  RETURN
+
.------------------------------------------------------------
.  Emergency Comments
.------------------------------------------------------------
.         copy the comments back to file
.         first delete existing comments
.
EMCMN000  MATCH     "1",SETEMRCM
          GOTO      EMCMN999 IF NOT EQUAL
.
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
          MOVE      "002",KEY3
EMCMN400  PACK      KEY14,ADMISSNO,KEY3,SP70
          CALL      RSVSCMT1
          CALL      RKVSCMT1
          BRANCH    OVRCD,EMCMN500          * end of file
          MATCH     VSCTVIST,ADMISSNO       * same Admission Number?
          GOTO      EMCMN500 IF NOT EQUAL
          MATCH     VSCTTYPE,KEY3
          GOTO      EMCMN500 IF NOT EQUAL
.
          PACK      KEY14,VSCTVIST,VSCTTYPE,VSCTLINE
          CALL      DEVSCMT1
          GOTO      EMCMN400
.
.         now write the new comments back
.
EMCMN500  MOVE      ADMISSNO,VSCTVIST          * set Admission Number
          MOVE      KEY3,VSCTTYPE
          MOVE      ZERO,F3
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      COMFILCF,COMFILNC
          TRAPCLR   IO
          BRANCH    OVRCD,EMCMN999
.
EMCMN510  ADD       ONE,F3
          READ      COMFILCF,SEQ;VSCTDATA
.
          MATCH     SP70,VSCTDATA
          GOTO      EMCMN600 IF NOT EQUAL
.
          IF        F3=1
            IF        F3>=LASTITEM
              GOTO      EMCMN999
            ENDIF
.
            BRANCH    F3,EMCMN510             * If first line blank ignore
          ENDIF
.
          IF        F3>=LASTITEM
            GOTO      EMCMN999
          ELSE
            GOTO      EMCMN510
          ENDIF
.
EMCMN600  MOVE      F3,VSCTLINE
          PACK      KEY14,VSCTVIST,VSCTTYPE,VSCTLINE
          CALL      RAVSCMT1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRVSCMT1
            TRAPCLR   IO
          ENDIF
          IF        F3>=LASTITEM
            GOTO      EMCMN999
          ENDIF
          GOTO      EMCMN510
.
EMCMN999  RETURN
+
.*******************************************************************************
. RMDIS000 - Remove disaster details when cancelling preadmission
.*******************************************************************************
..  First, delete the disaster link record if there is one
RMDIS000  PACK     SAVDISKY,SP70
          PACK     KEY25,URNUMBER,SP70
          CALL     RSDSPTL1
RMDIS100  CALL     RKDSPTL1
          BRANCH   OVRCD,RMDIS999
.
          MATCH    DSPLURNO,URNUMBER
          GOTO     RMDIS999 IF NOT EQUAL
.
          MATCH    DSPLVISN,ADMISSNO
          GOTO     RMDIS100 IF NOT EQUAL
.
          PACK     KEY25,DSPLURNO,DSPLCODE,DSPLVISN,SP70
          CALL     DEDSPTL1
          PACK     SAVDISKY,DSPLURNO,DSPLCODE,SP70
.
..  If this was the only disaster link record, delete the patient level record
.
          PACK     KEY25,URNUMBER,SP70
          CALL     RSDSPTL1
          CALL     RKDSPTL1
          BRANCH   OVRCD,RMDIS200
.
          MATCH    DSPLURNO,URNUMBER
          GOTO     RMDIS200 IF NOT EQUAL
          GOTO     RMDIS999
.
RMDIS200  PACK     KEY17,SAVDISKY,SP70
          CALL     DEDSPAT1
          CALL     DELALT00
.
RMDIS999  RETURN
+
.---------------------------------------------------------------------
. DELALT00 - Delete alternate ID record for disaster patients
.---------------------------------------------------------------------
DELALT00  UNPACK    SAVDISKY,DIM8,DIM9
          PACK      KEY9,DIM9,SP70
          CALL      RDDSMAS1
          BRANCH    OVRCD,DELALT99
.
          MATCH     SP70,DSMAAICD
          GOTO      DELALT99 IF EQUAL
          GOTO      DELALT99 IF EOS
.
          PACK      KEY31,DIM8,DSMAAICD,SP70
          CALL      RSPMAID1
          CALL      RKPMAID1
          BRANCH    OVRCD,DELALT99
.
          MATCH     PMAIURNO,DIM8
          GOTO      DELALT99 IF NOT EQUAL
.
          MATCH     PMAITYPE,DSMAAICD
          GOTO      DELALT99 IF NOT EQUAL
.
          PACK      KEY31,PMAIURNO,PMAITYPE,PMAIALID,SP70
          CALL      DEPMAID1
.
DELALT99  RETURN
+
.------------------------------------------------------------
. Get other hospital visit details
.------------------------------------------------------------
OHVIS000  PACK      KEY8,INVADMNO,SP70
          CALL      RDVISA1
          BRANCH    OVRCD,OHVIS100
          CALL      RDPMVX11
          BRANCH    OVRCD,OHVIS999
.
          PACK      KEY3,PMVXMHOS,SP70
          CALL      RDPTHSP1
          IF        OVRCD<>1
            PACK      VISDHOSP,PTHSNAME,SP70
          ENDIF
.
          IF        USEINVAD=1
            PACK      ADMISSNO,INVADMNO,SP70
          ENDIF
          GOTO      OHVIS999
.
OHVIS100  PACK      KEY8,INVADMNO,SP70
          CALL      RDBKREC1
          BRANCH    OVRCD,OHVIS200
          CALL      RDBKRX11
          BRANCH    OVRCD,OHVIS999
.
          PACK      KEY6,BKREWARD,SP70
          CALL      RDWARD1
          IF        OVRCD<>1
            PACK      KEY3,PTWDHOSN,SP70
            CALL      RDPTHSP1
            IF        OVRCD<>1
              PACK      VISDHOSP,PTHSNAME,SP70
            ENDIF
          ENDIF
.
          IF        USEINVAD=1
            PACK      ADMISSNO,INVADMNO,SP70
          ENDIF
          GOTO      OHVIS999
.
OHVIS200  
OHVIS999
          RETURN
+
.---------------------------------------------------------------
. Get First Seen Doctor Code from EMRHIS
.---------------------------------------------------------------
FRSNDC00  PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
FRSNDC10  CALL      RKEMHIS1
          BRANCH    OVRCD,FRSNDC99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      FRSNDC99 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      FRSNDC10 IF NOT EQUAL
.
          WRITE     HTMLFILE;EMHIDOC;
.
FRSNDC99  RETURN
+
.---------------------------------------------------------------
. Get First Seen Doctor Desc from EMRHIS
.---------------------------------------------------------------
FRSNDS00  PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
FRSNDS10  CALL      RKEMHIS1
          BRANCH    OVRCD,FRSNDS99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      FRSNDS99 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      FRSNDS10 IF NOT EQUAL
.
          MATCH     SP70,EMHIDOC
          GOTO      FRSNDS99 IF EQUAL
          GOTO      FRSNDS99 IF EOS
.
          BRANCH    EMCNDOCT,FRSNDS50
.
          PACK      KEY6,EMHIDOC,SP70
          CALL      RDDOCT1
          BRANCH    OVRCD,FRSNDS99
.
          MOVE      SP70,DOCFNAME
          MOVE      DTITL,FMTTITLE
          MOVE      DGNAME,FMTGNAME
          MOVE      DSNAME,FMTSNAME
          CALL      DOCNM000
.
          WRITE     HTMLFILE;DOCFNAME;
.
          GOTO      FRSNDS99
.
FRSNDS50  PACK      KEY10,EMHIDOC,SP70
          CALL      RDEMDO1
          BRANCH    OVRCD,FRSNDS99
.
          WRITE     HTMLFILE;EMDODNM;
.
          GOTO      FRSNDS99
.
FRSNDS99  RETURN
+
.-----------------------------------------------------------------------------.
. Determine Template from Mapping Table                                       .
.-----------------------------------------------------------------------------.
GETMAP00  MOVE      REPORTNO,F2
          MOVE      F2,ALTMMPRP
          REP       " 0",ALTMMPRP
          MOVE      TEMPLATE,F3
          MOVE      F3,ALTMMPTP
          REP       " 0",ALTMMPTP
          PACK      KEY16,EMSTSCOD,PRGID,ALTMMPRP,ALTMMPTP,SP70
          CALL      RDALTMP1
          IF        OVRCD=0
            MOVE     ALTMMPTT,TEMPLATE
          ENDIF
GETMAP99  RETURN
+
.------------------------------------------------------------------------------
.         Saves field values from Cross Consultation record into save variables
.------------------------------------------------------------------------------
SAVCCD00  MOVE      PTCRSPEC,SAVESPEC   * Save speciality
          MOVE      PTCRDOCT,SAVEDOCT   * Save Referring Consultant
          MOVE      PTCRREFD,SAVEREFD   * Save Referred Consultant
          MOVE      PTCRCMNT,SAVECMNT   * Save comment
          MOVE      PTCRAMNT,SAVEAMNT   * Save Time Taken (Hrs)
          MOVE      PTCRDATE,SAVEDATE
          MOVE      PTCRTIME,SAVETIM2
          MOVE      PTCRACTN,SAVEACTN
          MOVE      PTCRCOMM,SAVECOMM
.
SAVCCD99  RETURN
+
.------------------------------------------------------------------------------
.                       All Cross Consultations List
.------------------------------------------------------------------------------
ALLCCL00  MOVE      ONE,FRSTCONS            * Set first consultation record flag
          MOVE      SP70,SAVEDOCT           * Initialize Save variables
          MOVE      SP70,SAVEREFD
          MOVE      SP70,SAVESPEC
          MOVE      SP70,SAVECMNT
          MOVE      ZERO,SAVEAMNT
          MOVE      SP70,SAVEDATE
          MOVE      SP70,SAVETIM2
          MOVE      SP70,SAVEACTN
          MOVE      SP70,SAVECOMM

           WRITE     HTMLFILE;"<tr>":
                               "<td class=HeadingCell>":
                               "Date</td>";
          COMPARE    ONE,WITHTIME
          IF         @EQUAL
            WRITE      HTMLFILE;"<td class=HeadingCell>":
                               "Time</td>";
          ENDIF
          WRITE      HTMLFILE;"<td class=HeadingCell>":
                               "Action</td>":
                               "<td class=HeadingCell>":
                               "Referring Consultant</td>":
                               "<td class=HeadingCell>":
                               "Referred To Consultant</td>":
                               "<td class=HeadingCell>":
                               "Specialty</td>":
                               "<td class=HeadingCell>":
                               "Comments</td>";
          COMPARE    ONE,WITHTIME
          IF         !@EQUAL
            WRITE      HTMLFILE;"<td class=HeadingCell>":
                               "Hours/Mins</td>";
          ENDIF
          WRITE      HTMLFILE;"</tr>";

.
          PACK      KEY31,ADMISSNO,SP70
          CALL      RSPTCRC1
ALLCCL10  CALL      RKPTCRC1
          BRANCH    OVRCD,ALLCCL90          * Display saved data (if any), exit.
.
          MATCH     ADMISSNO,DPTCRBIL       * Same visit number?
          GOTO      ALLCCL90 IF NOT EQUAL   * No, display saved data and exit
.
          IF        DONTGRBC=1
            CALL      SAVCCD00              * Don't group records by consultant
            CALL      DSPACC00
            GOTO      ALLCCL10
          ENDIF
.
.         Display multiple records with the same Referring Consultant
.         and blank Referred Consultant (CAR 270231)
.
          MATCH     SP70,PTCRREFD
          IF        @EQUAL
            CALL      SAVCCD00
            CALL      DSPACC00
            GOTO      ALLCCL10
          ENDIF
.
          IF        PTCRCNTR=1
            COMPARE   ONE,FRSTCONS          * Is it first cross const record?
            IF        !@EQUAL
              CALL      DSPACC00            * No, display saved record
            ELSE
              MOVE      ZERO,FRSTCONS       * Yes, don't display but reset flag
            ENDIF
.
            CALL      SAVCCD00
          ELSE
            ADD       PTCRAMNT,SAVEAMNT    * Accumulate Time Taken (Hrs)
          ENDIF
.
          GOTO      ALLCCL10                * Get next record
.
ALLCCL90  COMPARE   ONE,FRSTCONS
          GOTO      ALLCCL99 IF EQUAL       * Nothing to display, exit
.
          CALL      DSPACC00                * Display saved record
          GOTO      ALLCCL99                * Exit.
.
ALLCCL99  RETURN
.
.------------------------------------------------------------------------------
.               Display All Cross Consultation Table Row
.------------------------------------------------------------------------------
DSPACC00 
.
          MOVE      SAVEDOCT,KEY10         * Get Referring Consultant's name
          CALL      RDPMHCP1
          IF        OVRCD=0
.           CALL      DOCNAM00             * Format name
            MOVE      PMHCTITL,FMTTITLE            * I CAR 13038
            MOVE      PMHCGNAM,FMTGNAME
            MOVE      PMHCSNAM,FMTSNAME
            CALL      DOCNM000                  * end I CAR 13038
          ELSE
            CLEAR     DOCFNAME
            APPEND    "Invalid Doctor - ",DOCFNAME
            APPEND    SAVEDOCT,DOCFNAME
            RESET     DOCFNAME
          ENDIF
          MOVE      DOCFNAME,DOCTNAME
.
          MOVE      SP70,REFDNAME
          MATCH     SP70,SAVEREFD
          IF        !@EQUAL
            MOVE      SAVEREFD,KEY10         * Get Referred Consultant's name
            CALL      RDPMHCP1
            IF        OVRCD=0
.             CALL      DOCNAM00             * Format name
              MOVE      PMHCTITL,FMTTITLE            * I CAR 13038
              MOVE      PMHCGNAM,FMTGNAME
              MOVE      PMHCSNAM,FMTSNAME
              CALL      DOCNM000                  * end I CAR 13038
            ELSE
              CLEAR     DOCFNAME
              APPEND    "Invalid Doctor - ",DOCFNAME
              APPEND    SAVEREFD,DOCFNAME
              RESET     DOCFNAME
            ENDIF
            MOVE      DOCFNAME,REFDNAME
          ENDIF
.
          MATCH     SP3,SAVEACTN
          IF        !@EQUAL
            PACK      KEY5,CTAc,SAVEACTN
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      SP70,DIM20
            ELSE
              MOVE      TDESC,DIM20
            ENDIF
          ELSE
            MOVE        SP70,DIM20
          ENDIF
.
          MOVE      SP70,TDESC
          MATCH     SP70,SAVESPEC
          IF        !@EQUAL
            PACK      KEY5,ANSA,ANSC,SAVESPEC,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      SAVESPEC,TDESC
            ENDIF
          ENDIF
.
          UNPACK    SAVEDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CPCDATE
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      DIM11,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
.

          WRITE     HTMLFILE;"<tr>":
                             "<td>",DIM11,"&nbsp;</td>";
          COMPARE    ONE,WITHTIME
          IF         @EQUAL
            WRITE     HTMLFILE;"<td>",SAVETIM2,"&nbsp;</td>";
          ENDIF
          WRITE      HTMLFILE;"<td>",DIM20,"&nbsp;</td>":
                             "<td>",DOCTNAME,"&nbsp;</td>":
                             "<td>",REFDNAME,"&nbsp;</td>":
                             "<td>",TDESC,"&nbsp;</td>":
                             "<td>",SAVECOMM,"&nbsp;</td>";
          COMPARE    ONE,WITHTIME
          IF         !@EQUAL
            WRITE      HTMLFILE;"<td>",SAVEAMNT,"&nbsp;</td>";
          ENDIF
          WRITE      HTMLFILE;"</tr>"
.
DSPACC99  RETURN
.
.------------------------------------------------------------
. Check if ward bed request exists (allocated only)
.------------------------------------------------------------
CBED0000  PACK      KEY25,ADMISSNO,TWO,SP70
          CALL      RSPMBRQ2
CBED1000  CALL      RKPMBRQ2
          BRANCH    OVRCD,CBED9000
.
          MATCH     ADMISSNO,PMBRVISN
          GOTO      CBED9000 IF NOT EQUAL
.
          MATCH     "2",PMBRRSTA
          GOTO      CBED9999 IF EQUAL
.
          GOTO      CBED1000
.
CBED9000  UNPACK    SP70,PMBRADAT,PMBRATIM,PMBREWRD
CBED9999  RETURN
+
.------------------------------------------------------------
. Check if using ward bed requests and display the
. alloacted ward/bed, allocation date and time
.------------------------------------------------------------
ABED0000  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
.
          PACK      KEY25,ADMISSNO,SP70
          CALL      RSPMBRQ2
ABED1000  CALL      RKPMBRQ2
          BRANCH    OVRCD,ABED9999
.
          MATCH     ADMISSNO,PMBRVISN
          GOTO      ABED9999 IF NOT EQUAL
.
          MATCH     " ",PMBRRSTA
          GOTO      ABED2000 IF EQUAL
.
          MATCH     "1",PMBRRSTA
          GOTO      ABED2000 IF EQUAL
.
          MATCH     "2",PMBRRSTA
          GOTO      ABED2000 IF EQUAL
.
          GOTO      ABED1000
.
ABED2000  MATCH     SP70,PMBREWRD
          GOTO      ABED9999 IF EQUAL
.
          PACK      KEY6,PMBREWRD,PMBREBED,SP70
          CALL      RDWARD1
          BRANCH    OVRCD,ABED9999
.
          BRANCH    F1,ABED2200,ABED2300
.
          WRITE     HTMLFILE;WBDESC;
          GOTO      ABED9999
.
ABED2200  MATCH     PMBRADAT,SP70
          GOTO      ABED9999 IF EQUAL
.
          UNPACK    PMBRADAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      ABED9999
.
ABED2300  WRITE     HTMLFILE;PMBRATIM;
          GOTO      ABED9999
.
ABED9999  RETURN
.
.------------------------------------------------------------
. Calculate original admission date and no. days hospitalisation
.------------------------------------------------------------
CORIG000  MOVE      ZERO,FORM8
          MOVE      ZERO,NODAYS
          MOVE      ZERO,TOTNDAYS
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,CORIG999
.
          MOVE      ZERO,ADYHOSP
          MOVE      ZERO,CALCTOTD
.         PACK      PTMI3BAD,SP70
          MOVE      EMVIDATE,SAVEADAT
.
          PACK      KEY29,ADMISSNO,EMVIDATE,Z70
          CALL      RSPMPHS1
CORIG100  CALL      RPPMPHS1
          BRANCH    OVRCD,CORIG900
.
          MATCH     ADMISSNO,PMPHADMN
          GOTO      CORIG900 IF NOT EQUAL
.
          MOVE      ZERO,F8
          DAYSEP    PMPHDDAT,SAVEADAT,F8
          IF        F8 > 7
            GOTO      CORIG900
          ENDIF
.
.         PACK      PTMI3BAD,PMPHADAT,SP70
          DAYSEP    PMPHADAT,PMPHDDAT,NODAYS
          PACK      DIM8,SAVEADAT,SP70
          MATCH     PMPHDDAT,DIM8
          IF        @EQUAL
            COMPARE   ZERO,NODAYS
            IF        !@LESS
.....         SUB       ONE,NODAYS
            ENDIF
          ENDIF
          MOVE      PMPHADAT,SAVEADAT
          MOVE      ZERO,F8
          SQUEEZE   PMPHLDAY
          MOVE      PMPHLDAY,F8
          SUB       F8,NODAYS
          ADD       NODAYS,TOTNDAYS
          MOVE      TOTNDAYS,ADYHOSP
          MOVE      TOTNDAYS,CALCTOTD
.
          GOTO      CORIG100
.
CORIG900  WRITE     HTMLFILE;CALCTOTD;
          GOTO      CORIG999
.
CORIG999  RETURN
.
.------------------------------------------------------------
. Write an update demographics record (pmsupdaf)
.------------------------------------------------------------
WRUPD000  OPEN      PMSUPDA1,"pmsupdaf"
.
          PACK      PMUDURNO,URNUMBER,SP70
.
          CALL      IBACLOCK
          PACK      PMUDDATE,CCC,CYY,CMM,CDD
          REPLACE   " 0",PMUDDATE
          CLOCK     TIME,PMUDTIME
.
          PACK      PMUDUSER,USERID,SP70
.
          PACK      KEY8,PMUDURNO,SP70
          CALL      RDPMUPD1
          IF        OVRCD=1
            CALL      IBACLOCK
            PACK      PMUDDATC,CCC,CYY,CMM,CDD
            REPLACE   " 0",PMUDDATC
            CLOCK     TIME,PMUDTIMC
            PACK      PMUDWEBC,USERID,SP70
            CALL      WRPMUPD1
          ELSE
            CALL      IBACLOCK
            PACK      PMUDDATE,CCC,CYY,CMM,CDD
            REPLACE   " 0",PMUDDATE
            CLOCK     TIME,PMUDTIME
            PACK      PMUDUSER,USERID,SP70
            CALL      UPPMUPD1
          ENDIF
.
          CLOSE     PMSUPDA1
.
WRUPD999  RETURN
.
+
.---------------------------------------------------------------
. Get Short Stay Departure Defaults
.---------------------------------------------------------------
SSDEP000  PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
SSDEP100  CALL      RKEMHIS1
          BRANCH    OVRCD,SSDEP999
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      SSDEP999 IF NOT EQUAL
.
          MATCH     "MOVEL",EMHIUPT
          GOTO      SSDEP100 IF NOT EQUAL
.
          MATCH     SP70,EMHILOC
          GOTO      SSDEP100 IF EQUAL
          GOTO      SSDEP100 IF EOS
.
          PACK      KEY3,EMHILOC,SP70
          CALL      RDEMLOC1
          BRANCH    OVRCD,SSDEP100
.
          MATCH     "1",EMLOSSIN
          GOTO      SSDEP100 IF NOT EQUAL
.
          BRANCH    FORM1,SSDEP500,SSDEP600,SSDEP700
.
SSDEP500  MATCH     SP70,EMHIDAT
          GOTO      SSDEP999 IF EQUAL
          GOTO      SSDEP999 IF EOS
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      SSDEP999
.
SSDEP600  UNPACK    EMHITIM,DIM2,DIM2A,DIM2B
          WRITE     HTMLFILE;DIM2,COLON,DIM2A,COLON,DIM2B;
          GOTO      SSDEP999
.
SSDEP700  WRITE     HTMLFILE;ONE;
          GOTO      SSDEP999
.
SSDEP999  RETURN
.
.-----------------------------------------------------------
.        Get Patient Attributes
.-----------------------------------------------------------
PATATR00  MOVE      SP70,BMIINDIC
.
          COMPARE   ONE,NOATTRIB
          GOTO      PATATR99 IF EQUAL
.
          MATCH     SP70,URNUMBER
          GOTO      PATATR99 IF EQUAL
          GOTO      PATATR99 IF EOS
.
.         MATCH     SP70,ADMISSNO
.         GOTO      PATATR99 IF EQUAL
.         GOTO      PATATR99 IF EOS
.
          PACK      KEY35,URNUMBER,Z70
          CALL      RSPTATR1
PATATR10  CALL      RPPTATR1
          BRANCH    OVRCD,PATATR90
.
          MATCH     URNUMBER,PTARURNO
          GOTO      PATATR90 IF NOT EQUAL
.
.         MATCH     ADMISSNO,PTARVISN
.         GOTO      PATATR90 IF NOT EQUAL
.
          MATCH     "1",PTARDELR
          GOTO      PATATR10 IF EQUAL
.
          MATCH     "001",PTARTYPE
          GOTO      PATATR10 IF NOT EQUAL
.
          MOVE      "1",BMIINDIC
.
          GOTO      PATATR99
.
PATATR90  CALL      CLPATATR
PATATR99  RETURN
.---------------------------------------------------------------
. Get Emergency Location Selection List based on EMVISITE
.---------------------------------------------------------------
ELCN0000  MATCH     "1",EMCNLODD
          GOTO      ELCN2500 IF EQUAL
.
          MATCH     "2",EMCNLODD            * Empty locations only
          GOTO      ELCN2500 IF EQUAL
.
          PACK      KEY3,SP70
          CALL      RSEMLOC1
ELCN2100  CALL      RKEMLOC1
          BRANCH    OVRCD,ELCN9999
.
          MATCH     "1",EMLOACTV
          GOTO      ELCN2100 IF EQUAL
.
          MATCH     EMLOSCOD,EMVISITE
          GOTO      ELCN2100 IF NOT EQUAL
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMVILOCN,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">",EMLODESC,"</option>"
          ENDIF
          GOTO      ELCN2100
.
ELCN2500  MOVE      EMVIADMN,SAVKEY8
          MOVE      EMVISITE,SAVKEY3
          MOVE      EMVILOCN,D3
.
          PACK      KEY7,SAVKEY3,SP1,SP70
          CALL      RSEMLOC3
ELCN2510  CALL      RKEMLOC3                * Empty Map Locations
          BRANCH    OVRCD,ELCN2520
.
          MATCH     SAVKEY3,EMLOSCOD
          GOTO      ELCN2520 IF NOT EQUAL
.
          MATCH     SP70,EMLOTYPE
          GOTO      ELCN2520 IF NOT EQUAL
.
          MATCH     "2",EMCNLODD            * Empty locations only
          IF        @EQUAL
            MATCH     D3,EMLOLOCA
            GOTO      ELCN2519 IF EQUAL
.
            COMPARE   ZERO,EMLOMAXP         * Zero assumes unlimited
            GOTO      ELCN2519 IF EQUAL
          ENDIF
.
          MOVE      ZERO,FORM4              * Number of patients in location
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
ELCN2515  CALL      RKEMVIS7
          BRANCH    OVRCD,ELCN2519
.
          MATCH     EMLOLOCA,EMVILOCN
          IF        @EQUAL
            ADD       ONE,FORM4             * Add Number of patients in location
            MATCH     "2",EMCNLODD          * Empty locations only
            IF        @EQUAL
              IF        FORM4<EMLOMAXP
                GOTO      ELCN2515          * Location not full
              ELSE
                GOTO      ELCN2510          * Location full
              ENDIF
            ENDIF
            GOTO      ELCN2510
          ENDIF
.
ELCN2519  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMVILOCN,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      ELCN2510
.
ELCN2520  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.         WRITE     HTMLFILE;"<option disabled>":
.                            "----------------------------------------":
.                            "</option>"
.
          PACK      KEY7,SAVKEY3,ANSW,SP70
          CALL      RSEMLOC3
ELCN2530  CALL      RKEMLOC3                * Empty Waiting Room Locations
          BRANCH    OVRCD,ELCN2540
.
          MATCH     SAVKEY3,EMLOSCOD
          GOTO      ELCN2540 IF NOT EQUAL
.
          MATCH     ANSW,EMLOTYPE
          GOTO      ELCN2540 IF NOT EQUAL
.
          MATCH     "2",EMCNLODD            * Unlimited patients can be in 
          GOTO      ELCN2539 IF EQUAL       * waiting rooms
.
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
ELCN2535  CALL      RKEMVIS7
          BRANCH    OVRCD,ELCN2539
.
          MATCH     EMLOLOCA,EMVILOCN
          GOTO      ELCN2530 IF EQUAL
.
ELCN2539  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMVILOCN,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      ELCN2530
.
ELCN2540  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.         WRITE     HTMLFILE;"<option disabled>":
.                            "----------------------------------------":
.                            "</option>"
.
          PACK      KEY7,SAVKEY3,ANSO,SP70
          CALL      RSEMLOC3
ELCN2550  CALL      RKEMLOC3                * Empty Other Locations
          BRANCH    OVRCD,ELCN2560
.
          MATCH     SAVKEY3,EMLOSCOD
          GOTO      ELCN2560 IF NOT EQUAL
.
          MATCH     ANSO,EMLOTYPE
          GOTO      ELCN2560 IF NOT EQUAL
.
          MATCH     "2",EMCNLODD            * Unlimited patients can be in
          GOTO      ELCN2559 IF EQUAL       * other locations
.
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
ELCN2555  CALL      RKEMVIS7
          BRANCH    OVRCD,ELCN2559
.
          MATCH     EMLOLOCA,EMVILOCN
          GOTO      ELCN2550 IF EQUAL
.
ELCN2559  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMVILOCN,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      ELCN2550
.
ELCN2560  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
ELCN2600  MATCH     "2",EMCNLODD            * Only displaying empty locations
          GOTO      ELCN2660 IF EQUAL
.
          WRITE     HTMLFILE;"<option disabled>":
                             "----------------------------------------":
                             "</option>"
.
          PACK      KEY7,SAVKEY3,SP1,SP70
          CALL      RSEMLOC3
ELCN2610  CALL      RKEMLOC3                * Occupied Map Locations
          BRANCH    OVRCD,ELCN2620
.
          MATCH     SAVKEY3,EMLOSCOD
          GOTO      ELCN2620 IF NOT EQUAL
.
          MATCH     SP70,EMLOTYPE
          GOTO      ELCN2620 IF NOT EQUAL
.
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
ELCN2615  CALL      RKEMVIS7
          BRANCH    OVRCD,ELCN2619
.
          MATCH     EMLOLOCA,EMVILOCN
          GOTO      ELCN2610 IF NOT EQUAL
.
ELCN2619  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMVILOCN,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      ELCN2610
.
ELCN2620  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.         WRITE     HTMLFILE;"<option disabled>":
.                            "----------------------------------------":
.                            "</option>"
.
          PACK      KEY7,SAVKEY3,ANSW,SP70
          CALL      RSEMLOC3
ELCN2630  CALL      RKEMLOC3                * Occupied Waiting Room Locations
          BRANCH    OVRCD,ELCN2640
.
          MATCH     SAVKEY3,EMLOSCOD
          GOTO      ELCN2640 IF NOT EQUAL
.
          MATCH     ANSW,EMLOTYPE
          GOTO      ELCN2640 IF NOT EQUAL
.
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
ELCN2635  CALL      RKEMVIS7
          BRANCH    OVRCD,ELCN2639
.
          MATCH     EMLOLOCA,EMVILOCN
          GOTO      ELCN2630 IF NOT EQUAL
.
ELCN2639  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMVILOCN,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      ELCN2630
.
ELCN2640  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.         WRITE     HTMLFILE;"<option disabled>":
.                            "----------------------------------------":
.                            "</option>"
.
          PACK      KEY7,SAVKEY3,ANSO,SP70
          CALL      RSEMLOC3
ELCN2650  CALL      RKEMLOC3                * Occupied Other Locations
          BRANCH    OVRCD,ELCN2660
.
          MATCH     SAVKEY3,EMLOSCOD
          GOTO      ELCN2660 IF NOT EQUAL
.
          MATCH     ANSO,EMLOTYPE
          GOTO      ELCN2660 IF NOT EQUAL
.
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
ELCN2655  CALL      RKEMVIS7
          BRANCH    OVRCD,ELCN2659
.
          MATCH     EMLOLOCA,EMVILOCN
          GOTO      ELCN2650 IF NOT EQUAL
.
ELCN2659  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMVILOCN,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      ELCN2650
.
ELCN2660  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
ELCN9999  RETURN
.------------------------------------------------------------------------------
.                      STV All Cross Consultations List
.------------------------------------------------------------------------------
STVCCL00  CALL      CREA0000
.
          MOVE      ONE,FRSTCONS            * Set first consultation record flag
          MOVE      SP70,SAVEDOCT           * Initialize Save variables
          MOVE      SP70,SAVEREFD
          MOVE      SP70,SAVESPEC
          MOVE      SP70,SAVECMNT
          MOVE      ZERO,SAVEAMNT
.
           WRITE     HTMLFILE;"<tr>":
                               "<td class=HeadingCell>":
                               "Referring Consultant</td>":
                               "<td class=HeadingCell>":
                               "Referred Consultant</td>":
                               "<td class=HeadingCell>":
                               "Speciality</td>":
                               "<td class=HeadingCell>":
                               "Comments</td>":
                               "<td class=HeadingCell>":
                               "Hours/Mins</td>":
                               "</tr>";

.
          PACK      KEY31,ADMISSNO,SP70
          CALL      RSPTCRC1
STVCCL10  CALL      RKPTCRC1
          BRANCH    OVRCD,STVCCL90          * Display saved data (if any), exit.
.
          MATCH     ADMISSNO,DPTCRBIL       * Same visit number?
          GOTO      STVCCL90 IF NOT EQUAL   * No, display saved data and exit
.
.         Display multiple records with the same Referring Consultant
.         and blank Referred Consultant (CAR 270231)
.
          MATCH     SP70,PTCRREFD
          IF        @EQUAL
            CALL      SAVCCT00
.           CALL      DSPSCC00
            CALL      ALLWRT00
            GOTO      STVCCL10
          ENDIF
.
          IF        PTCRCNTR=1
            COMPARE   ONE,FRSTCONS          * Is it first cross const record?
            IF        !@EQUAL
.             CALL      DSPSCC00            * No, display saved record
              CALL      ALLWRT00
            ELSE
              MOVE      ZERO,FRSTCONS       * Yes, don't display but reset flag
            ENDIF
.
            CALL      SAVCCT00
          ELSE
            ADD       PTCRAMNT,SAVEAMNT    * Accumulate Time Taken (Hrs)
          ENDIF
.
          GOTO      STVCCL10                * Get next record
.
STVCCL90  COMPARE   ONE,FRSTCONS
          GOTO      STVCCL95 IF EQUAL       * Nothing to display, exit
.
.         CALL      DSPSCC00                * Display saved record
          CALL      ALLWRT00
          GOTO      STVCCL95                * Exit.
.
STVCCL95  PACK      KEY39,Z70
          CALL      RSTEMP1
STVCCL96  CALL      RPTEMP1
          BRANCH    OVRCD,STVCCL98
.
          CALL      SAVCCL00 
          CALL      DSPSCC00
          GOTO      STVCCL96
.
STVCCL98  CALL      CLER0000
          CALL      KILL0000
.
STVCCL99  RETURN
.
.------------------------------------------------------------------------------
.               Display All Cross Consultation Table Row
.------------------------------------------------------------------------------
DSPSCC00
.
          MOVE      SAVEDOCT,KEY10         * Get Referring Consultant's name
          CALL      RDPMHCP1
          IF        OVRCD=0
.           CALL      DOCNAM00             * Format name
            MOVE      PMHCTITL,FMTTITLE            * I CAR 13038
            MOVE      PMHCGNAM,FMTGNAME
            MOVE      PMHCSNAM,FMTSNAME
            CALL      DOCNM000                  * end I CAR 13038
          ELSE
            CLEAR     DOCFNAME
            APPEND    "Invalid Doctor - ",DOCFNAME
            APPEND    SAVEDOCT,DOCFNAME
            RESET     DOCFNAME
          ENDIF
          MOVE      DOCFNAME,DOCTNAME
.
          MOVE      SP70,REFDNAME
          MATCH     SP70,SAVEREFD
          IF        !@EQUAL
            MOVE      SAVEREFD,KEY10         * Get Referred Consultant's name
            CALL      RDPMHCP1
            IF        OVRCD=0
.             CALL      DOCNAM00             * Format name
              MOVE      PMHCTITL,FMTTITLE            * I CAR 13038
              MOVE      PMHCGNAM,FMTGNAME
              MOVE      PMHCSNAM,FMTSNAME
              CALL      DOCNM000                  * end I CAR 13038
            ELSE
              CLEAR     DOCFNAME
              APPEND    "Invalid Doctor - ",DOCFNAME
              APPEND    SAVEREFD,DOCFNAME
              RESET     DOCFNAME
            ENDIF
            MOVE      DOCFNAME,REFDNAME
          ENDIF
.
          MOVE      SP70,TDESC
          MATCH     SP70,SAVESPEC
          IF        !@EQUAL
            PACK      KEY5,ANSA,ANSC,SAVESPEC,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      SAVESPEC,TDESC
            ENDIF
          ENDIF
.
          WRITE     HTMLFILE;"<tr>":
                             "<td>",DOCTNAME,"&nbsp;</td>":
                             "<td>",REFDNAME,"&nbsp;</td>":
                             "<td>",TDESC,"&nbsp;</td>":
                             "<td>",SAVECMNT,"&nbsp;</td>":
                             "<td>",SAVEAMNT,"&nbsp;</td>":
                             "</tr>"
.
DSPSCC99  RETURN
.
.*****************************************************************************
.*                              OUTALR00               Called by: PROFLD00   *
.* Output all printable alerts(indicator 3=P) to be available for printing   *
.* on discharge summaries                                                    *
.* Requires category on the tag, and .0 for description only or .1 for       *
.* description and comment or .2 for table rows with description and comment *
.*****************************************************************************
OUTALR00  MOVE      ZERO,F1
          MOVE      SP70,KEY1
          UNPACK    DIM127,D1,KEY2,D1,KEY1,DIM127
          PACK      KEY16,URNUMBER,KEY2,SP70
          CALL      RSPTALR1
OUTALR10  CALL      RKPTALR1
          BRANCH    OVRCD,OUTALR99
.
          MATCH     PTALURNO,URNUMBER
          GOTO      OUTALR99 IF NOT EQUAL
.
          MATCH     KEY2,PTALCATG
          GOTO      OUTALR99 IF NOT EQUAL
.
. -- only print alerts with indicator 3=P ---
          PACK      KEY5,KEY2,PTALCODE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,OUTALR10
.
          MATCH     ANSP,TCINDC3
          GOTO      OUTALR10 IF NOT EQUAL
.
          MATCH     "2",KEY1
          IF        @EQUAL
            WRITE     HTMLFILE;"<tr><td>",TDESC,"</td><td>";
          ELSE
            WRITE     HTMLFILE;TDESC
          ENDIF
.  
          MATCH     "2",KEY1
          GOTO      OUTALR15 IF EQUAL
          MATCH     "1",KEY1
          GOTO      OUTALR10 IF NOT EQUAL
.
. *** output comments from pmsalnaf for this alert ***
.
OUTALR15  MOVE      ZERO,F6
          PACK      KEY19,PTALURNO,PTALCATG,PTALCODE,PTALCNTR,SP70
          CALL      RSPMALN1
OUTALR20  CALL      RKPMALN1
          BRANCH    OVRCD,OUTALR29
.
          MATCH     PTALURNO,PMANURNO
          GOTO      OUTALR29 IF NOT EQUAL
.
          MATCH     PMANACAT,PTALCATG
          GOTO      OUTALR29 IF NOT EQUAL
.
          MATCH     PMANACOD,PTALCODE
          GOTO      OUTALR29 IF NOT EQUAL
.
          MATCH     PMANCNTR,PTALCNTR
          GOTO      OUTALR29 IF NOT EQUAL
.
          MATCH     SP70,PMANCOMM
          GOTO      OUTALR29 IF EQUAL
.
          IF        F6=0
            MATCH     "1",KEY1
            IF        @EQUAL
              WRITE     HTMLFILE;" - "
            ENDIF
          ENDIF
.
          MATCH     "2",KEY1
          IF        @EQUAL
            WRITE     HTMLFILE;PMANCOMM,"</br>";
          ELSE
            WRITE     HTMLFILE;PMANCOMM
          ENDIF
          ADD       ONE,F6
          GOTO      OUTALR20
.
OUTALR29  MATCH     "2",KEY1
          IF        @EQUAL
            WRITE     HTMLFILE;"</td></tr>";
          ENDIF
          GOTO      OUTALR10 
.
OUTALR99  RETURN
+
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             Create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLIN2
          PACK      CMDLIN2,ISBUILD,CCNLFILE,CCNLUKEY
          EXECUTE   CMDLIN2,TASKID               * create temporary index file
.
          OPEN      CCNTEMP1,CCNLFILE            * open temp index 1
          OPEN      CCNTEMP2,CCNLFILE            * open temp index 2
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     CCNTEMP1                     * close file
          CLOSE     CCNTEMP2                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISERASE,CCNLFILE     * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*                              CLER0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
CLER0000  MOVE      SP70,KEY39
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CLER9999               * eof - finished
.
          PACK      KEY39,SVCRBILL,SVCRDATE,SVCRDOCT,SVCRREFD,SVCRCNTR,SP70
          CALL      DETEMP1                      * delete current record
          GOTO      CLER0000                     * get next record
.
CLER9999  RETURN
+
.****************************************************************************
.*                              ALLWRT00                                    *
.****************************************************************************
ALLWRT00  PACK      KEY39,SVCRBILL,SVCRDATE,SVCRDOCT,SVCRREFD,SVCRCNTR,SP70
          CALL      RATEMP1
          IF        OVRCD=1
            CALL      WRTEMP1
          ENDIF
.
ALLWRT99  RETURN
.
.------------------------------------------------------------------------------
.         Saves field values from Cross Consultation record into save variables
.------------------------------------------------------------------------------
SAVCCT00  MOVE      PTCRBILL,SVCRBILL
          MOVE      PTCRDOCT,SVCRDOCT
          MOVE      PTCRREFD,SVCRREFD
          MOVE      PTCRCNTR,SVCRCNTR
          MOVE      PTCRCMNT,SVCRCMNT
          MOVE      PTCRDATE,SVCRDATE
          MOVE      PTCRAMNT,SVCRAMNT
          MOVE      PTCRMISC,SVCRMISC
          MOVE      PTCRSPEC,SVCRSPEC
          MOVE      PTCRTIME,SVCRTIME
          MOVE      PTCRACTN,SVCRACTN
          MOVE      PTCRCOMM,SVCRCOMM
          MOVE      PTCRUNIT,SVCRUNIT
          MOVE      PTCRSPAR,SVCRSPAR
.
SAVCCT99  RETURN
+
.------------------------------------------------------------------------------
.         Saves field values from Cross Consultation record into save variables
.------------------------------------------------------------------------------
SAVCCL00  MOVE      SVCRSPEC,SAVESPEC   * Save speciality
          MOVE      SVCRDOCT,SAVEDOCT   * Save Referring Consultant
          MOVE      SVCRREFD,SAVEREFD   * Save Referred Consultant
          MOVE      SVCRCMNT,SAVECMNT   * Save comment
          MOVE      SVCRAMNT,SAVEAMNT   * Save Time Taken (Hrs)
.
SAVCCL99  RETURN
+
.------------------------------------------------------------------------------
. Get disposition plan flag
.------------------------------------------------------------------------------
GETDSP00  PACK      KEY17,ADMISSNO,ZERO,ONE,ONE,SP70
          CALL      RSVSMDT1
          CALL      RKVSMDT1
          BRANCH    OVRCD,GETDSP50
.
          MATCH     ADMISSNO,VSMDVISN
          GOTO      GETDSP50 IF NOT EQUAL
.
          MATCH     "011",VSMDTYPE
          GOTO      GETDSP50 IF NOT EQUAL
.
          GOTO      GETDSP90
.
GETDSP50  PACK      KEY17,ADMISSNO,ZERO,ONE,TWO,SP70
          CALL      RSVSMDT1
          CALL      RKVSMDT1
          BRANCH    OVRCD,GETDSP99
.
          MATCH     ADMISSNO,VSMDVISN
          GOTO      GETDSP99 IF NOT EQUAL
.
          MATCH     "012",VSMDTYPE
          GOTO      GETDSP99 IF NOT EQUAL
.
GETDSP90  WRITE     HTMLFILE;ONE;
.
GETDSP99  RETURN
.------------------------------------------------------------------------------
. Get disposition plan final flag
.------------------------------------------------------------------------------
GETDSF00  PACK      KEY17,ADMISSNO,ZERO,ONE,ONE,SP70
          CALL      RSVSMDT1
GETDSF10  CALL      RKVSMDT1
          BRANCH    OVRCD,GETDSF50 
.
          MATCH     ADMISSNO,VSMDVISN
          GOTO      GETDSF50 IF NOT EQUAL
.
          MATCH     "011",VSMDTYPE
          GOTO      GETDSF50 IF NOT EQUAL
.
          MATCH     SP70,VSMDUSER
          GOTO      GETDSF10 IF EQUAL
.
          GOTO      GETDSF90 
.
GETDSF50  PACK      KEY17,ADMISSNO,ZERO,ONE,TWO,SP70
          CALL      RSVSMDT1
GETDSF60  CALL      RKVSMDT1
          BRANCH    OVRCD,GETDSF99
.
          MATCH     ADMISSNO,VSMDVISN
          GOTO      GETDSF99 IF NOT EQUAL
.
          MATCH     "012",VSMDTYPE
          GOTO      GETDSF99 IF NOT EQUAL
.
          MATCH     SP70,VSMDUSER
          GOTO      GETDSF60 IF EQUAL
.
GETDSF90  WRITE     HTMLFILE;ONE;
.
GETDSF99  RETURN
.------------------------------------------------------------------------------
. Get disposition plan final flag admission
.------------------------------------------------------------------------------
GETDFA00  PACK      KEY17,ADMISSNO,ZERO,ONE,TWO,SP70
          CALL      RSVSMDT1
GETDFA10  CALL      RKVSMDT1
          BRANCH    OVRCD,GETDFA99
.
          MATCH     ADMISSNO,VSMDVISN
          GOTO      GETDFA99 IF NOT EQUAL
.
          MATCH     "012",VSMDTYPE
          GOTO      GETDFA99 IF NOT EQUAL
.
          MATCH     SP70,VSMDUSER
          GOTO      GETDFA10 IF EQUAL
.
          MATCH     "1",VSMDDELT
          GOTO      GETDFA10 IF EQUAL
.
          WRITE     HTMLFILE;ONE;
.
GETDFA99  RETURN
.------------------------------------------------------------------------------
. Get disposition plan final flag discharge
.------------------------------------------------------------------------------
GETDFD00  PACK      KEY17,ADMISSNO,ZERO,ONE,ONE,SP70
          CALL      RSVSMDT1
GETDFD10  CALL      RKVSMDT1
          BRANCH    OVRCD,GETDFD99
.
          MATCH     ADMISSNO,VSMDVISN
          GOTO      GETDFD99 IF NOT EQUAL
.
          MATCH     "011",VSMDTYPE
          GOTO      GETDFD99 IF NOT EQUAL
.
          MATCH     SP70,VSMDUSER
          GOTO      GETDFD10 IF EQUAL
.
          MATCH     "1",VSMDDELT
          GOTO      GETDFD10 IF EQUAL
.
          WRITE     HTMLFILE;ONE;
.
GETDFD99  RETURN
.------------------------------------------------------------
.         Visit Notes Display in the text area
.         NOTEORDR = 0 = Display new notes first
.                    1 = Display old notes first
.------------------------------------------------------------
DIFNOT00  MOVE      ADMISSNO,VSMDVISN
.
          IF        NOTEORDR=0
            PACK      KEY17,VSMDVISN,NOTEFILT,Z70
          ELSE
            PACK      KEY17,VSMDVISN,NOTEFILT,SP70
          ENDIF
.
          CALL      RSVSMDT1
DIFNOT10  IF        NOTEORDR=0
            CALL      RPVSMDT1
          ELSE
            CALL      RKVSMDT1
          ENDIF
          BRANCH    OVRCD,DIFNOT99
.
          MATCH     ADMISSNO,VSMDVISN
          GOTO      DIFNOT99 IF NOT EQUAL
.
          MATCH     NOTEFILT,VSMDTYPE
          GOTO      DIFNOT99 IF NOT EQUAL
.
          MATCH     "1",VSMDDELT
          GOTO      DIFNOT10 IF EQUAL
.
          MATCH     SP70,VSMDUSER
          GOTO      DIFNOT10 IF EQUAL
.
          MOVE      SP70,TEMPDATE
          MATCH     SP70,VSMDDATE
          IF        !@EQUAL
            UNPACK    VSMDDATE,CCENT,CYEAR,CMON,CDAY
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      TEMPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
          ENDIF
.
          CLEAR     VISNOTES
          APPEND    TEMPDATE,VISNOTES
          APPEND    "  ",VISNOTES
          APPEND    VSMDTIME,VISNOTES
          APPEND    "  ",VISNOTES
          PACK      KEY10,VSMDUSER,SP70
          CALL      RDWBSE1
          IF        OVRCD<>1
            STRIP     WBSENAM
            APPEND    WBSENAM,VISNOTES
          ELSE
            APPEND    VSMDUSER,VISNOTES
          ENDIF
          APPEND    "  ",VISNOTES
          APPEND    VSMDOCCG,VISNOTES
          RESET     VISNOTES
.
          STRIP     VISNOTES
          MOVELPTR  VISNOTES,LENGTH
.
          SFORMAT   VAR,LENGTH
          MOVE      VISNOTES,VAR
...       WRITE     HTMLFILE;"<b>";
          WRITE     HTMLFILE;VAR
...       WRITE     HTMLFILE;"</b>";
          SFORMAT   VAR,127
.
          PACK      KEY20,VSMDVISN,VSMDTYPE,VSMDNOTE,SP70
          CALL      RSVSMTX1
DIFNOT20  CALL      RKVSMTX1
          BRANCH    OVRCD,DIFNOT10
.
          MATCH     VSMDVISN,VSMTVISN
          GOTO      DIFNOT10 IF NOT EQUAL
.
          MATCH     VSMDTYPE,VSMTTYPE
          GOTO      DIFNOT10 IF NOT EQUAL
.
          MATCH     VSMDNOTE,VSMTNOTE
          GOTO      DIFNOT10 IF NOT EQUAL
.
          STRIP     VSMTCMNT
          MOVELPTR  VSMTCMNT,LENGTH
.
          SFORMAT   VAR,LENGTH
          MOVE      VSMTCMNT,VAR
          WRITE     HTMLFILE;VAR
          SFORMAT   VAR,127
.
          GOTO      DIFNOT20
.
DIFNOT99 RETURN
.------------------------------------------------------------------------------
. Expected Patient Triage Location selection list
.------------------------------------------------------------------------------
TRLC0000  MATCH     "1",EMCNLODD
          GOTO      TRLC2500 IF EQUAL
.
          MATCH     "2",EMCNLODD            * Empty locations only
          GOTO      TRLC2500 IF EQUAL
.
          PACK      KEY3,SP70
          CALL      RSEMLOC1
TRLC1000  CALL      RKEMLOC1
          BRANCH    OVRCD,TRLC9999
.
          MATCH     "1",EMLOACTV
          GOTO      TRLC1000 IF EQUAL
.
          MATCH     EMLOSCOD,WBSEESC
          GOTO      TRLC1000 IF NOT EQUAL
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMEXEXPL,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">",EMLODESC,"</option>"
          ENDIF
          GOTO      TRLC1000
.
TRLC2500  MOVE      EMVIADMN,SAVKEY8
          MOVE      EMVILOCN,D3
.
          PACK      KEY7,WBSEESC,SP1,SP70
          CALL      RSEMLOC3
TRLC2510  CALL      RKEMLOC3                * Empty Map Locations
          BRANCH    OVRCD,TRLC2520
.
          MATCH     WBSEESC,EMLOSCOD
          GOTO      TRLC2520 IF NOT EQUAL
.
          MATCH     SP70,EMLOTYPE
          GOTO      TRLC2520 IF NOT EQUAL
.
          MATCH     "2",EMCNLODD            * Empty locations only
          IF        @EQUAL
            MATCH     D3,EMLOLOCA
            GOTO      TRLC2519 IF EQUAL
.
            COMPARE   ZERO,EMLOMAXP         * Zero assumes unlimited
            GOTO      TRLC2519 IF EQUAL
          ENDIF
.
          MOVE      ZERO,FORM4              * Number of patients in location
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
TRLC2515  CALL      RKEMVIS7
          BRANCH    OVRCD,TRLC2519
.
          MATCH     EMLOLOCA,EMVILOCN
          IF        @EQUAL
            ADD       ONE,FORM4             * Add Number of patients in location
            MATCH     "2",EMCNLODD          * Empty locations only
            IF        @EQUAL
              IF        FORM4<EMLOMAXP
                GOTO      TRLC2515          * Location not full
              ELSE
                GOTO      TRLC2510          * Location full
              ENDIF
            ENDIF
            GOTO      TRLC2510
          ENDIF
.
TRLC2519  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMEXEXPL,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      TRLC2510
.
TRLC2520  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.         WRITE     HTMLFILE;"<option disabled>":
.                            "----------------------------------------":
.                            "</option>"
.
          PACK      KEY7,WBSEESC,ANSW,SP70
          CALL      RSEMLOC3
TRLC2530  CALL      RKEMLOC3                * Empty Waiting Room Locations
          BRANCH    OVRCD,TRLC2540
.
          MATCH     WBSEESC,EMLOSCOD
          GOTO      TRLC2540 IF NOT EQUAL
.
          MATCH     ANSW,EMLOTYPE
          GOTO      TRLC2540 IF NOT EQUAL
.
          MATCH     "2",EMCNLODD            * Unlimited patients can be in
          GOTO      TRLC2539 IF EQUAL       * waiting rooms    
.
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
TRLC2535  CALL      RKEMVIS7
          BRANCH    OVRCD,TRLC2539
.
          MATCH     EMLOLOCA,EMVILOCN
          GOTO      TRLC2530 IF EQUAL
.
TRLC2539  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMEXEXPL,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      TRLC2530
.
TRLC2540  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.         WRITE     HTMLFILE;"<option disabled>":
.                            "----------------------------------------":
.                            "</option>"
.
          PACK      KEY7,WBSEESC,ANSO,SP70
          CALL      RSEMLOC3
TRLC2550  CALL      RKEMLOC3                * Empty Other Locations
          BRANCH    OVRCD,TRLC2560
.
          MATCH     WBSEESC,EMLOSCOD
          GOTO      TRLC2560 IF NOT EQUAL
.
          MATCH     ANSO,EMLOTYPE
          GOTO      TRLC2560 IF NOT EQUAL
.
          MATCH     "2",EMCNLODD            * Unlimited patients can be in
          GOTO      TRLC2559 IF EQUAL       * other locations 
.
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
TRLC2555  CALL      RKEMVIS7
          BRANCH    OVRCD,TRLC2559
.
          MATCH     EMLOLOCA,EMVILOCN
          GOTO      TRLC2550 IF EQUAL
.
TRLC2559  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMEXEXPL,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      TRLC2550
.
TRLC2560  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
TRLC2600  MATCH     "2",EMCNLODD            * Only displaying empty locations
          GOTO      TRLC2660 IF EQUAL
.
          WRITE     HTMLFILE;"<option disabled>":
                             "----------------------------------------":
                             "</option>"
.
          PACK      KEY7,WBSEESC,SP1,SP70
          CALL      RSEMLOC3
TRLC2610  CALL      RKEMLOC3                * Occupied Map Locations
          BRANCH    OVRCD,TRLC2620
.
          MATCH     WBSEESC,EMLOSCOD
          GOTO      TRLC2620 IF NOT EQUAL
.
          MATCH     SP70,EMLOTYPE
          GOTO      TRLC2620 IF NOT EQUAL
.
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
TRLC2615  CALL      RKEMVIS7
          BRANCH    OVRCD,TRLC2619
.
          MATCH     EMLOLOCA,EMVILOCN
          GOTO      TRLC2610 IF NOT EQUAL
.
TRLC2619  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMEXEXPL,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      TRLC2610
.
TRLC2620  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.         WRITE     HTMLFILE;"<option disabled>":
.                            "----------------------------------------":
.                            "</option>"
.
          PACK      KEY7,WBSEESC,ANSW,SP70
          CALL      RSEMLOC3
TRLC2630  CALL      RKEMLOC3                * Occupied Waiting Room Locations
          BRANCH    OVRCD,TRLC2640
.
          MATCH     WBSEESC,EMLOSCOD
          GOTO      TRLC2640 IF NOT EQUAL
.
          MATCH     ANSW,EMLOTYPE
          GOTO      TRLC2640 IF NOT EQUAL
.
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
TRLC2635  CALL      RKEMVIS7
          BRANCH    OVRCD,TRLC2639
.
          MATCH     EMLOLOCA,EMVILOCN
          GOTO      TRLC2630 IF NOT EQUAL
.
TRLC2639  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMEXEXPL,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      TRLC2630
.
TRLC2640  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.         WRITE     HTMLFILE;"<option disabled>":
.                            "----------------------------------------":
.                            "</option>"
.
          PACK      KEY7,WBSEESC,ANSO,SP70
          CALL      RSEMLOC3
TRLC2650  CALL      RKEMLOC3                * Occupied Other Locations
          BRANCH    OVRCD,TRLC2660
.
          MATCH     WBSEESC,EMLOSCOD
          GOTO      TRLC2660 IF NOT EQUAL
.
          MATCH     ANSO,EMLOTYPE
          GOTO      TRLC2660 IF NOT EQUAL
.
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
TRLC2655  CALL      RKEMVIS7
          BRANCH    OVRCD,TRLC2659
.
          MATCH     EMLOLOCA,EMVILOCN
          GOTO      TRLC2650 IF NOT EQUAL
.
TRLC2659  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMEXEXPL,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      TRLC2650
.
TRLC2660  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY7,WBSEESC,ANSE,SP70  
          CALL      RSEMLOC3
TRLC2711  CALL      RKEMLOC3                * Telehealth Locations
          BRANCH    OVRCD,TRLC2799
.
          MATCH     WBSEESC,EMLOSCOD
          GOTO      TRLC2799 IF NOT EQUAL
.
          MATCH     ANSE,EMLOTYPE
          GOTO      TRLC2799 IF NOT EQUAL
.
          MATCH     "2",EMCNLODD            * Unlimited patients can be in
          GOTO      TRLC2720 IF EQUAL       * Telehealth locations 
.
          PACK      KEY11,EMLOLOCA,SP70
          CALL      RSEMVIS7
          CALL      RKEMVIS7
          BRANCH    OVRCD,TRLC2720
.
          MATCH     EMLOLOCA,EMVILOCN
          GOTO      TRLC2711 IF EQUAL
.
TRLC2720  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.
          PACK      KEY5,QUOTE,EMLOLOCA,QUOTE
          MATCH     EMEXEXPL,EMLOLOCA
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=",KEY5," selected>":
                               EMLODESC,"</option>"
          ELSE
            WRITE     HTMLFILE;"<option value=",KEY5,">":
                               EMLODESC,"</option>"
          ENDIF
.
          GOTO      TRLC2711
.
TRLC2799  PACK      KEY8,SAVKEY8,SP70
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
          ENDIF
.

TRLC9999  RETURN
+

.------------------------------------------------------------------------------
. Get Arrival Date/Time from emrhisaf
.------------------------------------------------------------------------------
GTARDT00  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
GTARDT10  CALL      RKEMHIS1
          BRANCH    OVRCD,GTARDT99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      GTARDT99 IF NOT EQUAL
.
          MATCH     "ARRIV",EMHIUPT
          GOTO      GTARDT10 IF NOT EQUAL
.
          BRANCH    F1,GTARDT20,GTARDT30
          GOTO      GTARDT99
.
GTARDT20  MATCH     SP70,EMHIDAT
          GOTO      GTARDT99 IF EQUAL
          GOTO      GTARDT99 IF EOS
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      GTARDT99
.
GTARDT30  MATCH     SP70,EMHITIM
          GOTO      GTARDT99 IF EQUAL
          GOTO      GTARDT99 IF EOS
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          WRITE     HTMLFILE;HOUR,COLON,MIN,COLON,SEC;
          GOTO      GTARDT99
.
GTARDT99  RETURN
.------------------------------------------------------------
. Change initial assessor seen date/time
. WAHealth
.------------------------------------------------------------
IAWA0000  RESET     UPDTTYPE
          MATCH     SP10,UPDTTYPE
          GOTO      IAWA9999 IF EQUAL
.
          MOVE      ZERO,EXIT
.
          MATCH     "INTAS",UPDTTYPE    * Update seen date and time
          IF       @EQUAL
            CALL     CHIWA000
          ENDIF
.
IAWA9999  RETURN
.
.-----------------------------------------------------------
. Change initial assessor seen date/time
. WAHealth
.------------------------------------------------------------
CHIWA000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,CHIWA999
.
          MOVE      "14",UPDFIELD
          PACK      DIM10,EMVIUR05,SP70
          PACK      UPDVALUE,EMVIUD05,EMVIUT05,DIM10,SP70
          PACK      FRSTDOCT,FRSTDOCT,SP70
          PACK      NEWVALUE,DOCTDATE,DOCTTIME,FRSTDOCT,SP70
.
          MOVE      FRSTDOCT,EMVIUR05
          MOVE      DOCTDATE,EMVIUD05
          MOVE      DOCTTIME,EMVIUT05
.
          CALL      UPEMVIS1
.
          CALL      WRTHIS00
          PROC      EMRDRCHR          * Update Visit Billing Complete
          CALL      WRCHA000          * Write date integrity audit
.
CHIWA999  RETURN
.------------------------------------------------------------
. Change senior doctor seen date/time
. WAHealth
.------------------------------------------------------------
SDWA0000  RESET     UPDTTYPE
          MATCH     SP10,UPDTTYPE
          GOTO      SDWA9999 IF EQUAL
.
          MOVE      ZERO,EXIT
.
          MATCH     "SENDC",UPDTTYPE    * Update seen date and time
          IF       @EQUAL
            CALL     SENWA000
          ENDIF
.
          GOTO      SDWA9999
.
SDWA9999  RETURN
.-----------------------------------------------------------
. Change senior doctor date/time
. WAHealth
.------------------------------------------------------------
SENWA000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,SENWA999
.
.         MOVE      "14",UPDFIELD
.         PACK      DIM10,EMVIUR05,SP70
.         PACK      UPDVALUE,EMVIUD05,EMVIUT05,DIM10,SP70
.         PACK      FRSTDOCT,FRSTDOCT,SP70
.         PACK      NEWVALUE,DOCTDATE,DOCTTIME,FRSTDOCT,SP70
.
          MOVE      FRSTDOCT,EMVIUR04
          MOVE      DOCTDATE,EMVIUD10
          MOVE      DOCTTIME,EMVIUT10
.
          CALL      UPEMVIS1
.
.         CALL      WRTHIS00
.         CALL      WRCHA000          * Write date integrity audit
.
SENWA999  RETURN
.
.------------------------------------------------------------------------------
. Get Current Treating Doctor Date/Time from emrhisaf
.------------------------------------------------------------------------------
GTTRDT00  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
GTTRDT10  CALL      RPEMHIS1
          BRANCH    OVRCD,GTTRDT99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      GTTRDT99 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      GTTRDT10 IF NOT EQUAL
.
          BRANCH    F1,GTTRDT20,GTTRDT30
          GOTO      GTTRDT99
.
GTTRDT20  MATCH     SP70,EMHIDSD
          GOTO      GTTRDT99 IF EQUAL
          GOTO      GTTRDT99 IF EOS
.
          UNPACK    EMHIDSD,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      GTTRDT99
.
GTTRDT30  MATCH     SP70,EMHIDST
          GOTO      GTTRDT99 IF EQUAL
          GOTO      GTTRDT99 IF EOS
.
          UNPACK    EMHIDST,HOUR,MIN,SEC
          WRITE     HTMLFILE;HOUR,COLON,MIN,COLON,SEC;
          GOTO      GTTRDT99
.
GTTRDT99  RETURN
.------------------------------------------------------------------------------
. Get Previous Treating Doctor Date/Time from emrhisaf
.------------------------------------------------------------------------------
GTPRDT00  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
.
          MOVE      ZERO,F2
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
GTPRDT10  CALL      RPEMHIS1
          BRANCH    OVRCD,GTPRDT99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      GTPRDT99 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      GTPRDT10 IF NOT EQUAL
.
          ADD       ONE,F2
.
          COMPARE   TWO,F2
          GOTO      GTPRDT10 IF LESS
.
          BRANCH    F1,GTPRDT20,GTPRDT30
          GOTO      GTPRDT99
.
GTPRDT20  MATCH     SP70,EMHIDSD
          GOTO      GTPRDT99 IF EQUAL
          GOTO      GTPRDT99 IF EOS
.
          UNPACK    EMHIDSD,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      GTPRDT99
.
GTPRDT30  MATCH     SP70,EMHIDST
          GOTO      GTPRDT99 IF EQUAL
          GOTO      GTPRDT99 IF EOS
.
          UNPACK    EMHIDST,HOUR,MIN,SEC
          WRITE     HTMLFILE;HOUR,COLON,MIN,COLON,SEC;
          GOTO      GTPRDT99
.
GTPRDT99  RETURN
.
.------------------------------------------------------------------------------
. Get Current Treating Nurse Date/Time from emrhisaf
.------------------------------------------------------------------------------
GTTNDT00  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
GTTNDT10  CALL      RPEMHIS1
          BRANCH    OVRCD,GTTNDT99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      GTTNDT99 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      GTTNDT10 IF NOT EQUAL
.
          BRANCH    F1,GTTNDT20,GTTNDT30
          GOTO      GTTNDT99
.
GTTNDT20  MATCH     SP70,EMHINSD
          GOTO      GTTNDT99 IF EQUAL
          GOTO      GTTNDT99 IF EOS
.
          UNPACK    EMHINSD,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      GTTNDT99
.
GTTNDT30  MATCH     SP70,EMHINST
          GOTO      GTTNDT99 IF EQUAL
          GOTO      GTTNDT99 IF EOS
.
          UNPACK    EMHINST,HOUR,MIN,SEC
          WRITE     HTMLFILE;HOUR,COLON,MIN,COLON,SEC;
          GOTO      GTTNDT99
.
GTTNDT99  RETURN
.------------------------------------------------------------------------------
. Get Previous Treating Nurse Date/Time from emrhisaf
.------------------------------------------------------------------------------
GTPNDT00  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
.
          MOVE      ZERO,F2
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
GTPNDT10  CALL      RPEMHIS1
          BRANCH    OVRCD,GTPNDT99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      GTPNDT99 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      GTPNDT10 IF NOT EQUAL
.
          ADD       ONE,F2
.
          COMPARE   TWO,F2
          GOTO      GTPNDT10 IF LESS
.
          BRANCH    F1,GTPNDT20,GTPNDT30
          GOTO      GTPNDT99
.
GTPNDT20  MATCH     SP70,EMHINSD
          GOTO      GTPNDT99 IF EQUAL
          GOTO      GTPNDT99 IF EOS
.
          UNPACK    EMHINSD,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      GTPNDT99
.
GTPNDT30  MATCH     SP70,EMHINST
          GOTO      GTPNDT99 IF EQUAL
          GOTO      GTPNDT99 IF EOS
.
          UNPACK    EMHINST,HOUR,MIN,SEC
          WRITE     HTMLFILE;HOUR,COLON,MIN,COLON,SEC;
          GOTO      GTPNDT99
.
GTPNDT99  RETURN
.
.*****************************************************************************
.*  NXVS0000 Next emergency patient redirect tag same emr site
.*  This tag will return a url of the next emergency patient by date/time
.*  after this admissno in the same emr site
.*****************************************************************************
          DEFPROC   NXVS0000
.
          INC       EMRVISFD/INC
          OPEN      EMRVISA1,"emrvisaf"
          OPEN      EMRVISA4,"emrvisaf"
.
          UNPACK    DIM127,D1,DIM8,DIM127
          UNPACK    DIM127,D1,DIM2,DIM127
          UNPACK    DIM127,D1,DIM3,DIM127
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,NXVS9000
.
          MOVE      EMVIDATE,KEY8
.
          PACK      KEY24,EMVIDATE,EMVITIME,EMVIADMN,SP70
          CALL      RSEMVIS4           * Position with exact key to skip
NXVS1000  CALL      RKEMVIS4           * current emergency visit
          BRANCH    OVRCD,NXVS9000
.
          MATCH     KEY8,EMVIDATE
          GOTO      NXVS9000 IF NOT EQUAL
.
          MATCH     WBSEESC,EMVISITE
          GOTO      NXVS1000 IF NOT EQUAL
.
          REP       " +",EMVIURNO
          REP       " +",DEMVIADM
.
          WRITE     HTMLFILE;DIM8,".pbl?reportno=",DIM2:
                                 "&template=",DIM3:
                                 "&urnumber=",EMVIURNO:
                                 "&admissno=",DEMVIADM;
.
          REP       "+ ",EMVIURNO
          REP       "+ ",DEMVIADM
.
NXVS9000  CLOSE     EMRVISA1
          CLOSE     EMRVISA4
          GOTO      NXVS9999
.
          INC       EMRVISIO/INC
          INC       IBAOVRIO/INC
.
NXVS9999  ENDPROC
.
+
.------------------------------------------------------------
. GETEMD00 - Get emergency discharge comments
.------------------------------------------------------------
GETEMD00  PREP      COMFILDF,COMFILND
          MOVE      ONE,F3
          WRITE     COMFILDF,SEQ;QRYDATA
.
GETEMD10  READ      CONFFILE,SEQ;QRYNAME,QRYDATA
          GOTO      GETEMD90 IF OVER
          MATCH     SP70,QRYNAME
          GOTO      GETEMD80 IF NOT EQUAL
          ADD       ONE,F3
          WRITE     COMFILDF,SEQ;QRYDATA
          GOTO      GETEMD10
.
GETEMD80  MOVE      ONE,TEXTAREA
GETEMD90  MOVE      F3,LASTITEM
          OPEN      COMFILDF,COMFILND
GETEMD99  RETURN
+
.------------------------------------------------------------
.  Emergency Discharge Comments
.------------------------------------------------------------
.         copy the comments back to file
.         first delete existing comments
.
EMCMD000  MATCH     "1",SETEMRCD
          GOTO      EMCMD999 IF NOT EQUAL
.
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
          MOVE      "019",KEY3
EMCMD400  PACK      KEY14,ADMISSNO,KEY3,SP70
          CALL      RSVSCMT1
          CALL      RKVSCMT1
          BRANCH    OVRCD,EMCMD500          * end of file
          MATCH     VSCTVIST,ADMISSNO       * same Admission Number?
          GOTO      EMCMD500 IF NOT EQUAL
          MATCH     VSCTTYPE,KEY3
          GOTO      EMCMD500 IF NOT EQUAL
.
          PACK      KEY14,VSCTVIST,VSCTTYPE,VSCTLINE
          CALL      DEVSCMT1
          GOTO      EMCMD400
.
.         now write the new comments back
.
EMCMD500  MOVE      ADMISSNO,VSCTVIST          * set Admission Number
          MOVE      KEY3,VSCTTYPE
          MOVE      ZERO,F3
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      COMFILDF,COMFILND
          TRAPCLR   IO
          BRANCH    OVRCD,EMCMD999
.
EMCMD510  ADD       ONE,F3
          READ      COMFILDF,SEQ;VSCTDATA
.
          MATCH     SP70,VSCTDATA
          GOTO      EMCMD600 IF NOT EQUAL
.
          IF        F3=1
            IF        F3>=LASTITEM
              GOTO      EMCMD999
            ENDIF
.
            BRANCH    F3,EMCMD510             * If first line blank ignore
          ENDIF
.
          IF        F3>=LASTITEM
            GOTO      EMCMD999
          ELSE
            GOTO      EMCMD510
          ENDIF
.
EMCMD600  MOVE      F3,VSCTLINE
.
          CALL      IBACLOCK
          PACK      DATE,CCC,CYY,CMM,CDD
          REP       " 0",DATE
          PACK      TIME,CTIMEIS
          REP       " 0",TIME
          UNPACK    TIME,HOUR,D1,MIN,D1,SEC
          PACK      DIM6,HOUR,MIN,SEC,SP70
          PACK      VSCTUKEY,DATE,DIM6,WBSEUID,SP70
.
          PACK      KEY14,VSCTVIST,VSCTTYPE,VSCTLINE
          CALL      RAVSCMT1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRVSCMT1
            TRAPCLR   IO
          ENDIF
          IF        F3>=LASTITEM
            GOTO      EMCMD999
          ENDIF
          GOTO      EMCMD510
.
EMCMD999  RETURN
+
.------------------------------------------------------------
.  Patient Lockout Indicator
.------------------------------------------------------------
PTLKT000  BRANCH    EMVISTAT,PTLKT900,PTLKT500,PTLKT500,PTLKT900
          GOTO      PTLKT900
.
PTLKT500  MATCH     SP70,EMVIDDAT
          GOTO      PTLKT900 IF EQUAL
.
          MOVE      EMVIDDAT,CALCDATE
          ADD       SEVEN,CALCDATE
.
          CALL      IBACLOCK
          PACK      DIM8,CCC,CYY,CMM,CDD
          REP       " 0",DIM8
.
          MATCH     DIM8,CALCDATE
          GOTO      PTLKT800 IF LESS
.
          GOTO      PTLKT900
.
PTLKT800  WRITE     HTMLFILE;ONE;
          GOTO      PTLKT999
.
PTLKT900  WRITE     HTMLFILE;ZERO;
          GOTO      PTLKT999
.
PTLKT999  RETURN
.------------------------------------------------------------
.  Check Discharge mandatory fields
.------------------------------------------------------------
DSCMN000  MOVE      ONE,F1                        * default to Available
          MATCH     SP70,EMVIDOCT
          GOTO      DSCMN900 IF EQUAL             * No attending doctor
.
          MOVE      "84",FORM5
          MOVE      FORM5,KEY5
          PACK      KEY5,KEY5,SP70
          CALL      RDEMWFM1
          BRANCH    OVRCD,DSCMN900
.
          MATCH     "1",EMWFMAN
          GOTO      DSCMN900 IF NOT EQUAL         * Not Mandatory
.
          MATCH     "1",EMWFMND                   * Discharge
          GOTO      DSCMN900 IF NOT EQUAL
.
          BRANCH    EMVIYN09,DSCMN900,DSCMN900
.
          MOVE      ZERO,F1                        * NOT available
DSCMN900  WRITE     HTMLFILE;F1;
DSCMN999  RETURN
+
.------------------------------------------------------------
.         AUDHI200  Audit History Table - sjog-standard
.------------------------------------------------------------
AUDHI200  PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
AUDHI210  CALL      RKEMHIS1
          BRANCH    OVRCD,AUDHI299
          MATCH     ADMISSNO,EMHIVIS
          GOTO      AUDHI299 IF NOT EQUAL
.
          MOVE      "Unknown",EMUTDES
          MOVE      EMHIUPT,KEY5
          CALL      RDEMUTY1
.
          MOVE      SP70,DISINTA2                * Initial assessorr
          MATCH     SP70,EMVIMDCD
          IF        !@EQUAL
            PACK      KEY10,EMVIMDCD,SP70
            CALL      RDPMHCP1
            IF        OVRCD=1
              MOVE      EMVIMDCD,DISINTA2
            ELSE
              CLEAR     DISINTA2
              APPEND    PMHCTITL,DISINTA2
              APPEND    SP1,DISINTA2
              APPEND    PMHCGNAM,DISINTA2
              APPEND    SP1,DISINTA2
              APPEND    PMHCSNAM,DISINTA2
              RESET     DISINTA2
            ENDIF
          ENDIF
.
          MOVE      SP70,DISOTDO2                * Other doctor
          MATCH     SP70,EMHIODCD
          IF        !@EQUAL
            PACK      KEY10,EMHIODCD,SP70
            CALL      RDPMHCP1
            IF        OVRCD=1
              MOVE      EMHIODCD,DISOTDO2
            ELSE
              CLEAR     DISOTDO2
              APPEND    PMHCTITL,DISOTDO2
              APPEND    SP1,DISOTDO2
              APPEND    PMHCGNAM,DISOTDO2
              APPEND    SP1,DISOTDO2
              APPEND    PMHCSNAM,DISOTDO2
              RESET     DISOTDO2
            ENDIF
          ENDIF
.
.         MOVE      SP70,DOCTRHI2
.         MOVE      EMHIDOC,KEY6
.         CALL      RDDOCT1
.         IF        OVRCD=1
.           MOVE      SP70,DOCTRHI2
.         ELSE
.           CLEAR     DOCTRHI2
.           APPEND    DTITL,DOCTRHI2
.           APPEND    SP1,DOCTRHI2
.           APPEND    DGNAME,DOCTRHI2
.           APPEND    SP1,DOCTRHI2
.           APPEND    DSNAME,DOCTRHI2
.         ENDIF
.
          MOVE      SP70,DOCTRHI2                * Other doctor
          MATCH     SP70,EMHIDOC
          IF        !@EQUAL
            PACK      KEY10,EMHIDOC,SP70
            CALL      RDPMHCP1
            IF        OVRCD=1
              MOVE      EMHIDOC,DOCTRHI2
            ELSE
              CLEAR     DOCTRHI2
              APPEND    PMHCTITL,DOCTRHI2
              APPEND    SP1,DOCTRHI2
              APPEND    PMHCGNAM,DOCTRHI2
              APPEND    SP1,DOCTRHI2
              APPEND    PMHCSNAM,DOCTRHI2
              RESET     DOCTRHI2
            ENDIF
          ENDIF
.
          MOVE      SP70,KEY25
          MOVE      EMHILOC,KEY3
          CALL      RDEMLOC1
          IF        OVRCD=1
            MOVE      EMHILOC,KEY25
          ELSE
            MOVE      EMLODESC,KEY25
          ENDIF
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,AUDDATE
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      AUDTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",AUDTIME
.
          PACK      DIM22,SP70              * clear Doc seen date & time
          PACK      DATETIME,SP70           * clear Nurse seen date & time
.
          MATCH     SP70,EMHIDOC
          GOTO      AUDHI215 IF EQUAL
.
          MATCH     SP70,EMHIDSD
          GOTO      AUDHI215 IF EQUAL
.
          MATCH     SP70,EMHIDST
          GOTO      AUDHI215 IF EQUAL
.
          UNPACK    EMHIDSD,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DOCDATE
.
          UNPACK    EMHIDST,HOUR,MIN,SEC
          PACK      DOCTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",DOCTIME
.
          CLEAR     DIM22
          APPEND    DOCDATE,DIM22
          APPEND    " at ",DIM22
          APPEND    DOCTIME,DIM22
          RESET     DIM22
.
AUDHI215  MOVE      SP70,TDESC              * Nurse Description
          MOVE      SP70,NURSEHI2
          MATCH     SP70,EMHINUR
          GOTO      AUDHI220 IF EQUAL
.
          MATCH     "1",EMCNURSE            * Use pmshcpaf for ED Nurse?
          GOTO      AUDHI216 IF EQUAL       * Yes
. 
.         CONTROL.EMCNURSE=0 - Use oprnuraf for nurse
          PACK      KEY6,EMHINUR,SP70
          CALL      RDOPNUR1                * Reading the nurse file
          IF        OVRCD=1
            MOVE      SP70,NURSEHI2
          ELSE
            APPEND    OPNRGNAM,NURSEHI2
            APPEND    SP1,NURSEHI2
            APPEND    OPNRSNAM,NURSEHI2
          ENDIF
          GOTO      AUDHI217
.
.         CONTROL.EMCNURSE=1 - Use pmshcpaf for nurse
AUDHI216  PACK      KEY10,EMHINUR,SP70
          CALL      RDPMHCP1                
          IF        OVRCD=1
            MOVE      SP70,NURSEHI2
          ELSE
            APPEND    PMHCGNAM,NURSEHI2
            APPEND    SP1,NURSEHI2
            APPEND    PMHCSNAM,NURSEHI2
          ENDIF
          GOTO      AUDHI217
.
AUDHI217  MATCH     SP70,EMHINSD            * No nurse seen date?
          GOTO      AUDHI220 IF EQUAL
.
          UNPACK    EMHINSD,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,SEENDATE
.
          UNPACK    EMHINST,HOUR,MIN,SEC
          PACK      SEENTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",SEENTIME
.
          CLEAR     DATETIME
          APPEND    SEENDATE,DATETIME
          APPEND    " at ",DATETIME
          APPEND    SEENTIME,DATETIME
          RESET     DATETIME
.
AUDHI220  REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      EMHIEUS,KEY10
          CALL      RDWBSE1
          IF        OVRCD=1
            MOVE      SP70,WBSENAM
          ENDIF
          WRITE     HTMLFILE;"<tr><td nowrap>":
                             AUDDATE," at ",AUDTIME,"&nbsp;</td>":
                             "<td>":
                             EMUTDES,"&nbsp;";
.
          MATCH     "INTAS",EMUTUTY              * Initial assessor
          IF        @EQUAL
            WRITE     HTMLFILE;"- ",DISINTA2;
          ENDIF
.
.         MATCH     "OTDOC",EMUTUTY              * Other doctor
.         IF        @EQUAL
.           WRITE     HTMLFILE;"- ",DISOTDO2;
.         ENDIF
.
          WRITE     HTMLFILE;"</td><td nowrap >":
                             WBSENAM,"&nbsp;</td>":
                             "<td nowrap >":
                             KEY25,"&nbsp;</td>":
                             "<td>":
                             DOCTRHI2,"&nbsp;</td>":
                             "<td nowrap >":
                             DIM22,"&nbsp;</td>":
                             "<td>":
                             DISOTDO2,"&nbsp;</td>":
                             "<td>":
                             NURSEHI2,"&nbsp;</td>":
                             "<td nowrap >":
                             DATETIME,"&nbsp;</td>":
                             "</tr>"
.
          REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
.
          GOTO      AUDHI210
.
AUDHI299  MOVE      USERID,KEY10
          CALL      RDWBSE1
          RETURN
+
.------------------------------------------------------------
.         Other Doctor History
.------------------------------------------------------------
OTDHIS00  UNPACK    DIM127,D1,DIM1,DIM127
          MOVE      ZERO,DISPREAS
          MOVE      DIM1,DISPREAS
.
          PACK      KEY8,ADMISSNO
          CALL      RDEMVIS1
          IF        OVRCD=0
            UNPACK    EMVIDATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,ARRDATE
            MOVE      EMVITIME,ARRTIME
          ELSE
            MOVE    SP70,ARRDATE
            MOVE    SP70,ARRTIME
          ENDIF
.
          MOVE      SP70,SAVDOC
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
OTDHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,OTDHIS99
          MATCH     ADMISSNO,EMHIVIS
          GOTO      OTDHIS99 IF NOT EQUAL
.
          MATCH     EMHIODCD,SAVDOC
          GOTO      OTDHIS10 IF EQUAL
.
         MATCH     "OTDOC",EMHIUPT
         GOTO      OTDHIS10 IF NOT EQUAL
.
.         COMPARE   ONE,EMCNDDTM             * Keying in doctor seen date/tmme
.         GOTO      OTDHIS15 IF NOT EQUAL
.
.         MATCH     SP70,EMHIDSD            * Seen date/time populated
.         GOTO      OTDHIS15 IF NOT EQUAL
.
.         MATCH     SP70,EMVIDRDT
.         IF        !@EQUAL
.           MOVE      EMVIDRDT,EMHIDSD         * First seen by date and time
.           UNPACK    EMVIDRTM,HOUR,D1,MIN,D1,SEC
.           PACK      EMHIDST,HOUR,MIN,SEC
.           REP       " 0",EMHIDST
.         ENDIF
.
OTDHIS15  MOVE      SP70,DOCTRHI2
          PACK      KEY10,EMHIODCD,SP70
          CALL      RDPMHCP1
          IF        OVRCD=1
            MOVE      SP70,DOCTRHI2
          ELSE
            APPEND    PMHCTITL,DOCTRHI2
            APPEND    PMHCGNAM,DOCTRHI2
            APPEND    PMHCSNAM,DOCTRHI2
          ENDIF
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,AUDDATE
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      AUDTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",AUDTIME
.
          PACK      DIM22,SP70
.
          MATCH     SP70,EMHIODCD
          GOTO      OTDHIS20 IF EQUAL
.
          MATCH     SP70,EMHIODSD
          GOTO      OTDHIS20 IF EQUAL
.
          MATCH     SP70,EMHIODST
          GOTO      OTDHIS20 IF EQUAL
.
          UNPACK    EMHIODSD,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DOCDATE
.
          UNPACK    EMHIODST,HOUR,MIN,SEC
          PACK      DOCTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",DOCTIME
.
          CLEAR     DIM22
          APPEND    DOCDATE,DIM22
          APPEND    " at ",DIM22
          APPEND    DOCTIME,DIM22
          RESET     DIM22
.
OTDHIS20  REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      EMHIEUS,KEY10
          CALL      RDWBSE1
          IF        OVRCD=1
            MOVE      SP70,WBSENAM
          ENDIF
.
          MATCH     "122",TEMPLATE
          IF        @EQUAL
            WRITE     HTMLFILE;"<tr><td nowrap>":
                               AUDDATE," at ",AUDTIME,"&nbsp;</td>":
                               "<td>":
                               DOCTRHI2,"&nbsp;</td>";
          ELSE
            WRITE     HTMLFILE;"<tr><td nowrap>":
                               AUDDATE," at ",AUDTIME,"&nbsp;</td>":
                               "<td nowrap >":
                               WBSENAM,"&nbsp;</td>":
                               "<td>":
                               DOCTRHI2,"&nbsp;</td>";
          ENDIF
.
          IF        DISPREAS=1
            MOVE      SP70,REASDESC
            MATCH     SP70,EMHIRHND
            IF        !@EQUAL
              PACK      KEY5,CATfw,EMHIRHND     * Reason for Handover
              CALL      RDCODE1
              IF        OVRCD=0
                PACK      REASDESC,TDESC,SP70
              ENDIF
            ENDIF
.
            WRITE     HTMLFILE;"<td nowrap >",REASDESC,"&nbsp;</td>";
          ENDIF

          WRITE     HTMLFILE;"<td nowrap >":
                             DIM22,"&nbsp;</td>";
.
OTDHIS90  REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
.
          MOVE      PMHCHCPC,SAVDOC
          GOTO      OTDHIS10
.
OTDHIS99  MOVE      USERID,KEY10
          CALL      RDWBSE1
          RETURN
+
.------------------------------------------------------------
.         Attending Doctor History - sjog-standard
.------------------------------------------------------------
DOCHI200  UNPACK    DIM127,D1,DIM1,DIM127
          MOVE      ZERO,DISPREAS
          MOVE      DIM1,DISPREAS
.
          PACK      KEY8,ADMISSNO
          CALL      RDEMVIS1
          IF        OVRCD=0
            UNPACK    EMVIDATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,ARRDATE
            MOVE      EMVITIME,ARRTIME
          ELSE
            MOVE    SP70,ARRDATE
            MOVE    SP70,ARRTIME
          ENDIF
.
          MOVE      SP70,SAVDOC
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
DOCHI210  CALL      RKEMHIS1
          BRANCH    OVRCD,DOCHI299
          MATCH     ADMISSNO,EMHIVIS
          GOTO      DOCHI299 IF NOT EQUAL
.
          MATCH     EMHIDOC,SAVDOC
          GOTO      DOCHI210 IF EQUAL
.
          MATCH     "FRDOC",EMHIUPT
          GOTO      DOCHI210 IF EQUAL
.
          COMPARE   ONE,EMCNDDTM             * Keying in doctor seen date/tmme
          GOTO      DOCHI215 IF NOT EQUAL
.
          MATCH     SP70,EMHIDSD            * Seen date/time populated
          GOTO      DOCHI215 IF NOT EQUAL
.
          MATCH     SP70,EMVIDRDT
          IF        !@EQUAL
            MOVE      EMVIDRDT,EMHIDSD         * First seen by date and time
            UNPACK    EMVIDRTM,HOUR,D1,MIN,D1,SEC
            PACK      EMHIDST,HOUR,MIN,SEC
            REP       " 0",EMHIDST
          ENDIF
.
DOCHI215  MOVE      SP70,DOCTRHI2
          MOVE      EMHIDOC,KEY6
          CALL      RDDOCT1
          IF        OVRCD=1
            MOVE      SP70,DOCTRHI2
          ELSE
            APPEND    DTITL,DOCTRHI2
            APPEND    DGNAME,DOCTRHI2
            APPEND    DSNAME,DOCTRHI2
          ENDIF
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,AUDDATE
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      AUDTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",AUDTIME
.
          PACK      DIM22,SP70
.
          MATCH     SP70,EMHIDOC
          GOTO      DOCHI220 IF EQUAL
.
          MATCH     SP70,EMHIDSD
          GOTO      DOCHI220 IF EQUAL
.
          MATCH     SP70,EMHIDST
          GOTO      DOCHI220 IF EQUAL
.
          UNPACK    EMHIDSD,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DOCDATE
.
          UNPACK    EMHIDST,HOUR,MIN,SEC
          PACK      DOCTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",DOCTIME
.
          CLEAR     DIM22
          APPEND    DOCDATE,DIM22
          APPEND    " at ",DIM22
          APPEND    DOCTIME,DIM22
          RESET     DIM22
.
DOCHI220  REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      EMHIEUS,KEY10
          CALL      RDWBSE1
          IF        OVRCD=1
            MOVE      SP70,WBSENAM
          ENDIF
          MATCH     "035",TEMPLATE
          IF        @EQUAL
            WRITE     HTMLFILE;"<tr><td nowrap>":
                               ARRDATE," at ",ARRTIME,"&nbsp;</td>":
                               "<td nowrap >":
                               DOCTRHI2,"&nbsp;</td>":
                               "<td nowrap >":
                               DIM22,"&nbsp;</td>":
                               "</tr>";
            GOTO      DOCHI290
          ENDIF
.
          WRITE     HTMLFILE;"<tr><td nowrap>":
                             AUDDATE," at ",AUDTIME,"&nbsp;</td>":
                             "<td nowrap >":
                             WBSENAM,"&nbsp;</td>":
                             "<td>":
                             DOCTRHI2,"&nbsp;</td>";
.
          IF        DISPREAS=1
            MOVE      SP70,REASDESC
            MATCH     SP70,EMHIRHND
            IF        !@EQUAL
              PACK      KEY5,CATfw,EMHIRHND     * Reason for Handover
              CALL      RDCODE1
              IF        OVRCD=0
                PACK      REASDESC,TDESC,SP70
              ENDIF
            ENDIF
.
            WRITE     HTMLFILE;"<td nowrap >",REASDESC,"&nbsp;</td>";
          ENDIF

          WRITE     HTMLFILE;"<td nowrap >":
                             DIM22,"&nbsp;</td>";
.
DOCHI290  REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
.
          MOVE      DCODE,SAVDOC
          GOTO      DOCHI210
.
DOCHI299  MOVE      USERID,KEY10
          CALL      RDWBSE1
          RETURN
+
.------------------------------------------------------------
.         Attending Nurse History - sjog-standard
.------------------------------------------------------------
NURHI200  UNPACK    DIM127,D1,DIM1,DIM127
          MOVE      ZERO,DISPREAS
          MOVE      DIM1,DISPREAS
.
          PACK      KEY8,ADMISSNO
          CALL      RDEMVIS1
          IF        OVRCD=0
            UNPACK    EMVIDATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,ARRDATE
            MOVE      EMVITIME,ARRTIME
          ELSE
            MOVE    SP70,ARRDATE
            MOVE    SP70,ARRTIME
          ENDIF
.
          MOVE      SP70,SAVNUR
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
NURHI210  CALL      RKEMHIS1
          BRANCH    OVRCD,NURHI299
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NURHI299 IF NOT EQUAL
.
          MATCH     SAVNUR,EMHINUR
          GOTO      NURHI210 IF EQUAL
.
          UNPACK    EMHIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,AUDDATE
.
          UNPACK    EMHITIM,HOUR,MIN,SEC
          PACK      AUDTIME,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",AUDTIME
.
          MATCH     SP70,EMHINSD
          IF        @EQUAL
            MOVE      AUDDATE,DOCDATE
            MOVE      AUDTIME,DOCTIME
          ELSE
            UNPACK    EMHINSD,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,DOCDATE
.
            UNPACK    EMHINST,HOUR,MIN,SEC
            PACK      DOCTIME,HOUR,COLON,MIN,COLON,SEC
            REP       " 0",DOCTIME
          ENDIF
.
          MOVE      SP70,TDESC             * Nurse Description
          MATCH     SP70,EMHINUR
          MOVE      SP70,NURSEHI2
          GOTO      NURHI220 IF EQUAL
.
          MATCH     "1",EMCNURSE            * Use pmshcpaf for ED Nurse?
          GOTO      NURHI211 IF EQUAL       * Yes
.
.         CONTROL.EMCNURSE=0 - Use oprnuraf for nurse
          PACK      KEY6,EMHINUR,SP70
          CALL      RDOPNUR1                * Reading the nurse file
          IF        OVRCD=1
            MOVE      SP70,NURSEHI2
          ELSE
            APPEND    OPNRGNAM,NURSEHI2
            APPEND    OPNRSNAM,NURSEHI2
          ENDIF
          GOTO     NURHI220
.
.         CONTROL.EMCNURSE=1 - Use pmshcpaf for nurse
NURHI211  PACK      KEY10,EMHINUR,SP70
          CALL      RDPMHCP1                
          IF        OVRCD=1
            MOVE      SP70,NURSEHI2
          ELSE
            APPEND    PMHCGNAM,NURSEHI2
            APPEND    PMHCSNAM,NURSEHI2
          ENDIF
          GOTO     NURHI220
.
NURHI220  REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      EMHIEUS,KEY10
          CALL      RDWBSE1
          IF        OVRCD=1
            MOVE      SP70,WBSENAM
          ENDIF
.
          MATCH    "036",TEMPLATE
          IF       @EQUAL
            WRITE     HTMLFILE;"<tr><td nowrap>":
                               ARRDATE," at ",ARRTIME,"&nbsp;</td>";
            WRITE     HTMLFILE;"<td nowrap >":
                               NURSEHI2,"&nbsp;</td>";
            WRITE     HTMLFILE;"<td nowrap>":
                               DOCDATE," at ",DOCTIME,"&nbsp;</td></tr>";
            GOTO       NURHI290
          ENDIF
.
          WRITE     HTMLFILE;"<tr><td nowrap>":
                             AUDDATE," at ",AUDTIME,"&nbsp;</td>";
.
          WRITE     HTMLFILE;"<td nowrap >":
                             WBSENAM,"&nbsp;</td>";
.
          WRITE     HTMLFILE;"<td>":
                             NURSEHI2,"&nbsp;</td>";
.
          IF        DISPREAS=1
            MOVE      SP70,REASDESC
            MATCH     SP70,EMHIRHND
            IF        !@EQUAL
              PACK      KEY5,CATfw,EMHIRHND     * Reason for Handover
              CALL      RDCODE1
              IF        OVRCD=0
                PACK      REASDESC,TDESC,SP70
              ENDIF
            ENDIF
.
            WRITE     HTMLFILE;"<td nowrap >",REASDESC,"&nbsp;</td>";
          ENDIF
.
          WRITE     HTMLFILE;"<td nowrap>":
                             DOCDATE," at ",DOCTIME,"&nbsp;</td></tr>";
.
NURHI290  REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
.
          MOVE      EMHINUR,SAVNUR
          GOTO      NURHI210
.
NURHI299  MOVE      USERID,KEY10
          CALL      RDWBSE1
          RETURN
+
.
.-----------------------------------------------------------
. Delete record from the opt out of SMS file - PMSOOSFD
.-----------------------------------------------------------
OSMS0000  MATCH     "1",PTCNSMSN
          GOTO      OSMS9999 IF NOT EQUAL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PMSOOSA1,"pmsoosaf"
          TRAPCLR   IO
          BRANCH    OVRCD,OSMS9999
.
          MOVE      URNUMBER,PMOOURNO            * U/R Number
          MOVE      USERID,PMOOCUSR              * User Who Created Record
.
          CALL      IBACLOCK
          PACK      PMOOCDTE,CCC,CYY,CMM,CDD
          REP       " 0",PMOOCDTE                * Date Record Created
          MOVE      CTIMEIS,PMOOCTME             * Time Record Created
.
          MOVE      SP70,PMOOSPAR                * Spare
.
          PACK      KEY8,PMOOURNO,SP70
          CALL      RAPMOOS1
          IF        OVRCD=1
            CALL      WRPMOOS1
          ENDIF
.
          CLOSE     PMSOOSA1
.
OSMS9999  RETURN
.
.-----------------------------------------------------------
. Delete record from the opt out of SMS file - PMSOOSFD
.-----------------------------------------------------------
DSMS0000  MATCH     "1",PTCNSMSN
          GOTO      DSMS9999 IF NOT EQUAL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PMSOOSA1,"pmsoosaf"
          TRAPCLR   IO
          BRANCH    OVRCD,DSMS9999
.
          PACK      KEY8,URNUMBER,SP70
          CALL      DEPMOOS1
.
          CLOSE     PMSOOSA1
.
DSMS9999  RETURN
.
+
.-----------------------------------------------------------
.        Get Quick Registration Indicator
.-----------------------------------------------------------
GETQKR00  MOVE      SP70,QCKREGHD
.
          PACK      SAVKEY8,ADMISSNO,SP70
.
          PACK      KEY26,URNUMBER,SP70
          CALL      RSPTVIS4
GETQKR10  CALL      RKPTVIS4
          BRANCH    OVRCD,GETQKR90
.
          MATCH     PVIURNO,URNUMBER
          GOTO      GETQKR90 IF NOT EQUAL
.
          MATCH     " 3",PTVITYPE
          GOTO      GETQKR20 IF EQUAL
.
          MATCH     " 2",PTVITYPE
          GOTO      GETQKR30 IF EQUAL
.
          MATCH     " 1",PTVITYPE
          GOTO      GETQKR40 IF EQUAL
.
          MATCH     "10",PTVITYPE
          GOTO      GETQKR50 IF EQUAL
.
          GOTO      GETQKR10
.
. --- Inpatient ---
.
GETQKR20  PACK      SAVKEY8A,AADMNO,SP70
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDMISS1
          BRANCH    OVRCD,GETQKR25
.
          COMPARE   TWO,ASTAT
          GOTO      GETQKR24 IF EQUAL
.
          COMPARE   THREE,ASTAT
          GOTO      GETQKR24 IF EQUAL
.
          COMPARE   FOUR,ASTAT
          GOTO      GETQKR24 IF EQUAL
.
          GOTO      GETQKR25
.
GETQKR24  MOVE      SAVKEY8A,KEY8
          CALL      RDMISS1
          IF        OVRCD=1
            CALL       CLPATMIS
          ENDIF
          GOTO      GETQKR99
.
GETQKR25  MOVE      SAVKEY8A,KEY8
          CALL      RDMISS1
          IF        OVRCD=1
            CALL       CLPATMIS
          ENDIF
          GOTO      GETQKR10
.
. --- Outpatient ---
.
GETQKR30  PACK      KEY36,PVIBILL,SP70
          CALL      RDSBOKA6
GETQKR35  CALL      RDKBOKA6
          BRANCH    OVRCD,GETQKR10
.
          MATCH     PVIBILL,OBAOUTNO
          GOTO      GETQKR10 IF NOT EQUAL
.
          COMPARE   FOUR,OBASTAT
          GOTO      GETQKR99 IF EQUAL
.
          GOTO      GETQKR35
.
. --- Emergency ---
.
GETQKR40  PACK      SAVKEY8A,EMVIADMN,SP70
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,GETQKR45
.
          COMPARE   ONE,EMVISTAT
          GOTO      GETQKR45 IF EQUAL
.
          COMPARE   TWO,EMVISTAT
          GOTO      GETQKR44 IF EQUAL
.
          COMPARE   THREE,EMVISTAT
          GOTO      GETQKR44 IF EQUAL
.
          GOTO      GETQKR45
.
GETQKR44  MOVE      SAVKEY8A,KEY8
          CALL      RDEMVIS1
          IF         OVRCD = 1
            CALL      CLEMRVIS
          ENDIF
          GOTO      GETQKR99
.
GETQKR45  MOVE      SAVKEY8A,KEY8
          CALL      RDEMVIS1
          IF         OVRCD = 1
            CALL      CLEMRVIS
          ENDIF
          GOTO      GETQKR10
.
. --- Referrals ---
.
GETQKR50  PACK      SAVKEY8A,ALREVISN,SP70
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDALREF1
          BRANCH    OVRCD,GETQKR55
.
          MATCH     "1",ALRESTAT
          GOTO      GETQKR54 IF EQUAL
.
          MATCH     "2",ALRESTAT
          GOTO      GETQKR54 IF EQUAL
.
          GOTO      GETQKR55
.
GETQKR54  MOVE      SAVKEY8A,KEY8
          CALL      RDALREF1
          IF         OVRCD = 1
            CALL      CLALLREF
          ENDIF
          GOTO      GETQKR99
.
GETQKR55  MOVE      SAVKEY8A,KEY8
          CALL      RDALREF1
          IF         OVRCD = 1
            CALL      CLALLREF
          ENDIF
          GOTO      GETQKR10
.
GETQKR90  MOVE      ONE,QCKREGHD
.
GETQKR99  MOVE      SAVKEY8,KEY8
          CALL      RDVISA1
          IF        OVRCD=1
            CALL      CLPATVIS
          ENDIF
.
          MOVE      SAVKEY8,KEY8
          CALL      RDPMVX11             * after the admission file read
          IF        OVRCD=1
            CALL      CLPMSVX1
          ENDIF
.
          RETURN
+
.-------------------------------------------------------------------
.   Add Additional Comments text
.------------------------------------------------------------------
ADDACM00  COMPARE   ZERO,ADDCOMFL
          GOTO      ADDACM99 IF EQUAL
          MOVE      ZERO,F3
          MOVE      SP70,EMEXP033
          MOVE      SP70,EMEXP034
          MOVE      SP70,EMEXP035
          MOVE      SP70,EMEXP036
          MOVE      SP70,EMEXP037
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      ADDCOMAF,ADDCOMNM
          TRAPCLR   IO
          BRANCH    OVRCD,ADDACM99
.
ADDACM10  ADD       ONE,F3
          MOVE      F3,OBMTUNIQ
          READ      ADDCOMAF,SEQ;OBMTCMNT
          GOTO      ADDACM99 IF OVER
          STORE     OBMTCMNT,F3,EMEXP033,EMEXP034,EMEXP035,EMEXP036,EMEXP037
          GOTO      ADDACM10
.
ADDACM99  RETURN
.*******************************************************************************
.                 Get Additional Comments
.*******************************************************************************
GETACM00  PREP      ADDCOMAF,ADDCOMNM
          MOVE      ONE,F3
          WRITE     ADDCOMAF,SEQ;QRYDATA
          MOVE      ONE,ADDCOMFL
.
GETACM10  READ      CONFFILE,SEQ;QRYNAME,QRYDATA
          GOTO      GETACM90 IF OVER
          MATCH     SP70,QRYNAME
          GOTO      GETACM80 IF NOT EQUAL
          MATCH     SP70,QRYDATA
          GOTO      GETACM10 IF EQUAL
          GOTO      GETACM10 IF EOS
          ADD       ONE,F3
          WRITE     ADDCOMAF,SEQ;QRYDATA
          GOTO      GETACM10
.
GETACM80  MOVE      ONE,TEXTAREA                 * Flag for Next CGI Parameter
GETACM90  OPEN      ADDCOMAF,ADDCOMNM
GETACM99  RETURN
.*******************************************************************************
.                 Update emrexpaf removal reason and removed indicator
.*******************************************************************************
UPDEMX00  PACK      KEY5,CATrR,SP70
          CALL      RDSCODE1
UPDEMX10  CALL      RDKCODE1
          BRANCH    OVRCD,UPDEMX90
.
          MATCH     "rR",TCODE
          GOTO      UPDEMX90 IF NOT EQUAL
.
          MATCH     "I",PTCOACTV           * Only want active codes
          GOTO      UPDEMX10 IF EQUAL
.
          MATCH     "A",TCINDC1            * Must have indicator 1 = "A"
          GOTO      UPDEMX10 IF NOT EQUAL
.
          MOVE      ACODE,EMEXREMV
.
UPDEMX90  MOVE      "0",EMEXDELT
          CALL      UPEMEXP1
.
UPDEMX99  RETURN
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
RSTEMP1   RESET     KEY39
          READ      CCNTEMP1,KEY39;;
          RETURN
.
RATEMP1   RESET     KEY39
          MOVE      ZERO,OVRCD
          READ      CCNTEMP1,KEY39;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP1   RESET     KEY39
          MOVE      ZERO,OVRCD
          READ      CCNTEMP1,KEY39;DSVCRBIL,SVCRDOCT,SVCRREFD,DSVCRCNT:
                                   SVCRCMNT,SVCRDATE,SVCRAMNT,SVCRMISC:
                                   SVCRSPEC,SVCRTIME,SVCRACTN,SVCRCOMM:
                                   SVCRUNIT,SVCRSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DSVCRBIL,SVCRBILL
          MOVE      DSVCRCNT,SVCRCNTR
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    CCNTEMP1;DSVCRBIL,SVCRDOCT,SVCRREFD,DSVCRCNT:
                             SVCRCMNT,SVCRDATE,SVCRAMNT,SVCRMISC:
                             SVCRSPEC,SVCRTIME,SVCRACTN,SVCRCOMM:
                             SVCRUNIT,SVCRSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DSVCRBIL,SVCRBILL
          MOVE      DSVCRCNT,SVCRCNTR
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    CCNTEMP1;DSVCRBIL,SVCRDOCT,SVCRREFD,DSVCRCNT:
                                  SVCRCMNT,SVCRDATE,SVCRAMNT,SVCRMISC:
                                  SVCRSPEC,SVCRTIME,SVCRACTN,SVCRCOMM:
                                  SVCRUNIT,SVCRSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DSVCRBIL,SVCRBILL
          MOVE      DSVCRCNT,SVCRCNTR
          RETURN
.
UPTEMP1   MOVE      SVCRBILL,DSVCRBIL
          MOVE      SVCRCNTR,DSVCRCNT
          UPDATE    CCNTEMP1;DSVCRBIL,SVCRDOCT,SVCRREFD,DSVCRCNT:
                             SVCRCMNT,SVCRDATE,SVCRAMNT,SVCRMISC:
                             SVCRSPEC,SVCRTIME,SVCRACTN,SVCRCOMM:
                             SVCRUNIT,SVCRSPAR
          RETURN
.
WRTEMP1   RESET     KEY39
          MOVE      SVCRBILL,DSVCRBIL
          MOVE      SVCRCNTR,DSVCRCNT
          WRITE     CCNTEMP1,KEY39;DSVCRBIL,SVCRDOCT,SVCRREFD,DSVCRCNT:
                                   SVCRCMNT,SVCRDATE,SVCRAMNT,SVCRMISC:
                                   SVCRSPEC,SVCRTIME,SVCRACTN,SVCRCOMM:
                                   SVCRUNIT,SVCRSPAR
          RETURN
.
DETEMP1   RESET     KEY39
          DELETE    CCNTEMP1,KEY39
          RETURN
.
RSTEMP2   RESET     KEY47
          READ      CCNTEMP2,KEY47;;
          RETURN
.
RPTEMP2   MOVE      ZERO,OVRCD
          READKP    CCNTEMP2;DSVCRBIL,SVCRDOCT,SVCRREFD,DSVCRCNT:
                                  SVCRCMNT,SVCRDATE,SVCRAMNT,SVCRMISC:
                                  SVCRSPEC,SVCRTIME,SVCRACTN,SVCRCOMM:
                                  SVCRUNIT,SVCRSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DSVCRBIL,SVCRBILL
          MOVE      DSVCRCNT,SVCRCNTR
          RETURN
.
.
.-----------------------------------------------------------
.         Get valid record from emrvcdaf
.-----------------------------------------------------------
GEMVC000  UNPACK    DIM127,D1,KEY2,D1,KEY1,DIM127
          MOVE      ZERO,FORM2
          MOVE      KEY2,FORM2
.
          PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,SP70
          CALL      RSEMVCD1
GEMVC100  CALL      RKEMVCD1
          BRANCH    OVRCD,GEMVC999
.
          MATCH     ADMISSNO,EMVCVIST
          GOTO      GEMVC999 IF NOT EQUAL
.
          MATCH     "005",EMVCTYPE
          GOTO      GEMVC999 IF NOT EQUAL
.
          IF        FORM2<>ZERO
            COMPARE   FORM2,EMVCCSYS
            IF        @EQUAL
              MATCH     "000",EMVCSEQU
              GOTO      GEMVC500 IF EQUAL
            ENDIF
          ENDIF
.
          GOTO      GEMVC100
.
GEMVC500  MATCH     "1",KEY1
          IF        @EQUAL
            WRITE     HTMLFILE;EMVCMNCD; 
          ELSE
            IF        EMVCCSYS=1
              CALL      OPICD1
              PACK      KEY9,EMVCMNCD,SP70
              MOVE      EMVCDATE,ICDRDDTE        
              CALL      RDPTICD1                 
              IF        OVRCD=0
                WRITE     HTMLFILE;DDESC;
              ELSE
                WRITE     HTMLFILE;"Invalid Diagnosis";
              ENDIF
              CALL      CLICD1
            ELSE
              PACK      KEY9,EMVCMNCD,SP70
              CALL      RDEMICD1
              IF        OVRCD=0
                WRITE     HTMLFILE;EMICDESC;
              ELSE
                WRITE     HTMLFILE;"Invalid Diagnosis";
              ENDIF
             ENDIF
          ENDIF
.
GEMVC999  RETURN
.
.-----------------------------------------------------------
.         Write ICD10 data to emrvcd for wahealth
.-----------------------------------------------------------
.
WWAHVC00  MATCH     "1",WAHINDIC
          GOTO      WWAHVC99 IF NOT EQUAL
.
          MATCH     SP70,EMVCD005
          GOTO      WWAHVC80 IF EQUAL
          GOTO      WWAHVC80 IF EOS
.
          MOVE      ONE,COUNTER
          PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,ZERO,ZERO,ONE,SP70
          CALL      RDEMVCD1
          IF        OVRCD=1
.
            CALL      CLRVCD00
.
            MOVE      WBSEUID,EMVCWUSR
            MOVE      WBSEUID,EMVCCUID          * user id created
.
            CALL      IBACLOCK
            PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
            REP       " 0",EMVCLUDT
            PACK      EMVCLUTM,CTIMEIS          * last update time
            PACK      EMVCCDAT,CCC,CYY,CMM,CDD  * date created
            REP       " 0",EMVCCDAT
            PACK      EMVCCTIM,CTIMEIS          * time created
            MOVE      SP70,EMVCSUBN
            MOVE      SP70,EMVCEDAD
.
            MOVE      ADMISSNO,EMVCD001
            MOVE      "005",EMVCD002
            MOVE      "001",EMVCD003
            MOVE      " 1",EMVCD004
            MOVE      EMVCCDAT,EMVCD007
            MOVE      EMVCCTIM,EMVCD008
.
            CALL      VCDSAV00      * Moves input variables to file variables
.
            CALL      WREMVCD1    * Writes away the data
.
          ELSE
.
            CALL      IBACLOCK
            PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
            REP       " 0",EMVCLUDT
            PACK      EMVCLUTM,CTIMEIS          * last update time
.
            MOVE      EMVCD005,EMVCMNCD
.
            CALL      UPEMVCD1
.
          ENDIF
.
          GOTO      WWAHVC99
.
WWAHVC80  PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,ZERO,ZERO,ONE,SP70
          CALL      RDEMVCD1
          BRANCH    OVRCD,WWAHVC99
.
          CALL      DEEMVCD1
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      DAEC0000         * Update delete flag for AECC Class rec.
.
WWAHVC99  RETURN
+
.-----------------------------------------------------------------
.         Update deleted fields for any AECC Class (EMVCTYPE=006)
.-----------------------------------------------------------------
DAEC0000  MOVE      "006",KEY3
          PACK      KEY14,KEY8,KEY3,SP70
          CALL      RSEMVCD1
DAEC1000  CALL      RKEMVCD1
          BRANCH    OVRCD,DAEC9999
.
          MATCH     KEY8,EMVCVIST
          GOTO      DAEC9999 IF NOT EQUAL     * different visit
.
          MATCH     KEY3,EMVCTYPE
          GOTO      DAEC9999 IF NOT EQUAL
.
          MOVE      WBSEUID,EMVCWUSR
          CALL      IBACLOCK
          PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
          REP       " 0",EMVCLUDT
          PACK      EMVCLUTM,CTIMEIS          * last update time
          MOVE      "1",EMVCDELE              * deleted flag
          CALL      UPEMVCD1
          GOTO      DAEC1000
.
DAEC9999  RETURN
+
.-----------------------------------------------------------
. Cancel bed requests for a cancelled emergency admission
.------------------------------------------------------------
CNBRQ000  PACK      KEY25,ADMISSNO,SP70
          CALL      RSPMBRQ2                
CNBRQ100  CALL      RKPMBRQ2                * Read next pmsbrqaf record
          BRANCH    OVRCD,CNBRQ999          * Exit on EOF
.
          MATCH     ADMISSNO,PMBRVISN       * Different visit?
          GOTO      CNBRQ999 IF NOT EQUAL   * Yes, exit
.
          MATCH     " ",PMBRRSTA
          GOTO      CNBRQ200 IF EQUAL
.
          MATCH     "1",PMBRRSTA            * Status Requested?
          GOTO      CNBRQ200 IF EQUAL       * Yes, set status to Cancelled
.
          MATCH     "2",PMBRRSTA            * Status Allocated?
          GOTO      CNBRQ200 IF EQUAL       * Yes, set status to Cancelled
.
          GOTO      CNBRQ100                * No, read next bed request record
.
CNBRQ200  MOVE      "4",PMBRRSTA            * Set Cancelled status 
          PACK      DIM8,CCC,CYY,CMM,CDD
          REP       " 0",DIM8
          MOVE      DIM8,PMBRCAND           * Set Cancel date
          CLOCK     TIME,PMBRCANT           * Set Cancel time
          MOVE      USERID,PMBRCANU         * Set Cancel by
.
.         Set cancel reason code if the first acode from Cat cz with
.         indicator='C', otherwise, default value is blank
.          
          MOVE      SP70,PMBRCANR
          PACK      KEY5,CATcz,SP70         * Get Cancel reason code
          CALL      RDSCODE1
CNBRQ300  CALL      RDKCODE1                * Read next category code
          BRANCH    OVRCD,CNBRQ500          * EOF, Cancel bed request
.
          MATCH     CATcz,TCODE             * Different category code?
          GOTO      CNBRQ500 IF NOT EQUAL   * Yes, Cancel bed request
.
          MATCH     ANSI,PTCOACTV           * Status is inactive?
          GOTO      CNBRQ300 IF EQUAL       * Yes, get next category code
.
          MATCH     ANSC,TCINDC1            * Cancel indicator?
          GOTO      CNBRQ300 IF NOT EQUAL   * No, get next category code
.
          MOVE      ACODE,PMBRCANR          * Yes, set Cancel reason code
.
.         Cancel bed request and clear bed board
.
CNBRQ500  CALL      UPPMBRQ2                * Update pmsbrqaf record
          CALL      BBCL0000                * Clear bed board
          CALL      EXCL0000                * Clear expected patient
.
          GOTO      CNBRQ100                * Read next record
.
CNBRQ999  RETURN
+
.-----------------------------------------------------------
.        Get Visit Extra Data (Alcohol Data)
.-----------------------------------------------------------
VISXDC00  COMPARE   ONE,VISXDCIN
          GOTO      VISXDC99 IF EQUAL
.
          MATCH     SP70,ADMISSNO
          GOTO      VISXDC99 IF EQUAL
          GOTO      VISXDC99 IF EOS
.
          PACK      KEY11,ADMISSNO,ZERO,ZERO,ONE,SP70
          CALL      RDVSXDC1
          BRANCH    OVRCD,VISXDC90
.
          GOTO      VISXDC99
.
VISXDC90  CALL      CLVISXDC
VISXDC99  RETURN
.-----------------------------------------------------------
.        Update Visit Extra Data (Alcohol Data)
.-----------------------------------------------------------
UPVXDC00  COMPARE   ONE,VISXDCIN
          GOTO      UPVXDC99 IF EQUAL
.
          CALL      CLVISXDC
          CALL      MVVISXDC
.
          MOVE      ONE,VSTYPIND        * No. of Std Drinks (Value 1)
          MOVE      ONE,VSVALIND
          MOVE      NOSDR001,VSVALVAL
          MOVE      ADMISSNO,VSXDC001
          CALL      UPDOVL00
.
          MOVE      ONE,VSTYPIND        * Where Drinks were Purch (Coded Fld 1)
          MOVE      ONE,VSCODIND
          MOVE      WDWPR001,VSCODVAL
          MOVE      ADMISSNO,VSXDC001
          CALL      UPDVCV00
.
          MOVE      ONE,VSTYPIND        * Where Last Drink was (Text Fld 1)
          MOVE      ONE,VSTXTIND
          MOVE      WLDWC001,VSTXTVAL
          MOVE      ADMISSNO,VSXDC001
          CALL      UPDVTV00
.
          MOVE      ONE,VSTYPIND        * Brief Intervention Req. (Y/N Fld 1)
          MOVE      ONE,VSYENIND
          MOVE      BIREQ001,VSYENVAL
          MOVE      ADMISSNO,VSXDC001
          CALL      UPDVYN00
.
          PACK      KEY11,ADMISSNO,ZERO,ZERO,ONE,SP70
          CALL      RDVSXDC1
          BRANCH    OVRCD,UPVXDC70
.
          MATCH     SP70,VSXDVAL1   
          GOTO      UPVXDC50 IF EQUAL
.
          MATCH     SP70,VSXDCOD1
          GOTO      UPVXDC50 IF EQUAL
.
          MATCH     SP70,VSXDTXT1
          GOTO      UPVXDC50 IF EQUAL
.
          MATCH     SP70,VSXDYN01
          GOTO      UPVXDC50 IF EQUAL
.
          MOVE      USERID,VSXDUCID
          PACK      VSXDUCDT,CCC,CYY,CMM,CDD
          REP       " 0",VSXDUCDT
          MOVE      CTIMEIS,VSXDUCTM
          CALL      UPVSXDC1
.
          GOTO      UPVXDC70
.
UPVXDC50  MOVE      SP70,VSXDUCID
          MOVE      SP70,VSXDUCDT
          MOVE      SP70,VSXDUCTM
          CALL      UPVSXDC1
.
UPVXDC70  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          IF        OVRCD=0
            MOVE      EMVIS067,EMVIUC27
            CALL      UPEMVIS1
          ENDIF
.
          MATCH     SP70,EMVIS067
          GOTO      UPVXDC99 IF EQUAL
          GOTO      UPVXDC99 IF EOS
.
          PACK      KEY11,ADMISSNO,ZERO,ZERO,ONE,SP70
          CALL      RDVSXDC1
          BRANCH    OVRCD,UPVXDC99
.
          MOVE      "1",VSXDDELT
.
          PACK      KEY5,CATES,EMVIS067,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     "Y",TCINDC1
            IF        @EQUAL
              MOVE      "0",VSXDDELT
            ENDIF
          ENDIF
.
          MOVE      USERID,VSXDUUSR
          PACK      VSXDUDAT,CCC,CYY,CMM,CDD
          REP       " 0",VSXDUDAT
          MOVE      CTIMEIS,VSXDUTIM
          CALL      UPVSXDC1
.
UPVXDC99  RETURN
+
.------------------------------------------------------------
.         UPDRUA00
.------------------------------------------------------------
UPDRUA00  CALL      OPENHTML
          BRANCH    EXIT,UPDRUA90
.
          REP       " +",ADMISSNO
          REP       " +",URNUMBER
          PACK      REDIRECT,REDIRECT,ADM,ADMISSNO,UR,URNUMBER
          SQUEEZE   REDIRECT
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             "if (opener.name==#"PopUpFrame#") {":
                             " opener.parent.PopUpScreen.style.display=":
                             " #"none#"; ":
                             " opener.parent.location.href=#"",REDIRECT,"#";":
                             " self.close();}":
                             "else {":
                             " opener.location.href=#"",REDIRECT,"#";":
                             " self.close();}":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          GOTO      UPDRUA99
.
UPDRUA90  DISPLAY   "*** Fifo Not Found ***"
.
UPDRUA99  RETURN
+
.-----------------------------------------------------------
. Write EDWARD emergency visit alteration record
.------------------------------------------------------------
WEDV0000  MATCH     SP70,PTCNNSSI        * no edward source system
          GOTO      WEDV9999 IF EQUAL
.
          MATCH     ZERO20,PTCNNSSI      * no edward source system
          GOTO      WEDV9999 IF EQUAL
.
          MOVE      EMVIADMN,PMAWVISN
          MOVE      FOUR,PMAWTYPE
          PACK      PMAWOLDV,SP70,SP70,SP70,SP70
          PACK      PMAWNEWV,SP70,SP70,SP70,SP70
.
          CALL      IBACLOCK
          PACK      PMAWCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMAWCDAT
          MOVE      "00:00:00",PMAWCTIM
          PACK      PMAWCUID,USERID
          PACK      PMAWSPAR,SP70,SP70
.
          PACK      KEY27,PMAWCDAT,PMAWCTIM,PMAWVISN,PMAWTYPE,SP70
          CALL      RAPMADW1
          IF        OVRCD=1
            CALL      WRPMADW1
          ELSE
            CALL      UPPMADW1
          ENDIF
.
WEDV9999  RETURN
+
.-----------------------------------------------------------
. Write EDWARD emergency visit alteration record
.------------------------------------------------------------
WEDU0000  MATCH     SP70,PTCNNSSI        * no edward source system
          GOTO      WEDU9999 IF EQUAL
.
          MATCH     ZERO20,PTCNNSSI      * no edward source system
          GOTO      WEDU9999 IF EQUAL
.
          PACK      PMAWVISN,EMVIPADM,SP70
          MATCH     SP70,EMVIPADM
          GOTO      WEDU9999 IF EQUAL
.
          MOVE      "22",PMAWTYPE
          PACK      PMAWOLDV,SP70,SP70,SP70,SP70
          PACK      PMAWNEWV,SP70,SP70,SP70,SP70
.
          CALL      IBACLOCK
          PACK      PMAWCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMAWCDAT
          MOVE      "00:00:00",PMAWCTIM
          PACK      PMAWCUID,USERID
          PACK      PMAWSPAR,SP70,SP70
.
          PACK      KEY27,PMAWCDAT,PMAWCTIM,PMAWVISN,PMAWTYPE,SP70
          CALL      RAPMADW1
          IF        OVRCD=1
            CALL      WRPMADW1
          ELSE
            CALL      UPPMADW1
          ENDIF
.
WEDU9999  RETURN
+
.-----------------------------------------------------------
. Write EDWARD presenting complaint change record
.------------------------------------------------------------
WEDP0000  MATCH     SP70,PTCNNSSI        * no edward source system
          GOTO      WEDP9999 IF EQUAL
.
          MATCH     ZERO20,PTCNNSSI      * no edward source system
          GOTO      WEDP9999 IF EQUAL
.
          PACK      EMVICOM1,EMVICOM1,SP70
          PACK      EMVICOM2,EMVICOM2,SP70
          PACK      EMVICOM3,EMVICOM3,SP70
          PACK      EMVICOM4,EMVICOM4,SP70
          PACK      EMVICOM5,EMVICOM5,SP70
          PACK      EMVICOM6,EMVICOM6,SP70
.
          MATCH     SAVEUC20,EMVIUC20
          GOTO      WEDP1000 IF NOT EQUAL
.
          MATCH     SAVECOM1,EMVICOM1
          GOTO      WEDP1000 IF NOT EQUAL
.
          MATCH     SAVECOM2,EMVICOM2
          GOTO      WEDP1000 IF NOT EQUAL
.
          MATCH     SAVECOM3,EMVICOM3
          GOTO      WEDP1000 IF NOT EQUAL
.
          MATCH     SAVECOM4,EMVICOM4
          GOTO      WEDP1000 IF NOT EQUAL
.
          MATCH     SAVECOM5,EMVICOM5
          GOTO      WEDP1000 IF NOT EQUAL
.
          MATCH     SAVECOM6,EMVICOM6
          GOTO      WEDP1000 IF NOT EQUAL
.
          GOTO      WEDP9999
.
WEDP1000  MOVE      EMVIADMN,PMAWVISN
          MOVE      "20",PMAWTYPE
          PACK      PMAWOLDV,SP70,SP70,SP70,SP70
          PACK      PMAWNEWV,SP70,SP70,SP70,SP70
.
          CALL      IBACLOCK
          PACK      PMAWCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMAWCDAT
          MOVE      "00:00:00",PMAWCTIM
          PACK      PMAWCUID,USERID
          PACK      PMAWSPAR,SP70,SP70
.
          PACK      KEY27,PMAWCDAT,PMAWCTIM,PMAWVISN,PMAWTYPE,SP70
          CALL      RAPMADW1
          IF        OVRCD=1
            CALL      WRPMADW1
          ELSE
            CALL      UPPMADW1
          ENDIF
.
WEDP9999  RETURN
+
.-----------------------------------------------------------
. Write EDWARD inpatient visit alteration record
.------------------------------------------------------------
WINP0000  MATCH     SP70,PTCNNSSI        * no edward source system
          GOTO      WINP9999 IF EQUAL
.
          MATCH     ZERO20,PTCNNSSI      * no edward source system
          GOTO      WINP9999 IF EQUAL
.
          MATCH     SP70,EMVIPADM        * Exit if no linked IP visit
          GOTO      WINP9999 IF EQUAL
.
          MOVE      EMVIPADM,PMAWVISN
          MOVE      TEN5,PMAWTYPE
          PACK      PMAWOLDV,SAVEAMBL,SP70,SP70,SP70
          PACK      PMAWNEWV,EMVIAMBL,SP70,SP70,SP70,SP70
.
          CALL      IBACLOCK
          PACK      PMAWCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMAWCDAT
          MOVE      "00:00:00",PMAWCTIM
          PACK      PMAWCUID,USERID
          PACK      PMAWSPAR,SP70,SP70
.
          PACK      KEY27,PMAWCDAT,PMAWCTIM,PMAWVISN,PMAWTYPE,SP70
          CALL      RAPMADW1
          IF        OVRCD=1
            CALL      WRPMADW1
          ELSE
            CALL      UPPMADW1
          ENDIF
.
WINP9999  RETURN
+
.******************************************************************************
.*                Adverse Reactions/Allergies                                 *
.******************************************************************************
ADRC0000  MOVE      ZERO,F1
          UNPACK    DIM127,D1,D2,D1,KEY1,DIM127
          PACK      KEY16,URNUMBER,SP70
          CALL      RSPTALR1
ADRC0050  CALL      RKPTALR1
          BRANCH    OVRCD,ADRC9999
.
          MATCH     PTALURNO,URNUMBER
          GOTO      MISC9999 IF NOT EQUAL
.
          MATCH     "H1",PTALCATG
          IF        !@EQUAL
            MATCH     "DC",D2
            GOTO      ADRC0070 IF EQUAL
            GOTO      ADRC9999
          ENDIF
.
. --      Display details for discharge Summary  ---
          MATCH     "DS",D2
          IF        @EQUAL
            GOTO      ADRC0070
          ENDIF
.
. -- only print alerts with indicator 3=P ---
          PACK      KEY5,ANSH,ONE,PTALCODE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,ADRC0050
.
          MATCH     ANSP,TCINDC3
          GOTO      ADRC0050 IF NOT EQUAL
.
          ADD       ONE,F1
          PACK      DIM2,SP1,F1
          MATCH     D2,DIM2
          GOTO      ADRC0050 IF NOT EQUAL
.
          MATCH     "1",KEY1
          IF        @EQUAL
            MATCH     SP70,PTALDATE
            GOTO      ADRC9999 IF EQUAL
            UNPACK    PTALDATE,CCENT,CYEAR,CMON,CDAY
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
            GOTO      ADRC9999
          ENDIF
.
          MATCH     "2",KEY1
          IF        @EQUAL
            MATCH     SP70,PTALREAC
            IF        !@EQUAL
              PACK      KEY5,PTALCATG,PTALREAC,SP70
              CALL      RDCODE1
              IF        OVRCD<>1
                WRITE     HTMLFILE;TDESC;
              ENDIF
            ENDIF
            GOTO      ADRC9999
          ENDIF
.
          MATCH     "3",KEY1
          IF        @EQUAL
            PACK      KEY19,PTALURNO,PTALCATG,PTALCODE,PTALCNTR,SP70
            CALL      RSPMALN1
ADRC0060    CALL      RKPMALN1
            BRANCH    OVRCD,ADRC9999
.
            MATCH     PTALURNO,PMANURNO
            GOTO      ADRC9999 IF NOT EQUAL
.
            MATCH     PMANACAT,PTALCATG
            GOTO      ADRC9999 IF NOT EQUAL
.
            MATCH     PMANACOD,PTALCODE
            GOTO      ADRC9999 IF NOT EQUAL
.
            MATCH     PMANCNTR,PTALCNTR
            GOTO      ADRC9999 IF NOT EQUAL
.
            WRITE     HTMLFILE;PMANCOMM;
            GOTO      ADRC0060
          ENDIF
.
          PACK      KEY5,ANSH,ONE,PTALCODE,SP70
          CALL      RDCODE1
          IF        OVRCD<>1
            WRITE     HTMLFILE;TDESC;
          ENDIF
.
ADRC0070  MATCH     "4",KEY1
          IF        @EQUAL
            MATCH     SP70,PTALCODE
            IF        !@EQUAL
              WRITE     HTMLFILE;"<div><span style='display:table-cell;"
              WRITE     HTMLFILE;"width:40em;word-wrap:anywhere'>"
              PACK      KEY5,PTALCATG,PTALCODE,SP70
              CALL      RDCODE1
              IF        OVRCD<>1
                WRITE     HTMLFILE;TDESC;
              ELSE
                WRITE     HTMLFILE;"Invalid Code";
              ENDIF
.             MATCH     SP70,PTALREAC
.             MATCH     SP70,PTALRCOM
.             IF        !@EQUAL
              WRITE     HTMLFILE;"</span><span style='display:table-cell;"
              WRITE     HTMLFILE;"width:40em;word-wrap:anywhere'>"
.               PACK      KEY5,CATWN,PTALREAC,SP70
.               CALL      RDCODE1
.               IF        OVRCD<>1
.                 WRITE     HTMLFILE;PTALREAC," ",TDESC;    * Reaction Code
.               ELSE
.                 WRITE     HTMLFILE;"Invalid Code";
.               ENDIF
              GOTO      ADRC1000                          * Reaction Comment
.             ENDIF
ADRC0080      WRITE     HTMLFILE;"</span></div>"
            ENDIF
            GOTO      ADRC0050
          ENDIF
          GOTO      ADRC9999
.
ADRC1000  MATCH     PTALURNO,ADMISSNO     * Use Admisson based comments
          GOTO      ADRC2000 IF EQUAL
.
          PACK      KEY19,PTALURNO,PTALCATG,PTALCODE,PTALCNTR,SP70
          CALL      RSPMALN1              * alert comments
ADRC1100  CALL      RKPMALN1
          BRANCH    OVRCD,ADRC0080
          MATCH     PURNO,PMANURNO
          GOTO      ADRC0080 IF NOT EQUAL
          MATCH     PTALCATG,PMANACAT
          GOTO      ADRC0080 IF NOT EQUAL
          MATCH     PTALCODE,PMANACOD
          GOTO      ADRC0080 IF NOT EQUAL
          MATCH     PTALCNTR,PMANCNTR
          GOTO      ADRC0080 IF NOT EQUAL
          WRITE     HTMLFILE;*+,PMANCOMM;
          GOTO      ADRC1100
.
ADRC2000  PACK      KEY19,PTALURNO,PTALCATG,PTALCODE,PTALCNTR,SP70
          CALL      RSPMALA1              * alert comments
ARDC2100  CALL      RKPMALA1
          BRANCH    OVRCD,ADRC0080
          MATCH     ADMISSNO,PMANURNO
          GOTO      ADRC0080 IF NOT EQUAL
          MATCH     PTALCATG,PMANACAT
          GOTO      ADRC0080 IF NOT EQUAL
          MATCH     PTALCODE,PMANACOD
          GOTO      ADRC0080 IF NOT EQUAL
          MATCH     PTALCNTR,PMANCNTR
          GOTO      ADRC0080 IF NOT EQUAL
          WRITE     HTMLFILE;*+,PMANCOMM;
          GOTO      ARDC2100
.
ADRC9999  RETURN
+
.******************************************************************************
.*                Display viscmtaf record                                     *
.******************************************************************************
VSTTX000  UNPACK    DIM127,D1,KEY3,DIM127        * key3=vscttype
          UNPACK    DIM127,D1,KEY1,DIM127
.
          PACK      KEY14,ADMISSNO,KEY3,SP70
          CALL      RDVSCMT1
VSTTX010  CALL      RKVSCMT1
          BRANCH    OVRCD,VSTTX999
          MATCH     ADMISSNO,VSCTVIST
          GOTO      VSTTX999 IF NOT EQUAL
          MATCH     VSCTTYPE,KEY3
          GOTO      VSTTX999 IF NOT EQUAL
          STRIP     VSCTDATA
          MOVELPTR  VSCTDATA,F3
          IF        F3>0
            SFORMAT   VAR,F3
          ELSE
            SFORMAT   VAR,1
          ENDIF
          MOVE      VSCTDATA,VAR
.
          MATCH     "1",KEY1
          IF        @EQUAL
            WRITE     HTMLFILE;VAR,"<br>"
          ELSE
            WRITE     HTMLFILE;VAR
          ENDIF
.
          SFORMAT  VAR,127
          GOTO     VSTTX010
.
VSTTX999  RETURN
+
.******************************************************************************
.*                SJOG PMI Audits Update Reg                                  *
.******************************************************************************
SJGAU200  MATCH     "1",SJOGAUDT
          GOTO      SJGAU299 IF NOT EQUAL 
.
          MOVE      ZERO,FORM2
.
          PACK      PTMASNAM,PTMASNAM,SP70
          PACK      PMPXFNAM,PMPXFNAM,SP70
          PACK      PGNAME,PGNAME,SP70
          PACK      PMPXSNAM,PMPXSNAM,SP70
          PACK      PTITL,PTITL,SP70
          PACK      PSEX,PSEX,SP70
          PACK      PBDATE,PBDATE,SP70
          PACK      PMPXPFGN,PMPXPFGN,SP70
          PACK      ALIASSTS,ALIASSTS,SP70
.
          MATCH     SAVESNAM,PTMASNAM
          IF        @EQUAL
            MOVE      SP70,SAVESNAM
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH      "1",SJOGAUDI
          IF         @EQUAL
            MATCH     SAVEXFNM,PGNAME
            IF        @EQUAL
              MOVE      SP70,SAVEXFNM
            ELSE
              ADD       ONE,FORM2
            ENDIF
          ELSE
            MATCH     SAVEXFNM,PMPXFNAM
            IF        @EQUAL
              MOVE      SP70,SAVEXFNM
            ELSE
              ADD       ONE,FORM2
            ENDIF
          ENDIF
.
          MATCH      SAVEXSNM,PMPXSNAM
          IF         @EQUAL
            MOVE      SP70,SAVEXSNM
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVETITL,PTITL
          IF        @EQUAL
            MOVE      SP70,SAVETITL
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVEPSEX,PSEX
          IF        @EQUAL
            MOVE      SP70,SAVEPSEX
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVEPDOB,PBDATE
          IF        @EQUAL
            MOVE      SP70,SAVEPDOB
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVEPFGN,PMPXPFGN
          IF        @EQUAL
            MOVE      SP70,SAVEPFGN
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH      SP70,ALIASSTS
          IF         !@EQUAL
            ADD       ONE,FORM2
          ENDIF
.
          COMPARE    ZERO,FORM2
          IF         @EQUAL
            GOTO       SJGAU240
          ENDIF
.
SJGAU230  MOVE       "005",D3
          CALL       WDAU0000
.
SJGAU240  PACK      PTMADCDT,PTMADCDT,SP70
          PACK      PTMADCUT,PTMADCUT,SP70
          PACK      PTMADCUU,PTMADCUU,SP70
.
          MATCH     "2",PTCNAVCD
            IF        !@EQUAL
            MATCH     SAVEDCDT,PTMADCDT
            IF         @EQUAL
              MOVE       SP70,SAVEDCDT
            ELSE
              MOVE       "006",D3
              CALL       WDAU0000
              GOTO       SJGAU250
            ENDIF
.
            MATCH     SAVECTIM,PTMADCUT
            IF         @EQUAL
              MOVE       SP70,SAVECTIM
            ELSE
              MOVE       "006",D3
              CALL       WDAU0000
              GOTO       SJGAU250
            ENDIF
.
            MATCH     SAVECUID,PTMADCUU
            IF         @EQUAL
              MOVE       SP70,SAVECUID
            ELSE
              MOVE       "006",D3
              CALL       WDAU0000
              GOTO       SJGAU250
            ENDIF
          ENDIF
.
SJGAU250  MOVE      ZERO,FORM2
.
          PACK      PMSTAT,PMSTAT,SP70
          PACK      PREG,PREG,SP70
          PACK      PCONT,PCONT,SP70
          PACK      PTYPE,PTYPE,SP70
          PACK      PMPXABRG,PMPXABRG,SP70
          PACK      PMPXUSR7,PMPXUSR7,SP70
          PACK      PMEDI,PMEDI,SP70
          PACK      PTMXMCCD,PTMXMCCD,SP70
          PACK      PMPXMEDC,PMPXMEDC,SP70
          PACK      PMPXCONP,PMPXCONP,SP70
.
          MATCH     SAVEPMST,PMSTAT
          IF        @EQUAL
            MOVE      SP70,SAVEPMST
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVEPREG,PREG
          IF        @EQUAL
            MOVE      SP70,SAVEPREG
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVEPCNT,PCONT
          IF        @EQUAL
            MOVE      SP70,SAVEPCNT
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVEPTYP,PTYPE
          IF        @EQUAL
            MOVE      SP70,SAVEPTYP
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVEABRG,PMPXABRG
          IF        @EQUAL
            MOVE      SP70,SAVEABRG
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
.
          MATCH     "P1",PTCNEMPL
          IF        @EQUAL
            MATCH     SAVEUSR7,PUSR1
            IF        @EQUAL
              MOVE      SP70,SAVEUSR7
            ELSE
              ADD       ONE,FORM2
            ENDIF
          ENDIF
.
          MATCH     "P2",PTCNEMPL
          IF        @EQUAL
            MATCH     SAVEUSR7,PUSR2
            IF        @EQUAL
              MOVE      SP70,SAVEUSR7
            ELSE
              ADD       ONE,FORM2
            ENDIF
          ENDIF
.
          MATCH     "P3",PTCNEMPL
          IF        @EQUAL
            MATCH     SAVEUSR7,PUSR3
            IF        @EQUAL
              MOVE      SP70,SAVEUSR7
            ELSE
              ADD       ONE,FORM2
            ENDIF
          ENDIF
.
          MATCH     "P4",PTCNEMPL
          IF        @EQUAL
            MATCH     SAVEUSR7,PUSR4
            IF        @EQUAL
              MOVE      SP70,SAVEUSR7
            ELSE
              ADD       ONE,FORM2
            ENDIF
          ENDIF
.
          MATCH     "P5",PTCNEMPL
          IF        @EQUAL
            MATCH     SAVEUSR7,PUSR5
            IF        @EQUAL
              MOVE      SP70,SAVEUSR7
            ELSE
              ADD       ONE,FORM2
            ENDIF
          ENDIF
.
          MATCH     "P6",PTCNEMPL
          IF        @EQUAL
            MATCH     SAVEUSR7,PUSR6
            IF        @EQUAL
              MOVE      SP70,SAVEUSR7
            ELSE
              ADD       ONE,FORM2
            ENDIF
          ENDIF
.
          MATCH     SAVEMEDI,PMEDI
          IF        @EQUAL
            MOVE      SP70,SAVEMEDI
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVEMCCD,PTMXMCCD
          IF        @EQUAL
            MOVE      SP70,SAVEMCCD
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVEMEDC,PMPXMEDC
          IF        @EQUAL
            MOVE      SP70,SAVEMEDC
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     "1",PTCNNEWC
          IF        @EQUAL
            MATCH     SAVEUPRF,PMPXUPRF
            IF        @EQUAL
              MOVE      SP70,SAVEUPRF
            ELSE
              ADD       ONE,FORM2
            ENDIF
          ELSE
            MATCH     SAVECONP,PMPXCONP
            IF        @EQUAL
              MOVE      SP70,SAVECONP
            ELSE
              ADD       ONE,FORM2
            ENDIF
          ENDIF
.
          COMPARE    ZERO,FORM2
          IF         @EQUAL
            GOTO       SJGAU260
          ENDIF
.
. Write out changes data for type 007
.
SJGAU257  MOVE      "007",D3
          CALL      WDAU0000
.
SJGAU260  MOVE      ZERO,FORM2
.
          PACK      PMPXINTR,PMPXINTR,SP70
          PACK      PMPXLNG1,PMPXLNG1,SP70
          PACK      PUSR2,PUSR2,SP70
          PACK      PMPXPRVI,PMPXPRVI,SP70
          PACK      PMPXFLDR,PMPXFLDR,SP70
          PACK      PMPXSN16,PMPXSN16,SP70
.
          MATCH     SAVEINTR,PMPXINTR
          IF        @EQUAL
            MOVE      SP70,SAVEINTR
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVELNG1,PMPXLNG1
          IF        @EQUAL
            MOVE      SP70,SAVELNG1
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVEPRVI,PMPXPRVI
          IF        @EQUAL
            MOVE      SP70,SAVEPRVI
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVEFLDR,PMPXFLDR
          IF        @EQUAL
            MOVE      SP70,SAVEFLDR
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SAVESN16,PMPXSN16
          IF        @EQUAL
            MOVE      SP70,SAVESN16
          ELSE
            MATCH     SP70,SAVESN16
            IF        @EQUAL
              MOVE      NINE,SAVESN16
            ENDIF
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SPPXUCC4,PMPXUCC4
          IF        @EQUAL
            MOVE      SP70,SPPXUCC4
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SPPXUCC5,PMPXUCC5
          IF        @EQUAL
            MOVE      SP70,SPPXUCC5
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SPPXATF1,PMPXATF1
          IF        @EQUAL
            MOVE      SP70,SPPXATF1
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SPPXATF2,PMPXATF2
          IF        @EQUAL
            MOVE      SP70,SPPXATF2
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          COMPARE   ZERO,FORM2
          IF        @EQUAL
            GOTO      SJGAU299
          ENDIF
.
SJGAU267  MOVE      "008",D3
          CALL      WDAU0000
.
SJGAU299  RETURN
.
.------------------------------------------------------------------------------
. Write out death audit for type 008
.------------------------------------------------------------------------------
WAUDT800  MOVE      ZERO,FORM2
.
          MOVE      SP70,SAVEINTR
          MOVE      SP70,SAVELNG1
          MOVE      SP70,SAVEPRVI
          MOVE      SP70,SAVEFLDR
          MOVE      SP70,SAVESN16
          MOVE      SP70,SAVEUSR1
.
          MATCH     SPPXUCC4,PMPXUCC4
          IF        @EQUAL
            MOVE      SP70,SPPXUCC4
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SPPXUCC5,PMPXUCC5
          IF        @EQUAL
            MOVE      SP70,SPPXUCC5
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SPPXATF1,PMPXATF1
          IF        @EQUAL
            MOVE      SP70,SPPXATF1
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          MATCH     SPPXATF2,PMPXATF2
          IF        @EQUAL
            MOVE      SP70,SPPXATF2
          ELSE
            ADD       ONE,FORM2
          ENDIF
.
          COMPARE   ZERO,FORM2
          IF        @EQUAL
            GOTO      WAUDT899
          ENDIF
.
WAUDT880  MOVE      "008",D3
          CALL      WDAU0000
.
WAUDT899  RETURN
+
.******************************************************************************
.*                SJOG PMI Audits Save Variables                              *
.******************************************************************************
SJGSAV00  MATCH     "1",SJOGAUDT
          IF        @EQUAL
            PACK      SAVESNAM,PTMASNAM,SP70
.
            MATCH     "1",SJOGAUDI
            IF        @EQUAL
              PACK      SAVEXFNM,PGNAME,SP70
            ELSE
              PACK      SAVEXFNM,PMPXFNAM,SP70
            ENDIF
.
            PACK      SAVEXSNM,PMPXSNAM,SP70
            PACK      SAVETITL,PTITL,SP70
            PACK      SAVEPSEX,PSEX,SP70
            PACK      SAVEPDOB,PBDATE,SP70
            PACK      SAVEPFGN,PMPXPFGN,SP70
            PACK      SAVEPMST,PMSTAT,SP70
            PACK      SAVEPREG,PREG,SP70
            PACK      SAVEPCNT,PCONT,SP70
            PACK      SAVEPTYP,PTYPE,SP70
            PACK      SAVEABRG,PMPXABRG,SP70
.
.
            MATCH     "P1",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,PUSR1,SP70
            ENDIF
            MATCH     "P2",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,PUSR2,SP70
            ENDIF
            MATCH     "P3",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,PUSR3,SP70
            ENDIF
            MATCH     "P4",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,PUSR4,SP70
            ENDIF
            MATCH     "P5",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,PUSR5,SP70
            ENDIF
            MATCH     "P6",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,PUSR6,SP70
            ENDIF
            MATCH     "U1",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,SP70
            ENDIF
            MATCH     "U2",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,SP70
            ENDIF
            MATCH     "U3",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,SP70
            ENDIF
            MATCH     "U4",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,SP70
            ENDIF
            MATCH     "U5",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,SP70
            ENDIF
            MATCH     "U6",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,SP70
            ENDIF
            MATCH     "U7",PTCNEMPL
            IF        @EQUAL
              PACK      SAVEUSR7,SP70
            ENDIF
.
.
            PACK      SAVEMEDI,PMEDI,SP70
            PACK      SAVEMCCD,PTMXMCCD,SP70
            PACK      SAVEMEDC,PMPXMEDC,SP70
.
            MATCH     "1",PTCNNEWC
            IF        @EQUAL
              PACK      SAVEUPRF,PMPXUPRF,SP70
            ELSE
              PACK      SAVECONP,PMPXCONP,SP70
            ENDIF
.
            PACK      SAVEINTR,PMPXINTR,SP70
            PACK      SAVELNG1,PMPXLNG1,SP70
            PACK      SAVEPRVI,PMPXPRVI,SP70
            PACK      SAVEFLDR,PMPXFLDR,SP70
            PACK      SAVESN16,PMPXSN16,SP70
            PACK      SAVECUID,PTMADCUU,SP70
            PACK      SAVECDAT,PTMADCUD,SP70
            PACK      SAVECTIM,PTMADCUT,SP70
            PACK      SAVEDCDT,PTMADCDT,SP70
          ENDIF
.
SJGSAV90  PACK      SPPXUCC4,PMPXUCC4,SP70
          PACK      SPPXUCC5,PMPXUCC5,SP70
          PACK      SPPXATF1,PMPXATF1,SP70
          PACK      SPPXATF2,PMPXATF2,SP70
.
SJGSAV99  RETURN
.
.-----------------------------------------------------------
. Is the primary diagnosis Methamphetamin related
.-----------------------------------------------------------
METHD000  PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,SP70
          CALL      RSEMVCD1
METHD100  CALL      RKEMVCD1
          BRANCH    OVRCD,METHD999
.
          MATCH     ADMISSNO,EMVCVIST
          GOTO      METHD999 IF NOT EQUAL
.
          MATCH     "005",EMVCTYPE
          GOTO      METHD999 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU
          GOTO      METHD100 IF NOT EQUAL
.
METHD500  IF        EMVCCSYS=1
            CALL      OPICD1
            PACK      KEY9,EMVCMNCD,SP70
            MOVE      EMVCDATE,ICDRDDTE
            CALL      RDPTICD1
            IF        OVRCD=0
              IF        ICDRDVER>=10
                WRITE     HTMLFILE;PTODMETH;
              ENDIF
            ENDIF
            CALL      CLICD1
          ELSE
            PACK      KEY9,EMVCMNCD,SP70
            CALL      RDEMICD1
            IF        OVRCD=0
              WRITE     HTMLFILE;EMICMETH;
            ENDIF
           ENDIF
.
METHD999  RETURN
.
.-----------------------------------------------------------
. Is the primary diagnosis FDV Reated
.-----------------------------------------------------------
FDVRL000  PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,SP70
          CALL      RSEMVCD1
FDVRL100  CALL      RKEMVCD1
          BRANCH    OVRCD,FDVRL900
.
          MATCH     ADMISSNO,EMVCVIST
          GOTO      FDVRL900 IF NOT EQUAL
.
          MATCH     "005",EMVCTYPE
          GOTO      FDVRL900 IF NOT EQUAL
.
          COMPARE   FIVE,EMVCCSYS
          GOTO      FDVRL100 IF NOT EQUAL
.
          MOVE      "emricdaf",TABLNAME
          MOVE      "FDV",DIAGCODE
          PACK      DIM30,EMVCMNCD,SP70
          PACK      KEY41,TABLNAME,DIM30,DIAGCODE,SP70
          CALL      RDPMVMT1
          BRANCH    OVRCD,FDVRL100
.
          WRITE     HTMLFILE;"Yes";
          GOTO      FDVRL999
.
FDVRL900  WRITE     HTMLFILE;"No";
.
FDVRL999  RETURN
.
.-----------------------------------------------------------
. Write transfer source patdadaf record
.------------------------------------------------------------
TSRC0000  MATCH     Z70,TRNSFSRC            * Transfer Source not on page
          GOTO      TSRC9999 IF EQUAL       * skip write/update
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDPTDAD1                * Read Transfer Destination
          BRANCH    OVRCD,TSRC5000
.
          MOVE      TRNSFSRC,PTDAADTS
          CALL      UPPTDAD1                * update PATDADFD record
          GOTO      TSRC9999
.
TSRC5000  MOVE      EMVIADMN,DPTDAADM
          MOVE      TRNSFSRC,PTDAADTS
          MOVE      SP70,PTDADCTS
          MOVE      SP70,PTDASPAR
          CALL      WRPTDAD1                * write PATDADFD record
.
          GOTO      TSRC9999
.
TSRC9999  RETURN
+
.------------------------------------------------------------
. Enable Emergency Eclipse OEC
.------------------------------------------------------------
OECIND00  PACK      KEY8,EMVIURNO,SP70
          CALL      RDMAST1
          BRANCH    OVRCD,OECIND99
.
          MATCH     SP70,PFUNDH
          GOTO      OECIND99 IF EQUAL
          GOTO      OECIND99 IF EOS
.
          PACK      KEY6,PFUNDH,SP70
          CALL      RDPTFX11
          BRANCH    OVRCD,OECIND99
.
          MATCH     SP70,PTFXECLP
          GOTO      OECIND99 IF EQUAL
          GOTO      OECIND99 IF EOS
.
          PACK      KEY9,PTFXECLP,SP70
          CALL      RSPTPCP1
OECIND10  CALL      RKPTPCP1
          BRANCH    OVRCD,OECIND99
.
          MATCH     PTFXECLP,PTPPCODE
          GOTO      OECIND99 IF NOT EQUAL                 
.
          MATCH     "OEC",PTPPCPID
          GOTO      OECIND10 IF NOT EQUAL
.
          WRITE     HTMLFILE;ONE;
.
OECIND99  RETURN
+
.------------------------------------------------------------
. Emergency Eclipse OEC       
.------------------------------------------------------------
EMROEC00  MATCH     "1",PTCNOECE
          GOTO      EMROEC99 IF EQUAL
.
          MATCH     "1",OECCHBOX
          GOTO      EMROEC99 IF NOT EQUAL
.
          CALL      CLRELF00
.
          CALL      GELN0000           * Generate Eligibility Number
          BRANCH    EXIT,EMROEC99
.
          CALL      STEF0000
.
          MOVE      EMVIURNO,PMEFURNO
          MOVE      SP70,PMEFOECC          
          MOVE      PTITL,PMEFTITL
          MOVE      PGNAME,PMEFFNAM
          MOVE      PSNAME,PMEFSNAM
          MOVE      SP70,PMEFHFGN
          MOVE      SP70,PMEFHFSN
          MOVE      PSEX,PMEFGEND          
          MOVE      PBDATE,PMEFBDAT
          CALL      IBACLOCK
          PACK      PMEFEADT,CCC,CYY,CMM,CDD
          REP       " 0",PMEFEADT
          MOVE      EMVICOMP,PMEFCLTY
          MOVE      PFUNDH,PMEFHFND
          MOVE      PFNDTB,PMEFHFNT
          MOVE      PFNDMM,PMEFHFMN
.
          MOVE      USERID,PMEFCUID 
          CALL      IBACLOCK
          PACK      PMEFCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMEFCDAT
          CLOCK     TIME,PMEFCTIM
.
          MOVE      EMVIADMN,PMEFVISN
          MOVE      "  1",PMEFCNTR
          MOVE      "0",PMEFFLAG
.
          PACK      KEY8,PMEFELGN,SP70
          CALL      RAPMELF1
          IF        OVRCD=0
            GOTO      EMROEC99
          ENDIF
.
          CALL      WRPMELF1
.
          CALL      CLPMSOEC
          CALL      SETOEC00
.
          PACK      KEY11,PMEFELGN,SP1,SP1,ONE,SP70
          CALL      RAPMOEC1
          IF        OVRCD=0
            GOTO      EMROEC99
          ENDIF
.
          CALL      WRPMOEC1
.
.         No need for OEC services in Emergency OEC
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDPMVX11
          IF        OVRCD=0
            MOVE      ONE,PMVXPOEC
            CALL      UPPMVX11
          ENDIF
.
EMROEC99  RETURN
+
.------------------------------------------------------------------------------
.        Set Parameters for Free Format OEC fields
.------------------------------------------------------------------------------
STELF000  UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          BRANCH    F3,STELF001,STELF002,STELF003,STELF004,STELF005,STELF006:
                       STELF007,STELF008,STELF009,STELF010,STELF011,STELF012:
                       STELF013,STELF014,STELF015,STELF016,STELF017,STELF018:
                       STELF019,STELF020,STELF021,STELF022,STELF023,STELF024:
                       STELF025,STELF026,STELF027,STELF028,STELF029,STELF030:
                       STELF031,STELF032,STELF033,STELF034
          GOTO      STELF999
.
STELF001  MOVE      QRYDATA,PTELF001
          GOTO      STELF999
.
STELF002  MOVE      QRYDATA,PTELF002
          GOTO      STELF999
.
STELF003  MOVE      QRYDATA,PTELF003
          GOTO      STELF999
.
STELF004  MOVE      QRYDATA,PTELF004
          GOTO      STELF999
.
STELF005  MOVE      QRYDATA,PTELF005
          GOTO      STELF999
.
STELF006  MOVE      QRYDATA,PTELF006
          GOTO      STELF999
.
STELF007  MOVE      QRYDATA,PTELF007
          GOTO      STELF999
.
STELF008  MOVE      QRYDATA,PTELF008
          GOTO      STELF999
.
STELF009  RESET     QRYDATA
          MATCH     SP70,QRYDATA
          GOTO      STELF999 IF EQUAL
          UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
          CALL      SETMTH00
          PACK      PTELF009,CCENT,CYEAR,CMON,CDAY
          REP       " 0",PTELF009
          GOTO      STELF999
.
STELF010  RESET     QRYDATA
          MATCH     SP70,QRYDATA
          GOTO      STELF999 IF EQUAL
          UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
          CALL      SETMTH00
          PACK      PTELF010,CCENT,CYEAR,CMON,CDAY
          REP       " 0",PTELF010
          GOTO      STELF999
.
STELF011  MOVE      QRYDATA,PTELF011
          GOTO      STELF999
.
STELF012  MOVE      QRYDATA,PTELF012
          PACK      PTELF012,PTELF012,SP70
          RJUSTIFY  PTELF012
          GOTO      STELF999
.
STELF013  MOVE      QRYDATA,PTELF013
          GOTO      STELF999
.
STELF014  MOVE      QRYDATA,PTELF014
          GOTO      STELF999
.
STELF015  MOVE      QRYDATA,PTELF015
          GOTO      STELF999
.
STELF016  MOVE      QRYDATA,PTELF016
          GOTO      STELF999
.
STELF017  MOVE      QRYDATA,PTELF017
          GOTO      STELF999
.
STELF018  MOVE      QRYDATA,PTELF018
          GOTO      STELF999
.
STELF019  MOVE      QRYDATA,PTELF019
          GOTO      STELF999
.
STELF020  MOVE      QRYDATA,PTELF020
          GOTO      STELF999
.
STELF021  MOVE      QRYDATA,PTELF021
          GOTO      STELF999
.
STELF022  MOVE      QRYDATA,PTELF022
          GOTO      STELF999
.
STELF023  MOVE      QRYDATA,PTELF023
          GOTO      STELF999
.
STELF024  MOVE      QRYDATA,PTELF024
          GOTO      STELF999
.
STELF025  MOVE      QRYDATA,PTELF025
          GOTO      STELF999
.
STELF026  MOVE      QRYDATA,PTELF026
          GOTO      STELF999
.
STELF027  MOVE      QRYDATA,PTELF027
          GOTO      STELF999
.
STELF028  MOVE      QRYDATA,PTELF028
          PACK      PTELF028,PTELF028,SP70
          RJUSTIFY  PTELF028
          GOTO      STELF999
.
STELF029  MOVE      QRYDATA,PTELF029
          PACK      PTELF029,PTELF029,SP70
          RJUSTIFY  PTELF029
          GOTO      STELF999
.
STELF030  MOVE      QRYDATA,PTELF030
          PACK      PTELF030,PTELF030,SP70
          RJUSTIFY  PTELF030
          GOTO      STELF999
.
STELF031  MOVE      QRYDATA,PTELF031
          PACK      PTELF031,PTELF031,SP70
          RJUSTIFY  PTELF031
          GOTO      STELF999
.
STELF032  MOVE      QRYDATA,PTELF032
          PACK      PTELF032,PTELF032,SP70
          RJUSTIFY  PTELF032
          GOTO      STELF999
.
STELF033  MOVE      QRYDATA,PTELF033
          GOTO      STELF999
.
STELF034  MOVE      QRYDATA,PTELF034
          GOTO      STELF999
.
STELF999  RETURN
.
.-----------------------------------------------------------
.         Set up free format OEC fields
.-----------------------------------------------------------
STEF0000  MATCH     SP70,PTELF001
          IF        !@EQUAL
            MOVE      PTELF001,PMEFURNO
          ENDIF
.
          MATCH     SP70,PTELF002
          IF        !@EQUAL
            MOVE      PTELF002,PMEFOECC
          ENDIF
.
          MATCH     SP70,PTELF003
          IF        !@EQUAL
            MOVE      PTELF003,PMEFTITL
          ENDIF
.
          MATCH     SP70,PTELF004
          IF        !@EQUAL
            MOVE      PTELF004,PMEFFNAM
          ENDIF
.
          MATCH     SP70,PTELF005
          IF        !@EQUAL
            MOVE      PTELF005,PMEFSNAM
          ENDIF
.
          MATCH     SP70,PTELF006
          IF        !@EQUAL
            MOVE      PTELF006,PMEFHFGN
          ENDIF
.
          MATCH     SP70,PTELF007
          IF        !@EQUAL
            MOVE      PTELF007,PMEFHFSN
          ENDIF
.
          MATCH     SP70,PTELF008
          IF        !@EQUAL
            MOVE      PTELF008,PMEFGEND
          ENDIF
.
          MATCH     SP70,PTELF009
          IF        !@EQUAL
            MOVE      PTELF009,PMEFBDAT
          ENDIF
.
          MATCH     SP70,PTELF010
          IF        !@EQUAL
            MOVE      PTELF010,PMEFEADT
          ENDIF
.
          MATCH     SP70,PTELF011
          IF        !@EQUAL
            MOVE      PTELF011,PMEFISTY
          ENDIF
.
          MATCH     SP70,PTELF012
          IF        !@EQUAL
            MOVE      PTELF012,PMEFPLOS
          ENDIF
.
          MATCH     SP70,PTELF013
          IF        !@EQUAL
            MOVE      PTELF013,PMEFDINT
          ENDIF
.
          MATCH     SP70,PTELF014
          IF        !@EQUAL
            MOVE      PTELF014,PMEFPEAI
          ENDIF
.
          MATCH     SP70,PTELF015
          IF        !@EQUAL
            MOVE      PTELF015,PMEFEMAD
          ENDIF
.
          MATCH     SP70,PTELF016
          IF        !@EQUAL
            MOVE      PTELF016,PMEFPRIC
          ENDIF
.
          MATCH     SP70,PTELF017
          IF        !@EQUAL
            MOVE      PTELF017,PMEFPRIM
          ENDIF
.
          MATCH     SP70,PTELF018
          IF        !@EQUAL
            MOVE      PTELF018,PMEFCLTY
          ENDIF
.
          MATCH     SP70,PTELF019
          IF        !@EQUAL
            MOVE      PTELF019,PMEFHFND
          ENDIF
.
          MATCH     SP70,PTELF020
          IF        !@EQUAL
            MOVE      PTELF020,PMEFHFNT
          ENDIF
.
          MATCH     SP70,PTELF021
          IF        !@EQUAL
            MOVE      PTELF021,PMEFHFMN
          ENDIF
.
          MATCH     SP70,PTELF022
          IF        !@EQUAL
            MOVE      PTELF022,PMEFDIAG
          ENDIF
.
          MATCH     SP70,PTELF023
          IF        !@EQUAL
            MOVE      PTELF023,PMEFSRV1
          ENDIF
.
          MATCH     SP70,PTELF024
          IF        !@EQUAL
            MOVE      PTELF024,PMEFSRV2
          ENDIF
.
          MATCH     SP70,PTELF025
          IF        !@EQUAL
            MOVE      PTELF025,PMEFSRV3
          ENDIF
.
          MATCH     SP70,PTELF026
          IF        !@EQUAL
            MOVE      PTELF026,PMEFSRV4
          ENDIF
.
          MATCH     SP70,PTELF027
          IF        !@EQUAL
            MOVE      PTELF027,PMEFSRV5
          ENDIF
.
          MOVE      WBSEUID,PMEFCUID
          CALL      IBACLOCK
          PACK      PMEFCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMEFCDAT
          CLOCK     TIME,CTIMEIS
          MOVE      CTIMEIS,PMEFCTIM
.
          MATCH     SP70,PTELF033
          IF        !@EQUAL
            MOVE      PTELF033,PMEFDVAN
          ENDIF
.
          MATCH     SP70,PTELF034
          IF        !@EQUAL
            MOVE      PTELF034,PMEFGEND
          ENDIF
.
STEF9999  RETURN
+
.-----------------------------------------------------------
.         Clear free format OEC fields
.-----------------------------------------------------------
CLRELF00  MOVE      SP70,PMEFELGN
          MOVE      SP70,PMEFURNO
          MOVE      SP70,PMEFOECC
          MOVE      SP70,PMEFTITL
          MOVE      SP70,PMEFFNAM
          MOVE      SP70,PMEFSNAM
          MOVE      SP70,PMEFHFGN
          MOVE      SP70,PMEFHFSN
          MOVE      SP70,PMEFGEND
          MOVE      SP70,PMEFBDAT
          MOVE      SP70,PMEFEADT
          MOVE      SP70,PMEFISTY
          MOVE      SP70,PMEFPLOS
          MOVE      SP70,PMEFDINT
          MOVE      SP70,PMEFPEAI
          MOVE      SP70,PMEFEMAD
          MOVE      SP70,PMEFPRIC
          MOVE      SP70,PMEFPRIM
          MOVE      SP70,PMEFCLTY
          MOVE      SP70,PMEFHFND
          MOVE      SP70,PMEFHFNT
          MOVE      SP70,PMEFHFMN
          MOVE      SP70,PMEFDIAG
          MOVE      SP70,PMEFSRV1
          MOVE      SP70,PMEFSRV2
          MOVE      SP70,PMEFSRV3
          MOVE      SP70,PMEFSRV4
          MOVE      SP70,PMEFSRV5
          MOVE      SP70,PMEFCUID
          MOVE      SP70,PMEFCDAT
          MOVE      SP70,PMEFCTIM
          MOVE      SP70,PMEFDVAN
          PACK      PMEFSPAR,SP70,SP70
.
CLRELF99  RETURN
+
.-----------------------------------------------------------
.        Generate Free Format OEC Eligibility Number
.-----------------------------------------------------------
GELN0000  MOVE      "118",PRXCODE
          CALL      GETSLK00
          READ      CONTROLF,HUND18;*117,PTCNELGN
.
GELN0100  MOVE      PTCNELGN,PMEFELGN
          UNPACK    PTCNELGN,ANS,KEY7
          MATCH     "a",ANS
          GOTO      GELN1150 IF LESS
          MOVE      ZERO,F7
          MOVE      KEY7,F7
.
GELN1100  COMPARE   "9999999",F7               * at the end of the group
          GOTO      GELN1110 IF NOT EQUAL
.
          MATCH     "z",ANS
          GOTO      GELN9000 IF EQUAL
.
          REP       REPUNIQ,ANS
          MOVE      ZERO,F7
.
GELN1110  ADD       ONE,F7
          MOVE      F7,D7
          REP       " 0",D7
.
          PACK      KEY8,ANS,D7,SP70
          CALL      RDPMELF1
          IF        OVRCD=ONE
            PACK      KEY11,ANS,D7,SP1,SP1,ONE,SP70
            CALL      RDPMOEC1
            IF        OVRCD=ONE
              PACK      KEY14,ANS,D7,SP1,SP1,ONE,SP70
              CALL      RSPMOES1
              CALL      RKPMOES1
              BRANCH    OVRCD,GELN9500
.
              PACK      KEY8,ANS,D7,SP70
              MATCH     KEY8,PMOSVISN
              GOTO      GELN9500 IF NOT EQUAL
            ENDIF
          ENDIF
.
          GOTO      GELN1100
.
. no records
.
GELN1150  MOVE      ONE,F7
          MOVE      "a",ANS
.
          MOVE      F7,D7
          REP       " 0",D7
.
          PACK      KEY8,ANS,D7,SP70
          GOTO      GELN9500
.
GELN9000  MOVE      ONE,EXIT                  * Passcode allocation full
          GOTO      GELN9999
.
GELN9500  MOVE      KEY8,PTCNELGN
          WRITAB    CONTROLF,HUND18;*117,PTCNELGN
.
          MATCH     "00000000",PMEFELGN
          GOTO      GELN0100 IF EQUAL
.
GELN9999  CALL      RELSLK00
          RETURN
.
.*******************************************************************************
.        Set pmsoec variables
.*******************************************************************************
SETOEC00  MOVE      PMEFELGN,PMOEVISN
          MOVE      "  1",PMOECNTR
          MOVE      " 0",PMOESTAT
          MOVE      PMEFURNO,PMOEURNO
          MOVE      PMEFELGN,PMOEARID
          PACK      PMOEARID,PMOEARID,SP70
          LJUSTIFY  PMOEARID
          MOVE      SP70,PMOETRID
          CALL      IBACLOCK
          PACK      PMOERQDT,CCC,CYY,CMM,CDD
          REP       " 0",PMOERQDT
          MOVE      SP70,PMOEETYP
          MOVE      SP70,PMOEERRC
          PACK      PMOEERRD,SP70,SP70
          PACK      PMOECDTE,CCC,CYY,CMM,CDD
          REP       " 0",PMOECDTE
          CLOCK     TIME,CTIMEIS
          MOVE      CTIMEIS,PMOECTIM
          MOVE      SP70,PMOEUDTE
          MOVE      SP70,PMOEUTIM
          MOVE      SP70,PMOEHOSP
.
          IF        IBCNMHOS=1
            MOVE      WBSEHOSP,PMOEHOSP
          ENDIF
.
          MOVE      SP70,PMOEELEG
.
          MOVE      SP70,PMOESPAR
.
SETOEC99  RETURN
+
.------------------------------------------------------------
. Emergency WebServices OECW
.------------------------------------------------------------
EMROEW00  MATCH     "1",PTCNWSIN
          GOTO      EMROEW99 IF NOT EQUAL
.
          MATCH     "1",PTCNOECW
          GOTO      EMROEW99 IF NOT EQUAL
.
          COMPARE   "1",OECWINDC
          GOTO      EMROEW99 IF NOT EQUAL
.
          MATCH     "1",OECCHBOX
          GOTO      EMROEW99 IF NOT EQUAL
.
          CALL      CLWELF00
.
          CALL      GELW0000           * Generate Eligibility Number
          BRANCH    EXIT,EMROEW99
.
          CALL      SWEF0000
.
          MOVE      EMVIURNO,WBEFURNO
          MOVE      SP70,WBEFOECC
          MOVE      PTITL,WBEFTITL
          MOVE      PGNAME,WBEFFNAM
          MOVE      PSNAME,WBEFSNAM
          MOVE      SP70,WBEFHFGN
          MOVE      SP70,WBEFHFSN
          MOVE      PSEX,WBEFGEND
          MOVE      PBDATE,WBEFBDAT
          CALL      IBACLOCK
          PACK      WBEFEADT,CCC,CYY,CMM,CDD
          REP       " 0",WBEFEADT
          MOVE      EMVICOMP,WBEFCLTY
          MOVE      PFUNDH,WBEFHFND
          MOVE      PFNDTB,WBEFHFNT
          MOVE      PFNDMM,WBEFHFMN
.
          MOVE      USERID,WBEFCUID
          CALL      IBACLOCK
          PACK      WBEFCDAT,CCC,CYY,CMM,CDD
          REP       " 0",WBEFCDAT
          CLOCK     TIME,WBEFCTIM
.
          MOVE      EMVIADMN,WBEFVISN
          MOVE      "  1",WBEFCNTR
          MOVE      "0",WBEFFLAG
.
          MOVE      SP70,WBEFTRID
          MOVE      SP70,WBEFMSID
.
          PACK      KEY8,WBEFELGN,SP70
          CALL      RAWBELF1
          IF        OVRCD=0
            GOTO      EMROEW99
          ENDIF
.
          CALL      WRWBELF1
.
          CALL      CLWEBOEC
          CALL      SETOEW00
.
          PACK      KEY11,WBEFELGN,SP1,SP1,ONE,SP70
          CALL      RAWBOEC1
          IF        OVRCD=0
            GOTO      EMROEW99
          ENDIF
.
          CALL      IBACLOCK
          PACK      WBOCUDTE,CCC,CYY,CMM,CDD
          REP       " 0",WBOCUDTE
          MOVE      CTIMEIS,WBOCUTIM
          MOVE      USERID,WBOCUUID

          CALL      WRWBOEC1
.
.         No need for OECW services in Emergency OECW
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDPMVX11
          IF        OVRCD=0
            MOVE      ONE,PMVXPOEC
            CALL      UPPMVX11
          ENDIF
.
EMROEW99  RETURN
+
.-----------------------------------------------------------
.         Clear free format OECW fields
.-----------------------------------------------------------
CLWELF00  MOVE      SP70,WBEFELGN
          MOVE      SP70,WBEFURNO
          MOVE      SP70,WBEFOECC
          MOVE      SP70,WBEFTITL
          MOVE      SP70,WBEFFNAM
          MOVE      SP70,WBEFSNAM
          MOVE      SP70,WBEFHFGN
          MOVE      SP70,WBEFHFSN
          MOVE      SP70,WBEFGEND
          MOVE      SP70,WBEFBDAT
          MOVE      SP70,WBEFEADT
          MOVE      SP70,WBEFISTY
          MOVE      SP70,WBEFPLOS
          MOVE      SP70,WBEFDINT
          MOVE      SP70,WBEFPEAI
          MOVE      SP70,WBEFEMAD
          MOVE      SP70,WBEFPRIC
          MOVE      SP70,WBEFPRIM
          MOVE      SP70,WBEFCLTY
          MOVE      SP70,WBEFHFND
          MOVE      SP70,WBEFHFNT
          MOVE      SP70,WBEFHFMN
          MOVE      SP70,WBEFDIAG
          MOVE      SP70,WBEFSRV1
          MOVE      SP70,WBEFSRV2
          MOVE      SP70,WBEFSRV3
          MOVE      SP70,WBEFSRV4
          MOVE      SP70,WBEFSRV5
          MOVE      SP70,WBEFCUID
          MOVE      SP70,WBEFCDAT
          MOVE      SP70,WBEFCTIM
          MOVE      SP70,WBEFDVAN
          MOVE      SP70,WBEFVISN
          MOVE      SP70,WBEFCNTR
          MOVE      SP70,WBEFFLAG
          MOVE      SP70,WBEFTRID
          MOVE      SP70,WBEFMSID
          PACK      WBEFSPAR,SP70,SP70
.
CLWELF99  RETURN
+
.-----------------------------------------------------------
.         Set up free format OECW fields
.-----------------------------------------------------------
SWEF0000  MATCH     SP70,PTELF001
          IF        !@EQUAL
            MOVE      PTELF001,WBEFURNO
          ENDIF
.
          MATCH     SP70,PTELF002
          IF        !@EQUAL
            MOVE      PTELF002,WBEFOECC
          ENDIF
.
          MATCH     SP70,PTELF003
          IF        !@EQUAL
            MOVE      PTELF003,WBEFTITL
          ENDIF
.
          MATCH     SP70,PTELF004
          IF        !@EQUAL
            MOVE      PTELF004,WBEFFNAM
          ENDIF
.
          MATCH     SP70,PTELF005
          IF        !@EQUAL
            MOVE      PTELF005,WBEFSNAM
          ENDIF
.
          MATCH     SP70,PTELF006
          IF        !@EQUAL
            MOVE      PTELF006,WBEFHFGN
          ENDIF
.
          MATCH     SP70,PTELF007
          IF        !@EQUAL
            MOVE      PTELF007,WBEFHFSN
          ENDIF
.
          MATCH     SP70,PTELF008
          IF        !@EQUAL
            MOVE      PTELF008,WBEFGEND
          ENDIF
.
          MATCH     SP70,PTELF009
          IF        !@EQUAL
            MOVE      PTELF009,WBEFBDAT
          ENDIF
.
          MATCH     SP70,PTELF010
          IF        !@EQUAL
            MOVE      PTELF010,WBEFEADT
          ENDIF
.
          MATCH     SP70,PTELF011
          IF        !@EQUAL
            MOVE      PTELF011,WBEFISTY
          ENDIF
.
          MATCH     SP70,PTELF012
          IF        !@EQUAL
            MOVE      PTELF012,WBEFPLOS
          ENDIF
.
          MATCH     SP70,PTELF013
          IF        !@EQUAL
            MOVE      PTELF013,WBEFDINT
          ENDIF
.
          MATCH     SP70,PTELF014
          IF        !@EQUAL
            MOVE      PTELF014,WBEFPEAI
          ENDIF
.
          MATCH     SP70,PTELF015
          IF        !@EQUAL
            MOVE      PTELF015,WBEFEMAD
          ENDIF
.
          MATCH     SP70,PTELF016
          IF        !@EQUAL
            MOVE      PTELF016,WBEFPRIC
          ENDIF
.
          MATCH     SP70,PTELF017
          IF        !@EQUAL
            MOVE      PTELF017,WBEFPRIM
          ENDIF
.
          MATCH     SP70,PTELF018
          IF        !@EQUAL
            MOVE      PTELF018,WBEFCLTY
          ENDIF
.
          MATCH     SP70,PTELF019
          IF        !@EQUAL
            MOVE      PTELF019,WBEFHFND
          ENDIF
.
          MATCH     SP70,PTELF020
          IF        !@EQUAL
            MOVE      PTELF020,WBEFHFNT
          ENDIF
.
          MATCH     SP70,PTELF021
          IF        !@EQUAL
            MOVE      PTELF021,WBEFHFMN
          ENDIF
.
          MATCH     SP70,PTELF022
          IF        !@EQUAL
            MOVE      PTELF022,WBEFDIAG
          ENDIF
.
          MATCH     SP70,PTELF023
          IF        !@EQUAL
            MOVE      PTELF023,WBEFSRV1
          ENDIF
.
          MATCH     SP70,PTELF024
          IF        !@EQUAL
            MOVE      PTELF024,WBEFSRV2
          ENDIF
.
          MATCH     SP70,PTELF025
          IF        !@EQUAL
            MOVE      PTELF025,WBEFSRV3
          ENDIF
.
          MATCH     SP70,PTELF026
          IF        !@EQUAL
            MOVE      PTELF026,WBEFSRV4
          ENDIF
.
          MATCH     SP70,PTELF027
          IF        !@EQUAL
            MOVE      PTELF027,WBEFSRV5
          ENDIF
.
          MOVE      WBSEUID,WBEFCUID
          CALL      IBACLOCK
          PACK      WBEFCDAT,CCC,CYY,CMM,CDD
          REP       " 0",WBEFCDAT
          CLOCK     TIME,CTIMEIS
          MOVE      CTIMEIS,WBEFCTIM
.
          MATCH     SP70,PTELF033
          IF        !@EQUAL
            MOVE      PTELF033,WBEFDVAN
          ENDIF
.
          MATCH     SP70,PTELF034
          IF        !@EQUAL
            MOVE      PTELF034,WBEFGEND
          ENDIF
.
SWEF9999  RETURN
+
.*******************************************************************************
.        Set weboec variables
.*******************************************************************************
SETOEW00  MOVE      WBEFELGN,WBOCVISN
          MOVE      "  1",WBOCCNTR
          MOVE      " 0",WBOCSTAT
          MOVE      WBEFURNO,WBOCURNO
          MOVE      WBEFELGN,WBOCARID
          PACK      WBOCARID,WBOCARID,SP70
          LJUSTIFY  WBOCARID
          MOVE      SP70,WBOCTRID
          CALL      IBACLOCK
          PACK      WBOCRQDT,CCC,CYY,CMM,CDD
          REP       " 0",WBOCRQDT
          MOVE      SP70,WBOCETYP
          MOVE      SP70,WBOCERRC
          PACK      WBOCERRD,SP70,SP70
          PACK      WBOCCDTE,CCC,CYY,CMM,CDD
          REP       " 0",WBOCCDTE
          CLOCK     TIME,CTIMEIS
          MOVE      CTIMEIS,WBOCCTIM
          MOVE      SP70,WBOCUDTE
          MOVE      SP70,WBOCUTIM
          MOVE      SP70,WBOCHOSP
.
          IF        IBCNMHOS=1
            MOVE      WBSEHOSP,WBOCHOSP
          ENDIF
.
          MOVE      SP70,WBOCELEG
          MOVE      SP70,WBOCMSID
.
          MOVE      WBSEUID,WBOCCUID
          MOVE      SP70,WBOCCUID

          MOVE      SP70,WBOCSPAR
.
SETOEW99  RETURN
+
.-----------------------------------------------------------
.        Generate Free Format OECW Eligibility Number
.-----------------------------------------------------------
GELW0000  MOVE      "118",PRXCODE
          CALL      GETSLK00
          READ      CONTROLF,HUND18;*117,PTCNELGN
.
GELW0100  MOVE      PTCNELGN,WBEFELGN
          UNPACK    PTCNELGN,ANS,KEY7
          MATCH     "a",ANS
          GOTO      GELW1150 IF LESS
          MOVE      ZERO,F7
          MOVE      KEY7,F7
.
GELW1100  COMPARE   "9999999",F7               * at the end of the group
          GOTO      GELW1110 IF NOT EQUAL
.
          MATCH     "z",ANS
          GOTO      GELW9000 IF EQUAL
.
          REP       REPUNIQ,ANS
          MOVE      ZERO,F7
.
GELW1110  ADD       ONE,F7
          MOVE      F7,D7
          REP       " 0",D7
.
          PACK      KEY8,ANS,D7,SP70
          CALL      RDWBELF1
          IF        OVRCD=ONE
            PACK      KEY11,ANS,D7,SP1,SP1,ONE,SP70
            CALL      RDWBOEC1
            IF        OVRCD=ONE
              PACK      KEY14,ANS,D7,SP1,SP1,ONE,SP70
              CALL      RSWBOES1
              CALL      RKWBOES1
              BRANCH    OVRCD,GELW9500
.
              PACK      KEY8,ANS,D7,SP70
              MATCH     KEY8,WBOSVISN
              GOTO      GELW9500 IF NOT EQUAL
            ENDIF
          ENDIF
.
          GOTO      GELW1100
.
. no records
.
GELW1150  MOVE      ONE,F7
          MOVE      "a",ANS
.
          MOVE      F7,D7
          REP       " 0",D7
.
          PACK      KEY8,ANS,D7,SP70
          GOTO      GELW9500
.
GELW9000  MOVE      ONE,EXIT                  * Passcode allocation full
          GOTO      GELW9999
.
GELW9500  MOVE      KEY8,PTCNELGN
          WRITAB    CONTROLF,HUND18;*117,PTCNELGN
.
          MATCH     "00000000",WBEFELGN
          GOTO      GELW0100 IF EQUAL
.
GELW9999  CALL      RELSLK00
          RETURN
+
.-------------------------------------------------------------
. Validate sex. Can only be (I)ndeter if age less than 90 days
. Returns:    EXIT  0 = Ok to continue
.                   1 = Error
.-------------------------------------------------------------
.
VLSEX000  MATCH     "I",PSEX
          GOTO      VLSEX900 IF NOT EQUAL
.
          MATCH     SP70,PBDATE
          GOTO      VLSEX900 IF EQUAL
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          MATCH     "00",CDAY
          GOTO      VLSEX900 IF EQUAL
.
          CALL      IBACLOCK
          IF        PCEASE=1
            MOVE      PDECDTE,AGEDATE            * Date of Death
          ELSE
            PACK      AGEDATE,CCC,CYY,CMM,CDD    * Today's date
          ENDIF
          REP       " 0",AGEDATE
          CALL      CALCAGE
          IF        PTCNHDPS=6
            IF        PSAGEDAY <= 365
              GOTO      VLSEX900
            ENDIF
          ELSE
            COMPARE   PSAGEDAY,NINTY
            GOTO      VLSEX900 IF NOT LESS
          ENDIF
.
          MOVE      "Invalid sex for age",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      VLSEX999
.
VLSEX900  MOVE      ZERO,EXIT
.                                                * age is greater than 90 days
VLSEX999  RETURN
.
.----------------------------------------------------------------------
. CHKDS000 Check if the sjog-standard summary screen emrweb0201004 
.          that was loaded before another screen discharged the patient 
.          is trying to clear the discharge date or status 
.-----------------------------------------------------------------------
CHKDS000  COMPARE   ONE,SJOGSUMD            * Post of sjog summary screen
          GOTO      CHKDS800 IF NOT EQUAL  
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1                * Read emr visit
          BRANCH    OVRCD,CHKDS800
.
          MATCH     Z70,EMVIS024            * Departure Date
          IF        @EQUAL
            MATCH     Z70,EMVIS025          * Departure Time
            IF        @EQUAL
              MATCH     Z70,EMVIS026        * Departure Status
              GOTO      CHKDS800 IF EQUAL   * Continue no discharge fields
            ENDIF                           * received
          ENDIF
.
          IF        EMVISTAT <> 2 & EMVISTAT <> 3
            GOTO      CHKDS800                        * OK Not discharged
          ENDIF
.
          MATCH     SP70,EMVIS024            * Blank Departure Date
          GOTO      CHKDS900 IF EQUAL
          GOTO      CHKDS900 IF EOS
.
          MATCH     SP70,EMVIS025            * Blank Departure Time
          GOTO      CHKDS900 IF EQUAL
          GOTO      CHKDS900 IF EOS
.
          MATCH     SP70,EMVIS026            * Blank Departure Status
          GOTO      CHKDS900 IF EQUAL
          GOTO      CHKDS900 IF EOS
.
CHKDS800  MOVE      ZERO,EXIT
          GOTO      CHKDS999
.
CHKDS900  CALL      OPENHTML
          BRANCH    EXIT,CHKKEY98
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             " alert(#"This visit has been discharged":
                             " by another transaction.\nThe screen will now be":
                             " refreshed. \nChanges to discharge":
                             " details have not been retained.#");":
                             " if (window.name.substr(0,4)=='Hide' ) {":
                             " opener.history.go(0); ":
                             " self.close() } ":
                             " else {":
                             " history.go(-1)}":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          MOVE      ONE,EXIT
          GOTO      CHKDS999
.
CHKDS999  RETURN
+
.
.******************************************************************************
.*                                 CHEDW000                                   *
.* If sending EDWARD, check if any EDWARD  variables have changed             *
.******************************************************************************
.
CHEDW000  READ      CONTROLF,HUND25;*93,PTCNNSSI
          MATCH     SP70,PTCNNSSI          * no edward source system
          GOTO      CHEDW999 IF EQUAL
.
          MATCH     ZERO20,PTCNNSSI        * no edward source system
          GOTO      CHEDW999 IF EQUAL
.
          MATCH     ZEROUR,EMVIURNO        * Zero U/R visit
          GOTO      WREDW999 IF EQUAL
.
          MATCH     SP70,EMVIURNO          * Blank U/R visit
          GOTO      WREDW999 IF EQUAL
.
          MATCH     SAVXABRG,PMPXABRG      * Aboriginality
          IF        !@EQUAL
            MOVE      "5",PMEWTYPE
            MOVE      SAVXABRG,PMEWOLDV
            MOVE      PMPXABRG,PMEWNEWV
            CALL      WREDW000
          ENDIF
.
CHEDW999  RETURN
+
.******************************************************************************
.*                                 WREDW000                                   *
.* If any of the EDWWARD variables have changed, write/update pmsedwaf        *
.******************************************************************************
.
WREDW000  CLOSE     EOCLNKA3               * Close one file (eoclnkaf) to 
          OPEN      PMSEDWA2,"pmsedwaf"    * allow open of pmsedwaf
.
          MOVE      EMVIURNO,PMEWURNO
          CALL      IBACLOCK
          PACK      PMEWCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMEWCDAT
          CLOCK     TIME,PMEWCTIM
          PACK      PMEWCUID,USERID
          PACK      PMEWTYPE,PMEWTYPE,SP70
          PACK      PMEWSPAR,SP70,SP70
.
          PACK      KEY27,PMEWURNO,PMEWTYPE,PMEWCDAT,PMEWCTIM,SP70
          CALL      RAPMEDW2
          IF        OVRCD=1
            CALL      WRPMEDW2
          ELSE
            CALL      UPPMEDW2
          ENDIF
.
WREDW999  CLOSE     PMSEDWA2              * Close pmsedwaf and re open
          OPEN      EOCLNKA3,"eoclnkaf"   * eoclnkaf
.
          RETURN
.
.------------------------------------------------------------
. Patient Location Maintenance
.------------------------------------------------------------
LOCMGT00  MATCH     "1",EMCNHISA           * Location management not enabled
          GOTO      LOCMGT91 IF NOT EQUAL
.
          MATCH     "A",FORMACTN           * Add Formaction
          GOTO      LOCMGT10 IF EQUAL
.
          MATCH     "U",FORMACTN           * Update Formaction
          GOTO      LOCMGT20 IF EQUAL
.
          MATCH     "D",FORMACTN           * Delete Formaction
          GOTO      LOCMGT30 IF EQUAL
.
          GOTO      LOCMGT90
.
LOCMGT10  CALL      LOCMGA00               * Add New location
          BRANCH    EXIT,LOCMGT99
.
          MOVE      ZERO,EXIT
          GOTO      LOCMGT99
.
LOCMGT20  CALL      LOCMGU00               * Update location
          BRANCH    EXIT,LOCMGT99
.
          MOVE      ZERO,EXIT
          GOTO      LOCMGT99
.
LOCMGT30  CALL      LOCMGD00               * Delete location 
          BRANCH    EXIT,LOCMGT99
.
          MOVE      ZERO,EXIT
          GOTO      LOCMGT99
.
LOCMGT90  MOVE      "Invalid Form Action.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGT99
.
LOCMGT91  MOVE      "Location management is not activated.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGT99
.
LOCMGT99  RETURN
.
.-----------------------------------------------------------
. Location management - Add new location
.------------------------------------------------------------
LOCMGA00  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1               * Read ED visit
          BRANCH    OVRCD,LOCMGA90
.
          MATCH     SP70,LOCACODE          * Error blank location
          GOTO      LOCMGA91 IF EQUAL
.
          MATCH     SP70,LOCADATE          * Error blank date
          GOTO      LOCMGA91 IF EQUAL
.
          MATCH     SP70,LOCATIME          * Error blank time
          GOTO      LOCMGA91 IF EQUAL
.
          MATCH     EMVIDATE,LOCADATE      * Error movement date < arrival date
          GOTO      LOCMGA92 IF LESS
.
          MATCH     LOCADATE,EMVIDATE      * Error movement date = arrival date
          IF        @EQUAL
            MATCH     EMVITIME,LOCATIME    * Movement time < arrival time
            GOTO      LOCMGA92 IF LESS
          ENDIF
.
          IF        EMVISTAT = 2 | EMVISTAT = 3
            MATCH     LOCADATE,EMVIDDAT    * Error movement date > disch. date
            GOTO      LOCMGA93 IF LESS
.
            MATCH     LOCADATE,EMVIDDAT    * Error movement date = disch. date
            IF        @EQUAL
              MATCH     LOCATIME,EMVIDTIM  * Movement time > disch. time
              GOTO      LOCMGA93 IF LESS
            ENDIF
          ENDIF
.
          UNPACK    LOCATIME,HOUR,D1,MIN,D1,SEC
          PACK      D8,HOUR,MIN,SEC,SP70
.
          PACK      KEY22,ADMISSNO,LOCADATE,D8,SP70
          CALL      RDEMHIS1
          IF        OVRCD<>1
            GOTO      LOCMGA94             * History record exists for date/time
          ENDIF
.
          PACK      KEY22,ADMISSNO,LOCADATE,D8,Z70
          CALL      RSEMHIS1
          CALL      RPEMHIS1
          BRANCH    OVRCD,LOCMGA95
.         
          MATCH     ADMISSNO,EMHIVIS       * Same Visit Number
          GOTO      LOCMGA95 IF NOT EQUAL
.
          MOVE      ADMISSNO,EMHIVIS       * Visit n umber
          MOVE      LOCADATE,EMHIDAT       * Date
.
          UNPACK    LOCATIME,HOUR,D1,MIN,D1,SEC
          PACK      EMHITIM,HOUR,MIN,SEC,SP70        * Time hhmmss
.
          MOVE      "NEWMV",EMHIUPT        * NEWMV
          MOVE      LOCACODE,EMHILOC       * New location
.
          MOVE      USERID,EMHIEUS               * Web User Id Created
          PACK      EMHICDAT,CCC,CYY,CMM,CDD     * Date Created
          REP       " 0",EMHICDAT
          CLOCK     TIME,EMHICTIM                * Time Created
          MOVE      USERID,EMHICUID              * Web User Id Created
          MOVE      SP70,EMHIUDAT                * Date Updated
          MOVE      SP70,EMHIUTIM                * Time Update
          MOVE      SP70,EMHIUUID                * Web User Id Updated
          MOVE      SP70,EMHISPA
.
          PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
          CALL      RAEMHIS1
          IF        OVRCD<>1
            GOTO      LOCMGA94            * History record exists for date/time
          ENDIF
.
          CALL      WREMHIS1              * Write new movement history record
.
. Update location for all history records up to the next location change
.
LOCMGA50  CALL      RKEMHIS1
          BRANCH    OVRCD,LOCMGA60
.
          MATCH     ADMISSNO,EMHIVIS       * Same Visit Number
          GOTO      LOCMGA60 IF NOT EQUAL
.
          MATCH     "NEWMV",EMHIUPT        * New move location update type
          GOTO      LOCMGA60 IF EQUAL
.
          MATCH     "MOVEL",EMHIUPT        * Move location update type
          GOTO      LOCMGA60 IF EQUAL
.
          MATCH     SP70,EMHILOC           * Location blank
          GOTO      LOCMGA60 IF EQUAL
.
          MOVE      LOCACODE,EMHILOC       * New location
          CALL      UPEMHIS1             
          GOTO      LOCMGA50
.
. Update ED visit current location if last location changed
.
LOCMGA60  COMPARE   ONE,EMVISTAT            * Current ED visit
          GOTO      LOCMGA80 IF NOT EQUAL
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
          CALL      RPEMHIS1                * find last location code
          BRANCH    OVRCD,LOCMGA80
.
          MATCH     ADMISSNO,EMHIVIS        * Same Visit Number
          GOTO      LOCMGA80 IF NOT EQUAL
.
          MATCH     SP70,EMHILOC            * Exit blank location
          GOTO      LOCMGA80 IF EQUAL
.
          MATCH     EMVILOCN,EMHILOC
          IF        !@EQUAL
            PACK      KEY8,ADMISSNO,SP70
            CALL      RDEMVIS1              * Read ED visit
            IF        OVRCD=0
              MOVE     EMHILOC,EMVILOCN    * Update current location
              CALL     UPEMVIS1
            ENDIF
          ENDIF
.
LOCMGA80  CALL      WEDV0000                     * EDWARD visit alteration
.
          MOVE      ZERO,EXIT
          GOTO      LOCMGA99
.
LOCMGA90  MOVE      "Can't find patient Visit Details.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGA99
.
LOCMGA91  MOVE      "Patient location date/time are mandatory fields.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGA99
.
LOCMGA92  CLEAR     WEBTITLE
          APPEND    "Movement date/time can't be prior to the ",WEBTITLE
          APPEND    "arrival date/time.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGA99
.
LOCMGA93  CLEAR     WEBTITLE
          APPEND    "Movement date/time can't be after the ",WEBTITLE
          APPEND    "discharge date/time.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGA99
.
LOCMGA94  CLEAR     WEBTITLE
          APPEND    "History record already exists for this movement ",WEBTITLE
          APPEND    "date/time.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGA99
.
LOCMGA95  MOVE      "Can't find visit history details.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGA99
.
LOCMGA99  RETURN
.
.-----------------------------------------------------------
. Location management - Update location
.------------------------------------------------------------
LOCMGU00  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1                * Read ED visit
          BRANCH    OVRCD,LOCMGU90
.
          MATCH     SP70,LOCADATE           * Error blank date
          GOTO      LOCMGU95 IF EQUAL
.
          MATCH     SP70,LOCATIME           * Error blank time
          GOTO      LOCMGU95 IF EQUAL
.
          MATCH     SP70,NLOCACOD           * Error blank new location
          GOTO      LOCMGU95 IF EQUAL
.
          MATCH     SP70,NLOCADAT           * Error blank new date
          GOTO      LOCMGU95 IF EQUAL
.
          MATCH     SP70,NLOCATIM           * Error blank new time
          GOTO      LOCMGU95 IF EQUAL
.
          MATCH     EMVIDATE,NLOCADAT       * Error new move date < arrival date
          GOTO      LOCMGU92 IF LESS
.
          MATCH     NLOCADAT,EMVIDATE       * Error new move date = arrival date
          IF        @EQUAL
            MATCH     EMVITIME,NLOCATIM     * New movement time < arrival time
            GOTO      LOCMGU92 IF LESS
          ENDIF
.
          IF        EMVISTAT = 2 | EMVISTAT = 3
            MATCH     NLOCADAT,EMVIDDAT     * Error new move date > disch. date
            GOTO      LOCMGU93 IF LESS
.
            MATCH     NLOCADAT,EMVIDDAT     * Error new move date = disch. date
            IF        @EQUAL
              MATCH     NLOCATIM,EMVIDTIM   * New movement time > disch. time
              GOTO      LOCMGU93 IF LESS
            ENDIF
          ENDIF
.
          UNPACK    NLOCATIM,HOUR,D1,MIN,D1,SEC
          PACK      D8,HOUR,MIN,SEC,SP70
.
          PACK      KEY22,ADMISSNO,NLOCADAT,D8,SP70
          CALL      RDEMHIS1
          IF        OVRCD<>1
            MATCH     "NEWMV",EMHIUPT      * Allow update on new movement
            GOTO      LOCMGU20 IF EQUAL
.
            MATCH     "MOVEL",EMHIUPT      * Allow update of movement 
            GOTO      LOCMGU20 IF EQUAL
.
            GOTO      LOCMGU94             * New history record exists for 
          ENDIF                            * date and time
.
LOCMGU20  UNPACK    LOCATIME,HOUR,D1,MIN,D1,SEC
          PACK      D8,HOUR,MIN,SEC,SP70
.
          PACK      KEY22,ADMISSNO,LOCADATE,D8,SP70
          CALL      RDEMHIS1                * Read ED location history
          BRANCH    OVRCD,LOCMGU91
.
          CALL      DEEMHIS1
.
          MOVE      FOUR,AUDTTYPE
          MOVE      "DELTL",EMHIUPT         * Delete location
          CALL      WAEMHI00                * Write delete audit
.
. Find the previous location ready for update of future records
.
          MOVE      SP70,NEWLOCAC           * Clear New location
          PACK      KEY22,ADMISSNO,LOCADATE,D8,Z70
          CALL      RSEMHIS1
          CALL      RPEMHIS1                * Update location code
          BRANCH    OVRCD,LOCMGU91
.
          MATCH     ADMISSNO,EMHIVIS        * Same Visit Number
          GOTO      LOCMGU91 IF NOT EQUAL
.
          MOVE      EMHILOC,NEWLOCAC        * New location code
.
. Update the location for all history records up to the next location change
.
LOCMGU30  PACK      KEY22,ADMISSNO,LOCADATE,D8,SP70
          CALL      RSEMHIS1
LOCMGU40  CALL      RKEMHIS1                * Update location code
          BRANCH    OVRCD,LOCMGU50
.
          MATCH     ADMISSNO,EMHIVIS        * Same Visit Number
          GOTO      LOCMGU50 IF NOT EQUAL
.
          MATCH     "NEWMV",EMHIUPT         * New move location update type
          GOTO      LOCMGU50 IF EQUAL
.
          MATCH     "MOVEL",EMHIUPT         * Move location update type
          GOTO      LOCMGU50 IF EQUAL
.
          MATCH     SP70,EMHILOC            * Location blank
          GOTO      LOCMGU50 IF EQUAL
.
          MOVE      NEWLOCAC,EMHILOC        * New location
          CALL      UPEMHIS1
          GOTO      LOCMGU40
.
. Write new location and Update the location for all history records up to
. the next location change
.
LOCMGU50  UNPACK    NLOCATIM,HOUR,D1,MIN,D1,SEC
          PACK      D8,HOUR,MIN,SEC,SP70
.
          PACK      KEY22,ADMISSNO,NLOCADAT,D8,Z70
          CALL      RSEMHIS1
          CALL      RPEMHIS1
          BRANCH    OVRCD,LOCMGU91
.
          MATCH     ADMISSNO,EMHIVIS       * Same Visit Number
          GOTO      LOCMGU91 IF NOT EQUAL
.
          MOVE      ADMISSNO,EMHIVIS       * Visit n umber
          MOVE      NLOCADAT,EMHIDAT       * Date
.
          UNPACK    NLOCATIM,HOUR,D1,MIN,D1,SEC
          PACK      EMHITIM,HOUR,MIN,SEC,SP70        * Time hhmmss
.
          MOVE      "NEWMV",EMHIUPT        * NEWMV
          MOVE      NLOCACOD,EMHILOC       * New location
.
          MOVE      USERID,EMHIEUS               * Web User Id Created
          PACK      EMHICDAT,CCC,CYY,CMM,CDD     * Date Created
          REP       " 0",EMHICDAT
          CLOCK     TIME,EMHICTIM                * Time Created
          MOVE      USERID,EMHICUID              * Web User Id Created
          MOVE      SP70,EMHIUDAT                * Date Updated
          MOVE      SP70,EMHIUTIM                * Time Update
          MOVE      SP70,EMHIUUID                * Web User Id Updated
          MOVE      SP70,EMHISPA
.
          PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
          CALL      RAEMHIS1
          IF        OVRCD=1
            CALL      WREMHIS1            * write New History record exists
          ENDIF                          
.
. Update location for all history records up to the next location change
.
LOCMGU60  CALL      RKEMHIS1
          BRANCH    OVRCD,LOCMGU70
.
          MATCH     ADMISSNO,EMHIVIS       * Same Visit Number
          GOTO      LOCMGU70 IF NOT EQUAL
.
          MATCH     "NEWMV",EMHIUPT        * New move location update type
          GOTO      LOCMGU70 IF EQUAL
.
          MATCH     "MOVEL",EMHIUPT        * Move location update type
          GOTO      LOCMGU70 IF EQUAL
.
          MATCH     SP70,EMHILOC            * Location blank
          GOTO      LOCMGU70 IF EQUAL
.
          MOVE      NLOCACOD,EMHILOC       * New location
          CALL      UPEMHIS1
          GOTO      LOCMGU60
.
. Update ED visit current location if last location changed
.
LOCMGU70  COMPARE   ONE,EMVISTAT            * Current ED visit
          GOTO      LOCMGU80 IF NOT EQUAL
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
          CALL      RPEMHIS1                * find last location code
          BRANCH    OVRCD,LOCMGU80
.
          MATCH     ADMISSNO,EMHIVIS        * Same Visit Number
          GOTO      LOCMGU80 IF NOT EQUAL
.
          MATCH     SP70,EMHILOC            * Exit blank location
          GOTO      LOCMGU80 IF EQUAL
.
          MATCH     EMVILOCN,EMHILOC
          IF        !@EQUAL
            PACK      KEY8,ADMISSNO,SP70
            CALL      RDEMVIS1              * Read ED visit
            IF        OVRCD=0
              MOVE     EMHILOC,EMVILOCN    * Update current location
              CALL     UPEMVIS1
            ENDIF
          ENDIF
.
LOCMGU80  CALL      WEDV0000                     * EDWARD visit alteration
.
          MOVE      ZERO,EXIT
          GOTO      LOCMGU99
.
LOCMGU90  MOVE      "Can't find patient Visit Details.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGU99
.
LOCMGU91  MOVE      "Can't find visit history details.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGU99
.
LOCMGU92  CLEAR     WEBTITLE
          APPEND    "Movement date/time can't be prior to the ",WEBTITLE
          APPEND    "arrival date/time.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGU99
.
LOCMGU93  CLEAR     WEBTITLE
          APPEND    "Movement date/time can't be after the ",WEBTITLE
          APPEND    "discharge date/time.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGU99
.
LOCMGU94  CLEAR     WEBTITLE
          APPEND    "History record already exists for this movement ",WEBTITLE
          APPEND    "date/time.",WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGU99
.
LOCMGU95  MOVE      "Patient location date/time are mandatory fields.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGA99
.
LOCMGU99  RETURN
.
.-----------------------------------------------------------
. Location management - Delete location
.------------------------------------------------------------
LOCMGD00  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1                * Read ED visit
          BRANCH    OVRCD,LOCMGD90
.
          MATCH     SP70,LOCADATE          * Error blank date
          GOTO      LOCMGD92 IF EQUAL
.
          MATCH     SP70,LOCATIME          * Error blank time
          GOTO      LOCMGD92 IF EQUAL
.
          UNPACK    LOCATIME,HOUR,D1,MIN,D1,SEC
          PACK      D8,HOUR,MIN,SEC,SP70
.
          PACK      KEY22,ADMISSNO,LOCADATE,D8,SP70
          CALL      RDEMHIS1                * Read ED location history
          BRANCH    OVRCD,LOCMGD91
.
          CALL      DEEMHIS1
.
          MOVE      FOUR,AUDTTYPE
          MOVE      "DELTL",EMHIUPT         * Delete location
          CALL      WAEMHI00                * Write delete audit
.
. Find the previous location ready for update of future records
.
          MOVE      SP70,NEWLOCAC           * Clear New location
          PACK      KEY22,ADMISSNO,LOCADATE,D8,Z70
          CALL      RSEMHIS1
          CALL      RPEMHIS1                * Update location code
          BRANCH    OVRCD,LOCMGD40
.
          MATCH     ADMISSNO,EMHIVIS        * Same Visit Number
          GOTO      LOCMGD40 IF NOT EQUAL
.
          MOVE      EMHILOC,NEWLOCAC        * New location code
.
. Update the location for all history records up to the next location change
.
LOCMGD40  PACK      KEY22,ADMISSNO,LOCADATE,D8,SP70
          CALL      RSEMHIS1
LOCMGD50  CALL      RKEMHIS1                * Update location code
          BRANCH    OVRCD,LOCMGD60
.
          MATCH     ADMISSNO,EMHIVIS        * Same Visit Number
          GOTO      LOCMGD60 IF NOT EQUAL
.
          MATCH     "NEWMV",EMHIUPT         * New move location update type
          GOTO      LOCMGD60 IF EQUAL
.
          MATCH     "MOVEL",EMHIUPT         * Move location update type
          GOTO      LOCMGD60 IF EQUAL
.
          MATCH     SP70,EMHILOC            * Location blank
          GOTO      LOCMGD60 IF EQUAL
.
          MOVE      NEWLOCAC,EMHILOC        * New location
          CALL      UPEMHIS1
          GOTO      LOCMGD50
.
. Update ED visit current location if last location changed
.
LOCMGD60  COMPARE   ONE,EMVISTAT            * Current ED visit
          GOTO      LOCMGD80 IF NOT EQUAL
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
          CALL      RPEMHIS1                * find last location code
          BRANCH    OVRCD,LOCMGD80
.
          MATCH     ADMISSNO,EMHIVIS        * Same Visit Number
          GOTO      LOCMGD80 IF NOT EQUAL
.
          MATCH     SP70,EMHILOC            * Exit blank location
          GOTO      LOCMGD80 IF EQUAL
.
          MATCH     EMVILOCN,EMHILOC 
          IF        !@EQUAL
            PACK      KEY8,ADMISSNO,SP70
            CALL      RDEMVIS1              * Read ED visit
            IF        OVRCD=0
              MOVE     EMHILOC,EMVILOCN    * Update current location
              CALL     UPEMVIS1
            ENDIF
          ENDIF
.
LOCMGD80  CALL      WEDV0000                     * EDWARD visit alteration
.
          MOVE      ZERO,EXIT
          GOTO      LOCMGD99
.
LOCMGD90  MOVE      "Can't find patient Visit Details.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGD99
.
LOCMGD91  MOVE      "Can't find visit history details.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGD99
.
LOCMGD92  MOVE      "Patient location date/time are mandatory fields.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      LOCMGD99
.
LOCMGD99  RETURN
.
.------------------------------------------------------------
. Update Presenting Complaint Additional Information
.-----------------------------------------------------------
UPDPRI00  CALL      XMLHED00
          BRANCH    EXIT,UPDPRI99
.
UPDPRI20  CALL      UPDKEY00
          BRANCH    EXIT,UPDPRI91
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,UPDPRI90
.
          MATCH     SP70,WEBUSEID
          IF        !@EQUAL
            UNPACK    UPDATEKY,ADMISSNO,DIM8,DIM6
            PACK      UPDATEKY,ADMISSNO,DIM8,DIM6,WEBUSEID,SP70
          ENDIF
.
          CALL      UPVCM000
.
          MOVE      "PRADD",UPDTTYPE      * Write ED history
          CALL      WRTHIS00
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;KEY22;                   * Return History Key
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      UPDPRI98
.
UPDPRI90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      UPDPRI98
.
UPDPRI91  PACK      KEY14,ADMISSNO,ZERO,TWO,THREE,SP1,SP1,ONE,SP70
          CALL      RDVSCMT1
          BRANCH    OVRCD,UPDPRI97
.
          UNPACK    VSCTUKEY,KEY14
          PACK      VSCTUKEY,KEY14,SP70
          CALL      UPVSCMT1
.
UPDPRI97  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Updated by another user.":
                             "</RETURN_VALUE>"

UPDPRI98  CALL      XMLEND00
UPDPRI99  CLOSE     VSCTTFIL,DELETE    * Delete temp file created by CLRVCM00
          RETURN
.
.
.-----------------------------------------------------------
.         Includes
.------------------------------------------------------------
.
          INC       IBAWEBCD    
.
          INC       AAECHRG
          INC       BEDBDVCD
          INC       CALCAGE
          INC       CLACCAUD                    * Clear ACC Audit file variable
          INC       CLPATRE1
          INC       CLEMRVIS                * Clear emrvisaf vars
          INC       CLVISCMT                * Clear viscmtaf vars
          INC       CLEMRETS                * Clear emrthsaf vars
          INC       CLNHIMAS
          INC       CLMRTHIS
          INC       CLMRTMAS
          INC       CLPATDSC
          INC       CLPATMAS
          INC       CLPMSPAY
          INC       CLPMSPX2
          INC       CLPMSOEC
          INC       CLPMSVX1
          INC       CLPMSRES
          INC       CLVISPAY
          INC       CLVISXDC
          INC       CLWEBOEC
          INC       CLWEBOES
          INC       CLWEBELF
          INC       DAYOFWEK    
          INC       DGCLICRM
          INC       DGCLICAC
          INC       DGCLICAE
          INC       DGCLICCE
          INC       DGCLICDI
          INC       DGCLICEC
          INC       DGCLICUD
          INC       DGCLICUP                                           *C-90207
          INC       EMRCLITM
          INC       EMRCHMAN
          INC       EMRCOMMN       * compensible claim not yet modified for web
          INC       EMRDCMTX
          INC       EMRVDGTM
          INC       EMRVISTM
          INC       EMRVPRTM
          INC       EXPPAYCD
          INC       MRTVISCD
          INC       NAMSTRCD
          INC       NHOSPDAY
          INC       PATCOMN2
          INC       PATDOCCD                * For doctor name formatting
          INC       PATDOCTM
          INC       PATDPATH                                          *I-250985
          INC       PATMASTM
          INC       PATMSXTM
          INC       PATIPERH
          INC       PATVADCK               * Transfer source validation
          INC       PERRESAC
          INC       PMSEXTTM
          INC       PMSHCPTM
          INC       PMSHCGTM
          INC       PMSPX2TM
          INC       RSHWEBCD
          INC       UPDUR
          INC       VALURNMP    
          INC       VISCMTCD
          INC       WEBEMRCM     
          INC       WEBDATCD    
          INC       WEBPTMAS
          INC       DEATHPOL
          INC       CLPMSEXT
          INC       CLPMSCEX
          INC       CALCBMIN
          INC       CLPATVIS
          INC       CLPATATR
          INC       CLPMSDAU
          INC       PATATRTM
          INC       PMSCEXTM
          INC       VISCODTM
          INC       PATHSPTM
          INC       DTTMADDD
          INC       DEATHAUD
          INC       MEHDISTM
          INC       MHAUDVIS
          INC       MEHVISTM
          INC       MEHLEGTM
          INC       MHAUDDSC
          INC       MEHCLDSC
          INC       MEHHLSTM
          INC       PATMISTM
          INC       CLALLREF
          INC       CLEMRHIS
          INC       CLPATMIS                * Clear Patient Admission details
          INC       CLMEHDIS                * Clear MH Discharge details
          INC       EMRDRCHR
          INC       VISXDCTM
          INC       CLEMRDLA
.
          INC       AAEDE1IO/INC
          INC       AAEDEBIO/INC
          INC       AAEDI1IO/INC
          INC       AAEDTRIO/INC
          INC       ACCAUDIO/INC
          INC       ALLREFIO/INC
          INC       ALLTMPIO/INC
          INC       APSMASIO/INC
          INC       BOKRC1IO/INC
          INC       BOKRX1IO/INC
          INC       EOCLNKIO/INC
          INC       EOCREFIO/INC
          INC       CCIEX7IO/INC
          INC       COMDEPIO/INC
          INC       DISMASIO/INC
          INC       DISPATIO/INC
          INC       DISPTLIO/INC
          INC       EMRCHAIO/INC
          INC       EMRCLIIO/INC
          INC       EMRDAYIO/INC
          INC       EMRDCMIO/INC            * Diagnosis comment file
          INC       EMRDLAIO/INC
          INC       EMRDOCIO/INC
          INC       EMREXPIO/INC            * Emergency expected patients table
          INC       EMRGRCIO/INC
          INC       EMRHISIO/INC
          INC       EMRICDIO/INC
          INC       EMRINCIO/INC            * Incomplete visit table
          INC       EMRISMIO/INC            * Incomplete visit summary table
          INC       EMRINVIO/INC
          INC       EMRKEDIO/INC
          INC       EMRLOCIO/INC
          INC       EMRLPCIO/INC
          INC       EMRMTXIO/INC
          INC       EMRPROIO/INC
          INC       EMRSECIO/INC
          INC       EMRSITIO/INC
          INC       EMRTRFIO/INC
          INC       EMRUNKIO/INC
          INC       EMRUTYIO/INC
          INC       EMRVCDIO/INC
          INC       EMRVDGIO/INC
          INC       EMRVISIO/INC
          INC       EMRVPRIO/INC
          INC       EMRWFMIO/INC
          INC       IBAPOLIO/INC
          INC       IBAPOSIO/INC            * Postcode file          
          INC       MRTMASIO/INC 
          INC       MRTVISIO/INC
          INC       MRTHISIO/INC
          INC       MRTMOVIO/INC
          INC       NHIETHIO/INC
          INC       NHIMASIO/INC
          INC       OBSMDTIO/INC            * Patient Medical Notes
          INC       OBSMTXIO/INC            * Patient Medical Notes free text
          INC       OBSDETIO/INC
          INC       OPRNURIO/INC            * For Nurse details
          INC       OUTBOAIO/INC
          INC       OUTSITIO/INC
          INC       PATAK1IO/INC
          INC       PATALRIO/INC
          INC       PATAM1IO/INC
          INC       PATCFAIO/INC
          INC       PATCMCIO/INC
          INC       PMSUCHIO/INC
          INC       PMSUCDIO/INC
          INC       EMRECHIO/INC
          INC       EMRECLIO/INC
.
          INC       PATDO1IO/INC
          INC       PATDSCIO/INC
          INC       PATECDIO/INC
          INC       PATEORIO/INC
          INC       PATFN1IO/INC
          INC       PATONHIO/INC
          INC       PATGSRIO/INC
          INC       PATICDIO/INC
          INC       PATICOIO/INC
          INC       PATIN1IO/INC
          INC       PATINVIO/INC
          INC       PATIPEIO/INC
          INC       PATITMIO/INC
          INC       PRIITMIO/INC
          INC       PATLOCIO/INC
          INC       PATMA1IO/INC
          INC       PMSADWIO/INC
          INC       PMSOECIO/INC
          INC       PMSOESIO/INC
          INC       PMSELFIO/INC
          INC       PMSDAUIO/INC
          INC       PMSBBDIO/INC
          INC       PMSEPBIO/INC
          INC       PMSRESIO/INC
          INC       PATFX1IO/INC
          INC       PATFHIIO/INC
          INC       PATMI1IO/INC
          INC       PATMRGIO/INC
          INC       PATNIDIO/INC
          INC       PATPA1IO/INC
          INC       PATPCPIO/INC
          INC       PATPR1IO/INC
          INC       PATRE1IO/INC
          INC       PATTRNIO/INC
          INC       PMSUPDIO/INC
          INC       PATURAIO/INC
          INC       PATVADIO/INC
          INC       PATVISIO/INC
          INC       PATWC1IO/INC
          INC       PATWMAIO/INC
          INC       PATWR1IO/INC
          INC       PATWVEIO/INC
          INC       PATATRIO/INC
          INC       PMSAIDIO/INC
          INC       PMSBRQIO/INC
          INC       PMSCEXIO/INC
          INC       PMSEDWIO/INC
          INC       PMSPHSIO/INC
          INC       PMSHCPIO/INC
          INC       PMSCAUIO/INC
          INC       PMSALAIO/INC
          INC       PMSALNIO/INC
          INC       PMSCURIO/INC            * Current Patient File
          INC       PATCRCIO/INC
          INC       PMSEXTIO/INC
          INC       PMSHCGIO/INC
.          INC       PMSIPLIO/INC
          INC       PMSMDTIO/INC            * Patient Notes
          INC       PMSMTIIO/INC            * Misc.Items and Theatre Charges
          INC       PMSMORIO/INC
          INC       PMSMTXIO/INC            * Patient Notes free text
          INC       PMSOOSIO/INC
          INC       PMSPX2IO/INC
          INC       PMSTLEIO/INC
          INC       PMSRELIO/INC
          INC       PMSPAYIO/INC
          INC       PMSVX1IO/INC            * Visit Extension File
          INC       PMSWX1IO/INC
          INC       PMSCCDIO/INC            * Concession Card Details
.
          INC       VISCMTIO/INC
          INC       VISXDCIO/INC
          INC       PATHOSIO/INC                                      *I-250985
          INC       PATHSPIO/INC
          INC       MRTLOCIO/INC
          INC       MRTRQHIO/INC
          INC       MRTRQDIO/INC
          INC       WATESPIO/INC
          INC       VISCODIO/INC
          INC       VISMDTIO/INC
          INC       VISMTXIO/INC
          INC       VISPAYIO/INC
          INC       PATDTHIO/INC
          INC       MEHVI1IO/INC            * MH Visit
          INC       MEHDS1IO/INC            * MH Discharge Details
          INC       MEHHLSIO/INC            * MH Legal Status Header
          INC       MEHLEGIO/INC            * MH Legal Status History
          INC       MEHCJAIO/INC            * MH CJA Status History
          INC       MEHDLSIO/INC            * MH Legal Status Detail
          INC       ALLCASIO/INC            * HCP Case Team Details
          INC       ALLCTMIO/INC            * HCP Case Team Member Details
          INC       PATDGWIO/INC            * DRG Description and Weightings
          INC       PATASFIO/INC            * Special Funding Arrangement Codes
          INC       PATDADIO/INC            * Patient Transfer Destination
          INC       PMSVMTIO/INC
          INC       OBSPCOIO/INC
          INC       WEBOECIO/INC
          INC       WEBOESIO/INC
          INC       WEBELFIO/INC
          INC       TFILENAM
.          INC       PMSIPLCD
          INC       PRFAINSR                * Default PRFA based on claim code
.
          INC       ABFAEINV
          INC       ABFAECCL
          INC       CHKWCCLM           * Check multiple Workers Comp claims
          INC       DISPVISN           * Display Visit Notes
          INC       GENANVIS
.
          INC       EMRTHSIO/INC       * Emergency Telehealth Services
          INC       EMRTHSCD           * Emergency Telehealth Services routines
