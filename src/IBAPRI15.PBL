.******************************************************************************
.* System    :   Private Practice System                                      *
.* Program   :   IBAPRI15                                                     *
.* Desc      :   Future Action Report                                         *
.******************************************************************************
.* Date      :   16/10/91                                                     *
.* Author    :   Stephen Armstrong                                            *
.* Function  :   Prints a report of future actions on file for a given        *
.*               date range.  The report can be printed in date, surname      *
.*               and action code sequence.                                    *
.* Mods      :                                                                *
.******************************************************************************
.* V12.00.01 28/05/2025 Bella Turco            TSK 0955096                    *
.*           Alphanumeric changes                                             *
.* V11.04.01 27/11/2023 Thanh T                TSK 0916369                    *
.*           Recompiled for PRIFACFD changes                                  *
.******************************************************************************
.*        V11.00.01 13/07/2020  Ebon Clements  TSk 0894280                    *
.*                  Fixed Practice spelling - HEAD0000                        *
.*        V10.13.01 26/07/2018  J.Tan          TSK 0848506                    *
.*                  Changed PP Doctor from DIM6 to DIM10                      *
.*        V10.04.01 15/04/2014  J.Tan          CAR 261630                     *
.*                  Removed port number from temp file name                   *
.*        V10.02.01 11/05/2010  J.Tan         CAR 235356                      *
.*                  Fixed to exclude credit notes amount                      *
.*        V10.01.01 03/02/2011 Jill Parkinson CAR 233088                      *
.*                  Added pmsvx1af                                            *
.*        V9.11.01  03/04/2009  J.Tan         CAR 190941                      *
.*                  Added range of Medical Practice                           *
.*        V9.05.01  10/03/2006  Mike Laming   CAR 79281                       *
.*                  Increase PATFACT1 to KEY19 & add FACODE to key string     *
.*        V9.03.01  02/03/2004  Lina Vo    CAR 47921                          *
.*                  Removed use of PRIDBTFD & IO.                             *
.*        V5.08.01  28/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.07.02  12/10/1999  Jill Habasque                                 *
.*                  Mods to tempfile key                                      *
.*        V5.07.01  09/06/1999  Greg Horvat                                   *
.*                  Recompiled for PRIINVIO - Fixed problem with direct read  *
.*              V5.07.B02 30/11/1998  Davin                                   *
.*                        507 Changes (CPDATE)                                *
.*              V5.07.B01 05/11/1998  Jim Stathopoulos                        *
.*                        507 Changes                                         *
.******************************************************************************
.*               V6.00.01 07/10/92  Steve Armstrong                           *
.*                        Modified for alphanumeric debtor number             *
.******************************************************************************
.
.$$$$$
.         Future Action Report Program (IBAPRI15.PBL)
.         -------------------------------------------
.
.         ML0000
.         Open files and initialisation
.         prifactf
.         pridebtf
.         priinvof
.         patma1af
.         patcodes
.
.         ML0100
.         Get user option
.           If 0 selected, end program and exit
.           If 1 selected, proceed with print in date sequence
.           If 2 selected, proceed with print in surname sequence
.           If 3 selected, proceed with print in action code sequence
.
.         ML1000
.         Get starting date
.           If nothing entered, return to get next option
.
.         Get ending date
.           If nothing entered, return to get next option
.
.         Confirm printout
.           If (Y)es input, continue with print
.           If (N)o input, return to get start date
.           If (C)ancel input, return to get next option
.
.         ML2000
.         Process records to be printed
.
.           Create temporary file
.           Write valid records to temp file
.           Retrieve and print records from temp file using index appropriate
.             to report type.
.           Erase temporary file
.           Return to get next option
.
.         ML9999
.         Chain back to calling program
.
.$$$$$
.
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
.         Temporary File Definition
.         -------------------------
.
.         Filename : PRI15Axx.dat          (xx = port id)
.
FACTEMP1  IFILE SQL, FIXED=173, KEY="U1-8,9-28,29-36,37-38,39-46"
FACTEMP2  IFILE SQL, FIXED=173, KEY="U9-28,29-36,37-38,39-46,1-8"
FACTEMP3  IFILE SQL, FIXED=173, KEY="U76-78,1-8,9-28,29-36,37-38,39-46"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
XFDATE    DIM        8           8          1       Fut. Action Date (CCYYMMDD)
XNAME     DIM       20          20          9       Patient surname
XDEBT     DIM        8           8         29       Debtor Number
DXSCAN    DIM        2           2         37       Scan Flag
XADMNO    DIM        8           8         39       Admission Number
XFNAME    DIM       21          21         47       Formatted debtor name
XDDATE    DIM        8           8         68       Discharge Date (CCYYMMDD)
XCODE     DIM        3           3         76       Future action code
XOPBAL    FORM     8.2           6         79       Opening balance
XCURBAL   FORM     8.2           6         85       Current Balance
XPYMNTS   FORM     8.2           6         91       Payments
XCOMM     DIM       70          70         97       F.A. Comment
XMPRA     DIM        6           6        167       Medical Practice
.
.End of Record                            173
.
. Redefine form fields in key
. ---------------------------
.
XSCAN     FORM      2
.
.
. FILE DESCRIPTION INCLUDES
. -------------------------
.
          INC       PRIFACFD/INC                 * future action file
..          INC       PRIDBTFD/INC                 * debtors file
          INC       PRIINVFD/INC                 * invoice file
          INC       PRICONFD/INC                 * control file
.
          INC       PATMA1FD/INC                 * patient master file
          INC       PATCODFD/INC                 * codes file
          INC       PATMI1FD/INC                 * admission file
          INC       PMSVX1FD/INC                 * admission file
          INC       PATINVFD/INC                 * invoice file
          INC       PATDSCFD/INC                 * discharge file
          INC       PATFACFD/INC                 * PMI future action file
          INC       PATVISFD/INC                 * visit file
          INC       PRIPRAFD/INC                 * medical practice file
.
.
. PROGRAM CONSTANTS
. -----------------
.
CODEFA    INIT      "FA" 
CODESEQ   INIT      " (CODE SEQUENCE)"
DATESEQ   INIT      " (DATE SEQUENCE)" 
ERASE     INIT      "iserase "
FINISH    INIT      "Finish"
ISBUILD   INIT      "isbuild "
PIPE      INIT      "|" 
START     INIT      "Start"
SURNSEQ   INIT      "(SURNAME SEQUENCE)"
UKEY      INIT      " 173 U1-8,9-28,29-36,37-38,39-46 U9-28,29-36,37-38,39-46,1-8 U76-78,1-8,9-28,29-36,37-38,39-46"
ZED20     INIT      "zzzzzzzzzzzzzzzzzzzz"
ZED6      INIT      "zzzzzz"
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
AMTPAID   FORM      9.2
.
CMDLIN1   DIM       120
CMDLIN2   DIM       16
CODFLAG   FORM      1                            * flag for code/desc display
.                                                  for coption 3
CURRDAT   DIM       8                            * current date
.
DIM8      DIM       8
DISDATE   DIM       10                           * formatted discharge date
.
EDATE     DIM       8                            * end date
EPRAC     DIM       6                            * end medical practice code
.
FEDATE    DIM       10                           * formatted end date
FORM8     FORM      8
FSDATE    DIM       10                           * formatted start date
.
IPSTAT    DIM       7                            * inpatient status
.
MPRAC     DIM       6
OPTDESC   DIM       18                           * option description
.
SAVCODE   DIM       3                            * save FA code variable
SAVDEBT   DIM       8                            * save debtor variable
SAVSCAN   FORM      2                            * save scan variable
SDATE     DIM       8                            * start date
SHCOMM    DIM       47                           * short comment
SPRAC     DIM       6                            * start medical practice code
.
TEMPFILE  DIM       8
.
.
PRGID     INIT      "IBAPRI15"
PRGNAM    INIT      "Future Action Report"
VERSION   INIT      "V12.00.01"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000:        * date sequence
                            ML1000:        * surname sequence
                            ML1000         * action code sequence
.
ML1000    CALL      SDAT0000               * get start date
          BRANCH    EXIT,ML0100            * nothing input
.
          CALL      EDAT0000               * get end date
          BRANCH    EXIT,ML0100            * nothing input
.
          CALL      SPRA0000               * get starting Medical practice
          BRANCH    EXIT,ML1000            * exitchar input
.
          CALL      EPRA0000               * get ending Medical practice
          BRANCH    EXIT,ML1000            * exitchar input
.
          CALL      CONTQST                * ok to continue ?
          BRANCH    CEXIT,ML2000:          * Yes
                          ML1000:          * No
                          ML0100           * Cancel
.
ML2000    CALL      PROC0000               * process report
          BRANCH    EXIT,ML0100            * no F.A's on file
.
          CALL      PRIN0000               * surname sequence
          CALL      KILL0000
          GOTO      ML0100
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                     * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"prifactf";
          OPEN      PRIFACT2,"prifactf"          * future action file
.
..          DISPLAY   *P64:24,"pridebtf";
..          OPEN      PRIDEBT1,"pridebtf"          * debtor file
.
          DISPLAY   *P64:24,"priinvof";
          OPEN      PRIINVO3,"priinvof"          * invoice file
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"          * codes file
.
          DISPLAY   *P64:24,"patfactf";
          OPEN      PATFACT1,"patfactf"          * future action file
.
          DISPLAY   *P64:24,"patinvrf";
          OPEN      PATINVR3,"patinvrf"          * invoice file
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"          * discharge file
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA2,"patvisaf"          * visit file
.
          OPEN      PRIPRAC1,"pripracf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"          * control file
.
          READ      CONTROLF,THIRTY3;*181,PRCNPSYS
.
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CHIGHLT
          MOVE      TWO,PACFRMT
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1 - Date sequence                                 *
.*                        2 - Surname sequence                              *
.*                        3 - Future Action code sequence                   *
.****************************************************************************
.
OPTN0000  HLINE     *G37,2,60,80
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Date Sequence":
                    *P1:6,*V2LON,TWO,*HOFF," = Surname Sequence":
                    *P1:7,*V2LON,THREE,*HOFF," = Action Code Sequence"
.
OPTN1000  KEYIN     *P1:9,*EL,"Select option : ",*DV,UNDLN1:
                    *P17:9,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9500 IF EQUAL                 * exit
.
          BRANCH    COPTION,OPTN9000:
                            OPTN9000:
                            OPTN9000
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  LOAD      OPTDESC,COPTION,DATESEQ,SURNSEQ,CODESEQ
          DISPLAY   *P60:2,*V2LON,OPTDESC
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.****************************************************************************
.*                             SDAT0000                Called by: ML0000    *
.*                       get starting date                                  *
.****************************************************************************
.
SDAT0000  DISPLAY   *P1:11,*EF,"From Date :"
          MOVE      TEN1,CVERT
          MOVE      TEN3,CCOL
.
          CALL      IBACLOCK                     * default to current date
.
          PACK      CURRDAT,CCC,CYY,CMM,CDD
          REP       " 0",CURRDAT
          UNPACK    CURRDAT,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,SDAT0000
          PACK      SDATE,CCENT,CYEAR,CMON,CDAY
.
          MATCH     CURRDAT,SDATE                * date in past ?
          GOTO      SDAT1000 IF LESS             * yes
          GOTO      SDAT9999                     * no
.
SDAT1000  DISPLAY   *P1:24,*EL,"Warning: From date prior to current date.  ";
          CALL      HITENTER
.
SDAT9999  RETURN
+
.****************************************************************************
.*                             EDAT0000                Called by: ML0000    *
.*                          get ending date                                 *
.****************************************************************************
.
EDAT0000  DISPLAY   *P1:13,*EL,"To   Date :"
          MOVE      TEN3,CVERT
          MOVE      TEN3,CCOL
.
          UNPACK    CURRDAT,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,EDAT0000
          PACK      EDATE,CCENT,CYEAR,CMON,CDAY
.
          MATCH     SDATE,EDATE                  * start date > end date ?
          GOTO      EDAT2000 IF LESS             * yes
          GOTO      EDAT9999
.
EDAT2000  DISPLAY   *P1:24,*EL,*B,"Start date greater than end date.  ";
          CALL      HITENTER
          GOTO      EDAT0000
.
EDAT9999  RETURN
+
.**************************************************************************
.*                               SPRA0000              Called by: ML0000  *
.*                       input medical practice code                      *
.* Returns:          EXIT  0 = valid code input                           *
.*                         1 = exitchar input                             *
.**************************************************************************
SPRA0000  KEYIN     *P1:15,*EF,"From Medical Practice : ",*DV,UNDLN6:
                    *P25:15,*V2LON,MPRAC,*P25:15,*DV,MPRAC;
.
          CALL      CHKP0000                     * see what was entered
          BRANCH    EXIT,SPRA5000:               * nothing entered
                         SPRA4000:               * ? entered
                         SPRA9500:               * exitchar input
                         SPRA8000                * valid input
          GOTO      SPRA0000                     * invalid input
.
SPRA4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
.
SPRA4200  CALL      PRIPRADS                     * list codes on file
.
SPRA4500  KEYIN     *P1:24,*EL,"From Medical Practice : ",*DV,UNDLN6:
                    *P25:24,*V2LON,MPRAC,*P25:24,*DV,MPRAC;
.
          CALL      CHKP0000                     * see what was entered
          BRANCH    EXIT,SPRA4900:               * nothing entered
                         SPRA4200:               * ? entered
                         SPRA9400:               * exitchar input
                         SPRA7900                * valid input
          GOTO      SPRA4500                     * invalid input
.
SPRA4900  CALL      PUTSCR00                     * restore screen
SPRA5000  MOVE      SP6,SPRAC
          DISPLAY   *P25:15,*V2LON,START;
          GOTO      SPRA8500
.
SPRA7900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:15,*V2LON,MPRAC;
.
SPRA8000  MOVE      MPRAC,SPRAC
          DISPLAY   *P35:15,PRPRDESC;
.
SPRA8500  MOVE      ZERO,EXIT
          GOTO      SPRA9999
.
SPRA9400  CALL      FRESCR00
SPRA9500  MOVE      ONE,EXIT
.
SPRA9999  RETURN
+
.**************************************************************************
.*                               EPRA0000              Called by: ML0000  *
.*                       input medical practice code                      *
.* Returns:          EXIT  0 = valid code input                           *
.*                         1 = exitchar input                             *
.**************************************************************************
EPRA0000  KEYIN     *P1:17,*EF,"To   Medical Practice : ",*DV,UNDLN6:
                    *P25:17,*V2LON,MPRAC,*P25:17,*DV,MPRAC;
.
          CALL      CHKP0000                     * see what was entered
          BRANCH    EXIT,EPRA5000:               * nothing entered
                         EPRA4000:               * ? entered
                         EPRA9500:               * exitchar input
                         EPRA3000                * valid input
          GOTO      EPRA0000                     * invalid input
.
EPRA3000  MATCH     SPRAC,MPRAC                  * end prac < start prac ?
          GOTO      EPRA8000 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "To Practice must be greater than or = From Practice.    ";
          CALL      HITENTER
          GOTO      EPRA0000
.
EPRA4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
.
EPRA4200  CALL      PRIPRADS                     * list codes on file
.
EPRA4500  KEYIN     *P1:24,*EL,"To   Medical Practice : ",*DV,UNDLN6:
                    *P25:24,*V2LON,MPRAC,*P25:24,*DV,MPRAC;
.
          CALL      CHKP0000                     * see what was entered
          BRANCH    EXIT,EPRA4900:               * nothing entered
                         EPRA4200:               * ? entered
                         EPRA9400:               * exitchar input
                         EPRA6000                * valid input
          GOTO      EPRA4500                     * invalid input
.
EPRA4900  CALL      PUTSCR00                     * restore screen
EPRA5000  MOVE      ZED6,EPRAC
          DISPLAY   *P25:17,*V2LON,FINISH;
          GOTO      EPRA8500
.
EPRA6000  MATCH     SPRAC,MPRAC                  * end prac < start prac ?
          GOTO      EPRA7900 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "To Practice must be greater than or = From Practice.    ";
          CALL      HITENTER
          GOTO      EPRA4500
.
EPRA7900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:17,*V2LON,MPRAC;
.
EPRA8000  MOVE      MPRAC,EPRAC
          DISPLAY   *P35:17,PRPRDESC;
.
EPRA8500  MOVE      ZERO,EXIT
          GOTO      EPRA9999
.
EPRA9400  CALL      FRESCR00
EPRA9500  MOVE      ONE,EXIT
.
EPRA9999  RETURN
+
.**************************************************************************
.*                             CHKP0000                Called by: SPRA0000*
.*             see what was input for medical practice            EPRA0000*
.* Returns:           EXIT   0 = invalid input                            *
.*                           1 = nothing input                            *
.*                           2 = ? input                                  *
.*                           3 = exitchar input                           *
.*                           4 = valid input                              *
.**************************************************************************
CHKP0000  ENDSET     MPRAC
          APPEND     SP6,MPRAC
          RESET      MPRAC
.
          MATCH      SP6,MPRAC                    * anything entered ?
          GOTO       CHKP8000 IF EQUAL             * yes
.
          CMATCH     EXITCHAR,MPRAC               * exitchar input ?
          GOTO       CHKP9000 IF EQUAL             * yes
.
          CMATCH     QUEST,MPRAC                  * "?" input ?
          GOTO       CHKP8500 IF EQUAL             * yes
.
          MOVE       MPRAC,KEY6
          CALL       RDPRPR1
          COMPARE    ZERO,OVRCD                   * record on file ?
          GOTO       CHKP9500 IF EQUAL             * yes
.
          DISPLAY    *P1:24,*EL,*B,*V2LON,"Medical Practice not on file.    ";
          CALL       HITENTER
          MOVE       ZERO,EXIT
          GOTO       CHKP9999
.
CHKP8000  MOVE       ONE,EXIT
          GOTO       CHKP9999
.
CHKP8500  MOVE       TWO,EXIT
          GOTO       CHKP9999
.
CHKP9000  MOVE       THREE,EXIT
          GOTO       CHKP9999
.
CHKP9500  MOVE       FOUR,EXIT
.
CHKP9999  RETURN
+
.****************************************************************************
.*                             PROC0000                Called by: ML0000    *
.*                    process records for the report                        *
.*             print records if by date sequence, otherwise write           *
.*             them to the temp file                                        *
.****************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing: ";
.
          CALL      CREA0000                     * create temp file
.
.         Loop through Private Practice System Records
.
          MOVE      SP8,SAVDEBT
          MOVE      ZERO,SAVSCAN
          MOVE      SP20,KEY18
          CALL      RSPRFA2                      * position at start date
          CALL      RKPRFA2                      * read next record
          BRANCH    OVRCD,PROC9000               * no records on file
.
PROC0500  MATCH     SDATE,PRFADATE               * < start date ?
          GOTO      PROC3000 IF LESS             * yes
.
          MATCH     PRFADATE,EDATE               * > end date ?
          GOTO      PROC3000 IF LESS             * yes
.
          MATCH     SP70,SPRAC
          IF        !@EQUAL
            MATCH     SPRAC,PRFAMPRA
            GOTO      PROC3000 IF LESS
          ENDIF
.
          MATCH     SP70,EPRAC
          IF        !@EQUAL
            MATCH     PRFAMPRA,EPRAC             * past end medical practice?
            GOTO      PROC3000 IF LESS           * yes
          ENDIF
.
          DISPLAY   *P13:24,*EL,*V2LON,PRFADATE,SP1,PRFADEBT;
.
          MATCH     SAVDEBT,PRFADEBT             * same debtor still ?
          GOTO      PROC1000 IF NOT EQUAL        * no
.
          COMPARE   SAVSCAN,PRFASCAN             * same scan flag ?
          GOTO      PROC2000 IF EQUAL            * yes
.
PROC1000  COMPARE   ONE,PRFASCAN                 * PMI debtor ?
          IF        @EQUAL
             COMPARE   ONE,PRCNPSYS              * using patient system ?
             IF        @EQUAL
                CALL      PATF0000               * get any PMI future actions
             ENDIF
          ENDIF
          MOVE      PRFADEBT,SAVDEBT             * save latest debtor
          MOVE      PRFASCAN,SAVSCAN
.
.         Valid record found
.
PROC2000  CALL      GETD0000                     * get details from PP system
.
          PACK      KEY46,XFDATE,XNAME,XDEBT,XSCAN,XADMNO
          CALL      WRTEMP1                      * write record to temp file
PROC3000  CALL      RKPRFA2                      * read next record
          BRANCH    OVRCD,PROC8000               * end of file
.
          GOTO      PROC0500
.
.         See if any records found
.
PROC8000  MATCH     SP8,SAVDEBT
          GOTO      PROC9500 IF NOT EQUAL
.
PROC9000  DISPLAY   *P1:24,*EL,*B,"No future actions found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9500  MOVE      ZERO,EXIT
.
PROC9999  RETURN
+
.****************************************************************************
.*                             PATF0000                Called by:           *
.*                    get PMI future actions                                *
.****************************************************************************
.
PATF0000  MOVE      SAVDEBT,FORM8
          PACK      KEY24,SAVDEBT,ZED20
          CALL      RDSVISA2                     * position in file
PATF0500  CALL      RDPVISA2                     * read previous record
          BRANCH    OVRCD,PATF9999               * end of file
.
          MOVE      FORM8,KEY8                   * same debtor ?
          MATCH     KEY8,PVIURNO                 * same debtor ?
          GOTO      PATF9999 IF NOT EQUAL        * no - finish
.
          COMPARE   THREE,PVITYPE                * inpatient ?
          GOTO      PATF0500 IF NOT EQUAL        * no
.
.         Get the admission record
.
          MOVE      PVIBILL,AADMNO
          MOVE      AADMNO,KEY8
          CALL      RDMISS1                      * record on file ?
          BRANCH    OVRCD,PATF0500               * no
.
          COMPARE   FIVE,ASTAT                   * cancelled ?
          GOTO      PATF0500 IF EQUAL            * yes
.
.         Get all future actions for this admission
.
          PACK      KEY19,AADMNO,SP20                                  *C-79281
          CALL      RDSFACT1
PATF1000  CALL      RDKFACT1
          BRANCH    OVRCD,PATF0500               * end of file - get next visit
.
          MATCH     AADMNO,FADMNO                * same admission # ?
          GOTO      PATF0500 IF NOT EQUAL        * no
.
          MATCH     SDATE,FADATE                 * < start date ?
          GOTO      PATF1000 IF LESS             * yes
.
          MATCH     FADATE,EDATE                 * > end date ?
          GOTO      PATF0500 IF LESS             * yes
.         
          MOVE      "Unknown patient      ",XFNAME
          MOVE      "Unknown             ",XNAME
          MOVE      SAVDEBT,DIM8
          MOVE      DIM8,KEY8
          CALL      RDMAST1                      * read patient record
          BRANCH    OVRCD,PATF2000
.
          MOVE      PSNAME,XNAME
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,ANS
          PACK      PACGNAME,ANS,DOT
          MOVE      PTITL,PACTITLE
          CALL      PACNAME
.
          MOVE      PACFNAME,XFNAME
.
PATF2000  MOVE      SP8,DDATE
          MOVE      AADMNO,KEY8
          CALL      RDDSCH1                      * get discharge record
          MOVE      DDATE,XDDATE
          MOVE      FACODE,XCODE
.
          MOVE      FACOMM,XCOMM
.
.         Loop over the invoice file to get the dollar amounts
.
          MOVE        ZERO,XOPBAL
          MOVE        ZERO,XCURBAL
          MOVE        ZERO,XPYMNTS
.
          PACK        KEY16 WITH FADMNO,SP8
          CALL        RDSINV3
PATF3000  CALL        RDKINV3
          BRANCH      OVRCD,PATF4000
.
          MATCH       FADMNO,PINVADM
          GOTO        PATF4000 IF NOT EQUAL
.
          ADD         PINVAMT,XOPBAL
          ADD         PINVPATA,XPYMNTS
          ADD         PINVHFDA,XPYMNTS
          ADD         PINVOTHA,XPYMNTS
          ADD         PINVJOUR,XPYMNTS
          GOTO        PATF3000
.
.         Calculate the current amount outstanding
.
PATF4000  MOVE        XOPBAL,XCURBAL
          ADD         XPYMNTS,XCURBAL
.
          PACK      KEY46,FADATE,XNAME,SAVDEBT,SP1,ONE,PVIBILL
          CALL      WRTEMP1
.
          GOTO      PATF1000                     * get next admission record
.
PATF9999  RETURN
+
.****************************************************************************
.*                             PRIN0000                Called by: ML0000    *
.*                    print records from the temp file                      *
.*                    (surname sequence)                                    *
.****************************************************************************
.
PRIN0000  DISPLAY   *P1:24,*EL,"Printing: ";
          CALL      FPAG0000                     * initialise variables
.
          COMPARE   ONE,COPTION
          IF        @EQUAL
             PACK      KEY46,SP30,SP20
             CALL      RSTEMP1                   * position at start of file
          ELSE
             COMPARE   TWO,COPTION
             IF        @EQUAL
                PACK      KEY46,SP30,SP10
                CALL      RSTEMP2
             ELSE
                PACK      KEY49,SP30,SP20
                CALL      RSTEMP3
             ENDIF
          ENDIF
PRIN1000  COMPARE   ONE,COPTION
          IF        @EQUAL
             CALL      RKTEMP1                   * read next record
          ELSE
             COMPARE   TWO,COPTION
             IF        @EQUAL
                CALL      RKTEMP2
             ELSE
                CALL      RKTEMP3
             ENDIF
          ENDIF
          BRANCH    OVRCD,PRIN9500               * end of file
.
          COMPARE   FIFTY5,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
.         If printing by action code, then only print the action code and
.         description if a new page, or if the code changes
.
          COMPARE   THREE,COPTION
          IF        @EQUAL
             BRANCH    CODFLAG,PRIN3000          * flag set for new page
             MATCH     SAVCODE,XCODE
             IF        @EQUAL
                GOTO      PRIN3000
             ELSE
                MOVE      XCODE,SAVCODE
                MOVE      ONE,CODFLAG
             ENDIF
          ENDIF
.
PRIN3000  CALL      DISP0000                     * print record
          GOTO      PRIN1000
.
PRIN9500  PRINT     *N,*1,"*** End of Report ***"
          DISPLAY   *P50:24,*EL,*V2LON,"** Report Generated **";
.
PRIN9999  RETURN
+
.****************************************************************************
.*                             FPAG0000                Called by: PROC0000  *
.*                  set up for first page                         PRIN0000  *
.****************************************************************************
.
FPAG0000  MOVE      ZERO,CLNO                 * initialise variables
          MOVE      ZERO,CPAGENO
          MOVE      ONE,CNOUNDLN
          LOAD      CPHDROPT,COPTION,DATESEQ,SURNSEQ,CODESEQ
.
          UNPACK    SDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,FSDATE
          UNPACK    EDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,FEDATE
          CALL      IBACLOCK
          CALL      HEAD0000                     * print first page header
.
FPAG9999  RETURN
+
.****************************************************************************
.*                            GETD0000                 Called by: PROC0000  *
.*                get details of the future action record                   *
.****************************************************************************
.
GETD0000  UNPACK    PRFADATE,XCENT,XYEAR,XMON,XDAY
          PACK      XFDATE,XCENT,XYEAR,XMON,XDAY
          MOVE      PRFACOMM,XCOMM
          MOVE      PRFAMPRA,XMPRA
.
          MOVE      "Debtor not on file   ",PACFNAME
          MOVE      "Unknown patient     ",XNAME
          BRANCH    PRFASCAN,GETD0500
.
..          MOVE      PRFADEBT,KEY8
..          CALL      RDPRDB1                      * read debtor record
..          BRANCH    OVRCD,GETD1000               * not on file
.
..          MOVE      PRDBSNAM,XNAME
..          MOVE      PRDBSNAM,PACSNAME
..          MOVE      PRDBGNAM,ANS
..          PACK      PACGNAME,ANS,DOT
..          MOVE      PRDBTITL,PACTITLE
..          CALL      PACNAME
          GOTO      GETD1000
.
GETD0500  MOVE      PRFADEBT,DIM8
          MOVE      DIM8,KEY8
          CALL      RDMAST1                      * read patient record
          BRANCH    OVRCD,GETD1000
.
          MOVE      PSNAME,XNAME
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,ANS
          PACK      PACGNAME,ANS,DOT
          MOVE      PTITL,PACTITLE
          CALL      PACNAME
.
GETD1000  MOVE      PACFNAME,XFNAME
          MOVE      PRFADEBT,XDEBT
          MOVE      PRFASCAN,XSCAN
.
          MOVE      PRFAACTN,XCODE
.
.         Loop through the invoice file for records for this debtor
.
          MOVE      ZERO,XOPBAL
          MOVE      ZERO,XCURBAL
          MOVE      ZERO,XPYMNTS
          MOVE      ZERO,AMTPAID
.
          PACK      KEY18,PRFADEBT,PRFASCAN,SP8
          CALL      RSPRIN3                      * position in invoice file
GETD3000  CALL      RKPRIN3                      * read next record
          BRANCH    OVRCD,GETD4000
.
          MATCH     PRFADEBT,PRINDEBT            * same debtor ?
          GOTO      GETD4000 IF NOT EQUAL        * no
.
          COMPARE   PRFASCAN,PRINSCAN            * same scan flag ?
          GOTO      GETD4000 IF NOT EQUAL        * no
.
          ADD       PRINITOT,XOPBAL              * update totals
          ADD       PRINPAMT,XPYMNTS
          ADD       PRINHAMT,XPYMNTS
          ADD       PRINIAMT,XPYMNTS
          ADD       PRINMAMT,XPYMNTS
          ADD       PRINVAMT,XPYMNTS
          ADD       PRINOTHA,XPYMNTS
          ADD       PRINJAMT,XPYMNTS
          ADD       PRINCNTT,XPYMNTS
          ADD       PRINGSTJ,XPYMNTS
          GOTO      GETD3000
.
GETD4000  MOVE      XOPBAL,XCURBAL               * finalise current balance
          ADD       XPYMNTS,XCURBAL
.
          MOVE      SP8,XDDATE
          MOVE      SP8,XADMNO
.
GETD9999  RETURN
+
.****************************************************************************
.*                            DISP0000                 Called by: PROC0000  *
.*                valid record so display it                      PRIN0000  *
.****************************************************************************
.
DISP0000  MATCH     SP7,XADMNO
          IF        @EQUAL
             MOVE      SP7,IPSTAT
             MOVE      SP10,DISDATE
          ELSE
             MOVE      "INPATNT",IPSTAT
             UNPACK    XDDATE,CCENT,CYEAR,CMON,CDAY
             CALL      PACDATE
             MOVE      CPCDATE,DISDATE
          ENDIF
.
          UNPACK    XFDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P11:24,*EL,*V2LON,CPCDATE,SP1,XDEBT;
.
          MOVE      "Unknown Code",TDESC
          PACK      KEY5,CODEFA,XCODE
          CALL      RDCODE1
.
          MOVE      SP70,KEY20
          MOVE      XMPRA,KEY6
          CALL      RDPRPR1
          IF        OVRCD=0
            MOVE      "(",KEY1
            MOVE      ")",D1
            UNPACK    PRPRDESC,KEY18
            PACK      KEY20,KEY1,KEY18,D1,SP70
          ENDIF
.
          MOVE      SP1,ANS
          LOAD      ANS,XSCAN,ANSP
          COMPARE   ONE,COPTION
          IF        @EQUAL
             MOVE      XCOMM,SHCOMM
             PRINT     *1,PIPE,*2,CPCDATE,*12,PIPE,*14,XFNAME,*36,PIPE:
                       *38,ANS,XDEBT,*48,PIPE,*50,XADMNO,*59,PIPE,*61,TDESC:
                       *83,DISDATE,*94,XOPBAL,*107,XCURBAL:
                       *120,XPYMNTS,*132,PIPE,*N:
                       *1,PIPE,*12,PIPE,*14,KEY20:
                       *36,PIPE,*48,PIPE,*51,IPSTAT,*59,PIPE:
                       *61,SHCOMM,*132,PIPE
.
          ELSE
             COMPARE   TWO,COPTION
             IF        @EQUAL
             MOVE      XCOMM,SHCOMM
                PRINT     *1,PIPE,*3,XFNAME,*25,PIPE,*26,CPCDATE,*36,PIPE:
                          *38,ANS,XDEBT,*48,PIPE,XADMNO,*59,PIPE,*61,TDESC:
                          *83,DISDATE,*94,XOPBAL,*107,XCURBAL:
                          *120,XPYMNTS,*132,PIPE,*N:
                          *1,PIPE,*3,KEY20:
                          *25,PIPE,*36,PIPE,*48,PIPE,*51,IPSTAT:
                          *59,PIPE,*61,SHCOMM,*132,PIPE
             ELSE
                COMPARE   ZERO,CODFLAG           * no code/desc needed
                IF        @EQUAL
                   PRINT     *1,PIPE,*24,PIPE,*25,CPCDATE,*35,PIPE,*37,XFNAME:
                             *59,PIPE,*61,ANS,XDEBT,*71,PIPE,*73,XADMNO:
                             *82,PIPE,*83,DISDATE,*94,XOPBAL,*107,XCURBAL:
                             *120,XPYMNTS,*132,PIPE,*N:
                             *1,PIPE,*24,PIPE,*35,PIPE,*37,KEY20,*59,PIPE:
                             *71,PIPE,*74,IPSTAT,*82,PIPE,*84,XCOMM,*132,PIPE
                ELSE
                   PRINT     *1,PIPE,*3,XCODE,*24,PIPE,*25,CPCDATE,*35,PIPE:
                             *37,XFNAME,*59,PIPE,*61,ANS,XDEBT,*71,PIPE:
                             *73,XADMNO,*82,PIPE,*83,DISDATE,*94,XOPBAL:
                             *107,XCURBAL,*120,XPYMNTS,*132,PIPE,*N:
                             *1,PIPE,*3,TDESC,*24,PIPE,*35,PIPE,*37,KEY20:
                             *59,PIPE:
                             *71,PIPE,*74,IPSTAT,*82,PIPE,*84,XCOMM,*132,PIPE
                ENDIF
             ENDIF 
          ENDIF 
.  
          ADD       TWO,CLNO                     * increment line count 
          CALL      LINE0000                     * draw line
          MOVE      ZERO,CODFLAG
          MOVE      XCODE,SAVCODE
.
DISP9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PROC0000  *
.*                       print page heading                       PRIN0000  *
.*                                                                FPAG0000  *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          PRINT     *40,"FROM ",FSDATE,*57,"TO  ",FEDATE,*N:
                    *40,"From Medical Practice: ",SPRAC:
                    *70,"To : ",EPRAC,*N
.
          CALL      LINE0000                     * draw line across page
.
          COMPARE   ONE,COPTION
          IF        @EQUAL
             PRINT     *1,PIPE,*4,"Action",*12,PIPE,*14,"Patient Name",*36,PIPE:
                       *38,"Debtor ##",*48,PIPE,*51,"Adm No",*59,PIPE,*61:
                       "Action Description";
          ELSE
             COMPARE   TWO,COPTION
             IF     @EQUAL
                PRINT     *1,PIPE,*3,"Patient Name",*25,PIPE,*28,"Action":
                          *36,PIPE,*38,"Debtor ##",*48,PIPE,*51,"Adm No":
                          *59,PIPE,*61,"Action Description";
             ELSE
                PRINT     *1,PIPE,*3,"Action Code",*24,PIPE,*27,"Action":
                          *35,PIPE,*37,"Patient Name",*59,PIPE,*61,"Debtor ##":
                          *71,PIPE,*74,"Adm No";
             ENDIF
          ENDIF
.
          PRINT     *82,PIPE,*84,"Dsch Date",*93,PIPE:
                    *98,"Opening",*106,PIPE,*111,"Current":
                    *119,PIPE,*123,"Payments",*132,PIPE
          COMPARE   ONE,COPTION
          IF        @EQUAL
                PRINT     *1,PIPE,*5,"Date",*12,PIPE,*14,"(Medical Practice)":
                          *36,PIPE,*48,PIPE,*59,PIPE:
                          *61,"Comments",*82,PIPE;
          ELSE
             COMPARE   TWO,COPTION
             IF        @EQUAL
                PRINT     *1,PIPE,*3,"(Medical Practice)":
                          *25,PIPE,*29,"Date",*36,PIPE,*48,PIPE:
                          *59,PIPE,*61,"Comments",*82,PIPE;
             ELSE
                PRINT     *1,PIPE,*3,"Action Description",*24,PIPE,*28,"Date":
                          *35,PIPE,*37,"(Medical Practice)":
                          *59,PIPE,*71,PIPE,*82,PIPE,*84,"Comments";
             ENDIF
          ENDIF
.
          PRINT     *93,PIPE,*98,"Balance",*106,PIPE,*111,"Balance":
                    *119,PIPE,*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      TEN,CLNO                    * increment line count
          COMPARE   THREE,COPTION
          IF        @EQUAL
             MOVE      ONE,CODFLAG               * set code/desc flag for
          ENDIF
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: DISP0000  *
.*                      draw line across page                     HEAD0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
          ADD       ONE,CLNO
.
LINE9999  RETURN
+
.**************************************************************************
.*                              CREA0000               Called by: PROC0000*
.*             create a new temporary file                                *
.**************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          PACK      CMDLIN1,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLIN1,TASKID               * create temporary index file
.
          OPEN      FACTEMP1,TEMPFILE         * open temp index file
.
          COMPARE   TWO,COPTION
          IF        @EQUAL
             OPEN      FACTEMP2,TEMPFILE
          ELSE
             COMPARE   THREE,COPTION
             IF        @EQUAL
                OPEN      FACTEMP3,TEMPFILE
             ENDIF
          ENDIF
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: CREA0000  *
.*               close and erase the temporary file               PRIN0000  *
.****************************************************************************
.
KILL0000  CLOSE     FACTEMP1                     * close file
          CLOSE     FACTEMP2
          CLOSE     FACTEMP3
.
          PACK      CMDLIN2,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLIN2,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RSTEMP1   READ      FACTEMP1,KEY46;;
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    FACTEMP1;XFDATE,XNAME,XDEBT,DXSCAN,XADMNO:
                             XFNAME,XDDATE,XCODE,XOPBAL,XCURBAL,XPYMNTS:
                             XCOMM,XMPRA
          GOTO      OVERCOND IF OVER
          MOVE      DXSCAN,XSCAN
          RETURN
.
WRTEMP1   WRITE     FACTEMP1,KEY46;KEY46,XFNAME,XDDATE,XCODE,XOPBAL,XCURBAL:
                                   XPYMNTS,XCOMM,XMPRA
          RETURN
.
.         2nd Index
.
RSTEMP2   READ      FACTEMP2,KEY46;;
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    FACTEMP2;XFDATE,XNAME,XDEBT,DXSCAN,XADMNO:
                             XFNAME,XDDATE,XCODE,XOPBAL,XCURBAL,XPYMNTS:
                             XCOMM,XMPRA
          GOTO      OVERCOND IF OVER
          MOVE      DXSCAN,XSCAN
          RETURN
.
.         3rd Index
.
RSTEMP3   READ      FACTEMP3,KEY49;;
          RETURN
.
RKTEMP3   MOVE      ZERO,OVRCD
          READKS    FACTEMP3;XFDATE,XNAME,XDEBT,DXSCAN,XADMNO:
                             XFNAME,XDDATE,XCODE,XOPBAL,XCURBAL,XPYMNTS:
                             XCOMM,XMPRA
          GOTO      OVERCOND IF OVER
          MOVE      DXSCAN,XSCAN
          RETURN
+
. =========================================================================
.  I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       PRIPRADS
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       PRIFACIO/INC                 * future action file
..          INC       PRIDBTIO/INC                 * debtor file
          INC       PRIINVIO/INC                 * invoice file
.
          INC       PATMA1IO/INC                 * patient master file
          INC       PATCODIO/INC                 * code file
          INC       PATMI1IO/INC                 * admission file
          INC       PMSVX1IO/INC                 * admission file
          INC       PATINVIO/INC                 * invoice file
          INC       PATDSCIO/INC                 * discharge file
          INC       PATFACIO/INC                 * PMI future action file
          INC       PATVISIO/INC                 * visit file
          INC       PRIPRAIO/INC                 * medical practice file
