.**********************************************************************
.* System   :  WAITING LISTS                                          *
.* Program  :  IBAWAT50                                               *
.* Desc     :  SET-UP LETTERS                                         *
.**********************************************************************
.* Date     :  23/04/89                                               *
.* Author   :  Steve O'Gorman                                         *
.* Comment  :                                                         *
.*          :                                                         *
.* Modifications :                                                    *
.*                                                                    *
.*       V11.00.02  20/03/2020  Peter Vela     TSK 0889143            *
.*                  Fixed WATLET IO calls                             *
.*       V11.00.01  19/03/2020 Peter Vela       TSK 0889143           *
.*                  Recompiled for WATLETFD                           *
.*       V10.13.01  05/12/2018  Don Nguyen       TSK 0838558          *
.*                  Deleted temp files (TEMP1) on program exit        *
.*       V10.05.01  01/08/2015  Ania P            CAR 261630          *
.*                  Removed use of PORT for temp file naming          *
.*       V10.04.01  31/12/2013  Don Nguyen        CAR 294389          *
.*                  Recompiled for changes to WATLETFD & WATLETIO     *
.*        V5.10.02  09/09/2002  Sunil (HPS)    SRF 16160              *
.*                  Changes Reverted - Rebound                        *
.*        V5.10.01  02/09/2002  Sunil (HPS)    SRF 16160              *
.*                  Fixed (*) Problem in particular address line      *
.*        V5.05.01  25/03/1998  Steve Armstrong    SRF 642798         *
.*                  Fixed bug in "?" routine when no codes on file    *
.*        V5.04.06  28/04/1997  howellsy     rha                      *
.*                  Added user def 5-8, rank                          *
.*        V5.04.05  11/04/1997  Steve Armstrong    SRF 642798         *
.*                  Fixed UK bug (not padding out work variable)      *
.*        V5.04.04  07/03/97 Howellsy     SRF 642520                  *
.*                  Fixed Residential Address 3 & 4                   *
.*        V5.04.03  18/02/97 Howellsy     WHT                         *
.*                  Added Cell Phone, Postal Add1-4, Postal Post Code *
.*        V5.04.02  17/01/1997  Steve Armstrong                       *
.*                  Fixed bugs from global recompile (TBC 7)          *
.*        V5.04.01  13/08/1996  Steve Armstrong     SRF 641876        *
.*                  Added priority field variables                    *
.*        V5.01.01  19/06/89 M.Ohleiter                               *
.*                  Changes for new release 5.01                      *
.*                  14/08/89  S. O'Gorman                             *
.*                  Fix Modify Routine for > 80 Chars                 *
.*                  15/08/89  S. O'Gorman                             *
.*                  Fix wp Heading for 8 Digit Version                *
.*        V5.01.02  12/05/1992  Graeme Williams        SRF 114249     *
.*                  Fixed verify option if top margin was 15.         *
.*        V5.01.03  13/05/1992  ROD                    SRF 114628     *
.*                  Added Department field                            *
.*        V5.01.04  15/05/1992  ROD                                   *
.*                  Added Patient class. Referred Doct Address 1 & 2  *
.*        V5.01.05  16/12/92    Whirlpool                             *
.*                  Added new variables for dudley changes            *
.*        V5.01.07  26/02/93    Steve O'Gorman                        *
.*                  Fixed 'Ok to Post' Line to do a *EL               *
.*        V5.01.08  03/03/93    Whirlpool                             *
.*                  Added More variables for dudley changes           *
.*        V5.01.09  14/12/93    ROD                                   *
.*                  Added GP Practice vars for Dudley                 *
.*        V5.01.10  1/03/94     I.Rutt                                *
.*                  Added new word processor, Upgrade Standards       *
.*        V5.01.11  14/04/94    Sandra Barcham                        *
.*                  Make ? look standard                              *
.*                                                                    *
.**********************************************************************
.
          INC       STD001FD
          INC       WATLETFD/INC
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC+
.
.**********************************************************************
.*                           CONSTANTS                                *
.**********************************************************************
.
.   List of variables which the Word Processor understands 
.
LCADDA   INIT      "%adda"             * Address Line 1
LCADDB   INIT      "%addb"             * Address Line 2
LCADDD   INIT      "%addd"             * Address Line 4
LCBKTYPE INIT      "%bktype"           * Booking Type
LCDATE   INIT      "%date"             * Today's Date
LCDOCT   INIT      "%doct"             * Doctor's Name
LCEXDATE INIT      "%edudate"          * Expected Due Date
LCEXTIME INIT      "%edutime"          * Expected Due Time
LCFNAME  INIT      "%fname"            * Patient Full Name
LCGNAME  INIT      "%gname"            * Patient Given Name
LCLSTDAT INIT      "%lstdate"          * Date on List
LCPAGE   INIT      "%page"             * Page Break Variable
LCPASDTE INIT      "%pasdate"          * Pre-assessment Date
LCPASTME INIT      "%pastime"          * Pre-assessment Time
LCPCODE  INIT      "%pcode"            * Patient Post Code
LCPHONE  INIT      "%phone"            * Patient Phone Number
LCPRFACC INIT      "%prefacc"          * Preferred Accomodation
LCPRODES INIT      "%prodesc"          * Procedure Description
LCRESACC INIT      "%resacc"           * Person Responsible for Account
LCRESADA INIT      "%resadda"          * Person Responsible Address 1
LCRESADB INIT      "%resaddb"          * Person Responsible Address 2
LCRESPCD INIT      "%respost"          * Person Responsible Post Code
LCRESSUB INIT      "%ressub"           * Person Responsible Suburb
LCRESADD INIT      "%resaddd"          * Person Responsible Address 4
LCREVDTE INIT      "%revdate"          * Last Review Date
LCSNAME  INIT      "%sname"            * Patient Surname
LCSUBURB INIT      "%suburb"           * Patient Suburb
LCTITLE  INIT      "%title"            * Patient Title
LCUNIT   INIT      "%unit"             * Referral / Unit
LCURNO   INIT      "%urno"             * Patient's Unit Record Number
LCDEPT   INIT      "%dept"             * Department
LCRDADA  INIT      "%rfdada"           * Reffered Doctor Address 1
LCRDADB  INIT      "%rfdadb"           * Reffered Doctor Address 2
LCKNNAME  INIT      "%mailnme"
LCNKADD1  INIT      "%mailad1"              * address of the letter
LCNKADD2  INIT      "%mailad2"
LCNKADD3  INIT      "%mailad3"
LCNKADD4  INIT      "%mailad4"
LCNKPOST  INIT      "%mailpc"               * mail post code
LCGPSNAM  INIT      "%rggpsnm"              * registered gp's surname
LCGPGNAM  INIT      "%rggpgnm"              * registered gp's given name
LCGPADD1  INIT      "%rggpad1"              * address of reffering Gp
LCGPADD2  INIT      "%rggpad2"               
LCGPADD3  INIT      "%rggpad3"               
LCGPADD4  INIT      "%rggpad4"               
LCGPPOST  INIT      "%rggppc"               * registered gp poscode
LCRGPSNM  INIT      "%rfgrsnm"              * refered gp's surname
LCRGPGNM  INIT      "%rfgrgnm"              * refered gp's given name
LCRGPAD1  INIT      "%rfgrad1"              * address of reffering Gp
LCRGPAD2  INIT      "%rfgrad2"               
LCRGPAD3  INIT      "%rfgrad3"               
LCRGPAD4  INIT      "%rfgrad4"               
LCRGPPST  INIT      "%rfgrpc"               * refered gp poscode
LCDADTE   INIT      "%decaddt"              * decision to admit date
LCGADDTE  INIT      "%gaddate"              * guarenteed Admission date
LCDNAB    INIT      "%dnabdte"              * Do not admit before date
LCNAFDTE  INIT      "%nafdate"              * Not avavilable from date
LCNATDTE  INIT      "%natdate"              * Not available to date
LCEADTD   INIT      "%eladtyp"              * elective admission type desc
LCVISIT   INIT      "%vnumb"                * visit number
LCHSPNAM  INIT      "%hspname"              * Hospital name (multi hospitals)
LCHSPAD1  INIT      "%hspadda"              *    "     address 1
LCHSPAD2  INIT      "%hspaddb"              *    "     address 2
LCHSPAD3  INIT      "%hspaddc"              *    "     address 3
LCHSPAD4  INIT      "%hspaddd"              *    "     address 4
LCHSPOST  INIT      "%hsppost"              *    "     post Code
LCHSPHON  INIT      "%hspphon"              *    "     Phone number
LCRGPRNM  INIT      "%rgprcnm"              * regstrd gp's practice name
LCRGPRA1  INIT      "%rgprca1"              * regstrd gp's practice address 1
LCRGPRA2  INIT      "%rgprca2"              * regstrd gp's practice address 2
LCRGPRA3  INIT      "%rgprca3"              * regstrd gp's practice address 3
LCRGPRA4  INIT      "%rgprca4"              * regstrd gp's practice address 4
LCRGPRPC  INIT      "%rgprcpc"              * regstrd gp's practice post code
LCRGPRPH  INIT      "%rgprcph"              * regstrd gp's practice Phone No.
LCRFPRNM  INIT      "%rfprcnm"              * refered gp's practice name
LCRFPRA1  INIT      "%rfprca1"              * refered gp's practice address 1
LCRFPRA2  INIT      "%rfprca2"              * refered gp's practice address 2
LCRFPRA3  INIT      "%rfprca3"              * refered gp's practice address 3
LCRFPRA4  INIT      "%rfprca4"              * refered gp's practice address 4
LCRFPRPC  INIT      "%rfprcpc"              * refered gp's practice post code
LCRFPRPH  INIT      "%rfprcph"              * refered gp's practice Phone No.
LCPTYCOD  INIT      "%ptycod"               * priority code (cat TP)
LCPTYDES  INIT      "%ptydesc"              * priority desc.
LCCTELE   INIT      "%ctele"            * Cellular Phone Number
LCPADDA   INIT      "%padda"            * Postal address line 1
LCPADDB   INIT      "%paddb"            * Postal address line 2
LCPADDC   INIT      "%paddc"            * Postal address line 3
LCPADDD   INIT      "%paddd"            * Postal address line 4
LCPPOST   INIT      "%ppost"            * Postal Post Code       
LCUDEF5   INIT      "%udef5"            * User Defined Field 5   
LCUDEF6   INIT      "%udef6"            * User Defined Field 6   
LCUDEF7   INIT      "%udef7"            * User Defined Field 7   
LCUDEF8   INIT      "%udef8"            * User Defined Field 8   
LCPRANK   INIT      "%prank"            * Patient Rank 
.
.
. ----- Maximum Field Lengths for the Variables Above -----
.                                           * Srf 16160 Code change Begin
LXADDA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXADDB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXADDD   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXBKTYPE INIT      "XXXXXXXXXXXXXXXXXXXX"
LXDATE   INIT      "99th XXXXXXXXX 1999"
LXDOCT   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXEXDATE INIT      "99th XXXXXXXXX 1999"
LXEXTIME INIT      "99:99 pm"
LXFNAME  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXGNAME  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXLSTDAT INIT      "19th XXXXXXXXX 1999"
LXPAGE   INIT      "X       ------          page ":
                   "break       ------        X"
LXPASDTE INIT      "19th XXXXXXXXX 1999"
LXPASTME INIT      "99:99 pm"
LXPCODE  INIT      "XXXX"
LXPHONE  INIT      "999999999999"
LXPRFACC INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPRODES INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRESACC INIT      "XXXXXXXXXXXXXXXXXXXX"
LXRESADA INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRESADB INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRESPCD INIT      "9999"
LXRESSUB INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRESADD INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXREVDTE INIT      "19th XXXXXXXXX 1999"
LXSNAME  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXSUBURB INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXTITLE  INIT      "XXXX"
LXUNIT   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXURNO   INIT      "XXXXXXXX"
LXDEPT   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXRDADA  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"  * Reffered Doctor Address 1
LXRDADB  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"  * Reffered Doctor Address 2
LXKNNAME  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"     
LXNKADD1  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"       
LXNKADD2  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXNKADD3  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXNKADD4  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXNKPOST  INIT      "XXXXXXXX"     
LXGPSNAM  INIT      "XXXXXXXXXXXXXXXXXXXX"   
LXGPGNAM  INIT      "XXXXXXXXXXXXXXXXXXXX"  
LXGPADD1  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"     
LXGPADD2  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"               
LXGPADD3  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"               
LXGPADD4  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"               
LXGPPOST  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"     
LXRGPSNM  INIT      "XXXXXXXXXXXXXXXXXXXX"   
LXRGPGNM  INIT      "XXXXXXXXXXXXXXXXXXXX"             
LXRGPAD1  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"            
LXRGPAD2  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"               
LXRGPAD3  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"               
LXRGPAD4  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"               
LXRGPPST  INIT      "XXXXXXXX"
LXDADTE   INIT      "99th XXXXXXXXX 1999"        
LXGADDTE  INIT      "99th XXXXXXXXX 1999"          
LXDNAB    INIT      "99th XXXXXXXXX 1999"         
LXNAFDTE  INIT      "99th XXXXXXXXX 1999"       
LXNATDTE  INIT      "99th XXXXXXXXX 1999"      
LXEADTD   INIT      "XXXXXXXXXXXXXXXXXXXX"     
LXVISIT   INIT      "XXXXXXXX"
LXHSPNAM  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"     
LXHSPAD1  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"           
LXHSPAD2  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"           
LXHSPAD3  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"           
LXHSPAD4  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"           
LXHSPOST  INIT      "XXXXXXXX"                        
LXHSPHON  INIT      "XXXXXXXXXXXXXXXXXXXX"                        
LXRGPRNM  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXRGPRA1  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRGPRA2  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRGPRA3  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRGPRA4  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRGPRPC  INIT      "XXXXXXXX"
LXRGPRPH  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXRFPRNM  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXRFPRA1  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRFPRA2  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRFPRA3  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRFPRA4  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRFPRPC  INIT      "XXXXXXXX"
LXRFPRPH  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPTYCOD  INIT      "XXX"
LXPTYDES  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXCELL    INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPADDA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPADDB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPADDC   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPADDD   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPPOST   INIT      "XXXXXXXX"
LXUDEF5   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXUDEF6   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXUDEF7   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXUDEF8   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPRANK   INIT      "XXXXXX"
.                                           * Srf 16160 Code Change End
REPSTR    INIT      "a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0102030405060708090"
SPECCHAR  INIT      "%"
TEMP1     FILE      ASCII,FIXED=79
.
NINETY4   FORM      "94"
.
PRGID     INIT      "IBAWAT50"
PRGNAM    INIT      "Set-Up Letters"
VERSION   INIT      "V12.00.00"
.
+
.**********************************************************************
.*                        GLOBAL  VARIABLES                           *
.**********************************************************************
.  
BOTMARG  FORM      2
CMDLINE  DIM       50
COUNT    FORM      3 
DIM30    DIM       30
DIM70    DIM       70
DISPSTRN DIM       70
FORM3    FORM      3
FORM3A   FORM      3
ENDSTR   FORM      2
FPPOS    FORM      2
LEFTMARG FORM      2
LETDESC  DIM       20
LETTNAME DIM       20
LINE     FORM      2
LINENO   FORM      3
LLPOS    FORM      2
LSTPRINT FORM      3
MAXLINES FORM      3
OPTN     DIM       6
PERCPOS  FORM      2
PHYSPAGE FORM      3
POS      FORM      2
PRTSTRNG DIM       70
SRCHNUM  FORM      2
SRCHVAR  DIM       8
STARTSTR FORM      2
TEMP2    FORM      2
TEMP3    FORM      2
TEMP70   DIM       70
TMPLETT  DIM       3
TMPLETNO FORM      3
TOPMARG  FORM      2
WORDMODE FORM      2
VERTPOS  FORM      2
+
.********************************************************************** 
.*                             MAINLINE                               *
.**********************************************************************
.
ML0000   CALL      INIT0000                      * Initialize
.
ML1000   CALL      CLR0000                       * Clear Variables
         CALL      SCR0000                       * Call Option Screen
         BRANCH    EXIT,ML9999
         BRANCH    OPTION,ML2000,ML3000,ML4000:
                          ML5000,ML6000,ML7000
.
ML2000
.        -----  add a letter  -----
.
         MOVE      "Add   ",OPTN
.
         CALL      INLT0000                      * Input the Letter Number
         BRANCH    EXIT,ML1000
.
         CALL      NWCK0000                      * Check if Letter is New
         BRANCH    EXIT,ML2000
.
         CALL      LDET0000                      * Display Parameter Fields
         BRANCH    EXIT,ML2000
.
         CALL      INDT0000                      * Input Letter Details
.
         CALL      SEL0000                       * Select Field to Update
         BRANCH    EXIT,ML2000
.
         CALL      HEAD0000                      * Write the header record to
.                                                  Letter Record
         CALL      WP0000                        * Call the word processor
.
         CALL      ADDL0000                      * Add a Letter to the File
.
         GOTO      ML1000
.
ML3000
.        -----  view a letter  -----
.
         MOVE      "View  ",OPTN
.
         CALL      INLT0000                      * Input the Letter Number
         BRANCH    EXIT,ML1000
.
         CALL      OLCK0000                      * Check if Letter Exists
         BRANCH    EXIT,ML3000
.
         CALL      PARA0000                      * Display the Letter Param's.
         BRANCH    EXIT,ML3000
.
         GOTO      ML1000
.
ML4000
.        -----  verify a letter  -----
.
         MOVE      "Verify",OPTN
.
         CALL      INLT0000                      * Input the Letter Number
         BRANCH    EXIT,ML1000
.
         CALL      OLCK0000                      * Check if Letter Exists
         BRANCH    EXIT,ML4000
.
         CALL      VERF0000                      * Modify the line to show
         BRANCH    EXIT,ML4000                   * Maximum Variable Length
.
         CALL      CONT0000                      * Hit Return to Continue
.
         GOTO      ML1000
.
ML5000
.        -----  change a letter  -----
.
         MOVE      "Change",OPTN
.
         CALL      INLT0000                      * Input the Letter Number
         BRANCH    EXIT,ML1000
.
         CALL      OLCK0000                      * Check if Letter Exists
         BRANCH    EXIT,ML5000
.
         CALL      DETL0000                      * Display the Letters Details
.
         CALL      SEL0000                       * Select Item to Modify
         BRANCH    EXIT,ML5000
.
         CALL      UPDT0000                      * Update Letter in w.p.
         BRANCH    EXIT,ML5000
.
         GOTO      ML1000
.
ML6000
.        ----- delete a letter  -----
.
         MOVE      "Delete",OPTN
.
         CALL      INLT0000                      * Input the Letter to Delete
         BRANCH    EXIT,ML1000
.
         CALL      OLCK0000                      * Check if Record Exists
         BRANCH    EXIT,ML6000
.
         CALL      DETL0000                      * Display the Letter Param's
         BRANCH    EXIT,ML6000
.
         CALL      PARA0000 
.
         CALL      DEL0000                        * Delete Record Procedure
         BRANCH    EXIT,ML6000,ML1000
.
         GOTO      ML1000
.
ML7000
.        ----- print a letter  -----
.
         MOVE      "Print ",OPTN
.
         CALL      INLT0000                      * Input the Letter to Print
         BRANCH    EXIT,ML1000
.
         CALL      OLCK0000                      * Check if Letter Exists
         BRANCH    EXIT,ML7000
.
         CALL      PRT0000                       * Print the Extended Letter
         BRANCH    EXIT,ML7000
.
         CALL      CONT0000                      * Hit Return to Continue
.
         GOTO      ML1000
.
ML9999   PREP      TEMP1,TFILNAME
         CLOSE     TEMP1,DELETE
         CHAIN     PGM
.
+
.********************************************************************** 
.*                  INIT0000 - Initialization                         *
.**********************************************************************
.
INIT0000  CALL      TFILENAM
          CALL      DISPHEAD
          DISPLAY   *P57:24,"Opening watletrf"
          OPEN      WATLETR1,"watletrf"
          DISPLAY   *P65:24,"watletrf"
          OPEN      WATLETR2,"watletrf"
          OPEN      CONTROLF,"controlf"
.
.---------- set up port dependancy for temp file -------
.
          CLEAR      CMDLINE
          APPEND     TFILNAME,CMDLINE
          APPEND     ".txt",CMDLINE
          RESET      CMDLINE
.    
          RETURN
+
.********************************************************************** 
.*                   CLR0000 - Clear Variables                        *
.**********************************************************************
.
CLR0000   HLINE     *G37,2,47,80              * Clear the mode display
          PACK      DIM70,SP30,SP30,SP10
          MOVE      ZERO,WLETPBOT
          MOVE      ZERO,WLETPTOP
          MOVE      ZERO,WLETPPAG
          MOVE      ZERO,WLETPTAB
          MOVE      ZERO,LINE
          MOVE      SP20,LETTNAME
          MOVE      ZERO,TOPMARG
          MOVE      ZERO,LEFTMARG
          MOVE      ZERO,FORM3
          MOVE      ZERO,FORM3A
.
          RETURN
+
.********************************************************************** 
.*                   SCR0000 - Main Option Screen                     *
.**********************************************************************
.
SCR0000   MOVE      FALSE,EXIT
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Add a Letter":
                    *P1:6,*V2LON,"2",*HOFF," = View a Letter":
                    *P1:7,*V2LON,"3",*HOFF," = Verify a Letter":
                    *P1:8,*V2LON,"4",*HOFF," = Change a Letter":
                    *P1:9,*V2LON,"5",*HOFF," = Delete a Letter":
                    *P1:10,*V2LON,"6",*HOFF," = Print a Letter":
                    *P1:12,"Please Select :";
.
SCR0500   KEYIN     *P17:12,*V2LON,OPTION;
          DISPLAY   *P17:12,*V2LON,OPTION;
          COMPARE   SEVEN,OPTION                  * No. Options + 1 = 7
          GOTO      SCR0500 IF NOT LESS
. 
          COMPARE   ZERO,OPTION
          GOTO      SCR0900 IF NOT EQUAL
          MOVE      TRUE,EXIT
SCR0900   RETURN
+
.****************************************************************************
.*                    INLT0000 - Input the Letter Number                    *
.****************************************************************************
.
INLT0000 MOVE      FALSE,EXIT
.
         DISPLAY   *P47:2,*V2LON,"- ",*+,OPTN,SP1;
.
         DISPLAY   *P1:3,*EF:
                   *P4:4,"Letter Number       :";
INLT1000 KEYIN     *P26:4,*V2LON,TMPLETT;
         DISPLAY   *P26:4,*V2LON,TMPLETT;
.
         RESET     TMPLETT                       * Check for a Return
         GOTO      INLT9000 IF EOS
.
         MATCH     SP1,TMPLETT                   * Check for Spaces
         GOTO      INLT9000 IF EQUAL
.
         MATCH     "?",TMPLETT                   * Check for a "?" 
         GOTO      INLT7000 IF NOT EQUAL
.
         CALL      QEST0000 
         DISPLAY   *P1:3,*EF:
                   *P4:4,"Letter Number       :";
         GOTO      INLT1000
.
INLT7000
         TYPE      TMPLETT                       * Force a Numeric
         GOTO      INLT8000 IF EQUAL
.
         DISPLAY   *P1:24,*EL,*B,"Invalid Letter Number. ";
         CALL      HITENTER
         GOTO      INLT0000
INLT8000
         MOVE      TMPLETT,TMPLETNO
         COMPARE   ZERO,TMPLETNO                 * Check for Zero
         GOTO      INLT9000 IF EQUAL
         GOTO      INLT9999
INLT9000
         MOVE      TRUE,EXIT
.
INLT9999
         RETURN
.
.********************************************************************** 
.*             LLET0000 - DISPLAY ALL LETTERS ON A "?" OPTION         *
.********************************************************************** 
.
LLET0000  MOVE      FIVE,VERTPOS               * Start Printing on Line 5
          PACK      KEY6,SP70                  * Position at Top of File
          CALL      RDSLET2
          CALL      RDKLET2
          BRANCH    OVRCD,LLET9000
          DISPLAY   *P1:3,*EF:                 * Print Heading
                    *P31:4,*V2LON,*ULON,"AVAILABLE LETTERS",*HOFF;
.
LLET1000  COMPARE   TWENTY1,VERTPOS                      * Set up a 2nd column
          GOTO      LLET2000 IF LESS                     * after line no. 21
          DISPLAY   *P40:VERTPOS,*V2LON,WLETNO,*HOFF;
          MOVE      WLTEXT,LETDESC
          DISPLAY   *P45:VERTPOS,LETDESC;                * Display in col 2
          GOTO      LLET3000
.
LLET2000  DISPLAY   *P1:VERTPOS,*V2LON,DWLETNO,*HOFF;
          MOVE      WLTEXT,LETDESC
          DISPLAY   *P5:VERTPOS,LETDESC;                 * Display in col 1
.
LLET3000  CALL      RDKLET2                              * End of records if
          BRANCH    OVRCD,LLET9000                       * LETTER NO. > 0  
          COMPARE   ZERO,WLINNO
          GOTO      LLET9999 IF NOT EQUAL
          ADD       ONE,VERTPOS                          * Increment vert pos
          GOTO      LLET1000
.
.------ end of allocation fields display ------
.
LLET9000  KEYIN     *P1:24,*B,*EL,"Records Must be Added to ":
                    "Letter File First. ";
          CALL      HITENTER 
          MOVE      TRUE,EXIT
          RETURN
.
LLET9999  DISPLAY   *P1:24,*EL;
          CALL      HITENTER
          RETURN
.
.********************************************************************** 
.*                              QEST0000                              *
.*               Display all Codes on Report File for "?"             *
.********************************************************************** 
.
QEST0000  MOVE      SP70,KEY6
          CALL      RDSLET2
.
.         Display Category Heading, and then loop over entries
.
          DISPLAY   *P1:4,*EF,*P20:4,*V2LON,*ULON,"EXISTING LETTERS"
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
.
          CALL      RDSLET2
QEST1000  CALL      RDKLET2
          BRANCH    OVRCD,QEST2000
.
          COMPARE   ZERO,WLINNO
          GOTO      QEST4000 IF NOT EQUAL
.
          MOVE      WLTEXT,DIM30
          DISPLAY   *PCCOL:CVERT,*V2LON,WLETNO,SP2,*HOFF,DIM30;
          ADD       ONE,CVERT
          COMPARE   TWENTY3,CVERT
          GOTO      QEST1000 IF LESS
.
          MOVE      FIVE,CVERT
          ADD       "40",CCOL
          COMPARE   "70",CCOL
          GOTO      QEST1000 IF LESS
.
          KEYIN     *P1:24,*EL," (",*V2LON,"E",*HOFF,")xit, (":
                    *V2LON,"N",*HOFF,")ext Screen : ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          CMATCH    ANSE,ANS
          GOTO      QEST5000 IF EQUAL
.
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
          DISPLAY   *P1:5,*EF
.
          GOTO      QEST1000
.
.
QEST2000  DISPLAY   *P1:24,*EL,*B,"No Records Entered in Report File. ";
          CALL      HITENTER 
          GOTO      QEST5000
.
.      End of codes
.
QEST4000  KEYIN     *P1:24,*EL,"Letter Number : ",TMPLETT;
QEST5000  MOVE      ZERO,OVRCD
.
          RETURN
+
.****************************************************************************
.*            NWCK0000 - Check if Letter is not on File (New for Add)       *
.****************************************************************************
.
NWCK0000  MOVE      FALSE,EXIT
          MOVE      ZERO,FORM3
          PACK      KEY6,TMPLETNO,FORM3
          CALL      RDLET1
          BRANCH    OVRCD,NWCK9999
.
          DISPLAY   *P1:24,*B,*EL,"Letter Already Exists on File. ";
          CALL      HITENTER
.
          MOVE      TRUE,EXIT
.
NWCK9999  RETURN
+
.****************************************************************************
.*            OLCK0000 - Check that letter exists on file                   *
.*                       For : view , verify , change , delete , print      *
.****************************************************************************
.
OLCK0000  MOVE      FALSE,EXIT
          MOVE      ZERO,FORM3
          PACK      KEY6,TMPLETNO,FORM3
          CALL      RDLET1
          BRANCH    OVRCD,OLCK9000
          MOVE      WLTEXT,LETTNAME
          MOVE      WLETPTOP,TOPMARG
          MOVE      WLETPTAB,LEFTMARG
          MOVE      WLETPPAG,PHYSPAGE
          GOTO      OLCK9999
.
OLCK9000  DISPLAY   *P1:24,*B,*EL,"Letter Not Found On File. ";
          CALL      HITENTER 
          MOVE      TRUE,EXIT
.
OLCK9999  RETURN
+
.****************************************************************************
.*            LDET0000 - Input the Details of the new Letter                *
.****************************************************************************
.
LDET0000  DISPLAY   *P1:5,*EF:
                    *P1:5,"   Name                :":
                    *P1:6,*V2LON,"1",*HOFF,". Paper Page Length   :":
                    *P1:7,*V2LON,"2",*HOFF,". Top Margin Size     :":
                    *P1:8,*V2LON,"3",*HOFF,". Bottom Margin Size  :":
                    *P1:9,*V2LON,"4",*HOFF,". Left Margin Size    :";
.
.
LDET9999  RETURN
+
.****************************************************************************
.*              INDT0000 - Input the Letter Details                         *
.****************************************************************************
.
INDT0000  CALL      NAME0000            * Input the Letter Name
          CALL      PAPL0000            * Input the Paper Page Length
          CALL      TMAR0000            * Input the Top Margin Size
          CALL      BMAR0000            * Input the Bottom Margin Size
          CALL      LMAR0000            * Input the Left Margin Size
.
INDT9999  RETURN
+
.****************************************************************************
.*    SEL0000 - Select Field to Update on the Input Letter Detail Screen    *
.****************************************************************************
.
SEL0000   MOVE      FALSE,EXIT
          CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      SEL0999 IF EQUAL
          COMPARE   "-1",CCITEM
          GOTO      SEL0900 IF EQUAL
          COMPARE   EIGHT,CCITEM
          GOTO      SEL0000 IF NOT LESS
.
SEL0100   BRANCH    CCITEM,SEL0200,SEL0300,SEL0400,SEL0500
.
          GOTO      SEL0000
.
SEL0200   CALL      PAPL0000            * Input the Paper Page Length
          GOTO      SEL0000
.
SEL0300   CALL      TMAR0000            * Input the Top Magin Size
          GOTO      SEL0000
.
SEL0400   CALL      BMAR0000            * Input the Bottom Margin Size
          GOTO      SEL0000
.
SEL0500   CALL      LMAR0000            * Input the Left Margin Size
          GOTO      SEL0000
.
SEL0900   MOVE      TRUE,EXIT
.
SEL0999   RETURN
+
.****************************************************************************
.*              NAME0000 - Input the Letter Name                            *
.****************************************************************************
.
NAME0000  DISPLAY   *P26:5,UNDLN20;
          KEYIN     *P26:5,*V2LON,LETTNAME;
          DISPLAY   *P26:5,*V2LON,LETTNAME;
          RETURN
+
.****************************************************************************
.*             PAPL0000 - Input the Physical Paper Length                   *
.****************************************************************************
.
PAPL0000  DISPLAY   *P26:6,UNDLN3;
          KEYIN     *P26:6,*V2LON,WLETPPAG;
          DISPLAY   *P26:6,*V2LON,WLETPPAG;
          COMPARE   ZERO,WLETPPAG
          GOTO      PAPL0000 IF EQUAL
.
          COMPARE   WLETPPAG,WLETPBOT
          GOTO      PAPL9000 IF LESS
          DISPLAY   *P1:24,"Page Length Must Be Greater than the ":
                          "Bottom Margin. ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      PAPL0000
.
PAPL9000  CALL      MARG0000
          BRANCH    OVRCD,PAPL0000
.
PAPL9999  RETURN
+
.****************************************************************************
.*             TMAR0000 - Input the top Margin Size                         *
.****************************************************************************
.
TMAR0000  DISPLAY   *P27:7,UNDLN2;
          KEYIN     *P27:7,*V2LON,WLETPTOP;
          DISPLAY   *P27:7,*V2LON,WLETPTOP;
          COMPARE   ZERO,WLETPTOP
          GOTO      TMAR0000 IF EQUAL
          COMPARE   WLETPPAG,WLETPTOP
          GOTO      TMAR9000 IF LESS
          DISPLAY   *P1:24,*B,*EL,"Top Margin Must Be Less than Page length. ";
          CALL      HITENTER 
          DISPLAY   *P1:24,*EL;
          GOTO      TMAR0000
.
TMAR9000  MOVE      WLETPPAG,FORM3
          SUB       TWO,FORM3
          COMPARE   FORM3,WLETPTOP
          GOTO      TMAR9900 IF LESS
          DISPLAY   *P1:24,*EL,*B,"Top Margin Too Big. ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      TMAR0000
.
TMAR9900  CALL      MARG0000
          BRANCH    OVRCD,TMAR0000
.
TMAR9999  RETURN
+
.****************************************************************************
.*              BMAR0000 - Input the Bottom Margin                          *
.****************************************************************************
.
BMAR0000  DISPLAY   *P27:8,UNDLN2;
          KEYIN     *P27:8,*V2LON,WLETPBOT;
          DISPLAY   *P27:8,*V2LON,WLETPBOT;
          COMPARE   ZERO,WLETPBOT
          GOTO      BMAR0000 IF EQUAL
          COMPARE   WLETPPAG,WLETPBOT
          GOTO      BMAR9000 IF LESS
          DISPLAY   *P1:24,*EL,*B,"Bottom Margin Must Be Less than ":
                                  "Page length. ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      BMAR0000
.
BMAR9000  MOVE      WLETPPAG,FORM3
          SUB       TWO,FORM3
          COMPARE   FORM3,WLETPBOT
          GOTO      BMAR9900 IF LESS
          DISPLAY   *P1:24,*EL,*B,"Bottom Margin Too Big. ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      BMAR0000
.
BMAR9900  CALL      MARG0000
          BRANCH    OVRCD,BMAR0000
.
BMAR9999  RETURN
+
.****************************************************************************
.*             LMAR0000 - Input the Left Margin                             *
.****************************************************************************
.
LMAR0000  DISPLAY   *P27:9,UNDLN2;
          KEYIN     *P27:9,*V2LON,WLETPTAB;
          DISPLAY   *P27:9,*V2LON,WLETPTAB;
          COMPARE   ZERO,WLETPTAB
          GOTO      LMAR0000 IF EQUAL
          COMPARE   TWENTY1,WLETPTAB
          GOTO      LMAR9999 IF LESS
. 
          DISPLAY   *P1:24,*B,*EL,"Left Margin May Not Exceed 20. ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      LMAR0000
.
LMAR9999  RETURN
+
.****************************************************************************
.*              MARG0000 - Verify if Top + Bottom < Page Length             *
.****************************************************************************
.
MARG0000  MOVE      ZERO,OVRCD
          MOVE      WLETPTOP,FORM3
          ADD       WLETPBOT,FORM3
          COMPARE   WLETPPAG,FORM3
          GOTO      MARG9999 IF LESS
.
          MOVE      ONE,OVRCD
          DISPLAY   *P1:24,*EL,*B,"Invalid Top & Bottom Margin Combination. ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
.
MARG9999  RETURN
+
.****************************************************************************
.*              HEAD0000 - Write the Header Record to the Letter File       *
.****************************************************************************
.
HEAD0000  MOVE      ZERO,FORM3
          MOVE      LETTNAME,WLTEXT
          PACK      KEY6,TMPLETNO,FORM3
          CALL      WRLET1
          RETURN
+
.****************************************************************************
.*              SET UP THE TEMP FILE AND CALL THE WORD PROCESSOR            *
.****************************************************************************
.
WP0000    PREP      TEMP1,TFILNAME
          CLOSE     TEMP1
          DISPLAY   *P1:6,*EF; 
          MOVE      EIGHT,WORDMODE
          WORD      CMDLINE,99,5,7,76,23,WORDMODE
          RETURN   
+
.************************************************************ 
.*       ADDL0000 - Add a Letter to the Letter File         *
.************************************************************ 
.
ADDL0000  CALL      POSTQST
          BRANCH    CEXIT,ADDL1000,ADDL9999,ADDL9999    
.
ADDL1000  CLOSE     TEMP1                         * Reset the File to Top for
          OPEN      TEMP1,TFILNAME                * Reading
          MOVE      ZERO,COUNT
.
ADDL2000  MOVE      ZERO,WLVAR                    * Reset the "%" Sign Marker
          PACK      DIM70,SP30,SP30,SP10
          PACK      WLTEXT,SP30,SP30,SP10
          READ      TEMP1,SEQ;DIM70               * Read next line in temp file
          GOTO      ADDL9999 IF OVER
          ADD       ONE,COUNT                     * Increment count for the key
          MOVE      DIM70,WLTEXT
          SCAN      SPECCHAR,WLTEXT               * Set the Marker in the Letter
          GOTO      ADDL2100 IF NOT EQUAL         * File if the line of text
          MOVE      ONE,WLVAR                     * contains a "%"
.
ADDL2100  PACK      KEY6,TMPLETNO,COUNT           * Set up the key with Letter
          CALL      WRLET1                        * Number & Line Number
          GOTO      ADDL2000
.
ADDL9999  RETURN
+
.********************************************************************** 
.*              PARA0000 - Display the Letter Parameters              *
.**********************************************************************
.
PARA0000  DISPLAY   *P1:5,*EL:
                    *P4:5,"Name                :":
                    *P4:6,"Paper Page Length   :":
                    *P4:7,"Top Margin Size     :":
                    *P4:8,"Bottom Margin Size  :":
                    *P4:9,"Left Margin Size    :";
.
          DISPLAY   *P26:5,*V2LON:
                    *P26:5,LETTNAME:
                    *P26:6,WLETPPAG:
                    *P27:7,WLETPTOP:
                    *P27:8,WLETPBOT:
                    *P27:9,WLETPTAB;
.
. ----- Load Current Details Into the file
.
          PREP      TEMP1,TFILNAME
          MOVE      ZERO,LINE
          PACK      KEY8,TMPLETNO,LINE
          CALL      RDSLET1
PARA1000  CALL      RDKLET1
          BRANCH    OVRCD,PARA5000
.
          COMPARE   TMPLETNO,WLETNO  
          GOTO      PARA5000 IF NOT EQUAL
.
          APPEND    WLTEXT,DIM70
          RESET     DIM70
          WRITE     TEMP1,SEQ;DIM70
          GOTO      PARA1000 
.
PARA5000  MOVE      FOUR,WORDMODE
          CLOSE     TEMP1 
          WORD      CMDLINE,99,5,11,76,23,WORDMODE
. 
PARA9999  RETURN
+
.********************************************************************** 
.*                DISP0000 - Display the Letter Text                  *
.**********************************************************************
.
DISP0000  MOVE      FALSE,EXIT
          MOVE      ONE,FORM3
          PACK      KEY6,TMPLETNO,FORM3
          CALL      RDLET1
          BRANCH    OVRCD,DISP9000
          MOVE      SEVEN,LINE
          DISPLAY   *P1:6,*EF:
                    *P2:6,"----------------------------------------":
                          "------------------------------";
.
          ADD       ONE,LEFTMARG
          ADD       LINE,TOPMARG
.
DISP0500  DISPLAY   *P1:LINE,">",*P72:LINE,"<";
          ADD       ONE,LINE
          COMPARE   TWENTY3,LINE
          CALL      PAGE0000 IF NOT LESS
          BRANCH    EXIT,DISP9500
          COMPARE   LINE,TOPMARG
          GOTO      DISP0500 IF NOT EQUAL
.
DISP1000  DISPLAY   *P1:LINE,">",*PLEFTMARG:LINE,WLTEXT,*P72:LINE,"<";
          CALL      RDKLET1
          BRANCH    OVRCD,DISP9999
          COMPARE   WLETNO,TMPLETNO
          GOTO      DISP9999 IF NOT EQUAL
          ADD       ONE,LINE
          COMPARE   TWENTY3,LINE
          CALL      PAGE0000 IF NOT LESS
          BRANCH    EXIT,DISP9500
          GOTO      DISP1000
.
DISP9000  MOVE      TRUE,EXIT
          DISPLAY   *P1:24,*B,*EL,"No Text Entered for This Letter. ";
          CALL      HITENTER
.
DISP9500  RETURN
.
DISP9999  ADD       ONE,LINE
          DISPLAY   *P2:LINE,"----------------------------------------":
                             "------------------------------";
          RETURN
+
.********************************************************************** 
.*                VERF0000 - Display the Full Coded Text              *
.**********************************************************************
.
VERF0000  MOVE      FALSE,EXIT
          DISPLAY   *P4:5,"Letter Name         : ",*V2LON,LETTNAME;
          MOVE      ONE,FORM3
          PACK      KEY6,TMPLETNO,FORM3
          CALL      RDLET1
          BRANCH    OVRCD,VERF9000
.
          MOVE      SEVEN,LINE
          ADD       SIX,LEFTMARG
          ADD       LINE,TOPMARG
          DISPLAY   *P1:6,*EF;
          BOX       1,5,6,76,23  
.
VERF0500  ADD       ONE,LINE
          COMPARE   TWENTY3,LINE
          CALL      PAGE0000 IF NOT LESS
          BRANCH    EXIT,VERF9999
          COMPARE   LINE,TOPMARG
          GOTO      VERF0500 IF NOT EQUAL
.
VERF1000  MOVE      WLTEXT,DIM70
          CALL      MOD0000
          RESET     PRTSTRNG
          STRIP     PRTSTRNG  
          DISPLAY   *PLEFTMARG:LINE,*+,PRTSTRNG
          CALL      RDKLET1
          BRANCH    OVRCD,VERF9999
          COMPARE   WLETNO,TMPLETNO
          GOTO      VERF9999 IF NOT EQUAL
          ADD       ONE,LINE
          COMPARE   TWENTY2,LINE
          CALL      PAGE0000 IF NOT LESS
          BRANCH    EXIT,VERF9999
          GOTO      VERF1000
.
VERF9000  MOVE      TRUE,EXIT
          DISPLAY   *P1:24,*EL,*B,"No Text Entered for This Letter. ";
          CALL      HITENTER
.
VERF9999  RETURN
+
.********************************************************************** 
.*    PAGE0000 - message at the end of a page of text                 *
.**********************************************************************
.
PAGE0000  MOVE      FALSE,EXIT
          DISPLAY   *P1:24,"(",*V2LON,"N",*HOFF,")ext Page ":
                           "(",*V2LON,"E",*HOFF,")xit : ";
          KEYIN     *V2LON,ANS;
          DISPLAY   *P22:24,*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     "N",ANS
          GOTO      PAGE2000 IF EQUAL
          MATCH     "E",ANS
          GOTO      PAGE9000 IF EQUAL
. 
          BEEP
          GOTO      PAGE0000
.
PAGE2000  MOVE      SEVEN,LINE
          DISPLAY   *P1:6,*EF
          BOX       1,5,6,76,23
          SUB       LINE,TOPMARG
          GOTO      PAGE9999
.
PAGE9000  MOVE      TRUE,EXIT
.
PAGE9999 RETURN
+
.********************************************************************** 
.*              CONT0000 - HIT RETURN TO CONTINUE                     *
.**********************************************************************
.
CONT0000  DISPLAY    *P1:24,*EL;
          CALL       HITENTER
          RETURN
+
.********************************************************************** 
.*    MOD0000 - MODIFY A LINE TO SHOW MAXIMUM VARIABLE LENGTH         *
.**********************************************************************
.
MOD0000   PACK      PRTSTRNG,SP30,SP30,SP10       * Initialize the PRTSTRNG
          RESET     PRTSTRNG,0                    * and pointer positions
          MOVE      ONE,STARTSTR
          MOVE      ONE,ENDSTR
.
MOD2000   SCAN      SPECCHAR,DIM70                * Scan the Input Line for
          GOTO      MOD8000 IF NOT EQUAL          * a "%" sign
.
MOD3000   MOVEFPTR  DIM70,PERCPOS
          BUMP      DIM70,-1                      * Go to the character before
.                                                 * the "%" sign
          GOTO      MOD3100 IF NOT EOS            * Test if the % sign is the
          RESET     DIM70,0                       * first character on the line
.                                                 * set f.p. to 0 if it is
MOD3100   MOVEFPTR  DIM70,ENDSTR                  * Store endstr at position
.                                                 * 1 char before the "%" sign
          COMPARE   STARTSTR,ENDSTR               * Ensure that end and start
          GOTO      MOD3200 IF NOT LESS           * positions don't overlap
.
          RESET     DIM70,STARTSTR                * Set pointer to start i.e
          GOTO      MOD9000 IF EOS                * to "%" if end < start
          GOTO      MOD3300
.
MOD3200   RESET     DIM70,STARTSTR                * Reset the pointers to 
          SETLPTR   DIM70,ENDSTR                  * extract text preceeding
.                                                 * the "%" sign
          APPEND    DIM70,PRTSTRNG                * Append preceeding text to
.                                                 * the print string
MOD3300   SETLPTR   DIM70,70                      * Set the pointers to start at
          RESET     DIM70,PERCPOS                 * "%" and go to position 70
          MOVE       DIM70,TEMP70                 * Delete preceeding text
          PACK       DIM70,TEMP70,SP30,SP30,SP30  * from the dim70 string
.
MOD4000   CALL      GETV0000                      * Call the extraction routine
.                                                 * to get the % variable
          MOVEFPTR  DIM70,STARTSTR                * Store finish pos of var.
          BRANCH    EXIT,MOD5000
          RESET     SRCHVAR
          SEARCH    SRCHVAR,LCADDA,NINETY4,SRCHNUM  * Search the list of const.
          COMPARE   ZERO,SRCHNUM                   * Exit if not a % variable
          GOTO      MOD5000 IF EQUAL
          COMPARE   SIX,OPTION
          GOTO      MOD4100 IF NOT EQUAL
.
          COMPARE   SRCHNUM,TEN1
          GOTO      MOD7000 IF EQUAL
.
MOD4100
.
.  -----  Load the maximum length of the variable into the print string -----
.
          LOAD      DISPSTRN,SRCHNUM,LXADDA,LXADDB,LXADDD,LXBKTYPE,LXDATE,LXDOCT:
                                     LXEXDATE,LXEXTIME,LXFNAME,LXGNAME:
                                     LXLSTDAT,LXPAGE,LXPASDTE,LXPASTME,LXPCODE:
                                     LXPHONE,LXPRFACC,LXPRODES,LXRESACC:
                                     LXRESADA,LXRESADB,LXRESPCD,LXRESSUB,LXRESADD:
                                     LXREVDTE,LXSNAME,LXSUBURB,LXTITLE:
                                     LXUNIT,LXURNO,LXDEPT,LXRDADA,LXRDADB:
                                     LXKNNAME,LXNKADD1,LXNKADD2,LXNKADD3:
                                     LXNKADD4,LXNKPOST,LXGPSNAM,LXGPGNAM:
                                     LXGPADD1,LXGPADD2,LXGPADD3,LXGPADD4:
                                     LXGPPOST,LXRGPSNM,LXRGPGNM,LXRGPAD1:
                                     LXRGPAD2,LXRGPAD3,LXRGPAD4,LXRGPPST:
                                     LXDADTE,LXGADDTE,LXDNAB,LXNAFDTE:
                                     LXNATDTE,LXEADTD,LXVISIT,LXHSPNAM:
                                     LXHSPAD1,LXHSPAD2,LXHSPAD3,LXHSPAD4:
                                     LXHSPOST,LXHSPHON,LXRGPRNM,LXRGPRA1:
                                     LXRGPRA2,LXRGPRA3,LXRGPRA4,LXRGPRPC:
                                     LXRGPRPH,LXRFPRNM,LXRFPRA1,LXRFPRA2:
                                     LXRFPRA3,LXRFPRA4,LXRFPRPC,LXRFPRPH:
                                     LXPTYCOD,LXPTYDES,LXCELL,LXPADDA,LXPADDB:
                                     LXPADDC,LXPADDD,LXPPOST,LXUDEF5,LXUDEF6:
                                     LXUDEF7,LXUDEF8,LXPRANK
.
          APPEND    DISPSTRN,PRTSTRNG             * Add the full description 
          GOTO      MOD8000 IF EOS                * to the print string
          GOTO      MOD2000
.
MOD5000   RESET     SRCHVAR                       * Add the string starting with
          APPEND    SRCHVAR,PRTSTRNG              * a % if not found in the 
          GOTO      MOD2000                       * variable list
.
MOD7000   PRINT     *N;
          COMPARE   COUNT,PHYSPAGE
          GOTO      MOD7100 IF EQUAL
          ADD       ONE,COUNT
          GOTO      MOD7000
.
MOD7100   MOVE      ZERO,COUNT
.
MOD7400   ADD       ONE,COUNT
          COMPARE   COUNT,TOPMARG
          GOTO      MOD7500 IF EQUAL
          GOTO      MOD7500 IF LESS
          PRINT     *N;
          GOTO      MOD7400
.
MOD7500   GOTO      MOD9999
.
MOD8000   APPEND    DIM70,PRTSTRNG                * Add remaining text to print
.                                                 * string if no "%" signs left
MOD9000   MOVE      FALSE,EXIT
.
MOD9999   RETURN
+
.********************************************************************** 
.*    GETV0000 - GETS A LETTER VARIABLE FROM TEXT AFTER THE SCAN      *
.**********************************************************************
.
GETV0000  MOVE      FALSE,EXIT
          PACK      SRCHVAR,SP30,SP30,SP10
          RESET     SRCHVAR,0
          MOVE      DIM70,ANS
          APPEND    ANS,SRCHVAR
          RESET     SRCHVAR,0
          BUMP      DIM70
          MOVE      DIM70,ANS
          REPLACE   REPSTR,ANS
          MATCH     "0",ANS
          GOTO      GETV9000 IF NOT EQUAL
          BUMP      DIM70,-1
          PACK      SRCHVAR,SP30,SP30,SP10
          RESET     SRCHVAR,0
GETV1000  MOVE      DIM70,ANS
          APPEND    ANS,SRCHVAR
          BUMP      DIM70
          GOTO      GETV9999 IF EOS
.
          MOVE      DIM70,ANS
          REPLACE   REPSTR,ANS
          MATCH     "0",ANS
          GOTO      GETV9999 IF NOT EQUAL
          GOTO      GETV1000
.
GETV9000  MOVE      TRUE,EXIT
.
GETV9999  RETURN
+
.****************************************************************************
.*              DISPLAY AND UPDATE THE PARAMETERS OF THE LETTER             *
.****************************************************************************
.
DETL0000  DISPLAY   *P1:5,*EF:
                    *P1:5,"   Name                :":
                    *P1:6,*V2LON,"1",*HOFF,". Paper Page Length   :":
                    *P1:7,*V2LON,"2",*HOFF,". Top Margin Size     :":
                    *P1:8,*V2LON,"3",*HOFF,". Bottom Margin Size  :":
                    *P1:9,*V2LON,"4",*HOFF,". Left Margin Size    :";
.
          DISPLAY   *P26:5,*V2LON:
                    *P26:5,LETTNAME:
                    *P26:6,WLETPPAG:
                    *P27:7,WLETPTOP:
                    *P27:8,WLETPBOT:
                    *P27:9,WLETPTAB;
.
          RETURN
+
.****************************************************************************
.*              SET UP THE TEMP FILE AND CALL THE WORD PROCESSOR            *
.****************************************************************************
.
UPDT0000  MOVE      TMPLETNO,WLETNO
          MOVE      ZERO,WLINNO
          MOVE      LETTNAME,WLTEXT
          CALL      RDALET1
          CALL      UPLET1
.
. ------  Set up the Header for the Word Processor -----
.
          DISPLAY   *P1:6,*EF
          PREP      TEMP1,TFILNAME
.
.************************************************************ 
.*  read in the old call details from WATLETR to tempsoln   *
.************************************************************
.
UPDT1000  MOVE      ONE,LINENO               * Reads in the previous letter
          MOVE      ZERO,MAXLINES            * details from the WATLETR file
          PACK      KEY6,TMPLETNO,LINENO     * based on the Letter No. entered.
          CALL      RDLET1                   * The MAXLINES variable is used
          COMPARE   ONE,OVRCD                * keep a count of the no. of lines
          GOTO      UPDT2999 IF EQUAL        * of text read from the WATLETR
.
UPDT2000  WRITE     TEMP1,SEQ;WLTEXT         * file.
          ADD       ONE,MAXLINES             * The data is loaded into the 
          PACK      WLTEXT,SP30,SP30,SP10    * temp file for use by the word
          CALL      RDKLET1                  * processor.
          COMPARE   ONE,OVRCD
          GOTO      UPDT2999 IF EQUAL
.
          COMPARE   TMPLETNO,WLETNO
          GOTO      UPDT2999 IF NOT EQUAL
          GOTO      UPDT2000
.
.        execute the word processor   
.
UPDT2999  MOVE      ZERO,WORDMODE
          CLOSE     TEMP1
          WORD      TFILNAME,99,4,7,76,23,WORDMODE
.
UPDT3000  CALL      POSTQST
          BRANCH    CEXIT,UPDT3050,UPDT3999,UPDT3999
.
UPDT3050  CLOSE     TEMP1                    * Reads the new call details out
          OPEN      TEMP1,TFILNAME           * of the temp file and puts them
          MOVE      ZERO,LINENO               * back into the MAWLETR file.
          MOVE      TMPLETNO,WLETNO          * Records are updated if the key
                                             * exists or are written if the 
.
UPDT3100  PACK      DIM70,SP30,SP30,SP10     * key dosen't exist.
          PACK      WLTEXT,SP30,SP30,SP10
          MOVE      ZERO,WLVAR
          READ      TEMP1,SEQ;DIM70          
          GOTO      UPDT3700 IF OVER 
.
          ADD       ONE,LINENO
          SCAN      SPECCHAR,DIM70
          GOTO      UPDT3150 IF NOT EQUAL
          MOVE      ONE,WLVAR
.
UPDT3150  SETLPTR   DIM70,70                
          RESET     DIM70                  
          MOVE      LINENO,WLINNO
          PACK      KEY6,WLETNO,WLINNO    
          CALL      RDALET1              
          COMPARE   ZERO,OVRCD
          GOTO      UPDT3200 IF EQUAL
          MOVE      DIM70,WLTEXT
          CALL      WRLET1
          GOTO      UPDT3100
.
UPDT3200  MOVE      DIM70,WLTEXT
          CALL      UPLET1
          GOTO      UPDT3100
.
UPDT3700  COMPARE   MAXLINES,LINENO          * This loop acts to delete any
          GOTO      UPDT3999 IF NOT LESS     * lines of text which are 
          PACK      KEY6,WLETNO,MAXLINES     * extra information left from
          DELETE    WATLETR1,KEY6            * the previous call details.
          SUB       ONE,MAXLINES
          GOTO      UPDT3700                 * This is only performed if
.
UPDT3999  RETURN                             * LINENO < MAXLINES
+
.**********************************************************************
.*          DEL0000 - Delete a Letter from the Letter File            *
.**********************************************************************
.
DEL0000   MOVE      FALSE,EXIT
          CALL      DELQST
.
          BRANCH    CEXIT,DEL1000,DEL8000,DEL9000
          MATCH     "D",ANS
          GOTO      DEL1000 IF EQUAL
.
          MATCH     "E",ANS
          GOTO      DEL9000 IF EQUAL
          GOTO      DEL0000
.
DEL1000   MOVE      ZERO,FORM3
          PACK      KEY6,TMPLETNO,FORM3
          CALL      DELLET1
DEL2000   ADD       ONE,FORM2
          PACK      KEY6,TMPLETNO,FORM3
          CALL      RDLET1
          BRANCH    OVRCD,DEL9999
          CALL      DELLET1
          GOTO      DEL2000
.
DEL8000   MOVE      ONE,EXIT
          GOTO      DEL9999
.
DEL9000   MOVE      TWO,EXIT
.
DEL9999   RETURN
+
.**********************************************************************
.*          PRT0000 - Print the Verified Version of the Letter        *
.**********************************************************************
.
PRT0000
PRT0200   DISPLAY   *P1:24,"Printing Letter : ",*V2LON,LETTNAME,*HOFF:
                    SP1,*V2LON,*BLINKON,"- Please Wait";
.
          MOVE      FALSE,EXIT
          MOVE      ZERO,FORM2
          MOVE      ZERO,COUNT
          PACK      KEY6,TMPLETNO,FORM3
          CALL      RDLET1
          MOVE      WLETPPAG,PHYSPAGE
          MOVE      WLETPBOT,BOTMARG
          MOVE      WLETPTOP,TOPMARG
          SUB       WLETPBOT,WLETPPAG
          MOVE      WLETPPAG,LSTPRINT
.
PRT0050   ADD       ONE,COUNT
          COMPARE   COUNT,TOPMARG
          GOTO      PRT1000 IF LESS
          PRINT     *N;
          GOTO      PRT0050
.
PRT1000   CALL      RDKLET1
          BRANCH    OVRCD,PRT9000
          COMPARE   WLETNO,TMPLETNO
          GOTO      PRT9000 IF NOT EQUAL
.
          BRANCH    WLVAR,PRT2000
          PRINT     *N,*LEFTMARG,WLTEXT;
          GOTO      PRT3000
.
PRT2000   MOVE      WLTEXT,DIM70
          CALL      MOD0000
          PRINT     *N,*LEFTMARG,PRTSTRNG;
.
PRT3000   ADD       ONE,COUNT
          COMPARE   COUNT,LSTPRINT
          CALL      PGE0000 IF LESS
          GOTO      PRT1000
.
PRT9000   PRINT     *N;
          COMPARE   PHYSPAGE,COUNT
          GOTO      PRT9999 IF EQUAL
          GOTO      PRT9999 IF NOT LESS
          ADD       ONE,COUNT
          GOTO      PRT9000
.
PRT9999   DISPLAY   *P1:24,*EL;
          RETURN
+
.**********************************************************************
.*                              PGE0000                              *
.*        Routine to paginate if a new page is required               *
.**********************************************************************
PGE0000   MOVE       WLETNO,FORM3
          MOVE       WLINNO,FORM3A
          CALL       RDKLET1
          BRANCH     OVRCD,PGE8000
.
          COMPARE    TMPLETNO,WLETNO
          GOTO       PGE8000 IF NOT EQUAL
.
          MOVE       TOPMARG,TEMP2
          ADD        BOTMARG,TOPMARG
          MOVE       ONE,COUNT
.
PGE1000   PRINT      *N;
          COMPARE    COUNT,TOPMARG
          GOTO       PGE9000 IF EQUAL
.
          ADD        ONE,COUNT
          GOTO       PGE1000
.
PGE8000   PACK       KEY6,FORM3,FORM3A 
          CALL       RDLET1
          GOTO       PGE9999
.
PGE9000   MOVE       TEMP2,COUNT
          ADD        ONE,COUNT
          MOVE       TEMP2,TOPMARG
          PACK       KEY6,FORM3,FORM3A
          CALL       RDLET1
.
PGE9999  RETURN
+
.**********************************************************************
.*          I/O INCLUDES FOR THE EXTERNAL ROUTINES                    *
.**********************************************************************
.
          INC       WATLETIO/INC
          INC       STD001IO
          INC       TFILENAM
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
.

