.******************************************************************************
.* System   :  PATIENT MANAGEMENT                                             *
.* Program  :  IBAPMS09                                                       *
.* Desc     :  Length of Stay Reports                                         *
.******************************************************************************
.* Date     :  23/05/1991                                                     *
.* Author   :  DIG                                                            *
.* Mods     :                                                                 *
.*        V10.00.01  Mike Laming   CAR 157391                                 *
.*                   Recompiled for changes to PATEX1FD.                      *
.******************************************************************************
.*        V5.08.04  25/10/2000  Dean Cramer   SRF 6710                        *
.*                  Recomplied for PATFNDDS                                   *
.*                  Changed for health fund table code size increase to       *
.*                  8 characters                                              *
.*        V5.08.03  16/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.02  16/08/2000  Jill Habasque                                 *
.*                  Fixed keyin of health fund after ? search                 *
.*        V5.08.01  06/06/2000  Tonii                                         *
.*                  Changed from KEY10 to KEY14 for the health fund file      *
.******************************************************************************
.*        V5.07.02  19/10/1999  Steve Downing  SRF 646137                     *
.*                  Added PTCNDCQS - Single column for doctor code search     *
.*        V5.07.01  06/05/1998   J.Tan                                        *
.*                  Changed record length of patextbf file                    *
.*        V5.01.02  16/09/1991  DIG               SRF 110659                  *
.*                  Changed FORM8P2 variable to FORM12P4 to handle huge       *
.*                  financial figures                                         *
.*        V5.01.03  10/01/1992  i chung           SRF 111475                  *
.*                  Fixed heading and page break problems                     *
.*        V5.01.04  28/02/1992  i chung           SRF 112616                  *
.*                  Highlights chosen Extraction File                         *
.*        V5.01.05  15/01/93  J.Tan      SRF 119867                           *
.*                  Recompiled for PATEXCIO                                   *
.*        V5.01.06  11/06/93  J.Tan      SRF 121660                           *
.*                  Recompiled for PATWRDDS (check for active wards)          *
.*        V5.01.07  06/07/1993  i chung           SRF 122698/122840           *
.*                  Remove temp files after printing report                   *
.*        V5.01.08  15/07/93  WHIRLPOOL        SRF 123030                     *
.*                  Dudley postcode changes                                   *
.*        V5.01.09  25/05/1994 Ian Rutt                                       *
.*                  Fixed Global Recompile Bugs                               * 
.*        V5.01.10  28/09/1994  bez              SRF 131952                   * 
.*                  Fixed  F * I                                              *
.*        V5.04.01  26/06/1997  Howellsy         505                          *
.*                  Use PATDOCKY instead of PATDOCDS                          *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       PATCALAG/INC
.
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDO1FD/INC
          INC       PATEX1FD/INC
          INC       PATEXBFD/INC
          INC       PATEXCFD/INC
          INC       PATFN1FD/INC
          INC       PATWR1FD/INC
+
.**********************************************************************
.*                            TEMP FILES                              *
.**********************************************************************
PATTM1XX  IFILE     SQL, FIXED=15, KEY="U1-3,4-5"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMPCODE   DIM       3         3          1        Codes file code/Ward code
DTMPLOS   DIM       2         2          4        Length of Stay
.                                                  - Day Cases = "1"
.                                                  - LOS >= 66 will be set to 66
.                                                  - 99 = Totals record
TMPDSCH   FORM      6         4          6        Number of Discharges
TMPBDAYS  FORM      8         5         10        Number of Bed Days
.End of Record                          15
.
. redefine form field from key
. ----------------------------
. NAME    TYPE    LENGTH   START LOC.   DESCRIPTION
. ----    ----    ------   ----------   -----------
TMPLOS    FORM      2         4         Length of Stay
.
.
PATTM2XX  IFILE     SQL, FIXED=21, KEY="U1-3,4-9,10-11"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
.TMPCODE  DIM       3         3          1        Codes file code
TMPFUND   DIM       6         6          4        Health Fund code
.DTMPLOS  DIM       2         2         10        Length of Stay
.                                                  - Day Cases = "1"
.                                                  - LOS >= 66 will be set to 66
.                                                  - 99 = Totals record
.TMPDSCH  FORM      6         4         12        Number of Discharges
.TMPBDAYS FORM      8         5         16        Number of Bed Days
.End of Record                          21
.
. redefine form field from key
. ----------------------------
. NAME    TYPE    LENGTH   START LOC.   DESCRIPTION
. ----    ----    ------   ----------   -----------
.TMPLOS   FORM      2         10        Length of Stay
.
.
PATTM3XX  IFILE     SQL, FIXED=14, KEY="U1-2,3-4"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMPAGEGP  DIM       2         2          1        Age Group (Based on system
.                                                            parameters)
.DTMPLOS  DIM       2         2          3        Length of Stay
.                                                  - Day Cases = "1"
.                                                  - LOS >= 66 will be set to 66
.                                                  - 99 = Totals record
.TMPDSCH  FORM      6         4          5        Number of Discharges
.TMPBDAYS FORM      8         5          9        Number of Bed Days
.End of Record                          14
.
. redefine form field from key
. ----------------------------
. NAME    TYPE    LENGTH   START LOC.   DESCRIPTION
. ----    ----    ------   ----------   -----------
.TMPLOS   FORM      2         3         Length of Stay
.
.
PATTM4XX  IFILE     SQL, FIXED=15, KEY="U1-2,3-3,4-5"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
.TMPAGEGP DIM       2         2          1        Age Group (Based on system
.                                                            parameters)
TMPSEX    DIM       1         1          3        Sex (M or F)
.DTMPLOS  DIM       2         2          4        Length of Stay
.                                                  - Day Cases = "1"
.                                                  - LOS >= 66 will be set to 66
.                                                  - 99 = Totals record
.TMPDSCH  FORM      6         4          6        Number of Discharges
.TMPBDAYS FORM      8         5         10        Number of Bed Days
.End of Record                          15
.
. redefine form field from key
. ----------------------------
. NAME    TYPE    LENGTH   START LOC.   DESCRIPTION
. ----    ----    ------   ----------   -----------
.TMPLOS   FORM      2         4         Length of Stay
.
.
PATTM5XX  IFILE     SQL, FIXED=18, KEY="U1-6,7-8"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMPDOCT   DIM       6         6          1        Attending Doctor code
.DTMPLOS  DIM       2         2          7        Length of Stay
.                                                  - Day Cases = "1"
.                                                  - LOS >= 66 will be set to 66
.                                                  - 99 = Totals record
.TMPDSCH  FORM      6         4          9        Number of Discharges
.TMPBDAYS FORM      8         5         13        Number of Bed Days
.End of Record                          18
.
. redefine form field from key
. ----------------------------
. NAME    TYPE    LENGTH   START LOC.   DESCRIPTION
. ----    ----    ------   ----------   -----------
.TMPLOS   FORM      2         4         Length of Stay
.
.
PATTM6XX  IFILE     SQL, FIXED=38, KEY="U1-3"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
.TMPCODE  DIM       3         3          1        Codes file code/Ward code
.TMPDSCH  FORM      6         4          4        Number of Discharges
.TMPBDAYS FORM      8         5          8        Number of Bed Days
TMPDCASE  FORM      8         5         13        Number of Day Cases
TMPLOSR1  FORM      8         5         18        Bed Days in LOS range 1
TMPLOSR2  FORM      8         5         23        Bed Days in LOS range 2
TMPLOSR3  FORM      8         5         28        Bed Days in LOS range 3
TMPLOSR4  FORM      8         5         33        Bed Days in LOS range 4
.End of Record                          38
.
.
PATTM7XX  IFILE     SQL, FIXED=44, KEY="U1-3,4-9"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
.TMPCODE  DIM       3         3          1        Codes file code/Ward code
.TMPFUND  DIM       6         6          4        Health Fund code
.TMPDSCH  FORM      6         4         10        Number of Discharges
.TMPBDAYS FORM      8         5         14        Number of Bed Days
.TMPDCASE FORM      8         5         19        Number of Day Cases
.TMPLOSR1 FORM      8         5         24        Bed Days in LOS range 1
.TMPLOSR2 FORM      8         5         29        Bed Days in LOS range 2
.TMPLOSR3 FORM      8         5         34        Bed Days in LOS range 3
.TMPLOSR4 FORM      8         5         39        Bed Days in LOS range 4
.End of Record                          44
.
.
PATTM8XX  IFILE     SQL, FIXED=37, KEY="U1-2"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
.TMPAGEGP DIM       2         2          1        Age Group (Based on system
.                                                            parameters)
.TMPDSCH  FORM      6         4          3        Number of Discharges
.TMPBDAYS FORM      8         5          7        Number of Bed Days
.TMPDCASE FORM      8         5         12        Number of Day Cases
.TMPLOSR1 FORM      8         5         17        Bed Days in LOS range 1
.TMPLOSR2 FORM      8         5         22        Bed Days in LOS range 2
.TMPLOSR3 FORM      8         5         27        Bed Days in LOS range 3
.TMPLOSR4 FORM      8         5         32        Bed Days in LOS range 4
.End of Record                          37
.
.
PATTM9XX  IFILE     SQL, FIXED=38, KEY="U1-2,3-3"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
.TMPAGEGP DIM       2         2          1        Age Group (Based on system
.                                                            parameters)
.TMPSEX   DIM       1         1          3        Sex (M or F)
.TMPDSCH  FORM      6         4          4        Number of Discharges
.TMPBDAYS FORM      8         5          8        Number of Bed Days
.TMPDCASE FORM      8         5         13        Number of Day Cases
.TMPLOSR1 FORM      8         5         18        Bed Days in LOS range 1
.TMPLOSR2 FORM      8         5         23        Bed Days in LOS range 2
.TMPLOSR3 FORM      8         5         28        Bed Days in LOS range 3
.TMPLOSR4 FORM      8         5         33        Bed Days in LOS range 4
.End of Record                          38
.
.
PATTM10X  IFILE     SQL, FIXED=41, KEY="U1-6"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
.TMPDOCT  DIM       6         6          1        Attending Doctor code
.TMPDSCH  FORM      6         4          7        Number of Discharges
.TMPBDAYS FORM      8         5         11        Number of Bed Days
.TMPDCASE FORM      8         5         16        Number of Day Cases
.TMPLOSR1 FORM      8         5         21        Bed Days in LOS range 1
.TMPLOSR2 FORM      8         5         26        Bed Days in LOS range 2
.TMPLOSR3 FORM      8         5         31        Bed Days in LOS range 3
.TMPLOSR4 FORM      8         5         36        Bed Days in LOS range 4
.End of Record                          41
+
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
AGECAT    FORM      2
AGEFROM   DIM       3
AGETO     DIM       3
AFUNDH    DIM       6                       * required by PATFNDDS (PATDSFN2)
.
CATEGORY  DIM       2
CURCODE   DIM       3
CMDLINE   DIM       50
CODE      DIM       2
COUNT     FORM      2
.
DIM3      DIM       3
DIM20     DIM       20
DESCCOD1  DIM       20
DESCCOD2  DIM       20
DESCCODE  DIM       20
DESCDOC1  DIM       26
DESCDOC2  DIM       26
DESCFND1  DIM       30
DESCFND2  DIM       30
DESCFUND  DIM       30
DOCTNAM   DIM       26
.
EXCDATE   DIM       10
EXFDATE   DIM       10
EXTDATE   DIM       10
.
FINISH    DIM       6
FINISFND  DIM       6
FLAGDATA  FORM      1
FLAGFRST  FORM      1
FLAGFUND  FORM      1
FNAMEB    DIM       8
FNAMEC    DIM       8
FORM3     FORM      3
FORM8     FORM      8
FORM12P4  FORM      12.4
.
GNDALOS   FORM      3.2
GNDDSCH   FORM      8
GNDBDAYS  FORM      8
GNDCUMBD  FORM      8
GNDCUMPC  FORM      3.2
GNDDCASE  FORM      8
GNDDCLOS  FORM      3.2
GNDLOS    FORM      3.2
GNDLOSDC  FORM      3.2
GNDLOSR1  FORM      8
GNDLOSR2  FORM      8
GNDLOSR3  FORM      8
GNDLOSR4  FORM      8
.
HEADER    DIM       30
.
LOSRNG1   FORM      3
LOSRNG2   FORM      3
LOSRNG3   FORM      3
LOSRNG4   FORM      3
LOSRNG5   FORM      3
LOSRNG6   FORM      3
.
MAXOPTN   FORM      2
.
PRTAGEGP  DIM       11
PRTAGESX  DIM       22
PRTCODE   DIM       3
PRTDOCT   DIM       6
PRTDOCDS  DIM       26
PRTHEAD   DIM       33
PRTLOS    DIM       8
.
RANGCOD1  DIM       3
RANGCOD2  DIM       3
RANGDOC1  DIM       6
RANGDOC2  DIM       6
RANGENUM  FORM      1
RANGFND1  DIM       6
RANGFND2  DIM       6
RECTYPE   DIM       1
REPTYPE   FORM      1
.
SAVAGEGP  DIM       2
SAVCODE   DIM       3
SAVKEY4   DIM       4
SAVKEY5   DIM       5
SAVKEY8   DIM       8
SAVKEY11  DIM       11
SAVOPTN   FORM      2
SEC       FORM      2
START     DIM       6
STARTFND  DIM       6
SUBALOS   FORM      3.2
SUBLOS    FORM      3.2
SUBBDAYS  FORM      8
SUBCUMBD  FORM      8
SUBCUMPC  FORM      3.2
SUBDCASE  FORM      8
SUBDCLOS  FORM      3.2
SUBDSCH   FORM      8
SUBLOSDC  FORM      3.2
SUBLOSR1  FORM      8
SUBLOSR2  FORM      8
SUBLOSR3  FORM      8
SUBLOSR4  FORM      8
.
TEMPFILE  DIM       8
TMPDAYS   FORM      8
TMPCUMBD  FORM      8
TOTBDAYS  FORM      8
.
USECODE   FORM      2                       * 1 = Admission Type
.                                             2 = Care Class
.                                             3 = Claim Code
.                                             4 = Source of Referral
.                                             5 = Discharge Status
.                                             6 = Discharge Destination
.                                             7 = Patient Category
.                                             8 = Account Classification/Dept
.                                             9 = Admission User Defined 1
.                                            10 = Admission User Defined 2
.                                            11 = Admission User Defined 3
.                                            12 = Admission User Defined 4
.                                            13 = Admission User Defined 5
.                                            14 = Admission User Defined 6
.                                            15 = Admission User Defined 7
.                                            16 = Discharge User Defined 1
.                                            17 = Discharge User Defined 2
.                                            18 = Discharge User Defined 3
.                                            19 = Discharge User Defined 4
.                                            20 = Discharge User Defined 5
VERT      FORM      2
+
.**********************************************************************
.*                             CONSTANTS                              *
.**********************************************************************
CODEA     INIT      "A "
CODEAC    INIT      "AC"
CODECC    INIT      "CC"
CODECL    INIT      "CL"
CODED1    INIT      "D1"
CODED2    INIT      "D2"
CODED3    INIT      "D3"
CODED4    INIT      "D4"
CODED5    INIT      "D5"
CODED     INIT      "D "
CODEDD    INIT      "DD"
CODEP     INIT      "P "
CODES     INIT      "S "
CODEU1    INIT      "U1"
CODEU2    INIT      "U2"
CODEU3    INIT      "U3"
CODEU4    INIT      "U4"
CODEU5    INIT      "U5"
CODEU6    INIT      "U6"
CODEU7    INIT      "U7"
.
DETAILED  INIT      " - Detailed Report"
DOCCODE   DIM       6
.
FILEEXTB  INIT      "patexb"
FILEEXTC  INIT      "patexc"
.
HEAD1     INIT      "Admission Type"
HEAD2     INIT      "Care Class"
HEAD3     INIT      "Claim Code"
HEAD4     INIT      "Source of Referral"
HEAD5     INIT      "Age "
HEAD6     INIT      "Age & Sex "
HEAD7     INIT      "Attending Doctor"
HEAD8     INIT      "Discharge Ward"
HEAD9     INIT      "Discharge Status"
HEAD10    INIT      "Discharge Destination"
HEAD11    INIT      "Patient Category"
.
NINETY9   FORM      "99"
.
SUMMARY   INIT      " - Summary Report"
.
ZERO4     INIT      "0000"
ZERO8     INIT      "0000    "
.
PRGID     INIT      "IBAPMS09"
PRGNAM    INIT      "Length Of Stay Reports"
VERSION   INIT      "V12.00.00"
+
.**********************************************************************
.*                           MAINLINE                                 *
.*                       Controlling Logic                            *
.**********************************************************************
ML0000    CALL      INIT0000                * initialization - display header &
.                                                              open files
ML1000    CALL      OPTN0000                * main option screen
          BRANCH    EXIT,ML9999
.
          CALL      GEXT0000                * get the extraction files for the
          BRANCH    EXIT,ML1000               report
.
ML1300    CALL      REPT0000                * select report type
          BRANCH    EXIT,ML1000
.
ML1500    BRANCH    REPTYPE,ML1600,ML1800
.
ML1600    CALL      RANG0000                * enter the code range
          BRANCH    EXIT,ML1000
.
ML1800    CALL      CONTQST                 * see if ok to continue !
          BRANCH    CEXIT,ML2000,ML1500,ML1300
.
.------ It is okay to continue ------
.
ML2000    CALL      CREA0000                * create the temporary file
          CALL      CLR0000                 * clear the temp file data vars
          CALL      LOAD0000                * load the temp file
          CALL      PRNT0000                * print the report
          CALL      KILL0000                * delete temp files after printing
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.**********************************************************************
.*                           INIT0000                                 *
.*               Open files and display header                        *
.**********************************************************************
INIT0000  CALL      DISPHEAD                * display screen header
.
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
          OPEN      PATDO1A2,"patdo1af"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
          OPEN      PATWR1A3,"patwr1af"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,TEN3;*167,BRSTAY1,BRSTAY2,BRSTAY3,*216,CUSR1:
                                  *229,CUSR2,*243,CACCLSS
          READ      CONTROLF,TEN5;*233,CUSR3
          READ      CONTROLF,TEN8;*17,CUSR4,*31,CUSR5,*45,CUSR6,*59,CUSR7:
                                  *73,CDUSR1,*87,CDUSR2,*101,CDUSR3:
                                 *115,CDUSR4,*129,CDUSR5
          READ      CONTROLF,TWENTY;*92,PTCNAF01,PTCNAF02,PTCNAF03,PTCNAF04:
                                        PTCNAF05,PTCNAF06,PTCNAF07,PTCNAF08:
                                        PTCNAF09,PTCNAF10,PTCNAF11,PTCNAF12:
                                        PTCNAT01,PTCNAT02,PTCNAT03,PTCNAT04:
                                        PTCNAT05,PTCNAT06,PTCNAT07,PTCNAT08:
                                        PTCNAT09,PTCNAT10,PTCNAT11,PTCNAT12
          READ      CONTROLF,TWENTY1;*247,PTCNDCQS
.
          MOVE      ONE,CNEWDS              * set new standard for ? options
.
INIT9999  RETURN
+
.**********************************************************************
.*                               CLR0000                              *
.*          Clear all working variables from the temp files           *
.**********************************************************************
CLR0000   MOVE      ZERO,TMPDSCH
          MOVE      ZERO,TMPBDAYS
          MOVE      ZERO,TMPDCASE
          MOVE      ZERO,TMPLOSR1
          MOVE      ZERO,TMPLOSR2
          MOVE      ZERO,TMPLOSR3
          MOVE      ZERO,TMPLOSR4
CLR9999   RETURN
+
.**********************************************************************
.*                           OPTN0000                                 *
.*                   Display the main option screen                   *
.**********************************************************************
OPTN0000  MOVE      FALSE,EXIT
          HLINE     *G37,2,51,80
          DISPLAY   *P1:4,*EF:
                   *P2:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P2:5,*V2LON,ONE,*HOFF," = L.O.S. By Admission Type":
                    *P2:6,*V2LON,TWO,*HOFF," = L.O.S. By Care Class":
                  *P2:7,*V2LON,THREE,*HOFF," = L.O.S. By Claim Code":
                   *P2:8,*V2LON,FOUR,*HOFF," = L.O.S. By Source of Referral":
                   *P2:9,*V2LON,FIVE,*HOFF," = L.O.S. By Age ":
                   *P2:10,*V2LON,SIX,*HOFF," = L.O.S. By Age & Sex":
                 *P2:11,*V2LON,SEVEN,*HOFF," = L.O.S. By Attending Doctor":
                 *P2:12,*V2LON,EIGHT,*HOFF," = L.O.S. By Discharge Ward":
                  *P2:13,*V2LON,NINE,*HOFF," = L.O.S. By Discharge Status":
                   *P1:14,*V2LON,TEN,*HOFF," = L.O.S. By Discharge Destination":
                  *P1:15,*V2LON,TEN1,*HOFF," = L.O.S. By Patient Category";
.
          MOVE      TEN1,MAXOPTN
          MOVE      FIVE,CVERT
          MOVE      TEN2,OPTION
          MOVE      ONE,COUNT
.
.------ test the user defined fields ------
.
OPTN0100  LOAD      FORM1,COUNT,CACCLSS,CUSR1,CUSR2,CUSR3,CUSR4,CUSR5,CUSR6:
                                CUSR7,CDUSR1,CDUSR2,CDUSR3,CDUSR4,CDUSR5
.
          COMPARE   ONE,FORM1               * see if the user defined field 
          GOTO      OPTN0500 IF NOT EQUAL     is turned on
.
          LOAD      CATEGORY,COUNT,CODEAC,CODEU1,CODEU2,CODEU3,CODEU4,CODEU5:
                                   CODEU6,CODEU7,CODED1,CODED2,CODED3,CODED4:
                                   CODED5
.
          MOVE      SP20,TDESC
          PACK      KEY5,CATEGORY,SP3
          CALL      RDCODE1                 * read the patient codes file
.
          MOVE      TDESC,DIM20
          DISPLAY   *P41:CVERT,*V2LON,OPTION,*HOFF," = L.O.S. By ",DIM20;
          MOVE      OPTION,MAXOPTN
          ADD       ONE,CVERT
          ADD       ONE,OPTION
.
.------ increment the counter and see if there are no more user defined ------
.------ fields ------
.
OPTN0500  ADD       ONE,COUNT
          COMPARE   TEN4,COUNT              * try next user defined field if
          GOTO      OPTN0100 IF NOT EQUAL     appropriate
.
.------ select option ------
.
OPTN1000  MOVE      ZERO,OPTION
          DISPLAY   *P1:19,*EL,"Select Option : ",UNDLN2;
          KEYIN     *P17:19,*V2LON,*RV,OPTION;
.
          COMPARE   ZERO,OPTION             * see if an option has been chosen
          GOTO      OPTN9000 IF EQUAL
.
          COMPARE   OPTION,MAXOPTN          * make sure we have a valid option
          GOTO      OPTN2000 IF NOT LESS
          BEEP
          GOTO      OPTN1000
.
.------ valid option chosen ------
.
OPTN2000  MOVE      "L.O.S. By ",HEADER
          MOVE      "By ",PRTHEAD
          ENDSET    HEADER
          ENDSET    PRTHEAD
.
          COMPARE   TEN2,OPTION             * see if a user defined field has
          GOTO      OPTN2050 IF NOT LESS      been chosen
.
          LOAD      DIM20,OPTION,HEAD1,HEAD2,HEAD3,HEAD4,HEAD5,HEAD6,HEAD7:
                                 HEAD8,HEAD9,HEAD10,HEAD11
.
          LOAD      CATEGORY,OPTION,CODEA,CODECC,CODECL,CODES,SP2,SP2,SP2,SP2:
                                    CODED,CODEDD,CODEP
.
          LOAD      USECODE,OPTION,ONE,TWO,THREE,FOUR,ZERO,ZERO,ZERO,ZERO,FIVE:
                                   SIX,SEVEN
          GOTO      OPTN2600
.
.------ initialize the counters for getting the user defined field chosen -----
.
OPTN2050  MOVE      ONE,COUNT
          MOVE      TEN1,FORM2
.
.------ get the next user defined field parameter ------
.
OPTN2100  LOAD      FORM1,COUNT,CACCLSS,CUSR1,CUSR2,CUSR3,CUSR4,CUSR5,CUSR6:
                                CUSR7,CDUSR1,CDUSR2,CDUSR3,CDUSR4,CDUSR5
.
          COMPARE   ONE,FORM1               * skip if user defined field is not
          GOTO      OPTN2200 IF NOT EQUAL     turned on
          ADD       ONE,FORM2
.
          COMPARE   FORM2,OPTION            * see if we have the option chosen
          GOTO      OPTN2300 IF EQUAL
.
.------ increment the count and get try the next user defined field ------
.
OPTN2200  ADD       ONE,COUNT
          GOTO      OPTN2100
.
.------ we have the user defined option so set up the relevant fields ------
.
OPTN2300  LOAD      CATEGORY,COUNT,CODEAC,CODEU1,CODEU2,CODEU3,CODEU4,CODEU5:
                                   CODEU6,CODEU7,CODED1,CODED2,CODED3,CODED4:
                                   CODED5
.
          LOAD      USECODE,COUNT,EIGHT,NINE,TEN,TEN1,TEN2,TEN3,TEN4:
                                  TEN5,TEN6,TEN7,TEN8,TEN9,TWENTY
          MOVE      SP20,TDESC
          PACK      KEY5,CATEGORY,SP3
          CALL      RDCODE1                 * read the patient codes file
          MOVE      TDESC,DIM20
.
.------ display the screen header ------
.
OPTN2600  APPEND    DIM20,HEADER
          APPEND    DIM20,PRTHEAD
          RESET     HEADER
          STRIP     HEADER
          RESET     PRTHEAD
          RESET     HEADER
          DISPLAY   *P51:2,*V2LON,"- ",*+,HEADER,SP1;
          MOVE      OPTION,SAVOPTN
          GOTO      OPTN9999
.
.------ Exit option chosen ------
.
OPTN9000  MOVE      TRUE,EXIT
.
OPTN9999  RETURN
+
.**********************************************************************
.*                              REPT0000                              *
.*                  Select which report type to print                 *
.**********************************************************************
REPT0000  MOVE      FALSE,EXIT
          CALL      SCR0000                 * display screen
.
.------ keyin which report type is desired ------
.
REPT1000  MOVE      ZERO,REPTYPE
          DISPLAY   *P1:10,*EL,"Select Option : ",UNDLN1;
          KEYIN     *P17:10,*V2LON,*RV,REPTYPE;
.
          COMPARE   ZERO,REPTYPE            * see if exit has been chosen
          GOTO      REPT9000 IF EQUAL
.
          BRANCH    REPTYPE,REPT9999,REPT9999
          BEEP                              * invalid selection
          GOTO      REPT1000
.
.------ exit has been chosen ------
.
REPT9000  MOVE      TRUE,EXIT
.
REPT9999  RETURN
+
.**********************************************************************
.*                              SCR0000                               *
.*          Display screen format for choice of report types          *
.**********************************************************************
SCR0000   DISPLAY   *P1:4,*EF:
                    *P20:4,"Period : ",*V2LON,EXFDATE,*HOFF," To ",*V2LON:
                           EXTDATE:
                    *P1:6,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:7,*V2LON,ONE,*HOFF," = Detailed Report":
                    *P1:8,*V2LON,TWO,*HOFF," = Summary Report";
SCR9999   RETURN
+
.**********************************************************************
.*                              RANG0000                              *
.*          Enter the code range for the detailed report              *
.**********************************************************************
RANG0000  BRANCH    SAVOPTN,RANG1000,RANG1000,RANG2000,RANG1000,RANG9999:
                            RANG9999,RANG3000,RANG4000,RANG1000,RANG1000:
                            RANG1000,RANG1000,RANG1000,RANG1000,RANG1000:
                            RANG1000,RANG1000,RANG1000,RANG1000,RANG1000:
                            RANG1000,RANG1000,RANG1000,RANG1000
.
.------ enter code range for every option that uses a codes file code ------
.
RANG1000  CALL      RANA0000                * enter range for every option
          GOTO      RANG9999                  that uses a codes file code
.
.------ enter ranges for option 3 ------
.
RANG2000  CALL      RANA0000                * enter claim code range for 
          BRANCH    EXIT,RANG9999             option 3
.
          CALL      RANB0000                * enter health fund range for 
          GOTO      RANG9999                  option 3
.
.------ enter doctor range for option 7 ------
.
RANG3000  CALL      RANC0000                * enter doctor range for option 7
          GOTO      RANG9999
.
.------ enter ward range for option 8 ------
.
RANG4000  CALL      RAND0000                * enter ward range for option 8
.
RANG9999  RETURN
+
.**********************************************************************
.*                              RANA0000                              *
.* Enter range of codes for every option that uses a codes file code  *
.**********************************************************************
RANA0000  LOAD      CODE,USECODE,CODEA,CODECC,CODECL,CODES,CODED,CODEDD,CODEP:
                                 CODEAC,CODEU1,CODEU2,CODEU3,CODEU4,CODEU5:
                                 CODEU6,CODEU7,CODED1,CODED2,CODED3,CODED4:
                                 CODED5
.
.------ Keyin Code From ------
.
RANA0100  MOVE      SP3,RANGCOD1
          MOVE      SP30,DESCCOD1
          MOVE      "Start ",START
.
          DISPLAY   *P1:12,*EF,"Code From : ",UNDLN3:
                    *P1:13,"Code To   : ";
          KEYIN     *P13:12,*RV,*V2LON,RANGCOD1;
          DISPLAY   *P13:12,*V2LON,RANGCOD1;
.
          ENDSET    RANGCOD1
          APPEND    SP3,RANGCOD1
          RESET     RANGCOD1
.
          MATCH     SP3,RANGCOD1            * test for spaces
          GOTO      RANA1000 IF EQUAL
.
          CMATCH    QUEST,RANGCOD1          * test for "?"
          GOTO      RANA0500 IF NOT EQUAL   * no, not "?"
.
.       "?" option on codes
.
RANA0200  CALL      PATCODDS                * display all codes
          BRANCH    OVRCD,RANA9900
.
.       keyin Code From after "?" option 
.
RANA0250  MOVE      SP3,RANGCOD1
          MOVE      SP30,DESCCOD1
          DISPLAY   *P1:24,*EL,"Code From : ",UNDLN3;
          KEYIN     *P13:24,*V2LON,*RV,RANGCOD1;
          DISPLAY   *P13:24,*V2LON,RANGCOD1;
.
          ENDSET    RANGCOD1
          APPEND    SP3,RANGCOD1
          RESET     RANGCOD1
.
          CMATCH    QUEST,RANGCOD1          * test for "?"
          GOTO      RANA0200 IF EQUAL       * yes, "?" requested
.
          MATCH     SP3,RANGCOD1            * test for spaces
          GOTO      RANA0400 IF NOT EQUAL   * not spaces
          CALL      SCR0000                 * spaces - redisplay screen
.
          DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
                    *P1:12,"Code From : ",*P1:13,"Code To   : ";
          GOTO      RANA1000
.
.       code has been entered
.
RANA0400  PACK      KEY5,CODE,RANGCOD1
          MOVE      SP30,DESCCOD1
.
          CALL      RDCODE1                 * read patient codes file
          COMPARE   ZERO,OVRCD              * code on file ?
          GOTO      RANA0450 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Code is not on file **    ";
          CALL      HITENTER
          GOTO      RANA0250
.
RANA0450  MOVE      TDESC,DESCCOD1
          PACK      START,RANGCOD1,SP6
          CALL      SCR0000                 * redisplay screen
.
          DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
                    *P1:12,"Code From : ",*P1:13,"Code To   : ";
          GOTO      RANA1000
.
.       Code From has been entered
.
RANA0500  PACK      KEY5,CODE,RANGCOD1
          MOVE      SP30,DESCCOD1
.
          CALL      RDCODE1                 * read patient codes file
          COMPARE   ZERO,OVRCD              * code on file ?
          GOTO      RANA0600 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Code not on file **    ";
          CALL      HITENTER
          GOTO      RANA0000
.
.       code on file, so set up display variables
.
RANA0600  PACK      START,RANGCOD1,SP6
          MOVE      TDESC,DESCCOD1
.
.       display relevant details on screen
.
RANA1000  DISPLAY   *P13:12,*V2LON,START,*P20:12,*HOFF,DESCCOD1;
.
.------ keyin Code To ------
.
RANA2000  MOVE      SP3,RANGCOD2
          MOVE      SP30,DESCCOD2
          MOVE      "Finish",FINISH
          DISPLAY   *P13:13,*EL,UNDLN3;
          KEYIN     *P13:13,*RV,*V2LON,RANGCOD2;
          DISPLAY   *P13:13,*V2LON,RANGCOD2;
.
          ENDSET    RANGCOD2
          APPEND    SP3,RANGCOD2
          RESET     RANGCOD2
.
          MATCH     SP3,RANGCOD2            * test for spaces
          GOTO      RANA2050 IF NOT EQUAL   * not spaces
          MOVE      "ZZZ",RANGCOD2          * spaces
          GOTO      RANA3000
.
RANA2050  CMATCH    QUEST,RANGCOD2          * test for "?"
          GOTO      RANA2500 IF NOT EQUAL   * no, not "?"
.
.       "?" option on codes
.
RANA2100  LOAD      CODE,USECODE,CODEA,CODECC,CODECL,CODES,CODED,CODEDD,CODEP:
                                 CODEAC,CODEU1,CODEU2,CODEU3,CODEU4,CODEU5:
                                 CODEU6,CODEU7,CODED1,CODED2,CODED3,CODED4:
                                 CODED5
          CALL      PATCODDS                * display all codes
          BRANCH    OVRCD,RANA9900
.
.       keyin Code To after "?" option
.
RANA2300  MOVE      SP30 TO DESCCOD2
          MOVE      SP3,RANGCOD2
          DISPLAY   *P1:24,*EL,"Code To : ",UNDLN3;
          KEYIN     *P11:24,*V2LON,*RV,RANGCOD2;
          DISPLAY   *P11:24,*V2LON,RANGCOD2 ;
.
          ENDSET    RANGCOD2
          APPEND    SP3,RANGCOD2
          RESET     RANGCOD2
.
          CMATCH    QUEST,RANGCOD2          * test for "?"
          GOTO      RANA2100 IF EQUAL       * yes, "?" requested
.
          MATCH     SP3,RANGCOD2            * test for spaces
          GOTO      RANA2400 IF NOT EQUAL   * not spaces
          CALL      SCR0000                 * spaces - redisplay screen
.
          DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
                    *P1:12,"Code From : ",*V2LON,START,*HOFF,*P20:12,DESCCOD1:
                    *P1:13,"Code To   : ";
.
          MOVE      "ZZZ",RANGCOD2
          GOTO      RANA3000
.
.       code has been entered
.
RANA2400  PACK      KEY5,CODE,RANGCOD2
          MOVE      SP30 TO DESCCOD2
.
          CALL      RDCODE1                 * read patient codes file
          COMPARE   ZERO,OVRCD              * test if on file
          GOTO      RANA2410 IF EQUAL       * yes, code on file
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Code is not on file **    ";
          CALL      HITENTER
          GOTO      RANA2300
.
.       code is on file so redisplay screen after "?" option
.
RANA2410  CALL      SCR0000
.
          DISPLAY   *P1:10,"Select Option : _":
                    *P17:10,*V2LON,REPTYPE,*HOFF:
                    *P1:12,*EF,"Code From : ",*V2LON,START:
                    *P20:12,*HOFF,DESCCOD1:
                    *P1:13,"Code To   : ";
          GOTO      RANA2800
.
.       Code To has been entered
.
RANA2500  PACK      KEY5,CODE,RANGCOD2
          MOVE      SP30 TO DESCCOD2
.
          CALL      RDCODE1                 * read patient codes file
          COMPARE   ZERO,OVRCD              * see if code is on file
          GOTO      RANA2800 IF EQUAL
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Code is not on file **    ";
          CALL      HITENTER
          GOTO      RANA2000
.
.       code on file, so set up display variables
.
RANA2800  PACK      FINISH,RANGCOD2,SP6
          MOVE      TDESC,DESCCOD2
.
.       display relevant details on screen
.
RANA3000  DISPLAY   *P13:13,*V2LON,FINISH,*P20:13,*HOFF,DESCCOD2;
.
          MATCH     RANGCOD1,RANGCOD2       * see if a valid range entered
          GOTO      RANA9000 IF LESS
          MOVE      FALSE,EXIT
          GOTO      RANA9999
.
.------ invalid code range entered ------
.
RANA9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Code To must be greater than or equal Code From **  ";
          CALL      HITENTER
          GOTO      RANA2000
.
.------ No codes on file for a "?" option ------
.
RANA9900  MOVE      TRUE,EXIT
.
RANA9999  RETURN
+
.**********************************************************************
.*                              RANB0000                              *
.*            Enter range of health funds for option 3                *
.**********************************************************************
RANB0000  MOVE      SP6,RANGFND1
          MOVE      SP30,DESCFND1
          MOVE      "Start ",STARTFND
.
.------ enter Health Fund From ------
.
          DISPLAY   *P1:15,*EF,"Health Fund From : ",UNDLN6:
                    *P1:16,"Health Fund To   : ";
          KEYIN     *P20:15,*RV,*V2LON,RANGFND1;
          DISPLAY   *P20:15,*V2LON,RANGFND1;
.
          ENDSET    RANGFND1
          APPEND    SP6,RANGFND1
          RESET     RANGFND1
.
          MATCH     SP6,RANGFND1            * test for spaces
          GOTO      RANB1000 IF EQUAL       * yes, spaces
.
          CMATCH    QUEST,RANGFND1          * test for "?"
          GOTO      RANB0500 IF NOT EQUAL   * no, not "?"
.
.       "?" option on health funds
.
RANB0200  CALL      PATDSFN1                * display all health funds
.>>>>>>    BRANCH    OVRCD,RANB9999
.
.       keyin health fund after "?" option
.
RANB0250  MOVE      SP6,RANGFND1
          MOVE      SP30,DESCFND1
          DISPLAY   *P1:24,*EL,"Health Fund From : ",UNDLN6;
          KEYIN     *P20:24,*V2LON,*RV,RANGFND1;
          DISPLAY   *P20:24,*V2LON,RANGFND1;
.
          ENDSET    RANGFND1
          APPEND    SP6,RANGFND1
          RESET     RANGFND1
.
          CMATCH    QUEST,RANGFND1          * test for "?"
          GOTO      RANB0200 IF EQUAL       * yes, "?" requested
.
          MATCH     SP6,RANGFND1            * test for spaces
          GOTO      RANB0400 IF NOT EQUAL   * no, not spaces
          CALL      SCR0000                 * spaces - redisplay screen
.
          DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
                    *P1:12,"Code From : ",*V2LON,START,*P20:12,*HOFF,DESCCOD1:
                    *P1:13,"Code To   : ",*V2LON,FINISH,*P20:13,*HOFF,DESCCOD2:
                    *P1:15,"Health Fund From : ":
                    *P1:16,"Health Fund To   : ";
          GOTO      RANB1000
.
.       health fund has been entered
.
RANB0400  PACK      KEY14,RANGFND1,ZERO8,SP10
          MOVE      SP30,DESCFND1
.
          CALL      RDFUND1                 * read health fund file
          COMPARE   ZERO,OVRCD              * health fund on file ?
          GOTO      RANB0450 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Health Fund is not on file **    ";
          CALL      HITENTER
          GOTO      RANB0250
.
RANB0450  MOVE      HFNAME,DESCFND1
          MOVE      RANGFND1,STARTFND
.
          CALL      SCR0000                 * redisplay screen
.
          DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
                    *P1:12,"Code From : ",*V2LON,START,*P20:12,*HOFF,DESCCOD1:
                    *P1:13,"Code To   : ",*V2LON,FINISH,*P20:13,*HOFF,DESCCOD2:
                    *P1:15,"Health Fund From : ":
                    *P1:16,"Health Fund To   : ";
          GOTO      RANB1000
.
.       Health Fund From has been entered
.
RANB0500  PACK      KEY14,RANGFND1,ZERO8,SP10
          MOVE      SP30,DESCFND1
.
          CALL      RDFUND1                 * read health fund file
          COMPARE   ZERO,OVRCD              * health fund on file ?
          GOTO      RANB0600 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Health Fund is not on file **    ";
          CALL      HITENTER
          GOTO      RANB0000
.
.       health fund on file, so set up display variables
.
RANB0600  MOVE      RANGFND1,STARTFND
          MOVE      HFNAME,DESCFND1
.
.       display relevant details on screen
.
RANB1000  DISPLAY   *P20:15,*V2LON,STARTFND,*P30:15,*HOFF,DESCFND1;
.
.------ keyin Health Fund To ------
.
RANB2000  MOVE      SP6,RANGFND2
          MOVE      SP30,DESCFND2
          MOVE      "Finish",FINISFND
.
          DISPLAY   *P20:16,*EL,UNDLN6;
          KEYIN     *P20:16,*RV,*V2LON,RANGFND2;
          DISPLAY   *P20:16,*V2LON,RANGFND2;
.
          ENDSET    RANGFND2
          APPEND    SP6,RANGFND2
          RESET     RANGFND2
.
          MATCH     SP6,RANGFND2            * test for spaces
          GOTO      RANB2050 IF NOT EQUAL   * not spaces
          MOVE      "ZZZZZZ",RANGFND2       * spaces
          GOTO      RANB3000
.
RANB2050  CMATCH    QUEST,RANGFND2          * test for "?"
          GOTO      RANB2500 IF NOT EQUAL   * no, not "?"
.
.       "?" option on health funds
.
RANB2100  CALL      PATDSFN1                * display all health funds
.>>>>>>   BRANCH    OVRCD,RANB9999
.
.       keyin Health Fund To after "?" option
.
RANB2300  MOVE      SP30 TO DESCFND2
          MOVE      SP6,RANGFND2
          DISPLAY   *P1:24,*EL,"Health Fund To : ",UNDLN6;
          KEYIN     *P18:24,*V2LON,*RV,RANGFND2;
          DISPLAY   *P18:24,*V2LON,RANGFND2 ;
.
          ENDSET    RANGFND2
          APPEND    SP6,RANGFND2
          RESET     RANGFND2
.
          CMATCH    QUEST,RANGFND2          * test for "?"
          GOTO      RANB2100 IF EQUAL       * yes, "?" requested
.
          MATCH     SP6,RANGFND2            * test for spaces
          GOTO      RANB2400 IF NOT EQUAL   * not spaces
.
          CALL      SCR0000                 * redisplay screen
.
          DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
                    *P1:12,"Code From : ",*V2LON,START,*P20:12,*HOFF,DESCCOD1:
                    *P1:13,"Code To   : ",*V2LON,FINISH,*P20:13,*HOFF,DESCCOD2:
                    *P1:15,"Health Fund From : ",*V2LON,STARTFND:
                    *P30:15,*HOFF,DESCFND1:
                    *P1:16,"Health Fund To   : ";
.
          MOVE      "ZZZZZZ",RANGFND2
          GOTO      RANB3000
.
.       health fund has been entered
.
RANB2400  PACK      KEY14,RANGFND2,ZERO8,SP10
          MOVE      SP30 TO DESCFND2
.
          CALL      RDFUND1                 * read health fund file
          COMPARE   ZERO,OVRCD              * health fund on file ?
          GOTO      RANB2410 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Health Fund is not on file **    ";
          CALL      HITENTER
          GOTO      RANB2300
.
.       health fund is on file so redisplay screen after "?" option
.
RANB2410  CALL      SCR0000
.
          DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
                    *P1:12,"Code From : ",*V2LON,START,*P20:12,*HOFF,DESCCOD1:
                    *P1:13,"Code To   : ",*V2LON,FINISH,*P20:13,*HOFF,DESCCOD2:
                    *P1:15,"Health Fund From : ",*V2LON,STARTFND:
                    *P30:15,*HOFF,DESCFND1:
                    *P1:16,"Health Fund To   : ";
          GOTO      RANB2800
.
.       Health Fund To has been entered
.
RANB2500  PACK      KEY14,RANGFND2,ZERO8,SP10
          MOVE      SP30 TO DESCFND2
.
          CALL      RDFUND1                 * read health fund file
          COMPARE   ZERO,OVRCD              * health fund on file ?
          GOTO      RANB2800 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Health Fund is not on file **    ";
          CALL      HITENTER
          GOTO      RANB2000
.
.       health fund on file, so set up display variables
.
RANB2800  MOVE      RANGFND2,FINISFND
          MOVE      HFNAME,DESCFND2
.
.       display relevant details on screen
.
RANB3000  DISPLAY   *P20:16,*V2LON,FINISFND,*P30:16,*HOFF,DESCFND2;
.
          MATCH     RANGFND1,RANGFND2       * see if a valid range entered
          GOTO      RANB9000 IF LESS
          MOVE      FALSE,EXIT
          GOTO      RANB9999
.
.------ invalid health fund range entered ------
.
RANB9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Health Fund To must be > or = Health Fund From **   ";
          CALL      HITENTER
          GOTO      RANB2000
.
RANB9999  RETURN
+
.**********************************************************************
.*                              RANC0000                              *
.*              Enter range of doctor codes for option 7              *
.**********************************************************************
RANC0000  MOVE      SP6,RANGDOC1
          MOVE      SP30,DESCDOC1
          MOVE      "Start ",START
.
.------ Keyin Doctor From ------
.
          DISPLAY   *P1:12,*EF,"Doctor From : ",UNDLN6:
                    *P1:13,"Doctor To   : "
          MOVE      SP10,RANGDOC1
          MOVE      "15",ECOL
          MOVE      "12",EVERT
          MOVE      ZERO,CKYIMAND
          MOVE      SP6,CKYIDEF6
          CALL      PATDOCKY
          BRANCH    EXIT,RANC1000,RANC0000
.
          MOVE      DCODE,RANGDOC1
.
.       Doctor From has been entered
.
RANC0500  MOVE      RANGDOC1,KEY6
          MOVE      SP30,DESCDOC1
.
RANC0600  MOVE      RANGDOC1,START
          CALL      FDOC0000                * format the doctor's name
          MOVE      DOCTNAM,DESCDOC1
.
.       display relevant details on screen
.
RANC1000  DISPLAY   *P15:12,*V2LON,START,*P30:12,*HOFF,DESCDOC1;
.
.------ keyin Doctor To ------
.
RANC2000  MOVE      SP6,RANGDOC2
          MOVE      SP30,DESCDOC2
          MOVE      "Finish",FINISH
.
          MOVE      SP10,RANGDOC2
          MOVE      "27",ECOL
          MOVE      "19",EVERT
          MOVE      ZERO,CKYIMAND
          MOVE      SP6,CKYIDEF6
          CALL      PATDOCKY
          BRANCH    EXIT,RANC2040,RANC2000
.
          MOVE      DCODE,RANGDOC2
          GOTO      RANC2500
.
RANC2040  MOVE      "ZZZZZZ",RANGDOC2
          GOTO      RANC3000
.
.       Doctor To has been entered
.
RANC2500  MOVE      RANGDOC2,KEY6
          MOVE      SP30,DESCDOC2
.
.       doctor on file, so set up display variables
.
RANC2800  MOVE      RANGDOC2,FINISH
          CALL      FDOC0000                * format the doctor's name
          MOVE      DOCTNAM,DESCDOC2
.
.       display relevant details on screen
.
RANC3000  DISPLAY   *P15:13,*V2LON,FINISH,*P30:13,*HOFF,DESCDOC2;
.
          MATCH     RANGDOC1,RANGDOC2       * a valid range entered ?
          GOTO      RANC9000 IF LESS        * no
          MOVE      FALSE,EXIT              * yes
          GOTO      RANC9999
.
.------ invalid doctor range entered ------
.
RANC9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Doctor To must be greater than or = Doctor From **  ";
          CALL      HITENTER
          GOTO      RANC2000
.
RANC9999  RETURN
+
.**********************************************************************
.*                              RAND0000                              *
.*                 Enter range of Wards for option 8                  *
.**********************************************************************
RAND0000  MOVE      SP3,RANGCOD1
          MOVE      SP30,DESCCOD1
          MOVE      "Start ",START
.
.------ Keyin Ward From ------
.
          DISPLAY   *P1:12,*EF,"Ward From : ",UNDLN3:
                    *P1:13,"Ward To   : ";
          KEYIN     *P13:12,*RV,*V2LON,RANGCOD1;
          DISPLAY   *P13:12,*V2LON,RANGCOD1;
.
          ENDSET    RANGCOD1
          APPEND    SP3,RANGCOD1
          RESET     RANGCOD1
.
          MATCH     SP3,RANGCOD1            * test for spaces
          GOTO      RAND1000 IF EQUAL       * yes, spaces
.
          CMATCH    QUEST,RANGCOD1          * test for "?"
          GOTO      RAND0500 IF NOT EQUAL   * no, not "?"
.
.       "?" option on Wards
.
RAND0200  CALL      PATWRDDS                * display all Wards
          BRANCH    OVRCD,RAND9900
.
.       keyin Ward after "?" option
.
RAND0250  MOVE      SP3,RANGCOD1
          MOVE      SP30,DESCCOD1
          DISPLAY   *P1:24,*EL,"Ward From : ",UNDLN3;
          KEYIN     *P13:24,*V2LON,*RV,RANGCOD1;
          DISPLAY   *P13:24,*V2LON,RANGCOD1;
.
          ENDSET    RANGCOD1
          APPEND    SP3,RANGCOD1
          RESET     RANGCOD1
.
          CMATCH    QUEST,RANGCOD1          * test for "?"
          GOTO      RAND0200 IF EQUAL       * yes, "?" requested
.
          MATCH     SP3,RANGCOD1            * test for spaces
          GOTO      RAND0400 IF NOT EQUAL   * not spaces
          CALL      SCR0000                 * spaces - redisplay screen
.
          DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
                    *P1:12,"Ward From : ",*P1:13,"Ward To   : ";
          GOTO      RAND1000
.
.       Ward has been entered
.
RAND0400  PACK      KEY6,RANGCOD1,SP3
          MOVE      SP30,DESCCOD1
.
          CALL      RDWARD1                 * read Ward file
          COMPARE   ZERO,OVRCD              * Ward on file ?
          GOTO      RAND0450 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Ward is not on file **    ";
          CALL      HITENTER
          GOTO      RAND0250
.
.       Ward on file after "?" option keyin
.
RAND0450  MOVE      WBDESC,DESCCOD1
          PACK      START,RANGCOD1,SP6
.
          CALL      SCR0000                 * redisplay screen
.
          DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
                    *P1:12,"Ward From : ",*P1:13,"Ward To   : ";
          GOTO      RAND1000
.
.       Ward To has been entered
.
RAND0500  PACK      KEY6,RANGCOD1,SP3
          MOVE      SP30,DESCCOD1
.
          CALL      RDWARD1                 * read Ward file
          COMPARE   ZERO,OVRCD              * Ward on file ?
          GOTO      RAND0600 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Ward is not on file **    ";
          CALL      HITENTER
          GOTO      RAND0000
.
.       Ward on file, so set up display variables
.
RAND0600  PACK      START,RANGCOD1,SP6
          MOVE      WBDESC,DESCCOD1
.
.       display relevant details on screen
.
RAND1000  DISPLAY   *P13:12,*V2LON,START,*P20:12,*HOFF,DESCCOD1;
.
.------ keyin Ward To ------
.
RAND2000  MOVE      SP3,RANGCOD2
          MOVE      SP30,DESCCOD2
          MOVE      "Finish",FINISH
.
          DISPLAY   *P13:13,*EL,UNDLN3;
          KEYIN     *P13:13,*RV,*V2LON,RANGCOD2;
          DISPLAY   *P13:13,*V2LON,RANGCOD2;
.
          ENDSET    RANGCOD2
          APPEND    SP3,RANGCOD2
          RESET     RANGCOD2
.
          MATCH     SP3,RANGCOD2            * test for spaces
          GOTO      RAND2050 IF NOT EQUAL   * no, not spaces
          MOVE      "ZZZ",RANGCOD2          * yes, spaces
          GOTO      RAND3000
.
RAND2050  CMATCH    QUEST,RANGCOD2          * test for "?"
          GOTO      RAND2500 IF NOT EQUAL   * no, not "?"
.
.       "?" option on Wards
.
RAND2100  CALL      PATWRDDS                * display all Wards
          BRANCH    OVRCD,RAND9900
.
.       keyin Ward To after "?" option
.
RAND2300  MOVE      SP30 TO DESCCOD2
          MOVE      SP3,RANGCOD2
          DISPLAY   *P1:24,*EL,"Ward To : ",UNDLN3;
          KEYIN     *P11:24,*V2LON,*RV,RANGCOD2;
          DISPLAY   *P11:24,*V2LON,RANGCOD2 ;
.
          ENDSET    RANGCOD2
          APPEND    SP3,RANGCOD2
          RESET     RANGCOD2
.
          CMATCH    QUEST,RANGCOD2          * test for "?"
          GOTO      RAND2100 IF EQUAL       * yes
.
          MATCH     SP3,RANGCOD2            * test for spaces
          GOTO      RAND2400 IF NOT EQUAL   * not spaces
          CALL      SCR0000                 * spaces - redisplay screen
.
          DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
                    *P1:12,"Ward From : ",*V2LON,START,*P20:12,*HOFF,DESCCOD1:
                    *P1:13,"Ward To   : ";
.
          MOVE      "ZZZ",RANGCOD2
          GOTO      RAND3000
.
.       ward has been entered
.
RAND2400  PACK      KEY6,RANGCOD2,SP3
          MOVE      SP30 TO DESCCOD2
.
          CALL      RDWARD1                 * read Ward file
          COMPARE   ZERO,OVRCD              * Ward on file ?
          GOTO      RAND2410 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Ward is not on file **    ";
          CALL      HITENTER
          GOTO      RAND2300
.
.       Ward is on file so redisplay screen after "?" option
.
RAND2410  CALL      SCR0000
.
          DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
                    *P1:12,"Ward From : ",*V2LON,START,*P20:12,*HOFF,DESCCOD1:
                    *P1:13,"Ward To   : ";
          GOTO      RAND2800
.
.       Ward To has been entered
.
RAND2500  PACK      KEY6,RANGCOD2,SP3
          MOVE      SP30 TO DESCCOD2
.
          CALL      RDWARD1                 * read Ward file
          COMPARE   ZERO,OVRCD              * Ward on file ?
          GOTO      RAND2800 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Ward is not on file **    ";
          CALL      HITENTER
          GOTO      RAND2000
.
.       Ward on file, so set up display variables
.
RAND2800  PACK      FINISH,RANGCOD2,SP6
          MOVE      WBDESC,DESCCOD2
.
.       display relevant details on screen
.
RAND3000  DISPLAY   *P13:13,*V2LON,FINISH,*P20:13,*HOFF,DESCCOD2;
.
          MATCH     RANGCOD1,RANGCOD2       * a valid range entered ?
          GOTO      RAND9000 IF LESS        * no
          MOVE      FALSE,EXIT              * yes
          GOTO      RAND9999
.
.------ invalid Ward range entered ------
.
RAND9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Ward To must be greater than or equal Ward From **  ";
          CALL      HITENTER
          GOTO      RAND2000
.
.------ No Wards on file for a "?" option ------
.
RAND9900  MOVE      TRUE,EXIT
.
RAND9999  RETURN
+
.**************************************************************************
.*                              FDOC0000                                  *
.*             Format doctors name into the variable DOCTNAM              *
.*             Requires the relevant doctor record read in                *
.**************************************************************************
FDOC0000  CLEAR     DOCTNAM
.
          MATCH     SP9,DTITL               * test doctors title for spaces
          GOTO      FDOC2050 IF EQUAL
          MOVE      DTITL,DOCTNAM           * move doctors title to DOCTNAM
          ENDSET    DOCTNAM
.
.------ skip over extra blanks at the end of the doctors title ------
.
FDOC1000  CMATCH    SP1,DOCTNAM             * test if current character
          GOTO      FDOC2000 IF NOT EQUAL     is a space
          BUMP      DOCTNAM,-1
          GOTO      FDOC1000
.
.------ Append a space and then the doctors given name to DOCTNAM ------
.
FDOC2000  APPEND    SP1,DOCTNAM
.
.------ just append the doctors given name if no title exists ------
.
FDOC2050  MATCH     SP25,DGNAME             * see if given name is spaces
          GOTO      FDOC3050 IF EQUAL
.
          MOVE      DGNAME,ANS
          APPEND    ANS,DOCTNAM
          ENDSET    DOCTNAM
          APPEND    DOT,DOCTNAM
          APPEND    SP1,DOCTNAM
.
.------ just append the doctors surname if no given name exists ------
.
FDOC3050  APPEND    DSNAME,DOCTNAM
          ENDSET    DOCTNAM
.
.------ Move to the end of doctors surname ------
.
FDOC3200  CMATCH    SP1,DOCTNAM             * test if current character is
          GOTO      FDOC9000 IF NOT EQUAL     a space
          BUMP      DOCTNAM,-1
          GOTO      FDOC3200 IF NOT EOS
.
.------ Reset the formatted doctors name ------
.
FDOC9000  RESET     DOCTNAM
.
FDOC9999  RETURN
+
.**********************************************************************
.*                              GEXT0000                              *
.*                Get the extraction files for the report             *
.**********************************************************************
GEXT0000  MOVE      FALSE,EXIT
          CALL      GEXTN                  * get the extraction file number
.
          COMPARE   ZERO,OPTION            * see if no file chosen
          GOTO      GEXT9000 IF EQUAL
.
          CALL      ETABPOS                * get sector and position for dates
          READ      CONTROLF,SEC;*ETABPS,EDATE,EFDATE,ETDATE,EDOPERS
.
          CALL      ETOTPOS                * get sector and position for totals
          READ      CONTROLF,SEC;*ETABPS,EADMNS,ETPRIMOP,ETPRIMDS,EBDAYS:
                                  EDCASES,ENETAMT
.
          MATCH     SP8,EDATE              * see if extraction creation 
          GOTO      GEXT8000 IF EQUAL        date exists
.
          MATCH     "00000000",EDATE       * see if extraction creation 
          GOTO      GEXT8000 IF EQUAL        date exists
.
          MOVE      FIVE,CVERT
          ADD       OPTION,CVERT
          UNPACK    EDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P13:CVERT,*V2LON,OPTION,*P20:CVERT,CPCDATE;
.
          PACK      FNAMEB,FILEEXTB,OPTION
          REP       " 0",FNAMEB
          PACK      FNAMEC,FILEEXTC,OPTION
          REP       " 0",FNAMEC
.
          MOVE      OPTION,DIM2
          CALL      OPPTEXA1
.
          TRAP      GEXT8200 IF IO
          OPEN      PATEXTB1,FNAMEB
          TRAPCLR   IO
.
          TRAP      GEXT8300 IF IO
          OPEN      PATEXTC1,FNAMEC
          TRAPCLR   IO
.
          CALL      CONTQST                 * see if Ok to continue
          BRANCH    CEXIT,GEXT9500,GEXT0000,GEXT9000
.
.------ invalid selection of extraction file ------
.
GEXT8000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Invalid Extraction File chosen **    ";
          CALL      HITENTER
          GOTO      GEXT0000
.
.------ extraction file B does not exist ------
.
GEXT8200  DISPLAY   *P1:24,*EL,*B,*V2LON,"** ",*BLINKON,"ERROR",*HOFF,*V2LON:
                           " - Extraction File ",FNAMEB," does not exist **  ";
          CALL      HITENTER
          NORETURN
          GOTO      GEXT0000
.
.------ extraction file C does not exist ------
.
GEXT8300  DISPLAY   *P1:24,*EL,*B,*V2LON,"** ",*BLINKON,"ERROR",*HOFF,*V2LON:
                           " - Extraction File ",FNAMEC," does not exist **  ";
          CALL      HITENTER
          NORETURN
          GOTO      GEXT0000
.
.------ no extraction file entered OR cancel selected ------
.
GEXT9000  MOVE      TRUE,EXIT
          GOTO      GEXT9999
.
.------ "Yes" has been chosen to continue ------
.
GEXT9500  UNPACK    EDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * pack the date
          MOVE      CPCDATE,EXCDATE
.
          UNPACK    EFDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * pack the date
          MOVE      CPCDATE,EXFDATE
.
          UNPACK    ETDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * pack the date
          MOVE      CPCDATE,EXTDATE
.
GEXT9999  RETURN
+
.**********************************************************************
.*                              CREA0000                              *
.*                    Create the Temp Indexed File                    *
.**********************************************************************
CREA0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Creating Temp Indexed File":
                           *HOFF,*V2LON," - Please wait";
.
          BRANCH    SAVOPTN,CREA1000,CREA1000,CREA2000,CREA1000,CREA3000:
                            CREA4000,CREA5000,CREA1000,CREA1000,CREA1000:
                            CREA1000,CREA1000,CREA1000,CREA1000,CREA1000:
                            CREA1000,CREA1000,CREA1000,CREA1000,CREA1000:
                            CREA1000,CREA1000,CREA1000,CREA1000
.
.------ create the temp file for every option that uses a codes file ------
.------ code and option 8 ------
.
CREA1000  CLEAR     TEMPFILE
.
          BRANCH    REPTYPE,CREA1100        * skip if doing detailed report
          APPEND    "pms09f",TEMPFILE
          GOTO      CREA1200
.
.------ we are doing the detailed report ------
.
CREA1100  APPEND    "pms09a",TEMPFILE
.
.------ append the port number to the temp file name ------
.
CREA1200  APPEND    PORT,TEMPFILE
          RESET     TEMPFILE
          REP       " 0",TEMPFILE
.
          CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
.
          BRANCH    REPTYPE,CREA1300        * skip if doing detailed report
          APPEND    " 38 u1-3",CMDLINE
          GOTO      CREA1400
.
.------ we are doing the detailed report ------
.
CREA1300  APPEND    " 15 u1-3,4-5",CMDLINE
.
.------ open the temp file ------
.
CREA1400  APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          BRANCH    REPTYPE,CREA1500        * skip if doing detailed report
          OPEN      PATTM6XX,TEMPFILE
          GOTO      CREA9999
.
.------ we are doing the detailed report ------
.
CREA1500  OPEN      PATTM1XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the third option ------
.
CREA2000  CLEAR     TEMPFILE
.
          BRANCH    REPTYPE,CREA2100        * skip if doing detailed report
          APPEND    "pms09g",TEMPFILE
          GOTO      CREA2200
.
.------ we are doing the detailed report ------
.
CREA2100  APPEND    "pms09b",TEMPFILE
.
.------ append the port number to the temp file name ------
.
CREA2200  APPEND    PORT,TEMPFILE
          RESET     TEMPFILE
          REP       " 0",TEMPFILE
.
          CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
.
          BRANCH    REPTYPE,CREA2300        * skip if doing detailed report
          APPEND    " 44 u1-3,4-9",CMDLINE
          GOTO      CREA2400
.
.------ we are doing the detailed report ------
.
CREA2300  APPEND    " 21 u1-3,4-9,10-11",CMDLINE
.
.------ open the temp file ------
.
CREA2400  APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          BRANCH    REPTYPE,CREA2500        * skip if doing detailed report
          OPEN      PATTM7XX,TEMPFILE
          GOTO      CREA9999
.
.------ we are doing the detailed report ------
.
CREA2500  OPEN      PATTM2XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the fifth option ------
.
CREA3000  CLEAR     TEMPFILE
.
          BRANCH    REPTYPE,CREA3100        * skip if doing detailed report
          APPEND    "pms09h",TEMPFILE
          GOTO      CREA3200
.
.------ we are doing the detailed report ------
.
CREA3100  APPEND    "pms09c",TEMPFILE
.
.------ append the port number to the temp file name ------
.
CREA3200  APPEND    PORT,TEMPFILE
          RESET     TEMPFILE
          REP       " 0",TEMPFILE
.
          CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
.
          BRANCH    REPTYPE,CREA3300        * skip if doing detailed report
          APPEND    " 37 u1-2",CMDLINE
          GOTO      CREA3400
.
.------ we are doing the detailed report ------
.
CREA3300  APPEND    " 14 u1-2,3-4",CMDLINE
.
.------ open the temp file ------
.
CREA3400  APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          BRANCH    REPTYPE,CREA3500        * skip if doing detailed report
          OPEN      PATTM8XX,TEMPFILE
          GOTO      CREA9999
.
.------ we are doing the detailed report ------
.
CREA3500  OPEN      PATTM3XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the sixth option ------
.
CREA4000  CLEAR     TEMPFILE
.
          BRANCH    REPTYPE,CREA4100        * skip if doing detailed report
          APPEND    "pms09i",TEMPFILE
          GOTO      CREA4200
.
.------ we are doing the detailed report ------
.
CREA4100  APPEND    "pms09d",TEMPFILE
.
.------ append the port number to the temp file name ------
.
CREA4200  APPEND    PORT,TEMPFILE
          RESET     TEMPFILE
          REP       " 0",TEMPFILE
.
          CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
.
          BRANCH    REPTYPE,CREA4300        * skip if doing detailed report
          APPEND    " 38 u1-2,3-3",CMDLINE
          GOTO      CREA4400
.
.------ we are doing the detailed report ------
.
CREA4300  APPEND    " 15 u1-2,3-3,4-5",CMDLINE
.
.------ open the temp file ------
.
CREA4400  APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          BRANCH    REPTYPE,CREA4500        * skip if doing detailed report
          OPEN      PATTM9XX,TEMPFILE
          GOTO      CREA9999
.
.------ we are doing the detailed report ------
.
CREA4500  OPEN      PATTM4XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the seventh option ------
.
CREA5000  CLEAR     TEMPFILE
.
          BRANCH    REPTYPE,CREA5100        * skip if doing detailed report
          APPEND    "pms09j",TEMPFILE
          GOTO      CREA5200
.
.------ we are doing the detailed report ------
.
CREA5100  APPEND    "pms09e",TEMPFILE
.
.------ append the port number to the temp file name ------
.
CREA5200  APPEND    PORT,TEMPFILE
          RESET     TEMPFILE
          REP       " 0",TEMPFILE
.
          CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
.
          BRANCH    REPTYPE,CREA5300        * skip if doing detailed report
          APPEND    " 41 u1-6",CMDLINE
          GOTO      CREA5400
.
.------ we are doing the detailed report ------
.
CREA5300  APPEND    " 18 u1-6,7-8",CMDLINE
.
.------ open the temp file ------
.
CREA5400  APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          BRANCH    REPTYPE,CREA5500        * skip if doing detailed report
          OPEN      PATTM10X,TEMPFILE
          GOTO      CREA9999
.
.------ we are doing the detailed report ------
.
CREA5500  OPEN      PATTM5XX,TEMPFILE
.
CREA9999  RETURN
+
.**********************************************************************
.*                              KILL0000                              *
.*                 Kill the temp file if it already exists            *
.**********************************************************************
KILL0000  BRANCH    SAVOPTN,KILL1000,KILL1000,KILL2000,KILL1000,KILL3000:
                            KILL4000,KILL5000,KILL1000,KILL1000,KILL1000:
                            KILL1000,KILL1000,KILL1000,KILL1000,KILL1000:
                            KILL1000,KILL1000,KILL1000,KILL1000,KILL1000:
                            KILL1000,KILL1000,KILL1000,KILL1000
.
.------ kill the temp file for every option that uses a codes file ------
.------ code and option 8 ------
.
KILL1000  CLEAR     CMDLINE
.
          BRANCH    REPTYPE,KILL1100        * skip if doing the detailed report
          CLOSE     PATTM6XX
          GOTO      KILL1200
.
.------ we are doing the detailed report ------
.
KILL1100  CLOSE     PATTM1XX
. 
.------ delete the temp file ------
.
KILL1200  APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for the third option ------
.
KILL2000  CLEAR     CMDLINE
.
          BRANCH    REPTYPE,KILL2100        * skip if doing the detailed report
          CLOSE     PATTM7XX
          GOTO      KILL1200
.
.------ we are doing the detailed report ------
.
KILL2100  CLOSE     PATTM2XX
.
.------ delete the temp file ------
.
KILL2200  APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for the fifth option ------
.
KILL3000  CLEAR     CMDLINE
.
          BRANCH    REPTYPE,KILL3100        * skip if doing the detailed report
          CLOSE     PATTM8XX
          GOTO      KILL3200
.
.------ we are doing the detailed report ------
.
KILL3100  CLOSE     PATTM3XX
.
.------ delete the temp file ------
.
KILL3200  APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for the sixth option ------
.
KILL4000  CLEAR     CMDLINE
.
          BRANCH    REPTYPE,KILL4100        * skip if doing the detailed report
          CLOSE     PATTM9XX
          GOTO      KILL4200
.
.------ we are doing the detailed report ------
.
KILL4100  CLOSE     PATTM4XX
.
.------ delete the temp file ------
.
KILL4200  APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for the seventh option ------
.
KILL5000  CLEAR     CMDLINE
.
          BRANCH    REPTYPE,KILL5100        * skip if doing the detailed report
          CLOSE     PATTM10X
          GOTO      KILL5200
.
.------ we are doing the detailed report ------
.
KILL5100  CLOSE     PATTM5XX
.
.------ delete the temp file ------
.
KILL5200  APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KILL9999  RETURN
+
.**********************************************************************
.*                              LOAD0000                              *
.*          Load the temporary file with the relevant data            *
.**********************************************************************
LOAD0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Loading the Temp Indexed file":
                           *HOFF,*V2LON," - Please wait";
.
          BRANCH    SAVOPTN,LOAD1000,LOAD1000,LOAD2000,LOAD1000,LOAD3000:
                            LOAD4000,LOAD5000,LOAD1000,LOAD1000,LOAD1000:
                            LOAD1000,LOAD1000,LOAD1000,LOAD1000,LOAD1000:
                            LOAD1000,LOAD1000,LOAD1000,LOAD1000,LOAD1000:
                            LOAD1000,LOAD1000,LOAD1000,LOAD1000
.
.------ load the temporary file for every option that uses a codes file ------
.------ code and option 8 ------
.
LOAD1000  BRANCH    REPTYPE,LOAD1500        * skip if printing detailed report
          CALL      LODF0000                * load the temporary file for the
          GOTO      LOAD9999                  summary report
.
.------ we are doing the detailed report ------
.
LOAD1500  CALL      LODA0000                * load the temporary file for the
          GOTO      LOAD9999                  detailed report
.
.------ load the temporary file for option 3 ------
.
LOAD2000  BRANCH    REPTYPE,LOAD2500        * skip if printing detailed report
.
          CALL      LODG0000                * load the temporary file for the
          GOTO      LOAD9999                  summary report
.         
.------ we are doing the detailed report ------
.
LOAD2500  CALL      LODB0000                * load the temporary file for the
          GOTO      LOAD9999                  detailed report
.
.------ load the temporary file for option 5 ------
.
LOAD3000  BRANCH    REPTYPE,LOAD3500        * skip if printing detailed report
          CALL      LODH0000                * load the temporary file for the
          GOTO      LOAD9999                  summary report
.
.------ we are doing the detailed report ------
.
LOAD3500  CALL      LODC0000               * load the temporary file for the
          GOTO      LOAD9999                 detailed report
.
.------ load the temporary file for option 6 ------
.
LOAD4000  BRANCH    REPTYPE,LOAD4500        * skip if printing detailed report
          CALL      LODI0000                * load the temporary file for the
          GOTO      LOAD9999                  summary report
.
.------ we are doing the detailed report ------
.
LOAD4500  CALL      LODD0000                * load the temporary file for the
          GOTO      LOAD9999                  detailed report
.
.------ load the temporary file for option 7 ------
.
LOAD5000  BRANCH    REPTYPE,LOAD5500        * skip if printing detailed report
          CALL      LODJ0000                * load the temporary file for the
          GOTO      LOAD9999                  summary report
.
.------ we are doing the detailed report ------
.
LOAD5500  CALL      LODE0000                * load the temporary file for the
.                                             detailed report
LOAD9999  RETURN
+
.**********************************************************************
.*                              LODA0000                              *
.*      Load the temporary file for every option that uses a          *
.*      codes file code and option 8, for the detailed report         *
.**********************************************************************
LODA0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODA1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODA9999
.
          MATCH     SP8,PTXADDAT            * see if discharge date is spaces
          GOTO      LODA1000 IF EQUAL
.
          CALL      ALOS0000                * calculate average length of stay
          MOVE      PTXADWRD,CURCODE
.
          COMPARE   EIGHT,SAVOPTN           * see if we are doing the discharge
          GOTO      LODA1050 IF EQUAL         ward option
.
          LOAD      CURCODE,USECODE,PTXADTYP,PTXADCRE,SP3,PTXASOUR:
                                    PTXADSTT,PTXADDST,PTXAACLS,PTXADDPT:
                                    PTXAAUS1,PTXAAUS2,PTXAAUS3,PTXAAUS4:
                                    PTXAAUS5,PTXAAUS6,PTXAAUS7,PTXADUS1:
                                    PTXADUS2,PTXADUS3,PTXADUS4,PTXADUS5
.
.------ see if the current code and length of stay is on file ------
.
LODA1050  PACK      KEY5,CURCODE,TMPLOS
          CALL      RDTMPR1                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODA1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR1                 * write to the temp file
          CALL      RDTMPR1                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODA1100  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
          CALL      UPTMPR1                 * update the temp file
.
          PACK      KEY5,CURCODE,NINETY9
          CALL      RDTMPR1                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODA2000 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR1                 * write to the temp file
          CALL      RDTMPR1                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODA2000  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
          CALL      UPTMPR1                 * update the temp file
          GOTO      LODA1000
.
LODA9999  RETURN
+
.**********************************************************************
.*                              ALOS0000                              *
.*       Calculate the average length of stay for a patient           *
.**********************************************************************
ALOS0000  MATCH     PTXAADAT,PTXADDAT       * see if patient is a day case
          GOTO      ALOS1000 IF NOT EQUAL
          MOVE      ZERO,TMPLOS
          MOVE      ONE,PTXAALOS
          GOTO      ALOS9999
.
.------ see if length of stay is in the range 1 - 65 ------
.
ALOS1000  COMPARE   PTXAALOS,SIXTY5
          GOTO      ALOS2000 IF NOT LESS
          MOVE      SIXTY6,TMPLOS
          GOTO      ALOS9999
.
.------ length of stay is in the range 1 - 65 ------
.
ALOS2000  MOVE      PTXAALOS,TMPLOS
.
ALOS9999  RETURN
+
.**********************************************************************
.*                              LODB0000                              *
.*    Load the temporary file for option 3 for the detailed report    *
.**********************************************************************
LODB0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODB1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODB9999
.
          MATCH     SP8,PTXADDAT            * see if discharge date is spaces
          GOTO      LODB1000 IF EQUAL
          CALL      ALOS0000                * calculate average length of stay
.
          PACK      KEY11,PTXACLMC,PTXAFUND,TMPLOS
          CALL      RDTMPR2                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODB1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR2                 * write to the temp file
          CALL      RDTMPR2                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODB1100  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
          CALL      UPTMPR2                 * update the temp file
.
          PACK      KEY11,PTXACLMC,PTXAFUND,NINETY9
          CALL      RDTMPR2                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODB2000 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR2                 * write to the temp file
          CALL      RDTMPR2                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODB2000  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
          CALL      UPTMPR2                 * update the temp file
          GOTO      LODB1000
.
LODB9999  RETURN
+
.**********************************************************************
.*                              LODC0000                              *
.*      Load the temporary file for the fifth option with the         *
.*      relevant data for the detailed report                         *
.**********************************************************************
LODC0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODC1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODC9999
.
          MATCH     SP8,PTXADDAT            * see if discharge date is spaces
          GOTO      LODC1000 IF EQUAL
.
          CALL      AGE0000                 * calculate age breakup patient
          BRANCH    EXIT,LODC1000             falls into
          CALL      ALOS0000                * calculate average length of stay
.
          PACK      KEY4,AGECAT,TMPLOS 
          CALL      RDTMPR3                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODC1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR3                 * write to the temp file
          CALL      RDTMPR3                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODC1100  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
          CALL      UPTMPR3                 * update the temp file
.
          PACK      KEY4,AGECAT,NINETY9
          CALL      RDTMPR3                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODC2000 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR3                 * write to the temp file
          CALL      RDTMPR3                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODC2000  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
          CALL      UPTMPR3                 * update the temp file
          GOTO      LODC1000
.
LODC9999  RETURN
+
.**********************************************************************
.*                              AGE0000                               *
.*            Calculate age breakup patient falls into                *
.**********************************************************************
AGE0000   MOVE      FALSE,EXIT
          MOVE      ONE,COUNT
.
.------ check each age breakup ------
.
AGE1000   LOAD      AGEFROM,COUNT,PTCNAF01,PTCNAF02,PTCNAF03,PTCNAF04,PTCNAF05:
                                  PTCNAF06,PTCNAF07,PTCNAF08,PTCNAF09,PTCNAF10:
                                  PTCNAF11,PTCNAF12
          LOAD      AGETO,COUNT,PTCNAT01,PTCNAT02,PTCNAT03,PTCNAT04,PTCNAT05:
                                PTCNAT06,PTCNAT07,PTCNAT08,PTCNAT09,PTCNAT10:
                                PTCNAT11,PTCNAT12
.
          MATCH     SP3,AGEFROM             * see if this breakup exists
          GOTO      AGE1900 IF EQUAL
          UNPACK    AGEFROM,DIM2,ANS
.
          MATCH     ANSD,ANS                * see if this breakup represents
          GOTO      AGE1200 IF EQUAL          days
.
          MATCH     ANSM,ANS                * see if this breakup represents
          GOTO      AGE1300 IF EQUAL          months
          MOVE      AGEFROM,FORM3
.
          COMPARE   FORM3,PTXADAGY          * see if years are in range
          GOTO      AGE1900 IF LESS
          MOVE      AGETO,FORM3
.
          COMPARE   PTXADAGY,FORM3          * see if years are in range
          GOTO      AGE1900 IF LESS
          MOVE      COUNT,AGECAT
          GOTO      AGE9999
.
.------ age breakup is in days ------
.
AGE1200   MOVE      DIM2,FORM2
.
          COMPARE   FORM2,PTXADAGD          * see if days are in range
          GOTO      AGE1900 IF LESS
          UNPACK    AGETO,DIM2,ANS
          MOVE      DIM2,FORM2
.
          COMPARE   PTXADAGD,FORM2          * see if days are in range
          GOTO      AGE1900 IF LESS
          MOVE      COUNT,AGECAT
          GOTO      AGE9999
.
.------ age breakup is in months ------
.
AGE1300   MOVE      DIM2,FORM2
.
          COMPARE   FORM2,PTXADAGM          * see if months are in range
          GOTO      AGE1900 IF LESS
          UNPACK    AGETO,DIM2,ANS
          MOVE      DIM2,FORM2
.
          COMPARE   PTXADAGM,FORM2          * see if months are in range
          GOTO      AGE1900 IF LESS
          MOVE      COUNT,AGECAT
          GOTO      AGE9999
.
.------ increment counter and try next age breakdown if applicable ------
.
AGE1900   ADD       ONE,COUNT
          COMPARE   TEN3,COUNT              * see if we have run out of 
          GOTO      AGE1000 IF NOT EQUAL      breakdowns
          MOVE      TRUE,EXIT
.
AGE9999   RETURN
+
.**********************************************************************
.*                              LODD0000                              *
.*      Load the temporary file for the sixth option with the         *
.*      relevant data for the detailed report                         *
.**********************************************************************
LODD0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODD1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODD9999
.
          MATCH     SP8,PTXADDAT            * see if discharge date is spaces
          GOTO      LODD1000 IF EQUAL
.
          CALL      AGE0000                 * calculate age breakup patient
          BRANCH    EXIT,LODD1000             falls into
.
          CALL      ALOS0000                * calculate average length of stay
.
          PACK      KEY5,AGECAT,PTXASEX,TMPLOS 
          CALL      RDTMPR4                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODD1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR4                 * write to the temp file
          CALL      RDTMPR4                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODD1100  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
          CALL      UPTMPR4                 * update the temp file
.
          PACK      KEY5,AGECAT,PTXASEX,NINETY9
          CALL      RDTMPR4                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODD2000 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR4                 * write to the temp file
          CALL      RDTMPR4                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODD2000  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
          CALL      UPTMPR4                 * update the temp file
          GOTO      LODD1000
.
LODD9999  RETURN
+
.**********************************************************************
.*                              LODE0000                              *
.*    Load the temporary file for option 7 for the detailed report    *
.**********************************************************************
LODE0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODE1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODE9999
.
          MATCH     SP8,PTXADDAT            * see if discharge date is spaces
          GOTO      LODE1000 IF EQUAL
.
          CALL      ALOS0000                * calculate average length of stay
.
          PACK      KEY8,PTXADADC,TMPLOS
          CALL      RDTMPR5                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODE1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR5                 * write to the temp file
          CALL      RDTMPR5                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODE1100  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
          CALL      UPTMPR5                 * update the temp file
.
          PACK      KEY8,PTXADADC,NINETY9
          CALL      RDTMPR5                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODE2000 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR5                 * write to the temp file
          CALL      RDTMPR5                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODE2000  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
          CALL      UPTMPR5                 * update the temp file
          GOTO      LODE1000
.
LODE9999  RETURN
+
.**********************************************************************
.*                              LODF0000                              *
.*    Load the temporary file for every option that uses a codes file *
.*    code and option 8 for the summary report                        *
.**********************************************************************
LODF0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODF1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODF9999
.
          MATCH     SP8,PTXADDAT            * see if discharge date is spaces
          GOTO      LODF1000 IF EQUAL
          CALL      LOSR0000                * calculate length of stay range
.
          MOVE      PTXADWRD,CURCODE
.
          COMPARE   EIGHT,SAVOPTN           * see if we are doing the discharge
          GOTO      LODF1050 IF EQUAL         ward option
.
          LOAD      CURCODE,USECODE,PTXADTYP,PTXADCRE,SP3,PTXASOUR:
                                    PTXADSTT,PTXADDST,PTXAACLS,PTXADDPT:
                                    PTXAAUS1,PTXAAUS2,PTXAAUS3,PTXAAUS4:
                                    PTXAAUS5,PTXAAUS6,PTXAAUS7,PTXADUS1:
                                    PTXADUS2,PTXADUS3,PTXADUS4,PTXADUS5
.
.------ see if the current code is on file ------
.
LODF1050  PACK      KEY3,CURCODE
          CALL      RDTMPR6                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODF1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR6                 * write to the temp file
          CALL      RDTMPR6                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODF1100  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
.
          LOAD      TMPDAYS,RANGENUM,TMPDCASE,TMPLOSR1,TMPLOSR2,TMPLOSR3:
                                     TMPLOSR4
          ADD       PTXAALOS,TMPDAYS
.
          STORE     TMPDAYS,RANGENUM,TMPDCASE,TMPLOSR1,TMPLOSR2,TMPLOSR3:
                                     TMPLOSR4
          CALL      UPTMPR6                 * update the temp file
          GOTO      LODF1000
.
LODF9999  RETURN
+
.**********************************************************************
.*                              LOSR0000                              *
.*     Calculate the length of stay range for the summary reports     *
.**********************************************************************
LOSR0000  MATCH     PTXAADAT,PTXADDAT       * see if a day case
          GOTO      LOSR1000 IF NOT EQUAL
          MOVE      ONE,RANGENUM
          MOVE      ONE,PTXAALOS
          GOTO      LOSR9999
.
.------ see if length of stay is in the first range ------
.
LOSR1000  COMPARE   PTXAALOS,BRSTAY1
          GOTO      LOSR2000 IF LESS
          MOVE      TWO,RANGENUM
          GOTO      LOSR9999
.
.------ see if length of stay is in the second range ------
.
LOSR2000  COMPARE   PTXAALOS,BRSTAY2
          GOTO      LOSR3000 IF LESS
          MOVE      THREE,RANGENUM
          GOTO      LOSR9999
.
.------ see if length of stay is in the third range ------
.
LOSR3000  COMPARE   PTXAALOS,BRSTAY3
          GOTO      LOSR4000 IF LESS
          MOVE      FOUR,RANGENUM
          GOTO      LOSR9999
.
.------ length of stay is in the fourth range ------
.
LOSR4000  MOVE      FIVE,RANGENUM
.
LOSR9999  RETURN
+
.**********************************************************************
.*                              LODG0000                              *
.*     Load the temporary file for option 3 for the summary report    *
.**********************************************************************
LODG0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODG1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODG9999
.
          MATCH     SP8,PTXADDAT            * see if discharge date is spaces
          GOTO      LODG1000 IF EQUAL
.
          CALL      LOSR0000                * calculate length of stay range
.
          PACK      KEY9,PTXACLMC,PTXAFUND
          CALL      RDTMPR7                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODG1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR7                 * write to the temp file
          CALL      RDTMPR7                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODG1100  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
.
          LOAD      TMPDAYS,RANGENUM,TMPDCASE,TMPLOSR1,TMPLOSR2,TMPLOSR3:
                                     TMPLOSR4
          ADD       PTXAALOS,TMPDAYS
.
          STORE     TMPDAYS,RANGENUM,TMPDCASE,TMPLOSR1,TMPLOSR2,TMPLOSR3:
                                     TMPLOSR4
          CALL      UPTMPR7                 * update the temp file
          GOTO      LODG1000
.
LODG9999  RETURN
+
.**********************************************************************
.*                              LODH0000                              *
.*      Load the temporary file for option 5 for the summary report   *
.**********************************************************************
LODH0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODH1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODH9999
.
          MATCH     SP8,PTXADDAT            * see if discharge date is spaces
          GOTO      LODH1000 IF EQUAL
.
          CALL      AGE0000                 * calculate age breakup patient
          BRANCH    EXIT,LODH1000             falls into
.
          CALL      LOSR0000                * calculate length of stay range
.
          MOVE      AGECAT,KEY2
          CALL      RDTMPR8                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODH1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR8                 * write to the temp file
          CALL      RDTMPR8                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODH1100  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
.
          LOAD      TMPDAYS,RANGENUM,TMPDCASE,TMPLOSR1,TMPLOSR2,TMPLOSR3:
                                     TMPLOSR4
          ADD       PTXAALOS,TMPDAYS
.
          STORE     TMPDAYS,RANGENUM,TMPDCASE,TMPLOSR1,TMPLOSR2,TMPLOSR3:
                                     TMPLOSR4
          CALL      UPTMPR8                 * update the temp file
          GOTO      LODH1000
.
LODH9999  RETURN
+
.**********************************************************************
.*                              LODI0000                              *
.*      Load the temporary file for option 6 for the summary report   *
.**********************************************************************
LODI0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODI1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODI9999
.
          MATCH     SP8,PTXADDAT            * see if discharge date is spaces
          GOTO      LODI1000 IF EQUAL
.
          CALL      AGE0000                 * calculate age breakup patient
          BRANCH    EXIT,LODI1000             falls into
.
          CALL      LOSR0000                * calculate length of stay range
.
          PACK      KEY3,AGECAT,PTXASEX
          CALL      RDTMPR9                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODI1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR9                 * write to the temp file
          CALL      RDTMPR9                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODI1100  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
.
          LOAD      TMPDAYS,RANGENUM,TMPDCASE,TMPLOSR1,TMPLOSR2,TMPLOSR3:
                                     TMPLOSR4
          ADD       PTXAALOS,TMPDAYS
.
          STORE     TMPDAYS,RANGENUM,TMPDCASE,TMPLOSR1,TMPLOSR2,TMPLOSR3:
                                     TMPLOSR4
          CALL      UPTMPR9                 * update the temp file
          GOTO      LODI1000
.
LODI9999  RETURN
+
.**********************************************************************
.*                              LODJ0000                              *
.*    Load the temporary file for option 7 for the summary report     *
.**********************************************************************
LODJ0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODJ1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODJ9999
.
          MATCH     SP8,PTXADDAT            * see if discharge date is spaces
          GOTO      LODJ1000 IF EQUAL
.
          CALL      LOSR0000                * calculate length of stay range
.
          MOVE      PTXADADC,KEY6
          CALL      RDTMPR10                * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODJ1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR10                * write to the temp file
          CALL      RDTMPR10                * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODJ1100  ADD       ONE,TMPDSCH
          ADD       PTXAALOS,TMPBDAYS
.
          LOAD      TMPDAYS,RANGENUM,TMPDCASE,TMPLOSR1,TMPLOSR2,TMPLOSR3:
                                     TMPLOSR4
          ADD       PTXAALOS,TMPDAYS
.
          STORE     TMPDAYS,RANGENUM,TMPDCASE,TMPLOSR1,TMPLOSR2,TMPLOSR3:
                                     TMPLOSR4
          CALL      UPTMPR10                * update the temp file
          GOTO      LODJ1000
.
LODJ9999  RETURN
+
.**********************************************************************
.*                               PRNT0000                             *
.*                     Routine to print the report                    *
.**********************************************************************
PRNT0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Generating Report":
                           *HOFF,*V2LON," - Please wait";
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
          MOVE      ONE,CNOUNDLN
          LOAD      CPHDROPT,REPTYPE,DETAILED,SUMMARY
.
          BRANCH    SAVOPTN,PRNT1000,PRNT1000,PRNT2000,PRNT1000,PRNT3000:
                            PRNT4000,PRNT5000,PRNT1000,PRNT1000,PRNT1000:
                            PRNT1000,PRNT1000,PRNT1000,PRNT1000,PRNT1000:
                            PRNT1000,PRNT1000,PRNT1000,PRNT1000,PRNT1000:
                            PRNT1000,PRNT1000,PRNT1000,PRNT1000
.
.------ print the report for every option that uses a codes file code ------
.------ and option 8 ------
.
PRNT1000  BRANCH    REPTYPE,PRNT1500        * skip if printing detailed report
          CALL      PRTF0000                * print the summary report
          GOTO      PRNT9999
.
.------ we are printing the detailed report ------
.
PRNT1500  CALL      PRTA0000                * print the detailed report 
          GOTO      PRNT9999
.
.------ print the report for the third option ------
.
PRNT2000  BRANCH    REPTYPE,PRNT2500        * skip if printing detailed report
          CALL      PRTG0000                * print the summary report
          GOTO      PRNT9999
.
.------ we are printing the detailed report ------
.
PRNT2500  CALL      PRTB0000                * print the detailed report
          GOTO      PRNT9999
.
.------ print the report for the fifth option ------
.
PRNT3000  BRANCH    REPTYPE,PRNT3500        * skip if printing detailed report
          CALL      PRTH0000                * print the summary report
          GOTO      PRNT9999
.
.------ we are printing the detailed report ------
.
PRNT3500  CALL      PRTC0000                * print the detailed report
          GOTO      PRNT9999
.
.------ print the report for the sixth option ------
.
PRNT4000  BRANCH    REPTYPE,PRNT4500        * skip if printing detailed report
          CALL      PRTI0000                * print the summary report
          GOTO      PRNT9999
.
.------ we are printing the detailed report ------
.
PRNT4500  CALL      PRTD0000                * print the detailed report
          GOTO      PRNT9999
.
.------ print the report for the seven option ------
.
PRNT5000  BRANCH    REPTYPE,PRNT5500        * skip if printing detailed report
          CALL      PRTJ0000                * print the summary report
          GOTO      PRNT9999
.
.------ we are printing the detailed report ------
.
PRNT5500  CALL      PRTE0000                * print the detailed report
.
PRNT9999  RETURN
+
.**********************************************************************
.*                               PRTA0000                             *
.*    Routine to print the detailed report for every option that uses *
.*    a codes file code and option 8                                  *
.**********************************************************************
PRTA0000  CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
.
          MOVE      TRUE,FLAGFRST           * initialize printing first record
.                                             flag
          PACK      KEY5,RANGCOD1,SP2
          CALL      RDTMPR1                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      PRTA1050 IF EQUAL
.
          CALL      RKTMPR1                 * get the first record on the temp
          BRANCH    OVRCD,PRTA8000            file
          GOTO      PRTA1050
.
.------ read through the temp file ------
.
PRTA1000  CALL      RKTMPR1
          BRANCH    OVRCD,PRTA8000
.
.------ see if code is in range ------
.
PRTA1050  MATCH     TMPCODE,RANGCOD2
          GOTO      PRTA8000 IF LESS
.
          COMPARE   NINETY9,TMPLOS          * see if we have the total record
          GOTO      PRTA1100 IF NOT EQUAL
.
          CALL      SUBT0000                * print the sub-totals
          CALL      CLRT3000                * clear the sub-totals
.
          MOVE      TRUE,FLAGFRST           * set printing the first record flag
          GOTO      PRTA1000
.
.------ print the current record ------
.
PRTA1100  PACK      SAVKEY5,TMPCODE,TMPLOS
          CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
.
          MOVE      SP3,PRTCODE
          MOVE      SP20,DESCCODE
          MOVE      FALSE,FLAGFRST
          GOTO      PRTA1000
.
.------ we have reached the end of the temp file or we are not in the ------
.------ given range anymore ------
.
PRTA8000  CALL      GNDT0000                * print the grand-totals
          CALL      ENDR0000                * print the end of the report
.
PRTA9999  RETURN  
+
.**********************************************************************
.*                               PRTB0000                             *
.*     Routine to print the detailed report for the third option      *
.**********************************************************************
PRTB0000  CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
.
          MOVE      TRUE,FLAGFRST           * initialize printing first record
.                                             flag for this claim code
          MOVE      FALSE,FLAGFUND          * initialize printed health fund
.                                             flag
          MOVE      FALSE,FLAGDATA          * initialize data printed flag
          PACK      DESCFUND,SP20,SP10
          MOVE      SP3,SAVCODE
.
          PACK      KEY11,RANGCOD1,RANGFND1,SP2
          CALL      RDTMPR2                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      PRTB1100 IF EQUAL
.
          CALL      RKTMPR2                 * get the first record
          BRANCH    OVRCD,PRTB8000
          GOTO      PRTB1100
.
.------ read through the temporary file ------
.
PRTB1000  CALL      RKTMPR2
          BRANCH    OVRCD,PRTB8000
.
.------ see if the claim code is in range ------
.
PRTB1100  MATCH     TMPCODE,RANGCOD2
          GOTO      PRTB8000 IF LESS
.
          MATCH     RANGFND1,TMPFUND        * see if health funds are in range
          GOTO      PRTB1000 IF LESS
.
          MATCH     TMPFUND,RANGFND2        * see if health funds are in range
          GOTO      PRTB1000 IF LESS
.
          BRANCH    FLAGFRST,PRTB1200       * skip if first record for this
.                                             claim code
          MATCH     TMPCODE,SAVCODE         * see if the claim code has changed
          GOTO      PRTB1600 IF NOT EQUAL         
.
.------ see if we have got the total record for this health fund ------
.
PRTB1200  COMPARE   NINETY9,TMPLOS
          GOTO      PRTB1800 IF NOT EQUAL
.
          CALL      SUBH0000                * print the health fund sub totals
.
          MOVE      ZERO,TMPCUMBD
          MOVE      FALSE,FLAGFUND         * initialize printed health fund flag
          GOTO      PRTB1000
.
.------ claim code has changed ------
.
PRTB1600  CALL      SUBT0000                * print the claim code sub totals 
          CALL      CLRT3000                * clear the sub totals for the
.                                             claim code
          MOVE      FALSE,FLAGFUND         * initialize printed health fund flag
          MOVE      TRUE,FLAGFRST           * set printing first record for
.                                             this claim code flag
          CALL      HEAD0000                * print new page header
.
.------ print the record for the current code ------
.
PRTB1800  PACK      SAVKEY11,TMPCODE,TMPFUND,TMPLOS
          CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
.
          MOVE      TMPCODE,SAVCODE
          PACK      DESCFUND,SP20,SP10
          MOVE      TRUE,FLAGFUND           * set printed health fund flag
          MOVE      FALSE,FLAGFRST          * reset printing the first record
.                                             for this claim code flag
          MOVE      TRUE,FLAGDATA           * set data printed flag
          GOTO      PRTB1000 
.
.------ we have reached the end of the temp file or we are out of the ------
.------ given range ------
.
PRTB8000  COMPARE   ZERO,FLAGDATA           * skip if no data was printed
          GOTO      PRTB8100 IF EQUAL
.
          CALL      SUBT0000                * print the claim code sub totals 
          CALL      HEAD0000                * print new page header
.
.------ print the grand total information ------
.
PRTB8100  CALL      PAGE0000                * print underline
.
          PRINT     *N,"| Health Fund",*37,"| Length of Stay":
                       *54,"| Number Of Discharges",*77,"|",*82,"Bed Days":
                       *95,"| Cumulative Bed Days",*117,"| Cumulative %":
                       *132,"|";
.
          CALL      PAGE0000                * print underline
          CALL      GNDT0000                * print the grand-totals
          CALL      ENDR0000                * print the end of the report
.
PRTB9999  RETURN  
+
.**********************************************************************
.*                               PRTC0000                             *
.*      Routine to print the detailed report for the fifth option     *
.**********************************************************************
PRTC0000  MOVE      TRUE,FLAGFRST           * set printing first record flag
          MOVE      SP20,PRTAGEGP
.
          CALL      CLRT0000                * clear the totals 
          CALL      HEAD0000                * print the page header
.
          MOVE      ONE,COUNT
.
.------ check each age breakup ------
.
PRTC0100  LOAD      AGEFROM,COUNT,PTCNAF01,PTCNAF02,PTCNAF03,PTCNAF04,PTCNAF05:
                                  PTCNAF06,PTCNAF07,PTCNAF08,PTCNAF09,PTCNAF10:
                                  PTCNAF11,PTCNAF12
          LOAD      AGETO,COUNT,PTCNAT01,PTCNAT02,PTCNAT03,PTCNAT04,PTCNAT05:
                                PTCNAT06,PTCNAT07,PTCNAT08,PTCNAT09,PTCNAT10:
                                PTCNAT11,PTCNAT12
.
          MATCH     SP3,AGEFROM             * see if this breakup exists
          GOTO      PRTC3000 IF EQUAL
          MOVE      COUNT,SAVAGEGP
.
          PACK      KEY4,COUNT,SP2
          CALL      RDTMPR3                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      PRTC2000 IF EQUAL
.
          CALL      RKTMPR3                 * get the first record
          BRANCH    OVRCD,PRTC8000         
          GOTO      PRTC1050
.
.------ read through the temp file ------
.
PRTC1000  CALL      RKTMPR3
          BRANCH    OVRCD,PRTC8000
.
.------ see if the age group has changed ------
.
PRTC1050  MATCH     TMPAGEGP,SAVAGEGP      * skip if we have the same age group
          GOTO      PRTC1100 IF EQUAL
          MOVE      TRUE,FLAGFRST          * set printing the first record flag
          GOTO      PRTC3000
.
.------ we have the same age group so see if we have the total record ------
.
PRTC1100  COMPARE   NINETY9,TMPLOS          * see if we have the total record
          GOTO      PRTC2000 IF NOT EQUAL
.
          CALL      SUBT0000                * print the sub-totals
          CALL      CLRT3000                * clear the sub-totals
.
          MOVE      TRUE,FLAGFRST           * set printing the first record flag
          GOTO      PRTC1000
.
.------ print the current record ------
.
PRTC2000  PACK      SAVKEY4,TMPAGEGP,TMPLOS
.
          CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
.
          MOVE      FALSE,FLAGFRST
          MOVE      SP20,PRTAGEGP
          GOTO      PRTC1000
.
.------ increment counter and try next age breakdown if applicable ------
.
PRTC3000  ADD       ONE,COUNT
.
          COMPARE   TEN3,COUNT              * see if we have run out of 
          GOTO      PRTC0100 IF NOT EQUAL     breakdowns
.
.------ no more age breakdowns, so print the grand total ------
.
PRTC8000  CALL      GNDT0000                * print the grand-totals
          CALL      ENDR0000                * print the end of the report
.
PRTC9999  RETURN  
+
.**********************************************************************
.*                               PRTD0000                             *
.*     Routine to print the detailed report for the sixth option      *
.**********************************************************************
PRTD0000  MOVE      TRUE,FLAGFRST           * set printing first record flag
          PACK      PRTAGESX,SP20,SP2
.
          CALL      CLRT0000                * clear the totals 
          CALL      HEAD0000                * print the page header
.
          MOVE      ONE,COUNT
.
.------ check each age breakup ------
.
PRTD0100  LOAD      AGEFROM,COUNT,PTCNAF01,PTCNAF02,PTCNAF03,PTCNAF04,PTCNAF05:
                                  PTCNAF06,PTCNAF07,PTCNAF08,PTCNAF09,PTCNAF10:
                                  PTCNAF11,PTCNAF12
.  
          LOAD      AGETO,COUNT,PTCNAT01,PTCNAT02,PTCNAT03,PTCNAT04,PTCNAT05:
                                PTCNAT06,PTCNAT07,PTCNAT08,PTCNAT09,PTCNAT10:
                                PTCNAT11,PTCNAT12
.
          MATCH     SP3,AGEFROM             * see if this breakup exists
          GOTO      PRTD3000 IF EQUAL
.
          MOVE      COUNT,SAVAGEGP
.
          PACK      KEY5,COUNT,ANSF,SP2
          CALL      RDTMPR4                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      PRTD2000 IF EQUAL
.
          CALL      RKTMPR4                 * get the first record
          BRANCH    OVRCD,PRTD8000         
          GOTO      PRTD1050
.
.------ print the record for the current age breakup ------
.
PRTD1000  CALL      RKTMPR4
          BRANCH    OVRCD,PRTD8000
.
.------ see if the age group has changed ------
.
PRTD1050  MATCH     TMPAGEGP,SAVAGEGP      * skip if we have the same age group
          GOTO      PRTD1100 IF EQUAL
.
          MOVE      TRUE,FLAGFRST          * set printing the first record flag
          GOTO      PRTD3000
.
.------ we have the same age group so see if we have the total record ------
.
PRTD1100  COMPARE   NINETY9,TMPLOS          * see if we have the total record
          GOTO      PRTD2000 IF NOT EQUAL
.
          CALL      SUBT0000                * print the sub-totals
          CALL      CLRT3000                * clear the sub-totals
.
          MOVE      TRUE,FLAGFRST           * set printing the first record flag
          GOTO      PRTD1000
.
.------ print the current record ------
.
PRTD2000  PACK      SAVKEY5,TMPAGEGP,TMPSEX,TMPLOS
.
          CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
.
          MOVE      FALSE,FLAGFRST
          PACK      PRTAGESX,SP20,SP2
          GOTO      PRTD1000
.
.------ increment counter and try next age breakdown if applicable ------
.
PRTD3000  ADD       ONE,COUNT
          COMPARE   TEN3,COUNT              * see if we have run out of 
          GOTO      PRTD0100 IF NOT EQUAL     breakdowns
.
.------ no more age breakdowns, so print the grand total ------
.
PRTD8000  CALL      GNDT0000                * print the grand-totals
          CALL      ENDR0000                * print the end of the report
.
PRTD9999  RETURN  
+
.**********************************************************************
.*                               PRTE0000                             *
.*         Routine to print the detailed report for option 7          *
.**********************************************************************
PRTE0000  CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
.
          MOVE      TRUE,FLAGFRST           * initialize printing first record
.                                             flag
          PACK      KEY8,RANGDOC1,SP2
          CALL      RDTMPR5                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      PRTE1050 IF EQUAL
.
          CALL      RKTMPR5                 * get the first record on the 
          BRANCH    OVRCD,PRTE8000            temp file
          GOTO      PRTE1050
.
.------ read through the temp file ------
.
PRTE1000  CALL      RKTMPR5
          BRANCH    OVRCD,PRTE8000
.
.------ see if doctor is in range ------
.
PRTE1050  MATCH     TMPDOCT,RANGDOC2
          GOTO      PRTE8000 IF LESS
.
          COMPARE   NINETY9,TMPLOS          * see if we have the total record
          GOTO      PRTE1100 IF NOT EQUAL
.
          CALL      SUBT0000                * print the sub-totals
          CALL      CLRT3000                * clear the sub-totals
.
          MOVE      TRUE,FLAGFRST           * set printing the first record flag
          GOTO      PRTE1000
.
.------ print the current record ------
.
PRTE1100  PACK      SAVKEY8,TMPDOCT,TMPLOS
          CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
.
          MOVE      SP6,PRTDOCT
          MOVE      SP30,PRTDOCDS
          MOVE      FALSE,FLAGFRST
          GOTO      PRTE1000
.
.------ we have reached the end of the temp file or we are out of the ------
.------ given range ------
.
PRTE8000  CALL      GNDT0000                * print the grand-totals
          CALL      ENDR0000                * print the end of the report
.
PRTE9999  RETURN  
+
.**********************************************************************
.*                               PRTF0000                             *
.*   Routine to print the summary report for every option that uses a *
.*   codes file code and option 8                                     *
.**********************************************************************
PRTF0000  MOVE      BRSTAY1,LOSRNG1
          MOVE      BRSTAY1,LOSRNG2
          ADD       ONE,LOSRNG2
          MOVE      BRSTAY2,LOSRNG3
          MOVE      BRSTAY2,LOSRNG4
          ADD       ONE,LOSRNG4
          MOVE      BRSTAY3,LOSRNG5
          MOVE      BRSTAY3,LOSRNG6
          ADD       ONE,LOSRNG6
.
          CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
.
          MOVE      SP3,KEY3
.
          CALL      RDTMPR6                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      PRTF1100 IF EQUAL
.
.------ read through the temporary file ------
.
PRTF1000  CALL      RKTMPR6
          BRANCH    OVRCD,PRTF8000
.
.------ print the record for the current code ------
.
PRTF1100  CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
          GOTO      PRTF1000 
.
.------ we have reached the end of the temp file ------
.
PRTF8000  CALL      GNDT0000                * print the grand-totals
          CALL      ENDR0000                * print the end of the report
.
PRTF9999  RETURN  
+
.**********************************************************************
.*                               PRTG0000                             *
.*         Routine to print the report for the third option           *
.*         for the summary report                                     *
.**********************************************************************
PRTG0000  MOVE      BRSTAY1,LOSRNG1
          MOVE      BRSTAY1,LOSRNG2
          ADD       ONE,LOSRNG2
          MOVE      BRSTAY2,LOSRNG3
          MOVE      BRSTAY2,LOSRNG4
          ADD       ONE,LOSRNG4
          MOVE      BRSTAY3,LOSRNG5
          MOVE      BRSTAY3,LOSRNG6
          ADD       ONE,LOSRNG6
.
          CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
.
          MOVE      TRUE,FLAGFRST           * initialize printing first record
.                                             flag for this claim code
          MOVE      SP3,SAVCODE
.
          MOVE      SP9,KEY9
          CALL      RDTMPR7                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      PRTG1800 IF EQUAL
.
          CALL      RKTMPR7                 * get the first record
          BRANCH    OVRCD,PRTG8100
          GOTO      PRTG1800
.
.------ read through the temporary file ------
.
PRTG1000  CALL      RKTMPR7
          BRANCH    OVRCD,PRTG8000
.
          MATCH     TMPCODE,SAVCODE         * see if the claim code has changed
          GOTO      PRTG1800 IF EQUAL         
.
          CALL      SUBT0000                * print the claim code sub totals 
          CALL      CLRT3000                * clear the sub totals for the
.                                             claim code
          MOVE      TRUE,FLAGFRST           * set printing first record for
.                                             this claim code flag
          CALL      HEAD0000                * print new page header
.
.------ print the record for the current code ------
.
PRTG1800  CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
.
          MOVE      TMPCODE,SAVCODE
          MOVE      FALSE,FLAGFRST          * reset printing the first record
          GOTO      PRTG1000                  for this claim code flag 
.
.------ we have reached the end of the temp file ------
.
PRTG8000  CALL      SUBT0000                * print the claim code sub totals 
          CALL      HEAD0000                * print new page header
.
.------ print the grand total information ------
.
PRTG8100  CALL      PAGE0000                * print underline
.
          PRINT     *N,"|",*37,"|",*40,"Day",*47,"|",*57,"|",*67,"|",*77,"|":
                       *87,"|",*90,"Total",*98,"|",*102,"Total":
                       *111,"| ALOS Excl|",*132,"|":
                    *N,"| Health Fund",*37,"|",*40,"Cases",*47,"|":
                       *50,"1 -",LOSRNG1,*57,"|",LOSRNG2," -",LOSRNG3,*67,"|":
                       LOSRNG4," -",LOSRNG5,*77,"|",*81,LOSRNG6," +":
                       *87,"| Bed Days",*98,"| Discharges",*111,"| Day Cases":
                       *122,"| A.L.O.S.|";
.
          CALL      GNDT0000                * print the grand-totals
          CALL      ENDR0000                * print the end of the report
.
PRTG9999  RETURN  
+
.**********************************************************************
.*                               PRTH0000                             *
.*           Routine to print the report for the fifth option         *
.*           for the summary report                                   *
.**********************************************************************
PRTH0000  MOVE      BRSTAY1,LOSRNG1
          MOVE      BRSTAY1,LOSRNG2
          ADD       ONE,LOSRNG2
          MOVE      BRSTAY2,LOSRNG3
          MOVE      BRSTAY2,LOSRNG4
          ADD       ONE,LOSRNG4
          MOVE      BRSTAY3,LOSRNG5
          MOVE      BRSTAY3,LOSRNG6
          ADD       ONE,LOSRNG6
.
          CALL      CLRT0000                * clear the totals 
          CALL      HEAD0000                * print the page header
.
          MOVE      ONE,COUNT
.
.------ check each age breakup ------
.
PRTH0100  LOAD      AGEFROM,COUNT,PTCNAF01,PTCNAF02,PTCNAF03,PTCNAF04,PTCNAF05:
                                  PTCNAF06,PTCNAF07,PTCNAF08,PTCNAF09,PTCNAF10:
                                  PTCNAF11,PTCNAF12
.
          LOAD      AGETO,COUNT,PTCNAT01,PTCNAT02,PTCNAT03,PTCNAT04,PTCNAT05:
                                PTCNAT06,PTCNAT07,PTCNAT08,PTCNAT09,PTCNAT10:
                                PTCNAT11,PTCNAT12
.
          MATCH     SP3,AGEFROM             * see if this breakup exists
          GOTO      PRTH3000 IF EQUAL
.
          MOVE      COUNT,KEY2
          CALL      RDTMPR8                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      PRTH1050 IF EQUAL
          GOTO      PRTH3000
.
.------ print the record for the current age breakup ------
.
PRTH1050  CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
.
.------ increment counter and try next age breakdown if applicable ------
.
PRTH3000  ADD       ONE,COUNT
          COMPARE   TEN3,COUNT              * see if we have run out of 
          GOTO      PRTH0100 IF NOT EQUAL     breakdowns
.
.------ no more age breakdowns, so print the grand total ------
.
PRTH8000  CALL      GNDT0000                * print the grand-totals
          CALL      ENDR0000                * print the end of the report
.
PRTH9999  RETURN  
+
.**********************************************************************
.*                               PRTI0000                             *
.*           Routine to print the report for the sixth option         *
.*           for the summary report                                   *
.**********************************************************************
PRTI0000  MOVE      BRSTAY1,LOSRNG1
          MOVE      BRSTAY1,LOSRNG2
          ADD       ONE,LOSRNG2
          MOVE      BRSTAY2,LOSRNG3
          MOVE      BRSTAY2,LOSRNG4
          ADD       ONE,LOSRNG4
          MOVE      BRSTAY3,LOSRNG5
          MOVE      BRSTAY3,LOSRNG6
          ADD       ONE,LOSRNG6
.
          CALL      CLRT0000                * clear the totals 
          CALL      HEAD0000                * print the page header
          MOVE      ONE,COUNT
.
.------ check each age breakup ------
.
PRTI0100  LOAD      AGEFROM,COUNT,PTCNAF01,PTCNAF02,PTCNAF03,PTCNAF04,PTCNAF05:
                                  PTCNAF06,PTCNAF07,PTCNAF08,PTCNAF09,PTCNAF10:
                                  PTCNAF11,PTCNAF12
.
          LOAD      AGETO,COUNT,PTCNAT01,PTCNAT02,PTCNAT03,PTCNAT04,PTCNAT05:
                                PTCNAT06,PTCNAT07,PTCNAT08,PTCNAT09,PTCNAT10:
                                PTCNAT11,PTCNAT12
.
          MATCH     SP3,AGEFROM             * see if this breakup exists
          GOTO      PRTI3000 IF EQUAL
          MOVE      COUNT,SAVAGEGP
.
          PACK      KEY3,COUNT,ANSF
          CALL      RDTMPR9                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      PRTI1050 IF EQUAL
.
.------ get the next record from the temp file ------
.
PRTI1000  CALL      RKTMPR9
          BRANCH    OVRCD,PRTI8000
.
          MATCH     SAVAGEGP,TMPAGEGP       * see if the age group has changed
          GOTO      PRTI3000 IF NOT EQUAL
.
.------ print the record for the current age breakup ------
.
PRTI1050  CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
          GOTO      PRTI1000
.
.------ increment counter and try next age breakdown if applicable ------
.
PRTI3000  ADD       ONE,COUNT
          COMPARE   TEN3,COUNT              * see if we have run out of 
          GOTO      PRTI0100 IF NOT EQUAL     breakdowns
.
.------ no more age breakdowns, so print the grand total ------
.
PRTI8000  CALL      GNDT0000                * print the grand-totals
          CALL      ENDR0000                * print the end of the report
.
PRTI9999  RETURN  
+
.**********************************************************************
.*                               PRTJ0000                             *
.*   Routine to print the report for option 7 for the summary report  *
.**********************************************************************
PRTJ0000  MOVE      BRSTAY1,LOSRNG1
          MOVE      BRSTAY1,LOSRNG2
          ADD       ONE,LOSRNG2
          MOVE      BRSTAY2,LOSRNG3
          MOVE      BRSTAY2,LOSRNG4
          ADD       ONE,LOSRNG4
          MOVE      BRSTAY3,LOSRNG5
          MOVE      BRSTAY3,LOSRNG6
          ADD       ONE,LOSRNG6
.
          CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
.
          MOVE      SP6,KEY6
.
          CALL      RDTMPR10                 * read the fifth temporary file
          COMPARE   ZERO,OVRCD
          GOTO      PRTJ1100 IF EQUAL
.
.------ read through the temporary file ------
.
PRTJ1000  CALL      RKTMPR10
          BRANCH    OVRCD,PRTJ8000
.
.------ print the record for the current code ------
.
PRTJ1100  CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
          GOTO      PRTJ1000 
.
.------ we have reached the end of the temp file ------
.
PRTJ8000  CALL      GNDT0000                * print the grand-totals
          CALL      ENDR0000                * print the end of the report
.
PRTJ9999  RETURN  
+
.**********************************************************************
.*                                CLRT0000                            *
.*              Routine to clear the total variables                  *
.**********************************************************************
CLRT0000  MOVE      ZERO,GNDDSCH 
          MOVE      ZERO,GNDBDAYS
          MOVE      ZERO,GNDCUMBD
          MOVE      ZERO,GNDCUMPC
          MOVE      ZERO,GNDDCASE
          MOVE      ZERO,GNDLOSR1
          MOVE      ZERO,GNDLOSR2
          MOVE      ZERO,GNDLOSR3
          MOVE      ZERO,GNDLOSR4
          MOVE      ZERO,GNDALOS
          MOVE      ZERO,GNDDCLOS
.
.------ clear the sub-total variables ------
.
CLRT3000  MOVE      ZERO,SUBDSCH
          MOVE      ZERO,SUBBDAYS
          MOVE      ZERO,SUBCUMBD
          MOVE      ZERO,SUBCUMPC
          MOVE      ZERO,TMPCUMBD
          MOVE      ZERO,SUBDCASE
          MOVE      ZERO,SUBLOSR1
          MOVE      ZERO,SUBLOSR2
          MOVE      ZERO,SUBLOSR3
          MOVE      ZERO,SUBLOSR4
          MOVE      ZERO,SUBALOS
          MOVE      ZERO,SUBDCLOS
CLRT9999  RETURN
+
.**********************************************************************
.*                              HEAD0000                              *
.*                      Print the page header                         *
.**********************************************************************
HEAD0000  COMPARE   ZERO,CPAGENO            * skip if we are printing the
          GOTO      HEAD1000 IF EQUAL         header for the first page
          CALL      PAGE0000                * print underline for current page
.
.------ print the page header ------
.
HEAD1000  PRINT     *C;
          CALL      HEAD132                 * print the basic page header
.
          PRINT     *N,*40,"Period from ",EXFDATE," to ",EXTDATE:
                       *80,"(As at ",EXCDATE,")":
                    *N,*40,PRTHEAD,*N;
          MOVE      SEVEN,CLNO
.
          BRANCH    SAVOPTN,HEAD1100,HEAD1100,HEAD2000,HEAD1100,HEAD3000:
                            HEAD3000,HEAD4000,HEAD1100,HEAD1100,HEAD1100:
                            HEAD1100,HEAD1100,HEAD1100,HEAD1100,HEAD1100:
                            HEAD1100,HEAD1100,HEAD1100,HEAD1100,HEAD1100:
                            HEAD1100,HEAD1100,HEAD1100,HEAD1100
.
.------ printing the report for every option that uses a codes file code ------
.------ and option 8 ------
.
HEAD1100  BRANCH    REPTYPE,HEAD1500        * skip if doing the detailed report
          CALL      PAGE0000                * print page seperator
.
          PRINT     *N,"|",*37,"|",*40,"Day",*47,"|",*57,"|",*67,"|",*77,"|":
                       *87,"|",*90,"Total",*98,"|",*102,"Total":
                      *111,"| ALOS Excl|",*132,"|":
                    *N,"| Code Description",*37,"|",*40,"Cases",*47,"|":
                       *50,"1 -",LOSRNG1,*57,"|",LOSRNG2," -",LOSRNG3,*67,"|":
                       LOSRNG4," -",LOSRNG5,*77,"|",*81,LOSRNG6," +":
                       *87,"| Bed Days",*98,"| Discharges",*111,"| Day Cases":
                      *122,"| A.L.O.S.|";
          ADD       TWO,CLNO
          GOTO      HEAD9000
.
.------ we are printing the detailed report ------
.
HEAD1500  PRINT     *N,*40,"Code range - From : ",START,*68,DESCCOD1:
                    *N,*53,"To   : ",FINISH,*68,DESCCOD2
          ADD       THREE,CLNO
.
          CALL      PAGE0000                * print page seperator
.
          PRINT     *N,"| Code Description",*37,"| Length of Stay":
                       *54,"| Number of Discharges",*77,"|",*82,"Bed Days":
                       *95,"| Cumulative Bed Days",*117,"| Cumulative % |";
          ADD       ONE,CLNO
          GOTO      HEAD9000
.
.------ printing the report for the third option ------
.
HEAD2000  BRANCH    REPTYPE,HEAD2500        * skip if printing detailed report
          GOTO      HEAD9999
.
.------ we are printing the detailed report ------
.
HEAD2500  PRINT     *N,*40,"Code range - From : ",START,*68,DESCCOD1:
                    *N,*53,"To   : ",FINISH,*68,DESCCOD2:
                    *N,*40,"Fund range - From : ",STARTFND,*68,DESCFND1:
                    *N,*53,"To   : ",FINISFND,*68,DESCFND2
          ADD       FIVE,CLNO
          GOTO      HEAD9999
.
.------ printing the report for options 5 and 6 ------
.
HEAD3000  BRANCH    REPTYPE,HEAD3500        * skip if printing detailed report
          CALL      PAGE0000                * print page header
.
          PRINT     *N,"|",*37,"|",*40,"Day",*47,"|",*57,"|",*67,"|",*77,"|":
                       *87,"|",*90,"Total",*98,"|",*102,"Total":
                      *111,"| ALOS Excl|",*132,"|":
                    *N,"|",*9,"Age Group",*37,"|",*40,"Cases",*47,"|":
                       *50,"1 -",LOSRNG1,*57,"|",LOSRNG2," -",LOSRNG3,*67,"|":
                       LOSRNG4," -",LOSRNG5,*77,"|",*81,LOSRNG6," +":
                       *87,"| Bed Days",*98,"| Discharges",*111,"| Day Cases":
                      *122,"| A.L.O.S.|";
          ADD       TWO,CLNO
          GOTO      HEAD9000
.
.------ we are doing the detailed report ------
.
HEAD3500  CALL      PAGE0000                * print page seperator
.
          PRINT     *N,"|",*7,"Age Group",*37,"| Length of Stay":
                       *54,"| Number of Discharges",*77,"|",*82,"Bed Days":
                       *95,"| Cumulative Bed Days",*117,"| Cumulative %":
                      *132,"|";
          ADD       ONE,CLNO
          GOTO      HEAD9000
.
.------ printing the report for option 7 ------
.
HEAD4000  BRANCH    REPTYPE,HEAD4500        * skip if printing detailed report
          CALL      PAGE0000                * print page seperator
.
          PRINT     *N,"|",*37,"|",*40,"Day",*47,"|",*57,"|",*67,"|",*77,"|":
                       *87,"|",*90,"Total",*98,"|",*102,"Total":
                      *111,"| ALOS Excl|",*132,"|":
                    *N,"| Attending Doctor",*37,"|",*40,"Cases",*47,"|":
                       *50,"1 -",LOSRNG1,*57,"|",LOSRNG2," -",LOSRNG3,*67,"|":
                       LOSRNG4," -",LOSRNG5,*77,"|",*81,LOSRNG6," +":
                       *87,"| Bed Days",*98,"| Discharges",*111,"| Day Cases":
                      *122,"| A.L.O.S.|";
          ADD       TWO,CLNO
          GOTO      HEAD9000
.
.------ we are printing the detailed report ------
.
HEAD4500  PRINT     *N,*40,"Code range - From : ",START,*68,DESCDOC1:
                    *N,*53,"To   : ",FINISH,*68,DESCDOC2
          ADD       THREE,CLNO
.
          CALL      PAGE0000                * print page seperator
.
          PRINT     *N,"| Attending Doctor",*37,"| Length of Stay":
                       *54,"| Number of Discharges",*77,"|",*82,"Bed Days":
                       *95,"| Cumulative Bed Days",*117,"| Cumulative %":
                      *132,"|";
          ADD       ONE,CLNO
.
HEAD9000  CALL      PAGE0000                * print page seperator
.
HEAD9999  RETURN
+
.**********************************************************************
.*                               REC0000                              *
.*       This routine prints a record for the various reports         *
.**********************************************************************
REC0000   BRANCH    SAVOPTN,REC1000,REC1000,REC2000,REC1000,REC3000,REC4000:
                            REC5000,REC1000,REC1000,REC1000,REC1000,REC1000:
                            REC1000,REC1000,REC1000,REC1000,REC1000,REC1000:
                            REC1000,REC1000,REC1000,REC1000,REC1000,REC1000
.
.------ printing the record for every option that uses a codes file code ------
.------ and option 8 ------
.
REC1000   BRANCH    REPTYPE,REC1500         * skip if doing detailed report
.
          COMPARE   "57",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS
.
          COMPARE   EIGHT,SAVOPTN           * see if we are printing wards
          GOTO      REC1200 IF EQUAL
          MOVE      "BLANK CODE",DESCCODE
.
          MATCH     SP3,TMPCODE             * see if the code is spaces
          GOTO      REC1300 IF EQUAL          
.
          PACK      KEY5,CATEGORY,TMPCODE
          CALL      RDCODE1                 * read patient codes file
          BRANCH    OVRCD,REC1100
          MOVE      TDESC,DESCCODE
          GOTO      REC1300
.
.----- code is not on the codes file ------
.
REC1100   MOVE      "UNKNOWN CODE",DESCCODE
          GOTO      REC1300
.
.------ we are printing option 8 ------
.
REC1200   MOVE      "BLANK WARD",DESCCODE
.
          MATCH     SP3,TMPCODE             * see if the code is spaces
          GOTO      REC1300 IF EQUAL          
.
          PACK      KEY6,TMPCODE,SP3
          CALL      RDWARD1                 * read the ward file
          BRANCH    OVRCD,REC1250
          MOVE      WBDESC,DESCCODE
          GOTO      REC1300
.
.------ ward not on file ------
.
REC1250   MOVE      "UNKNOWN WARD",DESCCODE
.
.------ format the length of stay print variables ------
.
REC1300   MOVE      ZERO,SUBLOSDC
          MOVE      TMPDSCH,FORM8
          SUB       TMPDCASE,FORM8
.
          COMPARE   ZERO,FORM8              * see if we have zero discharges -
          GOTO      REC1350 IF EQUAL          daycases
.
          MOVE      TMPBDAYS,FORM12P4
          SUB       TMPDCASE,FORM12P4
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,SUBLOSDC
.
.------ format the length of stay print variables ------
.
REC1350   MOVE      ZERO,SUBLOS
.
          COMPARE   ZERO,TMPDSCH            * see if we have zero discharges
          GOTO      REC1400 IF EQUAL
.
          MOVE      TMPBDAYS,FORM12P4
          DIV       TMPDSCH,FORM12P4
          MOVE      FORM12P4,SUBLOS
.
.------ print the current record ------
.
REC1400   PRINT     *N,"| ",TMPCODE,*8,DESCCODE,*37,"|",TMPDCASE:
                       *47,"|",TMPLOSR1,*57,"|",TMPLOSR2,*67,"|",TMPLOSR3:
                       *77,"|",TMPLOSR4,*87,"| ",TMPBDAYS,*98,"|",*103,TMPDSCH:
                      *111,"|  ",SUBLOSDC,*122,"| ",SUBLOS,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ we are doing the detailed report ------
.
REC1500   COMPARE   "56",CLNO               * see if we need to paginate
          GOTO      REC1550 IF LESS
          CALL      HEAD0000                * print new page header
          GOTO      REC1580
.
.------ we don't need to paginate ------
.
REC1550   COMPARE   ZERO,FLAGFRST           * skip if we are not printing
          GOTO      REC1700 IF EQUAL          the first record
.
.------ we want to print the code and description for the first record OR -----
.------ after printing a new page header we want to print the code and ------
.------ description again ------
.
REC1580   MOVE      TMPCODE,PRTCODE
.
          PACK      KEY5,TMPCODE,NINETY9
          CALL      RDTMPR1                 * get the total record
          MOVE      TMPBDAYS,TOTBDAYS
.
          MOVE      SAVKEY5,KEY5
          CALL      RDTMPR1                 * re-read current record for 
.                                             printing
          COMPARE   EIGHT,SAVOPTN           * see if we are printing wards
          GOTO      REC1650 IF EQUAL
          MOVE      "BLANK CODE",DESCCODE
.
          MATCH     SP3,TMPCODE             * see if the code is spaces
          GOTO      REC1700 IF EQUAL          
.
          PACK      KEY5,CATEGORY,TMPCODE
          CALL      RDCODE1                 * read patient codes file
          BRANCH    OVRCD,REC1600
          MOVE      TDESC,DESCCODE
          GOTO      REC1700
.
.----- code is not on the codes file ------
.
REC1600   MOVE      "UNKNOWN CODE",DESCCODE
          GOTO      REC1700
.
.------ we are printing option 8 ------
.
REC1650   MOVE      "BLANK WARD",DESCCODE
.
          MATCH     SP3,TMPCODE             * see if the code is spaces
          GOTO      REC1700 IF EQUAL          
.
          PACK      KEY6,TMPCODE,SP3
          CALL      RDWARD1                 * read the ward file
          BRANCH    OVRCD,REC1680
          MOVE      WBDESC,DESCCODE
          GOTO      REC1700
.
.------ ward not on file ------
.
REC1680   MOVE      "UNKNOWN WARD",DESCCODE
.
.------ set up length of stay print variable ------
.
REC1700   MOVE      "Day Case",PRTLOS
.
          COMPARE   ZERO,TMPLOS             * see if length of stay is zero
          GOTO      REC1800 IF EQUAL
          MOVE      " Over 65",PRTLOS
.
          COMPARE   TMPLOS,SIXTY5           * see if length of stay is > 65
          GOTO      REC1800 IF LESS
          PACK      PRTLOS,SP3,TMPLOS,SP3
.
.------ set up other print variables ------
.
REC1800   ADD       TMPBDAYS,TMPCUMBD
          MOVE      ZERO,SUBCUMPC
.
          COMPARE   ZERO,TOTBDAYS           * see if total bed days are zero
          GOTO      REC1900 IF EQUAL
.
          MOVE      TMPCUMBD,FORM12P4
          DIV       TOTBDAYS,FORM12P4
          MULT      "100",FORM12P4
          MOVE      FORM12P4,SUBCUMPC
.
.------ print the current record ------
.
REC1900   PRINT     *N,"|",*3,PRTCODE,*8,DESCCODE,*37,"|",*42,PRTLOS,*54,"|":
                       *63,TMPDSCH,*77,"|",*82,TMPBDAYS,*95,"|",*102,TMPCUMBD:
                       *117,"|",*122,SUBCUMPC,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ printing the record for the third option ------
.
REC2000   COMPARE   "56",CLNO               * see if we need to paginate
          GOTO      REC2050 IF LESS
          CALL      HEAD0000                * print new page header
          GOTO      REC2080
.
.------ we don't need to paginate ------
.
REC2050   COMPARE   ZERO,FLAGFRST           * skip if we are not printing
          GOTO      REC2320 IF EQUAL          the first record
.
.------ we want to print the code and description for the first record OR -----
.------ after printing a new page header we want to print the code and ------
.------ description again ------
.
REC2080   MOVE      "BLANK CODE",DESCCODE
.
          MATCH     SP3,TMPCODE             * see if the code is spaces
          GOTO      REC2300 IF EQUAL          
.
          PACK      KEY5,CATEGORY,TMPCODE
          CALL      RDCODE1                 * read patient codes file
          BRANCH    OVRCD,REC2100
          MOVE      TDESC,DESCCODE
          GOTO      REC2300
.
.----- code is not on the codes file ------
.
REC2100   MOVE      "UNKNOWN CODE",DESCCODE
.
.------ print the header for the current claim code ------
.
REC2300   PRINT     *N,*4,"Claim Code : ",TMPCODE,SP3,DESCCODE;
          ADD       ONE,CLNO
.
          CALL      PAGE0000                * print underline
.
          BRANCH    REPTYPE,REC2480         * skip if printing detailed report
.
          PRINT     *N,"|",*37,"|",*40,"Day",*47,"|",*57,"|",*67,"|",*77,"|":
                       *87,"|",*90,"Total",*98,"|",*102,"Total":
                      *111,"| ALOS Excl|",*132,"|":
                    *N,"| Health Fund",*37,"|",*40,"Cases",*47,"|":
                       *50,"1 -",LOSRNG1,*57,"|",LOSRNG2," -",LOSRNG3,*67,"|":
                       LOSRNG4," -",LOSRNG5,*77,"|",*81,LOSRNG6," +":
                       *87,"| Bed Days",*98,"| Discharges",*111,"| Day Cases":
                      *122,"| A.L.O.S.|";
          ADD       TWO,CLNO
.
          CALL      PAGE0000                * print underline
.
.------ see if we are printing the detailed report ------
.
REC2320   BRANCH    REPTYPE,REC2500         * skip if printing detailed report
          MOVE      "BLANK HEALTH FUND",DESCFUND
.
          MATCH     SP6,TMPFUND             * see if the health fund is spaces
          GOTO      REC2350 IF EQUAL          
.
          PACK      KEY14,TMPFUND,ZERO8,SP10
          CALL      RDFUND1                 * read health fund file
          BRANCH    OVRCD,REC2340
          MOVE      HFNAME,DESCFUND
          GOTO      REC2350
.
.----- health fund is not on the health fund file ------
.
REC2340   MOVE      "UNKNOWN FUND : ",DESCFUND
          ENDSET    DESCFUND
          APPEND    TMPFUND,DESCFUND
          RESET     DESCFUND
.
.------ format the length of stay print variables for the summary report ------
.
REC2350   MOVE      ZERO,SUBLOSDC
          MOVE      TMPDSCH,FORM8
          SUB       TMPDCASE,FORM8
.
          COMPARE   ZERO,FORM8              * see if we have zero discharges -
          GOTO      REC2370 IF EQUAL          daycases
.
          MOVE      TMPBDAYS,FORM12P4
          SUB       TMPDCASE,FORM12P4
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,SUBLOSDC
.
.------ format the length of stay print variables for the summary report ------
.
REC2370   MOVE      ZERO,SUBLOS
.
          COMPARE   ZERO,TMPDSCH            * see if we have zero discharges
          GOTO      REC2400 IF EQUAL
.
          MOVE      TMPBDAYS,FORM12P4
          DIV       TMPDSCH,FORM12P4
          MOVE      FORM12P4,SUBLOS
.
.------ print the current record for the summary report ------
.
REC2400   PRINT     *N,"| ",DESCFUND,*37,"|",TMPDCASE:
                       *47,"|",TMPLOSR1,*57,"|",TMPLOSR2,*67,"|",TMPLOSR3:
                       *77,"|",TMPLOSR4,*87,"| ",TMPBDAYS,*98,"|",*103,TMPDSCH:
                      *111,"|  ",SUBLOSDC,*122,"| ",SUBLOS,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ we are printing the detailed report ------
.
REC2480   PRINT     *N,"| Health Fund",*37,"| Length of Stay":
                       *54,"| Number Of Discharges",*77,"|",*82,"Bed Days":
                       *95,"| Cumulative Bed Days",*117,"| Cumulative %":
                      *132,"|";
          ADD       ONE,CLNO
.
          CALL      PAGE0000                * print underline
.
.------ see if we need to print the health fund for the detailed report ------
.
REC2500   BRANCH    FLAGFUND,REC2700        * skip if we have printed the
.                                             health fund
          PACK      KEY11,TMPCODE,TMPFUND,NINETY9
          CALL      RDTMPR2                 * get the total record
          MOVE      TMPBDAYS,TOTBDAYS
.
          MOVE      SAVKEY11,KEY11
          CALL      RDTMPR2                * re-read current record for printing
          MOVE      "BLANK HEALTH FUND",DESCFUND
.
          MATCH     SP6,TMPFUND             * see if the health fund is spaces
          GOTO      REC2700 IF EQUAL          
.
          PACK      KEY14,TMPFUND,ZERO8,SP10
          CALL      RDFUND1                 * read health fund file
          BRANCH    OVRCD,REC2600
          MOVE      HFNAME,DESCFUND
          GOTO      REC2700
.
.----- health fund is not on the health fund file ------
.
REC2600   MOVE      "UNKNOWN FUND : ",DESCFUND
          ENDSET    DESCFUND
          APPEND    TMPFUND,DESCFUND
          RESET     DESCFUND
.
.------ set up the variables ------
.
REC2700   MOVE      "Day Case",PRTLOS
.
          COMPARE   ZERO,TMPLOS             * see if length of stay is zero
          GOTO      REC2800 IF EQUAL
          MOVE      " Over 65",PRTLOS
.
          COMPARE   TMPLOS,SIXTY5           * see if length of stay is > 65
          GOTO      REC2800 IF LESS
          PACK      PRTLOS,SP3,TMPLOS,SP3
.
.------ set up other print variables ------
.
REC2800   ADD       TMPBDAYS,TMPCUMBD
          MOVE      ZERO,SUBCUMPC
.
          COMPARE   ZERO,TOTBDAYS           * see if total bed days are zero
          GOTO      REC2900 IF EQUAL
.
          MOVE      TMPCUMBD,FORM12P4
          DIV       TOTBDAYS,FORM12P4
          MULT      "100",FORM12P4
          MOVE      FORM12P4,SUBCUMPC
.
.------ print the current record ------
.
REC2900   PRINT     *N,"|",*3,DESCFUND,*37,"|",*42,PRTLOS,*54,"|",*63,TMPDSCH:
                       *77,"|",*82,TMPBDAYS,*95,"|",*102,TMPCUMBD,*117,"|":
                       *122,SUBCUMPC,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ printing the record for the fifth option ------
.
REC3000   BRANCH    REPTYPE,REC3500         * skip if printing detailed report
.
          COMPARE   "57",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS
.
          MOVE      AGEFROM,PRTAGEGP
          ENDSET    PRTAGEGP
          APPEND    "  -  ",PRTAGEGP
          APPEND    AGETO,PRTAGEGP
          RESET     PRTAGEGP
.
          MOVE      ZERO,SUBLOSDC
          MOVE      TMPDSCH,FORM8
          SUB       TMPDCASE,FORM8
.
          COMPARE   ZERO,FORM8              * see if we have zero discharges -
          GOTO      REC3100 IF EQUAL          daycases
.
          MOVE      TMPBDAYS,FORM12P4
          SUB       TMPDCASE,FORM12P4
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,SUBLOSDC
.
.------ format the length of stay print variables for the summary report ------
.
REC3100   MOVE      ZERO,SUBLOS
.
          COMPARE   ZERO,TMPDSCH            * see if we have zero discharges
          GOTO      REC3200 IF EQUAL
.
          MOVE      TMPBDAYS,FORM12P4
          DIV       TMPDSCH,FORM12P4
          MOVE      FORM12P4,SUBLOS
.
.------ print the current record for the summary report ------
.
REC3200   PRINT     *N,"|",*9,PRTAGEGP,*37,"|",TMPDCASE:
                       *47,"|",TMPLOSR1,*57,"|",TMPLOSR2,*67,"|",TMPLOSR3:
                       *77,"|",TMPLOSR4,*87,"| ",TMPBDAYS,*98,"|",*103,TMPDSCH:
                      *111,"|  ",SUBLOSDC,*122,"| ",SUBLOS,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ we are printing the detailed report ------
.
REC3500   COMPARE   "57",CLNO               * see if we need to paginate
          GOTO      REC3550 IF LESS
          CALL      HEAD0000                * print new page header
          GOTO      REC3580
.
.------ we don't need to paginate ------
.
REC3550   COMPARE   ZERO,FLAGFRST           * skip if not the first record
          GOTO      REC3600 IF EQUAL
.
          PACK      KEY4,TMPAGEGP,NINETY9
          CALL      RDTMPR3                 * get the total record
          MOVE      TMPBDAYS,TOTBDAYS
.
          MOVE      SAVKEY4,KEY4
          CALL      RDTMPR3                 * re-read current record for 
.                                             printing
.------ set up the age group print variable ------
.
REC3580   MOVE      AGEFROM,PRTAGEGP
          ENDSET    PRTAGEGP
          APPEND    "  -  ",PRTAGEGP
          APPEND    AGETO,PRTAGEGP
          RESET     PRTAGEGP
.
.------ set up the LOS print variable ------
.
REC3600   MOVE      "Day Case",PRTLOS
.
          COMPARE   ZERO,TMPLOS             * see if length of stay is zero
          GOTO      REC3700 IF EQUAL
          MOVE      " Over 65",PRTLOS
.
          COMPARE   TMPLOS,SIXTY5           * see if length of stay is > 65
          GOTO      REC3700 IF LESS
          PACK      PRTLOS,SP3,TMPLOS,SP3
.
.------ set up other print variables ------
.
REC3700   ADD       TMPBDAYS,TMPCUMBD
          MOVE      ZERO,SUBCUMPC
.
          COMPARE   ZERO,TOTBDAYS           * see if total bed days are zero
          GOTO      REC3800 IF EQUAL
.
          MOVE      TMPCUMBD,FORM12P4
          DIV       TOTBDAYS,FORM12P4
          MULT      "100",FORM12P4
          MOVE      FORM12P4,SUBCUMPC
.
.------ print the current record ------
.
REC3800   PRINT     *N,"|",*7,PRTAGEGP,*37,"|",*42,PRTLOS,*54,"|",*63,TMPDSCH:
                       *77,"|",*82,TMPBDAYS,*95,"|",*102,TMPCUMBD,*117,"|":
                       *122,SUBCUMPC,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ printing the record for the sixth option ------
.
REC4000   BRANCH    REPTYPE,REC4500         * skip if printing detailed report
          COMPARE   "57",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS
.
          MOVE      AGEFROM,PRTAGESX
          ENDSET    PRTAGESX
          APPEND    "  -  ",PRTAGESX
          APPEND    AGETO,PRTAGESX
          APPEND    "   - ",PRTAGESX
.
          MATCH     ANSF,TMPSEX            * skip if record is not for a female
          GOTO      REC4080 IF NOT EQUAL
          APPEND    "Female",PRTAGESX
          GOTO      REC4090
.
.------ we have a record for males ------
.
REC4080   APPEND    "Male",PRTAGESX
.
.------ reset the age and sex print variable ------
.
REC4090   RESET     PRTAGESX
.
          MOVE      ZERO,SUBLOSDC
          MOVE      TMPDSCH,FORM8
          SUB       TMPDCASE,FORM8
.
          COMPARE   ZERO,FORM8              * see if we have zero discharges -
          GOTO      REC4100 IF EQUAL          daycases
.
          MOVE      TMPBDAYS,FORM12P4
          SUB       TMPDCASE,FORM12P4
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,SUBLOSDC
.
.------ format the length of stay print variables for the summary report ------
.
REC4100   MOVE      ZERO,SUBLOS
.
          COMPARE   ZERO,TMPDSCH            * see if we have zero discharges
          GOTO      REC4200 IF EQUAL
.
          MOVE      TMPBDAYS,FORM12P4
          DIV       TMPDSCH,FORM12P4
          MOVE      FORM12P4,SUBLOS
.
.------ print the current record for the summary report ------
.
REC4200   PRINT     *N,"|",*9,PRTAGESX,*37,"|",TMPDCASE:
                       *47,"|",TMPLOSR1,*57,"|",TMPLOSR2,*67,"|",TMPLOSR3:
                       *77,"|",TMPLOSR4,*87,"| ",TMPBDAYS,*98,"|",*103,TMPDSCH:
                      *111,"|  ",SUBLOSDC,*122,"| ",SUBLOS,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ we are printing the detailed report ------
.
REC4500   COMPARE   "56",CLNO               * see if we need to paginate
          GOTO      REC4550 IF LESS
          CALL      HEAD0000                * print new page header
          GOTO      REC4570
.
.------ we don't need to paginate ------
.
REC4550   COMPARE   ZERO,FLAGFRST           * skip if not the first record
          GOTO      REC4600 IF EQUAL
.
          PACK      KEY5,TMPAGEGP,TMPSEX,NINETY9
          CALL      RDTMPR4                 * get the total record
          MOVE      TMPBDAYS,TOTBDAYS
.
          MOVE      SAVKEY5,KEY5
          CALL      RDTMPR4                 * re-read current record for 
.                                             printing
.------ set up the age group print variable ------
.
REC4570   MOVE      AGEFROM,PRTAGESX
          ENDSET    PRTAGESX
          APPEND    "  -  ",PRTAGESX
          APPEND    AGETO,PRTAGESX
          APPEND    "   - ",PRTAGESX
.
          MATCH     ANSF,TMPSEX            * skip if record is not for a female
          GOTO      REC4580 IF NOT EQUAL
          APPEND    "Female",PRTAGESX
          GOTO      REC4590
.
.------ we have a record for males ------
.
REC4580   APPEND    "Male",PRTAGESX
.
.------ reset the age and sex print variable ------
.
REC4590   RESET     PRTAGESX
.
.------ set up the LOS print variable ------
.
REC4600   MOVE      "Day Case",PRTLOS
.
          COMPARE   ZERO,TMPLOS             * see if length of stay is zero
          GOTO      REC4700 IF EQUAL
          MOVE      " Over 65",PRTLOS
.
          COMPARE   TMPLOS,SIXTY5           * see if length of stay is > 65
          GOTO      REC4700 IF LESS
          PACK      PRTLOS,SP3,TMPLOS,SP3
.
.------ set up other print variables ------
.
REC4700   ADD       TMPBDAYS,TMPCUMBD
          MOVE      ZERO,SUBCUMPC
.
          COMPARE   ZERO,TOTBDAYS           * see if total bed days are zero
          GOTO      REC4800 IF EQUAL
.
          MOVE      TMPCUMBD,FORM12P4
          DIV       TOTBDAYS,FORM12P4
          MULT      "100",FORM12P4
          MOVE      FORM12P4,SUBCUMPC
.
.------ print the current record ------
.
REC4800   PRINT     *N,"|",*7,PRTAGESX,*37,"|",*42,PRTLOS,*54,"|",*63,TMPDSCH:
                       *77,"|",*82,TMPBDAYS,*95,"|",*102,TMPCUMBD,*117,"|":
                       *122,SUBCUMPC,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ print a record for the seventh option ------
.
REC5000   BRANCH    REPTYPE,REC5500         * skip if printing detailed report
.
          COMPARE   "57",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS
.
          MOVE      "BLANK DOCTOR CODE",PRTDOCDS
.
          MATCH     SP6,TMPDOCT             * see if the doctor code is spaces
          GOTO      REC5200 IF EQUAL          
.
          MOVE      TMPDOCT,KEY6
          CALL      RDDOCT1                 * read doctor file
          BRANCH    OVRCD,REC5100
          CALL      FDOC0000                * format the doctors name
          MOVE      DOCTNAM,PRTDOCDS
          GOTO      REC5200
.
.----- doctor is not on the doctors file ------
.
REC5100   MOVE      "UNKNOWN DOCTOR",PRTDOCDS
.
.------ format the length of stay print variables ------
.
REC5200   MOVE      ZERO,SUBLOSDC
          MOVE      TMPDSCH,FORM8
          SUB       TMPDCASE,FORM8
.
          COMPARE   ZERO,FORM8              * see if we have zero discharges -
          GOTO      REC5300 IF EQUAL          daycases
.
          MOVE      TMPBDAYS,FORM12P4
          SUB       TMPDCASE,FORM12P4
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,SUBLOSDC
.
.------ format the length of stay print variables for the summary report ------
.
REC5300   MOVE      ZERO,SUBLOS
.
          COMPARE   ZERO,TMPDSCH            * see if we have zero discharges
          GOTO      REC5400 IF EQUAL
.
          MOVE      TMPBDAYS,FORM12P4
          DIV       TMPDSCH,FORM12P4
          MOVE      FORM12P4,SUBLOS
.
.------ print the current record for the summary report ------
.
REC5400   PRINT     *N,"|",*3,TMPDOCT,SP1,PRTDOCDS,*37,"|",TMPDCASE:
                       *47,"|",TMPLOSR1,*57,"|",TMPLOSR2,*67,"|",TMPLOSR3:
                       *77,"|",TMPLOSR4,*87,"| ",TMPBDAYS,*98,"|",*103,TMPDSCH:
                      *111,"|  ",SUBLOSDC,*122,"| ",SUBLOS,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ we are printing the detailed report ------
.
REC5500   COMPARE   "56",CLNO               * see if we need to paginate
          GOTO      REC5550 IF LESS
          CALL      HEAD0000                * print new page header
          GOTO      REC5580
.
.------ we don't need to paginate ------
.
REC5550   COMPARE   ZERO,FLAGFRST           * skip if we are not printing
          GOTO      REC5700 IF EQUAL          the first record
.
.------ we want to print the code and description for the first record OR -----
.------ after printing a new page header we want to print the code and ------
.------ description again ------
.
REC5580   MOVE      TMPDOCT,PRTDOCT
.
          PACK      KEY8,TMPDOCT,NINETY9
          CALL      RDTMPR5                 * get the total record
          MOVE      TMPBDAYS,TOTBDAYS
.
          MOVE      SAVKEY8,KEY8
          CALL      RDTMPR5                * re-read current record for printing
          MOVE      "BLANK DOCTOR CODE",PRTDOCDS
.
          MATCH     SP6,TMPDOCT             * see if the doctor code is spaces
          GOTO      REC5700 IF EQUAL          
.
          MOVE      TMPDOCT,KEY6
          CALL      RDDOCT1                 * read doctor file
          BRANCH    OVRCD,REC5600
          CALL      FDOC0000                * format the doctors name
          MOVE      DOCTNAM,PRTDOCDS
          GOTO      REC5700
.
.----- doctor is not on the doctors file ------
.
REC5600   MOVE      "UNKNOWN DOCTOR",PRTDOCDS
.
.------ set up length of stay print variable ------
.
REC5700   MOVE      "Day Case",PRTLOS
.
          COMPARE   ZERO,TMPLOS             * see if length of stay is zero
          GOTO      REC5800 IF EQUAL
          MOVE      " Over 65",PRTLOS
.
          COMPARE   TMPLOS,SIXTY5           * see if length of stay is > 65
          GOTO      REC5800 IF LESS
          PACK      PRTLOS,SP3,TMPLOS,SP3
.
.------ set up other print variables ------
.
REC5800   ADD       TMPBDAYS,TMPCUMBD
          MOVE      ZERO,SUBCUMPC
.
          COMPARE   ZERO,TOTBDAYS           * see if total bed days are zero
          GOTO      REC5900 IF EQUAL
.
          MOVE      TMPCUMBD,FORM12P4
          DIV       TOTBDAYS,FORM12P4
          MULT      "100",FORM12P4
          MOVE      FORM12P4,SUBCUMPC
.
.------ print the current record ------
.
REC5900   PRINT     *N,"|",*3,PRTDOCT,*10,PRTDOCDS,*37,"|",*42,PRTLOS,*54,"|":
                       *63,TMPDSCH,*77,"|",*82,TMPBDAYS,*95,"|",*102,TMPCUMBD:
                       *117,"|",*122,SUBCUMPC,*132,"|";
          ADD       ONE,CLNO
.
REC9999   RETURN
+
.**********************************************************************
.*                               PAGE0000                             *
.*     This routine prints the page seperator for all the reports     *
.**********************************************************************
PAGE0000  PRINT     *N,"*-------------------------------------------":
                       "--------------------------------------------":
                       "-------------------------------------------*";
          ADD       ONE,CLNO
.
PAGE9999  RETURN
+
.**********************************************************************
.*                                ADDV0000                            *
.*      Routine to add the variables just printed to the totals       *
.**********************************************************************
ADDV0000  BRANCH    REPTYPE,ADDV1000        * skip if printing detailed report
.
          COMPARE   SIX,SAVOPTN             * skip if not printing age and sex
          GOTO      ADDV1000 IF NOT EQUAL     report
.
          MATCH     ANSF,TMPSEX             * skip if sex is not female
          GOTO      ADDV0500 IF NOT EQUAL
          ADD       TMPDSCH,SUBDSCH
          ADD       TMPBDAYS,SUBBDAYS
          ADD       TMPDCASE,SUBDCASE
          ADD       TMPLOSR1,SUBLOSR1
          ADD       TMPLOSR2,SUBLOSR2
          ADD       TMPLOSR3,SUBLOSR3
          ADD       TMPLOSR4,SUBLOSR4
          GOTO      ADDV9999
.
.------ sex is male ------
.
ADDV0500  ADD       TMPDSCH,GNDDSCH
          ADD       TMPBDAYS,GNDBDAYS
          ADD       TMPDCASE,GNDDCASE
          ADD       TMPLOSR1,GNDLOSR1
          ADD       TMPLOSR2,GNDLOSR2
          ADD       TMPLOSR3,GNDLOSR3
          ADD       TMPLOSR4,GNDLOSR4
          GOTO      ADDV9999
.
.------ we are printing the detailed report ------
.
ADDV1000  ADD       TMPDSCH,GNDDSCH
          ADD       TMPBDAYS,GNDBDAYS
          ADD       TMPBDAYS,GNDCUMBD
          ADD       TMPDCASE,GNDDCASE
          ADD       TMPLOSR1,GNDLOSR1
          ADD       TMPLOSR2,GNDLOSR2
          ADD       TMPLOSR3,GNDLOSR3
          ADD       TMPLOSR4,GNDLOSR4
          ADD       TMPBDAYS,SUBCUMBD
          ADD       TMPDSCH,SUBDSCH
          ADD       TMPBDAYS,SUBBDAYS
          ADD       TMPDCASE,SUBDCASE
          ADD       TMPLOSR1,SUBLOSR1
          ADD       TMPLOSR2,SUBLOSR2
          ADD       TMPLOSR3,SUBLOSR3
          ADD       TMPLOSR4,SUBLOSR4
ADDV9999  RETURN
+
.**********************************************************************
.*                              SUBH0000                              *
.*       Routine to print the sub-totals for each health fund         *
.**********************************************************************
SUBH0000  COMPARE   "55",CLNO
          GOTO      SUBH1000 IF LESS
          CALL      HEAD0000                * paginate if required
          PRINT     *N,*4,"Claim Code : ",TMPCODE,SP3,DESCCODE;
          ADD       ONE,CLNO
.
          CALL      PAGE0000                * print underline
.
          PRINT     *N,"| Health Fund",*37,"| Length of Stay":
                     *54,"| Number Of Discharges",*77,"|",*82,"Bed Days":
                     *95,"| Cumulative Bed Days",*117,"| Cumulative %",*132,"|";
          ADD       ONE,CLNO
.
SUBH1000  CALL      PAGE0000                * print underline
.
          PRINT     *N,"|",*37,"|",*43,"Total",*54,"|",*63,TMPDSCH,*77,"|":
                       *82,TMPBDAYS,*95,"|",*102,TMPCUMBD,*117,"|":
                       *122,"100.00",*132,"|";
          ADD       ONE,CLNO
.
          COMPARE   "55",CLNO               * check to prevent double underline
          GOTO      SUBH9999 IF NOT LESS
          CALL      PAGE0000                * print underline
.
SUBH9999  RETURN
+
.**********************************************************************
.*                              SUBT0000                              *
.*         Routine to print the sub-totals for the various reports    *
.**********************************************************************
SUBT0000  COMPARE   "55",CLNO
          GOTO      SUBT1000 IF LESS
          CALL      HEAD0000                * paginate if required
.
          COMPARE   THREE,SAVOPTN           * skip if doing claim code option
          GOTO      SUBT3000 IF EQUAL
          GOTO      SUBT1100
.
SUBT1000  COMPARE   THREE,SAVOPTN           * skip if doing claim code option
          GOTO      SUBT3000 IF EQUAL
          CALL      PAGE0000                * print underline
.
SUBT1100  PRINT     *N,"|",*37,"|",*43,"Total",*54,"|",*63,TMPDSCH,*77,"|":
                       *82,TMPBDAYS,*95,"|",*102,TMPCUMBD,*117,"|":
                       *122,"100.00",*132,"|";
          ADD       ONE,CLNO
.
          COMPARE   "55",CLNO               * check to prevent double underline
          GOTO      SUBH9999 IF NOT LESS
          CALL      PAGE0000                * print underline
          GOTO      SUBT9999
.
.------ we are printing option 3 ------
.
SUBT3000  BRANCH    REPTYPE,SUBT3300        * skip if printing detailed report
          MOVE      ZERO,SUBLOSDC
          MOVE      SUBDSCH,FORM8
          SUB       SUBDCASE,FORM8
.
          COMPARE   ZERO,FORM8              * see if we have zero discharges -
          GOTO      SUBT3100 IF EQUAL         daycases
.
          MOVE      SUBBDAYS,FORM12P4
          SUB       SUBDCASE,FORM12P4
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,SUBLOSDC
.
.------ format the length of stay print variables ------
.
SUBT3100  MOVE      ZERO,SUBLOS
.
          COMPARE   ZERO,SUBDSCH            * see if we have zero discharges
          GOTO      SUBT3200 IF EQUAL
.
          MOVE      SUBBDAYS,FORM12P4
          DIV       SUBDSCH,FORM12P4
          MOVE      FORM12P4,SUBLOS
.
.------ print the sub-total record for the summary report ------
.
SUBT3200  CALL      PAGE0000                * print underline
.
          PRINT     *N,"| Total for ",DESCCODE,*37,"|",SUBDCASE:
                       *47,"|",SUBLOSR1,*57,"|",SUBLOSR2,*67,"|",SUBLOSR3:
                       *77,"|",SUBLOSR4,*87,"| ",SUBBDAYS,*98,"|",*101,SUBDSCH:
                      *111,"|  ",SUBLOSDC,*122,"| ",SUBLOS,*132,"|";
          GOTO      SUBT9000
.
.------ we are printing the detailed report ------
.
SUBT3300  PRINT     *N,"|",*37,"|",*41,"Sub-Total",*54,"|",*61,SUBDSCH,*77,"|":
                       *82,SUBBDAYS,*95,"|",*102,SUBCUMBD,*117,"|":
                       *122,"100.00",*132,"|";
.
SUBT9000  ADD       ONE,CLNO
.
SUBT9999  RETURN
+
.**********************************************************************
.*                              GNDT0000                              *
.*              Routine to print the grand-totals                     *
.**********************************************************************
GNDT0000  BRANCH    REPTYPE,GNDT5000        * skip if printing detailed report
.
          COMPARE   "54",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS    
.
          COMPARE   SIX,SAVOPTN             * skip if not printing option 6
          GOTO      GNDT3000 IF NOT EQUAL
.
          MOVE      ZERO,SUBLOSDC
          MOVE      SUBDSCH,FORM8
          SUB       SUBDCASE,FORM8
.
          COMPARE   ZERO,FORM8              * see if we have zero discharges -
          GOTO      GNDT1000 IF EQUAL         daycases
.
          MOVE      SUBBDAYS,FORM12P4
          SUB       SUBDCASE,FORM12P4
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,SUBLOSDC
.
.------ format the female length of stay print variables ------
.
GNDT1000  MOVE      ZERO,SUBLOS
.
          COMPARE   ZERO,TMPDSCH            * see if we have zero discharges
          GOTO      GNDT1100 IF EQUAL
.
          MOVE      SUBBDAYS,FORM12P4
          DIV       SUBDSCH,FORM12P4
          MOVE      FORM12P4,SUBLOS
.
.------ format the male length of stay print variables ------
.
GNDT1100  MOVE      ZERO,GNDLOSDC
          MOVE      GNDDSCH,FORM8
          SUB       GNDDCASE,FORM8
.
          COMPARE   ZERO,FORM8              * see if we have zero discharges -
          GOTO      GNDT1200 IF EQUAL         daycases
.
          MOVE      GNDBDAYS,FORM12P4
          SUB       GNDDCASE,FORM12P4
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,GNDLOSDC
.
.------ format the male length of stay print variables ------
.
GNDT1200  MOVE      ZERO,GNDLOS
.
          COMPARE   ZERO,TMPDSCH            * see if we have zero discharges
          GOTO      GNDT2000 IF EQUAL
.
          MOVE      GNDBDAYS,FORM12P4
          DIV       GNDDSCH,FORM12P4
          MOVE      FORM12P4,GNDLOS
.
.------ print the grand total record for option 6 for the summary report ------
.
GNDT2000  CALL      PAGE0000                * print underline
.
          PRINT     *N,"|",*9,"Grand Total   - Female",*37,"|",SUBDCASE:
                       *47,"|",SUBLOSR1,*57,"|",SUBLOSR2,*67,"|",SUBLOSR3:
                       *77,"|",SUBLOSR4,*87,"| ",SUBBDAYS,*98,"|  ",SUBDSCH:
                      *111,"|  ",SUBLOSDC,*122,"| ",SUBLOS,*132,"|":
                    *N,"|",*23,"- Male",*37,"|",GNDDCASE,*47,"|":
                       GNDLOSR1,*57,"|",GNDLOSR2,*67,"|",GNDLOSR3,*77,"|":
                       GNDLOSR4,*87,"| ",GNDBDAYS,*98,"|  ",GNDDSCH,*111:
                       "|  ",GNDLOSDC,*122,"| ",GNDLOS,*132,"|";
          ADD       TWO,CLNO
          GOTO      GNDT4100
.
.------ we are not printing option 6 ------
.
GNDT3000  MOVE      ZERO,SUBLOSDC
          MOVE      GNDDSCH,FORM8
          SUB       GNDDCASE,FORM8
.
          COMPARE   ZERO,FORM8              * see if we have zero discharges -
          GOTO      GNDT3100 IF EQUAL         daycases
.
          MOVE      GNDBDAYS,FORM12P4
          SUB       GNDDCASE,FORM12P4
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,SUBLOSDC
.
.------ format the length of stay print variables ------
.
GNDT3100  MOVE      ZERO,SUBLOS
.
          COMPARE   ZERO,TMPDSCH            * see if we have zero discharges
          GOTO      GNDT4000 IF EQUAL
.
          MOVE      GNDBDAYS,FORM12P4
          DIV       GNDDSCH,FORM12P4
          MOVE      FORM12P4,SUBLOS
.
.------ print the grand total for every summary report except option 6 ------
.
GNDT4000  CALL      PAGE0000                * print underline
.
          PRINT     *N,"| Grand Total",*37,"|",GNDDCASE,*47,"|",GNDLOSR1:
                       *57,"|",GNDLOSR2,*67,"|",GNDLOSR3,*77,"|",GNDLOSR4:
                       *87,"| ",GNDBDAYS,*98,"|  ",GNDDSCH,*111,"|  ",SUBLOSDC:
                      *122,"| ",SUBLOS,*132,"|";
          ADD       ONE,CLNO
.
GNDT4100  COMPARE   "42",CLNO
          GOTO      GNDT4200 IF LESS
          CALL      HEAD0000                * paginate if required
          GOTO      GNDT4300
.
GNDT4200  CALL      PAGE0000                * print underline
.
GNDT4300  PRINT     *N;
          GOTO      GNDT9999
.
.------ we are doing the detailed report ------
.
GNDT5000  COMPARE   "57",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS    
.
          PRINT     *N,"|",*37,"|",*40,"Grand Total",*54,"|",*61,GNDDSCH:
                           *77,"|",*82,GNDBDAYS,*95,"|",*102,GNDCUMBD,*117,"|":
                           *122,"100.00",*132,"|";
          ADD       ONE,CLNO
.
          COMPARE   "47",CLNO
          GOTO      GNDT5100 IF LESS
          CALL      HEAD0000                * paginate if required
          GOTO      GNDT5200
.
GNDT5100  CALL      PAGE0000                * print page end for grand totals
.
GNDT5200  PRINT     *N;
.
GNDT9999  RETURN
+
.**********************************************************************
.*                               ENDR0000                             *
.*               Routine to print the end of the report               *
.**********************************************************************
ENDR0000  BRANCH    REPTYPE,ENDR1000        * skip if printing detailed report
.
          PRINT     *N,"Discharged patients only appear on this report.":
                    *N,"The details are calculated as at the end of the ":
                      "period or the discharge date, whichever is applicable.":
                    *N,*N,"Day Cases",*21,"= Number of day cases":
                    *N,"  1 -",LOSRNG1,*21,"= Total number of bed days for":
                       " discharged patients whose length of stay was in this":
                       " range":
                    *N,LOSRNG2," -",LOSRNG3,*21,"= Total number of bed days":
                       " for discharged patients whose length of stay was in":
                       " this range":
                    *N,LOSRNG4," -",LOSRNG5,*21,"= Total number of bed days":
                       " for discharged patients whose length of stay was in":
                       " this range":
                    *N,"  ",LOSRNG6," +",*21,"= Total number of bed days":
                       " for discharged patients whose length of stay was in":
                       " this range":
                    *N,"Total Bed Days",*21,"= Total number of bed days for":
                       " discharged patients since admission + Day Cases":
                    *N,"Total Discharges",*21,"= Total number of discharged":
                       " patients":
                    *N,"ALOS Excl Day Cases = (Total Bed Days - Day Cases) / ":
                       "(Total Discharges - Day Cases)":
                    *N,"A.L.O.S.",*21,"= Total Bed Days / Total Discharges":
                    *N,*N,*N,"***  End of Report  ***"
          GOTO      ENDR9999
.
.------ we are printing the detailed report ------
.
ENDR1000  PRINT     *N,"Discharged patients only appear on this report.":
                    *N,"The details are calculated as at the end of the ":
                      "period or the discharge date, whichever is applicable.":
                    *N,*N,"Length of Stay       = Number of bed days that a ":
                       "patient has been in hospital since admission":
                    *N,"Number of Discharges = Total number of patients ":
                       "discharged in the period":
                    *N,"Bed Days             = Total number of bed days ":
                       "for discharged patients since admission + Day Cases":
                    *N,"Cumulative Bed Days  = Sum of all bed days for this ":
                       "code up to and including this length of stay":
                    *N,"Cumulative %         = Cumulative Bed Days / Total":
                       " Bed Days for code * 100":
                    *N,*N,*N,"***  End of Report  ***"
ENDR9999  RETURN
+
.**********************************************************************
.------ I/O routines for temp files ------
.
RATMPR1   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      PATTM1XX,KEY5;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      PATTM1XX,KEY5;;
          RETURN
.
RDTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      PATTM1XX,KEY5;TMPCODE,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
RKTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY5
          READKS    PATTM1XX;TMPCODE,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
RPTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY5
          READKP    PATTM1XX;TMPCODE,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
WRTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY5
          WRITE     PATTM1XX,KEY5;KEY5,TMPDSCH,TMPBDAYS
          RETURN
.
UPTMPR1   MOVE      TMPLOS,DTMPLOS
          UPDATE    PATTM1XX;TMPCODE,DTMPLOS,TMPDSCH,TMPBDAYS
          RETURN
.
DETMPR1   RESET     KEY5
          DELETE    PATTM1XX,KEY5
          RETURN
.
RATMPR2   MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      PATTM2XX,KEY11;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      PATTM2XX,KEY11;;
          RETURN
.
RDTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      PATTM2XX,KEY11;TMPCODE,TMPFUND,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
RKTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY11
          READKS    PATTM2XX;TMPCODE,TMPFUND,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
RPTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY11
          READKP    PATTM2XX;TMPCODE,TMPFUND,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
WRTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY11
          WRITE     PATTM2XX,KEY11;KEY11,TMPDSCH,TMPBDAYS
          RETURN
.
UPTMPR2   MOVE      TMPLOS,DTMPLOS
          UPDATE    PATTM2XX;TMPCODE,TMPFUND,DTMPLOS,TMPDSCH,TMPBDAYS
          RETURN
.
DETMPR2   RESET     KEY11
          DELETE    PATTM2XX,KEY11
          RETURN
.
RATMPR3   MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      PATTM3XX,KEY4;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR3   MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      PATTM3XX,KEY4;;
          RETURN
.
RDTMPR3   MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      PATTM3XX,KEY4;TMPAGEGP,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
RKTMPR3   MOVE      ZERO,OVRCD
          RESET     KEY4
          READKS    PATTM3XX;TMPAGEGP,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
RPTMPR3   MOVE      ZERO,OVRCD
          RESET     KEY4
          READKP    PATTM3XX;TMPAGEGP,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
WRTMPR3   MOVE      ZERO,OVRCD
          RESET     KEY4
          WRITE     PATTM3XX,KEY4;KEY4,TMPDSCH,TMPBDAYS
          RETURN
.
UPTMPR3   MOVE      TMPLOS,DTMPLOS
          UPDATE    PATTM3XX;TMPAGEGP,DTMPLOS,TMPDSCH,TMPBDAYS
          RETURN
.
DETMPR3   RESET     KEY4
          DELETE    PATTM3XX,KEY4
          RETURN
.
RATMPR4   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      PATTM4XX,KEY5;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR4   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      PATTM4XX,KEY5;;
          RETURN
.
RDTMPR4   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      PATTM4XX,KEY5;TMPAGEGP,TMPSEX,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
RKTMPR4   MOVE      ZERO,OVRCD
          RESET     KEY5
          READKS    PATTM4XX;TMPAGEGP,TMPSEX,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
RPTMPR4   MOVE      ZERO,OVRCD
          RESET     KEY5
          READKP    PATTM4XX;TMPAGEGP,TMPSEX,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
WRTMPR4   MOVE      ZERO,OVRCD
          RESET     KEY5
          WRITE     PATTM4XX,KEY5;KEY5,TMPDSCH,TMPBDAYS
          RETURN
.
UPTMPR4   MOVE      TMPLOS,DTMPLOS
          UPDATE    PATTM4XX;TMPAGEGP,TMPSEX,DTMPLOS,TMPDSCH,TMPBDAYS
          RETURN
.
DETMPR4   RESET     KEY5
          DELETE    PATTM4XX,KEY5
          RETURN
.
RATMPR5   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATTM5XX,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR5   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATTM5XX,KEY8;;
          RETURN
.
RDTMPR5   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATTM5XX,KEY8;TMPDOCT,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
RKTMPR5   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKS    PATTM5XX;TMPDOCT,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
RPTMPR5   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKP    PATTM5XX;TMPDOCT,DTMPLOS,TMPDSCH,TMPBDAYS
          GOTO      OVERCOND IF OVER
          MOVE      DTMPLOS,TMPLOS
          RETURN
.
WRTMPR5   MOVE      ZERO,OVRCD
          RESET     KEY8
          WRITE     PATTM5XX,KEY8;KEY8,TMPDSCH,TMPBDAYS
          RETURN
.
UPTMPR5   MOVE      TMPLOS,DTMPLOS
          UPDATE    PATTM5XX;TMPDOCT,DTMPLOS,TMPDSCH,TMPBDAYS
          RETURN
.
DETMPR5   RESET     KEY8
          DELETE    PATTM5XX,KEY8
          RETURN
.
RATMPR6   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM6XX,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR6   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM6XX,KEY3;;
          RETURN
.
RDTMPR6   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM6XX,KEY3;TMPCODE,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                                  TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR6   MOVE      ZERO,OVRCD
          RESET     KEY3
          READKS    PATTM6XX;TMPCODE,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                             TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR6   MOVE      ZERO,OVRCD
          RESET     KEY3
          READKP    PATTM6XX;TMPCODE,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                             TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR6   MOVE      ZERO,OVRCD
          RESET     KEY3
          WRITE     PATTM6XX,KEY3;KEY3,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                                       TMPLOSR2,TMPLOSR3,TMPLOSR4
          RETURN
.
UPTMPR6   UPDATE    PATTM6XX;TMPCODE,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                             TMPLOSR2,TMPLOSR3,TMPLOSR4
          RETURN
.
DETMPR6   RESET     KEY3
          DELETE    PATTM6XX,KEY3
          RETURN
.
RATMPR7   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM7XX,KEY9;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR7   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM7XX,KEY9;;
          RETURN
.
RDTMPR7   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM7XX,KEY9;TMPCODE,TMPFUND,TMPDSCH,TMPBDAYS,TMPDCASE:
                                  TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR7   MOVE      ZERO,OVRCD
          RESET     KEY9
          READKS    PATTM7XX;TMPCODE,TMPFUND,TMPDSCH,TMPBDAYS,TMPDCASE:
                             TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR7   MOVE      ZERO,OVRCD
          RESET     KEY9
          READKP    PATTM7XX;TMPCODE,TMPFUND,TMPDSCH,TMPBDAYS,TMPDCASE:
                             TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR7   MOVE      ZERO,OVRCD
          RESET     KEY9
          WRITE     PATTM7XX,KEY9;KEY9,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                                       TMPLOSR2,TMPLOSR3,TMPLOSR4
          RETURN
.
UPTMPR7   UPDATE    PATTM7XX;TMPCODE,TMPFUND,TMPDSCH,TMPBDAYS,TMPDCASE:
                             TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          RETURN
.
DETMPR7   RESET     KEY9
          DELETE    PATTM7XX,KEY9
          RETURN
.
RATMPR8   MOVE      ZERO,OVRCD
          RESET     KEY2
          READ      PATTM8XX,KEY2;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR8   MOVE      ZERO,OVRCD
          RESET     KEY2
          READ      PATTM8XX,KEY2;;
          RETURN
.
RDTMPR8   MOVE      ZERO,OVRCD
          RESET     KEY2
          READ      PATTM8XX,KEY2;TMPAGEGP,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                                  TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR8   MOVE      ZERO,OVRCD
          RESET     KEY2
          READKS    PATTM8XX;TMPAGEGP,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                             TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR8   MOVE      ZERO,OVRCD
          RESET     KEY2
          READKP    PATTM8XX;TMPAGEGP,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                             TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR8   MOVE      ZERO,OVRCD
          RESET     KEY2
          WRITE     PATTM8XX,KEY2;KEY2,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                                       TMPLOSR2,TMPLOSR3,TMPLOSR4
          RETURN
.
UPTMPR8   UPDATE    PATTM8XX;TMPAGEGP,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                             TMPLOSR2,TMPLOSR3,TMPLOSR4
          RETURN
.
DETMPR8   RESET     KEY2
          DELETE    PATTM8XX,KEY2
          RETURN
.
RATMPR9   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM9XX,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR9   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM9XX,KEY3;;
          RETURN
.
RDTMPR9   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM9XX,KEY3;TMPAGEGP,TMPSEX,TMPDSCH,TMPBDAYS,TMPDCASE:
                                  TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR9   MOVE      ZERO,OVRCD
          RESET     KEY3
          READKS    PATTM9XX;TMPAGEGP,TMPSEX,TMPDSCH,TMPBDAYS,TMPDCASE:
                             TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR9   MOVE      ZERO,OVRCD
          RESET     KEY3
          READKP    PATTM9XX;TMPAGEGP,TMPSEX,TMPDSCH,TMPBDAYS,TMPDCASE:
                             TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR9   MOVE      ZERO,OVRCD
          RESET     KEY3
          WRITE     PATTM9XX,KEY3;KEY3,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                                       TMPLOSR2,TMPLOSR3,TMPLOSR4
          RETURN
.
UPTMPR9   UPDATE    PATTM9XX;TMPAGEGP,TMPSEX,TMPDSCH,TMPBDAYS,TMPDCASE:
                             TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          RETURN
.
DETMPR9   RESET     KEY3
          DELETE    PATTM9XX,KEY3
          RETURN
.
RATMPR10  MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      PATTM10X,KEY6;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR10  MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      PATTM10X,KEY6;;
          RETURN
.
RDTMPR10  MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      PATTM10X,KEY6;TMPDOCT,TMPDSCH,TMPBDAYS,TMPDCASE:
                                  TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR10  MOVE      ZERO,OVRCD
          RESET     KEY6
          READKS    PATTM10X;TMPDOCT,TMPDSCH,TMPBDAYS,TMPDCASE:
                             TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR10  MOVE      ZERO,OVRCD
          RESET     KEY6
          READKP    PATTM10X;TMPDOCT,TMPDSCH,TMPBDAYS,TMPDCASE:
                             TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR10  MOVE      ZERO,OVRCD
          RESET     KEY6
          WRITE     PATTM10X,KEY6;KEY6,TMPDSCH,TMPBDAYS,TMPDCASE,TMPLOSR1:
                                       TMPLOSR2,TMPLOSR3,TMPLOSR4
          RETURN
.
UPTMPR10  UPDATE    PATTM10X;TMPDOCT,TMPDSCH,TMPBDAYS,TMPDCASE:
                             TMPLOSR1,TMPLOSR2,TMPLOSR3,TMPLOSR4
          RETURN
.
DETMPR10  RESET     KEY6
          DELETE    PATTM10X,KEY6
          RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       PATGEXT
.
          INC       PATCODKY
          INC       PATDOCKY
          INC       PATFNDDS
          INC       PATWRDDS
.
          INC       PATEX1IO/INC
          INC       PATEXBIO/INC
          INC       PATEXCIO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATFN1IO/INC
          INC       PATWR1IO/INC
+
