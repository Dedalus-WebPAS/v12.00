.******************************************************************************
.*  System   : THEATRE SYSTEM                                                 *
.*  Program  : IBAOPR54                                                       *
.*  Desc.    : Daily Theatre List (Epworth only)                              *
.******************************************************************************
.*  Date     : 25/01/1993                                                     *
.*  Author   : Justin Coates                                                  *
.*  Function : To print the daily list for Epworth - copied from ibaopr50     *
.*             and changed certain things - see Quote 7544 / SRF 119461       *
.*  Mods     :                                                                *
.******************************************************************************
.*       V12.00.01 16/05/2025  J.Tan          TSK 0955096                     *
.                  Added alpanumeric visit number generation                  *
.*       V11.03.02 20/04/2023  Thanh T          TSK 0909393                   *
.*                 Changed SDTM0000 to setup KEY22 with OPDAHOSP              *
.*       V11.03.01 20/03/2023  PJ Le Febour   TSK 0909393                     *
.*                 Amended   KEY19 to KEY22 for theatre index changes         *
.*       V10.04.01 15/04/2014  J.Tan          CAR 261630                      *
.*                 Removed port number from temp file name                    *
.*       V10.03.04 18/10/2012  Jill Parkinson CAR 273375                      *
.*                  Recompiled for DATECONV - first day of year calculation   *
.*       V10.03.03 19/04/2012  Saroeun Soeur CAR 263624                       *
.*                  change to CATBK,BKRETYPE with THCSCOD                     *
.*       V10.03.02 16/04/2012  Saroeun Soeur CAR 263624                       *
.*                  commented out duplicate open for pathspaf.                *
.*                  open pmsvx1af regardless of multihosp or not.             *
.*       V10.03.01 18/03/2012  Peter McMullenn CAR 259587                     *
.*                 Remove all refereces to redundant file patyears            *
.*       V10.00.01 18/10/2010  Ebon Clements CAR 192313                       *
.*                 Include pre admission, admitted and discharged - BDEA1000  *
.*        V9.08.00  30/05/2007  Jill Habasque CAR 141597                      *
.*                  Copied from 9.06                                          *
.*        V9.06.00  06/12/2006  Janet George                                  *
.*                  Ported from V6 to V9                                      *
.*                  Included functionality for multihospital                  *
.*        V6.06.01  09/09/1999  Steve Downing                                 *
.*                  Redundant code removed                                    *
.*        V6.06.B02 15/02/1999  Jill Habasque                                 *
.*                  Fixed DISPHEAD display                                    *
.*        V6.06.B01 22/01/1999 J.Tan   SRF 629070                             *
.*                  Added actual start and end date to session file           *
.*        V6.05.03  24/11/1998  Nicole Harrington                             *
.*                  Removed CCENTRY                                           *
.*        V6.05.02 12/11/1998  Steve Armstrong   srf 629062                   *
.*                 Fixed calculation of NDAT0000 so that is passes            *
.*                 century to DMYCON & JULCON and allows these routines       *
.*                 to handle century.                                         *
.*                 12/11/1998  N Harrington                                   *
.*                 Changed to use HEAD132                                     *
.*        V6.05.B01 17/06/1998  J.Tan                                         *
.*                  Fixed dates                                               *
.******************************************************************************
.*             V6.05.01 22/10/1998  J Habasque SRF 628342                     *
.*             Fixed Option 2 - By Medical Admissions Report                  * 
.*             V6.00.01 05/04/93 J.Tan   SRF 121655                           *
.*             Mods to exclude cancelled patients for cancelled sessions      *
.*             V6.00.02 13/04/93 J.Tan   SRF 121755                           *
.*             Fixed the total number of lines for option one                 *
.*             V6.00.03 09/11/1993    Gabrielle      HCOA Mods/Bugs           *
.*                      Recompiled for "priority 1" fixes for HCOA            *
.******************************************************************************
.
... NOTE: error messages should be of the form
.         DISPLAY   *P1:24,*B,*EL,"Invalid Code.  ";
.         CALL      HITENTER
... as per the standards manual point 2.04 - Error Messages
.
          INC       STD001FD
          INC       IBASEQFD/INC            * Sequential Numbers File
          INC       TFILEVAR/INC            * Generate Temp File Name
          INC       WEBERRFD/INC            * Web Server Error Logging
.
          INC       BOKDIAFD/INC       * Bookings file
          INC       BOKRC1FD/INC       * Bookings file
          INC       OPRCONFD/INC       * System parameters
          INC       OPRDEAFD/INC       * Operation Details file
          INC       OPRDEBFD/INC       * Operating Team file
          INC       OPROPRFD/INC       * Operating Room file1
          INC       OPRSESFD/INC       * Sessions file
          INC       PATCALAG/INC       * vars for calcage
          INC       PATCODFD/INC       * Codes file
          INC       PATCONFD/INC       * Patient Control file
          INC       PATDO1FD/INC       * Doctors file
          INC       PATMA1FD/INC       * Patient Master file
.          INC       HL7BMTFD/INC
          INC       PATMI1FD/INC       * Admissions file
          INC       PATPR1FD/INC       * Pre-admissions file
          INC       PATTRNFD/INC       * Transfers file
          INC       PATWR1FD/INC       * Wards file
.       
          INC       PMSVX1FD/INC       * Patient Visit Extension file
          INC       PATHSPFD/INC
.
.         Temp files and variables
.
DATEFILE  IFILE     SQL, FIXED=9, KEY="U1-8"
.
. NAME    TYPE   LENGTH  PHYSICAL START LOC.   DESCRIPTION
. ----    ----   ------  -------- ----------   -----------
PRNTDATE  DIM       8        8          1      Date of Session or Admission
.                                       9      End of Record
.
SESSFILE  IFILE     SQL, FIXED=46, KEY="U1-8,9-11,12-17,18-22,23-28,43-45"
.
. NAME    TYPE   LENGTH  PHYSICAL START LOC.   DESCRIPTION
. ----    ----   ------  -------- ----------   -----------
XSESDATE  DIM       8        8          1      Date of Session ccyymmdd
XPERIOD   DIM       3        3          9      Session Period Code (Cat SP)
XTHEATRE  DIM       6        6         12      Theatre code
XTIME     DIM       5        5         18      Session start time
XCLIN     DIM       6        6         23      Clinic/surgeon code
XANAE     DIM       6        6         29      Anaesthestist code
XNLINES   FORM      4        3         35      Number of lines required for sess
XSSTAT    FORM      1        2         38      Session status 
XSTYPE    DIM       3        3         40      Session type (Cat ST)
XHOSP     DIM       3        3         43      Hospital ID
.End of Record                         46
.
.         program variables
.
BJDAY     FORM      3         * for calcage
CFNAMEA   DIM       8         * filename for datefile
CFNAMEB   DIM       8         * filename for sessfile
CJDAY     FORM      3         * for calcage
CMDLINE   DIM       256       * for execute command
CNTVAR    FORM      2         * underline counter
CONTFLAG  FORM      1         * continued from AM flag
COUNT     FORM      1
CURRSESS  DIM       22        * the current session
CURRTHET  DIM       6         * the current theatre
PSAGETYP  DIM       3         
PSAGECON  DIM       3
.
DATE8A    DIM       8         * starting date ccyymmdd
DATE8B    DIM       8         * ending date ccyymmdd
DATE8Z    DIM       8         * general date
DATE10A   DIM       10        * starting date description dd/mm/ccyy
DATE10B   DIM       10        * ending   date description dd/mm/ccyy
DATEADSE  DIM       15        * whether Session or Exp Adm date to print
DATEEND   DIM       8         * ending date ccyymmdd
DATEEND1  DIM       8
DATEFROM  DIM       8
DATESTRT  DIM       8         * starting date ccyymmdd
.
DAYADSES  DIM       15        * whether Session or Exp Adm day to print
DAYDESC   DIM       9         * holds description of session day
DEBDOC    DIM       6
DEBDC1    DIM       6
DEBDC2    DIM       6
DEBDC3    DIM       6
DESC40    DIM       40
DIFFTEAM  FORM      1
DIM3      DIM       3         * patdsdoc
DIM4      DIM       4
DIM30     DIM       30        * oproprds
DOCCOD1   FORM      1
DOCCODE   DIM       6
DOCTCOD1  DIM       6
DOCTCOD2  DIM       6
DOCTCOD3  DIM       6
DOCTDESC  DIM       40
DOCTNAM1  DIM       40
DOCTNAM2  DIM       40
DOCTNAM3  DIM       40
DOCTOR    DIM       6
DSPMONTH  DIM       9
DTYPE     DIM       3
DURATION  FORM      5
.
ENDCR     DIM       6
ENDOPER   DIM       40
.
FNDANAE   FORM      1
FNDSURG   FORM      1
FOLLFLAG  FORM      1         * for SHED = 1 dont print theatre description
FSTCASE   FORM      1
.
INCVSES   FORM      1         * include vacant sessions
INCLCANC  DIM       1         * include cancelled sessions
.
NEWPGPER  DIM       1         * new page for a diff. period
NEWTEAM   DIM       55
NTLEN     FORM      2
NUMREC    FORM      4
.
OPDTADDT  DIM       1         * flag for if op date = exp. adm. date
OPRCODE   FORM      1
OPRDESC1  DIM       40
OPRDESC2  DIM       40
.
PACDOCTS  DIM       90
PATAGE    DIM       3         * patients age
PATNAM2   DIM       31
PATNAME   DIM       32
PERDCNT   FORM      1         * which period up to
.
SAVHOSP   DIM       3         * save print hospital
SAVCLIN   DIM       6
SAVDATE   DIM       8         * save print date
SAVKEY19  DIM       19
SAVKEY23  DIM       23
SAVKEY22  DIM       22
SAVKEY26  DIM       26
SAVTIME   DIM       8
SAVTPER   DIM       3
SESDOC    DIM       6
SESHEAD   FORM      1 
SP50      DIM       50
STARTCR   DIM       6
STRTOPER  DIM       6
STRTDAYS  FORM      3
STRTYR    FORM      2
STRTCENT  FORM      2
STRTLEAP  FORM      1
.
THEATRE   DIM       6
TODAY     DIM       8
TOMMDATE  DIM       8
TPERIOD   DIM       3
TRDOC     DIM       22        * truncate doctors name
.
VAR       FORM      2
WARDDESC  DIM       12
WRDBED7   DIM       7
.
HOSCODE   DIM       3
.
.         IBACONFD Variable
.
IBCNMHOS  FORM      1
.
.         program constants
.
CATST     INIT      "ST"
CATBK     INIT      "BK"
.
JAN       INIT      "January"
FEB       INIT      "February"
MAR       INIT      "March"
APRIL     INIT      "April"
MAY       INIT      "May"
JUNE      INIT      "June"
JULY      INIT      "July"
AUG       INIT      "August"
SEPT      INIT      "September"
OCT       INIT      "October"
NOV       INIT      "November"
DEC       INIT      "December"
.
MONDAY    INIT      "Monday"
TUESDAY   INIT      "Tuesday"
WEDNSDAY  INIT      "Wednesday"
THURSDAY  INIT      "Thursday"
FRIDAY    INIT      "Friday"
SATURDAY  INIT      "Saturday"
SUNDAY    INIT      "Sunday"
.
AM        INIT      "AM"
.
FINISH    INIT      "Finish"
.
MENU1     INIT      "Daily List & Admiss."
MENU2     INIT      "Medical Admissions  "
MENU3     INIT      "Daily List          "
.
PM        INIT      "PM"
.
START     INIT      "Start"
KEYA      INIT      " 9 U1-8"
KEYB      INIT      " 46 U1-8,9-11,12-17,18-22,23-28,43-45"
ISBUILD   INIT      "isbuild "
ISERASE   INIT      "iserase "
ZZZZ      INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
PRGID     INIT      "IBAOPR54"
PRGNAM    INIT      "DAILY THEATRE LIST"
VERSION   INIT      "V12.00.01"
+
.*********************************************************************
.                   ML0000
.         Controlling Logic (Mainline code)
.*********************************************************************
ML0000    CALL      INIT0000               * initialization and open files
          BRANCH    EXIT,ML9999             * exit
.
ML0500    CALL      MENU0000
          BRANCH    MOPTION,ML1000,ML2000,ML1000
          GOTO      ML9999
.
.         Daily List with/without Medical Admissions
.
ML1000    CALL      VACS0000                * include vacant sessions?
          CALL      CNCS0000                * include cancelled sessions?
          CALL      PPSP0000                * print each per. on sep. page
.
          CALL      CLRT0000                * clear theatre variables
          CALL      CLRD0000                * clear doctor variables
          CALL      SCR0000                 * display screen format
          CALL      ACCP0000                * accept initial values
          BRANCH    EXIT,ML0500             * exit char inputted
.
          CALL      SEL0000                 * select field to modify
          BRANCH    EXIT,ML0500             * (C)ancel selected
.
          CALL      DATE0000                * set up date temp file
          CALL      LDAT0000                * loop over date file
          GOTO      ML0500
.
.         Medical Admission Report
.
ML2000    CALL      SCRE0000                * display screen
          CALL      RDAT0000                * keyin date range of theatre
.
          CALL      CONTQST                 * OK to continue
          BRANCH    CEXIT,ML2500,ML2000,ML0500
.                         Yes    No     Exit
.
ML2500    CALL      DATE0000                * set up date file
          CALL      LDAT0000                * loop over date file
          GOTO      ML0500
.
ML9999    CHAIN     PGM                     * chain back to program
+
.*****************************************************************************
.                   INIT0000
.         Initialisation and open files
.*****************************************************************************
INIT0000  MOVE      ZERO,EXIT
          CALL      DISPHEAD
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.          READ      CONTROLF,EIGHTY;*1,HLBMDGUP,*2,HLBMDGUA,*105,HLBMDGAD:
.                                    *106,HLBMDGDS,*107,HLBMDGTR,*108,HLBMDGRG
          READ      CONTROLF,FORTY;*81,OPCNODSC
          READ      CONTROLF,ZERO;*43,IBCNMHOS
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          IF        IBCNMHOS = 1
            OPEN      PATHSPA1,"pathspaf"
.
            DISPLAY   *P1:5,*EF,"Hospital Id : ";
            MOVE      TEN5,ECOL
            MOVE      FIVE,EVERT
            MOVE      SP3,CKYIDEF3
            MOVE      ONE,CKYIMAND               * set for mandatory
            CALL      PATHSPKY                   * get hospital
            COMPARE   TWO,EXIT                   * exit selected
            GOTO      INIT9000 IF EQUAL
.
            MOVE      KEY3,HOSCODE
            DISPLAY   *P22:5,*EL,PTHSNAME;
          ENDIF
.
.          IF        IBCNMHOS = 1
.            DISPLAY   *P64:24,"pathspaf";
.            OPEN      PATHSPA1,"pathspaf"
.          ENDIF
.
. ------  set OPCNODSC for screen display ------
.
          ENDSET    OPCNODSC
.
INIT1000  CMATCH    SP1,OPCNODSC
          GOTO      INIT2000 IF NOT EQUAL
          BUMP      OPCNODSC,-1
          GOTO      INIT1000 IF NOT EOS
.
INIT2000  MOVEFPTR  OPCNODSC,CCOL4
          ADD       FOUR,CCOL4
          LENSET    OPCNODSC
          RESET     OPCNODSC
.
. ----------------------------------------------
.
          DISPLAY   *P64:24,"bokrc1af";
          OPEN      BOKRC1A1,"bokrc1af"
          OPEN      BOKRC1A4,"bokrc1af"
.
          DISPLAY   *P64:24,"bokdiaaf";
          OPEN      BOKDIAA1,"bokdiaaf"
.
          DISPLAY   *P64:24,"oprdetaf";
          OPEN      OPRDETA1,"oprdetaf"
          OPEN      OPRDETA2,"oprdetaf"
.
          DISPLAY   *P64:24,"oprdetbf";
          OPEN      OPRDETB1,"oprdetbf"
.
          DISPLAY   *P64:24,"opropraf";
          OPEN      OPROPRA1,"opropraf"
          OPEN      OPROPRA2,"opropraf"
.
          DISPLAY   *P64:24,"oprsesaf";
          OPEN      OPRSESA1,"oprsesaf"
          OPEN      OPRSESA2,"oprsesaf"
          OPEN      OPRSESA7,"oprsesaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
          OPEN      PATDO1A2,"patdo1af"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A3,"patmi1af"
.
          DISPLAY   *P64:24,"patpr1af";
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN1,"pattranf"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,CFNAMEA
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,CFNAMEB
.
          CALL      IBACLOCK
          MOVE      ONE,CNEWDS         * set the new ? routines
          MOVE      ONE,CNOUNDLN               
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
          PACK      SP50,SP30,SP20
          RESET     SP50
          GOTO      INIT9999
.
INIT9000  MOVE      ONE,EXIT
INIT9999  RETURN
+
.*****************************************************************************
.                   MENU0000
.         Menu driver routine
.*****************************************************************************
MENU0000  CALL      DISPHEAD
.
          DISPLAY   *P1:3,*EF,*V2LON:
                    *P1:4,"0",*P1:5,"1",*P1:6,"2",*P1:7,"3",*HOFF:
                    *P3:4," = Exit":
                    *P3:5," = By Daily List plus Medical Admissions":
                    *P3:6," = By Medical Admissions Report ":
                    *P3:7," = By Daily List without Medical Admissions":
                    *P1:9,"Select Option : ";
.
MENU1000  KEYIN     *P17:9,*EL,*DV,UNDLN1,*P17:9,*V2LON,MOPTION;
.
          COMPARE   ZERO,MOPTION
          GOTO      MENU9000 IF EQUAL
.
          BRANCH    MOPTION,MENU8000,MENU8000,MENU8000
          BEEP
          GOTO      MENU1000
.
MENU8000  LOAD      CPHDROPT,MOPTION,MENU1,MENU2,MENU3
          DISPLAY   *P49:2,*V2LON,"- ",CPHDROPT;
.
          MOVE      FALSE,EXIT
          GOTO      MENU9999
.
MENU9000  MOVE      TRUE,EXIT
.
MENU9999  RETURN
+
.**************************************************************************
.*                  NDAT0000                     Called by : SCRE ACCP    *
.*        Calculate the date of the day after the date given      VPSP    *
.*        Para's  : KEY8          starting date                           *
.*        Returns : TOMMDATE      day after date given                    *
.**************************************************************************
NDAT0000  UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC                * move current century
          MOVE      CYEAR,YY                * move current year
          MOVE      CMON,MM                 * move current month
          MOVE      CDAY,DD                 * move current day
.
          CALL      DMYCON                  * convert to Julian day
.                                             JULDAY - day ; JULYR - year
          ADD       ONE,JULDAY              * get the next day
          MOVE      JULDAY,JWKDAY           * set up day
          MOVE      JULYR,JWKYER            * set up year
          MOVE      JULCC,JWKCC             * set up century
.
          CALL      JULCON                  * convert back to DMY
.                                             YY - year ; MM - month ; DD - day
          MOVE      DD,CDAY                 * set day
          MOVE      MM,CMON                 * set month
          MOVE      YY,CYEAR                * set year
          MOVE      CC,CCENT                * set century
.
          PACK      TOMMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",TOMMDATE           * tomorrow's date
.
NDAT9999  RETURN
+
.*****************************************************************************
.*                  RDAT0000                          Called by :            *
.*        Enter the date range                                               *
.*        Returns : DATESTRT/DATE10A/DATE8A   starting date                  *
.*                  DATEEND /DATE10B/DATE8B   ending   date                  *
.*****************************************************************************
RDAT0000  MOVE      ZERO,CCANLDTE
          MOVE      ZERO,CHIGHLT
          MOVE      ONE,CDEFDTE
          MOVE      SP20,DATE10A
          UNPACK    SP20,DATEEND,DATE10B
          UNPACK    SP20,DATE8A,DATE8B
.
.         enter starting date - DATESTRT
.
RDAT1000  MOVE      "32",CCOL              * column for keyin date
          MOVE      FOUR,CVERT             * row for keyin date
.
          UNPACK    DATESTRT,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    CQUEST,RDAT0000        * "?" not allowed
.         BRANCH    OVRCD,RDAT1000         * invalid input
.
          PACK      DATESTRT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DATESTRT
          PACK      DATE8A,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DATE8A
.
          CALL      PACDATE
          MOVE      CPCDATE,DATE10A         * the formatted date
.
.         enter the ending date - DATEEND
.
RDAT3000  MOVE      "4",CVERT               * row
          MOVE      "46",CCOL               * column
          CALL      KEYDATE
          BRANCH    CQUEST,RDAT3000
          BRANCH    OVRCD,RDAT3000
.
          PACK      DATEEND,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DATEEND
          PACK      DATE8B,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DATE8B
.
          MATCH     DATESTRT,DATEEND
          GOTO      RDAT8000 IF NOT LESS    * end date >= starting date
.
          DISPLAY   *P1:24,*EL,*B,"Invalid Date range.  ",*EL;
          CALL      HITENTER 
          GOTO      RDAT3000
.
RDAT8000  CALL      PACDATE
          MOVE      CPCDATE,DATE10B         * formatted end date
          GOTO      RDAT9999
.
.         invalid date 
.
RDAT9000  DISPLAY   *P1:24,*EL,*B,"Date must be today's or future date.  ";
          CALL      HITENTER
          GOTO      RDAT0000
.
RDAT9999  RETURN
+
.**************************************************************************
.*                         CLRT0000               Called by : MANY        *
.*              clear working variables for operating theatre codes       *
.*              and description.                                          *
.**************************************************************************
CLRT0000  PACK      OPRDESC1,SP30,SP10
          PACK      OPRDESC2,SP30,SP10
          MOVE      SP10,STARTCR
          MOVE      SP10,ENDCR
          MOVE      SP6,STRTOPER
          MOVE      SP6,ENDOPER
CLRT9999  RETURN
+
.**************************************************************************
.*                  KOPR0000                         Called by : ML0000   *
.*        keyin the theatre code                                          *
.**************************************************************************
KOPR0000  KEYIN     *P32:CVERT,*EL,*DV,UNDLN6:
                    *P32:CVERT,*V2LON,THEATRE:
                    *P32:CVERT,*DV,THEATRE;
.
          CALL      CHEK0000                     * validate user input
          BRANCH    CEXIT,KOPR1000,KOPR0000
.                          ?       invalid
.         valid input
.
          BRANCH    OPRCODE,KOPR0500,KOPR0600

KOPR0500  DISPLAY   *P32:6,*EL,*V2LON,STARTCR,*HOFF,SP2,OPRDESC1;
          GOTO      KOPR8000
.
KOPR0600  DISPLAY   *P32:8,*EL,*V2LON,ENDCR,*HOFF,SP2,OPRDESC2;
          GOTO      KOPR7500
.
.         ? entered
.
KOPR1000  CALL      OPROPRDS                  
.
KOPR3000  DISPLAY   *P1:24,*EL,*+,OPCNODSC," : ";
          KEYIN     *PCCOL4:24,*DV,UNDLN6,*PCCOL4:24,*V2LON,THEATRE:
                    *PCCOL4:24,*DV,THEATRE;
.
          CALL      CHEK0000
          BRANCH    CEXIT,KOPR1000,KOPR3000 
.                          ?       invalid
.
          CALL      SCR0000                        * redisplay screen
          CALL      DISP0000                       * display fields
          BRANCH    OPRCODE,KOPR8000               * for start code
.
KOPR7500  MATCH     STRTOPER,ENDOPER
          GOTO      KOPR9000 IF LESS
.
KOPR8000  MOVE      FALSE,EXIT                   * valid input
          GOTO      KOPR9999
.
KOPR9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Ending Code must be > or equal to Starting Code **  ";
          CALL      HITENTER
          MOVE      TRUE,EXIT                    * invalid range
.
KOPR9999  RETURN
+
.***************************************************************************
.*                  CHEK0000                           Called by: KOPR0000 *
.*        Validate theatre id. code field                                  *
.*        Returns : CEXIT = (0)   If an operator code is entered           * 
.*                          (1)   If a question mark "?" is entered        *
.*                          (2)   invalid input                            *
.***************************************************************************
CHEK0000  ENDSET    THEATRE                      * Pad the field with spaces
          APPEND    SP6,THEATRE
          RESET     THEATRE
.
.         Check if anything was input and set the exit flag appropriately
.
          MATCH     SP6,THEATRE                  * Was anything input ?
          GOTO      CHEK9000 IF EQUAL            * No
.
.         Check for a "?"
.
          CMATCH    QUEST,THEATRE                * "?" entered ?
          GOTO      CHEK8000 IF EQUAL            * Yes
.
          MOVE      THEATRE,KEY6
          PACK      OPRMDESC,SP30,SP10
          CALL      RDOPOPR1
          BRANCH    OVRCD,CHEK7500               * invalid not found
.
.         valid input
.
          BRANCH    OPRCODE,CHEK7200:            * start code
                            CHEK7300             * end code
.
.         get description
.
CHEK7200  MOVE      OPRMDESC,OPRDESC1
          MOVE      THEATRE,STRTOPER
          MOVE      THEATRE,STARTCR
          GOTO      CHEK7400
.
CHEK7300  MOVE      OPRMDESC,OPRDESC2
          MOVE      THEATRE,ENDOPER
          MOVE      THEATRE,ENDCR
.
CHEK7400  MOVE      ZERO,CEXIT                   * valid input
          GOTO      CHEK9999
.
CHEK7500  MOVE      TWO,CEXIT                    * invalid input
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Invalid ",*+,OPCNODSC," code **    ";
          CALL      HITENTER
          GOTO      CHEK9999

CHEK8000  MOVE      ONE,CEXIT                    * A "?" input
          GOTO      CHEK9999
.
.         no input, determine whether for start or finish
.
CHEK9000  MOVE      ZERO,CEXIT                   * no input
          BRANCH    OPRCODE,CHEK9500:            * start code
                            CHEK9600             * end code
.
CHEK9500  MOVE      SP6,STRTOPER
          MOVE      START,STARTCR
          PACK      OPRDESC1,SP30,SP10
          GOTO      CHEK9999
.
CHEK9600  MOVE      ZZZZ,ENDOPER
          MOVE      FINISH,ENDCR
          PACK      OPRDESC2,SP30,SP10
.
CHEK9999  RETURN
+
.**************************************************************************
.*                  DOCF0000                     Called by: MANY          *
.*        Format doctors name                                             *
.**************************************************************************
DOCF0000  MOVE      DTITL,PACTITLE
          MOVE      DGNAME,PACGNAME
          MOVE      DSNAME,PACSNAME
          CALL      PACNAME
DOCF9999  RETURN
+
.**************************************************************************
.*                  CLRD0000                      Called by : MANY        *
.*        clear working variables for doctor codes and description.       *
.**************************************************************************
CLRD0000  MOVE      SP6,DOCTCOD1
          MOVE      SP6,DOCTCOD2
          MOVE      SP6,DOCTCOD3
          PACK      DOCTNAM1,SP30,SP10
          PACK      DOCTNAM2,SP30,SP10
          PACK      DOCTNAM3,SP30,SP10
CLRD9999  RETURN
+
.**************************************************************************
.*                  KDOC0000                         Called  by : MANY    *
.*        keyin the doctor code                                           *
.**************************************************************************
KDOC0000  KEYIN     *P32:CVERT,*EL,*DV,UNDLN6,*P32:CVERT,*V2LON,DOCTOR:
                    *P32:CVERT,*DV,DOCTOR;

          CALL      CHKC0000                     * validate user input
          BRANCH    CEXIT,KDOC9000,KDOC1000,KDOC0000
.                         exitchar  ? mark   invalid
.         valid input
.
          DISPLAY   *P32:CVERT,*EL,*V2LON,DOCTOR,*HOFF,SP2,DOCTDESC;
          GOTO      KDOC8000                
.
.         ? mark entered
.
KDOC1000  CALL      PATDOCDS
.
KDOC3000  DISPLAY   *P1:24,*EL,"Doctor Code : ";
          KEYIN     *P15:24,*DV,UNDLN6,*P15:24,*V2LON,DOCTOR:
                    *P15:24,*DV,DOCTOR;
.
          CALL      CHKC0000
          BRANCH    CEXIT,KDOC9000,KDOC1000,KDOC3000 
.                         exitchar  ? mark   invalid
.
          CALL      SCR0000                      * redisplay screen
          CALL      DISP0000                     * redisplay screen details
.
KDOC8000  MOVE      FALSE,EXIT                   * valid input
          GOTO      KDOC9999
.
KDOC9000  MOVE      TRUE,EXIT                    * exitchar inputted
.
KDOC9999  RETURN
+
.***************************************************************************
.*                  CHKC0000                           Called by: KDOC0000 *
.*        Validate doctor code field                                       *
.*        Returns : CEXIT = (0)  If a valid doctor code is entered         *
.*                          (1)  If exitchar entered                       *
.*                          (2)  If a question mark "?" is entered         *
.*                          (3)  invalid input                             *
.***************************************************************************
CHKC0000  PACK      PACFNAME,SP20,SP20,SP30
          ENDSET    DOCTOR                  * Pad the field with spaces
          APPEND    SP6,DOCTOR
          RESET     DOCTOR
.
          MATCH     SP6,DOCTOR
          GOTO      CHKC5000 IF EQUAL       * nothing entered
.
.         Check if exitchar entered and set the exit flag appropriately
.
          CMATCH    EXITCHAR,DOCTOR
          GOTO      CHKC9000 IF EQUAL       * exit char entered
.
.         Check for a "?"
.
          CMATCH    QUEST,DOCTOR
          GOTO      CHKC8000 IF EQUAL       * ? entered 
.
          MOVE      SP6,DTITL
          MOVE      SP30,DSNAME
          MOVE      SP30,DGNAME
          PACK      PACFNAME,SP30,SP30
          MOVE      TWO,PACFRMT
.
          PACK      KEY6,DOCTOR 
          CALL      RDDOCT1                 * read doctors file
          BRANCH    OVRCD,CHKC7500          * not found therefore
          CALL      DOCF0000                * format doctor's name
.
CHKC5000  MOVE      PACFNAME,DOCTDESC       * get doctor description
          BRANCH    DOCCOD1,CHKC6000:       * Rostered AM Anaesthetist
                            CHKC6100:       * Rostered AM Anaesthetist
                            CHKC6200        * Night Anaesthetist
.
CHKC6000  MOVE      DOCTOR,DOCTCOD1
          MOVE      PACFNAME,DOCTNAM1
          GOTO      CHKC7400
.
CHKC6100  MOVE      DOCTOR,DOCTCOD2
          MOVE      PACFNAME,DOCTNAM2
          GOTO      CHKC7400
.
CHKC6200  MOVE      DOCTOR,DOCTCOD3
          MOVE      PACFNAME,DOCTNAM3
.                                    
. --- code found ---
.
CHKC7400  MOVE      ZERO,CEXIT              * valid input
          GOTO      CHKC9999
.
CHKC7500  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Invalid Doctor Code **    ";
          CALL      HITENTER
.
          MOVE      THREE,CEXIT             * invalid input
          GOTO      CHKC9999

CHKC8000  MOVE      TWO,CEXIT               * a "?" input
          GOTO      CHKC9999
.
CHKC9000  MOVE      ONE,CEXIT               * Exitchar inputted
.
CHKC9999  RETURN
+
.**************************************************************************
.*                  SCRE0000                           Called by: ML0000  *
.*        display screen format for medical admissions                    *
.**************************************************************************
SCRE0000  DISPLAY   *P1:3,*EF,*P5:4,"Theatre Date Range       : ":
                             *P43:4,"to";
.
          CALL      IBACLOCK
          PACK      KEY8,CCC,CYY,CMM,CDD    * set up date
          REP       " 0",KEY8
          CALL      NDAT0000                * get next day's date
          MOVE      TOMMDATE,DATESTRT       * default to tomorrows date
.
SCRE9999  RETURN
+
.**************************************************************************
.*                  SCR0000                            Called by: ML0000  *
.*        display screen format                                           *
.**************************************************************************
SCR0000   DISPLAY   *P1:3,*EF,*V2LON,*P2:4,"1",*P2:6,"2":
                    *P2:8,"3",*P2:10,"4",*HOFF:
                    *P3:04,". Theatre Date Range       : ",*P43:4,"to":
                    *P3:06,". Starting ",OPCNODSC,*P30:6,": ":
                    *P3:08,". Ending   ",OPCNODSC,*P30:8,": ":
                    *P3:10,". Night Anaesthetist       : ";
SCR9999  RETURN
+
.*************************************************************************
.*                  DISP0000                          Called by : ML0000 *
.*        display fields and their description                           *
.*************************************************************************
DISP0000  DISPLAY   *P32:4,*V2LON,DATE10A,*P46:4,DATE10B:
                    *P32:6,*EL,*V2LON,STARTCR,*HOFF,SP2,OPRDESC1:
                    *P32:8,*EL,*V2LON,ENDCR,*HOFF,SP2,OPRDESC2:
                    *P32:10,*EL,*V2LON,DOCTCOD1,*HOFF,SP2,DOCTNAM1;
DISP9999  RETURN
+
.*************************************************************************
.*                  ACCP0000                           Called by: ML1100 *
.*        INPUT mode only : accept initial values                        *
.*************************************************************************
ACCP0000  CALL      IBACLOCK
          PACK      KEY8,CCC,CYY,CMM,CDD      * set up date
          REP       " 0",KEY8
          CALL      NDAT0000                  * get next day's date
.
          MOVE      TOMMDATE,DATESTRT         * default to tomorrows date
          CALL      RDAT0000                  * keyin Date range of Theatre
          CALL      CLRT0000                  * clear theatre codes
.
.         keyin Starting theatre
.
ACCP1000  MOVE      "6",CVERT                 * row for start oper. room
          MOVE      ONE,OPRCODE               * starting code
          CALL      KOPR0000                  * keyin starting operating room
.
.         keyin Ending theatre
.
ACCP2000  MOVE      "8",CVERT                 * row for start oper. room
          MOVE      TWO,OPRCODE               * ending code
          CALL      KOPR0000                  * keyin ending operating room
          BRANCH    EXIT,ACCP2000             * invalid range
          CALL      CLRD0000                  * clear doctor codes
.
.         keyin Rostered Night Anaesthetist
.
          MOVE      "10",CVERT                * row for Anaesthetist
          MOVE      ONE,DOCCOD1               * start code
          CALL      KDOC0000                  * keyin doctor code
          BRANCH    EXIT,ACCP9000             * Exitchar inputted
.
          MOVE      FALSE,EXIT
          GOTO      ACCP9999
.
ACCP9000  MOVE      TRUE,EXIT                 * Exitchar inputted
.
ACCP9999  RETURN
+
.****************************************************************************
.*                  SEL0000                            Called by: ML1100    *
.*        select field to modify or post                                    *
.*        Returns : EXIT = 0      Post was selected.                        *
.*                  EXIT = 1      Cancel was selected or EXITCHAR.          *
.****************************************************************************
SEL0000   CALL      MAINQST                  * Ask for an item, post or cancel
          BRANCH    CCITEM,SEL1000,SEL2000,SEL3000,SEL4000
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SEL8000 IF EQUAL         * Post was selected
          GOTO      SEL9000 IF LESS          * Cancel was selected
          BEEP
          GOTO      SEL0000
.
.         change Date of Theatre range
.
SEL1000   CALL      RDAT0000                 * keyin dates
          GOTO      SEL0000
.
.         change starting theatre
.
SEL2000   MOVE      "6",CVERT                 * row for start oper. room
          MOVE      ONE,OPRCODE
          PACK      OPRDESC1,SP30,SP10
          MOVE      SP10,STARTCR
          MOVE      SP6,STRTOPER
.
          CALL      KOPR0000                * keyin starting oper.
          MATCH     STRTOPER,ENDOPER        * Starting code > end code
          GOTO      SEL7000 IF LESS
          GOTO      SEL0000
.
.         change ending theatre
.
SEL3000   MOVE      "08",CVERT              * row for ending oper.    
          MOVE      TWO,OPRCODE
          PACK      OPRDESC2,SP30,SP10
          MOVE      SP10,ENDCR
          MOVE      SP6,ENDOPER
.
          CALL      KOPR0000                * keyin ending oper.
          BRANCH    EXIT,SEL3000            * invalid range
          GOTO      SEL0000
.
.         change Rostered Night Anaesthetist
.
SEL4000   MOVE      "10",CVERT                * row for Anaesthetist 1
          MOVE      ONE,DOCCOD1
          MOVE      SP6,DOCTCOD1
          PACK      DOCTNAM1,SP30,SP10
          CALL      KDOC0000                  * keyin starting operating room
          BRANCH    EXIT,SEL9000              * Exitchar inputted
          GOTO      SEL0000
.
SEL7000   DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Invalid range - Starting Code is > Ending Code **   ";
          CALL      HITENTER
          GOTO      SEL2000
.
SEL8000   MOVE      FALSE,EXIT              * Post was selected
          DISPLAY   *P58:24,*V2LON,"*** Posting ***";
          GOTO      SEL9999
.
.         Cancel was selected or Exitchar entered for doctor code
.
SEL9000   MOVE      TRUE,EXIT                * Cancel was selected
.
SEL9999   RETURN
+
.*****************************************************************************
.*                  CRET0000                         Called by :             *
.*        create temporary files                                             *
.*****************************************************************************
CRET0000  CALL      KILL0000                     * make sure file is deleted 
          CLEAR     CMDLINE                      * clear command line
          PACK      CMDLINE,ISBUILD,CFNAMEA,KEYA,SP50
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID  
          OPEN      DATEFILE,CFNAMEA
.
          CLEAR     CMDLINE                      * clear command line
          PACK      CMDLINE,ISBUILD,CFNAMEB,KEYB,SP50
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID  
          OPEN      SESSFILE,CFNAMEB
.
CRET9999  RETURN
+
.***************************************************************************
.*                  KILL0000                                               *
.*        delete temporary index file                                      *
.***************************************************************************
KILL0000  CLEAR     CMDLINE
          PACK      CMDLINE,ISERASE,CFNAMEA
          RESET     CMDLINE
          CLOSE     DATEFILE
          EXECUTE   CMDLINE,TASKID  
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISERASE,CFNAMEB
          RESET     CMDLINE
          CLOSE     SESSFILE
          EXECUTE   CMDLINE,TASKID  
KILL9999  RETURN
+
.*********************************************************************
.*                  DATE0000                    Called by : ML1100   *
.*        Loop over session file and admission file and     ML2100   *
.*        for each valid record in the date range, write the date to *
.*        temp file A (DATEFILE)                                     *
.*********************************************************************
DATE0000  CALL      CRET0000                * create temp. files
          COMPARE   TWO,MOPTION
          GOTO      DATE5000 IF EQUAL       * only medical admissions
.
.         loop through the 1st index of the OPRSESFD file for the requested
.         dates.  For each record found, if the session belongs to the
.         requested theatre range (OPSETHET is in the range ), then post the
.         record to the temporary index files.
.
          DISPLAY   *P1:24,*EL,"Scanning Session file : ";
          PACK      KEY22,DATESTRT,SP20
          CALL      RSOPSES7                * position pointer
.
DATE1000  CALL      RKOPSES7                * read next record
          BRANCH    OVRCD,DATE4000          * last record read
.
          MATCH     OPSEDATE,DATEEND
          GOTO      DATE4000 IF LESS        * finished range 
.
          DISPLAY   *P25:24,OPSEDATE,SP1,OPSECLIN,SP1,OPSETIME;
.
          MATCH     ANSY,INCLCANC 
          GOTO      DATE1300 IF EQUAL       * including cancelled sessions
.
          COMPARE   ZERO,OPSESTAT           * session cancelled ?
          GOTO      DATE1000 IF EQUAL       * yes, ignore record
.
DATE1300  MATCH     SP3,OPSETPER            * blank session period code
          GOTO      DATE1000 IF EQUAL       * yes,ignore record
.
          MATCH     STRTOPER,OPSETHET       * Oper. Room within start range
          GOTO      DATE1000 IF LESS        * no, ignore record
.
          MATCH     OPSETHET,ENDOPER        * Oper. Room within end range
          GOTO      DATE1000 IF LESS        * no, ignore record
.
          COMPARE   ZERO,OPSESTAT           * if get here with zero status then
          GOTO      DATE3000 IF EQUAL       * ignore vacany check
.
. if paramater ON, check that this session is not vacant (has bookings)
.
DATE1400  BRANCH    INCVSES,DATE3000        * Include vacant sessions
.
          MOVE      OPSEDATE,XSESDATE       * session date
          MOVE      OPSECLIN,XCLIN          * get clinic/surgeon code
          MOVE      OPSETIME,XTIME          * set up time
.
          PACK      SAVKEY22,OPSEHOSP,OPSEDATE,OPSETIME,OPSECLIN,SP70
          MOVE      OPSETPER,SAVTPER
          CALL      ASES0000                * check if this is an afternoon ses
          MOVE      SAVKEY22,KEY22
          CALL      RDOPSES1                * get back actual session details
.
. The follwing COMPARE statements:
.
. EXIT=1=Morning session   EXIT=0=Afternoon session
. OVRCD=1=No bookings  OVRCD=0=Bookings
.
          PACK      KEY26,OPSEHOSP,OPSEDATE,OPSETIME,OPSECLIN,ZERO,SP2,ONE:
                          SP70
          CALL      RDOPDEA1
          BRANCH    OVRCD,DATE2000
          GOTO      DATE3000
.
. we have no bookings
.
DATE2000  COMPARE   ONE,EXIT                      * Morning session?
          GOTO      DATE2300 IF NOT EQUAL         * No 
.
. AM session vacant so check if this surgeon has other AM session with bookings
.
          CALL      SAMS0000
          BRANCH    EXIT,DATE1000
          GOTO      DATE3000
.
. afternoon sess. vacant so check if morning sess. has bookings
.
DATE2300  CALL      MVAC0000
          BRANCH    EXIT,DATE1000                 * no bookings in AM session
.
DATE3000  DISPLAY   *P25:24,*V2LON,OPSEDATE,SP1,OPSECLIN,SP1,OPSETIME;
.
          PACK      CURRSESS,OPSEHOSP,OPSEDATE,OPSETIME,OPSECLIN,SP70
          CALL      CLIN0000                * calculate number of lines XNLINES
          MOVE      OPSEDATE,XSESDATE       * session date
          MOVE      OPSETPER,XPERIOD        * get session period code (CAT SP)
          MOVE      OPSETHET,XTHEATRE       * get theatre code
          MOVE      OPSETIME,XTIME          * get session start time
          MOVE      OPSECLIN,XCLIN          * get clinic/surgeon code
          MOVE      OPSEANAE,XANAE          * get anaesthetist code
          MOVE      OPSESTAT,XSSTAT         * set the status
          MOVE      OPSETYPE,XSTYPE         * set session type
          MOVE      OPSEHOSP,XHOSP          * set hospital id
.
.         write to temp session file
.
          PACK      KEY28,XSESDATE,XPERIOD,XTHEATRE,XTIME,XCLIN
          WRITE     SESSFILE,KEY28;XSESDATE,XPERIOD,XTHEATRE,XTIME,XCLIN:
                                   XANAE,XNLINES,XSSTAT,XSTYPE,XHOSP
.
.         write to date file
.
          MOVE      XSESDATE,KEY8
          REP       " 0",KEY8
          CALL      PDTF0000                * post to date temp file
          GOTO      DATE1000
.
. write date range keyed in to temp file for pre-surgical bookings
.
DATE4000  CALL      WRDR0000 
.
.         Loop over admission file for the given date range and for 
.         every admission in the range, write the date to DATE tempfile
.
DATE5000  COMPARE   THREE,MOPTION
          GOTO      DATE9999 IF EQUAL       * dont do for option 3
.
          DISPLAY   *P1:24,*EL,"Scanning Admission file : ";
          PACK      KEY16,DATE8A,SP20       * starting date
          CALL      RDSMISS3                * position pointer
.
DATE5500  CALL      RDKMISS3                * read next record
          BRANCH    OVRCD,DATE7000          * end of file
.
          MATCH     ADATE,DATE8B
          GOTO      DATE7000 IF LESS        * end of range
          DISPLAY   *P27:24,ADATE;
.
          BRANCH    ASTAT,DATE6000,DATE6000,DATE5500,DATE6000,DATE5500
.                         pre-ad   admiss   disch    leave    cancelled
.
DATE6000  PACK      KEY8,ADATE
          REP       " 0",KEY8
          CALL      PDTF0000                * post to date temp file
          GOTO      DATE5500
.
.         get the medical bookings dates
.
DATE7000  PACK      KEY16,DATESTRT,SP30
          CALL      RSBKREC4
.
DATE7500  CALL      RKBKREC4
          BRANCH    OVRCD,DATE9999
.
          MATCH     BKREEDAT,DATEEND
          GOTO      DATE9999 IF LESS        * finished range
.
. ya gotta assume that if booking status = booked, there is no admission record
.
          COMPARE   ZERO,BKRESTAT                 * must be booked
          GOTO      DATE7500 IF NOT EQUAL
.
          PACK      KEY5,CATBK,BKRETYPE,SP70
          CALL      RDCODE1
          MATCH     "NOR",THCSCOD              * booking type = Routine Adm?
          GOTO      DATE7500 IF NOT EQUAL
.
          MOVE      BKREEDAT,KEY8 
          CALL      PDTF0000                * post to date temp file
          GOTO      DATE7500
.
DATE9999  RETURN
+
.*********************************************************************
.*                  LDAT0000                    Called by : ML1000   *
.*        Loop over the date file and print daily list,     ML2000   *
.*        pre-surgical and medical reports for each date             *
.*********************************************************************
LDAT0000  MOVE      ZERO,CPAGENO            * clear page counter
          MOVE      ZERO,CLNO               * clear line counter
          MOVE      SP8,PRNTDATE
          MOVE      SP8,KEY8       
          READ      DATEFILE,KEY8;;
.
LDAT1000  READKS    DATEFILE;PRNTDATE
          GOTO      LDAT8000 IF OVER        * end of file
.
          UNPACK    PRNTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:23,"Printing Date : ",*V2LON,CPCDATE;
          MOVE      "70",CLNO               * set so new page each date
          CALL      PDLY0000                * print daily list
          CALL      PSUR0000                * print pre-surgical admissions
          CALL      PSBK0000                * print pre-surgical bookings
          CALL      PMED0000                * print medical
          GOTO      LDAT1000
.
LDAT8000  COMPARE   ZERO,CPAGENO
          GOTO      LDAT9000 IF NOT EQUAL   * records printed
.
.         nothing on file so set up some values for HEAD routine
.
          MOVE      DATESTRT,PRNTDATE       * nothing printed so default date to
          MOVE      ZERO,COPTION            * just print program name
          MOVE      "Start Date   : ",DATEADSE
          MOVE      SP20,DAYADSES
.
          CALL      HEAD0000                * start date of range
.
LDAT9000  PRINT     *N,*N,"***  End of Report  ***",*N
          CALL      KILL0000
.
LDAT9999  RETURN
+
.*********************************************************************
.*                  PDLY0000                    Called by : LDAT1000 *
.*        loop through the SESSION tempfile for the date and print   *
.*        the daily list for that date                               *
.*        Para's  : PRNTDATE      the date to check for              *
.*********************************************************************
PDLY0000  COMPARE   TWO,MOPTION
          GOTO      PDLY9999 IF EQUAL       * dont do for option 2
.
.         see if any records on file
.
          PACK      KEY28,PRNTDATE,SP20
          READ      SESSFILE,KEY28;;        * position pointer
          READKS    SESSFILE;XSESDATE,XPERIOD,XTHEATRE,XTIME,XCLIN:
                             XANAE,XNLINES,XSSTAT,XSTYPE,XHOSP
          GOTO      PDLY9999 IF OVER        * no records on file for date
.
.         have records on temp file so
.         loop over temp file and produce the report
.
          MOVE      SP3,TPERIOD             * clear save time period
          MOVE      SP6,CURRTHET            * clear current theatre
          MOVE      ZERO,FOLLFLAG           * set to print theatre desc
          MOVE      ONE,COPTION             * printing daily list flag
          CLOCK     TIME,CTIMEIS
          MOVE      "Session Date : ",DATEADSE
          MOVE      "Session Day  : ",DAYADSES
          MOVE      "70",CLNO               * set line number so heading printed
          MOVE      ONE,PERDCNT             * set as first time period
          MOVE      ONE,FORM1               * set as first time period
          MOVE      ZERO,CCITEM             * clear counter
.
          DISPLAY   *P1:24,*EL,"Session : ";
          PACK      KEY28,PRNTDATE,SP20
          READ      SESSFILE,KEY28;;        * position pointer
.
.         loop over temp file
.
PDLY1000  READKS    SESSFILE;XSESDATE,XPERIOD,XTHEATRE,XTIME,XCLIN:
                             XANAE,XNLINES,XSSTAT,XSTYPE,XHOSP
          GOTO      PDLY9000 IF OVER        * last record read
.
          MATCH     PRNTDATE,XSESDATE
          GOTO      PDLY9000 IF NOT EQUAL   * different date
.
          DISPLAY   *P11:24,*V2LON,XSESDATE,SP1,XPERIOD;
.
          ADD       ONE,CCITEM              * add to item counter
          PACK      CURRSESS,XHOSP,XSESDATE,XTIME,XCLIN,SP70  * session details
.
.         see if current session (plus extra) will fit on page
.
          MOVE      CLNO,FORM2              * temp line counter
          ADD       XNLINES,FORM2           * add number of lines for session
          ADD       "4",FORM2               * add in case a to follow happens
          COMPARE   "55",FORM2
          GOTO      PDLY1500 IF NOT LESS    * need a heading
.
.         determine if new page needed for change in period
.
          MATCH     TPERIOD,XPERIOD
          GOTO      PDLY2000 IF EQUAL       * same period
.
          MATCH     ANSN,NEWPGPER
          GOTO      PDLY1800 IF EQUAL       * dont print new page for a period
.
.         comes here when different period
.
          MOVE      SP6,CURRTHET            * clear current theatre
          MOVE      TWO,FORM1               * set to print night anaesthetist
          GOTO      PDLY1600
.
.         not enough space on current page
.
PDLY1500  MATCH     SP3,TPERIOD
          GOTO      PDLY1700 IF EQUAL       * no time period set up yet
.
.         check if this is the same period
.
          MOVE      PERDCNT,FORM1           * same period counter
          MATCH     TPERIOD,XPERIOD
          GOTO      PDLY1600 IF EQUAL
.
.         New period. Reset current theatre, and set flag to say new period
.         if the second or subsequent period.
.
          MOVE      SP6,CURRTHET            * clear current theatre
          MOVE      TWO,FORM1               * set to print night anaesthetist
.
.         Print the rostered night anaesthetist if required.
.
PDLY1600  MOVE      FORM1,PERDCNT           * set new anaes flag
.
PDLY1700  CALL      HEAD0000                * print new heading
          MOVE      ZERO,FOLLFLAG           * clear follow flag
          GOTO      PDLY2000
.
PDLY1800  CALL      PDPH0000                * print the table heading
.
.         see if in the same theatre
.
PDLY2000  MATCH     SP6,CURRTHET
          GOTO      PDLY2300 IF EQUAL       * no current theatre
.
          MATCH     CURRTHET,XTHEATRE
          GOTO      PDLY2300 IF NOT EQUAL   * different theatre
.
          PRINT     *N,"** TO FOLLOW **";
          ADD       TWO,CLNO
          MOVE      ONE,FOLLFLAG            * set to follow flag
.
.         Check for a continuation from a previous session
.
PDLY2300  MOVE      ZERO,CONTFLAG           * assume not a continuation
.
          COMPARE   ZERO,XNLINES            * do we have any bookings ?
          GOTO      PDLY2500 IF NOT EQUAL   * yes, don't print message
.
          CALL      C1ST0000                * check if first session on date
          BRANCH    EXIT,PDLY2500           * yes, don't print message
.
          MOVE      ONE,CONTFLAG            * set if flag if not first session.
.
.         print session header as each temp file record has a diff. anaesthetist
.
PDLY2500  MOVE      XTHEATRE,CURRTHET       * set up current theatre
          MOVE      XPERIOD,TPERIOD         * set the time period
.
          ADD       THREE,XNLINES           * the number of lines for session
          ADD       CLNO,XNLINES            * line number when finished
          COMPARE   "55",XNLINES
          GOTO      PDLY3000 IF LESS        * will fit on the page
.
          CALL      HEAD0000                * print new heading
          COMPARE   ZERO,FOLLFLAG           * check with follow flag
          GOTO      PDLY3000 IF EQUAL
          PRINT     *N;                     * print blank line to separate
          ADD       ONE,CLNO
.
PDLY3000  CALL      SHED0000                * print session details
          CALL      BDEA0000                * print about patients from OPRDEAFD
          PRINT     *N;                     * print blank line to separate
          ADD       ONE,CLNO
          GOTO      PDLY1000
.
.         end of current date
.
PDLY9000  COMPARE   ZERO,CCITEM
          GOTO      PDLY9999 IF EQUAL       * nothing printed
.
PDLY9999  RETURN
+
.*********************************************************************
.*                  PSUR0000                    Called by : ML1000   *
.*        Print the Pre-Surgical patients admitted on the   ML2000   *
.*        date passed (which is within the range entered)            *
.*        A pre-surgical patient is one who is scheduled for theatre *
.*        but not on the day on or after admission.                  *
.*        Para's  : PRNTDATE      the date of admission to check     *
.*********************************************************************
PSUR0000  COMPARE   THREE,MOPTION
          GOTO      PSUR9999 IF EQUAL       * dont want pre-surgical
.
          COMPARE   ONE,COPTION
          GOTO      PSUR0100 IF EQUAL       * dont clear page counter
.
          MOVE      ZERO,CPAGENO            * initialize page counter
.
PSUR0100  MOVE      "3",COPTION             * indicate pre-surgical
          MOVE      "70",CLNO               * initialize line counter
          MOVE      ZERO,NUMREC             * initialize num. of records
          MOVE      "Exp. Adm Date: ",DATEADSE
          MOVE      "Exp. Adm. Day: ",DAYADSES
.
          DISPLAY   *P1:24,"Pre-surgical : ",*EL;
          UNPACK    PRNTDATE,DATE8Z         * starting date
          PACK      KEY16,DATE8Z,SP20       * starting date
          CALL      RDSMISS3                * position pointer
.
PSUR1000  CALL      RDKMISS3                * read next record
          BRANCH    OVRCD,PSUR9999          * end of file
.
          MATCH     ADATE,DATE8Z
          GOTO      PSUR9999 IF NOT EQUAL   * different date
.
          DISPLAY   *P16:24,AADMNO;
. 
.         Filtering records based on Hospital Id
.
          IF        IBCNMHOS = 1
            PACK      KEY8,AADMNO,SP10
            CALL      RDPMVX11
            BRANCH    OVRCD,PSUR1000
.
            MATCH     PMVXMHOS,HOSCODE
            GOTO      PSUR1000 IF NOT EQUAL
          ENDIF
.
          COMPARE   THREE,ASTAT             * Status = 'Discharged'
          GOTO      PSUR1000 IF EQUAL       * yes, ignore record
.
          COMPARE   FIVE,ASTAT              * Status = 'Cancelled'
          GOTO      PSUR1000 IF EQUAL       * yes, ignore record
.
          MOVE      AADMNO,OPDAADMN         * set up visit number
          CALL      GPMI0000
          BRANCH    EXIT,PSUR1000           * invalid patient
.
          CALL      VPSP0000                * see if a valid pre-surgical pat
          BRANCH    EXIT,PSUR1000           * not a valid patient
.
          COMPARE   FIFTY5,CLNO
          GOTO      PSUR3100 IF LESS        * will fit on page
          CALL      HEAD0000                * display header
.
PSUR3100  CALL      PATN0000
          MOVE      ADOCTA,KEY6
          CALL      DOCI0000
          MOVE      PACFNAME,DIM19          * Truncate doctors name
.
          UNPACK    XSESDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      ADIAG1,DESC40                 * shorten description
          MOVE      WARDDESC,WRDBED7
          CALL      PRAV0000                * set up req'd patient age
.
          PRINT     PATNAME,SP1,AADMNO,*45,PATAGE,*50,DESC40,SP1,DIM19:
                    *91,DIM19,*111,CPCDATE,*124,WRDBED7
.
          ADD       ONE,CLNO
          ADD       ONE,NUMREC
.
          MATCH     SP50,ADIAG2             * Is 2nd line a blank line ?
          GOTO      PSUR1000 IF EQUAL       * yes
.
.         there is a 2nd line for diagnosis
.
          PRINT     *50,ADIAG2
          ADD       ONE,CLNO                * add to line counter
          GOTO      PSUR1000
.
PSUR9999  RETURN
+
.*********************************************************************
.*                  PSBK0000                    Called by : ML1000   *
.*        Print the Pre-Surgical patients booked   on the   ML2000   *
.*        date passed (which is within the range entered)            *
.*        A pre-surgical patient is one who is scheduled for theatre *
.*        but not on the day on or after admission.                  *
.*        Para's  : PRNTDATE      the date of admission to check     *
.*********************************************************************
PSBK0000  COMPARE   THREE,MOPTION
          GOTO      PSBK9999 IF EQUAL       * dont want pre-surgical
.
          MOVE      PRNTDATE,DATEFROM       * get date 2 days ahead
          MOVE      TWO,DURATION
          CALL      GEDT0000                * Returns :  DATEEND1 (2 days ahead)
.
          PACK      KEY16,PRNTDATE,SP20
          CALL      RSBKREC4
PSBK1000  CALL      RKBKREC4
          BRANCH    OVRCD,PSBK8000
.
          DISPLAY   *P16:24,BKREBOOK;
.
          MATCH     PRNTDATE,BKREEDAT             * same date?
          GOTO      PSBK8000 IF NOT EQUAL
.
          COMPARE   ZERO,BKRESTAT                 * must be booked
          GOTO      PSBK1000 IF NOT EQUAL
.
          PACK      KEY31,BKREBOOK,ZERO,SP30
          CALL      RSOPDEA2
PSBK2000  CALL      RKOPDEA2
          BRANCH    OVRCD,PSBK1000
.
          MATCH     BKREBOOK,OPDAADMN             * same admission no.?
          GOTO      PSBK1000 IF NOT EQUAL
.
.         Filtering Records Based on Hospital ID
.
          IF        IBCNMHOS = 1
            PACK      KEY8,OPDAADMN,SP10
            CALL      RDPMVX11
            BRANCH    OVRCD,PSBK2000
.
            MATCH     PMVXMHOS,HOSCODE
            GOTO      PSBK2000 IF NOT EQUAL
          ENDIF
.
          COMPARE   ZERO,OPDASTAT                 * must be booked
          GOTO      PSBK2000 IF NOT EQUAL
.
          MATCH     DATEEND1,OPDADATE             * session > 2 days exp adm dat
          GOTO      PSBK2000 IF LESS
.
          CALL      GPMI0000
          BRANCH    EXIT,PSBK2000           * invalid patient
.
          COMPARE   FIFTY5,CLNO
          GOTO      PSBK3100 IF LESS        * will fit on page
          CALL      HEAD0000                * display header
.
PSBK3100  CALL      PATN0000
          MOVE      BKREADOC,KEY6
          CALL      DOCI0000
          MOVE      PACFNAME,DIM19          * Truncate doctors name
.
          MOVE      SP50,BKDIDES1           * get diagnosis
          MOVE      SP50,BKDIDES2
          PACK      KEY8,BKREBOOK
          CALL      RDBKDIA1
.
          UNPACK    OPDADATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      BKDIDES1,DESC40
          MOVE      WARDDESC,WRDBED7              * shorten ward/bed desc
          CALL      PRAV0000                * set up req'd patient age
.
          PRINT     PATNAME,SP1,BKREBOOK,*45,PATAGE,*50,DESC40,SP1,DIM19:
                    *91,DIM19,*111,CPCDATE,*124,WRDBED7
.
          ADD       ONE,CLNO
          ADD       ONE,NUMREC
.
          MATCH     SP50,BKDIDES2           * Is 2nd line a blank line ?
          GOTO      PSBK1000 IF EQUAL       * yes
.
.         there is a 2nd line for diagnosis
.
          PRINT     *50,BKDIDES2
          ADD       ONE,CLNO                * add to line counter
          GOTO      PSBK1000
.
.         have finished looping over admission file for the date
.
PSBK8000  COMPARE   ZERO,NUMREC
          GOTO      PSBK9999 IF EQUAL       * No records printed
          CALL      DASH0000
.
PSBK9000  PRINT     *N,"Number of Pre-Surgical patients = ",NUMREC,*N
.
PSBK9999  RETURN
+
.***********************************************************************
.*                   PMED0000                     Called by : LDAT0000 *
.*        loop through medical admissions                              *
.*        A medical admiss. is a patient who is not sched. for theatre *
.*        Para's  : PRNTDATE      date of admission                    *
.***********************************************************************
PMED0000  COMPARE   THREE,MOPTION
          GOTO      PMED9999 IF EQUAL       * dont want medical admissions
.
          MOVE      TWO,COPTION             * indicate in PMED routine
          MOVE      ZERO,NUMREC             * initialize num. of records
.
          MOVE      "Exp. Adm Date: ",DATEADSE
          MOVE      "Exp. Adm. Day: ",DAYADSES
.
          DISPLAY   *P1:24,"Admission : ";
          UNPACK    PRNTDATE,DATE8Z         * date
          PACK      KEY16,DATE8Z,SP20
          CALL      RDSMISS3                * position pointer
.
PMED1000  CALL      RDKMISS3                * read next record
          BRANCH    OVRCD,PMED8000          * end of file
          DISPLAY   *P13:24,AADMNO;
.
          MATCH     ADATE,DATE8Z
          GOTO      PMED8000 IF NOT EQUAL   * different date
.
          COMPARE   FIVE,ASTAT              * Status = 'Cancelled'
          GOTO      PMED1000 IF EQUAL       * yes, ignore record
.
.
.         Filtering Records Based on Hospital ID
.
          IF        IBCNMHOS = 1
            PACK      KEY8,AADMNO,SP10
            CALL      RDPMVX11
            BRANCH    OVRCD,PMED1000
.
            MATCH     PMVXMHOS,HOSCODE
            GOTO      PMED1000 IF NOT EQUAL
          ENDIF
.
          CALL      LDEA0000                * check if this patient has booking
          BRANCH    EXIT,PMED1000           * yes, therefore this is not
.
          MOVE      AADMNO,OPDAADMN         * set up visit number
          CALL      GPMI0000
          BRANCH    EXIT,PMED1000           * invalid patient
.
          COMPARE   FIFTY5,CLNO
          GOTO      PMED3100 IF LESS        * will fit on page
.
          CALL      HEAD0000                * display header
          GOTO      PMED3200
.
.         print the line of data
.
PMED3100  COMPARE   ZERO,NUMREC
          GOTO      PMED3200 IF NOT EQUAL   * only print for first record
.
          UNPACK    PRNTDATE,CCENT,CYEAR,CMON,CDAY
          PRINT     *N,*40,"Medical Admissions "
          CALL      DASH0000
          PRINT     *N,"Patients Name",*35,"Admn No.  Age  Diagnosis":
                    *91,"Attending Doctor",*124,"Ward/Bed"
          CALL      DASH0000
          PRINT     *N;
          ADD       "9",CLNO 
.
PMED3200  CALL      PATN0000
          MOVE      ADOCTA,KEY6
          CALL      DOCI0000
          MOVE      PACFNAME,TRDOC          * Truncate doctors name
.
          MOVE      ADIAG1,DESC40           * shorten description
          MOVE      WARDDESC,WRDBED7              * shorten ward/bed desc
          CALL      PRAV0000                * get required age value
.
          PRINT     PATNAME,SP1,AADMNO,*45,PATAGE,*50,DESC40,*91,TRDOC:
                    *124,WRDBED7
.
          ADD       ONE,CLNO
          ADD       ONE,NUMREC
.
          MATCH     SP50,ADIAG2             * Is 2nd line a blank line ?
          GOTO      PMED1000 IF EQUAL       * yes
.
.         there is a 2nd line for diagnosis
.
          PRINT     *50,ADIAG2
          ADD       ONE,CLNO
          GOTO      PMED1000
.
.         have finished looping over admission file
.
PMED8000  CALL      MDBK0000                * get non pre-admission med bookings
.
PMED9999  RETURN
+
.***********************************************************************
.*                   MDBK0000                     Called by : LDAT0000 *
.*        loop through medical admissions                              *
.*        A medical admiss. is a patient who is not sched. for theatre *
.*        Para's  : PRNTDATE      date of admission                    *
.***********************************************************************
MDBK0000  COMPARE   THREE,MOPTION
          GOTO      MDBK9999 IF EQUAL       * dont want medical admissions
.
          MOVE      TWO,COPTION             * indicate in MDBK routine
          PACK      KEY16,PRNTDATE,SP30
          CALL      RSBKREC4
MDBK1000  CALL      RKBKREC4
          BRANCH    OVRCD,MDBK8000
.
          MATCH     BKREEDAT,PRNTDATE
          GOTO      MDBK8000 IF NOT EQUAL
.
. ya gotta assume that if booking status = booked, there is no admission record
.
          DISPLAY   *P16:24,BKREBOOK;
          COMPARE   ZERO,BKRESTAT                 * must be booked
          GOTO      MDBK1000 IF NOT EQUAL
.
          PACK      KEY5,CATBK,BKRETYPE,SP70
          CALL      RDCODE1
          MATCH     "NOR",THCSCOD              * booking type = Routine Adm?
          GOTO      MDBK1000 IF NOT EQUAL
.
          MOVE      BKREBOOK,OPDAADMN          * set up visit number
          CALL      GPMI0000
          BRANCH    EXIT,MDBK1000           * invalid patient
.
          DISPLAY   *P16:24,*V2LON,BKREBOOK;
          COMPARE   FIFTY5,CLNO
          GOTO      MDBK3100 IF LESS        * will fit on page
.
          CALL      HEAD0000                * display header
          GOTO      MDBK3200
.
.         print the line of data
.
MDBK3100  COMPARE   ZERO,NUMREC
          GOTO      MDBK3200 IF NOT EQUAL   * only print for first record
.
          UNPACK    PRNTDATE,CCENT,CYEAR,CMON,CDAY
          PRINT     *N,*40,"Medical Bookings   ":   * Medical Bookings  
                    *N,DATEADSE,CDAY,SP1,DSPMONTH,SP1,CCENT,CYEAR:
                    *N,DAYADSES:            * print description twice to
                    *16,DAYDESC,*N          * make it bold
          CALL      DASH0000
          PRINT     *N,"Patients Name",*35,"Admn No.  Age  Diagnosis":
                    *91,"Attending Doctor",*124,"Ward/Bed"
          CALL      DASH0000
          PRINT     *N;
          ADD       "9",CLNO 
.
MDBK3200  CALL      PATN0000
          MOVE      ADOCTA,KEY6
          CALL      DOCI0000
          MOVE      PACFNAME,TRDOC          * Truncate doctors name
.
          PACK      BKDIDES1,SP20,SP20,SP10
          PACK      KEY8,BKREBOOK
          CALL      RDBKDIA1
          MOVE      BKDIDES1,DESC40
          MOVE      WARDDESC,WRDBED7              * shorten ward/bed desc
          CALL      PRAV0000                * get required age value
.
          PRINT     PATNAME,SP1,AADMNO,*45,PATAGE,*50,DESC40,*91,TRDOC:
                    *91,TRDOC,*124,WRDBED7
.
          ADD       ONE,CLNO
          ADD       ONE,NUMREC
.
          MATCH     SP50,ADIAG2             * Is 2nd line a blank line ?
          GOTO      MDBK1000 IF EQUAL       * yes
.
.         there is a 2nd line for diagnosis
.
          PRINT     *50,ADIAG2
          ADD       ONE,CLNO
          GOTO      MDBK1000
.
.         have finished looping over admission file
.
MDBK8000  COMPARE   ZERO,NUMREC
          GOTO      MDBK9999 IF EQUAL       * No records printed
.
          CALL      DASH0000
.
MDBK9000  PRINT     *N,"Number of Medical Bookings = ",NUMREC,*N
.
MDBK9999  RETURN
+
.***********************************************************************
.*                  BDEA0000                    Called by : PDLY0000   *
.*        loop through 1st index of OPRDEAFD file for booked sessions  *
.*        Returns : EXIT = 1      if no record found in OPRDEAFD       *
.*                  EXIT = 0      otherwise                            *
.***********************************************************************
BDEA0000  MOVE      ONE,FSTCASE             * did we print diff team to current?
          PACK      KEY26,CURRSESS,ZERO,SP3
          CALL      RSOPDEA1                * position pointer
.
BDEA1000  CALL      RKOPDEA1                * read next record
          BRANCH    OVRCD,BDEA9999          * end of file
.
          PACK      KEY22,OPDAHOSP,OPDADATE,OPDATIME,OPDACLIN
          MATCH     CURRSESS,KEY22 
          GOTO      BDEA9999 IF NOT EQUAL   * different session
.
.         COMPARE   ZERO,XSSTAT
.         GOTO      BDEA1200 IF EQUAL       * have a cancelled session
.
          COMPARE   THREE,OPDASTAT          * Skip cancelled
          GOTO      BDEA1000 IF EQUAL 
.
BDEA1200  CALL      GPMI0000                * get booking & PMI details
          BRANCH    EXIT,BDEA1000           * invalid details
.
          CALL      PATN0000                * format patients name
          MOVE      PACFNAME,PATNAM2
.
          CALL      DIFT0000                * diff patient team to session team?
          BRANCH    DIFFTEAM,BDEA1700       * we have a different team
.
. if we have had a different team print the session team again
.
          BRANCH    FSTCASE,BDEA1600        * print session team again?
.
          PRINT     *N,*7,PACDOCTS
          MOVE      ZERO,CNTVAR
          PRINT     *7;
          ADD       ONE,CLNO
.
. -- determine no. of underlines to print
.
BDEA1550  ADD       ONE,CNTVAR
          COMPARE   CNTVAR,VAR              * CNTVAR > the length of PACDOCTS
          GOTO      BDEA1570 IF LESS        * yes
          PRINT     "-";                    * print underlines
          GOTO      BDEA1550       
.
BDEA1570  PRINT     *N;
          MOVE      ONE,FSTCASE             * dont print session team again
.
BDEA1600  CALL      PRAV0000                * get required age value
          PRINT     *1,OPDACASE,*6,OPDTADDT,*7,PATNAM2,*42,OPDAADMN:
                    *53,PATAGE,*59,OPDADES1,*121,WARDDESC
          GOTO      BDEA1800
.
BDEA1700  PRINT     *N,*1,OPDACASE,*7,NEWTEAM
          MOVE      ZERO,CNTVAR
          MOVE      ZERO,FSTCASE             * next case is not 1st case
          PRINT     *7;
.
. -- determine no. of underlines to print
.
BDEA1750  ADD       ONE,CNTVAR
          COMPARE   CNTVAR,NTLEN            * CNTVAR > the length of NEWTEAM
          GOTO      BDEA1780 IF LESS        * yes
          PRINT     "-";                    * print underlines
          GOTO      BDEA1750       
.
BDEA1780  CALL      PRAV0000                * get required age value
          PRINT     *N,*6,OPDTADDT,*7,PATNAM2,*42,OPDAADMN:     * diff team
                    *53,PATAGE,*59,OPDADES1,*121,WARDDESC
          ADD       TWO,CLNO
.
BDEA1800  ADD       ONE,CLNO              
.
          MATCH     SP50,OPDADES2           * blank 2nd oper. desc.
          GOTO      BDEA2000 IF EQUAL       * yes
.
          PRINT     *59,OPDADES2
          ADD       ONE,CLNO
.
BDEA2000  MATCH     SP50,OPDADES3           * blank 3rd oper. desc.
          GOTO      BDEA3000 IF EQUAL       * yes
.
          PRINT     *59,OPDADES3
          ADD       ONE,CLNO
.
BDEA3000  COMPARE   FIFTY5,CLNO             * line count >= 55
          GOTO      BDEA1000 IF LESS        * no  
.
.         print heading
.
          CALL      HEAD0000                * print heading
          CALL      SHED0000                * print session heading
          PRINT     *40,"(Cont'd)"
          ADD       ONE,CLNO
          GOTO      BDEA1000                * get next case
.
BDEA9999  RETURN
+
.***********************************************************************
.*  DIFT0000  :  Check if Patient team is different to session team    *
.***********************************************************************
DIFT0000  MOVE      ZERO,DIFFTEAM                 * assume teams are same
          UNPACK    SP20,DEBDC1,DEBDC2,DEBDC3
          PACK      KEY11,OPDAUNIQ,SP1
          CALL      RSOPDEB1
.
DIFT1000  CALL      RKOPDEB1
          BRANCH    OVRCD,DIFT9999
          MATCH     OPDAUNIQ,OPDBUNIQ
          GOTO      DIFT9999 IF NOT EQUAL
.
. we have at least 1 team, check if this team is diff to session default team
.
          MOVE      ZERO,COUNT
DIFT2000  ADD       ONE,COUNT
          COMPARE   NINE,COUNT
          GOTO      DIFT1000 IF EQUAL
          LOAD      SESDOC,COUNT,OPSEDCC1,OPSEDCC2,OPSEDCC3,OPSEDCC4:
                                 OPSEDCC5,OPSEDCC6,OPSEDCC7,OPSEDCC8
          LOAD      DEBDOC,COUNT,OPDBDCC1,OPDBDCC2,OPDBDCC3,OPDBDCC4:
                                 OPDBDCC5,OPDBDCC6,OPDBDCC7,OPDBDCC8
.
          MATCH     SESDOC,DEBDOC
          GOTO      DIFT2000 IF EQUAL       * codes are the same
.
          MOVE      ONE,DIFFTEAM                  * teams are different
.
. extract the first three doctor codes entered
.
          MOVE      ZERO,COUNT
          MOVE      ZERO,ICENT              * counter of which doctor code
.
DIFT4000  ADD       ONE,COUNT
          COMPARE   NINE,COUNT
          GOTO      DIFT8000 IF EQUAL
          LOAD      DTYPE,COUNT,OPDBTYD1,OPDBTYD2,OPDBTYD3,OPDBTYD4:
                                OPDBTYD5,OPDBTYD6,OPDBTYD7,OPDBTYD8
          LOAD      DEBDOC,COUNT,OPDBDCC1,OPDBDCC2,OPDBDCC3,OPDBDCC4:
                                 OPDBDCC5,OPDBDCC6,OPDBDCC7,OPDBDCC8
.
          MATCH     SP3,DTYPE
          GOTO      DIFT4000 IF EQUAL       * no doctor type
.
          PACK      KEY5,ANSO,ANSP,DTYPE
          CALL      RDCODE1
          BRANCH    OVRCD,DIFT4000          * invalid code
.
          ADD       ONE,ICENT
          COMPARE   FOUR,ICENT
          GOTO      DIFT8000 IF NOT LESS    * the 3 codes are set
.
          MOVE      TCINDC1,ANS
          REP       "S1N2",ANS
          MOVE      THREE,EXIT              * default to other
          MOVE      ANS,EXIT                * set up exit to be 1 or 2 or 3
          STORE     DEBDOC,ICENT,DEBDC1,DEBDC2,DEBDC3
          GOTO      DIFT4000
.
. we have our 3 doctor codes so format them
.
DIFT8000  CLEAR     NEWTEAM
          MATCH     SP6,DEBDC1
          GOTO      DIFT8200 IF EQUAL
.
          MOVE      DEBDC1,KEY6
          CALL      DOCI0000
          MOVE      PACFNAME,NEWTEAM
          CALL      STPB0000                * remove blanks
          APPEND    " (",NEWTEAM
          APPEND    DEBDC1,NEWTEAM
          CALL      STPB0000
          APPEND    ")",NEWTEAM
.
DIFT8200  MATCH     SP6,DEBDC2
          GOTO      DIFT8400 IF EQUAL
.
          MOVE      DEBDC2,KEY6
          CALL      DOCI0000
          APPEND    SP1,NEWTEAM
          APPEND    SLASH,NEWTEAM
          APPEND    SP1,NEWTEAM
          APPEND    PACFNAME,NEWTEAM
          CALL      STPB0000                * remove blanks
          APPEND    " (",NEWTEAM
          APPEND    DEBDC2,NEWTEAM
          CALL      STPB0000
          APPEND    ")",NEWTEAM
.
DIFT8400  MATCH     SP6,DEBDC3
          GOTO      DIFT9000 IF EQUAL
.
          MOVE      DEBDC3,KEY6
          CALL      DOCI0000
          APPEND    SP1,NEWTEAM
          APPEND    SLASH,NEWTEAM
          APPEND    SP1,NEWTEAM
          APPEND    PACFNAME,NEWTEAM
          CALL      STPB0000                * remove blanks
          APPEND    " (",NEWTEAM
          APPEND    DEBDC3,NEWTEAM
          CALL      STPB0000
          APPEND    ")",NEWTEAM
.
DIFT9000  MOVEFPTR  NEWTEAM,NTLEN                 * get the logical length
.                                                 * of NEWTEAM 
          RESET     NEWTEAM,NTLEN
          LENSET    NEWTEAM
          RESET     NEWTEAM
.
DIFT9999  RETURN
+
.***********************************************************************
.*                  SHED0000                    Called by : PDLY0000   *
.*        print session header                                         *
.*        Para's  : FOLLFLAG      = 1 dont print theatre code          *
.***********************************************************************
SHED0000  MOVE      TRUE,SESHEAD            * indicate calling proc. is print
.                                           * session heading
          MOVE      XTHEATRE,KEY6
          MOVE      "No Theatre Code",OPRMDESC
          CALL      RDOPOPR1                * read operating room code
          PRINT     *N,*N,OPRMDESC;         * print operating room desc
.
          PACK      KEY9,XTIME,SP9
          MOVE      SP1,TCINDC1
          PACK      KEY5,CATST,XSTYPE
          CALL      RDCODE1
          MATCH     ANSF,TCINDC1
          GOTO      SHED0100 IF NOT EQUAL   * not a to follow session
.
          MOVE      "To Follow",KEY9
.
SHED0100  PRINT     *1,OPRMDESC,*50,"Start : ",KEY9; 
.
          COMPARE   ZERO,XSSTAT
          GOTO      SHED0500 IF NOT EQUAL   * not a cancelled session
.
          PRINT     *70,"SESSION IS CANCELLED";
.
SHED0500  MOVE      ZERO,FOLLFLAG           * clear the flag
          PRINT     *N;
.
          MOVE      XCLIN,KEY6              * doctor code
          PACK      PACDOCTS,SP30,SP30,SP30
          CLEAR     PACDOCTS
          CALL      DOCI0000
          APPEND    PACFNAME,PACDOCTS
          CALL      STPA0000                * strip doctor name
          APPEND    " (",PACDOCTS
          APPEND    XCLIN,PACDOCTS
          CALL      STPA0000                * stip blanks from code
          APPEND    ")",PACDOCTS
.
          CALL      SDTM0000                * check for 3rd member in dflt team
.
          MOVE      XANAE,KEY6
          CALL      DOCI0000
          CALL      FORM0000
          CALL      STPA0000                * remove blanks
          APPEND    " (",PACDOCTS
          APPEND    XANAE,PACDOCTS
          CALL      STPA0000                * stip blanks from code
          APPEND    ")",PACDOCTS
.
SHED2200  MOVEFPTR  PACDOCTS,VAR            * get the logical length
          RESET     PACDOCTS,VAR
          LENSET    PACDOCTS
          RESET     PACDOCTS
          PRINT     *7,PACDOCTS
          MOVE      ZERO,CNTVAR
          PRINT     *7;
.
. -- determine no. of underlines to print
.
SHED3000  ADD       ONE,CNTVAR
          COMPARE   CNTVAR,VAR              * CNTVAR > the length of PACDOCTS
          GOTO      SHED4000 IF LESS        * yes
          PRINT     "-";                    * print underlines
          GOTO      SHED3000       
.
SHED4000  PRINT     *N;
          ADD       THREE,CLNO 
.
.         Check if a continuation message should be printed
.
          COMPARE   ONE,CONTFLAG            * want continuation message ?
          GOTO      SHED9999 IF NOT EQUAL   * no
.
          PRINT     *N,"CONTINUED FROM AM SESSION"
          ADD       TWO,CLNO
.
SHED9999  RETURN
+
.********************************************************************
.*  SDTM0000  :  Check for 3rd member in Session Default team       *
.********************************************************************
SDTM0000  PACK      KEY22,XHOSP,XSESDATE,XTIME,XCLIN,SP70    * get session
          CALL      RDOPSES1
          BRANCH    OVRCD,SDTM9999
.
. search for a 3rd member of a team
. make sure 3rd member is 2nd doctor OR 2nd anaeth. OR other
.
          MOVE      ZERO,FNDSURG                  * havent found surgeon
          MOVE      ZERO,FNDANAE                  * havent found anaesthetist
          MOVE      ZERO,COUNT
SDTM1000  ADD       ONE,COUNT
          COMPARE   NINE,COUNT
          GOTO      SDTM9999 IF EQUAL
          LOAD      DTYPE,COUNT,OPSETYD1,OPSETYD2,OPSETYD3,OPSETYD4:
                                OPSETYD5,OPSETYD6,OPSETYD7,OPSETYD8
.
          MATCH     SP3,DTYPE
          GOTO      SDTM1000 IF EQUAL
.
          PACK      KEY5,ANSO,ANSP,DTYPE
          CALL      RDCODE1
          BRANCH    OVRCD,SDTM1000
.
          BRANCH    FNDSURG,SDTM2000              * already found surgeon?
          MATCH     TCINDC1,ANSS                  * surgeon
          GOTO      SDTM2000 IF NOT EQUAL
          MOVE      ONE,FNDSURG                   * found the surgeon
          GOTO      SDTM1000
.
SDTM2000  BRANCH    FNDANAE,SDTM3000              * already found anaesth.?
          MATCH     TCINDC1,ANSN                  * anaesthetist
          GOTO      SDTM3000 IF NOT EQUAL
          MOVE      ONE,FNDANAE                   * found the anaesthetist
          GOTO      SDTM1000
.
. we have the extra team member we require
.
SDTM3000  LOAD      KEY6,COUNT,OPSEDCC1,OPSEDCC2,OPSEDCC3,OPSEDCC4:
                               OPSEDCC5,OPSEDCC6,OPSEDCC7,OPSEDCC8
.
          CALL      DOCI0000
          APPEND    SP1,PACDOCTS
          APPEND    SLASH,PACDOCTS
          APPEND    SP1,PACDOCTS
          APPEND    PACFNAME,PACDOCTS
          CALL      STPA0000                * strip doctor name
          APPEND    " (",PACDOCTS
          APPEND    KEY6,PACDOCTS
          CALL      STPA0000                * stip blanks from code
          APPEND    ")",PACDOCTS
.
SDTM9999  RETURN
+
.********************************************************************
.*                  DOCI0000                    Called by : MANY    *
.*        get doctors name in Title,Initial, Surname format         *
.********************************************************************
DOCI0000  MOVE      SP6,DTITL
          MOVE      SP2,DGNAME
          MOVE      SP30,DSNAME
          CALL      RDDOCT1
          MOVE      DTITL,PACTITLE 
          MOVE      DGNAME,PACGNAME
.
          CMATCH    SP1,DGNAME              * Is there a given name initial ?
          GOTO      DOCI1000 IF EQUAL       * No
.
          MOVE      DGNAME,ANS 
.
          PACK      PACGNAME,ANS,DOT,SP30   * move initials to given name
.
DOCI1000  MOVE      DSNAME,PACSNAME
          MOVE      ONE,PACFRMT
          CALL      PACNAME                 * format the name
.
DOCI9999  RETURN
          
************************************************************************
.*              FORM0000                        Called by : MANY       *
.*             append doctors                                          *
************************************************************************
FORM0000  CMATCH    SP1,PACDOCTS
          GOTO      FORM2000 IF NOT EQUAL   * have something to print
. 
          BUMP      PACDOCTS,-1
          GOTO      FORM0000 IF NOT EOS     * have something to print
.
.         No Previous Doctor
.
          CLEAR      PACDOCTS
          GOTO       FORM2100
.
FORM2000  MATCH      SP10,PACFNAME          * Is there a 2nd doctor
          GOTO       FORM3200 IF EQUAL      * no
.
          APPEND     SP1,PACDOCTS

          BRANCH     SESHEAD,FORM2050       * calling proc. is session heading
          APPEND     AM,PACDOCTS 
          APPEND     SP1,PACDOCTS
.
FORM2050  APPEND     SLASH,PACDOCTS
          APPEND     SP1,PACDOCTS
.
.         Append 2nd doctor
.
FORM2100  APPEND    PACFNAME,PACDOCTS
.
FORM2200  CMATCH    SP1,PACDOCTS
          GOTO      FORM3000 IF NOT EQUAL
. 
          BUMP      PACDOCTS,-1
          GOTO      FORM2200 IF NOT EOS
.
.         No 1st Doctor, 2nd doctor
.
          CLEAR      PACDOCTS
          GOTO       FORM3200
.
FORM3000  BRANCH     SESHEAD,FORM3200       * Calling proc. is session heading
          APPEND     SP1,PACDOCTS
          APPEND     PM,PACDOCTS              
.
FORM3200  APPEND     SP30,PACDOCTS          * pad field with spaces
          APPEND     SP30,PACDOCTS 
          APPEND     SP30,PACDOCTS
          RESET      PACDOCTS
.
FORM9999  RETURN
+
.**************************************************************************
.*                  HEAD0000                        Called by : MANY      *
.*        print the heading                                               *
.*        Para's  : PRNTDATE      the date of the session                 *
.**************************************************************************
HEAD0000  MOVE      ONE,CNOUNDLN
          CALL      IBACLOCK
.
          CALL      HEAD132
.
          UNPACK    PRNTDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,FORM2           * move month to a form field
          LOAD      DSPMONTH,FORM2,JAN,FEB,MAR,APRIL,MAY,JUNE:
                                   JULY,AUG,SEPT,OCT,NOV,DEC
.
          PRINT     *1,DATEADSE,CDAY,SP1,DSPMONTH,SP1,CCENT,CYEAR;
.
          IF          IBCNMHOS =1
            PRINT     *N,*1,"Hospital : ",PTHSNAME
          ENDIF
.         
          CALL      DATECONV
          LOAD      DAYDESC,WEEKDAY,MONDAY,TUESDAY,WEDNSDAY,THURSDAY:
                                    FRIDAY,SATURDAY,SUNDAY
.
          BRANCH    COPTION,HEAD1000,HEAD2000,HEAD3000
          GOTO      HEAD9999
.
.         printing daily list
.
HEAD1000  PRINT     *40,"Starting Theatre",*65,": ",STARTCR,SP2,OPRDESC1
          PRINT     *1,DAYADSES;
          PRINT     *16,DAYDESC;            * make it bold
          PRINT     *40,"Ending Theatre",*65,": ",ENDCR,SP2,OPRDESC2
          MOVE      "5",CLNO
          CALL      PDPH0000                * print period heading
          GOTO      HEAD9999
.
HEAD2000  PRINT     *40,"Medical Admissions "   * Medical admissions
          GOTO      HEAD3100
.
HEAD3000  PRINT     *40,"Pre-Surgical"          * Pre-surgical patients
.
HEAD3100  PRINT     *1,DAYADSES;                 * print description twice to
          PRINT     *16,DAYDESC                  * make it bold
          CALL      DASH0000
.
          COMPARE   THREE,COPTION
          GOTO      HEAD3500 IF EQUAL            * pre-surgical
.
.         sub header for medical admissions
.
          PRINT     *N,"Patients Name",*35,"Admn No.  Age  Diagnosis":
                    *91,"Attending Doctor",*124,"Ward/Bed"
          GOTO      HEAD3900
.
.         sub header for pre-surgical
.
HEAD3500  PRINT    *N,"Patients Name",*35,"Admn No.  Age  Diagnosis":
                    *91,"Attending Doctor",*111,"Session Date":
                    *124,"Ward/Bed"
.
HEAD3900  CALL      DASH0000
          PRINT     *N;
          MOVE      "9",CLNO 
. 
HEAD9999  RETURN
+
***************************************************************************
.*                           DASH0000                                     *
.*                  print 132 dashes                                      *
***************************************************************************
DASH0000  PRINT     "----------------------------------------":
                    "----------------------------------------":
                    "----------------------------------------":
                    "------------";
          ADD       ONE,CLNO
DASH9999  RETURN
+
.**************************************************************************
.*                           PATN0000                                     *
.*        get patients name, age and diagnosis from PATMASFD              *
.**************************************************************************
PATN0000  MOVE      TWO,PACFRMT
          MOVE      PTITL,PACTITLE
          MOVE      PGNAME,PACGNAME
          MOVE      PSNAME,PACSNAME
          CALL      PACNAME
          MOVE      PACFNAME,PATNAME
PATN9999  RETURN
+
.**************************************************************************
.*                           ASES0000                                     *
.*    check if session is afternoon session                               *
.**************************************************************************
ASES0000  PACK      KEY22,OPSECLIN,OPSEHOSP,OPSEDATE,OPSETIME,SP70
          CALL      RDOPSES2
          CALL      RPOPSES2
          BRANCH    OVRCD,ASES8000
.
          MATCH     XCLIN,OPSECLIN
          GOTO      ASES8000 IF NOT EQUAL
.
          MATCH     XSESDATE,OPSEDATE
          GOTO      ASES8000 IF NOT EQUAL
.
          MATCH     SAVTPER,OPSETPER              * diff time period?
          GOTO      ASES8000 IF EQUAL
.
.         we have an afternoon session
.
          MOVE      ZERO,EXIT
          GOTO      ASES9999
.
ASES8000  MOVE      ONE,EXIT                * first session on date
.
ASES9999  RETURN
+
.**************************************************************************
.*                           C1ST0000                                     *
.*        check if this the first session for the date                    *
.**************************************************************************
C1ST0000  PACK      KEY22,XCLIN,XHOSP,XSESDATE,SP70
          CALL      RSOPSES2
          CALL      RKOPSES2
          BRANCH    OVRCD,C1ST8000
.
          MATCH     XCLIN,OPSECLIN
          GOTO      C1ST8000 IF NOT EQUAL
.
          MATCH     XHOSP,OPSEHOSP
          GOTO      C1ST8000 IF NOT EQUAL
.
          MATCH     XSESDATE,OPSEDATE
          GOTO      C1ST8000 IF NOT EQUAL
.
          MATCH     XTIME,OPSETIME
          GOTO      C1ST8000 IF EQUAL
.
.         Not the first session on date
.
          MOVE      ZERO,EXIT
          GOTO      C1ST9999
.
C1ST8000  MOVE      ONE,EXIT                * first session on date
.
C1ST9999  RETURN
+
.***************************************************************************
.*                  LDEA0000                          Called by : PMED0000 *
.*        loops through the 2nd index of OPRDEAFD file to see if the admin *
.*        still has a valid theatre booking                                *
.*        Returns : EXIT = 1      if admin no. still has a valid booking   *
.*                       = 0      no theatre bookings                      *
.***************************************************************************
LDEA0000  MOVE      AADMNO,OPDAADMN            * move to the admission number
          PACK      KEY31,OPDAADMN,ZERO,DATESTRT * start at admiss,booked,date
          CALL      RSOPDEA2                   * position pointer
.
LDEA0500  CALL      RKOPDEA2                   * read next record
          BRANCH    OVRCD,LDEA1000   
.
          MATCH     OPDAADMN,AADMNO            * same admission number
          GOTO      LDEA1000 IF NOT EQUAL      * no
.
          COMPARE   THREE,OPDASTAT             * Status = booked ?
          GOTO      LDEA1000 IF EQUAL          * No
.
.         have a booking so invalid person
.
          MOVE      TRUE,EXIT                  * admin. has a booking
          GOTO      LDEA9999 
.
LDEA1000  MOVE      FALSE,EXIT                 * admin. has no bookings
.
LDEA9999  RETURN
+
.*********************************************************************
.*                  GPMI0000                    Called by : BDEA1000 *
.*        Get PMI details and ward                          PMED1000 *
.*        Para's  : OPDAADMN      visit number                       *
.*        Returns : EXIT = 1      invalid details                    *
.*********************************************************************
GPMI0000  MOVE      OPDAADMN,AADMNO
          MOVE      TWO,PACFRMT
          MOVE      SP30,WARDDESC           * clear description
          UNPACK    SP10,WWARD,WBED         * clear ward and bed codes
          MOVE      SP8,BKREEDAT            * clear exp. admission date
.
          PACK      KEY8,AADMNO
          CALL      RDMISS1                 * read admiisions file
          BRANCH    OVRCD,GPMI5000          * if not there try booking file
.
          COMPARE   ONE,ASTAT
          GOTO      GPMI1000 IF NOT EQUAL
.
. since preadmitted, get ward/bed from booking record
.
          PACK      KEY8,OPDAADMN
          CALL      RDBKREC1                * read bookings to get ward/bed
          BRANCH    OVRCD,GPMI1000
          MOVE      BKREWARD,WWARD
          MOVE      BKREEBED,WBED
          GOTO      GPMI1200
.
GPMI1000  MOVE      AWARD,WWARD
          MOVE      ABED,WBED               * set the bed
.
GPMI1200  
          MATCH     SP8,AURNO              * test if u/r is 0
          GOTO      GPMI7000 IF EQUAL       * read pre-ad file if zero
.
.         Valid read on the admissions file & u/r is not zero
.
GPMI2000  PACK      KEY8,AURNO
          CALL      RDMAST1                 * read master file
          BRANCH    OVRCD,GPMI7000          * try pram file
          GOTO      GPMI9000                * set up name
.
.         try bookings file
.
GPMI5000  PACK      KEY8,OPDAADMN
          CALL      RDBKREC1                * read bookings file
          BRANCH    OVRCD,GPMI9500
.
          MOVE      BKREURNO,AURNO          * set U/R Number
          MOVE      BKREBOOK,AADMNO         * set admission number
          MOVE      BKREADOC,ADOCTA
          MOVE      BKREWARD,AWARD
          MOVE      BKREWARD,WWARD
          MOVE      BKREEBED,ABED
          MOVE      BKREEBED,WBED           * set the bed
.
.....     PACK      KEY6,BKREWARD,SP6       * get ward desc
.....     CALL      RDWARD1
.
          MATCH     SP8,BKREURNO           * test if u/r is zero
          GOTO      GPMI2000 IF NOT EQUAL   * read pre-ad file if zero
.
.         Read the pre-admissions file 
.
GPMI7000  PACK      KEY8,AADMNO
          CALL      RDPRAM1
          BRANCH    OVRCD,GPMI9500
          MOVE      ZERO,PURNO              * clear U/R Number
.
GPMI9000  MOVE      ZERO,EXIT               * Valid details
          MOVE      UNDLN20,WARDDESC        * set up ward desc. for printing
          MATCH     SP3,WWARD
          GOTO      GPMI9999 IF EQUAL       * no desc to format
          MOVE      WWARD,WARDDESC          * set up ward desc. for printing
.
.         format the ward and room
.
          ENDSET    WARDDESC
.
GPMI9100  MATCH     SP1,WARDDESC
          GOTO      GPMI9200 IF NOT EQUAL   * found a character
.
          BUMP      WARDDESC,-1             * move FP back one character
          GOTO      GPMI9100 IF NOT EOS     * more to check
.
GPMI9200  LENSET    WARDDESC                * set LL
          MATCH     SP3,WBED
          GOTO      GPMI9300 IF EQUAL       * no bed
.
          APPEND    "/",WARDDESC
          APPEND    WBED,WARDDESC           * add the bed
          LENSET    WARDDESC                * set the LL
.
GPMI9300  RESET     WARDDESC                * reset FP
          GOTO      GPMI9999
.
GPMI9500  MOVE      ONE,EXIT
.
GPMI9999  RETURN
+
.*********************************************************************
.*                  CLIN0000                    Called by : xxxx0000 *
.*        Calculate the number of lines required for the session     *
.*        Para's  : CURRSESS      the current session                *
.*        Returns : XNLINES       the number of lines                *
.*********************************************************************
CLIN0000  MOVE      ZERO,XNLINES            * clear number of lines
          PACK      KEY26,CURRSESS,ZERO,SP3 * get first case
          CALL      RSOPDEA1                * positional read
.
CLIN1000  CALL      RKOPDEA1                * next read
          BRANCH    OVRCD,CLIN9999          * end of file
.
          PACK      KEY22,OPDAHOSP,OPDADATE,OPDATIME,OPDACLIN,SP70
          MATCH     KEY22,CURRSESS
          GOTO      CLIN9999 IF NOT EQUAL   * different session
.
          COMPARE   ZERO,OPDASTAT
          GOTO      CLIN9999 IF NOT EQUAL   * no more booked patients
.
.         add to the number of lines for the session
.
          ADD       ONE,XNLINES             * add 1 for the case
.
          MATCH     SP50,OPDADES2
          GOTO      CLIN2000 IF EQUAL       * no desc
.
          ADD       ONE,XNLINES             * add 1 for the description
.
CLIN2000  MATCH     SP50,OPDADES3
          GOTO      CLIN1000 IF EQUAL       * no desc
.
          ADD       ONE,XNLINES             * add 1 for the description
          GOTO      CLIN1000                * get next case
.
CLIN9999  RETURN
+
.*********************************************************************
.*                  VPSP0000                    Called by : PSUR1000 *
.*        Determine if a valid pre-surgical patient                  *
.*        Para's  : AADMNO        admission number                   *
.*                  ADATE         admission date                     *
.*        Returns : EXIT = 1      not a valid patient                *
.*                  XSESDATE      session date of first booking      *
.*********************************************************************
VPSP0000  MOVE      AADMNO,KEY8             * set up admission number as DIM
          MOVE      ZERO,CCITEM             * clear counter
          PACK      KEY31,KEY8,ZERO,DATESTRT * position on admission number
          CALL      RSOPDEA2                * positional read
.
VPSP1000  CALL      RKOPDEA2                * next read
          BRANCH    OVRCD,VPSP8000          * not a valid patient
.
          MATCH     KEY8,OPDAADMN
          GOTO      VPSP8000 IF NOT EQUAL   * not a valid patient
.
          COMPARE   ZERO,OPDASTAT
          GOTO      VPSP8000 IF NOT EQUAL   * not a valid patient
.
          UNPACK    OPDADATE,KEY8           * get as cc yymmdd
          MATCH     ADATE,KEY8
          GOTO      VPSP1000 IF EQUAL       * session date = admission date
.
          PACK      KEY8,ADATE              * set the admission date
          CALL      NDAT0000                * get the day after admission date
.
          MATCH     TOMMDATE,OPDADATE
          GOTO      VPSP1000 IF EQUAL       * booking date = admission date + 1
.
          ADD       ONE,CCITEM              * add to number of theatre bookings
          STORE     OPDADATE,CCITEM,XSESDATE * set up print date
          GOTO      VPSP1000
.
.         no more records on detail file
.
VPSP8000  COMPARE   ZERO,CCITEM
          GOTO      VPSP9100 IF EQUAL       * not scheduled for theatre
.
          MOVE      ZERO,EXIT               * valid patient - has bookings
          GOTO      VPSP9999
.
VPSP9100  MOVE      ONE,EXIT                * invalid patient - No bookings
.
VPSP9999  RETURN
+
.*********************************************************************
.*  VACS0000  :  Include vacacnt sessions ?                          *
.*********************************************************************
VACS0000  DISPLAY   *P1:12,*EL:
                    *P1:12,"Do you want to include vacant sessions (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ";
.
VACS1000  MOVE      ANSN,ANS                      * default to No
          KEYIN     *P48:12,"No":
                    *P48:12,*V2LON,*RV,ANS
.
          REP       UPPLOW,ANS
          RESET     ANS
          GOTO      VACS6000 IF EOS
          MATCH     ANSN,ANS
          GOTO      VACS6000 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      VACS3000 IF EQUAL
          BEEP
          GOTO      VACS1000
.
VACS3000  DISPLAY   *P48:12,*V2LON,"Yes"
          MOVE      ONE,INCVSES                   * include vacant sessions
          GOTO      VACS9999
.
VACS6000  DISPLAY   *P48:12,*V2LON,"No"
          MOVE      ZERO,INCVSES
.
VACS9999  RETURN
+
.*********************************************************************
.*                  PDTF0000                    Called by : DATE0000 *
.*        Post to date temp file                                     *
.*        para's  : KEY8          the date                           *
.*********************************************************************
PDTF0000  READ      DATEFILE,KEY8;ANS
          GOTO      PDTF9999 IF NOT OVER    * date already there
.
          DISPLAY   *P27:24,*V2LON,KEY8;
          WRITE     DATEFILE,KEY8;KEY8
PDTF9999  RETURN
+
.*********************************************************************
.*                  GEDT0000                    Called by : xxxx0000 *
.*        Calculate an end date given a start date and duration      *
.*        Para's  : DATEFROM      the starting date                  *
.*                  DURATION      the number of days
.*        Returns : DATEEND1      the end date                       *
.*********************************************************************
.
.         turn the starting date into julian days
.
GEDT0000  CALL      IBACLOCK
          UNPACK    DATEFROM,CCENT,CYEAR,CMON,CDAY
          MOVE      CDAY,DD                 * set up start day
          MOVE      CMON,MM                 *              month
          MOVE      CYEAR,YY                *              year
          MOVE      CCENT,CC                *              century
.
          CALL      DMYCON                  * get julian day
          MOVE      JULDAY,STRTDAYS         * get current julian day
          MOVE      JULYR,STRTYR            * get current julian year
          MOVE      JULCC,STRTCENT          * get current julian century
          MOVE      LEAPYR,STRTLEAP         * get leap year flag (1=leap)
.
.         add the number of days
.
          ADD       DURATION,STRTDAYS       * get the total days for the year
.
.         convert back to calender date
.
          MOVE      STRTDAYS,JWKDAY         * work days
          MOVE      STRTYR,JWKYER           * work year
          MOVE      STRTCENT,JWKCC          * work century
.
          CALL      JULCON                  * convert to DD,MM,YY,CC
.
GEDT5000  PACK      DATEEND1,CC,YY,MM,DD
          REP       " 0",DATEEND1
.
GEDT9999  RETURN
+
.****************************************************************************
.*  WRDR0000  :  Write date range to temp file                              *
.****************************************************************************
WRDR0000  MOVE      DATESTRT,KEY8           * start with start date
.
WRDR1000  CALL      PDTF0000                * post to date temp file
.
          CALL      NDAT0000                * get day after current date
.
          MATCH     TOMMDATE,DATEEND        * out of range?
          GOTO      WRDR9999 IF LESS
.
          MOVE      TOMMDATE,KEY8 
          GOTO      WRDR1000
.
WRDR9999  RETURN
+
.****************************************************************************
.*  MVAC0000  :  we have a vac afternoon sess. so check if Morning sess vac *
.****************************************************************************
MVAC0000  PACK      SAVKEY22,OPSEHOSP,OPSEDATE,OPSETIME,OPSECLIN,SP70   
          PACK      SAVKEY26,OPSEHOSP,OPSEDATE,OPSETIME,OPSECLIN,ZERO,SP2,ONE:
                             SP70       
          MOVE      OPSECLIN,SAVCLIN
          MOVE      OPSEDATE,SAVDATE
          MOVE      OPSETPER,SAVTPER
.
          MOVE      ONE,EXIT                      * assume AM sess vacant
.
          PACK      KEY22,OPSECLIN,OPSEHOSP,OPSEDATE,OPSETIME,SP70
          CALL      RDOPSES2
MVAC1000  CALL      RPOPSES2
          BRANCH    OVRCD,MVAC9000
.
          MATCH     OPSECLIN,SAVCLIN 
          GOTO      MVAC9000 IF NOT EQUAL
.
          MATCH     OPSEDATE,SAVDATE
          GOTO      MVAC9000 IF NOT EQUAL
.
          MATCH     OPSETPER,SAVTPER              * diff time period?
          GOTO      MVAC1000 IF EQUAL
.
. we have a Morning session co check if contains bookings
.
          PACK      KEY26,OPSEHOSP,OPSEDATE,OPSETIME,OPSECLIN,SP30
          CALL      RSOPDEA1
MVAC2000  CALL      RKOPDEA1
          BRANCH    OVRCD,MVAC1000
.
          MATCH     OPSEDATE,OPDADATE
          GOTO      MVAC1000 IF NOT EQUAL
.
          MATCH     OPSETIME,OPDATIME
          GOTO      MVAC1000 IF NOT EQUAL
.
          MATCH     OPSECLIN,OPDACLIN
          GOTO      MVAC1000 IF NOT EQUAL
.
          COMPARE   ZERO,OPDASTAT                 * Booked?
          GOTO      MVAC1000 IF NOT EQUAL
.
          MOVE      ZERO,EXIT                     * we have bookings in AM sess
.
MVAC9000  MOVE      SAVKEY22,KEY22                * restore details
          CALL      RDOPSES1
.
          MOVE      SAVKEY26,KEY26
          CALL      RDOPDEA1
.
MVAC9999  RETURN
+
.*****************************************************************************
.*  SAMS0000  :  AM sess vac. so check if this surg has AM sess with Bookngs *
.*****************************************************************************
SAMS0000  PACK      SAVKEY22,OPSEHOSP,OPSEDATE,OPSETIME,OPSECLIN,SP70
          PACK      SAVKEY26,OPSEHOSP,OPSEDATE,OPSETIME,OPSECLIN,ZERO,SP2,ONE:
                             SP70
          MOVE      OPSECLIN,SAVCLIN
          MOVE      OPSEDATE,SAVDATE
          MOVE      OPSETPER,SAVTPER              * AM session
          MOVE      OPSETIME,SAVTIME
.
          MOVE      ONE,EXIT                      * assume Surg has no bookings
.
          PACK      KEY22,OPSECLIN,OPSEHOSP,OPSEDATE,ZZZZ
          CALL      RSOPSES2
SAMS1000  CALL      RPOPSES2
          BRANCH    OVRCD,SAMS9000
.
          MATCH     OPSECLIN,SAVCLIN 
          GOTO      SAMS9000 IF NOT EQUAL
.
          MATCH     OPSEDATE,SAVDATE
          GOTO      SAMS9000 IF NOT EQUAL
.
          MATCH     OPSETIME,SAVTIME              * same AM sess as current?
          GOTO      SAMS9000 IF NOT EQUAL
.
          MATCH     OPSETPER,SAVTPER              * diff time period?
          GOTO      SAMS1000 IF NOT EQUAL         * we want period AM
.
. we have a Morning session (for same surgeon) co check if contains bookings
.
          PACK      KEY26,OPSEHOSP,OPSEDATE,OPSETIME,OPSECLIN,ZERO,SP30
          CALL      RSOPDEA1
SAMS2000  CALL      RKOPDEA1
          BRANCH    OVRCD,SAMS1000
.
          MATCH     OPSEDATE,OPDADATE
          GOTO      SAMS9000 IF NOT EQUAL
.
          MATCH     OPSETIME,OPDATIME
          GOTO      SAMS9000 IF NOT EQUAL
.
          MATCH     OPSECLIN,OPDACLIN
          GOTO      SAMS9000 IF NOT EQUAL
.
          COMPARE   ZERO,OPDASTAT                 * Booked?
          GOTO      SAMS9000 IF NOT EQUAL
.
          MOVE      ZERO,EXIT                     * we have bookings in AM sess
.
SAMS9000  MOVE      SAVKEY22,KEY22                * restore details
          CALL      RDOPSES1
.
          MOVE      SAVKEY26,KEY26
          CALL      RDOPDEA1
.
SAMS9999  RETURN
+
.*********************************************************************
.         include cancelled sessions
.*********************************************************************
CNCS0000  DISPLAY   *P1:14,*EL:
                    *P1:14,"Do you want to include cancelled sessions (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ";
.
CNCS1000  MOVE      ANSN,ANS                      * default to No
          KEYIN     *P51:14,"No":
                    *P51:14,*V2LON,*RV,ANS
.
          REP       UPPLOW,ANS
          RESET     ANS
          GOTO      CNCS6000 IF EOS
          MATCH     ANSN,ANS
          GOTO      CNCS6000 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      CNCS3000 IF EQUAL
          BEEP
          GOTO      CNCS1000
.
CNCS3000  DISPLAY   *P51:14,*V2LON,"Yes"
          MOVE      ANSY,INCLCANC
          GOTO      CNCS9999
.
CNCS6000  DISPLAY   *P51:14,*V2LON,"No"
          MOVE      ANSN,INCLCANC
.
CNCS9999  RETURN
+
.*********************************************************************
.         print separate page for each period
.*********************************************************************
PPSP0000  DISPLAY   *P1:16,*EL:
                    *P1:16,"Print each period on a separate page (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ";
.
PPSP1000  MOVE      ANSN,ANS                      * default to No
          KEYIN     *P46:16,"No":
                    *P46:16,*V2LON,*RV,ANS
.
          REP       UPPLOW,ANS
          RESET     ANS
          GOTO      PPSP6000 IF EOS
          MATCH     ANSN,ANS
          GOTO      PPSP6000 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      PPSP3000 IF EQUAL
          BEEP
          GOTO      PPSP1000
.
PPSP3000  DISPLAY   *P46:16,*V2LON,"Yes"
          MOVE      ANSY,NEWPGPER
          GOTO      PPSP9999
.
PPSP6000  DISPLAY   *P46:16,*V2LON,"No"
          MOVE      ANSN,NEWPGPER
.
PPSP9999  RETURN
+
.*********************************************************************
.         print the period heading
.*********************************************************************
PDPH0000  PACK      KEY5,ANSS,ANSP,XPERIOD 
          MOVE      SP20,TDESC
          CALL      RDCODE1                 * read codes file
          PRINT     *N,"Period : ",XPERIOD,SP3,TDESC
          CALL      DASH0000
          PRINT     *N,"Case  Doctor's Name/Patients Name ":
                    *42,"Admn No.   Age   Operation",*121,"Ward/Room"
          CALL      DASH0000
          ADD       "4",CLNO
PDPH9999  RETURN
+
.*********************************************************************
.         set flag if oper. date = exp. admn. date
.         print the required age value
.         if age >= 2 years, print in years
.         if age >= 1 month, print in months
.         otherwise print in days
.*********************************************************************
PRAV0000  MOVE      SP1,OPDTADDT
          MATCH     BKREEDAT,OPDADATE
          GOTO      PRAV1000 IF NOT EQUAL   * dates diff
.
          MOVE      "*",OPDTADDT            * set flag for print
.
PRAV1000  PACK      AGEDATE,CCC,CYY,CMM,CDD
          REP       " 0",AGEDATE
          CALL      CALCAGE
.
          MOVE      PSAGEYRS,PATAGE         * default to normal age
          COMPARE   TWO,PSAGEYRS
          GOTO      PRAV9999 IF NOT LESS    * age >= 2 so dont do anything
.
          MOVE      PSAGEMNT,FORM2
          PACK      PATAGE,FORM2,ANSM       * set as months
          COMPARE   ONE,PSAGEMNT
          GOTO      PRAV9999 IF NOT LESS    * age >= 1 month so display in mnths
.
          MOVE      PSAGEDAY,FORM2
          PACK      PATAGE,FORM2,ANSD       * display age in days
.
PRAV9999  RETURN
+
.*********************************************************************
.         strip blanks from end of doctor name string
.*********************************************************************
STPA0000  RESET     PACDOCTS,90
STPA1000  CMATCH    SP1,PACDOCTS            * Found a non-blank char. ?
          GOTO      STPA9999 IF NOT EQUAL   * Yes, Finished loop
.
          BUMP      PACDOCTS,-1
          GOTO      STPA1000 IF NOT EOS
.
STPA9999  RETURN
+
.*********************************************************************
.         strip blanks from end of team doctors string
.*********************************************************************
STPB0000  RESET     NEWTEAM,55
STPB1000  CMATCH    SP1,NEWTEAM            * Found a non-blank char. ?
          GOTO      STPB9999 IF NOT EQUAL   * Yes, Finished loop
.
          BUMP      NEWTEAM,-1
          GOTO      STPB1000 IF NOT EOS
.
STPB9999  RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
.
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
          INC       BOKDIAIO/INC       * Bookings file
          INC       BOKRC1IO/INC       * Bookings file
          INC       CALCAGE
          INC       DATECONV    
          INC       OPRDEAIO/INC       * Operation Details file
          INC       OPRDEBIO/INC       * Operating Team file
          INC       OPROPRDS           * ? for operating rooms
          INC       OPROPRIO/INC       * Operating Room file
          INC       OPRSESIO/INC       * Sessions file
          INC       PATDOCDS           * ? for doctor codes
          INC       PATCODIO/INC       * Codes file
          INC       PATDO1IO/INC       * Doctors file
          INC       PATMA1IO/INC       * Patient Master file
.          INC       HL7BMTIO/INC
.          INC       HL7BMTMA
          INC       PATMI1IO/INC       * Admissions file
          INC       PATPR1IO/INC       * Pre-admissions file
          INC       PATTRNIO/INC       * Transfers file
.          INC       HL7BMTTR
          INC       PATWR1IO/INC       * Wards file
.
          INC       PATHSPKY
          INC       PMSVX1IO/INC
          INC       PATHSPIO/INC 
...............................................................................
