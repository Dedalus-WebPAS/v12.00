.***************************************************************************
.* System    :   Private Practice                                          *
.* Program   :   IBAPRI10                                                  *
.* Desc      :   Multiple Services Maintenance                             *
.***************************************************************************
.* Date      :   11/01/91                                                  *
.* Author    :   Stephen Armstrong                                         *
.* Function  :   Allows maintenance of multiple service codes for          *
.*               pathology items                                           *
.* Mods      :                                                             *
.*        V10.04.01 15/04/2014  J.Tan          CAR 261630                  *
.*                  Removed port number from temp file name                *
.*        V5.07.01  15/10/1999  D.Di Paola                                 *
.*                  Recompiled for PRIITMFD                                *
.*       V5.07.B01  04/11/1998  Jim Stathopoulos                           *
.*                  507 Changes                                            *
.***************************************************************************
.*        V5.05.01  08/10/1997  Steve Armstrong         WWH Mods           *
.*                  Mods for change from GETITEM to KYPRIITM               *
.***************************************************************************
.*               V6.01 26/03/92 Steve Armstrong                            *
.*               Recompiled for change to PRIITMDS                         *
.*        V5.03.01  14/08/1995  Steve Armstrong                            *
.*                  Recompiled for PRIITMFD                                *
.***************************************************************************
.
.$$$$$
.         Multiple Services Code Maintenance ( IBAPRI10 )
.         -----------------------------------------------
.
.         ML0000
.         Initialise and open files
.               priitemf
.               primultf
.
.         Create a temporary file, after erasing any existing file.
.         
.         ML0100
.         See which option is selected - insert,change, delete.
.         If 0 is selected, chain back to the calling program.
.
.         ML1000
.         Add option selected.
.         User is prompted to input multiple service code.
.           If nothing/exitchar is input, returns to get the next menu option.
.           If "?" input, multiple service codes are displayed
.         User is prompted to input effective date
.           If nothing is input, returns to get next multiple service code.
.           If "?" input, the current effective dates for that code are
.              displayed
.         If a valid date is input, the program checks that the code doesn't 
.         exist on file for that date already.
.
.         The user is then prompted to input up to 14 entries for multiple
.         procedures on this code.  Each entry represents the equivalent
.         AMA and/or MBS item number to be charged for, where multiple
.         procedures of the same type have been performed.
.
.         The number of procedures performed is input
.            If nothing is input, the program proceeds to the edit stage 
.              detailed below.  
.            If exitchar is input, the program returns to get the next option.
.            The number is checked to make sure it is unique
.
.         An MBS item is input.
.            If nothing is entered, the program skips to the AMA field
.            If an item is entered it is validated against the MBS item file
.            If exitchar is entered, the program returns to get the next option.
.            If "?" is entered, the MBS codes on file are listed.
.
.         An AMA item is input.
.            If exitchar is entered, the program returns to get the next option.
.            If nothing is entered, and there was no MBS item entered either,
.              the program proceeds to the edit stage detailed below.
.            If nothing is entered and there was an MBS item entered, the 
.              program proceeds to the next input line.  
.            If a "?" is entered, the AMA codes on file are listed.  
.            If an item is entered, it is validated against AMA items on file.
.            The record is then written to the temporary file
.            The program proceeds to the next line for the next MBS item
.
.         Once 14 procedure lines have been input, the program proceeds to the
.         edit stage.
.
.         At the edit stage, the user can add, change, delete, cancel or post
.         the records in the temporary file.
.
.         If (A)dd is selected, a new record may be added to the temporary file.
.
.         If (D)elete is selected, the user is prompted to select a line number.
.         If nothing is input, the program returns to the edit prompt.  The 
.         number must be a valid number, which is highlighted on selection.  
.         The user is then prompted to delete.
.              If (C) is entered, the program returns to the edit prompt.
.              If (N) is entered, the program returns to get the next line no.
.              If (Y) is entered, the entry is deleted from the temporary file.
.
.         If (C)ancel is selected, the program returns to get the next code.
.
.         If a line number is selected to modify, the existing entry is cleared
.         and the user is prompted to input the data for the line.  
.           If nothing is input for the number of procedures, the entry 
.             defaults back to its original state.  
.           If neither AMA or MBS number is input, it also defaults back to 
.             its original state.  
.         The program then returns to the edit prompt again.
.
.         If (P)ost is selected, the records in the temporary file are written
.         to the Multiple services file, then the program returns to get the
.         next code.
.
.         ML2000
.         Change option selected.
.
.         User is prompted to input the multiple services code and 
.         effective date as for insert mode (must be on file already).
.         If there are records on file, they are written to the temporary
.         file, displayed to the screen, and the program then proceeds to the 
.         edit stage as outlined above.
.
.         Once the changes have been made, if (P)ost is selected, the existing
.         records on file are deleted, then the records from the temporary file
.         are written to the multiple services file.
.
.         ML3000
.         Delete option selected.
.         
.         User is prompted to input the multiple services code and
.         effective date as for insert mode.
.         If there are records on file, they are written to the
.         temporary file, displayed to the screen, and the program then
.         proceeds to the delete prompt.
.
.         If (C)ancel is selected, the program returns to get the next option.
.         If (N)o is selected, the program returns to get the next code.
.         If (Y)es is selected, the program then deletes all records in the
.         multiple services file associated with the code/date, before returning
.         to get the next code.
.
.         ML9000
.         The temporary file is erased prior to chaining back to the calling
.         program
.
.         ML9999
.         Chain back to the calling program
.
.$$$$$
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
. FILE DESCRIPTION INCLUDES
. -------------------------
.
          INC       PRIMULFD/INC                 * multiple services file
          INC       PRIITMFD/INC                 * item file
.
.         Temporary File Definition
.         -------------------------
.
.         Filename : PRI10Axx.dat          (xx = port id)
.
MULTEMP1  IFILE SQL, FIXED=53, KEY="U1-3"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
DXNUMB    DIM       3           3           1       Number of procedures
XMITEM    DIM       9           9           4       MBS Item number
XMSUBN    DIM       3           3           13      MBS Subitem number
XMDESC    DIM       14          14          16      MBS item description
XAITEM    DIM       9           9           30      AMA item number
XADESC    DIM       14          14          39      AMA item decsription
.
.End of Record                              53
.
. Redefine form field
.
XNUMB     FORM      3
.
. PROGRAM CONSTANTS
. -----------------
.
DMESS     INIT      "Item not found"
ERASE     INIT      "iserase "
ISBUILD   INIT      "isbuild "
NINE3     INIT      "999"
NINE8     INIT      "99999999"
UKEY      INIT      " 53 U1-3"
ZED11     INIT      "zzzzzzzzzzz"
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
ADESC     DIM       14                           * AMA item description
AITEM     DIM       9                            * AMA item number
.
CHOICE    DIM       2                            * input field
CMDLIN1   DIM       24      
CMDLIN2   DIM       16
COUNTER   FORM      2                            * temp file record counter
.
DIMNUM    DIM       3                            * no. of procedures input field
.
EDATE     DIM       8                            * effective date
.
IFLAG     FORM      2                            * MBS/AMA indicator flag
.                                                      0 = MBS
.                                                      1 = AMA
ITEMNUMB  DIM       9                            * item number
ITMDESC   DIM       30                           * for PRIITMDS
ITMFLAG   FORM      1                            * for PRIITMDS
.
LINENO    FORM      2                            * line counter
.
MDESC     DIM       14                           * short MBS item description
MSDESC    DIM       30                           * mult. serv. description
MFLAG     FORM      1                            * for PRIMULDS
MITEM     DIM       9                            * MBS item number
MSITEM    DIM       3                            * MBS subitem number
MSCODE    DIM       5                            * multiple services code
MULDESC   DIM       30                           * for PRIMULDS
.
PATHFLAG  FORM      1                            * for PRIITMDS
.
SERDATE   DIM       8                            * for PRIMULDS/PRIITMDS
SHTDESC   DIM       25                           * for PRIMULDS/PRIITMDS
SUBITEM   DIM       3                            * subitem number
.
TEMPFILE  DIM       8
TEMPNUM   FORM      3                            * no. of procedures (form)
TMPADESC  DIM       14                           * temporary AMA item desc.
TMPAMA    DIM       9                            * temporary AMA item number
TMPMBS    DIM       9                            * temporary MBS item number
TMPMDESC  DIM       14                           * temporary MBS item desc.
TMPNUMB   DIM       3                            * temporary number of procs.
TMPSUB    DIM       3                            * temporary MBS subitem number
TNUMB     FORM      2                            * record selection (form)
.
PRGID     INIT      "IBAPRI10"
PRGNAM    INIT      "Multiple Services Maintenance"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialization and open files
.
          CALL      CREA0000               * create temporary file
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9000            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000:        * insert
                            ML2000:        * change
                            ML3000         * delete
.
. ---- add a procedure code ----
.
ML1000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
.
          CALL      DATE0000               * get effective date
          BRANCH    EXIT,ML1000            * nothing input
.
          CALL      DESC0000               * get description
          BRANCH    EXIT,ML1000            * exitchar input
          CALL      SEL0000                * modify fields
          BRANCH    EXIT,ML1000            * (C)ancel input
.
          CALL      INPT0000               * input multiple procedures
          BRANCH    EXIT,ML0100            * exitchar input
          CALL      TDIS0000               * redisplay screen
          CALL      EDIT0000               * see if changes or post
          BRANCH    EXIT,ML1000            * (C)ancel selected
          CALL      WRT0000                * write to file
          GOTO      ML1000                 * get next code
.
. ---- modify a procedure code ----
.
ML2000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
.
          CALL      DATE0000               * get effective date
          BRANCH    EXIT,ML2000            * nothing input
.
          CALL      DISD0000               * display MSC description
          CALL      SEL0000                * modify description
          BRANCH    EXIT,ML2000            * (C)ancel selected
.
          CALL      READ0000               * get multiple services on file
          CALL      TDIS0000               * display records to screen
          CALL      EDIT0000               * see if any changes
          BRANCH    EXIT,ML2000            * (C)ancel selected
          CALL      UPD0000                * update record 
          GOTO      ML2000                 * get next code
.
. ---- delete a procedure code ----
.
ML3000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
.
          CALL      DATE0000               * get effective date
          BRANCH    EXIT,ML3000            * nothing input
.
          CALL      READ0000               * get multiple services on file
          CALL      TDIS0000               * display records to screen
          CALL      DELQST                 * ok to delete ?
          BRANCH    CEXIT,ML3100:          * Yes
                          ML3000:          * No
                          ML0100           * Cancel
ML3100    CALL      DEL0000                * delete this record
          GOTO      ML3000                 * get next code
.
ML9000    CALL      KILL0000               * erase tempfile
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*              Open files and initialise variables                         *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                     * display heading
          DISPLAY   *P56:24,*EL,"Opening "
.
          DISPLAY   *P64:24,"primultf";          * multiple services file
          OPEN      PRIMULT1,"primultf"
          OPEN      PRIMULT2,"primultf"
.
          DISPLAY   *P64:24,"priitemf";          * item file
          OPEN      PRIITEM1,"priitemf"
          OPEN      PRIITEM2,"priitemf"
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
          MOVE      ZERO,CHIGHLT
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1  Insert option selected                         *
.*                        2  Change option selected                         *
.*                        3  Delete option selected                         *
.****************************************************************************
.
. ---- display option screen ----
.
OPTN0000  CALL      SELOPTN                      * select option
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9000 IF EQUAL            * exit
.
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9000  MOVE      ONE,EXIT                     * set EXIT = 1
.
OPTN9999  RETURN
+
.**************************************************************************
.*                                  CLR0000            Called by: PROC0000*
.*                            clear global variables                      *
.**************************************************************************
.
CLR0000   MOVE      SP5,MSCODE
          MOVE      SP8,EDATE
          MOVE      SP30,MSDESC
.
          CALL      REMV0000                     * clear temp file
.
CLR9999   RETURN
+
.**************************************************************************
.*                              CREA0000               Called by: ML0000  *
.*             create a new temporary file                                *
.**************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          PACK      CMDLIN1,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLIN1,TASKID               * create temporary index file
.
          OPEN      MULTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: ML0000    *
.*               close and erase the temporary file               CREA0000  *
.****************************************************************************
.
KILL0000  CLOSE     MULTEMP1                     * close file
.
          PACK      CMDLIN2,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLIN2,TASKID               * erase temp file
.
KILL9999 RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                       input identification code                        *
.**************************************************************************
.
PROC0000  CALL      CLR0000                  * Clear the record variables
.
          KEYIN     *P29:4,*DV,UNDLN5:
                    *P29:4,*V2LON,MSCODE:
                    *P29:4,*DV,MSCODE
.
          CALL      CHEK0000                     * see what was entered
          BRANCH    EXIT,PROC9000:               * nothing/exitchar entered
                         PROC4000:               * ? entered
                         PROC8000                * valid code
.
          GOTO      PROC0000                     * invalid code
.
PROC4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
PROC4200  MOVE      ONE,MFLAG
          CALL      PRIMULDS                     * list codes on file
.
PROC4500  KEYIN     *P1:24,*EL,"Multiple services code: ",*DV,UNDLN5:
                    *P25:24,*V2LON,MSCODE:
                    *P25:24,*DV,MSCODE
.
          CALL      CHEK0000                     * see what was entered
          BRANCH    EXIT,PROC8900:               * nothing/exitchar entered
                         PROC4200:               * ? entered
                         PROC7900                * valid code
.
          GOTO      PROC4500                     * invalid code
.
PROC7900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P29:4,*V2LON,MSCODE
PROC8000  MOVE      ZERO,EXIT
          GOTO      PROC9999
.
PROC8900  CALL      FRESCR00
PROC9000  MOVE      ONE,EXIT
.
PROC9999  RETURN
+
.**************************************************************************
.*                                 CHEK0000            Called by: PROC0000*
.*                     see what was input for procedure code              *
.*             EXIT - 0 = invalid code                                    *
.*                    1 = nothing/exitchar entered                        *
.*                    2 = ? entered                                       *
.*                    3 = valid code                                      *
.**************************************************************************
.
CHEK0000  ENDSET    MSCODE
          APPEND    SP5,MSCODE
          RESET     MSCODE
.
          MATCH     SP5,MSCODE                   * anything entered ?
          GOTO      CHEK7000 IF EQUAL            * no
.
          MATCH     EXITCHAR,MSCODE              * exitchar entered ?
          GOTO      CHEK7000 IF EQUAL            * yes
.
          MATCH     QUEST,MSCODE                 * ? entered ?
          GOTO      CHEK8000 IF EQUAL            * yes
.
.         Code entered so see if valid
.
          BRANCH    COPTION,CHEK9000             * insert mode
.
          PACK      KEY16,MSCODE,SP20
          CALL      RSPRMU1                      * position in file
          CALL      RKPRMU1                      * read next record
          BRANCH    OVRCD,CHEK6000               * end of file
.
          MATCH     MSCODE,PRMUCODE              * same code ?
          GOTO      CHEK9000 IF EQUAL            * yes
.
CHEK6000  DISPLAY   *P1:24,*B,"Multiple service code not on file. ";
          CALL      HITENTER
.
          MOVE      ZERO,EXIT
          GOTO      CHEK9999
.
CHEK7000  MOVE      ONE,EXIT                     * nothing input
          GOTO      CHEK9999
.
CHEK8000  MOVE      TWO,EXIT                     * ? input
          GOTO      CHEK9999
.
CHEK9000  MOVE      THREE,EXIT
.
CHEK9999  RETURN
+
.****************************************************************************
.*                               DATE0000              Called by: ML0000    *
.*                     get effective date of test                           *
.****************************************************************************
.
DATE0000  MOVE      TWENTY9,CCOL
          MOVE      FIVE,CVERT
          UNPACK    SP6,CDAY,CMON,CYEAR
          MOVE      CCC,CCENT
          CALL      KEYDATE                      * get date
          BRANCH    CQUEST,DATE4000
          BRANCH    OVRCD,DATE9500               * invalid date input
.
          CALL      VALD0000                     * validate test & date
          BRANCH    EXIT,DATE0000                * not valid
.
          GOTO      DATE9000                     * valid
.
DATE4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
.
DATE5000  CALL      GETD0000                     * display effective dates
          MOVE      TWENTY9,CCOL
          MOVE      FIVE,CVERT
          UNPACK    SP6,CDAY,CMON,CYEAR
          MOVE      CCC,CCENT
          CALL      KEYDATE                      * get date
          BRANCH    CQUEST,DATE5000
          BRANCH    OVRCD,DATE9400               * invalid date input
.
          CALL      VALD0000                     * validate test & date
          BRANCH    EXIT,DATE5000                * invalid
.
          CALL      PACDATE
          CALL      PUTSCR00
          DISPLAY   *P29:5,*V2LON,CPCDATE
          
DATE9000  MOVE      ZERO,EXIT
          GOTO      DATE9999
.
DATE9400  CALL      FRESCR00
DATE9500  MOVE      ONE,EXIT
.
DATE9999  RETURN
+
.****************************************************************************
.*                                VALD0000             Called by: DATE0000  *
.*                validate the test and date input                          *
.*   RETURNS:      EXIT   0 = invalid test and date                         *
.*                        1 = valid test and date                           *
.****************************************************************************
.
VALD0000  PACK      EDATE,CCENT,CYEAR,CMON,CDAY  * save date
.
          PACK      KEY16,MSCODE,EDATE,SP10
          CALL      RSPRMU1                      * position in file
          CALL      RKPRMU1                      * read next record
.
          BRANCH    COPTION,VALD1000:            * mustn't exist
                            VALD2000:            * must exist
                            VALD2000             * must exist
.
VALD1000  BRANCH    OVRCD,VALD9000               * end of file
          MATCH     MSCODE,PRMUCODE              * same code ?
          GOTO      VALD9000 IF NOT EQUAL        * no
.
          MATCH     EDATE,PRMUDATE               * same date ?
          GOTO      VALD9000 IF NOT EQUAL        * no

          DISPLAY   *P1:24,*EL,*B,"Code and date already on file.  ";
          CALL      HITENTER
          GOTO      VALD9500
.
VALD2000  BRANCH    OVRCD,VALD3000               * end of file
          MATCH     MSCODE,PRMUCODE              * same code ?
          GOTO      VALD3000 IF NOT EQUAL        * no
.
          MATCH     EDATE,PRMUDATE               * same date ?
          GOTO      VALD9000 IF EQUAL            * yes
.
VALD3000  DISPLAY   *P1:24,*EL,*B,"Code not on file for this date.  ";
          CALL      HITENTER
          GOTO      VALD9500
.
VALD9000  MOVE      PRMUDESC,MSDESC
          MOVE      ZERO,EXIT
          GOTO      VALD9999
.
VALD9500  MOVE      ONE,EXIT
.
VALD9999  RETURN
+
.***************************************************************************
.*                               GETD0000              Called by: DATE0000 *
.*                  display effective dates for test code                  *
.***************************************************************************
.
GETD0000  DISPLAY   *P1:7,*EF,*V2LON,*ULON,"Effective Dates for ",MSCODE
          MOVE      SEVEN,CVERT
          PACK      KEY16,MSCODE,SP20
          CALL      RSPRMU1                      * position in file
          CALL      RKPRMU1                      * read next record
          BRANCH    OVRCD,GETD8000               * no records on file
.
          GOTO      GETD2000
.
GETD1000  CALL      RKPRMU1                      * read next record
          BRANCH    OVRCD,GETD9999               * end of file
.
GETD2000  MATCH     MSCODE,PRMUCODE              * same test code ?
          GOTO      GETD9999 IF NOT EQUAL        * no
.
          COMPARE   TWENTY2,CVERT                * page full ?
          GOTO      GETD5000 IF NOT LESS         * yes
.
GETD3000  ADD       ONE,CVERT                    * increment line count
          UNPACK    PRMUDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P1:CVERT,CPCDATE            * display date
.
          PACK      KEY16,PRMUCODE,PRMUDATE,NINE3
          CALL      RSPRMU1
          GOTO      GETD1000                     * get next record
.
GETD5000  KEYIN     *P1:24,*EL,"(",*V2LON,*DV,ANSC,*HOFF,")ontinue, (":
                    *V2LON,*DV,ANSN,*HOFF,")ext page, (",*V2LON,*DV,ANSF,*HOFF:
                    ")irst page ? ":
                    *P41:24,*V2LON,ANS
.
          RESET     ANS
          REP       UPPLOW,ANS
.
          CMATCH    ANSC,ANS                     * continue ?
          GOTO      GETD9999 IF EQUAL            * yes
.
          CMATCH    ANSN,ANS                     * next ?
          GOTO      GETD7000 IF EQUAL            * yes
.
          CMATCH    ANSF,ANS                     * first
          GOTO      GETD0000 IF EQUAL            * yes
.
          BEEP
          GOTO      GETD5000
.
GETD7000  DISPLAY   *P1:8,*EF                    * clear page for next screen
          MOVE      SEVEN,CVERT
          GOTO      GETD3000
.
GETD8000  DISPLAY   *P1:24,*EL,*B,"No dates for this code on file.  ";
          CALL      HITENTER
.
GETD9999  RETURN
+
.**************************************************************************
.*                                 DESC0000            Called by: ML0000  *
.*                    get services  description                   SEL0000 *
.**************************************************************************
.
DESC0000  KEYIN     *P29:7,*DV,UNDLN30:
                    *P29:7,*V2LON,MSDESC:
                    *P29:7,*DV,MSDESC
.
          ENDSET    MSDESC
          APPEND    SP30,MSDESC
          RESET     MSDESC
.
          MATCH     SP30,MSDESC                  * anything input ?
          GOTO      DESC8000 IF EQUAL            * no
.
          MATCH     EXITCHAR,MSDESC              * exitchar entered ?
          GOTO      DESC9000 IF EQUAL            * yes
.
          GOTO      DESC9500
.
DESC8000  DISPLAY   *P1:24,*EL,*B,"Description is mandatory.  ";
          CALL      HITENTER
          GOTO      DESC0000
.
DESC9000  MOVE      ONE,EXIT
          GOTO      DESC9999
.
DESC9500  MOVE      ZERO,EXIT
.
DESC9999  RETURN
+
.****************************************************************************
.*                                   SEL0000           Called by: ML0000    *
.*                         select field to modify or post                   *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SEL0000   CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SEL8000 IF EQUAL         * Post was selected
          GOTO      SEL9000 IF LESS          * Cancel was selected
.
          BRANCH    CCITEM,SEL1000           * description
.
          BEEP
          GOTO      SEL0000
.
SEL1000   CALL      DESC0000
          BRANCH    EXIT,SEL9000             * exitchar entered
          GOTO      SEL0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SEL8000   MOVE      ZERO,EXIT                * Post was selected
          GOTO      SEL9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SEL9000   MOVE      ONE,EXIT                 * Cancel was selected
.
SEL9999   RETURN
+
.****************************************************************************
.*                              DISD0000               Called by: ML0000    *
.*                    display multiple services description                 *
.*                    (change/delete mode only)                             *
.****************************************************************************
.
DISD0000  DISPLAY   *P29:7,*V2LON,MSDESC
.
DISD9999  RETURN
+
.**************************************************************************
.*                                  SCR0000            Called by: ML0000  *
.*                         display screen format                  PROC0000*
.*                                                                INPT0000*
.*                                                                ADDI0000*
.*                                                                MODI0000*
.**************************************************************************
.  
SCR0000   DISPLAY   *P1:4,*EF,*P4:4,"Multiple Services Code : ":
                    *P12:5,"Effective From : "
.
          COMPARE   THREE,COPTION                * delete mode ?
          GOTO      SCR9999 IF EQUAL             * yes
.
          DISPLAY   *P1:7,*V2LON,ONE,*HOFF,". Description            : "
.
SCR9999   RETURN
+
.**************************************************************************
.*                                  HEAD0000           Called by: INPT0000*
.*                   display header for item input                TDIS0000*
.**************************************************************************
.
HEAD0000  DISPLAY   *P1:7,*EF,*P40:4,MSDESC:
                    *P1:8,*V2LON,*ULON,"No.",*P6:8,"Number of Tests":
                    *P23:8,SP6,"MBS Item",SP10,SP5,*P54:8,SP6,"AMA Item",SP10
.
HEAD9999  RETURN
+
.****************************************************************************
.*                                  INPT0000           Called by: ML0000    *
.*                input secondary items for this item (input mode only)     *
.****************************************************************************
.
INPT0000  CALL      HEAD0000                     * display input fields
          MOVE      EIGHT,LINENO
          MOVE      ZERO,COUNTER
.
INPT0500  ADD       ONE,COUNTER
          COMPARE   TEN5,COUNTER                 * last line ?
          GOTO      INPT9999 IF EQUAL            * yes
          ADD       ONE,LINENO                   * increment line count
          MOVE      SP9,MITEM
          MOVE      SP3,MSITEM
          PACK      MDESC,SP10,SP4
          MOVE      SP9,AITEM
          PACK      ADESC,SP10,SP4
.
.         Display record number
.
          DISPLAY   *P1:LINENO,*V2LON,COUNTER,"."
.
INPT1000  CALL      GETN0000                     * get number of tests
          BRANCH    EXIT,INPT9999:               * exitchar entered
                         INPT9999                * nothing entered
.
          MOVE      DIMNUM,KEY3
          CALL      RDTEMP1                      * number on file already ?
          BRANCH    OVRCD,INPT1200               * no
.
          DISPLAY   *P1:24,*EL,*B,"Number already input. ";
          CALL      HITENTER
          GOTO      INPT1000
.
INPT1200  MOVE      ZERO,IFLAG
          MOVE      LINENO,CVERT
          MOVE      TWENTY3,CCOL
.
          CALL      KYPRIITM                     * get MBS item         
          BRANCH    EXIT,INPT9999:               * abort
                         INPT4000:               * ? entered
                         INPT6000                * nothing entered
.
          CALL      CHKI0000                     * see if valid item ?
          BRANCH    EXIT,INPT1200                * no
.
.         Valid subitem so save variables then get AMA item number
.
          MOVE      ITEMNUMB,MITEM
          MOVE      SUBITEM,MSITEM
          MOVE      PRITDESC,MDESC
          DISPLAY   *P23:LINENO,MITEM
.
          MATCH     SP3,MSITEM                   * subitem ?
          GOTO      INPT2000 IF EQUAL            * no
.
          DISPLAY   *P32:LINENO,"(",MSITEM,")"
.
INPT2000  DISPLAY   *P38:LINENO,MDESC
          GOTO      INPT6000                     * get AMA item    
.
INPT4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
INPT4200  MOVE      ZERO,ITMFLAG
          MOVE      ONE,PATHFLAG
          CALL      PRIITMDS                     * display items on file
.
INPT4500  DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      TEN4,CCOL
          MOVE      TWENTY4,CVERT
          CALL      KYPRIITM
          BRANCH    EXIT,INPT9800:               * exitchar entered
                         INPT4200:               * ? entered
                         INPT5900                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,INPT4500                * no
.
.         Valid item
.
          CALL      PUTSCR00                     * restore screen
          MOVE      ITEMNUMB,MITEM
          MOVE      SUBITEM,MSITEM
          MOVE      PRITDESC,MDESC
          DISPLAY   *P23:LINENO,MITEM
          MATCH     SP3,MSITEM                   * subitem input ?
          GOTO      INPT5500 IF EQUAL            * no
.
          DISPLAY   *P32:LINENO,*V2LON,"(",MSITEM,")"
.
INPT5500  DISPLAY   *P38:LINENO,MDESC
          GOTO      INPT6000
.
.         Get AMA item number
.
INPT5900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P23:LINENO,*EL
INPT6000  MOVE      ONE,IFLAG
          MOVE      LINENO,CVERT
          MOVE      FIFTY4,CCOL
.
          CALL      KYPRIITM                     * get AMA item         
          BRANCH    EXIT,INPT9999:               * abort
                         INPT8000:               * ? entered
                         INPT7200                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,INPT6000                * no
          GOTO      INPT7500
.
INPT7200  MATCH     SP3,MITEM                    * MBS item input ?
          GOTO      INPT7700 IF NOT EQUAL        * yes
          GOTO      INPT9999
.
.         Valid subitem so write to temp file
.
INPT7500  MOVE      ITEMNUMB,AITEM
          MOVE      PRITDESC,ADESC
.
.         Dont display description if last entry, as next module will
.         do so anyway
.
          COMPARE   TEN4,COUNTER                 * last entry ?
          GOTO      INPT7700 IF EQUAL            * yes
          DISPLAY   *P54:LINENO,AITEM:
                    *P64:LINENO,ADESC
.
INPT7700  PACK      KEY3,DIMNUM
          MOVE      MITEM,XMITEM
          MOVE      MSITEM,XMSUBN 
          MOVE      MDESC,XMDESC
          MOVE      AITEM,XAITEM
          MOVE      ADESC,XADESC
          CALL      WRTEMP1                      * write record to temp file 
          GOTO      INPT0500                     * get next subitem
.
INPT8000  COMPARE   TEN4,COUNTER                 * see if last line
          IF        @EQUAL
             MOVE      ONE,HLEF
             MOVE      ONE,HTOP
             MOVE      "80",HRIG
             MOVE      SEVEN,HBOT
          ELSE
             MOVE      ZERO,HLEF
          ENDIF
          CALL      GETSCR00                     * save screen
INPT8200  MOVE      ZERO,ITMFLAG
          MOVE      ONE,PATHFLAG
          CALL      PRIITMDS                     * display items on file
.
INPT8500  DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      TEN4,CCOL
          MOVE      TWENTY4,CVERT
          CALL      KYPRIITM
          BRANCH    EXIT,INPT9800:               * exitchar entered
                         INPT8200:               * ? entered
                         INPT8700                * nothing entered
.
          CALL      CHKI0000                     * see if item valid
          BRANCH    EXIT,INPT8500                * no
          GOTO      INPT9000
.
.         Nothing input
.
INPT8700  CALL      PUTSCR00                     * restore screen
          GOTO      INPT7200
.
.         Valid item input
.
INPT9000  CALL      PUTSCR00                     * restore screen
          GOTO      INPT7500
.
INPT9800  CALL      FRESCR00
.
INPT9999  RETURN
+
.****************************************************************************
.*                               CHKI0000              Called by: INPT0000  *
.*                     see if valid item entered                  MODI0000  *
.*   RETURNS:      EXIT    0 = valid item                         ADDI0000  *
.*                         1 = not valid item                               *
.****************************************************************************
.
CHKI0000  PACK      KEY22,IFLAG,ITEMNUMB,SUBITEM,NINE8
          CALL      RSPRIT1                      * position in file
CHKI0500  CALL      RPPRIT1                      * read previous record
          BRANCH    OVRCD,CHKI1000               * end of file
.
          COMPARE   IFLAG,PRITFLAG               * same item type ?
          GOTO      CHKI1000 IF NOT EQUAL        * no
.
          MATCH     ITEMNUMB,PRITITMN            * same item number ?
          GOTO      CHKI1000 IF NOT EQUAL        * no
.
          MATCH     SUBITEM,PRITSUBN             * same subitem number ?
          GOTO      CHKI1000 IF NOT EQUAL        * no
.
          MATCH     PRITDAT1,EDATE               * item date > mult. serv date ?
          GOTO      CHKI0500 IF LESS             * yes
.
          GOTO      CHKI2000                     * yes
.
CHKI1000  DISPLAY   *P1:24,*EL,*B,"Item not on file. ";
          CALL      HITENTER
          GOTO      CHKI9500
.
CHKI2000  COMPARE   ZERO,PRITPATH                * pathology item ?
          GOTO      CHKI9000 IF EQUAL            * yes
.
          DISPLAY   *P1:24,*EL,*B,"Not a pathology item. ";
          CALL      HITENTER
          GOTO      CHKI9500
.
CHKI9000  MOVE      ZERO,EXIT
          GOTO      CHKI9999
.
CHKI9500  MOVE      ONE,EXIT
.
CHKI9999  RETURN
+
.****************************************************************************
.*                                  GETN0000           Called by: MODI0000  *
.*                   get the number of procedures                 ADDI0000  *
.*                                                                INPT0000  *
.****************************************************************************
.
GETN0000  MOVE      SP3,DIMNUM
          KEYIN     *P11:LINENO,*DV,UNDLN3:
                    *P11:LINENO,*V2LON,DIMNUM 
.
          TYPE      DIMNUM                       * number entered ?
          GOTO      GETN1000 IF EQUAL            * yes
.
          ENDSET    DIMNUM
          APPEND    SP3,DIMNUM
          RESET     DIMNUM
.
          MATCH     SP3,DIMNUM                   * anything entered ?
          GOTO      GETN8500 IF EQUAL            * no
.
          MATCH     EXITCHAR,DIMNUM              * exitchar entered ?
          GOTO      GETN9000 IF EQUAL            * yes
.
          BEEP
          GOTO      GETN0000
.
GETN1000  MOVE      DIMNUM,TEMPNUM
          COMPARE   ONE,TEMPNUM                  * number < or = zero
          GOTO      GETN9500 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,*B,"Number of tests must be greater then zero. ";
          CALL      HITENTER
          GOTO      GETN0000
.
GETN8500  MOVE      TWO,EXIT
          GOTO      GETN9999
.
GETN9000  MOVE      ONE,EXIT
          GOTO      GETN9999
.
GETN9500  DISPLAY   *P11:LINENO,TEMPNUM
          MOVE      TEMPNUM,DIMNUM
          MOVE      ZERO,EXIT
.
GETN9999  RETURN
+
.****************************************************************************
.*                                   TDIS0000          Called by: ML0000    *
.*                display records from temporary file             INPT0000  *
.*                                                                ADDI0000  *
.*                                                                MODI0000  *
.*                                                                DELI0000  *
.****************************************************************************
.
TDIS0000  CALL      HEAD0000
          PACK      KEY3,SP3                     * position at start of file 
          DISPLAY   *P1:9,*EF
          MOVE      ZERO,COUNTER
          MOVE      EIGHT,LINENO
          CALL      RSTEMP1
TDIS0500  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,TDIS9999               * no more records on file
.
          ADD       ONE,COUNTER
          ADD       ONE,LINENO
          COMPARE   TWENTY3,LINENO               * bottom line ?
          GOTO      TDIS9999 IF NOT LESS         * yes
.
          DISPLAY   *P1:LINENO,*V2LON,COUNTER,*HOFF,".",*P11:LINENO:
                    XNUMB,*P23:LINENO,XMITEM 
          MATCH     SP3,XMSUBN                   * subitem number ?
          GOTO      TDIS2000 IF EQUAL            * no
.
          DISPLAY   *P32:LINENO,"(",XMSUBN,")"
.
TDIS2000  DISPLAY   *P38:LINENO,XMDESC,*P54:LINENO,XAITEM,*HOFF:
                    *P64:LINENO,XADESC
          GOTO      TDIS0500
.
TDIS9999  RETURN
+
.****************************************************************************
.*                                  READ0000           Called by: ML0000    *
.*           read in the matching records from the Multiple Services file   *
.****************************************************************************
.
READ0000  PACK      KEY16,MSCODE,EDATE,SP3
          CALL      RSPRMU1                      * position in file            
READ1000  CALL      RKPRMU1                      * read next record
          BRANCH    OVRCD,READ9999               * no more records
.
          MATCH     MSCODE,PRMUCODE              * same multiple service code ?
          GOTO      READ9999 IF NOT EQUAL        * no
.
          MATCH     EDATE,PRMUDATE               * same effective date ?
          GOTO      READ9999 IF NOT EQUAL        * no
.
.         Valid group record found, so write it to the temp file
.
          PACK      KEY3,PRMUNUMB
          MOVE      PRMUITMN,XMITEM
          MOVE      PRMUSUBN,XMSUBN
          MOVE      PRMUAMAN,XAITEM
          PACK      XMDESC,SP10,SP4
          PACK      XADESC,SP10,SP4
.
          MATCH     SP9,PRMUITMN                 * MBS item present ?
          GOTO      READ5000 IF EQUAL            * no
.
.         Get the MBS item description from the item file
.
          MOVE      DMESS,XMDESC
          MOVE      ZERO,IFLAG
          PACK      KEY22,IFLAG,PRMUITMN,PRMUSUBN,NINE8
          CALL      RSPRIT1                      * position in file
READ4000  CALL      RPPRIT1                      * read previous record
          BRANCH    OVRCD,READ5000
.
          COMPARE   IFLAG,PRITFLAG               * same item type ?
          GOTO      READ5000 IF NOT EQUAL        * no
.
          MATCH     PRMUITMN,PRITITMN            * same item number ?
          GOTO      READ5000 IF NOT EQUAL        * no
.
          MATCH     PRMUSUBN,PRITSUBN            * same subitem ?
          GOTO      READ5000 IF NOT EQUAL        * no
.
          MATCH     PRITDAT1,PRMUDATE            * item date > mul. serv. date ?
          GOTO      READ4000 IF LESS             * yes
.
          MOVE      PRITDESC,XMDESC
.
READ5000  MATCH     SP9,PRMUAMAN                 * AMA item present ?
          GOTO      READ6000 IF EQUAL            * no
.
.         Get the AMA item description from the item file
.
          MOVE      DMESS,XADESC
          MOVE      ONE,IFLAG
          PACK      KEY22,IFLAG,PRMUAMAN,SP3,NINE8
          CALL      RSPRIT1                      * position in file
READ5500  CALL      RPPRIT1                      * read previous record
          BRANCH    OVRCD,READ6000
.
          COMPARE   IFLAG,PRITFLAG               * same item flag ?
          GOTO      READ6000 IF NOT EQUAL        * no
.
          MATCH     PRMUAMAN,PRITITMN            * same item number ?
          GOTO      READ6000 IF NOT EQUAL        * no
.
          MATCH     PRITDAT1,PRMUDATE            * item date > mul. serv. date ?
          GOTO      READ5500 IF LESS             * yes
.
          MOVE      PRITDESC,XADESC
.
READ6000  CALL      WRTEMP1                      * write record to temp file
          GOTO      READ1000                     * get next record
.
READ9999  RETURN
+
.****************************************************************************
.*                                  EDIT0000           Called by: ML0000    *
.*                    see if there are changes to temp file records         *
.*                    prior to posting                                      *
.****************************************************************************
.
EDIT0000  MOVE      SP2,CHOICE
          KEYIN     *P1:24,"Select Item, (",*V2LON:
                    *DV,ANSA,*HOFF,")dd, (",*V2LON,*DV,ANSD,*HOFF:
                    ")elete, (",*V2LON,*DV,ANSC,*HOFF,")ancel, (":
                    *V2LON,*DV,ANSP,*HOFF,")ost : ",*DV,UNDLN2:
                    *P50:24,*V2LON,CHOICE:
                    *P50:24,*DV,CHOICE
.
          TYPE      CHOICE
          GOTO      EDIT2000 IF EQUAL       * Number entered
          CALL      PADC0000                * pad with spaces
.
          MATCH     ANSA,CHOICE
          GOTO      EDIT7000 IF EQUAL       * add record selected
.
          MATCH     ANSD,CHOICE             * delete record selected
          GOTO      EDIT7500 IF EQUAL
.
          MATCH     ANSC,CHOICE             * Cancel
          GOTO      EDIT9000 IF EQUAL
.
          MATCH     ANSP,CHOICE
          GOTO      EDIT8000 IF EQUAL       * Post records            
.
          BEEP                              * Invalid entry
          GOTO      EDIT0000
.
.         See if a valid number was entered
.
EDIT2000  MOVE      CHOICE,TNUMB
.
          COMPARE   ZERO,TNUMB 
          GOTO      EDIT0000 IF LESS
          GOTO      EDIT4000 IF EQUAL
.
          COMPARE   TNUMB,COUNTER
          GOTO      EDIT6000 IF NOT LESS
.
EDIT4000  DISPLAY   *P1:24,*EL,*B,"You must select a number displayed on ":
                    "the screen. ";
          CALL      HITENTER
          GOTO      EDIT0000
.
EDIT6000  CALL      MODI0000                     * Modify item
          BRANCH    EXIT,EDIT9000                * exitchar
          GOTO      EDIT0000
.
EDIT7000  CALL      ADDI0000                     * Add item
          BRANCH    EXIT,EDIT9000                * exitchar
          GOTO      EDIT0000
.
EDIT7500  CALL      DELI0000                     * Delete item
          GOTO      EDIT0000
.
EDIT8000  MOVE      ZERO,EXIT                    * Post
          GOTO      EDIT9999
.
EDIT9000  MOVE      ONE,EXIT                     * Cancel
.
EDIT9999  RETURN
+
.****************************************************************************
.*                                  PADC0000           Called by: EDIT0000  *
.*                        Pad choice with blanks                  DELI0000  *
.****************************************************************************
.
PADC0000  ENDSET    CHOICE
          APPEND    SP3,CHOICE
          RESET     CHOICE
          REP       UPPLOW,CHOICE
.
PADC9999  RETURN
+
.****************************************************************************
.*                                  MODI0000           Called by: EDIT0000  *
.*                 modify a record in the temporary file                    *
.****************************************************************************
.
MODI0000  MOVE      ZERO,FORM2
          PACK      KEY3,SP3
          CALL      RSTEMP1                      * position at start of file
MODI1500  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,MODI9000               * no more records 
.
          ADD       ONE,FORM2
          COMPARE   FORM2,TNUMB                  * record for modifying ?
          GOTO      MODI1500 IF NOT EQUAL        * no
.
.         Save current items prior to change
.
          MOVE      DXNUMB,TMPNUMB
          MOVE      XMITEM,TMPMBS
          MOVE      XMSUBN,TMPSUB
          MOVE      XAITEM,TMPAMA
          MOVE      XMDESC,TMPMDESC
          MOVE      XADESC,TMPADESC
.
          MOVE      TNUMB,LINENO                 * set up row
.
          ADD       EIGHT,LINENO
          DISPLAY   *PTEN1:LINENO,*EL            * clear previous item & desc.
.
.         Get the number of procedures
.
MODI2000  CALL      GETN0000                     * get number of tests
          BRANCH    EXIT,MODI9700:               * exitchar entered
                         MODI9500                * nothing entered 
.
          MATCH     DIMNUM,TMPNUMB               * same number as original
          GOTO      MODI2500 IF EQUAL
.
          PACK      KEY3,DIMNUM
          CALL      RDTEMP1                      * number on file already ?
          BRANCH    OVRCD,MODI2500               * no
.
          DISPLAY   *P1:24,*EL,*B,"Number already input. ";
          CALL      HITENTER
          GOTO      MODI2000
.
.         Get the MBS item number
.
MODI2500  MOVE      ZERO,IFLAG                   * initialise the variables
          MOVE      SP9,MITEM
          MOVE      SP3,MSITEM
          MOVE      SP9,AITEM
          PACK      MDESC,SP10,SP4
          PACK      ADESC,SP10,SP4
          MOVE      LINENO,CVERT
          MOVE      TWENTY3,CCOL
.
          CALL      KYPRIITM                     * input item number
          BRANCH    EXIT,MODI9700:               * exitchar entered
                         MODI4000:               * ? entered
                         MODI6000                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,MODI2500                * no
.
          MOVE      ITEMNUMB,MITEM
          MOVE      SUBITEM,MSITEM
          MOVE      PRITDESC,MDESC
          DISPLAY   *P23:LINENO,MITEM
.
          MATCH     SP3,MSITEM                   * subitem ?
          GOTO      MODI3000 IF EQUAL            * no
.
          DISPLAY   *P38:LINENO,"(",MSITEM,")"
.
MODI3000  DISPLAY   *P38:LINENO,MDESC
          GOTO      MODI6000
.
MODI4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
MODI4200  MOVE      ONE,ITMFLAG
          MOVE      ONE,PATHFLAG
          CALL      PRIITMDS                     * display items on file
.
MODI4500  DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      TEN4,CCOL
          MOVE      TWENTY4,CVERT
          CALL      KYPRIITM
          BRANCH    EXIT,MODI9600:               * exitchar entered
                         MODI4200:               * ? entered
                         MODI5900                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,MODI4500                * no
.
          CALL      PUTSCR00
.
          MOVE      ITEMNUMB,MITEM
          MOVE      SUBITEM,MSITEM
          MOVE      PRITDESC,MDESC
.
          DISPLAY   *P23:LINENO,MITEM
          MATCH     SP3,MSITEM
          GOTO      MODI5500 IF EQUAL
.
          DISPLAY   *P38:LINENO,"(",MSITEM,")"
.
MODI5500  DISPLAY   *P38:LINENO,MDESC,*P54:LINENO,*V2LON,AITEM,*HOFF:
                    *P64:LINENO,ADESC
.
          GOTO      MODI6000
.
.         Get AMA item number
.
MODI5900  CALL      PUTSCR00
          DISPLAY   *P23:LINENO,*EL              * clear previous item & desc.
MODI6000  MOVE      ONE,IFLAG
          MOVE      LINENO,CVERT
          MOVE      FIFTY4,CCOL
.
          CALL      KYPRIITM                     * input item
          BRANCH    EXIT,MODI9700:               * exitchar entered
                         MODI8000:               * ? entered
                         MODI6800                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,MODI6000                * no
          GOTO      MODI7000
.
.         Nothing input for AMA or MBS item so ignore entry                    
.
MODI6800  MATCH     SP9,MITEM                    * MBS input ?
          GOTO      MODI7200 IF NOT EQUAL        * yes
          GOTO      MODI9500
.
MODI7000  MOVE      ITEMNUMB,AITEM
          MOVE      PRITDESC,ADESC
.
.         See if the entry is still the same
.
MODI7100  MATCH     TMPNUMB,DIMNUM               * same no. of procedures ?
          GOTO      MODI7200 IF NOT EQUAL        * no
.
          MATCH     TMPMBS,MITEM                 * same MBS item number ?
          GOTO      MODI7200 IF NOT EQUAL        * no
.
          MATCH     TMPSUB,MSITEM                * same MBS subitem number ?
          GOTO      MODI7200 IF NOT EQUAL        * no
.
          MATCH     TMPAMA,AITEM                 * same AMA item number ?
          GOTO      MODI7200 IF NOT EQUAL        * no
.
          GOTO      MODI9500                     * same entry
.
.         Delete the original entry and write the new
.
MODI7200  PACK      KEY3,TMPNUMB
          CALL      DETEMP1
          PACK      KEY3,DIMNUM
          MOVE      MITEM,XMITEM
          MOVE      MSITEM,XMSUBN
          MOVE      MDESC,XMDESC
          MOVE      AITEM,XAITEM
          MOVE      ADESC,XADESC
          CALL      WRTEMP1                      * write record to temp file 
          GOTO      MODI9500
.
MODI8000  MOVE      ONE,HLEF
          MOVE      ONE,HTOP
          MOVE      "80",HRIG
          MOVE      SEVEN,HBOT
          CALL      GETSCR00                     * save screen
MODI8200  MOVE      ONE,ITMFLAG
          MOVE      ONE,PATHFLAG
          CALL      PRIITMDS                     * display items on file
.
MODI8500  DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      ONE,IFLAG
          MOVE      TEN4,CCOL
          MOVE      TWENTY4,CVERT
          CALL      KYPRIITM
          BRANCH    EXIT,MODI9600:               * exitchar entered
                         MODI8200:               * ? entered
                         MODI9000                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,MODI8500
          GOTO      MODI9200
.
.         Nothing input
.
MODI9000  CALL      PUTSCR00                     * restore screen
          MOVE      SP9,AITEM
          MOVE      SP30,ADESC
          GOTO      MODI7100
.
.         Valid item input
.
MODI9200  CALL      PUTSCR00                     * restore screen
          GOTO      MODI7000
.
MODI9500  CALL      TDIS0000
          MOVE      ZERO,EXIT
          GOTO      MODI9999
.
MODI9600  CALL      FRESCR00
MODI9700  MOVE      ONE,EXIT
.
MODI9999  RETURN
+
.****************************************************************************
.*                                  ADDI0000           Called by: EDIT0000  *
.*                 add a record to the temporary file                       *
.****************************************************************************
.
ADDI0000  COMPARE   COUNTER,TEN3                 * maximum items already ?
          GOTO      ADDI9100 IF LESS             * yes
.
          ADD       ONE,COUNTER                  * increment record counter
          MOVE      COUNTER,LINENO
.
          ADD       EIGHT,LINENO
          MOVE      SP9,MITEM
          MOVE      SP3,MSITEM
          PACK      MDESC,SP10,SP4
          MOVE      SP9,AITEM
          PACK      ADESC,SP10,SP4
.
.         Display record number
.
          DISPLAY   *P1:LINENO,*V2LON,COUNTER,"."
.
ADDI1000  CALL      GETN0000                     * get number of tests
          BRANCH    EXIT,ADDI9700:               * exitchar entered
                         ADDI9400                * nothing entered
.
          PACK      KEY3,DIMNUM
          CALL      RDTEMP1                      * number on file already ?
          BRANCH    OVRCD,ADDI1500               * no
.
          DISPLAY   *P1:24,*EL,*B,"Number already input. ";
          CALL      HITENTER
          GOTO      ADDI1000
.
ADDI1500  MOVE      ZERO,IFLAG
          MOVE      LINENO,CVERT
          MOVE      TWENTY3,CCOL
.
          CALL      KYPRIITM                     * input item
          BRANCH    EXIT,ADDI9700:               * exitchar entered
                         ADDI4000:               * ? entered
                         ADDI6000                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,ADDI1500
.
          MOVE      ITEMNUMB,MITEM
          MOVE      SUBITEM,MSITEM
          MOVE      PRITDESC,MDESC
          DISPLAY   *P23:LINENO,MITEM
          MATCH     SP3,MSITEM
          GOTO      ADDI3000 IF EQUAL            * no
.
          DISPLAY   *P33:LINENO,"(",MSITEM,")"
.
ADDI3000  DISPLAY   *P38:LINENO,MDESC
          GOTO      ADDI6000
.
ADDI4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
ADDI4200  MOVE      ONE,ITMFLAG
          MOVE      ONE,PATHFLAG
          CALL      PRIITMDS                     * display items on file
.
ADDI4500  DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      ZERO,IFLAG
          MOVE      TEN4,CCOL
          MOVE      TWENTY4,CVERT
          CALL      KYPRIITM
          BRANCH    EXIT,ADDI9600:               * exitchar entered
                         ADDI4200:               * ? entered
                         ADDI5000                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,ADDI4500                * no
.
ADDI5000  CALL      PUTSCR00                     * restore screen
.
          MOVE      ITEMNUMB,MITEM
          MOVE      SUBITEM,MSITEM
.
          DISPLAY   *P1:LINENO,*V2LON,COUNTER,*HOFF,".",*P11:LINENO:
                    TEMPNUM,*P23:LINENO,MITEM
          MATCH     SP3,MSITEM
          GOTO      ADDI5500 IF EQUAL
.
          DISPLAY   *P38:LINENO,"(",MSITEM,")"
.
ADDI5500  DISPLAY   *P38:LINENO,MDESC,*P54:LINENO,AITEM:
                    *P64:LINENO,ADESC
.
ADDI6000  MOVE      ONE,IFLAG
          MOVE      LINENO,CVERT
          MOVE      FIFTY4,CCOL
.
          CALL      KYPRIITM                     * input item
          BRANCH    EXIT,ADDI9700:               * exitchar entered
                         ADDI8000:               * ? entered
                         ADDI6800                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,ADDI6000                * no
.
          GOTO      ADDI7000 
.
.         Nothing input for AMA or MBS item so ignore entry                    
.
ADDI6800  MATCH     SP9,MITEM                    * MBS input ?
          GOTO      ADDI7200 IF NOT EQUAL        * yes
          GOTO      ADDI9400
.
ADDI7000  MOVE      ITEMNUMB,AITEM
          MOVE      PRITDESC,ADESC
.
ADDI7200  PACK      KEY3,DIMNUM
          MOVE      MITEM,XMITEM
          MOVE      MSITEM,XMSUBN
          MOVE      MDESC,XMDESC
          MOVE      AITEM,XAITEM
          MOVE      ADESC,XADESC
          CALL      WRTEMP1                      * write record to temp file 
          GOTO      ADDI9400
.
ADDI8000  MOVE      ONE,HLEF
          MOVE      ONE,HTOP
          MOVE      "80",HRIG
          MOVE      SEVEN,HBOT
          CALL      GETSCR00                     * save screen
ADDI8200  MOVE      ONE,ITMFLAG
          MOVE      ONE,PATHFLAG
          CALL      PRIITMDS                     * display items on file
.
ADDI8500  DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      ONE,IFLAG
          MOVE      TEN4,CCOL
          MOVE      TWENTY4,CVERT
          CALL      KYPRIITM
          BRANCH    EXIT,ADDI9600:               * exitchar entered
                         ADDI8200:               * ? entered
                         ADDI8700                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,ADDI8500                * no
          GOTO      ADDI9000 
.
.         Nothing input
.
ADDI8700  CALL      PUTSCR00                     * restore screen
          MOVE      SP9,AITEM
          MOVE      SP30,ADESC
          GOTO      ADDI7200
.
.         Valid item input
.
ADDI9000  CALL      PUTSCR00                     * restore screen
          GOTO      ADDI7000
.
ADDI9100  DISPLAY   *P1:24,*EL,*B,"No more items can be added. ";
          CALL      HITENTER
          GOTO      ADDI9500
.
ADDI9400  CALL      TDIS0000
ADDI9500  MOVE      ZERO,EXIT
          GOTO      ADDI9999
.
ADDI9600  CALL      FRESCR00
ADDI9700  MOVE      ONE,EXIT
.
ADDI9999  RETURN
+
.****************************************************************************
.*                                  DELI0000           Called by: EDIT0000  *
.*                  delete a record from the temporary file                 *
.****************************************************************************
.
DELI0000  KEYIN     *P1:24,*EL,"Line Number: ",*DV,UNDLN2:
                    *P14:24,*V2LON,CHOICE:
                    *P14:24,*DV,CHOICE
.
          TYPE      CHOICE                       * number entered ?
          GOTO      DELI1000 IF EQUAL            * yes
.
          CALL      PADC0000
          MATCH     SP2,CHOICE                   * anything entered ?
          GOTO      DELI9500 IF EQUAL            * no
.
          BEEP                                   * invalid entry
          GOTO      DELI0000
.
DELI1000  MOVE      CHOICE,TNUMB
          COMPARE   TNUMB,COUNTER                * number displayed ?
          GOTO      DELI7000 IF LESS             * no 
.
          COMPARE   ONE,TNUMB                    * zero or less ?
          GOTO      DELI7000 IF LESS             * yes
.
          MOVE      ZERO,FORM2
          PACK      KEY3,SP3
          CALL      RSTEMP1                      * position at start of file
DELI1500  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,DELI9500               * no more records
.
          ADD       ONE,FORM2
          COMPARE   FORM2,TNUMB
          GOTO      DELI1500 IF NOT EQUAL
.
.         Highlight selection
.
          MOVE      TNUMB,CVERT
          ADD       EIGHT,CVERT
          DISPLAY   *P1:CVERT,*HON,TNUMB,*HOFF,"." 
          MOVE      FIVE,CCOL
          GOTO      DELI2500 
.
.         Verify deletion
.
DELI2500  CALL      DELQST
          BRANCH    CEXIT,DELI3000:              * yes
                          DELI4000:              * no
                          DELI9500               * cancel
.
DELI3000  PACK      KEY3,DXNUMB
          CALL      DETEMP1                      * delete record
          GOTO      DELI9500
.
.         Remove highlighted selection
.
DELI4000  MOVE      TNUMB,CVERT
          ADD       EIGHT,CVERT
          DISPLAY   *P1:CVERT,*V2LON,TNUMB,*HOFF,"."
          GOTO      DELI0000
.
.         Invalid number selected
.
DELI7000  DISPLAY   *P1:24,*EL,*B,"Line number not valid. ";
          CALL      HITENTER
          GOTO      DELI0000
.
DELI9500  CALL      TDIS0000                     * redisplay screen
.
.
DELI9999  RETURN
+
.**************************************************************************
.*                              WRT0000                Called by: ML0000  *
.*                          write a new record                            *
.**************************************************************************
.
WRT0000   DISPLAY   *P50:24,*V2LON,"* Record inserted *";
          PACK      KEY3,SP3
          CALL      RSTEMP1                      * position at start of file
WRT1000   CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,WRT9999                * no more records
.
.         Write each record in the temp file to the multiple item file
.
          PACK      KEY16,MSCODE,EDATE,DXNUMB
          MOVE      MSDESC,PRMUDESC
          MOVE      XMITEM,PRMUITMN
          MOVE      XMSUBN,PRMUSUBN
          MOVE      XAITEM,PRMUAMAN
          MOVE      SP4,PRMUSPAR
          CALL      WRPRMU1                      * write record to file
          GOTO      WRT1000                      * get next record
.
WRT9999   RETURN
+
.***************************************************************************
.*                               UPD0000               Called by: ML0000   *
.*                      update record and insert key if part of            *
.*                      key has been modified.                             *
.***************************************************************************
.
UPD0000   DISPLAY   *P50:24,*V2LON,"* Record changed *";
.
.         Delete the original entries in the file, then re-write the temp
.         file records to the multiple services file
.
UPD0500   PACK      KEY16,MSCODE,EDATE,SP3
          CALL      RSPRMU1                      * position in file
          CALL      RKPRMU1                      * read next record
          BRANCH    OVRCD,UPD1000                * no more records
.
          MATCH     MSCODE,PRMUCODE              * same multiple service code ?
          GOTO      UPD1000 IF NOT EQUAL         * no - finish
.
          MATCH     EDATE,PRMUDATE               * same date ?
          GOTO      UPD1000 IF NOT EQUAL         * no - finish
.
.         Record found so delete it
.
          PACK      KEY16,PRMUCODE,PRMUDATE,PRMUNUMB
          CALL      DEPRMU1                      * delete record
          GOTO      UPD0500                      * get next record
.
UPD1000   PACK      KEY3,SP3
          CALL      RSTEMP1                      * position at start of file
UPD2000   CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,UPD9999                * no more records
.
          PACK      KEY16,MSCODE,EDATE,DXNUMB
          MOVE      MSDESC,PRMUDESC
          MOVE      XMITEM,PRMUITMN
          MOVE      XMSUBN,PRMUSUBN
          MOVE      XAITEM,PRMUAMAN
          MOVE      SP4,PRMUSPAR
.
          CALL      WRPRMU1                      * write record
          GOTO      UPD2000                      * get next record
.
UPD9999   RETURN
+
.****************************************************************************
.*                              DEL0000                Called by: ML0000    *
.*                         delete an existing record                        *
.****************************************************************************
.
DEL0000   DISPLAY   *P50:24,*V2LON,"* Record Deleted *";
.
DEL0500   PACK      KEY16,MSCODE,EDATE,SP3
          CALL      RSPRMU1                      * position in file
          CALL      RKPRMU1                      * read next record
          BRANCH    OVRCD,DEL9999                * no more records
.
          MATCH     MSCODE,PRMUCODE              * same multiple service code ?
          GOTO      DEL9999 IF NOT EQUAL         * no - finish
.
          MATCH     EDATE,PRMUDATE               * same date ?
          GOTO      DEL9999 IF NOT EQUAL         * no - finish
.
.         Record found so delete it
.
          PACK      KEY16,PRMUCODE,PRMUDATE,PRMUNUMB
          CALL      DEPRMU1                      * delete record
          GOTO      DEL0500                      * get next record
.
DEL9999   RETURN
+
.**************************************************************************
.*                             REMV0000                Called by: CLR0000 *
.*                delete records from temporary file                      *
.**************************************************************************
.
REMV0000  PACK      KEY3,SP3
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,REMV9999               * no more records
.
          PACK      KEY3,DXNUMB
          CALL      DETEMP1                      * delete record
.
          GOTO      REMV0000                     * get next record
.
REMV9999  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RSTEMP1   READ      MULTEMP1,KEY3;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      MULTEMP1,KEY3;DXNUMB,XMITEM,XMSUBN,XMDESC,XAITEM,XADESC
          GOTO      OVERCOND IF OVER
          MOVE      DXNUMB,XNUMB
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    MULTEMP1;DXNUMB,XMITEM,XMSUBN,XMDESC,XAITEM,XADESC
          GOTO      OVERCOND IF OVER
          MOVE      DXNUMB,XNUMB
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    MULTEMP1;DXNUMB,XMITEM,XMSUBN,XMDESC,XAITEM,XADESC
          GOTO      OVERCOND IF OVER
          MOVE      DXNUMB,XNUMB
          RETURN
.
WRTEMP1   WRITE     MULTEMP1,KEY3;KEY3,XMITEM,XMSUBN,XMDESC,XAITEM:
                    XADESC
          RETURN
.
UPTEMP1   UPDATE    MULTEMP1;DXNUMB,XMITEM,XMSUBN,XMDESC,XAITEM,XADESC
          RETURN
.
DETEMP1   DELETE    MULTEMP1,KEY3
          RETURN
.
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       KYPRIITM
          INC       PRIITMDS
          INC       PRIMULDS
.
          INC       PRIMULIO/INC                 * multiple services file
          INC       PRIITMIO/INC                 * item file
