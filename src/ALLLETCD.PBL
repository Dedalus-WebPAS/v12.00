.******************************************************************************
.* System         : Referral Management/Allied Health Letters                 *
.*                                                                            *
.* Include Name   : ALLLETCD.PBL                                              *
.*                                                                            *
.* Function       : Standard code for printing Referral letters.              *
.*                                                                            *
.* Modifications  :                                                           *
.*                                                                            *
.*       ***** Programmer Note **************                                 *
.*       Remember that letter and stationery template variables are both      *
.*       populated using GETVAR00, so any changes need to apply to both.      *
.*       If you add a letter variable, be sure to create an equivalent        *
.*       stationery template variable for type 44.                            *
.*       Likewise, if you add a new stationery template variable for type 44, *
.*       then you need to create a new letter variable.                       *
.*       When new variables are added, make sure that you update the value of *
.*       LCNOVARS in ALLLETDF to represent the total number of variables and  *
.*       also add an LC..... definition for each variable added, in the       *
.*       correct numeric sequence.                                            *
.*                                                                            *
.*----------------------------------------------------------------------------*
.* V12.00.01 05/09/2025  Thanh T          TSK 0949457                         *
.*           Added LXPUSRAD-LXPUSRIL fields                                   *
.*----------------------------------------------------------------------------*
.*        V11.04.01 17/07/2024  Thanh T        TSK 0939648                    *
.*                  Changed GETVAR00 to get %secraddr to %statuscz fields     *
.*        V11.02.04 14/04/2022  Thanh T        TSK 0903453                    *
.*                  Changed GETVAR00 to get variable 491 to 496  for          *
.*                  Identifying gender/pronoun and free text fields           *
.*        V11.02.03 08/04/2022  Jacob Jackson  TSK 0864505                    *
.*                  Rename VARIABLE to VARSTRNG                               *
.*        V11.02.02 23/03/2022  Sunny          TSK 0914741                    *
.*                  Added LXRFFHOS, LXRFTHOS and LXALHCPC                     *
.*        V11.02.01 24/01/2022  Jacob Jackson  TSK 0864505                    *
.*                  Added preferred name option fields -                      *
.*                  PMPXPFSN,PMPXPFGN,PSNAME,PGNAME,PTMASNAM                  *
.*        V11.01.01 28/06/2021  Sunny          TSK 0893817                    *
.*                  Added Var 479 - 482                                       *
.*        V11.00.03 17/11/2020  Thanh T        TSK 0878747                    *
.*                  Changed GETVAR00 to add Var 478 - multiple birth details  *
.*        V11.00.02 07/04/2020  Thanh T        TSK 0879163                    *
.*                  Changed GETVAR00 for Sex category.                        *
.*        V11.00.01 23/03/2020 Peter Vela     TSK 0889143                     *
.*                  Fixed ALLLET IO calls                                     *
.*----------------------------------------------------------------------------*
.*        V10.15.01 15/10/2019 Ken Bell       TSK 0875392                     *
.*                  Exclude Claim Number if Claim is WC cancelled             *
.*        V10.10.01 22/03/2017 Richa Phogat   TSK 0832066                     *
.*                  Changed DVA Card Number and DVA Card colour to be         *
.*                  collected from PMCDCNUM.PMSCCDFD and PMCDDVAC.PMSPX2FD    *
.*                  instead of PREPAT.PMIMA1FD and PMPXDVAC.PMIMA1FD          *
.*        V10.09.01 07/12/2016  Jill Parkinson TSK 0822329                    *
.*                  Added var 475 - ACC Purchase order number                 
.*        V10.08.02 01/07/2016  Peter Vela       TSK 0821692                  *
.*                  Added var 473 - 474                                       
.*        V10.08.01 31/05/2016  Nicole Torrisi   TSK 0816184                  *
.*                  Added var 443 - 472                                       *
.*        V10.05.01 10/10/2014  Ania P           CAR 306908                   *
.*                  Added var 442                                             *
.*        V10.04.01 18/02/2014  Don Nguyen       CAR 291879                   *
.*                  Added variable 441 - (LXIHINUM) IHI Number                *
.*        V10.03.09 27/11/2013  Don Nguyen       CAR 293872                   *
.*                  Added variables 426-440.                                  *
.*        V10.03.08 11/10/2013  Steve Armstrong  CAR 289244                   *
.*                  Added variables 418-425.                                  *
.*        V10.03.07 30/08/2013  Steve Armstrong  CAR 289244                   *
.*                  Added variables 415-417.  These were originally added as  *
.*                  variables 374-376 by Ebon (V9.10.02), but appear to have  *
.*                  been overwritten by Jay (V9.11.01).                       *
.*        V10.03.06 18/07/2013  Don Nguyen      CAR 288603                    *
.*                  Added variable 414 (CCODE of 'XXX') - Patient Type code   *
.*        V10.03.05 10/07/2013  Don Nguyen      CAR 288152                    *
.*                  Ouput variable LXRERHCP instead of DOCFNAME for var 200   *
.*        V10.03.04 22/05/2013  Davin           CAR 284814                    *
.*                  Added PMI GP/Practice fields 391-413 (LXPMTITL - LXPGPFAX)*
.*        V10.03.03 19/12/2012  Don Nguyen      CAR 278200                    *
.*                  Added new variable ALREPURC - Expected Purchaser          *
.*        V10.03.02 19/11/2012 Saroeun Soeur    CAR 267061                    *
.*                  FORMP000 - remove extra line on print start               *
.*        V10.03.01 15/08/2012 Ebon Clements    CAR 261277                    *
.*                  Assigned new cat code to ALREUC32                         *
.*        V10.02.02 09/09/2011  Saroeun Soeur   CAR 245585                    *
.*                  Added new ALRESREJ - reject reason                        *
.*        V10.02.01 15/07/2011  Saroeun Soeur   CAR 245585                    *
.*                  Added new variables LXLNPNAM,LXLNPAD1,LXLNPAD2,LXLNPAD3   *
.*                  LXLNPAD4,LXLNPPOS,LXLNPPHN,LXLNPFAX                       *
.*        V10.01.01 26/10/2010  Jill Parkinson  CAR 233088                    *
.*                  Changed DPPENNO to PPENNO                                 *
.*        V10.00.01 25/10/2010  Peter Vela    CAR 230909                      *
.*                  Added ALREHCP Given Name and Surname to Allied Health     *
.*                  Letters                                                   *
.*        V9.12.01  15/10/2009  WeeLee Koo    CAR 206462                      *
.*                  Added vars 378 - LXHACCNO                                 *
.*        V9.11.02  04/05/2009  Saroeun Soeur CAR 191508                      *
.*                  LXHCPFFL removed formating and format is control by       *
.*                  controlf
.*        V9.11.01  24/04/2009  Saroeun Soeur CAR 191508                      *
.*                  Added vars 374,375,376,377                                *
.*                  LXHCPTTL,LXHCPFNM,LXHCPSNM,LXHCPFFL                       *
.*        V9.10.02  09/09/2008  Ebon Clements CAR 175728                      *
.*                  Added vars 374 to 376 - Compensable vars and pmi addres   *
.*        V9.10.01  24/08/2008  Peter Vela    CAR 151951                      *
.*                  Removed subtract 100 from Allied Health Stationery        *
.*                  Template variables.                                       *
.*                  Allied Health Stationery Template Variables are now type  *
.*                  44.                                                       *
.*        V9.09.01  05/03/2008  Ebon Clements CAR 163260                      *
.*                  Don't perform CASE0000 on var 180 U/R                     *
.*        V9.08.02  23/01/2007  Ebon Clements CAR 127364                      *
.*                  Added hcp preferred communication                         *
.*        V9.08.01  22/01/2007  Janet George  CAR 127364                      *
.*                  Included vars for Clinic Id desc,Clinic Type desc,        *
.*                  HCP address details                                       *
.*        V9.08.00  16/01/2007  Janet George  CAR 127364                      *
.*                  Mod to Ref HCP to populate with formatted HCP Name        *
.*        V9.05.01  24/03/2006  Peter Vela    CAR 61299                       *
.*                  Increased field no size from DIM3 to DIM5                 *
.*        V9.05.B01 19/01/2005  Mike Laming   CAR 76341                       *
.*                  Mods for Templated forms                                  *
.*        V9.05.B00 16/01/2005  Mike Laming   CAR 76341                       *
.*                  Cloned from WATLETCD                                      *
.*                                                                            *
.******************************************************************************
.**********************************************************************
.*                              PRIN0000                              *
.*             set up and PRINt letter one line at a time             *
.**********************************************************************
PRIN0000  CALL      LETEXE00
          COMPARE   ZERO,EXIT
          GOTO      PRIN9999 IF EQUAL
.
          MOVE      FALSE,EXIT
          MOVE      ZERO,COUNT
          MOVE      LETTERNO,LETTFORM
          MOVE      ZERO,FORM3              * read letter file header record
          PACK      KEY6,LETTERNO,FORM3
          CALL      RDALLET1
          MOVE      ALLTPPAG,PHYSPAGE
          MOVE      ALLTPTOP,TOPMARG
          MOVE      ALLTPBOT,BOTTMARG       * set up margins etc.
          SUBTRACT  ALLTPBOT,ALLTPPAG
          MOVE      ALLTPPAG,PAGELEN
          MOVE      ALLTPTAB,LEFTMARG
.
.------ print top margin ------
.
          WHILE     COUNT < TOPMARG
            PRINT     *N;
            ADD       ONE,COUNT
          DO
.
.------ print letter one line at a time ------
.
PRIN1000  CALL      RKALLET1
          BRANCH    OVRCD,PRIN9000          * end of letter reached
          COMPARE   LETTFORM,ALLTLTNO
          GOTO      PRIN9000 IF NOT EQUAL
.
          BRANCH    ALLTLVAR,PRIN2000
          PRINT     *LEFTMARG,ALLTTEXT;
          PRINT     *N;
          ADD       ONE,COUNT
          IF        COUNT < PAGELEN 
            GOTO      PRIN1000
          ENDIF
.
          CALL      PAGE0000
          GOTO      PRIN1000
.
PRIN2000  CALL      MOD0000                 * substitute % var value
          PRINT     *LEFTMARG,PRINTVAR;
          PRINT     *N;
          ADD       ONE,COUNT
          IF        COUNT < PAGELEN 
            GOTO      PRIN1000
          ENDIF
          CALL      PAGE0000
          GOTO      PRIN1000
.
PRIN9000  COMPARE   TOPMARG,COUNT
          GOTO      PRIN9500 IF EQUAL
          MOVE      TWO,EXIT
          DISPLAY   *P60:24,*EL,*V2LON,COUNTER,*HOFF," Printed";
          MOVE      PHYSPAGE,TEMPF3         * set up variables for paging
          SUBTRACT  COUNT,PHYSPAGE
          ADD       ALLTPTOP,PHYSPAGE
          MOVE      ONE,COUNT
.
.------ paginate at end of each letter ------
.
          WHILE     COUNT < PHYSPAGE
            PRINT     *N;
            ADD       ONE,COUNT
          DO   
.
PRIN9400  MOVE      TEMPF3,PHYSPAGE
          GOTO      PRIN9999
.
.------ letter header is on file but nothing else ------
.
PRIN9500  MOVE      "** Letter has not been set up yet **",WEBTITLE
.....     CALL      WEBERR00 
          MOVE      TRUE,EXIT
.
PRIN9999  RETURN
.**********************************************************************
.*                              PAGE0000                              *
.*        routine to PAGinatE if a new page is required               *
.**********************************************************************
PAGE0000  MOVE      ALLTLTNO,FORM3
          MOVE      ALLTLINO,FORM3A
          CALL      RKALLET1
          BRANCH    OVRCD,PAGE8000          * check to see that another line of
          COMPARE   LETTFORM,ALLTLTNO       * the letter exists
          GOTO      PAGE8000 IF NOT EQUAL
.
          MOVE      TOPMARG,TEMPF2
          ADD       BOTTMARG,TOPMARG
          MOVE      ONE,COUNT
.
.------ loop to paginate ------
.
          WHILE     COUNT < TOPMARG
            PRINT     *N;
            ADD       ONE,COUNT
          DO
          GOTO      PAGE9000
.
.------ no need to paginate ------
.
PAGE8000  PACK      KEY6,FORM3,FORM3A
          CALL      RDALLET1
          GOTO      PAGE9999
.
.------ reset read to previous record to continue processing ------
.
PAGE9000  MOVE      TEMPF2,COUNT
          MOVE      TEMPF2,TOPMARG
          PACK      KEY6,FORM3,FORM3A
          CALL      RDALLET1
.
PAGE9999  RETURN
.**********************************************************************
.*                              MOD0000                               *
.*             MODify a line to substitute "%" variable values        *
.**********************************************************************
MOD0000   MOVE      ALLTTEXT,DIM70
          PACK      PRINTVAR,SP30,SP30,SP10 * initialise PRINTVAR & pointer
          RESET     PRINTVAR,0                positions
          MOVE      ONE,STARTSTR
          MOVE      ONE,ENDSTR
.
MOD2000   SCAN      SPECCHAR,DIM70          * Scan the Input Line for a "%" sign
          GOTO      MOD8000 IF NOT EQUAL
.
MOD3000   MOVEFPTR  DIM70,PERCPOS
          BUMP      DIM70,-1                * Go to the char. before "%" sign.
          GOTO      MOD3100 IF NOT EOS        Test if the % sign is the 1st
          RESET     DIM70,0                   char. on the line.  Set f.P. to 0
.                                             if it is
MOD3100   MOVEFPTR  DIM70,ENDSTR            * store endtsr at position 1 char
          COMPARE   STARTSTR,ENDSTR           before the % sign & ensure that
          GOTO      MOD3200 IF NOT LESS       end & start positions dont overlap
.
          RESET     DIM70,STARTSTR          * set pointer to next % sign if end
          GOTO      MOD9999 IF EOS            < start
          GOTO      MOD3300
.
MOD3200   RESET     DIM70,STARTSTR          * reset the pointers to extract text
          SETLPTR   DIM70,ENDSTR              preceding the % sign
          APPEND    DIM70,PRINTVAR
.
MOD3300   SETLPTR   DIM70,70                * set the pointers to start at % &
          RESET     DIM70,PERCPOS             go to position 70.  Delete pre-
          MOVE      DIM70,TEMP70              ceding text from the DIM70 string
          PACK      DIM70,TEMP70,SP30,SP30,SP30
.
MOD4000   CALL      GETV0000                * extract the % var
          MOVEFPTR  DIM70,STARTSTR          * store finish pos. of variable
          BRANCH    EXIT,MOD6000
          RESET     SRCHVAR
.
.------  search for the % var in the list of constants ------
.
MOD4100   MOVE      LCNOVARS,TEMPF3
          SEARCH    SRCHVAR,LCPAGE,TEMPF3,SRCHNUM 
.
          COMPARE   ZERO,SRCHNUM            * % var not found in list
          GOTO      MOD6000 IF EQUAL
.
          COMPARE   ONE,SRCHNUM             * %page variable found
          GOTO      MOD7000 IF EQUAL
.
.------  load VARSTRNG with the actual value of the % var ------
.         
          MOVE      THREE,DIM1              * Get DVA Card Number
          CALL      GCCARD00
.
          MOVE      ONE,DTFORMAT            * date format "dd Mon ccyy"
          CALL      GETVAR00
          BRANCH    EXIT,MOD6000
.     
.
MOD5000   APPEND    VARSTRNG,PRINTVAR
...       GOTO      MOD8000 IF EOS
          CALL      COMX0000                * compress trailing blanks in
          GOTO      MOD2000                   PRINTVAR
.
MOD6000   RESET     SRCHVAR                 * add string starting with a % if
          APPEND    SRCHVAR,PRINTVAR          not found in the list of constants
          GOTO      MOD2000
.
.------  % page variable found ------
.
MOD7000   MOVE      PHYSPAGE,TEMPF3
          SUBTRACT  COUNT,PHYSPAGE
          MOVE      ONE,COUNT
          ADD       TOPMARG,PHYSPAGE
          SUBTRACT  ONE,PHYSPAGE
.
MOD7100   PRINT     *N;
          COMPARE   COUNT,PHYSPAGE
          GOTO      MOD7500 IF EQUAL
          ADD       ONE,COUNT
          GOTO      MOD7100
.
MOD7500   MOVE      TEMPF3,PHYSPAGE
          MOVE      TOPMARG,COUNT
          SUBTRACT  ONE,COUNT
          PACK      PRINTVAR,SP30,SP30,SP10
          GOTO      MOD9999
.
MOD8000   APPEND    DIM70,PRINTVAR          * add remaining text to PRINTVAR if
          RESET     PRINTVAR                  no % signs left
.
MOD9999   RETURN
+
.**********************************************************************
.*                              GETVAR00                              *
.*                Get value from required Variable                    *
.*  Uses  SRCHNUM  to return data in VARSTRNG                         *
.**********************************************************************
GETVAR00  MOVE      ZERO,EXIT
.
          LOAD      VARSTRNG,SRCHNUM,PAGE,CURRDATE,FULLNAME,PTITL,PSNAME:
                             PGNAME,PBDEBT,PPSNAME,PADD1,PADD2:            *10
                             PSUBRB,PADD4,PPOST,PTELEP,PTELEB:
                             PSEX,PMSTAT,PBDATE,PSAGE,PCONT:               *20
                             PREG,PTYPE,POCCUP,PMEDI,PTMXMCCD:
                             PPENNO,PPNDTE,PMCDCNUM,PSMOK,PMICRO:          *30
                             PCEASE,PAUTOPY,PHIGH1,PHIGH2,PHIGH3:
                             PLOCDOC,PFUNDH,PFNDTB,PFNDMM,PUSR1:           *40
                             PUSR2,PUSR3,PUSR4,PUSR5,PUSR6:
                             PUYN1,PUYN2,PUYN3,PYRRES,PNKNAME:             *50
                             PNKADD1,PNKADD2,PNKSUBR,PNKADD4,PNKPOST:      *55
                             PNKTELP,PNKTELB,PNKRELP,PFNDYY,PFNDCG:        *60
                             PDECDTE,PDIET,PTMAEMPC,PTMANOKO,PTMANOKE:     *65
                             PTMADCNO,PTMAUKDB,PTMAUKDD,PTMXRDAT,PTMXLGA:  *70
                             PTMXLS,PTMXLSDT,PTMXFHMD,PTMXMHU1,PTMXMHU2:   *75
                             PTMXMHU3,PTMXECNM,PTMXECA1,PTMXECA2,PTMXECA3: *80
                             PTMXECA4,PTMXECPC,PTMXECPP,PTMXECBP,PTMXECRE: *85
                             PTMXNRNM,PTMXNRA1,PTMXNRA2,PTMXNRA3,PTMXNRA4: *90
                             PTMXNRPC,PTMXNRPP,PTMXNRBP,PTMXNRRE,PTMXREGP: *95
                             PTMXGPPC,PTMXGPPT,PTMXOSDT,PTMXUKDO,PTMXCELL: *100
                             PTMXADD1,PTMXADD2,PTMXADD3,PTMXADD4,PTMXPOST: *105
                             PTMXSIN1,PTMXSIN2,PTMXSIN3,PTMXSIN4,PTMXSIN5: *110
                             PTMXSLAC,PMPXRHC1,PMPXRH1G,PMPXR1GC,PMPXINTR: *115
                             PMPXLNG1,PMPXLNG2,PMPXLNG3,PMPXPEML,PMPXEDOB: *120
                             PMPXCMOB,PMPXCEML,PMPXCCRP,PMPXKMOB,PMPXKEML: *125
                             PMPXKCRP,PMPXRMOB,PMPXREML,PMPXRCRP,PMPXMEDC: *130
                             PMPXDETY,PMPXPRIS,PMPXCSER,PMPXMSNA,PMPXMGNA: *135
                             PMPXMTLE,PMPXMAD1,PMPXMAD2,PMPXMAD3,PMPXMAD4: *140
                             PMPXMPOS,PMPXMPNO,PMPXMBNO,PMPXMMNO,PMPXMEML: *145
                             PMPXMCNT,PMPXMCRP,PMPXMLAB,PMPXMREL,PMPXFSNA: *150
                             PMPXFGNA,PMPXFTLE,PMPXFAD1,PMPXFAD2,PMPXFAD3: *155
                             PMPXFAD4,PMPXFPOS,PMPXFPNO,PMPXFBNO,PMPXFMNO: *160
                             PMPXFEML,PMPXFCNT,PMPXFCRP,PMPXFLAB,PMPXFREL: *165
                             PMCDDVAC,PMPXPNSD,PMPXUYN4,PMPXUYN5,PMPXUYN6: *170
                             PMPXUDC1,PMPXUDC2,PMPXUDC3,PMPXUSR7,PMPXUSR8: *175
                             PMPXUSR9,PMPXMSNO,PMPXCONP,PMPXFLDR,ALREVISN: *180
                             ALREURNO,ALRESTAT,ALREDACT,ALRELINK,ALREDINA: *185
                             ALRERCLO,ALREDCLO,ALRETCLO,ALREUCLO,ALRERCAN: *190 
                             ALREDCAN,ALRETCAN,ALREUCAN,ALRERINA,ALRETINA: *195
                             ALREDINU,ALREUINA,ALRERDAT,ALRERDEP,LXRERHCP: *200
                             LXHCPRAC,ALRERHCT,ALREDEPT,ALREUNIT,ALREPRTY:
                             ALREPRO1,ALREPRO2,ALREPRO3,ALREDIA1,ALREDIA2: *210
                             ALREDIA3,ALRESRCE,ALRECOMP,ALREBULK,ALREDREV:
                             ALREHCP,ALREDREC,ALREUC01,ALREUC02,ALREUC03:  *220
                             ALREUC04,ALREUC05,ALREUC06,ALREUC07,ALREUC08:
                             ALREUC09,ALREUC10,ALREUC11,ALREUC12,ALREUC13: *230
                             ALREUC14,ALREUC15,ALREUC16,ALREUC17,ALREUC18:
                             ALREUC19,ALREUC20,ALREUC21,ALREUC22,ALREUC23: *240
                             ALREUC24,ALREUC25,ALREUC26,ALREUC27,ALREUC28:
                             ALREUC29,ALREUC30,ALREUC31,ALREUC32,ALREUC33: *250
                             ALREUC34,ALREUC35,ALREUC36,ALREUC37,ALREUC38:
                             ALREUC39,ALREUC40,ALREUYN1,ALREUYN2,ALREUYN3: *260
                             ALREUYN4,ALREUHC1,ALREUHC2,ALREUHC3,ALREUHC4:
                             ALREUFR1,ALREUFR2,ALREUDT1,ALREUTM1,ALREUDT2: *270
                             ALREUTM2,ALREUDT3,ALREUTM3,ALREUDT4,ALREUTM4:
                             ALREUNO1,ALREUNO2,ALRECDAT,ALRECTIM,ALRECUID: *280
                             ALREUDAT,ALREUTIM,ALREUUID,ALRECTYP,ALREHOSN:
                             ALREFHCP,ALREHCP1,ALREHCP2,ALREHCP3,ALREHCPC: *290
                             ALREHCPS,ALREHCPB,ALREHCPF,ALREHCPP,ALRESTYP:
                             ALREPRCM,ALREPSIT,ALRECLID,ALRECSTA,ALRERREJ: *300
                             ALRECCOM,ALRERTYP,ALREREXP,ALREMDAT,ALREPRDT:
                             OBASITE,OBACLIN,OBADATE,OBASTRT,OBASLOT:      *310
                             OBATIME,OBACTYP,OBAURNO,OBAVISIT,OBAOUTNO:
                             OBADAY,OBASESST,OBADISCH,OBASRCR,OBACOMP:     *320
                             OBACLASS,OBAINS,OBAATTN,OBADOCT,OBACOMM:
                             OTBBFUND,OTBBTBLE,OBACAT,OBAPRTY,OBARSCHD:    *330
                             OBOUSR1,OBOUSR2,OBOUSR3,OBOUSR4,OTBBDEPT:
                             OTBBTRAN,OTBBLNGI,OTBBTMFS,OTBBTMBO,OTBBGPFA: *340
                             OTBBECRA,OTBBRFGP,OTBBGPPC,OTBBADCS,OTBBCITM:
                             OTBBASTM,OTBBDPTM,OTBBOUTC,OTBBDOFR,OBOUSR5:  *350
                             OBOUSR6,OBOUSR7,OBOUSR8,OTBBRANK,OTBBSPCA:
                             OTBBCIND,OTBBFLUP,LXRCTDES,LXRCIDES,LXBCTDES: *360
                             LXBCIDES,LXHCPAD1,LXHCPAD2,LXHCPAD3,LXHCPAD4:
                             LXHCPAD5,LXHCPAD6,LXHCPPOC,LXHCPSTA,LXHCPEMA: *370
                             LXHCPTEL,LXHCPFAX,PMHCPRFC,LXHCPTTL,LXHCPFNM:
                             LXHCPSNM,LXHCPFFL,LXHACCNO,LXALREHG,LXALREHS: *380
                             LXLNPNAM,LXLNPAD1,LXLNPAD2,LXLNPAD3,LXLNPAD4:
                             LXLNPPOS,LXLNPPHN,LXLNPFAX,ALRESREJ,ALREPURC: *390
                             LXPMTITL,LXPMGNAM,LXPMSNAM,LXPMFNAM,LXPMADR1:
                             LXPMADR2,LXPMADR3,LXPMADR4,LXPMPOST,LXPMSEML: *400
                             LXPMSTEL,LXPMFAXN,LXPGPNAM,LXPGADD1,LXPGADD2:
                             LXPGADD3,LXPGADD4,LXPGADD5,LXPGADD6,LXPGPOST: *410
                             LXPGPEML,LXPGPTEL,LXPGPFAX,PTYPE,CLMDET1:
                             CLMDET2,PACADDRS,LXREPRO1,LXREPRO2,LXREPRO3:  *420
                             LXREDIA1,LXREDIA2,LXREDIA3,ALRECONT,ALRECONT:
                             NHMAETH,LXNHIE1D,NHMAETH2,LXNHIE2D,NHMAETH3:  *430
                             LXNHIE3D,PMPXIWI1,PMPXIWI1,PMPXIWI2,PMPXIWI2:
                             PMPXIWI3,PMPXIWI3,LXNXKINR,LXEMRCON,LXNHIRES: *440
                             LXIHINUM,ALREDEPT,LXAL1COD,LXAL1DES,LXAL1HDP:
                             LXAL2COD,LXAL2DES,LXAL2HDP,LXAL3COD,LXAL3DES: *450
                             LXAL3HDP,LXAL4COD,LXAL4DES,LXAL4HDP,LXAL5COD:
                             LXAL5DES,LXAL5HDP,LXAL6COD,LXAL6DES,LXAL6HDP: *460
                             LXAL7COD,LXAL7DES,LXAL7HDP,LXAL8COD,LXAL8DES:
                             LXAL8HDP,LXAL9COD,LXAL9DES,LXAL9HDP,LXAL10CO: *470
                             LXAL10DE,LXAL10HD,PMPXFNAM,PMPXSNAM,PMWXPORD:
                             PSEX,PSEX,MBIRINIT,PTCNSTYP,LXDWLDYS:         *480
                             LXDWLYRS,LXDWLMTH,PMPXPFSN,PMPXPFGN,PSNAME:   *485 
                             PGNAME,PTMASNAM,ALRERHCP,LXRFFHOS,LXRFTHOS:   *490 
                             PMPXUCC4,LXUCC4LD,PMPXATF1,PMPXUCC5,LXUCC5LD: *495 
                             PMPXATF2,PMPXSN18,PMPXSN19,PMPXSN20,PMPXSN21: *500
                             PMPXSN22,PMPXSN23,PMPXSN24,PMPXSN25,PMPXSN26: *505
                             PMPXSN27,PMPXSN28,PMPXSN29,PMPXSN30,PUSR1:    *510
                             LXPUSRAL,PUSR2,LXPUSRBL,PUSR3,LXPUSRCL:       *515
                             PUSR4,LXPUSRDL,PUSR5,LXPUSREL,PUSR6:          *520
                             LXPUSRFL,PMPXUSR7,LXPUSRGL,PMPXUSR8,LXPUSRHL: *525
                             PMPXUSR9,LXPUSRIL                             *530  
.
.                                           * get data type or Cat. code
GETVAR10  LOAD      CCODE,SRCHNUM,TXT,DAT,TXT,TXT,TXT,TXT,NOY,TXT,TXT,TXT: *10
                          TXT,TXT,XXX,XXX,XXX,TXT,CATM,DAT,XXX,CATC:       *20
                          CATR,CATT,TXT,XXX,XXX,XXX,DAT,XXX,NOY,XXX:       *30
                          NOY,NOY,CATH1,CATH2,CATH3,TXT,XXX,XXX,XXX,CATP1: *40
                          CATP2,CATP3,CATP4,CATP5,CATP6:
                                      NOY,NOY,NOY,XXX,TXT:                 *50
                          TXT,TXT,TXT,TXT,XXX,XXX,XXX,XXX,XXX,DAT:         *60
                          DAT,CATDC,XXX,TXT,XXX,XXX,NOY,NOY,DAT,XXX:       *70
                          CATLS,DAT,NOY,CATV6,CATV7,CATV8,TXT,TXT,TXT,TXT: *80
                          TXT,XXX,XXX,XXX,XXX,TXT,TXT,TXT,TXT,TXT:         *90
                          XXX,XXX,XXX,XXX,XXX,XXX,XXX,DAT,NOY,XXX:         *100
                          TXT,TXT,TXT,TXT,XXX,NOY,NOY,NOY,NOY,NOY:         *110
                          XXX,XXX,XXX,XXX,NOY,CATLA,CATLA,CATLA,XXX,NOY:   *120
                          XXX,XXX,NOY,XXX,XXX,NOY,XXX,XXX,NOY,DAT:         *130
                          CATDY,XXX,XXX,TXT,TXT,TXT,TXT,TXT,TXT,TXT:       *140
                          XXX,XXX,XXX,XXX,XXX,CATC,NOY,NOY,XXX,TXT:        *150
                          TXT,TXT,TXT,TXT,TXT,TXT,XXX,XXX,XXX,XXX:         *160
                          XXX,CATC,NOY,NOY,XXX,CATDX,DAT,NOY,NOY,NOY:      *170
                          XXX,XXX,XXX,CATP7,CATP8,CATP9,XXX,XXX,CATFS,XXX: *180
                          XXX,XXX,DAT,XXX,DAT,CATLL,DAT,XXX,XXX,CATLN:     *190
                          DAT,XXX,XXX,CATLI,XXX,DAT,XXX,DAT,XXX,XXX:       *200
                          XXX,XXX,XXX,CATAC,CATPR,XXX,XXX,XXX,XXX,XXX:     *210
                          XXX,XXX,CATCL,NOY,DAT,XXX,DAT,CA1la,CA1lb,CA1lc: *220
                          CA1ld,CA1le,CA1lf,CA1lg,CA1lh:
                                      CA1li,CA1lj,CA1lk,CA1ll,CA1lm:       *230
                          CA1ln,CA1lo,CA1lp,CA1lq,CA1lr:
                                      CA1ls,CA1lt,CA1lu,CA1lv,CA1lw:       *240
                          CA1lx,CA1ly,CA1lz,CA2lA,CA2lB:
                                      CA2lC,CA2lD,CA2lE,CA2lO,CA2lG:       *250
                          CA2lH,CA2lI,CA2lJ,CA2lK,CA2lL:
                                      CA2lM,CA2lN,NOY,NOY,NOY:             *260
                          NOY,XXX,XXX,XXX,XXX,XXX,XXX,DAT,XXX,DAT:         *270
                          XXX,DAT,XXX,DAT,XXX,XXX,XXX,DAT,XXX,XXX:         *280
                          DAT,XXX,XXX,XXX,XXX,XXX,TXT,TXT,TXT,XXX:         *290
                          TXT,XXX,XXX,XXX,CATCV,TXT,XXX,XXX,CATsc,CAThr:   *300
                          XXX,CATRI,DAT,DAT,DAT,XXX,XXX,DAT,XXX,XXX:       *310
                          XXX,XXX,XXX,CATCV,XXX:
                                      XXX,CATCS,CATDO,CATS,CATCL:          *320
                          CATA,CATU1,CATCA,TXT,TXT:
                                      TXT,TXT,CATP,CATPR,CATRR:            *330
                          CATO1,CATO2,CATO3,CATO4,CATAC:
                                      CATOB,CATOL,TXT,TXT,TXT:             *340
                          TXT,TXT,TXT,TXT,TXT,TXT,TXT,CATOZ,CATDA,CATO5:   *350
                          CATO6,CATO7,CATO8,TXT,TXT,CATCI,NOY,XXX,XXX,XXX: *360
                          XXX,XXX,XXX,XXX,XXX,XXX,XXX,XXX,XXX,XXX:         *370
                          XXX,XXX,CATCZ,XXX,TXT,TXT,XXX,XXX,TXT,TXT:       *380
                          TXT,TXT,TXT,TXT,TXT,XXX,XXX,XXX,CATRRr,CATHP:    *390
                          XXX,TXT,TXT,TXT,TXT,TXT,TXT,XXX,TXT,XXX:         *400
                          XXX,XXX,TXT,TXT,TXT,TXT,TXT,TXT,TXT,XXX:         *410
                          XXX,XXX,XXX,XXX,XXX,XXX,TXT,TXT,TXT,TXT:         *420
                          TXT,TXT,TXT,XXX,CATgb,XXX,TXT,XXX,TXT,XXX:       *430
                          TXT,XXX,CATiw,XXX,CATiw,XXX,CATiw,TXT,TXT,TXT:   *440
                          XXX,CATCG,ALR,ALR,ALR,ALR,ALR,ALR,ALR,ALR:       *450
                          ALR,ALR,ALR,ALR,ALR,ALR,ALR,ALR,ALR,ALR:         *460
                          ALR,ALR,ALR,ALR,ALR,ALR,ALR,ALR,ALR,ALR:         *470
                          ALR,ALR,TXT,TXT,TXT,TXT,TXT,TXT,TXT,TXT:         *480
                          TXT,TXT,TXT,TXT,TXT,TXT,TXT,XXX,TXT,TXT:         *490
                          TXT,TXT,TXT,TXT,TXT,TXT,TXT,TXT,TXT,TXT:         *500 
                          TXT,TXT,TXT,TXT,TXT,TXT,TXT,TXT,TXT,TXT:         *510
                          TXT,TXT,TXT,TXT,TXT,TXT,TXT,TXT,TXT,TXT:         *520
                          TXT,TXT,TXT,TXT,TXT,TXT,TXT                      *530
.
.         Format the patients sex description (variable 16)
.
          IF        SRCHNUM = 16
            MOVE      SP8,VARSTRNG
            MOVE      PSEX,VARSTRNG
          ENDIF
.
          IF        SRCHNUM = 476
            MOVE      SP70,VARSTRNG
            MOVE      PSEX,DSEXCHAR
            CALL      SEXDSP00         
            MOVE      DSEXLDES,VARSTRNG
          ENDIF
.
          IF        SRCHNUM = 477
            MOVE      SP70,VARSTRNG
            MOVE      PSEX,DSEXCHAR
            CALL      SEXDSP00
            MOVE      DSEXASC1,VARSTRNG
          ENDIF
.
          IF        SRCHNUM = 478
            MOVE      SP70,VARSTRNG
            MOVE      URNUMBER,MBIRURNO
            CALL      MULBIR00                 * Get multlple birth details
            MOVE      MBIRTYOR,VARSTRNG
          ENDIF
.
          IF        SRCHNUM = 480 | SRCHNUM = 481 | SRCHNUM = 482 
            MOVE      SP70,VARSTRNG
            CALL      MXDYSL00                 * output the longest List Days 
.            
            IF        SRCHNUM = 480
              MOVE      MXDYSLST,VARSTRNG      * in days
            ENDIF
.
            IF        SRCHNUM = 481
              MOVE      MXYRSLST,VARSTRNG      * in years
            ENDIF
.
            IF        SRCHNUM = 482
              MOVE      MXMTHLST,VARSTRNG      * in months
            ENDIF
.            
          ENDIF
.
          IF        SRCHNUM = 485 
            MATCH     "1",PTCNPFSN         * Pref Surname instead of Actual SN
            IF        @EQUAL
              MATCH     SP70,PMPXPFSN
              IF        !@EQUAL & !@EOS
                PACK      VARSTRNG,PMPXPFSN,SP70,SP10
              ENDIF
            ENDIF
          ENDIF
.
          IF        SRCHNUM = 486
            MATCH     "1",PTCNPFGN         * Pref GN instead of Actual GN
            IF        @EQUAL
              MATCH     SP70,PMPXPFGN
              IF        !@EQUAL & !@EOS
                PACK      VARSTRNG,PMPXPFGN,SP70,SP10
              ENDIF
            ENDIF
          ENDIF
.
          IF        SRCHNUM = 487
            MATCH     "1",PTCNPFSN         * Pref Surname instead of 40char SN
            IF        @EQUAL
              MATCH     SP70,PMPXPFSN
              IF        !@EQUAL & !@EOS
                PACK      VARSTRNG,PMPXPFSN,SP70,SP10
              ENDIF
            ENDIF
          ENDIF
.
          IF        SRCHNUM = 489 | SRCHNUM = 490 
            MOVE      SP70,VARSTRNG
            CALL      HOSTC000
.
            IF        SRCHNUM = 489
              MOVE      HOSPFREF,VARSTRNG      * Referred From Hospital 
            ENDIF
.
            IF        SRCHNUM = 490
              MOVE      HOSPTREF,VARSTRNG      * Referred To Hospital 
            ENDIF
          ENDIF
.
          IF        SRCHNUM = 492
            MOVE      SP70,VARSTRNG
            MATCH     SP70,PMPXUCC4
            IF        !@EQUAL
              MOVE      "Gi",DIM2
              PACK      KEY5,DIM2,PMPXUCC4,SP70
              CALL      RDCODE1
              IF        OVRCD=0
                MOVE      PTCDLDES,VARSTRNG
              ENDIF
            ENDIF
          ENDIF
.
          IF        SRCHNUM = 495
            MOVE      SP70,VARSTRNG
            MATCH     SP70,PMPXUCC5
            IF        !@EQUAL
              MOVE      "Gp",DIM2
              PACK      KEY5,DIM2,PMPXUCC5,SP70
              CALL      RDCODE1
              IF        OVRCD=0
                MOVE      PTCDLDES,VARSTRNG
              ENDIF
            ENDIF
          ENDIF
.
          IF        SRCHNUM = 511
            MOVE      SP70,VARSTRNG
            MATCH     SP70,PUSR1
            IF        !@EQUAL
              PACK      KEY5,ANSP,ONE,PUSR1,SP70
              CALL      RDCODE1
              IF        OVRCD = 1
                MOVE      SP70,PTCDLDES
              ENDIF
              IF        SRCHNUM = 511
                MOVE      PTCDLDES,VARSTRNG
              ENDIF
            ENDIF
          ENDIF
.
          IF        SRCHNUM = 513
            MOVE      SP70,VARSTRNG
            MATCH     SP70,PUSR2
            IF        !@EQUAL
              PACK      KEY5,ANSP,TWO,PUSR2,SP70
              CALL      RDCODE1
              IF        OVRCD = 1
                MOVE      SP70,PTCDLDES
              ENDIF
              IF        SRCHNUM = 513
                MOVE      PTCDLDES,VARSTRNG
              ENDIF
            ENDIF
          ENDIF
.          
          IF        SRCHNUM = 515
            MOVE      SP70,VARSTRNG
            MATCH     SP70,PUSR3
            IF        !@EQUAL
              PACK      KEY5,ANSP,THREE,PUSR3,SP70
              CALL      RDCODE1
              IF        OVRCD = 1
                MOVE      SP70,PTCDLDES
              ENDIF
              IF        SRCHNUM = 515
                MOVE      PTCDLDES,VARSTRNG
              ENDIF
            ENDIF
          ENDIF
.          
          IF        SRCHNUM = 517
            MOVE      SP70,VARSTRNG
            MATCH     SP70,PUSR4
            IF        !@EQUAL
              PACK      KEY5,ANSP,FOUR,PUSR4,SP70
              CALL      RDCODE1
              IF        OVRCD = 1
                MOVE      SP70,PTCDLDES
              ENDIF
              IF        SRCHNUM = 517
                MOVE      PTCDLDES,VARSTRNG
              ENDIF
            ENDIF
          ENDIF
.          
          IF        SRCHNUM = 519
            MOVE      SP70,VARSTRNG
            MATCH     SP70,PUSR5
            IF        !@EQUAL
              PACK      KEY5,ANSP,FIVE,PUSR5,SP70
              CALL      RDCODE1
              IF        OVRCD = 1
                MOVE      SP70,PTCDLDES
              ENDIF
              IF        SRCHNUM = 519
                MOVE      PTCDLDES,VARSTRNG
              ENDIF
            ENDIF
          ENDIF
.
          IF        SRCHNUM = 521
            MOVE      SP70,VARSTRNG
            MATCH     SP70,PUSR6
            IF        !@EQUAL
              PACK      KEY5,ANSP,SIX,PUSR6,SP70
              CALL      RDCODE1
              IF        OVRCD = 1
                MOVE      SP70,PTCDLDES
              ENDIF
              IF        SRCHNUM = 521
                MOVE      PTCDLDES,VARSTRNG
              ENDIF
            ENDIF
          ENDIF
.          
          IF        SRCHNUM = 523
            MOVE      SP70,VARSTRNG
            MATCH     SP70,PMPXUSR7
            IF        !@EQUAL
              PACK      KEY5,ANSP,SEVEN,PMPXUSR7,SP70
              CALL      RDCODE1
              IF        OVRCD = 1
                MOVE      SP70,PTCDLDES
              ENDIF
              IF        SRCHNUM = 523
                MOVE      PTCDLDES,VARSTRNG
              ENDIF
            ENDIF
          ENDIF
.
          IF        SRCHNUM = 525
            MOVE      SP70,VARSTRNG
            MATCH     SP70,PMPXUSR8
            IF        !@EQUAL
              PACK      KEY5,ANSP,EIGHT,PMPXUSR8,SP70
              CALL      RDCODE1
              IF        OVRCD = 1
                MOVE      SP70,PTCDLDES
              ENDIF
              IF        SRCHNUM = 525
                MOVE      PTCDLDES,VARSTRNG
              ENDIF
            ENDIF
          ENDIF
.
          IF        SRCHNUM = 527
            MOVE      SP70,VARSTRNG
            MATCH     SP70,PMPXUSR9
            IF        !@EQUAL
              PACK      KEY5,ANSP,NINE,PMPXUSR9,SP70
              CALL      RDCODE1
              IF        OVRCD = 1
                MOVE      SP70,PTCDLDES
              ENDIF
              IF        SRCHNUM = 527
                MOVE      PTCDLDES,VARSTRNG
              ENDIF
            ENDIF
          ENDIF
.
          UNPACK    CCODE,ANS,KEY1
          MATCH     "$",ANS
          GOTO      GETVAR60 IF NOT EQUAL   * Cat. Fields go to GETVAR60
.
          MOVE      KEY1,F1
          BRANCH    F1,GETVAR30:            * DAT - Date fields
                       GETVAR40:            * NOY - Yes/No fields
                       GETVAR50:            * TXT - Text format fields
                       GETVAR99:            * Unused??
                       GETVAR70             * ALR - Alerts
.
          GOTO      GETVAR99                * XXX - no further formatting
.                                           * format date
GETVAR30  MATCH     "00000000",VARSTRNG
          GOTO      GETVAR39 IF EQUAL
          MATCH     SP8,VARSTRNG
          GOTO      GETVAR39 IF EQUAL
          UNPACK    VARSTRNG,CCENT,CYEAR,CMON,CDAY
          BRANCH    DTFORMAT,GETVAR35
.                                           * format date to "dd/mm/ccyy"
          CALL      PACDATE
          REP       " 0",CPDATE
          MOVE      CPDATE,VARSTRNG
          GOTO      GETVAR99
.                                           * format date to "dd Mon ccyy"
GETVAR35  MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      VARSTRNG,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
          GOTO      GETVAR99
.
GETVAR39  MOVE      SP8,VARSTRNG
          GOTO      GETVAR99
.
.                                           * ensure Yes/No is Y or N
GETVAR40  UNPACK    VARSTRNG,KEY1
          REP       " N0N1Y2NnNyY",KEY1
          MOVE      "No ",KEY3
          MATCH     "Y",KEY1
          GOTO      GETVAR42 IF NOT EQUAL
          MOVE      "Yes",KEY3
GETVAR42  MOVE      KEY3,VARSTRNG
          GOTO      GETVAR99
.
GETVAR50  CALL      CASE0000                * convert to upper/lower case
          GOTO      GETVAR99
.
.                                           * Read codes file for Description
GETVAR60  UNPACK    VARSTRNG,KEY3
          MATCH     SP3,KEY3
          GOTO      GETVAR99 IF EQUAL       * Cat.Code is blank
.
          PACK      KEY5,CCODE,KEY3,SP5
          CALL      RDCODE1
          BRANCH    OVRCD,GETVAR99
.
          MOVE      TDESC,VARSTRNG
          CALL      CASE0000                * convert to upper/lower case
          GOTO      GETVAR99

GETVAR70  SUB       "442",SRCHNUM
          MOVE      SRCHNUM,FORM5
          PROC      PATPAOFS
          MOVE      VARIABLE,VARSTRNG
          GOTO      GETVAR99
.
GETVAR99  RETURN
+
.**********************************************************************
.*                              GETV0000                              *
.*                GET the "%" Variable from the line                  *
.**********************************************************************
GETV0000  MOVE      FALSE,EXIT
          PACK      SRCHVAR,SP30,SP30,SP10
          RESET     SRCHVAR,0
          MOVE      DIM70,ANS
          APPEND    ANS,SRCHVAR
          RESET     SRCHVAR,0
          BUMP      DIM70
          MOVE      DIM70,ANS
          REPLACE   REPSTR,ANS              * check to see if first char after %
          MATCH     "0",ANS                   is a lower case letter
          GOTO      GETV9000 IF NOT EQUAL
          BUMP      DIM70,-1
          PACK      SRCHVAR,SP30,SP30,SP10  *initialise SRCHVAR value & pointers
          RESET     SRCHVAR,0
.
.------  append % var to SRCHVAR until anything but ------
.------  a lower case letter is found ------
.
GETV1000  MOVE      DIM70,ANS
          APPEND    ANS,SRCHVAR
          BUMP      DIM70
          GOTO      GETV9999 IF EOS
          MOVE      DIM70,ANS
          REPLACE   REPSTR,ANS
          MATCH     "0",ANS
          GOTO      GETV9999 IF NOT EQUAL
          GOTO      GETV1000
.
.------  string found is not a valid % var ------
.
GETV9000  MOVE      TRUE,EXIT
.
GETV9999  RETURN
.**********************************************************************
.*                              COMX0000                              *
.*         routine to COMpress trailing blanks in PRINTVAR            *
.**********************************************************************
COMX0000  ENDSET    PRINTVAR
.
COMX1000  CMATCH    SP1,PRINTVAR
          GOTO      COMX9999 IF NOT EQUAL
          BUMP      PRINTVAR,-1
          GOTO      COMX9999 IF EOS
          GOTO      COMX1000
.
COMX9999  RETURN
+
.**********************************************************************
.*                             CASE0000                               *
.*  routine to convert all except first character of each word to     *
.*        lower CASE                                                  *
.**********************************************************************
CASE0000  MOVE      ONE,FIRSTCH
          RESET     VARSTRNG
.
CASE1000  CMATCH    SP1,VARSTRNG
          GOTO      CASE5000 IF EQUAL       * match char to space
          BRANCH    FIRSTCH,CASE2000
          MOVE      VARSTRNG,ANS
          RESET     UPPLOW
          SCAN      ANS,UPPLOW              * test to see if char is a letter
          GOTO      CASE1100 IF EQUAL
          MOVE      ONE,FIRSTCH
          GOTO      CASE3000                * any char but a letter found
.
CASE1100  RESET     UPPLOW
          OR        040,VARSTRNG            * actual conversion to lower case
.
CASE2000  MOVE      ZERO,FIRSTCH            * not on first char. any more
.
CASE3000  BUMP      VARSTRNG
          GOTO      CASE1000 IF NOT EOS     * move to next character
          RESET     VARSTRNG                * end of line reached
          GOTO      CASE9999
.
CASE5000  MOVE      ONE,FIRSTCH             * first character was a space
          GOTO      CASE3000
.
CASE9999  RETURN
+
.**********************************************************************
. Routine   : LETEXE00
.
. Funtion   : Execute a UNIX Shell Command to a Print Letter 
.
. Inputs    : Valid Record Read from WATTR1FD
.             SPLFILE - Spool File Name
.
. Returns   : EXIT = 0 Letter Printed,  1 Letter Not Printed
.**********************************************************************
LETEXE00  MOVE      ONE,FORM3              * Check for UNIX Shell Required
          MOVE      LETTERNO,LETTFORM
          PACK      KEY6,LETTERNO,FORM3
          CALL      RDALLET1
          BRANCH    OVRCD,LETEXE90
          MATCH     "!sh",ALLTTEXT
          GOTO      LETEXE90 IF NOT EQUAL
.
          MOVE      TWO,FORM3              * Get UNIX Command
          PACK      KEY6,LETTFORM,FORM3
          CALL      RDALLET1
          BRANCH    OVRCD,LETEXE99
          MATCH     SP70,ALLTTEXT
          GOTO      LETEXE90 IF EQUAL
.
          CLEAR     VAR
          STRIP     ALLTTEXT
          APPEND    ALLTTEXT,VAR
          APPEND    SP1,VAR
          APPEND    "$TBSPOOL/",VAR         * Spool File Directory
          APPEND    SPLFILE,VAR             * Spool File Name
          APPEND    ".prt ",VAR
          APPEND    " '",VAR
          APPEND    LETTFORM,VAR            * Letter Number
          APPEND    "' '",VAR
          APPEND    URNUMBER,VAR            * U/R
          APPEND    "' '",VAR
          APPEND    VISITNUM,VAR            * Visit Number
          APPEND    "'",VAR
          RESET     VAR
          EXECUTE   VAR,TASKID              * Execute
          MOVE      ZERO,EXIT               * Letter Executed
          GOTO      LETEXE99
.
LETEXE90  MOVE      ONE,EXIT                * No Letter Executed
.
LETEXE99  RETURN
.
.--------------------------------------------------------------------
.                          FORMP000
.  Routine to print the Allied Health Template Forms
.--------------------------------------------------------------------
FORMP000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,PRNTSTRT
          MOVE      ONE,CURRROW
.
          PACK      KEY12,STATNCOD,SP70
          CALL      RSIBDET1                   * position on the details file
          CALL      RKIBDET1
          BRANCH    OVRCD,FORMP990
.
          MATCH     STATNCOD,IBDTSCOD          * match stationary codes
          GOTO      FORMP990 IF NOT EQUAL
.
          MOVE      IBDTROW,LASTROW
.
          COMPARE   CURRROW,IBDTROW            * compare rows
          GOTO      FORMP200 IF EQUAL
.
.------ print new-lines until current row equals the one read in ------
.
FORMP050  PRINT     *N;
          ADD       ONE,CURRROW
.
          COMPARE   CURRROW,IBDTROW            * compare rows
          GOTO      FORMP200 IF EQUAL
.
          GOTO      FORMP050
.
.------ read through the details file ------
.
FORMP100  CALL      RKIBDET1
          BRANCH    OVRCD,FORMP900
.
          MATCH     STATNCOD,IBDTSCOD           * match stationary codes
          GOTO      FORMP900 IF NOT EQUAL
.
          MOVE      IBDTROW,LASTROW
.
          COMPARE   CURRROW,IBDTROW            * compare rows
          GOTO      FORMP200 IF EQUAL
.
.------ print new-lines until current row equals the one read in ------
.
FORMP110  PRINT     *N;
          ADD       ONE,CURRROW
.
          COMPARE   CURRROW,IBDTROW            * compare rows
          GOTO      FORMP200 IF EQUAL
.
          GOTO      FORMP110
.
.------ branch on the field type ------
.
FORMP200  BRANCH    IBDTINDC,FORMP300,FORMP400
.
.------ the field is a text field ------
.
FORMP300  RESET     IBDTTXFL,IBDTPLEN
          LENSET    IBDTTXFL
          RESET     IBDTTXFL
          PRINT     *IBDTCOL,*+,IBDTTXFL;
          GOTO      FORMP100
.
.------ the field is a data field ------
.
FORMP400  MOVE      THREE,DIM1              * Get DVA Card Number
          CALL      GCCARD00
.     
          MOVE      IBDTTXFL,DIM5
          MOVE      DIM5,SRCHNUM
.         SUB       "100",SRCHNUM           * A/H Variables start at "101"
.
          PACK      VARSTRNG,SP70,SP70      * Clear here
.
          MOVE      ZERO,DTFORMAT           * date format "dd/mm/ccyy"
          CALL      GETVAR00
          BRANCH    EXIT,FORMP100
.
.------- Print Vars --------
.
FORMP740  RESET     VARSTRNG,IBDTPLEN
          LENSET    VARSTRNG
          RESET     VARSTRNG
          PRINT     *IBDTCOL,*+,VARSTRNG;
          GOTO      FORMP100
.
.------ formatting for Form fields and right justified variables ------
.
..FORMP750  COMPARE   ZERO,PRNTSTRT        * don't bump if printing full length
..          GOTO      FORMP760 IF EQUAL
...
..          BUMP      VARSTRNG,PRNTSTRT    * bump to starting position
.
.------ print the variable ------
.
FORMP760  PRINT     *IBDTCOL,*+,VARSTRNG;
          GOTO      FORMP100
.
.------ end of medical record request form reached ------
.
FORMP900  MOVE      FALSE,EXIT
.
.------ print new-lines until the end of page is reached ------
.
FORMP910  PRINT     *N;
          ADD       ONE,LASTROW
.
          COMPARE   LASTROW,IBTHLENG          * test page length
          GOTO      FORMP999 IF EQUAL
.
          GOTO      FORMP910
.
.------ no details on file ------
.
FORMP990  MOVE      TRUE,EXIT
.
FORMP999  CALL      CLSPRINT                  * close the spool file
          RETURN
.
.--------------------------------------------------------------------
. Get the patients compensable details if any.
. RETURNS : CLMDET1 = If private the patients health fund name
.                     or W/C, TAC, DVA if compensable
.                     or NILL if not compensable and not private
.           CLMDET2 = If private the patients health fund member number
.                     or W/C, TAC claim numbers, DVA number and (Card Colour)
.                        if compensable 
.                     or blank if not compensable and not private
.--------------------------------------------------------------------
CMPH0000  MOVE      SP70,CLMDET1
          MOVE      SP70,CLMDET2
.
          MATCH     SP70,ALRECOMP
          gOTO      CMPH9999 IF EQUAL
.
          PACK      KEY5,ANSC,ANSL,ALRECOMP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CMPH9999
.
          MATCH     "3",TCINDC5                  * Self insured
          GOTO      CMPH9000 IF EQUAL
.
.------ see what type of claim we have if any exists ------
.
          MOVE      ZERO,FORM2
CMPH1000  ADD       ONE,FORM2
          COMPARE   SIX,FORM2
          GOTO      CMPH5000 IF NOT LESS
.
          LOAD      ANS,FORM2,TCINDC1,TCINDC2,TCINDC3:
                    TCINDC4,TCINDC5
.
          CMATCH    "W",ANS                      * Work Cover
          GOTO      CMPH2000 IF EQUAL
.
          CMATCH    "M",ANS                      * TAC
          GOTO      CMPH3000 IF EQUAL
.
          CMATCH    "V",ANS                      * VET
          GOTO      CMPH4000 IF EQUAL
.
          GOTO      CMPH1000
.
CMPH2000  OPEN      PATWC1A1,"patwc1af"          * Work Cover
          MOVE      "W/C",CLMDET1
          PACK      KEY8,ALREVISN,SP70
          CALL      RDWCOM1
          BRANCH    OVRCD,CMPH9999
.
          OPEN      PMSWX1A1,"pmswx1af"
          PACK      KEY8,ALREVISN,SP70
          CALL      RDPMWX11
          IF        OVRCD = 0
            MATCH     "3",PMWXCSTA               * Cancelled
            GOTO      CMPH9999 IF EQUAL
          ENDIF
.
          MOVE      WCCLMNO,CLMDET2
          GOTO      CMPH9999
.
CMPH3000  OPEN      PATWMAB1,"patwmabf"          * TAC
          MOVE      "TAC",CLMDET1
          PACK      KEY8,ALREVISN,SP70
          CALL      RDWMAB1
          BRANCH    OVRCD,CMPH9999
.
          MOVE      MREFNO,CLMDET2
          GOTO      CMPH9999
.
CMPH4000  MOVE      THREE,DIM1              * Get DVA Card Number
          CALL      GCCARD00
.
          OPEN      PATWVET1,"patwvetf"          * VET
          MOVE      "DVA",CLMDET1
          PACK      KEY8,ALREVISN,SP70
          CALL      RDWVET1
          BRANCH    OVRCD,CMPH9999
.
          MOVE      SP70,TDESC
          MATCH     SP70,PMCDDVAC
          IF        !@EQUAL
            PACK      KEY5,ANSD,ANSX,PMCDDVAC,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      PMCDDVAC,TDESC
            ENDIF
          ENDIF
.
          MOVE      TDESC,DIM1
.
          CLEAR     CLMDET2
          STRIP     VCLMNO
          APPEND    VCLMNO,CLMDET2
          APPEND    " (",CLMDET2
          APPEND    DIM1,CLMDET2
          APPEND    ")",CLMDET2
          RESET     CLMDET2
          GOTO      CMPH9999
.
CMPH5000  MATCH     SP70,PFUNDH
          GOTO      CMPH9999 IF EQUAL
.
          PACK      KEY14,PFUNDH,ZERO4,SP70      * Display health fund
          CALL      RDFUND1
          IF        OVRCD=1
            MOVE      PFUNDH,HFNAME
          ENDIF
.
          MOVE      HFNAME,CLMDET1
          MOVE      PFNDMM,CLMDET2
          GOTO      CMPH9999
.
CMPH9000  MOVE      "NIL",CLMDET1                * Self insured
          MOVE      SP70,CLMDET2
.
CMPH9999  RETURN
.
