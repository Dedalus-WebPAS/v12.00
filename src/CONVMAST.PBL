.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVMAST                                                    *
.* Desc      :   Data Migration Program to upload patient master data from   *
.*               a third party legacy system into the PMI webPAS module.     *
.*****************************************************************************
.* Date      :   21/01/2011                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the convmast.txt file and    *
.*               for each valid record found, it will either write a new     *
.*               patma1af record, or update an existing record for the       *
.*               patient.                                                    *
.*****************************************************************************
.*         V12.00.01 16/05/2025  Bella Turco      TSK 0955096                *
.*                   Alphanumeric changes                                    *
.*         V10.14.01 19/02/2019  Ebon Clements    TSK 0867703                *
.*                   Changed NHI ethnicity file reads to use KEY5            *
.*         V10.12.01 03/01/2018  Steve Armstrong  TSK 0298680                *
.*                   Mods to cater for validation of address fields.         *
.*                   Also remodelled ASKQ0000 page to allow editing of       *
.*                   fields after input.                                     *
.*****************************************************************************
.*         V10.10.01 20/03/2017  Steve Armstrong  TSK 0832066                *
.*                   Mods to only use Concession Card file for DVA data      *
.*                   instead of PREPAT and PMPXDVAC.                         *
.*****************************************************************************
.*         V10.08.01 06/10/2016  Steve Armstrong  TSK 0820875                *
.*                   Added new field XPEML                                   *
.*****************************************************************************
.*         V10.06.07 02/09/2015  Steve Armstrong  CAR 321254                 *
.*                   Mods to right justify local U/R number (XMAURNO).       *
.*                   Changed code to use NMPI number to read nhimasaf record.*
.*                   Changed code to validate if local U/R (XMAURNO) is      *
.*                   populated before writing nhimasaf record.               *
.*         V10.06.06 24/07/2015  Steve Armstrong  CAR 319882                 *
.*                   Mods to pad out XIWICOD1 with spaces in POUT0000.       *
.*         V10.06.05 03/07/2015  Steve Armstrong  CAR                        *
.*                   Mods to use XCHGDTE to populate PCHGDTE instead of      *
.*                   using the current date                                  *
.*         V10.06.04 19/05/2015  Jill Parkinson CAR 316999                   *
.*                   Added SETN0000 to use nhi fields for validation         *
.*         V10.06.03 23/04/2015  Steve Armstrong  CAR 315797                 *
.*                   Mods to not uppercase address line 4 (XADD4) if it      *
.*                   is an overseas address (postcode 8888)                  *
.*         V10.06.02 13/04/2015  Steve Armstrong  CAR 313894                 *
.*                   Mods to add XIWICOD1 (pmpxiwi1)                         *
.*         V10.06.01 12/03/2015  Steve Armstrong  CAR 314108                 *
.*                   Removed reference to PATCGPFD (No Longer in use)        *
.*****************************************************************************
.*         V10.04.06 24/04/2014  Steve Armstrong  CAR 261630                 *
.*                   Removed reference to port based name (FNAMEA) as it is  *
.*                   no longer used.                                         *
.*         V10.04.05 01/04/2014  Steve Armstrong  CAR 296128                 *
.*                   Fixed validation for GP Practice.                       *
.*         V10.04.04 20/03/2014  Steve Armstrong  CAR 296128                 *
.*                   Fixed mapping of DVA Card Colour.                       *
.*         V10.04.03 13/03/2014  Steve Armstrong  CAR 296128                 *
.*                   Added display of warning message if error records found *
.*         V10.04.02 12/03/2014  Steve Armstrong  CAR 296128                 *
.*                   Fixed clearing of the mapping screen for single         *
.*                   hospital environments.                                  *
.*         V10.04.01 24/02/2014  Steve Armstrong  CAR 296128                 *
.*                   Fixed length of XTMXDEAF to be DIM 3 instead of DIM 1.  *
.*                   Added code to map Cat C code for Country of Residence   *
.*                   (XRSCONT).                                              *
.*                   Added code to map relationsip code for Emergency        *
.*                   Contact (XCONREL).                                      *
.*                   Added code to map relationsip code for Nearest          *
.*                   Relative (XNEAREL).                                     *
.*****************************************************************************
.*         V10.03.12 27/11/2013  Steve Armstrong  CAR 287787                 *
.*                   Mods to only populate PTMXRDAT, PTMXOPER & PMPXWBID     *
.*                   when creating a PMI record, otherwise leave the fields  *
.*                   as they are.  Note: this is the same CAR as 276581      *
.*                   which applied the change to PMPXWBID, however, this is  *
.*                   not the field that is displayed on the screen.          *
.*         V10.03.11 26/07/2013  Steve Armstrong  CAR 287787                 *
.*                   Recompiled for changes to DGCLICUA.                     *
.*         V10.03.10 27/05/2013  Ebon Clements     CAR 282976                *
.*                   Mods to replace double quotes with single quotes        *
.*                   in patient address lines - POUT0000                     *
.*         V10.03.09 09/05/2013  Steve Armstrong   CAR 285124                *
.*                   Added mapping table for DVA Card Colour (Cat DX)        *
.*         V10.03.08 01/05/2013  Steve Armstrong   CAR 284376                *
.*                   Recompiled for changes to BRHLCOMN so that PMI messages *
.*                   can use H7CIHOSP for Facility Code.                     *
.*         V10.03.07 01/03/2013 Jill Parkinson CAR 257831                    *
.*                   Added write/update of demographics updated table        *
.*         V10.03.06 23/11/2012 Mike Laming        CAR 276581                *
.*                   Add Web User as "CONVMAST" into PMSPX2FD at SETE2000    *
.*         V10.03.05 02/11/2012 Steve Armstrong    CAR 275819                *
.*                   Fixed issue with concession cards not being cleared on  *
.*                   an update run.                                          *
.*                   02/11/2012 Steve Armstrong    CAR 274940                *
.*                   Fixed I*U on patgsrnf (UGSR0000) by changing code to    *
.*                   add (not update) a new patgsrnf record if the patient's *
.*                   name and/or date of birth and/or sex have changed, but  *
.*                   only after checking that the record doesn't already     *
.*                   exist.                                                  *
.*         V10.03.04 22/10/2012 Steve Armstrong    CAR 274939                *
.*                   Mods to make safety net card expiry date not            *
.*                   mandatory if there is a safety net card number.         *
.*         V10.03.03 09/10/2012 Steve Armstrong    CAR 274482                *
.*                   Mods to right justify numeric fields which are larger   *
.*                   than DIM 1 (XPFNDYY, XNATNUMB & XPYRRES).               *
.*         V10.03.02 18/07/2012 Steve Armstrong    CAR 268870                *
.*                   Mods to update the patgsrnf record if any of the fields *
.*                   have changed when updating an existing record.          *
.*                   Also mods to print/count errors for outdated data.      *
.*         V10.03.01 02/03/2012 Steve Armstrong    CAR 261230                *
.*                   Fixed population of pmspx2af.pmpxcrin to be blank when  *
.*                   adding a new record.                                    *
.*****************************************************************************
.*         V10.02.02 05/10/2011 Steve Armstrong    CAR 251766                *
.*                   Fixed loading of PMPXDVAC into PMCDDVAC.                *
.*         V10.02.01 25/06/2011 Steve Armstrong    CAR 240722                *
.*                   Recompiled for changes to PATLOCFD.                     *
.*                   Recompiled for changes to PMSCURFD.                     *
.*         V10.02.00 21/01/2011  Steve Armstrong   CAR 237009                *
.*                   Copied from FXMASTER and then changed as follows:       *
.*                     - Mods to cater for pipe delimited fields instead of  *
.*                       fixed length fields.                                *
.*                     - Created additional validation routines - DVAL0000,  *
.*                       VDTH0000, VNUM0000, CVAL0000, TVAL0000 and VCOD0000.*
.*                     - Added CNEWDS for "?" display of coded fields.       *
.*                     - Fixed bug with positioning after pension/dva        *
.*                       concession card input where user input "?", then    *
.*                       input invalid code.                                 *
.*                     - General clean up of code.                           *
.*                     - Added new fields for v10.02 and removed XMXCTIM     *
.*                       (ptmxctim) as this is automatically populated on a  *
.*                       write/update of patmx1af and would have overwritten *
.*                       any uploaded value.                                 *
.*****************************************************************************
.
          INC       STD001FD
.
          INC       BOKRC1FD/INC            * Booking master file
          INC       IBACONFD/INC
          INC       IBAPOSFD/INC
          INC       NHIETHFD/INC            * NHI Ethnicity
          INC       NHIMASFD/INC            * NHI Master file
          INC       NZHISIFD/INC            * NZ NHI stuff
          INC       PATALRFD/INC
          INC       PATAM1FD/INC            * Master audit file
          INC       PATCODFD/INC
          INC       PATCOMM/INC             * Standard patient variables
          INC       PATCONFD/INC            * Control file
          INC       PATDO1FD/INC
          INC       PATDSCFD/INC
          INC       PATECDFD/INC
          INC       PATFN1FD/INC
          INC       PATGSRFD/INC            * Surname / Given Name File
          INC       PATHSPFD/INC
          INC       PATINVFD/INC            * Invoice file
          INC       PATLOCFD/INC            * Inpatient location file
          INC       PATMA1FD/INC            * Master file
          INC       PATMI1FD/INC            * Admission file
          INC       PATNIDFD/INC            * NZ NHI stuff
          INC       PATTRNFD/INC
          INC       PATURAFD/INC            * U/R alteration audit file
          INC       PATVISFD/INC            * Visit file
          INC       PMSCCDFD/INC
          INC       PMSCURFD/INC
          INC       PMSHCGFD/INC            * HCP Practice
          INC       PMSHCLFD/INC            * HCP Link
          INC       PMSHCPFD/INC            * HCP
          INC       PMSPX2FD/INC            * Master file
          INC       PMSRELFD/INC            * Relationships
          INC       PMSRESFD/INC            * Patient Residency Details
          INC       PMSTLEFD/INC            * Patient Titles
          INC       PMSUPDFD/INC            * Demographics updated
          INC       WEBSECFD/INC
.
.         Patient Master Details file layout - convmast.txt
.
PTMASUPL  FILE      HL7, FIXED=4000         * Pipe delimited upload file
.
.Name     Type    Length Start Description
.----     ----    ------ ----- -----------
XURNO     DIM       8    1     U/R number/NHI Number                  (purno)
.PIPE     DIM       1    9     Pipe Delimiter
XTIT      DIM       4    10    Patient title                          (ptitl)
.PIPE     DIM       1    14    Pipe Delimiter
XSURN     DIM       40   15    Patient surname                        (ptmasnam)
.PIPE     DIM       1    55    Pipe Delimiter
XPGNAM1   DIM       40   56    Patient First Name                     (pmpxfnam)
.                                                                     (pgname)
.PIPE     DIM       1    96    Pipe Delimiter
XPGNAM2   DIM       40   97    Patient Second Name                    (pmpxsnam)
.                                                                     (pgname)
.PIPE     DIM       1    137   Pipe Delimiter
XPSURN    DIM       19   138   Previous Surname                       (ppsname)
.PIPE     DIM       1    157   Pipe Delimiter
XADD1     DIM       35   158   Patient address line 1                 (padd1)
.PIPE     DIM       1    193   Pipe Delimiter
XADD2     DIM       35   194   Patient address line 2                 (padd2)
.PIPE     DIM       1    229   Pipe Delimiter
XADD3     DIM       35   230   Patient address line 3                 (psubrb)
.PIPE     DIM       1    265   Pipe Delimiter
XADD4     DIM       35   266   Patient address line 4                 (padd4)
.PIPE     DIM       1    301   Pipe Delimiter
XPOST     DIM       8    302   Patient postcode                       (ppost)
.PIPE     DIM       1    310   Pipe Delimiter
XTELP     DIM       20   311   Patient private phone no.              (ptelep)
.PIPE     DIM       1    331   Pipe Delimiter
XTELB     DIM       20   332   Patient business phone no.             (pteleb)
.PIPE     DIM       1    352   Pipe Delimiter
XCELLPH   DIM       20   353   Patient mobile phone No.               (ptmxcell)
.PIPE     DIM       1    373   Pipe Delimiter
XPADD1    DIM       35   374   Postal Address Line 1                  (ptmxadd1)
.PIPE     DIM       1    409   Pipe Delimiter
XPADD2    DIM       35   410   Postal Address Line 2                  (ptmxadd2)
.PIPE     DIM       1    445   Pipe Delimiter
XPADD3    DIM       35   446   Postal Address Line 3                  (ptmxadd3)
.PIPE     DIM       1    481   Pipe Delimiter
XPADD4    DIM       35   482   Postal Address Line 4                  (ptmxadd4)
.PIPE     DIM       1    517   Pipe Delimiter
XPCODE    DIM       8    518   Postal Address Post Code               (ptmxpost)
.PIPE     DIM       1    526   Pipe Delimiter
XSEX      DIM       1    527   Patients sex                           (psex)
.PIPE     DIM       1    528   Pipe Delimiter
XMSTAT    DIM       3    529   Patients marital status (Cat M)        (pmstat)
.PIPE     DIM       1    532   Pipe Delimiter
XDOB      DIM       8    533   Patients date of birth (ccyymmdd)      (pbdate)
.PIPE     DIM       1    541   Pipe Delimiter
XPMICRO   DIM       20   542   Microfilm Address                      (pmicro)
.PIPE     DIM       1    562   Pipe Delimiter
XCOB      DIM       3    563   Patients country of birth (Cat C)      (pcont)
.PIPE     DIM       1    566   Pipe Delimiter
XABORIG   DIM       3    567   Aboriginality (Cat VA)                 (pmpxabrg)
.PIPE     DIM       1    570   Pipe Delimiter
XREL      DIM       3    571   Patients religion (Cat R)              (preg)
.PIPE     DIM       1    574   Pipe Delimiter
XOCCUP    DIM       14   575   Patients occupation                    (poccup)
.PIPE     DIM       1    589   Pipe Delimiter
XSMOK     DIM       1    590   Patient smoker                         (psmok)
.                                0=Unknown  1=yes  2=no
.PIPE     DIM       1    591   Pipe Delimiter
XPBDEBT   DIM       1    592   Bad Debt Indicator                     (pbdebt)
.                                0=no  1=yes
.PIPE     DIM       1    593   Pipe Delimiter
XPCASE    DIM       1    594   Case Notes Indicator                   (pcase)
.                                0=no  1=yes
.PIPE     DIM       1    595   Pipe Delimiter
XPDIET    DIM       3    596   Diet Code (Cat DC)                     (pbdiet)
.PIPE     DIM       1    599   Pipe Delimiter
XDATDTH   DIM       8    600   Date of death (ccyymmdd)               (pdecdte)
.PIPE     DIM       1    608   Pipe Delimiter
XDCEASE   DIM       1    609   Deceased indicator                     (pcease)
.                                0=no  1=yes
.PIPE     DIM       1    610   Pipe Delimiter
XDETYP    DIM       3    611   Death Type (Cat DY)                    (pmpxdety)
.PIPE     DIM       1    614   Pipe Delimiter
XAUTOP    DIM       1    615   Autopsy indicator                      (pautopy)
.                                0=no  1=yes
.PIPE     DIM       1    616   Pipe Delimiter
XNOKNAME  DIM       20   617   NOK name                               (pnkname)
.PIPE     DIM       1    637   Pipe Delimiter
XNOKADD1  DIM       35   638   NOK address line 1                     (pnkadd1)
.PIPE     DIM       1    673   Pipe Delimiter
XNOKADD2  DIM       35   674   NOK address line 2                     (pnkadd2)
.PIPE     DIM       1    709   Pipe Delimiter
XNOKADD3  DIM       35   710   NOK address line 3                     (pnksubr)
.PIPE     DIM       1    745   Pipe Delimiter
XNOKADD4  DIM       35   746   NOK address line 4                     (pnkadd4)
.PIPE     DIM       1    781   Pipe Delimiter
XNOKPOST  DIM       8    782   NOK Post Code                          (pnkpost)
.PIPE     DIM       1    790   Pipe Delimiter
XNOKPPHN  DIM       20   791   NOK private phone no.                  (pnktelp)
.PIPE     DIM       1    811   Pipe Delimiter
XNOKBPHN  DIM       20   812   NOK business phone no.                 (pnktelb)
.PIPE     DIM       1    832   Pipe Delimiter
XPMPXKMO  DIM       20   833   NOK mobile phone No.                   (pmpxkmob)
.PIPE     DIM       1    853   Pipe Delimiter
XNOKREL   DIM       10   854   NOK relationship (pmsrelaf)            (pnkrelp)
.PIPE     DIM       1    864   Pipe Delimiter
XCONNAME  DIM       20   865   Emer.contact name                      (ptmxecnm)
.PIPE     DIM       1    885   Pipe Delimiter
XCONADD1  DIM       35   886   Emer.contact address line 1            (ptmxeca1)
.PIPE     DIM       1    921   Pipe Delimiter
XCONADD2  DIM       35   922   Emer.contact address line 2            (ptmxeca2)
.PIPE     DIM       1    957   Pipe Delimiter
XCONADD3  DIM       35   958   Emer.contact address line 3            (ptmxeca3)
.PIPE     DIM       1    993   Pipe Delimiter
XCONADD4  DIM       35   994   Emer.contact address line 4            (ptmxeca4)
.PIPE     DIM       1    1029  Pipe Delimiter
XCONPOST  DIM       8    1030  Emer.contact Post Code                 (ptmxecpc)
.PIPE     DIM       1    1038  Pipe Delimiter
XCONPPHN  DIM       20   1039  Emer.contact private phone no.         (ptmxecpp)
.PIPE     DIM       1    1059  Pipe Delimiter
XCONBPHN  DIM       20   1060  Emer.contact business phone no.        (ptmxecbp)
.PIPE     DIM       1    1080  Pipe Delimiter
XPMPXCMO  DIM       20   1081  Emer.contact mobile phone No.          (pmpxcmob)
.PIPE     DIM       1    1101  Pipe Delimiter
XCONREL   DIM       10   1102  Emer. contact relationship (pmsrelaf)  (ptmxecre)
.PIPE     DIM       1    1112  Pipe Delimiter
XNEANAME  DIM       20   1113  Nearest Rel name                       (ptmxnrnm)
.PIPE     DIM       1    1133  Pipe Delimiter
XNEAADD1  DIM       35   1134  Nearest Rel address line 1             (ptmxnra1)
.PIPE     DIM       1    1169  Pipe Delimiter
XNEAADD2  DIM       35   1170  Nearest Rel address line 2             (ptmxnra2)
.PIPE     DIM       1    1205  Pipe Delimiter
XNEAADD3  DIM       35   1206  Nearest Rel address line 3             (ptmxnra3)
.PIPE     DIM       1    1241  Pipe Delimiter
XNEAADD4  DIM       35   1242  Nearest Rel address line 4             (ptmxnra4)
.PIPE     DIM       1    1277  Pipe Delimiter
XNEAPOST  DIM       8    1278  Nearest Rel Post Code                  (ptmxnrpc)
.PIPE     DIM       1    1286  Pipe Delimiter
XNEAPPHN  DIM       20   1287  Nearest Rel private phone no.          (ptmxnrpp)
.PIPE     DIM       1    1307  Pipe Delimiter
XNEABPHN  DIM       20   1308  Nearest Rel business phone no.         (ptmxnrbp)
.PIPE     DIM       1    1328  Pipe Delimiter
XPMPXRMO  DIM       20   1329  Nearest Relative Mobile Phone No.      (pmpxrmob)
.PIPE     DIM       1    1349  Pipe Delimiter
XNEAREL   DIM       10   1350  Nearest Rel relationship (pmsrelaf)    (ptmxnrre)
.PIPE     DIM       1    1360  Pipe Delimiter
.
XREGGPP   DIM       10   1361  Registered GP Practice (pmshcgaf)      (pmpxrh1g)
.PIPE     DIM       1    1371  Pipe Delimiter
XREGGP    DIM       10   1372  Registered GP (pmshcpaf)               (pmpxrhc1)
.PIPE     DIM       1    1382  Pipe Delimiter
XHFUND    DIM       6    1383  CHE/Board Code (Health Fund-patfn1af)  (pfundh)
.PIPE     DIM       1    1389  Pipe Delimiter
XHFTAB    DIM       8    1390  Health Fund Table (patfn1af)           (pfndtb)
.PIPE     DIM       1    1398  Pipe Delimiter
XFNDMM    DIM       19   1399  Patient HF Membership number           (pfndmm)
.PIPE     DIM       1    1418  Pipe Delimiter
XPFNDYY   DIM       2    1419  Years of Fund Membership               (pfndyy)
.PIPE     DIM       1    1421  Pipe Delimiter
XPFNDCG   DIM       6    1422  Last Fund Cover Change                 (pfndcg)
.PIPE     DIM       1    1428  Pipe Delimiter
XPMEDI    DIM       10   1429  Medicare Number                        (pmedi)
.PIPE     DIM       1    1439  Pipe Delimiter
XPMCCD    DIM       2    1440  Medicare Code                          (ptmxmccd)
.PIPE     DIM       1    1442  Pipe Delimiter
XMEDCEX   DIM       6    1443  Medicare Expiry Date (ccyymm)          (pmpxmedc)
.PIPE     DIM       1    1449  Pipe Delimiter
XPLDDT    DIM       8    1450  Last Discharge Date (ccyymmdd)         (plddate)
.PIPE     DIM       1    1458  Pipe Delimiter
XREPAT    DIM       10   1459  Repat number                           (pmcdcnum)
.PIPE     DIM       1    1469  Pipe Delimiter
XPENNO    DIM       15   1470  Pension number                         (ppenno)
.                                                                     (pmcdcnum)
.PIPE     DIM       1    1485  Pipe Delimiter
XPNDTE    DIM       6    1486  Pension no expiry date (ccyymm)        (ppndte)
.                                                                     (pmcdexdt)
.PIPE     DIM       1    1492  Pipe Delimiter
XDVAC     DIM       3    1493  DVA Card Colour (Cat DX)               (pmcddvac)
.PIPE     DIM       1    1496  Pipe Delimiter
XCARD     DIM       20   1497  Community Card Number                  (ptmxcard)
.PIPE     DIM       1    1517  Pipe Delimiter
XEXPD     DIM       8    1518  Comm. Card No. Exp. Date (ccyymmdd)    (ptmxcexp)
.PIPE     DIM       1    1526  Pipe Delimiter
XEXMT     DIM       3    1527  Community Card Exemption Type (Cat XM) (ptmxcxmp)
.PIPE     DIM       1    1530  Pipe Delimiter
XFAMID    DIM       12   1531  Community Card Family Id.              (ptmxfmly)
.PIPE     DIM       1    1543  Pipe Delimiter
XPUSR1    DIM       3    1544  User Defined Field 1 (Cat P1)          (pusr1)
.PIPE     DIM       1    1547  Pipe Delimiter
XPUSR2    DIM       3    1548  User Defined Field 2 (Cat P2)          (pusr2)
.PIPE     DIM       1    1551  Pipe Delimiter
XPUSR3    DIM       3    1552  User Defined Field 3 (Cat P3)          (pusr3)
.PIPE     DIM       1    1555  Pipe Delimiter
XPUSR4    DIM       3    1556  User Defined Field 4 (Cat P4)          (pusr4)
.PIPE     DIM       1    1559  Pipe Delimiter
XPUSR5    DIM       3    1560  User Defined Field 5 (Cat P5)          (pusr5)
.PIPE     DIM       1    1563  Pipe Delimiter
XPUSR6    DIM       3    1564  User Defined Field 6 (Cat P6)          (pusr6)
.PIPE     DIM       1    1567  Pipe Delimiter
XPUYN1    DIM       1    1568  User Defined Yes/No field 1            (puyn1)
.PIPE     DIM       1    1569  Pipe Delimiter
XPUYN2    DIM       1    1570  User Defined Yes/No field 2            (puyn2)
.PIPE     DIM       1    1571  Pipe Delimiter
XPUYN3    DIM       1    1572  User Defined Yes/No field 3            (puyn3)
.PIPE     DIM       1    1573  Pipe Delimiter
XPUYN4    DIM       1    1574  User Defined Yes/No field 4            (pmpxuyn4)
.PIPE     DIM       1    1575  Pipe Delimiter
XPUYN5    DIM       1    1576  User Defined Yes/No field 5            (pmpxuyn5)
.
.PIPE     DIM       1    1577  Pipe Delimiter
XALTNUMB  DIM       20   1578  Alternate ID - no longer used          (pmaialid)
.PIPE     DIM       1    1598  Pipe Delimiter
XNATNUMB  DIM       20   1599  National Number (patnidaf)             (ptninmpi)
.
.PIPE     DIM       1    1619  Pipe Delimiter
XPTYPE    DIM       3    1620  Residence/Patient Type (Cat T )        (ptype)
.PIPE     DIM       1    1623  Pipe Delimiter
XRSCONT   DIM       3    1624  Country of Residence   (Cat C )        (pmrscont)
.PIPE     DIM       1    1627  Pipe Delimiter
XPYRRES   DIM       2    1628  Number of Years Residence              (pyrres)
.PIPE     DIM       1    1630  Pipe Delimiter
XPXLNG1   DIM       3    1631  Pref. Language 1 (Cat LA)              (pmpxlng1)
.PIPE     DIM       1    1634  Pipe Delimiter
XPXINTR   DIM       1    1635  Interpreter Req'd (0=No, 1=Yes)        (pmpxintr)
.PIPE     DIM       1    1636  Pipe Delimiter
XPSTAT    DIM       1    1637  Record Status (0=Valid, 1=Merged)      (pstat)
.PIPE     DIM       1    1638  Pipe Delimiter
XRSTEXP   DIM       8    1639  Temp Residence Exp. Date (ccyymmdd)    (pmrstexp)
.PIPE     DIM       1    1647  Pipe Delimiter
XRSCOMM   DIM       127  1648  Residence Comments                     (pmrscomm)
.PIPE     DIM       1    1775  Pipe Delimiter
.
.         NZ NHI Fields
.
XMANMPI   DIM       7    1776  NHI Number                             (nhmanmpi)
.PIPE     DIM       1    1783  Pipe Delimiter
XMAURNO   DIM       8    1784  Local U/R (NHI)                        (nhmaurno)
.PIPE     DIM       1    1792  Pipe Delimiter
XMASURN   DIM       25   1793  Surname                                (nhmasurn)
.PIPE     DIM       1    1818  Pipe Delimiter
XMAGIV1   DIM       20   1819  Given Name 1                           (nhmagiv1)
.PIPE     DIM       1    1839  Pipe Delimiter
XMAGIV2   DIM       20   1840  Given Name 2                           (nhmagiv2)
.PIPE     DIM       1    1860  Pipe Delimiter
XMAGIV3   DIM       20   1861  Given Name 3                           (nhmagiv3)
.PIPE     DIM       1    1881  Pipe Delimiter
XMAPREI   DIM       1    1882  Preferred Name Indicator (1-3)         (nhmaprei)
.PIPE     DIM       1    1883  Pipe Delimiter
XMAADD1   DIM       35   1884  Address Line 1                         (nhmaadd1)
.PIPE     DIM       1    1919  Pipe Delimiter
XMAADD2   DIM       30   1920  Address Line 2                         (nhmaadd2)
.PIPE     DIM       1    1950  Pipe Delimiter
XMAADD3   DIM       30   1951  Suburb                                 (nhmaadd3)
.PIPE     DIM       1    1981  Pipe Delimiter
XMAADD4   DIM       30   1982  City/Town                              (nhmaadd4)
.PIPE     DIM       1    2012  Pipe Delimiter
XMAADD5   DIM       30   2013  Country                                (nhmaadd5)
.PIPE     DIM       1    2043  Pipe Delimiter
XMADOB    DIM       8    2044  Date of Birth (ccyymmdd)               (nhmadob)
.PIPE     DIM       1    2052  Pipe Delimiter
XMADDTH   DIM       8    2053  Date of Death (ccyymmdd)               (nhmaddth)
.PIPE     DIM       1    2061  Pipe Delimiter
XMADOMC   DIM       4    2062  Domicile Code                          (nhmadomc)
.PIPE     DIM       1    2066  Pipe Delimiter
XMARES    DIM       1    2067  Residence Status (Y/N)                 (nhmares)
.PIPE     DIM       1    2068  Pipe Delimiter
XMAETH    DIM       5    2069  Ethnicity (nhiethaf)                   (nhmaeth)
.PIPE     DIM       1    2074  Pipe Delimiter
XMASEX    DIM       1    2075  Gender                                 (nhmasex)
.PIPE     DIM       1    2076  Pipe Delimiter
XMADAT    DIM       8    2077  Date Last Updated (ccyymmdd)           (nhmadat)
.PIPE     DIM       1    2085  Pipe Delimiter
XMATIM    DIM       8    2086  Time Last Updated (hh:mm:ss)           (nhmatim)
.PIPE     DIM       1    2094  Pipe Delimiter
XMAETH2   DIM       5    2095  2nd Ethnicity (nhiethaf)               (nhmaeth2)
.PIPE     DIM       1    2100  Pipe Delimiter
XMAETH3   DIM       5    2101  3rd Ethnicity (nhiethaf)               (nhmaeth3)
.
.         Additional Fields
.
.PIPE     DIM       1    2106  Pipe Delimiter
XCHGDTE   DIM       8    2107  date of last change (ccyymmdd)         (pchgdte)
.PIPE     DIM       1    2115  Pipe Delimiter
XTMADCDT  DIM       8    2116  Demographics Confirmed Date (ccyymmdd) (ptmadcdt)
.PIPE     DIM       1    2124  Pipe Delimiter
XTMXDEAF  DIM       3    2125  Deaf (Cat DK)                          (ptmxdeaf)
.PIPE     DIM       1    2128  Pipe Delimiter
XSNTNUMB  DIM       20   2129  Safety Net Card Number                 (pmcdcnum)
.PIPE     DIM       1    2149  Pipe Delimiter
XSNTEDTE  DIM       8    2150  Saf.Net Card Expiry Date (ccyymmdd)    (pmcdexdt)
.PIPE     DIM       1    2158  Pipe Delimiter
XIWICOD1  DIM       3    2159  IWI code 1 (Category iw)               (pmpxiwi1)
.PIPE     DIM       1    2162  Pipe Delimiter
XPEML     DIM       80   2163  Patient's Email Address                (pmpxpeml)
.
.End of Record           2243
.
.         GP File - gp.dat
.
GP        FORM      1                       * gp file flag
TEMP1     IFILE     SQL, FIXED=21, KEY="U1-10"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDGP     DIM       10       10         1       Old GP code
NEWGP     DIM       10       10         11      New GP code
.End of Record                          21
.
.
.         Category-Codes File - catcodes.dat
.
CATCDFLG  FORM      1                            * Cat-Code mapping flag
TEMP2     IFILE     SQL, FIXED=11, KEY="U1-2,3-5"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDCTCAT  DIM       2        2          1       Old category
OLDCTCOD  DIM       3        3          3       Old code
NEWCTCAT  DIM       2        2          6       New category
NEWCTCOD  DIM       3        3          8       New code
.End of Record                         11
.
.
.         NOK Relationship File - relation.dat
.
RELATION  FORM      1                       * NOK Relationship file flag
TEMP3     IFILE     SQL, FIXED=21, KEY="U1-10"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDRELNS  DIM       10       10         1       Old NOK Relationship
NEWRELNS  DIM       10       10         11      New NOK Relationship
.End of Record                          21
.
.
.         Health Fund/Table File - healthfd.dat
.
HEALTHFD  FORM      1                       * Health fund/table file flag
TEMP4     IFILE     SQL, FIXED=29, KEY="U1-6,7-14"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDHFUND  DIM       6        6          1       Old health fund code
OLDTABLE  DIM       8        8          7       Old health fund table code
NEWHFUND  DIM       6        6          15      New health fund code
NEWTABLE  DIM       8        8          21      New health fund table code
.End of Record                          29
.
.
.         GP Practice File - practice.dat
.
PRACTICE  FORM      1                       * practice file flag
TEMP5     IFILE     SQL, FIXED=21, KEY="U1-10"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDPRAC   DIM       10       10         1       Old Practice code
NEWPRAC   DIM       10       10         11      New Practice code
.End of Record                          21
.
.
.         Title File - titlecod.dat
.
TITLECOD  FORM      1                       * Title Code file flag
TEMP6     IFILE     SQL, FIXED=9, KEY="U1-4"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDTITLE  DIM       4        4          1       Old Title Code
NEWTITLE  DIM       4        4          5       New Title Code
.End of Record                          9
.
.
.
. LOCAL VARIABLES
. ---------------
.
ABORFLAG  FORM      1                       * aboriginality mandatory flag
.                                              0 = mandatory
.                                              1 = not mandatory
ACTION    DIM       1                       * For PATCOMN2.PBL
ADD       DIM       2                       * For PATIOADM.INC
ADDRFLAG  FORM      1                       * address line 1 mandatory flag
.                                              0 = mandatory
.                                              1 = not mandatory
ADDRTYPE  FORM      1                       * address type
.                                              1 = patient
.                                              2 = postal
.                                              3 = next of kin
.                                              4 = emergency contact
.                                              5 = nearest relative
ADDRFLG1  FORM      1                       * patient address validation flag
.                                              0 = validate address
.                                              1 = don't validate address
ADDRFLG2  FORM      1                       * postal address validation flag
.                                              0 = validate address
.                                              1 = don't validate address
ADDRFLG3  FORM      1                       * nok address validation flag
.                                              0 = validate address
.                                              1 = don't validate address
ADDRFLG4  FORM      1                       * emer. contact address val. flag
.                                              0 = validate address
.                                              1 = don't validate address
ADDRFLG5  FORM      1                       * near. rel. address validation flag
.                                              0 = validate address
.                                              1 = don't validate address
ADDRVFLG  FORM      1                       * address validation flag
.                                              0 = validate addresses
.                                              1 = don't validate addresses
AMM       DIM       2                       * For PATIOADM.INC
AYY       DIM       2                       * For PATIOADM.INC
ACC       DIM       2                       * For PATIOADM.INC
ADDCOUNT  FORM      8                       * added record count
ADRCOUNT  FORM      8                       * address error record count
ADDMAST   FORM      1
ANYPTMA1  FORM      1
.
BJDAY     FORM      3                       * For AGECHK.PBL
.
CBTHFLAG  FORM      1                       * country of birth mandatory flag
.                                              0 = mandatory
.                                              1 = not mandatory
CHG       FORM      1                       * For AGECHK.PBL
CJDAY     FORM      3                       * For AGECHK.PBL
CODE      DIM       2
COUNT     FORM      8                       * Record counter
COUNTER   FORM      1
CODCOUNT  FORM      8                       * code error record count
CURRCENT  FORM      2
CURRDATE  DIM       8
.
DATEFLG1  FORM      1                       * Date Type flag                   
.                                               0 = full date (ccyymmdd) 
.                                               1 = partial date (ccyymm)
DATEFLG2  FORM      1                       * Dates Allowed flag
.                                               0 = any date allowed
.                                               1 = future dates not allowed
DIM1A     DIM       1
DIM1B     DIM       1
DIM2C     DIM       2
DIM2D     DIM       2
DIM2H     DIM       2
DIM2M     DIM       2
DIM2S     DIM       2
DIM2Y     DIM       2
DIM3      DIM       3
DIM30B    DIM       30
DIM30C    DIM       30
DIM30D    DIM       30
DIM4      DIM       4
DIM45     DIM       45
DIM8      DIM       8
DONE      FORM      1
DTECOUNT  FORM      8                       * date error record count
DUPCOUNT  FORM      8                       * duplicate record count
DVACCODE  DIM       3
DVACFLAG  FORM      1
.
ERORDESC  DIM       70
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
FLDIN40   DIM       40
FMON      FORM      2
FNAMED    DIM       12
FNAMEI    DIM       60
FORM8     FORM      8
FORM10    FORM      10
FYEAR     FORM      4
.
LANGFLAG  FORM      1                       * language mandatory flag
.                                              0 = mandatory
.                                              1 = not mandatory
.
MANCOUNT  FORM      8                       * mandatory field error record count
MARSFLAG  FORM      1                       * marital status mandatory flag
.                                              0 = mandatory
.                                              1 = not mandatory
.
NMPNUMB   DIM       20
NUMCOUNT  FORM      8                       * numeric error record count
.
OPERCODE  DIM       4                       * For PATIOADM.INC
OPTNDESC  DIM       28
OUTCOUNT  FORM      8                       * outdated record count
.
PCODEVAR  DIM       8
PCODFLAG  FORM      1                       * postcode mandatory flag
.                                              0 = mandatory
.                                              1 = not mandatory
PENSCODE  DIM       3
PENSFLAG  FORM      1
.
RELGFLAG  FORM      1                       * religion mandatory flag
.                                              0 = mandatory
.                                              1 = not mandatory
REMOVEZ   FORM      1
RESSFLAG  FORM      1                       * residency status mandatory flag
.                                              0 = mandatory
.                                              1 = not mandatory
.
SAVEDVAC  DIM       3                       * saved DVA Card Color Code (Cat ct)
SAVEDVAN  DIM       10                      * saved DVA Number
SAVKEY19  DIM       19
SEC1      FORM      5                       * For PATIOADM.INC
SNETCODE  DIM       3
SNETFLAG  FORM      1
STATEVAR  DIM       35
SUBRBVAR  DIM       35
SUBRFLAG  FORM      1                       * suburb mandatory flag
.                                              0 = mandatory
.                                              1 = not mandatory
.
TEMPCATG  DIM       6                       * Category or Health Fund
TEMPCODE  DIM       10                      * coded field
TEMPDATE  DIM       8
TEMPTIME  DIM       8
TEMPTYPE  FORM      1                       * Type of coded field
TIMCOUNT  FORM      8                       * time error record count
TIMEIS    DIM       8                       * For PATIOADM.INC
TMPFIELD  DIM       8                       * field name
.
UPDCOUNT  FORM      8                       * updated record count
UPDFLAG   FORM      1                       * update flag
.                                               0 = update record
.                                               1 = write new record
URCHKDGT  FORM      4
URCHKPRD  FORM      2
URNLNGTH  FORM      2
URNOWGHT  FORM      1
USERID    DIM       10
.
VCHKFLAG  FORM      1             * Validation check flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
.
WEBTITLE  DIM       80
.
.
. PROGRAM CONSTANTS
. -----------------
ADDRTYP1  INIT      "Patient"
ADDRTYP2  INIT      "Postal"
ADDRTYP3  INIT      "Next of Kin"
ADDRTYP4  INIT      "Emergency Contact"
ADDRTYP5  INIT      "Nearest Relative"
ANNO      INIT      "No "
ANYES     INIT      "Yes"
CATLOWCT  INIT      "ct"
CATLOWIW  INIT      "iw"
OPTNDES1  INIT      " Load Patient Master Data "
OPTNDES2  INIT      " Update Patient Master Data "
OPTNDES3  INIT      " Insert Hospital Code "
PIPE      INIT      "|"
URWTARAY  INIT      "234567"
ZERO4     INIT      "0000"
.
JAN       INIT      "31"
FEB       INIT      "28"
MAR       INIT      "31"
APR       INIT      "30"
MAY       INIT      "31"
JUN       INIT      "30"
JUL       INIT      "31"
AUG       INIT      "31"
SEP       INIT      "30"
OCT       INIT      "31"
NOV       INIT      "30"
DEC       INIT      "31"
.
.
.
PRGNAM    INIT      "Upload Patient Master Data"
PRGID     INIT      "CONVMAST"
VERSION   INIT      "V12.00.01"
+
.******************************************************************************
.*                                   MAIN0000                                 *
.*                                 Main Module                                *
.******************************************************************************
.
MAIN0000  CALL      INIT0000                * Initialise variables
          BRANCH    EXIT,MAIN9000
.
MAIN1000  CALL      OPTN0000                * Select Option
          BRANCH    OPTION,MAIN2000:        * load PMI
                           MAIN2000:        * update PMI
                           MAIN5000         * insert Hospital code
          GOTO      MAIN9000
.
MAIN2000  CALL      OPEN0000                * Open files
          BRANCH    EXIT,MAIN9000           * file not found
.
          CALL      DMAP0000                * Display Mapping, get Hospital Id.
          BRANCH    EXIT,MAIN1000:          * no selected
                         MAIN9000           * cancel selected
.
          CALL      ASKQ0000                * Ask questions/preferences
          BRANCH    EXIT,MAIN1000:          * no selected
                         MAIN9000           * cancel selected
.
          CALL      MANQ0000                * Ask mandatory field questions
          BRANCH    EXIT,MAIN1000           * cancel selected
.
          CALL      CONTQST                 * Ok to continue ?
          BRANCH    CEXIT,MAIN4000:         * yes
                          MAIN1000:         * no
                          MAIN9000          * cancel
.
MAIN4000  CALL      UPLD0000                * Process the master file
          GOTO      MAIN9000
.
.         Option 3 - Update hospital id
.
MAIN5000  CALL      KHOS0000                * get hospital ID
          BRANCH    EXIT,MAIN1000           * nothing or exitchar entered
.
          CALL      CONTQST                 * Ok to continue ?
          BRANCH    CEXIT,MAIN5500:         * yes
                          MAIN5000:         * no
                          MAIN1000          * cancel
.
MAIN5500  CALL      UPPX0000                * process all records
          GOTO      MAIN1000
.
.
MAIN9000  MATCH     SP6,PGM
          GOTO      MAIN9999 IF EQUAL
.
          CHAIN     PGM                     * Chain back to appropriate menu
MAIN9999  SHUTDOWN  ""
+
.******************************************************************************
.*                                  INIT0000              Called by: MAIN0000 *
.*                      Initialise Variables & Open Files                     *
.******************************************************************************
.
INIT0000  CALL      DISPHEAD                * Display screen header
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TWENTY1;*138,PTCNNHII
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
.
          DISPLAY   *P64:24,"ibapostf"
          OPEN      IBAPOST1,"ibapostf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"            
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"            
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"            
.
          DISPLAY   *P64:24,"patnidaf";
          OPEN      PATNIDA1,"patnidaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patgsrnf";
          OPEN      PATGSRN1,"patgsrnf"
          OPEN      PATGSRN2,"patgsrnf"
          OPEN      PATGSRN3,"patgsrnf"
          OPEN      PATGSRN4,"patgsrnf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"pmsccdaf";
          OPEN      PMSCCDA1,"pmsccdaf"
.
          DISPLAY   *P64:24,"pmshcgaf";
          OPEN      PMSHCGA1,"pmshcgaf"
.
          DISPLAY   *P64:24,"pmshclaf";
          OPEN      PMSHCLA1,"pmshclaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pmsrelaf";
          OPEN      PMSRELA1,"pmsrelaf"
.
          DISPLAY   *P64:24,"pmsresaf";
          OPEN      PMSRESA1,"pmsresaf"
.
          DISPLAY   *P64:24,"pmstleaf";
          OPEN      PMSTLEA1,"pmstleaf"
.
          MOVE      ONE,CNEWDS
.
          IF        PTCNNHII = 1
            OPEN        NHIETHA1,"nhiethaf"
            OPEN        NHIMASA1,"nhimasaf"
          ENDIF
.
.         Audit Parameters
.
          READ      CONTROLF,TEN;*213,CAUDM
          IF        CAUDM = 0
            OPEN      PATAM1A1,"patam1af"
          ENDIF
          READ      CONTROLF,TEN9;*208,CPMIAD
          READ      CONTROLF,EIGHTY;*140,PTCNANMA
          IF        PTCNANMA = 1
            OPEN      NHIAUDMA,"nhiaudma"
          ENDIF
.
          MOVE      ZERO,ANYPTMA1
          PACK      KEY8,SP8
          CALL      RDSMAST1
          CALL      RDKMAST1                * records on patma1af ?
          BRANCH    OVRCD,INIT9999          * no
          MOVE      ONE,ANYPTMA1            * yes
.
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: MAIN0000 *
.*                               Select Option                                *
.******************************************************************************
.
OPTN0000  MOVE      ZERO,EXIT
          MOVE      "convmast.txt",FNAMED
          MOVE      SEVEN,CVERT
.
          HLINE     *G37,2,53,80
          DISPLAY   *P1:4,*EF:
                    *P2:4,*V2LON,"0",*HOFF," = Exit":
                    *P2:5,*V2LON,"1",*HOFF," = Load Patient Master data from ":
                                               "'convmast.txt'";
          IF        ANYPTMA1 = 1
            DISPLAY   *P2:6,*V2LON,"2",*HOFF," = Update Patient Master data ":
                                                "from a nominated file";
            ADD       ONE,CVERT
            IF        IBCNMHOS = 1
              DISPLAY  *P2:7,*V2LON,"3",*HOFF," = Insert Hospital code ":
                                      "into existing records (if blank)";
              ADD      ONE,CVERT
            ENDIF
          ENDIF
.
          KEYIN     *P1:CVERT,*EL,"Select Option : __",*P17:CVERT,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9000 IF EQUAL
.                                           * select correct Option number
          IF        ANYPTMA1 = 1
            IF        IBCNMHOS = 1
              LOAD      OPTNDESC,OPTION,OPTNDES1,OPTNDES2,OPTNDES3
              DISPLAY   *P54:2,*V2LON,*+,OPTNDESC
              BRANCH    OPTION,OPTN9999,OPTN5000,OPTN7000
            ENDIF
            LOAD      OPTNDESC,OPTION,OPTNDES1,OPTNDES2
            DISPLAY   *P54:2,*V2LON,*+,OPTNDESC
            BRANCH    OPTION,OPTN9999,OPTN5000
          ENDIF
.
          LOAD      OPTNDESC,OPTION,OPTNDES1
          DISPLAY   *P54:2,*V2LON,*+,OPTNDESC
          BRANCH    OPTION,OPTN9999
          GOTO      OPTN0000
.
OPTN5000  CALL      KASCI000
          BRANCH    EXIT,OPTN0000
          RESET     FNAMED                  * reset new input file name
          GOTO      OPTN9999
.
OPTN7000  MOVE      TWO,EXIT
          GOTO      OPTN9999
.
OPTN9000  MOVE      ONE,EXIT
          GOTO      OPTN9999
.
OPTN9999  RETURN
.
.******************************************************************************
.*                                 KASCI000                                   *
.*                            Keyin ASCI file                                 *
.* Returns: EXIT  0 = no file name entered                                    *
.*                1 = valid filename entered                                  *
.******************************************************************************
.
KASCI000  KEYIN     *P1:11,*EF,"Keyin Path &/or File Name : ",*V2LON,FNAMEI
.
          PACK      FNAMEI,FNAMEI,SP20,SP20,SP20
.
          MATCH     SP70,FNAMEI             * anything entered ?
          GOTO      KASCI950 IF EQUAL       * no
.
          SCAN      "/",FNAMEI
          GOTO      KASCI100 IF EQUAL       * has a path
.
          RESET     FNAMEI
          SCAN      ".txt",FNAMEI
          GOTO      KASCI100 IF NOT EQUAL
          BUMP      FNAMEI,-1               * remove ".txt" if just a file name
          APPEND    SP20,FNAMEI
.
KASCI100  RESET     FNAMEI
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PTMASUPL,FNAMEI         * open file (pipe delimited fields)
          TRAPCLR   IO
.
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"File not found.  ";
            CALL      HITENTER
            GOTO      KASCI0000
          ENDIF
. 
.                                           * find file name for display
          MOVE      ZERO,DONE
          MOVE      FNAMEI,FNAMED
          REPEAT
            SCAN      "/",FNAMEI
            IF        @EQUAL
              BUMP      FNAMEI
              MOVE      FNAMEI,FNAMED
            ELSE
              MOVE      ONE,DONE
            ENDIF
          UNTIL       DONE = 1
. 
          SQUEEZE   FNAMED
          SCAN      ".txt",FNAMED
          IF        !@EQUAL
            ENDSET    FNAMED
            APPEND    ".txt",FNAMED
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      KASCI999
.
KASCI950  MOVE      ONE,EXIT
.
KASCI999  RETURN
+
.******************************************************************************
.*                                  OPEN0000              Called by: MAIN0000 *
.*                                 Open Files                                 *
.******************************************************************************
.
OPEN0000  MOVE      ZERO,EXIT
          COMPARE   ONE,OPTION
          GOTO      OPEN1000 IF NOT EQUAL
.
.         Open convmast.txt - pmi data
.
          TRAP      OPEN9000 IF IO
          OPEN      PTMASUPL,"convmast"
          TRAPCLR   IO
.
.         Open mapping tables
.
OPEN1000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP1,"gp"             * Check for gp file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,GP              * gp file doesnt exist
          ELSE
            MOVE      ONE,GP               * gp file does exist
          ENDIF
.
.         Category-Codes mapping file (patcodes)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP2,"catcodes"             * Cat-Code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,CATCDFLG              * no
          ELSE
            MOVE      ONE,CATCDFLG               * yes
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP3,"relation"       * Check for NOK relationship file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,RELATION         * file doesnt exist
          ELSE
            MOVE      ONE,RELATION          * file does exist
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP4,"healthfd"        * Check for health fund file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HEALTHFD         * Health fund file doesnt exist
          ELSE
            MOVE      ONE,HEALTHFD          * Health fund file does exist
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP5,"practice"        * Check for practice file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,PRACTICE         * practice file doesnt exist
          ELSE
            MOVE      ONE,PRACTICE          * practice file does exist
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP6,"titlecod"        * Check for title code file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,TITLECOD         * file doesnt exist
          ELSE
            MOVE      ONE,TITLECOD          * file does exist
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9000  NORETURN
          TRAPCLR   IO
          DISPLAY   *P1:24,*EL,*B,"convmast.txt does not exist.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.******************************************************************************
.*                                  DMAP0000              Called by: MAIN0000 *
.*                       Display File Name & Mapping files                    *
.******************************************************************************
.
DMAP0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:4,*EF,*V2LON,SP9,*ULON,"Mapping Tables"
.
          MOVE      DNO,DIM3
          LOAD      DIM3,GP,DYES
.
          DISPLAY   *P1:5,*EL,"Mapping GP (pmshcpaf)             ",*V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,CATCDFLG,DYES
.
          DISPLAY   *P1:6,*EL,"Mapping Category/Codes (patcodes) ",*V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,RELATION,DYES
.
          DISPLAY   *P1:7,*EL,"Mapping Relationship (pmsrelaf)   ",*V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HEALTHFD,DYES
.
          DISPLAY   *P1:8,*EL,"Mapping H/F & Table (patfn1af)    ",*V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,PRACTICE,DYES
.
          DISPLAY   *P1:9,*EL,"Mapping GP Practice (pmshcgaf)    ",*V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,TITLECOD,DYES
.
          DISPLAY   *P1:10,*EL,"Mapping Title Code (pmstleaf)     ",*V2LON,DIM3
.
          DISPLAY   *P10:12,*EL,*V2LON,*ULON,"Audits"
.
          MOVE      DYES,DIM3
          LOAD      DIM3,CAUDM,DNO
.
          DISPLAY   *P1:13,*EL,"Master File Audit (patam1af)      ",*V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,CPMIAD,DYES
.
          DISPLAY   *P1:14,*EL,"U/R Changes Audit (pataurdf)      ",*V2LON,DIM3
.
DMAP7000  COMPARE   ONE,OPTION
          IF        @EQUAL
            DISPLAY   *P5:22,*EF,*V2LON,"Note : This program uploads all ":
                      "records in the 'convmast.txt' file"
          ELSE
            DISPLAY   *P5:22,*EF,*V2LON,"Note : This program updates or adds ":
                      "records from the '",FNAMED,"' file"
          ENDIF
.
          CALL      CONTQST                      * Ok to continue ?
          BRANCH    CEXIT,DMAP9999:              * Yes
                          DMAP9000:              * No
                          DMAP9500               * Cancel
.
.
DMAP9000  MOVE      ONE,EXIT
          GOTO      DMAP9999
.
DMAP9500  MOVE      TWO,EXIT
.
DMAP9999  RETURN
+
.******************************************************************************
.*                                  ASKQ0000              Called by: MAIN0000 *
.*                     Set flags for Questions/preferences                    *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.******************************************************************************
.
ASKQ0000  DISPLAY   *P1:4,*EF;
.
          CALL      KHOS0000                * Keyin hospital ID
          BRANCH    EXIT,ASKQ9100
.
.         Ask if we are removing leading zeroes from U/R numbers
.
          CALL      RZER0000
.
.         Ask if we are loading Pension concession cards and if so, get the
.         Pension concession card code
.
ASKQ2000  CALL      KPEN0000
          BRANCH    EXIT,ASKQ9100                * exitchar entered
.
.         Ask if we are loading DVA concession cards and if so, get the
.         DVA concession card code
.
          CALL      KDVA0000
          BRANCH    EXIT,ASKQ9100                * exitchar entered
.
.         Ask if we are loading Safety Net concession cards and if so, get the
.         Safety Net concession card code
.
          CALL      KSNT0000
          BRANCH    EXIT,ASKQ9100                * exitchar entered
.
.         Ask if we are validating addresses (Aust. only)
.
          CALL      KADD0000
.
.         Ask if this is a validation only run
.
          CALL      ASKV0000
.
.         Edit fields before posting/cancelling
.
          CALL      SEL0000                      * select field to modify
          BRANCH    EXIT,ASKQ9100                * (C)ancel selected
.
          MOVE      ZERO,EXIT
          GOTO      ASKQ9999
.
ASKQ9100  MOVE      ONE,EXIT
          GOTO      ASKQ9999
.
ASKQ9200  MOVE      TWO,EXIT
.
ASKQ9999  RETURN
+
.****************************************************************************
.*                                   SEL0000           Called by: ML0000    *
.*                         Select field to modify or post                   *
.*    Returns:  EXIT    =       (0)  Post was selected.                     *
.*                              (1)  Cancel was selected.                   *
.****************************************************************************
.
SEL0000   CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SEL9000 IF EQUAL         * Post was selected
          GOTO      SEL9100 IF LESS          * Cancel was selected
.
          IF        IBCNMHOS = 1 & PTCNHDPS > 1
            BRANCH    CCITEM,SEL1000:        * hospital
                             SEL2000:        * remove leading zeroes
                             SEL3000:        * pension card code
                             SEL4000:        * dva card code
                             SEL5000:        * safety net card code
                             SEL6000:        * address validations
                             SEL7000         * validation run only
          ENDIF
.
          IF        IBCNMHOS = 1 & PTCNHDPS < 2
            BRANCH    CCITEM,SEL1000:        * hospital
                             SEL2000:        * remove leading zeroes
                             SEL3000:        * pension card code
                             SEL4000:        * dva card code
                             SEL5000:        * safety net card code
                             SEL7000         * validation run only
          ENDIF
.
          IF        IBCNMHOS <> 1 & PTCNHDPS > 1
            BRANCH    CCITEM,SEL2000:        * remove leading zeroes
                             SEL3000:        * pension card code
                             SEL4000:        * dva card code
                             SEL5000:        * safety net card code
                             SEL6000:        * address validations
                             SEL7000         * validation run only
          ENDIF
.
          IF        IBCNMHOS <> 1 & PTCNHDPS < 2
            BRANCH    CCITEM,SEL2000:        * remove leading zeroes
                             SEL3000:        * pension card code
                             SEL4000:        * dva card code
                             SEL5000:        * safety net card code
                             SEL7000         * validation run only
          ENDIF
.
          BEEP
          GOTO      SEL0000                  * invalid
.
SEL1000   CALL      KHOS0000                 * hospital
          BRANCH    EXIT,SEL9100
          GOTO      SEL0000
.
SEL2000   CALL      RZER0000                 * remove leading zeroes
          GOTO      SEL0000
.
SEL3000   CALL      KPEN0000                 * pension card code
          BRANCH    EXIT,SEL9100
          GOTO      SEL0000
.
SEL4000   CALL      KDVA0000                 * dva card code
          BRANCH    EXIT,SEL9100
          GOTO      SEL0000
.
SEL5000   CALL      KSNT0000                 * safety net card code
          BRANCH    EXIT,SEL9100
          GOTO      SEL0000
.
SEL6000   CALL      KADD0000                 * address validations
          GOTO      SEL0000
.
SEL7000   CALL      ASKV0000                 * validation run only
          GOTO      SEL0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SEL9000   MOVE      ZERO,EXIT                * Post was selected
          GOTO      SEL9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SEL9100   MOVE      ONE,EXIT                 * Cancel was selected
.
SEL9999   RETURN
+
.*****************************************************************************
.*                            ASKV0000             Called by: ASKQ0000       *
.*                 Ask if this a validation only run                         *
.* Returns: VCHKFLAG - validation flag                                       *
.*                     0 = Yes - validation only                             *
.*                     1 = No - data uploaded                                *
.*****************************************************************************
.
.         Ask if this is a validation only run, or if data is being written
.         to the database
.
ASKV0000  MOVE      ANSY,ANS
.
          IF        IBCNMHOS = 1
            MOVE      SEVEN,COPTION
          ELSE
            MOVE      SIX,COPTION
          ENDIF
.
          COMPARE   TWO,PTCNHDPS                 * Australia ?
          IF        @LESS
            SUB       ONE,COPTION                * no
          ENDIF
.
          KEYIN     *P1:22,*EL,*V2LON,*DV,COPTION,*HOFF:
                    ". Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") :":
                    *P29:22,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P29:22,*V2LON,DYES,*HOFF:
                      *P43:22,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKV9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P29:22,*V2LON,DNO,*HOFF:
                      *P43:22,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKV9999
          ENDIF
.
          GOTO      ASKV0000                     * invalid input
.
ASKV9999  RETURN
+
.*****************************************************************************
.*                            RZER0000             Called by: ASKQ0000       *
.*               Ask if we are removing leading zeroes from U/R's            *
.* Returns: REMOVEZ - Remove leading zero from U/R flag                      *
.*                    0 = No                                                 *
.*                    1 = Yes                                                *
.*****************************************************************************
.
RZER0000  IF        IBCNMHOS = 1
            MOVE      TWO,COPTION
          ELSE
            MOVE      ONE,COPTION
          ENDIF
          KEYIN     *P1:5,*EL,*V2LON,*DV,COPTION,*HOFF:
                    ". Remove leading zero's from UR (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ")              :":
                    *P56:5,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       "nNyY",ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ONE,REMOVEZ
            DISPLAY   *P56:5,*V2LON,DYES
            GOTO      RZER9999
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ZERO,REMOVEZ
            DISPLAY   *P56:5,*V2LON,DNO
            GOTO      RZER9999
          ENDIF
.
          GOTO      RZER0000
.
RZER9999  RETURN
+
.******************************************************************************
.*                                  MANQ0000              Called by: MAIN0000 *
.*                     Set flags for Mandatory fields                         *
.******************************************************************************
.
MANQ0000  MOVE      ONE,ADDRFLAG                 * default mandatory flags off
          MOVE      ONE,SUBRFLAG
          MOVE      ONE,PCODFLAG
          MOVE      ONE,MARSFLAG
          MOVE      ONE,CBTHFLAG
          MOVE      ONE,ABORFLAG
          MOVE      ONE,RELGFLAG
          MOVE      ONE,RESSFLAG
          MOVE      ONE,LANGFLAG
.
          DISPLAY   *P1:4,*EF,*P5:4,*V2LON,*ULON,"Mandatory Fields",*HOFF:
                    *P1:6,*V2LON," 1",*HOFF,". Address Line 1   : ",*V2LON,DNO:
                    *P1:7," 2",*HOFF,". Suburb           : ",*V2LON,DNO:
                    *P1:8," 3",*HOFF,". Postcode         : ",*V2LON,DNO:
                    *P1:9," 4",*HOFF,". Marital Status   : ",*V2LON,DNO:
                    *P1:10," 5",*HOFF,". Country of Birth : ",*V2LON,DNO:
                    *P1:11," 6",*HOFF,". Aboriginality    : ",*V2LON,DNO:
                    *P1:12," 7",*HOFF,". Religion         : ",*V2LON,DNO:
                    *P1:13," 8",*HOFF,". Resident Status  : ",*V2LON,DNO:
                    *P1:14," 9",*HOFF,". Language         : ",*V2LON,DNO
.
MANQ1000  CALL      MAINQST                      * Select item, post or cancel
.
          COMPARE   ZERO,CCITEM
          GOTO      MANQ8000 IF EQUAL            * Post
          GOTO      MANQ9000 IF LESS             * Cancel
.
.         An item was selected, so change the flag
.
          BRANCH    CCITEM,MANQ2100:             * address line 1
                           MANQ2200:             * suburb
                           MANQ2300:             * postcode
                           MANQ2400:             * marital status
                           MANQ2500:             * country of birth
                           MANQ2600:             * aboriginality
                           MANQ2700:             * religion
                           MANQ2800:             * resident status
                           MANQ2900              * language
          GOTO      MANQ1000                     * invalid option
.
.         Address Line 1
.
MANQ2100  IF        ADDRFLAG = 1
            MOVE      ZERO,ADDRFLAG
            GOTO      MANQ7000
          ELSE
            MOVE      ONE,ADDRFLAG
            GOTO      MANQ7100
          ENDIF
.
.         Suburb
.
MANQ2200  IF        SUBRFLAG = 1
            MOVE      ZERO,SUBRFLAG
            GOTO      MANQ7000
          ELSE
            MOVE      ONE,SUBRFLAG
            GOTO      MANQ7100
          ENDIF
.
.         Postcode
.
MANQ2300  IF        PCODFLAG = 1
            MOVE      ZERO,PCODFLAG
            GOTO      MANQ7000
          ELSE
            MOVE      ONE,PCODFLAG
            GOTO      MANQ7100
          ENDIF
.
.         Marital Status
.
MANQ2400  IF        MARSFLAG = 1
            MOVE      ZERO,MARSFLAG
            GOTO      MANQ7000
          ELSE
            MOVE      ONE,MARSFLAG
            GOTO      MANQ7100
          ENDIF
.
.         Country of Birth
.
MANQ2500  IF        CBTHFLAG = 1
            MOVE      ZERO,CBTHFLAG
            GOTO      MANQ7000
          ELSE
            MOVE      ONE,CBTHFLAG
            GOTO      MANQ7100
          ENDIF
.
.         Aboriginality
.
MANQ2600  IF        ABORFLAG = 1
            MOVE      ZERO,ABORFLAG
            GOTO      MANQ7000
          ELSE
            MOVE      ONE,ABORFLAG
            GOTO      MANQ7100
          ENDIF
.
.         Religion
.
MANQ2700  IF        RELGFLAG = 1
            MOVE      ZERO,RELGFLAG
            GOTO      MANQ7000
          ELSE
            MOVE      ONE,RELGFLAG
            GOTO      MANQ7100
          ENDIF
.
.         Resident Status
.
MANQ2800  IF        RESSFLAG = 1
            MOVE      ZERO,RESSFLAG
            GOTO      MANQ7000
          ELSE
            MOVE      ONE,RESSFLAG
            GOTO      MANQ7100
          ENDIF
.
.         Language
.
MANQ2900  IF        LANGFLAG = 1
            MOVE      ZERO,LANGFLAG
            GOTO      MANQ7000
          ELSE
            MOVE      ONE,LANGFLAG
            GOTO      MANQ7100
          ENDIF
.
.         Set flag to make field mandatory
.
MANQ7000  ASSIGN    (FIVE+CCITEM),CVERT
          DISPLAY   *P24:CVERT,*EL,*V2LON,DYES
          GOTO      MANQ1000
.
.         Set flag to make field not mandatory
.
MANQ7100  ASSIGN    (FIVE+CCITEM),CVERT
          DISPLAY   *P24:CVERT,*EL,*V2LON,DNO
          GOTO      MANQ1000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
MANQ8000  DISPLAY   *P1:4,*EF
          IF        VCHKFLAG = 1
            DISPLAY   *P1:6,"Validation mode  (No data will be uploaded)"
          ELSE
            DISPLAY   *P1:6,"Normal mode  (Data will be uploaded)"
          ENDIF
          DISPLAY   *P1:23,*EF,"Upload will commence."
          MOVE      ZERO,EXIT                    * Post was selected
          GOTO      MANQ9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
MANQ9000  MOVE      ONE,EXIT                     * Cancel was selected
.
MANQ9999  RETURN
+
.******************************************************************************
.*                                  KHOS0000              Called by: MAIN0000 *
.*                            Keyin the hospital code                         *
.******************************************************************************
.
KHOS0000  IF        OPTION = 1 | OPTION = 2
            MOVE      FOUR,EVERT
            MOVE      FIFTY6,ECOL
          ELSE
            MOVE      TEN2,EVERT
            MOVE      TWENTY1,ECOL
            DISPLAY   *P1:EVERT,*EF;
          ENDIF
.
          COMPARE   ONE,IBCNMHOS
          GOTO      KHOS9000 IF NOT EQUAL
.
          IF        OPTION = 1 | OPTION = 2
            DISPLAY   *P1:EVERT,*EL,*V2LON,SP1,ONE,*HOFF:
                      ". Hospital Id                                      : "
          ELSE
            DISPLAY   *P1:EVERT,*EL,"Hospital Id : "
          ENDIF
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND                * not mandatory
.
          CALL      PATHSPKY
          IF        OPTION = 1 | OPTION = 2
            BRANCH    EXIT,KHOS8000:             * nothing or spaces entered
                           KHOS9100              * exitchar entered
          ELSE
            BRANCH    EXIT,KHOS9100:             * nothing or spaces entered
                           KHOS9100              * exitchar entered
          ENDIF
.
          IF        OPTION = 1 | OPTION = 2
            DISPLAY   *P61:EVERT,*EL,PTHSNAME
          ELSE
            DISPLAY   *P30:EVERT,*EL,PTHSNAME
          ENDIF
          GOTO      KHOS9000
.
KHOS8000  MOVE      SP3,PTHSHOSP
          IF        OPTION = 1 | OPTION = 2
            DISPLAY   *P56:EVERT,*EL
          ENDIF
.
KHOS9000  MOVE      ZERO,EXIT
          GOTO      KHOS9999
.
KHOS9100  MOVE      ONE,EXIT
.
KHOS9999  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                           Process The Master File                          *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CURRCENT
.
          DISPLAY   *P1:13,*EF,"Processing ",*V2LON,FNAMED,*HOFF:
                    *P1:15,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:17,"U/R Number : ":
                    *P1:18,"Surname    : ":
                    *P1:19,"Records    : ":
                    *P1:24,"Processing ",*V2LON,FNAMED,*HOFF;
.
          MOVE      ZERO,COUNT                   * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,ADRCOUNT                * init.address error rec. count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,DTECOUNT                * init. date error record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
          MOVE      ZERO,NUMCOUNT                * init. num error record count
          MOVE      ZERO,TIMCOUNT                * init. time error record count
          MOVE      ZERO,OUTCOUNT                * init. outdated record count
          MOVE      ZERO,UPDCOUNT                * initialise upd. record count
.
          CALL      HEAD0000                * Print the report header
.
.         Read the convmast.txt file
.
UPLD1000  READ      PTMASUPL,SEQ;XURNO,XTIT,XSURN,XPGNAM1,XPGNAM2,XPSURN:
                                 XADD1,XADD2,XADD3,XADD4,XPOST:
                                 XTELP,XTELB,XCELLPH,XPADD1,XPADD2:
                                 XPADD3,XPADD4,XPCODE,XSEX,XMSTAT:
                                 XDOB,XPMICRO,XCOB,XABORIG,XREL:
                                 XOCCUP,XSMOK,XPBDEBT,XPCASE,XPDIET:
                                 XDATDTH,XDCEASE,XDETYP,XAUTOP,XNOKNAME:
                                 XNOKADD1,XNOKADD2,XNOKADD3,XNOKADD4,XNOKPOST:
                                 XNOKPPHN,XNOKBPHN,XPMPXKMO,XNOKREL,XCONNAME:
                                 XCONADD1,XCONADD2,XCONADD3,XCONADD4,XCONPOST:
                                 XCONPPHN,XCONBPHN,XPMPXCMO,XCONREL,XNEANAME:
                                 XNEAADD1,XNEAADD2,XNEAADD3,XNEAADD4,XNEAPOST:
                                 XNEAPPHN,XNEABPHN,XPMPXRMO,XNEAREL,XREGGPP:
                                 XREGGP,XHFUND,XHFTAB,XFNDMM,XPFNDYY:
                                 XPFNDCG,XPMEDI,XPMCCD,XMEDCEX,XPLDDT:
                                 XREPAT,XPENNO,XPNDTE,XDVAC,XCARD:
                                 XEXPD,XEXMT,XFAMID,XPUSR1,XPUSR2:
                                 XPUSR3,XPUSR4,XPUSR5,XPUSR6,XPUYN1:
                                 XPUYN2,XPUYN3,XPUYN4,XPUYN5,XALTNUMB:
                                 XNATNUMB,XPTYPE,XRSCONT,XPYRRES,XPXLNG1:
                                 XPXINTR,XPSTAT,XRSTEXP,XRSCOMM:
                                 XMANMPI,XMAURNO,XMASURN,XMAGIV1,XMAGIV2:
                                 XMAGIV3,XMAPREI,XMAADD1,XMAADD2,XMAADD3:
                                 XMAADD4,XMAADD5,XMADOB,XMADDTH,XMADOMC:
                                 XMARES,XMAETH,XMASEX,XMADAT,XMATIM:
                                 XMAETH2,XMAETH3,XCHGDTE,XTMADCDT,XTMXDEAF:
                                 XSNTNUMB,XSNTEDTE,XIWICOD1,XPEML
          GOTO      UPLD9000 IF OVER
.
          ADD       ONE,COUNT                    * increment records read
          IF        (COUNT%1000)=0 | COUNT = 1
            DISPLAY   *P14:17,*V2LON,XURNO:
                      *P14:18,XSURN:
                      *P14:19,COUNT;
          ENDIF
.
          CALL      POUT0000                     * pad out fields with spaces
.
          REP       UPPLOW,XSURN
          REP       UPPLOW,XPSURN
          REP       UPPLOW,XPGNAM1
          REP       UPPLOW,XPGNAM2
          REP       UPPLOW,XADD1
          REP       UPPLOW,XADD2
          REP       UPPLOW,XADD3
.
.         The address line 4 should not be uppercased unless this
.         is an overseas address, otherwise the country description
.         may not match the Cat C description.  If not an overseas
.         address, uppercasing will be done in SETM0000 (CAR 315797).
.
.>>>>>    REP       UPPLOW,XADD4
.
          REP       UPPLOW,XPADD1
          REP       UPPLOW,XPADD2
          REP       UPPLOW,XPADD3
          REP       UPPLOW,XPADD4
          REP       UPPLOW,XNOKNAME
          REP       UPPLOW,XNOKADD1
          REP       UPPLOW,XNOKADD2
          REP       UPPLOW,XNOKADD3
          REP       UPPLOW,XNOKADD4
          REP       UPPLOW,XCONNAME
          REP       UPPLOW,XCONADD1
          REP       UPPLOW,XCONADD2
          REP       UPPLOW,XCONADD3
          REP       UPPLOW,XCONADD4
          REP       UPPLOW,XNEANAME
          REP       UPPLOW,XNEAADD1
          REP       UPPLOW,XNEAADD2
          REP       UPPLOW,XNEAADD3
          REP       UPPLOW,XNEAADD4
.
          CALL      CLPATMAS                * Clear the master file variables
          CALL      CLPMSPX2                * Clear master file 2nd extension
          CALL      CLNHIMAS                * Clear nhi master file
.
          CALL      FMUR0000                * format U/R number
.
          CALL      MAND0000                * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      DVAL0000                     * date validation 
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      TVAL0000                     * time validation 
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VNUM0000                * validate numeric fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VDTH0000                * validate death related fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          PACK      KEY8,DIM8
          CALL      RDMAST1                 * Read the master file
          BRANCH    OVRCD,UPLD5000
.
.         U/R already exists
.
          COMPARE   TWO,OPTION
          GOTO      UPLD3000 IF EQUAL
.
          MOVE      "Duplicate U/R Number",ERORDESC
          PACK      ERORDESC,ERORDESC,SP70
          CALL      PERR0000
          ADD       ONE,DUPCOUNT            * increment dupl. record count
          GOTO      UPLD1000
.
.         Update an existing U/R (Option 2 only)
.
UPLD3000  MATCH     SP8,XCHGDTE
          GOTO      UPLD4000 IF EQUAL
.
          MATCH     PCHGDTE,XCHGDTE
          IF        @LESS
            MOVE      "Outdated data",ERORDESC
            PACK      ERORDESC,ERORDESC,SP70
            CALL      PERR0000
            ADD       ONE,OUTCOUNT          * increment outdated record count
            GOTO      UPLD1000              * only update if xchgdte >= pchgdte
          ENDIF
.
UPLD4000  MOVE      ZERO,ADDMAST            * flag for Concession Card routine
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          IF        PTCNNHII=1
            PACK      KEY7,XMANMPI,SP70     * CAR 321254
            CALL      RDNHMAS1
            IF        OVRCD=1
              CALL      CLNHIMAS
            ENDIF
          ENDIF
.
          CALL      ACTMSAV                 * save current patient variables
.
          CALL      SETM0000
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
          CALL      SETE0000                * Set up the master extn variables
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
          CALL      SETN0000                * Set up nhi fields
.
          CALL      CVAL0000                * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          BRANCH    VCHKFLAG,UPLD1000       * error checking only
.
          CALL      UPMAST1                 * update Master with Latest
          CALL      UPPMPX21                * update Mast.Extn.2      *I-152314
          CALL      WRUPD000                * write demographics updated table
.
          CALL      UGSR0000                * update patgsrnf record
          ADD       ONE,UPDCOUNT            * increment upd. record count
          GOTO      UPLD6000
.
.         New record to be posted to master file
.
UPLD5000  MOVE      ONE,ADDMAST             * flag for Concession Card routine
          CALL      SETM0000                * Set up the master file variables
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
          CALL      SETE0000                * Set up the master extn variables
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
          CALL      SETN0000                * Set up nhi fields

          MOVE      SP1,PMPXCRIN
.
          CALL      CVAL0000                * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          BRANCH    VCHKFLAG,UPLD1000       * error checking only
.
          MOVE      ZEROVISN,PVIBILL
          CALL      WRTUR                   * Write new record
          ADD       ONE,ADDCOUNT            * increment added record count
.
UPLD6000  IF        PTCNNHII = 1
            MATCH     SP7,XMANMPI
            GOTO      UPLD7000 IF EQUAL
            MATCH     SP8,XMAURNO           * CAR 321254
            GOTO      UPLD7000 IF EQUAL
            CALL      WNHI0000              * write nhi record
          ENDIF
.
UPLD7000  CALL      PDVA0000                * Upd/Wr SAVEDVAN to Conc Card file
          CALL      PPEN0000                * Updat/Wr PPPENNO to Conc Card file
          CALL      SNET0000                * Updat/Wr Safety Net to Conc Card
.
          MATCH     SP3,XRSCONT             * Country of Residence
          IF        !@EQUAL
            CALL      WPRES000              * Write Residency Details
          ENDIF
.
          MATCH     XNATNUMB,SP20            * Is national number empty?
          GOTO      UPLD1000 IF EQUAL        * Yes, proceed as normal
.
          MOVE      ONE,PTNIHNUM             * Assume hospital id = ONE
          MOVE      PURNO,PTNILNUM           * Local number is UR number
          MOVE      XNATNUMB,PTNINMPI
          PACK      KEY10,PTNIHNUM,PTNILNUM,SP8
          CALL      RAPTNID1
          IF        OVRCD = 1
            CALL      WRPTNID1
          ELSE
            CALL      UPPTNID1
          ENDIF
.
          GOTO      UPLD1000
.
.         Upload complete
.
UPLD9000  ASSIGN    (CODCOUNT+DUPCOUNT+DTECOUNT+TIMCOUNT+MANCOUNT+NUMCOUNT+ADRCOUNT+OUTCOUNT),FORM10
          IF        FORM10 > 0
            CALL      LINE0000                   * print bottom line
          ENDIF
.
          COMPARE   CLNO,FIFTY2                  * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:19,*V2LON,COUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",COUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT
          IF        OPTION = 2
            PRINT     *1,"Records updated                       - ",UPDCOUNT
          ELSE
            PRINT     *1,"Duplicate Records detected            - ",DUPCOUNT
          ENDIF
          PRINT     *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records with invalid dates detected   - ",DTECOUNT,*N:
                    *1,"Records with invalid times detected   - ",TIMCOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT,*N:
                    *1,"Records with invalid numbers detected - ",NUMCOUNT,*N:
                    *1,"Records with invalid address detected - ",ADRCOUNT,*N:
                    *1,"Records which are outdated            - ",OUTCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. mandatory field flag
.
          MOVE      XSURN,FLDIN40
          MOVE      "XSURN   ",TMPFIELD          * surname
          CALL      CHKM0000
.
          MATCH     SP70,XPGNAM1                 * blank first given name ?
          IF        @EQUAL
            MOVE      XPGNAM1,FLDIN40            * yes
            MOVE      "XPGNAM1 ",TMPFIELD
            CALL      CHKM0000
          ENDIF
.
          MOVE      XDOB,FLDIN40
          MOVE      "XDOB    ",TMPFIELD          * DOB
          CALL      CHKM0000
.
          MOVE      XSEX,FLDIN40
          MOVE      "XSEX    ",TMPFIELD          * sex
          CALL      CHKM0000
.
          BRANCH    ADDRFLAG,MAND1000            * address line 1 mandatory ?
          MOVE      XADD1,FLDIN40                * yes
          MOVE      "XADD1   ",TMPFIELD
          CALL      CHKM0000
.
MAND1000  BRANCH    SUBRFLAG,MAND2000            * suburb mandatory ?
          MOVE      XADD3,FLDIN40                * yes
          MOVE      "XADD3   ",TMPFIELD
          CALL      CHKM0000
.
MAND2000  BRANCH    PCODFLAG,MAND3000            * postcode mandatory ?
          MOVE      XPOST,FLDIN40                * yes
          MOVE      "XPOST   ",TMPFIELD
          CALL      CHKM0000
.
MAND3000  BRANCH    MARSFLAG,MAND4000            * marital status mandatory ?
          MOVE      XMSTAT,FLDIN40               * yes
          MOVE      "XMSTAT  ",TMPFIELD
          CALL      CHKM0000
.
MAND4000  BRANCH    CBTHFLAG,MAND5000            * country of birth mandatory ?
          MOVE      XCOB,FLDIN40                 * yes
          MOVE      "XCOB    ",TMPFIELD
          CALL      CHKM0000
.
MAND5000  BRANCH    ABORFLAG,MAND6000            * aboriginality mandatory ?
          MOVE      XABORIG,FLDIN40              * yes
          MOVE      "XABORIG ",TMPFIELD
          CALL      CHKM0000
.
MAND6000  BRANCH    RELGFLAG,MAND7000            * religion mandatory ?
          MOVE      XREL,FLDIN40                 * yes
          MOVE      "XREL    ",TMPFIELD
          CALL      CHKM0000
.
MAND7000  BRANCH    RESSFLAG,MAND8000            * residency status mandatory ?
          MOVE      XPTYPE,FLDIN40               * yes
          MOVE      "XPTYPE  ",TMPFIELD
          CALL      CHKM0000
.
MAND8000  BRANCH    LANGFLAG,MAND9000            * language mandatory ?
          MOVE      XPXLNG1,FLDIN40              * yes
          MOVE      "XPXLNG1 ",TMPFIELD
          CALL      CHKM0000
.
MAND9000  BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: FLDIN40 - field to be checked                                   *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     SP20,FLDIN40                 * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.****************************************************************************
.*                             WNHI0000                Called by: UPLD0000  *
.*                 Write a record to the nhimasaf file                      *
.****************************************************************************
.
WNHI0000  MOVE      XMAURNO,NHMAURNO        * load nhi number
          MOVE      XMANMPI,NHMANMPI        * load local U/R
.
.         Check if this patient has an nhimasaf record already
.
          MOVE      NHMANMPI,KEY7
          CALL      RLNHMAS1                * record on file already ?
          GOTO      WNHI9999 IF LOCKED      * record locked - ignore
.
          IF        OVRCD = 0
            MOVE      ZERO,UPDFLAG          * set flag to update record
            MOVE      TWO,AUDTTYPE          * set audit flag for "before"
            CALL      WANHMA00              * write "before" audit record
          ELSE
            MOVE      ONE,UPDFLAG           * set flag to write new record
          ENDIF
.
          PACK      NHMASURN,XMASURN,SP30   * load variables
          MOVE      XMAGIV1,NHMAGIV1
          MOVE      XMAGIV2,NHMAGIV2
          MOVE      XMAGIV3,NHMAGIV3
          MOVE      XMAPREI,NHMAPREI
          MOVE      XMAADD1,NHMAADD1
          MOVE      XMAADD2,NHMAADD2
          MOVE      XMAADD3,NHMAADD3
          MOVE      XMAADD4,NHMAADD4
          MOVE      XMAADD5,NHMAADD5
          MOVE      XMADOB,NHMADOB
          MOVE      XMADDTH,NHMADDTH
          MOVE      XMADOMC,NHMADOMC
          MOVE      XMARES,NHMARES
          MOVE      XMAETH,NHMAETH
          MOVE      XMASEX,NHMASEX
          MOVE      XMADAT,NHMADAT
          MOVE      XMATIM,NHMATIM
          MOVE      XMAETH2,NHMAETH2
          MOVE      XMAETH3,NHMAETH3
          PACK      NHMASPA,SP20,SP6
.
          IF        UPDFLAG = 0
            CALL      UPNHMAS1
            MOVE      THREE,AUDTTYPE        * set audit flag for "after"
          ELSE
            CALL      WRNHMAS1
            MOVE      ONE,AUDTTYPE          * set audit flag for "write"
          ENDIF
.
.         Check if nhimasaf audit record has to be written
.
          CALL      WANHMA00
.
WNHI9999  RETURN
+
.******************************************************************************
.*                                  WPRES000              Called by: UPLD0000 *
.*                        Load Patient Residency Details                      *
.******************************************************************************
.
WPRES000  MOVE      PURNO,PMRSURNO
.
          MOVE      XRSCONT,PMRSCONT
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,SP1,XRSCONT
            CALL      RDTEMP2               * country code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMRSCONT   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XRSTEXP,PMRSTEXP
          MOVE      SP8,PMRSGRDT
          MOVE      XRSCOMM,PMRSCOMM
          PACK      PMRSSPAR,SP70,SP70
.
          PACK      KEY8,PURNO,SP8
          CALL      RAPMRES1
          IF        OVRCD = 0
            CALL      UPPMRES1
          ELSE
            CALL      WRPMRES1
          ENDIF
.
WPRES999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      ONE,CNOUNDLN
          MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          PRINT     " Option ",OPTION," using file: ";
          PRINT     FNAMED
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"U/R No.",*12,PIPE,*14,"Patient Name":
                    *59,PIPE,*61,"Error Description",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  SETE0000              Called by: UPLD0000 *
.*                      Set up The Extension File Variables                   *
.******************************************************************************
.
SETE0000  MOVE      ZERO,ERORFLAG                * initialise error flag
.
          MOVE      DIM8,PURNO 
.
          IF        ADDMAST = 1
            MOVE      "CONVMAST  ",PMPXWBID
            MOVE      PASSCODE,PTMXOPER
            MOVE      CURRDATE,PTMXRDAT
          ENDIF
.
          PACK      PTMXMEAL,SP20,SP20
          MOVE      SP10,PTMXLGA
          MOVE      SP10,PTMXLS
          MOVE      SP10,PTMXLSDT
          MOVE      SP10,PTMXFHMD
          MOVE      SP10,PTMXMHU1
          MOVE      SP10,PTMXMHU2
          MOVE      SP10,PTMXMHU3
.
          MOVE      XCONNAME,PTMXECNM       * EC name
          MOVE      XCONADD1,PTMXECA1       * EC  address 1
          MOVE      XCONADD2,PTMXECA2       * EC  address 2
          MOVE      XCONADD3,PTMXECA3       * EC  suburb    
          MOVE      XCONADD4,PTMXECA4       * EC  address 4 
          MOVE      XCONPOST,PTMXECPC       * EC  post code
.
          IF        ADDRFLG4 = 0 & ADDRVFLG = 0
            MOVE      PTMXECPC,PCODEVAR
            MOVE      PTMXECA3,SUBRBVAR
            MOVE      PTMXECA4,STATEVAR
            MOVE      FOUR,ADDRTYPE
            CALL      VADD0000              * valid address ?
            IF        EXIT = 1
              MOVE      ONE,ERORFLAG        * no
            ENDIF
          ENDIF
.
          MOVE      XCONPPHN,PTMXECPP       * EC  private telephone
          MOVE      XCONBPHN,PTMXECBP       * EC  private telephone
.
          MOVE      XCONREL,PTMXECRE        * EC  relationship
          IF        RELATION = 1
            PACK      KEY10,XCONREL
            CALL      RDTEMP3               * Cont. rel'ship code on map file ?
            IF        OVRCD = 0
              MOVE      NEWRELNS,PTMXECRE   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XNEANAME,PTMXNRNM       * NR name
          MOVE      XNEAADD1,PTMXNRA1       * NR  address 1
          MOVE      XNEAADD2,PTMXNRA2       * NR  address 2
          MOVE      XNEAADD3,PTMXNRA3       * NR  suburb    
          MOVE      XNEAADD4,PTMXNRA4       * NR  address 4 
          MOVE      XNEAPOST,PTMXNRPC       * NR  post code
.
          IF        ADDRFLG5 = 0 & ADDRVFLG = 0
            MOVE      PTMXNRPC,PCODEVAR
            MOVE      PTMXNRA3,SUBRBVAR
            MOVE      PTMXNRA4,STATEVAR
            MOVE      FIVE,ADDRTYPE
            CALL      VADD0000              * valid address ?
            IF        EXIT = 1
              MOVE      ONE,ERORFLAG        * no
            ENDIF
          ENDIF
.
          MOVE      XNEAPPHN,PTMXNRPP       * NR  private telephone
          MOVE      XNEABPHN,PTMXNRBP       * NR  private telephone
.
          MOVE      XNEAREL,PTMXNRRE        * NR  relationship
          IF        RELATION = 1
            PACK      KEY10,XNEAREL
            CALL      RDTEMP3               * Cont. rel'ship code on map file ?
            IF        OVRCD = 0
              MOVE      NEWRELNS,PTMXNRRE   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      SP10,PTMX3BEX
.
          MOVE      XCARD,PTMXCARD
          MOVE      XEXPD,PTMXCEXP
          MATCH     SP8,PTMXCEXP
          IF        !@EQUAL
            REP       " 0",PTMXCEXP
          ENDIF
.
          MOVE      XEXMT,PTMXCXMP          * Exemption Type (Cat XM)
          IF        CATCDFLG = 1
            PACK      KEY5,ANSX,ANSM,XEXMT
            CALL      RDTEMP2               * exemption code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PTMXCXMP   * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      XFAMID,PTMXFMLY
.
          MOVE      SP20,PTMXCHNM
          MOVE      SP10,PTMXDOFR
.
          MOVE      SP20,PTMXSPID
          MOVE      SP20,PTMXOSDT
          MOVE      SP20,PTMXUKDO
.
          MOVE      XCELLPH,PTMXCELL
          MOVE      XPADD1,PTMXADD1
          MOVE      XPADD2,PTMXADD2
          MOVE      XPADD3,PTMXADD3
          MOVE      XPADD4,PTMXADD4
          MOVE      XPCODE,PTMXPOST
.
          IF        ADDRFLG2 = 0 & ADDRVFLG = 0
            MOVE      PTMXPOST,PCODEVAR
            MOVE      PTMXADD3,SUBRBVAR
            MOVE      PTMXADD4,STATEVAR
            MOVE      TWO,ADDRTYPE
            CALL      VADD0000              * valid address ?
            IF        EXIT = 1
              MOVE      ONE,ERORFLAG        * no
            ENDIF
          ENDIF
.
          MOVE      XPMCCD,PTMXMCCD
          MOVE      XPGNAM1,PMPXFNAM
          MOVE      XPGNAM2,PMPXSNAM
.
          MOVE      XTMXDEAF,PTMXDEAF       * Deaf Code (Cat DK)
          IF        CATCDFLG = 1
            PACK      KEY5,ANSD,ANSK,XTMXDEAF
            CALL      RDTEMP2               * deaf code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PTMXDEAF   * yes - load mapped file
            ENDIF
          ENDIF
.
          PACK      PTMXSPAR,SP20,SP20,SP20
.
.         Second Master file extension
.
          MOVE      XREGGP,PMPXRHC1         * Patient gp      
          IF        GP = 1
            PACK      KEY10,XREGGP,SP10
            CALL      RDTEMP1               * gp code on map file ?
            IF        OVRCD = 0
              MOVE      NEWGP,PMPXRHC1      * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      XREGGPP,PMPXRH1G        * Patient gp practice
          IF        PRACTICE = 1
            PACK      KEY10,XREGGPP,SP10
            CALL      RDTEMP5               * gp practice code on map file ?
            IF        OVRCD = 0
              MOVE      NEWPRAC,PMPXRH1G    * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      SP2,PMPXR1GC            * Practice counter
          MATCH     SP10,PMPXRH1G
          IF        !@EQUAL
            PACK      PMPXR1GC,SP1,ONE
          ENDIF
.
          MOVE      XPXLNG1,PMPXLNG1        * Preferred Language1 (Category LA)
          IF        CATCDFLG = 1
            PACK      KEY5,ANSL,ANSA,XPXLNG1
            CALL      RDTEMP2               * preferred lang. code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMPXLNG1   * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      XPXINTR,PMPXINTR
.
          IF        IBCNMHOS=1
            MOVE      PTHSHOSP,PMPXIHOS
          ENDIF
.
          MOVE      XABORIG,PMPXABRG        * Aboriginality (Category VA)
          IF        CATCDFLG = 1
            PACK      KEY5,ANSV,ANSA,XABORIG
            CALL      RDTEMP2               * aboriginality code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMPXABRG   * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      SP3,PMPXDVAC
          MOVE      XDVAC,SAVEDVAC          * DVA Card Colour (Category DX)
          IF        CATCDFLG = 1
            PACK      KEY5,ANSD,ANSX,XDVAC
            CALL      RDTEMP2               * dva colour code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,SAVEDVAC   * yes - load mapped code
            ENDIF
          ENDIF
.
          MATCH     SP6,XMEDCEX             * Medicare expiry date
          IF        !@EQUAL
            UNPACK    XMEDCEX,DIM4,DIM2
            MOVE      DIM2,FORM2
            LOAD      DIM2,FORM2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT:
                                 NOV,DEC
            PACK      PMPXMEDC,XMEDCEX,DIM2,SP70
            REP       " 0",PMPXMEDC
          ENDIF
.
SETE2000  MOVE      XDETYP,PMPXDETY         * Load Death Type (Cat DY)
          IF        CATCDFLG = 1
            PACK      KEY5,ANSD,ANSY,XDETYP
            CALL      RDTEMP2               * death type on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMPXDETY   * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      XPMPXKMO,PMPXKMOB       * N.O.K. Mobile Phone No.
          MOVE      XPMPXCMO,PMPXCMOB       * Emer.Contact Mobile Phone No.
          MOVE      XPMPXRMO,PMPXRMOB       * Nearest Relative Mobile Phone No.
          MOVE      SP1,PMPXCRIN
.
          MOVE      XIWICOD1,PMPXIWI1       * IWI Code 1 (Cat iw)
          IF        CATCDFLG = 1
            PACK      KEY5,CATLOWIW,XIWICOD1
            CALL      RDTEMP2               * iwi code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMPXIWI1   * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      XPEML,PMPXPEML          * load patient's email address
.
          BRANCH    ERORFLAG,SETE9100            * errors on address validation
.
          MOVE      ZERO,EXIT                    * no errors on addr. validation
          GOTO      SETE9999
.
SETE9100  MOVE      ONE,EXIT
.
SETE9999  RETURN 
+
.******************************************************************************
.*                                  SETN0000              Called by: UPLD0000 *
.*                      Set up The nhi File Variables                      *
.******************************************************************************
SETN0000  PACK      NHMASURN,XMASURN,SP30   * load variables
          MOVE      XMAGIV1,NHMAGIV1
          MOVE      XMAGIV2,NHMAGIV2
          MOVE      XMAGIV3,NHMAGIV3
          MOVE      XMAPREI,NHMAPREI
          MOVE      XMAADD1,NHMAADD1
          MOVE      XMAADD2,NHMAADD2
          MOVE      XMAADD3,NHMAADD3
          MOVE      XMAADD4,NHMAADD4
          MOVE      XMAADD5,NHMAADD5
          MOVE      XMADOB,NHMADOB
          MOVE      XMADDTH,NHMADDTH
          MOVE      XMADOMC,NHMADOMC
          MOVE      XMARES,NHMARES
          MOVE      XMAETH,NHMAETH
          MOVE      XMASEX,NHMASEX
          MOVE      XMADAT,NHMADAT
          MOVE      XMATIM,NHMATIM
          MOVE      XMAETH2,NHMAETH2
          MOVE      XMAETH3,NHMAETH3
.
SETN9999  RETURN
+
.******************************************************************************
.*                                  SETM0000              Called by: UPLD0000 *
.*                      Set up The Master File Variables                      *
.* Returns:  EXIT - 0 = No address validation errors                          *
.*                  1 = Address validation errors                             *
.******************************************************************************
.
SETM0000  MOVE      ZERO,ERORFLAG                * initialise error flag
.
          MOVE      DIM8,PURNO 
          MOVE      XCHGDTE,PCHGDTE
          REP       " 0",PCHGDTE            * Date of last change (yymmdd)
.
          MOVE      XTIT,PTITL              * Title (pmstleaf)
          IF        TITLECOD = 1
            PACK      KEY4,XTIT
            CALL      RDTEMP6               * title code on map file ?
            IF        OVRCD = 0
              MOVE      NEWTITLE,PTITL      * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      XSURN,PSNAME            * Short Surname
          MOVE      XSURN,PTMASNAM          * Long Surname
.
          MOVE      XPGNAM1,PGNAME          * set up short given name
          STRIP     PGNAME
          ENDSET    PGNAME
          APPEND    SP1,PGNAME
          APPEND    XPGNAM2,PGNAME
          RESET     PGNAME
.
          PACK      PPSNAME,XPSURN,SP30     * Previous Surname
.
.         Load address and validate if required
.
          PACK      PADD1,XADD1,SP30        * Address line 1
          PACK      PADD2,XADD2,SP30        * Address line 2
          PACK      PSUBRB,XADD3,SP30       * Address line 3
          PACK      PADD4,XADD4,SP30        * Address line 4
          MATCH     "8888    ",XPOST
          IF        !@EQUAL
            REP       UPPLOW,PADD4          * CAR 315797
          ENDIF
          MOVE      XPOST,PPOST             * Postcode
.
          IF        ADDRFLG1 = 0 & ADDRVFLG = 0
            MOVE      PPOST,PCODEVAR
            MOVE      PSUBRB,SUBRBVAR
            MOVE      PADD4,STATEVAR
            MOVE      ONE,ADDRTYPE
            CALL      VADD0000              * valid address ?
            IF        EXIT = 1
              MOVE      ONE,ERORFLAG        * no
            ENDIF
          ENDIF
.
          MOVE      XTELP,PTELEP            * Telephone private
          MOVE      XTELB,PTELEB            * Telephone business
          MOVE      XSEX,PSEX               * Sex
.
          UNPACK    XDOB,CCENT,CYEAR,CMON,CDAY
          PACK      PBDATE,CCENT,CYEAR,CMON,CDAY
          MATCH     SP8,PBDATE
          IF        !@EQUAL
            REP       " 0",PBDATE           * DOB (ccyymmdd)
          ENDIF
.
          MATCH     SP8,PBDATE
          IF        !@EQUAL
            UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
            MOVE      CCENT,ICENT
            MOVE      CYEAR,IYEAR
            MOVE      CMON,IMON
            MOVE      CDAY,IDAY
            CALL      AGECHK                * Calculate patients age
          ENDIF
.
          MOVE      XCOB,PCONT              * Country of birth
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,SP1,XCOB
            CALL      RDTEMP2               * country code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PCONT      * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XREL,PREG               * Patient religion
          IF        CATCDFLG = 1
            PACK      KEY5,ANSR,SP1,XREL
            CALL      RDTEMP2               * religion code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PREG       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XPMEDI,PMEDI            * Medicare Number
.
.         Resident status is a mandatory field if Medicare number is present.
.         Therefore, if there is no Medicare number and resident status is
.         blank, set the field to "~~~" and assuming that there is no code
.         set up in patcodes with this value, it will generate an extract
.         error.  These fields will subsequently need to be populated manually.
.
          IF        CATCDFLG = 1
            MATCH     SP70,XPTYPE         * if blank, check for default mapping
            IF        @EQUAL
              MATCH     SP70,PMEDI          * if no medicare #, load with '~~~'
              IF        @EQUAL
                MOVE      "~~~",XPTYPE
              ENDIF
            ENDIF
.
            PACK      KEY5,ANST,SP1,XPTYPE
            CALL      RDTEMP2               * patient type code on map file ?
            IF        OVRCD = 1
              MOVE      SP3,PTYPE
            ELSE
              MOVE      NEWCTCOD,PTYPE
            ENDIF
          ELSE
            MOVE      XPTYPE,PTYPE
          ENDIF
.
          MOVE      XPSTAT,PSTAT            * Record Status (0=valid, 1=Merged)
.
          MOVE      XMSTAT,PMSTAT           * Patient marital status
          IF        CATCDFLG = 1
            PACK      KEY5,ANSM,SP1,XMSTAT
            CALL      RDTEMP2               * marital status code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMSTAT     * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XPUSR1,PUSR1
          IF        CATCDFLG = 1
            PACK      KEY5,ANSP,ONE,XPUSR1
            CALL      RDTEMP2               * udf 1 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PUSR1      * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XPUSR2,PUSR2
          IF        CATCDFLG = 1
            PACK      KEY5,ANSP,TWO,XPUSR2
            CALL      RDTEMP2               * udf 2 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PUSR2      * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XPUSR3,PUSR3
          IF        CATCDFLG = 1
            PACK      KEY5,ANSP,THREE,XPUSR3
            CALL      RDTEMP2               * udf 3 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PUSR3      * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XPUSR4,PUSR4
          IF        CATCDFLG = 1
            PACK      KEY5,ANSP,FOUR,XPUSR4
            CALL      RDTEMP2               * udf 4 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PUSR4      * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XPUSR5,PUSR5
          IF        CATCDFLG = 1
            PACK      KEY5,ANSP,FIVE,XPUSR5
            CALL      RDTEMP2               * udf 5 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PUSR5      * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XPUSR6,PUSR6
          IF        CATCDFLG = 1
            PACK      KEY5,ANSP,SIX,XPUSR6
            CALL      RDTEMP2               * udf 6 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PUSR6      * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XPUYN1,PUYN1
          MOVE      XPUYN2,PUYN2
          MOVE      XPUYN3,PUYN3
          MOVE      XPUYN4,PMPXUYN4
          MOVE      XPUYN5,PMPXUYN5
.
          MOVE      XHFUND,PFUNDH           * Health fund
          MOVE      XHFTAB,PFNDTB           * Health fund table
          IF        HEALTHFD = 1
            PACK      KEY14,XHFUND,XHFTAB
            CALL      RDTEMP4               * Read the health fund/table file
            IF        OVRCD = 0
              MOVE      NEWHFUND,PFUNDH     * Health fund
              MOVE      NEWTABLE,PFNDTB     * Health fund table
            ENDIF
          ENDIF
.
          MOVE      XFNDMM,PFNDMM           * Fund membership number
          MOVE      XTMADCDT,PTMADCDT       * Demographics confirmed date
          PACK      POCCUP,XOCCUP,SP30      * Occupation fieid
          MOVE      XPLDDT,PLDDATE          * Last Discharge Date
          MOVE      XREPAT,SAVEDVAN         * save DVA number
          MOVE      SP20,PREPAT             * clear PMI DVA number
          MOVE      XPENNO,PPENNO           * Pension number
          MOVE      XPNDTE,PPNDTE           * Pension no expiry date (ccyymm)
          MOVE      XSMOK,PSMOK             * Patient smoker
          MOVE      XPMICRO,PMICRO          * Microfilm Address
          MOVE      XDCEASE,PCEASE          * Deceased indicator
          MOVE      XDATDTH,PDECDTE         * Date of Death (CCYYMMDD)
          MOVE      XAUTOP,PAUTOPY          * Autopsy Indicator
.
SETM8000  MOVE      XNOKNAME,PNKNAME        * NOK name
.
          MOVE      XNOKADD1,PNKADD1        * NOK address 1
          MOVE      XNOKADD2,PNKADD2        * NOK address 2
          MOVE      XNOKADD3,PNKSUBR        * NOK suburb    
          MOVE      XNOKADD4,PNKADD4        * NOK address 4 
          MOVE      XNOKPOST,PNKPOST        * NOK post code
.
          IF        ADDRFLG3 = 0 & ADDRVFLG = 0
            MOVE      PNKPOST,PCODEVAR
            MOVE      PNKSUBR,SUBRBVAR
            MOVE      PNKADD4,STATEVAR
            MOVE      THREE,ADDRTYPE
            CALL      VADD0000              * valid address ?
            IF        EXIT = 1
              MOVE      ONE,ERORFLAG        * no
            ENDIF
          ENDIF
.
          MOVE      XNOKPPHN,PNKTELP        * NOK private telephone
          MOVE      XNOKBPHN,PNKTELB        * NOK private telephone
.
          MOVE      XNOKREL,PNKRELP         * NOK relationship
          IF        RELATION = 1
            PACK      KEY10,XNOKREL
            CALL      RDTEMP3               * NoK rel'ship code on map file ?
            IF        OVRCD = 0
              MOVE      NEWRELNS,PNKRELP    * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      XPBDEBT,PBDEBT          * Bad Debt Indicator
          MOVE      XPCASE,PCASE            * Case Notes Indicator
          MOVE      XPYRRES,PYRRES          * Number of Years Resident
          MOVE      XPFNDYY,PFNDYY          * Years of Fund Membership
          MOVE      XPFNDCG,PFNDCG          * Last Fund Cover Change (CCYYMM)
.
          MOVE      XPDIET,PDIET            * Diet Code (Category DC)
          IF        CATCDFLG = 1
            PACK      KEY5,ANSD,ANSC,XPDIET
            CALL      RDTEMP2               * diet code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PDIET      * yes - load mapped file
            ENDIF
          ENDIF
.
          BRANCH    ERORFLAG,SETM9100            * errors on address validation
.
          MOVE      ZERO,EXIT                    * no errors on addr. validation
          GOTO      SETM9999
.
SETM9100  MOVE      ONE,EXIT
.
SETM9999  RETURN
+
.*****************************************************************************
.*                              VADD0000           Called by: SETM0000       *
.*                Validate address if required (Aus only)     SETE0000       *
.* Requires: PCODEVAR - postcode variable                                    *
.*           SUBRBVAR - suburb variable                                      *
.*           STATEVAR - state variable                                       *
.*           ADDRTYPE - type of address                                      *
.*                      1 = patient                                          *
.*                      2 = postal                                           *
.*                      3 = next of kin                                      *
.*                      4 = emergency contact                                *
.*                      5 = nearest relative                                 *
.* Returns:  ADRCOUNT - updated address error count                          *
.*           EXIT   0 = Valid address                                        *
.*                  1 = Error occurred                                       *
.*****************************************************************************
.
VADD0000  COMPARE   TWO,PTCNHDPS                 * Australia ?
          GOTO      VADD9000 IF LESS             * no - bypass check
.
          MATCH     SP8,PCODEVAR                 * blank postcode ?
          GOTO      VADD9000 IF EQUAL            * yes - bypass check
.
          MATCH     "8888    ",PCODEVAR          * overseas postcode ?
          GOTO      VADD9000 IF EQUAL            * yes - bypass check
.
.         Postcode is populated, so if the suburb is also populated,
.         check that the suburb and postcode are valid.  If state is also
.         populated, then use this to validate as well.
.
          MATCH     SP70,SUBRBVAR                * blank suburb ?
          GOTO      VADD9000 IF EQUAL            * yes - bypass check
.
          MATCH     SP70,STATEVAR                * blank state ?
          GOTO      VADD1000 IF EQUAL            * yes - use suburb/postcode
.
.         Check if the postcode/suburb/state combination is valid
.
          PACK      KEY45,SUBRBVAR,SP70
          PACK      KEY56,PCODEVAR,KEY45,STATEVAR
          CALL      RDIBPOS1                     * p'code/suburb/state on file ?
          BRANCH    OVRCD,VADD9100               * no - invalid address
          GOTO      VADD9000                     * yes - valid address
.
.         Check if the postcode/suburb combination is valid
.
VADD1000  PACK      KEY56,PCODEVAR,SUBRBVAR,SP70
          CALL      RDIBPOS1                     * postcode/suburb on file ?
          COMPARE   ZERO,OVRCD
          GOTO      VADD9000 IF EQUAL            * yes - valid address
.
          CALL      RKIBPOS1                     * no - get next record
          BRANCH    OVRCD,VADD9100               * invalid address
.
          MATCH     PCODEVAR,IBPOPCOD            * same postcode still ?
          IF        @EQUAL
            MATCH     SUBRBVAR,IBPOSUBR          * yes - same suburb still ?
            GOTO      VADD9000 IF EQUAL          * yes - valid address
          ENDIF
.
          GOTO      VADD9100
.
VADD9000  MOVE      ZERO,EXIT
          GOTO      VADD9999
.
.         Invalid address
.
VADD9100  LOAD      ERORDESC,ADDRTYPE,ADDRTYP1,ADDRTYP2,ADDRTYP3,ADDRTYP4:
                             ADDRTYP5
          ENDSET    ERORDESC
          APPEND    " Postcode/Suburb not valid",ERORDESC
          RESET     ERORDESC
          PACK      ERORDESC,ERORDESC,SP70
          CALL      PERR0000
.
          ADD       ONE,ADRCOUNT            * incr. address error record count
.
          MOVE      ONE,EXIT
.
VADD9999  RETURN
+
.*****************************************************************************
.*                         VDTH0000                Called by: UPLD0000       *
.*               Validate death related fields                               *
.*        Check that the deceased and autopsy flags match the                *
.*        date of death field.                                               *
.*****************************************************************************
.
VDTH0000  MOVE      ZERO,EXIT
.
          MATCH     SP8,PDECDTE                  * blank date of death ?
          IF        @EQUAL
            COMPARE   ONE,PAUTOPY                * yes
            GOTO      VDTH9100 IF EQUAL
.
            COMPARE   ZERO,PCEASE
            GOTO      VDTH9999 IF EQUAL
          ELSE
            COMPARE   ONE,PCEASE                 * no
            GOTO      VDTH9999 IF EQUAL
          ENDIF
.
.         Fields aren't compatible
.
VDTH9100  MOVE      "Date of death ",ERORDESC
          ENDSET    ERORDESC
          APPEND    "doesn't match other death related fields",ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000
.
          MOVE      ONE,EXIT
.
VDTH9999  RETURN
+
.******************************************************************************
.*                           FMUR0000                     Called by: UPLD0000 *
.*      Format the U/R by removing leading zeroes and right justifying        *
.******************************************************************************
.
FMUR0000  MATCH     SP70,XURNO                   * blank U/R ?
          GOTO      FMUR0100 IF NOT EQUAL        * no
.
          MOVE      THREE,CPSYSTEM
          CALL      GNXTUR
          MOVE      PURNO,XURNO
.
FMUR0100  RJUSTIFY  XURNO
.
          MOVE      ZERO,COUNTER
          WHILE     COUNTER < 7
            ADD       ONE,COUNTER
            CMOVE     XURNO,ANS
            MATCH     SP1,ANS
            IF        !@EQUAL
              MATCH     "0",ANS
              IF        @EQUAL
                IF        REMOVEZ=1
                  CMOVE     SP1,XURNO
                ELSE  
                  GOTO    FMUR9000
                ENDIF
              ELSE
                GOTO    FMUR9000
              ENDIF
            ENDIF
            BUMP      XURNO
          DO
.
FMUR9000  RESET     XURNO
          PACK      DIM8,XURNO,SP8
.
FMUR9999  RETURN
+
.******************************************************************************
.*                              UPPX0000           Called by: MAIN0000        *
.*                       Update pmspx2af.pmpxihos                             *
.* Requires:  PTHSHOSP - hospital id                                          *
.******************************************************************************
.
UPPX0000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,UPDCOUNT                * initialise counter
.
          PACK      KEY8,SP70
          CALL      RSPMPX21                     * position at start of pmspx2af
UPPX0500  CALL      RKPMPX21                     * read next record
          BRANCH    OVRCD,UPPX9000               * eof - finished
.
          DISPLAY   *P13:24,*V2LON,PMPXURNO;
.
          MATCH     SP70,PMPXIHOS                * blank hospital code ?
          GOTO      UPPX0500 IF NOT EQUAL        * no - ignore record
.
          MOVE      PTHSHOSP,PMPXIHOS            * yes - load hospital id
          CALL      UPPMPX21                     * update record
          ADD       ONE,UPDCOUNT                 * increment counter
          GOTO      UPPX0500                     * get next record
.
UPPX9000  DISPLAY   *P1:24,*EL,*V2LON,UPDCOUNT,*HOFF," records updated.  ";
          CALL      HITENTER
.
UPPX9999  RETURN
+
.*****************************************************************************
.*                               KPEN0000              Called by: ASKQ0000   *
.*         Get the user to select the category "ct" code to be used          *
.*         for pension number.                                               *
.* Returns:  EXIT  0 = Valid code entered                                    *
.*                 1 = Nothing entered or exitchar entered                   *
.*           PENSCODE - DVA concession card code (Cat ct)                    *
.*****************************************************************************
.
KPEN0000  IF        IBCNMHOS = 1
            MOVE      THREE,COPTION
          ELSE
            MOVE      TWO,COPTION
          ENDIF
          KEYIN     *P1:7,*EL:
                    *P1:6,*EL,*V2LON,*DV,COPTION,*HOFF:
                    ". Loading Pension Concession Card Numbers (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ")    :":
                    *P56:6,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       "nNyY",ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ONE,PENSFLAG
            DISPLAY   *P56:6,*V2LON,DYES
            GOTO      KPEN1000
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ZERO,PENSFLAG
            DISPLAY   *P56:6,*V2LON,DNO
            GOTO      KPEN1000
          ENDIF
.
          GOTO      KPEN0000
.
KPEN1000  COMPARE   ZERO,PENSFLAG                * using Pension conc. cards ?
          GOTO      KPEN9999 IF EQUAL            * no - finished
.
          DISPLAY   *P9:7,"- Pension Concession Card code               : ";
.
          MOVE      FIFTY6,ECOL                  * set keyin column
          MOVE      SEVEN,EVERT                  * set keyin row
          MOVE      CATLOWCT,CODE                * set category "ct"
          MOVE      SP3,CKYIDEF3                 * set blank default
          MOVE      ZERO,CKYIMAND                * set non-mandatory
.
          CALL      PATCODKY                     * get code for pension number
          BRANCH    EXIT,KPEN0000:               * nothing entered
                         KPEN9100                * exitchar input
.
.         A valid code has been input, so check that it has indicator 1
.         set to "4" (pension card).
.
          MATCH     "4",TCINDC1                  * pension card code ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Concession card type is not for a ":
                      "pension card.  ";
            CALL      HITENTER
            DISPLAY   *P1:24,*EL
            GOTO      KPEN0000
          ENDIF
.
          DISPLAY   *P61:7,*EL,TDESC             * display description
          MOVE      ACODE,PENSCODE
          MOVE      ZERO,EXIT
          GOTO      KPEN9999
.
KPEN9100  MOVE      ONE,EXIT
.
KPEN9999  RETURN
+
.*****************************************************************************
.*                               PPEN0000                                    *
.*        Check PPENNO - add, change or delete any Pension Concession Card   *
.*****************************************************************************
.
PPEN0000  COMPARE   ZERO,PENSFLAG           * writing pension card to pmsccdaf
          GOTO      PPEN9999 IF EQUAL       * no - finished
.
          BRANCH    ADDMAST,PPEN3000        * add record
.
.         We are updating an existing PMI record, so delete any existing
.         records for the same code
.
          MOVE      PENSCODE,ACODE          * Master has a Pension Card no. -
          CALL      DELMCC00                * delete any that exist
.
          MATCH     SP15,PPENNO             * blank pension number ?
          GOTO      PPEN6000 IF EQUAL       * yes - finished
          GOTO      PPEN5000                * no - add record
.
.         We are adding a new PMI record
.
PPEN3000  MATCH     SP15,PPENNO             * blank pension number ?
          GOTO      PPEN9999 IF EQUAL       * yes - finished
.
.         Create a health concession card record in pmsccdaf
.
PPEN5000  MOVE      PURNO,PMCDURNO               * load U/R number
          MOVE      PENSCODE,PMCDCTYP            * load card type (cat ct)
          MOVE      PPENNO,PMCDCNUM              * concession card number
          CALL      DPEN0000                     * determine pension expiry date
          PACK      PMCDCDAT,CCC,CYY,CMM,CDD     * load create date
          REP       " 0",PMCDCDAT
          MOVE      CTIMEIS,PMCDCTIM             * load create time
          REP       " 0",PMCDCTIM
          MOVE      "CONVMAST  ",PMCDCUID        * load create operator id
          MOVE      SP8,PMCDUDAT                 * load update date
          MOVE      SP8,PMCDUTIM                 * load update time
          MOVE      SP10,PMCDUUID                * load update operator id
          MOVE      SP3,PMCDDVAC
          MOVE      SP30,PMCDSPAR
.
          PACK      KEY19,PMCDURNO,PMCDEXDT,PMCDCTYP
          CALL      RAPMCCD1
          IF        OVRCD = 1
            CALL      WRPMCCD1                   * write new record
          ENDIF
.
.         Now clear the PPENNO and PPNDTE fields on the patma1af record
.
PPEN6000  PACK      KEY8,PURNO,SP10
          CALL      RDMAST1
          MOVE      SP20,PPENNO
          MOVE      SP20,PPENNO
          MOVE      SP6,PPNDTE
          CALL      UPMAST1                      * update patma1af record
.
PPEN9999  RETURN
+
.*****************************************************************************
.*                               DELMCC00                                    *
.*        Routine to delete Pension/DVA/Safety Net Concession Card records   *
.*****************************************************************************
.
DELMCC00  PACK      KEY19,PURNO,SP20
DELMCC05  CALL      RSPMCCD1              * position on U/R
DELMCC10  CALL      RKPMCCD1              * read next record
          BRANCH    OVRCD,DELMCC99        * eof - no existing record
.
          MATCH     PURNO,PMCDURNO        * different UR No. ?
          GOTO      DELMCC99 IF NOT EQUAL * - then finish
.
          MATCH     ACODE,PMCDCTYP     * different pension card type ?
          GOTO      DELMCC10 IF NOT EQUAL * - then try the next one
.
          PACK      KEY19,PURNO,PMCDEXDT,ACODE,SP20
          MOVE      KEY19,SAVKEY19
          CALL      DEPMCCD1              * delete old Pension cards
.
          MOVE      SAVKEY19,KEY19
          GOTO      DELMCC05
.
DELMCC99  RETURN
.
.*****************************************************************************
.*                          DPEN0000                                         *
.*        Determine the pension number expiry date (ccyymmdd).               *
.*        First check if there is a pension number expiry date (ccyymm) for  *
.*        the patient and if so, calculate the end day for the month         *
.*        indicated.                                                         *
.* Requires:  PPNDTE - Pension number expiry date from patma1af              *
.* Returns:   PMCDEXDT - Pension number expiry date (ccyymmdd) for pmsccdaf  *
.*****************************************************************************
.
DPEN0000  MOVE      SP8,PMCDEXDT                 * default expiry date to blank
.
          MATCH     SP6,PPNDTE                   * pension expiry date blank ?
          GOTO      DPEN9999 IF EQUAL            * yes - finished
.
          REP       " 0",PPNDTE
          UNPACK    PPNDTE,DIM4,DIM2
.
          TYPE      DIM4                         * is year numeric ?
          GOTO      DPEN9999 IF NOT EQUAL        * no - finished
.
          TYPE      DIM2                         * is month numeric ?
          GOTO      DPEN9999 IF NOT EQUAL        * no - finished
.
          MOVE      DIM4,FYEAR
.
.         Check that month is valid
.
          MOVE      DIM2,FMON
          IF        FMON < 1 | FMON > 12
            GOTO      DPEN9999
          ENDIF
.
.         PPNDTE only contains ccyymm, so we need to load pmcdexdt with
.         the end day of the month based on the year and month
.
          BRANCH    FMON,DPEN3000:               * January
                         DPEN1000:               * February
                         DPEN3000:               * March
                         DPEN2000:               * April
                         DPEN3000:               * May
                         DPEN2000:               * June
                         DPEN3000:               * July
                         DPEN3000:               * August
                         DPEN2000:               * September
                         DPEN3000:               * October
                         DPEN2000:               * November
                         DPEN3000                * December
.
.         Month has 28 or 29 days (Feb), so check if the year is a leap year
.         using the following algorithm:
.             if year modulo 400 is 0 then leap
.               else if year modulo 100 is 0 then no_leap
.               else if year modulo 4 is 0 then leap
.               else no_leap
.
DPEN1000  IF        (FYEAR%400)=0
            GOTO      DPEN1200
          ENDIF
.
          IF        (FYEAR%100)=0
            GOTO      DPEN1100
          ENDIF
.
          IF        (FYEAR%4)=0
            GOTO      DPEN1200
          ENDIF

DPEN1100  PACK      PMCDEXDT,PPNDTE,TWENTY8      * non-leap year
          GOTO      DPEN9999
.
DPEN1200  PACK      PMCDEXDT,PPNDTE,TWENTY9      * leap year
          GOTO      DPEN9999
.
.         Month has 30 days
.
DPEN2000  PACK      PMCDEXDT,PPNDTE,THIRTY
          GOTO      DPEN9999
.
.         Month has 31 days
.
DPEN3000  PACK      PMCDEXDT,PPNDTE,THIRTY1
.
DPEN9999  RETURN
+
.*****************************************************************************
.*                               KDVA0000                                    *
.*         Get the user to select the category "ct" code to be used          *
.*         for DVA number.                                                   *
.* Returns:  EXIT  0 = Valid code entered                                    *
.*                 1 = Exitchar entered                                      *
.*           DVACCODE - DVA concession card code (Cat ct)                    *
.*****************************************************************************
.
KDVA0000  IF        IBCNMHOS = 1
            MOVE      FOUR,COPTION
          ELSE
            MOVE      THREE,COPTION
          ENDIF
          KEYIN     *P1:9,*EL:
                    *P1:8,*EL,*V2LON,*DV,COPTION,*HOFF:
                    ". Loading DVA Concession Card Numbers (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ")        :":
                    *P56:8,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       "nNyY",ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ONE,DVACFLAG
            DISPLAY   *P56:8,*V2LON,DYES
            GOTO      KDVA1000
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ZERO,DVACFLAG
            DISPLAY   *P56:8,*V2LON,DNO
            GOTO      KDVA1000
          ENDIF
.
          GOTO      KDVA0000
.
KDVA1000  COMPARE   ZERO,DVACFLAG                * using DVA conc. cards ?
          GOTO      KDVA9999 IF EQUAL            * no - finished
.
          DISPLAY   *P9:9,"- DVA Concession Card code                   : ";
.
          MOVE      FIFTY6,ECOL                  * set keyin column
          MOVE      NINE,EVERT                   * set keyin row
          MOVE      CATLOWCT,CODE                * set category "ct"
          MOVE      SP3,CKYIDEF3                 * set blank default
          MOVE      ZERO,CKYIMAND                * set non-mandatory
.
          CALL      PATCODKY                     * get code for pension number
          BRANCH    EXIT,KDVA0000:               * nothing entered
                         KDVA9100                * exitchar input
.
.         A valid code has been input, so check that it has indicator 1
.         set to "3" (DVA card).
.
          MATCH     "3",TCINDC1                  * DVA card code ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Concession card type is not for a ":
                      "DVA card.  ";
            CALL      HITENTER
            DISPLAY   *P1:24,*EL
            GOTO      KDVA0000
          ENDIF
.
          DISPLAY   *P61:9,*EL,TDESC             * display description
          MOVE      ACODE,DVACCODE
          MOVE      ZERO,EXIT
          GOTO      KDVA9999
.
KDVA9100  MOVE      ONE,EXIT
.
KDVA9999  RETURN
+
.*****************************************************************************
.*                               PDVA0000                                    *
.*        Check SAVEDVAN - add, change or delete any DVA Concession Card     *
.*****************************************************************************
.
PDVA0000  COMPARE   ZERO,DVACFLAG           * loading DVA numbers ?
          GOTO      PDVA9999 IF EQUAL       * no - finished
.
          BRANCH    ADDMAST,PDVA3000        * add record
.
.         We are updating an existing PMI record, so delete any existing
.         records for the same code
.
          MOVE      DVACCODE,ACODE          * Master has a DVA Card no. -
          CALL      DELMCC00                * delete any that exist
.
          MATCH     SP10,SAVEDVAN           * blank DVA number ?
          GOTO      PDVA9999 IF EQUAL       * yes - finished
          GOTO      PDVA5000                * no - add record
.
.         We are adding a new PMI record
.
PDVA3000  MATCH     SP10,SAVEDVAN           * blank DVA number ?
          GOTO      PDVA9999 IF EQUAL       * yes - finished
.
.         Create a health concession card record in pmsccdaf
.
PDVA5000  MOVE      PURNO,PMCDURNO               * load U/R number
          MOVE      DVACCODE,PMCDCTYP            * load card type (cat ct)
.                                                   CAR 215123
          PACK      PMCDCNUM,SAVEDVAN,SP20       * concession card number
          MOVE      SP8,PMCDEXDT
          PACK      PMCDCDAT,CCC,CYY,CMM,CDD     * load create date
          REP       " 0",PMCDCDAT
          MOVE      CTIMEIS,PMCDCTIM             * load create time
          REP       " 0",PMCDCTIM
          MOVE      "CONVMAST  ",PMCDCUID        * load create operator id
          MOVE      SP8,PMCDUDAT                 * load update date
          MOVE      SP8,PMCDUTIM                 * load update time
          MOVE      SP10,PMCDUUID                * load update operator id
          MOVE      SAVEDVAC,PMCDDVAC            * load DVA Card Colour
          MOVE      SP30,PMCDSPAR
.
          PACK      KEY19,PMCDURNO,PMCDEXDT,PMCDCTYP
          CALL      RAPMCCD1
          IF        OVRCD = 1
            CALL      WRPMCCD1                   * write new record
          ENDIF
.
PDVA9999  RETURN
+
.*****************************************************************************
.*                               KSNT0000                                    *
.*         Get the user to select the category "ct" code to be used          *
.*         for Safety Net number.                                            *
.* Returns:  EXIT  0 = Valid code entered                                    *
.*                 1 = Exitchar entered                                      *
.*           SNETCODE - safety net card code                                 *
.*****************************************************************************
.
KSNT0000  IF        IBCNMHOS = 1
            MOVE      FIVE,COPTION
          ELSE
            MOVE      FOUR,COPTION
          ENDIF
          KEYIN     *P1:11,*EL:
                    *P1:10,*EL,*V2LON,*DV,COPTION,*HOFF:
                    ". Loading Safety Net Concession Card Numbers (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ") :":
                    *P56:10,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       "nNyY",ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ONE,SNETFLAG
            DISPLAY   *P56:10,*V2LON,DYES
            GOTO      KSNT1000
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ZERO,SNETFLAG
            DISPLAY   *P56:10,*V2LON,DNO
            GOTO      KSNT1000
          ENDIF
.
          GOTO      KSNT0000
.
KSNT1000  COMPARE   ZERO,SNETFLAG                * using safety net conc cards ?
          GOTO      KSNT9999 IF EQUAL            * no - finished
.
          DISPLAY   *P9:11,"- Safety Net Concession Card code            : ";
.
          MOVE      FIFTY6,ECOL                  * set keyin column
          MOVE      TEN1,EVERT                   * set keyin row
          MOVE      CATLOWCT,CODE                * set category "ct"
          MOVE      SP3,CKYIDEF3                 * set blank default
          MOVE      ZERO,CKYIMAND                * set non-mandatory
.
          CALL      PATCODKY                     * get code for safety net no.
          BRANCH    EXIT,KSNT0000:               * nothing entered
                         KSNT9100                * exitchar input
.
.         A valid code has been input, so check that it has indicator 1
.         set to "2" (Safety Net card).
.
          MATCH     "2",TCINDC1                  * safety net card code ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Concession card type is not for a ":
                      "safety net card.  ";
            CALL      HITENTER
            DISPLAY   *P1:24,*EL
            GOTO      KSNT0000
          ENDIF
.
          DISPLAY   *P61:11,*EL,TDESC            * display description
          MOVE      ACODE,SNETCODE
          MOVE      ZERO,EXIT
          GOTO      KSNT9999
.
KSNT9100  MOVE      ONE,EXIT
.
KSNT9999  RETURN
+
.*****************************************************************************
.*                                 KADD0000        Called by: ASKQ0000       *
.*          Ask if addresses are to be validated (Aus only)                  *
.* Requires: PTCNHDPS - Extracts State Parameter                             *
.*                      (Aus states have values 2 thru 9)                    *
.* Returns : ADDRVFLG - Address validation flag                              *
.*              0 = Validation required                                      *
.*              1 = No validation required                                   *
.*****************************************************************************
.
KADD0000  COMPARE   TWO,PTCNHDPS                 * Australia ?
          GOTO      KADD9999 IF LESS             * no - ignore check
.
          IF        IBCNMHOS = 1
            MOVE      SIX,COPTION
          ELSE
            MOVE      FIVE,COPTION
          ENDIF
.
KADD1000  KEYIN     *P1:13,*EL:
                    *P1:14,*EL:
                    *P1:15,*EL:
                    *P1:16,*EL:
                    *P1:17,*EL:
                    *P1:12,*EL,*V2LON,*DV,COPTION,*HOFF:
                    ". Validating (Postcode/Suburb) Addresses (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ")     : ":
                    *P56:12,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       "nNyY",ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ZERO,ADDRVFLG
            DISPLAY   *P56:12,*V2LON,DYES
            GOTO      KADD2000
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ONE,ADDRVFLG
            DISPLAY   *P56:12,*V2LON,DNO
            GOTO      KADD9999
          ENDIF
.
          BEEP                                   * invalid entry
          GOTO      KADD1000
.
KADD2000  KEYIN     *P9:13,*EL,"- Patient (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ")                              : ":
                    *P56:13,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       "nNyY",ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ZERO,ADDRFLG1
            DISPLAY   *P56:13,*V2LON,DYES
            GOTO      KADD3000
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ONE,ADDRFLG1
            DISPLAY   *P56:13,*V2LON,DNO
            GOTO      KADD3000
          ENDIF
.
          BEEP                                   * invalid entry
          GOTO      KADD2000
.
KADD3000  KEYIN     *P9:14,*EL,"- Postal (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ")                               : ":
                    *P56:14,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       "nNyY",ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ZERO,ADDRFLG2
            DISPLAY   *P56:14,*V2LON,DYES
            GOTO      KADD4000
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ONE,ADDRFLG2
            DISPLAY   *P56:14,*V2LON,DNO
            GOTO      KADD4000
          ENDIF
.
          BEEP                                   * invalid entry
          GOTO      KADD3000
.
KADD4000  KEYIN     *P9:15,*EL,"- Next of Kin (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ")                          : ":
                    *P56:15,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       "nNyY",ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ZERO,ADDRFLG3
            DISPLAY   *P56:15,*V2LON,DYES
            GOTO      KADD5000
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ONE,ADDRFLG3
            DISPLAY   *P56:15,*V2LON,DNO
            GOTO      KADD5000
          ENDIF
.
          BEEP                                   * invalid entry
          GOTO      KADD4000
.
KADD5000  KEYIN     *P9:16,*EL,"- Emergency Contact (",*V2LON,*DV,ANSY:
                    *HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ")                    : ":
                    *P56:16,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       "nNyY",ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ZERO,ADDRFLG4
            DISPLAY   *P56:16,*V2LON,DYES
            GOTO      KADD6000
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ONE,ADDRFLG4
            DISPLAY   *P56:16,*V2LON,DNO
            GOTO      KADD6000
          ENDIF
.
          BEEP                                   * invalid entry
          GOTO      KADD5000
.
KADD6000  KEYIN     *P9:17,*EL,"- Nearest Relative (",*V2LON,*DV,ANSY:
                    *HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ")                     : ":
                    *P56:17,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       "nNyY",ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ZERO,ADDRFLG5
            DISPLAY   *P56:17,*V2LON,DYES
            GOTO      KADD9000
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ONE,ADDRFLG5
            DISPLAY   *P56:17,*V2LON,DNO
            GOTO      KADD9000
          ENDIF
.
          BEEP                                   * invalid entry
          GOTO      KADD6000
.
.         If "Validating addresses" was set to yes, but all the individual
.         address fields were set to no, then clear the individual address
.         fields and reset the "Validating addresses" field back to no.
.
KADD9000  ASSIGN    (ADDRFLG1 + ADDRFLG2 + ADDRFLG3 + ADDRFLG4 + ADDRFLG5),FORM1
          IF        FORM1 = 5
            DISPLAY   *P1:13,*EL:
                      *P1:14,*EL:
                      *P1:15,*EL:
                      *P1:16,*EL:
                      *P1:17,*EL:
                      *P56:12,*EL,*V2LON,DNO
            MOVE      ONE,ADDRVFLG
          ENDIF
.
KADD9999  RETURN
+
.*****************************************************************************
.*                               SNET0000                                    *
.* Check XSNTNUMB - add, change or delete any Safety Net Concession Card     *
.*****************************************************************************
.
SNET0000  COMPARE   ZERO,SNETFLAG           * loading Safety Net numbers ?
          GOTO      SNET9999 IF EQUAL       * no - finished
.
          BRANCH    ADDMAST,SNET3000        * add record
.
.         We are updating an existing PMI record, so delete any existing
.         records for the same code
.
          MOVE      SNETCODE,ACODE          * Master has a S. Net Card no. -
          CALL      DELMCC00                * delete any that exist
.
          MATCH     SP20,XSNTNUMB           * blank safety net number ?
          GOTO      SNET9999 IF EQUAL       * yes - finished
          GOTO      SNET5000                * no - add record
.
.         We are adding a new PMI record
.
SNET3000  MATCH     SP20,XSNTNUMB           * blank safety net number ?
          GOTO      SNET9999 IF EQUAL       * yes - finished
.
.         Create a health concession card record in pmsccdaf
.
SNET5000  MOVE      PURNO,PMCDURNO               * load U/R number
          MOVE      SNETCODE,PMCDCTYP            * load card type (cat ct)
          MOVE      XSNTNUMB,PMCDCNUM            * safety net card number
          MOVE      XSNTEDTE,PMCDEXDT
          PACK      PMCDCDAT,CCC,CYY,CMM,CDD     * load create date
          REP       " 0",PMCDCDAT
          MOVE      CTIMEIS,PMCDCTIM             * load create time
          REP       " 0",PMCDCTIM
          MOVE      "CONVMAST  ",PMCDCUID        * load create operator id
          MOVE      SP8,PMCDUDAT                 * load update date
          MOVE      SP8,PMCDUTIM                 * load update time
          MOVE      SP10,PMCDUUID                * load update operator id
          MOVE      SP3,PMCDDVAC
          MOVE      SP30,PMCDSPAR
.
          PACK      KEY19,PMCDURNO,PMCDEXDT,PMCDCTYP
          CALL      RAPMCCD1
          IF        OVRCD = 1
            CALL      WRPMCCD1                   * write new record
          ENDIF
.
SNET9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces                      *
.*            (Pipe delimited records only)                                  *
.*****************************************************************************
.
POUT0000  PACK      XTIT,XTIT,SP4
          PACK      XSURN,XSURN,SP30,SP10
          PACK      XPGNAM1,XPGNAM1,SP30,SP10
          PACK      XPGNAM2,XPGNAM2,SP30,SP10
          PACK      XPSURN,XPSURN,SP20
          PACK      XADD1,XADD1,SP30,SP5
          REP       "#"'",XADD1
          PACK      XADD2,XADD2,SP30,SP5
          REP       "#"'",XADD2
          PACK      XADD3,XADD3,SP30,SP5
          REP       "#"'",XADD3
          PACK      XADD4,XADD4,SP30,SP5
          REP       "#"'",XADD4
          PACK      XPOST,XPOST,SP8
          PACK      XTELP,XTELP,SP20
          PACK      XTELB,XTELB,SP20
          PACK      XCELLPH,XCELLPH,SP20
          PACK      XPADD1,XPADD1,SP30,SP5
          REP       "#"'",XPADD1
          PACK      XPADD2,XPADD2,SP30,SP5
          REP       "#"'",XPADD2
          PACK      XPADD3,XPADD3,SP30,SP5
          REP       "#"'",XPADD3
          PACK      XPADD4,XPADD4,SP30,SP5
          REP       "#"'",XPADD4
          PACK      XPCODE,XPCODE,SP8
          PACK      XSEX,XSEX,SP1
          PACK      XMSTAT,XMSTAT,SP3
          PACK      XDOB,XDOB,SP8
          PACK      XPMICRO,XPMICRO,SP20
          PACK      XCOB,XCOB,SP3
          PACK      XABORIG,XABORIG,SP3
          PACK      XREL,XREL,SP3
          PACK      XOCCUP,XOCCUP,SP20
          PACK      XSMOK,XSMOK,SP1
          PACK      XPBDEBT,XPBDEBT,SP1
          PACK      XPCASE,XPCASE,SP1
          PACK      XPDIET,XPDIET,SP3
          PACK      XDATDTH,XDATDTH,SP8
          PACK      XDCEASE,XDCEASE,SP1
          PACK      XDETYP,XDETYP,SP3
          PACK      XAUTOP,XAUTOP,SP1
          PACK      XNOKNAME,XNOKNAME,SP20
          PACK      XNOKADD1,XNOKADD1,SP30,SP5
          REP       "#"'",XNOKADD1
          PACK      XNOKADD2,XNOKADD2,SP30,SP5
          REP       "#"'",XNOKADD2
          PACK      XNOKADD3,XNOKADD3,SP30,SP5
          REP       "#"'",XNOKADD3
          PACK      XNOKADD4,XNOKADD4,SP30,SP5
          REP       "#"'",XNOKADD4
          PACK      XNOKPOST,XNOKPOST,SP8
          PACK      XNOKPPHN,XNOKPPHN,SP20
          PACK      XNOKBPHN,XNOKBPHN,SP20
          PACK      XPMPXKMO,XPMPXKMO,SP20
          PACK      XNOKREL,XNOKREL,SP10
          PACK      XCONNAME,XCONNAME,SP20
          PACK      XCONADD1,XCONADD1,SP30,SP5
          REP       "#"'",XCONADD1
          PACK      XCONADD2,XCONADD2,SP30,SP5
          REP       "#"'",XCONADD2
          PACK      XCONADD3,XCONADD3,SP30,SP5
          REP       "#"'",XCONADD3
          PACK      XCONADD4,XCONADD4,SP30,SP5
          REP       "#"'",XCONADD4
          PACK      XCONPOST,XCONPOST,SP8
          PACK      XCONPPHN,XCONPPHN,SP20
          PACK      XCONBPHN,XCONBPHN,SP20
          PACK      XPMPXCMO,XPMPXCMO,SP20
          PACK      XCONREL,XCONREL,SP10
          PACK      XNEANAME,XNEANAME,SP20
          PACK      XNEAADD1,XNEAADD1,SP30,SP5
          REP       "#"'",XNEAADD1
          PACK      XNEAADD2,XNEAADD2,SP30,SP5
          REP       "#"'",XNEAADD2
          PACK      XNEAADD3,XNEAADD3,SP30,SP5
          REP       "#"'",XNEAADD3
          PACK      XNEAADD4,XNEAADD4,SP30,SP5
          REP       "#"'",XNEAADD4
          PACK      XNEAPOST,XNEAPOST,SP8
          PACK      XNEAPPHN,XNEAPPHN,SP20
          PACK      XNEABPHN,XNEABPHN,SP20
          PACK      XPMPXRMO,XPMPXRMO,SP20
          PACK      XNEAREL,XNEAREL,SP20
          PACK      XREGGPP,XREGGPP,SP10
          PACK      XREGGP,XREGGP,SP10
          PACK      XHFUND,XHFUND,SP6
          PACK      XHFTAB,XHFTAB,SP8
          PACK      XPFNDYY,XPFNDYY,SP2
          RJUSTIFY  XPFNDYY
          PACK      XPFNDCG,XPFNDCG,SP6
          PACK      XPMEDI,XPMEDI,SP10
          PACK      XPMCCD,XPMCCD,SP2
          PACK      XMEDCEX,XMEDCEX,SP6
          PACK      XPLDDT,XPLDDT,SP8
          PACK      XREPAT,XREPAT,SP10
          PACK      XPENNO,XPENNO,SP20
          PACK      XPNDTE,XPNDTE,SP6
          PACK      XDVAC,XDVAC,SP3
          PACK      XCARD,XCARD,SP20
          PACK      XEXPD,XEXPD,SP8
          PACK      XEXMT,XEXMT,SP3
          PACK      XFAMID,XFAMID,SP20
          PACK      XPUSR1,XPUSR1,SP3
          PACK      XPUSR2,XPUSR2,SP3
          PACK      XPUSR3,XPUSR3,SP3
          PACK      XPUSR4,XPUSR4,SP3
          PACK      XPUSR5,XPUSR5,SP3
          PACK      XPUSR6,XPUSR6,SP3
          PACK      XPUYN1,XPUYN1,SP1
          PACK      XPUYN2,XPUYN2,SP1
          PACK      XPUYN3,XPUYN3,SP1
          PACK      XPUYN4,XPUYN4,SP1
          PACK      XPUYN5,XPUYN5,SP1
          PACK      XALTNUMB,XALTNUMB,SP20
          PACK      XNATNUMB,XNATNUMB,SP20
          RJUSTIFY  XNATNUMB
          PACK      XPTYPE,XPTYPE,SP3
          PACK      XRSCONT,XRSCONT,SP3
          PACK      XPYRRES,XPYRRES,SP2
          RJUSTIFY  XPYRRES
          PACK      XPXLNG1,XPXLNG1,SP3
          PACK      XPXINTR,XPXINTR,SP1
          PACK      XPSTAT,XPSTAT,SP1
          PACK      XRSTEXP,XRSTEXP,SP8
          PACK      XRSCOMM,XRSCOMM,SP70,SP70
          PACK      XMANMPI,XMANMPI,SP7
          PACK      XMAURNO,XMAURNO,SP8
          RJUSTIFY  XMAURNO                      * CAR 321254
          PACK      XMASURN,XMASURN,SP30
          PACK      XMAGIV1,XMAGIV1,SP20
          PACK      XMAGIV2,XMAGIV2,SP20
          PACK      XMAGIV3,XMAGIV3,SP20
          PACK      XMAPREI,XMAPREI,SP1
          PACK      XMAADD1,XMAADD1,SP30,SP5
          REP       "#"'",XMAADD1
          PACK      XMAADD2,XMAADD2,SP30,SP5
          REP       "#"'",XMAADD2
          PACK      XMAADD3,XMAADD3,SP30,SP5
          REP       "#"'",XMAADD3
          PACK      XMAADD4,XMAADD4,SP30,SP5
          REP       "#"'",XMAADD4
          PACK      XMAADD5,XMAADD5,SP30,SP5
          REP       "#"'",XMAADD5
          PACK      XMADOB,XMADOB,SP8
          PACK      XMADDTH,XMADDTH,SP8
          PACK      XMADOMC,XMADOMC,SP4
          PACK      XMARES,XMARES,SP1
          PACK      XMAETH,XMAETH,SP2
          PACK      XMASEX,XMASEX,SP1
          PACK      XMADAT,XMADAT,SP8
          PACK      XMATIM,XMATIM,SP8
          PACK      XMAETH2,XMAETH2,SP2
          PACK      XMAETH3,XMAETH3,SP2
          PACK      XCHGDTE,XCHGDTE,SP8
          PACK      XFNDMM,XFNDMM,SP20
          PACK      XTMADCDT,XTMADCDT,SP8
          PACK      XTMXDEAF,XTMXDEAF,SP3
          PACK      XSNTNUMB,XSNTNUMB,SP20
          PACK      XSNTEDTE,XSNTEDTE,SP8
          PACK      XIWICOD1,XIWICOD1,SP3
          PACK      XPEML,XPEML,SP70,SP70
.
POUT9999  RETURN
+
.*****************************************************************************
.*                              DVAL0000           Called by: UPLD0000       *
.*                  Validate all date fields                                 *
.* Returns:  EXIT - 0 = No date validation errors                            *
.*                  1 = Date validation errors                               *
.*          DTECOUNT - updated count of records with date field errors       *
.*****************************************************************************
.
DVAL0000  MOVE      ZERO,ERORFLAG                * initialise date error flag
.
          MOVE      XDOB,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "XDOB    ",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XDATDTH,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "XDATDTH ",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XMEDCEX,TEMPDATE
          MOVE      ONE,DATEFLG1                 * ccyymm
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "XMEDCEX ",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XPLDDT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "XPLDDT  ",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XPNDTE,TEMPDATE
          MOVE      ONE,DATEFLG1                 * ccyymm
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "XPNDTE  ",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XEXPD,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "XEXPD   ",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XRSTEXP,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "XRSTEXP ",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XMADOB,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "XMADOB  ",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XMADDTH,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "XMADDTH ",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XMADAT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "XMADAT  ",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XCHGDTE,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "XCHGDTE ",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XTMADCDT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "XTMADCDT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      XSNTEDTE,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "XSNTEDTE",TMPFIELD
          CALL      VDAT0000
.
          BRANCH    ERORFLAG,DVAL9100            * errors on date validation
.
          MOVE      ZERO,EXIT                    * no errors on date validation
          GOTO      DVAL9999
.
DVAL9100  ADD       ONE,DTECOUNT                 * incr. date error record count
          MOVE      ONE,EXIT
.
DVAL9999  RETURN
+
.*****************************************************************************
.*                              VDAT0000           Called by: DVAL0000       *
.*                  Validate a date field                                    *
.* Requires:  TEMPDATE - Date in format ccyymmdd                             *
.*            DATEFLG1 - Date Type flag                                      *
.*                          0 = full date (ccyymmdd)                         *
.*                          1 = partial date (ccyymm)                        *
.*            DATEFLG2 - Dates Allowed flag                                  *
.*                          0 = any date allowed                             *
.*                          1 = no future dates allowed                      *
.*            TMPFIELD - Date field name                                     *
.* Returns:   ERORFLAG = 1 if an error in date validation occurs.            *
.*****************************************************************************
.
VDAT0000  MATCH     SP8,TEMPDATE                 * blank date ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Validate that the date has been fully populated
.
          SQUEEZE   TEMPDATE
          MOVELPTR  TEMPDATE,FORM1
          IF        DATEFLG1 = 0 & FORM1 <> 8 | DATEFLG1 = 1 & FORM1 <> 6
            MOVE      "Insufficient digits ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate that the date is numeric
.
VDAT0100  TYPE      TEMPDATE
          IF        !@EQUAL
            MOVE      "Not numeric ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          UNPACK    TEMPDATE,DIM2C,DIM2Y,DIM2M,DIM2D
.
.         Validate the century is >= 18
.
          MOVE      DIM2C,FORM2
          IF        FORM2 < 18 | FORM2 > CURRCENT
            MOVE      "Century not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate the month
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 1 | FORM2 > 12
            MOVE      "Month not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          COMPARE   ONE,DATEFLG1                 * short date (ccyymm) ?
          GOTO      VDAT9999 IF EQUAL            * yes - finished
.
.         Validate the day is:
.              < 32 for January, March, May, July, August, October & December
.              < 31 for April, June, September & November
.              < 29 for February, except in a leap year where it is < 30
.
          BRANCH    FORM2,VDAT1000:              * Jan
                          VDAT3000:              * Feb
                          VDAT1000:              * Mar
                          VDAT2000:              * Apr
                          VDAT1000:              * May
                          VDAT2000:              * Jun
                          VDAT1000:              * Jul
                          VDAT1000:              * Aug
                          VDAT2000:              * Sep
                          VDAT1000:              * Oct
                          VDAT2000:              * Nov
                          VDAT1000               * Dec
.
.         Validate days for month of 31 days
.
VDAT1000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for month of 30 days
.
VDAT2000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 30
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for February
.         A leap year is one where:
.           1. Every year divisible by 4 is a leap year.
.           2. But every year divisible by 100 is NOT a leap year
.           3. Unless the year is also divisible by 400, then it is still a
.              leap year.
.
VDAT3000  MOVE      DIM2D,FORM2
          PACK      DIM4,DIM2C,DIM2Y
          MOVE      DIM4,FORM4
          IF        (FORM4%4) = 0
            IF        (FORM4%100) = 0
              IF        (FORM4%400) = 0
                GOTO      VDAT3200
              ENDIF
            ELSE
              GOTO      VDAT3200
            ENDIF
          ENDIF
.
.         Check for normal Feb days
.
VDAT3100  IF        FORM2 < 1 | FORM2 > 28
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Check for leap year Feb days
.
VDAT3200  IF        FORM2 < 1 | FORM2 > 29
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
VDAT3900  MOVE      "Day not valid ",ERORDESC
          CALL      DERR0000
          GOTO      VDAT9999
.
VDAT4000  COMPARE   ZERO,DATEFLG2                * any date allowed ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Make sure the date is not in the future
.
          MATCH     TEMPDATE,CURRDATE
          IF        @LESS
            MOVE      "Cannot be in the future ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
VDAT9999  RETURN
+
.*****************************************************************************
.*                            DERR0000             Called by: VDAT0000       *
.*                    Process date error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:  ERORFLAG = 1 if an error in date validation occurs.             *
.*****************************************************************************
.
DERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set date error flag
.
DERR9999  RETURN
+
.*****************************************************************************
.*                              TVAL0000           Called by: UPLD0000       *
.*                  Validate all time fields                                 *
.* Returns:  EXIT - 0 = No time validation errors                            *
.*                  1 = Time validation errors                               *
.*          TIMCOUNT   - updated count of records with time field errors     *
.*****************************************************************************
.
TVAL0000  MOVE      ZERO,ERORFLAG                * initialise time error flag
.
          MOVE      XMADAT,TEMPDATE
          MOVE      XMATIM,TEMPTIME              * time last updated
          MOVE      "XMATIM",TMPFIELD
          CALL      VTIM0000
.
          BRANCH    ERORFLAG,TVAL9100            * errors on time validation
.
          MOVE      ZERO,EXIT                    * no errors on time validation
          GOTO      TVAL9999
.
TVAL9100  ADD       ONE,TIMCOUNT                 * incr. time error record count
          MOVE      ONE,EXIT
.
TVAL9999  RETURN
+
.*****************************************************************************
.*                            VTIM0000             Called by: TVAL0000       *
.*                    Validate time fields                                   *
.* Requires:  TEMPTIME - Time in format hh:mm:ss                             *
.*            TEMPDATE - Date in format ccyymmdd                             *
.*            TMPFIELD - Time field name                                     *
.* Returns:   ERORFLAG = 1 if an error in time validation occurs.            *
.*****************************************************************************
.         
VTIM0000  MATCH     SP8,TEMPTIME                 * blank time ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     SP8,TEMPDATE                 * blank date ?
          IF        @EQUAL
            MOVE      "Time without corresponding date ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          UNPACK    TEMPTIME,DIM2H,DIM1A,DIM2M,DIM1B,DIM2S    * (hh:mm:ss)
.
.         Make sure colon's separate the hours, minutes and seconds
.
          MATCH     DIM1A,DIM1B                  
          GOTO      VTIM1000 IF NOT EQUAL
.
          MATCH     COLON,DIM1A
          GOTO      VTIM1000 IF NOT EQUAL
.
          GOTO      VTIM2000
.
VTIM1000  MOVE      "Format not valid ",ERORDESC
          CALL      TERR0000
          GOTO      VTIM9999
.
.         Validate the hour
.
VTIM2000  MOVE      DIM2H,FORM2
          IF        FORM2 < 0 | FORM2 > 23
            MOVE      "Hour not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the minute
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Minutes not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the second
.         
          MOVE      DIM2S,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Seconds not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.           
          MATCH     SP8,TEMPDATE                 * date blank ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
.         Make sure that the transaction time is not in the future
.
          MATCH     TEMPDATE,CURRDATE
          IF        @EQUAL
            MATCH     TEMPTIME,CTIMEIS
            IF        @LESS
              MOVE      "Time in the future ",ERORDESC
              CALL      TERR0000
            ENDIF
          ENDIF
.
VTIM9999  RETURN
+
.*****************************************************************************
.*                            TERR0000             Called by: VTIM0000       *
.*                    Process time error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:  ERORFLAG = 1 if an error in time validation occurs.             *
.*****************************************************************************
.
TERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set time error flag
.           
TERR9999  RETURN
+
.*****************************************************************************
.*                            VNUM0000             Called by: UPLD0000       *
.*                    Validate numeric fields                                *
.* Returns:  EXIT - 0 = No numeric validation errors                         *
.*                  1 = Numeric validation errors                            *
.*          NUMCOUNT - updated count of records with numeric field errors    *
.*****************************************************************************
.
VNUM0000  MOVE      ZERO,ERORFLAG                * initialise error flag
.
.         Smoker (valid values 0, 1 and 2)
.
          REP       " 0U0N2Y1",XSMOK
.
          TYPE      XSMOK                        * smoker numeric ?
          GOTO      VNUM0010 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XSMOK,FORM1
          COMPARE   FORM1,TWO                    * smoker 0, 1 or 2 ?
          GOTO      VNUM0010 IF LESS             * no - error
          GOTO      VNUM0050                     * yes - valid value
.
VNUM0010  MOVE      "XSMOK   ",TMPFIELD
          CALL      NERR0000
.
.         Bad Debt (valid values 0 and 1)
.
VNUM0050  REP       " 0N0Y1",XPBDEBT
.
          TYPE      XPBDEBT                      * bad debt numeric ?
          GOTO      VNUM0060 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XPBDEBT,FORM1
          COMPARE   FORM1,ONE                    * bad debt 0 or 1 ?
          GOTO      VNUM0060 IF LESS             * no - error
          GOTO      VNUM0100                     * yes - valid value
.
VNUM0060  MOVE      "XPBDEBT ",TMPFIELD
          CALL      NERR0000
.
.         Case Notes (valid values 0 and 1)
.
VNUM0100  REP       " 0N0Y1",XPCASE
.
          TYPE      XPCASE                       * case notes numeric ?
          GOTO      VNUM0110 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XPCASE,FORM1
          COMPARE   FORM1,ONE                    * case notes 0 or 1 ?
          GOTO      VNUM0110 IF LESS             * no - error
          GOTO      VNUM0200                     * yes - valid value
.
VNUM0110  MOVE      "XPCASE  ",TMPFIELD
          CALL      NERR0000
.
.         Deceased Indicator (valid values 0 and 1)
.
VNUM0200  REP       " 0N0Y1",XDCEASE
.
          TYPE      XDCEASE                      * deceased indicator numeric ?
          GOTO      VNUM0210 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XDCEASE,FORM1
          COMPARE   FORM1,ONE                    * deceased indicator 0 or 1 ?
          GOTO      VNUM0210 IF LESS             * no - error
          GOTO      VNUM0300                     * yes - valid value
.
VNUM0210  MOVE      "XDCEASE ",TMPFIELD
          CALL      NERR0000
.
.         Autopsy Indicator (valid values 0 and 1)
.
VNUM0300  REP       " 0N0Y1",XAUTOP
.
          TYPE      XAUTOP                       * autopsy indicator numeric ?
          GOTO      VNUM0310 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XAUTOP,FORM1
          COMPARE   FORM1,ONE                    * autopsy indicator 0 or 1 ?
          GOTO      VNUM0310 IF LESS             * no - error
          GOTO      VNUM0400                     * yes - valid value
.
VNUM0310  MOVE      "XAUTOP  ",TMPFIELD
          CALL      NERR0000
.
.         User Defined Y/N Field 1 (valid values 0 and 1)
.
VNUM0400  REP       " 0N0Y1",XPUYN1
.
          TYPE      XPUYN1                       * udf Y/N 1 numeric ?
          GOTO      VNUM0410 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XPUYN1,FORM1
          COMPARE   FORM1,ONE                    * udf Y/N 1 0 or 1 ?
          GOTO      VNUM0410 IF LESS             * no - error
          GOTO      VNUM0500                     * yes - valid value
.
VNUM0410  MOVE      "XPUYN1  ",TMPFIELD
          CALL      NERR0000
.
.         User Defined Y/N Field 2 (valid values 0 and 1)
.
VNUM0500  REP       " 0N0Y1",XPUYN2
.
          TYPE      XPUYN2                       * udf Y/N 2 numeric ?
          GOTO      VNUM0510 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XPUYN2,FORM1
          COMPARE   FORM1,ONE                    * udf Y/N 2 0 or 1 ?
          GOTO      VNUM0510 IF LESS             * no - error
          GOTO      VNUM0600                     * yes - valid value
.
VNUM0510  MOVE      "XPUYN2  ",TMPFIELD
          CALL      NERR0000
.
.         User Defined Y/N Field 3 (valid values 0 and 1)
.
VNUM0600  REP       " 0N0Y1",XPUYN3
.
          TYPE      XPUYN3                       * udf Y/N 3 numeric ?
          GOTO      VNUM0610 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XPUYN3,FORM1
          COMPARE   FORM1,ONE                    * udf Y/N 3 0 or 1 ?
          GOTO      VNUM0610 IF LESS             * no - error
          GOTO      VNUM0700                     * yes - valid value
.
VNUM0610  MOVE      "XPUYN3  ",TMPFIELD
          CALL      NERR0000
.
.         User Defined Y/N Field 4 (valid values 0 and 1)
.
VNUM0700  REP       " 0N0Y1",XPUYN4
.
          TYPE      XPUYN4                       * udf Y/N 4 numeric ?
          GOTO      VNUM0710 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XPUYN4,FORM1
          COMPARE   FORM1,ONE                    * udf Y/N 4 0 or 1 ?
          GOTO      VNUM0710 IF LESS             * no - error
          GOTO      VNUM0800                     * yes - valid value
.
VNUM0710  MOVE      "XPUYN4  ",TMPFIELD
          CALL      NERR0000
.
.         User Defined Y/N Field 5 (valid values 0 and 1)
.
VNUM0800  REP       " 0N0Y1",XPUYN5
.
          TYPE      XPUYN5                       * udf Y/N 5 numeric ?
          GOTO      VNUM0810 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XPUYN5,FORM1
          COMPARE   FORM1,ONE                    * udf Y/N 5 0 or 1 ?
          GOTO      VNUM0810 IF LESS             * no - error
          GOTO      VNUM0900                     * yes - valid value
.
VNUM0810  MOVE      "XPUYN5  ",TMPFIELD
          CALL      NERR0000
.
.         Interpreter Required (valid values 0 and 1)
.
VNUM0900  REP       " 0N0Y1",XPXINTR
.
          TYPE      XPXINTR                      * interpreter required numeric?
          GOTO      VNUM0910 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XPXINTR,FORM1
          COMPARE   FORM1,ONE                    * interpreter required 0 or 1 ?
          GOTO      VNUM0910 IF LESS             * no - error
          GOTO      VNUM1000                     * yes - valid value
.
VNUM0910  MOVE      "XPXINTR ",TMPFIELD
          CALL      NERR0000
.
.         Record Status (valid values 0 and 1)
.
VNUM1000  REP       " 0",XPSTAT
.
          TYPE      XPSTAT                       * record status numeric?
          GOTO      VNUM1010 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XPSTAT,FORM1
          COMPARE   FORM1,ONE                    * record status 0 or 1 ?
          GOTO      VNUM1010 IF LESS             * no - error
.
.         If patient is merged, make sure that PPSNAME is populated with
.         new U/R
.
          IF        FORM1 = 1
            MATCH     XPSURN,SP20
            IF        @EQUAL
              MOVE      "XPSURN  ",TMPFIELD
              CALL      NERR0000
            ENDIF
          ENDIF
          GOTO      VNUM1100
.
VNUM1010  MOVE      "XPSTAT  ",TMPFIELD
          CALL      NERR0000
.
.         Preferred Name Indicator (valid values 1, 2 and 3)
.
VNUM1100  COMPARE   ONE,PTCNNHII                 * using NHI ?
          GOTO      VNUM1200 IF NOT EQUAL        * no
.
          MATCH     SP1,XMAPREI                  * blank pref. name indicator ?
          GOTO      VNUM1200 IF EQUAL            * yes - no validation req'd
.
          TYPE      XMAPREI                      * pref. name indicator numeric?
          GOTO      VNUM1110 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      XMAPREI,FORM1
          COMPARE   FORM1,THREE                  * pref. name indicator 0 or 1 ?
          GOTO      VNUM1110 IF LESS             * no - error
          GOTO      VNUM1200                     * yes - valid value
.
VNUM1110  MOVE      "XMAPREI ",TMPFIELD
          CALL      NERR0000
.
.         Years of Fund Membership
.
VNUM1200  MATCH     SP2,XPFNDYY                  * blank yrs. fund membership ?
          GOTO      VNUM1300 IF EQUAL            * yes - no validation req'd
.
          TYPE      XPFNDYY                      * yrs. fund membership numeric?
          GOTO      VNUM1210 IF NOT EQUAL        * no - error
          GOTO      VNUM1300                     * yes - valid value
.
VNUM1210  MOVE      "XPFNDYY ",TMPFIELD
          CALL      NERR0000
.
.         Medicare Reference Number
.
VNUM1300  MATCH     SP2,XPMCCD                   * blank medicare ref. number ?
          GOTO      VNUM1400 IF EQUAL            * yes - no validation req'd
.
          MOVE      XPMCCD,DIM2
          SQUEEZE   DIM2                         * remove blanks
.
          TYPE      DIM2                         * medicare ref. number numeric?
          GOTO      VNUM1310 IF NOT EQUAL        * no - error
.
          MOVELPTR  DIM2,FORM1                   * yes - get no. of digits
          IF        FORM1 = 1
            PACK    XPMCCD,DIM2,SP1              * left justify if 1 digit
          ENDIF
          GOTO      VNUM1400
.
VNUM1310  MOVE      "XPMCCD  ",TMPFIELD
          CALL      NERR0000
.
.         National Number
.
VNUM1400  MATCH     SP20,XNATNUMB                * blank national number ?
          GOTO      VNUM1500 IF EQUAL            * yes - no validation req'd
.
.         Number of Years Residence
.
VNUM1500  MATCH     SP2,XPYRRES                  * blank yrs. residence ?
          GOTO      VNUM9000 IF EQUAL            * yes - no validation req'd
.
          TYPE      XPYRRES                      * yrs. residence numeric?
          GOTO      VNUM1510 IF NOT EQUAL        * no - error
          GOTO      VNUM9000                     * yes - valid value
.
VNUM1510  MOVE      "XPYRRES ",TMPFIELD
          CALL      NERR0000
.
VNUM9000  BRANCH    ERORFLAG,VNUM9100            * errors on number validation
.
          MOVE      ZERO,EXIT                    * no errors on no. validation
          GOTO      VNUM9999
.
VNUM9100  ADD       ONE,NUMCOUNT                 * incr. num. error record count
          MOVE      ONE,EXIT
.
VNUM9999  RETURN
+
.*****************************************************************************
.*                            NERR0000             Called by: VNUM0000       *
.*                    Process number error                                   *
.* Requires: TMPFIELD - field name                                           *
.* Returns:  ERORFLAG = 1 if an error in number validation occurs.           *
.*****************************************************************************
.
NERR0000  MOVE      "Invalid numeric field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set number error flag
.
NERR9999  RETURN
+
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields                    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * initialise code error flag
.
          MATCH     SP4,PTITL                    * blank code ?
          GOTO      CVAL0100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PTITL,SP10
          MOVE      "XTIT    ",TMPFIELD
          MOVE      TWO,TEMPTYPE                 * pmstleaf (patient title)
          CALL      VCOD0000
.
CVAL0100  MATCH     SP3,PMSTAT                   * blank code ?
          GOTO      CVAL0200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSM,SP1
          PACK      TEMPCODE,PMSTAT,SP10
          MOVE      "XMSTAT  ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (marital status)
          CALL      VCOD0000
.
CVAL0200  MATCH     SP3,PCONT                    * blank code ?
          GOTO      CVAL0300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,SP1
          PACK      TEMPCODE,PCONT,SP10
          MOVE      "XCOB    ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (country of birth)
          CALL      VCOD0000
.
CVAL0300  MATCH     SP3,PMPXABRG                 * blank code ?
          GOTO      CVAL0400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSV,ANSA
          PACK      TEMPCODE,PMPXABRG,SP10
          MOVE      "XABORIG ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (aboriginality)
          CALL      VCOD0000
.
CVAL0400  MATCH     SP3,PREG                     * blank code ?
          GOTO      CVAL0500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,SP1
          PACK      TEMPCODE,PREG,SP10
          MOVE      "XREL    ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (religion)
          CALL      VCOD0000
.
CVAL0500  MATCH     SP3,PDIET                    * blank code ?
          GOTO      CVAL0600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANSC
          PACK      TEMPCODE,PDIET,SP10
          MOVE      "XPDIET  ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (diet code)
          CALL      VCOD0000
.
CVAL0600  MATCH     SP3,PMPXDETY                 * blank code ?
          GOTO      CVAL0700 IF EQUAL            * yes - no validation req'd
          PACK      TEMPCATG,ANSD,ANSY
          PACK      TEMPCODE,PMPXDETY,SP10
          MOVE      "XDETYP  ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (death type)
          CALL      VCOD0000
.
CVAL0700  MATCH     SP10,PNKRELP                 * blank code ?
          GOTO      CVAL0800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PNKRELP,SP10
          MOVE      "XNOKREL ",TMPFIELD
          MOVE      THREE,TEMPTYPE               * pmsrelaf (nok relationship)
          CALL      VCOD0000
.
CVAL0800  MATCH     SP10,PTMXECRE                * blank code ?
          GOTO      CVAL0900 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PTMXECRE,SP10
          MOVE      "XCONREL ",TMPFIELD
          MOVE      THREE,TEMPTYPE               * pmsrelaf (emer cont rel'ship)
          CALL      VCOD0000
.
CVAL0900  MATCH     SP10,PTMXNRRE                * blank code ?
          GOTO      CVAL1000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PTMXNRRE,SP10
          MOVE      "XNEAREL ",TMPFIELD
          MOVE      THREE,TEMPTYPE               * pmsrelaf (nearest rel'ship)
          CALL      VCOD0000
.
CVAL1000  MATCH     SP10,PMPXRH1G                * blank code ?
          GOTO      CVAL1100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMPXRH1G,SP10
          MOVE      "XREGGPP ",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmshcgaf (gp practice)
          CALL      VCOD0000
.
CVAL1100  MATCH     SP10,PMPXRHC1                * blank code ?
          GOTO      CVAL1200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMPXRHC1,SP10
          MOVE      "XREGGP  ",TMPFIELD
          MOVE      FIVE,TEMPTYPE                * pmshcpaf (gp)
          CALL      VCOD0000
.
CVAL1200  MATCH     SP6,PFUNDH                   * blank code ?
          GOTO      CVAL1300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,PFUNDH
          PACK      TEMPCODE,ZERO4,SP10
          MOVE      "XHFUND  ",TMPFIELD
          MOVE      SIX,TEMPTYPE                 * patfn1af (health fund)
          CALL      VCOD0000
.
CVAL1300  MATCH     SP8,PFNDTB                   * blank code ?
          GOTO      CVAL1400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,PFUNDH
          PACK      TEMPCODE,PFNDTB,SP10
          MOVE      "XHFTAB  ",TMPFIELD
          MOVE      SIX,TEMPTYPE                 * patfn1af (health fund table)
          CALL      VCOD0000
.
CVAL1400  MATCH     SP3,SAVEDVAC                 * blank code ?
          GOTO      CVAL1500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANSX
          PACK      TEMPCODE,SAVEDVAC,SP10
          MOVE      "XDVAC   ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (dva card colour)
          CALL      VCOD0000
.
CVAL1500  MATCH     SP3,PUSR1                    * blank code ?
          GOTO      CVAL1600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSP,ONE
          PACK      TEMPCODE,PUSR1,SP10
          MOVE      "XPUSR1  ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 1)
          CALL      VCOD0000
.
CVAL1600  MATCH     SP3,PUSR2                    * blank code ?
          GOTO      CVAL1700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSP,TWO
          PACK      TEMPCODE,PUSR2,SP10
          MOVE      "XPUSR2  ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 2)
          CALL      VCOD0000
.
CVAL1700  MATCH     SP3,PUSR3                    * blank code ?
          GOTO      CVAL1800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSP,THREE
          PACK      TEMPCODE,PUSR3,SP10
          MOVE      "XPUSR3  ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 3)
          CALL      VCOD0000
.
CVAL1800  MATCH     SP3,PUSR4                    * blank code ?
          GOTO      CVAL1900 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSP,FOUR
          PACK      TEMPCODE,PUSR4,SP10
          MOVE      "XPUSR4  ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 4)
          CALL      VCOD0000
.
CVAL1900  MATCH     SP3,PUSR5                    * blank code ?
          GOTO      CVAL2000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSP,FIVE
          PACK      TEMPCODE,PUSR5,SP10
          MOVE      "XPUSR5  ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 5)
          CALL      VCOD0000
.
CVAL2000  MATCH     SP3,PUSR6                    * blank code ?
          GOTO      CVAL2100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSP,SIX
          PACK      TEMPCODE,PUSR6,SP10
          MOVE      "XPUSR6  ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 6)
          CALL      VCOD0000
.
CVAL2100  MATCH     SP3,PTYPE                    * blank code ?
          GOTO      CVAL2200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANST,SP1
          PACK      TEMPCODE,PTYPE,SP10
          MOVE      "XPTYPE  ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (patient type)
          CALL      VCOD0000
.
CVAL2200  MATCH     SP3,PMRSCONT                 * blank code ?
          GOTO      CVAL2300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,SP1
          PACK      TEMPCODE,PMRSCONT,SP10
          MOVE      "XRSCONT ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (country of res.)
          CALL      VCOD0000
.
CVAL2300  MATCH     SP3,PMPXLNG1                 * blank code ?
          GOTO      CVAL2400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSL,ANSA
          PACK      TEMPCODE,PMPXLNG1,SP10
          MOVE      "XPXLNG1 ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (preferred lang. 1)
          CALL      VCOD0000
.
CVAL2400  COMPARE   ONE,PTCNNHII                 * using NHI ?
          GOTO      CVAL2700 IF NOT EQUAL        * no
.
          MATCH     SP5,NHMAETH                  * blank code ?
          GOTO      CVAL2500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,NHMAETH,SP10
          MOVE      "XMAETH  ",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * nhiethaf (ethnicity 1)
          CALL      VCOD0000
.
CVAL2500  MATCH     SP5,NHMAETH2                 * blank code ?
          GOTO      CVAL2600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,NHMAETH2,SP10
          MOVE      "XMAETH2 ",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * nhiethaf (ethnicity 2)
          CALL      VCOD0000
.
CVAL2600  MATCH     SP5,NHMAETH3                 * blank code ?
          GOTO      CVAL2700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,NHMAETH3,SP10
          MOVE      "XMAETH3 ",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * nhiethaf (ethnicity 3)
          CALL      VCOD0000
.
CVAL2700  MATCH     SP3,PTMXCXMP                 * blank code ?
          GOTO      CVAL2800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSX,ANSM
          PACK      TEMPCODE,PTMXCXMP,SP10
          MOVE      "XEXMT   ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (exemption type)
          CALL      VCOD0000
.
CVAL2800  MATCH     SP3,PTMXDEAF                 * blank code ?
          GOTO      CVAL2900 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANSK
          PACK      TEMPCODE,PTMXDEAF,SP10
          MOVE      "XTMXDEAF",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (deaf)
          CALL      VCOD0000
.
CVAL2900  MATCH     SP3,PMPXIWI1                 * blank code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          MOVE      CATLOWIW,TEMPCATG
          PACK      TEMPCODE,PMPXIWI1,SP10
          MOVE      "XIWICOD1",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (iwi)
          CALL      VCOD0000
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100            * errors on code validation
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCATG - temporary category variable                          *
.*           TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.* Returns:  ERORFLAG = 1 if an error in code validation occurs.             *
.*****************************************************************************
.
VCOD0000  BRANCH    TEMPTYPE,VCOD1000:           * patcodes (category-codes)
                             VCOD2000:           * pmstleaf (patient titles)
                             VCOD3000:           * pmsrelaf (relationships)
                             VCOD4000:           * pmshcgaf (HCP Practices)
                             VCOD5000:           * pmshcpaf (HCP)
                             VCOD6000:           * patfn1af (health fund/table)
                             VCOD7000            * nhiethaf (ethnicity)
.
.         Validate a category-coded field (patcodes)
.
VCOD1000  PACK      KEY5,TEMPCATG,TEMPCODE
          CALL      RDCODE1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a patient title (pmstleaf)
.
VCOD2000  MOVE      TEMPCODE,KEY4
          CALL      RDPMTLE1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a relationship (pmsrelaf)
.
VCOD3000  MOVE      TEMPCODE,KEY10
          CALL      RDPMREL1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a HCP Practice (pmshcgaf)
.
VCOD4000  PACK      KEY12,TEMPCODE,SP20
          CALL      RSPMHCG1                     * valid code ?
          CALL      RKPMHCG1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
.
          MATCH     TEMPCODE,PMHGPRAC            * same practice ?
          GOTO      VCOD9100 IF NOT EQUAL        * no
          GOTO      VCOD9999                     * yes
.
.         Validate a HCP (pmshcpaf)
.
VCOD5000  MOVE      TEMPCODE,KEY10
          CALL      RDPMHCP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
.
          MATCH     SP10,PMPXRH1G                * blank practice ?
          GOTO      VCOD9999 IF EQUAL            * yes
.
          PACK      KEY20,PMPXRHC1,PMPXRH1G
          CALL      RDPMHCL1                     * gp/practice linked ?
          IF        OVRCD = 1 
            MOVE      "GP not linked to Practice ",ERORDESC
            CALL      PERR0000
            MOVE      ONE,ERORFLAG               * set code error flag
          ENDIF     
          GOTO      VCOD9999                     * yes
.
.         Validate a Health Fund or Health Fund Table (patfn1af)
.
VCOD6000  PACK      KEY14,TEMPCATG,TEMPCODE
          CALL      RDFUND1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an Ethnicity (nhiethaf)
.
VCOD7000  MOVE      TEMPCODE,KEY5
          CALL      RDNHETH1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
          MOVE      ONE,ERORFLAG                 * set code error flag
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                           UGSR0000              Called by: UPLD0000       *
.*                   Update the patgsrnf record for the patient              *
.* Requires: ACTMSAV variables set for original PMI details                  *
.*           Updated PMI variables                                           *
.*****************************************************************************
.
UGSR0000  MATCH     SPTMASNM,PTMASNAM            * change in surname ?
          GOTO      UGSR1000 IF NOT EQUAL        * yes - update patgsrnf record
.
          MATCH     SPMPXFNM,PMPXFNAM            * change in first name ?
          GOTO      UGSR1000 IF NOT EQUAL        * yes - update patgsrnf record
.
          MATCH     SPMPXSNM,PMPXSNAM            * change in second name ?
          GOTO      UGSR1000 IF NOT EQUAL        * yes - update patgsrnf record
.
          MATCH     SPBDATE,PBDATE               * change in dob ?
          GOTO      UGSR1000 IF NOT EQUAL        * yes - update patgsrnf record
.
          MATCH     SPSEX,PSEX                   * change in sex ?
          GOTO      UGSR1000 IF NOT EQUAL        * yes - update patgsrnf record
.
.         No patgsrnf fields have changed, so no action required
.
          GOTO      UGSR9999                     * finished
.
.         One or more fields have changed, so check if a patgsrnf record
.         already exists for the new values and if not, add the record.
.
UGSR1000  MOVE      PTMASNAM,GSRSNAM
          MOVE      PMPXFNAM,GSRGNAM
          MOVE      PMPXSNAM,PTGSGNM2
          MOVE      PBDATE,GSRDOB
          MOVE      PSEX,GSRSEX
          PACK      KEY115,PURNO,SP7,ZERO,GSRSNAM,GSRGNAM,PTGSGNM2,PBDATE,PSEX
          CALL      RAPTGSR1
          IF        OVRCD = 1
            CALL      SOUNDEX                  * set soundex keys
            CALL      SOUNDX2
            CALL      WRPTGSR1
          ENDIF
.
UGSR9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: VCOD0000       *
.*                   Print an error detail line                              *
.* Requires: XSURN - patient surname                                         *
.*           XPGNAM1 - patient given name                                    *
.*           XTIT  - patient title                                           *
.*           ERORDESC - error description                                    *
.*           CLNO - current page line count                                  *
.* Returns:  CLNO - updated page line count                                  *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          MOVE      XSURN,PACSNAME               * format patient name
          MOVE      XPGNAM1,PACGNAME
          MOVE      XTIT,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DIM45
.
          PRINT     *1,PIPE,*3,XURNO,*12,PIPE,*14,DIM45,*59,PIPE,*61,ERORDESC:
                    *132,PIPE
          ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
.------------------------------------------------------------
. Write an update demographics record (pmsupdaf)
.------------------------------------------------------------
WRUPD000  OPEN      PMSUPDA1,"pmsupdaf"
.
          PACK      PMUDURNO,PURNO,SP70
.
          CALL      IBACLOCK
          PACK      PMUDDATE,CCC,CYY,CMM,CDD
          REPLACE   " 0",PMUDDATE
          CLOCK     TIME,PMUDTIME
.
          MOVE      "CONVMAST  ",PMUDUSER
.
          PACK      KEY8,PMUDURNO,SP70
          CALL      RDPMUPD1
          IF        OVRCD=1
            CALL      IBACLOCK
            PACK      PMUDDATC,CCC,CYY,CMM,CDD
            REPLACE   " 0",PMUDDATC
            CLOCK     TIME,PMUDTIMC
            MOVE      "CONVMAST  ",PMUDWEBC
            CALL      WRPMUPD1
          ELSE
            CALL      IBACLOCK
            PACK      PMUDDATE,CCC,CYY,CMM,CDD
            REPLACE   " 0",PMUDDATE
            CLOCK     TIME,PMUDTIME
            CALL      UPPMUPD1
          ENDIF
.
          CLOSE     PMSUPDA1
.
WRUPD999  RETURN
.
+
.*****************************************************************************
.*                       I/O Routines For The Tempfile                       *
.*****************************************************************************
.
RDTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      TEMP1,KEY10;OLDGP,NEWGP
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP2   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      TEMP2,KEY5;OLDCTCAT,OLDCTCOD,NEWCTCAT,NEWCTCOD
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP3   MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      TEMP3,KEY10;OLDRELNS,NEWRELNS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP4   MOVE      ZERO,OVRCD
          RESET     KEY14
          READ      TEMP4,KEY14;OLDHFUND,OLDTABLE,NEWHFUND,NEWTABLE
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP5   MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      TEMP5,KEY10;OLDPRAC,NEWPRAC
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP6   MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      TEMP6,KEY4;OLDTITLE,NEWTITLE
          GOTO      OVERCOND IF OVER
          RETURN
+
WEBERR00  RETURN
.==============================================================================
.
          INC       STD001IO
.
          INC       ACTMSAV
          INC       AGECHK
          INC       CLPATMAS
          INC       CLPMSPX2
          INC       CLNHIMAS
          INC       PATCODKY
          INC       PATCOMN2
          INC       PATHSPKY
          INC       PMIGTNID
.
          INC       BOKRC1IO/INC
          INC       IBAPOSIO/INC
          INC       NHIETHIO/INC
          INC       NHIMASIO/INC
          INC       PATALRIO/INC
          INC       PATAM1IO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATECDIO/INC
          INC       PATFN1IO/INC
          INC       PATGSRIO/INC
          INC       PATHSPIO/INC
          INC       PATINVIO/INC
          INC       PATLOCIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATNIDIO/INC
          INC       PATTRNIO/INC
          INC       PATURAIO/INC
          INC       PATVISIO/INC
          INC       PMSCCDIO/INC
          INC       PMSCURIO/INC
          INC       PMSHCGIO/INC
          INC       PMSHCLIO/INC
          INC       PMSHCPIO/INC
          INC       PMSPX2IO/INC
          INC       PMSRELIO/INC
          INC       PMSRESIO/INC
          INC       PMSTLEIO/INC
          INC       PMSUPDIO/INC
          INC       WEBSECIO/INC
+
.

