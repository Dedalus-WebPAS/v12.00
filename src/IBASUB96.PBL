.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.08.01  05.02.2007 Sandra Barcham 126212
.           Copy of IBASUB35 with all checking removed
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB96
.   Function      :   Delete a Catalog - No Checking          
.   Generated  On :   05/02/2007
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       SINBACFD/INC
          INC       SINCCHFD/INC
          INC       SINCIAFD/INC
          INC       SINCIBFD/INC
          INC       SINCICFD/INC
          INC       SINCIDFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCIGFD/INC
          INC       SINCIHFD/INC
          INC       SINCIIFD/INC
          INC       SINCONFD/INC
          INC       SINCOSFD/INC
          INC       SINDISFD/INC
          INC       SINIMPFD/INC
          INC       SINITMFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWRKDF    
          INC       SINWRKFD/INC
.=========================
.Local Variable Definition
.-------------------------
CATDESC1  DIM      30 * Scr 00 Fld     5
CATDESC2  DIM      40 * Scr 00 Fld     6
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB96"
PRGNAM    INIT      "Delete a Catalog - No Checking          "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   24",AUDTSECT
          MOVE      "206",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudba";
            OPEN      SINAUDBA,"sinaudba"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "203",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudia";
            OPEN      SINAUDIA,"sinaudia"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "207",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudic";
            OPEN      SINAUDIC,"sinaudic"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "208",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudie";
            OPEN      SINAUDIE,"sinaudie"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "204",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudim";
            OPEN      SINAUDIM,"sinaudim"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "223",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudwa";
            OPEN      SINAUDWA,"sinaudwa"
          ENDIF
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA1,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA2,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA3,"sinbacaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA1,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA2,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA3,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA4,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA5,"sincchaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincibaf";
          OPEN      SINCIBA1,"sincibaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA1,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA2,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA3,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA4,"sincicaf"
          DISPLAY   *P56:24,"Opening sincidaf";
          OPEN      SINCIDA1,"sincidaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA1,"sincifaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA2,"sincifaf"
          DISPLAY   *P56:24,"Opening sincigaf";
          OPEN      SINCIGA1,"sincigaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA2,"sincihaf"
          DISPLAY   *P56:24,"Opening sinciiaf";
          OPEN      SINCIIA1,"sinciiaf"
          DISPLAY   *P56:24,"Opening sincosaf";
          OPEN      SINCOSA1,"sincosaf"
          DISPLAY   *P56:24,"Opening sindisaf";
          OPEN      SINDISA1,"sindisaf"
          DISPLAY   *P56:24,"Opening sinimpaf";
          OPEN      SINIMPA1,"sinimpaf"
          DISPLAY   *P56:24,"Opening sinimpaf";
          OPEN      SINIMPA2,"sinimpaf"
          DISPLAY   *P56:24,"Opening sinimpaf";
          OPEN      SINIMPA3,"sinimpaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA1,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA2,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETACCEP
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
          MOVE      SP70,SIIACAT 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103
          GOTO     PS00L999
.
PS00L101
          MOVE      SIIACAT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      CATDESC1,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      CATDESC2,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DSIIA000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CATDESC1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CATDESC2
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSIIA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIIACAT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CATDESC1,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CATDESC2,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.********************************************************************
. Set accept mode
.********************************************************************
SETACCEP  MOVE      ONE,ACCEPT
          RETURN
.----------------------------------------------------------------------
. Delete SIIA Data
.----------------------------------------------------------------------
DSIIA000  PACK      DISPMSG,SP70,SP70  * save line 24
          CALL      MESSAGE2
.
          CALL      DELQST             * delete (y/n/c) ?
          SUB       ONE,CEXIT
          BRANCH    CEXIT,DSIIA900,DSIIA910
.
.---- lock catalog ----
.
          PACK      KEY7,SIIACAT,SP70            * lock Catalog
          REPEAT
            CALL      RLSIIA1
            IF        OVRCD=1
              BEEP
              CLEAR     DISPMSG
              APPEND    "Catalog ",DISPMSG
              APPEND    KEY7,DISPMSG
              APPEND    " Missing - ",DISPMSG
              DISPLAY   *P1:24,*+,DISPMSG,*EF;
              CALL      HITENTER
              GOTO      DSIIA900
            ENDIF
            IF        OVRCD=2
              BEEP
              KEYIN     *P1:24,*EL,"Catalog ":
                        *DV,KEY7," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      DSIIA900 IF EQUAL
              MATCH     "E",ANS
              GOTO      DSIIA900 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
.---- delete Backorder data ----
.
DSIIA100  PACK      KEY25,SIIACAT,SP70  * delete backorder data
          DISPLAY   *P1:24,"Deleting : ",*V2LON,"SIBA",*EF;
.
DSIIA110  CALL      RSSIBA3
          CALL      RKSIBA3
          BRANCH    OVRCD,DSIIA795
          PACK      KEY25,SIBACAT,SIBAWAR,SIBACST,SIBAREQ,SP70
          MATCH     SIIACAT,KEY25
          GOTO      DSIIA795 IF NOT EQUAL
.
          CALL      DESIBA3
          GOTO      DSIIA110
.
.---- delete catalog data ----
.
DSIIA795  PACK      KEY10,SIIACAT,SP70  * delete catalog comments
          DISPLAY   *P1:24,"Deleting : ",*V2LON,"SIIB",*EF;
.
DSIIA800  CALL      RSSIIB1
          CALL      RKSIIB1
          BRANCH    OVRCD,DSIIA805
          PACK      KEY10,SIIBCAT,SIIBLIN,SP70
          MATCH     SIIACAT,KEY10
          GOTO      DSIIA805 IF NOT EQUAL
.
          CALL      DESIIB1
          GOTO      DSIIA800
.
DSIIA805  PACK      KEY27,SIIACAT,SP70  * delete catalog/supplier
          DISPLAY   *P1:24,"Deleting : ",*V2LON,"SIIC",*EF;
.
DSIIA810  CALL      RSSIIC1
          CALL      RKSIIC1
          BRANCH    OVRCD,DSIIA815
          PACK      KEY27,SIICCAT,SIICSUP,SIICSUT,SP70
          MATCH     SIIACAT,KEY27
          GOTO      DSIIA815 IF NOT EQUAL
.
          CALL      DESIIC1
          MOVE      FOUR,AUDTTYPE       * write delete audit
          CALL      WASIIC00
          GOTO      DSIIA810
.
DSIIA815  PACK      KEY15,SIIACAT,SP70  * delete catalog/supplier comments
          DISPLAY   *P1:24,"Deleting : ",*V2LON,"SIID",*EF;
.
DSIIA820  CALL      RSSIID1
          CALL      RKSIID1
          BRANCH    OVRCD,DSIIA825
          PACK      KEY15,SIIDCAT,SIIDSUP,SIIDLIN,SP70
          MATCH     SIIACAT,KEY15
          GOTO      DSIIA825 IF NOT EQUAL
.
          CALL      DESIID1
          GOTO      DSIIA820
.
DSIIA825  PACK      KEY12,SIIACAT,SP70  * delete catalog/warehouse
          DISPLAY   *P1:24,"Deleting : ",*V2LON,"SIIE",*EF;
.
DSIIA830  CALL      RSSIIE1
          CALL      RKSIIE1
          BRANCH    OVRCD,DSIIA835
          PACK      KEY12,SIIECAT,SIIEWAR,SP70
          MATCH     SIIACAT,KEY12
          GOTO      DSIIA835 IF NOT EQUAL
.
          CALL      DESIIE1
          MOVE      FOUR,AUDTTYPE       * write delete audit
          CALL      WASIIE00
.
          PACK      SKEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY27,SKEY12,SP70   * delete catalog expiry dates
.
DSIIA831  CALL      RSSIII1
          CALL      RKSIII1
          BRANCH    OVRCD,DSIIA832
          PACK      KEY27,SIIIWAR,SIIICAT,SIIIPUR,SIIIDAT,SP70
          MATCH     SKEY12,KEY27
          GOTO      DSIIA832 IF NOT EQUAL
.
          CALL      DESIII1
          GOTO      DSIIA831
.
DSIIA832  PACK      SKEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY20,SKEY12,SP70   * delete catalog stocktake discrepancies
.
DSIIA833  CALL      RSSIDS1
          CALL      RKSIDS1
          BRANCH    OVRCD,DSIIA830
          PACK      KEY20,SIDSWAR,SIDSCAT,SIDSDAT,SP70
          MATCH     SKEY12,KEY20
          GOTO      DSIIA830 IF NOT EQUAL
.
          CALL      DESIDS1
          GOTO      DSIIA833
.
DSIIA835  PACK      KEY67,SIIACAT,SP70  * delete alias's
          DISPLAY   *P1:24,"Deleting : ",*V2LON,"SIIF",*EF;
.
DSIIA840  CALL      RSSIIF2
          CALL      RKSIIF2
          BRANCH    OVRCD,DSIIA845
          PACK      KEY67,SIIFCAT,SIIFALI,SP70
          MATCH     SIIACAT,KEY67
          GOTO      DSIIA845 IF NOT EQUAL
.
          CALL      DESIIF2
          GOTO      DSIIA840
.
DSIIA845  PACK      KEY15,SIIACAT,SP70  * delete catalog/warehouse comments
          DISPLAY   *P1:24,"Deleting : ",*V2LON,"SIIG",*EF;
.
DSIIA850  CALL      RSSIIG1
          CALL      RKSIIG1
          BRANCH    OVRCD,DSIIA855
          PACK      KEY15,SIIGCAT,SIIGWAR,SIIGLIN,SP70
          MATCH     SIIACAT,KEY15
          GOTO      DSIIA855 IF NOT EQUAL
.
          CALL      DESIIG1
          GOTO      DSIIA850
.
DSIIA855  PACK      KEY18,SIIACAT,SP70  * delete catalog usage by Warehouse
          DISPLAY   *P1:24,"Deleting : ",*V2LON,"SIIH",*EF;
.
DSIIA860  CALL      RSSIIH1
          CALL      RKSIIH1
          BRANCH    OVRCD,DSIIA865
          PACK      KEY18,SIIHCAT,SIIHWAR,SIIHDAT,SP70
          MATCH     SIIACAT,KEY18
          GOTO      DSIIA865 IF NOT EQUAL
.
          CALL      DESIIH1
          GOTO      DSIIA860
.
DSIIA865  PACK      KEY28,SIIACAT,SP70  * delete catalog usage by Warehouse
          DISPLAY   *P1:24,"Deleting : ",*V2LON,"SICH",*EF;
.
DSIIA870  CALL      RSSICH4
          CALL      RKSICH4
          BRANCH    OVRCD,DSIIA875
          PACK      KEY28,SICHCAT,SICHWAR,SICHDAT,SICHCST,SICHSUB,SP70
          MATCH     SIIACAT,KEY28
          GOTO      DSIIA875 IF NOT EQUAL
.
          CALL      DESICH4
          GOTO      DSIIA870
.
DSIIA875  PACK      KEY12,SIIACAT,SP70  * delete catalog imprest
          DISPLAY   *P1:24,"Deleting : ",*V2LON,"SIIM",*EF;
.
DSIIA880  CALL      RSSIIM2
          CALL      RKSIIM2
          BRANCH    OVRCD,DSIIA885
          PACK      KEY12,SIIMCAT,SIIMCST,SP70
          MATCH     SIIACAT,KEY12
          GOTO      DSIIA885 IF NOT EQUAL
.
          CALL      DESIIM2
          GOTO      DSIIA880
.
DSIIA885  DISPLAY   *P1:24,"Deleting : ",*V2LON,"SIIT",*EF;
          PACK      KEY28,SIIACAT,SP70           * delete item history
.
DSIIA886  CALL      RSSIIT2
          CALL      RKSIIT2
          BRANCH    OVRCD,DSIIA889
.
          PACK      KEY28,SIITCAT,SIITDAT,SIITWAR,SIITTIM,SP70
          MATCH     SIIACAT,SIITCAT
          GOTO      DSIIA889 IF NOT EQUAL
.
          CALL      DESIIT2
          GOTO      DSIIA886
.
DSIIA889  DISPLAY   *P1:24,"Deleting : ",*V2LON,"SICO",*EF;
          PACK      KEY35,SIIACAT,SP70      * delete cost variance
.
DSIIA890  CALL      RSSICO1
          CALL      RKSICO1
          BRANCH    OVRCD,DSIIA895
          PACK      KEY35,SICOCAT,SICOSUP,SICOSUT,SICODAT,SP70
          MATCH     SIIACAT,SICOCAT
          GOTO      DSIIA895 IF NOT EQUAL
.
          CALL      DESICO1
          GOTO      DSIIA890
.
DSIIA895  DISPLAY   *P1:24,"Deleting : ",*V2LON,"SIIA",*EF;
          PACK      KEY7,SIIACAT,SP70   * delete catalog
          CALL      DESIIA1
          MOVE      FOUR,AUDTTYPE       * write delete audit
          CALL      WASIIA00
.
.
DSIIA900  MOVE      TWO,EXIT
          CALL      UUSIIA1             * make sure record unlocked
          GOTO      DSIIA999
.
DSIIA910  MOVE      ZERO,EXIT
          GOTO      DSIIA999
.
DSIIA999  CALL      MESSAGE3            * restore line 24
          RETURN
.----------------------------------------------------------------------
. Keyin SIIA
.----------------------------------------------------------------------
KSIIA000
          CALL      KSIIAA00                     * keyin SIIA
          BRANCH    EXIT,KSIIA950,KSIIA950
.
          PACK      KEY60,SIIADES,SP70
          CALL      BKLIN000
          PACK      CATDESC1,KEY30,SP70
          PACK      CATDESC2,KEY60,SP70
.
KSIIA900  MOVE      ZERO,EXIT
          GOTO      KSIIA999
.
KSIIA950  MOVE      TWO,EXIT
.
KSIIA999  RETURN
.********************************************************************
. BKLIN - Break up KEY60 into two neat halves        Called by lots
.         Requires - KEY60   (original line)
.         Returns  - KEY30   (line 1)
.                    KEY60   (line 2)
.********************************************************************
BKLIN000  RESET     KEY60,31           * reset to length(line1)+1
          CMATCH    SP70,KEY60
          WHILE     !@EQUAL&!@EOS
            BUMP      KEY60,-1
            IF        !@EOS
              CMATCH    SP70,KEY60
            ENDIF
          DO
.
          IF        @EOS
            SETLPTR   KEY60
            RESET     KEY60
            UNPACK    KEY60,KEY30,KEY60
          ELSE
            LENSET    KEY60
            RESET     KEY60
            MOVE      KEY60,KEY30
            PACK      KEY30,KEY30,SP70
.
            ENDSET    KEY60
            SETLPTR   KEY60
            BUMP      KEY60
            PACK      KEY60,KEY60,SP70
          ENDIF
.
BKLIN999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       SINBACIO/INC
          INC       SINCCHIO/INC
          INC       SINCIAIO/INC
          INC       SINCIAKY    
          INC       SINCIBIO/INC
          INC       SINCICIO/INC
          INC       SINCIDIO/INC
          INC       SINCIEIO/INC
          INC       SINCIFIO/INC
          INC       SINCIGIO/INC
          INC       SINCIHIO/INC
          INC       SINCIIIO/INC
          INC       SINCOSIO/INC
          INC       SINDISIO/INC
          INC       SINIMPIO/INC
          INC       SINITMIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINWARIO/INC
          INC       SINWRKCD    
          INC       SINWRKIO/INC
.
          INC       STDGENCD
.
