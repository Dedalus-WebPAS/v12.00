.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   EXTRWAIT                                                    *
.* Desc      :   Waiting List List Data Extraction Program                   *
.*****************************************************************************
.* Date      :   15/12/2014                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will extract the waiting list records into     *
.*               a pipe delimited file in a format that will feed into       *
.*               CONVWAIT.                                                   *
.* Mods:                                                                     *
.*****************************************************************************
.*        V12.00.01 21/05/2025  PJ Le Febour   TSK 0955096 AlphaNum visit num*
.*                  amended WMBOOK,KEY8 to WMBOOK,DIM8VISN                   *
.*                          COMPARE WMBOOK,FORM8 to MATCH WMBOOK,DIM8VISN    *
.*****************************************************************************
.*        V11.02.01 10/02/2022  Thanh T       TSK 0889899                    *
.*                  Recompiled as WATTR1FD changes                           *
.*        V10.11.01 09/11/2017  Peter Vela       TSK 0847214                 *
.*                  Recompiled for EXACCDAT                                  *
.*        V10.08.03 27/10/2016  Steve Armstrong  TSK 0819758 (CTAS)          *
.*                  Mods to extract ACC Comment data                         *
.*        V10.08.02 16/08/2016  Jill Parkinson TSK 0824046                   *
.*                  Fixed PROC5000 to match WMCNT to WTSUCNT not WTSUSCNT    *
.*        V10.08.01 08/08/2016  Jill Parkinson TSK 0824046                   *
.*                  Added update of bkrestat to cancelled                    *
.*****************************************************************************
.*        V10.07.02 09/02/2016  Steve Armstrong   CAR 0323625                *
.*                  Added new date keyed field (WMKEYDT)                     *
.*        V10.07.01 13/10/2015  Steve Armstrong  CAR 319164                  *
.*                  Added new fields to the W/L detail record (WAITANAE      *
.*                  through to WAITLSTR).                                    *
.*                  Also added functionality to load comments from either    *
.*                  watmesaf or watmtxaf.  Where comments are from watmtxaf  *
.*                  they are comments from the most recent "Note".           *
.*****************************************************************************
.*        V10.06.05 02/09/2015  Steve Armstrong  CAR 318304                  *
.*                  Mods to allow a range of Unit (Cat WU) codes to be       *
.*                  extracted                                                *
.*        V10.06.04 06/08/2015  Steve Armstrong  CAR 320431                  *
.*                  Fixed I*C on patmx1af                                    *
.*        V10.06.03 03/08/2015  Steve Armstrong  CAR 320247                  *
.*                  Fixed description of valid values for WAITMAUT           *
.*        V10.06.02 31/07/2015  Steve Armstrong  CAR 320199                  *
.*                  Mods to load PMI details prior to calling DGCLIWLD       *
.*        V10.06.01 12/03/2015  Steve Armstrong  CAR 314108                  *
.*                  Removed reference to PATCGPFD (No Longer in use)         *
.*                  27/02/2015  Steve Armstrong  CAR 313849                  *
.*                  Mods to handle ACC data extraction (CRISP).              *
.*                  Mods to handle W/L History data extraction (CRISP).      *
.*                  Also fixed issue where only the first related suspension *
.*                  record was being extracted instead of all of them.       *
.*                  Also added WAITPHSP and WAITACPR fields to the W/L       *
.*                  details record (CRISP).                                  *
.*****************************************************************************
.*        V10.05.00 15/12/2014  Steve Armstrong  CAR 305263                  *
.*                  Created program.                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ACCCMTFD/INC
          INC       BOKRC1FD/INC
          INC       BOKRX1FD/INC
          INC       IBACONFD/INC
          INC       NHIMASFD/INC
          INC       PATATRFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PATNIDFD/INC
          INC       PATWC1FD/INC
          INC       PMSPX2FD/INC
          INC       PMSWX1FD/INC
          INC       WATCONFD/INC
          INC       WATHISFD/INC
          INC       WATHISTD/INC
          INC       WATMESFD/INC
          INC       WATMHDFD/INC
          INC       WATMTXFD/INC
          INC       WATPROFD/INC
          INC       WATSUSFD/INC
          INC       WATTR1FD/INC
          INC       WATTX1FD/INC
          INC       WEBSECFD/INC
.
.
.         W/L upload file layout - convwait.txt
.         (as per CONVWAIT)
.
WAITTEXT  FILE      HL7, FIXED=4073
.
WAITTYPE  DIM       1     W/L record type
.                           0 = W/L
WAITURNO  DIM       8     U/R Number                                    (wmurno)
WAITCODE  DIM       9     Procedure Code 1 (watproaf)                   (wmcode)
WAITCOD2  DIM       9     Procedure Code 2 (watproaf)                 (wtwmpro2)
WAITCOD3  DIM       9     Procedure Code 3 (watproaf)                 (wtwmpro3)
WAITDESC  DIM       80    Procedure Description                         (wmdesc)
WAITDATL  DIM       8     Date on List (ccyymmdd)                      (wmdate1)
WAITSTAT  DIM       1     Procedure Status                              (wmstat)
.                             1 = Unscheduled
.                             2 = Scheduled
WAITUNIT  DIM       3     Unit/Clinic (Cat WU)                          (wmunit)
WAITDOCT  DIM       6     Attending Doctor (patdo1af)                 (wmdoctor)
WAITCTYP  DIM       3     Claim Code (Cat CL)                         (wttxctyp)
WAITPRTY  DIM       3     Priority (Cat TP)                              (wmpty)
WAITIHSP  DIM       3     Intended Hospital (pathspaf)                (wtwmihsp)
WAITSRCR  DIM       3     Source of Referral (Cat S)                  (wtwmsrcr)
WAITPLST  DIM       3     List Status (PRS/2) (Cat VL)                (wttxplst)
WAITDATS  DIM       8     Scheduled Admit Date (ccyymmdd)              (wmdate3)
WAITTIMS  DIM       8     Scheduled Admit Time (hh:mm:ss)             (wttxpatm)
WAITSTAY  DIM       5     Estimated Stay                                (wmstay)
WAITNICE  DIM       3     Short Notice (Cat WS)                       (wmnotice)
WAITCLSS  DIM       3     Patient Cat/Adm Class (Cat P)               (wtwmclss)
WAITEATY  DIM       3     Elective Admission Type (Cat CC)            (wtwmeaty)
WAITRFGP  DIM       10    Referring GP (pmshcpaf)                     (wtwmrfgp)
WAITGPPC  DIM       10    GP Practice (pmshcgaf)                      (wtwmgppc)
WAITBOTY  DIM       3     Booking Type (Cat BK)                       (wttxboty)
WAITTEAM  DIM       5     Team                                        (wttxteam)
WAITFUND  DIM       3     Funding Source (Cat cx)                     (wttxfund)
WAITWARD  DIM       3     Ward (patwr1af)                             (wttxward)
WAITPREF  DIM       3     Preferred Accommodation (Cat BP)            (wttxpref)
WAITNWHC  DIM       3     No WA Hospital Contact (Cat cw)             (wttxnwhc)
WAITINTD  DIM       3     Intended Stay (Cat VI)                      (wttxintd)
WAITMAUT  DIM       1     Medical Authorisation Approved              (wttxmaut)
.                               Blank = Blank   
.                               0 = No
.                               1 = Yes
WAITEXPD  DIM       8     Expected Delivery Date (ccyymmdd)           (wttxexpd)
WAITTCRS  DIM       3     Tertiary Care Reason (Cat WH)               (wttxtcrs)
WAITDISC  DIM       9     Disaster Code (dismasaf)                    (wttxdisc)
WAITRCLI  DIM       10    Referring Clinician                         (wttxrcli)
WAITRCLP  DIM       10    Referring Clinician Practice                (wttxrclp)
WAITCDTE  DIM       8     Date Record Created (ccyymmdd)              (wttxcdte)
WAITCTIM  DIM       8     Time Record Created (hh:mm:ss)              (wttxctim)
WAITWEBC  DIM       10    Web User ID Created                         (wttxwebc)
WAITLUPD  DIM       8     Date Record Updated (ccyymmdd)              (wttxlupd)
WAITLUPT  DIM       8     Time Record Updated (hh:mm:ss)              (wttxlupt)
WAITWEBU  DIM       10    Web User ID Updated                         (wttxwebu)
WAITAVIS  DIM       20    Alternate Visit Number                      (ibavavis)
WAITCOMM  DIM       3500  Comments  (35 x 100)                        (wtmtcmnt)
WAITPCAT  DIM       3     Admission Type                              (wmpcat)
WAITREAS  DIM       40    Reason/Diagnosis for procedure              (wmreason)
WAITADMW  DIM       3     Admitting Ward (Cat ap)                     (wttxadmw)
WAITEABR  DIM       3     Early Booking Reason (Cat b1)               (bkrxeabr)
WAITAUBY  DIM       3     Authorised By (Cat b2)                      (bkrxauby)
WAITADAT  DIM       8     Procedure Date (ccyymmdd)                   (bkreadat)
WAITPRPB  DIM       3     Proc. Can Be Performed By (Cat yh)          (wttxprpb)
WAITAASC  DIM       4     Airway Assessment Score (ASA)               (wttxaasc)
WAITVAL1  DIM       6     Weight (kg)                                 (ptarval1)
WAITVAL2  DIM       6     Height (cm)                                 (ptarval2)
WAITVAL3  DIM       5     Calculated BMI                              (ptarval3)
WAITPHSP  DIM       3     Principal Health Service Purchaser (Cat HP) (wtwmphsp)
WAITACPR  DIM       8     Actual Procedure Event Number               (wtwmacpr)
WAITANAE  DIM       3     Anaesthetic Type (Cat OA)                   (wttxanae)
WAITECNT  DIM       9     ESIS unique count                           (wtwmecnt)
.                         *NZ - Local Booking Identifier for NBRS
WAITDABD  DIM       8     Do Not Admit Before Date/Proposed           (wtwmdabd)
.                           Operation Date
.                         *NZ - Proposed Procedure Date
.                               - Staged Due date NBRS (ccyymmdd)
WAITPOTM  DIM       8     Proposed Operation Time                     (wttxpotm)
.                           (hh:mm:ss)
WAITRANK  DIM       6     Patient Rank (Score)                        (wtwmrank)
WAITDRSA  DIM       8     Date of ref for 1st spec.                   (wtwmdrsa)
.                           assessment (ccyymmdd)
.                         *NZ - Date of Referral for FSA
WAITDOSA  DIM       8     Date of 1st specialised                     (wtwmdosa)
.                           assessment (ccyymmdd)
.                         *NZ - Date of FSA
WAITASSR  DIM       10    Assessor Code (pmshcpaf)                    (wtwmassr)
WAITDTAD  DIM       8     Decision to Admit Date                      (wtwmdtad)
.                           (ccyymmdd)
.                         *NZ - Date of Certainty
WAITDAT2  DIM       8     Date of Last Review (ccyymmdd) /            (wmdate2)
.                           Final Outcome of Offer
WAITKEYD  DIM       8     Keyin Date for Procedure (ccyymmdd)         (wmkeydt)
.
.         Suspension Records
.
.WAITTYPE DIM       1     W/L record type
.                           1 = W/L Suspension
.WAITURNO DIM       8     U/R Number                                  (wtsuurno)
.WAITCODE DIM       9     Procedure Code                              (wtsucode)
SUSPFDAT  DIM       8     From Date (ccyymmdd)                        (wtsufdat)
SUSPTDAT  DIM       8     To Date (ccyymmdd)                          (wtsutdat)
SUSPREAS  DIM       3     Suspension Reason (Cat WN)                  (wtsureas)
.WAITCOMM DIM       3500  Comments  (35 x 100)                        (wtmtcmnt)
.
.         ACC Data Records
.
.WAITTYPE DIM       1     W/L record type
.                           2 = ACC Data
.WAITURNO DIM       8     U/R Number                                  (ptwcurno)
.WAITCODE DIM       9     Procedure Code
ACCDNAME  DIM       30    Employer Name                               (wcename)
ACCDADD1  DIM       35    Employer Address Line 1                     (wceadd1)
ACCDADD2  DIM       35    Employer Address Line 2                     (wceadd2)
ACCDADD3  DIM       35    Employer Address Line 3                     (wceadd3)
ACCDADD4  DIM       35    Employer Address Line 4                     (wceadd4)
ACCDPOST  DIM       8     Employer Postcode                           (wcepost)
ACCDTELP  DIM       20    Employer Telephone                          (wcetele)
ACCDACDT  DIM       8     Date of Accident (ccyymmdd)                 (wcacdat)
ACCDACPT  DIM       1     Accepted by Ins. Co. (Y/N)                  (wcaccpt)
ACCDINSR  DIM       6     Insurance Company Code                      (wcicode)
ACCDCLNO  DIM       20    Insurance Claim Number                      (wcclmno)
ACCDCOM1  DIM       40    Comments 1                                  (wccomn1)
ACCDCOM2  DIM       40    Comments 2                                  (wccomn2)
ACCDALOC  DIM       50    Accident Location                           (pmwxaloc)
ACCDCINJ  DIM       3     Cause of Injury (Cat IK)                    (pmwxcinj)
ACCDICOD  DIM       3     Injury Code (Cat IJ)                        (pmwxicod)
ACCDCNAM  DIM       40    Contact Name                                (pmwxcnam)
ACCDCDTE  DIM       8     Date Record Created (ccyymmdd)              (pmwxcdte)
ACCDCTIM  DIM       8     Time Record Created (hh:mm:ss)              (pmwxctim)
ACCDWEBC  DIM       10    WEB User ID Record Creator                  (pmwxwebc)
ACCDLUPD  DIM       8     Last Update Date (ccyymmdd)                 (pmwxlupd)
ACCDLUPT  DIM       8     Last Update Time (hh:mm:ss)                 (pmwxlupt)
ACCDWEBU  DIM       10    WEB User ID Record Updator                  (pmwxwebu)
ACCDACCF  DIM       3     Work Related (Cat IQ)                       (pmwxaccf)
ACCDPLIN  DIM       3     Place Injury Occurred (Cat IP)              (pmwxplin)
ACCDACTI  DIM       3     Activity When Injured (Cat IO)              (pmwxacti)
ACCDADTE  DIM       8     ACC Decline Date (ccyymmdd)                 (pmwxadte)
ACCDATME  DIM       8     Accident Time (hh:mm:ss)                    (pmwxatme)
ACCDACLC  DIM       3     Accident Location (Cat IM)                  (pmwxaclc)
ACCDAINZ  DIM       1     Accident in NZ (Y/N)                        (pmwxainz)
ACCDMOVV  DIM       1     Involves Moving Vehicle on Public Road (Y/N)(pmwxmovv)
ACCDSPTI  DIM       1     Sporting Injury (Y/N)                       (pmwxspti)
ACCDSPRT  DIM       3     Sport Name (Cat IB)                         (pmwxsprt)
ACCDRECI  DIM       1     Recurring Injury Indicator (Y/N)            (pmwxreci)
ACCDTRIC  DIM       1     Treatment Injury Claim (Y/N)                (pmwxtric)
ACCDESTA  DIM       3     Employment Status (Cat IF)                  (pmwxesta)
ACCDPDDT  DIM       8     Patient Declaration Date (ccyymmdd)         (pmwxpddt)
ACCDARG1  DIM       20    Authorised Representative Given Name 1      (pmwxarg1)
ACCDARG2  DIM       20    Authorised Representative Given Name 2      (pmwxarg2)
ACCDARSN  DIM       25    Authorised Representative Surname           (pmwxasrn)
ACCDARTL  DIM       4     Authorised Representative Title             (pmwxartl)
ACCDARRP  DIM       10    Authorised Representative Relation          (pmwxarrp)
ACCDASST  DIM       1     Assistance is Required (Y/N)                (pmwxasst)
ACCDNEED  DIM       1     Need to Call HP (Y/N)                       (pmwxneed)
ACCDCONT  DIM       1     Continue Normal Hours of Work (Y/N)         (pmwxcont)
ACCDALTW  DIM       1     Alternative Work Indicator (Y/N)            (pmwxaltw)
ACCDTYPA  DIM       3     Type of Alternative Work (Cat IH)           (pmwxtypa)
ACCDSALT  DIM       8     Start Date of Alternative Work (ccyymmdd)   (pmwxsalt)
ACCDHPDA  DIM       2     Hours per Day of Alternative Work           (pmwxhpda)
ACCDUNFD  DIM       3     Unfit for Work for Duration                 (pmwxunfd)
ACCDUNFT  DIM       3     Unfit for Work for Type (Cat UI)            (pmwxunft)
ACCDFISD  DIM       8     Full Incapacity Start Date (ccyymmdd)       (pmwxfisd)
ACCDRNWD  DIM       8     Return to Normal Work Date (ccyymmdd)       (pmwxrnwd)
ACCDCSTA  DIM       1     Claim Status                                (pmwxcsta)
.                           0 = Existing
.                           1 = Parked
.                           2 = Completed
ACCDTWRK  DIM       3     Type of Work (Cat IX)                       (pmwxtwrk)
ACCDOEST  DIM       50    Other Employment Status                     (pmwxoest)
ACCDTPRO  DIM       10    HCP Treatment Provider                      (pmwxtpro)
ACCDECOD  DIM       6     Employer Code (pateoraf)                    (pmwxecod)
ACCDTYP1  DIM       3     Hard-coded Comment Type                     (accmtype)
.                           001 = Cause of Injury
ACCDDAT1  DIM       500   Cause of Injury Comments                    (accmdata)
ACCDTYP2  DIM       3     Hard-coded Comment Type                     (accmtype)
.                           002 = Injury Comments
ACCDDAT2  DIM       500   Injury Comments                             (accmdata)
ACCDTYP3  DIM       3     Hard-coded Comment Type                     (accmtype)
.                           003 = Alternative Work Restrictions
ACCDDAT3  DIM       500   Alternative Work Restrictions Comments      (accmdata)
.
.         W/L History Records
.
.WAITTYPE DIM       1     W/L record type
.                           2 = ACC Data
.WAITURNO DIM       8     U/R Number                                  (wthiurno)
.WAITCODE DIM       9     Procedure Code                              (wthiproc)
NBRSEDAT  DIM       8     Effective from date (ccyymmdd)              (wthiedat)
NBRSUCNT  DIM       4     Unique Count                                (wthiucnt)
NBRSPRIO  DIM       3     Priority (Cat TP)                           (wthiprio)
NBRSRANK  DIM       6     Patient Rank                                (wthirank)
NBRSBSCD  DIM       2     Booking status code                         (wthibscd)
NBRSDCGV  DIM       8     Date certainty given (ccyymmdd)             (wthidcgv)
NBRSDBFT  DIM       8     Date booked for treatment (ccyymmdd)        (wthidbft)
NBRSRECS  DIM       1     Record Sent Flag                            (wthirecs)
NBRSRTYP  DIM       1     Record Type                                 (wthirtyp)
NBRSRCDT  DIM       8     Rank change date (ccyymmdd)                 (wthircdt)
NBRSBMDT  DIM       8     Date booking made (ccyymmdd)                (wthibmdt)
NBRSETIM  DIM       8     Effective time (hh:mm:ss)                   (wthietim)
NBRSBCAN  DIM       3     Booking cancellation reason (Cat BC)        (wthibcan)
NBRSDRSA  DIM       8     Date of referral for FSA (ccyymmdd)         (wthidrsa)
NBRSDOSA  DIM       8     Date of FSA (ccyymmdd)                      (wthidosa)
NBRSPHSP  DIM       3     Purchaser (Cat HP)                          (wthiphsp)
NBRSPCHS  DIM       3     Health Specialty (Cat A)                    (wthipchs)
NBRSBRSR  DIM       3     Booking referral source                     (wthibrsr)
.                           (Category parameter dependent)
NBRSASSR  DIM       10    Assessor code (pmshcpaf)                    (wthiassr)
.
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ACCCMTYP  DIM       3
ACCCOUNT  FORM      10
ADDWLFLG  FORM      1
CODE      DIM       2
CURRDATE  DIM       8
CURRTIME  DIM       8
DIM500    DIM       500
ENDUNIT   DIM       3             * saved end unit
EXTCOUNT  FORM      10
FORM8     FORM      8
HISCOUNT  FORM      10
LINCOUNT  FORM      1
NMPNUMB   DIM       20
RECCOUNT  FORM      10
SAVECODC  DIM       3
SAVECODR  DIM       3
SAVENOTE  DIM       6
SAVKEY20  DIM       20
SAVSTAT   FORM      1
SAVTXWRD  DIM       3
SOREFCAT  DIM       2             * source of referral category
STRTUNIT  DIM       3             * saved start unit
SUSCOUNT  FORM      10
TYPCOUNT  FORM      1
.
VISNUMBR  DIM       8
.
.
. PROGRAM CONSTANTS
. -----------------
ACCTYPE1  INIT      "001"
ACCTYPE2  INIT      "002"
ACCTYPE3  INIT      "003"
PIPE      INIT      "|"
TILDA35   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
.
.
PRGID     INIT      "EXTRWAIT"
PRGNAM    INIT      "Waiting List Extraction"
VERSION   INIT      "V12.00.01"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * W/L extract
.
MAIN1000  CALL      GHOS0000               * get hospital code
          BRANCH    EXIT,MAIN0100          * nothing or exitchar entered
.
MAIN2000  CALL      GCAN0000               * get cancellation code
          BRANCH    EXIT,MAIN0100          * nothing or exitchar entered
.
          CALL      GREM0000               * get removal code
          BRANCH    EXIT,MAIN0100          * nothing or exitchar entered
.
          CALL      GSUN0000               * get starting unit
          BRANCH    EXIT,MAIN0100          * exitchar entered
.
          CALL      GEUN0000               * get ending unit
          BRANCH    EXIT,MAIN0100          * exitchar entered
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN5000  CALL      CFIL0000               * create file
          BRANCH    EXIT,MAIN0100          * file exists
.
          CALL      PROC0000               * process
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"wattr1af";
          OPEN      WATTR1A2,"wattr1af"
.
          DISPLAY   *P64:24,"acccmtaf";
          OPEN      ACCCMTA1,"acccmtaf"
.
          DISPLAY   *P64:24,"wattx1af";
          OPEN      WATTX1A1,"wattx1af"
.
          DISPLAY   *P64:24,"watmhdaf";
          OPEN      WATMHDA1,"watmhdaf"
.
          DISPLAY   *P64:24,"watmtxaf";
          OPEN      WATMTXA1,"watmtxaf"
.
          DISPLAY   *P64:24,"watsusaf";
          OPEN      WATSUSA1,"watsusaf"
.
          DISPLAY   *P64:24,"bokrc1af";
          OPEN      BOKRC1A1,"bokrc1af"
.
          DISPLAY   *P64:24,"bokrx1af";
          OPEN      BOKRX1A1,"bokrx1af"
.
          DISPLAY   *P64:24,"patatraf";
          OPEN      PATATRA2,"patatraf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,THIRTY7;*236,WTCNBRSR
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
.
.         If NZ, open files for ACC and NBRS data
.
          IF        PTCNHDPS = 1
            DISPLAY   *P64:24,"wathisaf";
            OPEN      WATHISA1,"wathisaf"
.
            DISPLAY   *P64:24,"watmesaf";
            OPEN      WATMESA1,"watmesaf"
.
            DISPLAY   *P64:24,"patwc1af";
            OPEN      PATWC1A1,"patwc1af"
.
            DISPLAY   *P64:24,"pmswx1af";
            OPEN      PMSWX1A1,"pmswx1af"
          ENDIF
.
          MOVE      ONE,CNEWDS
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data extraction                     *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". W/L Data Extract & Cancel/Remove":
                    *P1:6,*V2LON,TWO,*HOFF,". W/L Report Only"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run extraction
                            OPTN9000             * run report
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                                  CFIL0000       Called by: MAIN0000       *
.*                         Create the extract file                           *
.*****************************************************************************
.
CFIL0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          IF        COPTION = 1
            OPEN      WAITTEXT,"convwait"
          ELSE
            OPEN      WAITTEXT,"convwait.tst"
          ENDIF
          TRAPCLR   IO
          BRANCH    OVRCD,CFIL5000
.
          DISPLAY   *P1:23,*B,*EF,"The extract file convwait.";
          IF        COPTION = 1
            DISPLAY   "txt";
          ELSE
            DISPLAY   "tst";
          ENDIF
          DISPLAY   " already exists."
CFIL1000  KEYIN     *P1:24,"Overwrite it (",*V2LON,*DV,ANSY,*HOFF,"/":
                    *V2LON,*DV,ANSN,*HOFF,")?":
                    *P21:24,*V2LON,ANS
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS                * "Y" entered ?
          GOTO      CFIL2000 IF EQUAL       * yes - continue
.
          MATCH     ANSN,ANS                * "N" entered ?
          GOTO      CFIL9100 IF EQUAL       * no
.
          BEEP
          GOTO      CFIL1000
.
.         Delete the existing file
.
CFIL2000  CLOSE     WAITTEXT,DELETE
.
.         Create a new extract file
.
CFIL5000  IF        COPTION = 1
            PREP      WAITTEXT,"convwait"
          ELSE
            PREP      WAITTEXT,"convwait.tst"
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      CFIL9999
.
CFIL9100  MOVE      ONE,EXIT
.
CFIL9999  RETURN
+
.*****************************************************************************
.*                               GHOS0000              Called by: MAIN0000   *
.*                    Get the user to input the required hospital code       *
.* Requires: IBCNMHOS - multi hospital parameter                             *
.* Returns: EXIT  0 - Ok to continue                                         *
.*                1 - Nothing or exitchar entered                            *
.*          PTHSHOSP - Hospital required code                                *
.*****************************************************************************
.
GHOS0000  COMPARE   ONE,IBCNMHOS                 * using multi-campus ?
          GOTO      GHOS9999 IF NOT EQUAL        * no - finished
.
          MOVE      TWENTY3,ECOL
          MOVE      TEN,EVERT
          DISPLAY   *P1:10,*EF,"Hospital            :"
          MOVE      SP3,CKYIDEF3                 * no default value
          MOVE      ZERO,CKYIMAND                * not mandatory
.
          CALL      PATHSPKY
          BRANCH    EXIT,GHOS9100:               * nothing or spaces entered
                         GHOS9100                * exitchar entered
.
          DISPLAY   *P30:10,*EL,PTHSNAME
.
          MOVE      ZERO,EXIT
          GOTO      GHOS9999
.
GHOS9100  MOVE      ONE,EXIT
.
GHOS9999  RETURN
+
.*****************************************************************************
.*                               GCAN0000              Called by: MAIN0000   *
.*     Get the user to input the cancellation code (scheduled only)          *
.* Returns: EXIT  0 - Ok to continue                                         *
.*                1 - Nothing or exitchar entered                            *
.*          SAVECODC - Cancellation code (BC)                                *
.*****************************************************************************
.
GCAN0000  BRANCH    COPTION,GCAN1000:            * Extract and Cancel
                            GCAN9000             * Report Only
.
GCAN1000  MOVE      "BC",CODE
          MOVE      TWENTY3,ECOL
          MOVE      TEN1,EVERT
          DISPLAY   *P1:11,*EF,"Cancellation Reason :"
          MOVE      SP3,CKYIDEF3                 * no default value
          MOVE      ZERO,CKYIMAND                * not mandatory
.
          CALL      PATCODKY
          BRANCH    EXIT,GCAN9100:               * nothing or spaces entered
                         GCAN9100                * exitchar entered
.
          MOVE      ACODE,SAVECODC               * save cancellation code
          DISPLAY   *P30:11,*EL,TDESC
.
GCAN9000  MOVE      ZERO,EXIT
          GOTO      GCAN9999
.
GCAN9100  MOVE      ONE,EXIT
.
GCAN9999  RETURN
+
.*****************************************************************************
.*                               GREM0000              Called by: MAIN0000   *
.*        Get the user to input the removal code (unscheduled only)          *
.* Returns: EXIT  0 - Ok to continue                                         *
.*                1 - Nothing or exitchar entered                            *
.*          SAVECODR - Removal code (WR)                                     *
.*****************************************************************************
.
GREM0000  BRANCH    COPTION,GREM1000:            * Extract and Remove
                            GREM9000             * Report Only
.
GREM1000  MOVE      "WR",CODE
          MOVE      TWENTY3,ECOL
          MOVE      TEN2,EVERT
          DISPLAY   *P1:12,"Removal Reason      :"
          MOVE      SP3,CKYIDEF3                 * no default value
          MOVE      ZERO,CKYIMAND                * not mandatory
.
          CALL      PATCODKY
          BRANCH    EXIT,GREM9100:               * nothing or spaces entered
                         GREM9100                * exitchar entered
.
          MOVE      ACODE,SAVECODR               * save removal code
          DISPLAY   *P30:12,*EL,TDESC
.
GREM9000  MOVE      ZERO,EXIT
          GOTO      GREM9999
.
GREM9100  MOVE      ONE,EXIT
.
GREM9999  RETURN
+
.*****************************************************************************
.*                               GSUN0000              Called by: MAIN0000   *
.*                    Get the user to input the starting unit code           *
.* Returns: EXIT  0 - Ok to continue                                         *
.*                1 - Exitchar entered                                       *
.*          STRTUNIT - Starting Unit Code (Cat WU)                           *
.*****************************************************************************
.
GSUN0000  MOVE      TWENTY3,ECOL
          MOVE      TEN4,EVERT
          PACK      CODE,ANSW,ANSU
          DISPLAY   *P1:14,*EL,"Start Unit          :"
          MOVE      SP3,CKYIDEF3                 * no default value
          MOVE      ZERO,CKYIMAND                * not mandatory
.
          CALL      PATCODKY
          BRANCH    EXIT,GSUN8000:               * nothing or spaces entered
                         GSUN9100                * exitchar entered
.
          MOVE      ACODE,STRTUNIT               * save code
          DISPLAY   *P30:14,*EL,TDESC
          GOTO      GSUN9000
.
GSUN8000  MOVE      SP3,STRTUNIT
          DISPLAY   *P23:14,*V2LON,"Start"
.
GSUN9000  MOVE      ZERO,EXIT
          GOTO      GSUN9999
.
GSUN9100  MOVE      ONE,EXIT
.
GSUN9999  RETURN
+
.*****************************************************************************
.*                               GEUN0000              Called by: MAIN0000   *
.*                    Get the user to input the ending unit code             *
.* Returns: EXIT  0 - Ok to continue                                         *
.*                1 - Exitchar entered                                       *
.*          ENDUNIT - Ending Unit Code (Cat WU)                              *
.*****************************************************************************
.
GEUN0000  MOVE      TWENTY3,ECOL
          MOVE      TEN5,EVERT
          PACK      CODE,ANSW,ANSU
          DISPLAY   *P1:15,*EL,"End   Unit          :"
          MOVE      SP3,CKYIDEF3                 * no default value
          MOVE      ZERO,CKYIMAND                * not mandatory
.
          CALL      PATCODKY
          BRANCH    EXIT,GEUN8000:               * nothing or spaces entered
                         GEUN9100                * exitchar entered
.
          MOVE      ACODE,ENDUNIT                * save code
          DISPLAY   *P30:15,*EL,TDESC
.
          MATCH     STRTUNIT,ENDUNIT
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"End code less than start code.  ";
            CALL      HITENTER
            GOTO      GEUN0000
          ENDIF
.
          GOTO      GEUN9000
.
GEUN8000  MOVE      "~~~",ENDUNIT
          DISPLAY   *P23:15,*V2LON,"End"
.
GEUN9000  MOVE      ZERO,EXIT
          GOTO      GEUN9999
.
GEUN9100  MOVE      ONE,EXIT
.
GEUN9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*   Loop through the Waiting List file and extract each record              *
.*****************************************************************************
.
PROC0000  MOVE      ZERO,RECCOUNT                * initialise record count
          MOVE      ZERO,EXTCOUNT                * initialise extract count
          MOVE      ZERO,SUSCOUNT                * initialise suspense count
          MOVE      ZERO,ACCCOUNT                * initialise acc count
          MOVE      ZERO,HISCOUNT                * initialise history count
          DISPLAY   *P1:24,*EL,"Processing:";
.
          CALL      IBACLOCK                     * get current date/time
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CTIMEIS,CURRTIME
          REP       " 0",CURRTIME
.
          PACK      KEY20,ONE,SP70
PROC0400  CALL      RDSTREA2                     * position at start of file
PROC0500  CALL      RDKTREA2                     * read next record
          BRANCH    OVRCD,PROC9000               * eof - finished
.
          BRANCH    WMSTAT,PROC1000:             * Unscheduled
                           PROC1000:             * Scheduled
                           PROC9000:             * Pre-admitted
                           PROC9000:             * Admitted
                           PROC9000:             * Discharged
                           PROC9000:             * Removed from W/L
                           PROC9000:             * Performed
                           PROC9000:             * Not Performed
                           PROC9000              * Cancelled Admission
.
          GOTO      PROC9000
.
PROC1000  IF        IBCNMHOS = 1
            MATCH     PTHSHOSP,WTWMIHSP          * same hospital code ?
            GOTO      PROC0500 IF NOT EQUAL      * no - get next record
          ENDIF
.
          MATCH     STRTUNIT,WMUNIT              * Unit in range ?
          GOTO      PROC0500 IF LESS             * no - ignore record
.
          MATCH     WMUNIT,ENDUNIT               * Unit in range ?
          GOTO      PROC0500 IF LESS             * no - ignore record
.
          PACK      KEY19,WMURNO,WMCODE,WMCNT
          CALL      RDWTTX11                     * wattx1af record on file ?
          BRANCH    OVRCD,PROC0500               * no - ignore record
.
          CALL      CLBOKRC1
          CALL      CLBOKRX1
.
.         If the procedure is scheduled, then read the booking records
.
          COMPARE   TWO,WMSTAT                   * scheduled ?
          GOTO      PROC2000 IF NOT EQUAL        * no
.
          MOVE      WMBOOK,DIM8VISN
          CALL      RDBKREC1                     * bokrc1af record on file ?
          BRANCH    OVRCD,PROC0500               * no - ignore record
.
          MOVE      WMBOOK,DIM8VISN
          CALL      RDBKRX11                     * bokrx1af record on file ?
          BRANCH    OVRCD,PROC0500               * no - ignore record
.
.         Get the most recent patient attributes record
.
          PACK      KEY35,WMURNO,WMBOOK,TILDA35
          CALL      RSPTATR2                     * position after U/R & booking
          CALL      RPPTATR2                     * read previous record
          BRANCH    OVRCD,PROC2000               * eof - ignore
.
          MATCH     WMURNO,PTARURNO              * same U/R still ?
          GOTO      PROC2000 IF NOT EQUAL        * no - ignore
.
          MOVE      PTARVISN,DIM8VISN
          MATCH     WMBOOK,DIM8VISN              * same visit still ?
          GOTO      PROC2100 IF EQUAL            * yes
.
PROC2000  CALL      CLPATATR                     * clear patatraf variables
.
PROC2100  IF        COPTION = 1
            PACK      SAVKEY20,WMSTAT,WMURNO,WMCODE,WMCNT
          ENDIF
.
          ADD       ONE,RECCOUNT                 * increment record counter
.
          DISPLAY   *P13:24,*V2LON,RECCOUNT
.
          MOVE      "0",WAITTYPE 
          MOVE      WMURNO,WAITURNO 
          SQUEEZE   WAITURNO 
          MOVE      WMCODE,WAITCODE 
          SQUEEZE   WAITCODE 
          MOVE      WTWMPRO2,WAITCOD2 
          SQUEEZE   WAITCOD2 
          MOVE      WTWMPRO3,WAITCOD3 
          SQUEEZE   WAITCOD3 
          MOVE      WMDESC,WAITDESC 
          STRIP     WAITDESC 
          MOVE      WMDATE1,WAITDATL 
          SQUEEZE   WAITDATL 
          MOVE      WMSTAT,WAITSTAT 
          SQUEEZE   WAITSTAT 
          MOVE      WMUNIT,WAITUNIT 
          SQUEEZE   WAITUNIT 
          MOVE      WMDOCTOR,WAITDOCT 
          SQUEEZE   WAITDOCT 
          MOVE      WTTXCTYP,WAITCTYP 
          SQUEEZE   WAITCTYP 
          MOVE      WMPTY,WAITPRTY 
          SQUEEZE   WAITPRTY 
          MOVE      PTHSHOSP,WAITIHSP 
          SQUEEZE   WAITIHSP 
.
          MOVE      WTWMSRCR,WAITSRCR 
          LOAD      WAITSRCR,WTCNBRSR,WMUDEF1,WMUDEF2,WMUDEF3,WMUDEF4,WMUDEF5:
                                      WMUDEF6,WMUDEF7,WMUDEF8
          SQUEEZE   WAITSRCR 
.
          MOVE      WTTXPLST,WAITPLST 
          SQUEEZE   WAITPLST 
          MOVE      WMDATE3,WAITDATS 
          SQUEEZE   WAITDATS 
          MOVE      WTTXPATM,WAITTIMS 
          SQUEEZE   WAITTIMS 
          MOVE      WMSTAY,WAITSTAY 
          SQUEEZE   WAITSTAY 
          MOVE      WMNOTICE,WAITNICE 
          SQUEEZE   WAITNICE 
          MOVE      WTWMCLSS,WAITCLSS 
          SQUEEZE   WAITCLSS 
          MOVE      WTWMEATY,WAITEATY 
          SQUEEZE   WAITEATY 
          MOVE      WTWMRFGP,WAITRFGP 
          SQUEEZE   WAITRFGP 
          MOVE      WTWMGPPC,WAITGPPC 
          SQUEEZE   WAITGPPC 
          MOVE      WTTXBOTY,WAITBOTY 
          SQUEEZE   WAITBOTY 
          MOVE      WTTXTEAM,WAITTEAM 
          SQUEEZE   WAITTEAM 
          MOVE      WTTXFUND,WAITFUND 
          SQUEEZE   WAITFUND 
          MOVE      WTTXWARD,WAITWARD 
          SQUEEZE   WAITWARD 
          MOVE      WTTXPREF,WAITPREF 
          SQUEEZE   WAITPREF 
          MOVE      WTTXNWHC,WAITNWHC 
          SQUEEZE   WAITNWHC 
          MOVE      WTTXINTD,WAITINTD 
          SQUEEZE   WAITINTD 
          MOVE      WTTXMAUT,WAITMAUT 
          SQUEEZE   WAITMAUT 
          MOVE      WTTXEXPD,WAITEXPD 
          SQUEEZE   WAITEXPD 
          MOVE      WTTXTCRS,WAITTCRS 
          SQUEEZE   WAITTCRS 
          MOVE      WTTXDISC,WAITDISC 
          SQUEEZE   WAITDISC 
          MOVE      WTTXRCLI,WAITRCLI 
          SQUEEZE   WAITRCLI 
          MOVE      WTTXRCLP,WAITRCLP 
          SQUEEZE   WAITRCLP 
          MOVE      WTTXCDTE,WAITCDTE 
          SQUEEZE   WAITCDTE 
          MOVE      WTTXCTIM,WAITCTIM 
          SQUEEZE   WAITCTIM 
          MOVE      WTTXWEBC,WAITWEBC 
          SQUEEZE   WAITWEBC 
          MOVE      WTTXLUPD,WAITLUPD 
          SQUEEZE   WAITLUPD 
          MOVE      WTTXLUPT,WAITLUPT 
          SQUEEZE   WAITLUPT 
          MOVE      WTTXWEBU,WAITWEBU 
          SQUEEZE   WAITWEBU 
          PACK      WAITAVIS,WMBOOK,SP20
          SQUEEZE   WAITAVIS 
          MOVE      WMPCAT,WAITPCAT 
          SQUEEZE   WAITPCAT 
          MOVE      WMREASON,WAITREAS 
          STRIP     WAITREAS 
          MOVE      WTTXADMW,WAITADMW 
          SQUEEZE   WAITADMW 
          MOVE      BKRXEABR,WAITEABR 
          SQUEEZE   WAITEABR 
          MOVE      BKRXAUBY,WAITAUBY 
          SQUEEZE   WAITAUBY 
          MOVE      BKREADAT,WAITADAT 
          SQUEEZE   WAITADAT 
          MOVE      WTTXPRPB,WAITPRPB 
          SQUEEZE   WAITPRPB 
          MOVE      WTTXAASC,WAITAASC 
          SQUEEZE   WAITAASC 
          MOVE      PTARVAL1,WAITVAL1 
          SQUEEZE   WAITVAL1 
          MOVE      PTARVAL2,WAITVAL2 
          SQUEEZE   WAITVAL2 
          MOVE      PTARVAL3,WAITVAL3 
          SQUEEZE   WAITVAL3 
          MOVE      WTWMPHSP,WAITPHSP
          SQUEEZE   WAITPHSP
          MOVE      WTWMACPR,WAITACPR
          SQUEEZE   WAITACPR
          MOVE      WTTXANAE,WAITANAE
          SQUEEZE   WAITANAE
          MOVE      WTWMECNT,WAITECNT
          SQUEEZE   WAITECNT
          MOVE      WTWMDABD,WAITDABD
          SQUEEZE   WAITDABD
          MOVE      WTTXPOTM,WAITPOTM
          SQUEEZE   WAITPOTM
          MOVE      WTWMRANK,WAITRANK
          SQUEEZE   WAITRANK
          MOVE      WTWMDRSA,WAITDRSA
          SQUEEZE   WAITDRSA
          MOVE      WTWMDOSA,WAITDOSA
          SQUEEZE   WAITDOSA
          MOVE      WTWMASSR,WAITASSR
          SQUEEZE   WAITASSR
          MOVE      WTWMDTAD,WAITDTAD
          SQUEEZE   WAITDTAD
          MOVE      WMDATE2,WAITDAT2
          SQUEEZE   WAITDAT2
          MOVE      WMKEYDT,WAITKEYD
          SQUEEZE   WAITKEYD
.
          CALL      GCOM0000                     * Get W/L comments
.
          WRITE     WAITTEXT,SEQ;*+,WAITTYPE,PIPE,WAITURNO,PIPE,WAITCODE,PIPE:
                                    WAITCOD2,PIPE,WAITCOD3,PIPE,WAITDESC,PIPE:
                                    WAITDATL,PIPE,WAITSTAT,PIPE,WAITUNIT,PIPE:
                                    WAITDOCT,PIPE,WAITCTYP,PIPE,WAITPRTY,PIPE:
                                    WAITIHSP,PIPE,WAITSRCR,PIPE,WAITPLST,PIPE:
                                    WAITDATS,PIPE,WAITTIMS,PIPE,WAITSTAY,PIPE:
                                    WAITNICE,PIPE,WAITCLSS,PIPE,WAITEATY,PIPE:
                                    WAITRFGP,PIPE,WAITGPPC,PIPE,WAITBOTY,PIPE:
                                    WAITTEAM,PIPE,WAITFUND,PIPE,WAITWARD,PIPE:
                                    WAITPREF,PIPE,WAITNWHC,PIPE,WAITINTD,PIPE:
                                    WAITMAUT,PIPE,WAITEXPD,PIPE,WAITTCRS,PIPE:
                                    WAITDISC,PIPE,WAITRCLI,PIPE,WAITRCLP,PIPE:
                                    WAITCDTE,PIPE,WAITCTIM,PIPE,WAITWEBC,PIPE:
                                    WAITLUPD,PIPE,WAITLUPT,PIPE,WAITWEBU,PIPE:
                                    WAITAVIS,PIPE,WAITCOMM,PIPE,WAITPCAT,PIPE:
                                    WAITREAS,PIPE,WAITADMW,PIPE,WAITEABR,PIPE:
                                    WAITAUBY,PIPE,WAITADAT,PIPE,WAITPRPB,PIPE:
                                    WAITAASC,PIPE,WAITVAL1,PIPE,WAITVAL2,PIPE:
                                    WAITVAL3,PIPE,WAITPHSP,PIPE,WAITACPR,PIPE:
                                    WAITANAE,PIPE,WAITECNT,PIPE,WAITDABD,PIPE:
                                    WAITPOTM,PIPE,WAITRANK,PIPE,WAITDRSA,PIPE:
                                    WAITDOSA,PIPE,WAITASSR,PIPE,WAITDTAD,PIPE:
                                    WAITDAT2,PIPE,WAITKEYD,*-
.
          ADD       ONE,EXTCOUNT                 * increment W/L count
.
.         Now get matching suspension records
.
          PACK      KEY21,WMURNO,WMCODE,WMCNT,SP70
          CALL      RSWTSUS1                     * position for W/L procedure
PROC5000  CALL      RKWTSUS1                     * read next record
          BRANCH    OVRCD,PROC6000               * eof - finished suspensions
.
          MATCH     WMURNO,WTSUURNO              * same U/R still ?
          GOTO      PROC6000 IF NOT EQUAL        * no - finished suspensions
.
          MATCH     WMCODE,WTSUCODE              * same code still ?
          GOTO      PROC6000 IF NOT EQUAL        * no - finished suspensions
.
          COMPARE   WMCNT,WTSUCNT                * same procedure count still ?
          GOTO      PROC6000 IF NOT EQUAL        * no - finished suspensions
.
          MOVE      "1",WAITTYPE
          MOVE      WTSUURNO,WAITURNO
          SQUEEZE   WAITURNO
          MOVE      WTSUCODE,WAITCODE
          SQUEEZE   WAITCODE
          MOVE      WTSUFDAT,SUSPFDAT 
          SQUEEZE   SUSPFDAT 
          MOVE      WTSUTDAT,SUSPTDAT 
          SQUEEZE   SUSPTDAT 
          MOVE      WTSUREAS,SUSPREAS 
          SQUEEZE   SUSPREAS 
.
.         For non-NZ sites, standard W/L comments are stored in watmtxaf,
.         so the comments have already extracted with the W/L details record.
.         For NZ sites, standard W/L comments are stored in watmesaf, so
.         the suspension related comments need to be retrieved from watmtxaf.
.
          IF        PTCNHDPS = 1
            CALL      GCOM0000
          ELSE
            CLEAR     WAITCOMM
          ENDIF
.
          WRITE     WAITTEXT,SEQ;*+,WAITTYPE,PIPE,WAITURNO,PIPE,WAITCODE,PIPE:
                                    SUSPFDAT,PIPE,SUSPTDAT,PIPE,SUSPREAS,PIPE:
                                    WAITCOMM,*-
.
          ADD       ONE,SUSCOUNT                 * increment suspense count
          GOTO      PROC5000                     * get next suspense record
.
.         Now get matching ACC data record for NZ sites only
.
PROC6000  MOVE      WMBOOK,VISNUMBR
          CALL      EXACCDAT                     * extract ACC data for NZ only
          BRANCH    EXIT,PROC7000:               * no ACC data
                         PROC8000                * not NZ
.
          MOVE      "2",WAITTYPE
.
          WRITE     WAITTEXT,SEQ;*+,WAITTYPE,PIPE,WAITURNO,PIPE,WAITCODE,PIPE:
                                    ACCDNAME,PIPE,ACCDADD1,PIPE,ACCDADD2,PIPE:
                                    ACCDADD3,PIPE,ACCDADD4,PIPE,ACCDPOST,PIPE:
                                    ACCDTELP,PIPE,ACCDACDT,PIPE,ACCDACPT,PIPE:
                                    ACCDINSR,PIPE,ACCDCLNO,PIPE,ACCDCOM1,PIPE:
                                    ACCDCOM2,PIPE,ACCDALOC,PIPE,ACCDCINJ,PIPE:
                                    ACCDICOD,PIPE,ACCDCNAM,PIPE,ACCDCDTE,PIPE:
                                    ACCDCTIM,PIPE,ACCDWEBC,PIPE,ACCDLUPD,PIPE:
                                    ACCDLUPT,PIPE,ACCDWEBU,PIPE,ACCDACCF,PIPE:
                                    ACCDPLIN,PIPE,ACCDACTI,PIPE,ACCDADTE,PIPE:
                                    ACCDATME,PIPE,ACCDACLC,PIPE,ACCDAINZ,PIPE:
                                    ACCDMOVV,PIPE,ACCDSPTI,PIPE,ACCDSPRT,PIPE:
                                    ACCDRECI,PIPE,ACCDTRIC,PIPE,ACCDESTA,PIPE:
                                    ACCDPDDT,PIPE,ACCDARG1,PIPE,ACCDARG2,PIPE:
                                    ACCDARSN,PIPE,ACCDARTL,PIPE,ACCDARRP,PIPE:
                                    ACCDASST,PIPE,ACCDNEED,PIPE,ACCDCONT,PIPE:
                                    ACCDALTW,PIPE,ACCDTYPA,PIPE,ACCDSALT,PIPE:
                                    ACCDHPDA,PIPE,ACCDUNFD,PIPE,ACCDUNFT,PIPE:
                                    ACCDFISD,PIPE,ACCDRNWD,PIPE,ACCDCSTA,PIPE:
                                    ACCDTWRK,PIPE,ACCDOEST,PIPE,ACCDTPRO,PIPE:
                                    ACCDECOD,PIPE,ACCDTYP1,PIPE,ACCDDAT1,PIPE:
                                    ACCDTYP2,PIPE,ACCDDAT2,PIPE,ACCDTYP3,PIPE:
                                    ACCDDAT3,*-
.
          ADD       ONE,ACCCOUNT                 * increment acc count
.
.         Now get matching W/L history records
.
PROC7000  PACK      KEY31,WMURNO,WMCODE,WMCNT,SP70
          CALL      RSWTHIS1                     * position for W/L procedure
PROC7500  CALL      RKWTHIS1                     * read next record
          BRANCH    OVRCD,PROC8000               * eof - finished
.
          MATCH     WMURNO,WTHIURNO              * same U/R still ?
          GOTO      PROC8000 IF NOT EQUAL        * no - finished
.
          MATCH     WMCODE,WTHIPROC              * same code still ?
          GOTO      PROC8000 IF NOT EQUAL        * no - finished
.
          COMPARE   WMCNT,WTHIPCNT               * same procedure count still ?
          GOTO      PROC8000 IF NOT EQUAL        * no - finished
.
          MATCH     SP1,WTHIRTYP                 * include for NBRS ?
          GOTO      PROC7500 IF EQUAL            * no - get next record
.
          MOVE      "3",WAITTYPE
          MOVE      WTHIEDAT,NBRSEDAT 
          SQUEEZE   NBRSEDAT
          MOVE      WTHIUCNT,NBRSUCNT 
          SQUEEZE   NBRSUCNT
          MOVE      WTHIPRIO,NBRSPRIO 
          SQUEEZE   NBRSPRIO
          MOVE      WTHIRANK,NBRSRANK 
          SQUEEZE   NBRSRANK
          MOVE      WTHIBSCD,NBRSBSCD 
          SQUEEZE   NBRSBSCD
          MOVE      WTHIDCGV,NBRSDCGV 
          SQUEEZE   NBRSDCGV
          MOVE      WTHIDBFT,NBRSDBFT 
          SQUEEZE   NBRSDBFT
          MOVE      WTHIRECS,NBRSRECS 
          SQUEEZE   NBRSRECS
          MOVE      WTHIRTYP,NBRSRTYP 
          SQUEEZE   NBRSRTYP
          MOVE      WTHIRCDT,NBRSRCDT 
          SQUEEZE   NBRSRCDT
          MOVE      WTHIBMDT,NBRSBMDT 
          SQUEEZE   NBRSBMDT
          MOVE      WTHIETIM,NBRSETIM 
          SQUEEZE   NBRSETIM
          MOVE      WTHIBCAN,NBRSBCAN 
          SQUEEZE   NBRSBCAN
          MOVE      WTHIDRSA,NBRSDRSA 
          SQUEEZE   NBRSDRSA
          MOVE      WTHIDOSA,NBRSDOSA 
          SQUEEZE   NBRSDOSA
          MOVE      WTHIPHSP,NBRSPHSP 
          SQUEEZE   NBRSPHSP
          MOVE      WTHIPCHS,NBRSPCHS 
          SQUEEZE   NBRSPCHS
          MOVE      WTHIBRSR,NBRSBRSR 
          SQUEEZE   NBRSBRSR
          MOVE      WTHIASSR,NBRSASSR 
          SQUEEZE   NBRSASSR
.
          WRITE     WAITTEXT,SEQ;*+,WAITTYPE,PIPE,WAITURNO,PIPE,WAITCODE,PIPE:
                                    NBRSEDAT,PIPE,NBRSUCNT,PIPE,NBRSPRIO,PIPE:
                                    NBRSRANK,PIPE,NBRSBSCD,PIPE,NBRSDCGV,PIPE:
                                    NBRSDBFT,PIPE,NBRSRECS,PIPE,NBRSRTYP,PIPE:
                                    NBRSRCDT,PIPE,NBRSBMDT,PIPE,NBRSETIM,PIPE:
                                    NBRSBCAN,PIPE,NBRSDRSA,PIPE,NBRSDOSA,PIPE:
                                    NBRSPHSP,PIPE,NBRSPCHS,PIPE,NBRSBRSR,PIPE:
                                    NBRSASSR,*-
.
          ADD       ONE,HISCOUNT                 * increment history count
          GOTO      PROC7500                     * get next history record
.
PROC8000  BRANCH    COPTION,PROC8100:            * extract
                            PROC0500             * report only
.
PROC8100  MOVE      ZERO,SAVSTAT
          MOVE      WMSTAT,SAVSTAT
...       IF        WMSTAT = 1
            MOVE      SIX,WMSTAT                 * update status to removed
...       ELSE
...         MOVE      NINE,WMSTAT                * update status to cancelled
...       ENDIF
          MOVE      SAVECODR,WMREMOVE            * load removal reason
          MOVE      CURRDATE,WMDATE4             * load removal date
.
          CALL      SAVHIS00           * write to Waiting List History
          CALL      SAVHSS00           * write to Waiting List History
          MOVE      ONE,NBRFLAG
          MOVE      "20",WTWMBSCD
.
          CALL      UPTREA2                      * update wattr1af
.
          MOVE      CURRTIME,WTTXRTIM            * load removal time
          MOVE      CURRDATE,WTTXLUPD            * load last update date
          MOVE      CURRTIME,WTTXLUPT            * load last update time
          MOVE      "EXTRWAIT",WTTXWEBU          * load last update user
          CALL      UPWTTX11                     * update wattx1af
.
          MOVE      ZERO,ADDWLFLG
          MOVE      Z70,WATHI002
          MOVE      "EXTRWAIT",WBSEUID
          CALL      WRTHIS00             * write to Waiting List History
.
          COMPARE   ONE,SAVSTAT
          GOTO      PROC8200 IF EQUAL            * unscheduled
.
          MOVE      SAVECODC,BKRECANC            * load cancellation reason
          MOVE      TWO,BKRESTAT
          CALL      UPBKREC1
.
          MOVE      CURRDATE,BKRXLUPD            * load last update date
          MOVE      CURRTIME,BKRXLUPT            * load last update time
          MOVE      "EXTRWAIT",BKRXWEBU          * load last update user
          CALL      UPBKRX11
.
          MOVE      WMURNO,KEY8                  * CAR 320199
          CALL      RDMAST1                      * PMI record found ?
          BRANCH    OVRCD,PROC8200               * no
.
          CALL      CLPMSPX2                     * clear pmspx2af variables
          MOVE      WMURNO,KEY8
          CALL      RDPMPX21                     * read PMI extension record
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      ONE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLIWLD                   * broadcast cancellation(ADT^A38)
.
PROC8200  MOVE      SAVKEY20,KEY20               * set key for reposition
          GOTO      PROC0400                     * get next record
.
PROC9000  DISPLAY   *P1:19,*EF,"Extraction complete.":
                    *P1:20,*V2LON,EXTCOUNT,*HOFF," W/L Detail records ";
          IF        COPTION = 1
            DISPLAY   "extracted.";
          ELSE
            DISPLAY   "listed.";
          ENDIF
.
          DISPLAY   *P1:21,*V2LON,SUSCOUNT,*HOFF," W/L Suspense records ";
          IF        COPTION = 1
            DISPLAY   "extracted.";
          ELSE
            DISPLAY   "listed.";
          ENDIF
.
          DISPLAY   *P1:22,*V2LON,ACCCOUNT,*HOFF," W/L ACC records ";
          IF        COPTION = 1
            DISPLAY   "extracted.";
          ELSE
            DISPLAY   "listed.";
          ENDIF
.
          DISPLAY   *P1:23,*V2LON,HISCOUNT,*HOFF," W/L History records ";
          IF        COPTION = 1
            DISPLAY   "extracted.";
          ELSE
            DISPLAY   "listed.";
          ENDIF
          DISPLAY   *P1:24;
          CALL      HITENTER
.
PROC9999  RETURN
+
.*****************************************************************************
.*                             GCOM0000            Called by: PROC0000       *
.*        Get the first W/L comment note and load WAITCOMM                   *
.* Returns: WAITCOMM - W/L comments field                                    *
.*****************************************************************************
.
GCOM0000  CLEAR     WAITCOMM
          MOVE      SP6,SAVENOTE
.
          MATCH     "1",WAITTYPE                 * suspension record ?
          GOTO      GCOM0100 IF EQUAL            * yes - only check watmtxaf
.
.         This is a W/L details record, so check if we are getting
.         comments from watmtxaf or watmesaf
.
          BRANCH    PTCNHDPS,GCOM5000            * using watmesaf
.
.         Using watmtxaf as the source of W/L comments.
.         Get the last note for the U/R, Procedure and Count.
.
GCOM0100  PACK      KEY28,WMURNO,WMCODE,WMCNT,ZERO,ZERO,ONE,TILDA35
          CALL      RSWTMHD1                     * position for last note
          CALL      RPWTMHD1                     * read previous record
          BRANCH    OVRCD,GCOM9000
.
          MATCH     WMURNO,WTMHURNO              * same U/R still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - finished comments
.
          MATCH     WMCODE,WTMHPROC              * same code still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - finished comments
.
          MOVE      WTMHPCNT,FORM2
          COMPARE   WMCNT,FORM2                  * same procedure count still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - finished comments
.
          MATCH     "001",WTMHTYPE               * same type still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - ignore record
.
.         We've found the last note, so get the comments for that note
.
          PACK      KEY31,WMURNO,WMCODE,WMCNT,ZERO,ZERO,ONE,WTMHNOTE,SP70
          CALL      RSWTMTX1                     * position for last note
GCOM0500  CALL      RKWTMTX1                     * read next record
          BRANCH    OVRCD,GCOM9000               * eof - finished comments
.
          MATCH     WMURNO,WTMTURNO              * same U/R still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - finished comments
.
          MATCH     WMCODE,WTMTPROC              * same code still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - finished comments
.
          MOVE      WTMTPCNT,FORM2
          COMPARE   WMCNT,FORM2                  * same procedure count still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - finished comments
.
          MATCH     "001",WTMTTYPE               * same type still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - ignore record
.
          MATCH     WTMHNOTE,WTMTNOTE            * same note still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - ignore record
.
          MATCH     SP6,SAVENOTE                 * blank note number ?
          IF        @EQUAL
            MOVE      WTMTNOTE,SAVENOTE          * yes - save note number
          ELSE
            MATCH     SAVENOTE,WTMTNOTE          * no - same note number ?
            GOTO      GCOM9000 IF NOT EQUAL      * no - finished comments
          ENDIF
.
          APPEND    WTMTCMNT,WAITCOMM            * load comment line
          GOTO      GCOM0500
.
.         Using watmesaf as the source of W/L comments
.
GCOM5000  PACK      KEY21,WMURNO,WMCODE,WMCNT,SP70
          CALL      RDSMESA1                     * position for W/L procedure
GCOM5500  CALL      RDKMESA1                     * read next record
          BRANCH    OVRCD,GCOM9000               * eof - finished comments
.
          MATCH     WMURNO,WAURNO                * same U/R still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - finished comments
.
          MATCH     WMCODE,WAPROC                * same code still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - finished comments
.
          COMPARE   WMCNT,WACNT                  * same procedure count still ?
          GOTO      GCOM9000 IF NOT EQUAL        * no - finished comments
.
          MATCH     SP6,SAVENOTE                 * blank line number ?
          IF        @EQUAL
            MOVE      WACNT2,SAVENOTE            * yes - save line number
            RJUSTIFY  SAVENOTE
          ENDIF
.
          APPEND    WATEXT,WAITCOMM              * load comment line
          GOTO      GCOM5500
.
GCOM9000  MATCH     SP6,SAVENOTE                 * anything found ?
          IF        !@EQUAL
            RESET     WAITCOMM                   * yes
            STRIP     WAITCOMM
          ENDIF
.
GCOM9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CLBOKRC1
          INC       CLBOKRX1
          INC       CLPATATR
          INC       CLPMSPX2
          INC       CLPMSWX1
          INC       DGCLIWLD
          INC       EXACCDAT
          INC       PATCODKY
          INC       PATHSPKY
          INC       PMIGTNID
          INC       WLHISSUB
.
          INC       ACCCMTIO/INC
          INC       BOKRC1IO/INC
          INC       BOKRX1IO/INC
          INC       NHIMASIO/INC
          INC       PATATRIO/INC
          INC       PATCODIO/INC
          INC       PATHSPIO/INC
          INC       PATMA1IO/INC
          INC       PATNIDIO/INC
          INC       PATWC1IO/INC
          INC       PMSPX2IO/INC
          INC       PMSWX1IO/INC
          INC       WATHISIO/INC
          INC       WATMESIO/INC
          INC       WATMHDIO/INC
          INC       WATMTXIO/INC
          INC       WATPROIO/INC
          INC       WATSUSIO/INC
          INC       WATTR1IO/INC
          INC       WATTX1IO/INC
          INC       WEBSECIO/INC
