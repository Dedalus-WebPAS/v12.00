.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
ATOTAL01  FORM      12.2
DAT6      DIM       6
ENDING    DIM       8
ENDTRN    FORM      8
FROMACC   DIM       12
FROMLED   DIM       2
STRTRN    FORM      8
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB28
.   Function      :   Stock Transfer Report                   
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       SINCONFD/INC
          INC       SINPERFD/INC
          INC       SINTRAFD/INC
          INC       SINTRBFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMTRN   DIM       8 * Scr 00 Fld    12
TOTRN     DIM       8 * Scr 00 Fld    13
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB28"
PRGNAM    INIT      "Stock Transfer Report                   "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sintraaf";
          OPEN      SINTRAA1,"sintraaf"
          DISPLAY   *P56:24,"Opening sintrbaf";
          OPEN      SINTRBA1,"sintrbaf"
          DISPLAY   *P56:24,"Opening sintrbaf";
          OPEN      SINTRBA2,"sintrbaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETSCR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                           PS00L999,PS00L999,PS00L999,PS00L999:
                           PS00L999,PS00L101,PS00L102,PS00L103:
                            PS00L104
          GOTO     PS00L999
.
PS00L101
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FROMTRN,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      TOTRN,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                           SF00L006,SF00L006,SF00L006,SF00L006:
                           SF00L006,SF00L103,SF00L104,SF00L105:
                            SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                           SF00L020,SF00L020,SF00L020,SF00L020:
                           SF00L020,SF00L103,SF00L104,SF00L105:
                            SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      REPT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOTRN   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RTRAN000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMTRN,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTRN,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.--------------------------------------------------------------------
. Set up screen 00
.--------------------------------------------------------------------
SETSCR00
          MOVE      ONE,ACCEPT
.
          CALL      DTRAN000
.
SETSCR99  RETURN
REPT0000  DISPLAY   *P1:24,*EL,"Processing - ";
          MOVE      "60",CLNO
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,ATOTAL01
          PACK      DAT6,SIPEYEAR,SIPEPER,SP70
.
          MOVE      STRTRN,KEY8
          REP       " 0",KEY8
          PACK      KEY11,KEY8,SP70
          CALL      RSSITB1
.
          MOVE      ENDTRN,ENDING
          REP       " 0",ENDING
.
REPT1100  CALL      RKSITB1
          BRANCH    OVRCD,REPT9000
.
          DISPLAY   *P29:24,SITBNUM
.
          MATCH     SITBNUM,ENDING
          GOTO      REPT9000 IF LESS
.
          MATCH     SITBPER,DAT6
          GOTO      REPT1100 IF NOT EQUAL
.
          MATCH     "0",SITBTYP
          IF        !@EQUAL
            CLEAR     DISPMSG
            APPEND    "From Record Missing for Transfer ",DISPMSG
            APPEND    SITBNUM,DISPMSG
            APPEND    " - ",DISPMSG
            RESET     DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      REPT1100
          ENDIF
.
          PACK      KEY8,SITBNUM
          CALL      RDSITA1
          IF        OVRCD=1
            CLEAR     DISPMSG
            APPEND    "Missing Transfer header for ",DISPMSG
            APPEND    SITBNUM,DISPMSG
            APPEND    " - ",DISPMSG
            RESET     DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      REPT1100
          ENDIF
.
          COMPARE   "56",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          UNPACK    SITADAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      SITBLED,FROMLED
          MOVE      SITBACC,FROMACC
.
          PRINT     SITBNUM,*11,CPCDATE,*23,SITAIRF,*44,SITBCAT,*53,SITBWAR;
.
          CALL      RKSITB1
          BRANCH    OVRCD,REPT9000
.
          MATCH     KEY8,SITBNUM
          IF        !@EQUAL
            CLEAR     DISPMSG
            APPEND    "Missing To Warehouse for Transfer ",DISPMSG
            APPEND    KEY8,DISPMSG
            RESET     DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      REPT1100
          ENDIF
.
          MATCH     "1",SITBTYP
          IF        !@EQUAL
            CLEAR     DISPMSG
            APPEND    "Missing To Warehouse for Transfer ",DISPMSG
            APPEND    KEY8,DISPMSG
            RESET     DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      REPT1100
          ENDIF
.
REPT1200  PRINT     *59,SITBWAR,*65,SITBBCH,*71,FROMLED,"/",FROMACC:
                    *87,SITBLED,"/",SITBACC:
                    *102,SITBQTY,*117,SITBCST
          ADD       ONE,CLNO
          ADD       SITBCST,ATOTAL01
          GOTO      REPT1100
.
REPT9000  COMPARE   ZERO,CPAGENO
          CALL      HEAD0000 IF EQUAL
          CALL      UND132
          PRINT     *100,"Total Cost ",*117,ATOTAL01
          CALL      UND132
.
          PRINT     *N,"*** End of Report ***"
.
REPT9999  RETURN
.
HEAD0000  CALL      HEAD132
.
          STRIP     FROMTRN
          STRIP     TOTRN
          UNPACK    SIPESDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      KEY10,CPCDATE,SP70
          UNPACK    SIPEEDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     "Transfer Number Range: ",FROMTRN," to ",TOTRN:
                    *56,"Usage Period : ",SIPEPER,"/",SIPEYEAR:
                    SP2,KEY10," to ",CPCDATE
          CALL      UND132
          PRINT     *53,"Warehouse",*71,"Ledger/Account",*87,"Ledger/Account":
                    *N,*1,"Transfer",*13,"Date",*23,"Item History Ref.":
                    *44,"Catalog",*53,"From",*59,"To",*65,"Batch":
                    *71,"From",*87,"To",*109,"Quantity":
                    *122,"Total Cost"
          CALL      UND132
          ADD       THREE,CLNO
.
HEAD99999 RETURN
.---------------------------------------------------------------------------
. KYEAR - keyin year
.---------------------------------------------------------------------------
KYEAR000  CALL      RINPECON           * default to current year
          MOVE      SIPECYR,SIPEYEAR
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,SIPEYEAR
          PACK      SIPEYEAR,SIPEYEAR,SP70
.
          MATCH     SP70,SIPEYEAR
          GOTO      KYEAR990 IF EQUAL
          PACK      KEY4,SP3,EXITCHAR * exitchar entered ?
          MATCH     KEY4,SIPEYEAR
          GOTO      KYEAR990 IF EQUAL
.
          TYPE      SIPEYEAR           * valid numeric ?
          GOTO      KYEAR000 IF NOT EQUAL
.
          MOVE      SIPEYEAR,SIPEYF4
          IF        SIPEYF4<100
            SQUEEZE   SIPEYEAR
            MOVE      SIPEYEAR,FORM2
            PACK      SIPEYEAR,CCC,FORM2,SP70
          ENDIF
.
          REP       " 0",SIPEYEAR
          MOVE      ZERO,EXIT          * year ok
          GOTO      KYEAR999
.
KYEAR990  MOVE      TWO,EXIT           * no year entered
.
KYEAR999  RETURN
.---------------------------------------------------------------------------
. KPERD - keyin period
.         Returns SIPEPER - Period
.                 EXIT    - 0=ok, 1=nothing entered, 2=exitchar
.---------------------------------------------------------------------------
KPERD000
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,SIPEPER
          PACK      SIPEPER,SIPEPER,SP70
          ENDSET    SIPEPER            * check for EXITCHAR
          MATCH     EXITCHAR,SIPEPER
          GOTO      KPERD995 IF EQUAL
          RESET     SIPEPER
.
          MOVE      ZERO,F2
          MOVE      SIPEPER,F2
          COMPARE   ZERO,F2            * no period entered ?
          GOTO      KPERD995 IF EQUAL
.                                      * period greater than total no. of perds
          IF        F2>SIPENUM
            BEEP
            MOVE      "Invalid Period - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERD000
          ENDIF
.
          MOVE      F2,SIPEPER         * check if period exists
          REP       " 0",SIPEPER
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          REP       " 0",KEY6
          CALL      RDSIPE1
          IF        OVRCD=1
            BEEP
            MOVE      "Period NOT Created - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERD000
          ENDIF
.
          MOVE      ZERO,EXIT          * period ok
          GOTO      KPERD999
.
KPERD990  MOVE      ONE,EXIT           * no period entered
          GOTO      KPERD999
.
KPERD995  MOVE      TWO,EXIT           * EXITCHAR entered
.
KPERD999  RETURN
.--------------------------------------------------
. Enter Range
.  where ssff    = System & File for Keyin Routines
.        TRN     = Field ID
.        RTRAN   = Call Routine Label
.        "    1" = Screen Item Number for "from" Variable
.        "    2" = Screen Item Number for "to" Variable
.        yyyyy.. = Description of Variable
.
.  Return Values
.        FROMTRN  Code & Description for Start of Range
.        TOTRN    Code & Description for End of Range
.        STRTRN   Code for Start of Range
.        ENDTRN   Code for End of Range
.--------------------------------------------------
RTRAN000   IF       ACCEPT=1
             CALL     DTRAN000
             GOTO     RTRAN999
           ENDIF
.
           MOVE     "   12",FLDID
           CALL     GETPOSIT
           KEYIN    *PCCOL:CVERT,*V2LON,STRTRN
           COMPARE  ZERO,STRTRN
           GOTO     RTRAN100 IF EQUAL
           MOVE     STRTRN,FROMTRN
           GOTO     RTRAN140
RTRAN100   MOVE     "Start             ",FROMTRN
           MOVE     ZERO,STRTRN
.
RTRAN140   MOVE     FROMTRN,VAR
           CALL     DISPITEM
.
RTRAN150   MOVE     "   13",FLDID
           CALL     GETPOSIT
           KEYIN    *PCCOL:CVERT,*V2LON,ENDTRN
           COMPARE  ZERO,ENDTRN
           GOTO     RTRAN200 IF EQUAL
           MOVE     ENDTRN,TOTRN
           COMPARE  STRTRN,ENDTRN
           GOTO     RTRAN999 IF EQUAL
           GOTO     RTRAN999 IF NOT LESS
           BEEP
           MOVE     "To Transfer No Must Be > From Transfer No - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RTRAN000
.
RTRAN200   MOVE     "Finish             ",TOTRN
           MOVE     "999999999999",ENDTRN
.
RTRAN999   MOVE     "   12",FLDID
           CALL     GETPOSIT
           RETURN
.
.--------------------------------------------------------------------
. Default Range
.--------------------------------------------------------------------
.
DTRAN000   MOVE     "Start             ",FROMTRN
           MOVE     ZERO,STRTRN
           MOVE     "999999999999",ENDTRN
           MOVE     "Finish             ",TOTRN
           RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINTRAIO/INC
          INC       SINTRBIO/INC
.
          INC       STDGENCD
.
