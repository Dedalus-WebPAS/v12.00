.***************************************************************************
.* System    :   GENERAL SKELETON PROGRAM                                  *
.* Program   :   IBASKL00                                                  *
.* Desc      :   Maintenance Skeleton Program                              *
.***************************************************************************
.* Date      :   10/11/88                                                  *
.* Author    :   Darren Jones                                              *
.* Function  :   This program provides a skelton structure for all         *
.*               maintenance programs to be written any time from the      *
.*               above date. Insertion of code to the appropriate sections *
.*               is all that is required to complete any new program       *
.***************************************************************************
.
          INC       STD001FD
.
. =========================================================================
. FILE DESCRIPTION INCLUDES
. -------------------------
. Insert all file FD includes in this section
. =========================================================================
.
. =========================================================================
. LOCAL VARIABLE DEFINITION
. -------------------------
. Definition of all variables used in the program are to be inserted
. in this section.
. NOTE : Variables are to be listed in alphabetical sequence
. =========================================================================
.
PRGID     INIT      "IBASKL00"
PRGNAM    INIT      "SKELETON MAINTENANCE"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
ML0000    CALL      INIT0000               * initialization and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000,ML2000,ML3000
.
. ---- add a procedure code ----
.
ML1000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
          CALL      ACPT0000               * accept initial values
          CALL      SEL0000                * select field to modify
          BRANCH    EXIT,ML1000            * (C)ancel selected
          CALL      WRT0000                * write to file
          GOTO      ML1000
.
. ---- modify a procedure code ----
.
ML2000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
          CALL      DISP0000               * display details
          CALL      SEL0000                * select field to modify
          BRANCH    EXIT,ML2000            * (C)ancel selected
          CALL      UPD0000                * update record
          GOTO      ML2000
.
. ---- delete a procedure code ----
.
ML3000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
          CALL      DISP0000               * display detail
          CALL      DELQST                 * ok to delete ?
          BRANCH    CEXIT,ML3100:          * Yes
                          ML3000:          * No
                          ML0100           * Cancel
ML3100    CALL      DEL0000                * delete this record
          GOTO      ML3000
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialization                               *
.*  The initialization routine is used to display headings and open files.  *
.*  Any other general initialization can also be performed here.            *
.****************************************************************************
INIT0000  CALL      DISPHEAD                  * display heading
.
. =========================================================================
. Opening of files should be performed here.
. All files should be opened here.
. =========================================================================
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1  Insert option selected                         *
.*                        2  Change option selected                         *
.*                        3  Delete option selected                         *
.****************************************************************************
.
. ---- display option screen ----
.
OPTN0000  CALL      SELOPTN                       * select option
          COMPARE   ZERO,COPTION
          GOTO      OPTN9000 IF EQUAL                 * exit
          MOVE      FALSE,EXIT
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT                   * set EXIT = 1
OPTN9999  RETURN
+
.**************************************************************************
.*                                  CLR0000            Called by: PROC0000*
.*                            clear global variables                      *
.**************************************************************************
.
CLR0000
.
. =========================================================================
. This section would contain clearing of any variables input at maintenance
. stage. This would include both DIM and FORM fields
. =========================================================================
.
CLR9999   RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                       input indentification code                       *
.**************************************************************************
PROC0000  CALL      CLR0000                  * Clear the record variables
.
. =========================================================================
. This routine would be used to key and validate the identication field
. for maintenance. A good example of this would be CATEGORY in codes
. file entries.
. =========================================================================
PROC9999  RETURN
+
.**************************************************************************
.*                                  SCR0000            Called by: ML0000  *
.*                         display screen format                          *
.**************************************************************************
SCR0000
.
. =========================================================================
. Display of the input screen format would be done here.
. The length of this routine would depend on the number of items to be
. maintained.
. =========================================================================
.
SCR9999   RETURN
+
.*************************************************************************
.*                                  ACPT0000           Called by: ML0000 *
.*   INPUT mode only :      accept initial values                        *
.*************************************************************************
ACPT0000
.
. =========================================================================
. Acceptance of the initial values of maintained variables is performed
. here. This would include all items listed on the screen format.
. This routine would be made up of several call's to lower level
. subrotuines. Eg. One subroutine would be required for each item on
. the maintenance screen.
. =========================================================================
.
ACPT9999  RETURN
+
.****************************************************************************
.*                                   SEL0000           Called by: ML0000    *
.*                         select field to modify or post                   *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
SEL0000   CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SEL8000 IF EQUAL         * Post was selected
          GOTO      SEL9000 IF LESS          * Cancel was selected
.
. =========================================================================
. After initial keyin, details may be modified by selecting the digit
. relating to that item. This routine would consist of an item selection
. routine as well as utilizing the subroutines setup via the ACPT module.
. Processing would remain in this routine until zero was entered as the
. selected item.
. =========================================================================
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SEL8000   MOVE      FALSE,EXIT               * Post was selected
          GOTO      SEL9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SEL9000   MOVE      TRUE,EXIT                * Cancel was selected
.
SEL9999   RETURN
+
.**************************************************************************
.*                              WRT0000                Called by: ML0000  *
.*                          write a new record                            *
.**************************************************************************
.
WRT0000
.
. =========================================================================
. After selecting to post, the actual set-up required to write would be
. performed enabling the full write to associated redords to take place.
. =========================================================================
.
WRT9999   RETURN
+
.*************************************************************************
.*                                DISP0000             Called by: ML0000 *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file                      *
.*************************************************************************
DISP0000
.
. =========================================================================
. This routine is used to display detials currently existing on a selected
. item.
. =========================================================================
.
DISP9999  RETURN
+
.***************************************************************************
.*                               UPD0000               Called by: ML0000   *
.*                      update record and insert key if part of            *
.*                      key has been modified.                             *
.***************************************************************************
UPD0000
.
. =========================================================================
. This routine is used to update an existing record.
. =========================================================================
.
UPD9999   RETURN
+
.****************************************************************************
.*                              DEL0000                Called by: ML0000    *
.*                         delete an existing record                        *
.****************************************************************************
DEL0000
.
. =========================================================================
. Deletion of a selected record would take place in this routine.
. =========================================================================
.
DEL9999   RETURN
.
+
.
. =========================================================================
. Includes for all file I/O would be included here.
. Includes for all procedural routines would be included here.
. =========================================================================
.
          INC       STD001IO
