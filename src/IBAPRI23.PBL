.******************************************************************************
.* System    :  PRIVATE PRACTICE                                              *
.* Program   :  IBAPRI23                                                      *
.* Desc      :  Aged Trial Balance                                            *
.******************************************************************************
.* Date      :  17/10/1991                                                    *
.* Author    :  Stephen Armstrong                                             *
.* Function  :  Print an aged trial balance report in debtor number or        *
.*              surname sequence for a given range of medical practices.  The *
.*              report can cover current, paid, and up to 6 periods of time   * 
.*              defined by the user.                                          *
.*              If using patient system data, then ATB details from the PMI   *
.*              will also be printed.                                         *
.* Mods      :                                                                *
.* V12.00.01 20/05/2025 Nikitha B       TSK 0955096                           *
.*           Alphanumeric changes                                             *
.* V11.03.02 24/04/2023  J.Tan          TSK 0847250                           *
.*           Mod for Reassign Debt                                            *
.* V11.03.01 20/03/2023  J.Tan          TSK 0847250                           *
.*           Mod for Reassign Debt                                            *
.* V10.13.01 07/08/2018  Richa Phogat   TSK 0848506                           *
.*           1) Changed KEY23 to KEY27 for RDPRHR1 (prihreff)                 *
.*           1) Changed KEY30 to KEY34 for RDTEMP3                            *
.*           2) Extended keylength for X2SDOCT, SAVDOCT from 6 to 10          *
.*           3) Changed filelength and keylength for ATBTEMP3,ATBTEMP4 from   *
.*              125 to 129, 30 to 34 & 50 to 54                               *
.*        V11.00.01 29/07/2020  J.Tan          TSK 0892130                    *
.*                  Fixed UKEY2                                               *
.*        V10.07.01 13/10/2015  J.Tan          CAR 310329                     *
.*                  Mods to use prdteffd - date item assigned to FI           *
.*        V10.05.01 03/02/2015  Ebon Clements  CAR 304410                     *
.*                  Fixed medical practice name printing on new page ENDP0000 *
.*        V10.04.01 15/04/2014  J.Tan          CAR 261630                     *
.*                  Removed port number from temp file name                   *
.*        V10.01.01 03/02/2011 Jill Parkinson CAR 233088                      *
.*                  Added pmsvx1af                                            *
.*        V9.12.01  05/02/2010  Davin            CAR 207040                   *
.*                  Added health fund range (kfnd0000)                        *
.*        V9.11.02  08/01/2009  Steve Armstrong  CAR 185927                   *
.*                  Removed isadd on temp file and included extra index in    *
.*                  isbuild (now that CMDLIN3 has been extended in length     *
.*                  from 48 to 100).                                          *
.*        V9.11.01  20/10/2008  J.Tan         CAR 178415                      *
.*                  Mods checking for Medical practice user access            *
.******************************************************************************
.*        V9.09.01  18/04/08 Ebon Clements CAR 157112                         *
.*                  Added credit notes for non pri invoices                   *
.******************************************************************************
.*        V9.04.02  16/08/05 Davin    CAR 62750                               *
.*                  Mods for removing redefined amount variables              *
.*        V9.04.01  17/06/2004  J.Tan    CAR 63112                            *
.*                  Mods to check for credit notes                            *
.******************************************************************************
.*        V9.03.02  24/06/2004  J.Tan    CAR 50235                            *
.*                  Recompiled for PRIINVPR - non bank deposit                *
.*        V9.03.01  02/03/2004  Lina Vo   CAR 47921                           *
.*                  Removed use of PRIDBTFD & IO.                             *
.******************************************************************************
.*        V9.02.01  02/10/2001  J.Tan                                         *
.*                  Mods to use PMSHCPFD instead of PATDO1FD                  *
.******************************************************************************
.*        V5.08.05  18/09/2000  Caleb Sharman  SRF 5511                       *
.*                  Mods to CONV0000                                          *
.*        V5.08.04  28/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.03  03/07/2000  Steve Downing                                 *
.*                  Recompiled for PRIINVPR                                   *
.*        V5.08.02  29/05/2000  J Habasque SRF 638707                         *
.*                  Fixed calculation of century in CALC0000                  *
.*        V5.08.01  12/04/2000  J.Tan                                         *
.*                  Mods to include GST amount                                *
.*        V5.08.B02 26/03/2000  J.Tan                                         *
.*                  Recompiled for PRIINVPR - GST                             *
.*        V5.08.B01 10/03/2000  J.Tan                                         *
.*                  Added effective to DTR files                              *
.*        V5.07.02  15/10/1999  D. Di Paola                                   *
.*                  Recompiled for PRIHTRFD and PRIBULFD                      *
.*        V5.07.01  09/06/1999  Greg Horvat                                   *
.*                  Recompiled for PRIINVIO - Fixed problem with direct read  *
.*       V5.07.B03  30/11/1998  Davin                                         *
.*                  5.07 Changes (CPDATE)                                     *
.*       V5.07.B02  23/11/1998  Nicole Harrington                             *
.*                  5.07 Changes                                              *
.*       V5.07.B01  05/11/1998  Jim Stathopoulos                              *
.*                  507 Changes                                               *
.******************************************************************************
.*        V6.00.01  25/06/1992  DIG                                           *
.*                  Recompiled for file changes, etc                          *
.*        V6.00.02 07/10/1992  Steve Armstrong                                *
.*                 Modified for alphanumeric debtor number                    *
.*        V6.00.03 12/10/1992  Steve Armstrong                                *
.*                 Added CNEWDS = 1                                           *
.*        V6.00.04 11/03/1993  i chung            SRF 121127                  *
.*                 Fixed incorrect code and description for first practice    *
.*        V6.00.05 15/11/1993  G Horvat           SRF 126111                  *
.*                 Fixed minimum debt problem                                 *
.*                                                                            *
.******************************************************************************
.
.$$$$$
.         ML0000
.         Open files and initialisation
.         pripracf
.         priinvof
.         pridtraf
.         pridebtf
.         prilhisf
.         patma1af
.         pmshcpaf
.         patcodes
.         patinvrf
.         patmi1af
.         patvisaf
.         patdtraf
.         patdschf
.         patlhisf
.         controlf
.
.         Get the ageing periods for the report as set up by the user in
.             system parameter maintenance
.
.         ML1000
.         Get the user option
.            If zero selected, exit program
.            If valid selection, proceed to get starting practice
.
.         ML2000
.         Get the starting medical practice code
.            If "?" input, display codes on file
.            If nothing input, default to "start"
.            If exitchar input, return to get next option
.
.         Get the ending medical practice code
.            If "?" input, display codes on file
.            If nothing input, default to "finish"
.            If exitchar input, return to get next option
.
.         See if separate pages to be printed for each M.P.
.            If nothing input, defaults to "No"
.
.         Get starting claim code
.            If "?" input, display codes on file
.            If nothing input, default to "start"
.            If exitchar input, return to get next option
.
.         ML3000
.         Get ending claim code
.            If "?" input, display codes on file
.            If nothing input, default to "finish"
.            If exitchar input, return to get next option
.
.         Get the minimum debt amount for the report
.
.         Get the maximum debt amount for the report
.
.         Get the report type (eg Full, Current, specific period)
.            If nothing input, return to get next option
.
.         Get date to age debts from (defaults to current date)
.
.         See if printing totals only
.            If nothing input, default to "No"
.
.         Get confirmation to continue
.            If (Y)es input, proceed to calculate ageing dates
.            If (N)o input, return to get next option
.            If (C)ancel, return to get next option
.
.         Calculate the cutoff dates for each period required
.
.         Create the temporary file according to the options selected
.
.         If full report requested then
.            process records for all periods for printing
.            print report
.         Else - detailed report requested so
.            process records for a specific period for printing print report
.
.         Erase temporary file
.         Return to get next option
.
.         ML9999
.         Chain back to calling program
.
.****************************************************************************
.
. Example of ageing (using 30, 60, 90+ periods)
. ---------------------------------------------
.
. 0------>30 days | 31 days--------->60 days | 61days------>90days | 91days +
.    Current      |       30 Days            |    60 Days          |   90 Days
.
. (N.B. Day 0 is the day the date the invoice was raised)
.
.****************************************************************************
.$$$$$
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
          INC       PRIPRAFD/INC                 * medical practice file
          INC       PRIHREFD/INC                 * doctor referral details file
          INC       PRIINVFD/INC                 * invoice file
          INC       PRIDTRFD/INC                 * debtor transaction file
..          INC       PRIDBTFD/INC                 * debtor file
          INC       PRILHIFD/INC                 * fin. letter history file
          INC       PRICONFD/INC                 * control file
          INC       PRICNOFD/INC                 * credit note file
          INC       PRIALSFD/INC                 * Medical Prac.all user access
          INC       PRISECFD/INC                 * Medical Prac.security access
          INC       PRIRASFD/INC                 * Reassign debt file
.
          INC       PATFN1FD/INC                 * Health fund file
          INC       PATMA1FD/INC                 * patient master file
          INC       PMSHCPFD/INC                 * doctor file
          INC       PATCODFD/INC                 * codes file
          INC       PATINVFD/INC                 * invoice file
          INC       PATMI1FD/INC                 * admission file
          INC       PMSVX1FD/INC                 * admission file
          INC       PATDTRFD/INC                 * debtor transaction file
          INC       PATVISFD/INC                 * visit file
          INC       PATDSCFD/INC                 * discharge file
          INC       PATLHIFD/INC                 * letter history file
          INC       PATCONFD/INC                 * control file
          INC       PMSCNOFD/INC                 * credit notes
+
.
.         Temporary Files Definition
.         --------------------------
.
.         Filename : PRI23Axx.dat          (xx = port id)
.           (or Full aged trial balance)
.
ATBTEMP1  IFILE SQL, FIXED=126, KEY="U122-122,1-6,123-125,7-14,15-16"
ATBTEMP2  IFILE SQL, FIXED=126, KEY="U122-122,1-6,17-36,123-125,7-14,15-16"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
X1PRAC    DIM       6           6           1       Medical Practice
X1DEBTR   DIM       8           8           7       Debtor Number
DX1SCAN   DIM       2           2          15       Scan Flag
X1SURN    DIM      20          20          17       Surname
X1GIVEN   DIM      25          25          37       Given Name
X1PAID    FORM    8.2           6          62       Amount Paid
X1CURR    FORM    8.2           6          68       Current Outstanding Amount
X1PER1    FORM    8.2           6          74       Period 1 Outst. Amount
X1PER2    FORM    8.2           6          80       Period 2 Outst. Amount
X1PER3    FORM    8.2           6          86       Period 3 Outst. Amount
X1PER4    FORM    8.2           6          92       Period 4 Outst. Amount
X1PER5    FORM    8.2           6          98       Period 5 Outst. Amount
X1PER6    FORM    8.2           6         104       Period 6 Outst. Amount
X1TOTAL   FORM    8.2           6         110       Total Amount Outstanding
X1PTPD    FORM    8.2           6         116       Total Patient Paid
PATFLAG   DIM     1             1         122       x=patient debt,
.                                                   y=debt collector
DEBTAGEN  DIM     3             3         123       Debt Collection Agency
.End of Record                            126
.
. Redefine form fields from key
. -----------------------------
X1SCAN    FORM      2
.
.         Filename : PRI23Axx.dat          (xx = port id)
.           (or Detailed aged trial balance)
.
ATBTEMP3  IFILE SQL, FIXED=133, KEY="U129-129,1-6,7-14,15-16,130-132,62-71,72-79"
ATBTEMP4  IFILE SQL, FIXED=133, KEY="U129-129,1-6,17-36,7-14,15-16,130-132,62-71,72-79"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
X2PRAC    DIM       6           6           1       Medical Practice
X2DEBTR   DIM       8           8           7       Debtor Number
DX2SCAN   DIM       2           2          15       Scan Flag
X2SURN    DIM      20          20          17       Surname
X2GIVEN   DIM      25          25          37       Given Name
X2SDOCT   DIM      10          10          62       Service Doctor
X2INUMB   DIM       8           8          72       Invoice Number
X2IDATE   DIM       8           8          80       Invoice Date (CCYYMMDD)
X2IOUT    FORM    8.2           6          88       Invoice Amt. Outstanding
X2PTELE   DIM      12          12          94       Private Telephone
X2BTELE   DIM      12          12         106       Business Telephone
X2LCODE   FORM      3           3         118       Last Letter Code
X2LDATE   DIM       8           8         121       Last letter date
.PATFLAG  DIM       1           1         129       x=patient debt,
.                                                   y=debt collector
.DEBTAGEN DIM       3           3         130       Debt Collection Agency
.End of Record                            133
.
. Redefine form fields from key
. -----------------------------
X2SCAN    FORM      2
+
.
. LOCAL VARIABLES DEFINITION
. --------------------------
DEBTFLAG  FORM      1
AGEDESC   DIM       18                           * ageing description
AGEPER    DIM       18
ATDATE    DIM       8                            * ageing to date
.
BPHONE    DIM       12                           * business phone
BTELFLAG  FORM      1                            * print business phone flag
.                                                   0 = not printed
.                                                   1 = printed
CMDLIN3   DIM       200
CMDLIN1   DIM       200
CMDLIN2   DIM       16
CODE      DIM       3                            * for PATCODKY
COLHEAD   DIM       95                           * column header line
COLUMN1   DIM       11                           * column header 1 for report
COLUMN2   DIM       11                           * column header 2 for report
COLUMN3   DIM       11                           * column header 3 for report
COLUMN4   DIM       11                           * column header 4 for report
COLUMN5   DIM       11                           * column header 5 for report
COLUMN6   DIM       11                           * column header 6 for report
COUNTR    FORM      1                            * counter
CURRDAT   DIM       8                            * current date
.
DEBTTYPE  FORM      1
DATPER1   DIM       8                            * date PRCNPER1 days prior
DATPER2   DIM       8                            * date PRCNPER2 days prior
DATPER3   DIM       8                            * date PRCNPER3 days prior
DATPER4   DIM       8                            * date PRCNPER4 days prior
DATPER5   DIM       8                            * date PRCNPER5 days prior
DATPER6   DIM       8                            * date PRCNPER6 days prior
DAYS      FORM      3                            * number of days ageing
DBTFLAG   FORM      1                            * debtor display flag
.                                                   0 = don't display name
.                                                   1 = display name
DBTOUT    FORM      8.2                          * debtors outst. total
DISDATE   DIM       8                            * discharge date
DIM5      DIM       5
DIM8      DIM       8
DIM11     DIM       11
DIM11A    DIM       11
DOCFLAG   FORM      1                            * doctor flag
.                                                    0 = don't display doc code
.                                                    1 = display doc code
DOPTION   FORM      1                            * option for days ageing
.                                                  1 = Full report
.                                                  2 = Current only
.                                                  3 = user defined period 1
.                                                  4 = user defined period 2
.                                                  5 = user defined period 3
.                                                  6 = user defined period 4
.                                                  7 = user defined period 5
.                                                  8 = user defined period 6
DSPEDFND  DIM       20                           * Display ending health fund
DSPSTFND  DIM       20                           * Display starting health fund
ECLAIM    DIM       3                            * end claim code
ENDDATE   DIM       8                            * end date for period search
ENDFND    DIM       6                            * Ending health fund
EPRAC     DIM       6                            * end medical practice code
.
F12P2     FORM      12.2
FMTNAME   DIM       26                           * formatted name
FMTNUMB   DIM       9                            * formatted debtor number
FORM3     FORM      3
FORM8     FORM      8
FORM82    FORM      8.2
FORM12P2  FORM      12.2
FOUND     FORM      1                            * found flag
.                                                    0 = inpatient ATB found
.                                                    1 = no inpatient ATB
GRANDTOT  FORM      8.2                          * grand total outstanding
HEADUND   DIM       95                           * header underline
HOPTION   FORM      2                            * health fund option (3 or 4)
INVDATE   DIM       8                            * invoice date
IBCNUGST  FORM      1
JDAYS     FORM      4                            * julian days
.
LETCODE   DIM       3                            * letter code
LETDATE   DIM       10                           * formatted letter date
.
MAXDEBT   FORM      8.2                          * maximum debt
MINDEBT   FORM      8.2                          * minimum debt
MPPER1    FORM      8.2                          * M.P. PRCNPER1 day amount
MPPER2    FORM      8.2                          * M.P. PRCNPER2 day amount
MPPER3    FORM      8.2                          * M.P. PRCNPER3 day amount
MPPER4    FORM      8.2                          * M.P. PRCNPER4 day amount
MPPER5    FORM      8.2                          * M.P. PRCNPER5 day amount
MPPER6    FORM      8.2                          * M.P. PRCNPER6 day amount
MPCURR    FORM      8.2                          * M.P. current amt
MPPAID    FORM      8.2                          * M.P. paid amount
MPPTPD    FORM      8.2                          * M.P. Patient paid amount
MPRAC     DIM       6                            * medical practice code
MPTOTAL   FORM      8.2                          * M.P. total
.
PASSFLAG  FORM      1
PDBONLY   FORM      1
PPORTION  FORM      12.2
.
PERIOD1   FORM      3                            * # days for period 1
PERIOD2   FORM      3                            * # days for period 2
PERIOD3   FORM      3                            * # days for period 3
PERIOD4   FORM      3                            * # days for period 4
PERIOD5   FORM      3                            * # days for period 5
PERIOD6   FORM      3                            * # days for period 6
PTELFLAG  FORM      1                            * print private phone flag
.                                                    0 = not printed
.                                                    1 = printed
REFRFUND  DIM       6                            * referral health fund
SEPFLAG   FORM      1                            * separate pages flag for MPs
.                                                    0 = No
.                                                    1 = Yes
SAVADM    DIM       8                            * saved admission #
SAVCC     FORM      2                            * saved century
SAVDAY    FORM      3                            * saved julian day
SAVDOCT   DIM       10                           * save doctor variable
SAVMPRAC  DIM       6                            * save medical practice code
SAVYR     FORM      2                            * saved year
SCLAIM    DIM       3                            * starting claim code
SPRAC     DIM       6                            * start medical practice code
STRTDATE  DIM       8                            * start date for period search
STRTFND   DIM       6                            * Starting health fund
SAVAGEN   DIM       3
.
TMPDATE   DIM       8                            * temp. date
TEMPFILE  DIM       8
TMPAMT    FORM      8.2                          * temp. period amount
TOTPER    FORM      1                            * total periods on report
TOTPER1   FORM      8.2                          * Grand tot MP PRCNPER1 day amt
TOTPER2   FORM      8.2                          * Grand tot MP PRCNPER2 day amt
TOTPER3   FORM      8.2                          * Grand tot MP PRCNPER3 day amt
TOTPER4   FORM      8.2                          * Grand tot MP PRCNPER4 day amt
TOTPER5   FORM      8.2                          * Grand tot MP PRCNPER5 day amt
TOTPER6   FORM      8.2                          * Grand tot MP PRCNPER6 day amt
TOTCURR   FORM      8.2                          * Grand total MP current amt
TOTPAID   FORM      8.2                          * Grand total MP paid amt
TOTPTPD   FORM      8.2                          * Grand total Patient paid amt
TOTLFLAG  FORM      1                            * print total only flag
.                                                    0 = no
.                                                    1 = yes
.
GTTPER1   FORM      8.2                          * Grand total
GTTPER2   FORM      8.2                          * Grand total
GTTPER3   FORM      8.2                          * Grand total
GTTPER4   FORM      8.2                          * Grand total
GTTPER5   FORM      8.2                          * Grand total
GTTPER6   FORM      8.2                          * Grand total
GTTCURR   FORM      8.2                          * Grand total
GTTPAID   FORM      8.2                          * Grand total MP paid amt
GTTTOTL   FORM      8.2                          * Grand total
.
DTCURR    FORM      8.2
DTPER1    FORM      8.2
DTPER2    FORM      8.2
DTPER3    FORM      8.2
DTPER4    FORM      8.2
DTPER5    FORM      8.2
DTPER6    FORM      8.2
DTTOTL    FORM      8.2
.
USERID    DIM       10
.
VDEBTOR   DIM       8                            * debtor number
VSCANPMI  FORM      2                            * scan flag
.
. PROGRAM CONSTANTS
. -----------------
AGECURR   INIT      "(Current Only)"
AGEFULL   INIT      "(Full Report)"
CLSBRA    INIT      ")"
CODECL    INIT      "CL"
DASH11    INIT      "-----------"
DASH93    INIT      "--------------------------------------------------":
                    "------------------------------------------"
DETSEQ    INIT      " - Debtor Sequence"
ERASE     INIT      "iserase "
FINISH    INIT      "Finish"
ISADD     INIT      "isadd "
ISBUILD   INIT      "isbuild "
MAXAMT    FORM      "99999999.99"
NAMSEQ    INIT      " - Surname Sequence"
NINETY    FORM      "90"
ONLY      INIT      "Only"
OPNBRA    INIT      "("
PIPE      INIT      "|"
START     INIT      "Start"
UKEY1     INIT      " 126 U122-122,1-6,123-125,7-14,15-16":
                    " U122-122,1-6,17-36,123-125,7-14,15-16"
UKEY2     INIT      " 133 U129-129,1-6,7-14,15-16,130-132,62-71,72-79":
                    " U129-129,1-6,17-36,7-14,15-16,130-132,62-71,72-79"
ZED6      INIT      "zzzzzz"
ZED11     INIT      "zzzzzzzzzzz"
.
PRGID     INIT      "IBAPRI23"
PRGNAM    INIT      "Aged Trial Balance"
VERSION   INIT      "V12.00.01"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
ML0000    CALL      INIT0000               * initialisation and open files
          CALL      GETP0000               * get periods to be printed
.
ML1000    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML2000:        * debtor # sequence
                            ML2000         * debtor surname sequence
.
ML2000    
          CALL      SPRA0000               * get starting M.P.
          BRANCH    EXIT,ML1000            * exitchar input
.
          CALL      EPRA0000               * get ending M.P.
          BRANCH    EXIT,ML1000            * exitchar entered
          CALL      SPAG0000               * see if sep. pages for each M.P.
.
          CALL      SCLM0000               * starting claim code
          BRANCH    EXIT,ML1000            * exitchar input
.
ML3000    CALL      ECLM0000               * end claim code
          BRANCH    EXIT,ML3000:           * invalid code range
                         ML1000            * exitchar input
.
          IF        HOPTION=3 | HOPTION=4
            CALL      KFND0000             * Keyin the health fund range
            BRANCH    EXIT,ML3000
          ENDIF
.
          CALL      MIND0000               * minimum debt amount
          CALL      MAXD0000               * maximum debt amount
.
          CALL      DAYS0000               * get days ageing required
          BRANCH    EXIT,ML1000            * nothing input
.
          CALL      DATE0000               * get date to age to
          CALL      PTOT0000               * see if printing totals only
          CALL      PATDEB00               * - Patient Debt Only?
.
          CALL      USID0000               * Keyin user id
.
          CALL      CONTQST                * ok to continue ?
          BRANCH    CEXIT,ML4000:          * Yes
                          ML2000:          * No
                          ML1000           * Cancel
.
ML4000    CALL      CONV0000               * calculate ageing cutoff dates
.
          CALL      CREA0000               * create temporary file
          BRANCH    DOPTION,ML5000         * full report
.
          CALL      DETL0000               * process records for detailed report
          CALL      PRND0000               * print records
          GOTO      ML6000                 * kill temp file
.
ML5000    CALL      FULL0000               * process records for full report
          CALL      PRNF0000               * print valid records
.
ML6000    CALL      KILL0000               * remove temporary file
          GOTO      ML1000
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
INIT0000  CALL      DISPHEAD                     * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"          * codes file
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"          * discharge file
.
          DISPLAY   *P64:24,"patdtraf";
          OPEN      PATDTRA1,"patdtraf"          * debtor transaction file
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patinvrf";
          OPEN      PATINVR3,"patinvrf"          * invoice file
.
          DISPLAY   *P64:24,"patlhisf";
          OPEN      PATLHIS1,"patlhisf"          * letter history file
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA2,"patvisaf"          * visit file
.
          DISPLAY   *P64:24,"pmscnoaf";
          OPEN      PMSCNOA3,"pmscnoaf"          * credit notes
.
..          DISPLAY   *P64:24,"pridebtf";
..          OPEN      PRIDEBT1,"pridebtf"          * debtor file
.
          DISPLAY   *P64:24,"pridtraf";
          OPEN      PRIDTRA3,"pridtraf"          * debtor transaction file
.
          DISPLAY   *P64:24,"prihreff";
          OPEN      PRIHREF1,"prihreff"          * doctor referral details
.
          DISPLAY   *P64:24,"priinvof";
          OPEN      PRIINVO2,"priinvof"          * invoice file
.
          DISPLAY   *P64:24,"prilhisf";
          OPEN      PRILHIS1,"prilhisf"          * fin. letter history file
.
          DISPLAY   *P64:24,"pripracf";
          OPEN      PRIPRAC1,"pripracf"          * medical practice file
.
          DISPLAY   *P64:24,"pricnoaf";
          OPEN      PRICNOA3,"pricnoaf"          * medical practice file
.
          OPEN      PRIALSA1,"prialsaf"
          OPEN      PRISECA1,"prisecaf"
          OPEN      PRIRASA1,"prirasaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"          * control file
.
          READ      CONTROLF,ZERO;*85,IBCNUGST
.
.         See if using patient system data
.
          READ      CONTROLF,THIRTY3;*181,PRCNPSYS
.
.         Get user defined ATB periods
.
          READ      CONTROLF,THIRTY4;*81,PRCNPAID,PRCNPER1,PRCNNAM1:
                                         PRCNPER2,PRCNNAM2,PRCNPER3,PRCNNAM3:
                                         PRCNPER4,PRCNNAM4,PRCNPER5,PRCNNAM5:
                                         PRCNPER6,PRCNNAM6
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
          MOVE      TWO,PACFRMT
          MOVE      ONE,CNEWDS
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1 Debtor number sequence                          *
.*                        2 Debtor surname sequence                         *
.****************************************************************************
OPTN0000  MOVE      ZERO,HOPTION                      * health fund option
          HLINE     *G37,2,60,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Debtor Number Sequence":
                    *P1:6,*V2LON,TWO,*HOFF," = Debtor Surname Sequence":
                    *P1:7,*V2LON,THREE,*HOFF," = Debtor Number Sequence HFund":
                    *P1:8,*V2LON,FOUR,*HOFF," = Debtor Surname Sequence HFund":
                    *P1:10,*EL,"Select Option : ";
.
OPTN1000  KEYIN     *P17:10,*EL,*DV,UNDLN1,*P17:10,*V2LON,COPTION;
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9500 IF EQUAL            * exit
.
          BRANCH    COPTION,OPTN8000,OPTN8500,OPTN7900,OPTN8400
          BEEP
          GOTO      OPTN1000
.
OPTN7900  MOVE      ONE,COPTION
          MOVE      THREE,HOPTION                     * health fund option
OPTN8000  DISPLAY   *P50:2,*V2LON," by Code    ";
          GOTO      OPTN9000      
.
OPTN8400  MOVE      TWO,COPTION
          MOVE      FOUR,HOPTION                      * health fund option
OPTN8500  DISPLAY   *P50:2,*V2LON," by Surname ";
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               SPRA0000              Called by: ML0000  *
.*                       input medical practice code                      *
.* Returns:          EXIT  0 = valid code input                           *
.*                         1 = exitchar input                             *
.**************************************************************************
SPRA0000  KEYIN     *P1:4,*EF,"From Medical Practice : ",*DV,UNDLN6:
                    *P25:4,*V2LON,MPRAC,*P25:4,*DV,MPRAC;
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,SPRA5000:               * nothing entered
                         SPRA4000:               * ? entered
                         SPRA9500:               * exitchar input
                         SPRA8000                * valid input
          GOTO      SPRA0000                     * invalid input
.
SPRA4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
.
SPRA4200  CALL      PRIPRADS                     * list codes on file
.
SPRA4500  KEYIN     *P1:24,*EL,"From Medical Practice : ",*DV,UNDLN6:
                    *P25:24,*V2LON,MPRAC,*P25:24,*DV,MPRAC;
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,SPRA4900:               * nothing entered
                         SPRA4200:               * ? entered
                         SPRA9400:               * exitchar input
                         SPRA7900                * valid input
          GOTO      SPRA4500                     * invalid input
.
SPRA4900  CALL      PUTSCR00                     * restore screen
SPRA5000  MOVE      SP6,SPRAC
          DISPLAY   *P25:4,*V2LON,START;
          GOTO      SPRA8500
.
SPRA7900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:4,*V2LON,MPRAC;
.
SPRA8000  MOVE      MPRAC,SPRAC
          DISPLAY   *P35:4,PRPRDESC;
.
SPRA8500  MOVE      ZERO,EXIT
          GOTO      SPRA9999
.
SPRA9400  CALL      FRESCR00
SPRA9500  MOVE      ONE,EXIT
.
SPRA9999  RETURN
+
.**************************************************************************
.*                               EPRA0000              Called by: ML0000  *
.*                       input medical practice code                      *
.* Returns:          EXIT  0 = valid code input                           *
.*                         1 = exitchar input                             *
.**************************************************************************
EPRA0000  KEYIN     *P1:5,*EF,"To   Medical Practice : ",*DV,UNDLN6:
                    *P25:5,*V2LON,MPRAC,*P25:5,*DV,MPRAC;
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,EPRA5000:               * nothing entered
                         EPRA4000:               * ? entered
                         EPRA9500:               * exitchar input
                         EPRA3000                * valid input
          GOTO      EPRA0000                     * invalid input
.
EPRA3000  MATCH     SPRAC,MPRAC                  * end prac < start prac ?
          GOTO      EPRA8000 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "To Practice must be greater than or = From Practice.    ";
          CALL      HITENTER
          GOTO      EPRA0000
.
EPRA4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
.
EPRA4200  CALL      PRIPRADS                     * list codes on file
.
EPRA4500  KEYIN     *P1:24,*EL,"To   Medical Practice : ",*DV,UNDLN6:
                    *P25:24,*V2LON,MPRAC,*P25:24,*DV,MPRAC;
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,EPRA4900:               * nothing entered
                         EPRA4200:               * ? entered
                         EPRA9400:               * exitchar input
                         EPRA6000                * valid input
          GOTO      EPRA4500                     * invalid input
.
EPRA4900  CALL      PUTSCR00                     * restore screen
EPRA5000  MOVE      ZED6,EPRAC
          DISPLAY   *P25:5,*V2LON,FINISH;
          GOTO      EPRA8500
.
EPRA6000  MATCH     SPRAC,MPRAC                  * end prac < start prac ?
          GOTO      EPRA7900 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "To Practice must be greater than or = From Practice.    ";
          CALL      HITENTER
          GOTO      EPRA4500
.
EPRA7900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:5,*V2LON,MPRAC;
.
EPRA8000  MOVE      MPRAC,EPRAC
          DISPLAY   *P35:5,PRPRDESC;
.
EPRA8500  MOVE      ZERO,EXIT
          GOTO      EPRA9999
.
EPRA9400  CALL      FRESCR00
EPRA9500  MOVE      ONE,EXIT
.
EPRA9999  RETURN
+
.**************************************************************************
.*                              CHK0000                Called by: SPRA0000*
.*             see what was input for medical practice            EPRA0000*
.* Returns:           EXIT   0 = invalid input                            *
.*                           1 = nothing input                            *
.*                           2 = ? input                                  *
.*                           3 = exitchar input                           *
.*                           4 = valid input                              *
.**************************************************************************
CHK0000  ENDSET     MPRAC
         APPEND     SP6,MPRAC
         RESET      MPRAC
.
         MATCH      SP6,MPRAC                    * anything entered ?
         GOTO       CHK8000 IF EQUAL             * yes
.
         CMATCH     EXITCHAR,MPRAC               * exitchar input ?
         GOTO       CHK9000 IF EQUAL             * yes
.
         CMATCH     QUEST,MPRAC                  * "?" input ?
         GOTO       CHK8500 IF EQUAL             * yes
.
         MOVE       MPRAC,KEY6
         CALL       RDPRPR1
         COMPARE    ZERO,OVRCD                   * record on file ?
         GOTO       CHK9500 IF EQUAL             * yes
.
         DISPLAY    *P1:24,*EL,*B,*V2LON,"Medical Practice not on file.    ";
         CALL       HITENTER
         MOVE       ZERO,EXIT
         GOTO       CHK9999
.
CHK8000  MOVE       ONE,EXIT
         GOTO       CHK9999
.
CHK8500  MOVE       TWO,EXIT
         GOTO       CHK9999
.
CHK9000  MOVE       THREE,EXIT
         GOTO       CHK9999
.
CHK9500  MOVE       FOUR,EXIT
.
CHK9999  RETURN
+
.****************************************************************************
.*                               SPAG0000              Called by: ML0000    *
.*                see if separate pages for each M.P.                       *
.****************************************************************************
SPAG0000  MATCH     SPRAC,EPRAC                  * same medical practice ?
          GOTO      SPAG1500 IF EQUAL            * yes - bypass question
.
          KEYIN     *P1:7,*EL,"Separate pages for each Medical Practice (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ") ? ",*DV,ANSN,*P50:7,*V2LON,ANS;
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                      * anything entered ?
          GOTO      SPAG1000 IF EQUAL            * no
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS                     * N entered ?
          GOTO      SPAG1000 IF EQUAL            * yes
          MATCH     ANSY,ANS                     * Y entered ?
          GOTO      SPAG2000 IF EQUAL            * yes
          BEEP
          GOTO      SPAG0000                     * invalid
.
SPAG1000  DISPLAY   *P50:7,*V2LON,NO;
SPAG1500  MOVE      ZERO,SEPFLAG
          GOTO      SPAG9999
.
SPAG2000  DISPLAY   *P50:7,*V2LON,YES;
          MOVE      ONE,SEPFLAG
.
SPAG9999  RETURN
+
.****************************************************************************
.*                                 SCLM0000            Called by: ML0000    *
.*                   get report starting claim code                         *
.*    RETURNS:  EXIT   0 = valid code                                       *
.*                     1 = exitchar entered                                 *
.****************************************************************************
SCLM0000  DISPLAY   *P1:9,*EL,"From Claim Code :";
          MOVE      NINE,EVERT
          MOVE      TEN9,ECOL
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODECL,CODE
.
          CALL      PATCODKY                     * get code
          BRANCH    EXIT,SCLM5000:               * nothing entered
                         SCLM9500                * exitchar entered
          GOTO      SCLM9000                     * valid code
.
SCLM5000  DISPLAY   *P19:9,*V2LON,"Start";       * default display
          MOVE      SP3,SCLAIM
          MOVE      ZERO,EXIT
          GOTO      SCLM9999
.
SCLM9000  MOVE      ACODE,SCLAIM                 * save code
          DISPLAY   *P19:9,*V2LON,ACODE,*HOFF,*P24:9,TDESC;
          MOVE      ZERO,EXIT
          GOTO      SCLM9999
.
SCLM9500  MOVE      ONE,EXIT
.
SCLM9999  RETURN
+
.****************************************************************************
.*                                 ECLM0000            Called by: ML0000    *
.*                    get report ending claim code                          *
.*    RETURNS:       EXIT  0 = valid code                                   *
.*                         1 = invalid code range                           *
.*                         2 = exitchar entered                             *
.****************************************************************************
ECLM0000  DISPLAY   *P1:10,*EL,"To   Claim Code :";
          MOVE      TEN,EVERT
          MOVE      TEN9,ECOL
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODECL,CODE
.
          CALL      PATCODKY                * get code
          BRANCH    EXIT,ECLM5000:          * nothing entered
                         ECLM9700           * exitchar entered
          GOTO      ECLM7000                * valid code
.
ECLM5000  MOVE      ZED6,ECLAIM
          DISPLAY   *P19:10,*V2LON,"Finish";     * default display
          MOVE      ZERO,EXIT
          GOTO      ECLM9999
.
.         Validate claim code range
.
ECLM7000  MOVE      ACODE,ECLAIM
          MATCH     SCLAIM,ECLAIM           * end code < start code ?
          GOTO      ECLM9000 IF NOT LESS    * no
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "To Code must be greater than or equal to From Code.    ";
          CALL      HITENTER
          DISPLAY   *P19:10,*EL,*P20:10,*EL;
          GOTO      ECLM9500
.
ECLM9000  DISPLAY   *P19:10,*V2LON,ACODE,*HOFF,*P24:10,TDESC;
          MOVE      ZERO,EXIT
          GOTO      ECLM9999
.
ECLM9500  MOVE      ONE,EXIT
          GOTO      ECLM9999
.
ECLM9700  MOVE      TWO,EXIT
.
ECLM9999  RETURN
+
.**********************************************************************
.*                             KFND0000                               *
.*                keyin range of health funds                         *
.**********************************************************************
KFND0000  DISPLAY   *P45:9,"Starting Health Fund :",*EL:
                    *P45:10,"Ending   Health Fund :";
          MOVE      "68",ECOL
.
. ----- Starting Health Fund -----
.
KFND1000  MOVE      "9",EVERT
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      SP6,CKYIDEF6            * No default
          MOVE      ZERO,CKYIMAND           * Keyin not mandatory
          MOVE      ONE,CNEWDS              * Don't return for keyin
          CALL      PATFNDKY                * Keyin the health fund
          BRANCH    EXIT,KFND2000,KFND9500
.                        Space    Exit
.
          MOVE      HCODE,STRTFND
          MOVE      HFNAME,DSPSTFND
          DISPLAY   *P68:EVERT,*EL,*V2LON,STRTFND,*P75:EVERT,*HOFF,DSPSTFND;
          GOTO      KFND3000
.
KFND2000  MOVE      HCODE,STRTFND
          PACK      DSPSTFND,START,SP20
          DISPLAY   *P68:EVERT,*EL,*V2LON,DSPSTFND;
.
. ----- Ending Health Fund -----
.
KFND3000  MOVE      "10",EVERT
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      STRTFND,CKYIDEF6        * Default
          MOVE      ZERO,CKYIMAND           * Keyin not mandatory
          MOVE      ONE,CNEWDS              * Don't return for keyin
          CALL      PATFNDKY                * Keyin the health fund
          BRANCH    EXIT,KFND4000,KFND1000
.                        Space    Exit
.
          MOVE      HCODE,ENDFND
          MOVE      HFNAME,DSPEDFND
          DISPLAY   *P68:EVERT,*EL,*V2LON,ENDFND,*P75:EVERT,*HOFF,DSPEDFND;
          GOTO      KFND5000
.
KFND4000  MOVE      Z70,ENDFND
          PACK      DSPEDFND,FINISH,SP20
          DISPLAY   *P68:EVERT,*EL,*V2LON,DSPEDFND;
.
KFND5000  MATCH     STRTFND,ENDFND
          GOTO      KFND9000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Ending health fund must be after starting ":
                                  "health fund. ";
          CALL       HITENTER
          GOTO       KFND3000
.
KFND9000  MOVE      ZERO,EXIT
          GOTO      KFND9999
.
KFND9500  MOVE      ONE,EXIT
KFND9999  RETURN
+
.****************************************************************************
.*                               MIND0000              Called by: ML0000    *
.*                         minimum debt amount                              *
.****************************************************************************
MIND0000  KEYIN     *P1:12,*EL,"Minimum Debt: ",*V2LON,"$":
                    *P16:12,*V2LON,MINDEBT,*P16:12,*DV,MINDEBT;
          IF        MINDEBT=0
            MOVE      "-9999999.99",MINDEBT
            DISPLAY   *P16:12,*V2LON,MINDEBT
          ENDIF
          RETURN
+
.****************************************************************************
.*                               MAXD0000              Called by: ML0000    *
.*                        maximum debt amount                               *
.****************************************************************************
MAXD0000  KEYIN     *P1:13,*EL,"Maximum Debt: ",*V2LON,"$":
                    *P16:13,*V2LON,MAXDEBT;
.
          IF        MAXDEBT = 0
            MOVE      MAXAMT,MAXDEBT
          ENDIF
.
          DISPLAY   *P16:13,*V2LON,MAXDEBT;
.
          COMPARE   MINDEBT,MAXDEBT
          IF        @LESS
             DISPLAY   *P1:24,*EL,*B,*V2LON:
                       "Max. debt must greater than or equal Minimum debt.   ";
             CALL      HITENTER
             GOTO      MAXD0000
          ENDIF
.
MAXD9999  RETURN
+
.****************************************************************************
.*                               DAYS0000              Called by: ML0000    *
.*                    get number of days for ageing                         *
.* Returns:           EXIT  0 = valid option selected                       *
.*                          1 = exit                                        *
.****************************************************************************
DAYS0000  DISPLAY   *P1:15,*EF,*V2LON,ONE,*HOFF," = Full Report":
                    *P1:16,*V2LON,TWO,*HOFF," = Current Only";
.
.         Display the options for ageing set up by the user
.
          MOVE      TEN6,CVERT
          MOVE      TWO,COUNTR
          MOVE      ZERO,FORM1
.
DAYS1000  ADD       ONE,FORM1
          COMPARE   FORM1,TOTPER
          GOTO      DAYS2000 IF LESS
.
          ADD       ONE,CVERT
          ADD       ONE,COUNTR
          LOAD      DIM11,FORM1,COLUMN1,COLUMN2,COLUMN3,COLUMN4,COLUMN5,COLUMN6
          DISPLAY   *P1:CVERT,*V2LON,COUNTR,*HOFF," = ",DIM11;
          GOTO      DAYS1000
.
.         Get user selection
.
DAYS2000  ADD       TWO,CVERT
.
DAYS3000  KEYIN     *P1:CVERT,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:CVERT,*V2LON,DOPTION;
.
          COMPARE   ZERO,DOPTION                 * anything input ?
          GOTO      DAYS9500 IF EQUAL            * no
.
          COMPARE   DOPTION,COUNTR               * valid selection ?
          GOTO      DAYS3100 IF LESS             * no
.
          BRANCH    DOPTION,DAYS9000:
                            DAYS9000:
                            DAYS8000:
                            DAYS8000:
                            DAYS8000:
                            DAYS8000:
                            DAYS8000:
                            DAYS8000
DAYS3100  BEEP
          GOTO      DAYS3000
.
.         If a user defined option selected, then format the screen description
.
DAYS8000  SUB       TWO,DOPTION
          LOAD      DIM11,DOPTION,COLUMN1,COLUMN2,COLUMN3,COLUMN4,COLUMN5:
                                  COLUMN6
          STRIP     DIM11                        * remove trailing blanks
          CLEAR     AGEPER
          PACK      AGEPER,OPNBRA,DIM11,SP1,ONLY,CLSBRA
          ADD       TWO,DOPTION
.
DAYS9000  LOAD      AGEDESC,DOPTION,AGEFULL,AGECURR,AGEPER,AGEPER,AGEPER:
                                    AGEPER,AGEPER,AGEPER
          DISPLAY   *P63:2,*V2LON,AGEDESC;
          MOVE      ZERO,EXIT
          GOTO      DAYS9999
.
DAYS9500  MOVE      ONE,EXIT
.
DAYS9999  RETURN
+
.****************************************************************************
.*                               DATE0000              Called by: ML0000    *
.*                    get date for ageing to                                *
.****************************************************************************
DATE0000  DISPLAY   *P1:15,*EF,"As at date :";
.
          CALL      IBACLOCK                     * get current date
          PACK      CURRDAT,CCC,CYY,CMM,CDD
.
          UNPACK    CURRDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      TEN5,CVERT                   * default to today's date
          MOVE      TEN4,CCOL
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          CALL      KEYDATE                      * get "as at date"
          BRANCH    OVRCD,DATE0000
          PACK      ATDATE,CCENT,CYEAR,CMON,CDAY
.
DATE9999  RETURN
+
.****************************************************************************
.*                               PTOT0000              Called by: ML0000    *
.*                see if totals only are to be printed                      *
.****************************************************************************
PTOT0000  KEYIN     *P1:17,*EL,"Print totals only (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ") ? ",*DV,ANSN,*P27:17,*V2LON,ANS;
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                 * anything entered ?
          GOTO      PTOT1000 IF EQUAL       * no
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS                * N entered ?
          GOTO      PTOT1000 IF EQUAL       * yes
          MATCH     ANSY,ANS                * Y entered ?
          GOTO      PTOT2000 IF EQUAL       * yes
          BEEP
          GOTO      PTOT0000                * invalid
.
PTOT1000  DISPLAY   *P27:17,*V2LON,NO;
          MOVE      ZERO,TOTLFLAG
          GOTO      PTOT9999
.
PTOT2000  DISPLAY   *P27:17,*V2LON,YES;
          MOVE      ONE,TOTLFLAG
.
PTOT9999  RETURN
+
.*******************************************************************************
.         Keyin Patient Debt Only
.*******************************************************************************
PATDEB00  DISPLAY   *P1:24,*EL,"0=All Debt, 1=Patient Debt Only, ";
.                              "2=Debt Collection Debt only."
          MOVE      SP1,ANS
          KEYIN     *P1:20,*EL,"Patient Debt Only:":
                    *V2LON,ANS;
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS
          GOTO      PATDEB40 IF EOS
          GOTO      PATDEB40 IF EQUAL
.
          MOVE      ZERO,FORM1
          MOVE      ANS,FORM1
          BRANCH    FORM1,PATDEB40,PATDEB60
.
          MOVE      ZERO,PDBONLY
          MOVE      ZERO,PASSFLAG
          DISPLAY   *P22:20,*V2LON,"All Debt";
          GOTO      PATDEB99
.
PATDEB40  MOVE      ONE,PDBONLY
          MOVE      ONE,PASSFLAG       * Print Patient debtor only
          DISPLAY   *P22:20,*V2LON,"Patient Debt Only";
          GOTO      PATDEB99
.
PATDEB60  MOVE      TWO,PDBONLY
          MOVE      TWO,PASSFLAG     * Print Debt Collection Debt only
          DISPLAY   *P22:20,*V2LON,"Debt Collection Debt Only";
.
PATDEB99  RETURN
+
.****************************************************************************
.         Keyin user id
.****************************************************************************
USID0000  KEYIN     *P1:18,*EL,"User Id : ",USERID;
          PACK      USERID,USERID,SP70
          MATCH     SP70,USERID
          GOTO      USID0000 IF EQUAL
USID9999  RETURN
+
.****************************************************************************
.*                               FULL0000              Called by: ML0000    *
.*                   process records for full report                        *
.****************************************************************************
FULL0000  DISPLAY   *P1:24,*EL,"Processing : ";
.
.         Loop through the Invoice file
.
          MOVE      SP20,KEY16
          CALL      RSPRIN2                 * position at start of file
FULL1000  CALL      RKPRIN2                 * read next record
          BRANCH    OVRCD,FULL9999          * end of file
.
          MATCH     PRINDATE,ATDATE         * date in range ?
          GOTO      FULL9999 IF LESS        * no - finish
.
.         See if in medical practice range
.
          MATCH     SPRAC,PRINPRAC          * practice >= start practice ?
          GOTO      FULL1000 IF LESS        * no - ignore
.
          MATCH     PRINPRAC,EPRAC          * practice <= end practice ?
          GOTO      FULL1000 IF LESS        * no - ignore
.
.         check the medical practice user access
.
          PACK      KEY10,USERID,SP70
          CALL      RDPRALS1
          COMPARE   ZERO,OVRCD
          GOTO      FULL1200 IF EQUAL       * User has access to all Med.Prac.
.
          PACK      KEY16,PRINPRAC,USERID,SP70
          CALL      RDPRSEC1
          BRANCH    OVRCD,FULL1000          * no access
.
.         See if in claim code range
.
FULL1200  MATCH     SCLAIM,PRINCLAM         * cl. code >= start cl. code ?
          GOTO      FULL1000 IF LESS        * no - ignore
.
          MATCH     PRINCLAM,ECLAIM         * cl. code <= end cl. code ?
          GOTO      FULL1000 IF LESS        * no - ignore
.
.         See if in health fund range (if filtering by health fund)
.
          IF        HOPTION=3 | HOPTION=4
            CALL      GHFND000                * get health fund from prihreff
.
            MATCH     STRTFND,REFRFUND        * health fund >= start fund ?
            GOTO      FULL1000 IF LESS        * no - ignore
.
            MATCH     REFRFUND,ENDFND         * health fund <= end fund ?
            GOTO      FULL1000 IF LESS        * no - ignore
          ENDIF
.
.         Valid invoice found, so loop through DTR file for transactions
.         for this invoice
.
          MOVE      ZERO,TOTPAID            * initialise total payments
          MOVE      ZERO,X1PTPD
.
          PACK      KEY24,PRINDEBT,PRINSCAN,PRINNUMB,SP10
          CALL      RSPRDT3                 * position in file
FULL1500  CALL      RKPRDT3                 * read next record
          BRANCH    OVRCD,FULL2500          * end of file
.
          MATCH     PRINDEBT,PRDTDEBT       * same debtor number ?
          GOTO      FULL2500 IF NOT EQUAL   * no
.
          COMPARE   PRINSCAN,PRDTSCAN       * same scan flag ?
          GOTO      FULL2500 IF NOT EQUAL   * no
.
          MATCH     PRINNUMB,PRDTINVN       * same invoice number ?
          GOTO      FULL2500 IF NOT EQUAL   * no
.
.         Valid transaction found, so process only receipt and journal entries
.
          BRANCH    PRDTRTYP,FULL1500,FULL2000,FULL2000
.
.         Check that transaction was not after cut off date
.
FULL2000  MOVE      PRDTSDAT,DIM8
          MATCH     SP70,PRDTEFFD
          IF        !@EQUAL
            MOVE      PRDTEFFD,DIM8         * Date item assigned to FI
          ENDIF
          MATCH     DIM8,ATDATE         * valid trax. date ?
          GOTO      FULL1500 IF LESS        * no - ignore
          ADD       PRDTAMNT,TOTPAID        * increment total payments
          IF        IBCNUGST=2 & PRDTRTYP=3
            ADD       PRDTGSTM,TOTPAID      * GST Journal
          ENDIF
          GOTO      FULL1500                * get next DTR record
.
.         Check if invoice has zero balance
.
FULL2500  CALL      CRDN0000                * Check credit note
          ADD       FORM12P2,PRINITOT
.
          MOVE      PRINITOT,X2IOUT
          ADD       TOTPAID,X2IOUT
.
          COMPARE   ZERO,X2IOUT             * Invoice outstanding ?
          GOTO      FULL1000 IF EQUAL       * no - ignore
.
.         Get debtor details
.
          BRANCH    PRINSCAN,FULL3000       * PMI debtor
.
..          MOVE      PRINDEBT,KEY8
..          CALL      RDPRDB1                 * read debtor record
..          BRANCH    OVRCD,FULL3500          * not on file
..          MOVE      PRDBSNAM,X1SURN
..          MOVE      PRDBGNAM,X1GIVEN
          MOVE      "Unknown Debtor",X1SURN
          MOVE      SP70,X1GIVEN
          GOTO      FULL3500
.
FULL3000  MOVE      PRINDEBT,PURNO          * PMI debtor
          MOVE      PURNO,KEY8
          CALL      RDMAST1                 * read master record
          BRANCH    OVRCD,FULL3500          * not on file
          MOVE      PSNAME,X1SURN
          MOVE      PGNAME,X1GIVEN
.
.         Write record to temporary file
.
FULL3500  MOVE      PRINDEBT,X1DEBTR
          MOVE      PRINSCAN,X1SCAN
          MOVE      PRINPRAC,X1PRAC
          COMPARE   ZERO,TOTPAID
          GOTO      FULL3700 IF EQUAL
          MULT      SEQ,TOTPAID
.
FULL3700  MOVE      TOTPAID,X1PAID     * total payment
.
          DISPLAY   *P14:24,*EL,*V2LON,X1PRAC,SP1,X1DEBTR,SP1,X1SURN;
.
          CALL      REAS0000
.
.         Check if there is amount for patient portion/reassign debt
.         if no reassign debt, put all payment to health fund outstanding
.
          COMPARE    ZERO,DEBTTYPE
          GOTO       FULL3800 IF EQUAL
.
          IF          PPORTION<>0
            CALL        WAMT0000       * write Patient outstanding amount
          ENDIF
.
FULL3800  COMPARE    ONE,PDBONLY
          GOTO       FULL1000 IF EQUAL         * Patient Debt only
.
          UNPACK    SP70,PATFLAG,DEBTAGEN
          PACK      KEY20,PATFLAG,X1PRAC,DEBTAGEN,X1DEBTR,X1SCAN,SP70
          CALL      RDTEMP1                 * record already on file ?
          BRANCH    OVRCD,FULL4000          * no - write new record
.
          MOVE      PRINDATE,INVDATE
          CALL      CALP0000                * add amt. to correct period
          CALL      UPTEMP1                 * update record
          GOTO      FULL1000                * get next invoice
.
FULL4000  MOVE      ZERO,X1CURR
          MOVE      ZERO,X1PER1
          MOVE      ZERO,X1PER2
          MOVE      ZERO,X1PER3
          MOVE      ZERO,X1PER4
          MOVE      ZERO,X1PER5
          MOVE      ZERO,X1PER6
          MOVE      ZERO,X1TOTAL
          MOVE      PRINDATE,INVDATE
          CALL      CALP0000                * add amt. to correct period
          CALL      WRTEMP1                 * write record
          GOTO      FULL1000                * get next invoice
.
FULL9999  RETURN
+
.****************************************************************************
.*                               DETL0000              Called by: ML0000    *
.*                 process records for the detailed report                  *
.****************************************************************************
DETL0000  DISPLAY   *P1:24,*EL,"Processing :";
.
          LOAD      STRTDATE,DOPTION,SP8,DATPER1,DATPER2,DATPER3,DATPER4:
                                     DATPER5,DATPER6,SP8
          LOAD      ENDDATE,DOPTION,SP8,ATDATE,DATPER1,DATPER2,DATPER3:
                                    DATPER4,DATPER5,DATPER6
.
.         Loop through the invoice file
.
          PACK      KEY16,STRTDATE,SP8
          CALL      RSPRIN2                 * position at start of file
DETL1000  CALL      RKPRIN2                 * read next record
          BRANCH    OVRCD,DETL9999          * end of file
.
.         MATCH     PRINDATE,STRTDATE       * invoice date > start date ?
.         GOTO      DETL1000 IF NOT LESS    * no - ignore
.
          MATCH     PRINDATE,ENDDATE        * date in range ?
          GOTO      DETL9999 IF LESS        * no - finish
.
.         Check if in medical practice range
.
          MATCH     SPRAC,PRINPRAC          * practice >= start practice ?
          GOTO      DETL1000 IF LESS        * no - ignore
.
          MATCH     PRINPRAC,EPRAC          * practice <= end practice ?
          GOTO      DETL1000 IF LESS        * no - ignore
.
.         check the medical practice user access
.
          PACK      KEY10,USERID,SP70
          CALL      RDPRALS1
          COMPARE   ZERO,OVRCD
          GOTO      DETL1200 IF EQUAL       * User has access to all Med.Prac.
.
          PACK      KEY16,PRINPRAC,USERID,SP70
          CALL      RDPRSEC1
          BRANCH    OVRCD,DETL1000          * no access
.
.         Check if in claim code range
.
DETL1200  MATCH     SCLAIM,PRINCLAM         * cl. code >= start claim ?
          GOTO      DETL1000 IF LESS        * no - ignore
.
          MATCH     PRINCLAM,ECLAIM         * cl. code <= end claim ?
          GOTO      DETL1000 IF LESS        * no - ignore
.
.         See if in health fund range (if filtering by health fund)
.
          IF        HOPTION=3 | HOPTION=4
            CALL      GHFND000                * get health fund from prihreff
.
            MATCH     STRTFND,REFRFUND        * health fund >= start fund ?
            GOTO      DETL1000 IF LESS        * no - ignore
.
            MATCH     REFRFUND,ENDFND         * health fund <= end fund ?
            GOTO      DETL1000 IF LESS        * no - ignore
          ENDIF
.
.         Valid invoice found, so loop through DTR file for transactions
.         for this invoice
.
          MOVE      ZERO,TOTPAID            * initialise total payments
          MOVE      ZERO,X1PTPD
.
          PACK      KEY24,PRINDEBT,PRINSCAN,PRINNUMB,SP10
          CALL      RSPRDT3                 * position in file
DETL1500  CALL      RKPRDT3                 * read next record
          BRANCH    OVRCD,DETL2500          * end of file
.
          MATCH     PRINDEBT,PRDTDEBT       * same debtor number ?
          GOTO      DETL2500 IF NOT EQUAL   * no
.
          COMPARE   PRINSCAN,PRDTSCAN       * same scan flag ?
          GOTO      DETL2500 IF NOT EQUAL   * no
.
          MATCH     PRINNUMB,PRDTINVN       * same invoice number ?
          GOTO      DETL2500 IF NOT EQUAL   * no
.
.         Valid transaction found, so process only receipt and journal entries
.
          BRANCH    PRDTRTYP,DETL1500,DETL2000,DETL2000
.
.         Check that transaction was not after cut off date
.
DETL2000  MOVE      PRDTSDAT,DIM8
          MATCH     SP70,PRDTEFFD
          IF        !@EQUAL
            MOVE      PRDTEFFD,DIM8         * date item assigned to FI
          ENDIF
          MATCH     DIM8,ATDATE             * valid trax. date ?
          GOTO      DETL1500 IF LESS        * no
.
          ADD       PRDTAMNT,TOTPAID        * increment total payments
          IF        IBCNUGST=2 & PRDTRTYP=3
            ADD       PRDTGSTM,TOTPAID      * GST Journal
          ENDIF
          GOTO      DETL1500                * get next DTR record
.
.         Check if invoice has zero balance
.
DETL2500  CALL      CRDN0000                * Check credit note
          ADD       FORM12P2,PRINITOT
.
          MOVE      PRINITOT,X2IOUT
          ADD       TOTPAID,X2IOUT
.
          COMPARE   ZERO,X2IOUT             * Invoice outstanding ?
          GOTO      DETL1000 IF EQUAL       * no - ignore
.
.         Check debt is in dollar value range
.
          COMPARE   MINDEBT,X2IOUT          * Debt < minimum debt ?
          GOTO      DETL1000 IF LESS        * yes - ignore
.
          COMPARE   X2IOUT,MAXDEBT          * Debt > maximum debt ?
          GOTO      DETL1000 IF LESS        * yes - ignore
.
.         Get debtor details
.
          BRANCH    PRINSCAN,DETL3000       * PMI debtor
.
..          MOVE      PRINDEBT,KEY8
..          CALL      RDPRDB1                 * read debtor record
..          BRANCH    OVRCD,DETL3200          * not on file
.
..          MOVE      PRDBSNAM,X2SURN
..          MOVE      PRDBGNAM,X2GIVEN
..          MOVE      PRDBTELP,X2PTELE
..          MOVE      PRDBTELB,X2BTELE
          MOVE      "Unknown Debtor",X2SURN
          MOVE      SP70,X2GIVEN
          MOVE      SP70,X2PTELE
          MOVE      SP70,X2BTELE
          GOTO      DETL3200
.
DETL3000  MOVE      PRINDEBT,PURNO          * PMI debtor
          MOVE      PURNO,KEY8
          CALL      RDMAST1                 * read master record
          BRANCH    OVRCD,DETL3200          * not on file
.
          MOVE      PSNAME,X2SURN
          MOVE      PGNAME,X2GIVEN
          MOVE      PTELEP,X2PTELE
          MOVE      PTELEB,X2BTELE
.
.         See if a financial letter has been sent
.
DETL3200  MOVE      ZERO,X2LCODE
          MOVE      SP8,X2LDATE
          PACK      KEY21,PRINDEBT,PRINSCAN,ZED11
          CALL      RSPRLH1                 * position in file
          CALL      RPPRLH1                 * read previous record
          BRANCH    OVRCD,DETL3500          * no letter sent
.
          MATCH     PRINDEBT,PRLHDEBT       * same debtor ?
          GOTO      DETL3500 IF NOT EQUAL   * no
.
          COMPARE   PRINSCAN,PRLHSCAN       * same scan flag ?
          GOTO      DETL3500 IF NOT EQUAL   * no
          MOVE      PRLHNUMB,X2LCODE
          MOVE      PRLHDATE,X2LDATE
.
.         Write record to temporary file
.
DETL3500  MOVE      PRINDEBT,X2DEBTR
          MOVE      PRINSCAN,X2SCAN
          MOVE      PRINDOCT,X2SDOCT
          MOVE      PRINPRAC,X2PRAC
          MOVE      PRINNUMB,X2INUMB
          MOVE      PRINDATE,X2IDATE
          MULT      SEQ,TOTPAID
.
          DISPLAY   *P14:24,*EL,*V2LON,X2PRAC,SP1,X2DEBTR,SP1,X2SURN;
.
          CALL      REAS0000         * Check if there is patient portion amt
.
.         Check if there is amount for patient portion/reassign debt
.         if no reassign debt, put all payment to health fund outstanding
.
          COMPARE    ZERO,DEBTTYPE
          GOTO       DETL3600 IF EQUAL
.
          IF          PPORTION<>0
            CALL        WAMT0000       * write Patient outstanding amount
          ENDIF
.
DETL3600  COMPARE    ONE,PDBONLY
          GOTO       DETL1000 IF EQUAL      * Patient Debt only
.
          UNPACK    SP70,PATFLAG,DEBTAGEN
          PACK      KEY38,PATFLAG,X2PRAC,X2DEBTR,X2SCAN,DEBTAGEN,X2SDOCT,X2INUMB
          CALL      RDTEMP3                 * record already on file ?
          BRANCH    OVRCD,DETL4000          * no - write new record
          GOTO      DETL1000                * shouldn't get here
.
DETL4000  CALL      WRTEMP3                 * write record
          GOTO      DETL1000                * get next invoice
.
DETL9999  RETURN
+
.*******************************************************************************
.         Check Reassign debt file
.*******************************************************************************
REAS0000  MOVE      ZERO,PPORTION
          MOVE      SP70,DEBTTYPE
          MOVE      SP70,DEBTAGEN
.
          UNPACK    SP70,PATFLAG,DEBTAGEN
          PACK      KEY10,PRINNUMB,Z70
          CALL      RSPRRAS1
          CALL      RPPRRAS1
          BRANCH    OVRCD,REAS9000
.
          MATCH     PRINNUMB,PRRAINVN          * Same invoice number?
          GOTO      REAS9000 IF NOT EQUAL
          MATCH     "1",PRRADELE             * Deleted?
          GOTO      REAS9000 IF EQUAL
.
          MOVE      ONE,DEBTTYPE            * Flag for patient debt
.
.         Check for Debt collector debt
.
          MATCH     SP70,PRRARMOV
          GOTO      REAS2000 IF EQUAL        * No reason for debt movement
.
          PACK      DIM5,TCODE,ACODE,SP70   * Save key for code file
          MOVE      "dm",KEY2
          PACK      KEY5,KEY2,PRRARMOV
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     "D",TCINDC1
            IF        @EQUAL
              MOVE      TWO,DEBTTYPE          * Flag for Debt Collector
              MOVE      PRRADBAG,DEBTAGEN     * Debt Collection Agency
            ENDIF
          ENDIF
          MOVE      DIM5,KEY5
          CALL      RDCODE1                   * Reposition
.
REAS2000  ADD       PRRAPPOR,PPORTION
          GOTO      REAS9999
REAS9000  MOVE      ZERO,PRRAPPOR
.
REAS9999  RETURN
+
.*******************************************************************************
.         Write patient outstanding amount
.*******************************************************************************
WAMT0000  MOVE      PRINITOT,F12P2        * total invoice
          SUB       PPORTION,F12P2        * subtract patient portion
.
.         for Patient debt, subtract patient payment from Outstanding amount
.
          IF        DEBTTYPE=1
            MOVE      PRINPAMT,X1PTPD     * amount patient paid
            MULT      SEQ,X1PTPD
            SUB       X1PTPD,TOTPAID      * total paid by HF
          ENDIF
.
          SUB       TOTPAID,F12P2       * total HF paid
.
.         Set up the Patient outstanding amount
.
          MOVE      PPORTION,X2IOUT       * Patient portion
          SUB       X1PTPD,X2IOUT         * Patient paid
.
          IF        DEBTTYPE=1
            MOVE      "x",PATFLAG         * flag for Patient outstanding record
          ELSE
            IF        DEBTTYPE=2
              MOVE      "y",PATFLAG       * flag for Debt Collection
            ENDIF
          ENDIF
.
          BRANCH    DOPTION,WAMT5000      * full report
.
          PACK      KEY38,PATFLAG,X2PRAC,X2DEBTR,X2SCAN,DEBTAGEN,X2SDOCT,X2INUMB
          CALL      WRTEMP3              * write record
          GOTO      WAMT9000
.
.         Full Report
.
WAMT5000  MOVE      PRINDATE,INVDATE
.
          PACK      KEY20,PATFLAG,X1PRAC,DEBTAGEN,X1DEBTR,X1SCAN,SP70
          CALL      RDTEMP1
          BRANCH    OVRCD,WAMT6000
.
          CALL      CALP0000
          ADD       X2IOUT,X1TOTAL
          CALL      UPTEMP1
.
          GOTO      WAMT9000
.
WAMT6000  MOVE      ZERO,X1CURR
          MOVE      ZERO,X1PER1
          MOVE      ZERO,X1PER2
          MOVE      ZERO,X1PER3
          MOVE      ZERO,X1PER4
          MOVE      ZERO,X1PER5
          MOVE      ZERO,X1PER6
          MOVE      ZERO,X1TOTAL
          CALL      CALP0000
.
          MOVE      X2IOUT,X1TOTAL
          CALL      WRTEMP1                * write record
          GOTO      WAMT9000
.
WAMT9000  MOVE      F12P2,X2IOUT         * restore HF outstanding inv. amount
WAMT9999  RETURN
+
.****************************************************************************
.*                               CALP0000              Called by: FULL0000  *
.*                add invoice amount to correct age period        PATF0000  *
.*                for full report
.****************************************************************************
CALP0000  BRANCH    TOTPER,CALP5000,CALP4000,CALP3000,CALP2000,CALP1000,CALP0500
.
CALP0500  MATCH     INVDATE,DATPER6
          GOTO      CALP1000 IF LESS
          ADD       X2IOUT,X1PER6
          GOTO      CALP9000
.
CALP1000  MATCH     INVDATE,DATPER5
          GOTO      CALP2000 IF LESS
          ADD       X2IOUT,X1PER5
          GOTO      CALP9000
.
CALP2000  MATCH     INVDATE,DATPER4
          GOTO      CALP3000 IF LESS
          ADD       X2IOUT,X1PER4
          GOTO      CALP9000
.
CALP3000  MATCH     INVDATE,DATPER3              * In 90 day period ?
          GOTO      CALP4000 IF LESS             * no - check 60 day
          ADD       X2IOUT,X1PER3                * yes
          GOTO      CALP9000
.
CALP4000  MATCH     INVDATE,DATPER2              * In 60 day period ?
          GOTO      CALP5000 IF LESS             * no - check 30 day
          ADD       X2IOUT,X1PER2                * yes
          GOTO      CALP9000
.
CALP5000  MATCH     INVDATE,DATPER1              * In 30 day period ?
          GOTO      CALP6000 IF LESS             * no - current period
          ADD       X2IOUT,X1PER1                * yes
          GOTO      CALP9000
.
CALP6000  ADD       X2IOUT,X1CURR                * increment current period
.
CALP9000  ADD       X2IOUT,X1TOTAL               * increment total amount
.
CALP9999  RETURN
+
.****************************************************************************
.*                               CONV0000              Called by: ML0000    *
.*              calculate the dates for ageing                              *
.****************************************************************************
CONV0000  MOVE      SP8,DATPER1                  * initialise periods
          MOVE      SP8,DATPER2
          MOVE      SP8,DATPER3
          MOVE      SP8,DATPER4
          MOVE      SP8,DATPER5
          MOVE      SP8,DATPER6
.
          UNPACK    ATDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON                       * convert "as at date" to
.                                                  julian date
          MOVE      JULDAY,JDAYS
          MOVE      JDAYS,SAVDAY                 * save beginning julian date
          MOVE      JULYR,SAVYR
          MOVE      JULCC,SAVCC
.
          COMPARE   ONE,TOTPER                   * see if period in use
          GOTO      CONV9999 IF LESS
          MOVE      PERIOD1,DAYS                 * first user defined period
          ADD       ONE,DAYS
          CALL      CALC0000                     * get date
          PACK      DATPER1,CC,YY,MM,DD
          REP       " 0",DATPER1                  * remove spaces
.
          COMPARE   TWO,TOTPER
          GOTO      CONV9999 IF LESS
          MOVE      SAVDAY,JDAYS
          MOVE      SAVYR,JULYR
          MOVE      SAVCC,JULCC
          MOVE      PERIOD2,DAYS                 * second user defined period
          ADD       ONE,DAYS
          CALL      CALC0000
          PACK      DATPER2,CC,YY,MM,DD
          REP       " 0",DATPER2
.
          COMPARE   THREE,TOTPER
          GOTO      CONV9999 IF LESS
          MOVE      SAVDAY,JDAYS
          MOVE      SAVYR,JULYR
          MOVE      SAVCC,JULCC
          MOVE      PERIOD3,DAYS                 * third user defined period
          ADD       ONE,DAYS
          CALL      CALC0000
          PACK      DATPER3,CC,YY,MM,DD
          REP       " 0",DATPER3
.
          COMPARE   FOUR,TOTPER
          GOTO      CONV9999 IF LESS
          MOVE      SAVDAY,JDAYS
          MOVE      SAVYR,JULYR
          MOVE      SAVCC,JULCC
          MOVE      PERIOD4,DAYS                 * fourth user defined period
          ADD       ONE,DAYS
          CALL      CALC0000
          PACK      DATPER4,CC,YY,MM,DD
          REP       " 0",DATPER4
.
          COMPARE   FIVE,TOTPER
          GOTO      CONV9999 IF LESS
          MOVE      SAVDAY,JDAYS
          MOVE      SAVYR,JULYR
          MOVE      SAVCC,JULCC
          MOVE      PERIOD5,DAYS            * fifth user defined period
          ADD       ONE,DAYS
          CALL      CALC0000
          PACK      DATPER5,CC,YY,MM,DD
          REP       " 0",DATPER5
.
          COMPARE   SIX,TOTPER
          GOTO      CONV9999 IF LESS
          MOVE      SAVDAY,JDAYS
          MOVE      SAVYR,JULYR
          MOVE      SAVCC,JULCC
          MOVE      PERIOD6,DAYS            * sixth user defined period
          ADD       ONE,DAYS
          CALL      CALC0000
          PACK      DATPER6,CC,YY,MM,DD
          REP       " 0",DATPER6
.
CONV9999  RETURN
+
.****************************************************************************
.*                              CALC0000               Called by: CONV0000  *
.*              calculate the aged date for each period defined             *
.*          N.B. JDAYS used instead of JULDAY to cater for a form4 figure   *
.*          when handling 2 year aged date range                            *
.****************************************************************************
CALC0000  SUB       DAYS,JDAYS              * subtract number of days
.
          COMPARE   JDAYS,ZERO              * date from previous year ?
          GOTO      CALC1500 IF LESS        * no
.
CALC1000  ADD       "365",JDAYS             * calculate last year day
.
          COMPARE   ZERO,JULYR
          IF        @EQUAL
            MOVE      "99",JULYR
            SUB       ONE,JULCC
          ELSE
            SUB       ONE,JULYR               * last year
          ENDIF
.
          COMPARE   ONE,JDAYS               * date from previous year ?
          GOTO      CALC1000 IF LESS        * no
.
          COMPARE   JULYR,SEQ               * date from previous century ?
          IF        @LESS
.
.            See if previous year was a leap year.  If so add another day
.            to the julian day
.
             MOVE      JULYR,FORM2
             DIV       FOUR,FORM2
             MULT      FOUR,FORM2           * leap year ?
             COMPARE   JULYR,FORM2
             IF        @EQUAL
                ADD       ONE,JDAYS         * yes 
             ENDIF
.
          ENDIF
.
CALC1500  MOVE      JDAYS,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON                  * convert back to calender
.                                             format
CALC9999  RETURN
+
.****************************************************************************
.*                                INIP0000             Called by: PRNF0000  *
.*                      initialise print variables                PRND0000  *
.****************************************************************************
INIP0000  MOVE      ZERO,CPAGENO
          MOVE      ONE,CNOUNDLN
          MOVE      SEVENTY,CLNO
          LOAD      CPHDROPT,COPTION,DETSEQ,NAMSEQ
          MOVE      ZERO,DEBTFLAG
          MOVE      SP70,SAVMPRAC
INIP9999  RETURN
+
.****************************************************************************
.*                               PRNF0000              Called by: ML0000    *
.*         print the records processed for a full report                    *
.****************************************************************************
PRNF0000  DISPLAY   *P1:24,*EL,"Printing :";
.
          CALL      INIP0000                * initialise print variables
          MOVE      ZERO,GTTPER1
          MOVE      ZERO,GTTPER2
          MOVE      ZERO,GTTPER3
          MOVE      ZERO,GTTPER4
          MOVE      ZERO,GTTPER5
          MOVE      ZERO,GTTPER6
          MOVE      ZERO,GTTCURR
          MOVE      ZERO,GTTPAID
          MOVE      ZERO,GTTTOTL
.
          MOVE      ZERO,DTCURR
          MOVE      ZERO,DTPER1
          MOVE      ZERO,DTPER2
          MOVE      ZERO,DTPER3
          MOVE      ZERO,DTPER4
          MOVE      ZERO,DTPER5
          MOVE      ZERO,DTPER6
          MOVE      ZERO,DTTOTL
.
          PACK      KEY20,SP30
          PACK      KEY40,SP30,SP20
.
          BRANCH    PASSFLAG,PRNF9930,PRNF9940
.
PRNF0200  MOVE      ZERO,TOTPAID            * initialise grand totals
          MOVE      ZERO,TOTCURR
          MOVE      ZERO,TOTPER1
          MOVE      ZERO,TOTPER2
          MOVE      ZERO,TOTPER3
          MOVE      ZERO,TOTPER4
          MOVE      ZERO,TOTPER5
          MOVE      ZERO,TOTPER6
          MOVE      ZERO,TOTPTPD
          MOVE      ZERO,GRANDTOT
.
          MOVE      ZERO,MPPAID             * initialise M.P. totals
          MOVE      ZERO,MPPTPD
          MOVE      ZERO,MPCURR
          MOVE      ZERO,MPPER1
          MOVE      ZERO,MPPER2
          MOVE      ZERO,MPPER3
          MOVE      ZERO,MPPER4
          MOVE      ZERO,MPPER5
          MOVE      ZERO,MPPER6
          MOVE      ZERO,MPPTPD
          MOVE      ZERO,MPTOTAL
          MOVE      SP70,SAVAGEN
.
          COMPARE   ONE,COPTION             * by debtor number ?
          IF        @EQUAL
             CALL      RSTEMP1              * position at start of file
             CALL      RKTEMP1              * read next record
          ELSE
             CALL      RSTEMP2
             CALL      RKTEMP2
          ENDIF
          BRANCH    OVRCD,PRNF9700          * no records on file - finish
.
          CALL      VDEB0000                * validate debtor selection
          BRANCH    EXIT,PRNF3000
.
          MOVE      X1PRAC,MPRAC            * save current medical practice
.
          COMPARE   FIFTY3,CLNO
          CALL      HEAD0000 IF NOT LESS
.
PRNF1000  DISPLAY   *P12:24,*EL,*V2LON,X1PRAC,SP1,X1DEBTR,SP1,X1SURN;
.
.         See if debt in dollar value range
.
          COMPARE   MINDEBT,X1TOTAL         * Debt < minimum ?
          GOTO      PRNF3000 IF LESS        * yes - ignore
.
          COMPARE   X1TOTAL,MAXDEBT         * Debt > maximum ?
          GOTO      PRNF3000 IF LESS        * yes - ignore
.
          MATCH     X1PRAC,MPRAC            * same practice ?
          IF        @EQUAL
             GOTO      PRNF2000             * yes
          ELSE
             CALL      ENDP0000             * display MP total
             COMPARE   ONE,SEPFLAG          * separate pages for M.P.'s
             IF        @EQUAL
                CALL      HEAD0000          * yes - go to new page
             ELSE
                COMPARE   FIFTY3,CLNO
                IF        @LESS
                   PRINT     *N,*N,*1,"Medical Practice : ";
                   MOVE      SP30,PRPRDESC
                   MOVE      X1PRAC,KEY6
                   CALL      RDPRPR1
                   PRINT     *20,X1PRAC,*30,PRPRDESC
                   PRINT     *1,"---------",*11,"--------------------------":
                             *38,HEADUND
                   ADD       FOUR,CLNO
                ELSE
                   CALL      HEAD0000
                ENDIF
             ENDIF 
          ENDIF
.
PRNF2000  ADD       X1PAID,MPPAID           * update practice totals
          ADD       X1CURR,MPCURR
          ADD       X1PER1,MPPER1
          ADD       X1PER2,MPPER2
          ADD       X1PER3,MPPER3
          ADD       X1PER4,MPPER4
          ADD       X1PER5,MPPER5
          ADD       X1PER6,MPPER6
          ADD       X1PTPD,MPPTPD
.
          COMPARE   ZERO,TOTLFLAG           * not printing totals only
          IF        @EQUAL
             CALL      DISF0000             * print debtor record
          ENDIF
.
          IF        PASSFLAG=2
            ADD       X1CURR,DTCURR
            ADD       X1PER1,DTPER1
            ADD       X1PER2,DTPER2
            ADD       X1PER3,DTPER3
            ADD       X1PER4,DTPER4
            ADD       X1PER5,DTPER5
            ADD       X1PER6,DTPER6
            ADD       X1TOTAL,DTTOTL
.
            MOVE      DEBTAGEN,SAVAGEN
            MOVE      ZERO,DEBTFLAG
          ENDIF
.
PRNF3000  COMPARE   COPTION,ONE             * by debtor number ?
          IF        @EQUAL
             CALL      RKTEMP1              * yes - read next record
          ELSE
             CALL      RKTEMP2              * no - read next record
          ENDIF
          BRANCH    OVRCD,PRNF9500          * end of file - finish
.
          CALL      VDEB0000                * validate debtor selection
          BRANCH    EXIT,PRNF3000
.
          GOTO      PRNF1000                * print record
.
PRNF9500  COMPARE   SEVENTY,CLNO
          GOTO      PRNF9920 IF EQUAL
.
          CALL      ENDP0000                * print end of practice total
.
          ADD       TOTCURR,GRANDTOT        * calculate grand totals
          ADD       TOTPER1,GRANDTOT
          ADD       TOTPER2,GRANDTOT
          ADD       TOTPER3,GRANDTOT
          ADD       TOTPER4,GRANDTOT
          ADD       TOTPER5,GRANDTOT
          ADD       TOTPER6,GRANDTOT
.
PRNF9700  COMPARE   SEVENTY,CLNO
          GOTO      PRNF9920 IF EQUAL
.
          PRINT     *1,"------------------------------------",*38,HEADUND
.
          IF        PASSFLAG=1
            PRINT     *1,"Total for PATIENT DEBTORS";
          ELSE
            IF        PASSFLAG=2
              PRINT     *1,"Total for DEBT COLLECTION";
            ELSE
              PRINT     *1,"Total for HEALTH FUND";
            ENDIF
          ENDIF
.
          MOVE      "38",CCOL
          COMPARE   PRCNPAID,ONE
          IF        @EQUAL
            MOVE       ZERO,FORM82
            IF         PASSFLAG=1
              PRINT      *CCOL,TOTPTPD;          * printing patient paid
              ADD        TOTPTPD,GTTPAID         * update grand GTTals
            ELSE
              IF         PASSFLAG=2
                PRINT      *CCOL,FORM82;
              ELSE
                MOVE       TOTPAID,FORM82
                SUB        TOTPTPD,FORM82       * HF/Insurance paid
                ADD        FORM82,GTTPAID       * update grand GTTals
                PRINT      *CCOL,FORM82;
              ENDIF
            ENDIF
            ADD        TEN2,CCOL
          ENDIF
.
          PRINT     *CCOL,TOTCURR;
.
          ADD       TOTCURR,GTTCURR
          ADD       TOTPER1,GTTPER1
          ADD       TOTPER2,GTTPER2
          ADD       TOTPER3,GTTPER3
          ADD       TOTPER4,GTTPER4
          ADD       TOTPER5,GTTPER5
          ADD       TOTPER6,GTTPER6
.
          MOVE      ZERO,FORM1
PRNF9800  ADD       ONE,FORM1
          COMPARE   FORM1,TOTPER
          GOTO      PRNF9900 IF LESS
.
          ADD       TEN2,CCOL
          LOAD      TMPAMT,FORM1,TOTPER1,TOTPER2,TOTPER3,TOTPER4,TOTPER5,TOTPER6
          PRINT     *CCOL,TMPAMT;
          GOTO      PRNF9800
.
PRNF9900  ADD       TEN2,CCOL
          PRINT     *CCOL,GRANDTOT,*N:
                    *1,"------------------------------------",*38,HEADUND
.
          ADD       ONE,CLNO
.
.         PDBONLY =0 print all Debt
.         PDBONLY =1 print all Patient Debt only
.         PDBONLY =2 print all Debt Collection Debt only
.
PRNF9920  COMPARE   ZERO,PDBONLY
          GOTO      PRNF9960 IF NOT EQUAL     * Not printing All
.
.        Printing next section of report
.           First section - HF Invoice
.           Second section - Patient Debtor invoice
.           Third section - Debt Collection debt invoice
.
          BRANCH    PASSFLAG,PRNF9940,PRNF9960
.
PRNF9930  MOVE      ONE,PASSFLAG           * Processing Patient Outstanding Amt
          MOVE      SEVENTY,CLNO
          MOVE      "x",PATFLAG
          IF        COPTION =1
            PACK      KEY20,PATFLAG,SP70
          ELSE
            PACK      KEY40,PATFLAG,SP70
          ENDIF
          GOTO      PRNF0200
.
PRNF9940  MOVE      TWO,PASSFLAG           * Processing Debt collector debt Amt
          MOVE      SEVENTY,CLNO
          MOVE      "y",PATFLAG
          IF        COPTION =1
            PACK      KEY20,PATFLAG,SP70
          ELSE
            PACK      KEY40,PATFLAG,SP70
          ENDIF
          GOTO      PRNF0200
.
PRNF9960  BRANCH    PDBONLY,PRNF9980,PRNF9980 * print pat/collector O/S amt only
.
          CALL      TTSTD000               * Print Grand total
.
PRNF9980  PRINT     *N,*N,"***  End of Report  ***"
.
PRNF9999  RETURN
+
*******************************************************************************
.       Print Grand total for HEA ATB
.*******************************************************************************
TTSTD000  IF        CLNO<>70
            COMPARE   "56" TO CLNO
            CALL      HEAD0000 IF NOT LESS
          ENDIF
.
          PRINT     *N;
.
          BRANCH    DOPTION TO TTSTD200
.
          CALL      LINE0000
          PRINT     *1,PIPE,*2,"Overall Total :",*80,PIPE,*81,GTTTOTL,*92,PIPE:
                    *132,PIPE
.
          CALL      LINE0000
.
          GOTO      TTSTD9999
.
.         Full report
.
TTSTD200  MOVE      ZERO,GTTTOTL
          ADD       GTTCURR,GTTTOTL
          ADD       GTTPER1,GTTTOTL
          ADD       GTTPER2,GTTTOTL
          ADD       GTTPER3,GTTTOTL
          ADD       GTTPER4,GTTTOTL
          ADD       GTTPER5,GTTTOTL
          ADD       GTTPER6,GTTTOTL
.
          PRINT     *1,"Overall Total";
.
          MOVE      "38",CCOL
          COMPARE   PRCNPAID,ONE
          IF        @EQUAL
             PRINT     *CCOL,GTTPAID;
             ADD       TEN2,CCOL
          ENDIF
.
          PRINT     *CCOL,GTTCURR;
.
          MOVE      ZERO,FORM1
TTSTD210  ADD       ONE,FORM1
          COMPARE   FORM1,TOTPER
          GOTO      TTSTD220 IF LESS
.
          ADD       TEN2,CCOL
          LOAD      TMPAMT,FORM1,GTTPER1,GTTPER2,GTTPER3,GTTPER4,GTTPER5,GTTPER6
          PRINT     *CCOL,TMPAMT;
          GOTO      TTSTD210
.
TTSTD220  ADD       TEN2,CCOL
          PRINT     *CCOL,GTTTOTL,*N:
                    *1,"------------------------------------",*38,HEADUND
.
TTSTD999  RETURN
+
.*******************************************************************************
.         validate the debtor selection
.*******************************************************************************
VDEB0000  MOVE      ZERO,EXIT
          IF         PASSFLAG=1
            MATCH      "x",PATFLAG
            GOTO       VDEB9000 IF NOT EQUAL         * Not a Patient O/S amt
          ELSE
            IF         PASSFLAG=2
              MATCH      "y",PATFLAG
              GOTO       VDEB9000 IF NOT EQUAL   * Not a debt collection debt
              MATCH      SP70,SAVAGEN
              IF         !@EQUAL
                MATCH      DEBTAGEN,SAVAGEN
                CALL       AGENT00 IF NOT EQUAL
              ENDIF
            ELSE
              MATCH      SP70,PATFLAG
              GOTO       VDEB9000 IF NOT EQUAL         * Not a HF O/S amt
            ENDIF
          ENDIF
          GOTO      VDEB9999
.
VDEB9000  MOVE      ONE,EXIT
VDEB9999  RETURN
+
.*******************************************************************************
.         Print Debt Agency Total
.*******************************************************************************
AGENT00   MOVE      SP70,TDESC
          MATCH     SP70,SAVAGEN
          GOTO      AGENT90 IF EQUAL

          BRANCH    DEBTFLAG,AGENT90
.
          MOVE      ONE,DEBTFLAG
          MOVE      "dc",KEY2
          PACK      KEY5,KEY2,SAVAGEN
          CALL      RDCODE1
.
          BRANCH    DOPTION TO AGENT10           * full report
.
          CALL      LINE0000
          PRINT     *1," *** Total (",TDESC,")";
          PRINT     *80,PIPE,*81,DTTOTL,*92,PIPE:
                    *132,PIPE
          CALL      LINE0000
          GOTO      AGENT90
.
AGENT10   IF        TOTLFLAG=0
            PRINT     *1,"------------------------------------",*38,HEADUND
          ENDIF
.
          PRINT     *1," *** Total (",TDESC,")";
          MOVE      "38",CCOL
          COMPARE   ONE,PRCNPAID                 * printing 'paid' column
          IF        @EQUAL
             ADD       TEN2,CCOL
          ENDIF
          PRINT     *CCOL,DTCURR;
.
          MOVE      ZERO,FORM1
AGENT20   ADD       ONE,FORM1
          COMPARE   FORM1,TOTPER
          GOTO      AGENT30 IF LESS
.
          ADD       TEN2,CCOL
          LOAD      TMPAMT,FORM1,DTPER1,DTPER2,DTPER3,DTPER4,DTPER5,DTPER6
          PRINT     *CCOL,TMPAMT;

          GOTO      AGENT20
.
AGENT30   ADD       TEN2,CCOL
          PRINT     *CCOL,DTTOTL
          ADD       ONE,CLNO                     * increment line count
.
          PRINT      *1,"------------------------------------",*38,HEADUND
.
AGENT90   MOVE      ZERO,DTCURR
          MOVE      ZERO,DTPER1
          MOVE      ZERO,DTPER2
          MOVE      ZERO,DTPER3
          MOVE      ZERO,DTPER4
          MOVE      ZERO,DTPER5
          MOVE      ZERO,DTPER6
          MOVE      ZERO,DTTOTL
.
AGENT99   RETURN
+
.****************************************************************************
.*                            PRND0000                 Called by: ML0000    *
.*        print the records processed for a detailed report                 *
.****************************************************************************
PRND0000  DISPLAY   *P1:24,*EL,"Printing :";
.
          CALL      INIP0000                * initialise print variables
          MOVE      ZERO,GTTTOTL
          MOVE      ZERO,DTTOTL
.
          PACK      KEY38,SP70
          PACK      KEY58,SP30,SP30
.
          BRANCH    PASSFLAG,PRND9930,PRND9940
.
PRND0200  MOVE      ZERO,PTELFLAG
          MOVE      ZERO,BTELFLAG
          MOVE      ZERO,DBTOUT
          MOVE      ZERO,MPTOTAL
          MOVE      ZERO,DTTOTL
          MOVE      ONE,DBTFLAG
          MOVE      ONE,DOCFLAG
          MOVE      ZERO,GRANDTOT
          MOVE      SP70,SAVAGEN
.
          COMPARE   ONE,COPTION             * by debtor number ?
          IF        @EQUAL
             CALL      RSTEMP3              * position at start of file
             CALL      RKTEMP3              * read next record
          ELSE
             CALL      RSTEMP4
             CALL      RKTEMP4
          ENDIF
          BRANCH    OVRCD,PRND9700          * end of file - finish
.
          CALL      VDEB0000                * validate debtor selection
          BRANCH    EXIT,PRND5000
.
          COMPARE   FIFTY3,CLNO
          CALL      HEAD0000 IF NOT LESS
.
          MOVE      X2PRAC,MPRAC            * save current medical practice
          MOVE      X2DEBTR,VDEBTOR         * save current debtor
          MOVE      X2SCAN,VSCANPMI         * save current scan flag
          MOVE      X2BTELE,BPHONE          * save bus. phone #
          MOVE      X2SDOCT,SAVDOCT         * save doctor code
.
PRND1000  DISPLAY   *P12:24,*EL,*V2LON,X2PRAC,SP1,X2DEBTR,SP1,X2SURN;
.
          MATCH     VDEBTOR,X2DEBTR         * same debtor number ?
          IF        @EQUAL
             GOTO      PRND1500             * yes
          ELSE
             CALL      ENDD0000             * print debtor total
             GOTO      PRND2000
          ENDIF
.
PRND1500  COMPARE   VSCANPMI,X2SCAN         * same scan flag ?
          IF        @EQUAL
             GOTO      PRND2000             * yes
          ELSE
             CALL      ENDD0000             * print debtor total
          ENDIF
.
PRND2000  MATCH     X2PRAC,MPRAC            * same practice ?
          IF        @EQUAL
             GOTO      PRND3000             * yes
          ELSE
             CALL      ENDM0000             * no - print end totals
             COMPARE   SEPFLAG,ONE          * separate pages for MP's
             IF        @EQUAL
                CALL      HEAD0000
             ELSE
                COMPARE   FIFTY3,CLNO
                IF        @LESS
                   PRINT     *N,*N,*1,"Medical Practice : ";
                   MOVE      SP30,PRPRDESC
                   MOVE      X2PRAC,KEY6
                   CALL      RDPRPR1
                   PRINT     *20,X2PRAC,*30,PRPRDESC
                   CALL      LINE0000
                   ADD       FOUR,CLNO
                ELSE
                   CALL      HEAD0000
                ENDIF
             ENDIF
             GOTO      PRND4000
          ENDIF
.
PRND3000  MATCH     SAVDOCT,X2SDOCT         * same doctor ?
          GOTO      PRND4000 IF EQUAL       * yes
          MOVE      ONE,DOCFLAG             * no
          MOVE      X2SDOCT,SAVDOCT         * save new doctor code
.
PRND4000  ADD       X2IOUT,DBTOUT           * update debtor total
          ADD       X2IOUT,MPTOTAL 
          ADD       X2IOUT,DTTOTL
.
          COMPARE   ZERO,TOTLFLAG           * print totals only ?
          IF        @EQUAL
             CALL      DISD0000             * no - so print record
          ENDIF
          IF        PASSFLAG=2
            MOVE      DEBTAGEN,SAVAGEN
            MOVE      ZERO,DEBTFLAG
          ENDIF
.
PRND5000  COMPARE   COPTION,ONE             * by debtor number ?
          IF        @EQUAL
             CALL      RKTEMP3              * yes - read next record
          ELSE
             CALL      RKTEMP4              * no - read next record
          ENDIF
          BRANCH    OVRCD,PRND9500          * end of file - finish
.
          CALL      VDEB0000                * validate debtor selection
          BRANCH    EXIT,PRND5000
.
          GOTO      PRND1000                * get next record
.
PRND9500  COMPARE   SEVENTY,CLNO
          GOTO      PRND9920 IF EQUAL
.
          CALL      ENDD0000                * print debtor total
          CALL      ENDM0000                * print practice total
.
PRND9700  COMPARE   SEVENTY,CLNO
          GOTO      PRND9920 IF EQUAL
.
          IF        PASSFLAG=1
            PRINT     *1,PIPE,*2,"Total for PATIENT DEBTORS";
          ELSE
            IF        PASSFLAG=2
              PRINT     *1,"Total for DEBT COLLECTION";
            ELSE
              PRINT     *1,"Total for HEALTH FUND";
            ENDIF
          ENDIF
.
          PRINT     *80,PIPE,*81,GRANDTOT,*92,PIPE:
                    *132,PIPE
.
          CALL      LINE0000
.
.         PDBONLY =0 print all Debt
.         PDBONLY =1 print all Patient Debt only
.         PDBONLY =2 print all Debt Collection Debt only
.
PRND9920  COMPARE   ZERO,PDBONLY
          GOTO      PRND9960 IF NOT EQUAL     * Not printing All
.
.        Printing next section of report
.           First section - HF Invoice
.           Second section - Patient Debtor invoice
.           Third section - Debt Collection debt invoice
.
          BRANCH    PASSFLAG,PRND9940,PRND9960
.
PRND9930  MOVE      ONE,PASSFLAG           * Processing Patient Outstanding Amt
          MOVE      SEVENTY,CLNO
          MOVE      "x",PATFLAG
          IF        COPTION =1
            PACK      KEY38,PATFLAG,SP70
          ELSE
            PACK      KEY58,PATFLAG,SP70
          ENDIF
          GOTO      PRND0200
.
PRND9940  MOVE      TWO,PASSFLAG           * Processing Debt collector debt Amt
          MOVE      SEVENTY,CLNO
          MOVE      "y",PATFLAG
          IF        COPTION =1
            PACK      KEY38,PATFLAG,SP70
          ELSE
            PACK      KEY58,PATFLAG,SP70
          ENDIF
          GOTO      PRND0200
.
PRND9960  BRANCH    PDBONLY,PRND9980,PRND9980 * print pat/collector O/S amt only
.
          CALL      TTSTD000               * Print Grand total
.
PRND9980  PRINT     *N,*N,"***  End of Report  ***"
.
PRND9999  RETURN
+
.****************************************************************************
.*                            ENDP0000                 Called by: PRNF0000  *
.*                display totals for practice in full report                *
.****************************************************************************
ENDP0000  IF        PASSFLAG=2
            CALL      AGENT00
          ENDIF
.
          COMPARE   ZERO,SEPFLAG
          IF        @EQUAL
             COMPARE   FIFTY3,CLNO            * page full ?
             IF        !@LESS
               MOVE      X1PRAC,SAVMPRAC      * Save current medical practice
               MOVE      MPRAC,X1PRAC         * Override for new heading
               CALL      HEAD0000             * yes
               MOVE      SAVMPRAC,X1PRAC      * restore current medical practice
             ENDIF
          ENDIF
.
          MOVE      MPCURR,MPTOTAL               * get practice grand total
          ADD       MPPER1,MPTOTAL
          ADD       MPPER2,MPTOTAL
          ADD       MPPER3,MPTOTAL
          ADD       MPPER4,MPTOTAL
          ADD       MPPER5,MPTOTAL
          ADD       MPPER6,MPTOTAL
.
          BRANCH    TOTLFLAG,ENDP1000            * printing totals only
.
          BRANCH    DEBTFLAG,ENDP1000
.
          PRINT     *1,"------------------------------------",*38,HEADUND
.
ENDP1000  PRINT     *1,"Total for Medical Practice ";
.
          MOVE      "38",CCOL
          COMPARE   ONE,PRCNPAID
          IF        @EQUAL
            MOVE       ZERO,FORM82
            IF         PASSFLAG=1
              PRINT      *CCOL,MPPTPD;        * printing patient paid
              ADD         MPPTPD,TOTPAID      * update grand totals
              ADD         MPPTPD,TOTPTPD;     * update overall totals
            ELSE
              IF         PASSFLAG=2
                PRINT      *CCOL,FORM82;
              ELSE
                MOVE       MPPAID,FORM82
                SUB        MPPTPD,FORM82       * HF/Insurance paid
                ADD        FORM82,TOTPAID      * update grand totals
                PRINT      *CCOL,FORM82;
              ENDIF
            ENDIF
            ADD       TEN2,CCOL
          ENDIF
          PRINT     *CCOL,MPCURR;
.
          MOVE      ZERO,FORM1
ENDP2000  ADD       ONE,FORM1
          COMPARE   FORM1,TOTPER
          GOTO      ENDP3000 IF LESS
.
          ADD       TEN2,CCOL
          LOAD      TMPAMT,FORM1,MPPER1,MPPER2,MPPER3,MPPER4,MPPER5,MPPER6
          PRINT     *CCOL,TMPAMT;
          GOTO      ENDP2000
.
ENDP3000  ADD       TEN2,CCOL
          PRINT     *CCOL,MPTOTAL,*N:
                    *1,"------------------------------------",*38,HEADUND
.
          ADD       MPCURR,TOTCURR
          ADD       MPPER1,TOTPER1
          ADD       MPPER2,TOTPER2
          ADD       MPPER3,TOTPER3
          ADD       MPPER4,TOTPER4
          ADD       MPPER5,TOTPER5
          ADD       MPPER6,TOTPER6
.
          MOVE      ZERO,MPPAID                  * re-initialise practice totals
          MOVE      ZERO,MPPTPD
          MOVE      ZERO,MPCURR
          MOVE      ZERO,MPPER1
          MOVE      ZERO,MPPER2
          MOVE      ZERO,MPPER3
          MOVE      ZERO,MPPER4
          MOVE      ZERO,MPPER5
          MOVE      ZERO,MPPER6
          MOVE      ZERO,MPTOTAL
.
          MOVE      X1PRAC,MPRAC                 * save new practice code
          ADD       THREE,CLNO
.
ENDP9999  RETURN
+
*****************************************************************************
.*                            ENDD0000                 Called by: PRND0000  *
.*     new debtor for detailed report, so print totals for previous debtor  * 
.**************************************************************************** 
ENDD0000  BRANCH    TOTLFLAG,ENDD2000           * print totals only
.
          BRANCH    BTELFLAG,ENDD1000           * bus. phone already printed
.
          PRINT     *1,PIPE,*8,PIPE,*18,PIPE,*45,PIPE,*46,ANSB,COLON,BPHONE:
                    *60,PIPE,*69,PIPE,*80,PIPE,*92,PIPE,*116,PIPE,*121,PIPE:
                    *132,PIPE
          ADD       ONE,CLNO
.
ENDD1000  CALL      LINE0000
.
.         COMPARE   FIFTY3,CLNO                 * page full ?
.         CALL      HEAD0000 IF NOT LESS        * yes
.
          PRINT     *1,PIPE,*9,"Total for Debtor",*27,VDEBTOR,COLON,*80,PIPE:
                    *81,DBTOUT,*92,PIPE,*132,PIPE
          CALL      LINE0000 
.
          ADD       THREE,CLNO
.  
ENDD2000  MOVE      X2DEBTR,VDEBTOR 
          MOVE      X2SCAN,VSCANPMI
          MOVE      X2SDOCT,SAVDOCT
          MOVE      ZERO,DBTOUT 
          MOVE      ZERO,PTELFLAG
          MOVE      ZERO,BTELFLAG
          MOVE      X2BTELE,BPHONE
          MOVE      ONE,DBTFLAG
          MOVE      ONE,DOCFLAG
.  
ENDD9999  RETURN 
+ 
.****************************************************************************
.*                              ENDM0000               Called by: PRND0000  *
.*  new practice in detailed report, so print previous practice details     *
.****************************************************************************
ENDM0000  IF        PASSFLAG=2
            CALL      AGENT00
          ENDIF
.
          BRANCH    DEBTFLAG,ENDM1000
.
          CALL      LINE0000
          ADD       ONE,CLNO
.
ENDM1000  PRINT     *1,PIPE,*2,"Total for Medical Practice ",MPRAC,COLON,*80:
                    PIPE,*81,MPTOTAL,*92,PIPE,*132,PIPE
          CALL      LINE0000
          ADD       TWO,CLNO
.
          ADD       MPTOTAL,GTTTOTL              * Total
          ADD       MPTOTAL,GRANDTOT             * increment grand total
          MOVE      ZERO,MPTOTAL                 * initialise practice total
          MOVE      X2PRAC,MPRAC
.
ENDM9999  RETURN
+
.****************************************************************************
.*                            DISF0000                 Called by: PRNF0000  *
.*         valid record for full report, so print it                        *
.****************************************************************************
DISF0000  COMPARE   FIFTY3,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          MOVE      X1SURN,PACSNAME              * format debtor name
          MOVE      X1GIVEN,PACGNAME
          MOVE      SP4,PACTITLE
          CALL      PACNAME
          MOVE      PACFNAME,FMTNAME
.
.         Format debtor number
.
          COMPARE   ONE,X1SCAN
          IF        @EQUAL
             PACK      FMTNUMB,ANSP,X1DEBTR      * yes
          ELSE
             PACK      FMTNUMB,SP1,X1DEBTR       * no
          ENDIF
          PRINT     *1,FMTNUMB,*11,FMTNAME;
.
          MOVE      "38",CCOL
          COMPARE   ONE,PRCNPAID                 * printing 'paid' column
          IF        @EQUAL
            MOVE       ZERO,FORM82
            IF         PASSFLAG=1
             PRINT       *CCOL,X1PTPD;             * printing patient paid
            ELSE
              IF         PASSFLAG=2
                PRINT      *CCOL,FORM82;
              ELSE
                MOVE       X1PAID,FORM82
                SUB        X1PTPD,FORM82       * HF/Insurance paid
                PRINT      *CCOL,FORM82;
              ENDIF
            ENDIF
            ADD        TEN2,CCOL
          ENDIF
          PRINT     *CCOL,X1CURR;                * current amt. always printed
.
          MOVE      ZERO,FORM1
DISF9000  ADD       ONE,FORM1
          COMPARE   FORM1,TOTPER
          GOTO      DISF9500 IF LESS
.
          ADD       TEN2,CCOL
          LOAD      TMPAMT,FORM1,X1PER1,X1PER2,X1PER3,X1PER4,X1PER5,X1PER6
          PRINT     *CCOL,TMPAMT;
          GOTO      DISF9000
.
DISF9500  ADD       TEN2,CCOL
          PRINT     *CCOL,X1TOTAL
          ADD       ONE,CLNO                     * increment line count
.
.         If using patient system data, see if any outstanding debts for 
.         this debtor as an inpatient
.
          COMPARE   ONE,X1SCAN                   * PMI patient
          IF        @EQUAL
             COMPARE   ONE,PRCNPSYS
             IF        @EQUAL
                MOVE      X1DEBTR,VDEBTOR
                MOVE      X1SCAN,VSCANPMI
                CALL      PATF0000               * get inpatient ATB details
             ENDIF
          ENDIF
.
DISF9999  RETURN
+
.****************************************************************************
.*                            PATF0000                 Called by: DISF0000  *
.*              get any inpatient ATB details for the current debtor        *
.*              for a full report                                           *
.****************************************************************************
PATF0000  MOVE      ZERO,X1PAID                  * initialise debtor totals
          MOVE      ZERO,X1CURR
          MOVE      ZERO,X1PER1
          MOVE      ZERO,X1PER2
          MOVE      ZERO,X1PER3
          MOVE      ZERO,X1PER4
          MOVE      ZERO,X1PER5
          MOVE      ZERO,X1PER6
          MOVE      ZERO,X1TOTAL
          MOVE      ONE,FOUND                    * no inpatient records found
          MOVE      ZERO,PPORTION
          MOVE      SP70,DEBTTYPE
          MOVE      SP70,DEBTAGEN
.
.         Loop through the visits for this patient
.
          PACK      KEY24,X1DEBTR,SP20
          MOVE      X1DEBTR,FORM8
          CALL      RDSVISA2                     * position in visit file
PATF0500  CALL      RDKVISA2                     * read next record
          BRANCH    OVRCD,PATF5000               * no more records
.
          MOVE      FORM8,KEY8                   * same U/R # ?
          MATCH     KEY8,PVIURNO                 * same U/R # ?
          GOTO      PATF5000 IF NOT EQUAL        * no - finish
.
          COMPARE   THREE,PVITYPE                * inpatient visit ?
          GOTO      PATF0500 IF NOT EQUAL        * no - get next visit
.
.         Get all the invoices for this admission #
.
          MOVE      PVIBILL,PINVADM
          PACK      KEY16,PINVADM,SP20
          CALL      RDSINV3                      * position in invoice file
PATF1000  CALL      RDKINV3                      * read next record
          BRANCH    OVRCD,PATF0500               * no more records on file
.
          MATCH     PINVADM,PVIBILL              * same admission # ?
          GOTO      PATF0500 IF NOT EQUAL        * no - get next visit
.
          COMPARE   PINVSYS,THREE                * inpatient visit ?
          GOTO      PATF1000 IF NOT EQUAL        * no - ignore
.
          MATCH     SCLAIM,PINVCLM               * claim < start claim ?
          GOTO      PATF1000 IF LESS             * yes - ignore
.
          MATCH     PINVCLM,ECLAIM               * claim > end claim ?
          GOTO      PATF1000 IF LESS             * yes - ignore
.
          MATCH     ZEROVISN,PINVADM             * cancelled invoice ?
          GOTO      PATF1000 IF EQUAL            * yes - ignore
.
.         Check for a valid invoice date
.
          MOVE      PINVDTE,INVDATE
          MATCH     INVDATE,ATDATE               * invoice after cut-off date ?
          GOTO      PATF1000 IF LESS             * yes
.
          REP       " 0",PINVBLCD
.
          MATCH     PINVBLCD,ATDATE              * "as at date" < balance date ?
          GOTO      PATF1000 IF NOT LESS         * no - get next invoice
.
.         Determine if this invoice is fully paid or not
.
          DISPLAY   *P12:24,*EL,*V2LON,PINVUR;
          MOVE      ZERO,TOTPAID
.
.         Loop over the DTRAN file
.
          PACK      KEY22,PINVADM,PINVNO,SP6
          CALL      RDSDTRN1                     * position in DTR file
PATF1500  CALL      RDKDTRN1                     * read next record
          BRANCH    OVRCD,PATF3500               * end of file
.
          MATCH     TREF,PINVNO                  * same invoice # ?
          GOTO      PATF3500 IF NOT EQUAL        * no
.
.         We are only interested in cash and journals
.
          BRANCH    TRECTYPE,PATF1500,PATF1500,PATF1500,PATF1500,PATF2500:
                             PATF2000
.
.         If the Transaction date is used for journals, then treat as cash
.         otherwise use the last modification date as the journal date for
.         determining if the journal was done before or after cutoff date
.
PATF2000  BRANCH    CJRNREP,PATF2500
.
          MOVE      TCHGDTE,TMPDATE
          MATCH     TMPDATE,ATDATE
          GOTO      PATF1500 IF LESS
          GOTO      PATF3000
.
.         Use the transaction date to determine if this transaction was done
.         before or after the cutoff date.
.
PATF2500  PACK      TMPDATE,TFCENT,TFYEAR,TFMONTH,TFDAY
          REP       " 0",TMPDATE
.
          MATCH     TMPDATE,ATDATE
          GOTO      PATF1500 IF LESS
.
.         Valid payment for this report
.
PATF3000  ADD       TPATAMTT,TOTPAID
          IF        IBCNUGST=2 & TRECTYPE=6
            ADD       PTDTGSTM,TOTPAID        * GST Journal
          ENDIF
          GOTO      PATF1500
.
.         Check if valid non-zero balance before writing to temp file
.
PATF3500  CALL      CRED0000                    * check for credit notes
          ADD       FORM12P2,PINVAMT            
.         
          MOVE      PINVAMT,X2IOUT
          ADD       TOTPAID,X2IOUT
.
          COMPARE   ZERO,X2IOUT                  * invoice outstanding ?
          GOTO      PATF1000 IF EQUAL            * no - ignore
.
.         Check the admission record
.
          MOVE      PINVADM,KEY8
          CALL      RDMISS1                      * read admission record
          BRANCH    OVRCD,PATF1000               * not on file
.
          COMPARE   ONE,ASTAT                    * pre-admission ?
          GOTO      PATF1000 IF EQUAL            * yes - ignore
.
          COMPARE   FIVE,ASTAT                   * cancelled admission ?
          GOTO      PATF1000 IF EQUAL            * yes - ignore
.
.         Change sign of paid total if not zero
.
          COMPARE   ZERO,TOTPAID
          GOTO      PATF4000 IF EQUAL
          MULT      SEQ,TOTPAID
.
PATF4000  ADD       TOTPAID,X1PAID
.
.         Add outstanding amount to correct age period
.
          MOVE      PINVDTE,INVDATE
          CALL      CALP0000
          MOVE      ZERO,FOUND                   * record for printing
          GOTO      PATF1000                     * get next invoice
.
.         Print inpatient record if any outstanding debts were found
.
PATF5000  BRANCH    FOUND,PATF9999               * no record for printing
          PRINT     *26,"(Inpatient)";
.
          MOVE      "38",CCOL
          COMPARE   ONE,PRCNPAID                 * printing 'paid' column
          IF        @EQUAL
             PRINT     *CCOL,X1PAID;
             ADD       TEN2,CCOL
          ENDIF
.
          PRINT     *CCOL,X1CURR;                * current amt. always printed
.
.         Print the totals for the relevant user defined periods
.
          MOVE      ZERO,FORM1
PATF9000  ADD       ONE,FORM1
          COMPARE   FORM1,TOTPER
          GOTO      PATF9500 IF LESS
.
          ADD       TEN2,CCOL
          LOAD      TMPAMT,FORM1,X1PER1,X1PER2,X1PER3,X1PER4,X1PER5,X1PER6
          PRINT     *CCOL,TMPAMT;
          GOTO      PATF9000
.
PATF9500  ADD       TEN2,CCOL
          PRINT     *CCOL,X1TOTAL                * print line total
          ADD       ONE,CLNO                     * increment line count
.
PATF9999  RETURN
+
.****************************************************************************
.*                            DISD0000                 Called by: PRND0000  *
.*             valid record for detailed report, so print it                *
.****************************************************************************
DISD0000  COMPARE   FIFTY3,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          MOVE      X2SURN,PACSNAME
          MOVE      X2GIVEN,PACGNAME
          MOVE      SP4,PACTITLE
          CALL      PACNAME
          MOVE      PACFNAME,FMTNAME
.
.         Format debtor number
.
          COMPARE   X2SCAN,ONE                   * PMI debtor ?
          IF        @EQUAL
             PACK      FMTNUMB,ANSP,X2DEBTR      * yes
          ELSE
             PACK      FMTNUMB,SP1,X2DEBTR       * no
          ENDIF
.
          UNPACK    X2IDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          COMPARE   ONE,DOCFLAG                  * print doctor code
          IF        @EQUAL
             UNPACK    X2SDOCT,KEY6
             PRINT     *1,PIPE,*2,KEY6,*8,PIPE;
          ELSE
             PRINT     *1,PIPE,*8,PIPE;
          ENDIF
.
          COMPARE   ONE,DBTFLAG                  * print debtor details
          IF        @EQUAL
             PRINT     *9,FMTNUMB,*18,PIPE,*19,FMTNAME,*45,PIPE;
          ELSE
             PRINT     *18,PIPE,*45,PIPE;
          ENDIF
.
          BRANCH    PTELFLAG,DISD1000            * private phone printed already
          PRINT     *46,ANSH,COLON,X2PTELE;
          MOVE      ONE,PTELFLAG
          GOTO      DISD2000
.
DISD1000  BRANCH    BTELFLAG,DISD2000            * bus. phone printed already
          PRINT     *46,ANSB,COLON,X2BTELE;
          MOVE      ONE,BTELFLAG
.
DISD2000  PRINT     *60,PIPE,*61,X2INUMB,*69,PIPE,*70,CPCDATE,*80,PIPE:
                    *81,X2IOUT,*92,PIPE,*116,PIPE;
.
          COMPARE   X2LCODE,ZERO                 * no letter code on file
          IF        @EQUAL
             PRINT     *121,PIPE,*132,PIPE
          ELSE
             UNPACK    X2LDATE,CCENT,CYEAR,CMON,CDAY
             CALL      PACDATE
             PRINT     *118,X2LCODE,*121,PIPE,*122,CPCDATE,*132,PIPE
          ENDIF
.
          ADD       ONE,CLNO                     * increment line count
          MOVE      ZERO,DBTFLAG
          MOVE      ZERO,DOCFLAG
.
          COMPARE   X2SCAN,ONE                   * PMI debtor
          IF        @EQUAL
             COMPARE   PRCNPSYS,ONE              * using patient system data
             IF        @EQUAL
                CALL      PATD0000               * get patient ATB data
             ENDIF
          ENDIF
.
DISD9999  RETURN
+
.****************************************************************************
.*                            PATD0000                 Called by: DISD0000  *
.*              get any inpatient ATB details for the current debtor        *
.*              for a detailed report                                       *
.****************************************************************************
.
.         Loop through the visits for this patient
.
PATD0000  PACK      KEY24,X2DEBTR,SP20
          MOVE      X2DEBTR,FORM8
          CALL      RDSVISA2                     * position in visit file
PATD0500  CALL      RDKVISA2                     * read next record
          BRANCH    OVRCD,PATD9999               * no more records
.
          MOVE      FORM8,KEY8                   * same U/R # ?
          MATCH     KEY8,PVIURNO                 * same U/R # ?
          GOTO      PATD9999 IF NOT EQUAL        * no - finish
.
          COMPARE   THREE,PVITYPE                * inpatient visit ?
          GOTO      PATD0500 IF NOT EQUAL        * no - get next visit
.
          MOVE      SP3,LETCODE
          MOVE      SP8,LETDATE
          PACK      KEY19,PVIBILL,ZED11
          CALL      RSPTLH1                      * position in file
          CALL      RPPTLH1                      * read previous record
          BRANCH    OVRCD,PATD0700               * end of file
.
          MATCH     PVIBILL,PTLHADMN             * same billing # ?
          GOTO      PATD0700 IF NOT EQUAL        * no
.
          MOVE      PTLHLCOD,LETCODE
          UNPACK    PTLHDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,LETDATE
.
.         Get all the invoices for this admission #
.
PATD0700  MOVE      PVIBILL,SAVADM               * save admission #
.
          MOVE      PVIBILL,PINVADM
          PACK      KEY16,PINVADM,SP20
          CALL      RDSINV3                      * position in invoice file
PATD1000  CALL      RDKINV3                      * read next record
          BRANCH    OVRCD,PATD0500               * no more records on file
.
          MATCH     PINVADM,PVIBILL              * same admission # ?
          GOTO      PATD0500 IF NOT EQUAL        * no - get next visit
.
          PACK      INVDATE,PINVDTE
          MATCH     STRTDATE,INVDATE             * invoice date < start date ?
          GOTO      PATD1000 IF LESS             * yes - ignore
.
.         MATCH     INVDATE,STRTDATE             * invoice date > start date ?
.         GOTO      PATD1000 IF NOT LESS         * no - ignore
.
          MATCH     INVDATE,ENDDATE              * invoice date > end date ?
          GOTO      PATD1000 IF LESS             * yes - ignore
.
          COMPARE   PINVSYS,THREE                * inpatient visit ?
          GOTO      PATD1000 IF NOT EQUAL        * no - ignore
.
          MATCH     SCLAIM,PINVCLM               * claim < start claim ?
          GOTO      PATD1000 IF LESS             * yes - ignore
.
          MATCH     PINVCLM,ECLAIM               * claim > end claim ?
          GOTO      PATD1000 IF LESS             * yes - ignore
.
          MATCH     ZEROVISN,PINVADM             * cancelled invoice ?
          GOTO      PATD1000 IF EQUAL            * yes - ignore
.
.         Check for a valid invoice date
.
          MOVE      PINVDTE,INVDATE
          MATCH     INVDATE,ATDATE               * invoice after cut-off date ?
          GOTO      PATD1000 IF LESS             * yes
.
          REP       " 0",PINVBLCD
.
          MATCH     PINVBLCD,ATDATE              * "as at date" < balance date ?
          GOTO      PATD1000 IF NOT LESS         * no - get next invoice
.
.         Determine if this invoice is fully paid or not
.
          DISPLAY   *P12:24,*EL,*V2LON,PINVUR;
          MOVE      ZERO,TOTPAID
.
.         Loop over the DTRAN file
.
          PACK      KEY22,PINVADM,PINVNO,SP6
          CALL      RDSDTRN1                     * position in DTR file
PATD1500  CALL      RDKDTRN1                     * read next record
          BRANCH    OVRCD,PATD3500               * end of file
.
          MATCH     TREF,PINVNO                  * same invoice # ?
          GOTO      PATD3500 IF NOT EQUAL        * no
.
.         We are only interested in cash and journals
.
          BRANCH    TRECTYPE,PATD1500,PATD1500,PATD1500,PATD1500,PATD2500:
                             PATD2000
.
.         If the Transaction date is used for journals, then treat as cash
.         otherwise use the last modification date as the journal date for
.         determining if the journal was done before or after cutoff date
.
PATD2000  BRANCH    CJRNREP,PATD2500
.
          MOVE      TCHGDTE,TMPDATE
          MATCH     TMPDATE,ATDATE
          GOTO      PATD1500 IF LESS
          GOTO      PATD3000
.
.         Use the transaction date to determine if this transaction was done
.         before or after the cutoff date.
.
PATD2500  PACK      TMPDATE,TFCENT,TFYEAR,TFMONTH,TFDAY
          REP       " 0",TMPDATE
.
          MATCH     TMPDATE,ATDATE
          GOTO      PATD1500 IF LESS
.
.         Valid payment for this report
.
PATD3000  ADD       TPATAMTT,TOTPAID
          IF        IBCNUGST=2 & TRECTYPE=6
            ADD       PTDTGSTM,TOTPAID        * GST Journal
          ENDIF
          GOTO      PATD1500
.
.         Check if valid non-zero balance before writing to temp file
.
PATD3500  CALL      CRED0000                    * check for credit notes
          ADD       FORM12P2,PINVAMT
.
          MOVE      PINVAMT,X2IOUT
          ADD       TOTPAID,X2IOUT
.
          COMPARE   ZERO,X2IOUT                  * invoice outstanding ?
          GOTO      PATD1000 IF EQUAL            * no - ignore
.
.         Check the admission record
.
          MOVE      PINVADM,KEY8
          CALL      RDMISS1                      * read admission record
          BRANCH    OVRCD,PATD1000               * not on file
.
          COMPARE   ONE,ASTAT                    * pre-admission ?
          GOTO      PATD1000 IF EQUAL            * yes - ignore
.
          COMPARE   FIVE,ASTAT                   * cancelled admission ?
          GOTO      PATD1000 IF EQUAL            * yes - ignore
.
.         Get the discharge date
.
          PACK      DISDATE,SP2,SLASH,SP2,SLASH,SP2
          MOVE      AADMNO,KEY8
          CALL      RDDSCH1                      * read discharge record
          BRANCH    OVRCD,PATD3700               * not found
.
          UNPACK    DDATE,XCENT,XYEAR,XMON,XDAY
          PACK      DISDATE,XDAY,SLASH,XMON,SLASH,XYEAR
.
.         Change sign of paid total if not zero
.
PATD3700  COMPARE   ZERO,TOTPAID
          GOTO      PATD4000 IF EQUAL
          MULT      SEQ,TOTPAID
PATD4000  ADD       TOTPAID,X1PAID
.
.         Print inpatient record if any outstanding debts were found
.
          UNPACK    PINVDTE,XCENT,XYEAR,XMON,XDAY
          CALL      PACDATE
          PRINT     *1,PIPE,*8,PIPE,*9,"Inpatient",*18,PIPE,*19,"Adm ##":
                    *25,PINVADM,*32,"Dis.Date",*41,DISDATE,*49,PIPE;
.
          BRANCH    BTELFLAG,PATD5000
.
          PRINT     *46,ANSB,COLON,X2BTELE;
          MOVE      ONE,BTELFLAG
.
PATD5000  PRINT     *60,PIPE,*61,PINVNO,*69,PIPE:
                    *70,CPCDATE,*80,PIPE,*81,X2IOUT,*92,PIPE,*116,PIPE:
                    *118,LETCODE,*121,PIPE,*122,LETDATE,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
          GOTO      PATD1000                     * get next invoice
.
PATD9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PRNF0000  *
.*                       print page heading                       PRND0000  *
.*                                                                ENDP0000  *
.*                                                                ENDD0000  *
.*                                                                DISF0000  *
.*                                                                DISD0000  *
.****************************************************************************
HEAD0000  CALL      HEAD132                      * display page header
.
          PRINT     *40,"Practice Range : ";
.
          MATCH     SP6,SPRAC                    * start practice blank ?
          GOTO      HEAD1000 IF EQUAL            * yes
          PRINT     *57,SPRAC;
          GOTO      HEAD1500
.
HEAD1000  PRINT     *57,START;
.
HEAD1500  PRINT     *64,"to";
.
          MATCH     ZED6,EPRAC                   * end practice blank ?
          GOTO      HEAD2000 IF EQUAL            * yes
          PRINT     *67,EPRAC;
          GOTO      HEAD2500
.
HEAD2000  PRINT     *67,FINISH;
.
HEAD2500  PRINT     *40,"Claim Code Range : ";
.
          MATCH     SP3,SCLAIM                   * start practice blank ?
          GOTO      HEAD3500 IF EQUAL            * yes
          PRINT     *59,SCLAIM;
          GOTO      HEAD4000
.
HEAD3500  PRINT     *59,START;
.
HEAD4000  PRINT     *65,"to";
.
          MATCH     ECLAIM,ZED6                  * end practice blank ?
          GOTO      HEAD4500 IF EQUAL            * yes
          PRINT     *68,ECLAIM
          GOTO      HEAD5000
.
HEAD4500  PRINT     *68,FINISH
.
HEAD5000  PRINT     *40,"Dollar value range :",*61,MINDEBT,*73,"to",*76,MAXDEBT
.
          IF        HOPTION=3 | HOPTION=4
            PRINT     *40,"Health Fund Range :";
            MATCH     SP6,STRTFND
            IF        @EQUAL
              PRINT     *60,START;
            ELSE
              PRINT     *60,STRTFND;
            ENDIF
            PRINT     *67,"to";
            MATCH     Z70,ENDFND
            IF        @EQUAL
              PRINT     *70,FINISH
            ELSE
              PRINT     *70,ENDFND
            ENDIF
          ELSE
            PRINT   *N;
          ENDIF
.
          IF        PASSFLAG=1
            PRINT     *45,"PATIENT DEBTORS OUTSTANDING";
          ELSE
            IF        PASSFLAG=2
              PRINT     *45,"DEBT COLLECTION DEBTORS OUTSTANDING";
            ELSE
              PRINT     *45,"HEALTH FUND OUTSTANDING";
            ENDIF
          ENDIF
.
          UNPACK    ATDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *82,"As at : ",CPCDATE,*100,AGEDESC
.
          PRINT     *1,"Medical Practice : ";
          LOAD      KEY6,DOPTION,X1PRAC,X2PRAC,X2PRAC,X2PRAC,X2PRAC
          CALL      RDPRPR1                      * read practice record
.
          PRINT     *20,KEY6,*30,PRPRDESC
.
          BRANCH    DOPTION,HEAD8000             * full report
.
          CALL      LINE0000
          PRINT     *1,PIPE,*2,"Doctor",*8,PIPE,*10,"Debtor",*18,PIPE:
                    *19,"Patient Name",*45,PIPE,*46,"Telephone",*60,PIPE:
                    *61,"Invoice",*69,PIPE,*72,"Date",*80,PIPE:
                    *81,"Outstanding",*92,PIPE,*94,"Comments",*116,PIPE:
                    *117,"Last",*121,PIPE,*122,"Letter",*132,PIPE,*N:
                    *1,PIPE,*2,"Code",*8,PIPE,*14,"##",*18,PIPE,*45,PIPE:
                    *60,PIPE,*69,PIPE,*80,PIPE,*83,"Amount",*92,PIPE,*116,PIPE:
                    *117,"Code",*121,PIPE,*122,"Sent",*132,PIPE
          CALL      LINE0000
          GOTO      HEAD9000
.
HEAD8000  PRINT     *1,"---------",*11,"--------------------------",*38,HEADUND:
                    *N;
          COMPARE   ZERO,TOTLFLAG                * printing all
          IF        @EQUAL
             PRINT     *1,"Debtor",*11,"Patient Name";
          ENDIF
.
          PRINT     *38,COLHEAD,*N:
                    *1,"---------",*11,"--------------------------",*38,HEADUND
.
HEAD9000  LOAD      CLNO,DOPTION,TEN1,TEN2,TEN2,TEN2,TEN2,TEN2,TEN2,TEN2
          MOVE      ONE,DBTFLAG
          MOVE      ONE,DOCFLAG
.
HEAD9999  RETURN
+
.**************************************************************************
.*                              GETP0000               Called by: ML0000  *
.*           get the total number of periods to be printed and their      *
.*           associated column headings.  These are set up by the user    *
.*           in the control file.                                         *
.**************************************************************************
GETP0000  MOVE      ZERO,FORM1
          MOVE      ZERO,TOTPER
.
GETP1000  ADD       ONE,FORM1
          COMPARE   SEVEN,FORM1
          GOTO      GETP2000 IF NOT LESS
.
          LOAD      FORM3,FORM1,PRCNPER1,PRCNPER2,PRCNPER3,PRCNPER4,PRCNPER5:
                                PRCNPER6
          LOAD      DIM11,FORM1,PRCNNAM1,PRCNNAM2,PRCNNAM3,PRCNNAM4,PRCNNAM5:
                                PRCNNAM6
.
.         Ignore period if number of days is zero
.
          COMPARE   FORM3,ZERO 
          IF        @EQUAL
             GOTO      GETP1000
          ELSE
             ADD       ONE,TOTPER                * increment period total
             STORE     FORM3,TOTPER,PERIOD1,PERIOD2,PERIOD3,PERIOD4,PERIOD5:
                                    PERIOD6
             STORE     DIM11,TOTPER,COLUMN1,COLUMN2,COLUMN3,COLUMN4,COLUMN5:
                                    COLUMN6
             GOTO      GETP1000
          ENDIF
.
.         Format the ATB column header line
.
.         See if 'Paid' column should be included in report
.
GETP2000  CLEAR     COLHEAD
          CLEAR     HEADUND
          COMPARE   ONE,PRCNPAID
          IF        @EQUAL
             MOVE      "       Paid",DIM11
             APPEND    DIM11,COLHEAD
             APPEND    DASH11,HEADUND
             APPEND    SP1,COLHEAD
             APPEND    SP1,HEADUND
          ENDIF
.
.         'Current' column always used
.
          MOVE      "    Current",DIM11
          APPEND    DIM11,COLHEAD
          APPEND    DASH11,HEADUND
          APPEND    SP1,COLHEAD
          APPEND    SP1,HEADUND
.
.         Load user defined period headings
.
          MOVE      ZERO,FORM1
GETP3000  ADD       ONE,FORM1
          COMPARE   FORM1,TOTPER
          GOTO      GETP4000 IF LESS
.
          LOAD      DIM11,FORM1,COLUMN1,COLUMN2,COLUMN3,COLUMN4,COLUMN5,COLUMN6
          CALL      RJUS0000                     * right justify heading
          APPEND    DIM11A,COLHEAD
          APPEND    DASH11,HEADUND
          APPEND    SP1,COLHEAD
          APPEND    SP1,HEADUND
          GOTO      GETP3000
.
GETP4000  MOVE      "      Total",DIM11
          APPEND    DIM11,COLHEAD
          APPEND    DASH11,HEADUND
          RESET     COLHEAD
.
GETP9999  RETURN
+
.****************************************************************************
.*                              RJUS0000               Called by: GETP0000  *
.*            right justify the period description to be printed            *
.****************************************************************************
RJUS0000  CLEAR     DIM11A                       * reset form pointer to 0
          ENDSET    DIM11                        * position on last character
.                                                  of period description
RJUS1000  CMATCH    SP1,DIM11                    * is character space ?
          GOTO      RJUS2000 IF NOT EQUAL        * no
.
          ENDSET    DIM11A                       * position after last character
.                                                  of formatted period desc.
          APPEND    SP1,DIM11A                   * add another leading space
.                                                  to formatted period desc.
          BUMP      DIM11,-1                     * position back 1 character
          GOTO      RJUS1000 IF NOT EOS          * see what character this is
.
RJUS2000  RESET     DIM11
          STRIP     DIM11                        * remove trailing spaces
          ENDSET    DIM11A
          APPEND    DIM11,DIM11A                 * append to formatted desc.
          RESET     DIM11A
.
RJUS9999  RETURN
+
.**************************************************************************
.*                              CREA0000               Called by: ML0000  *
.*                    create a new temporary file                         *
.**************************************************************************
CREA0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Creating temporary file ...";
          CALL      KILL0000                     * remove existing file
.
          BRANCH    DOPTION,CREA5000             * full report
.
          PACK      CMDLIN3,ISBUILD,TEMPFILE,UKEY2
          EXECUTE   CMDLIN3,TASKID               * create temporary index file
.
          OPEN      ATBTEMP3,TEMPFILE            * open temp index file
          OPEN      ATBTEMP4,TEMPFILE
          GOTO      CREA9999
.
CREA5000  PACK      CMDLIN1,ISBUILD,TEMPFILE,UKEY1
          EXECUTE   CMDLIN1,TASKID               * create temporary index file
.
          OPEN      ATBTEMP1,TEMPFILE            * open temp index file
          OPEN      ATBTEMP2,TEMPFILE
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: ML0000    *
.*               close and erase the temporary file               CREA0000  *
.****************************************************************************
KILL0000  CLOSE     ATBTEMP1                     * close file
          CLOSE     ATBTEMP2
          CLOSE     ATBTEMP3
          CLOSE     ATBTEMP4
.
          PACK      CMDLIN2,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLIN2,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*                                LINE0000             Called by: PRND0000  *
.*                   draw full line across page                   ENDD0000  *
.*                                                                ENDM0000  *
.*                                                                HEAD0000  *
.****************************************************************************
LINE0000  PRINT     *1,"*-------------------------------------------------":
                       "--------------------------------------------------":
                       "-------------------------------*"
LINE9999  RETURN
+
.******************************************************************************
.*        CRDN0000 - Credit for credit note                                   *
.******************************************************************************
CRDN0000  MOVE      ZERO,FORM12P2
          PACK      KEY16,PRINNUMB,SP70
          CALL      RSPRCNO3
CRDN1000  CALL      RKPRCNO3
          BRANCH    OVRCD,CRDN9999
          MATCH     PRCOINVN,PRINNUMB       * Same invoice number?
          GOTO      CRDN9999 IF NOT EQUAL   * No
.
          MATCH     PRCODATE,ATDATE
          GOTO      CRDN1000 IF LESS
          ADD       PRCOAMNT,FORM12P2
          GOTO      CRDN10000
.
CRDN9999  RETURN
.
.******************************************************************************
.*        CRED0000 - Non private prac credit note                             *
.******************************************************************************
CRED0000  MOVE      ZERO,FORM12P2
          PACK      KEY16,PINVNO,SP70
          CALL      RSPMCNO3
CRED1000  CALL      RKPMCNO3
          BRANCH    OVRCD,CRED9000
          MATCH     PMCNINVN,PINVNO         * Same invoice number?
          GOTO      CRED9000 IF NOT EQUAL   * No
.
          MATCH     PMCNDATE,ATDATE
          GOTO      CRED1000 IF LESS
          ADD       PMCNAMNT,FORM12P2
          GOTO      CRED10000
.
CRED9000  COMPARE   ZERO,FORM12P2
          GOTO      CRED9999 IF EQUAL       * No credit note
          SUB       PTINROUN,FORM12P2
CRED9999  RETURN
+
.******************************************************************************
.*        GHFND000 - Get Private Practice Health Fund from prihreff           *
.******************************************************************************
GHFND000  PACK      REFRFUND,SP70
.
. loop dtr file to get patient indicator (prdtcode)
.
          PACK      KEY24,PRINDEBT,PRINSCAN,PRINNUMB,SP10
          CALL      RSPRDT3                 * position in file
          CALL      RKPRDT3                 * read next record
          BRANCH    OVRCD,GHFND999          * end of file
.
          MATCH     PRINDEBT,PRDTDEBT       * same debtor number ?
          GOTO      GHFND999 IF NOT EQUAL   * no
.
          COMPARE   PRINSCAN,PRDTSCAN       * same scan flag ?
          GOTO      GHFND999 IF NOT EQUAL   * no
.
          MATCH     PRINNUMB,PRDTINVN       * same invoice number ?
          GOTO      GHFND999 IF NOT EQUAL   * no
.
. get health fund off referral file
.
          PACK      KEY27,PRDTUNIQ,PRDTPRAC,PRDTDOCT,PRDTCODE
          CALL      RDPRHR1
          IF        OVRCD<>1
            MOVE      PRHRBCOD,REFRFUND
          ENDIF
GHFND999  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.         1st Index
.
RSTEMP1   READ      ATBTEMP1,KEY20;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      ATBTEMP1,KEY20;X1PRAC,X1DEBTR,DX1SCAN,X1SURN,X1GIVEN:
                                   X1PAID,X1CURR,X1PER1,X1PER2,X1PER3:
                                   X1PER4,X1PER5,X1PER6,X1TOTAL,X1PTPD:
                                   PATFLAG,DEBTAGEN
          GOTO      OVERCOND IF OVER
          MOVE      DX1SCAN,X1SCAN
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    ATBTEMP1;X1PRAC,X1DEBTR,DX1SCAN,X1SURN,X1GIVEN:
                             X1PAID,X1CURR,X1PER1,X1PER2,X1PER3:
                             X1PER4,X1PER5,X1PER6,X1TOTAL,X1PTPD:
                             PATFLAG,DEBTAGEN
          GOTO      OVERCOND IF OVER
          MOVE      DX1SCAN,X1SCAN
          RETURN
.
WRTEMP1   MOVE      X1SCAN,DX1SCAN
          WRITE     ATBTEMP1,KEY20;X1PRAC,X1DEBTR,DX1SCAN,X1SURN,X1GIVEN:
                                   X1PAID,X1CURR,X1PER1,X1PER2,X1PER3:
                                   X1PER4,X1PER5,X1PER6,X1TOTAL,X1PTPD:
                                   PATFLAG,DEBTAGEN
          RETURN
.
UPTEMP1   MOVE      X1SCAN,DX1SCAN
          UPDATE    ATBTEMP1;X1PRAC,X1DEBTR,DX1SCAN,X1SURN,X1GIVEN:
                             X1PAID,X1CURR,X1PER1,X1PER2,X1PER3:
                             X1PER4,X1PER5,X1PER6,X1TOTAL,X1PTPD:
                             PATFLAG,DEBTAGEN
          RETURN
.
.         2nd Index
.
RSTEMP2   READ      ATBTEMP2,KEY40;;
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    ATBTEMP2;X1PRAC,X1DEBTR,DX1SCAN,X1SURN,X1GIVEN:
                             X1PAID,X1CURR,X1PER1,X1PER2,X1PER3:
                             X1PER4,X1PER5,X1PER6,X1TOTAL,X1PTPD:
                             PATFLAG,DEBTAGEN
          GOTO      OVERCOND IF OVER
          MOVE      DX1SCAN,X1SCAN
          RETURN
.
.         3rd Index
.
RSTEMP3   READ      ATBTEMP3,KEY38;;
          RETURN
.
RDTEMP3   MOVE      ZERO,OVRCD
          READ      ATBTEMP3,KEY38;X2PRAC,X2DEBTR,DX2SCAN,X2SURN,X2GIVEN:
                                   X2SDOCT,X2INUMB,X2IDATE,X2IOUT,X2PTELE:
                                   X2BTELE,X2LCODE,X2LDATE,PATFLAG,DEBTAGEN
          GOTO      OVERCOND IF OVER
          MOVE      DX2SCAN,X2SCAN
          RETURN
.
RKTEMP3   MOVE      ZERO,OVRCD
          READKS    ATBTEMP3;X2PRAC,X2DEBTR,DX2SCAN,X2SURN,X2GIVEN:
                             X2SDOCT,X2INUMB,X2IDATE,X2IOUT,X2PTELE:
                             X2BTELE,X2LCODE,X2LDATE,PATFLAG,DEBTAGEN
          GOTO      OVERCOND IF OVER
          MOVE      DX2SCAN,X2SCAN
          RETURN
.
WRTEMP3   MOVE      X2SCAN,DX2SCAN
          WRITE     ATBTEMP3,KEY38;X2PRAC,X2DEBTR,DX2SCAN,X2SURN,X2GIVEN:
                                   X2SDOCT,X2INUMB,X2IDATE,X2IOUT,X2PTELE:
                                   X2BTELE,X2LCODE,X2LDATE,PATFLAG,DEBTAGEN
          RETURN
.
.         4th Index
.
RSTEMP4   READ      ATBTEMP4,KEY58;;
          RETURN
.
RKTEMP4   MOVE      ZERO,OVRCD
          READKS    ATBTEMP4;X2PRAC,X2DEBTR,DX2SCAN,X2SURN,X2GIVEN:
                             X2SDOCT,X2INUMB,X2IDATE,X2IOUT,X2PTELE:
                             X2BTELE,X2LCODE,X2LDATE,PATFLAG,DEBTAGEN
          GOTO      OVERCOND IF OVER
          MOVE      DX2SCAN,X2SCAN
          RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       PATCODKY
          INC       PATFNDKY                     * Keyin the health fund
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       PRIPRADS
.
..          INC       PRIDBTIO/INC                 * debtor file
          INC       PRIDTRIO/INC                 * debtor transaction file
          INC       PRIHREIO/INC                 * doctor referral details file
          INC       PRIINVIO/INC                 * invoice file
          INC       PRILHIIO/INC                 * fin. letter history file
          INC       PRIPRAIO/INC                 * medical practice file
          INC       PRICNOIO/INC                 * credit note file
          INC       PRIALSIO/INC                 * Medical Prac.all user access
          INC       PRISECIO/INC                 * Medical Prac.security access
          INC       PRIRASIO/INC                 * Reassign debt file
.
          INC       PATCODIO/INC                 * codes file
          INC       PATFN1IO/INC                 * Health fund file
          INC       PMSHCPIO/INC                 * doctor file
          INC       PATDSCIO/INC                 * discharge file
          INC       PATDTRIO/INC                 * debtor transaction file
          INC       PATINVIO/INC                 * invoice file
          INC       PATMA1IO/INC                 * patient master file
          INC       PATMI1IO/INC                 * admission file
          INC       PMSVX1IO/INC                 * admission file
          INC       PATVISIO/INC                 * visit file
          INC       PATLHIIO/INC                 * letter history file
          INC       PMSCNOIO/INC                 * credit notes
+
