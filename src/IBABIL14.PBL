.****************************************************************************** 
.*                                                                            *
.*                        P R O G R A M   S U M M A R Y                       *
.*                        -------------   -------------                       *
.*                                                                            *
.* Program Name:           IBABIL14                                           *
.*                                                                            *
.* Function:               MAINTENANCE OF THEATRE FEE                         *
.*                                                                            *
.* Date Written:           04/02/1988                                         *
.*                                                                            *
.* Author:                 JENI TAN                                           *
.*                                                                            *
.* Modifications:                                                             *
.*        V10.13.01 05/12/2018  Don Nguyen       TSK 0838558                  *
.*                  Deleted temp file (ROLLFILE) after processing             *
.*        V10.11.01 06/12/2017  Ania P            TSK 0261630                 *
.*                  Removed use of PORT                                       *
.*        V10.01.01 24/02/2011  Peter Vela        CAR 233048                  *
.*                  Added Johns Hopkins functionality                         *
.*        V9.12.02  16/09/2009  J.Tan             CAR 204390                  *
.*                  Mods to Old theatre fee file                              *
.*        V9.12.01  04/09/2009  Mike Laming       CAR 204388                  *
.*                  Correct Global Deletion routine DEL0000 (big clean-up)    *
.*        V9.07.01  13/07/2006  Mike Laming       CAR 111521                  *
.*                  Change all Bed Fee & Theatre Fee work areas to FORM 8.2   *
.*        V9.03.02  16/04/2004  Lina Vo      CAR 48824                        *
.*                  Removed locking of Web Theatre Fee Maintenance flag       *
.*                  (PTCNWTFE).  PATWEB77 server now does the locking.        *
.*        V9.03.01  25/08/2003  Lina Vo      CAR 36528                        *
.*                  Added check for PTCNWTFE when PGM="IBARSH"(called         *
.*                  by web) and use PTCNWTFE for program locking.             *
.*                  Fixed KFUND to not move HFBAND when blank health          *
.*                  fund. This was putting the wrong theatre charging         *
.*                  field for global update and copy.                         *
.*        V5.08.06  15/11/2000  Jill Habasque                                 *
.*                  Rebound - check new file exists                           *
.*        V5.08.05  15/11/2000  Jill Habasque SRF 7158                        *
.*                  Fixed update of current file                              *
.*        V5.08.04  24/10/2000  Dean Cramer   SRF 6710                        *
.*                  Recomplied for PATTBLKY                                   *
.*                  Changed for health fund table code size increase to       *
.*                  8 characters                                              *
.*        V5.08.03  16/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.02  06/07/2000  Jill Habasque SRF 638989                      *
.*                  Created PATTF1E1 - oracle changes                         *
.*        V5.08.01  06/06/2000  Jill Habasque                                 *
.*                  Changed from key10 to key14 for the health fund file      *
.*       V5.07.B01  10/11/1998  Jim Stathopoulos                              *
.*                  507 Changes                                               *
.******************************************************************************
.*        V5.03.04  19/03/1996  Greg Horvat      SRF 614540                   *
.*                   - Changed to display the correct theatre banding         *
.*                     when redisplaying the copy from theatre banding        *
.*                   - Fixed a bug which changed the copy from theatre        *
.*                     fee to be another theatre fee when running option      *
.*                     9 for a 2nd time without exiting the program           *
.*        V5.03.03  30/01/96 J.Tan   SRF 613675                               *
.*                  Fixed displaying the theatre classification               *
.*        V5.03.02  05/10/1995    MATT                                        *
.*                  Redefined PATTAUD as SFILE                                *
.*        V5.03.01  28/06/1995    Paul Howells    SRF 610140                  *
.*                  Return to claim code after duplicate option.              *
.****************************************************************************** 
.* Modifications: V3.01    05/09/88 Graeme Williams                           *
.*                         Added Day Case Indicator.                          *
.*                         Allow for Theatre Bandings                         *
.*                V5.00    09/12/88 M.HAYSE          SRF 005691               *
.*                         MODE BUG                                           *
.*                V5.01    07/03/89 K.PEAK                                    *
.*                         Added Total of Pat. & H/F portions                 *
.*                         Global Update Option      SRF 4785                 *
.*                         Duplication Option        SRF 4784                 *
.*                V5.02    14/03/89 Graeme Williams                           *
.*                         Use "ldat" to locate files  SRF 5639               *
.*                         Took out Duplication option as it wasn't           *
.*                         working yet                                        *
.*                V5.03    14/04/89 K.Peak           SRF 100190, 100188       *
.*                         Fixed adding of fields 5 & 6                       *
.*                         Added ? option for H/F Table                       *
.*                                                                            *
.*                V5.01.01 05/07/89  S.O'Gorman                               *
.*                         Converted for N.Z.                                 *
.*                V5.01.02 23/11/89 J.Tan            SRF 102687               *
.*                         Fixed Duplication option                           *
.*                V5.01.03 16/01/90 J.Tan            SRF 103647               *
.*                         Fixed error in Duplication option                  *
.*                V5.01.04 24/01/90 K.Peak           SRF 103723               *
.*                         Fixed display on ? for MBS                         *
.*                V5.01.05 20/02/90 J.Tan            SRF 103854               *
.*                         Fixed global update option                         *
.*                V5.01.06 22/03/90 J.Tan            SRF 104411               *
.*                         Allow to duplicate Claim Code without any          *
.*                         Health Fund                                        *
.*                V5.01.07 23/05/90 J.Tan            SRF 104901               *
.*                         Mods PATFNDFD                                      *
.*                V5.01.08 11/06/90 J.Tan                                     *
.*                         Fixed banding for no HF                            *
.*                V5.01.09 15/06/90 J.Tan            SRF 105292               *
.*                         Mods deletion option                               *
.*                V5.01.10 25/07/90 J.Tan            SRF 105671               *
.*                         Fixed type of class. description                   *
.*                V5.01.11 24/08/90 i chung          SRF 106160               *
.*                         Fixed to display MBS Fee as default - i.e.         *
.*                         before a theatre band is available                 *
.*                V5.01.12 08/10/90 i chung          SRF 106219               *
.*                         Added Global Deletion option                       *
.*                V5.01.13 17/01/91 i chung                                   *
.*                         Fixed Global Deletion bugs as in IBAHOS10 -        *
.*                         SRF 103382 rebound                                 *
.*                         Also fixed bugs in H.F/Table Duplication opt.      *
.*                V5.01.14 20/05/91 i chung          SRF 108317               *
.*                         Added making a copy of the current file when       *
.*                         updating the Theatre Fee file                      *
.*                V5.01.15 18/09/91 i chung          SRF 110549               *
.*                         Global Update option :-                            *
.*                         a) Increased size of Patient & Rebate              *
.*                            Portions by 1 character                         *
.*                         b) Allowed to select field for modification        *
.*                V5.01.16 15/11/91 J.Tan      SRF 111191                     *
.*                         Fixed duplication opt.to position on claim         *
.*                V5.01.17 18/02/1994    Paul Howells                         *
.*                         Standardised.                                      *
.*                V5.01.18 31/03/1994 Sandra Barcham                          *
.*                         New Keyins & Single Entry Only                     *
.*                V5.02.00 10/10/1994 Matt Surridge  SRF 132492               *
.*                         Allowed Blank Health Fund.                         *
.*        V5.02.01  23/03/1995  Graeme Williams  SRF 135688                   *
.*                  Recompiled for changes to PATFNDKY - blank HF's are now   *
.*                  distinguished from no HF entered.                         *
.*        V5.02.02  30/03/1995  Gabrielle                                     *
.*                  Changed so the second MBS item is keyed in the correct spot
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
.
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATFN1FD/INC
          INC       PATTFEFD/INC
          INC       JHSTF1FD/INC
          INC       JHSTF2FD/INC
          INC       IBASEQFD/INC 
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
+
.        EXTRA   VARIABLES
.
ACTION    DIM       1
ACC       DIM       2
ADD       DIM       2
AFUNDH    DIM       6
AFNDTB    DIM       8
ALL       INIT      "ALL"
AMM       DIM       2
AYY       DIM       2
.
CHG       FORM      1
CLDES     DIM       20
CLDES1    DIM       20
CLMFLG    FORM      1
CMDLINE   DIM       60
CODE      DIM       2
CODEA     INIT      "A "
CODECL    INIT      "CL"
CODERT    INIT      "RT"
CODETB    INIT      "TB"
COL       FORM      3
.
DANS      DIM       3
DANS1     DIM       3
DIM4      DIM       4
DIM14     DIM       14
DIM18     DIM       18
DIM25     DIM       25
DSFLAG    FORM      "0"
DTCLSS    DIM       23
DTCLS0    INIT      "   MBS Fee             "
DTCLS1    INIT      "   Theatre Class. 1    "
DTCLS2    INIT      "   Theatre Class. 2    "
DTCLS3    INIT      "   Theatre Class. 3    "
DTCLS4    INIT      "   Theatre Class. 4    "
DTCLS5    INIT      "   Theatre Class. 5    "
DTCLS6    INIT      "   Theatre Class. 6    "
DTCLS7    INIT      "   Theatre Class. 7    "
DTCLS8    INIT      "   Theatre Class. 8    "
DTCLS9    INIT      "   Theatre Class. 9    "
DTCLS10   INIT      "   Theatre Class. 10   "
DTCLS11   INIT      "   Theatre Class. 11   "
DTCLS12   INIT      "   Theatre Class. 12   "
DTCLS13   INIT      "   Theatre Class. 13   "
DTCLS14   INIT      "   Theatre Class. 14   "
DTCLS15   INIT      "   Theatre Class. 15   "
DTCLS16   INIT      "   Theatre Class. 16   "
.
FCODDES   DIM       30
FCODDES1  DIM       30
FIELD     FORM      2
FNAMER    DIM       8
FNDFLG    FORM      1
FORM5     FORM      5
FORM82    FORM      8.2
FORM82A   FORM      8.2
FTABDES   DIM       30
FTABDES1  DIM       30
.
HEADDES1  DIM       35
HEADDES2  DIM       60
INCDESC   DIM       21
INCDESC1  INIT      "Fixed Dollar Increase"
INCDESC2  INIT      "Percentage Increase  "
INCR      FORM      1
.
MBSFLG    FORM      1
MHFUND    DIM       6
MODE      DIM       1
MODE1     DIM       1
.
NEWFLG    FORM      1
NOFUND    FORM      1
NUMPRD    FORM      1
.
OPERCODE  DIM       4
.
.IFGE     $$VER,7
.PATTAUD   SFILE    ASCII, FIXED=256
.XIF
.IFEQ     $$VER,6
.PATTAUD   FILE     ASCII, FIXED=256
.XIF
.
PRNTLINE  DIM       132 
PPORT     FORM      8.2
PPORT1    FORM      8.2
PPORT2    FORM      8.2
PPORT3    FORM      8.2
PPORT4    FORM      8.2
PPORT5    FORM      8.2
PPORT6    FORM      8.2
.
ROLLFILE  FILE      ASCII, FIXED=256
RPORT     FORM      8.2
RPORT1    FORM      8.2
RPORT2    FORM      8.2
RPORT3    FORM      8.2
RPORT4    FORM      8.2
RPORT5    FORM      8.2
RPORT6    FORM      8.2
.
REBTOT1   FORM      8.2
REBTOT2   FORM      8.2
REBTOT3   FORM      8.2
REBTOT4   FORM      8.2
REBTOT5   FORM      8.2
REBTOT6   FORM      8.2
.
SAVCLM    DIM       3
SAVCLM1   DIM       3
SAVDANS   DIM       3
SAVDANS1  DIM       3
SAVDAYC   DIM       1
SAVDAYC1  DIM       1
SAVEDMBS  DIM       5
SAVFDAY   DIM       1
SAVFDAY1  DIM       1
SAVFHF1   FORM      8.2
SAVFHF2   FORM      8.2
SAVFHF3   FORM      8.2
SAVFHF4   FORM      8.2
SAVFHF5   FORM      8.2
SAVFHF6   FORM      8.2
SAVFPAT1  FORM      8.2
SAVFPAT2  FORM      8.2
SAVFPAT3  FORM      8.2
SAVFPAT4  FORM      8.2
SAVFPAT5  FORM      8.2
SAVFPAT6  FORM      8.2
SAVHF     DIM       6
SAVHF1    DIM       6
SAVKEY    DIM       23
SAVKEY19  DIM       19
SAVKEY23  DIM       23
SAVMBS    DIM       5
SAVMBS1   DIM       5
SAVNINV   FORM      1
SAVTAB    DIM       8
SAVTAB1   DIM       8
SDIM14    DIM       14
SDIM18    DIM       18
SDIM25    DIM       25
SEC       FORM      2
SEC1      FORM      "00001"
STHCFLG   FORM      2
.
TABFLG    FORM      1
TBDESC    DIM       20
TBDESC1   DIM       20
TFCLM1    DIM       3
TFDAYC1   DIM       1
TFENDMB1  DIM       5
TFHF      FORM      8.2
TFHFTAB1  DIM       8
TFHFUND1  DIM       6
TFPAT     FORM      8.2
THCFLG    FORM      2
THCFLG1   FORM      2
THMFLG    FORM      1                                                 *I-204388
TIMEIS    DIM       8
TOTAL     FORM      8.2
TOTAL1    FORM      8.2
TOTAL2    FORM      8.2
TOTAL3    FORM      8.2
TOTAL4    FORM      8.2
TOTAL5    FORM      8.2
TOTAL6    FORM      8.2
.
XPOST     FORM      4
.
VERT      FORM      2
.
Z6        INIT      "ZZZZZZ"
Z8        INIT      "ZZZZZZZZ"
ZERO4     INIT      "0000"
.
PRGID     INIT      "IBABIL14"
PRGNAM    INIT      "Theatre Fee Maintenance"
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.         START OF PROGRAM
.******************************************************************************
.
          CALL      DISPHEAD
          MOVE      "999",CLNO
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"jhstfee1";
          OPEN      JHSTFEA1,"jhstfeaf"
          OPEN      JHSTF1A1,"newtfeaf"
          OPEN      JHSTF2A1,"oldtfeaf"
.
          CALL      TFILENAM
          MOVE      TFILNAME,FNAMER
.
.------------------------------------------------------------------------------
.       Create name for rollout file
.------------------------------------------------------------------------------
.         READ      CONTROLF,TEN;*220,CAUDT
          READ      CONTROLF,TEN9;*212,CFEETYP
.
          BRANCH    CAUDT OF START
.
.         DISPLAY   *P64:24,"pattaud";
.         OPEN      PATTAUD,"pattaud"
.
START     HLINE     *G37,2,52,80
          DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P2:5,*V2LON,ONE,*HOFF," = Insert Theatre Fee":
                    *P2:6,*V2LON,TWO,*HOFF," = Change Theatre Fee":
                    *P2:7,*V2LON,THREE,*HOFF," = Create New Theatre Fee file":
                    *P2:8,*V2LON,FOUR,*HOFF," = Insert (New file)":
                    *P2:9,*V2LON,FIVE,*HOFF," = Change (New file)":
                    *P2:10,*V2LON,SIX,*HOFF," = Delete (New file)":
                    *P2:11,*V2LON,SEVEN,*HOFF," = Update Theatre Fee file":
                    *P2:12,*V2LON,EIGHT,*HOFF," = Global Update of Charges ":
                                                  "(New file)":
                    *P2:13,*V2LON,NINE,*HOFF," = Health Fund/Table Duplication":
                                                  " (New file)":
                    *P1:14,*V2LON,TEN,*HOFF," = Global Deletion (New file)":
                    *P1:16,*EL,"Select Option :";
.
START0    KEYIN     *P17:16,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      ENDIT IF EQUAL
          DISPLAY   *P17:16,*EL,*V2LON,OPTION;
.
REPEAT    MOVE      ZERO,NEWFLG
          MOVE      ZERO,THCFLG                * added for V5.01.11 - SRF 106160
          CALL      INITVAR
.
          BRANCH    OPTION OF INSERT,CHANGE,CREATE:
                    NEWINS,NEWCHG,NEWDEL,INSTALL,GLOBAL,DUPLIC,GLODEL
.
          BEEP
          GOTO      START0
.-----------------------------------------------------------------------------
.         ADD A THEATRE FEE - Option 1
.-----------------------------------------------------------------------------
INSERT    CALL      DISPI
          CALL      DISP1
          MOVE      ANSI,MODE1
          GOTO      KTFCCL
.-----------------------------------------------------------------------------
.         CHANGE A THEATRE FEE - Option 2
.-----------------------------------------------------------------------------
CHANGE    CALL      DISPC
          CALL      DISP1
          MOVE      ZERO,CHG
          MOVE      ANSC,MODE1
          GOTO      KTFCCL
.
RDCCLM    CALL      DISPDA
          CALL      ACTBSAV
          GOTO      SFIELD
.-----------------------------------------------------------------------------
.         ADD A THEATRE FEE (New file) - Option 4
.-----------------------------------------------------------------------------
NEWINS    TRAP      NONEW IF IO
          OPEN      JHSTF1A1,"newtfeaf"
          TRAPCLR   IO
          MOVE      ONE,NEWFLG
          CALL      DISPIN
          CALL      DISP1
          MOVE      ANSI,MODE1
          GOTO      KTFCCL
.-----------------------------------------------------------------------------
.         CHANGE A THEATRE FEE (New file) - Option 5
.-----------------------------------------------------------------------------
NEWCHG    TRAP      NONEW IF IO
          OPEN      JHSTF1A1,"newtfeaf"
          TRAPCLR   IO
          MOVE      ONE,NEWFLG
          CALL      DISPCN
          CALL      DISP1
          MOVE      ZERO,CHG
          MOVE      ANSC,MODE1
          GOTO      KTFCCL
.-----------------------------------------------------------------------------
.         DELETE A THEATRE FEE (New file) - Option 6
.-----------------------------------------------------------------------------
NEWDEL    TRAP      NONEW IF IO
          OPEN      JHSTF1A1,"newtfeaf"
          TRAPCLR   IO
          MOVE      ONE,NEWFLG
          CALL      DISPDN
          CALL      DISP1
          MOVE      ANSD,MODE1
          GOTO      KTFCCL
.
DELCS     CALL      DISPDA
          GOTO      REKEY1
.-----------------------------------------------------------------------------
.         GLOBAL UPDATE OF CHARGES (New file) - Option 8
.-----------------------------------------------------------------------------
GLOBAL    TRAP      NONEW IF IO
          OPEN      JHSTF1A1,"newtfeaf"
          TRAPCLR   IO
          MOVE      ONE,NEWFLG
          CALL      DISPGN
          CALL      DISP2
          MOVE      ANSC,MODE1
          GOTO      KCLAIM
.-----------------------------------------------------------------------------
.         HEALTH FUND/TABLE DUPLICATION (New file) - Option 9
.-----------------------------------------------------------------------------
DUPLIC    TRAP      NONEW IF IO
          OPEN      JHSTF1A1,"newtfeaf"
          TRAPCLR   IO
          MOVE      ONE,NEWFLG
          CALL      DISPDU
          CALL      DISP3
          MOVE      ANSI,MODE1
          MOVE      ZERO,NOFUND
          GOTO      KCLAIM
.-----------------------------------------------------------------------------
.         GLOBAL DELETION (New file) - Option 10
.-----------------------------------------------------------------------------
GLODEL    TRAP      NONEW IF IO
          OPEN      JHSTF1A1,"newtfeaf"      * open Theatre Fee new file
          TRAPCLR   IO
          MOVE      ONE,NEWFLG
          CALL      DISPDE                   * display heading
.
GLODEL10  MOVE      ZERO,THCFLG              * initialize MBS/Theatre Class flag
          CALL      SCRD0000                 * display screen layout
          CALL      KEYD0000                 * keyin details
          BRANCH    EXIT,START
.
          CALL      DELQST                   * Ok to delete ?
          BRANCH    CEXIT,GLODEL20,GLODEL10,START    * 1=yes, 2=no, 3=cancel
.
GLODEL20  CALL      DEL0000                  * globally delete record
          GOTO      START
.
REKEY1    CALL      DELQST
          BRANCH    CEXIT,CCLDEL,DESCRN,START
.
CCLDEL    IF        NEWFLG=1
            CALL      DEJHT1A1                * newtfeef
          ELSE
            CALL      DEJHTFE1                * pattfeef
          ENDIF
          COMPARE   FOUR,OPTION
          GOTO      DESCRN IF NOT LESS
          BRANCH    CAUDT OF DESCRN
.         MOVE      ANSD,ACTION
.         CALL      UPTAUD
.
DESCRN    DISPLAY   *P1:24,*EL;
          CALL      INIT10
          CALL      DISPCL1
          MOVE      MODE1,MODE
          GOTO      KLDAY
.
.       No new file exists
.
NONEW     DISPLAY   *P1:24,*EL,*B:
                    "No New file. File Must be Created First. ";
          CALL      HITENTER
.
          NORETURN
          GOTO      START0
.-----------------------------------------------------------------------------
.       Create new file - Option 3
.-----------------------------------------------------------------------------
CREATE    TRAP      CRNEW IF IO
          OPEN      JHSTF1A1,"newtfeaf"
          TRAPCLR   IO
.
          DISPLAY   *P1:24,*EL,*B:
                    "New File Already Exists. ";
          CALL      HITENTER
.
CREKEY    KEYIN     *P1:24,*EL,"Are You Sure You Want to Overwrite the New ":
                    "File (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ":
                    *V2LON,ANS;
.
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS
          GOTO      CRTNEW IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      START IF EQUAL
          BEEP
          GOTO      CREKEY
.
CRNEW     NORETURN
.
CRTNEW    CALL      CREAIDX
          GOTO      START
.
.-----------------------------------------------------------------------------
.       Install new file - Option 7
.-----------------------------------------------------------------------------
INSTALL   KEYIN     *P1:24,*EL,"Are You Sure You Want to Copy the New Data ":
                    "Over the Old (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    ") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS
          GOTO      UPDATE IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      START IF EQUAL
          BEEP
          GOTO      INSTALL
.
.       Move new file over the top of the old
.
UPDATE    CALL     UPCF0000            * update jhstfeef with newtfeaf
.CALL      MOVEIDX
          GOTO      START
.
.             INPUT THEATRE FEE CLAIM CODE
.
KTFCCL    CALL      INITVAR
          MOVE      ZERO,STHCFLG
          CALL      DISPCL
          MOVE      CODECL,CODE
          MOVE      TWENTY6,ECOL
          MOVE      FIVE,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      ONE,CNEWDS
          CALL      PATCODKY 
          BRANCH    EXIT,START,START
          MOVE      ACODE,TFCLM
.
          MOVE      TDESC,CLDES
          DISPLAY   *P26:5,*V2LON,TFCLM,*HOFF,*P35:5,CLDES;
.
          MOVE      TCFORM6,THCFLG        * Theatre Classification to use
          MOVE      THCFLG,STHCFLG
.
          MOVE      MODE1,MODE
.
.             INPUT HEALTH FUND
.
KHFUND    MOVE      SP6,TFHFUND
          MOVE      SP8,TFHFTAB
          MOVE      STHCFLG,THCFLG
          MOVE      TWENTY6,ECOL
          MOVE      SIX,EVERT
          MOVE      ZERO,CKYIMODE
          DISPLAY   *P26:6,*EL,*P26:7,*EL,*P26:8,*EL,*P26:9,*EL;
          CALL      PATFNDKY
          BRANCH    EXIT,KTFCCL,START,KDAYC
.
          MOVE      HCODE,TFHFUND
          MOVE      HFNAME,FCODDES
          MOVE      HFBAND,THCFLG
.
          DISPLAY   *P26:6,*EL,*V2LON,TFHFUND,*HOFF,*P35:6,FCODDES;
.
.             INPUT HEALTH FUND TABLE
.
KHFTAB    DISPLAY   *P26:7,*EL;
          MOVE      SP8,TFHFTAB
          MOVE      SP30,FTABDES
          MOVE      ZERO,CKYIMODE
          MOVE      HCODE,MHFUND
          MOVE      TWENTY6,ECOL
          MOVE      SEVEN,EVERT
          CALL      PATTBLKY
          BRANCH    EXIT,KHFUND,START
.
          MOVE      HFTABL,TFHFTAB
          MOVE      HFNAME,FTABDES
          DISPLAY   *P26:7,*EL,*V2LON,TFHFTAB,*HOFF,*P35:7,FTABDES;
.
.       Input whether or not this is a Day Case Rate
.
KDAYC     KEYIN     *P26:8,*EL,*V2LON,ANS,*P26:8,*DV,ANS
          REP       UPPLOW,ANS
.
          PACK      ANS,ANS,SP1
          MATCH     SP1,ANS
          IF        @EQUAL
            MATCH     SP6,TFHFUND
            GOTO      KHFUND IF EQUAL
            GOTO      KHFTAB
          ENDIF
.
          MOVE      DNO,DANS
          MOVE      SP1,TFDAYC
.
          CMATCH    ANSN,ANS
          GOTO      DDAYC IF EQUAL
.
          CMATCH    ANSY,ANS
          IF        !@EQUAL
            BEEP     
            GOTO      KDAYC
          ENDIF
.
          MOVE      DYES,DANS
          MOVE      ANSD,TFDAYC
.
DDAYC     DISPLAY   *P26:8,*V2LON,DANS;
.
.             INPUT LAST MBS IN RANGE
.
KLDAY     MOVE      DTCLS0,DTCLSS
          LOAD      DTCLSS,THCFLG,DTCLS1,DTCLS2,DTCLS3,DTCLS4,DTCLS5,DTCLS6:
                                  DTCLS7,DTCLS8,DTCLS9,DTCLS10,DTCLS11,DTCLS12:
                                  DTCLS13,DTCLS14,DTCLS15,DTCLS16
.
          MOVE      SP5,TFENDMBS
.
          COMPARE   ZERO,THCFLG
          GOTO      MBSOPTT IF NOT EQUAL
.
          KEYIN     *P1:9,*DV,DTCLSS,*P26:9,*EL,*V2LON,TFENDMBS;
KLDAY0    RESET     TFENDMBS
          GOTO      KLDAY1 IF NOT EOS
.
          MOVE      SP3,DANS
          DISPLAY   *P1:9,DTCLS0,*P24:9,":";   * added for V5.01.11 - SRF 106160
          GOTO      KDAYC
.
KLDAY1    CMATCH    "?",TFENDMBS
          GOTO      MBSOPTS IF EQUAL
.
          TYPE      TFENDMBS
          GOTO      KLDAY2 IF NOT EQUAL
          MOVE      SP20,TBDESC
          MOVE      TFENDMBS,FORM5
          MOVE      FORM5,TFENDMBS
          DISPLAY   *P26:9,*EL,*V2LON,TFENDMBS;
          MOVE      TFENDMBS,SAVEDMBS
.
          MOVE      MODE1,MODE
          GOTO      CHKREC
.
KLDAY2    DISPLAY   *P1:24,*EL,*B,"Input Must be Numeric. ";
          CALL      HITENTER
          GOTO      KLDAY
.
MBSOPRR   IF        OPTION=9
            MOVE      SAVKEY23,KEY23        * Get the copy from theatre fee
            IF        NEWFLG=1
              CALL      RDJHT1A1                * newtfeaf
            ELSE
              CALL      RDJHTFE1                * jhstfeaf
            ENDIF
          ENDIF
          MOVE      TFCLM,SAVCLM
          MOVE      TFHFUND,SAVHF
          MOVE      TFHFTAB,SAVTAB
          MOVE      TFDAYC,SAVFDAY
.
          DISPLAY   *P1:16,DTCLSS,*P26:16,*EL
          MOVE      TWENTY6,ECOL
          MOVE      TEN6,EVERT
.
          MOVE      CODETB,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      ONE,CNEWDS
          CALL      PATCODKY 
.
          COMPARE   TWO,EXIT
          GOTO      START IF EQUAL
.
          PACK      TFENDMB1,ACODE,SP5
          MATCH     SP5,TFENDMB1
          GOTO      MBRR100 IF NOT EQUAL
.
          PACK      TBDESC1,ALL,SP6,SP10
          DISPLAY   *P26:16,*EL,*V2LON,TBDESC1;
.
          COMPARE   ZERO,MBSFLG
          GOTO      REKEY3 IF NOT EQUAL
          CALL      ALLERROR
          GOTO      TLDAY
.
MBRR100   MOVE      TDESC,TBDESC1
          DISPLAY   *P26:9,*EL,*V2LON,SAVEDMBS,*HOFF,*P35:9,TBDESC 
          GOTO      CHKTB2 
.
MBSOPSS   MOVE      TFCLM,SAVCLM
          MOVE      TFHFUND,SAVHF
          MOVE      TFHFTAB,SAVTAB
          MOVE      TFDAYC,SAVFDAY
          DISPLAY   *P1:9,DTCLSS,*P26:9,*EL
          MOVE      CODETB,CODE
          MOVE      TWENTY6,ECOL
          MOVE      NINE,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      ONE,CNEWDS
          CALL      PATCODKY 
.
          COMPARE   TWO,EXIT
          GOTO      START IF EQUAL
.
          PACK      TFENDMBS,ACODE,SP5
          MATCH     SP5,TFENDMBS
          GOTO      MBSS100 IF NOT EQUAL
.
          PACK      TBDESC,ALL,SP6,SP10
          DISPLAY   *P26:9,*EL,*V2LON,TBDESC;
          MOVE      ONE,MBSFLG
          PACK      SAVKEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          GOTO      LDAY3
.
MBSS100   MOVE      TDESC,TBDESC
          DISPLAY   *P26:9,*EL,*V2LON,TFENDMBS,*HOFF,*P35:9,TBDESC 
          MOVE      TFENDMBS,SAVEDMBS
          PACK      SAVKEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          GOTO      LDAY3 
.
MBSOPTT   MOVE      TFCLM,SAVCLM
          MOVE      TFHFUND,SAVHF
          MOVE      TFHFTAB,SAVTAB
          MOVE      TFDAYC,SAVFDAY
          DISPLAY   *P1:9,DTCLSS,*P26:9,*EL
          MOVE      CODETB,CODE
          MOVE      TWENTY6,ECOL
          MOVE      NINE,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      ONE,CNEWDS
          CALL      PATCODKY 
.
          COMPARE   TWO,EXIT
          GOTO      START IF EQUAL
.
          PACK      TFENDMBS,ACODE,SP5
          MATCH     SP5,TFENDMBS
          GOTO      MBST100 IF NOT EQUAL
.
          MOVE      SP3,DANS
          DISPLAY   *P1:9,DTCLS0,*P24:9,":";   * added for V5.01.11 - SRF 106160
          GOTO      KDAYC
.
MBST100   MOVE      TDESC,TBDESC
          DISPLAY   *P26:9,*EL,*V2LON,TFENDMBS,*HOFF,*P35:9,TBDESC 
.
          GOTO      CHKREC
.
.             Subroutine to display the existing MBS fee range
.
MBSOPTS   MOVE      TFCLM,SAVCLM
          MOVE      TFHFUND,SAVHF
          MOVE      TFHFTAB,SAVTAB
          MOVE      TFDAYC,SAVFDAY
.
          PACK      SDIM18 WITH TFCLM,TFHFUND,TFHFTAB,TFDAYC
          DISPLAY   *P1:4,*EF,*P20:4,*V2LON,*ULON,"MBS FEES",*HOFF;
.
          MOVE      SIX,CVERT
          MOVE      THREE,CCOL
.
          PACK      KEY23 WITH TFCLM,TFHFUND,TFHFTAB,TFDAYC,SP5
          IF        NEWFLG=1
            CALL      RSJHT1A1                 * newtfeaf
          ELSE
            CALL      RSJHTFE1                 * jhstfeaf
          ENDIF
NXTTFEE   IF        NEWFLG=1
            CALL      RKJHT1A1                 * newtfeaf
          ELSE
            CALL      RKJHTFE1                 * jhstfeaf
          ENDIF
          BRANCH    OVRCD OF NXTT1
.
          PACK      DIM18 WITH TFCLM,TFHFUND,TFHFTAB,TFDAYC
          MATCH     DIM18,SDIM18
          GOTO      NXTT1 IF NOT EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,TFENDMBS;
          ADD       ONE,CVERT
          COMPARE   TWENTY4,CVERT
          GOTO      NXTTFEE IF LESS
.
          MOVE      SIX,CVERT
          ADD       TEN5,CCOL
          COMPARE   "70",CCOL
          GOTO      NXTTFEE IF LESS
.
NXT10     KEYIN     *P1:24,*EL,"(",*V2LON,"C",*HOFF,")ontinue, (":
                    *V2LON,"N",*HOFF,")ext Screen : ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
.
          MATCH     ANSC,ANS
          GOTO      NXT11 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      NXTT IF EQUAL
          BEEP
          GOTO      NXT10
.
NXTT      MOVE      SIX,CVERT
          MOVE      THREE,CCOL
          DISPLAY   *P1:6,*EF;
          GOTO      NXTTFEE
.
NXTT1     CALL      INITVAR
          KEYIN     *P1:24,*EL,*DV,DTCLSS," : ",*V2LON,TFENDMBS;
          MOVE      SAVFDAY,TFDAYC
          MOVE      SAVCLM,TFCLM
          MOVE      SAVHF,TFHFUND
          MOVE      SAVTAB,TFHFTAB
          CALL      READISP
          GOTO      KLDAY0
.
NXT11     CALL      INITVAR
          MOVE      SAVFDAY,TFDAYC
          MOVE      SAVCLM,TFCLM
          MOVE      SAVHF,TFHFUND
          MOVE      SAVTAB,TFHFTAB
          MOVE      ZERO,TFENDMBS
          CALL      READISP
          GOTO      KLDAY
.
.         Subroutine to display the existing MBS fee range
.
MBSOPTS1  MOVE      TFCLM,SAVCLM
          MOVE      TFHFUND,SAVHF
          MOVE      TFHFTAB,SAVTAB
          MOVE      TFDAYC,SAVFDAY
.
          PACK      SDIM18 WITH TFCLM,TFHFUND,TFHFTAB,TFDAYC
          DISPLAY   *P1:4,*EF,*P20:4,*V2LON,*ULON,"MBS FEES",*HOFF;
.
          MOVE      SIX,VERT
          PACK      KEY23 WITH TFCLM,TFHFUND,TFHFTAB,TFDAYC,SP5
          IF        NEWFLG=1
            CALL      RSJHT1A1                 * newtfeaf
          ELSE
            CALL      RSJHTFE1                 * jhstfeaf
          ENDIF
NXTTFE1   IF        NEWFLG=1
            CALL      RKJHT1A1                 * newtfeaf
          ELSE
            CALL      RKJHTFE1                 * jhstfeaf
          ENDIF
          BRANCH    OVRCD OF NXT100
.
          PACK      DIM18 WITH TFCLM,TFHFUND,TFHFTAB,TFDAYC
          MATCH     DIM18,SDIM18
          GOTO      NXT100 IF NOT EQUAL
.
          DISPLAY   *P3:VERT,*V2LON,TFENDMBS;
          ADD       ONE,VERT
          GOTO      NXTTFE1
.
NXT100    DISPLAY   *P1:24,*EL;
          CALL      HITENTER
.
NXT110    MOVE      SAVCLM,TFCLM
          MOVE      SAVHF,TFHFUND
          MOVE      SAVTAB,TFHFTAB
          MOVE      SAVFDAY,TFDAYC
.
          COMPARE   EIGHT,OPTION
          GOTO      NXT120 IF EQUAL
          CALL      READISP2
          GOTO      LDAY
.
NXT120    CALL      READISP1
          GOTO      LDAY
.
INVMBS1   DISPLAY   *P1:24,*EL,*B,"Invalid MBS Fee. ";
          CALL      HITENTER
          GOTO      LDAY
.
INVTB     DISPLAY   *P1:24,*EL,*B,"Invalid Theatre Band. ";
          CALL      HITENTER
.
          COMPARE   TEN,OPTION
          GOTO      KEYD5000 IF EQUAL
          GOTO      KLDAY
.
.         Subroutine to display the existing MBS fee range
.
MBSOPTS2  MOVE      TFCLM1,SAVCLM1
          MOVE      TFHFUND1,SAVHF1
          MOVE      TFHFTAB1,SAVTAB1
          MOVE      TFDAYC1,SAVFDAY1
.
          PACK      SDIM18 WITH TFCLM1,TFHFUND1,TFHFTAB1,TFDAYC1
          DISPLAY   *P1:4,*EF,*P20:4,*V2LON,*ULON,"MBS FEES",*HOFF;
.
          MOVE      SIX,VERT
          PACK      KEY23 WITH TFCLM1,TFHFUND1,TFHFTAB1,TFDAYC1,SP5
          IF        NEWFLG=1
            CALL      RSJHT1A1                 * newtfeaf
          ELSE
            CALL      RSJHTFE1                 * jhstfeaf
          ENDIF
NXTTFE2   IF        NEWFLG=1
            CALL      RKJHT1A1                 * newtfeaf
          ELSE
            CALL      RKJHTFE1                 * jhstfeaf
          ENDIF
          BRANCH    OVRCD OF NXT101
.
          PACK      DIM18 WITH TFCLM,TFHFUND,TFHFTAB,TFDAYC
          MATCH     DIM18,SDIM18
          GOTO      NXT101 IF NOT EQUAL
.
          DISPLAY   *P1:VERT,*V2LON,TFENDMB1;
          ADD       ONE,VERT
          GOTO      NXTTFE2
.
NXT101    DISPLAY   *P1:24,*EL;
          CALL      HITENTER
.
          MOVE      SAVCLM,TFCLM
          MOVE      SAVHF,TFHFUND
          MOVE      SAVTAB,TFHFTAB
          MOVE      SAVFDAY,TFDAYC
          MOVE      SAVMBS,TFENDMBS
.
NXT111    MOVE      SAVCLM1,TFCLM1
          MOVE      SAVHF1,TFHFUND1
          MOVE      SAVTAB1,TFHFTAB1
          MOVE      SAVFDAY1,TFDAYC1
.
          CALL      READISP2
.
          GOTO      TLDAY
.
INVMBS2   DISPLAY   *P1:24,*EL,*B,"Invalid MBS Fee. ";
          CALL      HITENTER
.
          GOTO      TLDAY
.
.         Check if the record exist or not
.
CHKREC    PACK      KEY23 WITH TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          IF        NEWFLG=1
            CALL      RDJHT1A1                * newtfeaf
          ELSE
            CALL      RDJHTFE1                * jhstfeaf
          ENDIF
          BRANCH    OVRCD OF ENDNO
.
          MATCH     ANSC,MODE1
          GOTO      RDCCLM IF EQUAL
.
          MATCH     ANSD,MODE1
          GOTO      DELCS IF EQUAL
.
          DISPLAY   *P1:24,*EL,*B:
                    "Theatre Fee Already Exists. ";
          CALL      HITENTER
.
          GOTO      KLDAY
.
ENDNO     MATCH     ANSI,MODE1
          GOTO      KPAT1 IF EQUAL
.
          DISPLAY   *P1:24,*EL,*B:
                    "Theatre Fee Does Not Exist. ";
          CALL      HITENTER
.
          GOTO      KLDAY
.
.         validate Theatre Fee entered - Global Update (Option 8)
.
CHKREC1   MOVE      CLMFLG,FORM1
          ADD       FNDFLG,FORM1
          ADD       TABFLG,FORM1
          ADD       MBSFLG,FORM1
.
          COMPARE   ZERO,FORM1
          GOTO      KINCR IF NOT EQUAL
.
          PACK      KEY23 WITH TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          IF        NEWFLG=1
            CALL      RDJHT1A1                * newtfeaf
          ELSE
            CALL      RDJHTFE1                * jhstfeaf
          ENDIF
          BRANCH    OVRCD,ENDNO1
          GOTO      KINCR
.
ENDNO1    DISPLAY   *P1:24,*EL,*B:
                    "Theatre Fee Does Not Exist. ";
          CALL      HITENTER
          GOTO      LDAY
.
.             INPUT PATIENT PORTION OF RATE  (ONE)
.
KPAT1     MOVE      ZERO,TFPAT1
          MOVE      ZERO,FORM82
....      KEYIN     *P35:12,*DV,SP10,*P35:12,*V2LON,TFPAT1;
          KEYIN     *P35:12,*DV,SP10,*P35:12,*V2LON,FORM82;
.
          MOVE      ZERO,TOTAL1
....      DISPLAY   *P35:12,*V2LON,TFPAT1;
          DISPLAY   *P35:12,*V2LON,FORM82;
          MOVE      FORM82,TFPAT1
          ADD       TFPAT1,TOTAL1
          ADD       TFHF1,TOTAL1
.
          DISPLAY   *P66:12,*V2LON,TOTAL1;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT HEALTH FUND PORTION OF RATE
.
KHF1      MOVE      ZERO,TFHF1
          MOVE      ZERO,FORM82
....      KEYIN     *P52:12,*DV,SP10,*P52:12,*V2LON,TFHF1;
          KEYIN     *P52:12,*DV,SP10,*P52:12,*V2LON,FORM82;
.
          MOVE      ZERO,TOTAL1
....      DISPLAY   *P52:12,*V2LON,TFHF1;
          DISPLAY   *P52:12,*V2LON,FORM82;
          MOVE      FORM82,TFHF1
          ADD       TFHF1,TOTAL1
          ADD       TFPAT1,TOTAL1
.
....      DISPLAY   *P66:12,*V2LON,TOTAL1;
          MOVE      TOTAL1,FORM82
          DISPLAY   *P66:12,*V2LON,FORM82;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT PATIENT PORTION OF RATE  (TWO)
.
KPAT2     MOVE      ZERO,TFPAT2
          KEYIN     *P35:13,*DV,SP10,*P35:13,*V2LON,TFPAT2;
.
          MOVE      ZERO,TOTAL2
          DISPLAY   *P35:13,*V2LON,TFPAT2;
          ADD       TFPAT2,TOTAL2
          ADD       TFHF2,TOTAL2
.
          DISPLAY   *P66:13,*V2LON,TOTAL2;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT HEALTH FUND PORTION OF RATE
.
KHF2      MOVE      ZERO,TFHF2
          KEYIN     *P52:13,*DV,SP10,*P52:13,*V2LON,TFHF2;
.
          MOVE      ZERO,TOTAL2
          DISPLAY   *P52:13,*V2LON,TFHF2;
          ADD       TFHF2,TOTAL2
          ADD       TFPAT2,TOTAL2
.
          DISPLAY   *P66:13,*V2LON,TOTAL2;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT PATIENT PORTION OF RATE  (THREE)
.
KPAT3     MOVE      ZERO,TFPAT3
          KEYIN     *P35:14,*DV,SP10,*P35:14,*V2LON,TFPAT3;
.
          MOVE      ZERO,TOTAL3
          DISPLAY   *P35:14,*V2LON,TFPAT3;
          ADD       TFPAT3,TOTAL3
          ADD       TFHF3,TOTAL3
.
          DISPLAY   *P66:14,*V2LON,TOTAL3;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT HEALTH FUND PORTION OF RATE
.
KHF3      MOVE      ZERO,TFHF3
          KEYIN     *P52:14,*DV,SP10,*P52:14,*V2LON,TFHF3;
.
          MOVE      ZERO,TOTAL3
          DISPLAY   *P52:14,*V2LON,TFHF3;
          ADD       TFHF3,TOTAL3
          ADD       TFPAT3,TOTAL3
.
          DISPLAY   *P66:14,*V2LON,TOTAL3;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT PATIENT PORTION OF RATE  (FOUR)
.
KPAT4     MOVE      ZERO,TFPAT4
          KEYIN     *P35:15,*DV,SP10,*P35:15,*V2LON,TFPAT4;
.
          MOVE      ZERO,TOTAL4
          DISPLAY   *P35:15,*V2LON,TFPAT4;
          ADD       TFPAT4,TOTAL4
          ADD       TFHF4,TOTAL4
.
          DISPLAY   *P66:15,*V2LON,TOTAL4;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT HEALTH FUND PORTION OF RATE
.
KHF4      MOVE      ZERO,TFHF4
          KEYIN     *P52:15,*DV,SP10,*P52:15,*V2LON,TFHF4;
.
          MOVE      ZERO,TOTAL4
          DISPLAY   *P52:15,*V2LON,TFHF4;
          ADD       TFHF4,TOTAL4
          ADD       TFPAT4,TOTAL4
.
          DISPLAY   *P66:15,*V2LON,TOTAL4;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT PATIENT PORTION OF RATE    (FIVE)
.
KPAT5     MOVE      ZERO,TFPAT5
          KEYIN     *P35:16,*DV,SP10,*P35:16,*V2LON,TFPAT5;
.
          MOVE      ZERO,TOTAL5
          DISPLAY   *P35:16,*V2LON,TFPAT5;
          ADD       TFPAT5,TOTAL5
          ADD       TFHF5,TOTAL5
.
          DISPLAY   *P66:16,*V2LON,TOTAL5;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT HEALTH FUND PORTION OF RATE
.
KHF5      MOVE      ZERO,TFHF5
          KEYIN     *P52:16,*DV,SP10,*P52:16,*V2LON,TFHF5;
.
          MOVE      ZERO,TOTAL5
          DISPLAY   *P52:16,*V2LON,TFHF5;
          ADD       TFHF5,TOTAL5
          ADD       TFPAT5,TOTAL5
.
          DISPLAY   *P66:16,*V2LON,TOTAL5;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT PATIENT PORTION OF RATE  (SIX)
.
KPAT6     MOVE      ZERO,TFPAT6
          KEYIN     *P35:17,*DV,SP10,*P35:17,*V2LON,TFPAT6;
.
          MOVE      ZERO,TOTAL6
          DISPLAY   *P35:17,*V2LON,TFPAT6;
          ADD       TFPAT6,TOTAL6
          ADD       TFHF6,TOTAL6
.
          DISPLAY   *P66:17,*V2LON,TOTAL6;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT HEALTH FUND PORTION OF RATE
.
KHF6      MOVE      ZERO,TFHF6
          KEYIN     *P52:17,*DV,SP10,*P52:17,*V2LON,TFHF6;
.
          MOVE      ZERO,TOTAL6
          DISPLAY   *P52:17,*V2LON,TFHF6;
          ADD       TFHF6,TOTAL6
          ADD       TFPAT6,TOTAL6
.
          DISPLAY   *P66:17,*V2LON,TOTAL6;
          MOVE      ONE,CHG
          MATCH     ANSC,MODE
          GOTO      SFIELD IF EQUAL
.
.             INPUT NUMBER OF INVOICES
.
KINVNO    MOVE      ZERO,TFNINV
          KEYIN     *P32:19,*EL,*V2LON,TFNINV;
.
          BRANCH    TFNINV,OKINV,OKINV
.
          DISPLAY   *P1:24,*EL,*B,"Number Can Only Be 1 or 2. ";
          CALL      HITENTER
          GOTO      KINVNO
.
OKINV     MOVE      ONE,CHG
          DISPLAY   *P32:19,*V2LON,TFNINV;
.
.       FALLS THRU IN INSERT MODE
.
SFIELD    CALL      MAINQST 
.
          COMPARE   ZERO,CCITEM
          GOTO      POSTCNT IF EQUAL
          GOTO      ENDPST IF LESS
          MOVE      "C",MODE
.
SBRCH     BRANCH    CCITEM,KPAT1,KHF1,KPAT2,KHF2,KPAT3,KHF3,KPAT4,KHF4,KPAT5:
                           KHF5,KPAT6,KHF6,KINVNO
.
          BEEP
          GOTO      SFIELD
.
POSTCNT   MATCH     ANSC,MODE1
          GOTO      TFEEUP IF EQUAL
.
          MATCH     ANSI,MODE1
          GOTO      TFEEWR IF EQUAL
          GOTO      SFIELD 
.
.         INPUT CLAIM CODE 
.
KCLAIM    CALL      INITVAR
          MOVE      SP3,SAVCLM
          MOVE      SP20,CLDES
          MOVE      ZERO,CLMFLG
          MOVE      ZERO,STHCFLG
          CALL      DISPCLM
          MOVE      CODECL,CODE
          MOVE      TWENTY6,ECOL
          MOVE      FIVE,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      ONE,CNEWDS
          CALL      PATCODKY 
          BRANCH    EXIT,KCLAI00,START
          MOVE      ACODE,TFCLM
          GOTO      KCLAIM1
.
KCLAI00   PACK      CLDES,ALL,SP6,SP10
          DISPLAY   *P26:5,*EL,*V2LON,CLDES;
          MOVE      ONE,CLMFLG
          GOTO      KFUND
.
KCLAIM1   MOVE      TDESC,CLDES
          MOVE      TCFORM6,THCFLG        * Theatre Classification to use
          MOVE      THCFLG,STHCFLG
.
          DISPLAY   *P26:5,*V2LON,TFCLM,*HOFF,*P35:5,CLDES;
          MOVE      TFCLM,SAVCLM
          GOTO      KFUND
.
.         INPUT HEALTH FUND 
.
KFUND     MOVE      SP6,TFHFUND
          MOVE      SP30,FCODDES
          MOVE      SP8,TFHFTAB
          MOVE      SP30,FTABDES
          MOVE      SP6,SAVHF
          MOVE      SP4,SAVTAB
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,TABFLG
          MOVE      STHCFLG,THCFLG
.
          DISPLAY   *P26:6,*EL,*P26:7,*EL;
          MOVE      TWENTY6,ECOL
          MOVE      SIX,EVERT
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY
          BRANCH    EXIT,KFUND0,START,KDAY
          MOVE      HCODE,TFHFUND
          GOTO      KFUND1
.
KFUND0    PACK      FCODDES,ALL,SP6,SP20
          DISPLAY   *P26:6,*EL,*V2LON,FCODDES;
          PACK      FTABDES,ALL,SP6,SP20
          DISPLAY   *P26:7,*EL,*V2LON,FTABDES;
.
          MOVE      ONE,FNDFLG
          MOVE      ONE,TABFLG
          GOTO      KDAY
.
KFUND1    MOVE      HFNAME,FCODDES
          MOVE      HFBAND,THCFLG
          DISPLAY   *P26:6,*V2LON,TFHFUND,*HOFF,*P35:6,FCODDES;
          MOVE      TFHFUND,SAVHF
          GOTO      KTABLE
.
.         INPUT HEALTH FUND TABLE
.
KTABLE    MOVE      SP8,TFHFTAB
          MOVE      SP30,FTABDES
          MOVE      SP4,SAVTAB
          MOVE      ZERO,TABFLG
          MOVE      ZERO,CKYIMODE
          MOVE      TWENTY6,ECOL
          MOVE      SEVEN,EVERT
          MOVE      HCODE,MHFUND
.
          MATCH     SP6,HCODE
          GOTO      KTABLE1 IF EQUAL
.
          CALL      PATTBLKY
          BRANCH    EXIT,KTABLE0,START
          MOVE      HFTABL,TFHFTAB
          MOVE      HFNAME,FTABDES
          GOTO      KTABLE1
.
KTABLE0   PACK      FTABDES,ALL,SP6,SP20
          DISPLAY   *P26:7,*EL,*V2LON,FTABDES;
          MOVE      ONE,TABFLG
          GOTO      KDAY
.
KTABLE1   DISPLAY   *P26:7,*V2LON,TFHFTAB,*HOFF,*P35:7,FTABDES;
          MOVE      TFHFTAB,SAVTAB
.
.       Input whether or not this is a Day Case Rate
.
KDAY      KEYIN     *P26:8,*EL,*V2LON,ANS,*P26:8,*DV,ANS
          REP       UPPLOW,ANS
.
          MATCH     EXITCHAR,ANS
          GOTO      START IF EQUAL
.
          MOVE      DNO,DANS
          MOVE      SP1,TFDAYC
.
          CMATCH    ANSN,ANS
          GOTO      DAYC IF EQUAL
.
          CMATCH    ANSY,ANS
          IF        !@EQUAL
            BEEP     
            GOTO      KDAY
          ENDIF
.
          MOVE      DYES,DANS
          MOVE      ANSD,TFDAYC
.
DAYC      DISPLAY   *P26:8,*V2LON,DANS;
          MOVE      DANS,SAVDANS
          MOVE      TFDAYC,SAVDAYC
.
.             INPUT LAST MBS IN RANGE
.
LDAY      MOVE      DTCLS0,DTCLSS
          LOAD      DTCLSS,THCFLG,DTCLS1,DTCLS2,DTCLS3,DTCLS4,DTCLS5,DTCLS6:
                                  DTCLS7,DTCLS8,DTCLS9,DTCLS10,DTCLS11,DTCLS12:
                                  DTCLS13,DTCLS14,DTCLS15,DTCLS16
.
          MOVE      SP5,TFENDMBS
          MOVE      SP20,TBDESC
          MOVE      SP5,SAVMBS
          MOVE      ZERO,MBSFLG
.
          COMPARE   ZERO,THCFLG
          GOTO      MBSOPSS IF NOT EQUAL
.
          KEYIN     *P1:9,*DV,DTCLSS,*P26:9,*EL,*V2LON,TFENDMBS;
          RESET     TFENDMBS
          GOTO      LDAY1 IF NOT EOS
.
          PACK      TBDESC,ALL,SP6,SP10
          DISPLAY   *P26:9,*EL,*V2LON,TBDESC;
          MOVE      ONE,MBSFLG
          GOTO      LDAY3
.
LDAY1     CMATCH    "?",TFENDMBS
          GOTO      MBSOPTS1 IF EQUAL
.
.         Check if the exit character was input
.
          CMATCH    EXITCHAR,TFENDMBS
          GOTO      START IF EQUAL
.
          TYPE      TFENDMBS
          GOTO      LDAY2 IF NOT EQUAL
          MOVE      SP20,TBDESC
          MOVE      TFENDMBS,FORM5
          MOVE      FORM5,TFENDMBS
          DISPLAY   *P26:9,*EL,*V2LON,TFENDMBS;
          GOTO      LDAY3
.
LDAY2     DISPLAY   *P1:24,*EL,*B,"Input Must be Numeric. ";
          CALL      HITENTER
          GOTO      LDAY
.
.         Check for a valid theatre band
.
LDAY3     MOVE      TFENDMBS,SAVMBS
          COMPARE   EIGHT,OPTION
          GOTO      CHKREC1 IF EQUAL
          GOTO      KHCLM
.
.          INPUT  $ OR % INCREASE
.
KINCR     MOVE      SP1,INCR
          PACK      INCDESC,SP10,SP10,SP10
          KEYIN     *P26:11,*EL,*V2LON,INCR;
.
          BRANCH    INCR,KINCR2,KINCR2
.
          DISPLAY   *P1:24,*EL,*B,"Must be 1 or 2 Only. ";
          CALL      HITENTER
          GOTO      KINCR
.
KINCR2    LOAD      INCDESC,INCR,INCDESC1,INCDESC2
          DISPLAY   *P26:11,*EL,*V2LON,INCDESC,*P45:12,*EL,*P45:13,*EL;
          CALL      DISPRB
          MOVE      ANSI,MODE 
.  
.       INPUT PATIENT PORTION OF RATE  (ONE) 
.  
KPPORT1   KEYIN     *P18:15,*V2LON,PPORT1,*P18:15,*DV,PPORT1;
          MOVE      PPORT1,REBTOT1
.
          MATCH     ANSC,MODE
          GOTO      KHPORT1A IF EQUAL
.
.       INPUT HEALTH FUND PORTION OF RATE  (ONE)
.
KHPORT1   KEYIN     *P38:15,*V2LON,RPORT1,*P38:15,*DV,RPORT1;
.
          MATCH     ANSI,MODE
          GOTO      KHPORT1A IF EQUAL
          MOVE      PPORT1,REBTOT1
.
KHPORT1A  ADD       RPORT1,REBTOT1
          DISPLAY   *P53:15,*V2LON,REBTOT1;
.
          MATCH     ANSC,MODE
          GOTO      SFIELD2 IF EQUAL
.
.       INPUT PATIENT PORTION OF RATE  (TWO)
.
KPPORT2   KEYIN     *P18:16,*V2LON,PPORT2,*P18:16,*DV,PPORT2;
          MOVE      PPORT2,REBTOT2
.
          MATCH     ANSC,MODE
          GOTO      KHPORT2A IF EQUAL
.
.       INPUT HEALTH FUND PORTION OF RATE  (TWO)
.
KHPORT2   MOVE      ZERO,RPORT2
          KEYIN     *P38:16,*V2LON,RPORT2,*P38:16,*DV,RPORT2;
.
          MATCH     ANSI,MODE
          GOTO      KHPORT2A IF EQUAL
          MOVE      PPORT2,REBTOT2
.
KHPORT2A  ADD       RPORT2,REBTOT2
          DISPLAY   *P53:16,*V2LON,REBTOT2;
.
          MATCH     ANSC,MODE
          GOTO      SFIELD2 IF EQUAL
.
.       INPUT PATIENT PORTION OF RATE  (THREE)
.
KPPORT3   KEYIN     *P18:17,*V2LON,PPORT3,*P18:17,*DV,PPORT3;
          MOVE      PPORT3,REBTOT3
.
          MATCH     ANSC,MODE
          GOTO      KHPORT3A IF EQUAL
.
.       INPUT HEALTH FUND PORTION OF RATE  (THREE)
.
KHPORT3   KEYIN     *P38:17,*V2LON,RPORT3,*P38:17,*DV,RPORT3;
.
          MATCH     ANSI,MODE
          GOTO      KHPORT3A IF EQUAL
          MOVE      PPORT3,REBTOT3
.
KHPORT3A  ADD       RPORT3,REBTOT3
          DISPLAY   *P53:17,*V2LON,REBTOT3;
.
          MATCH     ANSC,MODE
          GOTO      SFIELD2 IF EQUAL
.
.       INPUT PATIENT PORTION OF RATE  (FOUR)
.
KPPORT4   KEYIN     *P18:18,*V2LON,PPORT4,*P18:18,*DV,PPORT4;
          MOVE      PPORT4,REBTOT4
.
          MATCH     ANSC,MODE
          GOTO      KHPORT4A IF EQUAL
.
.       INPUT HEALTH FUND PORTION OF RATE  (FOUR)
.
KHPORT4   KEYIN     *P38:18,*V2LON,RPORT4,*P38:18,*DV,RPORT4;
.
          MATCH     ANSI,MODE
          GOTO      KHPORT4A IF EQUAL
          MOVE      PPORT4,REBTOT4
.
KHPORT4A  ADD       RPORT4,REBTOT4
          DISPLAY   *P53:18,*V2LON,REBTOT4;
.
          MATCH     ANSC,MODE
          GOTO      SFIELD2 IF EQUAL
.
.       INPUT PATIENT PORTION OF RATE  (FIVE)
.
KPPORT5   KEYIN     *P18:19,*V2LON,PPORT5,*P18:19,*DV,PPORT5; 
          MOVE      PPORT5,REBTOT5
.
          MATCH     ANSC,MODE
          GOTO      KHPORT5A IF EQUAL
.
.       INPUT HEALTH FUND PORTION OF RATE  (FIVE)
.
KHPORT5   KEYIN     *P38:19,*V2LON,RPORT5,*P38:19,*DV,RPORT5;
.
          MATCH     ANSI,MODE
          GOTO      KHPORT5A IF EQUAL
          MOVE      PPORT5,REBTOT5
.
KHPORT5A  ADD       RPORT5,REBTOT5
          DISPLAY   *P53:19,*V2LON,REBTOT5;
.
          MATCH     ANSC,MODE
          GOTO      SFIELD2 IF EQUAL
.
.       INPUT PATIENT PORTION OF RATE  (SIX)
.
KPPORT6   KEYIN     *P18:20,*V2LON,PPORT6,*P18:20,*DV,PPORT6;
          MOVE      PPORT6,REBTOT6
.
          MATCH     ANSC,MODE
          GOTO      KHPORT6A IF EQUAL
.
.       INPUT HEALTH FUND PORTION OF RATE  (SIX)
.
KHPORT6   KEYIN     *P38:20,*V2LON,RPORT6,*P38:20,*DV,RPORT6;
.
          MATCH     ANSI,MODE
          GOTO      KHPORT6A IF EQUAL
          MOVE      PPORT6,REBTOT6
.
KHPORT6A  ADD       RPORT6,REBTOT6
          DISPLAY   *P53:20,*V2LON,REBTOT6;
.
SFIELD2   CALL      MAINQST 
.
          COMPARE   ZERO,CCITEM
          GOTO      UPGLOB IF EQUAL
          GOTO      GLOBAL IF LESS
          MOVE      "C",MODE
.
          BRANCH    CCITEM,KPPORT1,KHPORT1,KPPORT2,KHPORT2,KPPORT3,KHPORT3:
                           KPPORT4,KHPORT4,KPPORT5,KHPORT5,KPPORT6,KHPORT6
.
          BEEP
          GOTO      SFIELD2
.
.         INPUT CLAIM CODE  (TWO)
.
KHCLM     MOVE      SP3,TFCLM1
          MOVE      SP3,SAVCLM1
          MOVE      SP20,CLDES1
.
          BRANCH    CLMFLG,KHCLM1
          GOTO      KHCLM2
.
KHCLM1    PACK      CLDES1,ALL,SP6,SP10
          DISPLAY   *P26:12,*V2LON,CLDES1;
.
          COMPARE   ZERO,CLMFLG
          GOTO      KHFND IF NOT EQUAL
          CALL      ALLERROR
          GOTO      KHCLM
.
KHCLM2    MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      TEN2,EVERT
          MOVE      CODECL,CODE 
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          BRANCH    EXIT,START,START
          MOVE      ACODE,TFCLM1
          MOVE      TDESC,CLDES1
          MOVE      MODE1,MODE
          MOVE      TCFORM6,THCFLG1
          DISPLAY   *P26:12,*V2LON,TFCLM1,*HOFF,*P35:12,CLDES1;
          MOVE      TFCLM1,SAVCLM1
          GOTO      KHFND
.
.         "ALL" error message
.
ALLERROR  DISPLAY   *P1:24,*EL,*B,"Must Not be All Here. ";
          CALL      HITENTER
          RETURN
+
.         INPUT HEALTH FUND (TWO)
.
KHFND     MOVE      SP6,TFHFUND1
          MOVE      SP30,FCODDES1
          MOVE      SP8,TFHFTAB1
          MOVE      SP30,FTABDES1
          MOVE      SP6,SAVHF1
          MOVE      SP4,SAVTAB1
          MOVE      ZERO,NOFUND
.
          BRANCH    FNDFLG,KHFND1
.
          DISPLAY   *P26:13,*EL,*P26:14,*EL
          MOVE      TWENTY6,ECOL
          MOVE      TEN3,EVERT
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY
          BRANCH    EXIT,KHFND1,START,KHFND2
          MOVE      HCODE,TFHFUND1
          GOTO      KHFND2
.
KHFND1    PACK      FCODDES1,ALL,SP6,SP20
          DISPLAY   *P26:13,*EL,*V2LON,FCODDES1;
.
          COMPARE   ZERO,FNDFLG
          GOTO      KHFND1A IF NOT EQUAL
          CALL      ALLERROR
          GOTO      KHFND
.
KHFND1A   PACK      FTABDES1,ALL,SP6,SP20
          DISPLAY   *P26:14,*EL,*V2LON,FTABDES1;
          GOTO      TKDAY
.
KHFND2    MATCH     SP3,TFHFUND1
          GOTO      KHFND2B IF NOT EQUAL
.
          MATCH     SP3,SAVCLM1
          GOTO      TKDAY IF EQUAL
.
.         Allow for claim codes with no health fund
.
          PACK      KEY5 WITH CODECL,SAVCLM1
          CALL      RDCODE1
          BRANCH    OVRCD OF INVFND1
.
          COMPARE   ZERO,TCFORM6
          GOTO      INVFND1 IF LESS
.
.         Use the Assoc. No. from the patcodes file for their classification
.
          MOVE      TCFORM6,HFBAND
.         MOVE      ONE,NOFUND          * this Claim Code has no health fund
.
.         Make sure it's copying from a single health fund table
.
          COMPARE   ZERO,TABFLG
          GOTO      INVFND1 IF NOT EQUAL
.
.         Check if the exit character was input
.
KHFND2B   MOVE      HFBAND,THCFLG1
.
.         Only allow if both are using banding or range of MBS
.
          COMPARE   ZERO,HFBAND
          GOTO      KHFND3 IF EQUAL
.
.         Using banding
.
          COMPARE   ZERO,THCFLG
          GOTO      KHFND4 IF NOT EQUAL
          GOTO      INVFND2
.
KHFND3    COMPARE   ZERO,THCFLG
          GOTO      INVFND2 IF NOT EQUAL
.
KHFND4    BRANCH    NOFUND OF TKDAY     * No health fund
          DISPLAY   *P26:13,*V2LON,TFHFUND1,*HOFF,*P35:13,FCODDES1;
          MOVE      TFHFUND1,SAVHF1
          GOTO      KHTABL
.
INVFND1   DISPLAY   *P1:24,*EL,*B,"Invalid Health Fund Name. ";
          CALL      HITENTER
          GOTO      KHFND
.
INVFND2   DISPLAY   *P1:24,*EL,*B,"Different Theatre Charging. ";
          CALL      HITENTER
          GOTO      KHFND
.
.         Input Health Fund Table (TWO)
.
KHTABL    MOVE      SP8,TFHFTAB1
          MOVE      SP4,SAVTAB1
          MOVE      SP30,FTABDES1
.
          BRANCH    TABFLG,KHTABL1
.
          MOVE      TWENTY6,ECOL
          MOVE      TEN4,EVERT
          MOVE      ZERO,CKYIMODE
          MOVE      HCODE,MHFUND
.
          MATCH     SP6,HCODE
          GOTO      KHTABL2 IF EQUAL
.
          CALL      PATTBLKY
          BRANCH    EXIT,KHTABL1,START
          MOVE      HFTABL,TFHFTAB1
          GOTO      KHTABL2
.
KHTABL1   PACK      FTABDES1,ALL,SP6,SP20
          DISPLAY   *P26:14,*EL,*V2LON,FTABDES1;
.
          COMPARE   ZERO,TABFLG
          GOTO      TKDAY IF NOT EQUAL
          CALL      ALLERROR
          GOTO      KHTABL
.
KHTABL2   MOVE      HFNAME,FTABDES1
          DISPLAY   *P26:14,*V2LON,TFHFTAB1,*HOFF,*P35:14,FTABDES1;
          MOVE      TFHFTAB1,SAVTAB1
.
.         Input whether or not this is a Day Case Rate
.
TKDAY     KEYIN     *P26:15,*V2LON,ANS,*P26:15,*DV,ANS;
          RESET     ANS
          REP       UPPLOW,ANS
.
.         Check if the exit character was input
.
          MATCH     EXITCHAR,ANS
          GOTO      START IF EQUAL
.
          MOVE      DNO,DANS1
          MOVE      SP1,TFDAYC1
.
          MATCH     ANSY,ANS
          GOTO      TDAYC IF NOT EQUAL
.
          MOVE      DYES,DANS1
          MOVE      ANSD,TFDAYC1
.
TDAYC     DISPLAY   *P26:15,*V2LON,DANS1;
          MOVE      DANS1,SAVDANS1
          MOVE      TFDAYC1,SAVDAYC1
.
.             INPUT LAST MBS IN RANGE
.
TLDAY     MOVE      DTCLS0,DTCLSS
          LOAD      DTCLSS,THCFLG1,DTCLS1,DTCLS2,DTCLS3,DTCLS4,DTCLS5,DTCLS6:
                                   DTCLS7,DTCLS8,DTCLS9,DTCLS10,DTCLS11,DTCLS12:
                                   DTCLS13,DTCLS14,DTCLS15,DTCLS16
.
          MOVE      SP5,TFENDMB1
          MOVE      SP20,TBDESC1
          MOVE      SP5,SAVMBS1
.
          BRANCH    MBSFLG,TLDAY1
.
          COMPARE   ZERO,THCFLG1
          GOTO      MBSOPRR IF NOT EQUAL
.
          KEYIN     *P1:16,*DV,DTCLSS,*P26:16,*EL,*V2LON,TFENDMB1;
          RESET     TFENDMB1
          GOTO      TLDAY2 IF NOT EOS
.
TLDAY1    PACK      TBDESC1,ALL,SP6,SP10
          DISPLAY   *P1:16,DTCLSS,*P26:16,*EL,*V2LON,TBDESC1;
.
          COMPARE   ZERO,MBSFLG
          GOTO      REKEY3 IF NOT EQUAL
          CALL      ALLERROR
          GOTO      TLDAY
.
TLDAY2    CMATCH    "?",TFENDMB1
          GOTO      MBSOPTS2 IF EQUAL
.
.         Check if the exit character was input
.
          CMATCH    EXITCHAR,TFENDMB1
          GOTO      START IF EQUAL
.
          TYPE      TFENDMB1
          GOTO      TLDAY3 IF NOT EQUAL
          MOVE      SP20,TBDESC1
          MOVE      TFENDMB1,FORM5
          MOVE      FORM5,TFENDMB1
          DISPLAY   *P26:16,*EL,*V2LON,TFENDMB1;
.
          MOVE      TFENDMB1,SAVMBS1
          MOVE      MODE1,MODE
          GOTO      REKEY3
.
TLDAY3    DISPLAY   *P1:24,*EL,*B,"Input Must be Numeric. ";
          CALL      HITENTER
          GOTO      TLDAY
.
.         Check for a valid Theatre Band
.
CHKTB2    ENDSET    TFENDMB1
          APPEND    SP5,TFENDMB1
          RESET     TFENDMB1
.
          PACK      KEY5 WITH CODETB,TFENDMB1
          CALL      RDCODE1
          BRANCH    OVRCD OF INVTB2
.
          MOVE      TDESC,TBDESC1
          DISPLAY   *P26:16,*EL,*V2LON,TFENDMB1,*HOFF,*P35:16,TBDESC1;
          MOVE      TFENDMB1,SAVMBS1
          MOVE      MODE1,MODE
          GOTO      REKEY3
.
INVTB2    DISPLAY   *P1:24,*EL,*B,"Invalid Theatre Band. ";
          CALL      HITENTER
          GOTO      TLDAY
.
.        Ok to Continue for Duplication
.
REKEY3    DISPLAY   *P1:23,*EF
          CALL      POSTQST
.
          BRANCH    CEXIT,UPDUPL,REKEY3A,START
.
          BEEP
          GOTO      REKEY3
.
REKEY3A   MOVE      ZERO,THCFLG
          GOTO      DUPLIC
.
.         Scanning of Global Update
.
UPGLOB    DISPLAY   *P1:24,*EL,*P40:24,"Claim Code : ",*P60:24,"Scanning : ";
          PACK      KEY23 WITH SP30
          IF        NEWFLG=1
            CALL      RSJHT1A1                 * newtfeaf
          ELSE
            CALL      RSJHTFE1                 * jhstfeaf
          ENDIF
.
UPGLOB1   IF        NEWFLG=1
            CALL      RKJHT1A1                 * newtfeaf
          ELSE
            CALL      RKJHTFE1                 * jhstfeaf
          ENDIF
          BRANCH    OVRCD,START
.
          DISPLAY   *P72:24,TFCLM;
.
          COMPARE   ONE,CLMFLG
          GOTO      UPGLOB2 IF EQUAL
.
          MATCH     SAVCLM,TFCLM
          GOTO      UPGLOB1 IF NOT EQUAL
.
UPGLOB2   COMPARE   ONE,FNDFLG
          GOTO      UPGLOB3 IF EQUAL
.
          MATCH     SAVHF,TFHFUND
          GOTO      UPGLOB1 IF NOT EQUAL
.
UPGLOB3   COMPARE   ONE,TABFLG
          GOTO      UPGLOB4 IF EQUAL
.
          MATCH     SAVTAB,TFHFTAB
          GOTO      UPGLOB1 IF NOT EQUAL
.
UPGLOB4   MATCH     SAVDAYC,TFDAYC
          GOTO      UPGLOB1 IF NOT EQUAL
.
          COMPARE   ONE,MBSFLG
          GOTO      UPGLOB5 IF EQUAL
.
          MATCH     SAVMBS,TFENDMBS
          GOTO      UPGLOB1 IF NOT EQUAL
.
UPGLOB5   COMPARE   ONE,INCR
          GOTO      UPGLOB6 IF NOT EQUAL
.
          ADD       PPORT1,TFPAT1
          ADD       RPORT1,TFHF1
          ADD       PPORT2,TFPAT2
          ADD       RPORT2,TFHF2
          ADD       PPORT3,TFPAT3
          ADD       RPORT3,TFHF3
          ADD       PPORT4,TFPAT4
          ADD       RPORT4,TFHF4
          ADD       PPORT5,TFPAT5
          ADD       RPORT5,TFHF5
          ADD       PPORT6,TFPAT6
          ADD       RPORT6,TFHF6
          GOTO      UPGLOB7
.
UPGLOB6   MOVE      PPORT1,PPORT
          DIV       "100",PPORT
          ADD       ONE,PPORT
          MULT      PPORT,TFPAT1
          MOVE      RPORT1,RPORT
          DIV       "100",RPORT
          ADD       ONE,RPORT
          MULT      RPORT,TFHF1
.
          MOVE      PPORT2,PPORT
          DIV       "100",PPORT
          ADD       ONE,PPORT
          MULT      PPORT,TFPAT2
          MOVE      RPORT2,RPORT
          DIV       "100",RPORT
          ADD       ONE,RPORT
          MULT      RPORT,TFHF2
.
          MOVE      PPORT3,PPORT
          DIV       "100",PPORT
          ADD       ONE,PPORT
          MULT      PPORT,TFPAT3
          MOVE      RPORT3,RPORT
          DIV       "100",RPORT
          ADD       ONE,RPORT
          MULT      RPORT,TFHF3
.
          MOVE      PPORT4,PPORT
          DIV       "100",PPORT
          ADD       ONE,PPORT
          MULT      PPORT,TFPAT4
          MOVE      RPORT4,RPORT
          DIV       "100",RPORT
          ADD       ONE,RPORT
          MULT      RPORT,TFHF4
.
          MOVE      PPORT5,PPORT
          DIV       "100",PPORT
          ADD       ONE,PPORT
          MULT      PPORT,TFPAT5
          MOVE      RPORT5,RPORT
          DIV       "100",RPORT
          ADD       ONE,RPORT
          MULT      RPORT,TFHF5
.
          MOVE      PPORT6,PPORT
          DIV       "100",PPORT
          ADD       ONE,PPORT
          MULT      PPORT,TFPAT6
          MOVE      RPORT6,RPORT
          DIV       "100",RPORT
          ADD       ONE,RPORT
          MULT      RPORT,TFHF6
.
UPGLOB7   DISPLAY   *P55:24,*V2LON,TFCLM;
.
          IF        NEWFLG=1
            CALL      UPJHT1A1                * newtfeaf
          ELSE
            CALL      UPJHTFE1                * jhstfeaf
          ENDIF
          GOTO      UPGLOB1
.
.
.         Scanning of Duplication Update
.
UPDUPL    MOVE      CLMFLG,FORM1                * Initialise check
          MULT      FNDFLG,FORM1
          MULT      TABFLG,FORM1
          MULT      MBSFLG,FORM1
          BRANCH    FORM1,ERRDUP
.
.         Check if there are any changes (ie. make sure we aren't copying
.         a combination to itself).
.
          PACK      DIM25,SAVCLM,SAVHF,SAVTAB,SAVDANS,SAVMBS
          PACK      SDIM25,SAVCLM1,SAVHF1,SAVTAB1,SAVDANS1,SAVMBS1
.
          MATCH     DIM25,SDIM25
          GOTO      ERRDUP1 IF EQUAL
.
          MOVE      SP20,SAVKEY
          DISPLAY   *P1:24,*EL,*P40:24,"Claim Code : ",*P60:24,"Scanning :";
.
          PACK      KEY23 WITH SP20
          PACK      KEY23,SAVCLM,SP20
          IF        NEWFLG=1
            CALL      RSJHT1A1                 * newtfeaf
          ELSE
            CALL      RSJHTFE1                 * jhstfeaf
          ENDIF
UPDUPL3   IF        NEWFLG=1
            CALL      RKJHT1A1                 * newtfeaf
          ELSE
            CALL      RKJHTFE1                 * jhstfeaf
          ENDIF
          BRANCH    OVRCD,DUPLFIN
.
          BRANCH    CLMFLG,UPDUPL30           * we are doing all claims
          MATCH     SAVCLM,TFCLM              * check the claim
          GOTO      DUPLFIN IF NOT EQUAL      * finish
.
UPDUPL30  PACK      SAVKEY WITH TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
.
          MOVE      TFHF1,SAVFHF1
          MOVE      TFHF2,SAVFHF2
          MOVE      TFHF3,SAVFHF3
          MOVE      TFHF4,SAVFHF4
          MOVE      TFHF5,SAVFHF5
          MOVE      TFHF6,SAVFHF6
.
          MOVE      TFPAT1,SAVFPAT1
          MOVE      TFPAT2,SAVFPAT2
          MOVE      TFPAT3,SAVFPAT3
          MOVE      TFPAT4,SAVFPAT4
          MOVE      TFPAT5,SAVFPAT5
          MOVE      TFPAT6,SAVFPAT6
.
          MOVE      TFNINV,SAVNINV
.
          DISPLAY   *P72:24,*EL,TFCLM;
.
.         Are we doing all claim code ?
.
          BRANCH    CLMFLG OF UPDUPL4
.
.         No. Check if this is the claim code we want to change
.
          MATCH     SAVCLM,TFCLM
          GOTO      UPDUPL3 IF NOT EQUAL
.
.         Change to the new claim code
.
          MOVE      TFCLM1,TFCLM
.
.         Are we doing all funds ?
.
UPDUPL4   BRANCH    FNDFLG OF UPDUPL5
.
.         No. Check if this is the fund we want to change
.
          MATCH     SAVHF,TFHFUND
          GOTO      UPDUPL3 IF NOT EQUAL
.
.         Change to the new fund
.
          MOVE      TFHFUND1,TFHFUND
.
.         Are we doing all tables ?
.
UPDUPL5   BRANCH    TABFLG OF UPDUPL6
.
.         No. Check if this is the table we want to change
.
          MATCH     SAVTAB,TFHFTAB
          GOTO      UPDUPL3 IF NOT EQUAL
.
.         Change to the new table
.
          MOVE      TFHFTAB1,TFHFTAB
.
.         Are we doing day case rate ?
.
UPDUPL6   MATCH     SAVDAYC,TFDAYC
          GOTO      UPDUPL3 IF NOT EQUAL
.
          MOVE      SAVDAYC1,TFDAYC
.
.         Are we doing all MBS ?
.
          BRANCH    MBSFLG OF UPDUPL7
.
.         No.  Check if this is the MBS we want to change
.
          MATCH     SAVMBS,TFENDMBS
          GOTO      UPDUPL3 IF NOT EQUAL
.
.         Change to the new MBS
.
          MOVE      TFENDMB1,TFENDMBS
.
UPDUPL7   MATCH     SP6,TFHFUND
          GOTO      UPDUPL8 IF EQUAL
.
          PACK      KEY14 WITH TFHFUND,TFHFTAB,SP10
          CALL      RDFUND1
          BRANCH    OVRCD,UPDUPL3
.
UPDUPL8   MOVE      SP30,KEY23
          PACK      KEY23 WITH TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          IF        NEWFLG=1
            CALL      RDJHT1A1                * newtfeaf
          ELSE
            CALL      RDJHTFE1                * jhstfeaf
          ENDIF
          BRANCH    OVRCD,UPDUPL9
.
DUPL1     DISPLAY   *P55:24,*V2LON,TFCLM;
.
          MOVE      SAVFHF1,TFHF1
          MOVE      SAVFHF2,TFHF2
          MOVE      SAVFHF3,TFHF3
          MOVE      SAVFHF4,TFHF4
          MOVE      SAVFHF5,TFHF5
          MOVE      SAVFHF5,TFHF6
.
          MOVE      SAVFPAT1,TFPAT1
          MOVE      SAVFPAT2,TFPAT2
          MOVE      SAVFPAT3,TFPAT3
          MOVE      SAVFPAT4,TFPAT4
          MOVE      SAVFPAT5,TFPAT5
          MOVE      SAVFPAT6,TFPAT6
          MOVE      SAVNINV,TFNINV
.
          IF        NEWFLG=1
            CALL      UPJHT1A1                * newtfeaf
          ELSE
            CALL      UPJHTFE1                * jhstfeaf
          ENDIF
          GOTO      UPDUPL10
.
UPDUPL9   DISPLAY   *P55:24,*V2LON,TFCLM;
.
          MOVE      SAVFHF1,TFHF1
          MOVE      SAVFHF2,TFHF2
          MOVE      SAVFHF3,TFHF3
          MOVE      SAVFHF4,TFHF4
          MOVE      SAVFHF5,TFHF5
          MOVE      SAVFHF5,TFHF6
.
          MOVE      SAVFPAT1,TFPAT1
          MOVE      SAVFPAT2,TFPAT2
          MOVE      SAVFPAT3,TFPAT3
          MOVE      SAVFPAT4,TFPAT4
          MOVE      SAVFPAT5,TFPAT5
          MOVE      SAVFPAT6,TFPAT6
.
          MOVE      SAVNINV,TFNINV
          IF        NEWFLG=1
            CALL      WRJHT1A1                * newtfeaf
          ELSE
            CALL      WRJHTFE1                * jhstfeaf
          ENDIF
.
UPDUPL10  MOVE      SAVKEY,KEY23
          IF        NEWFLG=1
            CALL      RDJHT1A1                * newtfeaf
          ELSE
            CALL      RDJHTFE1                * jhstfeaf
          ENDIF
.
          GOTO      UPDUPL3
.
ERRDUP    DISPLAY   *P1:24,*EL,*B:
                    "At Least One of the Fields Must Not be ALL. ";
          CALL      HITENTER
          GOTO      REKEY3
.
ERRDUP1   DISPLAY   *P1:24,*EL,*B:
                    "The FROM and TO Sections Cannot be Identical. ";
          CALL      HITENTER
          GOTO      REKEY3
.
DUPLFIN   DISPLAY   *P1:24,*EL:
                    "Duplication Update Completed. ";
          CALL      HITENTER
          UNPACK    SP30,TFCLM1,TFHFUND1,TFHFTAB1,TFDAYC1,TFENDMB1
.
DUPLFIN1  DISPLAY   *P26:12,*EL,*P26:13,*EL,*P26:14,*EL,*P26:15,*EL,*P26:16,*EL:
                    *P60:23,"(Hit ",*V2LON,"\",*HOFF," to Exit)";
          GOTO      KHCLM

.       CHECK CHG INDICATOR TO SEE IF ANYTHING WAS CHANGED
.
TFEEUP    COMPARE   ZERO,CHG
          GOTO      ENDPST IF EQUAL
.
          IF        NEWFLG=1
            CALL      UPJHT1A1                * newtfeaf
          ELSE
            CALL      UPJHTFE1                * jhstfeaf
          ENDIF
.
          COMPARE   FOUR,OPTION
          GOTO      ENDPST IF NOT LESS
.
          BRANCH    CAUDT OF ENDPST
.         MOVE      ANSB,ACTION
.         CALL      UPTAUDX
.         MOVE      ANSC,ACTION
.         CALL      UPTAUD
.
          GOTO      ENDPST
.
TFEEWR    MOVE      SP30,TFSPARE
          IF        NEWFLG=1
            CALL      WRJHT1A1                * newtfeaf
          ELSE
            CALL      WRJHTFE1                * jhstfeaf
          ENDIF
.
          COMPARE   FOUR,OPTION
          GOTO      ENDPST IF NOT LESS
.
          BRANCH    CAUDT OF ENDPST
          MOVE      ANSA,ACTION
.         CALL      UPTAUD
.
ENDPST    CALL      INIT10
          CALL      DISPCL1
          MOVE      ANSI,MODE               * reset to insert mode
          GOTO      KLDAY
.
.       Create new index file
.
CREAIDX   KEYIN     *P1:24,*EL,"Do You Want to Start With a Copy of the":
                    " Current Data (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
.       Open rollout file
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CREAIDX1 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      DOIDX IF EQUAL
          BEEP
          GOTO      CREAIDX
.
CREAIDX1  DISPLAY   *P1:24,*EL:
                    "Making a Copy of the Current File...";
.
          CALL      CRNF0000           * copy jhstfeaf to newtfeaf
          RETURN
.
DOIDX     DISPLAY   *P1:24,*EL:
                    "Creating New Theatre Fee File. ";
.
          WRITE     ROLLFILE,SEQ;"isbuild newtfeef 85 ":
                                 "U1-3,4-9,10-17,18-18,19-23"
.
WEOFROL   WEOF      ROLLFILE,SEQ
          CLOSE     ROLLFILE
.
          EXECUTE   "iserase newtfeaf",TASKID
.
          CLEAR     CMDLINE
          APPEND    "sh ",CMDLINE
          APPEND    FNAMER,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.         Delete rollout file
.
          PREP      ROLLFILE,FNAMER
          CLOSE     ROLLFILE,DELETE
          RETURN
+
.
.       Move new index over the top of the old
.
MOVEIDX   DISPLAY   *P1:24,*EL:
                    "Making Copy of Current File and Copying New Data":
                    " Over Old... ",*BLINKON,"Please wait";
.
          PREP      ROLLFILE,FNAMER
          CLOSE     PATTFEE1
.
          WRITE     ROLLFILE,SEQ;"cp `ldat jhstfeaf.dat` oldtfeaf.dat",015:
                                 "cp `ldat jhstfeaf.idx` oldtfeaf.idx",015:
                                 "cp newtfeaf.dat `ldat jhstfeaf.dat`",015:
                                 "cp newtfeaf.idx `ldat jhstfeaf.idx`"
.
          WEOF      ROLLFILE,SEQ
          CLOSE     ROLLFILE
.
          CLEAR     CMDLINE
          APPEND    "sh ",CMDLINE
          APPEND    FNAMER,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          EXECUTE   "iserase newtfeaf",TASKID
.
.         Delete rollout file
.
          PREP      ROLLFILE,FNAMER
          CLOSE     ROLLFILE,DELETE
          RETURN
+
.       PROCEDURE TO CLEAN MENU
.
DISPCL    MOVE      SP3,DANS
          MOVE      SP30,CLDES
          MOVE      SP30,FCODDES
          MOVE      SP30,FTABDES
          MOVE      SP30,TBDESC
.
          DISPLAY   *P26:5,*EL,*P26:6,*EL,*P26:7,*EL,*P26:8,*EL;
DISPCL1   DISPLAY   *P26:9,*EL:
                    *P35:12,SP10,*P52:12,SP10,*P66:12,SP6,SP6:
                    *P35:13,SP10,*P52:13,SP10,*P66:13,SP6,SP6:
                    *P35:14,SP10,*P52:14,SP10,*P66:14,SP6,SP6:
                    *P35:15,SP10,*P52:15,SP10,*P66:15,SP6,SP6:
                    *P35:16,SP10,*P52:16,SP10,*P66:16,SP6,SP6:
                    *P35:17,SP10,*P52:17,SP10,*P66:17,SP6,SP6:
                    *P32:19,*EF;
          RETURN
.
DISPCLM   DISPLAY   *P26:5,*EL,*P26:6,*EL,*P26:7,*EL,*P26:8,*EL,*P26:9,*EL;
          RETURN
.
.         Option Header
.
DISPI     DISPLAY   *P52:2,*V2LON,"- Insert ";
          RETURN
.
DISPC     DISPLAY   *P52:2,*V2LON,"- Change ";
          RETURN
.
DISPIN    DISPLAY   *P52:2,*V2LON,"- Insert (New file) ";
          RETURN
.
DISPCN    DISPLAY   *P52:2,*V2LON,"- Change (New file) ";
          RETURN
.
DISPDN    DISPLAY   *P52:2,*V2LON,"- Delete (New file) ";
          RETURN
.
DISPGN    DISPLAY   *P52:2,*V2LON,"- Global Update of Charges ";
          RETURN
.
DISPDU    DISPLAY   *P52:2,*V2LON,"- Health Fund/Table Duplication ";
          RETURN
.
DISPDE    DISPLAY   *P52:2,*V2LON,"- Global Deletion (New file) ";
          RETURN
.
.         MAIN MENU
.
DISP1     MOVE      DTCLS0,DTCLSS
          LOAD      DTCLSS,THCFLG,DTCLS1,DTCLS2,DTCLS3,DTCLS4,DTCLS5,DTCLS6:
                                  DTCLS7,DTCLS8,DTCLS9,DTCLS10,DTCLS11,DTCLS12:
                                  DTCLS13,DTCLS14,DTCLS15,DTCLS16
          DISPLAY   *P1:4,*EF:
                    *P1:5,"   Claim Code          :":
                    *P1:6,"   Health Fund         :":
                    *P1:7,"   Health Fund Table   :":
                    *P1:8,"   Day Case Rate (",*V2LON,"Y",*HOFF,"/",*V2LON:
                    "N",*HOFF,") :":
                    *P1:9,DTCLSS,*P24:9,":":
                    *P31:11,*ULON,"Patient Portion":
                    *P48:11,"Rebate Portion":
                    *P67:11,"   Total",*HOFF:
                    *P1:12,"If First  Highest Fee ":
                    *P30:12,*V2LON," 1",*HOFF,".",*P47:12,*V2LON," 2",*HOFF,".":
                    *P1:13,*HOFF,"If Second Highest Fee ":
                    *P30:13,*V2LON," 3",*HOFF,".",*P47:13,*V2LON," 4",*HOFF,".":
                    *P1:14,*HOFF,"If Third  Highest Fee ":
                    *P30:14,*V2LON," 5",*HOFF,".",*P47:14,*V2LON," 6",*HOFF,".":
                    *P1:15,*HOFF,"If Fourth Highest Fee ":
                    *P30:15,*V2LON," 7",*HOFF,".",*P47:15,*V2LON," 8",*HOFF,".":
                    *P1:16,*HOFF,"If Fifth  Highest Fee ":
                    *P30:16,*V2LON," 9",*HOFF,".",*P47:16,*V2LON,"10",*HOFF,".":
                    *P1:17,*HOFF,"If Sixth  Highest Fee ":
                    *P30:17,*V2LON,"11",*HOFF,".",*P47:17,*V2LON,"12",*HOFF,".":
                    *P1:19,*V2LON,"13",*HOFF,". Number of Invoices       :";
          RETURN
.
DISP2     MOVE      DTCLS0,DTCLSS
          LOAD      DTCLSS,THCFLG,DTCLS1,DTCLS2,DTCLS3,DTCLS4,DTCLS5,DTCLS6:
                                  DTCLS7,DTCLS8,DTCLS9,DTCLS10,DTCLS11,DTCLS12:
                                  DTCLS13,DTCLS14,DTCLS15,DTCLS16
          DISPLAY   *P1:4,*EF:
                    *P1:5,"   Claim Code          :":
                    *P1:6,"   Health Fund         :":
                    *P1:7,"   Health Fund Table   :":
                    *P1:8,"   Day Case Rate (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") :":
                    *P1:9,DTCLSS,*P24:9,":":
                    *P1:11,"   ",*V2LON,"$",*HOFF," or ",*V2LON,"%":
                    *HOFF," Increase     :":
                    *P46:12,*V2LON,"1",*HOFF," = Fixed Dollar Increase ":
                    *P46:13,*V2LON,"2",*HOFF," = Percentage Increase";
         RETURN
+
.
DISPRB   DISPLAY    *P1:12,*EF,*P12:14,*ULON,"Pat Por. Increase",*HOFF:
                    *P32:14,*ULON,"Reb Por. Increase",*HOFF:
                    *P53:14,*ULON,"  Total ",*HOFF:
                    *P12:15,*V2LON," 1",*HOFF,".",*P32:15,*V2LON," 2",*HOFF,".":
                    *P12:16,*V2LON," 3",*HOFF,".",*P32:16,*V2LON," 4",*HOFF,".":
                    *P12:17,*V2LON," 5",*HOFF,".",*P32:17,*V2LON," 6",*HOFF,".":
                    *P12:18,*V2LON," 7",*HOFF,".",*P32:18,*V2LON," 8",*HOFF,".":
                    *P12:19,*V2LON," 9",*HOFF,".",*P32:19,*V2LON,"10",*HOFF,".":
                    *P12:20,*V2LON,"11",*HOFF,".",*P32:20,*V2LON,"12",*HOFF,".";
           RETURN
+
.
DISP3     MOVE      DTCLS0,DTCLSS
          LOAD      DTCLSS,THCFLG,DTCLS1,DTCLS2,DTCLS3,DTCLS4,DTCLS5,DTCLS6:
                                  DTCLS7,DTCLS8,DTCLS9,DTCLS10,DTCLS11,DTCLS12:
                                  DTCLS13,DTCLS14,DTCLS15,DTCLS16
          DISPLAY   *P1:3,*EF:
                    *P1:4,"    ",*V2LON,*ULON,"Copy From",*HOFF:
                    *P1:5,"   Claim Code          :":
                    *P1:6,"   Health Fund         :":
                    *P1:7,"   Health Fund Table   :":
                    *P1:8,"   Day Case Rate (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") :":
                    *P1:9,DTCLSS,*P24:9,":":
                    *P1:11,"    ",*V2LON,*ULON,"Copy To",*HOFF:
                    *P1:12,"   Claim Code          :":
                    *P1:13,"   Health Fund         :":
                    *P1:14,"   Health Fund Table   :":
                    *P1:15,"   Day Case Rate (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") :":
                    *P1:16,DTCLSS,*P24:16,":";
           RETURN
+
.
.          SUBROUTINE TO DISPLAY DATA ONTO THE SCREEN
.
DISPDA    MOVE      ZERO,EXIT
....      DISPLAY   *P35:12,*V2LON,TFPAT1,*P52:12,TFHF1;
          MOVE      TFPAT1,FORM82
          MOVE      TFHF1,FORM82A
          DISPLAY   *P35:12,*V2LON,FORM82,*P52:12,FORM82A;
          MOVE      TFPAT1,TFPAT
          MOVE      TFHF1,TFHF
          CALL      TOTRATE
          MOVE      TOTAL,TOTAL1
.
          DISPLAY   *P66:12,*V2LON,TOTAL1,*P35:13,TFPAT2,*P52:13,TFHF2;
          MOVE      TFPAT2,TFPAT
          MOVE      TFHF2,TFHF
          CALL      TOTRATE
          MOVE      TOTAL,TOTAL2
.
          DISPLAY   *P66:13,*V2LON,TOTAL2,*P35:14,TFPAT3,*P52:14,TFHF3;
          MOVE      TFPAT3,TFPAT
          MOVE      TFHF3,TFHF
          CALL      TOTRATE
          MOVE      TOTAL,TOTAL3
.
          DISPLAY   *P66:14,*V2LON,TOTAL3,*P35:15,TFPAT4,*P52:15,TFHF4;
          MOVE      TFPAT4,TFPAT
          MOVE      TFHF4,TFHF
          CALL      TOTRATE
          MOVE      TOTAL,TOTAL4
.
          DISPLAY   *P66:15,*V2LON,TOTAL4,*P35:16,TFPAT5,*P52:16,TFHF5;
          MOVE      TFPAT5,TFPAT
          MOVE      TFHF5,TFHF
          CALL      TOTRATE
          MOVE      TOTAL,TOTAL5
.
          DISPLAY   *P66:16,*V2LON,TOTAL5,*P35:17,TFPAT6,*P52:17,TFHF6;
          MOVE      TFPAT6,TFPAT
          MOVE      TFHF6,TFHF
          CALL      TOTRATE
          MOVE      TOTAL,TOTAL6
.
          DISPLAY   *P66:17,*V2LON,TOTAL6,*P32:19,TFNINV;
          RETURN
+
.
READISP   CALL      DISP1
          DISPLAY   *P26:5,*V2LON,TFCLM,*HOFF,*P35:5,CLDES:
                    *P26:6,*V2LON,TFHFUND,*HOFF,*P35:6,FCODDES:
                    *P26:7,*V2LON,TFHFTAB,*HOFF,*P35:7,FTABDES:
                    *P26:8,*V2LON,DANS;
.
          COMPARE   ZERO,DSFLAG
          RETURN    IF EQUAL
.
.             Display the whole screen
.
          DISPLAY   *P26:9,*V2LON,TFENDMBS,*P35:9,TBDESC;
          CALL      DISPDA
          RETURN
+
.
.         Re-display screen for Global Update option
.
READISP1  CALL      DISP2
          CMATCH    QUEST,TFCLM
          RETURN    IF EQUAL
          BRANCH    CLMFLG,RDISP110
          DISPLAY   *P26:5,*V2LON,TFCLM,*HOFF,*P35:5,CLDES;
          GOTO      RDISP120
.
RDISP110  DISPLAY   *P26:5,*V2LON,CLDES;
.
RDISP120  CMATCH    QUEST,TFHFUND
          RETURN    IF EQUAL
          BRANCH    FNDFLG,RDISP130
          DISPLAY   *P26:6,*V2LON,TFHFUND,*HOFF,*P35:6,FCODDES;
          GOTO      RDISP140
.
RDISP130  DISPLAY   *P26:6,*V2LON,FCODDES,*P26:7,FTABDES;
          GOTO      RDISP160
.
RDISP140  CMATCH    QUEST,TFHFTAB
          RETURN    IF EQUAL
          BRANCH    TABFLG,RDISP150
          DISPLAY   *P26:7,*V2LON,TFHFTAB,*HOFF,*P35:7,FTABDES;
          GOTO      RDISP160
.
RDISP150  DISPLAY   *P26:7,*V2LON,FTABDES;
.
RDISP160  DISPLAY   *P26:8,*V2LON,DANS;
.
          COMPARE   ZERO,DSFLAG
          RETURN    IF EQUAL
.
.             Display the whole screen
.
          DISPLAY   *P26:9,*V2LON,TFENDMBS,*HOFF,*P35:9,TBDESC;
          CALL      DISPDA
          RETURN
+
.
.         Re-display screen for Health Fund/Table Duplication option
.
READISP2  CALL      DISP3
          CMATCH    QUEST,TFCLM
          RETURN    IF EQUAL
          BRANCH    CLMFLG,RDISP2A
          DISPLAY   *P26:5,*V2LON,TFCLM,*HOFF,*P35:5,CLDES;
          GOTO      RDISP2B
.
RDISP2A   DISPLAY   *P26:5,*V2LON,ALL;
.
RDISP2B   CMATCH    QUEST,TFHFUND
          RETURN    IF EQUAL
          BRANCH    FNDFLG,RDISP2C
          DISPLAY   *P26:6,*V2LON,TFHFUND,*HOFF,*P35:6,FCODDES;
          GOTO      RDISP2D
.
RDISP2C   DISPLAY   *P26:6,*V2LON,ALL;
          GOTO      RDISP2E
.
RDISP2D   CMATCH    QUEST,TFHFTAB
          RETURN    IF EQUAL
          BRANCH    TABFLG,RDISP2E
          DISPLAY   *P26:7,*V2LON,TFHFTAB,*HOFF,*P35:7,FTABDES;
          GOTO      RDISP2F
.
RDISP2E   DISPLAY   *P26:7,*V2LON,ALL;
.
RDISP2F   DISPLAY   *P26:8,*V2LON,DANS;
          CMATCH    QUEST,TFENDMBS
          RETURN    IF EQUAL
          BRANCH    MBSFLG,RDISP2G
          DISPLAY   *P26:9,*V2LON,TFENDMBS,*HOFF,*P35:9,TBDESC;
          GOTO      RDISP2H
.
RDISP2G   DISPLAY   *P26:9,*V2LON,ALL;
.
RDISP2H   CMATCH    QUEST,TFCLM1
          RETURN    IF EQUAL
          MOVE      CLDES1,DIM4
          MATCH     ALL,DIM4
          GOTO      RDISP2I IF EQUAL
          DISPLAY   *P26:12,*V2LON,TFCLM1,*HOFF,*P35:12,CLDES1;
          GOTO      RDISP2J
.
RDISP2I   DISPLAY   *P26:12,*V2LON,ALL;
.
RDISP2J   CMATCH    QUEST,TFHFUND1
          RETURN    IF EQUAL
          MOVE      FCODDES1,DIM4
          MATCH     ALL,DIM4
          GOTO      RDISP2K IF EQUAL
          DISPLAY   *P26:13,*V2LON,TFHFUND1,*HOFF,*P35:13,FCODDES1;
          GOTO      RDISP2L
.
RDISP2K   DISPLAY   *P26:13,*V2LON,ALL;
          GOTO      RDISP2M
.
RDISP2L   CMATCH    QUEST,TFHFTAB1
          RETURN    IF EQUAL
          MOVE      FTABDES1,DIM4
          MATCH     ALL,DIM4
          GOTO      RDISP2M IF EQUAL
          DISPLAY   *P26:14,*V2LON,TFHFTAB1,*HOFF,*P35:14,FTABDES1;
          GOTO      RDISP2N
.
RDISP2M   DISPLAY   *P26:14,*V2LON,ALL;
.
RDISP2N   DISPLAY   *P26:15,*V2LON,DANS1;
          RETURN
+
.
.           SUBROUTINE TO SAVE ALL THE BEFORE CHANGES BEFORE WRITING TO PATAUD
.
ACTBSAV   MOVE      TFCLM,STFCLM
          MOVE      TFHFUND,STFHFUND
          MOVE      TFHFTAB,STFHFTAB
          MOVE      TFENDMBS,STFENDMB
          MOVE      TFDAYC,STFDAYC
          MOVE      TFPAT1,STFPAT1
          MOVE      TFHF1,STFHF1
          MOVE      TFPAT2,STFPAT2
          MOVE      TFHF2,STFHF2
          MOVE      TFPAT3,STFPAT3
          MOVE      TFHF3,STFHF3
          MOVE      TFPAT4,STFPAT4
          MOVE      TFHF4,STFHF4
          MOVE      TFPAT5,STFPAT5
          MOVE      TFHF5,STFHF5
          MOVE      TFPAT6,STFPAT6
          MOVE      TFHF6,STFHF6
          MOVE      TFNINV,STFNINV
          RETURN
+
.
.             INITIALIZE ALL THE VARIABLES BEFORE START
.
INITVAR   MOVE      SP3,TFCLM
          MOVE      SP6,TFHFUND
          MOVE      SP8,TFHFTAB
          MOVE      SP1,TFDAYC
.
INIT10    MOVE      SP5,TFENDMBS
          MOVE      SP20,TDESC
          MOVE      ZERO,TFHF1
          MOVE      ZERO,TFPAT1
          MOVE      ZERO,TFHF2
          MOVE      ZERO,TFPAT2
          MOVE      ZERO,TFHF3
          MOVE      ZERO,TFPAT3
          MOVE      ZERO,TFHF4
          MOVE      ZERO,TFPAT4
          MOVE      ZERO,TFHF5
          MOVE      ZERO,TFPAT5
          MOVE      ZERO,TFHF6
          MOVE      ZERO,TFPAT6
          MOVE      ZERO,TFNINV
          MOVE      ZERO,DSFLAG
          RETURN
+
.
.         Calculate & display total of Patient & Rebate amounts
.
TOTRATE   MOVE      TFPAT,TOTAL
          ADD       TFHF,TOTAL
          RETURN
+
.******************************************************************************
.*                                 SCRD0000                                   *
.*        Display screen layout                           Called by : GLODEL  *
.******************************************************************************
SCRD0000  MOVE      DTCLS0,DTCLSS
          LOAD      DTCLSS,THCFLG,DTCLS1,DTCLS2,DTCLS3,DTCLS4,DTCLS5,DTCLS6:
                                  DTCLS7,DTCLS8,DTCLS9,DTCLS10,DTCLS11,DTCLS12:
                                  DTCLS13,DTCLS14,DTCLS15,DTCLS16
          DISPLAY   *P1:4,*EF:
                    *P1:5,"   Claim Code          :":
                    *P1:6,"   Health Fund         :":
                    *P1:7,"   Health Fund Table   :":
                    *P1:8,"   Day Case Rate (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") :":
                    *P1:9,DTCLSS,*P24:9,":";
.
SCRD9999  RETURN
+
.******************************************************************************
.*                                KEYD0000                                    *
.*      Keyin Claim Code, Health Fund, Health Fund Table, Day Case Rate ind.  *
.*                                                        Called by : GLODEL  *
.******************************************************************************
.         Keyin Claim Code -----------------------------------------------
.
KEYD0000  MOVE      SP3,TFCLM
          MOVE      ZERO,CLMFLG
          MOVE      ZERO,STHCFLG
.
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      FIVE,EVERT
          MOVE      CODECL,CODE 
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          BRANCH    EXIT,KEYD0500,START
          MOVE      ACODE,TFCLM
          GOTO      KEYD1000
.
KEYD0500  DISPLAY   *P26:5,*V2LON,ALL;         * yes
          MOVE      ONE,CLMFLG
          GOTO      KEYD2000
.
KEYD1000  MOVE      TDESC,CLDES                * save description
          DISPLAY   *P35:5,CLDES;
.
          MOVE      TCFORM6,THCFLG             * Theatre Classification to use
          MOVE      THCFLG,STHCFLG
.
.         Keyin Health Fund -------------------------------------------------
.
KEYD2000  MOVE      Z6,TFHFUND
          MOVE      SP30,FCODDES
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,TABFLG
          MOVE      STHCFLG,THCFLG
.
          DISPLAY   *P26:6,*EL,*P26:7,*EL;
          MOVE      TWENTY6,ECOL
          MOVE      SIX,EVERT
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY
          BRANCH    EXIT,KEYD2010,START     * EXIT=1, null. EXIT=2, EXITCHAR
          MOVE      HCODE,TFHFUND
          GOTO      KEYD2100
.
.         <Enter> pressed
.
KEYD2010  DISPLAY   *P26:6,*EL,*V2LON,ALL:
                    *P26:7,*EL,ALL;
.
          MOVE      Z8,TFHFTAB                 * all Health Fund tables
          MOVE      SP30,FTABDES 
          MOVE      ONE,FNDFLG
          MOVE      ONE,TABFLG
          GOTO      KEYD4000                   * go to keyin Day Case Rate ind.
.
KEYD2100  MATCH     SP6,TFHFUND                * spaced Health Fund input ?
          GOTO      KEYD2200 IF NOT EQUAL      * no
.
          MOVE      SP8,TFHFTAB                * set Health Fund table to spaces
          MOVE      SP30,FTABDES               * initialize Health Fund desc.
          GOTO      KEYD4000                   * go to keyin Day Case Rate ind.
.
KEYD2200  MOVE      HFNAME,FCODDES
          MOVE      HFBAND,THCFLG
          DISPLAY   *P26:6,*EL,*V2LON,TFHFUND,*HOFF,*P35:6,FCODDES;
.
.         Keyin Health Fund Table --------------------------------------------
.
KEYD3000  MOVE      Z8,TFHFTAB
          MOVE      SP30,FTABDES 
          MOVE      ZERO,TABFLG
.
          MOVE      TWENTY6,ECOL
          MOVE      SEVEN,EVERT
          MOVE      ZERO,CKYIMODE
          MOVE      TFHFUND,MHFUND
.
          CALL      PATTBLKY
          BRANCH    EXIT,KEYD3010,START     * EXIT=1, null.  EXIT=2, EXITCHAR
          MOVE      HFTABL,TFHFTAB
          GOTO      KEYD3100
.
KEYD3010  DISPLAY   *P26:7,*V2LON,ALL;
          MOVE      ONE,TABFLG
          GOTO      KEYD4000                   * go to keyin Day Case Rate ind.
.
KEYD3100  MOVE      HFNAME,FTABDES
          DISPLAY   *P26:7,*EL,*V2LON,TFHFTAB,*HOFF,*P35:7,FTABDES;
.
.         Keyin Day Case Rate indicator --------------------------------------
.
KEYD4000  KEYIN     *P26:8,*EL,*V2LON,ANS;
          REP       UPPLOW,ANS
.
          MATCH     EXITCHAR,ANS               * is exit char. being entered ?
          GOTO      KEYD9000 IF EQUAL          * yes - set EXIT to 1
.
          MOVE      DNO,DANS                   * default input to "No"
          MOVE      SP1,TFDAYC                 * set ind. = " "
.
          MATCH     ANSY,ANS                   * input = "Y" ?
          GOTO      KEYD4100 IF NOT EQUAL      * no
.
          MOVE      DYES,DANS                  * yes
          MOVE      ANSD,TFDAYC                * set ind. = "D"
.
KEYD4100  DISPLAY   *P26:8,*V2LON,DANS;
.
.         Keyin MBS/Theatre Class Banding ------------------------------------
.
KEYD5000  MOVE      ZERO,THMFLG
          MOVE      DTCLS0,DTCLSS
          LOAD      DTCLSS,THCFLG,DTCLS1,DTCLS2,DTCLS3,DTCLS4,DTCLS5,DTCLS6:
                                  DTCLS7,DTCLS8,DTCLS9,DTCLS10,DTCLS11,DTCLS12:
                                  DTCLS13,DTCLS14,DTCLS15,DTCLS16
.
          DISPLAY   *P50:9,"(Enter ",*V2LON,"?",*HOFF," for scan)";
.
          MOVE      SP5,TFENDMBS
          KEYIN     *P1:9,*DV,DTCLSS,*P26:9,*DV,SP5,*P26:9,*V2LON,TFENDMBS;
          RESET     TFENDMBS
          GOTO      KEYD5100 IF NOT EOS
          DISPLAY   *P26:9,*EL,*V2LON,ALL;
          MOVE      ONE,THMFLG
          GOTO      KEYD8000
.
KEYD5100  CMATCH    EXITCHAR,TFENDMBS          * is exit char. being entered ?
          GOTO      KEYD9000 IF EQUAL          * yes - set EXIT to 1
.
          CMATCH    QUEST,TFENDMBS
          GOTO      KEYD6100 IF EQUAL
.
          COMPARE   ZERO,THCFLG
          GOTO      KEYD5200 IF NOT EQUAL
.
          MOVE      SP20,TBDESC
          MOVE      TFENDMBS,FORM5
          MOVE      FORM5,TFENDMBS
          DISPLAY   *P26:9,*EL,*V2LON,TFENDMBS;
          GOTO      KEYD5300
.
.         Check for a valid theatre band -------------------------------------
.
KEYD5200  ENDSET    TFENDMBS
          APPEND    SP5,TFENDMBS
          RESET     TFENDMBS
.
          PACK      KEY5 WITH CODETB,TFENDMBS
          CALL      RDCODE1
          BRANCH    OVRCD,INVTB
          MOVE      TDESC,TBDESC
.
.         Check if the record exist or not
.
KEYD5300  MOVE      TFCLM,SAVCLM
          MOVE      TFHFUND,SAVHF
          MOVE      TFHFTAB,SAVTAB
          MOVE      TFDAYC,SAVFDAY
          MOVE      TFENDMBS,SAVMBS
          MOVE      SP30,KEY23
.
          BRANCH    CLMFLG,KEYD5400
          PACK      KEY23,TFCLM,SP30
.
          BRANCH    FNDFLG,KEYD5400
          PACK      KEY23,TFCLM,TFHFUND,SP20
.
          BRANCH    TABFLG,KEYD5400
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          IF        NEWFLG=1
            CALL      RDJHT1A1                * newtfeaf
          ELSE
            CALL      RDJHTFE1                * jhstfeaf
          ENDIF
.
          BRANCH    OVRCD,KEYD6000
          GOTO      KEYD5900
.
KEYD5400  IF        NEWFLG=1
            CALL      RSJHT1A1                 * newtfeaf
          ELSE
            CALL      RSJHTFE1                 * jhstfeaf
          ENDIF
.
KEYD5500  IF        NEWFLG=1
            CALL      RKJHT1A1                 * newtfeaf
          ELSE
            CALL      RKJHTFE1                 * jhstfeaf
          ENDIF
.
          BRANCH    OVRCD,KEYD6000
.
          BRANCH    CLMFLG,KEYD5600
          MATCH     SAVCLM,TFCLM
          GOTO      KEYD6000 IF NOT EQUAL
.
KEYD5600  BRANCH    FNDFLG,KEYD5700
          MATCH     SAVHF,TFHFUND
          GOTO      KEYD5500 IF NOT EQUAL
.
KEYD5700  BRANCH    TABFLG,KEYD5800
          MATCH     SAVTAB,TFHFTAB
          GOTO      KEYD5500 IF NOT EQUAL
.
KEYD5800  MATCH     SAVFDAY,TFDAYC
          GOTO      KEYD5500 IF NOT EQUAL
.
          MATCH     SAVMBS,TFENDMBS
          GOTO      KEYD5500 IF NOT EQUAL
.
KEYD5900  DISPLAY   *P26:9,*EL,*V2LON,TFENDMBS,*HOFF,*P35:9,TBDESC;
          CALL      RESETV
          GOTO      KEYD8000
.
KEYD6000  DISPLAY   *P1:24,*EL,*B:
                    "Theatre Fee Does Not Exist on File. ";
          CALL      HITENTER
.
          CALL      RESETV
          GOTO      KEYD5000
.
KEYD6100  CALL      SCAN0000
          CALL      REDR0000
          GOTO      KEYD5000
.
KEYD8000  MOVE      ZERO,EXIT                  * set EXIT = 0
          DISPLAY   *P1:23,*EL;
          GOTO      KEYD9999
.
KEYD9000  MOVE      ONE,EXIT                   * set EXIT = 1
.
KEYD9999  CALL      PRTSCR00                * print the screen options
          RETURN
+
.******************************************************************************
.*                                 REDR0000                                   *
.*     Redraw the screen after "?" option               Called by : KEYD0000  *
.******************************************************************************
REDR0000  CALL      SCRD0000                  * Redraw screen 
.
          CMATCH    QUEST,TFCLM               * Claim Code "?" requested ?
          GOTO      REDR9999 IF EQUAL         * yes
.
          MATCH     SP3,TFCLM                 * null Claim Code ?
          GOTO      REDR1000 IF NOT EQUAL     * no
          DISPLAY   *P26:5,*V2LON,ALL;        * yes
          GOTO      REDR2000
.
REDR1000  DISPLAY   *P26:5,*V2LON,TFCLM,*HOFF,*P35:5,CLDES;
.
REDR2000  CMATCH    QUEST,TFHFUND             * Health Fund "?" requested ?
          GOTO      REDR9999 IF EQUAL         * yes
.
          MATCH     Z6,TFHFUND                * all Health Funds ?
          GOTO      REDR3000 IF NOT EQUAL     * no
          DISPLAY   *P26:6,*V2LON,ALL,*P26:7,ALL;   * yes
          GOTO      REDR4000
.
REDR3000  MATCH     SP6,TFHFUND               * spaced Health Fund ?
          GOTO      REDR4000 IF EQUAL         * no
          DISPLAY   *P26:6,*V2LON,TFHFUND,*HOFF,*P35:6,FCODDES;
.
          CMATCH    QUEST,TFHFTAB             * H/Fund Table "?" requested ?
          GOTO      REDR9999 IF EQUAL         * yes
.
          MATCH     TFHFTAB,Z8                * all Health Fund Tables ?
          GOTO      REDR3100 IF NOT EQUAL     * no
          DISPLAY   *P26:7,*V2LON,ALL;
          GOTO      REDR4000
.
REDR3100  DISPLAY   *P26:7,*V2LON,TFHFTAB,*HOFF,*P35:7,FTABDES;
.
REDR4000  DISPLAY   *P26:8,*V2LON,DANS;
.
REDR9999  RETURN
+
.******************************************************************************
.*                                  RESETV                                    *
.*     Reset keyin variables using saved variables      Called by : KEYD0000  *
.******************************************************************************
RESETV    MOVE      SAVCLM,TFCLM
          MOVE      SAVHF,TFHFUND
          MOVE      SAVTAB,TFHFTAB
          MOVE      SAVFDAY,TFDAYC
          MOVE      SAVMBS,TFENDMBS
          RETURN
+
.******************************************************************************
.*                                 SCAN0000                                   *
.*     MBS/Theatre Classification scan                  Called by : KEYD0000  *
.******************************************************************************
SCAN0000  MOVE      TFCLM,SAVCLM
          MOVE      TFHFUND,SAVHF
          MOVE      TFHFTAB,SAVTAB
          MOVE      TFDAYC,SAVFDAY
.
          MOVE      TFCLM,SAVCLM1
          MATCH     SP3,TFCLM
          GOTO      SCAN0100 IF NOT EQUAL
          MOVE      ALL,SAVCLM1
.
SCAN0100  MOVE      TFHFUND,SAVHF1
          MATCH     Z6,TFHFUND
          GOTO      SCAN0200 IF NOT EQUAL
          MOVE      ALL,SAVHF1
.
SCAN0200  MOVE      TFHFTAB,SAVTAB1
          MATCH     TFHFTAB,Z8
          GOTO      SCAN0300 IF NOT EQUAL
          MOVE      ALL,SAVTAB1
.
SCAN0300  MOVE      DNO,DANS1
          MATCH     " ",TFDAYC
          GOTO      SCAN1000 IF EQUAL
          MOVE      DYES,DANS1
.
SCAN1000  COMPARE   ZERO,THCFLG
          GOTO      SCAN1100 IF NOT EQUAL
          DISPLAY   *P1:4,*EF,*P20:4,*V2LON,*ULON,"MBS Fees";
          GOTO      SCAN1200
.
SCAN1100  DISPLAY   *P1:4,*EF,*P20:4,*V2LON,*ULON,"Theatre Bands";
.
SCAN1200  DISPLAY   *P1:5,"for ",*V2LON,SAVCLM1,*HOFF," (Claim Code) ",*V2LON:
                    SAVHF1,*HOFF," (H/Fund) ",*V2LON,SAVTAB1,*HOFF," (H/Fund":
                    " Table) ",*V2LON,DANS1,*HOFF," (D/C) combination":
                    *V2LON,*P3:7,"    Code            Code            Code":
                           "            Code            Code";
.
          MOVE      SP30,KEY23
          BRANCH    CLMFLG,SCAN2000
          PACK      KEY23,TFCLM,SP20
.
          BRANCH    FNDFLG,SCAN2000
          PACK      KEY23,TFCLM,TFHFUND,SP20
.
          BRANCH    TABFLG,SCAN2000
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,SP20
.
SCAN2000  MOVE      EIGHT,CVERT
          MOVE      SEVEN,CCOL
.
          IF        NEWFLG=1
            CALL      RSJHT1A1                 * newtfeaf
          ELSE
            CALL      RSJHTFE1                 * jhstfeaf
          ENDIF
          IF        NEWFLG=1
            CALL      RKJHT1A1                 * newtfeaf
          ELSE
            CALL      RKJHTFE1                 * jhstfeaf
          ENDIF
          BRANCH    OVRCD,SCAN6000
.
          BRANCH    CLMFLG,SCAN3000
          MATCH     SAVCLM,TFCLM
          GOTO      SCAN6000 IF NOT EQUAL
          GOTO      SCAN3000
.
SCAN2200  IF        NEWFLG=1
            CALL      RKJHT1A1                 * newtfeaf
          ELSE
            CALL      RKJHTFE1                 * jhstfeaf
          ENDIF
          BRANCH    OVRCD,SCAN7000
.
          BRANCH    CLMFLG,SCAN3000
          MATCH     SAVCLM,TFCLM
          GOTO      SCAN7000 IF NOT EQUAL
.
SCAN3000  BRANCH    FNDFLG,SCAN3100
          MATCH     SAVHF,TFHFUND
          GOTO      SCAN2200 IF NOT EQUAL
.
SCAN3100  BRANCH    TABFLG,SCAN3200
          MATCH     SAVTAB,TFHFTAB
          GOTO      SCAN2200 IF NOT EQUAL
.
SCAN3200  MATCH     SAVFDAY,TFDAYC
          GOTO      SCAN2200 IF NOT EQUAL
.
          CMATCH    SP1,TFENDMBS                 * MBS Fee ?
          GOTO      SCAN3400 IF EQUAL            * yes
          ENDSET    TFENDMBS                     * no
          CMATCH    SP1,TFENDMBS                 * Theatre Band ?
          GOTO      SCAN3300 IF EQUAL            * yes
          RESET     TFENDMBS                     * no
          GOTO      SCAN3400
.
SCAN3300  RESET     TFENDMBS
          COMPARE   ZERO,THCFLG
          GOTO      SCAN3500 IF NOT EQUAL
          GOTO      SCAN2200
.
SCAN3400  COMPARE   ZERO,THCFLG
          GOTO      SCAN2200 IF NOT EQUAL
.
SCAN3500  DISPLAY   *PCCOL:CVERT,TFENDMBS;
          ADD       ONE,CVERT
          COMPARE   TWENTY3,CVERT
          GOTO      SCAN2200 IF LESS
.
          MOVE      EIGHT,CVERT
          ADD       TEN6,CCOL
          COMPARE   "70",CCOL
          GOTO      SCAN2200 IF LESS
.
          DISPLAY   *P1:24,*EL,"(",*V2LON,"C",*HOFF,")ontinue": 
                    "(",*V2LON,"N",*HOFF,")ext Screen :";
.
SCAN4000  MOVE      SP1,ANS
          KEYIN     *P25:24,*DV,UNDLN1,*P25:24,*V2LON,ANS;
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS
          GOTO      SCAN5000 IF EQUAL
.
          MATCH     ANSC,ANS
          GOTO      SCAN8000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      SCAN5000 IF EQUAL
          BEEP
          GOTO      SCAN4000
.
SCAN5000  MOVE      EIGHT,CVERT
          MOVE      SEVEN,CCOL
          DISPLAY   *P1:7,*EF;
          GOTO      SCAN2200
.
SCAN6000  DISPLAY   *P1:23,*EF,"No Fees for the Claim Code/Health ":
                    "Fund/Health Fund Table Combination Specified.";
          DISPLAY   *P1:24;
          CALL      HITENTER
          DISPLAY   *P1:23,*EL
          GOTO      SCAN8000
.
SCAN7000  DISPLAY   *P1:24,*EL,"(",*V2LON,"C",*HOFF,")ontinue, (":
                    *V2LON,"F",*HOFF,")irst Screen :";
.
SCAN7100  KEYIN     *P26:24,*DV,UNDLN1,*P26:24,*V2LON,ANS;
.
          REP       UPPLOW,ANS
.
          MATCH     ANSC,ANS
          GOTO      SCAN8000 IF EQUAL
.
          MATCH     ANSF,ANS
          GOTO      SCAN2000 IF EQUAL
          BEEP
          GOTO      SCAN7100
.
SCAN8000  MOVE      SAVCLM,TFCLM
          MOVE      SAVHF,TFHFUND
          MOVE      SAVTAB,TFHFTAB
          MOVE      SAVFDAY,TFDAYC
.
SCAN9999  RETURN
+
.******************************************************************************
.*                                 DEL0000                                    *
.*        Globally delete theatre fee record              Called by : GLODEL  *
.******************************************************************************
DEL0000   DISPLAY  *P1:24,*EL,"Deleting :",*P43:24,"Scanning :";
.
.         save keyined variables for comparison purposes
.
          MOVE      TFCLM,TFCLM1
          MOVE      TFHFUND,TFHFUND1
          MOVE      TFHFTAB,TFHFTAB1
          MOVE      TFDAYC,TFDAYC1
          MOVE      TFENDMBS,TFENDMB1
.
.         set key for deletion process
.
          MOVE      SP20,KEY23
          BRANCH    CLMFLG,DEL2000          * if "Claim Code" = "All" *C-204388
.
          PACK      KEY23,TFCLM,SP20
          BRANCH    FNDFLG,DEL2000          * if "Health Fund" = "All" C-204388
.
          PACK      KEY23,TFCLM,TFHFUND,SP20
          BRANCH    TABFLG,DEL2000          * if "H/F Table" = "All"  *C-204388
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,SP20
          BRANCH    THMFLG,DEL2000
.
.
.                   delete by full key - single record -----------------------
.
          PACK      KEY23,TFCLM1,TFHFUND1,TFHFTAB1,TFDAYC1,TFENDMB1
          CALL      RDJHT1A1                * newtfeaf
.
          BRANCH    OVRCD,DEL1000
          DISPLAY   *P54:24,*EL,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS;
.
          RESET     PRNTLINE                * print deleted record
          MOVE      "       - Deleted ",KEY20
          PACK      PRNTLINE,SP2,TFCLM,SP5,TFHFUND,SP3,TFHFTAB,SP3,TFDAYC:
                             SP10,SP3,TFENDMBS,KEY20
          CALL      PRNT0000
.
          CALL      DEJHT1A1                * newtfeaf
.
          DISPLAY   *P15:24,*V2LON,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS;
          GOTO      DEL9000
.
DEL1000   DISPLAY   *P1:24,*EL,"No Records Deleted. ";
          GOTO      DEL9000
.
.
.                   delete by part key - multiple records --------------------
.
DEL2000   MOVE      ZERO,EXIT
          CALL      RSJHT1A1                 * newtfeaf
.
DEL2500   MOVE      ZERO,EXIT
          CALL      RKJHT1A1                 * newtfeaf
          BRANCH    OVRCD,DEL9000
.
          DISPLAY   *P54:24,*EL,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS;
.
          IF        CLMFLG = 0
            MATCH     TFCLM,TFCLM1          * no - same Claim Code ?
            GOTO      DEL9000 IF NOT EQUAL  * no - finish with deletion
          ENDIF
.
DEL3000   IF        FNDFLG = 0
            MATCH     TFHFUND,TFHFUND1      * same Health Fund as specified ?
            GOTO      DEL2500 IF NOT EQUAL  * not equal - read next record
          ENDIF
.
DEL4000   IF        TABFLG = 0
            MATCH     TFHFTAB,TFHFTAB1        * no - same Health Fund Table ?
            GOTO      DEL2500 IF NOT EQUAL    * not equal - read next record
          ENDIF
. 
DEL5000   MATCH     TFDAYC,TFDAYC1          * same Day Case Rate indicator ?
          GOTO      DEL2500 IF NOT EQUAL    * not equal - read next record
.
          IF        THMFLG = 0
            MATCH     TFENDMBS,TFENDMB1     * same MBS/Theatre Class. ?
            GOTO      DEL2500 IF NOT EQUAL  * not equal - read next record
            GOTO      DEL6000               * process 
          ENDIF
.
.                   "All" Theatre Class. processing --------------
.
          CMATCH    SP1,TFENDMBS            * MBS Fee ?
          GOTO      DEL5200 IF EQUAL        * yes
          ENDSET    TFENDMBS                * no
          CMATCH    SP1,TFENDMBS            * Theatre Band ?
          GOTO      DEL5100 IF EQUAL        * yes
          RESET     TFENDMBS                * no
          GOTO      DEL5200
.
DEL5100   RESET     TFENDMBS
          COMPARE   ZERO,THCFLG
          GOTO      DEL6000 IF NOT EQUAL
          GOTO      DEL2500
.
DEL5200   COMPARE   ZERO,THCFLG
          GOTO      DEL2500 IF NOT EQUAL
          GOTO      DEL6000
.
.
.
DEL6000   DISPLAY   *P15:24,*V2LON,TFCLM,TFHFUND,TFHFTAB,TFDAYC:
                            TFENDMBS;       * display record to be deleted
.
          RESET     PRNTLINE                * print deleted record
          MOVE      "       - Deleted ",KEY20
          PACK      PRNTLINE,SP2,TFCLM,SP5,TFHFUND,SP3,TFHFTAB,SP3,TFDAYC:
                             SP10,SP3,TFENDMBS,KEY20
          CALL      PRNT0000
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          MOVE      KEY23,SAVKEY
.
          CALL      DEJHT1A1                * newtfeaf
.
          MOVE      SAVKEY,KEY23            * reposition the record
          GOTO      DEL2000
.
.         Clear saved variables
.
DEL9000   MOVE      SP3,TFCLM1
          MOVE      SP6,TFHFUND1
          MOVE      SP8,TFHFTAB1
          MOVE      SP1,TFDAYC1
          MOVE      SP5,TFENDMB1
.
          MOVE      "*** End of Report ***",PRNTLINE
          CALL      PRNT0000
.
DEL9999   RETURN
+
.**************************************************************************
.*                             CRNF0000                                   *
.*                    Create a new theatre fee file                       *
.**************************************************************************
CRNF0000  
.-------  Loop through current theatre fee file and write to new file ------
.
          PACK      KEY23,SP70
          CALL      RSJHTFE1
CRNF1000  CALL      RKJHTFE1
          BRANCH    OVRCD,CRNF9999         * End of old file
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
.
          CALL      WRJHT1A1               * Write to new file
.
          GOTO      CRNF1000
.
CRNF9999  RETURN
+
.**************************************************************************
.*                             UPCF0000                                   *
.*     Update the current file (pattfeef) with the new file (newtfeef)    *
.**************************************************************************
UPCF0000  CALL      SOBF0000                * copy jhstfeaf to oldtfeaf
          CALL      KIBF0000                * remove jhstfeaf
.
.-------  Loop through new bed fee file and write to current file ------
.
          PACK      KEY23,SP70
          CALL      RSJHT1A1
UPCF1000  CALL      RKJHT1A1
          BRANCH    OVRCD,UPCF9999         * End of new file
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
.
          CALL      WRJHTFE1               * Write to current file
.
          GOTO      UPCF1000
.
UPCF9999  CALL      RNEW0000               * remove newtfeef
          RETURN
+
.**************************************************************************
.*                             SOBF0000                                   *
.*     Copy the current pattfeef to oldtfeef                              *
.**************************************************************************
SOBF0000  CALL      KOBF0000               * remove records from oldtfeef
.
.-------  Loop through new theatre fee file and write to current file ------
.
          PACK      KEY23,SP70
          CALL      RSJHTFE1
SOBF1000  CALL      RKJHTFE1
          BRANCH    OVRCD,SOBF9999         * End of new file
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
.
          CALL      WRJHT2A1               * Write to old file
.
          GOTO      SOBF1000
.
SOBF9999  RETURN
+
.*************************************************************************
.* KIBF0000  : remove all records from pattfeef                          *
.*************************************************************************
KIBF0000  PACK      KEY23,SP70
          CALL      RSJHTFE1
          CALL      RKJHTFE1
          BRANCH    OVRCD,KIBF9999
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          CALL      DEJHTFE1
.
          GOTO      KIBF0000
.
KIBF9999  RETURN
+
.******************************************************************************
.*                                  PRTSCR00                                  *
.*                           Print Screen Options (Option 9)                  *
.******************************************************************************
PRTSCR00  MOVE      "    Theatre Fees Global Deletion (New file)",HEADDES2
          MOVE      "    Key-in Values     ",PRNTLINE
          CALL      PRNT0000
          CLEAR     PRNTLINE
          APPEND    "    Claim Code         : ",PRNTLINE
          MOVE      "All",KEY10
          IF        CLMFLG = 0
            PACK      KEY10,TFCLM,SP10
          ENDIF
          APPEND    KEY10,PRNTLINE
          APPEND    SP4,PRNTLINE
          APPEND    CLDES,PRNTLINE
          RESET     PRNTLINE
          CALL      PRNT0000
.
PRTSCR10  CLEAR     PRNTLINE
          APPEND    "    Health Fund        : ",PRNTLINE
          MOVE      "All",KEY10
          IF        FNDFLG = 0
            PACK      KEY10,TFHFUND,SP10
          ENDIF
          APPEND    KEY10,PRNTLINE
          APPEND    SP4,PRNTLINE
          APPEND    FCODDES,PRNTLINE
          RESET     PRNTLINE
          CALL      PRNT0000
.
PRTSCR20  CLEAR     PRNTLINE
          APPEND    "    Health Fund Table  : ",PRNTLINE
          MOVE      "All",KEY10
          IF        TABFLG = 0
            PACK      KEY10,TFHFTAB,SP10
          ENDIF
          APPEND    KEY10,PRNTLINE
          APPEND    SP4,PRNTLINE
          APPEND    FTABDES,PRNTLINE
          RESET     PRNTLINE
          CALL      PRNT0000
.
PRTSCR30  CLEAR     PRNTLINE
          APPEND    "    Day Case Rate Ind. : ",PRNTLINE
          MOVE      SP10,KEY10
          MOVE      "No ",KEY3 
          MATCH     SP1,TFDAYC
          IF        !@EQUAL
            MOVE      "Yes",KEY3
          ENDIF
          PACK      KEY10,KEY3,SP10
          APPEND    KEY10,PRNTLINE
          RESET     PRNTLINE
          CALL      PRNT0000
.
PRTSCR40  CLEAR     PRNTLINE
          PACK      KEY23,SP1,DTCLSS,SP20 
          MOVE      ": ",KEY2
          PACK      KEY25,KEY23,KEY2
          APPEND    KEY25,PRNTLINE
          MOVE      "All",KEY10
          IF        THMFLG = 0
            PACK      KEY10,TFENDMBS,SP10
          ENDIF
          APPEND    KEY10,PRNTLINE
          APPEND    SP4,PRNTLINE
          APPEND    TBDESC,PRNTLINE
          RESET     PRNTLINE
          CALL      PRNT0000
.
.
PRTSCR60  CLEAR     PRNTLINE
          RESET     PRNTLINE
          CALL      PRNT0000
...       IF        GRPERR = 1
...         MOVE      "Invalid Miscellaneous Charge Group Code.  ",PRNTLINE
...         CALL      PRNT0000
...       ENDIF
.
          MOVE      SP70,PRNTLINE
          CALL      HED20000
.
PRTSCR99  RETURN
+
.******************************************************************************
.*                                  HEAD0000                                  *
.*                           Print The Report Header                          *
.******************************************************************************
HEAD0000  MOVE      ONE,CNOUNDLN
          MOVE      "- Process report",CPHDROPT
          CALL      HEAD132                 * Print the report header
          PRINT     *1,HEADDES1,*36,HEADDES2,*N
          PRINT     *N;
.
          IF        CPAGENO > 1
            CALL      HED20000
          ENDIF
.
HEAD9999  RETURN
+
HED20000  MOVE      ZERO,KEY1
          CLEAR     PRNTLINE
          APPEND    "  Claim   Health   H/F        DayCase",PRNTLINE
          APPEND    "                     ",PRNTLINE
          RESET     PRNTLINE
          CALL      PRNT0000
.
          CLEAR     PRNTLINE
          APPEND    "  Code    Fund     Table      Ind.     ",PRNTLINE
          APPEND    DTCLSS,PRNTLINE
          RESET     PRNTLINE
          CALL      PRNT0000
.
          CLEAR     PRNTLINE
          APPEND    "------------------------------------------",PRNTLINE
          APPEND    "------------------------------------------",PRNTLINE
          RESET     PRNTLINE
          CALL      PRNT0000
.
HED29999  RETURN
.******************************************************************************
.*                                  PRNT0000                                  *
 *                            Print An Error Report                           *
.******************************************************************************
PRNT0000  COMPARE   "56",CLNO
          CALL      HEAD0000 IF NOT LESS    * Print the report header
.
          RESET     PRNTLINE
          PRINT     *1,PRNTLINE
.
          ADD       ONE,CLNO
          PACK      PRNTLINE,SP70,SP70
.
PRNT9999  RETURN
+
.******************************************************************************
.* KOBF0000  : remove all records from oldtfeef                               *
.******************************************************************************
KOBF0000  PACK      KEY23,SP70
          CALL      RSJHT2A1
          CALL      RKJHT2A1
          BRANCH    OVRCD,KOBF9999
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          CALL      DEJHT2A1
.
          GOTO      KOBF0000
.
KOBF9999  RETURN
+
.******************************************************************************
.* RNEW0000  : remove all records from newtfeef                               *
.******************************************************************************
RNEW0000  PACK      KEY23,SP70
          CALL      RSJHT1A1
          CALL      RKJHT1A1
          BRANCH    OVRCD,RNEW9999
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          CALL      DEJHT1A1
.
          GOTO      RNEW0000
.
RNEW9999  RETURN
+
.******************************************************************************
ENDIT     PACK      PTCNTFEM,ZERO,ZERO
          WRITAB    CONTROLF,SEVENTY9;*1,PTCNTFEM
          MATCH     "IBARSH",PGM
          IF        @EQUAL
            MOVE      SP10,PTCNWTFE
            WRITAB    CONTROLF,HUND10;*1,PTCNWTFE
          ENDIF
.
ENDIT2    CHAIN     PGM
.
          INC       PATCODKY
          INC       PATFNDKY
          INC       PATTBLKY
          INC       TFILENAM
          INC       STD001IO
.
          INC       PATCODIO/INC
          INC       PATFN1IO/INC
          INC       PATTFEIO/INC
          INC       JHSTF1IO/INC
          INC       JHSTF2IO/INC
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
