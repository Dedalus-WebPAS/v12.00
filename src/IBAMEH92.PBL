.
.******************************************************************************
.*  System   : Mental Health                                                  *
.*  Program  : IBAMEH92                                                       *
.*  Desc.    : Periodic Statistical Update                                    *
.******************************************************************************
.*                                                                            *
.*  Author   : ROD   (19/12/91)   One of the All Time GREAT programs!         *
.*                                                                            *
.*  Mods     :                                                                *
.*        V9.02.00  26/10/2002  Lina Vo     SRF 22733                         *
.*                  Ported to V9                                              *
.******************************************************************************
.*        V12.00.01 21/05/2025 Nikitha B     TSK 0955096                      *
.*                  Alphanumeric changes                                      *
.*        V5.08.01  28/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.07.01  06/04/1999 Jill Habasque SRF 644923                       *
.*                  Changed TDEPT to TATYPE                                   *
.*        V5.07.00  28/10/1998  Davin                                         *
.*                  Mods for 507                                              *
.*        V5.04.03  05/09/1997  Steve Armstrong     505                       *
.*                  Mods for MEHLEGFD changes                                 *
.*        V5.04.02  10/01/1997  Steve Armstrong     MEH changes               *
.*                  Mods to cater for new CMH MHVISTAT statuses               *
.*        V5.04.01  07/11/1996  Howellsy                                      *
.*                  Added Review Time & Legal Status Time.                    *
.******************************************************************************
.*             V5.01.002  28/07/92  ROD                SRF 116179             *
.*                        Use Return from leave leave type & use zzz not ZZZ  *
.*             V5.01.003  16/09/92 J.Tan     SRF 117289                       *
.*                        Position read on the fromdate for pattranf          *
.*             V5.01.004  18/11/92 J.Tan     SRF 118786                       *
.*                        Mods to read the mental health visit file once for  *
.*                        each statistics update                              *
.*        V5.01.05  21/05/1993  Glenn Berry                 SRF 118786        *
.*                  "Advanced Algorithm"                                      *
.*                  Re-wrote most of the code to make the program run more    *
.*                  efficiently.                                              *
.*        V5.01.06  03/06/1994  Ian Rutt                                      *
.*                  Fixed for Global Recompile                                *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       MEHDPSFD/INC
          INC       MEHLEGFD/INC
          INC       MEHLSSFD/INC
          INC       MEHLVSFD/INC
          INC       MEHVI1FD/INC
          INC       MEHWSSFD/INC
          INC       PATCONFD/INC
          INC       PATCODFD/INC
          INC       PATDAYFD/INC
          INC       PATDEPFD/INC
          INC       PATDRGFD/INC
          INC       PATDSCFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATTRNFD/INC
          INC       PATWR1FD/INC
++
CDYSDAYS  FORM      6
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
CDYSYEAR  FORM      2
CODEA     INIT      "A "
CODELS    INIT      "LS"
CPTDATE   DIM       8 
CURRDATE  DIM       8
CURRWARD  DIM       3
DAYFNAME  DIM       8
ENADMS    DIM       8
ENDPER    DIM       8
FROMDATE  DIM       8
FROMDEPT  DIM       3
FROMWARD  DIM       3
NODAYFIL  FORM      1
OLDADMN   DIM       8                        * previous admission number
OLDDATE   DIM       8
OLDDEPT   DIM       3
OLDTRNW   DIM       3
OLDTWARD  DIM       3
PRTFDTE   DIM       10
PRTTDTE   DIM       10
RTRNDATE  DIM       8                        * Return Date
REQPER    DIM       6
SAVKEY6   DIM       6
SAVWARD   DIM       3
STADMS    DIM       8
STARTPER  DIM       8
STCENT    DIM       2
STDAY     DIM       2
STLEAVE   FORM      1
STMON     DIM       2
STYEAR    DIM       2
ZED20     INIT      "zzzzzzzzzzzzzzzzzzzz"
++
SAVEINST  FORM      6
SAVESLST  FORM      6
SAVEADMI  FORM      6
SAVEADMS  FORM      6
SAVEADMC  FORM      6
SAVETRNO  FORM      6
SAVETRNI  FORM      6
SAVERETH  FORM      6
SAVERETT  FORM      6
SAVERETA  FORM      6
SAVELVEH  FORM      6
SAVELVET  FORM      6
SAVELVEA  FORM      6
SAVEDSCH  FORM      6
SAVEDEAD  FORM      6
SAVEINBD  FORM      8
SAVESLBD  FORM      8
SAVEHLBD  FORM      8
SAVETLBD  FORM      8
SAVEAWBD  FORM      8
SAVESEPB  FORM      6
SAVESSLB  FORM      8
SAVEDSCB  FORM      8
SAVEDSLB  FORM      8
SAVEADMN  FORM      6
SAVECHGF  FORM      6
SAVECHGT  FORM      6
SAVELVES  FORM      6
SAVELVBD  FORM      8
SAVESTRT  FORM      6
SAVELEAV  FORM      6
SAVERETN  FORM      6
SAVELDAY  FORM      8
SAVERDAY  FORM      8
SAVKEY21  DIM       21
++
.
DIM16     DIM       16
.
PRGNAM    INIT      "Periodic Statistical Update"
PRGID     INIT      "IBAMEH92"
VERSION   INIT      "V12.00.01"
+
.
.************************************************************************
.*  ML0000  :  Mainline code                                            *
.************************************************************************
ML0000    CALL      INIT0000                 * initialisation
.
ML1000    CALL      MENU0000                 * exit or update?
          BRANCH    EXIT,ML9999
.
ML2000    CALL      GPER0000                 * get Period
          BRANCH    EXIT,ML1000              * nothing input
.
          CALL      CHCK0000                 * period if already updated?
          BRANCH    EXIT,ML2000              * don't continue
.
          CALL      GENS0000                 * generate stats
          GOTO      ML1000           
.
ML9999    CHAIN     PGM       
+
.****************************************************************************
.*  INIT0000  :  Initialisation                                             *
.****************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P60:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P60:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P60:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P60:24,"patdepaf";
          OPEN      PATDEPA1,"patdepaf"
.
          DISPLAY   *P60:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P60:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P60:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P60:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A3,"patmi1af"
.
          DISPLAY   *P60:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
.  
          DISPLAY   *P60:24,"patdrgaf";
          OPEN      PATDRGA3,"patdrgaf"
.
          DISPLAY   *P60:24,"mehdpsaf";
          OPEN      MEHDPSA1,"mehdpsaf"
.  
          DISPLAY   *P60:24,"mehlegaf";
          OPEN      MEHLEGA1,"mehlegaf"
.  
          DISPLAY   *P60:24,"mehlssaf";
          OPEN      MEHLSSA1,"mehlssaf"
.  
          DISPLAY   *P60:24,"mehlvsaf";
          OPEN      MEHLVSA1,"mehlvsaf"
.
          DISPLAY   *P60:24,"mehvi1af";
          OPEN      MEHVI1A1,"mehvi1af"
.
          DISPLAY   *P60:24,"mehwssaf";
          OPEN      MEHWSSA1,"mehwssaf"
.
          DISPLAY   *P60:24,*EL;
.
INIT9999  RETURN
+
.****************************************************************************
.*  MENU0000  :  Main Menu                                                  *
.****************************************************************************
MENU0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Update Mental Health Statistics":
                    *P1:7,"Select Option : "
. 
MENU1000  KEYIN     *P17:7,*DV,UNDLN1,*P17:7,*V2LON,OPTION
.
          COMPARE   ZERO,OPTION
          GOTO      MENU9000 IF EQUAL
.
          BRANCH    OPTION,MENU8000
.
          BEEP
          GOTO      MENU1000
.
MENU8000  MOVE      FALSE,EXIT
          GOTO      MENU9999
.
MENU9000  MOVE      TRUE,EXIT
.
MENU9999  RETURN
+
.****************************************************************************
.*  GPER0000  :  Get Period for update                                      *
.****************************************************************************
GPER0000  DISPLAY   *P1:9,"Enter the update Period :"
.
. Set up KEYPER parametres and default period
.
GPER0050  DISPLAY   *P27:9,*EF
          CALL      IBACLOCK
          MOVE      NINE,CVERT
          MOVE      TWENTY7,CCOL
          MOVE      TWENTY4,EVERT
          MOVE      ONE,ECOL 
          MOVE      ZERO,CHIGHLT   
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CCENT
.
          MOVE      SP8,REQPER
          UNPACK    SP6,CYEAR,CMON
          CALL      KEYPER                   * keyin the period
          BRANCH    OVRCD,GPER9000           * nothing input
          BRANCH    CQUEST,GPER0050
.
GPER1000  PACK      KEY6,CCENT,CYEAR,CMON
          CALL      RDDRGA3                  * valid REQPER?
          BRANCH    OVRCD,GPER3000
          PACK      REQPER,DRGYR,DRGNUM
.
. check if period keyed in is less than current period
.
          REP       " 0",DRGTDTE
          MATCH     CURRDATE,DRGTDTE
          GOTO      GPER1500 IF LESS         * Ok.
          GOTO      GPER8000                 * error
.
. set up to and from dates to print
.
GPER1500  UNPACK    DRGFDTE,CCENT,CYEAR,CMON,CDAY
          PACK      STADMS,CCENT,CYEAR,CMON,CDAY   * save date with century
          REP       " 0",STADMS  
          MOVE      DRGFDTE,STARTPER         * save start of period
          CALL      PACDATE
          MOVE      CPCDATE,PRTFDTE
.
          UNPACK    DRGTDTE,CCENT,CYEAR,CMON,CDAY
          PACK      ENADMS,CCENT,CYEAR,CMON,CDAY   * save date with century
          REP       " 0",ENADMS  
          MOVE      DRGTDTE,ENDPER           * save end of period
          CALL      PACDATE
          MOVE      CPCDATE,PRTTDTE
.
. display long desciption and from and to dates
.
          DISPLAY   *P38:9,*V2LON,DRGLDSC:
                    *P38:10,PRTFDTE," to ",PRTTDTE
.
          CALL      CONTQST                  * OK to continue?
          BRANCH    CEXIT,GPER2000,GPER0050,GPER9000
.          
GPER2000  UNPACK    STARTPER,STCENT,STYEAR,STMON,STDAY
          PACK      DAYFNAME,FILDAYA1,STCENT,STYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATDAYA1,DAYFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NODAYFIL
.
          MOVE      FALSE,EXIT
          GOTO      GPER9999
.
GPER3000  DISPLAY   *P1:24,*B,*V2LON,"Invalid Period.  ";
          CALL      HITENTER
          GOTO      GPER0050
.
. date keyed in was >= current period
.
GPER8000  DISPLAY   *P1:24,*EL,*B,"Must be less than current period.  ";
          CALL      HITENTER
          GOTO      GPER0050
.
. no REQPER entered or cancel so exit = true
.
GPER9000  MOVE      TRUE,EXIT
.
GPER9999  RETURN          
+
.
.****************************************************************************
.*  CHCK0000  :  Check if stats for period have already been updated        *
.****************************************************************************
CHCK0000  PACK      KEY9,REQPER,SP9
          CALL      RSMHWSS1 
          CALL      RKMHWSS1
          BRANCH    OVRCD,CHCK9000
.
          MATCH     REQPER,MHWSDATE
          GOTO      CHCK9000 IF NOT EQUAL
.
. verify if requested periods stats should be regenerated
.
          DISPLAY   *P1:24,*B,"This update has already been run":
                           ". Do you want to re-do the statistics ( / ) ? _":
                           *P72:24,*V2LON,"Y",*P74:24,"N"
.
CHCK1000  KEYIN     *P79:24,*DV,UNDLN1,*P79:24,*V2LON,ANS
.
          REP       UPPLOW,ANS
          MATCH     ANS,ANSY
          GOTO      CHCK2000 IF EQUAL
.
          MATCH     ANS,ANSN
          GOTO      CHCK8000 IF EQUAL
.
          BEEP
          GOTO      CHCK1000 
.
CHCK2000  CALL      DELT0000                 * delete previous update
          GOTO      CHCK9000
.
CHCK8000  MOVE      TRUE,EXIT
          GOTO      CHCK9999
.
CHCK9000  MOVE      FALSE,EXIT
.
CHCK9999  RETURN
+
.************************************************************************
.*  DELT0000  :  Delete all existing stat files for requested period    *
.************************************************************************
DELT0000  DISPLAY   *P1:24,*EL,*P25:24,*V2LON,"** Deleting Previous Update **"
.
. delete Ward Stats (mehwssaf)
.
          MOVE      REQPER,MHWSDATE
          PACK      KEY9,MHWSDATE,SP10
          CALL      RAMHWSS1                 * record exist with blank ward?
          BRANCH    OVRCD,DELT1000
          CALL      DEMHWSS1
DELT1000  CALL      RSMHWSS1 
          CALL      RKMHWSS1
          BRANCH    OVRCD,DELT2000
.
          MATCH     REQPER,MHWSDATE          * same period?
          GOTO      DELT2000 IF NOT EQUAL
.
          PACK      KEY9,MHWSDATE,MHWSWARD
          CALL      DEMHWSS1
          GOTO      DELT1000
.
. delete Department Stats (mehdpsaf)
.
DELT2000  MOVE      REQPER,MHDPDATE
          PACK      KEY9,MHDPDATE,SP10
          CALL      RAMHDPS1                 * record exist with blank dept.?
          BRANCH    OVRCD,DELT2100
          CALL      DEMHDPS1
DELT2100  CALL      RSMHDPS1 
          CALL      RKMHDPS1
          BRANCH    OVRCD,DELT3000
.
          MATCH     REQPER,MHDPDATE          * same period?
          GOTO      DELT3000 IF NOT EQUAL
.
          PACK      KEY9,MHDPDATE,MHDPDEPT
          CALL      DEMHDPS1
          GOTO      DELT2100
.
. delete Legal Status Stats (mehlssaf)
.
DELT3000  MOVE      REQPER,MHLSDATE
          PACK      KEY9,MHLSDATE,SP10
          CALL      RAMHLSS1                 * rec exist with blank legal stat?
          BRANCH    OVRCD,DELT3100
          CALL      DEMHLSS1
DELT3100  CALL      RSMHLSS1 
          CALL      RKMHLSS1
          BRANCH    OVRCD,DELT4000
.
          MATCH     REQPER,MHLSDATE          * same period?
          GOTO      DELT4000 IF NOT EQUAL
.
          PACK      KEY9,MHLSDATE,MHLSSTAT
          CALL      DEMHLSS1
          GOTO      DELT3100
.
. delete Leave Summary Stats (mehlvsaf)
.
DELT4000  MOVE      REQPER,MHLVDATE
          PACK      KEY9,MHLVDATE,SP10
          CALL      RAMHLVS1                 * rec exist with blank leave code?
          BRANCH    OVRCD,DELT4100
          CALL      DEMHLVS1               
DELT4100  CALL      RSMHLVS1 
          CALL      RKMHLVS1
          BRANCH    OVRCD,DELT9000
.
          MATCH     REQPER,MHLVDATE
          GOTO      DELT9000 IF NOT EQUAL
.
          PACK      KEY9,MHLVDATE,MHLVSTAT
          CALL      DEMHLVS1
          GOTO      DELT4100
.
DELT9000  DISPLAY   *P1:24,*EL;
.
DELT9999  RETURN
+
.***************************************************************************
.*  GENS0000  :  Generate Statistics                                       *
.***************************************************************************
GENS0000  
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P1:12,*EL,"Update started at   :  ",*V2LON,CTIMEIS
          CALL      GWRD0000                 * Get all Wards in Hospital
          CALL      GDEP0000                 * Get all Department Codes
          CALL      GLEG0000                 * Get all Legal Codes
          DISPLAY   *P1:14,*EL,"Scanning Admission  :";
          DISPLAY   *P1:15,*EL,"Found in Period     :";
          PACK      KEY8,SP8
          CALL      RSMHVIS1                 * position in file
GENS2000  CALL      RKMHVIS1                 * Loop thru MEH patients
          BRANCH    OVRCD,GENS3000           * End of File
.
          COMPARE   MHVISTAT,SIX             * ignore cmh records
          GOTO      GENS2000 IF LESS
.
GENS2500  DISPLAY   *P25:14,MHVIADMN
          CALL      ENPR0000                 * admitted after period?
          BRANCH    EXIT,GENS2000            * yes, ignore
          CALL      STPR0000                 * check status at start of period.
          BRANCH    EXIT,GENS2000            * discharged, ignore this patient.
          DISPLAY   *P25:15,MHVIADMN
          CALL      TRNF0000                 * Loop thru Transfer File
          CALL      EIBD0000                 * calc inpat. bdays to end of per.
          CALL      LLEG0000                 * Loop thru Legal Stat File
          GOTO      GENS2000                 * get next 
.
GENS3000  CLOCK     TIME,CTIMEIS
          DISPLAY   *P1:13,*EF,"Update finished at  :  ",*V2LON,CTIMEIS
          DISPLAY   *P1:24,*B,*V2LON,"Update Complete.  ";
          CALL      HITENTER
.
GENS9999  RETURN
+
.***************************************************************************
.*  GWRD0000  :  Get all Wards in Hospital                                 *
.***************************************************************************
GWRD0000  DISPLAY   *P1:14,*EL,"Scanning Ward       :"
          MOVE      SP3,CURRWARD             * init current ward
. 
. loop thru Ward file for each ward
.
          PACK      KEY6,SP6
          CALL      RDSWARD1
GWRD1000  CALL      RDKWARD1                 * get next ward
          BRANCH    OVRCD,GWRD9999
.
          MATCH     WWARD,CURRWARD           * same ward?
          GOTO      GWRD1000 IF EQUAL
.
          MOVE      WWARD,MHWSWARD           * file var
          MOVE      WWARD,CURRWARD           * save current ward
.
          DISPLAY   *P25:14,WWARD;
.
          CALL      WBED0000                 * Calc No. of Available beds
          PACK      KEY9,REQPER,MHWSWARD
          CALL      UWRD0000                 * Update Ward stats file
.
          GOTO      GWRD1000
.
GWRD9999  RETURN
+
.***************************************************************************
.* GDEP0000  :  Get All Department Codes
.***************************************************************************
GDEP0000  DISPLAY   *P1:14,*EL,"Scanning Department :"
.
          MOVE      REQPER,MHDPDATE          * period
. loop thru codes file for each Department
.
          PACK      KEY5,CODEA,SP5
          CALL      RDSCODE1
GDEP1000  CALL      RDKCODE1
          BRANCH    OVRCD,GDEP9999
.
          MATCH     TCODE,CODEA              * same category?
          GOTO      GDEP9999 IF NOT EQUAL
.
          MOVE      ACODE,MHDPDEPT           * file var (department)
          DISPLAY   *P25:14,MHDPDEPT;
.
          CALL      DBED0000                 * Calc No. of Available beds
          PACK      KEY9,REQPER,MHDPDEPT
          CALL      UDEP0000                 * Update Department stats file
.
          GOTO      GDEP1000                 * Get next
.
GDEP9999  RETURN
+
.***************************************************************************
.*  GLEG0000  :  Get all Legal Codes
.***************************************************************************
GLEG0000  DISPLAY   *P1:14,*EL,"Scanning Legal Code :" 
.
          MOVE      REQPER,MHLSDATE          * period
. 
. loop thru codes file for each Legal Status
.
          PACK      KEY5,CODELS,SP5
          CALL      RDSCODE1
GLEG1000  CALL      RDKCODE1
          BRANCH    OVRCD,GLEG9999
.
          MATCH     TCODE,CODELS             * same category?
          GOTO      GLEG9999 IF NOT EQUAL
.
          MOVE      ACODE,MHLSSTAT           * file var (Legal status)
          DISPLAY   *P25:14,MHLSSTAT;
.
          PACK      KEY9,REQPER,MHLSSTAT
          CALL      ULEG0000                 * Update Legal Status stats.
.
          GOTO      GLEG1000
.
GLEG9999  RETURN
+
.***************************************************************************
.*  WBED0000  :  Calculate No. of available beds during period             *
.***************************************************************************
WBED0000  PACK      SAVKEY6,WWARD,WBED       * save key
          MOVE      WOCCBED,MHWSBEDS         * # avail beds (if ward only)
.
          CALL      RDKWARD1                 * check if we have a bed
          BRANCH    OVRCD,WBED9000           * ward only
.
          MATCH     WWARD,CURRWARD           * same as current ward?
          GOTO      WBED9000 IF NOT EQUAL
.
          MOVE      ZERO,MHWSBEDS            * init # avail beds
          PACK      KEY6,CURRWARD,SP6        * position at start of ward
          CALL      RDSWARD1
WBED1000  CALL      RDKWARD1
          BRANCH    OVRCD,WBED9000
.
          MATCH     WWARD,CURRWARD           * still same ward?
          GOTO      WBED9000 IF NOT EQUAL
.
          ADD       ONE,MHWSBEDS             * increment # available beds
          GOTO      WBED1000
.
WBED9000  MOVE      SAVKEY6,KEY6             * restore record
          CALL      RDWARD1
.
WBED9999  RETURN
+
.***************************************************************************
.*  DBED0000  :  Calc available beds in a department                       *
.***************************************************************************
DBED0000  MOVE      ZERO,MHDPBEDS
          MOVE      SP3,SAVWARD
.
          PACK      KEY14,MHDPDEPT,ZED20
          CALL      RSPTDEP1
DBED1000  CALL      RPPTDEP1
          BRANCH    OVRCD,DBED9999
.
          MATCH     MHDPDEPT,PTDPDEPT        * still same dept?
          GOTO      DBED9999 IF NOT EQUAL
.
          MATCH     PTDPWARD,SAVWARD         * same as previous ward?
          GOTO      DBED1000 IF EQUAL
.
. get last date before end of period
.
          MATCH     ENDPER,PTDPDATE
          GOTO      DBED5000 IF EQUAL
          GOTO      DBED1000 IF NOT LESS
.
DBED5000  ADD       PTDPNBED,MHDPBEDS        * increment # avail beds
          MOVE      PTDPWARD,SAVWARD         * save ward
          GOTO      DBED1000
.
DBED9999  RETURN
+
.
.*****************************************************************************
.*  TRNF0000  : Loop thru Transfer File 
.*****************************************************************************
TRNF0000 
          CALL      IALL0000                 * Initialize All statistic vars
          PACK      KEY30,MHVIADMN,STADMS,SP30
          CALL      RDSTRAN2
TRNF2000  CALL      RDKTRAN2
          BRANCH    OVRCD,TRNF9999
.
          MATCH     TADMN,MHVIADMN           * same admission no.?
          GOTO      TRNF9999 IF NOT EQUAL
.
          MATCH     TDATE,ENADMS             * > end date?
          GOTO      TRNF9999 IF LESS         * not in range
.
.-------- check for leave
.
          MATCH     ANSL,TMOVE               * Leave?
          IF        @EQUAL
            CALL      LEAV0000               * handle Leave
            GOTO      TRNF2000               * Get next record
          ENDIF
.
.
.-------- check for return 
.
          MATCH     ANSR,TMOVE               * Return?
          IF        @EQUAL
            CALL      RTRN0000               * handle Return
            GOTO      TRNF2000               * Get next record
          ENDIF
.
.-------- check for admission
.
          MATCH     ANSA,TMOVE               * Admission?
          IF        @EQUAL
            CALL      ADMS0000               * Handle Admission
            GOTO      TRNF2000               * Get next record
          ENDIF
.
.-------- check for discharge
.
          MATCH     ANSD,TMOVE               * Discharge?
          IF        @EQUAL
            CALL      DSCH0000               * handle discharge
            GOTO      TRNF9999               * get another admission number
          ENDIF
.
.-------- check for change
.
          MATCH     ANSC,TMOVE               * Change?
          IF        @EQUAL
            CALL      CHNG0000               * handle Change
            GOTO      TRNF2000               * Get next record
          ENDIF
.
          GOTO      TRNF2000                 * Get next record
.
TRNF9999  RETURN
+
.**************************************************************************
.* ENPR0000 : Check what patient was doing at end of period.
.* Returns  : EXIT =1 if patient admitted after period.
.**************************************************************************
ENPR0000
          MOVE      ZERO,EXIT
.
          PACK      KEY30,MHVIADMN,ENADMS,SP30
          CALL      RDSTRAN2                * position at end of period
          CALL      RDPTRAN2                * read previous
          BRANCH    OVRCD,ENPR9000          * no records
.
          MATCH     TADMN,MHVIADMN          * same admission no.?
          GOTO      ENPR9000 IF NOT EQUAL   * no, no patient details before or
.                                             during period.
.
          GOTO      ENPR9999                
.
ENPR9000  MOVE      ONE,EXIT
.
ENPR9999  RETURN
+
.**************************************************************************
.* STPR0000 : Check what patient was doing at start of period.
.* Returns  : EXIT =1 if patient discharged before period.
.**************************************************************************
STPR0000
          MOVE      ZERO,EXIT
.
          PACK      KEY30,MHVIADMN,STADMS,SP30
          CALL      RDSTRAN2                * position at start of period
          CALL      RDPTRAN2                * read previous
.
          MATCH     TADMN,MHVIADMN          * same admission no.?
          GOTO      STPR9999 IF NOT EQUAL
.
          MATCH     "D",TMOVE               * Discharged?
          IF        @EQUAL
            MOVE    ONE,EXIT
            GOTO    STPR9999                * ignore
          ENDIF
.
          MATCH     "L",TMOVE               * Leave record?
          GOTO      STPR3000 IF NOT EQUAL

.----- On leave at start of period
.
          MOVE      ONE,MHLVSTRT
.
.---- Check if leave is Short Term Leave
.
          PACK      KEY5,ANST,ANSL,PTTRLTYP
          CALL      RDCODE1
.
          MATCH     SP1,TCINDC1
          IF        @EQUAL
            MOVE      ONE,MHWSSLST           * Inc. no. on short term leave
            MOVE      ONE,MHDPSLST                  at start of period.
            MOVE      ONE,MHLSSLST
            CALL      UWDL0000               * Update Ward, Dept, Legal Stats
          ENDIF
.
          GOTO        STPR9000
.
STPR3000  
.-------  patient must be in hospital at start of period
.
          MOVE      ONE,MHWSINST             * In hosp. for Ward.
          MOVE      ONE,MHDPINST             * In hosp. for Dept.
          MOVE      ONE,MHLSINST             * In hosp. for Legal Status
          CALL      UWDL0000                 * Update Ward, Dept, Legal stat.
.
STPR9000  PACK      KEY9,REQPER,PTTRLTYP     * set parameters
          CALL      ULEA0000                 * Update Leave stats
.
STPR9999  RETURN
+
.**************************************************************************
.* ADMS0000  :  Handle Admissions
.**************************************************************************
.
ADMS0000  CALL      TWRD0000                 * Ward transfer?
          CALL      TDEP0000                 * Department transfer?
.
. get Legal Status at admission
.
          PACK      KEY21,MHVIADMN,SP20
          CALL      RSMHLEG1
          CALL      RKMHLEG1
          BRANCH    OVRCD,ADMS9999
.
          MATCH     MHVIADMN,MHLEADMN        * same admission no?
          GOTO      ADMS9999 IF NOT EQUAL
.
. check legal status
.
          MOVE      SP1,TCINDC1
          PACK      KEY5,ANSL,ANSS,MHLESTAT
          CALL      RDCODE1
.
          MOVE      ONE,MHLSADMN             * Admission for Legal Stat.
.
          MATCH     ANSI,TCINDC1             * informal?
          IF        @EQUAL
            MOVE      ONE,MHWSADMI           * increment Informal pats
            MOVE      ONE,MHDPADMI          
            GOTO      ADMS8000
          ENDIF
.
          MATCH     ANSS,TCINDC1             * special?
          IF        @EQUAL
            MOVE      ONE,MHWSADMS           * increment Special pats
            MOVE      ONE,MHDPADMS
            GOTO      ADMS8000
          ENDIF
.
          MATCH     ANSC,TCINDC1             * committed?
          IF        @EQUAL
            MOVE      ONE,MHWSADMC           * increment Committed pats
            MOVE      ONE,MHDPADMC
            GOTO      ADMS8000
          ENDIF
.
ADMS8000  CALL     UWDL0000                  * Update Ward, Dept, Legal stats.
.
ADMS9999  RETURN
+
.**************************************************************************
.* DSCH0000  :  Handle Discharges and deaths      
.**************************************************************************
DSCH0000  
          CALL      TWRD0000                 * Ward transfer?
          CALL      TDEP0000                 * Department transfer?
          CALL      INBD0000                 * Calculate Inpatient Bed Days
          CALL      SIBD0000                 * Calc Separation Inpatient BedDays
.
. check if discharge is a death
.
          PACK      KEY8,MHVIADMN
          CALL      RDDSCH1
          BRANCH    OVRCD,DSCH9999           * No discharge record
.
          MOVE      SP1,TCINDC1
          PACK      KEY5,ANSD,SP1,DSTAT
          CALL      RDCODE1
.
          MATCH     ANSD,TCINDC1             * Death?
          IF        @EQUAL
            MOVE      ONE,MHWSDEAD           * No. Deaths for Ward.
            MOVE      ONE,MHDPDEAD           * No. Deaths for department.
            MOVE      ONE,MHLSDEAD           * No. Deaths for Legal status.
          ELSE
            MOVE      ONE,MHWSDSCH           * No. Discharges for Ward.
            MOVE      ONE,MHDPDSCH           * No. Discharges for Dept.
            MOVE      ONE,MHLSDSCH           * No. Discharges for Legal Status.
          ENDIF
.
DSCH9000  CALL      UWDL0000                 * Update Ward, Dept, Legal stats.
.
DSCH9999  RETURN
+
.
.**************************************************************************
.*  LEAV0000  :  Handle Leave Record      
.**************************************************************************
LEAV0000 
          CALL      INBD0000                 * Calculate Inpatient Bed Days
.
.---- check if next record is a "Return"
.
          PACK      CDYSFDTE,TDATE           * Set up FROM date
          REP       " 0",CDYSFDTE
.
          CALL      RDKTRAN2                 * next read to test for "R"
          BRANCH    OVRCD,LEAV0000
.
          MATCH     "R",TMOVE                * Is this a "Return" record?
          IF        @EQUAL
            MATCH     TDATE,ENADMS           * after end of period?
            IF        @LESS
              PACK      CDYSTDTE,ENDPER      * Set up TO date
            ELSE
              PACK      CDYSTDTE,TDATE       * Set up TO date
            ENDIF
            REP       " 0",CDYSTDTE
            CALL      LVST0000               * Calc Leave stats
            CALL      RDPTRAN2               * Restore file position 
          ELSE
            CALL      RDPTRAN2               * Restore file position 
            PACK      CDYSTDTE,ENDPER        * Set up TO date as end of period
            REP       " 0",CDYSTDTE
            CALL      LVST0000               * Calc Leave stats
          ENDIF  
.
LEAV9999  RETURN
+
.
.**************************************************************************
.* RTRN0000  :  Handle Returns
.**************************************************************************
RTRN0000  
          CALL      TWRD0000                 * Ward transfer?
          CALL      TDEP0000                 * Department transfer?
.
          PACK      CDYSFDTE,TDATE           * Set up FROM date
          REP       " 0",CDYSFDTE
.
.----- check if return day & leave day are the same
.
          MOVE      TDATE,RTRNDATE           * set up return date
.
          CALL      RDPTRAN2                 * previous read for 'L' record
          BRANCH    OVRCD,RTRN9999
.
          MATCH     TDATE,RTRNDATE           * leave on same date as returned?
          IF        @EQUAL
            CALL      RDKTRAN2               * restore file pos.
            GOTO      RTRN9999               * ignore Leave/Return
          ENDIF
.
          PACK      CDYSTDTE,TDATE           * Set up TO date
          REP       " 0",CDYSTDTE
.
          CALL      CALCDAYS
          IF        CDYSDAYS <> 0
            SUB       ONE,CDYSDAYS
          ENDIF
.
          MOVE      CDYSDAYS,MHLVRDAY        * Total Days on leave for returnees
.
          CALL      RDKTRAN2                 * restore file pos
.
.----- check if discharged while on leave
.
          PACK      KEY16,TDATE,MHVIADMN
          CALL      RDDSCH2
          BRANCH    OVRCD,RTRN1000           * NOT discharged while on leave
.
.----- patient discharged while on leave now check if discharge was a death.
.
          MOVE      SP1,TCINDC1
          PACK      KEY5,ANSD,SP1,DSTAT
          CALL      RDCODE1
          BRANCH    OVRCD,RTRN1000
.
          MATCH     ANSD,TCINDC1             * Death?
          IF        @EQUAL
            MOVE      ONE,MHLVDEAD           * death
          ELSE
            MOVE      ONE,MHLVDSCH           * discharge
          ENDIF
.
RTRN1000
.----- we have a return from leave record
. increment no. pats depending on type of leave
.
          MOVE      ONE,MHLVRETN             * inc. returns from leave
.
          PACK      KEY5,ANST,ANSL,PTTRLTYP
          CALL      RDCODE1
          BRANCH    OVRCD,RTRN9500
.
          MATCH     SP1,TCINDC1              * Short term leave?
          IF        @EQUAL
            PACK      CDYSTDTE,TDATE         * Set up TO date parameter
            REP       " 0",CDYSTDTE
            CALL      SSBD0000               * calc Sep. short leave bed days
            GOTO      RTRN9000
          ENDIF
.
          MATCH     ANSH,TCINDC1
          IF        @EQUAL
            MOVE      ONE,MHWSRETH           * Holiday return for Ward
            MOVE      ONE,MHDPRETH           * Holiday return for Dept.
            MOVE      ONE,MHLSRETN           * Holiday return for Legal Status
            GOTO      RTRN9000
          ENDIF
.
          MATCH     ANST,TCINDC1
          IF        @EQUAL
            MOVE      ONE,MHWSRETT           * Trial return for Ward
            MOVE      ONE,MHDPRETT           * Trial return for Dept
            MOVE      ONE,MHLSRETN           * Trial return for Legal Status.
            GOTO      RTRN9000
          ENDIF
.
          MATCH     ANSA,TCINDC1
          IF        @EQUAL
            MOVE      ONE,MHWSRETA           * AWOL return for Ward
            MOVE      ONE,MHDPRETA           * AWOL return for Dept
            MOVE      ONE,MHLSRETA           * AWOL return for Legal Status
            GOTO      RTRN9000
          ENDIF
.
          GOTO      RTRN9500
.
RTRN9000  CALL      UWDL0000                 * Update Ward, Dept, Legal stats.
.
RTRN9500  PACK      KEY9,REQPER,PTTRLTYP     * set parameters
          CALL      ULEA0000                 * Update Leave Summary Stats 
.
RTRN9999  RETURN
+
.
.***************************************************************************
.*  CHNG0000  :  Handle Change
.***************************************************************************
CHNG0000
          CALL      TWRD0000                 * Ward transfer?
          CALL      TDEP0000                 * Department transfer?
          CALL      INBD0000                 * caluclate Inpatient Bed Days
          CALL      SIBD0000                 * Calc Separation Inpatient BedDays
.
CHNG9999  RETURN
+
.***************************************************************************
.*  INBD0000  : Calculate Inpatient Bed Days up to current transfer record.
.*  Called by : CHNG0000, LEAV0000, DSCH0000
.***************************************************************************
INBD0000
          CALL      RDPTRAN2                 * Read Back 
          BRANCH    OVRCD,INBD9999
.
          MOVE      TDATE,FROMDATE           * save variables
          MOVE      TWARD,FROMWARD
          MOVE      TATYPE,FROMDEPT
.
          MATCH     STADMS,FROMDATE          * Moved "from" before period?
          IF        @LESS
            PACK      CDYSFDTE,STARTPER      * use start of period
          ELSE
            PACK      CDYSFDTE,FROMDATE      * use FROM date
          ENDIF
          REP       " 0",CDYSFDTE
.
          CALL      RDKTRAN2                 * Restore file pos
.
          MATCH     TDATE,ENADMS
          IF        @LESS
            PACK      CDYSTDTE,ENDPER        * use end of period
          ELSE 
            PACK      CDYSTDTE,TDATE         * Set up TO date
          ENDIF
          REP       " 0",CDYSTDTE
.
          CALL      CALCDAYS
          IF        CDYSDAYS <> 0
            SUB       ONE,CDYSDAYS
          ENDIF
. 
.-------- Update Inpatient Bed Days
.
          MOVE      CDYSDAYS,MHWSINBD        * Ward Inpatient bed days
          PACK      KEY9,REQPER,FROMWARD     * do the update using previous ward
          CALL      UWRD0000                 * Update ward stats
.
          MOVE      CDYSDAYS,MHDPINBD        * Dept Inpatient bed days
          PACK      KEY9,REQPER,FROMDEPT     * update using previous dept.
          CALL      UDEP0000                 * Update department stats
.
          MOVE      CDYSDAYS,MHLSINBD        * Legal Stat Inpatient bed days
          PACK      KEY16,MHVIADMN,FROMDATE 
          CALL      GLST0000                 * Get Legal Status
          PACK      KEY9,REQPER,MHLESTAT     * set up parameters
          CALL      ULEG0000                 * Update Legal stats
.
INBD9999  RETURN
+
.***************************************************************************
.*  EIBD0000  : Calculate Inpatient Bed Days up to end of period
.***************************************************************************
EIBD0000
          PACK      KEY30,MHVIADMN,ENADMS,SP30
          CALL      RDSTRAN2                 * pos. on end of period
          CALL      RDPTRAN2                 * Read previous transfer record.
          BRANCH    OVRCD,EIBD9999
.
          MATCH     "D",TMOVE                * Discharge record?
          GOTO      EIBD9999 IF EQUAL        * Not in hospital
.
          MATCH     "L",TMOVE                * Leave record?
          GOTO      EIBD9999 IF EQUAL        * Not in hospital
.
.---- we have bed days to calculate.
.
          PACK      CDYSTDTE,ENDPER          * use end of period as TO date
          REP       " 0",CDYSTDTE
.
          MATCH     STADMS,TDATE             * "from" record before period?
          IF        @LESS
            PACK      CDYSFDTE,STARTPER      * use start of period
          ELSE
            PACK      CDYSFDTE,TDATE         * use date on transfer rec.
          ENDIF
          REP       " 0",CDYSFDTE
.
          CALL      CALCDAYS
          IF        CDYSDAYS <> 0
            SUB       ONE,CDYSDAYS
          ENDIF
. 
.-------- Update Inpatient Bed Days
.
          MOVE      CDYSDAYS,MHWSINBD        * Ward Inpatient bed days
          MOVE      CDYSDAYS,MHDPINBD        * Dept Inpatient bed days
          MOVE      CDYSDAYS,MHLSINBD        * Legal Stat Inpatient bed days
          CALL      UWDL0000                 * Update Ward, Dept, Legal stats.
.
EIBD9999  RETURN
+
.***************************************************************************
.*  SIBD0000  : Calculate Separation Inpatient Bed Days 
.*  Called by : CHNG0000, RTRN0000, DSCH0000
.***************************************************************************
SIBD0000
          CALL      RDPTRAN2                 * Read Back 
          BRANCH    OVRCD,SIBD9999
.
          MOVE      TDATE,FROMDATE           * Save variables
          MOVE      TWARD,FROMWARD
          MOVE      TATYPE,FROMDEPT
.
          CALL      RDKTRAN2                 * Restore file pos
.
          PACK      CDYSFDTE,FROMDATE        * Set up FROM date
          REP       " 0",CDYSFDTE
          PACK      CDYSTDTE,TDATE           * Set up TO date
          REP       " 0",CDYSTDTE
.
          CALL      CALCDAYS
          IF        CDYSDAYS <> 0
            SUB       ONE,CDYSDAYS
          ENDIF
.
          MATCH     TWARD,FROMWARD           * Change of Ward?
          IF        !@EQUAL 
            MOVE      CDYSDAYS,MHWSSEPB      * Ward Separation Inpat. Bed Days
            MATCH     "D",TMOVE              * Discharge?
            IF        @EQUAL
              MOVE      CDYSDAYS,MHWSDSCB    * Dischage inpatient bed days
            ENDIF
            PACK      KEY9,REQPER,FROMWARD   * update using previous ward
            CALL      UWRD0000               * Update ward stats
          ENDIF
.
          MATCH     TATYPE,FROMDEPT           * Change of Department?
          IF        !@EQUAL 
            MOVE      CDYSDAYS,MHDPSEPB      * Dept Seperation Inpat. Bed Days
            MATCH     "D",TMOVE              * Discharge?
            IF        @EQUAL
              MOVE      CDYSDAYS,MHDPDSCB    * Dischage inpatient bed days
            ENDIF
            PACK      KEY9,REQPER,FROMDEPT   * update using previous dept.
            CALL      UDEP0000               * Update department stats
          ENDIF
.
SIBD9999  RETURN
+
.
.***************************************************************************
.*  SSBD0000  : Calculate Separation Short term leave Bed Days 
.* Parameters :  CDYSTDTE  - return date
.***************************************************************************
SSBD0000
          CALL      RDPTRAN2                 * Read Back 
          BRANCH    OVRCD,SSBD9999
.
.---- we have the corresponding 'L' record.
.
          PACK      CDYSFDTE,TDATE           * Set up From date
          REP       " 0",CDYSFDTE
.
          CALL      CALCDAYS
          IF        CDYSDAYS <> 0
            SUB       ONE,CDYSDAYS
          ENDIF
.
          MOVE      CDYSDAYS,MHWSSSLB        * Ward  Sep. short leave bed days
          MOVE      CDYSDAYS,MHDPSSLB        * Dept  Sep. short leave bed days
          MOVE      CDYSDAYS,MHLSSSLB        * Legal Sep. short leave bed days
.
.---- patient discharged or died while on leave?
.
          IF        (MHLVDEAD > 0) | (MHLVDSCH > 0)
            MOVE      CDYSDAYS,MHWSDSLB      * Ward  Disch. short leave bed days
            MOVE      CDYSDAYS,MHDPDSLB      * Dept  Disch. short leave bed days
            MOVE      CDYSDAYS,MHLSDSLB      * Legal Disch. short leave bed days
          ENDIF
.
          CALL      RDKTRAN2                 * Restore file pos.
.
..(file update is done by calling routine)
.
SSBD9999  RETURN
+
.
.***************************************************************************
.*  LVST0000  :  Calculate Leave stats
.* parameters :  CDYSFDTE  - leave date
.*               CDYSTDTE  - return date
.***************************************************************************
LVST0000
.---- calculate leave days during period
.
          CALL      CALCDAYS
          IF        CDYSDAYS <> 0
            SUB       ONE,CDYSDAYS
          ENDIF
.
          MOVE      CDYSDAYS,MHLVLDAY        * Inc. leave days during period
          MOVE      ONE,MHLVLEAV             * Inc. No. times on leave
.
.---- add days on leave during period for appropriate leave type
.
          PACK      KEY5,ANST,ANSL,PTTRLTYP
          CALL      RDCODE1
          BRANCH    OVRCD,LVST9500
.
          MATCH     SP1,TCINDC1
          IF        @EQUAL
            MOVE      CDYSDAYS,MHWSSLBD      * Inc. Short leave bed days 
            MOVE      CDYSDAYS,MHDPSLBD            during period
            MOVE      CDYSDAYS,MHLSSLBD
            GOTO      LVST9000
          ENDIF
.
          MATCH     ANSH,TCINDC1
          IF        @EQUAL
            MOVE      CDYSDAYS,MHWSHLBD      * Inc. Holiday leave bed days 
            MOVE      CDYSDAYS,MHDPHLBD               during period
            MOVE      CDYSDAYS,MHLSLVBD       
.
            MOVE      ONE,MHWSLVEH           * inc. no. holiday leave
            MOVE      ONE,MHDPLVEH
            MOVE      ONE,MHLSLVES
            GOTO      LVST9000
          ENDIF
.
          MATCH     ANST,TCINDC1
          IF        @EQUAL
            MOVE      CDYSDAYS,MHWSTLBD      * Inc. Trial leave bed days 
            MOVE      CDYSDAYS,MHDPTLBD               during period
            MOVE      CDYSDAYS,MHLSLVBD         
.
            MOVE      ONE,MHWSLVET           * increment no. trial leave
            MOVE      ONE,MHDPLVET
            MOVE      ONE,MHLSLVES
            GOTO      LVST9000
          ENDIF
.
          MATCH     ANSA,TCINDC1
          IF        @EQUAL
            MOVE      CDYSDAYS,MHWSAWBD      * Inc. AWOL leave bed days 
            MOVE      CDYSDAYS,MHDPAWBD               during period
            MOVE      CDYSDAYS,MHLSAWBD
.
            MOVE      ONE,MHWSLVEA           * increment no. AWOL leave
            MOVE      ONE,MHDPLVEA
            MOVE      ONE,MHLSLVEA
            GOTO      LVST9000
          ENDIF
.
          GOTO      LVST9500
.
         
LVST9000  CALL      UWDL0000                 * Update Ward, Dept, Legal stats.
.
LVST9500  PACK      KEY9,REQPER,PTTRLTYP     * set parameters
          CALL      ULEA0000                 * Update Leave stats.
.
LVST9999  RETURN
+
.
.***************************************************************************
.*  TWRD0000  : Check Transfer To/From Ward
.***************************************************************************
TWRD0000
          MATCH     "A",TMOVE                * Admission?
          IF        @EQUAL
            MOVE      ONE,MHWSTRNI           * must be a transfer into ward
            PACK      KEY9,REQPER,TWARD
            CALL      UWRD0000               * Update Ward stats
            GOTO      TWRD9999
          ENDIF
.
          MATCH     "D",TMOVE                * Discharge?
          IF        @EQUAL
            MOVE      ONE,MHWSTRNO           * must be a transfer out of ward
            PACK      KEY9,REQPER,TWARD
            CALL      UWRD0000               * Update Ward stats
            GOTO      TWRD9999
          ENDIF
.
.----- must be either "C" or "L" record
.
          CALL      RDPTRAN2                 * read previous record
          BRANCH    OVRCD,TWRD9999 
.
          MOVE      TWARD,FROMWARD
          MOVE      TDATE,FROMDATE
.
          CALL      RDKTRAN2                 * Restore file pos
.
          MATCH     TWARD,FROMWARD           * did we change ward?
          GOTO      TWRD9999 IF EQUAL        * no

          MOVE      ONE,MHWSTRNI             * transfer to TWARD
          PACK      KEY9,REQPER,TWARD
          CALL      UWRD0000                 * Update Ward stats
.
          MATCH     STADMS,FROMDATE          * Moved "from" before period?
          GOTO      TWRD9999 IF LESS         * yes 
.
          MOVE      ONE,MHWSTRNO             * transfer from FROMWARD
          PACK      KEY9,REQPER,FROMWARD
          CALL      UWRD0000                 * Update Ward stats
.
TWRD9999  RETURN
+
.
.***************************************************************************
.*  TDEP0000  : Transfer To/From Department
.***************************************************************************
TDEP0000
          MATCH     "A",TMOVE                * Admission?
          IF        @EQUAL
            MOVE      ONE,MHDPTRNI           * must be a transfer into dept.
            PACK      KEY9,REQPER,TATYPE
            CALL      UDEP0000               * Update Dept stats
            GOTO      TDEP9999
          ENDIF
.
          MATCH     "D",TMOVE                * Discharge?
          IF        @EQUAL
            MOVE      ONE,MHDPTRNO           * must be a transfer out of dept
            PACK      KEY9,REQPER,TATYPE
            CALL      UDEP0000               * Update Dept stats
            GOTO      TDEP9999
          ENDIF
.
.----- must be either "C" or "L" record
.
          CALL      RDPTRAN2               * read previous record
          BRANCH    OVRCD,TDEP9999
.
          MOVE      TATYPE,FROMDEPT
          MOVE      TDATE,FROMDATE
.
          CALL      RDKTRAN2               * restore file pos
.
          MATCH     TATYPE,FROMDEPT         * did we change Dept?
          GOTO      TDEP9999 IF EQUAL      * no
.
          MOVE      ONE,MHDPTRNI           * transfer to TATYPE
          PACK      KEY9,REQPER,TATYPE
          CALL      UDEP0000               * Update Dept stats
.
          MATCH     STADMS,FROMDATE        * Moved "from" before period?
          GOTO      TWRD9999 IF LESS       * yes 
.
          MOVE      ONE,MHDPTRNO           * transfer from FROMDEPT
          PACK      KEY9,REQPER,FROMDEPT
          CALL      UDEP0000               * Update Dept stats
.
TDEP9999  RETURN
+
.***************************************************************************
.*  GLST0000   :  Get Legal Status as of given date
.* Parameters  :  KEY16    - Admission Number
.*                         - Given Date      (CCYYMMDD)
.*
.* Returns     :  MHLESTAT - Legal status as of given date
.***************************************************************************
.
GLST0000  PACK      KEY21,KEY16,ZED20 
          CALL      RSMHLEG1                * pos'n after last record for date
          CALL      RPMHLEG1                * read previous record
          BRANCH    OVRCD,GLST9000          * eof - finished
.
          PACK      DIM16,MHLEADMN,MHLEDATE,SP20
          MATCH     KEY16,DIM16             * same admission no. and date ?
          GOTO      GLST9999 IF EQUAL       * yes - finished
.
GLST9000  MOVE      SP3,MHLESTAT            * no record found
.
GLST9999  RETURN
+
.**************************************************************************
.* LLEG0000 : Loop thru Legal Stat File
.**************************************************************************
.
LLEG0000  PACK      KEY21,MHVIADMN,SP20
          CALL      RSMHLEG1
LLEG2000  CALL      RKMHLEG1
          BRANCH    OVRCD,LLEG9999
.
          MATCH     MHLEADMN,MHVIADMN        * same admission no.?
          GOTO      LLEG9999 IF NOT EQUAL
.
          MATCH     STARTPER,MHLEDATE        * < start date ?
          GOTO      LLEG2000 IF LESS
.
          MATCH     MHLEDATE,ENDPER          * > end date?
          IF        @LESS
            CALL      TLEG0000               * yes check for last "from" change
            GOTO      LLEG9999
          ENDIF
.
          MATCH     ANSR,MHLEFLAG            * review status change only ?
          GOTO      LLEG2000 IF EQUAL        * yes - ignore
.
          MATCH     ANSN,MHLEFLAG            * no status change ?
          GOTO      LLEG2000 IF EQUAL        * yes - ignore
.
.----- we have a change TO a new Legal status
.
          MOVE      ONE,MHLSCHGT             * Change TO legal status
          PACK      KEY9,REQPER,MHLESTAT     * set up parameters
          CALL      ULEG0000                 * Update Legal stats
.
          CALL      TLEG0000                 * Calc. Transfers in Legal Status
.
          GOTO      LLEG2000
.
LLEG9999  RETURN
+
.**************************************************************************
.* TLEG0000 :  calculate Transfers in Legal Status
.**************************************************************************
.
.----- check if changed FROM legal status was inside period
.
TLEG0000  PACK      SAVKEY21,MHLEADMN,MHLEDATE,MHLETIME  * save key for record
TLEG1000  CALL      RPMHLEG1                 * Read previous
          BRANCH    OVRCD,TLEG8000           * eof - finished
.
          MATCH     MHLEADMN,MHVIADMN        * same admission no.?
          GOTO      TLEG8000 IF NOT EQUAL
.
          MATCH     STARTPER,MHLEDATE        * < start date?
          GOTO      TLEG8000 IF LESS
.
          MATCH     ANSR,MHLEFLAG            * review status change only ?
          GOTO      TLEG1000 IF EQUAL        * yes - ignore
.
          MATCH     ANSN,MHLEFLAG            * no status change ?
          GOTO      TLEG1000 IF EQUAL        * yes - ignore
.
          MOVE      ONE,MHLSCHGF             * Change FROM legal status
          PACK      KEY9,REQPER,MHLESTAT     * set up parameters
          CALL      ULEG0000                 * Update Legal stats
.
TLEG8000  MOVE      SAVKEY21,KEY21
          CALL      RDMHLEG1                 * Restore file pos.
.
TLEG9999  RETURN
+
.***************************************************************************
.*  UWDL0000   :  Update Ward  Stats File,
.*                       Dept  Stats File,
.*                       Legal Stats File.
.***************************************************************************
UWDL0000
          PACK      KEY9,REQPER,TWARD        * set up parameters
          CALL      UWRD0000                 * Update Ward stats
.
          PACK      KEY9,REQPER,TATYPE       * set up parameters
          CALL      UDEP0000                 * Update Department stats
.
          PACK      KEY16,MHVIADMN,TDATE     * set up parameters
          CALL      GLST0000                 * Get Legal Status
          PACK      KEY9,REQPER,MHLESTAT     * set up parameters
          CALL      ULEG0000                 * Update Legal stats
.
UWDL9999  RETURN
+
.
.***************************************************************************
.*  UWRD0000   :  Update Ward Stats File
.*  parameters :  KEY9  - Key to first Index of MEHWSSFD
.***************************************************************************
UWRD0000
          UNPACK    KEY9,MHWSDATE,MHWSWARD   * set up key variables
          CALL      RAMHWSS1                 * Does Record exist?
          IF        OVRCD=1
            CALL      IWRD0000               * Initialize Ward variables.
            CALL      WRMHWSS1               * Write New Ward Record 
          ELSE
            CALL      SWRD0000               * Save Ward Variables
            CALL      RDMHWSS1               * Read Values
            CALL      AWRD0000               * Add Ward Variables to Record 
            CALL      UPMHWSS1               * Update Ward Record
          ENDIF
.
          CALL      IWRD0000                 * Initialize ward vars.
.
UWRD9999  RETURN
+
.***************************************************************************
.*  UDEP0000   :  Update Department Statistics File
.*  Parameters :  KEY9  - Key to first index of MEHDPSFD
.***************************************************************************
UDEP0000
          UNPACK    KEY9,MHDPDATE,MHDPDEPT
          CALL      RAMHDPS1                 * Does Record exist?
          IF        OVRCD=1
            CALL      IDEP0000               * Initialize Department Variables
            CALL      WRMHDPS1               * Write New Department Record 
          ELSE
            CALL      SDEP0000               * Save Department Variables
            CALL      RDMHDPS1               * Read Values
            CALL      ADEP0000               * Add Department Vars to Record 
            CALL      UPMHDPS1               * Update Ward Record
          ENDIF
.
          CALL      IDEP0000                 * Initialize dept vars.   
.
UDEP9999  RETURN
+
.***************************************************************************
.*  ULEG0000  :  Update Legal Status Summary file
.***************************************************************************
ULEG0000
          UNPACK    KEY9,MHLSDATE,MHLSSTAT
          CALL      RAMHLSS1                 * Does Record exist?
          IF        OVRCD=1
            CALL      ILEG0000               * Initialize Legal Variables
            CALL      WRMHLSS1               * Write New Legal Record 
          ELSE
            CALL      SLEG0000               * Save Legal Variables
            CALL      RDMHLSS1               * Read Values
            CALL      ALEG0000               * Add Department Vars to Record 
            CALL      UPMHLSS1               * Update Legal Status Record
          ENDIF
.
          CALL      ILEG0000                 * Initialize legal status vars.   
.
ULEG9999  RETURN
+
.***************************************************************************
.*  ULEA0000  :  Update Leave Statistics File
.***************************************************************************
ULEA0000
          UNPACK    KEY9,MHLVDATE,MHLVSTAT
          CALL      RAMHLVS1                 * Does Record exist?
          IF        OVRCD=1
            CALL      ILEA0000               * Initialize Leave Variables
            CALL      WRMHLVS1               * Write New Leave Record 
          ELSE
            CALL      SLEA0000                 * Save Leave Variables
            CALL      RDMHLVS1                 * Read Values
            CALL      ALEA0000                 * Add Leave Variables to Record 
            CALL      UPMHLVS1                 * Update Leave Record
          ENDIF
.
          CALL      ILEA0000                 * Initialize leave vars.   
.
ULEA9999  RETURN
+
.***************************************************************************
.*  IALL0000  :  Initialize ALL vailables
.***************************************************************************
IALL0000
          CALL      IWRD0000                 * Initialize Ward variables
          CALL      IDEP0000                 * Initialize Department vars
          CALL      ILEG0000                 * Initialize Legal Stat vars
          CALL      ILEA0000                 * Initialize Leave vars
.
IALL9999  RETURN
+
.***************************************************************************
.*  IWRD0000  :  Initialize Ward Variables
.***************************************************************************
IWRD0000
          MOVE       ZERO,MHWSINST
          MOVE       ZERO,MHWSSLST
          MOVE       ZERO,MHWSADMI
          MOVE       ZERO,MHWSADMS
          MOVE       ZERO,MHWSADMC
          MOVE       ZERO,MHWSTRNO
          MOVE       ZERO,MHWSTRNI
          MOVE       ZERO,MHWSRETH
          MOVE       ZERO,MHWSRETT
          MOVE       ZERO,MHWSRETA
          MOVE       ZERO,MHWSLVEH
          MOVE       ZERO,MHWSLVET
          MOVE       ZERO,MHWSLVEA
          MOVE       ZERO,MHWSDSCH
          MOVE       ZERO,MHWSDEAD
          MOVE       ZERO,MHWSINBD
          MOVE       ZERO,MHWSSLBD
          MOVE       ZERO,MHWSHLBD
          MOVE       ZERO,MHWSTLBD
          MOVE       ZERO,MHWSAWBD
          MOVE       ZERO,MHWSSEPB
          MOVE       ZERO,MHWSSSLB
          MOVE       ZERO,MHWSDSCB
          MOVE       ZERO,MHWSDSLB
.
IWRD9999  RETURN
+
.***************************************************************************
.*  IDEP0000  :  Initialize Department Variables
.***************************************************************************
IDEP0000    
          MOVE      ZERO,MHDPINST
          MOVE      ZERO,MHDPSLST
          MOVE      ZERO,MHDPADMI
          MOVE      ZERO,MHDPADMS
          MOVE      ZERO,MHDPADMC
          MOVE      ZERO,MHDPTRNO
          MOVE      ZERO,MHDPTRNI
          MOVE      ZERO,MHDPRETH
          MOVE      ZERO,MHDPRETT
          MOVE      ZERO,MHDPRETA
          MOVE      ZERO,MHDPLVEH
          MOVE      ZERO,MHDPLVET
          MOVE      ZERO,MHDPLVEA
          MOVE      ZERO,MHDPDSCH
          MOVE      ZERO,MHDPDEAD
          MOVE      ZERO,MHDPINBD
          MOVE      ZERO,MHDPSLBD
          MOVE      ZERO,MHDPHLBD
          MOVE      ZERO,MHDPTLBD
          MOVE      ZERO,MHDPAWBD
          MOVE      ZERO,MHDPSEPB
          MOVE      ZERO,MHDPSSLB
          MOVE      ZERO,MHDPDSCB
          MOVE      ZERO,MHDPDSLB
.
IDEP9999  RETURN
+
.***************************************************************************
.*  ILEG0000  :  Initialize Legal Variables
.***************************************************************************
ILEG0000    
          MOVE      ZERO,MHLSINST
          MOVE      ZERO,MHLSSLST
          MOVE      ZERO,MHLSADMN
          MOVE      ZERO,MHLSCHGF
          MOVE      ZERO,MHLSCHGT
          MOVE      ZERO,MHLSRETN
          MOVE      ZERO,MHLSRETA
          MOVE      ZERO,MHLSLVES
          MOVE      ZERO,MHLSLVEA
          MOVE      ZERO,MHLSDSCH
          MOVE      ZERO,MHLSDEAD
          MOVE      ZERO,MHLSINBD
          MOVE      ZERO,MHLSSLBD
          MOVE      ZERO,MHLSLVBD
          MOVE      ZERO,MHLSAWBD
          MOVE      ZERO,MHLSSEPB
          MOVE      ZERO,MHLSSSLB
          MOVE      ZERO,MHLSDSCB
          MOVE      ZERO,MHLSDSLB
.
ILEG9999  RETURN
+
.***************************************************************************
.*  ILEA0000  :  Initilaize Leave Variables
.***************************************************************************
ILEA0000    
          MOVE      ZERO,MHLVSTRT
          MOVE      ZERO,MHLVLEAV
          MOVE      ZERO,MHLVRETN
          MOVE      ZERO,MHLVDSCH
          MOVE      ZERO,MHLVDEAD
          MOVE      ZERO,MHLVLDAY
          MOVE      ZERO,MHLVRDAY
.
ILEA9999  RETURN
+
.***************************************************************************
.*  SWRD0000  :  Save Ward Variables
.***************************************************************************
SWRD0000    
          MOVE      MHWSINST,SAVEINST
          MOVE      MHWSSLST,SAVESLST
          MOVE      MHWSADMI,SAVEADMI
          MOVE      MHWSADMS,SAVEADMS
          MOVE      MHWSADMC,SAVEADMC
          MOVE      MHWSTRNO,SAVETRNO
          MOVE      MHWSTRNI,SAVETRNI
          MOVE      MHWSRETH,SAVERETH
          MOVE      MHWSRETT,SAVERETT
          MOVE      MHWSRETA,SAVERETA
          MOVE      MHWSLVEH,SAVELVEH
          MOVE      MHWSLVET,SAVELVET
          MOVE      MHWSLVEA,SAVELVEA
          MOVE      MHWSDSCH,SAVEDSCH
          MOVE      MHWSDEAD,SAVEDEAD
          MOVE      MHWSINBD,SAVEINBD
          MOVE      MHWSSLBD,SAVESLBD
          MOVE      MHWSHLBD,SAVEHLBD
          MOVE      MHWSTLBD,SAVETLBD
          MOVE      MHWSAWBD,SAVEAWBD
          MOVE      MHWSSEPB,SAVESEPB
          MOVE      MHWSSSLB,SAVESSLB
          MOVE      MHWSDSCB,SAVEDSCB
          MOVE      MHWSDSLB,SAVEDSLB
.
SWRD9999  RETURN
+
.***************************************************************************
.*  SDEP0000  :  Save Department Variables
.***************************************************************************
SDEP0000    
          MOVE      MHDPINST,SAVEINST
          MOVE      MHDPSLST,SAVESLST
          MOVE      MHDPADMI,SAVEADMI
          MOVE      MHDPADMS,SAVEADMS
          MOVE      MHDPADMC,SAVEADMC
          MOVE      MHDPTRNO,SAVETRNO
          MOVE      MHDPTRNI,SAVETRNI
          MOVE      MHDPRETH,SAVERETH
          MOVE      MHDPRETT,SAVERETT
          MOVE      MHDPRETA,SAVERETA
          MOVE      MHDPLVEH,SAVELVEH
          MOVE      MHDPLVET,SAVELVET
          MOVE      MHDPLVEA,SAVELVEA
          MOVE      MHDPDSCH,SAVEDSCH
          MOVE      MHDPDEAD,SAVEDEAD
          MOVE      MHDPINBD,SAVEINBD
          MOVE      MHDPSLBD,SAVESLBD
          MOVE      MHDPHLBD,SAVEHLBD
          MOVE      MHDPTLBD,SAVETLBD
          MOVE      MHDPAWBD,SAVEAWBD
          MOVE      MHDPSEPB,SAVESEPB
          MOVE      MHDPSSLB,SAVESSLB
          MOVE      MHDPDSCB,SAVEDSCB
          MOVE      MHDPDSLB,SAVEDSLB
.
SDEP9999  RETURN
+
.***************************************************************************
.*  SLEG0000  :  Save Legal Variables
.***************************************************************************
SLEG0000    
          MOVE      MHLSINST,SAVEINST
          MOVE      MHLSSLST,SAVESLST
          MOVE      MHLSADMN,SAVEADMN
          MOVE      MHLSCHGF,SAVECHGF
          MOVE      MHLSCHGT,SAVECHGT
          MOVE      MHLSRETN,SAVERETN
          MOVE      MHLSRETA,SAVERETA
          MOVE      MHLSLVES,SAVELVES
          MOVE      MHLSLVEA,SAVELVEA
          MOVE      MHLSDSCH,SAVEDSCH
          MOVE      MHLSDEAD,SAVEDEAD
          MOVE      MHLSINBD,SAVEINBD
          MOVE      MHLSSLBD,SAVESLBD
          MOVE      MHLSLVBD,SAVELVBD
          MOVE      MHLSAWBD,SAVEAWBD
          MOVE      MHLSSEPB,SAVESEPB
          MOVE      MHLSSSLB,SAVESSLB
          MOVE      MHLSDSCB,SAVEDSCB
          MOVE      MHLSDSLB,SAVEDSLB
.
SLEG9999  RETURN
+
.***************************************************************************
.*  SLEA0000  :  Save Leave Variables
.***************************************************************************
SLEA0000    
          MOVE      MHLVSTRT,SAVESTRT
          MOVE      MHLVLEAV,SAVELEAV
          MOVE      MHLVRETN,SAVERETN
          MOVE      MHLVDSCH,SAVEDSCH
          MOVE      MHLVDEAD,SAVEDEAD
          MOVE      MHLVLDAY,SAVELDAY
          MOVE      MHLVRDAY,SAVERDAY
.
SLEA9999  RETURN
+
.***************************************************************************
.*  AWRD0000  :  Add Ward Variables
.***************************************************************************
AWRD0000    
          ADD       SAVEINST,MHWSINST
          ADD       SAVESLST,MHWSSLST
          ADD       SAVEADMI,MHWSADMI
          ADD       SAVEADMS,MHWSADMS
          ADD       SAVEADMC,MHWSADMC
          ADD       SAVETRNO,MHWSTRNO
          ADD       SAVETRNI,MHWSTRNI
          ADD       SAVERETH,MHWSRETH
          ADD       SAVERETT,MHWSRETT
          ADD       SAVERETA,MHWSRETA
          ADD       SAVELVEH,MHWSLVEH
          ADD       SAVELVET,MHWSLVET
          ADD       SAVELVEA,MHWSLVEA
          ADD       SAVEDSCH,MHWSDSCH
          ADD       SAVEDEAD,MHWSDEAD
          ADD       SAVEINBD,MHWSINBD
          ADD       SAVESLBD,MHWSSLBD
          ADD       SAVEHLBD,MHWSHLBD
          ADD       SAVETLBD,MHWSTLBD
          ADD       SAVEAWBD,MHWSAWBD
          ADD       SAVESEPB,MHWSSEPB
          ADD       SAVESSLB,MHWSSSLB
          ADD       SAVEDSCB,MHWSDSCB
          ADD       SAVEDSLB,MHWSDSLB
.
AWRD9999  RETURN
+
.***************************************************************************
.*  ADEP0000  :  Add Department Variables
.***************************************************************************
ADEP0000    
          ADD       SAVEINST,MHDPINST
          ADD       SAVESLST,MHDPSLST
          ADD       SAVEADMI,MHDPADMI
          ADD       SAVEADMS,MHDPADMS
          ADD       SAVEADMC,MHDPADMC
          ADD       SAVETRNO,MHDPTRNO
          ADD       SAVETRNI,MHDPTRNI
          ADD       SAVERETH,MHDPRETH
          ADD       SAVERETT,MHDPRETT
          ADD       SAVERETA,MHDPRETA
          ADD       SAVELVEH,MHDPLVEH
          ADD       SAVELVET,MHDPLVET
          ADD       SAVELVEA,MHDPLVEA
          ADD       SAVEDSCH,MHDPDSCH
          ADD       SAVEDEAD,MHDPDEAD
          ADD       SAVEINBD,MHDPINBD
          ADD       SAVESLBD,MHDPSLBD
          ADD       SAVEHLBD,MHDPHLBD
          ADD       SAVETLBD,MHDPTLBD
          ADD       SAVEAWBD,MHDPAWBD
          ADD       SAVESEPB,MHDPSEPB
          ADD       SAVESSLB,MHDPSSLB
          ADD       SAVEDSCB,MHDPDSCB
          ADD       SAVEDSLB,MHDPDSLB
.
ADEP9999  RETURN
+
.***************************************************************************
.*  ALEG0000  :  Add Legal Variables
.***************************************************************************
ALEG0000    
          ADD       SAVEINST,MHLSINST
          ADD       SAVESLST,MHLSSLST
          ADD       SAVEADMN,MHLSADMN
          ADD       SAVECHGF,MHLSCHGF
          ADD       SAVECHGT,MHLSCHGT
          ADD       SAVERETN,MHLSRETN
          ADD       SAVERETA,MHLSRETA
          ADD       SAVELVES,MHLSLVES
          ADD       SAVELVEA,MHLSLVEA
          ADD       SAVEDSCH,MHLSDSCH
          ADD       SAVEDEAD,MHLSDEAD
          ADD       SAVEINBD,MHLSINBD
          ADD       SAVESLBD,MHLSSLBD
          ADD       SAVELVBD,MHLSLVBD
          ADD       SAVEAWBD,MHLSAWBD
          ADD       SAVESEPB,MHLSSEPB
          ADD       SAVESSLB,MHLSSSLB
          ADD       SAVEDSCB,MHLSDSCB
          ADD       SAVEDSLB,MHLSDSLB
.
ALEG9999  RETURN
+
.***************************************************************************
.*  ALEA0000  :  Add Leave Variables
.***************************************************************************
ALEA0000    
          ADD       SAVESTRT,MHLVSTRT
          ADD       SAVELEAV,MHLVLEAV
          ADD       SAVERETN,MHLVRETN
          ADD       SAVEDSCH,MHLVDSCH
          ADD       SAVEDEAD,MHLVDEAD
          ADD       SAVELDAY,MHLVLDAY
          ADD       SAVERDAY,MHLVRDAY
.
ALEA9999  RETURN
+
.
.***************************************************************************
.***************************************************************************
.
+
.====================================================================
. I/O INCLUDES
.====================================================================
.
          INC       STD001IO     
          INC       PATCOMN3
          INC       CALCDAYS
.
          INC       PATCODIO/INC
          INC       PATDEPIO/INC
          INC       PATDSCIO/INC
          INC       PATDAYIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATDRGIO/INC
          INC       PATTRNIO/INC
          INC       PATWR1IO/INC
.
          INC       MEHDPSIO/INC
          INC       MEHLEGIO/INC
          INC       MEHLSSIO/INC
          INC       MEHLVSIO/INC
          INC       MEHVI1IO/INC
          INC       MEHWSSIO/INC
+
