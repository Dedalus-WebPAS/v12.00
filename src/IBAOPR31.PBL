.******************************************************************************
.*  System   : THEATRE                                                        *
.*  Program  : IBAOPR31                                                       *
.*  Desc     : Daily Theatre List (SportsmedSA) A copy of IBAOPR30            *
.******************************************************************************
.*  Date     : 23/10/2008                                                     *
.*  Author   : Davin Sloan                                                    *
.*  Function : This daily list has a few features that are unique to          *
.*             Sportsmed, so it has been written as a separate program.       *
.*                                                                            *
.*  Modifications                                                             *
.*                                                                            *
.******************************************************************************
.* V12.00.01 19/05/2025 Thanh T         TSK 0955096                           *
.*           Changed for alphanumeric visit number                            *
.******************************************************************************
.* V11.03.02  19/04/2023   Thanh T  TSK 0909393                               *
.*            Changed INST0000 to use RDOPSES1 instead of RDOPSES7.           *
.*            Changed BDEA0000 to use RSOPDEA6 instead of RSOPDEA5.           *
.* V11.03.01  20/03/2023  PJ Le Febour   TSK 0909393                          *
.*            Amended KEY19 to KEY22 for theatre index changes                *
.* V10.13.01  02/08/2018  Ebon Clements  TSK 0853101                          *
.*            Added hospital to theatre comments key - oprcomaf               *
.* V10.04.01  23/06/2014  J.Tan         CAR 261630                            *
.*            Removed port number from temp file name                         *
.* V10.03.02  18/10/2012  Jill Parkinson CAR 273375                           *
.*            Recompiled for DATECONV - first day of year calculation         *
.* V10.03.01  19/03/2102  Peter McMullen   CAR 259857                         *
.*            Remove all references to redundant file patyears                *
.*  V9.11.01  30/10/2008  Davin               CAR 181548                      *
.*            Mods to theatre list for SportsmedSA                            *
.*  V9.11.00  28/10/2008  Davin               CAR 181548                      *
.*            Created theatre list for SportsmedSA (based on IBAOPR30)        *
.******************************************************************************
.
+
          INC       STD001FD
          INC       PATCALAG/INC
          INC       PATDHEAD/INC
          INC       IBASEQFD/INC            * Sequential Numbers File
          INC       TFILEVAR/INC            * Generate Temp File Name
          INC       WEBERRFD/INC            * Web Server Error Logging
.
          INC       BOKRC1FD/INC
          INC       BOKRX1FD/INC
          INC       OPRCLIFD/INC       * clinic file
          INC       OPRCOMFD/INC       * comments file
          INC       OPRCONFD/INC       * system parameters
          INC       OPRDEAFD/INC       * operation detail file
          INC       OPRDEDFD/INC       * operation comments file
          INC       OPROPRFD/INC       * operating room file1
          INC       OPRSESFD/INC       * session file
.
          INC       PATCODFD/INC       * codes file
          INC       PATCONFD/INC       * patient control file
          INC       PATDO1FD/INC       * doctors file
          INC       PATMA1FD/INC       * patient master file
          INC       PATMI1FD/INC       * admissions file
          INC       PATPR1FD/INC       * pre-admissions file
          INC       PATTRNFD/INC       * transfer file
          INC       PMSHCPFD/INC       
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       WEBCONFD/INC       
+
.*****************************************************************************
.                           VARIABLE DECLARATIONS
.*****************************************************************************
ADWARD    DIM       3
ANANAME   DIM       30
BJDAY     FORM      3
CJDAY     FORM      3
CMDLINE   DIM       50
CNTVAR    FORM      2
CODE      DIM       2
COUNTER   FORM      3
CURRDATE  DIM       8
.
DISPBDAT  DIM       10
DISPNAME  DIM       60
DOCNAME   DIM       30
DAYDESC   DIM       9
DIM1A     DIM       1
DIM3      DIM       3                  * patdsdoc
DIM6      DIM       6              
DIM10     DIM       10
DIM11     DIM       11
DIM12     DIM       12
DIM20     DIM       20
DIM25     DIM       25
DIM30     DIM       30
DIM31     DIM       31
DOCCODE   DIM       6
DRCODEE   FORM      1
DOCFNAME  DIM       50
DOCTDESC  DIM       40
DOCTOR    DIM       6
DSPMONTH  DIM       9
ATY1DESC  DIM       20
ATY2DESC  DIM       20
NTY1DESC  DIM       20
NTY2DESC  DIM       20
ATY1NAME  DIM       50
ATY2NAME  DIM       50
NTY1NAME  DIM       50
NTY2NAME  DIM       50
.
ENDCR     DIM       6
ENDFLAG   FORM      1
ENDOPER   DIM       40
EQUIPREQ  DIM       20
.
FIELD     FORM      2
FOUNDCNT  FORM      1
FMTSNAME  DIM       35
FMTGNAME  DIM       35
FMTTITLE  DIM       10
FNAME     DIM       8
FORM8     FORM      8
.
KCDATE    DIM       8
.
LINE80    DIM       80                 * multi purpose 80 char line buffer
LOCALGP   DIM       30
LOOPCNTR  FORM      1
.
NAME35    DIM       35
NIGHTDOC  DIM       37
NUMREC    FORM      4
.
OPRCODE   FORM      1
OPRDESC1  DIM       40
OPRDESC2  DIM       40
.
PACDOCTS  DIM       90
PATNAME   DIM       32
PATNAM2   DIM       26
POSTOPAP  DIM       10
.
REFERGP   DIM       30
.
SESCOMMS  DIM       70
SESHEAD   FORM      1 
SP50      DIM       50
SP60      DIM       60
STARTCR   DIM       6
STRTOPER  DIM       6
.
THEADATE  DIM       10		
THEATRE   DIM       6
TOMMDATE  DIM       8
TPERIOD   DIM       3
TRDOC     DIM       22               * truncate doctors name
.
VAR       FORM      2
.
.-------------------------------< ARRAY >-------------------------------------
.
JAN       INIT      "January"
FEB       INIT      "February"
MAR       INIT      "March"
APRIL     INIT      "April"
MAY       INIT      "May"
JUNE      INIT      "June"
JULY      INIT      "July"
AUG       INIT      "August"
SEPT      INIT      "September"
OCT       INIT      "October"
NOV       INIT      "November"
DEC       INIT      "December"
.
.-------------------------------< CONSTANTS >---------------------------------
.
MONDAY    INIT      "Monday"
TUESDAY   INIT      "Tuesday"
WEDNSDAY  INIT      "Wednesday"
THURSDAY  INIT      "Thursday"
FRIDAY    INIT      "Friday"
SATURDAY  INIT      "Saturday"
SUNDAY    INIT      "Sunday"
.
AM        INIT      "AM"
.
DOWNCASE  INIT      "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"
.
FINISH    INIT      "Finish"
.
MENU1     INIT      "- Daily List "
MENU2     INIT      "- Medical Admissions"
.
PM        INIT      "PM"
.
START     INIT      "Start"
ZZZZ      INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
PRGID     INIT      "IBAOPR31"
PRGNAM    INIT      "Daily Theatre List"
VERSION   INIT      "V12.00.01"
.
DAYTHTFL  IFILE     SQL, FIXED=41, KEY="U1-3,4-8,9-14"
.
.Data File Definition
.--------------------
.
. NAME    TYPE   LENGTH  PHYSICAL START LOC.   DESCRIPTION
. ----    ----   ------  -------- ----------   -----------
XPERIOD   DIM       3        3         1       Session Period Code (Cat SP)
XTIME     DIM       5        5         4       Session start time[
XCLIN     DIM       6        6         9       Clinic/surgeon code
XANAE     DIM       6        6         15      Anaesthestis code
XTHEATRE  DIM       6        6         21      Theatre code
XWARD     DIM       3        3         27      Ward code
XSEDATE   DIM       8        8         30      Session date
XSEHOSP   DIM       3        3         38      Hospital Code
.
.End of Record                         41
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
ML0000    CALL      INIT0000               * initialization and open files
          CALL      NDAT0000               * get next day's date
ML0500
          CALL      MENU0000
          BRANCH    MOPTION,ML1000,ML2000
          GOTO      ML9999
.
.---- Daily List plus Medical Admissions ----
.
ML1000    CALL      CLRT0000               * clear theatre variables
          CALL      SCR0000                * display screen format
          CALL      ACCP0000               * accept initial values
          BRANCH    EXIT,ML0500            * exit char inputted
.
          CALL      SEL0000                * select field to modify
          BRANCH    EXIT,ML0500            * (C)ancel selected
          CALL      CRET0000               * create temp. file
          CALL      LSES0000               * Loop through sessions file
.                                          * and write to temp. file
.                                          * according to requested date
.                                          * and theatre range
          CALL      LTMP0000               * Loop through temp. index file
.                                          * and print report
          CALL      LMED0000               * Print medical admissions
          GOTO      ML0500
.
ML2000    CALL      SCRE0000               * display screen
          CALL      KDAT0000               * keyin date of theatre
          CALL      SE2L0000               * select field to modify
          BRANCH    EXIT,ML0500            * (C)ancel selected
          CALL      LMED0000               * print medical sessions
          GOTO      ML0500
.
ML9999    CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.                                 INIT0000
.*****************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,FORTY;*81,OPCNODSC,*96,OPCNCDSC,*111,OPCNCLSU
.
          DISPLAY   *P64:24,"bokrc1af";
          OPEN      BOKRC1A1,"bokrc1af"
.
          DISPLAY   *P64:24,"bokrx1af";
          OPEN      BOKRX1A1,"bokrx1af"
.
          DISPLAY   *P64:24,"oprcliaf"
          OPEN      OPRCLIA1,"oprcliaf"
.
          DISPLAY   *P64:24,"oprcomaf"
          OPEN      OPRCOMA1,"oprcomaf"
          OPEN      OPRCOMA2,"oprcomaf"
.
          DISPLAY   *P64:24,"oprdedaf"
          OPEN      OPRDEDA1,"oprdedaf"
.
          DISPLAY   *P64:24,"oprdetaf";
          OPEN      OPRDETA1,"oprdetaf"
          OPEN      OPRDETA2,"oprdetaf"
          OPEN      OPRDETA6,"oprdetaf"
.
          DISPLAY   *P64:24,"opropraf";
          OPEN      OPROPRA1,"opropraf"
          OPEN      OPROPRA2,"opropraf"
.
          DISPLAY   *P64:24,"oprsesaf";
          OPEN      OPRSESA1,"oprsesaf"
          OPEN      OPRSESA7,"oprsesaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
          OPEN      PATCODE2,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
          OPEN      PATDO1A2,"patdo1af"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A3,"patmi1af"
.
          DISPLAY   *P64:24,"patpramf";
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN1,"pattranf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
.  ------ set up Operating Room/Theatre description for screen display ------
.
          ENDSET    OPCNODSC
INIT1000  BUMP      OPCNODSC,-1
          CMATCH    SP1,OPCNODSC
          GOTO      INIT1000 IF EQUAL
          LENSET    OPCNODSC
          RESET     OPCNODSC
          MOVELPTR  OPCNODSC,FORM2
          ADD       FOUR,FORM2
.
.  ------ set up temp file filename ------
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAME
.
.  ------ set "?" routine to new standard ------
.
          MOVE      ONE,CNEWDS
.
.  ------ set up current date variable ------
.
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
.  ------ set up Space-50 variable ------
.
          PACK      SP50,SP30,SP20
.
          PACK      SP60,SP30,SP30
.
          PACK      DOCCODE,SP6
.
INIT9999  RETURN
+
.*****************************************************************************
.                                 MENU0000
.    Menu driver routine
.*****************************************************************************
MENU0000  HLINE     *G37,2,49,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = By Daily List plus Medical ":
                                           "Admissions":
                    *P1:6,*V2LON,"2",*HOFF," = By Medical Admissions Report ":
                    *P1:8,"Select Option : ";
.
MENU1000  KEYIN     *P17:8,*EL,*DV,UNDLN1,*P17:8,*V2LON,MOPTION;
.
          COMPARE   ZERO,MOPTION
          GOTO      MENU9000 IF EQUAL
          BRANCH    MOPTION,MENU8000,MENU8000
          BEEP
          GOTO      MENU1000
MENU8000
          LOAD      LINE80,MOPTION,MENU1,MENU2
          DISPLAY   *P49:2,*V2LON,*+,LINE80,SP1;
          MOVE      FALSE,EXIT
          GOTO      MENU9999
.
MENU9000  MOVE      TRUE,EXIT
.
MENU9999  RETURN
+
***************************************************************************
.*                     NDAT0000                  Called by : ML0000       *
.*   PARAMETERS REQURIED - CCC, CYY, CMM, CDD  - which is current date    *
.*   add 1 to current date to calculate the next day's date               *
***************************************************************************
NDAT0000  MOVE      CMM,MM                        * move current month
          MOVE      CYY,YY                        * move current year
          MOVE      CDD,DD                        * move current day
          MOVE      CCC,CC
.
          CALL      DMYCON
. 
          ADD       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
.
          CALL      JULCON
          MOVE      YY,CYEAR
          MOVE      MM,CMON
          MOVE      DD,CDAY
          MOVE      CC,CCENT
.
          PACK      TOMMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",TOMMDATE
.
NDAT9999  RETURN
+
.*****************************************************************************
.*                                 KDAT0000                                  *
.*                 Called by : ACCP0000, SEL1000, ML2000, SE2L000            *
.*          Asks user to keyin Date of theatre defaulting to tomorrow's date *
.*          RETURNS   CURRDATE - date of theatre                             *
.*****************************************************************************
KDAT0000  MOVE      ZERO,CCANLDTE
          MOVE      ONE,CCENTRY
          MOVE      ZERO,CHIGHLT
          MOVE      ONE,CDEFDTE
          MOVE      "32",CCOL               * column for keyin date
          MOVE      FOUR,CVERT              * row for keyin date
.
          UNPACK    TOMMDATE,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    CQUEST,KDAT0000         * "?" not allowed
.
          PACK      KCDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",KCDATE
.
.         MATCH     CURRDATE,KCDATE
.         GOTO      KDAT2222 IF LESS        * date keyed in < current date 
.
. -- valid date input ( ie. >= to current date )
.
          CALL      PACDATE
          MOVE      CPCDATE,THEADATE
          GOTO      KDAT9999
.
. -- invalid date 
.
KDAT2222  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Date must be greater or equal to current date **   ";
          CALL      HITENTER
          GOTO      KDAT0000
.
KDAT9999  RETURN
+
.**************************************************************************
.*                         CLRT0000               Called by : MANY        *
.*              clear working variables for operating theatre codes       *
.*              and description.                                          *
.**************************************************************************
CLRT0000  PACK      OPRDESC1,SP30,SP10
          PACK      OPRDESC2,SP30,SP10
          MOVE      SP10,STARTCR
          MOVE      SP10,ENDCR
          MOVE      SP6,STRTOPER
          MOVE      SP6,ENDOPER
CLRT9999  RETURN
+
.**************************************************************************
.*                         KOPR0000                  Called by : ML0000   *
.*               keyin the theatre code                                   *
.**************************************************************************
KOPR0000  KEYIN     *P32:CVERT,*EL,*DV,UNDLN6:       
                    *P32:CVERT,*V2LON,THEATRE:
                    *P32:CVERT,*DV,THEATRE
.
          CALL      CHEK0000                     * validate user input
          BRANCH    CEXIT,KOPR1000,KOPR0000
.
. -- valid input --
.
          BRANCH    OPRCODE,KOPR0500,KOPR0600

KOPR0500  DISPLAY   *P32:6,*EL,*V2LON,STARTCR,*HOFF,SP2,OPRDESC1;
          GOTO      KOPR8000
.
KOPR0600  DISPLAY   *P32:8,*EL,*V2LON,ENDCR,*HOFF,SP2,OPRDESC2;
          GOTO      KOPR7500
.
. list theatre codes 
.
KOPR1000  CALL      OPROPRDS                  
.
KOPR3000  DISPLAY   *P1:24,*EL,*+,OPCNODSC," : ";
          KEYIN     *PFORM2:24,*DV,UNDLN6,*PFORM2:24,*V2LON,THEATRE:
                    *PFORM2:24,*DV,THEATRE;
.
          CALL      CHEK0000
          BRANCH    CEXIT,KOPR1000,KOPR3000 
          CALL      SCR0000                        * redisplay screen
          CALL      DISP0000                       * display fields
          BRANCH    OPRCODE,KOPR8000               * for start code
.
KOPR7500  MATCH     STRTOPER,ENDOPER
          GOTO      KOPR9000 IF LESS
.
KOPR8000  MOVE      FALSE,EXIT                   * valid input
          GOTO      KOPR9999
.
KOPR9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Ending code must be > or equal to Starting code **  ";
          CALL      HITENTER
          MOVE      TRUE,EXIT                    * invalid range
.
KOPR9999  RETURN
+
.***************************************************************************
.*                                CHEK0000             Called by: KOPR0000 *
.*                     Validate theatre id. code field                     *
.*                                                                         *
.*   Returns  : CEXIT   =  (0)  If an operator code is entered             * 
.*                         (1)  If a question mark "?" is entered          *
.*                         (2)  invalid input                              *
.***************************************************************************
CHEK0000  ENDSET    THEATRE                 * Pad the field with spaces
          APPEND    SP6,THEATRE
          RESET     THEATRE
.
.         Check if anything was input and set the exit flag appropriately
.
          MATCH     SP6,THEATRE             * Was anything input ?
          GOTO      CHEK9000 IF EQUAL       * No
.
.         Check for a "?"
.
          CMATCH    QUEST,THEATRE           * "?" entered ?
          GOTO      CHEK8000 IF EQUAL       * Yes
.
CHEK7100  MOVE      THEATRE,KEY6
          PACK      OPRMDESC,SP30,SP10
          CALL      RDOPOPR1   
          BRANCH    OVRCD,CHEK7500          * invalid not found
.
          IF        OPRMSTAT=1
            GOTO      CHEK7450
          ENDIF
.
. valid input
.
          BRANCH    OPRCODE,CHEK7200:       * start code
                            CHEK7300        * end code
.
.  get description
.
CHEK7200  MOVE      OPRMDESC,OPRDESC1
          MOVE      THEATRE,STRTOPER
          MOVE      THEATRE,STARTCR
          GOTO      CHEK7400
.
CHEK7300  MOVE      OPRMDESC,OPRDESC2
          MOVE      THEATRE,ENDOPER
          MOVE      THEATRE,ENDCR
.
CHEK7400  MOVE      ZERO,CEXIT              * valid input
          GOTO      CHEK9999
.
CHEK7450  MOVE      TWO,CEXIT               * inactive operating room
.
          DISPLAY   *P1:24,*EL,*V2LON:
                    "Inactive Operating Room ";
          CALL      HITENTER
          GOTO      CHEK9999
.
CHEK7500  MOVE      TWO,CEXIT               * invalid input
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Invalid ",*+,OPCNODSC," code **    ";
          CALL      HITENTER
          GOTO      CHEK9999

CHEK8000  MOVE      ONE,CEXIT               * A "?" input
          GOTO      CHEK9999
.
. no input, determine whether for start or finish
.
CHEK9000  MOVE      ZERO,CEXIT              * no input
          BRANCH    OPRCODE,CHEK9500:       * start code
                            CHEK9600        * end code
.
CHEK9500  MOVE      SP6,STRTOPER
          MOVE      START,STARTCR
          PACK      OPRDESC1,SP30,SP10
          GOTO      CHEK9999
.
CHEK9600  MOVE      ZZZZ,ENDOPER
          MOVE      FINISH,ENDCR
          PACK      OPRDESC2,SP30,SP10
.
CHEK9999  RETURN
+
.**************************************************************************
.*                  DOCF0000                     Called by: MANY          *
.*        Format doctors name                                             *
.**************************************************************************
DOCF0000  MOVE      DTITL,PACTITLE
          MOVE      DGNAME,PACGNAME
          MOVE      DSNAME,PACSNAME
          CALL      PACNAME
.
DOCF9999  RETURN
+
.**************************************************************************
.*                         KDOC0000                  Called  by : MANY    *
.*                 keyin the route code                                   *
.**************************************************************************
KDOC0000  MOVE      SP10,DOCTOR
          MOVE      "32",ECOL
          MOVE      CVERT,EVERT
          MOVE      ZERO,CKYIMAND
          MOVE      SP6,CKYIDEF6
          CALL      PATDOCKY
          COMPARE   EXIT,TRUE
          GOTO      KDOC8000 IF EQUAL
          BRANCH    EXIT,KDOC0000,KDOC9000
.
          MOVE      DCODE,DOCTOR

KDOC0200  DISPLAY   *P32:CVERT,*EL,*V2LON,DOCTOR,*HOFF,SP2,DOCTDESC;
.
KDOC8000  MOVE      FALSE,EXIT                   * valid input
          GOTO      KDOC9999
.
KDOC9000  MOVE      TRUE,EXIT                    * exitchar inputted
.
KDOC9999  RETURN
+
.**************************************************************************
.*                                  SCRE0000           Called by: ML0000  *
.*                  display screen format for medical admissions          *
.**************************************************************************
SCRE0000  DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,ONE,*HOFF,". Date of Theatre          : ";
SCRE9999  RETURN
+
.**************************************************************************
.*                                  SCR0000            Called by: ML0000  *
.*                  display screen format                                 *
.**************************************************************************
SCR0000   DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,ONE,*HOFF,". Date of Theatre          : ":
                    *P2:6,*V2LON,TWO,*HOFF,". Starting ",OPCNODSC,*P30:6,": ":
                    *P2:8,*V2LON,THREE,*HOFF,". Ending   ",OPCNODSC,*P30:8,": "
SCR9999  RETURN
+
.*************************************************************************
.*                      DISP0000                      Called by : ML00000*
.*           display fields and their description                        *
.*************************************************************************
DISP0000  DISPLAY   *P32:4,*EL,*V2LON,THEADATE:
                    *P32:6,*EL,*V2LON,STARTCR,*HOFF,SP2,OPRDESC1:
                    *P32:8,*EL,*V2LON,ENDCR,*HOFF,SP2,OPRDESC2
DISP9999  RETURN
+
.*************************************************************************
.*                                  ACCP0000           Called by: ML0000 *
.*   INPUT mode only :      accept initial values                        *
.*************************************************************************
ACCP0000  CALL      KDAT0000                  * keyin Date of Theatre
.
. -- keyin Starting theatre
.
ACCP1000  MOVE      SIX,CVERT                 * row for start oper. room
          MOVE      ONE,OPRCODE               * starting code
          CALL      CLRT0000                  * clear theatre codes
          CALL      KOPR0000                  * keyin starting operating room
.
. -- keyin Ending theatre
.
ACCP2000  MOVE      EIGHT,CVERT               * row for start oper. room
          MOVE      TWO,OPRCODE               * ending code
          CALL      KOPR0000                  * keyin ending operating room
          BRANCH    EXIT,ACCP2000             * invalid range
.
          MOVE      FALSE,EXIT
          GOTO      ACCP9999
.
ACCP9000  MOVE      TRUE,EXIT                 * Exitchar inputted
.
ACCP9999  RETURN
+
.****************************************************************************
.*                                   SE2L0000           Called by: ML0000    *
.*                         select field to modify or post                   *
.*                                                                          *
.*    Returns:   EXIT    = FALSE  Post was selected.                        *
.*                         TRUE  Cancel was selected or EXITCHAR.           *
.****************************************************************************
SE2L0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM               * What was entered ?
          GOTO      SE2L8000 IF EQUAL         * Post was selected
          GOTO      SE2L9000 IF LESS          * Cancel was selected
.
          BRANCH    CCITEM,SE2L1000
          BEEP
          GOTO      SE2L0000
.
. -- keyin Date of Theatre
.
SE2L1000  CALL      KDAT0000                 * keyin desscription
          GOTO      SE2L0000
.
.
SE2L8000  MOVE      FALSE,EXIT              * Post was selected
          DISPLAY   *P58:24,*V2LON,"*** Posting ***";
          GOTO      SE2L9999
.
.         Cancel was selected or Exitchar entered for doctor code
.
SE2L9000  MOVE      TRUE,EXIT                * Cancel was selected
.
SE2L9999  RETURN
+
.****************************************************************************
.*                                   SEL0000           Called by: ML0000    *
.*                         select field to modify or post                   *
.*                                                                          *
.*    Returns:   EXIT    = FALSE  Post was selected.                        *
.*                         TRUE  Cancel was selected or EXITCHAR.           *
.****************************************************************************
SEL0000   CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SEL8000 IF EQUAL         * Post was selected
          GOTO      SEL9000 IF LESS          * Cancel was selected
.
          BRANCH    CCITEM,SEL1000,SEL2000,SEL3000
          BEEP
          GOTO      SEL0000
.
. -- keyin Date of Theatre
.
SEL1000   CALL      KDAT0000                 * keyin desscription
          GOTO      SEL0000
.
SEL2000   MOVE      SIX,CVERT                 * row for start oper. room
          MOVE      ONE,OPRCODE
          PACK      OPRDESC1,SP30,SP10
          MOVE      SP10,STARTCR
          MOVE      SP6,STRTOPER
.
          CALL      KOPR0000                * keyin starting oper.
          MATCH     STRTOPER,ENDOPER        * Starting code > end code
          GOTO      SEL7000 IF LESS
          GOTO      SEL0000
.
SEL3000   MOVE      EIGHT,CVERT             * row for ending oper.    
          MOVE      TWO,OPRCODE
          PACK      OPRDESC2,SP30,SP10
          MOVE      SP10,ENDCR
          MOVE      SP6,ENDOPER
.
          CALL      KOPR0000                * keyin ending oper.
          BRANCH    EXIT,SEL3000            * invalid range
          GOTO      SEL0000
.
SEL7000   DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Invalid range - Starting code is > Ending code **   ";
          CALL      HITENTER
          GOTO      SEL2000
.
SEL8000   MOVE      FALSE,EXIT              * Post was selected
          DISPLAY   *P58:24,*V2LON,"*** Posting ***";
          GOTO      SEL9999
.
.         Cancel was selected or Exitchar entered for doctor code
.
SEL9000   MOVE      TRUE,EXIT                * Cancel was selected
.
SEL9999   RETURN
+
.*****************************************************************************
.*                     CRET0000                      Called by :             *
.*              create temporary file                                        *
.*****************************************************************************
CRET0000  CALL      KILL0000                     * make sure file is deleted 
          CLEAR     CMDLINE                      * clear command line
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAME,CMDLINE
          APPEND    " 41 u1-3,4-8,9-14",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID  
          OPEN      DAYTHTFL,FNAME
.
          CALL      CLET0000             * Clear tempfile
.
CRET9999  RETURN
.
.***************************************************************************
.*                           KILL0000                                      *
.*              delete temporary index file                                *
.***************************************************************************[
KILL0000  CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAME,CMDLINE
          RESET     CMDLINE
          CLOSE     DAYTHTFL
          EXECUTE   CMDLINE,TASKID  
KILL9999  RETURN
.
.****************************************************************************
.         Clear tempfile
.****************************************************************************
CLET0000  PACK      KEY14,SP70
          CALL      RDSTEMP1
          CALL      RDKTEMP1
          BRANCH    OVRCD,CLET9999
.
          PACK      KEY14,XPERIOD,XTIME,XCLIN,SP70
          CALL      DELTEMP1
          GOTO      CLET0000
.
CLET9999  RETURN
.
.****************************************************************************
.*                            LSES0000
.*        loop through the 1st index of the OPRSESFD file for the requested *
.*        date.  For each record found, if the session belongs to the       *
.*        requested theatre range (OPSETHET is in the range ), the post the *
.*        record to the temporary index file.                               *
.****************************************************************************
LSES0000  PACK      KEY22,KCDATE,SP20
          DISPLAY   *P1:24,*EL,"Scanning : ";
.
          CALL      RSOPSES7                * position pointer
LSES1000  CALL      RKOPSES7                * read next record
          BRANCH    OVRCD,LSES9999          * last record read
.
          MATCH     KCDATE,OPSEDATE         * same session date ?
          GOTO      LSES9999 IF NOT EQUAL   * no
.
          DISPLAY   *P12:24,OPSECLIN,SP1,OPSETIME;
.
          COMPARE   ZERO,OPSESTAT           * session cancelled ?
          GOTO      LSES1000 IF EQUAL       * yes, ignore record
.
          PACK      OPSETPER,OPSETPER,SP3
          MATCH     SP3,OPSETPER            * blank session period code
          GOTO      LSES1000 IF EQUAL       * yes,ignore record
.
          MATCH     STRTOPER,OPSETHET       * Oper. Room within start range
          GOTO      LSES1000 IF LESS        * no, ignore record
.
          MATCH     OPSETHET,ENDOPER        * Oper. Room within end range
          GOTO      LSES1000 IF LESS        * no, ignore record
.
          PACK      KEY14,OPSETPER,OPSETIME,OPSECLIN
.
          MOVE      OPSETPER,XPERIOD        * get session period code (CAT SP)
          MOVE      OPSETIME,XTIME          * get session start time
          MOVE      OPSECLIN,XCLIN          * get clinic/surgeon code
          MOVE      OPSEANAE,XANAE          * get anaesthetist code
          MOVE      OPSETHET,XTHEATRE       * get theatre code
          MOVE      OPSEDATE,XSEDATE        * get session date
          MOVE      OPSEHOSP,XSEHOSP        * get hospital code
.
          WRITE     DAYTHTFL,KEY14;KEY14,XANAE,XTHEATRE,XWARD,XSEDATE,XSEHOSP
          GOTO      LSES1000
.
LSES9999  RETURN
+
************************************************************************
.*                    LTMP0000                      Called by: ML1000  *
.*         loop through the temporary index file                       *
************************************************************************
LTMP0000  MOVE      SP3,TPERIOD
          MOVE      SP3,XPERIOD
.
. -- initialize variables
.
          MOVE      ZERO,ENDFLAG
          MOVE      ZERO,COUNTER
          MOVE      ONE,COPTION
          MOVE      ZERO,CLNO               * initialize line counter
          MOVE      ZERO,CPAGENO            * initialize page heading
          MOVE      MENU1,CPHDROPT
          MOVE      ONE,CNOUNDLN               
          CLOCK     TIME,CTIMEIS
.
          PACK      KEY14,SP20
          READ      DAYTHTFL,KEY14;;        * position pointer
.
          READKS    DAYTHTFL;XPERIOD,XTIME,XCLIN,XANAE,XTHEATRE,XWARD,XSEDATE:
                             XSEHOSP
          GOTO      LTMP8000 IF OVER        * last record read
.
          CALL      HEAD0000                * display heading
          MOVE      XPERIOD,TPERIOD
.
          DISPLAY   *P1:24,*EL,"Printing : ";
.
          READ      DAYTHTFL,KEY14;;        * position pointer
.
LTMP1000  READKS    DAYTHTFL;XPERIOD,XTIME,XCLIN,XANAE,XTHEATRE,XWARD,XSEDATE:
                             XSEHOSP
          GOTO      LTMP9000 IF OVER        * last record read
.
          DISPLAY   *P12:24,*V2LON,XPERIOD,*HOFF,SP1,XCLIN,SP1,XTIME;
.
          MATCH     TPERIOD,XPERIOD         * Same period code ?
          GOTO      LTMP2000 IF EQUAL       * yes
.
. -- different period code
.
LTMP1100  MOVE      FALSE,SESHEAD           * indicator for calling FORM0000
.                                           * that it is not called by SHED0000
          ADD       ONE,COUNTER             * increment change in period code
.
. --- print heading for new period code
.
          BRANCH    ENDFLAG,LTMP9990
          CALL      HEAD0000         
.
.  -- print session header --
.
LTMP2000  COMPARE   FIFTY6,CLNO              * line count >= 55
          GOTO      LTMP2200 IF LESS         * no
.
          CALL      HEAD0000
.
LTMP2200  CALL      SHED0000              
.           
. -- Loop through OPRDEAFD file, print patients report
.
          CALL      BDEA0000                  

          PRINT     *N,*N,*N;              * print 3 blank lines to separate
.                                          * sessions
          ADD       TWO,CLNO
          MOVE      XPERIOD,TPERIOD        * move current period
          GOTO      LTMP1000
.
LTMP8000  CALL      HEAD0000            
.
          PRINT     *N,"There is no Daily Theatre List. "  
          GOTO      LTMP9990
LTMP9000  
          MOVE      ONE,ENDFLAG
          GOTO      LTMP1100
.
LTMP9990  PRINT     *N,"***  End of Report  ***"
          CALL      KILL0000               * delete temp. file
.
LTMP9999  RETURN
+
************************************************************************
.         Get session special instructions & team details
************************************************************************
INST0000  PACK      OPSESPI1,SP70
          PACK      OPSESPI2,SP70
          PACK      KEY22,XSEHOSP,XSEDATE,XTIME,XCLIN,SP70
          CALL      RDOPSES1
          BRANCH    OVRCD,INST9999
.
          CALL      DANA0000                * get anaesthetist details
          CALL      DASS0000                * get assistant details
INST9999  RETURN
+
************************************************************************
.         Get session comments
************************************************************************
SESC0000  MOVE      SP70,SESCOMMS
          PACK      KEY25,XSEDATE,XTIME,XCLIN,SP70
          CALL      RSOPCOM1
SESC1000  CALL      RKOPCOM1
          BRANCH    OVRCD,SESC9999          * end of file
.
          MATCH     XSEDATE,OPCMDATE        * same date
          GOTO      SESC9999 IF NOT EQUAL
          MATCH     XTIME,OPCMTIME          * same time?
          GOTO      SESC9999 IF NOT EQUAL
          MATCH     XCLIN,OPCMCLIN          * same clinic / surgeon?
          GOTO      SESC9999 IF NOT EQUAL
.
          MOVE      OPCMTEXT,SESCOMMS
.
SESC9999  RETURN
+
************************************************************************
.*                      BDEA0000                Called by : LTMP0000   *
.*         loop through 1st index of OPRDEAFD file for booked sessions *
.*         RETURNS  EXIT - True (1) if no record found in OPRDEAFD     *
.*                         FALSE - (0) otherwise                       *
************************************************************************
BDEA0000  MOVE      FALSE,EXIT                * initialize EXIT
          PACK      KEY26,KCDATE,XTIME,XCLIN,SP70
          CALL      RSOPDEA6                  * position pointer
.
BDEA1000  CALL      RKOPDEA6                  * read next record
          BRANCH    OVRCD,BDEA9000
.
          MATCH     OPDADATE,KCDATE           * same date ?
          GOTO      BDEA9000 IF NOT EQUAL     * no
.
          MATCH     OPDATIME,XTIME            * same time ?
          GOTO      BDEA9000 IF NOT EQUAL     * no
.
          MATCH     OPDACLIN,XCLIN            * same clinic/surgeon code ?
          GOTO      BDEA9000 IF NOT EQUAL     * no
.
          COMPARE   THREE,OPDASTAT             * status = zero
          GOTO      BDEA1000 IF EQUAL          * no
.
          CALL      GPMI0000                  * get booking & PMI details
          BRANCH    EXIT,BDEA1000
.
          MOVE      CURRDATE,AGEDATE          * Today's date
          CALL      CALCAGE
          MOVE      PSAGEYRS,PSAGE
.
          CALL      PATN0000                 * format patients name
          MOVE      PACFNAME,PATNAM2
.
          MOVE      ONE,CODE
          PACK      KEY8,OPDAADMN
          CALL      RDBKREC1                 * get booking details
          CALL      RDBKRX11
          IF        OVRCD=1
            CALL      CLBOKRX1
          ENDIF
          PACK      KEY8,OPDAADMN
          CALL      RDMISS1                  * find admitted ward       
          IF        OVRCD=1
            CALL      CLPATMIS
          ENDIF
          MATCH     OPDAADMN,DAADMNO         * not admitted, get expected ward
          IF        !@EQUAL
            MOVE      BKRXPOWD,ADWARD 
          ELSE
            MOVE      AWARD,ADWARD
          ENDIF
.
          MOVE      SP70,KEY70
          UNPACK    OPDADES1,KEY34
          CALL      GCMN0000                       * Get comments
          MOVE      OPDDDATA,KEY70
.
          PACK      DISPBDAT,PBDATE,SP70
          MATCH     SP70,DISPBDAT
          IF        !@EQUAL
            UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            REP       " 0",CPCDATE
            MOVE      CPCDATE,DISPBDAT
          ENDIF
.
          PACK      KEY8,OPDAADMN
          CALL      RDPMVX11
          IF        OVRCD=1
            CALL       CLPMSVX1
          ENDIF
.
          MOVE      SP70,DOCFNAME
          PACK      KEY10,PMVXRHC1,SP70
          CALL      RDPMHCP1
          IF        OVRCD=1
            MOVE      PMVXRHC1,DOCFNAME
          ELSE
            MOVE      PMHCTITL,FMTTITLE      
            MOVE      PMHCGNAM,FMTGNAME      
            MOVE      PMHCSNAM,FMTSNAME
            CALL      DOCNM000
          ENDIF
          MOVE      DOCFNAME,REFERGP
.
          PRINT     *1,OPDACASE,*7,OPDAEXPS,*14,PATNAM2,*41,OPDAURNO:
                    *50,DISPBDAT,*61,REFERGP,*92,KEY34:
                    *128,OPDAANAE
.
          UNPACK    OPDACOMM,KEY40                 * Prosthetic Req.
          ADD       ONE,CLNO
.
          PACK      POSTOPAP,BKRXUDD1,SP70
          MATCH     SP70,POSTOPAP
          IF        !@EQUAL
            UNPACK    BKRXUDD1,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            REP       " 0",CPCDATE
            MOVE      CPCDATE,POSTOPAP
          ENDIF
.
          PACK      EQUIPREQ,SP70
          MATCH     SP70,OPDAEQR1
          IF        !@EQUAL
            PACK      KEY5,ANSX,ANSE,OPDAEQR1,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              PACK      EQUIPREQ,TDESC,SP70
            ENDIF
          ENDIF
.
          MOVE      SP70,DOCFNAME
          PACK      KEY10,PMPXRHC1,SP70
          CALL      RDPMHCP1
          IF        OVRCD=1
            MOVE      PMPXRHC1,DOCFNAME
          ELSE
            MOVE      PMHCTITL,FMTTITLE
            MOVE      PMHCGNAM,FMTGNAME
            MOVE      PMHCSNAM,FMTSNAME
            CALL      DOCNM000
          ENDIF
          MOVE      DOCFNAME,LOCALGP
.
          MOVE      PTELEP,DIM12
.
          PRINT     *7,DIM12,*21,PFUNDH,*29,POSTOPAP,*40,BKRXUDT1:
                    *50,KEY40,*92,LOCALGP
          PRINT     *7,KEY70,*92,EQUIPREQ
          MOVE      SP70,KEY40
          ADD       TWO,CLNO
.
          MOVE      ZERO,CODE
.
          RESET     PACFNAME
.
          CALL      DASH0000
.
          COMPARE   FIFTY5,CLNO              * line count >= 55
          GOTO      BDEA1000 IF LESS         * no
.
. -- print heading
.
BDEA4000  CALL      HEAD0000
          CALL      SHED0000                 * print session heading
          GOTO      BDEA1000
.
BDEA9000  MOVE      TRUE,EXIT                * no patient detail
.
BDEA9999  RETURN
+
************************************************************************
.*                      GCMN0000                Called by : BDEA0000   *
.*             Get booking comments                                    *
************************************************************************
GCMN0000  MOVE      "009",KEY3
          PACK      KEY16,OPDAUNIQ,KEY3,SP70
          CALL      RSOPDED1              
          CALL      RKOPDED1        
          BRANCH    OVRCD,GCMN9000  
          MATCH     OPDDUNIQ,OPDAUNIQ
          GOTO      GCMN9000 IF NOT EQUAL
          MATCH     OPDDTYPE,KEY3
          GOTO      GCMN9999 IF EQUAL
.
GCMN9000  MOVE      SP70,OPDDDATA
GCMN9999  RETURN
+
************************************************************************
.*                      SHED0000                Called by : LTMP0000   *
.*             print session header                                    *
************************************************************************
SHED0000  CALL      INST0000             * Get session special intructions
          CALL      SESC0000             * Get session comments
.
          MOVE      TRUE,SESHEAD            * indicate calling proc. is print
.                                           * session heading
          MOVE      XTHEATRE,KEY6
          PACK      OPRMDESC,SP30,SP10
          CALL      RDOPOPR1                * read operating room code
          PRINT     *7,OPRMDESC             * print operating room desc
.
          PRINT     *7,XTIME,SP2;
.
.         Get Doctor name
.
          MOVE      XCLIN,KEY6
          BRANCH    OPCNCLSU,SHED1000       * using doctor file
.
          PACK      OPCLDESC,SP70
          CALL      RDOPCLI1
          BRANCH    OVRCD,SHED1000          * invalid clinic code
.
          MATCH     SP70,OPCLDESC
          IF        !@EQUAL
            PACK      PACDOCTS,SP30,SP30,SP30
            CLEAR     PACDOCTS
            APPEND    OPCLDESC,PACDOCTS       * set up description
            GOTO      SHED1200
          ELSE
            MATCH     SP6,OPCLDOCT
            GOTO      SHED1000 IF EQUAL
            MOVE      OPCLDOCT,KEY6           * Use doctor code
            GOTO      SHED1000
          ENDIF
.
SHED1000  MOVE      SP6,DTITL
          MOVE      SP2,DGNAME
          MOVE      SP30,DSNAME
          PACK      PACDOCTS,SP30,SP30,SP30
          CLEAR     PACDOCTS
          CALL      RDDOCT1
          CALL      DOCI0000
          APPEND    PACFNAME,PACDOCTS
.
SHED1200  MOVE      XANAE,KEY6
          MOVE      SP6,DTITL
          MOVE      SP2,DGNAME
          MOVE      SP30,DSNAME
          CALL      RDDOCT1
          CALL      DOCI0000
.
          CALL      FORM0000
          RESET     PACDOCTS,90
.
SHED2000  CMATCH    SP1,PACDOCTS                 * Found a non-blank char. ?
          GOTO      SHED2200 IF NOT EQUAL        * Yes, Finished loop
.
          BUMP      PACDOCTS BY -1
          GOTO      SHED2200 IF EOS
          GOTO      SHED2000
.
SHED2200  MOVEFPTR  PACDOCTS,VAR                 * get the logical length
.                                                * of PACDOCTS
          RESET     PACDOCTS,VAR
          LENSET    PACDOCTS
          RESET     PACDOCTS
.
          ADD       SEVEN,VAR                    * add the time
          PRINT     PACDOCTS
.
.         MOVE      XCLIN,KEY6
.         CALL      RDOPCLI1
.         MATCH     OPCLDESC,SP30
.         IF        @EQUAL
.           MOVE      OPCLDOCT,KEY6
.           CALL      RDDOCT1
.           CALL      DOCI0000
.           PRINT     PACFNAME   
.         ELSE
.           PRINT     OPCLDESC
.         ENDIF
.
          MOVE      ZERO,CNTVAR
          PRINT     *7;
.
. -- determine no. of underlines to print
.
SHED3000  ADD       ONE,CNTVAR
          COMPARE   CNTVAR,VAR              * CNTVAR > the length of PACDOCTS
          GOTO      SHED4000 IF LESS        * yes
          PRINT     "-";                    * print underlines
          GOTO      SHED3000       
.
SHED4000  PRINT     *N;
          PRINT     *7,"Special Instructions for this session:":
                    *46,OPSESPI1:
                    *N,*46,OPSESPI2
          PRINT     *7,"Session Comments                     :":
                    *46,SESCOMMS
          PRINT     *N;
          PRINT     *7,NTY1DESC,SP5,NTY1NAME
          PRINT     *7,NTY2DESC,SP5,NTY2NAME
          PRINT     *7,ATY1DESC,SP5,ATY1NAME
          PRINT     *7,ATY2DESC,SP5,ATY2NAME
          PRINT     *N;
          ADD       TEN2,CLNO 
.
SHED9999  RETURN
+
.********************************************************************
.*          DOCI0000                 Called by : MANY               *
.*       get doctors name in Title,Initial, Surname format          *
.********************************************************************
DOCI0000  MOVE      DTITL,PACTITLE 
          MOVE      DGNAME,PACGNAME
.
          CMATCH    SP1,DGNAME              * Is there a given name initial ?
          GOTO      DOCI1000 IF EQUAL       * No
.
. -- get Initial of given name
.
          MOVE      DGNAME,DIM1
.
          PACK      PACGNAME,DIM1,DOT,SP30  * move initials to given name
DOCI1000  MOVE      DSNAME,PACSNAME
          MOVE      ONE,PACFRMT
          CALL      PACNAME
.
DOCI9999  RETURN
+
************************************************************************
.*              FORM0000                        Called by : MANY       *
.*             append doctors                                          *
************************************************************************
FORM0000  CMATCH    SP1,PACDOCTS
          GOTO      FORM2000 IF NOT EQUAL
. 
          BUMP      PACDOCTS,-1
          GOTO      FORM0000 IF NOT EOS
.
.         No Previous Doctor
.
          CLEAR      PACDOCTS
          GOTO       FORM2100
.
FORM2000  MATCH      SP10,PACFNAME          * Is there a 2nd doctor
          GOTO       FORM3200 IF EQUAL      * no
.
          APPEND     SP1,PACDOCTS
          APPEND     SLASH,PACDOCTS
          APPEND     SP1,PACDOCTS
.
.         Append 2nd doctor
.
FORM2100  APPEND    PACFNAME,PACDOCTS
.
FORM2200  CMATCH    SP1,PACDOCTS
          GOTO      FORM3200 IF NOT EQUAL
. 
          BUMP      PACDOCTS,-1
          GOTO      FORM2200 IF NOT EOS
.
.         No 1st Doctor, 2nd doctor
.
          CLEAR      PACDOCTS
          GOTO       FORM3200
.
FORM3200  APPEND     SP30,PACDOCTS           * pad field with spaces
          APPEND     SP30,PACDOCTS 
          APPEND     SP30,PACDOCTS
          RESET      PACDOCTS
.
FORM9999  RETURN
+
************************************************************************
.*                   LMED0000                     Called by : ML0000   *
.*               loop through medical admissions                       *
************************************************************************
LMED0000  UNPACK    KCDATE,CCENT,CYEAR,CMON,CDAY
.
          COMPARE   ONE,COPTION             * Is this called by Option 1
          GOTO      LMED0100 IF EQUAL      * yes, don't initialize page heading
.
. -- called by Option 2
.
          MOVE      ZERO,CPAGENO           * initialize page heading
LMED0100  MOVE      TWO,COPTION
          MOVE      ZERO,CLNO                 * initialize line counter
          MOVE      ZERO,NUMREC               * initialize num. of records
          MOVE      MENU2,CPHDROPT
          MOVE      ONE,CNOUNDLN               
          CALL      HEAD0000                  * print heading 
.
          DISPLAY   *P1:24,"Scanning for Medical Admissions : ";
.
          PACK      KEY16,KCDATE,SP20
          CALL      RDSMISS3                  * position pointer
LMED1000  CALL      RDKMISS3                  * read next record
          BRANCH    OVRCD,LMED8000
.
          MATCH     ADATE,KCDATE             * same admn. date
          GOTO      LMED8000 IF NOT EQUAL    * no
.
          DISPLAY   *P36:24,AADMNO;
.
          COMPARE   FIVE,ASTAT               * Status = 'Cancelled'
          GOTO      LMED1000 IF EQUAL        * yes, ignore record
.
          CALL      LDEA0000                 * check if this patient has a
.                                            * theatre booking.
          BRANCH    EXIT,LMED1000            * yes, therefore this is not
.
          MOVE      AADMNO,DIM8VISN
          MOVE      DIM8VISN,OPDAADMN
          CALL      GPMI0000
          BRANCH    EXIT,LMED1000
.                                            * a medical patient
          COMPARE   CLNO,FIFTY5              * line count > than 55
          GOTO      LMED3000 IF NOT LESS     * no
          CALL      HEAD0000                 * display header
.
LMED3000  MOVE      CURRDATE,AGEDATE          * Today's date
          CALL      CALCAGE
          MOVE      PSAGEYRS,PSAGE
.
          CALL      PATN0000
          MOVE      SP6,DTITL
          MOVE      SP2,DGNAME
          MOVE      SP30,DSNAME
          MOVE      ADOCTA,KEY6
          CALL      RDDOCT1
          CALL      DOCI0000
          MOVE      PACFNAME,TRDOC           * Truncate doctors name
.
          PRINT     PATNAME,SP1,AADMNO,*45,PSAGE,*50,ADIAG1,*101,TRDOC
.
          ADD       ONE,CLNO
          ADD       ONE,NUMREC
.
          MATCH     SP50,ADIAG2              * Is 2nd line a blank line ?
          GOTO      LMED4000 IF EQUAL        * yes
.
.  --- there is a 2nd line for diagnosis
.
          PRINT     *50,ADIAG2
          ADD       ONE,CLNO
          ADD       ONE,NUMREC
.
LMED4000  GOTO      LMED1000
.
LMED8000  COMPARE   ZERO,NUMREC              * any records read
          GOTO      LMED9000 IF EQUAL        * yes
          CALL      DASH0000
.
LMED9000  PRINT     "Total number of Medical Admissions = ",NUMREC
          PRINT     *N,"A medical admission is a patient who is not scheduled ":
                       "for theatre."
          PRINT     *N,"***  End of Report  ***" 
.
LMED9999  RETURN
+
***************************************************************************
.*                           HEAD0000               Called by : MANY      *
.*           print the heading                                            *
***************************************************************************
HEAD0000  CLOCK     TIME,CTIMEIS
          CALL      HEAD132
.
          UNPACK    KCDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,FIELD           * move month to a form field
          LOAD      DSPMONTH,FIELD,JAN,FEB,MAR,APRIL,MAY,JUNE,JULY,AUG,SEPT:
                    OCT,NOV,DEC
.
          PRINT     "Date : ",CDAY,SP1,DSPMONTH,SP1,CCENT,CYEAR;
.
          CALL      DATECONV
          LOAD      DAYDESC,WEEKDAY,MONDAY,TUESDAY,WEDNSDAY,THURSDAY:
                                    FRIDAY,SATURDAY,SUNDAY
.
          BRANCH    COPTION,HEAD1000,HEAD2000
.
HEAD1000  PRINT     *40,"Starting Theatre",*65,": ",STARTCR,SP2,OPRDESC1
          PRINT     "Day  : ",DAYDESC;
          PRINT     *40,"Ending   Theatre",*65,": ",ENDCR,SP2,OPRDESC2
.
          PACK      KEY25,XSEHOSP,XSEDATE,SP70
          CALL      RSOPCOM2
          CALL      RKOPCOM2                * Check for sessions hospital day
          BRANCH    OVRCD,HEAD1100          * comments
.
          MATCH     OPCMHOSP,XSEHOSP
          GOTO      HEAD1100 IF NOT EQUAL
.
          MATCH     OPCMDATE,XSEDATE
          IF        @EQUAL
            MATCH     SP70,OPCMTIME
            GOTO      HEAD1400 IF EQUAL
          ENDIF
.
HEAD1100  PACK      KEY25,SP3,XSEDATE,SP70
          CALL      RSOPCOM2
          CALL      RKOPCOM2                * Check for pre V10.13 day comments
          BRANCH    OVRCD,HEAD1200          * that have a blank hospital
.
          MATCH     OPCMHOSP,SP3
          GOTO      HEAD1200 IF NOT EQUAL
.
          MATCH     OPCMDATE,XSEDATE
          IF        @EQUAL
            MATCH     SP70,OPCMTIME
            GOTO      HEAD1400 IF EQUAL
          ENDIF
.
HEAD1200  MOVE      SP70,OPCMTEXT
.
HEAD1400  PRINT     *1,"Day Comments       : ",OPCMTEXT:
                    *N,"------------       : "
.
          PACK      KEY5,ANSS,ANSP,XPERIOD 
          MOVE      SP20,TDESC
          CALL      RDCODE1             * read codes file
          PRINT     *N,"Period : ",XPERIOD,SP3,TDESC 
.
          CALL      DASH0000
          PRINT     *1,"Case",*7,"Time ",*14,"Patient Name ":
                    *41,"U/R No. ",*50,"DOB ",*61,"Referring Doctor Name ":
                    *92,"Operation ",*128,"Anae"
          PRINT     *7,"Phone Number ",*21,"Fund ":
                    *29,"Post Op Appt ",*50,"Prostheses Items ":
                    *92,"Local GP "
          PRINT     *7,"Comments ",*92,"Equipment Required "
          CALL      DASH0000
          ADD       SEVEN,CLNO
          GOTO      HEAD9999
.
HEAD2000  PRINT     *40,"Medical Admissions " 
          PRINT     "Day  : ",DAYDESC
          PRINT     *N;
          CALL      DASH0000
          PRINT     "Patients Name",*35,"Admn No.  Age  Diagnosis":
                    *101,"Attending Doctor"
          CALL      DASH0000
          ADD       TWO,CLNO 
. 
HEAD9999  RETURN
+
***************************************************************************
.*                           DASH0000                                     *
.*                  print 132 dashes                                      *
***************************************************************************
DASH0000  PRINT     "---------------------------------------":
                    "---------------------------------------":
                    "---------------------------------------":
                    "---------------"
          ADD       ONE,CLNO
DASH9999  RETURN
+
***************************************************************************
.*                           PATN0000                                     *
.*        get patients name, age and diagnosis from PATMA1FD              *
***************************************************************************
PATN0000  MOVE      TWO,PACFRMT
          MOVE      PTITL,PACTITLE
          MOVE      PGNAME,PACGNAME
          MOVE      PSNAME,PACSNAME
          CALL      PACNAME
          MOVE      PACFNAME,PATNAME
.
PATN9999  RETURN
+
.***************************************************************************
.*                          LDEA0000                  Called by : RDPD0000 *
.*    loops through the 2nd index of OPRDEAFD file to see if the admin no. *
.*    still has a valid theatre booking.                                   *
.*       RETURNS   EXIT - TRUE (1) if admin no. still has a valid booking  *
.*                        FALSE (0) otherwise                              *
.***************************************************************************
LDEA0000  MOVE      AADMNO,DIM8VISN            * Make the admission a form8
          MOVE      DIM8VISN,OPDAADMN          * move to the admission number
.
          PACK      KEY31,OPDAADMN,SP30        * Set up the key
          CALL      RSOPDEA2                   * position pointer
.
LDEA0500  CALL      RKOPDEA2                   * read next record
          BRANCH    OVRCD,LDEA1000   
.
          MOVE      OPDAADMN,DIM8VISN
          MATCH     DIM8VISN,AADMNO            * same admission number
          GOTO      LDEA1000 IF NOT EQUAL      * no
.
          COMPARE   THREE,OPDASTAT             * Status = booked ?
          GOTO      LDEA9000 IF NOT EQUAL      * yes
.
.  -- continue to loop through until a status of "0" is found (ie. booked)
.
          GOTO      LDEA0500 
.
LDEA1000  MOVE      FALSE,EXIT                 * admin. no has no valid booking
          GOTO      LDEA9999
.
LDEA9000  MOVE      TRUE,EXIT                  * admin. no has a valid booking
.
LDEA9999  RETURN
+
.********************************************************************
.*                        GPMI0000                                  *
.*                      Get PMI details                             *
.********************************************************************
GPMI0000  MOVE      OPDAADMN,DIM8VISN
          MOVE      DIM8VISN,AADMNO
          MOVE      TWO,PACFRMT
.
          PACK      KEY8,AADMNO
          CALL      RDMISS1              * read admiisions file
          BRANCH    OVRCD,GPMI5000       * if not there try booking file
.
          MATCH     ZEROUR,AURNO         * test if U/R is 0
          GOTO      GPMI7000 IF EQUAL    * read pre-ad file if zero
.
.----- Valid read on the admissions file & u/r os not zero
.
GPMI2000  PACK      KEY8,AURNO
          CALL      RDMAST1              * read master file
          BRANCH    OVRCD,GPMI7000       * try pram file
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          IF        OVRCD=1
            CALL      CLPMSPX2
          ENDIF
          GOTO      GPMI9000             * set up name
.
.--- try bookings file
.
GPMI5000  PACK      KEY8,OPDAADMN
          CALL      RDBKREC1             * read bookings file
          BRANCH    OVRCD,GPMI9500
.
          MOVE      BKREURNO,AURNO       * read master file
          MOVE      BKREBOOK,AADMNO
.
          MATCH     ZEROUR,BKREURNO      * test if u/r is zero
          GOTO      GPMI7000 IF EQUAL    * read pre-ad file if zero
          GOTO      GPMI2000
.
.----  Read the pre-addmissions file 
.
GPMI7000  PACK      KEY8,AADMNO
          CALL      RDPRAM1
          BRANCH    OVRCD,GPMI9500
.
          MOVE      SP6,XWARD
.
GPMI9000  MOVE      ZERO,EXIT
          GOTO      GPMI9999
GPMI9500  
          MOVE      ONE,EXIT
GPMI9999
          RETURN
+
.------------------------------------------------------------
. Display the first second, ... assistant names
.------------------------------------------------------------
DASS0000  MOVE      TWO,F1                  * get 2 assistasnts
.
          PACK      ATY1DESC,SP70
          PACK      ATY2DESC,SP70
          PACK      ATY1NAME,SP70
          PACK      ATY2NAME,SP70
          MOVE      ZERO,LOOPCNTR
          MOVE      ZERO,FOUNDCNT
.
DASS1000  ADD       ONE,LOOPCNTR
          COMPARE   NINE,LOOPCNTR
          GOTO      DASS9999 IF EQUAL
.
          UNPACK    SP70,DIM3,DIM10
.
          LOAD      DIM3,LOOPCNTR,OPSETYD1,OPSETYD2,OPSETYD3,OPSETYD4,OPSETYD5:
                            OPSETYD6,OPSETYD7,OPSETYD8
.
          LOAD      DIM10,LOOPCNTR,OPSEDCC1,OPSEDCC2,OPSEDCC3,OPSEDCC4,OPSEDCC5:
                             OPSEDCC6,OPSEDCC7,OPSEDCC8

          MATCH     SP70,DIM3
          GOTO      DASS1000 IF EQUAL
.
          MATCH     SP70,DIM10
          GOTO      DASS1000 IF EQUAL
.
          PACK      KEY5,ANSO,ANSP,DIM3,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,DASS1000
.
          MATCH     ANSA,TCINDC1                 * Assistant
          GOTO      DASS1000 IF NOT EQUAL
.
          ADD       ONE,FOUNDCNT
          STORE     TDESC,FOUNDCNT,ATY1DESC,ATY2DESC  * type description
.
          MOVE      SP70,DOCFNAME
          PACK      KEY10,DIM10,SP70
          CALL      RDPMHCP1
          IF        OVRCD=1
            MOVE      DIM10,DOCFNAME
          ELSE
            MOVE      PMHCTITL,FMTTITLE
            MOVE      PMHCGNAM,FMTGNAME
            MOVE      PMHCSNAM,FMTSNAME
            CALL      DOCNM000
          ENDIF
.
          STORE     DOCFNAME,FOUNDCNT,ATY1NAME,ATY2NAME    * assistant name
.
          COMPARE   F1,FOUNDCNT
          GOTO      DASS1000 IF NOT EQUAL
.
DASS9999  RETURN
+
.------------------------------------------------------------
. Display the first, second, ... anaesthetist names
.------------------------------------------------------------
DANA0000  MOVE      TWO,F1                  * get 2 anaesthetists
.
          PACK      NTY1DESC,SP70
          PACK      NTY2DESC,SP70
          PACK      NTY1NAME,SP70
          PACK      NTY2NAME,SP70
          MOVE      ZERO,LOOPCNTR
          MOVE      ZERO,FOUNDCNT
.
DANA1000  ADD       ONE,LOOPCNTR
          COMPARE   NINE,LOOPCNTR
          GOTO      DANA9999 IF EQUAL
.
          UNPACK    SP70,DIM3,DIM10
.
          LOAD      DIM3,LOOPCNTR,OPSETYD1,OPSETYD2,OPSETYD3,OPSETYD4,OPSETYD5:
                            OPSETYD6,OPSETYD7,OPSETYD8
.
          LOAD      DIM10,LOOPCNTR,OPSEDCC1,OPSEDCC2,OPSEDCC3,OPSEDCC4,OPSEDCC5:
                             OPSEDCC6,OPSEDCC7,OPSEDCC8

          MATCH     SP70,DIM3
          GOTO      DANA1000 IF EQUAL
.
          MATCH     SP70,DIM10
          GOTO      DANA1000 IF EQUAL
.
          PACK      KEY5,ANSO,ANSP,DIM3,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,DANA1000
.
          MATCH     ANSN,TCINDC1                 * Anaesthetist
          GOTO      DANA1000 IF NOT EQUAL
.
          ADD       ONE,FOUNDCNT
          STORE     TDESC,FOUNDCNT,NTY1DESC,NTY2DESC  * type description
.
          MOVE      SP70,DOCFNAME
          PACK      KEY10,DIM10,SP70
          CALL      RDPMHCP1
          IF        OVRCD=1
            MOVE      DIM10,DOCFNAME
          ELSE
            MOVE      PMHCTITL,FMTTITLE
            MOVE      PMHCGNAM,FMTGNAME
            MOVE      PMHCSNAM,FMTSNAME
            CALL      DOCNM000
          ENDIF
.
          STORE     DOCFNAME,FOUNDCNT,NTY1NAME,NTY2NAME    * anaesth name
.
          COMPARE   F1,FOUNDCNT
          GOTO      DANA1000 IF NOT EQUAL
.
DANA9999  RETURN
+
.-------------------------------------------------
. Format Doctors Given Name
.-------------------------------------------------
DOCGIV00  CMATCH    SP1,NAME35               * Remove Leading Blanks
          IF        @EQUAL
            BUMP      NAME35
            GOTO      DOCGIV00 IF NOT EOS
            GOTO      DOCGIV99               * entire name if blank
          ENDIF
          PACK      KEY35,NAME35,SP30        * reset form pointer
          MOVE      KEY35,NAME35
.
          SCAN      SP1,NAME35             * Locate the blank
          GOTO      DOCGIV20 IF NOT EQUAL
          BUMP      NAME35,-1              * go back 1 to end of name
          MOVEFPTR  NAME35,CCITEM          * another handly form field
          RESET     NAME35                 * reset the form pointer
          SETLPTR   NAME35,CCITEM          * set logical length to end of name
.
.         Save this name
.
          UNPACK    NAME35,KEY1,KEY50
          REP       DOWNCASE,KEY50
          APPEND    KEY1,DISPNAME
          STRIP     KEY50
          APPEND    KEY50,DISPNAME
          APPEND    SP1,DISPNAME
.
.         Check for any more names
.
          SETLPTR   NAME35,35              * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     NAME35,CCITEM          * reset to this point
          PACK      KEY35,NAME35,SP70      * reset form pointer
          MOVE      KEY35,NAME35

DOCGIV10  CMATCH    SP1,NAME35               * Remove Leading Blanks
          IF        @EQUAL
            BUMP      NAME35
            GOTO      DOCGIV10 IF NOT EOS
            GOTO      DOCGIV99               * entire name if blank
          ENDIF
          PACK      KEY35,NAME35,SP30        * reset form pointer
          MOVE      KEY35,NAME35
.
          SCAN      SP1,NAME35             * Locate the blank
          GOTO      DOCGIV20 IF NOT EQUAL
          BUMP      NAME35,-1              * go back 1 to end of name
          MOVEFPTR  NAME35,CCITEM          * another handly form field
          RESET     NAME35                 * reset the form pointer
          SETLPTR   NAME35,CCITEM          * set logical length to end of name
.
.         Save this Initial
.
          UNPACK    NAME35,KEY1,KEY50
          APPEND    KEY1,DISPNAME
          APPEND    SP1,DISPNAME
.
          GOTO      DOCGIV99
.
.         Rest of the string is one name
.
DOCGIV20  UNPACK    NAME35,KEY1,KEY50
          REP       DOWNCASE,KEY50
          APPEND    KEY1,DISPNAME
          STRIP     KEY50
          APPEND    KEY50,DISPNAME
          APPEND    SP1,DISPNAME
.
DOCGIV99  RETURN
+
.********************************************************************
.         I/O
.********************************************************************
RDSTEMP1  RESET     KEY14
          READ      DAYTHTFL,KEY14;;
          RETURN
.
RDKTEMP1  MOVE      ZERO,OVRCD
          READKS    DAYTHTFL;XPERIOD,XTIME,XCLIN,XANAE,XTHEATRE,XWARD,XSEDATE
          GOTO      OVERCOND IF OVER
          RETURN
.
DELTEMP1  RESET     KEY14
          DELETE    DAYTHTFL,KEY14
          RETURN
.
.********************************************************************
.
          INC       STD001IO
          INC       CALCAGE
          INC       DATECONV
.
          INC       CLBOKRX1
          INC       CLPATMIS
          INC       CLPMSPX2
          INC       CLPMSVX1
          INC       NAMSTRCD
          INC       OPROPRDS
          INC       PATDOCCD
          INC       PATDOCKY
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       BOKRC1IO/INC
          INC       BOKRX1IO/INC
          INC       OPRCLIIO/INC       * clinic io
          INC       OPRCOMIO/INC       * comments file
          INC       OPRDEAIO/INC       * operation detail file
          INC       OPRDEDIO/INC       * operation comments file
          INC       OPROPRIO/INC       * operating room file
          INC       OPRSESIO/INC       * session file
.
          INC       PATCODIO/INC       * codes file
          INC       PATDO1IO/INC       * doctors file
          INC       PATMA1IO/INC       * patient master file
          INC       PATMI1IO/INC       * admissions file
          INC       PATPR1IO/INC       * pre-admissions file
          INC       PATTRNIO/INC       * transfer file
          INC       PMSHCPIO/INC       
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
+
