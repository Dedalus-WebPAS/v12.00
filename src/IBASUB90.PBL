.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  08.04.2005 Peter Vela CAR 59696
.           Changed commodity group from DIM 5 to DIM 6
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.00.01  29.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
.-------------------------------------------------------
PRCODESC  DIM       40
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB90
.   Function      :   Ledger Interface Translation            
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       FMSAMAFD/INC
          INC       FMSCONFD/INC
          INC       FMSLMAFD/INC
          INC       FMSSBAFD/INC
          INC       SINCGAFD/INC
          INC       SINCONFD/INC
          INC       SINLTTFD/INC
          INC       SINSUAFD/INC
          INC       SINTMPDF/INC
.=========================
.Local Variable Definition
.-------------------------
CODDESC   DIM      40 * Scr 01 Fld     8
FROMLAB   DIM       6 * Scr 02 Fld    12
FROMDESC  DIM      35 * Scr 02 Fld    13
TOLAB     DIM       6 * Scr 02 Fld    14
TODESC    DIM      35 * Scr 02 Fld    15
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB90"
PRGNAM    INIT      "Ledger Interface Translation            "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RDCON000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA1,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA2,"sincgaaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA1,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA2,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA3,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main SCreen                        
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Single Item Update                 
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Range Update                       
          ENDIF
          RETURN
.--------------------------------
. Screen - Main SCreen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main SCreen                        
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main SCreen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main SCreen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main SCreen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main SCreen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main SCreen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main SCreen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      SC02L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.--------------------------------
. Screen - Single Item Update                 
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Single Item Update                 
.-------------------------------------------------------
CF01L000  COMPARE   ZERO,ACCEPT
              GOTO      CF01L999 IF EQUAL
          MOVE      SP70,SILTLED 
          MOVE      SP70,FMLADESC
          MOVE      SP70,SILTCOD 
          MOVE      SP70,CODDESC 
          MOVE      SP70,SILTSUB 
          MOVE      SP70,FMSADESC
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Single Item Update                 
.--------------------------------------------------------
KY01L000
.
KY01L110
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KFMLAA00
          MOVE      FMLALEDG,SILTLED
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      ZERO,ACCEPT
          MOVE      SILTLED,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
.
KY01L120
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CODDESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KCOD0000
          BRANCH    EXIT,KY01L110,KY01L900
          MOVE      ZERO,ACCEPT
          CALL      CKSUB000
          MOVE      SILTCOD,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CODDESC,VAR      
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Single Item Update                 
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Single Item Update                 
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Single Item Update                 
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Single Item Update                 
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L101,PS01L999,PS01L102:
                            PS01L103,PS01L104
          GOTO     PS01L999
.
PS01L101
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      CODDESC,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      SILTSUB,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      FMSADESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Single Item Update                 
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L104,SF01L006
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L104,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L102
          CALL      POST0000
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L103
          CALL      DELT0000
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L104
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMSADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSUBJ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
            BRANCH    EXIT,SF01L104,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SILTSUB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMSADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.--------------------------------
. Screen - Range Update                       
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Range Update                       
.-------------------------------------------------------
CF02L000
          MOVE      SP70,FMLALEDG
          MOVE      SP70,FMLADESC
          MOVE      SP70,FMSASUBJ
          MOVE      SP70,FMSADESC
          MOVE      SP70,FROMLAB 
          MOVE      SP70,FROMDESC
          MOVE      SP70,TOLAB   
          MOVE      SP70,TODESC  
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Range Update                       
.--------------------------------------------------------
KY02L000
.
KY02L110
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KFMLAA00
          BRANCH    EXIT,KY02L900,KY02L900
          MOVE      ZERO,ACCEPT
          MOVE      FMLALEDG,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
.
KY02L120
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMSADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KSBAFM00
          BRANCH    EXIT,KY02L110,KY02L900
          MOVE      ZERO,ACCEPT
          CALL      SETACCEP
          MOVE      FMSASUBJ,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMSADESC,VAR     
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Range Update                       
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Range Update                       
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Range Update                       
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Range Update                       
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L101,PS02L999,PS02L102:
                            PS02L999,PS02L999,PS02L999,PS02L103:
                            PS02L104,PS02L105,PS02L106,PS02L999
          GOTO     PS02L999
.
PS02L101
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      FMSADESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      FROMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      TODESC,VAR       
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Range Update                       
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L103:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L104,SF02L105,SF02L106:
                            SF02L006,SF02L107,SF02L006,SF02L108
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L106:
                            SF02L020,SF02L107,SF02L020,SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L102
          CALL      POSTA000
          MOVE      ONE,EXIT
          GOTO      SF02L999
.
SF02L103
          CALL      DELTA000
          MOVE      ONE,EXIT
          GOTO      SF02L999
.
SF02L104
          CALL      KSUC0000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L105
          CALL      GSTR0000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L106
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCODF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L106
            ENDIF
            BRANCH    EXIT,SF02L106,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L107
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODESC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCODT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L107
            ENDIF
            BRANCH    EXIT,SF02L107,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODESC,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L108
          CALL      POSB0000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
SF02L990  MOVE      FOUR,EXIT * Exit Char Exit
SF02L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Read controlf file data and open gl files
.----------------------------------------------------------------------
RDCON000
          MOVE      "23",SECTOR
          READ      CONTROLF,SECTOR;*95,HACCNT
          MOVE      "24",SECTOR
          READ      CONTROLF,SECTOR;*135,HACCDATA
.
          IF        HACCNT<>1
            BEEP
            CLEAR     DISPMSG
            APPEND    "ERROR - GL Interface Not Active - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
.
.---- accounting system active ----
.
          CLOSE     CONTROLF           * get gl control file if possible
          MOVE      "controlf.txt",KEY12
          PACK      KEY80,HACCDATA,KEY12
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CONTROLF,KEY80
          TRAPCLR   IO
          IF        OVRCD=1
            OPEN      CONTROLF,"controlf"
          ENDIF
.
          CALL      RDFMCO50           * Read Account Code Parameters
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CLOSE     CONTROLF
          OPEN      CONTROLF,"controlf"
.
          MOVE      "fmsamaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSAMAA1,KEY80
          OPEN      FMSAMAA2,KEY80
          OPEN      FMSAMAA3,KEY80
          OPEN      FMSAMAA4,KEY80
.
          MOVE      "fmssbaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSSBAA1,KEY80
          OPEN      FMSSBAA2,KEY80
.
          MOVE      "fmslmaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMAA1,KEY80
.
RDCON999  RETURN
.******************************************************************************
.  CKSUB- Get Key                                Called by ML
.******************************************************************************
CKSUB000
          UNPACK    SP70,SILTSUB
          PACK      KEY8,SILTLED,SILTCOD,SP70                          *C-59696
          CALL      RDSILT1
          MOVE      OVRCD,ACCEPT
.
          UNPACK    SP70,FMSADESC
          PACK      KEY14,SILTLED,SILTSUB,SP70
          CALL      RDFMSA1
.
CKSUB999  RETURN
.**********************************************************************
.  POST - Post Data                                    Called By ML
.**********************************************************************
POST0000
          PACK      KEY8,SILTLED,SILTCOD                               *C-59696
          CALL      DESILT1
          CALL      WRSILT1
.
          CALL      PLINE000
.
POST9999  RETURN
.----------------------------------------------------------------------
. Print Line
.----------------------------------------------------------------------
PLINE000
. ------- Get Description
          PACK      KEY5,SILTCOD,SP70
          CALL      RDSISA1
          IF        OVRCD=0
            MOVE      SISADESC,PRCODESC
          ELSE
            PACK      KEY6,SILTCOD,SP70                                *C-59696
            CALL      RDSIGA1
            IF        OVRCD=0
              MOVE      SIGADES,PRCODESC
            ELSE
              MOVE      SP70,PRCODESC
            ENDIF
          ENDIF
.
          CALL      PDATA000
.
PLINE999  RETURN
.----------------------------------------------------------------------
. Print Data
.----------------------------------------------------------------------
PDATA000
          IF        CPAGENO<1 | CLNO > 56
            CALL      PHEAD000
          ENDIF
.
          PRINT     *01,SILTLED:
                    *09,SILTSUB:
                    *24,SILTCOD:
                    *31,PRCODESC
          ADD       ONE,CLNO
.
PDATA999  RETURN
.----------------------------------------------------------------------
. Print Header
.----------------------------------------------------------------------
PHEAD000
          CALL      HEAD80
          PRINT     *N:
                    *01,"Ledger  ":
                    *09,"GL Subjective  ":
                    *24,"Commodity/Product Group Link                    ",*N:
                    *01,"------  ":
                    *09,"-------------  ":
                    *24,"------------------------------------------------"
          MOVE      FIVE,CLNO
.
PHEAD999  RETURN
.**********************************************************************
.  DELT - Delete Data                                    Called By ML
.**********************************************************************
DELT0000  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          CALL      DELQST
          CALL      MESSAGE3
          SUB       ONE,CEXIT
          BRANCH    CEXIT,DELT9999,DELT9999
.
          PACK      KEY8,SILTLED,SILTCOD                               *C-59696
          CALL      DESILT1
.
DELT9999  RETURN
.******************************************************************************
.  KCOD - Get Key                                Called by ML
.         Returns : EXIT     (1=exit)
.******************************************************************************
KCOD0000
          CALL      KSUC0000
          BRANCH    EXIT,KCOD9500,KCOD9500
.
          DISPLAY   *PCCOL:CVERT,*V2LON,KEY5,*HOFF,SP9,KEY35;
          PACK      SILTCOD,KEY5,SP70
          PACK      CODDESC,KEY35,SP70
.
KCOD9000  MOVE      ZERO,EXIT               * continue
          GOTO      KCOD9999
.
KCOD9500  MOVE      ONE,EXIT                * quit
.
KCOD9999  RETURN
.**********************************************************************
.  KSUBJ- Keyin Subjective                               Called By ML
.**********************************************************************
KSUBJ000
          CALL      KSBAFM00
          BRANCH    EXIT,KSUBJ000,KSUBJ999
          MOVE      FMSASUBJ,SILTSUB
.
KSUBJ999  RETURN
.********************************************************************
. Set accept mode
.********************************************************************
SETACCEP  MOVE      ONE,ACCEPT
          RETURN
.**********************************************************************
.  POSTA - Post Data                                    Called By ML
.**********************************************************************
POSTA000  MOVE      ZERO,SECTOR        * set for add
          CALL      POSB0000
.
POSTA999  RETURN
.**********************************************************************
.  DELTA - DELT Data                                    Called By ML
.**********************************************************************
DELTA000  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          CALL      DELQST
          CALL      MESSAGE3
          SUB       ONE,CEXIT
          BRANCH    CEXIT,DELTA999,DELTA999
.
          MOVE      ONE,SECTOR         * set for delete
          CALL      POSB0000
.
DELTA999  RETURN
.******************************************************************************
.  KSUC - Get Coommodity/Subjective              Called by ML
.******************************************************************************
KSUC0000
          MOVE      UNDLN70,KEY6                                       *C-59696
          KEYIN     *PCCOL:CVERT,*DV,KEY6:                             *C-59696
                    *PCCOL:CVERT,*V2LON,KEY6                           *C-59696
          PACK      KEY6,KEY6,SP70                                     *C-59696
          DISPLAY   *PCCOL:CVERT,*V2LON,KEY6                           *C-59696
.
          MOVE      KEY6,KEY5                                          *C-59696
.
          MATCH     SP70,KEY5
          GOTO      KSUC9500 IF EQUAL
          MATCH     EXITCHAR,KEY5
          GOTO      KSUC9700 IF EQUAL
.
          CALL      RDSISA1
          PACK      KEY35,SISADESC,SP70
          COMPARE   ONE,OVRCD
          GOTO      KSUC0500 IF NOT EQUAL
.
          CALL      RDSIGA1
          PACK      KEY35,SIGADES,SP70
          COMPARE   ONE,OVRCD
          GOTO      KSUC0500 IF NOT EQUAL
.
          MOVE      "Commodity/Product Group Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KSUC0000
.
KSUC0500
.
.
KSUC9000  MOVE      ZERO,EXIT               * continue
          GOTO      KSUC9999
.
KSUC9500  MOVE      ONE,EXIT                * nothing entered
          GOTO      KSUC9999
.
KSUC9700  MOVE      TWO,EXIT                * quit
.
KSUC9999  RETURN
.*****************************************************************************
. GSTR - get a string of a specified length           Called by lots
.    Requires - CCOL, CVERT  (screen address to get input)
.               CSTRLEN      (string length - up to 35 chars)
.    Returns  - CSTRING      (string entered)
.*****************************************************************************
GSTR0000  STORE     UNDLN70,CSTRLEN,KEY1:
                    KEY2,KEY3,KEY4,KEY5,KEY6,KEY7,KEY8,KEY9,KEY10:
                    KEY11,KEY12,KEY13,KEY14,KEY15,KEY16,KEY17,KEY18,KEY19,KEY20:
                    KEY21,KEY22,KEY23,KEY24,KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                    KEY31,KEY32,KEY33,KEY34,KEY35
          BRANCH    CSTRLEN,GSTR0001,GSTR0002,GSTR0003,GSTR0004:
                            GSTR0005,GSTR0006,GSTR0007,GSTR0008:
                            GSTR0009,GSTR0010,GSTR0011,GSTR0012:
                            GSTR0013,GSTR0014,GSTR0015,GSTR0016:
                            GSTR0017,GSTR0018,GSTR0019,GSTR0020:
                            GSTR0021,GSTR0022,GSTR0023,GSTR0024:
                            GSTR0025,GSTR0026,GSTR0027,GSTR0028:
                            GSTR0029,GSTR0030,GSTR0031,GSTR0032:
                            GSTR0033,GSTR0034,GSTR0035
.
GSTR0001  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY1:
                    *PCCOL:CVERT,*V2LON,KEY1;
          GOTO      GSTR0090
.
GSTR0002  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY2:
                    *PCCOL:CVERT,*V2LON,KEY2;
          GOTO      GSTR0090
.
GSTR0003  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY3:
                    *PCCOL:CVERT,*V2LON,KEY3;
          GOTO      GSTR0090
.
GSTR0004  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY4:
                    *PCCOL:CVERT,*V2LON,KEY4;
          GOTO      GSTR0090
.
GSTR0005  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY5:
                    *PCCOL:CVERT,*V2LON,KEY5;
          GOTO      GSTR0090
.
GSTR0006  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY6:
                    *PCCOL:CVERT,*V2LON,KEY6;
          GOTO      GSTR0090
.
GSTR0007  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY7:
                    *PCCOL:CVERT,*V2LON,KEY7;
          GOTO      GSTR0090
.
GSTR0008  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY8:
                    *PCCOL:CVERT,*V2LON,KEY8;
          GOTO      GSTR0090
.
GSTR0009  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY9:
                    *PCCOL:CVERT,*V2LON,KEY9;
          GOTO      GSTR0090
.
GSTR0010  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY10:
                    *PCCOL:CVERT,*V2LON,KEY10;
          GOTO      GSTR0090
.
GSTR0011  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY11:
                    *PCCOL:CVERT,*V2LON,KEY11;
          GOTO      GSTR0090
.
GSTR0012  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY12:
                    *PCCOL:CVERT,*V2LON,KEY12;
          GOTO      GSTR0090
.
GSTR0013  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY13:
                    *PCCOL:CVERT,*V2LON,KEY13;
          GOTO      GSTR0090
.
GSTR0014  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY14:
                    *PCCOL:CVERT,*V2LON,KEY14;
          GOTO      GSTR0090
.
GSTR0015  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY15:
                    *PCCOL:CVERT,*V2LON,KEY15;
          GOTO      GSTR0090
.
GSTR0016  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY16:
                    *PCCOL:CVERT,*V2LON,KEY16;
          GOTO      GSTR0090
.
GSTR0017  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY17:
                    *PCCOL:CVERT,*V2LON,KEY17;
          GOTO      GSTR0090
.
GSTR0018  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY18:
                    *PCCOL:CVERT,*V2LON,KEY18;
          GOTO      GSTR0090
.
GSTR0019  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY19:
                    *PCCOL:CVERT,*V2LON,KEY19;
          GOTO      GSTR0090
.
GSTR0020  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY20:
                    *PCCOL:CVERT,*V2LON,KEY20;
          GOTO      GSTR0090
.
GSTR0021  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY21:
                    *PCCOL:CVERT,*V2LON,KEY21;
          GOTO      GSTR0090
.
GSTR0022  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY22:
                    *PCCOL:CVERT,*V2LON,KEY22;
          GOTO      GSTR0090
.
GSTR0023  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY23:
                    *PCCOL:CVERT,*V2LON,KEY23;
          GOTO      GSTR0090
.
GSTR0024  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY24:
                    *PCCOL:CVERT,*V2LON,KEY24;
          GOTO      GSTR0090
.
GSTR0025  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY25:
                    *PCCOL:CVERT,*V2LON,KEY25;
          GOTO      GSTR0090
.
GSTR0026  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY26:
                    *PCCOL:CVERT,*V2LON,KEY26;
          GOTO      GSTR0090
.
GSTR0027  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY27:
                    *PCCOL:CVERT,*V2LON,KEY27;
          GOTO      GSTR0090
.
GSTR0028  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY28:
                    *PCCOL:CVERT,*V2LON,KEY28;
          GOTO      GSTR0090
.
GSTR0029  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY29:
                    *PCCOL:CVERT,*V2LON,KEY29;
          GOTO      GSTR0090
.
GSTR0030  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY30:
                    *PCCOL:CVERT,*V2LON,KEY30;
          GOTO      GSTR0090
.
GSTR0031  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY31:
                    *PCCOL:CVERT,*V2LON,KEY31;
          GOTO      GSTR0090
.
GSTR0032  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY32:
                    *PCCOL:CVERT,*V2LON,KEY32;
          GOTO      GSTR0090
.
GSTR0033  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY33:
                    *PCCOL:CVERT,*V2LON,KEY33;
          GOTO      GSTR0090
.
GSTR0034  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY34:
                    *PCCOL:CVERT,*V2LON,KEY34;
          GOTO      GSTR0090
.
GSTR0035  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY35:
                    *PCCOL:CVERT,*V2LON,KEY35;
          GOTO      GSTR0090
.
GSTR0090  LOAD      CSTRING,CSTRLEN,KEY1:
                    KEY2,KEY3,KEY4,KEY5,KEY6,KEY7,KEY8,KEY9,KEY10:
                    KEY11,KEY12,KEY13,KEY14,KEY15,KEY16,KEY17,KEY18,KEY19,KEY20:
                    KEY21,KEY22,KEY23,KEY24,KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                    KEY31,KEY32,KEY33,KEY34,KEY35
          DISPLAY   *PCCOL:CVERT,*V2LON,CSTRING;
.
GSTR9999  RETURN
.----------------------------------------------------------------------
. Keyin from code (commodity/subjective)
.----------------------------------------------------------------------
KCODF000
          CALL      KSUC0000                     * keyin xxxx
          BRANCH    EXIT,KCODF100,KCODF950
.
          PACK      FROMLAB,KEY6,SP70        * item entered            *C-59696
          PACK      FROMCODE,KEY6,SP70                                 *C-59696
          PACK      FROMDESC,KEY35,SP70
          GOTO      KCODF900
.
KCODF100  PACK      FROMLAB,START,SP70           * nothing entered
          PACK      FROMCODE,SP70
          PACK      FROMDESC,SP70
          GOTO      KCODF900
.
KCODF900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KCODF999
.
KCODF950  MOVE      TWO,EXIT                     * quit screen
.
KCODF999  RETURN
.----------------------------------------------------------------------
. Keyin to code (commodity/subjective)
.----------------------------------------------------------------------
KCODT000
          CALL      KSUC0000                     * keyin xxxx
          BRANCH    EXIT,KCODT100,KCODT950
.
          PACK      TOLAB,KEY6,SP70          * item entered            *C-59696
          PACK      TOCODE,KEY6,SP70                                   *C-59696
          PACK      TODESC,KEY35,SP70
          GOTO      KCODT900
.
KCODT100  PACK      TOLAB,END,SP70               * nothing entered
          PACK      TOCODE,Z70
          PACK      TODESC,SP70
          GOTO      KCODT900
.
KCODT900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KCODT999
.
KCODT950  MOVE      TWO,EXIT                     * quit screen
.
KCODT999  RETURN
.**********************************************************************
.  POSB - Post Data                                    Called By ML
.**********************************************************************
POSB0000
          MATCH     FROMCODE,TOCODE
          GOTO      POSB0250 IF NOT LESS
.
          MOVE      "Illegal Range Entered - ",DISPMSG
          CALL      MESSAGE1
          GOTO      POSB9500
.
POSB0250
.
.---- process commodity ----
.
          PACK      KEY6,FROMCODE,SP70                                 *C-59696
          CALL      RSSIGA1
          CALL      RPSIGA1
.
POSB0300
          CALL      RKSIGA1
          BRANCH    OVRCD,POSB0400
          MATCH     SIGACOD,TOCODE
          GOTO      POSB0400 IF LESS
.
          DISPLAY   *P1:24,"Processing 1 : ",*V2LON,SIGACOD,*EL;
          PACK      KEY8,FMLALEDG,SIGACOD,SP70                         *C-59696
          UNPACK    KEY8,SILTLED,SILTCOD                               *C-59696
          MOVE      FMSASUBJ,SILTSUB
          CALL      DESILT1
          COMPARE   ONE,SECTOR
          IF        !@EQUAL
            CALL      WRSILT1
            MOVE      SIGADES,PRCODESC
            CALL      PDATA000
          ENDIF
          GOTO      POSB0300
.
.---- process subjective ----
.
POSB0400
          PACK      KEY5,FROMCODE,SP70
          CALL      RSSISA1
          CALL      RPSISA1
.
POSB0500
          CALL      RKSISA1
          BRANCH    OVRCD,POSB9000
          MATCH     SISACODE,TOCODE
          GOTO      POSB9000 IF LESS
.
          DISPLAY   *P1:24,"Processing 2 : ",*V2LON,SISACODE,*EL;
          PACK      KEY8,FMLALEDG,SISACODE,SP70                        *C-59696
          UNPACK    KEY8,SILTLED,SILTCOD                               *C-59696
          MOVE      FMSASUBJ,SILTSUB
          CALL      DESILT1
          COMPARE   ONE,SECTOR
          IF        !@EQUAL
            CALL      WRSILT1
            MOVE      SISADESC,PRCODESC
            CALL      PDATA000
          ENDIF
          GOTO      POSB0500
.
POSB9000  MOVE      ZERO,EXIT
          GOTO      POSB9999
.
POSB9500  MOVE      ONE,EXIT
.
POSB9999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       FMSAMAIO/INC
          INC       FMSCONIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMAKY    
          INC       FMSSBAIO/INC
          INC       FMSSBAKY    
          INC       SINCGAIO/INC
          INC       SINLTTIO/INC
          INC       SINSUAIO/INC
.
          INC       STDGENCD
.
