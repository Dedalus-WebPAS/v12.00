.------------------------------------------------------------
.  File          :  ALLAPKPR.PBL
.
.  Function      :  Update Keyword Index File for A/H Problem Details
.
.  Parameters    :  ALPRDEPT - Department
.                :  ALPRPROB - Problem Code
.
.  Modifications :
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Procedure to Update
.  a Key Word Index Table that can be used for searching 
.  Masterfiles. The procedure should be called from the 
.  Add, Update and Delete functions in the Masterfile 
.  Maintenance Function.
.  
.  A Key Word Index Table is Defined in the following Manner
.                              
.  PTDKxxxx    DIM       xx    * Code Field Segment 1
.  PTDKyyyy    DIM       xx    * Code Field Segment n
.  PTDKKWD     DIM       15    * Key Word
.  PTDKSPA     DIM       10    * Spare
.
.  Index 1   PTDKxxxx, PTDKyyyy, PTDKKWD
.  Index 2   PTDKKWD, PTDKxxxx, PTDKyyyy
.
.  To convert this Procedure the following should be performed
.    Global Change PAT to the System ID eg :%s/PAT/PAT/g
.    Global Change CKI to the File   ID eg :%s/CKI/CKI/g
.    Global Change PTDK to the IO Call ID eg :%s/PTDK/PTDK/g
.    Modify the KEYINDEX defintion to combined Code Field Lengths eg 6
.    Global Change KEY21 to the Key for the Key Word Table eg KEY21
.    Change xxxxxxx to the Code Fields eg DCODEhh
.    Change the GENR0000 routine to call the BWORD000 for each
.    string of key words to be indexed for the Coded Field
.    eg MOVE    DSNAME,KEYWORDS
.       CALL    BWORD000
.       MOVE    DGNAME,KEYWORDS
.       CALL    BWORD000
.       MOVE    TDESC,KEYWORDS
.       CALL    BWORD000
.------------------------------------------------------------
          DEFPROC   ALLAPKUP
.
          INC       ALLPKIFD/INC
.
KEYINDX1  DIM       3         * Code Index in for department
KEYINDX2  DIM       9         * Code Index in for problem
KEYWORDS  DIM       60        * String Containing the Key Words to be Indexed
SIXTY     FORM      "60"
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       15
KEYWRD02  DIM       15
KEYWRD03  DIM       15
KEYWRD04  DIM       15
KEYWRD05  DIM       15
KEYWRD06  DIM       15
KEYWRD07  DIM       15
KEYWRD08  DIM       15
KEYWRD09  DIM       15
KEYWRD10  DIM       15
.------------------------------------------------------------
. Generate Word Index
.------------------------------------------------------------
GENR0000  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     ALLPKIA1,"allpkiaf"
          TRAPCLR  IO
          BRANCH   OVRCD,GENR9999
.
          MOVE     ALPRDEPT,KEYINDX1
          MOVE     ALPRPROB,KEYINDX2
          CALL     CLEAR000           * Remove Current Key Word Index
          BRANCH   EXIT,GENR9999
.
          PACK     KEY12,ALPRDEPT,ALPRPROB,SP70 * Valuidate Record on File
          CALL     RDALPRR1
          BRANCH   OVRCD,GENR1900     * If Not then it Must be a Delete/Clear
.
          MOVE     ALPRDEPT,KEYINDX1
          MOVE     ALPRPROB,KEYINDX2
.
          MOVE     ALPRDESC,KEYWORDS
          CALL     BWORD000
.
GENR1900  CLOSE    ALLPKIA1
.
GENR9999  GOTO     ALLAPKEP
.------------------------------------------------------------
. Clear Current Key Words
.------------------------------------------------------------
CLEAR000  PACK     KEY52,KEYINDX1,KEYINDX2,SP70
          CALL     RSALPKI1
          CALL     RKALPKI1
          BRANCH   OVRCD,CLEAR999
.
          MATCH    KEYINDX1,ALPKDEPT
          GOTO     CLEAR999 IF NOT EQUAL
.
          MATCH    KEYINDX2,ALPKPROB
          GOTO     CLEAR999 IF NOT EQUAL
.
          PACK     KEY52,ALPKDEPT,ALPKPROB,ALPKKKWD,SP70
          CALL     DEALPKI1
.
          GOTO     CLEAR000
.
CLEAR999  RETURN
.-------------------------------------------------
. Determine Words to Index
.-------------------------------------------------
BWORD000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      BWORD000 IF NOT EOS
            GOTO      BWORD999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY60,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      BWORD100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handly form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Save this Word
.
BWORD100  MOVE      KEYWORDS,KEY40
          PACK      KEY40,KEY40,SP70
          REP       UPPLOW,KEY40             * Always Upper Case
          PACK      KEY52,KEYINDX1,KEYINDX2,KEY40
          UNPACK    KEY52,ALPKDEPT,ALPKPROB,ALPKKKWD
          MOVE      SP70,ALPKSPAR
          CALL      RDALPKI1
          IF        OVRCD=1
            CALL      WRALPKI1
          ENDIF
          GOTO      BWORD190
.
.         Check for any more words
.
BWORD190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY60,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY60,KEYWORDS
          GOTO      BWORD000
.
BWORD999  RETURN
.
          INC       ALLPKIIO/INC
          INC       IBAOVRIO/INC
.
ALLAPKEP  ENDPROC                          * End of Procedure
.
