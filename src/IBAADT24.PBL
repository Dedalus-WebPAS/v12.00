.******************************************************************************
.* System    :   Outpatients                                                  *
.* Program   :   IBAADT24                                                     *
.* Desc      :   Health Fund EDI Extract Enquiry                              *
.******************************************************************************
.* Date      :   22/03/1999                                                   *
.* Author    :   Andrew Peel                                                  *
.* Function  :   This program displays & prints each EDI batch's details      *
.* Mods      :                                                                *
.* V10.04.01  15/06/2014 Jill Parkinson CAR 301639                            *
.*            Moved call to TFILENAM to INIT000 instead of OPEN0000           *
.* V10.03.01  19/12/2012 Patrick Adair                             CAR 261630 *
.*                       Removed port number from temp file name              *
.*        V9.04.01  03/08/05 J.Tan    CAR 62750                               *
.*                  Removed redefined amount variables                        *
.*        V9.02.06  27/02/2002  Steve Downing                                 *
.*                  Fixed printing of 0's for invalid data in invoice listing *
.*        V9.02.05  19/02/2002  Steve Downing                                 *
.*                  Fixed "No. of Invoices" was showing 0 & invoice listing   *
.*        V9.02.04  01/02/2002  Steve Downing                                 *
.*                  Added batch number keyin to "?" screen                    *
.*        V9.02.03  24/01/2002  Steve Downing                                 *
.*                  Added "?" screen for batch numbers                        *
.*                  08/01/2002  Steve Downing                                 *
.*                  Replaced array with tempfile to increase max recs to 9999 *
.*        V9.02.02  19/12/2001  Steve Downing  SRF 14667                      *
.*                  Increased number of records SCRARY can handle to 4335     *
.*        V9.02.01  18/12/2001  Steve Downing  SRF 14667                      *
.*                  Fixed U*R error caused by too many records for SCRARY     *
.******************************************************************************
.*        V5.08.01  23/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.00  06/07/2000  Greg Horvat                                   *
.*                  Copied from release 6.07 version V6.07.00                 *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
.
          INC       IBAPASFD/INC
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       PATEBHFD/INC
          INC       PATEBIFD/INC
          INC       PATEDAFD/INC
          INC       PATFN1FD/INC
          INC       PATINVFD/INC
          INC       PATMA1FD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
TEMP1     IFILE     SQL, FIXED=13, KEY="U1-4"
FILELIN1  INIT      " 13 U1-4 U5-12"
.
.Name     Type   Length   Physical   Start   Description
.----     ----   ------   --------   -----   -----------
DTMPNO    DIM       4         4        1     Tempfile item no
TMPINVN   DIM       8         8        5     Invoice No
.
.End of Record                        13
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
BATCHNO   DIM       8                       * Batch  Number
CMDLINE   DIM       100                     * Command Line
DISEDIS   DIM       8                       * Display EDI Sent Flag
DISHGRP   DIM       30                      * Display Health Group Fund
DISOPER   DIM       35                      * Display Operator User Name
DSPBCDTE  DIM       10                      * Display batch created date
DSPBCTME  DIM       5                       * Display batch created time
DSPEDDTE  DIM       10                      * Display end date
DSPEETP   DIM       11                      * Display EDI extract type
DSPSTDTE  DIM       10                      * Display start date
EDSTATUS  FORM      2                       * EDI Status
FNAME1    DIM       8                       * Tempfile Name
FORM3     FORM      3
FULLNAME  DIM       17                      * Display Full Name 
ITMNO     FORM      4                       * Item Number
INVDATE   DIM       10                      * Display Invoice Date
INVNAME   DIM       43                      * Display Invoice Name
LINECNT   FORM      2                       * Count No. of Lines Printed
NEXT      FORM      1                       * Next Screen Flag
OUTTOTAL  FORM      8.2                     * Outstanding Total
PREVIOUS  FORM      1                       * Previous Screen Flag
PRINT     FORM      1                       * Print Screen Flag
SCRMAX    FORM      4                       * Maximum Screen No.
SCRNO     FORM      3                       * Current Screen No.
TMPNO     FORM      4                       * Tempfile No
TOTALINV  FORM      8.2                     * Sum Total all Invoice Amounts
TOTALITM  FORM      4                       * Total No. of Invoices
TOTALOUT  FORM      8.2                     * Sum Total all Outstanding Amounts
.
DSPEETP0  INIT      "Health Fund"
DSPEETP1  INIT      "TAC        "
ZERO8     INIT      "0000    "
.
PRGID     INIT      "IBAADT24"
PRGNAM    INIT      "Health Fund EDI Extract Enquiry"
VERSION   INIT      "V12.00.00"
.
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000                * initialisation and open files
.
ML0100    CALL      KEYBAT00                * Keyin batch number
          BRANCH    EXIT,ML9999             * EXIT = 1 if 0 chosen in menu
          CALL      LOAD0000                * Load details
ML1000    CALL      DISP0000                * Display Screen
.
          BRANCH    CCITEM,ML2000:          * Print Header
                           ML3000:          * Display/Print Invoices
                           ML0100           * Exit
.
ML2000    CALL      PRHEAD00                * Print Batch Header Details 
          GOTO      ML9999
.
ML3000    CALL      OPEN0000                * Open Tempfile
          CALL      CLVR0000                * Clear Variables 
          CALL      BACK0000                * Display Background Screen
          PACK      KEY4,SP3,ONE
          CALL      RDTEMP1
          PACK      KEY16,BATCHNO,TMPINVN
          CALL      DPSC0000                * Display Screen
ML4000    CALL      QUES0000
          COMPARE   ZERO,CCITEM
          GOTO      ML7000 IF EQUAL         * Print
          GOTO      ML0100 IF LESS          * Cancel ?
.
          PERFORM   CCITEM,NEXT0000:        * Next screen
                           PREV0000:        * pRevious screen
                           ML1000           * eXit to batch details screen
          BRANCH    EXIT,ML0100
          GOTO      ML4000
.
ML7000    CALL      PRINV000
ML9000    CALL      KILL0000
.
ML9999    CHAIN     PGM                     * chain back to program
.
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                * Display Heading
          DISPLAY   *P56:24,"Opening ihapassf";
          OPEN      IHAPASS1,"ihapassf"
.
          DISPLAY   *P64:24,"patedaaf";
          OPEN      PATEDAA1,"patedaaf"
.
          DISPLAY   *P64:24,"patebhaf";
          OPEN      PATEBHA1,"patebhaf"
.
          DISPLAY   *P64:24,"patebiaf";
          OPEN      PATEBIA1,"patebiaf"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patinvrf";
          OPEN      PATINVR1,"patinvrf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAME1
.
INIT9999  RETURN
.
.****************************************************************************
.*                                KEYBAT00             Called by: ML0000    *
.*                           Input Batch Number                             *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run Print Option                       *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
KEYBAT00  MOVE      ZERO,CQUEST             * ? flag - no
          MOVE      ONE,CCOL
          MOVE      FOUR,CVERT
.
          DISPLAY   *P1:3,*EF
KEYBAT10  KEYIN     *PCCOL:CVERT,*EL,"Batch No : ",*V2LON,*JR,BATCHNO
.
          PACK      BATCHNO,BATCHNO,SP8
          MATCH     SP8,BATCHNO
          GOTO      KEYBAT95 IF EQUAL
.
          UNPACK    BATCHNO,KEY7,KEY1
          MATCH     "       0",KEY1
          GOTO      KEYBAT95 IF EQUAL
.
          MATCH     QUEST,KEY1
          GOTO      KEYBAT40 IF NOT EQUAL
.
          BRANCH    CQUEST,KEYBAT10
          CALL      DBAT0000
          GOTO      KEYBAT10
.
KEYBAT40  PACK      KEY8,BATCHNO
          CALL      RDPTEBH1                     * Read Batch Header File
          BRANCH    OVRCD,KEYBAT50
          GOTO      KEYBAT90
.
KEYBAT50  PERFORM   CQUEST,GETSCR00         * Save the current screen
          DISPLAY   *P1:24,*EL,*B,"Batch number does not exist.  ";
          CALL      HITENTER
          PERFORM   CQUEST,PUTSCR00         * Restore the previous screen
          GOTO      KEYBAT10 
.
KEYBAT90  PERFORM   CQUEST,PUTSCR00         * Restore the previous screen
          DISPLAY   *P12:4,*EL,*V2LON,BATCHNO
          MOVE      ZERO,EXIT
          GOTO      KEYBAT99
.
KEYBAT95  BRANCH    CQUEST,KEYBAT00
          MOVE      ONE,EXIT
.
KEYBAT99  RETURN
.
.****************************************************************************
.*                                LOAD0000             Called by: ML0000    *
.*                              Load Details                                *
.****************************************************************************
LOAD0000  MOVE      "User Unknown",DISOPER 
          PACK      KEY4,PTEHOPER,SP4       * Key is Operator
          CALL      RDPASS1                 * Read Passcodes file
          BRANCH    OVRCD,LOAD1000
.
          MOVE      SECUSER,DISOPER
LOAD1000  MOVE      "Health Group Unknown",DISHGRP 
          PACK      KEY14,PTEHHFGP,ZERO8    * Key is Health Fund Group 
          CALL      RDFUND1                 * Read Health Fund Group File
          BRANCH    OVRCD,LOAD2000
.
          MOVE      HFNAME,DISHGRP          * Health Fund Group Description
LOAD2000  UNPACK    PTEHSTDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Format the date
          MOVE      CPCDATE,DSPSTDTE
          REP       " 0",DSPSTDTE
          UNPACK    PTEHEDDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Format the date
          MOVE      CPCDATE,DSPEDDTE
          REP       " 0",DSPEDDTE
          UNPACK    PTEHDTBC,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Format the date
          MOVE      CPCDATE,DSPBCDTE
          REP       " 0",DSPBCDTE
.
          MOVE      PTEHTMBC,DSPBCTME       * Move Time to a DIM 5 (HH:MM) 
          MOVE      DSPEETP0,DSPEETP
          LOAD      DSPEETP,PTEHEETP,DSPEETP1 * EDI extract type
.
LOAD9000  MOVE      ZERO,EXIT
LOAD9999  RETURN
.
.****************************************************************************
.*                                DISP0000             Called by: ML0000    *
.*                      Display Batch Header Details                        *
.****************************************************************************
DISP0000  DISPLAY   *P1:5,*EF,*P1:6,"Health Fund Group":
                    *P20:6,": ",PTEHHFGP,*P30:6,DISHGRP:
                    *P1:7,"Start Date",*P20:7,": ",DSPSTDTE:
                    *P1:8,"End Date",*P20:8,": ",DSPEDDTE:
                    *P1:9,"Batch Total",*P20:9,": ",PTEHBHTL:
                    *P1:10,"Total Records",*P20:10,": ",PTEHTRIB:
                    *P1:12,"Date Batch Created",*P20:12,": ",DSPBCDTE:
                    *P1:13,"Time Batch Created",*P20:13,": ",DSPBCTME:
                    *P1:14,"Operator",*P20:14,": ",PTEHOPER,*P30:14,SECUSER:
                    *P1:15,"Extract Type",*P20:15,": ",PTEHEETP,*P30:15,DSPEETP;
.
          KEYIN     *P1:23,"Display/Print Invoices":
                    *P1:24,"(",*V2LON,"A",*HOFF,")ll, (",*V2LON,"S":
                    *HOFF,")ent, Re(",*V2LON,"J",*HOFF,")ected, (",*V2LON,"R":
                    *HOFF,")esubmit, (",*V2LON,"E",*HOFF:
                    ")xcluded, Print (",*V2LON,"H",*HOFF,")eader, E(": 
                    *V2LON,"X",*HOFF,")it ? ",*V2LON,KEY1
.
          TYPE      KEY1
          GOTO      DISP9000 IF EQUAL       * Numeric value 
          REP       UPPLOW,KEY1
          REP       "H1A2S3J4R5E6X7",KEY1
          MOVE      ZERO,CCITEM
          MOVE      KEY1,CCITEM
          BRANCH    CCITEM,DISP9999,DISP2000,DISP3000:
                           DISP4000,DISP5000,DISP6000,DISP7000
.
DISP2000  MOVE      "-1",EDSTATUS           * Select All Invoices
          GOTO      DISP9500
.
DISP3000  MOVE      ONE,EDSTATUS            * EDI Status is Sent
          GOTO      DISP9500
.
DISP4000  MOVE      TWO,EDSTATUS            * EDI Status is Rejected Claim
          GOTO      DISP9500
.
DISP5000  MOVE      ZERO,EDSTATUS           * EDI Status is Resubmitted
          GOTO      DISP9500
.
DISP6000  MOVE      THREE,EDSTATUS          * EDI Status is Excluded
          GOTO      DISP9500
.
DISP7000  MOVE      THREE,CCITEM            * Exit
          GOTO      DISP9999
.
DISP9000  BEEP
          GOTO      DISP0000                * Only 3 keys available
.
DISP9500  MOVE      TWO,CCITEM              * Display Invoices
.
DISP9999  RETURN
.
.****************************************************************************
.*                                PRHEAD00             Called by: ML0000    *
.*                           Prints Batch Header                            *
.****************************************************************************
PRHEAD00  MOVE      ONE,CNOUNDLN            * End each page with underline
          CALL      IBACLOCK
          CALL      HEAD132                 * Print Header Subroutine
.
          PRINT     *N,*1,"Batch No : ",*12,BATCHNO
.
          PRINT     *N,*1,"Health Fund Group":
                    *N,*20,": ",PTEHHFGP,*30,DISHGRP:
                    *N,*1,"Start Date",*20,": ",DSPSTDTE:
                    *N,*1,"End Date",*20,": ",DSPEDDTE:
                    *N,*1,"Batch Total",*20,": ",PTEHBHTL:
                    *N,*1,"Total Records",*20,": ",PTEHTRIB:
                    *N,*N,*1,"Date Batch Created",*20,": ",DSPBCDTE:
                    *N,*1,"Time Batch Created",*20,": ",DSPBCTME:
                    *N,*1,"Operator",*20,": ",PTEHOPER,*30,SECUSER:
                    *N,*1,"Extract Type",*20,": ",PTEHEETP,*30,DSPEETP
.
PRHEAD99  RETURN
.
.******************************************************************************
.*                                  CLVR0000              Called by: ML0000   *
.*                         Clear Variables & Set Totals                       *
.******************************************************************************
CLVR0000  MOVE      ZERO,TMPNO              * Reset variables
          MOVE      ZERO,ITMNO
          MOVE      ZERO,SCRMAX
          MOVE      ZERO,TOTALITM
          MOVE      ZERO,TOTALINV
          MOVE      ZERO,TOTALOUT
          PACK      KEY16,BATCHNO,SP20
          CALL      RSPTEBI1                * Positional Read EDI Batch Invoice
CLVR5000  CALL      RKPTEBI1                * Sequential Read EDI Batch Invoice
          BRANCH    OVRCD,CLVR9000
          MATCH     BATCHNO,PTEIBTHN
          GOTO      CLVR9000 IF NOT EQUAL   * Batch Number is not found
.
          PACK      KEY8,PTEIINVN,SP8       * Key is Invoice Number
          CALL      RDINV1                  * Read Patient Invoice File
          BRANCH    OVRCD,CLVR5000          * Invoice is not found
.
          COMPARE   "-1",EDSTATUS
          GOTO      CLVR6000 IF EQUAL       * Display All Invoices
.
          COMPARE   EDSTATUS,PTINEDSF       * EDI Status is correct ?
          GOTO      CLVR5000 IF NOT EQUAL
.
CLVR6000  ADD       ONE,TMPNO
          MOVE      PTEIINVN,TMPINVN    * Set key for each screen
          CALL      WRIT0000
.
.         * Outstanding Amount
          ASSIGN    (PINVAMT+PINVPATA+PINVHFDA+PINVOTHA+PINVJOUR),OUTTOTAL
          ADD       OUTTOTAL,TOTALOUT       * Sum Total of Outstanding Amounts
          ADD       PINVAMT,TOTALINV        * Sum Total of all Invoices
          GOTO      CLVR5000
.
CLVR9000  MOVE      TMPNO,TOTALITM
          MOVE      ONE,SCRNO               * 1st screen exists
.
CLVR9999  RETURN
.
.******************************************************************************
.*                                  BACK0000              Called by: ML0000   *
.*                        Display The Background Screen                       *
.******************************************************************************
BACK0000  DISPLAY   *P45:4,*EF,*P24:4,"No. Invoices : ",*V2LON,TOTALITM,*HOFF:
                    *P51:4,"Total $ ",*V2LON,TOTALINV,TOTALOUT:
                    *P1:6,*V2LON,*ULON,"Item   ",*P7:6,"Inv No  ":
                    *P15:6,"Admin No   ",*P25:6,"Inv Date  ",*P35:6,"Status  ":
                    *P43:6,"Name                   ",*P60:6,"Inv Total    ":
                    *P70:6,"Outstanding",*HOFF  
BACK9000  MOVE      ZERO,EXIT
BACK9999  RETURN
.
.******************************************************************************
.*                                  DPSC000               Called by: ML0000   *
.*                               Display Screen           NEXT0000 & PREV0000 *
.******************************************************************************
DPSC0000  MOVE      SEVEN,CVERT             * Start row for records
          CALL      RDPTEBI1                * Read EDI Batch Invoice file
          WHILE     CVERT<24
            IF        ITMNO = 9999
              DISPLAY   *P1:CVERT,*EF:
                        *P1:24,"Cannot display more than ",ITMNO," records. ";
              CALL      HITENTER
              GOTO      DPSC9000
            ENDIF
            CALL      DPLN0000              * Display line
            CALL      RKPTEBI1              * Sequential Read EDI Batch Invoice
            BRANCH    OVRCD,DPSC9000
            MATCH     BATCHNO,PTEIBTHN
            GOTO      DPSC9000 IF NOT EQUAL * Batch number is not found
          DO
.
DPSC9000  DISPLAY   *P1:CVERT,*EF;
          MOVE      ZERO,EXIT
DPSC9999  RETURN
.
.******************************************************************************
.*                                  DPLN0000              Called by: DPSC0000 *
.*                                Display Line                                *
.******************************************************************************
DPLN0000  BRANCH    OVRCD,DPLN8000          * Invalid record, clear line
.
          CALL      RDINV000                * Read Invoice File Subroutine
          BRANCH    EXIT,DPLN9000
.
          COMPARE   "-1",EDSTATUS
          GOTO      DPLN4000 IF EQUAL       * Display All Invoices
.
          COMPARE   EDSTATUS,PTINEDSF       * EDI Status is correct ?
          GOTO      DPLN9000 IF NOT EQUAL
.
DPLN4000  ADD       ONE,ITMNO
          DISPLAY   *P1:CVERT,ITMNO,*P6:CVERT,PINVNO,*P15:CVERT,PINVADM:
                    *P24:CVERT,INVDATE,*P35:CVERT,DISEDIS,*P43:CVERT,FULLNAME:
                    *P59:CVERT,PINVAMT,*P70:CVERT,OUTTOTAL
          ADD       ONE,CVERT
          GOTO      DPLN9000
.
DPLN8000  DISPLAY   *P1:CVERT,*EL;
.
DPLN9000  MOVE      ZERO,EXIT
DPLN9999  RETURN
.
.******************************************************************************
.*                                  RDINV000              Called by: DPLN0000 *
.*                             Read Invoice File                              *
.******************************************************************************
RDINV000  PACK      KEY8,PTEIINVN,SP8       * Key is Invoice Number
          CALL      RDINV1                  * Read Patient Invoice File
          BRANCH    OVRCD,RDINV900
.
          UNPACK    PINVDTE,CCENT,CYEAR,CMON,CDAY     * Invoice Date
          CALL      PACDATE                 * Format the date
          MOVE      CPCDATE,INVDATE
          REP       " 0",INVDATE
.
          MOVE      SP20,FULLNAME
          PACK      KEY8,PINVUR
          CALL      RDMAST1                 * Read Patient Master File
          BRANCH    OVRCD,RDINV500
.
          MOVE      PTITL,PACTITLE
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      TWO,PACFRMT
          CALL      PACNAME                 * Pack Full Name
          MOVE      PACFNAME,FULLNAME       * Patients full name
          MOVE      PACFNAME,INVNAME        * Patients full name
.
RDINV500  MOVE      ZERO,OUTTOTAL
.         * Outstanding Amount
          ASSIGN    (PINVAMT+PINVPATA+PINVHFDA+PINVOTHA+PINVJOUR),OUTTOTAL
.
          CALL      EDIS0000                * EDI Status Subroutine
.
          GOTO      RDINV999
.
RDINV900  MOVE      ONE,EXIT
RDINV999  RETURN
.
.******************************************************************************
.*                                  QUES0000              Called by: ML0000   *
.*                                Main Question                               *
.******************************************************************************
QUES0000  MOVE      ZERO,CCITEM
          MOVE      ONE,NEXT                * Reset the next screen flag
          MOVE      ONE,PREVIOUS            * Reset the previous screen flag
          MOVE      ONE,PRINT               * Reset the print screen flag
.
          DISPLAY   *P1:24,*EL;             * Display Selection List
          MOVE      "1",CCOL
.
          IF        SCRNO<SCRMAX
            DISPLAY   *V2LON,"N",*HOFF,"ext, ";
            ADD       "6",CCOL
            MOVE      ZERO,NEXT             * Set the next screen flag
          ENDIF
.
          IF        SCRNO>1
            DISPLAY   "p",*V2LON,"R",*HOFF,"evious, ";
            ADD       "10",CCOL
            MOVE      ZERO,PREVIOUS         * Set the previous screen flag
          ENDIF
.
          IF        SCRNO>0
            DISPLAY   *V2LON,"P",*HOFF,"rint, ";
            ADD       "7",CCOL
            MOVE      ZERO,PRINT            * Set the print screen flag
          ENDIF
.
          DISPLAY   "e",*V2LON,"X",*HOFF,"it, ",*V2LON,"C",*HOFF,"ancel ? ";
          ADD       "15",CCOL
.
.ext, pRevious, Print, Cancel? 
.
QUES0500  MOVE      SP1,KEY1
          KEYIN     *PCCOL:24,*EL,*V2LON,KEY1;
.
QUES1000  TYPE      KEY1
          GOTO      QUES1500 IF EQUAL       * Numeric value
          REP       UPPLOW,KEY1
          REP       "N1R2P3C4X5",KEY1
          MOVE      ZERO,FORM1
          MOVE      KEY1,FORM1
          BRANCH    FORM1,QUES2000,QUES2500,QUES5000,QUES5500,QUES6000
.                         Next     pRevious  Print     Cancel  eXit
.
QUES1500  BEEP
          GOTO      QUES0500
.
QUES2000  BRANCH    NEXT,QUES1500
          MOVE      "1",CCITEM              * Next
          GOTO      QUES8000
.
QUES2500  BRANCH    PREVIOUS,QUES1500
          MOVE      "2",CCITEM              * Previous
          GOTO      QUES8000
.
QUES5000  BRANCH    PRINT,QUES1500
          MOVE      "0",CCITEM              * Print
          GOTO      QUES8000
.
QUES5500  MOVE      "-1",CCITEM             * Cancel
          GOTO      QUES8000
.
QUES6000  MOVE      "3",CCITEM              * Print
.
QUES8000  DISPLAY   *P1:24,*EL;
QUES9000  MOVE      ZERO,EXIT
QUES9999  RETURN
.
.******************************************************************************
.*                                  NEXT0000              Called by: ML0000   *
.*                                 Next Screen                                *
.******************************************************************************
NEXT0000  ADD       ONE,SCRNO
          ASSIGN    ((17*SCRNO)-17)+1,TMPNO  * Reset item no to next screen
          PACK      KEY4,TMPNO
          CALL      RDTEMP1
          PACK      KEY16,BATCHNO,TMPINVN,SP20
          CALL      DPSC0000                * Display screen
.
NEXT9000  MOVE      ZERO,EXIT
NEXT9999  RETURN
.
.******************************************************************************
.*                                  PREV0000              Called by: ML0000   *
.*                               Previous Screen                              *
.******************************************************************************
PREV0000  SUB       ONE,SCRNO
          ASSIGN    (17*SCRNO)-17,TMPNO     * Reset item no to previous screen
          MOVE      TMPNO,ITMNO
          PACK      KEY4,ITMNO
          IF        ITMNO = ZERO
            PACK      KEY4,SP3,ONE
          ENDIF
          CALL      RDTEMP1
          PACK      KEY16,BATCHNO,TMPINVN,SP20
          CALL      DPSC0000                * Display screen
.
PREV9000  MOVE      ZERO,EXIT
PREV9999  RETURN
.
.******************************************************************************
.*                                  PRINV000              Called by: ML0000   *
.*                              Print Invoices                                *
.******************************************************************************
PRINV000  CALL      HEAD0000                * Print Header
          MOVE      ZERO,ITMNO
          PACK      KEY16,BATCHNO,SP20 
          CALL      RSPTEBI1                * Positional Read EDI Batch Invoice
PRINV400  CALL      RKPTEBI1                * Sequential Read EDI Batch Invoice
          BRANCH    OVRCD,PRINV900
          MATCH     BATCHNO,PTEIBTHN
          GOTO      PRINV900 IF NOT EQUAL   * Batch number is not found
.
          CALL      RDINV000                * Read Invoice File Subroutine
          BRANCH    EXIT,PRINV900
.
          COMPARE   "-1",EDSTATUS           * Print All Invoices
          GOTO      PRINV600 IF EQUAL
.
          COMPARE   EDSTATUS,PTINEDSF       * EDI Status is correct ?
          GOTO      PRINV400 IF NOT EQUAL
.
PRINV600  ADD       ONE,ITMNO               * Increment Item No.
.
          MATCH     "NotSent",DISEDIS
          IF        @EQUAL
            MOVE      "Not Sent",DISEDIS    * Add space to EDI Status
          ENDIF
.
          PRINT     *1,"| ",ITMNO,*8,"| ",PINVNO,*20,"| ",PINVADM:
                    *32,"| ",INVDATE,*46,"| ",DISEDIS,*57,"| ",INVNAME:
                    *104,"|",PINVAMT,*118,"| ",OUTTOTAL," |"
          ADD       ONE,LINECNT
          COMPARE   "55",LINECNT            * Max no. of lines per page
          CALL      HEAD0000 IF NOT LESS    * Print Header for new page
.
          GOTO      PRINV400
.
PRINV900  PRINT     *1,"*---------------------------------------": 
                    "----------------------------------------------":
                    "---------------------------------------------*"
          DISPLAY   *P40:23,*EL,*V2LON:
                    "** Report Generation Completed **"
          PRINT     *N,"  ***  END OF REPORT  ***" 
.
          MOVE      ZERO,EXIT
PRINV999  RETURN
.
.****************************************************************************
.*                                HEAD0000             Called by: ML0000    *
.*               Print the Header for each page to the file.                *
.****************************************************************************
HEAD0000  MOVE      ZERO,CNOUNDLN           * End each page with underline
          CALL      IBACLOCK
          CALL      HEAD132                 * Print Header
          PRINT     *1,"Batch No : ",BATCHNO,*24,"No. Invoices : ",TOTALITM:
                    *98,"Total $ ",TOTALINV,SP3,TOTALOUT: 
                    *N,*N,*1,"*---------------------------------------":
                    "----------------------------------------------":
                    "---------------------------------------------*":
                    *N,*1,"| Itm  |",*12,"Inv No  |":
                    *22,"Admin No  |",*35,"Inv Date   |":
                    *48,"Status   |",*59,"Name":
                    *104,"|  Inv Total",*118,"| Outstanding |":
                    *N,*1,"*---------------------------------------":
                    "----------------------------------------------":
                    "---------------------------------------------*"
.
          MOVE      ZERO,LINECNT            * Reset Line Counter
.
HEAD9999  RETURN
.
.****************************************************************************
.*                                EDIS0000             Called by: RDINV000  *
.*                     Convert EDI Sent Flag to a string                    *
.****************************************************************************
EDIS0000  BRANCH    PTINEDSF,EDIS1000,EDIS2000,EDIS3000
.
          IF        PTINEDSF=0
            MOVE      "NotSent",DISEDIS
          ELSE
            MOVE      "Error !",DISEDIS
          ENDIF
          GOTO      EDIS9999
EDIS1000  MOVE      "Sent   ",DISEDIS
          GOTO      EDIS9999
EDIS2000  MOVE      "Reject ",DISEDIS
          GOTO      EDIS9999
EDIS3000  MOVE      "On Hold",DISEDIS
          GOTO      EDIS9999
.
EDIS9999  RETURN
.
.******************************************************************************
.*                                  WRIT0000              Called by: LOAD0000 *
.*                            Write To The Tempfile                           *
.******************************************************************************
WRIT0000  PACK      KEY4,TMPNO
          CALL      RATEMP1                 * Check read a tempfile record
          COMPARE   ONE,OVRCD
          GOTO      WRIT1000 IF NOT EQUAL   * Record already on file, error
.
          CALL      WRTEMP1                 * Write a tempfile record
.
          ASSIGN    TMPNO%17,FORM2          * The remainder from a division
          IF        FORM2=1
            ADD       ONE,SCRMAX            * Increment the maximum screen no
          ENDIF
          GOTO      WRIT9000
.
WRIT1000  DISPLAY   *P1:24,*EL,*B,"Error writing to the tempfile.  ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL,"Reseting the tempfile ...",*W2;
          GOTO      WRIT9500
.
WRIT9000  MOVE      ZERO,EXIT
          GOTO      WRIT9999
.
WRIT9500  MOVE      ONE,EXIT
WRIT9999  RETURN
.
.******************************************************************************
.*                                  OPEN0000               Called by: ML0000  *
.*                              Open The Tempfile                             *
.******************************************************************************
OPEN0000  CALL      KILL0000                * Delete the tempfile
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAME1,CMDLINE
          APPEND    FILELIN1,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * isbuild the temp file
          OPEN      TEMP1,FNAME1
.
OPEN9000  MOVE      ZERO,EXIT
OPEN9999  RETURN
.
.******************************************************************************
.*                                 KILL0000                 Called by: ML0000 *
.*                            Delete The Tempfile                             *
.******************************************************************************
KILL0000  CLOSE     TEMP1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAME1,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * iserase the temp file
.
KILL9000  MOVE      ZERO,EXIT
KILL9999  RETURN
+
.**************************************************************************
.*                               DBAT0000            Called by: KEYBAT00  *
.*                     Display valid batch no's                           *
.**************************************************************************
DBAT0000  CALL      GETSCR00                 * Save keyin screen
DBAT0500  MOVE      ZERO,NEXT
          MOVE      ONE,CQUEST
          MOVE      ONE,SCRNO
          PACK      KEY8,Z70
DBAT1000  CALL      LSDT0000                 * List batch numbers
DBAT2000  CALL      DQST0000                 * Display options
          BRANCH    FORM1,DBAT3000,DBAT0500
          BRANCH    EXIT,DBAT5000
.
DBAT3000  PACK      KEY8,PTEHBTHN
          ADD       ONE,SCRNO
          GOTO      DBAT1000
.
DBAT5000  MOVE      ONE,CCOL
          MOVE      TWENTY4,CVERT
.
DBAT9000  MOVE      ZERO,EXIT
DBAT9999  RETURN
+
.**************************************************************************
.*                               LSDT0000            Called by: DDTE0000  *
.*                         List valid batch no's                NXTD0000  *
.**************************************************************************
.
LSDT0000  DISPLAY    *P1:1,*EF
          CALL       DISPHEAD
          DISPLAY    *P30:4,*V2LON,*ULON,"Valid Batch Numbers"
          MOVE       ONE,CCOL
          MOVE       FIVE,CVERT
.
          CALL       RSPTEBH1                     * Read Batch Header File
LSDT1000  CALL       RPPTEBH1
          BRANCH     OVRCD,LSDT3000
.
LSDT0500  UNPACK     PTEHSTDT,CCENT,CYEAR,CMON,CDAY   * Set up and display
          CALL       PACDATE                          * period for batch no.
          MOVE       CPCDATE,DSPSTDTE
.
          UNPACK     PTEHEDDT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          MOVE       CPCDATE,DSPEDDTE
.
          DISPLAY    *PCCOL:CVERT,*V2LON,PTEHBTHN,SP1,*HOFF:
                     PTEHHFGP,SP1,DSPSTDTE," - ",DSPEDDTE
          COMPARE    CVERT,TWENTY3                * Bottom of screen?
          GOTO       LSDT2000 IF EQUAL
.
          ADD        ONE,CVERT                    * No, goto next line
          GOTO       LSDT1000
.
LSDT2000  COMPARE    FORTY1,CCOL                  * Second column?
          GOTO       LSDT3000 IF EQUAL            * Yes
.
          MOVE       FORTY1,CCOL                  * No, initialise for
          MOVE       FIVE,CVERT                   * second column
          GOTO       LSDT1000                     * and display
.
LSDT3000  MOVE       SCRNO,SCRMAX                 * Determine if this will
          PACK       KEY8,PTEHBTHN                * be the last screen
          CALL       RSPTEBH1
          CALL       RPPTEBH1                     * Is there another record?
          BRANCH     OVRCD,LSDT9000               * No, this is the last screen
          CALL       RKPTEBH1                     * Yes, reposition on last rec
LSDT4000  ADD        ONE,SCRMAX                   * At least one more screen
.
LSDT9000  MOVE       ZERO,EXIT
LSDT9999  RETURN
+
.**************************************************************************
.*                               DQST0000              Called by: ML0000  *
.*                        Display question line                           *
.**************************************************************************
.
DQST0000  MOVE      ZERO,FORM1
.
          DISPLAY   *P1:24,*EL;
          MOVE      "1",CCOL
.
          IF        SCRNO<SCRMAX
            DISPLAY   "(",*V2LON,ANSN,*HOFF,")ext, ";    * Next screen
            ADD       "8",CCOL
            MOVE      ZERO,NEXT
          ENDIF
.
          IF        SCRNO>1
            DISPLAY   "(",*V2LON,ANSF,*HOFF,")irst, ";   * First screen
            ADD       "10",CCOL
          ENDIF
.
          DISPLAY     "e(",*V2LON,"X",*HOFF,")it: ";     * eXit
          ADD         "8",CCOL
.
DQST0500  MOVE      SP1,KEY1
          KEYIN     *PCCOL:24,*EL,*V2LON,*JR,KEY1;
.
          ENDSET    KEY1
          APPEND    SP1,KEY1
          RESET     KEY1
.
          TYPE      KEY1       * Numeric value
          GOTO      DQST4000 IF EQUAL
.
          REP       UPPLOW,KEY1
          REP       "N1F2X3",KEY1
          MOVE      ZERO,FORM1
          MOVE      KEY1,FORM1
          BRANCH    FORM1,DQST5000,DQST6000,DQST9500
.                         Next     First    Exit
DQST4000  BEEP
          GOTO      DQST0500
.
DQST5000  BRANCH    NEXT,DQST4000
          MOVE      ONE,NEXT
          GOTO      DQST9000
.
DQST6000  MOVE      ZERO,NEXT
          MOVE      ONE,SCRNO
.
DQST9000  MOVE      ZERO,EXIT
          GOTO      DQST9999
.
DQST9500  MOVE      ONE,EXIT
DQST9999  RETURN
+
.******************************************************************************
.*                        I/O Routines For The Tempfile                       *
.******************************************************************************
RSTEMP1   RESET     KEY4
          READ      TEMP1,KEY4;;
          RETURN
.
RATEMP1   MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      TEMP1,KEY4;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      TEMP1,KEY4;DTMPNO,TMPINVN
          GOTO      OVERCOND IF OVER
          MOVE      DTMPNO,TMPNO
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    TEMP1;DTMPNO,TMPINVN
          GOTO      OVERCOND IF OVER
          MOVE      DTMPNO,TMPNO
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    TEMP1;DTMPNO,TMPINVN
          GOTO      OVERCOND IF OVER
          MOVE      DTMPNO,TMPNO
          RETURN
.
UPTEMP1   MOVE      TMPNO,DTMPNO
          UPDATE    TEMP1;DTMPNO,TMPINVN
          RETURN
.
WRTEMP1   RESET     KEY4
          MOVE      TMPNO,DTMPNO
          WRITE     TEMP1,KEY4;DTMPNO,TMPINVN
          RETURN
.
DETEMP1   RESET     KEY4
          DELETE    TEMP1,KEY4
          RETURN
.
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBAPASIO/INC
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PATEDAIO/INC
          INC       PATEBHIO/INC
          INC       PATEBIIO/INC
          INC       PATFN1IO/INC
          INC       PATINVIO/INC
          INC       PATMA1IO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
