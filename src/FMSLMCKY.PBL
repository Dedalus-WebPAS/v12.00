.---------------------------------------------------------------------------
.   System    :   Financial Management System
.   Include   :   FMSLEVKY
.   Routine   :   HFMLCA00 Financial Year
.   Requires  :   FMSLMAA1 to be read
.   Return    :
.-------------------------------------------------------------------------------
KLMCFM00
          MOVE      ZERO,CKEYTYP
          PACK      FMLCLEDG,FMLALEDG,SP70
          CALL      KFMLCA00
          RETURN
.
ALMCFM00
          MOVE      TWO,CKEYTYP
          PACK      FMLCLEDG,FMLALEDG,SP70
          CALL      KFMLCA00
          RETURN
.
.-------------------------------------------------------------------------------
.   System    :   Supply and Inventory
.   Include   :   FMSLMCKY
.   Routine   :   KFMLCA00 Keyin Financial Year
.   Parameter :   CKEYTYP 0 = Keyin , 1 = Accept, 2 = Either
.   Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.-------------------------------------------------------------------------------
KFMLCA00 TOPIC     "FMLCYEAR"
          MOVE      UNDLN70,FMLCYEAR
          KEYIN     *PCCOL:CVERT,*DV,FMLCYEAR:
                    *PCCOL:CVERT,*V2LON,*RV,*JR,FMLCYEAR;
.
          ENDSET    FMLCYEAR
          APPEND    SP70,FMLCYEAR
          RESET     FMLCYEAR
.
          MATCH     UNDLN30,FMLCYEAR
          GOTO      KFMLCA90 IF EQUAL
.
          MATCH     SP70,FMLCYEAR
          GOTO      KFMLCA90 IF EQUAL
.
          ENDSET    FMLCYEAR
          CMATCH    EXITCHAR,FMLCYEAR
          GOTO      KFMLCA95 IF EQUAL
.
          CMATCH    QUEST,FMLCYEAR
          GOTO      KFMLCA10 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMLCA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    FMLCYEAR
          APPEND    SP70,FMLCYEAR
          RESET     FMLCYEAR
.
          MATCH     SP70,FMLCYEAR
          GOTO      KFMLCA00 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLCYEAR
KFMLCA10
          RESET     FMLCYEAR
.
          MOVE      SEQ,FMLCF4
          MOVE      FMLCYEAR,FMLCF4
          IF        FMLCF4<0
            BEEP
            CLEAR     DISPMSG
            APPEND    "Year Must Be Numeric - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      KFMLCA00
          ENDIF
          IF        100>FMLCF4
            MOVE      FMLCYEAR,F2
            PACK      FMLCYEAR,CCC,F2,SP70
            REP       " 0",FMLCYEAR
          ENDIF
.
          PACK      KEY6,FMLCLEDG,FMLCYEAR
          CALL      RAFMLC1
          BRANCH    OVRCD,KFMLCA80
          BRANCH    CKEYTYP,KFMLCA75
          CALL      RDFMLC1
KFMLCA70
          MOVE      ZERO,EXIT
          GOTO      KFMLCA99
KFMLCA75
          MOVE      "Financial Year Already Exists - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMLCA00
KFMLCA80
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KFMLCA99,KFMLCA99
          MOVE      "Financial Year Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMLCA00
KFMLCA90
          MOVE      SP70,FMLCYEAR
          MOVE      ONE,EXIT
          GOTO      KFMLCA99
KFMLCA95
          MOVE      TWO,EXIT
KFMLCA99 TOPIC    PRGID
          RETURN
.
.---------------------------------------------------------------------------
.   System    :   Supply and Inventory
.   Include   :   FMSLMCKY
.   Routine   :   HFMLCA00 Financial Year
.   Return    :   FMLCLEDG
.-------------------------------------------------------------------------------
HFMLCA00
          MOVE      ZERO,CSCRSIZ
          IF        HTOP<3
            MOVE      "10",HTOP
            MOVE      "24",HBOT
            MOVE      "40",HLEF
            MOVE      "80",HRIG
          ENDIF
HFMLCA04
          CALL      GSCRN000
          BRANCH    EXIT,HFMLCA99
          MOVE      STDCOL00,STDCOL01
          ADD       " 5",STDCOL01
          DISPLAY   *PSTDCOL01:STDROW,*V2LON,*ULON,"Financial Year"
.
          MOVE      STDCOL01,STDCOL02
          ADD       "16",STDCOL02
          DISPLAY   *PSTDCOL02:STDROW,*V2LON,*ULON,"Ending"
.
          MOVE      STDCOL02,STDCOL03
          ADD       "40",STDCOL03
HFMLCA08
          MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
          MOVE      SP70,FMLCYEAR
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          PACK      SAVKEY80,FMLCLEDG,FMLCYEAR,SP70
          SETLPTR   SAVKEY80,2
          CALL      RSFMLC1
HFMLCA10
          CALL      RKFMLC1
          BRANCH    OVRCD,HFMLCA15
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          MATCH     SAVKEY80,KEY6
          GOTO      HFMLCA15 IF NOT EQUAL
          BRANCH    CSEARCH,HFMLCA12
          CALL      HFMLCA60
          BRANCH    OVRCD,HFMLCA10
HFMLCA12
          ADD       ONE,XITEMNO
          ADD       ONE,STDROW
          STORE     KEY6,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          DISPLAY   *PSTDCOL00:STDROW,SP1,*V2LON,XITEMNO,DOT
          DISPLAY   *PSTDCOL01:STDROW,FMLCYEAR
.
          IF        FMLAPERS=1
            UNPACK    FMLC13TO,CCENT,CYEAR,CMON,CDAY
            MOVE      FMLC13DE,KEY25
          ELSE
            UNPACK    FMLC12TO,CCENT,CYEAR,CMON,CDAY
            MOVE      FMLC12DE,KEY25
          ENDIF
          STRIP     KEY25
          CALL      PACDATE
          DISPLAY   *PSTDCOL02:STDROW,*+,KEY25,SP2,CPCDATE
.
          COMPARE   MAXITEM,XITEMNO
          GOTO      HFMLCA10 IF NOT EQUAL
HFMLCA15
          UNPACK    SAVKEY80,FMLCLEDG,FMLCYEAR
          MOVE      ONE,DITEM
          MOVE      MINITEM,DROW
          ADD       ONE,DROW
          DISPLAY   *PSTDCOL00:DROW,*V2LON,*HON,SP1,DITEM,DOT
          CLIP
          FLUSH     HLEF,HTOP,HRIG,HBOT
.
HFMLCA20
          CALL      HSCRI000
          BRANCH    EXIT,HFMLCA30,HFMLCA35,HFMLCA40,HFMLCA45,HFMLCA04:
                              HFMLCA91,HFMLCA50
          GOTO      HFMLCA92
HFMLCA30
          CALL      RKFMLC1
          BRANCH    OVRCD,HFMLCA85
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          MATCH     SAVKEY80,KEY6
          GOTO      HFMLCA85 IF NOT EQUAL
          CALL      RPFMLC1
          MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HFMLCA10
HFMLCA35
          MOVE      ST1,KEY6
          CALL      RDFMLC1
          CALL      RPFMLC1
          BRANCH    OVRCD,HFMLCA85
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          MATCH     SAVKEY80,KEY6
          GOTO      HFMLCA85 IF NOT EQUAL
          MATCH     SP70,FMLCYEAR
          GOTO      HFMLCA85 IF EQUAL
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,XITEMNO
HFMLCA36
          CALL      RPFMLC1
          BRANCH    OVRCD,HFMLCA37
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          MATCH     SAVKEY80,KEY6
          GOTO      HFMLCA37 IF NOT EQUAL
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      HFMLCA36 IF NOT EQUAL
HFMLCA37
          MOVE      ZERO,XITEMNO
          GOTO      HFMLCA10
HFMLCA40
          MOVE      ST1,KEY6
          CALL      RDFMLC1
          CALL      RPFMLC1
          BRANCH    OVRCD,HFMLCA85
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          MATCH     SAVKEY80,KEY6
          GOTO      HFMLCA85 IF NOT EQUAL
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HFMLCA08
HFMLCA45
          CALL      RKFMLC1
          BRANCH    OVRCD,HFMLCA85
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          MATCH     SAVKEY80,KEY6
          GOTO      HFMLCA85 IF NOT EQUAL
          SUSPEND
          CLIP      1,1,CRIG,24
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      ZERO,XITEMNO
          PACK      KEY6,SAVKEY80,Z70
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,XITEMNO
          CALL      RSFMLC1
HFMLCA46
          CALL      RPFMLC1
          BRANCH    OVRCD,HFMLCA47
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          MATCH     SAVKEY80,KEY6
          GOTO      HFMLCA47 IF NOT EQUAL
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      HFMLCA46 IF NOT EQUAL
HFMLCA47
          MOVE      ZERO,XITEMNO
          GOTO      HFMLCA10
HFMLCA50  COMPARE   ZERO,CSEARCH
          GOTO      HFMLCA55 IF EQUAL
          MOVE      ZERO,CSEARCH
          MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
          ADD       ONE,STDROW
          UNPACK    SP70,SCHFLD01,SCHFLD02,SCHFLD03,SCHFLD04,SCHFLD05
          UNPACK    SP70,SCHFLD06,SCHFLD07,SCHFLD08,SCHFLD09,SCHFLD10
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          DISPLAY   *PSTDCOL00:STDROW,*V2LON,*HON,"Sch"
          KEYIN     *PSTDCOL01:STDROW,*V2LON,SCHFLD01
          RESET     SCHFLD01
          PACK      KEY8,SP70
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HFMLCA08
HFMLCA55  MOVE      ONE,CSEARCH
          PACK      KEY8,SP70
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HFMLCA08
HFMLCA60  MOVE      ZERO,OVRCD
          MATCH     SP70,SCHFLD01
          GOTO      HFMLCA61 IF EQUAL
          MATCH     SCHFLD01,FMLCYEAR
          GOTO      HFMLCA72 IF NOT EQUAL
HFMLCA61
HFMLCA62
HFMLCA63
HFMLCA64
HFMLCA65
HFMLCA66
HFMLCA67
HFMLCA68
HFMLCA69
HFMLCA70
          GOTO      HFMLCA75
HFMLCA72  MOVE      ONE,OVRCD
HFMLCA75  RETURN
HFMLCA85
          LOAD      KEY6,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY6,FMLCLEDG,FMLCYEAR
          CALL      RDFMLC1
HFMLCA90
          UNPACK    SAVKEY80,FMLCLEDG,FMLCYEAR
          BEEP
          GOTO      HFMLCA20
HFMLCA91
          MOVE      SP70,FMLC01FR
          MOVE      SP70,FMLC01TO
          MOVE      SP70,FMLC01DE
          MOVE      ZERO,FMLC01IN
          MOVE      SP70,FMLC02FR
          MOVE      SP70,FMLC02TO
          MOVE      SP70,FMLC02DE
          MOVE      ZERO,FMLC02IN
          MOVE      SP70,FMLC03FR
          MOVE      SP70,FMLC03TO
          MOVE      SP70,FMLC03DE
          MOVE      ZERO,FMLC03IN
          MOVE      SP70,FMLC04FR
          MOVE      SP70,FMLC04TO
          MOVE      SP70,FMLC04DE
          MOVE      ZERO,FMLC04IN
          MOVE      SP70,FMLC05FR
          MOVE      SP70,FMLC05TO
          MOVE      SP70,FMLC05DE
          MOVE      ZERO,FMLC05IN
          MOVE      SP70,FMLC06FR
          MOVE      SP70,FMLC06TO
          MOVE      SP70,FMLC06DE
          MOVE      ZERO,FMLC06IN
          MOVE      SP70,FMLC07FR
          MOVE      SP70,FMLC07TO
          MOVE      SP70,FMLC07DE
          MOVE      ZERO,FMLC07IN
          MOVE      SP70,FMLC08FR
          MOVE      SP70,FMLC08TO
          MOVE      SP70,FMLC08DE
          MOVE      ZERO,FMLC08IN
          MOVE      SP70,FMLC09FR
          MOVE      SP70,FMLC09TO
          MOVE      SP70,FMLC09DE
          MOVE      ZERO,FMLC09IN
          MOVE      SP70,FMLC10FR
          MOVE      SP70,FMLC10TO
          MOVE      SP70,FMLC10DE
          MOVE      ZERO,FMLC10IN
          MOVE      SP70,FMLC11FR
          MOVE      SP70,FMLC11TO
          MOVE      SP70,FMLC11DE
          MOVE      ZERO,FMLC11IN
          MOVE      SP70,FMLC12FR
          MOVE      SP70,FMLC12TO
          MOVE      SP70,FMLC12DE
          MOVE      ZERO,FMLC12IN
          MOVE      SP70,FMLC13FR
          MOVE      SP70,FMLC13TO
          MOVE      SP70,FMLC13DE
          MOVE      ZERO,FMLC13IN
          MOVE      ZERO,FMLCYLC 
          MOVE      SP70,FMLCBUDG
          MOVE      SP70,FMLCCBUD
          MOVE      SP70,FMLCSPAR
          MOVE      SP70,KEY6 
          MOVE      SP70,FMLCYEAR
          GOTO      HFMLCA96
HFMLCA92
          MOVE      SP70,KEY6
          MOVE      SP70,FMLCYEAR
          LOAD      KEY6,CCITEM,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY6,FMLCLEDG,FMLCYEAR
HFMLCA96
          PUTSCR    CSSCRNUM,HLEF,HTOP,HRIG,HBOT
          CALL      FRESCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
HFMLCA99
          RETURN
.
.
.----------------------------------------------------------------------
. Get Control Account Details for a particular Ledger Account Code
. Input  : Valid Ledger Account Record from FMSAMAFD
.
. Output : Control Accounts for that Account           Name of Account
.          FMCSBNK    Bank Control                        BANKNAME
.          FMCSCRD    Creditors Control                   CREDNAME
.          FMCSDIS    Discount Control                    DISCNAME
.          FMCSDEB    Debtors Control                     DEBTNAME
.          FMCSPAY    Payments in Suspense Control        PAYMNAME
.          FMCSAGST   Accrual GST Control                 AGSTNAME
.          FMCSCGST   Cash GST Control                    CGSTNAME
.
.----------------------------------------------------------------------
RFMCON00  MOVE      FMLABNK,FMCSBNK
          MOVE      FMLACRD,FMCSCRD
          MOVE      FMLADIS,FMCSDIS
          MOVE      FMLADEB,FMCSDEB
          MOVE      FMLAPAY,FMCSPAY
          MOVE      FMLAAGST,FMCSAGST
          PACK      KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMCS1
.
          MATCH     SP70,FMCSBNK
          IF        @EQUAL
            MOVE      FMLABNK,FMCSBNK
          ENDIF
.
          MATCH     SP70,FMCSCRD
          IF        @EQUAL
            MOVE      FMLACRD,FMCSCRD
          ENDIF
.
          MATCH     SP70,FMCSDIS
          IF        @EQUAL
            MOVE      FMLADIS,FMCSDIS
          ENDIF
.
          MATCH     SP70,FMCSDEB
          IF        @EQUAL
            MOVE      FMLADEB,FMCSDEB
          ENDIF
.
          MATCH     SP70,FMCSPAY
          IF        @EQUAL
            MOVE      FMLADEB,FMCSPAY
          ENDIF
.
          MATCH     SP70,FMCSAGST
          IF        @EQUAL
            MOVE      FMLAAGST,FMCSAGST
          ENDIF
.
          MOVE      SP70,BANKNAME
          MOVE      SP70,CREDNAME
          MOVE      SP70,DISCNAME
          MOVE      SP70,PAYMNAME
          MOVE      SP70,DEBTNAME
          MOVE      SP70,AGSTNAME
          MOVE      SP70,CGSTNAME
          PACK      KEY20,FMAMLEDG,FMAMACCT  * Save Key
.
          PACK      KEY14,FMAMLEDG,FMCSBNK
          CALL      RDFMAM1
          IF        OVRCD=0
            MOVE      FMAMDESC,BANKNAME
          ENDIF
.
          PACK      KEY14,FMAMLEDG,FMCSCRD
          CALL      RDFMAM1
          IF        OVRCD=0
            MOVE      FMAMDESC,CREDNAME
          ENDIF
.
          PACK      KEY14,FMAMLEDG,FMCSAGST
          CALL      RDFMAM1
          IF        OVRCD=0
            MOVE      FMAMDESC,AGSTNAME
          ENDIF
.
          PACK      KEY14,FMAMLEDG,FMCSCGST
          CALL      RDFMAM1
          IF        OVRCD=0
            MOVE      FMAMDESC,CGSTNAME
          ENDIF
.
          PACK      KEY14,FMAMLEDG,FMCSPAY 
          CALL      RDFMAM1
          IF        OVRCD=0
            MOVE      FMAMDESC,PAYMNAME
          ENDIF
.
          PACK      KEY14,FMAMLEDG,FMCSDIS
          CALL      RDFMAM1
          IF        OVRCD=0
            MOVE      FMAMDESC,DISCNAME
          ENDIF
.
          PACK      KEY14,FMAMLEDG,FMCSDEB
          CALL      RDFMAM1
          IF        OVRCD=0
            MOVE      FMAMDESC,DEBTNAME
          ENDIF
.
          PACK      KEY14,KEY20
          CALL      RDFMAM1
.
          RETURN
.
.----------------------------------------------------------------------
. Get Control Account Details for a particular Ledger Account Code
. Input  : Valid Ledger Account Record from FMSAMAFD
.
. Output : Control Accounts for that Account 
.          FMCSBNK    Bank Control          
.          FMCSCRD    Creditors Control    
.          FMCSDIS    Discount Control    
.          FMCSDEB    Debtors Control    
.          FMCSPAY    Payments in Suspense Control 
.          FMCSAGST   Accrual GST Control          
.          FMCSCGST   Cash GST Control            
.
.----------------------------------------------------------------------
RFMCOT00  MOVE      FMLABNK,FMCSBNK
          MOVE      FMLACRD,FMCSCRD
          MOVE      FMLADIS,FMCSDIS
          MOVE      FMLADEB,FMCSDEB
          MOVE      FMLAPAY,FMCSPAY
          MOVE      FMLAAGST,FMCSAGST
          PACK      KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMCS1
.
          MATCH     SP70,FMCSBNK
          IF        @EQUAL
            MOVE      FMLABNK,FMCSBNK
          ENDIF
.
          MATCH     SP70,FMCSCRD
          IF        @EQUAL
            MOVE      FMLACRD,FMCSCRD
          ENDIF
.
          MATCH     SP70,FMCSDIS
          IF        @EQUAL
            MOVE      FMLADIS,FMCSDIS
          ENDIF
.
          MATCH     SP70,FMCSDEB
          IF        @EQUAL
            MOVE      FMLADEB,FMCSDEB
          ENDIF
.
          MATCH     SP70,FMCSPAY
          IF        @EQUAL
            MOVE      FMLADEB,FMCSPAY
          ENDIF
.
          MATCH     SP70,FMCSAGST
          IF        @EQUAL
            MOVE      FMLAAGST,FMCSAGST
          ENDIF
          RETURN
.*************************************************************************
.* CFYR     - Calculate Financial Year from a Date and Ledger            *
.*                                                                       *
.* Input    - WORKDATE - Date to find format CCYYMMDD         DIM  8     *
.*            FMLALEDG - Ledger FMLA Record should have been read        *
.*            FMSLMCA1 - Must be open                                    *
.*                                                                       *
.* Output   - CURYEAR  - Current financial year for ledger    DIM  4     *
.*            PERDESC  - Period description                   DIM  15    *
.*            PEREDAT  - Period End date                      DIM  8     *
.*            PERSDAT  - Period Start date                    DIM  8     *
.*            PERLOCK  - Period Lock 0 - No                   FORM 1     *
.*            PERCNT   - Period                               FORM 2     *
.*            ERRMSG   - Message                              DIM  40    *
.*            EXIT     - 0 - period found                                *
.*                       1 - Error                                       *
.*                                                                       *
.* Other Variable Required - MAXPER  FORM   2                            *
.*                                                                       *
.*************************************************************************
CFYR0000  REP       " 0",WORKDATE
          UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
          PACK      KEY6,FMLALEDG,CCENT,CYEAR
.
          CALL      RDFMLC1
          BRANCH    OVRCD,CFYR4000
.
CFYR1000  MATCH     FMLC01FR,WORKDATE      * is it before start year
          GOTO      CFYR2000 IF LESS       * Goto Previous Year
.
          BRANCH    FMLAPERS,CFYR1100      * how many periods?
.
          MATCH     WORKDATE,FMLC12TO      * is it after end of Year
          GOTO      CFYR3000 IF LESS       * Goto Next Year
          GOTO      CFYR5000               * 
.
CFYR1100  MATCH     WORKDATE,FMLC13TO      * is it after end of year
          GOTO      CFYR3000 IF LESS       * Goto Next Year
          GOTO      CFYR5000               * 
         
CFYR2000  CALL      RPFMLC1                * Previous Financial Year
          BRANCH    OVRCD,CFYR9200         * Period Not Found in Calendar File
          MATCH     FMLCLEDG,FMLALEDG
          GOTO      CFYR9200 IF NOT EQUAL
          GOTO      CFYR1000
.
CFYR3000  CALL      RKFMLC1                * Next Financial Year
          BRANCH    OVRCD,CFYR9200         * Period Not Found in Calendar File
          MATCH     FMLCLEDG,FMLALEDG
          GOTO      CFYR9200 IF NOT EQUAL
          GOTO      CFYR1000
.
CFYR4000  PACK      KEY6,FMLALEDG,SP4      * First Financial Year.
          CALL      RSFMLC1
          CALL      RKFMLC1
          BRANCH    OVRCD,CFYR9100         * No records found for Ledger.
          MATCH     FMLCLEDG,FMLALEDG
          GOTO      CFYR9100 IF NOT EQUAL
          GOTO      CFYR1000
.
CFYR5000  MOVE      FMLCYEAR,CURYEAR       * Year Determined.
          MOVE      ZERO,PERCNT
          MOVE      "12",MAXPER
          ADD       FMLAPERS,MAXPER
CFYR5100  COMPARE   PERCNT,MAXPER
          GOTO      CFYR9300 IF EQUAL      * Financial Calendar Incorrectly Set.
.      
          ADD       ONE,PERCNT
          LOAD      PEREDAT,PERCNT,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO,FMLC05TO:
                                  FMLC06TO,FMLC07TO,FMLC08TO,FMLC09TO,FMLC10TO:
                                  FMLC11TO,FMLC12TO,FMLC13TO
.
          MATCH     WORKDATE,PEREDAT
          GOTO      CFYR5200 IF NOT LESS
          GOTO      CFYR5100 
.
CFYR5200  LOAD      PERSDAT,PERCNT,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR,FMLC05FR:
                                  FMLC06FR,FMLC07FR,FMLC08FR,FMLC09FR,FMLC10FR:
                                  FMLC11FR,FMLC12FR,FMLC13FR
.
          LOAD      PERDESC,PERCNT,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE,FMLC05DE:
                                  FMLC06DE,FMLC07DE,FMLC08DE,FMLC09DE,FMLC10DE:
                                  FMLC11DE,FMLC12DE,FMLC13DE
.
          LOAD      PERLOCK,PERCNT,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN,FMLC05IN:
                                  FMLC06IN,FMLC07IN,FMLC08IN,FMLC09IN,FMLC10IN:
                                  FMLC11IN,FMLC12IN,FMLC13IN
.
          MOVE      ZERO,EXIT
          GOTO      CFYR9999 
.**********************************************************************
.         Error Messages
.**********************************************************************
CFYR9100  MOVE      "No Calendar Records Found For Ledger -  ",ERRMSG
          MOVE      ONE,EXIT
          GOTO      CFYR9999 
.
CFYR9200  MOVE      "Period Not Found in Calendar File -     ",ERRMSG
          MOVE      ONE,EXIT
          GOTO      CFYR9999 
.
CFYR9300  MOVE      "Financial Calendar Incorrectly Set -    ",ERRMSG
          MOVE      ONE,EXIT
          GOTO      CFYR9999 
.
CFYR9999  RETURN
.
