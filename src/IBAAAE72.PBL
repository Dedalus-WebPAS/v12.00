.******************************************************************************
.* System         : Accident and Emergency                                    *
.* Program        : IBAAAE72.PBL                                              *
.* Name           : Analysis of Hourly Attendance Rate                        *
.******************************************************************************
.* Date           : 09/09/1993                                                *
.* Author         : Justin 'The Pom' Coates                                   *
.* Function       : To show the number of attendance in each hour             *
.* Modifications  :                                                           *
.*                                                                            *
.*       V10.04.01  Ania P                         CAR 261630                 *
.*                  Remove the use of PORT for temp file names                *
.*        V5.01.02  30/09/94  Paul Howells         SRF441127                  *
.*                  Fix total columns.                                        *
.*        V5.03.B0  16/05/1995  Paul Howells       SRF 134950                 *
.*                  Changed Priority Code to a hospital controlled code       *
.******************************************************************************
.
          INC       STD001FD
          INC       AAEDE1FD/INC
          INC       PATCODFD/INC
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.         temp file
.
TEMPA     IFILE     SQL, FIXED=33, KEY="U1-1"
KEYA      INIT      " 33 U1-1"
.Name     Type      Length  Phys.  Start  Description
.-------  -----     ------  -----  -----  ----------------------------------
XRNGE     DIM       1          1       1  Range value (Z=total)
DXNEW1    DIM       5          5       2  new attendance - priority 1
DXNEW2    DIM       5          5       7  new attendance - priority 2
DXNEW3    DIM       5          5      12  new attendance - priority 3
DXNEW4    DIM       5          5      17  new attendance - priority 4
DXNEW5    DIM       5          5      22  new attendance - priority 4
DXRAT     DIM       6          6      27  re-attendance
.End of Record                        33
XNEW1     FORM      5
XNEW2     FORM      5
XNEW3     FORM      5
XNEW4     FORM      5
XNEW5     FORM      5
XRAT      FORM      6
.
.         program variables
.
ATTYPE    FORM      1         * attendance type 1=new, 0=follow up
CDFRDATE  DIM       8
CDTODATE  DIM       8
CFNAMEA   DIM       8
CMDLINE   DIM       80
FORM5     FORM      4
LINETL    FORM      6         * line total
NEWTL     FORM      6         * total for new
PRFRDATE  DIM       10
PRTODATE  DIM       10
TIMEDESC  DIM       13        * time desc
TIMERNG   DIM       1         * time range
TODAY     DIM       8
TOVRCD    FORM      1
.
.         program constants
.
CATEP     INIT      "EP"
PRFIXA    INIT      "AAE72A"
ISBUILD   INIT      "isbuild "
ISERASE   INIT      "iserase "
TRNG1     INIT      "00:00 - 00:59"
TRNG2     INIT      "01:00 - 01:59"
TRNG3     INIT      "02:00 - 02:59"
TRNG4     INIT      "03:00 - 03:59"
TRNG5     INIT      "04:00 - 04:59"
TRNG6     INIT      "05:00 - 05:59"
TRNG7     INIT      "06:00 - 06:59"
TRNG8     INIT      "07:00 - 07:59"
TRNG9     INIT      "08:00 - 08:59"
TRNG10    INIT      "09:00 - 09:59"
TRNG11    INIT      "10:00 - 10:59"
TRNG12    INIT      "11:00 - 11:59"
TRNG13    INIT      "12:00 - 12:59"
TRNG14    INIT      "13:00 - 13:59"
TRNG15    INIT      "14:00 - 14:59"
TRNG16    INIT      "15:00 - 15:59"
TRNG17    INIT      "16:00 - 16:59"
TRNG18    INIT      "17:00 - 17:59"
TRNG19    INIT      "18:00 - 18:59"
TRNG20    INIT      "19:00 - 19:59"
TRNG21    INIT      "20:00 - 20:59"
TRNG22    INIT      "21:00 - 21:59"
TRNG23    INIT      "22:00 - 22:59"
TRNG24    INIT      "23:00 - 23:59"
.
PRGID     INIT      "IBAAAE72"
PRGNAM    INIT      "Analysis of Hourly Attendance Rate"
VERSION   INIT      "V12.00.00"
.
.*********************************************************************
.         mainline code
.*********************************************************************
ML0000    CALL      INIT0000
.
ML1000    CALL      OPTN0000                * run report ??
          BRANCH    EXIT,ML9995             * exit
.
          CALL      KDAT0000                * enter date range
          BRANCH    EXIT,ML1000             * nothing entered
.
          CALL      GDAT0000                * get the data
          CALL      REPT0000                * produce report
          GOTO      ML1000
.
ML9995    CALL      DTPA0000
ML9999    CHAIN     PGM
+
.*********************************************************************
.         initilisation
.*********************************************************************
INIT0000  CALL      DISPHEAD
          DISPLAY   *P58:24,"aaede1af"
          OPEN      AAEDE1A3,"aaede1af"
          DISPLAY   *P58:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
.
          CALL      TFILENAM
          PACK      CFNAMEA,TFILNAME,SP70
.
INIT9999  RETURN
+
.*********************************************************************
.         run the option ??
.*********************************************************************
OPTN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Run report":
                    *P1:7,"Select option : ";
OPTN1000  KEYIN     *P17:7,*V2LON,MOPTION
          MOVE      ONE,EXIT
          COMPARE   ZERO,MOPTION
          GOTO      OPTN9999 IF EQUAL
          MOVE      ZERO,EXIT
          BRANCH    MOPTION,OPTN9999
          BEEP
          GOTO      OPTN1000
OPTN9999  RETURN
+
.*********************************************************************
.*        Enter the date ranges                                      *
.*        Returns : EXIT = 1      exit chosen                        * 
.*                  CDFRDATE      starting date  ccyymmdd            *
.*                  CDTODATE      ending date    ccyymmdd            *
.*                  PRFRDATE      starting date  dd/mm/ccyy          *
.*                  PRTODATE      ending date    dd/mm/ccyy          *
.*********************************************************************
KDAT0000  DISPLAY   *P1:12,"From date : ",*EL:
                    *P1:14,"To   date : ",*EL;
          MOVE      ONE,CCANLDTE            * blank cancel default
          MOVE      ONE,CDEFDTE             * enter once for default
          MOVE      ZERO,CHIGHLT            * use highlight
.
.         enter starting date
.
KDAT1000  MOVE      "12",CVERT              * row
          MOVE      "13",CCOL               * column
          UNPACK    SP6,CYEAR,CMON,CDAY     * no defaults
          MOVE      CCC,CCENT
.
          CALL      KEYDATE
          BRANCH    OVRCD,KDAT9000          * nothing entered
          BRANCH    CQUEST,KDAT1000
.
          PACK      CDFRDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CDFRDATE           * set up start date
          CALL      PACDATE
          MOVE      CPCDATE,PRFRDATE         * formatted start date
.
          MATCH     CDFRDATE,TODAY
          GOTO      KDAT2000 IF NOT LESS    * date is <= current date
.
          DISPLAY   *P1:24,*B,"Date must not be after current date.  ",*EL;
          CALL      HITENTER 
          GOTO      KDAT1000
.
.         enter ending date (default to starting date)
.
KDAT2000  MOVE      "14",CVERT              * row
          MOVE      "13",CCOL               * column
          UNPACK    CDFRDATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,KDAT1000          * nothing entered
          BRANCH    CQUEST,KDAT2000
.
          PACK      CDTODATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CDTODATE           * set up end date
          CALL      PACDATE
          MOVE      CPCDATE,PRTODATE         * formatted end date
.
          MATCH     CDFRDATE,CDTODATE
          GOTO      KDAT3000 IF NOT LESS    * date is <= start date
.
          DISPLAY   *P1:24,*B,"Ending date must be after Starting date.  ",*EL;
          CALL      HITENTER 
          GOTO      KDAT2000
.
.         check end date is before current date
.
KDAT3000  MATCH     CDTODATE,TODAY
          GOTO      KDAT5000 IF NOT LESS    * date is <= current date
.
          DISPLAY   *P1:24,*B,"Date must not be after current date.  ",*EL;
          CALL      HITENTER 
          GOTO      KDAT2000
.
KDAT5000  CALL      CONTQST
          BRANCH    CEXIT,KDAT8000,KDAT0000,KDAT9000
.                         Yes      No       Cancel
.
KDAT8000  MOVE      ZERO,EXIT               * valid dates
          GOTO      KDAT9999
.
KDAT9000  MOVE      ONE,EXIT                * exit selected
.
KDAT9999  RETURN
+
.*********************************************************************
.         get the data for the report
.*********************************************************************
GDAT0000  DISPLAY   *P1:24,*EL,"Obtaining details..."
          CLOCK     TIME,CTIMEIS
          CALL      CTPA0000                * create temp file
          CALL      WIDT0000                * write initial details to temp file
          PACK      KEY21,CDFRDATE,SP20
          CALL      RDSDETA3
.
GDAT1000  CALL      RDKDETA3
          BRANCH    OVRCD,GDAT9999          * end of file
          MATCH     ADADATE,CDTODATE
          GOTO      GDAT9999 IF LESS        * after end date
.
          DISPLAY   *P41:24,ADADATE,ADANUMB
          PACK      KEY5,CATEP,ADAPREV
          CALL      RDCODE1
          BRANCH    OVRCD,GDAT1000          * invalid code
.
          MOVE      ZERO,ATTYPE             * default to follow up
          MATCH     "1",TCINDC1
          IF        @EQUAL
            MOVE      ONE,ATTYPE              * set to new attendance
          ENDIF
.
.         get the time breakdown
.
          MOVE      ANSA,TIMERNG            * set for 00:00 - 00:59
          MATCH     "01:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSB,TIMERNG            * set for 01:00 - 01:59
          MATCH     "02:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSC,TIMERNG            * set for 02:00 - 02:59
          MATCH     "03:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSD,TIMERNG            * set for 03:00 - 03:59
          MATCH     "04:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSE,TIMERNG            * set for 04:00 - 04:59
          MATCH     "05:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSF,TIMERNG            * set for 05:00 - 05:59
          MATCH     "06:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSG,TIMERNG            * set for 06:00 - 06:59
          MATCH     "07:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSH,TIMERNG            * set for 07:00 - 07:59
          MATCH     "08:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSI,TIMERNG            * set for 08:00 - 08:59
          MATCH     "09:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSJ,TIMERNG            * set for 09:00 - 09:59
          MATCH     "10:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSK,TIMERNG            * set for 10:00 - 10:59
          MATCH     "11:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSL,TIMERNG            * set for 11:00 - 11:59
          MATCH     "12:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSM,TIMERNG            * set for 12:00 - 12:59
          MATCH     "13:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSN,TIMERNG            * set for 13:00 - 13:59
          MATCH     "14:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSO,TIMERNG            * set for 14:00 - 14:59
          MATCH     "15:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSP,TIMERNG            * set for 15:00 - 15:59
          MATCH     "16:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSQ,TIMERNG            * set for 16:00 - 16:59
          MATCH     "17:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSR,TIMERNG            * set for 17:00 - 17:59
          MATCH     "18:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSS,TIMERNG            * set for 18:00 - 18:59
          MATCH     "19:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANST,TIMERNG            * set for 19:00 - 19:59
          MATCH     "20:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSU,TIMERNG            * set for 20:00 - 20:59
          MATCH     "21:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSV,TIMERNG            * set for 21:00 - 21:59
          MATCH     "22:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSW,TIMERNG            * set for 22:00 - 22:59
          MATCH     "23:00",ADATIME
          GOTO      GDAT3000 IF LESS        * in the range
.
          MOVE      ANSX,TIMERNG            * set for 23:00 - 23:59
.
.         post to temp file
.
GDAT3000  MOVE      TIMERNG,KEY1            * update time range
          CALL      PTMP0000
          MOVE      ANSZ,KEY1               * update total
          CALL      PTMP0000
          GOTO      GDAT1000
.
GDAT9999  RETURN
+
.*********************************************************************
.         post to the temp file
.*********************************************************************
PTMP0000  MOVE      ZERO,XNEW1
          MOVE      ZERO,XNEW2
          MOVE      ZERO,XNEW3
          MOVE      ZERO,XNEW4
          MOVE      ZERO,XNEW5
          MOVE      ZERO,XRAT
.
          MOVE      KEY1,XRNGE
          CALL      RDTEMPA
          MOVE      OVRCD,TOVRCD
.
          IF        ATTYPE = ZERO
            ADD       ONE,XRAT                * add to re-attendance
          ELSE
           MOVE       FIVE,FORM1
           PACK       KEY5,ANSA,ANSA,ADAPRTY
           CALL       RDCODE1
           IF         OVRCD=0
             TYPE       TCINDC1
             IF         @EQUAL
               MOVE       TCINDC1,FORM1
               IF         FORM1 < 1 | FORM1 > 5
                 MOVE       FIVE,FORM1
               ENDIF
             ENDIF
           ENDIF
            LOAD      FORM5,FORM1,XNEW1,XNEW2,XNEW3,XNEW4,XNEW5
            ADD       ONE,FORM5
            STORE     FORM5,FORM1,XNEW1,XNEW2,XNEW3,XNEW4,XNEW5
          ENDIF
.
          IF        TOVRCD = ONE
            CALL      WRTEMPA
          ELSE
            CALL      UPTEMPA
          ENDIF
.
PTMP9999  RETURN
+
.*********************************************************************
.         print the report
.*********************************************************************
REPT0000  DISPLAY   *P1:24,*EL,"Printing report..."
          MOVE      ZERO,CPAGENO
          CALL      HEAD80
          PRINT     *20,"Date range : ",PRFRDATE," to ",PRTODATE,*N
          CALL      UNLN0000
          PRINT     *1,"   Time Range    --------- New Attendances ----------":
                       "    Re-Attendances   Total  ":
                    *N,"                   1     2     3     4     5    Total"
          CALL      UNLN0000
.
.         loop over temp file
.
          MOVE      SP1,KEY1
          CALL      RSTEMPA
          MOVE      ONE,FORM2
          WHILE     FORM2 <= 24
            CALL      RKTEMPA
            LOAD      TIMEDESC,FORM2,TRNG1,TRNG2,TRNG3,TRNG4,TRNG5:
                                     TRNG6,TRNG7,TRNG8,TRNG9,TRNG10:
                                     TRNG11,TRNG12,TRNG13,TRNG14,TRNG15:
                                     TRNG16,TRNG17,TRNG18,TRNG19,TRNG20:
                                     TRNG21,TRNG22,TRNG23,TRNG24
            ASSIGN    (XNEW1+XNEW2+XNEW3+XNEW4+XNEW5),NEWTL      * new  total
            ASSIGN    (NEWTL+XRAT),LINETL                  * line total
            PRINT     *2,TIMEDESC,SP3,XNEW1,SP1,XNEW2,SP1,XNEW3,SP1,XNEW4,SP1:
                         XNEW5,SP1,NEWTL,SP8,XRAT,SP6,LINETL
            ADD       ONE,FORM2
          DO
.
          CALL      UNLN0000
          CALL      RKTEMPA
          MOVE      "Total",TIMEDESC
          ASSIGN    (XNEW1+XNEW2+XNEW3+XNEW4+XNEW5),NEWTL      * new  total
          ASSIGN    (NEWTL+XRAT),LINETL                  * line total
          PRINT     *2,TIMEDESC,SP3,XNEW1,SP1,XNEW2,SP1,XNEW3,SP1,XNEW4,SP1:
                       XNEW5,SP1,NEWTL,SP8,XRAT,SP6,LINETL
          CALL      UNLN0000
          PRINT     *N,"*** End of Report ***",*N
.
REPT9999  RETURN
+
.*********************************************************************
.         print underline
.*********************************************************************
UNLN0000  PRINT     *1,"*-------------------------------------":
                       "-----------------------------------------*"
UNLN9999  RETURN
+
.*********************************************************************
.         write initial details to temp file
.*********************************************************************
WIDT0000  MOVE      ONE,FORM2
          WHILE     FORM2 <= 25
            MOVE      ZERO,XNEW1
            MOVE      ZERO,XNEW2
            MOVE      ZERO,XNEW3
            MOVE      ZERO,XNEW4
            MOVE      ZERO,XNEW5
            MOVE      ZERO,XRAT
            LOAD      XRNGE,FORM2,ANSA,ANSB,ANSC,ANSD,ANSE:
                                  ANSF,ANSG,ANSH,ANSI,ANSJ:
                                  ANSK,ANSL,ANSM,ANSN,ANSO:
                                  ANSP,ANSQ,ANSR,ANSS,ANST:
                                  ANSU,ANSV,ANSW,ANSX,ANSZ
            MOVE      XRNGE,KEY1
            CALL      WRTEMPA
            ADD       ONE,FORM2
          DO
WIDT9999  RETURN
+
.*********************************************************************
.         Create a temp file
.*********************************************************************
CTPA0000  CALL      DTPA0000                * delete temp file
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISBUILD,CFNAMEA,KEYA,SP30      * set command
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * build the temp file
          OPEN      TEMPA,CFNAMEA           * open the temp file
.
CTPA9999  RETURN
+
.*********************************************************************
.         Delete temp file A
.*********************************************************************
DTPA0000  CLOSE     TEMPA,DELETE            * close temp file
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISERASE,CFNAMEA * set command line for erase
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * delete the temp file
.
DTPA9999  RETURN
+
.*********************************************************************
.         temp file I/O
.*********************************************************************
RSTEMPA   READ      TEMPA,KEY1;;
          RETURN
.
RDTEMPA   MOVE      ZERO,OVRCD
          READ      TEMPA,KEY1;XRNGE,DXNEW1,DXNEW2,DXNEW3,DXNEW4,DXNEW5,DXRAT
          GOTO      OVERCOND IF OVER
          MOVE      DXNEW1,XNEW1
          MOVE      DXNEW2,XNEW2
          MOVE      DXNEW3,XNEW3
          MOVE      DXNEW4,XNEW4
          MOVE      DXNEW5,XNEW5
          MOVE      DXRAT,XRAT
          RETURN
.
RKTEMPA   MOVE      ZERO,OVRCD
          READKS    TEMPA;XRNGE,DXNEW1,DXNEW2,DXNEW3,DXNEW4,DXNEW5,DXRAT
          GOTO      OVERCOND IF OVER
          MOVE      DXNEW1,XNEW1
          MOVE      DXNEW2,XNEW2
          MOVE      DXNEW3,XNEW3
          MOVE      DXNEW4,XNEW4
          MOVE      DXNEW5,XNEW5
          MOVE      DXRAT,XRAT
          RETURN
.
WRTEMPA   MOVE      XNEW1,DXNEW1
          MOVE      XNEW2,DXNEW2
          MOVE      XNEW3,DXNEW3
          MOVE      XNEW4,DXNEW4
          MOVE      XNEW5,DXNEW5
          MOVE      XRAT,DXRAT
          WRITE     TEMPA,KEY1;XRNGE,DXNEW1,DXNEW2,DXNEW3,DXNEW4,DXNEW5,DXRAT
          RETURN
.
UPTEMPA   MOVE      XNEW1,DXNEW1
          MOVE      XNEW2,DXNEW2
          MOVE      XNEW3,DXNEW3
          MOVE      XNEW4,DXNEW4
          MOVE      XNEW5,DXNEW5
          MOVE      XRAT,DXRAT
          UPDATE    TEMPA;XRNGE,DXNEW1,DXNEW2,DXNEW3,DXNEW4,DXNEW5,DXRAT
          RETURN
+
          INC       STD001IO
          INC       AAEDE1IO/INC
          INC       PATCODIO/INC
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
.............................................................................
