.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 09.11.2000 Charles Handaya
.           Modified for sincchaf change
.-------------------------------------------------------
. VF.00.02  29.12.1999 Charles Handaya
.           Add Export Function
.           srf 637199
. VF.00.01  29.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
.-------------------------------------------------------
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
TABDELM   EQU       0x09                 * Tab Delimiter
.
ENDCST    DIM     5
F8TOT1    DIM     8
F8TOT2    DIM     8
F8TOT3    DIM     8
F13TOT1   DIM     13
F13TOT2   DIM     13
MTHAMT    FORM    12.2
MTHQTY    FORM    12.2
SAVEKEY6  DIM     6
STRCST    DIM     5
TYTDAMT   FORM    12.2
TMTHAMT   FORM    12.2
YTDAMT    FORM    12.2
YTDQTY    FORM    12.2
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB25
.   Function      :   Imprest Stock Usage Report              
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       SINCCAFD/INC
          INC       SINCCHFD/INC
          INC       SINCIAFD/INC
          INC       SINCONFD/INC
          INC       SINIMPFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMCST   DIM      40 * Scr 00 Fld     4
TOCST     DIM      40 * Scr 00 Fld     5
FINYEAR   DIM       4 * Scr 00 Fld     6
FINPERD   DIM       2 * Scr 00 Fld     7
EXPORTYN  FORM      1 * Scr 00 Fld     8
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB25"
PRGNAM    INIT      "Imprest Stock Usage Report              "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      ONAT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA1,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA2,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA3,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA4,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA5,"sincchaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinimpaf";
          OPEN      SINIMPA1,"sinimpaf"
          DISPLAY   *P56:24,"Opening sinimpaf";
          OPEN      SINIMPA2,"sinimpaf"
          DISPLAY   *P56:24,"Opening sinimpaf";
          OPEN      SINIMPA3,"sinimpaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Options                            
          ENDIF
          RETURN
.--------------------------------
. Screen - Options                            
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      MVACCEPT
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Options                            
.-------------------------------------------------------
CF00L000
          MOVE      SP70,FROMCST 
          MOVE      SP70,FINYEAR 
          MOVE      SP70,FINPERD 
          MOVE      ZERO,EXPORTYN
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Options                            
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Options                            
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Options                            
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Options                            
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Options                            
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103,PS00L104,PS00L105
          GOTO     PS00L999
.
PS00L101
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      TOCST,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FINYEAR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      FINPERD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Options                            
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L104,SF00L105,SF00L106
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L020,SF00L104,SF00L105,SF00L106
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      REPT0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCST   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECOST000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCST,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FINYEAR,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FINPERD,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L106
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*143,HNONUSAG
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ONE,HNONUSAG
            WRITAB    CONTROLF,SIXTY3;*143,HNONUSAG
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
.----------------------------------------------------------------------
. Print Report
.----------------------------------------------------------------------
REPT0000  CLOCK    TIME,CTIMEIS
          MOVE     "999",CLNO
          MOVE     ZERO,CPAGENO
          DISPLAY  *P1:24,*EL,"Printing :"
.
          CALL      MAKEXP00                          * Create Export File
.
          PACK     KEY5,STRCST
          CALL     RDSICA1
          IF       OVRCD=0
            CALL     RPSICA1
          ENDIF
.
REPT1000  CALL     RKSICA1
          BRANCH   OVRCD,REPT9000
          MATCH    SICACODE,ENDCST
          GOTO     REPT9000 IF LESS
.
          DISPLAY  *P30:24,*V2LON,SICACODE
.
          MOVE     ZERO,TYTDAMT
          MOVE     ZERO,TMTHAMT
          MOVE     ONE,SECTOR
          MOVE     "999",CLNO
.
          PACK     KEY16,SICACODE,SP70
          CALL     RSSIIM3
REPT1100  CALL     RKSIIM3
          BRANCH   OVRCD,REPT1900
          MATCH    SIIMCST,SICACODE
          GOTO     REPT1900 IF NOT EQUAL
.
          MOVE     SIIMCAT,KEY7
          CALL     RDSIIA1
          BRANCH   OVRCD,REPT1100
.
          MOVE     ZERO,YTDQTY
          MOVE     ZERO,YTDAMT
          MOVE     ZERO,MTHQTY
          MOVE     ZERO,MTHAMT
          PACK     KEY28,SIIMCST,SIIMCAT,SP70
          CALL     RSSICH1
REPT1200  CALL     RKSICH1
          BRANCH   OVRCD,REPT1290
.
          MATCH    SIIMCST,SICHCST
          GOTO     REPT1290 IF NOT EQUAL
.
          MATCH    SIIMCAT,SICHCAT
          GOTO     REPT1290 IF NOT EQUAL
.
          MATCH    FINYEAR,SICHDAT               * matching partial key
          GOTO     REPT1200 IF NOT EQUAL
.
          ADD      SICHUQT,YTDQTY
          ADD      SICHUAM,YTDAMT
          MATCH    SICHDAT,SAVEKEY6
          IF       @EQUAL
            MOVE     SICHUQT,MTHQTY
            MOVE     SICHUAM,MTHAMT
          ENDIF
          GOTO     REPT1200
.
REPT1290  COMPARE  "55",CLNO
          CALL     HEAD0000 IF NOT LESS
          MOVE     SIIADES,KEY49
          MOVE     "99,999,999.99",F13TOT1
          MOVE     "99,999,999.99",F13TOT2
          MOVE     "9999,999",F8TOT1
          MOVE     "9999,999",F8TOT2
          MOVE     "9999,999",F8TOT3
.
          MOVE     SIIMMAX,F10
          FEDIT    F10,F8TOT1
          MOVE     MTHQTY,F10
          FEDIT    F10,F8TOT2
          MOVE     YTDQTY,F10
          FEDIT    F10,F8TOT3
          FEDIT    MTHAMT,F13TOT1
          FEDIT    YTDAMT,F13TOT2
.
          CALL      WRTEXP00                * Write Export Details
.
          ADD      ONE,CLNO
          MOVE     ZERO,SECTOR
          PRINT    SIIMSEQ,SP1,SIIACAT,SP1,KEY49,SP1,SIIAISS,F8TOT1," |":
                   F8TOT2,F13TOT1," |",F8TOT3,F13TOT2
          ADD      MTHAMT,TMTHAMT
          ADD      YTDAMT,TYTDAMT
          GOTO     REPT1100
.
REPT1900  BRANCH   SECTOR,REPT1000
          ADD      ONE,CLNO
          CALL     UND132
          MOVE     "99,999,999.99",F13TOT1
          MOVE     "99,999,999.99",F13TOT2
          FEDIT    TMTHAMT,F13TOT1
          FEDIT    TYTDAMT,F13TOT2
          PRINT    SICACODE,SP1,SICADESC,SP1,"Total",*88,"|",*97,F13TOT1:
                   *111,"|",*120,F13TOT2
          CALL     UND132
          GOTO     REPT1000
.
REPT9000  PRINT    *50,"***** End of Report *****"
          CALL      TRAN0000
.
REPT9999  RETURN
.------------------------------------------------------------
. Heading
.------------------------------------------------------------
HEAD0000  CALL      HEAD132
          PRINT     "Cost Centre From : ",FROMCST," to ",TOCST
          PRINT     "Period/Year      : ",FINPERD,"/",FINYEAR
          PRINT     "Cost Centre      : ",SICACODE,SP1,SICADESC:
                    "   Note usage amounts include internal requisitions."

          CALL      UND132
          PRINT     "Seq. Catalog                                          ":
                    "         Issue Unit      Maximum |     Current Period ":
                    "  |    Year to Date     "
          PRINT     "                                                      ":
                    "                        Quantity |     Qty         Cos":
                    "t |     Qty         Cost"
          CALL      UND132
          ADD       "5",CLNO
          RETURN
.------------------------------------------------------------
. File       : casetran
.
. Functions  : This file contains standard routines for
.              creating and transfering TAB delimited
.              export files to a PC using the unix script
.              keatran.
.
. Routines   : MAKEXP00  - Create the Export File and Headings
.              WRTEXP00  - Write Export Record to File
.              TRAN0000  - Transfer file to PC using script keatran
.
. Note       : The Variable EXPORTYN is used to determine if a
.              export file is to be created. 0=No, 1=Yes.
.
. Variables to be Declared
. ------------------------
. EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
. EXPORTFN  DIM       8                    * Export File Name
. TABDELM   EQU       0x09                 * Tab Delimiter
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE  ONE,EXPORTYN
          GOTO     MAKEXP99 IF NOT EQUAL
          MOVE     "EXPORT",KEY6
          PACK     EXPORTFN,KEY6,PORT
          REP      " 0",EXPORTFN
          PREP     EXPORTFL,EXPORTFN
          WRITE    EXPORTFL,SEQ;"Cost Centre",TABDELM:
                                "Cost Centre Description",TABDELM:
                                "Period",TABDELM:
                                "Year",TABDELM:
                                "Sequence",TABDELM:
                                "Catalog Code",TABDELM:
                                "Catalog Description",TABDELM:
                                "Issue Unit",TABDELM:
                                "Maximum Quantity",TABDELM:
                                "Current Period Quantity",TABDELM:
                                "Current Period Cost",TABDELM:
                                "Year to Date Quantity",TABDELM:
                                "Year to Date Cost"
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WRTEXP00  COMPARE  ONE,EXPORTYN
          GOTO     WRTEXP99 IF NOT EQUAL
.
          WRITE    EXPORTFL,SEQ;SIIMCST,TABDELM:
                                SICADESC,TABDELM:
                                FINPERD,TABDELM:
                                FINYEAR,TABDELM:
                                SIIMSEQ,TABDELM:
                                SIIACAT,TABDELM:
                                SIIADES,TABDELM:
                                SIIAISS,TABDELM:
                                SIIMMAX,TABDELM:
                                MTHQTY,TABDELM:
                                MTHAMT,TABDELM:
                                YTDQTY,TABDELM:
                                YTDAMT
WRTEXP99  RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE  ONE,EXPORTYN
          GOTO     TRAN9999 IF NOT EQUAL
          MOVE     YES,DEFYESNO
          CLOSE    EXPORTFL
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   EXPORTFN,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTFL,EXPORTFN
          CLOSE    EXPORTFL
.
TRAN9999  RETURN
.
.----------------------------------------------------------------------
. Enter Cost Centre Range
.----------------------------------------------------------------------
ECOST000   MOVE     "    4",FLDID
           CALL     GETPOSIT
           CALL     KSICAA00
           BRANCH   EXIT,ECOST100,ECOST980
           MOVE     SICACODE,STRCST
           PACK     FROMCST,SICACODE,SP1,SICADESC
           GOTO     ECOST140
ECOST100   MOVE     "Start             ",FROMCST
           MOVE     SP70,STRCST
.
ECOST140   MOVE     FROMCST,VAR
           CALL     DISPITEM
.
ECOST150   MOVE     "    5",FLDID
           CALL     GETPOSIT
           CALL     KSICAA00
           BRANCH   EXIT,ECOST200,ECOST980
           MOVE     SICACODE,ENDCST
           PACK     TOCST,SICACODE,SP1,SICADESC
           MATCH    STRCST,ENDCST
           GOTO     ECOST950 IF EQUAL
           GOTO     ECOST950 IF NOT LESS
           BEEP
           MOVE     "To Cost Centre Must Be > From Cost Centre - ",DISPMSG
           CALL     MESSAGE1
           GOTO     ECOST000
.
ECOST200   MOVE     "Finish             ",TOCST
           MOVE     "~~~~~~~",ENDCST
.
ECOST950   MOVE     "    4",FLDID
           CALL     GETPOSIT
           GOTO     ECOST999
.
ECOST980   MOVE     TWO,EXIT
.
ECOST999   RETURN
.

.----------------------------------------------------------------------
. Keyin Year
.----------------------------------------------------------------------
EYEAR000  CALL      RINPECON
          MOVE      SIPECYR,FINYEAR
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,FINYEAR
          PACK      FINYEAR,FINYEAR,SP70
.
          MATCH     SP70,FINYEAR
          GOTO      EYEAR990 IF EQUAL
          PACK      KEY4,SP3,EXITCHAR * exitchar entered ?
          MATCH     KEY4,FINYEAR
          GOTO      EYEAR990 IF EQUAL
.
          TYPE      FINYEAR           * valid numeric ?
          GOTO      EYEAR000 IF NOT EQUAL
.
          MOVE      FINYEAR,SIPEYF4
          IF        SIPEYF4<100
            SQUEEZE   FINYEAR
            MOVE      FINYEAR,FORM2
            PACK      FINYEAR,CCC,FORM2,SP70
          ENDIF
.
          REP       " 0",FINYEAR
          MOVE      ZERO,EXIT          * year ok
          GOTO      EYEAR999
.
EYEAR990  MOVE      TWO,EXIT           * no year entered
.
EYEAR999  RETURN
.----------------------------------------------------------------------
. Keyin period
.----------------------------------------------------------------------
EPERD000  KEYIN     *PCCOL:CVERT,*V2LON,*RV,*ZF,*JR,FINPERD
          PACK      FINPERD,FINPERD,SP70
          REP       " 0",FINPERD
.
          PACK      KEY2,ZERO,EXITCHAR      * check for exitchar
          MATCH     KEY2,FINPERD
          GOTO      EPERD950 IF EQUAL
.
          TYPE      FINPERD                  * check if numeric
          GOTO      EPERD000 IF NOT EQUAL
.
          MOVE      FINPERD,F2
          IF        F2>SIPENUM
            BEEP
            MOVE      "Invalid Period - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EPERD000
          ENDIF
.
          PACK      KEY6,FINYEAR,FINPERD,SP70
          REP       " 0",KEY6
          MOVE      KEY6,SAVEKEY6
          CALL      RDSIPE1
          IF        OVRCD=1
            BEEP
            MOVE      "Period Does Not Exist - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EPERD000
          ENDIF
.
EPERD900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      EPERD999
.
EPERD950  MOVE      TWO,EXIT                     * quit screen
.
EPERD999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       SINCCAIO/INC
          INC       SINCCAKY    
          INC       SINCCHIO/INC
          INC       SINCIAIO/INC
          INC       SINIMPIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
.
          INC       STDGENCD
.
