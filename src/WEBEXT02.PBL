.-----------------------------------------------------------------------------
. Program       : WEBEXT02
.
. Function      : VEMD Extract Server for Private Facilities
.
. Modifications : 
.
.-----------------------------------------------------------------------------
.         V12.00.02 17/07/2025  Nikitha B      TSK 0955905
.                   Commented E421,E422 & E423 at FUND3000, FUND4000 & FUND3000
.                   since DVA num, surname & first name is not mandatory for
.                   Private. Retained the structure if in future needed.
.         V12.00.01 23/05/2025  Ebon Clements  TSK 0955096
.                   Alphanueric visit number changes
.         V11.05.03 23/04/2025  Nikitha B      TSK 0955905
.                   Modified SRVT0000 to check XSERVTYP to be blank.
.         V11.05.02 16/04/2025  Nikitha B      TSK 0955905
.                   Modified TYPA2000 : for XDEPSTAT 5,10,11,T1,T2 to be valid
.                   Depature Status for 11 -  Usual Accomadation. 
.         V11.05.01 04/03/2025  Nikitha B      TSK 0955905
.                   VEMD Statutory Changes 2025-26. Added FUND0000 for
.                   Funding source (XFUNDSRC).
.                   Added E419, E421, E422, E423 new errors
.-----------------------------------------------------------------------------
.         V11.04.05 17/09/2024  Bella Turco    TSK 0949343
.                   Fixed formatting of E415 error
.                   Fixed duplicate E401,E415 errors
.                   Fixed multiple instances of lowercase error messages
.         V11.04.04 01/07/2024  Thanh T        TSK 0948274 
.                   Changed PROC0200 for sex at birth validation
.         V11.04.03 05/04/2024  Alina Bhari    TSK 0941652
.                   Reported indigenous status in report - PROC9000            
.         V11.04.02 25/03/2024  Alina Bhari    TSK 0941761
.                   Displayed the error message for Sexcode 3,4 and code more
.                   than 5. -PROC0260
.                   Modified wording sex to “Sex at birth” for E090- PROC0200
.                   Removed E093 and E370 validation - PROC0260
.         V11.04.01 18/03/2024  Alina Bhari    TSK 0941652
.                   Reporting the Indigenous Status from the Visit table
.                   instead of Patient Demographics table -PROC0217
.                   2024 VEMD changes - DOYR2024
.-----------------------------------------------------------------------------
.         V11.03.07 29/06/2023  Peter Vela     TSK 0934444
.                   Restored 2022 sex at birth edits
.         V11.03.06 09/06/2023  Peter Vela     TSK 0928368
.                   6th email
.                   Rebound 2 - Fixed XREFDBY extraction
.         V11.03.05 08/06/2023  Peter Vela     TSK 0928368
.                   5th email
.                   Rebound 2 - Fixed PATATR validation in NDI20000
.         V11.03.04 07/06/2023  Peter Vela     TSK 0928368
.                   4th email
.                   Rebound 1 - Fixed XGENDER extraction
.                   Rebound 2 - Fixed XPATSEX extraction
.                             - valid sex code 1,2 or 5
.                   Rebound 5 - Fixed Service Type / Patient location validation
.                   Rebound 10 - Fixed XREFDEPT extraction 
.                   in SRVT0000
.         V11.03.03 07/06/2023  Peter Vela     TSK 0928368
.                   2nd email
.                   Rebound 3 - Added NDIS identifier extraction for DOYR2023
.                   Fixed R99 validation for XPRIDIAG
.         V11.03.02 06/06/2023  PJ Le Febour   TSK 0928368a
.                   1st email
.                   Rebound 1 - Sex invalidation error message
.                   Rebound 2 - valid sex code 1,2 or 5
.                   Rebound 4 - fixed validation source of referall and 
.                   service type
.         V11.03.01 25/05/2023  PJ Le Febour   TSK 0928368
.                   add DOYR2023 validation for XERVTYP at PROC0328
.         V11.02.07 18/07/2022  Ebon Clements  TSK 0922170
.                   Report first seen by Dr date/time when departure status is
.                   31 - MH and AOD hub short stay. SEEN0000 CHKS0000
.         V11.02.06 07/07/2022  Ebon Clements  TSK 0921907
.                   Fixed reporting of compensable status in the extract
.                   file - XCOMPST -  PROC9000
.         V11.02.05 19/04/2022  Ebon Clements  TSK 0915981
.                   Added open of emrvisaf index 3
.         V11.02.04 14/04/2022  Ebon Clements  TSK 0915981
.                   Always populate ambulance handover time - AMBD7000
.         V11.02.03 31/03/2022  Ebon Clements  TSK 0915981
.                   Added E025 - Duplicate attendance error
.         V11.02.02 30/03/2022  Ebon Clements  TSK 0911448
.                   Added E025 - Duplicate attenace error
.         V11.02.01 28/03/2022  Ebon Clements  TSK 0915981
.                   2022 VEMD changes - DOYR2022
.                   Restored E079, E145 and E146 errors
.                   Added E413 error
.                   Use local copy of SEXDSC00 and report gender from ind 5
.         V11.01.01 22/03/2021  Ebon Clements  TSK 0902612
.                   Added exclude type of visit from VEMD reporting.
.                   Cat ee ind5 = X. VALID100
.         V11.00.02 04/05/2020  Ebon Clements  TSK 0891221
.                   Increased VEMD file name to 9 characters
.         V11.00.01 10/03/2020  Jill Parkinson Task 0879163                   
.                   Added SEXDSCIO include                                    
.         V10.15.01 31/10/2019  Peter Vela     TSK 0883251
.                   Added 1 minute validation in TRTM0000
.         V10.14.07 14/08/2019  Ebon Clements  TSK 0879716
.                   Only validate triage cat 1 excessive time to treatment
.                   for populated first seen date/times - TRTM0000
.                   Fixed F2 test for E397 ERRROR at AMBD9400
.         V10.14.06 13/06/2019  Peter Vela     TSK 0871667
.                   Changed multi hospital campus code to PTHSHDPC
.                   Removed errors E145, E103, E089, E260
.                   Changed E374 error message
.         V10.14.05 07/06/2019  Peter Vela     TSK 0871667
.                   Changed error E401, one for date, one for time
.                   Removed error E186
.                   Removed error E201
.                   Fixed validation for error E407
.                   Use current triage category if original one is blank
.                   PROC0456
.                   Added error E374 for EMVIMPDT, EMVIMPTM
.         V10.14.04 06/06/2019  Peter Vela     TSK 0871667
.                   Added medicare suffix back in
.         V10.14.03 05/06/2019  Peter Vela     TSK 0871667
.                   Removed error E219
.                   Removed error E351
.         V10.14.02 03/06/2019  Peter Vela     TSK 0871667
.                   Fixed title to WEBEXT02
.                   Removed error E240
.         V10.14.01 13/05/2019  Peter Vela     TSK 0871667
.                   Ported from WEBEXT01
.----------------------------------------------------------------------
          INC       STD001FD
.
          INC       PATDHEAD/INC
          INC       PATATRFD/INC
          INC       PATCALAG/INC
          INC       EMRCONFD/INC
          INC       EMRGRCFD/INC
          INC       EMRHISFD/INC
          INC       EMRICDFD/INC
          INC       EMRMTXFD/INC
          INC       EMRPROFD/INC
          INC       EMRVCDFD/INC
          INC       EMRVDGFD/INC
          INC       EMRVISFD/INC
          INC       EMRCHAFD/INC
          INC       EMRVPRFD/INC
          INC       IBAPOSFD/INC
          INC       IBAPDFFD/INC
          INC       PATICDFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDADFD/INC
          INC       IBACONFD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PMSPX2FD/INC
          INC       PATVADFD/INC
          INC       PATVISFD/INC
          INC       PATWVEFD/INC
          INC       WEBCONFD/INC
          INC       PMSVX1FD/INC
          INC       PMSHCPFD/INC
          INC       PMSCCDFD/INC
.
. CGI Parameters
.
STARTDAT  DIM       8     * start date for extract
FINISHDT  DIM       8     * end date for extract
EXTFILNM  DIM       9     * extract file name
.VISFILNM  DIM       8     * VISS file name
PBREPORT  FORM      1     * Perform Paper Based VEMD Reports? 1=Yes 0=No
RESUBMIT  FORM      1     * submission? - 1=validation, 2=submission
VEMDEXTR  FORM      1     * Perform VEMD Extraction? 1=Yes 0=No
VISSEXTR  FORM      1     * Perform VISS Extraction? 1=Yes 0=No
VEMDMHOS  DIM       3     * Multi Hospital Campus
.
. Extract file definition
.
XXTRACT1  FILE      ASCII, FIXED=256
.
. VEMD Extract File Format 2014 / 2015
.
XCAMPUS   DIM       4      * Campus code
XUNIQUE   DIM       9      * Unique Key
.
. Patient Biographic Data
.
XPATNTID  DIM       10     * Patient Identifier
XMEDINUM  DIM       11     * Medicare Number
XMEDISUF  DIM       3      * Medicare Suffix
XDVANUM   DIM       9      * DVA Number
XPATSEX   DIM       1      * Sex
XBRTHDAT  DIM       8      * Date of Birth
XESTDOB   DIM       3      * Estimated DOB AAA or EEE (after 01/07/2008)
XCNTRY    DIM       4      * Country of Birth
XINDIG    DIM       1      * Indigenous Status
.XINTRREQ DIM       1      * Interpreter Required
XPRELANG  DIM       2      * Preferred Language
XLOCAL    DIM       44     * Locality
XPOSTCOD  DIM       4      * Postcode
.XTYPACCM DIM       2      * Type of usual accommodation
.
. Patient Management Data
.
XARRMODE  DIM       2      * Arrival Transport Mode
XREFDBY   DIM       2      * Referred by
XTSOURCE  DIM       4      * Transfer Source
XVISTYP   DIM       2      * Type of Visit
XCOMPST   DIM       1      * Compensable Status
XAMBCASE  DIM       6      * Ambulance Case Number
.
XAMBLCAS  DIM       10     * Ambulance Case Number
.
XARRDATE  DIM       8      * Arrival Date
XARRTIME  DIM       4      * Arrival Time
XTRIDATE  DIM       8      * Triage Date
XTRITIME  DIM       4      * Triage Time
XTRIGCAT  DIM       1      * Triage Category
XNURSDAT  DIM       8      * First Seen By Treating Nurse Date
XNURSTIM  DIM       4      * First Seen By Treating Nurse Time
XDOCTDAT  DIM       8      * First Seen By Treating Doctor Date
XDOCTTIM  DIM       4      * First Seen By Treating Doctor Time
XMENHDAT  DIM       8      * First Seen By Mental Health Date
XMENHTIM  DIM       4      * First Seen By Mental Health Time
XPROCDUR  DIM       89     * Procedures
.
XINPBDAT  DIM       8      * Inpatient Bed Request Date  * 2013 VEMD ONLY
XINPBTIM  DIM       4      * Inpatient Bed Request Time  * 2013 VEMD ONLY
.
XDADMDAT  DIM       8      * Clinical Decision to Admit Date  * 2014 VEMD
XDADMTIM  DIM       4      * Clinical Decision to Admit Time  * 2014 VEMD
.
XDEPDATE  DIM       8      * Departure Date
XDEPTIME  DIM       4      * Departure Time
.XDEPSTAT DIM       1      * Departure Status
ODEPSTAT  DIM       1      * Departure Status for old file layout dim 1
XTDESTN   DIM       4      * Transfer Destination
XREFDEPT  DIM       2      * Referred to on Departure
XTREASON  DIM       1      * Reason for Transfer
XDEPTMOD  DIM       2      * Departure Transport Mode
XPRIDIAG  DIM       6      * Primary Diagnosis
XADDIAG1  DIM       6      * Additional Diagnosis 1
XADDIAG2  DIM       6      * Additional Diagnosis 2
XINVALID  FORM      1      * Flag for invalid condition
.
. Injury Surveillance Data
.
XINJURY   DIM       2      * Nature of Main Injury
XBREGION  DIM       2      * Body Region
XINJEVNT  DIM       100    * Description of Injury Event
XINJCAUS  DIM       2      * Injury Cause
XHINTENT  DIM       2      * Human Intent
XINJPLAC  DIM       1      * Place Where Injury Occurred
XINJACTV  DIM       1      * Activity When Injured
.
. Ambulance Details
.
XAATDDAT  DIM       8      * Ambulance at Destination Date  * 2014 VEMD
XAATDTIM  DIM       4      * Ambulance at Destination Time  * 2014 VEMD
XAHOVDAT  DIM       8      * Ambulance Handover Date        * 2014 VEMD
XAHOVTIM  DIM       4      * Ambulance handover Time        * 2014 VEMD
.
XADVCPLA  DIM       1      * Advanced Care Plane Alert
XGIVNAME  DIM       15     * Given Name
XSURNAME  DIM       25     * Surname
.
XSERVTYP  DIM       1      * Service Type        2019 VEMD
XPATLOCN  DIM       4      * Patient Location    2019 VEMD
.
XGENDER   DIM       2      * Gender              2023 VEMD
XNDISID   DIM       9      * NDIS Identifier     2023 VEMD
XFUNDSRC  DIM       2      * Funding Source      2025 VEMD
.
ICDDIAGN  DIM       6      * Primary Diagnosis
. VEMD Extract File Format    after 01/07/2002
.
.XCAMPUS   DIM       4      * Campus code
.XUNIQUE   DIM       9      * Unique Key
.
. Patient Biographic Data
.
.XPATNTID  DIM       10     * Patient Identifier
.XMEDINUM  DIM       11     * Medicare Number
.XMEDISUF  DIM       3      * Medicare Suffix
.XDVANUM   DIM       9      * DVA Number
.XPATSEX   DIM       1      * Sex
.XBRTHDAT  DIM       8      * Date of Birth
.XCNTRY    DIM       4      * Country of Birth
.XINDIG    DIM       1      * Indigenous Status
.XPRELANG  DIM       2      * Preferred Language
.XLOCAL    DIM       22     * Locality
.XPOSTCOD  DIM       4      * Postcode
.
. Patient Management Data
.
.XARRMODE  DIM       2      * Arrival Transport Mode
.XREFDBY   DIM       2      * Referred by
.XTSOURCE  DIM       4      * Transfer Source
.XVISTYP   DIM       2      * Type of Visit
.XCOMPST   DIM       1      * Compensable Status
.XAMBCASE  DIM       6      * Ambulance Case Number
.XARRDATE  DIM       8      * Arrival Date
.XARRTIME  DIM       4      * Arrival Time
.XTRIDATE  DIM       8      * Triage Date
.XTRITIME  DIM       4      * Triage Time
.XTRIGCAT  DIM       1      * Triage Category
.XNURSDAT  DIM       8      * First Seen By Treating Nurse Date
.XNURSTIM  DIM       4      * First Seen By Treating Nurse Time
.XDOCTDAT  DIM       8      * First Seen By Treating Doctor Date
.XDOCTTIM  DIM       4      * First Seen By Treating Doctor Time
.XMENHDAT  DIM       8      * First Seen By Mental Health Date
.XMENHTIM  DIM       4      * First Seen By Mental Health Time
.XPROCDUR  DIM       89     * Procedures
.XINPBDAT  DIM       8      * Inpatient Bed Request Date
.XINPBTIM  DIM       4      * Inpatient Bed Request Time
.XDEPDATE  DIM       8      * Departure Date
.XDEPTIME  DIM       4      * Departure Time
.XDEPSTAT  DIM       1      * Departure Status
.XTDESTN   DIM       4      * Transfer Destination
.XREFDEPT  DIM       2      * Referred to on Departure
.XCARECOM  DIM       1      * Ongoing Care Communication
.XTREASON  DIM       1      * Reason for Transfer
.XESCORT   DIM       1      * Escort Source
.XDEPTMOD  DIM       2      * Departure Transport Mode
.XPRIDIAG  DIM       6      * Primary Diagnosis
.XADDIAG1  DIM       6      * Additional Diagnosis 1
.XADDIAG2  DIM       6      * Additional Diagnosis 2
.
. Injury Surveillance Data
.
.XINJURY   DIM       2      * Nature of Main Injury
.XBREGION  DIM       2      * Body Region
.XINJEVNT  DIM       100    * Description of Injury Event
.XINJCAUS  DIM       2      * Injury Cause
.XHINTENT  DIM       2      * Human Intent
.XINJPLAC  DIM       1      * Place Where Injury Occurred
.XINJACTV  DIM       1      * Activity When Injured
.
. VEMD Extract File Format    after 01/07/2003
.
.XCAMPUS   DIM       4      * Campus code
.XUNIQUE   DIM       9      * Unique Key
.
. Patient Biographic Data
.
.XPATNTID  DIM       10     * Patient Identifier
.XMEDINUM  DIM       11     * Medicare Number
.XMEDISUF  DIM       3      * Medicare Suffix
.XDVANUM   DIM       9      * DVA Number
.XPATSEX   DIM       1      * Sex
.XBRTHDAT  DIM       8      * Date of Birth
.XCNTRY    DIM       4      * Country of Birth
.XINDIG    DIM       1      * Indigenous Status
XINTRREQ   DIM       1      * Interpreter Required
.XPRELANG  DIM       2      * Preferred Language
.XLOCAL    DIM       22     * Locality
.XPOSTCOD  DIM       4      * Postcode
XTYPACCM   DIM       2      * Type of usual accommodation
.
. Patient Management Data
.
.XARRMODE  DIM       2      * Arrival Transport Mode
.XREFDBY   DIM       2      * Referred by
.XTSOURCE  DIM       4      * Transfer Source
.XVISTYP   DIM       2      * Type of Visit
.XCOMPST   DIM       1      * Compensable Status
.XAMBCASE  DIM       6      * Ambulance Case Number
.XARRDATE  DIM       8      * Arrival Date
.XARRTIME  DIM       4      * Arrival Time
.XTRIDATE  DIM       8      * Triage Date
.XTRITIME  DIM       4      * Triage Time
.XTRIGCAT  DIM       1      * Triage Category
.XNURSDAT  DIM       8      * First Seen By Treating Nurse Date
.XNURSTIM  DIM       4      * First Seen By Treating Nurse Time
.XDOCTDAT  DIM       8      * First Seen By Treating Doctor Date
.XDOCTTIM  DIM       4      * First Seen By Treating Doctor Time
.XMENHDAT  DIM       8      * First Seen By Mental Health Date
.XMENHTIM  DIM       4      * First Seen By Mental Health Time
.XPROCDUR  DIM       89     * Procedures
.XINPBDAT  DIM       8      * Inpatient Bed Request Date
.XINPBTIM  DIM       4      * Inpatient Bed Request Time
.XDEPDATE  DIM       8      * Departure Date
.XDEPTIME  DIM       4      * Departure Time
XDEPSTAT   DIM       2      * Departure Status now a dim 2
.XTDESTN   DIM       4      * Transfer Destination
.XREFDEPT  DIM       2      * Referred to on Departure
.XTREASON  DIM       1      * Reason for Transfer
.XESCORT   DIM       1      * Escort Source
.XDEPTMOD  DIM       2      * Departure Transport Mode
.XPRIDIAG  DIM       6      * Primary Diagnosis
.XADDIAG1  DIM       6      * Additional Diagnosis 1
.XADDIAG2  DIM       6      * Additional Diagnosis 2
.
. Injury Surveillance Data
.
.XINJURY   DIM       2      * Nature of Main Injury
.XBREGION  DIM       2      * Body Region
.XINJEVNT  DIM       100    * Description of Injury Event
.XINJCAUS  DIM       2      * Injury Cause
.XHINTENT  DIM       2      * Human Intent
.XINJPLAC  DIM       1      * Place Where Injury Occurred
.XINJACTV  DIM       1      * Activity When Injured
.
.
. VEMD Extract File Format    after 01/07/2007
.
.XCAMPUS   DIM       4      * Campus code
.XUNIQUE   DIM       9      * Unique Key
.
. Patient Biographic Data
.
.XPATNTID  DIM       10     * Patient Identifier
.XMEDINUM  DIM       11     * Medicare Number
.XMEDISUF  DIM       3      * Medicare Suffix
.XDVANUM   DIM       9      * DVA Number
.XPATSEX   DIM       1      * Sex
.XBRTHDAT  DIM       8      * Date of Birth
.XCNTRY    DIM       4      * Country of Birth
.XINDIG    DIM       1      * Indigenous Status
.XINTRREQ  DIM       1      * Interpreter Required
XPRELAN4   DIM       4      * Preferred Language   * 4 char after 01/07/2007
.XLOCAL    DIM       22     * Locality
.XPOSTCOD  DIM       4      * Postcode
.XTYPACCM  DIM       2      * Type of usual accommodation
.
. Patient Management Data
.
.XARRMODE  DIM       2      * Arrival Transport Mode
.XREFDBY   DIM       2      * Referred by
.XTSOURCE  DIM       4      * Transfer Source
.XVISTYP   DIM       2      * Type of Visit
.XCOMPST   DIM       1      * Compensable Status
.XAMBCASE  DIM       6      * Ambulance Case Number
.XARRDATE  DIM       8      * Arrival Date
.XARRTIME  DIM       4      * Arrival Time
.XTRIDATE  DIM       8      * Triage Date
.XTRITIME  DIM       4      * Triage Time
.XTRIGCAT  DIM       1      * Triage Category
.XNURSDAT  DIM       8      * First Seen By Treating Nurse Date
.XNURSTIM  DIM       4      * First Seen By Treating Nurse Time
.XDOCTDAT  DIM       8      * First Seen By Treating Doctor Date
.XDOCTTIM  DIM       4      * First Seen By Treating Doctor Time
.XMENHDAT  DIM       8      * First Seen By Mental Health Date
.XMENHTIM  DIM       4      * First Seen By Mental Health Time
.XPROCDUR  DIM       89     * Procedures
.XINPBDAT  DIM       8      * Inpatient Bed Request Date
.XINPBTIM  DIM       4      * Inpatient Bed Request Time
.XDEPDATE  DIM       8      * Departure Date
.XDEPTIME  DIM       4      * Departure Time
.XDEPSTAT  DIM       2      * Departure Status now a dim 2
.XTDESTN   DIM       4      * Transfer Destination
.XREFDEPT  DIM       2      * Referred to on Departure
.XTREASON  DIM       1      * Reason for Transfer
.XESCORT   DIM       1      * Escort Source
.XDEPTMOD  DIM       2      * Departure Transport Mode
.XPRIDIAG  DIM       6      * Primary Diagnosis
.XADDIAG1  DIM       6      * Additional Diagnosis 1
.XADDIAG2  DIM       6      * Additional Diagnosis 2
.
. Injury Surveillance Data
.
.XINJURY   DIM       2      * Nature of Main Injury
.XBREGION  DIM       2      * Body Region
.XINJEVNT  DIM       100    * Description of Injury Event
.XINJCAUS  DIM       2      * Injury Cause
.XHINTENT  DIM       2      * Human Intent
.XINJPLAC  DIM       1      * Place Where Injury Occurred
.XINJACTV  DIM       1      * Activity When Injured
.
. VISS File Definition
.
VISSFILE  FILE      ASCII, FIXED=256
.
VCAMPUS   DIM       4
VPATNTID  DIM       10
VSEX      DIM       1
VDOB      DIM       8
VCOB      DIM       4
VINDIG    DIM       1
VLANG     DIM       2
VLANG4    DIM       4      * after 01/07/2007
VLOCAL    DIM       22
VPOST     DIM       4
VATRANS   DIM       2
VTYPEVIS  DIM       2
VSOURCE   DIM       4
VCOMSTAT  DIM       1
VARRDAT   DIM       8
VARRTIM   DIM       4
VPROCS    DIM       89
VDEPSTAT  DIM       1
VDEST     DIM       4
VREFDEPT  DIM       2
VDTRANS   DIM       2
VINJURY   DIM       2
VBREGION  DIM       2
VDESCINJ  DIM       100
VINJCAUS  DIM       2
VHUMINT   DIM       2
VPLACE    DIM       1
VACTIV    DIM       1
.VINJPROD DIM       50
.VINJSAFE DIM       50
.
. Arrays for VEMD Paper Based Reports
.
.Form 1 Age x Sex Distribution
F1ARRAY   FORM      5[18][5]                                           * C-49808
F1AGE     FORM      2
F1SEX     FORM      1
.
.Form 2 Type of Visit x Triage Category
F2ARRAY   FORM      5[10][6]
F2TYPE    FORM      2
F2TRIAGE  FORM      1
.
.Form 3 Triage Category x Time Treated
F3ARRAY   FORM      5[6][2]
F3TRIAGE  FORM      1
F3PERF    FORM      1
.
.Form 4a Departure Status
F4AARRAY  FORM      5[99]                   * I CAR 120464            *C-223793
F4STAT    FORM      2                       * I CAR 42299
.
.Form 4b Departure Status Acute Interhospital Transfers
F4BARRAY  FORM      5[8]
F4REAS    FORM      1
.
.Form 5 LOS - Access/Admission Block
F5ARRAY   FORM      5[5][3]
F5LOS     FORM      1
F5REAS    FORM      1
.
. Report File 1
REP1FILE  FILE      ASCII, FIXED=256
REP1NAME  DIM       8
.
. Report File 2
REP2FILE  FILE      ASCII, FIXED=256
REP2NAME  DIM       8
.
. Report File 3
REP3FILE  FILE      ASCII, FIXED=256
REP3NAME  DIM       8
.
. Report File 4a
RE4AFILE  FILE      ASCII, FIXED=256
RE4ANAME  DIM       8
.
. Report File 4b
RE4BFILE  FILE      ASCII, FIXED=256
RE4BNAME  DIM       8
.
. Report File 5
REP5FILE  FILE      ASCII, FIXED=256
REP5NAME  DIM       8
.
. Local Variable Definition
.
ADATE     FORM      8
ARRVDTTM  DIM       12
ATIME     FORM      6
CHCKDTTM  DIM       12
COUNTR    FORM      2
COMBFLAG  FORM      1
CMDLINE   DIM       100
REMFILE   DIM       127
DATE      DIM       8
DATE1     FORM      8
DATE2     FORM      8
DATE3     FORM      8
DATTIME1  DIM       12
DATTIME2  DIM       12
DATEDAT1  DATE      8
DATEDAT2  DATE      8
DAYSEPDT  FORM      4
DATMON    DIM       2
DESCRIPT  DIM       30
DIAGCODE  DIM       6
DIM1A     DIM       1
DIM3      DIM       3
DIM4      DIM       4
DIM8      DIM       8
DIM9      DIM       9
DIM11     DIM       11
DIM15     DIM       15
DIM16A    DIM       16
DIM16D    DIM       16
DIM50A    DIM       50
DIM50B    DIM       50
DIMDATE   DIM       8
DOCTTIME  DIM       8
DOYR2025  FORM      1
ERRORCNT  FORM      4
ERRORMSG  DIM       127
ERRORNO   FORM      3
ERRTYPE   DIM       1
EXTPATH   DIM       127
EXEMPT    FORM      1                     * I CAR 43016
F11       FORM      11
FDATE1    DIM       10
FDATE2    DIM       10
FDIAG     DIM       5
FILMON    DIM       2
FORM17A   FORM      17
FORM17AA  FORM      17
FORM17D   FORM      17
FORM17DD  FORM      17
FORM2A    FORM      2
FORM2B    FORM      2
FORM8     FORM      8
FLAGDVAF  FORM      1
INJFLAG   FORM      1
INJDESC1  DIM       50
INJDESC2  DIM       50
HOUR      DIM       2
HASDVACD  FORM      1
MIN       DIM       2
NMHFLAG   FORM      1
NURSTIME  DIM       8
TMHFLAG   FORM      1
PATCOUNT  FORM      4
PROCOUNT  FORM      3
PRODDESC  DIM       50
SAFEDESC  DIM       50
SAVEDOCT  DIM       10
SAVENURS  DIM       10
SAVESUBR  DIM       45
SAVETIME  FORM      6
SAVEURNO  DIM       8
AVEURNO  DIM       8
SAVEKEY9  DIM       9
SAVEVIST  DIM       8
SEC       DIM       2
SNDATE    FORM      8
SNTIME    FORM      6
TIME      DIM       5
TIME1     FORM      4
TIME2     FORM      4
TIMELIMT  FORM      3
XTIME     DIM       4
WARNCNT   FORM      4
PID033    DIM       1
.
.   TIMEDIFF VARIABLES
.
FIRSTDAT  DIM       8
LASTDATE  DIM       8
FIRSTIME  DIM       4
LASTTIME  DIM       4
CALCTIME  FORM      6
..CDYSDAYS  FORM      6
..CDYSFDTE  DIM       8
..CDYSTDTE  DIM       8
..CDYSYEAR  FORM      2
FIRSTHR   DIM       2
FIRSTMIN  DIM       2
LASTHOUR  DIM       2
LASTMIN   DIM       2
HOUR1     FORM      6
HOUR2     FORM      6
MINUTE1   FORM      3
MINUTE2   FORM      3
TOTTIME1  FORM      4
TOTTIME2  FORM      4
TODAY     DIM       8
.
. Vars for CALCDAYS
.         
CDYSDAYS  FORM     6   Number of days calculated  
CDYSFDTE  DIM      8   (CCYYMMDD) From Date       
CDYSTDTE  DIM      8   (CCYYMMDD) To   Date       
CDYSYEAR  FORM     2   Work Year variable         
SOPTION   FORM      1
BJDAY     FORM      3            * julian birth day
CJDAY     FORM      3            * julian discharge day
CATEGORY  DIM       2
CODE      DIM       3
MTHNAM3   DIM       3
JAN       INIT      "January"
FEB       INIT      "February"
MAR       INIT      "March"
APR       INIT      "April"
MAY       INIT      "May"
JUN       INIT      "June"
JUL       INIT      "July"
AUG       INIT      "August"
SEP       INIT      "September"
OCT       INIT      "October"
NOV       INIT      "November"
DEC       INIT      "December"
.
JAN2025   INIT      "20250101"
.
. Program Constants
.
CATEA     INIT      "ea"
CATEB     INIT      "eb"
CATEC     INIT      "ec"
CATED     INIT      "ed"
CATEE     INIT      "ee"
CATEF     INIT      "ef"
CATEG     INIT      "eg"
CATEH     INIT      "eh"
CATEI     INIT      "ei"
CATEJ     INIT      "ej"
CATEK     INIT      "ek"
CATEL     INIT      "el"
CATEM     INIT      "em"
CATEN     INIT      "en"
CATEO     INIT      "eo"
CATEP     INIT      "ep"
CATEQ     INIT      "eq"
CATER     INIT      "er"
CATES     INIT      "es"
CATET     INIT      "et"
CATEU     INIT      "eu"
CATEV     INIT      "ev"
CATEX     INIT      "ex"
CATSEY    INIT      "ey"
CATSEZ    INIT      "ez"
CATEY     INIT      "EY"
CATYW     INIT      "YW"
CATYX     INIT      "YX"
CATGI     INIT      "Gi"
CATCT     INIT      "ct"
CODEAA    INIT      "AA"
CODEAP    INIT      "AP"
CODEA1    INIT      "A1"
CODEA2    INIT      "A2"
CODEA3    INIT      "A3"
CODEA4    INIT      "A4"
CODEA5    INIT      "A5"
CODEA6    INIT      "A6"
CODEA7    INIT      "A7"
CODEA8    INIT      "A8"
CODEC     INIT      "C "
CODECL    INIT      "CL"
CODEDT    INIT      "DT"
CODEEA    INIT      "EA"
CODEED    INIT      "ED"
CODEP1    INIT      "P1"
CODEP2    INIT      "P2"
CODEP3    INIT      "P3"
CODEP4    INIT      "P4"
CODEP5    INIT      "P5"
CODEP6    INIT      "P6"
CODEP9    INIT      "P9"
CODES     INIT      "S "
ENDCURL   INIT      "{"
SP100     INIT      "                                                  ":
                    "                                                  "
DEL       INIT      011
DATEXT    INIT      ".dat"
TXTEXT    INIT      ".txt"
XLSEXT    INIT      ".xls"
DECIMAL   INIT      "."
FSLASH    INIT      "/"
HUNDRED1  FORM      "101"
HUNDRED4  FORM      "104"
HUNDRE20  FORM      "120"
.
.------------------------------------------------------------------------
PRGID     INIT      "WEBEXT02"
VERSION   INIT      "V12.00.02"
PRGNAM    INIT      "VEMD Private Extract Error Report"
.------------------------------------------------------------------------
MAIN0000  CALL      CLRPAR00       * Clear Variable
.
          KEYIN     *P1:5,"Option             : ",SOPTION 
          KEYIN     *P1:6,"VEMD Extract 1/0   : ",VEMDEXTR
          KEYIN     *P1:7,"VEMD Filename      : ",EXTFILNM
.
.         KEYIN     *P1:8,*EL,"VISS Extract 1/0   : ",VISSEXTR
.         KEYIN     *P1:9,"VISS Filename      : ",VISFILNM
          MOVE      ZERO,VISSEXTR
.         KEYIN     *P1:10,*EL,"Paper Based Report : ",PBREPORT
          KEYIN     *P1:11,"Start Date         : ",STARTDAT
          KEYIN     *P1:12,"Finish Date        : ",FINISHDT
          KEYIN     *P1:13,*EL,"Type of Extract  : ",RESUBMIT
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          COMPARE   ZERO,IBCNMHOS
          IF        !@EQUAL
            KEYIN     *P1:14,"Hospital           : ",VEMDMHOS
          ENDIF
.
          UNPACK    STARTDAT,CDAY,CMON,CCENT,CYEAR 
          PACK      STARTDAT,CCENT,CYEAR,CMON,CDAY
          UNPACK    FINISHDT,CDAY,CMON,CCENT,CYEAR 
          PACK      FINISHDT,CCENT,CYEAR,CMON,CDAY
          STRIP     EXTFILNM
.
.. start
          MOVE      ZERO,DOYR2025
.
          SCAN      "PreJulyTest",REPTNAME
          IF        @EQUAL
            MATCH     "20250101",FINISHDT
          ELSE
            MATCH     "20250701",FINISHDT
          ENDIF
.
          IF        !@LESS
            MOVE      ONE,DOYR2025
          ENDIF
.
..end
.          MOVE      ZERO,DOYR2022
.
.          SCAN      "PreJulyTest",REPTNAME
.          IF        @EQUAL
.            MATCH     "20220101",FINISHDT
.          ELSE
.            MATCH     "20220701",FINISHDT
.          ENDIF
.
.          IF        !@LESS
.            MOVE      ONE,DOYR2022
.          ENDIF
          RESET     REPTNAME
.
          CALL      INIT0000       * Initialise
.
          BRANCH    SOPTION,MAIN1000,MAIN1000
.
MAIN1000  CALL      VALID000       * Validate extract
.         COMPARE   ZERO,PBREPORT
.         GOTO      MAIN9000 IF EQUAL
.         COMPARE   TWO,RESUBMIT
.         GOTO      MAIN9000 IF NOT EQUAL
.
.         CALL      EXPORT00       * Set up report files for export to Excel
.
.         GOTO      MAIN9000
.
MAIN9000  CALL      MVEXT000       * Add extract to index for HTML page
.
MAIN9999  CHAIN     PGM
.------------------------------------------------------------
. Open Files and Initialize Variables
.------------------------------------------------------------
INIT0000  CALL      DISPHEAD
          OPEN      EMRCHAA1,"emrchaaf"
          OPEN      EMRVISA2,"emrvisaf"
          OPEN      EMRVISA3,"emrvisaf"
          OPEN      EMRICDA1,"emricdaf"
          OPEN      EMRHISA1,"emrhisaf"
          OPEN      EMRGRCA1,"emrgrcaf"
          OPEN      EMRMTXA1,"emrmtxaf"
          OPEN      EMRMTXA3,"emrmtxaf"
          OPEN      EMRPROA1,"emrproaf"
          OPEN      EMRVCDA1,"emrvcdaf"
          OPEN      EMRVDGA1,"emrvdgaf"
          OPEN      EMRVPRA1,"emrvpraf"
          OPEN      IBAPOST1,"ibapostf"
          OPEN      IBAPOST2,"ibapostf"
          OPEN      PATATRA1,"patatraf"
          OPEN      PATCODE1,"patcodes"
          OPEN      PATDADA1,"patdadaf"
          OPEN      PATHSPA1,"pathspaf"
          OPEN      PATI10D1,"pati10df"
          OPEN      PATVADA1,"patvadaf"
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATWVET1,"patwvetf"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PMSPX2A1,"pmspx2af"
          OPEN      PMSVX1A1,"pmsvx1af"
          OPEN      PMSHCPA1,"pmshcpaf"
          OPEN      PMSCCDA1,"pmsccdaf"
          READ      CONTROLF,TEN;*54,CFILENO
          READ      CONTROLF,EIGHTY9;*102,EMCNUDFA,*104,EMCNUDFB,*106,EMCNUDFC:
                                     *108,EMCNUDDA,*110,EMCNUDTA,*112,EMCNUDFD:
                                     *114,EMCNUDFE,*116,EMCNUDFF,*118,EMCNUDFG:
                                     *120,EMCNUDFH,*122,EMCNUDXA,*124,EMCNUDXB:
                                     *126,EMCNUDFI,*128,EMCNUDFJ,*130,EMCNUDFK:
                                     *140,EMCNUDXC,*142,EMCNUDXD
          READ      CONTROLF,NINTY8;*81,PTCNHCOD
          MOVE      "   91",AUDTSECT

          READ      CONTROLF,AUDTSECT;*179,CWEBROOT   * HTML Root directory
          READ      CONTROLF,HUNDRED4;RSCNEXT  * Ouput Extract directory
          STRIP     CWEBROOT
          STRIP     RSCNEXT
.
          CALL      IBACLOCK
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
.
          COMPARE   ZERO,VEMDEXTR
          GOTO      INIT5000 IF EQUAL
.
          PACK      EXTPATH,SP70,SP70
....      PACK      EXTPATH,CWEBROOT,RSCNEXT,EXTFILNM,TXTEXT,SP70
          PACK      EXTPATH,RSCNEXT,EXTFILNM,TXTEXT,SP70
          SQUEEZE   EXTPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      XXTRACT1,EXTPATH
          TRAPCLR   IO
.
          COMPARE   TWO,RESUBMIT
          GOTO      INIT9000 IF NOT EQUAL
.
          IF        OVRCD=0
            CLOSE     XXTRACT1
            PACK      REMFILE,SP70,SP70
            CLEAR     REMFILE
            APPEND    "rm ",REMFILE
            APPEND    EXTPATH,REMFILE
            APPEND    ".txt",REMFILE
            RESET     REMFILE
            EXECUTE   REMFILE,TASKID
          ENDIF
.
          PREP      XXTRACT1,EXTPATH
.
INIT5000  
.          COMPARE   ZERO,VISSEXTR
.          GOTO      INIT9000 IF EQUAL
..
.          PACK      EXTPATH,SP70,SP70
.....      PACK      EXTPATH,CWEBROOT,RSCNEXT,VISFILNM,DATEXT,SP70
.          PACK      EXTPATH,RSCNEXT,VISFILNM,DATEXT,SP70
.          SQUEEZE   EXTPATH
.          MOVE      ZERO,OVRCD
.          TRAP      OVERCOND IF IO
.          OPEN      VISSFILE,EXTPATH
.          TRAPCLR   IO
..
.          COMPARE   TWO,RESUBMIT
.          GOTO      INIT9000 IF NOT EQUAL
..
.          IF        OVRCD=0
.            CLOSE     VISSFILE
.            PACK      REMFILE,SP70,SP70
.            CLEAR     REMFILE
.            APPEND    "rm ",REMFILE
.            APPEND    EXTPATH,REMFILE
.            APPEND    ".txt",REMFILE
.            RESET     REMFILE
.            EXECUTE   REMFILE,TASKID
.          ENDIF
..
.          PREP      VISSFILE,EXTPATH
.
INIT9000  CALL      HEAD0000
.
INIT9999  RETURN
.------------------------------------------------------------
. Heading for error report
.------------------------------------------------------------
HEAD0000  CALL      IBACLOCK
          PACK      CDATE,CDD,SLASH,CMM,SLASH,CCC,CYY
          REP       " 0",CDATE
          CALL      HEAD132
          UNPACK    STARTDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,FDATE1
          UNPACK    FINISHDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,FDATE2
          PRINT     *N,*40,"Date Range : ",FDATE1," to ",FDATE2
          COMPARE   TWO,RESUBMIT
          GOTO      HEAD5000 IF NOT EQUAL
.
          COMPARE   ZERO,VEMDEXTR
          GOTO      HEAD1000 IF EQUAL
.
....      PACK      EXTPATH,CWEBROOT,RSCNEXT,EXTFILNM,TXTEXT,SP70
          PACK      EXTPATH,RSCNEXT,EXTFILNM,TXTEXT,SP70
          SQUEEZE   EXTPATH
          PRINT     *N,*40,"VEMD File Name: ",EXTPATH
.
HEAD1000  
.          COMPARE   ZERO,VISSEXTR
.          GOTO      HEAD5000 IF EQUAL
..
.....      PACK      EXTPATH,CWEBROOT,RSCNEXT,VISFILNM,DATEXT,SP70
.          PACK      EXTPATH,RSCNEXT,VISFILNM,DATEXT,SP70
.          SQUEEZE   EXTPATH
.          PRINT     *N,*40,"VISS File Name: ",EXTPATH
..
HEAD5000  PRINT     *N,"--------------------------------------------":
                       "--------------------------------------------":
                       "--------------------------------------------":
                    *N,*2,"Visit No",*12,"   U/R No",*25,"W/R":
                       *30,"Error Message":
                    *N,"--------------------------------------------":
                       "--------------------------------------------":
                       "--------------------------------------------"
          MOVE      SIX,CLNO
.
HEAD9999  RETURN
.------------------------------------------------------------
. Clear Parameters
.------------------------------------------------------------
CLRPAR00  MOVE      ZERO,SOPTION 
          MOVE      SP70,STARTDAT
          MOVE      SP70,FINISHDT
          MOVE      SP70,EXTFILNM
          MOVE      ZERO,RESUBMIT
.          MOVE      SP70,VISFILNM
.          MOVE      ZERO,VISSEXTR
          MOVE      ZERO,VEMDEXTR
          MOVE      ZERO,PBREPORT
.
CLRPAR99  RETURN
.------------------------------------------------------------
. Validate VEMD submission
.------------------------------------------------------------
VALID000  MOVE      ZERO,ERRORCNT
          MOVE      ZERO,WARNCNT
          MOVE      ZERO,PATCOUNT
          CALL      ARRCLR00
.
          CALL      CAMPUS00
.
          PACK      KEY9,THREE,SP9
          CALL      RSEMVIS2                     * position on discharged pts.
VALID100  CALL      RKEMVIS2                     * read next record
          BRANCH    OVRCD,VALID900               * eof - finished
.
          COMPARE   THREE,EMVISTAT
          GOTO      VALID900 IF NOT EQUAL
.
          REP       " 0",EMVIDDAT
          REP       " 0",STARTDAT
          REP       " 0",FINISHDT
.
          MOVE      EMVIDDAT,DATE1
          MOVE      STARTDAT,DATE2
          MOVE      FINISHDT,DATE3
.
          IF        DATE1<DATE2 | DATE1>DATE3  
            GOTO      VALID100
          ENDIF
.
          MATCH     SP70,EMVIUC13
          IF        !@EQUAL
            PACK      KEY5,CATEE,EMVIUC13,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MATCH     "X",TCINDC5              * Exclude type of visit from
              GOTO      VALID100 IF EQUAL        * VEMD reporting. eg COVID-19
            ENDIF
          ENDIF
.
          CALL      PROC0000
          BRANCH    EXIT,VALID100
          ADD       ONE,PATCOUNT
          GOTO      VALID100
.
VALID900  COMPARE   CLNO,THIRTY
          CALL      HEAD0000 IF EQUAL
.
          PRINT     *N,"--------------------------------------------":
                       "--------------------------------------------":
                       "--------------------------------------------":
                    *N,*N,"*** End of Error Report *** Total Rejections Found:":
                       ERRORCNT," Total Warnings:",WARNCNT:
                       " Total Records Processed:",PATCOUNT: 
                       *N:
                    *N,"--------------------------------------------":
                       "--------------------------------------------":
                       "--------------------------------------------"
          GOTO      VALID999
.
VALID999  RETURN
.------------------------------------------------------------
. Clear Extract Variables
.------------------------------------------------------------
CLER0000  MOVE      ZERO,COMBFLAG
          MOVE      ZERO,INJFLAG
          MOVE      SP70,XUNIQUE
          MOVE      SP70,XPATNTID
          MOVE      SP70,XMEDINUM
          MOVE      SP70,XMEDISUF
          MOVE      SP70,XPATSEX
          MOVE      SP70,XBRTHDAT
          MOVE      SP70,XCNTRY
          MOVE      SP70,XINDIG
          MOVE      SP70,XINTRREQ
          MOVE      SP70,XPRELANG
          MOVE      SP70,XPRELAN4
          MOVE      SP70,XLOCAL
          MOVE      SP70,XPOSTCOD
          MOVE      SP70,XTYPACCM
          MOVE      SP70,XARRMODE
          MOVE      SP70,XREFDBY
          MOVE      SP70,XTSOURCE
          MOVE      SP70,XVISTYP
          MOVE      SP70,XCOMPST
          MOVE      SP70,XDVANUM
          MOVE      SP70,XAMBCASE
          MOVE      SP70,XAMBLCAS
          MOVE      SP70,XARRDATE
          MOVE      SP70,XARRTIME
          MOVE      SP70,XTRIDATE
          MOVE      SP4,XTRITIME
          MOVE      SP70,XTRIGCAT
          MOVE      SP70,XNURSDAT
          MOVE      SP70,XNURSTIM
          MOVE      SP70,XDOCTDAT
          MOVE      SP70,XDOCTTIM
          MOVE      SP70,XMENHDAT
          MOVE      SP70,XMENHTIM
          MOVE      SP70,XPROCDUR
          MOVE      SP70,XINPBDAT
          MOVE      SP70,XINPBTIM
          MOVE      SP70,XDADMDAT
          MOVE      SP70,XDADMTIM
          MOVE      SP70,XDEPDATE
          MOVE      SP70,XDEPTIME
          MOVE      SP70,XDEPSTAT
          MOVE      SP70,ODEPSTAT
          MOVE      SP70,XTDESTN
          MOVE      SP70,XREFDEPT
          MOVE      SP70,XTREASON
          MOVE      SP70,XDEPTMOD
          MOVE      SP70,XPRIDIAG
          MOVE      SP70,ICDDIAGN
          MOVE      SP70,XADDIAG1
          MOVE      SP70,XADDIAG2
          MOVE      SP70,XINJURY
          MOVE      SP70,XBREGION
          PACK      XINJEVNT,SP70,SP70
          MOVE      SP70,XINJCAUS
          MOVE      SP70,XHINTENT
          MOVE      SP70,XINJPLAC
          MOVE      SP70,XINJACTV
.         MOVE      SP70,XINJPROD
.         MOVE      SP70,XINJSAFE
          MOVE      SP70,INJDESC1
          MOVE      SP70,INJDESC2
          MOVE      SP70,PRODDESC
          MOVE      SP70,SAFEDESC
          MOVE      SP70,XAATDDAT
          MOVE      SP70,XAATDTIM
          MOVE      SP70,XAHOVDAT
          MOVE      SP70,XAHOVTIM
          MOVE      SP70,XADVCPLA
          MOVE      SP70,XGIVNAME
          MOVE      SP70,XSURNAME
          MOVE      SP70,XSERVTYP
          MOVE      SP70,XPATLOCN
          MOVE      SP70,XGENDER
          MOVE      SP70,XNDISID
          MOVE      SP70,XFUNDSRC
.
CLER9999  RETURN
.
.----------------------------------------------------------------------
. Perform main processing
.----------------------------------------------------------------------
CAMPUS00  COMPARE   ZERO,IBCNMHOS                 * multi hospital?
          IF        @EQUAL
            PACK      XCAMPUS,CFILENO,SP70
          ELSE
            PACK      KEY3,VEMDMHOS,SP70
            CALL      RDPTHSP1
.
            PACK      XCAMPUS,PTHSHDPC,SP70
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      CAMPUS99
.
CAMPUS99  RETURN
.----------------------------------------------------------------------
. Perform main processing
.----------------------------------------------------------------------
PROC0000  CALL      CLER0000                     * initialise all data fields
.
. ------- visit number ----------
.
PROC0100  PACK      DIM9,EMVIADMN,SP70
          RJUSTIFY  DIM9
          MOVE      DIM9,XUNIQUE
          REP       " 0",XUNIQUE                 * right just, zero filled
.
. ------- patient identifier ----------
.
          MOVE      EMVIURNO,KEY8
          CALL      RDMAST1                      * patient master record found ?
          IF        OVRCD=1                      
            GOTO      PROC9990                   * no - ignore
          ENDIF
          CALL      RDPMPX21
          IF        OVRCD=1                      
            GOTO      PROC9995                   * no - ignore
          ENDIF
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDPMVX11
          IF        OVRCD=1
            GOTO      PROC9996                   * no - ignore
          ENDIF
.
          COMPARE   ZERO,IBCNMHOS
          IF        !@EQUAL          
            MATCH     VEMDMHOS,PMVXMHOS
            GOTO      PROC9990 IF NOT EQUAL
          ENDIF
.
          CALL      SRVT0000                     * Get service type and location
.
          CLEAR     XPATNTID
          APPEND    SP2,XPATNTID
          APPEND    EMVIURNO,XPATNTID
          RESET     XPATNTID
          REP       " 0",XPATNTID
.
. Duplicate attendance edit E025
.
          PACK      SAVEKEY9,EMVISTAT,EMVIADMN,SP70   * Save driving loop key
.
          CALL      DUPA0000
.
          PACK      KEY9,SAVEKEY9,SP70                * Restore loop position
          CALL      RDEMVIS2
          BRANCH    OVRCD,PROC9996
.
. Advance Care Plan Documented
.
          PACK      KEY5,CODEP9,PMPXUSR9,SP70
          CALL      RDCODE1
          IF        OVRCD<>1
            PACK      XADVCPLA,THCSCOD 
          ENDIF
.
. ------- medicare number -------
.
          MOVE      PTMXMCCD,DIM2
          MOVE      ZERO,F2
          SQUEEZE   DIM2                                                *I-50763
          MOVE      DIM2,F2
          MOVE      F2,F1
.
          COMPARE   ZERO,F1
          IF        @EQUAL
            CALL      IBACLOCK
            PACK      AGEDATE,CCC,CYY,CMM,CDD
            REP       " 0",AGEDATE
            CALL      CALCAGE
            IF        PSAGEYRS>0
              MOVE      ONE,F1
..              CLEAR     ERRORMSG
..              APPEND    "E086:INVALID COMBINATION MEDICARE CODE ",ERRORMSG
..              APPEND    "AND DATE OF BIRTH",ERRORMSG
..              RESET     ERRORMSG
..              MOVE      ANSR,ERRTYPE
..              CALL      PRTERR00
            ENDIF
          ENDIF
.
          CLEAR     XMEDINUM
          APPEND    PMEDI,XMEDINUM
          APPEND    F1,XMEDINUM
          RESET     XMEDINUM
.
. ------- medicare suffix ---------
.
          CALL      MSFX0000
          REP       UPPLOW,XMEDISUF
.
          MATCH     SP70,XMEDISUF
          IF        @EQUAL
            MOVE      "E087:MEDICARE SUFFIX BLANK AFTER",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
. ------- medicare number validation ---------
.
          MATCH     SP70,XMEDINUM              * blank?
          IF        @EQUAL
            GOTO      PROC0110
          ENDIF
.
          TYPE      XMEDINUM                   * numeric?
          IF        !@EQUAL
            MOVE      "E081:MEDICARE NUMBER INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0110
          ENDIF
.
          SQUEEZE   XMEDINUM
          MOVELPTR  XMEDINUM,F2
          COMPARE   F2,TEN1
          IF        !@EQUAL
            MOVE      "E081:MEDICARE NUMBER INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
PROC0110  MATCH     SP70,PBDATE
          IF        @EQUAL
            MOVE      "E095:DATE OF BIRTH BLANK",ERRORMSG
            CALL      PRTERR00
            MOVE      ANSR,ERRTYPE
            GOTO      PROC0160
          ENDIF
.
          CALL      IBACLOCK
          PACK      AGEDATE,CCC,CYY,CMM,CDD
          REP       " 0",AGEDATE
          CALL      CALCAGE
.
          MOVE      XMEDINUM,DIM11
          REP       " 0",DIM11
          MOVE      DIM11,F11
          COMPARE   ZERO,F11
          GOTO      PROC0150 IF NOT EQUAL
.
          COMPARE   ZERO,PSAGEYRS
          IF        @EQUAL
            COMPARE   SIX,PSAGEMNT
            IF        @LESS
.             CLEAR     ERRORMSG
.             APPEND    "E089:MEDICARE CODE & DOB ",ERRORMSG
.             APPEND    "COMBINATION INVALID",ERRORMSG
.             RESET     ERRORMSG
.             MOVE      ANSW,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
.
. ------- date of birth ---------
PROC0150  TYPE      PBDATE
          IF        !@EQUAL
            MOVE      "E096:DATE OF BIRTH INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
          MOVE      PBDATE,DATE1
          MOVE      EMVIDATE,DATE2
          COMPARE   DATE1,DATE2
          IF        @LESS
            MOVE      "E097:ARRIVAL DATE BEFORE DATE OF BIRTH",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF 
.                                                     * I-49808
          MOVE      EMVIDATE,AGEDATE
          CALL      CALCAGE
          IF        PSAGEYRS>105
            CLEAR     ERRORMSG
            APPEND    "E372:INVALID AGE",ERRORMSG
            MOVE      ANSW,ERRTYPE
            RESET     ERRORMSG
            CALL      PRTERR00
          ENDIF
.                                                     * end I-VEMD-2004
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          PACK      XBRTHDAT,CDAY,CMON,CCENT,CYEAR
          REP       " 0",XBRTHDAT
          PACK      XESTDOB,ANSA,ANSA,ANSA,SP70
          MATCH     "1",PMPXEDOB
          IF        @EQUAL
            PACK      XESTDOB,ANSE,ANSE,ANSE,SP70
          ENDIF
.
. ----------- DVA number ---------
.
. Below code  is not executed as part of VEMD 2025-2026 Stat.
. DVA number is reported in FUND0000 as per VEMD 2025-2026 Stat
PROC0160  COMPARE   ONE,DOYR2025
          GOTO      PROC0200 IF EQUAL
.
          PACK      KEY5,CODECL,EMVICOMP,SP70
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      "E146:COMPENSABLE STATUS CODE INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0200
          ENDIF
.
          UNPACK    THCSCOD,DIM1,DIM1A
          MATCH     "2",DIM1A         * Report Names for DVA
          IF        @EQUAL
            MOVE      PGNAME,XGIVNAME
            MOVE      PSNAME,XSURNAME
          ENDIF
.
          MATCH     "V",TCINDC1       * Check for Veterans Affairs Indicator
          GOTO      PROC0161 IF EQUAL
.
          MATCH     "V",TCINDC2
          GOTO      PROC0161 IF EQUAL

          MATCH     "V",TCINDC3
          GOTO      PROC0161 IF EQUAL
.
          MATCH     "V",TCINDC4
          GOTO      PROC0161 IF EQUAL
.
          MATCH     "V",TCINDC5
          GOTO      PROC0161 IF EQUAL
.
          GOTO      PROC0200
.
PROC0161  PACK      KEY8,EMVIADMN,SP70
          CALL      RDWVET1
          BRANCH    OVRCD,PROC0162
.
          MOVE      VCLMNO,XDVANUM      * Set DVA Number
          MATCH     SP70,XDVANUM
          GOTO      PROC0162 IF EQUAL
          GOTO      PROC0162 IF EOS
.
          GOTO      PROC0200
.
.
PROC0162  COMPARE   ONE,DOYR2025
          GOTO      PROC0200 IF EQUAL
.
          CLEAR     ERRORMSG
          APPEND    "E079:COMPENSABLE STATUS AND DVA NUMBER",ERRORMSG
          APPEND    " COMBINATION INVALID",ERRORMSG
          RESET     ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
.
. ------- patient sex -----------
.
PROC0200  MATCH     SP70,PSEX
          IF        @EQUAL
.           MOVE      "E090:SEX CODE BLANK",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
            GOTO      PROC0210
          ENDIF
.
.
          MOVE      PSEX,DSEXCHAR
          CALL      SEXDSC00                * get sex description (in IBACOMN)
.                                           *       returns DSEXDESC & DSEXNO
          MOVE      DSEXNO,XPATSEX
.
.         Valid for Patient Sex Code 1,2 and 5
.
          MATCH     JAN2025,TODAY
          IF        @LESS
            IF         DSEXNO = 3 | DSEXNO = 4
              MOVE       5,DSEXNO
              MOVE       DSEXNO,XPATSEX
            ENDIF
          ENDIF
.
          MATCH     "3",XPATSEX
          IF        @EQUAL
            CLEAR     ERRORMSG
            APPEND    "E090:SEX INVALID ",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0299
          ENDIF
.
          MATCH     "4",XPATSEX
          IF        @EQUAL
            CLEAR     ERRORMSG
            APPEND    "E090:SEX INVALID ",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0299
          ENDIF
.
          IF        DSEXNO > 5
            CLEAR     ERRORMSG
            APPEND    "E090:SEX INVALID ",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
          GOTO        PROC0299
.
PROC0299
.                                                * end I-49808
.
. ------- patient gender  -----------
.
          PACK      KEY5,ANSG,SP1,PSEX,SP70      * Sex at birth  invalid ?
          CALL      RDCODE1
          BRANCH    OVRCD,PROC0210
.
          MATCH     "G",TCINDC11                 * Trigger idnentifying gender
          GOTO      PROC0210 IF NOT EQUAL
.
          MATCH     SP70,PMPXUCC4                *  Gender blank ?
          GOTO      PROC0210 IF EQUAL
.
          PACK      KEY5,CATGI,PMPXUCC4,SP70     * Gender code invalid ?
          CALL      RDCODE1
          IF        OVRCD=1
            CLEAR     ERRORMSG
            APPEND    "E415:GENDER CODE INVALID",ERRORMSG
            ENDSET    ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0210
          ENDIF

          MATCH     SP1,THCSCOD                  * HDP position 1
          IF        @EQUAL
            CLEAR     ERRORMSG
            MOVE      "E415:GENDER CODE INVALID",ERRORMSG
            ENDSET    ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0210
          ENDIF
.
          UNPACK    THCSCOD,XGENDER               * valid gender for VINAH ?
.
          MATCH     "1",XGENDER                   * Man, Boy or Male
          GOTO      PROC0210 IF EQUAL
.
          MATCH     "2",XGENDER                   * Woman, Girl or Female
          GOTO      PROC0210 IF EQUAL
.
          MATCH     "3",XGENDER                   * Non-Binary
          GOTO      PROC0210 IF EQUAL
.
          MATCH     "4",XGENDER                   * Different Term
          GOTO      PROC0210 IF EQUAL
.
          MATCH     "5",XGENDER                   * Preferred Not To Answer
          GOTO      PROC0210 IF EQUAL
.
          MATCH     "9",XGENDER                   * Not Stated
          GOTO      PROC0210 IF EQUAL
.
          CLEAR     ERRORMSG
          MOVE      "E415:GENDER CODE INVALID",ERRORMSG
          ENDSET    ERRORMSG
          RESET     ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
          GOTO      PROC0210

. ------- country of birth -----------
.
PROC0210  PACK      KEY5,CODEC,PCONT
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD=1
            MOVE      "E101:COUNTRY OF BIRTH CODE INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
          MOVE      PTCDNHCP,XCNTRY
.
          MATCH     SP70,XCNTRY
          IF        @EQUAL
.           MOVE      "E100:COUNTRY OF BIRTH BLANK",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          MATCH     "0001",XCNTRY
          GOTO      PROC0215 IF EQUAL
.
          MATCH     "0002",XCNTRY
          GOTO      PROC0215 IF EQUAL
.
          MATCH     "1600",XCNTRY
          GOTO      PROC0215 IF EQUAL
.
          MATCH     "1601",XCNTRY
          GOTO      PROC0215 IF EQUAL
.
          MATCH     "1602",XCNTRY
          GOTO      PROC0215 IF EQUAL
.         
          MATCH     "1603",XCNTRY
          GOTO      PROC0215 IF EQUAL
.
          MATCH     "1604",XCNTRY
          GOTO      PROC0215 IF EQUAL
.
          MATCH     "1605",XCNTRY
          GOTO      PROC0215 IF EQUAL
.
          MATCH     "1606",XCNTRY
          GOTO      PROC0215 IF EQUAL
.
          MATCH     "1607",XCNTRY
          GOTO      PROC0215 IF EQUAL
.
          GOTO      PROC0217
.
PROC0215  
.         MOVE      "E102:UNUSUAL COUNTRY OF BIRTH",ERRORMSG
.         MOVE      ANSW,ERRTYPE
.         CALL      PRTERR00
.
PROC0217  MATCH     EMVIDATE,PBDATE
          IF        @EQUAL
            MOVE      THCSCOD,DIM4
            MATCH     "1102",DIM4
            IF        !@EQUAL
              MATCH     "1101",DIM4
              IF        !@EQUAL
                MATCH     "1104",DIM4
                IF        !@EQUAL
.                 CLEAR     ERRORMSG
.                 APPEND    "E103:Invalid Combination of Date of ",ERRORMSG
.                 APPEND    "Birth, Arrival Date and Country of ",ERRORMSG
.                 APPEND    "Birth",ERRORMSG
.                 APPEND    ".",ERRORMSG
.                 RESET     ERRORMSG
.                 MOVE      ANSW,ERRTYPE
.                 CALL      PRTERR00
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
.
. ------- indigenous status ---------
.
          MATCH     SP70,PMVXABRG
          IF        @EQUAL
           GOTO      PROC0220
          ENDIF
.
          PACK      KEY5,ANSV,ANSA,PMVXABRG
          CALL      RDCODE1
          IF        OVRCD=1
            GOTO      PROC0220
          ENDIF
.
PROC0218  UNPACK    THCSCOD,DIM1,DIM1A
          MATCH     "1",DIM1A
          IF        @EQUAL
            MOVE      XCNTRY,DIM2
            MATCH     "11",DIM2
            IF        !@EQUAL
              MATCH     "12",DIM2
              IF        !@EQUAL
.               MOVE      "E107:INDIGENOUS BUT NOT AUSTRALIAN BORN",ERRORMSG
.               MOVE      ANSW,ERRTYPE
.               CALL      PRTERR00
              ENDIF
            ENDIF
          ENDIF
.
PROC0219  UNPACK    THCSCOD,DIM1,XINDIG
.
. ------- preferred language ----
.
PROC0220  MATCH     SP70,PMVXLNG1
          IF        @EQUAL
            MOVE      "98",XPRELANG
            MOVE      "0002",XPRELAN4
            GOTO      PROC0230
...         MOVE      "E110:PREFERRED LANGUAGE INVALID",ERRORMSG
...         MOVE      ANSR,ERRTYPE
...         CALL      PRTERR00
...         GOTO      PROC0230
          ENDIF
.
          PACK      KEY5,ANSL,ANSA,PMVXLNG1
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      "E110:PREFERRED LANGUAGE INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0230
          ENDIF
.
PROC0227  MOVE      ZERO,F2
          MOVE      ZERO,F4
          SQUEEZE   THCSCOD
          MOVE      THCSCOD,F4
          MOVE      F4,F2
          MOVE      F2,XPRELANG
          REP       " 0",XPRELANG
.
          MOVE      ZERO,F4
          SQUEEZE   PTCDNHCP
          MOVE      PTCDNHCP,F4
          MOVE      F4,XPRELAN4
          REP       " 0",XPRELAN4
.
. ------- locality and postcode ----------------
.
PROC0230  MATCH     SP70,PPOST
          IF        @EQUAL
.           MOVE      "E120:POSTCODE BLANK",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
            GOTO      PROC0310
          ENDIF
.
          MATCH     "1000",PPOST
          IF        @EQUAL
            MOVE      SP70,PSUBRB
            PACK      XLOCAL,SP70
            PACK      XPOSTCOD,PPOST
            GOTO      PROC0328
          ENDIF
.
          MATCH     "9988",PPOST
          IF        @EQUAL
            MOVE      SP70,PSUBRB
            PACK      XLOCAL,SP70
            PACK      XPOSTCOD,PPOST
            GOTO      PROC0328
          ENDIF
.
          MATCH     SP70,PSUBRB
          GOTO      PROC0300 IF NOT EQUAL
.
.         MOVE      "E115:POSTCODE & LOCALITY COMBINATION INVALID",ERRORMSG
.         MOVE      ANSR,ERRTYPE                                       *C-52753
.         CALL      PRTERR00
          GOTO      PROC0320
.
.******************************************** Start of changes         *C-51411
PROC0300  MOVE      SP1,ANS                 * validate the Post Code
.
          MATCH     "1000",PPOST
          IF        @EQUAL
.           MOVE      "E115:POSTCODE & LOCALITY COMBINATION INVALID",ERRORMSG
.           MOVE      ANSR,ERRTYPE                                     *C-52753
.           CALL      PRTERR00
          ENDIF
.
          MATCH     "9988",PPOST
          IF        @EQUAL
.           MOVE      "E115:POSTCODE & LOCALITY COMBINATION INVALID",ERRORMSG
.           MOVE      ANSR,ERRTYPE                                     *C-52753
.           CALL      PRTERR00
          ENDIF
.
.                                           * validate post code
          PACK      KEY56,PPOST,SP70                                  *C-240184
          CALL      RSIBPOS1
.
PROC0302  CALL      RKIBPOS1
          BRANCH    OVRCD,PROC0305
          MATCH     IBPOPCOD,PPOST
.         GOTO      PROC0320 IF EQUAL       * this is a valid Post Code
          GOTO      PROC0305 IF NOT EQUAL                             * I-49808
          REP       UPPLOW,PSUBRB
          MATCH     IBPOSUBR,PSUBRB
          GOTO      PROC0302 IF NOT EQUAL
          GOTO      PROC0320                                      * end I-49808
.
PROC0305  
.         MOVE      "E115:POSTCODE/LOCALITY COMBINATION INVALID",ERRORMSG
..         MOVE      "E121:POSTCODE INVALID",ERRORMSG                  *I-52753
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      PROC0310
.
.                                           * invalid post code, validate suburb
PROC0310  PACK      KEY56,PSUBRB,SP70                                 *C-240184
          CALL      RSIBPOS2
.
          CALL      RKIBPOS2
          BRANCH    OVRCD,PROC0315
          MATCH     IBPOSUBR,KEY56
          IF        @EQUAL
            MOVE      IBPOPCOD,PPOST        * store valid post code
            GOTO      PROC0320
          ENDIF
.                                           * check if all upper case
          REP       UPPLOW,PSUBRB
          PACK      KEY56,PSUBRB,SP70                                 *C-240184
          CALL      RSIBPOS2
.
          CALL      RKIBPOS2
          MATCH     PSUBRB,IBPOSUBR
          IF        @EQUAL
            MOVE      IBPOPCOD,PPOST        * store valid post code
            GOTO      PROC0320
          ENDIF
.
PROC0315  
.         MOVE      "E115:POSTCODE & LOCALITY COMBINATION INVALID",ERRORMSG
.         MOVE      ANSR,ERRTYPE                                       *I-52753
.         CALL      PRTERR00
.
          PACK      XLOCAL,PSUBRB
          PACK      XPOSTCOD,PPOST
          GOTO      PROC0325                * error location & post code
.
.
PROC0320  PACK      XPOSTCOD,PPOST,SP70
          PACK      XLOCAL,PSUBRB,SP70
.                                                         * I-49808
          MATCH     "OS",IBPOSTAT 
          IF        @EQUAL
            PACK      XLOCAL,PPOST,SP70
            MOVE      "8888",XPOSTCOD
          ENDIF
.********************************************   End of changes         *C-51411
.                                                         * end I-49808
.
PROC0325  STRIP     XLOCAL
          MOVELPTR  XLOCAL,F2 
          COMPARE   TWENTY,F2
          IF        !@LESS
.           MOVE      "E116:LOCALITY INVALID",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          PACK      KEY56,PPOST,PSUBRB,SP10,PADD4,SP70                *C-240184
          CALL      RDIBPOS1
          IF        OVRCD = 1
            PACK      KEY56,PPOST,PSUBRB,SP70
            CALL      RSIBPOS1
            CALL      RKIBPOS1
            BRANCH    OVRCD,PROC0327
.         
            MATCH     PPOST,IBPOPCOD
            GOTO      PROC0327 IF NOT EQUAL
            MATCH     PSUBRB,IBPOSUBR
            GOTO      PROC0328 IF EQUAL
.
            MOVE      IBPOSUBR,XLOCAL
            MATCH     "OS",IBPOSTAT
            IF        @EQUAL
              MOVE      IBPOPCOD,XLOCAL
              MOVE      "8888",XPOSTCOD
            ENDIF
          ENDIF
          GOTO      PROC0328
.
PROC0327  
.         MOVE      "E115:POSTCODE & LOCALITY COMBINATION INVALID",ERRORMSG
.         MOVE      ANSR,ERRTYPE                                       *C-52753
.         CALL      PRTERR00
          GOTO      PROC0328
.
. ------- arrival transport mode -----
.
PROC0328  MATCH     "2",XSERVTYP               * Telehealth
          GOTO      PROC0330 IF EQUAL
.
          MATCH     "6",XSERVTYP               * Virtual Care
          GOTO      PROC0330 IF EQUAL
.
          MATCH     SP70,EMVIMODE
          IF        @EQUAL | @EOS
            MOVE      "E125:ARRIVAL TRANSPORT MODE INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0330
          ENDIF
.
          PACK      KEY5,CODEEA,EMVIMODE
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD=1
            MOVE      "E125:ARRIVAL TRANSPORT MODE INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
          PACK      XARRMODE,THCSCOD
.
          MATCH     "1 ",XARRMODE         
          GOTO      PROC0330 IF EQUAL
.
          MATCH     "2",XARRMODE
          GOTO      PROC0330 IF EQUAL
.
          MATCH     "3",XARRMODE
          GOTO      PROC0330 IF EQUAL
.
          MATCH     "6",XARRMODE
          GOTO      PROC0330 IF EQUAL
.
          MATCH     "8",XARRMODE
          GOTO      PROC0330 IF EQUAL
.
          MATCH     "9",XARRMODE
          GOTO      PROC0330 IF EQUAL
.
          MATCH     "10",XARRMODE
          GOTO      PROC0330 IF EQUAL
.
          MATCH     "11",XARRMODE
          GOTO      PROC0330 IF EQUAL
.
          MATCH     "99",XARRMODE
          GOTO      PROC0330 IF EQUAL
.
          MOVE      "E125:ARRIVAL TRANSPORT MODE INVALID",ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
.
. ------- referred by -----------
.
PROC0330  MATCH     "2",XSERVTYP               * Telehealth
          GOTO      PROC0340 IF EQUAL
.
          MATCH     SP70,EMVIUC21
          IF        @EQUAL | @EOS
.           MOVE      "E130:REFERRED BY INVALID",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
            GOTO      PROC0340
          ENDIF
.
          PACK      KEY5,CATEM,EMVIUC21
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD=1
.           MOVE      "E131:REFERRED INVALID",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
            GOTO      PROC0340
          ENDIF
.
          MOVE      THCSCOD,XREFDBY
.
.          COMPARE   ONE,DOYR2023
.          GOTO      PROC0340 IF NOT EQUAL

          MATCH     "24",XREFDBY
          GOTO      PROC0340 IF NOT EQUAL      * validation only if AMB Vic
         
          MATCH     "6",XSERVTYP               * virtual
          IF        @EQUAL
            GOTO    PROC0340
          ENDIF

          CLEAR     ERRORMSG
          APPEND    "E414:REFERRED BY AND SERVICE TYPE ",ERRORMSG
          APPEND    "COMBINATION INVALID",ERRORMSG
          RESET     ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
          GOTO      PROC0340

.
. ------- transfer source -------
.
PROC0340  MATCH     SP70,EMVITSRC
          GOTO      PROC0405 IF EQUAL
.
          PACK      KEY5,EMVITSRC,SP70
          CALL      RDPTVAD1
          IF        OVRCD=1
            MOVE      "E135:TRANSFER SOURCE CODE INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0405
          ENDIF
.
          MATCH     "6",XREFDBY
          IF        @EQUAL
            MATCH     SP70,EMVITSRC
            IF        @EQUAL | @EOS
.             CLEAR     ERRORMSG
.             APPEND    "E136:REFERRED BY & TRANSFER SOURCE ",ERRORMSG
.             APPEND    "COMBINATION INVALID",ERRORMSG 
.             RESET     ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
              GOTO      PROC0400
            ENDIF
          ENDIF
.
PROC0350  MOVE      ZERO,F2
          MOVE      SP70,DIM2
          MOVE      XREFDBY,DIM2
          SQUEEZE   DIM2
          MOVE      DIM2,F2
.
PROC0380  IF        F2=0|F2=1|F2=2|F2=4|F2=8|F2=14|F2=15|F2=16|F2=17|F2=18|F2=19
            GOTO      PROC0390
          ENDIF
          GOTO      PROC0400
.
PROC0390  MATCH     SP70,EMVITSRC
          IF        !@EQUAL & !@EOS
.           CLEAR     ERRORMSG
.           APPEND    "E136:REFERRED BY & TRANSFER SOURCE ",ERRORMSG
.           APPEND    "COMBINATION INVALID",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
PROC0400  MATCH     EMVITSRC,XCAMPUS
          IF        @EQUAL
.           CLEAR     ERRORMSG
.           APPEND    "E137:TRANSFER SOURCE/DESTINATION MATCHES",ERRORMSG
.           APPEND    " CAMPUS CODE",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.                                                * I-49808
          MATCH     "9999",EMVITSRC
          IF        @EQUAL
.           CLEAR     ERRORMSG
.           APPEND    "E371:TRANSFER SOURCE EQUALS '9999' - UNKNOWN",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSW,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.                                                * end I-49808
          PACK      XTSOURCE,EMVITSRC
.
. ------- type of visit ---------
.
PROC0405  MATCH     SP70,EMVIUC13
          IF        @EQUAL
            MOVE      "E140:TYPE OF VISIT INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0410
          ENDIF
.
          PACK      KEY5,CATEE,EMVIUC13
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      "E140:TYPE OF VISIT INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0410
          ENDIF
.
          PACK      XVISTYP,THCSCOD
.
. ------- compensable status --------
PROC0410  COMPARE   ONE,DOYR2025
          GOTO      PROC0413 IF EQUAL
.
PROC0413  PACK      KEY5,CODECL,EMVICOMP,SP70
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD=1
            MOVE      "E146:COMPENSABLE STATUS CODE INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0415
          ENDIF
.
          COMPARE   ONE,DOYR2025
          GOTO      PROC0415 IF EQUAL
.
          UNPACK    THCSCOD,DIM1,XCOMPST
.
.          IF        DOYR2022=1
.            MATCH     SP70,EMVICOMP
.            IF        @EQUAL | @EOS
.              MOVE      "E145:COMPENSABLE STATUS BLANK",ERRORMSG
.              MOVE      ANSR,ERRTYPE
.              CALL      PRTERR00
.              GOTO      PROC0415
.            ENDIF
.          ENDIF
.
.
.
. ------- ambulance case no. --------
.
PROC0415  PACK      EMVIAMBL,EMVIAMBL,SP70
          MATCH     SP70,EMVIAMBL
          GOTO      PROC0420 IF EQUAL
.
. commented out because EMVIAMBL is 6 characters long anyway
.
..          SQUEEZE   EMVIAMBL
..          MOVELPTR  EMVIAMBL,F1
..          COMPARE   F1,SIX
..          IF        @LESS
..            CLEAR     ERRORMSG
..            APPEND    "E150:AMBULANCE CASE NUMBER INVALID",ERRORMSG
..            APPEND    F1,ERRORMSG
..            RESET     ERRORMSG
..            MOVE      ANSR,ERRTYPE
..            CALL      PRTERR00
..          ENDIF
.
          MOVE      ZERO,XINVALID
          MOVE      EMVIAMBL,XAMBCASE
          MOVE      EMVIAMBL,XAMBLCAS
.                                                        * I-49808
          SQUEEZE   XAMBCASE
          TYPE      XAMBCASE                           * Is it numeric?
          IF        !@EQUAL
            GOTO      PROC0418
          ENDIF
.
          PACK      XAMBCASE,XAMBCASE,SP70
          PACK      XAMBLCAS,XAMBLCAS,SP70
          GOTO      PROC0420
.
PROC0418  MATCH     ANSB,XAMBCASE
          GOTO      PROC0420 IF EQUAL

          MATCH     ANSU,XAMBCASE
          GOTO      PROC0420 IF EQUAL
.
          MATCH     "ACT",XAMBCASE
          GOTO      PROC0420 IF EQUAL
.
          MATCH     "NSW",XAMBCASE
          GOTO      PROC0420 IF EQUAL
.
          MATCH     "NT",XAMBCASE
          GOTO      PROC0420 IF EQUAL
.
          MATCH     "QLD",XAMBCASE
          GOTO      PROC0420 IF EQUAL
.
          MATCH     "SA",XAMBCASE
          GOTO      PROC0420 IF EQUAL
.
          MATCH     "TAS",XAMBCASE
          GOTO      PROC0420 IF EQUAL
.
          MATCH     "WA",XAMBCASE
          GOTO      PROC0420 IF EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E150:AMBULANCE CASE NUMBER",ERRORMSG
.         APPEND    " INVALID",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.
. ------- arrival date --------
.
PROC0420  MOVE      EMVIDATE,DATE
          CALL      VALDAT00
          BRANCH    EXIT,PROC0421,PROC0422
.
          MOVE      XDATE,XARRDATE
          GOTO      PROC0430
.
PROC0421  MOVE      "E155:ARRIVAL DATE/TIME INVALID",ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
          GOTO      PROC0430
.
PROC0422  MOVE      "E155:ARRIVAL DATE/TIME INVALID",ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
          GOTO      PROC0430
.
. ------- arrival time --------
.
PROC0430  MOVE      EMVITIME,TIME
          CALL      VALTIM00
          BRANCH    EXIT,PROC0431
.
          PACK      XARRTIME,XTIME,SP70
          GOTO      PROC0435
.
PROC0431  MOVE      "E155:ARRIVAL DATE/TIME INVALID",ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
.
. ------- triage date --------
.
PROC0435  MOVE      EMVITRDT,DATE
          CALL      VALDAT00
          BRANCH    EXIT,PROC0436,PROC0437
.
          MOVE      XDATE,XTRIDATE
          GOTO      PROC0440
.
PROC0436  
.         MOVE      "E165:TRIAGE DATE/TIME INVALID",ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      PROC0440
.
PROC0437  
.         MOVE      "E165:TRIAGE DATE/TIME INVALID",ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      PROC0440
.
. ------- triage time --------
.
PROC0440  MOVE      EMVITRTM,TIME
          CALL      VALTIM00
          BRANCH    EXIT,PROC0441
.
          PACK      XTRITIME,XTIME,SP70
          GOTO      PROC0450
.
PROC0441  
.         MOVE      "E165:TRIAGE DATE/TIME INVALID",ERRORMSG 
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.
PROC0450  MOVE      EMVIDATE,DATE1
          MOVE      EMVITRDT,DATE2
          COMPARE   DATE1,DATE2
          IF        @LESS
.           MOVE      "E167:TRIAGE DATE/TIME BEFORE ARRIVAL DATE/TIME",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL       PRTERR00
          ENDIF
          IF        @EQUAL
            MOVE      XARRTIME,TIME1
            MOVE      XTRITIME,TIME2
            COMPARE   TIME1,TIME2
            IF        @LESS
.            MOVE      "E167:TRIAGE DATE/TIME BEFORE ARRIVAL DATE/TIME",ERRORMSG
.            MOVE      ANSR,ERRTYPE
.            CALL      PRTERR00
            ENDIF
          ENDIF
.
. ------- triage category --------
.
          MATCH     "10",XVISTYP           * check visit type is dead on arrival
          GOTO      PROC0455 IF NOT EQUAL
.
          MOVE      "6",XTRIGCAT           * set triage cat to dead on arrival
          GOTO      PROC0460
.
PROC0455  PACK      KEY24,DEMVIADM,SP70
          CALL      RSEMCHA1
PROC0456  CALL      RKEMCHA1
          BRANCH    OVRCD,PROC0457
.
          MATCH     DEMVIADM,EMCHVISN
          GOTO      PROC0457 IF NOT EQUAL
.
          MATCH     "03",EMCHUPTY
          GOTO      PROC0456 IF NOT EQUAL
.
          MATCH     SP70,EMCHOVAL
          GOTO      PROC0457 IF EQUAL
          GOTO      PROC0457 IF EOS
.
          PACK      EMVITRIG,EMCHOVAL,SP70
.
PROC0457  MATCH     SP70,EMVITRIG
          IF        @EQUAL
            MOVE      "E175:TRIAGE CATEGORY BLANK",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0460
          ENDIF
.
          PACK      KEY5,CODEAA,EMVITRIG
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD=1
            MOVE      "E176:TRIAGE CATEGORY INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0460
          ELSE
            MOVE      TCINDC1,XTRIGCAT
          ENDIF
.
.         New Edit: E386
.
PROC0458  MOVE      ZERO,XINVALID
          MOVE      ZERO,F1
          MOVE      XTRIGCAT,F1
.
          IF        F1=1|F1=2
            MOVE      SP70,DIM2
            SQUEEZE   XVISTYP
            MOVE      XVISTYP,DIM2
            MOVE      ZERO,F2
            MOVE      DIM2,F2
.
            IF        F2=2|F2=8
              MOVE      ONE,XINVALID
            ENDIF
.
          ENDIF
.
          IF        XINVALID=1
.           CLEAR     ERRORMSG
.           APPEND    "E386:UNEXPECTED COMBINATION BETWEEN TRIAGE",ERRORMSG
.           APPEND    " CATEGORY AND TYPE OF VISIT",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSW,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
. ------- first seen by nurse date --------
.
PROC0460  MATCH     SP70,EMVIDSTA
          IF        !@EQUAL
            PACK      KEY5,CODEED,EMVIDSTA
            CALL      RDCODE1                      * code on file ?
            IF        OVRCD=0
              MATCH     "6",TCINDC2          * left before seeing doctor
              GOTO      PROC0949 IF EQUAL
            ENDIF
          ENDIF
.
          CALL      SEEN0000                * Get all seen dates 
.
          MOVE      EMVINSDT,DATE
          CALL      VALDAT00
          BRANCH    EXIT,PROC0464,PROC0463          * C CAR 43016
.
          PACK      XNURSDAT,XDATE,SP70
          GOTO      PROC0465
.
PROC0463  PACK     XNURSDAT,SP70                    * I CAR 43016
          GOTO     PROC0470
.
PROC0464  APPEND    "E180:NURSE INITIATION OF PATIENT MANAGEMENT ",ERRORMSG
          APPEND    "DATE/TIME INVALID",ERRORMSG
          RESET     ERRORMSG 
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
.
PROC0465  MOVE      EMVITRDT,DATE1                * Triage date
          MOVE      EMVINSDT,DATE2                * Date first seen by nurse
          COMPARE   DATE1,DATE2
          IF        @LESS
            IF        NMHFLAG=1
.             CLEAR     ERRORMSG
.             APPEND    "E373:FIRST SEEN BY MENTAL HEALTH TREATING ",ERRORMSG
.             APPEND    "NURSE DATE/TIME BEFORE TRIAGE DATE/TIME",ERRORMSG
.             RESET     ERRORMSG
              GOTO      PROC0470
            ENDIF
            CLEAR     ERRORMSG
            APPEND    "E181:NURSE INITIATION OF PATIENT MANAGEMENT ",ERRORMSG
            APPEND    "DATE/TIME BEFORE TRIAGE DATE/TIME",ERRORMSG
            RESET     ERRORMSG
          ENDIF
.
. ------- first seen by nurse time --------
.
PROC0470  MOVE      EMVINSTM,TIME
          CALL      VALTIM00
          PACK      XNURSTIM,XTIME,SP70
.
. ------- first seen by doctor date --------
.
          MOVE      EMVIDRDT,DATE
          CALL      VALDAT00
          BRANCH    EXIT,PROC0472,PROC0471          * C CAR 43016
.
          PACK      XDOCTDAT,XDATE,SP70
          CALL      CHKS0000     * Check if this should be sent
.
          GOTO      PROC0475
.
PROC0471  PACK     XDOCTDAT,SP70                    * I CAR 43016
          GOTO     PROC0475
.
PROC0472  IF        TMHFLAG=1
            CLEAR     ERRORMSG
            APPEND    "E375:FIRST SEEN BY MENTAL HEALTH TREATING ",ERRORMSG
            APPEND    "DOCTOR DATE/TIME INVALID",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      PROC0475
          ENDIF
          CLEAR     ERRORMSG
          APPEND    "E195:FIRST SEEN BY TREATING DOCTOR",ERRORMSG
          APPEND    " DATE/TIME INVALID",ERRORMSG
          RESET     ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
.
. ------- first seen by doctor time --------
.
PROC0475  MOVE      EMVIDRTM,TIME
          CALL      VALTIM00
          PACK      XDOCTTIM,XTIME,SP70
          CALL      CHKS0000
.
          MATCH     XNURSDAT,XTRIDATE
          GOTO      PROC0500 IF NOT EQUAL
.
          MOVE      XNURSTIM,TIME1
          MOVE      XTRITIME,TIME2
          COMPARE   TIME2,TIME1
          IF        @LESS
.           CLEAR     ERRORMSG
.           APPEND    "E186:FIRST SEEN BY TREATING NURSE TIME BEFORE",ERRORMSG
.           APPEND    " TRIAGE TIME",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
PROC0500  MATCH     SP70,XNURSDAT
          GOTO      PROC0600 IF EQUAL
. 
          MATCH     SP70,XNURSTIM
          IF        @EQUAL
            CLEAR     ERRORMSG
            APPEND   "E187:FIRST SEEN BY TREATING NURSE DATE AND TIME",ERRORMSG
            APPEND   " COMBINATION INVALID",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
          GOTO      PROC0700
.
PROC0600  MATCH     SP70,XNURSTIM
          IF        !@EQUAL
            CLEAR     ERRORMSG
            APPEND   "E187:FIRST SEEN BY TREATING NURSE DATE AND TIME",ERRORMSG
            APPEND   " COMBINATION INVALID",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
PROC0700  MATCH     SP70,XDOCTDAT
          GOTO      PROC0800 IF EQUAL
.
          MOVE      EMVITRDT,DATE1                * Triage date
          MOVE      EMVIDRDT,DATE2                * Date first seen by doctor
          COMPARE   DATE1,DATE2
          IF        @LESS
            IF        TMHFLAG=1
              CLEAR     ERRORMSG
.             APPEND    "E373:FIRST SEEN BY MENTAL HEALTH DOCTOR ",ERRORMSG
.             APPEND    "DATE/TIME BEFORE TRIAGE DATE/TIME",ERRORMSG
.             RESET     ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
              GOTO      PROC0800
            ENDIF
.           CLEAR     ERRORMSG
.           APPEND    "E196:FIRST SEEN BY DOCTOR DATE/TIME BEFORE ",ERRORMSG
.           APPEND    "TRIAGE DATE/TIME",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
PROC0800  MATCH     XDOCTDAT,XTRIDATE
          GOTO      PROC0900 IF NOT EQUAL
.
          MOVE      XDOCTTIM,TIME1
          MOVE      XTRITIME,TIME2
          COMPARE   TIME2,TIME1
          IF        @LESS
.           CLEAR     ERRORMSG
.           APPEND    "E201:FIRST SEEN BY DOCTOR DATE/TIME BEFORE ",ERRORMSG
.           APPEND    "TRIAGE DATE/TIME ",ERRORMSG
.           APPEND    "DOCTOR TIME",ERRORMSG
.           APPEND    XDOCTTIM,ERRORMSG
.           APPEND    "TRI TIME",ERRORMSG
.           APPEND    XTRITIME,ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
PROC0900  MATCH     SP70,XNURSDAT
          GOTO      PROC0920 IF EQUAL
.
          MATCH     SP70,XNURSTIM
          IF        @EQUAL
            CLEAR     ERRORMSG
            APPEND   "E202:FIRST SEEN BY NURSE DATE AND TIME",ERRORMSG
            APPEND   " COMBINATION INVALID",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
          GOTO      PROC0949
.
PROC0920  MATCH     SP70,XNURSTIM
          IF        !@EQUAL
            CLEAR     ERRORMSG
            APPEND   "E202:FIRST SEEN BY NURSE DATE AND TIME",ERRORMSG
            APPEND   " COMBINATION INVALID",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
PROC0949  MATCH     "1",XTRIGCAT
          IF        @EQUAL
            CALL      TRTM0000
          ENDIF
. ------- procedures --------
.
PROC0950  MOVE      ZERO,PROCOUNT
          PACK      XPROCDUR,SP70,SP70
.
. ------- departure date --------
.
          MOVE      EMVIDDAT,DATE
          CALL      VALDAT00
          BRANCH    EXIT,PROC1505,PROC1510
.
          MOVE      XDATE,XDEPDATE
          GOTO      PROC1515
.
PROC1505  MOVE      "E210:DEPARTURE DATE/TIME INVALID - REJECTION",ERRORMSG
          MOVE      ANSR,ERRTYPE                                 * C-49808
          CALL      PRTERR00
          GOTO      PROC1520
.
PROC1510  MOVE      "E210:DEPARTURE DATE/TIME INVALID - REJECTION",ERRORMSG
          MOVE      ANSR,ERRTYPE                                 * C-49808
          CALL      PRTERR00
          GOTO      PROC1520
.
PROC1515  MATCH     SP70,XNURSDAT
          GOTO      PROC1520 IF EQUAL
.
          MATCH     SP70,XDOCTDAT          * I CAR 40976
          GOTO      PROC1520 IF NOT EQUAL  * I CAR 40976
.
          MOVE      EMVINSDT,DATE1                * First date seen by nurse
          MOVE      EMVIDDAT,DATE2                * Discharge date
          COMPARE   DATE1,DATE2
          IF        @LESS
            IF        NMHFLAG=1
              CLEAR     ERRORMSG
              APPEND   "E374:DEPARTURE DATE BEFORE FIRST SEEN BY ",ERRORMSG
              APPEND   "MENTAL HEALTH TREATING NURSE DATE",ERRORMSG
              RESET     ERRORMSG
              MOVE      ANSR,ERRTYPE
              CALL      PRTERR00
              GOTO      PROC1520
            ENDIF
.
            CLEAR     ERRORMSG
            APPEND   "E212:DEPARTURE DATE BEFORE ",ERRORMSG
            APPEND   "NURSE INITIATION OF PATIENT MANAGEMENT ",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
PROC1520  MATCH     SP70,XDOCTDAT
          GOTO      PROC1530 IF EQUAL
.
          MOVE      EMVIDRDT,DATE1                * Date first seen by doctor
          MOVE      EMVIDDAT,DATE2                * Discharge date
          COMPARE   DATE1,DATE2
          IF        @LESS
            IF        TMHFLAG=1
              CLEAR     ERRORMSG
              APPEND    "E374:DEPARTURE DATE BEFORE FIRST SEEN BY ",ERRORMSG
               APPEND    "MENTAL HEALTH DOCTOR DATE",ERRORMSG
              RESET     ERRORMSG
              GOTO      PROC1530
            ENDIF
            CLEAR     ERRORMSG
            APPEND    "E213:DEPARTURE DATE BEFORE FIRST SEEN BY ",ERRORMSG
            APPEND    " DOCTOR DATE",ERRORMSG
            RESET     ERRORMSG
          ENDIF
.
PROC1530  UNPACK    EXTFILNM,KEY5,FILMON,KEY1
.
          UNPACK    EMVIDDAT,KEY4,DATMON,KEY2
          MATCH     FILMON,DATMON
          IF        !@EQUAL
            CLEAR     ERRORMSG
            APPEND    "E217:DEPARTURE DATE CONFLICTS WITH ",ERRORMSG
            APPEND    "VEMD FILE NAME",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
          UNPACK    EMVIDATE,KEY4,DATMON,KEY2
          REP       " 0",DATMON
          MATCH     FILMON,DATMON
          IF        !@EQUAL
            REP       " 0",FILMON
            MATCH     "01",FILMON
            IF        @EQUAL
              MOVE      TEN2,F2
            ELSE
              MOVE      FILMON,F2
              SUB       ONE,F2
            ENDIF
            MOVE      F2,FILMON
            REP       " 0",FILMON
            MATCH     FILMON,DATMON
            IF        !@EQUAL
.             MOVE      "E218:INAPPROPRIATE ARRIVAL DATE ",ERRORMSG
              MOVE      "E155:ARRIVAL DATE/TIME INVALID",ERRORMSG     *I-52753
              MOVE      ANSR,ERRTYPE
              CALL      PRTERR00
            ENDIF
          ENDIF
.
          MATCH     SP70,XMENHDAT
          IF        !@EQUAL
            UNPACK    XMENHDAT,CDAY,CMON,CCENT,CYEAR
            PACK      DIM8,CCENT,CYEAR,CMON,CDAY
            REP       " 0",DIM8
.
            MOVE      DIM8,DATE1
            MOVE      EMVIDDAT,DATE2
            COMPARE   DATE1,DATE2
            IF        @LESS
              CLEAR     ERRORMSG
              APPEND   "E374:DEPARTURE DATE BEFORE FIRST SEEN BY ",ERRORMSG
              APPEND   "MENTAL HEALTH PRACTITIONER DATE",ERRORMSG
              RESET     ERRORMSG
              MOVE      ANSR,ERRTYPE
              CALL      PRTERR00
            ENDIF
.
          ENDIF 
.
. ------- departure time --------
.
          MOVE      EMVIDTIM,TIME
          CALL      VALTIM00
          BRANCH    EXIT,PROC1535

          PACK      XDEPTIME,XTIME,SP70
          GOTO      PROC1540
.
PROC1535  MOVE      "E210:DEPARTURE DATE/TIME INVALID - REJECTION",ERRORMSG
          MOVE      ANSR,ERRTYPE                                 * C-49808
          CALL      PRTERR00
.
PROC1540  MATCH     XDEPDATE,XNURSDAT
          GOTO      PROC1600 IF NOT EQUAL 
.
          MATCH     SP70,XDOCTTIM             * I CAR 40976
          GOTO      PROC1600 IF NOT EQUAL     * I CAR 40976
.
          MOVE      XDEPTIME,TIME1
          MOVE      XNURSTIM,TIME2
          COMPARE   TIME2,TIME1
          IF        @LESS
            IF        NMHFLAG=1
              CLEAR     ERRORMSG
              APPEND    "E374:DEPARTURE TIME BEFORE FIRST SEEN ",ERRORMSG
              APPEND    "BY MENTAL HEALTH TREATING NURSE TIME",ERRORMSG 
              RESET     ERRORMSG
              MOVE      ANSR,ERRTYPE
              CALL      PRTERR00
              GOTO      PROC1600
            ENDIF
            CLEAR     ERRORMSG
            APPEND    "E212:DEPARTURE TIME BEFORE FIRST SEEN ",ERRORMSG
            APPEND    "BY TREATING NURSE TIME",ERRORMSG              *C-53813
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
PROC1600  MATCH     XDEPDATE,XDOCTDAT
          GOTO      PROC1610 IF NOT EQUAL
.
          MOVE      XDOCTTIM,TIME1
          MOVE      XDEPTIME,TIME2
          COMPARE   TIME1,TIME2
          IF        @LESS
            IF        TMHFLAG=1
              CLEAR     ERRORMSG
              APPEND    "E374:DEPARTURE TIME BEFORE FIRST SEEN ",ERRORMSG
              APPEND    "BY MENTAL HEALTH DOCTOR TIME",ERRORMSG  
              RESET     ERRORMSG
              MOVE      ANSR,ERRTYPE
              CALL      PRTERR00
              GOTO      PROC1610
            ENDIF
            CLEAR     ERRORMSG
            APPEND    "E213:DEPARTURE TIME BEFORE FIRST SEEN ",ERRORMSG
            APPEND    "BY DOCTOR TIME",ERRORMSG                      *C-53813
            APPEND    "DOCTOR TIME",ERRORMSG
            APPEND    XDOCTTIM,ERRORMSG
            APPEND    "DEP TIME",ERRORMSG
            APPEND    XDEPTIME,ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
PROC1610  MATCH     SP70,XMENHTIM
          IF        !@EQUAL
.
            MOVE      XDEPTIME,TIME1
            MOVE      XMENHTIM,TIME2
            COMPARE   TIME2,TIME1
            IF        @LESS
                CLEAR     ERRORMSG
                APPEND    "E374:DEPARTURE TIME BEFORE FIRST SEEN ",ERRORMSG
                APPEND    "BY MENTAL HEALTH PRACTITIONER TIME",ERRORMSG
                RESET     ERRORMSG
                MOVE      ANSR,ERRTYPE
                CALL      PRTERR00
            ENDIF
.
          ENDIF
.
. ------- departure status --------
.
PROC1650  MATCH     SP70,EMVIDSTA
          IF        @EQUAL
.           MOVE      "E230:DEPARTURE STATUS INVALID",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          PACK      KEY5,CODEED,EMVIDSTA
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD=1
.           MOVE      "E230:DEPARTURE STATUS INVALID",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          MOVE      THCSCOD,XDEPSTAT
.
. ------- transfer destination --------
.
          MATCH     SP70,EMVIDEST
          GOTO      PROC1700 IF EQUAL
          GOTO      PROC1700 IF EOS
.
          MATCH     EMVIDEST,XCAMPUS
          IF        @EQUAL
            CLEAR     ERRORMSG
            APPEND    "E137:TRANSFER SOURCE/DESTINATION MATCHES",ERRORMSG
            APPEND    " CAMPUS CODE",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
          PACK      KEY5,EMVIDEST
          CALL      RDPTVAD1
          IF        OVRCD=1
            MOVE      "E235:TRANSFER DESTINATION CODE INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
          MOVE      EMVIDEST,XTDESTN
.
. ------- referred to on departure --------
.
PROC1700  MATCH     SP70,EMVIUC11
          IF        @EQUAL
.           MOVE      "E240:REFERRED TO ON DEPARTURE INVALID",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          PACK      KEY5,CATEC,EMVIUC11
          CALL      RDCODE1
          IF        OVRCD=1
.           MOVE      "E240:REFERRED TO ON DEPARTURE INVALID",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          PACK      XREFDEPT,THCSCOD
.
PROC1710  MOVE      ZERO,F2
          MOVE      SP70,DIM2
          MOVE      XDEPSTAT,DIM2
          SQUEEZE   DIM2
          MOVE      DIM2,F2
          IF        F2=1 | F2=10 | F2=12 | F2=23 | F2=24
            MOVE      ZERO,F2                        * C CAR 41114
            MOVE      SP70,DIM2
            MOVE      XREFDEPT,DIM2
            SQUEEZE   DIM2
            MOVE      DIM2,F2
            IF        F2=19
.             CLEAR     ERRORMSG
.             APPEND    "E242:REFERRED TO ON DEPARTURE & DEPARTURE ",ERRORMSG
.             APPEND    "STATUS COMBINATION INVALID",ERRORMSG
.             RESET     ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ELSE
            MOVE      ZERO,F2                        * C CAR 41114
            MOVE      SP70,DIM2
            MOVE      XREFDEPT,DIM2
            SQUEEZE   DIM2
            MOVE      DIM2,F2
            IF        F2<>19
.             CLEAR     ERRORMSG
.             APPEND    "E242:REFERRED TO ON DEPARTURE & DEPARTURE ",ERRORMSG
.             APPEND    "STATUS COMBINATION INVALID",ERRORMSG
.             RESET     ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
.
. ------- reason for transfer --------
.
PROC1750  MOVE      SP70,XTREASON
          MOVE      SP70,XDEPTMOD
.
PROC1752  MATCH     "17",XDEPSTAT
          GOTO      PROC1760 IF EQUAL
          MATCH     "19",XDEPSTAT
          GOTO      PROC1760 IF EQUAL
          MATCH     "20",XDEPSTAT
          GOTO      PROC1760 IF EQUAL
          MATCH     "21",XDEPSTAT
          GOTO      PROC1760 IF EQUAL
          GOTO      PROC1800
.
PROC1760  MATCH     SP70,EMVIUC12
          IF        !@EQUAL
            PACK      KEY5,CATED,EMVIUC12
            CALL      RDCODE1
            IF        OVRCD=1
.             MOVE      "E245:REASON FOR TRANSFER CODE INVALID",ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
            PACK      XTREASON,THCSCOD
          ENDIF
.
.
. ------- departure transport mode --------
.
          MOVE      SP70,XDEPTMOD
          MATCH     SP70,EMVIUC09
          IF        !@EQUAL
            PACK      KEY5,CATEA,EMVIUC09
            CALL      RDCODE1
            IF        OVRCD=1
.             MOVE      "E255:DEPARTURE TRANSPORT MODE INVALID",ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
.             GOTO      PROC1800
            ENDIF
            PACK      XDEPTMOD,THCSCOD
          ENDIF
          GOTO      PROC1800
.
. ------- primary ED diagnosis --------
.
PROC1800  PACK      KEY14,EMVIADMN,ZERO,ZERO,FIVE,SP70
          CALL      RSEMVCD1                     * position for admission no.
PROC2000  CALL      RKEMVCD1                     * read next record
          BRANCH    OVRCD,PROC2100               * eof - finished primary diag.
.
          MATCH     EMVCVIST,DEMVIADM            * same visit no. still ?
          GOTO      PROC2100 IF NOT EQUAL        * no - finished prim. diag.
.
          MATCH     "000",EMVCSEQU               * primary diagnosis ?
          GOTO      PROC2000 IF NOT EQUAL        * no - ignore
.
          MATCH     "005",EMVCTYPE       
          GOTO      PROC2100 IF NOT EQUAL
.
          MOVE      EMVCMNCD,KEY9
          CALL      RDEMICD1
          BRANCH    OVRCD,PROC2200
.
          PACK      XPRIDIAG,EMICVEMD
          PACK      ICDDIAGN,EMIC9COD
          GOTO      PROC2500
.
PROC2100  MATCH     "10",XDEPSTAT
          GOTO      PROC2500 IF EQUAL
.
          MATCH     "11",XDEPSTAT
          GOTO      PROC2500 IF EQUAL
.
          MATCH     "T1",XDEPSTAT
          GOTO      PROC2500 IF EQUAL
.
          MATCH     "T2",XDEPSTAT
          GOTO      PROC2500 IF EQUAL
.
          MATCH     "31",XDEPSTAT
          IF        @EQUAL
            PACK      KEY30,EMVIDOCT,EMVIATNS,EMVIMPRA,SP70
            MATCH     SP70,KEY30
            GOTO      PROC2500 IF EQUAL
          ENDIF
.
.         MOVE      "E260:PRIMARY DIAGNOSIS BLANK",ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      PROC2500
.
PROC2200  MOVE      "E261:DIAGNOSIS CODE INVALID",ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
          GOTO      PROC2500
.
. ------- additional ED diagnoses --------
.
PROC2500  MOVE      ZERO,COUNTR                  * initialise counter
          PACK      KEY17,EMVIADMN,ZERO,ZERO,FIVE,SP70
          CALL      RSEMVCD1                     * position for admission no.
PROC3000  CALL      RKEMVCD1                     * read next record
          BRANCH    OVRCD,PROC3500               * eof - finished primary diag.
.
          MATCH     EMVCVIST,DEMVIADM            * same visit no. still ?
          GOTO      PROC3500 IF NOT EQUAL        * no - finished prim. diag.
.
          MATCH     "000",EMVCSEQU               * primary diagnosis ?
          GOTO      PROC3000 IF EQUAL            * yes - ignore
.
          MATCH     "005",EMVCTYPE
          GOTO      PROC3500 IF NOT EQUAL 
.
          MATCH     "1",EMVCEFLG
          GOTO      PROC3000 IF NOT EQUAL
.
          ADD       ONE,COUNTR                   * increment counter
.
          MOVE      EMVCMNCD,KEY9
          CALL      RDEMICD1
          IF        OVRCD=1
            MOVE      "E261:DIAGNOSIS CODE INVALID",ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
          IF        COUNTR=1
            PACK      XADDIAG1,EMICVEMD
            GOTO      PROC3000
          ENDIF
.
          IF        COUNTR=2
            PACK      XADDIAG2,EMICVEMD
          ENDIF
.
. ------- Body Injury Data --------
.
PROC3500  MATCH     SP70,ICDDIAGN
          GOTO      PROC5000 IF EQUAL
.
          PACK      KEY10,ICDDIAGN,SP70
          CALL      RSEMMX3
          CALL      RKEMMX3
          BRANCH    OVRCD,PROC5000
.
          MATCH     ICDDIAGN,EMMXPDG
          IF        @EQUAL
.
            MOVE      ZERO,F2
            MOVE      SP70,DIM2
            MOVE      XDEPSTAT,DIM2
            SQUEEZE   DIM2
            MOVE      DIM2,F2
            COMPARE   TEN,F2                                        * I-51944
            GOTO      PROC5000 IF EQUAL
            COMPARE   TEN1,F2                                       * I-51944
            GOTO      PROC5000 IF EQUAL
            GOTO      PROC4000
.
          ELSE                                    * 01/07/2003
            CALL      BINJ0000 
            GOTO      PROC5000                    * injury data not required
          ENDIF
.
          PACK      EMVINATI,EMVINATI,SP70
          MATCH     SP70,EMVINATI                 * Nature of Main Injury
          GOTO      PROC4000 IF NOT EQUAL
.
          PACK      EMVIREGN,EMVIREGN,SP70
          MATCH     SP70,EMVIREGN                 * Body Region
          GOTO      PROC4000 IF NOT EQUAL
.
          PACK      INJDESC1,EMVIINJ1,SP70
          MATCH     SP70,INJDESC1                 * Description 1
          GOTO      PROC4000 IF NOT EQUAL
.
          PACK      INJDESC2,EMVIINJ2,SP70
          MATCH     SP70,INJDESC2                 * Description 2
          GOTO      PROC4000 IF NOT EQUAL
.
          PACK      EMVIINJC,EMVIINJC,SP70
          MATCH     SP70,EMVIINJC                 * Injury Cause
          GOTO      PROC4000 IF NOT EQUAL
.
          PACK      EMVIHUMI,EMVIHUMI,SP70
          MATCH     SP70,EMVIHUMI                 * Human Intent
          GOTO      PROC4000 IF NOT EQUAL
.
          PACK      EMVIPLIN,EMVIPLIN,SP70
          MATCH     SP70,EMVIPLIN                 * Place of Injury
          GOTO      PROC4000 IF NOT EQUAL
.
          PACK      EMVIACTI,EMVIACTI,SP70
          MATCH     SP70,EMVIACTI                 * Activity when injured
          GOTO      PROC4000 IF NOT EQUAL
.
          GOTO      PROC5000                     * Data not compulsory
.
. ------- nature of main injury --------
.
PROC3900  PACK      EMVINATI,EMVINATI,SP70
          PACK      EMVIREGN,EMVIREGN,SP70
          PACK      INJDESC1,EMVIINJ1,SP70
          PACK      INJDESC2,EMVIINJ2,SP70
          PACK      EMVIINJC,EMVIINJC,SP70
          PACK      EMVIHUMI,EMVIHUMI,SP70
          PACK      EMVIPLIN,EMVIPLIN,SP70
          PACK      EMVIACTI,EMVIACTI,SP70

PROC4000  MOVE      ONE,INJFLAG                  * Used for VISS extract
          MOVE      SP70,THCSCOD                 * I CAR 43016
.
          MATCH     SP70,EMVINATI
          IF        @EQUAL
            CALL      EINJ0000                   * I CAR 43016
            BRANCH    EXEMPT,PROC4050            * I CAR 43016
.                                                * I-49808
          ELSE
            PACK      KEY5,CATEX,EMVINATI
            CALL      RDCODE1
            IF        OVRCD=1
.             CLEAR     ERRORMSG
.             APPEND    "E281:NATURE OF MAIN INJURY INVALID,",ERRORMSG
.             APPEND    EMVINATI,ERRORMSG
.             APPEND    "-",ERRORMSG
.             RESET     ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
PROC4050  PACK      XINJURY,THCSCOD              * C CAR 43016
.
. ------- body region --------
.
          MATCH     SP70,EMVIREGN
          IF        @EQUAL
            CALL      EINJ0000                        * I CAR 43016
            BRANCH    EXEMPT,PROC4100                 * I CAR 43016
.                                             * I-49808
          ELSE
            PACK      KEY2,EMVIREGN
            CALL      RDEMGRC1
            IF        OVRCD=1
.             MOVE      "E286:BODY REGION CODE INVALID",ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
            MOVE      EMVIREGN,XBREGION
          ENDIF
.
. ------- description of injury event --------
.
.          MOVE      EMVITXT1,DIM50A
.          MOVE      EMVITXT2,DIM50B
PROC4100
.          LOAD      DIM50A,EMCNUDXA,EMVITXT1,EMVITXT2,EMVITXT3:
.                                    EMVITXT4,EMVITXT5
.          LOAD      DIM50B,EMCNUDXB,EMVITXT1,EMVITXT2,EMVITXT3:
.                                    EMVITXT4,EMVITXT5
.
          PACK      XINJEVNT,SP70,SP70
          STRIP     EMVIINJ1
          STRIP     EMVIINJ2
          CLEAR     XINJEVNT
          APPEND    EMVIINJ1,XINJEVNT
          APPEND    SP1,XINJEVNT
          APPEND    EMVIINJ2,XINJEVNT
          RESET     XINJEVNT
.
          MATCH     SP70,EMVIINJ1
          IF        @EQUAL
            CALL      EINJ0000                   * I CAR 43016
            BRANCH    EXEMPT,PROC4150            * I CAR 43016
          ENDIF
.
. ------- injury cause --------
.
PROC4150  MATCH     SP70,EMVIINJC
          IF        @EQUAL
            CALL      EINJ0000                * I CAR 43016
            GOTO      PROC4500
          ELSE
            PACK      KEY5,CATSEY,EMVIINJC
            CALL      RDCODE1
            IF        OVRCD=1
.             MOVE      "E295:INJURY CAUSE CODE INVALID",ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
              GOTO      PROC4500
            ENDIF
          ENDIF
          PACK      XINJCAUS,THCSCOD
.
          MOVE      ZERO,F2
          MOVE      XINJCAUS,F2
          IF        F2<>1 & F2<>3
            GOTO      PROC4500
          ENDIF
.
          UNPACK    EMVIDATE,CCENT,CYEAR,CMON,CDAY
          PACK      AGEDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",AGEDATE
          CALL      CALCAGE
.
          MOVE      ZERO,F3
          MOVE      PSAGEYRS,F3
          IF        F3<14
.           MOVE      "E297:INJURY CAUSE CODE & AGE INCOMPATIBLE",ERRORMSG
.           MOVE      ANSW,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
. ------- human intent --------
.
PROC4500  MATCH     SP70,EMVIHUMI
          IF        @EQUAL
            CALL      EINJ0000                        * I CAR 43016
            BRANCH    EXEMPT,PROC4550                 * I CAR 43016
            GOTO      PROC4550
          ELSE
            PACK      KEY5,CATSEZ,EMVIHUMI,SP70
            CALL      RDCODE1
            IF        OVRCD=1
.             MOVE      "E300:HUMAN INTENT CODE INVALID",ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
              GOTO      PROC4550
            ENDIF
            PACK      XHINTENT,THCSCOD
          ENDIF
.
          MOVE      PSAGEYRS,F3
          MOVE      XHINTENT,F2
.
          IF        F2=18 | F2=19 | F2=20
            IF        F3<=10
.             MOVE      "E302:HUMAN INTENT CODE & AGE INCOMPATIBLE",ERRORMSG
.             MOVE      ANSW,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
.
. ------- place where injury occurred --------
.
PROC4550  MATCH     SP70,EMVIPLIN
          IF        @EQUAL
            CALL      EINJ0000                     * I CAR 43016
            BRANCH    EXEMPT,PROC4600              * I CAR 43016
          ELSE
            PACK      KEY5,CODEAP,EMVIPLIN
            CALL      RDCODE1                      * code on file ?
            IF        OVRCD=1
.             MOVE      "E305:PLACE WHERE INJURY OCCURRED INVALID",ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
            MOVE      TCINDC2,XINJPLAC
          ENDIF
.
. ------- activity when injured --------
.
PROC4600  MATCH     SP70,EMVIACTI
          IF        @EQUAL
            CALL      EINJ0000                     * I CAR 43016
            BRANCH    EXEMPT,PROC5000              * I CAR 43016
          ELSE
            PACK      KEY5,CATEY,EMVIACTI
            CALL      RDCODE1
            IF        OVRCD=1
.             MOVE      "E310:ACTIVITY WHEN INJURED CODE INVALID",ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
            MOVE      THCSCOD,XINJACTV
          ENDIF
.
. -------- Description of product involved with injury
.         
.         LOAD      XINJPROD,EMCNUDXC,EMVITXT1,EMVITXT2,EMVITXT3:
.                                   EMVITXT4,EMVITXT5
.
. -------- Description of safety device in use at time of injury
.
.         LOAD      XINJSAFE,EMCNUDXD,EMVITXT1,EMVITXT2,EMVITXT3:
.                                   EMVITXT4,EMVITXT5
.
PROC5000  
.
. ------- inpatient bed request date --------
.
          MATCH     SP70,EMVIUD03     
          IF        @EQUAL
            MATCH     SP70,EMVIUT03        * Edit checks are not required if the
            GOTO      PROC6075 IF EQUAL    * request date and time are blank.
          ENDIF
.
          MATCH     SP70,EMVIUD03
          IF        @EQUAL | @EOS
            MATCH     SP70,EMVIUT03        * No date but there is a time
            IF        !@EQUAL & !@EOS
.             CLEAR     ERRORMSG
.             APPEND    "E330:INPATIENT BED REQUEST DATE AND TIME ",ERRORMSG
.             APPEND    "COMBINATION INVALID",ERRORMSG
.             APPEND    "E331:INPATIENT BED REQUEST DATE/TIME INVALID",ERRORMSG
.             RESET     ERRORMSG                                       *I-52753
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ELSE
            MATCH     SP70,EMVIUT03        * Date but no time
            IF        @EQUAL | @EOS
.             CLEAR     ERRORMSG
.             APPEND    "E330:INPATIENT BED REQUEST DATE AND TIME ",ERRORMSG
.             APPEND    "COMBINATION INVALID",ERRORMSG
.             APPEND    "E331:INPATIENT BED REQUEST DATE/TIME INVALID",ERRORMSG
.             RESET     ERRORMSG                                       *I-52753
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
.
          MOVE      EMVIUD03,DATE
          CALL      VALDAT00
          MOVE      XDATE,XINPBDAT           
          BRANCH    EXIT,PROC5100,PROC5100
.
          GOTO      PROC5300
.
PROC5100  
.         CLEAR     ERRORMSG
.         APPEND    "E331:INPATIENT BED REQUEST DATE/TIME INVALID",ERRORMSG
.         MOVE      ANSR,ERRTYPE                                       *C-52753
.         CALL      PRTERR00
.         RESET     ERRORMSG
          GOTO      PROC5300
.
. ------- inpatient bed request time --------
.
PROC5300  MOVE      EMVIUT03,TIME
          CALL      VALTIM00
          PACK      XINPBTIM,XTIME,SP70
          BRANCH    EXIT,PROC5400
.
          GOTO      PROC6000
 
PROC5400  
.         CLEAR     ERRORMSG
.         APPEND    "E330:INPATIENT BED REQUEST DATE AND TIME ",ERRORMSG
.         APPEND    "COMBINATION INVALID",ERRORMSG
.         APPEND    "E331:INPATIENT BED REQUEST DATE/TIME INVALID",ERRORMSG
.         RESET     ERRORMSG                                           *I-52753
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00 
.
PROC6000  REP       " 0",EMVIDDAT
          REP       " 0",EMVIUD03
          MOVE      EMVIUD03,DATE1
          MOVE      EMVIDDAT,DATE2
          COMPARE   DATE1,DATE2
          IF        @LESS
.           CLEAR     ERRORMSG
.           APPEND    "E335:DEPARTURE DATE/TIME BEFORE INPATIENT BED ",ERRORMSG
.           APPEND    "REQUEST DATE/TIME",ERRORMSG                     *C-52753
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          MOVE      EMVIDATE,DATE1
          MOVE      EMVIUD03,DATE2
          COMPARE   DATE1,DATE2
          IF        @LESS
.           CLEAR     ERRORMSG
.           APPEND    "E336:INPATIENT BED REQUEST DATE BEFORE ",ERRORMSG
.           APPEND    "ARRIVAL DATE",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSW,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          COMPARE   DATE1,DATE2
          IF        @EQUAL
            MOVE      XINPBTIM,TIME2
            MOVE      XARRTIME,TIME1
            COMPARE   TIME1,TIME2
            IF        @LESS
.             CLEAR     ERRORMSG
.             APPEND    "E337:INPATIENT BED REQUEST TIME BEFORE ",ERRORMSG
.             APPEND    "ARRIVAL TIME ",ERRORMSG
.             RESET     ERRORMSG
.             MOVE      ANSW,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
.
          MATCH     XDEPDATE,XINPBDAT
          IF        @EQUAL
            MOVE      XDEPTIME,TIME2
            MOVE      XINPBTIM,TIME1
            COMPARE   TIME1,TIME2
            IF        @LESS
.             CLEAR     ERRORMSG
.             APPEND    "E338:DEPARTURE TIME BEFORE INPATIENT ",ERRORMSG
.             APPEND    "BED REQUEST TIME ",ERRORMSG
.             APPEND    "E335:DEPARTURE DATE/TIME BEFORE INPATIENT ",ERRORMSG
.             APPEND    "BED REQUEST DATE/TIME ",ERRORMSG              *I-52753
.             RESET     ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
.
.
. --------- Miscellaneous Edits -----------
.
PROC6075  CALL     VDED0000          * Validate dead on arrival
.
          MATCH     "1",XTRIGCAT
          GOTO      PROC6240 IF NOT EQUAL
.
          MATCH     "T1",XDEPSTAT
          GOTO      PROC6220 IF EQUAL
          MATCH     "T2",XDEPSTAT
          GOTO      PROC6220 IF EQUAL
          MATCH     "T3",XDEPSTAT
          GOTO      PROC6220 IF EQUAL
          MATCH     "T4",XDEPSTAT
          GOTO      PROC6220 IF EQUAL
          MATCH     "T5",XDEPSTAT
          GOTO      PROC6220 IF EQUAL
          MATCH     "T6",XDEPSTAT
          GOTO      PROC6220 IF EQUAL
          MATCH     "T7",XDEPSTAT
          GOTO      PROC6220 IF EQUAL
.
          MATCH     "10",XDEPSTAT
          GOTO      PROC6220 IF EQUAL
          MATCH     "11",XDEPSTAT
          GOTO      PROC6240 IF NOT EQUAL
.
PROC6220  
.         CLEAR     ERRORMSG
.         APPEND    "E366:DEPARTURE STATUS AND TRIAGE CATEGORY ",ERRORMSG
.         APPEND    "COMBINATION INVALID",ERRORMSG
.         MOVE      ANSW,ERRTYPE
.         RESET     ERRORMSG
.         CALL      PRTERR00
.
PROC6240  MATCH     SP70,XDOCTDAT
          GOTO      PROC6300 IF NOT EQUAL
.
          MATCH     SP70,XNURSDAT
          GOTO      PROC6300 IF NOT EQUAL
.
PROC6250  MATCH     "10",XDEPSTAT                    * D CAR 43517 * C CAR 43016
          GOTO      PROC6400 IF EQUAL                * D CAR 43517 * C CAR 43016
.
          MATCH     "11",XDEPSTAT                                  * C CAR 43016
          GOTO      PROC6400 IF EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E182:CLINICIAN ",ERRORMSG
.         APPEND    "DATE/TIME & DEPARTURE STATUS ",ERRORMSG
.         APPEND    "COMB INVALID",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      PROC6500
.
PROC6300  MATCH     "10",XDEPSTAT             * D CAR 43517     * C CAR 43016
          IF        @EQUAL
.           CLEAR     ERRORMSG
.           APPEND    "E182:FIRST SEEN BY TREATING CLINICIAN ",ERRORMSG
.           APPEND    "DATE/TIME & DEPARTURE STATUS ",ERRORMSG
.           APPEND    "COMB INVALID",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
            GOTO      PROC6500
          ENDIF                           * end D CAR 43517 * end C CAR 43016
.
          MATCH     "11",XDEPSTAT
          IF        @EQUAL
.           CLEAR     ERRORMSG
.           APPEND    "E182:FIRST SEEN BY TREATING CLINICIAN ",ERRORMSG
.           APPEND    "DATE & DEPARTURE STATUS COMBINATION INVALID",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
            GOTO      PROC6500
          ENDIF
.
PROC6400  MOVE      ZERO,F2
          MOVE      SP70,DIM2
          MOVE      XDEPSTAT,DIM2
          SQUEEZE   DIM2
          MOVE      DIM2,F2
          IF        F2=10 | F2=11
            GOTO      PROC6500                   * C CAR 45253
          ENDIF
.
          IF        F2=0 | F2=1 | F2=2 | F2=3 | F2=4 | F2=5 | F2=7 | F2=8 | F2=9
            MATCH     SP70,XDOCTDAT
            IF        @EQUAL
              MATCH     SP70,XNURSDAT
              IF        @EQUAL
.               CLEAR     ERRORMSG
.               APPEND    "E182:FIRST SEEN BY TREATING CLINICIAN ",ERRORMSG
.               APPEND    "DATE & DEPARTURE STATUS COMBINATION",ERRORMSG
.               APPEND    " INVALID",ERRORMSG
.               RESET     ERRORMSG
.               MOVE      ANSR,ERRTYPE
.               CALL      PRTERR00
                GOTO      PROC6500
              ENDIF
            ENDIF
          ENDIF
.
PROC6500  MATCH     SP70,XDOCTTIM
          GOTO      PROC6600 IF NOT EQUAL
.
          MATCH     SP70,XNURSTIM
          GOTO      PROC6600 IF NOT EQUAL
.
          MATCH     "10",XDEPSTAT                  * D CAR 43517 * C CAR 43016
          GOTO      PROC6700 IF EQUAL              * D CAR 43517 * C CAR 43016
.
          MATCH     "11",XDEPSTAT
          GOTO      PROC6700 IF EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E182:FIRST SEEN BY TREATING CLINICIAN ",ERRORMSG
.         APPEND    "DATE & DEPARTURE STATUS COMBINATION",ERRORMSG
.         APPEND    " INVALID",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.  
          GOTO      PROC6700
.
PROC6600  MATCH     "10",XDEPSTAT       * D CAR 43517         * C CAR 43016
          IF        @EQUAL
.           CLEAR     ERRORMSG
.           APPEND    "E182:FIRST SEEN BY TREATING CLINICIAN ",ERRORMSG
.           APPEND    "DATE & DEPARTURE STATUS COMBINATION",ERRORMSG
.           APPEND    " INVALID",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF                         * end D CAR 43517 * end C CAR 43016
.
          MATCH     "11",XDEPSTAT
          IF        @EQUAL
.           CLEAR     ERRORMSG
.           APPEND    "E182:FIRST SEEN BY TREATING CLINICIAN ",ERRORMSG
.           APPEND    "DATE & DEPARTURE STATUS COMBINATION",ERRORMSG
.           APPEND    " INVALID",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
PROC6700  MOVE      ZERO,F2
          MOVE      SP70,DIM2
          MOVE      XDEPSTAT,DIM2
          SQUEEZE   DIM2
          MOVE      DIM2,F2
.
          IF       F2=10 | F2=11
            GOTO    PROC6755
          ENDIF
.
          IF        F2=0 | F2=1 | F2=2 |F2=3 | F2=4 | F2=5 | F2=7 | F2=8 | F2=9
PROC6755    MATCH     SP70,XDOCTTIM
            IF        @EQUAL
              MATCH     SP70,XNURSTIM
              IF        @EQUAL
.               CLEAR     ERRORMSG
.               APPEND    "E182:FIRST SEEN BY TREATING CLINICIAN ",ERRORMSG
.               APPEND    "DATE & DEPARTURE STATUS COMBINATION",ERRORMSG
.               APPEND    " INVALID",ERRORMSG
.               RESET     ERRORMSG
.               MOVE      ANSR,ERRTYPE
.               CALL      PRTERR00
              ENDIF
            ENDIF
          ENDIF
.
..          MATCH     SP70,XPROCDUR
..          IF        @EQUAL | @EOS
..            MATCH     SP70,XPRIDIAG
..            IF        !@EQUAL & !@EOS
..              MOVE      "E205:PROCEDURE BLANK",ERRORMSG
..              MOVE      ANSR,ERRTYPE
..              CALL      PRTERR00
..            ENDIF
..          ENDIF
.
PROC6760  REP       " 0",EMVIDATE
          REP       " 0",EMVIDDAT
          MOVE      EMVIDATE,CDYSFDTE
          MOVE      EMVIDDAT,CDYSTDTE
          CALL      CALCDAYS
          IF        CDYSDAYS>10
.           CLEAR     ERRORMSG
.           APPEND    "E219:LENGTH OF STAY > 10 DAYS",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSW,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          IF        CDYSDAYS>4 & CDYSDAYS<10
            CLEAR     ERRORMSG
            APPEND    "E350:LENGTH OF STAY GREATER THAN 4 DAYS ",ERRORMSG
            APPEND    "AND LESS THAN 10 DAYS",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSW,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
          MATCH     "26",XDEPSTAT
          GOTO      PROC6770 IF EQUAL
.
          MATCH     "14",XDEPSTAT
          GOTO      PROC6770 IF EQUAL
          MATCH     "15",XDEPSTAT
          GOTO      PROC6770 IF EQUAL
          MATCH     "16",XDEPSTAT
          GOTO      PROC6770 IF EQUAL
          MATCH     "18",XDEPSTAT
          GOTO      PROC7100 IF NOT EQUAL
.
PROC6770  MATCH     SP70,EMVIUD03          * Ward request date
          GOTO      PROC7100 IF NOT EQUAL
.
          MATCH     SP70,EMVIUT03          * Ward request time
          GOTO      PROC7100 IF NOT EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E339:INPATIENT BED REQUEST BED DATE/TIME ",ERRORMSG
.         APPEND    "AND DEPARTURE STATUS COMBINATION INVALID ",ERRORMSG
.         APPEND    "- NOTIFIABLE",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSW,ERRTYPE
.         CALL      PRTERR00
.
PROC7100  MATCH     SP70,XINJURY
          GOTO      PROC7200 IF EQUAL
.
          MATCH     "6",XDEPSTAT
          GOTO      PROC7200 IF EQUAL
.
          BRANCH    COMBFLAG,PROC7150
.
          PACK      KEY10,XINJURY,XBREGION,ICDDIAGN
          CALL      RDEMMX1
          IF        OVRCD=0
            GOTO      PROC7200
          ENDIF
.
          PACK      KEY10,XINJURY,XBREGION,SP70
          CALL      RSEMMX1
          IF        OVRCD=0
            CALL      RPEMMX1
          ENDIF
          CALL      RKEMMX1
.
          IF        OVRCD=1
            GOTO      PROC7150
          ENDIF
.
          MATCH     XINJURY,EMMXNAT
          GOTO      PROC7150 IF NOT EQUAL
.
          MATCH     XBREGION,EMMXBRG
          GOTO      PROC7150 IF NOT EQUAL
.
          PACK      KEY9,EMMXPDG,SP70
          CALL      RDEMICD1
          IF        OVRCD<>1
            MOVE      EMICVEMD,XPRIDIAG
          ENDIF
          GOTO      PROC7200
.
PROC7150  
.         CLEAR     ERRORMSG
.         APPEND    "E320:NATURE OF MAIN INJURY, BODY REGION AND ",ERRORMSG
.         APPEND    "PRIMARY DIAGNOSIS COMBINATION INVALID",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSW,ERRTYPE
.         CALL      PRTERR00
.
PROC7200  UNPACK    EMVIDATE,CCENT,CYEAR,CMON,CDAY
          PACK      AGEDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",AGEDATE
          CALL      CALCAGE
.
          UNPACK    XPRIDIAG,KEY3,KEY2
          PACK      DIAGCODE,KEY3,DECIMAL,KEY2
          SQUEEZE   DIAGCODE
          CALL      CHKDG000
.
          MOVE      XPRIDIAG,FDIAG
          CALL      SCANDG00
.
          UNPACK    XADDIAG1,KEY3,KEY2
          PACK      DIAGCODE,KEY3,DECIMAL,KEY2
          SQUEEZE   DIAGCODE
          CALL      CHKDG000
.
          MOVE      XADDIAG1,FDIAG
          CALL      SCANDG00
.
          UNPACK    XADDIAG2,KEY3,KEY2
          PACK      DIAGCODE,KEY3,DECIMAL,KEY2
          SQUEEZE   DIAGCODE
          CALL      CHKDG000
.
          MOVE      XADDIAG2,FDIAG
          CALL      SCANDG00
.                                                        * I-49808
          MOVE      ZERO,F2
          SQUEEZE   XDEPSTAT
          MOVE      XDEPSTAT,F2
          PACK      XDEPSTAT,XDEPSTAT,SP70
          IF        F2=10|F2=11
            CALL      BINJ0000
          ENDIF
.
.
. ------- Get decision to admit dates/time  --------
.
          CALL      DTOA0000           * 2014 / 2015 VEMD
.
. ------- Get ambulance arrival and handover dates/time  --------
.
          CALL      AMBD0000           * 2014 / 2015 VEMD
.                                                        * end I-49808
.
. ------- Interpreter Required --------
.
PROC7300  CALL      NINT0000 
.
.
. ------- Type of Usual Accommodation --------
.
PROC7400  CALL      TYPA0000
.
. ------- Time to Treatment --------
.
PROC7700  CALL      TTTR0000                           * I-49808

.         Load the NDIS Identifier Number
.
. ------- NDIS identifier ----------
.
PROC7900  CALL      NDIS0000                     * First try load NDIS Id
          MATCH     SP70,PMCDCNUM                * from PMSCCD
          IF        !@EQUAL & !@EOS
            MOVE      PMCDCNUM,XNDISID
          ENDIF
.
          CALL      NDI20000                     * Then try load NDIS Id
          MATCH     SP100,PTARTXT1               * from PATATR if existing
          IF        !@EQUAL & !@EOS
            MOVE      PTARTXT1,XNDISID
          ENDIF
.
.         Finally, update the sent flag and write the extract record 
.         for the record if resubmit = 2 only
.
PROC8000  CALL      NEWV0000              * new validation after 01/07/2002
.                                         * and 01/07/2003
          CALL      FRRE0000                                           *I-52476
.
          CALL      FUND0000              * Funding Source VEMD 2025
.
          BRANCH    RESUBMIT,PROC9999,PROC9000
          MOVE      ZERO,EXIT
          GOTO      PROC9999
.
PROC9000  COMPARE   ZERO,VEMDEXTR
          GOTO      PROC9100 IF EQUAL
.
          COMPARE   ONE,DOYR2025
          GOTO      PROC9050 IF EQUAL
.
          WRITE     XXTRACT1,SEQ;XCAMPUS,DEL,XUNIQUE,DEL,XPATNTID,DEL:
                                 XMEDINUM,DEL,XMEDISUF,DEL,DEL:
                                 XPATSEX,DEL,XBRTHDAT,DEL:
                                 DEL,DEL:
                                 XINDIG,DEL,DEL:
                                 DEL,DEL:
                                 DEL,DEL:
                                 XARRMODE,DEL,XREFDBY,DEL:
                                 DEL,XVISTYP,DEL,XCOMPST,DEL:
                                 DEL,XARRDATE,DEL,XARRTIME,DEL:
                                 DEL,DEL,XTRIGCAT,DEL:
                                 XNURSDAT,DEL,XNURSTIM,DEL,XDOCTDAT,DEL:
                                 XDOCTTIM,DEL,XMENHDAT,DEL,XMENHTIM,DEL:
                                 DEL,DEL,DEL:
                                 XDEPDATE,DEL,XDEPTIME,DEL:
                                 XDEPSTAT,DEL,DEL:
                                 XREFDEPT,DEL,DEL:
                                 DEL,DEL:
                                 DEL,DEL,DEL:
                                 DEL,DEL,DEL:
                                 DEL,DEL,DEL:
                                 XAATDDAT,DEL,XAATDTIM,DEL:
                                 XAHOVDAT,DEL,XAHOVTIM,DEL:
                                 DEL,DEL,DEL:
                                 XSERVTYP,DEL,DEL:
                                 XGENDER,DEL,XNDISID
.
          GOTO      PROC9100
.
PROC9050  WRITE     XXTRACT1,SEQ;XCAMPUS,DEL,XUNIQUE,DEL,XPATNTID,DEL:
                                 XMEDINUM,DEL,XMEDISUF,DEL,DEL:
                                 XPATSEX,DEL,XBRTHDAT,DEL:
                                 DEL,DEL:
                                 XINDIG,DEL,DEL:
                                 DEL,DEL:
                                 DEL,DEL:
                                 XARRMODE,DEL,XREFDBY,DEL:
                                 DEL,XVISTYP,DEL,XCOMPST,DEL:
                                 DEL,XARRDATE,DEL,XARRTIME,DEL:
                                 DEL,DEL,XTRIGCAT,DEL:
                                 XNURSDAT,DEL,XNURSTIM,DEL,XDOCTDAT,DEL:
                                 XDOCTTIM,DEL,XMENHDAT,DEL,XMENHTIM,DEL:
                                 DEL,DEL,DEL:
                                 XDEPDATE,DEL,XDEPTIME,DEL:
                                 XDEPSTAT,DEL,DEL:
                                 XREFDEPT,DEL,DEL:
                                 DEL,DEL:
                                 DEL,DEL,DEL:
                                 DEL,DEL,DEL:
                                 DEL,DEL,DEL:
                                 XAATDDAT,DEL,XAATDTIM,DEL:
                                 XAHOVDAT,DEL,XAHOVTIM,DEL:
                                 DEL,DEL,DEL:
                                 XSERVTYP,DEL,DEL:
                                 XGENDER,DEL,XNDISID,DEL,XFUNDSRC
.
PROC9100  
.          COMPARE   ZERO,VISSEXTR
.          GOTO      PROC9200 IF EQUAL
..
.          COMPARE   ZERO,INJFLAG
.          GOTO      PROC9200 IF EQUAL
..
.          MOVE      XCAMPUS,VCAMPUS
.          MOVE      XPATNTID,VPATNTID
.          MOVE      XPATSEX,VSEX
.          MOVE      XBRTHDAT,VDOB
.          MOVE      XCNTRY,VCOB
.          MOVE      XINDIG,VINDIG
.          MOVE      XPRELANG,VLANG
.          MOVE      XPRELAN4,VLANG4
.          MOVE      XLOCAL,VLOCAL
.          MOVE      XPOSTCOD,VPOST
.          MOVE      XARRMODE,VATRANS
.          MOVE      XVISTYP,VTYPEVIS
.          MOVE      XTSOURCE,VSOURCE
.          MOVE      XCOMPST,VCOMSTAT
.          MOVE      XARRDATE,VARRDAT
.          MOVE      XARRTIME,VARRTIM
.          MOVE      XPROCDUR,VPROCS
.          MOVE      XDEPSTAT,VDEPSTAT
.          MOVE      XTDESTN,VDEST
.          MOVE      XREFDEPT,VREFDEPT
.          MOVE      XDEPTMOD,VDTRANS
.          MOVE      XINJURY,VINJURY
.          MOVE      XBREGION,VBREGION
.          MOVE      XINJEVNT,VDESCINJ
.          REP       ", ",VDESCINJ
.          MOVE      XINJCAUS,VINJCAUS
.          MOVE      XHINTENT,VHUMINT
.          MOVE      XINJPLAC,VPLACE
.          MOVE      XINJACTV,VACTIV
..         MOVE      XINJPROD,VINJPROD
..         MOVE      XINJSAFE,VINJSAFE
..
.          WRITE     VISSFILE,SEQ;VCAMPUS,DEL,VPATNTID,DEL,VSEX,DEL,VDOB:
.                                 DEL,VCOB,DEL,VINDIG,DEL,VLANG4,DEL,VLOCAL:
.                                 DEL,VPOST,DEL,VATRANS,DEL,VSOURCE,DEL:
.                                 VCOMSTAT,DEL,VTYPEVIS,DEL,VARRDAT,DEL,VARRTIM:
.                                 DEL,VPROCS,DEL,VDEPSTAT,DEL,VDEST,DEL:
.                                 VREFDEPT,DEL,VDTRANS,DEL,VINJURY,DEL:
.                                 VBREGION,DEL,VDESCINJ,DEL:
.                                 VINJCAUS,DEL,VHUMINT,DEL,VPLACE,DEL,VACTIV
.
PROC9200  
.         COMPARE   ZERO,PBREPORT
.         GOTO      PROC9300 IF EQUAL
.
.         CALL      PAPER000
.
PROC9300  MOVE      ZERO,EXIT
          GOTO      PROC9999
.
PROC9900  PRINT     *N,*2,"FATAL ERROR: ",*15,ERRORMSG
          MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9990  
...       MOVE      "P.M.I RECORD MISSING",ERRORMSG
...       MOVE      ANSR,ERRTYPE
...       CALL      PRTERR00
          MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9995  MOVE      "P.M.I EXTENSION RECORD MISSING",ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
          MOVE      ZERO,EXIT
          GOTO      PROC9999
.
PROC9996  MOVE      "VISIT EXTENSION RECORD MISSING",ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
          MOVE      ZERO,EXIT
          GOTO      PROC9999
.
PROC9999  RETURN
+
.----------------------------------------------------------------------
.        CHKS0000 - check if first seen by doctor date/time should be sent
.----------------------------------------------------------------------
CHKS0000  MATCH     SP70,EMVIDSTA
          GOTO      CHKS9999 IF EQUAL
.
          PACK      KEY5,CODEED,EMVIDSTA
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD=1
            GOTO      CHKS9999
          ENDIF
.
          MOVE      SP70,DIM2
          MOVE      THCSCOD,DIM2
.
          MATCH     "T1",DIM2
          GOTO      CHKS9000 IF EQUAL
.
          MOVE      ZERO,F2
          MOVE      DIM2,F2
          IF        F2=10 | F2=11 | F2=30
            GOTO      CHKS9000
          ENDIF
          GOTO      CHKS9999
.
CHKS9000  MOVE      SP70,XDOCTDAT           * Left before seeing doctor
          MOVE      SP70,XDOCTTIM
.
CHKS9999  RETURN
+
.----------------------------------------------------------------------
.                             DSEEN000 
.             Check if Doctor/Nurse first seen is a Mental Health Prac.
.----------------------------------------------------------------------
.DSEEN000 MOVE      ZERO,NMHFLAG               * Mental Health Nursing flag
.         MOVE      ZERO,TMHFLAG               * Mental Health Treating Doc.flag
.
.         MATCH     SP70,EMVIMPRA              * First seen by Mental        
.         GOTO      DSEEN500 IF NOT EQUAL      * Health Practitioner
.
.         PACK      KEY22,DEMVIADM,SP70   * Read for Fisrt seen Date & Time
.         CALL      RSEMHIS1
.DSEEN100 CALL      RKEMHIS1
.         BRANCH    OVRCD,DSEEN999
.
.         MATCH     DEMVIADM,EMHIVIS           * Check Visit no
.         GOTO      DSEEN999 IF NOT EQUAL
.
.         MATCH     SP70,EMHIDOC               * Check doctor
.         GOTO      DSEEN200 IF NOT EQUAL
.
.         MATCH     SP70,EMHINUR               * Check nurse
.         GOTO      DSEEN100 IF EQUAL
.
.         Found first Nurse seen
.
.         PACK      KEY10,EMHINUR,SP70         * Attending nurse
.         CALL      CMHD0000                   * Check for Mental health
.         COMPARE   ZERO,EXIT
.         GOTO      DSEEN999 IF EQUAL          * Not a mental health nurse
.
.         MOVE      ONE,NMHFLAG                * mental health nurse
.         MOVE      EMVINSDT,DATE
.         CALL      VALDAT00
.         BRANCH    EXIT,DSEEN999,DSEEN999
.         MOVE      XDATE,XMENHDAT            * mental health Nurse seen first
.
.         MOVE      EMVINSTM,TIME
.         CALL      VALTIM00
.         BRANCH    EXIT,DSEEN999
.         PACK      XMENHTIM,XTIME,SP70
.         GOTO      DSEEN999
.
.         Found first doctor seen
.
.DSEEN200 PACK      KEY10,EMHIDOC,SP70         * Attending doctor
.         CALL      CMHD0000                   * Check for Mental health
.         COMPARE   ZERO,EXIT
.         GOTO      DSEEN999 IF EQUAL          * Not a mental health Doctor
.
.         MOVE      ONE,TMHFLAG                * Mental Health Doctor
.         MOVE      EMVIDRDT,DATE
.         CALL      VALDAT00
.         BRANCH    EXIT,DSEEN999,DSEEN999
.         MOVE      XDATE,XMENHDAT            * mental health doctor seen first
.
.         MOVE      EMVIDRTM,TIME
.         CALL      VALTIM00
.         BRANCH    EXIT,DSEEN999
.         PACK      XMENHTIM,XTIME,SP70
.
.         GOTO      DSEEN999
.
.DSEEN500 MATCH     EMVIDRDT,EMVIMPDT
.         IF        @EQUAL
.           MATCH     EMVIDRTM,EMVIMPTM
.           IF        @EQUAL
.             CALL      FDOC0000       *  Get first seen by non MH doctor
.             IF        EXIT=1
.               MOVE      ONE,TMHFLAG  * Set only Seen by MH Doctor flag to yes
.             ENDIF
.           ENDIF
.         ENDIF
.
.         MOVE      EMVIMPDT,DATE
.         CALL      VALDAT00
.         BRANCH    EXIT,DSEEN999,DSEEN999
.         MOVE      XDATE,XMENHDAT            * mental health doctor seen first
.         
.         MOVE      EMVIMPTM,TIME
.         CALL      VALTIM00
.         BRANCH    EXIT,DSEEN999
.         PACK      XMENHTIM,XTIME,SP70
.
.DSEEN999 RETURN
+
.----------------------------------------------------------------------
. If first seen doctor was a MH doctor find the first seen date and
. time of a non MH doctor
.----------------------------------------------------------------------
FDOC0000  PACK      KEY22,DEMVIADM,SP70
          CALL      RSEMHIS1
FDOC1000  CALL      RKEMHIS1
          BRANCH    OVRCD,FDOC9000
.
          MATCH     DEMVIADM,EMHIVIS           * Check Visit no
          GOTO      FDOC9000 IF NOT EQUAL
.
          MATCH     SP70,EMHIDOC               * Any doctor allocated
          GOTO      FDOC1000 IF EQUAL
.
          MATCH     EMVIMPRA,EMHIDOC           * Skip first seen by MH
          GOTO      FDOC1000 IF EQUAL          * doctor
.
          PACK      KEY10,EMHIDOC,SP70         * Attending doctor
          CALL      CMHD0000                   * Check for Mental health
          BRANCH    EXIT,FDOC1000              * Skip if MH
.
          MATCH     EMHIDSD,EMVIDDAT           * Ignore doctor allocated
          GOTO      FDOC9000 IF LESS           * after patient was discharged
.
          MATCH     EMHIDSD,EMVIDDAT
          IF        @EQUAL
             UNPACK    EMHIDST,HOUR,MIN,SEC
             PACK      DOCTTIME,HOUR,COLON,MIN,COLON,SEC,SP70
.
             MATCH     DOCTTIME,EMVIDTIM       * Ignore doctor allocated
             GOTO      FDOC9000 IF LESS        * after patient was discharged
          ENDIF
.
          MOVE      EMHIDSD,EMVIDRDT           * Set first seen date/time
          UNPACK    EMHIDST,HOUR,MIN,SEC
          PACK      EMVIDRTM,HOUR,COLON,MIN,COLON,SEC
.
          MOVE      ZERO,EXIT          * Yes seen by a non MH doctor
          GOTO      FDOC9999
.
FDOC9000  MOVE      ONE,EXIT           * Not seen by a non MH doctor
          GOTO      FDOC9999
.
FDOC9999  RETURN
+
.----------------------------------------------------------------------
.                             SEEN0000
. Collect first seen by doctor, nurse and MH practitioner date/time
.----------------------------------------------------------------------
SEEN0000  MOVE      SP70,SAVEDOCT
          MOVE      SP70,SAVENURS
          MOVE      SP70,EMVIDRDT         * Will be populated below
          MOVE      SP70,EMVIDRTM
.
          MATCH     SP70,EMVIMPRA         * Any First seen by Mental
          GOTO      SEEN0500 IF EQUAL     * Health Practitioner
.
          MOVE      EMVIMPDT,DATE
          CALL      VALDAT00
          BRANCH    EXIT,SEEN0500,SEEN0500
          MOVE      XDATE,XMENHDAT         * mental health doctor seen first
.
          MOVE      EMVIMPTM,TIME
          CALL      VALTIM00
          BRANCH    EXIT,SEEN0500
          PACK      XMENHTIM,XTIME,SP70
.
SEEN0500  PACK      KEY22,DEMVIADM,SP70   * Read for First seen Date & Time
          CALL      RSEMHIS1
SEEN1000  CALL      RKEMHIS1
          BRANCH    OVRCD,SEEN9999
.
          MATCH     DEMVIADM,EMHIVIS           * Check Visit no
          GOTO      SEEN9999 IF NOT EQUAL
.
          MATCH     SAVEDOCT,EMHIDOC           * Check new doctor
          IF        !@EQUAL
            MOVE      EMHIDOC,SAVEDOCT
            GOTO      SEEN2000
          ENDIF
.
          MATCH     SP70,EMHINUR               * Check new nurse
          IF        !@EQUAL
            MOVE      EMHINUR,SAVENURS
            GOTO      SEEN4000
          ENDIF
.
          GOTO      SEEN1000
.
.         Found doctor seen
.
SEEN2000  MATCH     EMHIDSD,EMVIDDAT           * Ignore doctor allocated
          GOTO      SEEN1000 IF LESS           * after patient was discharged
.
          MATCH     EMHIDSD,EMVIDDAT
          IF        @EQUAL
             UNPACK    EMHIDST,HOUR,MIN,SEC
             PACK      DOCTTIME,HOUR,COLON,MIN,COLON,SEC,SP70
.
             MATCH     DOCTTIME,EMVIDTIM       * Ignore doctor allocated
             GOTO      SEEN1000 IF LESS        * after patient was discharged
          ENDIF
. 
          PACK      KEY10,EMHIDOC,SP70         * Attending doctor
          CALL      CMHD0000                   * Check for Mental health
          COMPARE   ZERO,EXIT
          GOTO      SEEN3000 IF EQUAL          * Not a mental health Doctor
.
          MATCH     SP70,XMENHDAT              * mental health doctor seen 
          GOTO      SEEN1000 IF NOT EQUAL
.
          MOVE      EMHIDSD,DATE
          CALL      VALDAT00
          BRANCH    EXIT,SEEN9999,SEEN9999
          MOVE      XDATE,XMENHDAT            * mental health doctor seen first
.
          UNPACK    EMHIDST,HOUR,MIN,SEC
          PACK      TIME,HOUR,COLON,MIN,COLON,SEC
          CALL      VALTIM00
          BRANCH    EXIT,SEEN9999
          PACK      XMENHTIM,XTIME,SP70
          GOTO      SEEN8000
.
.         Not a MH Doctor
.
SEEN3000  MATCH     SP70,XDOCTDAT      * First Seen By Treating Doctor Date
          GOTO      SEEN1000 IF NOT EQUAL
.
          MOVE      EMHIDSD,DATE
          CALL      VALDAT00
          BRANCH    EXIT,SEEN9999,SEEN9999
          MOVE      XDATE,XDOCTDAT      * First Seen By Treating Doctor Date    
          MOVE      EMHIDSD,EMVIDRDT
.
          UNPACK    EMHIDST,HOUR,MIN,SEC
          PACK      TIME,HOUR,COLON,MIN,COLON,SEC
          CALL      VALTIM00
          BRANCH    EXIT,SEEN9999
          PACK      XDOCTTIM,XTIME,SP70
          PACK      EMVIDRTM,TIME,SP70
.
          GOTO      SEEN8000
.
.         Found nurse seen
.
SEEN4000  MATCH     EMHINSD,EMVIDDAT           * Ignore nurse allocated
          GOTO      SEEN1000 IF LESS           * after patient was discharged
.
          MATCH     EMHINSD,EMVIDDAT
          IF        @EQUAL
             UNPACK    EMHINST,HOUR,MIN,SEC
             PACK      NURSTIME,HOUR,COLON,MIN,COLON,SEC,SP70
.
             MATCH     NURSTIME,EMVIDTIM       * Ignore nurse allocated
             GOTO      SEEN1000 IF LESS        * after patient was discharged
          ENDIF
.
          PACK      KEY10,EMHINUR,SP70         * Attending nurse
          CALL      CMHD0000                   * Check for Mental health
          COMPARE   ZERO,EXIT
          GOTO      SEEN5000 IF EQUAL          * Not a mental health nurse
.
          MATCH     SP70,XMENHDAT              * MH Seen date populated
          GOTO      SEEN1000 IF NOT EQUAL
.
          MOVE      EMHINSD,DATE
          CALL      VALDAT00
          BRANCH    EXIT,SEEN1000,SEEN1000
          MOVE      XDATE,XMENHDAT            * mental health Nurse seen
.
          UNPACK    EMHINST,HOUR,MIN,SEC
          PACK      TIME,HOUR,COLON,MIN,COLON,SEC
          CALL      VALTIM00
          BRANCH    EXIT,SEEN1000
          PACK      XMENHTIM,XTIME,SP7
          GOTO      SEEN8000
.
.         Not a MH Nurse
.
SEEN5000  MATCH     SP70,XNURSDAT              * MH Seen date populated
          GOTO      SEEN1000 IF NOT EQUAL
.
          MOVE      EMHINSD,DATE
          CALL      VALDAT00
          BRANCH    EXIT,SEEN1000,SEEN1000
          MOVE      XDATE,XNURSDAT            * mental health Nurse seen
          MOVE      EMHINSD,EMVINSDT
.
          UNPACK    EMHINST,HOUR,MIN,SEC
          PACK      TIME,HOUR,COLON,MIN,COLON,SEC
          CALL      VALTIM00
          BRANCH    EXIT,SEEN1000
          PACK      XNURSTIM,XTIME,SP7
          MOVE      TIME,EMVINSTM
          GOTO      SEEN8000
.
SEEN8000  MATCH     SP70,XDOCTDAT      * First Seen By Treating Doctor Date
          GOTO      SEEN1000 IF EQUAL
.
          MATCH     SP70,XNURSDAT      * First Seen By Treating Nurse Date
          GOTO      SEEN1000 IF EQUAL
.
          MATCH     SP70,XMENHDAT      * First Seen By Mental Health Date
          GOTO      SEEN1000 IF EQUAL
.
          PACK      KEY5,CODEED,EMVIDSTA,SP70
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,SEEN9999
.
          MOVE      ZERO,FORM2                   
          MOVE      SP70,DIM2
          UNPACK    THCSCOD,DIM2
          SQUEEZE   DIM2
          MOVE      DIM2,FORM2
.
          MOVE      THCSCOD,XDEPSTAT
.
          MATCH     "T1",DIM2
          GOTO      SEEN9000 IF EQUAL
.
          IF        F2=10 | F2=11 | F2=30
            GOTO      SEEN9000
          ENDIF
.
          IF        F2=31
            PACK      KEY30,EMVIDOCT,EMVIATNS,EMVIMPRA,SP70
            GOTO      SEEN9999 IF EQUAL
          ENDIF
          GOTO      SEEN9999
.
SEEN9000  MOVE      SP70,XDOCTDAT           * Left before seeing doctor
          MOVE      SP70,XDOCTTIM
.
SEEN9999  RETURN
+
.----------------------------------------------------------------------
.                             CMHD0000
.             Check for Mental Health Practioner                   
.----------------------------------------------------------------------
CMHD0000  MOVE      ZERO,EXIT
          MATCH     SP70,KEY10
          GOTO      CMHD9999 IF EQUAL
.
          CALL      RDPMHCP1                     * read doctor file
          BRANCH    OVRCD,CMHD9999
          MOVE      ZERO,FORM1
.
CMHD1000  COMPARE   FIVE,FORM1
          GOTO      CMHD9999 IF EQUAL
.
          ADD       ONE,FORM1
          MOVE      SP70,KEY3
          LOAD      KEY3,FORM1,PMHCSPC1,PMHCSPC2,PMHCSPC3,PMHCSPC4,PMHCSPC5
          MATCH     SP70,KEY3
          GOTO      CMHD1000 IF EQUAL
.
          PACK      KEY5,CODEDT,KEY3
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,CMHD1000
.
          MATCH     "L",TCINDC1
          GOTO      CMHD1000 IF NOT EQUAL
          MOVE      ONE,EXIT                   * Mental health
.
CMHD9999  RETURN
+
.----------------------------------------------------------------------
.                             NEWV0000
.             New validations after the 01/07/2002                 
.----------------------------------------------------------------------
NEWV0000  MATCH     EMVIDATE,EMVIDDAT
          IF        @LESS
            CLEAR     ERRORMSG
            APPEND    "E340:DEPARTURE DATE BEFORE ARRIVAL DATE ",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      NEWV0100
          ENDIF
.
          MATCH     EMVIDATE,EMVIDDAT
          GOTO      NEWV0100 IF NOT EQUAL
.
          MOVE      XDEPTIME,TIME1
          MOVE      XARRTIME,TIME2
          COMPARE   TIME2,TIME1
          IF        @LESS
            CLEAR     ERRORMSG
            APPEND    "E340:DEPARTURE TIME BEFORE ARRIVAL TIME ",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
.
NEWV0100  MATCH     "Z099",XPRIDIAG
          GOTO      NEWV0150 IF NOT EQUAL
.
          MATCH     SP70,XADDIAG1
          GOTO      NEWV0150 IF NOT EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E341:PRIMARY DIAGNOSIS EQUALS Z099 BUT ",ERRORMSG
.         APPEND    "ADDITIONAL DIAGNOSIS BLANK",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.
NEWV0150  MATCH     "Z099",XADDIAG1
          GOTO      NEWV0151 IF EQUAL
.
          MATCH     "Z099",XADDIAG1
          GOTO      NEWV0151 IF EQUAL
.
          GOTO      NEWV0200
.
NEWV0151  
.         CLEAR     ERRORMSG
.         APPEND    "###:ADDITIONAL DIAGNOSIS 1 OR 2 EQUALS ",ERRORMSG
.         APPEND    "Z099",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.
NEWV0200  MATCH    "10",XDEPSTAT
          GOTO     NEWV0300 IF EQUAL              * C CAR 42905
.
          MATCH    "11",XDEPSTAT
          GOTO     NEWV3000 IF NOT EQUAL
.
NEWV0300  MATCH    SP70,XPRIDIAG
          IF       @EQUAL
            MATCH    "10",XDEPSTAT
            GOTO     NEWV4000 IF EQUAL
            MATCH    "30",XDEPSTAT
            GOTO     NEWV4000 IF EQUAL
            GOTO     NEWV3000
          ENDIF
.         
.         CLEAR     ERRORMSG
.         APPEND    "E342:PRIMARY DIAGNOSIS RECORDED WHEN ",ERRORMSG
.         APPEND    "DEPARTURE STATUS IS 6",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.
NEWV3000  MATCH     "8",XDEPSTAT
          GOTO      NEWV4000 IF NOT EQUAL
.
          MATCH     "R99",XPRIDIAG
          GOTO      NEWV4000 IF EQUAL
.
          MATCH     "R95",XPRIDIAG
          GOTO      NEWV4000 IF EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E342:INVALID COMBINATION BETWEEN PRIMARY ",ERRORMSG
.         APPEND    "DIAGNOSIS AND DEPARTURE STATUS",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.
NEWV4000  MATCH     "6",XREFDBY
          GOTO      NEWV5000 IF NOT EQUAL
.
          MATCH     SP70,XTSOURCE
          GOTO      NEWV5000 IF NOT EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E136:REFERRED BY A TRANSFER SOURCE ",ERRORMSG
.         APPEND    "COMBINATION INVALID ",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      NEWV9999
.
NEWV5000  MATCH     SP70,XTSOURCE
          GOTO      NEWV9999 IF EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E136:REFERRED BY A TRANSFER SOURCE ",ERRORMSG
.         APPEND    "COMBINATION INVALID ",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.
NEWV9999  RETURN
+
.----------------------------------------------------------------------
.                             GCAT0000              
.             Get the category for the UDF and load the field value        
. Requires : CATEGORY  - category for patcodes                             
. Returns  : DIM3 - code for patcodes                                      
.            EXIT - 0 = valid code found                                   
.                   1 = no code found                                      
.----------------------------------------------------------------------
.
.         Load each user defined category from 1 - 30 until we find 
.         the matching category for this field
.
GCAT0000  MOVE      ZERO,COUNTR                  * initialise counter
          WHILE     COUNTR < 30
            ADD       ONE,COUNTR                 * increment counter
            LOAD      CODE,COUNTR,CODEA1,CODEA2,CODEA3,CODEA4,CODEA5:
                                  CODEA6,CODEA7,CODEA8,CATEA,CATEB:
                                  CATEC,CATED,CATEE,CATEF,CATEG:
                                  CATEH,CATEI,CATEJ,CATEK,CATEL:
                                  CATEM,CATEN,CATEO,CATEP,CATEQ:
                                  CATER,CATES,CATET,CATEU,CATEV
.
            MATCH     CODE,CATEGORY              * same category ?
            GOTO      GCAT1000 IF EQUAL          * yes
          DO
          GOTO      GCAT9500                     * no - ignore
.
.         We have found the number of the UDF, so load the appropriate code
.
GCAT1000  LOAD      DIM3,COUNTR,EMVIUC01,EMVIUC02,EMVIUC03,EMVIUC04,EMVIUC05:
                                EMVIUC06,EMVIUC07,EMVIUC08,EMVIUC09,EMVIUC10:
                                EMVIUC11,EMVIUC12,EMVIUC13,EMVIUC14,EMVIUC15:
                                EMVIUC16,EMVIUC17,EMVIUC18,EMVIUC19,EMVIUC20:
                                EMVIUC21,EMVIUC22,EMVIUC23,EMVIUC24,EMVIUC25:
                                EMVIUC26,EMVIUC27,EMVIUC28,EMVIUC29,EMVIUC30
.
          MATCH     SP70,DIM3                    * field blank ?
          GOTO      GCAT9500 IF EQUAL            * yes - invalid
.
          PACK      KEY5,CATEGORY,DIM3
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,GCAT9500               * no - invalid
.
          MOVE      ZERO,EXIT
          GOTO      GCAT9999
.
GCAT9500  MOVE      ONE,EXIT
.
GCAT9999  RETURN
.----------------------------------------------------------------------
. Get Medicare Suffix      
.----------------------------------------------------------------------
MSFX0000  
...       MATCH     SP70,PMEDI                 * Blank medicare number
...       GOTO      MSFX2100 IF NOT EQUAL     
.
          MOVE      EMVIADMN,PVIBILL
          PACK      KEY8,PVIBILL
          CALL      RDPTVIS1                 * Lock and read record
          BRANCH    OVRCD,MSFX3000
.
          MATCH     SP70,PVIRESI
          IF        @EQUAL
            MOVE      PTYPE,DIM3
          ELSE
            MOVE      PVIRESI,DIM3
          ENDIF
.
          PACK      KEY5,ANST,SP1,DIM3
          CALL      RDCODE1                      * read PATCODFD record
          BRANCH    OVRCD,MSFX1000
.
          MATCH     "3",TCINDC1
          IF        @EQUAL
            GOTO      MSFX1200
          ENDIF
.
          MATCH     SP70,PMEDI                 * Blank medicare number
          GOTO      MSFX2100 IF NOT EQUAL
.
          MATCH     SP70,TCINDC1                  * blank 1st Indicator ?
          GOTO      MSFX1000 IF EQUAL            * yes
.
          TYPE      TCINDC1                      * is 1st Indicator numeric ?
          GOTO      MSFX1000 IF NOT EQUAL        * no
          MOVE      TCINDC1,FORM1                * yes
.
          BRANCH    FORM1,MSFX1000,MSFX1100,MSFX1200
          GOTO      MSFX2000                     * invalid 1st Indicator
.
. ------  1st Indicator = "1"  ------
.
MSFX1000  MOVE      "C-U",XMEDISUF
          GOTO      MSFX1300
.
. ------  1st Indicator = "2"  ------
.
MSFX1100  MOVE      "N-E",XMEDISUF
          GOTO      MSFX1300
.
. ------  1st Indicator = "3"  ------
.
MSFX1200  MOVE      "P-N",XMEDISUF
.
. ------  when Suffix is C-U, N-E or P-N, Medicare Number is set to blank  -----
.
MSFX1300  MOVE      SP70,XMEDINUM
          GOTO      MSFX9999
.
MSFX2000  MATCH     SP70,PMEDI
          GOTO      MSFX3000 IF EQUAL
.
. ------  valid Medicare Number  ------
.
MSFX2100  MOVE      PGNAME,KEY25
          SCAN      "Son of",KEY25
          GOTO      MSFX2200 IF EQUAL
.
          SCAN      "Daughter of",KEY25
          GOTO      MSFX2200 IF EQUAL
.
          SCAN      "Baby of",KEY25
          GOTO      MSFX2200 IF EQUAL
.
          RESET     KEY25,3
          LENSET    KEY25
          RESET     KEY25
          MOVE      KEY25,XMEDISUF
          GOTO      MSFX9999
.
MSFX2200  MOVE      "BAB",XMEDISUF
          GOTO      MSFX9999
.
MSFX3000  MOVE      "E087:MEDICARE SUFFIX BLANK MSFX3000",ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
.
MSFX9999  RETURN
.----------------------------------------------------------------------
.         Validate a date
.----------------------------------------------------------------------
VALDAT00  MOVE      ZERO,EXIT
          PACK      XDATE,SP70
          MATCH     SP70,DATE
          IF        @EQUAL | @EOS
            MOVE      TWO,EXIT
            GOTO      VALDAT99
          ENDIF
.
          UNPACK    DATE,CCENT,CYEAR,CMON,CDAY
          PACK      XDATE,CDAY,CMON,CCENT,CYEAR
          REP       " 0",XDATE
.
          MOVE      ZERO,F2
          MOVE      CCENT,F2
          IF        F2<>18 & F2<>19 & F2<>20
            MOVE      ONE,EXIT
            GOTO      VALDAT99
          ENDIF
.
          MATCH     "00000000",XDATE
          IF        @EQUAL
            MOVE      ONE,EXIT
            GOTO      VALDAT99
          ENDIF
.
          MOVE      ZERO,EXIT
.
VALDAT99  RETURN
.----------------------------------------------------------------------
.         Validate a time
.----------------------------------------------------------------------
VALTIM00  MOVE      ZERO,EXIT
          PACK      XTIME,SP70
          MATCH     "00:00",TIME
          IF        @EQUAL
            UNPACK    TIME,HOUR,ANS,MIN
            PACK      XTIME,HOUR,MIN
          ELSE
            MATCH     "24:00",TIME
            IF        @EQUAL
              MOVE      "2359",XTIME
            ELSE
              MATCH     SP70,TIME
              IF        @EQUAL | @EOS
                MOVE      ONE,EXIT
              ELSE
                UNPACK    TIME,HOUR,ANS,MIN
                PACK      XTIME,HOUR,MIN
              ENDIF
            ENDIF
          ENDIF
.
VALTIM99  RETURN
.----------------------------------------------------------------------
.         Print error
.----------------------------------------------------------------------
PRTERR00  COMPARE   CLNO,THIRTY
          CALL      HEAD0000 IF LESS
.
          PRINT     *N,*2,EMVIADMN,*13,EMVIURNO,*25,ERRTYPE,*30,ERRORMSG
.
          MATCH     ANSW,ERRTYPE
          IF        @EQUAL
            ADD       ONE,WARNCNT
          ELSE
            ADD       ONE,ERRORCNT
          ENDIF
          ADD       ONE,CLNO
.
PRTERR99  RETURN
.------------------------------------------------------------
. Set CMON from MTHNAM3
.------------------------------------------------------------
SETMTH00  MATCH     JAN,MTHNAM3
          GOTO      SETMON01 IF EQUAL
          MATCH     FEB,MTHNAM3
          GOTO      SETMON02 IF EQUAL
          MATCH     MAR,MTHNAM3
          GOTO      SETMON03 IF EQUAL
          MATCH     APR,MTHNAM3
          GOTO      SETMON04 IF EQUAL
          MATCH     MAY,MTHNAM3
          GOTO      SETMON05 IF EQUAL
          MATCH     JUN,MTHNAM3
          GOTO      SETMON06 IF EQUAL
          MATCH     JUL,MTHNAM3
          GOTO      SETMON07 IF EQUAL
          MATCH     AUG,MTHNAM3
          GOTO      SETMON08 IF EQUAL
          MATCH     SEP,MTHNAM3
          GOTO      SETMON09 IF EQUAL
          MATCH     OCT,MTHNAM3
          GOTO      SETMON10 IF EQUAL
          MATCH     NOV,MTHNAM3
          GOTO      SETMON11 IF EQUAL
          MATCH     DEC,MTHNAM3
          GOTO      SETMON12 IF EQUAL
SETMON01  MOVE      "01",CMON
          GOTO      SETMON99
SETMON02  MOVE      "02",CMON
          GOTO      SETMON99
SETMON03  MOVE      "03",CMON
          GOTO      SETMON99
SETMON04  MOVE      "04",CMON
          GOTO      SETMON99
SETMON05  MOVE      "05",CMON
          GOTO      SETMON99
SETMON06  MOVE      "06",CMON
          GOTO      SETMON99
SETMON07  MOVE      "07",CMON
          GOTO      SETMON99
SETMON08  MOVE      "08",CMON
          GOTO      SETMON99
SETMON09  MOVE      "09",CMON
          GOTO      SETMON99
SETMON10  MOVE      "10",CMON
          GOTO      SETMON99
SETMON11  MOVE      "11",CMON
          GOTO      SETMON99
SETMON12  MOVE      "12",CMON
          GOTO      SETMON99
SETMON99  RETURN
.------------------------------------------------------------
. Check diagnosis is valid
.------------------------------------------------------------
CHKDG000  PACK      KEY9,DIAGCODE
          CALL      RDPT10D1
          BRANCH    OVRCD,CHKDG999
.
          MATCH     SP70,DAGEGP
          GOTO      CHKDG999 IF EQUAL
.
. ----- Perform age checks -----
.
          MOVE      ZERO,FORM2
          MOVE      ZERO,FORM1
          MOVE      PT0D2AGP,FORM1          * 2nd age restraint
          MOVE      PT0D2ALL,FORM2A         * 2nd age low limit
          MOVE      PT0D2AHL,FORM2B         * 2nd age high limit
.
CHKDG110  BRANCH    FORM1,CHKDG120,CHKDG130,CHKDG140,CHKDG150,CHKDG160:
                          CHKDG170,CHKDG180,CHKDG190
          GOTO      CHKDG220
.
CHKDG120  COMPARE   PSAGEMNT,FORM2B
          GOTO      CHKDG220 IF LESS
.
          COMPARE   FORM2A,PSAGEMNT
          GOTO      CHKDG220 IF LESS
          GOTO      CHKDG210                * Fatal - within month range
.
CHKDG130  COMPARE   PSAGEMNT,FORM2B
          GOTO      CHKDG220 IF LESS
.
          COMPARE   FORM2A,PSAGEMNT
          GOTO      CHKDG220 IF LESS
          GOTO      CHKDG200                * Warning - within month range
.
CHKDG140  COMPARE   PSAGE,FORM2B
          GOTO      CHKDG220 IF LESS
.
          COMPARE   FORM2A,PSAGE
          GOTO      CHKDG220 IF LESS
          GOTO      CHKDG210                * Fatal - within year range
.
CHKDG150  COMPARE   PSAGE,FORM2B
          GOTO      CHKDG220 IF LESS
.
          COMPARE   FORM2A,PSAGE
          GOTO      CHKDG220 IF LESS
          GOTO      CHKDG200                * Warning - within year range
.
CHKDG160  COMPARE   PSAGE,FORM2B
          GOTO      CHKDG210 IF LESS        * Fatal - outside year range
.
          COMPARE   FORM2A,PSAGE
          GOTO      CHKDG210 IF LESS        * Fatal - outside year range
          GOTO      CHKDG220
.
CHKDG170  COMPARE   PSAGE,FORM2B
          GOTO      CHKDG200 IF LESS        * Warning - outside year range
.
          COMPARE   FORM2A,PSAGE
          GOTO      CHKDG200 IF LESS        * Warning - outside year range
          GOTO      CHKDG220
.
CHKDG180  COMPARE   PSAGEMNT,FORM2B
          GOTO      CHKDG220 IF LESS        * Fatal - outside month range
.
          COMPARE   FORM2A,PSAGEMNT
          GOTO      CHKDG210 IF LESS        * Fatal - outside month range
          GOTO      CHKDG220
.
CHKDG190  COMPARE   PSAGEMNT,FORM2B
          GOTO      CHKDG200 IF LESS        * Warning - outside month range
.
          COMPARE   FORM2A,PSAGEMNT
          GOTO      CHKDG200 IF LESS        * Warning - outside month range
          GOTO      CHKDG220
.
CHKDG200  MOVE      "E265:DIAGNOSIS CODE AND AGE - CHECK",ERRORMSG
          MOVE      ANSW,ERRTYPE
          CALL      PRTERR00
          GOTO      CHKDG999
.
CHKDG210  MOVE      "E263: Diagnosis and Age Incompatible - NOTIFIABLE",ERRORMSG
          MOVE      ANSW,ERRTYPE            * C-49808
          CALL      PRTERR00
          GOTO      CHKDG999
.
CHKDG220  ADD       ONE,FORM2
          MOVE      ZERO,FORM1
          MOVE      DAGEGP,FORM1            * 1st age restraint
          MOVE      DLOW,FORM2A             * 1st age low limit
          MOVE      DHIGH,FORM2B            * 1st age high limit
          BRANCH    FORM2,CHKDG110          * 2nd pass
.
          GOTO      CHKDG999
.
CHKDG999  RETURN
.------------------------------------------------------------
. Scan diagnosis code for forward slash (/), decimal (.) or space ( )
.------------------------------------------------------------
SCANDG00  STRIP     FDIAG
.
          SCAN      FDIAG,FSLASH
          GOTO      SCANDG90 IF EQUAL
.
          SCAN      FDIAG,DECIMAL
          GOTO      SCANDG90 IF EQUAL
.
          SCAN      FDIAG,SP1
          GOTO      SCANDG90 IF EQUAL
.
          GOTO      SCANDG99
.                                                       * C-49808
SCANDG90  
.
SCANDG99  RETURN
.------------------------------------------------------------
. Paper Based VEMD Reports
.------------------------------------------------------------
PAPER000  CALL      FRMONE00    * Age x Sex Distribution
.
          CALL      FRMTWO00    * Type of Visit x Triage Category
.
          CALL      FRMTHR00    * Triage Category x Time Treated
.
          CALL      FRMFRA00    * Departure Status
.
          CALL      FRMFRB00    * Acute Interhospital Transfers
.
          CALL      FRMFIV00    * Length of Stay - Access/Admission Block
.
PAPER999  RETURN
.------------------------------------------------------------
. Clear Arrays
.------------------------------------------------------------
ARRCLR00  MOVE      ZERO,F1AGE
          REPEAT
            ADD       ONE,F1AGE
            MOVE      ZERO,F1SEX
            REPEAT
              ADD       ONE,F1SEX
              MOVE      ZERO,F1ARRAY[F1AGE][F1SEX]                     * C-49808
            UNTIL     F1SEX = 4
          UNTIL     F1AGE = 18
          MOVE      ZERO,F1AGE
          MOVE      ZERO,F1SEX
.
          MOVE      ZERO,F2TYPE
          MOVE      ZERO,F2TRIAGE
          REPEAT
            ADD       ONE,F2TYPE
            MOVE      ZERO,F2TRIAGE
            REPEAT
              ADD       ONE,F2TRIAGE
              MOVE      ZERO,F2ARRAY[F2TYPE][F2TRIAGE]
            UNTIL     F2TRIAGE = 6
          UNTIL     F2TYPE = 10
.
          MOVE      ZERO,F3TRIAGE
          MOVE      ZERO,F3PERF
          REPEAT
            ADD       ONE,F3TRIAGE
            MOVE      ZERO,F3PERF
            REPEAT
              ADD       ONE,F3PERF
              MOVE      ZERO,F3ARRAY[F3TRIAGE][F3PERF]
            UNTIL     F3PERF = 2
          UNTIL     F3TRIAGE = 6
.
          MOVE      ZERO,F4STAT
          REPEAT
            ADD       ONE,F4STAT
            MOVE      ZERO,F4AARRAY[F4STAT]
.          UNTIL     F4STAT = 8               * D CAR 42299
.          UNTIL     F4STAT = 13              * D CAR 46697
.                                             * I CAR 42299
          UNTIL     F4STAT = 32
.                                             * I CAR 42299 * C CAR 46697
          MOVE      ZERO,F4REAS
          REPEAT
            ADD       ONE,F4REAS
            MOVE      ZERO,F4BARRAY[F4REAS]
          UNTIL     F4REAS = 8
.
          MOVE      ZERO,F5LOS
          MOVE      ZERO,F5REAS
          REPEAT
            ADD       ONE,F5LOS
            MOVE      ZERO,F5REAS
            REPEAT
              ADD       ONE,F5REAS
              MOVE      ZERO,F5ARRAY[F5LOS][F5REAS]
            UNTIL     F5REAS = 3
          UNTIL     F5LOS = 5
.
ARRCLR99  RETURN
.------------------------------------------------------------
. Form 1
.------------------------------------------------------------
FRMONE00  UNPACK    EMVIDATE,CCENT,CYEAR,CMON,CDAY
          PACK      AGEDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",AGEDATE
          CALL      CALCAGE
.
          IF        PSAGEYRS <= 4
            MOVE      ONE,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 5 & PSAGEYRS <= 9
            MOVE      TWO,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 10 & PSAGEYRS <= 14
            MOVE      THREE,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 15 & PSAGEYRS <= 19
            MOVE      FOUR,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 20 & PSAGEYRS <= 24
            MOVE      FIVE,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 25 & PSAGEYRS <= 29
            MOVE      SIX,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 30 & PSAGEYRS <= 34
            MOVE      SEVEN,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 35 & PSAGEYRS <= 39
            MOVE      EIGHT,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 40 & PSAGEYRS <= 44
            MOVE      NINE,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 45 & PSAGEYRS <= 49
            MOVE      TEN,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 50 & PSAGEYRS <= 54
            MOVE      TEN1,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 55 & PSAGEYRS <= 59
            MOVE      TEN2,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 60 & PSAGEYRS <= 64
            MOVE      TEN3,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 65 & PSAGEYRS <= 69
            MOVE      TEN4,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 70 & PSAGEYRS <= 74
            MOVE      TEN5,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 75 & PSAGEYRS <= 79
            MOVE      TEN6,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 80 & PSAGEYRS <= 84
            MOVE      TEN7,F1AGE
            GOTO      FRMONE10
          ENDIF
.
          IF        PSAGEYRS >= 85
            MOVE      TEN8,F1AGE
            GOTO      FRMONE10
          ENDIF
.
.
FRMONE10  MATCH     "9",XPATSEX                       * I-49808
          GOTO      FRMONE99 IF EQUAL                 * "Unknown"
.
          MOVE      XPATSEX,F1SEX
          GOTO      FRMONE20                          * end I-49808
.
FRMONE20  ADD       ONE,F1ARRAY[F1AGE][F1SEX]
.
FRMONE99  RETURN
.------------------------------------------------------------
. Form 2
.------------------------------------------------------------
FRMTWO00  SQUEEZE   XVISTYP
          MOVE      XVISTYP,F2TYPE
.
          SQUEEZE   XTRIGCAT
          MOVE      XTRIGCAT,F2TRIAGE
.
          IF        F2TYPE>10
            GOTO      FRMTWO99
          ENDIF
.
FRMTWO20  ADD       ONE,F2ARRAY[F2TYPE][F2TRIAGE]
.
FRMTWO99  RETURN
.------------------------------------------------------------
. Form 3
.------------------------------------------------------------
FRMTHR00  MOVE      ZERO,F3TRIAGE
          SQUEEZE   XTRIGCAT
          MOVE      XTRIGCAT,F3TRIAGE
.
          COMPARE   ZERO,F3TRIAGE
          GOTO      FRMTHR99 IF EQUAL
.
          COMPARE   SIX,F3TRIAGE
          GOTO      FRMTHR90 IF EQUAL
.
          MATCH     SP70,EMVIDATE
          GOTO      FRMTHR90 IF EQUAL
.
          MATCH     SP70,EMVITRDT
          GOTO      FRMTHR90 IF EQUAL
.
          MATCH     SP70,XARRTIME
          GOTO      FRMTHR90 IF EQUAL
.
          MATCH     SP70,XTRITIME
          GOTO      FRMTHR90 IF EQUAL
.
          MATCH     XNURSTIM,XDOCTTIM               * I-46697
          IF        @LESS
           MOVE       EMVIDATE,FIRSTDAT
           MOVE       EMVIDRDT,LASTDATE
           MOVE       XARRTIME,FIRSTIME
           MOVE       XDOCTTIM,LASTTIME
          ELSE
           MOVE       EMVIDATE,FIRSTDAT
           MOVE       EMVINSDT,LASTDATE
           MOVE       XARRTIME,FIRSTIME
           MOVE       XNURSTIM,LASTTIME             * end I-46697
          ENDIF
.
.         MOVE      EMVIDATE,FIRSTDAT               * D-46697
.         MOVE      EMVITRDT,LASTDATE
.         MOVE      XARRTIME,FIRSTIME
.         MOVE      XTRITIME,LASTTIME               * end D-46697
.
          CALL      TIMEDIFF
          MOVE      CALCTIME,SAVETIME
.
          MOVE      ZERO,TIMELIMT
          LOAD      TIMELIMT,F3TRIAGE,ONE,TEN,THIRTY,SIXTY,HUNDRE20    * C-46697
.
          IF        CALCTIME>TIMELIMT
            GOTO      FRMTHR90
          ELSE
            ADD       ONE,F3ARRAY[F3TRIAGE][2]
            GOTO      FRMTHR90
          ENDIF
.
FRMTHR90  ADD       ONE,F3ARRAY[F3TRIAGE][1]
.
FRMTHR99  RETURN
.------------------------------------------------------------
. Form 4a
.------------------------------------------------------------
FRMFRA00  MOVE      ZERO,F2                         * I CAR 42299
          SQUEEZE   XDEPSTAT                        * I CAR 46697
          MOVE      XDEPSTAT,F2                     * I CAR 42299
          ADD       ONE,F2                          * I CAR 46697
          RESET     XDEPSTAT                        * I CAR 46697
          COMPARE   ZERO,F2                         * I CAR 42299
          GOTO      FRMFRA99 IF EQUAL
.
          MOVE      F2,F4STAT                       * I CAR 38099
          ADD       ONE,F4AARRAY[F4STAT]
.
FRMFRA99  RETURN
.------------------------------------------------------------
. Form 4b
.------------------------------------------------------------
FRMFRB00  MOVE      ZERO,F1
          MOVE      XTREASON,F1
.
          COMPARE   ZERO,F1
          GOTO      FRMFRB99 IF EQUAL
.
          COMPARE   NINE,F1
          IF        @EQUAL
            ADD       ONE,F4BARRAY[8]
            GOTO      FRMFRB99
          ENDIF
.
          MOVE      F1,F4REAS
          ADD       ONE,F4BARRAY[F4REAS]
.
FRMFRB99  RETURN
.------------------------------------------------------------
. Form 5
.------------------------------------------------------------
FRMFIV00  MOVE      EMVIDATE,FIRSTDAT           * I CAR 46697
          MOVE      EMVIDDAT,LASTDATE
          MOVE      XARRTIME,FIRSTIME
          MOVE      XDEPTIME,LASTTIME
.
          CALL      TIMEDIFF
          MOVE      CALCTIME,SAVETIME           * end I CAR 46697
.
          IF        SAVETIME <= 360
            MOVE      ONE,F5LOS
            GOTO      FRMFIV90
          ENDIF
.
          IF        SAVETIME > 360 & SAVETIME < 720
            MOVE      TWO,F5LOS
            GOTO      FRMFIV90
          ENDIF
.
          IF        SAVETIME >= 720 & SAVETIME < 1080
            MOVE      THREE,F5LOS
            GOTO      FRMFIV90
          ENDIF
.
          IF        SAVETIME >= 1080 & SAVETIME < 1440
            MOVE      FOUR,F5LOS
            GOTO      FRMFIV90
          ENDIF
.
          IF        SAVETIME >= 1440
            MOVE      FIVE,F5LOS
            GOTO      FRMFIV90
          ENDIF
.
FRMFIV90  ADD       ONE,F5ARRAY[F5LOS][1]
          ADD       ONE,F5ARRAY[F5LOS][2]
.
FRMFIV99  RETURN
.------------------------------------------------------------
. Set up report files for export to Excel
.------------------------------------------------------------
EXPORT00  CALL      REPFIL00
.
          CALL      REPONE00
.
          CALL      REPTWO00
.
          CALL      REPTHR00
.
          CALL      REPFRA00
.
          CALL      REPFRB00
.
          CALL      REPFIV00
.
EXPORT99  RETURN
.------------------------------------------------------------
. Report File Opens
.------------------------------------------------------------
REPFIL00  PACK      EXTPATH,SP70,SP70
          PACK      REP1NAME,ANSF,ONE,STARTDAT
....       PACK      EXTPATH,CWEBROOT,RSCNEXT,REP1NAME,XLSEXT,SP70
          PACK      EXTPATH,RSCNEXT,REP1NAME,XLSEXT,SP70
          SQUEEZE   EXTPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      REP1FILE,EXTPATH
          TRAPCLR   IO
.
          COMPARE   TWO,RESUBMIT
          GOTO      REPFIL10 IF NOT EQUAL
.
          IF        OVRCD=0
            CLOSE     REP1FILE
            PACK      REMFILE,SP70,SP70
            CLEAR     REMFILE
            APPEND    "rm ",REMFILE
            APPEND    EXTPATH,REMFILE
            APPEND    ".txt",REMFILE
            RESET     REMFILE
            EXECUTE   REMFILE,TASKID
          ENDIF
.
          PREP      REP1FILE,EXTPATH
.
REPFIL10  PACK      EXTPATH,SP70,SP70
          PACK      REP2NAME,ANSF,TWO,STARTDAT
....       PACK      EXTPATH,CWEBROOT,RSCNEXT,REP2NAME,XLSEXT,SP70
          PACK      EXTPATH,RSCNEXT,REP2NAME,XLSEXT,SP70
          SQUEEZE   EXTPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      REP2FILE,EXTPATH
          TRAPCLR   IO
.
          COMPARE   TWO,RESUBMIT
          GOTO      REPFIL20 IF NOT EQUAL
.
          IF        OVRCD=0
            CLOSE     REP2FILE
            PACK      REMFILE,SP70,SP70
            CLEAR     REMFILE
            APPEND    "rm ",REMFILE
            APPEND    EXTPATH,REMFILE
            APPEND    ".txt",REMFILE
            RESET     REMFILE
            EXECUTE   REMFILE,TASKID
          ENDIF
.
          PREP      REP2FILE,EXTPATH
.
REPFIL20  PACK      EXTPATH,SP70,SP70
          PACK      REP3NAME,ANSF,THREE,STARTDAT
....       PACK      EXTPATH,CWEBROOT,RSCNEXT,REP3NAME,XLSEXT,SP70
          PACK      EXTPATH,RSCNEXT,REP3NAME,XLSEXT,SP70
          SQUEEZE   EXTPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      REP3FILE,EXTPATH
          TRAPCLR   IO
.
          COMPARE   TWO,RESUBMIT
          GOTO      REPFIL30 IF NOT EQUAL
.
          IF        OVRCD=0
            CLOSE     REP3FILE
            PACK      REMFILE,SP70,SP70
            CLEAR     REMFILE
            APPEND    "rm ",REMFILE
            APPEND    EXTPATH,REMFILE
            APPEND    ".txt",REMFILE
            RESET     REMFILE
            EXECUTE   REMFILE,TASKID
          ENDIF
.
          PREP      REP3FILE,EXTPATH
.
REPFIL30  PACK      EXTPATH,SP70,SP70
          PACK      RE4ANAME,ANSF,ANSA,STARTDAT
....       PACK      EXTPATH,CWEBROOT,RSCNEXT,RE4ANAME,XLSEXT,SP70
          PACK      EXTPATH,RSCNEXT,RE4ANAME,XLSEXT,SP70
          SQUEEZE   EXTPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RE4AFILE,EXTPATH
          TRAPCLR   IO
.
          COMPARE   TWO,RESUBMIT
          GOTO      REPFIL40 IF NOT EQUAL
.
          IF        OVRCD=0
            CLOSE     RE4AFILE
            PACK      REMFILE,SP70,SP70
            CLEAR     REMFILE
            APPEND    "rm ",REMFILE
            APPEND    EXTPATH,REMFILE
            APPEND    ".txt",REMFILE
            RESET     REMFILE
            EXECUTE   REMFILE,TASKID
          ENDIF
.
          PREP      RE4AFILE,EXTPATH
.
REPFIL40  PACK      EXTPATH,SP70,SP70
          PACK      RE4BNAME,ANSF,ANSB,STARTDAT
....       PACK      EXTPATH,CWEBROOT,RSCNEXT,RE4BNAME,XLSEXT,SP70
          PACK      EXTPATH,RSCNEXT,RE4BNAME,XLSEXT,SP70
          SQUEEZE   EXTPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RE4BFILE,EXTPATH
          TRAPCLR   IO
.
          COMPARE   TWO,RESUBMIT
          GOTO      REPFIL50 IF NOT EQUAL
.
          IF        OVRCD=0
            CLOSE     RE4BFILE
            PACK      REMFILE,SP70,SP70
            CLEAR     REMFILE
            APPEND    "rm ",REMFILE
            APPEND    EXTPATH,REMFILE
            APPEND    ".txt",REMFILE
            RESET     REMFILE
            EXECUTE   REMFILE,TASKID
          ENDIF
.
          PREP      RE4BFILE,EXTPATH
.
REPFIL50  PACK      EXTPATH,SP70,SP70
          PACK      REP5NAME,ANSF,FIVE,STARTDAT
....       PACK      EXTPATH,CWEBROOT,RSCNEXT,REP5NAME,XLSEXT,SP70
          PACK      EXTPATH,RSCNEXT,REP5NAME,XLSEXT,SP70
          SQUEEZE   EXTPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      REP5FILE,EXTPATH
          TRAPCLR   IO
.
          COMPARE   TWO,RESUBMIT
          GOTO      REPFIL99 IF NOT EQUAL
.
          IF        OVRCD=0
            CLOSE     REP5FILE
            PACK      REMFILE,SP70,SP70
            CLEAR     REMFILE
            APPEND    "rm ",REMFILE
            APPEND    EXTPATH,REMFILE
            APPEND    ".txt",REMFILE
            RESET     REMFILE
            EXECUTE   REMFILE,TASKID
          ENDIF
.
          PREP      REP5FILE,EXTPATH
.
REPFIL99  RETURN
.------------------------------------------------------------
. Report 1
.------------------------------------------------------------
REPONE00  MOVE      ZERO,F1AGE
          REPEAT
            ADD       ONE,F1AGE
            WRITE     REP1FILE,SEQ;F1ARRAY[F1AGE][1],DEL:
                                   F1ARRAY[F1AGE][2],DEL:
                                   F1ARRAY[F1AGE][3],DEL:
                                   F1ARRAY[F1AGE][4]                   * I-49808
          UNTIL     F1AGE = 18
.
          CLOSE     REP1FILE
.
REPONE99  RETURN
.------------------------------------------------------------
. Report 2
.------------------------------------------------------------
REPTWO00  MOVE      ZERO,F2TYPE
          REPEAT
            ADD       ONE,F2TYPE
.
            IF        THREE=F2TYPE|FOUR=F2TYPE|FIVE=F2TYPE|6=F2TYPE|7=F2TYPE
              WRITE     REP2FILE,SEQ;SP5,DEL,SP5:             * I CAR 46697
                                     DEL,SP5,DEL:
                                     SP5,DEL,SP5:
                                     DEL,SP5                  * end I CAR 46697
            ELSE
              WRITE     REP2FILE,SEQ;F2ARRAY[F2TYPE][1],DEL,F2ARRAY[F2TYPE][2]:
                                     DEL,F2ARRAY[F2TYPE][3],DEL:
                                     F2ARRAY[F2TYPE][4],DEL,F2ARRAY[F2TYPE][5]:
                                     DEL,F2ARRAY[F2TYPE][6]
            ENDIF
.
          UNTIL     F2TYPE = 10
.
          CLOSE     REP2FILE
.
REPTWO99  RETURN
.------------------------------------------------------------
. Report 3
.------------------------------------------------------------
REPTHR00  MOVE      ZERO,F3TRIAGE
          REPEAT
            ADD       ONE,F3TRIAGE
            WRITE     REP3FILE,SEQ;F3ARRAY[F3TRIAGE][1],DEL,F3ARRAY[F3TRIAGE][2]
          UNTIL     F3TRIAGE = 6
.
          CLOSE     REP3FILE
.
REPTHR99  RETURN
.------------------------------------------------------------
. Report 4a
.------------------------------------------------------------
REPFRA00  MOVE      ZERO,F4STAT
          REPEAT
            ADD       ONE,F4STAT
.
            IF       FOUR=F4STAT|SEVEN=F4STAT|TEN4=F4STAT
              WRITE     RE4AFILE,SEQ;SP5             * I CAR 46697
            ELSE
              WRITE     RE4AFILE,SEQ;F4AARRAY[F4STAT]
            ENDIF
.
.          UNTIL     F4STAT = 8                      * D CAR 42299
          UNTIL     F4STAT = 32
.                                                    * I CAR 42299 * C CAR 46697
          CLOSE     RE4AFILE
.
REPFRA99  RETURN
.------------------------------------------------------------
. Report 4b
.------------------------------------------------------------
REPFRB00  MOVE      ZERO,F4REAS
          REPEAT
            ADD       ONE,F4REAS
            WRITE     RE4BFILE,SEQ;F4BARRAY[F4REAS]
          UNTIL     F4REAS = 8
.
          CLOSE     RE4BFILE
.
REPFRB99  RETURN
.------------------------------------------------------------
. Report 5
.------------------------------------------------------------
REPFIV00  MOVE      ZERO,F5LOS
          REPEAT
            ADD       ONE,F5LOS
            WRITE     REP5FILE,SEQ;F5ARRAY[F5LOS][1],DEL,F5ARRAY[F5LOS][2],DEL:
                                   F5ARRAY[F5LOS][3]
          UNTIL     F5LOS = 5
.
REPFIV99  RETURN
.
.------------------------------------------------------------
. Add Extract to vemdindex file for html page
.------------------------------------------------------------
MVEXT000  COMPARE   TWO,RESUBMIT                 * Validation or Ready to Send
          GOTO      MVEXT999 IF NOT EQUAL
.
.          COMPARE   ONE,VISSEXTR                 * VISS Extract Run
.          GOTO      MVEXT100 IF NOT EQUAL
..
.          CLEAR     CMDLINE
.          APPEND    "webext01.us2 ",CMDLINE
.          PACK      EXTPATH,RSCNEXT,VISFILNM,DATEXT,SP1
.          APPEND    EXTPATH,CMDLINE
.          APPEND    VISFILNM,CMDLINE
.          APPEND    DATEXT,CMDLINE
.          APPEND    SP70,CMDLINE
.          RESET     CMDLINE
.          EXECUTE   CMDLINE,TASKID   * webext01.us2 fullpathname filename
.
MVEXT100  COMPARE   ONE,VEMDEXTR                 * VEMD Extract Run
          GOTO      MVEXT999 IF NOT EQUAL
.
          CLEAR     CMDLINE
          APPEND    "webext02.us1 ",CMDLINE
          PACK      EXTPATH,RSCNEXT,EXTFILNM,TXTEXT,SP1
          APPEND    EXTPATH,CMDLINE
          APPEND    EXTFILNM,CMDLINE
          APPEND    TXTEXT,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID   * webext01.us1 fullpathname filename
.
MVEXT999  RETURN
.
.******************************************************************************
.*                                  NINT0000                                  *
.* Get Interpreter Required                              called by: PROC7300  *
.******************************************************************************
NINT0000  PACK      XINTRREQ,PMVXINTR,SP70  * Interpreter Required
          REP       "02 9",XINTRREQ
.
          MATCH     "1",XINTRREQ             * Yes
          GOTO      NINT0400 IF EQUAL
.
          MATCH     "2",XINTRREQ             * No
          GOTO      NINT0400 IF EQUAL
.
          MATCH     "9",XINTRREQ           * Not stated
          GOTO      NINT0400 IF EQUAL
.
          GOTO      NINT9500
.
NINT0400  MATCH     SP70,XPRELAN4
          GOTO      NINT0500 IF NOT EQUAL
.
          GOTO      NINT9200
.
NINT0500  MATCH     "1201",XPRELAN4         * English
          GOTO      NINT1000 IF NOT EQUAL
.
          MATCH     "2",XINTRREQ            * Interpreter Not Required
          GOTO      NINT9000 IF NOT EQUAL
.
NINT1000  MOVE      XINDIG,FORM1
          IF        FORM1>3
            GOTO      NINT1100
          ENDIF
.
          MATCH     "8603",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "8605",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "8000",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "8102",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "1201",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "8924",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "8505",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "8713",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "8714",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "8117",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "8516",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "8521",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "8304",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.                                           * I CAR 43517
          MATCH     "0000",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.
          MATCH     "9799",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.                                .
          MATCH     "0002",XPRELAN4
          GOTO      NINT1100 IF EQUAL
.                                           * end I CAR 43517
          GOTO      NINT9100
.
NINT1100  MATCH     "0000",XPRELAN4           * Not specified
          GOTO      NINT9300 IF EQUAL
.
          MATCH     "0002",XPRELAN4           * Not specified
          GOTO      NINT9300 IF EQUAL
.
          MATCH     "9",XINTRREQ
          GOTO      NINT9400 IF EQUAL
.
          GOTO      NINT9999
.
NINT9000  
.         CLEAR     ERRORMSG
.         APPEND    "E359:INVALID COMB INTERPRETER REQUIRED ",ERRORMSG
.         APPEND    "/ PREFERRED LANGUAGE",ERRORMSG                    *I-52753
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      NINT9999
.
NINT9100  
.         CLEAR     ERRORMSG
.         APPEND    "E360:ATSI IDENTIFICATION BUT PREFERRED ",ERRORMSG
.         APPEND    "LANGUAGE NOT EQUAL TO ENGLISH OR ATSI ",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSW,ERRTYPE
.         CALL      PRTERR00
          GOTO      NINT9999
.
NINT9200  
.         CLEAR     ERRORMSG
.         APPEND    "E110:PREFERRED LANGUAGE INVALID ",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      NINT9999
.
NINT9300  
.         CLEAR     ERRORMSG
.         APPEND    "E361:PREFERRED LANGUAGE IS UNSPECIFIED ",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSW,ERRTYPE
.         CALL      PRTERR00
.
          MATCH     "9",XINTRREQ
          GOTO      NINT9999 IF EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E359:INVALID COMB INTERPRETER REQUIRED ",ERRORMSG
.         APPEND    "/ PREFERRED LANGUAGE",ERRORMSG                    *I-52753
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      NINT9999
.
NINT9400  
.         CLEAR     ERRORMSG
.         APPEND     "E363:Interpreter Required Equals '9 - ",ERRORMSG
.         APPEND     "Not Stated' but Preferred Language Not Equal ",ERRORMSG
.         APPEND     "to '0000' or '0002'",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      NINT9999
.
NINT9500  
.         CLEAR     ERRORMSG
.         APPEND    "E358:INTERPRETER REQUIRED INVALID ",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      NINT9999
.
NINT9999  RETURN
.******************************************************************************
.*                                  TYPA0000                                  *
.*  Get type of usual accommodation                      called by: PROC7300  *
.******************************************************************************
TYPA0000  MATCH     SP70,PMVXUSAC
          GOTO      TYPA9000 IF EQUAL
.    
          PACK      KEY5,ANSK,ANSP,PMVXUSAC
          CALL      RDCODE1
          IF        OVRCD=1
            GOTO      TYPA9000
          ENDIF
          MOVE      THCSCOD,XTYPACCM
.
          MOVE      XTYPACCM,DIM2
          SQUEEZE   DIM2
          MOVE      ZERO,F2
          MOVE      DIM2,F2
          IF        F2>=1 & F2<=12 | F2>=18 & F2<=19
            GOTO    TYPA1000           * Check for a valida code        *C-49808
          ENDIF
          GOTO      TYPA9000
.
TYPA1000  IF        F2=1 | F2=3
            CALL      IBACLOCK
            PACK      AGEDATE,CCC,CYY,CMM,CDD
            REP       " 0",AGEDATE
            CALL      CALCAGE
            IF        PSAGEYRS<15
.             CLEAR     ERRORMSG
.             APPEND    "E355:TYPE OF USUAL ACCOMMODATION AND AGE ",ERRORMSG
.             APPEND    "COMBINATION INVALID",ERRORMSG
.             RESET     ERRORMSG
.             MOVE      ANSW,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
.
          MATCH     "11",XTYPACCM
          GOTO      TYPA3000 IF NOT EQUAL
.
TYPA2000  IF        DOYR2025 = ONE
            MATCH     "1 ",XDEPSTAT               * Invalid codes
            GOTO      TYPA2800 IF EQUAL
            MATCH     "23",XDEPSTAT
            GOTO      TYPA2800 IF EQUAL
            MATCH     "24",XDEPSTAT
            GOTO      TYPA2800 IF EQUAL
            MATCH     "30",XDEPSTAT
            GOTO      TYPA2800 IF EQUAL
            MATCH     "5",XDEPSTAT
            GOTO      TYPA3000 IF EQUAL
            MATCH     "10",XDEPSTAT
            GOTO      TYPA3000 IF EQUAL
            MATCH     "11",XDEPSTAT
            GOTO      TYPA3000 IF EQUAL
            MATCH     "T1",XDEPSTAT
            GOTO      TYPA3000 IF EQUAL
            MATCH     "T2",XDEPSTAT
            GOTO      TYPA3000 IF EQUAL
          ENDIF
.
          MATCH     "3",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
.
          MATCH     "7",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
.
          MATCH     "12",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
.
          MATCH     "5",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "11",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "13",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "14",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "15",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "16",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "17",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "18",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "19",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "20",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "21",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "22",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
.
          MATCH     "27",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
          MATCH     "28",XDEPSTAT
          GOTO      TYPA3000 IF EQUAL
.
          MATCH     "T1",XDEPSTAT
          GOTO      TYPA3000 IF NOT EQUAL
.
          MATCH     "T2",XDEPSTAT
          GOTO      TYPA3000 IF NOT EQUAL
. 
TYPA2800  IF        DOYR2025 = ONE
            CLEAR     ERRORMSG
            APPEND    "E356:TYPE OF USUAL ACCOMMODATION AND ",ERRORMSG
            APPEND    "DEPARTURE STATUS COMBINATION INVALID ",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSW,ERRTYPE
            CALL      PRTERR00
          ENDIF
 
TYPA3000  MATCH     "11",XTYPACCM
          GOTO      TYPA9999 IF NOT EQUAL
.
          MATCH    "P-N",XMEDISUF
          GOTO     TYPA9999 IF EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E357:TYPE OF USUAL ACCOMMODATION AND ",ERRORMSG
.         APPEND    "MEDICARE SUFFIX COMBINATION INVALID ",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.
          GOTO      TYPA9999
.
TYPA9000  
.         CLEAR     ERRORMSG
.         APPEND    "E354:TYPE OF USUAL ACCOMMODATION INVALID ",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      TYPA9999
.
TYPA9999  RETURN
.******************************************************************************
.*                                  VDED0000                                  *
.*  Validate dead on arrivalodation                      called by: PROC7300  *
.******************************************************************************
VDED0000  SQUEEZE   XARRMODE
          MOVE      ZERO,F2
          MOVE      XARRMODE,F2
          PACK      XARRMODE,XARRMODE,SP70
          COMPARE   NINE,F2
          GOTO      VDED1000 IF NOT EQUAL
.
          MATCH     "10",XVISTYP
          GOTO      VDED4000 IF NOT EQUAL
.
.         MATCH     "8",XDEPSTAT
.         GOTO      VDED4000 IF NOT EQUAL
.
.         MATCH     "R95",XPRIDIAG
.         GOTO      VDED4000 IF EQUAL
.
.         MATCH     "R961",XPRIDIAG
.         GOTO      VDED4000 IF EQUAL
.
.         MATCH     "19",XREFDEPT
.         GOTO      VDED4000 IF EQUAL
.
          MATCH     "6",XTRIGCAT
          GOTO      VDED4000 IF EQUAL          * end I-49808
.
VDED1000  MATCH     "10",XVISTYP                 * If dead on arrival then all
          GOTO      VDED5000 IF NOT EQUAL        * fields must be dead
.      
.         MATCH     "8",XDEPSTAT
.         GOTO      VDED4000 IF NOT EQUAL
.
.         MATCH     "19",XREFDEPT
.         GOTO      VDED4000 IF NOT EQUAL
.
          MATCH     "6",XTRIGCAT
          GOTO      VDED4000 IF NOT EQUAL
.
.         MATCH     "R95",XPRIDIAG
.         IF        !@EQUAL
            MATCH     "R99",XPRIDIAG
            GOTO      VDED4000 IF NOT EQUAL
.         ENDIF
.
          GOTO      VDED7000
.
VDED4000  
.         CLEAR     ERRORMSG
.         APPEND    "E142:DEAD ON ARRIVAL COMBINATION INVALID ",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.
.VDED5000  MATCH     "9",XARRMODE                 * if not dead on arrival then
.         GOTO      VDED6000 IF EQUAL            * no field can be dead
.
VDED5000  SQUEEZE   XARRMODE                     * I CAR 42245
          MOVE      ZERO,F2
          MOVE      XARRMODE,F2
          PACK      XARRMODE,XARRMODE,SP70
          COMPARE   NINE,F2
          GOTO      VDED6000 IF EQUAL            * end I CAR 42245
.
.         MATCH     "8",XDEPSTAT
.         GOTO      VDED6000 IF EQUAL
.
.         MATCH     "R99",XPRIDIAG
.         GOTO      VDED6000 IF EQUAL 
.
          MATCH     "6",XTRIGCAT 
          GOTO      VDED6000 IF EQUAL
.
          GOTO      VDED7000
.        
VDED6000  
.         CLEAR     ERRORMSG
.         APPEND    "E142:DEAD ON ARRIVAL COMBINATION INVALID ",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.
.VDED7000  MATCH     "9",XARRMODE                 * if arrived by undertaker
.         GOTO      VDED8000 IF NOT EQUAL         * D CAR 42245
.
VDED7000  SQUEEZE   XARRMODE                      * I CAR 42245
          MOVE      ZERO,F2
          MOVE      XARRMODE,F2
          PACK      XARRMODE,XARRMODE,SP70
.
VDED9999  RETURN
.******************************************************************************
.*                                  BINJ0000                                  *
.*  All injury data must be blank if not a injury diagnosis code after 1/7/03 *
.*                                                       called by: PROC3500  *
.******************************************************************************
BINJ0000  MATCH     SP70,EMVIACTI
          IF        !@EQUAL
.           MOVE      "E310:ACTIVITY WHEN INJURED CODE SHOULD BE BLANK",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          MATCH     SP70,EMVIREGN
          IF        !@EQUAL
.           MOVE      "E286:BODY REGION CODE INVALID",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          MATCH     SP70,EMVIINJ1
          IF        !@EQUAL
.          MOVE      "E290:DESCRIPTION OF INJURY EVENT SHOULD BE BLANK",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          MATCH     SP70,EMVIINJ2
          IF        !@EQUAL
.          MOVE      "E290:DESCRIPTION OF INJURY EVENT SHOULD BE BLANK",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          MATCH     SP70,EMVIHUMI
          IF        !@EQUAL
.           MOVE      "E300:HUMAN INTENT SHOULD BE BLANK",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          MATCH     SP70,EMVIINJC
          IF        !@EQUAL
.           MOVE      "E295:INJURY CAUSE CODE SHOULD BE BLANK",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          MATCH     SP70,EMVINATI
          IF        !@EQUAL
.           MOVE      "E281:NATURE OF MAIN INJURY SHOULD BE BLANK",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
          MATCH     SP70,EMVIPLIN
          IF        !@EQUAL
.          MOVE      "E305:PLACE WHERE INJURY OCCURRED SHOULD BE BLANK",ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
BINJ9999  RETURN
.******************************************************************************
.*                                  EINJ0000             * I CAR 43016        *
.*  All injury data can  be blank if primiary disagnosi code is the following *
.*  T850,T8581,T859,T821,T829,T830,T835,T836,T838,T841,T670,T671,T749,T780,   *
.*  T781,T782,T783,T784,T805,T806,T810,T811,T813,T819,T8141,T824,T828,T844,T855*
.*  T859,T880,T881,T886,T887,T68                                              *
.*              Parameter: XPRIDIAG                                           *
.*              Return:    EXEMPT ( 0=No, 1=Yes)
.******************************************************************************
EINJ0000  MOVE      ZERO,EXEMPT
          MATCH     "T850",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T85.0",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T8581",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T85.81",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T859",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T85.9",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T821",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T82.1",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T829",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T82.9",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T830",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T83.0",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T835",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T83.5",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T836",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T83.6",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T838",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T83.8",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T841",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T84.1",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T670",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T67.0",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T671",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T67.1",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T749",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T74.9",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T780",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T78.0",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T781",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T78.1",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T782",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T78.2",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T783",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T78.3",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T784",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T78.4",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T805",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T80.5",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T806",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T80.6",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T810",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T81.0",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T811",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T81.1",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T813",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T81.3",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T8141",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T81.41",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T819",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T81.9",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T824",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T82.4",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T828",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T82.8",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T844",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T84.4",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T855",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T85.5",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T859",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T85.9",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T880",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T88.0",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T881",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T88.1",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T886",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T88.6",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T887",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T88.7",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          MATCH     "T68",XPRIDIAG
          IF        @EQUAL
            GOTO      EINJ9900
          ENDIF
          GOTO      EINJ9999
.
EINJ9900  MOVE      ONE,EXEMPT
EINJ9999  RETURN                                * end I CAR 43016
.******************************************************************************
.*                                  TTTR0000                        I-49808   *
.*                         Time to Treatment Validation    Called By: PROC7700*
.******************************************************************************
TTTR0000  MOVE      ZERO,F2
          SQUEEZE   XDEPSTAT
          MOVE      XDEPSTAT,F2
          PACK      XDEPSTAT,XDEPSTAT,SP70
          IF        F2=10|F2=11
            MOVE      EMVIDATE,FIRSTDAT
            MOVE      EMVIDDAT,LASTDATE
            MOVE      XARRTIME,FIRSTIME
            MOVE      XDEPTIME,LASTTIME
          ELSE
            MATCH     XNURSTIM,XDOCTTIM
            IF        @LESS
              MOVE      EMVIDATE,FIRSTDAT
              MOVE      EMVIDRDT,LASTDATE
              MOVE      XARRTIME,FIRSTIME
              MOVE      XDOCTTIM,LASTTIME
            ELSE
              MOVE      EMVIDATE,FIRSTDAT
              MOVE      EMVINSDT,LASTDATE
              MOVE      XARRTIME,FIRSTIME
              MOVE      XNURSTIM,LASTTIME
            ENDIF
          ENDIF
.
          CALL      TIMEDIFF
.
          MOVE      ZERO,TIMELIMT
          SQUEEZE   XTRIGCAT
          MOVE      XTRIGCAT,F3TRIAGE
.
          LOAD      TIMELIMT,F3TRIAGE,ONE,TEN,THIRTY,SIXTY,HUNDRE20
.
          IF        CALCTIME>TIMELIMT
.           CLEAR     ERRORMSG
.           APPEND    "E351:EXCESSIVE TIME TO TREATMENT - NOTIFIABLE",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSW,ERRTYPE
.           CALL      PRTERR00
          ENDIF
.
TTTR9999  RETURN
.******************************************************************************
.*                                  FRRE0000                        I-52476   *
.*                              Format XBREGION            Called By: PROC8000*
.******************************************************************************
FRRE0000  TYPE     XBREGION
          IF       @EQUAL
            MOVE     ZERO,F2
            MOVE     XBREGION,F2
            MOVE     F2,XBREGION
            SQUEEZE  XBREGION
            PACK     XBREGION,XBREGION,SP70
          ENDIF
.
FRRE9999  RETURN
.******************************************************************************
.*                                  TRTM0000                       CAR 282835 *
.*                          Triage Category 1 Edit        Called By: PROC0949 *
.******************************************************************************
TRTM0000  PACK     ARRVDTTM,XARRDATE,XARRTIME,SP70
          PACK     CHCKDTTM,XNURSDAT,XNURSTIM,SP70
.
          UNPACK    XARRDATE,CDAY,CMON,CCENT,CYEAR
          PACK      FIRSTDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FIRSTDAT
          MOVE      XARRTIME,FIRSTIME
.
          MATCH    SP70,CHCKDTTM
          IF       !@EQUAL
.           MATCH    ARRVDTTM,CHCKDTTM
.           IF       !@EQUAL
.             GOTO     TRTM9000
.           ENDIF
.
            UNPACK    XNURSDAT,CDAY,CMON,CCENT,CYEAR
            PACK      LASTDATE,CCENT,CYEAR,CMON,CDAY
            REP       " 0",LASTDATE
            MOVE      XNURSTIM,LASTTIME
            CALL      TIMEDIFF
.
            IF        CALCTIME > 1
              GOTO      TRTM9000
            ENDIF
.
          ENDIF
.
          PACK     CHCKDTTM,XDOCTDAT,XDOCTTIM,SP70
.
          MATCH    SP70,CHCKDTTM
          IF       !@EQUAL
.           MATCH    ARRVDTTM,CHCKDTTM
.           IF       !@EQUAL
.             GOTO     TRTM9000
.           ELSE
.             GOTO     TRTM9999
.           ENDIF
.
            UNPACK    XDOCTDAT,CDAY,CMON,CCENT,CYEAR
            PACK      LASTDATE,CCENT,CYEAR,CMON,CDAY
            REP       " 0",LASTDATE
            MOVE      XDOCTTIM,LASTTIME
            CALL      TIMEDIFF
.
            IF        CALCTIME > 1
              GOTO      TRTM9000
            ELSE
              GOTO     TRTM9999
            ENDIF
.
          ENDIF
.
          PACK     CHCKDTTM,XMENHDAT,XMENHTIM,SP70
.
          MATCH    SP70,CHCKDTTM
          IF       !@EQUAL
.           MATCH    ARRVDTTM,CHCKDTTM
.           IF       !@EQUAL
.             GOTO     TRTM9000
.           ENDIF
.
            UNPACK    XMENHDAT,CDAY,CMON,CCENT,CYEAR
            PACK      LASTDATE,CCENT,CYEAR,CMON,CDAY
            REP       " 0",LASTDATE
            MOVE      XMENHTIM,LASTTIME
            CALL      TIMEDIFF
.
            IF        CALCTIME > 1
              GOTO      TRTM9000
            ENDIF
.
          ENDIF
.
          GOTO      TRTM9999
.
TRTM9000  CLEAR     ERRORMSG
          APPEND   "###:TRIAGE CATEGORY 1 PATIENT - EXCESSIVE ",ERRORMSG
          APPEND   "TIME TO INITIATION OF PATIENT MANAGEMENT ",ERRORMSG
          APPEND   "- NOTIFIABLE",ERRORMSG
          RESET     ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
.
TRTM9999  RETURN
.
.******************************************************************************
.*                                  DTOA0000                                  *
.* Set decision to admit date/time                                            *
.******************************************************************************
DTOA0000  MOVE      EMVIDADT,DATE
          CALL      VALDAT00
          BRANCH    EXIT,DTOA1010,DTOA1020
.
          MOVE      XDATE,XDADMDAT          * decision to admit date
          GOTO      DTOA2000
.
DTOA1010  
.         MOVE      "###:DECISION TO ADMIT DATE/TIME INVALID",ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
          GOTO      DTOA2000
.
DTOA1020  PACK      XDADMDAT,SP70           * decision to admit date
.
DTOA2000  MOVE      EMVIDATM,TIME
          CALL      VALTIM00
          PACK      XDADMTIM,XTIME,SP70     * decision to admit time
.
DTOA5000  MOVE      EMVIDADT,DATE1
          MOVE      EMVIDDAT,DATE2
          COMPARE   DATE1,DATE2
          IF        @LESS
.           CLEAR     ERRORMSG
.           APPEND    "###:DEPARTURE DATE/TIME BEFORE ",ERRORMSG
.           APPEND    "DECISION TO ADMIT DATE/TIME",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
          IF        @EQUAL
            MOVE      XDADMTIM,TIME1
            MOVE      XDEPTIME,TIME2
            COMPARE   TIME1,TIME2
            IF        @LESS
.             CLEAR     ERRORMSG
.             APPEND    "###:DEPARTURE DATE/TIME BEFORE ",ERRORMSG
.             APPEND    "DECISION TO ADMIT DATE/TIME",ERRORMSG
.             RESET     ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
.
          MOVE      EMVIDATE,DATE1
          MOVE      EMVIDADT,DATE2
          COMPARE   DATE1,DATE2
          IF        @LESS
.           CLEAR     ERRORMSG
.           APPEND    "###:DECISION TO ADMIT DATE/TIME BEFORE ",ERRORMSG
.           APPEND    "ARRIVAL DATE/TIME",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
          IF        @EQUAL
            MOVE      XARRTIME,TIME1
            MOVE      XDADMTIM,TIME2
            COMPARE   TIME1,TIME2
            IF        @LESS
.             CLEAR     ERRORMSG
.             APPEND    "###:DECISION TO ADMIT DATE/TIME BEFORE ",ERRORMSG
.             APPEND    "ARRIVAL DATE/TIME",ERRORMSG
.             RESET     ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
.
DTOA6000  MOVE      ZERO,F2
          MOVE      SP70,DIM2
          MOVE      XDEPSTAT,DIM2
          SQUEEZE   DIM2
          MOVE      DIM2,F2
          IF        F2=3|F2=14|F2=15|F2=18|F2=22|F2=25|F2=26|F2=27|F2=28
            MATCH     SP70,XDADMDAT
            IF        @EQUAL
.             CLEAR     ERRORMSG
.             APPEND    "###:DECISION TO ADMIT DATE/TIME AND ",ERRORMSG
.             APPEND    "DEPARTURE STATUS COMBINATION INVALID",ERRORMSG
.             RESET     ERRORMSG
.             MOVE      ANSW,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
.
DTOA9999  RETURN
.
.******************************************************************************
.*                                  AMBD0000                                  *
.* Set ambulance arrival and handover date/time                               *
.******************************************************************************
AMBD0000  MOVE      EMVIAADT,DATE
          CALL      VALDAT00
          BRANCH    EXIT,AMBD1010,AMBD1020
.
          MOVE      XDATE,XAATDDAT          * Ambulance at destination date
          GOTO      AMBD2000
.
AMBD1010  MOVE      "###:AMBULANCE AT DESTINATION DATE/TIME INVALID",ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
          GOTO      AMBD2000
.
AMBD1020  PACK      XAATDDAT,SP70           * Ambulance at destination date 
.
AMBD2000  MOVE      EMVIAATM,TIME
          CALL      VALTIM00
.
          PACK      XAATDTIM,XTIME,SP70     * Ambulance at destination time
.
AMBD5000  MOVE      EMVIAHDT,DATE
          CALL      VALDAT00
          BRANCH    EXIT,AMBD6010,AMBD6020
.
          MOVE      XDATE,XAHOVDAT          * Ambulance handover date
          GOTO      AMBD7000
.
AMBD6010  SQUEEZE   XARRMODE
          MOVE      ZERO,F2
          MOVE      XARRMODE,F2
          IF        F2<>1 & F2<>2 & F2<>3 & F2<>10 & F2<>11
            GOTO      AMBD6091
          ENDIF
          GOTO      AMBD7000
.
AMBD6020  PACK      XAHOVDAT,SP70           * Ambulance handover date (blank)
          SQUEEZE   XARRMODE
          MOVE      ZERO,F2
          MOVE      XARRMODE,F2
          IF        F2=1 | F2=2 | F2=3 | F2=10 | F2=11
            GOTO      AMBD6091
          ENDIF
          GOTO      AMBD7000
.
AMBD6091  CLEAR     ERRORMSG
          APPEND    "E401:AMBULANCE HANDOVER COMPLETE DATE ",ERRORMSG
          APPEND    "AND ARRIVAL TRANSPORT MODE INVALID",ERRORMSG
          RESET     ERRORMSG
          MOVE      ANSW,ERRTYPE
          CALL      PRTERR00
          GOTO      AMBD7500
.
AMBD7000  MOVE      EMVIAHTM,TIME
          CALL      VALTIM00
          BRANCH    EXIT,AMBD7010
.
          PACK      XAHOVTIM,XTIME,SP70 * Ambulance handover time
.
          SQUEEZE   XARRMODE
          MOVE      ZERO,F2
          MOVE      XARRMODE,F2
          IF        F2<>1 & F2<>2 & F2<>3 & F2<>10 & F2<>11
            GOTO      AMBD7091
          ENDIF
          GOTO      AMBD7500
.
AMBD7010  PACK      XAHOVTIM,SP70           * Ambulance handover time (blank)
          SQUEEZE   XARRMODE
          MOVE      ZERO,F2
          MOVE      XARRMODE,F2
          IF        F2=1 | F2=2 | F2=3 | F2=10 | F2=11
            GOTO      AMBD7091
          ENDIF
          GOTO      AMBD8000
.
AMBD7091  CLEAR     ERRORMSG
          APPEND    "E401:AMBULANCE HANDOVER COMPLETE TIME ",ERRORMSG
          APPEND    "AND ARRIVAL TRANSPORT MODE INVALID",ERRORMSG
          RESET     ERRORMSG
          MOVE      ANSW,ERRTYPE
          CALL      PRTERR00
          GOTO      AMBD7500
.
. Valid Ambulance Handover Date/Time(AKA Ambulance Departure Date/Time)
. if Arrival Transport type is relevant, required from July 2018 onward
AMBD7500  MOVE      ZERO,F2
          MOVE      XARRMODE,F2
          IF        F2<>1 & F2<>2 & F2<>3 & F2<>10 & F2<>11
            GOTO      AMBD8000          * Non Ambulance Transport Code
          ENDIF
.
. Compare the Ambulance Handover Date to Arrival Date 
          MOVE      EMVIAHDT,DATE2
          MOVE      EMVIAADT,DATE1
          COMPARE   DATE1,DATE2
          IF        @LESS
            GOTO      AMBD7591          * Error E407
          ENDIF
.
. Compare the Ambulance Handover Time to Arrival Time 
          COMPARE   DATE1,DATE2
          IF        @EQUAL
            MOVE      XAHOVTIM,TIME2
            MOVE      XAATDTIM,TIME1
            COMPARE   TIME1,TIME2
            IF        @LESS
              GOTO      AMBD7591        * Error E407
            ENDIF
          ENDIF
.
. Ambulance Handover Date 10 days after Arrival Date 
          MOVE      EMVIAHDT,DATEDAT2
          SUB       TEN,DATEDAT2
          MOVE      DATEDAT2,DATE2
          COMPARE   DATE2,DATE1
          IF        @LESS
            GOTO      AMBD7591          * Error E407
          ENDIF
.
          GOTO      AMBD8000            * Continue
.
AMBD7591  CLEAR     ERRORMSG
          APPEND    "E407:AMBULANCE AT DESTINATION DATE/TIME AND",ERRORMSG
          APPEND    " DEPARTURE DATE/TIME INVALID COMBINATION",ERRORMSG
          RESET     ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
          GOTO      AMBD8000
.
AMBD8000  MOVE      EMVIAADT,DATE1
          MOVE      EMVITRDT,DATE2
          COMPARE   DATE1,DATE2
          IF        @LESS
.           CLEAR     ERRORMSG
.           APPEND    "###:AMBULANCE AT DESTINATION DATE/TIME AFTER",ERRORMSG
.           APPEND    " TRIAGE DATE/TIME",ERRORMSG
.           RESET     ERRORMSG
.           MOVE      ANSR,ERRTYPE
.           CALL      PRTERR00
          ENDIF
          COMPARE   DATE1,DATE2
          IF        @EQUAL
            MOVE      XAATDTIM,TIME1
            MOVE      XTRITIME,TIME2
            COMPARE   TIME1,TIME2
            IF        @LESS
.             CLEAR     ERRORMSG
.             APPEND    "###:AMBULANCE AT DESTINATION DATE/TIME AFTER",ERRORMSG
.             APPEND    " TRIAGE DATE/TIME",ERRORMSG
.             RESET     ERRORMSG
.             MOVE      ANSR,ERRTYPE
.             CALL      PRTERR00
            ENDIF
          ENDIF
          GOTO      AMBD9000            * Continue
.
AMBD9000  MOVE      ZERO,F2
          MOVE      SP70,DIM2
          MOVE      XARRMODE,DIM2
          SQUEEZE   DIM2
          MOVE      DIM2,F2
.
          IF        F2=1|F2=2|F2=3|F2=10|F2=11
            MATCH     SP70,XAATDDAT
            IF        @EQUAL
              CLEAR     ERRORMSG
              APPEND    "E397:AMBULANCE AT DESTINATION AND ARRIVAL ",ERRORMSG
              APPEND    "TRANSPORT MODE INVALID",ERRORMSG
              RESET     ERRORMSG
              MOVE      ANSW,ERRTYPE
              CALL      PRTERR00
              GOTO      AMBD9400
            ENDIF
            MATCH     SP70,XAATDTIM
            IF        @EQUAL
              CLEAR     ERRORMSG
              APPEND    "E397:AMBULANCE AT DESTINATION AND ARRIVAL ",ERRORMSG
              APPEND    "TRANSPORT MODE INVALID",ERRORMSG
              RESET     ERRORMSG
              MOVE      ANSW,ERRTYPE
              CALL      PRTERR00
            ENDIF
          ENDIF
.
AMBD9400  IF        F2<>1 & F2<>2 & F2<>3 & F2<>10 & F2<>11
            MATCH     SP70,XAATDDAT
            IF        !@EQUAL
              CLEAR     ERRORMSG
              APPEND    "E397:AMBULANCE AT DESTINATION AND ARRIVAL ",ERRORMSG
              APPEND    "TRANSPORT MODE INVALID",ERRORMSG
              RESET     ERRORMSG
              MOVE      ANSW,ERRTYPE
              CALL      PRTERR00
              GOTO      AMBD9500
            ENDIF
            MATCH     SP70,XAATDTIM
            IF        !@EQUAL
              CLEAR     ERRORMSG
              APPEND    "E397:AMBULANCE AT DESTINATION AND ARRIVAL ",ERRORMSG
              APPEND    "TRANSPORT MODE INVALID",ERRORMSG
              RESET     ERRORMSG
              MOVE      ANSW,ERRTYPE
              CALL      PRTERR00
            ENDIF
          ENDIF
.
AMBD9500  MATCH     SP70,XAATDDAT
          GOTO      AMBD9600 IF EQUAL
          GOTO      AMBD9600 IF EOS
.
          MATCH     SP70,XDEPDATE
          GOTO      AMBD9600 IF EQUAL
          GOTO      AMBD9600 IF EOS 
.
          MOVE      ZERO,DATE1
          MOVE      ZERO,DATE2
.
          UNPACK    XAATDDAT,CDAY,CMON,CCENT,CYEAR
          PACK      DIMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DIMDATE
          MOVE      DIMDATE,DATE1
.
          UNPACK    XDEPDATE,CDAY,CMON,CCENT,CYEAR
          PACK      DIMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DIMDATE
          MOVE      DIMDATE,DATE2
.
          COMPARE   DATE1,DATE2
          IF        @LESS
            CLEAR     ERRORMSG
            APPEND    "E398:AMBULANCE AT DESTINATION DATE/TIME AFTER",ERRORMSG
            APPEND    " DEPARTURE DATE/TIME",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
          IF        @EQUAL
            MOVE      XAATDTIM,TIME1
            MOVE      XDEPTIME,TIME2
            COMPARE   TIME1,TIME2
            IF        @LESS
              CLEAR     ERRORMSG
              APPEND    "E398:AMBULANCE AT DESTINATION DATE/TIME AFTER",ERRORMSG
              APPEND    " DEPARTURE DATE/TIME",ERRORMSG
              RESET     ERRORMSG
              MOVE      ANSR,ERRTYPE
              CALL      PRTERR00
            ENDIF
          ENDIF
.
          MOVE      DATE1,DATEDAT1
          MOVE      DATE2,DATEDAT2
.
          DAYSEP    DATEDAT1,DATEDAT2,DAYSEPDT
.
          IF        DAYSEPDT > 15
            CLEAR     ERRORMSG
           APPEND    "E398:AMBULANCE AT DESTINATION DATE/TIME CANNOT",ERRORMSG
           APPEND    " BE MORE THAN 15 DAYS BEFORE DEPARTURE DATE/TIME",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF 
.
AMBD9600  MATCH     SP70,XAHOVDAT
          GOTO      AMBD9999 IF EQUAL
          GOTO      AMBD9999 IF EOS
.
          MATCH     SP70,XDEPDATE
          GOTO      AMBD9999 IF EQUAL
          GOTO      AMBD9999 IF EOS
.
          MOVE      ZERO,DATE1
          MOVE      ZERO,DATE2
.
          UNPACK    XAHOVDAT,CDAY,CMON,CCENT,CYEAR
          PACK      DIMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DIMDATE
          MOVE      DIMDATE,DATE1
.
          UNPACK    XDEPDATE,CDAY,CMON,CCENT,CYEAR
          PACK      DIMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DIMDATE
          MOVE      DIMDATE,DATE2
.
          COMPARE   DATE1,DATE2
          IF        @LESS
            CLEAR     ERRORMSG
           APPEND    "E403:AMBULANCE HANDOVER COMPLETE DATE/TIME AFTER",ERRORMSG
           APPEND    " DEPARTURE DATE/TIME",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSW,ERRTYPE
            CALL      PRTERR00
          ENDIF
          IF        @EQUAL
            MOVE      XAHOVTIM,TIME1
            MOVE      XDEPTIME,TIME2
            COMPARE   TIME1,TIME2
            IF        @LESS
              CLEAR     ERRORMSG
           APPEND    "E403:AMBULANCE HANDOVER COMPLETE DATE/TIME AFTER",ERRORMSG
           APPEND    " DEPARTURE DATE/TIME",ERRORMSG
              RESET     ERRORMSG
              MOVE      ANSW,ERRTYPE
              CALL      PRTERR00
            ENDIF
          ENDIF
.
.          COMPARE   ONE,DOYR2022
.          GOTO      AMBD9700 IF NOT EQUAL
.
          MATCH     SP70,XAHOVTIM                  * Blank Amb haandover Time
          GOTO      AMBD9999 IF EQUAL              * Date checked above
          GOTO      AMBD9999 IF EOS
.
          MATCH     SP70,XDEPTIME                  * Blank departure time
          GOTO      AMBD9999 IF EQUAL              * Date checked above
          GOTO      AMBD9999 IF EOS
.
          UNPACK    XDEPDATE,CDAY,CMON,CCENT,CYEAR               * Departure
          PACK      DATTIME1,CCENT,CYEAR,CMON,CDAY,XDEPTIME,SP70 * Date/Time
          REP       " 0",DATTIME1
.
          UNPACK    XAHOVDAT,CDAY,CMON,CCENT,CYEAR               * Amb handover
          PACK      DATTIME2,CCENT,CYEAR,CMON,CDAY,XAHOVTIM,SP70 * Date/Time
          REP       " 0",DATTIME2
.
          MATCH     DATTIME2,DATTIME1               * Departure < Amb handover
          IF        @LESS
            UNPACK    DATTIME1,FIRSTDAT,FIRSTIME
            UNPACK    DATTIME2,LASTDATE,LASTTIME
            CALL      TIMEDIFF
            IF        CALCTIME >= 1440
              GOTO      AMBD9650       * amb handover > 24 hrs after departure
            ENDIF
          ENDIF
.
          MATCH     DATTIME1,DATTIME2               * Amb handover < Departure
          IF        @LESS
            UNPACK    DATTIME2,FIRSTDAT,FIRSTIME
            UNPACK    DATTIME1,LASTDATE,LASTTIME
            CALL      TIMEDIFF
            IF        CALCTIME >= 14400
              GOTO      AMBD9650       * amb handover > 10 days before departure
            ENDIF
          ENDIF
.
          GOTO      AMBD9700
.
AMBD9650  CLEAR     ERRORMSG
          APPEND    "E413:AMBULANCE HANDOVER DATE/TIME AND",ERRORMSG
          APPEND    " DEPARTURE DATE/TIME INVALID",ERRORMSG
          RESET     ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
.
AMBD9700  MATCH     SP70,XAHOVDAT
          GOTO      AMBD9999 IF EQUAL
          GOTO      AMBD9999 IF EOS
.
          MATCH     SP70,XTRIDATE
          GOTO      AMBD9999 IF EQUAL
          GOTO      AMBD9999 IF EOS
.
          MOVE      ZERO,DATE1
          MOVE      ZERO,DATE2
.
          UNPACK    XTRIDATE,CDAY,CMON,CCENT,CYEAR
          PACK      DIMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DIMDATE
          MOVE      DIMDATE,DATE1
.
          UNPACK    XAHOVDAT,CDAY,CMON,CCENT,CYEAR
          PACK      DIMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DIMDATE
          MOVE      DIMDATE,DATE2
.
          COMPARE   DATE1,DATE2
          IF        @LESS
            CLEAR     ERRORMSG
            APPEND    "E402:AMBULANCE HANDOVER COMPLETE DATE/TIME",ERRORMSG
            APPEND    " CANNOT BE BEFORE TRIAGE DATE/TIME",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
          ENDIF
          IF        @EQUAL
            MOVE      XTRITIME,TIME1
            MOVE      XAHOVTIM,TIME2
            COMPARE   TIME1,TIME2
            IF        @LESS
              CLEAR     ERRORMSG
              APPEND    "E402:AMBULANCE HANDOVER COMPLETE DATE/TIME",ERRORMSG
              APPEND    " CANNOT BE BEFORE TRIAGE DATE/TIME",ERRORMSG
              RESET     ERRORMSG
              MOVE      ANSR,ERRTYPE
              CALL      PRTERR00
            ENDIF
          ENDIF
.
AMBD9999  RETURN
.
.
.******************************************************************************
.*                                  SRVT0000                                  *
.* Get service type and location if required                                  *
.******************************************************************************
SRVT0000  PACK      KEY5,CATYW,EMVIVSTY,SP70
          CALL      RDCODE1                      * Read Service Type
          BRANCH    OVRCD,SRVT9999
.
          UNPACK    THCSCOD,XSERVTYP             * Service Type 2019 VEMD
          MATCH     SP1,XSERVTYP
          GOTO      SRVT0010 IF EQUAL
.
          COMPARE   ONE,DOYR2025
          GOTO      SRVT0050 IF NOT EQUAL
          MATCH     "2",XSERVTYP
          GOTO      SRVT0010 IF EQUAL
          MATCH     "3",XSERVTYP
          GOTO      SRVT0010 IF EQUAL
          MATCH     "4",XSERVTYP
          GOTO      SRVT0010 IF EQUAL
.
          GOTO      SRVT0050
.
SRVT0010  CLEAR     ERRORMSG
          APPEND    "E410: SERVICE TYPE INVALID",ERRORMSG
          RESET     ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
.
SRVT0050  PACK      KEY5,CATYX,EMVIVPLC,SP70
          CALL      RDCODE1                      * Read Patient Location
          BRANCH    OVRCD,SRVT9999
.
          UNPACK    THCSCOD,XPATLOCN             * Patient Location 2019 VEMD
.
          MATCH     "T",TCINDC1                  * Transfer ?
          GOTO      SRVT5000 IF NOT EQUAL
.
          PACK      KEY8,EMVIADMN,SP70
          CALL      RDPTDAD1                * Read Transfer Destination
          BRANCH    OVRCD,SRVT5000

          PACK      KEY5,PTDAADTS,SP70
          CALL      RDPTVAD1                * Read patvadaf
          BRANCH    OVRCD,SRVT5000
.
          MOVE      PTVACNME,XPATLOCN       * Patient Location 2019 VEMD
.
SRVT5000  MATCH     "9996",XPATLOCN
          IF        @EQUAL
            MATCH     "6",XSERVTYP
            IF        !@EQUAL
              CLEAR     ERRORMSG
              APPEND    "E417:PATIENT LOCATION IS 9996 - HOME BUT SERVICE TYPE IS NOT 6 - VIRTUAL",ERRORMSG
              RESET     ERRORMSG
              MOVE      ANSR,ERRTYPE
              CALL      PRTERR00
            ENDIF
          ENDIF
.
SRVT9999  RETURN
.
.******************************************************************************
.*        Requires DSEXCHAR as input                                          *
.*        Returns  DSEXDESC    8 character description                        *
.*                 DSEXNO      Form 1 field for Cat.G Indc.5                  *
.******************************************************************************
SEXDSC00  MOVE      NINE,DSEXNO             * default 9
.
          PACK      KEY5,ANSG,SP1,DSEXCHAR,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,SEXDSC90
.
          MOVE      ZERO,F1
          MOVE      TCINDC5,F1
          MOVE      F1,DSEXNO
.
          PACK      DSEXDESC,TDESC,SP70
          GOTO      SEXDSC99
.
SEXDSC90  MOVE      "Invalid Sex",DSEXDESC
.
SEXDSC99  RETURN
.
.******************************************************************************
.* Check for a duplicate attendace in current extract run                      *
.******************************************************************************
DUPA0000  MOVE      EMVIURNO,SAVEURNO            * Current U/R number
          MOVE      EMVIADMN,SAVEVIST            * Current visit number
.
          PACK      DIM16A,EMVIDATE,EMVITIME,SP70     * Arrival Date/Time
          REP       ": ",DIM16A
          REP       " 0",DIM16A
          MOVE      DIM16A,FORM17A
.
          PACK      DIM16D,EMVIDDAT,EMVIDTIM,SP70     * Discharge Date/Time
          REP       ": ",DIM16D
          REP       " 0",DIM16D
          MOVE      DIM16D,FORM17D
.
          PACK      KEY16,SAVEURNO,SP70
          CALL      RSEMVIS3
DUPA1000  CALL      RKEMVIS3                     * Read ED visits by U/R
          BRANCH    OVRCD,DUPA9999
.
          MATCH     SAVEURNO,EMVIURNO            * Correct U/R
          GOTO      DUPA9999 IF NOT EQUAL
.
          MATCH     SAVEVIST,DEMVIADM            * Skip same visit
          GOTO      DUPA1000 IF EQUAL
.
          COMPARE   THREE,EMVISTAT               * Discharged complete only
          GOTO      DUPA1000 IF NOT EQUAL
.
          MATCH     STARTDAT,EMVIDDAT            * Skip if discharge date
          GOTO      DUPA1000 IF LESS             * before extract start date
.
          MATCH     EMVIDDAT,FINISHDT            * Skip if discharge date
          GOTO      DUPA1000 IF LESS             * after extract end date
.
          PACK      DIM16A,EMVIDATE,EMVITIME,SP70     * Arrival Date/Time
          REP       ": ",DIM16A                       * of additional visit
          REP       " 0",DIM16A
          MOVE      DIM16A,FORM17AA
.
          PACK      DIM16D,EMVIDDAT,EMVIDTIM,SP70     * Discharge Date/Time
          REP       ": ",DIM16D                       * of addition visit
          REP       " 0",DIM16D
          MOVE      DIM16D,FORM17DD
.
. Arrival date/time inside original visits arrival and discharge date/time
.
          IF        FORM17AA >= FORM17A & FORM17AA <= FORM17D
            GOTO      DUPA9000
          ENDIF
.
. Discharge date/time inside original visits arrival and discharge date/time
.
          IF        FORM17DD >= FORM17A & FORM17DD <= FORM17D
            GOTO      DUPA9000
          ENDIF
.
. Discharge date/time surrounds original visits arrival and discharge date/time
.
          IF        FORM17AA <= FORM17A & FORM17DD >= FORM17D
            GOTO      DUPA9000
          ENDIF
.
          GOTO      DUPA1000

DUPA9000  MOVE      SAVEURNO,EMVIURNO            * Current U/R number
          MOVE      SAVEVIST,EMVIADMN            * Current visit number
          MOVE      "E025:DUPLICATE ATTENDANCE",ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
.
DUPA9999  RETURN
.*****************************************************************************
.*                            NDIS0000             Called by: WPV11015       *
.*       Load the NDIS Identifier Number (PV1.22) for PPP messages only      *
.*       Load for all program types                                          *
.* Returns:  PV1022   - NDIS Identifier
.*****************************************************************************
NDIS0000  PACK      KEY19,PURNO,SP70
          CALL      RSPMCCD1
NDIS1000  CALL      RKPMCCD1                      * Read Concession cards
          BRANCH    OVRCD,NDIS9500
.
          MATCH     PURNO,PMCDURNO             * Correct U/R
          GOTO      NDIS9500 IF NOT EQUAL
.
          PACK      KEY5,CATCT,PMCDCTYP,SP70      * Get Concession Card Type
          CALL      RDCODE1
          BRANCH    OVRCD,NDIS1000
.
          MATCH     "7",TCINDC1                   * Is Card NDIS?
          GOTO      NDIS1000 IF NOT EQUAL
.
          MATCH     SP70,PMCDEXDT                 * Is expiry blank?
          GOTO      NDIS9000 IF EQUAL
.
          MATCH     STARTDAT,PMCDEXDT             * Has card Expired?
          GOTO      NDIS9000 IF NOT LESS          * as at episode start date
.
          GOTO      NDIS1000
.
NDIS9000  SQUEEZE   PMCDCNUM                      * Valid NDIS identifier
          GOTO      NDIS9999
.
NDIS9500  MOVE      SP70,PMCDCNUM                  * No Valid NDIS identifier
          SQUEEZE   PMCDCNUM
          GOTO      NDIS9999
.
NDIS9999  RETURN
.
.*****************************************************************************
.*                            NDI20000                                       *
.*                Load NDIS Identifier from PATATR                           *
.*****************************************************************************
NDI20000  PACK      KEY35,PURNO,Z70
          CALL      RSPTATR1
NDI21000  CALL      RPPTATR1                      * Read Concession cards
          BRANCH    OVRCD,NDI29500
.
          MATCH     PURNO,PTARURNO             * Correct U/R
          GOTO      NDI29500 IF NOT EQUAL
.
          MATCH     "020",PTARTYPE
          GOTO      NDI21000 IF NOT EQUAL
.
          MATCH     "1",PTARDELR                  * Deleted
          GOTO      NDI21000 IF EQUAL
.
          MATCH     "002",PTARCOD1                * Inactive
          GOTO      NDI21000 IF EQUAL
.
          MATCH     SP70,PTARFDTE                 * Is expiry blank?
          GOTO      NDI29000 IF EQUAL
.
          MATCH     STARTDAT,PTARFDTE             * Has card Expired?
          GOTO      NDI29000 IF NOT LESS          * as at episode start date
.
          GOTO      NDI21000
.
NDI29000  SQUEEZE   PTARTXT1                      * Valid NDIS identifier
          GOTO      NDI29999
.
NDI29500  MOVE      SP70,PTARTXT1                  * No Valid NDIS identifier
          SQUEEZE   PTARTXT1
          GOTO      NDI29999
.
NDI29999  RETURN
.*****************************************************************************
.*                            FUND0000                                       *
.*                Load Funding Source Claim Type in emrvisaf-EMVICOMP        *
.*****************************************************************************
FUND0000  COMPARE   ONE,DOYR2025
          GOTO      FUND9999 IF NOT EQUAL
.
          MATCH     SP70,EMVICOMP
          IF        @EQUAL | @EOS
            CLEAR     ERRORMSG
            APPEND    "E419: Funding Source invalid",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      FUND9999
          ENDIF
.
          PACK      KEY5,CODECL,EMVICOMP,SP70
          CALL      RDCODE1                   * code on file ?
          IF        OVRCD=1
            CLEAR     ERRORMSG
            APPEND    "E419: Funding Source invalid",ERRORMSG
            RESET     ERRORMSG
            MOVE      ANSR,ERRTYPE
            CALL      PRTERR00
            GOTO      FUND9999
          ENDIF
.
FUND1000  UNPACK    PTCDUDF5,DIM1,DIM1A
          MOVE      ZERO,FLAGDVAF            * DVA Funding source = No
.
          MATCH     "0",DIM1                 * starts with "0" ?
          IF        @EQUAL
            MOVE      ZERO,F1
            MOVE      DIM1A,F1
            IF        F1 >= 1 & F1 <= 9
              IF        F1 = 4
                MOVE      ONE,FLAGDVAF      * If Cat CL UDF5=04 then
              ENDIF                         * DVA Funding source = Yes
              GOTO      FUND2000            * ranges between "01" and "09"
            ENDIF
          ENDIF
.
          UNPACK    PTCDUDF5,DIM2
          MOVE      ZERO,F2
          MOVE      DIM2,F2
          IF        (F2 >= 10 & F2 <= 13) | F2 = 88 | F2 = 98
            GOTO      FUND2000
          ENDIF
.
          CLEAR     ERRORMSG
          APPEND    "E419: Funding Source invalid",ERRORMSG
          RESET     ERRORMSG
          MOVE      ANSR,ERRTYPE
          CALL      PRTERR00
          GOTO      FUND9999
.
FUND2000  UNPACK    PTCDUDF5,XFUNDSRC       * Funding source
.
          MATCH     "04",XFUNDSRC           * Report Names for DVA
          IF        @EQUAL
            MOVE      PGNAME,XGIVNAME       * Given name
            MOVE      PSNAME,XSURNAME       * Family name
          ENDIF
.
          MOVE      ZERO,HASDVACD           * No DVA card
          PACK      KEY19,PURNO,SP70
          CALL      RSPMCCD1
FUND2500  CALL      RKPMCCD1                * Read Concession cards
          BRANCH    OVRCD,FUND3000
.
          MATCH     PURNO,PMCDURNO          * Correct U/R
          GOTO      FUND3000 IF NOT EQUAL
.
          PACK      KEY5,CATCT,PMCDCTYP,SP70  * Get Concession Card Type
          CALL      RDCODE1
          BRANCH    OVRCD,FUND2500
.
          MATCH     "3",TCINDC1             * Is Card DVA?
          GOTO      FUND2500 IF NOT EQUAL
.
          MATCH     STARTDAT,PMCDEXDT       * Has card Expired?
          GOTO      FUND2500 IF LESS
.
          MOVE      ONE,HASDVACD            * Yes, patient has a valid DVA card
.
          MATCH     "04",XFUNDSRC           * Report Names for DVA
          IF        @EQUAL
            MOVE      PMCDCNUM,XDVANUM      * report DVA number
          ENDIF
.
FUND3000  IF        HASDVACD = 0 & FLAGDVAF = 0
            GOTO      FUND4000              * Ok, no card and not DVA FS
          ENDIF
.
          IF        HASDVACD = 1 & FLAGDVAF = 1
            GOTO      FUND4000              * Ok, has a card and DVA FS
          ENDIF
.
.         CLEAR     ERRORMSG
.         APPEND    "E421: Funding Source and DVA Number ",ERRORMSG
.         APPEND    "combination invalid",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.         GOTO      FUND4000
.
FUND4000  COMPARE   ONE,FLAGDVAF             * skip if not DVA Funding Source
          GOTO      FUND4500 IF NOT EQUAL
.
          MATCH     SP70,XSURNAME            * Surname mandatory for DVA
          GOTO      FUND4500 IF NOT EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E422: Funding Source and Family ",ERRORMSG
.         APPEND    "Name combination invalid",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.         GOTO      FUND4500
.
FUND4500  COMPARE   ONE,FLAGDVAF             * skip if not DVA Funding Source
          GOTO      FUND9999 IF NOT EQUAL
.
          MATCH     SP70,XGIVNAME            * Givenname mandatory for DVA
          GOTO      FUND9999 IF NOT EQUAL
.
.         CLEAR     ERRORMSG
.         APPEND    "E423: Funding Source and Given ",ERRORMSG
.         APPEND    "Name combination invalid",ERRORMSG
.         RESET     ERRORMSG
.         MOVE      ANSR,ERRTYPE
.         CALL      PRTERR00
.         GOTO      FUND9999
.
FUND9999  RETURN
.
. =========================================================================
.         I/O Includes
. =========================================================================
.
.          INC       WEBREPCD
.
          INC       EMRGRCIO/INC
          INC       EMRHISIO/INC 
          INC       EMRICDIO/INC
          INC       EMRMTXIO/INC
          INC       EMRPROIO/INC
          INC       EMRVCDIO/INC
          INC       EMRVDGIO/INC
          INC       EMRCHAIO/INC
          INC       EMRVISIO/INC
          INC       EMRVPRIO/INC
          INC       IBAPOSIO/INC
          INC       IBAPDFIO/INC
          INC       PATATRIO/INC
          INC       PATDADIO/INC
          INC       PATICDIO/INC
          INC       PATHSPIO/INC
          INC       PATCODIO/INC
          INC       PATMA1IO/INC
          INC       PMSPX2IO/INC
          INC       PATVISIO/INC
          INC       PATVADIO/INC
          INC       PATWVEIO/INC
          INC       PMSVX1IO/INC
          INC       PMSHCPIO/INC
          INC       PMSCCDIO/INC
          INC       CALCAGE
          INC       CALCDAYS
          INC       TIMEDIFF
          INC       STD001IO
