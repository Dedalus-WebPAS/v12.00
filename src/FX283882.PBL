.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   FX283882                                                    *
.* Desc      :   Check that the first and second given names in pmspx2af     *
.*               are consistent with those in patma1af                       *
.*****************************************************************************
.* Date      :   05/04/2013                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will check that the first and second given     *
.*               name fields are consistent with patma1af.pgname and if not, *
.*               a fix option is available.                                  *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       PATMA1FD/INC
          INC       PMSPX2FD/INC
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
COUNTR1   FORM      10            * records where pmpxsnam is blank but
.                                   pgname has a second given name
COUNTR2   FORM      10            * records where pmpxfnam doesn't match
.                                    the first given name in pgname
COUNTR3   FORM      10            * records where pmpxfnam is blank
.
DIM40A    DIM       40            * saved first given name from pmpxfnam
DIM40B    DIM       40            * saved second given name from pmpxsnam
.
FRSTGNAM  DIM       40
FULLGNAM  DIM       80
.
RECNUM    FORM      10
.
SCNDGNAM  DIM       40
.
.
. PROGRAM CONSTANTS
. -----------------
.
PIPE      INIT      "|"
.
.
PRGID     INIT      "FX283882"
PRGNAM    INIT      "Check pmspx2af Given Names"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000:      * proceed with query
                            MAIN1000       * proceed with fixit
.
MAIN1000  CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      PROC0000               * process
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run fixit                               *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Query":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Fixit"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run query
                            OPTN9000             * run fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*       Loop through patma1af and for each record, check the given name     *
.*       against pmspx2af.pmpxsnam.                                          *
.*****************************************************************************
.
PROC0000  DISPLAY   *P1:15,"Records with blank first name (pmpxfnam)    :":
                    *P1:16,"Records with mismatching first names        :":
                    *P1:17,"Records missing second given name (pmpxsnam):":
                    *P1:24,*EL,"Processing...";
          MOVE      ZERO,RECNUM                   * initialise record counter
          MOVE      ZERO,COUNTR1                  * initialise fault counter 1
          MOVE      ZERO,COUNTR2                  * initialise fault counter 2
          MOVE      ZERO,COUNTR3                  * initialise fault counter 3

          MOVE      ZERO,CPAGENO                  * initialise print variables
          MOVE      ZERO,CNOUNDLN
          CALL      IBACLOCK
.
          CALL      HEAD0000                      * print header
.
          MOVE      SP8,KEY8
          CALL      RDSMAST1                      * position at start of file
PROC0500  CALL      RDKMAST1                      * read next record
          BRANCH    OVRCD,PROC9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21                     * PMI extension record found ?
          BRANCH    OVRCD,PROC0500               * no - get next PMI record
.
          MATCH     PMPXFNAM,SP70                * first given name populated ?
          GOTO      PROC1000 IF NOT EQUAL        * yes
.
          MOVE      PMPXFNAM,DIM40A              * no - save current given names
          MOVE      PMPXSNAM,DIM40B
          PACK      FULLGNAM,PGNAME,SP70,SP70
          CALL      SEPRNAME                     * separate given names
          MOVE      FRSTGNAM,PMPXFNAM            * load first given name
          ADD       ONE,COUNTR1                  * increment fault counter 1
          DISPLAY   *P47:15,*V2LON,COUNTR1;
          GOTO      PROC3000
.
.         The pmpxfnam is populated, so make sure it matches pgname's
.         first name
.
PROC1000  PACK      FULLGNAM,PGNAME,SP70,SP70
          CALL      SEPRNAME                     * separate given names
          MATCH     FRSTGNAM,PMPXFNAM            * same name ?
          IF        @EQUAL
            GOTO      PROC2000                   * yes
          ELSE
            MOVE      PMPXFNAM,DIM40A            * save current given names
            MOVE      PMPXSNAM,DIM40B
            MOVE      FRSTGNAM,PMPXFNAM          * no - update first given name
            ADD       ONE,COUNTR2                * increment fault counter 2
            DISPLAY   *P47:16,*V2LON,COUNTR2;
            GOTO      PROC3000
          ENDIF
.
PROC2000  MATCH     PMPXSNAM,SP70                * second given name populated ?
          GOTO      PROC0500 IF NOT EQUAL        * yes - get next PMI record
.
          PACK      FULLGNAM,PGNAME,SP70,SP70
          CALL      SEPRNAME                     * separate given names
          MATCH     SCNDGNAM,SP70                * second given name found ?
          GOTO      PROC0500 IF EQUAL            * no - get next PMI record
.
          MOVE      PMPXFNAM,DIM40A              * save current given names
          MOVE      PMPXSNAM,DIM40B
          ADD       ONE,COUNTR3                  * increment fault counter 3
          DISPLAY   *P47:17,*V2LON,COUNTR3;
.
.         The patient has a second given name, but pmpxsnam is blank, or
.         the first given name is blank, so this is a faulty record
.
PROC3000  BRANCH    COPTION,PROC0500             * option 1
.
          MOVE      SCNDGNAM,PMPXSNAM            * load second name
          CALL      UPPMPX21                     * update record
.
          CALL      PRIN0000                     * print record
          GOTO      PROC0500
.
PROC9000  IF        COUNTR1 = 0 & COUNTR2 = 0 & COUNTR3 = 0
            PRINT     *1,"No faulty records found.  ";
            DISPLAY   *P1:24,*EL,"No faulty records found.  ";
            CALL      HITENTER
            GOTO      PROC9500
          ENDIF
          
          IF        COPTION = 1
            DISPLAY   *P1:24,*EL,"Faulty records found but not fixed.  ";
            PRINT     *1,"Faulty records found but not fixed"
          ELSE
            DISPLAY   *P1:24,*EL,"Faulty records found and fixed.  ";
            PRINT     *1,"Faulty records found and fixed"
          ENDIF
          CALL      HITENTER
          PRINT     *1,*N,"Records with blank first name (pmpxfnam)    :":
                    COUNTR1,*N:
                    *1,"Records with mismatching first names        :":
                    COUNTR2,*N:
                    *1,"Records missing second given name (pmpxsnam):":
                    COUNTR3
PROC9500  PRINT     *N,*1,"*** End of Report ***"
.
PROC9999  RETURN
+
.****************************************************************************
.*                            PRIN0000                 Called by: PROC0000  *
.*                  Valid record so print it                                *
.****************************************************************************
.
PRIN0000  COMPARE   FIFTY5,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          PRINT     *1,PIPE,*3,PURNO,*14,PIPE,*16,PGNAME,*132,PIPE,*N:
                    *1,PIPE,*14,PIPE,*16,DIM40A,*57,PIPE,*59,DIM40B,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
          CALL      LINE0000                     * print line
.
PRIN9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PROC0000  *
.*                       Print page heading                       PRIN0000  *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          BRANCH    COPTION,HEAD9999             * option 1
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"U/R Number",*14,PIPE,*16,"Given Names (PGNAME)":
                    *132,PIPE,*N:
                    *1,PIPE,*14,PIPE,*16,"First Given Name (PMPXFNAM)":
                    *57,PIPE,*59,"Second Given Name (PMPXSNAM)":
                    *132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * set line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: PROC0000  *
.*                      Draw line across page                     HEAD0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
          ADD       ONE,CLNO                     * increment line count
.
LINE9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       SEPRNAME
.
          INC       PATMA1IO/INC
          INC       PMSPX2IO/INC
