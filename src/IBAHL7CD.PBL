.----------------------------------------------------------------------
. Include  : IBAHL7CD
.
. Function : Standard Routines Relating to HL7 Interfacing
.
.----------------------------------------------------------------------------
. Sit & wait for an incoming message from the outbound comms client
.----------------------------------------------------------------------------
HL7HED00  READ      DGATEOUT;CCENCODE,DGMISC1,DGMISC2,DGMISC3;
          GOTO      OVERCOND IF OVER                   * Shutdown performed?
          UNPACK    CCENCODE,CCDATE,CCSRC,CCDST,CCNAME,MESSTYPE
          RETURN
.----------------------------------------------------------------------------
. Clear Hl7 Message
.----------------------------------------------------------------------------
HL7CLR00  READ      DGATEOUT;CDGMBUFF        * Clear Message Buffer
          RETURN
.----------------------------------------------------------------------------
. Read Segment ID
.----------------------------------------------------------------------------
HL7SEG00  READ      DGATEOUT;HL7SEGID;  
          GOTO      OVERCOND IF OVER
          RETURN
.----------------------------------------------------------------------------
. Hl7 Error Message
.----------------------------------------------------------------------------
HL7ERR00  PACK      CCENCODE,CCDATE,CCDST,CCSRC,CCNAME,REPLYRPL
.... Changed from INP to OUT
          WRITE     DGATEOUT;CCENCODE:
                             RPLYHEAD,RPLYCODE,RPLYDESC,DGMISC1,DGMISC2:
                             DGMISC3,SP1
          ADD       ONE,ERRRPROC
          WRITE     DGATEOUT;MESSPROC       * tell Dgate that message processed
          RETURN
.----------------------------------------------------------------------------
. Hl7 Message Complete
.----------------------------------------------------------------------------
HL7END00  WRITE     DGATEOUT;MESSPROC      * Acknowledge that message processed
          RETURN
.----------------------------------------------------------------------------
. HL7INT00  :  initialisation 
.----------------------------------------------------------------------------
HL7INT00  DISPLAY   *P1:4,*EF
          BOX       16,23,10,57,14
          DISPLAY   *P26:12,"Opening Server... Please Wait"
.
.         Initialise vars
.
          MOVE      ZERO,SUCCPROC
          MOVE      ZERO,ERRRPROC
          MOVE      CDATE,APSTDATE                * application start date
          CLOCK     TIME,APSTTIME                 * application start time
.
.         Open the inbound datagate file
.
.          MOVE      ZERO,OVRCD              * assume open succeeds
.          STRIP     DFILEINP
.          TRAP      OVERCOND IF IO          * trap if open fails
.          OPEN      DGATEINP,DFILEINP
.          TRAPCLR   IO
.          BRANCH    OVRCD,HL7INT90
.
.         Open the outbound data gate file
.
          MOVE      ZERO,OVRCD              * assume open succeeds
          STRIP     DFILEOUT
          TRAP      OVERCOND IF IO          * trap if open fails
          OPEN      DGATEOUT,DFILEOUT
          TRAPCLR   IO
          BRANCH    OVRCD,HL7INT91
.
          MOVE      ZERO,SHUTDOWN                 * assume no shutdown
          TRAP      INTERUPT IF INT
.
. trap IO errors (ie. I*C, I*D, I*L etc... & PARITY & SPOOL & CHAIN & etc...)
.
          TRAP      TBLERR00 NORESET GIVING RPLYDESC IF ALL
.
          MOVE      ZERO,EXIT               * initialisation succeeded
          GOTO      HL7INT99
.
.         Initialisation failure - datagate inbound service
.
HL7INT90  DISPLAY   *P1:24,*EL,*B,"Service [",*+,DFILEINP:
                    "] not currently available.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      HL7INT99
.
.         Initialisation failure - datagate outbound service
.
HL7INT91  DISPLAY   *P1:24,*EL,*B,"Service [",*+,DFILEOUT:
                    "] not currently available.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      HL7INT99
.
HL7INT99  RETURN
.----------------------------------------------------------------------
. INTERUPT  :  Interupt Detected
.----------------------------------------------------------------------
INTERUPT  MOVE      ONE,SHUTDOWN                  * shutdown recieved
          RETURN
.----------------------------------------------------------------------
. TBLERR00  :  send general error reply and shutdown                 
.----------------------------------------------------------------------
. this routine will be executed when there is a TBL error, ie. I*C...
. and send an error reply to datagate and then exit the TBL application
.
TBLERR00  ROLLBACK
          ENDSET    RPLYDESC
          APPEND    SP4,RPLYDESC
          APPEND    PRGID,RPLYDESC
          APPEND    SP2,RPLYDESC
          APPEND    VERSION,RPLYDESC
          APPEND    "(",RPLYDESC
          APPEND    MESSTYPE,RPLYDESC
          APPEND    ")",RPLYDESC
          RESET     RPLYDESC
.
          MOVE      "00100",RPLYCODE             * general error (TBL error)
          PACK      CCENCODE,CCDATE,CCDST,CCSRC,CCNAME,REPLYRPL
.... Changed from INP to OUT
          WRITE     DGATEOUT;CCENCODE:
                            RPLYHEAD,RPLYCODE,RPLYDESC:
                            DGMISC1,DGMISC2,DGMISC3,SP1
.
          RESET     ANS
          BOXCLR    8,9,72,15
          BOX       16,10,10,70,14
          DISPLAY   *P19:11,*V2LON,"FATAL ERROR!   Transaction not processed.":
                    *P15:12,*ULON,RPLYDESC:
                    *P17:13,*HOFF,*V2LON,"Please Contact IBA Support.  ":
                    "<< Hit any key >>";
          KEYIN     *ESON,*+,ANS
.
...          CLOSE     DGATEINP                * close inbound datagate file
          CLOSE     DGATEOUT                * close outbound datagate file
.
TBLERR99  STOP
.----------------------------------------------------------------------
. HL7SCR00  :  Hl7 Service Status Screen
.----------------------------------------------------------------------
HL7SCR00  DISPLAY   *P1:4,*EF
          BOX       16,3,6,78,23
          DISPLAY   *P30:6,*HON,*V2LON," MESSAGE STATISTICS "
.
          DISPLAY   *P5:8,"Application Activated on ",*V2LON,APSTDATE,*HOFF:
                    "  @  ",*V2LON,APSTTIME,*HOFF:
                    *P5:10,"Current status... ",*V2LON,*HON,"Waiting"
          HLINE     *G37,11,3,78
          HLINE     *G33,11,3,3
          HLINE     *G34,11,78,78
          DISPLAY   *P5:12,*V2LON,*ULON,"Number of requests       ",*HOFF:
                    *P41:12,*V2LON,*ULON,"Number of requests       ",*HOFF
.
          MOVE      ZERO,SUCCPERC
          IF        !(SUCCPROC=0 & ERRRPROC=0)
            ASSIGN    (SUCCPROC/(SUCCPROC+ERRRPROC)*100.0),SUCCPERC
          ENDIF
.
          DISPLAY   *P5:21,"Successfully Processed   : ",*V2LON,SUCCPROC,*HOFF:
                    *P5:22,"Unsuccessfully Processed : ",*V2LON,ERRRPROC,*HOFF:
                    *P45:22,"Successful % = ",*V2LON,SUCCPERC
.
HL7SCR99  RETURN
.----------------------------------------------------------------------
. HL7STA00  :  Update stats on screen                           
.----------------------------------------------------------------------
HL7STA00  DISPLAY   *P23:10,*V2LON,*HON,"Waiting",*HOFF,SP30
.
          MOVE      ZERO,SUCCPERC
          IF        !(SUCCPROC=0 & ERRRPROC=0)
            ASSIGN    (SUCCPROC/(SUCCPROC+ERRRPROC)*100.0),SUCCPERC
          ENDIF
.
          DISPLAY   *P34:21,*V2LON,SUCCPROC:
                    *P34:22,ERRRPROC:
                    *P60:22,SUCCPERC
HL7STA99  RETURN
.----------------------------------------------------------------------
. Routine  : HL7BRK00
.
. Function : Break up HL7 String into components
.
. Example if the following varibles is passed the routine will return
. an HL7CMP of each of the components
.
. HL7STR    : 123456^SMITH^BRUCE^A^^^NZHIS
. HL7DLM    : ^
. HL7CMP[1] : 123456
. HL7CMP[2] : SMITH
. HL7CMP[3] : BRUCE
. HL7CMP[4] : A
. HL7CMP[5] :
. HL7CMP[6] :
. HL7CMP[7] : NZHIS
.
. Inputs    : HL7STR        - String to be Processed
.             HL7DLM        - Delimiter Character (Normally ^)(Optional)
. Output    : HL7CMP[1-20]  - HL7CMP of Component Strings
.
.----------------------------------------------------------------------
HL7BRK00  PACK      HL7DLM,HL7DLM,SP70
          MATCH     SP70,HL7DLM
          IF        @EQUAL
            MOVE      "^",HL7DLM
          ENDIF
.
          PACK      HL7CMP[1],SP70,SP70
          PACK      HL7CMP[2],SP70,SP70
          PACK      HL7CMP[3],SP70,SP70
          PACK      HL7CMP[4],SP70,SP70
          PACK      HL7CMP[5],SP70,SP70
          PACK      HL7CMP[6],SP70,SP70
          PACK      HL7CMP[7],SP70,SP70
          PACK      HL7CMP[8],SP70,SP70
          PACK      HL7CMP[9],SP70,SP70
          PACK      HL7CMP[10],SP70,SP70
          PACK      HL7CMP[11],SP70,SP70
          PACK      HL7CMP[12],SP70,SP70
          PACK      HL7CMP[13],SP70,SP70
          PACK      HL7CMP[14],SP70,SP70
          PACK      HL7CMP[15],SP70,SP70
          PACK      HL7CMP[16],SP70,SP70
          PACK      HL7CMP[17],SP70,SP70
          PACK      HL7CMP[18],SP70,SP70
          PACK      HL7CMP[19],SP70,SP70
          PACK      HL7CMP[20],SP70,SP70
          CLEAR     HL7CMP[1]
          CLEAR     HL7CMP[2]
          CLEAR     HL7CMP[3]
          CLEAR     HL7CMP[4]
          CLEAR     HL7CMP[5]
          CLEAR     HL7CMP[6]
          CLEAR     HL7CMP[7]
          CLEAR     HL7CMP[8]
          CLEAR     HL7CMP[9]
          CLEAR     HL7CMP[10]
          CLEAR     HL7CMP[11]
          CLEAR     HL7CMP[12]
          CLEAR     HL7CMP[13]
          CLEAR     HL7CMP[14]
          CLEAR     HL7CMP[15]
          CLEAR     HL7CMP[16]
          CLEAR     HL7CMP[17]
          CLEAR     HL7CMP[18]
          CLEAR     HL7CMP[19]
          CLEAR     HL7CMP[20]
.
          MOVE      ONE,F2
          PACK      DIM127,HL7STR,SP70
.
HL7BRK10  SCAN      HL7DLM,DIM127
          GOTO      HL7BRK90 IF NOT EQUAL
          MOVEFPTR  DIM127,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     DIM127
            SFORMAT   VAR,LENGTH
            MOVE      DIM127,VAR
            MOVE      VAR,HL7CMP[F2]
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     DIM127,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    DIM127,KEY1,DIM127
          ADD       ONE,F2
          IF        F2<21
            GOTO      HL7BRK10
          ENDIF
.
HL7BRK90  STRIP     DIM127
          MOVE      DIM127,HL7CMP[F2]
.
          MOVE      ONE,F2
          WHILE     F2<21
            PACK      HL7CMP[F2],HL7CMP[F2],SP70,SP70
            ADD       ONE,F2
          DO
.
          RETURN
.
