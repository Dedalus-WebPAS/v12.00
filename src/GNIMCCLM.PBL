.***************************************************************************
.* System    :   Patient Management System                                 *
.* Program   :   GNIMCCLM                                                  *
.* Desc      :   Manually generate Eclipse IMC claims for testing          *
.***************************************************************************
.* Date      :   26/07/2016                                                *
.* Author    :   Steve Armstrong       TSK 0294177                         *
.* Function  :   This program will allow the user to create priectaf       *
.*               records from existing private practice invoice records.   *
.*               It is meant to be used for initial testing at the         *
.*               implementation of Electronic claiming on site by CSC      *
.*               Staff.                                                    *
.*                                                                         *
.* Mods      :                                                             *
.*        V11.00.03 24/04/2020  Peter Vela       TSK 0874025               *
.*                  Populate PRECPRAC before write to priectaf             *
.*        V11.00.02 22/04/2020  Peter Vela       TSK 0874025               *
.*                  Recompiled for PRIECTFD                                *
.*        V11.00.01 17/04/2020  Peter Vela       TSK 0874025               *
.*                  Recompiled for PRIECTFD                                *
.*        V10.13.01 26/07/2018  J.Tan            TSK 0848506               *
.*                  Changed PP Doctor from DIM6 to DIM10                   *
.*        V10.08.00 26/07/2016  Steve Armstrong  TSK 0294177               *
.*                  Created program                                        *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       IBACONFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATFN1FD/INC
          INC       PRIINVFD/INC
          INC       PRIPRAFD/INC
          INC       PATMA1FD/INC
          INC       PRIDTRFD/INC
          INC       PRIECTFD/INC
          INC       PRIHDBFD/INC
          INC       PRIHREFD/INC
          INC       RCPREGFD/INC
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
CODE      DIM       2
COUNTER   FORM      8
.
FUNDCODE  DIM       6
.
HOSPCODE  DIM       3
.
INVNUMBR  FORM      8
.
SAVACTYP  FORM      1             * saved account type
.                                     1 = HF only
.                                     2 = HF/Medicare
.                                     3 = Medicare only
.
.
. PROGRAM CONSTANTS
. -----------------
CODETA    INIT      "ta"
.
.
.
PRGID     INIT      "GNIMCCLM"
PRGNAM    INIT      "Manually Generate Eclipse IMC Claim"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              MAIN0000                                  *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
          BRANCH    EXIT,MAIN9999          * error - finish
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * exit selected
.
MAIN4000  CALL      PROC0000               * process Health Fund/Medicare
          GOTO      MAIN0100
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: MAIN0000  *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.*  Returns:   EXIT  0 = Ok to continue                                     *
.*                   1 = Error so stop                                      *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"priectaf";
          OPEN      PRIECTA1,"priectaf"
.
          DISPLAY   *P64:24,"pridtraf"
          OPEN      PRIDTRA4,"pridtraf"
.
          DISPLAY   *P64:24,"prihdbtf"
          OPEN      PRIHDBT2,"prihdbtf"
.
          DISPLAY   *P64:24,"prihreff"
          OPEN      PRIHREF1,"prihreff"
.
          DISPLAY   *P64:24,"priinvof";
          OPEN      PRIINVO1,"priinvof"
.
          DISPLAY   *P64:24,"pripracf"
          OPEN      PRIPRAC1,"pripracf"
.
          DISPLAY   *P64:24,"rcpregaf"
          OPEN      RCPREGA1,"rcpregaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,HUND10;*115,PTCNUEDI
          READ      CONTROLF,HUND24;*111,PTCNUIMC
.
          COMPARE   ONE,PTCNUEDI                 * using EDI ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Eclipse Claiming not in use.  ";
            CALL      HITENTER
            GOTO      INIT9100
          ENDIF
.
          MATCH     "1",PTCNUIMC                 * using IMC ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Eclipse IMC Claiming not in use.  ";
            CALL      HITENTER
            GOTO      INIT9100
          ENDIF
.
          MOVE      ONE,CNEWDS
          MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9100  MOVE      ONE,EXIT
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*                                                                           *
.*    Returns:  EXIT    = FALSE (0)  Input Claims                            *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION  1 = Health Fund                                     *
.*                       2 = Medicare                                        *
.*****************************************************************************
.
OPTN0000  HLINE     *G37,2,64,80
          DISPLAY   *P1:3,*EF,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:4,*V2LON,ONE,*HOFF,". Health Fund":
                    *P1:5,*V2LON,TWO,*HOFF,". Medicare"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9100 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * Health Fund
                            OPTN9000             * Medicare
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9100  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*                 Select the fund and invoice before writing record         *
.*****************************************************************************
.
PROC0000  BRANCH    COPTION,PROC0500:            * health fund
                            PROC1000             * medicare
.
PROC0500  CALL      GFND0000                     * get health fund code
          BRANCH    EXIT,PROC9999                * nothing input
.
PROC1000  CALL      GINV0000                     * input data fields
          IF        EXIT = 1
            BRANCH    COPTION,PROC0500:          * health fund
                              PROC9999           * medicare
          ENDIF
.
          CALL      GHOS0000                     * get hospital code
          BRANCH    EXIT,PROC1000                * hospital not found
.
          CALL      POSTQST                      * Ok to post ?
          BRANCH    CEXIT,PROC2000:              * yes
                          PROC1000:              * no
                          PROC9999               * cancel
.
PROC2000  CALL      WRIT0000                     * write new record
          GOTO      PROC1000
.
PROC9999  RETURN
+
.****************************************************************************
.*                                  GFND0000           Called by: MAIN0000  *
.*                     Get Health Fund code                                 *
.*         Returns: EXIT  0 = OK                                            *
.*                        1 = nothing or exitchar entered                   *
.****************************************************************************
.
GFND0000  KEYIN     *P1:18,*EF,"Health Fund Code :":
                    *P23:18,*V2LON,FUNDCODE
.
          CALL      CHKF0000                * see what was entered
          BRANCH    EXIT,GFND1000:          * ? entered
                         GFND7500:          * valid code
                         GFND9000:          * nothing entered
                         GFND9000           * exitchar
.
          GOTO      GFND0000                * invalid code
.
GFND1000  MOVE      ZERO,HLEF
          CALL      GETSCR00
GFND1200  CALL      PATFNDDS                * display codes on file
.
GFND1500  KEYIN     *P1:24,*EL,"Health Fund: ":
                    *P19:24,*V2LON,FUNDCODE
.
          CALL      CHKF0000                * see what was entered
          BRANCH    EXIT,GFND1200:          * ? entered
                         GFND7000:          * valid code
                         GFND8000:          * nothing entered
                         GFND8000           * exitchar
.
          GOTO      GFND1500
.
GFND7000  CALL      PUTSCR00                * restore screen
          DISPLAY   *P23:18,*V2LON,FUNDCODE
GFND7500  DISPLAY   *P33:18,HFNAME
          MOVE      ZERO,EXIT
          GOTO      GFND9999
.
GFND8000  CALL      FRESCR00
GFND9000  MOVE      ONE,EXIT
.
GFND9999  RETURN
+
.***************************************************************************
.*                                  CHKF0000           Called by: GFND0000 *
.*                      See what was input                                 *
.*      Returns: EXIT  0 = invalid                                         *
.*                     1 = "?"                                             *
.*                     2 = valid                                           *
.*                     3 = nothing                                         *
.*                     4 = exitchar                                        *
.***************************************************************************
.
CHKF0000  PACK      FUNDCODE,FUNDCODE,SP6
.
          MATCH     SP6,FUNDCODE                 * anything entered ?
          GOTO      CHKF9000 IF EQUAL            * no
.
          MATCH     EXITCHAR,FUNDCODE            * exitchar entered ?
          GOTO      CHKF7000 IF EQUAL            * yes
.
          MATCH     QUEST,FUNDCODE               * ? entered ?
          GOTO      CHKF8000 IF EQUAL            * yes
.
.         Code entered
.
          PACK      KEY14,FUNDCODE,ZERO,ZERO,ZERO,ZERO,SP4
          CALL      RDFUND1                      * fund code on file ?
          BRANCH    OVRCD,CHKF6000               * no
.
CHKF5000  MOVE      TWO,EXIT                     * code entered
          GOTO      CHKF9999
.
CHKF6000  DISPLAY   *P1:24,*EL,*B,"Health Fund not on file. ";
          CALL      HITENTER
          MOVE      ZERO,EXIT
          GOTO      CHKF9999
.
CHKF7000  MOVE      FOUR,EXIT
          GOTO      CHKF9999
.
CHKF8000  MOVE      ONE,EXIT
          GOTO      CHKF9999
.
CHKF9000  MOVE      THREE,EXIT
.
CHKF9999  RETURN
+
.*****************************************************************************
.*                               GINV0000              Called by: MAIN0000   *
.*                Get the Invoice Number                                     *
.*****************************************************************************
.
GINV0000  KEYIN     *P1:19,*EF,"Invoice Number   :":
                    *P23:19,*V2LON,INVNUMBR
.
          COMPARE   ZERO,INVNUMBR                * anything input ?
          GOTO      GINV9100 IF EQUAL            * no - finish
.
          MOVE      INVNUMBR,KEY8
          CALL      RDPRIN1                      * invoice on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Invoice not on file.  ";
            CALL      HITENTER
            GOTO      GINV0000
          ENDIF
.
.         Get PMI details
.
          MOVE      PRINDEBT,KEY8
          CALL      RDMAST1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"U/R number ",*V2LON,PRINDEBT,*HOFF:
                      " not on file.  ";
            CALL      HITENTER
            GOTO      GINV0000
          ELSE
            MOVE      PSNAME,PACSNAME
            MOVE      PGNAME,PACGNAME
            MOVE      PTITL,PACTITLE
            MOVE      ONE,PACFRMT
            CALL      PACNAME
            DISPLAY   *P33:19,PACFNAME
          ENDIF
.
.         Get the private practice header record for the invoice
.
          MOVE      PRINUNIQ,KEY8
          CALL      RDPRHD2
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Header record for invoice ":
                      *V2LON,PRINNUMB,*HOFF," not found.  ";
            CALL      HITENTER
            GOTO      GINV0000
          ENDIF
.
          MATCH     SP6,PRHDHFND
          IF        @EQUAL
            IF        COPTION = 1
              DISPLAY   *P1:24,*EL,*B,"Health Fund is blank.  ";
              CALL      HITENTER
              GOTO      GINV0000
            ENDIF
          ELSE
            IF        COPTION = 2
              DISPLAY   *P1:24,*EL,*B,"Health Fund is not blank.  ";
              CALL      HITENTER
              GOTO      GINV0000
            ENDIF
          ENDIF
.
.         Get the first private practice dtr record for an item on the invoice
.
          PACK      KEY22,PRINNUMB,SP30
          CALL      RSPRDT4                      * position before invoice
GINV1000  CALL      RKPRDT4                      * read next record
          BRANCH    OVRCD,GINV2000               * eof - finished
.
          MATCH     PRINNUMB,PRDTINVN            * same invoice still ?
          GOTO      GINV2000 IF NOT EQUAL        * no - finished
.
          COMPARE   ONE,PRDTRTYP                 * item record ?
          GOTO      GINV1000 IF NOT EQUAL        * no - ignore record
.
.         This is the first pridtraf item record for the invoice, so get
.         the corresponding prihreff record now that we have the patient
.         indicator
.
          PACK      KEY27,PRDTUNIQ,PRDTPRAC,PRDTDOCT,PRDTCODE
          CALL      RDPRHR1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Referral record for invoice ":
                      *V2LON,PRINNUMB,*HOFF," not found.  ";
            CALL      HITENTER
            GOTO      GINV0000
          ENDIF
.
          GOTO      GINV3000
.
GINV2000  DISPLAY   *P1:24,*EL,*B,"No item records found for invoice ":
                    *V2LON,PRINNUMB,*HOFF,".  ";
          CALL      HITENTER
          GOTO      GINV0000
.
.         Now get the type of account/claim so that we can populate
.         priectaf.preceetp later on
.
GINV3000  MATCH     SP3,PRHRTACC                 * blank type of account/claim ?
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Type of Account/Claim blank.  ";
            CALL      HITENTER
            GOTO      GINV0000
          ENDIF
.
          PACK      KEY5,CODETA,PRHRTACC
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Type of Account/Claim (",*V2LON,PRHRTACC:
                                    *HOFF,") not found.  ";
            CALL      HITENTER
            GOTO      GINV0000
          ENDIF
.
.         Load Indicator 1 to determine the account type
.
          MOVE      ZERO,FORM1
          MOVE      TCINDC1,FORM1
          BRANCH    FORM1,GINV3200:              * AG
                          GINV3200:              * SC
                          GINV3100:              * invalid
                          GINV3100:              * invalid
                          GINV3100:              * invalid
                          GINV3300:              * MB
                          GINV3400               * MO
.
GINV3100  DISPLAY   *P1:24,*EL,*B,"Type of Account/Claim (",*V2LON,PRHRTACC:
                                  *HOFF,") not valid.  ";
          CALL      HITENTER
          GOTO      GINV0000
.
GINV3200  BRANCH    COPTION,GINV3210:            * Health Fund - Ok
                            GINV3500             * Medicare - Invalid
.
GINV3210  MOVE      ZERO,SAVACTYP                * Health Fund only claim
          GOTO      GINV3900
.
GINV3300  MOVE      ONE,SAVACTYP                 * Health Fund/Medicare claim
          GOTO      GINV3900
.
GINV3400  BRANCH    COPTION,GINV3500:            * Health Fund - Ok
                            GINV3410             * Medicare - Invalid
.
GINV3410  MOVE      TWO,SAVACTYP                 * Medicare only claim
          GOTO      GINV3900
.
GINV3500  DISPLAY   *P1:24,*EL,*B,"Type of Account/Claim (",*V2LON,PRHRTACC:
                                  *HOFF,") not valid for option selected";
          CALL      HITENTER
          GOTO      GINV0000
.
.         Now continue processing based on whether the user selected Health
.         Fund or Medicare
.
GINV3900  BRANCH    COPTION,GINV4000:            * Health Fund
                            GINV5000             * Medicare
          GOTO      GINV9100
.
.         Check if Health Fund is valid
.
GINV4000  MATCH     FUNDCODE,PRHDHFND
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Health Fund (",*V2LON,PRHDHFND,*HOFF:
                      ") doesn't match.  ";
            CALL      HITENTER
            GOTO      GINV0000
          ENDIF
          GOTO      GINV9000
.
GINV5000  MATCH     SP6,PRHDHFND
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Not a Medicare claim ";
            CALL      HITENTER
            GOTO      GINV0000
          ENDIF
.
GINV9000  MOVE      ZERO,EXIT
          GOTO      GINV9999
.
GINV9100  MOVE      ONE,EXIT
.
GINV9999  RETURN
+
.*****************************************************************************
.*                              WRIT0000               Called by: PROC0000   *
.*                Write a new priectaf record                                *
.* Requires: HOSPCODE - hospital code (pathspaf)                             *
.*           SAVACTYP - saved type of account/claim                          *
.*           A valid read on the invoice record (priinvof)                   *
.*           A valid read on the corresponding prihdbtf record               *
.*****************************************************************************
.
WRIT0000  MOVE      HOSPCODE,PRECHOSP
          MOVE      ZERO,PRECFLAG
          MOVE      PRHDHFND,PRECHFND
          MOVE      PRINUNIQ,PRECUNIQ
          MOVE      PRINNUMB,PRECINVN
          MOVE      SP8,PRECBATN
          MOVE      PRINDEBT,PRECURNO
          MOVE      SP8,PRECPBAT
          MOVE      SP8,PRECNBAT
          MOVE      SP30,PRECTRID
          MOVE      SAVACTYP,PRECEETP
          MOVE      ZERO,PRECAMTC
          MOVE      ZERO,PRECAMFP
          MOVE      ZERO,PRECAMMP
          MOVE      SP8,PRECPDAT
          MOVE      " 0",PRECSTAT
          MOVE      PRINPRAC,PRECPRAC
          MOVE      SP70,PRECSPAR
.
          PACK      KEY35,PRECHOSP,PRECFLAG,PRECHFND,PRECUNIQ,PRECINVN,PRECBATN
          CALL      RAPRECT1
          IF        OVRCD = 1
            CALL      WRPRECT1
            DISPLAY   *P1:24,*EL,*B,"Record created.  ";
            CALL      HITENTER
          ELSE
            DISPLAY   *P1:24,*EL,*B,"Record already exists on file.  ";
            CALL      HITENTER
          ENDIF
.
WRIT9999  RETURN
+
.*****************************************************************************
.*                              GHOS0000           Called by: PROC0000       *
.*                     Get the associated hospital code                      *
.* Returns: HOSPCODE - Hopsital code (pathspaf)                              *
.*          EXIT   0 = Hospital code found                                   *
.*                 1 = Error getting hospital code                           *
.*****************************************************************************
.
GHOS0000  MOVE      SP3,HOSPCODE                 * initialise hospital code
.
          COMPARE   ONE,IBCNMHOS                 * using multi-campus ?
          GOTO      GHOS9000 IF NOT EQUAL        * no - finished
.
          MOVE      PRINPRAC,KEY6
          CALL      RDPRPR1                      * practice on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Medical Practice (",*V2LON,PRINPRAC,*HOFF:
                                    ") not found.  ";
            CALL      HITENTER
            GOTO      GHOS9100
          ENDIF
.
          MATCH     SP3,PRPRREGI                 * register blank ?
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Medical Practice (",*V2LON,PRINPRAC,*HOFF:
                                    ") Register is blank.  ";
            CALL      HITENTER
            GOTO      GHOS9100
          ENDIF
.
          MOVE      PRPRREGI,KEY3
          CALL      RDREGA1                      * register on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Medical Practice (",*V2LON,*V2LON,PRINPRAC:
                                    *HOFF," Register (",*V2LON,PRPRREGI,*HOFF:
                                    ") not found.  ";
            CALL      HITENTER
            GOTO      GHOS9100
          ENDIF
.
          MATCH     SP3,REGHOSP                  * hospital blank ?
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Medical Practice (",*V2LON,*V2LON,PRINPRAC:
                                    *HOFF," Register (",*V2LON,PRPRREGI,*HOFF:
                                    ") is blank.  ";
            CALL      HITENTER
            GOTO      GHOS9100
          ENDIF
.
          MOVE      REGHOSP,HOSPCODE
.
GHOS9000  MOVE      ZERO,EXIT
          GOTO      GHOS9999
.
GHOS9100  MOVE      ONE,EXIT
.
GHOS9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       PATFNDDS
.
          INC       PATCODIO/INC
          INC       PATFN1IO/INC
          INC       PRIINVIO/INC
          INC       PATMA1IO/INC
          INC       PRIDTRIO/INC
          INC       PRIECTIO/INC
          INC       PRIHDBIO/INC
          INC       PRIHREIO/INC
          INC       PRIPRAIO/INC
          INC       RCPREGIO/INC
