.******************************************************************************
.* System    :   Private Practice                                             *
.* Program   :   IBAPRI90                                                     *
.* Desc      :   Take Up Outstanding Debts                                    *
.******************************************************************************
.* Date      :   03/07/92                                                     *
.* Author    :   Stephen Armstrong                                            *
.* Function  :   This program provides a means of inputting any outstanding   *
.*               debts when the Private Practice system is first installed.   *
.*                                                                            *
.*               N.B. The item set up for outstanding debts should have an    *
.*               effective from date that will be prior to all the invoice    *
.*               date for all the debts ie 01/01/1900                         *
.* Mods      :                                                                *
.*                                                                            *
.* V10.13.01 06/08/2018 Richa Phogat TSK 0848506                              *
.*           Updated keylength for RDPRHR1 from KEY23 to KEY27,               *
.*           for RSTEMP1, RKTEMP1, WRTEMP1 from KEY30 to KEY34                *
.*           Extended keylength for XSDOCT, DCODE, SDOCT from 6 to 10         *
.* V10.11.01 02/08/2017 J.Tan     TSK 0837619                                 *
.*           Added CLPRIDTR,CLPRIHTR - clear pridtraf,prihtraf fields         *
.* V10.08.01 18/04/2016  Peter Vela     CAR 0294177                           *
.*           Changed read to prihdb to KEY27                                  *
.* V20.07.02 21/12/2015  J.Tan          CAR 0303942                           *
.*           Mods to setup Payment code                                       *
.* V10.07.01 13/10/2015  J.Tan          CAR 310329                            *
.*           Mods to set PRDTEFFD - Date item assigned to Fees Invoiced       *
.* V10.04.02 15/04/2014  J.Tan          CAR 261630                            *
.*           Removed port number from temp file name                          *
.* V10.04.01 21/01/2014  Patrick Adair    CAR 265844                          *
.*           Include new fields for PRA State and mobile phone                *
.*        V10.01.01 03/02/2011 Jill Parkinson CAR 233088                      *
.*                  Added pmsvx1af                                            *
.* V9.12.02  09/12/2009 Mike Laming   CAR 210835                              *
.*           Added logic for Private Practice Outstanding Debt alert          *
.* V9.12.01  23/07/2009  J.Tan          CAR 200230                            *
.*           Recompiled for PRICALFN - fixed generating previous year data    *
.* V9.11.01  08/01/2009 J.Tan      CAR 178415                                 *
.*           Added Medical Practice to prifinsf                               *
.* V9.10.01  23/05/2008 J.Tan      CAR 169149                                 *
.*           Added Date and Time invoice created/updated                      *
.* V9.09.01  06/09/2007  Ebon Clements CAR 146075                             *
.*           Populate PRDTSDAT with PRINDATE                                  *
.* V9.08.01  14/05/2007  Peter Vela    CAR 136586                             *
.*           Recompiled for PRIINVPR - Added SJOG Referral Doctor details     *
.* V9.04.01  03/08/05 J.Tan    CAR 62750                                      *
.*           Removed redefined amount variables                               *
.* V9.03.03  29/03/2004 J.Tan   CAR 44116                                     *
.*           Mods to initialise credit note variables for invoice file        *
.* V9.03.02  03/03/2004 Lina Vo      CAR 47921                                *
.*           Removed use of PRIDBTFD & IO.                                    *
.* V9.03.01  29/10/2003 Sandra Barcham   43783                                *
.*           Recompiled for NZHISIIO and NZHISIUP                             *
.******************************************************************************
.* V9.02.03  06/11/2002  J.Tan                                                *
.*           Recompiled for PRIKYDEB - merge U/R                              *
.* V9.02.02  09/02/2002  J.Tan                                                *
.*           Mods for doctor income percentage                                *
.* V9.02.01  02/10/2001  J.Tan                                                *
.*           Mods to use PMSHCPFD instead of PATDO1FD                         *
.* V9.00.B01 13/06/2001  Steve Armstrong       Call 10742                     *
.*           Recompiled for changes to PRIKYDEB                               *
.******************************************************************************
.*        V5.10.B01 26/03/2001  Glenn Saunders                                *
.*                  Remove access to PTCNSNDX and associated processing.      *
.*                  Remove all references to PATSUR file (old surname file).  *
.******************************************************************************
.*        V5.09.B01 09/01/2001  Jill Habasque                                 *
.*                  Fixed global recompile errors - move NZHISFD              *
.*        V5.08.04  21/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.03  28/06/2000  Steve Downing                                 *
.*                  Mods to set accounts payable flag variable                *
.*        V5.08.02  05/05/2000  J.Tan                                         *
.*                  Recompiled for PRIDOCT file                               *
.*        V5.08.B02 07/04/2000  J Habasque                                    *
.*                  Added open of controlf                                    *
.*        V5.08.B01 21/03/2000  J.Tan                                         *
.*                  Mods for GST                                              *
.*        V5.07.05  16/10/1999  D.Di. Paola                                   *
.*                  Recompiled for PRIITMFD                                   *
.*        V5.07.04  12/10/1999  J Habasque                                    *
.*                  Recompiled for PRIHRTFD                                   *
.*        V5.07.03  23/06/1999  Greg Horvat                                   *
.*                  Changed to use PRIMPDKY to keyin the PP service doctor    *
.*        V5.07.02  22/06/1999  Jill Habasque                                 *
.*                  Recompiled for PRISTAIO                                   *
.*        V5.07.01  09/06/1999  Greg Horvat                                   *
.*                  Recompiled for PRIINVIO - Fixed problem with direct read  *
.*        V5.05.01  08/10/1997  Steve Armstrong         WWH Mods              *
.*                  Mods for change from GETITEM to KYPRIITM                  *
.******************************************************************************
.*        V5.04.01  14/06/1997  Steve Armstrong                               *
.*                  Fixed bugs in global recompile                            *
.******************************************************************************
.*               V6.00.03 07/10/92  Steve Armstrong                        *
.*                        Modified for alphanumeric debtor number          *
.*               V6.00.04 27/01/1993  Steve Armstrong  SRF 120122  Q7558   *
.*                        Recompiled for PRIHTRFD                          *
.*        V6.00.05  12/08/1993  Glenn Berry      SRF 122974                *
.*                  Mods for changes to PRIHTRFD                           *
.*        V5.03.01  07/08/1995  Steve Armstrong                            *
.*                  Recompiled for PRIKYDEB                                *
.*        V5.03.02  06/10/1995  Steve Armstrong                            *
.*                  Mods to set PRINPEND correctly                         *
.***************************************************************************
.
.$$$$$$
.         TAKE UP OUTSTANDING DEBTS PROGRAM (IBAPRI90)
.         --------------------------------------------
.
.         ML0000
.         Initialisation and open files
.         pridebtf   patcodes
.         prihdbtf   patma1af
.         prihreff   patsurnf  (removed V.10.B01)
.         prihtraf   patpramf
.         pridtraf   patmi1af
.         priinvof   patdrgaf
.         pristatf
.         prifinsf
.         priitemf
.         pripracf
.         pridoctf
.         controlf
.
.
.         ML0100
.         Get the user option
.            If zero input, finish program
.
.         ML1000 
.         Create a temporary file for printing later
.
.         Process the debts for each combination of medical practice, doctor
.           and debtor number and write each one to the temp file
.        
.         Loop through the temp file and print each record processed.
.
.         Erase the temporary file
.
.         Return to get the next user option
.
.         ML9999
.         Chain back to the calling program
.
.$$$$$$
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
.
.         Temporary File Definition
.         -------------------------
.
.         Filename : PRI90Axx.dat          (xx = port id)
.
OUTTEMP1  IFILE SQL, FIXED=55, KEY="U1-6,7-16,17-24,25-26,27-34"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
XMPRAC    DIM       6           6           1       Medical Practice
XSDOCT    DIM       10          10          7       Service Doctor
XDEBTOR   DIM       8           8           17      Debtor U/R #
XSCANFLG  DIM       2           2           25      Scan Flag
.                                                     0 = Private Prac.
.                                                     1 = PMI
XINVOICE  DIM       8           8           27      Invoice #
XINVDATE  DIM       8           8           35      Invoice Date (CCYYMMDD)
XOUTAMT   FORM      8.2         6           43      Invoice Amount
XCLAIM    DIM       3           3           49      Claim Code
XPINDIC   DIM       3           3           52      Patient Indicator
.
.End of Record                              55
.
.
.         FILE DESCRIPTION INCLUDES
.         -------------------------
.
          INC       PATCONFD/INC
          INC       PATCODFD/INC
          INC       PATGSRFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PATPR1FD/INC
          INC       PATDRGFD/INC
          INC       OUTPREFD/INC
          INC       BOKRC1FD/INC
          INC       PMSHCPFD/INC
.
          INC       PRIPRAFD/INC
          INC       PRICONFD/INC
...          INC       PRIDBTFD/INC
          INC       PRIHDBFD/INC
          INC       PRIHREFD/INC
          INC       PRIHTRFD/INC
          INC       PRIDTRFD/INC
          INC       PRIINVFD/INC
          INC       PRISTAFD/INC
          INC       PRIFINFD/INC
          INC       PRIFIGFD/INC
          INC       PRIITMFD/INC
          INC       PRIDOCFD/INC
.
          INC       PRIVRDEB/INC
.
.
          INC       PATCOMM/INC                  * common file
          INC       NZHISIFD/INC                 * NZHIS Variables
          INC       PATALRFD/INC                 * Alerts & Medical Warnings
          INC       NHIMASFD/INC                 * NZHIS Variables
          INC       PATDHEAD/INC                 * PMI Header Details
          INC       PATCALAG/INC                 * PMI Age Calc
          INC       PMIVARS/INC                  * PMI Variables
          INC       SCRPSTFD/INC
.
COUNT     FORM      3
FORM3     FORM      3
.
.         PROGRAM CONSTANTS
.         -----------------
.
CODECL    INIT      "CL"
CODEGI    INIT      "GI"
ERASE     INIT      "iserase "
ISBUILD   INIT      "isbuild "
NINE8     FORM      "99999999"                   * for PRIITMDS
PIPE      INIT      "|"
UKEY      INIT      " 55 U1-6,7-16,17-24,25-26,27-34"
.
.
.         LOCAL VARIABLE DEFINITION
.         -------------------------
.
CLAIM     DIM       3                            * claim code
CLAIMIND  DIM       1                            * claim code indicator 1
CMDLIN1   DIM       47
CMDLIN2   DIM       16
CODE      DIM       2                            * category
COUNTR    FORM      2                            * counter
CURRDAT   DIM       8                            * current date
.
DCODE     DIM       10
FGSTFLAG  FORM      1
FORM8     FORM      8                            * invoice #
FSTAMNT   FORM      12.2
FSTDATE   DIM       8
FSTWORK   FORM      12.2
.
IFLAG     FORM      2                            * for KYPRIITM/PRIITMDS
INDIC     FORM      1                            * claim code indicator
INVDATE   DIM       8                            * invoice date
INVOICE   DIM       8                            * invoice #
ITEMNUMB  DIM       9                            * for KYPRIITM
ITMDESC   DIM       30                           * for PRIITMDS
ITMFLAG   FORM      1                            * for PRIITMDS
.
MPDESC    DIM       30                           * for PRIMPDDS
MPRAC     DIM       6                            * medical prac. code
.
NXTRAN    FORM      6                            * next DTR transaction #
.
OUTAMT    FORM      12.2                         * outstanding invoice amount
.
PATHFLAG  FORM      1                            * for PRIITMDS
PDOCNAM   DIM       35                           * for PRIMPDDS
PINDIC    DIM       3                            * patient indicator code
.
SAVAMT    FORM      12.2                         * invoice amount save variable
SDOCT     DIM       10                           * service doctor code
SERDATE   DIM       8                            * for PRIITMDS
SHTDESC   DIM       23                           * for PRIITMDS
SUBITEM   DIM       9                            * for KYPRIITM
.
TEMPFILE  DIM       8
.
.
BJDAY     FORM      3
CJDAY     FORM      3
URDIM8    DIM       8
USERID    DIM       10
.
PRGNAM    INIT      "Take Up Outstanding Debts"
PRGID     INIT      "IBAPRI90"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              MAINLINE                                  *
.*                            Controlling Logic                           *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
.
ML1000    CALL      CREA0000               * creat temp file
          CALL      PROC0000               * process the debts
          CALL      PRIN0000               * print report
          CALL      KILL0000               * erase temp file
          GOTO      ML0100                 * get next option
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000           Called by: ML0000      *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD 
. 
          DISPLAY   *P56:24,*EL,"Opening "
...                    *P64:24,"pridebtf";
...          OPEN      PRIDEBT1,"pridebtf"
...          OPEN      PRIDEBT2,"pridebtf"
.
          DISPLAY   *P64:24,"prihdbtf";
          OPEN      PRIHDBT1,"prihdbtf"
          OPEN      PRIHDBT2,"prihdbtf"
.
          DISPLAY   *P64:24,"prihreff";
          OPEN      PRIHREF1,"prihreff"
.
          DISPLAY   *P64:24,"prihtraf";
          OPEN      PRIHTRA1,"prihtraf"
.
          DISPLAY   *P64:24,"pridtraf";
          OPEN      PRIDTRA1,"pridtraf"
.
          DISPLAY   *P64:24,"priinvof";
          OPEN      PRIINVO1,"priinvof"
.
          DISPLAY   *P64:24,"pristatf";
          OPEN      PRISTAT1,"pristatf"
.
          DISPLAY   *P64:24,"prifinsf";
          OPEN      PRIFINS1,"prifinsf"
          OPEN      PRIFIGA1,"prifigaf"
.
          DISPLAY   *P64:24,"priitemf";
          OPEN      PRIITEM1,"priitemf"
          OPEN      PRIITEM2,"priitemf"
.
          DISPLAY   *P64:24,"pripracf";
          OPEN      PRIPRAC1,"pripracf"
.
          DISPLAY   *P64:24,"pridoctf";
          OPEN      PRIDOCT1,"pridoctf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          OPEN      CONTROLF,"controlf"
          OPEN      PATGSRN2,"patgsrnf"          * open Patient Surname file
.
          DISPLAY   *P64:24,"patpramf";
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patdrgaf";
          OPEN      PATDRGA1,"patdrgaf"
          OPEN      PATDRGA2,"patdrgaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,THIRTY3;*43,PRCNINVN * get next invoice number
          READ      CONTROLF,THIRTY4;*199,PRCNAFEE
.
          MOVE      ONE,CNEWDS
          MOVE      TWO,PACFRMT
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000           Called by: ML0000      *
.*                        get user options or exit                          *
.* Returns:     EXIT   0 = Exit                                             *
.*                     1 = Valid option                                     *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:4,*EF,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Add debts"
.
OPTN1000  KEYIN     *P1:7,*EL,"Select option : ",*DV,UNDLN1:
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN1000 IF LESS
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    COPTION,OPTN9000
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.****************************************************************************
.*                                PROC0000           Called by: ML0000      *
.*        process the outstanding debts for the system                      *
.****************************************************************************
.
PROC0000  CALL      GETT0000                     * get item type
          BRANCH    EXIT,PROC9999                * nothing input - finish
.
          CALL      GETI0000                     * get item code
          BRANCH    EXIT,PROC0000                * nothing input
.
          CALL      SCR0000                      * display screen fields
.
PROC1000  CALL      PRAC0000                     * get medical practice
          BRANCH    EXIT,PROC9999                * nothing input - finish
.
PROC2000  CALL      SDOC0000                     * get service doctor
          BRANCH    EXIT,PROC1000                * nothing input - get next prac
.
PROC3000  CALL      DEBT0000                     * get debtor number
          BRANCH    EXIT,PROC2000                * nothing input - get next doc.
.
          CALL      ACPT0000                     * get invoice details
          BRANCH    EXIT,PROC3000                * get next debtor
.
          CALL      SEL0000                      * post,cancel,change ?
          BRANCH    EXIT,PROC3000                * cancel
.
          CALL      WRT0000                      * write details to file
          GOTO      PROC3000                     * get next debtor
.
PROC9999  RETURN
+
.****************************************************************************
.*                                GETT0000           Called by: PROC0000    *
.*                      get the item type (MBS or AMA)                      *
.* Returns:       IFLAG    0 = MBS                                          *
.*                         1 = AMA                                          *
.*                EXIT     0 = valid input                                  *
.*                         1 = nothing input                                *
.****************************************************************************
.
GETT0000  KEYIN     *P1:4,*EF,*P8:4,*EF,"(",*V2LON,*DV,ANSM,*HOFF,")BS or (":
                    *V2LON,*DV,ANSA,*HOFF,")MA : ",*DV,UNDLN1:
                    *P25:4,*V2LON,ANS;
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     SP3,ANS                      * anything input ?
          GOTO      GETT9500 IF EQUAL            * no
.
          MATCH     ANSM,ANS                     * ? MBS
          IF        @EQUAL
             DISPLAY   *P25:4,*EL,*V2LON,"MBS"
             MOVE      ZERO,IFLAG
          ELSE
             MATCH     ANSA,ANS                  * ? AMA
             IF        @EQUAL
                DISPLAY   *P25:4,*EL,*V2LON,"AMA"
                MOVE      ONE,IFLAG
             ELSE
                GOTO      GETT0000               * invalid
             ENDIF
          ENDIF
.
GETT9000  MOVE      ZERO,EXIT
          GOTO      GETT9999
.
GETT9500  MOVE      ONE,EXIT
.
GETT9999  RETURN
+
.****************************************************************************
.*                                GETI0000           Called by: PROC0000    *
.*                      get the item code for outstanding debts             *
.* Returns:     EXIT   0 = valid item                                       *
.*                     1 = nothing or spaces                                *
.****************************************************************************
.
GETI0000  DISPLAY   *P8:5,"Item Number    :"
          MOVE      TWENTY5,CCOL                 * set screen position
          MOVE      FIVE,CVERT 
          CALL      KYPRIITM                     * get an item #
          BRANCH    EXIT,GETI9000:               * exitchar entered
                         GETI4000:               * ? entered
                         GETI9000                * nothing entered
.
          CALL      CHKI0000                     * item on file ?
          BRANCH    EXIT,GETI0000                * no
          GOTO      GETI8000                     * yes
.
GETI4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
GETI4200  MOVE      ONE,ITMFLAG
          MOVE      ONE,PATHFLAG
          CALL      PRIITMDS                     * list codes on file
.
GETI4500  DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      TEN4,CCOL
          MOVE      TWENTY4,CVERT
          CALL      KYPRIITM                     * get item number
          BRANCH    EXIT,GETI9000:               * exitchar entered
                         GETI4200:               * ? entered
                         GETI5000                * nothing entered
.
          CALL      CHKI0000                     * item on file ?
          BRANCH    EXIT,GETI4500                * no
          GOTO      GETI7900                     * yes
.
GETI5000  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:5,*EL
          GOTO      GETI9000
.
GETI7900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:5,*V2LON,ITEMNUMB
.
          MATCH     SP3,SUBITEM                  * subitem number ?
          GOTO      GETI8000 IF EQUAL            * no
.
          DISPLAY   *P34:5,"(",*V2LON,SUBITEM,*HOFF,")"
GETI8000  MOVE      ZERO,EXIT
          DISPLAY   *P40:5,PRITDESC
          GOTO      GETI9999
.
GETI9000  MOVE      ONE,EXIT
.
GETI9999  RETURN
+
.***************************************************************************
.*                             CHKI0000               Called by: GETI0000  *
.*                    check if item on file                                *
.***************************************************************************
.
CHKI0000  PACK      KEY22,IFLAG,ITEMNUMB,SUBITEM,SP8
          CALL      RSPRIT1                      * position in file
          CALL      RKPRIT1                      * read next record
          BRANCH    OVRCD,CHKI5000               * end of file
.
          COMPARE   PRITFLAG,IFLAG               * same item type ?
          GOTO      CHKI5000 IF NOT EQUAL        * no
.
          MATCH     ITEMNUMB,PRITITMN            * same item number ?
          GOTO      CHKI5000 IF NOT EQUAL        * no
.
          MATCH     SUBITEM,PRITSUBN             * same subitem number ?
          GOTO      CHKI5000 IF NOT EQUAL        * no
.
          GOTO      CHKI9000                     * item number on file
.
CHKI5000  DISPLAY   *P1:24,*EL,*B,"Item not on file.  ";
          CALL      HITENTER
          GOTO      CHKI9500
.
CHKI9000  MOVE      ZERO,EXIT
          GOTO      CHKI9999
.
CHKI9500  MOVE      ONE,EXIT
.
CHKI9999  RETURN
+
.****************************************************************************
.*                                  PRAC0000           Called by: ML0000    *
.*                     get medical practice code                            *
.*         Returns: EXIT  0 = OK                                            *
.*                        1 = nothing or exitchar entered                   *
.****************************************************************************
.
PRAC0000  MOVE      SP6,MPRAC
          KEYIN     *P25:8,*EL,*P25:7,*EL,*DV,UNDLN6:  * get code
                    *P25:7,*V2LON,MPRAC:
                    *P25:7,*DV,MPRAC
.
          CALL      CHK0000                 * see what was entered
          BRANCH    EXIT,PRAC1000:          * ? entered
                         PRAC7500:          * valid code
                         PRAC9000:          * nothing entered
                         PRAC9000           * exitchar
.
          GOTO      PRAC0000                * invalid code
.
PRAC1000  MOVE      ZERO,HLEF
          CALL      GETSCR00
PRAC1200  CALL      PRIPRADS                * display codes on file
.
PRAC1500  KEYIN     *P1:24,*EL,"Medical Practice: ",*DV,UNDLN6:
                    *P19:24,*V2LON,MPRAC:
                    *P19:24,*DV,MPRAC
.
          CALL      CHK0000                 * see what was entered
          BRANCH    EXIT,PRAC1200:          * ? entered
                         PRAC7000:          * valid code
                         PRAC8000:          * nothing entered
                         PRAC8000           * exitchar
.
          GOTO      PRAC1500
.
PRAC7000  CALL      PUTSCR00                * restore screen
          DISPLAY   *P25:7,*V2LON,MPRAC
PRAC7500  MOVE      PRPRDESC,MPDESC
          DISPLAY   *P40:7,MPDESC
          MOVE      ZERO,EXIT
          GOTO      PRAC9999
.
PRAC8000  CALL      FRESCR00
PRAC9000  MOVE      ONE,EXIT
.
PRAC9999  RETURN
+
.***************************************************************************
.*                                  CHK0000            Called by: PRAC0000 *
.*                      See what was input                                 *
.*      Returns: EXIT  0 = invalid                                         *
.*                     1 = "?"                                             *
.*                     2 = valid                                           *
.*                     3 = nothing                                         *
.*                     4 = exitchar                                        * 
.***************************************************************************
.
CHK0000   ENDSET    MPRAC                        * pad with blanks
          APPEND    SP6,MPRAC
          RESET     MPRAC
.
          MATCH     SP6,MPRAC                    * anything entered ?
          GOTO      CHK9000 IF EQUAL             * no
.
          MATCH     EXITCHAR,MPRAC               * exitchar entered ?
          GOTO      CHK7000 IF EQUAL             * yes
.
          MATCH     QUEST,MPRAC                  * ? entered ?
          GOTO      CHK8000 IF EQUAL             * yes
.
.         Code entered
.
          PACK      KEY6,MPRAC
          CALL      RDPRPR1                      * code on file ?
          BRANCH    OVRCD,CHK6000                * no
.
          COMPARE   PRPRSTAT,ZERO                * practice active ?
          GOTO      CHK5000 IF EQUAL             * yes
.
          DISPLAY   *P1:24,*EL,*B,"Medical practice not active. ";
          GOTO      CHK6500
.
CHK5000   MOVE      TWO,EXIT                     * code entered
          GOTO      CHK9999
.
CHK6000   DISPLAY   *P1:24,*EL,*B,"Medical Practice not on file. ";
CHK6500   CALL      HITENTER
          MOVE      ZERO,EXIT
          GOTO      CHK9999
.
CHK7000   MOVE      FOUR,EXIT
          GOTO      CHK9999
.
CHK8000   MOVE      ONE,EXIT
          GOTO      CHK9999
.
CHK9000   MOVE      THREE,EXIT
.
CHK9999   RETURN
+
.****************************************************************************
.*                                  SDOC0000           Called by: ML0000    *
.*                            get service doctor                            *
.*         Returns: EXIT  0 = OK                                            *
.*                        1 = nothing entered                               *
.*                        2 = exitchar entered                              *
.****************************************************************************
SDOC0000  MOVE      "25",ECOL
          MOVE      "8",EVERT
          MOVE      SP6,CKYIDEF6
          MOVE      ZERO,CKYIMAND
          MOVE      ONE,CKYINACT
          CALL      PRIMPDKY                * Keyin the medical practice doctor
          BRANCH    EXIT,SDOC9100,SDOC9200
.
          MOVE      DCODE,SDOCT
          MOVE      PMHCTITL,PACTITLE
          MOVE      PMHCSNAM,PACSNAME
          MOVE      PMHCGNAM,PACGNAME
          CALL      PACNAME                 * Format the doctors name
          MOVE      PACFNAME,PDOCNAM
          DISPLAY   *P25:8,*V2LON,SDOCT,*P40:8,*HOFF,PDOCNAM;
.
SDOC9000  MOVE      ZERO,EXIT
          GOTO      SDOC9999
.
SDOC9100  MOVE      ONE,EXIT
          GOTO      SDOC9999
.
SDOC9200  MOVE      TWO,EXIT
SDOC9999  RETURN
+
.****************************************************************************
.*                                DEBT0000           Called by: PROC0000    *
.*                        get debtor - U/R number                           *
.* Returns:      EXIT    0 = valid debtor number                            *
.*                       1 = invalid debtor/nothing entered                 *
.****************************************************************************
.
DEBT0000  CALL      CLRV0000                     * clear variables
          MOVE      TWENTY5,CCOL
          MOVE      NINE,CVERT
          MOVE      ZERO,SSCREEN                 * init. screen restore flag
          MOVE      ZERO,HLEF
          CALL      GETSCR00
.
          CALL      PRIKYDEB                     * get debtor
          BRANCH    OVRCD,DEBT9000
.
          COMPARE   ZERO,SSCREEN                 * restore screen after "?"
          GOTO      DEBT5000 IF NOT EQUAL        * yes
.
          CALL      FRESCR00                     * free screen
          GOTO      DEBT5500
.
DEBT5000  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:9,*V2LON,VDEBTOR
DEBT5500  DISPLAY   *P40:9,VDEBNAME
          GOTO      DEBT9800
.
DEBT9000  COMPARE   ZERO,SSCREEN                 * restore screen after "?"
          GOTO      DEBT9200 IF NOT EQUAL        * yes
.
          CALL      FRESCR00                     * free screen
          GOTO      DEBT9500
.
DEBT9200  CALL      PUTSCR00                     * restore screen
DEBT9500  MOVE      ONE,EXIT
          GOTO      DEBT9999
.
DEBT9800  MOVE      ZERO,EXIT
.
DEBT9999  DISPLAY   *P1:24,*EL
          RETURN
+
.*************************************************************************
.*                                  ACPT0000         Called by: PROC0000 *
.*   INPUT mode only :      accept initial values                        *
.*************************************************************************
.
ACPT0000  CALL      GINV0000                     * get invoice #
          BRANCH    EXIT,ACPT9500                * nothing input
.
          CALL      IDAT0000                     * get invoice date
          BRANCH    EXIT,ACPT9500
.
          CALL      OAMT0000                     * get outstanding amount
.
          CALL      CLAM0000                     * get claim code
.
          CALL      PIND0000                     * get patient indicator
          GOTO      ACPT9000
.
ACPT9000  MOVE      ZERO,EXIT
          GOTO      ACPT9999
.
ACPT9500  MOVE      ONE,EXIT
.
ACPT9999  RETURN
+
.****************************************************************************
.*                             GINV0000              Called by: ACPT0000    *
.*                      get the invoice number                              *
.* Returns:      EXIT   0 = number input                                    *
.*                      1 = nothing input                                   *
.****************************************************************************
.
GINV0000  KEYIN     *P25:11,*EL,*DV,UNDLN8:
                    *P25:11,*JR,*V2LON,INVOICE:
                    *P25:11,*DV,INVOICE
.
          PACK      INVOICE,INVOICE,SP8
.
          MATCH     SP8,INVOICE                  * anything input ?
          GOTO      GINV9500 IF EQUAL            * no
.
.         Check that invoice # input is less than the next invoice number in the
.         control file and is > zero
.
          MOVE      INVOICE,FORM8
.
          COMPARE   FORM8,ZERO
          GOTO      GINV7000 IF NOT LESS
.
          COMPARE   PRCNINVN,FORM8
          GOTO      GINV8000 IF LESS
.
          DISPLAY   *P1:24,*EL,*B,"Invoice number must be less than next ":
                    "invoice number.  ";
          CALL      HITENTER
          GOTO      GINV0000
.
GINV7000  DISPLAY   *P1:24,*EL,*B,"Invoice number must be greater than ":
                    "zero.  ";
          CALL      HITENTER
          GOTO      GINV0000
.
.         Check that the invoice number is not already on file
.
GINV8000  PACK      KEY8,INVOICE,SP10
          CALL      RDPRIN1                      * on file
          BRANCH    OVRCD,GINV9000               * no - OK
.
          DISPLAY   *P1:24,*EL,*B,"Invoice already on file.  ";
          CALL      HITENTER
          GOTO      GINV0000
.
GINV9000  MOVE      ZERO,EXIT
          GOTO      GINV9999
.
GINV9500  MOVE      ONE,EXIT
.
GINV9999  RETURN
+
.****************************************************************************
.*                             IDAT0000              Called by: ACPT0000    *
.*                        get the invoice date                              *
.*   Returns:       EXIT    0 = nothing input                               *
.*                          1 = valid date input                            *
.****************************************************************************
.
IDAT0000  CALL      IBACLOCK
          PACK      CURRDAT,CCC,CYY,CMM,CDD
          REP       " 0",CURRDAT
.
          MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      CCC,CCENT
          MOVE      TEN2,CVERT
          MOVE      TWENTY5,CCOL
          CALL      KEYDATE
          BRANCH    OVRCD,IDAT9500
.
          PACK      INVDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CURRDAT
.
          MATCH     INVDATE,CURRDAT
          GOTO      IDAT9000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Date greater than current date.  ";
          CALL      HITENTER
          GOTO      IDAT0000
.
IDAT9000  MOVE      ZERO,EXIT
          GOTO      IDAT9999
.
IDAT9500  MOVE      ONE,EXIT
.
IDAT9999  RETURN
+
.****************************************************************************
.*                             OAMT0000              Called by: ACPT0000    *
.*                   get invoice outstanding amount                         *
.****************************************************************************
.
OAMT0000  KEYIN     *P25:13,*EL,*V2LON,OUTAMT:
                    *P25:13,*DV,OUTAMT
.
          COMPARE   OUTAMT,ZERO                  * amount > zero ?
          GOTO      OAMT9999 IF LESS             * yes
.
          DISPLAY   *P1:24,*EL,*B,"Amount must be greater than zero,  ";
          CALL      HITENTER
          GOTO      OAMT0000
.
OAMT9999  RETURN
+
.****************************************************************************
.*                               CLAM0000            Called by: ACPT0000    *
.*                        get claim code                                    *
.*           Returns: INDIC 0 = non-compensable code                       *
.*                          1 = workers comp.                              *
.*                          2 = transport accident commission              *
.*                          3 = veterans affairs                           *
.*                    EXIT  0 = valid code                                 *
.*                          1 = nothing entered                            *
.*                          2 = exitchar entered                           *
.***************************************************************************
.
CLAM0000  MOVE      SP1,CLAIMIND
.
          MOVE      SP3,CKYIDEF3
          MOVE      ONE,CKYIMAND
          MOVE      TWENTY5,ECOL
          MOVE      TEN4,EVERT
          MOVE      CODECL,CODE
          DISPLAY   *P25:14,*EL
          CALL      PATCODKY                     * get code
          BRANCH    EXIT,CLAM8000:               * nothing entered
                         CLAM0000                * exitchar entered
.
          MOVE      ACODE,CLAIM                  * save code
          DISPLAY   *P25:EVERT,*V2LON,ACODE,*HOFF,*P40:EVERT,TDESC
.
.         Set the flag for a compensable claim
.
          MATCH     ANSW,TCINDC1            * workers comp ?
          GOTO      CLAM7600 IF NOT EQUAL   * no
.
          MOVE      ONE,INDIC               * yes
          MOVE      ANSW,CLAIMIND
          GOTO      CLAM7900
.
CLAM7600  MATCH     ANSM,TCINDC1            * T.A.C. ?
          GOTO      CLAM7700 IF NOT EQUAL   * no
.
          MOVE      TWO,INDIC               * yes
          MOVE      ANSM,CLAIMIND
          GOTO      CLAM7900
.
CLAM7700  MATCH     ANSV,TCINDC1            * veterans affairs ?
          GOTO      CLAM7800 IF NOT EQUAL   * no
.
          MOVE      THREE,INDIC             * yes
          MOVE      ANSV,CLAIMIND
          GOTO      CLAM7900
.
CLAM7800  MOVE      ZERO,INDIC              * not a compensable claim
.
CLAM7900  MOVE      ZERO,EXIT
          GOTO      CLAM9999
.
CLAM8000  MOVE      ONE,EXIT
.
CLAM9999  RETURN
+
.****************************************************************************
.*                               PIND0000            Called by: ACPT0000    *
.*                          get patient indicator                           *
.* Returns:         EXIT    0 = valid code entered                         *
.*                          1 = nothing entered                            *
.*                          2 = exitchar entered                           *
.***************************************************************************
.
PIND0000  MOVE      SP3,CKYIDEF3
          MOVE      ONE,CKYIMAND
          MOVE      TWENTY5,ECOL
          MOVE      TEN5,EVERT
          MOVE      CODEGI,CODE
          DISPLAY   *P25:15,*EL
          CALL      PATCODKY                     * get code
.
          COMPARE   TWO,EXIT                     * exitchar entered ?
          GOTO      PIND0000 IF EQUAL            * yes
.
          MOVE      ACODE,PINDIC
          DISPLAY   *P25:EVERT,*V2LON,ACODE,*HOFF,*P40:EVERT,TDESC
.
          GOTO      PIND9999
.
PIND9999  RETURN
+
.****************************************************************************
.*                              CLRV0000             Called by: DEBT0000    *
.*                           clear variables                                *
.****************************************************************************
.
CLRV0000  DISPLAY   *P25:9,*EL:
                    *P25:11,*EL:
                    *P25:12,*EL:
                    *P25:13,*EL:
                    *P25:14,*EL:
                    *P25:15,*EL
.
          MOVE      SP8,INVOICE
          MOVE      SP8,INVDATE
          MOVE      ZERO,OUTAMT
          MOVE      SP3,CLAIM
          MOVE      SP3,PINDIC
.
CLRV9999  RETURN
+
.****************************************************************************
.*                                   SEL0000           Called by: PROC0000  *
.*                         select field to modify or post                   *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SEL0000   CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SEL8000 IF EQUAL         * Post was selected
          GOTO      SEL9000 IF LESS          * Cancel was selected
.
          BRANCH    CCITEM,SEL1000:
                           SEL2000:
                           SEL3000:
                           SEL4000:
                           SEL5000
.
          BEEP
          GOTO      SEL0000                      * invalid
.
SEL1000   CALL      GINV0000
          GOTO      SEL0000
.
SEL2000   CALL      IDAT0000
          GOTO      SEL0000
.
SEL3000   CALL      OAMT0000
          GOTO      SEL0000
.
SEL4000   CALL      CLAM0000
          GOTO      SEL0000
.
SEL5000   CALL      PIND0000
          GOTO      SEL0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SEL8000   MOVE      ZERO,EXIT                * Post was selected
          GOTO      SEL9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SEL9000   MOVE      ONE,EXIT                * Cancel was selected
.
SEL9999   RETURN
+
.****************************************************************************
.*                                SCR0000            Called by: GETD0000    *
.*                   display the input screen                               *
.****************************************************************************
.
SCR0000   DISPLAY   *P4:7,"Medical Practice",*P23:7,COLON:
                    *P4:8,"Service Doctor",*P23:8,COLON:
                    *P4:9,"Debtor Number",*P23:9,COLON:
                    *P1:11,*V2LON,ONE,*HOFF,". Invoice Number",*P23:11,COLON:
                    *P1:12,*V2LON,TWO,*HOFF,". Invoice Date",*P23:12,COLON:
                    *P1:13,*V2LON,THREE,*HOFF,". Outstanding Amount":
                              *P23:13,COLON:
                    *P1:14,*V2LON,FOUR,*HOFF,". Claim Code",*P23:14,COLON:
                    *P1:15,*V2LON,FIVE,*HOFF,". Patient Indicator",*P23:15,COLON
.
SCR9999   RETURN
+
.**************************************************************************
.*                              WRT0000                Called by: PROC0000*
.*                   write the apprpriate records                         *
.**************************************************************************
.
.         Check if there is a header record, and if not write one
.
WRT0000   DISPLAY   *P1:24,*V2LON,*EL,"Record inserted";
          PACK      KEY27,VDEBTOR,VSCANPMI,CLAIM,SP8,PFUNDH
          CALL      RDPRHD1
          COMPARE   ZERO,OVRCD                   * on file ?
          GOTO      WRT3000 IF EQUAL             * yes
.
.         No record on file so get the next unique identifier and write a
.         new record
.
          READ      CONTROLF,THIRTY3;*172,PRCNUNIQ
.
WRT1000   MOVE      PRCNUNIQ,KEY8                * check number not on file
          CALL      RDPRHD2
          BRANCH    OVRCD,WRT2000
          ADD       ONE,PRCNUNIQ
          GOTO      WRT1000
.
WRT2000   MOVE      PRCNUNIQ,PRHDUNIQ
          ADD       ONE,PRCNUNIQ                 * update counter (control file)
          WRITAB    CONTROLF,THIRTY3;*172,PRCNUNIQ                     
          MOVE      SP30,PRHDSPAR
.
          MOVE      VDEBTOR,PRHDDEBT
          MOVE      VSCANPMI,PRHDSCAN
          MOVE      CLAIM,PRHDCLAM
          MOVE      PFUNDH,PRHDHFND
          CALL      WRPRHD1                      * write header record
.
.         ************************************************************
.         See if a referral record exists on file and if not write one
.         ************************************************************
.
WRT3000   PACK      KEY27,PRHDUNIQ,MPRAC,SDOCT,PINDIC
          CALL      RDPRHR1
          COMPARE   ZERO,OVRCD                   * on file ?
          GOTO      WRT4000 IF EQUAL             * yes
.
.         No referral record so write one
.
          CALL      CLPRIHRE
.
          PACK      KEY27,PRHDUNIQ,MPRAC,SDOCT,PINDIC
          CALL      WRPRHR1
.
.         **************************
.         Write a new invoice record
.         **************************
.
WRT4000   PACK      KEY8,INVOICE,SP10
          MOVE      INVDATE,PRINDATE
          MOVE      VDEBNAME,PRINNAME
          MOVE      VDEBTOR,PRINDEBT
          MOVE      VSCANPMI,PRINSCAN
          MOVE      PRHDUNIQ,PRINUNIQ
          MOVE      MPRAC,PRINPRAC
          MOVE      SDOCT,PRINDOCT
          MOVE      CLAIM,PRINCLAM
          MOVE      OUTAMT,PRINITOT
          MOVE      ZERO,PRINPAMT
          MOVE      ZERO,PRINHAMT
          MOVE      ZERO,PRINIAMT
          MOVE      ZERO,PRINMAMT
          MOVE      ZERO,PRINVAMT
          MOVE      ZERO,PRINOTHA
          MOVE      ZERO,PRINJAMT
          MOVE      ZERO,PRINGSTA
          MOVE      ZERO,PRINGSTJ
          MOVE      OUTAMT,PRINPEND
          MOVE      ONE,PRINTRAN
.
          PACK      PRINNAMR,SP20,SP30
          MOVE      SP70,PRINPRA1
          MOVE      SP70,PRINPRA2
          MOVE      SP70,PRINPRA3
          MOVE      SP70,PRINPRA4
          MOVE      SP8,PRINPOST
          MOVE      SP20,PRINTELP
          MOVE      SP20,PRINTELB
          MOVE      SP20,PRINMPHN
          MOVE      SP10,PRINRELP
.
          MOVE      SP1,PRINCNST
          MOVE      "0",PRINCNTT
          MOVE      ZERO,PRINCNUM
          MOVE      SP8,PRINADTE
          MOVE      SP10,PRINSPAR
.
          UNPACK    SP70,PRINUDAT,PRINUTIM,PRINUUID
          PACK      PRINCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PRINCDAT             * date updated
          CLOCK     TIME,PRINCTIM             * time updated
          MOVE      PASSCODE,PRINCUID           * user id
.
          CALL      WRPRIN1
.                                                                     *I-210835
          IF        PRINSCAN = 1
            PROC      FLAGDEBP                * Flag PMI Outstanding Debt
          ENDIF
.
.         ********************************
.         Write the appropriate DTR record
.         ********************************
.
          CALL      CLPRIDTR
.
          MOVE      VDEBTOR,PRDTDEBT
          MOVE      VSCANPMI,PRDTSCAN
          MOVE      PRINDATE,PRDTSDAT
          MOVE      PRITDESC,PRDTDESC
          MOVE      OUTAMT,PRDTAMNT
          MOVE      MPRAC,PRDTPRAC
          MOVE      SDOCT,PRDTDOCT
          MOVE      ONE,PRDTSERV
          PACK      PRDTREFT,SP30,SP20
          MOVE      CLAIM,PRDTCLAM
          MOVE      PINDIC,PRDTCODE
.
          MOVE      ONE,PRDTRTYP
          MOVE      IFLAG,PRDTIFLG
          MOVE      ITEMNUMB,PRDTITMN
          MOVE      SUBITEM,PRDTSUBN
          MOVE      PRITSETC,PRDTSETC
          MOVE      "DB",PRDTTTYP
          MOVE      ONE,PRDTINVP
          MOVE      ONE,PRDTAPAY
.
          MOVE      OUTAMT,PRDTIAMT
          MOVE      INVDATE,PRDTEFFD
.
.         Get next DTR transaction number
.
WRT5000   MOVE      INVOICE,KEY8
          CALL      RDPRIN1                      * get invoice file
          COMPARE   ONE,OVRCD
          IF        @EQUAL
             DISPLAY   *P1:24,*EL,*B,"No invoice record ",INVOICE,".  ";
             CALL      HITENTER
             GOTO      WRT9999
          ENDIF
.
          MOVE      PRINTRAN,NXTRAN              * get DTRAN number
          ADD       ONE,PRINTRAN                 * increment DTRAN number
.
          PACK      PRINUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PRINUDAT                * date updated
          CLOCK     TIME,PRINUTIM                * time updated
          MOVE      PASSCODE,PRINUUID            * user id
          CALL      UPPRIN1                      * update invoice record
.                                                                     *I-210835
          IF        PRINSCAN = 1
            PROC      FLAGDEBP                * Flag PMI Outstanding Debt
          ENDIF
.
.         Make sure transaction not already on file
.
          PACK      KEY22,PRHDUNIQ,INVOICE,NXTRAN
          CALL      RAPRDT1
          COMPARE   ZERO,OVRCD                   * transaction # on file ?
          GOTO      WRT5000 IF EQUAL             * yes - get next trans. #
.
          PACK      KEY22,PRHDUNIQ,INVOICE,NXTRAN
          CALL      WRPRDT1                      * write DTR record
.
.         ********************************
.         Update financial statistics file
.         ********************************
.
          PACK      KEY14,INVDATE,SP6
          CALL      RDSDRGA2                * position on the date range file
          CALL      RDKDRGA2
          BRANCH    OVRCD,WRT9000 
.
          MATCH     DRGFDTE,INVDATE         * see if the invoice date is in a
          GOTO      WRT9000 IF LESS           date range
.
          MOVE      DRGYR,PRSTYEAR
          MOVE      DRGNUM,FORM2
          MOVE      MPRAC,PRSTPRAC
          MOVE      SDOCT,PRSTDOCT
.
          PACK      KEY20,PRSTYEAR,PRSTPRAC,PRSTDOCT
          CALL      RDPRST1                 * read the private practice 
          BRANCH    OVRCD,WRT6000             financial statistics file
.
          LOAD      SAVAMT,FORM2,PRSTIP01,PRSTIP02,PRSTIP03,PRSTIP04:
                                 PRSTIP05,PRSTIP06,PRSTIP07,PRSTIP08:
                                 PRSTIP09,PRSTIP10,PRSTIP11,PRSTIP12:
                                 PRSTIP13
.
          ADD       OUTAMT,SAVAMT
.
          STORE     SAVAMT,FORM2,PRSTIP01,PRSTIP02,PRSTIP03,PRSTIP04:
                                 PRSTIP05,PRSTIP06,PRSTIP07,PRSTIP08:
                                 PRSTIP09,PRSTIP10,PRSTIP11,PRSTIP12:
                                 PRSTIP13
.
          CALL      UPPRST1                 * update the private practice
.                                             financial statistics file
          GOTO      WRT9000 
.
.------ Record doesn't exist - create new record with zero opening balance ----
.
WRT6000   MOVE      ZERO,COUNTR
.
.------ get next field to process ------
.
WRT7000   ADD       ONE,COUNTR
.
          COMPARE   COUNTR,FORTY             * see if all fields have been 
          GOTO      WRT8000 IF LESS          processed
.
          STORE     ZERO,COUNTR,PRSTOBAL,PRSTIP01,PRSTIP02,PRSTIP03,PRSTIP04:
                                PRSTIP05,PRSTIP06,PRSTIP07,PRSTIP08,PRSTIP09:
                                PRSTIP10,PRSTIP11,PRSTIP12,PRSTIP13,PRSTCP01:
                                PRSTCP02,PRSTCP03,PRSTCP04,PRSTCP05,PRSTCP06:
                                PRSTCP07,PRSTCP08,PRSTCP09,PRSTCP10,PRSTCP11:
                                PRSTCP12,PRSTCP13,PRSTJP01,PRSTJP02,PRSTJP03:
                                PRSTJP04,PRSTJP05,PRSTJP06,PRSTJP07,PRSTJP08:
                                PRSTJP09,PRSTJP10,PRSTJP11,PRSTJP12,PRSTJP13
          GOTO      WRT7000 
.
.------ Add amount to appropriate field ------
.
WRT8000   LOAD      SAVAMT,FORM2,PRSTIP01,PRSTIP02,PRSTIP03,PRSTIP04:
                                 PRSTIP05,PRSTIP06,PRSTIP07,PRSTIP08:
                                 PRSTIP09,PRSTIP10,PRSTIP11,PRSTIP12:
                                 PRSTIP13
.
          ADD       OUTAMT,SAVAMT
.
          STORE     SAVAMT,FORM2,PRSTIP01,PRSTIP02,PRSTIP03,PRSTIP04:
                                 PRSTIP05,PRSTIP06,PRSTIP07,PRSTIP08:
                                 PRSTIP09,PRSTIP10,PRSTIP11,PRSTIP12:
                                 PRSTIP13
          CALL      WRPRST1                 * write to the private practice
.                                             financial statistics file
.
.         *****************************
.         Update Financial Summary File
.         *****************************
.
WRT9000   MOVE      ANSA,PRFNTYPE
          IF        PRCNAFEE=1
            PACK      PRFNCODE,ANSM,PRDTDOCT,PRDTSETC,IFLAG,ITEMNUMB,SUBITEM
          ELSE
            PACK      PRFNCODE,ANSM,PRDTSETC,IFLAG,ITEMNUMB,SUBITEM
          ENDIF
          MOVE      PRDTPRAC,PRFNMPRA
          MOVE      INVDATE,FSTDATE
          MOVE      OUTAMT,FSTAMNT
.
          MOVE      ZERO,FGSTFLAG
          CALL      PRICALFS                * calculate and write to the 
.                                             financial summary file
.
WRT9500   MOVE      INVDATE,XINVDATE
          MOVE      OUTAMT,XOUTAMT
          MOVE      CLAIM,XCLAIM
          MOVE      PINDIC,XPINDIC
          PACK      KEY34,MPRAC,SDOCT,VDEBTOR,VSCANPMI,INVOICE
          CALL      WRTEMP1
.
WRT9999   RETURN
+
.****************************************************************************
.*                                PRIN0000           Called by: ML0000      *
.*                      print a report of data input                        *
.****************************************************************************
.
PRIN0000  MOVE      ZERO,CPAGENO
          MOVE      ZERO,CNOUNDLN
          MOVE      ZERO,CLNO
          CALL      IBACLOCK
          CALL      HEAD0000
.
          MOVE      SP70,KEY34
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read first record
          BRANCH    OVRCD,PRIN9600               * no records on file
.
PRIN1000  CALL      DISP0000                     * print record
.
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,PRIN9500               * end of file
          GOTO      PRIN1000                     * get next record
.
PRIN9500  CALL      LINE0000
PRIN9600  PRINT     *N,*1,"*** End of Report ***"
.
PRIN9999  RETURN
+
.****************************************************************************
.*                            DISP0000                 Called by: PRIN0000  *
.*                  valid record so print it                                *
.****************************************************************************
.
DISP0000  COMPARE   FIFTY5,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          UNPACK    XINVDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          PRINT     *1,PIPE,*4,XMPRAC,*12,PIPE,*14,XSDOCT,*26,PIPE;
.
          MATCH     " 1",XSCANFLG                * see if PMI debtor
          IF        @EQUAL
             PRINT     *28,ANSP;
          ENDIF
.
          PRINT     *29,XDEBTOR:
                    *38,PIPE,*40,XINVOICE,*49,PIPE,*51,CPCDATE,*62,PIPE:
                    *64,XOUTAMT,*76,PIPE,*78,XCLAIM;
.
          MOVE      "Unknown code        ",TDESC
          PACK      KEY5,CODECL,XCLAIM
          CALL      RDCODE1
.
          PRINT     *82,TDESC,*103,PIPE,*105,XPINDIC;
.
          MOVE      "Unknown code        ",TDESC
          PACK      KEY5,CODEGI,XPINDIC
          CALL      RDCODE1
.
          PRINT     *109,TDESC,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
.
DISP9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PRIN0000  *
.*                       print page heading                       DISP0000  *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          PRINT     *40,"ITEM TYPE   :";
          IF        IFLAG = ZERO
             PRINT     *54,"MBS";
          ELSE
             PRINT     *54,"AMA";
          ENDIF
.
          PRINT     *N,*40,"ITEM NUMBER : ",ITEMNUMB;
          MATCH     SP3,SUBITEM
          IF        @EQUAL
             GOTO      HEAD1000
          ELSE
             PRINT     *63,"(",SUBITEM,")";
          ENDIF
HEAD1000  PRINT     *72,PRITDESC,*N
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Medical",*12,PIPE,*14,"Service",*26,PIPE:
                    *28,"Debtor /",*38,PIPE,*40,"Invoice",*49,PIPE:
                    *51,"Invoice",*62,PIPE,*64,"Invoice",*76,PIPE:
                    *78,"Claim Code",*103,PIPE,*105,"Patient Indicator":
                    *132,PIPE,*N:
                    *1,PIPE,*3,"Practice",*12,PIPE,*14,"Doctor",*26,PIPE:
                    *28,"UR ##",*38,PIPE,*40,"Number",*49,PIPE:
                    *51,"Date",*62,PIPE,*64,"Amount",*76,PIPE:
                    *103,PIPE,*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      TEN,CLNO                     * increment line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      draw line across page                     PRIN0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
          ADD       ONE,CLNO
.
LINE9999  RETURN
+
.**************************************************************************
.*                              CREA0000               Called by: ML0000  *
.*             create a new temporary file                                *
.**************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          PACK      CMDLIN1,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLIN1,TASKID               * create temporary index file
. 
          OPEN      OUTTEMP1,TEMPFILE            * open temp index file 
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: ML0000    *
.*               close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     OUTTEMP1                     * close file
.
          PACK      CMDLIN2,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLIN2,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RSTEMP1   READ      OUTTEMP1,KEY34;;
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    OUTTEMP1;XMPRAC,XSDOCT,XDEBTOR,XSCANFLG,XINVOICE,XINVDATE:
                             XOUTAMT,XCLAIM,XPINDIC
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   WRITE     OUTTEMP1,KEY34;KEY34,XINVDATE,XOUTAMT,XCLAIM,XPINDIC 
          RETURN
+
.****************************************************************************
.
OPEN0000
CLOS0000
GETSVAR   RETURN
+
. =========================================================================
.        I/O Includes
. =========================================================================
.
         INC       STD001IO
         INC       TFILENAM                * Generate Temp File Name
         INC       IBASEQIO/INC            * Sequential Numbers File
         INC       WEBERRIO/INC            * Web Server Error Logging
.
         INC       KYPRIITM
         INC       PRIITMDS
         INC       PATCODKY
         INC       PRIKYDEB
         INC       PATSNDX
         INC       PATSRCH
         INC       PRIPRADS
         INC       PRIMPDKY                 * Keyin the medical practice doctor
         INC       PRICALFS
         INC       PMSOSPTM                                           *I-210835
         INC       CLPRIDTR
         INC       CLPRIHRE
.
         INC       PATCODIO/INC
         INC       PATDRGIO/INC
         INC       PATGSRIO/INC
         INC       PATMA1IO/INC
         INC       PATMI1IO/INC
         INC       PMSPX2IO/INC
         INC       PMSVX1IO/INC
         INC       PATMWSIO/INC
         INC       PATPR1IO/INC
         INC       PMSHCPIO/INC
         INC       BOKRC1IO/INC
         INC       OUTPREIO/INC
.
...         INC       PRIDBTIO/INC
         INC       PRIHDBIO/INC
         INC       PRIHREIO/INC
         INC       PRIHTRIO/INC
         INC       PRIDTRIO/INC
         INC       PRIINVIO/INC
         INC       PRISTAIO/INC
         INC       PRIFINIO/INC
         INC       PRIFIGIO/INC
         INC       PRIITMIO/INC
         INC       PRIPRAIO/INC
         INC       PRIDOCIO/INC
.
          INC       PATSNX2
          INC       NZIBSRCH
          INC       NZHISIIO
          INC       CLPATMAS
          INC       CALCAGE
          INC       NHIMASIO/INC                 * NZHIS Variables
.
