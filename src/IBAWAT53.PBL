.---------------------------------------------------------------------
. Program       : IBAWAT53
.
. Function      : Waiting List Patient Extract Server
.
. Modifications :
.
.---------------------------------------------------------------------
. V11.02.01 10/02/2022  Thanh T          TSK 0889899  
.           Recompiled as WATTR1FD changes  
.---------------------------------------------------------------------
. V10.03.01 25/02/2013 Ania P             CAR 281021
.           Removed unnecessary modification of constants.
. V10.02.01 14/10/2011  Steve Armstrong   CAR 253117
.           Mods to fix RANGE000 so that it checks against TILDA's for to
.           dates and also ignored suspension checks if there are no
.           suspension records.
.---------------------------------------------------------------------
. V10.00.01 11/08/2010  Steve Armstrong   CAR 228087
.           Added looping on watsusaf in RANGE000 to check for
.           multiple suspension records for UR/Procedure/Procedure Count
.           combination
.---------------------------------------------------------------------
. V9.12.02  15.03.2010  Saroeun Soeur CAR 183899
.           fixed LOKPRO00 to take new criteria parameters
. V9.12.01  11.09.2009  Saroeun Soeur CAR 183899
.           added new criteria ,LOKPRO00
.---------------------------------------------------------------------
. V9.04.01  16.11.2005  Peter Vela CAR 84989
.           Added RAWTEPS1 before WRWTEPS1 to prevent I*D
.---------------------------------------------------------------------
. V9.02.01  21.12.2001  Ebon Clements 
.           Added attending doctor selection criteria code
.---------------------------------------------------------------------
. V9.00.B02 13.07.2001  Sandra Barcham
.           Replace GP with HCP
. V9.00.B01 31.05.2001  Ebon Clements 
.           Added new selection criteria for waiting list extract
.---------------------------------------------------------------------
. V5.09.01  15.09.2000  Sandra Barcham
.           Replace RSHCONFD with WEBCONFD
. V5.09.00  30/06/2000  Pat Dirito .           Created Program
.----------------------------------------------------------------------
          INC       STD001FD    
.
          INC       BOKRC1FD/INC
          INC       CASAGEFD/INC
          INC       CASXHDFD/INC 
          INC       WATEPSFD/INC
          INC       WATEXTFD/INC
          INC       WATEXAFD/INC
          INC       WATEXBFD/INC
          INC       WATEXCFD/INC
          INC       WATEXDFD/INC
          INC       WATTR1FD/INC
          INC       WATTX1FD/INC
          INC       WATPROFD/INC
          INC       PATDO1FD/INC
          INC       PATMA1FD/INC
          INC       PMSPX2FD/INC
          INC       PATDHEAD/INC
          INC       PATCALAG/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PMSHCPFD/INC
          INC       PATVISFD/INC
          INC       WEBCONFD/INC
          INC       WATLHIFD/INC
          INC       WATSUSFD/INC
          INC       WATCATFD/INC
.
.  CGI Variables 
.
MTHNAM3   DIM       3
JAN       INIT      "January"
FEB       INIT      "February"
MAR       INIT      "March"
APR       INIT      "April"
MAY       INIT      "May"
JUN       INIT      "June"
JUL       INIT      "July"
AUG       INIT      "August"
SEP       INIT      "September"
OCT       INIT      "October"
NOV       INIT      "November"
DEC       INIT      "December"
EXTRCTID  DIM       4    * Extract ID
TABDELM   EQU       0x09
CATEGORY  DIM       2
CODE      DIM       3
OVERSTAT  DIM       1
PRIOOVER  DIM       8
NRCDAYS   FORM      5
TODAY     DIM       8
NRDYCODE  DIM       3
NRDYCARE  FORM      1
URGDAYS   FORM      5
LSTDAYS   FORM      5

.  Local Variable Definitions
.
EXTRCTFL  FILE      ASCII, FIXED=400     * Extract File (Adjust Length to Suit)
EXTRCTFN  DIM       13                   * Extract File Name
EXTRCTEX  INIT      ".txt"               * Extract File Name Extension
.
ANALEVL1  DIM       10
ANALEVL2  DIM       10
ANALEVL3  DIM       10
ANALEVL4  DIM       10
AGERANGE  DIM       3
BJDAY     FORM      3            * julian birth day
CJDAY     FORM      3            * julian discharge day
COUNTRY   DIM       20
DATOFBTH  DIM       11
DATONLST  DIM       11
DATOFREV  DIM       11
DIM10     DIM       10
MARRIED   DIM       20
RELIGION  DIM       20
UNITCLIN  DIM       20
PRIORITY  DIM       20
NOTICE    DIM       20
RESIDENT  DIM       20
ADMISSTP  DIM       20
PATCAT    DIM       20
CLAIMCOD  DIM       20
ESTIME    FORM      4
ESTSTAY   FORM      3
ELADMISS  DIM       20
EXTRLOAD  FORM      3   
EXTRCODE  DIM       10  
EXTRMEAS  FORM      12.4 
EXTRMEA1  FORM      12.4 
EXTRMEA2  FORM      12.4 
EXTRMEA3  FORM      12.4 
EXTRSUMM  FORM      1           * Summary Extract Analysis Flag
FILENAME  DIM       8           * FileName for wteaAAAA
DIRECTRY  DIM       40
DISSTRCT  DIM       20
ISBUILDA  DIM       127         * isbuild string  wteaAAAA
ISBUILD   INIT      "isbuild"
MEASLOAD  FORM      3   
SRCREFAL  DIM       20
TOYEARS   FORM      3
TOMNTHS   FORM      2
TODAYS    FORM      3
REMVLDAT  DIM       11
REMOVAL   DIM       20
USERDEF1  DIM       3 
USERDEF2  DIM       3
USERDEF3  DIM       3
USERDEF4  DIM       3
USERDEF5  DIM       3
USERDEF6  DIM       3
WATDURAT  FORM      3
WTXANIDX  INIT      "156 UC1-10"
WTXBNIDX  INIT      "166 UC1-10,11-20"
WTXCNIDX  INIT      "176 UC1-10,11-20,21-30"
WTXDNIDX  INIT      "186 UC1-10,11-20,21-30,31-40"
WATUDEF1  DIM       3
WATUDEF2  DIM       3
WATUDEF3  DIM       3
WATUDEF4  DIM       3
WATUDEF5  DIM       3
WATUDEF6  DIM       3
WATUDEF7  DIM       3
WATUDEF8  DIM       3
GPCODE    DIM       8       * GP Code
GPNAME    DIM       20      * GP's Surname
GPADD1    DIM       35      * Address Line
GPADD2    DIM       35      * Address Line 2
GPADD3    DIM       35      * Address Line 3
GPADD4    DIM       35      * Address Line 4
GPPOST    DIM       8       * Postcode
WTGPCODE  DIM       8       * GP Code
WTGPNAME  DIM       20      * GP's Surname
WTGPADD1  DIM       35      * Address Line
WTGPADD2  DIM       35      * Address Line 2
WTGPADD3  DIM       35      * Address Line 3
WTGPADD4  DIM       35      * Address Line 4
WTGPPOST  DIM       8       * Postcode
.
CHARCR    INIT      0x0D
WATDATE   FORM      8       * Date Variable
LSTDATE   FORM      8       * Date Variable
.
ANATYPE   INIT      "004"        * Waiting List Extract Analysis Type
SCHLDATE  DIM       11
STATDESC  DIM       12 
STAT1     INIT      "Unscheduled "
STAT2     INIT      "Scheduled   "
STAT3     INIT      "Pre-admitted"
STAT4     INIT      "Admitted    "
STAT5     INIT      "Discharged  "
STAT6     INIT      "Removed     "
STAT7     INIT      "Performed   "
STAT8     INIT      "Not Performd"
HUNDRED4  FORM      "104"
SOPTION   FORM      1
TILDA8    INIT      "~~~~~~~~"
.
.                          * RJUS0000 - variables
LENIN     FORM      5
LENOUT    FORM      5
LENGTH    FORM      5
FLD60IN   DIM       60
FLD60OUT  DIM       60
.
.------------------------------------------------------------------------
PRGID     INIT      "IBAWAT53"
VERSION   INIT      "V12.00.00"
PRGNAM    INIT      "Waiting List Patient extracts"
.------------------------------------------------------------------------
MAIN0000  CALL      INIT0000       * Initialise 
          KEYIN     *P1:5,"Option     : ",SOPTION
          KEYIN     *P1:5,"Extract ID : ",EXTRCTID
          BRANCH    SOPTION,MAIN1100,MAIN1200,MAIN1300,MAIN1400
.
MAIN1100  CALL      CLREPS00      * Clear all records for this Extract.
          CALL      LOKPRO00      * Check Waiting list Procedure File
          CALL      MAKEXT00      * Create Extract DownLoad File   
          CALL      WATLST00      * Waiting List Extract
          GOTO      MAIN9000
.
MAIN1200  CALL      CLREPS00      * Clear all records for this Extract.
          GOTO      MAIN9000
.
MAIN1300  CALL      MAKEXT00      * Create Extract DownLoad File    
          CALL      WATLST00      * Waiting List Extract
          GOTO      MAIN9000
.
MAIN1400  CALL      ANALYS00      * Casemix Analysis of Waiting List Extract
          GOTO      MAIN9000
.
MAIN9000  
.
MAIN9999  CHAIN     PGM
.------------------------------------------------------------
. Open Files and Initialize Variables
.------------------------------------------------------------
INIT0000  CALL      DISPHEAD
          OPEN      CONTROLF,"controlf"
          OPEN      CASAGEA2,"casageaf"
          OPEN      CASXHDA1,"casxhdaf"
          OPEN      WATPROA1,"watproaf"
          OPEN      WATEPSA1,"watepsaf"
          OPEN      WATEXTA1,"watextaf"
          OPEN      WATTR1A1,"wattr1af"
          OPEN      WATTR1A3,"wattr1af"
          OPEN      WATTX1A1,"wattx1af"
          OPEN      PATDO1A1,"patdo1af"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PMSPX2A1,"pmspx2af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PATCODE1,"patcodes"
          OPEN      PATCODE2,"patcodes"
          OPEN      PMSHCPA1,"pmshcpaf"
          OPEN      PATVISA1,"patvisaf"
          OPEN      WATLHIA1,"watlhiaf"
          OPEN      WATSUSA1,"watsusaf"
          OPEN      WATCATA1,"watcataf"
          OPEN      WATCATA2,"watcataf"
.
INIT9999  RETURN
.----------------------------------------------------------------
.                          CLREPS00
.  Clear Waiting List Patient Extract Table(WATEPSFD) for
.  Extract ID.
.----------------------------------------------------------------
CLREPS00  PACK      KEY23,EXTRCTID,SP70
          CALL      RSWTEPS1
CLREPS10  CALL      RKWTEPS1
          BRANCH    OVRCD,CLREPS99
.
          MATCH     EXTRCTID,WTEPEID
          GOTO      CLREPS99 IF NOT EQUAL
.
          PACK      KEY23,WTEPEID,WTEPURN,WTEPPRO,WTEPCNT,SP70
          CALL      DEWTEPS1
.
          GOTO      CLREPS10
.
CLREPS99  RETURN
.----------------------------------------------------------------
.                          LOKPRO00
.  Reads through Waiting List Patient Procedures with Index 3
.  by List Date.
.----------------------------------------------------------------
LOKPRO00  PACK      KEY4,EXTRCTID,SP70   * Read Waiting List Extract Record
          CALL      RDWTEXT1
          BRANCH    OVRCD,LOKPRO99
.
          PACK      KEY27,WTEXFLDT,SP70
          CALL      RDSTREA3
LOKPRO10  CALL      RDKTREA3
          BRANCH    OVRCD,LOKPRO99
.
          MATCH     SP70,WTEXTLDT
          IF        !@EQUAL
            MATCH     WMDATE1,WTEXTLDT   * Check To Date on List
            GOTO      LOKPRO99 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXFURN
          IF        !@EQUAL
            MATCH     WTEXFURN,WMURNO    * Check U/R number From
            GOTO      LOKPRO10 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXTURN
          IF        !@EQUAL
            MATCH     WMURNO,WTEXTURN    * Check U/R number To
            GOTO      LOKPRO10 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXFPRO
          IF        !@EQUAL
            MATCH     WTEXFPRO,WMCODE    * Check Procedure From
            GOTO      LOKPRO10 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXTPRO
          IF        !@EQUAL
            MATCH     WMCODE,WTEXTPRO   * Check Procedure To
            GOTO      LOKPRO10 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXFPRS
          IF        !@EQUAL
            MATCH     WTEXFPRS,DWMSTAT  * Check Procedure Status From
            GOTO      LOKPRO10 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXTPRS
          IF        !@EQUAL
            MATCH     DWMSTAT,WTEXTPRS   * Check Procedure Status To
            GOTO      LOKPRO10 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXFUNI
          IF        !@EQUAL
            MATCH     WTEXFUNI,WMUNIT    * Check Unit From
            GOTO      LOKPRO10 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXTUNI
          IF        !@EQUAL
            MATCH     WMUNIT,WTEXTUNI    * Check Unit To
            GOTO      LOKPRO10 IF LESS
          ENDIF
.
          PACK      DIM10,WMDOCTOR,SP70
          MATCH     SP70,WTEXFCON
          IF        !@EQUAL
            MATCH     WTEXFCON,DIM10     * Check Consultant From
            GOTO      LOKPRO10 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXTCON
          IF        !@EQUAL
            MATCH     DIM10,WTEXTCON     * Check Consultant To
            GOTO      LOKPRO10 IF LESS
          ENDIF
.
          COMPARE   ZERO,WTEXFSES
          IF        !@EQUAL
            MOVE      WTEXFSES,DIM10
            SQUEEZE   DIM10
            MATCH     SP70,DIM10
            IF        !@EQUAL
              COMPARE   WTEXFSES,WMSTAY    * Check Estimated Stay From
              GOTO      LOKPRO10 IF LESS
            ENDIF
          ENDIF
.
          COMPARE   ZERO,WTEXTSES
          IF        !@EQUAL
            MOVE      WTEXTSES,DIM10
            SQUEEZE   DIM10
            MATCH     SP70,DIM10
            IF        !@EQUAL
              COMPARE   WMSTAY,WTEXTSES    * Check Estimated Stay To
              GOTO      LOKPRO10 IF LESS
            ENDIF
          ENDIF
.
          CALL      RANGE000           * Check Date Ranges
          BRANCH    EXIT,LOKPRO10
.
          
          PACK      KEY19,WMURNO,WMCODE,WMCNT   * Read W/List Extn File
          CALL      RDWTTX11
          BRANCH    OVRCD,LOKPRO10
.
          PACK      KEY8,WMURNO                 * Read Master File
          CALL      RDMAST1
          BRANCH    OVRCD,LOKPRO10
          CALL      RDPMPX21
.
.         Not used anymore         
.
.          MATCH      WTEXUNT,SP70      * Unit/Clinic (Cat WU)
.          IF         !@EQUAL
.            MATCH      WTEXUNT,WMUNIT
.            GOTO       LOKPRO10 IF NOT EQUAL
.          ENDIF
.

          MATCH      WTEXPRI,SP70      * Priority (Cat TP)
          IF         !@EQUAL
            MATCH      WTEXPRI,WMPTY
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF


          MATCH      WTEXNOT,SP70      * Short Notice (Cat WS)
          IF         !@EQUAL
            MATCH      WTEXNOT,WMNOTICE
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
.          MATCH      WTEXPGP,SP70      * Procedure Group (Cat WG)
.          IF         !@EQUAL
.            MATCH      WTEXPGP,
.            GOTO       LOKPRO10 IF NOT EQUAL
.          ENDIF
.
          MATCH      WTEXRMR,SP70      * Removal Reason (Cat WR/BC)
          IF         !@EQUAL
            MATCH      WTEXRMR,WMREMOVE
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
.         Not used anymore
.
.         MATCH      WTEXCON,SP70      * Consultant  
.          IF         !@EQUAL
.            MATCH      WTEXCON,WMDOCTOR
.            GOTO       LOKPRO10 IF NOT EQUAL
.          ENDIF
.

          MATCH      WTEXRGP,SP70      * Reffering GP
          IF         !@EQUAL
            MATCH      WTEXRGP,WTWMRFGP
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
.         Procedure field not used anymore
.
.          MATCH      WTEXPRO,SP70      * Procedure
.          IF         !@EQUAL
.            MATCH      WTEXPRO,WMCODE
.            GOTO       LOKPRO10 IF NOT EQUAL
.          ENDIF
.
          MATCH      WTEXSRC,SP70      * Source of Refferal
          IF         !@EQUAL
            MATCH      WTEXSRC,WTWMSRCR
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
          MATCH      WTEXUD1,SP70      * User Def 1 (W1)
          IF         !@EQUAL
            MATCH      WTEXUD1,WMUDEF1
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
          MATCH      WTEXUD2,SP70      * User Def 2 (W2)
          IF         !@EQUAL
            MATCH      WTEXUD2,WMUDEF2
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
          MATCH      WTEXUD3,SP70      * User Def 3 (W3)
          IF         !@EQUAL
            MATCH      WTEXUD3,WMUDEF3
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
          MATCH      WTEXUD4,SP70      * User Def 4 (W4)
          IF         !@EQUAL
            MATCH      WTEXUD4,WMUDEF4
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
          MATCH      WTEXUD5,SP70      * User Def 5 (X5)
          IF         !@EQUAL
            MATCH      WTEXUD5,WMUDEF5
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
          MATCH      WTEXUD6,SP70      * User Def 6 (X6)
          IF         !@EQUAL
            MATCH      WTEXUD6,WMUDEF6
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
          MATCH      WTEXUD7,SP70      * User Def 7 (X7)
          IF         !@EQUAL
            MATCH      WTEXUD7,WMUDEF7
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
          MATCH      WTEXUD8,SP70      * User Def 8 (X8)
          IF         !@EQUAL
            MATCH      WTEXUD8,WMUDEF8
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
.         Not used anymore
.
.          MATCH      WTEXSTA,SP70      * Procedure Status
.          IF         !@EQUAL
.            MATCH      WTEXSTA,DWMSTAT
.            GOTO       LOKPRO10 IF NOT EQUAL
.          ENDIF
.
          MATCH      WTEXPOWD,SP70      * Expected Post Op Ward
          IF         !@EQUAL
            MATCH      WTEXPOWD,WTTXPOWD
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
.         Not used anymore
.
.          MATCH      WTEXIDYC,SP70      * Intended Day Case
.          IF         !@EQUAL
.            MATCH     WTEXIDYC,WTTXIDYC
.            GOTO       LOKPRO10 IF NOT EQUAL
.          ENDIF
.
          MATCH      WTEXADMW,SP70      * Admission Point
          IF         !@EQUAL
            MATCH     WTEXADMW,WTTXADMW
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
          MATCH      WTEXCTYP,SP70      * Claim Type
          IF         !@EQUAL
            MATCH     WTEXCTYP,WTTXCTYP
            GOTO       LOKPRO10 IF NOT EQUAL
          ENDIF
.
          MATCH      "0",WTEXINCD      * Include Deceased
          IF         @EQUAL
            COMPARE    ONE,PCEASE
            GOTO       LOKPRO10 IF EQUAL
          ENDIF
.
          MATCH      WTEXLLSC,SP70      * Last Letter Sent Code
          IF         !@EQUAL
            PACK       KEY30,WMURNO,WMCODE,WMCNT,Z70
            CALL       RSWTLHI1
            CALL       RPWTLHI1
            BRANCH     OVRCD,LOKPRO10
.
            MATCH      WMURNO,WTLHURNO       * Same UR
            GOTO       LOKPRO10 IF NOT EQUAL
            MATCH      WMCODE,WTLHCODE       * Same Procedure
            GOTO       LOKPRO10 IF NOT EQUAL
            COMPARE    WMCNT,WTLHCONT        * Same Count     
            GOTO       LOKPRO10 IF NOT EQUAL
. 
            MATCH      WTEXLLSC,DWTLHLNU      * Validate Last Letter Sent
            GOTO       LOKPRO10 IF NOT EQUAL 
          ENDIF
.
          MATCH      "1",WTEXCRTL             * Response To Last Letter Sent
          IF         @EQUAL    
            PACK       KEY30,WMURNO,WMCODE,WMCNT,Z70
            CALL       RSWTLHI1
            CALL       RPWTLHI1
            BRANCH     OVRCD,LOKPRO10
.
            MATCH      WMURNO,WTLHURNO        * Same UR
            GOTO       LOKPRO10 IF NOT EQUAL
            MATCH      WMCODE,WTLHCODE        * Same Procedure
            GOTO       LOKPRO10 IF NOT EQUAL
            COMPARE    WMCNT,WTLHCONT         * Same Count     
            GOTO       LOKPRO10 IF NOT EQUAL
. 
            MATCH      SP70,WTLHRPLY          *Response To Letter         
            GOTO       LOKPRO10 IF NOT EQUAL 
          ENDIF
.
          MATCH      "1",WTEXOVON             *Overdue Patients Only
          IF         @EQUAL    
            MOVE      "TP",CATEGORY
            MOVE      WMPTY,CODE
            CALL      GETCOD00
            CALL      COVER000       * Check Overdue
            MATCH     "1",OVERSTAT
            GOTO      LOKPRO10 IF NOT EQUAL
          ENDIF
.
          CALL      WRTEPS00    * Writes to Extract Table
          GOTO      LOKPRO10    * Read next record
.
LOKPRO99  RETURN
.------------------------------------------------------------
.                       RANGE000
.  Check Various Date Ranges    
.------------------------------------------------------------
.
RANGE000  MATCH     SP70,WTEXFVDT
          IF        !@EQUAL
            MATCH     WTEXFVDT,WMDATE2    * Check From Review Date
            GOTO      RANGE910 IF LESS
          ENDIF
.
          MATCH     TILDA8,WTEXTVDT
          IF        !@EQUAL
            MATCH     WMDATE2,WTEXTVDT    * Check To Review Date
            GOTO      RANGE910 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXFSDT
          IF        !@EQUAL
            MATCH     WTEXFSDT,WMDATE3    * Check From Sch Date
            GOTO      RANGE910 IF LESS
          ENDIF
.
          MATCH     TILDA8,WTEXTSDT
          IF        !@EQUAL
            MATCH     WMDATE3,WTEXTSDT    * Check To Sch Date
            GOTO      RANGE910 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXFRDT
          IF        !@EQUAL
            MATCH     WTEXFRDT,WMDATE4    * Check From Removal Date
            GOTO      RANGE910 IF LESS
          ENDIF
.
          MATCH     TILDA8,WTEXTRDT
          IF        !@EQUAL
            MATCH     WMDATE4,WTEXTRDT    * Check To Removal Date
            GOTO      RANGE910 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXFPAD
          IF        !@EQUAL
            MATCH     WTEXFPAD,WTWMREAD   * Check From Pre-assessment date
            GOTO      RANGE910 IF LESS    
          ENDIF
.
          MATCH     TILDA8,WTEXTPAD
          IF        !@EQUAL
            MATCH     WTWMREAD,WTEXTPAD   * Check To Pre-assessment date   
            GOTO      RANGE910 IF LESS
          ENDIF
.
          MATCH     SP70,WTEXFSYD
          IF        !@EQUAL
            MATCH     WTEXFSYD,WMKEYDT    * Check Date on System From
            GOTO      RANGE910 IF LESS
          ENDIF
.
          MATCH     TILDA8,WTEXTSYD
          IF        !@EQUAL
            MATCH     WMKEYDT,WTEXTSYD    * Check Date on System To
            GOTO      RANGE910 IF LESS
          ENDIF
.
.         Check if there is a date range entered for suspensions
.
          MATCH     SP70,WTEXFSUD
          GOTO      RANGE400 IF NOT EQUAL
.
          MATCH     TILDA8,WTEXTSUD
          GOTO      RANGE400 IF NOT EQUAL
.
          MATCH     SP70,WTEXFOSD
          GOTO      RANGE400 IF NOT EQUAL
.
          MATCH     TILDA8,WTEXTOSD
          GOTO      RANGE400 IF NOT EQUAL
.
          GOTO      RANGE900                     * no suspension ranges
.
.         There is at least one suspension range, so check the suspension
.         records
.
RANGE400  PACK      KEY21,WMURNO,WMCODE,DWMCNT,SP70
          CALL      RSWTSUS1
RANGE500  CALL      RKWTSUS1
          BRANCH    OVRCD,RANGE900
.
          MATCH     WTSUURNO,WMURNO
          GOTO      RANGE900 IF NOT EQUAL
.
          MATCH     WMCODE,WTSUCODE 
          GOTO      RANGE900 IF NOT EQUAL
.
          MATCH     DWMCNT,DWTSUCNT
          GOTO      RANGE900 IF NOT EQUAL
.
.         See if we need to check the date on suspension range
.
RANGE600  MATCH     SP70,WTEXFSUD
          IF        @EQUAL
            MATCH     TILDA8,WTEXTSUD
            GOTO      RANGE700 IF EQUAL
          ENDIF
.
          MATCH     SP70,WTEXFSUD
          IF        !@EQUAL
            MATCH     WTEXFSUD,WTSUFDAT   * Check Date on Suspension From
            GOTO      RANGE800 IF LESS
          ENDIF
.
          MATCH     WTEXTSUD,TILDA8
          IF        !@EQUAL
            MATCH     WTSUFDAT,WTEXTSUD   * Check Date on Suspension To
            GOTO      RANGE800 IF LESS
          ENDIF
.
.         See if we need to check the date off suspension range
.
RANGE700  MATCH     SP70,WTEXFOSD
          IF        @EQUAL
            MATCH     TILDA8,WTEXTOSD
            GOTO      RANGE900 IF EQUAL
          ENDIF
.
          MATCH     WTEXFOSD,SP70
          IF        !@EQUAL
            MATCH     WTEXFOSD,WTSUTDAT   * Check Date off Suspension From
            GOTO      RANGE800 IF LESS
          ENDIF
.
          MATCH     WTEXTOSD,TILDA8
          IF        !@EQUAL
            MATCH     WTSUTDAT,WTEXTOSD   * Check Date Off Suspension To
            GOTO      RANGE800 IF LESS
          ENDIF
.
          GOTO      RANGE900              * valid record
.
RANGE800  CALL      RKWTSUS1
          BRANCH    OVRCD,RANGE910
.
          MATCH     WTSUURNO,WMURNO
          GOTO      RANGE910 IF NOT EQUAL
.
          MATCH     WMCODE,WTSUCODE
          GOTO      RANGE910 IF NOT EQUAL
.
          MATCH     DWMCNT,DWTSUCNT
          GOTO      RANGE910 IF NOT EQUAL
.
          GOTO      RANGE600
.
RANGE900  MOVE      ZERO,EXIT
          GOTO      RANGE999
.
RANGE910  MOVE      ONE,EXIT
.
RANGE999  RETURN
+
.------------------------------------------------------------
.                       WRTEPS00
.  Write Record to Extract Table
.------------------------------------------------------------
WRTEPS00  MOVE      WTEXCODE,WTEPEID    * Extract ID
          MOVE      WMURNO,WTEPURN      * U/R Number
          MOVE      WMCODE,WTEPPRO      * Procedure
          MOVE      DWMCNT,WTEPCNT      * Count
          MOVE      SP70,WTEPLEV1       * Summary Level 1 
          MOVE      SP70,WTEPLEV2       * Summary Level 2       
          MOVE      SP70,WTEPLEV3       * Summary Level 3               
          MOVE      SP70,WTEPLEV4       * Summary Level 4              
          MOVE      ZERO,WTEPANL1       * Analysis Measure 1 Total     
          MOVE      ZERO,WTEPANL2       * Analysis Measure 2 Total     
          MOVE      ZERO,WTEPANL3       * Analysis Measure 3 Total     
          MOVE      ZERO,WTEPDEL        * Deleted from Extract 0=No
.
          PACK      KEY23,WTEPEID,WTEPURN,WTEPPRO,WTEPCNT,SP70
          CALL      RAWTEPS1
          IF        OVRCD=1
            CALL      WRWTEPS1
          ENDIF
.
WRTEPS99  RETURN
.------------------------------------------------------------
. Create Extract File
.------------------------------------------------------------
MAKEXT00  CLEAR     EXTRCTFN
          APPEND    "extrc",EXTRCTFN
          APPEND    EXTRCTID,EXTRCTFN
          APPEND    EXTRCTEX,EXTRCTFN
          RESET     EXTRCTFN
          REP       " 0",EXTRCTFN
          READ      CONTROLF,HUNDRED4;RSCNEXT  * Output Extract directory
          STRIP     RSCNEXT                    * Full path is now in RSCNEXT
          PACK      KEY80,RSCNEXT,EXTRCTFN
          SQUEEZE   KEY80
          PREP      EXTRCTFL,KEY80
.
MAKEXT99  RETURN
.------------------------------------------------------------
. Waiting List Patient Extracts
.------------------------------------------------------------
WATLST00  PACK      KEY23,EXTRCTID,SP70 
          CALL      RSWTEPS1
WATLST10  CALL      RKWTEPS1
          BRANCH    OVRCD,WATLST99
. 
          MATCH     EXTRCTID,WTEPEID    * Check Extract ID
          GOTO      WATLST99 IF NOT EQUAL
.
          MATCH     "1",WTEPDEL         * Check Deleted Flag
          GOTO      WATLST10 IF EQUAL
.
          MOVE      WTEPURN,KEY8        * Read PMI Details
          CALL      RDMAST1
          BRANCH    OVRCD,WATLST99 
          CALL      RDPMPX21
.
          PACK      KEY19,WTEPURN,WTEPPRO,WTEPCNT,SP70  * Waiting List Details
          CALL      RDTREA1
          BRANCH    OVRCD,WATLST99 
.
          CALL      WRTEXT00      * Write Extract Details to File
          GOTO      WATLST10
.
WATLST99  RETURN
.------------------------------------------------------------
. Write Extract Details
.------------------------------------------------------------
WRTEXT00  CALL      STDESC00     * Get Descriptions for Category Code Fields  
.
          WRITE     EXTRCTFL,SEQ;PURNO,TABDELM:     * PMI Details  : U/R 
                                 PSNAME,TABDELM:    * Surname 
                                 PGNAME,TABDELM:    * Given Name
                                 DATOFBTH,TABDELM:  * Date of Birth
                                 PADD1,TABDELM:     * Patient Address Line 1
                                 PADD2,TABDELM:     * Patient Address Line 2
                                 PSUBRB,TABDELM:    * Suburb
                                 PADD4,TABDELM:     * Patient Address Line 4
                                 PPOST,TABDELM:     * Post Code
                                 PTELEB,TABDELM:    * Telephone Business
                                 PTELEP,TABDELM:    * Telephone Private
                                 PTMXCELL,TABDELM:  * Mobile Phone No.
                                 PSEX,TABDELM:      * Sex
                                 COUNTRY,TABDELM:   * Country of Birth
                                 MARRIED,TABDELM:   * Marital Status
                                 POCCUP,TABDELM:    * Occupation
                                 RELIGION,TABDELM:  * Religon
                                 PMEDI,TABDELM:     * Medicare No.
                                 PNKNAME,TABDELM:   * N.O.K Name
                                 PNKADD1,TABDELM:   * N.O.K Address Line 1
                                 PNKADD2,TABDELM:   * N.O.K Address Line 2
                                 PNKSUBR,TABDELM:   * N.O.K Suburb
                                 PNKADD4,TABDELM:   * N.O.K Address Line 4
                                 PNKPOST,TABDELM:   * N.O.K Post Code
                                 PNKRELP,TABDELM:   * N.O.K Relationship
                                 PTMXADD1,TABDELM:  * Postal Address Line 1
                                 PTMXADD2,TABDELM:  * Postal Address Line 2
                                 PTMXADD3,TABDELM:  * Postal Address Line 3
                                 PTMXADD4,TABDELM:  * Postal Address Line 4
                                 PTMXPOST,TABDELM:  * Post Code
                                 PCEASE,TABDELM:    * Deceased Indicator
                                 USERDEF1,TABDELM:  * User Defined Fields
                                 USERDEF2,TABDELM:
                                 USERDEF3,TABDELM:
                                 USERDEF4,TABDELM:
                                 USERDEF5,TABDELM:
                                 USERDEF6,TABDELM:
                                 PUYN1,TABDELM:  
                                 PUYN2,TABDELM:
                                 PUYN3,TABDELM:
                                 GPCODE,TABDELM:    * Registered GP Code
                                 GPNAME,TABDELM:    * Registered GP Name
                                 GPADD1,TABDELM:    * Address Line 1    
                                 GPADD2,TABDELM:    * Address Line 2    
                                 GPADD3,TABDELM:    * Address Line 3    
                                 GPADD4,TABDELM:    * Address Line 4    
                                 GPPOST,TABDELM:    * Post Code
                                 WMCODE,TABDELM: ** W/L FIELDS: Procedure Code**
                                 STATDESC,TABDELM:  * Procedure Status
                                 DATONLST,TABDELM:  * Date on List
                                 DATOFREV,TABDELM:  * Date of last review
                                 SCHLDATE,TABDELM:  * Scheduled Admitted Date 
                                 REMVLDAT,TABDELM:  * Removal Date
                                 WMSTAY,TABDELM:    * Estimated Stay
                                 UNITCLIN,TABDELM:  * Unit/Clinic
                                 WMDOCTOR,TABDELM:  * Doctor Code 
                                 PRIORITY,TABDELM:  * Priority
                                 NOTICE,TABDELM:    * Short Notice Flag
                                 RESIDENT,TABDELM:  * Resident Status
                                 ADMISSTP,TABDELM:  * Admission Type
                                 PATCAT,TABDELM:    * Patient Category
                                 CLAIMCOD,TABDELM:  * Claim Code
                                 ELADMISS,TABDELM:  * Elective Admission Type
                                 DISSTRCT,TABDELM:  * District of Residence
                                 SRCREFAL,TABDELM:  * Source of Referral
                                 WATUDEF1,TABDELM:  * User Defined Fields ALL
                                 WATUDEF2,TABDELM:
                                 WATUDEF3,TABDELM:
                                 WATUDEF4,TABDELM:
                                 WATUDEF5,TABDELM:
                                 WATUDEF6,TABDELM:
                                 WATUDEF7,TABDELM:
                                 REMOVAL,TABDELM:   * Removal Reason
                                 WTGPCODE,TABDELM:  * Referring GP
                                 WTGPNAME,TABDELM:  * Referring GP Name
                                 WTGPADD1,TABDELM:  * Address Line 1
                                 WTGPADD2,TABDELM:  * Address Line 2
                                 WTGPADD3,TABDELM:  * Address Line 3
                                 WTGPADD4,TABDELM:  * Address Line 4
                                 WTGPPOST,TABDELM   * Post Code
.
WRTEXT99  RETURN
.------------------------------------------------------------
. Get Descriptions for Category Code Fields 
.------------------------------------------------------------
STDESC00      *** PMI Details ***  
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY  * Date of Bith
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      DATOFBTH,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
.
          MOVE      "C ",CATEGORY  * Country of Birth
          MOVE      PCONT,CODE
          CALL      GETCOD00
          MOVE      TDESC,COUNTRY
.
          MOVE      "M ",CATEGORY  * Marital Status    
          MOVE      PMSTAT,CODE
          CALL      GETCOD00
          MOVE      TDESC,MARRIED
.
          MOVE      "R ",CATEGORY  * Religon           
          MOVE      PREG,CODE
          CALL      GETCOD00
          MOVE      TDESC,RELIGION
.
          MOVE      "P1",CATEGORY  * User Defined Field 1 (Cat P1)
          MOVE      PUSR1,CODE
          CALL      GETCOD00
          MOVE      TDESC,USERDEF1
.
          MOVE      "P2",CATEGORY  * User Defined Field 2 (Cat P2)
          MOVE      PUSR2,CODE
          CALL      GETCOD00
          MOVE      TDESC,USERDEF2
.
          MOVE      "P3",CATEGORY  * User Defined Field 3 (Cat P3)
          MOVE      PUSR3,CODE
          CALL      GETCOD00
          MOVE      TDESC,USERDEF3
.
          MOVE      "P4",CATEGORY  * User Defined Field 4 (Cat P4)
          MOVE      PUSR4,CODE
          CALL      GETCOD00
          MOVE      TDESC,USERDEF4
.
          MOVE      "P5",CATEGORY  * User Defined Field 5 (Cat P5)
          MOVE      PUSR5,CODE
          CALL      GETCOD00
          MOVE      TDESC,USERDEF5
.
          MOVE      "P6",CATEGORY  * User Defined Field 6 (Cat P6)
          MOVE      PUSR6,CODE
          CALL      GETCOD00
          MOVE      TDESC,USERDEF6
.
          PACK      KEY10,PMPXRHC1,SP70   * Registered HCP Details
          CALL      RDPMHCP1 
          IF        OVRCD=1
            MOVE      SP70,GPCODE  * GP Code
            MOVE      SP70,GPNAME  * GP's Surname
            MOVE      SP70,GPADD1  * Address Line
            MOVE      SP70,GPADD2  * Address Line 2
            MOVE      SP70,GPADD3  * Address Line 3
            MOVE      SP70,GPADD4  * Address Line 4
            MOVE      SP70,GPPOST  * Postcode
          ELSE
            MOVE      PMHCHCPC,GPCODE  * GP Code
            MOVE      PMHCSNAM,GPNAME  * GP's Surname
            MOVE      PMHCADR1,GPADD1  * Address Line
            MOVE      PMHCADR2,GPADD2  * Address Line 2
            MOVE      PMHCADR3,GPADD3  * Address Line 3
            MOVE      PMHCADR4,GPADD4  * Address Line 4
            MOVE      PMHCPOST,GPPOST  * Postcode
          ENDIF
.
.   *** Waiting List Details ***
.
          LOAD      STATDESC,WMSTAT,STAT1,STAT2,STAT3,STAT4: * Procedure Status
                                    STAT5,STAT6,STAT7,STAT8
.
          MATCH     SP70,WMDATE1    * Date on List
          IF        @EQUAL
            MOVE      SP70,DATONLST
          ELSE
            UNPACK    WMDATE1,CCENT,CYEAR,CMON,CDAY  
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      DATONLST,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
          ENDIF
.
          MATCH     SP70,WMDATE2    * Date of last Review
          IF        @EQUAL
            MOVE      SP70,DATOFREV
          ELSE
            UNPACK    WMDATE2,CCENT,CYEAR,CMON,CDAY  
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      DATOFREV,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
          ENDIF
.
          MATCH     SP70,WMDATE3    * Scheduled Admit Date
          IF        @EQUAL
            MOVE      SP70,SCHLDATE
          ELSE
            UNPACK    WMDATE3,CCENT,CYEAR,CMON,CDAY  
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      SCHLDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
          ENDIF
.
          MATCH     SP70,WMDATE4    * Removal Date         
          IF        @EQUAL
            MOVE      SP70,REMVLDAT
          ELSE
            UNPACK    WMDATE4,CCENT,CYEAR,CMON,CDAY  
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      REMVLDAT,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
          ENDIF
.
          MOVE      "WU",CATEGORY  * Unit/Clinic       
          MOVE      WMUNIT,CODE
          CALL      GETCOD00
          MOVE      TDESC,UNITCLIN
.
          MOVE      "TP",CATEGORY  * Priority          
          MOVE      WMPTY,CODE
          CALL      GETCOD00
          MOVE      TDESC,PRIORITY
.
          MOVE      "WS",CATEGORY  * Short Notice Flag 
          MOVE      WMNOTICE,CODE
          CALL      GETCOD00
          MOVE      TDESC,NOTICE   
.
          MOVE      "T ",CATEGORY  * Resident Status   
          MOVE      WMPTYPE,CODE
          CALL      GETCOD00
          MOVE      TDESC,RESIDENT 
.
          MOVE      "A ",CATEGORY  * Admission Type    
          MOVE      WMPCAT,CODE
          CALL      GETCOD00
          MOVE      TDESC,ADMISSTP 
.
          MOVE      "P ",CATEGORY  * Patient Category  
          MOVE      WTWMCLSS,CODE
          CALL      GETCOD00
          MOVE      TDESC,PATCAT   
.
          MOVE      "CL",CATEGORY  * Claim Code        
          MOVE      WTWMACAT,CODE
          CALL      GETCOD00
          MOVE      TDESC,CLAIMCOD 
.
          MOVE      "CC",CATEGORY  * Elective Admission Type
          MOVE      WTWMEATY,CODE
          CALL      GETCOD00
          MOVE      TDESC,ELADMISS 
.
          MOVE      "DA",CATEGORY  * Distirct of Residence  
          MOVE      WTWMDOFR,CODE
          CALL      GETCOD00
          MOVE      TDESC,DISSTRCT 
.
          MOVE      "S ",CATEGORY  * Source of Referral  
          MOVE      WTWMSRCR,CODE
          CALL      GETCOD00
          MOVE      TDESC,SRCREFAL   
.
          MOVE      "WR",CATEGORY  * Removal Reason       
          MOVE      WMREMOVE,CODE
          CALL      GETCOD00
          MOVE      TDESC,REMOVAL    
.
          MOVE      "W1",CATEGORY  * User Defined 1 (Cat W1)
          MOVE      WMUDEF1,CODE
          CALL      GETCOD00
          MOVE      TDESC,WATUDEF1
.
          MOVE      "W2",CATEGORY  * User Defined 2 (Cat W2)
          MOVE      WMUDEF2,CODE
          CALL      GETCOD00
          MOVE      TDESC,WATUDEF2
.
          MOVE      "W3",CATEGORY  * User Defined 3 (Cat W3)
          MOVE      WMUDEF3,CODE
          CALL      GETCOD00
          MOVE      TDESC,WATUDEF3
.
          MOVE      "W4",CATEGORY  * User Defined 4 (Cat W4)
          MOVE      WMUDEF4,CODE
          CALL      GETCOD00
          MOVE      TDESC,WATUDEF4
.
          MOVE      "X5",CATEGORY  * User Defined 5 (Cat X5)
          MOVE      WMUDEF5,CODE
          CALL      GETCOD00
          MOVE      TDESC,WATUDEF5
.
          MOVE      "X6",CATEGORY  * User Defined 6 (Cat X6)
          MOVE      WMUDEF6,CODE
          CALL      GETCOD00
          MOVE      TDESC,WATUDEF6
.
          MOVE      "X7",CATEGORY  * User Defined 7 (Cat X7)
          MOVE      WMUDEF7,CODE
          CALL      GETCOD00
          MOVE      TDESC,WATUDEF7
.
          MOVE      "X8",CATEGORY  * User Defined 8 (Cat X8)
          MOVE      WMUDEF8,CODE
          CALL      GETCOD00
          MOVE      TDESC,WATUDEF8
.
          PACK      KEY10,WTWMRFGP,SP70   * Waiting List Reffering HCP Details
          CALL      RDPMHCP1
          IF        OVRCD=1
            MOVE      SP70,WTGPCODE  * GP Code
            MOVE      SP70,WTGPNAME  * GP's Surname
            MOVE      SP70,WTGPADD1  * Address Line
            MOVE      SP70,WTGPADD2  * Address Line 2
            MOVE      SP70,WTGPADD3  * Address Line 3
            MOVE      SP70,WTGPADD4  * Address Line 4
            MOVE      SP70,WTGPPOST  * Postcode
          ELSE
            MOVE      PMHCHCPC,WTGPCODE  * GP Code
            MOVE      PMHCSNAM,WTGPNAME  * GP's Surname
            MOVE      PMHCADR1,WTGPADD1  * Address Line
            MOVE      PMHCADR2,WTGPADD2  * Address Line 2
            MOVE      PMHCADR3,WTGPADD3  * Address Line 3
            MOVE      PMHCADR4,WTGPADD4  * Address Line 4
            MOVE      PMHCPOST,WTGPPOST  * Postcode
          ENDIF
.
STDESC99  RETURN 
.------------------------------------------------------------
. Casemix Analysis of Waiting List Extract 
.------------------------------------------------------------
ANALYS00  PACK      KEY4,EXTRCTID,SP70  * Read Extract Record
          CALL      RDWTEXT1            * Get Levels & Measures
          BRANCH    OVRCD,ANALYS99
. 
          CALL      MAKLEV00            * Create Extract Files
.
          PACK      KEY23,EXTRCTID,SP70 * Patient Extract Table 
          CALL      RSWTEPS1
ANALYS10  CALL      RKWTEPS1
          BRANCH    OVRCD,ANALYS90
. 
          MATCH     EXTRCTID,WTEPEID    * Check Extract ID
          GOTO      ANALYS90 IF NOT EQUAL
.
          MATCH     "1",WTEPDEL         * Check Deleted Flag
          GOTO      ANALYS10 IF EQUAL
.
          MOVE      WTEPURN,KEY8        * Read PMI Details
          CALL      RDMAST1
          BRANCH    OVRCD,ANALYS10 
          CALL      RDPMPX21
.
          PACK      KEY19,WTEPURN,WTEPPRO,WTEPCNT,SP70  * Waiting List Details
          CALL      RDTREA1
          BRANCH    OVRCD,ANALYS10 
.
          PACK      KEY9,WTEPPRO,SP70    * Waiting List Procedure File
          CALL      RDPROA1
          BRANCH    OVRCD,ANALYS10 
.
          PACK      KEY6,WMDOCTOR,SP70   * Get Doctor details for Waiting List
          CALL      RDDOCT1
          BRANCH    OVRCD,ANALYS10 
.
          CALL      SETMEA00             * Set Analysis Measures data          
.
.    Level 1 Analysis
.
          MATCH     SP70,WTEXANL1
          IF        !@EQUAL
            MOVE      WTEXANL1,EXTRLOAD   * Analysis Level 1 code
            CALL      LEVONE00
          ENDIF
.
.    Level 2 Analysis
.
          MATCH     SP70,WTEXANL2
          IF        !@EQUAL
            MOVE      WTEXANL2,EXTRLOAD   * Analysis Level 2 code
            CALL      LEVTWO00
          ENDIF
.
.    Level 3 Analysis
.
          MATCH     SP70,WTEXANL3
          IF        !@EQUAL
            MOVE      WTEXANL3,EXTRLOAD   * Analysis Level 3 code
            CALL      LEVTHR00
          ENDIF
.
.    Level 4 Analysis
.
          MATCH     SP70,WTEXANL4
          IF        !@EQUAL
            MOVE      WTEXANL4,EXTRLOAD   * Analysis Level 4 code
            CALL      LEVFOR00
          ENDIF
.
          GOTO      ANALYS10    * Read next Wating List Patient Extract
.
ANALYS90  CLOSE     WATEXAA1
          CLOSE     WATEXBA1
          CLOSE     WATEXCA1
          CLOSE     WATEXDA1
ANALYS99  RETURN
.--------------------------------------------------------------------
. Create Extract Level Files
.--------------------------------------------------------------------
MAKLEV00  CLEAR     FILENAME          * Build Extract Level File A
          APPEND    "wtxa",FILENAME
          APPEND    EXTRCTID,FILENAME
          RESET     FILENAME
          MOVE      ZERO,OVRCD        * Trap IO if Open Fails
          TRAP      OVERCOND IF IO
          OPEN      WATEXAA1,FILENAME
          TRAPCLR   IO                * If File doesn't exist then isbuild
          IF        OVRCD=0
            CLOSE     WATEXAA1,DELETE
          ENDIF 
          PACK      ISBUILDA,ISBUILD,SP1,FILENAME,SP1,WTXANIDX
          EXECUTE   ISBUILDA,TASKID
          OPEN      WATEXAA1,FILENAME
.
          CLEAR     FILENAME          * Build Extract Level File B
          APPEND    "wtxb",FILENAME
          APPEND    EXTRCTID,FILENAME
          RESET     FILENAME
          MOVE      ZERO,OVRCD        * Trap IO if Open Fails
          TRAP      OVERCOND IF IO
          OPEN      WATEXBA1,FILENAME
          TRAPCLR   IO                * If File doesn't exist then isbuild
          IF        OVRCD=0
            CLOSE     WATEXBA1,DELETE
          ENDIF 
          PACK      ISBUILDA,ISBUILD,SP1,FILENAME,SP1,WTXBNIDX
          EXECUTE   ISBUILDA,TASKID
          OPEN      WATEXBA1,FILENAME
.
          CLEAR     FILENAME          * Build Extract Level File C
          APPEND    "wtxc",FILENAME
          APPEND    EXTRCTID,FILENAME
          RESET     FILENAME
          MOVE      ZERO,OVRCD        * Trap IO if Open Fails
          TRAP      OVERCOND IF IO
          OPEN      WATEXCA1,FILENAME
          TRAPCLR   IO                * If File doesn't exist then isbuild
          IF        OVRCD=0
            CLOSE     WATEXCA1,DELETE
          ENDIF 
          PACK      ISBUILDA,ISBUILD,SP1,FILENAME,SP1,WTXCNIDX
          EXECUTE   ISBUILDA,TASKID
          OPEN      WATEXCA1,FILENAME
.
          CLEAR     FILENAME          * Build Extract Level File D
          APPEND    "wtxd",FILENAME
          APPEND    EXTRCTID,FILENAME
          RESET     FILENAME
          MOVE      ZERO,OVRCD        * Trap IO if Open Fails
          TRAP      OVERCOND IF IO
          OPEN      WATEXDA1,FILENAME
          TRAPCLR   IO                * If File doesn't exist then isbuild
          IF        OVRCD=0
            CLOSE     WATEXDA1,DELETE
          ENDIF 
          PACK      ISBUILDA,ISBUILD,SP1,FILENAME,SP1,WTXDNIDX
          EXECUTE   ISBUILDA,TASKID
          OPEN      WATEXDA1,FILENAME
.
MAKLEV99  RETURN
.--------------------------------------------------------------------
. Set Analysis Measures data
.--------------------------------------------------------------------
SETMEA00  CALL      IBACLOCK
          PACK      AGEDATE,CCC,CYY,CMM,CDD
          REP       " 0",AGEDATE
          DAYSEP    WMDATE1,AGEDATE,WATDURAT  * Waiting List duration in days
.
          MOVE      WPTIME,ESTIME        * Set Estimated Procedure Time
.
          MOVE      WPESTLS,ESTSTAY      * Set Estimated Length of Stay
.
SETMEA99  RETURN
.--------------------------------------------------------------------
. Level 1 Analysis    
.--------------------------------------------------------------------
LEVONE00  CALL      GETANY00           * Get Analysis Code
.
          MATCH     SP70,EXTRCODE      * Check if Level 1 Code is Blank
          IF        @EQUAL
            MOVE      Z70,EXTRCODE
          ENDIF                           
          PACK      ANALEVL1,EXTRCODE,SP70  * Save Analysis Level 1
.
	  PACK      KEY10,ANALEVL1,SP70
          CALL      RDWTEXA1
          IF        OVRCD=0
            ADD       ONE,WTXANLEP       * Add one to total number of Episodes
            MOVE      ANALEVL1,WTXANLV1  * Level 1 Analysis Code
            CALL      ANAMEA00           * Get Analysis Measures
            ADD       EXTRMEA1,WTXANTL1  * Set Analysis Measure 1 Total
            ADD       EXTRMEA2,WTXANTL2  * Set Analysis Measure 2 Total
            ADD       EXTRMEA3,WTXANTL3  * Set Analysis Measure 3 Total
            CALL      UPWTEXA1           * Update Record
          ELSE
            MOVE      ONE,WTXANLEP       * Move one to total number of Episodes
            MOVE      ANALEVL1,WTXANLV1  * Level 1 Analysis Code
            CALL      ANAMEA00           * Get Analysis Measures
            MOVE      EXTRMEA1,WTXANTL1  * Set Analysis Measure 1 Total
            MOVE      EXTRMEA2,WTXANTL2  * Set Analysis Measure 2 Total
            MOVE      EXTRMEA3,WTXANTL3  * Set Analysis Measure 3 Total
            PACK      KEY10,ANALEVL1,SP70
            CALL      WRWTEXA1           * Write Record
          ENDIF
.
LEVONE99  RETURN
.--------------------------------------------------------------------
. Level 2 Analysis    
.--------------------------------------------------------------------
LEVTWO00  CALL      GETANY00           * Get Analysis Code
.
          MATCH     SP70,EXTRCODE      * Check if Level 2 Code is Blank
          IF        @EQUAL
            MOVE      Z70,EXTRCODE
          ENDIF                           
          PACK      ANALEVL2,EXTRCODE,SP70  * Save Analysis Level 2
.
	  PACK      KEY20,ANALEVL1,ANALEVL2,SP70
          CALL      RDWTEXB1
          IF        OVRCD=0
            ADD       ONE,WTXBNLEP       * Add one to total number of Episodes
            MOVE      ANALEVL1,WTXBNLV1  * Level 1 Analysis Code
            MOVE      ANALEVL2,WTXBNLV2  * Level 2 Analysis Code
            CALL      ANAMEA00           * Get Analysis Measures
            ADD       EXTRMEA1,WTXBNTL1  * Set Analysis Measure 1 Total
            ADD       EXTRMEA2,WTXBNTL2  * Set Analysis Measure 2 Total
            ADD       EXTRMEA3,WTXBNTL3  * Set Analysis Measure 3 Total
            CALL      UPWTEXB1           * Update Record
          ELSE
            MOVE      ONE,WTXBNLEP       * Move one to total number of Episodes
            MOVE      ANALEVL1,WTXBNLV1  * Level 1 Analysis Code
            MOVE      ANALEVL2,WTXBNLV2  * Level 2 Analysis Code
            CALL      ANAMEA00           * Get Analysis Measures
            MOVE      EXTRMEA1,WTXBNTL1  * Set Analysis Measure 1 Total
            MOVE      EXTRMEA2,WTXBNTL2  * Set Analysis Measure 2 Total
            MOVE      EXTRMEA3,WTXBNTL3  * Set Analysis Measure 3 Total
            PACK      KEY20,ANALEVL1,ANALEVL2,SP70
            CALL      WRWTEXB1           * Write Record
          ENDIF
.
LEVTWO99  RETURN
.--------------------------------------------------------------------
. Level 3 Analysis    
.--------------------------------------------------------------------
LEVTHR00  CALL      GETANY00           * Get Analysis Code
.
          MATCH     SP70,EXTRCODE      * Check if Level 3 Code is Blank
          IF        @EQUAL
            MOVE      Z70,EXTRCODE
          ENDIF                           
          PACK      ANALEVL3,EXTRCODE,SP70  * Save Analysis Level 3
.
	  PACK      KEY30,ANALEVL1,ANALEVL2,ANALEVL3,SP70
          CALL      RDWTEXC1
          IF        OVRCD=0
            ADD       ONE,WTXCNLEP       * Add one to total number of Episodes
            MOVE      ANALEVL1,WTXCNLV1  * Level 1 Analysis Code
            MOVE      ANALEVL2,WTXCNLV2  * Level 2 Analysis Code
            MOVE      ANALEVL3,WTXCNLV3  * Level 3 Analysis Code
            CALL      ANAMEA00           * Get Analysis Measures
            ADD       EXTRMEA1,WTXCNTL1  * Set Analysis Measure 1 Total
            ADD       EXTRMEA2,WTXCNTL2  * Set Analysis Measure 2 Total
            ADD       EXTRMEA3,WTXCNTL3  * Set Analysis Measure 3 Total
            CALL      UPWTEXC1           * Update Record
          ELSE
            MOVE      ONE,WTXCNLEP       * Move one to total number of Episodes
            MOVE      ANALEVL1,WTXCNLV1  * Level 1 Analysis Code
            MOVE      ANALEVL2,WTXCNLV2  * Level 2 Analysis Code
            MOVE      ANALEVL3,WTXCNLV3  * Level 3 Analysis Code
            CALL      ANAMEA00           * Get Analysis Measures
            MOVE      EXTRMEA1,WTXCNTL1  * Set Analysis Measure 1 Total
            MOVE      EXTRMEA2,WTXCNTL2  * Set Analysis Measure 2 Total
            MOVE      EXTRMEA3,WTXCNTL3  * Set Analysis Measure 3 Total
            PACK      KEY30,ANALEVL1,ANALEVL2,ANALEVL3,SP70
            CALL      WRWTEXC1           * Write Record
          ENDIF
.
LEVTHR99  RETURN
.--------------------------------------------------------------------
. Level 4 Analysis    
.--------------------------------------------------------------------
LEVFOR00  CALL      GETANY00           * Get Analysis Code
.
          MATCH     SP70,EXTRCODE      * Check if Level 4 Code is Blank
          IF        @EQUAL
            MOVE      Z70,EXTRCODE
          ENDIF                           
          PACK      ANALEVL4,EXTRCODE,SP70  * Save Analysis Level 4
.
	  PACK      KEY40,ANALEVL1,ANALEVL2,ANALEVL3,ANALEVL4,SP70
          CALL      RDWTEXD1
          IF        OVRCD=0
            ADD       ONE,WTXDNLEP       * Add one to total number of Episodes
            MOVE      ANALEVL1,WTXDNLV1  * Level 1 Analysis Code
            MOVE      ANALEVL2,WTXDNLV2  * Level 2 Analysis Code
            MOVE      ANALEVL3,WTXDNLV3  * Level 3 Analysis Code
            MOVE      ANALEVL4,WTXDNLV4  * Level 4 Analysis Code
            CALL      ANAMEA00           * Get Analysis Measures
            ADD       EXTRMEA1,WTXDNTL1  * Set Analysis Measure 1 Total
            ADD       EXTRMEA2,WTXDNTL2  * Set Analysis Measure 2 Total
            ADD       EXTRMEA3,WTXDNTL3  * Set Analysis Measure 3 Total
            CALL      UPWTEXD1           * Update Record
          ELSE
            MOVE      ONE,WTXDNLEP       * Move one to total number of Episodes
            MOVE      ANALEVL1,WTXDNLV1  * Level 1 Analysis Code
            MOVE      ANALEVL2,WTXDNLV2  * Level 2 Analysis Code
            MOVE      ANALEVL3,WTXDNLV3  * Level 3 Analysis Code
            MOVE      ANALEVL4,WTXDNLV4  * Level 4 Analysis Code
            CALL      ANAMEA00           * Get Analysis Measures
            MOVE      EXTRMEA1,WTXDNTL1  * Set Analysis Measure 1 Total
            MOVE      EXTRMEA2,WTXDNTL2  * Set Analysis Measure 2 Total
            MOVE      EXTRMEA3,WTXDNTL3  * Set Analysis Measure 3 Total
            PACK      KEY40,ANALEVL1,ANALEVL2,ANALEVL3,ANALEVL4,SP70
            CALL      WRWTEXD1           * Write Record
          ENDIF
.
          CALL      SETEPS00    * Update Patient Extract Table 
.
LEVFOR99  RETURN
.-------------------------------------------------------------------
.                     ***** SETEPS00 *****    
.    Update Patient Extract Table with Analysis Levels 
.            - Input   ANALEVL1 : Level 1 Analysis Code
.                      ANALEVL2 : Level 2 Analysis Code
.                      ANALEVL3 : Level 3 Analysis Code
.                      ANALEVL4 : Level 4 Analysis Code
.                      EXTRMEA1 : Analysis Measure 1 Total
.                      EXTRMEA2 : Analysis Measure 2 Total
.                      EXTRMEA3 : Analysis Measure 3 Total
.-------------------------------------------------------------------
SETEPS00  PACK      KEY23,WTEPEID,WTEPURN,WTEPPRO,WTEPCNT,SP70
          CALL      RLWTEPS1     * Read with Lock         
          BRANCH    OVRCD,SETEPS99
.
          MOVE      ANALEVL1,WTEPLEV1    * Level 1 Analysis Code     
          MOVE      ANALEVL2,WTEPLEV2    * Level 2 Analysis Code     
          MOVE      ANALEVL3,WTEPLEV3    * Level 3 Analysis Code     
          MOVE      ANALEVL4,WTEPLEV4    * Level 4 Analysis Code     
          MOVE      EXTRMEA1,WTEPANL1    * Analysis Measure 1 Total
          MOVE      EXTRMEA2,WTEPANL2    * Analysis Measure 2 Total
          MOVE      EXTRMEA3,WTEPANL3    * Analysis Measure 3 Total
          CALL      UPWTEPS1             * Update Record
          CALL      UUWTEPS1             * Unlock Record
.
SETEPS99  RETURN
.-------------------------------------------------------------------
.                     ***** ANAMEA00 *****    
. **** Checks for or gets Analysis Measures
.            - Input    WTEXANM1 : Analysis Measure 1 Code
.                       WTEXANM2 : Analysis Measure 2 Code
.                       WTEXANM3 : Analysis Measure 3 Code
.              Outputs  EXTRMEA1 : Analysis Measure 1 
.                       EXTRMEA2 : Analysis Measure 2 
.                       EXTRMEA3 : Analysis Measure 3 
.-------------------------------------------------------------------
ANAMEA00  MOVE      ZERO,EXTRMEA1
          MOVE      ZERO,EXTRMEA2
          MOVE      ZERO,EXTRMEA3
.
          MATCH     SP70,WTEXANM1        * Analysis Measure Code 1
          IF        !@EQUAL
            MOVE      WTEXANM1,MEASLOAD  * Load Variable 
            CALL      GETMEA00           * Get Analysis Measure 
            MOVE      EXTRMEAS,EXTRMEA1  * Returned Analysis Measure value
          ENDIF
.
          MATCH     SP70,WTEXANM2        * Analysis Measure Code 2
          IF        !@EQUAL
            MOVE      WTEXANM2,MEASLOAD  * Load Variable 
            CALL      GETMEA00           * Get Analysis Measure 
            MOVE      EXTRMEAS,EXTRMEA2  * Returned Analysis Measure value 
          ENDIF
.
          MATCH     SP70,WTEXANM3        * Analysis Measure Code 3
          IF        !@EQUAL
            MOVE      WTEXANM3,MEASLOAD  * Load Variable 
            CALL      GETMEA00           * Get Analysis Measure 
            MOVE      EXTRMEAS,EXTRMEA3  * Returned Analysis Measure value 
          ENDIF
.
ANAMEA99  RETURN
.-----------------------------------------------------------------------------
.                        **** GETMEA00 ****
. Get Analysis Measures  
.            - Input    MEASLOAD : Analysis Measure to be loaded
.              Outputs  EXTRMEAS : Set Value for associated Analysis Measure
.-----------------------------------------------------------------------------
GETMEA00  BRANCH    MEASLOAD,GETMEA10,GETMEA11,GETMEA12,GETMEA13,GETMEA14
          GOTO      GETMEA99
.
GETMEA10  MOVE      ONE,EXTRMEAS        * No of Procedures on Waiting List
          GOTO      GETMEA99
.
GETMEA11  MOVE      ONE,EXTRMEAS        * No of Patients on Waiting List
          GOTO      GETMEA99
.
GETMEA12  MOVE      WATDURAT,EXTRMEAS   * Wating Duration in days
          GOTO      GETMEA99
.
GETMEA13  MOVE      ESTIME,EXTRMEAS     * Estimated Procedure Time
          GOTO      GETMEA99
.
GETMEA14  MOVE      ESTSTAY,EXTRMEAS    * Estimated Lenght of Stay
          GOTO      GETMEA99

GETMEA99  RETURN
.------------------------------------------------------------------
.                        *** GETANY00 *** 
. Get Analysis Code 
.            - Input    EXTRLOAD : Analysis Measure to be loaded
.              Outputs  EXTRCODE : Analysis Code   
.------------------------------------------------------------------
GETANY00  MOVE      SP70,KEY10 
          MOVE      ZERO,EXTRSUMM 
.
          CALL      IBACLOCK
          PACK      AGEDATE,CCC,CYY,CMM,CDD
          REP       " 0",AGEDATE
          CALL      CALCAGE              * Calculate Age in Years
.
          IF        EXTRLOAD > 200
            MOVE    ONE,EXTRSUMM     * Flag as Summary Extract Type
            SUB     "200",EXTRLOAD
          ENDIF
.
          IF        ((EXTRLOAD > 1) & (EXTRLOAD < 11))
            CALL      GETAGE00
            MOVE      AGERANGE,EXTRCODE
            GOTO      GETANY90
          ENDIF  
.
          IF        EXTRLOAD > 100
            SUB       "100",EXTRLOAD
            GOTO      GETANY20
          ENDIF
.
.                       *** PMI Details ***
.
GETANY10  LOAD      KEY10,EXTRLOAD,PSAGEYRS,ANS,ANS,ANS,ANS:
                                   ANS,ANS,ANS,ANS,ANS:                    *10
                                   PSEX,PCONT,PREG,PPOST,PMSTAT:
                                   PMPXRHC1,PTYPE,PFUNDH,PTMXLGA,PTMXLS:   *20
                                   PTMXDOFR,PTMXCXMP,PHIGH1,PHIGH2,PHIGH3:
                                   PUSR1,PUSR2,PUSR3,PUSR4,PUSR5:          *30
                                   PUSR6,PUYN1,PUYN2,PUYN3,PTMXMHU1:
                                   PTMXMHU2,PTMXMHU3
.
          MOVE      KEY10,EXTRCODE 
          GOTO      GETANY90
.
.                   *** Waiting List Details ***
.
GETANY20  LOAD      KEY10,EXTRLOAD,WMCODE,WPGRP,WTWPDRGC,WTWPHDPE,WMUNIT:
                                   WMDOCTOR,DRTYPE,DALEVEL,DACCRED,WMPTY: * 10
                                   WMNOTICE,WMPTYPE,WMPCAT,WTWMCLSS,WTWMACAT:
                                   WTWMEATY,WTWMRFGP,WTWMDOFR,WTWMSRCR,WMREMOVE:
                                   WMUDEF1,WMUDEF2,WMUDEF3,WMUDEF4,WMUDEF5: *25
                                   WMUDEF6,WMUDEF7,WMUDEF8
.
          MOVE      KEY10,EXTRCODE 
          GOTO      GETANY90
.
GETANY90  *** Check if summary data ***     
          IF        EXTRSUMM=1
            MOVE      EXTRLOAD,KEY3
            REP       " 0",KEY3
            PACK      KEY16,ANATYPE,KEY3,EXTRCODE,SP70
            CALL      RDCAXH1
            IF        OVRCD=0
              MOVE      CAXHSUM,EXTRCODE
            ELSE
              MOVE      SP70,EXTRCODE
            ENDIF
          ENDIF
.
GETANY99  RETURN
.------------------------------------------------------------
.  Determine Age Range Code 
.            - Input    EXTRLOAD : Analysis Measure to be loaded
.                       PSAGETYP : Type of (day,week,month or year) 
.                       PSAGECON : Returned Age 
.              Outputs  AGERANGE : Age Range Code   
.------------------------------------------------------------
GETAGE00  MOVE      SP70,AGERANGE
.
          MATCH     "y",PSAGETYP         * Set Year Age Range Key
          IF        @EQUAL
            MOVE      PSAGECON,TOYEARS
            MOVE      ZERO,TOMNTHS
            MOVE      ZERO,TODAYS
            PACK      KEY8,TOYEARS,TOMNTHS,TODAYS,SP70 
            REP       " 0",KEY8
          ENDIF
.
          MATCH     "m",PSAGETYP         * Set Month Age Range Key
          IF        @EQUAL
            MOVE      ZERO,TOYEARS
            MOVE      PSAGECON,TOMNTHS
            MOVE      ZERO,TODAYS
            PACK      KEY8,TOYEARS,TOMNTHS,TODAYS,SP70 
            REP       " 0",KEY8
          ENDIF
.
          MATCH     "d",PSAGETYP         * Set Day Age Range Key
          IF        @EQUAL
            MOVE      ZERO,TOYEARS
            MOVE      ZERO,TOMNTHS
            MOVE      PSAGECON,TODAYS
            PACK      KEY8,TOYEARS,TOMNTHS,TODAYS,SP70 
            REP       " 0",KEY8
          ENDIF
.
          MOVE      EXTRLOAD,F3
          ASSIGN    F3 - 1,F1            * Set for age range 0-9
          MOVE      F1,KEY1
          PACK      KEY12,KEY1,KEY8,SP70 
          CALL      RSCCAG2
          CALL      RKCCAG2
          BRANCH    OVRCD,GETAGE99
.
          MATCH     KEY1,CCAGDEF
          GOTO      GETAGE99 IF NOT EQUAL
          MOVE      CCAGGRP,AGERANGE     * Set Age Range Code
.
GETAGE99  RETURN
.------------------------------------------------------------
. Get Code Description
.------------------------------------------------------------
GETCOD00  MOVE      SP70,TDESC
          MATCH     SP70,CODE
          GOTO      GETCOD99 IF EQUAL
          PACK      KEY5,CATEGORY,CODE
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      SP70,ACODE
            MOVE      SP70,TDESC
            UNPACK    SP70,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5:
                           TCINDC6,TCINDC7,TCINDC8,TCINDC9,TCINDC10
          ENDIF
GETCOD99  RETURN
.----------------------------------------------------------------------
. Get OverDue Date & List Status
.  - Codes File should have been read for Cat TP
.  - Waiting List Record WATTR1AF should have been Read
.----------------------------------------------------------------------
COVER000  CALL      URGDAY00
          CALL      LSTDAY00
          UNPACK    WMDATE1,CCENT,CYEAR,CMON,CDAY  * set up parameters
          MOVE      CCENT,CC
          MOVE      CDAY,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
.
          CALL      DMYCON                   * convert to Julian date
          ADD       TCFORM6,JULDAY
          CALL      NRCDAY00
          ADD       NRCDAYS,JULDAY
.
          MOVE      JULDAY,JWKDAY            * set up parameters
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON                   * convert to DDMMYYCC
.
          PACK      PRIOOVER,CC,YY,MM,DD
          REP       " 0",PRIOOVER
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MOVE      "0",OVERSTAT
          MATCH     KEY8,PRIOOVER
          IF        @LESS
            MOVE      "1",OVERSTAT
          ENDIF
.
          IF         WMSTAT<>1
            MOVE       TWO,OVERSTAT
          ENDIF
.
COVER999  RETURN
.------------------------------------------------------------
. Calculate Days on Since Last Urgency Change
.------------------------------------------------------------
URGDAY00  PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
          MOVE      "TP",KEY2
          PACK      KEY21,WMURNO,WMCODE,WMCNT,KEY2,SP70
          PACK      KEY29,WMURNO,WMCODE,WMCNT,KEY2,Z70
          CALL      RSWTCAT2
          CALL      RPWTCAT2
          BRANCH    OVRCD,URGDAY90
          PACK      KEY29,WTCAURNO,WTCAPROC,WTCAPCNT,WTCACATF,SP70
          MATCH     KEY21,KEY29
          GOTO      URGDAY90 IF NOT EQUAL
          DAYSEP    WTCAEDAT,TODAY,URGDAYS
          ADD       ONE,URGDAYS
          GOTO      URGDAY99
.
URGDAY90  DAYSEP    WMDATE1,TODAY,URGDAYS
          ADD       ONE,URGDAYS
.
URGDAY99  RETURN
.------------------------------------------------------------
. Calculate Days on List Not Ready for Care
.------------------------------------------------------------
NRCDAY00  PACK      TODAY,CCC,CYY,CMM,CDD
          MOVE      ZERO,NRDYCARE         * Current State - Ready For Care
          MOVE      SP70,NRDYCODE    * Current Not Ready For Care Code
          REP       " 0",TODAY
          MOVE      ZERO,NRCDAYS
          MOVE      WMDATE1,KEY8
          PACK      KEY21,WMURNO,WMCODE,WMCNT,SP70
          PACK      KEY19,WMURNO,WMCODE,WMCNT,SP70
          CALL      RSWTSUS1
NRCDAY10  CALL      RKWTSUS1
          BRANCH    OVRCD,NRCDAY50
          PACK      KEY21,WTSUURNO,WTSUCODE,WTSUCNT,SP70
          MATCH     KEY19,KEY21
          GOTO      NRCDAY50 IF NOT EQUAL
.
          MOVE      "W4",KEY2
          PACK      KEY5,KEY2,WTSULSTS
          CALL      RDCODE1
          BRANCH    OVRCD,NRCDAY10
          MATCH     "R",TCINDC4
          GOTO      NRCDAY10 IF EQUAL
          DAYSEP    WTSUFDAT,WTSUTDAT,F4
          ASSIGN    F4+1+NRCDAYS,NRCDAYS

          MATCH     WTSUFDAT,TODAY
          GOTO      NRCDAY10 IF LESS
          MATCH     TODAY,WTSUTDAT
          GOTO      NRCDAY10 IF LESS
          MOVE      ONE,NRDYCARE         * Current State - Not Ready For Care
          MOVE      WTSULSTS,NRDYCODE    * Current Not Ready For Care Code
          GOTO      NRCDAY10
.
NRCDAY50  PACK      KEY19,WMURNO,WMCODE,WMCNT,SP70
          CALL      RLWTTRE1
          BRANCH    OVRCD,NRCDAY99,NRCDAY99
          IF        NRDYCARE=1
            MOVE      NRDYCODE,WMUDEF4
            GOTO      NRCDAY80
          ENDIF
          MOVE      "W4",KEY2
          PACK      KEY5,KEY2,SP70
          CALL      RDSCODE1
NRCDAY60  CALL      RDKCODE1
          BRANCH    OVRCD,NRCDAY99
          MATCH     "W4",TCODE
          GOTO      NRCDAY99 IF NOT EQUAL
          MATCH     "R",TCINDC4
          GOTO      NRCDAY60 IF NOT EQUAL
          MOVE      ACODE,WMUDEF4
.
NRCDAY80  CALL      UPTREA1
          CALL      UUWTTRE1
.
NRCDAY99  RETURN
.------------------------------------------------------------
. Calculate Days on List
.------------------------------------------------------------
LSTDAY00  PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          DAYSEP    WMDATE1,KEY8,LSTDAYS
          ADD       ONE,LSTDAYS
LSTDAY99  RETURN
.------------------------------------------------------------
.                                  RJUS0000                 
.                         Right Justify a UR Number         
.------------------------------------------------------------
.
RJUS0000  MOVE      SP70,FLD60OUT
          SQUEEZE   FLD60IN
          IF        @EOS
            MOVE      "0",FLD60IN
          ENDIF
          MOVELPTR  FLD60IN,LENIN
          MOVE      LENGTH,LENOUT
          COMPARE   LENIN,LENOUT
          IF        @EQUAL
            MOVE      FLD60IN,FLD60OUT
            GOTO      RJUS9999
          ENDIF
.
          SUB       LENIN,LENOUT
          SUB       ONE,LENOUT
          BUMP      FLD60OUT,LENOUT
          APPEND    FLD60IN,FLD60OUT
          RESET     FLD60OUT
.
RJUS9999  RETURN

. =========================================================================
.         I/O Includes
. =========================================================================
          INC       BOKRC1IO/INC
          INC       CASAGEIO/INC
          INC       CASXHDIO/INC
          INC       WATEPSIO/INC
          INC       WATEXTIO/INC
          INC       WATEXAIO/INC
          INC       WATEXBIO/INC
          INC       WATEXCIO/INC
          INC       WATEXDIO/INC
          INC       WATTR1IO/INC
          INC       WATTX1IO/INC
          INC       WATPROIO/INC
          INC       PATMA1IO/INC
          INC       PMSPX2IO/INC
          INC       PATDO1IO/INC
          INC       PATCODIO/INC
          INC       PMSHCPIO/INC
          INC       PATVISIO/INC
          INC       WATLHIIO/INC
          INC       WATSUSIO/INC
          INC       WATCATIO/INC
          INC       CALCAGE
          INC       STD001IO
          
