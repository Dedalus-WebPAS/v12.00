.*****************************************************************************
.* System    :   Patient Management                                          *
.* Program   :   IBAPMS14                                                    *
.* Desc      :   Eclipse Claims Report                                       *
.*****************************************************************************
.* Date      :   14/04/2009                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will find all the claims submitted within      *
.*               a selected date range and print a report showing the no.    *
.*               of days to the final status of each claim (if completed),   *
.*               or the current status if not complete.                      *
.* Mods      :                                                               *
.* V10.03.01  31/12/2012 Patrick Adair                             CAR 261630 *
.*                       Removed port number from temp file name              *
.*        V10.01.02 20/12/2010  Steve Armstrong   CAR 235655                 *
.*                  Removed printing of superscript characters               *
.*        V10.01.01 17/12/2010  Steve Armstrong   CAR 235655                 *
.*                  Renamed temp file to pms14axx                            *
.*****************************************************************************
.*        V9.12.01  18/08/2009  Peter Vela        CAR 203723                 *
.*                  Added validation for PTFXECLP.patfx1af                   *
.*        V9.11.00  23/04/2009  Steve Armstrong   CAR 195016                 *
.*                  Program created.                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATFN1FD/INC
          INC       PATFX1FD/INC
          INC       PATIN1FD/INC
          INC       PATPARFD/INC
          INC       PATPCPFD/INC
          INC       PMSECAFD/INC
          INC       PMSECTFD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
.
.         Temporary File Definition
.         -------------------------
.
.         Filename : pms14axx.dat          (xx = port id)
.
ECLTEMP1  IFILE SQL, FIXED=18, KEY="U1-2"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
DFINSTAT  DIM       2           2           1       Final Medicare Status
.                                                   (as for pmsectaf.pmecflag)
STATTOTL  FORM      8           5           3       Status Total Count
ASESTOTL  FORM      8           5           8       Assessment Count
DYTOSTAT  FORM      8           5           13      Days to Status
.
.End of Record                              18
.
. Redefine FORM fields from key
. -----------------------------
FINLSTAT  FORM      2
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
CLAMCODE  DIM       3
CLAMDESC  DIM       20
CMDLINE   DIM       100
CODE      DIM       2
COUNTER   FORM      10
CURRDATE  DIM       8
.
DAYCOUNT  FORM      5
DIM10     DIM       10
.
ECLKEY3   DIM       3
ENDDATE   DIM       8
.
FORM5P1   FORM      5.1
.
GRNDTOTL  FORM      8
.
LASTDATE  DIM       8
LASTSTAT  FORM      2
.
SAVEBATN  DIM       8
SAVEDATE  DIM       8
SAVEINVN  DIM       8
SAVKEY26  DIM       26
SENTTOTL  FORM      8
STATDESC  DIM       20
STRTDATE  DIM       8
.
TEMPFILE  DIM       8
.
.
. PROGRAM CONSTANTS
. -----------------
ERASE     INIT      "iserase "
ISBUILD   INIT      "isbuild "
LSQBRACK  INIT      "["
PIPE      INIT      "|"
RSQBRACK  INIT      "]"
UKEY      INIT      " 18 U1-2"
.
STATUS04  INIT      "Received            "
STATUS05  INIT      "HF Unverified       "
STATUS06  INIT      "HF Verified         "
STATUS07  INIT      "HF Assessing        "
STATUS08  INIT      "Interim Report Ready"
STATUS09  INIT      "Interim Reported    "
STATUS10  INIT      "HF Rejected Ready   "
STATUS11  INIT      "Assessment Ready    "
STATUS12  INIT      "HF Rejected Reported"
STATUS13  INIT      "Assessment Reported "
STATUS14  INIT      "Remittance Reported "
.
.
PRGID     INIT      "IBAPMS14"
PRGNAM    INIT      "Eclipse Claims Report"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              MAIN0000                                  *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
          CALL      CREA0000               * create temp file
.
MAIN0100  CALL      CLER0000               * clear temp file records
          CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9000          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN2000:      * by health fund
                            MAIN3000       * by claim code
.
.         Get Health Fund Code
.
MAIN2000  CALL      GFND0000                * get health fund code
          BRANCH    EXIT,MAIN0100           * nothing/exitchar entered
          GOTO      MAIN4000
.
.         Get Claim Code
.
MAIN3000  CALL      GCLM0000               * get claim code
          BRANCH    EXIT,MAIN0100          * nothing entered/exitchar
.
MAIN4000  CALL      SDAT0000               * get start date
          BRANCH    EXIT,MAIN0100          * nothing entered
.
          CALL      EDAT0000               * get end date
          BRANCH    EXIT,MAIN0100          * nothing entered
.
          CALL      CONTQST                * ok to continue ?
          BRANCH    CEXIT,MAIN5000:        * Yes
                          MAIN0100:        * No
                          MAIN0100         * Cancel
.
MAIN5000  CALL      LOAD0000               * load records for printing
.
          CALL      PRIN0000               * print data
          GOTO      MAIN0100
.
MAIN9000  CALL      KILL0000               * erase temp file
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: MAIN0000  *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                     * display heading
.
          DISPLAY   *P56:24,"Opening":
                    *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.         
          DISPLAY   *P64:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patfn1af"
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patfx1af"
          OPEN      PATFX1A1,"patfx1af"
.
          DISPLAY   *P64:24,"patin1af"
          OPEN      PATIN1A1,"patin1af"
.
          DISPLAY   *P64:24,"patparaf";
          OPEN      PATPARA1,"patparaf"
.
          DISPLAY   *P64:24,"patpcpaf";
          OPEN      PATPCPA1,"patpcpaf"
.
          DISPLAY   *P64:24,"pmsecaaf";
          OPEN      PMSECAA2,"pmsecaaf"
          OPEN      PMSECAA3,"pmsecaaf"
.
          DISPLAY   *P64:24,"pmsectaf";
          OPEN      PMSECTA1,"pmsectaf"
.
          READ      CONTROLF,TEN3;*194,CVETINS
.
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CNEWDS
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: MAIN0000  *
.*                        Get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1 By Health Fund                                  *
.*                        2 By Claim Code                                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = By Health Fund":
                    *P1:6,*V2LON,TWO,*HOFF," = By Claim Code"
.
OPTN1000  KEYIN     *P1:8,*EL,"Select option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9500 IF EQUAL            * exit
.
          BRANCH    COPTION,OPTN9000:            * by health fund
                            OPTN9000             * by claim code
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.****************************************************************************
.*                             SDAT0000                Called by: MAIN0000  *
.*                       Get starting date                                  *
.* Returns: STRTDATE: starting date (ccyymmdd)                              *
.*          EXIT  0 = valid start date entered                              *
.*                1 = nothing entered                                       *
.****************************************************************************
.
SDAT0000  DISPLAY   *P1:13,*EF,"From Date :"
          MOVE      TEN3,CVERT
          MOVE      TEN3,CCOL
.
          CALL      IBACLOCK                     * default to current date
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,SDAT9100
          PACK      STRTDATE,CCENT,CYEAR,CMON,CDAY
.
          MATCH     STRTDATE,CURRDATE            * date in future ?
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"Date cannot be in the future.  ";
            CALL      HITENTER
            GOTO      SDAT0000
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      SDAT9999
.
SDAT9100  MOVE      ONE,EXIT
.
SDAT9999  RETURN
+
.****************************************************************************
.*                             EDAT0000                Called by: MAIN0000  *
.*                          Get ending date                                 *
.* Requires: STRTDATE - starting date (ccyymmdd)                            *
.*           CURRDATE - current date (ccyymmdd)                             *
.* Returns: ENDDATE: ending date (ccyymmdd)                                 *
.*          EXIT  0 = valid end date entered                                *
.*                1 = nothing entered                                       *
.****************************************************************************
.
EDAT0000  DISPLAY   *P1:14,*EL,"To   Date :"
          MOVE      TEN4,CVERT
          MOVE      TEN3,CCOL
.
          UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,EDAT0000
          PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY
.
          MATCH     STRTDATE,ENDDATE             * start date > end date ?
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"Start date greater than end date.  ";
            CALL      HITENTER
            GOTO      EDAT0000
          ENDIF
.
          MATCH     ENDDATE,CURRDATE             * date in future ?
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"Date cannot be in the future.  ";
            CALL      HITENTER
            GOTO      EDAT0000
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      EDAT9999
.
EDAT9100  MOVE      ONE,EXIT
.
EDAT9999  RETURN
+
.*****************************************************************************
.*                                 GFND0000        Called by: MAIN0000       *
.*               Get the user to keyin a health fund code                    *
.* Returns: EXIT   0 = Valid Health Fund selected                            *
.*                 1 = nothing, exitchar or spaces input                     *
.*****************************************************************************
.
GFND0000  MOVE      TEN,EVERT
          MOVE      TEN5,ECOL
          MOVE      SP6,CKYIDEF6
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
.
          DISPLAY   *P1:10,*EF,"Health Fund :";
          CALL      PATFNDKY
          BRANCH    EXIT,GFND9100:               * nothing input
                         GFND9100:               * exitchar input
                         GFND9100                * spaces input
.
.         Check if the health fund is participating in EDI
.
          MOVE      HCODE,KEY6
          CALL      RDPTFX11
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Health Fund extension record not found.  ";
            CALL      HITENTER
            GOTO      GFND0000
          ENDIF
.
          COMPARE   THREE,PTFXEXTR               * using Eclipse ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Health Fund not using Eclipse.  ";
            CALL      HITENTER
            GOTO      GFND0000
          ENDIF
.
.         Check the health fund's Participant code
.
          MOVE      SP70,ECLKEY3
          MATCH     SP70,PTFXECLP
          IF        @EQUAL | @EOS
            MATCH     SP3,PTHFHGRP                 * blank health fund group ?
            IF        @EQUAL
              DISPLAY   *P1:24,*EL,*B,"Participant code blank.  ";    * yes
              CALL      HITENTER
              GOTO      GFND0000
            ELSE
              MOVE      PTHFHGRP,ECLKEY3
            ENDIF
          ELSE
            MOVE      PTFXECLP,ECLKEY3
          ENDIF
.
          MOVE      ECLKEY3,KEY3
          CALL      RDPTPAR1                     * participant code on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Participant code not found.  ";  * no
            CALL      HITENTER
            GOTO      GFND0000
          ENDIF
.
.         Make sure that the participant is not DVA
.
          MATCH     CVETINS,ECLKEY3
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Process DVA claims by claim code.  ";
            CALL      HITENTER
            GOTO      GFND9100
          ENDIF
.
.         Check that the participant has IHC capability
.
          MOVE      ECLKEY3,KEY3
          PACK      KEY9,KEY3,ANSI,ANSH,ANSC,SP3
          CALL      RDPTPCP1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Participant cannot accept IHC's.  ";
            CALL      HITENTER
            GOTO      GFND0000
          ENDIF
.
.         Valid health fund entered
.
          DISPLAY   *P30:10,HFNAME;
.
          MOVE      ZERO,EXIT
          GOTO      GFND9999
.
GFND9100  MOVE      ONE,EXIT
.
GFND9999  RETURN
+
.*****************************************************************************
.*                                 GCLM0000        Called by: MAIN0000       *
.*               Get the user to keyin a claim code                          *
.* Returns: EXIT   0 = Valid Claim Code selected                             *
.*                 1 = nothing, exitchar or spaces input                     *
.*          CLAMCODE - Claim code (Cat CL)                                   *
.*          CLAMDESC - Calim Code description                                *
.*****************************************************************************
.
GCLM0000  MATCH     SP6,CVETINS
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Insurance code for DVA is blank.  ";
            CALL      HITENTER
            GOTO      GCLM9100
          ENDIF
.
.         Check the insurer's record
.
          PACK      KEY6,CVETINS,SP6
          CALL      RDINSR1                      * insurance company on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Insurance code not found.  ";  * no
            CALL      HITENTER
            GOTO      GCLM9100
          ENDIF
.
.         Check the insurer's Participant code
.
          MOVE      CVETINS,KEY3
          CALL      RDPTPAR1                     * participant code on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Participant code not found.  ";  * no
            CALL      HITENTER
            GOTO      GCLM9100
          ENDIF
.
.         Check that the participant has IHC capability
.         
          MOVE      CVETINS,KEY3
          PACK      KEY9,KEY3,ANSI,ANSH,ANSC,SP3
          CALL      RDPTPCP1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Participant (",*V2LON,CVETINS,*HOFF:
                      ") cannot accept IHC's.  ";
            CALL      HITENTER
            GOTO      GCLM9100
          ENDIF
.
GCLM1000  MOVE      TEN,EVERT
          MOVE      TEN4,ECOL
          PACK      CODE,ANSC,ANSL
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
.
          DISPLAY   *P1:10,*EF,"Claim Code :";
          CALL      PATCODKY
          BRANCH    EXIT,GCLM9100:               * nothing input
                         GCLM9100:               * exitchar input
                         GCLM9100                * spaces input
.
.         Valid claim code entered, so check that this is a DVA code
.
          MOVE      ZERO,FORM1
          WHILE     FORM1 < 5
            ADD       ONE,FORM1
            LOAD      ANS,FORM1,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
            MATCH     ANSV,ANS                   * DVA code ?
            GOTO      GCLM5000 IF EQUAL          * yes
          DO
.
          DISPLAY   *P1:24,*EL,*B,"Claim code not DVA related.  ";
          CALL      HITENTER
          GOTO      GCLM1000
.
GCLM5000  DISPLAY   *P30:10,TDESC;
          MOVE      ACODE,CLAMCODE               * save claim code
          MOVE      TDESC,CLAMDESC               * save claim code description
.
          MOVE      ZERO,EXIT
          GOTO      GCLM9999
.
GCLM9100  MOVE      ONE,EXIT
.
GCLM9999  RETURN
+
.****************************************************************************
.*                               LOAD0000              Called by: MAIN0000  *
.*                  Load the records for printing                           *
.* Requires: STRTDATE - staring date                                        *
.*           ENDDATE  - ending date                                         *
.* Returns: EXIT  0 = Valid records found for printing                      *
.*                1 = No records found for printing                         *
.****************************************************************************
.
LOAD0000  DISPLAY   *P1:24,*EL,"Processing:"
          MOVE      ZERO,COUNTER                 * initialise record count
.
.         Loop through the pmsecaaf table looking for records where a
.         claim has been submitted within the selected date range
.
          PACK      KEY26,STRTDATE,SP30
          CALL      RSPMECA2                     * position in batch file
LOAD0500  CALL      RKPMECA2                     * read next record
          BRANCH    OVRCD,LOAD8000               * eof - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,PMEADATE,PMEATIME,PMEATYPE,PMEAINVN
.
          MATCH     PMEADATE,ENDDATE             * still in date range ?
          GOTO      LOAD8000 IF LESS             * yes - finished
.
          COMPARE   FOUR,PMEASTAT                * received status ?
          GOTO      LOAD0500 IF NOT EQUAL        * no - get next record
.
          MATCH     " 0",PMEATYPE                * was this a claim submission ?
          GOTO      LOAD0500 IF NOT EQUAL        * no - get next record
.
.         A record has been found where a claim was received by Medicare
.         within the date range, so write a record to the temp file.
.
          PACK      SAVKEY26,PMEADATE,PMEATIME,PMEATYPE,PMEAINVN
          ADD       ONE,COUNTER                  * increment counter
          MOVE      PMEADATE,SAVEDATE            * save date claim received
          MOVE      PMEAINVN,SAVEINVN            * save invoice number
          MOVE      PMEABATN,SAVEBATN            * save batch number
.
          MOVE      " 4",FINLSTAT                * init. status to "received"
          MOVE      SAVEDATE,LASTDATE            * save status date
          MOVE      ZERO,LASTSTAT                * initialise last status
.
.         Using index 3 of pmsecaaf, position on the current record and
.         read forward to get all the records for this claim
.
          PACK      KEY34,SAVEINVN,SAVEBATN,SP30,SP10
          CALL      RSPMECA3                     * position in file
LOAD1000  CALL      RKPMECA3                     * read next record
          BRANCH    OVRCD,LOAD3000               * eof - shouldn't happen
.
          MATCH     SAVEINVN,PMEAINVN            * same invoice still ?
          GOTO      LOAD3000 IF NOT EQUAL        * no - shouldn't happen
.
          MATCH     SAVEBATN,PMEABATN            * same batch still ?
          GOTO      LOAD3000 IF NOT EQUAL        * no - shouldn't happen
.
.         Another history record has been found for this batch claim
.         so check if this is a status request response or a report
.         request response.
.
          MATCH     " 2",PMEATYPE                * status request response
          GOTO      LOAD2000 IF EQUAL            * yes
.
          MATCH     " 4",PMEATYPE                * report request response
          GOTO      LOAD1000 IF NOT EQUAL        * no - ignore record
.
.         A status request or a report request response has been found,
.         so load the status and status date
.
LOAD2000  MOVE      PMEASTAT,FINLSTAT            * save new status
          MOVE      PMEADATE,LASTDATE            * save status date
.
.         See if this is a final medicare status
.
          BRANCH    PMEASTAT,LOAD1000:           * N/A
                             LOAD1000:           * N/A
                             LOAD1000:           * N/A
                             LOAD1000:           * Received
                             LOAD3000:           * HF Unverified
                             LOAD1000:           * HF Verified
                             LOAD1000:           * HF Assessing
                             LOAD1000:           * Interim Report Ready
                             LOAD1000:           * Interim Reported
                             LOAD1000:           * HF Rejected Ready
                             LOAD1000:           * Assessment Ready
                             LOAD3000:           * HF Rejected Reported
                             LOAD2500:           * Assessment Reported
                             LOAD3000:           * Remittance Reported
                             LOAD3000            * N/A
          GOTO      LOAD1000                     * get next record
.
.         The claim reached the "Assessment Reported" stage, so calculate
.         the number of days to get to this status and write/update the
.         assessment status count.
.         When writing or updating the record, assume for now that the
.         "Assessment Reported" status is the final status for the claim.
.
LOAD2500  DAYSEP    SAVEDATE,LASTDATE,DAYCOUNT
.
          MOVE      FINLSTAT,KEY2
          CALL      RDTEMP1
          IF        OVRCD = 0
            ADD       ONE,ASESTOTL
            ADD       ONE,STATTOTL
            ADD       DAYCOUNT,DYTOSTAT
            CALL      UPTEMP1
          ELSE
            MOVE      ONE,ASESTOTL
            MOVE      ONE,STATTOTL
            MOVE      DAYCOUNT,DYTOSTAT
            CALL      WRTEMP1
          ENDIF
.
          MOVE      FINLSTAT,LASTSTAT            * save status
          GOTO      LOAD1000                     * get next record
.
.         The last history record for this batch claim has been found,
.         so check if the status has changed from "received" and if so,
.         calculate the days elapsed since the claim was "received".
.
LOAD3000  COMPARE   TEN3,FINLSTAT                * assessment reported ?
          GOTO      LOAD4000 IF EQUAL            * yes - already processed
.
.         If the status is "Received", "HF Verified", "HF Assessing",
.         "Interim Ready" or "Interim Reported", then no need to collate
.         the count, as these will represent all those claims still in
.         the pipeline waiting for assessment.
.
          IF        FINLSTAT = 4|(FINLSTAT > 5 & FINLSTAT < 10)
            GOTO      LOAD4000
          ENDIF
.
          DAYSEP    SAVEDATE,LASTDATE,DAYCOUNT
.
          MOVE      FINLSTAT,KEY2
          CALL      RDTEMP1
          IF        OVRCD = 0
            ADD       ONE,STATTOTL
            ADD       DAYCOUNT,DYTOSTAT
            CALL      UPTEMP1
          ELSE
            MOVE      ZERO,ASESTOTL
            MOVE      ONE,STATTOTL
            MOVE      DAYCOUNT,DYTOSTAT
            CALL      WRTEMP1
          ENDIF
.
.         If the final status of the claim is "Remittance Reported"
.         and the previous status for the claim was "Assessment Reported",
.         then adjust the status counts for "Assessment Reported" claims.
.
          IF          FINLSTAT = 14 & LASTSTAT = 13
            MOVE      TEN3,KEY2
            CALL      RDTEMP1
            IF        OVRCD = 0
              SUB       ONE,STATTOTL
              CALL      UPTEMP1
            ENDIF
          ENDIF
.
LOAD4000  MOVE      SAVKEY26,KEY26
          CALL      RSPMECA2                     * reposition on original record
          GOTO      LOAD0500                     * get next record
.
.         All records have been loaded for the selected period, so write
.         a record to print the total number of claims sent
.
LOAD8000  MOVE      COUNTER,STATTOTL             * load sent count
          MOVE      FOUR,FINLSTAT                * set status to "Received"
          MOVE      ZERO,DYTOSTAT
          CALL      WRTEMP1
.
LOAD9999  RETURN
+
.****************************************************************************
.*                            PRIN0000                 Called by: MAIN0000  *
.* Requires: STRTDATE - staring date                                        *
.*           ENDDATE  - ending date                                         *
.* Returns: EXIT  0 = Valid records found for printing                      *
.*                1 = No records found for printing                         *
.****************************************************************************
.
PRIN0000  MOVE      ZERO,CPAGENO                 * initialise print variables
          MOVE      ZERO,CNOUNDLN
          CALL      IBACLOCK
          MOVE      ZERO,COUNTER                 * initialise record count
          MOVE      ZERO,GRNDTOTL                * initialise grand total
.
          CALL      HEAD0000                     * print 1st page header
.
          MOVE      SP2,KEY2
          CALL      RSTEMP1                      * position at start of file
PRIN0500  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,PRIN9500               * eof - finished
.
          CALL      DISP0000                     * print record
          GOTO      PRIN0500                     * get next record
.
PRIN9500  PRINT     "|                        |---------------------|--":
                    "------------------------------------------------":
                    "---------------------------------|"
          PRINT     *1,PIPE,*3,"Grand Total",*26,PIPE,*28,GRNDTOTAL:
                    *48,PIPE,*62,"N/A",*132,PIPE
          ADD       TWO,CLNO
          CALL      LINE0000
          ASSIGN    (SENTTOTL-GRNDTOTL),SENTTOTL
          PRINT     *1,PIPE,*3,"Assessing",*26,PIPE,*28,SENTTOTL:
                    *48,PIPE,*62,"N/A",*132,PIPE
          ADD       ONE,CLNO
          CALL      LINE0000
.
          PRINT     *N,LBRACK,ONE,RBRACK:
                       " This report only relates to claims sent to ":
                       "Medicare within the specified period.":
                    *N,*5,"The statuses for those claims have been collated ":
                          "up to the date that the report was run."
.
          PRINT     *N,LBRACK,TWO,RBRACK:
                       " Assessment Reported is not a final Medicare":
                       " status for a claim.":
                    *N,*5,"The total number only represents those claims where":
                          " Assessment Reported is the last status received ":
                          "from Medicare.":
                    *N,*5,"The number in square brackets, represents the ":
                          "number of claims that have had this status, but ":
                          "does not necessarily":
                    *N,*5,"represent the last status received from Medicare, ":
                          "as they may have subsequently proceeded to ":
                          "Remittance Reported."
.
          PRINT     *N,LBRACK,THREE,RBRACK:
                       " Average No. of Days will depend on the frequency ":
                       "that the Eclipse Request Server (ECLOBSRV) is run."
.
          PRINT     *N,*N,*N,*1,"*** End of Report ***"
.
PRIN9999  RETURN
+
.****************************************************************************
.*                            DISP0000                 Called by: PRIN0000  *
.*                  Valid record so print it                                *
.****************************************************************************
.
.         Load the status description
.
DISP0000  ADD       ONE,COUNTER                  * increment record count
.
          LOAD      STATDESC,FINLSTAT,SP20,SP20,SP20,STATUS04:
                                      STATUS05,STATUS06,STATUS07,STATUS08:
                                      STATUS09,STATUS10,STATUS11,STATUS12:
                                      STATUS13,STATUS14
.
          IF        FINLSTAT = 4
            PRINT     *1,PIPE,*3,STATDESC,*26,PIPE,*28,STATTOTL,*48,PIPE:
                      *62,"N/A",*132,PIPE
            MOVE      STATTOTL,SENTTOTL          * save sent claim total
          ELSE
            COMPARE   TWO,COUNTER                * first status after received ?
            CALL      LINE0000 IF EQUAL          * yes
.
            ADD       STATTOTL,GRNDTOTL          * update grand total
.
            IF        FINLSTAT = 13
              ASSIGN    (DYTOSTAT/ASESTOTL),FORM5P1  * calculate average days
              PACK      DIM10,LSQBRACK,ASESTOTL,RSQBRACK
              SQUEEZE   DIM10
              STRIP     STATDESC
              PRINT     *1,PIPE,*3,STATDESC,LBRACK,TWO,RBRACK:
                        *26,PIPE,*28,STATTOTL,*37,DIM10,*48,PIPE,*58,FORM5P1:
                        *132,PIPE
            ELSE
              ASSIGN    (DYTOSTAT/STATTOTL),FORM5P1  * calculate average days
              PRINT     *1,PIPE,*3,STATDESC,*26,PIPE,*28,STATTOTL:
                        *48,PIPE,*58,FORM5P1,*132,PIPE
            ENDIF
          ENDIF
.
          ADD       ONE,CLNO                     * increment line count
.
DISP9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PRIN0000  *
.*                       print page heading                                 *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          IF        COPTION = 1
            PRINT     *40,"Health Fund: ",HCODE,SP5,HFNAME
          ELSE
            PRINT     *40,"Claim Code: ",CLAMCODE,SP5,TDESC
          ENDIF
.
          UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *40,"From: ",CPCDATE;
.
          UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *58,"To: ",CPCDATE,LBRACK,ONE,RBRACK,*N
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Medicare Claim Status",*26,PIPE:
                    *28,"Total No. of Claims",*48,PIPE:
                    *50,"Average No. of Days to Last Medicare Status":
                    LBRACK,THREE,RBRACK,*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      NINE,CLNO                    * increment line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      draw line across page                     PRIN0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             Create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,TEMPFILE
.
          CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      ECLTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     ECLTEMP1                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999  RETURN
+
.****************************************************************************
.*                              CLER0000               Called by: MAIN0000  *
.*               Clear all temp file records                                *
.****************************************************************************
.
CLER0000  MOVE      SP2,KEY2
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CLER9999               * eof - finished
.
          MOVE      FINLSTAT,KEY2
          CALL      DETEMP1                      * delete record
          GOTO      CLER0000
.
CLER9999  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RSTEMP1   READ      ECLTEMP1,KEY2;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      ECLTEMP1,KEY2;DFINSTAT,STATTOTL,ASESTOTL,DYTOSTAT
          GOTO      OVERCOND IF OVER
          MOVE      DFINSTAT,FINLSTAT
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    ECLTEMP1;DFINSTAT,STATTOTL,ASESTOTL,DYTOSTAT
          GOTO      OVERCOND IF OVER
          MOVE      DFINSTAT,FINLSTAT
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    ECLTEMP1;DFINSTAT,STATTOTL,ASESTOTL,DYTOSTAT
          GOTO      OVERCOND IF OVER
          MOVE      DFINSTAT,FINLSTAT
          RETURN
.
WRTEMP1   MOVE      FINLSTAT,DFINSTAT
          WRITE     ECLTEMP1,KEY2;DFINSTAT,STATTOTL,ASESTOTL,DYTOSTAT
          RETURN
.
UPTEMP1   MOVE      FINLSTAT,DFINSTAT
          UPDATE    ECLTEMP1;DFINSTAT,STATTOTL,ASESTOTL,DYTOSTAT
          RETURN
.
DETEMP1   DELETE    ECLTEMP1,KEY2
          RETURN
+
. =========================================================================
.  I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       PATCODKY
          INC       PATFNDKY
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PATCODIO/INC
          INC       PATFN1IO/INC
          INC       PATFX1IO/INC
          INC       PATIN1IO/INC
          INC       PATPARIO/INC
          INC       PATPCPIO/INC
          INC       PMSECAIO/INC
          INC       PMSECTIO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
