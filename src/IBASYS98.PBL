.******************************************************************************
.*                                                                            *
.*                        P R O G R A M   S U M M A R Y                       *
.*                        -------------   -------------                       *
.*                                                                            *
.*     PROGRAM NAME:     IBASYS98                                             *
.*                                                                            *
.*     FUNCTION:         SYSTEM PARAMETER MAINTENANCE                         *
.*                                                                            *
.*     DATE WRITTEN:     28/01/1988                                           *
.*                                                                            *
.*     AUTHOR :          MALCOLM HAYSE                                        *
.*                                                                            *
.* Modifications  :                                                           *
.*        V9.08.01  09/02/2007  J.Tan             CAR 120001                  *
.*                  Added Type of Other GST                                   *
.*        V9.04.01  07/04/2005  Steve Armstrong   CAR 60343                   *
.*                  Removed IBCNSATO - no longer used                         *
.******************************************************************************
.*        C2.09.B01 30.11.2000  Sandra Barcham                                *
.*                  Added IBA Controlled parameter for Using BAS Codes        *
.******************************************************************************
.*        C2.00.05  23/10/2000  Dean Cramer                                   *
.*                  Added IBA Controlled parameter for next HL7 message id    *
.*        C2.00.04  05/10/2000  Dean Cramer                                   *
.*                  Added IBA Controlled parameter for Label Printer is use   *
.*        C2.00.03  27/04/2000  J Habasque                                    *
.*                  Added GST Controlled Screen                               *
.*        C2.00.02  08/03/2000  J.Tan                                         *
.*                  Changed CUSEGST to IBCNUGST                               *
.*        C2.00.01  17/01/2000  Davin                                         *
.*                  Added CUSEGST to IBA Screen 1 (moved from PAT98)          *
.*                  Added IBCNABNN to Hospital Screen 1 (for GST)             *
.******************************************************************************
.*       V5.07.B01  08/01/1999  Jim Stathopoulos                              *
.*                  Removed keyin of Field 13 in IBA Screen 1                 *
.******************************************************************************
.*        C1.00.08  08/06/1998  Steve Armstrong                               *
.*                  Mods for new login security feature                       *
.*        C1.00.07  23/10/1996   The Lion King   Holy Spirit Mods             *
.*                  Added Misc charge to use for Phone Biling                 *
.*        C1.00.06  03/10/1996   Greg Horvat     Holy Spirit Mods             *
.*                  Added keyin of IBCNAPST to IBA Screen 1                   *
.*        C1.00.05  28/03/1996   Whirlpool  (Release 5.04)                    *
.*                  added keyin of IBCNSUSE to IBA Screen 1                   *
.*        C1.00.04  27/03/1996    Justin Coates                               *
.*                  added keyin of ibcnaqop to IBA Screen 1                   *
.*        C1.00.03  05/01/1996  Greg Horvat                                   *
.*                  Changed to use a standard keyin for the IBA screen        *
.*                  security password                                         *
.*        C1.00.02  13/11/1995    Justin Coates  (SUHT mods)                  *
.*                  added keyin of ibcnpltr to IBA Screen 1                   *
.*                  added keyin of ibcnuday to IBA Screen 1                   *
.*        C1.00.01  08/06/1995  Greg Horvat                                   *
.*                  When selecting available systems changed the (M)ore &     *
.*                  (A)ccept Screen options to work correctly. Changed to use *
.*                  MAINQST instead of Post (Y/N/C) and fixed the line 2      *
.*                  displays.                                                 *
.******************************************************************************
.*     MODIFICATIONS:  V5.01.02  30/09/89 Graeme Williams                     *
.*                               Added EXITCHAR                               *
.*                     V5.01.03  11/10/89 Graeme Williams                     *
.*                               Added Dietary to IBACONFD                    *
.*                     V5.01.04  22/01/90 Steve O'Gorman                      *
.*                               Added Hospital Control Screen with Time-outs *
.*                               & Counter on Security Access Levels          *
.*                               Added Flag to say writing to the invalid menu*
.*                               selection audit file                         *
.*                     V5.01.05  02/04/90 Graeme Williams                     *
.*                               Added Nursing Station                        *
.*                     V5.01.06  31/05/90 Graeme Williams                     *
.*                               Added Receive orders and N.S. management     *
.*                               system menu                                  *
.*                     V5.01.07  10/07/90 Steve O'Gorman   SRF 104886         *
.*                               Added Log-Out                                *
.*                     V5.01.08  21/07/90 Steve O'Gorman                      *
.*                               Added Day Centre to IBACON                   *
.*                     V5.01.09  21/07/91 Graeme Williams                     *
.*                               Added trust accounting                       *
.*                               Removed Ward Order Entry                     *
.*                        V5.10  25/11/91 i chung          SRF 110895         *
.*                               Transfered CHOSPNUM from IBAPAT98            *
.*                                                                            *
.*        V6.00.00  12/08/1991  Steve O'Gorman                                *
.*                  Added New IBAMENU parameter.                              *
.*                  Allowed available Systems to work off new files.          *
.*                  Added IBCNMESS for next message number for FKEY.          *
.*                  Post Comp. Sector Key to Pos 42 in Sector 2               *
.*        V6.00.01  15/07/1992    Justin Coates  SRF 115226                   *
.*                  Added keyin of century to IBA screen                      *
.*        V6.00.02  24/09/1993    Steve O'Gorman SRF 123507                   *
.*                  Added set-up of system numbers for use in BIL19           *
.*                                                                            *
.*        V6.01.01  18/04/1994 Global Recompile                               *
.*        V6.01.02  28/04/1994    Gabrielle      SRF 128772                   *
.*                  Fixed clearing out the fields in IBA screen 2             *
.*                                                                            *
.******************************************************************************
+
          INC       STDGENDF
.
          INC       IBACONFD/INC
          INC       IBAPASFD/INC
          INC       IBASMAFD/INC
          INC       IBAUSEFD/INC
.
          INC       PATHOSFD/INC
+
.
ACTION    FORM      1
ADDFLAG   FORM      1
AVAIL     FORM      1[60]
.
CHOSPNUM  FORM      2
CODDESCW  DIM       20
CODDESCM  DIM       20
CODDESCV  DIM       20
CODDESCX  DIM       20
.
CODE      DIM       3
CODEA     INIT      "A  "
CODEDC    INIT      "DC "
CODECL    INIT      "CL "
COUNT     FORM      3
.
DANSX     DIM       3
DANS1     DIM       3
DANS2     DIM       3
DANS3     DIM       3
DANS4     DIM       3
DANS5     DIM       3
DANS6     DIM       3
DANS7     DIM       3
DANS8     DIM       3
DANS9     DIM       3
DANS10    DIM       3
DANS13    DIM       3
DANS14    DIM       3
DANS15    DIM       3
DANS16    DIM       3
DANS17    DIM       3
.
DESC1     DIM       30
DESC2     DIM       30
DESC3     DIM       30
DESC4     DIM       30
DESC5     DIM       30
DESC6     DIM       30
.
DHTYPE    DIM       10
DHTYPE1   INIT      "D.V.C.H. "
DHTYPE2   INIT      "A.H.R.   "
DHTYPE3   INIT      "EPWORTH  "
DHTYPE4   INIT      "W.C.H.   "
DHTYPE5   INIT      "MERCY    "
.
DIM20     DIM       20
DIM51     DIM       5
DIM52     DIM       5
DIM53     DIM       5
.
DIRCOL    FORM      2                * COLUMN DIRECT SYSTEM IS IN
DIRLINE   FORM      2                * DIRECT SYSTEM LINE NUMBER
DIRPOS    FORM      2                * POSTION & VALUE OF ACTUAL DIRECT SYTEM
.
DLSIZE    DIM       30
DLSIZE1   INIT      "Small (37 Char Seperation)  "
DLSIZE2   INIT      "Wide  (42 Char Seperation)  "
.
DLARGE    INIT      "Large"
DSMALL    INIT      "Small"
DOFF      INIT      "Off"
DON       INIT      "On "
.
DMONTH    DIM       10
DMONTH1   INIT      "January   "
DMONTH2   INIT      "February  "
DMONTH3   INIT      "March     "
DMONTH4   INIT      "April     "
DMONTH5   INIT      "May       "
DMONTH6   INIT      "June      "
DMONTH7   INIT      "July      "
DMONTH8   INIT      "August    "
DMONTH9   INIT      "September "
DMONTH10  INIT      "October   "
DMONTH11  INIT      "November  "
DMONTH12  INIT      "December  "
.
EXITCHR   DIM       1
.
FIELD     FORM      2
FORM1A    FORM      1
FORM2A    FORM      2
FORM2B    FORM      2
FORM2C    FORM      2
FORM2D    FORM      2
FORM2E    FORM      2
FORM6A    FORM      6
FORM6B    FORM      6
FORM6C    FORM      6
FORM6D    FORM      6
FORM8     FORM      8
GSTPASS   INIT      "IBAGST"
.
HADEL     DIM       30               * variable in DELIVERY POINT descriptions
HAPERM    DIM       10               * variable in MONTH descriptions
.
INDEX     FORM      2
ITEMNO    FORM      2
.
LINE      FORM      2
LN        FORM      2[60]
LNO       FORM      3                * printing
.
MAXOPT    FORM      "56"             * Must change by Number of Options to be
.                                      added i.e. one neW option then add one
.                                      to MAXOPT
NEW       FORM      6
NUM       FORM      3
.
OPCNT     FORM      2
OPLINE    FORM      2
OPTS      FORM      2                * Options 1-55 in IBACONFD/INC
OPTXX     DIM       20
OTHOPT    FORM      2
.
PAGE      FORM      1
PASS      DIM       8
POS       FORM      2                * Position in SYSNUMB
POSA      FORM      2                * Position in SYSNUMB1
POSB      FORM      2                * Position in SYSNUMB2
.
REPFLAG   FORM      1
.
SC1       FORM      2
SC2       FORM      2
SC3       FORM      2
SC4       FORM      2
SC5       FORM      2
SC6       FORM      2
SC7       FORM      2
SC8       FORM      2
SC9       FORM      2
SC10      FORM      2
SC11      FORM      2
SC12      FORM      2
SC13      FORM      2
SC14      FORM      2
SC15      FORM      2
SC16      FORM      2
SC17      FORM      2
SC18      FORM      2
SC19      FORM      2
SC20      FORM      2
SC21      FORM      2
SC22      FORM      2
SC23      FORM      2
SC24      FORM      2
SC25      FORM      2
SC26      FORM      2
SC27      FORM      2
SC28      FORM      2
SC29      FORM      2
SC30      FORM      2
SC31      FORM      2
SC32      FORM      2
SC33      FORM      2
SC34      FORM      2
SC35      FORM      2
SC36      FORM      2
SC37      FORM      2
SC38      FORM      2
SC39      FORM      2
SC40      FORM      2
SC41      FORM      2
SC42      FORM      2
SC43      FORM      2
SC44      FORM      2
SC45      FORM      2
SC46      FORM      2
SC47      FORM      2
SC48      FORM      2
SC49      FORM      2
SC50      FORM      2
SC51      FORM      2
SC52      FORM      2
SC53      FORM      2
SC54      FORM      2
SC55      FORM      2
.
SCCC      FORM      2         * century to input
SCREEN    FORM      2
SEC       FORM      5
SECTAB    FORM      2
SLA       FORM      1
SLB       DIM       1
SP40      INIT      "                                        "
STLEV     FORM      1
.STRING   INIT      "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ"
.
TAB       FORM      2
TOTAL     FORM      5
.
UGSTDSC   DIM       10
UGSTDSC0  INIT      "No GST   "
UGSTDSC1  INIT      "NZ GST   "
UGSTDSC2  INIT      "AUS GST  "
UGSTDSC3  INIT      "Other GST"
.
UNKS      INIT      "Unknown System Number         "
.
XFORM2    FORM      2
XFORM6    FORM      6
.
XX1       FORM      5
XX2       FORM      5
XX3       FORM      5
XX4       FORM      5
XX5       FORM      5
XX6       FORM      5
.
PRGID     INIT      "IBASYS98"
PRGNAM    INIT      "System Parameter Maintenance"
VERSION   INIT      "V12.00.00"
+
.         START OF PROGRAM
.
          CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"ibasmaaf";
          OPEN      IBASMAA1,"ibasmaaf"
.
          DISPLAY   *P64:24,"ibauseaf";
          OPEN      IBAUSEA1,"ibauseaf"
.
          DISPLAY   *P64:24,"ihapassf";
          OPEN      IHAPASS1,"ihapassf"
.
          DISPLAY   *P64:24,"pathospf";
          OPEN      PATHOSP2,"pathospf"
.
          MOVE      SECLEV TO FORM1
          COMPARE   NINE,FORM1
          GOTO      START0 IF NOT LESS
.
          DISPLAY   *P1:1,*ES,*P5:6,*B,*V2LON:
                    "** Your Clearance Level is INADEQUATE **",*W2;
.
ENDPGM    READ      CONTROLF,TWO;*154,CMENUSYS
          CHAIN     CMENUSYS
+
.
.         START PROCESSING
.
START0    CALL      SCREN000
          BRANCH    EXIT,ENDIT
.
START01   BRANCH    SCREEN,IBACN000,HOSCN000,GSTCN000
.
IBACN000  CALL      IBASECUR                * Keyin IBA screen security passwd
          BRANCH    EXIT,START0
.
START     MOVE      ZERO,OVRCD
          MOVE      ZERO,REPFLAG
.
.         HLINE     *G37,2,54,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Available Systems":
                    *P1:6,*V2LON,TWO,*HOFF," = I.B.A. Controlled Screen 1":
                    *P1:7,*V2LON,THREE,*HOFF," = I.B.A. Controlled Screen 2":
                    *P1:9,*EL,"Select Option :";
.
REKEY1    KEYIN     *P17:9,*EL,*DV,UNDLN1,*P17:9,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      START0 IF EQUAL
.
REPEAT    BRANCH    OPTION OF DOSYST,DOIBA1,DOIBA2
          BEEP
          GOTO      REKEY1
.
DOSYST    CALL      NSYS0000
          GOTO      START
.
DOIBA1    CALL      DISPIBA1
          MOVE      ONE,EXIT
          CALL      UPIBA1
          BRANCH    EXIT,START
          CALL      WRIBA1
          GOTO      START
.
DOIBA2    CALL      DISPIBA2
          MOVE      ONE,EXIT
          CALL      UIB20000
          BRANCH    EXIT,START
          CALL      WRIBA2
          GOTO      START
.
.        Select the field to update
.
SFIELDS   CALL      MAINQST
          MOVE      CCITEM,OPTS
.
          COMPARE   "-1",OPTS
          GOTO      START IF EQUAL
.
          COMPARE   ZERO,OPTS
          GOTO      POSTS IF EQUAL
.
          COMPARE   OPCNT TO OPTS
          GOTO      ANOLD4A IF LESS
.
INVFLDS   BEEP
          GOTO      SFIELDS
.
POSTS     KEYIN     *P1:24,*EL,"Ok to Post (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS
          GOTO      START IF EQUAL
          MATCH     ANSY,ANS
          GOTO      POSTSCNT IF EQUAL
          BEEP
          GOTO      POSTS
.
POSTSCNT  DISPLAY   *P40:24,*V2LON,"*** Posting ***"
.
          WRITAB    CONTROLF,TWO;*120,SYSNUMB2,*162,SYSNUMB,*223,SYSNUMB1
.
          DISPLAY   *P40:24,*V2LON,"*** Data Successfully Posted ***"
          GOTO      START
.
ANOLD4A   MOVE      LN[OPTS],LINE
.
          LOAD      TAB,OPTS,SC1,SC2,SC3,SC4,SC5,SC6,SC7,SC8,SC9,SC10,SC11,SC12:
                             SC13,SC14,SC15,SC16,SC17,SC18,SC19,SC20,SC21,SC22:
                             SC23,SC24,SC25,SC26,SC27,SC28,SC29,SC30,SC31,SC32:
                             SC33,SC34,SC35,SC36,SC37,SC38,SC39,SC40,SC41,SC42:
                             SC43,SC44,SC45,SC46,SC47,SC48,SC49,SC50,SC51,SC52:
                             SC53,SC54,SC55
.
OKTEST    COMPARE   "56" TO OPTS
          GOTO      INVFLDS IF NOT LESS
.
CHKOPTS   COMPARE   "20" TO OPTS
          GOTO      LEFTHS IF LESS
.
          COMPARE   "39" TO OPTS
          GOTO      MIDSID IF LESS
.
OKRIGHT   KEYIN     *P78:LINE,"   ",*V2LON,*P78:LINE,ANS;
          MOVE      DYES,DANSX
          MOVE      "1",SLA
          MATCH     ANSY,ANS
          GOTO      ENDRGHT IF EQUAL
          MOVE      DNO,DANSX
          MOVE      "0",SLA
.
ENDRGHT   DISPLAY   *P78:LINE,*V2LON,DANSX;
          GOTO      POSTSIT
.
MIDSID    KEYIN     *P51:LINE,"   ",*V2LON,*P51:LINE,ANS;
          MOVE      DYES,DANSX
          MOVE      "1",SLA
          MATCH     ANSY,ANS
          GOTO      ENDMID IF EQUAL
          MOVE      DNO,DANSX
          MOVE      "0",SLA
.
ENDMID    DISPLAY   *P51:LINE,*V2LON,DANSX;
          GOTO      POSTSIT
.
LEFTHS    KEYIN     *P24:LINE,"   ",*V2LON,*P24:LINE,ANS;
          MOVE      DYES,DANSX
          MOVE      "1",SLA
          MATCH     ANSY,ANS
          GOTO      ENDLEFT IF EQUAL
          MOVE      DNO,DANSX
          MOVE      "0",SLA
.
ENDLEFT   DISPLAY   *P24:LINE,*V2LON,DANSX;
.
POSTSIT   COMPARE   "21" TO TAB
          GOTO      MOADIT5 IF LESS
.
          COMPARE   "31" TO TAB
          GOTO      MOADIT4A IF LESS
.
          SUB       "30" FROM TAB
          RESET     SYSNUMB2 TO TAB
          MOVE      SLA TO DIM1
          RESET     DIM1
          CMOVE     DIM1 TO SYSNUMB2
          GOTO      SFIELDS
.
MOADIT4A  SUB       "20" FROM TAB
          RESET     SYSNUMB1 TO TAB
          MOVE      SLA TO DIM1
          RESET     DIM1
          CMOVE     DIM1 TO SYSNUMB1
          GOTO      SFIELDS
.
MOADIT5   RESET     SYSNUMB TO TAB
          MOVE      SLA TO DIM1
          RESET     DIM1
          CMOVE     DIM1 TO SYSNUMB
          GOTO      SFIELDS
.
NOTON     DISPLAY   *P1:6,*B,*V2LON,"*** Not on File ***",*W3;
          GOTO      DOSYST
+
.********************************************************************** 
.*                              CLAR0000                              *
.*                       Clear the Screen Array                       *
.********************************************************************** 
CLAR0000  MOVE      ONE,FORM2
.
          WHILE     FORM2<61
            MOVE      SP1,AVAIL[FORM2]
            ADD       ONE,FORM2
          DO
.
          RETURN
+
.********************************************************************** 
.*                              NSYS0000                              *
.*                   Display Systems from New Files                   *
.********************************************************************** 
NSYS0000  DISPLAY   *P1:3,*EF,*P32:3,*ULON,*V2LON,"Available Systems";
.
          CALL      CLAR0000                * Clear the Array
.
          MOVE      FOUR,CVERT
          MOVE      ONE,POS
          MOVE      ONE,FIELD
          MOVE      ONE,CCOL
          MOVE      ZERO,PAGE
.
          PACK      KEY3,SP3
          CALL      RSIBSMA1
.
NSYS1000  CALL      RKIBSMA1
          BRANCH    OVRCD,NSYS2000
.
          MOVE      ZERO,FORM1
          MOVE      IBSMAVAL,FORM1
.
          MOVE      DNO,DANS1
          LOAD      DANS1,FORM1,DYES
.
          MOVE      IBSMAVAL,AVAIL[POS]
          DISPLAY   *PCCOL:CVERT,*V2LON,FIELD,*HOFF,DOT,IBSMNATV:
                                 *V2LON,DANS1;
.
          ADD       ONE,CVERT
          ADD       ONE,POS
          ADD       ONE,FIELD
.
          COMPARE   TWENTY3,CVERT
          GOTO      NSYS1000 IF LESS
.
          MOVE      FOUR,CVERT
          ADD       "27",CCOL
.
          COMPARE   "80",CCOL
          GOTO      NSYS1000 IF LESS
.
.         New Page
.
          DISPLAY   *P1:24,"(",*V2LON,"M",*HOFF,")ore, (",*V2LON,"A":
                    *HOFF,")ccept Screen : ";
.
NSYS1900  KEYIN     *P28:24,*EL,*DV,UNDLN1,*P28:24,*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSM,ANS
          GOTO      NSYS1920 IF EQUAL
.
          MATCH     ANSA,ANS
          GOTO      NSYS2000 IF EQUAL
.
          BEEP
          GOTO      NSYS1900
.
NSYS1920  MOVE      FOUR,CVERT
          MOVE      ONE,CCOL
          ADD       ONE,PAGE        * Increment screen number
          MOVE      ONE,FIELD       * initialise field number of a new screen
.
          DISPLAY   *P1:4,*EF;
          GOTO      NSYS1000
.
NSYS2000  CALL      MAINQST
.
          COMPARE   "-1",CCITEM
          GOTO      START IF EQUAL
.
          COMPARE   ZERO,CCITEM
          GOTO      NSYS5000 IF EQUAL
.
          COMPARE   POS,CCITEM
          GOTO      NSYS3000 IF LESS
.
          BEEP
          GOTO      NSYS2000
.
NSYS3000  CALL      MODF0000
          GOTO      NSYS2000
.
NSYS5000  CALL      WRIT0000
          RETURN
+
.********************************************************************** 
.*                            MODF0000                                *
.*                    Modify the Field Required                       *
.********************************************************************** 
MODF0000  ASSIGN    ((CCITEM-1)/19),FORM1
          ASSIGN    (24+(FORM1*27)),CCOL
          ASSIGN    (CCITEM-(19*FORM1)+3),CVERT
.
MODF0500  KEYIN     *PCCOL:CVERT,*DV,UNDLN1,*DV,SP2:
                    *PCCOL:CVERT,*V2LON,ANS;
          REP       "Y1N2y1n2",ANS
.
          MOVE      ANS,FORM1
          IF        PAGE <> 0
            MOVE      ZERO,FORM6A
            MOVE      "57",FORM6A
            MULT      PAGE,FORM6A
            ADD       FORM6A,CCITEM
          ENDIF
.
          BRANCH    FORM1,MODF1000,MODF2000
          BEEP
          GOTO      MODF0500
.
MODF1000  DISPLAY   *PCCOL:CVERT,*V2LON,DYES;
          MOVE      ONE,AVAIL[CCITEM]
          GOTO      MODF9999
.
MODF2000  DISPLAY   *PCCOL:CVERT,*V2LON,DNO;
          MOVE      ZERO,AVAIL[CCITEM]
.
MODF9999  RETURN
+
.********************************************************************** 
.*                            WRIT0000                                *
.*                     Write Data to the Files                        *
.********************************************************************** 
WRIT0000  PACK      KEY3,SP3
          MOVE      ZERO,FORM2
          CALL      RSIBSMA1
.
WRIT1000  CALL      RKIBSMA1
          BRANCH    OVRCD,WRIT9000
.
          ADD       ONE,FORM2
          COMPARE   "60",FORM2
          GOTO      WRIT9000 IF NOT LESS
.
          MOVE      AVAIL[FORM2],IBSMAVAL
          CALL      UPIBSMA1
.
. ---     Update the User Security File
.
          MOVE      IBSMNUMB,IBUSSYST
.
          MOVE      ZERO,FORM1
          MOVE      IBSMAVAL,FORM1
.
          COMPARE   ZERO,FORM1
          GOTO      WRIT8000 IF EQUAL       * No Longer Available
.
          MOVE      ZERO,IBUSLEVL
          MOVE      IBSMDMPG,IBUSMPRO
.
          PACK      KEY4,SP4
          CALL      RDSPASS1
.
WRIT5000  CALL      RDKPASS1
          BRANCH    OVRCD,WRIT1000
.
          MOVE      SECODE,IBUSCODE
          PACK      KEY7,IBUSCODE,IBUSSYST
.
          CALL      RAIBUSE1
          COMPARE   ZERO,OVRCD
          GOTO      WRIT1000 IF EQUAL
.
          CALL      WRIBUSE1
          GOTO      WRIT5000
.
WRIT8000  PACK      KEY4,SP4
          CALL      RDSPASS1
.
WRIT8500  CALL      RDKPASS1
          BRANCH    OVRCD,WRIT1000
.
          MOVE      SECODE,IBUSCODE
          PACK      KEY7,IBUSCODE,IBUSSYST
          CALL      RAIBUSE1
          BRANCH    OVRCD,WRIT1000
.
          CALL      DEIBUSE1
          GOTO      WRIT8500
.
WRIT9000  DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
WRIT9999  RETURN
+
.*********************************************************************
.         display IBA Screen 1
.*********************************************************************
DISPIBA1  READ      CONTROLF,ZERO;*8,SCCC,*10,EXITCHR,*19,IBCNMESS,*44,IBCNPLTR:
                                  *45,IBCNUDAY,IBCNAQOP,IBCNSUSE,IBCNAPST:
                                  IBCNPBXI
          READ      CONTROLF,TWO;*4,CONAME,*41,CPORTADD,CCOSECCD,*65,CCOUNTRY:
                               *149,CSYSTRAK,*154,CMENUSYS,*182,CSNAME:
                               *233,CSPASSWD,*249,SPOOL
          READ      CONTROLF,TEN;*244,CHOSPNUM
          MOVE      SP30,HOSDESC
          MOVE      CHOSPNUM,KEY2
          CALL      RDHOSP2
.
          MOVE      DNO,DANS14
          LOAD      DANS14,IBCNPLTR,DYES
          MOVE      DNO,DANS15
          LOAD      DANS15,IBCNUDAY,DYES
          MOVE      DNO,DANS16
          LOAD      DANS16,IBCNAQOP,DYES
          MOVE      DNO,DANS17
          LOAD      DANS17,IBCNSUSE,DYES
.
          CALL      DISPHEAD
          DISPLAY   *P54:2,*V2LON,"- I.B.A. Screen 1 ",*HOFF:
                    *P1:3,*EF:
                    *P1:4," 1. Company Name in ANSWER             :":
                    *P1:5," 2.              in IBAMENU            :":
                    *P1:6," 3. Security Key                       :":
                    *P1:7," 4. IBASYS98 Password                  :":
                    *P1:8," 5. IBAMENU   Menu Program             :":
                    *P1:9," 6. Port Add TO   (OFFSET)             :":
                    *P1:10," 7. Country (0=AUS, 1=USA)             :":
                    *P1:11," 8. Spooling System (0=On,1=Off)       :":
                    *P1:12," 9. Tracking System (0=On,1=Off)       :":
                    *P1:13,"10. Exit Character (EXITCHAR)          :":
                    *P1:14,"11. Next Message Number (Function Key) :":
                    *P1:15,"12. Unique Hospital Id (from PATHOSPF) :":
                    *P1:16,"13. No Longer in use                   :":
                    *P1:17,"14. Printing at a Later Date option    :":
                    *P1:18,"15. Allow unknown day in KEYDATE       :":
                    *P1:19,"16. Allow Queue option in SELPRINT     :":
                    *P1:20,"17. Logging System Usage (Y/N) ?       :":
                    *P1:21,"18. Auto Generation of Default Postcode:":
                    *P1:22,"19. Misc Charge for Phone Call Billing :":
                    *P42:4,*V2LON,CSNAME,*P42:5,CONAME:
                    *P42:6,CCOSECCD:
                    *P42:7,CSPASSWD,*P42:8,CMENUSYS:
                    *P42:9,CPORTADD,*P42:10,CCOUNTRY:
                    *P42:11,SPOOL,*P42:12,CSYSTRAK:
                    *P42:13,EXITCHR,*P42:14,IBCNMESS:
                    *P42:15,CHOSPNUM,*HOFF,*P50:15,HOSDESC:
                    *P42:16,*V2LON,DANS13:
                    *P42:17,*V2LON,DANS14,*P42:18,DANS15:
                    *P42:19,DANS16:
                    *P42:20,DANS17:
                    *P42:21,IBCNAPST:
                    *P42:22,IBCNPBXI;
          RETURN
+
.
.*********************************************************************
.         update IBA Screen 1
.*********************************************************************
UPIBA1    CALL      MAINQST
.
          COMPARE   ZERO,CCITEM
          GOTO      POST IF EQUAL
          GOTO      CANCEL IF LESS
.
          MOVE      CCITEM,FIELD
          BRANCH    FIELD,KIBA11,KIBA12,KIBA13,KIBA14,KIBA15:
                          KIBA16,KIBA17,KIBA18,KIBA19,KIBA110:
                          KIBA111,KIBA112,KIBA113,KIBA114,KIBA115:
                          KIBA116,KIBA117,KIBA118,KIBA119
          BEEP
          GOTO      UPIBA1
.
KIBA11    KEYIN     *P42:4,*EL,*DV,UNDLN20,*DV,UNDLN5,*P42:4,*V2LON,CSNAME:
                    *P42:4,*DV,CSNAME;
          ENDSET    CSNAME
          APPEND    SP30,CSNAME
          RESET     CSNAME
          GOTO      UPIBA1
+
.
KIBA12    KEYIN     *P42:5,*EL,*DV,UNDLN30,*P42:5,*V2LON,CONAME:
                    *P42:5,*DV,CONAME;
          ENDSET    CONAME
          APPEND    SP30,CONAME
          RESET     CONAME
          GOTO      UPIBA1
+
.
KIBA13    KEYIN     *P42:6,*EL,*DV,UNDLN6,*P42:6,*V2LON,CCOSECCD;
          ENDSET    CCOSECCD
          APPEND    SP6,CCOSECCD
          RESET     CCOSECCD
.
          CMATCH    EXITCHAR,CCOSECCD
          CALL      GETHSEC IF EQUAL
.
          DISPLAY   *P42:6,*V2LON,CCOSECCD;
          GOTO      UPIBA1
+
.
KIBA14    KEYIN     *P42:7,*EL,*DV,UNDLN8,*P42:7,*V2LON,CSPASSWD:
                    *P42:7,*DV,CSPASSWD;
          ENDSET    CSPASSWD
          APPEND    SP8,CSPASSWD
          RESET     CSPASSWD
          GOTO      UPIBA1
+
.
KIBA15    KEYIN     *P42:8,*EL,*DV,UNDLN6,*P42:8,*V2LON,CMENUSYS:
                    *P42:8,*DV,CMENUSYS;
          ENDSET    CMENUSYS
          APPEND    SP6,CMENUSYS
          RESET     CMENUSYS
          GOTO      UPIBA1
+
.
KIBA16    KEYIN     *P42:9,*EL,*DV,UNDLN1,*P42:9,*V2LON,CPORTADD:
                    *P42:9,*DV,CPORTADD;
          GOTO      UPIBA1
+
.
KIBA17    KEYIN     *P42:10,*EL,*DV,UNDLN1,*P42:10,*V2LON,CCOUNTRY:
                    *P42:10,*DV,CCOUNTRY;
          GOTO      UPIBA1
+
.
KIBA18    KEYIN     *P42:11,*EL,*DV,UNDLN1,*P42:11,*V2LON,SPOOL:
                    *P42:11,*DV,SPOOL;
          GOTO      UPIBA1
+
.
KIBA19    KEYIN     *P42:12,*EL,*DV,UNDLN1,*P42:12,*V2LON,CSYSTRAK:
                    *P42:12,*DV,CSYSTRAK;
          GOTO      UPIBA1
+
.
KIBA110   MOVE      "\",EXITCHR
          KEYIN     *P42:13,*EL,*DV,UNDLN1,*P42:13,*V2LON,EXITCHR;
          RESET     EXITCHR
.
          REP       " \",EXITCHR
          DISPLAY   *P42:13,*V2LON,EXITCHR;
          GOTO      UPIBA1
+
.
KIBA111   KEYIN     *P42:14,*EL,*DV,UNDLN6,*P42:14,*V2LON,IBCNMESS;
.
          DISPLAY   *P42:14,*V2LON,IBCNMESS;
          GOTO      UPIBA1
+
.
.         Unique Hospital Id
.
KIBA112   KEYIN     *P42:15,*EL,*V2LON,CHOSPNUM;
          DISPLAY   *P42:15,*EL,*V2LON,CHOSPNUM;
.
          COMPARE   ZERO,CHOSPNUM
          GOTO      KIBA110Z IF EQUAL
.
          MOVE      CHOSPNUM,KEY2
          CALL      RDHOSP2
          BRANCH    OVRCD,KIBA110E
.
          DISPLAY   *P50:15,HOSDESC;
          GOTO      UPIBA1
.
KIBA110E  BEEP
          GOTO      KIBA110
.
KIBA110Z  MOVE      ONE,CHOSPNUM
          MOVE      "Default Hospital Identifier   ",HOSDESC
          MOVE      CHOSPNUM,KEY2
          CALL      RDHOSP2
.
          DISPLAY   *P42:15,*EL,*V2LON,CHOSPNUM,*HOFF,*P50:15,HOSDESC;
          GOTO      UPIBA1
.
. ******* Using a Sato Label Printer (no longer used) *******
.
KIBA113   GOTO      UPIBA1
.
. ******* Print at a Later Date *******
.
KIBA114   MOVE      "42",CCOL
          MOVE      "17",CVERT
          CALL      KYN0000
          MOVE      EXIT,IBCNPLTR
          GOTO      UPIBA1
.
. ******* Unknown Day in KEYDATE *******
.
KIBA115   MOVE      "42",CCOL
          MOVE      "18",CVERT
          CALL      KYN0000
          MOVE      EXIT,IBCNUDAY
          GOTO      UPIBA1
.
. ******* Allow Queue option in SELPRINT *******
.
KIBA116   MOVE      "42",CCOL
          MOVE      "19",CVERT
          CALL      KYN0000
          MOVE      EXIT,IBCNAQOP
          GOTO      UPIBA1
.
. ******* Logging System Usage  *******
.
KIBA117   MOVE      "42",CCOL
          MOVE      "20",CVERT
          CALL      KYN0000
          MOVE      EXIT,IBCNSUSE
          GOTO      UPIBA1
.
. ******* Auto Generation of Default Postcode *******
.
KIBA118   KEYIN     *P42:21,*EL,*V2LON,*RV,IBCNAPST;
.
          ENDSET    IBCNAPST
          APPEND    SP4,IBCNAPST
          RESET     IBCNAPST
.
          DISPLAY   *P42:21,*EL,*V2LON,IBCNAPST;
          GOTO      UPIBA1
.
. ******* Miscellanous Charge to use for Phone Call Billing *******
.
KIBA119   KEYIN     *P42:22,*EL,*V2LON,*RV,IBCNPBXI;
.
          ENDSET    IBCNPBXI
          APPEND    SP4,IBCNPBXI
          RESET     IBCNPBXI
.
          DISPLAY   *P42:22,*EL,*V2LON,IBCNPBXI;
          GOTO      UPIBA1
.
.********************************************************************** 
.*                            DISPIBS2                                *
.*                 Display IBA Controlled Screen 2                    *
.********************************************************************** 
.
DISPIBA2  READ      CONTROLF,ZERO;*25,IBCNAESN,IBCNOPSN,IBCNBLSN:
                                      IBCNMASN,IBCNRASN,IBCNINSN:
                                  *87,IBCNMESI,IBCNUBAS,IBCNBSFY
.
          MOVE      DNO,DANS1
          LOAD      DANS1,IBCNUBAS,DYES
.
          MOVE      ONE,COUNT
          WHILE     COUNT<7
.
            LOAD      DIM3,COUNT,IBCNAESN,IBCNOPSN,IBCNBLSN:
                                 IBCNMASN,IBCNRASN,IBCNINSN
            MATCH     SP3,DIM3
            IF        @EQUAL
              STORE     SP30,COUNT,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6
            ELSE
              LOAD      KEY3,COUNT,IBCNAESN,IBCNOPSN,IBCNBLSN:
                                   IBCNMASN,IBCNRASN,IBCNINSN
              CALL      RDIBSMA1
              IF        OVRCD=1
                STORE     UNKS,COUNT,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6
              ELSE
                STORE     IBSMNAME,COUNT,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6
              ENDIF
            ENDIF
            ADD       ONE,COUNT
          DO
.
          DISPLAY   *P54:2,*V2LON,"- I.B.A. Screen 2 ",*HOFF:
                    *P1:3,*EF:
                    *P1:4," 1. Accident & Emergency System Number :":
                    *P1:5," 2. Outpatient system Number           :":
                    *P1:6," 3. Patient Billing System Number      :":
                    *P1:7," 4. Mammography System Number          :":
                    *P1:8," 5. Radiology  System Number           :":
                    *P1:9," 6. Inpatient System Number            :":
                    *P1:10," 7. Next HL7 Message Id.               :":
                    *P1:11," 8. Using BAS Codes                    :":
                    *P1:12," 9. Financial Year for BAS Start       :":
                    *P42:4,*V2LON,IBCNAESN,*HOFF,SP3,DESC1:
                    *P42:5,*V2LON,IBCNOPSN,*HOFF,SP3,DESC2:
                    *P42:6,*V2LON,IBCNBLSN,*HOFF,SP3,DESC3:
                    *P42:7,*V2LON,IBCNMASN,*HOFF,SP3,DESC4:
                    *P42:8,*V2LON,IBCNRASN,*HOFF,SP3,DESC5:
                    *P42:9,*V2LON,IBCNINSN,*HOFF,SP3,DESC6:
                    *P42:10,*V2LON,IBCNMESI,*HOFF,SP20:
                    *P42:11,*V2LON,DANS1,*P42:12,IBCNBSFY
          RETURN
.
.********************************************************************** 
.*                            UIB20000                                *
.*                   Update IBA Controlled Screen 2                   *
.********************************************************************** 
.
UIB20000  MOVE      FALSE,EXIT
          MOVE      "42",CCOL
          CALL      MAINQST
.
          COMPARE   ZERO,CCITEM
          GOTO      UIB20050 IF EQUAL
          GOTO      CANCEL IF LESS
.
          BRANCH    CCITEM,UIB20100,UIB20200,UIB20300,UIB20400,UIB20500:
                           UIB20600,UIB20700,UIB20800,UIB20900
          BEEP
          GOTO      UIB20000
.
UIB20050  IF        IBCNUBAS=0
            MATCH     SP4,IBCNBSFY
            GOTO      POST IF EQUAL
          ELSE
            MATCH     SP4,IBCNBSFY
            GOTO      POST IF NOT EQUAL
          ENDIF
.
          MOVE      "Invalid BAS Parameters - ",DISPMSG
          CALL      MESSAGE1
          GOTO      UIB20000
.
UIB20100  MOVE      "4",CVERT
          DISPLAY   *PCCOL:CVERT,*EL
          CALL      KIBSMA000
.
          IF        EXIT = ONE
            MOVE    SP20,IBSMNAME            * Null Entry
          ENDIF
          IF        EXIT = TWO
            GOTO    UIB20000                 * Exit Character
          ENDIF
.
          MOVE      IBSMNUMB,IBCNAESN
          DISPLAY   *PCCOL:CVERT,*V2LON,IBCNAESN,*HOFF,SP3,IBSMNAME
          GOTO      UIB20000
.
UIB20200  MOVE      "5",CVERT
          DISPLAY   *PCCOL:CVERT,*EL
          CALL      KIBSMA000
.
          IF        EXIT = ONE
            MOVE    SP20,IBSMNAME            * Null Entry
          ENDIF
          IF        EXIT = TWO
            GOTO    UIB20000                 * Exit Character
          ENDIF
.
          MOVE      IBSMNUMB,IBCNOPSN
          DISPLAY   *PCCOL:CVERT,*V2LON,IBCNOPSN,*HOFF,SP3,IBSMNAME
          GOTO      UIB20000
.
UIB20300  MOVE      "6",CVERT
          DISPLAY   *PCCOL:CVERT,*EL
          CALL      KIBSMA000
.
          IF        EXIT = ONE
            MOVE    SP20,IBSMNAME            * Null Entry
          ENDIF
          IF        EXIT = TWO
            GOTO    UIB20000                 * Exit Character
          ENDIF
.
          MOVE      IBSMNUMB,IBCNBLSN
          DISPLAY   *PCCOL:CVERT,*V2LON,IBCNBLSN,*HOFF,SP3,IBSMNAME
          GOTO      UIB20000
.
UIB20400  MOVE      "7",CVERT
          DISPLAY   *PCCOL:CVERT,*EL
          CALL      KIBSMA000
.
          IF        EXIT = ONE
            MOVE    SP20,IBSMNAME            * Null Entry
          ENDIF
          IF        EXIT = TWO
            GOTO    UIB20000                 * Exit Character
          ENDIF
.
          MOVE      IBSMNUMB,IBCNMASN
          DISPLAY   *PCCOL:CVERT,*V2LON,IBCNMASN,*HOFF,SP3,IBSMNAME
          GOTO      UIB20000
.
UIB20500  MOVE      "8",CVERT
          DISPLAY   *PCCOL:CVERT,*EL
          CALL      KIBSMA000
.
          IF        EXIT = ONE
            MOVE    SP20,IBSMNAME            * Null Entry
          ENDIF
          IF        EXIT = TWO
            GOTO    UIB20000                 * Exit Character
          ENDIF
.
          MOVE      IBSMNUMB,IBCNRASN
          DISPLAY   *PCCOL:CVERT,*V2LON,IBCNRASN,*HOFF,SP3,IBSMNAME
          GOTO      UIB20000
.
UIB20600  MOVE      "9",CVERT
          DISPLAY   *PCCOL:CVERT,*EL
          CALL      KIBSMA000
.
          IF        EXIT = ONE
            MOVE    SP20,IBSMNAME            * Null Entry
          ENDIF
          IF        EXIT = TWO
            GOTO    UIB20000                 * Exit Character
          ENDIF
.
          MOVE      IBSMNUMB,IBCNINSN
          DISPLAY   *PCCOL:CVERT,*V2LON,IBCNINSN,*HOFF,SP3,IBSMNAME
          GOTO      UIB20000
.
UIB20700  MOVE      "10",CVERT
          MOVE      IBCNMESI,KEY20
          DISPLAY   *PCCOL:CVERT,*EL;
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,KEY20;
          TYPE      KEY20
          GOTO      UIB20750 IF EQUAL
         
          BEEP
          GOTO      UIB20700

UIB20750  MOVE      KEY20,IBCNMESI
          DISPLAY   *PCCOL:CVERT,*V2LON,IBCNMESI;
          GOTO      UIB20000
.
UIB20800  MOVE      "11",CVERT
          KEYIN     *PCCOL:CVERT,*DV,SP3:    * clear previous display
                    *PCCOL:CVERT,*V2LON,ANS:
                    *PCCOL:CVERT,*DV,ANS;
.
          TYPE      ANS                      * check if a number was input
          GOTO      UIB20850 IF EQUAL         * yes, invalid
.
          REP       "Y1y1N0n0",ANS           * convert valid answers to numerics
.
          TYPE      ANS                      * check if now a number
          GOTO      UIB20850 IF NOT EQUAL     * no, invalid
.
          MOVE      ANS,EXIT                 * set exit to Y/N value
          MOVE      ANS,IBCNUBAS
          MOVE      DNO,DANS1                * assume answer was "No "
          LOAD      DANS1,EXIT,DYES,DNO      * unless otherwise stated
          DISPLAY   *PCCOL:CVERT,*V2LON,DANS1
.
          IF        IBCNUBAS<>1
            MOVE      SP4,IBCNBSFY
            DISPLAY   *P42:12,*EL;
          ENDIF
          GOTO      UIB20000
.
UIB20850  BEEP
          GOTO      UIB20800
.
UIB20900  IF        IBCNUBAS<>1
            GOTO      UIB20000
          ENDIF
.
          MOVE      "12",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,*JR,*ZF,*DE,IBCNBSFY
.
          RESET      IBCNBSFY
          GOTO       UIB20910 IF EOS
.
          MATCH      "2000",IBCNBSFY
          GOTO       UIB20000 IF EQUAL
.
          MATCH      "2001",IBCNBSFY
          GOTO       UIB20000 IF EQUAL
.
          BEEP
          MOVE       "Invalid Financial Year - ",DISPMSG
          CALL       MESSAGE1
          GOTO       UIB20900
.
UIB20910  MOVE       SP4,IBCNBSFY
          GOTO       UIB20000
.
UIB29999  RETURN
+
.********************************************************************** 
.*                            WRIBA2                                  *
.*                 Write IBA Controlled Screen 2                      *
.********************************************************************** 
.
WRIBA2    WRITAB    CONTROLF,ZERO;*25,IBCNAESN,IBCNOPSN,IBCNBLSN:
                                      IBCNMASN,IBCNRASN,IBCNINSN:
                                      *87,IBCNMESI,IBCNUBAS,IBCNBSFY
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
          RETURN
.
.
.         SUBROUTINE FOR SECURITY
.
GETHSEC   MOVE      "01",CDAY
.
          CMATCH    SP1,CONAME
          GOTO      OVERCOND IF EQUAL
.
KSEC1     MOVE      ZERO,FORM1A
          MOVE      ZERO,XFORM2
          MOVE      ZERO,FORM2A
          MOVE      ZERO,FORM2B
          MOVE      ZERO,FORM2C
          MOVE      ZERO,FORM2D
          MOVE      ZERO,FORM2E
.
HSEC2     CMATCH    ANSA,CONAME
          GOTO      HSEC4 IF EQUAL
.
          CMATCH    ANSE,CONAME
          GOTO      HSEC5 IF EQUAL
.
          CMATCH    ANSI,CONAME
          GOTO      HSEC6 IF EQUAL
.
          CMATCH    ANSO,CONAME
          GOTO      HSEC7 IF EQUAL
.
          CMATCH    ANSU,CONAME
          GOTO      HSEC8 IF EQUAL
.
          CMATCH    SP1,CONAME
          GOTO      HSEC3 IF EQUAL
          ADD       ONE,XFORM2
.
HSEC3     BUMP      CONAME
          GOTO      HSEC9 IF EOS
          GOTO      HSEC2
.
HSEC4     ADD       ONE,FORM2A
          GOTO      HSEC3
.
HSEC5     ADD       ONE,FORM2B
          GOTO      HSEC3
.
HSEC6     ADD       ONE,FORM2C
          GOTO      HSEC3
.
HSEC7     ADD       ONE,FORM2D
          GOTO      HSEC3
.
HSEC8     ADD       ONE,FORM2E
          GOTO      HSEC3
.
HSEC9     ADD       ONE,FORM2A
          MOVE      FORM2A,FORM6A
          MULT      FORM2A,FORM6A
          MULT      FORM2A,FORM6A
.
          ADD       ONE,FORM2B
          MOVE      FORM2B,FORM6B
          MULT      FORM2B,FORM6B
          MULT      FORM2B,FORM6B
.
          ADD       ONE,FORM2C
          MOVE      FORM2C,FORM6C
          MULT      FORM2C,FORM6C
          MULT      FORM2C,FORM6C
.
          ADD       ONE,FORM2D
          MOVE      FORM2D,FORM6D
          MULT      FORM2D,FORM6D
          MULT      FORM2D,FORM6D
.
          ADD       ONE,FORM2E
          MOVE      FORM2E,FORM8
          MULT      FORM2E,FORM8
          MULT      FORM2E,FORM8
.
          MOVE      FORM6A,XFORM6
.
          MULT      TWO,FORM6B
          ADD       FORM6B,XFORM6
.
          MULT      THREE,FORM6C
          ADD       FORM6C,XFORM6
.
          MULT      FOUR,FORM6D
          ADD       FORM6D,XFORM6
.
          MULT      FIVE,FORM8
          ADD       FORM8,XFORM6
.
          ADD       ONE,XFORM2
          MULT      XFORM2,XFORM6
.
          ADD       TEN1,XFORM2
          MULT      XFORM2,XFORM6
.
          TYPE      CDAY
          GOTO      HSEC12 IF EQUAL
          MOVE      ONE,XFORM2
.
HSEC10    CMATCH    ANSA,CDAY
          GOTO      HSEC11 IF LESS
          ADD       ONE,XFORM2
.
          CMATCH    ANSE,CDAY
          GOTO      HSEC11 IF LESS
          ADD       ONE,XFORM2
.
          CMATCH    ANSI,CDAY
          GOTO      HSEC11 IF LESS
          ADD       ONE,XFORM2
.
          CMATCH    ANSM,CDAY
          GOTO      HSEC11 IF LESS
          ADD       ONE,XFORM2
.
          CMATCH    ANSQ,CDAY
          GOTO      HSEC11 IF LESS
          ADD       ONE,XFORM2
.
          CMATCH    ANSU,CDAY
          GOTO      HSEC11 IF LESS
          ADD       ONE,XFORM2
.
          CMATCH    ANSY,CDAY
          GOTO      HSEC11 IF LESS
          ADD       ONE,XFORM2
.
HSEC11    BUMP      CDAY
          GOTO      HSEC13 IF EOS
          MULT      "10",XFORM2
          GOTO      HSEC10
.
HSEC12    MOVE      CDAY,XFORM2
          ADD       ONE,XFORM2
.
HSEC13    MULT      XFORM2,XFORM6
          MOVE      XFORM6,FORM8
.
          MULT      "99999",FORM8
          DIV       "12",FORM8
          MOVE      FORM8,XFORM6
.
          COMPARE   "100000",XFORM6
          GOTO      HSEC14 IF NOT LESS
          ADD       "765432",XFORM6
.
HSEC14    MOVE      XFORM6,CCOSECCD
          RESET     CONAME
.         DISPLAY   *P30:5,"CODE = ",CCOSECCD;
          RETURN
+
.*********************************************************************
WRIBA1    WRITAB    CONTROLF,ZERO;*8,SCCC,EXITCHR,*19,IBCNMESS,*44,IBCNPLTR:
                                  *45,IBCNUDAY,IBCNAQOP,IBCNSUSE,IBCNAPST:
                                  IBCNPBXI
          WRITAB    CONTROLF,TWO;*4,CONAME,*41,CPORTADD,CCOSECCD,*65,CCOUNTRY:
                               *149,CSYSTRAK,*154,CMENUSYS,*182,CSNAME:
                               *233,CSPASSWD,*249,SPOOL
          WRITAB    CONTROLF,TEN;*244,CHOSPNUM
.
          MOVE      CONAME,CNAME            * RESET COMMON/INC
          MOVE      EXITCHR,EXITCHAR        * RESET COMMON/INC
          MOVE      CCOUNTRY,ERRA
          MOVE      SPOOL,CPRTFLG
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
          RETURN
+
.********************************************************************** 
.*                            SCREN000                                *
.*                       Main Option Screen                           *
.********************************************************************** 
SCREN000  MOVE      FALSE,EXIT
          CALL      DISPHEAD
.         HLINE     *G37,2,54,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0",*HOFF," = Exit":
                    *P1:5,*V2LON," 1",*HOFF," = I.B.A. Controlled Screens":
                    *P1:6,*V2LON," 2",*HOFF," = Hospital Controlled Screens":
                    *P1:7,*V2LON," 3",*HOFF," = GST Controlled Screens":
                    *P1:9,"Select Option :";
SCREN100
          DISPLAY   *P17:9,*EL,UNDLN2;
          KEYIN     *P17:9,*V2LON,SCREEN;
.
          COMPARE   ZERO,SCREEN
          GOTO      SCREN900 IF EQUAL
.
          DISPLAY   *P17:9,*V2LON,SCREEN;
          BRANCH    SCREEN,SCREN999,SCREN999,SCREN999
          BEEP
          GOTO      SCREN100
SCREN900
          MOVE      TRUE,EXIT
SCREN999
          RETURN
+
.********************************************************************** 
.*                            HOSCN000                                *
.*                  Do Hospital Controlled Screen                     *
.********************************************************************** 
HOSCN000  CALL      DISPHOS1
          MOVE      ONE,EXIT
          CALL      UPHOS1
          BRANCH    EXIT,START0
          CALL      WRHOS1
          GOTO      START0
.
DISPHOS1  READ      CONTROLF,ZERO;*11,CTIMEOUT,CSECCNT,CIMENAUD,CLOGOUT:
                                  *61,IBCNNSEC,*62,IBCNNDAY,*68,IBCNNPAS:
                                  *70,IBCNABNN
.
          MOVE      DOFF,DANS1
          LOAD      DANS1,CIMENAUD,DON
.
          MOVE      DNO,DANS2
          LOAD      DANS2,IBCNNSEC,DYES
.
          DISPLAY   *P54:2,*V2LON,"- Hospital Screen 1 ",*HOFF:
                    *P1:3,*EF:
                    *P1:4," 1. Time-Out Function in Menu Programs :":
                          SP4,"(mins)":
                    *P1:5," 2. Illegal Security Access Counter    :":
                    *P1:6," 3. Illegal Security Access Audit File :":
                    *P1:7," 4. Log-Out Function in the Security   :":
                          SP4,"(mins)":
                    *P1:8," 5. Using New Security ? (Y/N)         :":
                    *P1:9," 6. No. of Days Before Passwd Expires  :":
                    *P1:10," 7. No. of Passwords for Change Audit  :":
                    *P1:11," 8. Hospital ABN Number                :":
                    *P42:4,*V2LON,CTIMEOUT:
                    *P42:5,*V2LON,CSECCNT:
                    *P42:6,*V2LON,DANS1:
                    *P42:7,*V2LON,CLOGOUT:
                    *P42:8,*V2LON,DANS2:
                    *P42:9,*V2LON,IBCNNDAY:
                    *P42:10,*V2LON,IBCNNPAS:
                    *P42:11,*V2LON,IBCNABNN;
          RETURN
+
.
UPHOS1    CALL      MAINQST
.
          COMPARE   ZERO,CCITEM
          GOTO      POST IF EQUAL
          GOTO      CANCEL IF LESS
.
          MOVE      CCITEM,FIELD
          BRANCH    FIELD OF KHOS11,KHOS12,KHOS13,KHOS14,KHOS15,KHOS16,KHOS17:
                             KHOS18
.
          BEEP
          GOTO      UPHOS1
.
KHOS11    KEYIN     *P42:4,*DV,UNDLN2,*P42:4,*V2LON,CTIMEOUT:
                    *P42:4,*DV,CTIMEOUT;
          GOTO      UPHOS1
+
.
KHOS12    KEYIN     *P42:5,*DV,UNDLN2,*P42:5,*V2LON,CSECCNT:
                    *P42:5,*DV,CSECCNT;
          GOTO      UPHOS1
+
.
KHOS13    DISPLAY   *P42:6,*EL:
                    *P50:6,*V2LON,ZERO,*HOFF," = Off  ":
                           *V2LON,ONE,*HOFF," = On";
KHOS13A
          KEYIN     *P42:6,*DV,UNDLN1,*P42:6,*V2LON,CIMENAUD:
                    *P42:6,*DV,CIMENAUD;
.
          COMPARE   ZERO,CIMENAUD                 * Valid Options are 0 & 1
          GOTO      KHOS13B IF EQUAL
.
          BRANCH    CIMENAUD,KHOS13B
          BEEP
          GOTO      KHOS13A
.
KHOS13B   MOVE      DOFF,DANS1
          LOAD      DANS1,CIMENAUD,DON
          DISPLAY   *P42:6,*EL,*V2LON,DANS1;
          GOTO      UPHOS1
+
.
KHOS14    KEYIN     *P42:7,*DV,UNDLN2,*P42:7,*V2LON,CLOGOUT:
                    *P42:7,*DV,CLOGOUT;
          GOTO      UPHOS1
.
. ----- Using New Security ? -----------------------------
.
KHOS15    MOVE      EIGHT,CVERT
          MOVE      FORTY2,CCOL
          CALL      KYN0000
          MOVE      EXIT,IBCNNSEC
          GOTO      UPHOS1
.
. ----- No of Days before Expiry -------------------------
.
KHOS16    COMPARE   ONE,IBCNNSEC
          GOTO      UPHOS1 IF NOT EQUAL
.
          MOVE      NINE,CVERT
          MOVE      FORTY2,CCOL
          KEYIN     *PCCOL:CVERT,*EL,*V2LON,*DV,IBCNNDAY:
                    *PCCOL:CVERT,*RV,IBCNNDAY:
                    *PCCOL:CVERT,*DV,IBCNNDAY
          GOTO      UPHOS1
.
. ----- No of Passwords for Audit ------------------------
.
KHOS17    COMPARE   ONE,IBCNNSEC
          GOTO      UPHOS1 IF NOT EQUAL
.
          MOVE      TEN,CVERT
          MOVE      FORTY2,CCOL
          KEYIN     *PCCOL:CVERT,*EL,*V2LON,*DV,IBCNNPAS:
                    *PCCOL:CVERT,*RV,IBCNNPAS:
                    *PCCOL:CVERT,*DV,IBCNNPAS
          GOTO      UPHOS1
.
. ----- Hospital ABN Number ------------------------
.
KHOS18    MOVE      TEN1,CVERT
          MOVE      FORTY2,CCOL
          KEYIN     *PCCOL:CVERT,*EL,*V2LON,*DV,IBCNABNN:
                    *PCCOL:CVERT,*RV,IBCNABNN:
                    *PCCOL:CVERT,*DV,IBCNABNN
          GOTO      UPHOS1
+
.
WRHOS1    WRITAB    CONTROLF,ZERO;*11,CTIMEOUT,CSECCNT,CIMENAUD,CLOGOUT:
                                  *61,IBCNNSEC,*62,IBCNNDAY,*68,IBCNNPAS:
                                  *70,IBCNABNN
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
          RETURN
+
.
ENDIT     CHAIN     PGM
          STOP
+
.------------------------------------------------------------------------------
.         Yes/No standard keyin
.------------------------------------------------------------------------------
KYN0000   KEYIN     *PCCOL:CVERT,*DV,SP3:    * clear previous display
                    *PCCOL:CVERT,*V2LON,ANS:
                    *PCCOL:CVERT,*DV,ANS;
.
          TYPE      ANS                      * check if a number was input
          GOTO      KYN9000 IF EQUAL         * yes, invalid
.
          REP       "Y1y1N0n0",ANS           * convert valid answers to numerics
.
          TYPE      ANS                      * check if now a number
          GOTO      KYN9000 IF NOT EQUAL     * no, invalid
.
          MOVE      ANS,EXIT                 * set exit to Y/N value
          MOVE      DNO,DANS1                * assume answer was "No "
          LOAD      DANS1,EXIT,DYES,DNO      * unless otherwise stated
          DISPLAY   *PCCOL:CVERT,*V2LON,DANS1
          GOTO      KYN9999
.
KYN9000   BEEP
          GOTO      KYN0000
.
KYN9999   RETURN
+
POST      MOVE      ZERO,EXIT
          RETURN
+
CANCEL    MOVE      ONE,EXIT
          RETURN
.
.**********************************************************************
.*                            GSTCN000                                *
.*                  Do GST Controlled Screen                          *
.**********************************************************************
GSTCN000  MOVE      ZERO,EXIT
          KEYIN     *P1:24,*EL,*P20:24,"Enter Password : ",*EOFF,PASS;
.
          RESET     PASS
          MOVE      ONE,EXIT IF EOS         * No password entered
.
          ENDSET    PASS
          APPEND    SP8,PASS
          RESET     PASS
.
          MATCH     PASS,GSTPASS
          IF        @EQUAL  
            MOVE      ZERO,EXIT
          ELSE    
            MOVE      ONE,EXIT
          ENDIF
.
          BRANCH    EXIT,START0
.
          CALL      DISPGST1
          MOVE      ONE,EXIT
          CALL      UPGST1
          BRANCH    EXIT,START0
          CALL      WRGST1
          GOTO      START0
.
.**********************************************************************
.*                            DSPGST1                                 *
.*                  Display GST Controlled screen 1                   *
.**********************************************************************
DISPGST1  READ      CONTROLF,ZERO;*85,IBCNUGST
          MOVE      UGSTDSC0,UGSTDSC
          LOAD      UGSTDSC,IBCNUGST,UGSTDSC1,UGSTDSC2,UGSTDSC3
.
          DISPLAY   *P54:2,*V2LON,"- GST Screen 1 ",*HOFF:
                    *P1:3,*EF:
                    *P1:4,"1. Using Goods & Services Tax (GST)   :":
                    *P42:4,*V2LON,IBCNUGST,*HOFF,SP2,UGSTDSC 
          RETURN
.         
.**********************************************************************
.*                            UPGST1                                  *
.*                  Update GST Controlled screen 1                    *
.**********************************************************************
UPGST1    CALL      MAINQST
.
          COMPARE   ZERO,CCITEM
          GOTO      POST IF EQUAL
          GOTO      CANCEL IF LESS
.
          MOVE      CCITEM,FIELD
          BRANCH    FIELD OF KGST11
.
          BEEP
          GOTO      UPGST1
.
KGST11    DISPLAY   *P1:24,*EL,*V2LON,"0",*HOFF," - No GST, ":
                               *V2LON,"1",*HOFF," - NZ GST, ":
                               *V2LON,"2",*HOFF," - AUS GST (Per Item)":
                               *V2LON,"3",*HOFF," - Other GST (Total Invoice)";
          MOVE      "42",CCOL
          MOVE      "4",CVERT
.
KIBA11A   MOVE      IBCNUGST,FORM1
          KEYIN     *PCCOL:CVERT,*EL,*V2LON,FORM1;
.
          IF        FORM1<0 | FORM1>3
            BEEP
            GOTO      KIBA11A
          ENDIF
.
          MOVE      FORM1,IBCNUGST
          MOVE      UGSTDSC0,UGSTDSC
          LOAD      UGSTDSC,IBCNUGST,UGSTDSC1,UGSTDSC2,UGSTDSC3
          DISPLAY   *PCCOL:CVERT,*V2LON,IBCNUGST,*P50:CVERT,*HOFF,UGSTDSC:
                    *P1:24,*EL;
          MOVE      ZERO,OVRCD
          GOTO      UPGST1
.
WRGST1    WRITAB    CONTROLF,ZERO;*85,IBCNUGST
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
          RETURN
+
.==============================================================================
.
          INC       IBAPASIO/INC
          INC       IBASECUR                * Keyin IBA screen security passwd
          INC       IBASMAIO/INC
          INC       IBASMAKY
          INC       IBAUSEIO/INC
.
          INC       PATHOSIO/INC
.
          INC       STD001IO
          INC       STDHLPCD
.
