.******************************************************************************
.* System    :   Accounting System                                            *
.* Include   :   FMSENSCR.INC                                                 *
.* Desc      :   General Accounting Enquiries Screens                         *
.******************************************************************************
.* Date      :   17.10.1990                                                   *
.* Author    :   Neeriem Dye (IBA)                                            *
.* Notes     :   Projection Routines are in CALP0000                          *
.*                                                                            *
.*               Requires PROGNO  1 = IBAFMS20                                *
.*                                2 = IBAFMS21                                *
.*                                3 = IBAFMS22                                *
.*                                                                            *
.*                        FMCOUST 0 = Accrual enquiries                       *
.*                                1 = Cash enquiries                          *
.*                                                                            *
.* Mods      :                                                                *
.*                                                                            *
.* V9.01.01 26/03/2003  Mike Laming  CAR 37206                                *
.*          Change Variance & Percentage Variance fields to Display correctly *
.*          when FMCOBVAR = 1 - was altering calculations. Add calculation    *
.*          variables CALCVAR and CALCPVA for CALP0000                        *
.*                                                                            *
.*        23/11/1999  Charles Handaya                                         *
.*                    Show cents for Print option                 SRF 633977  *
.*                                                                            *
.******************************************************************************
.
.******************************************************************************
.* CLOS - close files to stop I*M*024-0 (pblog.log)  Called by ML             *
.******************************************************************************
CLOS0000  CLOSE     CONTROLF
          CLOSE     FMSAMAA1
          CLOSE     FMSAMAA2
          CLOSE     FMSAMAA3
          CLOSE     FMSRSFA1
          CLOSE     FMSRSFA2
          CLOSE     FMSTCFA1
          CLOSE     FMSTCFA2
          CLOSE     FMSSQUA1
          CLOSE     FMSLMAA1
          CLOSE     FMSLMCA1
          CLOSE     FMSBTYA1
          CLOSE     FMSUWPA1
          CLOSE     FMSCODA1
.
CLOS9999  RETURN
.******************************************************************************
.* SCRB - Display Screen B                       Called by SELB               *
.******************************************************************************
SCRB0000  DISPLAY   *P60:3,*V2LON,"- Summary Details",*EL,*HOFF:
                    *P1:4,"Enquiry for ",*V2LON,FMAMDESC,*HOFF,SP10:
                    "Code : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*HOFF,*EF:
                    *P1:5,"Accounting Period ",*P35:5,"Ending ",*V2LON,*ULON:
                    *P8:7,"Current",*P35:7,"Year to Date":
                    *P54:7,"Last Year",*HOFF:
                    *P22:8,"Actual",*P22:9,"Budget",*P21:10,"Variance":
                    *P18:11,"Percentage Var":
                    *P18:12,"Committed Raised",*P70:12,"(average)":
                    *P18:13,"Committed Rec'd",*P70:13,"(average)"
          PACK      KEY17,SKEY,SP70
          CALL      RSFMUW1            * go to start of wp records
.
          MOVE      ZERO,F1
          MOVE      FMLAPTY,F1
          COMPARE   ZERO,F1
          GOTO      SCRB1000 IF EQUAL
          DISPLAY   *V2LON,*ULON,*P70:7,"Projection";
.
SCRB1000  COMPARE   ONE,FMCOUST
          GOTO      SCRB1200 IF EQUAL  * accrual/cash type
.
          DISPLAY   *V2LON,*ULON,*P21:7,"Accrual";
          GOTO      SCRB9999
.
SCRB1200  DISPLAY   *V2LON,*ULON,*P23:7,"Cash";
.
SCRB9999  RETURN
.******************************************************************************
.  DISB - Display Screen B Notes                 Called by SELB
.         Returns : MORE     (1=more data)
.******************************************************************************
DISB0000  COMPARE   ONE,FMACW1ON
          GOTO      DISB9999 IF NOT EQUAL        * notes active ?
.
          MOVE      "14",LINENO
          DISPLAY   *V2LON,*ULON,*P5:LINENO,"Notes",*EF;
.
DISB1000  CALL      RKFMUW1                      * get next record
          BRANCH    OVRCD,DISB9500               * no more records ?
          PACK      KEY14,FMUWLEDG,FMUWACCT,SP70
          MATCH     KEY14,SKEY
          GOTO      DISB9500 IF NOT EQUAL        * correct account
.
          ADD       ONE,LINENO
          COMPARE   "22",LINENO
          GOTO      DISB9000 IF NOT LESS         * page full ?
.
          DISPLAY   *P5:LINENO,FMUWLINE;
          GOTO      DISB1000
.
DISB9000  MOVE      ONE,MORE                     * more data
          CALL      RPFMUW1                      * go back one record
          GOTO      DISB9999
.
DISB9500  MOVE      ZERO,MORE                    * no more data
.
DISB9999  RETURN
.**********************************************************************
. SELB - Perform screen B                             Called By ML
.        Requires - SKEY     (current ledger/account)
.        Returns  - OPTIONB  (option selected)
.                   EXIT     (1=quit)
.**********************************************************************
SELB0000  PACK      KEY14,SKEY
          CALL      RDFMAM1            * get account data
          BRANCH    OVRCD,SELB9300     * account data found ?
          MOVE      FMAMTYPE,SAVTYPE   * save account type
          MOVE      ZERO,DECPLACE
          MOVE      FMAMDPLA,DECPLACE  * get no. of decimal places
          MOVE      ZERO,AVYTD
          MATCH     "7",FMAMTYPE
          GOTO      SELB0030 IF LESS
          MOVE      FMAMAYTD,AVYTD     * save ytd type
.
SELB0030  CALL      SCRB0000           * display screen B
          CALL      DISB0000           * display screen B notes
.
SELB0050  PACK      KEY14,SKEY         * set up var for LDAT
          CALL      LDAT0000           * get last years data
          PACK      KEY14,SKEY         * set up var for GDAT
          CALL      GDAT0000           * get data
          CALL      HPER0000           * display period heading
.
SELB0100  CALL      MQSB0000           * get option
          BRANCH    OPTIONB,SELB1100,SELB1200,SELB1300,SELB1400:
                            SELB1500,SELB1600,SELB9500,SELB1700,SELB1800:
                            SELB1900,SELB2000,SELB2100,SELB2200
.
.---- print ----
.
SELB1100  CALL      PRTB0000           * print screen
          GOTO      SELB0000           * go back to start of screen
.
.---- ytd ----
.
SELB1200  MOVE      "3",SCRNO          * set up screen number
          GOTO      SELB9000           * go back to start of screen
.
.---- analysis by period ----
.
SELB1300  MOVE      "2",SCRNO          * set up screen number
          GOTO      SELB9000           * go back to start of screen
.
.---- committed ----
.
SELB1400  MOVE      "4",SCRNO          * set up screen number
          GOTO      SELB9000           * go back to start of screen
.
.---- last period ----
.
SELB1500  MOVE      ZERO,DISPERR
          CALL      LPER0000           * get last period
          BRANCH    OVRCD,SELB0100     * no last period to display ?
          GOTO      SELB0050           * redisplay data
.
.---- next period ----
.
SELB1600  MOVE      ZERO,DISPERR
          CALL      NPER0000           * get next period
          BRANCH    OVRCD,SELB0100     * no next period to display ?
          GOTO      SELB0050           * redisplay data
.
.---- forward screen ----
.
SELB1700  CALL      NEXT0000           * get next screen
          GOTO      SELB9000
.
.---- back screen ----
.
SELB1800  CALL      LAST0000           * get last screen
          GOTO      SELB9000
.
.---- change account ----
.
SELB1900  CALL      KACC0000
          GOTO      SELB9000
.
.---- wp ----
.
SELB2000  CALL      NOTE0000           * wp
          GOTO      SELB9000
.
.---- dissection ----
.
SELB2100  MOVE      "6",SCRNO          * set up screen number
          GOTO      SELB9000           * go back to start of screen
.
.---- responsibility ----
.
SELB2200  MOVE      "7",SCRNO          * set up screen number
          GOTO      SELB9000           * go back to start of screen
.
.
SELB9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELB9999
.
SELB9300  DISPLAY   *P1:24,*B,*EL,"Account Record Not Found - ";
          CALL      HITENTER
.
SELB9500  MOVE      ONE,EXIT           * quit
.
SELB9999  RETURN
.******************************************************************************
. MQSB - Main question for Screen B             Called By SELB0000
.        Requires : FMAMTYPE  (record type)
.        Returns  : OPTIONB   (1=print, 2=YTD, 3=Analysis by Per, 4=Committed,
.                              5=last period, 6=next period, 7=quit,
.                              8=fwd scr, 9=bk scr, 10=ch acct, 11=wp
.                              12=dissection, 13=responsibility)
.******************************************************************************
MQSB0000  BRANCH    PROGNO,MQSB0100    * program 1 ?
          DISPLAY   *P1:23,"(",*V2LON,"P",*HOFF,")rint, (",*V2LON,"L",*HOFF:
                    ")ast, (",*V2LON,"N",*HOFF:
                    ")ext Period, (",*V2LON,"F",*HOFF:
                    ")orward, (",*V2LON,"B",*HOFF:
                    ")ack Screen, (",*V2LON,"C",*HOFF:
                    ")hange Account":
                    *P1:24,"e(",*V2LON,"X",*HOFF,")it";
          MOVE      "6",CCOL
          COMPARE   ONE,FMACW1ON
          GOTO      MQSB1000 IF NOT EQUAL        * wp active ?
.
          DISPLAY   ", (",*V2LON,"W",*HOFF,")ord Processor";
          ADD       "18",CCOL
          GOTO      MQSB1000
.
MQSB0100  DISPLAY   *P1:23,"(",*V2LON,"P",*HOFF,")rint, (",*V2LON:
                    "A",*HOFF,")nalysis by Period, (",*V2LON:
                    "L",*HOFF,")ast, (",*V2LON:
                    "N",*HOFF,")ext Period";
          MATCH     "6",SAVTYPE
          GOTO      MQSB0110 IF LESS
          MATCH     "8",SAVTYPE
          GOTO      MQSB0110 IF EQUAL
          DISPLAY   ", (",*V2LON,"Y",*HOFF,")td Analysis";
.
MQSB0110  COMPARE   ONE,MORE
          GOTO      MQSB0200 IF NOT EQUAL   * more data ?
          DISPLAY   ", (",*V2LON,"M",*HOFF,")ore";
.
MQSB0200  DISPLAY   *P1:24,"e(",*V2LON,"X",*HOFF,")it";
          MOVE      "6",CCOL
          MATCH     "7",SAVTYPE
          GOTO      MQSB0300 IF NOT LESS   * display desired prompt
          DISPLAY   ", (",*V2LON,"C",*HOFF,")ommitted";
          ADD       "13",CCOL
.
MQSB0300  COMPARE   ONE,FMCOUST             * accrual active ?
          GOTO      MQSB1000 IF EQUAL
          MATCH     "6",SAVTYPE             * posting account ?
          GOTO      MQSB1000 IF NOT LESS
          DISPLAY   ", (",*V2LON,"D",*HOFF,")issection Analysis":
                    ", (",*V2LON,"R",*HOFF,")esponsibility Analysis";
          ADD       "50",CCOL
.
MQSB1000  DISPLAY   " : ";
          ADD       "4",CCOL
.
MQSB3000  KEYIN     *PCCOL:24,"_",*PCCOL:24,*V2LON,DIM1,*EL; * get option
          PACK      DIM1,DIM1,SP70
          REP       UPPLOW,DIM1
          REP       " M",DIM1          * default to more
.
          MATCH     "X",DIM1
          GOTO      MQSB3050 IF NOT EQUAL   * exit
          MOVE      "7",OPTIONB
          GOTO      MQSB9999
.
MQSB3050  MATCH     "P",DIM1
          GOTO      MQSB3100 IF NOT EQUAL   * print
          MOVE      "1",OPTIONB
          GOTO      MQSB9999
.
MQSB3100  MATCH     "L",DIM1
          GOTO      MQSB3150 IF NOT EQUAL   * last period
          MOVE      "5",OPTIONB
          GOTO      MQSB9999
.
MQSB3150  MATCH     "N",DIM1
          GOTO      MQSB3200 IF NOT EQUAL   * next period
          MOVE      "6",OPTIONB
          GOTO      MQSB9999
.
MQSB3200  COMPARE   "1",PROGNO
          GOTO      MQSB3500 IF EQUAL   * which program being used ?
.
.---- options for IBAFMS21,22----
.
          MATCH     "F",DIM1
          GOTO      MQSB3250 IF NOT EQUAL   * forward screen
          MOVE      "8",OPTIONB
          GOTO      MQSB9999
.
MQSB3250  MATCH     "B",DIM1
          GOTO      MQSB3300 IF NOT EQUAL   * backward screen
          MOVE      "9",OPTIONB
          GOTO      MQSB9999
.
MQSB3300  MATCH     "C",DIM1
          GOTO      MQSB3350 IF NOT EQUAL   * change acct
          MOVE      "10",OPTIONB
          GOTO      MQSB9999
.
MQSB3350  MATCH     "W",DIM1
          GOTO      MQSB4000 IF NOT EQUAL   * word processor
          COMPARE   ONE,FMACW1ON
          GOTO      MQSB4000 IF NOT EQUAL   * wp active ?
          MOVE      "11",OPTIONB
          GOTO      MQSB9999
.
.---- options for IBAFMS20 ----
.
MQSB3500  COMPARE   ONE,MORE
          GOTO      MQSB3600 IF NOT EQUAL
          MATCH     "M",DIM1
          GOTO      MQSB3600 IF NOT EQUAL
          CALL      DISB0000           * display more data
          GOTO      MQSB0000
.
MQSB3600  MATCH     "Y",DIM1
          GOTO      MQSB3700 IF NOT EQUAL   * ytd
          MATCH     "6",SAVTYPE
          GOTO      MQSB3700 IF LESS        * ytd ok only for total records
          MATCH     "8",SAVTYPE
          GOTO      MQSB3700 IF EQUAL       * ytd ok only for total records
          MOVE      "2",OPTIONB
          GOTO      MQSB9999
.
MQSB3700  MATCH     "A",DIM1
          GOTO      MQSB3800 IF NOT EQUAL   * analysis by period
          MOVE      "3",OPTIONB
          GOTO      MQSB9999
.
MQSB3800  MATCH     "C",DIM1
          GOTO      MQSB3900 IF NOT EQUAL   * committed
          MATCH     "7",SAVTYPE
          GOTO      MQSB3900 IF NOT LESS    * com ok only for total/post recs
          MOVE      "4",OPTIONB
          GOTO      MQSB9999
.
MQSB3900  COMPARE   ONE,FMCOUST             * accrual active ?
          GOTO      MQSB4000 IF EQUAL
          MATCH     "6",SAVTYPE             * posting account ?
          GOTO      MQSB4000 IF NOT LESS
.
          MATCH     "D",DIM1
          GOTO      MQSB3950 IF NOT EQUAL   * dissection analysis
          MOVE      "12",OPTIONB
          GOTO      MQSB9999
.
MQSB3950  MATCH     "R",DIM1
          GOTO      MQSB4000 IF NOT EQUAL   * responsibility analysis
          MOVE      "13",OPTIONB
          GOTO      MQSB9999
.
MQSB4000  BEEP                         * illegal option
          GOTO      MQSB3000           * get another option
.
MQSB9999  RETURN
.******************************************************************************
. SCRC - Display Screen C                       Called by SELC
.******************************************************************************
SCRC0000  UNPACK    SKEY,KEY2
          PACK      KEY6,KEY2,CURYEAR,SP70
          CALL      RDFMLC1
          CALL      RDXTMA             * get year data
.
          DISPLAY   *P60:3,*V2LON,"- Analysis by Period",*EL,*HOFF:
                    *P1:4,"Enquiry for ",*V2LON,FMAMDESC,*HOFF,SP10:
                    "Code : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*EF:
                    *P1:5,"Financial Year ",*V2LON,CURYEAR,*HOFF:
                    *P56:5,"Br Fwd : ";
          COMPARE   "0",BRFWD
          GOTO      SCRC1000 IF EQUAL        * display br fwd if not zero
.
          MOVE      BRFWD,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DDEBIT
          DISPLAY   *V2LON,DDEBIT;
.
SCRC1000  DISPLAY    *V2LON,*ULON,*P1:6,"Item",*P16:6,"Actual",*P24:6,"Period":
                     *P49:6,"Budget",*P65:6,"Variance",*P75:6,"% Var",*HOFF:
                     *P1:7,*V2LON," 1.",*HOFF,*P24:7,FMLC01DE:
                     *P1:8,*V2LON," 2.",*HOFF,*P24:8,FMLC02DE:
                     *P1:9,*V2LON," 3.",*HOFF,*P24:9,FMLC03DE:
                    *P1:10,*V2LON," 4.",*HOFF,*P24:10,FMLC04DE:
                    *P1:11,*V2LON," 5.",*HOFF,*P24:11,FMLC05DE:
                    *P1:12,*V2LON," 6.",*HOFF,*P24:12,FMLC06DE:
                    *P1:13,*V2LON," 7.",*HOFF,*P24:13,FMLC07DE:
                    *P1:14,*V2LON," 8.",*HOFF,*P24:14,FMLC08DE:
                    *P1:15,*V2LON," 9.",*HOFF,*P24:15,FMLC09DE:
                    *P1:16,*V2LON,"10.",*HOFF,*P24:16,FMLC10DE:
                    *P1:17,*V2LON,"11.",*HOFF,*P24:17,FMLC11DE:
                    *P1:18,*V2LON,"12.",*HOFF,*P24:18,FMLC12DE:
                    *P6:7,DCTUAL01,*P39:7,DUDGET01,*P57:7,DARIAN01:
                    *P75:7,PERVAR01:
                    *P6:8,DCTUAL02,*P39:8,DUDGET02,*P57:8,DARIAN02:
                    *P75:8,PERVAR02:
                    *P6:9,DCTUAL03,*P39:9,DUDGET03,*P57:9,DARIAN03:
                    *P75:9,PERVAR03:
                    *P6:10,DCTUAL04,*P39:10,DUDGET04,*P57:10,DARIAN04:
                    *P75:10,PERVAR04:
                    *P6:11,DCTUAL05,*P39:11,DUDGET05,*P57:11,DARIAN05:
                    *P75:11,PERVAR05:
                    *P6:12,DCTUAL06,*P39:12,DUDGET06,*P57:12,DARIAN06:
                    *P75:12,PERVAR06:
                    *P6:13,DCTUAL07,*P39:13,DUDGET07,*P57:13,DARIAN07:
                    *P75:13,PERVAR07:
                    *P6:14,DCTUAL08,*P39:14,DUDGET08,*P57:14,DARIAN08:
                    *P75:14,PERVAR08:
                    *P6:15,DCTUAL09,*P39:15,DUDGET09,*P57:15,DARIAN09:
                    *P75:15,PERVAR09:
                    *P6:16,DCTUAL10,*P39:16,DUDGET10,*P57:16,DARIAN10:
                    *P75:16,PERVAR10:
                    *P6:17,DCTUAL11,*P39:17,DUDGET11,*P57:17,DARIAN11:
                    *P75:17,PERVAR11:
                    *P6:18,DCTUAL12,*P39:18,DUDGET12,*P57:18,DARIAN12:
                    *P75:18,PERVAR12;
          COMPARE   "1",FMLAPERS
          GOTO      SCRC2000 IF NOT EQUAL        * 12 periods ?
          DISPLAY   *P1:19,*V2LON,"13.",*HOFF,*P24:19,FMLC13DE:
                    *P6:19,DCTUAL13,*P39:19,DUDGET13,*P57:19,DARIAN13:
                    *P75:19,PERVAR13;
.
SCRC2000  MOVE      AVYTDD0,AVYTDDIS
          LOAD      AVYTDDIS,AVYTD,AVYTDD1
          DISPLAY   *P6:20,"================",*P39:20,"================":
                    *P57:20,"================",*P75:20,"=====":
                    *P24:21,AVYTDDIS:
                    *P6:22,"----------------",*P39:22,"----------------":
                    *P57:22,"----------------",*P75:22,"-----":
                    *P6:21,DOTALACT,*P39:21,DOTALBUD,*P57:21,DOTALVAR:
                    *P75:21,TOTALPVA;
.
SCRC9999  RETURN
.**********************************************************************
. SELC - Perform screen C                             Called By ML
.        Requires - SKEY     (current ledger/account)
.        Returns  - OPTIONC  (option selected)
.                   EXIT     (1=quit)
.**********************************************************************
SELC0000  PACK      KEY14,SKEY
          CALL      RDFMAM1            * get account data
          BRANCH    OVRCD,SELC9300     * account data found ?
.
          MOVE      FMAMTYPE,SAVTYPE   * save account type
          MOVE      ZERO,DECPLACE
          MOVE      FMAMDPLA,DECPLACE  * get no. of decimal places
          MOVE      ZERO,AVYTD
          MATCH     "7",FMAMTYPE
          GOTO      SELC0050 IF LESS
          MOVE      FMAMAYTD,AVYTD     * save ytd type
.
SELC0050  CALL      GDAT0000           * get data
.
          CALL      SCRC0000           * display screen C
.
SELC0100  CALL      MQSC0000           * get option
.
.---- print ----
.
SELC1100  COMPARE   "-1",OPTIONC
          GOTO      SELC1200 IF NOT EQUAL
          CALL      PRTC0000           * print screen
          GOTO      SELC0000           * go back to start of screen
.
.---- ytd ----
.
SELC1200  COMPARE   "-2",OPTIONC
          GOTO      SELC1300 IF NOT EQUAL
          MOVE      "3",SCRNO          * set up screen number
          GOTO      SELC9000           * go back to start of screen
.
.---- summary ----
.
SELC1300  COMPARE   "-3",OPTIONC
          GOTO      SELC1400 IF NOT EQUAL
          MOVE      "1",SCRNO          * set up screen number
          GOTO      SELC9000           * go back to start of screen
.
.---- committed ----
.
SELC1400  COMPARE   "-4",OPTIONC
          GOTO      SELC1500 IF NOT EQUAL
          MOVE      "4",SCRNO          * set up screen number
          GOTO      SELC9000           * go back to start of screen
.
.---- next screen ----
.
SELC1500  COMPARE   "-5",OPTIONC
          GOTO      SELC1600 IF NOT EQUAL
          CALL      NEXT0000           * get next screen
          GOTO      SELC9000           * go back to start of screen
.
.---- last screen ----
.
SELC1600  COMPARE   "-6",OPTIONC
          GOTO      SELC1700 IF NOT EQUAL
          CALL      LAST0000           * get last screen
          GOTO      SELC9000           * go back to start of screen
.
.---- change account ----
.
SELC1700  COMPARE   "-7",OPTIONC
          GOTO      SELC1800 IF NOT EQUAL
          CALL      KACC0000           * get new account
          GOTO      SELC9000           * 
.
.---- exit ----
.
SELC1800  COMPARE   "-9",OPTIONC
          GOTO      SELC1850 IF NOT EQUAL
          GOTO      SELC9500           * go back to start of screen
.
.---- dissection ----
.
SELC1850  COMPARE   "-8",OPTIONC
          GOTO      SELC1870 IF NOT EQUAL
          MOVE      "6",SCRNO          * set up screen number
          GOTO      SELC9000           * go back to start of screen
.
.---- responsibility ----
.
SELC1870  COMPARE   " 0",OPTIONC
          GOTO      SELC1900 IF NOT EQUAL
          MOVE      "7",SCRNO          * set up screen number
          GOTO      SELC9000           * quit
.
.---- option selected ----
.
SELC1900  COMPARE   ONE,PROGNO         * are we in user defined enquiries ?
          GOTO      SELC1930 IF NOT EQUAL
.
          LOAD      F1,OPTIONC,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN,FMLC05IN:
                               FMLC06IN,FMLC07IN,FMLC08IN,FMLC09IN,FMLC10IN:
                               FMLC11IN,FMLC12IN,FMLC13IN
          BRANCH    F1,SELC1930        * continue if period locked
          DISPLAY   *P1:24,*B,*EF:
                    "Period Unlocked - Cannot Access This Period - ";
          CALL      HITENTER
          GOTO      SELC0100
.
SELC1930  MOVE      OPTIONC,PERIODNO   * get period number
          MATCH     "8",SAVTYPE
          GOTO      SELC1950 IF EQUAL  * stat posting type ?
          MATCH     "6",SAVTYPE
          GOTO      SELC1950 IF LESS   * posting type ?
.
          CALL      SELY0000           * total record
          GOTO      SELC9000           * redisplay screen
.
SELC1950  CALL      SELZ0000           * posting record
          GOTO      SELC9000           * redisplay screen
.
.
SELC9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELC9999
.
SELC9300  DISPLAY   *P1:24,*B,*EL,"Account Record Not Found - ";
          CALL      HITENTER
.
SELC9500  MOVE      ONE,EXIT           * quit
.
SELC9999  RETURN
.******************************************************************************
. MQSC - Main question for Screen C             Called By SELC0000
.        Returns  : OPTIONC   (-1=print, -2=YTD, -3=Summary
.                              -4=Committed, -5=fwd scr, -6=back scr
.                              -7=ch acct, -9=exit, -8=dissection,
.                              0=responsibility, other = selection)
.******************************************************************************
MQSC0000  BRANCH    PROGNO,MQSC0050    * display desired prompt
.
          DISPLAY   *P1:24,"Select Item, (":
                    *V2LON,"P",*HOFF,")rint, (":
                    *V2LON,"F",*HOFF,")orward, (":
                    *V2LON,"B",*HOFF,")ack Screen, (":
                    *V2LON,"C",*HOFF,")hange Account, e(":
                    *V2LON,"X",*HOFF,")it : ";
          MOVE      "76",CCOL
          GOTO      MQSC3000
.
MQSC0050  COMPARE   ONE,FMCOUST             * accrual active ?
          GOTO      MQSC0070 IF EQUAL
          MATCH     "6",SAVTYPE             * posting account ?
          GOTO      MQSC0070 IF NOT LESS
          DISPLAY   *P1:23,"(",*V2LON,"D",*HOFF,")issection Analysis":
                    ", (",*V2LON,"R",*HOFF,")esponsibility Analysis";
.
MQSC0070  DISPLAY   *P1:24,"Select Item, (",*V2LON,"P",*HOFF,")rint, (";
          MOVE      "43",CCOL
.
          MATCH     "6",SAVTYPE
          GOTO      MQSC0100 IF LESS        * YTD analysis ?
          MATCH     "8",SAVTYPE
          GOTO      MQSC0100 IF EQUAL
          DISPLAY   *V2LON,"Y",*HOFF,")td Analysis, (";
          ADD       "16",CCOL
.
MQSC0100  MATCH     "7",SAVTYPE
          GOTO      MQSC0200 IF NOT LESS    * committed ?
          DISPLAY   *V2LON,"C",*HOFF,")ommitted, (";
          ADD       "13",CCOL
.
MQSC0200  DISPLAY   *V2LON,"S",*HOFF,")ummary, e(",*V2LON,"X",*HOFF,")it : ";
.
MQSC3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
          MATCH     " P",XIM2
          GOTO      MQSC3100 IF NOT EQUAL
          MOVE      "-1",OPTIONC            * print
          GOTO      MQSC9999
.
MQSC3100  COMPARE   ONE,PROGNO
          GOTO      MQSC3500 IF NOT EQUAL
.
.---- options for IBAFMS20 ----
.
          MATCH     "6",SAVTYPE
          GOTO      MQSC3200 IF LESS        * YTD analysis ?
          MATCH     "8",SAVTYPE
          GOTO      MQSC3200 IF EQUAL
          MATCH     " Y",XIM2
          GOTO      MQSC3200 IF NOT EQUAL
          MOVE      "-2",OPTIONC            * ytd
          GOTO      MQSC9999
.
MQSC3200  MATCH     " S",XIM2
          GOTO      MQSC3300 IF NOT EQUAL
          MOVE      "-3",OPTIONC            * summary
          GOTO      MQSC9999
.
MQSC3300  MATCH     " C",XIM2
          GOTO      MQSC3400 IF NOT EQUAL
          MATCH     "8",SAVTYPE
          GOTO      MQSC3400 IF NOT LESS
          MOVE      "-4",OPTIONC            * committed
          GOTO      MQSC9999
.
MQSC3400  COMPARE   ONE,FMCOUST             * accrual active ?
          GOTO      MQSC3700 IF EQUAL
          MATCH     "6",SAVTYPE             * posting account ?
          GOTO      MQSC3700 IF NOT LESS
.
          MATCH     " D",XIM2
          GOTO      MQSC3450 IF NOT EQUAL   * dissection analysis
          MOVE      "-8",OPTIONC
          GOTO      MQSB9999
.
MQSC3450  MATCH     " R",XIM2
          GOTO      MQSC3700 IF NOT EQUAL   * responsibility analysis
          MOVE      " 0",OPTIONC
          GOTO      MQSB9999
.
.---- options for IBAFMS21 & 22 ----
.
MQSC3500  MATCH     " F",XIM2
          GOTO      MQSC3600 IF NOT EQUAL
          MOVE      "-5",OPTIONC            * forward
          GOTO      MQSC9999
.
MQSC3600  MATCH     " B",XIM2
          GOTO      MQSC3650 IF NOT EQUAL
          MOVE      "-6",OPTIONC            * back screen
          GOTO      MQSC9999
.
MQSC3650  MATCH     " C",XIM2
          GOTO      MQSC3700 IF NOT EQUAL
          MOVE      "-7",OPTIONC            * change
          GOTO      MQSC9999
.
.
MQSC3700  MATCH     " X",XIM2
          GOTO      MQSC3750 IF NOT EQUAL
          MOVE      "-9",OPTIONC            * exit
          GOTO      MQSC9999
.
MQSC3750  MOVE      ZERO,OPTIONC
          MOVE      XIM2,OPTIONC
          BRANCH    OPTIONC,MQSC9999,MQSC9999,MQSC9999,MQSC9999,MQSC9999:
                            MQSC9999,MQSC9999,MQSC9999,MQSC9999,MQSC9999:
                            MQSC9999,MQSC9999,MQSC3800
          GOTO      MQSC3900
.
MQSC3800  COMPARE   "1",FMLAPERS
          GOTO      MQSC9999 IF EQUAL  * 13 periods ?
.
MQSC3900  BEEP                         * illegal option
          GOTO      MQSC3000           * get another option
.
MQSC9999  RETURN
.******************************************************************************
. SCRD - Display Screen D                       Called by SELD
.******************************************************************************
SCRD0000  DISPLAY   *P60:3,*V2LON,"- Ytd Analysis",*EL,*HOFF:
                    *P1:4,"Enquiry for ",*V2LON,FMAMDESC,*HOFF,SP10:
                    "Code : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*EF,*HOFF:
                    *P1:5,"Accounting Period ",*P35:5,"Ending ",*V2LON,*ULON:
                    *P42:6,"Year to Date":
                    *P1:7,"Item",*P6:7,"Description":
                    *P42:7,"Ytd Actual",*P57:7,"Budget",*P66:7,"Variance":
                    *P76:7,"% Var";
          MATCH     "8",SAVTYPE
          GOTO      SCRD9999 IF LESS
          DISPLAY   *V2LON,*ULON,*P37:7,"Type";
.
SCRD9999  RETURN
.**********************************************************************
. SELD - Perform screen D                             Called By ML
.        Requires - SKEY     (current ledger/account)
.        Returns  - OPTIOND  (option selected)
.                   EXIT     (1=quit)
.**********************************************************************
SELD0000  PACK      KEY14,SKEY
          CALL      RDFMAM1            * get account data
          BRANCH    OVRCD,SELD9300     * account data found ?
          MOVE      FMAMTYPE,SAVTYPE   * account type
          MOVE      ZERO,DECPLACE
          MOVE      FMAMDPLA,DECPLACE  * get no. of decimal places
          MOVE      ZERO,AVYTD
          MATCH     "7",FMAMTYPE
          GOTO      SELD0010 IF LESS
          MOVE      FMAMAYTD,AVYTD     * save ytd type
.
SELD0010  UNPACK    SKEY,KEY2
          PACK      KEY6,KEY2,CURYEAR,SP70
          CALL      RDFMLC1
          CALL      RDXTMA             * get year data
.
          CALL      SCRD0000           * display screen D
          CALL      HPER0000           * display period data
          MOVE      "1",PAGENO         * start at page 1
          CALL      DATD0000           * display data
.
SELD0100  CALL      MQSD0000           * get option
.
.---- anal by period ----
.
          COMPARE   "-1",OPTIOND
          GOTO      SELD1300 IF NOT EQUAL
          MOVE      "2",SCRNO          * set up screen number
          GOTO      SELD9000           * go back to start of screen
.
.---- summary ----
.
SELD1300  COMPARE   "-2",OPTIOND
          GOTO      SELD1400 IF NOT EQUAL
          MOVE      "1",SCRNO          * set up screen number
          GOTO      SELD9000           * go back to start of screen
.
.---- committed ----
.
SELD1400  COMPARE   "-3",OPTIOND
          GOTO      SELD1500 IF NOT EQUAL
          MOVE      "4",SCRNO          * set up screen number
          GOTO      SELD9000           * go back to start of screen
.
.---- next ----
.
SELD1500  COMPARE   "-4",OPTIOND
          GOTO      SELD1600 IF NOT EQUAL
          CALL      NEXT0000           * get next screen
          GOTO      SELD9000           * go back to start of screen
.
.---- last ----
.
SELD1600  COMPARE   "-5",OPTIOND
          GOTO      SELD1700 IF NOT EQUAL
          CALL      LAST0000           * get last screen
          GOTO      SELD9000           * go back to start of screen
.
.---- change screen ----
.
SELD1700  COMPARE   "-6",OPTIOND
          GOTO      SELD1720 IF NOT EQUAL
          CALL      KACC0000           * get account
          GOTO      SELD9000           * go back to start of screen
.
.---- dissection ----
.
SELD1720  COMPARE   "-7",OPTIOND
          GOTO      SELD1760 IF NOT EQUAL
          MOVE      "6",SCRNO          * set up screen number
          GOTO      SELD9000           * go back to start of screen
.
.---- responsibility ----
.
SELD1760  COMPARE   "-8",OPTIOND
          GOTO      SELD1800 IF NOT EQUAL
          MOVE      "7",SCRNO          * set up screen number
          GOTO      SELD9000           * go back to start of screen
.
.---- exit ----
.
SELD1800  COMPARE   "-9",OPTIOND
          GOTO      SELD1900 IF NOT EQUAL
          GOTO      SELD9500           * quit
.
.---- option selected ----
.
SELD1900  MOVE      SP70,KEY14
          LOAD      KEY14,OPTIOND,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          MATCH     SP70,KEY14
          GOTO      SELD5000 IF NOT EQUAL   * valid selection ?
          BEEP
          GOTO      SELD0100                * get another selection
.
SELD5000  MOVE      KEY14,SKEY              * set up for new account
          CALL      RDFMAM1                 * get account data
          MOVE      FMAMTYPE,SAVTYPE
          UNPACK    SKEY,KEY2
          CALL      RDFMLA1                 * get ledger data
          PACK      KEY6,FMLALEDG,FMLACYRR,SP70
          CALL      RDFMLC1
          CALL      RDXTMA                  * get ledger calendar data
.
          MOVE      ZERO,TOTALTYP           * default to normal tot type
          MATCH     "6",FMAMTYPE
          GOTO      SELD9000 IF NOT EQUAL
.
          MOVE      ONE,TOTALTYP
          PACK      KEY14,SKEY,SP70
          CALL      RDFMSA1                 * get account data
          COMPARE   ONE,OVRCD
          GOTO      SELD9000 IF NOT EQUAL   * subjective ?
.
          MOVE      TWO,TOTALTYP
          PACK      KEY14,SKEY,SP70
          CALL      RDFMCC1                 * get account data
          COMPARE   ONE,OVRCD
          GOTO      SELD9000 IF NOT EQUAL   * cost centre ?
          MOVE      ZERO,TOTALTYP           * normal
.
.
SELD9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELD9999
.
SELD9300  DISPLAY   *P1:24,*B,*EL,"Account Record Not Found - ";
          CALL      HITENTER
.
SELD9500  MOVE      ONE,EXIT           * quit
.
SELD9999  RETURN
.******************************************************************************
. MQSD - Main question for Screen D             Called By SELD
.        Returns  : OPTIOND  (-1=Anal by per, -2=Summary, -3=Committed, 
.               -4=fwd scr, -5=bk scr, -6=ch acct, -7=diss, -8=resp, -9=exit)
.******************************************************************************
MQSD0000  BRANCH    PROGNO,MQSD0500    * display prompt
.
          DISPLAY   *P1:24,"Select, (",*V2LON,"F",*HOFF:
                    ")orward, (",*V2LON,"B",*HOFF:
                    ")ack Screen, (",*V2LON,"C",*HOFF,")hange Account, (":
                    *V2LON,"P",*HOFF,")rint, e(":
                    *V2LON,"X",*HOFF,")it";
          MOVE      "67",CCOL
          GOTO      MQSD0600
.
MQSD0500  DISPLAY   *P1:24,"Select, (",*V2LON,"A",*HOFF:
                    ")nal. by Period, (",*V2LON,"S",*HOFF:
                    ")ummary, (":
                    *V2LON,"P",*HOFF,")rint, e(":
                    *V2LON,"X",*HOFF,")it";
          MOVE      "53",CCOL
          MATCH     "7",SAVTYPE
          GOTO      MQSD0600 IF NOT LESS
          DISPLAY   ", (",*V2LON,"C",*HOFF,")ommitted";
          ADD       "13",CCOL
.
MQSD0600  COMPARE   ONE,MORE
          GOTO      MQSD1000 IF NOT EQUAL        * any more data ?
          DISPLAY   ", (",*V2LON,"M",*HOFF,")ore";
          ADD       "8",CCOL
.
MQSD1000  DISPLAY   " : ";
          ADD       "4",CCOL
.
MQSD3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
.
          MATCH     " X",XIM2
          GOTO      MQSD3020 IF NOT EQUAL
          MOVE      "-9",OPTIOND       * exit
          GOTO      MQSD9999
.
MQSD3020  MATCH     " P",XIM2
          GOTO      MQSD3030 IF NOT EQUAL
          CALL      PRTD0000                     * print screen
          CALL      DATD0000                     * display data
          GOTO      MQSD0000
.
MQSD3030  COMPARE   ONE,MORE
          GOTO      MQSD3050 IF NOT EQUAL        * any more data ?
          MATCH     " M",XIM2
          GOTO      MQSD3050 IF NOT EQUAL
          ADD       ONE,PAGENO                   * get next page
          CALL      DATD0000                     * display data
          GOTO      MQSD0000
.
MQSD3050  COMPARE   ONE,PROGNO
          GOTO      MQSD3400 IF NOT EQUAL        * execute desired options
.
.---- options for IBAFMS20 ----
.
          MATCH     " A",XIM2
          GOTO      MQSD3200 IF NOT EQUAL
          MOVE      "-1",OPTIOND       * anal by period
          GOTO      MQSD9999
.
MQSD3200  MATCH     " S",XIM2
          GOTO      MQSD3300 IF NOT EQUAL
          MOVE      "-2",OPTIOND       * summary
          GOTO      MQSD9999
.
MQSD3300  MATCH     " C",XIM2
          GOTO      MQSD3800 IF NOT EQUAL
          MATCH     "7",SAVTYPE
          GOTO      MQSD3800 IF NOT LESS
          MOVE      "-3",OPTIOND       * committed
          GOTO      MQSD9999
.
.---- options for IBAFMS21 & 22 ----
.
MQSD3400  MATCH     " F",XIM2
          GOTO      MQSD3500 IF NOT EQUAL
          MOVE      "-4",OPTIOND       * fwd screen
          GOTO      MQSD9999
.
MQSD3500  MATCH     " B",XIM2
          GOTO      MQSD3600 IF NOT EQUAL
          MOVE      "-5",OPTIOND       * back screen
          GOTO      MQSD9999
.
MQSD3600  MATCH     " C",XIM2
          GOTO      MQSD3800 IF NOT EQUAL
          MOVE      "-6",OPTIOND       * ch acct
          GOTO      MQSD9999
.
.
MQSD3800  MOVE      ZERO,OPTIOND
          MOVE      XIM2,OPTIOND       * option selected
          COMPARE   OPTIOND,ZERO
          GOTO      MQSD9999 IF LESS   * option positive ?
          BEEP
          GOTO      MQSD3000
.
MQSD9999  RETURN
.******************************************************************************
.* DATD - display Screen D data                  Called By MQSD,SELD          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMD (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*                  MORE     (1=more data)                                    *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATD0000  PACK      ST1,SP70,SP10
          PACK      ST2,SP70,SP10
          PACK      ST3,SP70,SP10
          PACK      ST4,SP70,SP10
          PACK      ST5,SP70,SP10
          PACK      ST6,SP70,SP10
          PACK      ST7,SP70,SP10
          PACK      ST8,SP70,SP10
          PACK      ST9,SP70,SP10
          PACK      ST10,SP70,SP10
          PACK      ST11,SP70,SP10
          PACK      ST12,SP70,SP10
          PACK      ST13,SP70,SP10
          PACK      ST14,SP70,SP10
          PACK      ST15,SP70,SP10
          PACK      ST16,SP70,SP10
          PACK      ST17,SP70,SP10
.
          PACK      KEY14,SKEY,SP70
          CALL      RDFMAM1
          MOVE      FMAMTYPE,TEMPTYPE
          MOVE      ZERO,TEMPDPLA
          MOVE      FMAMDPLA,TEMPDPLA
.
          PACK      KEY33,SKEY,SP70
          CALL      RSFMTC1                      * go to start of records
.
          MOVE      "7",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          MOVE      "0",TACTUAL
          MOVE      "0",TBUDGET
          DISPLAY   *P1:8,*EF;                   * clear data area on screen
.
.---- get next rec ----
.
DATD1000  MATCH     "8",TEMPTYPE
          GOTO      DATD1100 IF LESS             * stat type rec ?
.
          CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,DATD9000               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,KEY33
          GOTO      DATD9000 IF NOT EQUAL        * no more records ?
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70 * desired account
.
          DISPLAY   *P1:24,"Scanning - ",FMTCSLED,"/",FMTCSACC,*EL;
          CALL      GDAT0000
.
          UNPACK    FMAMDESC,XIM31
          MOVE      FMTCADDT,F1
          MOVE      ADDT0,ADDT
          LOAD      ADDT,F1,ADDT1,ADDT2,ADDT3
          MOVE      ADDT,KEY3
          PACK      FMAMDESC,XIM31,SP1,KEY3,SP70
          BRANCH    F1,DATD1010,DATD1020,DATD1030
.
          ADD       YTDACT,TACTUAL
          ADD       YTDBUD,TBUDGET
          GOTO      DATD1200
.
DATD1010  SUB       YTDACT,TACTUAL
          SUB       YTDBUD,TBUDGET
          GOTO      DATD1200
.
DATD1020  MOVE      YTDACT,CDIV1
          MOVE      TACTUAL,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,TACTUAL
.
          MOVE      YTDBUD,CDIV1
          MOVE      TBUDGET,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,TBUDGET
          GOTO      DATD1200
.
DATD1030  MULT      YTDACT,TACTUAL
          MULT      YTDBUD,TBUDGET
          GOTO      DATD1200
.
.
DATD1100  CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,DATD9000               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,KEY33
          GOTO      DATD9000 IF NOT EQUAL        * no more records ?
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
.
          DISPLAY   *P1:24,"Scaning - ",FMTCSLED,"/",FMTCSACC,*EL;
          CALL      GDAT0000
          ADD       YTDACT,TACTUAL
          ADD       YTDBUD,TBUDGET
.
          COMPARE   "0",TOTALTYP
          GOTO      DATD1200 IF EQUAL            * get subj/cc description ?
          MOVE      FMAMDESC,FMSADESC
          MOVE      FMAMDESC,FMCCDESC
          MOVE      FMTCSACC,ACCOUNT
          CALL      GCOD0000                     * break up into cc and subj
          PACK      KEY14,FMTCSLED,COSTCODE,SP70
          COMPARE   "1",TOTALTYP
          CALL      RDFMCC1 IF EQUAL             * cc desc required ?
          PACK      KEY14,FMTCSLED,SUBJCODE,SP70
          COMPARE   "2",TOTALTYP
          CALL      RDFMSA1 IF EQUAL             * subj desc required ?
          LOAD      FMAMDESC,TOTALTYP,FMCCDESC,FMSADESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70 * restore key 14
.
.---- process rec ----
.
DATD1200  COMPARE   ZERO,YTDACT                  * any data ?
          GOTO      DATD1250 IF NOT EQUAL
          COMPARE   ZERO,YTDBUD
          GOTO      DATD1250 IF NOT EQUAL
.
          MATCH     "2",FMTCADDT                 * display data if "X" or "/"
          GOTO      DATD1000 IF LESS
.
DATD1250  ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMD,ITEMNUM
          GOTO      DATD2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATD2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATD1000 IF NOT EQUAL        * not on current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
.
          STORE     KEY14,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P6:LINENO,FMAMDESC:
                    DTDACT,DTDBUD,DTDVAR,SP2,YTDPVA;
.
          GOTO      DATD1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATD9000  MOVE      TEMPDPLA,DECPLACE
          MOVE      TACTUAL,XACTUAL
          MOVE      TBUDGET,XBUDGET
          CALL      CALC0000                     * cal var and % var
          MOVE      TACTUAL,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDACT
.
          MOVE      TBUDGET,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDBUD
.
          MOVE      XVARIAN,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDVAR
.
          DISPLAY   *P30:22,*V2LON:
                    "Totals     ",DTDACT,DTDBUD,DTDVAR,SP2,XPERVAR;
          COMPARE   CURPAGE,PAGENO
          GOTO      DATD9500 IF LESS
          MOVE      ZERO,ITEMNUM                 * reset pointer
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATD9999
.
.---- reached EOP before EOF ----
.
DATD9500  MOVE      ONE,MORE                     * more data
          MOVE      MAXITEMD,ITEMNUM
.
DATD9999  RETURN
.******************************************************************************
.* DATY - display Screen Y data                  Called By MQSY,SELY          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMD (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*                  MORE     (1=more data)                                    *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATY0000  PACK      ST1,SP70,SP10
          PACK      ST2,SP70,SP10
          PACK      ST3,SP70,SP10
          PACK      ST4,SP70,SP10
          PACK      ST5,SP70,SP10
          PACK      ST6,SP70,SP10
          PACK      ST7,SP70,SP10
          PACK      ST8,SP70,SP10
          PACK      ST9,SP70,SP10
          PACK      ST10,SP70,SP10
          PACK      ST11,SP70,SP10
          PACK      ST12,SP70,SP10
          PACK      ST13,SP70,SP10
          PACK      ST14,SP70,SP10
          PACK      ST15,SP70,SP10
          PACK      ST16,SP70,SP10
          PACK      ST17,SP70,SP10
.
          PACK      KEY14,SKEY,SP70
          CALL      RDFMAM1
          MOVE      FMAMTYPE,TEMPTYPE
          MOVE      ZERO,TEMPDPLA
          MOVE      FMAMDPLA,TEMPDPLA
.
          PACK      KEY33,SKEY,SP70
          CALL      RSFMTC1                      * go to start of records
.
          MOVE      "7",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          MOVE      "0",TYTDACT
          MOVE      "0",TACTUAL
          MOVE      "0",TBUDGET
          DISPLAY   *P1:8,*EF;                   * clear data area on screen
.
.---- get next rec ----
.
DATY1000  MATCH     "8",TEMPTYPE
          GOTO      DATY1100 IF LESS             * stat type rec ?
.
          CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,DATY9000               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,KEY33
          GOTO      DATY9000 IF NOT EQUAL        * no more records ?
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70 * desired account
.
          DISPLAY   *P1:24,"Scanning - ",FMTCSLED,"/",FMTCSACC,*EL;
          CALL      GDAT0000
.
          UNPACK    FMAMDESC,XIM31
          MOVE      FMTCADDT,F1
          MOVE      ADDT0,ADDT
          LOAD      ADDT,F1,ADDT1,ADDT2,ADDT3
          MOVE      ADDT,KEY3
          PACK      FMAMDESC,XIM31,SP1,KEY3,SP70
          BRANCH    F1,DATY1010,DATY1020,DATY1030
.
          ADD       YTDACT,TYTDACT
          ADD       ACTUAL,TACTUAL
          ADD       BUDGET,TBUDGET
          GOTO      DATY1200
.
DATY1010  SUB       YTDACT,TYTDACT
          SUB       ACTUAL,TACTUAL
          SUB       BUDGET,TBUDGET
          GOTO      DATY1200
.
DATY1020  MOVE      YTDACT,CDIV1
          MOVE      TYTDACT,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,TYTDACT
.
          MOVE      ACTUAL,CDIV1
          MOVE      TACTUAL,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,TACTUAL
.
          MOVE      BUDGET,CDIV1
          MOVE      TBUDGET,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,TBUDGET
          GOTO      DATY1200
.
DATY1030  MULT      YTDACT,TYTDACT
          MULT      ACTUAL,TACTUAL
          MULT      BUDGET,TBUDGET
          GOTO      DATY1200
.
.
DATY1100  CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,DATY9000               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,KEY33
          GOTO      DATY9000 IF NOT EQUAL        * no more records ?
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
.
          DISPLAY   *P1:24,"Scaning - ",FMTCSLED,"/",FMTCSACC,*EL;
          CALL      GDAT0000
          ADD       YTDACT,TYTDACT
          ADD       ACTUAL,TACTUAL
          ADD       BUDGET,TBUDGET
.
          COMPARE   "0",TOTALTYP
          GOTO      DATY1200 IF EQUAL            * get subj/cc description ?
          MOVE      FMAMDESC,FMSADESC
          MOVE      FMAMDESC,FMCCDESC
          MOVE      FMTCSACC,ACCOUNT
          CALL      GCOD0000                     * break up into cc and subj
          PACK      KEY14,FMTCSLED,COSTCODE,SP70
          COMPARE   "1",TOTALTYP
          CALL      RDFMCC1 IF EQUAL             * cc desc required ?
          PACK      KEY14,FMTCSLED,SUBJCODE,SP70
          COMPARE   "2",TOTALTYP
          CALL      RDFMSA1 IF EQUAL             * subj desc required ?
          LOAD      FMAMDESC,TOTALTYP,FMCCDESC,FMSADESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70 * restore key 14
.
.---- process rec ----
.
DATY1200  COMPARE   ZERO,ACTUAL                  * any data ?
          GOTO      DATY1250 IF NOT EQUAL
          COMPARE   ZERO,BUDGET
          GOTO      DATY1250 IF NOT EQUAL
.
          MATCH     "2",FMTCADDT                 * display data if "X" or "/"
          GOTO      DATY1000 IF LESS
.
DATY1250  ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMD,ITEMNUM
          GOTO      DATY2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATY2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATY1000 IF NOT EQUAL        * not on current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
.
          MOVE      ACTUAL,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDACT
.
          MOVE      BUDGET,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDBUD
.
          MOVE      VARIAN,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDVAR
.
          STORE     KEY14,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P6:LINENO,FMAMDESC:
                    DTDACT,DTDBUD,DTDVAR,SP2,PERVAR;
.
          GOTO      DATY1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATY9000  MOVE      TEMPDPLA,DECPLACE
          MOVE      TACTUAL,XACTUAL
          MOVE      TBUDGET,XBUDGET
          CALL      CALC0000                     * cal var and % var
          MOVE      TACTUAL,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDACT
.
          MOVE      TBUDGET,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDBUD
.
          MOVE      XVARIAN,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDVAR
.
          DISPLAY   *P30:22,*V2LON:
                    "Totals     ",DTDACT,DTDBUD,DTDVAR,SP2,XPERVAR;
.
          MOVE      TYTDACT,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          DISPLAY   *P56:5,"  YTD  :",*V2LON,XIM17;
.
          COMPARE   CURPAGE,PAGENO
          GOTO      DATY9500 IF LESS
          MOVE      ZERO,ITEMNUM                 * reset pointer
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATY9999
.
.---- reached EOP before EOF ----
.
DATY9500  MOVE      ONE,MORE                     * more data
          MOVE      MAXITEMD,ITEMNUM
.
DATY9999  RETURN
.******************************************************************************
. SCRE - Display Screen E                       Called by SELE
.******************************************************************************
SCRE0000  DISPLAY   *P60:3,*V2LON,"- Committed Details",*EL,*HOFF:
                    *P1:4,"Enquiry for ",*V2LON,FMAMDESC,*HOFF,SP10:
                    "Code : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*EF,*HOFF:
                    *P1:5,"Accounting Period ",*P35:5,"Ending ",*V2LON,*ULON:
                    *P1:7,*ULON,"Item",*P6:7,"Description":
                    *P42:7,"Committed Amount",*P61:7,"Code"
.
SCRE9999  RETURN
.******************************************************************************
. SCRF - Display Screen F                       Called by SELE
.******************************************************************************
SCRF0000  DISPLAY   *P60:3,*V2LON,"- Committed Details",*EL,*HOFF:
                    *P1:4,"Enquiry for ",*V2LON,FMAMDESC,*HOFF,SP10:
                    "Code : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*EF:
                    *P50:6,"  Amount Raised":
                    *P66:6,"Amount Received",*ULON:
                    *P01:7,"Itm":
                    *P05:7,"Date    ":
                    *P14:7,"Order No":
                    *P23:7,"Description               ":
                    *P50:7," & not Received":
                    *P66:7," & not Invoiced"
.
SCRF9999  RETURN
.**********************************************************************
. SELE - Perform screen E                             Called By ML
.        Requires - SKEY     (current ledger/account)
.        Returns  - OPTIOND  (option selected)
.                   EXIT     (1=quit)
.**********************************************************************
SELE0000  PACK      KEY14,SKEY
          CALL      RDFMAM1            * get account data
          BRANCH    OVRCD,SELE9300     * account data found ?
          MOVE      FMAMTYPE,SAVTYPE   * save account type
          MOVE      ZERO,DECPLACE
          MOVE      FMAMDPLA,DECPLACE  * get no. of decimal places
          MOVE      ZERO,AVYTD
          MATCH     "7",FMAMTYPE
          GOTO      SELE0010 IF LESS
          MOVE      FMAMAYTD,AVYTD     * save ytd type
.
SELE0010  MOVE      "1",PAGENO         * start at page 1
          UNPACK    SKEY,KEY2
          PACK      KEY6,KEY2,CURYEAR,SP70
          CALL      RDFMLC1
          CALL      RDXTMA             * get year data
.
SELE0020  MATCH     "6",SAVTYPE
          GOTO      SELE0050 IF LESS   * posting type
.
          CALL      SCRE0000           * display screen E (total record)
          CALL      HPER0000           * display period data
          CALL      DATE0000           * display data
          GOTO      SELE0100
.
SELE0050  CALL      SCRF0000           * display screen F (posting record)
          CALL      DATF0000           * display data
.
SELE0100  CALL      MQSE0000           * get option
.
.---- anal by period ----
.
          COMPARE   "-1",OPTIOND
          GOTO      SELE1300 IF NOT EQUAL
          MOVE      "2",SCRNO          * set up screen number
          GOTO      SELE9000           * go back to start of screen
.
.---- summary ----
.
SELE1300  COMPARE   "-2",OPTIOND
          GOTO      SELE1400 IF NOT EQUAL
          MOVE      "1",SCRNO          * set up screen number
          GOTO      SELE9000           * go back to start of screen
.
.---- YTD ----
.
SELE1400  COMPARE   "-3",OPTIOND
          GOTO      SELE1500 IF NOT EQUAL
          MOVE      "3",SCRNO          * set up screen number
          GOTO      SELE9000           * go back to start of screen
.
.---- next screen ----
.
SELE1500  COMPARE   "-4",OPTIOND
          GOTO      SELE1600 IF NOT EQUAL
          CALL      NEXT0000           * get next screen
          GOTO      SELE9000           * go back to start of screen
.
.---- last screen ----
.
SELE1600  COMPARE   "-5",OPTIOND
          GOTO      SELE1700 IF NOT EQUAL
          CALL      LAST0000           * get last screen
          GOTO      SELE9000           * go back to start of screen
.
.---- change account ----
.
SELE1700  COMPARE   "-6",OPTIOND
          GOTO      SELE1800 IF NOT EQUAL
          CALL      KACC0000           * get account
          GOTO      SELE9000           * go back to start of screen
.
.---- exit ----
.
SELE1800  COMPARE   "-9",OPTIOND
          GOTO      SELE1850 IF NOT EQUAL
          GOTO      SELE9500           * quit
.
.---- dissection ----
.
SELE1850  COMPARE   "-7",OPTIOND
          GOTO      SELE1870 IF NOT EQUAL
          MOVE      "6",SCRNO          * set up screen number
          GOTO      SELE9000           * quit
.
.---- responsibility ----
.
SELE1870  COMPARE   "-8",OPTIOND
          GOTO      SELE1900 IF NOT EQUAL
          MOVE      "7",SCRNO          * set up screen number
          GOTO      SELE9000           * quit
.
.---- option selected ----
.
SELE1900  MATCH     "6",SAVTYPE
          GOTO      SELE2000 IF LESS   * posting type ?
.
          MOVE      SP70,KEY14
          LOAD      KEY14,OPTIOND,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          MATCH     SP70,KEY14
          GOTO      SELE5000 IF NOT EQUAL   * valid selection ?
          BEEP
          GOTO      SELE0100                * get another selection
.
SELE2000  MOVE      SP70,KEY28
          LOAD      KEY28,OPTIOND,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          CALL      DISE0000                * display sub-screen
          BRANCH    EXIT,SELE0100           * illegal selection ?
          GOTO      SELE0020                * get another selection
.
SELE5000  MOVE      KEY14,SKEY              * valid selection
          CALL      RDFMAM1                 * get account data
          MOVE      FMAMTYPE,SAVTYPE
          UNPACK    SKEY,KEY2
          CALL      RDFMLA1                 * get ledger data
          PACK      KEY6,FMLALEDG,FMLACYRR,SP70
          CALL      RDFMLC1
          CALL      RDXTMA                  * get ledger calendar data
          MOVE      ZERO,TOTALTYP           * default to normal tot type
          MATCH     "6",FMAMTYPE
          GOTO      SELE9000 IF NOT EQUAL
.
          MOVE      ONE,TOTALTYP
          PACK      KEY14,SKEY,SP70
          CALL      RDFMSA1                 * get account data
          COMPARE   ONE,OVRCD
          GOTO      SELE9000 IF NOT EQUAL   * subjective ?
.
          MOVE      TWO,TOTALTYP
          PACK      KEY14,SKEY,SP70
          CALL      RDFMCC1                 * get account data
          COMPARE   ONE,OVRCD
          GOTO      SELE9000 IF NOT EQUAL   * cost centre ?
          MOVE      ZERO,TOTALTYP           * normal
.
.
SELE9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELE9999
.
SELE9300  DISPLAY   *P1:24,*B,*EL,"Account Record Not Found - ";
          CALL      HITENTER
.
SELE9500  MOVE      ONE,EXIT           * quit
.
SELE9999  RETURN
.**********************************************************************
. DISE - Committed details sub-screen                 Called By SELE
.        Requires - KEY28    (record to display)
.**********************************************************************
DISE0000  CALL      RDCEX000
          BRANCH    OVRCD,DISE9500
.
          UNPACK    SP70,APCIDAT,APCICRD
          PACK      KEY8,APODISC,APODORD,SP70
          CALL      RDHED000
.
          MOVE      ZERO,EXIT
          MOVE      "9",REPNO
          UNPACK    SP70,FMDSDESC,FMRSDESC
          PACK      KEY5,APODDIS,SP70
          CALL      RDFMDS1
          PACK      KEY4,APODRES,SP70
          CALL      RDFMRS1
          UNPACK    APCIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          PACK      APMACN1,SP70
          PACK      KEY5,APCICRD,SP70
          CALL      RDAPMA1
.
          DISPLAY   *P1:05,*EF:
                    *P5:06,"Order Number          : ":
                          *V2LON,APODISC,APODORD,*HOFF:
                    *P5:08,"Supplier              : ":
                           *V2LON,APCICRD,*HOFF,*P42:08,APMACN1:
                    *P5:09,"Raised not Received   : ",*V2LON,APEBAMT,*HOFF:
                    *P5:10,"Received not Invoiced : ",*V2LON,APODAMT,*HOFF:
                    *P5:11,"Dissection            : ":
                           *V2LON,APODDIS,*HOFF,*P42:11,FMDSDESC:
                    *P5:12,"Responsibility        : ":
                           *V2LON,APODRES,*HOFF,*P42:12,FMRSDESC:
                    *P5:13,"Description           : ",*V2LON,APODDES,*HOFF:
                    *P5:14,"Date                  : ",*V2LON,CPCDATE;
.
DISE1000  KEYIN     *P1:24,"(",*V2LON,"P",*HOFF,")rint, e(":
                    *V2LON,"X",*HOFF,")it : _",*P19:24,*V2LON,ANS,*EL;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "X",ANS
          GOTO      DISE9999 IF EQUAL
          MATCH     "P",ANS
          GOTO      DISE5000 IF EQUAL
          BEEP
          GOTO      DISE1000
.
DISE5000  CALL      HEAD0000
          PRINT     *N,"Enquiry for ",FMAMDESC,SP10:
                    "Code : ",FMAMLEDG,SLASH,FMAMACCT,*N:
                    *N,*5,"Order Number          : ",APODISC,APODORD:
                    *N,*5,"Supplier              : ",APCICRD:
                    *N,*5,"Raised not Received   : ",APEBAMT:
                    *N,*5,"Received not Invoiced : ",APODAMT:
                    *N,*5,"Dissection            : ",APODDIS,*42,FMDSDESC:
                    *N,*5,"Responsibility        : ",APODRES,*42,FMRSDESC:
                    *N,*5,"Description           : ",APODDES:
                    *N,*5,"Date                  : ",CPCDATE;
          GOTO      DISE0000
.
DISE9500  BEEP                         * illegal option
          MOVE      ONE,EXIT
.
DISE9999  RETURN
.******************************************************************************
. MQSE - Main question for Screen E             Called By SELE0000
.        Returns  : OPTIOND  (-1=Anal by per, -2=Summary, -3=Ytd, 
.                             -4=fwd scr, -5=bk scr, -6=ch acct,
.                             -7=dissection, -8=responsibility, -9=exit)
.******************************************************************************
MQSE0000  BRANCH    PROGNO,MQSE0500    * display prompt
.
          DISPLAY   *P1:24,"Select Item, (",*V2LON,"F",*HOFF:
                    ")orward, (",*V2LON,"B",*HOFF:
                    ")ack Screen, (",*V2LON,"C",*HOFF,")hange Account, e(":
                    *V2LON,"X",*HOFF,")it";
          MOVE      "63",CCOL
          GOTO      MQSE0700
.
MQSE0500  COMPARE   ONE,FMCOUST             * accrual active ?
          GOTO      MQSE0510 IF EQUAL
          MATCH     "6",SAVTYPE             * posting account ?
          GOTO      MQSE0510 IF NOT LESS
          DISPLAY   *P1:23,"(",*V2LON,"D",*HOFF,")issection Analysis":
                    ", (",*V2LON,"R",*HOFF,")esponsibility Analysis";
.
MQSE0510  DISPLAY   *P1:24,"Select Item, (",*V2LON,"A",*HOFF:
                    ")nalysis by Period, (",*V2LON,"S",*HOFF:
                    ")ummary, e(",*V2LON,"X",*HOFF,")it";
          MOVE      "52",CCOL
.
MQSE0600  MATCH     "6",SAVTYPE
          GOTO      MQSE0700 IF LESS
          MATCH     "8",SAVTYPE
          GOTO      MQSE0700 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"Y",*HOFF,")td";
          ADD       "7",CCOL
.
.
MQSE0700  COMPARE   ONE,MORE
          GOTO      MQSE1000 IF NOT EQUAL        * any more data ?
.
          DISPLAY   ", (",*V2LON,"M",*HOFF,")ore";
          ADD       "8",CCOL
.
MQSE1000  DISPLAY   " : ";
          ADD       "4",CCOL
.
MQSE3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
.
          MATCH     " X",XIM2
          GOTO      MQSE3050 IF NOT EQUAL
          MOVE      "-9",OPTIOND       * exit
          GOTO      MQSE9999
.
MQSE3050  COMPARE   ONE,MORE
          GOTO      MQSE3100 IF NOT EQUAL        * any more data ?
          MATCH     " M",XIM2
          GOTO      MQSE3100 IF NOT EQUAL
          ADD       ONE,PAGENO                   * get next page
          MATCH     "6",SAVTYPE
          CALL      DATF0000 IF LESS             * display data
          MATCH     "6",SAVTYPE
          CALL      DATE0000 IF NOT LESS         * display data
          GOTO      MQSE0000
.
MQSE3100  COMPARE   ONE,PROGNO
          GOTO      MQSE3400 IF NOT EQUAL        * execute desired options
.
.---- options for IBAFMS20 ----
.
          MATCH     " A",XIM2
          GOTO      MQSE3200 IF NOT EQUAL
          MOVE      "-1",OPTIOND       * anal by period
          GOTO      MQSE9999
.
MQSE3200  MATCH     " S",XIM2
          GOTO      MQSE3250 IF NOT EQUAL
          MOVE      "-2",OPTIOND       * summary
          GOTO      MQSE9999
.
MQSE3250  MATCH     " Y",XIM2
          GOTO      MQSE3300 IF LESS
          MATCH     "6",SAVTYPE
          GOTO      MQSE3300 IF LESS
          MATCH     "8",SAVTYPE
          GOTO      MQSE3300 IF EQUAL
          MOVE      "-3",OPTIOND       * ytd
          GOTO      MQSE9999
.
MQSE3300  COMPARE   ONE,FMCOUST             * accrual active ?
          GOTO      MQSE3800 IF EQUAL
          MATCH     "6",SAVTYPE             * posting account ?
          GOTO      MQSE3800 IF NOT LESS
.
          MATCH     " D",XIM2
          GOTO      MQSE3370 IF NOT EQUAL   * dissection analysis
          MOVE      "-7",OPTIOND
          GOTO      MQSE9999
.
MQSE3370  MATCH     " R",XIM2
          GOTO      MQSE3800 IF NOT EQUAL   * responsibility analysis
          MOVE      "-8",OPTIOND
          GOTO      MQSE9999
.
.---- options for IBAFMS21 & 22 ----
.
MQSE3400  MATCH     " F",XIM2
          GOTO      MQSE3500 IF NOT EQUAL
          MOVE      "-4",OPTIOND       * fwd screen
          GOTO      MQSE9999
.
MQSE3500  MATCH     " B",XIM2
          GOTO      MQSE3600 IF NOT EQUAL
          MOVE      "-5",OPTIOND       * back screen
          GOTO      MQSE9999
.
MQSE3600  MATCH     " C",XIM2
          GOTO      MQSE3800 IF NOT EQUAL
          MOVE      "-6",OPTIOND       * ch acct
          GOTO      MQSE9999
.
.
MQSE3800  MOVE      ZERO,OPTIOND
          MOVE      XIM2,OPTIOND       * option selected
          COMPARE   OPTIOND,ZERO
          GOTO      MQSE9999 IF LESS   * option positive ?
          BEEP
          GOTO      MQSE3000
.
MQSE9999  RETURN
.******************************************************************************
.* DATE - display Screen E data                  Called By MQSE,SELE          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEME (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*                  MORE     (1=more data)                                    *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATE0000  PACK      ST1,SP70,SP10
          PACK      ST2,SP70,SP10
          PACK      ST3,SP70,SP10
          PACK      ST4,SP70,SP10
          PACK      ST5,SP70,SP10
          PACK      ST6,SP70,SP10
          PACK      ST7,SP70,SP10
          PACK      ST8,SP70,SP10
          PACK      ST9,SP70,SP10
          PACK      ST10,SP70,SP10
          PACK      ST11,SP70,SP10
          PACK      ST12,SP70,SP10
          PACK      ST13,SP70,SP10
          PACK      ST14,SP70,SP10
          PACK      ST15,SP70,SP10
          PACK      ST16,SP70,SP10
          PACK      ST17,SP70,SP10
          PACK      KEY33,SKEY,SP70
          CALL      RSFMTC1                      * go to start of records
          MOVE      "7",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          MOVE      "0",TCOMMIT
          DISPLAY   *P1:8,*EF;                   * clear data area on screen
.
DATE1000  CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,DATE9000               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,KEY33
          GOTO      DATE9000 IF NOT EQUAL        * no more records ?
.
          DISPLAY   *P1:24,"Scanning - ",FMTCSLED,"/",FMTCSACC,*EL;
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70  * set up key
          CALL      GDAT0000
          COMPARE   COMMITP2,ZERO
          GOTO      DATE1000 IF EQUAL            * ignore data with zero commit
.
          ADD       COMMITP2,TCOMMIT
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEME,ITEMNUM
          GOTO      DATE2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATE2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATE1000 IF NOT EQUAL        * not at current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          CALL      RDFMAM1
.
          COMPARE   "0",TOTALTYP
          GOTO      DATE3000 IF EQUAL            * get subj/cc description ?
          MOVE      FMAMDESC,FMSADESC
          MOVE      FMAMDESC,FMCCDESC
          MOVE      FMTCSACC,ACCOUNT
          CALL      GCOD0000                     * break up into cc and subj
          PACK      KEY14,FMTCSLED,COSTCODE,SP70
          COMPARE   "1",TOTALTYP
          CALL      RDFMCC1 IF EQUAL             * cc desc required ?
          PACK      KEY14,FMTCSLED,SUBJCODE,SP70
          COMPARE   "2",TOTALTYP
          CALL      RDFMSA1 IF EQUAL             * subj desc required ?
          LOAD      FMAMDESC,TOTALTYP,FMCCDESC,FMSADESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70 * restore key 14
.
DATE3000  STORE     KEY14,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P6:LINENO,FMAMDESC:
                    *P43:LINENO,DOMMITP2:
                    *P61:LINENO,FMTCSLED,SLASH,FMTCSACC;
.
          GOTO      DATE1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATE9000  MOVE      TCOMMIT,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DOMMITP2
          DISPLAY   *P30:22,*V2LON,"Totals     ",*P43:22,DOMMITP2;
          COMPARE   CURPAGE,PAGENO
          GOTO      DATE9500 IF LESS
          MOVE      ZERO,ITEMNUM                 * reset pointer
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATE9999
.
.---- reached EOP before EOF ----
.
DATE9500  MOVE      ONE,MORE                     * more data
          MOVE      MAXITEME,ITEMNUM
.
DATE9999  RETURN
.******************************************************************************
. Committed Expenditure Routines
.******************************************************************************
RSCEX000
          CALL      RSAPOD2
          CALL      RSAPEB2
RSCEX999  RETURN
.---------------------------------------------------------------------- 
. Read from apscebaf and apsordaf and get both details or in apod's if only one
.---------------------------------------------------------------------- 
RDCEX000
          CALL      RDAPEB2
          IF        OVRCD=1
            MOVE      ZERO,APEBAMT
          ENDIF
.
          CALL      RDAPOD2
          IF        OVRCD=1
            MOVE      ZERO,APODAMT
            CALL      RDAPEB2
            IF        OVRCD=0
              CALL      MVEBOD00
            ENDIF
          ENDIF
.
RDCEX999  RETURN
.---------------------------------------------------------------------- 
. Get next set of data for display from apscebaf and apsordaf together
.---------------------------------------------------------------------- 
RKCEX000  MOVE      ZERO,RDAPEB
          IF        APEBOVER=0
            CALL      RKAPEB2
            MOVE      OVRCD,APEBOVER
          ENDIF
          IF        APODOVER=0
            CALL      RKAPOD2
            MOVE      OVRCD,APODOVER
          ENDIF
          IF        APODOVER=0 & APEBOVER=0
            PACK      APEBSKEY,APEBLED,APEBACC,APEBISC,APEBORD,APEBCAT,SP70
            PACK      APODSKEY,APODLED,APODACC,APODISC,APODORD,APODCAT,SP70
            MATCH     APEBSKEY,SKEY14
            IF        !@EQUAL
              MOVE      ONE,APEBOVER
            ENDIF
            MATCH     APODSKEY,SKEY14
            IF        !@EQUAL
              MOVE      ONE,APODOVER
            ENDIF
            IF        APODOVER=0 & APEBOVER=0
              MATCH     APEBSKEY,APODSKEY
              IF        @EQUAL
                CALL      GAPEBT00           * Get Total for this order
                CALL      GAPODT00           * Get Total for this order
                GOTO      RKCEX900
              ENDIF
              IF        @LESS
                CALL      RPAPEB2
                MOVE      ZERO,APEBAMT
                MOVE      ONE,RDAPEB
                GOTO      RKCEX900
              ELSE
                CALL      RPAPOD2
                MOVE      ZERO,APODAMT
                CALL      MVEBOD00               * Move apeb vars to apod vars
                GOTO      RKCEX900
              ENDIF
            ENDIF
          ENDIF
.
          IF        APEBOVER=1 & APODOVER=1
            GOTO      RKCEX800
          ENDIF
.
          IF        APEBOVER=1 & APODOVER=0
            MOVE      ONE,RDAPEB
            PACK      APODSKEY,APODLED,APODACC,APODISC,APODORD,APODCAT,SP70
            MATCH     APODSKEY,SKEY14
            IF        !@EQUAL
              MOVE      ONE,APODOVER
              GOTO      RKCEX8000
            ENDIF
            MOVE      ZERO,APEBAMT
            GOTO      RKCEX900
          ENDIF
.
          IF        APEBOVER=0 & APODOVER=1
            PACK      APEBSKEY,APEBLED,APEBACC,APEBISC,APEBORD,APEBCAT,SP70
            MATCH     APEBSKEY,SKEY14
            IF        !@EQUAL
              MOVE      ONE,APEBOVER
              GOTO      RKCEX8000
            ENDIF
            MOVE      ZERO,APODAMT
            CALL      MVEBOD00               * Move apeb vars to apod vars
            GOTO      RKCEX900
          ENDIF
.
RKCEX800  MOVE      ONE,OVRCD
          GOTO      RKCEX999
.
RKCEX900  MOVE      ZERO,OVRCD
          GOTO      RKCEX999
.
RKCEX999  RETURN
.---------------------------------------------------------------------- 
. Get Date Entered for the Order
.---------------------------------------------------------------------- 
RDHED000
          CALL      RDAPCI1
          IF        OVRCD=1
            CALL      RDAPEA1
            IF        OVRCD=0
              MOVE      APEADAT,APCIDAT
              MOVE      APEACRD,APCICRD
            ENDIF
          ENDIF
RDHED999  RETURN
.---------------------------------------------------------------------- 
. Get Total For Same Order Number  from the apsordaf file
.---------------------------------------------------------------------- 
GAPODT00  MOVE      APODAMT,TEMPAMT
          PACK      KEY22,APODLED,APODACC,APODISC,APODORD,SP70
GAPODT10  CALL      RKAPOD2
          BRANCH    OVRCD,GAPODT99
.
          PACK      KEY26,APODLED,APODACC,APODISC,APODORD,APODCAT,SP70
          MATCH     KEY22,KEY26
          GOTO      GAPODT99 IF NOT EQUAL
.
          ADD       APODAMT,TEMPAMT
          GOTO      GAPODT10

GAPODT99  CALL      RPAPOD2
          MOVE      TEMPAMT,APODAMT
          RETURN
.---------------------------------------------------------------------- 
. Get Total For Same Order Number from the apscebaf file
.---------------------------------------------------------------------- 
GAPEBT00  MOVE      APEBAMT,TEMPAMT
          PACK      KEY22,APEBLED,APEBACC,APEBISC,APEBORD,SP70
GAPEBT10  CALL      RKAPEB2
          BRANCH    OVRCD,GAPEBT99
.
          PACK      KEY26,APEBLED,APEBACC,APEBISC,APEBORD,APEBCAT,SP70
          MATCH     KEY22,KEY26
          GOTO      GAPEBT99 IF NOT EQUAL
.
          ADD       APEBAMT,TEMPAMT
          GOTO      GAPEBT10

GAPEBT99  CALL      RPAPEB2
          MOVE      TEMPAMT,APEBAMT
          RETURN
.---------------------------------------------------------------------- 
. Move Vars from apscebaf to apsordaf 
.---------------------------------------------------------------------- 
MVEBOD00  MOVE      APEBISC,APODISC
          MOVE      APEBORD,APODORD
          MOVE      APEBCAT,APODCAT
          MOVE      APEBLED,APODLED
          MOVE      APEBACC,APODACC
          MOVE      APEBDIS,APODDIS
          MOVE      APEBRES,APODRES
          MOVE      APEBDES,APODDES
          MOVE      APEBUCT,APODUCT
          MOVE      APEBQTY,APODQTY
          MOVE      APEBSPA,APODSPA
.
MVEBOD99  RETURN
.******************************************************************************
.* DATF - display Screen F data                  Called By MQSE,SELE          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEME (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*                  MORE     (1=more data)                                    *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATF0000  PACK      ST1,SP70,SP10
          PACK      ST2,SP70,SP10
          PACK      ST3,SP70,SP10
          PACK      ST4,SP70,SP10
          PACK      ST5,SP70,SP10
          PACK      ST6,SP70,SP10
          PACK      ST7,SP70,SP10
          PACK      ST8,SP70,SP10
          PACK      ST9,SP70,SP10
          PACK      ST10,SP70,SP10
          PACK      ST11,SP70,SP10
          PACK      ST12,SP70,SP10
          PACK      ST13,SP70,SP10
          PACK      ST14,SP70,SP10
          PACK      ST15,SP70,SP10
          PACK      ST16,SP70,SP10
          PACK      ST17,SP70,SP10
          MOVE      ZERO,APEBOVER
          MOVE      ZERO,APODOVER
          PACK      KEY28,SKEY,SP70
          PACK      SKEY14,SKEY,SP70
          CALL      RSCEX000                     * go to start of records
          MOVE      "7",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          MOVE      ZERO,TCOMMIT
          MOVE      ZERO,TAMTRAS
          MOVE      ZERO,TAMTREC
          DISPLAY   *P1:8,*EF;                   * clear data area on screen
.
DATF1000  CALL      RKCEX000                     * get next record
          BRANCH    OVRCD,DATF9000               * no more records ?
.
          ADD       APODAMT,TCOMMIT
          ADD       APODAMT,TAMTREC
          ADD       APEBAMT,TAMTRAS
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEME,ITEMNUM
          GOTO      DATF2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATF2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATF1000 IF NOT EQUAL        * not at current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
.
          UNPACK    SP70,APCIDAT,APCICRD
          PACK      KEY8,APODISC,APODORD,SP70
          CALL      RDHED000
.
          IF        RDAPEB=0
            PACK      KEY28,APEBLED,APEBACC,APEBISC,APEBORD,APEBCAT,SP70
          ELSE
            PACK      KEY28,APODLED,APODACC,APODISC,APODORD,APODCAT,SP70
          ENDIF
.
          STORE     KEY28,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          UNPACK    APCIDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      APODAMT,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DOMRECP2
          MOVE      APEBAMT,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DOMRASP2
          MOVE      APODDES,COMDESC
          MOVE      COMDESC,KEY24
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P5:LINENO,CPCDATE,*P16:LINENO,APODISC,APODORD:
                    *P25:LINENO,KEY24:
                    *P50:LINENO,DOMRASP2:
                    *P66:LINENO,DOMRECP2;
.
          GOTO      DATF1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATF9000  MOVE      TAMTRAS,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DOMRASP2
          MOVE      TAMTREC,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DOMRECP2
          DISPLAY   *P30:22,*V2LON,"Totals",*P50:22,DOMRASP2,*P66:22,DOMRECP2;
          COMPARE   CURPAGE,PAGENO
          GOTO      DATF9500 IF LESS
          MOVE      ZERO,ITEMNUM                 * reset pointer
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATF9999
.
.---- reached EOP before EOF ----
.
DATF9500  MOVE      ONE,MORE                     * more data
          MOVE      MAXITEME,ITEMNUM
.
DATF9999  RETURN
.**********************************************************************
. HPER - Display period heading                       Called By ML
.        Requires - PERIODNO (period)
.**********************************************************************
HPER0000  LOAD      KEY15,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
          LOAD      KEY8,PERIODNO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                  FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                  FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO,FMLC13TO
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *V2LON,*P19:5,KEY15,*P42:5,CPCDATE;
.
HPER9999  RETURN
.**********************************************************************
. DPER - Display Current Period Data                  Called By lots
.        Requires - PERIODNO (current period)
.**********************************************************************
.
.---- calculate ytd data ----
.
DPER0000  MOVE      BRFWD,YTDACT
          MOVE      ZERO,YTDBUD
          MOVE      ZERO,YTDVAR
          MOVE      ZERO,YTDPVA
          MOVE      PERIODNO,F2
.
DPER1000  COMPARE   ONE,F2
          GOTO      DPER1500 IF LESS   * at current period
.
          LOAD      ACTUAL,F2,ACTUAL01,ACTUAL02,ACTUAL03,ACTUAL04:
                              ACTUAL05,ACTUAL06,ACTUAL07,ACTUAL08:
                              ACTUAL09,ACTUAL10,ACTUAL11,ACTUAL12,ACTUAL13
          LOAD      BUDGET,F2,BUDGET01,BUDGET02,BUDGET03,BUDGET04:
                              BUDGET05,BUDGET06,BUDGET07,BUDGET08:
                              BUDGET09,BUDGET10,BUDGET11,BUDGET12,BUDGET13
          ADD       ACTUAL,YTDACT
          ADD       BUDGET,YTDBUD
          SUB       ONE,F2
          GOTO      DPER1000
.
DPER1500  LOAD      ACTUAL,PERIODNO,ACTUAL01,ACTUAL02,ACTUAL03,ACTUAL04:
                                    ACTUAL05,ACTUAL06,ACTUAL07,ACTUAL08:[
                                    ACTUAL09,ACTUAL10,ACTUAL11,ACTUAL12,ACTUAL13
          LOAD      BUDGET,PERIODNO,BUDGET01,BUDGET02,BUDGET03,BUDGET04:
                                    BUDGET05,BUDGET06,BUDGET07,BUDGET08:
                                    BUDGET09,BUDGET10,BUDGET11,BUDGET12,BUDGET13
          MOVE      ACTUAL,XACTUAL
          MOVE      BUDGET,XBUDGET
          CALL      CALC0000               * calculate current var and % var
          MOVE      XVARIAN,VARIAN
          MOVE      XPERVAR,PERVAR
.
          MATCH     "7",FMAMTYPE
          GOTO      DPER2000 IF LESS
          COMPARE   "1",FMAMAYTD
          GOTO      DPER2000 IF NOT EQUAL  * use average ytd ?
          DIV       PERIODNO,YTDACT        * calc average
          DIV       PERIODNO,YTDBUD
.
DPER2000  MOVE      YTDACT,XACTUAL
          MOVE      YTDBUD,XBUDGET
          CALL      CALC0000               * calculate ytd var and % var
          MOVE      XVARIAN,YTDVAR
          MOVE      XPERVAR,YTDPVA
.
          MOVE      YTDACT,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDACT
          MOVE      XIM16,DTDACT2
.
          MOVE      YTDACT,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DTDACT3
.
.---- ytd for screen Z (has .00 if not stat type) ----
.
          MATCH     "8",SAVTYPE
          GOTO      DPER2100 IF NOT LESS
.
          MOVE      DECPLACE,TEMPDPLA
          MOVE      SAVTYPE,SSAVTYPE
          MOVE      "2",DECPLACE
          MOVE      "8",SAVTYPE
          MOVE      YTDACT,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DTDACT2
.
          MOVE      ZERO,FORMFLAG
.
          MATCH     XIM16,ZIM16
          GOTO      DPER2110 IF NOT EQUAL
.
          MOVE      ONE,FORMFLAG
.
DPER2110  MOVE      TEMPDPLA,DECPLACE
          MOVE      SSAVTYPE,SAVTYPE
.
DPER2100  MOVE      YTDBUD,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDBUD
.
          MOVE      YTDBUD,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DTDBUD3
.
          MOVE      YTDVAR,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDVAR
.
          MOVE      YTDVAR,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DTDVAR3
.
          COMPARE   "1",SCRNO
          GOTO      DPER9999 IF NOT EQUAL   * on screen 1 ?
.
          CALL      CALP0000                * calculate projection
.
          MOVE      LASACT,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DASACT
.
          MOVE      LASACT,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DASACT3
.
          MOVE      LASBUD,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DASBUD
.
          MOVE      LASBUD,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DASBUD3
.
          MOVE      LASVAR,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DASVAR
.
          MOVE      LASVAR,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DASVAR3
.
          MOVE      ACTUAL,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DCTUAL
.
          MOVE      ACTUAL,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DCTUAL3
.
          MOVE      BUDGET,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DUDGET
.
          MOVE      BUDGET,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DUDGET3
.
          MOVE      VARIAN,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DARIAN
.
          MOVE      VARIAN,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DARIAN3
.
          MOVE      LOMRAS,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DOMRAS
.
          MOVE      LOMREC,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DOMREC
.
          MOVE      "12",F2
          ADD       FMLAPERS,F2             * get total no. of periods
          ASSIGN    (COMRAISD*PERIODNO/F2),KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DOMRASP2
.
          ASSIGN    (COMRECVD*PERIODNO/F2),KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DOMRECP2
.
          ASSIGN    (COMRAISD/F2),KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DCURASP2
.
          ASSIGN    (COMRECVD/F2),KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DCURECP2
.
          UNPACK    SP70,PROHEAD1,PROHEAD2,DPROPVA    * clear projection display
          UNPACK    SP70,DROACT,DROBUD,DROVAR
.
          DISPLAY   *P3:8,DCTUAL,*P3:9,DUDGET,*P3:10,DARIAN:
                    *P9:11,PERVAR:
                    *P3:12,DCURASP2,*P3:13,DCURECP2:
                    *P36:8,DTDACT,*P36:9,DTDBUD,*P36:10,DTDVAR:
                    *P41:11,YTDPVA,*P35:12,DOMRASP2,*P35:13,DOMRECP2:
                    *P51:8,DASACT,*P51:9,DASBUD,*P51:10,DASVAR:
                    *P57:11,LASPVA,*P51:12,DOMRAS,*P51:13,DOMREC
          MOVE      ZERO,F1
          MOVE      FMLAPTY,F1
          COMPARE   ZERO,F1
          GOTO      DPER9999 IF EQUAL
.
          MOVE      PROACT,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DROACT
.
          MOVE      PROACT,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DROACT3
.
          MOVE      PROBUD,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DROBUD
.
          MOVE      PROBUD,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DROBUD3
.
          MOVE      PROVAR,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          MOVE      XIM12,DROVAR
.
          MOVE      PROVAR,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DROVAR3
.
          MOVE      "Projection",PROHEAD1
          MOVE      "----------",PROHEAD2
          DISPLAY   *P68:8,DROACT,*P68:9,DROBUD,*P68:10,DROVAR,*P74:11,PROPVA;
.
DPER9999  RETURN
.**********************************************************************
. CALC - Calculate var and % var                      Called By ML
.        Requires - XBUDGET  (budget figure)
.                   XACTUAL  (actual figure)
.        Returns  - XVARIAN  (variance)
.                   XPERVAR  (% var)
.**********************************************************************
CALC0000  MOVE      XACTUAL,XVARIAN
          SUB       XBUDGET,XVARIAN         * calc variance
.
          MOVE      "0",XPERVAR
          COMPARE   ZERO,XVARIAN
          GOTO      CALC9999 IF EQUAL       * variance = zero ?
.
          COMPARE   ZERO,XBUDGET
          GOTO      CALC1000 IF EQUAL       * budget = zero ?
.
          MOVE      XVARIAN,F12P3
          DIV       XBUDGET,F12P3
          MULT      "100",F12P3
          MOVE      F12P3,XPERVAR
          GOTO      CALC2000
.
CALC1000  MOVE      "100",XPERVAR           * no budget
          COMPARE   ZERO,XACTUAL
          GOTO      CALC2000 IF NOT LESS    * actual < zero ?
          MULT      SEQ,XPERVAR
.
CALC2000  MOVE      XVARIAN,CALCVAR                                    *I-f0901
          MOVE      XPERVAR,CALCPVA                                    *I-f0901
          MATCH     "1" TO FMCOBVAR                                    *C-f0901
          IF        @EQUAL
.           IF        XVARIAN<0
              MULT      SEQ,XVARIAN
              MULT      SEQ,XPERVAR
.           ENDIF
          ENDIF
.
CALC9999  RETURN
.**********************************************************************
. CALP - Calculates projected data                    Called By DPER
.        Requires - FMLAPTY   (projection type)
.                   lots of others
.        Returns  - PROACT, PROBUD, PROVAR, PROPVA    (data)
.**********************************************************************
CALP0000  
          MOVE      ZERO,F1
          MOVE      FMLAPTY,F1
          BRANCH    F1,CALP0100,CALP0200         * perform desires proj function
          GOTO      CALP9999                     * no proj desired
.
.---- projection type 1 ----
. calc actual value at end of year by assuming the
. % var from the budget continues at its current rate
.
CALP0100  MOVE      TOTALBUD,PROACT
.....     MOVE      YTDPVA,F12P3                                        D-f0901
          MOVE      CALCPVA,F12P3                                      *I-f0901
          DIV       "100",F12P3
          ADD       ONE,F12P3
          MULT      F12P3,PROACT
          MOVE      TOTALBUD,PROBUD
          GOTO      CALP9000
.
.---- projection type 2 ----
. calc actual value at end of year by adding the budgets
. for the rest if the year to the current value
.
....0200  MOVE      YTDVAR,PROACT                                       D-f0901
CALP0200  MOVE      CALCVAR,PROACT                                     *I-f0901
          ADD       TOTALBUD,PROACT
          MOVE      TOTALBUD,PROBUD
          GOTO      CALP9000
.
.---- calc var and % var ----
.
CALP9000  MOVE      PROACT,XACTUAL
          MOVE      PROBUD,XBUDGET
          CALL      CALC0000           * calc var and % var
          MOVE      XVARIAN,PROVAR
          MOVE      XPERVAR,PROPVA
.
CALP9999  RETURN
.******************************************************************************
. SCRY - Display Screen Y                       Called by SELY
.******************************************************************************
SCRY0000  DISPLAY   *P60:3,*V2LON,"- Analysis by Period",*EL,*HOFF:
                    *P1:4,"Enquiry for ",*V2LON,FMAMDESC,*HOFF,SP10:
                    "Code : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*EF,*HOFF:
                    *P1:5,"Accounting Period ",*P35:5,"Ending ",*V2LON,*ULON:
                    *P1:7,"Item",*P6:7,"Description":
                    *P46:7,"Actual",*P57:7,"Budget",*P66:7,"Variance":
                    *P76:7,"% Var"
.
          MATCH     "8",SAVTYPE
          GOTO      SCRY9999 IF LESS
          DISPLAY   *V2LON,*ULON,*P37:7,"Type";
.
SCRY9999  RETURN
.**********************************************************************
. SELY - Perform Screen Y (screen C subscreen 1)      Called By SELC
.        Requires - SKEY     (current ledger/account)
.        Returns  - OPTIONY  (option selected)
.                   SKEY     (current ledger/account)
.                   EXIT     (1=quit)
.**********************************************************************
SELY0000  PACK      KEY2,SKEY
          CALL      RDFMLA1            * get ledger data
          PACK      KEY14,SKEY
          CALL      RDFMAM1            * get account data
          BRANCH    OVRCD,SELY9300     * account data found ?
          MOVE      FMAMTYPE,SAVTYPE   * save account type
          MOVE      ZERO,DECPLACE
          MOVE      FMAMDPLA,DECPLACE  * get no. of decimal places
          MOVE      ZERO,AVYTD
          MATCH     "7",FMAMTYPE
          GOTO      SELY0020 IF LESS
          MOVE      FMAMAYTD,AVYTD     * save ytd type
.
SELY0020  CALL      SCRY0000           * display screen Y
          MOVE      "1",PAGENO         * start at page 1
.
SELY0050  CALL      HPER0000           * display period data
          CALL      DATY0000           * display data
.
SELY0100  CALL      MQSY0000           * get option
.
.---- next month ----
.
          COMPARE   "-1",OPTIONY
          GOTO      SELY1300 IF NOT EQUAL
          MOVE      ZERO,DISPERR
          CALL      NPER0000           * get next period
          BRANCH    OVRCD,SELY0100     * no next period to display ?
          GOTO      SELY0050           * redisplay data
.
.---- last month ----
.
SELY1300  COMPARE   "-2",OPTIONY
          GOTO      SELY1400 IF NOT EQUAL
          MOVE      ZERO,DISPERR
          CALL      LPER0000           * get last period
          BRANCH    OVRCD,SELY0100     * no last period to display ?
          GOTO      SELY0050           * redisplay data
.
.---- exit ----
.
SELY1400  COMPARE   "-9",OPTIONY
          GOTO      SELY1900 IF NOT EQUAL
          GOTO      SELY9500           * quit
.
.---- option selected ----
.
SELY1900  MOVE      SP70,KEY14
          LOAD      KEY14,OPTIONY,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          MATCH     SP70,KEY14
          GOTO      SELY5000 IF NOT EQUAL   * valid selection ?
          BEEP
          GOTO      SELY0100                * get another selection
.
SELY5000  MOVE      KEY14,SKEY              * set up for new account
          CALL      RDFMAM1                 * get account data
          MOVE      FMAMTYPE,SAVTYPE
          UNPACK    SKEY,KEY2
          CALL      RDFMLA1                 * get ledger data
          PACK      KEY6,FMLALEDG,FMLACYRR,SP70
          CALL      RDFMLC1
          CALL      RDXTMA                  * get ledger calendar data
          MOVE      ZERO,TOTALTYP           * default to normal tot type
          MATCH     "6",FMAMTYPE
          GOTO      SELY9000 IF NOT EQUAL
.
          MOVE      ONE,TOTALTYP
          PACK      KEY14,SKEY,SP70
          CALL      RDFMSA1                 * get account data
          COMPARE   ONE,OVRCD
          GOTO      SELY9000 IF NOT EQUAL   * subjective ?
.
          MOVE      TWO,TOTALTYP
          PACK      KEY14,SKEY,SP70
          CALL      RDFMCC1                 * get account data
          COMPARE   ONE,OVRCD
          GOTO      SELY9000 IF NOT EQUAL   * cost centre ?
          MOVE      ZERO,TOTALTYP           * normal
.
.
SELY9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELY9999
.
SELY9300  DISPLAY   *P1:24,*B,*EL,"Account Record Not Found - ";
          CALL      HITENTER
.
SELY9500  MOVE      ONE,EXIT           * quit
.
SELY9999  RETURN
.******************************************************************************
. MQSY - Main question for Screen Y             Called By SELY0000
.        Returns  : OPTIONY  (-1=next per, -2=last per, -9=exit)
.******************************************************************************
MQSY0000  DISPLAY   *P1:24,"Select Item, (",*V2LON:
                    "N",*HOFF,")ext Month, (",*V2LON:
                    "L",*HOFF,")ast Month, (",*V2LON:
                    "P",*HOFF,")rint, e(",*V2LON:
                    "X",*HOFF,")it";
          MOVE      "56",CCOL
          COMPARE   ONE,MORE
          GOTO      MQSY1000 IF NOT EQUAL        * any more data ?
.
          DISPLAY   ", (",*V2LON,"M",*HOFF,")ore";
          ADD       "8",CCOL
.
MQSY1000  DISPLAY   " : ";
          ADD       "4",CCOL
.
MQSY3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
.
          COMPARE   ONE,MORE
          GOTO      MQSY3100 IF NOT EQUAL        * any more data ?
          MATCH     " M",XIM2
          GOTO      MQSY3100 IF NOT EQUAL
          ADD       ONE,PAGENO                   * get next page
          CALL      DATY0000                     * display data
          GOTO      MQSY0000
.
MQSY3100  MATCH     " N",XIM2
          GOTO      MQSY3200 IF NOT EQUAL
          MOVE      "-1",OPTIONY       * next period
          GOTO      MQSY9999
.
MQSY3200  MATCH     " L",XIM2
          GOTO      MQSY3300 IF NOT EQUAL
          MOVE      "-2",OPTIONY       * last period
          GOTO      MQSY9999
.
MQSY3300  MATCH     " P",XIM2
          GOTO      MQSY3400 IF NOT EQUAL
          CALL      PRTY0000                     * print screen
          CALL      DATY0000                     * display data
          GOTO      MQSY0000
.
MQSY3400  MATCH     " X",XIM2
          GOTO      MQSY3500 IF NOT EQUAL
          MOVE      "-9",OPTIONY       * exit
          GOTO      MQSY9999
.
MQSY3500  MOVE      ZERO,OPTIONY
          MOVE      XIM2,OPTIONY       * option selected
          COMPARE   OPTIONY,ZERO
          GOTO      MQSY9999 IF LESS   * option positive ?
          BEEP
          GOTO      MQSY3000
.
MQSY9999  RETURN
.**********************************************************************
. LDAT - get last years data                      Called By SELB
.        Requires - KEY14    (ledger/account)
.                   CURYEAR  (current year)
.        Returns  - LASACT, LASBUD, LASVAR, LASPVA  (data)
.**********************************************************************
LDAT0000  MOVE      ZERO,LASACT        * clear vars
          MOVE      ZERO,LASBUD
          MOVE      ZERO,LASVAR
          MOVE      ZERO,LASPVA
          CALL      CLRV0000
          PACK      KEY2,SKEY,SP70
          CALL      RDFMLA1            * get ledger data
          BRANCH    OVRCD,LDAT9999     * ledger not found ?
.
          PACK      KEY14,SKEY,SP70
          CALL      RDFMAM1            * get account data
          BRANCH    OVRCD,LDAT9999     * account not found ?
.
          MOVE      CURYEAR,F4         * get last years data
          SUB       ONE,F4
          PACK      KEY6,FMLALEDG,F4,SP70
          CALL      RDFMLC1
          CALL      RDXTMA             * Last Year Set up
          BRANCH    OVRCD,LDAT9999     * No	

          MOVE      FMAMTYPE,SAVTYPE
          MOVE      ZERO,DECPLACE
          MOVE      FMAMDPLA,DECPLACE  * get no. of decimal places
.
.---- get period summary data ----
.
          MATCH     "8",SAVTYPE
          GOTO      LDAT0200 IF LESS        * stat data ?
.
.---- stat data ----
.
          PACK      FILENAM,FMSS,F4
          REP       " 0",FILENAM
          MATCH     FILENAM,LACTFILE
          GOTO      LDAT0100 IF EQUAL       * file already open ?
.
          MOVE      FILENAM,LACTFILE        * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA2,FILENAM        * open current year file
          TRAPCLR   IO
          BRANCH    OVRCD,LDAT0900          * data not found ?
.
LDAT0100  CALL      RDFMSS2                 * get account data
          BRANCH    OVRCD,LDAT1000          * data not found ?
.
          MOVE      FMCOUST,F1              * set up for accrual/cash
          ADD       ONE,F1
.
          LOAD      ACTUAL01,F1,FMSSA1,FMSSC1
          LOAD      ACTUAL02,F1,FMSSA2,FMSSC2
          LOAD      ACTUAL03,F1,FMSSA3,FMSSC3
          LOAD      ACTUAL04,F1,FMSSA4,FMSSC4
          LOAD      ACTUAL05,F1,FMSSA5,FMSSC5
          LOAD      ACTUAL06,F1,FMSSA6,FMSSC6
          LOAD      ACTUAL07,F1,FMSSA7,FMSSC7
          LOAD      ACTUAL08,F1,FMSSA8,FMSSC8
          LOAD      ACTUAL09,F1,FMSSA9,FMSSC9
          LOAD      ACTUAL10,F1,FMSSA10,FMSSC10
          LOAD      ACTUAL11,F1,FMSSA11,FMSSC11
          LOAD      ACTUAL12,F1,FMSSA12,FMSSC12
          LOAD      ACTUAL13,F1,FMSSA13,FMSSC13
          GOTO      LDAT1000
.
.---- not stat account ----
.
LDAT0200  PACK      FILENAM,FMSP,F4
          REP       " 0",FILENAM
          MATCH     FILENAM,LACTFILE
          GOTO      LDAT0300 IF EQUAL      * file already open ?
.
          MOVE      FILENAM,LACTFILE       * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA2,FILENAM        * open current year file
          TRAPCLR   IO
          BRANCH    OVRCD,LDAT0900          * data not found ?
.
LDAT0300  CALL      RDFMFP2                 * get account data
          BRANCH    OVRCD,LDAT1000          * data not found ?
.
          MOVE      FMCOUST,F1              * set up for accrual/cash
          ADD       ONE,F1
.
          LOAD      BRFWD,F1,FMFPABF,FMFPCBF     * store data
          LOAD      ACTUAL01,F1,FMFPA01,FMFPC01
          LOAD      ACTUAL02,F1,FMFPA02,FMFPC02
          LOAD      ACTUAL03,F1,FMFPA03,FMFPC03
          LOAD      ACTUAL04,F1,FMFPA04,FMFPC04
          LOAD      ACTUAL05,F1,FMFPA05,FMFPC05
          LOAD      ACTUAL06,F1,FMFPA06,FMFPC06
          LOAD      ACTUAL07,F1,FMFPA07,FMFPC07
          LOAD      ACTUAL08,F1,FMFPA08,FMFPC08
          LOAD      ACTUAL09,F1,FMFPA09,FMFPC09
          LOAD      ACTUAL10,F1,FMFPA10,FMFPC10
          LOAD      ACTUAL11,F1,FMFPA11,FMFPC11
          LOAD      ACTUAL12,F1,FMFPA12,FMFPC12
          LOAD      ACTUAL13,F1,FMFPA13,FMFPC13
.
          MOVE      FMFPCOM2,COMRAISD
          MOVE      FMFPCOM2,COMRASP2
          MOVE      FMFPCOM,COMRECVD
          MOVE      FMFPCOM,COMRECP2
.
          MATCH     "1",FMCOCOMT
          IF        @EQUAL
            MOVE      FMFPCOM2,COMMIT
            MOVE      FMFPCOM2,COMMITP2
          ELSE
            MOVE      FMFPCOM,COMMIT
            MOVE      FMFPCOM,COMMITP2
          ENDIF
.
          GOTO      LDAT1000
.
LDAT0900  MOVE      SP70,LACTFILE       * cancel current file
.
.---- get budget data ----
.
LDAT1000  PACK      KEY6,FMLALEDG,F4,SP70
          REP       " 0",KEY6
          CALL      RDFMLC1
          CALL      RDXTMA 
          MOVE      FMLCBUDG,XIM4
          LOAD      XIM4,FMCOUST,FMLCCBUD
          MATCH     "8",SAVTYPE
          GOTO      LDAT1200 IF LESS   * stat data ?
.
.---- stat data ----
.
          PACK      FILENAM,FMSC,XIM4
          REP       " 0",FILENAM
          MATCH     FILENAM,LBUDFILE
          GOTO      LDAT1100 IF EQUAL  * file already open ?
.
          MOVE      FILENAM,LBUDFILE   * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSBUA3,FILENAM   * open current budget file
          TRAPCLR   IO
          BRANCH    OVRCD,LDAT1900
.
LDAT1100  CALL      RDFMST3            * get account data
          BRANCH    OVRCD,LDAT2000     * data not found ?
.
          MOVE      FMSTCA01,BUDGET01  * store data
          MOVE      FMSTCA02,BUDGET02
          MOVE      FMSTCA03,BUDGET03
          MOVE      FMSTCA04,BUDGET04
          MOVE      FMSTCA05,BUDGET05
          MOVE      FMSTCA06,BUDGET06
          MOVE      FMSTCA07,BUDGET07
          MOVE      FMSTCA08,BUDGET08
          MOVE      FMSTCA09,BUDGET09
          MOVE      FMSTCA10,BUDGET10
          MOVE      FMSTCA11,BUDGET11
          MOVE      FMSTCA12,BUDGET12
          MOVE      FMSTCA13,BUDGET13
.
          GOTO      LDAT2000
.
.---- not stat account ----
.
LDAT1200  PACK      FILENAM,FMSB,XIM4
          REP       " 0",FILENAM
          MATCH     FILENAM,LBUDFILE
          GOTO      LDAT1300 IF EQUAL  * file already open ?
.
          MOVE      FILENAM,LBUDFILE   * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA3,FILENAM   * open current budget file
          TRAPCLR   IO
          BRANCH    OVRCD,LDAT1900
.
LDAT1300  CALL      RDFMBU3            * get account data
          BRANCH    OVRCD,LDAT2000     * data not found ?
.
          MOVE      FMBUCA01,BUDGET01  * store data
          MOVE      FMBUCA02,BUDGET02
          MOVE      FMBUCA03,BUDGET03
          MOVE      FMBUCA04,BUDGET04
          MOVE      FMBUCA05,BUDGET05
          MOVE      FMBUCA06,BUDGET06
          MOVE      FMBUCA07,BUDGET07
          MOVE      FMBUCA08,BUDGET08
          MOVE      FMBUCA09,BUDGET09
          MOVE      FMBUCA10,BUDGET10
          MOVE      FMBUCA11,BUDGET11
          MOVE      FMBUCA12,BUDGET12
          MOVE      FMBUCA13,BUDGET13
.
          GOTO      LDAT2000
.
LDAT1900  MOVE      SP70,LBUDFILE      * cancel current file
.
.---- get variance and totals ----
.
LDAT2000  MOVE      SCRNO,F1           * save screen number
          MOVE      "0",SCRNO          * stop data form being displayed
          CALL      DPER0000           * calc period data
          MOVE      F1,SCRNO           * reset screen number
          MOVE      YTDACT,LASACT      * save old data
          MOVE      YTDBUD,LASBUD
          MOVE      YTDVAR,LASVAR
          MOVE      YTDPVA,LASPVA
          MOVE      FMFPCOM2,LOMRAS    * years raised amount
          MOVE      FMFPCOM,LOMREC     * years received amount
.
LDAT9999  RETURN
.**********************************************************************
. GDAT - get actual data                              Called By LOTS
.        Requires - KEY14    (ledger/account)
.                   CURYEAR  (current year)
.                   PERIODNO (current period)
.        Returns  - OVRCD    (data not found)
.                   ACTUAL   (current perd)
.                   BUDGET   (current perd)
.                   VARIAN   (current perd)
.                   ACTUAL01..13 (data)
.                   BUDGET01..13 (data)
.                   VARIAN01..13 (data)
.                   TOTACT   (total)
.**********************************************************************
GDAT0000  CALL      CLRV0000           * clear variables
          PACK      KEY2,KEY14,SP70
          CALL      RDFMLA1            * get ledger data
          BRANCH    OVRCD,GDAT9100     * ledger not found ?
          PACK      KEY6,FMLALEDG,CURYEAR,SP70
          CALL      RDFMLC1
          BRANCH    OVRCD,GDAT9300     * No	
          CALL      RDXTMA             * Year Set up
.
          PACK      KEY14,KEY14,SP70
          CALL      RDFMAM1            * get account data
          BRANCH    OVRCD,GDAT9200     * account not found ?
.
          MOVE      ZERO,DECPLACE
          MOVE      FMAMDPLA,DECPLACE  * get no. of decimal places
.
.---- get period summary data ----
.
          MATCH     "8",FMAMTYPE
          GOTO      GDAT0200 IF LESS        * stat data ?
.
.---- stat data ----
.
          PACK      FILENAM,FMSS,CURYEAR
          REP       " 0",FILENAM
          MATCH     FILENAM,ACTFILE
          GOTO      GDAT0100 IF EQUAL       * file already open ?
.
          MOVE      FILENAM,ACTFILE         * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA1,FILENAM        * open current year file
          TRAPCLR   IO
          BRANCH    OVRCD,GDAT0900          * data not found ?
.
GDAT0100  CALL      RDFMSS1                 * get account data
          BRANCH    OVRCD,GDAT1000          * data not found ?
.
          MOVE      FMCOUST,F1              * set up for accrual/cash
          ADD       ONE,F1
          LOAD      ACTUAL01,F1,FMSSA1,FMSSC1
          LOAD      ACTUAL02,F1,FMSSA2,FMSSC2
          LOAD      ACTUAL03,F1,FMSSA3,FMSSC3
          LOAD      ACTUAL04,F1,FMSSA4,FMSSC4
          LOAD      ACTUAL05,F1,FMSSA5,FMSSC5
          LOAD      ACTUAL06,F1,FMSSA6,FMSSC6
          LOAD      ACTUAL07,F1,FMSSA7,FMSSC7
          LOAD      ACTUAL08,F1,FMSSA8,FMSSC8
          LOAD      ACTUAL09,F1,FMSSA9,FMSSC9
          LOAD      ACTUAL10,F1,FMSSA10,FMSSC10
          LOAD      ACTUAL11,F1,FMSSA11,FMSSC11
          LOAD      ACTUAL12,F1,FMSSA12,FMSSC12
          LOAD      ACTUAL13,F1,FMSSA13,FMSSC13
.
          GOTO      GDAT1000
.
.---- not stat account ----
.
GDAT0200  PACK      FILENAM,FMSP,CURYEAR
          REP       " 0",FILENAM
          MATCH     FILENAM,ACTFILE
          GOTO      GDAT0300 IF EQUAL       * file already open ?
.
          MOVE      FILENAM,ACTFILE         * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FILENAM        * open current year file
          TRAPCLR   IO
          BRANCH    OVRCD,GDAT0900          * data not found ?
.
GDAT0300  CALL      RDFMFP1                 * get account data
          BRANCH    OVRCD,GDAT1000          * data not found ?
.
          MOVE      FMCOUST,F1              * set up for accrual/cash
          ADD       ONE,F1
.
          LOAD      BRFWD,F1,FMFPABF,FMFPCBF     * store data
          LOAD      ACTUAL01,F1,FMFPA01,FMFPC01
          LOAD      ACTUAL02,F1,FMFPA02,FMFPC02
          LOAD      ACTUAL03,F1,FMFPA03,FMFPC03
          LOAD      ACTUAL04,F1,FMFPA04,FMFPC04
          LOAD      ACTUAL05,F1,FMFPA05,FMFPC05
          LOAD      ACTUAL06,F1,FMFPA06,FMFPC06
          LOAD      ACTUAL07,F1,FMFPA07,FMFPC07
          LOAD      ACTUAL08,F1,FMFPA08,FMFPC08
          LOAD      ACTUAL09,F1,FMFPA09,FMFPC09
          LOAD      ACTUAL10,F1,FMFPA10,FMFPC10
          LOAD      ACTUAL11,F1,FMFPA11,FMFPC11
          LOAD      ACTUAL12,F1,FMFPA12,FMFPC12
          LOAD      ACTUAL13,F1,FMFPA13,FMFPC13
.
          MOVE      FMFPCOM2,COMRAISD
          MOVE      FMFPCOM2,COMRASP2
          MOVE      FMFPCOM,COMRECVD
          MOVE      FMFPCOM,COMRECP2
.
          MATCH     "1",FMCOCOMT
          IF        @EQUAL
            MOVE      FMFPCOM2,COMMIT  
            MOVE      FMFPCOM2,COMMITP2
          ELSE
            MOVE      FMFPCOM,COMMIT  
            MOVE      FMFPCOM,COMMITP2
          ENDIF
.
          GOTO      GDAT1000
.
GDAT0900  MOVE      SP70,ACTFILE       * cancel current file
.
.---- get budget data ----
.
GDAT1000  PACK      KEY6,FMLALEDG,CURYEAR
          CALL      RDFMLC1
          CALL      RDXTMA 
          MOVE      FMLCBUDG,XIM4
          LOAD      XIM4,FMCOUST,FMLCCBUD
          MATCH     "8",FMAMTYPE
          GOTO      GDAT1200 IF LESS   * stat data ?
.
.---- stat data ----
.
          PACK      FILENAM,FMSC,XIM4
          REP       " 0",FILENAM
          MATCH     FILENAM,BUDFILE
          GOTO      GDAT1100 IF EQUAL  * file already open ?
.
          MOVE      FILENAM,BUDFILE    * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSBUA1,FILENAM   * open current budget file
          TRAPCLR   IO
          BRANCH    OVRCD,GDAT1900
.
GDAT1100  CALL      RDFMST1            * get account data
          BRANCH    OVRCD,GDAT2000     * data not found ?
.
          MOVE      FMSTCA01,BUDGET01  * store data
          MOVE      FMSTCA02,BUDGET02
          MOVE      FMSTCA03,BUDGET03
          MOVE      FMSTCA04,BUDGET04
          MOVE      FMSTCA05,BUDGET05
          MOVE      FMSTCA06,BUDGET06
          MOVE      FMSTCA07,BUDGET07
          MOVE      FMSTCA08,BUDGET08
          MOVE      FMSTCA09,BUDGET09
          MOVE      FMSTCA10,BUDGET10
          MOVE      FMSTCA11,BUDGET11
          MOVE      FMSTCA12,BUDGET12
          MOVE      FMSTCA13,BUDGET13
.
          GOTO      GDAT2000
.
.---- not stat account ----
.
GDAT1200  PACK      FILENAM,FMSB,XIM4
          REP       " 0",FILENAM
          MATCH     FILENAM,BUDFILE
          GOTO      GDAT1300 IF EQUAL  * file already open ?
.
          MOVE      FILENAM,BUDFILE    * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA1,FILENAM   * open current budget file
          TRAPCLR   IO
          BRANCH    OVRCD,GDAT1900
.
GDAT1300  CALL      RDFMBU1            * get account data
          BRANCH    OVRCD,GDAT2000     * data not found ?
.
          MOVE      FMBUCA01,BUDGET01  * store data
          MOVE      FMBUCA02,BUDGET02
          MOVE      FMBUCA03,BUDGET03
          MOVE      FMBUCA04,BUDGET04
          MOVE      FMBUCA05,BUDGET05
          MOVE      FMBUCA06,BUDGET06
          MOVE      FMBUCA07,BUDGET07
          MOVE      FMBUCA08,BUDGET08
          MOVE      FMBUCA09,BUDGET09
          MOVE      FMBUCA10,BUDGET10
          MOVE      FMBUCA11,BUDGET11
          MOVE      FMBUCA12,BUDGET12
          MOVE      FMBUCA13,BUDGET13
.
          GOTO      GDAT2000
.
GDAT1900  MOVE      SP70,BUDFILE       * cancel current file
.
.---- get variance and totals ----
.
GDAT2000  MOVE      "12",F2
          ADD       FMLAPERS,F2             * get total no. of periods
          MOVE      F2,TOTPERS
          MOVE      BRFWD,TOTALACT
.
GDAT2100  COMPARE   ONE,F2
          GOTO      GDAT3000 IF LESS        * no more periods ?
.
          COMPARE   ONE,PROGNO              * clear unlocked periods in FMS20
          GOTO      GDAT2500 IF NOT EQUAL
          LOAD      F1,F2,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN:
                          FMLC05IN,FMLC06IN,FMLC07IN,FMLC08IN:
                          FMLC09IN,FMLC10IN,FMLC11IN,FMLC12IN,FMLC13IN
          BRANCH    F1,GDAT2500
          STORE     ZERO,F2,ACTUAL01,ACTUAL02,ACTUAL03,ACTUAL04:
                              ACTUAL05,ACTUAL06,ACTUAL07,ACTUAL08:
                              ACTUAL09,ACTUAL10,ACTUAL11,ACTUAL12,ACTUAL13
....      STORE     ZERO,F2,BUDGET01,BUDGET02,BUDGET03,BUDGET04:
....                          BUDGET05,BUDGET06,BUDGET07,BUDGET08:
....                          BUDGET09,BUDGET10,BUDGET11,BUDGET12,BUDGET13
.
GDAT2500  LOAD      ACTUAL,F2,ACTUAL01,ACTUAL02,ACTUAL03,ACTUAL04:
                              ACTUAL05,ACTUAL06,ACTUAL07,ACTUAL08:
                              ACTUAL09,ACTUAL10,ACTUAL11,ACTUAL12,ACTUAL13
          ADD       ACTUAL,TOTALACT         * get actual total
          LOAD      BUDGET,F2,BUDGET01,BUDGET02,BUDGET03,BUDGET04:
                              BUDGET05,BUDGET06,BUDGET07,BUDGET08:
                              BUDGET09,BUDGET10,BUDGET11,BUDGET12,BUDGET13
          ADD       BUDGET,TOTALBUD         * get budget total
.
          MOVE      ACTUAL,XACTUAL
          MOVE      BUDGET,XBUDGET
          CALL      CALC0000               * calculate var and % var
          MOVE      XVARIAN,VARIAN
          MOVE      XPERVAR,PERVAR
          STORE     VARIAN,F2,VARIAN01,VARIAN02,VARIAN03,VARIAN04:
                              VARIAN05,VARIAN06,VARIAN07,VARIAN08:
                              VARIAN09,VARIAN10,VARIAN11,VARIAN12,VARIAN13
.
          STORE     PERVAR,F2,PERVAR01,PERVAR02,PERVAR03,PERVAR04:
                              PERVAR05,PERVAR06,PERVAR07,PERVAR08:
                              PERVAR09,PERVAR10,PERVAR11,PERVAR12,PERVAR13
.                                           * modify total counter for averages
          COMPARE   TOTPERS,F2
          GOTO      GDAT2900 IF NOT EQUAL   * already stopped dec'ing counter ?
          COMPARE   F2,PERIODNO
          GOTO      GDAT2900 IF NOT LESS    * before current period ?
          COMPARE   ZERO,ACTUAL
          GOTO      GDAT2900 IF NOT EQUAL   * current value zero ?
          SUB       ONE,TOTPERS             * dont count current period
.
GDAT2900  SUB       ONE,F2                  * decrement period counter
          GOTO      GDAT2100
.
GDAT3000  MATCH     "7",FMAMTYPE
          GOTO      GDAT4000 IF LESS
          COMPARE   "1",FMAMAYTD
          GOTO      GDAT4000 IF NOT EQUAL   * use average ytd ?
.
          MOVE      "12",F2
          ADD       FMLAPERS,F2             * get total no. of periods
          DIV       F2,TOTALBUD             * calc average
          DIV       TOTPERS,TOTALACT
.
GDAT4000  MOVE      TOTALACT,XACTUAL
          MOVE      TOTALBUD,XBUDGET
          CALL      CALC0000               * calculate var and % var
          MOVE      XVARIAN,TOTALVAR
          MOVE      XPERVAR,TOTALPVA
.
GDAT9000  CALL      DPER0000                * calc period data
          CALL      FNUM0000                * Format Display
.
          MOVE      ZERO,OVRCD              * continue
          GOTO      GDAT9999
.
.---- error messages ----
.
GDAT9100  DISPLAY   *P1:24,*B,*EL,"Ledger Does Not Exist - ";
          CALL      HITENTER
          GOTO      GDAT9500
.
GDAT9200  DISPLAY   *P1:24,*B,*EL,"Account Does Not Exist - ";
          CALL      HITENTER
          GOTO      GDAT9500
.
GDAT9300  DISPLAY   *P1:24,*B,*EL,"Year Does Not Exist For This Ledger - ";
          CALL      HITENTER
          GOTO      GDAT9500
.
GDAT9500  MOVE      ONE,OVRCD               * quit
.
GDAT9999  RETURN
.******************************************************************************
.* FORM - Format  amount                         Called by lots               *
.*       Requires : DECPLACE      (amount number)                             *
.*                  KAMOUNT       (amount)                                    *
.*                  FORMAT        (format for norm acc (0=$, 1=$+c))          *
.*       Returns  : XIM11         (formatted 11 char)                         *
.*                  XIM12         (formatted 12 char)                         *
.*                  XIM13         (formatted 13 char)                         *
.*                  XIM14         (formatted 14 char)                         *
.*                  XIM15         (formatted 15 char)                         *
.*                  XIM16         (formatted 16 char)                         *
.*                  XIM17         (formatted 17 char)                         *
.******************************************************************************
FORM0000  MATCH     "8",SAVTYPE
          GOTO      FORM0010 IF NOT LESS    * stat type ?
.
          BRANCH    FORMAT,FORM0200         * what is the format for norm acc ?
          GOTO      FORM0050
.
FORM0010  BRANCH    DECPLACE,FORM0100,FORM0200,FORM0300:
                             FORM0400,FORM0500,FORM0600
.
.---- no decimal places ----
.
FORM0050  MOVE      KAMOUNT,F17
          MOVE      FORMATP0,XIM17
          FEDIT     F17,XIM17
          MOVE      ZORMATP0,ZIM17
          FEDIT     F17,ZIM17
          GOTO      FORM1000
.
.---- 1 decimal places ----
.
FORM0100  MOVE      KAMOUNT,F15P1
          MOVE      FORMATP1,XIM17
          FEDIT     F15P1,XIM17
          MOVE      ZORMATP1,ZIM17
          FEDIT     F15P1,ZIM17
          GOTO      FORM1000
.
.---- 2 decimal places ----
.
FORM0200  MOVE      KAMOUNT,F14P2
          MOVE      FORMATP2,XIM17
          FEDIT     F14P2,XIM17
          MOVE      ZORMATP2,ZIM17
          FEDIT     F14P2,ZIM17
          GOTO      FORM1000
.
.---- 3 decimal places ----
.
FORM0300  MOVE      KAMOUNT,F13P3
          MOVE      FORMATP3,XIM17
          FEDIT     F13P3,XIM17
          MOVE      ZORMATP3,ZIM17
          FEDIT     F13P3,ZIM17
          GOTO      FORM1000
.
.---- 4 decimal places ----
.
FORM0400  MOVE      KAMOUNT,F12P4
          MOVE      FORMATP4,XIM17
          FEDIT     F12P4,XIM17
          MOVE      ZORMATP4,ZIM17
          FEDIT     F12P4,ZIM17
          GOTO      FORM1000
.
.---- 5 decimal places ----
.
FORM0500  MOVE      KAMOUNT,F11P5
          MOVE      FORMATP5,XIM17
          FEDIT     F11P5,XIM17
          MOVE      ZORMATP5,ZIM17
          FEDIT     F11P5,ZIM17
          GOTO      FORM1000
.
.---- 6 decimal places ----
.
FORM0600  MOVE      KAMOUNT,F10P6
          MOVE      FORMATP6,XIM17
          FEDIT     F10P6,XIM17
          MOVE      ZORMATP6,ZIM17
          FEDIT     F10P6,ZIM17
          GOTO      FORM1000
.
.---- check if out of range ----
.
FORM1000  
          UNPACK    ZIM17,ANS,ZIM16
          UNPACK    XIM17,ANS,XIM16
          MATCH     SP1,ANS
          GOTO      FORM1100 IF NOT EQUAL
.
          UNPACK    ZIM16,ANS,ZIM15
          UNPACK    XIM16,ANS,XIM15
          MATCH     SP1,ANS
          GOTO      FORM1200 IF NOT EQUAL
.
          UNPACK    ZIM15,ANS,ZIM14
          UNPACK    XIM15,ANS,XIM14
          MATCH     SP1,ANS
          GOTO      FORM1300 IF NOT EQUAL
.
          UNPACK    ZIM14,ANS,ZIM13
          UNPACK    XIM14,ANS,XIM13
          MATCH     SP1,ANS
          GOTO      FORM1400 IF NOT EQUAL
.
          UNPACK    ZIM13,ANS,ZIM12
          UNPACK    XIM13,ANS,XIM12
          MATCH     SP1,ANS
          GOTO      FORM1500 IF NOT EQUAL
.
          UNPACK    ZIM12,ANS,ZIM11
          UNPACK    XIM12,ANS,XIM11
          MATCH     SP1,ANS
          GOTO      FORM1600 IF NOT EQUAL
          GOTO      FORM9999
.
FORM1100  MOVE      ZIM16,XIM16
          UNPACK    ZIM16,ANS,ZIM15
          MATCH     SP1,ANS
          GOTO      FORM2100 IF NOT EQUAL
.
FORM1200  MOVE      ZIM15,XIM15
          UNPACK    ZIM15,ANS,ZIM14
          MATCH     SP1,ANS
          GOTO      FORM2200 IF NOT EQUAL
.
FORM1300  MOVE      ZIM14,XIM14
          UNPACK    ZIM14,ANS,ZIM13
          MATCH     SP1,ANS
          GOTO      FORM2300 IF NOT EQUAL
.
FORM1400  MOVE      ZIM13,XIM13
          UNPACK    ZIM13,ANS,ZIM12
          MATCH     SP1,ANS
          GOTO      FORM2400 IF NOT EQUAL
.
FORM1500  MOVE      ZIM12,XIM12
          UNPACK    ZIM12,ANS,ZIM11
          MATCH     SP1,ANS
          GOTO      FORM2500 IF NOT EQUAL
.
FORM1600  MOVE      ZIM11,XIM11
          GOTO      FORM9999
.
FORM2100  MOVE      "********************",XIM15
FORM2200  MOVE      "********************",XIM14
FORM2300  MOVE      "********************",XIM13
FORM2400  MOVE      "********************",XIM12
FORM2500  MOVE      "********************",XIM11
.
FORM9999  RETURN
.**********************************************************************
. FNUM - Format numbers                          Called by GDAT
.**********************************************************************
FNUM0000  MOVE      COMMITP2,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DOMMITP2
.
          MOVE      COMRASP2,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DOMRASP2
.
          MOVE      COMRECP2,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DOMRECP2
.
          MOVE      TOTALACT,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DOTALACT
.
          MOVE      ACTUAL01,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL01
          MOVE      ACTUAL02,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL02
          MOVE      ACTUAL03,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL03
          MOVE      ACTUAL04,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL04
          MOVE      ACTUAL05,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL05
          MOVE      ACTUAL06,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL06
          MOVE      ACTUAL07,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL07
          MOVE      ACTUAL08,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL08
          MOVE      ACTUAL09,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL09
          MOVE      ACTUAL10,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL10
          MOVE      ACTUAL11,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL11
          MOVE      ACTUAL12,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL12
          MOVE      ACTUAL13,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DCTUAL13
.
          MOVE      TOTALBUD,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DOTALBUD
          MOVE      BUDGET01,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET01
          MOVE      BUDGET02,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET02
          MOVE      BUDGET03,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET03
          MOVE      BUDGET04,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET04
          MOVE      BUDGET05,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET05
          MOVE      BUDGET06,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET06
          MOVE      BUDGET07,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET07
          MOVE      BUDGET08,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET08
          MOVE      BUDGET09,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET09
          MOVE      BUDGET10,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET10
          MOVE      BUDGET11,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET11
          MOVE      BUDGET12,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET12
          MOVE      BUDGET13,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DUDGET13
.
          MOVE      TOTALVAR,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DOTALVAR
          MOVE      VARIAN01,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN01
          MOVE      VARIAN02,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN02
          MOVE      VARIAN03,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN03
          MOVE      VARIAN04,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN04
          MOVE      VARIAN05,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN05
          MOVE      VARIAN06,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN06
          MOVE      VARIAN07,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN07
          MOVE      VARIAN08,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN08
          MOVE      VARIAN09,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN09
          MOVE      VARIAN10,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN10
          MOVE      VARIAN11,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN11
          MOVE      VARIAN12,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN12
          MOVE      VARIAN13,KAMOUNT
          MOVE      FMLAABP,FORMAT
          CALL      FORM0000
          MOVE      XIM16,DARIAN13
.
FNUM9999 RETURN
.**********************************************************************
. CLRV - Clear variables                              Called By GDAT
.**********************************************************************
CLRV0000  MOVE      ZERO,COMMIT
          MOVE      ZERO,COMMITP2
          MOVE      ZERO,COMRAISD
          MOVE      ZERO,COMRECVD
          MOVE      ZERO,COMRASP2
          MOVE      ZERO,COMRECP2
          MOVE      ZERO,BRFWD
          MOVE      ZERO,ACTUAL01
          MOVE      ZERO,ACTUAL02
          MOVE      ZERO,ACTUAL03
          MOVE      ZERO,ACTUAL04
          MOVE      ZERO,ACTUAL05
          MOVE      ZERO,ACTUAL06
          MOVE      ZERO,ACTUAL07
          MOVE      ZERO,ACTUAL08
          MOVE      ZERO,ACTUAL09
          MOVE      ZERO,ACTUAL10
          MOVE      ZERO,ACTUAL11
          MOVE      ZERO,ACTUAL12
          MOVE      ZERO,ACTUAL13
          MOVE      ZERO,BUDGET01
          MOVE      ZERO,BUDGET02
          MOVE      ZERO,BUDGET03
          MOVE      ZERO,BUDGET04
          MOVE      ZERO,BUDGET05
          MOVE      ZERO,BUDGET06
          MOVE      ZERO,BUDGET07
          MOVE      ZERO,BUDGET08
          MOVE      ZERO,BUDGET09
          MOVE      ZERO,BUDGET10
          MOVE      ZERO,BUDGET11
          MOVE      ZERO,BUDGET12
          MOVE      ZERO,BUDGET13
          MOVE      ZERO,VARIAN01
          MOVE      ZERO,VARIAN02
          MOVE      ZERO,VARIAN03
          MOVE      ZERO,VARIAN04
          MOVE      ZERO,VARIAN05
          MOVE      ZERO,VARIAN06
          MOVE      ZERO,VARIAN07
          MOVE      ZERO,VARIAN08
          MOVE      ZERO,VARIAN09
          MOVE      ZERO,VARIAN10
          MOVE      ZERO,VARIAN11
          MOVE      ZERO,VARIAN12
          MOVE      ZERO,VARIAN13
          MOVE      ZERO,TOTALACT
          MOVE      ZERO,TOTALBUD
          MOVE      ZERO,TOTALPVA
          MOVE      ZERO,TOTALVAR
.
CLRV9999  RETURN
.******************************************************************************
. SCRZ - Display Screen Z                       Called by SELZ
.******************************************************************************
SCRZ0000  DISPLAY   *P60:3,*V2LON,"- Monthly Analysis",*EL,*HOFF:
                    *P1:4,"Enquiry for ",*V2LON,FMAMDESC,*HOFF,SP10:
                    "Code : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*EF,*HOFF:
                    *P1:5,"Accounting Period ",*P35:5,"Ending ":
                    *P1:7,*V2LON,*ULON,*P6:7,"Date",*P17:7,"Batch":
                    *P23:7,"Reference",*P60:7,"Debit",*P74:7,"Credit";
          MATCH     "8",SAVTYPE
          GOTO      SCRZ0100 IF NOT LESS    * stat type ?
          DISPLAY   *P1:7,*V2LON,*ULON,"Item",*P39:7,"Type";
.
SCRZ0100  PACK      KEY14,SKEY
          CALL      GDAT0000                * get ytd
          DISPLAY   *P56:5,"  YTD  :",*V2LON,DTDACT2,*P56:6,*EL;
.
SCRZ9999  RETURN
.**********************************************************************
. SELZ - Perform screen Z (screen C subscreen 2)      Called By ML
.        Requires - SKEY     (current ledger/account)
.        Returns  - OPTIONZ  (option selected)
.                   EXIT     (1=quit)
.**********************************************************************
SELZ0000  MOVE      "1",PAGENO         * start at page 1
          PACK      SRTDATZ,SP70       * Reset Date Search
.
SELZ0010  CALL      SCRZ0000           * display screen Z
          CALL      HPER0000           * display period data
          CALL      DATZ0000           * display data
.
SELZ0100  CALL      MQSZ0000           * get option
.
.---- print ----
.
          COMPARE   "-1",OPTIONZ
          GOTO      SELZ1500 IF NOT EQUAL
          CALL      PRTZ0000           * print screen
          GOTO      SELZ0010           * go back to start of screen
.
.---- exit ----
.
SELZ1500  COMPARE   "-9",OPTIONZ
          GOTO      SELZ1900 IF NOT EQUAL
          GOTO      SELZ9500           * quit
.
.---- option selected ----
.
SELZ1900  MOVE      SP70,KEY10
          LOAD      KEY32,OPTIONZ,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          MATCH     SP70,KEY32
          GOTO      SELZ5000 IF NOT EQUAL   * valid selection ?
          BEEP
          GOTO      SELZ0100                * get another selection
.
SELZ5000  CALL      RDFMTR2
          CALL      SCRT0000                * display transaction data
          GOTO      SELZ0010                * get another selection
.
.
SELZ9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELZ9999
.
SELZ9500  MOVE      ONE,EXIT           * quit
.
SELZ9999  RETURN
.******************************************************************************
. MQSZ - Main question for Screen Z             Called By SELZ0000
.        Returns  : OPTIONZ  (-1=print, -9=exit)
.******************************************************************************
MQSZ0000  MOVE      "0",CCOL
          DISPLAY   *P1:24;
          MATCH     "8",SAVTYPE
          GOTO      MQSZ0100 IF NOT LESS    * stat type ?
          DISPLAY   *P1:24,"Select Item, ";
          ADD       "13",CCOL
.
MQSZ0100  DISPLAY   "(",*V2LON,"P",*HOFF:
                    ")rint, e(",*V2LON,"X",*HOFF,")it";
          ADD       "15",CCOL
          COMPARE   ONE,MORE
          GOTO      MQSZ1000 IF NOT EQUAL        * any more data ?
.
          DISPLAY   ", (",*V2LON,"D",*HOFF,")ate Search, (":
                    *V2LON,"M",*HOFF,")ore";
          ADD       "23",CCOL
.
MQSZ1000  DISPLAY   " : ";
          ADD       "4",CCOL
.
MQSZ3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
.
          COMPARE   ONE,MORE
          GOTO      MQSZ3300 IF NOT EQUAL        * any more data ?
          MATCH     " M",XIM2
          GOTO      MQSZ3200 IF NOT EQUAL
          ADD       ONE,PAGENO                   * get next page
          CALL      DATZ0000                     * display data
          GOTO      MQSZ0000
.
MQSZ3200  MATCH     " D",XIM2
          GOTO      MQSZ3300 IF NOT EQUAL
          CALL      SDTZ0000                     * Sort by Date
          CALL      DATZ0000                     * display data
          GOTO      MQSZ0000
.
MQSZ3300  MATCH     " P",XIM2
          GOTO      MQSZ3400 IF NOT EQUAL
          MOVE      "-1",OPTIONZ       * anal by period
          PACK      SRTDATZ,SP70       * turn off Date Search
          DISPLAY   *P1:23,*EL;
          GOTO      MQSZ9999
.
MQSZ3400  MATCH     " X",XIM2
          GOTO      MQSZ3500 IF NOT EQUAL
          MOVE      "-9",OPTIONZ       * exit
          PACK      SRTDATZ,SP70       * turn off Date Search
          DISPLAY   *P1:23,*EL;
          GOTO      MQSZ9999
.
MQSZ3500  MOVE      ZERO,OPTIONZ
          MOVE      XIM2,OPTIONZ       * option selected
          MATCH     "8",SAVTYPE
          GOTO      MQSZ3999 IF NOT LESS   * stat type ?
.
          COMPARE   OPTIONZ,ZERO
          GOTO      MQSZ9999 IF LESS   * option positive ?
.
MQSZ3999  BEEP
          GOTO      MQSZ3000
.
MQSZ9999  RETURN
.******************************************************************************
.* SDTZ - Sort Date Option for Screen Z          Called By MQSZ               *
.*        Returns - SRTDATZ  (Date Search)                                    *
.******************************************************************************
SDTZ0000  DISPLAY   *P1:23,*EL,"Date Search : ";
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
SDTZ0200  UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
          MOVE      " 15",CCOL
          MOVE      "23",CVERT
          MOVE      ZERO,CHIGHLT
SDTZ0300  CALL      KEYDATE
          BRANCH    CQUEST,SDTZ0300
          BRANCH    OVRCD,SDTZ7000
.
          PACK      SRTDATZ,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SRTDATZ
.
          MATCH     START,SRTDATZ
          GOTO      SDTZ9000 IF LESS
.
          MATCH     SRTDATZ,END
          GOTO      SDTZ9100 IF LESS
          GOTO      SDTZ9900
.
SDTZ7000  PACK      SRTDATZ,SP70
          DISPLAY   *P1:23,*EL;
          GOTO      SDTZ9900
.
SDTZ9000  UNPACK    START,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CLEAR     DISPMSG
          APPEND    "Date Search must > Period Date From ",DISPMSG
          APPEND    CPCDATE,DISPMSG
          APPEND    ". - ",DISPMSG
          CALL      MESSAGE1
          GOTO      SDTZ0200
.
SDTZ9100  UNPACK    END,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CLEAR     DISPMSG
          APPEND    "Date Search must < Period Date To ",DISPMSG
          APPEND    CPCDATE,DISPMSG
          APPEND    ". - ",DISPMSG
          CALL      MESSAGE1
          GOTO      SDTZ0200
.
SDTZ9900  CALL      MESSAGE3
          GOTO      SDTZ9999
.
SDTZ9999  RETURN
.******************************************************************************
.* DATZ - display Screen Z data                  Called By MQSZ,SELZ          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMZ (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*                  MORE     (1=more data)                                    *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATZ0000  MOVE      "0",TDEBIT
          MOVE      "0",TCREDIT
.
          PACK      ST1,SP70,SP10
          PACK      ST2,SP70,SP10
          PACK      ST3,SP70,SP10
          PACK      ST4,SP70,SP10
          PACK      ST5,SP70,SP10
          PACK      ST6,SP70,SP10
          PACK      ST7,SP70,SP10
          PACK      ST8,SP70,SP10
          PACK      ST9,SP70,SP10
          PACK      ST10,SP70,SP10
          PACK      ST11,SP70,SP10
          PACK      ST12,SP70,SP10
          PACK      ST13,SP70,SP10
          PACK      ST14,SP70,SP10
          PACK      ST15,SP70,SP10
          PACK      ST16,SP70,SP10
          PACK      ST17,SP70,SP10
.
          MATCH     "8",SAVTYPE
          GOTO      DATZ0005 IF NOT LESS    * stat type ?
.
.---- open normal transactions file ----
.
          MOVE      FMST,KEY4
          LOAD      KEY4,FMCOUST,FMSR
          PACK      FILENAM,KEY4,CURYEAR         * open file (if possible)
          REP       " 0",FILENAM
          MATCH     FILENAM,TRANFILE
          GOTO      DATZ0010 IF EQUAL            * file already open ?
.
          MOVE      FILENAM,TRANFILE             * save filename
          MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FILENAM             * open current year files
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,FILENAM             * open current year files
          TRAPCLR   IO
          BRANCH    OVRCD,DATZ8500               * data not found ?
          GOTO      DATZ0010
.
.---- open stat transactions file ----
.
DATZ0005  MOVE      FMSA,KEY4
          LOAD      KEY4,FMCOUST,FMSZ
          PACK      FILENAM,KEY4,CURYEAR         * open file (if possible)
          REP       " 0",FILENAM
          MATCH     FILENAM,TRANFILE
          GOTO      DATZ0010 IF EQUAL            * file already open ?
.
          MOVE      FILENAM,TRANFILE             * save filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA1,FILENAM             * open current year files
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA2,FILENAM             * open current year files
          TRAPCLR   IO
          BRANCH    OVRCD,DATZ8500               * data not found ?
.
DATZ0010  LOAD      START,PERIODNO,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR:
                                   FMLC05FR,FMLC06FR,FMLC07FR,FMLC08FR:
                                   FMLC09FR,FMLC10FR,FMLC11FR,FMLC12FR,FMLC13FR
          LOAD      END,PERIODNO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                 FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                 FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO,FMLC13TO
.
          MATCH     SP70,SRTDATZ                 * Date Search used ?
          IF        !@EQUAL
            PACK      KEY32,SKEY,SRTDATZ,SP70
            PACK      KEY30,SKEY,SRTDATZ,SP70
          ELSE
            PACK      KEY32,SKEY,START,SP70
            PACK      KEY30,SKEY,START,SP70
          ENDIF
          MATCH     "8",SAVTYPE
          GOTO      DATZ0100 IF LESS
          CALL      RSFMSR2                      * go to start of records
          GOTO      DATZ0300
.
DATZ0100  CALL      RSFMTR2                      * go to start of records
.
DATZ0300  MOVE      "7",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:8,*EF;                   * clear data area on screen
.
DATZ1000  MATCH     "8",SAVTYPE
          GOTO      DATZ1500 IF LESS             * stats record ?
.
.---- stat rec ----
.
          CALL      RKFMSR2                      * get next record
          BRANCH    OVRCD,DATZ9000               * no more records ?
          PACK      KEY14,FMSRLEDG,FMSRACCT,SP70
          MATCH     KEY14,KEY32
          GOTO      DATZ9000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMSRDATE,END
          GOTO      DATZ9000 IF LESS             * out of range ?
.
          ADD       FMSRUNIT,TDEBIT
          UNPACK    SP70,DCREDIT,DDEBIT
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMZ,ITEMNUM
          GOTO      DATZ1100 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATZ1100  COMPARE   PAGENO,CURPAGE
          GOTO      DATZ1000 IF NOT EQUAL        * not on current page ?
.
          ADD       "1",LINENO
          UNPACK    FMSRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      FMSRUNIT,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
          DISPLAY   *P1:LINENO,*P6:LINENO,CPCDATE,SP1,FMSRBAT,SP1:
                    FMSRREF,*P53:LINENO,XIM12;
.
          GOTO      DATZ1000
.
.---- normal rec ----
.
DATZ1500  CALL      RKFMTR2
          BRANCH    OVRCD,DATZ9000               * no more records ?
.
          PACK      KEY14,FMTRLEDG,FMTRACCT,SP70
          MATCH     KEY14,KEY32
          GOTO      DATZ9000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMTRPDAT,END
          GOTO      DATZ9000 IF LESS             * out of range ?
.
          MOVE      ZERO,DEBIT
          MOVE      ZERO,CREDIT
          CALL      GTYP0000                     * get transaction type
          STORE     FMTRAMT,DEBCRED,DEBIT,CREDIT
          ADD       DEBIT,TDEBIT
          ADD       CREDIT,TCREDIT
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMZ,ITEMNUM
          GOTO      DATZ2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATZ2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATZ1000 IF NOT EQUAL        * not on current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
.
          PACK      KEY32,FMTRLEDG,FMTRACCT,FMTRPDAT,FMTRBAT,FMTRUNIQ,SP70
          STORE     KEY32,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          UNPACK    FMTRPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          UNPACK    SP70,DCREDIT,DDEBIT
          BRANCH    DEBCRED,DATZ8100,DATZ8200
.
DATZ8100  MOVE      DEBIT,KAMOUNT      * debit format
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DDEBIT
          LOAD      DDEBIT,FORMFLAG,ZIM15
          GOTO      DATZ8300
.
DATZ8200  MOVE      CREDIT,KAMOUNT     * credit format 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DCREDIT
          LOAD      DCREDIT,FORMFLAG,ZIM15
.
DATZ8300  DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P6:LINENO,CPCDATE,SP1,FMTRBAT,SP1,FMTRDOCR,SP1,TRANTYPE:
                    *P50:LINENO,DDEBIT,DCREDIT
.
          GOTO      DATZ1000                     * get next record
.
.---- file not found ----
.
DATZ8500  MOVE      SP70,TRANFILE
.
.---- reached EOF before EOP ----
.
DATZ9000  MOVE      TDEBIT,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DDEBIT
          LOAD      DDEBIT,FORMFLAG,ZIM15
.
          MOVE      TCREDIT,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DCREDIT
          LOAD      DCREDIT,FORMFLAG,ZIM15
.
          DISPLAY   *P40:22,*V2LON,"Totals    ",DDEBIT,DCREDIT;
          COMPARE   CURPAGE,PAGENO
          GOTO      DATZ9500 IF LESS
.
          MATCH     SP70,SRTDATZ
          IF        !@EQUAL
            UNPACK    SRTDATZ,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            DISPLAY   *P1:23,*EL,"Date Search : ",*V2LON,CPCDATE,*HOFF;
          ENDIF
          MOVE      ZERO,ITEMNUM                 * reset pointer
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATZ9999
.
.---- reached EOP before EOF ----
.
DATZ9500  MOVE      ONE,MORE                     * more data
          MOVE      MAXITEMZ,ITEMNUM
.
DATZ9999  RETURN
.**********************************************************************
. PRTT -   Print transaction data screen              Called By SCRT
.**********************************************************************
PRTT0000  MOVE      "8",REPNO
          CALL      HEAD0000                     * print header
          CALL      GTYP0000           * get transaction type
          UNPACK    FMTRPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          LOAD      KEY15,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
.
          PRINT     *N,*28,"Transaction Detail",*N:
                    *N,"Batch Number/Id          : ",FMTRBAT,SLASH,FMTRUNIQ:
                    *N,"Posting Date             : ",CPCDATE:
                    *45,"Accounting Period ",KEY15;
          UNPACK    FMTRTDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CALL      GPAY0000         * Get payment period description (TERMS)
.
          PRINT     *N,"Transaction Date         : ",CPCDATE:
                    *N,"Transaction Type         : ",TRANTYPE:
                    *N,"Document Reference       : ",FMTRDOCR:
                    *N,"Description              : ",FMTRDESC,SP3,FMRSDESC:
                    *N,"Responsibility           : ",FMTRRESP,SP2,FMDSDESC:
                    *N,"Dissection Code          : ",FMTRDISS:
                    *N,"Order No/Cheque No       : ",FMTRORD:
                    *N,"Creditor Code            : ",FMTRCRED,SP2,FMBNNAM:
                    *N,"Payment Period           : ",FMTRPPER,SP5,APPPDES:
                    *N,"Amount                   : ",FMTRAMT,"  ",DIM2
.
PRTT9999  RETURN
.**********************************************************************
. SCRT - Display transaction data                     Called By SELZ
.**********************************************************************
SCRT0000  DISPLAY   *P1:6,*EF:
                    *P28:7,*V2LON,"Transaction Detail",*HOFF:
                    *P1:9,"Batch Number/Id          : ":
                   *P1:10,"Posting Date             : ":
                   *P45:10,"Accounting Period":
                   *P1:11,"Transaction Date         : ":
                   *P1:12,"Transaction Type         : ":
                   *P1:13,"Document Reference       : ":
                   *P1:14,"Description              : ":
                   *P1:15,"Responsibility           : ":
                   *P1:16,"Dissection Code          : ":
                   *P1:17,"Order No/Cheque No       : ":
                   *P1:18,"Creditor Code            : ":
                   *P1:19,"Payment Period           : ":
                   *P1:20,"Amount                   : "
.
SCRT0500  MOVE      ZERO,MORE          * any more data ?
          CALL      RKFMTR2
          BRANCH    OVRCD,SCRT0600
.
          PACK      KEY14,FMTRLEDG,FMTRACCT,SP70
          MATCH     KEY14,SKEY
          GOTO      SCRT0600 IF NOT EQUAL   * correct account ?
          MATCH     FMTRPDAT,END
          GOTO      SCRT0600 IF LESS   * out of range ?
          MOVE      ONE,MORE
.
SCRT0600  MOVE      ZERO,LMORE         * any pervious data ?
          CALL      RPFMTR2
          CALL      RPFMTR2
          BRANCH    OVRCD,SCRT0700
.
          PACK      KEY14,FMTRLEDG,FMTRACCT,SP70
          MATCH     KEY14,SKEY
          GOTO      SCRT0700 IF NOT EQUAL   * correct account ?
          MATCH     START,FMTRPDAT
          GOTO      SCRT0700 IF LESS   * out of range ?
          MOVE      ONE,LMORE
.
SCRT0700  CALL      RKFMTR2
.
          CALL      GTYP0000           * get transaction type
          UNPACK    FMTRPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          LOAD      KEY15,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
.
          DISPLAY   *P28:9,*V2LON,FMTRBAT,SLASH,FMTRUNIQ:
                    *P28:10,CPCDATE,*P63:10,KEY15;
          UNPACK    FMTRTDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CALL      GPAY0000           * Get payment period description (TERMS)
.
          UNPACK    SP70,FMDSDESC,FMRSDESC
          PACK      KEY5,FMTRDISS,SP70
          CALL      RDFMDS1
          PACK      KEY4,FMTRRESP,SP70
          CALL      RDFMRS1
.
          PACK      KEY5,FMTRCRED,SP70
          CALL      RDAPMA1
          PACK      FMBNNAM,APMACN1,SP70
          COMPARE   ONE,OVRCD
          GOTO      SCRT0900 IF NOT EQUAL   * creditor not found
.
          MOVE      SP70,FMTRCRED           * clear creditor code
          MATCH     "PY",FMTRTYPE
          GOTO      SCRT8900 IF EQUAL       * not payment type ?
          MATCH     SP70,FMTRORD
          GOTO      SCRT8900 IF EQUAL       * no cheque number ?
          MATCH     "00000000000000000000",FMTRORD
          GOTO      SCRT8900 IF EQUAL       * no cheque number ?
.
          PACK      KEY15,SP70
          CALL      RSFMCH1                 * check account loop
.
SCRT8100  CALL      RKFMCH1                 * get next record
          BRANCH    OVRCD,SCRT8900          * no more records ?
.
          MOVE      FMTRORD,FA12
          PACK      KEY36,FMCHCHQ,ZERO,FA12,SP70
          CALL      RSFMBN2                 * bank rec loop
          CALL      RKFMBN2                 * get next record
          BRANCH    OVRCD,SCRT8100          * no more records ?
.
          PACK      KEY31,FMBNBNK,FMBNTYP,FMBNREF,SP70     * build current key
          MATCH     KEY31,KEY36
          GOTO      SCRT8100 IF NOT EQUAL   * out of range of desired records ?
          GOTO      SCRT0900                * got record
.
SCRT8900  MOVE      SP70,FMBNNAM            * cheque not found, so clear desc
.
SCRT0900  DISPLAY   *P28:11,*V2LON,CPCDATE:
                    *P28:12,TRANTYPE:
                    *P28:13,FMTRDOCR:
                    *P28:14,FMTRDESC:
                    *P28:15,FMTRRESP,*HOFF,SP3,FMRSDESC,*V2LON:
                    *P28:16,FMTRDISS,*HOFF,SP2,FMDSDESC,*V2LON:
                    *P28:17,FMTRORD:
                    *P28:18,FMTRCRED,*HOFF,SP2,FMBNNAM,*V2LON:
                    *P28:19,FMTRPPER,*HOFF,SP5,APPPDES,*V2LON:
                    *P28:20,FMTRAMT;
.
          MOVE      "DR" TO DIM2
          BRANCH    DEBCRED TO SCRT0950
          MOVE      "CR" TO DIM2
.
SCRT0950  DISPLAY   *P45:20,DIM2
.
SCRT1000  KEYIN     *P1:24,*EL,"(",*V2LON,"P",*HOFF,")rint, ",*V2LON;
          COMPARE   ONE,MORE
          GOTO      SCRT1200 IF NOT EQUAL    * any next data ?
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Transaction, ";
.
SCRT1200  COMPARE   ONE,LMORE
          GOTO      SCRT1300 IF NOT EQUAL    * any next data ?
          DISPLAY   "(",*V2LON,"L",*HOFF,")ast Transaction, ";
.
SCRT1300  KEYIN     "e(",*V2LON,"X",*HOFF,")it : ",*V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "P",ANS
          GOTO      SCRT2100 IF NOT EQUAL    * print ?
          CALL      PRTT0000                 * print screen
          GOTO      SCRT0500
.
SCRT2100  COMPARE   ONE,MORE
          GOTO      SCRT2200 IF NOT EQUAL    * any next data ?
          MATCH     "N",ANS
          GOTO      SCRT2200 IF NOT EQUAL    * next ?
.
          CALL      RKFMTR2
          GOTO      SCRT0500
.
SCRT2200  COMPARE   ONE,LMORE
          GOTO      SCRT2300 IF NOT EQUAL    * any previous data ?
          MATCH     "L",ANS
          GOTO      SCRT2300 IF NOT EQUAL    * last ?
.
          CALL      RPFMTR2
          GOTO      SCRT0500
.
SCRT2300  MATCH     "X",ANS
          GOTO      SCRT9999 IF EQUAL        * exit ?
          BEEP
          GOTO      SCRT1000
.
SCRT9999  RETURN
.**********************************************************************
. GTYP - get transaction type                         Called By ML
.        Requires - FMTRTYPE (transaction code)
.        Returns  - DEBCRED  (1=debit type, 2=credit type)
.                   TRANTYPE (transaction description)
.**********************************************************************
GTYP0000  MOVE      ZERO,DEBCRED
          MOVE      SP70,TRANTYPE
.
          MATCH     "IN",FMTRTYPE
          GOTO      GTYP0100 IF NOT EQUAL
          MOVE      "1",DEBCRED
          MOVE      "Invoice     ",TRANTYPE
          GOTO      GTYP9999
.
GTYP0100  MATCH     "PY",FMTRTYPE
          GOTO      GTYP0200 IF NOT EQUAL
          MOVE      "1",DEBCRED
          MOVE      "Payment     ",TRANTYPE
          GOTO      GTYP9999
.
GTYP0200  MATCH     "JA",FMTRTYPE
          GOTO      GTYP0300 IF NOT EQUAL
          MOVE      "1",DEBCRED
          MOVE      "Journal Dr  ",TRANTYPE
          GOTO      GTYP9999
.
GTYP0300  MATCH     "JC",FMTRTYPE
          GOTO      GTYP0400 IF NOT EQUAL
          MOVE      "2",DEBCRED
          MOVE      "Journal Cr  ",TRANTYPE
          GOTO      GTYP9999
.
GTYP0400  MATCH     "CS",FMTRTYPE
          GOTO      GTYP0500 IF NOT EQUAL
          MOVE      "2",DEBCRED
          MOVE      "Cash Rec    ",TRANTYPE
          GOTO      GTYP9999
.
GTYP0500  MATCH     "CR",FMTRTYPE
          GOTO      GTYP0600 IF NOT EQUAL
          MOVE      "2",DEBCRED
          MOVE      "Credit      ",TRANTYPE
          GOTO      GTYP9999
.
GTYP0600  MATCH     "RF",FMTRTYPE
          GOTO      GTYP0700 IF NOT EQUAL
          MOVE      "2",DEBCRED
          MOVE      "Refund      ",TRANTYPE
          GOTO      GTYP9999
.
GTYP0700  MATCH     "RI",FMTRTYPE
          GOTO      GTYP0800 IF NOT EQUAL
          MOVE      "2",DEBCRED
          MOVE      "Reinst Inv  ",TRANTYPE
          GOTO      GTYP9999
.
GTYP0800  MATCH     "CC",FMTRTYPE
          GOTO      GTYP0900 IF NOT EQUAL
          MOVE      "2",DEBCRED
          MOVE      "Cancel Cheq ",TRANTYPE
          GOTO      GTYP9999
.
GTYP0900  
.
GTYP9999  RETURN
.**********************************************************************
. HEAD - Print heading                                Called By lots
.        Requires : REPNO   (report number)
.         REPNO     1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
.         SCREEN    B  C  Z  D  G  I  J  T  E  K  L  Q  R  Y  S
.**********************************************************************
HEAD0000  PACK      KEY14,SKEY
          CALL      RDFMAM1                      * read account data
          MOVE      ZERO,CPAGENO                 * initialize page number
          MOVE      ZERO,ITEMNUM                 * initialize line number
          CLOCK     TIME,CTIMEIS                 * get current time
.
          IF        REPNO=1 | REPNO=3 | REPNO=4 | REPNO=14
            CALL      HEAD132
          ELSE
            CALL      HEAD80                       * print header
          ENDIF
.
          BRANCH    REPNO,HEAD9999,HEAD9999,HEAD0300,HEAD0400:
                          HEAD9999,HEAD0600,HEAD0700,HEAD9999:
                          HEAD9999,HEAD1000,HEAD1100,HEAD1200:
                          HEAD1300,HEAD1400,HEAD1500
.
.---- report 3 ----
.
HEAD0300  LOAD      KEY15,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE
          LOAD      KEY8,PERIODNO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                  FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                  FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      KEY14,SKEY
          CALL      GDAT0000           * get ytd
.
          PRINT     *N,"Enquiry for ",FMAMDESC,SP10:
                    "Code : ",FMAMLEDG,SLASH,FMAMACCT,*N:
                    *1,"Accounting Period ",KEY15,*35,"Ending ",CPCDATE:
                    *56,"  YTD  :",DTDACT2,*N,*N:
                    *1,"Item",*6,"Date",*17,"Batch",*23,"Reference",*39:
                    "Ty",*51,"Debit",*66,"Credit",*74,"Description":
                    *105,"Creditor",*N:
                    *1,"----",*6,"----",*17,"-----",*23,"---------",*39:
                    "--",*51,"-----",*66,"------",*74,"-----------":
                    *105,"--------"
          ADD       "5",CLNO
          GOTO      HEAD9999
.
.---- report 4 ----
.
HEAD0400  LOAD      KEY15,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE
          LOAD      KEY8,PERIODNO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                  FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                  FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      KEY14,SKEY
          CALL      GDAT0000           * get ytd
          PRINT     *N,"Enquiry for ",FMAMDESC,SP10:
                    "Code : ",FMAMLEDG,SLASH,FMAMACCT,*N:
                    *1,"Accounting Period ",KEY15,*35,"Ending ",CPCDATE,*N:
                    *42,"Year to Date",*N:
                    *1,"Item",*6,"Description";
          MATCH     "8",SAVTYPE
          GOTO      HEAD0420 IF LESS
          PRINT     *37,"Type";
.
HEAD0420  PRINT     *48,"Ytd Actual",*69,"Budget",*78,"Variance":
                    *88,"% Var",*N:
                    *1,"----",*6,"-----------";
          MATCH     "8",SAVTYPE
          GOTO      HEAD0450 IF LESS
          PRINT     *37,"----";
.
HEAD0450  PRINT     *48,"----------",*69,"------",*78,"--------":
                    *88,"-----"
          ADD       "5",CLNO
          GOTO      HEAD9999
.
.---- report 6 -----
.
HEAD0600  PRINT     *N,"    Ledger               : ",FMLALEDG,*44,FMLADESC:
                    *N,"    Account              : ",FMAMACCT,*44,FMAMDESC:
                    *N,*28,"Accounts Adding to This Total":
                    *N,"Item",*7,"Ledger/Account",*72,"Acct Seq":
                    *N,"----",*7,"--------------",*72,"--------"
          ADD       "7",CLNO
          GOTO      HEAD9999
.
.---- report 7 -----
.
HEAD0700  PRINT     *N,"    Ledger               : ",FMLALEDG,*44,FMLADESC:
                    *N,"    Account              : ",FMAMACCT,*44,FMAMDESC:
                    *N,*28,"Accounts Related to This Total":
                    *N,"Item",*7,"Function",*17,"Ledger/Account",*72,"Acct Seq":
                    *N,"----",*7,"--------",*17,"--------------",*72,"--------"
          ADD       "7",CLNO
          GOTO      HEAD9999
.
.---- report 10 ----
.
HEAD1000  LOAD      KEY15,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE
          LOAD      KEY8,PERIODNO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                  FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                  FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      KEY14,SKEY
          CALL      GDAT0000           * get ytd
          PRINT     *N,"Enquiry for ",FMAMDESC,SP10:
                    "Code : ",FMAMLEDG,SLASH,FMAMACCT,*N:
                    *1,"Accounting Period ",KEY15,*35,"Ending ",CPCDATE,*N:
                    *N,"Dissection",*45,"Current Period",*67,"Year to Date":
                    *N,"----------",*45,"--------------",*67,"------------"
          ADD       "6",CLNO
          GOTO      HEAD9999
.
.---- report 11 ----
.
HEAD1100  LOAD      KEY15,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE
          LOAD      KEY8,PERIODNO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                  FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                  FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      KEY14,SKEY
          CALL      GDAT0000           * get ytd
          PRINT     *N,"Enquiry for ",FMAMDESC,SP10:
                    "Code : ",FMAMLEDG,SLASH,FMAMACCT,*N:
                    *1,"Accounting Period ",KEY15,*35,"Ending ",CPCDATE,*N:
                    *N,"Responsibility",*45,"Current Period",*67,"Year to Date":
                    *N,"--------------",*45,"--------------",*67,"------------"
          ADD       "6",CLNO
          GOTO      HEAD9999
.
.---- report 12 -----
.
HEAD1200  PRINT     *N,"    Ledger               : ",FMLALEDG,*44,FMLADESC:
                    *N,"    Account              : ",FMAMACCT,*44,FMAMDESC:
                    *N,*28,"Adds To Accounts":
                    *N,"Item",*7,"Ledger/Account":
                    *N,"----",*7,"--------------"
          ADD       "7",CLNO
          GOTO      HEAD9999
.
.---- report 13 -----
.
HEAD1300  PRINT     *N,"    Ledger               : ",FMLALEDG,*44,FMLADESC:
                    *N,"    Account              : ",FMAMACCT,*44,FMAMDESC:
                    *N,*28,"Reporting Details":
                    *N,*7,"Report Code",*47,"Print Code",*73,"Prt Pos":
                    *N,*7,"-----------",*47,"----------",*73,"-------"
          ADD       "7",CLNO
          GOTO      HEAD9999
.
.---- report 14 ----
.
HEAD1400  LOAD      KEY15,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE
          LOAD      KEY8,PERIODNO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                  FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                  FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      TYTDACT,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
.
          PRINT     *N,"Enquiry for ",FMAMDESC,SP10:
                    "Code : ",FMAMLEDG,SLASH,FMAMACCT,*N:
                    *1,"Accounting Period ",KEY15,*35,"Ending ",CPCDATE:
                    *56,"  YTD  :",XIM17,*N,*N:
                    *1,"Item",*6,"Description";
          MATCH     "8",SAVTYPE
          GOTO      HEAD1420 IF LESS
          PRINT     *37,"Type";
.
HEAD1420  PRINT     *48,"Ytd Actual",*69,"Budget",*78,"Variance":
                    *88,"% Var",*N:
                    *1,"----",*6,"-----------";
          MATCH     "8",SAVTYPE
          GOTO      HEAD1450 IF LESS
          PRINT     *37,"----";
.
HEAD1450  PRINT     *48,"----------",*69,"------",*78,"--------":
                    *88,"-----"
          ADD       "5",CLNO
          GOTO      HEAD9999
.
.---- report 15 ----
.
HEAD1500  PRINT     *N,"    Ledger               : ",FMLALEDG,*44,FMLADESC:
                    *N,"    Account              : ",FMAMACCT,*44,FMAMDESC:
                    *N,*28,"Subjectives Adding to This Total Subjective":
                    *N,"Item",*7,"Ledger/Subjective",*72,"Type":
                    *N,"----",*7,"-----------------",*72,"----"
          ADD       "7",CLNO
          GOTO      HEAD9999
.
HEAD9999  RETURN
.**********************************************************************
. PRTB - Print Screen B                               Called By SELB
.        Requires - SKEY     (current ledger/account)
.**********************************************************************
PRTB0000  MOVE      "1",REPNO
          CALL      HEAD0000                     * print header
.
          PACK      KEY14,SKEY         * set up var for LDAT
          CALL      LDAT0000           * get last years data
          PACK      KEY14,SKEY         * set up var for GDAT
          CALL      GDAT0000           * get data
          LOAD      KEY15,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE
          LOAD      KEY8,PERIODNO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                  FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                  FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *N,"Enquiry for ",FMAMDESC,SP10:
                    "Code : ",FMAMLEDG,SLASH,FMAMACCT,*N:
                    *1,"Accounting Period ",KEY15,*35,"Ending ",CPCDATE,*N,*N:
                    *13,"Current",*41,"Year to Date":
                    *62,"Last Year",*79,PROHEAD1,*N:
                    *13,"-------",*41,"------------":
                    *62,"---------",*79,PROHEAD2,*N:
                 *3,DCTUAL3,*25,"Actual",*36,DTDACT3,*54,DASACT3,*72,DROACT3,*N:
                 *3,DUDGET3,*25,"Budget",*36,DTDBUD3,*54,DASBUD3,*72,DROBUD3,*N:
               *3,DARIAN3,*24,"Variance",*36,DTDVAR3,*54,DASVAR3,*72,DROVAR3,*N:
                   *11,PERVAR,*21,"Percentage Var",*47,YTDPVA,*65,LASPVA:
                   *83,DPROPVA,*N:
                   *03,"Committed Raised",*22,DOMRAISD:
                   *43,"Committed Rec'd",*62,DOMRECVD 
          ADD       "9",CLNO
.
          COMPARE   ONE,FMACW1ON
          GOTO      PRTB9999 IF NOT EQUAL        * notes active ?
.
          PRINT     *5,"Notes                            ":
                    "                                     ",*N:
                    *5,"---------------------------------":
                    "-------------------------------------"
          ADD       "2",CLNO
          PACK      KEY17,SKEY,SP70
          CALL      RSFMUW1                 * go to start of wp records
.
PRTB0100  CALL      RKFMUW1                 * get next wp record
          BRANCH    OVRCD,PRTB9999          * no more records ?
          PACK      KEY14,FMUWLEDG,FMUWACCT,SP70
          MATCH     KEY14,KEY17
          GOTO      PRTB9999 IF NOT EQUAL   * no more records
          ADD       "1",CLNO
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * at end of page ?
          PRINT     *5,FMUWLINE
          GOTO      PRTB0100
.
PRTB9999  RETURN
.**********************************************************************
. PRTC - Print Screen C                               Called By SELC
.        Requires - SKEY     (current ledger/account)
.**********************************************************************
PRTC0000  MOVE      "2",REPNO
          CALL      HEAD0000                     * print header
.
          UNPACK    SKEY,KEY2
          PACK      KEY6,KEY2,CURYEAR,SP70
          CALL      RDFMLC1
          CALL      RDXTMA             * get year data
.
          PRINT     *N,"Enquiry for ",FMAMDESC,SP10:
                    "Code : ",FMAMLEDG,SLASH,FMAMACCT,*N:
                    "Financial Year ",CURYEAR,*56,"Br Fwd : ";
          COMPARE   "0",BRFWD
          GOTO      PRTC1000 IF EQUAL
.
          MOVE      BRFWD,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DDEBIT
          PRINT     DDEBIT;
.
PRTC1000  PRINT     *N,*1,"Item",*16,"Actual",*24,"Period":
                    *49,"Budget",*65,"Variance",*75,"% Var",*N:
                       *1,"----",*16,"------",*24,"------":
                    *49,"------",*65,"--------",*75,"-----",*N:
                    *1," 1.",*6,DCTUAL01,*24,FMLC01DE,*39,DUDGET01,*57,DARIAN01:
                    *75,PERVAR01,*N:
                    *1," 2.",*6,DCTUAL02,*24,FMLC02DE,*39,DUDGET02,*57,DARIAN02:
                    *75,PERVAR02,*N:
                    *1," 3.",*6,DCTUAL03,*24,FMLC03DE,*39,DUDGET03,*57,DARIAN03:
                    *75,PERVAR03,*N:
                    *1," 4.",*6,DCTUAL04,*24,FMLC04DE,*39,DUDGET04,*57,DARIAN04:
                    *75,PERVAR04,*N:
                    *1," 5.",*6,DCTUAL05,*24,FMLC05DE,*39,DUDGET05,*57,DARIAN05:
                    *75,PERVAR05,*N:
                    *1," 6.",*6,DCTUAL06,*24,FMLC06DE,*39,DUDGET06,*57,DARIAN06:
                    *75,PERVAR06,*N:
                    *1," 7.",*6,DCTUAL07,*24,FMLC07DE,*39,DUDGET07,*57,DARIAN07:
                    *75,PERVAR07,*N:
                    *1," 8.",*6,DCTUAL08,*24,FMLC08DE,*39,DUDGET08,*57,DARIAN08:
                    *75,PERVAR08,*N:
                    *1," 9.",*6,DCTUAL09,*24,FMLC09DE,*39,DUDGET09,*57,DARIAN09:
                    *75,PERVAR09,*N:
                    *1,"10.",*6,DCTUAL10,*24,FMLC10DE,*39,DUDGET10,*57,DARIAN10:
                    *75,PERVAR10,*N:
                    *1,"11.",*6,DCTUAL11,*24,FMLC11DE,*39,DUDGET11,*57,DARIAN11:
                    *75,PERVAR11,*N:
                    *1,"12.",*6,DCTUAL12,*24,FMLC12DE,*39,DUDGET12,*57,DARIAN12:
                    *75,PERVAR12
          COMPARE   "1",FMLAPERS
          GOTO      PRTC2000 IF NOT EQUAL        * 12 periods ?
          PRINT     *1,"13.",*6,DCTUAL13,*24,FMLC13DE,*39,DUDGET13,*57,DARIAN13:
                    *75,PERVAR13
.
PRTC2000  PRINT     *6,"================",*39,"================":
                    *57,"================",*75,"=====",*N:
                    *6,DOTALACT,*24,AVYTDDIS,*39,DOTALBUD,*57,DOTALVAR:
                    *75,TOTALPVA,*N:
                    *6,"----------------",*39,"----------------":
                    *57,"----------------",*75,"-----"
.
PRTC9999  RETURN
.******************************************************************************
.* PRTD - Print Screen D data                    Called By MQSD               *
.******************************************************************************
PRTD0000  MOVE      "4",REPNO
          CALL      HEAD0000                     * print header
          PACK      KEY14,SKEY,SP70
          CALL      RDFMAM1
          MOVE      FMAMTYPE,TEMPTYPE
          MOVE      ZERO,TEMPDPLA
          MOVE      FMAMDPLA,TEMPDPLA
.
          PACK      KEY33,SKEY,SP70
          CALL      RSFMTC1                      * go to start of records
.
          MOVE      "7",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          MOVE      "0",TACTUAL
          MOVE      "0",TBUDGET
.
.---- get next rec ----
.
PRTD1000  MATCH     "8",TEMPTYPE
          GOTO      PRTD1100 IF LESS             * stat type rec ?
.
          CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,PRTD9000               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,KEY33
          GOTO      PRTD9000 IF NOT EQUAL        * no more records ?
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70 * desired account
.
          DISPLAY   *P1:24,"Printing - ",FMTCSLED,"/",FMTCSACC,*EL;
          CALL      GDAT0000
          IF        (YTDACT=0)&(YTDBUD=0)
            GOTO      PRTD1000
          ENDIF
.
          UNPACK    FMAMDESC,XIM31
          MOVE      FMTCADDT,F1
          MOVE      ADDT0,ADDT
          LOAD      ADDT,F1,ADDT1,ADDT2,ADDT3
          MOVE      ADDT,KEY3
          PACK      FMAMDESC,XIM31,SP1,KEY3,SP70
          BRANCH    F1,PRTD1010,PRTD1020,PRTD1030
.
          ADD       YTDACT,TACTUAL
          ADD       YTDBUD,TBUDGET
          GOTO      PRTD1200
.
PRTD1010  SUB       YTDACT,TACTUAL
          SUB       YTDBUD,TBUDGET
          GOTO      PRTD1200
.
PRTD1020  MOVE      YTDACT,CDIV1
          MOVE      TACTUAL,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,TACTUAL
.
          MOVE      YTDBUD,CDIV1
          MOVE      TBUDGET,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,TBUDGET
          GOTO      PRTD1200
.
PRTD1030  MULT      YTDACT,TACTUAL
          MULT      YTDBUD,TBUDGET
          GOTO      PRTD1200
.
PRTD1100  CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,PRTD9000               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,KEY33
          GOTO      PRTD9000 IF NOT EQUAL        * no more records ?
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
.
          DISPLAY   *P1:24,"Printing - ",FMTCSLED,"/",FMTCSACC,*EL;
          CALL      GDAT0000
          IF        (YTDACT=0)&(YTDBUD=0)
            GOTO      PRTD1000
          ENDIF
          ADD       YTDACT,TACTUAL
          ADD       YTDBUD,TBUDGET
.
          COMPARE   "0",TOTALTYP
          GOTO      PRTD1200 IF EQUAL            * get subj/cc description ?
          MOVE      FMAMDESC,FMSADESC
          MOVE      FMAMDESC,FMCCDESC
          MOVE      FMTCSACC,ACCOUNT
          CALL      GCOD0000                     * break up into cc and subj
          PACK      KEY14,FMTCSLED,COSTCODE,SP70
          COMPARE   "1",TOTALTYP
          CALL      RDFMCC1 IF EQUAL             * cc desc required ?
          PACK      KEY14,FMTCSLED,SUBJCODE,SP70
          COMPARE   "2",TOTALTYP
          CALL      RDFMSA1 IF EQUAL             * subj desc required ?
          LOAD      FMAMDESC,TOTALTYP,FMCCDESC,FMSADESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70 * restore key 14
.
.---- process rec ----
.
PRTD1200  
          ADD       "1",ITEMNUM                  * increment item number
.
.---- print data ----
.
          MOVE      YTDACT,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DTDACT3
.
          MOVE      YTDBUD,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DTDBUD3
.
          MOVE      YTDVAR,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDVAR
.
          ADD       "1",CLNO
          PRINT     *1,ITEMNUM,DOT,*6,FMAMDESC:
                    DTDACT3,DTDBUD3,DTDVAR,SP2,YTDPVA
.
          COMPARE   "54",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          GOTO      PRTD1000                     * get next record
.
.---- print totals ----
.
PRTD9000  MOVE      TEMPDPLA,DECPLACE
          MOVE      TACTUAL,XACTUAL
          MOVE      TBUDGET,XBUDGET
          CALL      CALC0000                     * cal var and % var
          MOVE      TACTUAL,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DTDACT3
.
          MOVE      TBUDGET,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DTDBUD3
.
          MOVE      XVARIAN,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDVAR
.
          PRINT     *N,*30,"Totals     ",DTDACT3,DTDBUD3,DTDVAR,SP2,XPERVAR
.
PRTD9999  RETURN
.******************************************************************************
.* PRTY - Print Screen Y data                    Called By MQSY               *
.******************************************************************************
PRTY0000  MOVE      "14",REPNO
          CALL      HEAD0000                     * print header
          PACK      KEY14,SKEY,SP70
          CALL      RDFMAM1
          MOVE      FMAMTYPE,TEMPTYPE
          MOVE      ZERO,TEMPDPLA
          MOVE      FMAMDPLA,TEMPDPLA
.
          PACK      KEY33,SKEY,SP70
          CALL      RSFMTC1                      * go to start of records
.
          MOVE      "7",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          MOVE      "0",TACTUAL
          MOVE      "0",TBUDGET
.
.---- get next rec ----
.
PRTY1000  MATCH     "8",TEMPTYPE
          GOTO      PRTY1100 IF LESS             * stat type rec ?
.
          CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,PRTY9000               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,KEY33
          GOTO      PRTY9000 IF NOT EQUAL        * no more records ?
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70 * desired account
.
          DISPLAY   *P1:24,"Printing - ",FMTCSLED,"/",FMTCSACC,*EL;
          CALL      GDAT0000
          IF        (ACTUAL=0)&(BUDGET=0)
            GOTO      PRTY1000
          ENDIF
.
          UNPACK    FMAMDESC,XIM31
          MOVE      FMTCADDT,F1
          MOVE      ADDT0,ADDT
          LOAD      ADDT,F1,ADDT1,ADDT2,ADDT3
          MOVE      ADDT,KEY3
          PACK      FMAMDESC,XIM31,SP1,KEY3,SP70
          BRANCH    F1,PRTY1010,PRTY1020,PRTY1030
.
          ADD       ACTUAL,TACTUAL
          ADD       BUDGET,TBUDGET
          GOTO      PRTY1200
.
PRTY1010  SUB       ACTUAL,TACTUAL
          SUB       BUDGET,TBUDGET
          GOTO      PRTY1200
.
PRTY1020  MOVE      YTDACT,CDIV1
          CALL      CDIV0000
.
          MOVE      ACTUAL,CDIV1
          MOVE      TACTUAL,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,TACTUAL
.
          MOVE      BUDGET,CDIV1
          MOVE      TBUDGET,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,TBUDGET
          GOTO      PRTY1200
.
PRTY1030  MULT      ACTUAL,TACTUAL
          MULT      BUDGET,TBUDGET
          GOTO      PRTY1200
.
.
PRTY1100  CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,PRTY9000               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,KEY33
          GOTO      PRTY9000 IF NOT EQUAL        * no more records ?
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
.
          DISPLAY   *P1:24,"Printing - ",FMTCSLED,"/",FMTCSACC,*EL;
          CALL      GDAT0000
.
          IF        (ACTUAL=0)&(BUDGET=0)
            GOTO      PRTY1000
          ENDIF
.
          ADD       ACTUAL,TACTUAL
          ADD       BUDGET,TBUDGET
.
          COMPARE   "0",TOTALTYP
          GOTO      PRTY1200 IF EQUAL            * get subj/cc description ?
          MOVE      FMAMDESC,FMSADESC
          MOVE      FMAMDESC,FMCCDESC
          MOVE      FMTCSACC,ACCOUNT
          CALL      GCOD0000                     * break up into cc and subj
          PACK      KEY14,FMTCSLED,COSTCODE,SP70
          COMPARE   "1",TOTALTYP
          CALL      RDFMCC1 IF EQUAL             * cc desc required ?
          PACK      KEY14,FMTCSLED,SUBJCODE,SP70
          COMPARE   "2",TOTALTYP
          CALL      RDFMSA1 IF EQUAL             * subj desc required ?
          LOAD      FMAMDESC,TOTALTYP,FMCCDESC,FMSADESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70 * restore key 14
.
.---- process rec ----
.
PRTY1200  ADD       "1",ITEMNUM                  * increment item number
.
.---- print data ----
.
          MOVE      ACTUAL,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DTDACT3
.
          MOVE      BUDGET,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DTDBUD3
.
          MOVE      VARIAN,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDVAR
.
          ADD       "1",CLNO
          PRINT     *1,ITEMNUM,DOT,*6,FMAMDESC:
                    DTDACT3,DTDBUD3,DTDVAR,SP2,PERVAR
.
          COMPARE   "54",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          GOTO      PRTY1000                     * get next record
.
.---- print totals ----
.
PRTY9000  MOVE      TEMPDPLA,DECPLACE
          MOVE      TACTUAL,XACTUAL
          MOVE      TBUDGET,XBUDGET
          CALL      CALC0000                     * cal var and % var
          MOVE      TACTUAL,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DTDACT3
.
          MOVE      TBUDGET,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM17,DTDBUD3
.
          MOVE      XVARIAN,KAMOUNT
          MOVE      TWO,DECPLACE
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM11,DTDVAR
.
          PRINT     *N,*30,"Totals     ",DTDACT3,DTDBUD3,DTDVAR,SP2,XPERVAR
.
PRTY9999  RETURN
.**********************************************************************
. PRTZ - Print Screen Z                               Called By SELZ
.        Requires - SKEY     (current ledger/account)
.**********************************************************************
PRTZ0000  MOVE      "3",REPNO
          CALL      HEAD0000                     * print header
.
          MOVE      "0",TDEBIT
          MOVE      "0",TCREDIT
          MOVE      "0",ITEMNUM
          MATCH     "8",SAVTYPE
          GOTO      PRTZ5000 IF NOT LESS    * stat type ?
.
.---- normal transactions ----
.
          MOVE      FMST,KEY4
          LOAD      KEY4,FMCOUST,FMSR
          PACK      FILENAM,KEY4,CURYEAR         * open file (if possible)
          REP       " 0",FILENAM
          MATCH     FILENAM,TRANFILE
          GOTO      PRTZ0010 IF EQUAL            * file already open ?
.
          MOVE      FILENAM,TRANFILE             * save filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FILENAM             * open current year files
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,FILENAM             * open current year files
          TRAPCLR   IO
          BRANCH    OVRCD,PRTZ8500               * data not found ?
.
PRTZ0010  PACK      KEY32,SKEY,START,SP70
          CALL      RSFMTR2
.
PRTZ1000  CALL      RKFMTR2
          BRANCH    OVRCD,PRTZ9000               * no more records ?
.
          PACK      KEY14,FMTRLEDG,FMTRACCT,SP70
          MATCH     KEY14,KEY32
          GOTO      PRTZ9000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMTRPDAT,END
          GOTO      PRTZ9000 IF LESS             * out of range ?
.
          MOVE      ZERO,DEBIT
          MOVE      ZERO,CREDIT
          CALL      GTYP0000           * get transaction type
          STORE     FMTRAMT,DEBCRED,DEBIT,CREDIT
          ADD       DEBIT,TDEBIT
          ADD       CREDIT,TCREDIT
          ADD       ONE,CLNO
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
          ADD       ONE,ITEMNUM
.
          UNPACK    FMTRPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          UNPACK    SP70,DCREDIT,DDEBIT
          BRANCH    DEBCRED,PRTZ2100,PRTZ2200
.
PRTZ2100  MOVE      DEBIT,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DDEBIT
          LOAD      DDEBIT,FORMFLAG,ZIM15
          GOTO      PRTZ2300
.
PRTZ2200  MOVE      CREDIT,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DCREDIT
          LOAD      DCREDIT,FORMFLAG,ZIM15
.
PRTZ2300  PRINT     *1,ITEMNUM,DOT,*6,CPCDATE,*17,FMTRBAT,*23,FMTRDOCR:
                    *39,FMTRTYPE,*42,DDEBIT,*58,DCREDIT,*74,FMTRDESC;
.
          MOVE      SP70,APMACRD
          MOVE      SP70,APMACN1
.
          MATCH     "00000",FMTRCRED
          GOTO      PRTZ2500 IF EQUAL
          MATCH     SP5,FMTRCRED
          GOTO      PRTZ2500 IF EQUAL
          PACK      KEY5,FMTRCRED,SP70
          CALL      RDAPMA1
.
PRTZ2500  MOVE      APMACN1,KEY20
          PRINT     *105,APMACRD,SP1,KEY20
          GOTO      PRTZ1000                     * get next record
.
.---- stat transactions ----
.
PRTZ5000  MOVE      FMSA,KEY4
          LOAD      KEY4,FMCOUST,FMSZ
          PACK      FILENAM,KEY4,CURYEAR         * open file (if possible)
          REP       " 0",FILENAM
          MATCH     FILENAM,TRANFILE
          GOTO      PRTZ5010 IF EQUAL            * file already open ?
.
          MOVE      FILENAM,TRANFILE             * save filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA1,FILENAM             * open current year files
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA2,FILENAM
          TRAPCLR   IO
          BRANCH    OVRCD,PRTZ8500               * data not found ?
.
PRTZ5010  PACK      KEY30,SKEY,START,SP70
          CALL      RSFMSR2                      * go to start of records
.
PRTZ6000  CALL      RKFMSR2                      * get next record
          BRANCH    OVRCD,PRTZ9000               * no more records ?
          PACK      KEY14,FMSRLEDG,FMSRACCT,SP70
          MATCH     KEY14,KEY32
          GOTO      PRTZ9000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMSRDATE,END
          GOTO      PRTZ9000 IF LESS             * out of range ?
.
          ADD       FMSRUNIT,TDEBIT
          UNPACK    SP70,DCREDIT,DDEBIT
          UNPACK    FMSRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      FMSRUNIT,KAMOUNT
          MOVE      ZERO,FORMAT
          CALL      FORM0000
.
          ADD       ONE,CLNO
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          PRINT     *6,CPCDATE,SP1,FMSRBAT,SP1,FMSRREF,*45,XIM12
.
          GOTO      PRTZ6000                     * get next record
.
.---- file not found ----
.
PRTZ8500  MOVE      SP70,TRANFILE
.
.---- reached EOF ----
.
PRTZ9000  MOVE      TDEBIT,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DDEBIT
          LOAD      DDEBIT,FORMFLAG,ZIM15
.
          MOVE      TCREDIT,KAMOUNT 
          MOVE      ONE,FORMAT
          CALL      FORM0000
          MOVE      XIM15,DCREDIT
          LOAD      DCREDIT,FORMFLAG,ZIM15
          PRINT     *N,*30,"Totals    ",*42,DDEBIT,*58,DCREDIT
.
PRTZ9999  RETURN
.******************************************************************************
.* GETW - read in wp data                        Called by lots               *
.******************************************************************************
GETW0000  COMPARE   ONE,FMACW1ON
          GOTO      GETW9999 IF NOT EQUAL        * notes active ?
.
          PREP      FMSTMP01,FILENAM1            * clear and open temp file
          PACK      KEY17,SKEY,SP70
          CALL      RSFMUW1                      * go to start of records
.
GETW1000  CALL      RKFMUW1                      * get next record
          BRANCH    OVRCD,GETW2000               * no more records ?
          PACK      KEY14,FMUWLEDG,FMUWACCT,SP70
          MATCH     KEY14,KEY17
          GOTO      GETW2000 IF NOT EQUAL        * no more records ?
.
          WRITE     FMSTMP01,SEQ;FMUWLINE
          GOTO      GETW1000
.
GETW2000  WEOF      FMSTMP01,SEQ
          CLOSE     FMSTMP01
.
GETW9999  RETURN
.******************************************************************************
.* NOTE - Execute word processor                 Called by QUES               *
.******************************************************************************
NOTE0000  
.         DISPLAY   *P1:24,"Initialising the Wordprocessor - ":
.                   *BLINKON,*V2LON,"Please Wait",*EL;
.
          PACK      KEY2,SKEY
          CALL      RDFMLA1
          PACK      KEY14,SKEY
          CALL      RDFMAM1
.
.         PREP      FMSTMP02,FILENAM2
.         WRITE     FMSTMP02,SEQ;PRGID,SP10,SP2,CNAME,SP10,SP5,CDATE
.         WRITE     FMSTMP02,SEQ;VERSION,SP10,SP5,PRGNAM
.         WRITE     FMSTMP02,SEQ;SP1
.         WRITE     FMSTMP02,SEQ;"    Ledger               : ":
.                   FMLALEDG,SP10,SP4,FMLADESC
.         WRITE     FMSTMP02,SEQ;"    Account              : ":
.                   FMAMACCT,SP4,FMAMDESC
.         WRITE     FMSTMP02,SEQ;"    Notes"
.         WRITE     FMSTMP02,SEQ;SP1
.
.          OPEN      FMSTMP01,FILENAM1            * go to start of records
.
.NOTE1000  READ      FMSTMP01,SEQ;FMUWLINE        * read in wp data
.          GOTO      NOTE2000 IF OVER
..
.          WRITE     FMSTMP02,SEQ;FMUWLINE
.          GOTO      NOTE1000
.
.NOTE2000  CLEAR     CMDLINE
.          PACK      CMDLINE,WP,FILENAM2,WPDAT
.          EXECUTE   CMDLINE,TASKID               * initiate word processor
.
.          CALL      WEOF0000                     * make sure something in file
.          CLOSE     FMSTMP02
.          CLOSE     FMSTMP01
.
.          CLEAR     CMDLINE                      * copy file to original
.          PACK      CMDLINE,CP,FILENAM2,TXT,FILENAM1,TXT 
.          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    FILENAM1,CMDLINE
          APPEND    TXT,CMDLINE
          RESET     CMDLINE
          MOVE      ONE,WPSTAT
          CLOSE     FMSLMCA1             * To fix W*R error too many open files
          WORD      CMDLINE,999,5,7,76,21,WPSTAT
          OPEN      FMSLMCA1,"fmslmcaf"  * Now Re-open
.
          PACK      KEY17,SKEY,SP70
          PACK      KEY14,SKEY,SP70
          MOVE      ZERO,F3
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTMP01,FILENAM1
          TRAPCLR   IO
          BRANCH    OVRCD,NOTE4000
.
NOTE3000  READ      FMSTMP01,SEQ;FMUWLINE        * save wp data
          GOTO      NOTE4000 IF OVER
.
          ADD       ONE,F3
          PACK      KEY17,SKEY,F3,SP70
          UNPACK    KEY17,FMUWLEDG,FMUWACCT,FMUWLNO
          CALL      DEFMUW1                      * delete old record
          CALL      WRFMUW1                      * write new record
          GOTO      NOTE3000
.                                                * delete excess records
NOTE4000  CALL      RSFMUW1                      * position file pointer
          CALL      RKFMUW1                      * get next record
.
          BRANCH    OVRCD,NOTE9999               * no more records ?
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          MATCH     KEY14,KEY17
          GOTO      NOTE9999 IF NOT EQUAL        * no more records ?
.
          CALL      DEFMUW1                      * delete old record
          GOTO      NOTE4000
.
NOTE9999  RETURN
.**********************************************************************
.  WEOF - Make sure wp file not empty                  Called By NOTE
.**********************************************************************
WEOF0000  CLOSE     FMSTMP02
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTMP02,FILENAM2
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      WEOF9999 IF NOT EQUAL
.
          PREP      FMSTMP02,FILENAM2
          WEOF      FMSTMP02,SEQ
.
WEOF9999  RETURN
.**********************************************************************
. KACC - Get ledger/account                           Called By ML
.        Returns  - SKEY     (ledger/account)
.                   EXIT     (1=nothing entered)
.        Note     - SKEY must not change if EXIT = 1
.**********************************************************************
KACC0000  DISPLAY   *P1:4,"    Ledger/Account       : ",*EF;
.
KACC0100  MOVE      "28",CCOL
          MOVE      "4",CVERT               * set up screen address
          CALL      KLMAFM00                * get ledger
          BRANCH    EXIT,KACC9500,KACC9500  * quit program ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,SLASH;
          MOVE      "31",CCOL
          MOVE      "4",CVERT               * set up screen address
          CALL      KAMAFM00                * get ledger
          BRANCH    EXIT,KACC0100,KACC0100  * enter ledger ?
.
          CALL      RTMA0000                * read data
.
          PACK      SKEY,FMLALEDG,FMAMACCT  * continue
          CALL      GETW0000                * get wp data
          MOVE      FMAMTYPE,SAVTYPE        * save record type
          MOVE      ZERO,EXIT
          MOVE      ZERO,TOTALTYP           * default to normal tot type
          MATCH     "6",FMAMTYPE
          GOTO      KACC9999 IF NOT EQUAL
.
          MOVE      ONE,TOTALTYP
          PACK      KEY14,SKEY,SP70
          CALL      RDFMSA1                 * get account data
          COMPARE   ONE,OVRCD
          GOTO      KACC9999 IF NOT EQUAL   * subjective ?
.
          MOVE      TWO,TOTALTYP
          PACK      KEY14,SKEY,SP70
          CALL      RDFMCC1                 * get account data
          COMPARE   ONE,OVRCD
          GOTO      KACC9999 IF NOT EQUAL   * cost centre ?
          MOVE      ZERO,TOTALTYP           * normal
          GOTO      KACC9999
.
KACC9500  MOVE      ONE,EXIT                * quit
          UNPACK    SKEY,KEY2
          UNPACK    SKEY,KEY14
          CALL      RDFMLA1
          CALL      RDFMAM1
.
KACC9999  RETURN
.**********************************************************************
. PRNT - Print all details                            Called By ML
.        Requires - SAVTYPE  (acct type)
.**********************************************************************
PRNT0000  MATCH     "7",SAVTYPE
          GOTO      PRNT0100 IF NOT EQUAL   * heading type
.
.---- heading ---
.
          CALL      PRTG0000           * print screen G
          GOTO      PRNT9999
.
PRNT0100  MATCH     "7",SAVTYPE
          GOTO      PRNT0200 IF NOT LESS    * posting or total type
.
.---- statistical posting/total ---
.
          CALL      PRTB0000           * print screen B
          CALL      PRTC0000           * print screen C
          CALL      PRTG0000           * print screen G
          GOTO      PRNT9999
.
.---- posting/total ---
.
PRNT0200  CALL      PRTB0000           * print screen B
          CALL      PRTC0000           * print screen C
          CALL      PRTG0000           * print screen G
          BRANCH    FMCOUST,PRNT9999   * in cash/accrual mode ?
          MATCH     "6",SAVTYPE
          GOTO      PRNT9999 IF EQUAL  * total type ?
.
          CALL      PRTK0000           * print screen K
          CALL      PRTL0000           * print screen L
          GOTO      PRNT9999
.
PRNT9999  RETURN
.**********************************************************************
. NEXT -  next screen                                 Called By lots
.**********************************************************************
NEXT0000  MATCH     "6",SAVTYPE
          GOTO      NEXT1000 IF NOT LESS                   * posting rec ?
          BRANCH    FMCOUST,NEXT0500                       * accrual/cash ?
          LOAD      SCRNO,SCRNO,TWO,FOUR,FOUR,FIVE,SIX,SEVEN,ONE
          GOTO      NEXT9999
.
NEXT0500  LOAD      SCRNO,SCRNO,TWO,FOUR,FOUR,FIVE,ONE,ONE,ONE
          GOTO      NEXT9999
.
NEXT1000  MATCH     "8",SAVTYPE
          GOTO      NEXT1500 IF NOT EQUAL                  * post stat type ?
          LOAD      SCRNO,SCRNO,TWO,FIVE,FIVE,FIVE,ONE,ONE,ONE
          GOTO      NEXT9999
.
NEXT1500  MATCH     "9",SAVTYPE
          GOTO      NEXT2000 IF NOT EQUAL                  * tot stat type ?
          LOAD      SCRNO,SCRNO,TWO,THREE,FIVE,FIVE,ONE,ONE,ONE
          GOTO      NEXT9999
.
NEXT2000  LOAD      SCRNO,SCRNO,TWO,THREE,FOUR,FIVE,ONE,ONE,ONE  * total rec
.
NEXT9999  RETURN
.**********************************************************************
. LAST -  last screen                                 Called By lots
.**********************************************************************
LAST0000  MATCH     "6",SAVTYPE
          GOTO      LAST1000 IF NOT LESS                   * posting rec ?
          BRANCH    FMCOUST,LAST0500                       * accrual/cash ?
          LOAD      SCRNO,SCRNO,SEVEN,ONE,TWO,TWO,FOUR,FIVE,SIX
          GOTO      NEXT9999
.
LAST0500  LOAD      SCRNO,SCRNO,FIVE,ONE,TWO,TWO,FOUR,FOUR,FOUR
          GOTO      NEXT9999
.
LAST1000  MATCH     "8",SAVTYPE
          GOTO      LAST1500 IF NOT EQUAL                  * post stat type ?
          LOAD      SCRNO,SCRNO,FIVE,ONE,TWO,TWO,TWO,TWO,TWO
          GOTO      LAST9999
.
LAST1500  MATCH     "9",SAVTYPE
          GOTO      LAST2000 IF NOT EQUAL                  * total stat type ?
          LOAD      SCRNO,SCRNO,FIVE,ONE,TWO,THREE,THREE,THREE,THREE
          GOTO      LAST9999
.
LAST2000  LOAD      SCRNO,SCRNO,FIVE,ONE,TWO,THREE,FOUR,FOUR,FOUR * total rec 
.
LAST9999  RETURN
.******************************************************************************
.* SCRP - Display Parameters Screen              Called by ML0000             *
.*        Returns - EXIT     (1=no current ledgers)                           *
.******************************************************************************
SCRP0000  UNPACK    SP70,FMLADESC
          PACK      KEY2,FMLALEDG,SP70
          CALL      RDFMLA1            * get ledger
.
          PACK      KEY6,FMLALEDG,CURYEAR
          CALL      RDFMLC1
          CALL      RDXTMA             * read period details
.
          MOVE      "12",MAXPERDS      * calculate max no. of periods
          ADD       FMLAPERS,MAXPERDS
.
          MOVE      PERIODNO,FMLAPER
          REP       " 0",FMLAPER
.
          MOVE      SP70,PERDDESC
          MOVE      PERIODNO,KPERIOD
          LOAD      PERDDESC,KPERIOD,FMLC01DE,FMLC02DE,FMLC03DE:
                    FMLC04DE,FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                    FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
          MOVE      ZERO,F1
          MOVE      FMLAPTY,F1
          MOVE      SP70,TYPDESC
          MOVE      TYPDESC0,TYPDESC
          LOAD      TYPDESC,F1,TYPDESC1,TYPDESC2
.
          MOVE      ZERO,F1
          MOVE      FMLAABP,F1
          MOVE      SP70,ABPDESC
          MOVE      ABPDESC0,ABPDESC
          LOAD      ABPDESC,F1,ABPDESC1
.
          DISPLAY   *P1:3,*EF:
                    *P1:4,"    Ledger               :":
                    *P1:6,*V2LON," 1",*HOFF,". Current Year         :":
                    *P1:7,*V2LON," 2",*HOFF,". Current Period       :":
                    *P1:8,*V2LON," 3",*HOFF,". Projection Type      :":
                    *P1:9,*V2LON," 4",*HOFF,". Anal by Period Format:":
                    *P1:10,*V2LON,*ULON,"Item",*P7:10,"Year";
          COMPARE   ONE,FMCOUST
          GOTO      SCRP1100 IF EQUAL  * accrual/cash type
.
          DISPLAY   *V2LON,*ULON,*P13:10,"Accrual Budget";
          GOTO      SCRP1200
.
SCRP1100  DISPLAY   *V2LON,*ULON,*P13:10,"Cash Budget";
.
SCRP1200  DISPLAY   *P28:4,*HOFF,*V2LON,FMLALEDG,SP4,*HOFF,FMLADESC:
                    *P28:6,*V2LON,CURYEAR:
                    *P28:7,*V2LON,FMLAPER,SP4,*HOFF,PERDDESC:
                    *P28:8,*V2LON,FMLAPTY,SP5,*HOFF,TYPDESC:
                    *P28:9,*V2LON,FMLAABP,SP5,*HOFF,ABPDESC
.
SCRP9999  RETURN
.******************************************************************************
.* SELP - Enter parameters                       Called by ML0000             *
.******************************************************************************
SELP0000  MOVE      "1",PAGENO         * start at first page
          CALL      SCRP0000           * display screen
          CALL      DATP0000           * display budget data
.
SELP0100  CALL      MQSP0000           * get desired action
          COMPARE   ZERO,OPTIONP
          GOTO      SELP9000 IF EQUAL  * exit
.
          MOVE      "28",CCOL          * get screen address
          MOVE      "5",CVERT
          ADD       OPTIONP,CVERT  
.
          BRANCH    OPTIONP,SELP1200,SELP1300,SELP1400,SELP1500
.
          ADD       "1",CVERT
          MOVE      OPTIONP,SAVITEM
          MOVE      SP70,SKEY1
          LOAD      SKEY1,OPTIONP,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
.
          PACK      KEY6,SKEY1,SP70
          CALL      RDXTMA 
          COMPARE   ONE,OVRCD
          GOTO      SELP5000 IF NOT EQUAL
          BEEP                         * illegal option
          GOTO      SELP0100
.
.
.---- option 2 ----
.
SELP1200  CALL      KLMCFM00           * get financial year
          BRANCH    EXIT,SELP1200,SELP9500
          MOVE      FMLCYEAR,CURYEAR
          DISPLAY   *PCCOL:CVERT,*V2LON,CURYEAR;
          GOTO      SELP0100
.
.---- option 3 ----
.
SELP1300  KEYIN     *PCCOL:CVERT,"__",*EL:
                    *PCCOL:CVERT,*V2LON,PERIODNO,*EL;
          MOVE      PERIODNO,FMLAPER
          REP       " 0",FMLAPER
          COMPARE   "1",PERIODNO
          GOTO      SELP1390 IF LESS
.
          COMPARE   PERIODNO,MAXPERDS
          GOTO      SELP1390 IF LESS
.
          PACK      KEY6,FMLALEDG,CURYEAR,SP70
          CALL      RDFMLC1
          CALL      RDXTMA             * read period details
          LOAD      PERDDESC,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE:
                    FMLC04DE,FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                    FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLAPER,*HOFF,SP4,PERDDESC;
          GOTO      SELP0100
.
SELP1390  DISPLAY   *P1:24,*B,*EL:
                    "Period Must Be Between 1 and ",MAXPERDS," - ";
          CALL      HITENTER
          GOTO      SELP1300
.
.---- option 4 ----
.
SELP1400  DISPLAY   *P1:24,*EL,*V2LON,"0",*HOFF," = ",TYPDESC0:
                    ", ",*V2LON,"1",*HOFF," = ",TYPDESC1:
                    ", ",*V2LON,"2",*HOFF," = ",TYPDESC2;
.
SELP1450  KEYIN     *PCCOL:CVERT,"_",*EL:
                    *PCCOL:CVERT,*V2LON,F1; * get projection type
          ADD       ONE,F1
          MOVE      SP70,TYPDESC
          LOAD      TYPDESC,F1,TYPDESC0,TYPDESC1,TYPDESC2
          MATCH     SP70,TYPDESC
          GOTO      SELP1490 IF NOT EQUAL
          BEEP
          GOTO      SELP1450
.
SELP1490  SUB       ONE,F1
          MOVE      F1,FMLAPTY
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLAPTY,*HOFF,SP5,TYPDESC:
                    *P1:24,*EL;
          GOTO      SELP0100
.
.---- option 5 ----
.
SELP1500  DISPLAY   *P1:24,*EL,*V2LON,"0",*HOFF," = ",ABPDESC0:
                    ", ",*V2LON,"1",*HOFF," = ",ABPDESC1;
.
SELP1550  KEYIN     *PCCOL:CVERT,"_",*EL:
                    *PCCOL:CVERT,*V2LON,F1;      * get format type
          ADD       ONE,F1
          MOVE      SP70,ABPDESC
          LOAD      ABPDESC,F1,ABPDESC0,ABPDESC1
          MATCH     SP70,ABPDESC
          GOTO      SELP1590 IF NOT EQUAL
          BEEP
          GOTO      SELP1550
.
SELP1590  SUB       ONE,F1
          MOVE      F1,FMLAABP
          DISPLAY   *PCCOL:CVERT,*V2LON,F1,*HOFF,SP5,ABPDESC:
                    *P1:24,*EL;
          GOTO      SELP0100
.
.---- budget data ----
.
SELP5000  DISPLAY   *P1:CVERT,*V2LON,SAVITEM,DOT,*P7:CVERT,FMLCYEAR,*EL;
          MOVE      "13",CCOL
          CALL      KBTYFM00           * get budget code
          BRANCH    EXIT,SELP5100,SELP9500
.
          MOVE      FMBTCODE,FMLCBUDG
.
SELP5100  PACK      KEY4,FMLCBUDG,SP70
          MOVE      SP70,FMBTDESC
          MOVE      FMLCYEAR,FMBTYEAR
          CALL      RDFMBT1            * get budget data
          DISPLAY   *P1:CVERT,*V2LON,SAVITEM,*HOFF,DOT:
                    *P7:CVERT,FMLCYEAR,SP2,FMLCBUDG,SP1,FMBTDESC;
          MATCH     FMBTYEAR,FMLCYEAR
          GOTO      SELP6000 IF EQUAL
.
          DISPLAY   *P1:24,*EL,*B:
                    "Budget Year Must Be Identical To Financial Year - ";
          CALL      HITENTER
          GOTO      SELP5000
.
SELP6000  MOVE      FMLCBUDG,FMLCCBUD
          CALL      UPXTMA             * update data
          GOTO      SELP0100
.
SELP9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELP9999
.
SELP9500  MOVE      ONE,EXIT           * exit
.
SELP9999  RETURN
.******************************************************************************
.* DATP - display Screen A data                  Called By MQSP,SELP          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMP (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*                  MORE     (1=more data)                                    *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATP0000  PACK      ST1,SP70,SP10
          PACK      ST2,SP70,SP10
          PACK      ST3,SP70,SP10
          PACK      ST4,SP70,SP10
          PACK      ST5,SP70,SP10
          PACK      ST6,SP70,SP10
          PACK      ST7,SP70,SP10
          PACK      ST8,SP70,SP10
          PACK      ST9,SP70,SP10
          PACK      ST10,SP70,SP10
          PACK      ST11,SP70,SP10
          PACK      ST12,SP70,SP10
          PACK      ST13,SP70,SP10
          PACK      ST14,SP70,SP10
          PACK      ST15,SP70,SP10
          PACK      ST16,SP70,SP10
          PACK      ST17,SP70,SP10
          PACK      KEY6,FMLALEDG,SP70
          CALL      RSXTMA                       * go to start of records
          MOVE      "10",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "4",ITEMNUM                  * start at item 1
          DISPLAY   *P1:11,*EF;                  * clear data area on screen
.
DATP1000  CALL      RKXTMA                       * get next record
          BRANCH    OVRCD,DATP9000               * no more records ?
          MATCH     FMLALEDG,FMLCLEDG
          GOTO      DATP9000 IF NOT EQUAL        * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMP,ITEMNUM
          GOTO      DATP2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATP2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATP1000 IF LESS             * not up to current page ?
          GOTO      DATP9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      SP70,FMBTDESC
          PACK      KEY4,FMLCBUDG,SP70
          LOAD      KEY4,FMCOUST,FMLCCBUD
          CALL      RDFMBT1                      * get budget description
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P7:LINENO,FMLCYEAR,*P13:LINENO,KEY4,SP1,FMBTDESC;
.
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70  * save key
          STORE     KEY6,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
.
          GOTO      DATP1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATP9000  MOVE      ZERO,MORE                    * no more data
          GOTO      DATP9999
.
.---- reached EOP before EOF ----
.
DATP9500  MOVE      ONE,MORE                      * more data
.
DATP9999  RETURN
.******************************************************************************
.* MQSP - Main question for Screen P             Called By SELP0000           *
.******************************************************************************
MQSP0000  DISPLAY   *P1:24,"Select Item, e(",*V2LON,"X",*HOFF,")it";
          MOVE      "19",CCOL
          COMPARE   ONE,MORE
          GOTO      MQSP1000 IF NOT EQUAL
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
.
MQSP1000  COMPARE   PAGENO,ONE
          GOTO      MQSP2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"L",*HOFF,")ast Page";
          ADD       "13",CCOL
.
MQSP2000  DISPLAY   " :",*EL;
          ADD       "4",CCOL
.
MQSP3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
          COMPARE   ONE,MORE
          GOTO      MQSP4000 IF NOT EQUAL
.
          MATCH     " N",XIM2
          GOTO      MQSP4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATP0000
          GOTO      MQSP0000
.
MQSP4000  COMPARE   PAGENO,ONE
          GOTO      MQSP5000 IF EQUAL
.
          MATCH     " L",XIM2
          GOTO      MQSP5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATP0000
          GOTO      MQSP0000
.
MQSP5000  MOVE      ZERO,OPTIONP
          MATCH     " X",XIM2
          GOTO      MQSP9999 IF EQUAL
.
          MOVE      XIM2,OPTIONP
          COMPARE   OPTIONP,ZERO
          GOTO      MQSP9999 IF LESS   * valid number input ?
          BEEP                         * illegal option
          GOTO      MQSP3000           * get another option
.
MQSP9999  RETURN
.**********************************************************************
.  RTMA - read in DATP for temp file A           Called by ML
.**********************************************************************
RTMA0000  
          MOVE      SP70,FMLCLEDG
          PACK      KEY6,FMLALEDG,SP70
          CALL      RSXTMA                  * see if ledger already exists
          CALL      RKXTMA 
          MATCH     FMLALEDG,FMLCLEDG
          GOTO      RTMA9999 IF EQUAL
.
          PACK      KEY6,FMLALEDG,SP70
          CALL      RSFMLC1                 * go to start of records
.
RTMA1000  CALL      RKFMLC1                 * get next record
          BRANCH    OVRCD,RTMA9999          * no more records ?
          MATCH     FMLALEDG,FMLCLEDG
          GOTO      RTMA9999 IF NOT EQUAL   * no more valid records ?
.
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          CALL      WRXTMA                  * write record
          GOTO      RTMA1000
.
RTMA9999  RETURN
.**********************************************************************
. temp file routines
.**********************************************************************
RSXTMA    RESET     KEY6
          READ      FMSTMP0A,KEY6;;
          RETURN
.
RAXTMA    RESET     KEY6
          MOVE      ZERO,OVRCD
          READ      FMSTMP0A,KEY6;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDXTMA    RESET     KEY6
          MOVE      ZERO,OVRCD
          READ      FMSTMP0A,KEY6;FMLCLEDG,FMLCYEAR,FMLCBUDG,FMLCCBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
RKXTMA    MOVE      ZERO,OVRCD
          READKS    FMSTMP0A;FMLCLEDG,FMLCYEAR,FMLCBUDG,FMLCCBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
RPXTMA    MOVE      ZERO,OVRCD
          READKP    FMSTMP0A;FMLCLEDG,FMLCYEAR,FMLCBUDG,FMLCCBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
UPXTMA    UPDATE    FMSTMP0A;FMLCLEDG,FMLCYEAR,FMLCBUDG,FMLCCBUD
          RETURN
.
WRXTMA    RESET     KEY6
          WRITE     FMSTMP0A,KEY6;FMLCLEDG,FMLCYEAR,FMLCBUDG,FMLCCBUD,SP70
          RETURN
.
DEXTMA    RESET     KEY6
          DELETE    FMSTMP0A,KEY6
          RETURN
.
.******************************************************************************
.* SCRG - Display Screen G                       Called by SELG               *
.******************************************************************************
SCRG0000  DISPLAY   *P60:3,*V2LON,"- Static Details",*EL;
          MATCH     "6",FMAMTYPE
          GOTO      SCRG0100 IF LESS   * posting account
.
          MATCH     "8",FMAMTYPE
          GOTO      SCRG0200 IF NOT LESS   * stat account
.
.---- total ----
.
          DISPLAY   *P1:4,*EF,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,*P44:4,FMLADESC:
                    *P1:5,"    Account              : ":
                    *V2LON,FMAMACCT,*HOFF:
                    *P5:7,"Description          : ":
                    *P5:8,"Account Type         : ":
                    *P5:9,"Level                : ";
          MOVE      "9",LINENO                  * starting line number
          GOTO      SCRG1000
.
.---- posting ----
.
SCRG0100  DISPLAY   *P1:4,*EF,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,*P44:4,FMLADESC:
                    *P1:5,"    Account              : ":
                    *V2LON,FMAMACCT,*HOFF:
                    *P5:7,"Description          : ":
                    *P5:8,"Account Type         : ":
                    *P5:9,"Status               : ":
                   *P5:10,"Asset Reg. Ind.(Y/N) : ";
          MOVE      "10",LINENO                  * starting line number
          GOTO      SCRG1000
.
...                *P5:10,"Bank Account   (Y/N) : ":
...                       *P32:10,"Cheque Account Number : ":
...                *P5:11,"Prsc. Pay Tax  (Y/N) : ":
...                *P5:12,"Oncost         (Y/N) : ":
...                       *P32:12,"Oncost Code : ":
.
.---- stat account ----
.
SCRG0200  MOVE      NO,YESNO
          LOAD      YESNO,FMAMAYTD,YES
          DISPLAY   *P1:4,*EF,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,*P44:4,FMLADESC:
                    *P1:5,"    Account              : ":
                    *V2LON,FMAMACCT,*HOFF:
                    *P5:7,"Description          : ",*V2LON,FMAMDESC,*HOFF:
                    *P5:8,"Decimal Places       : ",*V2LON,FMAMDPLA,*HOFF:
                    *P5:9,"Statistical Units    : ",*V2LON,FMAMUNIT,*HOFF:
                   *P5:10,"Average Ytd    (Y/N) : ",*V2LON,YESNO,*HOFF:
                   *P5:11,"Posting        (Y/N) : ";
          MATCH     "9",FMAMTYPE
          GOTO      SCRG0210 IF EQUAL
          DISPLAY   *V2LON,YES;
          GOTO      SCRG9999
.
SCRG0210  
.
          MOVE      SP70,FMLVDESC
          PACK      KEY3,FMAMCLEV,SP70            * get level code description
          CALL      RDFMLV1
.
          DISPLAY   *V2LON,NO,*HOFF:
                    *P5:13,"Constant Multiplier  : ",*V2LON,FMAMMULT,*HOFF:
                    *P5:14,"Constant Divisor     : ",*V2LON,FMAMDIV,*HOFF:
                    *P5:15,"Account Level        : ":
                    *V2LON,FMAMCLEV,*HOFF,*P44:15,FMLVDESC;
          GOTO      SCRG9999
.
SCRG1000  MOVE      " 5",COLNO                   * fix collumn number
          COMPARE   ONE,FMACR1ON
          GOTO      SCRG1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACR1NA," : ";
.
SCRG1100  COMPARE   ONE,FMACR2ON
          GOTO      SCRG1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACR2NA," : ";
.
SCRG1200  COMPARE   ONE,FMACR3ON
          GOTO      SCRG1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACR3NA," : ";
.
SCRG1300  COMPARE   ONE,FMACR4ON
          GOTO      SCRG2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACR4NA," : ";
.
SCRG2000  COMPARE   ONE,FMACD1ON
          GOTO      SCRG2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACD1NA," : ";
.
SCRG2100  COMPARE   ONE,FMACD2ON
          GOTO      SCRG2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACD2NA," : ";
.
SCRG2200  COMPARE   ONE,FMACD3ON
          GOTO      SCRG2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACD3NA," : ";
.
SCRG2300  COMPARE   ONE,FMACD4ON
          GOTO      SCRG3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACD4NA," : ";
.
SCRG3000  COMPARE   ONE,FMACA1ON
          GOTO      SCRG3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACA1NA," : ";
.
SCRG3100  COMPARE   ONE,FMACA2ON
          GOTO      SCRG3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACA2NA," : ";
.
SCRG3200  COMPARE   ONE,FMACA3ON
          GOTO      SCRG3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACA3NA," : ";
.
SCRG3300  COMPARE   ONE,FMACA4ON
          GOTO      SCRG4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,FMACA4NA," : ";
.
SCRG4000  COMPARE   ONE,FMACC1ON
          GOTO      SCRG4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC1NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,FMCDDESC," : ";
.
SCRG4100  COMPARE   ONE,FMACC2ON
          GOTO      SCRG4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC2NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,FMCDDESC," : ";
.
SCRG4200  COMPARE   ONE,FMACC3ON
          GOTO      SCRG4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC3NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,FMCDDESC," : ";
.
SCRG4300  COMPARE   ONE,FMACC4ON
          GOTO      SCRG5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC4NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,FMCDDESC," : ";
.
SCRG5000  CALL      DISG0000           * display screen G data
.
SCRG9999  RETURN
.**********************************************************************
. PROC   ACCDESC  - get account desc                  Called By DISA
.        Requires - KEY14       (key)
.        Returns  - DACCOUNT    (description)
.**********************************************************************
          DEFPROC   ACCDESC 
          INC       FMSAMAFD/INC
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          MOVE      NOADD,FMAMDESC
          CALL      RDFMAM1                      * get account description
          MOVE      FMAMDESC,DACCOUNT
          GOTO      BOTTOM
          INC       FMSAMAIO/INC
          INC       IBAOVRIO/INC
BOTTOM
          ENDPROC
.******************************************************************************
.* DISG - Display Screen G                       Called by SELG               *
.******************************************************************************
DISG0000  MOVE      ZERO,F1
          MOVE      FMAMTYPE,F1
          MOVE      SP70,ACCTYPE
          LOAD      ACCTYPE,F1,ACCTYPE1,ACCTYPE2,ACCTYPE3:  * get acc type
                               ACCTYPE4,ACCTYPE5,ACCTYPE6,ACCTYPE7
          COMPARE   "6",F1
          GOTO      DISG0600 IF LESS   * posting record ?
.
          PACK      KEY3,FMAMCLEV,SP70
          MOVE      SP70,FMLVDESC
          CALL      RDFMLV1                      * get level description
.
          DISPLAY   *P28:7,*V2LON,FMAMDESC:
                    *P28:8,ACCTYPE:
                    *P28:9,FMAMCLEV,*HOFF,*P44:9,FMLVDESC;
          MOVE      "9",LINENO                  * starting line number
          GOTO      DISG1000
.
.---- posting account ----
.
DISG0600  MOVE      STATUS0,STATUS
          LOAD      STATUS,FMAMSTAT,STATUS1,STATUS2   * get status
          MOVE      NO,YESNO
          LOAD      YESNO,FMAMASST,YES           * get yes/no
          DISPLAY   *P28:7,*V2LON,FMAMDESC:
                    *P28:8,ACCTYPE:
                    *P28:9,STATUS:
                    *P28:10,YESNO;
          MOVE      "10",LINENO                  * starting line number
          GOTO      DISG1000
.
...       MOVE      NO,YESNO
...       LOAD      YESNO,FMAMCTRL,YES           * get yes/no
...                 *P28:10,YESNO:
...                 *P56:10,FMAMCHEQ;
...       MOVE      NO,YESNO
...       LOAD      YESNO,FMAMPPT,YES            * get yes/no
...       DISPLAY   *P28:11,*V2LON,YESNO;
...
...       MOVE      NO,YESNO
...       LOAD      YESNO,FMAMONC,YES            * get yes/no
...       DISPLAY   *P28:12,*V2LON,YESNO;
...       COMPARE   ONE,FMAMONC
...       GOTO      DISG0700 IF NOT EQUAL
...       MOVE      SP70,FMONDESC
...       PACK      KEY3,FMAMONCC,SP70
...       CALL      RDFMON1
...       DISPLAY   *P46:12,*V2LON,FMAMONCC,*HOFF:
...                 SP1,FMONDESC,SP1,FMONPERC," %";
.
DISG1000  MOVE      "28",COLNO                   * fix collumn number
          COMPARE   ONE,FMACR1ON
          GOTO      DISG1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF1;
.
DISG1100  COMPARE   ONE,FMACR2ON
          GOTO      DISG1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF2;
.
DISG1200  COMPARE   ONE,FMACR3ON
          GOTO      DISG1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF3;
.
DISG1300  COMPARE   ONE,FMACR4ON
          GOTO      DISG2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF4;
.
DISG2000  COMPARE   ONE,FMACD1ON
          GOTO      DISG2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT1,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISG2100  COMPARE   ONE,FMACD2ON
          GOTO      DISG2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT2,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISG2200  COMPARE   ONE,FMACD3ON
          GOTO      DISG2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT3,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISG2300  COMPARE   ONE,FMACD4ON
          GOTO      DISG3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT4,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISG3000  COMPARE   ONE,FMACA1ON
          GOTO      DISG3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "1",AMOUNTNO
          CALL      DAMT0000
.
DISG3100  COMPARE   ONE,FMACA2ON
          GOTO      DISG3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number[
          MOVE      "2",AMOUNTNO
          CALL      DAMT0000
.
DISG3200  COMPARE   ONE,FMACA3ON
          GOTO      DISG3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "3",AMOUNTNO
          CALL      DAMT0000
.
DISG3300  COMPARE   ONE,FMACA4ON
          GOTO      DISG4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "4",AMOUNTNO
          CALL      DAMT0000
.
DISG4000  COMPARE   ONE,FMACC1ON
          GOTO      DISG4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD1
          GOTO      DISG4100 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC1NA,FMAMCOD1,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD1,*HOFF,*P44:LINENO,FMCDDESC;
.
DISG4100  COMPARE   ONE,FMACC2ON
          GOTO      DISG4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD2
          GOTO      DISG4200 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC2NA,FMAMCOD2,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD2,*HOFF,*P44:LINENO,FMCDDESC;
.
DISG4200  COMPARE   ONE,FMACC3ON
          GOTO      DISG4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD3
          GOTO      DISG4300 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC3NA,FMAMCOD3,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD3,*HOFF,*P44:LINENO,FMCDDESC;
.
DISG4300  COMPARE   ONE,FMACC4ON
          GOTO      DISG5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD4
          GOTO      DISG5000 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC4NA,FMAMCOD4,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD4,*HOFF,*P44:LINENO,FMCDDESC;
.
DISG5000  
.
DISG9999  RETURN
.******************************************************************************
.* PRTG - Print Screen G                         Called by SELG               *
.******************************************************************************
PRTG0000  MOVE      "5",REPNO
          CALL      HEAD0000                     * print header
.
          MOVE      ZERO,F1
          MOVE      FMAMTYPE,F1
          MOVE      SP70,ACCTYPE
          LOAD      ACCTYPE,F1,ACCTYPE1,ACCTYPE2,ACCTYPE3:  * get acc type
                               ACCTYPE4,ACCTYPE5,ACCTYPE6,ACCTYPE7
          COMPARE   "6",F1
          GOTO      PRTG0600 IF LESS   * posting record ?
.
          COMPARE   "8",F1
          GOTO      PRTG0800 IF NOT LESS   * stat record ?
.
          PACK      KEY3,FMAMCLEV,SP70
          MOVE      SP70,FMLVDESC
          CALL      RDFMLV1                      * get level description
.
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          PROC      ACCDESC                      * get account description
.
          PRINT     *N,"    Ledger               : ":
                    FMLALEDG,*44,FMLADESC,*N:
                    *1,"    Account              : ",FMAMACCT,*N,*N:
                    *5,"Description          : ",*28,FMAMDESC,*N:
                    *5,"Account Type         : ",*28,ACCTYPE,*N:
                    *5,"Level                : ":
                    *28,FMAMCLEV,*44,FMLVDESC,*N:
                    *5,"Add to Ledg./Account : ":
                    *28,FMTCTLED,SLASH,FMTCTACC,*44,DACCOUNT
          GOTO      PRTG1000
.
.---- posting account ----
.
PRTG0600  MOVE      STATUS0,STATUS
          LOAD      STATUS,FMAMSTAT,STATUS1,STATUS2   * get status
          MOVE      NO,YESNO
          LOAD      YESNO,FMAMASST,YES           * get yes/no
          PRINT     *N,"    Ledger               : ":
                    FMLALEDG,*44,FMLADESC,*N:
                    *1,"    Account              : ",FMAMACCT,*N,*N:
                    *5,"Description          : ",FMAMDESC,*N:
                    *5,"Account Type         : ",ACCTYPE,*N:
                    *5,"Status               : ",STATUS,*N:
                    *5,"Asset Reg. Ind.(Y/N) : ",YESNO
          GOTO      PRTG1000
.
...       MOVE      NO,YESNO
...       LOAD      YESNO,FMAMCTRL,YES           * get yes/no
...                 *5,"Bank Account   (Y/N) : ",YESNO:
...                 *32,"Cheque Account Number : ",FMAMCHEQ
...
...       MOVE      NO,YESNO
...       LOAD      YESNO,FMAMPPT,YES            * get yes/no
...       PRINT     *5,"Prsc. Pay Tax  (Y/N) : ",YESNO
...
...       MOVE      NO,YESNO
...       LOAD      YESNO,FMAMONC,YES            * get yes/no
...       PRINT     *5,"Oncost         (Y/N) : ",YESNO:
...                 *32,"Oncost Code : ";
...       COMPARE   ONE,FMAMONC
...       GOTO      PRTG0700 IF NOT EQUAL
...       MOVE      SP70,FMONDESC
...       PACK      KEY3,FMAMONCC,SP70
...       CALL      RDFMON1
...       PRINT     *46,FMAMONCC:
...                 SP1,FMONDESC,SP1,FMONPERC," %";
.
.
.---- stat account ----
.
PRTG0800  MOVE      NO,YESNO
          LOAD      YESNO,FMAMAYTD,YES
          PRINT     *N,"    Ledger               : ",FMLALEDG,*44,FMLADESC,*N:
                    *1,"    Account              : ",FMAMACCT,*N,*N:
                    *5,"Description          : ",FMAMDESC,*N:
                    *5,"Decimal Places       : ",FMAMDPLA,*N:
                    *5,"Statistical Units    : ",FMAMUNIT,*N:
                    *5,"Average Ytd    (Y/N) : ",YESNO,*N:
                    *5,"Posting        (Y/N) : ";
          MATCH     "9",FMAMTYPE
          GOTO      PRTG0810 IF EQUAL
          PRINT     YES
          GOTO      PRTG1000
.
PRTG0810  
          MOVE      SP70,FMLVDESC
          PACK      KEY3,FMAMCLEV,SP70            * get level code description
          CALL      RDFMLV1
.
          PRINT     NO,*N:
                    *5,"Constant Multiplier  : ",FMAMMULT,*N:
                    *5,"Constant Divisor     : ",FMAMDIV,*N:
                    *5,"Account Level        : ",FMAMCLEV,*44,FMLVDESC
          GOTO      PRTG9999
.
PRTG1000  COMPARE   ONE,FMACR1ON
          GOTO      PRTG1100 IF NOT EQUAL        * is this field activated ?
          PRINT     *5,FMACR1NA,*26,": ",FMAMREF1
.
PRTG1100  COMPARE   ONE,FMACR2ON
          GOTO      PRTG1200 IF NOT EQUAL        * is this field activated ?
          PRINT     *5,FMACR2NA,*26,": ",FMAMREF2
.
PRTG1200  COMPARE   ONE,FMACR3ON
          GOTO      PRTG1300 IF NOT EQUAL        * is this field activated ?
          PRINT     *5,FMACR3NA,*26,": ",FMAMREF3
.
PRTG1300  COMPARE   ONE,FMACR4ON
          GOTO      PRTG2000 IF NOT EQUAL        * is this field activated ?
          PRINT     *5,FMACR4NA,*26,": ",FMAMREF4
.
PRTG2000  COMPARE   ONE,FMACD1ON
          GOTO      PRTG2100 IF NOT EQUAL        * is this field activated ?
          UNPACK    FMAMDAT1,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *5,FMACD1NA,*26,": ",CPCDATE
.
PRTG2100  COMPARE   ONE,FMACD2ON
          GOTO      PRTG2200 IF NOT EQUAL        * is this field activated ?
          UNPACK    FMAMDAT2,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *5,FMACD2NA,*26,": ",CPCDATE
.
PRTG2200  COMPARE   ONE,FMACD3ON
          GOTO      PRTG2300 IF NOT EQUAL        * is this field activated ?
          UNPACK    FMAMDAT3,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *5,FMACD3NA,*26,": ",CPCDATE
.
PRTG2300  COMPARE   ONE,FMACD4ON
          GOTO      PRTG3000 IF NOT EQUAL        * is this field activated ?
          UNPACK    FMAMDAT4,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *5,FMACD4NA,*26,": ",CPCDATE
.
PRTG3000  COMPARE   ONE,FMACA1ON
          GOTO      PRTG3100 IF NOT EQUAL        * is this field activated ?
          PRINT     *5,FMACA1NA," : ";
          MOVE      "1",AMOUNTNO
          CALL      PAMT0000
.
PRTG3100  COMPARE   ONE,FMACA2ON
          GOTO      PRTG3200 IF NOT EQUAL        * is this field activated ?
          PRINT     *5,FMACA2NA," : ";
          MOVE      "2",AMOUNTNO
          CALL      PAMT0000
.
PRTG3200  COMPARE   ONE,FMACA3ON
          GOTO      PRTG3300 IF NOT EQUAL        * is this field activated ?
          PRINT     *5,FMACA3NA," : ";
          MOVE      "3",AMOUNTNO
          CALL      PAMT0000
.
PRTG3300  COMPARE   ONE,FMACA4ON
          GOTO      PRTG4000 IF NOT EQUAL        * is this field activated ?
          PRINT     *5,FMACA4NA," : ";
          MOVE      "4",AMOUNTNO
          CALL      PAMT0000
.
PRTG4000  COMPARE   ONE,FMACC1ON
          GOTO      PRTG4100 IF NOT EQUAL        * is this field activated ?
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC1NA,SP70
          CALL      RDFMCD1
          PRINT     *5,FMCDDESC," : ";
          MATCH     SP70,FMAMCOD1
          GOTO      PRTG4100 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC1NA,FMAMCOD1,SP70
          CALL      RDFMCD1
          PRINT     *26,FMAMCOD1,*44,FMCDDESC;
.
PRTG4100  COMPARE   ONE,FMACC2ON
          GOTO      PRTG4200 IF NOT EQUAL        * is this field activated ?
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC2NA,SP70
          CALL      RDFMCD1
          PRINT     *N,*5,FMCDDESC," : ";
          MATCH     SP70,FMAMCOD2
          GOTO      PRTG4200 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC2NA,FMAMCOD2,SP70
          CALL      RDFMCD1
          PRINT     *26,FMAMCOD2,*44,FMCDDESC;
.
PRTG4200  COMPARE   ONE,FMACC3ON
          GOTO      PRTG4300 IF NOT EQUAL        * is this field activated ?
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC3NA,SP70
          CALL      RDFMCD1
          PRINT     *N,*5,FMCDDESC," : ";
          MATCH     SP70,FMAMCOD3
          GOTO      PRTG4300 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC3NA,FMAMCOD3,SP70
          CALL      RDFMCD1
          PRINT     *26,FMAMCOD3,*44,FMCDDESC;
.
PRTG4300  COMPARE   ONE,FMACC4ON
          GOTO      PRTG5000 IF NOT EQUAL        * is this field activated ?
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC4NA,SP70
          CALL      RDFMCD1
          PRINT     *N,*5,FMCDDESC," : ";
          MATCH     SP70,FMAMCOD4
          GOTO      PRTG5000 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC4NA,FMAMCOD4,SP70
          CALL      RDFMCD1
          PRINT     *26,FMAMCOD4,*44,FMCDDESC;
.
PRTG5000  
.
PRTG9999  RETURN
.**********************************************************************
. SELG - Perform screen G                             Called By ML
.        Requires - SKEY     (current ledger/account)
.        Returns  - OPTIONC  (option selected)
.                   EXIT     (1=quit)
.**********************************************************************
SELG0000  PACK      KEY14,SKEY
          CALL      RDFMAM1            * get account data
          BRANCH    OVRCD,SELG9300     * account data found ?
.
          MOVE      FMAMTYPE,SAVTYPE   * save account type
          MOVE      ZERO,DECPLACE
          MOVE      FMAMDPLA,DECPLACE  * get no. of decimal places
          MOVE      ZERO,AVYTD
          MATCH     "7",FMAMTYPE
          GOTO      SELG0050 IF LESS
          MOVE      FMAMAYTD,AVYTD     * save ytd type
.
SELG0050  CALL      SCRG0000           * display screen G
.
SELG0100  CALL      MQSG0000           * get option
.
.---- print ----
.
SELG1100  COMPARE   "-1",OPTIONC
          GOTO      SELG1200 IF NOT EQUAL
          CALL      PRTG0000           * print screen
          GOTO      SELG0000           * go back to start of screen
.
.---- wp ----
.
SELG1200  COMPARE   "-2",OPTIONC
          GOTO      SELG1300 IF NOT EQUAL
          CALL      NOTE0000           * wp
          GOTO      SELG0000           * go back to start of screen
.
.---- reporting det ----
.
SELG1300  COMPARE   "-3",OPTIONC
          GOTO      SELG1400 IF NOT EQUAL
          CALL      SELR0000
          GOTO      SELG0000
.
.---- add to acc ----
.
SELG1400  COMPARE   "-4",OPTIONC
          GOTO      SELG1500 IF NOT EQUAL
          CALL      SELQ0000
          GOTO      SELG0000
.
.---- next screen ----
.
SELG1500  COMPARE   "-5",OPTIONC
          GOTO      SELG1600 IF NOT EQUAL
          CALL      NEXT0000           * get next screen
          GOTO      SELG9000           * go back to start of screen
.
.---- last screen ----
.
SELG1600  COMPARE   "-6",OPTIONC
          GOTO      SELG1700 IF NOT EQUAL
          CALL      LAST0000           * get last screen
          GOTO      SELG9000           * go back to start of screen
.
.---- change account ----
.
SELG1700  COMPARE   "-7",OPTIONC
          GOTO      SELG1750 IF NOT EQUAL
          CALL      KACC0000           * get new account
          GOTO      SELG9000           * go back to start of screen
.
.---- sub subjectives ----
.
SELG1750  COMPARE   "99",OPTIONC
          GOTO      SELG1800 IF NOT EQUAL
          CALL      SELS0000           * get sub subjectives
          GOTO      SELG0000           * go back to start of screen
.
.---- sub acc ----
.
SELG1800  COMPARE   "-8",OPTIONC
          GOTO      SELG1900 IF NOT EQUAL
          MATCH     "8",SAVTYPE
          GOTO      SELG1820 IF NOT LESS    * sub acc for rept acct
          CALL      SELI0000
          GOTO      SELG0000
.
SELG1820  CALL      SELJ0000                * sub acc for stat rept
          GOTO      SELG0000
.
.---- exit ----
.
SELG1900  COMPARE   "-9",OPTIONC
          GOTO      SELG0100 IF NOT EQUAL
          GOTO      SELG9500           * quit
.
.
SELG9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELG9999
.
SELG9300  DISPLAY   *P1:24,*B,*EL,"Account Record Not Found - ";
          CALL      HITENTER
.
SELG9500  MOVE      ONE,EXIT           * quit
.
SELG9999  RETURN
.******************************************************************************
. MQSG - Main question for Screen G             Called By SELG0000
.        Returns  : OPTIONC   (-1=print, -2=wp, -3=rep det, -4=add to, -5=fwd,
.                     -6=back scr, -7=ch acct, -8=sub acc, -9=exit, 99=sub subj)
.******************************************************************************
MQSG0000  MATCH     "7",FMAMTYPE
          GOTO      MQSG0010 IF EQUAL            * heading type ?
          DISPLAY   *P1:23,"(":
                    *V2LON,"F",*HOFF,")orward, (":
                    *V2LON,"B",*HOFF,")ack Screen, (":
                    *V2LON,"A",*HOFF,")dd to Accounts";
.
          MATCH     "8",FMAMTYPE
          GOTO      MQSG0010 IF EQUAL            * stat posting type ?
          MATCH     "6",FMAMTYPE
          GOTO      MQSG0010 IF LESS             * posting type ?
          DISPLAY   ", (",*V2LON,"S",*HOFF,")ub Accounts";
.
          PACK      KEY14,SKEY
          CALL      RDFMSA1
          BRANCH    OVRCD,MQSG0010               * subjective ?
          MATCH     "1",FMSASTYP
          GOTO      MQSG0010 IF NOT EQUAL        * total subj type ?
          DISPLAY   ", s(",*V2LON,"U",*HOFF,")b Subjectives";
.
MQSG0010  DISPLAY   *P1:24,"(":
                    *V2LON,"P",*HOFF,")rint, (":
                    *V2LON,"C",*HOFF,")hange Account, ";
          MOVE      "28",CCOL
.
          MATCH     "8",FMAMTYPE
          GOTO      MQSG0100 IF EQUAL
          MATCH     "6",FMAMTYPE
          GOTO      MQSG0100 IF LESS
          DISPLAY   "(",*V2LON,"R",*HOFF,")eporting Details, ";
          ADD       "21",CCOL
.
MQSG0100  COMPARE   ONE,FMACW1ON
          GOTO      MQSG2000 IF NOT EQUAL
          DISPLAY   "(",*V2LON,"W",*HOFF,")ord Processor, ";
          ADD       "18",CCOL
.
MQSG2000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it : ";
          ADD       "9",CCOL
.
MQSG3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
          MATCH     " P",XIM2
          GOTO      MQSG3100 IF NOT EQUAL
          MOVE      "-1",OPTIONC       * print
          GOTO      MQSG9999
.
MQSG3100  MATCH     " F",XIM2
          GOTO      MQSG3200 IF NOT EQUAL
          MATCH     "7",FMAMTYPE
          GOTO      MQSG3200 IF EQUAL  * heading type ?
          MOVE      "-5",OPTIONC       * forward
          GOTO      MQSG9999
.
MQSG3200  COMPARE   ONE,FMACW1ON
          GOTO      MQSG3300 IF NOT EQUAL
          MATCH     " W",XIM2
          GOTO      MQSG3300 IF NOT EQUAL
          MOVE      "-2",OPTIONC       * wp
          GOTO      MQSG9999
.
MQSG3300  MATCH     " S",XIM2
          GOTO      MQSG3400 IF NOT EQUAL
          MATCH     "7",FMAMTYPE
          GOTO      MQSG3400 IF EQUAL  *  heading ?
          MATCH     "8",FMAMTYPE
          GOTO      MQSG3400 IF EQUAL  * stat posting ?
          MATCH     "6",FMAMTYPE
          GOTO      MQSG3400 IF LESS   * normal posting ?
          MOVE      "-8",OPTIONC       * sub acc
          GOTO      MQSG9999
.
MQSG3400  MATCH     " R",XIM2
          GOTO      MQSG3600 IF NOT EQUAL
          MATCH     "7",FMAMTYPE
          GOTO      MQSG3600 IF EQUAL  *  heading ?
          MATCH     "8",FMAMTYPE
          GOTO      MQSG3600 IF EQUAL  * stat posting ?
          MATCH     "6",FMAMTYPE
          GOTO      MQSG3600 IF LESS   * normal posting ?
          MOVE      "-3",OPTIONC       * rep det
          GOTO      MQSG9999
.
MQSG3600  MATCH     " B",XIM2
          GOTO      MQSG3650 IF NOT EQUAL
          MATCH     "7",FMAMTYPE
          GOTO      MQSG3650 IF EQUAL  * heading type ?
          MOVE      "-6",OPTIONC       * back screen
          GOTO      MQSG9999
.
MQSG3650  MATCH     " C",XIM2
          GOTO      MQSG3660 IF NOT EQUAL
          MOVE      "-7",OPTIONC       * change
          GOTO      MQSG9999
.
MQSG3660  MATCH     " U",XIM2
          GOTO      MQSG3680 IF NOT EQUAL
          PACK      KEY14,SKEY
          CALL      RDFMSA1
          BRANCH    OVRCD,MQSG3680               * subjective ?
          MATCH     "1",FMSASTYP
          GOTO      MQSG3680 IF NOT EQUAL        * total subj type ?
.
          MOVE      "99",OPTIONC       * sub subjectives
          GOTO      MQSG9999
.
MQSG3680  MATCH     " A",XIM2
          GOTO      MQSG3700 IF NOT EQUAL
          MOVE      "-4",OPTIONC       * add to details
          GOTO      MQSG9999
.
.
MQSG3700  MATCH     " X",XIM2
          GOTO      MQSG3750 IF NOT EQUAL
          MOVE      "-9",OPTIONC       * exit
          GOTO      MQSG9999
.
MQSG3750  BEEP                         * illegal option
          GOTO      MQSG3000           * get another option
.
MQSG9999  RETURN
.******************************************************************************
.* DAMT - Display amount                         Called by lots               *
.*       Requires : AMOUNTNO      (1=amount number)                           *
.*                  LINENO,COLNO  (screen address)                            *
.******************************************************************************
DAMT0000  LOAD      F1,AMOUNTNO,FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP * dec places
          BRANCH    F1,DAMT0100,DAMT0200,DAMT0300,DAMT0400,DAMT0500,DAMT0600
.
.---- no decimal places ----
.
          LOAD      F12,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12;
          GOTO      DAMT9999
.
.---- 1 decimal places ----
.
DAMT0100  LOAD      F12P1,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P1;
          GOTO      DAMT9999
.
.---- 2 decimal places ----
.
DAMT0200  LOAD      F12P2,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P2;
          GOTO      DAMT9999
.
.---- 3 decimal places ----
.
DAMT0300  LOAD      F12P3,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P3;
          GOTO      DAMT9999
.
.---- 4 decimal places ----
.
DAMT0400  LOAD      F12P4,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P4;
          GOTO      DAMT9999
.
.---- 5 decimal places ----
.
DAMT0500  LOAD      F12P5,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P5;
          GOTO      DAMT9999
.
.---- 6 decimal places ----
.
DAMT0600  LOAD      F12P6,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P6;
          GOTO      DAMT9999
.
DAMT9999  RETURN
.******************************************************************************
.* PAMT - Print amount                           Called by lots               *
.*       Requires : AMOUNTNO      (1=amount number)                           *
.******************************************************************************
PAMT0000  LOAD      F1,AMOUNTNO,FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP * dec places
          BRANCH    F1,PAMT0100,PAMT0200,PAMT0300,PAMT0400,PAMT0500,PAMT0600
.
.---- no decimal places ----
.
          LOAD      F12,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          PRINT     *26,": ",F12
          GOTO      PAMT9999
.
.---- 1 decimal places ----
.
PAMT0100  LOAD      F12P1,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          PRINT     *26,": ",F12P1
          GOTO      PAMT9999
.
.---- 2 decimal places ----
.
PAMT0200  LOAD      F12P2,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          PRINT     *26,": ",F12P2
          GOTO      PAMT9999
.
.---- 3 decimal places ----
.
PAMT0300  LOAD      F12P3,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          PRINT     *26,": ",F12P3
          GOTO      PAMT9999
.
.---- 4 decimal places ----
.
PAMT0400  LOAD      F12P4,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          PRINT     *26,": ",F12P4
          GOTO      PAMT9999
.
.---- 5 decimal places ----
.
PAMT0500  LOAD      F12P5,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          PRINT     *26,": ",F12P5
          GOTO      PAMT9999
.
.---- 6 decimal places ----
.
PAMT0600  LOAD      F12P6,F1,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4 * get data
          PRINT     *26,": ",F12P6
          GOTO      PAMT9999
.
PAMT9999  RETURN
.******************************************************************************
.* SCRI - Display Screen I                       Called by SELI0000, redisps  *
.******************************************************************************
SCRI0000  DISPLAY   *P1:4,*EF,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,*P44:4,FMLADESC:
                    *P1:5,"    Account              : ":
                    *V2LON,FMAMACCT,*HOFF,*P44:5,FMAMDESC:
                    *P28:7,*V2LON,"Accounts Adding to This Total":
                    *ULON,*P1:8,"Item",*P7:8,"Ledger/Account",*P72:8,"Acct Seq";
.
SCRI9999  RETURN
.******************************************************************************
.* PRTI - Print Screen I                         Called by SELI               *
.******************************************************************************
PRTI0000  MOVE      "6",REPNO
          CALL      HEAD0000                     * print header
.
          MOVE      ZERO,ITEMNUM
          PACK      KEY33,SKEY,SP70
          CALL      RSFMTC1                      * go to start of records
.
PRTI1000  CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,PRTI9999               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,SKEY
          GOTO      PRTI9999 IF NOT EQUAL        * no more records ?
.
          ADD       ONE,CLNO
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS         * at end of page
          ADD       ONE,ITEMNUM
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          CALL      RDFMAM1
          PRINT     ITEMNUM,DOT,*7,FMTCSLED,SLASH,FMTCSACC,SP2,FMAMDESC:
                    *74,FMTCASEQ
          GOTO      PRTI1000                     * get next record
.
PRTI9999  RETURN
.******************************************************************************
.* SELI - screen I - rep det for total acct's    Called By SELG               *
.******************************************************************************
SELI0000  CALL      SCRI0000           * display screen
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
.
          CALL      DATI0000           * display data
          CALL      MQSI0000           * next/prev/exit
.
SELI9999  RETURN
.******************************************************************************
.* DATI - display screen I data                  Called By MQSI,SELI          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMI (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATI0000  PACK      ST1,SP70,SP10
          PACK      ST2,SP70,SP10
          PACK      ST3,SP70,SP10
          PACK      ST4,SP70,SP10
          PACK      ST5,SP70,SP10
          PACK      ST6,SP70,SP10
          PACK      ST7,SP70,SP10
          PACK      ST8,SP70,SP10
          PACK      ST9,SP70,SP10
          PACK      ST10,SP70,SP10
          PACK      ST11,SP70,SP10
          PACK      ST12,SP70,SP10
          PACK      ST13,SP70,SP10
          PACK      ST14,SP70,SP10
          PACK      ST15,SP70,SP10
          PACK      ST16,SP70,SP10
          PACK      ST17,SP70,SP10
.
          PACK      KEY33,SKEY,SP70
          CALL      RSFMTC1                      * go to start of records
          MOVE      "8",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:9,*EF;                   * clear data area on screen
.
DATI1000  CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,DATI9000               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,SKEY
          GOTO      DATI9000 IF NOT EQUAL        * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMI,ITEMNUM
          GOTO      DATI2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATI2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATI1000 IF LESS             * not up to current page ?
          GOTO      DATI9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          CALL      RDFMAM1
.
          STORE     KEY14,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P7:LINENO,FMTCSLED,SLASH,FMTCSACC,SP2,FMAMDESC;
.
          MATCH     "6",FMAMTYPE
          GOTO      DATI1000 IF NOT LESS         * get next record
.
          DISPLAY   *P74:LINENO,FMTCASEQ;
          GOTO      DATI1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATI9000  MOVE      ZERO,MORE                    * no more data
          GOTO      DATI9999
.
.---- reached EOP before EOF ----
.
DATI9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMI,ITEMNUM
.
DATI9999  RETURN
.******************************************************************************
.* MQSI - Main question for screen I             Called By SELI0000           *
.******************************************************************************
MQSI0000  MOVE      "22",CCOL
          DISPLAY   *P1:24,"Select Item, ":
                    "(",*V2LON,"P",*HOFF,")rint, ";
          COMPARE   ONE,MORE
          GOTO      MQSI1000 IF NOT EQUAL
.
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
.
MQSI1000  COMPARE   PAGENO,ONE
          GOTO      MQSI2000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"L",*HOFF,")ast Page, ";
          ADD       "13",CCOL
.
MQSI2000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "10",CCOL
.
MQSI3000  KEYIN     *PCCOL:24,"__":
                    *PCCOL:24,*V2LON,*JR,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
          COMPARE   ONE,MORE
          GOTO      MQSI4000 IF NOT EQUAL
.
          MATCH     " N",XIM2
          GOTO      MQSI4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATI0000
          GOTO      MQSI0000
.
MQSI4000  COMPARE   PAGENO,ONE
          GOTO      MQSI5000 IF EQUAL
.
          MATCH     " L",XIM2
          GOTO      MQSI5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATI0000
          GOTO      MQSI0000
.
MQSI5000  MATCH     " X",XIM2
          GOTO      MQSI9500 IF EQUAL
.
          MATCH     " P",XIM2
          GOTO      MQSI6000 IF NOT EQUAL  * print
          CALL      PRTI0000
          CALL      DATI0000
          GOTO      MQSI0000
.
MQSI6000  MOVE      ZERO,F2
          MOVE      XIM2,F2
          MOVE      SP70,KEY14
          LOAD      KEY14,F2,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          MATCH     SP70,KEY14
          GOTO      MQSI7000 IF EQUAL
          PACK      SKEY,KEY14,SP70
          GOTO      MQSI9000
.
MQSI7000  BEEP                         * illegal option
          GOTO      MQSI3000           * get another option
.
MQSI9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSI9999
.
MQSI9500  MOVE      ONE,EXIT           * quit
.
MQSI9999  RETURN
.******************************************************************************
.* SCRS - Display Screen S                       Called by SELS0000, redisps  *
.******************************************************************************
SCRS0000  DISPLAY   *P1:4,*EF,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,*P44:4,FMLADESC:
                    *P1:5,"    Account              : ":
                    *V2LON,FMAMACCT,*HOFF,*P44:5,FMAMDESC:
                    *P28:7,*V2LON,"Subjectives Adding to This Total Subjective":
                    *ULON,*P1:8,"Item",*P7:8,"Ledger/Subjective",*P72:8,"Type";
.
SCRS9999  RETURN
.******************************************************************************
.* PRTS - Print Screen S                         Called by SELS               *
.******************************************************************************
PRTS0000  MOVE      "15",REPNO
          CALL      HEAD0000                     * print header
.
          MOVE      ZERO,ITEMNUM
          PACK      KEY14,SP70
          CALL      RSFMSA1                      * go to start of records
.
PRTS1000  CALL      RKFMSA1                      * get next record
          BRANCH    OVRCD,PRTS9999               * no more records ?
          PACK      KEY14,FMSALEDG,FMSAADDT,SP70
          MATCH     KEY14,SKEY
          GOTO      PRTS1000 IF NOT EQUAL        * not desired subjective ?
.
          ADD       ONE,CLNO
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS         * at end of page
          ADD       ONE,ITEMNUM
.
          MOVE      SP70,FMSADESC
          MOVE      ZERO,FMSASTYP
          PACK      KEY14,FMSALEDG,FMSASUBJ,SP70
          CALL      RDFMSA1
          MOVE      FMSASTYP,F1
          MOVE      SASTYPE0,SASTYPE
          LOAD      SASTYPE,F1,SASTYPE1,SASTYPE2,SASTYPE3,SASTYPE4
.
          PRINT     ITEMNUM,DOT,*7,FMSALEDG,SLASH,FMSASUBJ,SP2,FMSADESC:
                    *72,SASTYPE
          GOTO      PRTS1000                     * get next record
.
PRTS9999  RETURN
.******************************************************************************
.* SELS - screen S - rep det for total acct's    Called By SELG               *
.******************************************************************************
SELS0000  CALL      SCRS0000           * display screen
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
.
          CALL      DATS0000           * display data
          CALL      MQSS0000           * next/prev/exit
.
SELS9999  RETURN
.******************************************************************************
.* DATS - display screen I data                  Called By MQSS,SELS          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMI (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATS0000  PACK      ST1,SP70,SP10
          PACK      ST2,SP70,SP10
          PACK      ST3,SP70,SP10
          PACK      ST4,SP70,SP10
          PACK      ST5,SP70,SP10
          PACK      ST6,SP70,SP10
          PACK      ST7,SP70,SP10
          PACK      ST8,SP70,SP10
          PACK      ST9,SP70,SP10
          PACK      ST10,SP70,SP10
          PACK      ST11,SP70,SP10
          PACK      ST12,SP70,SP10
          PACK      ST13,SP70,SP10
          PACK      ST14,SP70,SP10
          PACK      ST15,SP70,SP10
          PACK      ST16,SP70,SP10
          PACK      ST17,SP70,SP10
.
          PACK      KEY14,SP70
          CALL      RSFMSA1                      * go to start of records
          MOVE      "8",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:9,*EF;                   * clear data area on screen
.
DATS1000  CALL      RKFMSA1                      * get next record
          BRANCH    OVRCD,DATS9000               * no more records ?
          PACK      KEY14,FMSALEDG,FMSAADDT,SP70
          MATCH     KEY14,SKEY
          GOTO      DATS1000 IF NOT EQUAL        * not desired subjective ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMI,ITEMNUM
          GOTO      DATS2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATS2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATS1000 IF LESS             * not up to current page ?
          GOTO      DATS9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
.
          MOVE      SP70,FMSADESC
          MOVE      ZERO,FMSASTYP
          PACK      KEY14,FMSALEDG,FMSASUBJ,SP70
          CALL      RDFMSA1
          MOVE      FMSASTYP,F1
          MOVE      SASTYPE0,SASTYPE
          LOAD      SASTYPE,F1,SASTYPE1,SASTYPE2,SASTYPE3,SASTYPE4
.
          STORE     KEY14,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P7:LINENO,FMSALEDG,SLASH,FMSASUBJ,SP2,FMSADESC:
                    *P72:LINENO,SASTYPE
.
          GOTO      DATS1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATS9000  MOVE      ZERO,MORE                    * no more data
          GOTO      DATS9999
.
.---- reached EOP before EOF ----
.
DATS9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMI,ITEMNUM
.
DATS9999  RETURN
.******************************************************************************
.* MQSS - Main question for screen I             Called By SELS0000           *
.******************************************************************************
MQSS0000  MOVE      "22",CCOL
          DISPLAY   *P1:24,"Select Item, ":
                    "(",*V2LON,"P",*HOFF,")rint, ";
          COMPARE   ONE,MORE
          GOTO      MQSS1000 IF NOT EQUAL
.
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
.
MQSS1000  COMPARE   PAGENO,ONE
          GOTO      MQSS2000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"L",*HOFF,")ast Page, ";
          ADD       "13",CCOL
.
MQSS2000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "10",CCOL
.
MQSS3000  KEYIN     *PCCOL:24,"__":
                    *PCCOL:24,*V2LON,*JR,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
          COMPARE   ONE,MORE
          GOTO      MQSS4000 IF NOT EQUAL
.
          MATCH     " N",XIM2
          GOTO      MQSS4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATS0000
          GOTO      MQSS0000
.
MQSS4000  COMPARE   PAGENO,ONE
          GOTO      MQSS5000 IF EQUAL
.
          MATCH     " L",XIM2
          GOTO      MQSS5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATS0000
          GOTO      MQSS0000
.
MQSS5000  MATCH     " X",XIM2
          GOTO      MQSS9500 IF EQUAL
.
          MATCH     " P",XIM2
          GOTO      MQSS6000 IF NOT EQUAL  * print
          CALL      PRTS0000
          CALL      DATS0000
          GOTO      MQSS0000
.
MQSS6000  MOVE      ZERO,F2
          MOVE      XIM2,F2
          MOVE      SP70,KEY14
          LOAD      KEY14,F2,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          MATCH     SP70,KEY14
          GOTO      MQSS7000 IF EQUAL
          PACK      SKEY,KEY14,SP70
          GOTO      MQSS9000
.
MQSS7000  BEEP                         * illegal option
          GOTO      MQSS3000           * get another option
.
MQSS9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSS9999
.
MQSS9500  MOVE      ONE,EXIT           * quit
.
MQSS9999  RETURN
.******************************************************************************
.* SCRJ - Display Screen J                       Called by SELJ0000, redisps  *
.******************************************************************************
SCRJ0000  PACK      KEY14,SKEY,SP70
          CALL      RDFMAM1                      * get account data
          DISPLAY   *P1:4,*EF,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,*P44:4,FMLADESC:
                    *P1:5,"    Account              : ":
                    *V2LON,FMAMACCT,*HOFF,*P44:5,FMAMDESC:
                    *P28:7,*V2LON,"Accounts Related to This Total":
                    *ULON,*P1:8,"Item",*P7:8,"Function",*P17:8,"Ledger/Account":
                         *P72:8,"Acct Seq";
.
SCRJ9999  RETURN
.******************************************************************************
.* PRTJ - Print Screen J                         Called by SELJ               *
.******************************************************************************
PRTJ0000  MOVE      "7",REPNO
          PACK      KEY14,SKEY,SP70
          CALL      RDFMAM1                      * get account data
          CALL      HEAD0000                     * print header
.
          MOVE      ZERO,ITEMNUM
          PACK      KEY33,SKEY,SP70
          CALL      RSFMTC1                      * go to start of records
.
PRTJ1000  CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,PRTJ9999               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,SKEY
          GOTO      PRTJ9999 IF NOT EQUAL        * no more records ?
.
          ADD       ONE,CLNO
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS         * at end of page
          ADD       ONE,ITEMNUM
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          CALL      RDFMAM1
.
          MOVE      ADDT0,ADDT
          MOVE      FMTCADDT,F1
          LOAD      ADDT,F1,ADDT1,ADDT2,ADDT3
.
          PRINT     ITEMNUM,DOT,*7,ADDT,*17,FMTCSLED,SLASH,FMTCSACC,SP2:
                    FMAMDESC,*74,FMTCASEQ
          GOTO      PRTJ1000                     * get next record
.
PRTJ9999  RETURN
.******************************************************************************
.* SELJ - screen J - rep det for stat acct's     Called By SELG               *
.******************************************************************************
SELJ0000  CALL      SCRJ0000           * display screen
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
.
          CALL      DATJ0000           * display data
          CALL      MQSJ0000           * next/prev/exit
.
SELJ9999  RETURN
.******************************************************************************
.* DATJ - display screen I data                  Called By MQSJ,SELJ          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMI (maximum no. of items per page + 1)              *[
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATJ0000  PACK      ST1,SP70,SP10
          PACK      ST2,SP70,SP10
          PACK      ST3,SP70,SP10
          PACK      ST4,SP70,SP10
          PACK      ST5,SP70,SP10
          PACK      ST6,SP70,SP10
          PACK      ST7,SP70,SP10
          PACK      ST8,SP70,SP10
          PACK      ST9,SP70,SP10
          PACK      ST10,SP70,SP10
          PACK      ST11,SP70,SP10
          PACK      ST12,SP70,SP10
          PACK      ST13,SP70,SP10
          PACK      ST14,SP70,SP10
          PACK      ST15,SP70,SP10
          PACK      ST16,SP70,SP10
          PACK      ST17,SP70,SP10
.
          PACK      KEY33,SKEY,SP70
          CALL      RSFMTC1                      * go to start of records
          MOVE      "8",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:9,*EF;                   * clear data area on screen
.
DATJ1000  CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,DATJ9000               * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY14,SKEY
          GOTO      DATJ9000 IF NOT EQUAL        * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMI,ITEMNUM
          GOTO      DATJ2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATJ2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATJ1000 IF LESS             * not up to current page ?
          GOTO      DATJ9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          CALL      RDFMAM1
.
          MOVE      ADDT0,ADDT
          MOVE      FMTCADDT,F1
          LOAD      ADDT,F1,ADDT1,ADDT2,ADDT3
.
          STORE     KEY14,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P7:LINENO,ADDT,SP2,FMTCSLED,SLASH,FMTCSACC,SP2,FMAMDESC:
                    *P74:LINENO,FMTCASEQ;
          GOTO      DATJ1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATJ9000  MOVE      ZERO,MORE                    * no more data
          GOTO      DATJ9999
.
.---- reached EOP before EOF ----
.
DATJ9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMI,ITEMNUM
.
DATJ9999  RETURN
.******************************************************************************
.* MQSJ - Main question for screen I             Called By SELJ0000           *
.******************************************************************************
MQSJ0000  MOVE      "22",CCOL
          DISPLAY   *P1:24,"Select Item, ":
                    "(",*V2LON,"P",*HOFF,")rint, ";
          COMPARE   ONE,MORE
          GOTO      MQSJ1000 IF NOT EQUAL
.
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
.
MQSJ1000  COMPARE   PAGENO,ONE
          GOTO      MQSJ2000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"L",*HOFF,")ast Page, ";
          ADD       "13",CCOL
.
MQSJ2000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "10",CCOL
.
MQSJ3000  KEYIN     *PCCOL:24,"__":
                    *PCCOL:24,*V2LON,*JR,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
          COMPARE   ONE,MORE
          GOTO      MQSJ4000 IF NOT EQUAL
.
          MATCH     " N",XIM2
          GOTO      MQSJ4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATJ0000
          GOTO      MQSJ0000
.
MQSJ4000  COMPARE   PAGENO,ONE
          GOTO      MQSJ5000 IF EQUAL
.
          MATCH     " L",XIM2
          GOTO      MQSJ5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATJ0000
          GOTO      MQSJ0000
.
MQSJ5000  MATCH     " X",XIM2
          GOTO      MQSJ9500 IF EQUAL
.
          MATCH     " P",XIM2
          GOTO      MQSJ6000 IF NOT EQUAL  * print
          CALL      PRTJ0000
          CALL      DATJ0000
          GOTO      MQSJ0000
.
MQSJ6000  MOVE      ZERO,F2
          MOVE      XIM2,F2
          MOVE      SP70,KEY14
          LOAD      KEY14,F2,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          MATCH     SP70,KEY14
          GOTO      MQSJ7000 IF EQUAL
          PACK      SKEY,KEY14,SP70
          GOTO      MQSJ9000
.
MQSJ7000  BEEP                         * illegal option
          GOTO      MQSJ3000           * get another option
.
MQSJ9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSJ9999
.
MQSJ9500  MOVE      ONE,EXIT           * quit
.
MQSJ9999  RETURN
.******************************************************************************
.* SCRK - Display Screen K                       Called by SELK               *
.******************************************************************************
SCRK0000  DISPLAY   *P60:3,*V2LON,"- Dissection Anal.  ",*EL,*HOFF:
                    *P1:4,"Enquiry for ",*V2LON,FMAMDESC,*HOFF,SP10:
                    "Code : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*HOFF,*EF:
                    *P1:5,"Accounting Period ",*P35:5,"Ending ":
                    *V2LON,*ULON,*P1:7,"Dissection":
                    *P45:7,"Current Period",*P67:7,"Year to Date"
.
SCRK9999  RETURN
.**********************************************************************
. SELK - Perform screen K                             Called By ML
.        Requires - SKEY     (current ledger/account)
.                 - PERIODNO (current period)
.        Returns  - EXIT     (1=quit)
.                 - SCRNO    (next screen number)
.**********************************************************************
SELK0000  PACK      KEY14,SKEY
          CALL      RDFMAM1            * get account data
          BRANCH    OVRCD,SELK9300     * account data found ?
          MOVE      FMAMTYPE,SAVTYPE   * save account type
          MOVE      ZERO,DECPLACE
          MOVE      FMAMDPLA,DECPLACE  * get no. of decimal places
          MOVE      ZERO,AVYTD
          MATCH     "7",FMAMTYPE
          GOTO      SELK0020 IF LESS
          MOVE      FMAMAYTD,AVYTD     * save ytd type
SELK0020  MOVE      "1",PAGENO
.
          CALL      SCRK0000           * display screen K
.
SELK0050  CALL      HPER0000           * display period
          CALL      DATK0000
.
SELK0100  CALL      MQSK0000           * get option
.
.---- last period ----
.
SELK1000  COMPARE   " 3",OPTIOND
          GOTO      SELK1100 IF NOT EQUAL
          MOVE      ZERO,DISPERR
          CALL      LPER0000           * get last period
          BRANCH    OVRCD,SELK0100     * no last period to display ?
          GOTO      SELK0050           * redisplay data
.
.---- next period ----
.
SELK1100  COMPARE   " 2",OPTIOND
          GOTO      SELK1200 IF NOT EQUAL
          MOVE      ZERO,DISPERR
          CALL      NPER0000           * get next period
          BRANCH    OVRCD,SELK0100     * no next period to display ?
          GOTO      SELK0050           * redisplay data
.
.---- anal by period ----
.
SELK1200  COMPARE   "-1",OPTIOND
          GOTO      SELK1250 IF NOT EQUAL
          MOVE      "2",SCRNO          * get next screen
          GOTO      SELK9000           * go back to start of screen
.
.---- summary details ----
.
SELK1250  COMPARE   "-2",OPTIOND
          GOTO      SELK1300 IF NOT EQUAL
          MOVE      "1",SCRNO          * get next screen
          GOTO      SELK9000           * go back to start of screen
.
.---- committed details ----
.
SELK1300  COMPARE   "-3",OPTIOND
          GOTO      SELK1500 IF NOT EQUAL
          MOVE      "4",SCRNO          * get next screen
          GOTO      SELK9000           * go back to start of screen
.
.---- next screen ----
.
SELK1500  COMPARE   "-4",OPTIOND
          GOTO      SELK1600 IF NOT EQUAL
          CALL      NEXT0000           * get next screen
          GOTO      SELK9000           * go back to start of screen
.
.---- last screen ----
.
SELK1600  COMPARE   "-5",OPTIOND
          GOTO      SELK1700 IF NOT EQUAL
          CALL      LAST0000           * get last screen
          GOTO      SELK9000           * go back to start of screen
.
.---- change account ----
.
SELK1700  COMPARE   "-6",OPTIOND
          GOTO      SELK1750 IF NOT EQUAL
          CALL      KACC0000           * get new account
          GOTO      SELK9000           * go back to start of screen
.
.---- responsibility ----
.
SELK1750  COMPARE   "-7",OPTIOND
          GOTO      SELK1770 IF NOT EQUAL
          MOVE      "7",SCRNO          * get next screen
          GOTO      SELL9000           * go back to start of screen
.
.---- print ----
.
SELK1770  COMPARE   " 1",OPTIOND
          GOTO      SELK1800 IF NOT EQUAL
          CALL      PRTK0000           * print data
          GOTO      SELK0100           * redisplay data
.
.---- exit ----
.
SELK1800  COMPARE   "-9",OPTIOND
          GOTO      SELK1900 IF NOT EQUAL
          GOTO      SELK9500           * quit
.
SELK1900  BEEP
          GOTO      SELK0100
.
.
SELK9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELK9999
.
SELK9300  DISPLAY   *P1:24,*B,*EL,"Account Record Not Found - ";
          CALL      HITENTER
.
SELK9500  MOVE      ONE,EXIT           * quit
.
SELK9999  RETURN
.******************************************************************************
. MQSK - Main question for Screen K             Called By SELK0000
.        Returns  : OPTIOND  (-1=Anal by per, -2=Summary, -3=Committed, 
.                             -4=fwd scr, -5=bk scr, -6=ch acct,
.                             -7=responsibility, -9=exit
.                             1=print, 2=next period, 3=last period)
.******************************************************************************
MQSK0000  DISPLAY   *P1:23,"(",*V2LON,"P",*HOFF,")rint, e(":
                    *V2LON,"X",*HOFF,")it, (":
                    *V2LON,"N",*HOFF,")ext Period, (":
                    *V2LON,"L",*HOFF,")ast Period";
          MOVE      ZERO,OPTIOND
          BRANCH    PROGNO,MQSK0500    * display prompt
.
          DISPLAY   *P1:24,"(",*V2LON,"F",*HOFF:
                    ")orward, (",*V2LON,"B",*HOFF:
                    ")ack Screen, (",*V2LON,"C",*HOFF,")hange Account";
          MOVE      "42",CCOL
          GOTO      MQSK0600
.
MQSK0500  DISPLAY   *P1:24,"(",*V2LON,"A",*HOFF,")nalysis by Period, (":
                    *V2LON,"R",*HOFF,")espons. Analysis, (":
                    *V2LON,"S",*HOFF,")ummary";
          MOVE      "52",CCOL
          MATCH     "7",SAVTYPE
          GOTO      MQSK0600 IF NOT LESS
          DISPLAY   ", (",*V2LON,"C",*HOFF,")ommitted";
          ADD       "13",CCOL
.
MQSK0600  COMPARE   ONE,MORE
          GOTO      MQSK1000 IF NOT EQUAL        * any more data ?
          DISPLAY   ", (",*V2LON,"M",*HOFF,")ore";
          ADD       "8",CCOL
.
MQSK1000  DISPLAY   " : ";
          ADD       "4",CCOL
.
MQSK3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
.
          MATCH     " X",XIM2
          GOTO      MQSK3010 IF NOT EQUAL
          MOVE      "-9",OPTIOND       * exit
          GOTO      MQSK9999
.
MQSK3010  MATCH     " P",XIM2
          GOTO      MQSK3020 IF NOT EQUAL
          MOVE      " 1",OPTIOND       * print
          GOTO      MQSK9999
.
MQSK3020  MATCH     " N",XIM2
          GOTO      MQSK3030 IF NOT EQUAL
          MOVE      " 2",OPTIOND       * next period
          GOTO      MQSK9999
.
MQSK3030  MATCH     " L",XIM2
          GOTO      MQSK3050 IF NOT EQUAL
          MOVE      " 3",OPTIOND       * last period
          GOTO      MQSK9999
.
MQSK3050  COMPARE   ONE,MORE
          GOTO      MQSK3100 IF NOT EQUAL        * any more data ?
          MATCH     " M",XIM2
          GOTO      MQSK3100 IF NOT EQUAL
          ADD       ONE,PAGENO                   * get next page
          CALL      DATK0000                     * display data
          GOTO      MQSK0000
.
MQSK3100  COMPARE   ONE,PROGNO
          GOTO      MQSK3400 IF NOT EQUAL        * execute desired options
.
.---- options for IBAFMS20 ----
.
          MATCH     " A",XIM2
          GOTO      MQSK3200 IF NOT EQUAL
          MOVE      "-1",OPTIOND       * anal by period
          GOTO      MQSK9999
.
MQSK3200  MATCH     " S",XIM2
          GOTO      MQSK3300 IF NOT EQUAL
          MOVE      "-2",OPTIOND       * summary
          GOTO      MQSK9999
.
MQSK3300  MATCH     " C",XIM2
          GOTO      MQSK3350 IF NOT EQUAL
          MATCH     "7",SAVTYPE
          GOTO      MQSK3350 IF NOT LESS
          MOVE      "-3",OPTIOND       * committed
          GOTO      MQSK9999
.
MQSK3350  MATCH     " R",XIM2
          GOTO      MQSK3800 IF NOT EQUAL   * responsibility analysis
          MOVE      "-7",OPTIOND
          GOTO      MQSB9999
.
.---- options for IBAFMS21 & 22 ----
.
MQSK3400  MATCH     " F",XIM2
          GOTO      MQSK3500 IF NOT EQUAL
          MOVE      "-4",OPTIOND       * fwd screen
          GOTO      MQSK9999
.
MQSK3500  MATCH     " B",XIM2
          GOTO      MQSK3600 IF NOT EQUAL
          MOVE      "-5",OPTIOND       * back screen
          GOTO      MQSK9999
.
MQSK3600  MATCH     " C",XIM2
          GOTO      MQSK3800 IF NOT EQUAL
          MOVE      "-6",OPTIOND       * ch acct
          GOTO      MQSK9999
.
.
MQSK3800  
.
MQSK9999  RETURN
.******************************************************************************
.* DATK - display Screen K data                  Called By MQSK,SELK          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEME (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  MORE     (1=more data)                                    *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATK0000  MOVE      "0",TCURDIS
          MOVE      "0",TYTDDIS
          MOVE      "0",CURDIS
          MOVE      "0",YTDDIS
          MOVE      "7",LINENO
          MOVE      "0",ITEMNUM
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      SP70,CURRDISP
          DISPLAY   *P1:8,*EF;                   * clear data area on screen
          PACK      FILENAM,FMSD,CURYEAR
          REP       " 0",FILENAM
          MATCH     FILENAM,DISFILE
          GOTO      DATK0100 IF EQUAL            * file already open ?
.
          MOVE      FILENAM,DISFILE              * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSDSFA1,FILENAM             * open current year file
          TRAP      OVERCOND IF IO
          OPEN      FMSDSFA2,FILENAM
          TRAPCLR   IO
          BRANCH    OVRCD,DATK8700               * data not found ?
.
DATK0100  PACK      KEY23,SKEY,SP70
          CALL      RSFMDF1                      * go to start of records
.
DATK1000  CALL      RKFMDF1                      * get next record
          BRANCH    OVRCD,DATK9000               * no more records ?
          PACK      KEY14,FMDFLEDG,FMDFACCT,SP70
          MATCH     KEY14,KEY23
          GOTO      DATK9000 IF NOT EQUAL        * no more records ?
.
          MATCH     SP70,CURRDISP
          GOTO      DATK1100 IF NOT EQUAL        * at first record ?
          MOVE      FMDFDISS,CURRDISP
.
DATK1100  CALL      DISK0000
          GOTO      DATK1000
.
.---- file not found ----
.
DATK8700  MOVE      SP70,DISFILE                 * clear file name
.
.---- reached EOF before EOP ----
.
DATK9000  MOVE      SP70,FMDFDISS
          MATCH     SP70,CURRDISP
          CALL      DISK0000 IF NOT EQUAL        * display data if required
          COMPARE   CURPAGE,PAGENO
          GOTO      DATK9500 IF LESS
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATK9700
.
.---- reached EOP before EOF ----
.
DATK9500  MOVE      ONE,MORE                     * more data
.
.---- display totals ----
.
DATK9700  MOVE      FORMDAT2,XIM16
          FEDIT     TCURDIS,XIM16
          MOVE      ZORMDAT2,ZIM16
          FEDIT     TCURDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          DISPLAY   *P30:22,*V2LON,"Totals     ",*P44:22,DOMMITP2;
.
          MOVE      FORMDAT2,XIM16
          FEDIT     TYTDDIS,XIM16
          MOVE      ZORMDAT2,ZIM16
          FEDIT     TYTDDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          DISPLAY   *P64:22,*V2LON,DOMMITP2;
.
DATK9999  RETURN
.******************************************************************************
.* DISK - display screen K data                 Called By DATK                *
.******************************************************************************
DISK0000  
          MATCH     FMDFDISS,CURRDISP
          GOTO      DISK9000 IF EQUAL
.
          COMPARE   PAGENO,CURPAGE
          GOTO      DISK7000 IF NOT EQUAL        * not at current page ?
          ADD       "1",LINENO
          MOVE      SP70,FMDSDESC
          PACK      KEY5,CURRDISP,SP70
          CALL      RDFMDS1
.
          MOVE      FORMDAT2,XIM16
          FEDIT     CURDIS,XIM16
          MOVE      ZORMDAT2,ZIM16
          FEDIT     CURDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          DISPLAY   *P1:LINENO,CURRDISP,SP2,FMDSDESC:
                    *P44:LINENO,DOMMITP2;
.
          MOVE      FORMDAT2,XIM16
          FEDIT     YTDDIS,XIM16
          MOVE      ZORMDAT2,ZIM16
          FEDIT     YTDDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          DISPLAY   *P64:LINENO,DOMMITP2;
.
DISK7000  ADD       CURDIS,TCURDIS
          ADD       YTDDIS,TYTDDIS
          MOVE      ZERO,CURDIS
          MOVE      ZERO,YTDDIS
.
          ADD       "1",ITEMNUM                  * increment item number
          MATCH     SP70,FMDFDISS                * no more data to display ?
          GOTO      DISK9000 IF EQUAL
          COMPARE   MAXITEME,ITEMNUM
          GOTO      DISK9000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DISK9000  MOVE      FMDFDISS,CURRDISP
          CALL      GDIS0000                     * calculate values
.
DISK9999  RETURN
.******************************************************************************
.* DATL - display Screen L data                  Called By MQSL,SELL          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEME (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  MORE     (1=more data)                                    *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATL0000  MOVE      "0",TCURDIS
          MOVE      "0",TYTDDIS
          MOVE      "0",CURDIS
          MOVE      "0",YTDDIS
          MOVE      "7",LINENO
          MOVE      "0",ITEMNUM
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      SP70,CURRDISP
          DISPLAY   *P1:8,*EF;                   * clear data area on screen
          PACK      FILENAM,FMSD,CURYEAR
          REP       " 0",FILENAM
          MATCH     FILENAM,DISFILE
          GOTO      DATL0100 IF EQUAL            * file already open ?
.
          MOVE      FILENAM,DISFILE              * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSDSFA1,FILENAM             * open current year file
          TRAP      OVERCOND IF IO
          OPEN      FMSDSFA2,FILENAM
          TRAPCLR   IO
          BRANCH    OVRCD,DATL8700               * data not found ?
.
DATL0100  PACK      KEY23,SKEY,SP70
          CALL      RSFMDF2                      * go to start of records
.
DATL1000  CALL      RKFMDF2                      * get next record
          BRANCH    OVRCD,DATL9000               * no more records ?
          PACK      KEY14,FMDFLEDG,FMDFACCT,SP70
          MATCH     KEY14,KEY23
          GOTO      DATL9000 IF NOT EQUAL        * no more records ?
.
          MATCH     SP70,CURRDISP
          GOTO      DATL1100 IF NOT EQUAL        * at first record ?
          MOVE      FMDFRESP,CURRDISP
.
DATL1100  CALL      DISL0000
          GOTO      DATL1000
.
.---- file not found ----
.
DATL8700  MOVE      SP70,DISFILE                 * clear file name
.
.---- reached EOF before EOP ----
.
DATL9000  MOVE      SP70,FMDFRESP
          MATCH     SP70,CURRDISP
          CALL      DISL0000 IF NOT EQUAL        * display data if required
          COMPARE   CURPAGE,PAGENO
          GOTO      DATL9500 IF LESS
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATL9700
.
.---- reached EOP before EOF ----
.
DATL9500  MOVE      ONE,MORE                     * more data
.
.---- display totals ----
.
DATL9700  MOVE      FORMDAT2,XIM16
          FEDIT     TCURDIS,XIM16
          MOVE      ZORMDAT2,ZIM16
          FEDIT     TCURDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          DISPLAY   *P30:22,*V2LON,"Totals     ",*P44:22,DOMMITP2;
.
          MOVE      FORMDAT2,XIM16
          FEDIT     TYTDDIS,XIM16
          MOVE      ZORMDAT2,ZIM16
          FEDIT     TYTDDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          DISPLAY   *P64:22,*V2LON,DOMMITP2;
.
DATL9999  RETURN
.******************************************************************************
.* DISL - display screen L data                 Called By DATL                *
.******************************************************************************
DISL0000  
          MATCH     FMDFRESP,CURRDISP
          GOTO      DISL9000 IF EQUAL
.
          COMPARE   PAGENO,CURPAGE
          GOTO      DISL7000 IF NOT EQUAL        * not at current page ?
.
          ADD       "1",LINENO
          MOVE      SP70,FMRSDESC
          PACK      KEY4,CURRDISP,SP70
          CALL      RDFMRS1
.
          MOVE      FORMDAT2,XIM16
          FEDIT     CURDIS,XIM16 
          MOVE      ZORMDAT2,ZIM16
          FEDIT     CURDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          DISPLAY   *P1:LINENO,CURRDISP,SP2,FMRSDESC:
                    *P44:LINENO,DOMMITP2;
.
          MOVE      FORMDAT2,XIM16
          FEDIT     YTDDIS,XIM16 
          MOVE      ZORMDAT2,ZIM16
          FEDIT     YTDDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          DISPLAY   *P64:LINENO,DOMMITP2;
.
DISL7000  ADD       CURDIS,TCURDIS
          ADD       YTDDIS,TYTDDIS
          MOVE      ZERO,CURDIS
          MOVE      ZERO,YTDDIS
.
          ADD       "1",ITEMNUM                  * increment item number
          MATCH     SP70,FMDFRESP                * no more data to display ?
          GOTO      DISL9000 IF EQUAL
          COMPARE   MAXITEME,ITEMNUM
          GOTO      DISL9000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DISL9000  MOVE      FMDFRESP,CURRDISP
          CALL      GDIS0000                     * calculate values
.
DISL9999  RETURN
.******************************************************************************
.* PRTK - display Screen K data                  Called By SELK               *
.******************************************************************************
PRTK0000  MOVE      "10",REPNO
          MOVE      "0",TCURDIS
          MOVE      "0",TYTDDIS
          MOVE      "0",CURDIS
          MOVE      "0",YTDDIS
          MOVE      "999",CLNO
          MOVE      "0",ITEMNUM
          MOVE      SP70,CURRDISP
          PACK      FILENAM,FMSD,CURYEAR
          REP       " 0",FILENAM
          MATCH     FILENAM,DISFILE
          GOTO      PRTK0100 IF EQUAL            * file already open ?
.
          MOVE      FILENAM,DISFILE              * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSDSFA1,FILENAM             * open current year file
          TRAP      OVERCOND IF IO
          OPEN      FMSDSFA2,FILENAM
          TRAPCLR   IO
          BRANCH    OVRCD,PRTK8700               * data not found ?
.
PRTK0100  PACK      KEY23,SKEY,SP70
          CALL      RSFMDF1                      * go to start of records
.
PRTK1000  CALL      RKFMDF1                      * get next record
          BRANCH    OVRCD,PRTK9000               * no more records ?
          PACK      KEY14,FMDFLEDG,FMDFACCT,SP70
          MATCH     KEY14,KEY23
          GOTO      PRTK9000 IF NOT EQUAL        * no more records ?
.
          MATCH     SP70,CURRDISP
          GOTO      PRTK1100 IF NOT EQUAL        * at first record ?
          MOVE      FMDFDISS,CURRDISP
.
PRTK1100  MATCH     FMDFDISS,CURRDISP
          CALL      PRLK0000 IF NOT EQUAL
.
          CALL      GDIS0000                     * calculate values
          GOTO      PRTK1000
.
.---- file not found ----
.
PRTK8700  MOVE      SP70,DISFILE                 * clear file name
.
.---- reached EOF before EOP ----
.
PRTK9000  COMPARE   CURPAGE,PAGENO
          GOTO      PRTK9500 IF NOT EQUAL
          MOVE      ZERO,MORE                    * no more data
          MATCH     SP70,CURRDISP
          CALL      PRLK0000 IF NOT EQUAL        * display data if required
          GOTO      PRTK9700
.
.---- reached EOP before EOF ----
.
PRTK9500  MOVE      ONE,MORE                     * more data
.
.---- display totals ----
.
PRTK9700  MOVE      FORMDAT2,XIM16
          FEDIT     TCURDIS,XIM16 
          MOVE      ZORMDAT2,ZIM16
          FEDIT     TCURDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          PRINT     *N,*30,"Totals     ",*44,DOMMITP2;
.
          MOVE      FORMDAT2,XIM16
          FEDIT     TYTDDIS,XIM16 
          MOVE      ZORMDAT2,ZIM16
          FEDIT     TYTDDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          PRINT     *64,DOMMITP2
.
PRTK9999  RETURN
.******************************************************************************
.* PRLK - display screen K data                 Called By PRTK                *
.******************************************************************************
PRLK0000  COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS         * end of page ?
          ADD       "1",CLNO
          MOVE      SP70,FMDSDESC
          PACK      KEY5,CURRDISP,SP70
          CALL      RDFMDS1
.
          MOVE      FORMDAT2,XIM16
          FEDIT     CURDIS,XIM16
          MOVE      ZORMDAT2,ZIM16
          FEDIT     CURDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          PRINT     *1,CURRDISP,SP2,FMDSDESC,*44,DOMMITP2;
.
          MOVE      FORMDAT2,XIM16
          FEDIT     YTDDIS,XIM16
          MOVE      ZORMDAT2,ZIM16
          FEDIT     YTDDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          PRINT     *64,DOMMITP2
.
PRLK9000  ADD       CURDIS,TCURDIS
          ADD       YTDDIS,TYTDDIS
          MOVE      ZERO,CURDIS
          MOVE      ZERO,YTDDIS
          MOVE      FMDFDISS,CURRDISP
.
PRLK9999  RETURN
.******************************************************************************
.* PRTL - display Screen L data                  Called By SELL               *
.******************************************************************************
PRTL0000  MOVE      "11",REPNO
          MOVE      "0",TCURDIS
          MOVE      "0",TYTDDIS
          MOVE      "0",CURDIS
          MOVE      "0",YTDDIS
          MOVE      "999",CLNO
          MOVE      "0",ITEMNUM
          MOVE      SP70,CURRDISP
          PACK      FILENAM,FMSD,CURYEAR
          REP       " 0",FILENAM
          MATCH     FILENAM,DISFILE
          GOTO      PRTL0100 IF EQUAL            * file already open ?
.
          MOVE      FILENAM,DISFILE              * save current filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSDSFA1,FILENAM             * open current year file
          TRAP      OVERCOND IF IO
          OPEN      FMSDSFA2,FILENAM
          TRAPCLR   IO
          BRANCH    OVRCD,PRTL8700               * data not found ?
.
PRTL0100  PACK      KEY23,SKEY,SP70
          CALL      RSFMDF2                      * go to start of records
.
PRTL1000  CALL      RKFMDF2                      * get next record
          BRANCH    OVRCD,PRTL9000               * no more records ?
          PACK      KEY14,FMDFLEDG,FMDFACCT,SP70
          MATCH     KEY14,KEY23
          GOTO      PRTL9000 IF NOT EQUAL        * no more records ?
.
          MATCH     SP70,CURRDISP
          GOTO      PRTL1100 IF NOT EQUAL        * at first record ?
          MOVE      FMDFRESP,CURRDISP
.
PRTL1100  MATCH     FMDFRESP,CURRDISP
          CALL      PRLL0000 IF NOT EQUAL
.
          CALL      GDIS0000                     * calculate values
          GOTO      PRTL1000
.
.---- file not found ----
.
PRTL8700  MOVE      SP70,DISFILE                 * clear file name
.
.---- reached EOF before EOP ----
.
PRTL9000  COMPARE   CURPAGE,PAGENO
          GOTO      PRTL9500 IF NOT EQUAL
          MOVE      ZERO,MORE                    * no more data
          MATCH     SP70,CURRDISP
          CALL      PRLL0000 IF NOT EQUAL        * display data if required
          GOTO      PRTL9700
.
.---- reached EOP before EOF ----
.
PRTL9500  MOVE      ONE,MORE                     * more data
.
.---- display totals ----
.
PRTL9700  MOVE      FORMDAT2,XIM16
          FEDIT     TCURDIS,XIM16
          MOVE      ZORMDAT2,ZIM16
          FEDIT     TCURDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          PRINT     *N,*30,"Totals     ",*44,DOMMITP2;
.
          MOVE      FORMDAT2,XIM16
          FEDIT     TYTDDIS,XIM16
          MOVE      ZORMDAT2,ZIM16
          FEDIT     TYTDDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          PRINT     *64,DOMMITP2
.
PRTL9999  RETURN
.******************************************************************************
.* PRLL - display screen L data                 Called By PRTL                *
.******************************************************************************
PRLL0000  COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS         * end of page ?
          ADD       "1",CLNO
          MOVE      SP70,FMRSDESC
          PACK      KEY4,CURRDISP,SP70
          CALL      RDFMRS1
.
          MOVE      FORMDAT2,XIM16
          FEDIT     CURDIS,XIM16 
          MOVE      ZORMDAT2,ZIM16
          FEDIT     CURDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          PRINT     *1,CURRDISP,SP2,FMRSDESC,*44,DOMMITP2;
.
          MOVE      FORMDAT2,XIM16
          FEDIT     YTDDIS,XIM16 
          MOVE      ZORMDAT2,ZIM16
          FEDIT     YTDDIS,ZIM16
          CALL      CXIM0000
.
          UNPACK    XIM16,ANS,DOMMITP2
          PRINT     *64,DOMMITP2
.
PRLL9000  ADD       CURDIS,TCURDIS
          ADD       YTDDIS,TYTDDIS
          MOVE      ZERO,CURDIS
          MOVE      ZERO,YTDDIS
          MOVE      FMDFRESP,CURRDISP
.
PRLL9999  RETURN
.**********************************************************************
. GDIS - Calc dissection data                         Called By lots
.**********************************************************************
GDIS0000  ADD       FMDFBF,FMDF01                * add br fwd to period 1
          MOVE      ZERO,F2
          MOVE      ZERO,F12P2
.
GDIS1000  ADD       ONE,F2
          COMPARE   F2,PERIODNO
          GOTO      GDIS9000 IF LESS
          LOAD      F12P2,F2,FMDF01,FMDF02,FMDF03,FMDF04,FMDF05,FMDF06:
                              FMDF07,FMDF08,FMDF09,FMDF10,FMDF11,FMDF12,FMDF13
          ADD       F12P2,YTDDIS
          GOTO      GDIS1000
.
GDIS9000  ADD       F12P2,CURDIS
.
GDIS9999  RETURN
.******************************************************************************
.* SCRQ - Display Screen Q                       Called by SELQ0000, redisps  *
.******************************************************************************
SCRQ0000  DISPLAY   *P1:4,*EF,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,*P44:4,FMLADESC:
                    *P1:5,"    Account              : ":
                    *V2LON,FMAMACCT,*HOFF,*P44:5,FMAMDESC:
                    *P28:7,*V2LON,"Adds to Accounts":
                    *ULON,*P1:8,"Item",*P7:8,"Ledger/Account";
.
SCRQ9999  RETURN
.******************************************************************************
.* PRTQ - Print Screen Q                         Called by SELQ               *
.******************************************************************************
PRTQ0000  MOVE      "12",REPNO
          CALL      HEAD0000                     * print header
.
          MOVE      ZERO,ITEMNUM
          PACK      KEY33,SKEY,SP70
          CALL      RSFMTC2                      * go to start of records
.
PRTQ1000  CALL      RKFMTC2                      * get next record
          BRANCH    OVRCD,PRTQ9999               * no more records ?
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          MATCH     KEY14,SKEY
          GOTO      PRTQ9999 IF NOT EQUAL        * no more records ?
.
          ADD       ONE,CLNO
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS         * at end of page
          ADD       ONE,ITEMNUM
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          CALL      RDFMAM1
          PRINT     ITEMNUM,DOT,*7,FMTCTLED,SLASH,FMTCTACC,SP2,FMAMDESC
          GOTO      PRTQ1000                     * get next record
.
PRTQ9999  RETURN
.******************************************************************************
.* SELQ - screen Q - add to accounts             Called By SELG               *
.******************************************************************************
SELQ0000  CALL      SCRQ0000           * display screen
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
.
          CALL      DATQ0000           * display data
          CALL      MQSQ0000           * next/prev/exit
.
SELQ9999  RETURN
.******************************************************************************
.* DATQ - display screen Q data                  Called By MQSQ,SELQ          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMI (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATQ0000  PACK      ST1,SP70,SP10
          PACK      ST2,SP70,SP10
          PACK      ST3,SP70,SP10
          PACK      ST4,SP70,SP10
          PACK      ST5,SP70,SP10
          PACK      ST6,SP70,SP10
          PACK      ST7,SP70,SP10
          PACK      ST8,SP70,SP10
          PACK      ST9,SP70,SP10
          PACK      ST10,SP70,SP10
          PACK      ST11,SP70,SP10
          PACK      ST12,SP70,SP10
          PACK      ST13,SP70,SP10
          PACK      ST14,SP70,SP10
          PACK      ST15,SP70,SP10
          PACK      ST16,SP70,SP10
          PACK      ST17,SP70,SP10
.
          PACK      KEY33,SKEY,SP70
          CALL      RSFMTC2                      * go to start of records
          MOVE      "8",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:9,*EF;                   * clear data area on screen
.
DATQ1000  CALL      RKFMTC2                      * get next record
          BRANCH    OVRCD,DATQ9000               * no more records ?
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          MATCH     KEY14,SKEY
          GOTO      DATQ9000 IF NOT EQUAL        * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMI,ITEMNUM
          GOTO      DATQ2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATQ2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATQ1000 IF LESS             * not up to current page ?
          GOTO      DATQ9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          CALL      RDFMAM1
.
          STORE     KEY14,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P7:LINENO,FMTCTLED,SLASH,FMTCTACC,SP2,FMAMDESC;
          GOTO      DATQ1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATQ9000  MOVE      ZERO,MORE                    * no more data
          GOTO      DATQ9999
.
.---- reached EOP before EOF ----
.
DATQ9500  MOVE      ONE,MORE                     * more data
          MOVE      MAXITEMI,ITEMNUM
.
DATQ9999  RETURN
.******************************************************************************
.* MQSQ - Main question for screen Q             Called By SELQ0000           *
.******************************************************************************
MQSQ0000  MOVE      "0",CCOL
          DISPLAY   *P1:24;
          COMPARE   ONE,PROGNO
          GOTO      MQSQ0100 IF EQUAL
.
          MOVE      "13",CCOL
          DISPLAY   "Select Item, ";
.
MQSQ0100  ADD       "9",CCOL
          DISPLAY   "(",*V2LON,"P",*HOFF,")rint, ";
          COMPARE   ONE,MORE
          GOTO      MQSQ1000 IF NOT EQUAL
.
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
.
MQSQ1000  COMPARE   PAGENO,ONE
          GOTO      MQSQ2000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"L",*HOFF,")ast Page, ";
          ADD       "13",CCOL
.
MQSQ2000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "10",CCOL
.
MQSQ3000  KEYIN     *PCCOL:24,"__":
                    *PCCOL:24,*V2LON,*JR,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
          COMPARE   ONE,MORE
          GOTO      MQSQ4000 IF NOT EQUAL
.
          MATCH     " N",XIM2
          GOTO      MQSQ4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATQ0000
          GOTO      MQSQ0000
.
MQSQ4000  COMPARE   PAGENO,ONE
          GOTO      MQSQ5000 IF EQUAL
.
          MATCH     " L",XIM2
          GOTO      MQSQ5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATQ0000
          GOTO      MQSQ0000
.
MQSQ5000  MATCH     " X",XIM2
          GOTO      MQSQ9500 IF EQUAL
.
          MATCH     " P",XIM2
          GOTO      MQSQ6000 IF NOT EQUAL  * print
          CALL      PRTQ0000
          CALL      DATQ0000
          GOTO      MQSQ0000
.
MQSQ6000  COMPARE   ONE,PROGNO
          GOTO      MQSQ7000 IF EQUAL
          MOVE      ZERO,F2
          MOVE      XIM2,F2
          MOVE      SP70,KEY14
          LOAD      KEY14,F2,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          MATCH     SP70,KEY14
          GOTO      MQSQ7000 IF EQUAL
          PACK      SKEY,KEY14,SP70
          GOTO      MQSQ9000
.
MQSQ7000  BEEP                         * illegal option
          GOTO      MQSQ3000           * get another option
.
MQSQ9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSQ9999
.
MQSQ9500  MOVE      ONE,EXIT           * quit
.
MQSQ9999  RETURN
.******************************************************************************
.* SCRR - Display Screen R                       Called by SELR0000, redisps  *
.******************************************************************************
SCRR0000  DISPLAY   *P1:4,*EF,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,*P44:4,FMLADESC:
                    *P1:5,"    Account              : ":
                    *V2LON,FMAMACCT,*HOFF,*P44:5,FMAMDESC:
                    *P28:7,*V2LON,"Reporting Details":
                    *ULON,*P7:8,"Report Code",*P47:8,"Print Code":
                    *P73:8,"Prt Pos";
.
SCRR9999  RETURN
.******************************************************************************
.* PRTR - Print Screen R                         Called by SELR               *
.******************************************************************************
PRTR0000  MOVE      "13",REPNO
          CALL      HEAD0000                     * print header
.
          PACK      KEY26,SKEY,SP70
          CALL      RSFMRF2                      * go to start of records
.
PRTR1000  CALL      RKFMRF2                      * get next record
          BRANCH    OVRCD,PRTR9999               * no more records ?
          PACK      KEY14,FMRFLED,FMRFACC,SP70
          MATCH     KEY14,SKEY
          GOTO      PRTR9999 IF NOT EQUAL        * no more records ?
.
          ADD       ONE,CLNO
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS         * at end of page
          MOVE      SP70,FMLBDESC
          PACK      KEY2,FMRFREP,SP70
          CALL      RDFMLB1
          MOVE      SP70,FMPRDESC
          PACK      KEY3,FMRFPRT,SP70
          CALL      RDFMPR1
.
          PRINT     *7,FMRFREP,SP2,FMLBDESC:
                    *47,FMRFPRT,SP2,FMPRDESC:
                    *74,FMRFPOS
          GOTO      PRTR1000                     * get next record
.
PRTR9999  RETURN
.******************************************************************************
.* SELR - screen R - reporting details           Called By SELG               *
.******************************************************************************
SELR0000  CALL      SCRR0000           * display screen
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
.
          CALL      DATR0000           * display data
          CALL      MQSR0000           * next/prev/exit
.
SELR9999  RETURN
.******************************************************************************
.* DATR - display screen R data                  Called By MQSR,SELR          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMI (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATR0000  PACK      KEY26,SKEY,SP70
          CALL      RSFMRF2                      * go to start of records
          MOVE      "8",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:9,*EF;                   * clear data area on screen
.
DATR1000  CALL      RKFMRF2                      * get next record
          BRANCH    OVRCD,DATR9000               * no more records ?
          PACK      KEY14,FMRFLED,FMRFACC,SP70
          MATCH     KEY14,SKEY
          GOTO      DATR9000 IF NOT EQUAL        * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMI,ITEMNUM
          GOTO      DATR2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATR2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATR1000 IF LESS             * not up to current page ?
          GOTO      DATR9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      SP70,FMLBDESC
          PACK      KEY2,FMRFREP,SP70
          CALL      RDFMLB1
          MOVE      SP70,FMPRDESC
          PACK      KEY3,FMRFPRT,SP70
          CALL      RDFMPR1
.
          DISPLAY   *P7:LINENO,FMRFREP,SP2,FMLBDESC:
                    *P47:LINENO,FMRFPRT,SP2,FMPRDESC:
                    *P74:LINENO,FMRFPOS;
          GOTO      DATR1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATR9000  MOVE      ZERO,MORE                    * no more data
          GOTO      DATR9999
.
.---- reached EOP before EOF ----
.
DATR9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMI,ITEMNUM
.
DATR9999  RETURN
.******************************************************************************
.* MQSR - Main question for screen R             Called By SELR0000           *
.******************************************************************************
MQSR0000  MOVE      "9",CCOL
          DISPLAY   *P1:24,"(",*V2LON,"P",*HOFF,")rint, ";
          COMPARE   ONE,MORE
          GOTO      MQSR1000 IF NOT EQUAL
.
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
.
MQSR1000  COMPARE   PAGENO,ONE
          GOTO      MQSR2000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"L",*HOFF,")ast Page, ";
          ADD       "13",CCOL
.
MQSR2000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "10",CCOL
.
MQSR3000  KEYIN     *PCCOL:24,"_",*PCCOL:24,*V2LON,DIM1,*EL; * get option
          PACK      DIM1,DIM1,SP70
          REP       UPPLOW,DIM1
          COMPARE   ONE,MORE
          GOTO      MQSR4000 IF NOT EQUAL
.
          MATCH     "N",DIM1
          GOTO      MQSR4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATR0000
          GOTO      MQSR0000
.
MQSR4000  COMPARE   PAGENO,ONE
          GOTO      MQSR5000 IF EQUAL
.
          MATCH     "L",DIM1
          GOTO      MQSR5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATR0000
          GOTO      MQSR0000
.
MQSR5000  MATCH     "X",DIM1
          GOTO      MQSR9500 IF EQUAL
.
          MATCH     "P",DIM1
          GOTO      MQSR6000 IF NOT EQUAL  * print
          CALL      PRTR0000
          CALL      DATR0000
          GOTO      MQSR0000
.
MQSR6000  BEEP                         * illegal option
          GOTO      MQSR3000           * get another option
.
MQSR9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSR9999
.
MQSR9500  MOVE      ONE,EXIT           * quit
.
MQSR9999  RETURN
.******************************************************************************
.* SCRL - Display Screen L                       Called by SELL               *
.******************************************************************************
SCRL0000  DISPLAY   *P60:3,*V2LON,"- Respons. Analysis ",*EL,*HOFF:
                    *P1:4,"Enquiry for ",*V2LON,FMAMDESC,*HOFF,SP10:
                    "Code : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*HOFF,*EF:
                    *P1:5,"Accounting Period ",*P35:5,"Ending ":
                    *V2LON,*ULON,*P1:7,"Responsibility":
                    *P45:7,"Current Period",*P67:7,"Year to Date"
.
SCRL9999  RETURN
.**********************************************************************
. SELL - Perform screen L                             Called By ML
.        Requires - SKEY     (current ledger/account)
.                 - PERIODNO (current period)
.        Returns  - EXIT     (1=quit)
.                 - SCRNO    (next screen number)
.**********************************************************************
SELL0000  PACK      KEY14,SKEY
          CALL      RDFMAM1            * get account data
          BRANCH    OVRCD,SELL9300     * account data found ?
          MOVE      FMAMTYPE,SAVTYPE   * save account type
          MOVE      ZERO,DECPLACE
          MOVE      FMAMDPLA,DECPLACE  * get no. of decimal places
          MOVE      ZERO,AVYTD
          MATCH     "7",FMAMTYPE
          GOTO      SELL0020 IF LESS
          MOVE      FMAMAYTD,AVYTD     * save ytd type
SELL0020  MOVE      "1",PAGENO
.
          CALL      SCRL0000           * display screen L
.
SELL0050  CALL      HPER0000           * display period
          CALL      DATL0000
.
SELL0100  CALL      MQSL0000           * get option
.
.---- last period ----
.
SELL1000  COMPARE   " 3",OPTIOND
          GOTO      SELL1100 IF NOT EQUAL
          MOVE      ZERO,DISPERR
          CALL      LPER0000           * get last period
          BRANCH    OVRCD,SELL0100     * no last period to display ?
          GOTO      SELL0050           * redisplay data
.
.---- next period ----
.
SELL1100  COMPARE   " 2",OPTIOND
          GOTO      SELL1200 IF NOT EQUAL
          MOVE      ZERO,DISPERR
          CALL      NPER0000           * get next period
          BRANCH    OVRCD,SELL0100     * no next period to display ?
          GOTO      SELL0050           * redisplay data
.
.---- anal by period ----
.
SELL1200  COMPARE   "-1",OPTIOND
          GOTO      SELL1250 IF NOT EQUAL
          MOVE      "2",SCRNO          * get next screen
          GOTO      SELL9000           * go back to start of screen
.
.---- summary details ----
.
SELL1250  COMPARE   "-2",OPTIOND
          GOTO      SELL1300 IF NOT EQUAL
          MOVE      "1",SCRNO          * get next screen
          GOTO      SELL9000           * go back to start of screen
.
.---- committed details ----
.
SELL1300  COMPARE   "-3",OPTIOND
          GOTO      SELL1500 IF NOT EQUAL
          MOVE      "4",SCRNO          * get next screen
          GOTO      SELL9000           * go back to start of screen
.
.---- next screen ----
.
SELL1500  COMPARE   "-4",OPTIOND
          GOTO      SELL1600 IF NOT EQUAL
          CALL      NEXT0000           * get next screen
          GOTO      SELL9000           * go back to start of screen
.
.---- last screen ----
.
SELL1600  COMPARE   "-5",OPTIOND
          GOTO      SELL1700 IF NOT EQUAL
          CALL      LAST0000           * get last screen
          GOTO      SELL9000           * go back to start of screen
.
.---- change account ----
.
SELL1700  COMPARE   "-6",OPTIOND
          GOTO      SELL1750 IF NOT EQUAL
          CALL      KACC0000           * get new account
          GOTO      SELL9000           * go back to start of screen
.
.---- dissection ----
.
SELL1750  COMPARE   "-7",OPTIOND
          GOTO      SELL1770 IF NOT EQUAL
          MOVE      "6",SCRNO          * get next screen
          GOTO      SELL9000           * go back to start of screen
.
.---- print ----
.
SELL1770  COMPARE   " 1",OPTIOND
          GOTO      SELL1800 IF NOT EQUAL
          CALL      PRTL0000           * print data
          GOTO      SELL0100           * redisplay data
.
.---- exit ----
.
SELL1800  COMPARE   "-9",OPTIOND
          GOTO      SELL1900 IF NOT EQUAL
          GOTO      SELL9500           * quit
.
SELL1900  BEEP
          GOTO      SELL0100
.
.
SELL9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELL9999
.
SELL9300  DISPLAY   *P1:24,*B,*EL,"Account Record Not Found - ";
          CALL      HITENTER
.
SELL9500  MOVE      ONE,EXIT           * quit
.
SELL9999  RETURN
.******************************************************************************
. MQSL - Main question for Screen L             Called By SELL0000
.        Returns  : OPTIOND  (-1=Anal by per, -2=Summary, -3=Committed, 
.                             -4=fwd scr, -5=bk scr, -6=ch acct,
.                             -7=dissection, -9=exit
.                             1=print, 2=next period, 3=last period)
.******************************************************************************
MQSL0000  DISPLAY   *P1:23,"(",*V2LON,"P",*HOFF,")rint, e(":
                    *V2LON,"X",*HOFF,")it, (":
                    *V2LON,"N",*HOFF,")ext Period, (":
                    *V2LON,"L",*HOFF,")ast Period";
          MOVE      ZERO,OPTIOND
          BRANCH    PROGNO,MQSL0500    * display prompt
.
          DISPLAY   *P1:24,"(",*V2LON,"F",*HOFF:
                    ")orward, (",*V2LON,"B",*HOFF:
                    ")ack Screen, (",*V2LON,"C",*HOFF,")hange Account";
          MOVE      "42",CCOL
          GOTO      MQSL0600
.
MQSL0500  DISPLAY   *P1:24,"(",*V2LON,"A",*HOFF,")nalysis by Period, (":
                    *V2LON,"D",*HOFF,")issect. Analysis, (":
                    *V2LON,"S",*HOFF,")ummary";
          MOVE      "52",CCOL
          MATCH     "7",SAVTYPE
          GOTO      MQSL0600 IF NOT LESS
          DISPLAY   ", (",*V2LON,"C",*HOFF,")ommitted";
          ADD       "13",CCOL
.
MQSL0600  COMPARE   ONE,MORE
          GOTO      MQSL1000 IF NOT EQUAL        * any more data ?
          DISPLAY   ", (",*V2LON,"M",*HOFF,")ore";
          ADD       "8",CCOL
.
MQSL1000  DISPLAY   " : ";
          ADD       "4",CCOL
.
MQSL3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,XIM2,*EL; * get option
          PACK      XIM2,XIM2,SP70
          REP       UPPLOW,XIM2
.
          MATCH     " X",XIM2
          GOTO      MQSL3010 IF NOT EQUAL
          MOVE      "-9",OPTIOND       * exit
          GOTO      MQSL9999
.
MQSL3010  MATCH     " P",XIM2
          GOTO      MQSL3020 IF NOT EQUAL
          MOVE      " 1",OPTIOND       * print
          GOTO      MQSL9999
.
MQSL3020  MATCH     " N",XIM2
          GOTO      MQSL3030 IF NOT EQUAL
          MOVE      " 2",OPTIOND       * next period
          GOTO      MQSL9999
.
MQSL3030  MATCH     " L",XIM2
          GOTO      MQSL3050 IF NOT EQUAL
          MOVE      " 3",OPTIOND       * last period
          GOTO      MQSL9999
.
MQSL3050  COMPARE   ONE,MORE
          GOTO      MQSL3100 IF NOT EQUAL        * any more data ?
          MATCH     " M",XIM2
          GOTO      MQSL3100 IF NOT EQUAL
          ADD       ONE,PAGENO                   * get next page
          CALL      DATL0000                     * display data
          GOTO      MQSL0000
.
MQSL3100  COMPARE   ONE,PROGNO
          GOTO      MQSL3400 IF NOT EQUAL        * execute desired options
.
.---- options for IBAFMS20 ----
.
          MATCH     " A",XIM2
          GOTO      MQSL3200 IF NOT EQUAL
          MOVE      "-1",OPTIOND       * anal by period
          GOTO      MQSL9999
.
MQSL3200  MATCH     " S",XIM2
          GOTO      MQSL3300 IF NOT EQUAL
          MOVE      "-2",OPTIOND       * summary
          GOTO      MQSL9999
.
MQSL3300  MATCH     " C",XIM2
          GOTO      MQSL3350 IF NOT EQUAL
          MATCH     "7",SAVTYPE
          GOTO      MQSL3350 IF NOT LESS
          MOVE      "-3",OPTIOND       * committed
          GOTO      MQSL9999
.
MQSL3350  MATCH     " D",XIM2
          GOTO      MQSL3800 IF NOT EQUAL   * dissection analysis
          MOVE      "-7",OPTIOND
          GOTO      MQSB9999
.
.---- options for IBAFMS21 & 22 ----
.
MQSL3400  MATCH     " F",XIM2
          GOTO      MQSL3500 IF NOT EQUAL
          MOVE      "-4",OPTIOND       * fwd screen
          GOTO      MQSL9999
.
MQSL3500  MATCH     " B",XIM2
          GOTO      MQSL3600 IF NOT EQUAL
          MOVE      "-5",OPTIOND       * back screen
          GOTO      MQSL9999
.
MQSL3600  MATCH     " C",XIM2
          GOTO      MQSL3800 IF NOT EQUAL
          MOVE      "-6",OPTIOND       * ch acct
          GOTO      MQSL9999
.
.
MQSL3800  
.
MQSL9999  RETURN
.**********************************************************************
.  CXIM - fix for datform2                             Called By lots
.**********************************************************************
CXIM0000  UNPACK    XIM16,ANS
          MATCH     ANS,SP70
          GOTO      CXIM9999 IF EQUAL
.
          MOVE      ZIM16,XIM16
.
CXIM9999  RETURN
.****************************************************************************
.  GCOD - get subjective and cost codes from account code    Called by lots
.        Requires - ACCOUNT   (account code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.****************************************************************************
GCOD0000  UNPACK    SP70,SUBJCODE,COSTCODE       * clear old vars
          BRANCH    FMSUUD4A,GCOD0100,GCOD0200,GCOD0300,GCOD0400:
                             GCOD0500,GCOD0600,GCOD0700,GCOD0800:
                             GCOD0900,GCOD1000,GCOD1100,GCOD1200
.
GCOD0100  BRANCH    FMSUUD2A,GCOD0110
          UNPACK    ACCOUNT,KEY1,SUBJCODE
          GOTO      GCOD90000
.
GCOD0110  UNPACK    ACCOUNT,KEY1,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0200  BRANCH    FMSUUD2A,GCOD0210
          UNPACK    ACCOUNT,KEY2,SUBJCODE
          GOTO      GCOD90000
.
GCOD0210  UNPACK    ACCOUNT,KEY2,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0300  BRANCH    FMSUUD2A,GCOD0310
          UNPACK    ACCOUNT,KEY3,SUBJCODE
          GOTO      GCOD90000
.
GCOD0310  UNPACK    ACCOUNT,KEY3,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0400  BRANCH    FMSUUD2A,GCOD0410
          UNPACK    ACCOUNT,KEY4,SUBJCODE
          GOTO      GCOD90000
.
GCOD0410  UNPACK    ACCOUNT,KEY4,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0500  BRANCH    FMSUUD2A,GCOD0510
          UNPACK    ACCOUNT,KEY5,SUBJCODE
          GOTO      GCOD90000
.
GCOD0510  UNPACK    ACCOUNT,KEY5,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0600  BRANCH    FMSUUD2A,GCOD0610
          UNPACK    ACCOUNT,KEY6,SUBJCODE
          GOTO      GCOD90000
.
GCOD0610  UNPACK    ACCOUNT,KEY6,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0700  BRANCH    FMSUUD2A,GCOD0710
          UNPACK    ACCOUNT,KEY7,SUBJCODE
          GOTO      GCOD90000
.
GCOD0710  UNPACK    ACCOUNT,KEY7,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0800  BRANCH    FMSUUD2A,GCOD0810
          UNPACK    ACCOUNT,KEY8,SUBJCODE
          GOTO      GCOD90000
.
GCOD0810  UNPACK    ACCOUNT,KEY8,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0900  BRANCH    FMSUUD2A,GCOD0910
          UNPACK    ACCOUNT,KEY9,SUBJCODE
          GOTO      GCOD90000
.
GCOD0910  UNPACK    ACCOUNT,KEY9,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1000  BRANCH    FMSUUD2A,GCOD1010
          UNPACK    ACCOUNT,KEY10,SUBJCODE
          GOTO      GCOD90000
.
GCOD1010  UNPACK    ACCOUNT,KEY10,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1100  BRANCH    FMSUUD2A,GCOD1110
          UNPACK    ACCOUNT,KEY11,SUBJCODE
          GOTO      GCOD90000
.
GCOD1110  UNPACK    ACCOUNT,KEY11,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1200  BRANCH    FMSUUD2A,GCOD1210
          UNPACK    ACCOUNT,KEY12,SUBJCODE
          GOTO      GCOD90000
.
GCOD1210  UNPACK    ACCOUNT,KEY12,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD9000  LOAD      COSTCODE,FMSUUD4A,KEY1,KEY1,KEY1,KEY1:
                                      KEY5,KEY6,KEY7,KEY8:
                                      KEY9,KEY10,KEY11,KEY12
          PACK      SUBJCODE,SUBJCODE,SP70
          PACK      COSTCODE,COSTCODE,SP70
.
GCOD9999  RETURN
.**********************************************************************
. LPER -  get last period                                Called By lots
.        Requires : DISPERR  (1=dont display error message)
.         Returns : OVRCD    (1=no more periods)
.**********************************************************************
LPER0000  UNPACK    SKEY,KEY2
          CALL      RDFMLA1
          PACK      KEY6,FMLALEDG,CURYEAR,SP70
          CALL      RDFMLC1
          CALL      RDXTMA 
.
          COMPARE   "2",PERIODNO
          GOTO      LPER1000 IF LESS
          SUB       ONE,PERIODNO
          GOTO      LPER9000                * got desired period
.
LPER1000  PACK      KEY6,FMLALEDG,CURYEAR,SP70
          CALL      RSFMLC1
          CALL      RPFMLC1
          BRANCH    OVRCD,LPER9500          * no more data ?
          MATCH     FMLALEDG,FMLCLEDG
          GOTO      LPER9500 IF NOT EQUAL   * no more data
          MOVE      "12",PERIODNO
          ADD       FMLAPERS,PERIODNO
          MOVE      FMLCYEAR,CURYEAR
          GOTO      LPER9000                * redisplay data
.
LPER9000  MOVE      ZERO,OVRCD
          GOTO      LPER9999
.
LPER9500  MOVE      ONE,OVRCD
          BRANCH    DISPERR,LPER9999        * dont display error ?
          DISPLAY   *P1:23,*B,*EF,*P1:24,"No More Data Available - ";
          CALL      HITENTER
.
LPER9999  RETURN
.**********************************************************************
. NPER -  get next period                                Called By lots
.        Requires : DISPERR  (1=dont display error message)
.         Returns : OVRCD    (1=no more periods)
.**********************************************************************
NPER0000  UNPACK    SKEY,KEY2
          CALL      RDFMLA1
          PACK      KEY6,FMLALEDG,CURYEAR,SP70
          CALL      RDFMLC1
          CALL      RDXTMA 
.
          MOVE      "12",F2
          ADD       FMLAPERS,F2
          COMPARE   F2,PERIODNO
          GOTO      NPER1000 IF NOT LESS
          ADD       ONE,PERIODNO
          GOTO      NPER8000                * got desired period
.
NPER1000  PACK      KEY6,FMLALEDG,CURYEAR,SP70
          CALL      RSFMLC1
          CALL      RKFMLC1
          BRANCH    OVRCD,NPER9500          * no more data ?
          MATCH     FMLALEDG,FMLCLEDG
          GOTO      NPER9500 IF NOT EQUAL   * no more data
          MOVE      "1",PERIODNO
          MOVE      FMLCYEAR,CURYEAR
          GOTO      NPER8000                * redisplay data
.
NPER8000  COMPARE   ONE,PROGNO
          GOTO      NPER9000 IF NOT EQUAL   * are we in user defined enquiries ?
.
          LOAD      F1,PERIODNO,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN,FMLC05IN:
                                FMLC06IN,FMLC07IN,FMLC08IN,FMLC09IN,FMLC10IN:
                                FMLC11IN,FMLC12IN,FMLC13IN
          BRANCH    F1,NPER9000             * continue if period locked
          CALL      LPER0000                * go back to previous period
          GOTO      NPER9500                * next period not found
.
NPER9000  MOVE      ZERO,OVRCD
          GOTO      NPER9999
.
NPER9500  MOVE      ONE,OVRCD
          BRANCH    DISPERR,NPER9999        * dont display error ?
          DISPLAY   *P1:23,*B,*EF,*P1:24,"No More Data Available - ";
          CALL      HITENTER
.
NPER9999  RETURN
.**********************************************************************
. VSCR - ensures cur. screen is valid for acct type      Called By ML
.        Requires - SAVTYPE, SCRNO
.        Returns  - SCRNO    (valid screen number)
.**********************************************************************
VSCR0000  COMPARE   "8",SCRNO
          GOTO      VSCR9999 IF EQUAL  * print all options ?
          COMPARE   "9",SCRNO
          GOTO      VSCR9999 IF EQUAL  * enquiry screen ?
.
.---- post type ----
.
          MATCH     "6",SAVTYPE
          GOTO      VSCR0100 IF NOT LESS         * post type ?
          BRANCH    SCRNO,VSCR9999,VSCR9999,VSCR0010,VSCR9999:
                          VSCR9999,VSCR0020,VSCR0020
.
VSCR0010  LOAD      SCRNO,PROGNO,ONE,FIVE,FIVE
          GOTO      VSCR9999
.
VSCR0020  COMPARE   ONE,FMCOUST
          GOTO      VSCR9999 IF NOT EQUAL        * dissect/resp screens valid ?
          LOAD      SCRNO,PROGNO,ONE,FIVE,FIVE
          GOTO      VSCR9999
.
.---- heading type ----
.
VSCR0100  MATCH     "7",SAVTYPE
          GOTO      VSCR0200 IF NOT EQUAL        * heading type ?
          MOVE      "5",SCRNO                    * must be static screen
          GOTO      VSCR9999
.
.---- stat posting type ----
.
VSCR0200  MATCH     "8",SAVTYPE
          GOTO      VSCR0300 IF NOT EQUAL        * correct type ?
          BRANCH    SCRNO,VSCR9999,VSCR9999,VSCR0210,VSCR0210:
                          VSCR0210,VSCR0210,VSCR0210
.
VSCR0210  LOAD      SCRNO,PROGNO,ONE,FIVE,FIVE
          GOTO      VSCR9999
.
.---- stat total type ----
.
VSCR0300  MATCH     "9",SAVTYPE
          GOTO      VSCR0400 IF NOT EQUAL        * correct type ?
          BRANCH    SCRNO,VSCR9999,VSCR9999,VSCR9999,VSCR0310:
                          VSCR0310,VSCR0310,VSCR0310
.
VSCR0310  LOAD      SCRNO,PROGNO,ONE,FIVE,FIVE
          GOTO      VSCR9999
.
.---- total type ----
.
VSCR0400  MATCH     "6",SAVTYPE
          GOTO      VSCR9999 IF NOT EQUAL        * correct type ?
          BRANCH    SCRNO,VSCR9999,VSCR9999,VSCR9999,VSCR9999:
                          VSCR9999,VSCR0410,VSCR0410
.
VSCR0410  LOAD      SCRNO,PROGNO,ONE,FIVE,FIVE
          GOTO      VSCR9999
.
VSCR9999  RETURN
.
. Get payment period description from apsppdaf (TERMS)
.
GPAY0000  MOVE      FMTRPPER,KEY2
          OPEN      APSPPDA1,"apsppdaf"
          CALL      RDAPPP1
          IF        OVRCD=1
            MOVE      SP30,APPPDES
          ENDIF
          CLOSE     APSPPDA1
.
GPAY9999  RETURN
.**********************************************************************
. Redisplays
.**********************************************************************
.
RAMAFM00  
RLMCFM00  
RLMAFM00  COMPARE   "9",SCRNO
          GOTO      RLMAFM10 IF EQUAL
          DISPLAY   *P1:4,"    Ledger/Account       : ":
                    *V2LON,FMLALEDG,SLASH,*EF;
          RETURN
.
RLMAFM10  CALL      SCRP0000
          CALL      DATP0000
          RETURN
.
RBTYFM00
          CALL      SCRP0000           * redisplay for Screen A data keyins
          CALL      DATP0000
          PACK      KEY6,SKEY1,SP70
          CALL      RDXTMA
          DISPLAY   *P1:CVERT,*V2LON,SAVITEM,DOT:
                    *P7:CVERT,FMLCYEAR,*EL;
          RETURN
.
