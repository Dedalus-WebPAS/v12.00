.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVREFL                                                    *
.* Desc      :   Data Migration Program to upload O/P Referral data from     *
.*               a third party legacy system into the Allied Health webPAS   *
.*               module.                                                     *
.*****************************************************************************
.* Date      :   04/04/2011                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the convrefl.txt file and    *
.*               for each valid record found, it will write a new allrefaf   *
.*               record for the patient.                                     *
.* Mods      :                                                               *
.*****************************************************************************
.* V12.00.01  15/05/2025  Nikitha B         TSK 0955096                      *
.*            Alphanumeric visit changes - replaced FORM8 with KEY8- SETV000 *
.*            13/05/2025  Ebon Clements   TSK 0955096                        *
.*            Added alphanueric visit number generation - SETV0000 - GENANVIS*
.* V11.02.01  07/02/2022  Thanh T           TSK 0896905                      *
.*            Recompiled for ALLDEPFD changes                                *
.* V10.13.02  23/08/2018  Steve Armstrong   TSK 0845563                      *
.*            Updated WAUD0000 to use CLALLAUD.                              *
.* V10.13.01  31/07/2018  Thanh T           TSK 0845563                      *
.*            Recompiled for ALLAUDFD                                        *
.*****************************************************************************
.*        V10.11.01  21/07/2017  Ebon Clements     TSK 0268970               *
.*                   Change to use OUTCLIFD index 1 instead of index 2       *
.*****************************************************************************
.*        V10.09.01  25/01/2017  Steve Armstrong   TSK 0830055               *
.*                   Mods to CVIS0000 & LINK0000 to ignore eReferral type    *
.*                   ibaalvaf records.                                       *
.*                   Mods to set IBAVTYPE to " 0" (Legacy) in AVIS0000.      *
.*****************************************************************************
.*        V10.08.03  21/10/2016  Steve Armstrong   TSK 0819758               *
.*                   Added new fields ACCDTYP1, ACCDDAT1, ACCDTYP2, ACCDDAT2,*
.*                   ACCDTYP3 & ACCDDAT3.                                    *
.*        V10.08.02  06/09/2016  Steve Armstrong   CAR 0825609               *
.*                   Recompiled for changes to UPACCDAT.                     *
.*        V10.08.01  04/07/2016  Steve Armstrong   TSK 0815948               *
.*                   Added new referral field (REFLUHC4)                     *
.*****************************************************************************
.*        V10.07.03  04/11/2015  Steve Armstrong   CAR 319165                *
.*                   Mods to update added record count for each comment      *
.*                   header record written.                                  *
.*        V10.07.02  12/10/2015  Steve Armstrong   CAR 319165                *
.*                   Added new referral fields (REFLUC20, REFLUC21, REFLUD10,*
.*                   REFLUC25, REFLUYN4 and REFLLINK) for NDHB.  Also added  *
.*                   new record type (2) for referral comments for NDHB.     *
.*        V10.07.01  29/10/2015  Steve Armstrong   CAR 323203                *
.*                   Mods to display the different site codes in the error   *
.*                   message when checking clinic type site against clinic   *
.*                   id site.                                                *
.*****************************************************************************
.*        V10.06.05  22/09/2015  Steve Armstrong   CAR 322099                *
.*                   Added warning message for missing hcp/practice link     *
.*                   record.                                                 *
.*        V10.06.04  17/09/2015  Steve Armstrong   CAR 321862                *
.*                   Fixed temp table definition for clintype                *
.*        V10.06.03  22/07/2015  Steve Armstrong   CAR 318590                *
.*                   Recompiled for changes to UPACCDAT                      *
.*        V10.06.02  21/07/2015  Steve Armstrong   CAR 313398                *
.*                   Removed check for mandatory Referring HCP where HCP     *
.*                   Practice is present.                                    *
.*        V10.06.01  13/04/2015  Steve Armstrong   CAR 313858                *
.*                   Added functionality to handle ACC record types (CRISP). *
.*                   Also made changes to use a single temporary table for   *
.*                   category-codes mapping.                                 *
.*                   Also added REFLPURC, REFLUHC1, REFLORIG, REFLOUTP,      *
.*                   REFLUC22 and REFLCONT fields to the referral detail     *
.*                   record (CRISP).                                         *
.*****************************************************************************
.*        V10.05.01  18/03/2014  Steve Armstrong   CAR 305263                *
.*                   Added mapping file functionality                        *
.*****************************************************************************
.*        V10.04.01  17/03/2014  Steve Armstrong   CAR 296128                *
.*                   Added display of warning message if error records found.*
.*****************************************************************************
.*        V10.03.09  08/08/2013  Steve Armstrong CAR 279184                  *
.*                   Added WAUD0000 (write to allaudaf)                      *
.*        V10.03.08  30/04/2013  Steve Armstrong CAR 284709                  *
.*                   Mods to fix I*C on outcliaf.                            *
.*        V10.03.07  27/04/2013  Steve Armstrong CAR 284427                  *
.*                   Added REFLRHCT.                                         *
.*        V10.03.06  18/04/2013  Steve Armstrong CAR 284521                  *
.*                   Fixed loading of Referring HCP prior to validation of   *
.*                   Referring HCP/Referring HCP Practice.                   *
.*        V10.03.05  27/03/2013  steve Armstrong CAR 283350                  *
.*                   Extended REFLPRO1 from 3 to 9 bytes.                    *
.*        V10.03.04  29/01/2013  Ebon Clements   CAR 262292                  *
.*                   Added interpreter required to upload file               *
.*        V10.03.03  16/03/2012  Steve Armstrong  CAR 261637                 *
.*                   Added new field (REFLSTAT) to upload file format.       *
.*        V10.03.02  30/11/2011  Steve Armstrong  CAR 256065                 *
.*                   Mods to rules around source of hospital.                *
.*                   Also made hospital mandatory.                           *
.*        V10.03.01  17/11/2011  Mike Laming     CAR 240184                  *
.*                   Changes to IBAPOSTF Post Code table -added State to Keys*
.*****************************************************************************
.*        V10.02.03  12/08/2011  Steve Armstrong   CAR 248751                *
.*                   Added check for blank HCP when validating code.         *
.*                   Also made changes when validating clinic id to do so    *
.*                   disregarding date.                                      *
.*        V10.02.02  10/08/2011  Steve Armstrong   CAR 248247                *
.*                   Made Responsible HCP non-mandatory.                     *
.*        V10.02.01  19/07/2011  Steve Armstrong   CAR 240689                *
.*                   Added hospital id field to upload layout.               *
.*        V10.02.00  25/02/2011  Steve Armstrong   CAR 240689                *
.*                   Created program                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ACCCMTFD/INC
          INC       ACCMAPFL/INC
          INC       ALLAUDFD/INC
          INC       ALLCASFD/INC
          INC       ALLCONFD/INC
          INC       ALLDEPFD/INC
          INC       ALLDIAFD/INC
          INC       ALLPRRFD/INC
          INC       ALLREFFD/INC
          INC       ALLRLNFD/INC
          INC       ALLSTSFD/INC
          INC       IBAALVFD/INC
          INC       IBAPOSFD/INC
          INC       OUTCLIFD/INC
          INC       OUTCTYFD/INC
          INC       OUTSITFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PATVISFD/INC
          INC       PATWC1FD/INC
          INC       PMSHCGFD/INC
          INC       PMSHCLFD/INC
          INC       PMSHCPFD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PMSWX1FD/INC
          INC       VISMDTFD/INC
          INC       VISMTXFD/INC
.
.         Temporary Mapping Files
.
.TEMP1  Category-Codes (patcodes)  --
.TEMP2  Insurer (patin1af)          |  These definitions are in ACCMAPFL.INC
.TEMP3  Employer (pateoraf)         |
.TEMP4  HCP (pmshcpaf)              |
.TEMP5  Title (pmstleaf)            |
.TEMP6  Relation (pmsrelaf)        __
.
.
.         Diagnosis Codes - diagcode.dat (alldepaf/alldiaaf)
.
DIAGNFLG  FORM      1                            * Dept/Diag Code mapping flag
TEMP7     IFILE     SQL, FIXED=25, KEY="U1-3,4-12"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
.OLDDEPCD DIM       3        3          1       Old department code
OLDDIAGN  DIM       9        9          4       Old diagnosis code
.NEWDEPCD DIM       3        3         13       New department code
NEWDIAGN  DIM       9        9         16       New diagnosis code
.End of Record                         25
.
.         Hospital File - hospital.dat (pathspaf)
.
HOSPLFLG  FORM      1                            * Hospital mapping flag
TEMP8     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDHOSPL  DIM       3        3          1       Old hospital code
NEWHOSPL  DIM       3        3          4       New hospital code
.End of Record                          7
.
.
.         Clinic Id File - clinicid.dat (outsitaf/outcliaf)
.
CLIIDFLG  FORM      1                            * Site/Clinic Id mapping flag
TEMP9     IFILE     SQL, FIXED=25, KEY="U1-6,7-12"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDSITCD  DIM       6        6          1       Old site code
OLDCLIID  DIM       6        6          7       Old clinic id code
NEWSITCD  DIM       6        6         13       New site code
NEWCLIID  DIM       6        6         19       New clinic id code
.End of Record                         25
.
.
.         Clinic Type - clintype.dat (outsitaf/outctyaf)
.
CLTYPFLG  FORM      1                            * Site/Clinic Type mapping flag
TEMP10    IFILE     SQL, FIXED=25, KEY="U1-6,7-12"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
.OLDSITCD DIM       6        6          1       Old site code
OLDCLTYP  DIM       6        6          7       Old clinic type code
.NEWSITCD DIM       6        6         13       New site code
NEWCLTYP  DIM       6        6         19       New clinic type code
.End of Record                         25
.
.
.         Problem Codes - probcode.dat (alldepaf/allprraf)
.
PROBLFLG  FORM      1                            * Dept/Prob Code mapping flag
TEMP11    IFILE     SQL, FIXED=25, KEY="U1-3,4-12"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDEPCD  DIM       3        3          1       Old department code
OLDPROBL  DIM       9        9          4       Old problem code
NEWDEPCD  DIM       3        3         13       New department code
NEWPROBL  DIM       9        9         16       New problem code
.End of Record                         25
.
.
.         Active O/P Referral Upload file layout - convrefl.txt
.
REFRLUPL  FILE      HL7, FIXED=4012         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
REFLTYPE  DIM       1    1    * A/H record type
.                                     0 = Referral
.PIPE     DIM       1    2    * Pipe Delimiter
REFLURNO  DIM       8    3    * U/R Number                            (alreurno)
.PIPE     DIM       1    11   * Pipe Delimiter
REFLDACT  DIM       8    12   * Date Active (ccyymmdd)                (alredact)
.PIPE     DIM       1    20   * Pipe Delimiter
REFLRDAT  DIM       8    21   * Date of Referral (ccyymmdd)           (alrerdat)
.PIPE     DIM       1    29   * Pipe Delimiter
REFLRHCP  DIM       10   30   * Referring HCP (pmshcpaf)              (alrerhcp)
.PIPE     DIM       1    40   * Pipe Delimiter
REFLDEPT  DIM       3    41   * Department Code (alldepaf)            (alredept)
.PIPE     DIM       1    44   * Pipe Delimiter
REFLPRTY  DIM       3    45   * Priority (Cat PR)                     (alreprty)
.PIPE     DIM       1    48   * Pipe Delimiter
REFLPRO1  DIM       9    49   * Problem Code 1 (allprraf)             (alrepro1)
.PIPE     DIM       1    58   * Pipe Delimiter
REFLSRCE  DIM       3    59   * Source of Referral (outsitaf.ostcatg) (alresrce)
.PIPE     DIM       1    62   * Pipe Delimiter
REFLCOMP  DIM       3    63   * Compensation Code (Cat CL)            (alrecomp)
.PIPE     DIM       1    66   * Pipe Delimiter
REFLHCP   DIM       10   67   * Responsible HCP (pmshcpaf)            (alrehcp)
.PIPE     DIM       1    77   * Pipe Delimiter
REFLDREC  DIM       8    78   * Date Referral Received (ccyymmdd)     (alredrec)
.PIPE     DIM       1    86   * Pipe Delimiter
REFLCTYP  DIM       6    87   * Clinic Type (outctyaf)                (alrectyp)
.PIPE     DIM       1    93   * Pipe Delimiter
REFLFHCP  DIM       60   94   * Free Format Referring HCP             (alrefhcp)
.PIPE     DIM       1    154  * Pipe Delimiter
REFLSTYP  DIM       3    155  * Slot Type (Cat CV)                    (alrestyp)
.PIPE     DIM       1    158  * Pipe Delimiter
REFLPRCM  DIM       50   159  * Free Format Presenting Complaint      (alreprcm)
.PIPE     DIM       1    209  * Pipe Delimiter
REFLPSIT  DIM       6    210  * Preferred Site (outsitaf)             (alrepsit)
.PIPE     DIM       1    216  * Pipe Delimiter
REFLCLID  DIM       6    217  * Clinic Id (outcliaf)                  (alreclid)
.PIPE     DIM       1    223  * Pipe Delimiter
REFLRTYP  DIM       3    224  * Type of Referral (Cat RI)             (alrertyp)
.PIPE     DIM       1    227  * Pipe Delimiter
REFLMDAT  DIM       8    228  * Must be Seen By Date (ccyymmdd)       (alremdat)
.PIPE     DIM       1    236  * Pipe Delimiter
REFLPRDT  DIM       8    237  * Priority Date (ccyymmdd)              (alreprdt)
.PIPE     DIM       1    245  * Pipe Delimiter
REFLCDAT  DIM       8    246  * Date Record Created (ccyymmdd)        (alrecdat)
.PIPE     DIM       1    254  * Pipe Delimiter
rEFLCTIM  DIM       8    255  * Time Record Created (hh:mm:ss)        (alrectim)
.PIPE     DIM       1    263  * Pipe Delimiter
REFLCUID  DIM       10   264  * Web User Created (websecaf)           (alrecuid)
.PIPE     DIM       1    274  * Pipe Delimiter
REFLUDAT  DIM       8    275  * Date Record Updated (ccyymmdd)        (alreudat)
.PIPE     DIM       1    283  * Pipe Delimiter
REFLUTIM  DIM       8    284  * Time Record Updated (hh:mm:ss)        (alreutim)
.PIPE     DIM       1    292  * Pipe Delimiter
REFLUUID  DIM       10   293  * Web User Updated (websecaf)           (alreuuid)
.PIPE     DIM       1    303  * Pipe Delimiter
REFLAVIS  DIM       20   304  * Alternate Visit Number                (ibavavis)
.PIPE     DIM       1    324  * Pipe Delimiter
REFLREXP  DIM       8    325  * Referral Expiry Date (ccyymmdd)       (alrerexp)
.PIPE     DIM       1    333  * Pipe Delimiter
REFLUFR1  DIM       60   334  * User Defined Free Format 1            (alreufr1)
.PIPE     DIM       1    394  * Pipe Delimiter
REFLUFR2  DIM       60   395  * User Defined Free Format 2            (alreufr2)
.PIPE     DIM       1    455  * Pipe Delimiter
REFLRHCR  DIM       10   456  * Referring Practice (pmshcgaf)         (alrerhcr)
.PIPE     DIM       1    466  * Pipe Delimiter
REFLDIA1  DIM       9    467  * Diagnosis Code 1 (alldiaaf)           (alredia1)
.PIPE     DIM       1    476  * Pipe Delimiter
REFLDIA2  DIM       9    477  * Diagnosis Code 2 (alldiaaf)           (alredia2)
.PIPE     DIM       1    486  * Pipe Delimiter
REFLDIA3  DIM       9    487  * Diagnosis Code 3 (alldiaaf)           (alredia3)
.PIPE     DIM       1    496  * Pipe Delimiter
REFLHOSN  DIM       3    497  * Hospital Id (pathspaf)                (alrehosn)
.PIPE     DIM       1    500  * Pipe Delimiter
REFLSTAT  DIM       1    501  * Referral Status                       (alrestat)
.PIPE     DIM       1    502  * Pipe Delimiter
REFLINTR  DIM       1    503  * Interpreter Req'd (Y/N)               (pmvxintr)
.PIPE     DIM       1    504  * Pipe Delimiter
REFLRHCT  DIM       2    505  * Referring Group Count                 (alrerhct)
.PIPE     DIM       1    507  * Pipe Delimiter
REFLPURC  DIM       3    508  * Health Purchaser (Cat HP)             (alrepurc)
.PIPE     DIM       1    511  * Pipe Delimiter
REFLUHC1  DIM       10   512  * Prioritising HCP (pmshcpaf)           (alreuhc1)
.PIPE     DIM       1    522  * Pipe Delimiter
REFLORIG  DIM       30   523  * Referral Originator                   (alreorig)
.PIPE     DIM       1    553  * Pipe Delimiter
REFLOUTP  DIM       3    554  * Outcome of Priority (Cat AO)          (alreoutp)
.PIPE     DIM       1    557  * Pipe Delimiter
REFLUC22  DIM       3    558  * NPF Suspicion of Cancer (Cat lv)      (alreuc22)
.                               Triaging HCP
.PIPE     DIM       1    561  * Pipe Delimiter
REFLCONT  DIM       3    562  * Contract (Cat gb)                     (alrecont)
.PIPE     DIM       1    565  * Pipe Delimiter
REFLUC20  DIM       3    566  * NPF Type Proc. Clinical Exclusion     (alreuc20)
.                               Code (Cat lt)
.PIPE     DIM       1    569  * Pipe Delimiter
REFLUC21  DIM       3    572  * NPF Suspicion of Cancer (Cat lu)      (alreuc21)
.                               Referrer
.PIPE     DIM       1    575  * Pipe Delimiter
REFLUD10  DIM       8    576  * NPF Date Suspicion of Cancer - Triage (alreud10)
.                               (ccyymmdd)
.PIPE     DIM       1    584  * Pipe Delimiter
REFLUC25  DIM       3    585  * UDF Code 25 (Cat ly)                  (alreuc25)
.                               Out of Area Acceptance Reason
.PIPE     DIM       1    588  * Pipe Delimiter
REFLUYN4  DIM       1    589  * Master Referral Indicator             (alreuyn4)
.                               Y = Master Referral
.                               N = Internal Referral
.PIPE     DIM       1    590  * Pipe Delimiter
REFLLINK  DIM       20   591  * Linked Master Referral Visit No.      (alrlvisn)
.                               (for Internal Referral only)
.PIPE     DIM       1    611  * Pipe Delimiter
REFLUHC4  DIM       10   612  * Case Team (allcasaf)                  (alreuhc4)
.
. End of Record          622
.
.
.         ACC Data Records
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
.REFLTYPE DIM       1      1      * A/H record type
.                                     1 = ACC Data
.PIPE     DIM       1      2      * Pipe Delimiter
.REFLURNO DIM       8      3      * U/R Number                        (ptwcurno)
.PIPE     DIM       1      11     * Pipe Delimiter
ACCDNAME  DIM       30     12     * Employer Name                     (wcename)
.PIPE     DIM       1      42     * Pipe Delimiter
ACCDADD1  DIM       35     43     * Employer Address Line 1           (wceadd1)
.PIPE     DIM       1      78     * Pipe Delimiter
ACCDADD2  DIM       35     79     * Employer Address Line 2           (wceadd2)
.PIPE     DIM       1      114    * Pipe Delimiter
ACCDADD3  DIM       35     115    * Employer Address Line 3           (wceadd3)
.PIPE     DIM       1      150    * Pipe Delimiter
ACCDADD4  DIM       35     151    * Employer Address Line 4           (wceadd4)
.PIPE     DIM       1      186    * Pipe Delimiter
ACCDPOST  DIM       8      187    * Employer Postcode                 (wcepost)
.PIPE     DIM       1      195    * Pipe Delimiter
ACCDTELP  DIM       20     196    * Employer Telephone                (wcetele)
.PIPE     DIM       1      216    * Pipe Delimiter
ACCDACDT  DIM       8      217    * Date of Accident (ccyymmdd)       (wcacdat)
.PIPE     DIM       1      225    * Pipe Delimiter
ACCDACPT  DIM       1      226    * Accepted by Ins. Co. (Y/N)        (wcaccpt)
.PIPE     DIM       1      227    * Pipe Delimiter
ACCDINSR  DIM       6      228    * Insurance Company Code            (wcicode)
.PIPE     DIM       1      234    * Pipe Delimiter
ACCDCLNO  DIM       20     235    * Insurance Claim Number            (wcclmno)
.PIPE     DIM       1      255    * Pipe Delimiter
ACCDCOM1  DIM       40     256    * Comments 1                        (wccomn1)
.PIPE     DIM       1      296    * Pipe Delimiter
ACCDCOM2  DIM       40     297    * Comments 2                        (wccomn2)
.PIPE     DIM       1      337    * Pipe Delimiter
ACCDALOC  DIM       50     338    * Accident Location                 (pmwxaloc)
.PIPE     DIM       1      388    * Pipe Delimiter
ACCDCINJ  DIM       3      389    * Cause of Injury (Cat IK)          (pmwxcinj)
.PIPE     DIM       1      392    * Pipe Delimiter
ACCDICOD  DIM       3      393    * Injury Code (Cat IJ)              (pmwxicod)
.PIPE     DIM       1      396    * Pipe Delimiter
ACCDCNAM  DIM       40     397    * Contact Name                      (pmwxcnam)
.PIPE     DIM       1      437    * Pipe Delimiter
ACCDCDTE  DIM       8      438    * Date Record Created (ccyymmdd)    (pmwxcdte)
.PIPE     DIM       1      446    * Pipe Delimiter
ACCDCTIM  DIM       8      447    * Time Record Created (hh:mm:ss)    (pmwxctim)
.PIPE     DIM       1      455    * Pipe Delimiter
ACCDWEBC  DIM       10     456    * WEB User ID Record Creator        (pmwxwebc)
.PIPE     DIM       1      466    * Pipe Delimiter
ACCDLUPD  DIM       8      467    * Last Update Date (ccyymmdd)       (pmwxlupd)
.PIPE     DIM       1      475    * Pipe Delimiter
ACCDLUPT  DIM       8      476    * Last Update Time (hh:mm:ss)       (pmwxlupt)
.PIPE     DIM       1      484    * Pipe Delimiter
ACCDWEBU  DIM       10     485    * WEB User ID Record Updator        (pmwxwebu)
.PIPE     DIM       1      495    * Pipe Delimiter
ACCDACCF  DIM       3      496    * Work Related (Cat IQ)             (pmwxaccf)
.PIPE     DIM       1      499    * Pipe Delimiter
ACCDPLIN  DIM       3      500    * Place Injury Occurred (Cat IP)    (pmwxplin)
.PIPE     DIM       1      503    * Pipe Delimiter
ACCDACTI  DIM       3      504    * Activity When Injured (Cat IO)    (pmwxacti)
.PIPE     DIM       1      507    * Pipe Delimiter
ACCDADTE  DIM       8      508    * ACC Decline Date (ccyymmdd)       (pmwxadte)
.PIPE     DIM       1      516    * Pipe Delimiter
ACCDATME  DIM       8      517    * Accident Time (hh:mm:ss)          (pmwxatme)
.PIPE     DIM       1      525    * Pipe Delimiter
ACCDACLC  DIM       3      526    * Accident Location (Cat IM)        (pmwxaclc)
.PIPE     DIM       1      529    * Pipe Delimiter
ACCDAINZ  DIM       1      530    * Accident in NZ (Y/N)              (pmwxainz)
.PIPE     DIM       1      531    * Pipe Delimiter
ACCDMOVV  DIM       1      532    * Involves Moving Vehicle           (pmwxmovv)
.                                    on Public Road (Y/N)
.PIPE     DIM       1      533    * Pipe Delimiter
ACCDSPTI  DIM       1      534    * Sporting Injury (Y/N)             (pmwxspti)
.PIPE     DIM       1      535    * Pipe Delimiter
ACCDSPRT  DIM       3      536    * Sport Name (Cat IB)               (pmwxsprt)
.PIPE     DIM       1      539    * Pipe Delimiter
ACCDRECI  DIM       1      540    * Recurring Injury Indicator (Y/N)  (pmwxreci)
.PIPE     DIM       1      541    * Pipe Delimiter
ACCDTRIC  DIM       1      542    * Treatment Injury Claim (Y/N)      (pmwxtric)
.PIPE     DIM       1      543    * Pipe Delimiter
ACCDESTA  DIM       3      544    * Employment Status (Cat IF)        (pmwxesta)
.PIPE     DIM       1      547    * Pipe Delimiter
ACCDPDDT  DIM       8      548    * Patient Declaration Date          (pmwxpddt)
.                                     (ccyymmdd)
.PIPE     DIM       1      556    * Pipe Delimiter
ACCDARG1  DIM       20     557    * Authorised Representative         (pmwxarg1)
.                                     Given Name 1
.PIPE     DIM       1      577    * Pipe Delimiter
ACCDARG2  DIM       20     578    * Authorised Representative         (pmwxarg2)
.                                     Given Name 2
.PIPE     DIM       1      598    * Pipe Delimiter
ACCDARSN  DIM       25     599    * Authorised Representative         (pmwxasrn)
.                                     Surname
.PIPE     DIM       1      624    * Pipe Delimiter
ACCDARTL  DIM       4      625    * Authorised Representative         (pmwxartl)
.                                     Title
.PIPE     DIM       1      629    * Pipe Delimiter
ACCDARRP  DIM       10     630    * Authorised Representative         (pmwxarrp)
.                                     Relation
.PIPE     DIM       1      640    * Pipe Delimiter
ACCDASST  DIM       1      641    * Assistance is Required (Y/N)      (pmwxasst)
.PIPE     DIM       1      642    * Pipe Delimiter
ACCDNEED  DIM       1      643    * Need to Call HP (Y/N)             (pmwxneed)
.PIPE     DIM       1      644    * Pipe Delimiter
ACCDCONT  DIM       1      645    * Continue Normal Hours of          (pmwxcont)
.                                     Work (Y/N)
.PIPE     DIM       1      646    * Pipe Delimiter
ACCDALTW  DIM       1      647    * Alternative Work Indicator (Y/N)  (pmwxaltw)
.PIPE     DIM       1      648    * Pipe Delimiter
ACCDTYPA  DIM       3      649    * Type of Alternative Work (Cat IH) (pmwxtypa)
.PIPE     DIM       1      652    * Pipe Delimiter
ACCDSALT  DIM       8      653    * Start Date of Alternative         (pmwxsalt)
.                                     Work (ccyymmdd)
.PIPE     DIM       1      661    * Pipe Delimiter
ACCDHPDA  DIM       2      662    * Hours per Day of Alternative      (pmwxhpda)
.                                     Work
.PIPE     DIM       1      664    * Pipe Delimiter
ACCDUNFD  DIM       3      665    * Unfit for Work for Duration       (pmwxunfd)
.PIPE     DIM       1      668    * Pipe Delimiter
ACCDUNFT  DIM       3      669    * Unfit for Work for Type (Cat UI)  (pmwxunft)
.PIPE     DIM       1      672    * Pipe Delimiter
ACCDFISD  DIM       8      673    * Full Incapacity Start Date        (pmwxfisd)
.                                     (ccyymmdd)
.PIPE     DIM       1      681    * Pipe Delimiter
ACCDRNWD  DIM       8      682    * Return to Normal Work Date        (pmwxrnwd)
.                                     (ccyymmdd)
.PIPE     DIM       1      690    * Pipe Delimiter
ACCDCSTA  DIM       1      691    * Claim Status                      (pmwxcsta)
.                                     0 = Existing
.                                     1 = Parked
.                                     2 = Completed
.PIPE     DIM       1      692    * Pipe Delimiter
ACCDTWRK  DIM       3      693    * Type of Work (Cat IX)             (pmwxtwrk)
.PIPE     DIM       1      696    * Pipe Delimiter
ACCDOEST  DIM       50     697    * Other Employment Status           (pmwxoest)
.PIPE     DIM       1      747    * Pipe Delimiter
ACCDTPRO  DIM       10     748    * HCP Treatment Provider            (pmwxtpro)
.PIPE     DIM       1      758    * Pipe Delimiter
ACCDECOD  DIM       6      759    * Employer Code (pateoraf)          (pmwxecod)
.PIPE     DIM       1      765    * Pipe Delimiter
ACCDTYP1  DIM       3      766    * Hard-coded Comment Type           (accmtype)
.                                     001 = Cause of Injury
.PIPE     DIM       1      769    * Pipe Delimiter
ACCDDAT1  DIM       500    770    * Cause of Injury Comments          (accmdata)
.PIPE     DIM       1     1270    * Pipe Delimiter
ACCDTYP2  DIM       3     1271    * Hard-coded Comment Type           (accmtype)
.                                     002 = Injury Comments
.PIPE     DIM       1     1274    * Pipe Delimiter
ACCDDAT2  DIM       500   1275    * Injury Comments                   (accmdata)
.PIPE     DIM       1     1775    * Pipe Delimiter
ACCDTYP3  DIM       3     1776    * Hard-coded Comment Type           (accmtype)
.                                     003 = Alternative Work Restrictions
.PIPE     DIM       1     1779    * Pipe Delimiter
ACCDDAT3  DIM       500   1780    * Alternative Work Restrictions Comments
.                                                                     (accmdata)
.
. End of Record           2280
.
.         A/H Referral Comment Data Records
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
.REFLTYPE DIM       1      1      * A/H record type
.                                   2 = Comment Data
.PIPE     DIM       1      2      * Pipe Delimiter
.REFLURNO DIM       8      3      * U/R Number                        (alreurno)
.PIPE     DIM       1      11     * Pipe Delimiter
REFLCOMM  DIM       4000   12     * Referral Comments                 (vsmtcmnt)
.                                   (40 x 100 character lines)
.
. End of Record            4012
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ACCCMTYP  DIM       3
ACCCOMNT  DIM       500
ACCCOUNT  FORM      1
ADDCOUNT  FORM      8             * added record count
.
CODCOUNT  FORM      8             * code error record count
COMCOUNT  FORM      8             * comment error record count
COMMTLEN  FORM      4
CURRCENT  FORM      2             * current century
CURRDATE  DIM       8             * current date
.
DATEFLG1  FORM      1             * Date Type flag
.                                     0 = full date (ccyymmdd)
.                                     1 = partial date (ccyymm)
DATEFLG2  FORM      1             * Dates Allowed flag
.                                     0 = any date allowed
.                                     1 = future dates not allowed
.
DIM1A     DIM       1
DIM1B     DIM       1
DIM2C     DIM       2
DIM2D     DIM       2
DIM2H     DIM       2
DIM2M     DIM       2
DIM2S     DIM       2
DIM2Y     DIM       2
DIM3      DIM       3
DIM4      DIM       4
DIM6      DIM       6
DIM33     DIM       33
DIM100    DIM       100
DTECOUNT  FORM      8             * date error record count
DUPCOUNT  FORM      8             * duplicate record count
.
ERORDESC  DIM       70
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
FILEPRFX  DIM       3             * O/P file prefix
FORM3     FORM      3
FORM8     FORM      8
FORM10    FORM      10
.
LINENUMB  FORM      3
.
MANCOUNT  FORM      8             * mandatory field error record count
.
NOTENUMB  FORM      6
NUMCOUNT  FORM      8             * numeric error record count
.
PARCOUNT  FORM      8             * acc record count where parent has error
.
RECCOUNT  FORM      8             * record read counter
.
SAVEDEPT  DIM       3             * saved dept code
SAVEKEY8  DIM       8             * saved visit number
SAVESITE  DIM       6             * saved O/P site code
SAVEURNO  DIM       8             * saved U/R number
SAVPRFX1  DIM       3             * saved O/P file prefix for outctyaf
SAVPRFX2  DIM       3             * saved O/P file prefix for outcliaf
SEQCOUNT  FORM      8             * sequence error record count
.
TEMPCATG  DIM       10            * Category (or HCP for practice validation)
TEMPCODE  DIM       10            * Coded field (length = max code field length)
TEMPDATE  DIM       8
TEMPTIME  DIM       8
TEMPTYPE  FORM      2             * Type of coded field
TIMCOUNT  FORM      8             * time error record count
TIMEFLAG  FORM      1             * time flag
.                                     0 = any time allowed
.                                     1 = future times not allowed
.                                     2 = past times not allowed
TMPFIELD  DIM       8             * Field name
TMPSTRNG  DIM       40            * Temporary string (max field length)
TYPEFORM  FORM      1             * A/H record type
.                                       0 = Referral record
.                                       1 = ACC record
.
UNKCOUNT  FORM      8             * unknown U/R counter
.
VALPARNT  FORM      1             * Valid parent record flag
.                                       0 = valid parent record
.                                       1 = invalid parent record
VCHKFLAG  FORM      1             * Validation flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
WRNCOUNT  FORM      8
WARNDESC  DIM       70
.
.
.
. PROGRAM CONSTANTS
. -----------------
CATGB     INIT      "gb"
CATLT     INIT      "lt"
CATLU     INIT      "lu"
CATLV     INIT      "lv"
CATLY     INIT      "ly"
PIPE      INIT      "|"
TILDA14   INIT      "~~~~~~~~~~~~~~"
.
.
.
PRGID     INIT      "CONVREFL"
PRGNAM    INIT      "Upload Active O/P Referrals"
VERSION   INIT      "V12.00.01"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with upload
.
MAIN1000  CALL      OPEN0000               * open upload file
          BRANCH    EXIT,MAIN0100          * file not found
.
          CALL      DMAP0000               * display mapping files
          CALL      ASKQ0000               * validation run only ?
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      UPLD0000               * process upload
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"acccmtaf";
          OPEN      ACCCMTA1,"acccmtaf"
.
          DISPLAY   *P64:24,"allaudaf";
          OPEN      ALLAUDA1,"allaudaf"
.
          DISPLAY   *P64:24,"allcasaf";
          OPEN      ALLCASA1,"allcasaf"
.
          DISPLAY   *P64:24,"alldepaf";
          OPEN      ALLDEPA1,"alldepaf"
.
          DISPLAY   *P64:24,"alldiaaf";
          OPEN      ALLDIAA1,"alldiaaf"
.
          DISPLAY   *P64:24,"allprraf";
          OPEN      ALLPRRA1,"allprraf"
.
          DISPLAY   *P64:24,"allrefaf";
          OPEN      ALLREFA1,"allrefaf"
.
          DISPLAY   *P64:24,"allrlnaf";
          OPEN      ALLRLNA1,"allrlnaf"
.
          DISPLAY   *P64:24,"allstsaf";
          OPEN      ALLSTSA1,"allstsaf"
.
          DISPLAY   *P64:24,"ibaalvaf";
          OPEN      IBAALVA1,"ibaalvaf"
          OPEN      IBAALVA2,"ibaalvaf"
.
          DISPLAY   *P64:24,"ibapostf";
          OPEN      IBAPOST1,"ibapostf"
.
          DISPLAY   *P64:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"pmshcgaf";
          OPEN      PMSHCGA1,"pmshcgaf"
.
          DISPLAY   *P64:24,"pmshclaf";
          OPEN      PMSHCLA1,"pmshclaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"vismdtaf";
          OPEN      VISMDTA1,"vismdtaf"
.
          DISPLAY   *P64:24,"vismtxaf";
          OPEN      VISMTXA1,"vismtxaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
          READ      CONTROLF,HUND06;*27,ALCNRAUD,*224,ALCNDHOS
.
          MATCH     "1",ALCNRAUD
          IF        @EQUAL
            DISPLAY   *P64:24,"allaudre";
            OPEN      ALLAUDRE,"allaudre"
          ENDIF
.
.         If NZ, open files for ACC data
.
          PERFORM   PTCNHDPS,OPNACC00
.
          MOVE      ONE,CNOUNDLN
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data upload                         *
.*                        TRUE  (1)  Exit selected                           *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run data upload
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               OPEN0000              Called by: MAIN0000   *
.*                  Open upload file (convrefl.txt)                          *
.*****************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      REFRLUPL,"convrefl"
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
.         Open all mapping files.
.
.         Category-Codes mapping file (patcodes)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP1,"catcodes"             * Cat-Code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,CATCDFLG              * no
          ELSE
            MOVE      ONE,CATCDFLG               * yes
          ENDIF
.
.         Insurance mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP2,"insuranc"             * insurance file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,INSRFLAG              * no
          ELSE
            MOVE      ONE,INSRFLAG               * yes
          ENDIF
.
.         Employer mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP3,"employer"             * employer file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,EMPLFLAG              * no
          ELSE
            MOVE      ONE,EMPLFLAG               * yes
          ENDIF
.
.         HCP Code mapping file (pmshcpaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP4,"hcpcode"              * hcp code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HCPCDFLG              * no
          ELSE
            MOVE      ONE,HCPCDFLG               * yes
          ENDIF
.
.         Title (pmstleaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP5,"titlecod"        * Check for title code file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,TITLECOD         * file doesnt exist
          ELSE
            MOVE      ONE,TITLECOD          * file does exist
          ENDIF
.
.         Relationship (pmsrelaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP6,"relation"       * Check for NOK relationship file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,RELATION         * file doesnt exist
          ELSE
            MOVE      ONE,RELATION          * file does exist
          ENDIF
.
.         Diagnosis Code mapping file (alldepaf/alldiaaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP7,"diagcode"             * dept/diag code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DIAGNFLG              * no
          ELSE
            MOVE      ONE,DIAGNFLG               * yes
          ENDIF
.
.         Hospital mapping file (pathspaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP8,"hospital"             * Hospital file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HOSPLFLG              * no
          ELSE
            MOVE      ONE,HOSPLFLG               * yes
          ENDIF
.
.         O/P Site/Clinic Id mapping file (outsitaf/outcliaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP9,"clinicid"             * Site/Clinic Id file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,CLIIDFLG              * no
          ELSE
            MOVE      ONE,CLIIDFLG               * yes
          ENDIF
.
.         Clinic Type Code mapping file (outsitaf/outctyaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP10,"clintype"            * clinic type code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,CLTYPFLG              * no
          ELSE
            MOVE      ONE,CLTYPFLG               * yes
          ENDIF
.
.         Problem Code mapping file (alldepaf/allprraf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP11,"probcode"            * dept/prob code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,PROBLFLG              * no
          ELSE
            MOVE      ONE,PROBLFLG               * yes
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  DISPLAY   *P1:24,*EL,*B,"Upload file - convrefl.txt - not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.******************************************************************************
.*                                  DMAP0000              Called by: MAIN0000 *
.*                       Display File Name & Mapping files                    *
.* Requires: Mapping Flags                                                    *
.******************************************************************************
.
DMAP0000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save current screen
.
          DISPLAY   *P1:4,*EF,*V2LON,SP9,*ULON,"Mapping Tables"
.
          MOVE      DNO,DIM3
          LOAD      DIM3,CATCDFLG,DYES
.
          DISPLAY   *P1:6,*EL,"Mapping Category/Codes (patcodes)      ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,INSRFLAG,DYES
.
          DISPLAY   *P1:7,*EL,"Mapping Insurer Code (patin1af)        ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,EMPLFLAG,DYES
.
          DISPLAY   *P1:8,*EL,"Mapping Employer Code (pateoraf)       ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HCPCDFLG,DYES
.
          DISPLAY   *P1:9,*EL,"Mapping HCP Code (pmshcpaf)            ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,TITLECOD,DYES
.
          DISPLAY   *P1:10,*EL,"Mapping Title Code (pmstleaf)          ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,RELATION,DYES
.
          DISPLAY   *P1:11,*EL,"Mapping Relation Code (pmsrelaf)       ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HOSPLFLG,DYES
.
          DISPLAY   *P1:12,*EL,"Mapping Hospital Code (pathspaf)       ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,CLIIDFLG,DYES
.
          DISPLAY   *P1:13,*EL,"Mapping Site/Clinic Id Code (outcliaf) ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,CLTYPFLG,DYES
.
          DISPLAY   *P1:14,*EL,"Mapping Site/Clinic Type (outctyaf)    ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,PROBLFLG,DYES
.
          DISPLAY   *P1:15,*EL,"Mapping Site/Problem Code (allprraf)   ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DIAGNFLG,DYES
.
          DISPLAY   *P1:16,*EL,"Mapping Site/Diagnosis Code (alldiaaf) ":
                    *V2LON,DIM3
.
          DISPLAY   *P1:24;
          CALL      HITENTER
          CALL      PUTSCR00                     * restore previous screen
.
DMAP9999  RETURN
+
.*****************************************************************************
.*                               ASKQ0000              Called by: MAIN0000   *
.*                  Ask if running validation only                           *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.*****************************************************************************
.
ASKQ0000  MOVE      ANSY,ANS
          KEYIN     *P1:10,*EL,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:10,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DYES,*HOFF:
                      *P35:10,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DNO,*HOFF:
                      *P35:10,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ0000                     * invalid input
.
ASKQ9999  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                  Process the O/P Referral upload records                   *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CURRCENT
.
          DISPLAY   *P1:13,"Processing ",*V2LON,"convrefl.txt",*HOFF:
                    *P1:15,"Started       : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:17,"U/R number    : ":
                    *P1:18,"Records       : "
.
          MOVE      ZERO,WRNCOUNT                * init. warning count
          MOVE      ZERO,RECCOUNT                * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,COMCOUNT                * init. comm error record count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,DTECOUNT                * init. date error record count
          MOVE      ZERO,TIMCOUNT                * init. time error record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
          MOVE      ZERO,NUMCOUNT                * init. num error record count
          MOVE      ZERO,UNKCOUNT                * init. unknown pt record count
          MOVE      ZERO,SEQCOUNT                * init. seq. error record count
          MOVE      ZERO,PARCOUNT                * init. parent error rec. count
          MOVE      SP3,SAVPRFX1                 * clear saved O/P file prefix
          MOVE      SP3,SAVPRFX2                 * clear saved O/P file prefix
          MOVE      SP3,FILEPRFX                 * clear O/P file prefix
          MOVE      SP8,SAVEURNO                 * initialise saved U/R
.
          CALL      HEAD0000                     * Print the report header
.
.         Loop through upload file records.
.         Load in the first two fields as they are common to
.         Referrals and ACC records.
.
UPLD1000  READ      REFRLUPL,SEQ;REFLTYPE,REFLURNO;
          GOTO      UPLD9000 IF OVER
.
          ADD       ONE,RECCOUNT                 * increment records read
          IF        (RECCOUNT%1000) = 0 | RECCOUNT = 1
            DISPLAY   *P17:17,*V2LON,REFLURNO:
                      *P17:18,RECCOUNT;
          ENDIF
.
          PACK      REFLTYPE,REFLTYPE,SP1
          MATCH     SP1,REFLTYPE
          IF        @EQUAL
            MOVE      SP70,DIM33
            MOVE      SP8,SAVEURNO
            MOVE      "A/H record type is blank ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,MANCOUNT               * increment mand. record count
            READ      REFRLUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          TYPE      REFLTYPE
          IF        !@EQUAL
            MOVE      SP70,DIM33
            MOVE      SP8,SAVEURNO
            MOVE      "A/H record type is not numeric ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,NUMCOUNT               * incr. numeric error rec count
            READ      REFRLUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          MOVE      ZERO,TYPEFORM
          MOVE      REFLTYPE,TYPEFORM
          COMPARE   TYPEFORM,TWO                 * a/h record type 0, 1 or 2 ?
          IF        @LESS
            MOVE      SP70,DIM33
            MOVE      SP8,SAVEURNO
            MOVE      "A/H record type is not valid ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,NUMCOUNT               * incr. numeric erorr rec count
            READ      REFRLUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          BRANCH   TYPEFORM,UPLD1100:            * acc record
                            UPLD1200             * comment record
.
.         Referral record type
.
          READ      REFRLUPL,SEQ;REFLDACT,REFLRDAT,REFLRHCP,REFLDEPT,REFLPRTY:
                                 REFLPRO1,REFLSRCE,REFLCOMP,REFLHCP,REFLDREC:
                                 REFLCTYP,REFLFHCP,REFLSTYP,REFLPRCM,REFLPSIT:
                                 REFLCLID,REFLRTYP,REFLMDAT,REFLPRDT,REFLCDAT:
                                 REFLCTIM,REFLCUID,REFLUDAT,REFLUTIM,REFLUUID:
                                 REFLAVIS,REFLREXP,REFLUFR1,REFLUFR2,REFLRHCR:
                                 REFLDIA1,REFLDIA2,REFLDIA3,REFLHOSN,REFLSTAT:
                                 REFLINTR,REFLRHCT,REFLPURC,REFLUHC1,REFLORIG:
                                 REFLOUTP,REFLUC22,REFLCONT,REFLUC20,REFLUC21:
                                 REFLUD10,REFLUC25,REFLUYN4,REFLLINK,REFLUHC4
.
          MOVE      ZERO,NOTENUMB                * init. note number for visit
          GOTO      UPLD1500
.
.         ACC record type
.
UPLD1100  READ      REFRLUPL,SEQ;ACCDNAME,ACCDADD1,ACCDADD2,ACCDADD3,ACCDADD4:
                                 ACCDPOST,ACCDTELP,ACCDACDT,ACCDACPT,ACCDINSR:
                                 ACCDCLNO,ACCDCOM1,ACCDCOM2,ACCDALOC,ACCDCINJ:
                                 ACCDICOD,ACCDCNAM,ACCDCDTE,ACCDCTIM,ACCDWEBC:
                                 ACCDLUPD,ACCDLUPT,ACCDWEBU,ACCDACCF,ACCDPLIN:
                                 ACCDACTI,ACCDADTE,ACCDATME,ACCDACLC,ACCDAINZ:
                                 ACCDMOVV,ACCDSPTI,ACCDSPRT,ACCDRECI,ACCDTRIC:
                                 ACCDESTA,ACCDPDDT,ACCDARG1,ACCDARG2,ACCDARSN:
                                 ACCDARTL,ACCDARRP,ACCDASST,ACCDNEED,ACCDCONT:
                                 ACCDALTW,ACCDTYPA,ACCDSALT,ACCDHPDA,ACCDUNFD:
                                 ACCDUNFT,ACCDFISD,ACCDRNWD,ACCDCSTA,ACCDTWRK:
                                 ACCDOEST,ACCDTPRO,ACCDECOD,ACCDTYP1,ACCDDAT1:
                                 ACCDTYP2,ACCDDAT2,ACCDTYP3,ACCDDAT3
.
          COMPARE   ONE,PTCNHDPS                 * nz ?
          GOTO      UPLD1000 IF NOT EQUAL        * no - ignore record
.
          GOTO      UPLD1500
.
.         A/H comment record type
.
UPLD1200  READ      REFRLUPL,SEQ;REFLCOMM
.
UPLD1500  CALL      POUT0000                     * pad out fields with spaces
.
          BRANCH    TYPEFORM,UPLD2000:           * acc record
                             UPLD3000            * comment record
.
.         Referral type record
.
          CALL      CLALLREF                     * clear database variables
          CALL      CLPATMAS                     * clear patient master vars.
          MOVE      ONE,VALPARNT                 * set for invalid parent
.
          CALL      VURN0000                     * validate U/R
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          MOVE      REFLURNO,SAVEURNO            * save U/R number
          GOTO      UPLD4000
.
.         This is an acc record, so clear the watwc1af & pmswc1af database
.         variables and make sure that the patient hasn't changed from the
.         last referral record.
.
UPLD2000  CALL      CLPATWC1                     * clear patwc1af variables
          CALL      CLPMSWX1                     * clear pmswx1af variables
.
          MATCH     REFLURNO,SAVEURNO            * same U/R as A/H record?
          IF        !@EQUAL
            MOVE      SP70,DIM33
            MOVE      "ACC record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
          GOTO      UPLD4000
.
.         This is a comment record, so make sure that the patient hasn't
.         changed from the last referral record.
.
UPLD3000  MATCH     REFLURNO,SAVEURNO            * same U/R as A/H record?
          IF        !@EQUAL
            MOVE      SP70,DIM33
            MOVE      "Comment record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
.
UPLD4000  CALL      MAND0000                     * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      DVAL0000                     * date validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      TVAL0000                     * time validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VNUM0000                     * validate numeric fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      SETV0000                     * set up file variables
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      CVAL0000                     * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      CVIS0000                     * check for alt. visit id.
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
.         Write the record details to file
.
          BRANCH    TYPEFORM,UPLD5000:           * acc record type
                             UPLD6000            * comment record type
.
.         Referral record type
.
          MOVE      ZERO,VALPARNT                * set flag for valid parent
          BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          MOVE      ALREVISN,KEY8
          CALL      RAALREF1
          IF        OVRCD = 0
            MOVE      "Referral record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
            GOTO      UPLD1000
          ENDIF
.
          CALL      WRALREF1                     * write new record
.
          MOVE      ONE,AUDTTYPE                 * write allaudre record
          CALL      WAALRE00
.
          CALL      WVIS0000                   * write patvisaf/pmsvx1af records
          CALL      WHIS0000                     * write allstsaf record
          CALL      WAUD0000                     * write allaudaf record
          CALL      AVIS0000                     * write alternate visit record
.
.         Note!  LINK0000 needs to be the last task performed for this
.                referral given that it may reposition on a different referral
.                record.
.
          CALL      LINK0000                     * write link record
.
          ADD       ONE,ADDCOUNT                 * increment added record count
          GOTO      UPLD1000                     * get next record
.
.         ACC record type
.
UPLD5000  BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          MOVE      ALREVISN,KEY8
          CALL      WRTACC00                     * common routine from UPACCDAT
          CALL      ACCCOM00                     * process ACC comments
          GOTO      UPLD1000                     * get next record
.
.         Comment record type
.
UPLD6000  BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          CALL      PCOM0000                     * process comments
          GOTO      UPLD1000                     * get next record
.
.         Upload completed
.
UPLD9000  ASSIGN    (CODCOUNT+COMCOUNT+DUPCOUNT+DTECOUNT+TIMCOUNT+MANCOUNT+NUMCOUNT+UNKCOUNT+SEQCOUNT+PARCOUNT),FORM10
          IF        FORM10 > 0 | WRNCOUNT > 0
            CALL      LINE0000                   * print bottom line if errors
          ENDIF
.
          COMPARE   CLNO,FIFTY                   * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P17:18,*V2LON,RECCOUNT,*HOFF:
                    *P1:21,"Finished      : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0 | WRNCOUNT > 0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors/warnings.  Refer to error report."
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",RECCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT,*N:
                    *1,"Duplicate Records detected            - ",DUPCOUNT,*N:
                    *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records with invalid dates detected   - ",DTECOUNT,*N:
                    *1,"Records with invalid times detected   - ",TIMCOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT,*N:
                    *1,"Records with invalid numbers detected - ",NUMCOUNT,*N:
                    *1,"Records out of sequence               - ",SEQCOUNT,*N:
                    *1,"Records with warnings                 - ",WRNCOUNT,*N:
                    *1,"Records with comment errors           - ",COMCOUNT,*N:
                    *1,"Other records with parent errors      - ",PARCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,MAND1000:           * acc record type
                             MAND9000            * comment record
.
.         Referral type records only
.
          MOVE      REFLRDAT,TMPSTRNG
          MOVE      "REFLRDAT",TMPFIELD          * Date of Referral
          CALL      CHKM0000
.
          MOVE      REFLDEPT,TMPSTRNG
          MOVE      "REFLDEPT",TMPFIELD          * Department Code
          CALL      CHKM0000
.
          MOVE      REFLCOMP,TMPSTRNG
          MOVE      "REFLCOMP",TMPFIELD          * Compensation Code
          CALL      CHKM0000
.
          MOVE      REFLRTYP,TMPSTRNG
          MOVE      "REFLRTYP",TMPFIELD          * Type of Referral
          CALL      CHKM0000
.
          MATCH     "1",ALCNDHOS                 * Using dept hospital ?
          GOTO      MAND9000 IF NOT EQUAL        * yes
.
          MOVE      REFLHOSN,TMPSTRNG
          MOVE      "REFLHOSN",TMPFIELD          * no - Hospital
          CALL      CHKM0000
.
          GOTO      MAND9000
.
.         ACC type records only
.
MAND1000  CALL      MANACC00                     * common routine from UPACCDAT
.
MAND9000  BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: TMPSTRNG - field to be checked                                  *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     TMPSTRNG,SP10                * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          PRINT     *1,"< convrefl.txt >"
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"U/R No.",*12,PIPE,*14,"Patient Name":
                    *46,PIPE,*48,"Ref. Date",*59,PIPE,*61,"Error/Warning ":
                    "Description",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  SETV0000              Called by: UPLD0000 *
.*                       Load the record variables                            *
.* Returns: EXIT  0 = Ok to continue                                          *
.*                1 = Error occurred                                          *
.******************************************************************************
.
SETV0000  MOVE      ZERO,ERORFLAG
.
          BRANCH    TYPEFORM,SETV2000:           * acc type record
                             SETV9000            * comment record
.
.         Referral type record only
.         First generate a new visit number
.
          BRANCH    VCHKFLAG,SETV1000            * validation only
.
          READ      CONTROLF,HUND30;*75,PTCNUANV      * Using AN Visit Numbers
.
          MATCH     "1",PTCNUANV
          IF        @EQUAL
            CALL      GANV0000                * Get next AN visit number
            MOVE      PTCNNXTV,KEY8
          ELSE
            MOVE      " 10",PRXCODE                * Set to sector 10
            CALL      GETSLK00                     * Lock sector 10
            READ      CONTROLF,TEN;*1,FORM8
            ADD       ONE,FORM8
            WRITAB    CONTROLF,TEN;*1,FORM8
            CALL      RELSLK00                     * Release sector 10 lock
            SUB       ONE,FORM8      
            MOVE      FORM8,KEY8
          ENDIF
.
          CALL      RDAVISA1                     * visit already on file ?
          COMPARE   ZERO,OVRCD
          GOTO      SETV0000 IF EQUAL            * yes - get next visit no
.
          MOVE      KEY8,ALREVISN
SETV1000  MOVE      ONE,ALRESTAT                 * set status to "Active"
          MOVE      REFLDACT,ALREDACT
          MOVE      REFLRDAT,ALRERDAT
.
          MOVE      REFLRHCP,ALRERHCP
          IF        HCPCDFLG = 1
            MOVE      REFLRHCP,KEY10
            CALL      RDTEMP4                    * hcp code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCPCD,ALRERHCP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLDEPT,ALREDEPT
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,ANSG,REFLDEPT
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALREDEPT        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLPRTY,ALREPRTY
          IF        CATCDFLG = 1
            PACK      KEY5,ANSP,ANSR,REFLPRTY
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALREPRTY        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLPRO1,ALREPRO1
          IF        PROBLFLG = 1
            MOVE      REFLPRO1,KEY9
            CALL      RDTEMP11                   * problem code on map file ?
            IF        OVRCD = 0
              MOVE      NEWPROBL,ALREPRO1        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLCOMP,ALRECOMP
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,ANSL,REFLCOMP
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALRECOMP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLHCP,ALREHCP
          IF        HCPCDFLG = 1
            MOVE      REFLHCP,KEY10
            CALL      RDTEMP4                    * hcp code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCPCD,ALREHCP         * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLDREC,ALREDREC
.
          MOVE      REFLPSIT,SAVESITE
          MOVE      REFLCTYP,ALRECTYP
          IF        CLTYPFLG = 1
            PACK      KEY12,REFLPSIT,REFLCTYP
            CALL      RDTEMP10                   * clinic type on map file ?
            IF        OVRCD = 0
              MOVE      NEWSITCD,SAVESITE        * yes - save site mapped code
              MOVE      NEWCLTYP,ALRECTYP        * load clinic type mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLFHCP,ALREFHCP
.
          MOVE      REFLSTYP,ALRESTYP
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,ANSV,REFLSTYP
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALRESTYP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLPRCM,ALREPRCM
.
          MOVE      REFLPSIT,ALREPSIT
          MOVE      REFLCLID,ALRECLID
          IF        CLIIDFLG = 1
            PACK      KEY12,REFLPSIT,REFLCLID
            CALL      RDTEMP9                    * clinic id on map file ?
            IF        OVRCD = 0
              MOVE      NEWSITCD,ALREPSIT        * yes - load site mapped code
              MOVE      NEWCLIID,ALRECLID        * load clinic id mapped code
            ENDIF
          ENDIF
.
.         Make sure that we have the same O/P site for both
.         clinic id & clinic type
.
          MATCH     SAVESITE,ALREPSIT
          IF        !@EQUAL
            MOVE      "Clinic Id Site ",ERORDESC
            ENDSET    ERORDESC
            APPEND    "(",ERORDESC
            APPEND    ALREPSIT,ERORDESC
            APPEND    ")",ERORDESC
            APPEND    " and Clinic Type Site ",ERORDESC
            APPEND    "(",ERORDESC
            APPEND    SAVESITE,ERORDESC
            APPEND    ")",ERORDESC
            APPEND    " are different",ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,CODCOUNT               * increment code record count
            MOVE      ONE,ERORFLAG
          ENDIF
.
          MOVE      ALREPSIT,KEY6
          CALL      RDSITA1                      * valid code ?
          IF        OVRCD = 0
            MOVE      REFLSRCE,ALRESRCE
            IF        CATCDFLG = 1
              PACK      KEY5,OSTCATG,REFLSRCE
              CALL      RDTEMP1                  * cat-code on map file ?
              IF        OVRCD = 0
                MOVE      NEWCTCOD,ALRESRCE      * yes - load mapped code
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      REFLRTYP,ALRERTYP
          IF        CATCDFLG = 1
            PACK      KEY5,ANSR,ANSI,REFLRTYP
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALRERTYP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLMDAT,ALREMDAT
          MOVE      REFLPRDT,ALREPRDT
          MOVE      REFLCDAT,ALRECDAT
          MOVE      REFLCTIM,ALRECTIM
          MOVE      REFLCUID,ALRECUID
          MOVE      REFLUDAT,ALREUDAT
          MOVE      REFLUTIM,ALREUTIM
          MOVE      REFLUUID,ALREUUID
          MOVE      REFLREXP,ALREREXP
          MOVE      REFLUFR1,ALREUFR1
          MOVE      REFLUFR2,ALREUFR2
          MOVE      REFLRHCR,ALRERHCR
          MOVE      "1 ",ALRERHCT
.
          MOVE      REFLDEPT,SAVEDEPT
          MOVE      REFLDIA1,ALREDIA1
          IF        DIAGNFLG = 1
            PACK      KEY12,REFLDEPT,REFLDIA1
            CALL      RDTEMP7                    * diagnosis on map file ?
            IF        OVRCD = 0
              MOVE      NEWDEPCD,SAVEDEPT        * yes - load dept mapped code
              MOVE      NEWDIAGN,ALREDIA1        * load diagnosis mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLDIA2,ALREDIA2
          IF        DIAGNFLG = 1
            PACK      KEY12,REFLDEPT,REFLDIA2
            CALL      RDTEMP7                    * diagnosis on map file ?
            IF        OVRCD = 0
              MOVE      NEWDEPCD,ALREDEPT        * yes - load dept mapped code
              MOVE      NEWDIAGN,ALREDIA2        * load mapped code
            ENDIF
          ENDIF
.
.         Make sure that we have the same department for diagnosis 1 & 2
.
          MATCH     SAVEDEPT,ALREDEPT
          IF        !@EQUAL
            MOVE      "Diagnosis 1 and 2 have different departments",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,CODCOUNT               * increment code record count
            MOVE      ONE,ERORFLAG
          ENDIF
.
          MOVE      REFLDIA3,ALREDIA3
          IF        DIAGNFLG = 1
            PACK      KEY12,REFLDEPT,REFLDIA3
            CALL      RDTEMP7                    * diagnosis on map file ?
            IF        OVRCD = 0
              MOVE      NEWDEPCD,ALREDEPT        * yes - load dept mapped code
              MOVE      NEWDIAGN,ALREDIA3        * load mapped dept/diag code
            ENDIF
          ENDIF
.
.         Make sure that we have the same department for diagnosis 1 & 3
.
          MATCH     SAVEDEPT,ALREDEPT
          IF        !@EQUAL
            MOVE      "Diagnosis 1 and 3 have different departments",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,CODCOUNT               * increment code record count
            MOVE      ONE,ERORFLAG
          ENDIF
.
          MOVE      REFLHOSN,ALREHOSN
          IF        HOSPLFLG = 1
            MOVE      REFLHOSN,KEY3
            CALL      RDTEMP8                    * hospital on map file ?
            IF        OVRCD = 0
              MOVE      NEWHOSPL,ALREHOSN        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLSTAT,ALRESTAT
          MOVE      REFLRHCT,ALRERHCT
.
          MOVE      REFLPURC,ALREPURC
          IF        CATCDFLG = 1
            PACK      KEY5,ANSH,ANSP,REFLPURC
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALREPURC        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLUHC1,ALREUHC1
          IF        HCPCDFLG = 1
            MOVE      REFLUHC1,KEY10
            CALL      RDTEMP4                    * hcp code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCPCD,ALREUHC1        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLORIG,ALREORIG
.
          MOVE      REFLOUTP,ALREOUTP
          IF        CATCDFLG = 1
            PACK      KEY5,ANSA,ANSO,REFLOUTP
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALREOUTP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLUC22,ALREUC22
          IF        CATCDFLG = 1
            PACK      KEY5,CATLV,REFLUC22
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALREUC22        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLCONT,ALRECONT
          IF        CATCDFLG = 1
            PACK      KEY5,CATGB,REFLCONT
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALRECONT        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLUC20,ALREUC20
          IF        CATCDFLG = 1
            PACK      KEY5,CATLT,REFLUC20
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALREUC20        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLUC21,ALREUC21
          IF        CATCDFLG = 1
            PACK      KEY5,CATLU,REFLUC21
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALREUC21        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      REFLUD10,ALREUD10
.
          MOVE      REFLUC25,ALREUC25
          IF        CATCDFLG = 1
            PACK      KEY5,CATLY,REFLUC25
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ALREUC25        * yes - load mapped code
            ENDIF
          ENDIF
.
          MATCH     ANSY,REFLUYN4
          IF        @EQUAL
            MOVE      ONE,ALREUYN4
          ELSE
            MOVE      ZERO,ALREUYN4
          ENDIF
.
          MOVE      REFLUHC4,ALREUHC4
.
.         If there is no user id for creation of the record, then
.         default to program name and date/time of upload.
.
          MATCH     SP10,REFLCUID
          IF        @EQUAL
            MOVE      "CONVREFL  ",ALRECUID
            MOVE      CURRDATE,ALRECDAT
            MOVE      CTIMEIS,ALRECTIM
          ENDIF
.
          GOTO      SETV9000
.
.         ACC type records only
.
SETV2000  MOVE      ALREURNO,PTWCURNO
          MOVE      ALRERDAT,PTWCVDAT
          CALL      SETACC00                     * common routine from UPACCDAT
.
SETV9000  BRANCH    ERORFLAG,SETV9100
.
          MOVE      ZERO,EXIT
          GOTO      SETV9999
.
SETV9100  MOVE      ONE,EXIT
.
SETV9999  RETURN
+
.*****************************************************************************
.*                            WVIS0000             Called by: UPLD0000       *
.*            Write a visit record to patvisaf and pmsvx1af                  *
.*****************************************************************************
.
.         Write a visit record (patvisaf)
.
WVIS0000  CALL      CLPATVIS                     * clear patvisaf fields
.
          MOVE      ALREURNO,PVIURNO             * load patvisaf feilds
          MOVE      ALRERDAT,PVIDATE
          MOVE      ALREVISN,PVIBILL
          MOVE      NINE,PVITYPE
          MOVE      TWO,PVISTAT
          MOVE      ONE,PVITRAN
          MOVE      ALREPSIT,PVISITE
          MOVE      " 2",PVISYST
.
          MOVE      PVIBILL,KEY8
          CALL      RDAVISA1                     * visit on file already ? 
          IF        OVRCD = 1
            CALL      WRPTVIS1                   * no
          ELSE
            MOVE      "Visit record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
.         Write a visit extension record (pmsvx1af)
.
          CALL      CLPMSVX1                     * clear pmsvx1af fields
.
          MOVE      ALREVISN,PMVXVISN            * load pmsvx1af fields
          MOVE      ALRERDAT,PMVXVSDT
          MOVE      ALREHCP,PMVXDOCA
          MOVE      PPOST,PMVXPOST
          MOVE      ALRERHCP,PMVXRHC1
          MOVE      CURRDATE,PMVXCDTE
          MOVE      CTIMEIS,PMVXCTIM
          MOVE      "CONVREFL  ",PMVXWEBC
.
          PACK      KEY56,PPOST,PSUBRB,SP10,PADD4,SP70                *C-240184
          CALL      RDIBPOS1
          IF        OVRCD = 0
            MOVE      IBPOASGC,PMVXASGC
          ELSE                                                        *I-240184
            PACK      KEY56,PPOST,PSUBRB,SP70
            CALL      RSIBPOS1
            CALL      RKIBPOS1
            BRANCH    OVRCD,WVIS2000
            MATCH     PPOST,IBPOPCOD
            IF        @EQUAL
              MATCH     PSUBRB,IBPOSUBR
              IF        @EQUAL
                MOVE      IBPOASGC,PMVXASGC
              ENDIF
            ENDIF
          ENDIF
.
WVIS2000  MOVE      ALREHOSN,PMVXMHOS
.
          MATCH     ANSY,REFLINTR
          IF        @EQUAL
            MOVE      ONE,PMVXINTR
          ELSE
            MOVE      ZERO,PMVXINTR
          ENDIF
.
          MATCH     "1",PMVXINTR
          IF        @EQUAL
            MOVE      PMPXLNG1,PMVXLNG1
          ENDIF
.
          MOVE      ALREVISN,KEY8
          CALL      RAPMVX11                     * visit on file already ?
          IF        OVRCD=1
            CALL      WRPMVX11                   * no
          ELSE
            MOVE      "Visit extension record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
WVIS9999  RETURN
+
.*****************************************************************************
.*                            WHIS0000             Called by: UPLD0000       *
.*            Write referral status history record to allstsaf               *
.*****************************************************************************
.
WHIS0000  MOVE      ALREVISN,ALSTVISN
          MOVE      ALRESTAT,ALSTSTAT
          MOVE      ALRERDAT,ALSTSDAT
          MOVE      CURRDATE,ALSTCDAT
          MOVE      CTIMEIS,ALSTCTIM
          MOVE      "CONVREFL  ",ALSTCUID
          MOVE      SP10,ALSTUUID
          MOVE      SP8,ALSTUDAT
          MOVE      SP8,ALSTUTIM
          MOVE      SP20,ALSTSPAR
.
          PACK      KEY17,ALSTVISN,ALSTSTAT,ALSTSDAT
          CALL      RAALSTS1
          IF        OVRCD = 1
            CALL      WRALSTS1
          ELSE
            MOVE      "Referral history record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
WHIS9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces given that we        *
.*            are dealing with pipe delimited records                        *
.*****************************************************************************
.
POUT0000  PACK      REFLURNO,REFLURNO,SP8
          RJUSTIFY  REFLURNO
.
          BRANCH    TYPEFORM,POUT1000:           * acc type record
                             POUT9999            * comment record
.
.         Referral record type only
.
          PACK      REFLDACT,REFLDACT,SP8
          PACK      REFLRDAT,REFLRDAT,SP8
          PACK      REFLRHCP,REFLRHCP,SP10
          PACK      REFLDEPT,REFLDEPT,SP3
          PACK      REFLPRTY,REFLPRTY,SP3
          PACK      REFLPRO1,REFLPRO1,SP9
          PACK      REFLSRCE,REFLSRCE,SP3
          PACK      REFLCOMP,REFLCOMP,SP3
          PACK      REFLHCP,REFLHCP,SP10
          PACK      REFLDREC,REFLDREC,SP8
          PACK      REFLCTYP,REFLCTYP,SP6
          PACK      REFLFHCP,REFLFHCP,SP30,SP30
          PACK      REFLSTYP,REFLSTYP,SP3
          PACK      REFLPRCM,REFLPRCM,SP30,SP20
          PACK      REFLPSIT,REFLPSIT,SP6
          PACK      REFLCLID,REFLCLID,SP6
          PACK      REFLRTYP,REFLRTYP,SP3
          PACK      REFLMDAT,REFLMDAT,SP8
          PACK      REFLPRDT,REFLPRDT,SP8
          PACK      REFLCDAT,REFLCDAT,SP8
          PACK      REFLCTIM,REFLCTIM,SP8
          PACK      REFLCUID,REFLCUID,SP10
          PACK      REFLUDAT,REFLUDAT,SP8
          PACK      REFLUTIM,REFLUTIM,SP8
          PACK      REFLUUID,REFLUUID,SP10
          PACK      REFLAVIS,REFLAVIS,SP20
          PACK      REFLREXP,REFLREXP,SP8
          PACK      REFLUFR1,REFLUFR1,SP30,SP30
          PACK      REFLUFR2,REFLUFR2,SP30,SP30
          PACK      REFLRHCR,REFLRHCR,SP10
          PACK      REFLDIA1,REFLDIA1,SP9
          PACK      REFLDIA2,REFLDIA2,SP9
          PACK      REFLDIA3,REFLDIA3,SP9
          PACK      REFLHOSN,REFLHOSN,SP3
          PACK      REFLSTAT,REFLSTAT,SP1
          PACK      REFLINTR,REFLINTR,SP1
          REP       UPPLOW,REFLINTR
          PACK      REFLRHCT,REFLRHCT,SP2
          RJUSTIFY  REFLRHCT
          PACK      REFLPURC,REFLPURC,SP3
          PACK      REFLUHC1,REFLUHC1,SP10
          PACK      REFLORIG,REFLORIG,SP30
          PACK      REFLOUTP,REFLOUTP,SP3
          PACK      REFLUC22,REFLUC22,SP3
          PACK      REFLCONT,REFLCONT,SP3
          PACK      REFLUC20,REFLUC20,SP3
          PACK      REFLUC21,REFLUC21,SP3
          PACK      REFLUD10,REFLUD10,SP8
          PACK      REFLUC25,REFLUC25,SP3
          PACK      REFLUYN4,REFLUYN4,SP1
          REP       " NnNyY",REFLUYN4
          PACK      REFLLINK,REFLLINK,SP20
          PACK      REFLUHC4,REFLUHC4,SP10
.
          GOTO      POUT9999
.
.         ACC type records only
.
POUT1000  PACK      REFLURNO,REFLURNO,SP8
          RJUSTIFY  REFLURNO
          CALL      PADACC00                     * common routine from UPACCDAT
.
POUT9999  RETURN
+
.*****************************************************************************
.*                              DVAL0000           Called by: UPLD0000       *
.*                  Validate all date fields                                 *
.* Returns:  EXIT - 0 = No date validation errors                            *
.*                  1 = Date validation errors                               *
.*          DTECOUNT - updated count of records with date field errors       *
.*****************************************************************************
.
DVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,DVAL1000:           * acc type only
                             DVAL9000            * comment type only
.
.         Referral type record only
.
          MOVE      REFLDACT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "REFLDACT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      REFLRDAT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "REFLRDAT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      REFLDREC,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "REFLDREC",TMPFIELD
          CALL      VDAT0000
.
          MOVE      REFLMDAT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "REFLMDAT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      REFLPRDT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "REFLPRDT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      REFLCDAT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "REFLCDAT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      REFLUDAT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "REFLUDAT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      REFLREXP,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "REFLREXP",TMPFIELD
          CALL      VDAT0000
.
          MOVE      REFLUD10,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "REFLUD10",TMPFIELD
          CALL      VDAT0000
.
          GOTO      DVAL9000
.
.         ACC type records only
.
DVAL1000  CALL      DTEACC00                     * common routine from UPACCDAT
.
DVAL9000  BRANCH    ERORFLAG,DVAL9100            * errors on date validation
.
          MOVE      ZERO,EXIT                    * no errors on date validation
          GOTO      DVAL9999
.
DVAL9100  ADD       ONE,DTECOUNT                 * incr. date error record count
          MOVE      ONE,EXIT
.
DVAL9999  RETURN
+
.*****************************************************************************
.*                              VDAT0000           Called by: DVAL0000       *
.*                  Validate a date field                                    *
.* Requires:  TEMPDATE - Date in format ccyymmdd                             *
.*            DATEFLG1 - Date Type flag                                      *
.*                          0 = full date (ccyymmdd)                         *
.*                          1 = partial date (ccyymm)                        *
.*            DATEFLG2 - Dates Allowed flag                                  *
.*                          0 = any date allowed                             *
.*                          1 = no future dates allowed                      *
.*            TMPFIELD - Date field name                                     *
.* Returns:   ERORFLAG = 1 if an error in date validation occurs.            *
.*****************************************************************************
.
VDAT0000  MATCH     SP8,TEMPDATE                 * blank date ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Validate that the date has been fully populated
.
          SQUEEZE   TEMPDATE
          MOVELPTR  TEMPDATE,FORM1
          IF        DATEFLG1 = 0 & FORM1 <> 8 | DATEFLG1 = 1 & FORM1 <> 6
            MOVE      "Insufficient digits ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate that the date is numeric
.
VDAT0100  TYPE      TEMPDATE
          IF        !@EQUAL
            MOVE      "Not numeric ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          UNPACK    TEMPDATE,DIM2C,DIM2Y,DIM2M,DIM2D
.
.         Validate the century is >= 18 and <= current century
.
          MOVE      DIM2C,FORM2
          IF        FORM2 < 18 | FORM2 > CURRCENT
            MOVE      "Century not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate the month
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 1 | FORM2 > 12
            MOVE      "Month not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          COMPARE   ONE,DATEFLG1                 * short date (ccyymm) ?
          GOTO      VDAT9999 IF EQUAL            * yes - finished
.
.         Validate the day is:
.              < 32 for January, March, May, July, August, October & December
.              < 31 for April, June, September & November
.              < 29 for February, except in a leap year where it is < 30
.
          BRANCH    FORM2,VDAT1000:              * Jan
                          VDAT3000:              * Feb
                          VDAT1000:              * Mar
                          VDAT2000:              * Apr
                          VDAT1000:              * May
                          VDAT2000:              * Jun
                          VDAT1000:              * Jul
                          VDAT1000:              * Aug
                          VDAT2000:              * Sep
                          VDAT1000:              * Oct
                          VDAT2000:              * Nov
                          VDAT1000               * Dec
.
.         Validate days for month of 31 days
.
VDAT1000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for month of 30 days
.
VDAT2000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 30
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for February
.         A leap year is one where:
.           1. Every year divisible by 4 is a leap year.
.           2. But every year divisible by 100 is NOT a leap year
.           3. Unless the year is also divisible by 400, then it is still a
.              leap year.
.
VDAT3000  MOVE      DIM2D,FORM2
          PACK      DIM4,DIM2C,DIM2Y
          MOVE      DIM4,FORM4
          IF        (FORM4%4) = 0
            IF        (FORM4%100) = 0
              IF        (FORM4%400) = 0
                GOTO      VDAT3200
              ENDIF
            ELSE
              GOTO      VDAT3200
            ENDIF
          ENDIF
.
.         Check for normal Feb days
.
VDAT3100  IF        FORM2 < 1 | FORM2 > 28
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Check for leap year Feb days
.
VDAT3200  IF        FORM2 < 1 | FORM2 > 29
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
VDAT3900  MOVE      "Day not valid ",ERORDESC
          CALL      DERR0000
          GOTO      VDAT9999
.
VDAT4000  COMPARE   ZERO,DATEFLG2                * any date allowed ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Make sure the date is not in the future
.
          MATCH     TEMPDATE,CURRDATE
          IF        @LESS
            MOVE      "Cannot be in the future ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
VDAT9999  RETURN
+
.*****************************************************************************
.*                            DERR0000             Called by: VDAT0000       *
.*                    Process date error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:  ERORFLAG = 1 if an error in date validation occurs.             *
.*****************************************************************************
.
DERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set date error flag
.
DERR9999  RETURN
+
.*****************************************************************************
.*                              TVAL0000           Called by: UPLD0000       *
.*                  Validate all time fields                                 *
.* Returns:  EXIT - 0 = No time validation errors                            *
.*                  1 = Time validation errors                               *
.*          TIMCOUNT - updated count of records with time field errors       *
.*****************************************************************************
.
TVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,TVAL1000:           * acc record only
                             TVAL9000            * comment record only
.
.         Referral type record only
.
          MOVE      REFLCDAT,TEMPDATE
          MOVE      REFLCTIM,TEMPTIME            * referral create time
          MOVE      "REFLCTIM",TMPFIELD
          CALL      VTIM0000
.
          MOVE      REFLUDAT,TEMPDATE
          MOVE      REFLUTIM,TEMPTIME            * referral update time
          MOVE      "REFLUTIM",TMPFIELD
          CALL      VTIM0000
.
          GOTO      TVAL9000
.
.         ACC record type
.
TVAL1000  CALL      TIMACC00                     * common routine from UPACCDAT
.
TVAL9000  BRANCH    ERORFLAG,TVAL9100            * errors on time validation
.
          MOVE      ZERO,EXIT                    * no errors on time validation
          GOTO      TVAL9999
.
TVAL9100  ADD       ONE,TIMCOUNT                 * incr. time error record count
          MOVE      ONE,EXIT
.
TVAL9999  RETURN
+
.*****************************************************************************
.*                            VTIM0000             Called by: TVAL0000       *
.*                    Validate time fields                                   *
.* Requires:  TEMPTIME - Time in format hh:mm:ss                             *
.*            TEMPDATE - Date in format ccyymmdd                             *
.*            TMPFIELD - Time field name                                     *
.* Returns:   ERORFLAG = 1 if an error in time validation occurs.            *
.*****************************************************************************
.
VTIM0000  MATCH     SP8,TEMPTIME                 * blank time ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     SP8,TEMPDATE                 * blank date ?
          IF        @EQUAL
            MOVE      "Time without corresponding date ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          UNPACK    TEMPTIME,DIM2H,DIM1A,DIM2M,DIM1B,DIM2S    * (hh:mm:ss)
.
.         Make sure colon's separate the hours, minutes and seconds
.
          MATCH     DIM1A,DIM1B
          GOTO      VTIM1000 IF NOT EQUAL
.
          MATCH     COLON,DIM1A
          GOTO      VTIM1000 IF NOT EQUAL
.
          GOTO      VTIM2000
.
VTIM1000  MOVE      "Format not valid ",ERORDESC
          CALL      TERR0000
          GOTO      VTIM9999
.
.         Validate the hour
.
VTIM2000  MOVE      DIM2H,FORM2
          IF        FORM2 < 0 | FORM2 > 23
            MOVE      "Hour not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the minute
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Minutes not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the second
.
          MOVE      DIM2S,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Seconds not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          MATCH     SP8,TEMPDATE                 * date blank ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
.         Make sure that the transaction time is not in the future
.
          MATCH     TEMPDATE,CURRDATE
          IF        @EQUAL
            MATCH     TEMPTIME,CTIMEIS
            IF        @LESS
              MOVE      "Time in the future ",ERORDESC
              CALL      TERR0000
            ENDIF
          ENDIF
.
VTIM9999  RETURN
+
.*****************************************************************************
.*                            TERR0000             Called by: VTIM0000       *
.*                    Process time error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:   ERORFLAG = 1 if an error in time validation occurs.            *
.*****************************************************************************
.
TERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set time error flag
.
TERR9999  RETURN
+
.*****************************************************************************
.*                            VNUM0000             Called by: UPLD0000       *
.*                    Validate numeric fields                                *
.* Returns:  EXIT - 0 = No numeric validation errors                         *
.*                  1 = Numeric validation errors                            *
.*          NUMCOUNT - updated count of records with numeric field errors    *
.*****************************************************************************
.
VNUM0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,VNUM1000:           * acc record only
                             VNUM9000            * comment record only
.
.         Referral type record only
.         Referral Status numeric field (valid values 0 and 1)
.
          REP       " 0",REFLSTAT
.
          TYPE      REFLSTAT                     * status numeric ?
          GOTO      VNUM0050 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      REFLSTAT,FORM1
          COMPARE   FORM1,ONE                    * status 0 or 1 ?
          GOTO      VNUM0050 IF LESS             * no - error
          GOTO      VNUM0100                     * yes - valid value
.
VNUM0050  MOVE      "REFLSTAT",TMPFIELD
          CALL      NERR0000
.
.         Referring HCP group count numeric field.
.         This field should only be populated where the referring practice
.         code is populated.  If the practice is not blank, then this field
.         will default to one if blank
.
VNUM0100  MATCH     SP10,REFLRHCR                * referring practice blank ?
          IF        @EQUAL
            MOVE      SP2,REFLRHCT
            GOTO      VNUM9000                   * yes - no count required
          ENDIF
.
          MATCH     SP2,REFLRHCT                 * blank ref. practice count ?
          IF        @EQUAL
            MOVE      " 1",REFLRHCT              * yes - default to 1
            GOTO      VNUM9000
          ENDIF
.
          TYPE      REFLRHCT                     * status numeric ?
          GOTO      VNUM0150 IF NOT EQUAL        * no - error
.
          GOTO      VNUM9000                     * yes - valid value
.
VNUM0150  MOVE      "REFLRHCT",TMPFIELD
          CALL      NERR0000
          GOTO      VNUM9000
.
.         ACC record type
.
VNUM1000  CALL      NUMACC00                     * common routine from UPACCDAT
.
VNUM9000  BRANCH    ERORFLAG,VNUM9100            * errors on number validation
.
          MOVE      ZERO,EXIT                    * no errors on no. validation
          GOTO      VNUM9999
.
VNUM9100  ADD       ONE,NUMCOUNT                 * incr. num. error record count
          MOVE      ONE,EXIT
.
VNUM9999  RETURN
+
.*****************************************************************************
.*                            NERR0000             Called by: VNUM0000       *
.*                    Process number error                                   *
.* Requires: TMPFIELD - field name                                           *
.*****************************************************************************
.
NERR0000  MOVE      "Invalid numeric field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set number error flag
.
NERR9999  RETURN
+
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields.                   *
.*        This validation is performed on the database fields just prior     *
.*        to writing the data and after any mappings have been performed.    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,CVAL5000:           * acc type record
                             CVAL9000            * comment type record
.
.         Referral type record only
.
          MATCH     SP3,ALREPRTY                 * blank code ?
          GOTO      CVAL0100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSP,ANSR
          PACK      TEMPCODE,ALREPRTY,SP10
          MOVE      "REFLPRTY",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (priority)
          CALL      VCOD0000
.
CVAL0100  MATCH     SP3,ALRECOMP                 * blank code ?
          GOTO      CVAL0150 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSL
          PACK      TEMPCODE,ALRECOMP,SP10
          MOVE      "REFLCOMP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (claim code)
          CALL      VCOD0000
.
CVAL0150  MATCH     SP3,ALRESTYP                 * blank code ?
          GOTO      CVAL0200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSV
          PACK      TEMPCODE,ALRESTYP,SP10
          MOVE      "REFLSTYP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (slot type)
          CALL      VCOD0000
.
CVAL0200  MATCH     SP3,ALRERTYP                 * blank code ?
          GOTO      CVAL0250 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,ANSI
          PACK      TEMPCODE,ALRERTYP,SP10
          MOVE      "REFLRTYP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (type of referral)
          CALL      VCOD0000
.
CVAL0250  MATCH     SP10,ALRERHCP                * blank code ?
          GOTO      CVAL0300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,ALRERHCP,SP10
          MOVE      "REFLRHCP",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmshcpaf (referring HCP)
          CALL      VCOD0000
.
CVAL0300  MATCH     SP10,ALREHCP                 * blank code ?
          GOTO      CVAL0350 IF EQUAL            * yes
.
          PACK      TEMPCODE,ALREHCP,SP10
          MOVE      "REFLHCP ",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmshcpaf (responsible HCP)
          CALL      VCOD0000
.
CVAL0350  MATCH     SP3,ALREDEPT                 * blank code ?
          GOTO      CVAL0380 IF EQUAL            * yes
.
          PACK      TEMPCODE,ALREDEPT,SP10
          MOVE      "REFLDEPT",TMPFIELD
          MOVE      TEN1,TEMPTYPE                * alldepaf (department code)
          CALL      VCOD0000
.
CVAL0380  MATCH     SP9,ALREPRO1                 * blank code ?
          GOTO      CVAL0400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,ALREPRO1,SP10
          MOVE      "REFLPRO1",TMPFIELD
          MOVE      TEN3,TEMPTYPE                * allprraf (problem code 1)
          CALL      VCOD0000
.
CVAL0400  MATCH     SP10,ALRERHCR                * blank code ?
          GOTO      CVAL0450 IF EQUAL            * yes - no validation req'd
.
          MOVE      ALRERHCP,TEMPCATG
          PACK      TEMPCODE,ALRERHCR,SP10
          MOVE      "REFLRHCR",TMPFIELD
          MOVE      EIGHT,TEMPTYPE               * pmshclaf (referring practice)
          CALL      VCOD0000
.
CVAL0450  MATCH     SP9,ALREDIA1                 * blank code ?
          GOTO      CVAL0460 IF EQUAL            * yes - no validation req'd
.
          MOVE      ALREDEPT,TEMPCATG
          PACK      TEMPCODE,ALREDIA1,SP9
          MOVE      "REFLDIA1",TMPFIELD
          MOVE      NINE,TEMPTYPE                * alldiaaf (diagnosis)
          CALL      VCOD0000
.
CVAL0460  MATCH     SP9,ALREDIA2                 * blank code ?
          GOTO      CVAL0470 IF EQUAL            * yes - no validation req'd
.
          MOVE      ALREDEPT,TEMPCATG
          PACK      TEMPCODE,ALREDIA2,SP9
          MOVE      "REFLDIA2",TMPFIELD
          MOVE      NINE,TEMPTYPE                * alldiaaf (diagnosis)
          CALL      VCOD0000
.
CVAL0470  MATCH     SP9,ALREDIA3                 * blank code ?
          GOTO      CVAL0500 IF EQUAL            * yes - no validation req'd
.
          MOVE      ALREDEPT,TEMPCATG
          PACK      TEMPCODE,ALREDIA3,SP9
          MOVE      "REFLDIA3",TMPFIELD
          MOVE      NINE,TEMPTYPE                * alldiaaf (diagnosis)
          CALL      VCOD0000
.
CVAL0500  MATCH     SP6,ALREPSIT                 * blank code ?
          GOTO      CVAL0600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,ALREPSIT,SP10
          MOVE      "REFLPSIT",TMPFIELD
          MOVE      TEN4,TEMPTYPE                * outsitaf (preferred site)
          CALL      VCOD0000
          BRANCH    EXIT,CVAL0900                * error, so bypass O/P fields
.
.         Note: Preferred Site is required for referral source, clinic type
.               and clinic id.  This check is done as part of the VCOD0000
.               validation.
.
CVAL0600  MATCH     SP3,ALRESRCE                 * blank code ?
          GOTO      CVAL0700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,OSTCATG
          PACK      TEMPCODE,ALRESRCE,SP10
          MOVE      "REFLSRCE",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (source of referral)
          CALL      VCOD0000
.
CVAL0700  MATCH     SP6,ALRECTYP                 * blank code ?
          GOTO      CVAL0800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,ALRECTYP,SP10
          MOVE      "REFLCTYP",TMPFIELD
          MOVE      TEN5,TEMPTYPE                * outctyaf (clinic type)
          CALL      VCOD0000
.
CVAL0800  MATCH     SP6,ALRECLID                 * blank code ?
          GOTO      CVAL0900 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,ALRECLID,SP10
          MOVE      "REFLCLID",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * outcliaf (clinic id)
          CALL      VCOD0000
.
CVAL0900  MATCH     SP3,ALREHOSN                 * blank code ?
          GOTO      CVAL1000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,ALREHOSN,SP10
          MOVE      "REFLHOSN",TMPFIELD
          MOVE      TEN,TEMPTYPE                 * pathspaf (hospital id)
          CALL      VCOD0000
.
CVAL1000  MATCH     SP1,REFLINTR                 * blank code ?
          GOTO      CVAL1100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,REFLINTR,SP10
          MOVE      "REFLINTR",TMPFIELD
          MOVE      TEN2,TEMPTYPE                * Y/N (Interpreter required)
          CALL      VCOD0000
.
          MATCH     ANSY,REFLINTR                * yes interpreter required
          GOTO      CVAL1100 IF NOT EQUAL
.
          MATCH     "1",PMPXINTR
          IF        !@EQUAL
            CLEAR     ERORDESC
            APPEND    "PMI interpreter required mandatory ",ERORDESC
            APPEND    "for referral interpreter required ",ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                     * print error line
            MOVE      ONE,ERORFLAG                 * set number error flag
          ENDIF
.
          MATCH     SP70,PMPXLNG1
          IF        @EQUAL
            CLEAR     ERORDESC
            APPEND    "PMI preferred language mandatory ",ERORDESC
            APPEND    "for referral interpreter required ",ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                     * print error line
            MOVE      ONE,ERORFLAG                 * set number error flag
          ENDIF
.
CVAL1100  MATCH     SP3,ALREPURC                 * blank code ?
          GOTO      CVAL1200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSH,ANSP
          PACK      TEMPCODE,ALREPURC,SP10
          MOVE      "REFLPURC",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (health purchaser)
          CALL      VCOD0000
.
CVAL1200  MATCH     SP10,ALREUHC1                * blank code ?
          GOTO      CVAL1300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,ALREUHC1,SP10
          MOVE      "REFLUHC1",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmshcpaf (prioritising HCP)
          CALL      VCOD0000
.
CVAL1300  MATCH     SP3,ALREOUTP                 * blank code ?
          GOTO      CVAL1400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSA,ANSO
          PACK      TEMPCODE,ALREOUTP,SP10
          MOVE      "REFLOUTP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (priority outcome)
          CALL      VCOD0000
.
CVAL1400  MATCH     SP3,ALREUC22                 * blank code ?
          GOTO      CVAL1500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATLV
          PACK      TEMPCODE,ALREUC22,SP10
          MOVE      "REFLUC22",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (cancer suspicion)
          CALL      VCOD0000
.
CVAL1500  MATCH     SP3,ALRECONT                 * blank code ?
          GOTO      CVAL1600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATGB
          PACK      TEMPCODE,ALRECONT,SP10
          MOVE      "REFLCONT",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (contract)
          CALL      VCOD0000
.
CVAL1600  MATCH     SP3,ALREUC20                 * blank code ?
          GOTO      CVAL1700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATLT
          PACK      TEMPCODE,ALREUC20,SP10
          MOVE      "REFLUC20",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (excl. code)
          CALL      VCOD0000
.
CVAL1700  MATCH     SP3,ALREUC21                 * blank code ?
          GOTO      CVAL1800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATLU
          PACK      TEMPCODE,ALREUC21,SP10
          MOVE      "REFLUC21",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (cnacer referrer)
          CALL      VCOD0000
.
CVAL1800  MATCH     SP3,ALREUC25                 * blank code ?
          GOTO      CVAL1900 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATLY
          PACK      TEMPCODE,ALREUC25,SP10
          MOVE      "REFLUC25",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (accpt. reason)
          CALL      VCOD0000
.
CVAL1900  PACK      TEMPCODE,REFLUYN4,SP10
          MOVE      "REFLUYN4",TMPFIELD
          MOVE      TEN2,TEMPTYPE                * Y/N (Master Referral Flag)
          CALL      VCOD0000
.
          MATCH     SP10,ALREUHC4                * blank code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,ALREUHC4,SP10
          MOVE      "REFLUHC4",TMPFIELD
          MOVE      TEN6,TEMPTYPE                * allcasaf (case team)
          CALL      VCOD0000
.
          GOTO      CVAL9000
.
.         ACC type records only
.
CVAL5000  CALL      CODACC00                     * common routine from UPACCDAT
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100            * errors on code validation
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCATG - temporary category variable                          *
.*           TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.* Returns:  ERORFLAG   0 = no errors have occurred so far                   *
.*                      1 = one or more errors have occurred so far          *
.*           EXIT       0 = no error for this validation                     *
.*                      1 = error for this validation                        *
.*****************************************************************************
.
.         Note: The first 6 branches below must remain in their current
.               sequence as they are called from UPACCDAT for validating
.               ACC coded fields for this program as well as CONVWAIT, CONVBOOK
.               and CONVPADM.
.
VCOD0000  BRANCH    TEMPTYPE,VCOD0100:           * patcodes (category-codes)
                             VCOD0200:           * patin1af
                             VCOD0300:           * pateoraf
                             VCOD0400:           * pmshcpaf
                             VCOD0500:           * pmstleaf
                             VCOD0600:           * pmsrelaf
                             VCOD0700:           * outcliaf
                             VCOD0800:           * pmshcgaf/pmshclaf
                             VCOD0900:           * alldiaaf
                             VCOD1000:           * pathspaf
                             VCOD1100:           * alldepaf
                             VCOD1200:           * Y/N
                             VCOD1300:           * allprraf
                             VCOD1400:           * outsitaf
                             VCOD1500:           * outctyaf
                             VCOD1600            * allcasaf
.
.         Validate a category-coded field (patcodes)
.
VCOD0100  MATCH     "REFLSRCE",TMPFIELD          * referral source code ?
          GOTO      VCOD0150 IF NOT EQUAL        * no
.
          MATCH     SP6,ALREPSIT
          IF        @EQUAL
            MOVE      "Referral Source code requires Preferred Site ",ERORDESC
            CALL      PERR0000                   * print error line
            GOTO      VCOD9200
          ENDIF
.
VCOD0150  PACK      KEY5,TEMPCATG,TEMPCODE
          CALL      RDCODE1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an insurer code field (patin1af)
.
VCOD0200  PACK      KEY6,TEMPCODE,SP10
          CALL      RDINSR1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an employer code field (pateoraf)
.
VCOD0300  PACK      KEY7,ANSE,TEMPCODE,SP10
          CALL      RDPTEOR1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a HCP field (pmshcpaf)
.
VCOD0400  MOVE      TEMPCODE,KEY10
          CALL      RDPMHCP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a title code field (pmstleaf)
.
VCOD0500  PACK      KEY4,TEMPCODE,SP4
          CALL      RDPMTLE1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a relationship code field (pmsrelaf)
.
VCOD0600  PACK      KEY10,TEMPCODE,SP10
          CALL      RDPMREL1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an outpatient clinic id code field (outcliaf)
.
VCOD0700  MATCH     SP6,ALREPSIT
          IF        @EQUAL
            MOVE      "Clinic Id requires Preferred Site ",ERORDESC
            CALL      PERR0000                   * print error line
            GOTO      VCOD9200
          ENDIF
.
.         Note: FILEPRFX will always be populated if the program gets this far
.
          MATCH     FILEPRFX,SAVPRFX2            * same O/P file prefix ?
          GOTO      VCOD0710 IF EQUAL            * yes
.
.         Clear the saved site prefix in case the OPEN fails
.
          MOVE      SP8,SAVPRFX2
.
          CLOSE     OUTCLIA1                     * close current file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,FILEPRFX,FILCLIA1 
          OPEN      OUTCLIA1,CFNAME              * open new file
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Clinic Id file not found (",ERORDESC
            ENDSET    ERORDESC
            APPEND    CFNAME,ERORDESC
            APPEND    RBRACK,ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                   * print error line
            GOTO      VCOD9200
          ENDIF
.
.         The file was opened successfully, so save the site prefix
.
          MOVE      FILEPRFX,SAVPRFX2
.
VCOD0710  MOVE      TEMPCODE,DIM6
          PACK      KEY20,ALREPSIT,DIM6,TILDA14
          CALL      RDCLIA1                      * valid code ?
          IF        OVRCD = 1
            CALL      RDPCLIA1                   * no - read previous record
            BRANCH    OVRCD,VCOD9100             * error
.
            MATCH     OCASITE,ALREPSIT           * same site still ?
            GOTO      VCOD9100 IF NOT EQUAL      * no - error
.
            MATCH     OCACLIN,TEMPCODE           * same clinic id still ?
            GOTO      VCOD9100 IF NOT EQUAL      * no - error
          ENDIF
          GOTO      VCOD9999
.
.         Validate there is a pmshcgaf record for the practice/count.
.
VCOD0800  PACK      KEY12,TEMPCODE,REFLRHCT
          CALL      RDPMHCG1                     * valid practice ?
          BRANCH    OVRCD,VCOD9100               * no - error
.
.         Validate a HCP Practice field (pmshclaf)
.
          MATCH     SP10,TEMPCATG                * yes - blank referring HCP ?
          GOTO      VCOD9999 IF EQUAL            * yes
.
          PACK      KEY20,TEMPCATG,TEMPCODE
          CALL      RDPMHCL1                     * no - valid linked code ?
          IF        OVRCD = 1
            MOVE      "Warning: HCP/Practice Link record not found",WARNDESC
            CALL      WARN0000
          ENDIF
          GOTO      VCOD9999
.
.         Validate a diagnosis field (alldiaaf)
.         Note: Department is a mandatory field.
.
VCOD0900  PACK      KEY12,TEMPCATG,TEMPCODE
          CALL      RDALDIA1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a hospital field (pathspaf)
.
VCOD1000  MOVE      TEMPCODE,KEY3
          CALL      RDPTHSP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an allied health department field (alldepaf)
.
VCOD1100  MOVE      TEMPCODE,KEY3
          CALL      RDALDEP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
.
.         If the upload hospital field (REFLHOSN) was blank, then we need
.         to use the department hospital, as this field is mandatory.
.
          MATCH     SP3,ALREHOSN                 * blank upload hospital ?
          GOTO      VCOD9999 IF NOT EQUAL        * no - finished
.
          MATCH     SP3,ALDEHOSP                 * blank dept. hospital ?
          GOTO      VCOD9100 IF EQUAL            * yes - error
.
          MOVE      ALDEHOSP,ALREHOSN            * no - load hospital
          GOTO      VCOD9999
.
.         Validate a Y/N field
.
VCOD1200  MATCH     ANSY,TEMPCODE                * "Y" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
.
          MATCH     ANSN,TEMPCODE                * "N" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
          GOTO      VCOD9100                     * no - invalid code
.
.         Validate an allied health problem code field (allprraf)
.
VCOD1300  PACK      KEY12,ALREDEPT,TEMPCODE
          CALL      RDALPRR1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an outpatient site code field (outsitaf)
.
VCOD1400  MOVE      TEMPCODE,KEY6
          CALL      RDSITA1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
.
          MATCH     SP3,OSTFILE                  * blank site prefix ?
          GOTO      VCOD9100 IF EQUAL            * yes
.
          MOVE      OSTFILE,FILEPRFX             * yes - load site file prefix
          GOTO      VCOD9999
.
.         Validate an outpatient clinic type code field (outctyaf)
.
VCOD1500  MATCH     SP6,ALREPSIT
          IF        @EQUAL
            MOVE      "Clinic Type requires Preferred Site ",ERORDESC
            CALL      PERR0000                   * print error line
            GOTO      VCOD9200
          ENDIF
.
.         Note: FILEPRFX will always be populated if the program gets this far
.
          MATCH     FILEPRFX,SAVPRFX1            * same O/P file prefix ?
          GOTO      VCOD1510 IF EQUAL            * yes
.
.         Clear the saved site prefix in case the OPEN fails
.
          MOVE      SP8,SAVPRFX1
.
          CLOSE     OUTCTYA1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,FILEPRFX,FILCTYA1 
          OPEN      OUTCTYA1,CFNAME
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Clinic Type file not found (",ERORDESC
            ENDSET    ERORDESC
            APPEND    CFNAME,ERORDESC
            APPEND    RBRACK,ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                   * print error line
            GOTO      VCOD9200
          ENDIF
.
.         The file was opened successfully, so save the site prefix
.
          MOVE      FILEPRFX,SAVPRFX1
.
VCOD1510  PACK      KEY12,REFLPSIT,TEMPCODE
          CALL      RDCTYA1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a case team (allcasaf)
.
VCOD1600  MOVE      TEMPCODE,KEY10
          CALL      RDALCAS1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
VCOD9200  MOVE      ONE,ERORFLAG                 * set code error flag
          MOVE      ONE,EXIT
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: UPLD0000       *
.*                   Print an error detail line               CHKM0000       *
.* Requires: Valid read on PMI records (for name fields)      DERR0000       *
.*           ERORDESC - error description                     VCOD0000       *
.*           CLNO - current page line count                   VURN0000       *
.* Returns:  CLNO - updated page line count                                  *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          MOVE      PSNAME,PACSNAME              * format patient name
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DIM33
.
          UNPACK    REFLRDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          PRINT     *1,PIPE,*3,REFLURNO,*12,PIPE,*14,DIM33,*46,PIPE:
                    *48,CPCDATE,*59,PIPE,*61,ERORDESC,*132,PIPE
          ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
.*****************************************************************************
.*                              WARN0000           Called by: VCOD0000       *
.*                   Print a warning detail line                             *
.* Requires: Valid read on PMI records (for name fields)                     *
.*           WARNDESC - warning description                                  *
.*           CLNO - current page line count                                  *
.*           WRNCOUNT - warning count                                        *
.* Returns:  CLNO - updated page line count                                  *
.*           WRNCOUNT - warning count                                        *
.*****************************************************************************
.
WARN0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          MOVE      PSNAME,PACSNAME              * format patient name
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DIM33
.
          UNPACK    REFLRDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          PRINT     *1,PIPE,*3,REFLURNO,*12,PIPE,*14,DIM33,*46,PIPE:
                    *48,CPCDATE,*59,PIPE,*61,WARNDESC,*132,PIPE
          ADD       ONE,CLNO                     * increment page line count
          ADD       ONE,WRNCOUNT                 * increment warning count
.
WARN9999  RETURN
+
.*****************************************************************************
.*                              VURN0000           Called by: UPLD0000       *
.*                        Validate U/R Number                                *
.* Requires: REFLURNO - U/R number (right justified)                         *
.* Returns:  Valid read on PMI data                                          *
.*           EXIT  0 = PMI record found - ok to continue                     *
.*                 1 = PMI record not found - ignore record                  *
.*          UNKCOUNT - updated count of unknown U/R numbers                  *
.*          REFLURNO - U/R number right justified                            *
.*****************************************************************************
.
VURN0000  MATCH     SP8,REFLURNO                 * blank U/R ?
          IF        @EQUAL
            MOVE      "U/R missing ",ERORDESC    * yes
            GOTO      VURN9150
          ENDIF
.
          MOVE      REFLURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,VURN9100               * no - error
.
          PACK      KEY8,PURNO,SP70
          CALL      RDPMPX21                     * U/R on file ?
          BRANCH    OVRCD,VURN9100               * no - error
.
          COMPARE   ONE,PSTAT                    * merged U/R ?
          GOTO      VURN1000 IF EQUAL            * yes
.
          COMPARE   ONE,PCEASE
          IF        @EQUAL
            MOVE      "Patient deceased ",ERORDESC
            GOTO      VURN9150
          ENDIF
          GOTO      VURN9000
.
.         We have a merged U/R record, so get the new U/R
.
VURN1000  MATCH     PPSNAME,SP20                 * blank previous name field ?
          GOTO      VURN9100 IF EQUAL            * yes - error
.
          MOVE      PPSNAME,REFLURNO             * no - load new U/R
          GOTO      VURN0000                     * get new pmi record
.
VURN9000  MOVE      REFLURNO,ALREURNO            * load U/R number
          MOVE      ZERO,EXIT
          GOTO      VURN9999
.
VURN9100  MOVE      "PMI Record not found ",ERORDESC
VURN9150  CALL      PERR0000                     * print error line
          ADD       ONE,UNKCOUNT                 * increment unknown U/R count
          MOVE      ONE,EXIT
.
VURN9999  RETURN
+
.*****************************************************************************
.*                              CVIS0000           Called by: UPLD0000       *
.*        Check if an alternate visit number record already exists on        *
.*        ibaalvaf.                                                          *
.* Requires: REFLAVIS - Alternate Visit Number (left justified)              *
.* Returns:  EXIT  0 = No errors found                                       *
.*                 1 = Errors found                                          *
.*****************************************************************************
.
CVIS0000  BRANCH    TYPEFORM,CVIS9000:           * acc record type
                             CVIS9000            * comment record type
.
          MATCH     SP20,REFLAVIS                * blank alternate visit no. ?
          GOTO      CVIS9000 IF EQUAL            * yes - finished
.
          PACK      KEY28,REFLAVIS,SP30
          CALL      RSIBALV2                     * position on alt. visit no.
CVIS0500  CALL      RKIBALV2                     * read next record
          BRANCH    OVRCD,CVIS9000               * eof - finished
.
          MATCH     REFLAVIS,IBAVAVIS            * same alt. visit no. ?
          GOTO      CVIS9000 IF NOT EQUAL        * no - finished
.
          MATCH     " 1",IBAVTYPE                * eReferral type record ?
          GOTO      CVIS0500 IF EQUAL            * yes - ignore record
.
.         "Legacy" type record exists
.
          MOVE      "Alternate visit id already exists in ibaalvaf",ERORDESC
          CALL      PERR0000                     * print error line
          ADD       ONE,DUPCOUNT                 * increment dupl. record count
          MOVE      ONE,EXIT
          GOTO      CVIS9999
.
CVIS9000  MOVE      ZERO,EXIT
.
CVIS9999  RETURN
+
.*****************************************************************************
.*                              AVIS0000           Called by: UPLD0000       *
.*        Check if we need to create an alternate visit number record        *
.*        in ibaalvaf.                                                       *
.* Requires: REFLAVIS - Alternate Visit Number (left justified)              *
.*           ALREVISN - webPAS Visit Number (right justified)                *
.*****************************************************************************
.
AVIS0000  MATCH     SP20,REFLAVIS                * blank alternate visit no. ?
          GOTO      AVIS9999 IF EQUAL            * yes - finished
.
          MOVE      ALREVISN,KEY8
          CALL      RAIBALV1                     * webPAS visit already on file?
          IF        OVRCD = 0
            MOVE      "webPAS visit no. already exists on ibaalvaf",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ELSE
            MOVE      ALREVISN,IBAVVISN          * load field data
            MOVE      REFLAVIS,IBAVAVIS
            MOVE      " 0",IBAVTYPE
            CALL      WRIBALV1                   * write alt. visit no. record
          ENDIF
.
AVIS9999  RETURN
+
.*****************************************************************************
.*                          WAUD0000               Called by: PI120000       *
.*            Write audit record to allaudaf                  PI130000       *
.*                                                            PI140000       *
.*****************************************************************************
.
WAUD0000  CALL      CLALLAUD                     * clear allaudaf variables
.
          MOVE      ALREVISN,ALAUVISN
          MOVE      ALRECDAT,ALAUADAT
          MOVE      ALRECTIM,ALAUATIM
          MOVE      "CONVREFL  ",ALAUAUID
          PACK      ALAUUPDT,ANSA,SP1
.
          PACK      KEY24,ALAUVISN,ALAUADAT,ALAUATIM
          CALL      RAALAUD1
          IF        OVRCD = 1
            CALL      WRALAUD1                   * write record
          ENDIF
.
WAUD9999  RETURN
+
.*****************************************************************************
.*                              PCOM0000           Called by: UPLD0000       *
.*                Process any record related comments                        *
.* Requires: REFLCOMM - comments field                                       *
.*           ALREVISN - referral visit number                                *
.*           NOTENUMB - note number                                          *
.*           COMCOUNT - comment error count                                  *
.* Returns:  COMCOUNT - comment error count                                  *
.*****************************************************************************
.
PCOM0000  STRIP     REFLCOMM                     * remove trailing spaces
          MOVELPTR  REFLCOMM,COMMTLEN            * get comment field length
.
          COMPARE   ZERO,COMMTLEN                * any comments ?
          GOTO      PCOM9999 IF EQUAL            * no - finished
.
.         First we need to write a comment header record in vismdtaf
.
          MOVE      ALREVISN,VSMDVISN            * load visit number
          PACK      VSMDTYPE,ZERO,ZERO,EIGHT     * load record type
          ADD       ONE,NOTENUMB                 * increment note number
          MOVE      NOTENUMB,VSMDNOTE
.
          MOVE      CURRDATE,VSMDDATE
          MOVE      CTIMEIS,VSMDTIME
          REP       " 0",VSMDTIME
          MOVE      "CONVREFL  ",VSMDUSER
          MOVE      SP3,VSMDOCCG
          MOVE      ZERO,VSMDDELT
          MOVE      SP8,VSMDDDAT
          MOVE      SP8,VSMDDTIM
          MOVE      SP10,VSMDDUSE
          MOVE      SP3,VSMDDOCC
          PACK      VSMDSPAR,SP70,SP70
.
          PACK      KEY17,VSMDVISN,VSMDTYPE,VSMDNOTE
          CALL      RAVSMDT1                     * record on file already ?
          IF        OVRCD = 1
            CALL      WRVSMDT1                   * no - write new record
            ADD       ONE,ADDCOUNT               * increment added record count
          ELSE
            IF        OVRCD = 0
              MOVE      "Error writing comment header record ",ERORDESC
              CALL      PERR0000                 * print error line
              ADD       ONE,COMCOUNT             * increment comment error count
              GOTO      PCOM9999
            ENDIF
          ENDIF
.
          MOVE      ZERO,LINENUMB                * yes - initialise line number
.
PCOM0500  MOVE      REFLCOMM,DIM100
          PACK      DIM100,DIM100,SP70,SP30      * load comment line
.
          MOVE      VSMDVISN,VSMTVISN            * load visit number
          MOVE      VSMDTYPE,VSMTTYPE            * load record type
          MOVE      VSMDNOTE,VSMTNOTE
          ADD       ONE,LINENUMB                 * increment line number
          MOVE      LINENUMB,VSMTUNIQ
          MOVE      DIM100,VSMTCMNT              * load comment line
          MOVE      SP70,VSMTSPAR
.
          PACK      KEY20,VSMTVISN,VSMTTYPE,VSMTNOTE,VSMTUNIQ
          CALL      RAVSMTX1                     * record on file already ?
          IF        OVRCD = 1
            CALL      WRVSMTX1                   * no - write new record
          ELSE
            IF        OVRCD = 0
              MOVE      "Error writing comment detail records ",ERORDESC
              CALL      PERR0000                 * print error line
              ADD       ONE,COMCOUNT             * increment comment error count
              GOTO      PCOM9999
            ENDIF
          ENDIF
.
          COMPARE   COMMTLEN,HUNDRED             * any comments remaining ?
          GOTO      PCOM9999 IF NOT LESS         * no - finished
.
.         There is at least one more line of comments to load
.
          BUMP      REFLCOMM,100                 * move forward 100 characters
          SUB       HUNDRED,COMMTLEN             * reduce string length by 100
          GOTO      PCOM0500                     * process next line
.
PCOM9999  RETURN
+
.*****************************************************************************
.*                               LINK0000          Called by: UPLD0000       *
.*      If this is a linked internal referral, then write a link record      *
.*****************************************************************************
.
LINK0000  MATCH     "Y",REFLUYN4                 * master referral ?
          GOTO      LINK9999 IF EQUAL            * yes - finished
.
.         We are processing an internal referral record, so check if
.         it is linked to a master referral
.
          MATCH     SP20,REFLLINK                * blank linked visit no. ?
          GOTO      LINK9999 IF EQUAL            * yes - finished
.
.         There is a linked master referral, so check if the number
.         exists on the alternate visit file (ibaalvaf)
.
          PACK      KEY28,REFLLINK,SP30
          CALL      RSIBALV2                     * position on alt. visit no.
LINK0500  CALL      RKIBALV2                     * read next record
          IF        OVRCD = 1
            MOVE      "Warning: Alternate Id not found for linked visit",WARNDESC
            CALL      WARN0000
            GOTO      LINK9999
          ENDIF
.
          MATCH     REFLLINK,IBAVAVIS            * same alt. visit no. ?
          IF        !@EQUAL
            MOVE      "Warning: Alternate Id not found for linked visit",WARNDESC
            CALL      WARN0000
            GOTO      LINK9999
          ENDIF
.
          MATCH     " 1",IBAVTYPE                * eReferral record type ?
          GOTO      LINK0500 IF EQUAL            * yes - ignore record
.
.         We have an alternate id record, so make sure that the referral
.         we are linking to is a master
.
          MOVE      ALREVISN,SAVEKEY8
          MOVE      IBAVVISN,KEY8
          CALL      RDALREF1
          IF        OVRCD = 1
            MOVE      "Warning: Master referral not found for linked visit",WARNDESC
            CALL      WARN0000
            GOTO      LINK9999
          ENDIF
.
          MATCH     "1",ALREUYN4                 * master referral ?
          IF        !@EQUAL
            MOVE      "Warning: Linked visit not a master referral",WARNDESC
            CALL      WARN0000
            GOTO      LINK9999
          ENDIF
.
.         Use the webPAS visit number from the alternate id record
.         to write a linked referral record (allrlnaf)
.
          MOVE      IBAVVISN,ALRLVISN
          MOVE      SAVEKEY8,ALRLLNKV
          MOVE      CURRDATE,ALRLCDAT
          MOVE      CTIMEIS,ALRLCTIM
          REP       " 0",ALRLCTIM
          MOVE      "CONVREFL  ",ALRLCUID
          MOVE      SP70,ALRLSPAR
          PACK      KEY16,ALRLVISN,ALRLLNKV
          CALL      RAALRLN1
          IF        OVRCD = 1
            CALL      WRALRLN1
          ENDIF
.
LINK9999  RETURN
+
.*****************************************************************************
.*        Temp File I/O Routines                                             *
.*****************************************************************************
.
.RDTEMP1  Category-Codes (patcodes)  --
.RDTEMP2  Insurer (patin1af)          |  These routines are in ACCMAPIO.INC
.RDTEMP3  Employer (pateoraf)         |
.RDTEMP4  HCP (pmshcpaf)              |
.RDTEMP5  Title (pmstleaf)            |
.RDTEMP6  Relation (pmsrelaf)        __
.
.
.
.         Diagnosis Code
.
RDTEMP7   MOVE      ZERO,OVRCD
          RESET     KEY12
          READ      TEMP7,KEY12;OLDDEPCD,OLDDIAGN,NEWDEPCD,NEWDIAGN
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Hospital (pathspaf)
.
RDTEMP8   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP8,KEY3;OLDHOSPL,NEWHOSPL
          GOTO      OVERCOND IF OVER
          RETURN
.
.         O/P Clinic Id (outsitaf/outcliaf)
.
RDTEMP9   MOVE      ZERO,OVRCD
          RESET     KEY12
          READ      TEMP9,KEY12;OLDSITCD,OLDCLIID,NEWSITCD,NEWCLIID
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Clinic Type Code
.
RDTEMP10  MOVE      ZERO,OVRCD
          RESET     KEY12
          READ      TEMP10,KEY12;OLDSITCD,OLDCLTYP,NEWSITCD,NEWCLTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Problem Code
.
RDTEMP11  MOVE      ZERO,OVRCD
          RESET     KEY12
          READ      TEMP11,KEY12;OLDDEPCD,OLDPROBL,NEWDEPCD,NEWPROBL
          GOTO      OVERCOND IF OVER
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CLALLAUD
          INC       CLALLREF
          INC       CLPATMAS
          INC       CLPATVIS
          INC       CLPATWC1
          INC       CLPMSVX1
          INC       CLPMSWX1
          INC       GENANVIS
          INC       UPACCDAT
.
          INC       ACCCMTIO/INC
          INC       ACCMAPIO/INC
          INC       ALLAUDIO/INC
          INC       ALLCASIO/INC
          INC       ALLDEPIO/INC
          INC       ALLDIAIO/INC
          INC       ALLPRRIO/INC
          INC       ALLREFIO/INC
          INC       ALLRLNIO/INC
          INC       ALLSTSIO/INC
          INC       IBAALVIO/INC
          INC       IBAPOSIO/INC
          INC       OUTCLIIO/INC
          INC       OUTCTYIO/INC
          INC       OUTSITIO/INC
          INC       PATCODIO/INC
          INC       PATEORIO/INC
          INC       PATIN1IO/INC
          INC       PATHSPIO/INC
          INC       PATMA1IO/INC
          INC       PATVISIO/INC
          INC       PATWC1IO/INC
          INC       PMSHCGIO/INC
          INC       PMSHCLIO/INC
          INC       PMSHCPIO/INC
          INC       PMSPX2IO/INC
          INC       PMSRELIO/INC
          INC       PMSTLEIO/INC
          INC       PMSVX1IO/INC
          INC       PMSWX1IO/INC
          INC       VISMDTIO/INC
          INC       VISMTXIO/INC
