.******************************************************************************
.* System   :  PATIENT SYSTEM                                                 *
.* Program  :  IBAPAT46                                                       *
.* Desc     :  Doctors Summary Reports                                        *
.******************************************************************************
.* Date     :  12/03/1991                                                     *
.* Author   :  DIG                                                            *
.* Comment  :  This is a total re-write of the existing PAT46 due to the new  *
.*             extraction files                                               *
.* Mods     :                                                                 *
.*        V12.00.01  16/05/2025  Ebon Clements  TSK 0955096                   *
.*                   Alphanueric visit number changes                         *
.*        V11.00.01  11/03/2020  J.Tan          TSK 0838262                   *
.*                   Added Effective from and to date to MBS Item file        *
.*        V10.04.02  15/06/2014 Jill Parkinson CAR 301639                     *
.*                   Moved TFILENAM to INIT0000 and KILL0000 on exit          *
.*        V10.04.01  27/02/2014 Ania P           CAR 294994                   *
.*                   Recompiled for PATEXCFD/IO                               *
.*        V10.03.01  31/12/2012 Patrick Adair    CAR 261630                   *
.*                   Removed port number from temp file name                  *
.*        V10.00.01  Mike Laming                 CAR 157391                   *
.*                   Recompiled for changes to PATEX1FD.                      *
.******************************************************************************
.*        V9.03.00  22/07/2004  Pat Dirito       CAR 50673                    *
.*                  Ported from V6.12                                         *
.******************************************************************************
.*        V6.12.01  13/05/2004  CAR 49727   Guomin Fu                         *
.*                  Changed GNDTOPS from FORM 7 to FORM 6 so the last digit   *
.*                  not get truncated when moving into DISPOPS                *
.******************************************************************************
.*        V6.11.01  24/11/2003  CAR 41914   Mike Laming                       *
.*                  Revert from PTXAPLOS to using PTXBNDAY at label LOAD3000  *
.*                  (it wrongly assigned ALL Beddays to Admitting Doctor)     *
.******************************************************************************
.*        V6.10.02  23/05/2003  CAR 39362   Mike Laming                       *
.*                  Also change GNDWARD and change PRINT to check "$" signs   *
.*        V6.10.01  22/05/2003  CAR 39362   Mike Laming                       *
.*                  Change GNDNET to FORM 12.2  to big totals                 *
.*        V6.09.01  18/04/2002  Steve Downing  SRF 16631                      *
.*                  Fixed lumpsum values being printed & lumpsum subtotals    *
.*        V6.09.B01 16/01/2001  Tonii   SRF 4041                              *
.*                  Changed to print Lumpsum Column in report                 *
.******************************************************************************
.*        V6.07.02  20/10/2000  Steve Downing  SRF 5170                       *
.*                  Fixed calculation of bed days                             *
.*        V6.07.01  03/07/2000  Jill Habasque SRF 635029                      *
.*                  Changed beddays to use PTXAPLOS instead of PTXBNDAY       *
.******************************************************************************
.*        V6.06.01  29/10/1999  Greg Horvat                                   *
.*                  Recompiled for changes to PATIOICD & PATIOICO             *
.*        V6.06.B01 11/02/1999  Jill Habasque                                 *
.*                  Fixed DISPHEAD display                                    *
.*          V6.05.01  12/08/1998  Steve Armstrong                             *
.*                    Recompiled for change in length to patexbnn             *
.*          V6.05.B02 01/07/1998  Nick Read                                   *
.*                    Added READs on ICD10 Files                              *
.*          V6.05.B01 10/06/98 J.Tan                                          *
.*                    Changed the sector of extractions                       *
.******************************************************************************
.*             V5.02  03/09/1991  DIG                                         *
.*                    Fixed problem with operations options not picking up    *
.*                    MBS codes properly.                                     *
.*             V5.03  07/02/1992  i chung          SRF 112905                 *
.*                    Added printing of Code for MBS/ICD descriptions.        *
.*                    Used CPRIMOP & CPRIMDS parameters to determine the      *
.*                    printing of primary or all operations/diseases.         *
.*                    Print appropriate titles for primary operations/diseases*
.*                    Highlight extraction file selected.                     *
.*             V5.04  15/01/93 J.Tan  SRF 119867                              *
.*                    Recompiled for PATEXCIO                                 *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
.
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDO1FD/INC
          INC       PATEX1FD/INC
          INC       PATEXBFD/INC
          INC       PATEXCFD/INC
          INC       PATICDFD/INC
          INC       PATICOFD/INC
          INC       PATITMFD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
+
.**********************************************************************
.*                            TEMP FILES                              *
.**********************************************************************
PATTM1XX  IFILE     SQL, FIXED=63, KEY="U1-3,4-9"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMPDTYPE  DIM       3         3          1        Doctor Type
TMPDOC    DIM       6         6          4        Doctor Code
TMPADMNS  FORM      5         4         10        Number of Admissions
TMPBDAYS  FORM      7         5         14        Number of Bed Days
TMPDCASE  FORM      6         4         19        Number of Day Cases
TMPOPER   FORM      6         4         23        Total number of Operations
TMPOPER1  FORM      6         4         27        No. of Operations <= Level 1
TMPOPER2  FORM      6         4         31        Op's > Level 1 and <= Level 2
TMPOPER3  FORM      6         4         35        No. of Operations > Level 2
TMPACCOM  FORM      8.2       6         39        Total Accomodation Charge
TMPTHEAT  FORM      7.2       6         45        Total Theatre Charge
TMPMISC   FORM      7.2       6         51        Total Miscellaneous Charge
TMPLSUM   FORM      7.2       6         57        Lumpsum
.End of Record                          63
.
PATTM2XX  IFILE     SQL, FIXED=35, KEY="U1-3,4-9,10-18"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMPDTYP2  DIM       3         3          1        Doctor Type
TMPDOC2   DIM       6         6          4        Doctor Code
TMPOPDIS  DIM       9         9         10        Operation/Disease Code
TMPOPS2   FORM      6         4         19        Total Number of Operations
TMPOPR12  FORM      6         4         23        No. of Operations <= Level 1
TMPOPR22  FORM      6         4         27        Op's > Level 1 and <= Level 2
TMPOPR32  FORM      6         4         31        No. of Operations > Level 2
.End of Record                          35
+
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
AVDAY     FORM      5.2
.
BEDDAYS   FORM      7
.
CMDLINE   DIM       50
.
DIM16     DIM       16
DESCDOC   DIM       19
DESCDOC2  DIM       40
DESCTYPE  DIM       19
DISPOPS   DIM       6
DISPOPS1  DIM       6
DISPOPS2  DIM       6
DISPOPS3  DIM       6
DOCTNAM   DIM       40
DOCTYPE   DIM       9
DOCWORD   DIM       6
.
EXCDATE   DIM       10
EXFDATE   DIM       10
EXTDATE   DIM       10
.
FILETMP1  DIM       8
FILETMP2  DIM       8
FLAGATTD  FORM      1
FLAGTMP2  FORM      1
FNAMEA    DIM       8
FNAMEB    DIM       8
FNAMEC    DIM       8
FORM8P2   FORM      8.2
FORM12P2  FORM      12.2                                               *I-61001 
.
GNDADMNS  FORM      5
GNDAVRG   FORM      5.2
GNDBDAYS  FORM      7
GNDDAYCS  FORM      6
GNDMISC   FORM      7.2
GNDLSUM   FORM      7.2
....GNDNET    FORM      8.2                                             D-61001 
GNDNET    FORM      10.2                                               *I-61001 
GNDOPS1   FORM      6
GNDOPS2   FORM      6
GNDOPS3   FORM      6
GNDTHEAT  FORM      7.2
GNDTOPS   FORM      6
....GNDWARD   FORM      8.2                                             D-61002
GNDWARD   FORM      10.2                                               *I-61002
.
HEADER    DIM       35
.
NET       FORM      8.2
.
OPFORM1   FORM      1
OPFORM2   FORM      1
OPFORM3   FORM      1
OPLEVEL1  FORM      5
OPLEVEL2  FORM      5
.
RECTYPE   DIM       1
.
SAVDESCT  DIM       19
SAVDOCT   DIM       6
SAVDTYP   DIM       3
SAVOPTN   FORM      2
SEC       FORM      2
SUBADMNS  FORM      5
SUBAVRG   FORM      5.2
SUBBDAYS  FORM      7
SUBDAYCS  FORM      6
SUBMISC   FORM      7.2
SUBLSUM   FORM      7.2
SUBNET    FORM      8.2
SUBOPS1   FORM      6
SUBOPS2   FORM      6
SUBOPS3   FORM      6
SUBTHEAT  FORM      7.2
SUBTOPS   FORM      6
SUBWARD   FORM      8.2
.
VERT      FORM      2
+
.**********************************************************************
.*                             CONSTANTS                              *
.**********************************************************************
ATTEND    INIT      "Attending"
.
BYATT     INIT      "By Att "
BYREF     INIT      "By Ref "
.
CODEDT    INIT      "DT"
.
DOCTORLC  INIT      "Doctor"
DOCTORUC  INIT      "DOCTOR"
.
FILEEXTA  INIT      "patex1"
FILEEXTB  INIT      "patexb"
FILEEXTC  INIT      "patexc"
.
REFER     INIT      "Referring"
.
SP16      INIT      "                "
SP19      INIT      "                   "
.
WITHDIS   INIT      " with Dis"
WITHOP    INIT      " with Oper"
.
VMP       INIT      "V.M.P."
.
PRGID     INIT      "IBAPAT46"
PRGNAM    INIT      "DOCTORS SUMMARY REPORTS"
VERSION   INIT      "V12.00.01"
+
.**********************************************************************
.*                           MAINLINE                                 *
.*                       Controlling Logic                            *
.**********************************************************************
ML0000    CALL      INIT0000            * initialization - open files and
.                                                          display header
ML1000    CALL      OPTN0000            * main option screen
          BRANCH    EXIT,ML9999
.
          CALL      OPER0000            * input operation levels
          BRANCH    EXIT,ML1000
.
          CALL      GEXT0000            * get the extraction files for the
          BRANCH    EXIT,ML1000           report
.
          CALL      CREA0000            * create the temporary files
          CALL      CLR0000             * clear the temp file data variables
          CALL      LOAD0000            * load the temp files
          CALL      PRNT0000            * print the report
          GOTO      ML1000
.
ML9999    CALL      KILL0000
          CHAIN     PGM
+
.**********************************************************************
.*                           INIT0000                                 *
.*               Open files and display header                        *
.**********************************************************************
INIT0000  CALL      DISPHEAD                * display screen header
.
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"paticddf";
          OPEN      PATICDD1,"paticddf"
.
          DISPLAY   *P64:24,"pati10df";
          OPEN      PATI10D1,"pati10df"
.
          DISPLAY   *P64:24,"paticdof";
          OPEN      PATICDO1,"paticdof"
.
          DISPLAY   *P64:24,"pati10of";
          OPEN      PATI10O1,"pati10of"
.
          DISPLAY   *P64:24,"patitemn";
          OPEN      PATITEM1,"patitemn"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,TEN;*184,CPRIMOP,CPRIMDS
          READ      CONTROLF,TEN3;*144,COPRSIZ1,COPRSIZ2,*186,CMBSOPR:
                                  *200,CDOCVMP
.
          MOVE      DOCTORLC,DOCWORD
          LOAD      DOCWORD,CDOCVMP,VMP
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FILETMP1
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FILETMP2
.
INIT9999  RETURN
+
.**********************************************************************
.*                               CLR0000                              *
.*          Clear all working variables from the temp files           *
.**********************************************************************
CLR0000   UNPACK    SP30,TMPDTYPE,TMPDOC,TMPDTYP2,TMPDOC2,TMPOPDIS
          MOVE      ZERO,TMPADMNS
          MOVE      ZERO,TMPBDAYS
          MOVE      ZERO,TMPDCASE
          MOVE      ZERO,TMPOPER
          MOVE      ZERO,TMPOPER1
          MOVE      ZERO,TMPOPER2
          MOVE      ZERO,TMPOPER3
          MOVE      ZERO,TMPACCOM
          MOVE      ZERO,TMPTHEAT
          MOVE      ZERO,TMPMISC 
          MOVE      ZERO,TMPOPS2
          MOVE      ZERO,TMPOPR12
          MOVE      ZERO,TMPOPR22
          MOVE      ZERO,TMPOPR32
          MOVE      ZERO,TMPLSUM
.
CLR9999   RETURN
+
.**********************************************************************
.*                           OPTN0000                                 *
.*                   Display the main option screen                   *
.**********************************************************************
OPTN0000  MOVE      FALSE,EXIT
          CALL      DISPHEAD
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*P1:5,ONE,*P1:6,TWO:
                    *P1:7,THREE,*P1:8,FOUR,*P1:9,FIVE,*P1:10,SIX,*HOFF:
                    *P2:4," = Exit":
                    *P2:5," = By Referring ",DOCWORD:
                    *P2:6," = By Referring ",DOCWORD," with Operations":
                    *P2:7," = By Referring ",DOCWORD," with Diseases":
                    *P2:8," = By Attending ",DOCWORD:
                    *P2:9," = By Attending ",DOCWORD," with Operations":
                    *P2:10," = By Attending ",DOCWORD," with Diseases":
                    *P1:12,"Select Option :";
.
.------ select option ------
.
OPTN1000  MOVE      ZERO,OPTION
          KEYIN     *P17:12,*DV,UNDLN1,*P17:12,*V2LON,*RV,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9000 IF EQUAL
.
          COMPARE   SEVEN,OPTION
          GOTO      OPTN2000 IF LESS
          BEEP
          GOTO      OPTN1000
.
.------ valid option chosen ------
.
OPTN2000  LOAD      HEADER,OPTION,BYREF,BYREF,BYREF,BYATT,BYATT,BYATT
          ENDSET    HEADER
          APPEND    DOCWORD,HEADER
          LOAD      DIM16,OPTION,SP16,WITHOP,WITHDIS,SP16,WITHOP,WITHDIS
          APPEND    DIM16,HEADER
          RESET     HEADER
          DISPLAY   *P52:2,*V2LON," - ",HEADER;
.
          LOAD      FLAGTMP2,OPTION,FALSE,TRUE,TRUE,FALSE,TRUE,TRUE
          LOAD      FLAGATTD,OPTION,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE
          MOVE      OPTION,SAVOPTN
.
          MOVE      REFER,DOCTYPE
          LOAD      DOCTYPE,FLAGATTD,ATTEND
          GOTO      OPTN9999
.
.------ Exit option chosen ------
.
OPTN9000  MOVE      TRUE,EXIT
.
OPTN9999  RETURN
+
.**********************************************************************
.*                                OPER0000                            *
.*                     Input the operation levels                     *
.**********************************************************************
OPER0000  MOVE      FALSE,EXIT
          DISPLAY   *P1:14,*EF,"Operation Level 1 : ",COPRSIZ1:
                    *P11:15,*HOFF,"Level 2 : ",COPRSIZ2;
.
.------ keyin first operation level ------
.
OPER1000  MOVE      COPRSIZ1,OPLEVEL1
          DISPLAY   *P21:14,*EL,OPLEVEL1;
          KEYIN     *P21:14,*V2LON,*RV,OPLEVEL1;
          DISPLAY   *P21:14,*V2LON,OPLEVEL1;
.
          COMPARE   ZERO,OPLEVEL1
          GOTO      OPER2000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Operation Level must be greater than 0 **    ";
          CALL      HITENTER
          GOTO      OPER1000
.
.------ keyin second operation level ------
.
OPER2000  MOVE      COPRSIZ2,OPLEVEL2
          DISPLAY   *P21:15,*EL,OPLEVEL2;
          KEYIN     *P21:15,*V2LON,*RV,OPLEVEL2;
          DISPLAY   *P21:15,*V2LON,OPLEVEL2;
.
          COMPARE   ZERO,OPLEVEL2
          GOTO      OPER3000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Operation Level must be greater than 0 **    ";
          CALL      HITENTER
          GOTO      OPER2000
.
.------ make sure we have a valid range ------
.
OPER3000  COMPARE   OPLEVEL1,OPLEVEL2
          GOTO      OPER4000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Invalid Operation Level range **    ";
          CALL      HITENTER
          GOTO      OPER2000
.
.------ see if O.K. to continue ------
.
OPER4000  CALL      CONTQST
          BRANCH    CEXIT,OPER9999,OPER1000,OPER9000
.
.------ cancel chosen ------
.
OPER9000  MOVE      TRUE,EXIT
.
OPER9999  RETURN
+
.**********************************************************************
.*                              GEXT0000                              *
.*                Get the extraction files for the report             *
.**********************************************************************
GEXT0000  MOVE      FALSE,EXIT
          CALL      GEXTN                  * get the extraction file number
.
          COMPARE   ZERO,OPTION            * see if no file chosen
          GOTO      GEXT9000 IF EQUAL
.
          CALL      ETABPOS                * get sector and position for dates
          READ      CONTROLF,SEC;*ETABPS,EDATE,EFDATE,ETDATE,EDOPERS
.
          CALL      ETOTPOS                * get sector and position for totals
          READ      CONTROLF,SEC;*ETABPS,EADMNS,ETPRIMOP,ETPRIMDS,EBDAYS:
                                  EDCASES,ENETAMT
.
          MATCH     SP8,EDATE
          GOTO      GEXT8000 IF EQUAL
.
          MATCH     "00000000",EDATE
          GOTO      GEXT8000 IF EQUAL
.
          MOVE      FIVE,CVERT
          ADD       OPTION,CVERT
          UNPACK    EDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P13:CVERT,*V2LON,OPTION,*P20:CVERT,CPCDATE;
.
          PACK      FNAMEA,FILEEXTA,OPTION
          REP       " 0",FNAMEA
          PACK      FNAMEB,FILEEXTB,OPTION
          REP       " 0",FNAMEB
          PACK      FNAMEC,FILEEXTC,OPTION
          REP       " 0",FNAMEC
.
          TRAP      GEXT8100 IF IO
          OPEN      PATEX1A1,FNAMEA
          TRAPCLR   IO
.
          TRAP      GEXT8200 IF IO
          OPEN      PATEXTB1,FNAMEB
          TRAPCLR   IO
.
          TRAP      GEXT8300 IF IO
          OPEN      PATEXTC1,FNAMEC
          TRAPCLR   IO
.
          CALL      CONTQST                 * see if O.K. to continue
          BRANCH    CEXIT,GEXT9500,GEXT0000,GEXT9000
.
.------ invalid selection of extraction file ------
.
GEXT8000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Invalid Extraction file chosen **    ";
          CALL      HITENTER
          GOTO      GEXT0000
.
.------ extraction file A does not exist ------
.
GEXT8100  DISPLAY   *P1:24,*EL,*B,*V2LON,"** ",*BLINKON,"ERROR",*HOFF,*V2LON:
                           " - Extraction file ",FNAMEA," does not exist **  ";
          CALL      HITENTER
          NORETURN
          GOTO      GEXT0000
.
.------ extraction file B does not exist ------
.
GEXT8200  DISPLAY   *P1:24,*EL,*B,*V2LON,"** ",*BLINKON,"ERROR",*HOFF,*V2LON:
                           " - Extraction file ",FNAMEB," does not exist **  ";
          CALL      HITENTER
          NORETURN
          GOTO      GEXT0000
.
.------ extraction file C does not exist ------
.
GEXT8300  DISPLAY   *P1:24,*EL,*B,*V2LON,"** ",*BLINKON,"ERROR",*HOFF,*V2LON:
                           " - Extraction file ",FNAMEC," does not exist **  ";
          CALL      HITENTER
          NORETURN
          GOTO      GEXT0000
.
.------ no extraction file entered OR cancel selected ------
.
GEXT9000  MOVE      TRUE,EXIT
          GOTO      GEXT9999
.
.------ "Yes" has been chosen to continue ------
.
GEXT9500  UNPACK    EDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * pack the date
          MOVE      CPCDATE,EXCDATE
.
          UNPACK    EFDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * pack the date
          MOVE      CPCDATE,EXFDATE
.
          UNPACK    ETDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * pack the date
          MOVE      CPCDATE,EXTDATE
.
GEXT9999  RETURN
+
.**********************************************************************
.*                              CREA0000                              *
.*                   Create the Temp Indexed Files                    *
.**********************************************************************
CREA0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Creating Temp Indexed Files":
                           *HOFF,*V2LON," - Please wait";
.
.------ kill existing temp files ------
.
CREA1000  CALL      KILL0000                * kill existing temp files
.
.------ Build new indexed temp files ------
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FILETMP1,CMDLINE
          APPEND    " 63 u1-3,4-9",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM1XX,FILETMP1
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FILETMP2,CMDLINE
          APPEND    " 35 u1-3,4-9,10-18",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM2XX,FILETMP2
.
CREA9999  RETURN
+
.**********************************************************************
.*                              KILL0000                              *
.*                  Kill the Tempfile if it Already Exists            *
.**********************************************************************
KILL0000  CLEAR     CMDLINE
          CLOSE     PATTM1XX
          APPEND    "iserase ",CMDLINE
          APPEND    FILETMP1,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          CLOSE     PATTM2XX
          APPEND    "iserase ",CMDLINE
          APPEND    FILETMP2,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KILL9999  RETURN
+
.**********************************************************************
.*                              LOAD0000                              *
.*          Load the temporary files with the relevant data           *
.**********************************************************************
LOAD0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Loading the Temp Indexed files":
                           *HOFF,*V2LON," - Please wait";
          MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LOAD1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LOAD9999
.
          MOVE      PTXAARDC,TMPDOC         * default to Referring Doc
          MOVE      PTXAARDT,TMPDTYPE
          LOAD      TMPDOC,FLAGATTD,PTXAAADC   * change to Attending Doc
          LOAD      TMPDTYPE,FLAGATTD,PTXAAADT
.
          PACK      KEY9,TMPDTYPE,TMPDOC
          CALL      RDTMPR1                 * read the first temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LOAD2000 IF EQUAL
.
          CALL      CLR0000                 * clear all data variables
          CALL      WRTMPR1                 * write the record as is so we only
.                                             need to update later
          CALL      RDTMPR1                 * position on the rec. just written
.
.------ record already exists on the first temp file ------
.
LOAD2000  MATCH     EFDATE,PTXAADAT         * skip if admission date is < the
          GOTO      LOAD2100 IF LESS          start of the period
          ADD       ONE,TMPADMNS
.
.------ skip if not a day case ------
.
LOAD2100  MATCH     PTXAADAT,PTXADDAT
          GOTO      LOAD3000 IF NOT EQUAL
          ADD       ONE,TMPDCASE
.
.------ update the first temp file ------
.
LOAD3000  MOVE      ZERO,OVRCD
.....     ADD       PTXAPLOS,TMPBDAYS                                   D-61101
          CALL      UPTMPR1
.
          PACK      KEY17,PTXAADMN,SP20
          CALL      RSPTEXB1                * position on extraction file B
.
.------ read through the extraction file B ------
.
LOAD3100  CALL      RKPTEXB1
          BRANCH    OVRCD,LOAD4000
.
          MATCH     PTXAADMN,PTXBADMN       * compare admission numbers
          GOTO      LOAD4000 IF NOT EQUAL
.
LOAD3110  MOVE      PTXAARDC,TMPDOC         * default to Referring Doc
          MOVE      PTXAARDT,TMPDTYPE
          LOAD      TMPDOC,FLAGATTD,PTXBTADC   * change to Attending Doc
          LOAD      TMPDTYPE,FLAGATTD,PTXBTADT
.
          PACK      KEY9,TMPDTYPE,TMPDOC
          CALL      RDTMPR1                 * read the first temp file
          BRANCH    OVRCD,LOAD3200
.
          ADD       PTXBACCM,TMPACCOM
          ADD       PTXBTHET,TMPTHEAT
          ADD       PTXBMISC,TMPMISC
          ADD       PTXBLSRB,TMPLSUM
          ADD       PTXBLSPT,TMPLSUM
.
          MATCH     ANSL,PTXBTYPE           * Check if leave days      
.....     GOTO      LOAD3150 IF NOT EQUAL   * Rbypass if leave          D-61101
.....     SUB       PTXBNDAY,TMPBDAYS                                   D-61101
          GOTO      LOAD3150 IF EQUAL       * bypass Leave days        *I-61101
          ADD       PTXBNDAY,TMPBDAYS                                  *I-61101
.
.------ update the temp file ------
.
LOAD3150  CALL      UPTMPR1                 * update the first temp file
          GOTO      LOAD3100
.
.------ need to write a new record to the first temp file ------
.
LOAD3200  CALL      CLR0000                 * clear all the data variables
.                                           ( should never really get here )
          MOVE      PTXBACCM,TMPACCOM
          MOVE      PTXBTHET,TMPTHEAT
          MOVE      PTXBMISC,TMPMISC
          MOVE      PTXBLSRB,TMPLSUM
          ADD       PTXBLSPT,TMPLSUM
.
          MATCH     ANSL,PTXBTYPE           * we don't want to include
          GOTO      LOAD3300 IF EQUAL       * leave days
          MOVE      PTXBNDAY,TMPBDAYS
.
.------ write to the temp file ------
.
LOAD3300  CALL      WRTMPR1                 * write to the first temp file
          GOTO      LOAD3100
.
.------ process the operations ------
.
LOAD4000  MOVE      ANSO,RECTYPE
          LOAD      RECTYPE,CMBSOPR,ANSM
          PACK      KEY11,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
.
.------ read through the extraction file C ------
.
LOAD4100  CALL      RKPTEXC1
          BRANCH    OVRCD,LOAD6000
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LOAD6000 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LOAD6000 IF NOT EQUAL
.
          COMPARE   ONE,CPRIMOP             * Primary Operations only ?
          GOTO      LOAD4110 IF NOT EQUAL   * no - continue processing
          BRANCH    PTXCUNIQ,LOAD4110       * yes - check if Unique No. = "1" ?
          GOTO      LOAD4100                * not pri. operation - read next rec
.
LOAD4110  MOVE      PTXAARDC,TMPDOC
          MOVE      PTXAARDT,TMPDTYPE
          LOAD      TMPDOC,FLAGATTD,PTXCMADC
          LOAD      TMPDTYPE,FLAGATTD,PTXCMADT
          MOVE      ZERO,OPFORM1
          MOVE      ZERO,OPFORM2
          MOVE      ZERO,OPFORM3
.
          COMPARE   PTXCCOST,OPLEVEL1       * skip if operation cost is >
          GOTO      LOAD4200 IF LESS          the first level
          MOVE      ONE,OPFORM1
          GOTO      LOAD4500
.
.------ skip if the operation cost is > the second level ------
.
LOAD4200  COMPARE   PTXCCOST,OPLEVEL2
          GOTO      LOAD4300 IF LESS
          MOVE      ONE,OPFORM2
          GOTO      LOAD4500
.
.------ operation cost is > the second level ------
.
LOAD4300  MOVE      ONE,OPFORM3
.
.------ read the first temp file ------
.
LOAD4500  PACK      KEY9,TMPDTYPE,TMPDOC
          CALL      RDTMPR1                 * read the first temp file
          BRANCH    OVRCD,LOAD4600
.
          ADD       ONE,TMPOPER
          ADD       OPFORM1,TMPOPER1
          ADD       OPFORM2,TMPOPER2
          ADD       OPFORM3,TMPOPER3
.
          CALL      UPTMPR1                 * update the first temp file
          GOTO      LOAD5000
.
.------ need to write a record to the first temp file ------
.
LOAD4600  CALL      CLR0000                 * clear all the data variables
.
          MOVE      ONE,TMPOPER
          MOVE      OPFORM1,TMPOPER1
          MOVE      OPFORM2,TMPOPER2
          MOVE      OPFORM3,TMPOPER3
.
          CALL      WRTMPR1                 * write to the first temp file
.
.------ see if we need to write to the second temp file ------
.
LOAD5000  COMPARE   TWO,SAVOPTN             * test for an operation option
          GOTO      LOAD5100 IF EQUAL
.
          COMPARE   FIVE,SAVOPTN            * test for an operation option
          GOTO      LOAD4100 IF NOT EQUAL
.
.------ we have chosen an operation option so write to the second temp file ---
.
LOAD5100  MOVE      PTXAARDC,TMPDOC2
          MOVE      PTXAARDT,TMPDTYP2
          LOAD      TMPDOC2,FLAGATTD,PTXCMADC
          LOAD      TMPDTYP2,FLAGATTD,PTXCMADT
.
          PACK      KEY18,TMPDTYP2,TMPDOC2,PTXCCODE
          CALL      RDTMPR2                 * read the second temp file
          BRANCH    OVRCD,LOAD5200
.
          ADD       ONE,TMPOPS2
          ADD       OPFORM1,TMPOPR12
          ADD       OPFORM2,TMPOPR22
          ADD       OPFORM3,TMPOPR32
.
          CALL      UPTMPR2                 * update the second temp file
          GOTO      LOAD4100
.
.------ we need to write to the second temp file ------
.
LOAD5200  CALL      CLR0000                 * clear all the data variables
.
          MOVE      ONE,TMPOPS2
          MOVE      OPFORM1,TMPOPR12
          MOVE      OPFORM2,TMPOPR22
          MOVE      OPFORM3,TMPOPR32
.
          CALL      WRTMPR2                 * write to the second temp file
          GOTO      LOAD4100
.
.------ see if we need to process diseases ------
.
LOAD6000  COMPARE   THREE,SAVOPTN           * test for a disease option
          GOTO      LOAD6100 IF EQUAL
.
          COMPARE   SIX,SAVOPTN             * test for a disease option
          GOTO      LOAD1000 IF NOT EQUAL
.
.------ read through extraction file C for diseases ------
.
LOAD6100  MOVE      ANSD,RECTYPE
          PACK      KEY11,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
.
.------ read through the extraction file C ------
.
LOAD6200  CALL      RKPTEXC1
          BRANCH    OVRCD,LOAD1000
.
          MATCH     PTXAADMN,PTXCADMN       * compare admission numbers
          GOTO      LOAD1000 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * match record types
          GOTO      LOAD1000 IF NOT EQUAL
.
          COMPARE   ONE,CPRIMDS             * Primary Diseases only ?
          GOTO      LOAD6300 IF NOT EQUAL   * no - continue processing
          MATCH     ANSP,PTXCCTYP           * yes - test for a primary disease ?
          GOTO      LOAD6200 IF NOT EQUAL   * not primary disease, read next rec
.
.------ write this disease to the second temp file ------
.
LOAD6300  MOVE      PTXAARDC,TMPDOC2
          MOVE      PTXAARDT,TMPDTYP2
          LOAD      TMPDOC2,FLAGATTD,PTXCMADC
          LOAD      TMPDTYP2,FLAGATTD,PTXCMADT
.
          PACK      KEY18,TMPDTYP2,TMPDOC2,PTXCCODE
          CALL      RDTMPR2                 * read the second temp file
          BRANCH    OVRCD,LOAD6400
          ADD       ONE,TMPOPS2
.
          CALL      UPTMPR2                 * update the second temp file
          GOTO      LOAD6200
.
.------ need to write a new record to the second temp file ------
.
LOAD6400  CALL      CLR0000                 * clear all the data variables
          MOVE      ONE,TMPOPS2
.
          CALL      WRTMPR2                 * write to the second temp file
          GOTO      LOAD6200
.
LOAD9999  RETURN
+
.**********************************************************************
.*                               PRNT0000                             *
.*                     Routine to print the report                    *
.**********************************************************************
PRNT0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Generating Report":
                           *HOFF,*V2LON," - Please wait";
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
          MOVE      ONE,CNOUNDLN
          MOVE      SP20,CPHDROPT
          MOVE      SP20,DESCTYPE
.
          CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
.
          MOVE      SP3,SAVDTYP
          MOVE      SP9,KEY9
          CALL      RDTMPR1                 * get the first temp file record
          COMPARE   ZERO,OVRCD
          GOTO      PRNT1200 IF EQUAL
.
          CALL      RKTMPR1
          BRANCH    OVRCD,PRNT8000
          GOTO      PRNT1200
.
.------ read through the first temporary file ------
.
PRNT1150  CALL      RKTMPR1                 
          BRANCH    OVRCD,PRNT8000
.
          MATCH     SAVDTYP,TMPDTYPE        * match doctor types
          GOTO      PRNT1200 IF EQUAL
          CALL      SUBT0000                * print the sub-totals
          MOVE      SP20,DESCTYPE
.
          CALL      CLRT5000                * clear the sub-total variables
.
.------ print the record for the current doctor type ------
.
PRNT1200  CALL      REC0000                 * print a record
          MOVE      TMPDTYPE,SAVDTYP
.
          CALL      ADDV0000                * add the variables to the totals
          GOTO      PRNT1150
.
.------ we have reached the end of the first temp file ------
.
PRNT8000  CALL      SUBT0000                * print the sub-totals
          CALL      GNDT0000                * print the grand-totals
          CALL      ENDR0000                * print the end of the report
.
PRNT9999  RETURN  
+
.**********************************************************************
.*                                CLRT0000                            *
.*              Routine to clear the total variables                  *
.**********************************************************************
CLRT0000  MOVE      ZERO,GNDADMNS
          MOVE      ZERO,GNDBDAYS
          MOVE      ZERO,GNDDAYCS
          MOVE      ZERO,GNDTOPS
          MOVE      ZERO,GNDOPS1
          MOVE      ZERO,GNDOPS2
          MOVE      ZERO,GNDOPS3
          MOVE      ZERO,GNDWARD
          MOVE      ZERO,GNDTHEAT
          MOVE      ZERO,GNDMISC
          MOVE      ZERO,GNDNET
          MOVE      ZERO,GNDLSUM
.
.------ clear the sub-total variables ------
.
CLRT5000  MOVE      ZERO,SUBADMNS
          MOVE      ZERO,SUBBDAYS
          MOVE      ZERO,SUBDAYCS
          MOVE      ZERO,SUBTOPS
          MOVE      ZERO,SUBOPS1
          MOVE      ZERO,SUBOPS2
          MOVE      ZERO,SUBOPS3
          MOVE      ZERO,SUBWARD
          MOVE      ZERO,SUBTHEAT
          MOVE      ZERO,SUBMISC
          MOVE      ZERO,SUBNET 
          MOVE      ZERO,SUBLSUM
.
CLRT9999  RETURN
+
.**********************************************************************
.*                              HEAD0000                              *
.*                      Print the page header                         *
.**********************************************************************
HEAD0000  COMPARE   ZERO,CPAGENO            * skip if we are printing the
          GOTO      HEAD1000 IF EQUAL         header for the first page
          CALL      PAGE0000                * print underline for current page
.
.------ print the page header ------
.
HEAD1000  PRINT     *C
          CALL      HEAD132                 * print the basic page header
.
          PRINT     *40,"Period from ",EXFDATE," to ",EXTDATE:
                       *80,"(As at ",EXCDATE,")":
                    *N,*40,HEADER
          MOVE      FIVE,CLNO
.
          COMPARE   ONE,CPRIMOP
          GOTO      HEAD1100 IF NOT EQUAL
          PRINT     "Operations : PRIMARY ONLY"
          ADD       ONE,CLNO
.
HEAD1100  COMPARE   ONE,CPRIMDS
          GOTO      HEAD2000 IF NOT EQUAL
          PRINT     "Diseases   : PRIMARY ONLY"
          ADD       ONE,CLNO
.
HEAD2000  BRANCH    SAVOPTN,HEAD3000,HEAD4000,HEAD4000,HEAD3000,HEAD4000:
                            HEAD4000
.
.------ printing the normal report ------
.
HEAD3000  PRINT     *N,*28,"Bed-",*36,"Day  |":
                       *43,"Total",*50,"Opers",*57,"Opers",*64,"Opers|":
                    *N,DOCTYPE,SP1,DOCWORD:
                       *21,"Admns",*28,"Days",*36,"Case |":
                       *43,"Opers",*49,"<",OPLEVEL1:
                       *56,"<",OPLEVEL2,*63,">",OPLEVEL2,"|":
                       *71,"$ Ward",*84,"$ Theatre":
                       *96,"$ Misc",*108,"$ Lumpsum",*120,"$ Net";
.
          CALL      PAGE0000                * print page seperator
.
          PRINT     *N;
          ADD       FOUR,CLNO
          GOTO      HEAD9999
.
.------ printing report for diseases or operations ------
.
HEAD4000  PRINT     *N,"Description/",*81,"|": 
                    *N,DOCTYPE,SP1,DOCWORD,*57,"Admns",*63,"Bed-Days":
                       *72,"Day-Case",*81,"| Total Opers",*95,"Opers <":
                       OPLEVEL1,*108,"Opers <",OPLEVEL2,*121,"Opers >":
                       OPLEVEL2;
.
          CALL      PAGE0000                * print page seperator
.
          PRINT     *N;
          ADD       FOUR,CLNO
.
HEAD9999  RETURN
+
.**********************************************************************
.*                               REC0000                              *
.*       This routine prints a record for the various reports         *
.**********************************************************************
REC0000   BRANCH    SAVOPTN,REC1000,REC5000,REC5000,REC1000,REC5000,REC5000
.
.------ printing the normal report ------
.
REC1000   MOVE      SP20,DESCDOC
.
          MATCH     SP6,TMPDOC              * see if we have a doctor code
          GOTO      REC1100 IF NOT EQUAL
          MOVE      "NO ",DESCDOC
          ENDSET    DESCDOC
.
          BRANCH    FLAGATTD,REC1050        * skip if using attending doctor
          APPEND    "REFERRING ",DESCDOC
          GOTO      REC1070
.
.------ we are using attending doctor ------
.
REC1050   APPEND    "ATTENDING ",DESCDOC
.
.------ skip if we are using V.M.P. instead of doctor ------
.
REC1070   BRANCH    CDOCVMP,REC1080
          APPEND    DOCTORUC,DESCDOC
          GOTO      REC1090
.
.------ we are using V.M.P. ------
.
REC1080   APPEND    VMP,DESCDOC
.
.------ reset the doctor description ------
.
REC1090   RESET     DESCDOC
          GOTO      REC2000
.
.------ doctor code exists so read the doctors file ------
.
REC1100   MOVE      TMPDOC,KEY6
          CALL      RDDOCT1
          BRANCH    OVRCD,REC1500
.
          CALL      FDOC0000                * format the doctors name
          MOVE      DOCTNAM,DESCDOC
          GOTO      REC2000
.
.------ doctors code not on file ------
.
REC1500   MOVE      "UNKNOWN CODE ",DESCDOC
          ENDSET    DESCDOC
          APPEND    TMPDOC,DESCDOC
          RESET     DESCDOC
.
.------ continue processing ------
.
REC2000   MOVE      TMPACCOM,NET
          ADD       TMPTHEAT,NET
          ADD       TMPMISC,NET
          ADD       TMPLSUM,NET
.
          MOVE      TMPBDAYS,BEDDAYS
          ADD       TMPDCASE,BEDDAYS
.
          MOVE      NET,FORM8P2
          DIV       BEDDAYS,FORM8P2
          MOVE      FORM8P2,AVDAY
.
          UNPACK    SP30,DISPOPS,DISPOPS1,DISPOPS2,DISPOPS3
.
          COMPARE   ZERO,TMPOPER            * see if total operations are zero
          GOTO      REC2100 IF EQUAL
          MOVE      TMPOPER,DISPOPS
.
.------ see if operations < level 1 are zero ------
.
REC2100   COMPARE   ZERO,TMPOPER1
          GOTO      REC2200 IF EQUAL
          MOVE      TMPOPER1,DISPOPS1
.
.------ see if operations > level 1 and <= level 2 are zero ------
.
REC2200   COMPARE   ZERO,TMPOPER2
          GOTO      REC2300 IF EQUAL
          MOVE      TMPOPER2,DISPOPS2
.
.------ see if operations > level 2 are zero ------
.
REC2300   COMPARE   ZERO,TMPOPER3
          GOTO      REC2400 IF EQUAL
          MOVE      TMPOPER3,DISPOPS3
.
.------ paginate if required ------
.
REC2400   COMPARE   "56",CLNO
          CALL      HEAD0000 IF NOT LESS    * paginate if required
.
          PRINT     *N,DESCDOC,*21,TMPADMNS,*27,TMPBDAYS,*35,TMPDCASE:
                       *41,"|",DISPOPS,*49,DISPOPS1,*56,DISPOPS2,*63,DISPOPS3:
                       *69,"|",*71,"$",TMPACCOM,*84,"$",TMPTHEAT,*96,"$":
                       TMPMISC,*108,"$",TMPLSUM,*120,"$",NET:
                    *N,"$ Av/Day",*120,"$   ",AVDAY;
.
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ we are printing for operations or diseases ------
.
REC5000   PACK      DESCDOC2,SP20,SP20
.
          MATCH     SP6,TMPDOC              * see if we have a doctors code
          GOTO      REC5100 IF NOT EQUAL
          MOVE      "NO ",DESCDOC2
          ENDSET    DESCDOC2
.
          BRANCH    FLAGATTD,REC5050        * skip if we are using the 
.                                             attending doctor
          APPEND    "REFERRING ",DESCDOC2
          GOTO      REC5070
.
.------ we are using the attending doctor ------
.
REC5050   APPEND    "ATTENDING ",DESCDOC2
.
.------ skip if we are using V.M.P. instead of doctor ------
.
REC5070   BRANCH    CDOCVMP,REC5080
          APPEND    DOCTORUC,DESCDOC2
          GOTO      REC5090
.
.------ we are using V.M.P. ------
.
REC5080   APPEND    VMP,DESCDOC2
.
.------ reset doctors description ------
.
REC5090   RESET     DESCDOC2
          GOTO      REC6000
.
.------ we have a doctors code so read the doctors file ------
.
REC5100   MOVE      TMPDOC,KEY6
          CALL      RDDOCT1
          BRANCH    OVRCD,REC5200
.
          CALL      FDOC0000                * format the doctors name
          MOVE      DOCTNAM,DESCDOC2
          GOTO      REC6000
.
.------ doctors code not on file ------
.
REC5200   MOVE      "UNKNOWN CODE : ",DESCDOC2
          ENDSET    DESCDOC2
          APPEND    TMPDOC,DESCDOC2
          RESET     DESCDOC2
.
.------ see if doctors type description is spaces ------
.
REC6000   MATCH     SP19,DESCTYPE
          GOTO      REC7100 IF NOT EQUAL
.
          MATCH     SP3,TMPDTYPE            * see if we have a doctors type
          GOTO      REC6500 IF NOT EQUAL
          MOVE      "UNKNOWN ",DESCTYPE
          ENDSET    DESCTYPE
.
          BRANCH    CDOCVMP,REC6100         * skip if using V.M.P.
          APPEND    DOCTORUC,DESCTYPE
          GOTO      REC6200
.
.------ we are using V.M.P. ------
.
REC6100   APPEND    VMP,DESCDOC
.
.------ reset the doctors type description ------
.
REC6200   RESET     DESCTYPE
          GOTO      REC7000 
.
.------ we have a doctors type so read the codes file ------
.
REC6500   PACK      KEY5,CODEDT,TMPDTYPE
          CALL      RDCODE1
          BRANCH    OVRCD,REC6600 
          MOVE      TDESC,DESCTYPE
          GOTO      REC7000 
.
.------ doctor type not on file ------
.
REC6600   MOVE      "UNKNOWN CODE : ",DESCTYPE
          ENDSET    DESCTYPE
          APPEND    TMPDTYPE,DESCTYPE
          RESET     DESCTYPE
.
.------ print the doctors type description ------
.
REC7000   COMPARE   "54",CLNO
          CALL      HEAD1000 IF NOT LESS
.
          PRINT     *N,"*** ",DESCTYPE;
          MOVE      DESCTYPE,SAVDESCT
          ADD       ONE,CLNO
.
.------ read through the second temp file for the given doctor ------
.------ and doctor type ------
.
REC7100   MOVE      TMPDOC,SAVDOCT
          MOVE      TMPDTYPE,SAVDTYP
          PACK      KEY18,TMPDTYPE,TMPDOC,SP10
          CALL      RSTMPR2
.
.------ read through the second temp file ------
.
REC7200   CALL      RKTMPR2
          BRANCH    OVRCD,REC8000
.
          MATCH     TMPDTYP2,SAVDTYP        * match doctor types
          GOTO      REC8000 IF NOT EQUAL
.
          MATCH     TMPDOC2,SAVDOCT         * match doctor codes
          GOTO      REC8000 IF NOT EQUAL
.
          BRANCH    SAVOPTN,REC7200,REC7500,REC7300,REC7200,REC7500,REC7300
.
.------ we are printing with diseases ------
.
REC7300   MOVE      TMPOPDIS,KEY9
          CALL      RD10T9D1                * read the diseases file
          IF        OVRCD=1
              CALL      RDPT10D1
              BRANCH    OVRCD,REC7200
          ENDIF
.
          COMPARE   "56",CLNO               * see if we need to paginate
          GOTO      REC7400 IF LESS
.
          CALL      HEAD0000                * print page header
          PRINT     *N,"*** ",SAVDESCT;
          ADD       ONE,CLNO
.
.------ print the current disease description ------
.
REC7400   PRINT     *N,DDESC,SP1,TMPOPDIS,*85,"(",TMPOPS2,")";
          ADD       ONE,CLNO
          GOTO      REC7200
.
.------ we are printing with operations ------
.
REC7500   BRANCH    CMBSOPR,REC7550         * skip if using MBS codes
.
          MOVE      TMPOPDIS,KEY9
          CALL      RD10T9O1                * read the operations file
          IF        OVRCD=1
              CALL      RDPT10O1
          ENDIF
          BRANCH    OVRCD,REC7200
          GOTO      REC7580
.
.------ we are using MBS codes ------
.
REC7550   MOVE      TMPOPDIS,KEY9
          PACK      KEY17,KEY9,SP70
          CALL      PATITMRD                * read the patient item file
          BRANCH    OVRCD,REC7200
          MOVE      IDESC,ODESC
.
.------ see if paginating is required ------
.
REC7580   COMPARE   "56",CLNO               * see if we need to paginate
          GOTO      REC7600 IF LESS
.
          CALL      HEAD0000                * print page header
          PRINT     *N,"*** ",SAVDESCT;
          ADD       ONE,CLNO
.
.------ print the current operation description ------
.
REC7600   PRINT     *N,ODESC,TMPOPDIS,*81,"|";
.
          UNPACK    SP30,DISPOPS,DISPOPS1,DISPOPS2,DISPOPS3
.
          COMPARE   ZERO,TMPOPS2            * see if total operations are zero
          GOTO      REC7650 IF EQUAL
          MOVE      TMPOPS2,DISPOPS
.
.------ see if operations < level 1 are zero ------
.
REC7650   COMPARE   ZERO,TMPOPR12
          GOTO      REC7700 IF EQUAL
          MOVE      TMPOPR12,DISPOPS1
.
.------ see if operations > level 1 and <= level 2 are zero ------
.
REC7700   COMPARE   ZERO,TMPOPR22
          GOTO      REC7750 IF EQUAL
          MOVE      TMPOPR22,DISPOPS2
.
.------ see if operations > level 2 are zero ------
.
REC7750   COMPARE   ZERO,TMPOPR32
          GOTO      REC7800 IF EQUAL
          MOVE      TMPOPR32,DISPOPS3
.
.------ print the operations details ------
.
REC7800   PRINT     *85,DISPOPS,*98,DISPOPS1,*111,DISPOPS2,*124,DISPOPS3;
          ADD       ONE,CLNO
          GOTO      REC7200
.
.------ no more operations for this doctor code and doctor type ------
.
REC8000   COMPARE   "56",CLNO               * paginate if required
          GOTO      REC8050 IF LESS
.
          CALL      HEAD0000                * print page header
          PRINT     *N,"*** ",SAVDESCT;
          ADD       ONE,CLNO
.
.------ print other details for this doctor ------
.
REC8050   CALL      PAGE0000                * print underline
.
          PRINT     *N,DESCDOC2,*57,TMPADMNS,*63,TMPBDAYS,*73,TMPDCASE,*81,"|";
.
          UNPACK    SP30,DISPOPS,DISPOPS1,DISPOPS2,DISPOPS3
.
          COMPARE   ZERO,TMPOPER            * see if total operations are zero
          GOTO      REC8100 IF EQUAL
          MOVE      TMPOPER,DISPOPS
.
.------ see if operations < level 1 are zero ------
.
REC8100   COMPARE   ZERO,TMPOPER1
          GOTO      REC8200 IF EQUAL
          MOVE      TMPOPER1,DISPOPS1
.
.------ see if operations > level 1 and <= level 2 are zero ------
.
REC8200   COMPARE   ZERO,TMPOPER2
          GOTO      REC8300 IF EQUAL
          MOVE      TMPOPER2,DISPOPS2
.
.------ see if operations > level 2 are zero ------
.
REC8300   COMPARE   ZERO,TMPOPER3
          GOTO      REC8400 IF EQUAL
          MOVE      TMPOPER3,DISPOPS3
.
.------ print the operation details ------
.
REC8400   PRINT     *85,DISPOPS,*98,DISPOPS1,*111,DISPOPS2,*124,DISPOPS3;
.
          CALL      PAGE0000                * print underline
.
          MOVE      TMPACCOM,NET
          ADD       TMPTHEAT,NET
          ADD       TMPMISC,NET
          ADD       TMPLSUM,NET
.
          MOVE      TMPBDAYS,BEDDAYS
          ADD       TMPDCASE,BEDDAYS
.
          MOVE      NET,FORM8P2
          DIV       BEDDAYS,FORM8P2
          MOVE      FORM8P2,AVDAY
.
          PRINT     *N,"Ward : $",TMPACCOM,*23,"Theatre : $",TMPTHEAT:
                       *47,"Misc : $",TMPMISC,*68,"Lumpsum : $",TMPLSUM:
                       *92,"Net : $",NET,*114,"Av/Day : $",AVDAY,*N;
          ADD       THREE,CLNO
.
REC9999   RETURN
+
.**************************************************************************
.*                              FDOC0000                                  *
.*             Format doctors name into the variable DOCTNAM              *
.*             Requires the relevant doctor record read in                *
.**************************************************************************
FDOC0000  CLEAR     DOCTNAM
.
          MATCH     SP9,DTITL               * test doctors title for spaces
          GOTO      FDOC2050 IF EQUAL
          MOVE      DTITL,DOCTNAM           * move doctors title to DOCTNAM
          ENDSET    DOCTNAM
.
.------ skip over extra blanks at the end of the doctors title ------
.
FDOC1000  CMATCH    SP1,DOCTNAM             * test if current character
          GOTO      FDOC2000 IF NOT EQUAL     is a space
          BUMP      DOCTNAM,-1
          GOTO      FDOC1000
.
.------ Append a space and then the doctors given name to DOCTNAM ------
.
FDOC2000  APPEND    SP1,DOCTNAM
.
.------ just append the doctors given name if no title exists ------
.
FDOC2050  MATCH     SP25,DGNAME
          GOTO      FDOC3050 IF EQUAL
.
          MOVE      DGNAME,ANS
          APPEND    ANS,DOCTNAM
          APPEND    DOT,DOCTNAM
.
.------ just append the doctors surname if no given name exists ------
.
FDOC3050  APPEND    DSNAME,DOCTNAM
          ENDSET    DOCTNAM
.
.------ Move to the end of doctors surname ------
.
FDOC3200  CMATCH    SP1,DOCTNAM             * test if current character is
          GOTO      FDOC9000 IF NOT EQUAL     a space
          BUMP      DOCTNAM,-1              * if we reach EOS then we have no
          GOTO      FDOC9000 IF EOS           doctors name at all
          GOTO      FDOC3200
.
.------ Reset the formatted doctors name ------
.
FDOC9000  RESET     DOCTNAM
.
FDOC9999  RETURN
+
.**********************************************************************
.*                               PAGE0000                             *
.*  This routine prints the page seperators for the various reports   *
.**********************************************************************
PAGE0000  BRANCH    SAVOPTN,PAGE1000,PAGE2000,PAGE2000,PAGE1000,PAGE2000:
                            PAGE2000
.
.------ print the page seperator for the normal report ------
.
PAGE1000  PRINT     *N,"------------------- ----- ------- ------":
                       "|------ ------ ------ ------|":
                       " ------------ ----------- ----------- ":
                       "----------- ------------";
          GOTO      PAGE9000
.
.------ print the page seperator for the operations or diseases report ------
.
PAGE2000  PRINT     *N,"*-----------------------------------------------":
                       "------------------------------------------------":
                       "-----------------------------------*";
.
PAGE9000  ADD       ONE,CLNO
.
PAGE9999  RETURN
+
.**********************************************************************
.*                               PEND0000                             *
.*  This routine prints the page ends for the grand totals for the    *
.*  various reports                                                   *
.**********************************************************************
PEND0000  BRANCH    SAVOPTN,PEND1000,PEND2000,PEND2000,PEND1000,PEND2000:
                            PEND2000
.
.------ print the page end for the normal report ------
.
PEND1000  PRINT     *N,"******************* ***** ******* ******":
                       "|****** ****** ****** ******|":
                       " ************ *********** *********** ":
                       "*********** ************";
          GOTO      PEND9000
.
.------ print the page end for the operations or diseases report ------
.
PEND2000  PRINT     *N,"************************************************":
                       "************************************************":
                       "************************************";
.
PEND9000  ADD       ONE,CLNO
.
PEND9999  RETURN
+
.**********************************************************************
.*                                ADDV0000                            *
.*      Routine to add the variables just printed to the totals       *
.**********************************************************************
ADDV0000  ADD       TMPADMNS,SUBADMNS
          ADD       TMPBDAYS,SUBBDAYS
          ADD       TMPDCASE,SUBDAYCS
          ADD       TMPOPER,SUBTOPS
          ADD       TMPOPER1,SUBOPS1
          ADD       TMPOPER2,SUBOPS2
          ADD       TMPOPER3,SUBOPS3
          ADD       TMPACCOM,SUBWARD
          ADD       TMPTHEAT,SUBTHEAT
          ADD       TMPMISC,SUBMISC
          ADD       TMPLSUM,SUBLSUM
          ADD       NET,SUBNET 
.
          ADD       TMPADMNS,GNDADMNS
          ADD       TMPBDAYS,GNDBDAYS
          ADD       TMPDCASE,GNDDAYCS
          ADD       TMPOPER,GNDTOPS
          ADD       TMPOPER1,GNDOPS1
          ADD       TMPOPER2,GNDOPS2
          ADD       TMPOPER3,GNDOPS3
          ADD       TMPACCOM,GNDWARD
          ADD       TMPTHEAT,GNDTHEAT
          ADD       TMPMISC,GNDMISC
          ADD       TMPLSUM,GNDLSUM
          ADD       NET,GNDNET
.
ADDV9999  RETURN
+
.**********************************************************************
.*                              SUBT0000                              *
.*              Routine to print the sub-totals                       *
.**********************************************************************
SUBT0000  MATCH     SP3,SAVDTYP             * see if the saved doctors type
          GOTO      SUBT0500 IF NOT EQUAL     is spaces
          MOVE      "UNKNOWN ",DESCTYPE
          ENDSET    DESCTYPE
.
          BRANCH    CDOCVMP,SUBT0100        * skip if we are using V.M.P.
          APPEND    DOCTORUC,DESCTYPE
          GOTO      SUBT0200
.
.------ we are using V.M.P. instead of doctor ------
.
SUBT0100  APPEND    VMP,DESCDOC
.
.------ reset the description of the doctors type ------
.
SUBT0200  RESET     DESCTYPE
          GOTO      SUBT1000
.
.------ we have a doctors type so use it to read the codes file ------
.
SUBT0500  PACK      KEY5,CODEDT,SAVDTYP
          CALL      RDCODE1
          BRANCH    OVRCD,SUBT0700
          MOVE      TDESC,DESCTYPE
          GOTO      SUBT1000
.
.------ doctors type not on file ------
.
SUBT0700  MOVE      "UNKNOWN CODE : ",DESCTYPE
          ENDSET    DESCTYPE
          APPEND    SAVDTYP,DESCTYPE
          RESET     DESCTYPE
.
.------ continue processing ------
.
SUBT1000  MOVE      SUBBDAYS,BEDDAYS
          ADD       SUBDAYCS,BEDDAYS
.
          MOVE      SUBNET,FORM8P2
          DIV       BEDDAYS,FORM8P2
          MOVE      FORM8P2,SUBAVRG
.
          UNPACK    SP30,DISPOPS,DISPOPS1,DISPOPS2,DISPOPS3
.
          COMPARE   ZERO,SUBTOPS            * see if total operations are zero
          GOTO      SUBT1100 IF EQUAL
          MOVE      SUBTOPS,DISPOPS
.
.------ see if operations < level 1 are zero ------
.
SUBT1100  COMPARE   ZERO,SUBOPS1
          GOTO      SUBT1200 IF EQUAL
          MOVE      SUBOPS1,DISPOPS1
.
.------ see if operations > level 1 and <= level 2 are zero ------
.
SUBT1200  COMPARE   ZERO,SUBOPS2
          GOTO      SUBT1300 IF EQUAL
          MOVE      SUBOPS2,DISPOPS2
.
.------ see if operations > level 2 are zero ------
.
SUBT1300  COMPARE   ZERO,SUBOPS3
          GOTO      SUBT1400 IF EQUAL
          MOVE      SUBOPS3,DISPOPS3
.
SUBT1400  BRANCH    SAVOPTN,SUBT1500,SUBT2000,SUBT2000,SUBT1500,SUBT2000:
                            SUBT2000                           
.
.------ we are printing the normal report ------
.
SUBT1500  COMPARE   "56",CLNO               * pagination required ?
          GOTO      SUBT1510 IF LESS        * no
          CALL      HEAD0000
          GOTO      SUBT1520
.
SUBT1510  CALL      PAGE0000                * print underline
.
SUBT1520  PRINT     *N,DESCTYPE,*21,SUBADMNS,*27,SUBBDAYS,*35,SUBDAYCS:
                       *41,"|",DISPOPS,*49,DISPOPS1,*56,DISPOPS2,*63,DISPOPS3:
                       *69,"|",*71,"$",SUBWARD,*84,"$",SUBTHEAT,*96,"$":
                       SUBMISC,*108,"$",SUBLSUM,*120,"$",SUBNET:
                    *N,"$ Av/Day",*120,"$   ",SUBAVRG;
.
          CALL      PAGE0000                * print underline
.
          PRINT     *N;
          ADD       TWO,CLNO
          GOTO      SUBT9999
.
.------ we are printing diseases or operations report ------
.
SUBT2000  COMPARE   "55",CLNO               * pagination required ?
          GOTO      SUBT2100 IF LESS        * no
          CALL      HEAD0000
          GOTO      SUBT2200
.
SUBT2100  CALL      PAGE0000                * print underline
.
SUBT2200  PRINT     *N,"TOTAL : ",DESCTYPE,*57,SUBADMNS,*63,SUBBDAYS:
                       *73,SUBDAYCS,*81,"|",*85,DISPOPS,*98,DISPOPS1:
                       *111,DISPOPS2,*124,DISPOPS3;
.
          ADD       ONE,CLNO
          CALL      PAGE0000                * print underline
.
          COMPARE   "56",CLNO               * paginate if required
          CALL      HEAD1000 IF NOT LESS
.
          PRINT     *N,"Ward : $",SUBWARD,*23,"Theatre : $",SUBTHEAT:
                       *47,"Misc : $",SUBMISC,*68,"Lumpsum : $",SUBLSUM:
                       *92,"Net : $",SUBNET,*114,"Av/Day : $",SUBAVRG;
.
          CALL      PEND0000                * print end of this doctor type
.                                             underline
          PRINT     *N;
          ADD       TWO,CLNO
.
SUBT9999  RETURN
+
.**********************************************************************
.*                              GNDT0000                              *
.*              Routine to print the grand-totals                     *
.**********************************************************************
GNDT0000  MOVE      GNDBDAYS,BEDDAYS
          ADD       GNDDAYCS,BEDDAYS
.
          MOVE      GNDNET,FORM8P2
          DIV       BEDDAYS,FORM8P2
          MOVE      FORM8P2,GNDAVRG
.....     MOVE      GNDNET,FORM8P2                                      D-61001 
.....     DIV       BEDDAYS,FORM8P2                                     D-61001 
.....     MOVE      FORM8P2,GNDAVRG                                     D-61001 
          MOVE      GNDNET,FORM12P2                                    *I-61001 
          DIV       BEDDAYS,FORM12P2                                   *I-61001 
          MOVE      FORM12P2,GNDAVRG                                   *I-61001 
.
          UNPACK    SP30,DISPOPS,DISPOPS1,DISPOPS2,DISPOPS3
.
          COMPARE   ZERO,GNDTOPS            * see if total operations are zero
          GOTO      GNDT1000 IF EQUAL
          MOVE      GNDTOPS,DISPOPS
.
.------ see if operations < level 1 are zero ------
.
GNDT1000  COMPARE   ZERO,GNDOPS1
          GOTO      GNDT2000 IF EQUAL
          MOVE      GNDOPS1,DISPOPS1
.
.------ see if operations > level 1 and <= level 2 are zero ------
.
GNDT2000  COMPARE   ZERO,GNDOPS2
          GOTO      GNDT3000 IF EQUAL
          MOVE      GNDOPS2,DISPOPS2
.
.------ see if operations > level 2 are zero ------
.
GNDT3000  COMPARE   ZERO,GNDOPS3
          GOTO      GNDT4000 IF EQUAL
          MOVE      GNDOPS3,DISPOPS3
.
.------ branch depending on which report we are printing ------
.
GNDT4000  BRANCH    SAVOPTN,GNDT5000,GNDT6000,GNDT6000,GNDT5000,GNDT6000:
                            GNDT6000
.
.------ we are printing the normal report ------
.
GNDT5000  COMPARE   "56",CLNO
          CALL      HEAD1000 IF NOT LESS    * paginate if required
          CALL      PEND0000                * print page end for grand totals
.
. ****************************************** Start of altered code     *I-61002
....      PRINT     *N,"GRAND TOTAL",*21,GNDADMNS,*27,GNDBDAYS,*35,GNDDAYCS:
....                   *41,"|",DISPOPS,*49,DISPOPS1,*56,DISPOPS2,*63,DISPOPS3:
....                   *69,"|",*71,"$",GNDWARD,*84,"$",GNDTHEAT,*96,"$":
....                   GNDMISC,*108,"$",GNDLSUM,*120,"$",GNDNET:
....                *N,"$ Av/Day",*120,"$   ",GNDAVRG;
.
.
          PRINT     *N,"GRAND TOTAL",*21,GNDADMNS,*27,GNDBDAYS:
                       *35,GNDDAYCS,*41,"|",DISPOPS,*49,DISPOPS1:
                       *56,DISPOPS2,*63,DISPOPS3;
          COMPARE   "99999999",GNDNET       * 100,000,000 or more?
          IF        @LESS
            PRINT        *69,"|",*70,GNDWARD,*71,"$":
                         *84,"$",GNDTHEAT,*96,"$",GNDMISC:
                         *108,"$",GNDLSUM,*119,GNDNET,*120,"$";
          ELSE
            PRINT        *69,"|",*70,GNDWARD:
                         *84,"$",GNDTHEAT,*96,"$",GNDMISC:
                         *108,"$",GNDLSUM,*119,GNDNET;
          ENDIF
          PRINT     *N,"$ Av/Day",*120,"$   ",GNDAVRG;
. ****************************************** End of altered code       *I-61002
.
          CALL      PEND0000                * print page end for grand totals
          PRINT     *N;
          ADD       TWO,CLNO
          GOTO      GNDT9999
.
.------ we are printing the report for diseases or operations ------
.
GNDT6000  COMPARE   "54",CLNO               * pagination required ?
          GOTO      GNDT6100 IF LESS        * no
          CALL      HEAD1000                * yes - paginate
          GOTO      GNDT6200
.
GNDT6100  CALL      PAGE0000                * print underline
.
GNDT6200  PRINT     *N,"GRAND TOTAL",*57,GNDADMNS,*63,GNDBDAYS:
                       *73,GNDDAYCS,*81,"|",*85,DISPOPS,*98,DISPOPS1:
                       *111,DISPOPS2,*124,DISPOPS3;
.
          CALL      PAGE0000                * print underline
.
. ****************************************** Start of altered code     *I-61002
....      PRINT     *N,"Ward : $",GNDWARD,*23,"Theatre : $",GNDTHEAT:
....                   *47,"Misc : $",GNDMISC,*68,"Lumpsum : $",GNDLSUM:
....                   *92,"Net : $",GNDNET,*114,"Av/Day : $",GNDAVRG;
.
          COMPARE   "99999999",GNDNET       * 100,000,000 or more?
          IF        @LESS
            PRINT     *N,"Ward :",GNDWARD,*8,"$",*23,"Theatre : $",GNDTHEAT:
                         *47,"Misc : $",GNDMISC,*68,"Lumpsum : $",GNDLSUM:
                         *92,"Net :",GNDNET,*98,"$",*114,"Av/Day : $",GNDAVRG;
          ELSE
            PRINT     *N,"Ward :",GNDWARD,*23,"Theatre : $",GNDTHEAT:
                         *47,"Misc : $",GNDMISC,*68,"Lumpsum : $",GNDLSUM:
                         *92,"Net :",GNDNET,*114,"Av/Day : $",GNDAVRG;
          ENDIF
. ****************************************** End of altered code       *I-61002
.
          CALL      PEND0000                * print page end for grand totals
          PRINT     *N;
          ADD       THREE,CLNO
.
GNDT9999  RETURN
+
.**********************************************************************
.*                               ENDR0000                             *
.*               Routine to print the end of the report               *
.**********************************************************************
ENDR0000  COMPARE   "49",CLNO
          CALL      HEAD1000 IF NOT LESS
.
          PRINT     *N,"Admns     = Number of patients who were admitted ":
                       "during the period for each doctor":
                    *N,"Bed Days  = Number of inpatient bed days excluding":
                       " day cases":
                    *N,"Day Case  = Number of day cases admitted for each":
                       " doctor":
                    *N,"$ Ward    = Bed charges accumulated for patients":
                       " during the period including discounts and allowances":
                    *N,"$ Theatre = Theatre charges accumulated for patients":
                       " during the period":
                    *N,"$ Misc    = Miscellaneous charges accumulated for":
                       " patients during the period":
                    *N,"$ Lumpsum = $ Lumpsum amount":
                    *N,"$ Net     = $ Ward + $ Theatre + $ Misc":
                    *N,"$ Av/Day  = $ Net / (Bed Days + Day Cases)":
                    *N,*N,"***  End of Report  ***"
.
          DISPLAY   *P1:24,*EL,*V2LON,*P24:24:
                    "** Report Generation Completed **",*W2;
.
ENDR9999  RETURN
+
.**********************************************************************
.
.------ I/O routines for temp files ------
.
RATMPR1   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM1XX,KEY9;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM1XX,KEY9;;
          RETURN
.
RDTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM1XX,KEY9;TMPDTYPE,TMPDOC,TMPADMNS,TMPBDAYS,TMPDCASE:
                                  TMPOPER,TMPOPER1,TMPOPER2,TMPOPER3,TMPACCOM:
                                  TMPTHEAT,TMPMISC,TMPLSUM
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY9
          READKS    PATTM1XX;TMPDTYPE,TMPDOC,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPER,TMPOPER1,TMPOPER2,TMPOPER3,TMPACCOM:
                             TMPTHEAT,TMPMISC,TMPLSUM
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY9
          READKP    PATTM1XX;TMPDTYPE,TMPDOC,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPER,TMPOPER1,TMPOPER2,TMPOPER3,TMPACCOM:
                             TMPTHEAT,TMPMISC,TMPLSUM
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY9
          WRITE     PATTM1XX,KEY9;KEY9,TMPADMNS,TMPBDAYS,TMPDCASE,TMPOPER:
                             TMPOPER1,TMPOPER2,TMPOPER3,TMPACCOM,TMPTHEAT:
                             TMPMISC,TMPLSUM
          RETURN
.
UPTMPR1   UPDATE    PATTM1XX;TMPDTYPE,TMPDOC,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPER,TMPOPER1,TMPOPER2,TMPOPER3,TMPACCOM:
                             TMPTHEAT,TMPMISC,TMPLSUM
          RETURN
.
DETMPR1   RESET     KEY9
          DELETE    PATTM1XX,KEY9
          RETURN
.
RATMPR2   MOVE      ZERO,OVRCD
          RESET     KEY18
          READ      PATTM2XX,KEY18;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY18
          READ      PATTM2XX,KEY18;;
          RETURN
.
RDTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY18
          READ      PATTM2XX,KEY18;TMPDTYP2,TMPDOC2,TMPOPDIS,TMPOPS2,TMPOPR12:
                                   TMPOPR22,TMPOPR32
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY18
          READKS    PATTM2XX;TMPDTYP2,TMPDOC2,TMPOPDIS,TMPOPS2,TMPOPR12:
                             TMPOPR22,TMPOPR32
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY18
          READKP    PATTM2XX;TMPDTYP2,TMPDOC2,TMPOPDIS,TMPOPS2,TMPOPR12:
                             TMPOPR22,TMPOPR32
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY18
          WRITE     PATTM2XX,KEY18;KEY18,TMPOPS2,TMPOPR12,TMPOPR22,TMPOPR32
          RETURN
.
UPTMPR2   UPDATE    PATTM2XX;TMPDTYP2,TMPDOC2,TMPOPDIS,TMPOPS2,TMPOPR12:
                             TMPOPR22,TMPOPR32
          RETURN
.
DETMPR2   RESET     KEY18
          DELETE    PATTM2XX,KEY18
          RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       PATGEXT
          INC       TFILENAM                     * Generate Temp File Name
          INC       PATITMRD
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PATEX1IO/INC
          INC       PATEXBIO/INC
          INC       PATEXCIO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATICDIO/INC
          INC       PATICOIO/INC
          INC       PATITMIO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
+
