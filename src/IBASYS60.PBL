.************************************************************************
.*  Program   :  IBASYS60                                               *
.*  Function  :  Call Repository Enquiry                                *
.*  Author    :  ROD   14/10/1996                                       *
.*  Mods      :                                                         *
.*        V12.00.01 16/05/2025  Ebon Clements  TSK 0955096              *
.*                  Alphanueric visit number changes                    *
.*        V10.01.01 10/02/2011  Jill Parkinson CAR 233088               *
.*                  Added pmsvx1af                                      *
.*        V9.02.01  28/06/2002  J.Tan                                   *
.*                  Fixed I*C patmx1af                                  *
.*        V9.02.00  06/05/2002  J.Tan                                   *
.*                  Ported from r6.09                                   *
.*        V6.05.01  24/11/1998  Jill Habasque                           *
.*                  Removed CCENTRY                                     *
.*        V6.04.04  23/01/98 J.Tan     SRF 621469                       *
.*                  Fixed problem for ward with no extension            *
.*        V6.04.03  28/04/1997  ROD            SRF 619256               *
.*                  print total cost of calls                           *
.*        V6.04.02  17/01/1997  Steve Armstrong                         *
.*                  Fixed bugs from global recompile (TBC 7)            *
.************************************************************************
.
          INC       STDGENDF           * required for DEBDBTKY.PBL  (Debtors)
          INC       IBAPBXFD/INC
          INC       IBAEXTFD/INC
          INC       IBACHGFD/INC
          INC       PATTRNFD/INC
.         INC       HL7BMTFD/INC
          INC       PATWR1FD/INC
          INC       PATVISFD/INC
          INC       PATDSCFD/INC
          INC       PATMI1FD/INC
          INC       PMSVX1FD/INC
          INC       PATMA1FD/INC
          INC       DEBDBTFD/INC
          INC       DEBCODFD/INC
          INC       CALDURNV/INC
.
CFDBSQLA  DIM       20
CFDBSQLB  DIM       20
.
EOSFLG    FORM      1
ETDATE    DIM       8
ETTIME    DIM       6
EXTDATE8  DIM       8
SAVEXTN   DIM       4
.
CHARGE    FORM      3.2
TOTCHRGE  FORM      4.2
ZED20     INIT      "zzzzzzzzzzzzzzzzzzzz"
FDDATE    DIM       10
TDDATE    DIM       10
EXTENSN   DIM       4
TODATE    DIM       8
FROMDATE  DIM       8
FLDSEL    FORM      1
SCREEN    FORM      1
NXTSCRN   FORM      1
DSPEDATE  DIM       8
DSPBDATE  DIM       8
DSPSDATE  DIM       10
.
PRGID     INIT      "IBASYS60"
PRGNAM    INIT      "Call Repository Enquiry"
VERSION   INIT      "V12.00.01"
+
.************************************************************************
.*  ML0000  :  Mainline                                                 *
.************************************************************************
ML0000    CALL      INIT0000                      * initialisation
.
ML1000    CALL      SCRN0000                      * display screen
.
          CALL      KEXT0000                      * keyin Extension No.
          BRANCH    EXIT,ML9999,ML2000            * EXITCHAR,nothing inpuT
          CALL      FDAT0000                      * keyin from date
          CALL      TDAT0000                      * keyin to date
.
ML2000    CALL      PROC0000                      * do the main bit
.
ML9999    CHAIN     PGM
+
.************************************************************************
.*  INIT0000  :  Initialisation                                         *
.************************************************************************
INIT0000  CALL      DISPHEAD
.
          OPEN      IBAPBXA1,"ibapabxf"
          OPEN      IBACHGA1,"ibachgaf"
          OPEN      IBAEXTA1,"ibaextaf"
          OPEN      IBAEXTA2,"ibaextaf"
          OPEN      DEBDBTA1,"debdbtaf"
          OPEN      DEBDBTA2,"debdbtaf"
          OPEN      PATTRAN2,"pattranf"
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PATWR1A1,"patwr1af"
.
          MOVE      "00000000",FROMDATE
          MOVE      "99999999",TODATE
.
INIT9999  RETURN
+
.************************************************************************
.*  SCRN0000  :  Display screen layout                                  *
.************************************************************************
SCRN0000  DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON," 1",*HOFF,". Extension No. : ":
                    *P1:5,*V2LON," 2",*HOFF,". From Date     : ":
                    *P1:6,*V2LON," 3",*HOFF,". To Date       : "
.
          DISPLAY   *P1:8,*V2LON,*ULON,"Call Date ",*P12:8,"Call Time":
                    *P22:8,"Duration",*P31:8,"Phone Number",SP20:
                    *P64:8,"Charge$",*P72:8,"Billed  "
.
SCRN9999  RETURN
+
.************************************************************************
.*  KEXT0000  :  Keyin Extension Number                                 *
.************************************************************************
KEXT0000  MOVE     "21",ECOL
          MOVE     "4",EVERT
          MOVE     SP4,CKYIDEF4
          MOVE     ZERO,CKYIMAND
          MOVE     ZERO,EOSFLG
.
          CALL     KEYINEXT
          BRANCH   EXIT,KEXT9000,KEXT8500

          MOVE      IBEXEXTN,EXTENSN
          DISPLAY   *P27:4,IBEXDESC
.
. everything is Ok!
.
KEXT8000  MOVE      ZERO,EXIT
          GOTO      KEXT9999
.
KEXT8500  MOVE      ONE,EXIT     * EXITCHAR
          GOTO      KEXT9999
.
. nothing input so clear fields
.
KEXT9000  MOVE      "00000000",FROMDATE
          MOVE      "99999999",TODATE
          MOVE      SP4,EXTENSN
          DISPLAY   *P21:4,*EL,*P21:5,*EL,*P21:6,*EL
          MOVE      TWO,EXIT
.
KEXT9999  RETURN
+
.**************************************************************************
.*  FDAT0000  :  keyin From date                                          *
.**************************************************************************
FDAT0000  UNPACK    SP10,CDAY,CMON,CYEAR
          MOVE      "21",CCOL
          MOVE      FIVE,CVERT
          MOVE      ZERO,CDEFDTE
          MOVE      "00000000",FROMDATE
          MOVE      CCC,CCENT
.
FDAT1000  CALL      KEYDATE
          BRANCH    CQUEST,FDAT1000
          BRANCH    OVRCD,FDAT3000                * anything input
.
          PACK      FROMDATE,CCENT,CYEAR,CMON,CDAY
          PACK      FDDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR  * display var
          REP       " 0",FDDATE 
          GOTO      FDAT9999
.
FDAT3000  DISPLAY   *P21:5,*V2LON,"Start"         * no date was input
          MOVE      "Start",FDDATE                * display var
.
FDAT9999  RETURN
+
.**************************************************************************
.*  TDAT0000  :  keyin To date                                            *
.**************************************************************************
TDAT0000  UNPACK    SP10,CDAY,CMON,CYEAR
          MOVE      "21",CCOL
          MOVE      SIX,CVERT
          MOVE      ZERO,CDEFDTE
          MOVE      "99999999",TODATE
          MOVE      CCC,CCENT
.
TDAT6000  CALL      KEYDATE
          BRANCH    CQUEST,TDAT6000
          BRANCH    OVRCD,TDAT6500                * anything input?
.
          PACK      TODATE,CCENT,CYEAR,CMON,CDAY
          PACK      TDDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR    * display var
          REP       " 0",TDDATE 
          GOTO      TDAT7000
.
TDAT6500  DISPLAY   *P21:6,*V2LON,"Finish"        * no date was input
          MOVE      "Finish",TDDATE               * display var
          GOTO      TDAT9999
.
. check if dates entered are valid (range)
.
TDAT7000  REP       " 0",FROMDATE
          REP       " 0",TODATE
.
          MATCH     FROMDATE,TODATE
          GOTO      TDAT9000 IF LESS
          GOTO      TDAT9999
. 
TDAT9000  DISPLAY   *P1:24,*EL,*B,"Invalid date range.  ";
          CALL      HITENTER
          GOTO      TDAT0000
.
TDAT9999  RETURN
+
.************************************************************************
.*  PROC0000  :  display data                                           *
.************************************************************************
PROC0000  MOVE      NINE,CVERT
          MOVE      ONE,SCREEN
          DISPLAY   *P1:CVERT,*EF
.
          PACK      KEY20,EXTENSN,TODATE,ZED20    * read in reverse order
          CALL      RSIBPBX1
PROC1000  CALL      RPIBPBX1
          BRANCH    OVRCD,PROC5000
.
          MATCH     EXTENSN,IBPBEXTN
          GOTO      PROC5000 IF NOT EQUAL
.
          MATCH     FROMDATE,IBPBSDAT             * before from date?
          GOTO      PROC5000 IF LESS
.
          COMPARE   TWENTY3,CVERT                 * enough room on screen
          GOTO      PROC3000 IF LESS
.
. we need a new screen
.
PROC1500  MOVE      ONE,NXTSCRN                    * we have a next screen
          CALL      SOPT0000                       * ask line 24 options
          BRANCH    EXIT,PROC0000:                 * first screen
                         PROC2000:                 * next screen
                         PROC6000:                 * Print by Admission
                         PROC7000:                 * Print by Debtor
                         PROC9999                  * exit
          BRANCH    FLDSEL,PROC8000,PROC8100,PROC8200   * a field was selected
.
. next screen was selected
.
PROC2000  DISPLAY   *P1:9,*EF
          ADD       ONE,SCREEN
          MOVE      "9",CVERT
.
PROC3000  CALL      FRMT0000                      * format data for display
          DISPLAY   *P1:CVERT,DSPSDATE,SP1,IBPBSTIM,*P22:CVERT,CALLDURN:
                    *P31:CVERT,IBPBPHNO,*P64:CVERT,CHARGE:
                    *P72:CVERT,DSPBDATE
          ADD       ONE,CVERT
          GOTO      PROC1000
.
PROC5000  MOVE      ZERO,NXTSCRN                   * we have a next screen
          CALL      SOPT0000                       * ask line 24 options
          BRANCH    EXIT,PROC0000:                 * first screen
                         PROC2000:                 * next (no next screen here)
                         PROC6000:                 * Print by Admission
                         PROC7000:                 * Print by Debtor
                         PROC9999                  * exit
          BRANCH    FLDSEL,PROC8000,PROC8100,PROC8200   * a field was selected
.
PROC6000  CALL      PADM0000                       * Print (by admission no.)
          BRANCH    NXTSCRN,PROC1500
          GOTO      PROC5000
.
PROC7000  CALL      PDEB0000                       * Print (by debtor no.)
          BRANCH    NXTSCRN,PROC1500
          GOTO      PROC5000
.
PROC8000  CALL      KEXT0000                       * keyin extension no.
          BRANCH    EXIT,PROC9999                  * EXITCHAR
          GOTO      PROC0000
.
PROC8100  CALL      FDAT0000                       * keyin from date
          GOTO      PROC0000                       * redisplay with new data
.
PROC8200  CALL      TDAT0000                       * keyin to date
          GOTO      PROC0000                       * redisplay with new data
.
PROC9999  RETURN
+
.**************************************************************************
.*                                SOPT0000            Called by: TEST0000 *
.**************************************************************************
SOPT0000  
. check which screen we are on. If 1st dont' display (P)revious
.
          BRANCH    SCREEN,SOPT0500     screen=1=1st screen
          BRANCH    NXTSCRN,SOPT0200
.
          DISPLAY   *P1:24,*EL,"Select Item, (",*V2LON:
                    "F",*HOFF,")irst, Print (",*V2LON:
                    "A",*HOFF,")dmiss, Print (",*V2LON,"D",*HOFF:
                    ")ebtor, (",*V2LON,"E",*HOFF,")xit ?"
          MOVE      "64",CCOL                     * keyin position
          GOTO      SOPT1000                      * get keyin
.
SOPT0200  DISPLAY   *P1:24,*EL,"Select Item, (",*V2LON,"F":
                    *HOFF,")irst, (",*V2LON,"N",*HOFF,")ext, Print (",*V2LON:
                    "A",*HOFF,")dmiss, Print (",*V2LON,"D",*HOFF:
                    ")ebtor, (",*V2LON,"E",*HOFF,")xit ?"
          MOVE      "72",CCOL                     * keyin position
          GOTO      SOPT1000                      * get keyin
.
. we are on the 1st screen
.
SOPT0500  BRANCH    NXTSCRN,SOPT0600
          DISPLAY   *P1:24,*EL,"Select Item, Print (",*V2LON:
                    "A",*HOFF,")dmiss, Print (",*V2LON,"D",*HOFF:
                    ")ebtor, (",*V2LON,"E",*HOFF,")xit ?"
          MOVE      "55",CCOL                   * keyin position
          GOTO      SOPT1000
SOPT0600  DISPLAY   *P1:24,*EL,"Select Item, (",*V2LON,"N":
                    *HOFF,")ext, Print (",*V2LON:
                    "A",*HOFF,")dmiss, Print (",*V2LON,"D",*HOFF:
                    ")ebtor, (",*V2LON,"E",*HOFF,")xit ?"
          MOVE      "63",CCOL                   * keyin position
          GOTO      SOPT1000
.
. now get keyin
.
SOPT1000  KEYIN     *PCCOL:24,*DV,UNDLN2:
                    *PCCOL:24,*V2LON,*JR,ANS:
                    *PCCOL:24,*DV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS                    * Change to lower case
.
          TYPE      ANS                           * was a numeric input?
          GOTO      SOPT8000 IF EQUAL
.
          MATCH     "F",ANS
          GOTO      SOPT7000 IF EQUAL
          MATCH     "N",ANS
          GOTO      SOPT4000 IF EQUAL
          MATCH     "A",ANS
          GOTO      SOPT5000 IF EQUAL
          MATCH     "D",ANS
          GOTO      SOPT6000 IF EQUAL
          MATCH     "E",ANS
          GOTO      SOPT2000 IF EQUAL
.
. error in input
.
SOPT1500  BEEP  
          GOTO      SOPT1000
.
SOPT2000  MOVE      FIVE,EXIT                     * Exit was selected
          GOTO      SOPT9999
.
SOPT4000  COMPARE   ZERO,NXTSCRN                  * was next screen asked?
          GOTO      SOPT1500 IF EQUAL
          MOVE      TWO,EXIT                      * Next was selected
          GOTO      SOPT9999
.
SOPT5000  MOVE      THREE,EXIT                    * Next Class. was selected
          GOTO      SOPT9999
.
SOPT6000  MOVE      FOUR,EXIT                     * Next Class. was selected
          GOTO      SOPT9999
.
. First was selected so check if it was asked
.
SOPT7000  BRANCH    SCREEN,SOPT1500
          MOVE      ONE,EXIT                      * First was selected
          GOTO      SOPT9999
.
. a numeric was input
.
SOPT8000  MOVE      ANS,FLDSEL                    * move to form field
          IF        FLDSEL<1 | FLDSEL >3
            BEEP
            GOTO      SOPT1000
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      SOPT9999
.
SOPT9999  RETURN
+
.************************************************************************
.*  FRMT0000  :  format data for display                                *
.************************************************************************
FRMT0000  UNPACK    IBPBSDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DSPSDATE
.
          UNPACK    IBPBEDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPDATE,DSPEDATE
.
          UNPACK    IBPBBILD,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPDATE,DSPBDATE
.
          MOVE      ZERO,IBCHRATE
          PACK      KEY3,IBEXCHRG
          CALL      RDIBCHG1                        * get rate
          ASSIGN    (IBCHRATE*IBPBPULS),CHARGE
.
          MOVE      IBPBSTIM,TIMESTRT
          MOVE      IBPBETIM,TIMESTOP
          CALL      CALLDURN                        * get duration of call
.
FRMT9999  RETURN
+
.***********************************************************************
.*  PDEB0000  :  print report be debtor                                *
.***********************************************************************
PDEB0000  DISPLAY   *P1:24,*EL,"Debtor : "
          MOVE      "24",CVERT
          MOVE      "10",CCOL
          MOVE      ZERO,CKEYTYP
          MOVE      ZERO,TOTCHRGE                 * set total to zero
.
          CALL      KDBDBA00                     * keyin debtor code (DEBDBTKY)
          BRANCH    EXIT,PDEB9999,PDEB9999
.
          DISPLAY   *P45:24,"*** Printing ***"
.
          CALL      IBACLOCK
          CALL      HEAD80
.
          PRINT     *N,"Debtor : ",DBDBDEB,SP3,DBDBNA1,*N
          CALL      UND80
          PRINT     *1,"Extn   Date     Time        Durn  Phone Number":
                    *64,"Charge",*72,"Billed"
          CALL      UND80
          MOVE      TEN,CLNO
.
          PACK      KEY12,DBDBDEB,SP20
          CALL      RSIBEXT2
PDEB1000  CALL      RKIBEXT2
          BRANCH    OVRCD,PDEB9000
.
          MATCH     DBDBDEB,IBEXDEBT             * same debtor code?
          GOTO      PDEB9000 IF NOT EQUAL
.
. now loop thru all calls (reverse order) for this extension no.
.
          PACK      KEY20,IBEXEXTN,ZED20
          CALL      RSIBPBX1
PDEB2000  CALL      RPIBPBX1
          BRANCH    OVRCD,PDEB1000               * try for another extension
.
          MATCH     IBEXEXTN,IBPBEXTN            * same extension
          GOTO      PDEB1000 IF NOT EQUAL
.
          COMPARE   FIFTY5,CLNO                  * check if need a new page
          GOTO      PDEB5000 IF LESS
.
.   we need a new screen
.
          CALL      IBACLOCK
          CALL      HEAD80
          PRINT     *N,"Debtor : ",DBDBDEB,SP3,DBDBNA1,*N
          CALL      UND80
          PRINT     *1,"Extn   Date     Time        Durn  Phone Number":
                    *64,"Charge",*72,"Billed"
          CALL      UND80
          MOVE      TEN,CLNO
.
PDEB5000  CALL      FRMT0000                     * format data for print
.
          PRINT     *1,IBPBEXTN,SP1,DSPSDATE,SP1,IBPBSTIM,*26,CALLDURN:
                    *35,IBPBPHNO,*64,CHARGE,*72,DSPBDATE
          ADD       CHARGE,TOTCHRGE              * increment total charge
          ADD       ONE,CLNO
          GOTO      PDEB2000
.
PDEB9000  IF        TOTCHRGE<>0
            PRINT     *55,"Total:",*63,TOTCHRGE
          ENDIF
          PRINT     *N,*N,"*** End of Report ***"
.
PDEB9999  RETURN
+
.***********************************************************************
.*  PADM0000  :  print report by Admission number                      *
.***********************************************************************
PADM0000  CALL      KADM0000                      * keyin admission number
          BRANCH    EXIT,PADM9999                 * nothing input
.
          MOVE      ZERO,TOTCHRGE                 * set total to zero
          DISPLAY   *P45:24,"*** Printing ***"
.
          CALL      ADMH0000                      * print report header
.
. get range of date/times patient was at a particular extension number. Then 
. get all calls made between these date/times. Then get next range of date/time
. in case patient has changed ward/bed and has a new extension number. Do all
. this up until discharge.
.
          PACK      KEY30,AADMNO,SP30
          CALL      RDSTRAN2
PADM1000  CALL      RDKTRAN2
          BRANCH    OVRCD,PADM8000
.
          MATCH     AADMNO,TADMN
          GOTO      PADM8000 IF NOT EQUAL
.
          PACK      KEY6,TWARD,TBED               * get extension number
          CALL      RDWARD1
          BRANCH    OVRCD,PADM9000                * error!
.
          MATCH     SP4,WEXTN                     * ignore if no extension
          GOTO      PADM1000 IF EQUAL
.
          PACK      KEY4,WEXTN                    * make sure extension exists
          CALL      RDIBEXT1
          BRANCH    OVRCD,PADM1000 
.
          MOVE      TDATE,STDATE                  * save start date
          MOVE      TTIME,STTIME                  * save start time
          MOVE      WEXTN,SAVEXTN                 * save extension number
.
. now check for a change in ward bed (extension number)
.
PADM1500  CALL      RDKTRAN2
          BRANCH    OVRCD,PADM8000
.
          MATCH     AADMNO,TADMN
          GOTO      PADM8000 IF NOT EQUAL
.
          MOVE      TDATE,ETDATE                  * save end date
          MOVE      TTIME,ETTIME                  * save end time
.
          MATCH     ANSD,TMOVE                    * discharge record?
          GOTO      PADM3500 IF EQUAL             * finished if discharged
.
          PACK      KEY6,TWARD,TBED               * get extension number
          CALL      RDWARD1
          BRANCH    OVRCD,PADM9000                * error!
.
. if no extension then continue anyway, because gcal0000 will do nothing 
.
          MATCH     SP4,WEXTN                     * ignore if no extension
          GOTO      PADM3000 IF EQUAL
.
          PACK      KEY4,WEXTN                    * make sure extension exists
          CALL      RDIBEXT1
          BRANCH    OVRCD,PADM9100 
.
          MATCH     WEXTN,SAVEXTN                 * still same extension?
          GOTO      PADM1500 IF EQUAL             * get next transfer record
.
. we have the start and end dates and times so get calls for this range
.
PADM3000  CALL      GCAL0000                      * get calls between these dats
          MOVE      ETDATE,STDATE                 * new strt date = old end date
          MOVE      ETTIME,STTIME                 * new strt time = old end time
          MOVE      WEXTN,SAVEXTN                 * new extension
          GOTO      PADM1500
.
PADM3500  CALL      GCAL0000                      * get calls between these dats
.
PADM8000  IF        TOTCHRGE<>0
            PRINT     *55,"Total:",*63,TOTCHRGE
          ENDIF
          PRINT     *N,*N,"*** End of Report ***"
          GOTO      PADM9999
.
PADM9000  DISPLAY   *P1:24,*EL,"ERROR:  Ward/Bed Missing ",*V2LON,TWARD:
                    *HOFF,"/",*V2LON,TBED,*HOFF,".  ";
          CALL      HITENTER
          GOTO      PADM9999
.
PADM9100  DISPLAY   *P1:24,*EL,"ERROR:  Extension Missing ",*V2LON,WEXTN:
                    *HOFF,".  ";
          CALL      HITENTER
.
PADM9999  RETURN
+
.************************************************************************
.*  ADMH0000  :  print header for report by admission number            *
.************************************************************************
ADMH0000  CALL      IBACLOCK
          CALL      HEAD80
.
          MOVE      TWO,PACFRMT
          MOVE      PGNAME,PACGNAME
          MOVE      PSNAME,PACSNAME
          MOVE      PTITL,PACTITLE
          CALL      PACNAME
.
          PRINT     *N,"Admission No. : ",AADMNO:
                    *N,"Name : ",PACFNAME,*N
.
          CALL      UND80
          PRINT     *1,"Extn   Date     Time        Durn  Phone Number":
                    *64,"Charge",*72,"Billed"
          CALL      UND80
          MOVE      TEN,CLNO
.
ADMH9999  RETURN
+
.***********************************************************************
.*  GCAL0000  :  get calls for a patient between 2 given dates/times   *
.*               Parameters: STDATE = start date, STTIME = start time  *
.*                           ETDATE = end date  , ETTIME = end time    *
.*                           SAVEXTN = Extension Number                *
.***********************************************************************
GCAL0000  
.......   PACK      KEY20,SAVEXTN,STDATE,SP20
          PACK      KEY20,SAVEXTN,SP20
          CALL      RSIBPBX1
GCAL2000  CALL      RKIBPBX1
          BRANCH    OVRCD,GCAL9999
.
          MATCH     SAVEXTN,IBPBEXTN
          GOTO      GCAL9999 IF NOT EQUAL
.
. now check if call in range
.
          UNPACK    IBPBSDAT,EXTDATE8
.
          MATCH     EXTDATE8,ETDATE               * end trans date < ext date?
          GOTO      GCAL9999 IF LESS
.
.  now check Start date/time
.
          MATCH     STDATE,EXTDATE8               * ext date < start trans date?
          GOTO      GCAL2000 IF LESS
.
          MATCH     STDATE,EXTDATE8
          IF        @EQUAL
            MATCH     STTIME,IBPBSTIM               * time in range?
            GOTO      GCAL2000 IF LESS              * not in range
          ENDIF
.
.    no check End date/time
.
          MATCH     EXTDATE8,ETDATE                    * date in pats stay range
          GOTO      GCAL9999 IF LESS
.
          MATCH     EXTDATE8,ETDATE                    * date in pats stay range
          IF        @EQUAL
            MATCH     IBPBSTIM,ETTIME
            GOTO      GCAL5000 IF NOT LESS
            GOTO      GCAL2000
          ENDIF
.
. we have a call made in date/time range for this extension
.
GCAL5000  COMPARE   FIFTY5,CLNO                  * check if need a new screen
          GOTO      GCAL6000 IF LESS
.
          CALL      ADMH0000                     * print report header
.
GCAL6000  CALL      FRMT0000                     * format data for print
          PRINT     *1,IBPBEXTN,SP1,DSPSDATE,SP1,IBPBSTIM,*26,CALLDURN:
                    *35,IBPBPHNO,*64,CHARGE,*72,DSPBDATE
          ADD       CHARGE,TOTCHRGE              * increment total charge
          ADD       ONE,CLNO
          GOTO      GCAL2000
.
GCAL9999  RETURN
+
.**********************************************************************
.*                           KADM0000                                 *
.*                      Input admission number                        *
.**********************************************************************
KADM0000  DISPLAY   *P1:24,*EL,"Admission No.: "
.
          KEYIN     *P16:24,*EL,*DV,UNDLN8:
                    *P16:24,*V2LON,AADMNO
.
          MATCH     ZEROVISN,AADMNO          * was anything input ?
          GOTO      KADM9900 IF EQUAL        * no.
.
          DISPLAY   *P16:24,*V2LON,AADMNO     * clear underlines
.
          PACK      KEY8,AADMNO              * key to admission file
          CALL      RDMISS1                  * valid visit record ?
          BRANCH    OVRCD,KADM9000           * no.
.
          MOVE      AADMNO,KEY8
          CALL      RDVISA1                  * valid visit record ?
          BRANCH    OVRCD,KADM9000           * no.
.
          MOVE      AURNO,KEY8               * key to master file
          CALL      RDMAST1                  * get the PMI details
          BRANCH    OVRCD,KADM9400           * missing PMI details
.
          MOVE      SP8,DDATE
          UNPACK    PVIBILL,KEY8
          CALL      RDDSCH1
.
          MOVE      ZERO,EXIT                * we have a valid patient
          GOTO      KADM9999
.
.         Error messages
.
KADM9000  DISPLAY   *P1:24,*EL,*B,"Invalid visit number. ";
          CALL      HITENTER
          GOTO      KADM0000
.
KADM9100  DISPLAY   *P1:24,*EL,*B,"Patient is not a discharged inpatient. ";
          CALL      HITENTER
          GOTO      KADM0000
.
KADM9400  DISPLAY   *P1:24,*EL,*B,"Missing PMI details. Please contact IBA. ";
          CALL      HITENTER
          GOTO      KADM0000
.
KADM9900  MOVE      ONE,EXIT                 * nothing input
.
KADM9999  RETURN
.
+
.
.
          INC       STDGENCD              * required for Debtors
          INC       IBAPBXIO/INC
          INC       IBAEXTIO/INC
          INC       IBACHGIO/INC
          INC       PATTRNIO/INC
.         INC       HL7BMTIO/INC
.         INC       HL7BMTTR
          INC       PATWR1IO/INC
          INC       PATVISIO/INC
.         INC       HL7BMTVI
          INC       PATDSCIO/INC
          INC       PATMI1IO/INC
          INC       PMSVX1IO/INC
          INC       PATMA1IO/INC
.         INC       HL7BMTMA
          INC       DEBDBTIO/INC
          INC       DEBCODIO/INC
          INC       KEYINEXT
          INC       IBAEXTDS
          INC       DEBDBTKY
          INC       CALLDURN
          INC       DEBDKIKY
