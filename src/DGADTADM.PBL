.**************************************************************************
.*  DGADTADM  :  Admit a patient  from a DataGate request                 *
.*               ~~~~~~~~~~~~~~~                                          *
.*                                                                        *
.*  Author    :  ROD   (19/10/95)                                         *
.*                                                                        *
.*  Mods      :                                                           *
.*        V12.00.01 14/05/2025  Ebon Clements   TSK 0955096               *
.*                  Added alpanumeric visit number generation             *
.*                  NXTA0000 - GENANVIS                                   *
.*        V11.01.01 08/11/2021 J.Tan           TSK 0880410                *
.*                  Mod for System Health fund on hold invoice            *
.*        V10.07.01 04/01/2015  Ebon Clements    TSK 0294154              *
.*                  Added PTPAOSMS to prev address file write             *
.*        V10.06.02 16/05/2015  J.Tan            CAR 314108               *
.*                  Changed XSPREGP & XSPGPPC to DIM 10                   *
.*        V10.06.01 12/05/2015  Steve Armstrong  CAR 314108               *
.*                  Removed reference to PATCGPFD (No Longer in use)      *
.**************************************************************************
.*        V10.04.01 22/01/2014  Don Nguyen        CAR 295972              *
.*                  Modified UPAD0000 - Changed KEY16 to KEY24            *
.*        V10.03.01 15/05/2012  J.Tan             CAR 255708              *
.*                  Mods checking for Hold Invoices From Date             *
.*        V10.02.03 13/07/2011  Steve Armstrong   CAR 240722              *
.*                  Further mods to cater for second given name           *
.*                  as part of PATGSRFD keys                              *
.*        V10.02.02 22/06/2011  Steve Armstrong   CAR 240722              *
.*                  Mods to cater for changes to PATLOCFD.                *
.*                       - LSNAME & LGNAME extended to 40 chars.          *
.*                       - PTLCGNM2 added.                                *
.*                  Mods to cater for changes to PATGSRFD:                *
.*                       - GSRSNAM & GSRGNAM extended to 30 chars.        *
.*                       - PTGSGNM2 added.                                *
.*                       - all indexes changed in length.                 *
.*        V10.02.01 30/03/2011  Mike Laming       CAR 240107              *
.*                  Remove PATMDSFD & IO - Obsolete                       *
.**************************************************************************
.*        V10.01.03 02/02/2011  Steve Armstrong   CAR 237520              *
.*                  Mods to remove Detente interface (PATDETNT)           *
.*        V10.01.02 06/12/2010  Ebon Clements     CAR 233927              *
.*                  Added reason for hold update to invoice pending       *
.*        V10.01.01 01/12/2010  Peter Vela        CAR 233148              *
.*                  Initialised pattranf variables to spaces before write *
.*        V10.00.01 12/04/2010  Steve Armstrong   CAR 219111              *
.*                  Mods for change from KEY17 to KEY25 in PATUNAFD.      *
.**************************************************************************
.*        V9.04.01  04/08/2005  J.Tan        CAR 62750                    *
.*                  Mods not to use the redefined amount                  *
.**************************************************************************
.*        V9.03.01  07/11/2003  Steve Armstrong  CAR 44931                *
.*                  Mods to load key for pmsvx1af prior to writing new    *
.*                  record.                                               *
.**************************************************************************
.*        V9.02.06  14/11/2002  Davin                                     *
.*                  Removed reference to $$DBASE WEB compile option       *
.*        V9.02.05  22/04/2002  Mike Laming                               *
.*                  Replace PMEDI with Composite variable PMEDIXX (which  *
.*                  contains PMEDI+PTMXMCCD) Add call (SPLTPMED)to split  *
.*                  these.                                                *
.*        V9.02.04  16/01/2002 Sai SRF 14169                              *
.*                  Removed PATMDIIO & PATMOPIO                           *
.*        V9.02.03  12.12.2001  Jill Habasque                             *
.*                  Added move of PPOST to PMVXPOST
.*        V9.02.02  29.11.2001  B.G.Ackland                               *
.*                  Remove pi's from Program
.*        V9.02.02  24.10.2001  B.G.Ackland                               *
.*                  Remove pi from CFRDTE & CMMHDT Control File Update    *
.*        V9.02.01  09/09/2001  Sandra Barcham                            *
.*                  Add DOB & SEX to patgsrnf                             *
.*        V9.00.00  26/09/2001 (18/06/2001)  Mike Laming                  *
.*                  Add fields from PMI Master Extension 2 - PMSPX2       *
.*                  and Visit Master Extn 1 - PMSVX1 (for RCH & SVHM)     *
.*                  using $$DBASE compiler optn for WEB based vers only   *
.*                  (SVHM & RCH will not be using Pre-admission PMI Master*
.*                   so there is no Extn.2 to PATPRAM)                    *
.*        V5.10.B02 11/04/2001  Ebon Clements                             *
.*                  Made changes for new PATPA1FD layout. Moved spaces to *
.*                  new fields that are not used                          *
.*        V5.10.B01 29/03/2001  Glenn Saunders                            *
.*                  Remove access to PTCNSNDX and associated processing.  *
.*                  Remove all references to PATSUR file (old surnames).  *
.*        V5.09.B02 08/01/2001  Pat Dirito                                *
.*                  Added XSPCELL for Previous Address Data               *
.*        V5.09.B01 03/01/2001  J.Tan                                     *
.*                  Added Sex & Date of Birth to patgsrnf file            *
.*        V5.08.05  16/08/2000  Caleb Sharman                             *
.*                  Changed Health Fund variables to be 8 chars           *
.*        V5.08.04  19/07/2000  Steve Armstrong   srf 647004              *
.*                  Mods to use alternate index for patma1af in ISIN0000  *
.*                  so that datagate fields aren't overwritten.           *
.*        V5.08.03  25/02/2000  Greg Horvat                               *
.*                  Removed PATADJIO PATMMRIO & PATPRADJ                  *
.*        V5.08.02  08/02/2000   Steve Armstrong                          *
.*                  Mods to not allow a blank bed for a ward/bed ward     *
.*        V5.08.01  14/01/2000   Steve Armstrong                          *
.*                  Mods to validate ward/bed before posting admission    *
.**************************************************************************
.*            V5.07.04 01/11/1999   Steve Armstrong                       *
.*                     Mods for admission without pre-admission           *
.*            V5.07.03 20/07/1999  Steve Downing                          *
.*                     Changed to pass century variable to DMYCON and     *
.*                     JULCON                                             *
.*            V5.07.02 07/07/1999  Steve Armstrong                        *
.*                     Mods to set ALACDTE when updating admission record *
.*            V5.07.01 22/12/1998  Davin                                  *
.*                     Y2K mods                                           *
.*            V5.07.00 21/10/1998  Davin                                  *
.*                     Mods for 507 changes                               *
.*            V5.05.02 03/11/1997  Steve Armstrong                        *
.*                     Mods for new admission file variables              *
.*            V5.05.01 13/10/1997  Steve Armstrong   WHL                  *
.*                     Mods for new Master extension file variables       *
.*                     (PTMXOPER - PTMXPOST)                              *
.**************************************************************************
.*            V5.04.02 07/07/1997  Steve Armstrong                        *
.*                     Mods to use century passed from datagate instead   *
.*                     of CCC.                                            *
.*            V5.04.01 17/04/1997  Steve Armstrong                        *
.*                     Mods to use inbound & outbound comms client        *
.*                     (DGATEIN & DGATEOUT).                              *
.*                                                                        *
.**************************************************************************
          DEFPROC   DGADTADM
 IFGE     $$VER,7
.
          INC       DGHOS31V            * copied from PATDAT31.PBL (& modified)
.
ADMITFLG  FORM      1       * flag to indicated if already admitted
ADSTATUS  DIM       1
ALTMI1A1  IFILE     SQL, FIXED=620, KEY="U1-8"
CCNTRESI  DIM       1       * continue if claim code doesnt match resident stat?
DIM32     DIM       32
FORMSTAT  FORM      1
KEEPOLAL  FORM      1       * keep old surname as alias ? 0=No, 1=Yes
NEWADMFL  FORM      1       * new admission flag
.                               0 = no pre-admission
.                               1 = pre-admission exists
PUTONSBY  DIM       1       * put patient on standby if bed is occupied (Y/N)?
.
. Save variables for patient master fields read in from Datagate but
. which don't exist in PATAM1FD
.
SPHKADUN  DIM       10
SPTMAEMP  DIM       6
SPTMANKO  DIM       14
SPTMANKE  DIM       6
SPTMADCN  DIM       10
SPTMXRDT  DIM       8
SPTMXMEL  DIM       30
SPTMXLGA  DIM       4
SPTMXLS   DIM       3
SPTMXLSD  DIM       8
SPTMXFHM  DIM       1
SPTMXMH1  DIM       3
SPTMXMH2  DIM       3
SPTMXMH3  DIM       3
SPTMXECN  DIM       20
SPTMXEC1  DIM       35
SPTMXEC2  DIM       35
SPTMXEC3  DIM       35
SPTMXEC4  DIM       35
SPTMXECC  DIM       8
SPTMXECP  DIM       20
SPTMXECB  DIM       20
SPTMXECR  DIM       10
SPTMXNRN  DIM       20
SPTMXNR1  DIM       35
SPTMXNR2  DIM       35
SPTMXNR3  DIM       35
SPTMXNR4  DIM       35
SPTMXNRC  DIM       8
SPTMXNRP  DIM       20
SPTMXNRB  DIM       20
SPTMXNRR  DIM       10
SPTMX3BX  DIM       8
SPTMXCHN  DIM       20
SPTMXSPI  DIM       20
SPTMXOSD  DIM       8
SMPXINTR  DIM       1
SMPXLNG1  DIM       3	
SMPXLNG2  DIM       3	
SMPXLNG3  DIM       3	
SMPXPEML  DIM       80	
SMPXEDOB  DIM       1	
SMPXCMOB  DIM       20	
SMPXCEML  DIM       80	
SMPXCCRP  DIM       1	
SMPXKMOB  DIM       20	
SMPXKEML  DIM       80	
SMPXKCRP  DIM       1	
SMPXRMOB  DIM       20	
SMPXREML  DIM       80	
SMPXRCRP  DIM       1	
SMPXMEDC  DIM       8	
SMPXDETY  DIM       3	
SMPXPRIS  DIM       15	
SMPXCSER  DIM       15	
SMPXPHEI  FORM      6	
SMPXPWEI  FORM      6	
SMPXDREC  DIM       8	
SMPXDVAC  DIM       3	
SMPXPNSD  DIM       8	
SMPXUYN4  DIM       1	
SMPXUYN5  DIM       1	
SMPXUYN6  DIM       1	
SMPXABRG  DIM       3	
SMPXPRVI  DIM       3	
SMPXCRIN  DIM       1	
SMPXHOML  DIM       1	
SMPXUDC1  DIM       50	
SMPXUDC2  DIM       50	
SMPXUDC3  DIM       50	
SMPXUSR7  DIM       3	
SMPXUSR8  DIM       3	
SMPXUSR9  DIM       3	
SMPXMSNA  DIM       20	
SMPXMGNA  DIM       25	
SMPXMTLE  DIM       4	
SMPXMAD1  DIM       35	
SMPXMAD2  DIM       35	
SMPXMAD3  DIM       35	
SMPXMAD4  DIM       35	
SMPXMPOS  DIM       8	
SMPXMPNO  DIM       20	
SMPXMBNO  DIM       20	
SMPXMMNO  DIM       20	
SMPXMEML  DIM       80	
SMPXMCNT  DIM       3	
SMPXMCRP  DIM       1	
SMPXMLAB  DIM       1	
SMPXMREL  DIM       10	
SMPXFSNA  DIM       20	
SMPXFGNA  DIM       25	
SMPXFTLE  DIM       4	
SMPXFAD1  DIM       35	
SMPXFAD2  DIM       35	
SMPXFAD3  DIM       35	
SMPXFAD4  DIM       35	
SMPXFPOS  DIM       8	
SMPXFPNO  DIM       20	
SMPXFBNO  DIM       20	
SMPXFMNO  DIM       20	
SMPXFEML  DIM       80	
SMPXFCNT  DIM       3	
SMPXFCRP  DIM       1	
SMPXFLAB  DIM       1	
SMPXFREL  DIM       10
.
XSPADD1   DIM       35      * save variables for previous address
XSPADD2   DIM       35
XSPSUBRB  DIM       35
XSPADD4   DIM       35
XSPPOST   DIM       8
XSPTELEP  DIM       20
XSPTELEB  DIM       20
XSPCELL   DIM       20
XSPDOR    DIM       3
XSPREGP   DIM       10
XSPGPPC   DIM       10
XSPGPPT   DIM       2
XSPOSMS   DIM       1
+
.*************************************************************************
.*  DGADM000  :  Process datagate Admission message                      *
.*************************************************************************
DGADM000  MOVE      "ADM",RPLYHEAD
          CALL      ADOPE000                      * open some files         
          CALL      CLEAR000                      * clear some fields
.
          READ      DGATEOUT;AADMNO;              * get pre-admission number
.
          CALL      VALID000                      * read pat. details & validate
          BRANCH    EXIT,DGADM900                 * Error!  Patient not valid
.
. *SB will suppress blank fill, *SP will turn off suppress blank fill
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;*SB,PTITL,PHOSP,PLDAYS,PBDEBT,PSNAME,PGNAME:
                          PPSNAME,PADD1,PADD2,PSUBRB,PADD4,PPOST,PTELEP,PTELEB:
                          PSEX,PMSTAT,PBDATE,PCONT,PREG,PTYPE,POCCUP:
                          PLDDATE,PMEDIXX,PPENNO,PPNDTE,PREPAT,PSMOK,PMICRO:
                          PCEASE,PCASE,PAUTOPY,PHIGH1,PHIGH2,PHIGH3:
                          PLOCDOC,PFUNDH,PFNDTB,PFNDMM,PUSR1,PUSR2,PUSR3:
                          PUSR4,PUSR5,PUSR6,PUYN1,PUYN2,PUYN3,PYRRES:
                          PNKNAME,PNKADD1,PNKADD2,PNKSUBR,PNKADD4,PNKPOST:
                          PNKTELP,PNKTELB,PNKRELP,PFNDYY,PFNDCG,PDECDTE:
                          PDIET,PINITHOS,PHKADUNI,PTMAEMPC,PTMANOKO:
                          PTMANOKE,PTMADCNO,PTMXRDAT,PTMXMEAL,PTMXLGA:
                          PTMXLS,PTMXLSDT,PTMXFHMD,PTMXMHU1,PTMXMHU2:
                          PTMXMHU3,PTMXECNM,PTMXECA1,PTMXECA2,PTMXECA3:
                          PTMXECA4,PTMXECPC,PTMXECPP,PTMXECBP,PTMXECRE:
                          PTMXNRNM,PTMXNRA1,PTMXNRA2,PTMXNRA3,PTMXNRA4:
                          PTMXNRPC,PTMXNRPP,PTMXNRBP,PTMXNRRE,PTMX3BEX:
                          PTMXCARD,PTMXCEXP,PTMXCXMP,PTMXFMLY,PTMXCHNM:
                          PTMXDOFR,PMPXRHC1,PMPXRH1G,PTMXSPID,PMPXR1GC:
                          PTMXOSDT,PTNINMPI,PKNAME,PKADD1,PKADD2:
                          PKSUBR,PKADD4,PKPOST,PKTELEP,PKTELEB,PKRELP,KEEPOLAL:
                          ADATE,ATIME,AWARD,ABED,ADOCTR,ADOCTA:
                          ADOCTL,ASRCE,ATYPE,ACLSS,ACARE,AFUNDH,AFNDTB,AFNDMM:
                          AMBS,ADIAG1,ADIAG2,ADOCTT,ACLSSFT,ACLAIM,ADIET:
                          APLOCCR,ASTAY,ADYHOSP,AMEMB,AMEMBNO,AUSR1,AUSR2:
                          AUSR3,AUSR4,AUSR5,AUSR6,AUSR7,ARDRNAM,AFNDYY,AFNDCG:
                          PTYPE,PTMIPVIS:
                          ABWGHT,PMVXRHC1,PMVXRH1G,PTMSFHAN,PTMSECRA,PTMSMGIN:
                          PTAXGUTY,PTAXGUIN,PTAXGUIT,PTAXGUNM,PTAXGUA1,PTAXGUA2:
                          PTAXGUA3,PTAXGUA4,PTAXGUPC,PTAXGUPH,PTAXGUOC,PTAXGUEC:
                          PTAXGURL,PTMIDOFR,PMVXRHC1,PTMIREFD,PTMIDFCN,PTMIPHPU:
                          PTMIAGNC,PTMIESSF,PTMIUSR8,PTMIUSR9,PTMIUSR0,PTMIPDRG:
                          CCNTRESI,PUTONSBY,PTAHANNI,PTDAADTS:
                          PTMXOPER,PTMXUKDO,PTMXCELL,PTMXADD1,PTMXADD2:
                          PTMXADD3,PTMXADD4,PTMXPOST,PURNO:
                          PMPXINTR,PMPXLNG1,PMPXLNG2,PMPXLNG3,PMPXPEML:
                          PMPXEDOB,PMPXCMOB,PMPXCEML,PMPXCCRP,PMPXKMOB:
                          PMPXKEML,PMPXKCRP,PMPXRMOB,PMPXREML,PMPXRCRP:
                          PMPXMEDC,PMPXDETY,PMPXPRIS,PMPXCSER,PMPXPHEI:
                          PMPXPWEI,PMPXDREC,PMPXDVAC,PMPXPNSD,PMPXUYN4:
                          PMPXUYN5,PMPXUYN6,PMPXABRG,PMPXPRVI,PMPXCRIN:
                          PMPXHOML,PMPXUDC1,PMPXUDC2,PMPXUDC3,PMPXUSR7:
                          PMPXUSR8,PMPXUSR9,PMPXMSNA,PMPXMGNA,PMPXMTLE:
                          PMPXMAD1,PMPXMAD2,PMPXMAD3,PMPXMAD4,PMPXMPOS:
                          PMPXMPNO,PMPXMBNO,PMPXMMNO,PMPXMEML,PMPXMCNT:
                          PMPXMCRP,PMPXMLAB,PMPXMREL,PMPXFSNA,PMPXFGNA:
                          PMPXFTLE,PMPXFAD1,PMPXFAD2,PMPXFAD3,PMPXFAD4:
                          PMPXFPOS,PMPXFPNO,PMPXFBNO,PMPXFMNO,PMPXFEML:
                          PMPXFCNT,PMPXFCRP,PMPXFLAB,PMPXFREL:
                          PMVXVLOC,PMVXCFSG,PMVXINGP,PMVXCPTH,PMVXHCP1:
                          PMVXHCP2,PMVXHCP3,PMVXHCP4,PMVXRHC1,PMVXRHC2:
                          PMVXRHC3,PMVXRHC4,PMVXCADM,PMVXIRAD,PMVXIDUS:
                          PMVXCRAV,PMVXRCCT,PMVXAPWD,PMVXAPBD,PMVXPOWD:
                          PMVXPOBD,PMVXPSTY,PMVXVALW,PMVXPALW,PMVXINDC:
                          PMVXMDAV,PMVXFRMS,PMVXEDC1,PMVXEDC2,PMVXEDC3:
                          PMVXUDF1,PMVXUDF2,PMVXUDF3,PMVXUDF4,PMVXUDT1:
                          PMVXUDT2,PMVXUDT3,PMVXUDT4,PMVXUDT5,PMVXUDT6	
.
          CALL      SPLTPMED                * Split PMEDIXX into PMEDI, PTMXMCCD
.
          CALL      VDAT0000                      * Validate adm. date and time
          BRANCH    EXIT,DGADM900                 * Invalid
.
          CALL      VALX0000                      * check claim code & exemption
          BRANCH    EXIT,DGADM900                 * Invalid
.
          CALL      CHKAD000                      * admission date on patdrgaf ?
          BRANCH    EXIT,DGADM900                 * no - error
.
.         The following routine now validates the ward/bed codes to
.         pick up any errors before processing actually begins.  The code
.         was taken out of the GBED0000 routine
.
          CALL      CHKWD000                      * valid ward and bed ?
          BRANCH    EXIT,DGADM900                 * no - error
.
.         We need to check that the patient isn't already in hospital as
.         a current inpatient
.
          CALL      ISIN0000                      * Check if already in Hosp.
          BRANCH    EXIT,DGADM900                 * Yes. Exit
.
.         If a pre-admission record does not exist on file, then we
.         need to do some extra processing
.
          CALL      NEWADM00                      * process a new admission
          BRANCH    EXIT,DGADM900                 * Error! (No PMI or Surname)
.
          CALL      PPMI0000                      * post PMI details
.
          CALL      PADM0000                      * post admission details
          BRANCH    EXIT,DGADM900                 * Error!  Visit record locked
.
. we have a valid patient check the details for the admission
.
.         As much of the validation has been taken out of GBED0000 and put
.         into CHKWD000, it is unlikely that an error will occur in the
.         following routine (only if someone else admits a patient between the
.         validation and the actual file update).  I have left the error check
.         just in case.
.
          CALL      GBED0000                      * Validate Ward/Bed stuff
          BRANCH    EXIT,DGADM900                 * Error
.
          MATCH     ZEROUR,AURNO                  * Have we a U/R No.?
          GOTO      DGADM300 IF NOT EQUAL         * Yes
          CALL      ALUR0000                      * No, allocate a U/R Number
          BRANCH    EXIT,DGADM900                 * Error. Visit record locked
.
. Finish admitting the patient
.
DGADM300  CALL      XTRA0000                      * do additional charging stuff
          CALL      WCSL0000                      * write to Case Notes Loc file
          CALL      ADTD0000                      * update Transfer Dest. file
          CALL      DOAD0000                      * Update admission record
          CALL      ADMH0000                      * Admit Mental Health patient
.
.         An error should never be returned after the following routine
.         (XADM0000), as the admission date is validated earlier in CHKAD000
.         to prevent the program stopping half way through updating files.
.
          CALL      XADM0000                      * Update extra Admission crap
          BRANCH    EXIT,DGADM900                 * Error. date not on period fi
.
          CALL      FINA0000                      * Finish admitting patient.
.
          CALL      PNMP0000                      * post to National UR file
          CALL      WDWB0000                      * write Detente ward bed
.
. --- send reply message as successful ---
.     NB.  SP1 at end of reply has been added because the interpreter does
.     not place a "|" after the last field, and Datagate requires this.  By
.     putting an extra field on the end (which is blank), a "|" will then
.     be added after the last field.
.
          MOVE      "00000",RPLYCODE              * successful message
          MOVE      SP50,RPLYDESC                 * clear error description
          PACK      CCENCODE,CCDATE,CCDST,CCSRC,CCNAME,REPLYRPL
          WRITE     DGATEIN;CCENCODE:
                            RPLYHEAD,RPLYCODE,RPLYDESC:
                            DGMISC1,DGMISC2,DGMISC3,PURNO,AADMNO,SP1
.
          ADD       ONE,SUCCPROC                  * increm # success transactns
          GOTO      DGADM999
.
. --- send back an Error response ---
.
DGADM900  PACK      CCENCODE,CCDATE,CCDST,CCSRC,CCNAME,REPLYRPL
          WRITE     DGATEIN;CCENCODE:
                            RPLYHEAD,RPLYCODE,RPLYDESC,DGMISC1:
                            DGMISC2,DGMISC3,SP1
          ADD       ONE,ERRRPROC                  * increm # error transactions
.
DGADM999  GOTO      ENDPROC1
+
.*************************************************************************
.*  ADOPE000  :  open some files                                         *
.*************************************************************************
ADOPE000  OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
          IF        PTCNAXEU=1
            OPEN      PATAXEA1,"pataxeaf"
          ENDIF
          IF        PTCNUCRD=1
            OPEN      PATVKCA1,"patvkcaf"
          ENDIF
.
ADOPE999  RETURN
+
.***************************************************************************
.*  VALID000  :  read patients details & make sure we have a valid patient *
.*               Returns:  EXIT=0 --> Valid patient,   EXIT=1 --> ERROR    *
.***************************************************************************
VALID000  MOVE      ONE,NEWADMFL                 * set flag for pre-admission
.
          MATCH     ZEROVISN,AADMNO              * zero admission no. ?
          IF        @EQUAL
            CALL      NXTA0000                   * yes - allocate next adm. no.
            MOVE      ZERO,NEWADMFL              * set flag for new admission
            GOTO      VALID700
          ENDIF
.
.         There is an admission number for the visit, so see if there is an
.         admission record already on file.
.
          MOVE      AADMNO,DADMNO
          MOVE      AADMNO,KEY8
          CALL      RDMISS1                      * admission on file ?
          IF        OVRCD = 1
            MOVE      ZERO,NEWADMFL              * no-set flag for new admission
            GOTO      VALID700
          ENDIF
.
. make sure patient is pre-admitted
.
          COMPARE   TWO,ASTAT
          IF        @EQUAL
            MOVE      ONE,ADMITFLG               * set flag for already admitted
          ENDIF
.
          BRANCH    ASTAT,VALID050,VALID050,VALID820,VALID810,VALID840
.
. get master file details
.
VALID050  MATCH     ZEROUR,AURNO
          IF        @EQUAL
            COMPARE   ZERO,CGENRUR                  * manual U/R generation?
            GOTO      VALID860 IF EQUAL
.
            MOVE      AADMNO,KEY8
            CALL      RDPRAM1
            BRANCH    OVRCD,VALID850
.
            MOVE      ZEROUR,PURNO
            CALL      RDSUR000                      * read in surname record
            BRANCH    EXIT,VALID870                 * missing surname record
          ELSE
            MOVE      AURNO,KEY8
            CALL      RDMAST1                       * U/R on file ?
            IF        OVRCD = 1
              CALL    CLPATMAS                      * no - initialise variables
              CALL    CLPMSPX2                      * Clear Master Extn.2  I900
              MOVE    AURNO,PURNO                   * load U/R number
              GOTO    VALID700
            ENDIF
            CALL      RDPMPX21
.
            CALL      RDSUR000                      * read in surname record
            BRANCH    EXIT,VALID870                 * missing surname record
.
            CALL      AMSV1000                      * save old address vars
          ENDIF
.
VALID700  MOVE      ZERO,EXIT                     * we have a valid patient
          GOTO      VALID999
.
VALID810  MOVE      "Patient is already admitted",RPLYDESC
          MOVE      "02114",RPLYCODE
          GOTO      VALID990
.
VALID820  MOVE      "Patient is discharged",RPLYDESC
          MOVE      "02112",RPLYCODE
          GOTO      VALID990
.
VALID830  MOVE      "Pre-admission has been cancelled",RPLYDESC
          MOVE      "02115",RPLYCODE
          GOTO      VALID990
.
VALID840  MOVE      "Pre-admission has been cancelled",RPLYDESC
          MOVE      "02115",RPLYCODE
          GOTO      VALID990
.
VALID850  MOVE      "Patient Master details not found",RPLYDESC
          MOVE      "01100",RPLYCODE
          GOTO      VALID990
.
VALID860  MOVE      "U/R generation must not be manual",RPLYDESC
          MOVE      "00020",RPLYCODE
          GOTO      VALID990
.
VALID870  MOVE      "Missing surname record",RPLYDESC
          MOVE      "02104",RPLYCODE
          GOTO      VALID990
.
VALID990  MOVE      ONE,EXIT
.
VALID999  RETURN
+
.***************************************************************************
.*                           CHKAD000                  Called by: DGADM000 *
.*      Check if the admission date is on the date range period file       *
.*                                                                         *
.* NB. This routine is a copy of code from USTA0000 and has been duplicated*
.*     here so that we can check for errors before actually writing any    *
.*     admission records.                                                  *
.*                                                                         *
.* Requires: ADATE - admission date                                        *
.* Returns:  EXIT   0 = date on patdrgaf                                   *
.*                  1 = date not found on patdrgaf                         *
.***************************************************************************
.
CHKAD000  COMPARE   ONE,PTCNSTAU
          GOTO      CHKAD900 IF EQUAL
.
          PACK      CPTDATE,ADATE
          REP       " 0",CPTDATE
          CALL      GPERD
          IF        EXIT = 1
            MOVE      "02142",RPLYCODE      * reply code
            MOVE      "Admission date not on period file",RPLYDESC
            GOTO      CHKAD950
          ENDIF
.
CHKAD900  MOVE      ZERO,EXIT
          GOTO      CHKAD999
.
CHKAD950  MOVE      ONE,EXIT
.
CHKAD999  RETURN
+
.***************************************************************************
.*                           CHKWD000                  Called by: DGADM000 *
.*      Check if the ward and bed codes are valid                          *
.*                                                                         *
.* Requires: AWARD - admission ward                                        *
.*           ABED  - admission bed                                         *
.* Returns:  EXIT   0 = ward/bed valid                                     *
.*                  1 = ward/bed not valid                                 *
.***************************************************************************
.
CHKWD000  CALL      OBED0000                     * open files required
.
.         Validate the Ward passed against the Ward file
.
          PACK      KEY6,AWARD,SP3
          CALL      RDWARD1                        * ward code on file ?
          IF        OVRCD = 1
            MOVE      "Invalid Ward/Bed",RPLYDESC  * no - erorr
            MOVE      "02130",RPLYCODE
            GOTO      CHKWD950
          ENDIF
.
          IF        WACTIVE = 1
            MOVE      "Ward is not active",RPLYDESC  * ward not active
            MOVE      "02134",RPLYCODE
            GOTO      CHKWD950
          ENDIF
.
          IF        WINPUT=1
            MOVE      SP3,ABED                     * Ward only input, clear bed
            GOTO      CHKWD900
          ENDIF
.
.         Validate the Ward/Bed against the Ward file
.
          MATCH     SP3,ABED
          IF        @EQUAL
            MOVE      "Invalid Ward/Bed",RPLYDESC  * no - error
            MOVE      "02130",RPLYCODE
            GOTO      CHKWD950
          ENDIF
.
          PACK      KEY6,AWARD,ABED
          CALL      RDWARD1                        * ward/bed on file ?
          IF        OVRCD = 1
            MOVE      "Invalid Ward/Bed",RPLYDESC  * no - error
            MOVE      "02130",RPLYCODE
            GOTO      CHKWD950
          ENDIF
.
          IF        WACTIVE = 1
            MOVE      "Bed is not active",RPLYDESC
            MOVE      "02135",RPLYCODE
            GOTO      CHKWD950
          ENDIF
.
.         We have a valid ward and bed code, so check that nobody occupies
.         it currently
.
CHKWD100  MATCH     ZEROVISN,WADMNO              * Has bed been taken?
          GOTO      CHKWD900 IF EQUAL            * no
.
          MATCH     "Y",PUTONSBY                 * yes - put on standby ?
          IF        !@EQUAL
            MOVE      "Ward/Bed already occupied",RPLYDESC  * no - error
            MOVE      "02131",RPLYCODE
            GOTO      CHKWD950
          ENDIF
.
.         Put Patient on standby if bed doesn't already have a pt. on standby
.
          MATCH     ZEROVISN,WSTBY                * another pat. on standby?
          IF        !@EQUAL
            MOVE      "There is a patient already on standby for this bed",RPLYDESC
            MOVE      "02132",RPLYCODE
            GOTO      CHKWD950
          ENDIF
.
CHKWD900  CALL      CBED0000                      * Close Ward/Bed files
          MOVE      ZERO,EXIT
          GOTO      CHKWD999
.
CHKWD950  CALL      CBED0000                      * Close Ward/Bed files
          MOVE      ONE,EXIT
.
CHKWD999  RETURN
+
.***************************************************************************
.*  NEWADM00  :  Routine to handle an admission record without a           *
.*               pre-admission                                             *
.*  Returns:     EXIT   0 = ok to continue                                 *
.*                      1 = error - don't continue                         *
.***************************************************************************
.
NEWADM00  BRANCH    NEWADMFL,NEWADM90            * pre-admission exists
.
.         Save the PMI fields read in from datagate as we will need to restore
.         them after reading the patient master record.  ACTMSAV will save some
.         of the variables, the rest we need to do here.
.
          CALL      ACTMSAV
.
          MOVE      PHKADUNI,SPHKADUN
          MOVE      PTMAEMPC,SPTMAEMP
          MOVE      PTMANOKO,SPTMANKO
          MOVE      PTMANOKE,SPTMANKE
          MOVE      PTMADCNO,SPTMADCN
          MOVE      PTMXRDAT,SPTMXRDT
          MOVE      PTMXMEAL,SPTMXMEL
          MOVE      PTMXLGA,SPTMXLGA
          MOVE      PTMXLS,SPTMXLS
          MOVE      PTMXLSDT,SPTMXLSD
          MOVE      PTMXFHMD,SPTMXFHM
          MOVE      PTMXMHU1,SPTMXMH1
          MOVE      PTMXMHU2,SPTMXMH2
          MOVE      PTMXMHU3,SPTMXMH3
          MOVE      PTMXECNM,SPTMXECN
          MOVE      PTMXECA1,SPTMXEC1
          MOVE      PTMXECA2,SPTMXEC2
          MOVE      PTMXECA3,SPTMXEC3
          MOVE      PTMXECA4,SPTMXEC4
          MOVE      PTMXECPC,SPTMXECC
          MOVE      PTMXECPP,SPTMXECP
          MOVE      PTMXECBP,SPTMXECB
          MOVE      PTMXECRE,SPTMXECR
          MOVE      PTMXNRNM,SPTMXNRN
          MOVE      PTMXNRA1,SPTMXNR1
          MOVE      PTMXNRA2,SPTMXNR2
          MOVE      PTMXNRA3,SPTMXNR3
          MOVE      PTMXNRA4,SPTMXNR4
          MOVE      PTMXNRPC,SPTMXNRC
          MOVE      PTMXNRPP,SPTMXNRP
          MOVE      PTMXNRBP,SPTMXNRB
          MOVE      PTMXNRRE,SPTMXNRR
          MOVE      PTMX3BEX,SPTMX3BX
          MOVE      PTMXCARD,SPCARD
          MOVE      PTMXCEXP,SPCEXP
          MOVE      PTMXCXMP,SPCXMP
          MOVE      PTMXFMLY,SPFMLY
          MOVE      PTMXCHNM,SPTMXCHN
          MOVE      PTMXSPID,SPTMXSPI
          MOVE      PTMXOSDT,SPTMXOSD
.
          MOVE      PMPXINTR,SMPXINTR
          MOVE      PMPXLNG1,SMPXLNG1
          MOVE      PMPXLNG2,SMPXLNG2
          MOVE      PMPXLNG3,SMPXLNG3
          MOVE      PMPXPEML,SMPXPEML
          MOVE      PMPXEDOB,SMPXEDOB
          MOVE      PMPXCMOB,SMPXCMOB
          MOVE      PMPXCEML,SMPXCEML
          MOVE      PMPXCCRP,SMPXCCRP
          MOVE      PMPXKMOB,SMPXKMOB
          MOVE      PMPXKEML,SMPXKEML
          MOVE      PMPXKCRP,SMPXKCRP
          MOVE      PMPXRMOB,SMPXRMOB
          MOVE      PMPXREML,SMPXREML
          MOVE      PMPXRCRP,SMPXRCRP
          MOVE      PMPXMEDC,SMPXMEDC
          MOVE      PMPXDETY,SMPXDETY
          MOVE      PMPXPRIS,SMPXPRIS
          MOVE      PMPXCSER,SMPXCSER
          MOVE      PMPXPHEI,SMPXPHEI
          MOVE      PMPXPWEI,SMPXPWEI
          MOVE      PMPXDREC,SMPXDREC
          MOVE      PMPXDVAC,SMPXDVAC
          MOVE      PMPXPNSD,SMPXPNSD
          MOVE      PMPXUYN4,SMPXUYN4
          MOVE      PMPXUYN5,SMPXUYN5
          MOVE      PMPXUYN6,SMPXUYN6
          MOVE      PMPXABRG,SMPXABRG
          MOVE      PMPXPRVI,SMPXPRVI
          MOVE      PMPXCRIN,SMPXCRIN
          MOVE      PMPXHOML,SMPXHOML
          MOVE      PMPXUDC1,SMPXUDC1
          MOVE      PMPXUDC2,SMPXUDC2
          MOVE      PMPXUDC3,SMPXUDC3
          MOVE      PMPXUSR7,SMPXUSR7
          MOVE      PMPXUSR8,SMPXUSR8
          MOVE      PMPXUSR9,SMPXUSR9
          MOVE      PMPXMSNA,SMPXMSNA
          MOVE      PMPXMGNA,SMPXMGNA
          MOVE      PMPXMTLE,SMPXMTLE
          MOVE      PMPXMAD1,SMPXMAD1
          MOVE      PMPXMAD2,SMPXMAD2
          MOVE      PMPXMAD3,SMPXMAD3
          MOVE      PMPXMAD4,SMPXMAD4
          MOVE      PMPXMPOS,SMPXMPOS
          MOVE      PMPXMPNO,SMPXMPNO
          MOVE      PMPXMBNO,SMPXMBNO
          MOVE      PMPXMMNO,SMPXMMNO
          MOVE      PMPXMEML,SMPXMEML
          MOVE      PMPXMCNT,SMPXMCNT
          MOVE      PMPXMCRP,SMPXMCRP
          MOVE      PMPXMLAB,SMPXMLAB
          MOVE      PMPXMREL,SMPXMREL
          MOVE      PMPXFSNA,SMPXFSNA
          MOVE      PMPXFGNA,SMPXFGNA
          MOVE      PMPXFTLE,SMPXFTLE
          MOVE      PMPXFAD1,SMPXFAD1
          MOVE      PMPXFAD2,SMPXFAD2
          MOVE      PMPXFAD3,SMPXFAD3
          MOVE      PMPXFAD4,SMPXFAD4
          MOVE      PMPXFPOS,SMPXFPOS
          MOVE      PMPXFPNO,SMPXFPNO
          MOVE      PMPXFBNO,SMPXFBNO
          MOVE      PMPXFMNO,SMPXFMNO
          MOVE      PMPXFEML,SMPXFEML
          MOVE      PMPXFCNT,SMPXFCNT
          MOVE      PMPXFCRP,SMPXFCRP
          MOVE      PMPXFLAB,SMPXFLAB
          MOVE      PMPXFREL,SMPXFREL
.
.         Read in the current PMI record for the patient
.
          MOVE      PURNO,AURNO                  * save U/R number
          MOVE      PURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          IF        OVRCD = 1
            MOVE      "Patient Master details not found",RPLYDESC
            MOVE      "01100",RPLYCODE
            GOTO      NEWADM95
          ENDIF
.
          CALL      RDPMPX21                     * Read PMI Master Extn.2  I900
.
          CALL      RDSUR000                     * read in surname record
          IF        EXIT = 1
            MOVE      "Missing surname record",RPLYDESC
            MOVE      "02104",RPLYCODE
            GOTO      NEWADM95
          ENDIF
.
          CALL      AMSV1000                     * save old address vars
.
.         Now reload the PMI variables as read in from Datagate
.
          MOVE      SPADD1,PADD1
          MOVE      SPADD2,PADD2
          MOVE      SPADD4,PADD4
          MOVE      SPAUTOPY,PAUTOPY
          MOVE      SPBDATE,PBDATE
          MOVE      SPBDEBT,PBDEBT
          MOVE      SPCASE,PCASE
          MOVE      SPCEASE,PCEASE
          MOVE      SPCHGDTE,PCHGDTE
          MOVE      SPCONT,PCONT
          MOVE      SPDECDTE,PDECDTE
          MOVE      SPDIET,PDIET
          MOVE      SPFNDCG,PFNDCG
          MOVE      SPFNDMM,PFNDMM
          MOVE      SPFNDTB,PFNDTB
          MOVE      SPFNDYY,PFNDYY
          MOVE      SPFUNDH,PFUNDH
          MOVE      SPGNAME,PGNAME
          MOVE      SPHCNOTE,PHCNOTES
          MOVE      SPHIGH1,PHIGH1
          MOVE      SPHIGH2,PHIGH2
          MOVE      SPHIGH3,PHIGH3
          MOVE      SPHOSP,PHOSP
          MOVE      SPINITHO,PINITHOS
          MOVE      SPLDAYS,PLDAYS
          MOVE      SPLDDATE,PLDDATE
          MOVE      SPLOCDOC,PLOCDOC
          MOVE      SPLSTINP,PLSTINP
          MOVE      SPLSTOUT,PLSTOUT
          MOVE      SPMEDI,PMEDI
          MOVE      SPMICRO,PMICRO
          MOVE      SPMSTAT,PMSTAT
          MOVE      SPNKADD1,PNKADD1
          MOVE      SPNKADD2,PNKADD2
          MOVE      SPNKADD4,PNKADD4
          MOVE      SPNKNAME,PNKNAME
          MOVE      SPNKPOST,PNKPOST
          MOVE      SPNKRELP,PNKRELP
          MOVE      SPNKSUBR,PNKSUBR
          MOVE      SPNKTELB,PNKTELB
          MOVE      SPNKTELP,PNKTELP
          MOVE      SPNXRAY,PNXRAY
          MOVE      SPOCCUP,POCCUP
          MOVE      SPPORT,PORT
          MOVE      SPPENNO,PPENNO
          MOVE      SPPNDTE,PPNDTE
          MOVE      SPPORT,PPORT
          MOVE      SPPOST,PPOST
          MOVE      SPPSNAME,PPSNAME
          MOVE      SPREG,PREG
          MOVE      SPREPAT,PREPAT
          MOVE      SPSAGE,PSAGE
          MOVE      SPSEX,PSEX
          MOVE      SPSMOK,PSMOK
          MOVE      SPSNAME,PSNAME
          MOVE      SPSTAT,PSTAT
          MOVE      SPSUBRB,PSUBRB
          MOVE      SPTELEB,PTELEB
          MOVE      SPTELEP,PTELEP
          MOVE      SPTITL,PTITL
          MOVE      SPDOR,PTMXDOFR
          MOVE      SPGPPC,PMPXRH1G
          MOVE      SPGPPT,PMPXR1GC
          MOVE      SPREGP,PMPXRHC1
          MOVE      SPTYPE,PTYPE
          MOVE      SPUSR1,PUSR1
          MOVE      SPUSR2,PUSR2
          MOVE      SPUSR3,PUSR3
          MOVE      SPUSR4,PUSR4
          MOVE      SPUSR5,PUSR5
          MOVE      SPUSR6,PUSR6
          MOVE      SPUYN1,PUYN1
          MOVE      SPUYN2,PUYN2
          MOVE      SPUYN3,PUYN3
          MOVE      SPYRRES,PYRRES
          MOVE      SPHKADUN,PHKADUNI
          MOVE      SPTMAEMP,PTMAEMPC
          MOVE      SPTMANKO,PTMANOKO
          MOVE      SPTMANKE,PTMANOKE
          MOVE      SPTMADCN,PTMADCNO
          MOVE      SPTMXRDT,PTMXRDAT
          MOVE      SPTMXMEL,PTMXMEAL
          MOVE      SPTMXLGA,PTMXLGA
          MOVE      SPTMXLS,PTMXLS
          MOVE      SPTMXLSD,PTMXLSDT
          MOVE      SPTMXFHM,PTMXFHMD
          MOVE      SPTMXMH1,PTMXMHU1
          MOVE      SPTMXMH2,PTMXMHU2
          MOVE      SPTMXMH3,PTMXMHU3
          MOVE      SPTMXECN,PTMXECNM
          MOVE      SPTMXEC1,PTMXECA1
          MOVE      SPTMXEC2,PTMXECA2
          MOVE      SPTMXEC3,PTMXECA3
          MOVE      SPTMXEC4,PTMXECA4
          MOVE      SPTMXECC,PTMXECPC
          MOVE      SPTMXECP,PTMXECPP
          MOVE      SPTMXECB,PTMXECBP
          MOVE      SPTMXECR,PTMXECRE
          MOVE      SPTMXNRN,PTMXNRNM
          MOVE      SPTMXNR1,PTMXNRA1
          MOVE      SPTMXNR2,PTMXNRA2
          MOVE      SPTMXNR3,PTMXNRA3
          MOVE      SPTMXNR4,PTMXNRA4
          MOVE      SPTMXNRC,PTMXNRPC
          MOVE      SPTMXNRP,PTMXNRPP
          MOVE      SPTMXNRB,PTMXNRBP
          MOVE      SPTMXNRR,PTMXNRRE
          MOVE      SPTMX3BX,PTMX3BEX
          MOVE      SPCARD,PTMXCARD
          MOVE      SPCEXP,PTMXCEXP
          MOVE      SPCXMP,PTMXCXMP
          MOVE      SPFMLY,PTMXFMLY
          MOVE      SPTMXCHN,PTMXCHNM
          MOVE      SPTMXSPI,PTMXSPID
          MOVE      SPTMXOSD,PTMXOSDT
.
          MOVE      SMPXINTR,PMPXINTR
          MOVE      SMPXLNG1,PMPXLNG1
          MOVE      SMPXLNG2,PMPXLNG2
          MOVE      SMPXLNG3,PMPXLNG3
          MOVE      SMPXPEML,PMPXPEML
          MOVE      SMPXEDOB,PMPXEDOB
          MOVE      SMPXCMOB,PMPXCMOB
          MOVE      SMPXCEML,PMPXCEML
          MOVE      SMPXCCRP,PMPXCCRP
          MOVE      SMPXKMOB,PMPXKMOB
          MOVE      SMPXKEML,PMPXKEML
          MOVE      SMPXKCRP,PMPXKCRP
          MOVE      SMPXRMOB,PMPXRMOB
          MOVE      SMPXREML,PMPXREML
          MOVE      SMPXRCRP,PMPXRCRP
          MOVE      SMPXMEDC,PMPXMEDC
          MOVE      SMPXDETY,PMPXDETY
          MOVE      SMPXPRIS,PMPXPRIS
          MOVE      SMPXCSER,PMPXCSER
          MOVE      SMPXPHEI,PMPXPHEI
          MOVE      SMPXPWEI,PMPXPWEI
          MOVE      SMPXDREC,PMPXDREC
          MOVE      SMPXDVAC,PMPXDVAC
          MOVE      SMPXPNSD,PMPXPNSD
          MOVE      SMPXUYN4,PMPXUYN4
          MOVE      SMPXUYN5,PMPXUYN5
          MOVE      SMPXUYN6,PMPXUYN6
          MOVE      SMPXABRG,PMPXABRG
          MOVE      SMPXPRVI,PMPXPRVI
          MOVE      SMPXCRIN,PMPXCRIN
          MOVE      SMPXHOML,PMPXHOML
          MOVE      SMPXUDC1,PMPXUDC1
          MOVE      SMPXUDC2,PMPXUDC2
          MOVE      SMPXUDC3,PMPXUDC3
          MOVE      SMPXUSR7,PMPXUSR7
          MOVE      SMPXUSR8,PMPXUSR8
          MOVE      SMPXUSR9,PMPXUSR9
          MOVE      SMPXMSNA,PMPXMSNA
          MOVE      SMPXMGNA,PMPXMGNA
          MOVE      SMPXMTLE,PMPXMTLE
          MOVE      SMPXMAD1,PMPXMAD1
          MOVE      SMPXMAD2,PMPXMAD2
          MOVE      SMPXMAD3,PMPXMAD3
          MOVE      SMPXMAD4,PMPXMAD4
          MOVE      SMPXMPOS,PMPXMPOS
          MOVE      SMPXMPNO,PMPXMPNO
          MOVE      SMPXMBNO,PMPXMBNO
          MOVE      SMPXMMNO,PMPXMMNO
          MOVE      SMPXMEML,PMPXMEML
          MOVE      SMPXMCNT,PMPXMCNT
          MOVE      SMPXMCRP,PMPXMCRP
          MOVE      SMPXMLAB,PMPXMLAB
          MOVE      SMPXMREL,PMPXMREL
          MOVE      SMPXFSNA,PMPXFSNA
          MOVE      SMPXFGNA,PMPXFGNA
          MOVE      SMPXFTLE,PMPXFTLE
          MOVE      SMPXFAD1,PMPXFAD1
          MOVE      SMPXFAD2,PMPXFAD2
          MOVE      SMPXFAD3,PMPXFAD3
          MOVE      SMPXFAD4,PMPXFAD4
          MOVE      SMPXFPOS,PMPXFPOS
          MOVE      SMPXFPNO,PMPXFPNO
          MOVE      SMPXFBNO,PMPXFBNO
          MOVE      SMPXFMNO,PMPXFMNO
          MOVE      SMPXFEML,PMPXFEML
          MOVE      SMPXFCNT,PMPXFCNT
          MOVE      SMPXFCRP,PMPXFCRP
          MOVE      SMPXFLAB,PMPXFLAB
          MOVE      SMPXFREL,PMPXFREL
.
NEWADM90  MOVE      ZERO,EXIT
          GOTO      NEWADM99
.
NEWADM95  MOVE      ONE,EXIT
.
NEWADM99  RETURN
+
.***************************************************************************
.*  RDSUR000  :  read in the surname record                                *
.***************************************************************************
RDSUR000  CALL      OPSU0000
.
          MATCH     ZEROUR,PURNO
          IF        @EQUAL
            MOVE      BKREBOOK,GSRBILL
          ELSE
            MOVE      ZEROVISN,GSRBILL
          ENDIF
.
          MOVE      PTMASNAM,GSRSNAM
          MOVE      PMPXFNAM,GSRGNAM
          MOVE      PMPXSNAM,PTGSGNM2
          PACK      KEY115,PURNO,GSRBILL,GSRSNAM,GSRGNAM,PTGSGNM2,PBDATE,PSEX:
                           SP70,SP70
          CALL      RDPTGSR1
          BRANCH    OVRCD,RDSUR900
.
          MOVE      ZERO,EXIT
          GOTO      RDSUR999
.
RDSUR900  MOVE      ONE,EXIT
.
RDSUR999  CALL      CLSU0000
          RETURN
+
.***************************************************************************
.*  WDWB0000  :  write detente ward bed changes                            *
.***************************************************************************
WDWB0000  UNPACK    SP30,OLDBED,OLDWARD
          MOVE      AWARD,NEWWARD
          MOVE      ABED,NEWBED
          
          MOVE      NINE,DETNTREC
WDWB9999  RETURN
+
.***************************************************************************
.*  ISIN0000  :  Check if patient is in Hospital                           *
.*               Returns :  EXIT=0=No,   EXIT=1=Yes                        *
.***************************************************************************
.
ISIN0000  MATCH     ZEROUR,PURNO                  * U/R No. = 0 ?
          GOTO      ISIN5000 IF EQUAL             * Yes
.
.         U/R is in hospital so check visits.
.         We are using an alternate index so that when we read the patmi1af
.         file, we don't lose our position for the original record.  We also
.         don't want to overwrite our patmi1af variables which have just been
.         read in from DataGate.
.
          OPEN      ALTMI1A1,"patmi1af"
          PACK      KEY24,PURNO,SP30
          CALL      RDSVISA2
ISIN1000  CALL      RDKVISA2
          BRANCH    OVRCD,ISIN5000                * not on file
.
          MATCH     PURNO,PVIURNO                 * same U/R Number?
          GOTO      ISIN5000 IF NOT EQUAL         * No
.
.         Only looking for Inpatients
.
          BRANCH    PVITYPE,ISIN1000:
                            ISIN1000:
                            ISIN2000:             * I/P
                            ISIN1000:
                            ISIN1000:
                            ISIN1000:
                            ISIN1000:
                            ISIN1000
.
ISIN2000  MOVE      PVIBILL,KEY8
          READ      ALTMI1A1,KEY8;DIM32,ADSTATUS
          GOTO      ISIN1000 IF OVER
.
. we have a visit record so check the Patients status
.
          MOVE      ADSTATUS,FORMSTAT
          BRANCH    FORMSTAT,ISIN1000,ISIN9000,ISIN1000,ISIN9000,ISIN1000
          GOTO      ISIN1000
.
ISIN5000  MOVE      ZERO,EXIT                     * Patient is not in Hospital
          GOTO      ISIN9999
.
ISIN9000  MOVE     "Patient already in hospital with another admission",RPLYDESC
          MOVE      "02116",RPLYCODE
          MOVE      ONE,EXIT                      * Patient is already in Hosp.
.
ISIN9999  RETURN
+
.***************************************************************************
.*  XTRA0000  :  Do all the required processing for additional charging    *
.***************************************************************************
XTRA0000  COMPARE   ZERO,PTCNADDC           * check if we are doing additional
          GOTO      XTRA9999 IF EQUAL         charging
.
          OPEN      PATACHA1,"patachaf"
          OPEN      PATNHHA1,"patnhhaf"
          PACK      KEY6,ACLAIM,ATYPE
          CALL      RDPTNH1                 * read the NHH additional charging
          BRANCH    OVRCD,XTRA9900            file
.
          MOVE      ZERO,SAVEXTR
          ASSIGN    MAXDISC + HFPORT - ADISC - ALWAMT,MINICH
.
.------ if income is not entered assume minimum daily charge ------
.
          COMPARE   ZERO,PTAHANNI
          IF        @EQUAL | @LESS
            MOVE      MINICH,DAILYCH 
            GOTO      XTRA1000
          ENDIF
.
          ASSIGN    (PTAHANNI * PTNHPERC)/ONEHUND,DAILYCH
          IF        DAILYCH > PTNHMAXD
            MOVE      PTNHMAXD,DAILYCH
            ASSIGN    DAILYCH - MINICH,SAVEXTR
          ELSE
            IF        DAILYCH < MINICH
              MOVE      MINICH,DAILYCH
              MOVE      ZERO,SAVEXTR
            ELSE
              ASSIGN    DAILYCH - MINICH,SAVEXTR
            ENDIF
          ENDIF
.
.------ write to the additional charging history file ------
.
XTRA1000  PACK      PTAHDATE,ADATE
          REP       " 0",PTAHDATE
          PACK      KEY16,AADMNO,PTAHDATE
          MOVE      DAILYCH,PTAHTOTL
          PACK      PTAHSPAR,SP20,SP20,SP10
.
          CALL      WRPTAH1                 * write to additional charging
.                                             history file
.------ close the files ------
.
XTRA9900  CLOSE     PATACHA1
          CLOSE     PATNHHA1
.
XTRA9999  RETURN
+
.***************************************************************************
.*  WCSL0000  :  Write a record to the Case notes Location file if necess. *   
.***************************************************************************
WCSL0000  MOVE      ONE,PCASE                     * Will have case notes
.
          COMPARE   ZERO,PTCNUCSL                 * using case notes loc. file ?
          GOTO      WCSL9999 IF EQUAL             * no
.
          OPEN      PATCSLA1,"patcslaf"
.
          PACK      KEY11,PURNO,ZED11
          CALL      RSPTCSL1
          CALL      RPPTCSL1
          BRANCH    OVRCD,WCSL7000                * patient has no record
.
          MATCH     PURNO,PTCLURNO                * same U/R No. ?
          GOTO      WCSL7000 IF NOT EQUAL         * no
          ADD       ONE,PTCLUNIQ                  * yes, increment Unique Id.
          GOTO      WCSL8000
.
WCSL7000  MOVE      ONE,PTCLUNIQ
WCSL8000  MOVE      PURNO,PTCLURNO
          MOVE      CNAME,PTCLDESC
          PACK      KEY11,PTCLURNO,PTCLUNIQ
          CALL      WRPTCSL1
          CLOSE     PATCSLA1
.
WCSL9999  RETURN
+
.*****************************************************************************
.*  ADTD0000  :  Update/Write Admission/Discharge Transfer Destination file  *
.*****************************************************************************
ADTD0000  COMPARE   ONE,PTCNUADT              * Parameter turned on ?
          GOTO      ADTD9999 IF NOT EQUAL
.
          OPEN      PATDADA1,"patdadaf"
          MATCH     SP5,PTDAADTS              * Transfer Source = spaces ?
          GOTO      ADTD2000 IF NOT EQUAL     * no
          MOVE      AADMNO,KEY8               * yes
          CALL      RDPTDAD1                  * read PATDADFD record
          BRANCH    OVRCD,ADTD9000  
.
          MATCH     SP5,PTDADCTS              * Dschg Transfer Source = spaces ?
          GOTO      ADTD1000 IF NOT EQUAL
          CALL      DEPTDAD1                  * delete a PTDADFD record
          MOVE      SP10,PTDAADTS
          MOVE      SP10,PTDADCTS
          GOTO      ADTD9000  
.
ADTD1000  MOVE      SP5,PTDAADTS
          GOTO      ADTD3000
.
ADTD2000  MOVE      PTDAADTS,TFRSRCE          * save Transfer Source
.
          MOVE      AADMNO,KEY8
          CALL      RDPTDAD1                  * read PTDADFD record
          BRANCH    OVRCD,ADTD4000            * record not found
          MOVE      TFRSRCE,PTDAADTS          * set Trans Source = saved T/Srce
.
ADTD3000  CALL      UPPTDAD1                  * update PTDADFD record
          GOTO      ADTD9000
.
ADTD4000  MOVE      SP5,PTDADCTS
          MOVE      SP20,PTDASPAR
          CALL      WRPTDAD1                  * write a PTDADFD record
.
ADTD9000  CLOSE     PATDADA1
.
ADTD9999  RETURN
.
.****************************************************************************
.*  DOAD0000  :  Update the Admission record                                *
.****************************************************************************
DOAD0000  MOVE      AADMNO,KEY8
          CALL      RDAMISS1
          MOVE      TWO,ASTAT
          CALL      UPLMISS1
DOAD9999  RETURN
+
.*************************************************************************
.* PATD0000  :  Update the patdayaf files if neccessary                  *
.*************************************************************************
PATD0000  COMPARE   ZERO,PTCNDAYF         * skip if not using patdayaf file
          GOTO      PATD9999 IF EQUAL       for statistics
.
          MATCH     SP8,PTCNNDAT          * Don't update patdayaf if the update
          GOTO      PATD9999 IF EQUAL       has not been run before
.
          MATCH     "00000000",PTCNNDAT
          GOTO      PATD9999 IF EQUAL
.
          PACK      STRTDATE,ADATE
          REP       " 0",STRTDATE
.
          MATCH     PTCNNDAT,STRTDATE       * Don't process if adm. date is >=
          GOTO      PATD9999 IF NOT LESS      date for next update
.
          UNPACK    PTCNNDAT,CCENT,CYEAR,CMON,CDAY
.
          CALL      SUBD0000                * subtract a day from PTCNNDAT
.
          PACK      ENDDATE,CCENT,YY,MM,DD
          REP       " 0",ENDDATE
          MOVE      AADMNO,ADMISNO
.
          CALL      PATDAYAD                * add records to the patdayaf files
.
PATD9999  RETURN
+
.******************************************************************************
.*  UCNT0000  :  Update the control file with the transfer date if neccessary *
.******************************************************************************
UCNT0000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,EIGHTY8;*148,CFRDTE
          MATCH     CFRDTE,TDATE
          GOTO      UCNT9000 IF NOT LESS
          MOVE      TDATE,CFRDTE
          WRITAB    CONTROLF,EIGHTY8;*148,CFRDTE
.
UCNT9000  CLOSE     CONTROLF
.
UCNT9999  RETURN
+
.****************************************************************************
.*  XADM0000  :  Miscellaneous extras when admitting patients               *
.****************************************************************************
XADM0000  CALL      PATD0000                      * update the patdayaf files
.
. Update the Statistics file
.
          OPEN      PATSTAD1,"patstads"
          CALL      USTA0000
          CLOSE     PATSTAD1
          BRANCH    EXIT,XADM9999              * Error! adate not on period file
.
. Add Admission No to the Invoices Pending File
. If Using the Invoice Pending File
.
          IF        PTCNIPEN = 0
            OPEN      PATIPEN1,"patipenf"
.
            MOVE      AADMNO,IPADMNO
            MOVE      THREE,IPSYSTM
            MOVE      SP70,IPSITE
.
            MOVE      SP70,PENDHOSP
            IF        IBCNMHOS=1
              MOVE      IPADMNO,KEY8
              OPEN      PMSVX1A1,"pmsvx1af" 
              CALL      RDPMVX11
              IF        OVRCD=0
                MOVE      PMVXMHOS,PENDHOSP         * Hospital ID
              ENDIF
            ENDIF
            MOVE      " 3",PENDSYST                 * Inpatient
.
            MOVE      ADATE,PENDSDAT                * as at date
            MOVE      ADATE,PENDADAT                * admission date
            MOVE      SP70,PENDDDAT
            IF        ASTAT=3
              OPEN      PATDSCH1,"patdschf"
              CALL      RDDSCH1
              IF        OVRCD=0
                MOVE      DDATE,PENDDDAT            * discharged date
              ENDIF
            ENDIF
            MOVE      AFUNDH,PENDFUND        
            MOVE      ACLAIM,PENDCLAM         
            CALL      IPRH0000                 
            MOVE      ONE,PTIPRSTA             
            MOVE      SP70,PTIPSVAR            
.
            PACK      KEY8,IPADMNO,SP70
            CALL      RAIPEN1
            IF        OVRCD=1
              CALL      WRIPEN1
            ELSE
              CALL      UPIPEN1
            ENDIF
            CLOSE     PATIPEN1
          ENDIF
.
. Update backdata indicators in the control file
.
          MOVE      ADATE,TDATE
          CALL      UCNT0000
.
. Write to Rate Change Audit file if system parameter is switched on (0)
.
          BRANCH    CAUDQ,XADM5000
.
XADM0500  OPEN      PATRCAUD,"patrcaud"
          MOVE      "PUR",PRXCODE   * System Lock Audits
          CALL      GETSLK00        * Get System Lock Audits
          CALL      RDSRCA
.
          IF        RSTATUS<>0
            CALL      RELSLK00        * Release System Lock Audits
            GOTO      XADM5000 
          ENDIF
.
XADM1000  CALL      WRIRCA
          CALL      RELSLK00        * Release System Lock Audits
          MOVE      AADMNO,RADMNO
          MOVE      PGNAME,ANS
          PACK      RNAME,ANS,DOT,PSNAME
          MOVE      ACLAIM,RCLAIM
          MOVE      AFUNDH,RFUND
          MOVE      AFNDTB,RHFTAB
          MOVE      SAVBTYP,RBTYPE
.
          MOVE      ZERO,ROPAT
          MOVE      SAVPAT,RNPAT
          SUB       ADISC,RNPAT
          SUB       ALWAMT,RNPAT
          MOVE      SAVHF,RNFUND                  * from  PATDSBFE
          MOVE      TDATE,RDATE
          MOVE      ATYPE,RATYPE
          MOVE      SP3,RCLSS
          MOVE      SP3,RCHST
          MOVE      PASSCODE,ROPER                * Operator code
.
          COMPARE   ZERO,CHOSTYP                  * check type of hospital
          GOTO      XADM2000 IF EQUAL
.
. The following fields are only used for private hospital
.
          MOVE      SP3,RFUND
          MOVE      SP6,RHFTAB
          MOVE      SP3,RBTYPE
          MOVE      ZERO,RCGPAT
          MOVE      ZERO,RCGHF
          MOVE      ZERO,RNFUND
          MOVE      ZERO,REDAYS
.
          MOVE      ACLSS,RCLSS
          MOVE      AUSR2,RCHST
          GOTO      XADM3000
.
. The computer generate rate figures is done in PATDSBFE include
. Initialy REDAYS is saved in PATDSBFE
.
XADM2000  SUB       ADYHOSP,REDAYS
          MOVE      ADATE,FROMDATE
          MOVE      TDATE,TODATE
          CALL      NHOSPDAY
          SUB       NBRDAYS,REDAYS
          ADD       ONE,REDAYS
.
. have to restore ward and bed as it can change in NHOSPDAY
.
          MOVE      AWARD,TWARD             * restore WARD
          MOVE      ABED,TBED               * restore BED 
.
XADM3000  CALL      WRRCA
          CLOSE     PATRCAUD
.
. Write a record to the In-patient Location file
.
XADM5000  OPEN      PATLOCA1,"patlocaf"
          MOVE      SP10,LPCONDC          * Initialise Patient condition code
          PACK      LPCONDD,SP20,SP20     * Initialize Patient condition desc.
          MOVE      SP10,LPCDATE          * Initialize Patient condition date
          MOVE      SP10,LPCTIME          * Initialize Patient condition time
          PACK      LOCSPAR,SP20,SP10     * Initialize spare variable
.
          MOVE      AURNO,LURNO
          PACK      KEY88,PTMASNAM,PMPXFNAM,AADMNO
          CALL      WRLOCA1
          CLOSE     PATLOCA1
.
. Update number of admissions and transfer in
.
          OPEN      PATNUMW1,"patnumwr"
          BRANCH    PTCNNUMM,XADM6500     * skip if doing the monthly update
.                                           of the PATNUM file
          PACK      CPTDATE,TDATE
          REP       " 0",CPTDATE
          CALL      GPERD                 * Get the financial period for date
          BRANCH    EXIT,XADM6500         * Date not in period file
.
          MOVE      TWARD,PWARD
          PACK      PDATE,DRGYR,DRGNUM
.
XADM5800  PACK      KEY9,PWARD,PDATE
          CALL      RLNUMW1
          BRANCH    OVRCD,XADM6000,XADM5900
          ADD       ONE,PADMN
          CALL      UPNUMW1
          CALL      UUNUMW1
          GOTO      XADM6500
.
XADM5900  DISPLAY   *W,"Waiting on Record Lock PATNUMFD"
          GOTO      XADM5800
.
XADM6000  MOVE      ONE,PADMN
          MOVE      ZERO,PTROUT
          MOVE      ZERO,PDSCH
          MOVE      ZERO,PLEAV
          MOVE      ZERO,PRETN
          CALL      WRNUMW1
.
XADM6500  CLOSE     PATNUMW1
.
. Update the booking and waiting list statuses
.
          CALL      UBOK0000
.
. Write an "A" record to pataa1af if system parameter is switched on
. (This is added for V5.01.41)
.
          BRANCH    CAUDA,XADM9000
          OPEN      PATAUAA1,"pataa1af"
          MOVE      ANSA,ACTION
          CALL      ABSV0000                      * save Admission vars.
          MOVE      TWO,SASTAT
          CALL      WRAAUD
          CLOSE     PATAUAA1
.
XADM9000  MOVE      ZERO,EXIT                     * All is Ok!
.
XADM9999  RETURN
+
.****************************************************************************
.*  FINA0000  :  Normal Admission (Patient has a U/R No.)                   *
.****************************************************************************
.
. Update the MHMS adjustments file if necessary
.
FINA0000  MOVE      AADMNO,PVIBILL
          MOVE      PVIBILL,KEY8
          OPEN      PATVISA1,"patvisaf"
          CALL      RDVISA1                       * Make sure visit file is read
          IF        OVRCD = 0
            OPEN      PMSVX1A1,"pmsvx1af"         * Open Visit Extn.1      I900
            CALL      RDPMVX11                    * Read Visit Extn.1      I900
          ENDIF                                                          * I900
.
          COMPARE   ONE,CHCS                      * HCS needed ?
          GOTO      FINA5000 IF NOT EQUAL
.
.         The patient should not have any change record in unadmit change 
.         audit file
.
          OPEN      PATUNAA1,"patunaaf"
FINA3000  MOVE      AADMNO,PTUNADMN
          PACK      KEY25,PTUNADMN,SP30
          CALL      RDSUNAA1
          CALL      RDKUNAA1
          BRANCH    OVRCD,FINA4000
.
          MATCH     AADMNO,PTUNADMN
          GOTO      FINA4000 IF NOT EQUAL
.
          PACK      KEY25,PTUNADMN,PTUNDATE,PTUNTIME,PTUNTYPE
          CALL      DEUNAA1
          GOTO      FINA3000
.
FINA4000  CLOSE     PATUNAA1
.
FINA5000  CALL      STRN0000                      * write tran record
          MOVE      AURNO,PURNO
          MOVE      PURNO,KEY8
          CALL      RDMAST1                       * Make sure got correct rec. 
          CALL      RDPMPX21
          MOVE      ONE,PCASE                     * Will have case notes
          MOVE      SP8,PTMX3BEX
          MOVE      ZERO,PSTAT
          CALL      UPMAST1
.
FINA9999  RETURN
+
.****************************************************************************
.* STRN0000  :  Set up transfer file record                                 *
.* Parameters:  TWARD and TBED, all other variables are set in here         *
.****************************************************************************
STRN0000  IF        ADMITFLG = 1
            PACK      KEY30,AADMNO,SP30
            CALL      RDSTRAN2                     * position on admission #
            CALL      RDKTRAN2                     * read next record
            BRANCH    OVRCD,STRN1000               * eof - shouldn't happen
.
            MATCH     AADMNO,TADMN                 * same admission # ?
            GOTO      STRN1000 IF NOT EQUAL        * no - shouldn't happen
.
            MATCH     ANSA,TMOVE                   * admit record ?
            GOTO      STRN2000 IF EQUAL            * yes
.
.           For some reason, there was no transfer record for this previously
.           created admission
.
STRN1000    MOVE      AWARD,TWARD
            MOVE      ABED,TBED
            MOVE      ZERO,ADMITFLG
          ENDIF
.
STRN2000  MOVE      AURNO,TURNO
          MOVE      AADMNO,TADMN
          MOVE      ATIME,TTIME
          MOVE      ANSA,TMOVE
.
          UNPACK    ADATE,XCENT,XYEAR,XMON,XDAY
          PACK      TDATE,XCENT,XYEAR,XMON,XDAY
          REP       BLTOZERO,TDATE
          RESET     TDATE
.
          MOVE      SAVEND,TRBEND
          MOVE      ADISC,TDISC
          MOVE      ALWAMT,TALLW
          MOVE      HFPORT,TRATEH
          MOVE      MAXDISC,TRATEF
          MOVE      SAVEXTR,TEXTRA
          MOVE      AUSR2,TCHSTAT
.
          BRANCH    CHOSTYP,STRN4000
.
. The following field is not used by Private Hospitals
.
          MOVE      SP3,TCHSTAT
.
STRN4000  MOVE      ZERO,TRATEG
          MOVE      ATYPE,TATYPE
          MOVE      ADOCTA,TADOCT
          MOVE      ACLSSFT,TDEPT           * set up department
          MOVE      SAVBTYP,TRBTYP
          MOVE      SP3,PTTRLTYP            * clear type of leave
          MOVE      ONE,PTTREPNO
.
.         If the patient is already admitted then update the transfer record
.
          IF        ADMITFLG = 1
            PACK      TRCDATE,CCC,CYY,CMM,CDD
            REP       " 0",TRCDATE
            CLOCK     TIME,TRCTIME
            MOVE      WBSEUID,PTTRUUID
            CALL      UPTRAN2                    * update tran record
            GOTO      STRN9999
          ENDIF
.
. Write Transfer File Record
.
          PACK      KEY30,TADMN,TDATE,TTIME,TWARD,TBED
          CALL      RDATRAN2
          IF        OVRCD=0
            PACK      TRCDATE,CCC,CYY,CMM,CDD
            REP       " 0",TRCDATE
            CLOCK     TIME,TRCTIME
            MOVE      WBSEUID,PTTRUUID
            CALL      UPTRAN2
          ELSE
.
            MOVE      ZERO,PTTREPSD
            MOVE      ZERO,PTTRLSPT
            MOVE      ZERO,PTTRLSRB
            MOVE      ZERO,PTTRAEND
            MOVE      ZERO,PTTRADPT
            MOVE      ZERO,PTTRADRB
            MOVE      SP70,PTTRNHAC
            MOVE      SP70,PTTROPER
            MOVE      SP70,PTTRAUAT
            MOVE      SP70,PTTRCUID
            MOVE      SP70,PTTRLTSC
            MOVE      ACLAIM,PTTRCLTY
.
            PACK      PTTRCDAT,CCC,CYY,CMM,CDD
            REP       " 0",PTTRCDAT
            CLOCK     TIME,PTTRCTIM
            MOVE      WBSEUID,PTTRUCID
            UNPACK    SP70,TRCDATE,TRCTIME,PTTRUUID
.
            CALL      WRTRAN2
          ENDIF
.
STRN9999  RETURN
+
.*****************************************************************************
.*  UBOK0000  :  Update Booking file                                         *
.*****************************************************************************
UBOK0000  COMPARE   ONE,CBOOK
          GOTO      UBOK9999 IF NOT EQUAL
.
          OPEN      BOKRC1A1,"bokrc1af"
          MOVE      AADMNO,KEY8
          CALL      RDBKREC1
          BRANCH    OVRCD,UBOK9999
.
          LOAD      BKRESTAT,ASTAT,ONE,THREE,FOUR
          CALL      UPBKREC1
.
. waiting Lists WMSTAT SET TO 4 AS ADMITTED
.
          COMPARE   ONE,HBWAIT
          GOTO      UBOK9999 IF NOT EQUAL
          OPEN      WATTR1A1,"wattr1af"
.
          PACK      KEY19,BKREURNO,BKREPROC,BKRECNT
          CALL      RDTREA1
          BRANCH    OVRCD,UBOK9000
          IF        WMSTAT <= 6
            LOAD      WMSTAT,ASTAT,THREE,FOUR,FIVE
            CALL      UPTREA1
          ENDIF
.
UBOK9000  CLOSE     WATTR1A1
.
UBOK9999  RETURN
+
.*************************************************************************
.*  ADMH0000  :  Admit Mental Health Patient                             *
.*************************************************************************
.
ADMH0000  COMPARE   ONE,MHCNUSE                   * Using Mental Health system?
          GOTO      ADMH9999 IF NOT EQUAL
.
. update Master Extension file with Legal status
.
          MOVE      SAVLEGST,PTMXLS               * restore Legal stat keyed in
          MOVE      SAVLSDAT,PTMXLSDT             * restore legal status date
.
          PACK      KEY8,PURNO
          CALL      RDAMAST1
          BRANCH    OVRCD,ADMH1000
          CALL      UPMAST1
.
. update the Mental Health Visit file
.
ADMH1000  OPEN      MEHVI1A1,"mehvi1af"
          MOVE      AADMNO,KEY8
          CALL      RDMHVIS1
          IF        OVRCD = 1
            CLOSE     MEHVI1A1
            GOTO      ADMH9999
          ENDIF
.
          MOVE      ONE,MHVISTAT                  * In hospital
          CALL      UPMHVIS1
          CLOSE     MEHVI1A1
.
.         Delete existing mehlegaf record
.
          OPEN      MEHLEGA1,"mehlegaf"
ADMH2000  PACK      KEY21,AADMNO,SP30
          CALL      RSMHLEG1                     * position in file
          CALL      RKMHLEG1                     * read next record
          BRANCH    OVRCD,ADMH2500               * eof - finished deletions
.
          MATCH     AADMNO,MHLEADMN              * same admission number ?
          GOTO      ADMH2500 IF NOT EQUAL        * no - finished deletions
.
          PACK      KEY21,MHLEADMN,MHLEDATE,MHLETIME
          CALL      DEMHLEG1                     * delete record
          GOTO      ADMH2000
.
ADMH2500  MOVE      AADMNO,MHLEADMN
          MOVE      PTMXLSDT,MHLEDATE            * Date status applies
          UNPACK    ATIME,MHLETIME,ANS,ANS,ANS
          MOVE      PTMXLS,MHLESTAT              * Legal status
          MOVE      ANSN,MHLESENT
          MOVE      SP3,MHLEREVW
          MOVE      SP1,MHLEFLAG
          PACK      MHLESPAR,SP10,SP5
          CALL      WRMHLEG1                     * write a new record
.
          CLOSE     MEHLEGA1
.
ADMH9999  RETURN
+
.****************************************************************************
.*  VDAT0000  :  Validate Admission date and time       Called by: ADMT0000 *
.*               Returns:  EXIT=0=All Ok,  EXIT=1=Try again                 *
.****************************************************************************
VDAT0000  MOVE      ATIME,A5TIME                  * save time
.
. ADATE and ATIME must be less than current date and time
.
          CLOCK     FULLDATE,DATEIS              * Clock the current date
          UNPACK    DATEIS,XMON,XDAY,XCENT,XYEAR
          MOVE      XDAY,CDD
          MOVE      XMON,CMM
          MOVE      XYEAR,CYY
          MOVE      XCENT,CCC
          PACK      XDATE,CCC,CYY,CMM,CDD
          REP       " 0",XDATE
.
          MATCH     XDATE,ADATE
          GOTO      VDAT7000 IF EQUAL
          GOTO      VDAT9000 IF LESS
.
. error!
.
          MOVE      "Patient cannot be admitted ahead of todays date",RPLYDESC
          MOVE      "02140",RPLYCODE
          MOVE      ONE,EXIT
          GOTO      VDAT9999
.
VDAT7000  CLOCK     TIME,DATIME
          MATCH     A5TIME,DATIME
          GOTO      VDAT9000 IF NOT LESS
.
. error!
.
          MOVE      "Patient cannot be admitted ahead of todays time",RPLYDESC
          MOVE      "02141",RPLYCODE
          MOVE      ONE,EXIT
          GOTO      VDAT9999
.
VDAT9000  MOVE      ZERO,EXIT                     * Date and time are Ok.
.
VDAT9999  RETURN
+
.*********************************************************************
.*                  VALX0000                    
.*        Do extra validation on the claim code 
.*        and check if there should be an exemption code
.*********************************************************************
VALX0000  COMPARE   ONE,PTCNUCRD
          GOTO      VALX9000 IF NOT EQUAL   * not using card details
.
          PACK      KEY5,CODECL,SP3
          CALL      RDCODE1
          MOVE      TDESC,DIM20
          STRIP     DIM20
.
          PACK      KEY5,CODECL,ACLAIM
          CALL      RDCODE1
          PACK      DETNFILE,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
          MOVE      PTMXCARD,ANS
.
. ******* check a: if card type = G or H, claim code must be an exemption
.
          MATCH     ANSG,ANS
          GOTO      VALX1000 IF EQUAL
          MATCH     ANSH,ANS
          GOTO      VALX2000 IF NOT EQUAL
.
. ------- claim code must be an exemption -------
.
VALX1000  SCAN      ANSE,DETNFILE
          GOTO      VALX5000 IF EQUAL       * an exemption code
.
          PACK      RPLYDESC,DIM20
          STRIP     RPLYDESC
          ENDSET    RPLYDESC
          APPEND    " Must be an exemption code",RPLYDESC
          RESET     RPLYDESC
          MOVE      "02145",RPLYCODE
          GOTO      VALX9100
.
.         check b: if a non-resident, claim code must have an indicator "I"
.
VALX2000  COMPARE   ONE,PTCNNHII
          GOTO      VALX2500 IF NOT EQUAL
.
          OPEN      NHIMASA2,"nhimasaf"
          MOVE      PURNO,KEY8
          CALL      RDNHMAS2
          BRANCH    OVRCD,VALX2500
.
          MATCH     ANSY,NHMARES
          GOTO      VALX2100 IF EQUAL       * Resident
          RESET     DETNFILE                * Non-Resident must claim code
          SCAN      ANSI,DETNFILE           * "I" for an indicator
          GOTO      VALX5000 IF EQUAL       * valid code
.
          PACK      RPLYDESC,DIM20
          STRIP     RPLYDESC
          ENDSET    RPLYDESC
          APPEND    " is not valid for NHI Resident Status Y",RPLYDESC
          RESET     RPLYDESC
          MOVE      "02146",RPLYCODE
          GOTO      VALX9100
.
VALX2100  RESET     DETNFILE
          SCAN      ANSI,DETNFILE
          GOTO      VALX4000 IF NOT EQUAL   * doesn't have an "I"
.
          MOVE      "NHI Resident Status N is not valid for ",RPLYDESC
          APPEND    DIM20,RPLYDESC
          MOVE      "02147",RPLYCODE
          GOTO      VALX9100
.
VALX2500  PACK      KEY5,CODET,PTYPE
          CALL      RDCODE1
          BRANCH    OVRCD,VALX3000          * invalid resident status
.
          MATCH     "2",TCINDC1
          GOTO      VALX3000 IF NOT EQUAL   * not a non-resident
.
. ------- claim code must have an "I" for an indicator -------
.
          SCAN      ANSI,DETNFILE
          GOTO      VALX5000 IF EQUAL       * valid code
.
          PACK      KEY5,CODET,SP3
          CALL      RDCODE1
          STRIP     TDESC
.
          MOVE      DIM20,RPLYDESC
          STRIP     RPLYDESC
          ENDSET    RPLYDESC
          APPEND    " is not valid for ",RPLYDESC
          APPEND    TDESC,RPLYDESC
          MOVE      "02148",RPLYCODE
          GOTO      VALX9100
.
.         check c: if claim code has an indicator "I", must be a non-resident
.
VALX3000  SCAN      ANSI,DETNFILE
          GOTO      VALX4000 IF NOT EQUAL   * doesn't have an "I"
.
. ------- patient must be a non-resident -------
.
          PACK      KEY5,CODET,PTYPE
          CALL      RDCODE1
          BRANCH    OVRCD,VALX9100          * invalid resident status
.
          MATCH     "2",TCINDC1
          GOTO      VALX5000 IF EQUAL       * is a non-resident
          PACK      KEY5,CODET,SP3
          CALL      RDCODE1
          STRIP     TDESC
.
          MOVE      TDESC,RPLYDESC
          STRIP     RPLYDESC
          ENDSET    RPLYDESC
          APPEND    " is not valid for ",RPLYDESC
          APPEND    DIM20,RPLYDESC
          MOVE      "02149",RPLYCODE
          GOTO      VALX9100
.
.         check d: ((if card number is blank) and (claim code <> PTCNDCLM) and
.                   (claim code is not an exemption) and (patient is non-res))
.         ie. if they don't have a card number, they must be chargeable
.             or exempt or a non-resident
.
VALX4000  MATCH     SP20,PTMXCARD
          GOTO      VALX5000 IF NOT EQUAL   * have a card number
          SCAN      ANSD,DETNFILE
          GOTO      VALX5000 IF EQUAL       * they are chargeable
          SCAN      ANSE,DETNFILE
          GOTO      VALX5000 IF EQUAL       * an exemption
          SCAN      ANSI,DETNFILE
          GOTO      VALX5000 IF EQUAL       * non-resident
.
          PACK      KEY5,CODET,SP3
          CALL      RDCODE1
          STRIP     TDESC
.
. continu if claim code does not match card/resident status? (passed with dgate)
.
VALX4500  MATCH     "Y",CCNTRESI
          IF        !@EQUAL
            MOVE      DIM20,RPLYDESC
            STRIP     RPLYDESC
            ENDSET    RPLYDESC
            APPEND    " does not match card/",RPLYDESC
            APPEND    TDESC,RPLYDESC
            MOVE      "02150",RPLYCODE
            GOTO      VALX9100
          ENDIF
.
.         do checks to see if they should have an exemption code
.
VALX5000  MATCH     SP3,ACLAIM 
          GOTO      VALX9000 IF EQUAL       * don't have to check it
.
          PACK      KEY5,CODECL,ACLAIM 
          CALL      RDCODE1
          BRANCH    OVRCD,VALX9000          * invalid code
.
          PACK      KEY5,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
          SCAN      ANSE,KEY5
          GOTO      VALX9000 IF NOT EQUAL   * no exemption code needed
          SCAN      ANSY,KEY5
          GOTO      VALX9000 IF EQUAL       * no exemption code needed
.
.         there should be an exemption code
.
          MATCH     SP3,PTMXCXMP
          GOTO      VALX9000 IF NOT EQUAL   * they have an exemption code
          PACK      KEY5,CODEXM,SP3
          CALL      RDCODE1
          STRIP     TDESC
.
          MOVE      "Patient must have an ",RPLYDESC
          APPEND    TDESC,RPLYDESC
          MOVE      "02151",RPLYCODE
          GOTO      VALX9100
.
.         set exit flags
.
VALX9000  MOVE      ZERO,EXIT               * continue
          GOTO      VALX9999
.
VALX9100  MOVE      ONE,EXIT                * do not continue
.
VALX9999  RETURN
+
.***************************************************************************
.*  GBED0000  :  Ask for the Ward/Bed                  Called by: ADMT0000 *   
.***************************************************************************
.
GBED0000  MOVE      WEFRBT,SAVBTYP
          CALL      OBED0000                      * Open the Ward/Bed files
.
          MATCH     SP3,ABED                      * Does Ward have Beds in it?
          GOTO      GBED4000 IF NOT EQUAL
.
. This is a Ward only bed - put into the PATNOBE file
.
          MOVE      APLUR,NBPLUR
          MOVE      SP3,NBROOM
          PACK      KEY13,AWARD,AADMNO,NBPLUR
          CALL      WRNOBE1
.
          PACK      KEY6,AWARD,ABED
          CALL      RDWARD1                       * Get description again
          GOTO      GBED9000
.
. Put the patient into this bed
.
GBED4000  PACK      KEY6,AWARD,ABED
          CALL      RDWARD1
.
          MATCH     ZEROVISN,WADMNO               * has bed been taken?
          GOTO      GBED5000 IF NOT EQUAL         * Yes.
.
. Bed has not been taken by anyone
.
          MOVE      AADMNO,WADMNO
          MOVE      APLUR,WPLUR
          CALL      UPWARD1
          GOTO      GBED9000
.
GBED5000  MATCH     "Y",PUTONSBY      * put pat on standby (passed by datagate)
          IF        !@EQUAL
            MOVE      "Ward/Bed already occupied",RPLYDESC
            MOVE      "02131",RPLYCODE
            GOTO      GBED9850
          ENDIF
.
. Put Patient on standby if bed doesn't already have a patient on standby
.
          MATCH     ZEROVISN,WSTBY                * another pat. on standby?
          GOTO      GBED7000 IF EQUAL             * No.
.
          MOVE     "There is a patient already on standby for this bed",RPLYDESC
          MOVE      "02132",RPLYCODE
          GOTO      GBED9850
.
. Put the Patient on Stand-by
.
GBED7000  MOVE      AADMNO,WSTBY
          CALL      UPWARD1
.
          MOVE      SP3,AWARD
          MOVE      SP3,ABED
.
          MOVE      WWARD,TWARD
          MOVE      WBED,TBED
          CALL      CBED0000                      * Close Ward/Bed files
          MOVE      ZERO,EXIT
          GOTO      GBED9999
.
GBED9000  MOVE      AWARD,TWARD
          MOVE      ABED,TBED
          CALL      CBED0000                      * Close Ward/Bed files
          MOVE      ZERO,EXIT
          GOTO      GBED9999
.
GBED9850  MOVE      ONE,EXIT                      * Fatal Error. Try again
          GOTO      GBED9999
.
GBED9999  RETURN
+
.****************************************************************************
.*  ALUR0000  :  Allocate a U/R Number                                      *
.****************************************************************************
ALUR0000  MOVE      AWARD,NWARD                   * save ward
          MOVE      ABED,NBED                     * save bed
.
. Computer generate U/R Number
.
          MOVE      THREE,CPSYSTEM                * Get the next Inpatient U/R
          CALL      GNXTUR                        * Get Next U/R Number
          MOVE      ZERO,PSTAT                    * a valid U/R
.
.         Post this U/R Number
.
ALUR5910  MOVE      AADMNO,PVIBILL           * Parameter for WRTUR
          MOVE      THREE,PVITYPE            * Parameter for WRTUR
          CALL      OPSU0000                 * open surname file
          CALL      WRTUR                    * Post this new U/R Number
.
          PACK      PUSR1,PUSR1,SP3
          MATCH     SP3,PUSR1
          IF        !@EQUAL
            MOVE      SP20,TDESC
            MOVE      "P1",DIM2
            PACK      KEY5,DIM2,PUSR1
            CALL      RDCODE1
          ENDIF
            
          MOVE      THREE,DETNTREC
.
          COMPARE   ONE,PTPRVALS             * Is the previous name to
          GOTO      ALUR5960 IF NOT EQUAL    * be an alias
.
          MATCH     SP19,PPSNAME             * Is there a previous name
          GOTO      ALUR5960 IF EQUAL
.
          MATCH     PPSNAME,PSNAME           * Is the previous name same as
          GOTO      ALUR5960 IF EQUAL        * actual surname
.
          MOVE      PBDATE,GSRDOB           * Date of birth
          MOVE      PSEX,GSRSEX             * Sex
          MOVE      GSRSNAM,SSDXSNAM
          PACK      GSRSNAM,PPSNAME,SP70
          CALL      SOUNDEX
          CALL      SOUNDX2
.
          PACK      KEY115,GSRURNO,GSRBILL,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB:
                           GSRSEX,SP70,SP70
          CALL      RAPTGSR1
          COMPARE   ZERO,OVRCD
          GOTO      ALUR5950 IF EQUAL
          CALL      WRPTGSR1
.
ALUR5950  MOVE      SSDXSNAM,GSRSNAM
.
ALUR5960  CALL      CLSU0000                 * close surname file
.
. Delete the pre-attendance master details
.
ALUR6000  MOVE      AADMNO,KEY8              * Key for patpramf file
          CALL      DEPRAM1                  * Delete patpramf record
          MOVE      AADMNO,PVIBILL
          CALL      PNMP0000
.
. Update aliases on surname file with new u/r number
.
          CALL      CPAL0000                  
.
. Update the U/R number on the admission record
.
ALUR6010  MOVE      AADMNO,KEY8
          CALL      RDMISS1                  * Preparation for an UPLMISS1
          BRANCH    OVRCD,ALUR6200
.
          MOVE      NWARD,AWARD              * restore ward
          MOVE      NBED,ABED                * restore bed
          MOVE      PURNO,AURNO
          MOVE      TWO,ASTAT
          CALL      UPLMISS1                 * Change U/R Number & ASTAT
.
. Update the U/R number on the booking record
.
          OPEN      BOKRC1A1,"bokrc1af"
          MOVE      AADMNO,KEY8
          CALL      RDBKREC1
.
          IF        OVRCD=0
            MOVE      PURNO,BKREURNO
            CALL      UPBKREC1
          ENDIF
.
. Write to patient visit file as we have got U/R Number
.
ALUR6200  MOVE      PURNO,PVIURNO
          MOVE      AADMNO,PVIBILL
          PACK      PVIDATE,ADATE
          REP       BLTOZERO,PVIDATE
.
          MOVE      THREE,PVITYPE
          MOVE      ADOCTA,PVIDOCT
.
          MOVE      ZERO,TCINDC1
          PACK      KEY5,CODEA,ATYPE
          CALL      RDCODE1
.
          MOVE      ZERO,FORM1               * in case TCINDC1 is not numeric
          MOVE      TCINDC1,FORM1
          MOVE      TWO,PVISTAT                (DEFAULT PUBLIC PATIENT)
          LOAD      PVISTAT,FORM1,TWO,ONE
.
          MOVE      PTYPE,PVIRESI
          MOVE      SP2,PVILOCK
          MOVE      SP20,PVISPAR
.
ALUR8000  MOVE      PVIBILL,KEY8             * already on file ?
          CALL      RLPTVIS1
.
.         Update current record
.
          IF        OVRCD=0
            MOVE      ADOCTA,PVIDOCT
            MOVE      PTYPE,PVIRESI
            MOVE      TWO,PVISTAT              (DEFAULT PUBLIC PATIENT)
            LOAD      PVISTAT,FORM1,TWO,ONE
            CALL      UPVISA1                * Update record
            CALL      UUPTVIS1               * Update record
            CALL      RAPMVX11              * Position on Visit Extn.1     I900
            CALL      UPPMVX11              * Update Visit Extn.1          I900
            GOTO      ALUR9000
          ENDIF
.
.         Write a new record
.
          IF        OVRCD=1
            CALL      WRVISA1                * write a record
            MOVE      PPOST,PMVXPOST
            MOVE      AADMNO,PMVXVISN
            CALL      WRPMVX11              * Write Visit Extn.1           I900
            GOTO      ALUR9000
          ENDIF
.
.         Visit record locked OVRCD=2
.
          MOVE      "Visit record locked on another port",RPLYDESC
          MOVE      "02160",RPLYCODE
          MOVE      ONE,EXIT
          GOTO      ALUR9999
.
ALUR9000  MOVE      ZERO,EXIT
.
ALUR9999  RETURN
+
.*****************************************************************************
.*  OBED0000  :  Open files required for the Ward/Bed input                  *
.*****************************************************************************
OBED0000  OPEN      PATWR1A2,"patwr1af"
          OPEN      PATWR1A3,"patwr1af"
          OPEN      PATONLV1,"patonlvf"
          OPEN      PATNOBE1,"patnobef"
OBED9999  RETURN
+
.*****************************************************************************
.*  CBED0000  :  Close files required for the Ward/Bed input                 *
.*****************************************************************************
CBED0000  CLOSE     PATWR1A2
          CLOSE     PATONLV1
          CLOSE     PATNOBE1
CBED9999  RETURN
.
OVERCOND  MOVE      ONE,OVRCD
          RETURN
.
OVERLOCK  MOVE      TWO,OVRCD
          RETURN
+
.****************************************************************************
.*  ABSV0000  :  Save Admission variables                                   *
.****************************************************************************
.
ABSV0000  MOVE      AADMNO,SAADMNO
          MOVE      AURNO,SAURNO
          MOVE      ADATE,SADATE
          MOVE      ATIME,SATIME
          MOVE      ASTAT,SASTAT
          MOVE      APORT,SAPORT
          MOVE      ATRANNO,SATRANNO
          MOVE      AINVPRT,SAINVPRT
          MOVE      ALACDTE,SALACDTE
          MOVE      ACANCEL,SACANCEL
          MOVE      AWARD,SAWARD
          MOVE      ABED,SABED
.
          MOVE      ADOCTR,SADOCTR
          MOVE      ADOCTA,SADOCTA
          MOVE      ADOCTL,SADOCTL
.
          MOVE      ASRCE,SASRCE
          MOVE      ATYPE,SATYPE
          MOVE      ACLSS,SACLSS
          MOVE      ACARE,SACARE
.
          MOVE      AFUNDH,SAFUNDH
          MOVE      AFNDTB,SAFNDTB
          MOVE      AFNDMM,SAFNDMM
          MOVE      AELIG,SAELIG
.
          MOVE      AVISIT,SAVISIT
          MOVE      AALERG,SAALERG
          MOVE      AILLN,SAILLN
          MOVE      ADIAG1,SADIAG1
          MOVE      ADIAG2,SADIAG2
.
          MOVE      ADISC,SADISC
          MOVE      ADOCTT,SADOCTT
          MOVE      ACLSSFT,SACLSSFT
          MOVE      AALLOW,SAALLOW
          MOVE      AMBS,SAMBS
          MOVE      ACLAIM,SACLAIM
          MOVE      ADIET,SADIET
          MOVE      APLOCCR,SAPLOCCR
          MOVE      ASTAY,SASTAY
          MOVE      ADYHOSP,SADYHOSP
          MOVE      AMEMB,SAMEMB
          MOVE      AMEMBNO,SAMEMBNO
          MOVE      ACOMM1,SACOMM1
          MOVE      ACOMM2,SACOMM2
          MOVE      APLUR,SAPLUR
          MOVE      APURGE,SAPURGE
.
          MOVE      AUSR1,SAUSR1
          MOVE      AUSR2,SAUSR2
          MOVE      AUSR3,SAUSR3
          MOVE      AUSR4,SAUSR4
          MOVE      AUSR5,SAUSR5
          MOVE      AUSR6,SAUSR6
          MOVE      AUSR7,SAUSR7
          MOVE      ADSCHI,SADSCHI
          MOVE      ARDRNAM,SARDRNAM
          MOVE      AFNDYY,SAFNDYY
          MOVE      AFNDCG,SAFNDCG
          MOVE      AOCCDTE,SAOCCDTE
          MOVE      ACODDTE,SACODDTE
          MOVE      ARETDTE,SARETDTE
          MOVE      AMUMADM,SAMUMADM
.
          MOVE      DPTMIPVI,SDPTMIPV
          MOVE      ABWGHT,SABWGHT
          MOVE      PMVXRHC1,SPTMSRFG
          MOVE      PMVXRH1G,SPTMSGPP
          MOVE      PTMSFHAN,SPTMSFHA
          MOVE      PTMSECRA,SPTMSECR
          MOVE      PTMSMGIN,SPTMSMGI
.
          MOVE      PTMIDDIG,SPTMIDIG
          MOVE      PMVXRH1C,SPTMIGPT
          MOVE      PTMIDOFR,SPTMIDOF
          MOVE      PTMIREFD,SPTMIREF
          MOVE      PTMIDFCN,SPTMIDFC
          MOVE      PTMIPHPU,SPTMIPHP
          MOVE      PTMIAGNC,SPTMIAGN
          MOVE      PTMIESSF,SPTMIESS
          MOVE      PTMIUSR8,SPTMIUS8
          MOVE      PTMIUSR9,SPTMIUS9
          MOVE      PTMIUSR0,SPTMIUS0
          MOVE      PTMIPDRG,SPTMSDRG
          MOVE      PTMIOPER,SPTMIOPE
          MOVE      PTMIXWRD,SPTMIXWD
          MOVE      PTMIADOC,SPTMIADC
          MOVE      PTMIREGS,SPTMIREG
          MOVE      PTMIUYN1,SPTMIUY1
          MOVE      PTMIUYN2,SPTMIUY2
.
ABSV9999  RETURN
+
.***************************************************************************
.*  OPSU0000  :  Open surname files                      Called by: Many   *
.***************************************************************************
.
OPSU0000  OPEN      PATGSRN1,"patgsrnf"
          OPEN      PATGSRN2,"patgsrnf"
          OPEN      PATGSRN3,"patgsrnf"
          OPEN      PATGSRN4,"patgsrnf"
OPSU9999  RETURN
+
.***************************************************************************
.*  CLSU0000  :  Close surname files                     Called by: Many   *
.***************************************************************************
.
CLSU0000  CLOSE     PATGSRN1
          CLOSE     PATGSRN2
          CLOSE     PATGSRN3
          CLOSE     PATGSRN4
CLSU9999  RETURN
+
.****************************************************************************
.*  CPAL0000  :  Update the aliases with the new u/r number                 *
.****************************************************************************
CPAL0000  CALL      OPSU0000                 * open surname file
.
CPAL5000  MOVE      AADMNO,GSRBILL
          MOVE      ZEROUR,GSRURNO
.
          PACK      KEY115,GSRURNO,GSRBILL,SP70,SP70
          CALL      RSPTGSR1
CPAL6000  CALL      RKPTGSR1
          BRANCH    OVRCD,CPAL9999
.
          MATCH     AADMNO,GSRBILL
          GOTO      CPAL9999 IF NOT EQUAL     
.
          MOVE      PURNO,GSRURNO
          MOVE      ZEROVISN,GSRBILL
          CALL      UPPTGSR1
.
          GOTO      CPAL5000
.
CPAL9999  RETURN
+
.*************************************************************************
.*  SUBD0000  :  Routine to subtract one from a given date               *
.*               Requires : CYEAR, CMON, CDAY                            *
.*               Returns  : CC, YY, MM, DD                               *
.*************************************************************************
SUBD0000  MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON           * convert to julian date
.
.------ subtract one daye and set up the return date -------
.
          SUB       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON              * convert back to DD,MM,YY,CC format
.
SUBD9999  RETURN
+
.****************************************************************************
.*  ANST0000  :  Subroutine to add a new record to the Statistics file      *
.****************************************************************************
ANST0000  MOVE      ZERO,SADMTH1
          MOVE      ZERO,SADMTH2
          MOVE      ZERO,SADMTH3
          MOVE      ZERO,SADMTH4
          MOVE      ZERO,SADMTH5
          MOVE      ZERO,SADMTH6
          MOVE      ZERO,SADMTH7
          MOVE      ZERO,SADMTH8
          MOVE      ZERO,SADMTH9
          MOVE      ZERO,SADMTH10
          MOVE      ZERO,SADMTH11
          MOVE      ZERO,SADMTH12
          MOVE      ZERO,SADMTH13
          MOVE      ONE,NADM
          STORE     NADM,FORM2,SADMTH1,SADMTH2,SADMTH3,SADMTH4,SADMTH5:
                               SADMTH6,SADMTH7,SADMTH8,SADMTH9,SADMTH10:
                               SADMTH11,SADMTH12,SADMTH13
          CALL      WRSTAD1
ANST9999  RETURN
+
.****************************************************************************
.*  UVST0000  :  Routine to update the approp. variable in the stats file   *
.****************************************************************************
UVST0000  LOAD      NADM,FORM2,SADMTH1,SADMTH2,SADMTH3,SADMTH4,SADMTH5:
                               SADMTH6,SADMTH7,SADMTH8,SADMTH9,SADMTH10:
                               SADMTH11,SADMTH12,SADMTH13
          ADD       COUNT,NADM
.
          STORE     NADM,FORM2,SADMTH1,SADMTH2,SADMTH3,SADMTH4,SADMTH5:
                               SADMTH6,SADMTH7,SADMTH8,SADMTH9,SADMTH10:
                               SADMTH11,SADMTH12,SADMTH13
          CALL      UPSTAD1
UVST9999  RETURN
+
.***************************************************************************
.*  USTA0000  :  Add new Admission data to statistics file                 *
.***************************************************************************
USTA0000  MOVE      ZERO,EXIT
          COMPARE   ONE,PTCNSTAU             * Return if using the new admission
          GOTO      USTA9999 IF EQUAL          and discharge stats report
.
          PACK      CPTDATE,ADATE
          REP       " 0",CPTDATE
          CALL      GPERD
          BRANCH    EXIT,USTA7000
.
          MOVE      DRGYR,SADYEAR
          MOVE      DRGNUM,FORM2
.
          PACK      KEY8,SADYEAR,ANSA,ATYPE
          MATCH     SP3,ATYPE
          GOTO      USTA2500 IF NOT EQUAL
          PACK      KEY8,SADYEAR,ANSA,CODEUNK
.
USTA2500  CALL      RDSTAD1
          BRANCH    OVRCD,USTA3000
          MOVE      ONE,COUNT
          CALL      UVST0000
          GOTO      USTA4000
.
USTA3000  MOVE      ANSA,SADTYPE
          MOVE      ATYPE,SADCODE
.
          MATCH     SP3,ATYPE
          GOTO      USTA3500 IF NOT EQUAL
          MOVE      CODEUNK,SADCODE
.
USTA3500  CALL      ANST0000
.
USTA4000  PACK      KEY8,SADYEAR,ANSB,ASRCE
          MATCH     SP3,ASRCE
          GOTO      USTA4500 IF NOT EQUAL
          PACK      KEY8,SADYEAR,ANSB,CODEUNK
.
USTA4500  CALL      RDSTAD1
          BRANCH    OVRCD,USTA4800
          MOVE      ONE,COUNT
          CALL      UVST0000
          GOTO      USTA9000
.
USTA4800  MOVE      ANSB,SADTYPE
          MOVE      ASRCE,SADCODE
.
          MATCH     SP3,ASRCE
          GOTO      USTA5000 IF NOT EQUAL
          MOVE      CODEUNK,SADCODE
.
USTA5000  CALL      ANST0000
          GOTO      USTA9000
.
USTA7000  
.....     UNPACK    CPTDATE,CCENT,CYEAR,CMON,CDAY
.....     CALL      PACDATE
.....     DISPLAY   *P1:24,*EL,*B,CPCDATE," not in Period File. ";
.....     CALL      HITENTER
.....     GOTO      USTA0000
.
. set up error message
.
          MOVE      "02142",RPLYCODE      * reply code
          MOVE      "Admission date not on period file",RPLYDESC
          MOVE      ONE,EXIT              * Error!  Adm date not on period file
          GOTO      USTA9999
.
USTA9000  MOVE      ZERO,EXIT             * all is Ok!
.
USTA9999  RETURN
+
.******************************************************************************
. PNMP0000  :  Post NMPI Number
.              Parameter : PURNO   (U/R Number) 
.                          PVIBILL (Visit Number) 
.                          NMPNUMB (NMPI Number)
.******************************************************************************
PNMP0000  COMPARE   ZERO,PTCNNMPI
          GOTO      PNMP9999 IF EQUAL            * not using link
          COMPARE   ONE,PTCNNHII
          GOTO      PNMP9999 IF EQUAL            * using NZ link
.
          OPEN      PATPNIA1,"patpniaf"          * Zero U/R Number 
          OPEN      PATNIDA1,"patnidaf"          * all other countries
.
.         Check whether a nmpi number has been inputed, if one has 
.         write it to the PNI/NID/NMP file, otherwise do nothing
.
          MATCH     NMPNUMB,SP20
          GOTO      PNMP5000 IF EQUAL            * no number entered
.
          MATCH     ZEROUR,PURNO
          GOTO      PNMP3000 IF NOT EQUAL
.
.         Zero U/R :: post to PATPNI file
.
          MATCH     ZEROVISN,PVIBILL
          GOTO      PNMP9000 IF EQUAL
.
.         Zero Billing Number DO NOT POST TO PNI FILE OR NMP FILE
.
          PACK      KEY10,CHOSINDX,PVIBILL   * Hospital No. and visit No.
          CALL      RDPTPNI1
          MOVE      CHOSINDX,PTPNHNUM        * Hospital No.
          MOVE      PVIBILL,PTPNADNO         * Admission No.
          MOVE      NMPNUMB,PTPNNMPI         * National Id
          IF        OVRCD = ONE
            CALL      WRPTPNI1               * Write record does not exist
          ELSE
            CALL      UPPTPNI1               * Update record exists
          ENDIF
          GOTO      PNMP9000
.
.         A valid U/R :: post to PATNMP/PATNID file
.
PNMP3000  PACK      KEY10,CHOSINDX,PURNO
          CALL      RDPTNID1
          BRANCH    OVRCD,PNMP4000
.
          MOVE      NMPNUMB,PTNINMPI         * National Id
          CALL      UPPTNID1                * Update File
          GOTO      PNMP9000
.
PNMP4000  PACK      KEY10,CHOSINDX,PVIBILL
          CALL      RDPTPNI1                  * Exist on PNI file ?
          IF        OVRCD = ONE
            MOVE      CHOSINDX,PTNIHNUM       * No. hospital number
            MOVE      PURNO,PTNILNUM          *     local U/R Number
.
            SQUEEZE   NMPNUMB                 * left justify field
            PACK      NMPNUMB,NMPNUMB,SP20    * clear rest of field 
            STRIP     NMPNUMB                 * remove blanks
            MOVELPTR  NMPNUMB,FORM2           * get the actual length
.
            MOVE      SP20,PTNINMPI           * clear the actual field
            ASSIGN    20-FORM2,IMON           * get the No. blanks at start
            RESET     PTNINMPI,IMON           * reset actual field
            APPEND    NMPNUMB,PTNINMPI        * add items entered
            RESET     PTNINMPI                * this field is now Right Just.
            MOVE      SP10,PTNISPAR           *     set spare variable
            PACK      KEY10,CHOSINDX,PURNO    *     Reset Key
            CALL      WRPTNID1                *     Write NMP record
          ELSE
            MOVE      PTPNHNUM,PTNIHNUM       * Yes. copy hospital number
            MOVE      PURNO,PTNILNUM          *      copy local U/R Number
            MOVE      PTPNNMPI,PTNINMPI       *      copy nmpi U/R No.
            MOVE      SP10,PTNISPAR           *      set spare variable
            PACK      KEY10,CHOSINDX,PURNO    *      Reset Key
            CALL      WRPTNID1                *      Write NMP record
            PACK      KEY10,CHOSINDX,PVIBILL   * Hospital No. and visit No.
            CALL      DEPTPNI1                *      delete PNI record
          ENDIF  
          GOTO      PNMP9000
.
.         Nothing input. Check if there was previously details, and if so,
.         delete them
.
PNMP5000  MATCH     ZEROUR,PURNO             * Zero U/R Number
          IF        @EQUAL
            PACK      KEY10,CHOSINDX,PVIBILL
            CALL      DEPTPNI1
          ENDIF
          PACK      KEY10,CHOSINDX,PURNO   * All other countries
          CALL      DEPTNID1
.
PNMP9000  CLOSE     PATPNIA1                 * Zero U/R
          CLOSE     PATNIDA1                 * all other countries
.
PNMP9999  RETURN
+
.***************************************************************************
.*  CLEAR000  :  clear fields                                              *
.***************************************************************************
CLEAR000  CALL      CLPATMAS                      * clear master file vars
          CALL      CLPMSPX2                      * Clear Master Extn.2    I900
          CALL      CLPATMIS                      * clear admission vars
          MOVE      ZERO,ADMITFLG
          MOVE      SP5,PTDAADTS                  * admission transfer source
          MOVE      SP20,PTPNNMPI
          MOVE      ZEROVISN,AADMNO
.
. clear PRA details
.
          PACK      PKNAME,SP70,SP10
          MOVE      SP50,PKADD1
          MOVE      SP50,PKADD2
          MOVE      SP50,PKSUBR
          MOVE      SP50,PKADD4
          MOVE      SP50,PKPOST
          MOVE      SP50,PKTELEP
          MOVE      SP50,PKTELEB
          MOVE      SP50,PKRELP
          MOVE      ZEROVISN,PKADMN
.
CLEAR999  RETURN
+
.****************************************************************************
.*  NXTA0000  :  Get Next Admission Number                                  *
.****************************************************************************
.
NXTA0000  READ      CONTROLF,HUND30;*75,PTCNUANV      * Using AN Visit Numbers
.
          MATCH     "1",PTCNUANV
          IF        @EQUAL
            CALL      GANV0000                * Get next AN visit number
            MOVE      PTCNNXTV,AADMNO
          ELSE
            MOVE      " 10",PRXCODE   * System Lock Sector 10
            CALL      GETSLK00        * Get System Lock of Sector 10
            READ      CONTROLF,TEN;*1,FORM8V
            ADD       ONE,FORM8V
            WRITAB    CONTROLF,TEN;*1,FORM8V
            CALL      RELSLK00        * Release System Lock of Sector 10
            SUB       ONE,FORM8V
            MOVE      FORM8V,AADMNO
         ENDIF
.
. Check with visit file, make sure it does not exist already
.
          OPEN      PATVISA1,"patvisaf"
          MOVE      AADMNO,PVIBILL
          MOVE      PVIBILL,KEY8
          CALL      RDAVISA1
          COMPARE   ZERO,OVRCD
          GOTO      NXTA0000 IF EQUAL       * get the next Admission Number
.
          CALL      RDAMISS1
          COMPARE   ZERO,OVRCD
          GOTO      NXTA0000 IF EQUAL       * get the next Admission Number
.
NXTA9999  RETURN
+
.****************************************************************************
.*  PADM0000  :  Post Admission details                                     *
.****************************************************************************
.
PADM0000  PACK      KEY8,AADMNO
          CALL      RDAMISS1
          IF        OVRCD = 0
            MOVE      ADATE,ALACDTE
            CALL      UPMISS1
          ELSE
            MOVE      ZERO,ADSCHI
            MOVE      ZERO,AINVPRT
            MOVE      ADATE,ALACDTE
            CALL      WRMISS1
          ENDIF
.
. write/update admission extension record
.
          IF        PTCNAXEU = 1
            CALL      UPAXE000
          ENDIF
.
          CALL      ADTD0000                * update admission transfer dest.
          CALL      PNZB0000                * post to Kiwi Card file
.
          CALL      PNMP0000                * post to National UR file
....      CALL      CUNTD000                * update NZHIS interface stuff
....      CALL      CHNHI000                * if NMPI No. changed handle change
....      CALL      CUDNR000                * update donor on NZHIS if PC changd
.
. Write/Update Visits file if we have a U/R Number
.
PADM0100  MATCH     ZEROUR,PURNO
          GOTO      PADM1000 IF EQUAL
.
          OPEN      PATVISA1,"patvisaf"
          OPEN      PMSVX1A1,"pmsvx1af"     * Open Visit Extn.1            I900
.
          MOVE      AADMNO,PVIBILL
          MOVE      PURNO,PVIURNO
          PACK      PVIDATE,ADATE
          REP       " 0",PVIDATE
.
          MOVE      THREE,PVITYPE
.
          MOVE      ZERO,TCINDC1
          PACK      KEY5,ANSA,SP1,ATYPE
          CALL      RDCODE1
.
          MOVE      ZERO,FORM1              * in case TCINDC1 is not numeric
          MOVE      TCINDC1,FORM1
          MOVE      TWO,PVISTAT             * Default Public Patient
          LOAD      PVISTAT,FORM1,TWO,ONE
          MOVE      ONE,PVITRAN             * initialise transaction number
          MOVE      SP2,PVILOCK
          MOVE      SP20,PVISPAR
.
          MOVE      ADOCTA,PVIDOCT
          MOVE      PTYPE,PVIRESI
.
          MOVE      PVIBILL,KEY8            * already on file ?
          CALL      RLPTVIS1
.
.         Update current record
.
          IF        OVRCD = 0
            MOVE      ADOCTA,PVIDOCT
            MOVE      PTYPE,PVIRESI
            MOVE      TWO,PVISTAT           * Default Public Patient
            LOAD      PVISTAT,FORM1,TWO,ONE
            PACK      PVIDATE,ADATE
            REP       " 0",PVIDATE
            CALL      UPVISA1               * update visit record
            CALL      UUPTVIS1               * Update record
            CALL      RAPMVX11              * Position on Visit Extn.1     I900
            IF        OVRCD = 0
.                                           * Just being careful !!!       I900
              MOVE      PPOST,PMVXPOST
              CALL      UPPMVX11            * Update Visit Extn.1          I900
            ELSE                                                           I900
              MOVE      AADMNO,PMVXVISN
              MOVE      PPOST,PMVXPOST
              CALL      WRPMVX11            * Write Visit Extn.1           I900
            ENDIF                                                          I900
            GOTO      PADM1000
          ENDIF
.
.         Write a new record
.
          IF        OVRCD = 1
            CALL      WRVISA1               * write a record
.
            MOVE      PVIBILL,KEY8
            CALL      RAPMVX11              * Position on Visit Extn.1     I900
            IF        OVRCD = 0
              MOVE      PPOST,PMVXPOST
              CALL      UPPMVX11
            ELSE
              MOVE      AADMNO,PMVXVISN
              MOVE      PPOST,PMVXPOST
              CALL      WRPMVX11            * Write Visit Extn.1           I900
            ENDIF
            GOTO      PADM1000
          ENDIF
.
.         Visit record locked so ERROR!!!!
.
          MOVE      "02160",RPLYCODE
          MOVE      "Visit record Locked on another port",RPLYDESC
          MOVE      ONE,EXIT                * dont continue
          GOTO      PADM9999
.
. Update Master file with Resident Status, and any other changed
.
PADM1000  MATCH     ZEROUR,PURNO
          GOTO      PADM1100 IF EQUAL
.
          MOVE      PURNO,KEY8
          CALL      RDAMAST1
          IF        OVRCD = 0
            CALL      UPMAST1               * update Master file
            CALL      RAPMPX21              * Position on PMI Extn.2       I900
            IF        OVRCD = 0 
              CALL      UPPMPX21            * Update PMI Extn.2            I900
            ELSE                                                           I900
              CALL      WRPMPX21            * Write PMI Extn.2             I900
            ENDIF                                                          I900
          ENDIF
          GOTO      PADM9000
.
.         Update zero U/R master details if appropriate
.
PADM1100  MATCH     ZEROVISN,AADMNO         * do we have an Admission No. ?
          GOTO      PADM9000 IF EQUAL       * no, do nothing
.
          MOVE      AADMNO,PURNO
          MOVE      PURNO,KEY8
          CALL      RDAPRAM1
          IF        OVRCD = 0
            CALL      UPPRAM1               * update Pre-Admission Master file
            MOVE      AADMNO,PVIBILL
            MOVE      ZEROUR,PURNO
            CALL      PNMP0000              * post NMPI Number
          ENDIF
          MOVE      ZEROUR,PURNO
.
. set Ok! flag
.
PADM9000  MOVE      ZERO,EXIT           * everything is OK!
.
PADM9999  RETURN
+
.*********************************************************************
.*                  PNZB0000                    
.*        Maintain all the files for the NZ Billing Changes
.*********************************************************************
PNZB0000  COMPARE   ONE,PTCNUCRD
          GOTO      PNZB9999 IF NOT EQUAL   * not using card information
.
          PACK      KEY5,CODECL,ACLAIM
          CALL      RDCODE1
          PACK      KEY5,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
          SCAN      ANSE,KEY5
          IF        !@EQUAL
            MOVE      SP3,PTMXCXMP          * should be no exemption code
          ENDIF
.
          MOVE      AADMNO,PTVKBILL         * visit number
          MOVE      PTVKBILL,KEY8           * key
          CALL      RDPTVKC1
          IF        OVRCD = ZERO
            MOVE      "2",FORM1             * before change audit
            CALL      AVKC0000              * write audit record
            MOVE      PTMXCARD,PTVKCARD     * card number
            MOVE      PTMXCEXP,PTVKCEXP     * card expiry date
            MOVE      PTMXCXMP,PTVKCXMP     * exemption code
            MOVE      PTMXFMLY,PTVKFMLY     * family id
            MOVE      ACLAIM,PTVKCOMP       * claim code
            CALL      UPPTVKC1              * update record
            MOVE      THREE,FORM1           * after change audit
            CALL      AVKC0000              * write audit record
          ELSE
            MOVE      PTMXCARD,PTVKCARD     * card number
            MOVE      PTMXCEXP,PTVKCEXP     * card expiry date
            MOVE      PTMXCXMP,PTVKCXMP     * exemption code
            MOVE      PTMXFMLY,PTVKFMLY     * family id
            MOVE      ACLAIM,PTVKCOMP       * claim code
            CALL      WRPTVKC1              * write record
            MOVE      ONE,FORM1             * add audit
            CALL      AVKC0000              * write audit record
          ENDIF
.
.         maintain PATKWCFD file
.
          COMPARE   ONE,ASTAT               * pre-admission ?
          GOTO      PNZB9999 IF NOT EQUAL   * no, don't update the file
.
          CALL      OPFI0000                * open correct file
          BRANCH    EXIT,PNZB0700           * file not there
.
          UNPACK    SP30,PTKWCARD,PTKWURNO  * initialize to blanks
.
          MATCH     SP20,PTVKCARD           * do we have a card number ?
          GOTO      PNZB0500 IF EQUAL       * no, special case
.
          CMATCH    ANSC,PTVKCARD           * valid card ?
          GOTO      PNZB0700 IF NOT EQUAL   * no.
          MOVE      PTVKCARD,PTKWCARD       * yes, set card number
          MOVE      SP8,PTKWURNO            * no U/R Number
          GOTO      PNZB0600
.
PNZB0500  MATCH     ZEROUR,AURNO            * do we have a U/R Number ?
          GOTO      PNZB0700 IF EQUAL       * no, don't post anything
.
          MOVE      SP20,PTKWCARD           * no card number
          MOVE      AURNO,PTKWURNO          * U/R Number
.
PNZB0600  PACK      KEY28,PTKWCARD,PTKWURNO
          CALL      RDPTKWC1                * read kiwicard file
          IF        OVRCD = ZERO
            MOVE      ADYHOSP,PTKWVISI      * set the value
            MOVE      PTMIPVIS,PTKWVISI     * set the value
            CALL      UPPTKWC1              * update value
          ELSE 
            MOVE      ADYHOSP,PTKWDAYS      * number of days
            MOVE      PTMIPVIS,PTKWVISI     * number of visits
            MOVE      SP20,PTKWSPAR         * spare
            CALL      WRPTKWC1              * write new record
          ENDIF
PNZB0700  CLOSE     PATKWCA1
.
.         see if to maintain the PATVCHFD file
.
          PACK      KEY28,PTKWCARD,PTKWURNO,SP30
          MATCH     KEY28,SP30
          GOTO      PNZB9999 IF EQUAL       * nothing to audit
.
          IF        ORIGDAYS <> ADYHOSP | ORIGVISI <> PTMIPVIS
            CALL      IBACLOCK
            MOVE      PTKWCARD,PTVCCARD     * card number
            MOVE      PTKWURNO,PTVCURNO     * event number
            PACK      PTVCDATE,CCC,CYY,CMM,CDD
            REP       " 0",PTVCDATE
            MOVE      CTIMEIS,PTVCTIME
            MOVE      PORT,PTVCPORT
            MOVE      CHOSINDX,PTVCHOSP
            MOVE      PASSCODE,PTVCOPER
            ASSIGN    (ADYHOSP-ORIGDAYS),PTVCDCHG  * amount days changed
            ASSIGN    (PTMIPVIS-ORIGVISI),PTVCVCHG * amount visits changed
.
            PACK      KEY48,PTVCCARD,PTVCURNO,PTVCDATE,PTVCTIME:
                            PTVCPORT,PTVCHOSP
            OPEN      PATVCHA1,"patvchaf"
            CALL      RAPTVCH1
            IF        OVRCD = 1
              CALL      WRPTVCH1
            ENDIF
            CLOSE     PATVCHA1
          ENDIF
.
PNZB9999  RETURN
+
.*********************************************************************
.*                  AVKC0000                    
.*        Write audit record for PATVKCFD      
.*********************************************************************
AVKC0000  BRANCH    PTCNVKCA,AVKC9999       * audits not on
          OPEN      PATAUDVK,"pataudvk"
          COMPARE   FIVE,FORM1
          GOTO      AVKC5000 IF EQUAL       * delete before change audit
.
          COMPARE   THREE,FORM1
          GOTO      AVKC1000 IF EQUAL       * after change audit
.
          PACK      PTVKAUDD,CCC,CYY,CMM,CDD
          REP       " 0",PTVKAUDD
          MOVE      CTIMEIS,PTVKAUDT
.
AVKC1000  MOVE      PORT,PTVKAUDP
          MOVE      FORM1,PTVKAUDR
          REP       "1A2B3C4D",PTVKAUDR
          MOVE      ONE,PTVKAUDS
          MOVE      PASSCODE,PTVKAUDO
.
          PACK      KEY19,PTVKAUDD,PTVKAUDT,PTVKAUDP,PTVKAUDR
          CALL      AWPTVKC
          CLOSE     PATAUDVK
          GOTO      AVKC9999
.
.         delete before change audit
.
AVKC5000  MOVE      ANSB,PTVKAUDR
          PACK      KEY19,PTVKAUDD,PTVKAUDT,PTVKAUDP,PTVKAUDR
          CALL      ADPTVKC
          CLOSE     PATAUDVK
.
AVKC9999  RETURN
+
.***************************************************************************
. Update Axe file                                                     
.***************************************************************************
UPAXE000  MATCH     ZEROUR,PURNO  
          IF        @EQUAL
            MOVE      PTPNNMPI,PTAXNRIC
          ELSE
            MOVE      PTNINMPI,PTAXNRIC
          ENDIF
.
          MOVE      AADMNO,PTAXADMN 
.
. write/update guarantor details
.
          PACK      KEY8,PTAXADMN,SP8
          CALL      RAPTAXE1
          IF        OVRCD = 0
            CALL      UPPTAXE1                   * record exists update
          ELSE
            CALL      WRPTAXE1                   * record does not exist, write
          ENDIF   
.
UPAXE999  RETURN
+
. *****************************************************************************
. * OPFI0000 : Open the appropriate kiwicard file                             *
. *****************************************************************************
OPFI0000  PACK      XDATE,ADATE,SP8
.
          MATCH     SP8,XDATE                * check if we have a date
          IF        @EQUAL
            PACK      XDATE,CCC,CYY,CMM,CDD
            REP       "0 ",XDATE
          ENDIF
.
          UNPACK    XDATE,CCENT,CYEAR,KEY4
          MATCH     PTCNBCUT,KEY4
          IF        ! @LESS
            MOVE      CYEAR,FORM2            * year of kiwicard
          ELSE
            MOVE      CYEAR,FORM2
            SUB       ONE,FORM2              * calculate start of kiwicard year
            IF        FORM2 < 0
              MOVE     "99",FORM2            * allow for the year 2000
            ENDIF
          ENDIF
.
          PACK      CFNAME,KWCFIL,FORM2      * name of kiwicard file
          REP       " 0",CFNAME
.
          MOVE      ZERO,OVRCD               * assume file exists
          TRAP      OVERCOND IF IO            * trap for error openning file
          OPEN      PATKWCA1,CFNAME           * open kiwicard file
          TRAPCLR   IO
          BRANCH    OVRCD,OPFI9000            * open failed
.
          MOVE      ZERO,EXIT
          GOTO      OPFI9999
.
OPFI9000  MOVE      ONE,EXIT
.
OPFI9999  RETURN
+
.***************************************************************************
.*  PPMI0000  :  Post the PMI details                                      *
.***************************************************************************
PPMI0000  MATCH     ZEROVISN,AADMNO           * Only do this if by admission#
          GOTO      PPMI9999 IF EQUAL
.
          CALL      IBACLOCK                * set up patients age
          PACK      AGEDATE,CCC,CYY,CMM,CDD
          REP       " 0",AGEDATE
          CALL      CALCAGE 
          MOVE      PSAGEYRS,PSAGE
.
......... DISPLAY   *P1:24,*EL,*V2LON,"***  Posting Master Details  ***"
.
          COMPARE   THREE,PSTAT             * Master not yet allocated ?
          GOTO      PPMI6000 IF EQUAL       * yes
.
          MATCH     ZEROUR,PURNO            * U/R=0 ?
          GOTO      PPMI6000 IF EQUAL       * yes
.
          CALL      PMIA0000                * update PMI Audit file
.
          MOVE      SP8,PTMX3BEX
          PACK      KEY8,PURNO,SP10
          CALL      RDAMAST1
          CALL      UPMAST1                 * update Master with Latest
          CALL      RAPMPX21                * Read PMI Extn.2              I900
          IF        OVRCD = 0 
            CALL      UPPMPX21              * Update PMI Extn.2          * I900
          ELSE                                                           * I900
            MOVE      PURNO,PMPXURNO
            CALL      WRPMPX21              * Write PMI Extn.2           * I900
          ENDIF                                                          * I900
          MOVE      PTMXLS,SAVLEGST         * save for posting (srf 611204)
          MOVE      PTMXLSDT,SAVLSDAT       
.
          MOVE      AADMNO,PVIBILL
.
          IF        PCEASE=ONE
            MOVE      AADMNO,DIM8
            PROC      PATDEATH                * update files if patient dead
            MOVE      DIM8,KEY8
            CALL      RDMISS1      
          ENDIF
.
.         Check if there has been a change of address
.
          CALL      CHAD0000                * change of addess ?
          COMPARE   ONE,CHGADD
          GOTO      PPMI2000 IF NOT EQUAL   * no
.
. If this is the first change for today, write the previous address
. to the Previous Address file
.
          OPEN      PATPA1A1,"patpa1af"
          CALL      UPAD0000
.
. Update the surname file
.
PPMI2000  CLOSE     PATPA1A1
.
          MOVE      ZERO,CSALIAS            * assume dont save old surn as alias
          LOAD      CSALIAS,KEEPOLAL,TWO    * set csalias=2 if want to save alia
          MOVE      BKREBOOK,ADMISNO        * save the booking number
          CALL      OPSU0000                * open surname file
          OPEN      CONTROLF,"controlf"
          CALL      UPDSUR                  * Update any name changes (PATCOMN2)
          CLOSE     CONTROLF
          CALL      CLSU0000                * close surname file
          MOVE      ADMISNO,BKREBOOK        * restore the booking number
.
. Post the changes to the audit file if necessary
.
          BRANCH    CAUDM,PPMI2500          * audits turned on?
          MOVE      ANSB,ACTION
          CALL      WRMAUD
          MOVE      ANSCM,ACTION
          CALL      AMSV0000                * save Master file vars.
          CALL      WRMAUD
.
PPMI2500  MATCH     ZEROVISN,AADMNO
          GOTO      PPMI9000 IF EQUAL
.
PPMI3000  CALL      PRAV0000                * save keyin-ed variables
          MOVE      AADMNO,PKADMN
          MOVE      PKADMN,KEY8
.
.         restore SFORMATted variables after opening patre1af
.
          MOVE      SPKADD1,PKADD1
          MOVE      SPKADD2,PKADD2
          MOVE      SPKSUBR,PKSUBR
          MOVE      SPKPOST,PKPOST
          MOVE      SPKTELP,PKTELEP
          MOVE      SPKTELB,PKTELEB
          MOVE      SPKRELP,PKRELP
.
          MATCH     SP70,PKNAME             * if no name don't write a record
          GOTO      PPMI4000 IF EQUAL
.
          CALL      RDARESP1
          BRANCH    OVRCD,PPMI3500
          CALL      UPRESP1
          GOTO      PPMI9000
.
PPMI3500  CALL      WRRESP1
          GOTO      PPMI9000
.
PPMI4000  CALL      RDRESP1
          BRANCH    OVRCD,PPMI9000
          CALL      DERESP1
.
. updating pre-admission data
.
PPMI6000  MOVE      AADMNO,KEY8
          MOVE      AADMNO,PURNO            * Pram use AADMNO as PURNO
.
          CALL      RDAPRAM1
          CALL      UPPRAM1
.
          MOVE      ZEROUR,PURNO
.
. Update the Surname Index File if necessary
.
          MOVE      ZERO,CSALIAS            * assume dont save old surn as alias
          LOAD      CSALIAS,KEEPOLAL,TWO    * set csalias=2 if want to save alia
          MOVE      BKREBOOK,ADMISNO        * save the booking number
          CALL      OPSU0000                * open surname file
          OPEN      CONTROLF,"controlf"
          CALL      UPDSUR                  * update any name changes (PATCOMN2)
          CALL      CLSU0000                * close surname file
          CLOSE     CONTROLF
          MOVE      ADMISNO,BKREBOOK        * restore the booking number
.
          MOVE      AADMNO,PKADMN
          MOVE      PKADMN,KEY8
.
. Handle Person Responsible for Account file (P.R.A)
. Don't post P.R.A details for pre-admission bookings yet.
.
          BRANCH    OPTION,PPMI9000,PPMI6500,PPMI6500,PPMI6500,PPMI9000
.
PPMI6500  MATCH     SP70,PKNAME             * If no name don't write a record
          GOTO      PPMI8000 IF EQUAL
.
          CALL      RDARESP1
          BRANCH    OVRCD,PPMI7000
          CALL      UPRESP1
          GOTO      PPMI9000
.
PPMI7000  CALL      WRRESP1
          GOTO      PPMI9000
.
PPMI8000  CALL      RDRESP1
          BRANCH    OVRCD,PPMI9000
          CALL      DERESP1
.
PPMI9000  COMPARE   ONE,PTCNICAD            * using Current address?
          GOTO      PPMI9999 IF NOT EQUAL   * no
          CALL      PTUPD000                * yes, write to Current Address file
.
PPMI9999  RETURN
+
.***************************************************************************
.*  UPAD0000 :  Update Previous Address File                               *
.***************************************************************************
UPAD0000  OPEN      PATPA1A1,"patpa1af"
          PACK      PADATE,CCC,CYY,CMM,CDD
          REP       " 0",PADATE
          CLOCK     TIME,PATIME
.
          PACK      KEY24,PURNO,PADATE,PATIME
          CALL      RDPADD1
          COMPARE   ZERO,OVRCD
          GOTO      UPAD9999 IF EQUAL
.
          MOVE      PURNO,PAURNO
          MOVE      XSPADD1,PAADD1
          MOVE      XSPADD2,PAADD2
          MOVE      XSPSUBRB,PASUBR
          MOVE      XSPADD4,PAADD4
          MOVE      XSPPOST,PAPOST
          MOVE      XSPTELEP,PATELEP
          MOVE      XSPTELEB,PATELEB
          MOVE      XSPCELL,PTPAMOBL
          MOVE      XSPDOR,PTPADOR
          PACK      PTPAEMAL,SP70,SP70
          MOVE      XSPOSMS,PTPAOSMS
          MOVE      SP70,PTPACDTE
          MOVE      SP70,PTPACTIM
          MOVE      SP70,PTPAWEBC
          MOVE      SP70,PTPALUPD
          MOVE      SP70,PTPALUPT
          MOVE      SP70,PTPAWEBU
          MOVE      SP70,PTPASPAR 
.
          CALL      WRPADD1
.
UPAD9999  RETURN
.***************************************************************************
.*  CHAD0000 :  Check for a change in address                              *
.***************************************************************************
CHAD0000  MOVE      ZERO,CHGADD              * assume no change
.
          MATCH     PADD1,XSPADD1            * change in address line 1 ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes. Post to previous add. file
.
          MATCH     PADD2,XSPADD2            * change in address line 2 ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes. Post to previous add. file
.
          MATCH     PSUBRB,XSPSUBRB          * change in suburb ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes. Post to previous add. file
.
          MATCH     PADD4,XSPADD4            * change in address line 4 ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes Post to previous add. file
.
          MATCH     PPOST,XSPPOST            * change in postcode ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes. Post to previous add. file
.
          MATCH     PTELEP,XSPTELEP          * change in private telephone ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes. Post to previous add. file
.
          MATCH     PTELEB,XSPTELEB          * change in business telephone ?
          GOTO      CHAD8000 IF NOT EQUAL    * No
.
          MATCH     PTMXCELL,XSPCELL         * change in Cellular telephone ?
          GOTO      CHAD8000 IF NOT EQUAL    * No
.
          MATCH     PTMXOSMS,XSPOSMS         * Change in Opt out of SMS ?
          GOTO      CHAD8000 IF NOT EQUAL    * No
.
          IF        PTCNDORP=1
            MATCH     PTMXDOFR,XSPDOR        * change in DOR ?
            GOTO      CHAD9999 IF EQUAL      * No
          ELSE
            GOTO      CHAD9999               * there was no change
          ENDIF
.
CHAD8000  MOVE      ONE,CHGADD               * change of address
.
CHAD9999  RETURN
+
.****************************************************************************
.*  AMSV0000  :  Subroutine to save master variables                        *
.****************************************************************************
AMSV0000  MOVE      PMICRO,SPMICRO
          MOVE      PUSR1,SPUSR1
          MOVE      PUSR2,SPUSR2
          MOVE      PUSR3,SPUSR3
          MOVE      PUSR4,SPUSR4
          MOVE      PUSR5,SPUSR5
          MOVE      PUSR6,SPUSR6
          MOVE      PUYN1,SPUYN1
          MOVE      PUYN2,SPUYN2
          MOVE      PUYN3,SPUYN3
.
          MOVE      PURNO,SPURNO
          MOVE      PTITL,SPTITL
          MOVE      PSNAME,SPSNAME
          MOVE      PGNAME,SPGNAME
          MOVE      PPSNAME,SPPSNAME
          MOVE      PSMOK,SPSMOK
          MOVE      PSEX,SPSEX
          MOVE      PMSTAT,SPMSTAT
          MOVE      PBDATE,SPBDATE
          MOVE      PSAGE,SPSAGE
          MOVE      PCONT,SPCONT
          MOVE      PREG,SPREG
          MOVE      PTYPE,SPTYPE
          MOVE      POCCUP,SPOCCUP
          MOVE      PMEDI,SPMEDI
          MOVE      PPENNO,SPPENNO
          MOVE      PPNDTE,SPPNDTE
          MOVE      PREPAT,SPREPAT
          MOVE      PSMOK,SPSMOK
          MOVE      PCHGDTE,SPCHGDTE
.
          MOVE      PNKNAME,SPNKNAME
          MOVE      PNKADD1,SPNKADD1
          MOVE      PNKADD2,SPNKADD2
          MOVE      PNKSUBR,SPNKSUBR
          MOVE      PNKADD4,SPNKADD4
          MOVE      PNKPOST,SPNKPOST
          MOVE      PNKTELP,SPNKTELP
          MOVE      PNKTELB,SPNKTELB
          MOVE      PNKRELP,SPNKRELP
.
          CALL      PRAV0000                * Person Responsible A/C variables
.
AMSV1000  MOVE      PADD1,XSPADD1
          MOVE      PADD2,XSPADD2
          MOVE      PSUBRB,XSPSUBRB
          MOVE      PADD4,XSPADD4
          MOVE      PPOST,XSPPOST
          MOVE      PTELEP,XSPTELEP
          MOVE      PTELEB,XSPTELEB
          MOVE      PTMXCELL,XSPCELL
          MOVE      PTMXDOFR,XSPDOR
          MOVE      PMPXRHC1,XSPREGP
          MOVE      PMPXRH1G,XSPGPPC
          MOVE      PMPXR1GC,XSPGPPT
          MOVE      PTMXOSMS,XSPOSMS
.
AMSV9999  RETURN
+
.**************************************************************************
.*  PMIA0000  :  Update PMI Audit file                                    *
.**************************************************************************
PMIA0000  COMPARE   ZERO,CHGUR
          GOTO      PMIA1000 IF EQUAL
          MOVE      THREE,DETNTREC
.
          PACK      PUSR1,PUSR1,SP3
          MATCH     SP3,PUSR1
          IF        !@EQUAL
            MOVE      SP20,TDESC
            MOVE      "P1",DIM2
            PACK      KEY5,DIM2,PUSR1
            CALL      RDCODE1
          ENDIF
            
PMIA1000  COMPARE   ONE,CPMIAD
          GOTO      PMIA9999 IF NOT EQUAL
.
          COMPARE   ZERO,CHGUR
          GOTO      PMIA9999 IF EQUAL
.
          OPEN      PATURAD1,"paturadf"
          OPEN      PATURAD2,"paturadf"
.
          PACK      URDATE,CCC,CYY,CMM,CDD
          REP       " 0",URDATE
          MOVE      PURNO,URURNO
          MOVE      THREE,URSYST
.
          BRANCH    CHGUR,PMIA3000
.
.        Insert mode
.
          MOVE      ANSA,URRTYPE
          MOVE      SP8,PCHGDTE
.
          PACK      KEY17,URRTYPE,URDATE,URURNO
          CALL      WRURAD1
          CLOSE     PATURAD1
          GOTO      PMIA9999
.
.        Change Mode
.
PMIA3000  MOVE      ANSC,URRTYPE
.
          PACK      KEY17,URURNO,URRTYPE,Z17
          MOVE      URDATE,PCHGDTE
.
.         See if a change record already exists.
.
          CALL      RDSURAD2                  * position on last record
          CALL      RDPURAD2                  * read last record
          BRANCH    OVRCD,PMIA5000
          MATCH     PURNO,URURNO
          GOTO      PMIA5000 IF NOT EQUAL
          MATCH     ANSC,URRTYPE
          GOTO      PMIA5000 IF NOT EQUAL
.
.         We have found the last change record. Update with latest information
.
          MOVE      PCHGDTE,URDATE
          MOVE      THREE,URSYST
.
          CALL      UPURAD2                  * update on 2nd index
.
          CLOSE     PATURAD1
          CLOSE     PATURAD2
          GOTO      PMIA9999
.
.         Write a change record. We repack the date of change because at the
.         moment the I/O include changes the value of URDATE on a read (whether
.         or not it is successful
.
PMIA5000  PACK      URDATE,CCC,CYY,CMM,CDD        * restore current details
          REP       " 0",URDATE
.
          MOVE      ANSC,URRTYPE
          MOVE      PURNO,URURNO
          MOVE      THREE,URSYST
.
          PACK      KEY17,URRTYPE,URDATE,URURNO
          CALL      RDURAD1
          BRANCH    OVRCD,PMIA7000
          GOTO      PMIA8000
.
PMIA7000  CALL      WRURAD1
.
PMIA8000  CLOSE     PATURAD1
          CLOSE     PATURAD2
.
PMIA9999  RETURN
.
.
.
.
.
.
.         INC       PATDADIO/INC
.         INC       PATCSLIO/INC
.         INC       PATUNAIO/INC
.         INC       WATTR1IO/INC
.         INC       MEHLEGIO/INC
.         INC       PATRCAIO/INC
.         INC       PATNOBIO/INC
.         INC       PATIPEIO/INC
.         INC       PATACHIO/INC
.         INC       PATNHHIO/INC
.         INC       PATAA1IO/INC
.         INC       PATNUMIO/INC
.         INC       NHOSPDAY
.         INC       PATDAYUP
.         INC       PATPNIIO/INC
.         INC       PATDAYIO/INC
.         INC       PATSTAIO/INC
.
.
.
.
..
.
          INC       PATDADIO/INC
          INC       PATCSLIO/INC
          INC       PATUNAIO/INC
          INC       WATTR1IO/INC
          INC       MEHLEGIO/INC
          INC       PATRCAIO/INC
          INC       PATNOBIO/INC
          INC       PATIPEIO/INC
          INC       PATACHIO/INC
          INC       PATNHHIO/INC
          INC       PATAA1IO/INC
          INC       PATNUMIO/INC
          INC       NHOSPDAY
          INC       PATDAYUP
          INC       PATPNIIO/INC
          INC       PATDAYIO/INC
          INC       PATSTAIO/INC
          INC       CLPATMAS
          INC       CLPMSPX2                * Clear Master Extn.2          I900
          INC       CLPATMIS
          INC       GENANVIS
          INC       PATPA1IO/INC
          INC       PATVCHIO/INC
          INC       PATKWCIO/INC
          INC       PATVKCIO/INC
          INC       PATAXEIO/INC
......... INC       KYMTACOD
......... INC       PATI9SKY
          INC       PATICOIO/INC
          INC       PATCADST
.......   INC       DONORDET
          INC       PATCA1IO/INC
          INC       PATICDIO/INC
.
WRSDN000
 RETURN
.
.
 XIF
ENDPROC1  ENDPROC
