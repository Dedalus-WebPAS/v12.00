.*****************************************************************************
.* System         : Medical Records                                          *
.* Program        : FIXMRVIS                                                 *
.* Desc           :                              .                           *
.*****************************************************************************
.* Date           : 24/05/2002                                               *
.* Author         : Pat Dirito                      SRF 22611                *
.* Function       : This program will write MR Visit Link Records where      *
.*                : visits are found to not have a medical record found.     *
.* Modifications  :                                                          *
.*****************************************************************************
.* V10.08.01 03/05/2016  Jill Parkinson  TSK 0817368         
.*           Fixed key17 to key20 for mrtmasaf and renamed program
.* V9.08.01  31/01/2007  Peter Vela               CAR 127930
.*           Recompled for MRTCONFD
.* V9.04.02  29/04/2005  Peter Vela               CAR 55214
.*           Recompiled for MRTCONFD
.* V9.02.03  18/12/2003 Peter Vela                CAR 43134
.*           Recompiled for MRTCONFD
.* V9.02.02  12/12/2002 Pat Dirito                SRF 34349
.*           Removed checking of MRCNSTAT against medical record
.*
.*****************************************************************************
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       MRTMASFD/INC
          INC       MRTVISFD/INC
          INC       PATVISFD/INC
          INC       MRTCONFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
RECNUM    FORM      8
PRGID     INIT      "FIXMRVIS"
PRGNAM    INIT      "Create MR Visit Link Records."
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000         * proceed with clean up
.
ML1000    CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,ML2000:          * yes
                          ML0100:          * no
                          ML0100           * cancel
.
ML2000    CALL      PROC0000               * process
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          OPEN      MRTMASA1,"mrtmasaf"
          OPEN      MRTMASA2,"mrtmasaf"
          OPEN      MRTVISA1,"mrtvisaf"
          OPEN      MRTVISA2,"mrtvisaf"
          OPEN      PATVISA1,"patvisaf"
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,SIXTY;*84,MRCNHLOC,*88,MRCNRCTY,*108,MRCNSTAT
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run clean-up
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                                                                        *
.**************************************************************************
PROC0000  DISPLAY   *P1:24,*EL,"Removing redundant records from mrtvisaf..."
          MOVE      ZERO,RECNUM
.
          PACK      KEY8,SP70          * Clean up MRTVISAF delete records
PROC1000  CALL      RSMRVS1            * that no longer have a medical record
PROC1100  CALL      RKMRVS1
          BRANCH    OVRCD,PROC2000
.
          PACK      KEY10,MRVSMKEY,SP70
          CALL      RAMRMAS2
          COMPARE   ZERO,OVRCD
          GOTO      PROC1100 IF EQUAL 
.
          PACK      KEY8,MRVSVSNO,SP70
          CALL      DEMRVS1
.
          ADD       ONE,RECNUM
          IF        RECNUM%100=0
            DISPLAY       *P45:24,*V2LON,RECNUM
          ENDIF
          GOTO      PROC1000
.
PROC2000  DISPLAY   *P1:24,*EL,"Linking Visits to Medical Records..."
          MOVE      ZERO,RECNUM
.
          PACK      KEY8,SP70       
          CALL      RSPTVIS1              
PROC3000  CALL      RKPTVIS1
          BRANCH    OVRCD,PROC9999
.
          IF        PVITYPE=9     
            MATCH   " 1",PVISYST       * If other and Extra Visit Type=1
            GOTO    PROC3000 IF NOT EQUAL
            GOTO    PROC4000
          ENDIF            
.
          IF        PVITYPE<1|PVITYPE>3  
            GOTO      PROC3000         * Not A&E, OT Patient or INP Patient
          ENDIF 
.
PROC4000  PACK      KEY8,PVIBILL,SP70  * Check if they have a rec on mrtvisaf
          CALL      RAMRVS1            
          COMPARE   ZERO,OVRCD
          GOTO      PROC3000 IF EQUAL 
.
          PACK      KEY20,PVIURNO,Z70
          CALL      RSMRMAS1       * Read Medical Record Master file get last 
PROC5000  CALL      RPMRMAS1       * Current Medical Record
          BRANCH    OVRCD,PROC3000   
.
          MATCH     PVIURNO,MRMAURNO       * Check UR
          GOTO      PROC3000 IF NOT EQUAL
.
          MATCH     MRCNHLOC,MRMAHLOC      * Home Location
          GOTO      PROC5000 IF NOT EQUAL
.
          MATCH     MRCNRCTY,MRMADOTY      * Document Type 
          GOTO      PROC5000 IF NOT EQUAL
.
..          MATCH     MRCNSTAT,MRMASTAT      * Status if not equal read next MR
..          GOTO      PROC5000 IF NOT EQUAL
.
.   Most current medical record found now write to mrtvisaf
. 
          MOVE      PVIBILL,MRVSVSNO       * Visit No
          MOVE      MRMAKEY,MRVSMKEY       * Medical Record Unique Key
          MOVE      SP70,MRVSSPAR          * Spare Variable
          PACK      KEY8,MRVSVSNO,SP70
          CALL      RAMRVS1            
          IF        OVRCD=1
            CALL      WRMRVS1       * Write record
          ENDIF 
.
          ADD       ONE,RECNUM
          IF        (RECNUM%100)=0
            DISPLAY       *P45:24,*V2LON,RECNUM
          ENDIF
.
          GOTO      PROC3000        * Repos and read next record
.
PROC9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       MRTMASIO/INC
          INC       MRTVISIO/INC
          INC       PATVISIO/INC
