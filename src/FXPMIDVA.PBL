.*****************************************************************************
.* System    :   Patient Management                                          *
.* Program   :   FXPMIDVA                                                    *
.* Desc      :   Fixit for moving  (DVA number) into Concession              *
.*               Card file.                                                  *
.*****************************************************************************
.* Date      :   08/08/2007                                                  *
.* Author    :   Steve Armstrong    CAR 136547                               *
.* Function  :   This program will loop through patma1af and for every       *
.*               record with a DVA number (non-blank prepat), a record       *
.*               will be written to the health concession card table         *
.*               (pmsccdaf), if one doesn't already exist.                   *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       PATMA1FD/INC
          INC       PMSCCDFD/INC
          INC       PATCODFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
CODE      DIM       2
COUNTER   FORM      8
.
DIM4      DIM       4
.
FMON      FORM      2
FYEAR     FORM      4
.
.
. PROGRAM CONSTANTS
. -----------------
.
CATLOWCT  INIT      "ct"
.
.
PRGID     INIT      "FXPMIDVA"
PRGNAM    INIT      "Fixit for PMI DVA Number"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with fixit
.
MAIN1000  CALL      KCOD0000               * get concession card type code
          BRANCH    EXIT,MAIN0100          * nothing/exitchar entered
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      PROC0000               * process
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmsccdaf";
          OPEN      PMSCCDA1,"pmsccdaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          MOVE      ONE,CNEWDS
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run fixit                               *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               KCOD0000              Called by: MAIN0000   *
.*         Get the user to select the category "ct" code to be used          *
.*         for pension number.                                               *
.* Returns:  EXIT  0 = Valid code entered                                    *
.*                 1 = Nothing entered or exitchar entered                   *
.*****************************************************************************
.
KCOD0000  DISPLAY   *P1:10,*EF,"Concession Card Type code:"
.
          MOVE      TWENTY8,ECOL                 * set keyin column
          MOVE      TEN,EVERT                    * set keyin row
          MOVE      CATLOWCT,CODE                * set category "ct"
          MOVE      SP3,CKYIDEF3                 * set blank default
          MOVE      ZERO,CKYIMAND                * set non-mandatory
.
          CALL      PATCODKY                     * get code for pension number
          BRANCH    EXIT,KCOD9100:               * nothing entered
                         KCOD9100                * exitchar input
.
.         A valid code has been input, so check that it has indicator 1
.         set to "3" (DVA card).
.
          MATCH     "3",TCINDC1                  * pension card code ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Concession card type is not for a ":
                      "pension card.  ";
            CALL      HITENTER
            GOTO      KCOD0000
          ENDIF
.
          DISPLAY   *P40:10,TDESC                * display description
          MOVE      ZERO,EXIT
          GOTO      KCOD9999
.
KCOD9100  MOVE      ONE,EXIT
.
KCOD9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*        Loop through the patient master file (patma1af) and for every      *
.*        record where DPPENNO is NOT blank, write a record to the health    *
.*        concession card table (pmsccdaf) using the selected concession     *
.*        card type.                                                         *
.*****************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise counter
.
          MOVE      SP8,KEY8
          CALL      RDSMAST1                     * position at start of file
PROC0500  CALL      RDKMAST1                     * read next record
          BRANCH    OVRCD,PROC9000               * eof - finished
.
          MATCH     SP15,PREPAT                  * blank DVA number ?
          GOTO      PROC0500 IF EQUAL            * yes - ignore record
.
.         This record has a value in pension number, so check if this patient
.         has a pmsccdaf record for the selected concession card type
.
          PACK      KEY19,PURNO,SP20
          CALL      RSPMCCD1                     * position on U/R
PROC1000  CALL      RKPMCCD1                     * read next record
          BRANCH    OVRCD,PROC5000               * eof - no existing record
.
          MATCH     PURNO,PMCDURNO               * same U/R still ?
          GOTO      PROC5000 IF NOT EQUAL        * no - no existing record
.
          MATCH     ACODE,PMCDCTYP               * pension card type ?
          GOTO      PROC0500 IF EQUAL            * yes - get next patient
          GOTO      PROC1000                     * no - get next record
.
.         This patient doesn't have an existing concession card type for
.         pension number, so create a health concession card record in pmsccdaf
.
PROC5000  MOVE      PURNO,PMCDURNO               * load U/R number
          MOVE      ACODE,PMCDCTYP               * load card type (cat ct)
          MOVE      PREPAT,PMCDCNUM              * concession card number
.         CALL      DPEN0000                     * determine pension expiry date
          MOVE      SP8,PMCDEXDT
          CALL      IBACLOCK                     * get current date/time
          PACK      PMCDCDAT,CCC,CYY,CMM,CDD     * load create date
          REP       " 0",PMCDCDAT
          MOVE      CTIMEIS,PMCDCTIM             * load create time
          REP       " 0",PMCDCTIM
          MOVE      "FXPMIDVA  ",PMCDCUID        * load create operator id
          MOVE      SP8,PMCDUDAT                 * load update date
          MOVE      SP8,PMCDUTIM                 * load update time
          MOVE      SP10,PMCDUUID                * load update operator id
          MOVE      SP30,PMCDSPAR
.
          CALL      WRPMCCD1                     * write new record
          ADD       ONE,COUNTER                  * increment counter
.
.         Now clear the DPPENNO and PPNDTE fields on the patma1af record
.
          MOVE      SP20,PREPAT
          CALL      UPMAST1                      * update patma1af record
.
          GOTO      PROC0500                     * get next pmi record
.
.         Processing completed
.
PROC9000  DISPLAY   *P1:24,*EL,*V2LON,COUNTER,*HOFF," records created.  ";
          CALL      HITENTER
.
PROC9999  RETURN
+
.*****************************************************************************
.*                          DPEN0000              Called by: PROC0000        * 
.*        Determine the pension number expiry date (ccyymmdd).               *
.*        First check if there is a pension number expiry date (ccyymm) for  *
.*        the patient and if so, calculate the end day for the month         *
.*        indicated.                                                         *
.* Requires:  PPNDTE - Pension number expiry date from patma1af              *
.* Returns:   PMCDEXDT - Pension number expiry date (ccyymmdd) for pmsccdaf  *
.*****************************************************************************
.
DPEN0000  MOVE      SP8,PMCDEXDT                 * default expiry date to blank .
          MATCH     SP6,PPNDTE                   * pension expiry date blank ?
          GOTO      DPEN9999 IF EQUAL            * yes - finished
.
          REP       " 0",PPNDTE
          UNPACK    PPNDTE,DIM4,DIM2
.
          TYPE      DIM4                         * is year numeric ?
          GOTO      DPEN9999 IF NOT EQUAL        * no - finished
.
          TYPE      DIM2                         * is month numeric ?
          GOTO      DPEN9999 IF NOT EQUAL        * no - finished
.
          MOVE      DIM4,FYEAR
.
.         Check that month is valid
.
          MOVE      DIM2,FMON
          IF        FMON < 1 | FMON > 12
            GOTO      DPEN9999
          ENDIF
.
.         PPNDTE only contains ccyymm, so we need to load pmcdexdt with
.         the end day of the month based on the year and month
.
          BRANCH    FMON,DPEN3000:               * January
                         DPEN1000:               * February
                         DPEN3000:               * March
                         DPEN2000:               * April
                         DPEN3000:               * May
                         DPEN2000:               * June
                         DPEN3000:               * July
                         DPEN3000:               * August
                         DPEN2000:               * September
                         DPEN3000:               * October
                         DPEN2000:               * November
                         DPEN3000                * December
.
.         Month has 28 or 29 days (Feb), so check if the year is a leap year
.         using the following algorithm:
.             if year modulo 400 is 0 then leap
.               else if year modulo 100 is 0 then no_leap
.               else if year modulo 4 is 0 then leap
.               else no_leap
.
DPEN1000  IF        (FYEAR%400)=0
            GOTO      DPEN1200
          ENDIF
.
          IF        (FYEAR%100)=0
            GOTO      DPEN1100
          ENDIF
.
          IF        (FYEAR%4)=0
            GOTO      DPEN1200
          ENDIF

DPEN1100  PACK      PMCDEXDT,PPNDTE,TWENTY8      * non-leap year
          GOTO      DPEN9999
.
DPEN1200  PACK      PMCDEXDT,PPNDTE,TWENTY9      * leap year
          GOTO      DPEN9999
.
.         Month has 30 days
.
DPEN2000  PACK      PMCDEXDT,PPNDTE,THIRTY
          GOTO      DPEN9999
.
.         Month has 31 days
.
DPEN3000  PACK      PMCDEXDT,PPNDTE,THIRTY1
.
DPEN9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       PATCODKY
.
          INC       PATMA1IO/INC
          INC       PMSCCDIO/INC
          INC       PATCODIO/INC
