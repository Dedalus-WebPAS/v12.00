.***************************************************************************
.* System    :   Allied Health System                                      *
.* Program   :   LDALLHDT                                                  *
.* Desc      :   Fixit to populate the allied health history file.         *
.***************************************************************************
.* Date      :   13/02/2007                                                *
.* Author    :   Steve Armstrong                                           *
.* Function  :   This program will accept input of a date range, then      *
.*               subsequently load all allied health audit records for     *
.*               the specified period, into the allied health history file.*
.*               The data will then be available for VINAH extraction.     *
.* Mods      :                                                             *
.***************************************************************************
.* V11.04.02 20/09/2024 Nikitha Bhaskar          TSK 0948566               *
.*           2024-25 Vic health department changes to report VINAH 19 MDS  *
.*           Added SEPT 2024. Added Program IT. Subcutaneous Immunoglobulin*
.*           (SCIg) Infusion Therapy                                       *
.* V11.04.01 25/03/2024 Ebon Clements            TSK 0941763               *
.*           2025 Vic health department changes to report VINAH 19         *
.*           Added JULY2024. Added program EPC                             *
.***************************************************************************
.*       V11.02.02  29/03/2022 Ebon Clements     TSK 0915988               *
.*                  Added PreJulyTest test to SDAT0000 - DOYR2022 VINAH 17 *
.*       V11.02.01  21/03/2022 Ebon Clements     TSK 0915988               *
.*                  2022 VINAH 17 changes                                  *
.***************************************************************************
.*       V11.01.04  02/09/2021 Ebon Clements     TSK 0907466               *
.*                  Added program type VALP - Victorian artificial limb    *
.*                  program                                                *
.*       V11.01.03  16/06/2021 Ebon Clements     TSK 0907716               *
.*                  Dates reset to 1 July 2021 - JULY2021                  *
.*       V11.01.02  30/03/2021 Ebon Clements     TSK 0902602               *
.*                  Load ref in reason and department for contact records  *
.*                  VREC5100 - FRSTLNKK                                    *
.*       V11.01.01  30/03/2021 Ebon Clements     TSK 0902602               *
.*                  2021 Vic health department changes                     *
.*                  2021 Vic health department changes                     *
.*                                                                         *
.*      *****    JULY2021 set to March 2021 for testing     *****          *
.*                                                                         *
.***************************************************************************
.*       V11.00.05  11/05/2020 Ebon Clements     TSK 0891032               *
.*                  Removed 2020 Vic health department changes(Task 088624)*
.*       V11.00.04  11/05/2020 Ebon Clements     TSK 0891032               *
.*                  Clear place holder VINAH 16 fields - LREF0000          *
.*       V11.00.03  08/04/2020 Ebon Clements     TSK 0888624               *
.*                  Added JULY2020 set to May 2020 for extract testing     *
.*       V11.00.02  23/32/2020 Ebon Clements     TSK 0888624               *
.*                  Added referral end date functionality                  *
.***************************************************************************
.*       V11.00.02  23/32/2020 Ebon Clements     TSK 0888624               *
.*                  Added referral end date functionality                  *
.*                  ALHDDCAN, ALHDSRDT and ALHDDCLO                        *
.*       V11.00.01  26/02/2020 Ebon Clements     TSK 0888624               *
.*                  2020/2021 Statutory Health Department changes          *
.*                  Added program type HBD - Home-Based Dialysis           *
.*       V10.15.02  20/11/2019 Ebon Clements     TSK 0872933               *
.*                  Added WARNING - Contacts referral in not accepted      *
.*                  VREC5100                                               *
.*       V10.15.01  08/10/2019 Ebon Clements     TSK 0323579               *
.*                  Added ALHDRSTA to ALLHDTFD                             *
.*       V10.14.04  28/05/2019 Steve Armstrong   TSK 0869966               *
.*                  Mods to display correct "after" record details in      *
.*                  error message (CKES0000 & CKCS0000) when a matching    *
.*                  "before" record cannot be found.                       *
.*                  Also set up same error messages to distinguish between *
.*                  episode and referral in records.                       *
.*       V10.14.03  28/05/2019 Steve Armstrong   TSK 0868837               *
.*                  Mods to default the current value of Episode Ready for *
.*                  Care Flag if the loaded audit value is blank.          *
.*       V10.14.02  17/04/2019 Steve Armstrong   TSK 0868837               *
.*                  Mods to load ALENUDT1 & ALENUTM1 for contacts.         *
.*                  Mods to load ALREUDT2 for referrals.                   *
.*                  Recompiled for changes to ALLHDTFD.                    *
.*       V10.14.01  03/04/2019 Steve Armstrong   TSK 0869966               *
.*                  Mods to use a duplicate referral record to update an   *
.*                  existing allhdtaf record, instead of simply ignoring   *
.*                  the duplicate record.                                  *
.***************************************************************************
.*       V10.13.01  18/10/2018 Steve Armstrong   TSK 0831988               *
.*                  Mods to load encounter service department (ALENSDEP).  *
.*                  04/06/2018 Steve Armstrong   TSK 0851816               *
.*                  2017/2018 Statutory Health Department changes.         *
.*                  - Changes to include new program types (HEN & TPN).    *
.***************************************************************************
.*       V10.11.02  19/12/2017 Steve Armstrong   TSK 0846679               *
.*                  Mods to check if the Referral-In Triage Status is      *
.*                  accepted before defaulting Referral-In data to an      *
.*                  Episode record (VREC5000).                             *
.*       V10.11.01  28/11/2017 Steve Armstrong   TSK 0846679               *
.*                  Mods for Episode records to use triage status where    *
.*                  appropriate to determine if the record has been        *
.*                  accepted and therefore whether it needs to be sent.    *
.***************************************************************************
.*       V10.10.02  22/05/2017 Steve Armstrong   TSK 0836853               *
.*                  Mods to default Episode End Date and End Reason from   *
.*                  the current referral record where the Episode is       *
.*                  closed in both cases, but the fields being loaded are  *
.*                  blank.                                                 *
.*       V10.10.01  02/05/2017 Steve Armstrong   TSK 0833052               *
.*                  Mods for 2017 Statutory changes                        *
.*                  - Added loading of ALRETRGS (Triage Status) and        *
.*                    ALRETRGD (Triage Date).                              *
.***************************************************************************
.*       V10.08.03  06/09/2016 Steve Armstrong   TSK 0825338               *
.*                  Mods to Episode records to check on Priority instead   *
.*                  of Status to determine whether to send the record or   *
.*                  not (Outcome of 98 or 99 should not be sent).          *
.*       V10.08.02  02/04/2016 Steve Armstrong   TSK 0324703               *
.*                  Recompiled for changes to PATURCFD.                    *
.*                  Code changes for changed index on PATURCFD.            *
.*       V10.08.01  30/03/2016 Steve Armstrong   TSK 0815408               *
.*                  Mods to VREC0000 when processing a contact to check if *
.*                  the contact is an add record and only if it is, then   *
.*                  check if the current encounter is cancelled.           *
.***************************************************************************
.*       V10.07.02  11/12/2015 Steve Armstrong   CAR 308300                *
.*                  Mods to process rejected and cancelled episodes in     *
.*                  VREC0000 instead of ignoring these records.            *
.*       V10.07.01  27/11/2015 Steve Armstrong   CAR 324281                *
.*                  Mods to CKES0000 to leave status changes from          *
.*                  cancellation/rejection as update messages instead of   *
.*                  changing them to add messages.                         *
.***************************************************************************
.*       V10.06.02  07/04/2015 Steve Armstrong   CAR 315150                *
.*                  Moved FEPS0000 and associated logic for populating     *
.*                  Referral In Receipt Acknowledgement Date where blank   *
.*                  into an external common routine (VINAHCOM.PBL) for use *
.*                  by the VINAH extract programs as well.                 *
.*       V10.06.01  20/03/2015  Steve Armstrong  CAR 312725                *
.*                  Added initialisation of ALHDCEPR in IENC0000 routine   *
.***************************************************************************
.*       V10.05.02  19/12/2014  Steve Armstrong  CAR 310361                *
.*                  Added missing ALENSTIM field to temp file I/O routines *
.*       V10.05.01  13/10/2014  Steve Armstrong  CAR 305679                *
.*                  Mods when processing contact records to check if the   *
.*                  U/R has been merged or not and if so, to send the      *
.*                  correct U/R for the extract period.                    *
.***************************************************************************
.*       V10.04.07  02/06/2014  Steve Armstrong  CAR 285465                *
.*                  Mods to use Cat zG instead of Cat CG for determining   *
.*                  program type for Referral In records where ALCNDEVP is *
.*                  set to "1" and where Cat zG is set up.                 *
.*       V10.04.06  27/05/2014  Steve Armstrong  CAR 285465                *
.*                  Further mods to the use of Cat zG - shouldn't apply    *
.*                  to Referral In records.                                *
.*       V10.04.05  22/05/2014  Steve Armstrong  CAR 295465                *
.*                  Mods to use Cat zG instead of Cat CG for determining   *
.*                  program type where ALCNDEVP is set to "1".             *
.*       V10.04.04  14/05/2014  Steve Armstrong  CAR 295836                *
.*                  Removed error on load where U/R for referral record    *
.*                  doesn't match when trying to find "Before" record in   *
.*                  CKES0000 (based on audit being triggered by U/R merge  *
.*                  for patient).                                          *
.*                  13/05/2014  Steve Armstrong  CAR 285465                *
.*                  Mods to load ALHDCLID in LREF0000.                     *
.*       V10.04.03  02/05/2014  Steve Armstrong  CAR 298611                *
.*                  Further mods for preload defaults based on user        *
.*                  specification (signed off by STV, BHS and RCH).        *
.*       V10.04.02  01/04/2014  Steve Armstrong  CAR 298611                *
.*                  Further mods to default referral in received date,     *
.*                  and referral in receipt acknowledgement date values.   *
.*                  Also mods to ensure the date referral accepted is not  *
.*                  less than the referral in received date and if it is,  *
.*                  default it to the referral in received date value.     *
.*                  Also mods to ensure that the referral in clinical      *
.*                  referral date is not less than the referral in         *
.*                  received date and if it is, default it to the referral *
.*                  date.                                                  *
.*       V10.04.01  25/03/2014  Steve Armstrong  CAR 298611                *
.*                  Mods to default current living arrangement, patient    *
.*                  usual accommodation type, main carer's relationship,   *
.*                  carer availability, referral in received date and      *
.*                  referral in receipt acknowledgement date values where  *
.*                  the loaded field is blank for Referral In records.     *
.*                  Also added code for contact records to check the       *
.*                  current status and ignore if cancelled.                *
.***************************************************************************
.*       V10.03.11  28/10/2013  Steve Armstrong  CAR 286342                *
.*                  Mods to remove validation for VINAH8 to make the load  *
.*                  generic for all VINAH versions.                        *
.*       V10.03.10  23/09/2013  Steve Armstrong  CAR 273426                *
.*                  Mods to check non-vinah referral flag (alrenvin)       *
.*                  and ignore record is flag is set to "1".               *
.*       V10.03.09  03/09/2013  Steve Armstrong  CAR 287852                *
.*                  Mods to load referral user defined date 1 (alreudt1)   *
.*                  into allhdtaf.                                         *
.*       V10.03.08  12/06/2013  Steve Armstrong  CAR 286297                *
.*                  Mods to load referral preferred site into allhdtaf.    *
.*                  12/06/2013  Steve Armstrong  CAR 286725                *
.*                  Mods to CKES0000 & CKCS0000 routines to match on       *
.*                  specific fields to ensure that the before audit record *
.*                  matches the change audit record.                       *
.*       V10.03.07  27/04/2013  Steve Armstrong  CAR 283700                *
.*                  Mods to check the status of the Before and Change      *
.*                  audit records for episodes to determine how to         *
.*                  handle the record.                                     *
.*       V10.03.06  04/04/2013  Steve Armstrong  CAR 283883                *
.*                  Mods to check the status of the Before and Change      *
.*                  audit records for encounters to determine how to       *
.*                  handle the record.                                     *
.*       V10.03.05  08/03/2013  Steve Armstrong  CAR 282203                *
.*                  Added code when validating an Episode record to check  *
.*                  if the Referral In has a status of "2" (Closed) and    *
.*                  if so, only send the Episode if the Referral In Date   *
.*                  Active field (alredact) is not blank.                  *
.*       V10.03.04  11/02/2013  Steve Armstrong  CAR 281053                *
.*                  Mods to not overwrite the status of an episode record  *
.*                  with the status of the corresponding Referral In       *
.*                  record.                                                *
.*                  08/02/2013  Steve Armstrong  CAR 280973                *
.*                  Mods to not load episodes or contacts where the        *
.*                  Referral In status is "Waiting", "Rejected" or         *
.*                  "Cancelled".                                           *
.*       V10.03.03  07/02/2013  Ebon Clements    CAR 272756                *
.*                  Fixed load of SOP master clinical urgency - VREC1000   *
.*       V10.03.02  10/12/2012  Ebon Clements    CAR 261630                *
.*                  Removed port number from temp file name                *
.*       V10.03.01  04/09/2012  Steve Armstrong  CAR 272756                *
.*                  Major changes to cater for VINAH8.                     *
.***************************************************************************
.*       V10.00.02  28/05/2010  Steve Armstrong  CAR 220289                *
.*                  Mods for allhdtaf.alhdtcdt                             *
.*       V10.00.01  21/04/2010  Steve Armstrong  CAR 220289                *
.*                  Mods to cater for VINAH6 and changes to ALLHDTFD.      *
.***************************************************************************
.*        V9.12.03  30/11/2009  Steve Armstrong  CAR 211325                *
.*                  Mods to load main purpose (allencaf.alenuc34) into     *
.*                  allhdtaf.alhdetyp (Cat zH).                            *
.*        V9.12.02  30/11/2009  Steve Armstrong  CAR 211183                *
.*                  Mods to load program stream (allrefaf.alreuc32) into   *
.*                  allhdtaf.alhdpsit.                                     *
.*        V9.12.01  20/10/2009  Steve Armstrong  CAR 207550                *
.*                  Mods to ignore internal referral related records.      *
.*                  Mods to replace ALREPSIT (not used) with ALRECTYP.     *
.*                  Mods to use ALRESPAR to capture ALREUDT5 & ALRECUID    *
.***************************************************************************
.*        V9.10.01  30/07/2008  Ebon Clements    CAR 167977                *
.*                  Added error so a date range can't be loaded twice      *
.*        V9.09.02  31/10/2007  Steve Armstrong  CAR 153875                *
.*                  Mods to check that a record indicating it is a SACS    *
.*                  master record, is not actually a linked internal       *
.*                  referral (based on previous issue corrected by         *
.*                  CHKLNKRF).                                             *
.*        V9.09.01  09/07/2007  Steve Armstrong  CAR 144772                *
.*                  Mods to load the referral claim code                   *
.***************************************************************************
.*        V9.08.00  19/05/2007  Steve Armstrong  CAR 141196 111005         *
.*                  Mods to load allied health audit records into a        *
.*                  temporary table with a unique index (to avoid P*K when *
.*                  reading backwards using a duplicate index on Oracle).  *
.***************************************************************************
.*        V9.07.01  09/05/2007  Steve Armstrong  CAR 140226                *
.*                  Added RAALHDT1 prior to writing allhdtaf records       *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ALLCONFD/INC
          INC       ALLENCFD/INC
          INC       ALLHDTFD/INC
          INC       ALLREFFD/INC
          INC       ALLRLNFD/INC
          INC       IBASEQFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATMRGFD/INC
          INC       PATURCFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.         Temporary File Definition
.         -------------------------
.
.         Referrals Temp File
.
REFTEMP1  IFILE SQL, FIXED=250, KEY="U1-8"
.                                          
.NAME     TYPE    LENGTH  PHYSICAL  START  DESCRIPTION
.----     ----    ------  --------  -----  -----------
DXCOUNTR  DIM       8        8         1   Unique Counter
.
.         Standard Referral Audit Fields
.
.ALREAUDD DIM       8        8         9   Date of Change
.ALREAUDT DIM       8        8        17   Time of Change
.ALREAUDP DIM       2        2        25   Port
.ALREAUDR DIM       1        1        27   Record Type
.                                            A = Added Record
.                                            B = Before Change
.                                            C = After Change
.                                            D = Deleted Record
.ALREAUDS FORM      1        2        28   Record Status
.                                            1 = Not Printed
.                                            2 = Printed
.ALREAUDO DIM       4        4        30   Operator ID
.
.         Standard Referral fields
.
.ALREURNO DIM       8        8        34   Patient Identifier (U/R Number)
.ALREVISN DIM       8        8        42   Episode Identifier (Visit Number)
.ALREUYN4 DIM       1        1        50   VINAH Referral Flag
.                                            (1=Referral In, 0=Int. Referral)
.ALREDEPT DIM       3        3        51   Department (alldepaf)
.ALRECUID DIM       10       10       54   Web User Id
.ALREUC35 DIM       3        3        64   Patient Carer Residency Status
.                                            (Cat lI)
.ALREUC36 DIM       3        3        67   Patient Carer Availability (Cat lJ)
.ALREUC38 DIM       3        3        70   Patient Living Arrangement (Cat lL)
.ALREUC39 DIM       3        3        73   Patient Usual Accommodation Type
.                                            (Cat lM)
.ALREUC31 DIM       3        3        76   Patient Main Carer's Relationship
.                                          to Patient (Cat lE)
.ALREUC10 DIM       3        3        79   Patient Death Place (Cat lJ)
.ALREDREC DIM       8        8        82   Referral-In Received Date (ccyymmdd)
.ALRESREJ DIM       3        3        90   Referral-In Outcome Rejection Reason
.                                            (Cat rr)
.ALRERCAN DIM       3        3        93   Referral-In Outcome Cancellation
.                                          Reason (Cat LN)
.ALRESTAT DIM       1        1        96   Referral-In Outcome
.                                             0 = On Waiting List
.                                             1 = Active
.                                             2 = Closed
.                                             3 = Inactive
.                                             4 = Cancelled
.                                             5 = Rejected
.ALREPRTY DIM       3        3        97   Referral-In Clinical Urgency Code
.                                            (Cat PR)
.ALREUDT3 DIM       8        8       100   Referral-In Clinical Referral Date
.                                            (ccyymmdd)
.ALREUDT5 DIM       8        8       108   Ref. In Rec. Ack. Date
.ALREDACT DIM       8        8       116   Episode Start Date (ccyymmdd)
.ALREDCLO DIM       8        8       124   Episode End Date (ccyymmdd)
.ALREUYN5 DIM       1        1       132   Episode First Consultancy Flag
.                                            (0=No, 1=Yes)
.ALREUC33 DIM       3        3       133   Episode Completion of Proposed
.                                          Program of Treatment (Cat lG)
.ALREEIOD DIM       8        8       136   Episode Impairment Onset Date
.                                            (ccyymmdd)
.ALREACDD DIM       8        8       144   Episode Advanced Care Plan Documented
.                                          Date (ccyymmdd)
.ALREUDT4 DIM       8        8       152   Episode Care Plan Documented Date
.                                            (ccyymmdd)
.ALREUDT8 DIM       8        8       160   Episode First Appointment Booked
.                                          Date (ccyymmdd)
.ALREUD10 DIM       8        8       168   Episode Hospital Discharge Date
.                                            (ccyymmdd)
.ALREUDT9 DIM       8        8       176   Episode Patient First Notified of
.                                          Appointment Date (ccyymmdd)
.ALRERCLO DIM       3        3       184   Episode End Reason (Cat LL)
.ALREYN10 DIM       1        1       187   Episode Malignancy Flag
.                                            (1 = Yes, 0 = No)
.ALRECTYP DIM       6        6       188   Episode Clinic Type
.ALREEVPR DIM       3        3       194   Episode Event Program (Cat zG)
.ALREPSIT DIM       6        6       197   Preferred Site - Episode Referral
.ALREUDT1 DIM       8        8       203   User Defined Date 1 (CCYYMMDD)
.ALRENVIN DIM       1        1       211   Non-VINAH Referral
.                                            ( 1 = Yes, 0 = No)
.ALRETRGS DIM       3        3       212   Triage Status (Cat ts)
.ALRETRGD DIM       8        8       215   Triage Date (ccyymmdd)
.ALREUDT2 DIM       8        8       223   Patient Ready For Care Date
.                                          (ccyymmdd)
.ALREFTSC DIM       3        3       231   Referral in First Triage Score
.ALREDCAN  DIM      8        8       234   Date Cancelled (CCYYMMDD)
.ALRESRDT  DIM      8        8       242   SACS Date Rejected (CCYYMMDD)
.
.End of Record                       250
.
. Redefine FORM fields from key
. -----------------------------
XCOUNTER  FORM      8
+
.
.
.         Encounters Temp File
.
ENCTEMP1  IFILE SQL, FIXED=187, KEY="U1-8"
.                                          
.NAME     TYPE    LENGTH  PHYSICAL  START  DESCRIPTION
.----     ----    ------  --------  -----  -----------
.DXCOUNTR DIM       8        8         1   Unique Counter
.
.         Standard Encounter Audit Fields
.
.ALENAUDD DIM       8        8         9   Date of Change
.ALENAUDT DIM       8        8        17   Time of Change
.ALENAUDP DIM       2        2        25   Port
.ALENAUDR DIM       1        1        27   Record Type
.                                            A = Added Record
.                                            B = Before Change
.                                            C = After Change
.                                            D = Deleted Record
.ALENAUDS FORM      1        2        28   Record Status
.                                            1 = Not Printed
.                                            2 = Printed
.ALENAUDO DIM       4        4        30   Operator ID
.
.         Standard Encounter fields
.
.ALENVISN DIM       8        8        34   Episode Identifier (Visit #)
.ALENENCT DIM       8        8        42   Contact Number
.ALENCOMP DIM       3        3        50   Contact Account Class (Cat CL)
.ALENHCP  DIM       10      10        53   Contact Professional Group 0
.ALENUHC1 DIM       10      10        63   Contact Professional Group 1
.ALENUHC2 DIM       10      10        73   Contact Professional Group 2
.ALENUHC3 DIM       10      10        83   Contact Professional Group 3
.ALENUHC4 DIM       10      10        93   Contact Professional Group 4
.ALENSDAT DIM       8        8       103   Contact Start Date (ccyymmdd)
.ALENSTIM DIM       8        8       111   Contact Start Time (hh:mm:ss)
.ALENUC34 DIM       3        3       119   Contact Main Purpose (Cat zH)
.ALENUC35 DIM       3        3       122   Contact Session Type (Cat zI)
.ALENUC37 DIM       3        3       125   Contact Present Status (Cat zK)
.ALENUC38 DIM       3        3       128   Contact Delivery Mode (Cat zL)
.ALENUC40 DIM       3        3       131   Contact Delivery Setting (Cat zN)
.ALENUC31 DIM       3        3       134   Contact Phase of Care (Cat zE)
.ALENUC08 DIM       3        3       137   Contact Preferred Death Place
.                                             (Cat zh)
.ALENUC06 DIM       3        3       140   Contact Care Model (Cat zf)
.ALENLINK DIM       8        8       143   Contact Inpatient Flag
.ALENUHC1 DIM       10       10      151   Contact Specialist Care Palliative
.                                          Care Provider
.ALENUC07 DIM       3        3       161   Contact Preferred Care Setting
.                                             (Cat zg)
.ALENUC33 DIM       3        3       164   Contact Event Program (Cat zG)
.ALENRSTA DIM       1        1       167   Contact Record Status
.                                            0=Active, 1=Deleted
.ALENSDEP  DIM      3        3       168   Service Department (Cat CG)
.ALENUDT1 DIM       8        8       171   Contact End Date (ccyymmdd)
.ALENUTM1 DIM       8        8       179   Contact End Time (hh:mm:ss)
.
.End of Record                       187
.
. Redefine FORM fields from key
. -----------------------------
.XCOUNTER FORM      8
+
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ACKNDATE  DIM       8
.
CALCTIME  FORM      6
CATEGORY  DIM       2
CDYSDAYS  FORM      6
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
CDYSYEAR  FORM      2
CMDLINE   DIM       80
COUNTER   FORM      2
CURGENCY  DIM       3
CURRDATE  DIM       8
.
DIM2A     DIM       2
DIM2B     DIM       2
DIM4      DIM       4
DIM8      DIM       8
JULY2022  FORM      1                  * 0 = No pre VINAH 17, 1 = Yes VINAH 17
.
ECOUNTER  FORM      8
ENDDATE   DIM       8
ENDYEAR   FORM      4
ENDMONTH  FORM      2
ERRORCNT  FORM      8
.
FIRSTDAT  DIM       8
FIRSTHR   DIM       2
FIRSTMIN  DIM       2
FIRSTIME  DIM       4
FORM2A    FORM      2
FORM2B    FORM      2
.
HOUR1     FORM      6
HOUR2     FORM      6
.
LASTDATE  DIM       8
LASTHOUR  DIM       2
LASTMIN   DIM       2
LASTTIME  DIM       4
.
MERGEFLG  FORM      1             * Merge Flag
.                                   0 = paturcaf record not found
.                                   1 = paturcaf record found
MINUTE1   FORM      3
MINUTE2   FORM      3
.
PRGMSTRM  FORM      1
PRINAUDD  DIM       8
PRINAUDT  DIM       8
PRINDESC  DIM       50
PRINENCT  DIM       8
PRINVISN  DIM       8
.
RCOUNTER  FORM      8
.
SAVEDATE  DIM       8
SAVEENCT  DIM       8
SAVEFLNK  DIM       8
SAVEOPER  DIM       4
SAVEPORT  DIM       2
SAVERDAT  DIM       8
SAVESTAT  DIM       1
SAVETYPE  DIM       1
SAVEUDT1  DIM       8
SAVEURNO  DIM       8
SAVEUYN4  DIM       1
SAVEVISN  DIM       8
SAVKEY8   DIM       8
SAVKEY18  DIM       18
SAVERIRD  DIM       3 
SAVERIRS  DIM       9 

STATACTN  FORM      1
STATUS    DIM       2
STRTDATE  DIM       8
STRTMON   FORM      4
STRTYEAR  FORM      4
TEMPFILA  DIM       8
TEMPFILB  DIM       8
.
VISITNUM  DIM       8
.
WORKDATE  DIM       8
.
.
. PROGRAM CONSTANTS
. -----------------
CATTS     INIT      "ts"
ERASE     INIT      "iserase "
ISBUILD   INIT      "isbuild "
JULY2021  INIT      "20210701"
JULY2024  INIT      "20240701"
LOWCASEZ  INIT      "z"
PIPE      INIT      "|"
TILDA24   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~"
UKEYA     INIT      " 250 U1-8"
UKEYB     INIT      " 187 U1-8"
.
.
PRGID     INIT      "LDALLHDT"
PRGNAM    INIT      "Load VINAH History"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              MAIN0000                                  *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
          CALL      CREA0000               * create temp files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9000          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with fixit
.
MAIN1000  CALL      REPH0000               * set report header
.
          CALL      SDAT0000               * get start date for extract period
          BRANCH    EXIT,MAIN8000          * nothing entered
.
          CALL      EDAT0000               * get end date for extract period
          BRANCH    EXIT,MAIN8000          * nothing entered
.
          CALL      VDAT0000               * valid date range ?
          BRANCH    EXIT,MAIN8000          * no - input date range again
.
          CALL      CHKS0000               * date range already extracted ?
          BRANCH    EXIT,MAIN8000          * yes - input date range again
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN8000:        * no
                          MAIN8000         * cancel
.
MAIN2000  CALL      CLER0000               * clear temp files
          CALL      LOAD0000               * load temp files
          CALL      PROC0000               * process
.
MAIN8000  CALL      REPT0000               * set report tail
          GOTO      MAIN0100
.
MAIN9000  CALL      KILL0000               * kill temp files
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: MAIN0000  *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"allaudre";
          OPEN      ALLAUDRE,"allaudre"
.
          DISPLAY   *P64:24,"allauden";
          OPEN      ALLAUDEN,"allauden"
.
          DISPLAY   *P64:24,"allhdtaf";
          OPEN      ALLHDTA1,"allhdtaf"
          OPEN      ALLHDTA4,"allhdtaf"
.
          DISPLAY   *P64:24,"allrefaf";
          OPEN      ALLREFA1,"allrefaf"
.
          DISPLAY   *P64:24,"allencaf";
          OPEN      ALLENCA1,"allencaf"
.
          DISPLAY   *P64:24,"allrlnaf";
          OPEN      ALLRLNA1,"allrlnaf"
          OPEN      ALLRLNA2,"allrlnaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patmrgaf";
          OPEN      PATMRGG2,"patmrgaf"
.
          DISPLAY   *P64:24,"paturcaf";
          OPEN      PATURCA1,"paturcaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,FIFTY9;*225,PTCNUURC
          READ      CONTROLF,HUND06;*225,ALCNDEVP  * use event program for VINAH
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: MAIN0000  *
.*                        get user options or exit                          *
.*    Returns:  EXIT    = FALSE (0)  Run fixit                              *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Load"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run load option
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.****************************************************************************
.*                             SDAT0000                Called by: MAIN0000  *
.*                       Set starting date                                  *
.* Returns:  STRTDATE - starting date (ccyymmdd)                            *
.*           EXIT   0 = valid date entered                                  *
.*                  1 = nothing entered                                     *
.****************************************************************************
.
SDAT0000  DISPLAY   *P1:11,*EF,"From Date :"
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      TEN1,CVERT
          MOVE      TEN3,CCOL
.
          CALL      IBACLOCK                     * get current date
.
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
.         Set the default start date to the 1st of the previous month
.
          MOVE      CMM,FORM2A
          MOVE      CYY,FORM2B
          IF        FORM2A = 1
            MOVE      TEN2,FORM2A
            SUB       ONE,FORM2B
          ELSE
            SUB       ONE,FORM2A
          ENDIF
          MOVE      "01",CDAY
          MOVE      "20",CCENT
          MOVE      FORM2A,CMON
          MOVE      FORM2B,CYEAR
.
          CALL      KEYDATE
          BRANCH    OVRCD,SDAT9100
          PACK      STRTDATE,CCENT,CYEAR,CMON,CDAY
.
.         Check that end date is not in the future
.
          MATCH     STRTDATE,CURRDATE
          IF        @LESS        
            MOVE      SP70,PRINVISN
            MOVE      SP70,PRINENCT
            MOVE      SP70,PRINAUDD
            MOVE      SP70,PRINAUDT
            MOVE      "ERROR - Start Date cannot be in the future",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Start Date cannot be in the future.  ";
            CALL      HITENTER
            GOTO      SDAT9100
          ENDIF
.
          MATCH     "20120701",STRTDATE        * start date prior to 1/7/2012 ?
          IF        @LESS
            MOVE      SP70,PRINVISN
            MOVE      SP70,PRINENCT
            MOVE      SP70,PRINAUDD
            MOVE      SP70,PRINAUDT
            MOVE      "ERROR - Start Date is prior to VINAH8",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Start Date is prior to VINAH8.  ";
            CALL      HITENTER
            GOTO      SDAT9100
          ENDIF
.
          MOVE      ONE,JULY2022               * Do VINAH 17
.
          MATCH     "20220701",STRTDATE        * start date prior to 1/7/2022 ?
          IF        @LESS
            MOVE      ZERO,JULY2022            * VINAH 16
          ENDIF
.
          SCAN      "PreJulyTest",REPTNAME
          IF        @EQUAL
            MOVE      "20240101",JULY2024      * Set Pre July testing date
          ENDIF                                * for VINAH 19
.
          RESET     REPTNAME
.
          MOVE      ZERO,EXIT
          GOTO      SDAT9999
.
SDAT9100  MOVE      ONE,EXIT
.         
SDAT9999  RETURN    
+
.****************************************************************************
.*                             EDAT0000                Called by: MAIN0000  *
.*                          Get ending date                                 *
.* Requires: STRTDATE - starting date (ccyymmdd)                            *
.*           CURRDATE - current date (ccyymmdd)                             *
.* Returns:  ENDDATE  - ending date (ccyymmdd)                              *
.*           EXIT   0 = valid date entered                                  *
.*                  1 = nothing entered                                     *
.****************************************************************************
.
EDAT0000  DISPLAY   *P1:13,*EL,"To   Date :"
          MOVE      TEN3,CVERT
          MOVE      TEN3,CCOL
.
          UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,EDAT9100
          PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY
.
.         Check that end date is not in the future
.
          MATCH     ENDDATE,CURRDATE
          IF        @LESS
            MOVE      SP70,PRINVISN
            MOVE      SP70,PRINENCT
            MOVE      SP70,PRINAUDD
            MOVE      SP70,PRINAUDT
            MOVE      "ERROR - End Date cannot be in the future",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"End Date cannot be in the future.  ";
            CALL      HITENTER
            GOTO      EDAT9100
          ENDIF
.
.         Check that end date is not less than start date
.                                                                         
          MATCH     STRTDATE,ENDDATE
          IF        @LESS
            MOVE      SP70,PRINVISN
            MOVE      SP70,PRINENCT
            MOVE      SP70,PRINAUDD
            MOVE      SP70,PRINAUDT
            MOVE      "ERROR - Start Date greater than end date",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Start date greater than end date.  ";
            CALL      HITENTER
            GOTO      EDAT9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      EDAT9999
.
EDAT9100  MOVE      ONE,EXIT
. 
EDAT9999  RETURN      
+
.*****************************************************************************
.*                           VDAT0000              Called by: MAIN0000       *
.*           Validate the date range of the extract                          *
.*****************************************************************************
.
VDAT0000  UNPACK    STRTDATE,DIM4,DIM2
          MOVE      DIM4,STRTYEAR
          MOVE      DIM2,STRTMON
.
          IF        STRTMON > 6
            ADD       ONE,STRTYEAR
          ENDIF
          PACK      WORKDATE,STRTYEAR,ZERO,SIX,THIRTY
          IF        STRTMON > 6
            SUB       ONE,STRTYEAR
          ENDIF
.
          MATCH     ENDDATE,WORKDATE
          IF        @LESS
            MOVE      SP70,PRINVISN
            MOVE      SP70,PRINENCT
            MOVE      SP70,PRINAUDD
            MOVE      SP70,PRINAUDT
            MOVE      "ERROR - Extract period crosses financial years",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Extract period crosses financial years.  ";
            CALL      HITENTER
            GOTO      VDAT9100
          ENDIF
.
.         Check if the period is in the same year
.
          UNPACK    ENDDATE,DIM4,DIM2
          MOVE      DIM4,ENDYEAR
          MOVE      DIM2,ENDMONTH
.
          COMPARE   STRTYEAR,ENDYEAR
          IF        !@EQUAL
            MOVE      SP70,PRINVISN
            MOVE      SP70,PRINENCT
            MOVE      SP70,PRINAUDD
            MOVE      SP70,PRINAUDT
            MOVE      "ERROR - Extract covers multiple periods",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Extract covers multiple periods.  ";
            CALL      HITENTER
            GOTO      VDAT9100
          ENDIF
.
.         The extract period is in the same year, so check if the period
.         is in the same month
.
          COMPARE   STRTMON,ENDMONTH
          IF        !@EQUAL
            MOVE      SP70,PRINVISN
            MOVE      SP70,PRINENCT
            MOVE      SP70,PRINAUDD
            MOVE      SP70,PRINAUDT
            MOVE      "ERROR - Extract covers multiple periods",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Extract covers multiple periods.  ";
            CALL      HITENTER
            GOTO      VDAT9100
          ENDIF
.
VDAT9000  MOVE      ZERO,EXIT
          GOTO      VDAT9999
.
VDAT9100  MOVE      ONE,EXIT
.
VDAT9999  RETURN
+
.*****************************************************************************
.*                               LOAD0000              Called by: MAIN0000   *
.*        Load referral and encounter records for the date range             *
.*        from the audit files into the relevant temp files.                 *
.*****************************************************************************
.
.         First, loop through the referrals audit (allaudre) looking for
.         VINAH related referrals in the period selected.
.
LOAD0000  DISPLAY   *P1:24,*EL,"Loading Referrals into temp file:";
          MOVE      ZERO,XCOUNTER                * initialise counter
.
          PACK      KEY19,STRTDATE,SP20
          CALL      ASALREF                      * position at start of period
LOAD0500  CALL      AKALREF                      * read next record
          BRANCH    OVRCD,LOAD5000               * eof - get allencaf records
.
          DISPLAY   *P35:24,*V2LON,ALREVISN;
.
          MATCH     ALREAUDD,ENDDATE             * still in date range ?
          GOTO      LOAD5000 IF LESS             * no - get allencaf records
.
          MATCH     "1",ALRENVIN                 * non-VINAH record ?
          GOTO      LOAD0500 IF EQUAL            * yes - ignore record
.
.         Write referral record to temp file A
.
          ADD       ONE,XCOUNTER                 * increment counter
          CALL      WRTEMP1                      * write record
          GOTO      LOAD0500                     * get next audit record
.
.         Now, loop through the encounters audit looking for VINAH related
.         encounters in the period selected.
.
LOAD5000  DISPLAY   *P1:24,*EL,"Loading Encounters into temp file:";
          MOVE      ZERO,XCOUNTER                * initialise counter
.
          PACK      KEY19,STRTDATE,SP20
          CALL      ASALENC                      * position at start of period
LOAD5500  CALL      AKALENC                      * read next record
          BRANCH    OVRCD,LOAD9999               * eof - finished
.
          DISPLAY   *P36:24,*V2LON,ALENVISN,ALENENCT;
.
          MATCH     ALENAUDD,ENDDATE             * still in date range ?
          GOTO      LOAD9999 IF LESS             * no - finished
.
.         In the case of compensable contacts, where the user has cancelled
.         out of compensable claim input and they subsequently accept the
.         delete prompt, the contact will physically be deleted, so in
.         effect it never existed.  As such, ignore the record.
.
          PACK      KEY16,ALENVISN,ALENENCT
          CALL      RAALENC1                     * encounter on file ?
          BRANCH    OVRCD,LOAD5500               * no - ignore record
.
.         Write encounter record to temp file B
.
          ADD       ONE,XCOUNTER                 * increment counter
          CALL      WRTEMP2                      * write record
          GOTO      LOAD5500                     * get next audit record
.
LOAD9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*          Process all the audit records for the period, and load into      *
.*          the VINAH history file.                                          *
.*****************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing Referrals:";
.
          MOVE      SP8,KEY8
          CALL      RSTEMP1                      * position at start of period
PROC0500  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,PROC5000               * eof - get allencaf records
.
          DISPLAY   *P23:24,*V2LON,ALREVISN;
.
          MATCH     ANSB,ALREAUDR                * before change record ?
          GOTO      PROC0500 IF EQUAL            * yes - ignore
.
          MATCH     ANSC,ALREAUDR                * after change record ?
          GOTO      PROC1000 IF NOT EQUAL        * no
.
          CALL      CKES0000                     * check for epis. status change
          IF        EXIT = 1
            MOVE      ALREVISN,PRINVISN
            MOVE      SP70,PRINENCT
            MOVE      ALREAUDD,PRINAUDD
            MOVE      ALREAUDT,PRINAUDT
            MOVE      "ERROR - Fatal error occurred",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Fatal error occurred.  ";
            CALL      HITENTER
            GOTO      PROC9999
          ENDIF
          BRANCH    STATACTN,PROC0500:           * ignore record
                             PROC1000            * process as is
.
.         Change the message to an add
.
          MOVE      ANSA,ALREAUDR
.
.         A valid referral record has been found for the period, so
.         write a new history record (allhdtaf).
.
PROC1000  MOVE      ALREAUDT,DIM8                * load trigger date
          REP       ": ",DIM8
          SQUEEZE   DIM8
          PACK      ALHDDTTM,ALREAUDD,DIM8,SP20
.
          MOVE      ALREAUDR,ALHDACTN            * load action type
.
          MATCH     "1",ALREUYN4                 * referral-in ?
          IF        @EQUAL
            MOVE      ZERO,ALHDRTYP              * yes
            GOTO      PROC2000
          ENDIF
.
          MOVE      ONE,ALHDRTYP                 * no - set as episode
.
.         This is an Episode record, so check to see if it has been
.         accepted or not.  If not, then ignore this record as DHS aren't
.         interested in Episodes which haven't been accepted.
.         (TSK: 0825338).
.
.         First check if triage status is populated, and if so, use this
.         to determine if the episode has been accepted or not.
.         (Task 0846679 V10.11.01)
.
          CALL      CTRS0000
          BRANCH    EXIT,PROC0500:               * ignore record
                         PROC2000                * accepted triage status
.
.         No triage status, so default back to using priority
.
          MATCH     SP3,ALREPRTY                 * blank priority ?
          GOTO      PROC0500 IF EQUAL            * yes (shouldn't happen)
.
          PACK      KEY5,ANSP,ANSR,ALREPRTY
          CALL      RDCODE1                      * priority on file ?
          BRANCH    OVRCD,PROC0500               * no - ignore record
.
.         If Indicator 3 has a value of "A", then the Episode is waiting
.         for additional information before being accepted, so ignore the
.         record.
.
          MATCH     ANSA,TCINDC3                 * "98" outcome ?
          GOTO      PROC0500 IF EQUAL            * yes - ignore record
.
.         If Indicator 2 has a value of "T", then the referral is being
.         triaged, so ignore the record.
.
          MATCH     ANST,TCINDC2                 * "99" outcome ?
          GOTO      PROC0500 IF EQUAL            * yes - ignore record
.
PROC2000  CALL      LREF0000                     * load referral fields
          CALL      IENC0000                     * initialise encounter fields
.
          CALL      VREC0000                     * valid record ?
          BRANCH    EXIT,PROC0500                * no - ignore record
.
.         Task: 0869966
.         Previously a duplicate record was simply ignored and an error
.         recorded in the report.  Now the existing allhdtaf record is being
.         updated with the latest details, given that the record we are
.         processing should be more up to date if it was written after
.         the existing record.
.
          PACK      KEY42,ALHDSTAT,ALHDURNO,ALHDVISN,ALHDCONT,ALHDDTTM:
                          ALHDRTYP,ALHDACTN
          CALL      RAALHDT1
          IF        OVRCD = 1
            CALL      WRALHDT1                   * write history record
            ADD       ONE,RCOUNTER               * increment referral counter
          ELSE
            CALL      UPALHDT1                   * update history record
.
.           MOVE      ALREVISN,PRINVISN
.           MOVE      SP8,PRINENCT
.           MOVE      ALREAUDD,PRINAUDD
.           MOVE      ALREAUDT,PRINAUDT
.           MOVE      "Duplicate referral record",PRINDESC
.           CALL      PERR0000                   * no - print error
          ENDIF
.
          GOTO      PROC0500                     * get next audit record
.
.         Now, loop through the encounters audit looking for VINAH related
.         encounters in the period selected.
.
PROC5000  DISPLAY   *P1:24,*EL,"Processing Encounters:";
.
          MOVE      SP8,KEY8
          CALL      RSTEMP2                      * position at start of period
PROC5500  CALL      RKTEMP2                      * read next record
          BRANCH    OVRCD,PROC9999               * eof - finished
.
          DISPLAY   *P24:24,*V2LON,ALENVISN,ALENENCT;
.
          MATCH     ANSB,ALENAUDR                * before change record ?
          GOTO      PROC5500 IF EQUAL            * yes
.
          MATCH     ANSC,ALENAUDR                * after change record ?
          GOTO      PROC6000 IF NOT EQUAL        * no
.
          CALL      CKCS0000                     * check for cont. status change
          IF        EXIT = 1
            MOVE      ALENVISN,PRINVISN
            MOVE      ALENENCT,PRINENCT
            MOVE      ALENAUDD,PRINAUDD
            MOVE      ALENAUDT,PRINAUDT
            MOVE      "ERROR - Fatal error occurred",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Fatal error occurred.  ";
            CALL      HITENTER
            GOTO      PROC9999
          ENDIF
          BRANCH    STATACTN,PROC5500:           * ignore record
                             PROC6000            * process as is (delete)
.
.         Change the message from a delete to an add
.
          MOVE      ANSA,ALENAUDR
.
.         Get the corresponding referral (allrefaf) record to see if this is a
.         VINAH referral or not.
.         
PROC6000  MOVE      ALENVISN,KEY8
          CALL      RDALREF1                     * referral record found ?
          IF        OVRCD = 1
            MOVE      ALENVISN,PRINVISN
            MOVE      ALENENCT,PRINENCT
            MOVE      ALENAUDD,PRINAUDD
            MOVE      ALENAUDT,PRINAUDT
            MOVE      "Referral record missing for encounter",PRINDESC
            CALL      PERR0000                   * no - print error
            GOTO      PROC5500                   
          ENDIF     
.
          MATCH     "1",ALRENVIN                 * non-VINAH episode record ?
          GOTO      PROC5500 IF EQUAL            * yes - ignore record
.
.         A valid contact record has been found for the period, so
.         write a new history record (allhdtaf).
.
          MOVE      ALENAUDT,DIM8                * trigger date
          REP       ": ",DIM8
          SQUEEZE   DIM8
          PACK      ALHDDTTM,ALENAUDD,DIM8,SP20
.
          MOVE      ALENAUDR,ALHDACTN            * load action type
.
          MOVE      TWO,ALHDRTYP                 * load record type
.
          CALL      LREF0000                     * load referral fields
          CALL      LENC0000                     * load encounter fields
.
          CALL      CMRG0000                     * check merged U/R's
.
          CALL      VREC0000                     * valid record ?
          BRANCH    EXIT,PROC5500                * no - ignore record
.
          PACK      KEY42,ALHDSTAT,ALHDURNO,ALHDVISN,ALHDCONT,ALHDDTTM:
                          ALHDRTYP,ALHDACTN
          CALL      RAALHDT1
          IF        OVRCD = 1
            CALL      WRALHDT1                   * write history record
            ADD       ONE,ECOUNTER               * increment encounter counter
          ELSE
            MOVE      ALENVISN,PRINVISN
            MOVE      ALENENCT,PRINENCT
            MOVE      ALENAUDD,PRINAUDD
            MOVE      ALENAUDT,PRINAUDT
            MOVE      "Duplicate encounter record",PRINDESC
            CALL      PERR0000                   * no - print error
          ENDIF
.
          GOTO      PROC5500                     * get next audit record
.
PROC9999  RETURN
+
.*****************************************************************************
.*                            LREF0000             Called by: PROC0000       *
.*              Load the referral details                                    *
.*****************************************************************************
.
LREF0000  MOVE      " 0",ALHDSTAT                * status
          MOVE      ALREURNO,ALHDURNO            * U/R
          MOVE      ALREVISN,ALHDVISN            * visit number
          MOVE      SP20,ALHDBNUM                * batch number
          MOVE      SP20,ALHDMESI                * message id
          MOVE      ALREUYN4,ALHDVFLG            * VINAH flag
          MOVE      SP7,ALHDMTYP                 * message type
          MOVE      ZERO,ALHDSRCE                * source of record
          MOVE      ALREDEPT,ALHDDEPT            * department
          MOVE      ZERO,ALHDPRGM                * initialise program type
          MOVE      ALRECUID,ALHDWEBU            * web user id
.
          MOVE      ALREUC35,ALHDCRST            * carer residency status
          MOVE      ALREUC36,ALHDCAVL            * carer availability
          MOVE      ALREUC38,ALHDLARR            * living arrangement
          MOVE      ALREUC39,ALHDUACC            * type of usual accommodation
          MOVE      ALREUC31,ALHDMREL            * main carer's rel. to patient
          MOVE      ALREUC10,ALHDDTHP            * death place
          MOVE      SP8,ALHDOURN                 * Old U/R
.
          MOVE      ALREDREC,ALHDRDAT            * ref-in received date
          MOVE      ALRESREJ,ALHDOTRR            * ref-in outcome rej. reason
          MOVE      ALRERCAN,ALHDOTRC            * ref-in outcome cancellation
          MOVE      ALRESTAT,ALHDOUTC            * referral status
          MOVE      ALREPRTY,ALHDCLUC            * ref-in clinical urgency code
          MOVE      ALREUDT3,ALHDCRDT            * ref-in clinical referral date
          MOVE      ALREUDT5,ALHDRADT            * ref-in recpt. ack. date
          MOVE      SP8,ALHDLINK                 * initialise linked visit
          MOVE      ALRETRGS,ALHDTRGS            * triage status
.
          MOVE      ALRETRGD,ALHDTRGD            * triage date
          MOVE      ALREDACT,ALHDSDAT            * episode start date
          MOVE      ALREDCLO,ALHDEDAT            * episode end date
          MOVE      ALREUYN5,ALHDFCFL            * episode first cons. flag
          MOVE      ALREUC33,ALHDCPPT            * compl. treatment program
          MOVE      ALREEIOD,ALHDIODT            * impairment onset date
          MOVE      ALREACDD,ALHDACDD            * adv. care plan doc. date
          MOVE      ALREUDT4,ALHDCPDD            * care plan documented date
          MOVE      ALREUDT8,ALHDFABD            * First App. Booked date
          MOVE      ALREUD10,ALHDHDDT            * hospital discharge date
          MOVE      ALREUDT9,ALHDFNAD            * 1st notified appt. date
          MOVE      ALRERCLO,ALHDENDR            * episode end reason
          MOVE      ALREYN10,ALHDMFLG            * malignancy flag
          MOVE      ALRECTYP,ALHDCTYP            * episode clinic type
          MOVE      ALRECLID,ALHDCLID            * episode clinic id
          MOVE      ALREEVPR,ALHDEEPR            * episode event program
          MOVE      ALREPSIT,ALHDPSIT            * episode preferred site
          MOVE      ALREUDT1,ALHDUDT1            * episode user defined date 1
          MOVE      ALREUDT2,ALHDUDT2            * episode ready for care date
          MOVE      SP8,ALHDRODT                 * referral-out date
          MOVE      SP9,ALHDSERT                 * referral-out service type
          MOVE      SP9,ALHDPLAC                 * referral-out place
          MOVE      SP3,ALHDRCNT                 * referral-out count
.
.   VINAH 16
.
          MOVE      ALREDCLO,ALHDDCLO       * referral-in closed date
          MOVE      ALREDCAN,ALHDDCAN       * referral-in cancellation date
          MOVE      ALRESRDT,ALHDSRDT       * referral-in rejection date
          MOVE      ALREFTSC,ALHDRITS         * ref.-in first triage score
.
          MOVE      SP30,ALHDSPAR
.
LREF9999  RETURN
+
.*****************************************************************************
.*                              VREC0000           Called by: PROC0000       *
.*             Validate the record to ensure that it is a current            *
.*             VINAH referral or contact with all the relevant links.        *
.* Requires:  allhdfaf populated fields                                      *
.* Returns:   EXIT   0 = ok to continue                                      *
.*                   1 = error so don't load current record                  *
.*            ALHDLINK - linked referral-in visit number                     *
.*            ALHDPRGM - program type                                        *
.*****************************************************************************
.
.>>>>>>>  At front-end, need to make a change to not allow transfer
.>>>>>>>  of department if VINAH.
.
.         Check if this is a current VINAH related referral
.
VREC0000  MATCH     SP3,ALHDDEPT                 * blank department ?
          GOTO      VREC9100 IF EQUAL            * yes - ignore record
.
.         If the "Display Event Program on VINAH Internal Referral and
.         Encounter Screens" (ALCNDEVP) parameter is turned on, then use
.         Event Program (Cat zG) instead of Cat CG to determine program type.
.         In such a scenario, if Indicator 8 is not set up for the Cat zG
.         code, or if the parameter is turned off, then default back to using
.         Cat CG.
.
          MATCH     "1",ALCNDEVP                 * using Cat zG ?
          GOTO      VREC0500 IF NOT EQUAL        * no
.
          MATCH     "0",ALHDRTYP                 * Referral In record ?
          GOTO      VREC0100 IF NOT EQUAL        * no
.
.         This is a Referral In Record, so we need to use the first linked
.         episode's event program code (Cat zG) if possible, otherwise
.         default back to using Cat CG.
.
          CALL      FLEP0000                     * try using Cat zG
          BRANCH    EXIT,VREC0500                * default back to using Cat CG
          GOTO      VREC0300                     * Cat zG set up
.
.         We are processing an episode or a contact, so try using Event
.         Program (Cat zG), otherwise, default back to using Cat CG.
.
VREC0100  MATCH     SP3,ALHDEEPR                 * blank event program ?
          GOTO      VREC0500 IF EQUAL            * yes - use Cat CG
.
          PACK      CATEGORY,LOWCASEZ,ANSG       * no - use Cat zG
          PACK      KEY5,CATEGORY,ALHDEEPR
          GOTO      VREC1000
.
VREC0300  PACK      CATEGORY,LOWCASEZ,ANSG       * no - use Cat zG
          PACK      KEY5,CATEGORY,ALREEVPR       * from FLEP0000
          GOTO      VREC1000
.
VREC0500  PACK      CATEGORY,ANSC,ANSG
          PACK      KEY5,CATEGORY,ALHDDEPT
VREC1000  CALL      RDCODE1                      * department code on file ?
          BRANCH    OVRCD,VREC1500               * no - ignore record
.
          MATCH     SP1,TCINDC8                  * indicator 8 populated ?
          GOTO      VREC1500 IF EQUAL            * no - ignore record
.
          TYPE      TCINDC8                      * indicator 8 numeric ?
          GOTO      VREC1500 IF EQUAL            * yes - ignore record
.
          MOVE      ZERO,FORM2
.
          MATCH     "I",TCINDC8                  * HARP ?
          IF        @EQUAL
            MOVE      ONE,FORM2
            GOTO      VREC1100
          ENDIF
.
          MATCH     "H",TCINDC8                  * HBPCCT ?
          IF        @EQUAL
            MOVE      TWO,FORM2
            GOTO      VREC1100
          ENDIF
.
          MATCH     "M",TCINDC8                  * MH ?
          IF        @EQUAL
            MOVE      THREE,FORM2
            GOTO      VREC1100
          ENDIF
.
          MATCH     "P",TCINDC8                  * PC ?
          IF        @EQUAL
            MOVE      FOUR,FORM2
            GOTO      VREC1100
          ENDIF
.
          MATCH     "A",TCINDC8                  * PAC ?
          IF        @EQUAL
            MOVE      FIVE,FORM2
            GOTO      VREC1100
          ENDIF
.
          MATCH     "R",TCINDC8                  * Residential in Reach ?
          IF        @EQUAL
            MOVE      SIX,FORM2
            GOTO      VREC1100
          ENDIF
.
          MATCH     "S",TCINDC8                  * SACS ?
          IF        @EQUAL
            MOVE      SEVEN,FORM2
            GOTO      VREC1100
          ENDIF
.
          MATCH     "O",TCINDC8                  * SOP ?
          IF        @EQUAL
            MOVE      EIGHT,FORM2
            GOTO      VREC1100
          ENDIF
.
          MATCH     "T",TCINDC8                  * TCP ?
          IF        @EQUAL
            MOVE      NINE,FORM2
            GOTO      VREC1100
          ENDIF
.
.         Check if the referral-in received date was prior to 01/07/2021
.         and if so, then the following program types are to be ignored
.
          MATCH     SP8,ALHDRDAT
          IF        @EQUAL
            MATCH     JULY2021,ALREDREC        * pre VINAH 16 ?
            GOTO      VREC1040 IF LESS         * yes - ignore record
          ELSE
            MATCH     JULY2021,ALHDRDAT        * pre VINAH 16 ?
            GOTO      VREC1040 IF LESS         * yes - ignore record
          ENDIF
.
          IF        JULY2022=0
            MATCH     "D",TCINDC8              * HBD ? VINAH 16
            IF        @EQUAL
              MOVE      TEN2,FORM2
              GOTO      VREC1100
            ENDIF
          ENDIF
.
          MATCH     "V",TCINDC8                * Victorian Artificial Limb
          IF        @EQUAL
            MOVE      TEN3,FORM2
            GOTO      VREC1100
          ENDIF
.
.         Check if the referral-in received date was prior to 01/07/2024
.         and if so, then the following program types are to be ignored
.
VREC1040  MATCH     SP8,ALHDRDAT
          IF        @EQUAL
            MATCH     JULY2024,ALREDREC        * pre VINAH 19 ?
            GOTO      VREC1050 IF LESS         * yes - ignore record
          ELSE
            MATCH     JULY2024,ALHDRDAT        * pre VINAH 19 ?
            GOTO      VREC1050 IF LESS         * yes - ignore record
          ENDIF
.
          MATCH     "C",TCINDC8                * EPC
          IF        @EQUAL
            MOVE      TEN4,FORM2
            GOTO      VREC1100
          ENDIF
.
          MATCH     "F",TCINDC8                * IT - Infusion Therapy
          IF        @EQUAL
            MOVE      TEN5,FORM2
            GOTO      VREC1100
          ENDIF
.
.         HEN & TPN contacts are not being reported,
.
VREC1050  MATCH     "2",ALHDRTYP                 * Contact record ?
          GOTO      VREC1100 IF EQUAL            * yes-not a valid VINAH contact
.
.         Check if the referral-in received date was prior to 01/07/2018
.         and if so, then the following program types are to be ignored
.
          MATCH     SP8,ALHDRDAT
          IF        @EQUAL
            MATCH     "20180701",ALREDREC        * pre VINAH 14 ?
            GOTO      VREC9100 IF LESS           * yes - ignore record
          ELSE
            MATCH     "20180701",ALHDRDAT        * pre VINAH 14 ?
            GOTO      VREC9100 IF LESS           * yes - ignore record
          ENDIF
.
          MATCH     "E",TCINDC8                  * HEN ?
          IF        @EQUAL
            MOVE      TEN,FORM2
            GOTO      VREC1100
          ENDIF
.
          MATCH     "L",TCINDC8                  * TPN ?
          IF        @EQUAL
            MOVE      TEN1,FORM2
            GOTO      VREC1100
          ENDIF
.
          IF         JULY2022=1
            MATCH     "D",TCINDC8                  * HBD ? VINAH 17
            IF        @EQUAL
              MOVE      TEN2,FORM2
              GOTO      VREC1100
            ENDIF
          ENDIF
.
VREC1100  COMPARE   ZERO,FORM2                   * valid VINAH program type ?
          GOTO      VREC2000 IF NOT EQUAL        * yes
.
VREC1500  MATCH     "zG",CATEGORY                * tried Cat zG ?
          GOTO      VREC0500 IF EQUAL            * yes - now try Cat CG
.
          GOTO      VREC9100                     * ignore record
.
VREC2000  MOVE      FORM2,ALHDPRGM               * load program type
.
.         Make sure that there is a current allrefaf record for the visit (for
.         both referral and contact records.)
.
          MOVE      ALHDVISN,KEY8
          CALL      RDALREF1                     * referral on file ?
          BRANCH    OVRCD,VREC9100               * no - ignore record
.
.         Save the current date referral accepted value, so that it can be
.         the default value if the field is blank in the record we are
.         processing (only applies to contacts and episodes).
.
          MOVE      ALREUDT1,SAVEUDT1            * save referral accepted date
.
.         We have a VINAH related record, so check if this is a contact record.
.         If it's a contact record, then get the current encounter record
.         to see if it has been cancelled and if it has, then there's no
.         need to send this contact message if it's an add.
.         If there's a subsequent cancel contact message, then it will
.         determine that the add was not sent and the cancel will not be
.         sent either.
.
          MATCH     "2",ALHDRTYP                 * contact record ?
          IF        @EQUAL
            PACK      KEY16,ALHDVISN,ALHDCONT    * yes
            CALL      RDALENC1                   * contact record found ?
            BRANCH    OVRCD,VREC9100             * no - ignore record
.
.
.           Task 0815408 - check if this is an add contact and only
.                          if it is, then check if the current encounter
.                          is cancelled.
.
            MATCH     ANSA,ALHDACTN              * is this an add contact ?
            IF        @EQUAL
              MATCH     "1",ALENRSTA             * yes - contact cancelled ?
              GOTO      VREC9100 IF EQUAL        * yes - ignore record
            ENDIF
.
            GOTO      VREC5000
          ENDIF
.
.         This is a referral record, so check that the current referral
.         type matches the loaded referral type
.
          REP       " 0",ALHDVFLG
          REP       " 0",ALREUYN4
          MATCH     ALHDVFLG,ALREUYN4            * same referral type ?
          GOTO      VREC9100 IF NOT EQUAL        * no
.
.         Check whether it's an Episode or a Referral-In record.
.
          MATCH     "1",ALHDVFLG                 * referral-in record ?
          GOTO      VREC5000 IF NOT EQUAL        * no
.
.         This is a Referral-In record.
.         If any of the following fields are blank, then use the current
.         value as the default value. (CAR 298611)
.              Living Arrangement
.              Carer Availability
.              Main Carer's Relationship
.              Patient Usual Accommodation Type
.              Referral In Received Date
.
.         Check Main Carer's Relationship
.
          MATCH     SP3,ALHDMREL
          IF        @EQUAL
            MOVE      ALREUC31,ALHDMREL
          ENDIF
.
.         Check Carer Availability
.
          MATCH     SP3,ALHDCAVL
          IF        @EQUAL
            MOVE      ALREUC36,ALHDCAVL
          ENDIF
.
.         Check Living Arrangement
.
          MATCH     SP3,ALHDLARR
          IF        @EQUAL
            MOVE      ALREUC38,ALHDLARR
          ENDIF
.
.         Check Patient Usual Accommodation Type
.
          MATCH     SP3,ALHDUACC
          IF        @EQUAL
            MOVE      ALREUC39,ALHDUACC
          ENDIF
.
.         Check Referral In Received Date
.
          MATCH     SP8,ALHDRDAT
          IF        @EQUAL
            MOVE      ALREDREC,ALHDRDAT
          ENDIF
.
.         If clinical referral date is not blank, then check if it is
.         the same as the referral date and if it isn't, then replace
.         it with the referral date
.
          MATCH     SP8,ALHDCRDT
          IF        !@EQUAL
            MATCH     ALHDCRDT,ALRERDAT
            IF        !@EQUAL
              MOVE      ALRERDAT,ALHDCRDT
            ENDIF
          ENDIF
.
.         Check Referral In Receipt Acknowledgement Date.
.         First, loop through the linked episode records to get the Date
.         Referral Accepted for the first linked episode.  At the same time,
.         we can get the default priority code for Specialist O/P referrals.
.
          MOVE      ALHDVISN,VISITNUM
          MOVE      ALHDPRGM,PRGMSTRM
          MOVE      ALHDCLUC,CURGENCY
          CALL      FRSTLINK
          BRANCH    EXIT,VREC9100                * error repositioning
.
          MOVE      CURGENCY,ALHDCLUC            * load priority
          MOVE      SAVERIRD,ALHDRIRD            * Referral-In Reason Department
          MOVE      SAVERIRS,ALHDRIRS            * Referral-In Reason
.
.         If the Receipt Acknowledgement Date is blank for the record we are
.         processing, then default the Receipt Acknowledgement Date for the
.         current episode record.  If that is also blank, then default the
.         Date Referral Accepted Date for the first linked Episode (from
.         FRSTLINK).  If that is also blank, then default the current
.         Referral In Received Date.
.
          MATCH     SP8,ALHDRADT                 * blank Ref In Ackn date ?
          GOTO      VREC9000 IF NOT EQUAL        * no - finished
.
          CALL      DEFRACKN
          MOVE      ACKNDATE,ALHDRADT            * load default Ref In Ackn date
.
          GOTO      VREC9000
.
.         This is either an episode or a contact record.
.         If it's an Episode record, then check if the Episode is closed
.         in the loaded data and the current referral data and if so, also
.         check if the loaded episode Episode End Date and Episode End
.         reason are blank and if so, then use the current referral data to
.         default these fields (Task: 0836853).
.         Also, the Episode Ready for Care Date is only populated in VINAHDEF
.         after the Episode "Add" audit record has been written, so we need to
.         use the current value, as this field is mandatory for the VINAH
.         extract.
.
VREC5000  MATCH     "1",ALHDRTYP                 * episode record ?
          GOTO      VREC5100 IF NOT EQUAL        * no
.
          MATCH     SP8,ALHDUDT2                 * ep ready for care date blank?
          IF        @EQUAL
            MOVE      ALREUDT2,ALHDUDT2          * default current value
          ENDIF
.
          MATCH     "2",ALHDOUTC                 * loaded episode "closed" ?
          GOTO      VREC5100 IF NOT EQUAL        * no
.
          MATCH     "2",ALRESTAT                 * current episode "closed" ?
          GOTO      VREC5100 IF NOT EQUAL        * no
.
          MATCH     SP8,ALHDEDAT                 * episode end date blank ?
          IF        @EQUAL
            MOVE      ALREDCLO,ALHDEDAT          * default to current value
          ENDIF
.
          MATCH     SP3,ALHDENDR                 * episode end reason blank ?
          IF        @EQUAL
            MOVE      ALRERCLO,ALHDENDR          * default to current value
          ENDIF
.
.         Now check that the current episode is linked to a Referral In
.         record and that the Referral In does not have a status of "Waiting"
.         (DHS don't want to know about any episodes or contacts until the
.         referral-in becomes "Active").
.
VREC5100  PACK      KEY16,ALHDVISN,SP20
          CALL      RSALRLN2                     * position in link file
          CALL      RKALRLN2                     * read next record
          BRANCH    OVRCD,VREC9100               * eof - finished
.
          MATCH     ALHDVISN,ALRLLNKV            * same episode visit still ?
          GOTO      VREC9100 IF NOT EQUAL        * no - finished
.
          MOVE      ALRLVISN,ALHDLINK            * yes - load linked referral #
.
.         First linked episodes problem code and department
.         This will be used for the referral in reason.
.
          MOVE      ALHDLINK,VISITNUM
          CALL      FRSTLNKK
          BRANCH    EXIT,VREC5500                * error repositioning

          MOVE      SAVERIRD,ALHDRIRD  * load Referral (In) Reason Department
          MOVE      SAVERIRS,ALHDRIRS  * load Referral (In) Reason Code (problem
.
          MOVE      ALHDLINK,ALRLVISN            * restore linked referral #
.
.         Make sure that the current Referral-In record exists
.
VREC5500  MOVE      ALRLVISN,KEY8
          CALL      RDALREF1                     * referral-in record found ?
          BRANCH    OVRCD,VREC9100               * no
.
          MATCH     "1",ALREUYN4                 * referral-in ?
          GOTO      VREC9100 IF NOT EQUAL        * no
.
.         Check the triage status to see if the Referral-In has been accepted.
.         If not, then the Episode cannot have been accepted either,
.         so ignore the Episode record (Task 0846679 V10.11.02).
.
          CALL      CTRS0000
          IF        EXIT=1
            MATCH     "2",ALHDRTYP               * contact record ?
            IF        @EQUAL
              MOVE      ALENVISN,PRINVISN
              MOVE      ALENENCT,PRINENCT
              MOVE      ALENAUDD,PRINAUDD
              MOVE      ALENAUDT,PRINAUDT
              MOVE      "WARNING - Contacts referral in not accepted",PRINDESC
              CALL      PERR0000
            ENDIF
            GOTO      VREC9100                   * ignore record
          ENDIF
.
.         The following code has been removed as we are now using priority
.         to validate if the referral has been accepted or not and this is
.         being checked in PROC0000.  The code has been left just in case.
.
.>>>>>    MATCH     "0",ALRESTAT                 * referral-in "Waiting" ?
.>>>>>    GOTO      VREC9100 IF EQUAL            * yes - ignore record
.
.         Commented out the following 4 lines of code for CAR 308300.
.         The code has been left just in case there is an issue.
.
.         MATCH     "4",ALRESTAT                 * referral-in "Cancelled" ?
.         GOTO      VREC9100 IF EQUAL            * yes - ignore record
.
.         MATCH     "5",ALRESTAT                 * referral-in "Rejected" ?
.         GOTO      VREC9100 IF EQUAL            * yes - ignore record
.
          MATCH     "2",ALRESTAT                 * referral-in "Closed" ?
          GOTO      VREC6000 IF NOT EQUAL        * no
.
.         The current Referral In record is "closed", so if the Referral In
.         went from a status of "Waiting" straight to a status of "Closed",
.         then the date active will not be populated, so we can ignore any
.         episodes associated with the Referral In.  (CAR 282203).
.
          MATCH     SP8,ALREDACT                 * was the referral-in active ?
          GOTO      VREC9100 IF EQUAL            * no - ignore record
.
.         Load the current referral-in details into the episode/contact record.
.         Note: we don't want to load the current status for the Referral In as
.         it won't reflect the status of the episode at the time the record
.         was triggered.  This would then cause discrepancies where the
.         status is closed but there is no end date.
.
VREC6000  MOVE      ALREDREC,ALHDRDAT            * load referral-in rec. date
          MOVE      ALRESREJ,ALHDOTRR            * load ref-in reason code (rej)
          MOVE      ALRERCAN,ALHDOTRC            * load ref-in reason code (can)
          MOVE      ALREPRTY,ALHDCLUC            * load clinical urgency cat.
          MOVE      ALREUDT3,ALHDCRDT            * load clin. referral date
          MOVE      ALREUDT5,ALHDRADT            * load Received Ack. Date
          MOVE      ALREVISN,ALHDLINK            * linked referral visit no.
          MOVE      ALRETRGS,ALHDTRGS            * load triage status
          MOVE      ALREUC35,ALHDCRST            * load carer residency status
          MOVE      ALREUC36,ALHDCAVL            * load carer availability
          MOVE      ALREUC38,ALHDLARR            * load living arrangement
          MOVE      ALREUC39,ALHDUACC            * load usual accommodation
          MOVE      ALREUC31,ALHDMREL            * load carer's rel. to patient
          MOVE      ALREUC10,ALHDDTHP            * load death place
.
.         Check that the Referral Accepted Date is populated and valid,
.         as this value will be used for the Episode Start Date.
.         If the Referral Accepted Date is blank for the record we are
.         processing, then use the Referral Accepted Date for the
.         current episode record.  If that is also blank, then use the
.         linked Receipt Acknowledgement Date.  If that is also
.         blank, then use the linked Referral In Received Date.
.         In addition, the Referral Accepted Date cannot be less than the
.         Referral In Received Date, so if it is, then just use the
.         Referral In Received Date to populate the field.
.
          MATCH     SP8,ALHDUDT1                 * blank referral acc. date ?
          GOTO      VREC7000 IF NOT EQUAL        * no
.
          MOVE      SAVEUDT1,ALHDUDT1            * yes - load current value
          MATCH     SP8,ALHDUDT1                 * blank curr. ref. acc. date ?
          GOTO      VREC7000 IF NOT EQUAL        * no
.
          MOVE      ALHDRADT,ALHDUDT1            * yes - load Rec Ackn Date
          MATCH     SP8,ALHDUDT1                 * blank curr. ref. acc. date ?
          GOTO      VREC8000 IF EQUAL            * yes
.
VREC7000  MATCH     ALREDREC,ALHDUDT1            * valid date ?
          GOTO      VREC9000 IF NOT LESS         * yes
.
VREC8000  MOVE      ALREDREC,ALHDUDT1            * no - load Ref. In Rec. Date
.
VREC9000  MOVE      ZERO,EXIT
          GOTO      VREC9999
.
VREC9100  MOVE      ONE,EXIT
.
VREC9999  RETURN
+
.*****************************************************************************
.*                              IENC0000           Called by: PROC0000       *
.*                  Initialise the encounter details                         *
.*****************************************************************************
.
IENC0000  MOVE      SP8,ALHDCONT                 * contact identifier
          MOVE      SP3,ALHDCOMP                 * contact account class
          MOVE      SP10,ALHDPGRP                * contact prof. group 0
          MOVE      SP10,ALHDPGR1                * contact prof. group 1
          MOVE      SP10,ALHDPGR2                * contact prof. group 2
          MOVE      SP10,ALHDPGR3                * contact prof. group 3
          MOVE      SP10,ALHDPGR4                * contact prof. group 4
          MOVE      SP8,ALHDDATE                 * contact date
          MOVE      SP8,ALHDTIME                 * contact time
          MOVE      SP3,ALHDPURP                 * contact main purpose
          MOVE      SP3,ALHDSTYP                 * contact session type
          MOVE      SP3,ALHDPRES                 * contact present status
          MOVE      SP3,ALHDDMOD                 * contact delivery mode
          MOVE      SP3,ALHDDSET                 * contact delivery setting
          MOVE      SP3,ALHDPOFC                 * contact phase of care
          MOVE      SP3,ALHDPDPL                 * contact preferred death place
          MOVE      SP3,ALHDCMOD                 * contact care model
          MOVE      SP8,ALHDIFLG                 * contact inpatient flag
          MOVE      SP10,ALHDSPCP                * contact spec. care. pall.
          MOVE      SP3,ALHDCSET                 * contact pref. care setting
          MOVE      SP3,ALHDCEPR                 * contact event program
          MOVE      SP70,ALHDRSTA                * contact record status
.
IENC9999  RETURN
+
.*****************************************************************************
.*                              LENC0000           Called by: PROC0000       *
.*                  Load the encounter details                               *
.*****************************************************************************
.
LENC0000  MOVE      ALENENCT,ALHDCONT            * contact identifier
          MOVE      ALENCOMP,ALHDCOMP            * contact account class
          MOVE      ALENHCP,ALHDPGRP             * contact prof. group 0
          MOVE      ALENUHC1,ALHDPGR1            * contact prof. group 1
          MOVE      ALENUHC2,ALHDPGR2            * contact prof. group 2
          MOVE      ALENUHC3,ALHDPGR3            * contact prof. group 3
          MOVE      ALENUHC4,ALHDPGR4            * contact prof. group 4
          MOVE      ALENSDAT,ALHDDATE            * contact date
          MOVE      ALENSTIM,ALHDTIME            * contact time
          MOVE      ALENUC34,ALHDPURP            * contact main purpose
          MOVE      ALENUC35,ALHDSTYP            * contact session type
          MOVE      ALENUC37,ALHDPRES            * contact present status
          MOVE      ALENUC38,ALHDDMOD            * contact delivery mode
          MOVE      ALENUC40,ALHDDSET            * contact delivery setting
          MOVE      ALENUC31,ALHDPOFC            * contact phase of care
          MOVE      ALENUC08,ALHDPDPL            * contact preferred death place
          MOVE      ALENUC06,ALHDCMOD            * contact care model
          MOVE      ALENLINK,ALHDIFLG            * contact inpatient flag
          MOVE      ALENUHC1,ALHDSPCP            * contact spec. care. pall.
          MOVE      ALENUC07,ALHDCSET            * contact pref. care setting
          MOVE      ALENUC33,ALHDCEPR            * contact event program
          MOVE      ALENSDEP,ALHDSDEP            * contact service department
          MOVE      ALENUDT1,ALHDCEDT            * contact end date
          MOVE      ALENUTM1,ALHDCETM            * contact end time
          MOVE      SP70,ALHDRSTA                * contact record status
.
LENC9999  RETURN
+
.****************************************************************************
.*                            CKCS0000                 Called by: PROC0000  *
.*    Check the status of the before and change contact records to see      *
.*    what action to take.                                                  *
.* Returns:  EXIT  0 = Ok to continue                                       *
.*                 1 = Fatal error occurred                                 *
.*           STATACTN - Status check action                                 *
.*                    0 = process record as an add record instead of a      *
.*                        cancellation                                      *
.*                    1 = ignore record                                     *
.*                    2 = process record as a cancellation (delete)         *
.****************************************************************************
.
.         Save the details of the current record so that we can re-position
.         back on this record again at the end of this check routine.
.         
CKCS0000  MOVE      XCOUNTER,SAVKEY8
          MOVE      ALENRSTA,SAVESTAT            * save "change" record status
.
.         Save the current change audit record details to load up what
.         we are matching for the before audit record
.
          MOVE      ALENAUDD,LASTDATE            * save change date
          UNPACK    ALENAUDT,DIM2A,ANS,DIM2B
          PACK      LASTTIME,DIM2A,DIM2B         * save change time
          MOVE      ALENAUDP,SAVEPORT            * save port id
          MOVE      ALENAUDO,SAVEOPER            * save operator
          MOVE      ALENVISN,SAVEVISN            * save visit number
          MOVE      ALENENCT,SAVEENCT            * save encounter number
.
.         Loop back through the temp file B to get the matching "B"efore record,
.         if one exists.
.
CKCS0500  CALL      RPTEMP2                      * read previous record
          IF        OVRCD = 1
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVEENCT,PRINENCT
            MOVE      LASTDATE,PRINAUDD
            MOVE      LASTTIME,PRINAUDT
            MOVE      "Before record missing for encounter(1)",PRINDESC
            CALL      PERR0000
            GOTO      CKCS7100
          ENDIF
.
.         First, make sure that the record was written within 60 seconds of
.         the change record.  If not, then the before record probably doesn't
.         exist.
.
          MOVE      ALENAUDD,FIRSTDAT            * save before date
          UNPACK    ALENAUDT,DIM2A,ANS,DIM2B
          PACK      FIRSTIME,DIM2A,DIM2B         * save before time
          CALL      TIMEDIFF                     * get time difference
          IF        CALCTIME > 1
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVEENCT,PRINENCT
            MOVE      LASTDATE,PRINAUDD
            MOVE      LASTTIME,PRINAUDT
            MOVE      "Before record missing for encounter(2)",PRINDESC
            CALL      PERR0000
            GOTO      CKCS7100
          ENDIF
.
.         Now check that the other relevant fields match
.
          MATCH     ANSB,ALENAUDR                * "B"efore record ?
          GOTO      CKCS0500 IF NOT EQUAL        * no - get previous record
.
          MATCH     ALENAUDP,SAVEPORT            * same port id ?
          GOTO      CKCS0500 IF NOT EQUAL        * no - get previous record
.
          MATCH     ALENAUDO,SAVEOPER            * same operator ?
          GOTO      CKCS0500 IF NOT EQUAL        * no - get previous record
.
          MATCH     ALENVISN,SAVEVISN            * same visit ?
          GOTO      CKCS0500 IF NOT EQUAL        * no - get previous record
.
          MATCH     ALENENCT,SAVEENCT            * same encounter ?
          GOTO      CKCS0500 IF NOT EQUAL        * no - get previous record
.
.         The corresponding "Before" record has been found, so
.         compare the record status for this record against the "Change"
.         record status and process accordingly.
.         .-------------------------------------------------------------------.
.         | Before Value | Change Value | Action                              |
.         |-------------------------------------------------------------------|
.         |      0       |      0       | This shouldn't happen as you        |
.         |              |              | cannot change a contact record,     |
.         |              |              | other than the status.              |
.         |-------------------------------------------------------------------|
.         |      0       |      1       | Process record as is - valid cancel |
.         |-------------------------------------------------------------------|
.         |      1       |      0       | The status has gone from cancelled  |
.         |              |              | to active, so we need to process    |
.         |              |              | this as an add record to undo the   |
.         |              |              | cancellation.                       |
.         |-------------------------------------------------------------------|
.         |      1       |      1       | Ignore record - still cancelled     |
.         .-------------------------------------------------------------------.
.
          MATCH     "0",ALENRSTA                 * before status active ?
          GOTO      CKCS1000 IF EQUAL            * yes
.
.         The before status was inactive, so check what the change status
.         was
.
          MATCH     "0",SAVESTAT                 * after status active ?
          GOTO      CKCS7000 IF EQUAL            * yes - process as an add
          GOTO      CKCS7100                     * no - ignore record
.
.         The before status was active, so check what the change status was.
.         If both were active, then ignore this record as it should never
.         happen.
.
CKCS1000  MATCH     "0",SAVESTAT                 * after status active ?
          GOTO      CKCS7100 IF EQUAL            * yes - ignore record
          GOTO      CKCS7200                     * no - process as delete
.
.         The before status was inactive and the change status was active,
.         so process the record as an add instead of a cancellation (delete)
.
CKCS7000  MOVE      ZERO,STATACTN
          GOTO      CKCS8000
.
.         The before and the change status were both active OR both inactive,
.         so we can ignore the record.
.
CKCS7100  MOVE      ONE,STATACTN
          GOTO      CKCS8000
.
.         The before status was active and the change status was inactive,
.         so process as per normal as a delete message.
.
CKCS7200  MOVE      TWO,STATACTN
.
.         Now re-position on the original audit record
.
CKCS8000  MOVE      SAVKEY8,KEY8
          CALL      RDTEMP2                      * re-position on record
          BRANCH    OVRCD,CKCS9100               * not found - error
.
          MOVE      ZERO,EXIT
          GOTO      CKCS9999
.
CKCS9100  MOVE      ONE,EXIT
          GOTO      CKCS9999
.
CKCS9200  MOVE      TWO,EXIT
.
CKCS9999  RETURN
+
.****************************************************************************
.*                            CKES0000                 Called by: PROC0000  *
.*        Check the status of the before and change episode records to see  *
.*        what action to take.                                              *
.* Returns:  EXIT  0 = Ok to continue                                       *
.*                 1 = Fatal error occurred                                 *
.*           STATACTN - Status check action                                 *
.*                    0 = process record as an add record                   *
.*                    1 = ignore record                                     *
.*                    2 = process record as is                              *
.****************************************************************************
.
.         Save the details of the current record so that we can re-position
.         back on this record again at the end of this check routine.
.
CKES0000  MOVE      XCOUNTER,SAVKEY8
          MOVE      ALRESTAT,SAVESTAT            * save "change" record status
.
.         Save the current change audit record details to load up what
.         we are matching for the before audit record
.
          MOVE      ALREAUDD,LASTDATE            * save change date
          UNPACK    ALREAUDT,DIM2A,ANS,DIM2B
          PACK      LASTTIME,DIM2A,DIM2B         * save change time
          MOVE      ALREAUDP,SAVEPORT            * save port id
          MOVE      ALREAUDO,SAVEOPER            * save operator
          MOVE      ALREVISN,SAVEVISN            * save visit number
          MOVE      ALREURNO,SAVEURNO            * save U/R number
          MOVE      ALREUYN4,SAVEUYN4            * save VINAH master flag
.
.         Loop back through the temp file B to get the matching "B"efore record,
.         if one exists.
.
CKES0500  CALL      RPTEMP1                      * read previous record
          IF        OVRCD = 1
            MOVE      SAVEVISN,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      LASTDATE,PRINAUDD
            MOVE      LASTTIME,PRINAUDT
            MATCH     "1",SAVEUYN4
            IF        @EQUAL
              MOVE      "Before record missing for referral in(1)",PRINDESC
            ELSE
              MOVE      "Before record missing for episode(1)",PRINDESC
            ENDIF
            CALL      PERR0000
            GOTO      CKES7100
          ENDIF
.
.         First, make sure that the record was written within 60 seconds of
.         the change record.  If not, then the before record probably doesn't
.         exist.
.
          MOVE      ALREAUDD,FIRSTDAT            * save before date
          UNPACK    ALREAUDT,DIM2A,ANS,DIM2B
          PACK      FIRSTIME,DIM2A,DIM2B         * save before time
          CALL      TIMEDIFF                     * get time difference
          IF        CALCTIME > 1
            MOVE      SAVEVISN,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      LASTDATE,PRINAUDD
            MOVE      LASTTIME,PRINAUDT
            MATCH     "1",SAVEUYN4
            IF        @EQUAL
              MOVE      "Before record missing for referral in(2)",PRINDESC
            ELSE
              MOVE      "Before record missing for episode(2)",PRINDESC
            ENDIF
            CALL      PERR0000
            GOTO      CKES7100
          ENDIF
.
.         Now check that the other relevant fields match
.
          MATCH     ANSB,ALREAUDR                * "B"efore record ?
          GOTO      CKES0500 IF NOT EQUAL        * no - get previous record
.
          MATCH     ALREAUDP,SAVEPORT            * same port id ?
          GOTO      CKES0500 IF NOT EQUAL        * no - get previous record
.
          MATCH     ALREAUDO,SAVEOPER            * same operator ?
          GOTO      CKES0500 IF NOT EQUAL        * no - get previous record
.
          MATCH     ALREVISN,SAVEVISN            * same visit number ?
          GOTO      CKES0500 IF NOT EQUAL        * no - get previous record
.
.         All the relevant fields match so far, so finally we need to
.         check if the U/R is different and if so, this audit record must
.         have been triggered by a U/R merge which updated the referral.
.         Since this update has no relevance to VINAH, we can ignore the
.         record (based on the fact that the merge itself will be handled
.         as part of the VINAH extract anyway). CAR 295836
.
          MATCH     ALREURNO,SAVEURNO            * same U/R number
          GOTO      CKES7100 IF NOT EQUAL        * no - ignore record
.
.         The corresponding "Before" record has been found, so
.         compare the record status for this record against the "Change"
.         record status and process accordingly.
.         0 = On Waiting List
.         1 = Active
.         2 = Closed
.         3 = Inactive
.         4 = Cancelled
.         5 = Rejected
.         .-------------------------------------------------------------------.
.         | Before Value | Change Value | Action                              |
.         |-------------------------------------------------------------------|
.         |      0       |      0       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      0       |      1       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      0       |      2       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      0       |      3       | No change to VINAH data, so ignore  |
.         |              |              | the record                          |
.         |-------------------------------------------------------------------|
.         |      0       |      4       | Process record as is - valid cancel |
.         |-------------------------------------------------------------------|
.         |      0       |      5       | Process record as is - valid reject |
.         |-------------------------------------------------------------------|
.         |      1       |      0       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      1       |      1       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      1       |      2       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      1       |      3       | No change to VINAH data, so ignore  |
.         |              |              | the record                          |
.         |-------------------------------------------------------------------|
.         |      1       |      4       | Process record as is - valid cancel |
.         |-------------------------------------------------------------------|
.         |      1       |      5       | Process record as is - valid reject |
.         |-------------------------------------------------------------------|
.         |      2       |      0       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      2       |      1       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      2       |      2       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      2       |      3       | No change to VINAH data, so ignore  |
.         |              |              | the record                          |
.         |-------------------------------------------------------------------|
.         |      2       |      4       | Process record as is - valid cancel |
.         |-------------------------------------------------------------------|
.         |      2       |      5       | Process record as is - valid reject |
.         |-------------------------------------------------------------------|
.         |      3       |      0       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      3       |      1       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      3       |      2       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      3       |      3       | No change to VINAH data, so ignore  |
.         |              |              | the record                          |
.         |-------------------------------------------------------------------|
.         |      3       |      4       | Process record as is - valid cancel |
.         |-------------------------------------------------------------------|
.         |      3       |      5       | Process record as is - valid reject |
.         |-------------------------------------------------------------------|
.         |      4       |      0       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      4       |      1       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      4       |      2       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      4       |      3       | The record is inactive, so ignore it|
.         |-------------------------------------------------------------------|
.         |      4       |      4       | Record already cancelled, so ignore |
.         |              |              | the record                          |
.         |-------------------------------------------------------------------|
.         |      4       |      5       | In VINAH terms, effectively no      |
.         |              |              | change, so ignore record.           |
.         |-------------------------------------------------------------------|
.         |      5       |      0       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      5       |      1       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      5       |      2       | Process record as is - valid update |
.         |-------------------------------------------------------------------|
.         |      5       |      3       | The record is inactive, so ignore it|
.         |-------------------------------------------------------------------|
.         |      5       |      4       | In VINAH terms, effectively no      |
.         |              |              | change, so ignore record.           |
.         |-------------------------------------------------------------------|
.         |      5       |      5       | Record already rejected, so ignore  |
.         |              |              | the record                          |
.         .-------------------------------------------------------------------.
.
          MATCH     "0",ALRESTAT                 * before status waiting ?
          GOTO      CKES0700 IF EQUAL            * yes
.
          MATCH     "1",ALRESTAT                 * before status active ?
          GOTO      CKES1000 IF EQUAL            * yes
.
          MATCH     "2",ALRESTAT                 * before status closed ?
          GOTO      CKES2000 IF EQUAL            * yes
.
          MATCH     "3",ALRESTAT                 * before status inactive ?
          GOTO      CKES3000 IF EQUAL            * yes
.
          MATCH     "4",ALRESTAT                 * before status cancelled ?
          GOTO      CKES4000 IF EQUAL            * yes
.
          MATCH     "5",ALRESTAT                 * before status rejected ?
          GOTO      CKES5000 IF EQUAL            * yes
.
.         Invalid status
.
          GOTO      CKES7100                     * no - ignore record
.
.         The before status was waiting, so check what the change status
.         was
.
CKES0700  MATCH     "0",SAVESTAT                 * after status waiting ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "1",SAVESTAT                 * after status active ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "2",SAVESTAT                 * after status closed ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "3",SAVESTAT                 * after status inactive ?
          GOTO      CKES7100 IF EQUAL            * yes - ignore record
.
          MATCH     "4",SAVESTAT                 * after status cancelled ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "5",SAVESTAT                 * after status rejected ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
.         Invalid status
.
          GOTO      CKES7100                     * no - ignore record
.
.         The before status was active, so check what the change status
.         was
.
CKES1000  MATCH     "0",SAVESTAT                 * after status waiting ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "1",SAVESTAT                 * after status active ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "2",SAVESTAT                 * after status closed ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "3",SAVESTAT                 * after status inactive ?
          GOTO      CKES7100 IF EQUAL            * yes - ignore record
.
          MATCH     "4",SAVESTAT                 * after status cancelled ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "5",SAVESTAT                 * after status rejected ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
.         Invalid status
.
          GOTO      CKES7100                     * no - ignore record
.
.         The before status was closed, so check what the change status
.         was
.
CKES2000  MATCH     "0",SAVESTAT                 * after status waiting ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "1",SAVESTAT                 * after status active ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "2",SAVESTAT                 * after status closed ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "3",SAVESTAT                 * after status inactive ?
          GOTO      CKES7100 IF EQUAL            * yes - ignore record
.
          MATCH     "4",SAVESTAT                 * after status cancelled ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "5",SAVESTAT                 * after status rejected ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
.         Invalid status
.
          GOTO      CKES7100                     * no - ignore record
.
.         The before status was inactive, so check what the change status
.         was
.
CKES3000  MATCH     "0",SAVESTAT                 * after status waiting ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "1",SAVESTAT                 * after status active ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "2",SAVESTAT                 * after status closed ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "3",SAVESTAT                 * after status inactive ?
          GOTO      CKES7100 IF EQUAL            * yes - ignore record
.
          MATCH     "4",SAVESTAT                 * after status cancelled ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "5",SAVESTAT                 * after status rejected ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
.         Invalid status
.
          GOTO      CKES7100                     * no - ignore record
.
.         The before status was cancelled, so check what the change status
.         was
.
CKES4000  MATCH     "0",SAVESTAT                 * after status waiting ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "1",SAVESTAT                 * after status active ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "2",SAVESTAT                 * after status closed ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "3",SAVESTAT                 * after status inactive ?
          GOTO      CKES7100 IF EQUAL            * yes - ignore record
.
          MATCH     "4",SAVESTAT                 * after status cancelled ?
          GOTO      CKES7100 IF EQUAL            * yes - ignore record
.
          MATCH     "5",SAVESTAT                 * after status rejected ?
          GOTO      CKES7100 IF EQUAL            * yes - ignore record
.
.         Invalid status
.
          GOTO      CKES7100                     * no - ignore record
.
.         The before status was rejected, so check what the change status
.         was
.
CKES5000  MATCH     "0",SAVESTAT                 * after status waiting ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "1",SAVESTAT                 * after status active ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "2",SAVESTAT                 * after status closed ?
          GOTO      CKES7200 IF EQUAL            * yes - process as is
.
          MATCH     "3",SAVESTAT                 * after status inactive ?
          GOTO      CKES7100 IF EQUAL            * yes - ignore record
.
          MATCH     "4",SAVESTAT                 * after status cancelled ?
          GOTO      CKES7100 IF EQUAL            * yes - ignore record
.
          MATCH     "5",SAVESTAT                 * after status rejected ?
          GOTO      CKES7100 IF EQUAL            * yes - ignore record
.
.         Invalid status
.
          GOTO      CKES7100                     * no - ignore record
.
.         Process the record as an add, as previously it had a status of either
.         cancelled or rejected
.
CKES7000  MOVE      ZERO,STATACTN
          GOTO      CKES8000
.
.         Ignore the record.
.
CKES7100  MOVE      ONE,STATACTN
          GOTO      CKES8000
.
.         Process the message as is
.
CKES7200  MOVE      TWO,STATACTN
.
.         Now re-position on the original audit record
.
CKES8000  MOVE      SAVKEY8,KEY8
          CALL      RDTEMP1                      * re-position on record
          BRANCH    OVRCD,CKES9100               * not found - error
.
          MOVE      ZERO,EXIT
          GOTO      CKES9999
.
CKES9100  MOVE      ONE,EXIT
          GOTO      CKES9999
.
CKES9200  MOVE      TWO,EXIT
.
CKES9999  RETURN
+
.****************************************************************************
.*                            PERR0000                 Called by: PROC0000  *
.*               Print error for current record                   CKCS0000  *
.* Requires:  PRINVISN - visit number                             CKES0000  *
.*            PRINENCT - encounter number                                   *
.*            PRINAUDD - trigger date                                       *
.*            PRINAUDT - trigger time                                       *
.*            PRINDESC - error description                                  *
.* Returns:   ERRORCNT - updated error count                                *
.****************************************************************************
.
PERR0000  COMPARE   CLNO,FIFTY5                  * page full ?
          CALL      HEAD0000 IF LESS             * yes - new page
.
          UNPACK    PRINAUDD,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          PRINT     *1,PIPE,*3,PRINVISN,*12,PIPE,*14,PRINENCT,*23,PIPE:
                    *25,CPCDATE,*36,PRINAUDT,*45,PIPE,*47,PRINDESC,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
          ADD       ONE,ERRORCNT                 * increment error count
.
PERR9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PERR0000  *
.*                       print page heading                       PROC0000  *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          CALL      LINE0000                     * draw line across page
.         
          PRINT     *1,PIPE,*3,"Visit ##",*12,PIPE,*14,"Enc. ##",*23,PIPE:
                    *25,"Trigger Date/Time",*45,PIPE,*47,"Description",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      EIGHT,CLNO                   * increment line count     
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: PROC0000  *
.*                      draw line across page                     HEAD0000  *
.****************************************************************************
.         
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      TFILENAM                     * Get temp file name
          MOVE      TFILNAME,TEMPFILA
.
          CALL      TFILENAM                     * Get temp file name
          MOVE      TFILNAME,TEMPFILB
.
          CALL      KILL0000                     * remove existing file
.
          PACK      CMDLINE,ISBUILD,TEMPFILA,UKEYA
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      REFTEMP1,TEMPFILA            * open temp index file
.
          PACK      CMDLINE,ISBUILD,TEMPFILB,UKEYB
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      ENCTEMP1,TEMPFILB            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: MAIN0000  *
.*               close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     REFTEMP1                     * close file
          CLOSE     ENCTEMP1                     * close file
.
          PACK      CMDLINE,ERASE,TEMPFILA       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
          PACK      CMDLINE,ERASE,TEMPFILB       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
+
.*****************************************************************************
.*                              CLER0000           Called by: MAIN0000       *
.*              Clear all records from the temp files                        *
.*****************************************************************************
.
.         Clear records from temp file A
.
CLER0000  MOVE      SP8,KEY8
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CLER5000               * eof - clear temp file B
.
          MOVE      XCOUNTER,KEY8
          CALL      DETEMP1                      * delete record
          GOTO      CLER0000                     * get next record
.
.         Clear records from temp file B
.
CLER5000  MOVE      SP8,KEY8
          CALL      RSTEMP2                      * position at start of file
          CALL      RKTEMP2                      * read next record
          BRANCH    OVRCD,CLER9999               * eof - finished
.
          MOVE      XCOUNTER,KEY8
          CALL      DETEMP2                      * delete record
          GOTO      CLER5000                     * get next record
.
CLER9999  RETURN
+
.*****************************************************************************
.*                               CHKS0000              Called by: MAIN0000   *
.* Check if there are any records for any given status for the date range    *
.* to be extracted.                                                          *
.*          STATUS -   0 = Waiting                                           *
.*                     1 = Error on extract validation                       *
.*                     2 = Ignore (non VINAH record)                         *
.*                     3 = Ignore (not required)                             *
.*                     4 = Ignore (later message)                            *
.*                     5 = Ignore (associated deletion)                      *
.*                     6 = Extracted                                         *
.*                     7 = Submitted                                         *
.*                     8 = Rejected                                          *
.*                     9 = Resubmitted                                       *
.*                    10 = Accepted                                          *
.*                    99 = Remove                                            *
.* Requires:  STRTDATE - starting date for extract (ccyymmdd)                *
.* Returns:  EXIT 0 = Ok to continue                                         *
.*                1 = Error occurred                                         *
.*****************************************************************************
.
CHKS0000  MOVE      ZERO,COUNTER                 * initialise counter
.
CHKS0500  COMPARE   TEN1,COUNTER                 * last status checked ?
          GOTO      CHKS9000 IF NOT LESS         * yes - finished
.
          MOVE      COUNTER,STATUS               * load status to be checked
.
          PACK      KEY42,STATUS,STRTDATE,SP70
          CALL      RSALHDT4                     * position on status
CHKS1000  CALL      RKALHDT4                     * read next record
          BRANCH    OVRCD,CHKS8000               * eof - finished
.
          MATCH     STATUS,ALHDSTAT              * same status still ?
          GOTO      CHKS8000 IF NOT EQUAL        * no - finished
.
.         The date range is already loaded, so don't allow the load
.         to proceed.
.
          GOTO      CHKS9100
.
CHKS8000  ADD       ONE,COUNTER                  * increment counter
          GOTO      CHKS0500                     * check next status
.
CHKS9000  MOVE      ZERO,EXIT
          GOTO      CHKS9999
.
CHKS9100  MOVE      SP70,PRINVISN
          MOVE      SP70,PRINENCT
          MOVE      SP70,PRINAUDD
          MOVE      SP70,PRINAUDT
          MOVE      "ERROR - Data already loaded for date range",PRINDESC
          CALL      PERR0000
.
          DISPLAY   *P1:24,*EL,*B,"ERROR - Data loaded for date range. ";
          CALL      HITENTER
.
          MOVE      ONE,EXIT
          GOTO      CHKS9999
.
CHKS9999  RETURN
+
.****************************************************************************
.*                             REPH0000            Called by: MAIN0000      *
.*        Initialise report variables and print header                      *
.****************************************************************************
.
REPH0000  MOVE      ZERO,RCOUNTER                * initialise referral count
          MOVE      ZERO,ECOUNTER                * initialise encounter count
          MOVE      ZERO,ERRORCNT                * initialise error count
.
          MOVE      ZERO,CPAGENO                 * initalise print variables
          MOVE      ZERO,CNOUNDLN
          CALL      IBACLOCK                     * get current date/time
.
          CALL      HEAD0000                     * print report header
.
REPH9999  RETURN
+
.****************************************************************************
.*                             REPT0000            Called by: MAIN0000      *
.*                       Print report tail                                  *
.****************************************************************************
.
REPT0000  CALL      LINE0000                     * draw line across page
          PRINT     *N,"*** End of Report ***";
.
          UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *40,"Extract Period from ",CPCDATE;
          UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *71,"to ",CPCDATE
.
          DISPLAY   *P1:20,*EF,"Referrals  loaded: ",*V2LON,RCOUNTER,*HOFF:
                    *P1:21,"Encounters loaded: ",*V2LON,ECOUNTER,*HOFF:
                    *P1:22,"Error count      : ",*V2LON,ERRORCNT,*HOFF:
                    *P1:24,"Load completed.  ";
          CALL      HITENTER
.
REPT9999  RETURN
+
.****************************************************************************
.*                             FLEP0000            Called by: VREC0000      *
.*        Get the first linked episode for the Referral In record           *
.*        and check if the Event Program is set up (Cat zG)                 *
.* Requires: ALHDVISN - Referral In visit number                            *
.* Returns: ALREEVPR - First Linked Episode Event Program code (Cat zG)     *
.****************************************************************************
.
FLEP0000  MOVE      SP8,SAVEDATE                 * initialise save date
          MOVE      SP8,SAVEFLNK                 * initialise first linked visit
.
          PACK      KEY16,ALHDVISN,SP20
          CALL      RSALRLN1                     * position on referral in
FLEP0500  CALL      RKALRLN1                     * read next record
          BRANCH    OVRCD,FLEP8000               * eof - finished
.
          MATCH     ALHDVISN,ALRLVISN            * same referral in still ?
          GOTO      FLEP8000 IF NOT EQUAL        * no - error
.
          MATCH     SP8,SAVEDATE                 * blank save date ?
          GOTO      FLEP5000 IF NOT EQUAL        * no - check if earliest date
.
.         First linked episode found
.
          MOVE      ALRLLNKV,SAVEFLNK            * save linked episode visit #
          MOVE      ALRLCDAT,SAVEDATE            * save linked date
.
.         See if this episode was the earliest linked episode and if so,
.         save the date and the visit number
.
FLEP5000  MATCH     SAVEDATE,ALRLCDAT
          GOTO      FLEP0500 IF NOT LESS
.
          MOVE      ALRLLNKV,SAVEFLNK            * save linked episode visit #
          MOVE      ALRLCDAT,SAVEDATE            * save linked date
          GOTO      FLEP0500
.
FLEP8000  MATCH     SP8,SAVEFLNK                 * linked visit found ?
          GOTO      FLEP9100 IF EQUAL            * no
.
          MOVE      SAVEFLNK,KEY8
          CALL      RDALREF1
          BRANCH    OVRCD,FLEP9100
.
          MATCH     SP1,ALREEVPR                 * blank event program ?
          GOTO      FLEP9100 IF EQUAL            * yes - use Cat CG
.
          MOVE      ZERO,EXIT                    * try using Cat zG
          GOTO      FLEP9999
.
FLEP9100  MOVE      ONE,EXIT                     * use Cat CG
.
FLEP9999  RETURN
+
.*****************************************************************************
.*                              CMRG0000           Called by: PROC0000       *
.*  Check merges to see if we have the appropriate U/R for a contact record  *
.*  for the extract period (given that U/R is not stored on allauden and is  *
.*  defaulted from the current referral record)                              *
.* Requires: ALHDURNO as loaded in LREF0000                                  *
.*           ALHDVISN as loaded in LREF0000                                  *
.*           PTCNUURC - using U/R change audit file parameter                *
.* Returns:  ALHDURNO - the updated U/R number for the contact for the       *
.*                      extract period                                       *
.*****************************************************************************
.
CMRG0000  MOVE      ZERO,MERGEFLG                * initialise merge flag
.
          COMPARE   ONE,PTCNUURC                 * using U/R change audit ?
          GOTO      CMRG5000 IF NOT EQUAL        * no - use patmrgaf
.
.         Use the U/R change audit to check if the U/R is current for the
.         extract period
.
          PACK      KEY24,ALHDVISN,TILDA24
          CALL      RDSURCA1                     * position on visit number
CMRG0500  CALL      RDPURCA1                     * read previous record
          BRANCH    OVRCD,CMRG5000               * eof - finished
.
          MOVE      PTURADMN,DIM8
          MATCH     ALHDVISN,DIM8                * same visit still ?
          GOTO      CMRG5000 IF NOT EQUAL        * no - get next merge record
.
.         We have a matching visit record, so check if the change date
.         was in the period
.
          MATCH     PTURDATE,ENDDATE             * end date < change date ?
          IF        @LESS
            MOVE      PTUROURN,ALHDURNO          * yes - load old U/R number
            MOVE      ONE,MERGEFLG               * set merge flag
            GOTO      CMRG0500                   * get next change record
          ENDIF
.
          MATCH     STRTDATE,PTURDATE            * change date < start date ?
          GOTO      CMRG9999 IF LESS             * yes - finished
.
          MOVE      PTUROURN,ALHDURNO            * load old U/R number
          GOTO      CMRG9999
.
.         If there was no paturcaf record found, then use the patmrgaf file
.         to see if the U/R is current for the extract period
.
CMRG5000  BRANCH    MERGEFLG,CMRG9999            * paturcaf record found
.
          PACK      KEY17,THREE,ALHDURNO,TILDA24
          CALL      RSPTMRG2                     * position on current U/R
          CALL      RPPTMRG2                     * read previous record
          BRANCH    OVRCD,CMRG9999               * eof - finished
.
          COMPARE   THREE,PTMRSTAT               * same status still ?
          GOTO      CMRG9999 IF NOT EQUAL        * no - finished
.
          MATCH     ALHDURNO,PTMRNWUR            * same U/R still ?
          GOTO      CMRG9999 IF NOT EQUAL        * no - finished
.
.         We have a matching merge record, so check if the change date
.         was in the period
.
          MATCH     PTMRSDTE,ENDDATE             * end date < merge date ?
          IF        @LESS
            MOVE      PTMROLUR,ALHDURNO          * yes - load old U/R number
            GOTO      CMRG9999
          ENDIF
.
          MATCH     STRTDATE,PTMRSDTE            * merge date < start date ?
          GOTO      CMRG9999 IF LESS             * yes - finished
.
          MOVE      PTMROLUR,ALHDURNO            * load old U/R number
.
CMRG9999  RETURN
+
.*****************************************************************************
.*                            CTRS0000             Called by: PROC0000       *
.*          Check if triage status is populated, and if so, use this         *
.*          to determine if the episode has been accepted or not.            *
.* Returns: EXIT  0 = No triage status available                             *
.*                1 = Triage status is "Waiting"                             *
.*                2 = Triage status is "Accepted"                            *
.*****************************************************************************
.
CTRS0000  MATCH     SP3,ALRETRGS                 * blank triage status ?
          GOTO      CTRS9000 IF EQUAL            * yes
.
          PACK      KEY5,CATTS,ALRETRGS
          CALL      RDCODE1                      * triage status on file ?
          BRANCH    OVRCD,CTRS9000               * no
.
          MATCH     SP4,THCSCOD                  * blank HDP Default ?
          GOTO      CTRS9000 IF EQUAL            * yes
.
.         We have a HDP Triage Status Value, so check if it's waiting.
.
          MATCH     "98",THCSCOD                 * Insufficient details ?
          GOTO      CTRS9100 IF EQUAL            * yes
.
          MATCH     "99",THCSCOD                 * Awaiting triage ?
          GOTO      CTRS9100 IF EQUAL            * yes
.
          GOTO      CTRS9200                     * Accepted triage status
.
CTRS9000  MOVE      ZERO,EXIT
          GOTO      CTRS9999
.
CTRS9100  MOVE      ONE,EXIT
          GOTO      CTRS9999
.
CTRS9200  MOVE      TWO,EXIT
.
CTRS9999  RETURN
+
.*****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                     *
.*****************************************************************************
.
.         I/O's for Referral Temp File
.
RSTEMP1   READ      REFTEMP1,KEY8;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      REFTEMP1,KEY8;DXCOUNTR,ALREAUDD,ALREAUDT,ALREAUDP,ALREAUDR:
                                  ALREAUDS,ALREAUDO,ALREURNO,ALREVISN,ALREUYN4:
                                  ALREDEPT,ALRECUID,ALREUC35,ALREUC36,ALREUC38:
                                  ALREUC39,ALREUC31,ALREUC10,ALREDREC,ALRESREJ:
                                  ALRERCAN,ALRESTAT,ALREPRTY,ALREUDT3,ALREUDT5:
                                  ALREDACT,ALREDCLO,ALREUYN5,ALREUC33,ALREEIOD:
                                  ALREACDD,ALREUDT4,ALREUDT8,ALREUD10,ALREUDT9:
                                  ALRERCLO,ALREYN10,ALRECTYP,ALREEVPR,ALREPSIT:
                                  ALREUDT1,ALRENVIN,ALRETRGS,ALRETRGD,ALREUDT2:
                                  ALREFTSC,ALREDCAN,ALRESRDT
          GOTO      OVERCOND IF OVER
          MOVE      DXCOUNTR,XCOUNTER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    REFTEMP1;DXCOUNTR,ALREAUDD,ALREAUDT,ALREAUDP,ALREAUDR:
                             ALREAUDS,ALREAUDO,ALREURNO,ALREVISN,ALREUYN4:
                             ALREDEPT,ALRECUID,ALREUC35,ALREUC36,ALREUC38:
                             ALREUC39,ALREUC31,ALREUC10,ALREDREC,ALRESREJ:
                             ALRERCAN,ALRESTAT,ALREPRTY,ALREUDT3,ALREUDT5:
                             ALREDACT,ALREDCLO,ALREUYN5,ALREUC33,ALREEIOD:
                             ALREACDD,ALREUDT4,ALREUDT8,ALREUD10,ALREUDT9:
                             ALRERCLO,ALREYN10,ALRECTYP,ALREEVPR,ALREPSIT:
                             ALREUDT1,ALRENVIN,ALRETRGS,ALRETRGD,ALREUDT2:
                             ALREFTSC,ALREDCAN,ALRESRDT
          GOTO      OVERCOND IF OVER
          MOVE      DXCOUNTR,XCOUNTER
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    REFTEMP1;DXCOUNTR,ALREAUDD,ALREAUDT,ALREAUDP,ALREAUDR:
                             ALREAUDS,ALREAUDO,ALREURNO,ALREVISN,ALREUYN4:
                             ALREDEPT,ALRECUID,ALREUC35,ALREUC36,ALREUC38:
                             ALREUC39,ALREUC31,ALREUC10,ALREDREC,ALRESREJ:
                             ALRERCAN,ALRESTAT,ALREPRTY,ALREUDT3,ALREUDT5:
                             ALREDACT,ALREDCLO,ALREUYN5,ALREUC33,ALREEIOD:
                             ALREACDD,ALREUDT4,ALREUDT8,ALREUD10,ALREUDT9:
                             ALRERCLO,ALREYN10,ALRECTYP,ALREEVPR,ALREPSIT:
                             ALREUDT1,ALRENVIN,ALRETRGS,ALRETRGD,ALREUDT2:
                             ALREFTSC,ALREDCAN,ALRESRDT
          GOTO      OVERCOND IF OVER
          MOVE      DXCOUNTR,XCOUNTER
          RETURN
.
WRTEMP1   MOVE      XCOUNTER,DXCOUNTR
          WRITE     REFTEMP1,KEY8;DXCOUNTR,ALREAUDD,ALREAUDT,ALREAUDP,ALREAUDR:
                                  ALREAUDS,ALREAUDO,ALREURNO,ALREVISN,ALREUYN4:
                                  ALREDEPT,ALRECUID,ALREUC35,ALREUC36,ALREUC38:
                                  ALREUC39,ALREUC31,ALREUC10,ALREDREC,ALRESREJ:
                                  ALRERCAN,ALRESTAT,ALREPRTY,ALREUDT3,ALREUDT5:
                                  ALREDACT,ALREDCLO,ALREUYN5,ALREUC33,ALREEIOD:
                                  ALREACDD,ALREUDT4,ALREUDT8,ALREUD10,ALREUDT9:
                                  ALRERCLO,ALREYN10,ALRECTYP,ALREEVPR,ALREPSIT:
                                  ALREUDT1,ALRENVIN,ALRETRGS,ALRETRGD,ALREUDT2:
                                  ALREFTSC,ALREDCAN,ALRESRDT
          RETURN
.
UPTEMP1   MOVE      XCOUNTER,DXCOUNTR
          UPDATE    REFTEMP1;DXCOUNTR,ALREAUDD,ALREAUDT,ALREAUDP,ALREAUDR:
                             ALREAUDS,ALREAUDO,ALREURNO,ALREVISN,ALREUYN4:
                             ALREDEPT,ALRECUID,ALREUC35,ALREUC36,ALREUC38:
                             ALREUC39,ALREUC31,ALREUC10,ALREDREC,ALRESREJ:
                             ALRERCAN,ALRESTAT,ALREPRTY,ALREUDT3,ALREUDT5:
                             ALREDACT,ALREDCLO,ALREUYN5,ALREUC33,ALREEIOD:
                             ALREACDD,ALREUDT4,ALREUDT8,ALREUD10,ALREUDT9:
                             ALRERCLO,ALREYN10,ALRECTYP,ALREEVPR,ALREPSIT:
                             ALREUDT1,ALRENVIN,ALRETRGS,ALRETRGD,ALREUDT2:
                             ALREFTSC,ALREDCAN,ALRESRDT
          RETURN
.
DETEMP1   DELETE    REFTEMP1,KEY8
          RETURN
.
.         I/O's for Encounter Temp File
.
RSTEMP2   READ      ENCTEMP1,KEY8;;
          RETURN
.
RDTEMP2   MOVE      ZERO,OVRCD
          READ      ENCTEMP1,KEY8;DXCOUNTR,ALENAUDD,ALENAUDT,ALENAUDP,ALENAUDR:
                                  ALENAUDS,ALENAUDO,ALENVISN,ALENENCT,ALENCOMP:
                                  ALENHCP,ALENUHC1,ALENUHC2,ALENUHC3,ALENUHC4:
                                  ALENSDAT,ALENSTIM,ALENUC34,ALENUC35,ALENUC37:
                                  ALENUC38,ALENUC40,ALENUC31,ALENUC08,ALENUC06:
                                  ALENLINK,ALENUHC1,ALENUC07,ALENUC33,ALENRSTA:
                                  ALENSDEP,ALENUDT1,ALENUTM1
          GOTO      OVERCOND IF OVER
          MOVE      DXCOUNTR,XCOUNTER
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    ENCTEMP1;DXCOUNTR,ALENAUDD,ALENAUDT,ALENAUDP,ALENAUDR:
                             ALENAUDS,ALENAUDO,ALENVISN,ALENENCT,ALENCOMP:
                             ALENHCP,ALENUHC1,ALENUHC2,ALENUHC3,ALENUHC4:
                             ALENSDAT,ALENSTIM,ALENUC34,ALENUC35,ALENUC37:
                             ALENUC38,ALENUC40,ALENUC31,ALENUC08,ALENUC06:
                             ALENLINK,ALENUHC1,ALENUC07,ALENUC33,ALENRSTA:
                             ALENSDEP,ALENUDT1,ALENUTM1
          GOTO      OVERCOND IF OVER
          MOVE      DXCOUNTR,XCOUNTER
          RETURN
.
RPTEMP2   MOVE      ZERO,OVRCD
          READKP    ENCTEMP1;DXCOUNTR,ALENAUDD,ALENAUDT,ALENAUDP,ALENAUDR:
                             ALENAUDS,ALENAUDO,ALENVISN,ALENENCT,ALENCOMP:
                             ALENHCP,ALENUHC1,ALENUHC2,ALENUHC3,ALENUHC4:
                             ALENSDAT,ALENSTIM,ALENUC34,ALENUC35,ALENUC37:
                             ALENUC38,ALENUC40,ALENUC31,ALENUC08,ALENUC06:
                             ALENLINK,ALENUHC1,ALENUC07,ALENUC33,ALENRSTA:
                             ALENSDEP,ALENUDT1,ALENUTM1
          GOTO      OVERCOND IF OVER
          MOVE      DXCOUNTR,XCOUNTER
          RETURN
.
WRTEMP2   MOVE      XCOUNTER,DXCOUNTR
          WRITE     ENCTEMP1,KEY8;DXCOUNTR,ALENAUDD,ALENAUDT,ALENAUDP,ALENAUDR:
                                  ALENAUDS,ALENAUDO,ALENVISN,ALENENCT,ALENCOMP:
                                  ALENHCP,ALENUHC1,ALENUHC2,ALENUHC3,ALENUHC4:
                                  ALENSDAT,ALENSTIM,ALENUC34,ALENUC35,ALENUC37:
                                  ALENUC38,ALENUC40,ALENUC31,ALENUC08,ALENUC06:
                                  ALENLINK,ALENUHC1,ALENUC07,ALENUC33,ALENRSTA:
                                  ALENSDEP,ALENUDT1,ALENUTM1
          RETURN
.
UPTEMP2   MOVE      XCOUNTER,DXCOUNTR
          UPDATE    ENCTEMP1;DXCOUNTR,ALENAUDD,ALENAUDT,ALENAUDP,ALENAUDR:
                             ALENAUDS,ALENAUDO,ALENVISN,ALENENCT,ALENCOMP:
                             ALENHCP,ALENUHC1,ALENUHC2,ALENUHC3,ALENUHC4:
                             ALENSDAT,ALENSTIM,ALENUC34,ALENUC35,ALENUC37:
                             ALENUC38,ALENUC40,ALENUC31,ALENUC08,ALENUC06:
                             ALENLINK,ALENUHC1,ALENUC07,ALENUC33,ALENRSTA:
                             ALENSDEP,ALENUDT1,ALENUTM1
          RETURN
.
DETEMP2   DELETE    ENCTEMP1,KEY8
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       CALCDAYS
          INC       TFILENAM
          INC       TIMEDIFF
          INC       VINAHCOM
.
          INC       ALLENCIO/INC
          INC       ALLHDTIO/INC
          INC       ALLREFIO/INC
          INC       ALLRLNIO/INC
          INC       IBASEQIO/INC
          INC       PATCODIO/INC
          INC       PATMRGIO/INC
          INC       PATURCIO/INC
          INC       WEBERRIO/INC
