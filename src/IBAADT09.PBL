.******************************************************************************
.*                         P R O G R A M    S U M M A R Y                     *
.*                         -------------    -------------                     *
.*                                                                            *
.*  Program Name :    IBAADT09                                                *
.*  Function     :    CASEMIX LUMPSUM REVENUE BREAKDOWN REPORT                *
.*  Date Written :    03/07/86                                                *
.*  Mods         :                                                            *
.******************************************************************************
.*        V11.05.01 24/02/2025  J.Tan            TSK 0946490                  *
.*                  Recompiled for PATCATBI - Changes for MV CWO Payment Model*
.*        V11.04.06 25/10/2024 J.Tan             TSK 0951578                  *
.*                  Recompiled for ABFPTINV-Added Min.to roundup ICU Hrs(ABF) *
.*        V11.04.05 23/09/2024  J.Tan          TSK 0949848                    *
.*                  Recompiled for ABFPTINV - DRG List used in for COVID Adj. *
.*        V11.04.04 11/09/2024  J.Tan          TSK 0947315                    *
.*                  Recompiled for ABFPTINV - fixed Total Unqualified         *
.*        V11.04.03 01/08/2024  J.Tan          TSK 0947804                    *
.*                  Recompiled for ABFMHINV - Changes for Disch.after 1/7/2023*
.*        V11.04.02 17/07/2024  J.Tan          TSK 0947315                    *
.*                  Recompiled for ABFPTINV (LOS ICU adjusted & Newborn)      *
.*        V11.04.01 14/03/2024  J.Tan          TSK 0910994                    *
.*                  Recompiled for CMXMATRX                                   *
.*        V11.03.03 17/11/2023  J.Tan          TSK 0940089                    *
.*                  Recompiled for ABFPTINV - checking for blank Disc.DRG     *
.*        V11.03.02 13/11/2023  J.Tan          TSK 0939019                    *
.*                  Recompiled for ABFPTINV - HAC ICD10 Edition 12            *
.*        V11.03.01 25/05/2023  J.Tan          TSK 0923703                    *
.*                  Recompiled for ABF new calculations                       *
.*        V11.01.07 17/11/2021  J.Tan          TSK 0913621                    *
.*                  Recompiled for ABFPTINV - Mod for Multiple NEP Values     *
.*        V11.01.06 29/09/2021  J.Tan          TSK 0901515                    *
.*                  Recompiled for CMXMATRX - Added Primary Proc.to Matrix    *
.*        V11.01.05 14/09/2021  J.Tan          TSK 0906222                    *
.*                  Recompiled for ABFPTINV - Mod for Multiple NEP Values     *
.*        V11.01.04 25/08/2021  J.Tan           TSK 0903454                   *
.*                  Recompiled for PATCATBI -Claim code to LS/Daily(CACCFEE=4)*
.*        V11.01.03 07/07/2021  J.Tan           TSK 0908588                   *
.*                  Recompiled for PATCATBI - Exclude Unqualified days for C/P*
.*        V11.01.02 28/04/2021  Thanh T         TSK 0895165                   *
.*                  Recompiled for OPRARDFD changes                           *
.*                  07/04/2021  Tracey Nguyen   TSK 0901515                   *
.*                  Recompiled for PMSCMTFD - Added new fields                *
.*                  a) 1 File type for ICD procedure (PMCCIPF)                *
.*                  b) 3 new CMBS Field Type (PMCCFTS4/PMCCFT5C/PMCCFT6C)     *
.*                  c) 3 new CMBS Codes From (PMCCPC4F,PMCCSC5F,PMCCTC6F)     *
.*                  d) 3 new CMBS Codes To   (PMCCPC4T/PMCCSC5T,PMCCTC6T)     *
.*                  27/04/2021  J.Tan           TSK 0863287                   *
.*                  Recompiled for PATCATBI -Patient Invoice new functionality*
.*        V11.01.01 09/03/2021  Tracey Nguyen   TSK 0901515                   *
.*                  Recompiled for PMSCMTFD - Added Primary ICD Procedure 1-5 *
.*                  (PMCCICP1-5)                                              *
.*----------------------------------------------------------------------------*
.*        V11.00.06 10/11/2020  J.Tan           TSK 0899562                   *
.*                  Recompiled for CMXMATRX - setup date for reading MBS item *
.*        V11.00.05 29/09/2020  J.Tan          TSK 0896829                    *
.*                  Recompiled for CMXMATRX - use National(PTPGNDRG)DRG       *
.*        V11.00.04 22/09/2020  J.Tan           TSK 0895330                   *
.*                  Recompiled for CMXMATRX - reposition read of Matrix table *
.*        V11.00.03 14/07/2020  J.Tan          TSK 0892902                    *
.*                  Recompiled for PATCATBI - Mod to initialise CASMXKEY      *
.*        V11.00.02 01/07/2020  J.Tan           TSK 0892765                   *
.*                  Recompiled for PATCATBI-Low outlier exc. unqualified days *
.*        V11.00.01 04/03/2020  J.Tan          TSK 0838262                    *
.*                  Added Effective from and to date to MBS Item file         *
.*        V10.14.01 09/09/2019  J.Tan           TSK 0857392                   *
.*                  Recompiled for ABF invoice                                *
.*        V10.12.02 18/07/2018  J.Tan          TSK 0859911                    *
.*                  Recompiled for PATCATBI - Fixed No Payday Add on charge   *
.*        V10.12.01 15.01.2018  J.Tan   TSK 0848146                           *
.*                  Added CACCFEE=5 - Accumulation FI by Claim code           *
.*        V10.11.01 07/09/2017  J.Tan         TSK 0837479                     *
.*                  Recompiled for CMXMATRX - Consumption type items          *
.*        V10.10.02 13/06/2017  J.Tan          TSK 0839991                    *
.*                  Recompiled for PATDBTYP (PATCMSTP)                        *
.*        V10.10.01 25/01/2017  J.Tan          TSK 0832407                    *
.*                  Recompiled for PATCATBI- multi bed trans on sameday for MV*
.*                  04/04/2017  J.Tan         TSK 0297904                     *
.*                  Recompiled for PATCMSTP - Non-Accumulative inlier ICU/CCU *
.*        V10.08.08 06/10/2016  J.Tan         TSK 0826824                     *
.*                  Recompiled for CALCMVHR - MV Hours                        *
.*        V10.08.07 21/09/2016  J.Tan         TSK 0826370                     *
.*                  Recompiled for CMXMATRX - Chgd MCHGARR MCHGAMT array to F3*
.*        V10.08.06 26/08/2016  Don Nguyen    TSK 0312570                     *
.*                  Recompiled for CMXMATRX - Added check for PTCNDGED=1      *
.*                  Added PMSEDGFD/IO and GETEFDRG                            *
.*        V10.08.05 17/08/2016  J.Tan         TSK 0808745                     *
.*                  Recompiled for PATCATBI - for NPDAYFLG=1                  *
.*        V10.08.04 20/07/2016  J.Tan         TSK 0819914                     *
.*                  Recompiled for PATCATBI - Non ICU MV Hours                *
.*        V10.08.03 15/07/2016  J.Tan         TSK 0819914                     *
.*                  Recompiled for PATCATBI - Calculating non ICU MV hours    *
.*        V10.08.02 20/06/2016  J.Tan         TSK 0820816                     *
.*                  Recompiled for PATCATBI - Fixed No payday for Daycase     *
.*        V10.08.01 02/06/2016  J.Tan         TSK 0816651                     *
.*                  Recompiled for PATCATBI -Continuous Bill.to chk for Matrix*
.*        V10.07.02 04/03/2016  J.Tan         CAR 290448                      *
.*                  Recompiled for PATCATBI - Mods for Addon with No Pay DAy  *
.*        V10.07.01 18/11/2015  J.Tan         CAR 303942                      *
.*                  Added new payment types                                   *
.*        V10.06.01 15/07/2015  J.Tan          CAR 319342                     *
.*                  Recompiled for CMXMATRX - Chg 'Disc.UDF' to 'Care Class'  *
.*        V10.04.05  03/07/2014 J.Tan           CAR 268860                    *
.*                   Recompiled for PATCATBI - ICD10 Suggested Classification *
.*        V10.04.04 19/06/2014 J.Tan           CAR 302452                     *
.*                  Recompiled for PATDINVS - Changed MCHGARR/MCHGAMT         *
.*        V10.04.03 11/06/2014 Sandra Barcham  CAR 301639                     *
.*                  Moved call to TFILENAM to INIT0000                        *
.*        V10.04.02 27/05/2014  J.Tan          CAR 300784                     *
.*                  Recompiled for STEPDOWN - force stepdown prior inv.fromdat*
.*        V10.04.01 15/04/2014  J.Tan          CAR 261630                     *
.*                  Removed port number from temp file name                   *
.*        V10.03.09 13/12/2013  J.Tan          CAR 294609                     *
.*                  Recompiled for CMXMATRX - mods for Default Grouper Version*
.*        V10.03.08 07/11/2013  J.Tan          CAR 283618                     *
.*                  Recompiled for PATCATBI - mods for Ind.Services Billing   *
.*        V10.03.07 02/10/2013  J.Tan          CAR 291588                     *
.*                  Recompiled for PATCATBI - fixed stepdown return from leave*
.*        V10.03.06 14/08/2013  J.Tan          CAR 288416                     *
.*                  Recompiled for PATCATBI - fixed Days of Hosps.            *
.*        V10.03.05 05/08/2013  J.Tan          CAR 288060                     *
.*                  Recompiled for CMXMATRX - fixed Primary/Secondary/Tertiary*
.*        V10.03.04 06/05/2013  J.Tan          CAR 284902                     *
.*                  Recompiled for STEPDOWN - force stepdown prior Inv.Fromdat*
.*        V10.03.03 10/04/2013  J.Tan    CAR 283743                           *
.*                  Recompiled for PATCATBI -  reset PTTRESPD for New Stepdown*
.*        V10.03.02 05/03/2013  Patrick Adair CAR 281898                      *
.*                  Recompiled for PATCATBI                                   *
.*        V10.03.01 01/11/2012  Steve Armstrong  CAR 275700                   *
.*                  Removed CLOSE on PATMCHG1, PATITEM1 & PATDGWA1.           *
.*                  Also moved the OPEN's for these indexes from the body of  *
.*                  the program into the INIT0000 routine.                    *
.*                  21/09/2012  J.Tan          CAR 271474                     *
.*                  Recompiled for CMXMATRX - using index 5 of pmscmtaf       *
.*                  15/11/2012  J.Tan          CAR 262673                     *
.*                  Recompiled for PATCATBI - Casepayment perdiem rate        *
.******************************************************************************
.*        V10.01.02 23/02/2011  Peter Vela    CAR 233034                      *
.*                  Removed PATBF2FD and PATBF2IO                             *
.*        V10.01.01 17/12/2010  Mike Laming   CAR 233046                      *
.*                  Mods to Misc.Charges PATMCHFD - Key change, logic changes *
.******************************************************************************
.*        V10.00.08 11/08/2010 J.Tan         CAR 227873                       *
.*                  Recompiled for CMXMATRX- getting the grouper version      *
.*        V10.00.07 11/08/2010 J.Tan         CAR 227873                       *
.*                  Recompiled for CMXMATRX-searching for next rules of matrix*
.*        V10.00.06 03/08/2010  J.Tan         CAR 227319                      *
.*                  Recompiled for PATCATBI - Mechanical Ventilation          *
.*        V10.00.05 14/07/2010  J.Tan         CAR 226158                      *
.*                  Recompiled for STEPDOWN - bed fees update                 *
.*        V10.00.04 16/07/2010 J.Tan         CAR 226322                       *
.*                  Recompiled for CMXMATRX - search for next rule if Contract*
.*                  is not valid                                              *
.*        V10.00.03 12/07/2010  J.Tan         CAR 225932                      *
.*                  Recompiled for PATCATBI - set TDATE to IDATET for per-diem*
.*        V10.00.02 07/06/2010  Mike Laming   CAR 212864                      *
.*                  Recompiled for PATCATBI - mods at GCDE6500                *
.*        V10.00.01 30/04/2010 J.Tan         CAR 220887                       *
.*                  Mods checking for Active/Inactive of Misc.charge          *
.*        V9.12.11  11/03/2010  J.Tan         CAR 216044                      *
.*                  Mods to include Leave days in stepdown count for TAC      *
.*        V9.12.10  16/02/2010  Peter Vela    CAR 215485                      *
.*                  Recompiled for PATCATBI - Ignore Leave if less than a day *
.*        V9.12.09  05/02/2010  Peter Vela    CAR 215485                      *
.*                  Recompiled for PATCATBI - Ignore Leave if less than a day *
.*        V9.12.08  02/02/2010  Davin         CAR 215234                      *
.*                  Recompiled for CMXMATRX                                   *
.*        V9.12.07  27/01/2010  J.Tan         CAR 214548                      *
.*                  Recompiled for PATCATBI - Stepdown after bed fees update  *
.*                  27/01/2010  J.Tan         CAR 214877                      *
.*                  Recompiled for CMXMATRX - Checking for range of MBS items *
.*        V9.12.06  19/01/2010  J.Tan         CAR 166439                      *
.*                  Recompiled for PATCMSTP - C/P additional charge stepdown  *
.*        V9.12.05  24/11/2009  Davin         CAR 210721                      *
.*                  Recompiled for CHKCMXPT - I*C on patcmxaf file            *
.*        V9.12.04  09/10/2009  J.Tan         CAR 203934                      *
.*                  Recompiled for PATCATBI - display ICD10 Sugg.Class on Inv.*
.*        V9.12.03  21/09/2009  J.Tan         CAR 204390                      *
.*                  Recompiled for STEPDOWN - mods to old bed fees file       *
.*        V9.12.02  24/07/2009  J.Tan         CAR 201132 & 202168             *
.*                  Recompiled for CMXMATRX - checking for zero MBS amount    *
.*        V9.12.01  05/06/2009  J.Tan         CAR 196010                      *
.*                  Recompiled for CMXMATRX - ICD10 Secondary/Tertiary        *
.*        V9.11.04  16/03/2009  J.Tan         CAR 188205                      *
.*                  Recompiled for PATCATBI - Mods to Non-banked Deposits     *
.*        V9.11.03  08/01/2009  Steve Armstrong   CAR 185927                  *
.*                  Removed isadd on temp file and included extra index in    *
.*                  isbuild (now that CMDLINE has been extended in length     *
.*                  from 80 to 100).                                          *
.*        V9.11.02  20/11/2008  Steve Armstrong   CAR 181373                  *
.*                  Recompiled for changes to PATCATBI.                       *
.*        V9.11.01  30/10/2008 J.Tan      CAR 181263                          *
.*                  Recompiled for PATCATAI - printing Disch.Billing Statement*
.******************************************************************************
.*        V9.10.01  25/09/2008  J.Tan         CAR 178209                      *
.*                  Recompiled for PATCATBI - Fixed checking for Doct.chg rec.*
.*                  25/09/2008  J.Tan         CAR 179009                      *
.*                  Recompiled for STEPDOWN - Check 'Exclude Days of Hosp."   *
.******************************************************************************
.*        V9.09.06  29/02/2008  J.Tan         CAR 162893 & 162609             *
.*                  Recompiled for PATCATBI - Inv.breakdown and Lumpsum amt   *
.*        V9.09.05  20/02/2008  Peter Vela CAR 161535                         *
.*                  Recompiled for PATCATBI                                   *
.*        V9.09.04  24/08/2007  Peter Vela CAR 146143                         *
.*                  Recompiled for PATCATBI                                   *
.*        V9.09.03  20/08/2007 J.Tan          CAR 144656                      *
.*                  Recompiled for PATCATBI - for Multiple Procedures Billing *
.*        V9.09.02  10/08/2007  Peter Vela CAR 146143                         *
.*                  Recompiled for PATCATBI                                   *
.*        V9.09.01  17/07/2007  J.Tan     CAR 140282                          *
.*                  Recompiled for NZPCATBI - Revenue breakdown               *
.******************************************************************************
.*        V9.08.08  22/06/2007  J.Tan     CAR 143507                          *
.*                  Recompiled for PATCMSTP - Chg of adm type                 *
.*                  22/06/2007  J.Tan     CAR 143630                          *
.*                  Recompiled for PATCATBI - Use invoice date as GST eff.date*
.*        V9.08.07  19/06/2007  Mike Laming   CAR 119158                      *
.*                  Recompiled for PATCATBI - read Misc.Chrages by Effec.Date *
.*        V9.08.06  04/05/2007  Mike Laming   CAR 137125                      *
.*                  Add DRG Version to key of PATDGWaf                        *
.*        V9.08.05  19/02/2007 Peter Vela     CAR 135241                      *
.*                  Recompiled for PATCATBI - St. John of God invoice layout  *
.*        V9.08.04  26/02/2007  J.Tan         CAR 120014                      *
.*                  Recompiled for NZPCATBI - NZ exploding misc.item          *
.*        V9.08.03  02/02/2007  Ebon Clements CAR 120001                      *
.*                  Added nz private billing files                            *
.*        V9.08.02  17/11/2006  Peter Vela    CAR 124538                      *
.*                  Recompiled for PATCATBI                                   *
.*                  Recompiled for PATCATBI                                   *
.*                  Added display of PATITMFD.PTITTCER                        *
.*                  Type of Certificate Type B Type C                         *
.*                  28/11/2006  Sandra Barcham    126129                      *
.*                  Fixed I * C pmsmtiaf second index                         *
.*        V9.08.01  18/10/2006  J.Tan         CAR 120502                      *
.*                  Recompiled for PATCATBI - Ignore Doctor Change record     *
.******************************************************************************
.*        V9.07.03  25/09/2006  Peter Vela    CAR 118940                      *
.*                  Recompiled for PATCATBI                                   *
.*        V9.07.02  13/09/2006  Mike Laming   CAR 103813                      *
.*                  Add Hospital check in To Be Invoiced routine at CTBI1000  *
.*        V9.07.01  01/08/2006  J.Tan         CAR 103365                      *
.*                  Recompiled for PATCATBI - John Hopkins                    *
.******************************************************************************
.*        V9.06.01  16/05/2006  Peter Vela    CAR 104103                      *
.*                  Recompiled for PATCATBI - PTCNINVL=12                     *
.******************************************************************************
.*        V9.05.01  06/04/2006  J.Tan             CAR 101054                  *
.*                  Removed reading parameter for Running G/L interface       *
.******************************************************************************
.*        V9.04.07  02/11/2005  Peter Vela        CAR 81394                   *
.*                  Recompiled for PATCATBI                                   *
.*        V9.04.06  31/08/2005  J.Tan         CAR 74153                       *
.*                  Fixed checking for exclusive                              *
.*        V9.04.05  16/06/2005  Mike Laming   CAR 61746                       *
.*                  Recompiled for CLPATDTR - add clear PTDTTIME & PTDTCRST   *
.*        V9.04.04  17/12/2004  Lina Vo                                       *
.*                  Fixed build of temporary PATFINS2                         *
.*        V9.04.03  29/11/2004  Mike Laming   CAR 54534                       *
.*                  Re-comple for PATCMSTP - fix Addit.Charge Description     *
.*                  Mods for multiple hospital I*C on hospital file           *
.*        V9.04.02  23/09/2004  Lina Vo  CAR 53660                            *
.*                  Recompiled for PATCATBI - Multi hospital Theatre Fee      *
.*        V9.04.01  27/08/2004  J.Tan    CAR 52835                            *
.*                  Recompiled for PATCATBI - Multi hospital                  *
.******************************************************************************
.*        V9.03.12  09/06/2004  J.Tan    CAR 50035                            *
.*                  Re-compile for PATCATBI - Mechanical ventilation          *
.*        V9.03.11  22/04/2004  Mike Laming   CAR 46224                       *
.*                  Re-compile for PATCATBI - Theatre DTR sequences           *
.*        V9.03.10  12/02/2004  Henry Son        CAR 47385                    *
.*                  Added PTCNMBSF for checking if we allow more than         *
.*                  Six MBS Items.                                            *
.*        V9.03.09  23/02/2004  Mike Laming   CAR 47440                       *
.*                  Re-compile for PATCATBI - initialise TPATAMTP             *
.*        V9.03.08  19/12/2003 J.Tan   CAR 44093                              *
.*                  Replaced patcashf with comdepaf                           *
.*        V9.03.07  18/11/2003  Henry Son   CAR 39291                         *
.*                  Allow more than 7 Theatre stepdown fees.                  *
.*                  Recompile PATCATBI.                                       *
.*        V9.03.06  03/11/2003  Mike Laming  CAR 43911                        *
.*                  Recompile for PATCATBI - correct GROSSTOT & ACCMTOT       *
.*        V9.03.05  17/10/2003  J.Tan  CAR 44176                              *
.*                  Recompiled for PATCATBI.                                  *
.*        V9.03.04  16/09/2003  CAR 40497   Lina Vo                           *
.*                  Changed index and read of patmchgf to include effective   *
.*                  date.                                                     *
.*                  Recompiled for PATCATBI.                                  *
.*        V9.03.03  11/08/2003  CAR 41072   Mike Laming                       *
.*                  Recompile for PATCATBI to correct Lump Sums in BIL19      *
.*        V9.03.02  04/08/2003  CAR 34330/41952   Mike Laming                 *
.*                  Recompiled for PATCATBI & PATDINVS - Add second temp      *
.*                  file for Misc.Items to change sequence to Date/DTR seq.   *
.*        V9.03.01  01/07/2003  CAR 40951   Peter Vela                        *
.*                  Added data entry for financial year                       *
.******************************************************************************
.*        V9.02.06  22/04/2003  Dean Cramer    CAR 38200                      *
.*                  Include a printed no data message when no data found      *
.*        V9.02.05  12/11/2002  J.Tan                                         *
.*                  Recompiled for PATIVMES                                   *
.*        V9.02.04  30/10/2002  J.Tan                                         *
.*                  Recompiled for CMXMATRX                                   *
.*        V9.02.03  19/09/2002  J.Tan                                         *
.*                  Recompiled for PATCATBI                                   *
.*        V9.02.02  09/09/2002  J.Tan    SRF 20791                            *
.*                  Recompiled for PATCATBI                                   *
.*        V9.02.01  13/08/2002  J.Tan                                         *
.*                  Mods for casemix revenue breakdown                        *
.*        V9.02.00  03/06/2002  Tonii                                         *
.*                  Ported from release 6.09                                  *
.******************************************************************************
.
          INC           STD001FD
          INC           IBASEQFD/INC                 * Sequential Numbers File
          INC           TFILEVAR/INC                 * Generate Temp File Name
          INC           WEBERRFD/INC                 * Web Server Error Logging
          INC           IBAPASFD/INC
          INC           IBAGSTFD/INC
.
          INC           IBATMHFD/INC
          INC           PATDHEAD/INC
.
          INC           AAEDE1FD/INC
          INC           AAEDEBFD/INC
          INC           AAEDTRFD/INC
          INC           COMDEPFD/INC
.
          INC           IBAGEDFD/INC
          INC           IBASECFD/INC
          INC           IBAGINFD/INC
          INC           FMSLMAFD/INC
.
          INC           MLTCFNFD/INC
          INC           OPRDEAFD/INC
          INC           OPRSESFD/INC
          INC           OUTBOAFD/INC
          INC           OUTBB1FD/INC
          INC           OUTDTRFD/INC
          INC           OPRARDFD/INC
          INC           RCPBNKFD/INC
          INC           RCPBDTFD/INC
          INC           RCPDTEFD/INC
.
          INC           PATCOMM/INC
          INC           PATCTFFD/INC
          INC           PATCFAFD/INC
          INC           PMSCIDFD/INC
          INC           PMSCCDFD/INC
          INC           PATDDHFD/INC
          INC           PATDGWFD/INC
          INC           PATMI1FD/INC
          INC           PATMA1FD/INC
          INC           PATMCHFD/INC
          INC           NZPCFNFD/INC
          INC           NZPCMTFD/INC
          INC           NZPFIGFD/INC
          INC           NZPFINFD/INC
          INC           NZPIBRFD/INC
          INC           NZPMCHFD/INC
          INC           NZPMXCFD/INC
          INC           NZPPFEFD/INC
          INC           NZPRBRFD/INC
          INC           NZPRFNFD/INC
          INC           NZPRDTFD/INC
          INC           NZPEXTFD/INC
          INC           NZPPICFD/INC
          INC           NZPSPRFD/INC
          INC           NZPTFEFD/INC
          INC           PATFX1FD/INC
          INC           PATFN1FD/INC
          INC           PATFN2FD/INC
          INC           PATPGRFD/INC
          INC           PATINMFD/INC
          INC           PATITMFD/INC
          INC           PATDO1FD/INC
          INC           PATDTRFD/INC
          INC           PATDRGFD/INC
          INC           PATECDFD/INC
          INC           PATECOFD/INC
          INC           PATTFEFD/INC
          INC           PATTRNFD/INC
          INC           PATDSCFD/INC
          INC           PATIN1FD/INC
          INC           PATFINFD/INC
          INC           PATFIGFD/INC
          INC           PATFMOFD/INC
          INC           PATCONFD/INC
          INC           PATIPEFD/INC
          INC           PATINVFD/INC
          INC           PATCODFD/INC
          INC           PATIBLFD/INC
          INC           PATRBLFD/INC
          INC           PATRFNFD/INC
          INC           PATRFGFD/INC
          INC           PATICUFD/INC
          INC           PATIOVFD/INC
          INC           PATCMTFD/INC
          INC           PMSCMTFD/INC
          INC           PMSHATFD/INC
          INC           PMSSINFD/INC
          INC           PATOVBFD/INC
          INC           PATSRBFD/INC
          INC           PATVENFD/INC
          INC           PATVISFD/INC
          INC           PMSVX1FD/INC
          INC           PATWC1FD/INC
          INC           PATWMAFD/INC
          INC           PATWVEFD/INC
          INC           PATDINVS/INC
          INC           PATSELDT/INC
          INC           PATWR1FD/INC
          INC           PATELGFD/INC
          INC           PATBFEFD/INC
          INC           NZPBFEFD/INC
          INC           NZPIVBFD/INC
          INC           NZPRVBFD/INC
          INC           PATRATFD/INC
          INC           PATRCAUD/INC
.
          INC           PMSCNOFD/INC
          INC           PMSSGAFD/INC
          INC           PMSMTIFD/INC
          INC           PMSMPRFD/INC
          INC           PATAFEFD/INC
          INC           PATASDFD/INC
          INC           PATCMXFD/INC
          INC           PATHDFFD/INC
          INC           PATHLFFD/INC
          INC           PATHSPFD/INC
          INC           PATHTRFD/INC
          INC           PATLDFFD/INC
          INC           PATLSDFD/INC
          INC           PABXVARS/INC
.
          INC           PMSPBRFD/INC
          INC           PMSIDEFD/INC
          INC           PMSEDGFD/INC       * Effective DRG Date
+
.
.          Temporary file used to accumulate data before printing report
.
TEMPFILE IFILE     SQL, FIXED=170, KEY="U1-15"
.
.Name    Type     Size    Physical   Start     Description
.----    ----     ----    --------   -----     -----------
DSECTION DIM       1         1         1       Section of report
.                                              1 = Section 1 (Inv)
.                                              2 = Section 2 (To be inv)
.
DSUBSECT DIM       1         1         2       Sub Section of report
.                                              Section 1:
.                                                 2 = Casemix funding Accomm.
.                                                 3 = Misc items
.                                              Section 2:
.                                                 2 = Casemix funding Accomm.
.                                                 3 = Misc items
.
SUBCODE  DIM       13        13        3       Subsection code
.                                              Section 1.2 & 2.2:
.                                                 AXXX   , XXX  = Adm Type
.                                                 or
.                                                 AXXXYYY, XXX  = Ward
.                                                          YYY  = Claim Type
.
.                                                 ZZZZZZZ       = Section Total
.                                              Section 1.3 & 2.3:
.                                                 XXX    , XXX  = Misc Grp
.                                                    YYYY, YYYY = Item code
.
.                                                 ZZZZZZZ       = Section Total
.                                                                 (Inc Accom)
.
SUBDESC  DIM       30        30        16      Description for Subcode
SUBDESC1 DIM       16        16        46      Description for Subcode
SUBDCOD  DIM       11        11        62      Displayed code for sub code
SUBPER   FORM      8.2       6         73      Period Figure
SUBYTD   FORM      8.2       6         79      YTD Figure
SUBPRY   FORM     10.2       7         85      Prior Year Figure
SUBM01   FORM      8.2       6         92      Month 01 Figure
SUBM02   FORM      8.2       6         98      Month 02 Figure
SUBM03   FORM      8.2       6        104      Month 03 Figure
SUBM04   FORM      8.2       6        110      Month 04 Figure
SUBM05   FORM      8.2       6        116      Month 05 Figure
SUBM06   FORM      8.2       6        122      Month 06 Figure
SUBM07   FORM      8.2       6        128      Month 07 Figure
SUBM08   FORM      8.2       6        134      Month 08 Figure
SUBM09   FORM      8.2       6        140      Month 09 Figure
SUBM10   FORM      8.2       6        146      Month 10 Figure
SUBM11   FORM      8.2       6        152      Month 11 Figure
SUBM12   FORM      8.2       6        158      Month 12 Figure
SUBM13   FORM      8.2       6        164      Month 13 Figure
.
.                  END OF RECORD      170
.
.        Redefine variables for the key for the temp file
.
.Name    Type     Size    Physical   Start     Description
.----    ----     ----    --------   -----     -----------
SECTION  FORM      1         1         1       Section of report
SUBSECT  FORM      1         1         2       Sub Section of report
.
.               WORK AREA
.
ACCDTE          DIM     10
ACCTOTF         FORM    1
AECNFTYP        FORM    1
.
CERTINDC        FORM    1
CURRDATE        DIM     8
CURSESS         DIM     18
DAYFLG          DIM     1
DIM1A           DIM     1
DIM5A           DIM     5
DIM9            DIM     9
DIM13           DIM     13
DIM14           DIM     14
DIM18           DIM     18
DIM24A          DIM     24
.
.ENDFLAG         FORM    1
EFTDATE         DIM     8
.
IBCNMHOS        FORM    1
IBCNPBXI        DIM     9
IBCNUGST        FORM    1
INVNAME         DIM     8
.
MBSFLAG         FORM    1 
MISCITEM        DIM     3
.
OPRDATE         DIM     8
OTCNFTYP        FORM    1
OTCNCFEE        FORM    1
.
TBINAME         DIM     8
TBIFLAG         FORM    1
THCFLG          FORM    2
TMPPER   FORM      8.2       6        Prior Year Figure
TMPYTD   FORM      8.2       6        YTD figure
TMPMTH1  FORM      8.2       6        Month 01 Figure
TMPMTH2  FORM      8.2       6        Month 02 Figure
TMPMTH3  FORM      8.2       6        Month 03 Figure
TMPMTH4  FORM      8.2       6        Month 04 Figure
TMPMTH5  FORM      8.2       6        Month 05 Figure
TMPMTH6  FORM      8.2       6        Month 06 Figure
TMPMTH7  FORM      8.2       6        Month 07 Figure
TMPMTH8  FORM      8.2       6        Month 08 Figure
TMPMTH9  FORM      8.2       6        Month 09 Figure
TMPMTH10 FORM      8.2       6        Month 10 Figure
TMPMTH11 FORM      8.2       6        Month 11 Figure
TMPMTH12 FORM      8.2       6        Month 12 Figure
TMPMTH13 FORM      8.2       6        Month 13 Figure
.
ZERO00          FORM    ".00"
.
CATCR           INIT    "cr"
CODEBT          INIT    "BT"
DPCODE          INIT    "DP"
MCCODE          INIT    "MC"
LAST            INIT    "999"
.
.      EXTRA VARIABLES
.
CALDAYS         FORM    4
CDYSDAYS  FORM      6
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
CDYSYEAR  FORM      2
CURDAT          DIM     8
CMXMSC          FORM    1
CODE            DIM     2
CODE3           DIM     3
CODEA           INIT    "A "
CODECL          INIT    "CL"
CODEDP          INIT    "DP"
.CODEFI          INIT    "FI"
CODEJ           INIT    "J "
CODEPY    INIT      "Py"
CMDLINE         DIM     100
CURSECT         FORM    1
CURSUBS         FORM    1
.
DIM4            DIM     4
DIM4A           DIM     4
DIM18A          DIM     18
DIM30           DIM     30
.
FIRSTFLG        FORM    1
FORM3A          FORM    3
FILEOPEN        DIM     30
FIVE9           FORM    "59"
FINYTD          FORM    8.2
FNAMEI          DIM     8
FNAMEW          DIM     8
FPDATE          DIM     10
FDD             FORM    2
FMM             FORM    2
FYY             FORM    2
FCC             FORM    2
FTDD            DIM     2
FTMM            DIM     2
FTYY            DIM     2
FTCC            DIM     2
.
IBCNAESN  DIM       3
IBCNOPSN  DIM       3
IBCNBLSN  DIM       3
IBCNMASN  DIM       3
IBCNRASN  DIM       3
IBCNINSN  DIM       3
.
JYEAR           FORM    2
.
MDESC1          DIM     72
MDESC2          DIM     72
MDESC3          DIM     72
MINDEX          FORM    2
MONNAME         DIM     12
.
NOSUBS          FORM    1
NOTCYR          FORM    1
NOWYEAR         DIM     4
NOWCC           DIM     2          * I CAR 40951
NOWYY           DIM     2          * I CAR 40951
NUMPERS         FORM    2
.
OPNFLAG         FORM    "0"        * Used in stepdown
OPCNCONS        DIM     1
.
RECCOUNT        FORM    10
RECCOUN2        FORM    10
.
SUMM1           INIT    "FEES INVOICED SUMMARY"
SUMM2           INIT    "TO BE INVOICED SUMMARY"
SP14            INIT    "              "
SECTHD          DIM     30
SAVBEND         FORM    3
SAVALLW         FORM      6.2
SAVDISC         FORM      6.2
SAVKEY15        DIM     15
STYTD           FORM    2
SUBHEAD         DIM     30
SYSID           DIM     13
SYSTEM          FORM    1
.
TFEEIND         FORM    1
TOMINUS         INIT    " -A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y-Z-"
.
WARDCODE        DIM      3
WDATE1          DIM      8
WDATE2          DIM      8
WORK1           FORM    10.2
WORK2           FORM    10.2
WBSEUID         DIM     10
.
XLCNT           FORM    2
.
YEARTTL         DIM      19
.
ACCOMTL         INIT    "ACCOM: "
ACCTL1          INIT    "WARD "
ACCTL2          INIT    "  CLAIM TYPE "
ACCTL3          INIT    "MATRN : "
ACCTL4          INIT    "CLAIM TYPE "
ASCBIL19        INIT    "ASCBIL19"
CLSBRA          INIT    ")"
CODEHT          INIT    "HT"
DAILY           INIT    "DAILY: "
FFIN            INIT    "ffin"
FMSLMA          INIT    "fmslmaaf"
MONTH1          INIT    "     JANUARY"
MONTH2          INIT    "    FEBRUARY"
MONTH3          INIT    "       MARCH"
MONTH4          INIT    "       APRIL"
MONTH5          INIT    "         MAY"
MONTH6          INIT    "        JUNE"
MONTH7          INIT    "        JULY"
MONTH8          INIT    "      AUGUST"
MONTH9          INIT    "   SEPTEMBER"
MONTH10         INIT    "     OCTOBER"
MONTH11         INIT    "    NOVEMBER"
MONTH12         INIT    "    DECEMBER"
OPNBRA          INIT    "("
SECT1           INIT    "FEES INVOICED DETAIL"
SECT2           INIT    "TO BE INVOICED DETAIL"
SYSIP           INIT    "   Inpatient "
TFIN            INIT    "tfin"
UNKCLM          INIT    "UNKNOWN CLAIM CODE"
UNKMISC         INIT    "UNKNOWN MISC CODE "
UNKMGRP         INIT    "UNKNOWN MISC GROUP "
Z13             INIT    "ZZZZZZZZZZZZZ"
.ZERO8           INIT    "0000    "    
.
.
.         Web Variables (only the include files use these variables)
.
DAYFORMT  DIM       4
NJAN      INIT      "January"
NFEB      INIT      "February"
NMAR      INIT      "March"
NAPR      INIT      "April"
NMAY      INIT      "May"
NJUN      INIT      "June"
NJUL      INIT      "July"
NAUG      INIT      "August"
NSEP      INIT      "September"
NOCT      INIT      "October"
NNOV      INIT      "November"
NDEC      INIT      "December"
.
KEY13A    DIM       13
HOSPFLAG  FORM      1
HOSPID    DIM       3
HTMLFILE  FIFO      ASCII, FIXED=250
MTHNAM3   DIM       3
MTHNAM3A  DIM       3
.
CFPAYCOD  DIM       3        * 3M Codefinder PAY Code
.
.         end web variables
.   
PRGID     INIT      "IBAADT09"
PRGNAM    INIT      "CASEMIX LUMPSUM REVENUE BREAKDOWN REPORT"
VERSION   INIT      "V12.00.00"
+
.
.        ======================================================================
.        MAIN0000: Main program loop
.        ======================================================================
.
.        Start of program
.
         CALL      INIT0000                      * Initialiation routine
         BRANCH    EXIT,MAIN9999                 * Init failure
.
MAIN1000 CALL      OPTN0000                      * Select option to be run
         BRANCH    EXIT,MAIN9999                 * They want to leave (sob).
         CALL      OPST0000                      * Do initialisation for option
.
         CALL      GENF0000                      * Generate fees invoice section
.
         CALL      GENT0000                      * Generate section 2 of report
.
         CALL      PRNT0000                      * Print the report
.
MAIN3000 CALL      ENDP0000                      * Do any post processing
         GOTO      MAIN1000                      * Get the next option
.
MAIN9999 CHAIN     PGM                           * Exit
         STOP
+
.        ======================================================================
.        INIT0000: Initialisation routine
.        ======================================================================
.
INIT0000 CALL      DISPHEAD                      * Display program heading
         CALL      IBACLOCK
         PACK      CURRDATE,CCC,CYY,CMM,CDD
         REP       " 0",CURRDATE
.
.        Open files
.
         DISPLAY   *P56:24,"Opening patdschf";
         OPEN      PATDSCH1,"patdschf"
.
         DISPLAY   *P64:24,"patmi1af";
         OPEN      PATMI1A1,"patmi1af"
.
         DISPLAY   *P64:24,"patma1af";
         OPEN      PATMA1A1,"patma1af"
         OPEN      PATMX1A1,"patmx1af"
.
         DISPLAY   *P64:24,"patmchgf";
         OPEN      PATMCHG1,"patmchgf"
.
         DISPLAY   *P64:24,"patitemn";
         OPEN      PATITEM1,"patitemn"
.
         DISPLAY   *P64:24,"patdgwaf";
         OPEN      PATDGWA1,"patdgwaf"
.
         DISPLAY   *P64:24,"patwr1af";
         OPEN      PATWR1A1,"patwr1af"
.
         DISPLAY   *P64:24,"pathspaf";
         OPEN      PATHSPA1,"pathspaf"
.
         DISPLAY   *P64:24,"pattranf";
         OPEN      PATTRAN2,"pattranf"
.
         DISPLAY   *P64:24,"patsrbaf"; 
         OPEN      PATSRBA1,"patsrbaf"
.
         DISPLAY   *P64:24,"patovbaf";
         OPEN      PATOVBA1,"patovbaf"
.
         DISPLAY   *P64:24,"patdtraf";
         OPEN      PATDTRA1,"patdtraf"
         OPEN      PATDTRA3,"patdtraf"
.
         DISPLAY   *P64:24,"pmsmtiaf";
         OPEN      PMSMTIA1,"pmsmtiaf"
         OPEN      PMSMTIA2,"pmsmtiaf"
.
         DISPLAY   *P64:24,"patdrgaf";
         OPEN      PATDRGA1,"patdrgaf"
.
         DISPLAY   *P64:24,"patfn1af";
         OPEN      PATFN1A1,"patfn1af"
.
         DISPLAY   *P64:24,"patdo1af";
         OPEN      PATDO1A1,"patdo1af"
.
         DISPLAY   *P64:24,"patinmaf";
         OPEN      PATINMA1,"patinmaf"
.
         DISPLAY   *P64:24,"oprdetaf";
         OPEN      OPRDETA1,"oprdetaf"
         OPEN      OPRDETA2,"oprdetaf"
.
         DISPLAY   *P64:24,"oprsesaf";
         OPEN      OPRSESA1,"oprsesaf"
.
         DISPLAY   *P64:24,"patrfnaf";
         OPEN      PATFINS1,"patrfnaf"
         OPEN      PATFINS2,"patrfnaf"
.
         DISPLAY   *P64:24,"patcodes";
         OPEN      PATCODE1,"patcodes"
.
         DISPLAY   *P64:24,"aaede1af";
         OPEN      AAEDE1A1,"aaede1af"
.
         DISPLAY   *P64:24,"aaedtref";
         OPEN      AAEDTRE1,"aaedtref"
.
         DISPLAY   *P64:24,"patvisaf";
         OPEN      PATVISA1,"patvisaf"
.
         DISPLAY   *P64:24,"pmsvx1af";                                *I-103813
         OPEN      PMSVX1A1,"pmsvx1af"                                *I-103813
.
         DISPLAY   *P64:24,"patipenf";
         OPEN      PATIPEN1,"patipenf"
.
         DISPLAY   *P64:24,"oprardaf";
         OPEN      OPRARDA1,"oprardaf"
.
         DISPLAY   *P64:24,"nzprbraf";
         OPEN      NZPRBRA1,"nzprbraf"
.
         DISPLAY   *P64:24,"nzptfeaf";
         OPEN      NZPTFEA1,"nzptfeaf"
         OPEN      NZPTFEA2,"nzptfeaf"
.
         DISPLAY   *P64:24,"nzpcmtaf";
         OPEN      NZPCMTA1,"nzpcmtaf"
         OPEN      NZPCMTA2,"nzpcmtaf"
         OPEN      NZPCMTA3,"nzpcmtaf"
.
         DISPLAY   *P64:24,"mltcfnaf";
         OPEN      MLTCFNA1,"mltcfnaf"
.
         DISPLAY   *P64:24,"nzppicaf";
         OPEN      NZPPICA1,"nzppicaf"
         OPEN      NZPPICA2,"nzppicaf"
.
         DISPLAY   *P64:24,"nzpcfnaf";
         OPEN      NZPCFNA1,"nzpcfnaf"
.
         DISPLAY   *P64:24,"nzppfeaf";
         OPEN      NZPPFEA1,"nzppfeaf"
.
         DISPLAY   *P64:24,"nzpibraf";
         OPEN      NZPIBRA1,"nzpibraf"
.
         DISPLAY   *P64:24,"nzpfinaf";
         OPEN      NZPFINA1,"nzpfinaf"
         OPEN      NZPFINA2,"nzpfinaf"
.
         DISPLAY   *P64:24,"nzpfigaf";
         OPEN      NZPFIGA1,"nzpfigaf"
         OPEN      NZPFIGA2,"nzpfigaf"
.
         DISPLAY   *P64:24,"nzpspraf";
         OPEN      NZPSPRA1,"nzpspraf"
         OPEN      NZPSPRA2,"nzpspraf"
.
         DISPLAY   *P64:24,"nzprfnaf";
         OPEN      NZPRFNA1,"nzprfnaf"
         OPEN      NZPRFNA2,"nzprfnaf"
.
         DISPLAY   *P64:24,"controlf";
         OPEN      CONTROLF,"controlf"
         READ      CONTROLF,ZERO;*43,IBCNMHOS:
                                 *85,IBCNUGST
.        READ      CONTROLF,EIGHTY;*1,HLBMDGUP,HLBMDGUA,HLBMDGMU:
.                                     HLBMDGUU:
.                                *105,HLBMDGAD,HLBMDGDS,HLBMDGTR:
.                                     HLBMDGRG
.
         READ      CONTROLF,TEN;*104,PTCNMBSF:                         *C-47385
                                *192,CACCFEE:
                                *217,CAUDQ  * added for V5.63 - SRF 105195
         READ      CONTROLF,TEN3;*211,CINV1ST,*245,CHOSTYP
         READ      CONTROLF,TEN5;*247,CSTDOWN
         READ      CONTROLF,TEN8;*163,CGLPATH
         READ      CONTROLF,TEN9;*212,CFEETYP
         READ      CONTROLF,TWENTY;*164,PTRESDAY:
                                   *211,PTCNCNDY
         READ      CONTROLF,TWENTY1;*44,PTCNIDES
         READ      CONTROLF,THIRTY;*200,AECNFTYP
         READ      CONTROLF,THIRTY1;*163,OTCNFTYP,OTCNCFEE
         READ      CONTROLF,FIVE9;*1,CDLSTEP,*210,PTMBSINV
         READ      CONTROLF,SEVENTY9;*68,PTCNMFEE
         READ      CONTROLF,EIGHTY;*248,PTCNPEFR
         READ      CONTROLF,EIGHTY8;*102,CFEEDT,*162,PTCFEEOF:
                                   *194,PTCFEEAE,PTCFEEOP
         READ      CONTROLF,NINTY8;*127,PTCNPMIS
         READ      CONTROLF,HUND05;*99,PTCNNWCM:
                                   *193,PTCNITXT:
                                   *194,PTCNPCOM,PTCNLASR,PTCNBLSI,PTCNXLBI:
                                   *200,PTCNPJCI,PTCNPFED
.
         PACK      CURDAT WITH CCC,CYY,CMM,CDD
         REP       " 0",CURDAT
.
.        Set up the names of the temporary files used
.
         CALL      TFILENAM                * Get temp file name
         MOVE      TFILNAME,FNAMEI
.
         CALL      TFILENAM                * Get temp file name
         MOVE      TFILNAME,FNAMEW
.
...  used in PATCATBI CRMV0000
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEX
.
...  used in PATCATBI PTMP0000
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEZ
.
...  used in PATCATBI PT2P0000
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEY
.
...  used in PABXBILL
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,PBXFNAME
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,PBXFNAM2
.
.        Get the current financial period (used as a default year)
.
INIT0500 PACK      CPTDATE,CCC,CYY,CMM,CDD
         REP       " 0",CPTDATE
         CALL      GPERD
         BRANCH    EXIT,INIT9000
.
         MOVE      DRGYR,NOWYEAR                 * Save the year.
.
.        Set up the month descriptions for the heading.
.        MDESC1 contains the first  six periods of the financial year
.        MDESC2 contains the second six periods of the financial year
.        MDESC3 contains the third six periods of the financial year
.        NUMPERS contains the number of periods in the financial year
.
         CLEAR     MDESC1                        * Clear the description
         CLEAR     MDESC2                        * Clear the description
         CLEAR     MDESC3                        * Clear the description
.
         MOVE      ZERO,NUMPERS
         PACK      KEY6,NOWYEAR,SP2
         CALL      RDSDRGA1                      * Position at start of year
INIT1000 CALL      RDKDRGA1
         BRANCH    OVRCD,INIT4000                * Finished loop
.
         MATCH     DRGYR,NOWYEAR                 * Still the same year ?
         GOTO      INIT4000 IF NOT EQUAL         * No. Finished loop
.
.        Add the description for this period to the appropriate variable
.
         ADD       ONE,NUMPERS                   * Increment number of periods
.
         COMPARE   TEN3,NUMPERS                  * Done the 2nd 6 periods yet ?
         GOTO      INIT3000 IF NOT LESS          * Yes.
.
         COMPARE   SEVEN,NUMPERS                 * Done the 1st 6 periods yet ?
         GOTO      INIT2000 IF NOT LESS          * Yes.
.
.        Add the description to the 1st six periods
.
         APPEND    SP2,MDESC1                    * Add leading blanks
         APPEND    DRGMDSC,MDESC1                * Append description
         APPEND    SP1,MDESC1                    * Add trailing blanks
         GOTO      INIT1000
.
.        Add the description to the 2nd six periods
.
INIT2000 APPEND    SP2,MDESC2                    * Add leading blanks
         APPEND    DRGMDSC,MDESC2                * Append description
         APPEND    SP1,MDESC2                    * Add trailing blanks
         GOTO      INIT1000
.
.        Add the description to the 3rd six periods
.
INIT3000 APPEND    SP2,MDESC3                    * Add leading blanks
         APPEND    DRGMDSC,MDESC3                * Append description
         APPEND    SP1,MDESC3                    * Add trailing blanks
         GOTO      INIT1000
.
.        Finished processing financial year
.
INIT4000 APPEND    SP30,MDESC1
         APPEND    SP30,MDESC1
         APPEND    SP30,MDESC1
.
         APPEND    SP30,MDESC2
         APPEND    SP30,MDESC2
         APPEND    SP30,MDESC2
.
         APPEND    SP30,MDESC3
         APPEND    SP30,MDESC3
         APPEND    SP30,MDESC3
.
         RESET     MDESC1                        * Reset description 1
         RESET     MDESC2                        * Reset description 2
         RESET     MDESC3                        * Reset description 2
.
.        Restore the financial year record
.
         PACK      KEY6,NOWYEAR,SP2
         CALL      RDSDRGA1
         CALL      RDKDRGA1
.
         MOVE      ZERO,EXIT                     * Initialisation succeeded
         GOTO      INIT9999
.
.        Error finding current period
.
INIT9000 KEYIN      *P1:24,*EL,*B,*V2LON:
                    "** Error: Current Date Missing in the Period Range":
                    " File ** ",*EOFF,ANS,*P1:24,*EL;
.
INIT9900 MOVE       ONE,EXIT                     * Initialisation failed
.
INIT9999 RETURN
+
.        ======================================================================
.        OPTN0000: Select option to be run
.        ======================================================================
.
OPTN0000 CALL      DISPHEAD
         KEYIN     *P1:3,*EF:
                   *P1:4,*V2LON,*DV,ZERO,*HOFF," = Exit":
                *P1:5,*V2LON,*DV,ONE,*HOFF," = Print Casemix Revenue Breakdown":
                   *P1:8,"Option : ",*EL,*V2LON,OPTION
.
         COMPARE   ZERO TO OPTION                * Check if they want to exit
         GOTO      OPTN9000 IF EQUAL
.
         BRANCH    OPTION,OPTN1000               * Validate option
.
.        Invalid selection
.
         DISPLAY   *P40:8,*EL,*V2LON,*B,"** Invalid Selection **";
         GOTO      OPTN0000
.
.        Determine which system this report is for
.
OPTN1000 MOVE      THREE,FSTSYS                  * starting system for inpat
         MOVE      THREE,FEDSYS                  * ending system for inpat
.
.        Set up from date for the report
.
         MOVE      CFEEDT,DIM8                   * Default to inpatient
         LOAD      DIM8,FSTSYS,PTCFEEAE,PTCFEEOP,CFEEDT,PTCFEEOF
.
         UNPACK    DIM8 WITH FTCC,FTYY,FTMM,FTDD
         MOVE      FTCC,FCC
         MOVE      FTYY,FYY
         MOVE      FTMM,FMM
         MOVE      FTDD,FDD
         MOVE      FCC,CCENT
         MOVE      FYY,CYEAR
         MOVE      FMM,CMON
         MOVE      FDD,CDAY
         CALL      PACDATE
         MOVE      CPCDATE,FPDATE
         REP       " 0",FPDATE
.
         MOVE      ZERO,HOSPFLAG
         IF        IBCNMHOS=1
           CALL      KHOSP000               * Keyin hospital ID
         ENDIF
.
.        Get the year of the report
.
         MOVE       SYSIP,SYSID
         MOVE       DRGYR,NOWYEAR
.                                                                  * I CAR 40951
         DISPLAY    *P1:11,*EF,"Report for Year : ",*V2LON,NOWYEAR
.
         KEYIN      *P19:11,*V2LON,*RV,*JR,*DE,NOWYEAR
.
         UNPACK     NOWYEAR,NOWCC,NOWYY
         MATCH      SP2,NOWCC
         IF         @EQUAL
           MOVE       CCC,NOWCC
         ENDIF
         PACK       NOWYEAR,NOWCC,NOWYY
         REP        " 0",NOWYEAR
         DISPLAY    *P19:11,*V2LON,NOWYEAR                     * end I CAR 40951
.
.        NOTCYR is a flag to say if we are doing the current financial year.
.        If it a "1" then we don't do the "To Be Invoiced" section of the report
.
         MOVE       ZERO,NOTCYR       * Assume this is current financial year
.
         MATCH      NOWYEAR,DRGYR
         GOTO       OPTN2000 IF EQUAL
.
.        Check with the indicator if we are doing the first of month 
.        invoice to go in previous month
.
         COMPARE    ONE,CINV1ST
         GOTO       OPTN1100 IF NOT EQUAL
.
.        If this is the first day of financial year, then do the "To Be 
.        Invoiced" section of the report
.
         PACK       DIM8,CCC,CYY,CMM,CDD   * Current date
         REP        " 0",DIM8
         MATCH      DIM8,DRGFDTE           * Is today is the first day of
         GOTO       OPTN2000 IF EQUAL      * financial year ?
.
OPTN1100 MOVE       ONE,NOTCYR        * This is not the current financial year
.
.        Pack up the title
.
OPTN2000 PACK       YEARTTL WITH SYSID,OPNBRA,NOWYEAR,CLSBRA
.        DISPLAY    *P42:2,*V2LON," - ",YEARTTL
.
         MOVE       ZERO,EXIT         * Successful option selected
         GOTO       OPTN9999
.
OPTN9000 MOVE       ONE,EXIT          * No option selected
.
OPTN9999 RETURN
.
.------------------------------------------------------------------------
.         KHOSP000 - Keyin hospital ID
.------------------------------------------------------------------------
KHOSP000  MOVE       ZERO,OPTION
          MOVE       SP10,HOSPID
          KEYIN      *P1:4,*EF,*V2LON,"Hospital ID : ",HOSPID;
          ENDSET     HOSPID
          APPEND     SP70,HOSPID
          RESET      HOSPID
.
          MATCH      SP3,HOSPID
          GOTO       KHOSP200 IF EQUAL       * all Hospitals
          PACK       KEY3,HOSPID
          CALL       RDPTHSP1
          COMPARE    ZERO,OVRCD
          GOTO       KHOSP100 IF EQUAL
          DISPLAY    *P1:24,*EL,"Invalid Hospital ID";
          CALL       HITENTER
          GOTO       KHOSP000
.
KHOSP100  DISPLAY    *P22:4,*V2LON,PTHSNAME;
          MOVE       ONE,HOSPFLAG
          GOTO       KHOSP999
.
KHOSP200  DISPLAY    *P22:4,*V2LON,"All";
KHOSP999  RETURN
.
.        ======================================================================
.        OPST0000: Initialise for the report
.        ======================================================================
.
OPST0000 MOVE       ZERO,CPAGENO                 * Init page number
         MOVE       "60",CLNO                    * Init line number
         CLOCK      TIME,CTIMEIS                 * Init starting time
.
         DISPLAY    *P1:12,*EF;
.
.        Delete the work file if it exists
.
         CLOSE      TEMPFILE
         CLEAR      CMDLINE
         APPEND     "iserase ",CMDLINE
         APPEND     FNAMEW,CMDLINE
         RESET      CMDLINE
.
         EXECUTE    CMDLINE,TASKID               * Delete the work file
.
.        Create the work file
.
         CLEAR      CMDLINE
         APPEND     "isbuild ",CMDLINE
         APPEND     FNAMEW,CMDLINE
         APPEND     " 170 U1-15",CMDLINE
         RESET      CMDLINE
.
         EXECUTE    CMDLINE,TASKID               * Create the work file
         OPEN       TEMPFILE,FNAMEW              * Open the work file
.
.        Initialise the current section
.
         MOVE       ONE,CURSECT                  * Start with section one
.
OPST9999 RETURN
.
.        ======================================================================
.        GENF0000: Generate the fee's invoiced section of the report
.        ======================================================================
.
GENF0000 MOVE       FSTSYS,SYSTEM                * Current system
         MOVE       ZERO,RECCOUNT                * initialise counter
         DISPLAY    *P1:24,*EL,*P10:24,"Financial Type :";
.
.        Position ourselves at the appropriate position in the file
.        and then loop until we have finished
.
GENF0100 IF         HOSPFLAG=1
           PACK       KEY28,HOSPID,SYSTEM,SP6,NOWYEAR,ANSA,SP20
           CALL       RDSFINS2                   * Initialise file
         ELSE
           PACK       KEY28,SYSTEM,SP6,NOWYEAR,ANSA,SP20
           CALL       RDSFINS1                   * Initialise file
         ENDIF
.
GENF1000 IF         HOSPFLAG=1
           CALL       RDKFINS2                   * Get the next record
         ELSE
           CALL       RDKFINS1                   * Get the next record
         ENDIF
         BRANCH     OVRCD,GENF9999               * No more data in file
.
         MATCH      ANSA,FINTYPE                 * fees generated ?
         GOTO       GENF9999 IF NOT EQUAL        * no.
.
         IF         HOSPFLAG=1
           MATCH       SP10,HOSPID
           IF          !@EQUAL
             MATCH       FINHOSP,HOSPID
             GOTO        GENF9999 IF NOT EQUAL
           ENDIF
         ENDIF
.
         ADD        ONE,RECCOUNT                 * increment counter
         IF         (RECCOUNT = 1) | (RECCOUNT%1000) = 0
            DISPLAY    *P30:24,*V2LON,FINSYS,SP1,FINTYPE,SP1,FINCODE;
         ENDIF
.
.        Validate the system
.
         MOVE       ZERO,CMXMSC                  * initialise casemix misc.
         COMPARE    SYSTEM,FINSYS                 * Change of system ?
         GOTO       GENF9999 IF NOT EQUAL        * Get the next system
.
.        Check that we still have the correct financial year
.
         MATCH      FINYEAR,NOWYEAR              * Still current year ?
         GOTO       GENF9999 IF NOT EQUAL        * No. 
.
.        Add the data to the work file
.
         CALL       WKEY0000                     * Get the key for work file
         CALL       ADDW0000
.
         MOVE       Z13,SUBCODE                   * Add the totals key to work
         CALL       ADDW0000
         GOTO       GENF1000
.
GENF9999 RETURN
.
.        ======================================================================
.        GENT0000: Generate the to be invoiced section of the report
.        ======================================================================
.
GENT0000 BRANCH    NOTCYR,GENT9999               * Not cur yr -> no to be inv.
.
         CLOSE     PATFINS1                      * Close the file
         CLOSE     PATFINS2                      * Close the file
         MOVE      TWO,CURSECT                   * To-be-invoiced section
.
.        Create a temporary index file with the same format as PATFINS
.
         CALL      INDZ0000                      * Create a temp index file
         OPEN      PATFINS1,FNAMEI               * Open temp file as PATFINS
         OPEN      PATFINS2,FNAMEI               * Open temp file as PATFINS
.
.        Calculate the To-Be-Invoiced data, and put into tempfile
.
         CALL      CTBI0000                      * Calculate to be invoiced
.
         OPEN      PATFINS1,FNAMEI               * Open temp file as PATFINS
         OPEN      PATFINS2,FNAMEI               * Open temp file as PATFINS
         CALL      GENF0000                      * Process temp file
.
.        Get rid of the temporary file
.
         CLOSE     PATFINS1                      * Close temporary file
         CLOSE     PATFINS2                      * Close temporary file
         CALL      KILL0000                      * Delete temporary index file
         OPEN      PATFINS1,"patrfnaf"           * Re-open PATFINS file
         OPEN      PATFINS2,"patrfnaf"           * Re-open PATFINS file
.
GENT9999 RETURN
+
.        ======================================================================
.        PRNT0000: Loop over the work file, and print the report
.        ======================================================================
.
PRNT0000 DISPLAY   *P1:24,*EL,*P10:24,"Printing : ";
.        CALL      FIXA0000                      * Fix accom/misc totals
.
         MOVE      ZERO,RECCOUNT                 * initialise counter
         MOVE      ZERO,RECCOUN2                 * initialise counter
         MOVE      ZERO,CURSECT                  * Initialise current section
         MOVE      ZERO,CURSUBS                  * Initialise current subsect
         MOVE      SP20,KEY15                    * Loop from start of work file
         CALL      RDSWORK                       * Positional read of work
PRNT1000 CALL      RDKWORK                       * Read the next record
         BRANCH    OVRCD,PRNT8000                * Finished work file
.
         COMPARE   CURSECT,SECTION               * Check for new section
         GOTO      PRNT2000 IF EQUAL             * Same section
.
         CALL      PSUM0000                      * Print the summary section
         MOVE      "60",CLNO                     * Force new page
         MOVE      SECTION,CURSECT               * Save new section number
         MOVE      SUBSECT,CURSUBS               * Save new sub-section number
.
.        Load up the section and subsection headings
.
         LOAD      SECTHD,CURSECT,SECT1,SECT2
.
         ADD       ONE,RECCOUNT                  * increment counter
         IF        (RECCOUNT = 1) | (RECCOUNT%1000) = 0
           DISPLAY   *P21:24,*EL,*V2LON,SECTHD     * Display the section name
         ENDIF
.
PRNT2000 COMPARE   CURSUBS,SUBSECT               * Check for a new subsection
         GOTO      PRNT3000 IF EQUAL             * Same subsection
.
         COMPARE   "52",CLNO                     * Enough room on page ?
         GOTO      PRNT2200 IF NOT LESS          * No.
.
         CALL      ENDS0000                      * End of a subsection
         CALL      SUBS0000                      * Print Subsection title
         GOTO      PRNT2400
.
PRNT2200 MOVE      "60",CLNO                     * Force a new page
.
PRNT2400 MOVE      SUBSECT,CURSUBS               * Save new sub-section number
.
PRNT3000 CALL      PDAT0000                      * Print this data record
         GOTO      PRNT1000                      * Get the next record
.
.        End of work file. Check if anything was produced
.
PRNT8000 CALL      PSUM0000                      * Print the last summary
         CALL      ENDS0000                      * End of section 
.
.
         COMPARE   ZERO,CPAGENO                  * Still on page zero ?
         GOTO      PRNT9000 IF NOT EQUAL         * No. A report was produced
.
         DISPLAY   *P1:24,*EL,*V2LON,*B:
                   "** No data found for the report ",YEARTTL:
                   " **",*W3;
         PRINT     *N,"Casemix Lumpsum Revenue Breakdown Report.";
         PRINT     *N,"** No data found for the report ",YEARTTL;
         GOTO      PRNT9999
.
PRNT9000 PRINT     *N,"  ***  END OF REPORT  ***"
         DISPLAY   *P10:24,*EL,*V2LON:
                   "** Report Generation Completed **";
.
PRNT9999 RETURN
.
.        ======================================================================
.        PDAT0000: Print the current work file record
.        ======================================================================
.
PDAT0000 MATCH      Z13,SUBCODE                   * Check for a totals record
         GOTO       PDAT2000 IF EQUAL            * Yes. Print totals record
.
.        Check for a non-zero line
.
         MOVE       ZERO,FORM2                   * Start from the beginning
PDAT1000 ADD        ONE,FORM2                    * Get next variable
.
         COMPARE    TEN6,FORM2
         GOTO       PDAT9999 IF NOT LESS
.
         LOAD       WORK1,FORM2,SUBM01,SUBM02,SUBM03,SUBM04:
                                SUBM05,SUBM06,SUBM07,SUBM08:
                                SUBM09,SUBM10,SUBM11,SUBM12:
                                SUBM13,SUBPER,SUBPRY
.
.        Check if this is non-zero
.
         COMPARE    ZERO,WORK1
         GOTO       PDAT1000 IF EQUAL
.
.        We have a line with at least one non-zero figure
.
PDAT2000 COMPARE   "52",CLNO
         CALL      HEAD0000 IF NOT LESS          * Start new page if neccessary
.
         MATCH     Z13,SUBCODE                    * Check for a totals record
         CALL      TOTL0000 IF EQUAL             * Print a line of '-'s
.
         ADD       ONE,RECCOUN2                  * increment counter
         IF        (RECCOUN2 = 1) | (RECCOUN2%1000) = 0
           DISPLAY   *P43:24,*EL,*V2LON,SUBDESC;
         ENDIF
.
.        Print the data
.
         CALL      PRTD0000                      * Print the work file record
.
         MATCH     Z13,SUBCODE                    * Check if not a totals rec.
         CALL      BLNK0000 IF NOT EQUAL         * Print a blank line
.
PDAT9999 RETURN
.
.        ======================================================================
.        PRTD0000: Print the data variables
.        ======================================================================
.
PRTD0000 COMPARE   TEN2,NUMPERS
         GOTO      PRTD2000 IF NOT EQUAL
.
.        Print 12 periods
.
         PRINT     *1,"!",*3,SUBDESC,*33,"!",*34,SUBPER,*46,"!":
                   *47,SUBYTD,*59,"!",*60,SUBM01,*72,SUBM02:
                   *84,SUBM03,*96,SUBM04,*108,SUBM05,*120,SUBM06,*132,"!":
                   *N,"!",*3,SUBDESC1,*20,SUBDCOD,*33,"!",*45,SUBPRY:
                   *59,"!",*60,SUBM07:
                   *72,SUBM08,*84,SUBM09,*96,SUBM10:
                   *108,SUBM11,*120,SUBM12,*132,"!"
.
         ADD       TWO,CLNO                      * Increment the line count
         GOTO      PRTD9999
.
.        Print 13 periods
.
PRTD2000 PRINT     *1,"!",*3,SUBDESC,*33,"!",*34,SUBPER,*46,"!":
                   *47,SUBYTD,*59,"!",*60,SUBM01,*72,SUBM02:
                   *84,SUBM03,*96,SUBM04,*108,SUBM05,*120,SUBM06,*132,"!":
                   *N,"!",*3,SUBDESC1,*20,SUBDCOD,*33,"!",*45,SUBPRY:
                   *59,"!",*60,SUBM07:
                   *72,SUBM08,*84,SUBM09,*96,SUBM10:
                   *108,SUBM11,*120,SUBM12,*132,"!":
                   *N,"!",*33,"!",*46,"!",*59,"!",*60,SUBM13,*132,"!"
.
         ADD       THREE,CLNO                    * Increment the line count
.
PRTD9999 RETURN
.
.        ======================================================================
.        BLNK0000: Print a "blank" line
.        ======================================================================
.
BLNK0000 PRINT     *1,"!",*33,"!",*46,"!",*59,"!",*132,"!"
         ADD       ONE,CLNO
         RETURN
.
.        ======================================================================
.        TOTL0000: Print a line of '-'s
.        ======================================================================
.
TOTL0000 PRINT     *1,"!",*33,"!------------!------------!----------------":
                   "---------------------------------------------------":
                   "-----!"
         ADD       ONE,CLNO
         RETURN
.
.        ======================================================================
.        ENDS0000: Print the end of a section
.        ======================================================================
.
ENDS0000 PRINT     "*-------------------------------------------------":
                   "--------------------------------------------------":
                   "-------------------------------*"
         ADD       ONE,CLNO
         RETURN
.
.        ======================================================================
.        PSUB0000: Print a subheading line
.        ======================================================================
.
PSUB0000 PRINT     *1,"!",SUBHEAD,*33,"!",*46,"!",*59,"!",*132,"!"
.
.        Convert letters to '-'s and reprint (gives an underline)
.
         REP       TOMINUS,SUBHEAD
         PRINT     *1,"!",SUBHEAD,*33,"!",*46,"!",*59,"!",*132,"!"
.
         ADD       TWO,CLNO
         RETURN
.
.        ======================================================================
.        FIXA0000: Add the Accommodation totals to the Misc Item totals
.        ======================================================================
.
FIXA0000 PACK      KEY15,ONE,TWO,Z13             * Sect 1 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA5000                * No Accom in section 1
.
         CALL      SAVT0000                      * Save the total amounts
         PACK      KEY15,ONE,FOUR,Z13             * Sect 1 Misc Item total key
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA3000                * No Misc Items in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA5000
.
FIXA3000 PACK      KEY15,ONE,TWO,Z13             * Sect 1 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      FOUR,SUBSECT                 * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC
         CALL      UPWORK                        * Update the description
.
.        Fix up the accommodation/misc item totals for section 2
.
FIXA5000 PACK      KEY15,TWO,TWO,Z13             * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA9999                * No Accom in section 2
.
         CALL      SAVT0000                      * Save the total amounts
         PACK      KEY15,TWO,FOUR,Z13           * Sect 2 Misc Item total key
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA8000                * No Misc Items in section 2
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA9999
.
FIXA8000 PACK      KEY15,TWO,TWO,Z13             * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
.
         MOVE      FOUR,SUBSECT                 * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC
         CALL      UPWORK                        * Update the description
.
FIXA9999 RETURN
.
.        ======================================================================
.        SAVT0000: Save the work file totals in the PATFINS variables
.        ======================================================================
.
SAVT0000 MOVE      ZERO,FORM2                    * Start from the beginning
SAVT1000 ADD       ONE,FORM2                     * Get the next variable
         COMPARE   TEN7,FORM2                    * Have we finished yet ?
         GOTO      SAVT9999 IF NOT LESS          * Yes.
.
         LOAD      WORK1,FORM2,SUBM01,SUBM02,SUBM03,SUBM04:
                               SUBM05,SUBM06,SUBM07,SUBM08:
                               SUBM09,SUBM10,SUBM11,SUBM12:
                               SUBM13,SUBPER,SUBPRY,SUBYTD
.
         STORE     WORK1,FORM2,FINMTH1,FINMTH2,FINMTH3,FINMTH4:
                               FINMTH5,FINMTH6,FINMTH7,FINMTH8:
                               FINMTH9,FINMTH10,FINMTH11,FINMTH12:
                               FINMTH13,FINPER,FLSTYR,FINYTD
         GOTO      SAVT1000
.
SAVT9999 RETURN
.
.        ======================================================================
.        SAVP0000: Save the work file totals in the PATFINS variables
.        ======================================================================
.
SAVP0000 MOVE      ZERO,FORM2                    * Start from the beginning
SAVP1000 ADD       ONE,FORM2                     * Get the next variable
         COMPARE   TEN7,FORM2                    * Have we finished yet ?
         GOTO      SAVP9999 IF NOT LESS          * Yes.
.
         LOAD      WORK1,FORM2,SUBM01,SUBM02,SUBM03,SUBM04:
                               SUBM05,SUBM06,SUBM07,SUBM08:
                               SUBM09,SUBM10,SUBM11,SUBM12:
                               SUBM13,SUBPER,SUBPRY,SUBYTD
.
         STORE     WORK1,FORM2,TMPMTH1,TMPMTH2,TMPMTH3,TMPMTH4:
                               TMPMTH5,TMPMTH6,TMPMTH7,TMPMTH8:
                               TMPMTH9,TMPMTH10,TMPMTH11,TMPMTH12:
                               TMPMTH13,TMPPER,FLSTYR,TMPYTD
         GOTO      SAVP1000
.
SAVP9999 RETURN
+
.        ======================================================================
.        REST0000: Restore the work file totals from the PATFINS variables
.        ======================================================================
.
REST0000 MOVE      ZERO,FORM2                    * Start from the beginning
REST1000 ADD       ONE,FORM2                     * Get the next variable
         COMPARE   TEN7,FORM2                    * Have we finished yet ?
         GOTO      REST9999 IF NOT LESS          * Yes.
.
         LOAD      WORK1,FORM2,TMPMTH1,TMPMTH2,TMPMTH3,TMPMTH4:
                               TMPMTH5,TMPMTH6,TMPMTH7,TMPMTH8:
                               TMPMTH9,TMPMTH10,TMPMTH11,TMPMTH12:
                               TMPMTH13,TMPPER,FLSTYR,TMPYTD
.
         STORE     WORK1,FORM2,SUBM01,SUBM02,SUBM03,SUBM04:
                               SUBM05,SUBM06,SUBM07,SUBM08:
                               SUBM09,SUBM10,SUBM11,SUBM12:
                               SUBM13,SUBPER,SUBPRY,SUBYTD
         GOTO      REST1000
.
REST9999 RETURN
+
.        ======================================================================
.        ADDP0000: Add the work file totals to the PATFINS variables
.        ======================================================================
.
ADDP0000 MOVE      ZERO,FORM2                    * Start from the beginning
ADDP1000 ADD       ONE,FORM2                     * Get the next variable
         COMPARE   TEN7,FORM2                    * Have we finished yet ?
         GOTO      ADDP9999 IF NOT LESS          * Yes.
.
         LOAD      WORK1,FORM2,TMPMTH1,TMPMTH2,TMPMTH3,TMPMTH4:
                               TMPMTH5,TMPMTH6,TMPMTH7,TMPMTH8:
                               TMPMTH9,TMPMTH10,TMPMTH11,TMPMTH12:
                               TMPMTH13,TMPPER,FLSTYR,TMPYTD
.
         LOAD      WORK2,FORM2,SUBM01,SUBM02,SUBM03,SUBM04:
                               SUBM05,SUBM06,SUBM07,SUBM08:
                               SUBM09,SUBM10,SUBM11,SUBM12:
                               SUBM13,SUBPER,SUBPRY,SUBYTD
.
         ADD       WORK2,WORK1
.
         STORE     WORK1,FORM2,TMPMTH1,TMPMTH2,TMPMTH3,TMPMTH4:
                               TMPMTH5,TMPMTH6,TMPMTH7,TMPMTH8:
                               TMPMTH9,TMPMTH10,TMPMTH11,TMPMTH12:
                               TMPMTH13,TMPPER,FLSTYR,TMPYTD
         GOTO      ADDP1000
.
ADDP9999 RETURN
+
.        ======================================================================
.        PSUM0000: Print the summary for the currect section
.        ======================================================================
.
PSUM0000 LOAD      SECTHD,CURSECT,SUMM1,SUMM2
         MOVE      ONE,NOSUBS                    * No subheadings in summary
.
.        Save the current record for reposition later on
.
         PACK      SAVKEY15,SECTION,SUBSECT,SUBCODE,SP70
.
.        Go to the appropriate summary section
.
         BRANCH    CURSECT,PSUM1000,PSUM2000
         MOVE      ZERO,NOSUBS                   * Turn subheadings on
         GOTO      PSUM9999
.
.        Section 1 summary (Fee's Invoiced)
.
PSUM1000 CALL      ZERO0000                      * Zero the variables
         PACK      KEY15,ONE,TWO,Z13             * Fee's invoiced total key
         CALL      RDWORK                        * Read in the record
         CALL      SAVP0000                      * Save the totals
.
         CALL      HEAD0000                      * Start new page
.
         CALL      ZERO0000                      * Zero the variables
         PACK      KEY15,ONE,THREE,Z13
         CALL      RDWORK                        * Read in the record
         CALL      ADDP0000                      * add from the totals
         CALL      REST0000                      * restore variables
.
.        Change the descriptions for the Fee's Invoiced total
.
         MOVE      "FEES INVOICED                 ",SUBDESC
         MOVE      SP20,SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
.
         CALL      ENDS0000                      * End of section 
         MOVE      ZERO,NOSUBS                   * Turn subheadings on
         GOTO      PSUM9990
.
.        Section 2 summary (To Be Invoiced)
.
PSUM2000 CALL      ZERO0000                      * Zero the variables
         PACK      KEY15,TWO,TWO,Z13             * Fee's invoiced total key
         CALL      RDWORK                        * Read in the record
         CALL      SAVP0000                      * Save the totals
.
         CALL      HEAD0000                      * Start new page
.
         CALL      ZERO0000                      * Zero the variables
         PACK      KEY15,TWO,THREE,Z13
         CALL      RDWORK                        * Read in the record
         CALL      ADDP0000                      * add from the totals
         CALL      REST0000                      * restore variables
.
.        Change the descriptions for the Fee's Invoiced total
.
         MOVE      "TO BE INVOICED                ",SUBDESC
         MOVE      SP20,SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      ENDS0000                      * End of section 
         MOVE      ZERO,NOSUBS                   * Turn subheadings on
.
.        Reposition in the work file
.
PSUM9990 MOVE      SAVKEY15,KEY15
         CALL      RDWORK
.
PSUM9999 RETURN
.
.        ======================================================================
.        ENDP0000: Do the end of report processing
.        ======================================================================
.
ENDP0000 CLOSE     TEMPFILE                      * Make sure file is closed
         CLEAR     CMDLINE                       * Clear CMDLINE
         APPEND    "iserase ",CMDLINE            * Set up for erase of work
         APPEND    FNAMEW,CMDLINE
         RESET     CMDLINE
.
         EXECUTE   CMDLINE,TASKID                * Delete work file
         GOTO      ENDP9999
.
ENDP9999 RETURN
+
.        ======================================================================
.        HEAD0000: Print the heading for the report
.        ======================================================================
.
HEAD0000 COMPARE   ZERO,CPAGENO                  * First page ?
         CALL      ENDS0000 IF NOT EQUAL         * No. End previous page
.
         ADD       ONE,CPAGENO                   * New page number
.
.        Print the standard section of the heading
.
         CALL      IBACLOCK
         PACK      DIM8,CCC,CYY,CMM,CDD
         UNPACK    DIM8,CCENT,CYEAR,CMON,CDAY
         CALL      PACDATE
         PRINT     *F,*1,"IBAADT09",*45,CNAME,*116,"Date : ":
                   CPCDATE:
                   *N,*1,VERSION:
                   *45,"FEES INVOICED REPORT ",YEARTTL:
                   *116,"Time :   ",CTIMEIS,*N:
                   *116,"Page : ",*130,CPAGENO,*N:
                   *30,SYSID," REPORT FOR ITEMS ENTERED DURING PERIOD ":
                          FPDATE," TO ",CPCDATE,*N
.
         CLOCK     TIME,CTIMEIS                  * Clock the starting time
         MOVE      FIVE,CLNO                     * Reset the line counter
.
         CALL      ENDS0000                      * Print the line of '-'s
.
.        Print the column headings
.
         PRINT     *1,"!",*33,"!",*38,"PERIOD",*46,"!",*53,"Y.T.D.",*59,"!":
                   *60,MDESC1,*132,"!",*N:
                   *1,"!",*3,SECTHD,*33,"!":
                   *46,"!",*49,"PRIOR YEAR",*59,"!":
                   *60,MDESC2,*132,"!"
.
         ADD       TWO,CLNO                      * Modify line counter
.
.        If we don't have 12 periods in the year, then print the 3rd descrip.
.
         COMPARE   TEN2,NUMPERS
         GOTO      HEAD3000 IF EQUAL
.
         PRINT     *1,"!",*33,"!",*46,"!",*59,"!",*60,MDESC3,*132,"!"
         ADD       ONE,CLNO                      * Modify line counter
.
.        Print the last section of the heading
.
HEAD3000 CALL      ENDS0000                      * Print the line of '-'s
.
         BRANCH    NOSUBS,HEAD9999               * Subheading to be printed ?
.
         CALL      SUBS0000                      * Print the subsection title
.
HEAD9999 RETURN
.
.        ======================================================================
.        SUBS0000: Print the subsection heading if appropriate
.        ======================================================================
.
.        SUBSECT is the current subsection to be printed
.        CURSECT is the subsection of the previous record. It is used
.                to determine whether or not to print a new heading when
.                changing between Accommodation and Misc Items.
.
SUBS0000 BRANCH    CURSECT,SUBS1000,SUBS2000
         GOTO      SUBS9999
.
.        Section 1 subheadings (Fee's invoiced)
.
SUBS1000 BRANCH    SUBSECT,SUBS9999,SUBS1200,SUBS1300:
                           SUBS1400
         GOTO      SUBS9999
.
.        Accommodation
.
SUBS1200 MOVE      "FEES INVOICED - CASEMIX FUND",SUBHEAD
         GOTO      SUBS5000
.
.        Misc Items
.
SUBS1300 IF        CURSECT = 2 
.
.          Changed from Accommodation to Misc items
.
           CALL      BLNK0000                      * Print a blank line
           GOTO      SUBS9999
         ELSE
           MOVE      "FEES INVOICED",SUBHEAD       * Fee's invoiced
           GOTO      SUBS5000
         ENDIF
.
SUBS1400 MOVE      "GST",SUBHEAD
         GOTO      SUBS5000
.
.        Section 2 subheadings (To be invoiced)
.
SUBS2000 BRANCH    SUBSECT,SUBS9999,SUBS2200,SUBS2300:
                           SUBS9999
         GOTO      SUBS9999
.
.        Accommodation
.
SUBS2200 MOVE      "TO BE INVOICED - CASEMIX FUND",SUBHEAD
         GOTO      SUBS5000
.
.        Misc Items
.
SUBS2300 IF        CURSECT = 2 
.
.          Changed from Accommodation to Misc items
.
           CALL      BLNK0000                      * Print a blank line
           GOTO      SUBS9999
         ELSE
           MOVE      "TO BE INVOICED",SUBHEAD       * Fee's invoiced
           GOTO      SUBS5000
         ENDIF
.
.        SUBHEAD contains the description to be printed.
.
SUBS5000 CALL      PSUB0000                      * Print the subheading
.
SUBS9999 RETURN
.
.        ======================================================================
.        WKEY0000: Get the work file key for the current PATFINS record
.        ======================================================================
.
WKEY0000 MOVE      CURSECT,SECTION               * Section 1 or 2
.
.        Fincode can only be "A" for Accommodation and "T" for Misc.Charges
.        or "X" for missing breakdown code
.        or "Y" for casemix payment accrual balance
.
         CMATCH    ANSY,FINCODE                  * accrual blance payment ?
         GOTO      WKEY1100 IF EQUAL
.
         CMATCH    ANSX,FINCODE                  * missing breakdown code ?
         GOTO      WKEY1100 IF EQUAL
.
         CMATCH    ANSA,FINCODE                  * Accommodation ?
         GOTO      WKEY1100 IF NOT EQUAL         * must be misc.
.
.        Casemix Accommodation subsection
.
         MOVE      TWO,SUBSECT                   * Subsection 2
         UNPACK    FINCODE,ANS,KEY3,KEY9      * KEY3 -breakdown code for Accomm.
         IF        CACCFEE=5
           PACK      SUBCODE,ANS,KEY3,SP70         * Subsection code
         ELSE
           PACK      SUBCODE,ANS,KEY9,SP10         * Subsection code
         ENDIF
         GOTO      WKEY9999
.
.        Miscellaneous code or missing breakdown code
.        or Casemix payment accrual balance
.
WKEY1100 MOVE      THREE,SUBSECT               * Subsection 3
         MOVE      FINCODE,SUBCODE             * Extract Subsection code
.        GOTO      WKEY9999
.
WKEY9999 RETURN
+
.        ======================================================================
.        GETD0000: Get the description for the current PATFINS record
.        ======================================================================
.
GETD0000 MOVE      SP30,SUBDESC                  * Initialise Description
         MOVE      SP20,SUBDESC1                 * Initialise Description
         MOVE      SP20,SUBDCOD                  * Initialise Printed Code
.
.        Check to see if this is a totals record
.
         MATCH     Z13,SUBCODE                    * Totals record ?
         GOTO      GETD0500 IF NOT EQUAL         * No.
.
.        Totals record. The description will be TOTAL, unless this
.        is the accommodation totals record
.
         MOVE      "TOTAL",SUBDESC               * Totals description
.
.        Only sections 1 & 2 may have accommodation
.
         BRANCH    SECTION,GETD0100,GETD0100
         GOTO      GETD9999
.
.        Subsection 1 is the accommodation
.
GETD0100 BRANCH    SUBSECT,GETD9999,GETD0220,GETD9999:
                           GETD0230
         GOTO      GETD9999
.
.        Accommodation total description
.
GETD0220 MOVE      "TOTAL CASEMIX FUND ACCOMM.",SUBDESC * Accom.description
         GOTO      GETD9999
.
GETD0230 MOVE      "TOTAL GST",SUBDESC * Accom.description
         GOTO      GETD9999
.
.        We do different things depending on the currect section
.
GETD0500 BRANCH    SECTION,GETD1000,GETD1040
.
.        Section 1 & 2, Fee's Invoiced, & To Be Invoiced
.
GETD1000 BRANCH    SUBSECT,GETD9999,GETD1100,GETD1300:
                           GETD1100
         GOTO      GETD1100
.
GETD1040 BRANCH    SUBSECT,GETD9999,GETD1100,GETD1300:
                           GETD1100
.
.        Accommodation 
.
GETD1100 UNPACK    SUBCODE,ANS,DIM3,DIM3A,DIM3B  * Seperate out the codes
.
.        The following are for casemix funding
.
         CMATCH    ANSA,ANS                      * Accommodation charge
         GOTO      GETD1110 IF EQUAL
.
.        Should never get here, but just in case ...
.
         MOVE      "UNKNOWN ACCOMMODATION CODE",SUBDESC
         GOTO      GETD9999
.
.        Accommodation record. Check to see if it is by admission type
.        or by ward/claim code (Use CACCFEE)
.
GETD1110 BRANCH    CACCFEE,GETD1120:            * Ward/Claim code ?
                           GETD1125:            * Ward/Adm. type
                           GETD1126:            * Ward/Claim/Adm.type ?
                           GETD1127:            * Ward/Admtype/Claim ?
                           GETD1128             * Claim ?
.
.        Accommodation by admission type
.
         MOVE      SP20,TDESC
         PACK      KEY5,CODEA,DIM3              * Key for admission type
         CALL      RDCODE1                      * Read in the codes record
.
         PACK      SUBDESC,ACCOMTL,TDESC        * Get the description
         GOTO      GETD9999
.
.        Accommodation by ward/claim
.
GETD1120 PACK      SUBDESC,ACCOMTL,ACCTL1,DIM3,ACCTL2,DIM3A
         GOTO      GETD9999
.
.        Accommodation by ward/adm. type
.
GETD1125 MOVE      SP20,TDESC
         PACK      KEY5,CODEA,DIM3A
         CALL      RDCODE1
.
         MOVE      SP30,SUBDESC
         CLEAR     SUBDESC
         APPEND    ACCOMTL,SUBDESC
         APPEND    "Ward ",SUBDESC
         APPEND    DIM3,SUBDESC
         APPEND    "-",SUBDESC
         APPEND    TDESC,SUBDESC
         RESET     SUBDESC
         GOTO      GETD9999
.
.        Ward/claim/admission type
.
GETD1126 MOVE      SP20,TDESC
         PACK      KEY5,CODECL,DIM3A
         CALL      RDCODE1
.
         MOVE      SP30,SUBDESC
         CLEAR     SUBDESC
         APPEND    ACCOMTL,SUBDESC
         APPEND    "Ward ",SUBDESC
         APPEND    DIM3,SUBDESC
         APPEND    "-",SUBDESC
         APPEND    TDESC,SUBDESC
         RESET     SUBDESC
.
         MOVE      SP20,TDESC
         PACK      KEY5,CODEA,DIM3B
         CALL      RDCODE1
.
         MOVE      SP20,SUBDESC1
         CLEAR     SUBDESC1
         APPEND    TDESC,SUBDESC1
         RESET     SUBDESC1
         GOTO      GETD9999
.
.        Ward/admission type/claim
.
GETD1127 PACK      SUBDESC,ACCOMTL,ACCTL1,DIM3,SP1,DIM3A,SP1,DIM3B
         GOTO      GETD9999
.
.        Accommodation by claim type
.
GETD1128 MOVE      SP20,TDESC
         PACK      KEY5,CODECL,DIM3             * Key for Claim type
         CALL      RDCODE1                      * Read in the codes record
.
         PACK      SUBDESC,ACCOMTL,TDESC        * Get the description
         GOTO      GETD9999
.
.        Miscellenaous Items (Includes theatre)
.
GETD1300 UNPACK    SUBCODE,ANS,DIM3,DIM9         * Unpack the subsection code
         MATCH     ANSX,ANS                      * Is this the missing code ?
         GOTO      GETD2000 IF EQUAL             * yes.
.
         MATCH     ANSY,ANS                      * Is this the accrual balance ?
         GOTO      GETD3000 IF EQUAL
.
         BRANCH    PTCNMFEE,GETD1350             * Group by claim/item grp
.
         MATCH     SP3,DIM3                      * Are we grouping misc codes ?
         GOTO      GETD1320 IF EQUAL             * No.
.
.        We have a grouping code. Get the description from the codes file
.
         PACK      SUBDESC,UNKMGRP,DIM3          * Default description
.
         PACK      KEY5,CODEFI,DIM3              * Get the group code desc.
         CALL      RDCODE1
         BRANCH    OVRCD,GETD1310                * Code not found
         MOVE      TDESC,SUBDESC                 * Save the description
.
.        Pack up the printed code
.
GETD1310 PACK      SUBDCOD,OPNBRA,DIM3,CLSBRA
         GOTO      GETD9999
.
.        Pack up the printed code
.
GETD1320 PACK      SUBDCOD,OPNBRA,DIM9,CLSBRA
.
         PACK      SUBDESC,UNKMISC,DIM9          * Default description
.
.        Get the description from the Misc Item file first    v6.09.15
.
         PACK      KEY9,DIM9,SP70                * Set key to Item number
         PACK      KEY17,KEY9,CURRDATE,SP70
         CALL      PATITMRD                      * Try to read this record
         BRANCH    OVRCD,GETD1325                * No rec, try DRG file (if app)
         MOVE      IDESC,SUBDESC                 * Save the description
         GOTO      GETD9999
.
GETD1325 IF        CMXMSC = ONE
           PACK      KEY4,DIM9,SP70                * Set key to Item number
           PACK      KEY7,KEY4,LAST,SP10                              *I-137125
           CALL      RSPTDGW1                      * Try to read this record
           CALL      RPPTDGW1                      *                  *C-137125
           BRANCH    OVRCD,GETD1330                * No record, try charges file
           MATCH     KEY4,PTDWDRGC                                    *I-137125
           GOTO      GETD1330 IF NOT EQUAL                            *I-137125 
           UNPACK    PTDWDESC,SUBDESC              * Save desc (first 30)
           GOTO      GETD9999
         ENDIF
.
.        Get the description from the Misc charges file
.
GETD1330 MOVE      "0  ",MCLMCOD                    * Claim code 0
         PACK      KEY29,MCLMCOD,SP6,SP3,DIM9,CURRDATE,SP10
         CALL      PATMCHRD                * read Misc.Charges file 
         COMPARE   ZERO,EXIT
         GOTO      GETD1335 IF EQUAL
.
         GOTO      GETD9999                * invalid item
.
GETD1335 MOVE      MDESC,SUBDESC                 * Save the description
         GOTO      GETD9999
.
.        Break up Misc. by claim/item group
.
GETD1350 MATCH     SP3,DIM3                      * grouping by claim code ?
         GOTO      GETD1355 IF EQUAL
.
.        We have a claim code, get description from codes file
.
         PACK      SUBDESC,UNKCLM,SP1,OPNBRA,DIM3,CLSBRA
         PACK      KEY5,CODECL,DIM3
         CALL      RDCODE1
         BRANCH    OVRCD,GETD1352
         PACK      SUBDESC,TDESC,SP1,OPNBRA,DIM3,CLSBRA
.
         UNPACK    DIM9,DIM3A
         PACK      SUBDESC1,UNKMGRP,DIM3A         * Default description
         PACK      KEY5,CODEFI,DIM3A              * Get the group code desc.
         CALL      RDCODE1
         BRANCH    OVRCD,GETD9999                 * Code not found
         MOVE      TDESC,SUBDESC1                 * Save the description
         PACK      SUBDCOD,OPNBRA,DIM3A,CLSBRA
         GOTO      GETD9999
.
.        Pack up the printed code
.
GETD1352 UNPACK    DIM9,DIM3A
         PACK      SUBDCOD,OPNBRA,DIM3,SLASH,DIM3A,CLSBRA
         GOTO      GETD9999
.
GETD1355 UNPACK    DIM9,DIM3
         PACK      SUBDESC,UNKMGRP
         PACK      KEY5,CODEFI,DIM3
         CALL      RDCODE1
         BRANCH    OVRCD,GETD1357
         PACK      SUBDESC,TDESC
.
.        Pack up the printed code
.
GETD1357 PACK      SUBDCOD,OPNBRA,DIM3,CLSBRA
         GOTO      GETD9999
.
.        Missing breakdown code
.
GETD2000 UNPACK    SUBCODE,ANS,KEY9,KEY3         * fund/casemix code
         MOVE      SP30,SUBDESC
         CLEAR     SUBDESC
         APPEND    "No Rev.Breakdown",SUBDESC
         APPEND    "-",SUBDESC
         APPEND    KEY3,SUBDESC
         RESET     SUBDESC
.
         MOVE      SP20,SUBDESC1
         CLEAR     SUBDESC1
         APPEND    "Code: ",SUBDESC1
         APPEND    KEY9,SUBDESC1
         RESET     SUBDESC1
         GOTO      GETD9999
.
.        Casemix payment accrual balance
.
GETD3000 UNPACK    SUBCODE,ANS,DIM3,DIM6,KEY3,KEY9
         MOVE      SP30,SUBDESC
         CLEAR     SUBDESC
         APPEND    "Casemix Payment ",SUBDESC
         RESET     SUBDESC
.
         MOVE      SP20,SUBDESC1
         CLEAR     SUBDESC1
         APPEND    "Accrual Balance.",SUBDESC1
         RESET     SUBDESC1
.
GETD9999 RETURN
+
.        ======================================================================
.        CTBI0000: Subroutine to loop over all admissions and calculate
.        the grand total of all invoices still to be issued. This data will be
.        put into the temporary file openned up on PATFINS1
.        ======================================================================
.
CTBI0000 MOVE       ZERO,DISPROG                 * Flag required by CALCTBI
.
         DISPLAY    *P10:24,*EL:
                    "Calculating Total Amount Still to be Invoiced",*W:
                    *P10:24,*EL,"Billing No :";
.
.        Loop over Admissions with invoices pending
.
         MOVE       ZERO,RECCOUNT                * initialise counter
         MOVE       SP8,KEY8                     * Loop over all pending No.'s
         CALL       RDSIPEN1
CTBI1000 CALL       RDKIPEN1                     * Get next invoice pending adm
         BRANCH     OVRCD,CTBI9999               * Nothing left to process
.
         ADD        ONE,RECCOUNT                 * increment counter
         IF         (RECCOUNT = 1) | (RECCOUNT%1000) = 0
           DISPLAY    *P36:24,*EL,*V2LON,IPADMNO;  * Display number on screen
         ENDIF
         MOVE       ZERO,CASHFLAG                * Flag required by CALCTBI
.
.        Check for a valid system
.
         COMPARE   FSTSYS,IPSYSTM
         GOTO      CTBI1000 IF NOT EQUAL         * not inpatient
.
.                                                        * start      *I-103813
         IF        HOSPFLAG=1
           PACK      KEY8,IPADMNO,SP8
           CALL      RDPMVX11
           BRANCH    OVRCD,CTBI1000
           MATCH     PMVXMHOS,HOSPID
           GOTO      CTBI1000 IF NOT EQUAL
         ENDIF
.                                                        * end        *I-103813
.
.        Inpatient to be invoiced
.
CTBI2000 MOVE       IPADMNO,KEY8
         CALL       RDMISS1                      * Read in the admision record
         BRANCH     OVRCD,CTBI9200
.
         COMPARE    FIVE,ASTAT                   * Cancelled ?
         GOTO       CTBI1000 IF EQUAL
.
         MOVE       AURNO,KEY8
         CALL       RDMAST1                      * Read in the PMI record
         BRANCH     OVRCD,CTBI9100
.
         MOVE       SP8,DDATE                    * Required by CALCTBI
.
.        Check to see if the patient is discharged yet
.
         MOVE       ONE,DISFLG                   * Assume no discharge record
         PACK       CMCODE,SP70
         PACK       CMDRG,SP70
         PACK       CMCODE,PTMIPCMX,SP10    * Default casemix code to prov DRG
         PACK       CMDRG,PTMIPCMX,SP10
.
         COMPARE    THREE,ASTAT
         GOTO       CTBI2300 IF NOT EQUAL
.
         MOVE       ZERO,DISFLG                  * Patient is discharged
.
         MOVE       AADMNO,KEY8
         CALL       RDDSCH1                      * Read in the discharge record
         BRANCH     OVRCD,CTBI1000
.
.        PROGFLAG=4 means calculate the amount to be invoiced, and put the
.        figures into the file openned on PATFINS1, but don't actually produce
.        the invoice.
.
CTBI2300 MOVE       FOUR,PROGFLAG
         MOVE       ONE,REVBFLAG                 * Set to revenue breakdown
.
         IF         IBCNUGST=2
           MOVE       ZERO,IBCNUGST              * Set No GST for tobe invoiced
           CALL       CALCTBI                    * Calculate the amt to invoice
           MOVE       TWO,IBCNUGST
         ELSE
           CALL       CALCTBI                    * Calculate the amt to invoice
         ENDIF
         GOTO       CTBI1000
.
CTBI9100 DISPLAY    *P10:14,*B,*V2LON,*EL:
               "*** Admission No ",IPADMNO," has invalid U/R No ",AURNO; *j0003
         GOTO       CTBI1000
.
CTBI9200 DISPLAY    *P10:14,*B,*V2LON,*EL:
               "*** Invalid Admission No ",IPADMNO:
               " in Invoices Pending file";   *j0004
         GOTO       CTBI1000
.
CTBI9999 RETURN
+
.        ======================================================================
.        INDZ0000: Create a temporary index file with the PATFINS format
.        ======================================================================
.
INDZ0000 CLOSE     PATFINS1                      * Make sure the file is closed
         CLOSE     PATFINS2                      * Make sure the file is closed
         CALL      KILL0000                      * Delete the file first
.
         CLEAR     CMDLINE
         APPEND    "isbuild ",CMDLINE
         APPEND    FNAMEI,CMDLINE
         APPEND    " 156 u1-1,2-7,8-11,12-12,13-25,146-148",CMDLINE
         APPEND    " u146-148,1-1,2-7,8-11,12-12,13-25",CMDLINE
         RESET     CMDLINE
         EXECUTE   CMDLINE,TASKID
.
INDZ9999 RETURN
.
.        ======================================================================
.        KILL0000: Deleting an indexed file based on port
.        ======================================================================
.
KILL0000 CLEAR     CMDLINE
         APPEND    "iserase ",CMDLINE
         APPEND    FNAMEI,CMDLINE
         RESET     CMDLINE
         EXECUTE   CMDLINE,TASKID
KILL9999 RETURN
+
.        ======================================================================
.        I/O routines for the work file
.        ======================================================================
.
RDSWORK  READ      TEMPFILE,KEY15;;
         RETURN
.
RDWORK   MOVE      ZERO,OVRCD
         READ      TEMPFILE,KEY15;DSECTION,DSUBSECT,SUBCODE,SUBDESC:
                                 SUBDESC1,SUBDCOD,SUBPER,SUBYTD,SUBPRY:
                                 SUBM01,SUBM02,SUBM03,SUBM04:
                                 SUBM05,SUBM06,SUBM07,SUBM08:
                                 SUBM09,SUBM10,SUBM11,SUBM12,SUBM13
         GOTO       OVERCOND IF OVER
         MOVE       DSECTION,SECTION
         MOVE       DSUBSECT,SUBSECT
         RETURN
.
RDKWORK  MOVE      ZERO,OVRCD
         READKS    TEMPFILE;DSECTION,DSUBSECT,SUBCODE,SUBDESC:
                                 SUBDESC1,SUBDCOD,SUBPER,SUBYTD,SUBPRY:
                                 SUBM01,SUBM02,SUBM03,SUBM04:
                                 SUBM05,SUBM06,SUBM07,SUBM08:
                                 SUBM09,SUBM10,SUBM11,SUBM12,SUBM13
         GOTO       OVERCOND IF OVER
         MOVE       DSECTION,SECTION
         MOVE       DSUBSECT,SUBSECT
         RETURN
.
UPWORK   MOVE      SECTION,DSECTION
         MOVE      SUBSECT,DSUBSECT
         UPDATE    TEMPFILE;DSECTION,DSUBSECT,SUBCODE,SUBDESC:
                                 SUBDESC1,SUBDCOD,SUBPER,SUBYTD,SUBPRY:
                                 SUBM01,SUBM02,SUBM03,SUBM04:
                                 SUBM05,SUBM06,SUBM07,SUBM08:
                                 SUBM09,SUBM10,SUBM11,SUBM12,SUBM13
         RETURN
.
WRWORK   MOVE      ZERO,OVRCD
         MOVE      SECTION,DSECTION
         MOVE      SUBSECT,DSUBSECT
         WRITE     TEMPFILE,KEY15;KEY15,SUBDESC:
                                 SUBDESC1,SUBDCOD,SUBPER,SUBYTD,SUBPRY:
                                 SUBM01,SUBM02,SUBM03,SUBM04:
                                 SUBM05,SUBM06,SUBM07,SUBM08:
                                 SUBM09,SUBM10,SUBM11,SUBM12,SUBM13
         RETURN
.
.        ======================================================================
.        ADDW0000: Add data to the work file
.        ======================================================================
.
ADDW0000 PACK       KEY15,SECTION,SUBSECT,SUBCODE,SP70
         CALL       RDWORK                       * Read the work file record
         BRANCH     OVRCD,ADDW2000               * No record currently in file
.
.        Update the record with the new data
.
         ADD        FINPER,SUBPER                * Period Total
         ADD        FLSTYR,SUBPRY                * Prior year total
.
         MOVE       ZERO,FORM2                   * Prepare to loop over months
ADDW1600 ADD        ONE,FORM2                    * Get the next month
         COMPARE    TEN4,FORM2                   * Check if we have finished
         GOTO       ADDW1800 IF NOT LESS         * Yes, update the record
.
         LOAD       WORK1,FORM2,FINMTH1,FINMTH2,FINMTH3,FINMTH4:
                                FINMTH5,FINMTH6,FINMTH7,FINMTH8:
                                FINMTH9,FINMTH10,FINMTH11:
                                FINMTH12,FINMTH13
.
         ADD        WORK1,SUBYTD                 * Increment YTD total
.
         LOAD       WORK2,FORM2,SUBM01,SUBM02,SUBM03,SUBM04:
                                SUBM05,SUBM06,SUBM07,SUBM08:
                                SUBM09,SUBM10,SUBM11,SUBM12,SUBM13
.
         ADD        WORK1,WORK2                  * Increment month total
.
         STORE      WORK2,FORM2,SUBM01,SUBM02,SUBM03,SUBM04:
                                SUBM05,SUBM06,SUBM07,SUBM08:
                                SUBM09,SUBM10,SUBM11,SUBM12,SUBM13
         GOTO       ADDW1600                     * Get next month
.
.        Update the work file
.
ADDW1800 CALL       UPWORK
         GOTO       ADDW9999
.
.        Create a new work file record
.
ADDW2000 CALL       GETD0000                     * Get the description
.
         MOVE       FINPER,SUBPER                * Period Total
         MOVE       FLSTYR,SUBPRY                * Prior year total
         MOVE       ZERO,SUBYTD                  * Year to date total
.
         MOVE       ZERO,FORM2                   * Prepare to loop over months
ADDW2200 ADD        ONE,FORM2                    * Get the next month
         COMPARE    TEN4,FORM2                   * Check if we have finished
         GOTO       ADDW2400 IF NOT LESS         * Yes, write the record
.
         LOAD       WORK1,FORM2,FINMTH1,FINMTH2,FINMTH3,FINMTH4:
                                FINMTH5,FINMTH6,FINMTH7,FINMTH8:
                                FINMTH9,FINMTH10,FINMTH11:
                                FINMTH12,FINMTH13
.
         ADD        WORK1,SUBYTD                 * Increment YTD total
.
         STORE      WORK1,FORM2,SUBM01,SUBM02,SUBM03,SUBM04:
                                SUBM05,SUBM06,SUBM07,SUBM08:
                                SUBM09,SUBM10,SUBM11,SUBM12,SUBM13
         GOTO       ADDW2200                     * Get next month
.
.        Write to the work file
.
ADDW2400 PACK       KEY15,SECTION,SUBSECT,SUBCODE,SP70
         CALL       WRWORK
         GOTO       ADDW9999
.
ADDW9999 RETURN
+
.        ======================================================================
.        ZERO0000: Zero the amounts in the work file variables
.        ======================================================================
.
ZERO0000 MOVE      ZERO,FORM2                    * Start from the beginning
ZERO1000 ADD       ONE,FORM2                     * Get the next variable
         COMPARE   TEN7,FORM2                    * Have we finished yet ?
         GOTO      ZERO9999 IF NOT LESS          * Yes.
.
         STORE     ZERO,FORM2,SUBM01,SUBM02,SUBM03,SUBM04:
                              SUBM05,SUBM06,SUBM07,SUBM08:
                              SUBM09,SUBM10,SUBM11,SUBM12:
                              SUBM13,SUBPER,SUBPRY,SUBYTD
         GOTO      ZERO1000
.
ZERO9999 RETURN
+
.
         INC       STD001IO
         INC       CHKCMXPT                * Check if casemix & get epis type
         INC       CLPATDTR                * Clear DTR file variables
.
         INC       PATDSCIO/INC
         INC       PATIPEIO/INC
         INC       PATINVIO/INC
         INC       PATCODIO/INC
         INC       PATWC1IO/INC
         INC       PATWMAIO/INC
         INC       PATWVEIO/INC
         INC        PATCALFN
         INC        PATCODDS
         INC        PATCOMN3
         INC        PABXBILL
         INC        GETBFEES
         INC        GETCNEFF
         INC        GETTFEES
.
         INC        PATCATBI
         INC        PATIVMES
         INC        STEPDOWN
         INC        PATCMSTP
.        INC        PATDBTYP           * calculate bed days for a bed type
         INC        CALCDAYS
         INC        NHOSPDAY
.
.        The following a subroutines mentioned in PATCATBI, but will never be
.        needed by this program. They are defined here to allow compilation
.
WRITETRN
DISPMORE
GETTHR
TAIL
INITIVAR
PRTEOL
GETMSC
PROCMISC
PRTCLMS
NXTTRAN1
ENDPRT
WEBERR00
PRTINVTL
SINVT000
ISUG0000
CKTL0000
PEOL0000
ENDPRT00
PROACC00
PRLN0000
PRTIPROV
         RETURN
+
.
         INC       NZPCFNIO/INC
         INC       NZPCMTIO/INC
         INC       NZPFIGIO/INC
         INC       NZPFINIO/INC
         INC       NZPIBRIO/INC
         INC       NZPPFEIO/INC
         INC       NZPPICIO/INC
         INC       NZPRBRIO/INC
         INC       NZPRFNIO/INC
         INC       NZPSPRIO/INC
         INC       NZPTFEIO/INC
         INC       MLTCFNIO/INC
         INC       OPRDEAIO/INC
         INC       OPRSESIO/INC
         INC       OUTBB1IO/INC
         INC       OUTDTRIO/INC
         INC       OPRARDIO/INC
.
         INC       PATITMRD
         INC       CLNZPPIC
         INC       PATGNCMX
         INC       CMXMATRX
         INC       CMGETTHR
         INC       PATMCHRD                * Miscellaneous Charges read routine
         INC       VALCMXFN
         INC       CLPMSIDE
         INC       TFILENAM                * Generate Temp File Name
         INC       GETEFDRG
.
         INC       IBASEQIO/INC            * Sequential Numbers File
         INC       WEBERRIO/INC            * Web Server Error Logging
.
         INC       IBAGEDIO/INC
         INC       IBAGINIO/INC
         INC       FMSLMAIO/INC
         INC       PATAFEIO/INC
         INC       PATASDIO/INC
         INC       PATCMXIO/INC
         INC       PATCTFIO/INC
         INC       PATCFAIO/INC
         INC       PMSCIDIO/INC
         INC       PMSCCDIO/INC
         INC       PATHDFIO/INC
         INC       PATHLFIO/INC
         INC       PATHSPIO/INC
         INC       PATHTRIO/INC
         INC       PATLDFIO/INC
         INC       PATLSDIO/INC
         INC       COMDEPIO/INC
.
         INC       PATRCAIO/INC
         INC       PATWR1IO/INC
         INC       PATELGIO/INC
         INC       PATBFEIO/INC
         INC       NZPBFEIO/INC
         INC       NZPIVBIO/INC
         INC       NZPRVBIO/INC
         INC       NZPRDTIO/INC
         INC       NZPEXTIO/INC
         INC       PATRATIO/INC
         INC       PATDDHIO/INC
         INC       PATDGWIO/INC
         INC       PATDO1IO/INC
         INC       PATDTRIO/INC
         INC       PATFX1IO/INC
         INC       PATFN1IO/INC
         INC       PATFN2IO/INC
         INC       PATDRGIO/INC
         INC       PATECDIO/INC
         INC       PATECOIO/INC
         INC       PATICUIO/INC
         INC       PATINMIO/INC
         INC       PATTRNIO/INC
         INC       PATMA1IO/INC
         INC       PATMCHIO/INC
         INC       NZPMCHIO/INC
         INC       NZPMXCIO/INC
         INC       PATITMIO/INC
         INC       PATTFEIO/INC
         INC       PATIBLIO/INC
         INC       PATRBLIO/INC
         INC       PATRFNIO/INC
         INC       PATRFGIO/INC
         INC       PATIN1IO/INC
         INC       PATFINIO/INC
         INC       PATFIGIO/INC
         INC       PATFMOIO/INC
         INC       PATMI1IO/INC
         INC       PATPGRIO/INC
         INC       PMSCNOIO/INC
         INC       PMSSGAIO/INC
         INC       PMSMTIIO/INC
         INC       PATCMTIO/INC
         INC       PMSCMTIO/INC
         INC       PMSHATIO/INC
         INC       PMSMPRIO/INC
         INC       PMSSINIO/INC
         INC       PATIOVIO/INC
         INC       PATOVBIO/INC
         INC       PATSRBIO/INC
         INC       PATVENIO/INC
         INC       PATVISIO/INC
         INC       PMSVX1IO/INC
         INC       RCPBNKIO/INC
         INC       RCPBDTIO/INC
         INC       RCPDTEIO/INC
         INC       IBASECIO/INC
         INC       IBAPASIO/INC
         INC       IBAGSTIO/INC
.
         INC       PMSPBRIO/INC
         INC       PMSIDEIO/INC
         INC       PMSEDGIO/INC       * Effective DRG Date
.
ENDIT    CHAIN      PGM
         STOP
