.******************************************************************************
.*                                                                            *
.*                        P R O G R A M   S U M M A R Y                       *
.*                        -------------   -------------                       *
.*                                                                            *
.*     PROGRAM NAME:    IBABIL33                                              *
.*                                                                            *
.*     FUNCTION:        REMOVE TAKEUP OUTSTANDING DEBTS                       *
.*                                                                            *
.*     DATE WRITTEN:    27/05/2015                                            *
.*                                                                            *
.*     AUTHOR:          J.Tan  CAR 316144                                     *
.*                                                                            *
.*     MODIFICATIONS:                                                         *
.******************************************************************************
. V12.00.01 21/05/2025 Thanh T         TSK 0955096                            *
.           Changed for alphanumeric visit number. Removed STADMNO since it   *
.           is not used                                                       *
.******************************************************************************
.*            V11.05.01 21/02/2025  J.Tan   TSK 0955356                       *
.*                      Added FININVN,FINADMN,FINURNO - Financial summary     *
.*            V10.14.01 20/03/2019  J.Tan            TSK 0857392              *
.*                      Changed RCP Transaction count from DIM3 to DIM5       *
.*                      V10.06.07 26/06/2015 J.Tan  CAR 316144                *
.*                      Fixed removing rcpbnkaf and rcpbdtaf                  *
.*                      V10.06.06 25/06/2015 J.Tan  CAR 316144                *
.*                      Fixed cash to use released date if not blank          *
.*                      V10.06.05 22/06/2015 J.Tan  CAR 316144                *
.*                      Fixed cash to use released date if not blank          *
.*                      V10.06.04 19/06/2015 J.Tan  CAR 316144                *
.*                      Fixed cash to use released date updating patfinsf     *
.*                      V10.06.03 19/06/2015 J.Tan  CAR 316144                *
.*                      Fixed cash to use released date updating patfinsf     *
.*                      V10.06.02 18/06/2015 J.Tan  CAR 316144                *
.*                      Fixed updating patfinsf                               *
.*                      V10.06.01 12/06/2015 J.Tan  CAR 316144                *
.*                      Mods to print Deposit on Report & Comma delimited file*
.*                      V10.05.05 10/06/2015 J.Tan  CAR 316144                *
.*                      Added option to write to Comma delimited file         *
.*                      V10.05.04 05/06/2015 J.Tan  CAR 316144                *
.*                      Mods to print cash payments                           *
.*                      V10.05.03 03/06/2015 J.Tan CAR 316144                 *
.*                      Removed validating cash payments                      *
.*                      V10.05.02 02/06/2015 J.Tan CAR 316144                 *
.*                      Checked if the other payments are from Takeup O/S Debt*
.*                      V10.05.01 02/06/2015 J.Tan  CAR 316144                *
.*                      Changed array to 999                                  *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
. 
          INC       PATCOMM/INC
          INC       PATCONFD/INC
.
          INC       RCPDTEFD/INC
          INC       RCPBDTFD/INC
          INC       RCPBNKFD/INC
          INC       COMDEPFD/INC
          INC       PATRFNFD/INC
          INC       NZPRFNFD/INC
          INC       PMSOSDFD/INC
          INC       PATCODFD/INC
          INC       PATDHEAD/INC
          INC       PATRFGFD/INC
          INC       PATDRGFD/INC
          INC       PATDTRFD/INC
          INC       PATFINFD/INC
          INC       PATFIGFD/INC
          INC       PATINVFD/INC
          INC       PATMA1FD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PATMCHFD/INC
          INC       NZPFINFD/INC
          INC       NZPFIGFD/INC
.
          INC       PATMI1FD/INC
          INC       PATVISFD/INC
.
.      EXTRA VARIABLES
.
BJDAY     FORM      3
CJDAY     FORM      3
CHG       FORM      1
CLCODE    INIT      "CL"
CURRDATE  DIM       8
CMDLINE   DIM       60
COUNTER   FORM      1
ERRDESC   DIM       80
ERRARRAY  DIM       80[999]
ERRFLAG   FORM      1
ERRCOUNT  FORM      3
FOUNDERR  FORM      1
.
FORM8     FORM      8
FORM9P2   FORM      9.2
FORM9D2   FORM      9.2
FORM12P2  FORM      12.2
CASHAMNT  FORM      12.2
FINCODE1  DIM       13            4     FINANCE CODE
FINTYPE1  DIM       1             3     FINANCIAL TYPE
.
FINCODE2  DIM       13            4     FINANCE CODE
FINTYPE2  DIM       1             3     FINANCIAL TYPE
FGSTFLAG  FORM      1
IODPAMNT  FORM      12.2          * Patient Invoice Amount (INP)
IODHAMNT  FORM      12.2          * Rebate Invoice Amount
INVOICEN  DIM       12
NMPNUMB   DIM       20
IBCNMHOS  FORM      1
.
SKEY29    DIM       29
SKEY21    DIM       21
STOFYEAR  DIM       8
FIELD     FORM      1
TDATE1    DIM       8
TOTALINV  FORM      12.2
TOTALCSH  FORM      12.2
TOTRECPN  FORM      1
TOTCASH   FORM      12.2
TOTDEPS   FORM      12.2
.
USERID    DIM       10
.
LASTDTE   DIM       8
.
FNDFLAG   FORM      1
FRSTGNAM  DIM       40
FULLGNAM  DIM       80
MAPFLAG   FORM      1
MISCODE   DIM       9
MISCTTL   DIM       30
MISCODE1  DIM       9
MISCTTL1  DIM       30
MISCODE2  DIM       9
MISCTTL2  DIM       30
.
MAXDATE   DIM       8
CLAIM     DIM       3            * vars for PATMCHKY
HFUND     DIM       6
HFTAB     DIM       8
DIM15     DIM       15
CODEFI    INIT      "FI"
DIM20     DIM       20
DIM30     DIM       30
DIM8      DIM       8
DIM9      DIM       9 
FILEPATH  DIM       60
SAVEPATH  DIM       60
SCNDGNAM  DIM       40
KEY21A    DIM       21
KEY36A    DIM       36
KEY26A    DIM       26
FNAMET    DIM       8
FNAMEW    DIM       8
XALTNUMB  DIM       20      1399   Alternate ID                      (pmsaidaf)
. 
RDSCOUNT  FORM      8
RECCOUNT  FORM      8
.
SAVERECN  DIM       12
SAVCHG    DIM       9
SEC       FORM      2
SP12      INIT      "            "
SP14      INIT      "              "
SP16      INIT      "                "
SP36      INIT      "                                    "
SP40      INIT      "                                        "
SP50      INIT      "                             ":
                    "                     "
.
VALDFLAG  FORM      1             * Validation check flag
.                                     0 = Update data to database
.                                     1 = only validating import data file
.
OUTDFILE  FILE      ASCII, FIXED=256
.
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
TMPADMN   DIM        8        1   Admission Number
TMPURNO   DIM        8        9   U/R Number
TMPINVN   DIM        8       17   Invoice Number
TMPINVD   DIM        8       25   Invoice Date
TMPINVA1  FORM      12.2     33   Patient Invoice Amount
TMPINVA2  FORM      12.2     48   Rebate Invoice Amount
TMPCLMV   DIM        3       63   Claim Code
TMPHFND   DIM        6       66   Health Fund
TMPHTAB   DIM        8       72   Health Fund table
TMPSYST   DIM        1       80   SYSTEM (1=AAE 2=OUTPAT 3=INPAT)
.EOR                81
.
TMPINVA   FORM      12.2
XDAY1     DIM       2
XMON1     DIM       2
XYEAR1    DIM       2
XCENT1    DIM       2
.
ASCIFILE  FORM      1                        * Generate Ascii file
ASCINAME  DIM       8                        * Ascii File Name
.
XXASCII1  FILE    ASCII, FIXED=161
.
.Name     Type   Length   Physical  Location  Description
.------   ----   ------   --------  --------  ------------------------------
.TMPADMN  DIM      8         8         1      Admission Number
XXASCOMA  INIT     ","       1         9      Comma Delimiter
.TMPURNO  DIM      8         8        10      U/R Number
.XXASCOMA INIT     ","       1        18      Comma Delimiter
.PGNAME   DIM     25        25        19      Patient Given name
.XXASCOMA INIT     ","       1        44      Comma Delimiter
.PSNAME   DIM     20        20        45      Patient Surname
.XXASCOMA INIT     ","       1        65      Comma Delimiter
.TMPINVN  DIM      8         8        66      Invoice Number
.XXASCOMA INIT     ","       1        74      Comma Delimiter
XTMPINVD  DIM      10       10        75      Invoice Date
.XXASCOMA INIT     ","       1        85      Comma Delimiter
.TMPINVA1 FORM     12.2     15        86      ODP Amount
.XXASCOMA INIT     ","       1       101      Comma Delimiter
.TMPINVA2 FORM     12.2     15       102      ODH Amount
.XXASCOMA INIT     ","       1       117      Comma Delimiter
.TMPINVA  FORM     12.2     15       118      Invoice Amount
.XXASCOMA INIT     ","       1       133      Comma Delimiter
XPAYAMNT  FORM     12.2     15       134      Payment
.XXASCOMA INIT     ","       1       149      Comma Delimiter
XDEPAMNT  FORM     12.2     15       150      Deposit
.XXASCOMA INIT     ","       1       165      Comma Delimiter
XRECEIPT  DIM      60       60       166      Receipt number(s)
.XXASCOMA INIT     ","       1       226      Comma Delimiter
XCOMMENT  DIM      12       12       227      Comments
.                                   -----
.End of Record                       239
.
PRINTFIN  FORM      1
.
PRGID     INIT      "IBABIL33"
PRGNAM    INIT      "Remove Take Up Outstanding Debts"
VERSION   INIT      "V12.00.01"
+
.         START OF PROGRAM
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KPTH0000                      * keyin file path name
          BRANCH    EXIT,MAIN9999
.
          CALL      ASCI0000                      * Generate Ascii file ?
.
MAIN1000  CALL      ASKQ0000                      * keyin option for validation
          BRANCH    EXIT,MAIN9999
.
          CALL      MCHR0000                      * Validate Misc.debt
          BRANCH    EXIT,MAIN0000
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN2000,MAIN1000,MAIN9999 * Yes, no, cancel
.
MAIN2000  CALL      DSCR0000
.
          CALL      PROC0000                      * processing
.
MAIN9999  CHAIN     PGM
          STOP
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdrgaf";
          OPEN      PATDRGA1,"patdrgaf"
.
          DISPLAY   *P64:24,"patdtraf";
          OPEN      PATDTRA1,"patdtraf"
          OPEN      PATDTRA5,"patdtraf"
.
          DISPLAY   *P64:24,"patfinsf";
          OPEN      PATFINS1,"patfinsf"
          OPEN      PATFIGA1,"patfigaf"
.
          DISPLAY   *P64:24,"patinvrf";
          OPEN      PATINVR1,"patinvrf"
          OPEN      PATINVR3,"patinvrf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsosdaf";
          OPEN      PMSOSDA1,"pmsosdaf"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A2,"patmi1af"
          OPEN      PATMI1A3,"patmi1af"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATVISA2,"patvisaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patmchgf";
          OPEN      PATMCHG1,"patmchgf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"rcpdteaf";
          OPEN      RCPDTEA1,"rcpdteaf"
          OPEN      RCPDTEA3,"rcpdteaf"
          OPEN      RCPDTEA6,"rcpdteaf"
.
          DISPLAY   *P64:24,"rcpbdtaf";
          OPEN      RCPBDTA1,"rcpbdtaf"
.
          DISPLAY   *P64:24,"rcpbnkaf";
          OPEN      RCPBNKA1,"rcpbnkaf"
.
          DISPLAY   *P64:24,"comdepaf";
          OPEN      COMDEPA1,"comdepaf"
          OPEN      COMDEPA2,"comdepaf"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN9;*216,CINVRIP
          READ      CONTROLF,TWENTY;*193,PTCNDCLM
          READ      CONTROLF,SEVENTY9;*68,PTCNMFEE,PTCNJFEE
          READ      CONTROLF,EIGHTY8;*94,CLACDATE
.
          MATCH     SP3,PTCNDCLM
          IF        @EQUAL
            MOVE      "0  ",PTCNDCLM
          ENDIF
.
          UNPACK    CLACDATE WITH XCENT,XYEAR,XMON,XDAY
          PACK      MAXDATE WITH XCENT,XYEAR,XMON,XDAY
.
.         Now work out the start of the current financial year
.
          PACK      CPTDATE,CCC,CYY,CMM,CDD
          REP       " 0",CPTDATE
          CALL      GPERD
          IF        EXIT = 1
            DISPLAY   *P1:24,*EL,*B,"Current Date not on Period File. ";
            CALL      HITENTER
            GOTO      INIT9000
          ENDIF
.
          MOVE      "01",DRGNUM              * the first period of year
          PACK      KEY6,DRGYR,DRGNUM
          CALL      RDDRGA1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Start of Year not on Period File. ";
            CALL      HITENTER
            GOTO      INIT9000
          ENDIF
.
          MOVE      DRGFDTE,STOFYEAR         * start of this financial year
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS             * start time for input
          MOVE      "99",CLNO
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          MOVE      "hos04deb",FNAMET
          MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9000  MOVE      ONE,EXIT
INIT9999  RETURN
+
.********************************************************************
.*                  ASKQ0000                                        *
.* Returns: VALDFLAG  - validation flag                             *
.*                       0 = normal mode                            *
.*                       1 = validation only mode                   *
.********************************************************************
ASKQ0000  MOVE      ANSY,ANS
          MOVE      ZERO,PRINTFIN
          KEYIN     *P1:17,*EF,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:17,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSX,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:17,*V2LON,DYES,*HOFF:
                      *P40:17,"(No data will be processed)"
            MOVE      ONE,VALDFLAG               * yes
            MOVE      ONE,PRINTFIN
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:17,*V2LON,DYES,*HOFF:
                      *P40:17,"(No data will be processed)"
            MOVE      ONE,VALDFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSZ,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:17,*V2LON,DNO,*HOFF:
                      *P40:17,"(Data will be processed)"
            MOVE      ZERO,VALDFLAG              * yes
            MOVE      ONE,PRINTFIN
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:17,*V2LON,DNO,*HOFF:
                      *P40:17,"(Data will be processed)"
            MOVE      ZERO,VALDFLAG              * yes
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ0000                     * invalid input

ASKQ9999  RETURN
.
.********************************************************************
.*                          DSCR0000                                *
.*  Processing screen display                                       *
.********************************************************************
DSCR0000  DISPLAY   *P1:4,*EF
          IF        VALDFLAG = 1
            DISPLAY   *P1:6,"Validation mode  (No data will be processed)"
          ELSE
            DISPLAY   *P1:6,"Normal mode  (Data will be processed)"
          ENDIF
.
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          DISPLAY   *P1:13,*EF,"Processing ",*V2LON,FILEPATH,*HOFF:
                    *P1:15,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:17,"U/R Number : ":
                    *P1:18,"Surname    : ":
                    *P1:19,"Records    : ":
                    *P1:24,"Processing ",*V2LON,FNAMET,*HOFF;
.
          MOVE      ZERO,RDSCOUNT         * initialise records read
          MOVE      ZERO,RECCOUNT         * initialise records processed
.
DSCR9999  RETURN
+
.********************************************************************
.*                          PROC0000                                *
.*  Procesing outstanding debts from the outstanding debtors file   *
.********************************************************************
PROC0000  MOVE      ZERO,ERRFLAG
          MOVE      ZERO,FOUNDERR
          MOVE      ZERO,IODPAMNT        * Patient Invoice Amount (INP)
          MOVE      ZERO,IODHAMNT        * Rebate Invoice Amount
          MOVE      ZERO,TOTCASH
          MOVE      ZERO,TOTDEPS
          MOVE      ZERO,TOTALINV
          MOVE      ZERO,TOTALCSH
.
          OPEN      OUTDFILE,FILEPATH
.
PROC1000  CALL      RDINFILE
          BRANCH    OVRCD,PROC9000
.
          IF        (RDSCOUNT%1000)=0 | RDSCOUNT = 1
            DISPLAY   *P14:17,*V2LON,TMPURNO:
                      *P14:18,PSNAME:
                      *P14:19,RDSCOUNT;
          ENDIF
.
          ADD       ONE,RDSCOUNT                 * increment records read
.
          COMPARE   ZERO,VALDFLAG
          GOTO      PROC2000 IF EQUAL            * process
.
          MOVE      ZERO,ERRFLAG
          MOVE      ZERO,ERRCOUNT
          MOVE      ONE,F3
          WHILE     F3<=200
            MOVE      SP70,ERRARRAY[F3]
            ADD       ONE,F3
          DO
.
          MOVE      TMPURNO,KEY8
          CALL      RDMAST1
          IF        OVRCD=1
            UNPACK      SP70,PGNAME,PSNAME
            CLEAR       ERRDESC
            APPEND      "Invalid U/R No.: ",ERRDESC
            APPEND      TMPURNO,ERRDESC
            APPEND      SP70,ERRDESC
            APPEND      SP70,ERRDESC
            RESET       ERRDESC
            CALL        LERR0000
          ENDIF
.
          MOVE      TMPADMN,KEY8
          CALL      RDMISS1
          IF        OVRCD=1
            CLEAR       ERRDESC
            APPEND      "Invalid Adm. No.: ",ERRDESC
            APPEND      TMPADMN,ERRDESC
            APPEND      SP70,ERRDESC
            APPEND      SP70,ERRDESC
            RESET       ERRDESC
            CALL        LERR0000
          ELSE
            MATCH       "00000000",ADATE
            IF          !@EQUAL
              CLEAR       ERRDESC
              APPEND      "Invalid Outstanding Debt.Adm. No.: ",ERRDESC
              APPEND      TMPADMN,ERRDESC
              APPEND      SP70,ERRDESC
              APPEND      SP70,ERRDESC
              RESET       ERRDESC
              CALL        LERR0000
            ENDIF
          ENDIF
.
          CALL      VINV0000                 * Validate Invoice number
          BRANCH    ERRFLAG,PROC8200         * Found an error
.
          CALL      GCSH0000                * get cash payments
          CALL      GDEP0000                * get deposits
.
.         CALL      FFIN0000                * patfinsf record
.
          GOTO      PROC8200
.
.         Processing - valdflag=0
.
PROC2000  CALL      GCSH0000                * get cash payments
          CALL      GDEP0000                * get deposits
.
          CALL      FFIN0000                * patfinsf record
.
          ADD       ONE,RECCOUNT            * increment records processed
.
          CALL      DDTR0000                * delete DTR records for invoice
          CALL      DCSH0000                * delete cash records
.
          CALL      DINV0000                * delete Invoice record
.
PROC8200  CALL      PRTD000
          GOTO      PROC1000
.
PROC9000  CALL      DPAT0000                * remove patient data
          CALL      PRTT0000
.
PROC9999  RETURN
+
.********************************************************************
.         Delete patient records
.********************************************************************
DPAT0000  BRANCH    VALDFLAG,DPAT9999      * validation only
.
          CLOSE     OUTDFILE
          OPEN      OUTDFILE,FILEPATH
.
DPAT1000  CALL      RDINFILE
          BRANCH    OVRCD,DPAT8000
.
          MOVE      TMPADMN,KEY8
          CALL      DEMISS1                 * delete admission recod
          CALL      DEVISA1                 * delete visit record
          CALL      DEPMVX11                * delete visit extension record
.
          MOVE      TMPURNO,KEY8
          CALL      DEPMOSD1                * delete patient Outstanding debt
.
          CALL      DDEP0000                * Delete deposits
.
          GOTO      DPAT1000
.
DPAT8000  
.         CALL      DRCP0000                * Delete receipts
.kkkkk
.
DPAT9999  RETURN
+
.********************************************************************
.         Delete receipts if no transaction
.********************************************************************
DRCP0000  MOVE      SP70,SAVERECN           * receipt number
          MOVE      SP70,KEY12
          CALL      RSRCBNK1
DRCP1000  CALL      RKRCBNK1
          BRANCH    OVRCD,DRCP9999
.
          MOVE      RCBNRECN,SAVERECN       * save receipt no
.
.         remove rcpbnkaf and rcpbdtaf if no record in rcpdteaf file
.
          PACK      KEY17,SAVERECN,SP70
          CALL      RSRCDTE1
          CALL      RKRCDTE1
          BRANCH    OVRCD,DRCP1200
.
          MATCH     RCDTRECN,SAVERECN    * Same receipt?
          GOTO      DRCP1000 IF EQUAL
.
DRCP1200  PACK      KEY17,SAVERECN,SP70
          CALL      RSCMDEP1
          CALL      RKCMDEP1
          BRANCH    OVRCD,DRCP2000
.
          MATCH     CMDERECN,SAVERECN
          GOTO      DRCP1000 IF EQUAL    * found a deposit for the receipt
.
.         remove rcpbdtaf record for the receipt
.
DRCP2000  PACK      KEY15,SAVERECN,SP70
          CALL      RSRCBDT1
          CALL      RKRCBDT1
          BRANCH    OVRCD,DRCP2200
.
          MATCH     SAVERECN,RCBDRECN
          GOTO      DRCP2200 IF NOT EQUAL
.
          PACK      KEY15,RCBDRECN,RCBDUNIQ
          CALL      DERCBDT1
          GOTO      DRCP2000
.
DRCP2200  PACK      KEY17,SAVERECN,SP70
          CALL      RSCMDEP1
          CALL      RKCMDEP1
          BRANCH    OVRCD,DRCP3000
.
          MATCH     CMDERECN,SAVERECN
          GOTO      DRCP3000 IF NOT EQUAL     * different receipt
.
          PACK      KEY17,CMDERECN,CMDETCNT
          CALL      DECMDEP1
          GOTO      DRCP2200
.
.         remove rcpbnkaf record
.
DRCP3000  MOVE      SAVERECN,KEY12
          CALL      DERCBNK1
.
          MOVE      SAVERECN,KEY12
          CALL      RDRCBNK1
.
          GOTO      DRCP1000
.
DRCP9999  RETURN
+
.********************************************************************
.         Delete deposit
.********************************************************************
DDEP0000  PACK      KEY25,TMPADMN,SP70
          CALL      RSRCDTE6
DDEP1000  CALL      RKRCDTE6
          BRANCH    OVRCD,DDEP9999
.
          MATCH     TMPADMN,RCDTVIST     * Same admission?
          GOTO      DDEP9999 IF NOT EQUAL
.
          MATCH     SP70,RCDTINVN
          GOTO      DDEP1000 IF NOT EQUAL   * Invoice no must be blank
.
          PACK      KEY17,RCDTRECN,RCDTTCNT,SP70
          CALL      DERCDTE1
.
          GOTO      DDEP1000
.
DDEP9999  RETURN
+
.********************************************************************
.         Delete any cash payments for the invoice
.********************************************************************
DCSH0000  PACK      KEY29,INVOICEN,SP70
          CALL      RSRCDTE3
          CALL      RKRCDTE3
          BRANCH    OVRCD,DCSH9999
.
          MATCH     INVOICEN,RCDTINVN
          GOTO      DCSH9999 IF NOT EQUAL
.
          PACK      KEY17,RCDTRECN,RCDTTCNT,SP70
          CALL      DERCDTE1
.
          GOTO      DCSH0000
.
DCSH9999  RETURN
+
.********************************************************************
.         Validate invoice number
.********************************************************************
VINV0000  MOVE      TMPINVN,KEY8
          CALL      RDINV1
          IF        OVRCD=1
            CLEAR       ERRDESC
            APPEND      "Invalid Invoice No.: ",ERRDESC
            APPEND      TMPINVN,ERRDESC
            APPEND      SP70,ERRDESC
            APPEND      SP70,ERRDESC
            RESET       ERRDESC
            CALL        LERR0000
            GOTO        VINV9999
          ENDIF
.
.         Check for multiple inv.for this admission
.
          PACK      KEY16,TMPADMN,SP70
          CALL      RDSINV3
VINV1000  CALL      RDKINV3
          BRANCH    OVRCD,VINV9999
.
          MATCH     TMPADMN,DPINVADM
          GOTO      VINV9999 IF NOT EQUAL
.
          MATCH     TMPINVN,PINVNO
          GOTO      VINV1000 IF EQUAL        * same invoice
.
          CLEAR     ERRDESC
          APPEND    "Admission No.:",ERRDESC
          APPEND    TMPADMN,ERRDESC
          APPEND    " has multiple invoices:",ERRDESC
          APPEND    PINVNO,ERRDESC
          APPEND    SP70,ERRDESC
          APPEND    SP70,ERRDESC
          RESET     ERRDESC
          CALL      LERR0000
.
VINV9999  RETURN
+
.********************************************************************
.         Check for any cash payments
.********************************************************************
VCSH0000  MOVE      SP70,SAVERECN
          PACK      KEY29,INVOICEN,SP70
          CALL      RSRCDTE3
VCSH1000  CALL      RKRCDTE3
          BRANCH    OVRCD,VCSH9999
.
          MATCH     INVOICEN,RCDTINVN
          GOTO      VCSH9999 IF NOT EQUAL    * different invoice number
.
          MATCH     SP70,SAVERECN
          IF        !@EQUAL
            MATCH     SAVERECN,RCDTRECN
            GOTO      VCSH1000 IF EQUAL      * same receipt
          ENDIF
          MOVE      RCDTRECN,SAVERECN        * save receipt number
.
          CLEAR     ERRDESC
          APPEND    "Invoice No.: ",ERRDESC
          APPEND    TMPINVN,ERRDESC
          APPEND    " has payments. Receipt No: ",ERRDESC
          APPEND    RCDTRECN,ERRDESC
          APPEND    SP70,ERRDESC
          APPEND    SP70,ERRDESC
          RESET     ERRDESC
          CALL      LERR0000
.
          PACK      SKEY29,RCDTINVN,RCDTRECN,RCDTTCNT
.
.         Check if this receipt has payment for other patient
.
          PACK      KEY17,SAVERECN,SP70
          CALL      RSRCDTE1
VCSH5000  CALL      RKRCDTE1
          BRANCH    OVRCD,VCSH8000
.
          MATCH     RCDTRECN,SAVERECN    * Same receipt?
          GOTO      VCSH8000 IF NOT EQUAL
.
          MOVE      RCDTVIST,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,VCSH5000
.
          MATCH     "00000000",ADATE
          GOTO      VCSH5000 IF EQUAL        * from takeup outstanding debts
.
          MATCH     INVOICEN,RCDTINVN
          IF        !@EQUAL
            CLEAR     ERRDESC
            APPEND    "Receipt No.: ",ERRDESC
            APPEND    RCDTRECN,ERRDESC
            APPEND    " has payment for Inv.no: ",ERRDESC
            APPEND    RCDTINVN,ERRDESC
            APPEND    " Adm.no:",ERRDESC
            APPEND    RCDTVIST,ERRDESC
            APPEND    SP70,ERRDESC
            APPEND    SP70,ERRDESC
            RESET     ERRDESC
            CALL      LERR0000
          ENDIF
.
          GOTO      VCSH5000
.
VCSH8000  MOVE      SKEY29,KEY29
          CALL      RDRCDTE3
          GOTO      VCSH1000
.
VCSH9999  RETURN
+
.********************************************************************
.         Misc.debtor code                                          *
.********************************************************************
MCHR0000  MOVE      "ODP      ",MISCODE1
          MOVE      "ODH      ",MISCODE2
.
          MOVE      ONE,F1
          MOVE      MISCODE1,KEY9
.
MCHR1000  UNPACK    SP70,MHFUND,PTMCHFTT
          PACK      KEY21,PTCNDCLM,MHFUND,PTMCHFTT,KEY9,SP70
          PACK      KEY29,KEY21,SP70
          CALL      RDSMCHG1
          CALL      RDKMCHG1
          BRANCH    OVRCD,MCHR8000
.
          PACK      SKEY21,MCLMCOD,MHFUND,PTMCHFTT,MCHARGE,SP70
          MATCH     KEY21,SKEY21
          GOTO      MCHR8000 IF NOT EQUAL
.
          IF        F1=1
            MOVE      "A",FINTYPE1
            PACK      FINCODE1,ANSM,MMSCGRP,MISCODE1,SP20
            MOVE      MISCODE2,KEY9         * Misc.HF debt
            ADD       ONE,F1
            GOTO      MCHR1000
          ELSE
            MOVE      "A",FINTYPE2
            PACK      FINCODE2,ANSM,MMSCGRP,MISCODE2,SP20
            GOTO      MCHR9200
          ENDIF
.
MCHR8000  IF        F1=1
            DISPLAY   *P1:20,*EL,"Misc.Debt. ",MISCODE1," is NOT setup. ";
          ELSE
            DISPLAY   *P1:20,*EL,"Misc.HF Debt. ",MISCODE2," is NOT setup. ";
          ENDIF
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      MCHR9999
.
MCHR9200  MOVE      ZERO,EXIT
MCHR9999  RETURN
+
.********************************************************************
.         FFIN0000                                                  *
.         loop patfinsf                                             *
.********************************************************************
FFIN0000  MOVE      TMPINVN,FININVN
          MOVE      TMPADMN,FINADMN
          MOVE      TMPURNO,FINURNO
.
          COMPARE   ZERO,TMPINVA1
          GOTO      FFIN1000 IF EQUAL
.
          MATCH     TMPINVD,STOFYEAR
          IF        @LESS
            PACK      FINDATE,TMPINVD
          ELSE
            PACK      FINDATE,STOFYEAR
          ENDIF
          REP       " 0",FINDATE
.
          MOVE      TMPINVA1,FINAMT
          MULT      "-1",FINAMT
          MOVE      FINTYPE1,FINTYPE
          MOVE      FINCODE1,FINCODE
          MOVE      SP70,FINHOSP
          IF        PTCNMFEE=1
            UNPACK    FINCODE1,DIM1,MMSCGRP,MCHARGE,DIM15
.                              Misc. Charge, Group Code, Item Code
            MATCH     MMSCGRP,SP3
            IF        @EQUAL
              PACK      FINCODE,ANSM,ACLAIM,MCHARGE,SP20
.                               Misc. Charge, Claim Code, Item Code
            ELSE
              MOVE      "-",DIM1
              PACK      FINCODE,ANSM,ACLAIM,DIM1,MMSCGRP,SP20
.                               Misc. Charge, Claim Code, Minus, Group Code
            ENDIF
          ENDIF
          MOVE        TMPSYST,FINSYS
          MOVE        SP6,FINSITE
          MOVE        ZERO,FGSTFLAG
          CALL        PATCALF
.
FFIN1000  COMPARE     ZERO,TMPINVA2
          GOTO        FFIN9999 IF EQUAL
.
          MATCH       TMPINVD,STOFYEAR
          IF          @LESS
            PACK        FINDATE,TMPINVD
          ELSE
            PACK        FINDATE,STOFYEAR
          ENDIF
          REP         " 0",FINDATE
.
          MOVE        TMPINVA2,FINAMT
          MULT        "-1",FINAMT
          MOVE        FINTYPE2,FINTYPE
          MOVE        FINCODE2,FINCODE
          MOVE        SP70,FINHOSP
          IF          PTCNMFEE=1
            UNPACK      FINCODE2,DIM1,MMSCGRP,MCHARGE,DIM15
.                                Misc. Charge, Group Code, Item Code
            MATCH       MMSCGRP,SP3
            IF          @EQUAL
              PACK        FINCODE,ANSM,ACLAIM,MCHARGE,SP20
.                                 Misc. Charge, Claim Code, Item Code
            ELSE
              MOVE        "-",DIM1
              PACK        FINCODE,ANSM,ACLAIM,DIM1,MMSCGRP,SP20
.                                 Misc. Charge, Claim Code, Minus, Group Code
            ENDIF
          ENDIF
          MOVE        TMPSYST,FINSYS
          MOVE        SP6,FINSITE
          MOVE        ZERO,FGSTFLAG
          CALL        PATCALF
FFIN9999  RETURN
+
.********************************************************************
.        Delete DTR record
.********************************************************************
DDTR0000  PACK      KEY23,TMPINVN,SP70
          CALL      RDSDTRN5
          CALL      RDKDTRN5
          BRANCH    OVRCD,DDTR9999
.
          MATCH     TMPINVN,TREF
          GOTO      DDTR9999 IF NOT EQUAL     * different invoice
.
          PACK      KEY23,TREF,DTRECTYP,DTADMNO,TTRANSN1,SP70
          CALL      DEDTRN5
.
          GOTO      DDTR0000
.
DDTR9999  RETURN
+
.********************************************************************
.        Delete invoice 
.********************************************************************
DINV0000  PACK      KEY8,TMPINVN,SP70
          CALL      DEINV1
DINV9999  RETURN
+
.********************************************************************
.         Get cash payment
.********************************************************************
GCSH0000  MOVE      ZERO,CASHAMNT
          MOVE      ZERO,TOTRECPN
          PACK      KEY36,SP70
          CLEAR     KEY36
.
          PACK      KEY29,INVOICEN,SP70
          CALL      RSRCDTE3
GCSH1000  CALL      RKRCDTE3
          BRANCH    OVRCD,GCSH9000
.
          MATCH     INVOICEN,RCDTINVN
          GOTO      GCSH9000 IF NOT EQUAL    * different invoice number
.
          PACK      KEY12,RCDTRECN
          CALL      RDRCBNK1
          BRANCH    OVRCD,GCSH1000
          MATCH     "1",RCBNSTAT
          GOTO      GCSH1000 IF EQUAL        * Cancelled
.
          MATCH     SP70,RCDTRELD
          GOTO      GCSH1000 IF EQUAL        * not released
.
          ADD       RCDTAMNT,CASHAMNT
.
          CALL      FINC0000               * fixup patfins cash
.
          ADD       ONE,TOTRECPN
          IF        TOTRECPN<4
            APPEND    RCDTRECN,KEY36
            APPEND    SP1,KEY36
          ENDIF
.
          GOTO      GCSH1000
.
GCSH9000  APPEND    SP70,KEY36
          RESET     KEY36
.
GCSH9999  RETURN
+
.********************************************************************
.         Check for Deposits
.********************************************************************
GDEP0000  MOVE      ZERO,XDEPAMNT
          MOVE      ZERO,TOTRECPN
          PACK      KEY36A,SP70
          CLEAR     KEY36A
          PACK      KEY25,TMPADMN,SP70
          CALL      RSRCDTE6
GDEP2000  CALL      RKRCDTE6
          BRANCH    OVRCD,GDEP9000
.
          MATCH     TMPADMN,RCDTVIST     * Same admission?
          GOTO      GDEP9000 IF NOT EQUAL
.
          MATCH     SP70,RCDTINVN
          GOTO      GDEP2000 IF NOT EQUAL   * Invoice no must be blank
.
          PACK      KEY12,RCDTRECN
          CALL      RDRCBNK1
          BRANCH    OVRCD,GDEP2000
          MATCH     "1",RCBNSTAT
          GOTO      GDEP2000 IF EQUAL        * Cancelled
.
          ADD       RCDTAMNT,XDEPAMNT
.
          ADD       ONE,TOTRECPN
          IF        TOTRECPN<4
            APPEND    RCDTRECN,KEY36A
            APPEND    SP1,KEY36A
          ENDIF
          GOTO      GDEP2000
.
GDEP9000  APPEND    SP70,KEY36A
          RESET     KEY36A
.
GDEP9999  RETURN
+
.********************************************************************
.           Fix up cash for patfinsf
.********************************************************************
FINC0000  PACK      FINCODE,ANSA,SP70      * patient payment
.
          MOVE      RCDTRECN,KEY12
          CALL      RDRCBNK1
          BRANCH    OVRCD,FINC2000
.
          MOVE      ZERO,FORM1
          MOVE      RCBNTTYP,FORM1
          BRANCH    FORM1,FINC1000,FINC1100,FINC1200,FINC1000
          GOTO      FINC2000
.
FINC1000  PACK      FINCODE,ANSB,RCBNRCOD,SP70
          GOTO      FINC2000
.
FINC1100  PACK      FINCODE,ANSI,RCBNRCOD,SP70
          GOTO      FINC2000
.
FINC1200  PACK      FINCODE,ANSC,SP70
.
FINC2000  MOVE      "B",FINTYPE
          MOVE      RCDTAMNT,FINAMT
          MULT      "-1",FINAMT
.
          MATCH     RCDTRELD,STOFYEAR
          IF        @LESS
            PACK      FINDATE,RCDTRELD
          ELSE
            PACK      FINDATE,STOFYEAR
          ENDIF
          REP       " 0",FINDATE
.
          MOVE      THREE,FINSYS
          MOVE      SP6,FINSITE
          MOVE      ZERO,FGSTFLAG
          MOVE      SP70,FINHOSP
          CALL      PATCALF
.
FINC9999  RETURN
+
.********************************************************************
.        Subroutine to print data
.********************************************************************
PRTD000  MOVE       ZERO,TMPINVA
         MOVE       TMPINVA1,TMPINVA
         ADD        TMPINVA2,TMPINVA
         MOVE       TMPINVA,FORM9P2
         MOVE       SP70,KEY12
.
         BRANCH     PRINTFIN,PRTD900
.
         IF         TMPINVA<>CASHAMNT
           MOVE       "Not Balanced",KEY12
         ENDIF
         UNPACK     TMPINVD,CCENT,CYEAR,CMON,CDAY
         CALL       PACDATE
.
         BRANCH     ASCIFILE,PRTD400            * Yes, ASCIFILE = 1
.
         COMPARE    "55",CLNO
         CALL       HEAD IF NOT LESS
.
         IF         ERRFLAG=1
           PRINT      *1," ****** ERRROR ******"
         ENDIF
         MOVE       CASHAMNT,FORM9D2
.
         PRINT      *1,TMPADMN,*10,TMPURNO,*19,PGNAME,*45,PSNAME:
                    *69,TMPINVN,*82,CPCDATE:
                    *94,FORM9P2,*108,FORM9D2,*121,KEY12
         ADD        ONE,CLNO
.
         COMPARE    ZERO,TMPINVA1
         GOTO       PRTD020 IF NOT EQUAL
.
         MATCH      SP70,KEY36
         GOTO       PRTD100 IF EQUAL
.
PRTD020  MOVE       TMPINVA1,FORM9P2
         PRINT      *1,KEY36,*45,"(",MISCODE1,")  ",MISCTTL1,*94,FORM9P2
         ADD        ONE,CLNO
.
PRTD100  COMPARE    ZERO,TMPINVA2
         GOTO       PRTD200 IF EQUAL
.
         MOVE       TMPINVA2,FORM9P2
         PRINT      *45,"(",MISCODE2,")  ",MISCTTL2,*94,FORM9P2
         ADD        ONE,CLNO
.
PRTD200  IF         XDEPAMNT<>0
           PRINT      *69,"Deposit":
                      *105,XDEPAMNT,*121,"*"
         ENDIF
         ADD        ONE,CLNO
.
         COMPARE    ZERO,ERRFLAG
         GOTO       PRTD900 IF EQUAL      * No error
.
         MOVE       ONE,F3
         WHILE      F3<=ERRCOUNT
           MATCH     SP70,ERRARRAY[F3]
           IF        !@EQUAL
             PRINT     *19,ERRARRAY[F3]
             ADD       ONE,CLNO            * increment page line count
           ENDIF
           ADD       ONE,F3
         DO
         GOTO       PRTD900
.
.        Comma delimiter file
.
PRTD400   IF        ERRFLAG=1
           WRITE      XXASCII1,SEQ;"**** ERROR *****"
          ENDIF
.
          MOVE      CPCDATE,XTMPINVD
          MOVE      CASHAMNT,XPAYAMNT       * payment
          PACK      XRECEIPT,KEY36,SP70     * Receipt number
          MOVE      KEY12,XCOMMENT
          CALL      WRASCII1
.
PRTD900   ADD       TMPINVA1,IODPAMNT  * Patient Invoice Amount (INP)
          ADD       TMPINVA2,IODHAMNT  * Rebate Invoice Amount
.
          ADD        CASHAMNT,TOTCASH
          ADD        XDEPAMNT,TOTDEPS
.
PRTD999   RETURN
+
.********************************************************************
.        Print Header 
.********************************************************************
HEAD     MOVE       ONE,CNOUNDLN
         IF         VALDFLAG=1
           MOVE       "- Error Report ",CPHDROPT
         ELSE
           MOVE       "- Process Data",CPHDROPT
         ENDIF
         CALL       HEAD132
.
         PRINT      *N,*N,*2,"Adm ##",*11,"U/R ##",*19,"Patient Given Names":
                    *45,"Patient Surname",*68,"Invoice ##":
                    *80,"Invoice Date",*95,"Invoice Amt":
                    *110,"  Payments":
                    *N,"--------",*10,"--------",*19,"--------------------":
                    "-----",*45,"--------------------",*68,"---------":
                    *80,"------------",*95,"-----------":
                    *110,"----------"
         MOVE       SIX,CLNO
         RETURN
.
.********************************************************************
.        Printing end of report
.********************************************************************
PRTT0000  COMPARE   ZERO,CPAGENO
          GOTO      PRTT1000 IF EQUAL
.
          DISPLAY   *P1:24,*EL,*V2LON,*P20:24:
                    "** Report Generation Completed **",*W;
.
PRTT1000  CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:19,*V2LON,RDSCOUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FOUNDERR<>0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          PRINT     *N:
                    *1,"Total records read                    - ",RDSCOUNT,*N:
                    *1,"Total records processed               - ",RECCOUNT,*N
.
          MOVE      IODPAMNT,FORM12P2
          ADD       IODHAMNT,FORM12P2
          PRINT  *N,*1,"Total Patient Debt (ODP)              - ",IODPAMNT,*N:
                    *1,"Total     H.F Debt (ODH)              - ",IODHAMNT,*N:
                    *1,"Total                                 - ",FORM12P2
.
          PRINT     *1,"Total Cash    : ",TOTCASH:
                    *N,*1,"Total Deposit : ",TOTDEPS
.
          PRINT     *N,"**** End of Report ****";
.
          IF        VALDFLAG=0
            DISPLAY   *P1:24,*EL,*B,"Process complete.  ";
          ENDIF
          CALL      HITENTER
.
PRTT9999  RETURN
+
.*****************************************************************************
.*                              LERR0000           Called by: VCOD0000       *
.*                   Load  an error detail line                              *
.*****************************************************************************
LERR0000  ADD       ONE,ERRCOUNT
          PACK      ERRARRAY[ERRCOUNT],ERRDESC,SP70
          MOVE      ONE,ERRFLAG
          MOVE      ONE,FOUNDERR
.
LERR9999  RETURN
+
.**********************************************************************
.         Get File and path name
.**********************************************************************
KPTH0000  MOVE      SP70,FILEPATH
          DISPLAY   *P1:4,"Enter Path Name               :";
          KEYIN     *P33:4,*EL,FILEPATH
          RESET     FILEPATH
          GOTO      KPTH9000 IF EOS
.
          ENDSET    FILEPATH
.
          CMATCH    "/",FILEPATH
          GOTO      KPTH2200 IF NOT EQUAL
.
          LENSET    FILEPATH
          RESET     FILEPATH
.
          PACK      FILEPATH,FILEPATH,SP30,SP30,SP30,SP30
          STRIP     FILEPATH
          MOVE      FILEPATH,SAVEPATH
          STRIP     SAVEPATH
.
          ENDSET    FILEPATH
          APPEND    FNAMET,FILEPATH
          APPEND    ".txt",FILEPATH
          RESET     FILEPATH
.
          MOVE      ZERO,EXIT
          GOTO      KPTH9999
.
KPTH2200  DISPLAY   *P1:24,*EL,*B,"Path must end with a slash (/)";
          CALL      HITENTER
          GOTO      KPTH0000
.
KPTH9000  MOVE      ONE,EXIT
KPTH9999  RETURN
+
.**************************************************************************
.*                                 ASCI0000            Called by: ML0000  *
.*                         Generate an Ascii file                         *
.*    Returns: ASCIFILE = FALSE (0)  Do NOT generate Ascii file           *
.*                        TRUE  (1)  Generate Ascii file                  *
.**************************************************************************
ASCI0000  KEYIN     *P1:6,*EF,"Generate an Ascii file (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,")? ",*V2LON,ANS
.
          REP       "yYnN",ANS               * Allow for lower case letters
.
          MOVE      ZERO,CLNO
          MATCH     ANSY,ANS                 * Generate Ascii file ?
          GOTO      ASCI1000 IF NOT EQUAL
.
          MOVE      TRUE,ASCIFILE            * Yes, ASCIFILE = 1
.
          CALL      ANAM0000                 * Get Ascii File Name
          BRANCH    EXIT,ASCI0000            * Nothing entered, re-key Y/N
          GOTO      ASCI9999
.
ASCI1000  MATCH     ANSN,ANS                 * Generate Ascii file ?
          GOTO      ASCI2000 IF NOT EQUAL
.
          MOVE      "99",CLNO
          MOVE      FALSE,ASCIFILE           * No, ASCIFILE = 0
          GOTO      ASCI9999
.
ASCI2000  BEEP                               * Error
          GOTO      ASCI0000                 * Re-Key
.
ASCI9999  RETURN
+
.**************************************************************************
.*                                 ANAM0000           Called by: ASCI0000 *
.*                       Obtain Ascii file name                           *
.**************************************************************************
ANAM0000  KEYIN     *P36:7,"File Name : ",*V2LON,ASCINAME
.
          RESET     ASCINAME                 * File Name Entered
          GOTO      ANAM9900 IF EOS
.
          CLOSE     XXASCII1                 * Ensure file is closed
.
.         Check if file already exits
.
          TRAP      ANAM1000 IF IO           * File does not exist
          OPEN      XXASCII1,ASCINAME
          TRAPCLR   IO
.
          MOVE      SP1,ANS
          STRIP     ASCINAME
ANAM0100  DISPLAY   *P1:24,*B,*V2LON,ASCINAME,".txt",*HOFF," already exits.";
          KEYIN     " Overwrite with new file (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,")? ",*V2LON,ANS
.
          REP       "yYnN",ANS               * Allow for lower case letters
.
          MATCH     ANSY,ANS                 * Overwrite Ascii file ?
          GOTO      ANAM2000 IF EQUAL        * Yes, exit routine
.
          MATCH     ANSN,ANS                 * Overwrite Ascii file ?
          GOTO      ANAM0000 IF EQUAL        * No, Re-Key file name
.
          BEEP                               * Error
          GOTO      ANAM0100                 * Re-Key
.
ANAM1000  NORETURN
ANAM2000  PREP      XXASCII1,ASCINAME
.
          MOVE      FALSE,EXIT
          GOTO      ANAM9999
.
ANAM9900  MOVE      TRUE,EXIT

ANAM9999  RETURN
.
.********************************************************************
GETSVAR
CLPATMAS  RETURN
.
.==============================================================================
WRASCII1  WRITE     XXASCII1,SEQ;TMPADMN,XXASCOMA,TMPURNO,XXASCOMA,PGNAME:
                                 XXASCOMA,PSNAME,XXASCOMA,TMPINVN,XXASCOMA:
                                 XTMPINVD,XXASCOMA,TMPINVA1,XXASCOMA,TMPINVA2:
                                 XXASCOMA,TMPINVA,XXASCOMA,XPAYAMNT,XXASCOMA:
                                 XDEPAMNT,XXASCOMA,XRECEIPT,XXASCOMA,XCOMMENT
          RETURN
.
.********************************************************************
.*                          I/O for tempfile                        *
.********************************************************************
RDINFILE  MOVE      ZERO,OVRCD
          READ      OUTDFILE,SEQ;TMPADMN,TMPURNO,TMPINVN,TMPINVD:
                                 TMPINVA1,TMPINVA2,TMPCLMV,TMPHFND,TMPHTAB:
                                 TMPSYST
          GOTO      OVERCOND IF OVER
          PACK      INVOICEN,SP4,TMPINVN,SP70
          RETURN
.
.==============================================================================
.         Find out which financial year and period this is in
.
PATCALF   OPEN      PATFIGA1,"patfigaf" * open gst financial summary file
          OPEN      PATDRGA2,"patdrgaf" * Open the date range file
          MOVE      ZERO,FOFFSET        * Put into the Prior year variable
.
          PACK      KEY14,FINDATE,SP6   * Position to this date
          CALL      RDSDRGA2            * Go to this date in the file
          CALL      RDKDRGA2            * Get the first record on or after date
          BRANCH    OVRCD,PATCALF7      * No records in file.
.
          MATCH     DRGFDTE,FINDATE     * Is the date before the from date ?
          GOTO      PATCALF7 IF LESS    * Yes. Date not found in file.
.
.         Period record found
.
          MOVE      DRGYR,FINYEAR       * Save financial year
          MOVE      DRGNUM,FOFFSET      * Save period offset
.
.         Check if this is in a prior financial year
.
          PACK      FINDATE,CCC,CYY,CMM,CDD
          REP       " 0",FINDATE        * Zero fill the current date
.
PATCALF1  PACK      KEY14,FINDATE,SP6   * Position to this date
          CALL      RDSDRGA2            * Go to this date in the file
          CALL      RDKDRGA2            * Get the first record on or after date
          BRANCH    OVRCD,PATCALF8      * No records in file.
.
          MATCH     DRGFDTE,FINDATE     * Is the date before the from date ?
          GOTO      PATCALF8 IF LESS    * Yes. Date not found in file.
.
          MATCH     DRGYR,FINYEAR       * Is this the same as the request date?
          GOTO      PATCALF3 IF EQUAL   * Yes. Continue Processing
.
.         If this the first day of the financial year, then let all invoiced
.         data go through as normal
.
          MATCH     "01",DRGNUM         * Is this the first period of year ?
          GOTO      PATCALF2 IF NOT EQUAL
.
          MATCH     FINDATE,DRGFDTE     * Is this date the start of period ?
          GOTO      PATCALF2 IF NOT EQUAL
.
.         Only allow invoices and cash to go into the actual year.
.
          CMATCH    ANSB,FINTYPE
          GOTO      PATCALF3 IF EQUAL
.
          CMATCH    ANSA,FINTYPE
          GOTO      PATCALF2 IF NOT EQUAL
.
.         Invoice on the first day of the financial year. Allow to go into
.         previous year.
.
          GOTO      PATCALF3
.
.         Put the figures into the prior year column of report
.
PATCALF2  MOVE      TEN4,FOFFSET        * Put into the Prior year variable
          MOVE      DRGYR,FINYEAR       * Put into the current financial year
.
.         Post the data to the Fees Invoices file
.
PATCALF3  MOVE      ZERO,FORM2
          IF        IBCNMHOS<>1
            MOVE      SP70,FINHOSP
          ENDIF
          PACK      KEY28,FINSYS,FINSITE,FINYEAR,FINTYPE,FINCODE,FINHOSP,SP70
.
.         If the key does not exist, write a new record
.
PATCALF4  MOVE      "FIN",PRXCODE   * System Lock 
          CALL      GETSLK00        * Get System Lock 
          CALL      RDFINS1       * Read this record
          BRANCH    OVRCD,PATCALF5  * Does not exist, write a new record
.
          MOVE      ZERO,FINWRK
          LOAD      FINWRK,FOFFSET,FINMTH1,FINMTH2,FINMTH3:
                                     FINMTH4,FINMTH5,FINMTH6:
                                     FINMTH7,FINMTH8,FINMTH9:
                                     FINMTH10,FINMTH11,FINMTH12:
                                     FINMTH13,FLSTYR
.
          ADD       FINAMT,FINWRK       * Update the record with the amount
.
          BRANCH    VALDFLAG,PATCALF9
.
          STORE     FINWRK,FOFFSET,FINMTH1,FINMTH2,FINMTH3:
                                   FINMTH4,FINMTH5,FINMTH6:
                                   FINMTH7,FINMTH8,FINMTH9:
                                   FINMTH10,FINMTH11,FINMTH12:
                                   FINMTH13,FLSTYR
.
          CALL      UPFINS1             * Update the record
          CALL      RELSLK00        * Release System Lock
.
          GOTO      PATCALF9            * Finished
.
.         Write a new record. Zero amounts, and then go and update the record
.
PATCALF5  MOVE      ZERO,FINPER
          MOVE      ZERO,FINMTH1
          MOVE      ZERO,FINMTH2
          MOVE      ZERO,FINMTH3
          MOVE      ZERO,FINMTH4
          MOVE      ZERO,FINMTH5
          MOVE      ZERO,FINMTH6
          MOVE      ZERO,FINMTH7
          MOVE      ZERO,FINMTH8
          MOVE      ZERO,FINMTH9
          MOVE      ZERO,FINMTH10
          MOVE      ZERO,FINMTH11
          MOVE      ZERO,FINMTH12
          MOVE      ZERO,FINMTH13
          MOVE      ZERO,FLSTYR
          MOVE      SP30,FSPARE
          UNPACK    KEY28,DFINSYS,FINSITE,FINYEAR,FINTYPE,FINCODE,FINHOSP
          MOVE      DFINSYS,FINSYS
.
          CALL      WRFINS1
.
          GOTO      PATCALF4
.
.         The requested date does not exist in the date range file.
.
PATCALF7  UNPACK    FINDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          KEYIN     *P1:24,*EL,*V2LON,*B:
                    "** Date ",*DV,CPCDATE," not found in Period Range":
                    " file. Hit <ENTER> to retry ",*EOFF,ANS;
          GOTO      PATCALF
.
.         The current date does not exist in the date range file.
.
PATCALF8  UNPACK    FINDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          KEYIN     *P1:24,*EL,*V2LON,*B:
                    "** Date ",*DV,CPCDATE," not found in Period Range":
                    " file. Hit <ENTER> to retry ",*EOFF,ANS;
          GOTO      PATCALF1
.
.         Finished update of fees invoice file
.
PATCALF9  RETURN
.
          INC       STD001IO
          INC       PATCOMN3
.
          INC       RCPDTEIO/INC
          INC       RCPBDTIO/INC
          INC       RCPBNKIO/INC
          INC       COMDEPIO/INC
          INC       PATRFNIO/INC
          INC       NZPRFNIO/INC
.
          INC       PMSOSDIO/INC
          INC       PATRFGIO/INC
          INC       PATDRGIO/INC
          INC       PATCODIO/INC
          INC       PATDTRIO/INC
          INC       PATFINIO/INC
          INC       PATFIGIO/INC
          INC       PATINVIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATVISIO/INC
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
          INC       PATMCHIO/INC
          INC       NZPFINIO/INC
          INC       NZPFIGIO/INC
