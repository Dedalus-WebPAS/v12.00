.------------------------------------------------------------
. Function          : Procedure for Seach of 
.                     Fill in description of Search
.
. Parameters        : 
.                   : CKEYORDR    0=Key Word Search, 1=Alphabetic Search
.                     Fill in Other Parameters Required
.
. Includes Required :
.                     Fill in Includes Required
. Open Tables Req   :
.                     Fill in Tables that Must be Open
. Returns Fields    : OVRCD    0=Valid Record Selected, 1=No Record Selected
.                     Record Read from xxxxxxx Table
.                     Fill in Other Return Values
.
. Modifications :
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Routine to Seach for
.  a coded field via either a Key Word Index or Alphabetical
.  Index and output a ? Selection List.
.  
.  A Key Word Index Table is Defined in the following Manner
.
.  apsckiaf
.  APSCKIA1
.  APSCKIA2    
.  
.  APCKCRD      DIM       xx    * Code Field 
.  APCKKWD      DIM       15    * Key Word
.
.  Index 1   APCKCRD , APCKKWD 
.  Index 2   APCKKWD , APCKxxxx
.
.To convert this Procedure the following should be performed in this sequence
.    Global Change apsmxraf to name of Alphabetic Search Table   eg patdoctf
.    Global Change APSMXRA1 to index of Alphabetic Search Table  eg PATDOCT2
.    Global Change RDAPMX1  to the Read on Alpha Search Index    eg RDDOCT2
.    Global Change RKAPMX1 to the Read Next Alpha Search Index  eg RDKDOCT2
.    Global Change RPAPMX1 to the Read Prev Alpha Search Index  eg RDPDOCT2
.    Global Change RSAPMX1 to the Read Post Alpha Search Index  eg RDSDOCT2
.    Global Change APMXCRD to the Code Field from the Table     eg DCODE
.    Global Change APMXREF to the Name Field from the Table     eg DSNAME
.    Global Change KEY35    to the Key for the Aplha Index       eg KEY26
.    Global Change apsckiaf to name of Key Word Table            eg patdkiaf
.    Global Change APSCKIA1 to index 1 of Key Word Table         eg PATDKIA1
.    Global Change APSCKIA2 to index 2 of Key Word Table         eg PATDKIA2
.    Global Change APCKCRD  to Key Word Index Code Field         eg PTDKDOC
.    Global Change APCKKWD  to Key Word Index Word Field         eg PTDKKWD
.    Global Change HAPCKY   to Routine Label                     eg HPTDKA00
.    Global Change KEY20    to the Key needed for Key Word Table eg KEY21
.    Global Change KEY5    to the Key for the Code Field        eg KEY6
.    Global Change RDAPMA1 to the Read on Master Table          eg RDDOCT1
.    Global Change APCK     to the IO Call ID for the Key Words  eg PTDK
.    Global Change mastactv to the field to Indicate Inactive Code eg DRSTAT
.
.    Modify List Display to Suit
.
.    Note : vi Global change command   :%s/FromString/ToString/g
.  
.  A Alphabetic Index on a Master Table is Defined in the following Manner
.                              
.  APMXCRD    DIM       xx    * Code Field 
.  APMXREF    DIM       xx    * Name or Description Field
.
.------------------------------------------------------------
           DEFPROC   HAPCKI00
.
           INC       APSCKIFD/INC
.
.   Modify the following two declarations to the correct length
SAVKEY20  DIM       20       * Key Word Table Index 
SAVKEY5   DIM       5        * Code Length
.
SELITMNO  FORM      2
F12       FORM      12
F2        FORM      2
CHECKSUS  FORM      1
KEYDES60  DIM       60
SIXTY     FORM      "60"
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       15
KEYWRD02  DIM       15
KEYWRD03  DIM       15
KEYWRD04  DIM       15
KEYWRD05  DIM       15
KEYWRD06  DIM       15
KEYWRD07  DIM       15
KEYWRD08  DIM       15
KEYWRD09  DIM       15
KEYWRD10  DIM       15
KEYWRDXX  DIM       15
SHOWSUSP  FORM      1    * Show Suspended or Inactive Codes 0=No 1=Yes
SEARCHTY  FORM      1    * Search Type  0=Key Word,  1=Alphabetic
FLAGDESC  DIM       127  * Description of Flag Settings
DISPVAR   DIM       127
FLAGROW   FORM      3
FLAGCOL   FORM      3
DOAGAIN   FORM      1    * Enter New Search String
.------------------------------------------------------------
. Search 
.------------------------------------------------------------
HAPCKI00  MOVE      CKEYORDR,SEARCHTY
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      APSCKIA1,"apsckiaf"
          TRAPCLR   IO
          IF        OVRCD=1
            BEEP
            MOVE      "ERROR: Search Table Missing (apsckiaf)- ",DISPMSG
            CALL      MESSAGE1
            GOTO      HAPCKIZZ
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      APSMXRA1,"apsmxraf"
          TRAPCLR   IO
          IF        OVRCD=1
            BEEP
            MOVE      "ERROR: Search Table Missing (apsmxraf)- ",DISPMSG
            CALL      MESSAGE1
            GOTO      HAPCKIZZ
          ENDIF
.
          OPEN      APSCKIA2,"apsckiaf"
          MOVE      ZERO,CSCRSIZ
.
          MOVE      "08",HTOP
          MOVE      "24",HBOT
          MOVE      "01",HLEF
          MOVE      "80",HRIG
.
HAPCKI10  CALL      KWINT000
          BRANCH    EXIT,HAPCKI99
          MOVE      STDCOL00,STDCOL01
          ADD       " 5",STDCOL01
          DISPLAY   *PSTDCOL01:STDROW,*V2LON,*ULON,"Code"            
          MOVE      STDCOL01,STDCOL02
          ADD       "7",STDCOL02
          DISPLAY   *PSTDCOL02:STDROW,*V2LON,*ULON,"Creditor Name",*HOFF
          MOVE      STDCOL02,STDCOL03
          ADD       "35",STDCOL03
          DISPLAY   *PSTDCOL03:STDROW,*V2LON,*ULON,"Supplier Name",*HOFF
          MOVE      STDCOL03,STDCOL04
          ADD       "35",STDCOL04
.
          CLIP
          FLUSH     HLEF,HTOP,HRIG,HBOT
.
HAPCKI20  IF        SEARCHTY=1
            CALL      ALPSRH00
          ELSE
            CALL      KEYSRH00              * Key Word Search
          ENDIF
          BRANCH    DOAGAIN,HAPCKI10,HAPCKI20
.
          PUTSCR    CSSCRNUM,HLEF,HTOP,HRIG,HBOT
          CALL      FRESCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
.
HAPCKI99  CLOSE     APSCKIA1
          CLOSE     APSCKIA2
          GOTO      HAPCKIZZ           * End Procedure
.------------------------------------------------------------
. Perform Key Word Search
.------------------------------------------------------------
KEYSRH00  MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          ADD       ONE,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          ASSIGN    STDROW+1,FLAGROW
          ASSIGN    ((HRIG-HLEF)/2)-13,FLAGCOL      
          DISPLAY   *PFLAGCOL:FLAGROW,*V2LON,*ULON,"Enter Key Words for Search"
          ASSIGN    STDROW+3,FLAGROW
          ASSIGN    ((HRIG-HLEF)/2)-30,FLAGCOL
          KEYIN     *PFLAGCOL:FLAGROW,*V2LON,KEYWRD00
          MOVE      MINITEM,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          ENDSET    KEYWRD00
          APPEND    SP70,KEYWRD00
          RESET     KEYWRD00
          CALL      GETWRD00     * Break Words into Seprate Fields
.
KEYSRH09  MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          MOVE      SP70,APCKCRD
.
          STRIP     KEYWRD01
          PACK      KEY20,KEYWRD01,SP70
          CALL      RSAPCK2 
KEYSRH10  CALL      RKAPCK2 
          BRANCH    OVRCD,KEYSRH15
.
          CALL      CHREC000
          BRANCH    OVRCD,KEYSRH10,KEYSRH15
.
          ADD       ONE,SELITMNO
          ADD       ONE,STDROW
          PACK      KEY20,APCKKWD,APCKCRD
          STORE     KEY20,SELITMNO,ST1,ST2,ST3,ST4,ST5: 
                                 ST6,ST7,ST8,ST9,ST10:
                                 ST11,ST12,ST13,ST14,ST15:
                                 ST16,ST17
          DISPLAY   *PSTDCOL00:STDROW,SP1,*V2LON,SELITMNO,DOT;
          IF        CHECKSUS<>0
            DISPLAY   *V2LON,*BLINKON,"*"
          ENDIF
          DISPLAY   *PSTDCOL01:STDROW,APCKCRD:
                    *PSTDCOL02:STDROW,APMACN1:
                    *PSTDCOL03:STDROW,APMASN1
.
          COMPARE   MAXITEM,SELITMNO
          GOTO      KEYSRH10 IF NOT EQUAL
.
KEYSRH15  MOVE      ONE,DITEM
          MOVE      MINITEM,DROW
          ADD       ONE,DROW
          DISPLAY   *PSTDCOL00:DROW,*V2LON,*HON,SP1,DITEM,DOT
.
KEYSRH20  CALL      KWSEL000
          BRANCH    EXIT,KEYSRH30,KEYSRH35,KEYSRH40,KEYSRH45,KEYSRH98:
                                  KEYSRH91,KEYSRH00,KEYSRH70
.                        Next     Last     Home     End      Expand/Reduce
.                                 Exit     Search   Flags
          GOTO      KEYSRH92
.
KEYSRH30  CALL      RKAPCK2 
          BRANCH    OVRCD,KEYSRH85
          CALL      CHREC000
          BRANCH    OVRCD,KEYSRH30,KEYSRH85
.
          PACK      KEY20,APCKKWD,APCKCRD,SP70                                  
          CALL      RPAPCK2 
          MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      KEYSRH10
.
KEYSRH35  MOVE      ST1,KEY20
          CALL      RDAPCK2 
.
KEYSRH36  CALL      RPAPCK2 
          BRANCH    OVRCD,KEYSRH85
          CALL      CHREC000
          BRANCH    OVRCD,KEYSRH36,KEYSRH85
          PACK      KEY20,APCKKWD,APCKCRD,SP70                                  
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,SELITMNO
.
KEYSRH37  CALL      RPAPCK2 
          BRANCH    OVRCD,KEYSRH38
          CALL      CHREC000
          BRANCH    OVRCD,KEYSRH37,KEYSRH38
.
          SUB       ONE,SELITMNO
          COMPARE   ZERO,SELITMNO
          GOTO      KEYSRH37 IF NOT EQUAL
.
KEYSRH38  MOVE      ZERO,SELITMNO
          GOTO      KEYSRH10
.
KEYSRH40  MOVE      ST1,KEY20
          CALL      RDAPCK2 
KEYSRH41  CALL      RPAPCK2 
          BRANCH    OVRCD,KEYSRH85
          CALL      CHREC000
          BRANCH    OVRCD,KEYSRH41,KEYSRH85
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      KEYSRH09
.
KEYSRH45  CALL      RKAPCK2 
          BRANCH    OVRCD,KEYSRH85
          CALL      CHREC000
          BRANCH    OVRCD,KEYSRH45,KEYSRH85
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      ZERO,SELITMNO
          PACK      KEY20,KEYWRD01,Z70                                          
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,SELITMNO
          CALL      RSAPCK2 
.
KEYSRH46  CALL      RPAPCK2 
          BRANCH    OVRCD,KEYSRH47
          CALL      CHREC000
          BRANCH    OVRCD,KEYSRH46,KEYSRH47
.
          SUB       ONE,SELITMNO
          COMPARE   ZERO,SELITMNO
          GOTO      KEYSRH46 IF NOT EQUAL
.
KEYSRH47  MOVE      ZERO,SELITMNO
          GOTO      KEYSRH10
.
KEYSRH70  CALL      FLAGS000
          MOVE      TWO,DOAGAIN
          GOTO      KEYSRH99
.
KEYSRH85  LOAD      KEY20,SELITMNO,ST1,ST2,ST3,ST4,ST5:                           
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY20,APCKKWD,APCKCRD
          CALL      RDAPCK2 
.
KEYSRH90  BEEP
          GOTO      KEYSRH20
.
KEYSRH91  MOVE      SP70,KEY20
          MOVE      SP70,APCKCRD
          MOVE      SP70,APCKKWD 
          MOVE      ONE,OVRCD
          GOTO      KEYSRH96
.
KEYSRH92  MOVE      SP70,KEY20
          MOVE      SP70,APCKCRD
          LOAD      KEY20,CCITEM,ST1,ST2,ST3,ST4,ST5:                           
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY20,APCKKWD,APCKCRD
          MOVE      APCKCRD,KEY5
          CALL      RDAPMA1
.
KEYSRH96  MOVE      ZERO,DOAGAIN
          GOTO      KEYSRH99
.
KEYSRH98  MOVE      ONE,DOAGAIN
.
KEYSRH99  RETURN
.------------------------------------------------------------
. Perform Alphabetic Search
.------------------------------------------------------------
ALPSRH00  MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          ADD       ONE,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          ASSIGN    STDROW+1,FLAGROW
          ASSIGN    ((HRIG-HLEF)/2)-10,FLAGCOL
          DISPLAY   *PFLAGCOL:FLAGROW,*V2LON,*ULON,"Enter Name for Search"
          ASSIGN    STDROW+3,FLAGROW
          ASSIGN    ((HRIG-HLEF)/2)-30,FLAGCOL
          KEYIN     *PFLAGCOL:FLAGROW,*V2LON,KEYWRD00
          MOVE      MINITEM,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          ENDSET    KEYWRD00
          APPEND    SP70,KEYWRD00
          RESET     KEYWRD00
.
ALPSRH09  MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          MOVE      SP70,APMXCRD
.
          STRIP     KEYWRD00
          PACK      KEY35,KEYWRD00,SP70
          CALL      RSAPMX1 
ALPSRH10  CALL      RKAPMX1 
          BRANCH    OVRCD,ALPSRH15
.
          CALL      CHREC000
          BRANCH    OVRCD,ALPSRH10,ALPSRH15
.
          ADD       ONE,SELITMNO
          ADD       ONE,STDROW
          PACK      KEY35,APMXREF,APMXCRD
          STORE     KEY35,SELITMNO,ST1,ST2,ST3,ST4,ST5:                           
                                 ST6,ST7,ST8,ST9,ST10:
                                 ST11,ST12,ST13,ST14,ST15:
                                 ST16,ST17
          DISPLAY   *PSTDCOL00:STDROW,SP1,*V2LON,SELITMNO,DOT;
          IF        CHECKSUS<>0
            DISPLAY   *V2LON,*BLINKON,"*"
          ENDIF
          DISPLAY   *PSTDCOL01:STDROW,APMXCRD:
                    *PSTDCOL02:STDROW,APMACN1:
                    *PSTDCOL03:STDROW,APMASN1
.
          COMPARE   MAXITEM,SELITMNO
          GOTO      ALPSRH10 IF NOT EQUAL
.
ALPSRH15  MOVE      ONE,DITEM
          MOVE      MINITEM,DROW
          ADD       ONE,DROW
          DISPLAY   *PSTDCOL00:DROW,*V2LON,*HON,SP1,DITEM,DOT
.
ALPSRH20  CALL      KWSEL000
          BRANCH    EXIT,ALPSRH30,ALPSRH35,ALPSRH40,ALPSRH45,ALPSRH98:
                                  ALPSRH91,ALPSRH00,ALPSRH70
.                        Next     Last     Home     End      Expand/Reduce
.                                 Exit     Search   Flags
          GOTO      ALPSRH92
.
ALPSRH30  CALL      RKAPMX1 
          BRANCH    OVRCD,ALPSRH85
          CALL      CHREC000
          BRANCH    OVRCD,ALPSRH30,ALPSRH85
.
          PACK      KEY35,APMXREF,APMXCRD,SP70 
          CALL      RPAPMX1 
          MOVE      ZERO,SELITMNO
          MOVE      MINITEM,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      ALPSRH10
.
ALPSRH35  MOVE      ST1,KEY35
          CALL      RDAPMX1 
.
ALPSRH36  CALL      RPAPMX1 
          BRANCH    OVRCD,ALPSRH85
          CALL      CHREC000
          BRANCH    OVRCD,ALPSRH36,ALPSRH85
          PACK      KEY35,APMXREF,APMXCRD,SP70 
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,SELITMNO
.
ALPSRH37  CALL      RPAPMX1 
          BRANCH    OVRCD,ALPSRH38
          CALL      CHREC000
          BRANCH    OVRCD,ALPSRH37,ALPSRH38
.
          SUB       ONE,SELITMNO
          COMPARE   ZERO,SELITMNO
          GOTO      ALPSRH37 IF NOT EQUAL
.
ALPSRH38  MOVE      ZERO,SELITMNO
          GOTO      ALPSRH10
.
ALPSRH40  MOVE      ST1,KEY35
          CALL      RDAPMX1 
ALPSRH41  CALL      RPAPMX1 
          BRANCH    OVRCD,ALPSRH85
          CALL      CHREC000
          BRANCH    OVRCD,ALPSRH41,ALPSRH85
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      ALPSRH09
.
ALPSRH45  CALL      RKAPMX1 
          BRANCH    OVRCD,ALPSRH85
          CALL      CHREC000
          BRANCH    OVRCD,ALPSRH45,ALPSRH85
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      ZERO,SELITMNO
          PACK      KEY35,KEYWRD01,Z70                                          
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,SELITMNO
          CALL      RSAPMX1 
.
ALPSRH46  CALL      RPAPMX1 
          BRANCH    OVRCD,ALPSRH47
          CALL      CHREC000
          BRANCH    OVRCD,ALPSRH46,ALPSRH47
.
          SUB       ONE,SELITMNO
          COMPARE   ZERO,SELITMNO
          GOTO      ALPSRH46 IF NOT EQUAL
.
ALPSRH47  MOVE      ZERO,SELITMNO
          GOTO      ALPSRH10
.
ALPSRH70  CALL      FLAGS000
          MOVE      TWO,DOAGAIN
          GOTO      ALPSRH99
.
ALPSRH85  LOAD      KEY35,SELITMNO,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY35,APMXREF,APMXCRD                                       
          CALL      RDAPMX1 
.
ALPSRH90  BEEP
          GOTO      ALPSRH20
.
ALPSRH91  MOVE      SP70,APMXCRD 
          MOVE      SP70,KEY35
          MOVE      SP70,APMXREF 
          MOVE      ONE,OVRCD
          GOTO      ALPSRH96
.
ALPSRH92  MOVE      SP70,KEY35
          MOVE      SP70,APMXCRD 
          LOAD      KEY35,CCITEM,ST1,ST2,ST3,ST4,ST5:                           
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY35,APMXREF,APMXCRD                                       
          MOVE      APMXCRD,KEY5
          CALL      RDAPMA1
.
ALPSRH96  MOVE      ZERO,DOAGAIN
          GOTO      ALPSRH99
.
ALPSRH98  MOVE      ONE,DOAGAIN
.
ALPSRH99  RETURN
.------------------------------------------------------------
. Alter Flags
.------------------------------------------------------------
FLAGS000  BOXCLR    CLEF,CTOP,CRIG,CBOT
FLAGS190  ASSIGN    MINITEM+3,F2
FLAGS210  MOVE      "K",ANS
          KEYIN     *PSTDCOL02:F2,*V2LON,"K",*HOFF,"ey Word or ":
                                  *V2LON,"A",*HOFF,"lphabetic Search : ":
                                  *V2LON,*RV,ANS
          REP       UPPLOW,ANS
          MOVE      ZERO,SEARCHTY
          MATCH     "K",ANS
          GOTO      FLAGS290 IF EQUAL
          MATCH     "A",ANS
          GOTO      FLAGS210 IF NOT EQUAL
          MOVE      ONE,SEARCHTY
.
FLAGS290  RETURN 
.------------------------------------------------------------
. Check Record
.------------------------------------------------------------
CHREC000  BRANCH    SEARCHTY,CHREC100
          MATCH     KEYWRD01,APCKKWD
          GOTO      CHREC920 IF NOT EQUAL                                       
          IF        KEYWRDNO>1
            PACK      SAVKEY20,APCKKWD,APCKCRD 
            CALL      MCHWRD00
            BRANCH    EXIT,CHREC910
            MOVE      SAVKEY20,KEY20
            CALL      RDAPCK2
          ENDIF
.
          MOVE      APCKCRD,KEY5
          CALL      RDAPMA1
          BRANCH    OVRCD,CHREC910
          GOTO      CHREC800
.
CHREC100  MATCH     KEYWRD00,APMXREF
          GOTO      CHREC920 IF NOT EQUAL                                       
          MOVE      APMXCRD,KEY5
          CALL      RDAPMA1
          BRANCH    OVRCD,CHREC910
.
CHREC800  
.
CHREC900  MOVE      ZERO,OVRCD
          GOTO      CHREC999
CHREC910  MOVE      ONE,OVRCD
          GOTO      CHREC999
CHREC920  MOVE      TWO,OVRCD
CHREC999  RETURN
.------------------------------------------------------------
. Check for Matching Words
.------------------------------------------------------------
MCHWRD00  PACK      SAVKEY5,APCKCRD 
          MOVE      ONE,F2
          MOVE      ZERO,EXIT
.
MCHWRD10  COMPARE   KEYWRDNO,F2
          GOTO      MCHWRD99 IF EQUAL
          ADD       ONE,F2
          LOAD      KEYWRDXX,F2,KEYWRD01,KEYWRD02,KEYWRD03,KEYWRD04,KEYWRD05:
                             KEYWRD06,KEYWRD07,KEYWRD08,KEYWRD09,KEYWRD10
          PACK      KEY20,SAVKEY5,KEYWRDXX
          CALL      RDAPCK1
          COMPARE   ZERO,OVRCD
          GOTO      MCHWRD10 IF EQUAL
.
          CALL      RKAPCK1
          BRANCH    OVRCD,MCHWRD90
          PACK      KEY5,APCKCRD,SP70
          MATCH     SAVKEY5,KEY5 
          GOTO      MCHWRD90 IF NOT EQUAL
.
          STRIP     KEYWRDXX
          MATCH     APCKKWD,KEYWRDXX
          GOTO      MCHWRD90 IF NOT EQUAL
          GOTO      MCHWRD10
.
MCHWRD90  MOVE      ONE,EXIT
MCHWRD99  RETURN
.
          INC       APSCKIIO/INC
          INC       IBAOVRIO/INC
          INC       STDKWSCD
.
HAPCKIZZ  ENDPROC   
