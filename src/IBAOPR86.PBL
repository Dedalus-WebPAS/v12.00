.***************************************************************************
.* System    :   Theatre                                                   *
.* Program   :   IBAOPR86                                                  *
.*  Desc     :   Operating Room item file Master Listing Program           *
.***************************************************************************
.* Date      :   10/10/90                                                  *
.* Author    :   J. Ceniza                                                 *
.* Function  :   This program is used by the operating theatre system      *
.*               system to print the master listing of operating theatre   *
.* Mods      :                                                             *
.*               V9.04.01 17/02/2005  Lina Vo     CAR 56404                *
.*                        Changed program to read Operating Room item file *
.*                        with new key size. Also changed all the item     *
.*                        variable size used in the program.               *
.*           :   V5.01.01 18/10/1990 Graeme Williams                       *
.*           :            Increase description to 50 characters            *
.*           :   V5.01.02 22/05/91  Steve O'Gorman                         *
.*           :            Fixed Errors found by the New Compiler           *
.*           :                                                             *
.***************************************************************************
.
. $$$$$
.   Operating Room item file Master Listing
.   ---------------------------------------
.
.   Initialization
.        display header
.        open files
.
.   Processing options
.
.        0 = Exit
.        1 = Code sequence
.
.            - display screen format
.            - input start and end code and validate against OPRITEFD file
.            - if range is invalid, re-input start & end codes.
.              else
.            - O.K. to continue ?
.            - If yes, print report for the range specified by user
.
.        2 = Description sequence
.
.            - display screen format
.            - input start and end description
.            - if range is invalid, re-input start & end description.
.              else
.            - O.K. to continue ?
.            - If yes, print report for the range specified by user
.
.        3 = Group code sequence
.
.            - display screen format
.            - input start and end group code
.            - if range is invalid, re-input start & end group code.
.              else
.            - O.K. to continue ?
.            - If yes, print report for the range specified by user
.
.     END
.
.$$$$$
.
          INC       STD001FD
          INC       OPRITEFD/INC
          INC       PATCODFD/INC
.
CODE      DIM       2
CODENUM   DIM       15
DESCRIP   DIM       50
ENDCODE   DIM       15
ENDDESC   DIM       50
ENDSPAC   DIM       50
ENGPCODE  DIM       3
ENGPDESC  DIM       20
GRPCODE   DIM       3
INDCDESC  DIM       10
NCODE     FORM      1 
NUMREC    FORM      4
ZENDDESC  DIM       50
ROW       FORM      2
SHRTDESC  DIM       30
STGPCODE  DIM       3
STGPDESC  DIM       20
STRTCODE  DIM       15
STRTDESC  DIM       50
STRTSPAC  DIM       50
TEMPCODE  DIM       15
.
. ------ CONSTANTS ---------
.
CODESEQ   INIT      "(Code Sequence)"
DESCSEQ   INIT      "(Desc Sequence)"
DISPOSE   INIT      "Disposable"
GRPSEQ    INIT      "(Group Sequence)"
FINISH    INIT      "Finish"
NORMAL    INIT      "Normal"
NOTSPACE  INIT      "xxxx"
START     INIT      "Start"
ZZZZ      INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
.
PRGID     INIT      "IBAOPR86"
PRGNAM    INIT      "Operating Room Item File Master Listing"
VERSION   INIT      "V12.00.00"
+
.***************************************************************************
.*                              ML0000                                     *
.*                      Controlling Logic (Mainline code)                  *
.***************************************************************************
ML0000    CALL      INIT0000               * initialization and open files
.
          CALL      DOPT0000               * display options
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION:
                    ML1000:                * Code sequence
                    ML2000:                * Description sequence
                    ML3000
.
. ---- master listing code sequence--------
.
ML1000    CALL      FSCR0000               * display screen format
ML1100    CALL      CODE0000               * input start/end codes
          BRANCH    EXIT,ML1100            * invalid range,input codes
          CALL      CONTQST                * Ask Ok to continue (Y/N/C) ?
          BRANCH    CEXIT:
                    ML1300:                * (Y)es selected
                    ML1100:                * (N)o selected 
                    ML0100                 * (C)ancel selected
ML1300    CALL      REPC0000               * (Y)es selected, print report
          GOTO      ML0100
.
. ---- master listing description sequence --------
.
ML2000    CALL      SSCR0000               * display screen format
ML2100    CALL      DESC0000               * input start/end description
          BRANCH    EXIT,ML2100            * invalid range, input codes
          CALL      CONTQST                * Ask Ok to continue (Y/N/C) ?
          BRANCH    CEXIT:
                    ML2300:                * (Y)es selected
                    ML2100:                * (N)o selected 
                    ML0100                 * (C)ancel selected
ML2300    CALL      REPD0000               * print report
          GOTO      ML0100
.
. ---- master listing group sequence --------
.
ML3000    CALL      TSCR0000               * display screen format
ML3100    CALL      GRPC0000               * input start/end description
          BRANCH    EXIT,ML3100            * invalid range, input codes
          CALL      CONTQST                * Ask Ok to continue (Y/N/C) ?
          BRANCH    CEXIT:
                    ML3300:                * (Y)es selected
                    ML3100:                * (N)o selected 
                    ML0100                 * (C)ancel selected[
ML3300    CALL      REPG0000               * print report
          GOTO      ML0100
.
ML9999    CHAIN     PGM                    * chain back to program
+
.***************************************************************************
.*                                INIT0000             Called by: ML0000   *
.*                             initialization                              *
.*  The initialization routine is used to display headings and open files. *
.*  Any other general initialization can also be performed here.           *
.***************************************************************************
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P54:24,"opriteaf";
          OPEN      OPRITEA1,"opriteaf"
          OPEN      OPRITEA2,"opriteaf"
          OPEN      OPRITEA3,"opriteaf"
          DISPLAY   *P54:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          MOVE      ONE,CNOUNDLN              * Stop auto. underline in HEAD132
.
INIT9999  RETURN
+
.***************************************************************************
.*                                OPTN0000             Called by: ML0000   *
.*                        get user options or exit                         *
.*                                                                         *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                 *
.*                        TRUE  (1)  Exit option selected                  *
.*              COPTION = 1  Code sequence option selected                 *
.*                        2  Description option selected                   *
.***************************************************************************
.
. ---- keyin option ----
.
OPTN0000  MOVE      ZERO,COPTION                * initialize Coption   
          DISPLAY   *P17:9,*EF                  * erase rest of screen
          KEYIN     *P17:9,*EL,*DV,UNDLN1:
                    *P17:9,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9000 IF EQUAL                     * exit
          BRANCH    COPTION,OPTN3000,OPTN3000,OPTN3000
          BEEP                                   * invalid input
          GOTO      OPTN0000
.
OPTN3000  MOVE      FALSE,EXIT
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT                     * set EXIT = 1
OPTN9999  RETURN
+
.***************************************************************************
.*                        DOPT0000                 Called by : OPTN0000    *
.*                   display option                          : FSCR0000    *   
.*                                                           : SSCR0000    *
.***************************************************************************

DOPT0000  DISPLAY   *P1:3,*EF:                           * select option
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Code sequence":
                    *P1:6,*V2LON,TWO,*HOFF," = Description sequence":
                    *P1:7,*V2LON,THREE,*HOFF," = Group sequence"
.
          DISPLAY   *P1:9,"Select Option : "
.
          BRANCH    COPTION,DOPT9000,DOPT9000,DOPT9000
.    
          COMPARE   ZERO,COPTION
          GOTO      DOPT9999 IF EQUAL
.
          BEEP          
          GOTO      DOPT0000
.
DOPT9000  DISPLAY   *P17:9,*V2LON,COPTION
.
DOPT9999  RETURN

.***************************************************************************
.*                          CLRC0000                 Called by : DESC0000  *
.*                clear start and end codes and description
.***************************************************************************
CLRC0000  MOVE      SP70,STRTCODE
          MOVE      SP70,ENDCODE
          PACK      STRTDESC,SP30,SP30
          PACK      ENDDESC,SP30,SP30
          MOVE      SP3,STGPCODE
          MOVE      SP20,STGPDESC
          MOVE      SP3,ENGPCODE
          MOVE      SP20,ENGPDESC
CLRC9999  RETURN
.
.***************************************************************************
.*                          CLRW0000                     Called by DESC0000*
.*              clear display variables                                    *
.*              ie start code/endcode and their descriptions
.***************************************************************************
CLRW0000 
          MOVE      SP70,TEMPCODE
          PACK      DESCRIP,SP30,SP30
          MOVE      SP3,GRPCODE
.
CLRW9999  RETURN
***************************************************************************
.*                          CLRK0000                    Called by DESC0000*
.*                 clear key variables
***************************************************************************
CLRK0000  MOVE      SP70,KEY15
          PACK      KEY18,SP70
          PACK      KEY65,SP70
.
CLRK9999  RETURN
.
.***************************************************************************
.*                           CODE0000                     Called by ML0000 *
.*               input the start and ending code                           *
.***************************************************************************
.
CODE0000  CALL      CLRC0000                     * clear start/end codes
.                                                * and description
          MOVE      ONE,NCODE                    * start of code variable
          MOVE      TEN1,ROW                     * row for start of code
          CALL      FSCR0000                      * display start code/end code 
.                                                 * screen layoout 
CODE1500  CALL      CLRW0000                      * clear working variables
          CALL      CLRK0000                      * clear keys  
          CALL      KCOD0000                      * keyin code
          BRANCH    NCODE,CODE2000,CODE9000       * NCODE 1 - code keyed in
.                                                 *           starting code
.                                                 *       2 - ending code
.
CODE2000  MOVE      TWO,NCODE                     * end of code variable
          MOVE      TEN3,ROW                      * row for end of code
          GOTO      CODE1500

CODE9000  BRANCH    EXIT,CODE9999                * invalid range input
          MOVE      FALSE,EXIT

CODE9999  RETURN
.
.***************************************************************************
.*                           GRPC0000                     Called by ML0000 *
.*               input the start and ending code                           *
.***************************************************************************
.
GRPC0000  CALL      CLRC0000                     * clear start/end codes
.                                                * and description
          MOVE      ONE,NCODE                    * start of code variable
          MOVE      TEN1,ROW                     * row for start of code
          CALL      TSCR0000                      * display start code/end code 
.                                                 * screen layoout 
GRPC1500  CALL      CLRW0000                      * clear working variables
          CALL      CLRK0000                      * clear keys  
          CALL      KGRP0000                      * keyin code
          BRANCH    NCODE,GRPC2000,GRPC9000       * NCODE 1 - code keyed in
.                                                 *           starting code
.                                                 *       2 - ending code
.
GRPC2000  MOVE      TWO,NCODE                     * end of code variable
          MOVE      TEN3,ROW                      * row for end of code
          GOTO      GRPC1500

GRPC9000  BRANCH    EXIT,GRPC9999                * invalid range input
          MOVE      FALSE,EXIT
GRPC9999  RETURN
.***************************************************************************
.*                           DESC0000                     Called by ML0000 *
.*               input the start and ending description                    *
.***************************************************************************
DESC0000  CALL      SSCR0000                     * display start desc/end desc 
.                                                * screen layoout 
          CALL      CLRC0000                     * clear start/end codes
.                                                * and description
          MOVE      ONE,NCODE                    * start of desc varaible
          MOVE      TEN1,ROW                     * row for start description

DESC3500  CALL      CLRW0000                      * clear working variables
          CALL      CLRK0000                      * clear keys  
          CALL      KDSC0000                      * keyin description
          BRANCH    NCODE,DESC4000,DESC9000       * NCODE 1 - code keyed in
.                                                 *           starting code
.                                                 *       2 - ending code
.
DESC4000  MOVE      TWO,NCODE                     * end of desc variable 
          MOVE      TEN3,ROW                      * row for ending desc input
          GOTO      DESC3500
.
DESC9000  BRANCH    EXIT,DESC9999                 * invalid range input
.
          MOVE      FALSE,EXIT
.
DESC9999  RETURN   

.***************************************************************************
.*                     MCOD0000                      Called by : KCOD0000  *
.*        determine callin procedure ( starting code or ending code )      *
.*        and move the code and description to appropriate variables       *
.***************************************************************************
MCOD0000  BRANCH    NCODE,MCOD1000,MCOD2000     * start code or end code 
.
MCOD1000  MOVE      DESCRIP,STRTDESC            * get description for start code
          MOVE      TEMPCODE,STRTCODE           * get code as start of range 
          GOTO      MCOD9999         
        
MCOD2000  MOVE      DESCRIP,ENDDESC             * get description for end code
          MOVE      TEMPCODE,ENDCODE            * get code as end of range
.
MCOD9999  RETURN
+
.***************************************************************************
.*                                  SSCR0000           Called by: ML0000   *
.*                display screen format for description sequence           *
.***************************************************************************
SSCR0000  DISPLAY  *P1:10,*EF: 
                    *P1:11,"Starting Description : ":
                    *P3:13,"Ending Description : "
.
SSCR9999  RETURN
.***************************************************************************
.*                                  FSCR0000           Called by: ML0000   *
.*                  display screen format for code sequence                *
.***************************************************************************
FSCR0000  DISPLAY   *P1:10,*EF:
                    *P1:11,"Starting Code : ":
                    *P3:13,"Ending Code : "
.
FSCR9999  RETURN
.
.***************************************************************************
.*                                  TSCR0000           Called by: ML0000   *
.*                  display screen format for code sequence                *
.***************************************************************************
TSCR0000  DISPLAY   *P1:10,*EF:
                    *P1:11,"Starting Group Code : ":
                    *P3:13,"Ending Group Code : "
.
TSCR9999  RETURN
.
.***************************************************************************
.*                         DEND0000                   Called by : KCOD0000 *
.*         display end code and description                                *
.***************************************************************************
DEND0000  DISPLAY   *P17:13,*V2LON,ENDCODE        * display end code
DEND0500  MATCH     SP70,ENDCODE                  * nothing input
          GOTO      DEND1000 IF EQUAL             * yes
.
DEND0800  DISPLAY   *P26:13,*EL,ENDDESC        * display description 
          GOTO      DEND9999
.
DEND1000  DISPLAY   *P17:13,*EL,*V2LON,ENDDESC    * display 'finish'
DEND9999  RETURN
.
.***************************************************************************
.*                         DST0000                    Called by : KCOD0000 *
.*         display start code and description                              *
.***************************************************************************
DST0000   DISPLAY   *P17:11,*V2LON,STRTCODE       * display start code
DST0500   MATCH     SP70,STRTCODE                  * nothing input
.
          GOTO      DST1000 IF EQUAL              * yes

DST0800   DISPLAY   *P26:11,*EL,STRTDESC          * display description
          GOTO      DST9999
.
DST1000   DISPLAY   *P17:11,*EL,*V2LON,STRTDESC  * display 'Start' in highlight
.
DST9999   RETURN
.
.***************************************************************************
.*                         DSGP0000                   Called by : KGRP0000 *
.*         display start group code and description                        *
.***************************************************************************
DSGP0000  DISPLAY   *P23:11,*V2LON,STGPCODE       * display start code
DSGP0500  MATCH     SP3,STGPCODE                  * nothing input
.
          GOTO      DSGP1000 IF EQUAL              * yes

DSGP0800  DISPLAY   *P28:11,*EL,STGPDESC          * display description
          GOTO      DSGP9999
.
DSGP1000  DISPLAY   *P23:11,*EL,*V2LON,STGPDESC  * display 'Start' in highlight
.
DSGP9999  RETURN
.
.
.***************************************************************************
.*                         GPEN0000                   Called by : KGRP0000 *
.*         display end group code and description                          *
.***************************************************************************
GPEN0000  DISPLAY   *P23:13,*V2LON,ENGPCODE        * display end code
GPEN0500  MATCH     SP3,ENGPCODE                  * nothing input
          GOTO      GPEN1000 IF EQUAL             * yes
.
GPEN0800  DISPLAY   *P28:13,*EL,ENGPDESC        * display description 
          GOTO      GPEN9999
.
GPEN1000  DISPLAY   *P23:13,*EL,*V2LON,ENGPDESC    * display 'finish'
GPEN9999  RETURN
.
.***************************************************************************
.*                         DDEN0000                   Called by : KDSC0000 *
.*         display end description                              : DEN0000  *
.***************************************************************************
DDEN0000  DISPLAY   *P24:13,*EL,*V2LON,ENDDESC  * display description
DDEN9999  RETURN
.***************************************************************************
.*                         DDST0000                   Called by : KDSC0000 *
.*         display start description                            : DST00000 *
.***************************************************************************
DDST0000   DISPLAY   *P24:11,*EL,*V2LON,STRTDESC  * display description
DDST9999   RETURN
.
.***************************************************************************
.*                                  KCOD0000           Called by: CODE0000 *
.*                       Input the item code field                         *
.*                                                                         *
.*   Returns  : TEMPCODE  - the item code                                  *
.*              EXIT      - (0) FALSE - valid or nothing input             *
.*                        - (1) TRUE - invalid range                       *
.***************************************************************************
KCOD0000  KEYIN     *P17:ROW,*EL,*DV,UNDLN6:   * Keyin the security code
                    *P17:ROW,*V2LON,TEMPCODE:
                    *P17:ROW,*DV,TEMPCODE
.
.        validate code input
.
          CALL      CHKC0000             
          BRANCH    EXIT,KCOD0500,KCOD1000,KCOD0000,KCOD9900
.
.    nothing input or valid input        
.    determine if start or end code and get appropriate description
.
KCOD0500  CALL      MCOD0000         
          BRANCH    NCODE,KCOD0700,KCOD0750   * determine calling procedure
.                                             * if start code or end code
.
KCOD0700  CALL      DST0000                   * display start code and descrip 
          GOTO      KCOD9800                  * if NCODE = 1
.
KCOD0750  CALL      DEND0000                  * display end code and description
.                                             * if NCODE = 2
          GOTO      KCOD9800                
.
.    "?" inputted
.
KCOD1000  CALL      OPRITEDS                 * Display the codes on file
          BRANCH    EXIT,KCOD0000            * No codes on file
.
.         Now ask for the security code to be entered, while leaving the
.         displayed security codes on the screen
.
KCOD2000  CALL      CLRW0000                  * Clear the record variables
.
          DISPLAY   *P1:24,*EL,"Code :"           * Keyin the security code
          KEYIN     *P8:24,*DV,UNDLN6:
                    *P8:24,*V2LON,TEMPCODE:
                    *P8:24,*DV,TEMPCODE
.
.      repeat validation of code input
.
          CALL      CHKC0000
.
          BRANCH    EXIT,KCOD7000,KCOD1000,KCOD2000
.
.   a valid code input or nothing input
.     
KCOD7000  CALL      MCOD0000               * determine if start code or end code
          CALL      DOPT0000               * display option screen 
          CALL      FSCR0000               * display the screen layout
.                                          * for code sequence
.
          BRANCH    NCODE,KCOD8000,KCOD8500   
.
KCOD8000  CALL      DST0000               * display start code and description
          GOTO      KCOD9800              * if NCODE = 1
.
KCOD8500  CALL      DST0000               * display start code and description
          CALL      DEND0000              * display end code and description
.                                         * if NCODE = 2
.
          COMPARE   FOUR,EXIT             * Invalid range
          GOTO      KCOD9900 IF EQUAL
.
KCOD9800  MOVE      FALSE,EXIT            
          GOTO      KCOD9999
.
KCOD9900  MOVE      TRUE,EXIT             * Invalid range
          DISPLAY   *P1:24,*B,"Invalid code range. ";
          CALL      HITENTER
.
KCOD9999  RETURN
+
.***************************************************************************
.*                                  KGRP0000           Called by: GRPC0000 *
.*                       Input the group code field                        *
.*                                                                         *
.*   Returns  : GRPCODE  - the item code                                   *
.*              EXIT      - (0) FALSE - valid or nothing input             *
.*                        - (1) TRUE - invalid range                       *
.***************************************************************************
KGRP0000  KEYIN     *P23:ROW,*EL,*DV,UNDLN3:   * Keyin the security code
                    *P23:ROW,*V2LON,GRPCODE:
                    *P23:ROW,*DV,GRPCODE
.
.        validate code input
.
          CALL      CHKG0000             
          BRANCH    EXIT,KGRP0500,KGRP1000,KGRP0000,KGRP9900
.
.    nothing input or valid input        
.    determine if start or end code and get appropriate description
.
KGRP0500  BRANCH    NCODE,KGRP0600,KGRP0700     * start code or end code 
.
KGRP0600  MOVE      TDESC,STGPDESC            * get description for start code
          MOVE      GRPCODE,STGPCODE          * get code as start of range 
          CALL      DSGP0000                  * display start code and descrip 
          GOTO      KGRP9800                  * if NCODE = 1
        
KGRP0700  MOVE      TDESC,ENGPDESC             * get description for end code
          MOVE      GRPCODE,ENGPCODE           * get code as end of range
          CALL      GPEN0000                  * display end code and description
.                                             * if NCODE = 2
          GOTO      KGRP9800                
.
.    "?" inputted
.
KGRP1000  PACK      CODE,ANSO,ANSE
          CALL      PATCODDS                 * Display the codes on file
          BRANCH    EXIT,KGRP0000            * No codes on file
.
.         Now ask for the group code to be entered, while leaving the
.         displayed security codes on the screen
.
KGRP2000  CALL      CLRW0000                  * Clear the record variables
.
          DISPLAY   *P1:24,*EL,"Code :"           * Keyin the security code
          KEYIN     *P8:24,*DV,UNDLN3:
                    *P8:24,*V2LON,GRPCODE:
                    *P8:24,*DV,GRPCODE
.
.      repeat validation of code input
.
          CALL      CHKG0000
.
          BRANCH    EXIT,KGRP7000,KGRP1000,KGRP2000
.
.   a valid code input or nothing input
.     
KGRP7000  CALL      DOPT0000
          CALL      TSCR0000                   * re-display screen
.
          BRANCH    NCODE,KGRP7100,KGRP7200     * start code or end code 
.
KGRP7100  MOVE      TDESC,STGPDESC            * get description for start code
          MOVE      GRPCODE,STGPCODE          * get code as start of range 
          CALL      DSGP0000                  * display start code and descrip 
          GOTO      KGRP9800                  * if NCODE = 1
.
KGRP7200  MOVE      TDESC,ENGPDESC             * get description for end code
          MOVE      GRPCODE,ENGPCODE           * get code as end of range
          CALL      DSGP0000              * display start code and description
          CALL      GPEN0000              * display end code and description
.                                         * if NCODE = 2
.
.
          COMPARE   FOUR,EXIT             * Invalid range
          GOTO      KGRP9900 IF EQUAL
.
KGRP9800  MOVE      FALSE,EXIT            
          GOTO      KGRP9999
.
KGRP9900  MOVE      TRUE,EXIT             * Invalid range
          DISPLAY   *P1:24,*B,"Invalid code range. ";
          CALL      HITENTER
.
KGRP9999  RETURN
+
.***************************************************************************
.*                                  CHKG0000           Called by: KGRP0000 *
.*                       Validate group code field                         *
.*                                                                         *
.*   Returns  : EXIT    =  (0)  If a valid code is entered                 * 
.*                         (1)  If there is nothing or exitchar entered    *
.*                         (2)  If a question mark "?" is entered          *
.*                         (3)  If invalid code entered                    *
.*                         (4)  If invalid range entered                   *
.***************************************************************************
CHKG0000  ENDSET    GRPCODE                 * Pad the field with spaces
          APPEND    SP3,GRPCODE 
          RESET     GRPCODE
.
.         Check if anything was input and set the exit flag appropriately
.
          MATCH     GRPCODE,SP3              * Was anything input ?
          GOTO      CHKG9000 IF EQUAL        * No
.
.         Check for a "?" input
.
          CMATCH    QUEST,GRPCODE            * "?" entered ?
          GOTO      CHKG8000 IF EQUAL        * Yes.
.      
.
          PACK      KEY5,ANSO,ANSE,GRPCODE
          MOVE      SP20,TDESC
          CALL      RDCODE1                   * see if code in file
          BRANCH    OVRCD,CHKG6000            * code  not found
.
          COMPARE   TWO,NCODE                * Input is ending code ?
          GOTO      CHKG3000 IF NOT EQUAL    * No
.
.         * Code input less than/equal start code ?
.
CHKG2000  MATCH     STGPCODE,GRPCODE
          GOTO      CHKG5000 IF LESS         * Yes , invalid range
.
CHKG3000  MOVE      ZERO,EXIT                * valid input
          GOTO      CHKG9999

CHKG5000  MOVE      FOUR,EXIT                * invalid range input
          MOVE      ZERO,OVRCD
          GOTO      CHKG9999 
.
CHKG6000  MOVE      THREE,EXIT               * invalid input
          DISPLAY   *P1:24,*B,"Invalid code input. ";
          CALL      HITENTER
          MOVE      ZERO,OVRCD               * reset OVRCD condition
          GOTO      CHKG9999        
.
CHKG8000  MOVE      TWO,EXIT                 * A "?" input
          GOTO      CHKG9999
.
CHKG9000  MOVE      ONE,EXIT                 * Nothing was input
          BRANCH    NCODE,CHKG9100,CHKG9200  * start or end code 
.
CHKG9100  MOVE      START,TDESC             * Description = "START" 
          GOTO      CHKG9999
.
CHKG9200  MOVE      FINISH,TDESC            * Description = "FINISH"
.
CHKG9999  RETURN
+
.***************************************************************************
.*                                  CHKC0000           Called by: KCOD0000 *
.*                       Validate security code field                      *
.*                                                                         *
.*   Returns  : EXIT    =  (0)  If a valid code is entered                 * 
.*                         (1)  If there is nothing or exitchar entered    *
.*                         (2)  If a question mark "?" is entered          *
.*                         (3)  If invalid code entered                    *
.*                         (4)  If invalid range entered                   *
.***************************************************************************
CHKC0000  ENDSET    TEMPCODE                 * Pad the field with spaces
          APPEND    SP70,TEMPCODE 
          RESET     TEMPCODE
.
.         Check if anything was input and set the exit flag appropriately
.
          MATCH     TEMPCODE,SP70            * Was anything input ?
          GOTO      CHKC9000 IF EQUAL        * No
.
.         Check for a "?" input
.
          CMATCH    QUEST,TEMPCODE           * "?" entered ?
          GOTO      CHKC8000 IF EQUAL        * Yes.
.      
.
          CALL      VCOD0000                 * validate code with file          
          BRANCH    EXIT,CHKC6000            * invalid input

          COMPARE   TWO,NCODE                * Input is ending code ?
          GOTO      CHKC3000 IF NOT EQUAL    * No
.
.         * Code input less than/equal start code ?
.
CHKC2000  MATCH     STRTCODE,TEMPCODE
          GOTO      CHKC5000 IF LESS         * Yes , invalid range
.
CHKC3000  MOVE      ZERO,EXIT                * valid input
          GOTO      CHKC9999

CHKC5000  MOVE      FOUR,EXIT                * invalid range input
          MOVE      ZERO,OVRCD
          GOTO      CHKC9999 

.
CHKC6000  MOVE      THREE,EXIT               * invalid input
          DISPLAY   *P1:24,*B,"Invalid code input. ";
          CALL      HITENTER
          MOVE      ZERO,OVRCD               * reset OVRCD condition
          GOTO      CHKC9999        
.
.
CHKC8000  MOVE      TWO,EXIT                 * A "?" input
          GOTO      CHKC9999
.
CHKC9000  MOVE      ONE,EXIT                 * Nothing was input
          BRANCH    NCODE,CHKC9100,CHKC9200  * start or end code 
.
CHKC9100  MOVE      START,DESCRIP            * Description = "START" 
          GOTO      CHKC9999
.
CHKC9200  MOVE      FINISH,DESCRIP           * Description = "FINISH"
.
CHKC9999  RETURN
+
.***************************************************************************
.*                         VCOD0000                   Called by : CHKC0000 *
.*              see if code number input is in file                        *
.*             RETUROP  EXIT - 0  valid code number                        *
.*                            - 1  code number not in file                 *
.***************************************************************************
VCOD0000  MOVE      TEMPCODE,CODENUM          * save the code number input
          PACK      KEY15,CODENUM,SP70
          CALL      RDOPITE1                  * see if code in file
          BRANCH    OVRCD,VCOD9000            * code  not found
          MOVE      OPITDESC,DESCRIP
VCOD1000  MOVE      FALSE,EXIT                * code found 
          GOTO      VCOD9999
.
VCOD9000  MOVE      TRUE,EXIT                 * code not found
VCOD9999  RETURN
.
.***************************************************************************
.*                                  KDSC0000           Called by: DESC0000 *
.*                       Input the description field                       *
.*                                                                         *
.*   Returns  : DESCRIP  - the description                                 *
.*              EXIT     - (0) FALSE - if valid or nothing inputted        *
.*                       - (1) TRUE  - if invalid range entered            *
.***************************************************************************
KDSC0000  KEYIN     *P24:ROW,*EL,*DV,UNDLN20,*DV,UNDLN30:
                    *P24:ROW,*V2LON,DESCRIP:
                    *P24:ROW,*DV,DESCRIP
.
.        check description code input
.
          CALL      CHKD0000             
          BRANCH    EXIT,KDSC0500,KDSC9900
.
.    nothing input or valid input
.   determine if start or end description inputted
.
KDSC0500  CALL      MCOD0000           
          BRANCH    NCODE,KDSC0700,KDSC0750   * determine calling procedure
.                                             * start or end description
.
KDSC0700  CALL      DDST0000                  * display start description
.                                             * if NCODE = 1
          GOTO      KDSC9800
.
KDSC0750  CALL      DDEN0000                  * display end description
.                                             * if NCODE =2
KDSC9800  MOVE      FALSE,EXIT                * valid or nothing input
          GOTO      KDSC9999              

KDSC9900  MOVE      TRUE,EXIT                 * invalid range input
.
KDSC9999  RETURN
.
+
.***************************************************************************
.*                                  CHKD0000           Called by: KDSC0000 *
.*                       Validate description                              *
.*                                                                         *
.*   Returns  : EXIT    =  (0)  If a valid description is entered          * 
.*                         (1)  If there is nothing entered                *
.*                         (2)  If invalid range entered                   *
.***************************************************************************
CHKD0000  
.
.         Check if anything was input and set the exit flag appropriately
.
          RESET     DESCRIP                  * Was anything input ?
          GOTO      CHKD9000 IF EOS          * No
.

          COMPARE   TWO,NCODE                * Input is end of code ?
          GOTO      CHKD6500 IF NOT EQUAL    * No
.
          MOVE      DESCRIP,ENDDESC
          ENDSET    DESCRIP
          APPEND    ZZZZ,DESCRIP
          RESET     DESCRIP
          MOVE      DESCRIP,ZENDDESC
          MOVE      ENDDESC,DESCRIP
.
CHKD6000  MATCH     STRTDESC,DESCRIP       * End of code less than/equal start ?
          GOTO      CHKD7000 IF LESS       * Yes, invalid range

CHKD6500  MOVE      ZERO,EXIT              * valid input
          MOVE      NOTSPACE,TEMPCODE
          GOTO      CHKD9999
.
.
CHKD7000  MOVE      TWO,EXIT               * invalid range
          DISPLAY   *P1:24,*B,"Invalid description range. ";
          CALL      HITENTER     
          GOTO      CHKD9999
.
CHKD9000  MOVE      ONE,EXIT                 * Nothing was input
          BRANCH    NCODE,CHKD9100,CHKD9200  * start or end description
.
CHKD9100  MOVE      START,DESCRIP            * Description = "Start"
          MOVE      SP70,TEMPCODE
          MOVE      ZERO,EXIT
          GOTO      CHKD9999
.
CHKD9200  MOVE      FINISH,DESCRIP           * Description = "Finish"
          MOVE      SP70,TEMPCODE
          MOVE      ZERO,EXIT
.
CHKD9999  RETURN
.
.***************************************************************************
.*                     REPC0000                    Called by : ML0000      *  
.*         print the item code and user name for the range inputted        *
.*         as start and end code                                           *
.***************************************************************************
REPC0000  MOVE      ZERO,CPAGENO                    * initialize page no. to 0.
          MOVE      ONE,CNOUNDLN                    * No underlines for previous
.                                                   * page
          CLOCK     TIME,CTIMEIS                    * get time report started
          MOVE      CODESEQ,CPHDROPT
          CALL      PAGE0000                        * display headings
          MOVE      ZERO,NUMREC                     * initialize no. of records
          DISPLAY   *P37:24,"Item Code : "
          PACK      KEY15,STRTCODE,SP70
          CALL      RDOPITE1                     * read file with key value
          BRANCH    OVRCD,REPC1000               * if record not found,read next
          GOTO      REPC4000                     * write record
.
REPC1000  CALL      RKOPITE1                        * read next record in file
          BRANCH    OVRCD,REPC8000                  * branch if end of file read
.
.
REPC3000  MATCH     SP70,ENDCODE                     * description is "Finish"
          GOTO      REPC4000 IF EQUAL               * Yes (so just write report)
.
          MATCH     OPITCODE,ENDCODE                 * Code in file within  
.                                                    * range as matched to 
.                                                    * end of code range ?
          GOTO      REPC8000 IF LESS                 * No - print end of report
.
.   code within starting and ending range
.
REPC4000  DISPLAY   *P49:24,*V2LON,OPITCODE;       * display code printed
          PACK      KEY5,ANSO,ANSE,OPITGRPG 
          MOVE      SP20,TDESC
          CALL      RDCODE1   
.
          MATCH     "0",OPITINDC                  * Normal 
          GOTO      REPC4200 IF EQUAL             * yes
.
          MOVE      DISPOSE,INDCDESC
          GOTO      REPC4300
.
REPC4200  MOVE      NORMAL,INDCDESC               * get description
.                                                 * for user
REPC4300  CALL      PRTC0000                      * print code and description
          ADD       ONE,CLNO                      * increment line count
          ADD       ONE,NUMREC                    * increment record count
          MOVE      ZERO,CNOUNDLN                 * print a line of underlines
.                                                 * at the end of previous page
          COMPARE   "55",CLNO                     * New page needed ?
          GOTO      REPC5000 IF NOT LESS          * Yes
          GOTO      REPC1000                        
.
REPC5000  CALL      DASH0000
          CALL      PAGE0000
          GOTO      REPC1000 
.
REPC8000  CALL      PRTE0000         * print end of report and number of records
.
REPC9999  RETURN
.
.***************************************************************************
.*                     REPD0000                    Called by : ML0000      * 
.*         print the item code and description for the range inputted      *
.*         as start and end description                                    *
.***************************************************************************
REPD0000  MOVE      ZERO,CPAGENO                    * initialize page no. to 0.
          MOVE      ONE,CNOUNDLN                    * No underlines for previous
.                                                   * page
          CLOCK     TIME,CTIMEIS                    * get time report started
          MOVE      DESCSEQ,CPHDROPT
          CALL      PAGE0000                        * display headings
          MOVE      ZERO,NUMREC                     * initialize no. of records
          DISPLAY   *P37:24,"Item Desc.: "
.
          MATCH     SP70,STRTCODE                    * Start ?
          GOTO      REPD0500 IF NOT EQUAL           * no
.
          PACK      KEY56,SP30,SP30
          GOTO      REPD0800
.
REPD0500  PACK      KEY65,STRTDESC,SP70
REPD0800  CALL      RSOPITE2                        * position pointer
.
REPD1000  CALL      RKOPITE2                        * read next record in file
          BRANCH    OVRCD,REPD8000                  * branch if end of file read
.
.
REPD3000  MATCH     OPITDESC,ZENDDESC                * Desc. in file within  
.                                                    * range as matched to 
.                                                    * end of desc. range ?
          GOTO      REPD8000 IF LESS                 * No - print end of report
.
.   code within starting and ending range
.
REPD4000  MOVE      OPITDESC,SHRTDESC             * shorten description
          DISPLAY   *P49:24,*V2LON,SHRTDESC;      * display desc printed
.                                                 * for user
          MATCH     "0",OPITINDC                  * Normal 
          GOTO      REPD4200 IF EQUAL             * yes
.
          MOVE      DISPOSE,INDCDESC
          GOTO      REPD4300
.
REPD4200  MOVE      NORMAL,INDCDESC               * get description
REPD4300  PACK      KEY5,ANSO,ANSE,OPITGRPG 
          MOVE      SP20,TDESC
          CALL      RDCODE1   
          CALL      PRTC0000                      * print code and description
          ADD       ONE,CLNO                      * increment line count
          ADD       ONE,NUMREC                    * increment record count
          MOVE      ZERO,CNOUNDLN                 * print a line of underlines
.                                                 * at the end of previous page
          COMPARE   "55",CLNO                     * New page needed ?
          GOTO      REPD5000 IF NOT LESS          * Yes
          GOTO      REPD1000                        
.
REPD5000  CALL      DASH0000
          CALL      PAGE0000
          GOTO      REPD1000
.
REPD8000  CALL      PRTE0000         * print end of report and number of records
.
REPD9999  RETURN
.
.***************************************************************************
.*                     REPG0000                    Called by : ML0000      * 
.*         print the item code and description for the range inputted      *
.*         as start and end description                                    *
.***************************************************************************
REPG0000  MOVE      ZERO,CPAGENO                    * initialize page no. to 0.
          MOVE      ONE,CNOUNDLN                    * No underlines for previous
.                                                   * page
          CLOCK     TIME,CTIMEIS                    * get time report started
          MOVE      GRPSEQ,CPHDROPT
          CALL      PAGE0000                        * display headings
          MOVE      ZERO,NUMREC                     * initialize no. of records
          DISPLAY   *P37:24,"Group Code : "
.
          PACK      KEY18,STGPCODE,SP70
          CALL      RSOPITE3                        * position pointer
.
REPG1000  CALL      RKOPITE3                        * read next record in file
          BRANCH    OVRCD,REPG8000                  * branch if end of file read
.
REPG3000  MATCH     SP3,ENGPCODE                    * End code = Finish ?
          GOTO      REPG4000 IF EQUAL               * yes
.
          MATCH     OPITGRPG,ENGPCODE                * Code in file within
.                                                    * range as matched to 
.                                                    * end of code. range ?
          GOTO      REPG8000 IF LESS                 * No - print end of report
.
.   code within starting and ending range
.
REPG4000  DISPLAY   *P50:24,*V2LON,OPITGRPG       * display code printed
.                                                 * for user
          MATCH     "0",OPITINDC                  * Normal 
          GOTO      REPG4200 IF EQUAL             * yes
.
          MOVE      DISPOSE,INDCDESC
          GOTO      REPG4300
.
REPG4200  MOVE      NORMAL,INDCDESC               * get description
REPG4300  PACK      KEY5,ANSO,ANSE,OPITGRPG 
          MOVE      SP20,TDESC
          CALL      RDCODE1   
          CALL      PRTC0000                      * print code and description
          ADD       ONE,CLNO                      * increment line count
          ADD       ONE,NUMREC                    * increment record count
          MOVE      ZERO,CNOUNDLN                 * print a line of underlines
.                                                 * at the end of previous page
          COMPARE   "55",CLNO                     * New page needed ?
          GOTO      REPG5000 IF NOT LESS          * Yes
          GOTO      REPG1000                        
.
REPG5000  CALL      DASH0000                      * print underlines
          CALL      PAGE0000                      * print heading
          GOTO      REPG1000
.
REPG8000  CALL      PRTE0000         * print end of report and number of records
.
REPG9999  RETURN
.***************************************************************************
.*                PRTC0000                           Called by : REPC0000  *
.*        prints the security code and the user name                       *
.***************************************************************************
PRTC0000  PRINT     *1,"|",SP1,OPITCODE,*12,"|",SP1,OPITDESC,*66,"|",SP1:
                    INDCDESC,*80,"|",SP1,OPITGRPG,SP3,TDESC,*108,"|"
.
PRTC9999  RETURN
.
.***************************************************************************
.*                       DASH0000                    Called by : REPC0000  *
.*                   prints 104 dash lines                                 *
.***************************************************************************
DASH0000  PRINT     *1,"*--------------------------------------------------":
                    "--------------------------------------------------------*"
DASH9999  RETURN
.
.***************************************************************************
.*                PRTE0000                           Called by : REPC0000  *
.*        prints the number of records and displays "End of Report"        *
.***************************************************************************
PRTE0000  COMPARE   ZERO,NUMREC                * Number of records = 0 ?
          GOTO      PRTE1000 IF NOT EQUAL      * Yes
          GOTO      PRTE2000
PRTE1000  CALL      DASH0000                   * print dash lines
.
PRTE2000  PRINT     *N,*33,"Number of records = ",SP2,NUMREC
          PRINT     *N,*22,"** End of Report **"
.
PRTE9999  RETURN
.
.***************************************************************************
.*                    PAGE0000                        Called by : REPC0000 *
.*        increments page number and displays all necessary heading        *
.*        ie HEAD132 and starting and ending codes and description         *
.***************************************************************************
PAGE0000  CALL      HEAD132                      * print heading ( 1st 3 lines) 
          BRANCH    COPTION,PAGE1000,PAGE2000,PAGE3000
.
.    code sequence is selected - print heading 
.
PAGE1000  PRINT     *40,"Starting Code : ",STRTCODE,SP2,STRTDESC,*N:
                    *40,"Ending Code   : ",ENDCODE,SP2,ENDDESC,*N
          GOTO      PAGE4000
.
.    description sequence is selected - print heading 
.
PAGE2000  PRINT     *40,"Starting Desc : ",STRTDESC,*N:
                    *40,"Ending Desc   : ",ENDDESC,*N
.
          GOTO      PAGE4000
.
PAGE3000  PRINT     *40,"Starting Group Code : ",STGPCODE,SP2,STGPDESC,*N:
                    *40,"Ending Group Code   : ",ENGPCODE,SP2,ENGPDESC,*N
.
PAGE4000  CALL      DASH0000                    * print dash lines
          PRINT     *1,"| Item Code ",*12,"| Description",*66,"| Indicator":
                    *80,"| Grouping",*108,"|"
          CALL      DASH0000                    * print dash lines
          ADD       NINE,CLNO
PAGE9999  RETURN
+
.***************************************************************************
.
          INC       STD001IO
          INC       OPRITEIO/INC
          INC       PATCODIO/INC            * codes file
          INC       OPRITEDS                * item ? mark routine
          INC       PATCODKY                * codes file ? mark routine
................................................................................
