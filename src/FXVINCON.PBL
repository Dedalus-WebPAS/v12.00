.*****************************************************************************
.* System    :   Allied Health                                               *
.* Program   :   FXVINCON                                                    *
.* Desc      :   Check extracted contact records for merged U/R's based      *
.*               on the code from CMRG0000 in LDALLHDT.                      *
.*****************************************************************************
.* Date      :   20/10/2014                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the extracted records        *
.*               looking for contact records.  For each contact record found *
.*               it will check if the U/R is correct for the extract period  *
.*               based on UR/Visit merges (paturacf & patmrgaf).             *
.* Mods      :                                                               *
.*        V10.14.01 17/04/2019  Steve Armstrong  TSK 0868837                 *
.*                  Recompiled for changes to ALLHDTFD.                      *
.*****************************************************************************
.*        V10.08.01 01/04/2016 Steve Armstrong  TSK 0324703                  *
.*                  Recompiled for changes to PATURCFD.                      *
.*                  Code changes for changed index on PATURCFD.              *
.*****************************************************************************
.*        V10.05.01 23/10/2014 Steve Armstrong  CAR 305679                   *
.*                  Mods to select status of records for report only option. *
.*                  Disabled update option.                                  *
.*        V10.05.00 21/10/2014 Steve Armstrong  CAR 305679                   *
.*                  Created Program.                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ALLHDTFD/INC
          INC       PATCONFD/INC
          INC       PATMRGFD/INC
          INC       PATURCFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
COUNTER   FORM      8
CURRDATE  DIM       8
DIM2A     DIM       2
DIM2B     DIM       2
DIM2C     DIM       2
DIM8      DIM       8
DIM17     DIM       17
ENDDATE   DIM       8
FORM2A    FORM      2
FORM2B    FORM      2
OLDURNUM  DIM       8
REPTSTAT  FORM      2             * Report Status
.                                   1 = Extracted
.                                   2 = Accepted
SAVKEY42  DIM       42
STATDESC  DIM       9
STRTDATE  DIM       8
MERGEFLG  FORM      1             * Merge Flag
.                                   0 = paturcaf record not found
.                                   1 = paturcaf record found
.
. PROGRAM CONSTANTS
. -----------------
HYPHEN    INIT      "-"
PIPE      INIT      "|"
STATDES1  INIT      "Waiting  "
STATDES2  INIT      "Extracted"
STATDES3  INIT      "Submitted"
STATDES4  INIT      "Accepted "
TILDA24   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~"
.
.
.
PRGID     INIT      "FXVINCON"
PRGNAM    INIT      "Fixit for Extracted VINAH Contact U/R Numbers"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN0500:      * proceed with report
                            MAIN0500       * proceed with fixit
.
MAIN0500  CALL      SDAT0000               * get start date for extract period
          BRANCH    EXIT,MAIN0100          * nothing entered
.
          CALL      EDAT0000               * get end date for extract period
          BRANCH    EXIT,MAIN0500          * nothing entered
.
          CALL      STAT0000               * get status required
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0500:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      PROC0000               * process
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"allhdtaf";
          OPEN      ALLHDTA1,"allhdtaf"
.
          DISPLAY   *P64:24,"patmrgaf";
          OPEN      PATMRGG2,"patmrgaf"
.
          DISPLAY   *P64:24,"paturcaf";
          OPEN      PATURCA1,"paturcaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,FIFTY9;*225,PTCNUURC
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run fixit                               *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Report Only"
.                   *P1:6,*V2LON,TWO,*HOFF,". Run Fixit"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run report only
.                           OPTN9000             * run fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.****************************************************************************
.*                             SDAT0000                Called by: MAIN0000  *
.*                       Set starting date                                  *
.* Returns:  STRTDATE - starting date (ccyymmdd)                            *
.*           EXIT   0 = valid date entered                                  *
.*                  1 = nothing entered                                     *
.****************************************************************************
.
SDAT0000  DISPLAY   *P1:11,*EF,"From Date :"
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      TEN1,CVERT
          MOVE      TEN3,CCOL
.
          CALL      IBACLOCK                     * get current date
.
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
.         Set the default start date to the 1st of the previous month
.
          MOVE      CMM,FORM2A
          MOVE      CYY,FORM2B
          IF        FORM2A = 1
            MOVE      TEN2,FORM2A
            SUB       ONE,FORM2B
          ELSE
            SUB       ONE,FORM2A
          ENDIF
          MOVE      "01",CDAY
          MOVE      "20",CCENT
          MOVE      FORM2A,CMON
          MOVE      FORM2B,CYEAR
.
          CALL      KEYDATE
          BRANCH    OVRCD,SDAT9100
          PACK      STRTDATE,CCENT,CYEAR,CMON,CDAY
.
.         Check that end date is not in the future
.
          MATCH     STRTDATE,CURRDATE
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"Start Date cannot be in the future.  ";
            CALL      HITENTER
            GOTO      SDAT9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      SDAT9999
.
SDAT9100  MOVE      ONE,EXIT
.
SDAT9999  RETURN
+
.****************************************************************************
.*                             EDAT0000                Called by: MAIN0000  *
.*                          Get ending date                                 *
.* Requires: STRTDATE - starting date (ccyymmdd)                            *
.*           CURRDATE - current date (ccyymmdd)                             *
.* Returns:  ENDDATE  - ending date (ccyymmdd)                              *
.*           EXIT   0 = valid date entered                                  *
.*                  1 = nothing entered                                     *
.****************************************************************************
.
EDAT0000  DISPLAY   *P1:13,*EL,"To   Date :"
          MOVE      TEN3,CVERT
          MOVE      TEN3,CCOL
.
          UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,EDAT9100
          PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY
.
.         Check that end date is not in the future
.
          MATCH     ENDDATE,CURRDATE
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"End Date cannot be in the future.  ";
            CALL      HITENTER
            GOTO      EDAT9100
          ENDIF
.
.         Check that end date is not less than start date
.
          MATCH     STRTDATE,ENDDATE
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"Start date greater than end date.  ";
            CALL      HITENTER
            GOTO      EDAT9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      EDAT9999
.
EDAT9100  MOVE      ONE,EXIT
.
EDAT9999  RETURN
+
.*****************************************************************************
.*                               STAT0000              Called by: MAIN0000   *
.*               Get the status required to report on                        *
.* Returns: REPTSTAT - status of records to report on                        *
.*                      1 = Waiting                                          *
.*                      2 = Extracted                                        *
.*                      3 = Submitted                                        *
.*                      4 = Accepted                                         *
.*****************************************************************************
.
STAT0000  KEYIN     *P1:24,*EL,*V2LON,*DV,ONE,*HOFF," = Waiting, ":
                    *V2LON,*DV,TWO,*HOFF," = Extracted, ":
                    *V2LON,*DV,THREE,*HOFF," = Submitted, ":
                    *V2LON,*DV,FOUR,*HOFF," = Accepted":
                    *P1:15,"Status    :":
                    *P13:15,*V2LON,REPTSTAT
.
          DISPLAY   *P1:24,*EL;
.
          IF        REPTSTAT < 1 | REPTSTAT > 4
            BEEP
            GOTO      STAT0000
          ENDIF
.
          LOAD      STATDESC,REPTSTAT,STATDES1,STATDES2,STATDES3,STATDES4
          DISPLAY   *P20:15,STATDESC
.
          BRANCH    REPTSTAT,STAT9100:           * Waiting
                             STAT9200:           * Extracted
                             STAT9300:           * Submitted
                             STAT9400            * Accepted
.
STAT9100  MOVE      ZERO,REPTSTAT
          GOTO      STAT9999
.
STAT9200  MOVE      SIX,REPTSTAT
          GOTO      STAT9999
.
STAT9300  MOVE      SEVEN,REPTSTAT
          GOTO      STAT9999
.
STAT9400  MOVE      TEN,REPTSTAT
.
STAT9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*        Loop through all contact records with a status of extracted        *
.*        and check if the U/R is correct based on merge records.            *
.* Requires: REPRSTAT - Report Status to report on                           *
.*                      1 = Waiting                                          *
.*                      2 = Extracted                                        *
.*                      3 = Submitted                                        *
.*                      4 = Accepted                                         *
.*****************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise update count
          MOVE      ZERO,CPAGENO                 * initialise print variables
          MOVE      ZERO,CNOUNDLN
          CALL      IBACLOCK
.
          CALL      HEAD0000                     * print report header
.
          PACK      KEY42,REPTSTAT,SP70
PROC0400  CALL      RSALHDT1                     * position on submitted recs.
PROC0500  CALL      RKALHDT1                     * read next record
          BRANCH    OVRCD,PROC9000               * eof - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,ALHDVISN;
.
          MOVE      REPTSTAT,DIM2
          RJUSTIFY  DIM2
          MATCH     DIM2,ALHDSTAT                * status extracted still ?
          GOTO      PROC9000 IF NOT EQUAL        * no - finished
.
          MATCH     "2",ALHDRTYP                 * contact record ?
          GOTO      PROC0500 IF NOT EQUAL        * no - get next record
.
.         We have found a contact record that's been extracted, so
.         check if we have the correct U/R based on the merges
.
          MOVE      ZERO,MERGEFLG                * initialise merge flag
          MOVE      ALHDURNO,OLDURNUM            * save original U/R number
          PACK      SAVKEY42,ALHDSTAT,ALHDURNO,ALHDVISN,ALHDCONT,ALHDDTTM:
                             ALHDRTYP,ALHDACTN
.
          COMPARE   ONE,PTCNUURC                 * using U/R change audit ?
          GOTO      PROC5000 IF NOT EQUAL        * no - use patmrgaf
.
.         Use the U/R change audit to check if the U/R is current for the
.         extract period
.
          PACK      KEY24,ALHDVISN,TILDA24
          CALL      RDSURCA1                     * position on visit number
PROC1000  CALL      RDPURCA1                     * read previous record
          BRANCH    OVRCD,PROC5000               * eof - finished
.
          MOVE      PTURADMN,DIM8
          MATCH     ALHDVISN,DIM8                * same visit still ?
          GOTO      PROC5000 IF NOT EQUAL        * no - get next merge record
.
.         We have a matching visit record, so check if the change date
.         was in the period
.
          MATCH     PTURDATE,ENDDATE             * end date < change date ?
          IF        @LESS
            MOVE      PTUROURN,ALHDURNO          * yes - load old U/R number
            MOVE      ONE,MERGEFLG               * set merge flag
            GOTO      PROC1000                   * get next change record
          ENDIF
.
          MATCH     STRTDATE,PTURDATE            * change date < start date ?
          GOTO      PROC7000 IF LESS             * yes - finished
.
          MOVE      PTUROURN,ALHDURNO            * load old U/R number
          GOTO      PROC7000
.
.         If there was no paturcaf record found, then use the patmrgaf file
.         to see if the U/R is current for the extract period
.
PROC5000  BRANCH    MERGEFLG,PROC7000            * paturcaf record found
.
          PACK      KEY17,THREE,ALHDURNO,TILDA24
          CALL      RSPTMRG2                     * position on current U/R
          CALL      RPPTMRG2                     * read previous record
          BRANCH    OVRCD,PROC0500               * eof - finished
.
          COMPARE   THREE,PTMRSTAT               * same status still ?
          GOTO      PROC0500 IF NOT EQUAL        * no - finished
.
          MATCH     ALHDURNO,PTMRNWUR            * same U/R still ?
          GOTO      PROC0500 IF NOT EQUAL        * no - finished
.
.         We have a matching merge record, so check if the change date
.         was in the period
.
          MATCH     PTMRSDTE,ENDDATE             * end date < merge date ?
          IF        @LESS
            MOVE      PTMROLUR,ALHDURNO          * yes - load old U/R number
            GOTO      PROC7000
          ENDIF
.
          MATCH     STRTDATE,PTMRSDTE            * merge date < start date ?
          GOTO      PROC0500 IF LESS             * yes - finished
.
          MOVE      PTMROLUR,ALHDURNO            * load old U/R number
.
PROC7000  MATCH     OLDURNUM,ALHDURNO            * U/R changed ?
          GOTO      PROC0500 IF EQUAL            * no
.
          ADD       ONE,COUNTER                  * increment counter
          COMPARE   SIXTY,CLNO                   * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          CALL      DISP0000                     * print record details
.
          IF        COPTION = 2
            CALL      UPALHDT1                   * update U/R
            MOVE      SAVKEY42,KEY42             * reposition after update
            GOTO      PROC0400
          ELSE
            GOTO      PROC0500                   * get next record
          ENDIF
.
PROC9000  IF        COPTION = 1
            DISPLAY   *P1:24,*EL,"Report completed.  ";
          ELSE
            DISPLAY   *P1:24,*EL,"Fixit completed.  ",*V2LON,COUNTER,*HOFF:
                      " records updated.  ";
          ENDIF
          CALL      HITENTER
          IF        COUNTER <> 0
            CALL      LINE0000
          ENDIF
          PRINT     *N,*1,"*** End of Report ***"
.
PROC9999  RETURN
+
.****************************************************************************
.*                            DISP0000                 Called by:           *
.*                  Valid record so print it                                *
.****************************************************************************
.
DISP0000  PACK      DIM17,ALHDVISN,HYPHEN,ALHDCONT
          SQUEEZE   DIM17
          UNPACK    ALHDDTTM,CCENT,CYEAR,CMON,CDAY,DIM2A,DIM2B,DIM2C
          CALL      PACDATE
          PRINT     *1,PIPE,*4,ALHDURNO,*14,PIPE,*16,DIM17:
                    *34,PIPE,*36,CPCDATE,SP1,DIM2A,COLON,DIM2B,COLON,DIM2C:
                    *56,PIPE,*58,ALHDMTYP,*66,PIPE,*68,OLDURNUM,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
.
DISP9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PROC0000  *
.*                       Print page heading                                 *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *40,"From: ",CPCDATE;
          UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *58,"To: ",CPCDATE,*N
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"U/R Number",*14,PIPE,*16,"Visit Number":
                    *34,PIPE,*36,"     Date/Time     ",*56,PIPE:
                    *58,"Message Type",*66,PIPE,*68,"Old U/R Number",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      EIGHT,CLNO                   * increment line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: PROC0000  *
.*                      Draw line across page                     HEAD0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       ALLHDTIO/INC
          INC       PATMRGIO/INC
          INC       PATURCIO/INC
