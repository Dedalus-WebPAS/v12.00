.------------------------------------------------------------
.  File          :  NHIMKCPR.PBL
.
.  Function      :  Update Keyword Index File for
.                   NHI Medical Warning Code Table  
.
.  Parameters    :  NHMCCSYS & NHMCCOD   
.
.  Modifications :
.
.
.------------------------------------------------------------
          DEFPROC   NHIMKCUP
.
          INC       NHIMKCFD/INC
.
KEYINDX1  DIM       2         * Code Index in Table
KEYINDX2  DIM       6         * Code Index in Table
KEYWORDS  DIM       60        * String Containing the Key Words to be Indexed
SIXTY     FORM      "60"
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       15
KEYWRD02  DIM       15
KEYWRD03  DIM       15
KEYWRD04  DIM       15
KEYWRD05  DIM       15
KEYWRD06  DIM       15
KEYWRD07  DIM       15
KEYWRD08  DIM       15
KEYWRD09  DIM       15
KEYWRD10  DIM       15
.------------------------------------------------------------
. Generate Word Index
.------------------------------------------------------------
HCGE0000  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     NHIMKCA1,"nhimkcaf"
          TRAPCLR  IO
          BRANCH   OVRCD,HCGE9999
.
          MOVE     NHMCCSYS,KEYINDX1
          MOVE     NHMCCOD,KEYINDX2
          CALL     MCCCL000           * Remove Current Key Word Index
          BRANCH   EXIT,HCGE9999
.
          PACK     KEY8,NHMCCSYS,NHMCCOD * Validate Record on File
          CALL     RDNHMC1
          BRANCH   OVRCD,HCGE1900     * If Not then it Must be a Delete/Clear
.
          MOVE     NHMCCSYS,KEYINDX1
          MOVE     NHMCCOD,KEYINDX2
          MOVE     NHMCDES,KEYWORDS
          CALL     MCCBW000
.
HCGE1900  CLOSE    NHIMKCA1
.
HCGE9999  GOTO     NHIMKCEP
.------------------------------------------------------------
. Clear Current Key Words
.------------------------------------------------------------
MCCCL000  PACK     KEY23,KEYINDX1,KEYINDX2,SP70
          CALL     RSNHMK1
          CALL     RKNHMK1
          BRANCH   OVRCD,MCCCL999
          MATCH    KEYINDX1,NHMKKTYP
          GOTO     MCCCL999 IF NOT EQUAL
          MATCH    KEYINDX2,NHMKKITM
          GOTO     MCCCL999 IF NOT EQUAL
.
          PACK     KEY23,NHMKKTYP,NHMKKITM,NHMKKKWD,SP70
          CALL     DENHMK1
          GOTO     MCCCL000
.
MCCCL999  RETURN
.-------------------------------------------------
. Determine Words to Index
.-------------------------------------------------
MCCBW000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      MCCBW000 IF NOT EOS
            GOTO      MCCBW999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY60,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      MCCBW100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handly form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Save this Word
.
MCCBW100  MOVE      KEYWORDS,KEY15
          PACK      KEY15,KEY15,SP70
          REP       UPPLOW,KEY15             * Always Upper Case
          PACK      KEY23,KEYINDX1,KEYINDX2,KEY15
          UNPACK    KEY23,NHMKKTYP,NHMKKITM,NHMKKKWD
          CALL      RDNHMK1
          IF        OVRCD=1
            CALL      WRNHMK1
          ENDIF
          GOTO      MCCBW190
.
.         Check for any more words
.
MCCBW190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY60,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY60,KEYWORDS
          GOTO      MCCBW000
.
MCCBW999  RETURN
.
          INC       NHIMKCIO/INC
          INC       IBAOVRIO/INC
.
NHIMKCEP  ENDPROC                          * End of Procedure
.
