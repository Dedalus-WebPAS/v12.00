.*******************************************************************************
.* System    :  OUTPATIENTS                                                    *
.* Program   :  IBAOUT21                                                       *
.* Desc      :  Outpatient View a Clinic                                       *
.*******************************************************************************
.* Date      :  20/12/1991                                                     *
.* Author    :  Graeme Williams                                                *
.* Function  :  This program views a Clinic  (It was extracted from IBAOUT66)  *
.* Mods.     :                                                                 *
.*******************************************************************************
.* V12.00.01 28/05/2025 Thanh T         TSK 0955096                            *
.*           Changed for alphanumeric visit number                             *
.*******************************************************************************
.*        V11.02.01 09/02/2022  Thanh T       TSK 0905641                      *
.*                  Recompiled as OUTMA1FD changes                             *
.*        V10.11.02 27/11/2017 Thanh T.        TSK 0821710                     *
.*                  Recompiled as PATMISTD changed                             *
.*        V10.11.01 20/09/2017 Thanh T.        TSK 0821710                     *
.*                  Audit Amission/outpatient visit comments                   *
.*******************************************************************************
.*        V10.07.01 04/11/2015  Ebon Clements  CAR 268970                      *
.*                  Change to use OUTCLIFD index 1 instead of index 2          *
.*        V5.08.02  19/09/2000  Stefve Armstrong   srf 647263                  *
.*                  Recompiled for changes to OUTDSCLN                         *
.*                  Fixed check on site code when reading outcliaf index 2     *
.*        V5.08.01  29/08/2000  Caleb Sharman                                  *
.*                  Changed Health Fund variables to be 8 chars                *
.*        V5.08.B01 13/03/2000  Steve Armstrong   5.08 Mods                    *
.*                  Mods for changes to OUTCLIFD (effective date)              *
.*******************************************************************************
.*        V5.01.132 07/12/1992  i chung           SRF 119309                   *
.*                  Added Total Bookings and Total Attendances for Print option*
.*        V5.01.133 08/12/1992  i chung           SRF 119309                   *
.*                  Initialized Total Bookings and Total Attendances variables *
.*        V5.01.134 02/03/93  ROD                                              *
.*                  recompiled for outma1af                                    *
.*        V5.02.01  28/03/95  Gabrielle   SRF 640154                           *
.*                  Default clinic start time                                  *
.*                                                                             *
.*******************************************************************************
.
          INC       STD001FD            * Standard includes
.
          INC       OUTBOAFD/INC        * Bookings file A
          INC       OUTBB1FD/INC        * Bookings file B
          INC       OUTCLIFD/INC        * Clinic Ids
          INC       OUTCONFD/INC        * Outpatient System Parameters
          INC       OUTCTYFD/INC        * Clinic Types
          INC       OUTMA1FD/INC        * Session Master file
          INC       OUTPREFD/INC        * Outpatient Pre-attendance file
          INC       OUTSESFD/INC        * Clinic Open Sessions file
          INC       OUTSITFD/INC        * Site file
.
          INC       VISMDTFD/INC        * Comments files
          INC       VISMTXFD/INC
          INC       PATMISTD/INC
          INC       PATCODFD/INC        * Codes file
          INC       PATDO1FD/INC        * Doctors file
          INC       PATMA1FD/INC        * PMI file
          INC       PATPR1FD/INC        * Pre-attendance PMI file
+
.
.         WORK VARIABLES
.
ABORT     FORM      1             * Abort flag. 1 = Abort input
.
CHECK     FORM      3
.
DDAY      DIM       9
DIM40     DIM       40
DIM40COM  DIM       40
DSCCLIN   DIM       30
DSESST    DIM       20
DSPOPT    FORM      1             * Option for DSPS0000
DSPSNAM   DIM       15            * Shortened surname for DSPS0000
.
.
MASCMNTS  DIM       55
.
SESSION   DIM       25            * Test session (Site,Clinic,Date,Time)
SHCTYP    DIM       20
.
TOTBOOK   FORM      3             * Total Number of Bookings    - for printing
TOTATTD   FORM      3             * Total Number of Attendances - for printing
.
VCTYP     DIM       6             * Working Clinic type
VCLIN     DIM       6             * Working Clinic id
VDATE     DIM       8             * Working Clinic date
VERTCL    FORM      2             * Keyin line for clinic id
VERTDT    FORM      2             * Keyin line for clinic date
VERTTM    FORM      2             * Keyin line for clinic time
VSESS     DIM       25            * Working Session (Site,Clin,Date,Time)
VSESST    DIM       3             * Working Session Status
VSITE     DIM       6             * Working Site
VTIME     DIM       5             * Working Clinic time
VVISIT    DIM       3             * Working Slot visit type
.
WDAY      FORM      3             * outgenss
.
.         CONSTANTS
.
CODECS    INIT      "CS"          * Clinic Status
CODECV    INIT      "CV"          * Visit Type
.
HASH      INIT      "##"
.
Z20       INIT      "ZZZZZZZZZZZZZZZZZZZZ"
.
.-----------------------------------------------------------------------
PRGNAM    INIT      "View A Clinic"
PRGID     INIT      "IBAOUT21"
VERSION   INIT      "V12.00.01"
.-----------------------------------------------------------------------
+
.
.  ------ Main Program ------
.
          CALL      INIT0000            * Initialisation routine
          BRANCH    EXIT,ML9999         * Initialisation failure
.
.  ------ Main loop ------
.
.*****************************************************************************
.* Option 10: View a Clinic                                                  *
.*****************************************************************************
ML0000    CALL      CLRM0000            * Clear the menu variables
          CALL      SMEN0000            * Display the standard menu
          CALL      KCLI0000            * Input current clinic id
          BRANCH    ABORT,ML9999        * Abort
          BRANCH    EXIT,ML9999         * No clinic id entered, return
.
          CALL      KDAT0000            * Input current clinic date
          BRANCH    ABORT,ML9999        * Abort
          CALL      KTIM0000            * Input current clinic time
          BRANCH    ABORT,ML9999        * Abort
          BRANCH    EXIT,ML0000         * No clinic time entered
          CALL      GSES0000            * Get the session just selected
          BRANCH    EXIT,ML0000         * No such clinic found
.
.         Display the session details
.
ML0010    BRANCH    HOVIEWCM,ML0015     * Display session in 1 column with cmnts
.
.         Normal session display
.
          MOVE      ZERO,DSPOPT         * We want all slots displayed
          CALL      DSPS0000            * Display the session
          BRANCH    ABORT,ML9999        * Abort
          BRANCH    EXIT,ML0000         * Exit option from display screen
          GOTO      ML0020              * Get user options
.
.         Display with comments
.
ML0015    CALL      DSCM0000            * Display the session with comments
          BRANCH    ABORT,ML9999        * Abort
          BRANCH    EXIT,ML0000         * Exit option from display screen
.
.         Ask if they want to Print, Exit, Forward, Backward or Redisplay
.
ML0020    CALL      VWCL0000            * Ask for the option they want
          BRANCH    ABORT,ML9999        * Abort
          BRANCH    EXIT,ML0000:        * Exit from this clinic
                         ML0100:        * Forward to next session
                         ML0200:        * Backward to previous session
                         ML0300:        * Print this session
                         ML0010         * Redisplay the screen
.
.         Move forward to the next session for this clinic
.
ML0100    CALL      NEXT0000            * Find the next session for this clinic
          BRANCH    ABORT,ML9999        * Abort
          BRANCH    EXIT,ML0020         * No next session available
          CALL      GSES0000            * Get the session just selected
          BRANCH    EXIT,ML0020         * No such clinic found
          GOTO      ML0010              * Display the new session
.
.         Move backward to the previous session for this clinic
.
ML0200    CALL      PREV0000            * Find the previous session for clinic
          BRANCH    ABORT,ML9999        * Abort
          BRANCH    EXIT,ML0020         * No previous session available
          CALL      GSES0000            * Get the session just selected
          BRANCH    EXIT,ML0020         * No such clinic found
          GOTO      ML0010              * Display the new session
.
.         Print the session
.
ML0300    CALL      PRNV0000            * Print this session
          CALL      DSES0000            * Redisplay session heading
          GOTO      ML0010              * Redisplay the session
.
ML9999    CHAIN     PGM                 * Return from whence thou comest
+
.*****************************************************************************
.* INIT0000: Initialisation routine                                          *
.*****************************************************************************
INIT0000  CALL      DISPHEAD             * Display the standard heading
.
          MOVE      IDDD,VSITE           * Initialise the current site
          MATCH     SP6,VSITE            * Valid site ?
          GOTO      INIT9000 IF EQUAL    * No. Initialisation failure
.
.         Open the site file so as an extra test on the site, and to get
.         the parameters for the site (ie. OSTSYST, OSTIRNG, OSTCHRG)
.
          DISPLAY   *P56:24,"Opening ";
.
          DISPLAY   *P64:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"  * Open the site file
.
          MOVE      VSITE,KEY6           * Key for the site file
          CALL      RDSITA1              * Read the site record
          BRANCH    OVRCD,INIT9000       * Invalid site
.
          CLOSE     OUTSITA1             * Close the site file (not needed)
.
          MATCH     UID,OSTFILE          * Final check. Is UID correct for site?
          GOTO      INIT9000 IF NOT EQUAL
.
.         Open the control file to get the parameters needed by this program
.
          DISPLAY   *P64:24,"controlf";  * Display the name of the control file
          OPEN      CONTROLF,"controlf"  * Open the control file
.
.         Read in the parameters.
.
          READ      CONTROLF,THIRTY1;*135,HOVIEWCM,*155,OTCNSUPX,*221,OTCNDCST
          CLOSE     CONTROLF             * Close the control file
.
.         Open the files needed by this program
.
          PACK      CFNAME,UID,FILBOKA1  * Get the name of the BOKA1 file
          DISPLAY   *P64:24,CFNAME;      * Display the name
          OPEN      OUTBOKA1,CFNAME      * Open the file
.
          PACK      CFNAME,UID,FILBOKA2  * Get the name of the BOKA2 file
          DISPLAY   *P64:24,CFNAME;      * Display the name
          OPEN      OUTBOKA2,CFNAME      * Open the file
.
          PACK      CFNAME,UID,FILBOKA3  * Get the name of the BOKA3 file
          DISPLAY   *P64:24,CFNAME;      * Display the name
          OPEN      OUTBOKA3,CFNAME      * Open the file
.
          PACK      CFNAME,UID,FILBOKA4  * Get the name of the BOKA4 file
          DISPLAY   *P64:24,CFNAME;      * Display the name
          OPEN      OUTBOKA4,CFNAME      * Open the file
.
          PACK      CFNAME,UID,FILBB1A1  * Get the name of the BOKB1 file
          DISPLAY   *P64:24,CFNAME;      * Display the name
          CALL       OPOTBB11
.
          PACK      CFNAME,UID,FILCLIA1  * Get the name of the CLIA1 file
          DISPLAY   *P64:24,CFNAME;      * Display the name
          OPEN      OUTCLIA1,CFNAME      * Open the file
.
          PACK      CFNAME,UID,FILMA1A1  * Get the name of the MASA1 file
          DISPLAY   *P64:24,CFNAME;      * Display the name
          CALL       OPOTMA11
.
          DISPLAY   *P64:24,"patcodes";  * Display the name of the codes file
          OPEN      PATCODE1,"patcodes"  * Open the file
.
          DISPLAY   *P64:24,"patdo1af";  * Display the name of the doctors file
          OPEN      PATDO1A1,"patdo1af"  * Open the file
.
          DISPLAY   *P64:24,"patma1af";  * Display the name of the PMI file
          OPEN      PATMA1A1,"patma1af"  * Open the file
.
          DISPLAY   *P64:24,"patmx1af";  * Display the name of the PMI file
          OPEN      PATMX1A1,"patmx1af"  * Open the file
.
          DISPLAY   *P64:24,"patpramf";  * Display the name of the pre-PMI file
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
.
.         Initialisation completed
.
          MOVE      ZERO,EXIT            * Initialisation successful
          GOTO      INIT9999             * Return
.
.         Invalid call to program. Common not set up with correct site info
.
INIT9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Incorrect call to program; Site info wrong **    ";
          CALL      HITENTER
          MOVE      ONE,EXIT             * Initialisation failure
.
INIT9999  RETURN
+
.*****************************************************************************
.* SETA0000: Set the abort trap for function key 1                           *
.*****************************************************************************
SETA0000  MOVE      ZERO,ABORT           * Clear the abort flag
.>>>>>>.  TRAP      ABRT0000 IF F1       * Call ABRT0000 if F1 is entered
SETA9999  RETURN
+
.*****************************************************************************
.* CLRA0000: Clear the abort trap on function key 1                          *
.*****************************************************************************
CLRA0000  MOVE      ZERO,ABORT           * Clear the abort flag
.>>>>>>.  TRAPCLR   F1                   * Clear the trap on F1
CLRA9999  RETURN
+
.*****************************************************************************
.* ABRT0000: The F1 abort trap has been triggered. Set abort indicator       *
.*****************************************************************************
ABRT0000  MOVE      ONE,ABORT            * Set the abort flag
          UNPACK    SP6,CYEAR,CMON,CDAY  * Fudge to get KEYDATE to return
          UNPACK    SP4,CHOUR,CMIN       * Fudge to get KEYTIME to return
ABRT9999  RETURN
+
.*****************************************************************************
.* KCLI0000: Keyin the clinic id and validate it                             *
.*                                                                           *
.* PARAMETERS : VERTCL = Line for keyin of clinic id                         *
.* RETURNS    : EXIT = 0 if valid clinic id entered (VCLIN = clinic id)      *
.*                     1 if no clinic id entered    (VCLIN = SP6)            *
.*****************************************************************************
KCLI0000  MOVE      SP6,VCLIN           * Initialise clinic id
          MOVE      SP30,DSCCLIN        * Initialise clinic id description
          KEYIN     *P30:VERTCL,*EL,*DV,UNDLN6:
                    *P30:VERTCL,*V2LON,VCLIN;
          BRANCH    ABORT,KCLI9999      * Input aborted
.
          ENDSET    VCLIN               * Go to the end of the input data
          APPEND    SP6,VCLIN           * Pad out to the full length
          RESET     VCLIN               * Reset back to normal
.
          DISPLAY   *P30:VERTCL,*V2LON,VCLIN;
.
.         Check if anything was input
.
          MATCH     SP6,VCLIN           * Was anything input ?
          GOTO      KCLI8000 IF EQUAL   * No. Exit with status of 1.
.
.         Check if abort was input
.
          CMATCH    EXITCHAR,VCLIN      * Was abort input ?
          GOTO      KCLI9000 IF EQUAL   * Yes
.
.         Check if a ? option was selected
.
          CMATCH    QUEST,VCLIN         * "?" option selected ?
          GOTO      KCLI1000 IF EQUAL   * Yes, display valid options
.
.         We have a clinic id. Validate it against the clinic id file
.
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          PACK      KEY20,VSITE,VCLIN,KEY8
          CALL      RDCLIA1
          IF        OVRCD = 1
KCLI0500    CALL      RDPCLIA1
            IF        OVRCD = 0
              MATCH     VSITE,OCASITE
              GOTO      KCLI0500 IF NOT EQUAL
.
              MATCH     VCLIN,OCACLIN
              IF        !@EQUAL
                MOVE      ONE,OVRCD
              ENDIF
            ENDIF
          ENDIF
          BRANCH    OVRCD,KCLI2000      * Clinic record not found
.
.         We have a valid clinic record.  Now get the description.
.
          CALL      CIDSC000            * Get the clinic description
.
.         Display the name of the clinic
.
          MOVE      OCADESC,DSCCLIN     * Save the clinic description
          DISPLAY   *P45:VERTCL,DSCCLIN;
.
.         Clinic id found
.
          MOVE      ZERO,EXIT           * Success indicator
          GOTO      KCLI9999            * Return to main code
.
.         "?" option.  Display available selections
.
KCLI1000  CALL      OUTDSCLN            * Display valid clinic ids
          BRANCH    ABORT,KCLI9999      * Abort input
          MOVE      SP6,VCLIN           * Initialise for redisplay
.
          CALL      DMEN0000            * Display menu for this option
          GOTO      KCLI0000
.
.         Clinic id not found on file
.
KCLI2000  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Invalid Clinic Id **    ";
          CALL      HITENTER
          BRANCH    ABORT,KCLI9999      * Input aborted
          GOTO      KCLI0000
.
.         No clinic id entered
.
KCLI8000  MOVE      ONE,EXIT            * Indicator saying nothing input
          GOTO      KCLI9999            * Return to main code
.
.         Abort option selected
.
KCLI9000  CALL      ABRT0000            * Abort selected
.
KCLI9999  RETURN
+
.*****************************************************************************
.* CIDSC000: Get the description for the current clinic id record            *
.*                                                                           *
.* RETURNS    : OCADESC = Clinic description or Doctor's description         *
.*****************************************************************************
CIDSC000  MATCH     SP6,OCADOCT         * Do we have a doctors code ?
          GOTO      CIDSC999 IF EQUAL   * No.  Use the description provided.
.
          MOVE      OCADOCT,KEY6        * Set up key for doctors file
          CALL      RDDOCT1             * Read the doctors code
          BRANCH    OVRCD,CIDSC999      * No doctors record found.  Blank desc.
.
.         Pack up the doctor's name into a "nice" format
.
          CALL      CONCATDR            * Routine found in OUTDSCLN
          MOVE      DIM40,OCADESC       * Move doctors name into OCADESC
CIDSC999  RETURN
+
.*****************************************************************************
.* KDAT0000: Keyin the clinic date. No validation is performed, but a        *
.*           "?" option is available if VCLIN if non blank                   *
.*                                                                           *
.* PARAMETERS : VERTDT = Line for keyin of date                              *
.* RETURNS    : VDATE  = Date input (CCYYMMDD) format                        *
.*****************************************************************************
KDAT0000  OPEN      CONTROLF,"controlf"
          CALL      IBACLOCK              * Recheck current date
          CLOSE     CONTROLF
.
KDAT1000  PACK      VDATE,CCC,CYY,CMM,CDD
          REP       " 0",VDATE            * Initialisation of date (todays date)
          MOVE      VDATE,OBADATE         * Save the current date
.
.         Set up variables for the keyin of the date
.
          UNPACK    VDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      VERTDT,CVERT          * Line to keyin the date
          MOVE      THIRTY,CCOL           * Column to keyin the date
          MOVE      CVERT,EVERT           * Line for error messages
          MOVE      "45",ECOL             * Column for error messages
          MOVE      ZERO,CHIGHLT          * Use highlighting
          MOVE      ZERO,CDEFDTE          * Don't allow one ENTER to accept date
.
          CALL      KEYDATE               * Key in the date
          BRANCH    ABORT,KDAT9999        * Input aborted
          BRANCH    CQUEST,KDAT5000       * "?" option selected
          BRANCH    OVRCD,KDAT9999        * No date input (Can not occur)
.
.         We have a valid date
.
          PACK      VDATE,ICENT,IYEAR,IMON,IDAY
          REP       " 0",VDATE            * Set up the selected date
.
          PACK      KEY20,VSITE,VCLIN,VDATE
          CALL      RDCLIA1
          IF        OVRCD = 1
KDAT2000    CALL      RDPCLIA1
            IF        OVRCD = 0
              MATCH     VSITE,OCASITE
              GOTO      KDAT2000 IF NOT EQUAL
.
              MATCH     VCLIN,OCACLIN
              IF        !@EQUAL
                MOVE      ONE,OVRCD
              ENDIF
            ENDIF
          ENDIF
          IF        OVRCD = 1
            MOVE      "Unknown clinic",OCADESC
            PACK      OCADESC,OCADESC,SP30
          ENDIF
          MOVE      OCADESC,DSCCLIN     * Save the clinic description
          DISPLAY   *P45:VERTCL,DSCCLIN;
.
.         Check date against current date to see if a warning message
.         should be displayed
.
          MATCH     OBADATE,VDATE         * Is selected date before today ?
          GOTO      KDAT9999 IF NOT LESS  * No.  Return with this date.
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** ",*BLINKON,"WARNING",*HOFF,*V2LON:
                    ": Date entered is less than current date **";
          GOTO      KDAT9999              * Return with this date
.
.         "?" option selected.  Display session master details for this clinic
.         (if known).
.
KDAT5000  MATCH     SP6,VCLIN             * Do we have a clinic id ?
          GOTO      KDAT6000 IF EQUAL     * No.  Cannot do a "?" option.
.
          PACK      CFNAME,UID,FILCTYA1   * Get the clinic type file name
          OPEN      OUTCTYA1,CFNAME       * Open the clinic type file
.
          CALL      OUTDSMAS              * Display the available sessions
          BRANCH    ABORT,KDAT9999        * Abort input
.
          CLOSE     OUTCTYA1              * Close the clinic type file
.
          MOVE      SP8,VDATE             * Initialise for the redisplay
          CALL      DMEN0000              * Display menu for this option
          GOTO      KDAT1000              * Key in the date again
.
.         We don't have a clinic id so we cannot do a "?" option on date
.
KDAT6000  BEEP                            * Tell user they have made a mistake
          GOTO      KDAT1000              * Key in the date again
.
KDAT9999  RETURN
+
.*********************************************************************
.*        Get the Default Clinic Time for the id/date entered        *
.*********************************************************************
GDCT0000  MOVE      SP5,VTIME
          COMPARE   ONE,OTCNDCST
          GOTO      GDCT9999 IF NOT EQUAL   * not defaulting time
.
          MOVE      ZERO,FORM2
          PACK      KEY28,IDDD,VCLIN,VDATE,SP20
.
GDCT1000  CALL      RDSBOKA1
          CALL      RDKBOKA1
          BRANCH    OVRCD,GDCT9999          * end of file
.
          PACK      KEY20,OBASITE,OBACLIN,OBADATE
          MATCH     KEY20,KEY28
          GOTO      GDCT9999 IF NOT EQUAL   * different details
.
          ADD       ONE,FORM2
          LOAD      VTIME,FORM2,OBASTRT,SP5
          PACK      KEY28,IDDD,VCLIN,VDATE,OBASTRT,Z20
          BRANCH    FORM2,GDCT1000          * on first item
.
GDCT9999  RETURN
.*****************************************************************************
.* KTIM0000: Keyin the clinic time. No validation is performed, but a        *
.*           ? option is available if VCLIN if non blank                     *
.*                                                                           *
.* PARAMETERS : VERTTM = Line for keyin of time                              *
.* RETURNS    : VTIME  = Time input (HH:MM) format                           *
.*****************************************************************************
KTIM0000  CALL      GDCT0000             * Initialisation of time
.
.         Set up variables for the keyin of the time
.
          UNPACK    VTIME,CHOUR,ANS,CMIN * Default values for keyin (ie. blank)
          MOVE      VERTTM,CVERT         * Line to keyin the date
          MOVE      THIRTY,CCOL          * Column to keyin the date
          MOVE      CVERT,EVERT          * Line for error messages
          MOVE      "45",ECOL            * Column for error messages
.
          CALL      KEYTIME              * Key in the time
          BRANCH    ABORT,KTIM9999       * Input aborted
          BRANCH    CQUEST,KTIM1000      * "?" option selected
          BRANCH    OVRCD,KTIM9000       * No time input
.
.         We have a valid time
.
          PACK      VTIME,IHOUR,COLON,IMIN
          REP       " 0",VTIME           * Set up the selected time
.
          MOVE      ZERO,EXIT            * Returning with a time
          GOTO      KTIM9999             * Return with this time
.
.         "?" option selected. Display session master details for this clinic
.         (if known).
.
KTIM1000  MATCH     SP6,VCLIN            * Do we have a clinic id ?
          GOTO      KTIM2000 IF EQUAL    * No.  Cannot do a "?" option.
.
          PACK      CFNAME,UID,FILCTYA1  * Get the clinic type file name
          OPEN      OUTCTYA1,CFNAME      * Open the clinic type file
.
          CALL      OUTDSMAS             * Display the available sessions
          BRANCH    ABORT,KTIM9999       * Abort input
          CLOSE     OUTCTYA1             * Close the clinic type file
.
          MOVE      SP5,VTIME            * Initialise for the redisplay
          CALL      DMEN0000             * Display menu for this option
          GOTO      KTIM0000             * Key in the date again
.
.         We don't have a clinic id so we cannot do a "?" option on time
.
KTIM2000  BEEP                           * Tell user they have made a mistake
          GOTO      KTIM0000             * Key in the time again
.
.         No time input.  Return with a flag to say so.
.
KTIM9000  MOVE      ONE,EXIT             * No time input
.
KTIM9999  RETURN
+
.*****************************************************************************
.* GSES0000: Get the session for the current clinic/date/time                *
.*                                                                           *
.* PARAMETERS : VCLIN  = Clinic id                                           *
.*              VDATE  = Session date                                        *
.*              VTIME  = Session start time                                  *
.* RETURNS    : EXIT   = 0 means session found                               *
.*                     = 1 means session not found                           *
.*              VSESS  = Session parameters (VSITE,VCLIN,VDATE,VTIME)        *
.*****************************************************************************
.         Pack up the key for the 1st index of the booking file (This will
.         take us directly to the session we want)
.
GSES0000  PACK      VSESS,VSITE,VCLIN,VDATE,VTIME
.
          PACK      KEY28,VSESS,SP6     * Starting key for this session
          CALL      RDSBOKA1            * Position ourselves at the start
          CALL      RDKBOKA1            * Read first record of session
          BRANCH    OVRCD,GSES9000      * Session not found
.
.         Now check that we have the correct session
.
          PACK      SESSION,OBASITE,OBACLIN,OBADATE,OBASTRT
.
          MATCH     SESSION,VSESS       * Correct session ?
          GOTO      GSES9000 IF NOT EQUAL
.
.         Get the clinic status description
.
          CALL      ISES0000            * Initialise session comments
          BRANCH    EXIT,GSES9999       * Initialisation error
.
.         Display the standard heading
.
          CALL      DSES0000            * Display the standard session heading
          MOVE      ZERO,EXIT           * Session found
          GOTO      GSES9999            * Return
.
.         Session not found
.
GSES9000  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Session not found **    ";
          CALL      HITENTER
          MOVE      ONE,EXIT            * Session not found
.
GSES9999  RETURN
+
.*****************************************************************************
.* ISES0000: Initailise standard session heading variables                   *
.*****************************************************************************
ISES0000  MOVE      OBASESST,VSESST     * Save the session status
          MOVE      SP20,DSESST
.
          MATCH     SP3,VSESST
          GOTO      ISES1000 IF EQUAL
.
          PACK      KEY5,CODECS,OBASESST
          CALL      RDCODE1
          BRANCH    OVRCD,ISES1000
          MOVE      TDESC,DSESST
.
.         We have found the session.  Now read in the master file record for
.         this session.
.
ISES1000  PACK      KEY18,OBASITE,OBACLIN,OBADAY,OBASTRT
          CALL      RDMASA1             * Read in the session master record
          BRANCH    OVRCD,ISES9000      * No record found.  Error.
          MOVE      OMATYP,VCTYP        * Save clinic type
          MOVE      OMADAY,WDAY         * Save day of week
.
.         Set up the comments from the master file
.
          CLEAR     MASCMNTS            * Clear the comments variable
          APPEND    OMACOM1,MASCMNTS    * Append the first line of comments
.
.         Loop backwards until we hit a nonblank
.
ISES2000  CMATCH    SP1,MASCMNTS        * Is the last character a blank
          GOTO      ISES3000 IF NOT EQUAL
          BUMP      MASCMNTS,-1         * Bump to previous character
          GOTO      ISES2000 IF NOT EOS * Try next character if there is one
.
ISES3000  APPEND    SP1,MASCMNTS        * Space to seperate comment lines
          APPEND    OMACOM2,MASCMNTS    * Append the second line of comments
          APPEND    SP30,MASCMNTS       * Pad out the display field
          RESET     MASCMNTS            * Reset ready to display
          MOVE      ZERO,EXIT           * Successful initialisation
          GOTO      ISES9999
.
.         Session master record not found
.
ISES9000  DISPLAY   *P1:24,*EL,*B,*V2LON,"** ",*BLINKON,"ERROR",*HOFF,*V2LON:
                    ": Clinic Master record missing **    "; 
          CALL      HITENTER
          MOVE      ONE,EXIT            * Session master not found
.
ISES9999  RETURN
+
.*****************************************************************************
.* DSES0000: Display the standard session heading                            *
.*****************************************************************************
DSES0000  PACK      CFNAME,UID,FILCTYA1 * Name of the clinic type file
          OPEN      OUTCTYA1,CFNAME     * Open the clinic type file
.
          MOVE      "** Unknown Clinic Type **     ",OCTDESC
.
          PACK      KEY12,VSITE,VCTYP   * Key for clinic type file
          CALL      RDCTYA1             * Read the clinic type file
          CLOSE     OUTCTYA1            * Close the clinic type file
.
.         Get the clinic id description
.
          PACK      KEY20,VSITE,VCLIN,VDATE
          CALL      RDCLIA1
          IF        OVRCD = 1
DSES0500    CALL      RDPCLIA1
            IF        OVRCD = 0
              MATCH     VSITE,OCASITE
              GOTO      DSES0500 IF NOT EQUAL
.
              MATCH     VCLIN,OCACLIN
              IF        !@EQUAL
                MOVE      ONE,OVRCD
              ENDIF
            ENDIF
          ENDIF
          BRANCH    OVRCD,DSES1000      * Clinic record not found
.
.         We have a valid clinic record. Now get the description.
.
          CALL      CIDSC000            * Get the clinic description
          GOTO      DSES2000
.
.         Unknown clinic id
.
DSES1000  MOVE      "** Unknown Clinic Id **       ",OCADESC
.
.         Get the day description
.
DSES2000  MOVE      SP10,DDAY
          LOAD      DDAY,WDAY,DMON,DTUE,DWED,DTHU,DFRI,DSAT,DSUN
.
          UNPACK    VDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P1:3,*EF:
                    *P1:4,"Clinic Type :",*P54:4,"Clinic Date :":
                    *P1:5,"Clinic Id   :",*P54:5,"Day :",*P70:5,"@":
                    *P15:4,*V2LON,VCTYP,*HOFF,*P22:4,OCTDESC:
                    *P68:4,*V2LON,CPCDATE:
                    *P15:5,VCLIN,*HOFF,*P22:5,OCADESC,*V2LON,*P60:5,DDAY:
                    *P72:5,VTIME;
.
          CALL      DSST0000            * Display the session status line
.
DSES9999  RETURN
+
.*****************************************************************************
.* DSST0000: Display the session status and any comments                     *
.*****************************************************************************
DSST0000  DISPLAY   *P1:6,*EL,MASCMNTS,*P60:6,*V2LON,*BLINKON,DSESST;
DSST9999  RETURN
+
.*****************************************************************************
.* DSPS0000: Display the current session                                     *
.*                                                                           *
.* PARAMETERS : DSPOPT = Display Option. 0 = Display all slots               *
.*                                       1 = Display booked slots only       *
.*                                       2 = Display booked & attended slots *
.*                                       3 = Display booked slots only, but  *
.*                                           display priority, not visit type*
.*                                                                           *
.*              VSITE  = Site code of session                                *
.*              VCLIN  = Clinic code of session                              *
.*              VDATE  = Date of session                                     *
.*              VTIME  = Start time of session                               *
.*              OTCNSUPX = suppression of extended slots (1 = yes)           *
.* RETURNS    : EXIT   = 0 means Session successfully displayed              *
.*                     = 1 means either No data to display, or Exit selected *
.*****************************************************************************
DSPS0000  DISPLAY   *P1:10,*EF,*ULON,*V2LON:
                    *P1:10,"Slot",*P10:10,"Time ",*P16:10," U/R No.":
                    *P25:10,"Name           ":
                    *P41:10,"Slot",*P50:10,"Time ",*P56:10," U/R No.":
                    *P65:10,"Name           ";
.
          MOVE      TEN1,CVERT          * Initialise next free line
          MOVE      ONE,CCOL            * Initialise next free column
.
          BRANCH    DSPOPT,DSPS0200:    * Looking at booked slots only
                           DSPS0100:    * Looking at booked & attended slots
                           DSPS0200     * Looking at booked slots only
.
.         Display all slots
.
DSPS0100  PACK      KEY28,VSITE,VCLIN,VDATE,VTIME,SP10
          CALL      RDSBOKA1            * Position at start of clinic
          GOTO      DSPS1000            * Get the first record
.
.         Display booked slots only
.
DSPS0200  PACK      KEY35,VSITE,VCTYP,VCLIN,ONE,VDATE,VTIME,SP10
          CALL      RDSBOKA4            * Position at start of booked slots
.
.         Get the next record from the booking file and validate it
.
DSPS1000  BRANCH    DSPOPT,DSPS1200:    * Looping over booked slots only
                           DSPS1300:    * Looping over booked & attended slots
                           DSPS1200     * Looping over booked slots only
.
.         All slots in session
.
DSPS1100  CALL      RDKBOKA1            * Read next booking record
          BRANCH    OVRCD,DSPS8000      * Finished session
.
.         check for suppression of extended slots
.
          COMPARE   ONE,OTCNSUPX
          GOTO      DSPS2000 IF NOT EQUAL   * not suppressing slots
.
          COMPARE   THREE,OBASTAT
          GOTO      DSPS2000 IF NOT EQUAL   * not extended slot
.
          PACK      KEY18,OBASITE,OBACLIN,OBADAY,OBASTRT
          CALL      RDMASA1
          BRANCH    OVRCD,DSPS1100          * no master record
.
          MATCH     "Y",OTMASUPX
          GOTO      DSPS1100 IF EQUAL       * suppress extended slots
          GOTO      DSPS2000                * Go and do validation
.
.         Booked slots only
.
DSPS1200  CALL      RDKBOKA4            * Read the next booking record
          BRANCH    OVRCD,DSPS8000      * Finished session
.
.         We are only interested in OBASTAT of 1 (Booked)
.
          BRANCH    OBASTAT,DSPS2000
          GOTO      DSPS8000            * Finished session
.
.         Booked and Attended slots only
.
DSPS1300  CALL      RDKBOKA1            * Read next booking record
          BRANCH    OVRCD,DSPS8000      * Finished session
.
.         We have a record. Now make sure it still the same session
.
          PACK      SESSION,OBASITE,OBACLIN,OBADATE,OBASTRT
.
          MATCH     SESSION,VSESS       * Check that we still have same session
          GOTO      DSPS8000 IF NOT EQUAL
.
          DISPLAY   *P1:24,"Scanning ",*EL,OBASLOT;
.
.         We are only interested in OBASTAT of 1 (Booked) and 4 (Attended)
.
          BRANCH    OBASTAT,DSPS2000,DSPS1300,DSPS1300,DSPS2000,DSPS1300
          GOTO      DSPS1300            * Rejected.  Get next record.
.
.         We have a record.  Now make sure it's still the same session.
.
DSPS2000  PACK      SESSION,OBASITE,OBACLIN,OBADATE,OBASTRT
.
          MATCH     SESSION,VSESS       * Check that we still have same session
          GOTO      DSPS8000 IF NOT EQUAL
.
.         We have a valid record. Set flag if any empty slots
.
          COMPARE   ZERO,OBASTAT
          GOTO      DSPS2100 IF NOT EQUAL
.
.         Check if the screen is currently full
.
DSPS2100  COMPARE   TWENTY4,CVERT       * Are we at the bottom of screen ?
          GOTO      DSPS5000 IF LESS    * No. Display record
.
          MOVE      TEN1,CVERT          * Reposition to start of column
          ADD       "40",CCOL           * Move to the next column
.
          COMPARE   "70",CCOL           * Have we passed the second column ?
          GOTO      DSPS5000 IF LESS    * No. Display record
.
.         The screen is full. Ask what we should do.
.
DSPS3000  KEYIN     *P1:24,"(",*V2LON,"E",*HOFF,")xit, (":
                               *V2LON,"C",*HOFF,")ontinue, (":
                               *V2LON,"S",*HOFF,")earch more, (":
                               *V2LON,"R",*HOFF,")edisplay ? ":
                               *V2LON,*EL,ANS;
          BRANCH    ABORT,DSPS9999      * Input aborted
.
          RESET     ANS                 * Was anything input ?
          GOTO      DSPS3100 IF EOS     * No. Wrong.
.
          TYPE      ANS                 * Make sure the answer wasn't numeric
          GOTO      DSPS3100 IF EQUAL   * Numeric. Wrong.
.
          REP       "E1e1C2c2S3s3R4r4",ANS
          TYPE      ANS                 * A valid answer will now be numeric
          GOTO      DSPS4000 IF EQUAL   * Numeric. Valid input.
.
DSPS3100  BEEP                          * Tell user they made a mistake
          GOTO      DSPS3000            * Rekey in the answer
.
.         Valid answer. Check what we are supposed to do
.
DSPS4000  MOVE      ANS,EXIT            * Move answer to a form field
          BRANCH    EXIT,DSPS9000:      * Exit
                         DSPS8100:      * Continue
                         DSPS4100:      * Search More
                         DSPS0000       * Redisplay
.
.         Continue onto next screen
.
DSPS4100  MOVE      TEN1,CVERT          * Initialise next free line
          MOVE      ONE,CCOL            * Initialise next free column
          DISPLAY   *PCCOL:CVERT,*EF;   * Clear the screen
.
.         Get the data for this record
.
DSPS5000  MOVE      SP30,DSPSNAM        * Initialise names to spaces
          MOVE      SP8,PURNO           * Initialise U/R to spaces
.
.         Check if there is anyone in this slot
.
          MATCH     ZEROVISN,OBAOUTNO   * Has the slot an outpatient number ?
          GOTO      DSPS6000 IF EQUAL   * No. Display these details
.
          MOVE      SP3,OBAPRTY         * Initialise priority code
          MOVE      OBAOUTNO,KEY8       * Set up key for bokb file
          CALL      RDBOKB1             * Read in priority code
.
.         Get the master file details for this booking
.
          MATCH     ZEROUR,OBAURNO      * Do we have a U/R number ?
          GOTO      DSPS5100 IF EQUAL   * No. Get data from pre-adm file
.
          MOVE      OBAURNO,KEY8        * Set up key for master file
          CALL      RDMAST1             * Read in the PMI record
          BRANCH    OVRCD,DSPS5200      * No master file details
          GOTO      DSPS5300            * Display details
.
DSPS5100  MOVE      OBAOUTNO,KEY8       * Set up key for Pre-adm file
          CALL      RDPRAM1             * Read in the Pre-adm record
          BRANCH    OVRCD,DSPS5200      * No master file details
          MOVE      ZEROUR,PURNO        * Restore 0 U/R
          GOTO      DSPS5300            * Display details
.
.         No master file details found
.
DSPS5200  MOVE      "* PMI Missing *",DSPSNAM
          MOVE      ZEROUR,PURNO        * No U/R number
          GOTO      DSPS6000            * Display details
.
.         Master files read in. Compress the patients name, and display
.
DSPS5300  CALL      FRMN0000            * Compress patients name into DIM40
          MOVE      DIM40,DSPSNAM       * Shorten the patients name
.
.         Set up slot indicator
.
DSPS6000  MOVE      SP1,ANS
          LOAD      ANS,OBASTAT,SP1,SP1,ANSE,ASK,HASH
.
.         Check if we are displaying visit type, or priority code
.
          LOAD      OBAVISIT,DSPOPT,OBAVISIT,OBAVISIT,OBAPRTY
.
.         Display this record
.
          DISPLAY   *PCCOL:CVERT,OBASLOT,ANS,SP1,OBAVISIT,SP1,OBATIME:
                    SP1,PURNO,SP1,DSPSNAM;
.
.         Move to the next available position
.
          ADD       ONE,CVERT           * Go to the next line
          GOTO      DSPS1000            * Get the next record
.
.   ----  We have finished the loop over the booking file ----
.
DSPS8000  COMPARE   TEN1,CVERT          * Check if anything was input
          GOTO      DSPS9100 IF EQUAL   * No. Report error.
.
DSPS8100  MOVE      ZERO,EXIT           * Display finished successfully
          GOTO      DSPS9999            * Return
.
.         Exit was selected for a session that went over two screens
.
DSPS9000  MOVE      ONE,EXIT            * Indicator saying don't continue
          GOTO      DSPS9999            * Return
.
.         Nothing was displayed
.
DSPS9100  DISPLAY   *P1:24,*EL,*B,*V2LON,"** No Data Found **    ";
          CALL      HITENTER
          MOVE      ONE,EXIT            * Indicator saying don't continue
.
DSPS9999  RETURN
+
.*****************************************************************************
.* DSCM0000   : Display the current session with comments  SRF 102747        *
.*                                                                           *
.* PARAMETERS : VSITE  = Site code of session                                *
.*              VCLIN  = Clinic code of session                              *
.*              VDATE  = Date of session                                     *
.*              VTIME  = Start time of session                               *
.* RETURNS    : EXIT   = 0 means Session successfully displayed              *
.*                     = 1 means either No data to display, or Exit selected *
.*****************************************************************************
DSCM0000  DISPLAY   *P1:10,*EF,*ULON,*V2LON:
                    *P1:10,"Slot",*P10:10,"Time ",*P16:10," U/R No.":
                    *P25:10,"Name           ":
                    *P41:10,"Comments                                ";
          MOVE      TEN1,CVERT          * Initialise next free line
          MOVE      ONE,CCOL            * Initialise next free column
.
.         Display all slots
.
DSCM0100  PACK      KEY28,VSITE,VCLIN,VDATE,VTIME,SP10
          CALL      RDSBOKA1            * Position at start of clinic
.
.         Get the next record from the booking file and validate it
.
DSCM1000  CALL      RDKBOKA1            * Read next booking record
          BRANCH    OVRCD,DSCM8000      * Finished session
.
DSCM2000  PACK      SESSION,OBASITE,OBACLIN,OBADATE,OBASTRT
.
          MATCH     SESSION,VSESS       * Check that we still have same session
          GOTO      DSCM8000 IF NOT EQUAL
.
.         We have a valid record. Check if the screen is currently full
.
          COMPARE   TWENTY4,CVERT       * Are we at the bottom of screen ?
          GOTO      DSCM5000 IF LESS    * No. Display record
.
.         The screen is full. Ask what we should do.
.
DSCM3000  KEYIN     *P1:24,"(",*V2LON,"E",*HOFF,")xit, (":
                               *V2LON,"C",*HOFF,")ontinue, (":
                               *V2LON,"S",*HOFF,")earch more, (":
                               *V2LON,"R",*HOFF,")edisplay ? ":
                               *V2LON,*EL,ANS;
          BRANCH    ABORT,DSCM9999      * Input aborted
.
          RESET     ANS                 * Was anything input ?
          GOTO      DSCM3100 IF EOS     * No. Wrong.
.
          TYPE      ANS                 * Make sure the answer wasn't numeric
          GOTO      DSCM3100 IF EQUAL   * Numeric. Wrong.
.
          REP       "E1e1C2c2S3s3R4r4",ANS
          TYPE      ANS                 * A valid answer will now be numeric
          GOTO      DSCM3200 IF EQUAL   * Numeric. Valid input.
.
DSCM3100  BEEP                          * Tell user they made a mistake
          GOTO      DSCM3000            * Rekey in the answer
.
.         Valid answer. Check what we are supposed to do
.
DSCM3200  MOVE      ANS,EXIT            * Move answer to a form field
          BRANCH    EXIT,DSCM9000:      * Exit
                         DSCM8100:      * Continue
                         DSCM4000:      * Search More
                         DSCM0000       * Redisplay
.
.         Continue onto next screen
.
DSCM4000  MOVE      TEN1,CVERT          * Initialise next free line
          MOVE      ONE,CCOL            * Initialise next free column
          DISPLAY   *PCCOL:CVERT,*EF;   * Clear the screen
.
.         Get the data for this record
.
DSCM5000  MOVE      SP30,DSPSNAM        * Initialise names to spaces
          MOVE      SP8,PURNO           * Initialise U/R to spaces
.
.         Check if there is anyone in this slot
.
          MATCH     ZEROVISN,OBAOUTNO   * Has the slot an outpatient number ?
          GOTO      DSCM6000 IF EQUAL   * No. Display these details
.
          MOVE      SP3,OBAPRTY         * Initialise priority code
          MOVE      OBAOUTNO,KEY8       * Set up key for bokb file
          CALL      RDBOKB1             * Read in priority code
.
.         Get the master file details for this booking
.
          MATCH     ZEROUR,OBAURNO      * Do we have a U/R number ?
          GOTO      DSCM5100 IF EQUAL   * No. Get data from pre-adm file
.
          MOVE      OBAURNO,KEY8        * Set up key for master file
          CALL      RDMAST1             * Read in the PMI record
          BRANCH    OVRCD,DSCM5200      * No master file details
          GOTO      DSCM5300            * Display details
.
DSCM5100  MOVE      OBAOUTNO,KEY8       * Set up key for Pre-adm file
          CALL      RDPRAM1             * Read in the Pre-adm record
          BRANCH    OVRCD,DSCM5200      * No master file details
          MOVE      ZEROUR,PURNO        * Restore 0 U/R
          GOTO      DSCM5300            * Display details
.
.         No master file details found
.
DSCM5200  MOVE      "* PMI Missing *",DSPSNAM
          MOVE      ZEROUR,PURNO        * No U/R number
          GOTO      DSCM6000            * Display details
.
.         Master files read in. Compress the patients name, and display
.
DSCM5300  CALL      FRMN0000            * Compress patients name into DIM40
          MOVE      DIM40,DSPSNAM       * Shorten the patients name
.
.         Set up slot indicator
.
DSCM6000  MOVE      SP1,ANS
          LOAD      ANS,OBASTAT,SP1,SP1,ANSE,ASK,HASH
.
. ------- Read the comments file ---------
.
          PACK      DIM40COM,SP30,SP10       * Clear display variable for cmnts
          OPEN      VISMDTA1,"vismdtaf"      * Open the comments files
          OPEN      VISMTXA1,"vismtxaf"
          MOVE      OBAOUTNO,KEY8            * Set key up
          CALL      VSCMTX00
          CLOSE     VISMDTA1                 * Close the patient comments files
          CLOSE     VISMTXA1
          MOVE      VSMTCMNT,DIM40COM        * Set up display line
.
.         Display this record
.
DSCM7000  DISPLAY   *PCCOL:CVERT,OBASLOT,ANS,SP1,OBAVISIT,SP1,OBATIME:
                    SP1,PURNO,SP1,DSPSNAM,SP1,DIM40COM;
.
.         Move to the next available position
.
          ADD       ONE,CVERT           * Go to the next line
          GOTO      DSCM1000            * Get the next record
.
.   ----  We have finished the loop over the booking file ----
.
DSCM8000  COMPARE   TEN1,CVERT          * Check if anything was input
          GOTO      DSCM9100 IF EQUAL   * No. Report error.
.
DSCM8100  MOVE      ZERO,EXIT           * Display finished successfully
          GOTO      DSCM9999            * Return
.
.         Exit was selected for a session that went over two screens
.
DSCM9000  MOVE      ONE,EXIT            * Indicator saying don't continue
          GOTO      DSCM9999            * Return
.
.         Nothing was displayed
.
DSCM9100  DISPLAY   *P1:24,*EL,*B,*V2LON,"** No Data Found **    ";
          CALL      HITENTER
          MOVE      ONE,EXIT            * Indicator saying don't continue
.
DSCM9999  RETURN
+
.-----------------------------------------------------------------------
. Retrieve the 1st comment text line of the latest active visit
. comment details
.-----------------------------------------------------------------------
VSCMTX00  MOVE      SP70,VSMTCMNT
          PACK      KEY17,KEY8,VSCMTTYP,Z70
          CALL      RSVSMDT1
VSCMTX10  CALL      RPVSMDT1
          BRANCH    OVRCD,VSCMTX99
.
          MATCH     KEY8,VSMDVISN
          GOTO      VSCMTX99 IF NOT EQUAL
.
          MATCH     VSCMTTYP,VSMDTYPE
          GOTO      VSCMTX99 IF NOT EQUAL
.
          MATCH     "1",VSMDDELT          * is comment deleted
          GOTO      VSCMTX10 IF EQUAL
.
. Retrieve the 1st comment text line details
.
          PACK      KEY20,VSMDVISN,VSMDTYPE,VSMDNOTE,SP70
          CALL      RSVSMTX1
          CALL      RKVSMTX1
          BRANCH    OVRCD,VSCMTX10
.
          MATCH     VSMDVISN,VSMTVISN
          GOTO      VSCMTX10 IF NOT EQUAL
.
          MATCH     VSMDTYPE,VSMTTYPE
          GOTO      VSCMTX10 IF NOT EQUAL
.
          MATCH     VSMDNOTE,VSMTNOTE
          GOTO      VSCMTX10 IF NOT EQUAL
.
VSCMTX99  RETURN
+
.*****************************************************************************
.* CLRM0000: Clear the menu display and keyin variables                      *
.*****************************************************************************
CLRM0000  MOVE      SP6,VCTYP           * Clear clinic type
          MOVE      SP6,VCLIN           * Clear clinic id
          MOVE      SP30,DSCCLIN        * Clear clinic id description
          MOVE      SP8,VDATE           * Clear session date
          MOVE      SP8,VTIME           * Clear session time
          MOVE      SP3,VVISIT          * Clear visit type
.
CLRM9999  RETURN
+
.*****************************************************************************
.* DMEN0000: Display menu appropriate for the current option                 *
.*                                                                           *
.* PARAMETERS : OPTION = Main Option selcted (1-17)                          *
.*              SELECT = Sub-option selected if OPTION=1                     *
.*                                                                           *
.* RETURNS    : VERTCT = Line to key in clinic type                          *
.*              VERTCL = Line to key in clinic id.                           *
.*              VERTDT = Line to key in from date                            *
.*              VERTTM = Line to key in from time                            *
.*              VERTVS = Line to key in visit type                           *
.*****************************************************************************
DMEN0000  UNPACK    VDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE             * Set up date for redisplay
.
          CALL      SMEN0000            * Standard menu
          DISPLAY   *P30:VERTCL,*V2LON,VCLIN,*P45:VERTCL,DSCCLIN:
                    *P30:VERTDT,CPCDATE:
                    *P30:VERTTM,VTIME;
DMEN9999  RETURN
+
.*****************************************************************************
.* SMEN0000: Display standard initial menu                                   *
.*                                                                           *
.* RETURNS    : VERTCL = Line to key in clinic id.                           *
.*              VERTDT = Line to key in date                                 *
.*              VERTTM = Line to key in time                                 *
.*****************************************************************************
SMEN0000  DISPLAY   *P1:3,*EF,*P1:4,"   Clinic Id.",*P28:4,":":
                              *P1:5,"   Date",*P28:5,":":
                              *P1:6,"   Time",*P28:6,":";
          MOVE      FOUR,VERTCL
          MOVE      FIVE,VERTDT
          MOVE      SIX,VERTTM
.
SMEN9999  RETURN
+
.*****************************************************************************
.* FRMN0000 : Subroutine to format patients name into DIM40                  *
.*****************************************************************************
FRMN0000  PACK      DIM40,SP20,SP20          * Use a convenient DIM40 variable
          CLEAR     DIM40
.
          MATCH     SP20,PSNAME
          GOTO      FRMN0020 IF EQUAL
          APPEND    PSNAME,DIM40
.
FRMN0010  CMATCH    SP1,DIM40
          GOTO      FRMN0015 IF NOT EQUAL
          BUMP      DIM40,-1
          GOTO      FRMN0010 IF NOT EOS
.
FRMN0015  APPEND    ",",DIM40
          APPEND    SP1,DIM40
.
FRMN0020  MATCH     SP4,PTITL
          GOTO      FRMN0040 IF EQUAL
          APPEND    PTITL,DIM40
.
FRMN0030  CMATCH    SP1,DIM40
          GOTO      FRMN0035 IF NOT EQUAL
          BUMP      DIM40,-1
          GOTO      FRMN0030 IF NOT EOS
.
FRMN0035  APPEND    SP1,DIM40
.
FRMN0040  APPEND    PGNAME,DIM40
          APPEND    SP30,DIM40
          RESET     DIM40
.
FRMN9999  RETURN
+
.*****************************************************************************
.* VWCL0000: Ask if they want to print, forward, backward or redisplay       *
.*                                                                           *
.* RETURNS    : EXIT   = 1 means Exit                                        *
.*                     = 2 means Forward to next session                     *
.*                     = 3 means Backward to previous session                *
.*                     = 4 means Print the session                           *
.*                     = 5 means Redisplay the session                       *
.*****************************************************************************
VWCL0000  KEYIN     *P1:24,"(",*V2LON,"P",*HOFF,")rint, (":
                    *V2LON,"E",*HOFF,")nd, (":
                    *V2LON,"F",*HOFF,")orward, (":
                    *V2LON,"B",*HOFF,")ackward, (":
                    *V2LON,"R",*HOFF,")e-display Session ? ",*EL,*V2LON,ANS;
          BRANCH    ABORT,VWCL9999      * Input aborted
.
          RESET     ANS                      * Was anything input ?
          GOTO      VWCL1000 IF EOS          * No.  Answer must be a E,F,B,P,R.
.
          TYPE      ANS                      * Was the answer numeric ?
          GOTO      VWCL1000 IF EQUAL        * Yes.  Answer must be a E,F,B,P,R.
.
          REP       "E1e1F2f2B3b3P4p4R5r5",ANS * Convert to numeric
          TYPE      ANS                      * Have we a numeric now ?
          GOTO      VWCL2000 IF EQUAL        * Yes.  Successful input.
.
VWCL1000  BEEP                               * Tell the user they made a mistake
          GOTO      VWCL0000                 * Ask again
.
.         Successful input
.
VWCL2000  MOVE      ANS,EXIT                 * Set the exit flag
.
VWCL9999  RETURN
+
.*****************************************************************************
.* NEXT0000: Move to the next session for the current clinic id              *
.*                                                                           *
.* PARAMETERS : VSITE  = Current Site                                        *
.*              VCLIN  = Current Clinic Id                                   *
.*              VSESS  = Current Session                                     *
.* RETURNS    : EXIT   = 0 means Next session found                          *
.*                     = 1 means No next session found                       *
.*              VDATE  = New session date                                    *
.*              VTIME  = New session start time                              *
.*****************************************************************************
NEXT0000  PACK      KEY28,VSESS,Z20          * Key for end of current session
          CALL      RDSBOKA1                 * Position at end of session
          CALL      RDKBOKA1                 * Read the next record
          BRANCH    OVRCD,NEXT9000           * No more records -> no session
.
          MATCH     OBASITE,VSITE            * Still the same site ?
          GOTO      NEXT9000 IF NOT EQUAL    * No.  No next session.
.
          MATCH     OBACLIN,VCLIN            * Still the same clinic id ?
          GOTO      NEXT9000 IF NOT EQUAL    * No.  No next session.
.
.         We have found the next session
.
          MOVE      OBADATE,VDATE            * Save the new session date
          MOVE      OBASTRT,VTIME            * Save the new session time
          MOVE      ZERO,EXIT                * Set success exit flag
          GOTO      NEXT9999                 * Return
.
.         No next session found
.
NEXT9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** No Next Session for this Clinic Id **    ";
          CALL      HITENTER
          MOVE      ONE,EXIT                 * Set error exit flag
.
NEXT9999  RETURN
+
.*****************************************************************************
.* PREV0000: Move to the prev session for the current clinic id              *
.*                                                                           *
.* PARAMETERS : VSITE  = Current Site                                        *
.*              VCLIN  = Current Clinic Id                                   *
.*              VSESS  = Current Session                                     *
.* RETURNS    : EXIT   = 0 means Prev session found                          *
.*                     = 1 means No prev session found                       *
.*              VDATE  = New session date                                    *
.*              VTIME  = New session start time                              *
.*****************************************************************************
PREV0000  PACK      KEY28,VSESS,SP20         * Key for start of current session
          CALL      RDSBOKA1                 * Position at start of session
          CALL      RDPBOKA1                 * Read the previous record
          BRANCH    OVRCD,PREV9000           * No more records -> no session
.
          MATCH     OBASITE,VSITE            * Still the same site ?
          GOTO      PREV9000 IF NOT EQUAL    * No.  No previous session.
.
          MATCH     OBACLIN,VCLIN            * Still the same clinic id ?
          GOTO      PREV9000 IF NOT EQUAL    * No.  No previous session.
.
.         We have found the previous session
.
          MOVE      OBADATE,VDATE            * Save the new session date
          MOVE      OBASTRT,VTIME            * Save the new session time
          MOVE      ZERO,EXIT                * Set success exit flag
          GOTO      PREV9999                 * Return
.
.         No previous session found
.
PREV9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** No Previous Session for this Clinic Id **    ";
          CALL      HITENTER
          MOVE      ONE,EXIT                 * Set error exit flag
.
PREV9999  RETURN
+
.*****************************************************************************
.* PRNV0000: Print the current session in short summary format               *
.*****************************************************************************
PRNV0000  DISPLAY   *P1:24,*EL,*P29:24,*V2LON:
                    "*** Printing Session ***",*W,*P20:24,*EL,*HOFF:
                    "Slot Number : ";
.
          MOVE      ZERO,CHECK             * Initialise number of slots
          MOVE      ZERO,TOTBOOK           * Initialise total no. of bookings
          MOVE      ZERO,TOTATTD           * Initialise total no. of attendances
          MOVE      ZERO,CPAGENO           * Initialise page number
          CALL      PRNH0000               * Print the page heading
.
.         Loop over the current session
.
          PACK      KEY28,VSESS,SP20       * Key for start of current session
          CALL      RDSBOKA1               * Position at start of session
PRNV1000  CALL      RDKBOKA1               * Read the next record
          BRANCH    OVRCD,PRNV9000         * Finished session
.
          PACK      SESSION,OBASITE,OBACLIN,OBADATE,OBASTRT
.
          MATCH     SESSION,VSESS          * Check if still the same session
          GOTO      PRNV9000 IF NOT EQUAL  * No.  Finished.
.
          DISPLAY   *P34:24,*V2LON,OBASLOT;
.
.         Check if the page is full
.
          COMPARE   "55",CLNO              * Current page full ?
          CALL      PRNH0000 IF NOT LESS   * Yes.  Start a new page
.
.         Get the data for this record
.
          PACK      DIM40,SP30,SP10        * Initialise names to spaces
          MOVE      SP8,PURNO              * Initialise U/R to spaces
.
.         Check if there is anyone in this slot
.
          MATCH     ZEROVISN,OBAOUTNO      * Has the slot an outpatient no. ?
          GOTO      PRNV5000 IF EQUAL      * No.  Display these details
.
.         Get the master file details for this booking
.
          MATCH     ZEROUR,OBAURNO         * Do we have a U/R number ?
          GOTO      PRNV2000 IF EQUAL      * No.  Get data from pre-adm file
.
          MOVE      OBAURNO,KEY8           * Set up key for master file
          CALL      RDMAST1                * Read in the PMI record
          BRANCH    OVRCD,PRNV3000         * No master file details
          GOTO      PRNV4000               * Display details
.
PRNV2000  MOVE      OBAOUTNO,KEY8          * Set up key for Pre-adm file
          CALL      RDPRAM1                * Read in the Pre-adm record
          BRANCH    OVRCD,PRNV3000         * No master file details
          MOVE      ZEROUR,PURNO           * Restore 0 U/R
          GOTO      PRNV4000               * Display details
.
.         No master file details found
.
PRNV3000  MOVE      "** PMI Details Missing **",DIM40
          MOVE      ZEROUR,PURNO           * No U/R Number
          GOTO      PRNV5000               * Display details
.
.         Master files read in.  Compress the patients name, and display.
.
PRNV4000  CALL      FRMN0000               * Compress patients name into DIM40
.
.         Set up slot indicator
.
PRNV5000  MOVE      SP1,ANS
          LOAD      ANS,OBASTAT,SP1,SP1,ANSE,ASK,HASH
.
.         Print this record
.
          PRINT     *1,"| ",OBASLOT,SP1,ANS,*9,"|  ",OBAVISIT:
                    *16,"| ",OBATIME,*24,"| ",PURNO:
                    *35,"| ",DIM40,*80,"|"
.
          ADD       ONE,CLNO               * Increment the line count
          ADD       ONE,CHECK              * Increment no. of slots printed
.
          BRANCH    OBASTAT,PRNV6000,PRNV1000,PRNV1000,PRNV6100
          GOTO      PRNV1000               * Get the next record
.
PRNV6000  ADD       ONE,TOTBOOK            * increment Total Bookings counter
          GOTO      PRNV1000
.
PRNV6100  ADD       ONE,TOTATTD            * increment Total Attendances counter
          GOTO      PRNV1000
.
.         End of Session
.
PRNV9000  CALL      UND80                    * Print a line break
          PRINT     *N,"Number of Slots in Session       = ",CHECK:
                    *N,"Number of Bookings in Session    = ",TOTBOOK:
                    *N,"Number of Attendances in Session = ",TOTATTD:
                    *N,*N,"***  End of Enquiry  ***"
.
          DISPLAY   *P1:24,*EL,*P23:24,*V2LON:
                    "*** Enquiry Generation Completed ***",*W1;
.
PRNV9999  RETURN
+
.*****************************************************************************
.* PRNH0000: Print the current session heading (for PRNV0000)                *
.*****************************************************************************
PRNH0000  ADD       ONE,CPAGENO             * Increment the page number
          COMPARE   ONE,CPAGENO             * 1st page ?
          CALL      UND80 IF NOT EQUAL      * No.  Print end of previous page
.
.         Get the details of the session
.
          PACK      CFNAME,UID,FILCTYA1     * Name of the clinic type file
          OPEN      OUTCTYA1,CFNAME         * Open the clinic type file
.
          MOVE      "** Unknown Clinic Type **     ",OCTDESC
.
          PACK      KEY12,VSITE,VCTYP       * Key for clinic type file
          CALL      RDCTYA1                 * Read the clinic type file
.
          CLOSE     OUTCTYA1                * Close the clinic type file
.
.         Get the clinic id description
.
          PACK      KEY20,VSITE,VCLIN,VDATE
          CALL      RDCLIA1
          IF        OVRCD = 1
            CALL      RDPCLIA1
            IF        OVRCD = 0
              MATCH     VSITE,OCASITE
              IF        !@EQUAL
                MOVE      ONE,OVRCD
              ELSE
                MATCH     VCLIN,OCACLIN
                IF        !@EQUAL
                  MOVE      ONE,OVRCD
                ENDIF
              ENDIF
            ENDIF
          ENDIF
          BRANCH    OVRCD,PRNH1000          * Clinic record not found
.
.         We have a valid clinic record. Now get the description.
.
          CALL      CIDSC000                * Get the clinic description
          GOTO      PRNH2000
.
.         Unknown clinic id
.
PRNH1000  MOVE      "** Unknown Clinic Id **       ",OCADESC
.
.         Get the day description
.
PRNH2000  MOVE      SP10,DDAY
          LOAD      DDAY,WDAY,DMON,DTUE,DWED,DTHU,DFRI,DSAT,DSUN
.
          UNPACK    VDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CLOCK     TIME,CTIMEIS            * Get the printing time
          PRINT     *F,PRGID,*20,CNAME,*66,"DATE : ",CDATE:
                    *N,VERSION,*20,PRGNAM,*66,"TIME : ",CTIMEIS:
                    *N,*66,"PAGE : ",*78,CPAGENO:
                    *N,*20,"Clinic Type : ",VCTYP,*42,OCTDESC:
                    *N,*20,"Clinic Id   : ",VCLIN,*42,OCADESC:
                    *N,*20,"Clinic Date : ",CPCDATE,SP5,DDAY," @ ",VTIME:
                    *N,*N,MASCMNTS,*60,DSESST
          MOVE      EIGHT,CLNO              * Initialise line count
.
          CALL      UND80                   * Print a line break
          PRINT     *1,"| Slot",*9,"| Type",*16,"| Time":
                    *24,"|  U/R No.",*35,"| Name",*80,"|"
          ADD       ONE,CLNO                * Increment line count
          CALL      UND80                   * Print a line break
.
PRNH9999  RETURN
+
.*****************************************************************************
GETSVAR   RETURN                       * Dummy subroutine for surname searchs
+
.
.=============================================================================
.
          INC       STD001IO
.
          INC       OUTDSCLN
          INC       OUTDSMAS
.
          INC       OUTBOAIO/INC       * Bookings file A
          INC       OUTBB1IO/INC       * Bookings file B
          INC       OUTCLIIO/INC       * Clinic Ids
          INC       OUTCTYIO/INC       * Clinic Types
          INC       OUTMA1IO/INC       * Session Master file
          INC       OUTSESIO/INC       * Clinic Open Sessions file
          INC       OUTSITIO/INC       * Site file
          INC       OUTPREIO/INC       * Outpatient Pre-attendance file
.
          INC       VISMDTIO/INC       * Comments files
          INC       VISMTXIO/INC
          INC       PATCODIO/INC       * Codes file
          INC       PATDO1IO/INC       * Doctors file
          INC       PATMA1IO/INC       * PMI file
          INC       PATPR1IO/INC       * Pre-attendance PMI file
+
