.------------------------------------------------------------------------------
. Program       : EMRWEB08
.
. Function      : XML Remote Scripting Code Validation Service
.
. Modifications : 
.------------------------------------------------------------------------------
. V12.00.01 14/05/2025  J.Tan          TSK 0955096
.           Added alpanumeric visit number generation
. V11.05.04 01/05/2025  Nikitha B      TSK 0956437
.           Modified error message at DOSEEN92 and DDTSN092.
. V11.05.03 14.02.2025  Ebon Clements  TSK 0951873
.           Added EMVIS149 - Location note to SPEMV000
. V11.05.02 25.11.2024  DA Sarkies     TSK 0937594
.           Added section to remote script to display name
. V11.05.01 20.11.2024  DA Sarkies     TSK 0937594
.           Added remote script to submit FDV and write to audit file
. V11.04.11 25.11.2024  DA Sarkies     TSK 0937594
.           Added section to remote script to display name
. V11.04.10 20.11.2024  DA Sarkies     TSK 0937594
.           Added remote script to submit FDV and write to audit file
. V11.04.09 13/11/2024  Alina Bhari    TSK 0952510
.           Fixed the issue with linking visits from different hospital
. V11.04.08 12/11/2024  Alina Bhari    TSK 0952510
.           Fixed the issue with linking visits from different hospital
.           - MHOSFLAG,VALVIS60,SAVVHOSP                                    
. V11.04.07 11/11/2024  Ebon Clements  TSK 0951979
.           Added validation of a patients current location - VALCLC00
. V11.04.06 15/10/2024  Don Nguyen     TSK 0945553
.           Also return the search keyword ("srchKey") as the last value of the
.           Diagnosis search results (SELEDS00).
. V11.04.05 06/05/2024  Ebon Clements  TSK 0926090
.           Added trap to lock of clinical notes to prevent conflict with
.           the update remote script - LOCLIN00
. V11.04.04 04/03/2024 PJ Le Febour    TSK 0929044db
.           VALOEW00 populate WBOCCUID,WBOCUUID
. V11.04.03 08/02/2024 Thanh T         TSK 0903618
.           Changed ELCCT00 and added CATGBS00 to fixd issue with incorrect
.           contract list  
. V11.04.02 19/01/2024 Thanh T         TSK 0903618
.           Recompiled for ALLCCTFD changes
. V11.04.01 27/11/2023 Thanh T         TSK 0903618
.           Recompiled for ALLCCTFD changes
. V11.03.10 17/10/2023  Ebon Clements  TSK 0888745
.           Populate EMRHISFD created by fields before writes
.           WRTHIS00 WRTHS00 HISWRT00 WDHIST00
. V11.03.09 09/10/2023  Ebon Clements  TSK 0938188
.           Fixed I * D on emrdcmaf writes - Added traps
. V11.03.08 20/09/2023  Ebon Clements  TSK 0932530
.           duplicated amended code from CHKEXU in CHKEXP search via surname 
. V11.03.07 18/09/2023  PJ Le Febour   TSK 0932530
.           duplicated amended code from CHKEXU in CHKEXS search via surname 
. V11.03.06 05/09/2023  PJ Le Febour   TSK 0932530
.           Added EMCNPCTY - expected patient contact types when triaging
.                 EMCNEMST - expected patient from multiple emergency sites
. V11.03.05 05/09/2023  Ebon Clements  TSK 0888745
.           Added clear of EMRHISFD created/update by fields
.           WRTHIS00, WRTHS200, HISWRT00 and WDHIST00
. V11.03.04 20.03.2023  DA Sarkies      TSK 0909393
.           Increased size of vald code
. V11.03.03 12/01/2023  Thanh T         TSK 0921737
.           Changed SETBRQ00 to update PMBRDIAG for Default Code Only option  
. V11.03.02 14/12/2022  Peter Vela          0927771
.           Move one to WBEFOECC in VALOEW00 for linking OECW to inpatient
.           visit
. V11.03.01 08/12/2022  Peter Vela          0927404
.           Changed SVRCDATA to DIM 1000 to preserve OECW description
.           values when linking free format OECWs to visits
. V11.02.02 20/07/2022  Peter Vela          0918312ii
.           Added Emergency OEC check in VALOEW00
. V11.02.01 21/04/2022  J.Tan           TSK 0916690
.           Mod to update delete flag for AECC class (DAEC0000)
. V11.01.04 18/08/2021  Thanh T         TSK 0873184
.           Changed HISWRT20 for updating the other doctor date/time  
. V11.01.03 05/08/2021  Thanh T         TSK 0873184
.           Added DODHIS00, DOCHIS00 for clearing the doctor history    
. V11.01.02 04/08/2021  Thanh T         TSK 0873184
.           Added MAIN7500 for delete initial assessor details 
. V11.01.01 01/06/2021  Thanh T         TSK 0873184
.           Added MAIN7300 and MAIN7400 for delete and update other doctor
.           seen details 
. V11.00.04 23/09/2020  Peter Vela       TSK 0895969
.           Recompiled for WEBSEDFD
. V11.00.03 22/09/2020  Peter Vela       TSK 0895969
.           Recompiled for WEBERCFD
. V11.00.02 16/09/2020  Ebon Clements    TSK 0867112
.           Added report 62 add additional diagnosis 
. V11.00.01 31/08/2020  Peter Vela       TSK 0895969
.           Added WebServices OECW
. V10.14.07 02/09/2019  Peter Vela       TSK 0875296
.           Added Emergency OEC functionality - Remote Script for 
.           enabling Emergency OEC
. V10.14.06 17/07/2019  Ebon Clements    TSK 0877986
.           Added 20 zero test to PTCNNSSI using EDWARD
. V10.14.05 15/07/2019  Peter Vela       TSK 0875925
.           Added SP70 validation in LOCSEL00
. V10.14.04 31/05/2019  Thanh T.         TSK 0870996
.           Changed DDHIST00/DCHIST00/NCHIST00 to setup the changed values when
.           the doctor/nurse were deleted.  
. V10.14.03 27/02/2019  Don Nguyen       TSK 0821139
.           Added Room Type filtering for Locations selection list (LOCSEL00)
. V10.14.02 13/02/2019  Ebon Clements    TSK 0862664
.           Added report 60 check if diagnosis is Meth related - METHD000
. V10.14.01 06/02/2019  Ebon Clements    TSK 0865961
.           Added DOCTCODE to check if doctor has been updated - VALADC00
. V10.13.05 28/11/2018  Ebon Clements    TSK 0865961
.           Added EDWARD visit delete doctor write - WEDD0000
. V10.13.04 28/11/2018  Ebon Clements    TSK 0865961
.           Added EDWARD visit alteration write to all remote scripts - WEDV0000
. V10.13.03 08/11/2018  Tracey Nguyen    TSK 0865172
.           Added trap to write to emr history file (emrhisaf) and
.           added SP70 when packing into KEY22 - WDHIST80, WRTHS280, HISWRT75
. V10.13.02 08/11/2018  Ebon Clements    TSK 0865959
.           Added EDWARD visit alteration writes to EMRVIS00
. V10.13.01 02/11/2018  Thanh T          TSK 0865842
.           Changed UPDEMR00 to correct the setting of data for VALDTYPE 7 
.           and 8
. V10.12.02 13/06/2018  Ebon Clements    TSK 0855359
.           Added report 59 MH practitioner update - MHPRA000
. V10.12.01 16/05/2018  Peter Vela       TSK 0850174
.           Added fields to UPDEMR00 
. V10.11.06 14/11/2017  Ania P           TSK 0846843
.           Changed processing rules in VALCER00
. V10.11.05 26/10/2017  Peter Vela       TSK 0846128
.           Added trap around WREMHIS1 in WRTHIS80
. V10.11.04 31/08/2017  Ebon Clements    TSK 0299294
.           Allow triage date/time to be equal to arrival date/time - CHGDT100
. V10.11.03 02/08/2017  Nicole Torrisi   TSK 0842735
.           Changed all checks for expected patients to check if the expected
.           patient has been removed (EMEXDELT)
. V10.11.02 26/07/2017  Tracey Nguyen    TSK 0841640
.           Rolled back changes made in V10.11.02
. V10.11.01 20/07/2017  Tracey Nguyen    TSK 0841640
.           Added "UNK" validation in VALXDC00 to display red if number of 
.           standard drinks in a typical day is unknown
.------------------------------------------------------------------------------
. V10.10.04 19/05/2017  Peter Vela       TSK 0833345
.           Changed VALXDC00 to display red if alcohol fields are empty
. V10.10.03 17/05/2017  Peter Vela       TSK 0834707
.           Added remote script to validate empty EMVIDOCT
. V10.10.02 08/03/2017  Peter Vela       TSK 0833345
.           Added remote script to update emrvisaf.EMVIUC29 Research
.           Added remote script to update emrvisaf.EMVIUC27 Alcohol Consumed
.           Added remote script to validate Alcohol Data in visxdcaf
. V10.10.01 03/03/2017  J.Tan            TSK 0829089
.           Changed index to oprthiaf file
. V10.09.03 23/02/2017  Peter Vela       TSK 0829089
.           Added remote script for Prosthetics Verified
. V10.09.02 27/01/2017  Steve Armstrong  TSK 0830055
.           Mods to VALAL000 to ignore eReferral record types in ibavaraf
. V10.09.01 28/11/2016  Peter Vela      0814744
.           Recompiled for EMREXPFD
.------------------------------------------------------------------------------
. V10.08.10 16/11/2016  Ken Bell        0287747
.           Modify logic in VALUDF00 to handle read locks and use GOTO VALUDF50 
. V10.08.09 04/11/2016  Ken Bell        0287747
.           Added remote Script to Update a User Visit field PMVXUDF9,10,11..15
. V10.08.08 20/10/2016  Peter Vela      0816538
.           Added remote script for certificates
. V10.08.07 19/10/2016  Peter Vela      0827811
.           Recompiled for CLPMSOEC
. V10.08.06 23/08/2016  Peter McMullen  0823848
.           Add lower case login search to XMLRED00
. V10.08.05 17/08/2016  Peter Vela     TSK 0824377
.           Added username to LOCPRD00
. V10.08.04 27/05/2016  Jill Parkinson TSK 0814124  
.           Changed emrmtxaf to use emic9cod instead of emicvemd
. V10.08.03 11/05/2016  Ebon Clements    TSK 0817682
.           Added UPDDCC update type to emr history audit - HISWRT00
.           Other doctor with current date/time seen
. V10.08.02 21/04/2016  Peter Vela       TSK 0294177
.           Added remote script to return Category ta from patfn1af
.           Added remote script to return adm date and dis date
. V10.08.01 05/04/2016  Peter Vela       TSK 0809144
.           Added remote script to check for existing alternate visit id
. V10.07.07 29/02/2016  Peter Vela       TSK 0809143
.           Added remote script to add/update ibaalvaf
. V10.07.06 16/02/2015  Ania P           CAR 813106
.           Added variables EMVIS167-171 to stop errors on custom NZ screen
. V10.07.05 16/12/2015  Peter Vela       TSK 0808202
.           Fixed PMRC variables assignments in VALOEC80
. V10.07.04 16/12/2015  Ebon Clements    TSK 0808260
.           Fixed GSDOCT00 GOTO statements so it always calls XMLEND
. V10.07.03 15/12/2015  Peter Vela       CAR 0808202
.           Added pmsercaf to VALOEC00
. V10.07.02 25/11/2015  Peter Vela       CAR 304557
.           Added validation for Link OEC
. V10.07.01 15/10/2015  Peter Vela       CAR 310870
.           Added remote script for closed referral
. V10.06.16 18/09/2015  Ebon Clements    CAR 320155
.           Recompiled for EMRDRCHR - Fixed presenting complaint update - KEY22
. V10.06.15 25/08/2015  Peter Vela       CAR 319229
.           Added select options for contract codes
. V10.06.14 17/08/2015  Peter Vela       CAR 320322
.           Added wahealth validation for Treating Nure Date/Time in DATEVL00
. V10.06.13 17/08/2015  Peter Vela       CAR 320723
.           Added remote script for Warning and redirect to coding screen on
.           undischarge
. V10.06.12 14/08/2015  Peter Vela       CAR 320322
.           Added wahealth validation for Treating Nure Date/Time in
.           DATEVL10
. V10.06.11 07/08/2015  Peter Vela       CAR 320416
.           Added Approved already validation in APBKRQ00
.           Added Booked/Scheduled already validation VALBRQ00
. V10.06.10 29/07/2015  Don Nguyen       CAR 297670
.           Added REDHIS63 to update 'obspcoaf' delete status (OBPCMDEL) 
.           regardless if there's no code setup for Category 'wo' with indc1=D.
. V10.06.09 28/07/2015  Peter Vela       CAR 319801
.           Added remote script for duplicate clinic warning
. V10.06.08 22/07/2015  Don Nguyen       CAR 297670
.           Modified REDHIS60 to update 'obspcoaf' with reason for delete.
.           Added LDOCHI00 - get last ALDOC record date/time.
. V10.06.07 29/05/2015  Peter Vela       CAR 306430
.           Increase number of records displayed in SELEDS00 from 300 to 900
. V10.06.06 27/05/2015  J.Tan            CAR 244314
.           Mods Checking Dr Billing Complete for 'ALDOC' update type
. V10.06.05 01/05/2015  Peter Vela       CAR 312771
.           Added remote script for Theatre Request Approvals
. V10.06.04 01/05/2015  Don Nguyen       CAR 314586
.           Modified LOCDIA00 to clear EMDCLUID if it's the same as our user id
. V10.06.03 27/04/2015  Peter Vela       CAR 314567
.           Added Other Doctor to HISWRT00
. V10.06.02 30/03/2015  J.Tan            CAR 244314
.           Added remote script for emr Service doctor for a procedure date/time
. V10.06.01 12/03/2015  Steve Armstrong  CAR 314108
.           Removed definition of PTCGDATE as PATCGPFD is no longer
.           in use.
.           12/03/2015  Ebon Clements    CAR 303097
.           Added SETNAT00 to update nature of injury and body
.           region code from diagnosis add/upddate - PRMDIA00
.           27/02/2015  Peter Vela       CAR 282090
.           Added remote script for expected emr patients match urnumber
.           Added remote script for expected emr patients match surname
.           Added remote script for Initial Assessor wahealth
.           Added remote script for Treating Doctor Date / Time
.           Added remote script for Treating Nurse Date / Time
.------------------------------------------------------------------------------
. V10.05.04 14/01/2015  Ebon Clements    CAR 304779
.           Added additional fields to remote emr update - EMRVIS00
. V10.05.03 20/10/2014  Peter Vela       CAR 298567
.           Added remote script validation for emr discharged patients
. V10.05.02 03/10/2014  Ebon Clements  CAR 268970
.           Removed OUTCLIFD and open as it was not used
. V10.05.01 11/08/2014  Don Nguyen       CAR 297774
.           Recompiled for changes to PMSBRQFD/IO
. V10.04.03 11/02/2014  Ebon Clements    CAR 294181
.           2014 VEMD changes
. V10.04.02 31/12/2013  Don Nguyen       CAR 294371
.           Recompiled for changes to EMREXPFD and EMREXPIO
. V10.04.01 18/12/2013  Don Nguyen       CAR 256198
.           Fixed NURHIS00 to work the same as REDHIS00.
.           Corrected wording of error messages for DOSEEN93 and DDTSN093.
. V10.03.13 18/11/2013  Don Nguyen       CAR 293848
.           Added REASONHO for WRTHIS00
. V10.03.12 03/10/2013  Ania P           CAR 291841
.           Fixed Audit History in DCHIST00 (UPDFIELD value and EMCHCVAL)
. V10.03.11 10/09/2013  Steve Armstrong  CAR 291089
.           Recompiled for changes to PMSQVIFD.
. V10.03.10 18/07/2013  Steve Armstrong  CAR 268961
.           Recompiled for changes to PMSQVIFD.
. V10.03.09 07/06/2013  Don Nguyen     CAR 286273
.           Modified ADDCOD00 to get get WBSEUID before add.
.           Also added cgi var EMVCD031 for EMVCEFLG.
. V10.03.08 15/05/2013  Peter Vela     CAR 284594
.           Changed update type to 12 @ DDHIST00
. V10.03.07 08/05/2013  Patrick Adair  CAR 269338
.           Check Max Number of Patients is not exceeded for a location
. V10.03.06 28/03/2013  Peter Vela     CAR 280141
.           Added emergency site to CHKVIS00 
. V10.03.05 16/10/2012  Ebon Clementsw CAR 266929
.           Added ed locations for a site selection list
. V10.03.04 19/09/2012  Don Nguyen     CAR 270231
.           Updated error message for DOSEEN92 and DDTSN092
. V10.03.03 21/06/2012  Peter Vela     CAR 264245
.           Added Remote Script to add first seen doctor, date and time
. V10.03.02 25/05/2012  Ebon Clements  CAR 263565
.           Increase number of records displayed in SELEDS00
. V10.03.01 05/12/2011  Ebon Clements     CAR 255301
.           Added check for ED visit overlap warning - OVERLP00
. V10.02.03 26/09/2011  Steve Armstrong   CAR 249584
.           Added read of pmsvx1af record prior to calls to DGCLICEC.
.           Recompiled for changes to DGCLICEC.
. V10.02.02 20/07/2011  Peter Vela     CAR 242439
.           Added Remote Script for Management Notes WAHealth
. V10.02.01 28/03/2011  Ebon Clements  CAR 239311
.           Recompiled for EMRDCMTX - Save free format diagnosis
. V10.01.03 01/03/2011  Ebon Clements  CAR 223822
.           Added EMDCLUID and EMDCSPAR to emr free text diagnosis
. V10.01.02 28/02/2011  Ebon Clements  CAR 235686
.           Added EMCNLDIA test when saving free format diagnosis
. V10.01.01 13/01/2011 Jill Parkinson    CAR 233088
.           Added pmsvx1af
. V10.00.10 28/09/2010 Ebon Clements     CAR 230978
.           Added update first seen by MH practitioner functionality to DOSEEN00
. V10.00.09 27/09/2010 Peter Vela        CAR 230816
.           Increase number of records displayed in SELEDS00
. V10.00.08 17/09/2010 Peter Vela        CAR 207227
.           Added report 25 - Remote Script for MAGRAN
. V10.00.07 09/09/2010 Peter Vela        CAR 216620
.           Added report 24 - Remote Script functionality for EMR Diagnosis
. V10.00.06 09/08/2010 Peter Vela        CAR 206701
.           Added report 23 - Check if emrvcd record exists
. V10.00.05 05/08/2010 Ebon Clements     CAR 220126
.           Added report 22 - Update pre adm/bed request admitting doctor
. V10.00.04 09/06/2010 Ebon Clements     CAR 218982
.           Added data integrity audit functionality
. V10.00.03 07/05/2010  Peter Vela    CAR 220127
.           Added new valdtype to UPDEMR00
. V10.00.02 16/04/2010  Ebon Clements CAR 218659
.           Pack date cgi vars EMVIS071 to EMVIS080 with SP70 in SPEMV000
. V10.00.01 18/03/2010  Steve Armstrong  CAR 135505
.           Added HL7TRGID & HL7INCLD setting for all broadcast messages
.------------------------------------------------------------------------------
. V9.12.04  23/02/2010  Peter Vela    CAR 216692
.           Only display a Diagnosis in the Search results once.
. V9.12.03  19/01/2010  Ebon Clements CAR 213775
.           Fixed write of history record if key already existed - WRTHIS80
. V9.12.02  20/11/2009  Ebon Clements CAR 210325
.           Added EMRVIS00 - Remote script to update emrvisaf
. V9.12.01  02/06/2009  Ebon Clements CAR 197930
.           Added report 20 UPDEMR00 to update single fields in emrvisaf
. V9.11.01  29/10/2008  Jill Habasque CAR 181662
.           Added remove of trailing spaces in error at NUSEEN80
. V9.10.02  29/09/2008  Peter Vela    CAR 156875
.           Added date and time validation in NUSEEN00
.           Added validation in DATEVL00 for nurse handover history emrhisaf.
.           Added supervisor validations in NUSEEN00 and DATEVL00 
. V9.10.01  10/06/2008  Ebon Clements CAR 168256
.           Fixed udpate of first doctor seen date time when doctor allocated
.           at triage - FXHIST00. Fixed deletion of doctor when doctor allocate
.           at triage - REDHIS00
. V9.09.02  12/11/2007  Peter Vela    CAR 151199
.           Added new Emergency Cancellation status
. V9.09.01  20/09/2007  Ebon Clements CAR 143104
.           Mods to use departure date not current date if discharged VALCOD00
. V9.08.01  31/05/2007  Ebon Clements CAR 141903
.           Added inactive test to diagnosis search SELEDS00
. V9.07.01  20/07/2006  Peter Vela    CAR 112999
.           Added validation for Active/Inactive Emr Location EMRLOC00
. V9.05.01  09/03/2006  Ebon Clements CAR 78533
.           Mods for PATCODTM - Hospital specific category codes
. V9.05.B01 29/12/2005  Steve Armstrong    CAR 88829
.           Recompiled for changes to DGCLICEC (for HL7 messages).
.           Added read on PMI details before sending broadcast messages.
.------------------------------------------------------------------------------
. V9.04.17 02/11/2005  Ebon Clements CAR 81397
.                      Added PRECOM00 - Update presenting complaint
. V9.04.16 17/10/2005  Ebon Clements CAR 80130
.                      Added VALVIS00 - validate inpatient visit number
. V9.04.15 20/09/2005  Ebon Clements CAR 76986
.                      Changed to use XMLRED00 
. V9.04.14 22/08/2005  Ebon Clements  CAR 70738
.                      Added EMCNBAKH to DOCDAT00 - Doctor date/time backdating
. V9.04.13 08/08/2005  Ebon Clements  CAR 57814
.                      Added report 17 - Check for emr visit on the same day
. V9.04.12 22/07/2005  Ebon Clements  CAR 57309
.                      Added report 16 - Check for expected patient
. V9.04.11 01/06/2005  Peter Vela     CAR 60166
.                      Recompiled for EMRCONFD
. V9.04.10 29/04/2005  Ebon Clements  CAR 54212
.                      Allow deletion of first doctor regardless of histroy  
.                      transactions
. V9.04.09 11/03/2005  Ebon Clements  CAR 59018
.                      Added report 15
. V9.04.08 07/03/2005  Peter Vela     CAR 57547
.                      Recompiled for PATVADFD and PATVADIO
.          16/02/2005  Lina Vo        CAR 56404
.                      Removed opriteaf FD & IO.  Not used.        
. V9.04.07 03/02/2005  Peter Vela     CAR 57698
.                      Added remote script to unlock Clinical Notes
. V9.04.06 17/01 2005  Ebon Clements  CAR 56056
.                      Added update of doctor seen date and time DOCDAT00
. V9.04.05 07/01/2005  Ebon Clements  CAR 55481
.                      Added return of date/time in report 5 & 6 remote script
. V9.04.04 21/12/2004  Ebon Clements  CAR 55262
.                      Changed VALLOC00 to test for WR and 00 using location
.                      room type
. V9.04.03 20/12/2004  Ebon Clements  CAR 54866
.                      Changed diagnosis search to use multiple keywords 
. V9.04.02 21/10/2004  Ebon Clements  CAR 54531
.                      Pack locacode with spaces in setpar
. V9.04.01 29/09/2004  Jill Habasque CAR 53678
.                      Added VALDDT00
. V9.03.06 21/07/2004  Ebon Clements CAR      
.                      Changed WRTHIS00 to set the doctor seen date/time to
.                      the arrival date/time if triage category 1
. V9.03.05 13/10/2003  Davin         CAR 39038
.                      Recompiled for change to viscmtfd
. V9.03.04 04/09/2003  Peter Vela    CAR 42409
.                      Ward Allocated Time now writing to emviut04.emrvisaf
. V9.03.03 18/06/2003  Ebon Clements CAR 37705
.                      Added clear of TMOTFRST and TMOTNEXT
. V9.03.02 11/06/2003  Lina Vo       CAR 39823              
.                      Mod to REDHIS00 to handle Supervisor Doctor delete
.                      differently to normal Doctor Delete. Also added extra 
.                      check for first doctor.
. V9.03.01 13/05/2003  Lina Vo       CAR 38501              
.                      Added VALDOC00-validate emergency doctor remote script. 
.------------------------------------------------------------------------------
. V9.02.24 07/04/2003  Lina Vo       CAR 37657              
.                      Allow supervisor deletion of first doctor even if 
.                      a procedure or diagnosis has been added.
.                      Used Doctor code, Date Seen & time seen for comparison 
.                      to check for first doctor in REDHIS00.
. V9.02.23 16/01/2003  Jill Habasque SRF 34682              
.                      Added clear of SAVEUSER
. V9.02.22 05/12/2002  Lina Vo       SRF 22709              
.                      Added OPNOUT00 to open outpatient file             
. V9.02.21 22/11/2002  Ebon Clements SRF 33351 22117        
.                      Allow deletion of the fist doctor if a procedure or
.                      diagnosis has not been added      
.                      Changed WRTHIS00 to use USERID for the history file
.                      if the cgi webuseid is blank
. V9.02.20 04/11/2002  Ebon Clements SRF 23698               
.                      Fixed WRTHIS00 for nurse and doctor allocation.
. V9.02.19 09/09/2002  Jill Habasque SRF 20325               
.                      Fixed clearing of attending nurse             
. V9.02.18 27/08/2002  Ebon Clements SRF 20077               
.                      Fixed spelling in EMRLOC00 error message      
. V9.02.17 24/06/2002  Tonii SVHM Transition II Extract 7
.                      Changed format of read and write of cciex7af 
. V9.02.16 03.05.2002  Steve Armstrong    Defect No. 3681
.                      Recompiled for changes to DGCLICAE, DGCLICEC and DGCLICCE
.                      (Mods to not send Emergency broadcast messages for 
.                      "0" U/R numbers.)
. V9.02.15 23/04/2002  Bronko Sosic
.                      Added a read RA before WREMHIS1 to stop duplicate key
. V9.02.14 21/04/2002  Bronko Sosic
.                      Changed DOSEEN00
. V9.02.13 12/04/2002  Tonii  SVHM Transition II extract 7
.                      Made sure only discharged patients are written to the    
.                      cciex7af table
. V9.02.12 12/04/2002  Tonii  SVHM Transition II extract 7
.                      Added check/write to cciex7af if doctor code or unit code
.                      is changed
. V9.02.11 11/04/2002  Bronko Sosic
.                      Changed DOSEEN00 and added REDHIS00
. V9.02.10 28/03/2002  Bronko Sosic
.                      Recompiled for EMRICDFD
. V9.02.09 17/03/2002  B.G.Ackland
.                      Procedure Locking
. V9.02.08 17/03/2002  B.G.Ackland
.                      Fix Doctor Update & History
.                      Fix Shutdown & Servlet Implementation
. V9.02.07 09/03/2002  B.G.Ackland
.                      Fix Keyword Search
. V9.02.06 07/03/2002  Bronko Sosic 
.                      Added a remote script 
. V9.02.05 31/10/2002  Bronko Sosic 
.                      changed remote script for doctor seen and nurse so that
.                      you can delete doctors and nurses
. V9.02.04 21.01.2002  Davin
.                      Send CEC broadcast message when visit file updated
. V9.02.03 11/10/2002  Bronko Sosic 
.                      cleaned up remote script for doctor seen
. V9.02.02 20/12/2001  Bronko Sosic 
.                      Added remote script for Nurse seen
. V9.02.01 13/11/2001  Bronko Sosic 
.                      Changes for St.V
. V9.02.00 13/11/2001  Bronko Sosic 
.                      Created Program
.----------------------------------------------------------------------
          INC       IBAWEBDF    
          INC       AAEDE1FD/INC
          INC       BOKRQ1FD/INC
          INC       BOKRAUFD/INC
          INC       EMRLCKFD/INC
          INC       PATWR1FD/INC
          INC       EMRCHAFD/INC
          INC       EMRCONFD/INC
          INC       EMRDOCFD/INC
          INC       EMRKEDFD/INC
          INC       EMRHISFD/INC
          INC       ALLCCTFD/INC
          INC       ALLCONFD/INC
          INC       ALLSERFD/INC 
          INC       ALLREFFD/INC
          INC       IBAALVFD/INC
          INC       MEHLERFD/INC
          INC       NHIMASFD/INC
          INC       PATDHEAD/INC
          INC       PATCALAG/INC
          INC       PATCERFD/INC
          INC       PATCONFD/INC
          INC       PATDGWFD/INC
          INC       PATDO1FD/INC
          INC       PATDSCFD/INC
          INC       PMSDUNFD/INC
          INC       PATECDFD/INC
          INC       PATECOFD/INC
          INC       PATFN1FD/INC
          INC       PATFX1FD/INC
          INC       PATPCPFD/INC
          INC       PATNIDFD/INC
          INC       PATONLFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PMSVX1FD/INC
          INC       PATICDFD/INC
          INC       PATICOFD/INC
          INC       PATITMFD/INC
          INC       PATRE1FD/INC
          INC       PATVADFD/INC
          INC       PATVISFD/INC
          INC       PMSADWFD/INC
          INC       PMSBRQFD/INC
          INC       PMSEEHFD/INC
          INC       PMSEEDFD/INC
          INC       PMSERCFD/INC
          INC       PMSSEDFD/INC
          INC       PMSSESFD/INC
          INC       PMSELFFD/INC
          INC       PMSOECFD/INC
          INC       PMSHCPFD/INC
          INC       PMSPX2FD/INC
          INC       OUTSITFD/INC
          INC       OUTCLIFD/INC
          INC       OPRDEAFD/INC
          INC       OPREXPFD/INC            * Theatre Expensive Items
          INC       OPRTHIFD/INC            * Theatre Implants Table
          INC       OPRNURFD/INC            * Theatre Nurse
          INC       PATTRNFD/INC            * Patient Transfer File
          INC       VISXDCFD/INC
          INC       VISXDCTD/INC
          INC       WATVWLFD/INC            * Valid Wating List
          INC       WATPROFD/INC            * Patient Procedure
          INC       EMRICDFD/INC
          INC       EMRLOCFD/INC            * Emergency Locations
          INC       EMRVISFD/INC            * Emergency Visit File 
          INC       EMRSITFD/INC
          INC       VISCMTFD/INC            * Visit Text
          INC       EMRDCMFD/INC            * Diagnosis comment file
          INC       CCIEX7FD/INC            * Extract 7
          INC       CCICONFD/INC            * CCI parameter
          INC       EMREXPFD/INC            * Expected patients
          INC       EMRMTXFD/INC
          INC       EMRVCDFD/INC
          INC       OBSPCOFD/INC            * Observation Patient Correspondence
.
          INC       WEBOECFD/INC
          INC       WEBOESFD/INC
          INC       WEBELFFD/INC
          INC       WEBEEHFD/INC
          INC       WEBEEDFD/INC
          INC       WEBERCFD/INC
          INC       WEBSESFD/INC
          INC       WEBSEDFD/INC
          
.
.  Enable Different Formats of Data for UR Validation
.         Emergency visit cgi-variables
.
.
ANSSMALG  INIT      "g"
ANSSMALB  INIT      "b"
BACKTIME  FORM      6
DAY       DIM       2
CENT      DIM       2
CURSPACE  FORM      3
COUNTER   FORM      3
DELTLAST  FORM      1 
DIAARRAY  DIM       9[200]
DIAAREND  FORM      3
DIM6      DIM       6
DIM10     DIM       10
DIM20     DIM       20
DIM100    DIM       100
DISPDATE  DIM       11
EMVCD001  DIM       8
EMVCD002  DIM       3
EMVCD003  DIM       3
EMVCD005  DIM       10
EMVCD031  DIM       1
EMRDIAIN  DIM       1
FRSTREAD  FORM      1
SAVDOC    DIM       8
SAVKEY29  DIM       29
SAVKEY30  DIM       30
SAVKEY37  DIM       37
SAVKEY44  DIM       44
FORM3     FORM      3
SAVSPACE  FORM      3
SAVEDIAG  DIM       100
SAVNUR    DIM       8
SAVKEY9   DIM       9
SAVKEY22  DIM       22
SAVKEY24  DIM       24
SAVEDRDT  DIM       8
SAVEDRTM  DIM       6
SAVENRDT  DIM       8
SAVENRTM  DIM       6
SAVETIME  DIM       8
SAVEDATE  DIM       8
.
TESTDATE  DIM       8
TESTTIME  DIM       8
.
SP14      INIT      "              "
SAVEUSER  DIM       10
SAVEDOCT  DIM       10
SAVENURS  DIM       10
SAVEUNIT  DIM       3 
SEQFLAG   FORM      3
SUPRVISR  FORM      1          * Supervisor override flag
DATETIME  DIM       14
EMRUPDFL  FORM      1
MONTH     DIM       3
MONTH2    FORM      2
NEWVALUE  DIM       80         * emrchaaf new field value
UPDATEKY  DIM       22         * Update key
UPDFIELD  DIM       2          * emrchaaf update type
UPDVALUE  DIM       80         * emrchaaf old field value
WEBUSEID  DIM       10         * Web user id
WRITEFLG  DIM       1
REASONFC  DIM       3          * emrchaaf reason for change
RETURNFM  FORM      1          * Return Format 0=Default
RECCOUNT  FORM      5
HISTTYPE  DIM       5
HOUR      DIM       2
MIN       DIM       2
NEWDOCTO  DIM       10
NEWDOCDT  DIM       8
NEWDOCTM  DIM       6
FIRSTFLG  FORM      1
NEWNURSE  DIM       10
NEWNURDT  DIM       8
NEWNURTM  DIM       6
SEC       DIM       2
COL       INIT      ":"
DELETE    INIT      "DEL"
VLFRNURS  FORM      1
.
LOCKED    FORM      1
CALCWAIT  FORM      1                       * Flag to recalculate waiting time
DAYMIN    FORM      "1440"
DELEFLAG  FORM      1
DIM3      DIM       3
DIM8      DIM       8
DIM8DATE  DIM       8
DIM8TIME  DIM       8
FDVUPDT   INIT      "FDV Related - "
FORM6     FORM      6
MHOSFLAG  FORM      1
SAVVHOSP  DIM       3
NMPNUMB   DIM       20
NUMHOUR   FORM      2
NUMMIN    FORM      3
NURUPIND  DIM       1
OLDDOCTO  DIM       10
OLDDOCDT  DIM       8
OLDDOCTM  DIM       6
OLDNURSE  DIM       10
OLDNURDT  DIM       8
OLDNURTM  DIM       6
OECWINDC  FORM      1
REGSFLAG  FORM      1
SAVKEY16  DIM       16
LOCACODE  DIM       3          * Location Code
LOCNCNTR  FORM      4                                               * CAR 269338
VALDKEYS  DIM       26
VALDCODE  DIM       70                      * Validation Code
VALDRTYP  DIM       1                       * Validation Room Type
VALDDESC  DIM       100
VALDDATE  DIM       8
VALDTIME  DIM       10                      * Validation Time
VALDELGN  DIM       8
VALDURNO  DIM       8
VALDALVN  DIM       20
VALVXUDF  DIM       3                       * Patient Visit User Defined DIM3
VISXDCIN  FORM      1
DOCTCODE  DIM       10                      * Doctor Code
DOCTDATE  DIM       8
DOCTTIME  DIM       8
KEY16A    DIM       16
NINE4     INIT      "9999"
UPDTTYPE  DIM       5                       
UPDFLAG1  DIM       1
VALDFUND  DIM       6
VALDTABL  DIM       8
VALDTYPE  FORM      2                       * Validataion Status
TYPE4     INIT      "004"
CFILEPRE  DIM       3
COUNT     FORM      1
ATTFLAG   FORM      1                       * Attending doctor only
INACTFLG  FORM      1
WAITTIME  FORM      4
SUPRFLAG  DIM       1
DATEVALD  DIM       1
YEAR2     DIM       2
ZERO8     INIT      "00000000"
.
PTCER001  DIM       8
PTCER002  DIM       3
PTCER003  DIM       8
PTCER004  DIM       8
.
EMVIS036  DIM       50
EMVIS037  DIM       50
EMVIS038  DIM       50
EMVIS039  DIM       50
EMVIS040  DIM       50
EMVIS041  DIM       3
EMVIS042  DIM       3
EMVIS043  DIM       3
EMVIS044  DIM       3
EMVIS045  DIM       3
EMVIS046  DIM       3
EMVIS047  DIM       3
EMVIS048  DIM       3
EMVIS049  DIM       3
EMVIS050  DIM       3
EMVIS051  DIM       3
EMVIS052  DIM       3
EMVIS053  DIM       3
EMVIS054  DIM       3
EMVIS055  DIM       3
EMVIS056  DIM       3
EMVIS057  DIM       3
EMVIS058  DIM       3
EMVIS059  DIM       3
EMVIS060  DIM       3
EMVIS061  DIM       3
EMVIS062  DIM       3
EMVIS063  DIM       3
EMVIS064  DIM       3
EMVIS065  DIM       3
EMVIS066  DIM       3
EMVIS067  DIM       3
EMVIS068  DIM       3
EMVIS069  DIM       3
EMVIS070  DIM       3
EMVIS071  DIM       11
EMVIS072  DIM       11
EMVIS073  DIM       11
EMVIS074  DIM       11
EMVIS075  DIM       11
EMVIS076  DIM       11
EMVIS077  DIM       11
EMVIS078  DIM       11
EMVIS079  DIM       11
EMVIS080  DIM       11
EMVIS081  DIM       8
EMVIS082  DIM       8
EMVIS083  DIM       8
EMVIS084  DIM       8
EMVIS085  DIM       8
EMVIS086  DIM       8
EMVIS087  DIM       8
EMVIS088  DIM       8
EMVIS089  DIM       8
EMVIS090  DIM       8
.
EMVIS093  DIM       1
EMVIS094  DIM       1
EMVIS095  DIM       1
EMVIS096  DIM       1
EMVIS097  DIM       1
EMVIS098  DIM       1
EMVIS099  DIM       1
.
EMVIS101  DIM       6
EMVIS102  DIM       6
EMVIS103  DIM       6
EMVIS104  DIM       6
EMVIS105  DIM       6
EMVIS106  DIM       6
EMVIS107  DIM       6
EMVIS108  DIM       6
EMVIS109  DIM       6
EMVIS110  DIM       6
EMVIS149  DIM       50
.
EMVIS154  DIM       11   * Ambulance Arrival Date (CCYYMMDD
EMVIS155  DIM       8    * Ambulance Arrival Time (HH:MM:SS)
EMVIS156  DIM       11   * Ambulance Handover Date (CCYYMMDD
EMVIS157  DIM       8    * Ambulance Handover Time (HH:MM:SS)
EMVIS158  DIM       11   * Decision to Admit Date (CCYYMMDD
EMVIS159  DIM       8    * Decision to Admit Time (HH:MM:SS)
.
EMVIS164  DIM       10   * Meet & Greet Ass. Doctor Code
EMVIS165  DIM       11   * Meet & Greet Ass. Doctor Date Seen
EMVIS166  DIM       8    * Meet & Greet Ass. Doctor Time Seen
EMVIS167  DIM       3    * User Defined field 31
EMVIS168  DIM       3    * User Defined field 32
EMVIS169  DIM       3    * User Defined field 33
EMVIS170  DIM       3    * User Defined field 34
EMVIS171  DIM       3    * User Defined field 35
EMVIS172  DIM       11   * Date First Seen by MH Practitioner
EMVIS173  DIM       8    * Time First Seen by MH Practitioner
EMVIS174  DIM       3    * Referral Period (Category RF)
EMVIS175  DIM       2    * Referring Period Month
EMVIS176  DIM       11   * Referral Date
EMVIS177  DIM       3    * VEMD Service Type (Cat YW)
EMVIS178  DIM       3    * VEMD Patient Location (Cat YX)
EMVIS179  DIM       10   * Allied Health HCP Code (pmshcpaf)
EMVIS180  DIM       1    * Allied Health Status
EMVIS181  DIM       3    * Disposition Delay (Cat dd)
EMVIS182  DIM       1    * Drug / Alcohol Related
.
PROCDATE  DIM       8
PROCTIME  DIM       8
REASONHO  DIM       3                  * Reason for handover (Cat 'fw')
.
. Save variables for PMSOEC
.
SVOEVISN  DIM       8
SVOECNTR  DIM       3
SVOESTAT  DIM       2
SVOEURNO  DIM       8
SVOEARID  DIM       20
SVOETRID  DIM       24
SVOERQDT  DIM       8
SVOEETYP  DIM       2
SVOEERRC  DIM       4
SVOEERRD  DIM       100
SVOECDTE  DIM       8
SVOECTIM  DIM       8
SVOEUDTE  DIM       8
SVOEUTIM  DIM       8
SVOEHOSP  DIM       3
SVOEELEG  DIM       8
SVOEMSID  DIM       36
SVOECUID  DIM       10
SVOEUUID  DIM       10
.
S2OEARID  DIM       20
S2OECNTR  DIM       3
.
. Save variables for PMSEEH
.
SVHEARID  DIM       20
SVHERPTC  DIM       3
SVHECTID  DIM       24
SVHEBENL  DIM       1
SVHECFAC  DIM       1
SVHECPAM  DIM       9
SVHECPDR  DIM       4
SVHECPDI  DIM       1
SVHECPFN  DIM       40
SVHECPMN  DIM       10
SVHECPRN  DIM       1
SVHEEXAM  DIM       9
SVHEEADI  DIM       1
SVHEEXBA  DIM       9
SVHEEXDI  DIM       1
SVHEFSTA  DIM       1
SVHEFRID  DIM       12
SVHEFSCD  DIM       4
SVHEMSCD  DIM       4
SVHEPEAI  DIM       1
SVHEPSCD  DIM       30
SVHETNAM  DIM       80
SVHETBDI  DIM       1
SVHETBSC  DIM       15
SVHEVCID  DIM       2
SVHEUDTE  DIM       8
SVHEUTIM  DIM       8
SVHEUUID  DIM       10
SVHECDTE  DIM       8
SVHECTIM  DIM       8
SVHECUID  DIM       10
SVHEMSID  DIM       36
SVHESPAR  DIM       30
.
. Save variables for PMSEED
.
SVDEARID  DIM       20
SVDERPTC  DIM       3
SVDECFEC  DIM       4
SVDEEXPC  DIM       3
SVDECFET  DIM       80
SVDECTID  DIM       24
SVDEMSID  DIM       36
SVDESPAR  DIM       30
.
. Save variables for PMSSED
.
SVSEARID  DIM       20
SVSERPTC  DIM       3
SVSESCOD  DIM       11
SVSESRVC  DIM       3
SVSESFEC  DIM       4
SVSESEXC  DIM       3
SVSESFET  DIM       80
SVSETRID  DIM       24
SVSEMSID  DIM       36
SVSESPAR  DIM       30
.
. Save variables for PMSSES
.
SVESARID  DIM       20
SVESRPTC  DIM       3
SVESSCOD  DIM       11
SVESSRVC  DIM       3
SVESSCTC  DIM       1
SVESSVID  DIM       4
SVESCAMT  DIM       9
SVESSDTE  DIM       8
SVESFBAM  DIM       9
SVESITEM  DIM       5
SVESMBAM  DIM       9
SVESMEXC  DIM       3
SVESSFAC  DIM       1
SVESSFEE  DIM       9
SVESTRID  DIM       24
SVESMSID  DIM       36
SVESSPAR  DIM       30
.
. Save variables for PMSERC
.
SVRCARID  DIM       20
SVRCRPTC  DIM       3
SVRCTYPE  DIM       3
SVRCLINE  DIM       3
SVRCDATA  DIM       1000
SVRCUDAT  DIM       8
SVRCUTIM  DIM       8
SVRCTRID  DIM       24
SVRCMSID  DIM       36
SVRCSPAR  DIM       30
.
CATES     INIT      "es"
CATgb     INIT      "gb"
CATwl     INIT      "wl"
CATcr     INIT      "cr"
ZERO3     INIT      "000"
ZERO20    INIT      "00000000000000000000"
.
.------------------------------------------------------------
PRGID     INIT      "EMRWEB08"
VERSION   INIT      "V12.00.01"
PRGNAM    INIT      "XML Remote Code Validation Service"
.------------------------------------------------------------
.
          CALL      WEBINT00                * Initialise Fifo Etc.
          CALL      INIT0000                * Open Files
.
MAIN1000  CALL      XMLRED00       * Read Fifo WEBPID and USERID
.
          CALL      OUTFIL00                * Check Correct Site Files Are Open
          BRANCH    EXIT,MAIN1000
.
          BRANCH    REPORTNO,MAIN1100,MAIN1200,MAIN1300,MAIN1400,MAIN1500:
                             MAIN1600,MAIN1700,MAIN1800,MAIN1900,MAIN2000:
                             MAIN2100,MAIN2200,MAIN2300,MAIN2400,MAIN2500:
                             MAIN2600,MAIN2700,MAIN2800,MAIN2900,MAIN3000:
                             MAIN3100,MAIN3200,MAIN3300,MAIN3400,MAIN3500:
                             MAIN3600,MAIN3700,MAIN3800,MAIN3900,MAIN4000:
                             MAIN4100,MAIN4200,MAIN4300,MAIN4400,MAIN4500:
                             MAIN4600,MAIN4700,MAIN4800,MAIN4900,MAIN5000:
                             MAIN5100,MAIN5200,MAIN5300,MAIN5400,MAIN5500:
                             MAIN5600,MAIN5700,MAIN5800,MAIN5900,MAIN6000:
                             MAIN6100,MAIN6200,MAIN6300,MAIN6400,MAIN6500:
                             MAIN6600,MAIN6700,MAIN6800,MAIN6900,MAIN7000:
                             MAIN7100,MAIN7200,MAIN7300,MAIN7400,MAIN7500:
                             MAIN7600
.
          PACK      WEBTITLE,PRGID,SP1,VERSION,SP1,PRGNAM,SP70
          MOVE      "INVALID OPTION",WEBTITLE
          CALL      WEBERR00   * Create Output File and Write HTML Page Header
          GOTO      MAIN1000
.
MAIN1100  CALL      SELEDS00                * Emergency Diagnosis Select List
          GOTO      MAIN1000
.
MAIN1200  CALL      EMRLOC00                * Emergency Location
          GOTO      MAIN1000
.
MAIN1300  CALL      DOSEEN00            * Remote Script for Doctor Seen
          GOTO      MAIN1000
.
MAIN1400  CALL      NUSEEN00            * Remote Script for Nurse Seen
          GOTO      MAIN1000
.
MAIN1500  CALL      EMRWAR00            * Remote Script for Ward
          GOTO      MAIN1000
.
MAIN1600  CALL      VALCOD00            * Remote Script for Code
          GOTO      MAIN1000
.
MAIN1700  CALL      LOCLIN00            * Remote Script for Locking Clinical
          GOTO      MAIN1000
.
MAIN1800  CALL      LOCDIA00            * Remote Script for Locking Diagnosis
          GOTO      MAIN1000
.
MAIN1900  CALL      LOCPRD00            * Remote Script for Locking Procedures
          GOTO      MAIN1000
.
MAIN2000  CALL      UNLOCK00            * Remote Script for UnLocking Procedures
          GOTO      MAIN1000
.
MAIN2100  CALL      VALDOC00            * Remote Script for Emergency Doctor  
          GOTO      MAIN1000
.
MAIN2200  CALL      VALDDT00            * Script for Ready for dep date/time
          GOTO      MAIN1000
.
MAIN2300  CALL      DOCDAT00           * Remote Script for Doctor Seen date/time
          GOTO      MAIN1000
.
MAIN2400  CALL      UNLCLN00            * Remote Sript for Unlocking Clin Notes
          GOTO      MAIN1000                                           *I-57698
.
MAIN2500  CALL      UPDREG00           * Remote Script for EMVIUDXX & ENVUITXX
          GOTO      MAIN1000
.
MAIN2600  CALL      CHKEXP00           * Remote Script for expected patients
          GOTO      MAIN1000          
.
MAIN2700  CALL      CHKVIS00           * Remote Script check for multiple emr   
          GOTO      MAIN1000           * visits for a ur on the same day
.
MAIN2800  CALL      VALVIS00           * Remote Script to validate visit number
          GOTO      MAIN1000           * 
.
MAIN2900  CALL      PRECOM00           * Remote Script to update presenting    
          GOTO      MAIN1000           * complaint coded field
.
MAIN3000  CALL      UPDEMR00           * Remote Script to update single fields 
          GOTO      MAIN1000           * in emrvisaf             
.
MAIN3100  CALL      EMRVIS00           * Remote Script to update emrvisaf
          GOTO      MAIN1000
.
MAIN3200  CALL      ADMDOC00           * Remote Script to update the bed request
          GOTO      MAIN1000           * and pre admission admitting doctor
.
MAIN3300  CALL      EMRVCD00           * Remote Script to find duplicates in
          GOTO      MAIN1000           * emrvcdaf
.
MAIN3400  CALL      PRMDIA00           * Remote Script to update Primary Diag
          CALL      EMDT0000           * Diagnosis Free Text Update
          GOTO      MAIN1000           
.
MAIN3500  CALL      MAGRAN00
          GOTO      MAIN1000           * Remote Script for Rapid Action Nurse
.
MAIN3600  CALL      LOCMAN00            * Remote Script for Locking Clinical
          GOTO      MAIN1000
.
MAIN3700  CALL      UNLCMN00            * Remote Sript for Unlocking Man Notes
          GOTO      MAIN1000
.
MAIN3800  CALL      OVERLP00            * Remote Script ED vistit overlap check
          GOTO      MAIN1000
.
MAIN3900  CALL      DDTSN000           * Add First Seen Doctor, Date and Time
          GOTO      MAIN1000
.
MAIN4000  CALL      LOCSEL00           * Locations for a site selection list
          GOTO      MAIN1000
.
MAIN4100  CALL      VALEMD00           * Validate discharged emr patients
          GOTO      MAIN1000
.
MAIN4200  CALL      HISWRT00           * Write an ED audit history record
          GOTO      MAIN1000
.
MAIN4300  CALL      EMRVAL00           * Get ED visit values       
          GOTO      MAIN1000
.
MAIN4400  CALL      CHKEXU00           * Remote Script for expected pat urno
          GOTO      MAIN1000
.
MAIN4500  CALL      CHKEXS00           * Remote Script for expected pat surname
          GOTO      MAIN1000
.
MAIN4600  CALL      IADIA000           * Initial Assessor Data Integrity Audit
          GOTO      MAIN1000
.
MAIN4700  CALL      TRDDT000           * Treating Doctor Date/Time
          GOTO      MAIN1000
.
MAIN4800  CALL      TRNDT000           * Treating Nurse Date/Time
          GOTO      MAIN1000
.
MAIN4900  CALL      GSDOCT00            * Get EMR Service doctor for a date/time
          GOTO      MAIN1000
.
MAIN5000  CALL      APBKRQ00           * Approve Thatre Request
          GOTO      MAIN1000
.
MAIN5100  CALL      LDOCHI00           * Get last ALDOC date/time for a visit
          GOTO      MAIN1000
.
MAIN5200  CALL      CHKDCL00           * Check for duplicate clinic
          GOTO      MAIN1000
.
MAIN5300  CALL      VALBRQ00           * Validate Booked / Scheduled Theatre Req
          GOTO      MAIN1000
.
MAIN5400  CALL      VALUND00           * Validate warning and redirect on 
.                                        undischarge
          GOTO      MAIN1000
.
MAIN5500  CALL      SELCCT00           * Select options for department / 
          GOTO      MAIN1000           * contract codes
.
MAIN5600  CALL      CLSREF00           * Remote script for closed referral
          GOTO      MAIN1000
.
MAIN5700  CALL      VALOEC00
          GOTO      MAIN1000
.
MAIN5800  CALL      VALALV00
          GOTO      MAIN1000
.
MAIN5900  CALL      VALAL200
          GOTO      MAIN1000
.
MAIN6000  CALL      VALTYA00
          GOTO      MAIN1000 
.
MAIN6100  CALL      VALADD00
          GOTO      MAIN1000
.
MAIN6200  CALL      VALCER00
          GOTO      MAIN1000
.
MAIN6300  CALL      VALUDF00           * Remote Script User Defined field
          GOTO      MAIN1000
.
MAIN6400  CALL      VALPRO00
          GOTO      MAIN1000
.
MAIN6500  CALL      VALRES00
          GOTO      MAIN1000
.
MAIN6600  CALL      VALALC00
          GOTO      MAIN1000
.
MAIN6700  CALL      VALXDC00
          GOTO      MAIN1000
.
MAIN6800  CALL      VALADC00
          GOTO      MAIN1000
.
MAIN6900  CALL      MHPRA000
          GOTO      MAIN1000
.
MAIN7000  CALL      METHD000   
          GOTO      MAIN1000
.
MAIN7100  CALL      VEMOEC00
          GOTO      MAIN1000
.
MAIN7200  CALL      ADDDIA00           * Remote Script to update Primary Diag
          CALL      EMDT0000           * Diagnosis Free Text Update
          GOTO      MAIN1000           
.
MAIN7300  CALL      DLOSEE00           * Delete other doctor 
          GOTO      MAIN1000
.
MAIN7400  CALL      ODCDAT00           * Update other doctor seen date/time  
          GOTO      MAIN1000
.
MAIN7500  CALL      DLISEE00           * Delete Initial accessor
          GOTO      MAIN1000
.
MAIN7600  CALL      VALCLC00           * Validate current location
          GOTO      MAIN1000
.
.------------------------------------------------------------
. Open Files and Initialize Variables
.------------------------------------------------------------
INIT0000  OPEN      CONTROLF,"controlf"
          OPEN      EMRDOCA1,"emrdocaf"
          OPEN      EMRICDA2,"emricdaf"
          OPEN      EMRMTXA3,"emrmtxaf"
          OPEN      EMRLCKA1,"emrlckaf" 
          OPEN      EMRDCMA1,"emrdcmaf" 
          OPEN      VISCMTA1,"viscmtaf" 
          OPEN      PATWR1A1,"patwr1af"
          OPEN      EMRICDA1,"emricdaf"
          OPEN      EMRKEDA1,"emrkedaf" 
          OPEN      EMRKEDA2,"emrkedaf" 
          OPEN      EMRSITA1,"emrsitaf"
          OPEN      EMRLOCA1,"emrlocaf" 
          OPEN      EMRLOCA2,"emrlocaf" 
          OPEN      EMRVISA1,"emrvisaf" 
          OPEN      EMRVISA2,"emrvisaf" 
          OPEN      EMRVISA7,"emrvisaf" 
          OPEN      EMRHISA1,"emrhisaf" 
          OPEN      PATDGWA1,"patdgwaf"
          OPEN      PATITEM1,"patitemn"
          OPEN      PATCODE1,"patcodes"
          OPEN      PATCODE2,"patcodes"
          OPEN      PATDO1A1,"patdo1af"
          OPEN      PATECDA1,"patecdaf"
          OPEN      PATECOA1,"patecoaf"
          OPEN      PATFX1A1,"patfx1af"
          OPEN      PATPCPA1,"patpcpaf"
          OPEN      PMSADWA1,"pmsadwaf"
          OPEN      PMSBRQA2,"pmsbrqaf"
          OPEN      PMSDUNA1,"pmsdunaf"
          OPEN      PMSELFA1,"pmselfaf"
          OPEN      PMSEEHA1,"pmseehaf"
          OPEN      PMSEEDA1,"pmseedaf"
          OPEN      PMSERCA1,"pmsercaf"
          OPEN      PMSSEDA1,"pmssedaf"
          OPEN      PMSSESA1,"pmssesaf"
          OPEN      PMSOECA1,"pmsoecaf"
          OPEN      WATPROA1,"watproaf"
          OPEN      PATFN1A1,"patfn1af"
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATCERA1,"patceraf"
          OPEN      PATDSCH1,"patdschf"
          OPEN      PMSVX1A1,"pmsvx1af"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PMSPX2A1,"pmspx2af"
          OPEN      PATVADA1,"patvadaf"
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATVISA2,"patvisaf"
          OPEN      ALLCCTA1,"allcctaf"
          OPEN      ALLREFA1,"allrefaf"
          OPEN      ALLSERA1,"allseraf" 
          OPEN      OPRNURA1,"oprnuraf"
          OPEN      PMSHCPA1,"pmshcpaf"
          OPEN      OPREXPA1,"oprexpaf"
          OPEN      OPRDETA1,"oprdetaf"
          OPEN      OPRDETA2,"oprdetaf"
          OPEN      OPRTHIA1,"oprthiaf"
          OPEN      PATTRAN2,"pattranf"
          OPEN      WATVWLA1,"watvwlaf"
          OPEN      WATVWLA2,"watvwlaf"
          OPEN      AAEDE1A1,"aaede1af"
          OPEN      BOKRQ1A1,"bokrq1af"
          OPEN      BOKRAUA1,"bokrauaf"
          OPEN      EMREXPA1,"emrexpaf"
          OPEN      EMREXPA2,"emrexpaf"
          OPEN      EMREXPA3,"emrexpaf"
          OPEN      EMRCHAA1,"emrchaaf"
          OPEN      EMRVCDA1,"emrvcdaf"
          OPEN      EMRVCDA2,"emrvcdaf"
          OPEN      OBSPCOA2,"obspcoaf"
          OPEN      IBAALVA1,"ibaalvaf"
          OPEN      IBAALVA2,"ibaalvaf"
.
          CALL      OPICO1
          CALL      OPICO2
          CALL      OPICD1
          CALL      OPICD2
          READ      CONTROLF,SEVENTY1;*200,CCCNSVHM
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
          READ      CONTROLF,EIGHTY9;*145,EMCNDDTM,*191,EMCNBAKH,*232,EMCNDEDI:
                                     *235,EMCNLDIA
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,HUND22;*5,EMCNUDHF,*49,EMCNPCTY,*50,EMCNEMST
          READ      CONTROLF,HUND25;*93,PTCNNSSI
          READ      CONTROLF,HUND29;*61,PTCNWSIN,*71,PTCNOECW,*72,PTCNOECE
.
          IF        IBCNMHOS=1
            OPEN      MLTCODA1,"mltcodaf"
            OPEN      MLTCODA2,"mltcodaf"
          ENDIF
.
          OPEN      OUTSITA1,"outsitaf"
          MOVE      "out",CFILEPRE
          CALL      OPNOUT00
.
INIT5000  MOVE      ZERO,VISXDCIN
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      VISXDCA1,"visxdcaf"
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ONE,VISXDCIN
          ENDIF
.
          MOVE      ONE,OECWINDC
          MATCH     "1",PTCNOECW
          IF         @EQUAL
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBOECA1,"weboecaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBOESA1,"weboesaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBELFA1,"webelfaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBELFA2,"webelfaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBEEHA1,"webeehaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBEEDA1,"webeedaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBERCA1,"webercaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBSESA1,"websesaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      WEBSEDA1,"websedaf"
            TRAPCLR   IO
            IF        OVRCD=1
              MOVE      ZERO,OECWINDC
            ENDIF
.
          ENDIF
.
          RETURN
.
. Note Following Labels Not Used in Service
.
PROFLD00  RETURN 
.------------------------------------------------------------
. Clear Parameters
.------------------------------------------------------------
CLRPAR00  MOVE      SP70,VALDCODE
          MOVE      SP70,VALDDESC
          MOVE      SP70,VALDTIME
          MOVE      SP70,UPDATEKY 
          MOVE      ZERO,RETURNFM
          MOVE      SP70,UPDFLAG1
          MOVE      ZERO,VALDTYPE
          MOVE      SP70,DOCTCODE
          MOVE      SP70,ADMISSNO
          MOVE      SP70,UPDTTYPE 
          MOVE      SP70,LOCACODE  
          MOVE      ZERO,REGSFLAG 
          MOVE      SP70,WEBUSEID
          MOVE      ZERO,COUNT
          MOVE      ZERO,SUPRVISR
          MOVE      SP70,VALDDATE
          MOVE      SP70,DOCTDATE
          MOVE      SP70,DOCTTIME
          MOVE      ZERO,CALCWAIT
          MOVE      SP70,VALDURNO
          MOVE      ZERO,MHOSFLAG
          MOVE      SP70,SAVVHOSP
          MOVE      SP70,VALDELGN
          MOVE      SP70,DATEVALD
          PACK      UPDFIELD,Z70
          PACK      REASONFC,Z70
          PACK      UPDVALUE,SP70,SP70
          PACK      NEWVALUE,SP70,SP70
          MOVE      ZERO,DELTLAST
          MOVE      SP70,EMVCD001
          MOVE      SP70,EMVCD002
          MOVE      SP70,EMVCD003
          MOVE      SP70,EMVCD005
          MOVE      SP70,EMVCD031
          MOVE      SP70,PROCDATE
          MOVE      SP70,PROCTIME
          MOVE      SP70,VALDALVN
          MOVE      SP70,VALVXUDF
.
          MOVE      SP70,REASONHO
.
          CALL      CPEMVI00                * Clear emrvisaf cgi vars
.
          MOVE      SP70,NURUPIND 
          MOVE      SP70,VALDKEYS
.
          MOVE      Z70,VALDRTYP
.
CLRPAR99  RETURN
.------------------------------------------------------------
. Set Parameters
.------------------------------------------------------------
SETPAR00  MATCH     "valdcode=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,VALDCODE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "valddesc=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,VALDDESC
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "valdtime=",QRYNAME
          IF        @EQUAL
            PACK      VALDTIME,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "returnfm=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,RETURNFM
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "valdtype=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,VALDTYPE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "doctcode=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,DOCTCODE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "admissno=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,ADMISSNO
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updttype=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,UPDTTYPE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "regsflag=",QRYNAME
          IF        @EQUAL
            SQUEEZE   QRYDATA
            MOVE      QRYDATA,REGSFLAG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "locacode=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,LOCACODE
            PACK      LOCACODE,LOCACODE,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "webuseid=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,WEBUSEID
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updateky=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,UPDATEKY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updflag1=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,UPDFLAG1
            GOTO    SETPAR99
          ENDIF
.
          MATCH     "suprvisr=",QRYNAME
          IF        @EQUAL
SETPAR20    MOVE      QRYDATA,SUPRVISR
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "valddate=",QRYNAME
          IF        @EQUAL
            MATCH     SP70,QRYDATA
            GOTO      SETPAR99 IF EQUAL
            GOTO      SETPAR99 IF EOS
.
            UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00              * Set CMON from MTHNAM3
            PACK      VALDDATE,CCENT,CYEAR,CMON,CDAY,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "doctdate=",QRYNAME
          IF        @EQUAL
            MATCH     SP70,QRYDATA
            GOTO      SETPAR99 IF EQUAL
            GOTO      SETPAR99 IF EOS
.
            UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00              * Set CMON from MTHNAM3
            PACK      DOCTDATE,CCENT,CYEAR,CMON,CDAY,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "docttime=",QRYNAME
          IF        @EQUAL
            PACK      DOCTTIME,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "calcwait=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,CALCWAIT
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "valdurno=",QRYNAME
          IF        @EQUAL
            PACK      VALDURNO,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "mhosflag=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,MHOSFLAG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "valdelgn=",QRYNAME
          IF        @EQUAL
            PACK      VALDELGN,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "datevald=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,DATEVALD
            PACK      DATEVALD,DATEVALD,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvis",QRYNAME
          IF        @EQUAL
            CALL      SPEMV000
            GOTO      SETPAR99
          ENDIF     
.
          MATCH     "updfield=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,UPDFIELD
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "reasonfc=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REASONFC
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "deltlast=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,DELTLAST
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvcd001=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMVCD001
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvcd002=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMVCD002
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvcd003=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMVCD003
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvcd005=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMVCD005
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvcd031=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMVCD031
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "reasonho=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REASONHO
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "procdate=",QRYNAME
          IF        @EQUAL
            RESET     QRYDATA
            MATCH     SP70,QRYDATA
            GOTO      SETPAR99 IF EQUAL
            UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00            * Set CMON from MTHNAM3
            PACK      PROCDATE,CCENT,CYEAR,CMON,CDAY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "proctime=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PROCTIME
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nurupind=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,NURUPIND
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "valdalvn=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,VALDALVN
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "valvxudf=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,VALVXUDF
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "valdkeys=",QRYNAME
          IF        @EQUAL
            PACK      VALDKEYS,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "valdrtyp=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,VALDRTYP
            GOTO      SETPAR99
          ENDIF
.
SETPAR99  RETURN
.------------------------------------------------------------
.         VALLOC00  Checks whether location is already occupied
.------------------------------------------------------------
VALLOC00  PACK      KEY3,VALDCODE,SP70
          CALL      RDEMLOC1
          BRANCH    OVRCD,VALLOC90
.
          MATCH     "O",EMLOTYPE            * Other Departments
          GOTO      VALLOC90 IF EQUAL
.
          MATCH     "W",EMLOTYPE            * Waiting Room
          GOTO      VALLOC90 IF EQUAL
.
          MOVE      ZERO,LOCNCNTR
          PACK      KEY11,VALDCODE,SP70
          CALL      RSEMVIS7
VALLOC20  CALL      RKEMVIS7
          BRANCH    OVRCD,VALLOC85
.
          MATCH     VALDCODE,EMVILOCN
          GOTO      VALLOC85 IF NOT EQUAL
.
          COMPARE   ONE,EMVISTAT
          GOTO      VALLOC20 IF NOT EQUAL
.
          MATCH     EMVISITE,WBSEESC
          GOTO      VALLOC20 IF NOT EQUAL
.
          ADD       ONE,LOCNCNTR
          GOTO      VALLOC20
.
VALLOC85  IF          EMLOMAXP = 0
            GOTO        VALLOC90                  * Zero assumes unlimited!!!!!!
          ENDIF
.
          IF        LOCNCNTR < EMLOMAXP
            GOTO      VALLOC90
          ENDIF
.
          MOVE      ONE,EXIT
          GOTO      VALLOC99
.
VALLOC90  MOVE     ZERO,EXIT
          GOTO     VALLOC99
.
VALLOC99  RETURN
.------------------------------------------------------------
.        Update Doctor Seen
.        DOCTCODE = New doctor code. Blank if deleting doctor
.-----------------------------------------------------------
DOSEEN00  CALL      XMLHED00
          BRANCH    EXIT,DOSEEN99
.
          PACK      KEY8,ADMISSNO,SP70
DOSEEN05  CALL      RLEMVIS1
          BRANCH    OVRCD,DOSEEN90,DOSEEN91
.
          MATCH     ADMISSNO,DEMVIADM
          GOTO      DOSEEN90 IF NOT EQUAL
.
          COMPARE   FOUR,EMVISTAT
          GOTO      DOSEEN90 IF EQUAL
.
          MOVE      DOCTCODE,EMVIDOCT
          MATCH     SP70,DOCTCODE          * Do not set up dates if no doctor
          GOTO      DOSEEN20 IF EQUAL
.
          MATCH     "1",EMVITRIG           * Triage cat of 1 (RED)
          GOTO      DOSEEN10 IF NOT EQUAL
.
          MATCH     SP70,EMVIDRDT          * If no doctor allocated
          GOTO      DOSEEN20 IF NOT EQUAL
.
          MOVE      EMVIDATE,EMVIDRDT      * Make seen date and time the same
          MOVE      EMVITIME,EMVIDRTM      * as arrival date and time
          GOTO      DOSEEN20
.
DOSEEN10  MATCH     SP70,EMVIDRDT          * Do not change if date exists
          GOTO      DOSEEN20 IF NOT EQUAL
.
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MOVE      KEY8,EMVIDRDT                * System date
          CLOCK     TIME,EMVIDRTM                * System Time
.
DOSEEN20  MATCH     SP70,DOCTCODE
          GOTO      DOSEEN50 IF NOT EQUAL
.
          CALL      REDHIS00                     * Fix history and allocate
          BRANCH    EXIT,DOSEEN92,DOSEEN93       * the previous doctor
.
          CALL      MHDL0000           * Delete MH practitioner seen date/time
          CALL      WEDD0000           * EDWARD delete doctor
.
DOSEEN50  CALL      UPEMVIS1
          PROC      EMRDRCHR                     * Update Dr Billing complete
          CALL      WEDV0000                     * EDWARD visit alteration
.
          CALL      ULEMVIS1                     * Unlock emr visit record
          IF        CCCNSVHM = 1
            OPEN      CCIEX7A1,"cciex7af"
            IF        EMVISTAT=2|EMVISTAT=3
              MATCH     EMVIDOCT,SAVEDOCT
              IF        !@EQUAL
                MOVE      ANST,CLEXSTAT
                MOVE      ONE,CLEXTYPE
                MOVE      EMVIADMN,CLEXVISN
                PACK      KEY11,CLEXSTAT,CLEXTYPE,CLEXVISN
                CALL      RDCLEX71
                IF        OVRCD = 1
                  CALL      WRCLEX71
                ENDIF
              ENDIF
            ENDIF
            CLOSE     CCIEX7A1
          ENDIF
.
.         Send update broadcast message
.
          MOVE      EMVIURNO,KEY8          * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,DOSEEN70
.         
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,DOSEEN70
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,DOSEEN70
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      ONE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                     * send update emr details
.
DOSEEN70  MATCH     SP70,EMVIDOCT                * Don't write history if no
          GOTO      DOSEEN80 IF EQUAL            * doctor is allocated
.
          MATCH     SP70,DOCTCODE                * Don't write a new history
          GOTO      DOSEEN80 IF EQUAL            * record as a doctor was just
.                                                * deleted
          CALL      WRTHIS00
          PROC      EMRDRCHR                * Update Dr Billing complete
          CALL      MHAD0000                * Add MH practitioner seen date/time
.
DOSEEN80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Doctor Seen Updated":
                             "</RETURN_VALUE>"
          GOTO      DOSEEN98
.
DOSEEN90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      DOSEEN98
.
DOSEEN91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      DOSEEN98
.
DOSEEN92  CALL      ULEMVIS1
          IF        SUPRVISR=1
            WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                               "Invalid First Doctor Deletion - can only ":
                               "delete most recent doctor allocated.":
                               "</RETURN_VALUE>"
          ELSE
            WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                               "Doctor History Exists - Invalid Deletion":
                               "</RETURN_VALUE>"
          ENDIF
          GOTO      DOSEEN98
.
DOSEEN93  CALL      ULEMVIS1
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid last doctor deletion - Can't delete the ":
                             "last doctor. ":
                             "Please use delete first doctor functionality.":
                             "</RETURN_VALUE>"
          GOTO      DOSEEN98
.
DOSEEN98  CALL      XMLEND00
DOSEEN99  RETURN
.
.------------------------------------------------------------
. Add the mental health practitioner code, seen date and time
.------------------------------------------------------------
MHAD0000  MATCH     SP70,EMVIDOCT                * Any doctor allocated
          GOTO      MHAD9999 IF EQUAL
.
          MATCH     SP70,EMVIMPRA                * MH practitioner already
          GOTO      MHAD9999 IF NOT EQUAL        * allocated
.
          PACK      KEY6,EMVIDOCT,SP70
          CALL      RDDOCT1
          BRANCH    OVRCD,MHAD9999
.
          MATCH     SP70,DRTYPE
          GOTO      MHAD9999 IF EQUAL
.
          PACK      KEY5,ANSD,ANST,DRTYPE,SP70   * Read primary specialty
          CALL      RDCODE1
          BRANCH    OVRCD,MHAD9999
.
          MATCH     ANSL,TCINDC1                 * MH practitioner
          GOTO      MHAD9999 IF NOT EQUAL
.
          PACK      KEY8,ADMISSNO,SP70     
          CALL      RLEMVIS1 
          BRANCH    OVRCD,MHAD9999,MHAD9999
.         
          MOVE      EMHIDOC,EMVIMPRA             * Allocate MH practitoner
          MOVE      EMHIDSD,EMVIMPDT             * date and time
.
          UNPACK    EMHIDST,HOUR,MIN,SEC
          PACK      EMVIMPTM,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",EMVIMPTM
.
          CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
          CALL      WEDV0000                     * EDWARD visit alteration
.
MHAD9999  RETURN
.
.------------------------------------------------------------
. Delete the mental health practitioner code, seen date and time
.------------------------------------------------------------
MHDL0000  MATCH     SP70,EMVIMPRA                * No MH practitioner
          GOTO      MHDL9999 IF EQUAL            * allocated
.         
          MATCH     EMVIMPRA,OLDDOCTO            * Deleted doctor is the same
          GOTO      MHDL9999 IF NOT EQUAL
.
          MOVE      SP70,EMVIMPRA                * Clear MH practitoner
          MOVE      SP70,EMVIMPDT                * date and time
          MOVE      SP70,EMVIMPTM
.
MHDL9999  RETURN
.------------------------------------------------------------
.        Update Nurse
.        DOCTCODE = New nurse code. Blank if deleting nurse
.-----------------------------------------------------------
NUSEEN00  CALL      XMLHED00
          BRANCH    EXIT,NUSEEN99
.
          PACK      KEY8,ADMISSNO,SP70
NUSEEN05  CALL      RLEMVIS1
          BRANCH    OVRCD,NUSEEN90,NUSEEN91
.
          MATCH     ADMISSNO,DEMVIADM
          GOTO      NUSEEN90 IF NOT EQUAL
.
          COMPARE   FOUR,EMVISTAT
          GOTO      NUSEEN90 IF EQUAL
.
          MOVE      DOCTCODE,EMVIATNS
.
          MATCH     "1",EMVITRIG           * Triage cat of RED
          GOTO      NUSEEN10 IF NOT EQUAL
.
          MATCH     SP70,EMVINSDT
          GOTO      NUSEEN20 IF NOT EQUAL
.
          MOVE      EMVIDATE,EMVINSDT    * Make seen date and time the same
          MOVE      EMVITIME,EMVINSTM    * as arrival date and time
          GOTO      NUSEEN20
.
NUSEEN10  MATCH     SP70,EMVINSDT
          GOTO      NUSEEN20 IF NOT EQUAL
.
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MOVE      KEY8,EMVINSDT                * System date
          CLOCK     TIME,EMVINSTM                * System Time
.
NUSEEN20  MATCH     DOCTCODE,SP70
          GOTO      NUSEEN50 IF NOT EQUAL
.
          CALL      NURHIS00                     * Clear nurse in history file
          BRANCH    EXIT,NUSEEN92,NUSEEN93
.
          GOTO      NUSEEN51
.
NUSEEN50  CALL      DATEVL00
.
          MOVE      "0",SUPRFLAG
          MATCH     "1",DATEVALD
          IF        @EQUAL
            MOVE      EXIT,SUPRFLAG
          ELSE
            BRANCH    EXIT,NUSEEN94
          ENDIF
.
NUSEEN51  CALL      UPEMVIS1
.
          PROC      EMRDRCHR               * Update Dr Billing complete
          CALL      ULEMVIS1                     * Unlock emr visit record
          CALL      WEDV0000                     * EDWARD visit alteration
.
.         Send update broadcast message
.
          MOVE      EMVIURNO,KEY8          * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,NUSEEN70
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,NUSEEN70
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,NUSEEN70
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TWO,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                     * send update emr details
.
NUSEEN70  MOVE      EMVIDOCT,SAVEDOCT    * Save seen date and time for History
.
          MATCH     SP70,EMVIATNS                * Dont't write history if no
          GOTO      DOSEEN80 IF EQUAL            * nurse is allocated
.
          MATCH     SP70,DOCTCODE                * Don't write a new history
          GOTO      DOSEEN80 IF EQUAL            * record as a nurse was just
.                                                * deleted
          CALL      WRTHIS00
          PROC      EMRDRCHR                     * Update Dr Billing complete
.
NUSEEN80  MOVE      SP70,DOCTCODE
          MOVE      SP70,ADMISSNO
.
          MATCH     "1",SUPRFLAG
          IF        @EQUAL
            RESET     WEBTITLE
            STRIP     WEBTITLE
            WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                               "Nurse Seen Updated. ":
                               *+,WEBTITLE:
                               ". Please fix using supervisor function.":
                               "</RETURN_VALUE>"
          ELSE
            WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                               "Nurse Seen Updated":
                               "</RETURN_VALUE>"
          ENDIF
          GOTO      NUSEEN98
.
NUSEEN90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      NUSEEN98
.
NUSEEN91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      NUSEEN98
.
NUSEEN92  CALL      ULEMVIS1
          IF        SUPRVISR=1
            WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                               "Invalid nurse deletion - Can only delete ":
                               "first nurse.":
                               "</RETURN_VALUE>"
          ELSE
            WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                               "Details Updated - Invalid nurse deletion.":
                               "</RETURN_VALUE>"
          ENDIF
          GOTO      NUSEEN98
.
NUSEEN93  CALL      ULEMVIS1
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Last Nurse deletion - Can't delete the ":
                             "last nurse. ":
                             "Please use Delete First Nurse functionality.":
                             "</RETURN_VALUE>"
          GOTO      NUSEEN98
.
NUSEEN94  CALL      ULEMVIS1                     * Unlock emr visit record
          APPEND    " not updated.",WEBTITLE
          RESET     WEBTITLE
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             WEBTITLE:
                             "</RETURN_VALUE>"
.                            
NUSEEN98  CALL      XMLEND00
NUSEEN99  RETURN
.------------------------------------------------------------
. Output Select Options for Emergency Diagnosis Search
.------------------------------------------------------------
SELEDS00  CALL      XMLHED00
          BRANCH    EXIT,SELEDS99
.
          MOVE      ZERO,RECCOUNT
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
.
          PACK      KEYWORDS,VALDCODE
.
          CALL      GETWRD00       * This routine Splits the KEYWORDS field
.                                  * into KEYWRD01 to KEYWRD10
.
          MOVE      ZERO,DIAAREND
.
          STRIP     KEYWRD01
          PACK      KEY24,KEYWRD01,SP70
          CALL      RSEMKED2
SELEDS10  CALL      RKEMKED2
          BRANCH    OVRCD,SELEDS19
.
          MATCH     KEYWRD01,EMEDKWD
          GOTO      SELEDS19 IF NOT EQUAL
.
          PACK      KEY9,EMEDITM
          CALL      RDEMICD1
          BRANCH    OVRCD,SELEDS10
.
          BRANCH    EMICACTV,SELEDS10
.
          IF        KEYWRDNO>1
            PACK      SAVKEY24,EMEDKWD,EMEDITM,SP70   * Save original key
            CALL      SELEDK00
            BRANCH    EXIT,SELEDS10
.
            MOVE      SAVKEY24,KEY24                  * Re - position record
            CALL      RDEMKED2
          ENDIF
.
          CALL      CDIA0000
          BRANCH    EXIT,SELEDS10
.
          REP       ", ",EMICDESC
          WRITE     HTMLFILE;EMIC9COD,",",EMICDESC,"|";
..          WRITE     HTMLFILE;EMICVEMD,",",EMICDESC,"|";
          ADD       ONE,RECCOUNT
          IF        RECCOUNT<900
            GOTO      SELEDS10
          ENDIF
.
SELEDS19  WRITE     HTMLFILE;"srchKey^",VALDCODE;  * Append the search keyword
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      SELEDS98
.
SELEDS90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid ??? - ":
                             VALDCODE,"</RETURN_VALUE>"
          GOTO      SELEDS98
.
SELEDS98  CALL      XMLEND00
          SFORMAT   VAR,127
SELEDS99  RETURN
.
.------------------------------------------------------------
. Check for Matching Words
.------------------------------------------------------------
SELEDK00  MOVE      ONE,F2
          MOVE      ZERO,EXIT
          PACK      SAVKEY9,EMEDITM,SP70
.
SELEDK10  COMPARE   KEYWRDNO,F2           * Loop through each Key Word in Search
          GOTO      SELEDK99 IF EQUAL     * Exit OK
          ADD       ONE,F2
          LOAD      KEYWRDXX,F2,KEYWRD01,KEYWRD02,KEYWRD03,KEYWRD04,KEYWRD05:
                             KEYWRD06,KEYWRD07,KEYWRD08,KEYWRD09,KEYWRD10
          PACK      KEY24,EMEDITM,KEYWRDXX
          CALL      RDEMKED1              * Check for Exact Match
          COMPARE   ZERO,OVRCD            * Ok so Continue Loop
          GOTO      SELEDK10 IF EQUAL
.
          CALL      RKEMKED1              * Not Exact so Read Next Record
          BRANCH    OVRCD,SELEDK90        * No Match So Exit No Match
.
          PACK      KEY9,EMEDITM,SP70
          MATCH     SAVKEY9,KEY9          * Match Key Fields
          GOTO      SELEDK90 IF NOT EQUAL * No Match So Exit
.
          STRIP     KEYWRDXX
          MATCH     EMEDKWD,KEYWRDXX         * Check Key Word
          GOTO      SELEDK90 IF NOT EQUAL * No Match So Exit
          GOTO      SELEDK10              * Check Next Search Word
.
SELEDK90  MOVE      ONE,EXIT
.
SELEDK99  RETURN
.
.------------------------------------------------------------
. Output Match For Location                        
.------------------------------------------------------------
EMRLOC00  CALL      XMLHED00
          BRANCH    EXIT,EMRLOC99
.
          STRIP     VALDCODE
          PACK      KEY3,VALDCODE,SP70
          CALL      RDEMLOC1
          BRANCH    OVRCD,EMRLOC90
.
          MATCH     "1",EMLOACTV
          GOTO      EMRLOC93 IF EQUAL
.
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,EMRLOC92
.
          CALL      VALLOC00 
          BRANCH    EXIT,EMRLOC91
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;EMLOLOCA,"|",EMLODESC,"|";
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      EMRLOC98
.
EMRLOC90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Location - ":
                             VALDCODE,"</RETURN_VALUE>"
          GOTO      EMRLOC98
.
EMRLOC91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Location occupied - ":
                             VALDCODE,"</RETURN_VALUE>"
          GOTO      EMRLOC98
.
EMRLOC92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid security id - ":
                             USERID,"</RETURN_VALUE>"
          GOTO      EMRLOC98
.
EMRLOC93  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Inactive Location - ":
                             VALDCODE,"</RETURN_VALUE>"
          GOTO      EMRLOC98
.
EMRLOC98  CALL      XMLEND00
EMRLOC99  RETURN
.------------------------------------------------------------
. Output Match For Location                        
.------------------------------------------------------------
EMRWAR00  CALL      XMLHED00
          BRANCH    EXIT,EMRWAR99
.
          STRIP     VALDCODE
          MATCH     VALDCODE,DELETE    * Delete information
          IF        @EQUAL
            PACK      KEY8,ADMISSNO,SP70
            CALL      RLEMVIS1
            BRANCH    OVRCD,EMRWAR91,EMRWAR92
.
            COMPARE   FOUR,EMVISTAT
            GOTO      EMRWAR91 IF EQUAL
.
            MOVE      SP70,EMVIUD04
            MOVE      SP70,EMVIUT04                * C CAR 42409
            MOVE      SP70,EMVIEWRD
            CALL      UPEMVIS1
            CALL      ULEMVIS1                     * Unlock emr visit record
            CALL      WEDV0000                     * EDWARD visit alteration
            PACK      KEY3,VALDCODE
            GOTO      EMRWAR93
          ENDIF
          PACK      KEY6,VALDCODE,SP70
          CALL      RDWARD1
          BRANCH    OVRCD,EMRWAR90
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RLEMVIS1
          BRANCH    OVRCD,EMRWAR91,EMRWAR92
.
          COMPARE   FOUR,EMVISTAT
          GOTO      EMRWAR91 IF EQUAL
.
          MATCH     SP70,VALDDATE
          IF        @EQUAL
            CALL      IBACLOCK
            PACK      EMVIUD04,CCC,CYY,CMM,CDD
            REP       " 0",EMVIUD04
          ELSE
            MOVE      VALDDATE,EMVIUD04
          ENDIF
.
          MATCH     SP70,VALDTIME
          IF        @EQUAL
            UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
            PACK      EMVIUT04,HOUR,COL,MIN,COL,SEC     * C CAR 42409
            REP       " 0",EMVIUT04                     * C CAR 42409
          ELSE
            MOVE      VALDTIME,EMVIUT04
          ENDIF
.
          PACK      EMVIEWRD,VALDCODE
.
          CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
          CALL      WEDV0000                     * EDWARD visit alteration
.
          UNPACK    EMVIUD04,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      DISPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;WWARD,"|",WBDESC,"|",DISPDATE,"|",EMVIUT04;
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      EMRWAR98
.
EMRWAR90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Ward - ":
                             VALDCODE,"</RETURN_VALUE>"
          GOTO      EMRWAR98
.
EMRWAR91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      EMRWAR98
.
EMRWAR92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      EMRWAR98
.
EMRWAR93  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             KEY3:
                             "</RETURN_VALUE>"
          GOTO      EMRWAR98
.
EMRWAR98  CALL      XMLEND00
EMRWAR99  RETURN
.------------------------------------------------------------
. Update date ready for departure
.------------------------------------------------------------
VALDDT00  CALL      XMLHED00
          BRANCH    EXIT,VALDDT99
.
          STRIP     VALDCODE
          MATCH     VALDCODE,DELETE    * Delete information
          IF        @EQUAL
            PACK      KEY8,ADMISSNO,SP70
            CALL      RLEMVIS1
            BRANCH    OVRCD,VALDDT91,VALDDT92
.
            COMPARE   FOUR,EMVISTAT
            GOTO      VALDDT91 IF EQUAL
.
            MOVE      SP70,EMVIUD01
            CALL      UPEMVIS1
            CALL      ULEMVIS1                     * Unlock emr visit record
            CALL      WEDV0000                     * EDWARD visit alteration
            PACK      KEY8,VALDCODE
            GOTO      VALDDT93
          ENDIF
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RLEMVIS1
          BRANCH    OVRCD,VALDDT91,VALDDT92
.
          COMPARE   FOUR,EMVISTAT
          GOTO      VALDDT91 IF EQUAL
.
          UNPACK    VALDCODE,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
          CALL      SETMTH00
          PACK      EMVIUD01,CCENT,CYEAR,CMON,CDAY
          REP       " 0",EMVIUD01
          PACK      EMVIUT01,VALDTIME
          REP       " 0",EMVIUT01
.
          CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
          CALL      WEDV0000                     * EDWARD visit alteration
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;EMVIUD01,"|";
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      VALDDT98
.
VALDDT91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      VALDDT98
.
VALDDT92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      VALDDT98
.
VALDDT93  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             KEY8:
                             "</RETURN_VALUE>"
          GOTO      VALDDT98
.
VALDDT98  CALL      XMLEND00
VALDDT99  RETURN
.------------------------------------------------------------
. Validate Category/Codes
.------------------------------------------------------------
VALCOD00  CALL      XMLHED00
          BRANCH    EXIT,VALCOD99
VALCOD10  UNPACK    VALDCODE,KEY2,KEY3
          MATCH     KEY3,DELETE    * Delete information
          IF        @EQUAL
            PACK      KEY8,ADMISSNO,SP70
            CALL      RLEMVIS1
            BRANCH    OVRCD,VALCOD92,VALCOD93
.
            COMPARE   FOUR,EMVISTAT
            GOTO      VALCOD92 IF EQUAL
.
            MOVE      SP70,EMVIUD03
            MOVE      SP70,EMVIUT03
            MOVE      SP70,EMVIUNIT
            CALL      UPEMVIS1
            CALL      ULEMVIS1                     * Unlock emr visit record
            CALL      WEDV0000                     * EDWARD visit alteration
            GOTO      VALCOD94
          ENDIF 
          PACK      KEY5,VALDCODE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,VALCOD90
          MATCH     "I",PTCOACTV
          GOTO      VALCOD91 IF EQUAL

          PACK      KEY8,ADMISSNO,SP70
          CALL      RLEMVIS1
          BRANCH    OVRCD,VALCOD92,VALCOD93
.
          COMPARE   FOUR,EMVISTAT
          GOTO      VALCOD92 IF EQUAL
.
          MOVE      EMVIUNIT,SAVEUNIT
.
          MATCH     SP70,VALDDATE
          IF        @EQUAL
            IF        PTCNHDPS=3 & EMVISTAT<>1 & EMVISTAT<>4
              MOVE      EMVIDDAT,EMVIUD03
            ELSE
              CALL      IBACLOCK
              PACK      EMVIUD03,CCC,CYY,CMM,CDD
              REP       " 0",EMVIUD03
            ENDIF
          ELSE
            MOVE      VALDDATE,EMVIUD03
          ENDIF
.
          MATCH     SP70,VALDTIME
          IF        @EQUAL
            IF        PTCNHDPS=3 & EMVISTAT<>1 & EMVISTAT<>4
              MOVE      EMVIDTIM,EMVIUT03
            ELSE
              UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
              PACK      EMVIUT03,HOUR,COL,MIN,COL,SEC
              REP       " 0",EMVIUT03
            ENDIF
          ELSE
            MOVE      VALDTIME,EMVIUT03
          ENDIF
.
          PACK      EMVIUNIT,ACODE    
.
          CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
          CALL      WEDV0000                     * EDWARD visit alteration
          IF        CCCNSVHM = 1
            OPEN      CCIEX7A1,"cciex7af"
            IF        EMVISTAT=2|EMVISTAT=3
              MATCH     EMVIUNIT,SAVEUNIT
              IF        !@EQUAL
                MOVE      ANST,CLEXSTAT
                MOVE      ONE,CLEXTYPE
                MOVE      EMVIADMN,CLEXVISN
                PACK      KEY11,CLEXSTAT,CLEXTYPE,CLEXVISN
                CALL      RDCLEX71
                IF        OVRCD = 1
                  CALL      WRCLEX71
                ENDIF    
              ENDIF
            ENDIF
            CLOSE     CCIEX7A1  
          ENDIF     
.
          UNPACK    EMVIUD03,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      DISPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             TDESC,"|",DISPDATE,"|",EMVIUT03:
                             "</RETURN_VALUE>"
.
          GOTO      VALCOD98
.
VALCOD90  UNPACK    KEY5,KEY2,KEY3
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Code - ",KEY3:
                             " Category - ",KEY2,"</RETURN_VALUE>"
          GOTO      VALCOD98
.
VALCOD91  UNPACK    KEY5,KEY2,KEY3
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Code Inactive - ",KEY3:
                             " Category - ",KEY2,"</RETURN_VALUE>"
          GOTO      VALCOD98
.
VALCOD92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      VALCOD98
.
VALCOD93  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      VALCOD98
.
VALCOD94  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             KEY3:
                             "</RETURN_VALUE>"
          GOTO      VALCOD98
.
VALCOD98  CALL      XMLEND00
VALCOD99  RETURN
.------------------------------------------------------------
. Locking the clinical Notes                        
.------------------------------------------------------------
LOCLIN00  CALL      XMLHED00
          BRANCH    EXIT,LOCLIN99
.
LOCLIN10  MOVE      ZERO,LOCKED
          MOVE      "001",VSCTTYPE
          MOVE      "  1",DIM3
          MOVE      SP70,SAVEUSER
          MOVE      SP70,DATETIME
          PACK      KEY14,ADMISSNO,VSCTTYPE,DIM3,SP70
          CALL      RDVSCMT1
          BRANCH    OVRCD,LOCLIN50
.
          PACK      VSCTUKEY,VSCTUKEY,SP70
          UNPACK    VSCTUKEY,DATETIME,SAVEUSER
          MATCH     SP70,DATETIME
          GOTO      LOCLIN40 IF EQUAL
.
          PACK      SAVEUSER,SAVEUSER,SP70
          MATCH     SP70,SAVEUSER
          IF        !@EQUAL
            MATCH     USERID,SAVEUSER
            IF        !@EQUAL
              MOVE      ONE,LOCKED
              GOTO      LOCLIN80
            ENDIF
          ENDIF
.    
          UNPACK    UPDATEKY,KEY8,KEY14
          MATCH     DATETIME,KEY14
          IF        @LESS
            MOVE      TWO,LOCKED 
            GOTO      LOCLIN80
          ENDIF
.
LOCLIN40  UNPACK    UPDATEKY,KEY8,KEY14
          PACK      VSCTUKEY,KEY14,WEBUSEID
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          CALL      UPVSCMT1
          TRAPCLR   IO
          GOTO      LOCLIN80
.
LOCLIN50  MOVE      ADMISSNO,VSCTVIST
          MOVE      "001",VSCTTYPE
          UNPACK    UPDATEKY,KEY8,KEY14
          PACK      VSCTUKEY,KEY14,WEBUSEID
          MOVE      DIM3,VSCTLINE
          PACK      VSCTDATA,SP70,SP70
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          CALL      WRVSCMT1
          TRAPCLR   IO
          GOTO      LOCLIN80
.
LOCLIN80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;LOCKED,"|",SAVEUSER,"|",;
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      LOCLIN98
.
LOCLIN91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid User - ":
                             VALDCODE,"</RETURN_VALUE>"
          GOTO      LOCLIN98
.
LOCLIN98  CALL      XMLEND00
LOCLIN99  RETURN
.------------------------------------------------------------
. Locking the Diagnosis Notes                        
.------------------------------------------------------------
LOCDIA00  CALL      XMLHED00
          BRANCH    EXIT,LOCDIA99
.
          MOVE      ZERO,LOCKED
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMDCM1
          IF        OVRCD=1
            MOVE      ADMISSNO,EMDCADMI      * Updating diagnosis comments
            MOVE      SP70,EMDCTXT1
            MOVE      SP70,EMDCTXT2
            MOVE      SP70,EMDCTXT3
            MOVE      SP70,EMDCTXT4
            MOVE      SP70,EMDCTXT5
            MOVE      SP70,EMDCTXT6
            MOVE      SP70,EMDCTXT7
            MOVE      SP70,EMDCTXT8
            MOVE      SP70,EMDCTXT9
            MOVE      WEBUSEID,EMDCLUID
            MOVE      SP70,EMDCSPAR
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WREMDCM1
            TRAPCLR   IO 
          ELSE
            MATCH     SP70,EMDCLUID
            IF        !@EQUAL
              MATCH     WEBUSEID,EMDCLUID
              IF        @EQUAL
                MOVE      SP70,EMDCLUID     * clear locked user id since same
                CALL      UPEMDCM1
              ELSE
                MOVE      ONE,LOCKED
              ENDIF
            ELSE
              MOVE      ADMISSNO,EMDCADMI   * Updating diagnosis comments
              MOVE      WEBUSEID,EMDCLUID
              CALL      UPEMDCM1
            ENDIF
          ENDIF
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;LOCKED,"|",EMDCLUID,"|";
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      LOCDIA98
.
LOCDIA91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid User - ":
                             VALDCODE,"</RETURN_VALUE>"
          GOTO      LOCDIA98
.
LOCDIA98  CALL      XMLEND00
LOCDIA99  RETURN
.------------------------------------------------------------
. Locking the Procedure Notes                        
.------------------------------------------------------------
LOCPRD00  CALL      XMLHED00
          BRANCH    EXIT,LOCPRD99
.
          MOVE      ZERO,LOCKED
          PACK      KEY11,ADMISSNO,TYPE4,SP70
          CALL      RDEMLCK1
          BRANCH    OVRCD,LOCPRD50
          MATCH     WEBUSEID,EMLOUSER
          GOTO      LOCPRD80 IF EQUAL
.
          MOVE      ONE,LOCKED
          GOTO      LOCPRD80
.
LOCPRD50  MOVE      ADMISSNO,EMLOVIST
          MOVE      "004",EMLOTYPS
          MOVE      WEBUSEID,EMLOUSER
          CALL      WREMLCK1
          MOVE      ZERO,LOCKED
.
LOCPRD80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
.
          PACK      KEY10,EMLOUSER,SP70
          CALL      RDWBSE1
          IF        OVRCD=0
            WRITE     HTMLFILE;LOCKED,"|",EMLOUSER,"|",WBSENAM,"|";
          ELSE
            WRITE     HTMLFILE;LOCKED,"|",EMLOUSER,"|",EMLOUSER,"|";
          ENDIF
.
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      LOCPRD98
.
LOCPRD98  CALL      XMLEND00
LOCPRD99  RETURN
.------------------------------------------------------------
. UnLocking the Procedure Notes                        
.------------------------------------------------------------
UNLOCK00  CALL      XMLHED00
          BRANCH    EXIT,UNLOCK99
.
          MOVE      ZERO,LOCKED
          PACK      KEY11,ADMISSNO,TYPE4,SP70
          CALL      RDEMLCK1
          BRANCH    OVRCD,UNLOCK98 

          CALL      DEEMLCK1
.
UNLOCK98  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;"</RETURN_VALUE>"
.
          CALL      XMLEND00
UNLOCK99  RETURN
.------------------------------------------------------------
. Validate Emergency Doctor
.------------------------------------------------------------
VALDOC00  CALL      XMLHED00
          BRANCH    EXIT,VALDOC99
          PACK      KEY10,VALDCODE,SP70
          CALL      RDEMDO1
          BRANCH    OVRCD,VALDOC90
.
          IF        INACTFLG = 1
            GOTO      VALDOC85         * Return a flag for doctor status
          ENDIF
.
          MATCH     "0",EMDOACT   
          GOTO      VALDOC91 IF EQUAL
          IF        ATTFLAG=1
            MATCH     "1",EMDOACT
            GOTO      VALDOC95 IF NOT EQUAL
          ENDIF
.
VALDOC80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             EMDODNM:
                             "</RETURN_VALUE>"
          GOTO      VALDOC98
.
VALDOC85  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             EMDODNM,"|",EMDOACT:
                             "</RETURN_VALUE>"
          GOTO      VALDOC98
.
VALDOC90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid EMR Doctor Code - ":
                              KEY10,"</RETURN_VALUE>"
          GOTO      VALDOC98
.
VALDOC91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "EMR Doctor Inactive - ":
                              KEY10,"</RETURN_VALUE>"
          GOTO      VALDOC98
.
VALDOC95  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid EMR Doctor Status - ":
                              KEY10,"</RETURN_VALUE>"
          GOTO      VALDOC98
.
VALDOC98  CALL      XMLEND00
.
VALDOC99  MOVE      ZERO,ATTFLAG
          MOVE      ZERO,INACTFLG
          RETURN
.------------------------------------------------------------
. Unlock Clinical Notes if it is the same User                         *I-57698
.------------------------------------------------------------
UNLCLN00  CALL      XMLHED00
          BRANCH    EXIT,UNLCLN99
.
          PACK      KEY14,ADMISSNO,ZERO,ZERO,ONE,SP1,SP1,ONE,SP70
          CALL      RDVSCMT1
          BRANCH    OVRCD,UNLCLN90
.
          UNPACK    VSCTUKEY,KEY14,KEY10
.
          SQUEEZE   KEY10
          SQUEEZE   WEBUSEID
          MATCH     KEY10,WEBUSEID
          IF        @EQUAL
            PACK      VSCTUKEY,KEY14,SP70
            CALL      UPVSCMT1
          ENDIF
.
UNLCLN90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;"</RETURN_VALUE>"
.
          CALL      XMLEND00
UNLCLN99  RETURN
+
.------------------------------------------------------------
.         Write history record
.------------------------------------------------------------
WRTHIS00  MOVE      SP70,SAVEDRDT
          MOVE      SP70,SAVEDRTM
          MOVE      SP70,SAVENRDT
          MOVE      SP70,SAVENRTM
          MOVE      SP70,SAVEDOCT
          MOVE      SP70,SAVENURS
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
WRTHIS05  CALL      RPEMHIS1
          BRANCH    OVRCD,WRTHIS10
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      WRTHIS10 IF NOT EQUAL
.
          MOVE      EMHIDSD,SAVEDRDT
          MOVE      EMHIDST,SAVEDRTM
          MOVE      EMHINSD,SAVENRDT
          MOVE      EMHINST,SAVENRTM
          MOVE      EMHIDOC,SAVEDOCT
          MOVE      EMHINUR,SAVENURS
.
WRTHIS10  MOVE      EMVIADMN,EMHIVIS
          CLOCK     TIME,CTIMEIS
.
          PACK      EMHIDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMHIDAT
          UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
          PACK      EMHITIM,HOUR,MIN,SEC
          REP       " 0",EMHITIM
.
          MATCH     SAVEDOCT,EMVIDOCT       * Is this a new doctor?
          IF        @EQUAL
            MOVE      SAVEDRDT,EMHIDSD      * Restore current doctor date and
            MOVE      SAVEDRTM,EMHIDST      * time
          ELSE
            MATCH     "1",EMVITRIG           * Triage cat of RED
            IF        @EQUAL
              MATCH     SP70,SAVEDOCT
              IF        @EQUAL
                MOVE      EMVIDATE,EMHIDSD   * Make seen date/time the same as
                UNPACK    EMVITIME,HOUR,D1,MIN,D1,SEC * arrival date/time if
                PACK      EMHIDST,HOUR,MIN,SEC        * first doctor
                REP       " 0",EMHIDST
              ELSE
                PACK      EMHIDSD,CCC,CYY,CMM,CDD * New doctor so seen date/time
                REP       " 0",EMHIDSD            * are set the current/time
                PACK      EMHIDST,HOUR,MIN,SEC
                REP       " 0",EMHIDST
              ENDIF
            ELSE
              PACK      EMHIDSD,CCC,CYY,CMM,CDD * New doctor so seen date/time
              REP       " 0",EMHIDSD            * are set the current/time
              PACK      EMHIDST,HOUR,MIN,SEC
              REP       " 0",EMHIDST
            ENDIF
          ENDIF
.
          MATCH     SAVENURS,EMVIATNS       * Is this a new nurse?
          IF        @EQUAL
            MOVE      SAVENRDT,EMHINSD      * Restore current nurse date and
            MOVE      SAVENRTM,EMHINST      * time
          ELSE
            MATCH     "1",EMVITRIG          * Triage cat of RED
            IF        @EQUAL
              MATCH     SP70,SAVENURS
              IF        @EQUAL
                MOVE      EMVIDATE,EMHINSD   * Make seen date/time the same as
                UNPACK    EMVITIME,HOUR,D1,MIN,D1,SEC * arrival date/time if
                PACK      EMHINST,HOUR,MIN,SEC        * first doctor
                REP       " 0",EMHINST
              ELSE
                PACK      EMHINSD,CCC,CYY,CMM,CDD *New nurse so seen date/time
                REP       " 0",EMHINSD            *are set the current and time
                PACK      EMHINST,HOUR,MIN,SEC
                REP       " 0",EMHINST
              ENDIF
            ELSE
              PACK      EMHINSD,CCC,CYY,CMM,CDD *New nurse so seen date and time
              REP       " 0",EMHINSD            *are set the current and time
              PACK      EMHINST,HOUR,MIN,SEC
              REP       " 0",EMHINST
            ENDIF
          ENDIF
.
WRTHIS40  MOVE      UPDTTYPE,EMHIUPT
.
          MATCH     SP70,WEBUSEID
          IF        !@EQUAL
            MOVE      WEBUSEID,EMHIEUS
          ELSE
            MOVE      USERID,EMHIEUS
          ENDIF
.
          MOVE      EMVILOCN,EMHILOC
          MOVE      EMVIDOCT,EMHIDOC
          MOVE      EMVIATNS,EMHINUR
          PACK      EMHISPA,SP70,SP70
          PACK      EMHIDSD,EMHIDSD,SP70
          PACK      EMHIDST,EMHIDST,SP70
          PACK      EMHINSD,EMHINSD,SP70
          PACK      EMHINST,EMHINST,SP70
.
          MOVE      REASONHO,EMHIRHND
.
          MATCH     SP70,EMHINUR
          IF        @EQUAL
            MOVE      SP70,EMHINSD
            MOVE      SP70,EMHINST
          ENDIF
.
          MATCH     SP70,EMHIDOC
          IF        @EQUAL
            MOVE      SP70,EMHIDSD
            MOVE      SP70,EMHIDST
          ENDIF
.
          CALL      IBACLOCK
          PACK      EMHICDAT,CCC,CYY,CMM,CDD  * Date Record Created (ccyymmdd)
          REP       " 0",EMHICDAT
          CLOCK     TIME,EMHICTIM             * Time Record Created (hh:mm:ss)
          MOVE      USERID,EMHICUID           * Web User Id Created (websecaf)
.
          MOVE      SP70,EMHIUDAT      * Date Record Updated (ccyymmdd)
          MOVE      SP70,EMHIUTIM      * Time Record Updated (hh:mm:ss)
          MOVE      SP70,EMHIUUID      * Web User Id Updated (websecaf)
.
WRTHIS80  PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
          CALL      RAEMHIS1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            MOVE      SP70,EMHIDRBC          * Dr Billing Complete
            CALL      WREMHIS1
            TRAPCLR   IO
            BRANCH    OVRCD,WRTHIS85             * Add one second and try again
.
          ELSE
WRTHIS85    CALL      IBACLOCK                   * Set new date and time and
            PACK      EMHIDAT,CCC,CYY,CMM,CDD    * try write again
            REP       " 0",EMHIDAT
            CLOCK     TIME,CTIMEIS
            UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
            PACK      EMHITIM,HOUR,MIN,SEC
            REP       " 0",EMHITIM
            GOTO      WRTHIS80
          ENDIF
.
          MOVE      ZERO,EXIT
.
WRTHIS99  RETURN
.------------------------------------------------------------
. Allow deletion of a doctor if the doctor allocation is the  
. last history file record. Then loop back to find the new doctor
. and delete the history for the old doctor
.
. Allow the deletion of the first doctor regardless of history record
. if they have NOT added a procedure or diagnosis
.
. Allow supervisor deletion of the first doctor regardless of history record
. even if they have added a procedure or diagnosis
.------------------------------------------------------------
REDHIS00  MOVE      SP70,NEWDOCTO      * New doctor to allocate to emrvisaf
          MOVE      SP70,NEWDOCDT      * New doctor date to allocate to emrvisaf
          MOVE      SP70,NEWDOCTM      * New doctor time to allocate to emrvisaf
          MOVE      SP70,OLDDOCTO      * Deleted doctor
          MOVE      SP70,OLDDOCDT      * Deleted doctor date 
          MOVE      SP70,OLDDOCTM      * Deleted doctor time
          
          MOVE      SP70,SAVKEY22      * Save position to delete history
          MOVE      ONE,FIRSTFLG       * set first doctor indicator to true   
          MOVE      ZERO,EXIT
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
REDHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,REDHIS40
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      REDHIS95 IF NOT EQUAL
.
          IF        EMCNDDTM=1
            MATCH     "TRIAG",EMHIUPT
            IF        @EQUAL
              MATCH     SP70,EMHIDOC             * Doctor allocated at triage
              GOTO      REDHIS15 IF NOT EQUAL
            ENDIF
          ENDIF
.
          MATCH     "ALDOC",EMHIUPT  
          GOTO      REDHIS10 IF NOT EQUAL
.
.         Check for supervisor delete
.
REDHIS15  COMPARE   ONE,SUPRVISR
          GOTO      REDHIS30 IF NOT EQUAL
.
.         Supervisor doctor delete
.
          PACK      SAVKEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70  * Save key for delete
          MOVE      EMHIDOC,OLDDOCTO        * Deleted doctor 
          MOVE      EMHIDSD,OLDDOCDT        * Deleted doctor date
          MOVE      EMHIDST,OLDDOCTM        * Deleted doctor time
.
REDHIS20  CALL      RKEMHIS1
          BRANCH    OVRCD,REDHIS60
. 
          MATCH     ADMISSNO,EMHIVIS
          GOTO      REDHIS60 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT  
          GOTO      REDHIS20 IF NOT EQUAL
.
          MOVE      ZERO,FIRSTFLG             * not a first doctor
          GOTO      REDHIS95         
.
.         Non-supervisor doctor delete
.
REDHIS30  CALL      RKEMHIS1
          BRANCH    OVRCD,REDHIS40
. 
          MATCH     ADMISSNO,EMHIVIS
          GOTO      REDHIS40 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT  
          GOTO      REDHIS30 IF NOT EQUAL
.
          MOVE      ZERO,FIRSTFLG             * not a first doctor
.
REDHIS40  IF        DELTLAST=1
            IF        FIRSTFLAG=1
              MOVE      TWO,EXIT              * Delete last doctor not allow
              GOTO      REDHIS99              * to delete the first doctor
            ENDIF
          ENDIF
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
REDHIS45  CALL      RPEMHIS1
          BRANCH    OVRCD,REDHIS95
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      REDHIS95 IF NOT EQUAL
.
.         First doctor cannot be deleted if procedure or Diagnosis 
.         has been added
.
          COMPARE   ONE,FIRSTFLG
          IF        @EQUAL
            MATCH     "EMRP",EMHIUPT          * EMR Procedure
            GOTO      REDHIS95 IF EQUAL 
.
            MATCH     "EMRD",EMHIUPT          * EMR Diagnosis
            GOTO      REDHIS95 IF EQUAL
.
            MATCH     "ALDOC",EMHIUPT         * when reached original record
            GOTO      REDHIS50 IF EQUAL
.
            IF        EMCNDDTM=1
              MATCH     "TRIAG",EMHIUPT
              IF        @EQUAL
                MATCH     SP70,EMHIDOC             * Doctor allocated at triage
                GOTO      REDHIS50 IF NOT EQUAL
              ENDIF
            ENDIF
.
            GOTO      REDHIS45                * Check previous record 
          ENDIF
. 
. Ignore Management notes
.
          MATCH     "MGNOT",EMHIUPT
          GOTO      REDHIS45 IF EQUAL
.         
.         Other doctor can only be deleted if nothing has been added yet.
.         Allow delete of last doctor regardless of last history record if
.         using the supervisor delete last doctor.
.
          IF        DELTLAST=1
            MATCH     "ALDOC",EMHIUPT       * Loop backwards to find doctor
            GOTO      REDHIS45 IF NOT EQUAL * allocation history record
          ELSE
            MATCH     "ALDOC",EMHIUPT  
            GOTO      REDHIS95 IF NOT EQUAL
          ENDIF
.
REDHIS50  PACK      SAVKEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70  * Save key for delete
          MOVE      EMHIDOC,OLDDOCTO        * Deleted doctor 
          MOVE      EMHIDSD,OLDDOCDT        * Deleted doctor date
          MOVE      EMHIDST,OLDDOCTM        * Deleted doctor time
.
          CALL      RPEMHIS1
          BRANCH    OVRCD,REDHIS95
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      REDHIS95 IF NOT EQUAL
.         
          MOVE      EMHIDOC,NEWDOCTO        * This will be the new doctor 
          MOVE      EMHIDSD,NEWDOCDT        * This will be the new doctor date
          MOVE      EMHIDST,NEWDOCTM        * This will be the new doctor time
. 
REDHIS60  MOVE      SAVKEY22,KEY22          * Remove doctor allocation record
          IF        EMCNDDTM=1 & FIRSTFLG=1
            CALL      RDEMHIS1
            IF        OVRCD=0
              MATCH     "TRIAG",EMHIUPT
              IF        @EQUAL
                UNPACK    SP70,EMHIDOC,EMHIDSD,EMHIDST
                MOVE      SP70,EMHIDRBC     * Dr Billing in-Complete
                CALL      UPEMHIS1          * Clear allocated doctor if
                GOTO      REDHIS65          * allocated at triage
              ENDIF
            ENDIF
          ENDIF
.
.         Update 'obspcoaf' if this is a 'Delete Last Doctor Allocated'
.
          COMPARE   ONE,DELTLAST
          GOTO      REDHIS64 IF NOT EQUAL
.
          MATCH     "1",EMCNUDHF            * Using the Doctor Handover Form?
          GOTO      REDHIS64 IF NOT EQUAL
.
          PACK      KEY28,EMHIVIS,Z70
          CALL      RSOBPC2
REDHIS61  CALL      RPOBPC2
          BRANCH    OVRCD,REDHIS64
.
          MATCH     OLDDOCDT,OBPCINDT
          GOTO      REDHIS61 IF NOT EQUAL
.
          UNPACK    OBPCINTM,DIM2,DIM1,KEY2,DIM1,D2
          PACK      KEY6,DIM2,KEY2,D2
          MATCH     OLDDOCTM,KEY6
          GOTO      REDHIS61 IF NOT EQUAL
.
.         Now we loop through category 'wo' and use the first code with a value
.         of 'D' in indicator 1 as the reason for delete.
.
          MOVE      "wo",DIM2
          PACK      KEY5,DIM2,SP70
          CALL      RDSCODE1
REDHIS62  CALL      RDKCODE1
          BRANCH    OVRCD,REDHIS63
.
          MATCH     "wo",TCODE
          GOTO      REDHIS63 IF NOT EQUAL
.
          MATCH     "D",TCINDC1
          GOTO      REDHIS62 IF NOT EQUAL
.
          MOVE      ACODE,OBPCUDF1
.
REDHIS63  MOVE      ONE,OBPCMDEL
          CALL      UPOBPC2
.
REDHIS64  CALL      DEEMHIS1
.
REDHIS65  IF        DELTLAST=1
            CALL      DCHIST00              * Change doctor in history records
            GOTO      REDHIS90
          ENDIF
.
          COMPARE   ONE,FIRSTFLG            * Is it a first doctor deletion
          GOTO      REDHIS90 IF NOT EQUAL
.
          CALL      DDHIST00                * Clear doctor details in hist file
.
REDHIS90  MOVE      NEWDOCTO,EMVIDOCT
          MATCH     SP70,NEWDOCTO           * Will the new doctor be blank
          GOTO      REDHIS99 IF NOT EQUAL
.
          MOVE      SP70,EMVIDOCT           * Clear date/time if no doctor
          MOVE      SP70,EMVIDRDT 
          MOVE      SP70,EMVIDRTM
          GOTO      REDHIS99
.
REDHIS95  MOVE      ONE,EXIT                * Delete Not Allowed
.
REDHIS99  RETURN
+
.------------------------------------------------------------
. Allow deletion of a nurse code regardless of history transactions
. if only one nurse is allocated. If multiple nurses are allocated 
. the nurse allocation record must be the last history transaction record.
.------------------------------------------------------------
NURHIS00  MOVE      SP70,NEWNURSE      * New nurse to allocate to emrvisaf
          MOVE      SP70,NEWNURDT      * New nurse date to allocate to emrvisaf
          MOVE      SP70,NEWNURTM      * New nurse time to allocate to emrvisaf
          MOVE      SP70,OLDNURSE      * Deleted nurse
          MOVE      SP70,OLDNURDT      * Deleted nurse date
          MOVE      SP70,OLDNURTM      * Deleted nurse time
.
          MOVE      SP70,SAVKEY22      * Save position to delete history
          MOVE      ONE,FIRSTFLG       * set first nurse indicator to true
          MOVE      ZERO,EXIT
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
NURHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,NURHIS40
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NURHIS95 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      NURHIS10 IF NOT EQUAL
.
.         Check for supervisor delete
.
NURHIS15  COMPARE   ONE,SUPRVISR
          GOTO      NURHIS30 IF NOT EQUAL
.
.         Supervisor nurse delete
.
          PACK      SAVKEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70  * Save key for delete
          MOVE      EMHINUR,OLDNURSE        * Deleted nurse
          MOVE      EMHINSD,OLDNURDT        * Deleted nurse date
          MOVE      EMHINST,OLDNURTM        * Deleted nurse time
.
NURHIS20  CALL      RKEMHIS1
          BRANCH    OVRCD,NURHIS60
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NURHIS30 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT         * Find anymore nurse allocations
          GOTO      NURHIS20 IF NOT EQUAL
.
          MOVE      ZERO,FIRSTFLG           * Yes multiple nurses allocated
          GOTO      NURHIS95                * Bail; can't delete first nurse
.
.         Non-supervisor nurse delete
.
NURHIS30  CALL      RKEMHIS1
          BRANCH    OVRCD,NURHIS40
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NURHIS40 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      NURHIS30 IF NOT EQUAL
.
          MOVE      ZERO,FIRSTFLG             * not a first nurse
.
NURHIS40  IF        DELTLAST=1
            IF        FIRSTFLAG=1
              MOVE      TWO,EXIT              * Delete last nurse not allowed
              GOTO      NURHIS99              * to delete the first nurse
            ENDIF
          ENDIF
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
NURHIS45  CALL      RPEMHIS1
          BRANCH    OVRCD,NURHIS95
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NURHIS95 IF NOT EQUAL
.
          COMPARE   ONE,FIRSTFLG
          IF        @EQUAL
            MATCH     "ALNUR",EMHIUPT         * when reached original record
            GOTO      NURHIS50 IF EQUAL
.
            GOTO      NURHIS45                * Check previous record
          ENDIF
. 
. Ignore Management notes
.
          MATCH     "MGNOT",EMHIUPT
          GOTO      NURHIS45 IF EQUAL
.
.         Other nurse can only be deleted if nothing has been added yet.
.         Allow delete of last nurse regardless of last history record if
.         using the supervisor delete last nurse.
.
          IF        DELTLAST=1
            MATCH     "ALNUR",EMHIUPT         * Loop backwards to find nurse
            GOTO      NURHIS45 IF NOT EQUAL   * allocation history record
          ELSE
            MATCH     "ALNUR",EMHIUPT         * Multiple nurses so allocation
            GOTO      NURHIS95 IF NOT EQUAL   * must be last history record
          ENDIF
.
NURHIS50  PACK      SAVKEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70  * Save key for delete
          MOVE      EMHINUR,OLDNURSE        * Deleted nurse
          MOVE      EMHINSD,OLDNURDT        * Deleted nurse date
          MOVE      EMHINST,OLDNURTM        * Deleted nurse time
.
          CALL      RPEMHIS1
          BRANCH    OVRCD,NURHIS95
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NURHIS95 IF NOT EQUAL
.
          MOVE      EMHINUR,NEWNURSE        * This will be the new nurse
          MOVE      EMHINSD,NEWNURDT        * This will be the new nurse date
          MOVE      EMHINST,NEWNURTM        * This will be the new nurse time
.
NURHIS60  MOVE      SAVKEY22,KEY22          * Remove nurse allocation record
          IF        EMCNDDTM=1 & FIRSTFLG=1
            CALL      RDEMHIS1
.           IF        OVRCD=0
.             MATCH     "TRIAG",EMHIUPT
.             IF        @EQUAL
.               UNPACK    SP70,EMHINUR,EMHINSD,EMHINST
.               CALL      UPEMHIS1          * Clear allocated nurse if
.               GOTO      NURHIS65          * allocated at triage
.             ENDIF
.           ENDIF
          ENDIF
.
          CALL      DEEMHIS1
.
NURHIS65  IF        DELTLAST=1
            CALL      NCHIST00              * Change nurse in history records
            GOTO      NURHIS90
          ENDIF
.
          COMPARE   ONE,FIRSTFLG            * Is it a first nurse deletion
          GOTO      NURHIS90 IF NOT EQUAL
.
          CALL      DNHIST00                * Clear nurse details in hist file
.
NURHIS90  MOVE      NEWNURSE,EMVIATNS
          MATCH     SP70,NEWNURSE           * Will the new nurse be blank?
          GOTO      NURHIS99 IF NOT EQUAL
.
          MOVE      SP70,EMVIATNS           * Clear date/time if no nurse
          MOVE      SP70,EMVINSDT           * Make seen date and time the same
          MOVE      SP70,EMVINSTM           * as arrival date and time
          GOTO      NURHIS99
.
NURHIS95  MOVE      ONE,EXIT                * Delete Not Allowed
.
NURHIS99  RETURN
+
.------------------------------------------------------------
. Clear doctor,date and time in history records after deleting
. a first doctor allocation
.------------------------------------------------------------
DDHIST00  IF        SUPRVISR=1
            MOVE      "12",UPDFIELD
            PACK      UPDVALUE,OLDDOCTO,OLDDOCDT,OLDDOCTM,SP70
            PACK      NEWVALUE,SP70,SP70
            CALL      WRCHA000                * Write data integrity audit
          ENDIF
.
          MOVE      SAVKEY22,KEY22        
          CALL      RSEMHIS1
DDHIST10  CALL      RKEMHIS1
          BRANCH    OVRCD,DDHIST99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      DDHIST99 IF NOT EQUAL
.
          MOVE      SP70,EMHIDOC
          MOVE      SP70,EMHIDSD
          MOVE      SP70,EMHIDST
          MOVE      SP70,EMHIRHND
          MOVE      SP70,EMHIDRBC     * Dr Billing in-Complete
.
          CALL      UPEMHIS1
.
          GOTO      DDHIST10
.
DDHIST99  RETURN
+
.------------------------------------------------------------
. Clear nurse,date and time in history records after deleting
. a first nurse allocation
.------------------------------------------------------------
DNHIST00  IF        SUPRVISR=1
            MOVE      "09",UPDFIELD
            PACK      UPDVALUE,OLDNURSE,OLDNURDT,OLDNURTM,SP70
            PACK      NEWVALUE,SP70,SP70
            CALL      WRCHA000                * Write data integrity audit
          ENDIF
.
          MOVE      SAVKEY22,KEY22
          CALL      RSEMHIS1
DNHIST10  CALL      RKEMHIS1
          BRANCH    OVRCD,DNHIST99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      DNHIST99 IF NOT EQUAL
.
          MOVE      SP70,EMHINUR
          MOVE      SP70,EMHINSD
          MOVE      SP70,EMHINST
          MOVE      SP70,EMHIRHND
.
          CALL      UPEMHIS1
.
          GOTO      DNHIST10
.
DNHIST99  RETURN
+
.------------------------------------------------------------
. Update doctor in history records after deleting
. the last doctor allocation
.------------------------------------------------------------
DCHIST00  MOVE      "13",UPDFIELD
          PACK      UPDVALUE,OLDDOCTO,OLDDOCDT,OLDDOCTM,SP70
          PACK      NEWVALUE,NEWDOCTO,NEWDOCDT,NEWDOCTM,SP70
          CALL      WRCHA000                * Write data integrity audit
.
          MOVE      SAVKEY22,KEY22
          CALL      RSEMHIS1
DCHIST10  CALL      RKEMHIS1
          BRANCH    OVRCD,DCHIST99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      DCHIST99 IF NOT EQUAL
.
          MOVE      NEWDOCTO,EMHIDOC
          MOVE      NEWDOCDT,EMHIDSD
          MOVE      NEWDOCTM,EMHIDST
          MOVE      SP70,EMHIDRBC     * Dr Billing in-Complete
.
          CALL      UPEMHIS1
.
          GOTO      DCHIST10
.
DCHIST99  RETURN
+
.------------------------------------------------------------
. Update nurse in history records after deleting
. the last nurse allocation
.------------------------------------------------------------
NCHIST00  MOVE      "09",UPDFIELD
          PACK      UPDVALUE,OLDNURSE,OLDNURDT,OLDNURTM,SP70
          PACK      NEWVALUE,NEWNURSE,NEWNURDT,NEWNURTM,SP70
          CALL      WRCHA000                * Write data integrity audit
. 
          MOVE      SAVKEY22,KEY22
          CALL      RSEMHIS1
NCHIST10  CALL      RKEMHIS1
          BRANCH    OVRCD,NCHIST99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NCHIST99 IF NOT EQUAL
.
          MOVE      NEWNURSE,EMHINUR
          MOVE      NEWNURDT,EMHINSD
          MOVE      NEWNURTM,EMHINST
.
          CALL      UPEMHIS1
.
          GOTO      NCHIST10
.
NCHIST99  RETURN
+
.------------------------------------------------------------
.        Update Doctor Seen date/time 
.        ADMISSNO = Admission number
.        DOCTDATE = New doctor seen date
.        DOCTTIME = New doctor seen time
.-----------------------------------------------------------
DOCDAT00  CALL      XMLHED00
          BRANCH    EXIT,DOCDAT99
.
          MOVE      ZERO,EXIT
          CALL      CHGDT000
          BRANCH    EXIT,DOCDAT90,DOCDAT91,DOCDAT92,DOCDAT93,DOCDAT94
.
DOCDAT80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Doctor Seen Updated":
                             "</RETURN_VALUE>"
          GOTO      DOCDAT98
.
DOCDAT90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Doctor Seen Date/Time before Arrival Date/Time":
                             "</RETURN_VALUE>"
          GOTO      DOCDAT98
.
DOCDAT91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                            "Doctor Seen Date/Time is after Dischage Date/Time":
                             "</RETURN_VALUE>"
          GOTO      DOCDAT98
.
DOCDAT92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Doctor allocated Seen Date/Time are Mandatory":
                             "</RETURN_VALUE>"
          GOTO      DOCDAT98
.
DOCDAT93  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "No Doctor allocated Seen Date/Time must be blank":
                             "</RETURN_VALUE>"
          GOTO      DOCDAT98
.
DOCDAT94  SQUEEZE   EMCNBAKH
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Doctor Seen Date/Time can't be backdated ":
                             "more than ",*+,EMCNBAKH,*-," hours ":
                             "</RETURN_VALUE>"
          RESET     EMCNBAKH
          GOTO      DOCDAT98
.
DOCDAT98  CALL      XMLEND00
DOCDAT99  RETURN
.
.-----------------------------------------------------------
. Update doctor seen date / time
.------------------------------------------------------------
CHGDT000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,CHGDT999
.
          COMPARE   FOUR,EMVISTAT
          GOTO      CHGDT999 IF EQUAL
.
          PACK      KEY16,EMVIDATE,EMVITIME,SP70
          REP       ":0",KEY16
          PACK      SAVKEY16,DOCTDATE,DOCTTIME,SP70
          REP       ":0",SAVKEY16
.
          MATCH     SP70,SAVKEY16     * Can't allocate date/time if no doctor
          IF        !@EQUAL
            MATCH     SP70,EMVIDOCT
            GOTO      CHGDT100 IF NOT EQUAL
.
            MOVE      FOUR,EXIT
            GOTO      CHGDT999
          ENDIF
.
CHGDT100  MATCH     SP70,SAVKEY16     * Allow clear of date/time if no doctor
          IF        @EQUAL
            MATCH     SP70,EMVIDOCT
            GOTO      CHGDT900 IF EQUAL
.
            MOVE      THREE,EXIT
            GOTO      CHGDT999
          ENDIF
.
          MATCH     KEY16,SAVKEY16     * check arrival date/time <= triage
          IF        @LESS
            MOVE      ONE,EXIT
            GOTO      CHGDT999
          ENDIF
.
CHGDT200  PACK      KEY16,EMVIDDAT,EMVIDTIM,SP70
          MATCH     SP70,KEY16
          GOTO      CHGDT900 IF EQUAL
          REP       ":0",KEY16
.
          MATCH     KEY16,SAVKEY16    * check discharge date/time
          IF        !@LESS
            MOVE      TWO,EXIT
            GOTO      CHGDT999
          ENDIF
.
CHGDT900  MOVE      DOCTDATE,EMVIDRDT
          MOVE      DOCTTIME,EMVIDRTM
.
          CALL      BTIM0000                * Calculate backdated hours
.
          MOVE      ZERO,FORM6
          SQUEEZE   EMCNBAKH
          MOVE      EMCNBAKH,FORM6          * Hours
          ASSIGN    (FORM6 * 60),FORM6      * Minutes
.
          COMPARE   ZERO,FORM6              * Not using backdating hours
          GOTO      CHGDT950 IF EQUAL
.
          IF        (BACKTIME > FORM6 | CDYSDAYS > ZERO)
            MOVE      FIVE,EXIT             * Allow backing hours exceeded   
            GOTO      CHGDT999
          ENDIF
.
CHGDT950  IF        CALCWAIT=1
            CALL      UPDURT00              * recalculate waiting time for
            MOVE      WAITTIME,EMVIDURN     * update discharge
.
            MOVE      EMVIADMN,KEY8
            CALL      RDDETA1
            IF        OVRCD=0
              MOVE      WAITTIME,ADADURN      * update waiting duration
              CALL      UPDETA1               * update a&e details record
            ENDIF
          ENDIF
.
          CALL      UPEMVIS1
          CALL      WEDV0000                     * EDWARD visit alteration
.
          CALL      FXHIST00          * Change doctor seen date and time
.                                     * in the first history records
CHGDT999  RETURN
.
.------------------------------------------------------------
.         UPDURT00  Update duration of wait
.------------------------------------------------------------
UPDURT00  MOVE      ZERO,WAITTIME                * initialise duration
.
.         First make sure that the arrival date & time have been input
.
          MATCH     SP8,EMVIDATE                 * arrival date blank ?
          GOTO      UPDURT99 IF EQUAL            * yes
.
          MATCH     SP8,EMVITIME                 * arrival time blank ?
          GOTO      UPDURT99 IF EQUAL            * yes
.
.         The following section of code has been commented out as WGH
.         only want to base this calculation using the doctor date/time
.         seen, NOT the nurse date/time seen.
.
.         Check if the nurse has seen the patient
.
.         MATCH     SP8,EMVINSDT                 * seen by nurse date blank ?
.         GOTO      UPDURT10 IF EQUAL            * yes
.
.         MATCH     SP8,EMVINSTM                 * seen by nurse time blank ?
.         GOTO      UPDURT10 IF EQUAL            * yes
.
.
.         Patient has been seen by the nurse, so use this date and time
.         to calculate the waiting time
.
.         MOVE      EMVINSDT,CPDATE
.         MOVE      EMVINSTM,CTIMEIS
.         GOTO      UPDURT30
.
.         The nurse hasn't seen the patient, so check if the doctor has
.
UPDURT10  MATCH     SP8,EMVIDRDT                 * yes - seen by dr. date blank?
          GOTO      UPDURT20 IF EQUAL            * yes - still waiting
.
          MATCH     SP8,EMVIDRTM                 * yes - seen by dr. time blank?
          GOTO      UPDURT20 IF EQUAL            * yes - still waiting
.
.         Patient has been seen by the doctor, so use this date and time
.         to calculate the waiting time
.
          MOVE      EMVIDRDT,CPDATE
          MOVE      EMVIDRTM,CTIMEIS
          GOTO      UPDURT30
.
.
.         Patient is still waiting to be seen, so use the current date and time
.         to calculate the waiting time
.         Use discharge date & time from emvis024 & emvis025 updated in UPEM0000
.         if there is no doctor seen date & time to calculate waiting time.
.         If NZ and the patient has not been seen by a doctor then set the
.         the wait time to zero.
.
UPDURT20  IF        PTCNHDPS=1
            MOVE     ZERO,WAITTIME               * NZ and not seen by a doctor
            GOTO     UPDURT99                    * so set wait time to zero.
          ENDIF
.
          MATCH     SP8,EMVIDDAT                 * Check Discharged
          GOTO      UPDURT21 IF EQUAL            * = Current Patient
.
.                                                * Patient has been Discharged
          MOVE      EMVIDDAT,CPDATE              * Use Discharge Date
          MOVE      EMVIDTIM,CTIMEIS             * and Time
          GOTO      UPDURT30                     *
.
UPDURT21  CALL      IBACLOCK                     * get current date & time
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      CDD,CDAY
          PACK      CPDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CPDATE
.
.         Convert times to numeric hours and minutes
.
UPDURT30  UNPACK    EMVITIME,CHOUR,ANS,CMIN,ANS,ANS,ANS
          MOVE      CHOUR,IHOUR
          MOVE      CMIN,IMIN
          UNPACK    CTIMEIS,CHOUR,ANS,CMIN,ANS,ANS,ANS
          MOVE      CHOUR,NUMHOUR
          MOVE      CMIN,NUMMIN
.
.         Get the number of whole days the patient has been waiting
.
          DAYSEP    EMVIDATE,CPDATE,FORM1
          COMPARE   ZERO,FORM1                   * valid no. of days ?
          GOTO      UPDURT99 IF LESS             * no - invalid dates
          GOTO      UPDURT50 IF EQUAL            * yes - same day
.
.         Not same day as patient arrived
.
          IF        IMIN > 0
            ADD       ONE,IHOUR
            ASSIGN    (WAITTIME + (60-IMIN)),WAITTIME
          ENDIF
          ASSIGN    (WAITTIME + ((TWENTY4-IHOUR)*60)),WAITTIME
          ASSIGN    (WAITTIME + ((FORM1 - 1) * DAYMIN)),WAITTIME
.
          ASSIGN    (WAITTIME + NUMMIN + (NUMHOUR*60)),WAITTIME
          GOTO      UPDURT90
.
.         Still same day patient arrived
.
UPDURT50  IF        NUMMIN < IMIN
            ADD       ONE,IHOUR
            ADD       SIXTY,NUMMIN
          ENDIF
          ASSIGN    (WAITTIME + ((NUMHOUR - IHOUR) * 60)),WAITTIME
          ASSIGN    (WAITTIME + (NUMMIN - IMIN)),WAITTIME
.
UPDURT90  IF        WAITTIME < 0
            MOVE      NINE4,WAITTIME
          ENDIF
.
UPDURT99  RETURN
.
.------------------------------------------------------------
. Change the doctor date and time in the history file
.------------------------------------------------------------
FXHIST00  MATCH     SP70,EMVIDOCT
          GOTO      FXHIST99 IF EQUAL
.
          MATCH     SP70,EMVIDRDT
          GOTO      FXHIST99 IF EQUAL
.
          MATCH     SP70,EMVIDRTM
          GOTO      FXHIST99 IF EQUAL
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
FXHIST10  CALL      RKEMHIS1
          BRANCH    OVRCD,FXHIST99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      FXHIST99 IF NOT EQUAL
.
          IF        EMCNDDTM=1
            MATCH     "TRIAG",EMHIUPT       
            IF        @EQUAL
              MATCH     SP70,EMHIDOC        
              IF        !@EQUAL
                MOVE      EMHIDOC,SAVEDOCT  * Update first doctor seen date/time
                GOTO      FXHIST60          * if doctor allocate at triage
              ENDIF
            ENDIF
          ENDIF
.  
          MATCH     "ALDOC",EMHIUPT
          IF        @EQUAL
            MOVE      EMHIDOC,SAVEDOCT
            GOTO      FXHIST60
          ENDIF
.
          GOTO      FXHIST10
.
FXHIST50  CALL      RKEMHIS1
          BRANCH    OVRCD,FXHIST90
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      FXHIST90 IF NOT EQUAL
.
          MATCH     SAVEDOCT,EMHIDOC
          GOTO      FXHIST90 IF NOT EQUAL
.
FXHIST60  MOVE      EMVIDRDT,EMHIDSD
          UNPACK    EMVIDRTM,HOUR,D1,MIN,D1,SEC
          PACK      EMHIDST,HOUR,MIN,SEC
.
          CALL      UPEMHIS1
.
          GOTO      FXHIST50
.
FXHIST90  CALL      WRTHIS00          * Write Error Correction to audit History
          PROC      EMRDRCHR          * Update Dr Billing complete
FXHIST99  RETURN
.
.------------------------------------------------------------
.        Update EMVIUD06 and EMVIUT06 using a remote script
.        from the clinicals screen
.-----------------------------------------------------------
UPDREG00  CALL      XMLHED00
          BRANCH    EXIT,UPDREG99
.
          PACK      KEY8,ADMISSNO,SP70
UPDREG05  CALL      RLEMVIS1
          BRANCH    OVRCD,UPDREG90,UPDREG91
.
          COMPARE   FOUR,EMVISTAT
          GOTO      UPDREG90 IF EQUAL
.
          MATCH     ANSA,UPDTTYPE
          IF        @EQUAL
            MOVE      VALDDATE,EMVIUD06          * registrar request date/time
            MOVE      VALDTIME,EMVIUT06
          ENDIF
.
          MATCH     ANSB,UPDTTYPE
          IF        @EQUAL
            MOVE      VALDDATE,EMVIUD07          * registrat visit date/time
            MOVE      VALDTIME,EMVIUT07
          ENDIF
.
          CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
          CALL      WEDV0000                     * EDWARD visit alteration
.
UPDREG80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Date/Time Updated":
                             "</RETURN_VALUE>"
          GOTO      UPDREG98
.
UPDREG90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      UPDREG98
.
UPDREG91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      UPDREG98
.
UPDREG98  CALL      XMLEND00
UPDREG99  RETURN
.
.------------------------------------------------------------
. Check for expected patients - with the same name or urnumber
.------------------------------------------------------------
CHKEXP00  CALL      XMLHED00
          BRANCH    EXIT,CHKEXP99
.
          PACK      KEY8,VALDCODE,SP70
          CALL      RDMAST1
          BRANCH    OVRCD,CHKEXP90
.
          PACK      KEY55,PSNAME,PGNAME,SP70
          CALL      RSEMEXP2
CHKEXP10  CALL      RKEMEXP2
          BRANCH    OVRCD,CHKEXP20
.
          MATCH     PSNAME,EMEXSNAM
          GOTO      CHKEXP20 IF NOT EQUAL
.
          MATCH     PGNAME,EMEXGNAM
          GOTO      CHKEXP20 IF NOT EQUAL
.
          MATCH     SP70,EMEXDELT
          GOTO      CHKEXP10 IF NOT EQUAL
.
          MATCH     "1",EMCNPCTY                  * expected patients only
          IF        @EQUAL
            MATCH     "1",EMEXCONT                * expected patient
            GOTO      CHKEXP10 IF NOT EQUAL
          ENDIF
.
          MATCH     "1",EMCNEMST                  * current emergency site only
          IF        @EQUAL
            MATCH     EMEXSITE,WBSEESC            * current site
            GOTO      CHKEXP10 IF NOT EQUAL
          ENDIF
.
          GOTO      CHKEXP50
.
CHKEXP20  PACK      KEY18,PURNO,SP70
          CALL      RSEMEXP3
CHKEXP30  CALL      RKEMEXP3
          BRANCH    OVRCD,CHKEXP60
.
          MATCH     PURNO,EMEXURNO
          GOTO      CHKEXP60 IF NOT EQUAL
.
          MATCH     SP70,EMEXDELT
          GOTO      CHKEXP30 IF NOT EQUAL
.
          MATCH     "1",EMCNPCTY                  * expected patients only
          IF        @EQUAL
            MATCH     "1",EMEXCONT                * expected patient
            GOTO      CHKEXP30 IF NOT EQUAL
          ENDIF
.
          MATCH     "1",EMCNEMST                  * current emergency site only
          IF        @EQUAL
            MATCH     EMEXSITE,WBSEESC            * current site
            GOTO      CHKEXP30 IF NOT EQUAL
          ENDIF
.
CHKEXP50  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             EMEXUNIQ,"|",EMEXURNO,"|",EMEXSNAM,"|",EMEXGNAM:
                             "|",EMEXEXPL,"|",EMEXATSR,"|",EMEXAMBL:
                             "|",EMEXCOMP,"|",EMEXCOM1,"|",EMEXCOM2:
                             "|",EMEXCOM3,"|",EMEXCOM4,"|",EMEXCOM5:
                             "|",EMEXCOM6,"|":
                             "</RETURN_VALUE>";            * Valid match found
          GOTO      CHKEXP98
.
CHKEXP60  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             SP1,"|":                      * No valid match
                             "</RETURN_VALUE>";
          GOTO      CHKEXP98
.
CHKEXP90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient UR - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      CHKEXP98
.
CHKEXP98  CALL      XMLEND00
CHKEXP99  RETURN
.
.------------------------------------------------------------
. Check for any EMR visits for this ur on a day
.------------------------------------------------------------
CHKVIS00  CALL      XMLHED00
          BRANCH    EXIT,CHKVIS99
.
          MOVE      VALDDATE,DIM8
          MATCH     SP70,DIM8
          IF        @EQUAL
            PACK      DIM8,CCC,CYY,CMM,CDD       * If no date check today
            REP       " 0",DIM8
          ENDIF
.
          PACK      KEY24,VALDURNO,DIM8,SP70
          CALL      RSPTVIS2
CHKVIS10  CALL      RKPTVIS2
          BRANCH    OVRCD,CHKVIS60
.
          MATCH     PVIURNO,VALDURNO             * Same U/R
          GOTO      CHKVIS60 IF NOT EQUAL
.
          MATCH     PVIDATE,DIM8                 * Same Date
          GOTO      CHKVIS60 IF NOT EQUAL
.
          COMPARE   ONE,PVITYPE                  * Emr Visit
          GOTO      CHKVIS10 IF NOT EQUAL
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDEMVIS1
          IF        OVRCD=0
            COMPARE   FOUR,EMVISTAT
            GOTO      CHKVIS10 IF EQUAL
.
            PACK      KEY3,EMVISITE,SP70
            CALL      RDEMSIT1 
            IF        OVRCD=1
              MOVE      SP70,EMSTDESC
            ENDIF
.
          ENDIF
.
CHKVIS50  UNPACK    PVIDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      DISPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             PVIURNO,"|",DISPDATE,"|",PVIBILL,"|",EMSTDESC,"|":
                             "</RETURN_VALUE>";   * Visit found for this date
          GOTO      CHKVIS98
.
CHKVIS60  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             SP1,"|",SP1,"|",SP1,"|":               
                             "</RETURN_VALUE>";   * No visit found for this date
          GOTO      CHKVIS98
.
CHKVIS98  CALL      XMLEND00
CHKVIS99  RETURN
.
.------------------------------------------------------------
. Calculate how may hours this date/time is backdated
.------------------------------------------------------------
BTIM0000  MOVE      ZERO,BACKTIME
          MOVE      ZERO,CDYSDAYS
.
          MATCH     SP70,EMVIDRDT
          GOTO      BTIM9999 IF EQUAL
.
          MOVE      EMVIDRDT,FIRSTDAT
          UNPACK    EMVIDRTM,HOUR,D1,MIN
          PACK      FIRSTIME,HOUR,MIN
          REP       " 0",FIRSTDAT
          REP       " 0",FIRSTIME
.
          PACK      LASTDATE,CCC,CYY,CMM,CDD
          REP       " 0",LASTDATE
          UNPACK    CTIMEIS,HOUR,D1,MIN
          PACK      LASTTIME,HOUR,MIN
          REP       " 0",LASTTIME
          CALL      TIMEDIFF
          MOVE      CALCTIME,BACKTIME
.
BTIM9999  RETURN
.
.----------------------------------------------------------------
. Validate a visit number and check it is for this U/R number
.----------------------------------------------------------------
VALVIS00  CALL      XMLHED00
          BRANCH    EXIT,VALVIS99
.
          PACK      KEY8,VALDCODE,SP70
          CALL      RDVISA1
          BRANCH    OVRCD,VALVIS90
.
          MATCH     PVIURNO,VALDURNO
          GOTO      VALVIS91 IF NOT EQUAL
.
          COMPARE   THREE,PVITYPE
          GOTO      VALVIS92 IF NOT EQUAL
.
          COMPARE   ONE,IBCNMHOS            
          GOTO      VALVIS50 IF NOT EQUAL
.
.         Check if hospital code are same 
          COMPARE   ONE,MHOSFLAG
          GOTO      VALVIS50 IF NOT EQUAL
.
          PACK      KEY8,VALDCODE,SP70           
          CALL      RDPMVX11            *Read visit extn to get hospital code
          BRANCH    OVRCD,VALVIS90
.
          MOVE      PMVXMHOS,SAVVHOSP   * Save If visit hospital
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,VALVIS90      * EMR visit not found
.
          PACK      KEY3,EMVISITE,SP70
          CALL      RDEMSIT1
          BRANCH    OVRCD,VALVIS90          * EMR site code not found
.
          MATCH     EMSTHSNO,SAVVHOSP
          GOTO      VALVIS60 IF NOT EQUAL
.
VALVIS50  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                               PVIBILL,"|",PVIURNO:
                             "</RETURN_VALUE>"
          GOTO      VALVIS98
.
VALVIS60  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid visit number - ":
                             KEY8," does not belong to same site</RETURN_VALUE>"
          GOTO      VALVIS98
.
VALVIS90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid visit number - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      VALVIS98
.
VALVIS91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid visit for this U/R - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      VALVIS98
.
VALVIS92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid visit type for a linked visit":
                             "</RETURN_VALUE>"
          GOTO      VALVIS98
.
VALVIS98  CALL      XMLEND00
VALVIS99  RETURN
.
.------------------------------------------------------------
.        Update Presenting Complaint Coded Field
.-----------------------------------------------------------
PRECOM00  CALL      XMLHED00
          BRANCH    EXIT,PRECOM99
.
          MATCH     SP70,VALDCODE                * Presenting Complaint
          GOTO      PRECOM92 IF EQUAL            * is Mandatory
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RLEMVIS1
          BRANCH    OVRCD,PRECOM90,PRECOM91
.      
          COMPARE   FOUR,EMVISTAT
          GOTO      PRECOM90 IF EQUAL
.
          CALL      WEDV0000                     * EDWARD visit alteration
.
          MOVE      VALDCODE,EMVIUC20            * Presenting complaint
.
          CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
          CALL      WEDV0000                     * EDWARD visit alteration
.
.         Send update broadcast message
.
          MOVE      EMVIURNO,KEY8          * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,PRECOM70
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,PRECOM70
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,PRECOM70
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      THREE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                     * send update emr details
.
PRECOM70  CALL      WRTHIS00
          PROC      EMRDRCHR                     * Update Dr Billing complete
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;"Presenting Complaint Updated";
          WRITE     HTMLFILE;"</RETURN_VALUE>"

          GOTO      PRECOM98
.
PRECOM90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      PRECOM98
.
PRECOM91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      PRECOM98
.
PRECOM92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Presenting Complaint is a Mandatory Field":
                             "</RETURN_VALUE>"
          GOTO      PRECOM98
.
PRECOM98  CALL      XMLEND00
PRECOM99  RETURN
.
.------------------------------------------------------------
.   DATEVL00  :   Date Validation
.------------------------------------------------------------
.         If there is an arrival date/time on file, then make sure that it
.         is less than the nurse seen date/time, doctor seen date/time &
.         discharge date/time.
.
.         First check if arrival or discharge dates are blank
.
DATEVL00  IF        EMVISTAT=1|EMVISTAT=4
            GOTO      DATEVL02
          ENDIF
.
          MATCH     SP8,EMVIDATE                 * arrival date blank ?
          GOTO      DATEVL06 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDDAT                 * discharge date blank ?
          GOTO      DATEVL02 IF EQUAL            * yes - check nurse date/time
.
.         Make sure discharge date is not prior to arrival date
.
          MATCH     EMVIDATE,EMVIDDAT            * dis. date = arr. date ?
          GOTO      DATEVL01 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Discharge date prior to arrival date",WEBTITLE
.           APPEND    ", not updated.",WEBTITLE
.           RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL02                     * date > arrival date - ok
.
.         Check if arrival or discharge time is blank
.
DATEVL01  MATCH     SP8,EMVITIME                 * arrival time blank ?
          GOTO      DATEVL02 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDTIM                 * discharge time blank ?
          GOTO      DATEVL02 IF EQUAL            * yes - ignore this validation
.
.         The arrival date & discharge date are the same, so make sure
.         that the discharge time is not less than the arrival time.
.
          MATCH     EMVITIME,EMVIDTIM            * dis. time < arr. time ?
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Discharge time prior to arrival time",WEBTITLE
.           APPEND    ", not updated.",WEBTITLE
.           RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
.         Check if nurse seen date is blank
.
DATEVL02  MATCH     SP8,EMVINSDT                 * nurse seen date blank ?
          GOTO      DATEVL04 IF EQUAL            * yes - ignore this validation
.
.         Make sure that the nurse seen date is not prior to the arrival date
.
          MATCH     EMVIDATE,EMVINSDT            * nurse seen date = arr. date ?
          GOTO      DATEVL03 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Nurse seen date prior to arrival date",WEBTITLE
.           APPEND    ", not updated.",WEBTITLE
.           RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL04                     * date > arrival date
.
.         Check if the arrival or nurse seen times are blank
.
DATEVL03  MATCH     SP8,EMVITIME                 * arrival time blank ?
          GOTO      DATEVL04 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVINSTM                 * nurse seen time blank ?
          GOTO      DATEVL04 IF EQUAL            * yes - ignore this validation
.
.         The arrival date & nurse seen date are the same, so make sure
.         that the nurse seen time is not less than the arrival time.
.
          MATCH     EMVITIME,EMVINSTM            * nurse seen time < arr. time ?
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Nurse seen time prior to arrival time",WEBTITLE
.           APPEND    ", not updated.",WEBTITLE
.           RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
.         Check if doctor seen date is blank
.
DATEVL04  MATCH     SP8,EMVIDRDT                 * doctor seen date blank ?
          GOTO      DATEVL06 IF EQUAL            * yes - ignore this validation
          GOTO      DATEVL06 IF EOS              * yes - ignore this validation
.
.         Make sure that the doctor seen date is not prior to the arrival date
.
          MATCH     EMVIDATE,EMVIDRDT            * dr. seen date = arr. date ?
          GOTO      DATEVL05 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Doctor seen date prior to arrival date",WEBTITLE
.           APPEND    ", not updated.",WEBTITLE
.           RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL06                     * date > arrival date
.
.         Check if the arrival or doctor seen times are blank
.
DATEVL05  MATCH     SP8,EMVITIME                 * arrival time blank ?
          GOTO      DATEVL06 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDRTM                 * doctor seen time blank ?
          GOTO      DATEVL06 IF EQUAL            * yes - ignore this validation
.
.         The arrival date & doctor seen date are the same, so make sure
.         that the doctor seen time is not less than the arrival time.
.
          MATCH     EMVITIME,EMVIDRTM            * dr. seen time < arr. time ?
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Doctor seen time prior to arrival time",WEBTITLE
.           APPEND    ", not updated.",WEBTITLE
.           RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
.         If there is a discharge date/time on file, then make sure that it
.         is not less than the nurse seen date/time and doctor seen date/time.
.
.         First check if discharge or nurse seen dates are blank
.
DATEVL06  IF        EMVISTAT=1|EMVISTAT=4
            GOTO      DATEVL90
          ENDIF
.
          MATCH     "1",NURUPIND
          GOTO      DATEVL90 IF EQUAL
.         
          MATCH     SP8,EMVIDDAT                 * discharge date blank ?
          GOTO      DATEVL10 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVINSDT                 * nurse seen date blank ?
          GOTO      DATEVL08 IF EQUAL            * yes - ignore this validation
.
.         Make sure nurse seen date is not after the discharge date
.
          MATCH     EMVINSDT,EMVIDDAT            * dis. date = nurse seen date ?
          GOTO      DATEVL07 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Nurse seen date prior to discharge date",WEBTITLE
.           APPEND    ", not updated.",WEBTITLE
.           RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL08                     * date > nurse seen date - ok
.
.         Check if discharge or nurse seen time is blank
.
DATEVL07  MATCH     SP8,EMVIDTIM                 * discharge time blank ?
          GOTO      DATEVL08 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVINSTM                 * nurse seen time blank ?
          GOTO      DATEVL08 IF EQUAL            * yes - ignore this validation
.
.         The nurse seen date & discharge date are the same, so make sure
.         that the discharge time is not less than the nurse seen time.
.
          MATCH     EMVINSTM,EMVIDTIM            * dis. time < nurse seen time ?
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Discharge time prior to nurse seen time",WEBTITLE
.           APPEND    ", not updated.",WEBTITLE
.           RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
.         Check if doctor seen date is blank
.
DATEVL08  MATCH     SP8,EMVIDRDT                 * doctor seen date blank ?
          GOTO      DATEVL10 IF EQUAL            * yes - ignore this validation
.
.         Don't check the doctor seen date/time for patients that
.         have a linked inpatient admission unless a current emergency
.         visit if being discharged.
.
.         MATCH     SP70,EMVIPADM                * Linked inpatient admission
.         IF        !@EQUAL
.           IF        EMVISTAT=1
.             MATCH     "D ",FORMACTN            * Discharge a current
.             GOTO      DATEVL90 IF NOT EQUAL    * emergency visit
.           ENDIF
.         ENDIF
.
.         Make sure doctor seen date is not after the discharge date
.
          MATCH     EMVIDRDT,EMVIDDAT            * dis. date = dr. seen date ?
          GOTO      DATEVL09 IF EQUAL            * yes
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Discharge date prior to doctor seen date",WEBTITLE
.           APPEND    ", not updated.",WEBTITLE
.           RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
          GOTO      DATEVL10                     * date > doctor seen date - ok
.
.         Check if discharge or doctor seen time is blank
.
DATEVL09  MATCH     SP8,EMVIDTIM                 * discharge time blank ?
          GOTO      DATEVL10 IF EQUAL            * yes - ignore this validation
.
          MATCH     SP8,EMVIDRTM                 * doctor seen time blank ?
          GOTO      DATEVL10 IF EQUAL            * yes - ignore this validation
.
.         The doctor seen date & discharge date are the same, so make sure
.         that the discharge time is not less than the doctor seen time.
.
          MATCH     EMVIDRTM,EMVIDTIM            * dis. time < dr. seen time ?
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Discharge time prior to doctor seen time",WEBTITLE
.           APPEND    ", not updated.",WEBTITLE
.           RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
DATEVL10  MATCH     SP70,EMVIDDAT
          GOTO      DATEVL90 IF EQUAL
          GOTO      DATEVL90 IF EOS
.
          CALL      IBACLOCK
          PACK      DIM8DATE,CCC,CYY,CMM,CDD
          REP       " 0",DIM8DATE
          CLOCK     TIME,CTIMEIS
          MOVE      CTIMEIS,DIM8TIME
          REP       " 0",DIM8TIME
.
.         UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
.         PACK      DIM8TIME,HOUR,MIN,SEC
.         REP       " 0",DIM8TIME
.
          MATCH     DIM8DATE,EMVIDDAT
          IF        @LESS
            CLEAR     WEBTITLE
            APPEND    "Discharge Date prior to Nurse Seen Date ",WEBTITLE
.           APPEND    " not updated.",WEBTITLE
.           RESET     WEBTITLE
            GOTO      DATEVL95
          ENDIF
.
          IF        @EQUAL
            MATCH     DIM8TIME,EMVIDTIM
            IF        @LESS
              CLEAR     WEBTITLE
              APPEND    "Discharge time prior to Nurse Seen Time",WEBTITLE
.             APPEND    " not updated.",WEBTITLE
.             RESET     WEBTITLE
              GOTO      DATEVL95
            ENDIF
          ENDIF
.
DATEVL90  MOVE      ZERO,EXIT
          GOTO      DATEVL99
.
DATEVL95  
          MOVE      ONE,EXIT
.
DATEVL99  RETURN
.
.------------------------------------------------------------
. Update emrvisaf fields - Mostly used on the clinical screen
.------------------------------------------------------------
EMRVIS00  CALL      XMLHED00
          BRANCH    EXIT,EMRVIS99
.
          BRANCH    EMRUPDFL,EMRVIS92
.
          PACK      KEY8,ADMISSNO,SP70
EMRVIS05  CALL      RDEMVIS1
          BRANCH    OVRCD,EMRVIS90
.
          CALL      STVIS000                     * Move cgi to file vars
.
          CALL      UPEMVIS1
.
          CALL      WEDV0000                     * EDWARD visit alteration
.
EMRVIS80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Ok":
                             "</RETURN_VALUE>"
          GOTO      EMRVIS98
.
EMRVIS90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      EMRVIS98
.
EMRVIS91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      EMRVIS98
.
EMRVIS92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Emergency Field":
                             "</RETURN_VALUE>"
          GOTO      EMRVIS98
.
EMRVIS98  CALL      XMLEND00
EMRVIS99  RETURN
.
.-----------------------------------------------------------
. Write EDWARD emergency visit alteration record
.------------------------------------------------------------
WEDV0000  MATCH     SP70,PTCNNSSI        * no edward source system
          GOTO      WEDV9999 IF EQUAL
.
          MATCH     "00000000000000000000",PTCNNSSI  * no edward source system
          GOTO      WEDV9999 IF EQUAL
.
          MOVE      EMVIADMN,PMAWVISN
          MOVE      FOUR,PMAWTYPE
          PACK      PMAWOLDV,SP70,SP70,SP70,SP70
          PACK      PMAWNEWV,SP70,SP70,SP70,SP70
.
          CALL      IBACLOCK
          PACK      PMAWCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMAWCDAT
          MOVE      "00:00:00",PMAWCTIM
          PACK      PMAWCUID,USERID
          PACK      PMAWSPAR,SP70,SP70
.
          PACK      KEY27,PMAWCDAT,PMAWCTIM,PMAWVISN,PMAWTYPE,SP70
          CALL      RAPMADW1
          IF        OVRCD=1
            CALL      WRPMADW1
          ELSE
            CALL      UPPMADW1
          ENDIF
.
WEDV9999  RETURN
.
.-----------------------------------------------------------
. Write EDWARD emergency visit alteration record
.------------------------------------------------------------
WEDD0000  MATCH     SP70,PTCNNSSI        * no edward source system
          GOTO      WEDD9999 IF EQUAL
.
          MATCH     "00000000000000000000",PTCNNSSI  * no edward source system
          GOTO      WEDD9999 IF EQUAL
.
          MOVE      EMVIADMN,PMAWVISN
          MOVE      TEN3,PMAWTYPE
          PACK      PMAWOLDV,OLDDOCTO,OLDDOCDT,OLDDOCTM,SP70,SP70,SP70,SP70
          PACK      PMAWNEWV,SP70,SP70,SP70,SP70
.
          CALL      IBACLOCK
          PACK      PMAWCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMAWCDAT
          MOVE      "00:00:00",PMAWCTIM
          PACK      PMAWCUID,USERID
          PACK      PMAWSPAR,SP70,SP70
.
          PACK      KEY27,PMAWCDAT,PMAWCTIM,PMAWVISN,PMAWTYPE,SP70
          CALL      RAPMADW1
          IF        OVRCD=1
            CALL      WRPMADW1
          ELSE
            CALL      UPPMADW1
          ENDIF
.
WEDD9999  RETURN
.
.------------------------------------------------------------
. CPEMVI00  Clear EMVISXXX cgi vars 
.------------------------------------------------------------
CPEMVI00  MOVE      Z70,EMVIS036
          MOVE      Z70,EMVIS037
          MOVE      Z70,EMVIS038
          MOVE      Z70,EMVIS039
          MOVE      Z70,EMVIS040
          MOVE      Z70,EMVIS041
          MOVE      Z70,EMVIS042
          MOVE      Z70,EMVIS043
          MOVE      Z70,EMVIS044
          MOVE      Z70,EMVIS045
          MOVE      Z70,EMVIS046
          MOVE      Z70,EMVIS047
          MOVE      Z70,EMVIS048
          MOVE      Z70,EMVIS049
          MOVE      Z70,EMVIS050
          MOVE      Z70,EMVIS051
          MOVE      Z70,EMVIS052
          MOVE      Z70,EMVIS053
          MOVE      Z70,EMVIS054
          MOVE      Z70,EMVIS055
          MOVE      Z70,EMVIS056
          MOVE      Z70,EMVIS057
          MOVE      Z70,EMVIS058
          MOVE      Z70,EMVIS059
          MOVE      Z70,EMVIS060
          MOVE      Z70,EMVIS061
          MOVE      Z70,EMVIS062
          MOVE      Z70,EMVIS063
          MOVE      Z70,EMVIS064
          MOVE      Z70,EMVIS065
          MOVE      Z70,EMVIS066
          MOVE      Z70,EMVIS067
          MOVE      Z70,EMVIS068
          MOVE      Z70,EMVIS069
          MOVE      Z70,EMVIS070
          MOVE      Z70,EMVIS071
          MOVE      Z70,EMVIS072
          MOVE      Z70,EMVIS073
          MOVE      Z70,EMVIS074
          MOVE      Z70,EMVIS075
          MOVE      Z70,EMVIS076
          MOVE      Z70,EMVIS077
          MOVE      Z70,EMVIS078
          MOVE      Z70,EMVIS079
          MOVE      Z70,EMVIS080
          MOVE      Z70,EMVIS081
          MOVE      Z70,EMVIS082
          MOVE      Z70,EMVIS083
          MOVE      Z70,EMVIS084
          MOVE      Z70,EMVIS085
          MOVE      Z70,EMVIS086
          MOVE      Z70,EMVIS087
          MOVE      Z70,EMVIS088
          MOVE      Z70,EMVIS089
          MOVE      Z70,EMVIS090
          MOVE      Z70,EMVIS093
          MOVE      Z70,EMVIS094
          MOVE      Z70,EMVIS095
          MOVE      Z70,EMVIS096
          MOVE      Z70,EMVIS097
          MOVE      Z70,EMVIS098
          MOVE      Z70,EMVIS099
          MOVE      Z70,EMVIS101
          MOVE      Z70,EMVIS102
          MOVE      Z70,EMVIS103
          MOVE      Z70,EMVIS104
          MOVE      Z70,EMVIS105
          MOVE      Z70,EMVIS106
          MOVE      Z70,EMVIS107
          MOVE      Z70,EMVIS108
          MOVE      Z70,EMVIS109
          MOVE      Z70,EMVIS110
          MOVE      Z70,EMVIS149
.
          MOVE      Z70,EMVIS154
          MOVE      Z70,EMVIS155
          MOVE      Z70,EMVIS156
          MOVE      Z70,EMVIS157
          MOVE      Z70,EMVIS158
          MOVE      Z70,EMVIS159
.
          MOVE      Z70,EMVIS164
          MOVE      Z70,EMVIS165
          MOVE      Z70,EMVIS166
.
          MOVE      Z70,EMVIS167
          MOVE      Z70,EMVIS168
          MOVE      Z70,EMVIS169
          MOVE      Z70,EMVIS170
          MOVE      Z70,EMVIS171
          MOVE      Z70,EMVIS172
          MOVE      Z70,EMVIS173
          MOVE      Z70,EMVIS179
          MOVE      Z70,EMVIS180
          MOVE      Z70,EMVIS181
          MOVE      Z70,EMVIS182
.
          MOVE      ONE,EMRUPDFL
.
CPEMVI99  RETURN
.
.------------------------------------------------------------
. Set Parameters for Emergency Visit Details
.------------------------------------------------------------
SPEMV000  MOVE      ZERO,EMRUPDFL
.
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          BRANCH    F3,SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:  *10
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:  *20
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:  *30
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:
                       SPEMV036,SPEMV037,SPEMV038,SPEMV039,SPEMV040:  *40
                       SPEMV041,SPEMV042,SPEMV043,SPEMV044,SPEMV045:
                       SPEMV046,SPEMV047,SPEMV048,SPEMV049,SPEMV050:  *50
                       SPEMV051,SPEMV052,SPEMV053,SPEMV054,SPEMV055:
                       SPEMV056,SPEMV057,SPEMV058,SPEMV059,SPEMV060:  *60
                       SPEMV061,SPEMV062,SPEMV063,SPEMV064,SPEMV065:
                       SPEMV066,SPEMV067,SPEMV068,SPEMV069,SPEMV070:  *70
                       SPEMV071,SPEMV072,SPEMV073,SPEMV074,SPEMV075:
                       SPEMV076,SPEMV077,SPEMV078,SPEMV079,SPEMV080:  *80
                       SPEMV081,SPEMV082,SPEMV083,SPEMV084,SPEMV085:
                       SPEMV086,SPEMV087,SPEMV088,SPEMV089,SPEMV090:  *90
                       SPEMV900,SPEMV900,SPEMV093,SPEMV094,SPEMV095:
                       SPEMV096,SPEMV097,SPEMV098,SPEMV099,SPEMV900:  *100
                       SPEMV101,SPEMV102,SPEMV103,SPEMV104,SPEMV105:
                       SPEMV106,SPEMV107,SPEMV108,SPEMV109,SPEMV110:  *110
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:  *120
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:  *130
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:  *140
                       SPEMV900,SPEMV900,SPEMV900,SPEMV900,SPEMV900:
                       SPEMV900,SPEMV900,SPEMV900,SPEMV149,SPEMV900:  *150
                       SPEMV900,SPEMV900,SPEMV900,SPEMV154,SPEMV155:  
                       SPEMV156,SPEMV157,SPEMV158,SPEMV159,SPEMV900:  *160
                       SPEMV900,SPEMV900,SPEMV900,SPEMV164,SPEMV165:
                       SPEMV166,SPEMV167,SPEMV168,SPEMV169,SPEMV170:  *170
                       SPEMV171,SPEMV172,SPEMV173,SPEMV173,SPEMV173:  
                       SPEMV176,SPEMV177,SPEMV178,SPEMV179,SPEMV180:  *180
                       SPEMV181,SPEMV182 
.
          GOTO      SPEMV900
.
SPEMV036  MOVE      QRYDATA,EMVIS036
          GOTO      SPEMV999
.
SPEMV037  MOVE      QRYDATA,EMVIS037
          GOTO      SPEMV999
.
SPEMV038  MOVE      QRYDATA,EMVIS038
          GOTO      SPEMV999
.
SPEMV039  MOVE      QRYDATA,EMVIS039
          GOTO      SPEMV999
.
SPEMV040  MOVE      QRYDATA,EMVIS040
          GOTO      SPEMV999
.
SPEMV041  MOVE      QRYDATA,EMVIS041
          GOTO      SPEMV999
.
SPEMV042  MOVE      QRYDATA,EMVIS042
          GOTO      SPEMV999
.
SPEMV043  MOVE      QRYDATA,EMVIS043
          GOTO      SPEMV999
.
SPEMV044  MOVE      QRYDATA,EMVIS044
          GOTO      SPEMV999
.
SPEMV045  MOVE      QRYDATA,EMVIS045
          GOTO      SPEMV999
.
SPEMV046  MOVE      QRYDATA,EMVIS046
          GOTO      SPEMV999
.
SPEMV047  MOVE      QRYDATA,EMVIS047
          GOTO      SPEMV999
.
SPEMV048  MOVE      QRYDATA,EMVIS048
          GOTO      SPEMV999
.
SPEMV049  MOVE      QRYDATA,EMVIS049
          GOTO      SPEMV999
.
SPEMV050  MOVE      QRYDATA,EMVIS050
          GOTO      SPEMV999
.
SPEMV051  MOVE      QRYDATA,EMVIS051
          GOTO      SPEMV999
.
SPEMV052  MOVE      QRYDATA,EMVIS052
          GOTO      SPEMV999
.
SPEMV053  MOVE      QRYDATA,EMVIS053
          GOTO      SPEMV999
.
SPEMV054  MOVE      QRYDATA,EMVIS054
          GOTO      SPEMV999
.
SPEMV055  MOVE      QRYDATA,EMVIS055
          GOTO      SPEMV999
.
SPEMV056  MOVE      QRYDATA,EMVIS056
          GOTO      SPEMV999
.
SPEMV057  MOVE      QRYDATA,EMVIS057
          GOTO      SPEMV999
.
SPEMV058  MOVE      QRYDATA,EMVIS058
          GOTO      SPEMV999
.
SPEMV059  MOVE      QRYDATA,EMVIS059
          GOTO      SPEMV999
.
SPEMV060  MOVE      QRYDATA,EMVIS060
          GOTO      SPEMV999
.
SPEMV061  MOVE      QRYDATA,EMVIS061
          GOTO      SPEMV999
.
SPEMV062  MOVE      QRYDATA,EMVIS062
          GOTO      SPEMV999
.
SPEMV063  MOVE      QRYDATA,EMVIS063
          GOTO      SPEMV999
.
SPEMV064  MOVE      QRYDATA,EMVIS064
          GOTO      SPEMV999
.
SPEMV065  MOVE      QRYDATA,EMVIS065
          GOTO      SPEMV999
.
SPEMV066  MOVE      QRYDATA,EMVIS066
          GOTO      SPEMV999
.
SPEMV067  MOVE      QRYDATA,EMVIS067
          GOTO      SPEMV999
.
SPEMV068  MOVE      QRYDATA,EMVIS068
          GOTO      SPEMV999
.
SPEMV069  MOVE      QRYDATA,EMVIS069
          GOTO      SPEMV999
.
SPEMV070  MOVE      QRYDATA,EMVIS070
          GOTO      SPEMV999
.
SPEMV071  PACK      EMVIS071,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV072  PACK      EMVIS072,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV073  PACK      EMVIS073,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV074  PACK      EMVIS074,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV075  PACK      EMVIS075,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV076  PACK      EMVIS076,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV077  PACK      EMVIS077,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV078  PACK      EMVIS078,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV079  PACK      EMVIS079,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV080  PACK      EMVIS080,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV081  MOVE      QRYDATA,EMVIS081
          GOTO      SPEMV999
.
SPEMV082  MOVE      QRYDATA,EMVIS082
          GOTO      SPEMV999
.
SPEMV083  MOVE      QRYDATA,EMVIS083
          GOTO      SPEMV999
.
SPEMV084  MOVE      QRYDATA,EMVIS084
          GOTO      SPEMV999
.
SPEMV085  MOVE      QRYDATA,EMVIS085
          GOTO      SPEMV999
.
SPEMV086  MOVE      QRYDATA,EMVIS086
          GOTO      SPEMV999
.
SPEMV087  MOVE      QRYDATA,EMVIS087
          GOTO      SPEMV999
.
SPEMV088  MOVE      QRYDATA,EMVIS088
          GOTO      SPEMV999
.
SPEMV089  MOVE      QRYDATA,EMVIS089
          GOTO      SPEMV999
.
SPEMV090  MOVE      QRYDATA,EMVIS090
          GOTO      SPEMV999
.
SPEMV093  MOVE      QRYDATA,EMVIS093
          GOTO      SPEMV999
.
SPEMV094  MOVE      QRYDATA,EMVIS094
          GOTO      SPEMV999
.
SPEMV095  MOVE      QRYDATA,EMVIS095
          GOTO      SPEMV999
.
SPEMV096  MOVE      QRYDATA,EMVIS096
          GOTO      SPEMV999
.
SPEMV097  MOVE      QRYDATA,EMVIS097
          GOTO      SPEMV999
.
SPEMV098  MOVE      QRYDATA,EMVIS098
          GOTO      SPEMV999
.
SPEMV099  MOVE      QRYDATA,EMVIS099
          GOTO      SPEMV999
.
SPEMV101  MOVE      QRYDATA,EMVIS101
          GOTO      SPEMV999
.
SPEMV102  MOVE      QRYDATA,EMVIS102
          GOTO      SPEMV999
.
SPEMV103  MOVE      QRYDATA,EMVIS103
          GOTO      SPEMV999
.
SPEMV104  MOVE      QRYDATA,EMVIS104
          GOTO      SPEMV999
.
SPEMV105  MOVE      QRYDATA,EMVIS105
          GOTO      SPEMV999
.
SPEMV106  MOVE      QRYDATA,EMVIS106
          GOTO      SPEMV999
.
SPEMV107  MOVE      QRYDATA,EMVIS107
          GOTO      SPEMV999
.
SPEMV108  MOVE      QRYDATA,EMVIS108
          GOTO      SPEMV999
.
SPEMV109  MOVE      QRYDATA,EMVIS109
          GOTO      SPEMV999
.
SPEMV110  MOVE      QRYDATA,EMVIS110
          GOTO      SPEMV999
.
SPEMV149  MOVE      QRYDATA,EMVIS149
          GOTO      SPEMV999
.
SPEMV154  PACK      EMVIS154,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV155  PACK      EMVIS155,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV156  PACK      EMVIS156,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV157  PACK      EMVIS157,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV158  PACK      EMVIS158,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV159  PACK      EMVIS159,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV164  PACK      EMVIS164,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV165  PACK      EMVIS165,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV166  PACK      EMVIS166,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV167  PACK      EMVIS167,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV168  PACK      EMVIS168,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV169  PACK      EMVIS169,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV170  PACK      EMVIS170,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV171  PACK      EMVIS171,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV172  PACK      EMVIS172,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV173  PACK      EMVIS173,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV174  PACK      EMVIS174,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV175  PACK      EMVIS175,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV176  PACK      EMVIS176,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV177  PACK      EMVIS177,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV178  PACK      EMVIS178,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV179  PACK      EMVIS179,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV180  PACK      EMVIS180,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV181  PACK      EMVIS181,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV182  PACK      EMVIS182,QRYDATA,SP70
          GOTO      SPEMV999
.
SPEMV900  MOVE      ONE,EMRUPDFL            * Error field not available
.
SPEMV999  RETURN
.
.------------------------------------------------------------
. STVIS000  Move EMVISXXX cgi vars to file vars
.------------------------------------------------------------
STVIS000  MATCH     Z70,EMVIS036
          IF        !@EQUAL
            MOVE      EMVIS036,EMVITXT1
          ENDIF
.
          MATCH     Z70,EMVIS037
          IF        !@EQUAL
            MOVE      EMVIS037,EMVITXT2
          ENDIF
.
          MATCH     Z70,EMVIS038
          IF        !@EQUAL
            MOVE      EMVIS038,EMVITXT3
          ENDIF
.
          MATCH     Z70,EMVIS039
          IF        !@EQUAL
            MOVE      EMVIS039,EMVITXT4
          ENDIF
.
          MATCH     Z70,EMVIS040
          IF        !@EQUAL
            MOVE      EMVIS040,EMVITXT5
          ENDIF
.
          MATCH     Z70,EMVIS041
          IF        !@EQUAL
            MOVE      EMVIS041,EMVIUC01
          ENDIF
.
          MATCH     Z70,EMVIS042
          IF        !@EQUAL
            MOVE      EMVIS042,EMVIUC02
          ENDIF
.
          MATCH     Z70,EMVIS043
          IF        !@EQUAL
            MOVE      EMVIS043,EMVIUC03
          ENDIF
.
          MATCH     Z70,EMVIS044
          IF        !@EQUAL
            MOVE      EMVIS044,EMVIUC04
          ENDIF
.
          MATCH     Z70,EMVIS045
          IF        !@EQUAL
            MOVE      EMVIS045,EMVIUC05
          ENDIF
.
          MATCH     Z70,EMVIS046
          IF        !@EQUAL
            MOVE      EMVIS046,EMVIUC06
          ENDIF
.
          MATCH     Z70,EMVIS047
          IF        !@EQUAL
            MOVE      EMVIS047,EMVIUC07
          ENDIF
.
          MATCH     Z70,EMVIS048
          IF        !@EQUAL
            MOVE      EMVIS048,EMVIUC08
          ENDIF
.
          MATCH     Z70,EMVIS049
          IF        !@EQUAL
            MOVE      EMVIS049,EMVIUC09
          ENDIF
.
          MATCH     Z70,EMVIS050
          IF        !@EQUAL
            MOVE      EMVIS050,EMVIUC10
          ENDIF
.
          MATCH     Z70,EMVIS051
          IF        !@EQUAL
            MOVE      EMVIS051,EMVIUC11
          ENDIF
.
          MATCH     Z70,EMVIS052
          IF        !@EQUAL
            MOVE      EMVIS052,EMVIUC12
          ENDIF
.
          MATCH     Z70,EMVIS053
          IF        !@EQUAL
            MOVE      EMVIS053,EMVIUC13
          ENDIF
.
          MATCH     Z70,EMVIS054
          IF        !@EQUAL
            MOVE      EMVIS054,EMVIUC14
          ENDIF
.
          MATCH     Z70,EMVIS055
          IF        !@EQUAL
            MOVE      EMVIS055,EMVIUC15
          ENDIF
.
          MATCH     Z70,EMVIS056
          IF        !@EQUAL
            MOVE      EMVIS056,EMVIUC16
          ENDIF
.
          MATCH     Z70,EMVIS057
          IF        !@EQUAL
            MOVE      EMVIS057,EMVIUC17
          ENDIF
.
          MATCH     Z70,EMVIS058
          IF        !@EQUAL
            MOVE      EMVIS058,EMVIUC18
          ENDIF
.
          MATCH     Z70,EMVIS059
          IF        !@EQUAL
            MOVE      EMVIS059,EMVIUC19
          ENDIF
.
          MATCH     Z70,EMVIS060
          IF        !@EQUAL
            MOVE      EMVIS060,EMVIUC20
          ENDIF
.
          MATCH     Z70,EMVIS061
          IF        !@EQUAL
            MOVE      EMVIS061,EMVIUC21
          ENDIF
.
          MATCH     Z70,EMVIS062
          IF        !@EQUAL
            MOVE      EMVIS062,EMVIUC22
          ENDIF
.
          MATCH     Z70,EMVIS063
          IF        !@EQUAL
            MOVE      EMVIS063,EMVIUC23
          ENDIF
.
          MATCH     Z70,EMVIS064
          IF        !@EQUAL
            MOVE      EMVIS064,EMVIUC24
          ENDIF
.
          MATCH     Z70,EMVIS065
          IF        !@EQUAL
            MOVE      EMVIS065,EMVIUC25
          ENDIF
.
          MATCH     Z70,EMVIS066
          IF        !@EQUAL
            MOVE      EMVIS066,EMVIUC26
          ENDIF
.
          MATCH     Z70,EMVIS067
          IF        !@EQUAL
            MOVE      EMVIS067,EMVIUC27
          ENDIF
.
          MATCH     Z70,EMVIS068
          IF        !@EQUAL
            MOVE      EMVIS068,EMVIUC28
          ENDIF
.
          MATCH     Z70,EMVIS069
          IF        !@EQUAL
            MOVE      EMVIS069,EMVIUC29
          ENDIF
.
          MATCH     Z70,EMVIS070
          IF        !@EQUAL
            MOVE      EMVIS070,EMVIUC30
          ENDIF
.
          REP       "0 ",EMVIS071
          MATCH     Z70,EMVIS071
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS071
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS071,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS071,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS071
              MATCH     ZERO8,EMVIS071
              IF        @EQUAL
                PACK      EMVIUD01,SP70
              ELSE
                MOVE      EMVIS071,EMVIUD01
              ENDIF
            ELSE
              PACK    EMVIUD01,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS072
          MATCH     Z70,EMVIS072
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS072
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS072,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS072,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS072
              MATCH     ZERO8,EMVIS072
              IF        @EQUAL
                PACK      EMVIUD02,SP70
              ELSE
                MOVE      EMVIS072,EMVIUD02
              ENDIF
            ELSE
              PACK    EMVIUD02,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS073
          MATCH     Z70,EMVIS073
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS073
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS073,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS073,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS073
              MATCH     ZERO8,EMVIS073
              IF        @EQUAL
                PACK      EMVIUD03,SP70
              ELSE
                MOVE      EMVIS073,EMVIUD03
              ENDIF
            ELSE
              PACK    EMVIUD03,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS074
          MATCH     Z70,EMVIS074
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS074
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS074,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS074,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS074
              MATCH     ZERO8,EMVIS074
              IF        @EQUAL
                PACK      EMVIUD04,SP70
              ELSE
                MOVE      EMVIS074,EMVIUD04
              ENDIF
            ELSE
              PACK    EMVIUD04,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS075
          MATCH     Z70,EMVIS075
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS075
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS075,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS075,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS075
              MATCH     ZERO8,EMVIS075
              IF        @EQUAL
                PACK      EMVIUD05,SP70
              ELSE
                MOVE      EMVIS075,EMVIUD05
              ENDIF
            ELSE
              PACK    EMVIUD05,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS076
          MATCH     Z70,EMVIS076
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS076
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS076,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS076,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS076
              MATCH     ZERO8,EMVIS076
              IF        @EQUAL
                PACK      EMVIUD06,SP70
              ELSE
                MOVE      EMVIS076,EMVIUD06
              ENDIF
            ELSE
              PACK    EMVIUD06,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS077
          MATCH     Z70,EMVIS077
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS077
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS077,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS077,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS077
              MATCH     ZERO8,EMVIS077
              IF        @EQUAL
                PACK      EMVIUD07,SP70
              ELSE
                MOVE      EMVIS077,EMVIUD07
              ENDIF
            ELSE
              PACK    EMVIUD07,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS078
          MATCH     Z70,EMVIS078
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS078
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS078,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS078,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS078
              MATCH     ZERO8,EMVIS078
              IF        @EQUAL
                PACK      EMVIUD08,SP70
              ELSE
                MOVE      EMVIS078,EMVIUD08
              ENDIF
            ELSE
              PACK    EMVIUD08,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS079
          MATCH     Z70,EMVIS079
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS079
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS079,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS079,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS079
              MATCH     ZERO8,EMVIS079
              IF        @EQUAL
                PACK      EMVIUD09,SP70
              ELSE
                MOVE      EMVIS079,EMVIUD09
              ENDIF
            ELSE
              PACK    EMVIUD09,SP70
            ENDIF
          ENDIF
.
          REP       "0 ",EMVIS080
          MATCH     Z70,EMVIS080
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS080
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS080,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS080,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS080
              MATCH     ZERO8,EMVIS080
              IF        @EQUAL
                PACK      EMVIUD10,SP70
              ELSE
                MOVE      EMVIS080,EMVIUD10
              ENDIF
            ELSE
              PACK    EMVIUD10,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS081
          IF        !@EQUAL
            MOVE      EMVIS081,EMVIUT01
          ENDIF
.
          MATCH     Z70,EMVIS082
          IF        !@EQUAL
            MOVE      EMVIS082,EMVIUT02
          ENDIF
.
          MATCH     Z70,EMVIS083
          IF        !@EQUAL
            MOVE      EMVIS083,EMVIUT03
          ENDIF
.
          MATCH     Z70,EMVIS084
          IF        !@EQUAL
            MOVE      EMVIS084,EMVIUT04
          ENDIF
.
          MATCH     Z70,EMVIS085
          IF        !@EQUAL
            MOVE      EMVIS085,EMVIUT05
          ENDIF
.
          MATCH     Z70,EMVIS086
          IF        !@EQUAL
            MOVE      EMVIS086,EMVIUT06
          ENDIF
.
          MATCH     Z70,EMVIS087
          IF        !@EQUAL
            MOVE      EMVIS087,EMVIUT07
          ENDIF
.
          MATCH     Z70,EMVIS088
          IF        !@EQUAL
            MOVE      EMVIS088,EMVIUT08
          ENDIF
.
          MATCH     Z70,EMVIS089
          IF        !@EQUAL
            MOVE      EMVIS089,EMVIUT09
          ENDIF
.
          MATCH     Z70,EMVIS090
          IF        !@EQUAL
            MOVE      EMVIS090,EMVIUT10
          ENDIF
.
          MATCH     Z70,EMVIS093
          IF        !@EQUAL
            MOVE      EMVIS093,EMVIYN03
          ENDIF
.
          MATCH     Z70,EMVIS094
          IF        !@EQUAL
            MOVE      EMVIS094,EMVIYN04
          ENDIF
.
          MATCH     Z70,EMVIS095
          IF        !@EQUAL
            MOVE      EMVIS095,EMVIYN05
          ENDIF
.
          MATCH     Z70,EMVIS096
          IF        !@EQUAL
            MOVE      EMVIS096,EMVIYN06
          ENDIF
.
          MATCH     Z70,EMVIS097
          IF        !@EQUAL
            MOVE      EMVIS097,EMVIYN07
          ENDIF
.
          MATCH     Z70,EMVIS098
          IF        !@EQUAL
            MOVE      EMVIS098,EMVIYN08
          ENDIF
.
          MATCH     Z70,EMVIS099
          IF        !@EQUAL
            MOVE      EMVIS093,EMVIYN09
          ENDIF
.
          MATCH     Z70,EMVIS101
          IF        !@EQUAL
            MOVE      EMVIS101,EMVIUN01
          ENDIF
.
          MATCH     Z70,EMVIS102
          IF        !@EQUAL
            MOVE      EMVIS102,EMVIUN02
          ENDIF
.
          MATCH     Z70,EMVIS103
          IF        !@EQUAL
            MOVE      EMVIS103,EMVIUN03
          ENDIF
.
          MATCH     Z70,EMVIS104
          IF        !@EQUAL
            MOVE      EMVIS104,EMVIUN04
          ENDIF
.
          MATCH       Z70,EMVIS105
          IF          !@EQUAL
            MOVE      EMVIS105,EMVIUN05
          ENDIF
.
          MATCH     Z70,EMVIS106
          IF        !@EQUAL
            MOVE      EMVIS106,EMVIUR01
          ENDIF
.
          MATCH     Z70,EMVIS107
          IF        !@EQUAL
            MOVE      EMVIS107,EMVIUR02
          ENDIF
.
          MATCH     Z70,EMVIS108
          IF        !@EQUAL
            MOVE      EMVIS108,EMVIUR03
          ENDIF
.
          MATCH     Z70,EMVIS109
          IF        !@EQUAL
            MOVE      EMVIS109,EMVIUR04
          ENDIF
.
          MATCH     Z70,EMVIS110
          IF        !@EQUAL
            MOVE      EMVIS110,EMVIUR05
          ENDIF
.
          MATCH     Z70,EMVIS149
          IF        !@EQUAL
            MOVE      EMVIS149,EMVITXT1
          ENDIF
.
          REP       "0 ",EMVIS154
          MATCH     Z70,EMVIS154
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS154
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS154,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS154,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS154
              MATCH     ZERO8,EMVIS154
              IF        @EQUAL
                PACK      EMVIAADT,SP70
              ELSE
                MOVE      EMVIS154,EMVIAADT
              ENDIF
            ELSE
              PACK    EMVIAADT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS155
          IF        !@EQUAL
            MOVE      EMVIS155,EMVIAATM
          ENDIF
.
          REP       "0 ",EMVIS156
          MATCH     Z70,EMVIS156
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS156
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS156,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS156,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS156
              MATCH     ZERO8,EMVIS156
              IF        @EQUAL
                PACK      EMVIAHDT,SP70
              ELSE
                MOVE      EMVIS156,EMVIAHDT
              ENDIF
            ELSE
              PACK    EMVIAHDT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS157
          IF        !@EQUAL
            MOVE      EMVIS157,EMVIAHTM
          ENDIF
.
          REP       "0 ",EMVIS158
          MATCH     Z70,EMVIS158
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS158
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS158,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS158,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS158
              MATCH     ZERO8,EMVIS158
              IF        @EQUAL
                PACK      EMVIDADT,SP70
              ELSE
                MOVE      EMVIS158,EMVIDADT
              ENDIF
            ELSE
              PACK    EMVIDADT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS159
          IF        !@EQUAL
            MOVE      EMVIS159,EMVIDATM
          ENDIF
.
          MATCH     Z70,EMVIS164
          IF        !@EQUAL
            MOVE      EMVIS164,EMVIMDCD
          ENDIF
.
          REP       "0 ",EMVIS165
          MATCH     Z70,EMVIS165
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS165
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS165,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS165,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS165
              MATCH     ZERO8,EMVIS165
              IF        @EQUAL
                PACK      EMVIMDDT,SP70
              ELSE
                MOVE      EMVIS165,EMVIMDDT
              ENDIF
            ELSE
              PACK    EMVIMDDT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS166
          IF        !@EQUAL
            MOVE      EMVIS166,EMVIMDTM
          ENDIF
.
          MATCH     Z70,EMVIS167
          IF        !@EQUAL
            MOVE      EMVIS167,EMVIUC31
          ENDIF
.
          MATCH     Z70,EMVIS168
          IF        !@EQUAL
            MOVE      EMVIS168,EMVIUC32
          ENDIF
.
          MATCH     Z70,EMVIS169
          IF        !@EQUAL
            MOVE      EMVIS169,EMVIUC33
          ENDIF
.
          MATCH     Z70,EMVIS170
          IF        !@EQUAL
            MOVE      EMVIS170,EMVIUC34
          ENDIF
.
          MATCH     Z70,EMVIS171
          IF        !@EQUAL
            MOVE      EMVIS171,EMVIUC35
          ENDIF
.
          REP       "0 ",EMVIS172
          MATCH     Z70,EMVIS172
          IF        !@EQUAL & !@EOS
            MATCH     SP70,EMVIS172
            IF        !@EQUAL & !@EOS
              UNPACK    EMVIS172,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      EMVIS172,CENT,YEAR2,MONTH2,DAY
              REP       " 0",EMVIS172
              MATCH     ZERO8,EMVIS172
              IF        @EQUAL
                PACK      EMVIMPDT,SP70
              ELSE
                MOVE      EMVIS172,EMVIMPDT
              ENDIF
            ELSE
              PACK    EMVIMPDT,SP70
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVIS173
          IF        !@EQUAL
            MOVE      EMVIS173,EMVIMPTM
          ENDIF
.
          MATCH     Z70,EMVIS179
          IF        !@EQUAL
            MOVE      EMVIS179,EMVIAHCP
          ENDIF
.
STVIS999  RETURN
.
.------------------------------------------------------------
.         MONNUM00  Convert month name to number
.------------------------------------------------------------
MONNUM00    MATCH     JAN,MONTH
            IF        @EQUAL
              MOVE      ONE,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     FEB,MONTH
            IF        @EQUAL
              MOVE      TWO,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     MAR,MONTH
            IF        @EQUAL
              MOVE      THREE,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     APR,MONTH
            IF        @EQUAL
              MOVE      FOUR,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     MAY,MONTH
            IF        @EQUAL
              MOVE      FIVE,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     JUN,MONTH
            IF        @EQUAL
              MOVE      SIX,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     JUL,MONTH
            IF        @EQUAL
              MOVE      SEVEN,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     AUG,MONTH
            IF        @EQUAL
              MOVE      EIGHT,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     SEP,MONTH
            IF        @EQUAL
              MOVE      NINE,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     OCT,MONTH
            IF        @EQUAL
              MOVE      TEN,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     NOV,MONTH
            IF        @EQUAL
              MOVE      TEN1,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     DEC,MONTH
            IF        @EQUAL
              MOVE      TEN2,MONTH2
              GOTO      MONNUM99
            ENDIF
.
MONNUM99  RETURN
.
.------------------------------------------------------------
. Update single fields in emrvisaf
. Inputs : ADMISSNO - Emr visit number
.          VALDTYPE - Field to update
.          VALDCODE - Value to update
.------------------------------------------------------------
UPDEMR00  CALL      XMLHED00
          BRANCH    EXIT,UPDEMR99
.         
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,UPDEMR90
.
          IF        VALDTYPE=1
            MOVE      VALDCODE,EMVIUR01
            GOTO      UPDEMR60
          ENDIF
.
          IF        VALDTYPE=2
            MOVE      VALDCODE,EMVIUC28
            GOTO      UPDEMR60
          ENDIF
.
          IF        VALDTYPE=3
            MOVE      VALDCODE,EMVIYN01
            GOTO      UPDEMR60
          ENDIF
.
          IF        VALDTYPE=4
            MATCH     SP70,VALDCODE
            IF        !@EQUAL & !@EOS
              UNPACK    VALDCODE,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      VALDCODE,CENT,YEAR2,MONTH2,DAY
              REP       " 0",VALDCODE
              MATCH     ZERO8,VALDCODE
              IF        @EQUAL
                PACK      VALDCODE,SP70
              ELSE
                MOVE      VALDCODE,EMVIUD06
              ENDIF
            ELSE
              PACK    EMVIUD06,SP70
            ENDIF
            GOTO      UPDEMR60
          ENDIF
.
          IF        VALDTYPE=5
            MOVE      VALDCODE,EMVIUT06
            GOTO      UPDEMR60
          ENDIF
.
          IF        VALDTYPE=6
            MOVE      VALDCODE,EMVIUC35
            GOTO      UPDEMR60
          ENDIF
.
          IF        VALDTYPE=7
            MATCH     SP70,VALDCODE
            IF        !@EQUAL & !@EOS
              UNPACK    VALDCODE,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      VALDCODE,CENT,YEAR2,MONTH2,DAY
              REP       " 0",VALDCODE
              MATCH     ZERO8,VALDCODE
              IF        @EQUAL
                PACK      VALDCODE,SP70
              ELSE
                MOVE      VALDCODE,EMVIUD10
              ENDIF
            ELSE
              PACK    EMVIUD10,SP70
            ENDIF
            GOTO      UPDEMR60
          ENDIF
.
          IF        VALDTYPE=8
            MOVE      VALDCODE,EMVIUT10
            GOTO      UPDEMR60
          ENDIF
.
UPDEMR10  IF        VALDTYPE=9
            MOVE      VALDCODE,EMVIUC32
            GOTO      UPDEMR60
          ENDIF
.
          IF        VALDTYPE=10
            MATCH     SP70,VALDCODE
            IF        !@EQUAL & !@EOS
              UNPACK    VALDCODE,DAY,ANS,MONTH,ANS,CENT,YEAR2
              CALL      MONNUM00
              PACK      VALDCODE,CENT,YEAR2,MONTH2,DAY
              REP       " 0",VALDCODE
              MATCH     ZERO8,VALDCODE
              IF        @EQUAL
                PACK      VALDCODE,SP70
              ELSE
                MOVE      VALDCODE,EMVIUD08
              ENDIF
            ELSE
              PACK    EMVIUD08,SP70
            ENDIF
            GOTO      UPDEMR60
          ENDIF
.
          IF        VALDTYPE=11
            MOVE      VALDCODE,EMVIUT08
            GOTO      UPDEMR60
          ENDIF
.
UPDEMR20  IF        VALDTYPE=12
            MOVE      VALDCODE,EMVIUC33
            GOTO      UPDEMR60
          ENDIF
.
UPDEMR30  IF        VALDTYPE=13
            MOVE      VALDCODE,EMVIUC34
            GOTO      UPDEMR60
          ENDIF
.
          GOTO      UPDEMR91
.
UPDEMR60  CALL      UPEMVIS1
          CALL      WEDV0000                     * EDWARD visit alteration
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Record Updated":
                             "</RETURN_VALUE>";
          GOTO      UPDEMR98
.
UPDEMR90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      UPDEMR98
.
UPDEMR91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Update Type - ":
                             VALDTYPE,"</RETURN_VALUE>"
          GOTO      UPDEMR98
.
UPDEMR98  CALL      XMLEND00
UPDEMR99  RETURN
.------------------------------------------------------------
. Check if this diagnosis has already been output in the search
.------------------------------------------------------------
CDIA0000  MOVE       ZERO,F3
          MOVE       ZERO,EXIT
.
CDIA1000  ADD        ONE,F3
          IF         F3>DIAAREND
            IF         F3>200
              GOTO       CDIA9999
            ENDIF
            MOVE       F3,DIAAREND
            MOVE       EMEDITM,DIAARRAY[F3]
            GOTO       CDIA9999
          ENDIF
.         
          MATCH      EMEDITM,DIAARRAY[F3]
          GOTO       CDIA1000 IF NOT EQUAL
.         
          MOVE       ONE,EXIT
.
CDIA9999  RETURN
.
.------------------------------------------------------------
. Update Emergency Field Change Audit if required
.------------------------------------------------------------
WRCHA000  MATCH     Z70,UPDFIELD
          GOTO      WRCHA999 IF EQUAL
.         
          MATCH     SP70,UPDFIELD
          GOTO      WRCHA999 IF EQUAL
.         
          MATCH     Z70,REASONFC
          GOTO      WRCHA999 IF EQUAL
.
          PACK      EMCHVISN,ADMISSNO,SP70
          CALL      IBACLOCK
          PACK      EMCHDATE,CCC,CYY,CMM,CDD
          REPLACE   " 0",EMCHDATE
          CLOCK     TIME,EMCHTIME
          PACK      EMCHUPTY,UPDFIELD,SP70
          PACK      EMCHREAS,REASONFC,SP70
.
          MATCH     SP70,WEBUSEID
          IF        @EQUAL
            MOVE      USERID,EMCHUSID
          ELSE
            MOVE      WEBUSEID,EMCHUSID
          ENDIF
.
          PACK      EMCHOVAL,UPDVALUE,SP70
          PACK      EMCHCVAL,NEWVALUE,SP70
.
          PACK      KEY24,EMCHVISN,EMCHDATE,EMCHTIME,SP70
          CALL      RDEMCHA1
          IF        OVRCD=1
            CALL      WREMCHA1
          ENDIF
.
WRCHA999  RETURN
.
.------------------------------------------------------------
. Update the bed request and pre admission admitting doctor
. with the emergency visits admitting doctor - EMVIUR01
.------------------------------------------------------------
ADMDOC00  CALL      XMLHED00
          BRANCH    EXIT,ADMDOC99
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,ADMDOC90
.
          MATCH     SP70,EMVIPADM                * Any linked IP visit
          GOTO      ADMDOC20 IF EQUAL
.
          PACK      KEY8,EMVIPADM,SP70
          CALL      RDPTMIS1 
          BRANCH    OVRCD,ADMDOC20
.
          IF        ASTAT=1
            MOVE      EMVIUR01,ADOCTA            * Pre admission only
            CALL      UPPTMIS1
          ENDIF
.
ADMDOC20  PACK      KEY25,ADMISSNO,ONE,SP70
          CALL      RSPMBRQ2
ADMDOC25  CALL      RKPMBRQ2
          BRANCH    OVRCD,ADMDOC80
.
          MATCH     ADMISSNO,PMBRVISN
          GOTO      ADMDOC80 IF NOT EQUAL
.
          MATCH     "1",PMBRRSTA                 * Requested status only
          GOTO      ADMDOC80 IF NOT EQUAL
.
          MOVE      EMVIUR01,PMBRRHCP
.
          CALL      UPPMBRQ2
          GOTO      ADMDOC25
.
ADMDOC80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Ok":
                             "</RETURN_VALUE>"
          GOTO      ADMDOC98
.
ADMDOC90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      ADMDOC98
.
ADMDOC98  CALL      XMLEND00
ADMDOC99  RETURN
.------------------------------------------------------------
. Remote script to find duplicates in emrvcdaf
.------------------------------------------------------------
EMRVCD00  CALL      XMLHED00
          BRANCH    EXIT,EMRVCD99
.
          PACK      KEY14,EMVCD001,ZERO,ZERO,FIVE,SP70
          CALL      RSEMVCD1
EMRVCD10  CALL      RKEMVCD1
          BRANCH    OVRCD,EMRVCD80
.
          MATCH     EMVCD001,EMVCVIST
          GOTO      EMRVCD80 IF NOT EQUAL
.
          MATCH     EMVCD002,EMVCTYPE          * Emergency diagnosis ?
          GOTO      EMRVCD80 IF NOT EQUAL
.
          MATCH     EMVCD003,EMVCUNIQ
          GOTO      EMRVCD10 IF EQUAL
.
          MATCH     EMVCD005,EMVCMNCD
          GOTO      EMRVCD90 IF EQUAL
.
          GOTO      EMRVCD10
.
EMRVCD80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ZERO:
                             "</RETURN_VALUE>"
          GOTO      EMRVCD98
.
EMRVCD90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
          GOTO      EMRVCD98
.
EMRVCD98  CALL      XMLEND00
EMRVCD99  RETURN
.
.------------------------------------------------------------
. Remote script to update primary diagnosis
.------------------------------------------------------------
PRMDIA00  CALL      XMLHED00
          BRANCH    EXIT,PRMDIA99
.
PRMDIA10  PACK      KEY8,ADMISSNO
          CALL      RDEMVIS1
          IF        OVRCD<>1
            CALL      WEDV0000                     * EDWARD visit alteration
          ENDIF
.
          MOVE      "0",EMRDIAIN
.
          UNPACK    VALDCODE,DIM10,DIM3
          PACK      DIM10,DIM10,SP70
          PACK      DIM3,DIM3,SP70
.
          PACK      VALDDESC,VALDDESC,SP70,SP70
.
          MATCH     SP70,DIM10             * Delete Primary Diagnosis
          IF        @EQUAL
            CALL      DELCOD00
            CALL      SETBRQ00
            MATCH     "1",EMRDIAIN
            GOTO      PRMDIA90 IF EQUAL
            GOTO      PRMDIA80
          ENDIF
.
          PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,DIM3,SP70       * Update the
          CALL      RDEMVCD1                                      * primary diag
          IF        OVRCD=0
            MOVE      DIM10,EMVCMNCD
            MOVE      VALDDESC,EMVCFTXT
            CALL      UPEMVCD1
            CALL      SETBRQ00
            CALL      SETNAT00
            MATCH     "1",EMRDIAIN
            GOTO      PRMDIA90 IF EQUAL
            GOTO      PRMDIA80 
          ELSE
            CALL      ADDCOD00
            CALL      SETBRQ00
            CALL      SETNAT00
            MATCH     "1",EMRDIAIN
            GOTO      PRMDIA90 IF EQUAL
            GOTO      PRMDIA80
          ENDIF
.
PRMDIA80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ZERO:
                             "</RETURN_VALUE>"
          GOTO      PRMDIA98
.
PRMDIA90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
          GOTO      PRMDIA98
.
PRMDIA98  CALL      XMLEND00
PRMDIA99  RETURN
.------------------------------------------------------------
. Delete Primary Diagnosis from emrvcdaf
.------------------------------------------------------------
DELCOD00  PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,DIM3,SP70
          CALL      RDEMVCD1
          IF        OVRCD=0
            CALL      DEEMVCD1
            CALL      DAEC0000         * Update delete flag for AECC Class rec.
.
            PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,SP70
            CALL      RSEMVCD1
            CALL      RKEMVCD1
            BRANCH    OVRCD,DELCOD99
.
            MATCH     ADMISSNO,EMVCVIST
            GOTO      DELCOD99 IF NOT EQUAL
.
            MATCH     "005",EMVCTYPE
            GOTO      DELCOD99 IF NOT EQUAL
.
            MOVE      "000",EMVCSEQU
            CALL      UPEMVCD1
.
          ENDIF
.
DELCOD99  RETURN
.------------------------------------------------------------
. Find primary diagnosis in EMRVCD. If found then update PMSBRQ
.------------------------------------------------------------
SETBRQ00  PACK      KEY17,ADMISSNO,ZERO,ZERO,FIVE,ZERO3,SP70
          CALL      RSEMVCD2
SETBRQ10  CALL      RKEMVCD2
          BRANCH    OVRCD,SETBRQ40
.
          MATCH     ADMISSNO,EMVCVIST
          GOTO      SETBRQ40 IF NOT EQUAL
.
          MATCH     "005",EMVCTYPE
          GOTO      SETBRQ40 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU
          GOTO      SETBRQ40 IF NOT EQUAL
.
          MOVE      EMVCMNCD,DIM10
          MOVE      EMVCFTXT,DIM100
.
          GOTO      SETBRQ50
.
SETBRQ40  PACK      DIM10,SP70
          PACK      DIM100,SP70,SP70
.
SETBRQ50  PACK      KEY25,ADMISSNO,ONE,SP70
          CALL      RSPMBRQ2
          CALL      RKPMBRQ2
          BRANCH    OVRCD,SETBRQ99
.
          MATCH     ADMISSNO,PMBRVISN
          GOTO      SETBRQ99 IF NOT EQUAL
.
          MATCH     "1",PMBRRSTA
          GOTO      SETBRQ99 IF NOT EQUAL
.
          MATCH     "0",EMCNDEDI
          IF        @EQUAL
            MOVE      DIM10,PMBRDIAG
            MOVE      DIM100,PMBRFTXT
            GOTO      SETBRQ80
          ENDIF
.
          MATCH     "1",EMCNDEDI
          IF        @EQUAL
            MOVE      SP70,PMBRDIAG
            MOVE      DIM100,PMBRFTXT
            MOVE      "1",EMRDIAIN
            GOTO      SETBRQ80
          ENDIF
.
          MATCH     "2",EMCNDEDI
          IF        @EQUAL
            MOVE      SP70,PMBRDIAG
            MOVE      DIM100,PMBRFTXT
            GOTO      SETBRQ80
          ENDIF
.
          MATCH     "3",EMCNDEDI
          IF        @EQUAL
            MOVE      DIM10,PMBRDIAG
            GOTO      SETBRQ80
          ENDIF
.
SETBRQ80  CALL      UPPMBRQ2
.
SETBRQ99  RETURN
.------------------------------------------------------------
.  Add a code
.------------------------------------------------------------
ADDCOD00  PACK      KEY5,CATwl,ZERO,ZERO,FIVE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,ADDCOD90
.
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,ADDCOD91
.
          MOVE      ZERO,SEQFLAG
ADDCOD05  MOVE      ONE,COUNTER
          PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,Z70
          CALL      RSEMVCD1
ADDCOD10  CALL      RPEMVCD1
          BRANCH    OVRCD,ADDCOD20
          MATCH     ADMISSNO,EMVCVIST
          GOTO      ADDCOD20 IF NOT EQUAL
.
          MOVE      EMVCUNIQ,COUNTER
          ADD       ONE,COUNTER
.
ADDCOD20  CALL      CLRVCD00                  * Clear all the file variables
.
          MOVE      WBSEUID,EMVCWUSR
          MOVE      WBSEUID,EMVCCUID          * user id created
.
          CALL      IBACLOCK
          PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
          REP       " 0",EMVCLUDT
          PACK      EMVCLUTM,CTIMEIS          * last update time
          PACK      EMVCCDAT,CCC,CYY,CMM,CDD  * date created
          REP       " 0",EMVCCDAT
          PACK      EMVCCTIM,CTIMEIS          * time created
          MOVE      SP70,EMVCSUBN
          MOVE      SP70,EMVCEDAD
.
          CALL      VCDSAV00      * Moves input variables to file variables
          PACK      KEY14,EMVCVIST,EMVCTYPE,EMVCUNIQ,SP70
          CALL      WREMVCD1      * Writes away the data
          CALL      SETEXT00      * Writes to EMR Text File for Emergency pat.
.
          MOVE      "EMRD",UPDTTYPE
          MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            PACK      KEY8,ADMISSNO,SP70     
            CALL      RDEMVIS1 
            BRANCH    OVRCD,ADDCOD90
.
            CALL      WRTHIS00
            PROC      EMRDRCHR          * Update Dr Billing complete
          ENDIF
.
ADDCOD90  MOVE      ZERO,EXIT
          GOTO      ADDCOD99
.
ADDCOD91  MOVE      ONE,EXIT
          GOTO      ADDCOD99
.
ADDCOD99  RETURN
.
.------------------------------------------------------------
. Initialize's file data
.-----------------------------------------------------------
CLRVCD00  MOVE      SP70,EMVCVIST
          MOVE      SP70,EMVCTYPE
          MOVE      SP70,EMVCUNIQ
          MOVE      SP70,EMVCCSYS
          MOVE      SP70,EMVCMNCD
          MOVE      SP70,EMVCSEQU
          MOVE      SP70,EMVCDATE
          MOVE      SP70,EMVCTIME
          MOVE      SP70,EMVCUDC1
          MOVE      SP70,EMVCUDC2
          MOVE      SP70,EMVCUDC3
          MOVE      SP70,EMVCUDC4
          MOVE      SP70,EMVCUDR1
          MOVE      SP70,EMVCUDR2
          MOVE      SP70,EMVCUYN1
          MOVE      SP70,EMVCUYN2
          MOVE      SP70,EMVCUYN3
          MOVE      SP70,EMVCUYN4
          MOVE      ZERO,EMVCUDA1
          MOVE      ZERO,EMVCUDA2
          MOVE      ZERO,EMVCUDA3
          MOVE      ZERO,EMVCUDA4
          MOVE      SP70,EMVCUDD1
          MOVE      SP70,EMVCUDD2
          MOVE      SP70,EMVCUDD3
          MOVE      SP70,EMVCUDD4
          MOVE      SP70,EMVCUDT1
          MOVE      SP70,EMVCUDT2
          MOVE      SP70,EMVCUDT3
          MOVE      SP70,EMVCUDT4
          MOVE      SP70,EMVCEFLG
          MOVE      SP70,EMVCLUDT
          MOVE      SP70,EMVCLUTM
          MOVE      SP70,EMVCWUSR
          MOVE      SP70,EMVCSPAR
          MOVE      SP70,EMVCDELE
          MOVE      SP70,EMVCFTXT
.
CLRVCD99  RETURN
.
.------------------------------------------------------------
. Moves cgi variables into file variables
.------------------------------------------------------------
VCDSAV00  MOVE      ADMISSNO,EMVCVIST
          MOVE      "005",EMVCTYPE
          MOVE      COUNTER,EMVCUNIQ
          REP       " 0",EMVCUNIQ
          MOVE      " 5",EMVCCSYS
          MOVE      DIM10,EMVCMNCD
          MOVE      SEQFLAG,EMVCSEQU
          REP       " 0",EMVCSEQU
          MOVE      VALDDESC,EMVCFTXT
          MOVE      EMVCD031,EMVCEFLG
.
VCDSAV99  RETURN
.------------------------------------------------------------
.  Update EMR Test File
.------------------------------------------------------------
SETEXT00  BRANCH    EMVCCSYS,SETEXT99,SETEXT99,SETEXT99,SETEXT99
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          BRANCH    OVRCD,SETEXT99
.
          MOVE      SP70,KEY22
          MOVE      SP70,KEY48
          PACK      KEY8,EMVCVIST,SP70
          CALL      RDEMDCM1
          IF        OVRCD=1
            CALL      CLREMD00              * Clear the text file
            MOVE      EMVCVIST,EMDCADMI     * Updating diagnosis comments
.           UNPACK    EMICDESC,KEY48,KEY22                             *D-60868
            CALL      SPLDIA00                                         *I-60868
            MOVE      SP70,EMICDESC
            MOVE      KEY48,EMICDESC
            CALL      SETED000              * Diagnosis file variable storage
            MATCH     SP70,KEY22
            IF        !@EQUAL
              MOVE      SP70,EMICDESC
              MOVE      KEY22,EMICDESC
              CALL      SETED000              * Diagnosis file variable storage
            ENDIF
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WREMDCM1
            TRAPCLR   IO
          ELSE
            MOVE      EMVCVIST,EMDCADMI     * Updating diagnosis comments
.           UNPACK    EMICDESC,KEY48,KEY22                             *D-60868
            CALL      SPLDIA00                                         *I-60868
            MOVE      SP70,EMICDESC
            MOVE      KEY48,EMICDESC
            CALL      SETED000              * Diagnosis file variable storage
            MATCH     SP70,KEY22
            IF        !@EQUAL
              MOVE      SP70,EMICDESC
              MOVE      KEY22,EMICDESC
              CALL      SETED000              * Diagnosis file variable storage
            ENDIF
            CALL      UPEMDCM1
          ENDIF

SETEXT99  RETURN
.------------------------------------------------------------
.  Clear Diagnisis File
.------------------------------------------------------------
CLREMD00  MOVE      SP70,EMDCTXT1
          MOVE      SP70,EMDCTXT2
          MOVE      SP70,EMDCTXT3
          MOVE      SP70,EMDCTXT4
          MOVE      SP70,EMDCTXT5
          MOVE      SP70,EMDCTXT6
          MOVE      SP70,EMDCTXT7
          MOVE      SP70,EMDCTXT8
          MOVE      SP70,EMDCTXT9
          MOVE      SP70,EMDCLUID
          MOVE      SP70,EMDCSPAR
.
CLREMR99  RETURN
.
.------------------------------------------------------------
. Split Diagnosis in to KEY48 and KEY22                                *I-60868
.------------------------------------------------------------
SPLDIA00  MOVE      FORTY8,FORM2
SPLDIA10  RESET     EMICDESC,FORM2
          CMATCH    EMICDESC,SP1
.
          IF        @EQUAL
            UNPACK    EMICDESC,KEY22
            RESET     EMICDESC
            SETLPTR   EMICDESC,FORM2
            UNPACK    EMICDESC,KEY48
            RESET     EMICDESC
            GOTO      SPLDIA99
          ENDIF
.
          SUBTRACT  ONE,FORM2
.
          IF        FORM2=ZERO
            RESET     EMICDESC
            UNPACK    EMICDESC,KEY48,KEY22
          ELSE
            GOTO      SPLDIA10
          ENDIF
.
SPLDIA99  RETURN
.
.------------------------------------------------------------
.  Save Routen for Text
.------------------------------------------------------------
SETED000  MATCH     SP70,EMDCTXT1
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT1
            GOTO      SETED999
          ENDIF     
.           
          MATCH     SP70,EMDCTXT2
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT2
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT3
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT3
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT4
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT4
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT5
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT5
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT6
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT6
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT7
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT7
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT8
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT8
            GOTO      SETED999
          ENDIF
.
          MATCH     SP70,EMDCTXT9
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT9
            GOTO      SETED999
          ENDIF
.
SETED999  RETURN
.
.------------------------------------------------------------
.  MAGRAN Remote Script 
.------------------------------------------------------------
MAGRAN00  CALL      XMLHED00
          BRANCH    EXIT,MAGRAN99
.
MAGRAN10  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,MAGRAN99
.
          PACK      KEY16,EMVIDATE,EMVITIME,SP70
          REP       ":0",KEY16
.
          PACK      SAVKEY16,DOCTDATE,DOCTTIME,SP70
          REP       ":0",SAVKEY16
.
          MOVE      EMVINSDT,SAVEDATE
          MOVE      EMVINSTM,SAVETIME
.
MAGRAN20  MATCH     SAVKEY16,KEY16
          IF        !@LESS
            WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                               "Nurse Seen Date/Time Before Arrival Date/Time":
                               "</RETURN_VALUE>"
            GOTO      MAGRAN98
          ENDIF
.
          PACK      KEY16,EMVIDDAT,EMVIDTIM,SP70
          MATCH     SP70,KEY16
          GOTO      MAGRAN90 IF EQUAL
.
          REP       ":0",KEY16
          MATCH     KEY16,SAVKEY16
          IF        !@LESS
            WRITE     HTMLFILE;"RETURN_VALUE TYPE=ERROR":
                            "Nurse Seen Date/Time is After Discharge Date/Time":
                               "</RETURN_VALUE>"
            GOTO      MAGRAN98
          ENDIF
.
MAGRAN90  CALL      VLFRNS00
          IF        VLFRNURS=0
            PACK      EMVIATNS,DOCTCODE,SP70
          ENDIF
.
          MOVE      DOCTDATE,EMVINSDT
          MOVE      DOCTTIME,EMVINSTM
          CALL      UPEMVIS1
          CALL      WEDV0000                     * EDWARD visit alteration
          CALL      NRHIST00
.
          MOVE      "04",UPDFIELD
          PACK      UPDVALUE,SAVEDOCT,SAVEDATE,SAVETIME,SP70
          PACK      NEWVALUE,DOCTCODE,DOCTDATE,DOCTTIME,SP70
.
          CALL      WRCHA000 
.
MAGRAN98  CALL      XMLEND00
.
MAGRAN99  RETURN
.
.------------------------------------------------------------
. Change the nurse date and time in the history file
.------------------------------------------------------------
NRHIST00  PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
NRHIST10  CALL      RKEMHIS1
          BRANCH    OVRCD,NRHIST99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NRHIST99 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          IF        @EQUAL
            MOVE      EMHINUR,SAVEDOCT           * Save Nurse code
            GOTO      NRHIST60
          ENDIF
.
          GOTO      NRHIST10
.
NRHIST50  CALL      RKEMHIS1
          BRANCH    OVRCD,NRHIST90
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      NRHIST90 IF NOT EQUAL
.
          MATCH     SAVEDOCT,EMHINUR
          GOTO      NRHIST90 IF NOT EQUAL
.
NRHIST60  MOVE      DOCTCODE,EMHINUR
          MOVE      EMVINSDT,EMHINSD
          UNPACK    EMVINSTM,HOUR,D1,MIN,D1,SEC
          PACK      EMHINST,HOUR,MIN,SEC
.
          CALL      UPEMHIS1
.
          GOTO      NRHIST50
.
NRHIST90  
.
.         MATCH     "1",UPDFLAG1
.         IF        !@EQUAL
.           CALL      WRTHIS00
.         ENDIF
.
NRHIST99  RETURN
.------------------------------------------------------------
. Validate First Seen Nurse                         
.------------------------------------------------------------
VLFRNS00  MOVE      ZERO,VLFRNURS
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
VLFRNS10  CALL      RKEMHIS1
          BRANCH    OVRCD,VLFRNS99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      VLFRNS99 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          IF        @EQUAL
            GOTO      VLFRNS50
          ENDIF
.
          GOTO      VLFRNS10
.
VLFRNS50  CALL      RKEMHIS1
          BRANCH    OVRCD,VLFRNS99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      VLFRNS99 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          IF        @EQUAL
            MOVE      ONE,VLFRNURS
            GOTO      VLFRNS99
          ENDIF
.
          GOTO      VLFRNS50
.
VLFRNS99  RETURN
.------------------------------------------------------------
. Locking the management Notes
.------------------------------------------------------------
LOCMAN00  CALL      XMLHED00
          BRANCH    EXIT,LOCMAN99
.
LOCMAN10  MOVE      ZERO,LOCKED
          MOVE      "002",VSCTTYPE
          MOVE      "  1",DIM3
          MOVE      SP70,SAVEUSER
          MOVE      SP70,DATETIME
          PACK      KEY14,ADMISSNO,VSCTTYPE,DIM3,SP70
          CALL      RDVSCMT1
          BRANCH    OVRCD,LOCMAN50
.
          PACK      VSCTUKEY,VSCTUKEY,SP70
          UNPACK    VSCTUKEY,DATETIME,SAVEUSER
          MATCH     SP70,DATETIME
          GOTO      LOCMAN40 IF EQUAL
.
          PACK      SAVEUSER,SAVEUSER,SP70
          MATCH     SP70,SAVEUSER
          IF        !@EQUAL
            MATCH     USERID,SAVEUSER
            IF        !@EQUAL
              MOVE      ONE,LOCKED
              GOTO      LOCMAN80
            ENDIF
          ENDIF
.
          UNPACK    UPDATEKY,KEY8,KEY14
          MATCH     DATETIME,KEY14
          IF        @LESS
            MOVE      TWO,LOCKED
            GOTO      LOCMAN80
          ENDIF
.
LOCMAN40  UNPACK    UPDATEKY,KEY8,KEY14
          PACK      VSCTUKEY,KEY14,WEBUSEID
          CALL      UPVSCMT1
          GOTO      LOCMAN80
.
LOCMAN50  MOVE      ADMISSNO,VSCTVIST
          MOVE      "002",VSCTTYPE
          UNPACK    UPDATEKY,KEY8,KEY14
          PACK      VSCTUKEY,KEY14,WEBUSEID
          MOVE      DIM3,VSCTLINE
          PACK      VSCTDATA,SP70,SP70
          CALL      WRVSCMT1
          GOTO      LOCMAN80
.
LOCMAN80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;LOCKED,"|",SAVEUSER,"|",;
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      LOCMAN98
.
LOCMAN91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid User - ":
                             VALDCODE,"</RETURN_VALUE>"
          GOTO      LOCMAN98
.
LOCMAN98  CALL      XMLEND00
LOCMAN99  RETURN
.
.------------------------------------------------------------
. Unlock Management Notes if it is the same User   
.------------------------------------------------------------
UNLCMN00  CALL      XMLHED00
          BRANCH    EXIT,UNLCMN99
.
          PACK      KEY14,ADMISSNO,ZERO,ZERO,TWO,SP1,SP1,ONE,SP70
          CALL      RDVSCMT1
          BRANCH    OVRCD,UNLCMN90
.
          UNPACK    VSCTUKEY,KEY14,KEY10
.
          SQUEEZE   KEY10
          SQUEEZE   WEBUSEID
          MATCH     KEY10,WEBUSEID
          IF        @EQUAL
            PACK      VSCTUKEY,KEY14,SP70
            CALL      UPVSCMT1
          ENDIF
.
UNLCMN90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;"</RETURN_VALUE>"
.
          CALL      XMLEND00
UNLCMN99  RETURN
+
.------------------------------------------------------------
. Check for any EMR visits that overlap this arrival date
.------------------------------------------------------------
OVERLP00  CALL      XMLHED00
          BRANCH    EXIT,OVERLP99
.
          MATCH     SP70,VALDURNO                * Exit if no urnumber
          GOTO      OVERLP60 IF EQUAL
.
          MATCH     SP70,VALDDATE                * Exit if no arrival date
          GOTO      OVERLP60 IF EQUAL
.
          MATCH     SP70,VALDTIME                * Exit if no arrival time
          GOTO      OVERLP60 IF EQUAL
.
          PACK      KEY24,VALDURNO,VALDDATE,Z70
          CALL      RSPTVIS2
OVERLP10  CALL      RPPTVIS2
          BRANCH    OVRCD,OVERLP60
.
          MATCH     PVIURNO,VALDURNO             * Same U/R
          GOTO      OVERLP60 IF NOT EQUAL
.
          COMPARE   ONE,PVITYPE                  * Emr Visit
          GOTO      OVERLP10 IF NOT EQUAL
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDEMVIS1                     * Read EMR visit
          BRANCH    OVRCD,OVERLP10
.
          COMPARE   FOUR,EMVISTAT                * Ignore if visit cancelled
          GOTO      OVERLP10 IF EQUAL
.
          COMPARE   ONE,EMVISTAT                 * Warn if Current ED vistit
          GOTO      OVERLP50 IF EQUAL
.
          MATCH     EMVIDATE,VALDDATE
          IF        @EQUAL
            PACK     KEY16,EMVIDATE,EMVITIME,SP70     * Arrival date/time
            PACK     KEY16A,VALDDATE,VALDTIME,SP70    * New arrival date/time
.
            MATCH    KEY16,KEY16A
            GOTO     OVERLP60 IF LESS
          ENDIF
.
          IF        EMVISTAT=2 | EMVISTAT=3
            PACK     KEY16,EMVIDDAT,EMVIDTIM,SP70     * Discharge date/time
            PACK     KEY16A,VALDDATE,VALDTIME,SP70    * New  arrival date/time
.
            MATCH    KEY16A,KEY16
            GOTO     OVERLP60 IF LESS
          ENDIF
.
OVERLP50  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=WARNING>":
                             "This visit is going to overlap an ":
                             "existing ED presentation."
          WRITE     HTMLFILE;"Click OK to Continue, Cancel to Abort":
                             "</RETURN_VALUE>"
          GOTO      OVERLP98
.
OVERLP60  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             SP1,"|":
                             "</RETURN_VALUE>";   * No visit overlap
          GOTO      OVERLP98
.
OVERLP98  CALL      XMLEND00
OVERLP99  RETURN
.------------------------------------------------------------
.        Update Doctor Seen
.        DOCTCODE = New doctor code. Blank if deleting doctor
.-----------------------------------------------------------
DDTSN000  CALL      XMLHED00
          BRANCH    EXIT,DDTSN999
.
          PACK      KEY8,ADMISSNO,SP70
DDTSN005  CALL      RLEMVIS1
          BRANCH    OVRCD,DDTSN090,DDTSN091
.
          COMPARE   FOUR,EMVISTAT
          GOTO      DDTSN090 IF EQUAL
.
          MOVE      DOCTCODE,EMVIDOCT
          MATCH     SP70,DOCTCODE          * Do not set up dates if no doctor
          GOTO      DDTSN020 IF EQUAL
.
          MATCH     "1",EMVITRIG           * Triage cat of 1 (RED)
          GOTO      DDTSN010 IF NOT EQUAL
.
          MATCH     SP70,EMVIDRDT          * If no doctor allocated
          GOTO      DDTSN020 IF NOT EQUAL
.
          MOVE      EMVIDATE,EMVIDRDT      * Make seen date and time the same
          MOVE      EMVITIME,EMVIDRTM      * as arrival date and time
          GOTO      DDTSN020
.
DDTSN010  MATCH     SP70,EMVIDRDT          * Do not change if date exists
          GOTO      DDTSN020 IF NOT EQUAL
.
          PACK      KEY8,DOCTDATE,SP70
          REP       " 0",KEY8
          MOVE      KEY8,EMVIDRDT                * System date
          MOVE      DOCTTIME,EMVIDRTM                * System Time
.
          MATCH     EMVIDATE,DOCTDATE
          GOTO      DDTSN094 IF LESS
          IF        @EQUAL
            MATCH     EMVITIME,DOCTTIME
            GOTO      DDTSN094 IF LESS
          ENDIF
.
DDTSN020  MATCH     SP70,DOCTCODE
          GOTO      DDTSN050 IF NOT EQUAL
.
          CALL      REDHIS00                     * Fix history and allocate
          BRANCH    EXIT,DDTSN092,DDTSN093       * the previous doctor
.
          CALL      MHDL0000           * Delete MH practitioner seen date/time
          CALL      WEDD0000           * EDWARD delete doctor
.
DDTSN050  CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
          CALL      WEDV0000                     * EDWARD visit alteration
          IF        CCCNSVHM = 1
            OPEN      CCIEX7A1,"cciex7af"
            IF        EMVISTAT=2|EMVISTAT=3
              MATCH     EMVIDOCT,SAVEDOCT
              IF        !@EQUAL
                MOVE      ANST,CLEXSTAT
                MOVE      ONE,CLEXTYPE
                MOVE      EMVIADMN,CLEXVISN
                PACK      KEY11,CLEXSTAT,CLEXTYPE,CLEXVISN
                CALL      RDCLEX71
                IF        OVRCD = 1
                  CALL      WRCLEX71
                ENDIF
              ENDIF
            ENDIF
            CLOSE     CCIEX7A1
          ENDIF
.
          PROC      EMRDRCHR               * Update Dr Billing complete
.
.         Send update broadcast message
.
          MOVE      EMVIURNO,KEY8          * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,DDTSN070
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,DDTSN070
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      FOUR,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                     * send update emr details
.
DDTSN070  MATCH     SP70,EMVIDOCT                * Don't write history if no
          GOTO      DDTSN080 IF EQUAL            * doctor is allocated
.
          MATCH     SP70,DOCTCODE                * Don't write a new history
          GOTO      DDTSN080 IF EQUAL            * record as a doctor was just
.                                                * deleted
          CALL      WRTHS200
          CALL      MHAD0000                * Add MH practitioner seen date/time
.
DDTSN080  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Doctor Seen Updated":
                             "</RETURN_VALUE>"
          GOTO      DDTSN098
.
DDTSN090  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      DDTSN098
.
DDTSN091  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      DDTSN098
.
DDTSN092  CALL      ULEMVIS1
          IF        SUPRVISR=1
            WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                               "Invalid First Doctor Deletion - can only ":
                               "delete most recent doctor allocated.":
                               "</RETURN_VALUE>"
          ELSE
            WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                               "Doctor History Exists - Invalid Deletion":
                               "</RETURN_VALUE>"
          ENDIF
          GOTO      DDTSN098
.
DDTSN093  CALL      ULEMVIS1
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid last doctor deletion - Can't delete the ":
                             "last doctor. ":
                             "Please use delete first doctor functionality.":
                             "</RETURN_VALUE>"
          GOTO      DDTSN098
.
DDTSN094  CALL      ULEMVIS1
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "First Seen Date/Time must be after Emergency Visit Date/Time.":
                             "</RETURN_VALUE>"
          GOTO      DDTSN098
.
DDTSN098  CALL      XMLEND00
DDTSN999  RETURN
+
.------------------------------------------------------------
.         Write history record
.------------------------------------------------------------
WRTHS200  MOVE      SP70,SAVEDRDT
          MOVE      SP70,SAVEDRTM
          MOVE      SP70,SAVENRDT
          MOVE      SP70,SAVENRTM
          MOVE      SP70,SAVEDOCT
          MOVE      SP70,SAVENURS
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
WRTHS205  CALL      RPEMHIS1
          BRANCH    OVRCD,WRTHS210
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      WRTHS210 IF NOT EQUAL
.
          MOVE      EMHIDSD,SAVEDRDT
          MOVE      EMHIDST,SAVEDRTM
          MOVE      EMHINSD,SAVENRDT
          MOVE      EMHINST,SAVENRTM
          MOVE      EMHIDOC,SAVEDOCT
          MOVE      EMHINUR,SAVENURS
.
WRTHS210  MOVE      EMVIADMN,EMHIVIS
          CLOCK     TIME,CTIMEIS
.
          PACK      EMHIDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMHIDAT
          UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
          PACK      EMHITIM,HOUR,MIN,SEC
          REP       " 0",EMHITIM
.
          MATCH     SAVEDOCT,EMVIDOCT       * Is this a new doctor
          IF        @EQUAL
            MOVE      SAVEDRDT,EMHIDSD        * Restore current doctor date and
            MOVE      SAVEDRTM,EMHIDST        * time
          ELSE
            MATCH     "1",EMVITRIG           * Triage cat of RED
            IF        @EQUAL
              MATCH     SP70,SAVEDOCT
              IF        @EQUAL
                MOVE      EMVIDATE,EMHIDSD   * Make seen date/time the same as
                UNPACK    EMVITIME,HOUR,D1,MIN,D1,SEC * arrival date/time if
                PACK      EMHIDST,HOUR,MIN,SEC        * first doctor
                REP       " 0",EMHIDST
              ELSE
                PACK      EMHIDSD,DOCTDATE,SP70   * New doctor so seen date/time
                REP       " 0",EMHIDSD            * are set the current/time
                UNPACK    DOCTTIME,HOUR,D1,MIN,D1,SEC
                PACK      EMHIDST,HOUR,MIN,SEC
                REP       " 0",EMHIDST
              ENDIF
            ELSE
              PACK      EMHIDSD,DOCTDATE,SP70 * New doctor so seen date/time
              REP       " 0",EMHIDSD            * are set the current/time
              UNPACK    DOCTTIME,HOUR,D1,MIN,D1,SEC
              PACK      EMHIDST,HOUR,MIN,SEC
              REP       " 0",EMHIDST
            ENDIF
          ENDIF
.
          MATCH     SAVENURS,EMVIATNS       * Is this a new nurse
          IF        @EQUAL
            MOVE      SAVENRDT,EMHINSD        * Restore current nurse date and
            MOVE      SAVENRTM,EMHINST        * time
          ELSE
            MATCH     "1",EMVITRIG           * Triage cat of RED
            IF        @EQUAL
              MATCH     SP70,SAVENURS
              IF        @EQUAL
                MOVE      EMVIDATE,EMHINSD   * Make seen date/time the same as
                UNPACK    EMVITIME,HOUR,D1,MIN,D1,SEC * arrival date/time if
                PACK      EMHINST,HOUR,MIN,SEC        * first doctor
                REP       " 0",EMHINST
              ELSE
                PACK      EMHINSD,CCC,CYY,CMM,CDD *New nurse so seen date/time
                REP       " 0",EMHINSD            *are set the current and time
                PACK      EMHINST,HOUR,MIN,SEC
                REP       " 0",EMHINST
              ENDIF
            ELSE
              PACK      EMHINSD,CCC,CYY,CMM,CDD *New nurse so seen date and time
              REP       " 0",EMHINSD            *are set the current and time
              PACK      EMHINST,HOUR,MIN,SEC
              REP       " 0",EMHINST
            ENDIF
          ENDIF
.
WRTHS240  MOVE      UPDTTYPE,EMHIUPT
.
          MATCH     SP70,WEBUSEID
          IF        !@EQUAL
            MOVE      WEBUSEID,EMHIEUS
          ELSE
            MOVE      USERID,EMHIEUS
          ENDIF
.
          MOVE      EMVILOCN,EMHILOC
          MOVE      EMVIDOCT,EMHIDOC
          MOVE      EMVIATNS,EMHINUR
          PACK      EMHISPA,SP70,SP70
          PACK      EMHIDSD,EMHIDSD,SP70
          PACK      EMHIDST,EMHIDST,SP70
          PACK      EMHINSD,EMHINSD,SP70
          PACK      EMHINST,EMHINST,SP70
.
          MATCH     SP70,EMHINUR
          IF        @EQUAL
            MOVE      SP70,EMHINSD
            MOVE      SP70,EMHINST
          ENDIF
.
          MATCH     SP70,EMHIDOC
          IF        @EQUAL
            MOVE      SP70,EMHIDSD
            MOVE      SP70,EMHIDST
          ENDIF
.
          CALL      IBACLOCK
          PACK      EMHICDAT,CCC,CYY,CMM,CDD  * Date Record Created (ccyymmdd)
          REP       " 0",EMHICDAT
          CLOCK     TIME,EMHICTIM             * Time Record Created (hh:mm:ss)
          MOVE      USERID,EMHICUID           * Web User Id Created (websecaf)
.
          MOVE      SP70,EMHIUDAT      * Date Record Updated (ccyymmdd)
          MOVE      SP70,EMHIUTIM      * Time Record Updated (hh:mm:ss)
          MOVE      SP70,EMHIUUID      * Web User Id Updated (websecaf)
.
WRTHS280  PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
          CALL      RAEMHIS1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            MOVE      SP70,EMHIDRBC          * Dr Billing in-Complete
            CALL      WREMHIS1
            TRAPCLR   IO
            BRANCH    OVRCD,WRTHS285         * Add one second and try again
.
          ELSE
WRTHS285    CALL      IBACLOCK                   * Set new date and time and
            PACK      EMHIDAT,CCC,CYY,CMM,CDD    * try write again
            REP       " 0",EMHIDAT
            CLOCK     TIME,CTIMEIS
            UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
            PACK      EMHITIM,HOUR,MIN,SEC
            REP       " 0",EMHITIM
            GOTO      WRTHS280
          ENDIF
.
          PROC      EMRDRCHR            * Update Dr Billing complete
          MOVE      ZERO,EXIT
.
WRTHS299  RETURN
.
.------------------------------------------------------------
. ED location selection list for a site
.------------------------------------------------------------
LOCSEL00  CALL      XMLHED00
          BRANCH    EXIT,LOCSEL99
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
.
          PACK      KEY28,SP70
          CALL      RSEMLOC2
LOCSEL10  CALL      RKEMLOC2
          BRANCH    OVRCD,LOCSEL98
.
          MATCH     "1",EMLOACTV
          GOTO      LOCSEL10 IF EQUAL
.
          MATCH     EMLOSCOD,VALDCODE       * match Site Code
          GOTO      LOCSEL10 IF NOT EQUAL
.
          MATCH     Z70,VALDRTYP            * Room Type specified?
          GOTO      LOCSEL20 IF EQUAL
.
          MATCH     SP70,VALDRTYP           * Room Type specified?
          GOTO      LOCSEL20 IF EQUAL
.
          MATCH     EMLOTYPE,VALDRTYP       * match Room Type
          GOTO      LOCSEL10 IF NOT EQUAL
.
LOCSEL20  WRITE     HTMLFILE;EMLOLOCA,",",EMLODESC,"|";
          GOTO      LOCSEL10
.
LOCSEL98  WRITE     HTMLFILE;"</RETURN_VALUE>"
          CALL      XMLEND00
.
LOCSEL99  RETURN
.
.------------------------------------------------------------
. Validate emr discharged patients
.------------------------------------------------------------
VALEMD00  CALL      XMLHED00
          BRANCH    EXIT,VALEMD99
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,VALEMD91
.
          COMPARE   ONE,EMVISTAT
          GOTO      VALEMD90 IF NOT EQUAL
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";

          WRITE     HTMLFILE;"</RETURN_VALUE>"
.
          GOTO      VALEMD98
.
VALEMD90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                               "Patient is already discharged / not current - Please use the update discharge screen.":
                               "</RETURN_VALUE>"
          GOTO      VALEMD98
.
VALEMD91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      VALEMD98
.
VALEMD98  CALL      XMLEND00
.
VALEMD99  RETURN
.
.------------------------------------------------------------
. Write an history record (emrhisaf) for an ED 
. visit (ADMISSNO)and update type (UPDTTYPE)
.------------------------------------------------------------
HISWRT00  CALL      XMLHED00
          BRANCH    EXIT,HISWRT99
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,HISWRT90
.
HISWRT20  MATCH     SP70,PTCNNSSI          * no edward source sys/sjog
          IF        @EQUAL
            MOVE      EMVIUD09,TESTDATE    * uses EMVIUD09 for 
            MOVE      EMVIUT09,TESTTIME    * senior/other doctor
          ELSE
            MATCH     ZERO20,PTCNNSSI      * no edward source sys/sjog
            IF        @EQUAL
              MOVE      EMVIUD09,TESTDATE  
              MOVE      EMVIUT09,TESTTIME  
            ELSE
              MOVE      EMVIUD10,TESTDATE  * uses EMVIUD10 for
              MOVE      EMVIUT10,TESTTIME  * senior/other doctor
            ENDIF
          ENDIF
.
          CALL      WEDV0000               * EDWARD visit alteration
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
          CALL      RPEMHIS1
          BRANCH    OVRCD,HISWRT80
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      HISWRT80 IF NOT EQUAL
.
HISWRT70  CALL      IBACLOCK                   * Set new date and time
          PACK      EMHIDAT,CCC,CYY,CMM,CDD 
          REP       " 0",EMHIDAT
          CLOCK     TIME,CTIMEIS
          UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
          PACK      EMHITIM,HOUR,MIN,SEC
          REP       " 0",EMHITIM
.
          MATCH     "OTDCC",UPDTTYPE      * Other doctor seen current date/time
          IF        @EQUAL
            PACK      KEY8,ADMISSNO,SP70
            CALL      RDEMVIS1
            IF        OVRCD=0
              MOVE      EMVIUR04,EMHIODCD
.
              MOVE      EMHIDAT,EMHIODSD
              MOVE      EMHITIM,EMHIODST
.
              MATCH     SP70,EMVIUR04    * Other dotor allocated
              IF        !@EQUAL
                MATCH     SP70,TESTDATE  * If there a seen date
                IF        @EQUAL
                  MOVE      EMHIDAT,TESTDATE
                  MOVE      CTIMEIS,TESTTIME
                  CALL      UPEMVIS1     * Handover screen used to allocate
                ENDIF                    * the first other doctor
              ENDIF
            ELSE
              MOVE      SP70,EMHIODCD
              MOVE      SP70,EMHIODSD
              MOVE      SP70,EMHIODST
            ENDIF
            MOVE        "OTDOC",UPDTTYPE  * Revert to correct update type
            GOTO        HISWRT75
          ENDIF
.
          MATCH     "OTDOC",UPDTTYPE
          IF        @EQUAL
            PACK      KEY8,ADMISSNO,SP70
            CALL      RDEMVIS1
            IF        OVRCD=0
              MOVE      EMVIUR04,EMHIODCD
              MOVE      TESTDATE,EMHIODSD
              UNPACK    TESTTIME,HOUR,D1,MIN,D1,SEC
              PACK      EMHIODST,HOUR,MIN,SEC
            ELSE
              MOVE      SP70,EMHIODCD
              MOVE      SP70,EMHIODSD
              MOVE      SP70,EMHIODST
            ENDIF
            GOTO        HISWRT75
          ENDIF
.
HISWRT75  MOVE      UPDTTYPE,EMHIUPT
.
          CALL      IBACLOCK
          PACK      EMHICDAT,CCC,CYY,CMM,CDD  * Date Record Created (ccyymmdd)
          REP       " 0",EMHICDAT
          CLOCK     TIME,EMHICTIM             * Time Record Created (hh:mm:ss)
          MOVE      USERID,EMHICUID           * Web User Id Created (websecaf)
.
          MOVE      SP70,EMHIUDAT      * Date Record Updated (ccyymmdd)
          MOVE      SP70,EMHIUTIM      * Time Record Updated (hh:mm:ss)
          MOVE      SP70,EMHIUUID      * Web User Id Updated (websecaf)
.
          PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
          CALL      RAEMHIS1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            MOVE      SP70,EMHIDRBC          * Dr Billing Complete
            CALL      WREMHIS1
            TRAPCLR   IO
            BRANCH    OVRCD,HISWRT70         * Add one second and try again
.
          ELSE
            GOTO      HISWRT70
          ENDIF
.
          PROC       EMRDRCHR            * Update Dr Billing complete
.
HISWRT80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
          WRITE     HTMLFILE;"</RETURN_VALUE>"
.
          GOTO      HISWRT98
.
HISWRT90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      HISWRT98
.
HISWRT98  CALL      XMLEND00
.
HISWRT99  RETURN
.
.------------------------------------------------------------
. Remote script to return current ED visit file values
.------------------------------------------------------------
EMRVAL00  CALL      XMLHED00
          BRANCH    EXIT,EMRVAL99
.
          PACK      KEY8,ADMISSNO,SP70
EMRVAL05  CALL      RDEMVIS1
          BRANCH    OVRCD,EMRVAL90
.
          MOVE      SP70,DISPDATE
          MATCH     SP70,EMVIDRDT
          IF        !@EQUAL
            UNPACK    EMVIDRDT,CCENT,CYEAR,CMON,CDAY
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      DISPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR
          ENDIF
.
EMRVAL80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             DISPDATE,"|",EMVIDRTM,"|":
                             "</RETURN_VALUE>"
          GOTO      EMRVAL98
.
EMRVAL90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Emergency Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      EMRVAL98
.
EMRVAL98  CALL      XMLEND00
EMRVAL99  RETURN
.------------------------------------------------------------
. Check for expected patients - urnumber
.------------------------------------------------------------
CHKEXU00  CALL      XMLHED00
          BRANCH    EXIT,CHKEXU99
.
          PACK      KEY8,VALDCODE,SP70
          CALL      RDMAST1
          BRANCH    OVRCD,CHKEXU90
.
CHKEXU20  PACK      KEY18,PURNO,SP70
          CALL      RSEMEXP3
CHKEXU30  CALL      RKEMEXP3
          BRANCH    OVRCD,CHKEXU60
.
          MATCH     PURNO,EMEXURNO
          GOTO      CHKEXU60 IF NOT EQUAL
.
          MATCH     "1",EMCNPCTY                * expected patients only
          GOTO      CHKEXU35 IF NOT EQUAL
                    
          MATCH     "1",EMEXCONT                * expected patient
          GOTO      CHKEXU30 IF NOT EQUAL
.
CHKEXU35  MATCH     "1",EMCNEMST                * current emergency site only    
          GOTO      CHKEXU40 IF NOT EQUAL
                    
          MATCH     EMEXSITE,WBSEESC            * current site    
          GOTO      CHKEXU30 IF NOT EQUAL

 
CHKEXU40  MATCH     SP70,EMEXDELT
          GOTO      CHKEXU30 IF NOT EQUAL
.
CHKEXU50  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>";
          GOTO      CHKEXU98
.
CHKEXU60  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ZERO:
                             "</RETURN_VALUE>";
          GOTO      CHKEXU98
.
CHKEXU90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient UR - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      CHKEXU98
.
CHKEXU98  CALL      XMLEND00
CHKEXU99  RETURN
.
.------------------------------------------------------------
. Check for expected patients - surname
.------------------------------------------------------------
CHKEXS00  CALL      XMLHED00
          BRANCH    EXIT,CHKEXS99
.
          PACK      DIM20,VALDCODE,SP70
.
          PACK      KEY55,DIM20,SP70
          CALL      RSEMEXP2
CHKEXS10  CALL      RKEMEXP2
          BRANCH    OVRCD,CHKEXS60
.
          MATCH     DIM20,EMEXSNAM
          GOTO      CHKEXS60 IF NOT EQUAL
.
          MATCH     "1",EMCNPCTY                * expected patients only
          GOTO      CHKEXS35 IF NOT EQUAL
                    
          MATCH     "1",EMEXCONT                * expected patient
          GOTO      CHKEXS10 IF NOT EQUAL
.
CHKEXS35  MATCH     "1",EMCNEMST                * current emergency site only    
          GOTO      CHKEXS40 IF NOT EQUAL
                    
          MATCH     EMEXSITE,WBSEESC            * current site    
          GOTO      CHKEXS10 IF NOT EQUAL
.
CHKEXS40  MATCH     SP70,EMEXDELT
          GOTO      CHKEXS10 IF NOT EQUAL
.
CHKEXS50  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>";
          GOTO      CHKEXS98
.
CHKEXS60  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ZERO:
                             "</RETURN_VALUE>";
          GOTO      CHKEXS98
.
CHKEXS98  CALL      XMLEND00
CHKEXS99  RETURN 
.------------------------------------------------------------
.  Initial Assessor Data Integrity Audit
.------------------------------------------------------------
IADIA000  CALL      XMLHED00
          BRANCH    EXIT,IADIA999
.
IADIA100  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,IADIA998
.
          MOVE      "14",UPDFIELD
          PACK      DIM10,EMVIUR05,SP70
          PACK      UPDVALUE,EMVIUD05,EMVIUT05,DIM10,SP70
          PACK      DOCTCODE,DOCTCODE,SP70
          PACK      NEWVALUE,DOCTDATE,DOCTTIME,DOCTCODE,SP70
.
          CALL      WRCHA000
.
IADIA998  CALL      XMLEND00
.
IADIA999  RETURN
.------------------------------------------------------------
. Treating Doctor Date/Time update emrhisaf (WAHealth)
.------------------------------------------------------------
TRDDT000  CALL      XMLHED00
          BRANCH    EXIT,TRDDT999
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,TRDDT998
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
TRDDT100  CALL      RPEMHIS1
          BRANCH    OVRCD,TRDDT500
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      TRDDT500 IF NOT EQUAL
.
          PACK      DOCTCODE,DOCTCODE,SP70
          MATCH     DOCTCODE,EMHIDOC
          GOTO      TRDDT500 IF NOT EQUAL
.
          MOVE      DOCTDATE,EMHIDSD
          MOVE      SP70,EMHIDST
          MATCH     SP70,DOCTTIME
          IF        !@EQUAL
            UNPACK    DOCTTIME,HOUR,D1,MIN,D1,SEC
            PACK      EMHIDST,HOUR,MIN,SEC
            REP       " 0",EMHIDST
          ENDIF
.
          CALL      UPEMHIS1
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      TRDDT500 IF EQUAL
.
          GOTO      TRDDT100
.
TRDDT500  MOVE      ZERO,F3
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
TRDDT600  CALL      RPEMHIS1
          BRANCH    OVRCD,TRDDT700
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      TRDDT700 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      TRDDT600 IF NOT EQUAL
.
          ADD       ONE,F3
.
          GOTO      TRDDT600
.
TRDDT700  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,TRDDT998
.
          COMPARE   ONE,F3
          GOTO      TRDDT998 IF NOT EQUAL
.
          MOVE      DOCTDATE,EMVIDRDT
          MOVE      DOCTTIME,EMVIDRTM
.
          CALL      UPEMVIS1
          CALL      WEDV0000                     * EDWARD visit alteration
.
TRDDT998  CALL      XMLEND00
.
TRDDT999  RETURN
.
.------------------------------------------------------------
. Treating Nurse Date/Time update emrhisaf (WAHealth)
.------------------------------------------------------------
TRNDT000  CALL      XMLHED00
          BRANCH    EXIT,TRNDT999
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,TRNDT998
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
TRNDT100  CALL      RPEMHIS1
          BRANCH    OVRCD,TRNDT500
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      TRNDT500 IF NOT EQUAL
.
          PACK      DOCTCODE,DOCTCODE,SP70
          MATCH     DOCTCODE,EMHINUR
          GOTO      TRNDT500 IF NOT EQUAL
.
          MOVE      DOCTDATE,EMHINSD
          MOVE      SP70,EMHINST
          MATCH     SP70,DOCTTIME
          IF        !@EQUAL
            UNPACK    DOCTTIME,HOUR,D1,MIN,D1,SEC
            PACK      EMHINST,HOUR,MIN,SEC
            REP       " 0",EMHINST
          ENDIF
.
          CALL      UPEMHIS1
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      TRNDT500 IF EQUAL
.
          GOTO      TRNDT100
.
TRNDT500  MOVE      ZERO,F3
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
TRNDT600  CALL      RPEMHIS1
          BRANCH    OVRCD,TRNDT700
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      TRNDT700 IF NOT EQUAL
.
          MATCH     "ALNUR",EMHIUPT
          GOTO      TRNDT600 IF NOT EQUAL
.
          ADD       ONE,F3
.
          GOTO      TRNDT600
.
TRNDT700  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,TRNDT998
.
          COMPARE   ONE,F3
          GOTO      TRNDT998 IF NOT EQUAL
.
          MOVE      DOCTDATE,EMVINSDT
          MOVE      DOCTTIME,EMVINSTM
.
          CALL      UPEMVIS1
          CALL      WEDV0000                     * EDWARD visit alteration
.
TRNDT998  CALL      XMLEND00
.
TRNDT999  RETURN
.
.------------------------------------------------------------
. Get Emergency service doctor for a procedure date/time
.------------------------------------------------------------
GSDOCT00  CALL      XMLHED00
          BRANCH    EXIT,GSDOCT99
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
GSDOCT10  CALL      RPEMHIS1
          BRANCH    OVRCD,GSDOCT98
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      GSDOCT98 IF NOT EQUAL
.
          MATCH     SP70,EMHIDOC
          GOTO      GSDOCT10 IF EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      GSDOCT10 IF NOT EQUAL
.
          MATCH     SP70,EMHIDSD
          GOTO      GSDOCT10 IF EQUAL
          MATCH     SP70,EMHIDST
          GOTO      GSDOCT10 IF EQUAL
.
          MATCH     EMHIDSD,PROCDATE
          GOTO      GSDOCT10 IF LESS
          IF        @EQUAL
            UNPACK    PROCTIME,DIM2,DIM1,KEY2,DIM1,D2
            PACK      KEY6,DIM2,KEY2,D2
            REP       " 0",KEY6
            MATCH     EMHIDST,KEY6
            GOTO      GSDOCT10 IF LESS
          ENDIF
.
          PACK      KEY10,EMHIDOC,SP70
          CALL      RDPMHCP1
          BRANCH    OVRCD,GSDOCT10
.
          MOVE      PMHCTITL,FMTTITLE
          MOVE      PMHCGNAM,FMTGNAME
          MOVE      PMHCSNAM,FMTSNAME
          CALL      DOCNM000
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             DOCFNAME,"|",EMHIDOC,"|",EMHIDRBC:
                             "</RETURN_VALUE>"
          GOTO      GSDOCT98
.
GSDOCT98  CALL      XMLEND00
GSDOCT99  RETURN
+
.------------------------------------------------------------
. Update body region and nature of main injury for
. a primary diagnosis add/update
.------------------------------------------------------------
SETNAT00  MATCH     "005",EMVCTYPE               * Diagnosis coding
          GOTO      SETNAT99 IF NOT EQUAL
.
          COMPARE   FIVE,EMVCCSYS                * Using emricdaf
          GOTO      SETNAT99 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU               * Primary diagnosis
          GOTO      SETNAT99 IF NOT EQUAL
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1                     * Get VEMD code
          BRANCH    OVRCD,SETNAT99
.
          PACK      KEY10,EMIC9COD,SP70
          CALL      RSEMMX3
          CALL      RKEMMX3
          BRANCH    OVRCD,SETNAT99
.
          MATCH     EMMXPDG,EMIC9COD
          GOTO      SETNAT99 IF NOT EQUAL
.
          MOVE      EMVCVIST,KEY8
          CALL      RDEMVIS1                     * Read EMR visit record
          BRANCH    OVRCD,SETNAT99
.
          MOVE      EMMXBRG,EMVIREGN             * Update Body region
          MOVE      EMMXNAT,EMVINATI             * Update Nature of injury
.
          CALL      UPEMVIS1
.
SETNAT99  RETURN
.
.-------------------------------------------------------------
. APBKRQ00 - Theatre Request Approvals
.-------------------------------------------------------------
APBKRQ00  PACK      VALDCODE,VALDCODE,SP70
          CALL      XMLHED00
          BRANCH    EXIT,APBKRQ99
.
          MOVE      VALDCODE,DIM10
.
          PACK      KEY10,DIM10,SP70
          CALL      RDBKRQ11
          BRANCH    OVRCD,APBKRQ91
.
          MATCH     ANSA,BKRQSTAT
          GOTO      APBKRQ92 IF EQUAL
.
          MOVE      ANSA,BKRQSTAT
          CALL      IBACLOCK
          PACK      BKRQCSDT,CCC,CYY,CMM,CDD
          REP       " 0",BKRQCSDT
          MOVE      CTIMEIS,BKRQCSTM
.
          CALL      UPBKRQ11
.
          CALL      CLBOKRAU
          MOVE      EIGHT,BKRUAUTY
          CALL      MVBOKRAU
.
          PACK      KEY27,BKRUAURQ,BKRUADAT,BKRUATIM,BKRUAUTY,SP70
          CALL      RABKRAU1
          IF        OVRCD=1
            CALL      WRBKRAU1
          ENDIF
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      APBKRQ98
.
APBKRQ91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Booking Request Record.":
                             "</RETURN_VALUE>"
.
          GOTO      APBKRQ98
.
APBKRQ92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Booking Request Record is already Approved.":
                             "</RETURN_VALUE>"
.
          GOTO      APBKRQ98
.
APBKRQ98  CALL      XMLEND00
APBKRQ99  RETURN
+
.------------------------------------------------------------------------
.         Get the last ALDOC record for matching doctor/admis and return
.         the date/time
.------------------------------------------------------------------------
LDOCHI00  CALL      XMLHED00
          BRANCH    EXIT,LDOCHI99
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
LDOCHI05  CALL      RPEMHIS1
          BRANCH    OVRCD,LDOCHI91
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      LDOCHI05 IF NOT EQUAL
.
          MATCH     "ALDOC",EMHIUPT
          GOTO      LDOCHI05 IF NOT EQUAL
.
          MATCH     DOCTCODE,EMHIDOC
          GOTO      LDOCHI05 IF NOT EQUAL
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             EMHIDAT,"|",EMHITIM:
                             "</RETURN_VALUE>"
          GOTO      LDOCHI98
.
LDOCHI91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "No matching ALDOC record found.":
                             "</RETURN_VALUE>"
          GOTO      LDOCHI98
.
LDOCHI98  CALL      XMLEND00
LDOCHI99  RETURN
+
.------------------------------------------------------------------------
.         Update theatre bookings request audit file
.------------------------------------------------------------------------
MVBOKRAU  PACK      BKRUAURQ,BKRQREQN,SP70
.                   BKRUAUTY - populated before this function depending
.                              on record type
          CALL      IBACLOCK
          PACK      BKRUADAT,CCC,CYY,CMM,CDD
          REP       " 0",BKRUADAT
          MOVE      CTIMEIS,BKRUATIM
          REP       " 0",BKRUATIM
          PACK      BKRUAUSR,WBSEUID,SP70
          PACK      BKRUURNO,BKRQURNO,SP70
          PACK      BKRUVISN,BKRQVISN,SP70
          PACK      BKRUBKTY,BKRQBKTY,SP70
          PACK      BKRUREQN,BKRQREQN,SP70
          PACK      BKRUSTAT,BKRQSTAT,SP70
          PACK      BKRUHOSP,BKRQHOSP,SP70
          PACK      BKRUPRIO,BKRQPRIO,SP70
          PACK      BKRUSNAM,BKRQSNAM,SP70
          PACK      BKRUGNAM,BKRQGNAM,SP70
          PACK      BKRUBDAT,BKRQBDAT,SP70
          PACK      BKRUGEND,BKRQGEND,SP70
          PACK      BKRURDOC,BKRQRDOC,SP70
          PACK      BKRUUNIT,BKRQUNIT,SP70
          PACK      BKRUCSDT,BKRQCSDT,SP70
          PACK      BKRUCSTM,BKRQCSTM,SP70
          PACK      BKRUCTCT,BKRQCTCT,SP70,SP70
          PACK      BKRULOCN,BKRQLOCN,SP70
          PACK      BKRUADPT,BKRQADPT,SP70
          PACK      BKRUEPOW,BKRQEPOW,SP70
          PACK      BKRUSURG,BKRQSURG,SP70
          PACK      BKRUTHET,BKRQTHET,SP70
          PACK      BKRUANAE,BKRQANAE,SP70
          PACK      BKRUMBS1,BKRQMBS1,SP70
          PACK      BKRUMBS2,BKRQMBS2,SP70
          PACK      BKRUMBS3,BKRQMBS3,SP70
          PACK      BKRUMBD1,BKRQMBD1,SP70,SP70
          PACK      BKRUMBD2,BKRQMBD2,SP70,SP70
          PACK      BKRUMBD3,BKRQMBD3,SP70,SP70
          PACK      BKRUPROR,BKRQPROR,SP70
          PACK      BKRUDURA,BKRQDURA,SP70
          PACK      BKRUINFC,BKRQINFC,SP70
          PACK      BKRUEQU1,BKRQEQU1,SP70
          PACK      BKRUEQU2,BKRQEQU2,SP70
          PACK      BKRUEQU3,BKRQEQU3,SP70
          PACK      BKRUCDAT,BKRQCDAT,SP70
          PACK      BKRUCTIM,BKRQCTIM,SP70
          PACK      BKRUCUSR,BKRQCUSR,SP70
          PACK      BKRUUDAT,BKRQUDAT,SP70
          PACK      BKRUUTIM,BKRQUTIM,SP70
          PACK      BKRUUUSR,BKRQUUSR,SP70
          PACK      BKRUCNDT,BKRQCNDT,SP70
          PACK      BKRUCNTM,BKRQCNTM,SP70
          PACK      BKRUCNUS,BKRQCNUS,SP70
          PACK      BKRUCNCD,BKRQCNCD,SP70
          PACK      BKRUOPTY,BKRQOPTY,SP70
          PACK      BKRUTRCD,BKRQTRCD,SP70
          PACK      BKRUATCD,BKRQATCD,SP70
          PACK      BKRUATYP,BKRQATYP,SP70
          PACK      BKRUCTYP,BKRQCTYP,SP70
          PACK      BKRUELOS,BKRQELOS,SP70
          PACK      BKRUCTY6,BKRQCTY6,SP70
          PACK      BKRUCTY7,BKRQCTY7,SP70
          PACK      BKRUCTY8,BKRQCTY8,SP70
          PACK      BKRUCTY9,BKRQCTY9,SP70
          PACK      BKRUASRC,BKRQASRC,SP70
          PACK      BKRUBTYP,BKRQBTYP,SP70
          PACK      BKRUELON,BKRQELON,SP70
          PACK      BKRUCSNT,BKRQCSNT,SP70
          PACK      BKRUCCDT,BKRQCCDT,SP70
.
          RETURN
.
.------------------------------------------------------------
. Open Outpatient Files
.------------------------------------------------------------
OPNOUT00  PACK      CFNAME,CFILEPRE,FILCLIA1  * Get the name of the CLIA1 file
          CLOSE     OUTCLIA1
          OPEN      OUTCLIA1,CFNAME
.
OPNOUT99  RETURN
+
.*******************************************************************************
. OUTFIL00 - Check if the user id has an outpatienty site. If they do open
.            the correct outpatient files according to the site. If they do not
.            have a site make sure the default prefix of out is is used to
.            open the files.
.*******************************************************************************
OUTFIL00  PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,OUTFIL10
          MATCH     SP70,WBSESIT             * Does the user have a site
          GOTO      OUTFIL50 IF NOT EQUAL
.
OUTFIL10  MATCH     "out",CFILEPRE           * Is out currently open
          IF        !@EQUAL
            MOVE      "out",OSTFILE          * open default prefix of out
            MOVE      OSTFILE,CFILEPRE       * Save Current File Prefix
            CALL      OPNOUT00               * Open out Outpatient Files
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      OUTFIL99
.
OUTFIL50  MOVE      WBSESIT,KEY6
          CALL      RDSITA1
          BRANCH    OVRCD,OUTFIL90           * error invalid site code
.
          MATCH     OSTFILE,CFILEPRE         * Save Current File Prefix
          IF        !@EQUAL
            MOVE      OSTFILE,CFILEPRE       * Save Current File Prefix
            CALL      OPNOUT00               * Open prefixed Outpatient Files
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      OUTFIL99
.
OUTFIL90  MOVE      "Outpatient Site Invalid",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
.
OUTFIL99  RETURN
+
.------------------------------------------------------------
. Check for duplicate clinic
.------------------------------------------------------------
CHKDCL00  CALL      XMLHED00
          BRANCH    EXIT,CHKDCL99
.
          PACK      DIM6,VALDCODE,SP70
.
          PACK      KEY20,WBSESIT,DIM6,SP70
          CALL      RDSCLIA1
CHKDCL10  CALL      RDKCLIA1
          BRANCH    OVRCD,CHKDCL98
.
          MATCH     WBSESIT,OCASITE
          GOTO      CHKDCL98 IF NOT EQUAL
.
          MATCH     DIM6,OCACLIN
          GOTO      CHKDCL98 IF NOT EQUAL
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>";
          GOTO      CHKDCL98
.
CHKDCL98  CALL      XMLEND00
CHKDCL99  RETURN
.
.-------------------------------------------------------------
. VALBRQ00 - Validate Booked / Scheduled Booking Requests
.-------------------------------------------------------------
VALBRQ00  PACK      VALDCODE,VALDCODE,SP70
          CALL      XMLHED00
          BRANCH    EXIT,VALBRQ99
.
          MOVE      VALDCODE,DIM10
.
          PACK      KEY10,DIM10,SP70
          CALL      RDBKRQ11
          BRANCH    OVRCD,VALBRQ91
.
          MATCH     "1",BKRQSTAT
          GOTO      VALBRQ92 IF EQUAL
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALBRQ98
.
VALBRQ91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Booking Request Record.":
                             "</RETURN_VALUE>"
.
          GOTO      VALBRQ98
.
VALBRQ92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                          "Booking Request Record is already Booked/Scheduled.":
                             "</RETURN_VALUE>"
.
          GOTO      VALBRQ98
.
VALBRQ98  CALL      XMLEND00
VALBRQ99  RETURN
+
.-------------------------------------------------------------
. VALUND00 - Validate warning and redirect to coding screen on undischarge
.-------------------------------------------------------------
VALUND00  PACK      VALDCODE,VALDCODE,SP70
          CALL      XMLHED00
          BRANCH    EXIT,VALUND99
.
          MOVE      VALDCODE,DIM8
.
          PACK      KEY13,DIM8,SP70
          CALL      RSPTECD1
          CALL      RKPTECD1
          BRANCH    OVRCD,VALUND50
.
          MATCH     DIM8,DPTEDADM
          GOTO      VALUND90 IF EQUAL
.
VALUND50  PACK      KEY13,DIM8,SP70
          CALL      RSPTECO1
          CALL      RKPTECO1 
          BRANCH    OVRCD,VALUND98
.
          MATCH     DIM8,DPTEOADM
          GOTO      VALUND90 IF EQUAL
.
          GOTO      VALUND98
.
VALUND90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALUND98
.
VALUND98  CALL      XMLEND00
VALUND99  RETURN
+
.-----------------------------------------------------------------
. Output Select Options for Contract Codes depending on Department
.-----------------------------------------------------------------
SELCCT00  CALL      XMLHED00
          BRANCH    EXIT,SELCCT99
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
.
          MOVE      ONE,FRSTREAD
          PACK      KEY8,VALDCODE,CATgb,SP70
          CALL      RSALCCT1
SELCCT10  CALL      RKALCCT1
          BRANCH    OVRCD,SELCCT19
.
          MATCH     VALDCODE,ALCCDEPT
          GOTO      SELCCT19 IF NOT EQUAL
.
          MATCH     CATgb,ALCCTYPE
          GOTO      SELCCT19 IF NOT EQUAL
.
          PACK      KEY5,ANSSMALG,ANSSMALB,ALCCCONT,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,SELCCT19
.
          MATCH     ACODE,SP70
          GOTO      SELCCT10 IF EQUAL
          MATCH     "I",PTCOACTV
          GOTO      SELCCT10 IF EQUAL
          PACK      KEY40,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5:
                          TCINDC6,TCINDC7,TCINDC8,TCINDC9,TCINDC10:
                          TCINDC11,THCSCOD,PTCDNHCP,TCFORM6:
                          TCINDC12,TCINDC13,TCINDC14,TCINDC15,TCINDC16:
                          TCINDC17,TCINDC18,TCINDC19,TCINDC20,TCINDC21:
                          PTCOACTV,PTCDASC1,SP70
          PACK      KEY45,ACODE,KEY40
          WRITE     HTMLFILE;KEY45,",",TDESC,"|";
.
          MOVE      ZERO,FRSTREAD
          GOTO      SELCCT10
.
SELCCT19  IF        FRSTREAD = ONE
            CALL      CATGBS00           
          ENDIF
.
          WRITE     HTMLFILE;"</RETURN_VALUE>"
          GOTO      SELCCT98
.
SELCCT98  CALL      XMLEND00
SELCCT99  RETURN
+
.-----------------------------------------------------------------
. Output Select Options for Contract Codes category gb
.-----------------------------------------------------------------
CATGBS00  PACK      PTCDKEY2,CATgb,SP70
          CALL      RDSCODE2
CATGBS20  CALL      RDKCODE2
          BRANCH    OVRCD,CATGBS99
.
          MATCH     CATgb,TCODE
          GOTO      CATGBS99 IF NOT EQUAL
.
          MATCH     SP70,ACODE
          GOTO      CATGBS20 IF EQUAL
.
          MATCH     "I",PTCOACTV
          GOTO      CATGBS20 IF EQUAL
.
          PACK      KEY40,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5:
                          TCINDC6,TCINDC7,TCINDC8,TCINDC9,TCINDC10:
                          TCINDC11,THCSCOD,PTCDNHCP,TCFORM6:
                          TCINDC12,TCINDC13,TCINDC14,TCINDC15,TCINDC16:
                          TCINDC17,TCINDC18,TCINDC19,TCINDC20,TCINDC21:
                          PTCOACTV,PTCDASC1,SP70
          PACK      KEY45,ACODE,KEY40
          WRITE     HTMLFILE;KEY45,",",TDESC,"|";
.
          GOTO      CATGBS20
.
CATGBS99  RETURN
.
.-----------------------------------------------------------------
. Closed Referral
.-----------------------------------------------------------------
CLSREF00  CALL      XMLHED00
          BRANCH    EXIT,CLSREF99
.
          PACK      KEY8,VALDCODE,SP70
          CALL      RDALREF1
          BRANCH    OVRCD,CLSREF98 
.
          MATCH     "2",ALRESTAT
          GOTO      CLSREF98 IF NOT EQUAL
.
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>";
.
          UNPACK    ALREDCLO,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR:
                             "</RETURN_VALUE>"
.
CLSREF98  CALL      XMLEND00
CLSREF99  RETURN
+
.-------------------------------------------------------------
. VALOEC00 - Validate Link OECs
.-------------------------------------------------------------
VALOEC00  MATCH     "1",PTCNWSIN
          GOTO      VALOEC05 IF NOT EQUAL
.
          MATCH     "1",PTCNOECW
          GOTO      VALOEC05 IF NOT EQUAL
.
          COMPARE   ONE,OECWINDC
          GOTO      VALOEC05 IF NOT EQUAL
.
          CALL      VALOEW00
.
          GOTO      VALOEC99
.
VALOEC05  MATCH     "1",PTCNOECE
          GOTO      VALOEC99 IF EQUAL
.
          PACK      VALDELGN,VALDELGN,SP70
          PACK      VALDCODE,VALDCODE,SP70
          CALL      XMLHED00
          BRANCH    EXIT,VALOEC99
.
VALOEC10  PACK      KEY8,VALDELGN,SP70
          CALL      RDPMELF1
          BRANCH    OVRCD,VALOEC91
.
. Re-write pmsoecaf
.
          MATCH     SP70,PMEFVISN
          IF        !@EQUAL
            PACK      KEY11,PMEFVISN,PMEFCNTR,SP70
          ELSE
            PACK      KEY11,PMEFELGN,SP1,SP1,ONE,SP70
          ENDIF
.
          CALL      RDPMOEC1
          IF        OVRCD=1
            GOTO      VALOEC92
          ELSE
            MOVE      PMOEVISN,SVOEVISN
            MOVE      PMOECNTR,SVOECNTR
            MOVE      PMOESTAT,SVOESTAT
            MOVE      PMOEURNO,SVOEURNO
            MOVE      PMOEARID,SVOEARID
            MOVE      PMOETRID,SVOETRID
            MOVE      PMOERQDT,SVOERQDT
            MOVE      PMOEETYP,SVOEETYP
            MOVE      PMOEERRC,SVOEERRC
            MOVE      PMOEERRD,SVOEERRD
            MOVE      PMOECDTE,SVOECDTE
            MOVE      PMOECTIM,SVOECTIM
            MOVE      PMOEUDTE,SVOEUDTE
            MOVE      PMOEUTIM,SVOEUTIM
            MOVE      PMOEHOSP,SVOEHOSP
            MOVE      PMOEELEG,SVOEELEG
.
            MOVE      PMOEARID,S2OEARID
            MOVE      PMOECNTR,S2OECNTR
.
            CALL      DEPMOEC1
          ENDIF
.
          MATCH     SP70,VALDCODE
          IF        !@EQUAL
            MOVE      VALDCODE,SVOEVISN
            MOVE      VALDELGN,SVOEELEG
            MOVE      VALDCODE,SVOEARID
            LJUSTIFY  SVOEARID
.
            PACK      KEY11,SVOEVISN,Z70
            CALL      RSPMOEC1
            CALL      RPPMOEC1
            IF        OVRCD=1
              MOVE      "  1",SVOECNTR
            ELSE
              MATCH     PMOEVISN,SVOEVISN
              IF        !@EQUAL
                MOVE      "  1",SVOECNTR
              ELSE
VALOEC20        MOVE      ZERO,FORM3
                MOVE      PMOECNTR,FORM3
                ADD       ONE,FORM3
                MOVE      FORM3,SVOECNTR
              ENDIF
            ENDIF
          ELSE
            MOVE      VALDELGN,SVOEVISN
            MOVE      "  1",SVOECNTR
            MOVE      SP70,SVOEELEG
            MOVE      VALDELGN,SVOEARID
            LJUSTIFY  SVOEARID
          ENDIF
.
          MOVE      SVOEVISN,PMOEVISN
          MOVE      SVOECNTR,PMOECNTR
          MOVE      SVOESTAT,PMOESTAT
          MOVE      SVOEURNO,PMOEURNO
          MOVE      SVOEARID,PMOEARID
          MOVE      SVOETRID,PMOETRID
          MOVE      SVOERQDT,PMOERQDT
          MOVE      SVOEETYP,PMOEETYP
          MOVE      SVOEERRC,PMOEERRC
          MOVE      SVOEERRD,PMOEERRD
          MOVE      SVOECDTE,PMOECDTE
          MOVE      SVOECTIM,PMOECTIM
          MOVE      SVOEUDTE,PMOEUDTE
          MOVE      SVOEUTIM,PMOEUTIM
          MOVE      SVOEHOSP,PMOEHOSP
          MOVE      SVOEELEG,PMOEELEG
          MOVE      SP70,PMOESPAR
.
          PACK      KEY11,PMOEVISN,PMOECNTR,SP70
          CALL      RAPMOEC1
          IF        OVRCD=0
            GOTO      VALOEC20
          ENDIF
.
          CALL      WRPMOEC1
.
. Re-write pmseehaf
.
          PACK      KEY23,S2OEARID,S2OECNTR,SP70
          CALL      RDPMEEH1
          BRANCH    OVRCD,VALOEC50
.
          MOVE      PMHEARID,SVHEARID
          MOVE      PMHERPTC,SVHERPTC
          MOVE      PMHECTID,SVHECTID
          MOVE      PMHEBENL,SVHEBENL
          MOVE      PMHECFAC,SVHECFAC
          MOVE      PMHECPAM,SVHECPAM
          MOVE      PMHECPDR,SVHECPDR
          MOVE      PMHECPDI,SVHECPDI
          MOVE      PMHECPFN,SVHECPFN
          MOVE      PMHECPMN,SVHECPMN
          MOVE      PMHECPRN,SVHECPRN
          MOVE      PMHEEXAM,SVHEEXAM
          MOVE      PMHEEADI,SVHEEADI
          MOVE      PMHEEXBA,SVHEEXBA
          MOVE      PMHEEXDI,SVHEEXDI
          MOVE      PMHEFSTA,SVHEFSTA
          MOVE      PMHEFRID,SVHEFRID
          MOVE      PMHEFSCD,SVHEFSCD
          MOVE      PMHEMSCD,SVHEMSCD
          MOVE      PMHEPEAI,SVHEPEAI
          MOVE      PMHEPSCD,SVHEPSCD
          MOVE      PMHETNAM,SVHETNAM
          MOVE      PMHETBDI,SVHETBDI
          MOVE      PMHETBSC,SVHETBSC
          MOVE      PMHEVCID,SVHEVCID
          MOVE      PMHEUDTE,SVHEUDTE
          MOVE      PMHEUTIM,SVHEUTIM
.
          CALL      DEPMEEH1
.
          MOVE      PMOEARID,PMHEARID
          MOVE      PMOECNTR,PMHERPTC
          MOVE      SVHECTID,PMHECTID
          MOVE      SVHEBENL,PMHEBENL
          MOVE      SVHECFAC,PMHECFAC
          MOVE      SVHECPAM,PMHECPAM
          MOVE      SVHECPDR,PMHECPDR
          MOVE      SVHECPDI,PMHECPDI
          MOVE      SVHECPFN,PMHECPFN
          MOVE      SVHECPMN,PMHECPMN
          MOVE      SVHECPRN,PMHECPRN
          MOVE      SVHEEXAM,PMHEEXAM
          MOVE      SVHEEADI,PMHEEADI
          MOVE      SVHEEXBA,PMHEEXBA
          MOVE      SVHEEXDI,PMHEEXDI
          MOVE      SVHEFSTA,PMHEFSTA
          MOVE      SVHEFRID,PMHEFRID
          MOVE      SVHEFSCD,PMHEFSCD
          MOVE      SVHEMSCD,PMHEMSCD
          MOVE      SVHEPEAI,PMHEPEAI
          MOVE      SVHEPSCD,PMHEPSCD
          MOVE      SVHETNAM,PMHETNAM
          MOVE      SVHETBDI,PMHETBDI
          MOVE      SVHETBSC,PMHETBSC
          MOVE      SVHEVCID,PMHEVCID
          MOVE      SVHEUDTE,PMHEUDTE
          MOVE      SVHEUTIM,PMHEUTIM
          MOVE      SP70,PMHESPAR
.
          PACK      KEY23,PMHEARID,PMHERPTC,SP70
          CALL      RAPMEEH1
          IF        OVRCD=1
            CALL      WRPMEEH1
          ENDIF
.
. Re-write pmseedaf
.
VALOEC50  PACK      KEY30,S2OEARID,S2OECNTR,SP70
          CALL      RSPMEED1
VALOEC55  CALL      RKPMEED1
          BRANCH    OVRCD,VALOEC60
.
          MATCH     S2OEARID,PMDEARID
          GOTO      VALOEC60 IF NOT EQUAL
.
          MATCH     S2OECNTR,PMDERPTC
          GOTO      VALOEC60 IF NOT EQUAL
.
          PACK      SAVKEY30,PMDEARID,PMDERPTC,PMDECFEC,PMDEEXPC,SP70
.
          MOVE      PMDEARID,SVDEARID
          MOVE      PMDERPTC,SVDERPTC
          MOVE      PMDECFEC,SVDECFEC
          MOVE      PMDEEXPC,SVDEEXPC
          MOVE      PMDECFET,SVDECFET
          MOVE      PMDECTID,SVDECTID
.
          PACK      KEY30,PMDEARID,PMDERPTC,PMDECFEC,PMDEEXPC,SP70
          CALL      DEPMEED1
.
          MOVE      PMOEARID,PMDEARID
          MOVE      PMOECNTR,PMDERPTC
          MOVE      SVDECFEC,PMDECFEC
          MOVE      SVDEEXPC,PMDEEXPC
          MOVE      SVDECFET,PMDECFET
          MOVE      SVDECTID,PMDECTID
          MOVE      SP70,PMDESPAR
.
          PACK      KEY30,PMDEARID,PMDERPTC,PMDECFEC,PMDEEXPC,SP70
          CALL      RAPMEED1
          IF        OVRCD=1
            CALL      WRPMEED1
          ENDIF
.
          PACK      KEY30,SAVKEY30,SP70
          CALL      RSPMEED1
.
          GOTO      VALOEC55
.
. Re-write pmssesaf
.
VALOEC60  PACK      KEY37,S2OEARID,S2OECNTR,SP70
          CALL      RSPMSES1
VALOEC65  CALL      RKPMSES1
          BRANCH    OVRCD,VALOEC70
.
          MATCH     S2OEARID,PMESARID
          GOTO      VALOEC70 IF NOT EQUAL
.
          MATCH     S2OECNTR,PMESRPTC
          GOTO      VALOEC70 IF NOT EQUAL
.
          PACK      SAVKEY37,PMESARID,PMESRPTC,PMESSCOD,PMESSRVC,SP70
.
          MOVE      PMESARID,SVESARID
          MOVE      PMESRPTC,SVESRPTC
          MOVE      PMESSCOD,SVESSCOD
          MOVE      PMESSRVC,SVESSRVC
          MOVE      PMESSCTC,SVESSCTC
          MOVE      PMESSVID,SVESSVID
          MOVE      PMESCAMT,SVESCAMT
          MOVE      PMESSDTE,SVESSDTE
          MOVE      PMESFBAM,SVESFBAM
          MOVE      PMESITEM,SVESITEM
          MOVE      PMESMBAM,SVESMBAM
          MOVE      PMESMEXC,SVESMEXC
          MOVE      PMESSFAC,SVESSFAC
          MOVE      PMESSFEE,SVESSFEE
.
          PACK      KEY37,PMESARID,PMESRPTC,PMESSCOD,PMESSRVC,SP70
          CALL      DEPMSES1
.
          MOVE      PMOEARID,PMESARID
          MOVE      PMOECNTR,PMESRPTC
          MOVE      SVESSCOD,PMESSCOD
          MOVE      SVESSRVC,PMESSRVC
          MOVE      SVESSCTC,PMESSCTC
          MOVE      SVESSVID,PMESSVID
          MOVE      SVESCAMT,PMESCAMT
          MOVE      SVESSDTE,PMESSDTE
          MOVE      SVESFBAM,PMESFBAM
          MOVE      SVESITEM,PMESITEM
          MOVE      SVESMBAM,PMESMBAM
          MOVE      SVESMEXC,PMESMEXC
          MOVE      SVESSFAC,PMESSFAC
          MOVE      SVESSFEE,PMESSFEE
          MOVE      SP70,PMESSPAR
.
          PACK      KEY37,PMESARID,PMESRPTC,PMESSCOD,PMESSRVC,SP70
          CALL      RAPMSES1
          IF        OVRCD=1
            CALL      WRPMSES1
          ENDIF
.
          PACK      KEY37,SAVKEY37,SP70
          CALL      RSPMSES1
.
          GOTO      VALOEC65
.
. Re-write pmssedaf
.
VALOEC70  PACK      KEY44,S2OEARID,S2OECNTR,SP70
          CALL      RSPMSED1
VALOEC75  CALL      RKPMSED1
          BRANCH    OVRCD,VALOEC80
.
          MATCH     S2OEARID,PMSEARID
          GOTO      VALOEC80 IF NOT EQUAL
.
          MATCH     S2OECNTR,PMSERPTC
          GOTO      VALOEC80 IF NOT EQUAL
.
          PACK      SAVKEY44,PMSEARID,PMSERPTC,PMSESCOD:
                             PMSESRVC,PMSESFEC,PMSESEXC,SP70
.
          MOVE      PMSEARID,SVSEARID
          MOVE      PMSERPTC,SVSERPTC
          MOVE      PMSESCOD,SVSESCOD
          MOVE      PMSESRVC,SVSESRVC
          MOVE      PMSESFEC,SVSESFEC
          MOVE      PMSESEXC,SVSESEXC
          MOVE      PMSESFET,SVSESFET
.
          PACK      KEY44,PMSEARID,PMSERPTC,PMSESCOD:
                          PMSESRVC,PMSESFEC,PMSESEXC,SP70
          CALL      DEPMSED1
.
          MOVE      PMOEARID,PMSEARID
          MOVE      PMOECNTR,PMSERPTC
          MOVE      SVSESCOD,PMSESCOD
          MOVE      SVSESRVC,PMSESRVC
          MOVE      SVSESFEC,PMSESFEC
          MOVE      SVSESEXC,PMSESEXC
          MOVE      SVSESFET,PMSESFET
          MOVE      SP70,PMSESPAR
.
          PACK      KEY44,PMSEARID,PMSERPTC,PMSESCOD:
                          PMSESRVC,PMSESFEC,PMSESEXC,SP70
          CALL      RAPMSED1
          IF        OVRCD=1
            CALL      WRPMSED1
          ENDIF
.
          PACK      KEY44,SAVKEY44,SP70
          CALL      RSPMSED1
.
          GOTO      VALOEC75
.
VALOEC80  PACK      KEY29,S2OEARID,S2OECNTR,SP70
          CALL      RSPMERC1
VALOEC85  CALL      RKPMERC1
          BRANCH    OVRCD,VALOEC88
.
          MATCH     S2OEARID,PMRCARID
          GOTO      VALOEC88 IF NOT EQUAL
.
          MATCH     S2OECNTR,PMRCRPTC
          GOTO      VALOEC88 IF NOT EQUAL
.
          PACK      SAVKEY29,PMRCARID,PMRCRPTC,PMRCTYPE:
                             PMRCLINE,SP70
.
          MOVE      PMRCARID,SVRCARID
          MOVE      PMRCRPTC,SVRCRPTC
          MOVE      PMRCTYPE,SVRCTYPE
          MOVE      PMRCLINE,SVRCLINE
          MOVE      PMRCDATA,SVRCDATA
          MOVE      PMRCUDAT,SVRCUDAT
          MOVE      PMRCUTIM,SVRCUTIM
.
          PACK      KEY29,PMRCARID,PMRCRPTC,PMRCTYPE:
                          PMRCLINE,SP70
          CALL      DEPMERC1
.
          MOVE      PMOEARID,PMRCARID
          MOVE      PMOECNTR,PMRCRPTC
          MOVE      SVRCTYPE,PMRCTYPE
          MOVE      SVRCLINE,PMRCLINE
          MOVE      SVRCDATA,PMRCDATA
          MOVE      SVRCUDAT,PMRCUDAT
          MOVE      SVRCUTIM,PMRCUTIM
          MOVE      SP70,PMRCSPAR
.
          PACK      KEY29,PMRCARID,PMRCRPTC,PMRCTYPE:
                          PMRCLINE,SP70
          CALL      RAPMERC1
          IF        OVRCD=1
            CALL      WRPMERC1
          ENDIF
.
          PACK      KEY29,SAVKEY29,SP70
          CALL      RSPMERC1
.
          GOTO      VALOEC85
.
VALOEC88  PACK      KEY8,VALDELGN,SP70
          CALL      RDPMELF1
          BRANCH    OVRCD,VALOEC91
.
          MOVE      VALDCODE,PMEFVISN
.
          MATCH     SP70,VALDCODE
          IF        @EQUAL
            MOVE      SP70,PMEFCNTR
          ELSE
            MOVE      SVOECNTR,PMEFCNTR
          ENDIF
.
          CALL      UPPMELF1
.
VALOEC90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALOEC98
.
VALOEC91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Eligibility Number - ":
                             VALDELGN,"</RETURN_VALUE>"
          GOTO      VALOEC98
.
VALOEC92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Eligibility Record.":
                             "</RETURN_VALUE>"
          GOTO      VALOEC98
.
VALOEC98  CALL      XMLEND00
VALOEC99  RETURN
+
.-----------------------------------------------------------------
. Add/update ibaalvaf record
.-----------------------------------------------------------------
VALALV00  PACK      VALDCODE,VALDCODE,SP70
          PACK      VALDALVN,VALDALVN,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VALALV99
.
          MATCH     SP70,VALDALVN
          GOTO      VALALV98 IF EQUAL
          GOTO      VALALV98 IF EOS
.
          PACK      KEY8,VALDCODE,SP70
          CALL      RDIBALV1
          IF        OVRCD=0
.
            MATCH     " 1",IBAVTYPE
            GOTO      VALALV91 IF EQUAL
.
            MOVE      VALDALVN,IBAVAVIS
.
            CALL      UPIBALV1
.
          ELSE
.
            MOVE      VALDCODE,IBAVVISN
            MOVE      VALDALVN,IBAVAVIS
            MOVE      SP70,IBAVTYPE
            MOVE      SP70,IBAVSPAR
.
            CALL      WRIBALV1
.
          ENDIF
.
VALALV90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALALV98
.
VALALV91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Record Type when updating ibaalvaf.":
                             "</RETURN_VALUE>"
          GOTO      VALALV98
.
VALALV98  CALL      XMLEND00
VALALV99  RETURN
.
.-----------------------------------------------------------------
. Validate existing alternate id
.-----------------------------------------------------------------
VALAL200  PACK      VALDALVN,VALDALVN,SP70
          PACK      VALDCODE,VALDCODE,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VALAL299
.
          MATCH     SP70,VALDALVN
          GOTO      VALAL298 IF EQUAL
          GOTO      VALAL298 IF EOS
.
          PACK      KEY28,VALDALVN,SP70
          CALL      RSIBALV2
VALAL250  CALL      RKIBALV2
          BRANCH    OVRCD,VALAL290
.
          MATCH     VALDALVN,IBAVAVIS
          GOTO      VALAL290 IF NOT EQUAL
.
          MATCH     " 1",IBAVTYPE                * eReferral record type ?
          GOTO      VALAL250 IF EQUAL            * yes - ignore record
.
          MATCH     SP70,VALDCODE
          IF        !@EQUAL
            MOVE      VALDCODE,DIM8
            MATCH     DIM8,IBAVVISN
            GOTO      VALAL250 IF EQUAL
          ENDIF
.
          PACK      KEY8,IBAVVISN,SP70
          CALL      RDPTMIS1
          BRANCH    OVRCD,VALAL291
.
          COMPARE   FIVE,ASTAT
          GOTO      VALAL291 IF NOT EQUAL
.
          GOTO      VALAL250
.
VALAL290  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALAL298
.
VALAL291  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Alternate visit id already exists in ibaalvaf":
                             "</RETURN_VALUE>"
          GOTO      VALAL298
.
VALAL298  CALL      XMLEND00
VALAL299  RETURN
.
.-----------------------------------------------------------------
. Validate Type of IMC Default from patfn1af
.-----------------------------------------------------------------
VALTYA00  PACK      VALDCODE,VALDCODE,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VALTYA99
.
VALTYA10  MATCH     SP70,VALDCODE
          GOTO      VALTYA98 IF EQUAL
          GOTO      VALTYA98 IF EOS
.
          MOVE      VALDCODE,KEY6
.
VALTYA25  PACK      KEY14,KEY6,ZERO,ZERO,ZERO,ZERO,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,VALTYA98
.
          MATCH     SP70,PTHFIMCD
          GOTO      VALTYA98 IF EQUAL
.
VALTYA90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             PTHFIMCD:
                             "</RETURN_VALUE>"
.
          GOTO      VALTYA98
.
VALTYA98  CALL      XMLEND00
VALTYA99  RETURN
.
.-----------------------------------------------------------------
. Return Admission Date and Discharge Date
.-----------------------------------------------------------------
VALADD00  PACK      VALDCODE,VALDCODE,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VALADD99
.
VALADD10  MATCH     SP70,VALDCODE
          GOTO      VALADD98 IF EQUAL
          GOTO      VALADD98 IF EOS
.
VALADD25  PACK      KEY8,VALDCODE,SP70
          CALL      RDMISS1
          BRANCH    OVRCD,VALTYA98
.
          PACK      KEY8,VALDCODE,SP70
          CALL      RDDSCH1          
          IF        OVRCD=1
            MOVE      SP70,DDATE
          ENDIF
.
VALADD90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>"
.
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          WRITE     HTMLFILE;CDAY,SLASH,CMON,SLASH,CCENT,CYEAR,"|"
.
          MATCH     SP70,DDATE
          IF        @EQUAL
            WRITE     HTMLFILE;" |"
          ELSE
            UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
            WRITE     HTMLFILE;CDAY,SLASH,CMON,SLASH,CCENT,CYEAR,"|"
          ENDIF 
.                    
          WRITE     HTMLFILE;"</RETURN_VALUE>"
.
          GOTO      VALADD98
.
VALADD98  CALL      XMLEND00
VALADD99  RETURN
.
.-----------------------------------------------------------------
. Validate Certificates                     
.-----------------------------------------------------------------
VALCER00  PACK      VALDCODE,VALDCODE,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VALCER99
.
VALCER10  MATCH     SP70,VALDCODE
          GOTO      VALCER98 IF EQUAL
          GOTO      VALCER98 IF EOS
.
          UNPACK    VALDCODE,PTCER001,PTCER002,PTCER003,PTCER004
.
          PACK      KEY19,PTCER001,PTCER002,PTCER003,SP70
          CALL      RDPTCER1
          BRANCH    OVRCD,VALCER50
          GOTO      VALCER96
.
VALCER50  PACK      KEY5,CATcr,PTCER002,SP5
          CALL      RDCODE1
          IF        OVRCD = 0
            MATCH     "U",TCINDC1
            GOTO      VALCER90 IF EQUAL        * 3B Certif. - no further checks
          ENDIF
.
          PACK      KEY19,PTCER001,PTCER002,SP70    * set before CALL
          CALL      RSPTCER1
VALCER60  CALL      RKPTCER1
          BRANCH    OVRCD,VALCER90
.
          PACK      KEY11,PTCEURNO,PTCETYPE,SP20
          MATCH     KEY11,KEY19
          GOTO      VALCER90 IF NOT EQUAL
.
          MATCH     PTCEFDAT,PTCER003
          GOTO      VALCER60 IF EQUAL       * bypassing checking itself
          IF        @LESS
            MATCH     PTCEFDAT,PTCER004
            GOTO      VALCER90 IF LESS      * both dates less than old record
          ENDIF
.
          MATCH     PTCER004,PTCETDAT
          IF        @LESS
            MATCH     PTCER003,PTCETDAT
            GOTO      VALCER60 IF LESS
          ENDIF
.
          MATCH     PTCER003,PTCEFDAT
          IF        @LESS
            MATCH   PTCETDAT,PTCER004
            IF        @LESS
              GOTO      VALCER95
            ENDIF
          ENDIF
.
          GOTO      VALCER60
.
VALCER90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE></RETURN_VALUE>"
.
          GOTO      VALCER98
.
VALCER95  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Date Range overlaps another Certificate.":
                             "</RETURN_VALUE>"
.
          GOTO      VALCER98
.
VALCER96  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Certificate Type/Date already exists.":
                             "</RETURN_VALUE>"
.
          GOTO      VALCER98
.
VALCER98  CALL      XMLEND00
VALCER99  RETURN
+
.-----------------------------------------------------------------
. Update pmsvx1af record
.-----------------------------------------------------------------
VALUDF00  PACK      UPDFIELD,UPDFIELD,SP70  * Field F9,10,11,12,13,14,15
          PACK      VALDCODE,VALDCODE,SP70  * Visit Identifier to update 
          PACK      VALVXUDF,VALVXUDF,SP70  * User Defined Code value
.
          CALL      XMLHED00
          BRANCH    EXIT,VALUDF99
.
          MATCH     SP70,VALDCODE
          GOTO      VALALV98 IF EQUAL
          GOTO      VALALV98 IF EOS
.
          PACK      KEY8,VALDCODE
          CALL      RDEMVIS1
          IF        OVRCD<>1
            CALL      WEDV0000                     * EDWARD visit alteration
          ENDIF
.
          PACK      KEY8,VALDCODE,SP70
          CALL      RDPMVX11
          IF        OVRCD<>0
            GOTO      VALUDF96
          ENDIF
.
          MATCH     "F9",UPDFIELD
          GOTO      VALUDF10 IF NOT EQUAL
          MOVE      VALVXUDF,PMVXUDF9
          GOTO      VALUDF50
.
VALUDF10  MATCH     "10",UPDFIELD
          GOTO      VALUDF11 IF NOT EQUAL
          MOVE      VALVXUDF,PMVXUD10
          GOTO      VALUDF50
.
VALUDF11  MATCH     "11",UPDFIELD
          GOTO      VALUDF12 IF NOT EQUAL
          MOVE      VALVXUDF,PMVXUD11
          GOTO      VALUDF50
.
VALUDF12  MATCH     "12",UPDFIELD
          GOTO      VALUDF13 IF NOT EQUAL
          MOVE      VALVXUDF,PMVXUD12
          GOTO      VALUDF50
.
VALUDF13  MATCH     "13",UPDFIELD
          GOTO      VALUDF14 IF NOT EQUAL
          MOVE      VALVXUDF,PMVXUD13
          GOTO      VALUDF50
.
VALUDF14  MATCH     "14",UPDFIELD
          GOTO      VALUDF15 IF NOT EQUAL
          MOVE      VALVXUDF,PMVXUD14
          GOTO      VALUDF50
.
VALUDF15  MATCH     "15",UPDFIELD
          GOTO      VALUDF19 IF NOT EQUAL
          MOVE      VALVXUDF,PMVXUD15
          GOTO      VALUDF50
.
VALUDF19  MATCH     "19",UPDFIELD
          GOTO      VALUDF91 IF NOT EQUAL
          PACK      UPDVALUE,FDVUPDT,PMVXFVIO
          MOVE      VALVXUDF,PMVXFVIO
          PACK      NEWVALUE,FDVUPDT,PMVXFVIO
          MOVE      VALDCODE,ADMISSNO
          PACK      REASONFC,SP70
          CALL      WRCHA000
.
VALUDF50  CALL      UPPMVX11
.
VALUDF90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALUDF98
.
VALUDF91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Field Name when updating pmxvx1af.":
                             "</RETURN_VALUE>"
          GOTO      VALUDF98
.
VALUDF96  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Visit Record when updating pmxvx1af.":
                             "</RETURN_VALUE>"
.
VALUDF98  CALL      XMLEND00
VALUDF99  RETURN
.
.-----------------------------------------------------------------
. Update oprdetaf prosthetics verified 
.-----------------------------------------------------------------
VALPRO00  PACK      VALDCODE,VALDCODE,SP70
          PACK      VALDKEYS,VALDKEYS,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VALPRO99
.
          MATCH     SP70,VALDKEYS
          GOTO      VALPRO98 IF EQUAL
          GOTO      VALPRO98 IF EOS
.
          PACK      KEY26,VALDKEYS,SP70
          CALL      RDOPDEA1
          BRANCH    OVRCD,VALPRO91
.
          PACK      OPDAVUN1,VALDCODE,SP70
.
          CALL      UPOPDEA1
.
.
VALPRO90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALPRO98
.
VALPRO91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid oprdetaf record":
                             "</RETURN_VALUE>"
          GOTO      VALPRO98
.
VALPRO98  CALL      XMLEND00
VALPRO99  RETURN
.
.-----------------------------------------------------------------
. Update emrvisaf research
.-----------------------------------------------------------------
VALRES00  PACK      VALDCODE,VALDCODE,SP70
          PACK      ADMISSNO,ADMISSNO,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VALRES99
.
          MATCH     SP70,ADMISSNO
          GOTO      VALRES98 IF EQUAL
          GOTO      VALRES98 IF EOS
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,VALRES91
.
          PACK      EMVIUC29,VALDCODE,SP70
.
          CALL      UPEMVIS1
          CALL      WEDV0000                     * EDWARD visit alteration
.
VALRES90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALRES98
.
VALRES91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid emrvisaf record":
                             "</RETURN_VALUE>"
          GOTO      VALRES98
.
VALRES98  CALL      XMLEND00
VALRES99  RETURN
.-----------------------------------------------------------------
. Update emrvisaf alcohol consumed
.-----------------------------------------------------------------
VALALC00  PACK      VALDCODE,VALDCODE,SP70
          PACK      ADMISSNO,ADMISSNO,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VALALC99
.
          MATCH     SP70,ADMISSNO
          GOTO      VALALC98 IF EQUAL
          GOTO      VALALC98 IF EOS
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,VALALC91
.
          PACK      EMVIUC27,VALDCODE,SP70
.
          CALL      UPEMVIS1
          CALL      WEDV0000                     * EDWARD visit alteration
.
VALALC10  COMPARE   ONE,VISXDCIN
          GOTO      VALALC90 IF EQUAL
.
          PACK      KEY11,ADMISSNO,ZERO,ZERO,ONE,SP70
          CALL      RDVSXDC1
          IF        OVRCD=0
            MOVE      "1",VSXDDELT
.
            MATCH     SP70,EMVIUC27
            IF        !@EQUAL
              PACK      KEY5,CATES,EMVIUC27,SP70
              CALL      RDCODE1
              IF        OVRCD=0
                MATCH     "Y",TCINDC1
                IF        @EQUAL
                  MOVE      "0",VSXDDELT
                ENDIF
              ENDIF
            ENDIF
.
            MOVE      USERID,VSXDUUSR
            PACK      VSXDUDAT,CCC,CYY,CMM,CDD
            REP       " 0",VSXDUDAT
            MOVE      CTIMEIS,VSXDUTIM
.
            CALL      UPVSXDC1
.
.          ELSE
.
.            CALL      CLVISXDC
.
.            MOVE      ADMISSNO,VSXDVISN
.            MOVE      "001",VSXDTYDA
.            MOVE      "1",VSXDDELT 
.
.            MATCH     SP70,EMVIUC27
.            IF        !@EQUAL
.              PACK      KEY5,CATES,EMVIUC27,SP70
.              CALL      RDCODE1
.              IF        OVRCD=0
.                MATCH     "Y",TCINDC1
.                IF        @EQUAL
.                  MOVE      "0",VSXDDELT
.                ENDIF
.              ENDIF
.            ENDIF
.
.            MOVE      USERID,VSXDCUSR
.            PACK      VSXDCDAT,CCC,CYY,CMM,CDD
.            REP       " 0",VSXDCDAT
.            MOVE      CTIMEIS,VSXDCTIM
.
.            CALL      WRVSXDC1
.
          ENDIF
.
VALALC90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALALC98
.
VALALC91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid emrvisaf record":
                             "</RETURN_VALUE>"
          GOTO      VALALC98
.
VALALC98  CALL      XMLEND00
VALALC99  RETURN
.
.-----------------------------------------------------------------
. validate visxdcaf 001 (Alcohol research) record
.-----------------------------------------------------------------
VALXDC00  COMPARE   ONE,VISXDCIN
          GOTO      VALXDC93 IF EQUAL
. 
          PACK      ADMISSNO,ADMISSNO,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VALXDC99
.
          MATCH     SP70,ADMISSNO
          GOTO      VALXDC93 IF EQUAL
          GOTO      VALXDC93 IF EOS
.
          PACK      KEY11,ADMISSNO,ZERO,ZERO,ONE,SP70
          CALL      RDVSXDC1
          BRANCH    OVRCD,VALXDC92
.
          MATCH     "1",VSXDDELT
          GOTO      VALXDC92 IF EQUAL
.
          MATCH     SP70,VSXDVAL1
          GOTO      VALXDC91 IF NOT EQUAL
.
          MATCH     SP70,VSXDCOD1
          GOTO      VALXDC91 IF NOT EQUAL
.
          PACK      DIM100,SP70,SP70
          MATCH     DIM100,VSXDTXT1
          GOTO      VALXDC91 IF NOT EQUAL
.
          MATCH     SP70,VSXDYN01
          GOTO      VALXDC91 IF NOT EQUAL  
.
          GOTO      VALXDC92
.
.VALXDC50  PACK      KEY11,ADMISSNO,SP70
.          CALL      RSVSXDC1
.          CALL      RKVSXDC1
.          BRANCH    OVRCD,VALXDC93
..
.          MATCH     ADMISSNO,VSXDVISN
.          GOTO      VALXDC93 IF NOT EQUAL
..
.          GOTO      VALXDC92
.
VALXDC90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALXDC98
.
VALXDC91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             TWO:
                             "</RETURN_VALUE>"
.
          GOTO      VALXDC98
.
VALXDC92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             THREE:
                             "</RETURN_VALUE>"
.
          GOTO      VALXDC98
.
VALXDC93  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             FOUR:
                             "</RETURN_VALUE>"
.
          GOTO      VALXDC98
.
VALXDC98  CALL      XMLEND00
VALXDC99  RETURN
.
.-----------------------------------------------------------------
. Validate empty attending doctor
.-----------------------------------------------------------------
VALADC00  PACK      ADMISSNO,ADMISSNO,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VALADC99
.
VALADC10  MATCH     SP70,ADMISSNO
          GOTO      VALADC98 IF EQUAL
          GOTO      VALADC98 IF EOS
.
VALADC25  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,VALADC98
.
          PACK      DOCTCODE,DOCTCODE,SP70
.
          MATCH     DOCTCODE,EMVIDOCT
          GOTO      VALADC98 IF EQUAL
.
VALADC90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALADC98
.
VALADC98  CALL      XMLEND00
VALADC99  RETURN
+
.-------------------------------------------------------------------
. Update Mental Health Practitioner Seen
. DOCTCODE = New MH practitioner code. Blank if deleting 
.-------------------------------------------------------------------
MHPRA000  CALL      XMLHED00
          BRANCH    EXIT,MHPRA999
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,MHPRA900
.
          COMPARE   FOUR,EMVISTAT
          GOTO      MHPRA900 IF EQUAL
.
          MATCH     SP70,DOCTCODE                * Delete ?
          IF        @EQUAL
            MOVE      SP70,DOCTDATE              * MH Practitioner Date
            MOVE      SP70,DOCTTIME              * MH Practitioner Time
          ELSE
            PACK      KEY8,CCC,CYY,CMM,CDD
            REP       " 0",KEY8
            MOVE      KEY8,DOCTDATE              * MH Practitioner Date
            CLOCK     TIME,DOCTTIME              * MH Practitioner Time
          ENDIF
.
          PACK      KEY16,EMVIDATE,EMVITIME,SP70
          REP       ":0",KEY16
          PACK      SAVKEY16,DOCTDATE,DOCTTIME,SP70
          REP       ":0",SAVKEY16
.
MHPRA050  MATCH     SP70,DOCTCODE       * MH practitioner deletion
          GOTO      MHPRA300 IF EQUAL
.
          MATCH     "1",EMVITRIG
          IF        @EQUAL
            MATCH     SAVKEY16,KEY16    * check arrival date/time ok to be
            GOTO      MHPRA200 IF EQUAL * equal if triage category 1
          ENDIF
.
          MATCH     SAVKEY16,KEY16      * check arrival date/time
          IF        !@LESS
            GOTO      MHPRA910
          ENDIF
.
MHPRA200  PACK      KEY16,EMVIDDAT,EMVIDTIM,SP70
          MATCH     SP70,KEY16
          GOTO      MHPRA300 IF EQUAL
          REP       ":0",KEY16
.
          MATCH     KEY16,SAVKEY16    * check discharge date/time
          IF        !@LESS
            GOTO      MHPRA920
          ENDIF
.
MHPRA300  MOVE      DOCTCODE,EMVIMPRA            * MH Practitioner
          MOVE      DOCTDATE,EMVIMPDT            * MH Practitioner Date
          MOVE      DOCTTIME,EMVIMPTM            * MH Practitioner Time
.
          CALL      UPEMVIS1
          CALL      WEDV0000                     * EDWARD visit alteration
.
          MATCH     SP70,DOCTCODE
          IF        !@EQUAL
            CALL      WRTHIS00
          ELSE
            PACK      KEY22,ADMISSNO,Z70
            CALL      RSEMHIS1
MHPRA600    CALL      RPEMHIS1
            BRANCH    OVRCD,MHPRA700
.
            MATCH     ADMISSNO,EMHIVIS
            GOTO      MHPRA700 IF NOT EQUAL
.
            MATCH     "MHPRA",EMHIUPT
            GOTO      MHPRA600 IF NOT EQUAL
.
            PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
            CALL      DEEMHIS1
.
            GOTO      MHPRA600
          ENDIF
.
MHPRA700  PROC      EMRDRCHR          * Update Visit Billing Complete
          CALL      DSEE0000          * Allocate Doctor Seen Date and Time
.
MHPRA800  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Mental Health Practitioner Updated":
                             "</RETURN_VALUE>"
          GOTO      MHPRA980
.
MHPRA900  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      MHPRA980
.
MHPRA910  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Mental Health Doctor Seen Date/Time is ":
                             "before the Arrival Date/Time":
                             "</RETURN_VALUE>"
          GOTO      MHPRA980
.
MHPRA920  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Mental Health Doctor Seen Date/Time ":
                             "is after the Dischage Date/Time":
                             "</RETURN_VALUE>"
          GOTO      MHPRA980
.
MHPRA980  CALL      XMLEND00
.
MHPRA999  RETURN
+
.-----------------------------------------------------------
. Allocate the doctor seen when adding a MH practitioner
.------------------------------------------------------------
DSEE0000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,DSEE9999
.
          MATCH     SP70,EMVIDOCT          * Already seen by a doctor so exit
          GOTO      DSEE9999 IF NOT EQUAL
.
          MATCH     SP70,EMVIDRDT          * Already seen by a doctor so exit
          GOTO      DSEE9999 IF NOT EQUAL
.
          MATCH     SP70,EMVIMPRA          * No doctor to allocate so exit
          GOTO      DSEE9999 IF EQUAL
.
          COMPARE   FOUR,EMVISTAT          * Exit if cancelled ED visit
          GOTO      DSEE9999 IF EQUAL
.
          MATCH     "1",EMVITRIG           * Triage cat of 1 (RED)
          GOTO      DSEE1000 IF NOT EQUAL
.
          MOVE      EMVIMPRA,EMVIDOCT
          MOVE      EMVIDATE,EMVIDRDT      * Make seen date and time the same
          MOVE      EMVITIME,EMVIDRTM      * as arrival date and time
          GOTO      DSEE2000
.
DSEE1000  MOVE      EMVIMPRA,EMVIDOCT
          MOVE      EMVIMPDT,EMVIDRDT
          MOVE      EMVIMPTM,EMVIDRTM
.
DSEE2000  CALL      UPEMVIS1
          CALL      WEDV0000                     * EDWARD visit alteration
.
          IF        CCCNSVHM = 1
            OPEN      CCIEX7A1,"cciex7af"
            IF        EMVISTAT=2|EMVISTAT=3
              MATCH     EMVIDOCT,SAVEDOCT
              IF        !@EQUAL
                MOVE      ANST,CLEXSTAT
                MOVE      ONE,CLEXTYPE
                MOVE      EMVIADMN,CLEXVISN
                PACK      KEY11,CLEXSTAT,CLEXTYPE,CLEXVISN
                CALL      RDCLEX71
                IF        OVRCD = 1
                  CALL      WRCLEX71
                ENDIF
              ENDIF
            ENDIF
            CLOSE     CCIEX7A1
          ENDIF
.
.         Send update broadcast message
.
          MOVE      EMVIURNO,KEY8          * first - get the PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,DSEE7000
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,DSEE7000
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,DSEE7000
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      FIVE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                  * send update emr details
.
DSEE7000  CALL      WDHIST00                  * Write allocate doctor history
          GOTO      DSEE9999
.
DSEE9999  RETURN
+
.---------------------------------------------------------------
. Write allocate doctor history record from add MH practitioner
.---------------------------------------------------------------
WDHIST00  MOVE      SP70,SAVEDOCT
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
WDHIST05  CALL      RPEMHIS1                * There will always be a previous
          BRANCH    OVRCD,WDHIST99          * history record for the arrival
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      WDHIST99 IF NOT EQUAL
.
          MOVE      EMHIDOC,SAVEDOCT
.
WDHIST10  MOVE      EMVIADMN,EMHIVIS
          CLOCK     TIME,CTIMEIS
.
          PACK      EMHIDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMHIDAT
          UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
          PACK      EMHITIM,HOUR,MIN,SEC
          REP       " 0",EMHITIM
.
          MATCH     SAVEDOCT,EMVIDOCT         * Is this a new doctor
          GOTO      WDHIST99 IF EQUAL
.
          MATCH     "1",EMVITRIG              * Triage cat of RED
          IF        @EQUAL
            MOVE      EMVIDATE,EMHIDSD   * Make seen date/time the same as
            UNPACK    EMVITIME,HOUR,D1,MIN,D1,SEC * arrival date/time if
            PACK      EMHIDST,HOUR,MIN,SEC        * first doctor
            REP       " 0",EMHIDST
          ELSE
            MOVE      EMVIMPDT,EMHIDSD      * New doctor so seen date/time
            UNPACK    EMVIMPTM,HOUR,D1,MIN,D1,SEC * are set the MH practitioner
            PACK      EMHIDST,HOUR,MIN,SEC        * seen date/time
            REP       " 0",EMHIDST
          ENDIF
.
WDHIST40  MOVE      "ALDOC",EMHIUPT
.
          MATCH     SP70,WEBUSEID
          IF        !@EQUAL
            PACK      KEY80,WEBUSEID
            CALL      RDWBSE7
            IF        OVRCD=0
              MOVE      WBSEUID,EMHIEUS
            ENDIF
          ELSE
            MOVE      USERID,EMHIEUS
          ENDIF
.
          MOVE      EMVILOCN,EMHILOC
          MOVE      EMVIMPRA,EMHIDOC       * Set doctor seen to MH practitioner
          MOVE      EMVIATNS,EMHINUR
          PACK      EMHISPA,SP70,SP70
          PACK      EMHIDSD,EMHIDSD,SP70
          PACK      EMHIDST,EMHIDST,SP70
          PACK      EMHINSD,EMHINSD,SP70
          PACK      EMHINST,EMHINST,SP70
.
          MATCH     SP70,EMHINUR
          IF        @EQUAL
            MOVE      SP70,EMHINSD
            MOVE      SP70,EMHINST
          ENDIF
.
          MATCH     SP70,EMHIDOC
          IF        @EQUAL
            MOVE      SP70,EMHIDSD
            MOVE      SP70,EMHIDST
          ENDIF
.
          CALL      IBACLOCK
          PACK      EMHICDAT,CCC,CYY,CMM,CDD  * Date Record Created (ccyymmdd)
          REP       " 0",EMHICDAT
          CLOCK     TIME,EMHICTIM             * Time Record Created (hh:mm:ss)
          MOVE      USERID,EMHICUID           * Web User Id Created (websecaf)
.
          MOVE      SP70,EMHIUDAT      * Date Record Updated (ccyymmdd)
          MOVE      SP70,EMHIUTIM      * Time Record Updated (hh:mm:ss)
          MOVE      SP70,EMHIUUID      * Web User Id Updated (websecaf)
.
WDHIST80  PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
          CALL      RAEMHIS1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            MOVE      SP70,EMHIDRBC              * Billing Incomplete
            CALL      WREMHIS1
            TRAPCLR   IO
            BRANCH    OVRCD,WDHIST85             * Add one second and try again
.
          ELSE
WDHIST85    CALL      IBACLOCK                   * Set new date and time and
            PACK      EMHIDAT,CCC,CYY,CMM,CDD    * try write again
            REP       " 0",EMHIDAT
            CLOCK     TIME,CTIMEIS
            UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
            PACK      EMHITIM,HOUR,MIN,SEC
            REP       " 0",EMHITIM
            GOTO      WDHIST80
          ENDIF
.
          PROC      EMRDRCHR                 * Update Visit Billing Complete
          MOVE      ZERO,EXIT
.
WDHIST99  RETURN
.
.
.-----------------------------------------------------------------
. Check if EMR or ICD10 diagnosis is Meth. related
.-----------------------------------------------------------------
METHD000  CALL      XMLHED00
          BRANCH    EXIT,METHD999
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1                     * Read EMR visit
          BRANCH    OVRCD,METHD910
.
         
          IF        VALDTYPE=1
            PACK      KEY9,VALDCODE,SP70
            CALL      RDEMICD1                   * emr diagnosis
            BRANCH    OVRCD,METHD910
.
            MATCH     "1",EMICMETH               * Yes Meth. related
            GOTO      METHD900 IF EQUAL
          ENDIF
.
          IF        VALDTYPE=2
            PACK      KEY9,VALDCODE,SP70
            MOVE      EMVIDATE,ICDRDDTE
            CALL      RDPTICD1
            BRANCH    OVRCD,METHD910
.
            IF        ICDRDVER>=10
              MATCH     "1",PTODMETH          * Yes Meth. related
              GOTO      METHD900 IF EQUAL
            ENDIF
          ENDIF
          GOTO      METHD910
.
METHD900  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      METHD980
.
METHD910  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ZERO:
                             "</RETURN_VALUE>"
.
          GOTO      METHD980
.
METHD980  CALL      XMLEND00
METHD999  RETURN
+
.-----------------------------------------------------------------
. Validate Health Fund / Participant for Emergency OEC
.-----------------------------------------------------------------
VEMOEC00  PACK      VALDCODE,VALDCODE,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VEMOEC99
.
          MATCH     SP70,VALDCODE
          GOTO      VEMOEC98 IF EQUAL
          GOTO      VEMOEC98 IF EOS
.
          PACK      KEY6,VALDCODE,SP70
          CALL      RDPTFX11
          BRANCH    OVRCD,VEMOEC98
.
          MATCH     SP70,PTFXECLP
          GOTO      VEMOEC98 IF EQUAL
          GOTO      VEMOEC98 IF EOS`
.
          PACK      KEY9,PTFXECLP,SP70
          CALL      RSPTPCP1
VEMOEC10  CALL      RKPTPCP1
          BRANCH    OVRCD,VEMOEC98
.
          MATCH     PTFXECLP,PTPPCODE
          GOTO      VEMOEC98 IF NOT EQUAL
.
          MATCH     "OEC",PTPPCPID
          GOTO      VEMOEC10 IF NOT EQUAL
.
VEMOEC90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VEMOEC98
.
VEMOEC98  CALL      XMLEND00
VEMOEC99  RETURN
.
.-------------------------------------------------------------
. VALOEW00 - Validate Link OECWs
.-------------------------------------------------------------
VALOEW00  PACK      VALDELGN,VALDELGN,SP70
          PACK      VALDCODE,VALDCODE,SP70
          CALL      XMLHED00
          BRANCH    EXIT,VALOEW99
.
VALOEW10  PACK      KEY8,VALDELGN,SP70
          CALL      RDWBELF1
          BRANCH    OVRCD,VALOEW91
.
. Re-write weboecaf
.
          MATCH     SP70,WBEFVISN
          IF        !@EQUAL
.           
            PACK      KEY8,WBEFVISN,SP70   * Display emr visits on OECW link scr
            CALL      RDEMVIS1
            IF        OVRCD=0
              PACK      KEY11,WBEFELGN,SP1,SP1,ONE,SP70
            ELSE
              PACK      KEY11,WBEFVISN,WBEFCNTR,SP70
            ENDIF
.
          ELSE
            PACK      KEY11,WBEFELGN,SP1,SP1,ONE,SP70
          ENDIF
.
          CALL      RDWBOEC1
          IF        OVRCD=1
            GOTO      VALOEW92
          ELSE
            MOVE      WBOCVISN,SVOEVISN
            MOVE      WBOCCNTR,SVOECNTR
            MOVE      WBOCSTAT,SVOESTAT
            MOVE      WBOCURNO,SVOEURNO
            MOVE      WBOCARID,SVOEARID
            MOVE      WBOCTRID,SVOETRID
            MOVE      WBOCRQDT,SVOERQDT
            MOVE      WBOCETYP,SVOEETYP
            MOVE      WBOCERRC,SVOEERRC
            MOVE      WBOCERRD,SVOEERRD
            MOVE      WBOCCDTE,SVOECDTE
            MOVE      WBOCCTIM,SVOECTIM
            MOVE      WBOCUDTE,SVOEUDTE
            MOVE      WBOCUTIM,SVOEUTIM
            MOVE      WBOCHOSP,SVOEHOSP
            MOVE      WBOCELEG,SVOEELEG
            MOVE      WBOCMSID,SVOEMSID
.
            MOVE      WBOCARID,S2OEARID
            MOVE      WBOCCNTR,S2OECNTR
.
            MOVE      WBOCCUID,SVOECUID
            MOVE      WBOCUUID,SVOEUUID

            CALL      DEWBOEC1
          ENDIF
.
          MATCH     SP70,VALDCODE
          IF        !@EQUAL
            MOVE      VALDCODE,SVOEVISN
            MOVE      VALDELGN,SVOEELEG
            MOVE      VALDCODE,SVOEARID
            LJUSTIFY  SVOEARID
.
            PACK      KEY11,SVOEVISN,Z70
            CALL      RSWBOEC1
            CALL      RPWBOEC1
            IF        OVRCD=1
              MOVE      "  1",SVOECNTR
            ELSE
              MATCH     WBOCVISN,SVOEVISN
              IF        !@EQUAL
                MOVE      "  1",SVOECNTR
              ELSE
VALOEW20        MOVE      ZERO,FORM3
                MOVE      WBOCCNTR,FORM3
                ADD       ONE,FORM3
                MOVE      FORM3,SVOECNTR
              ENDIF
            ENDIF
          ELSE
            MOVE      VALDELGN,SVOEVISN
            MOVE      "  1",SVOECNTR
            MOVE      SP70,SVOEELEG
            MOVE      VALDELGN,SVOEARID
            LJUSTIFY  SVOEARID
          ENDIF
.
          MOVE      SVOEVISN,WBOCVISN
          MOVE      SVOECNTR,WBOCCNTR
          MOVE      SVOESTAT,WBOCSTAT
          MOVE      SVOEURNO,WBOCURNO
          MOVE      SVOEARID,WBOCARID
          MOVE      SVOETRID,WBOCTRID
          MOVE      SVOERQDT,WBOCRQDT
          MOVE      SVOEETYP,WBOCETYP
          MOVE      SVOEERRC,WBOCERRC
          MOVE      SVOEERRD,WBOCERRD
          MOVE      SVOECDTE,WBOCCDTE
          MOVE      SVOECTIM,WBOCCTIM
          MOVE      SVOEUDTE,WBOCUDTE
          MOVE      SVOEUTIM,WBOCUTIM
          MOVE      SVOEHOSP,WBOCHOSP
          MOVE      SVOEELEG,WBOCELEG
          MOVE      SVOEMSID,WBOCMSID
          MOVE      SVOECUID,WBOCCUID
          MOVE      SVOEUUID,WBOCUUID

          MOVE      SP70,WBOCSPAR
.
          PACK      KEY11,WBOCVISN,WBOCCNTR,SP70
          CALL      RAWBOEC1
          IF        OVRCD=0
            GOTO      VALOEW20
          ENDIF
.
          CALL      WRWBOEC1
.
. Re-write webeehaf
.
          PACK      KEY23,S2OEARID,S2OECNTR,SP70
          CALL      RDWBEEH1
          BRANCH    OVRCD,VALOEW50
.
          MOVE      WBEHARID,SVHEARID
          MOVE      WBEHRPTC,SVHERPTC
          MOVE      WBEHCTID,SVHECTID
          MOVE      WBEHBENL,SVHEBENL
          MOVE      WBEHCFAC,SVHECFAC
          MOVE      WBEHCPAM,SVHECPAM
          MOVE      WBEHCPDR,SVHECPDR
          MOVE      WBEHCPDI,SVHECPDI
          MOVE      WBEHCPFN,SVHECPFN
          MOVE      WBEHCPMN,SVHECPMN
          MOVE      WBEHCPRN,SVHECPRN
          MOVE      WBEHEXAM,SVHEEXAM
          MOVE      WBEHEADI,SVHEEADI
          MOVE      WBEHEXBA,SVHEEXBA
          MOVE      WBEHEXDI,SVHEEXDI
          MOVE      WBEHFSTA,SVHEFSTA
          MOVE      WBEHFRID,SVHEFRID
          MOVE      WBEHFSCD,SVHEFSCD
          MOVE      WBEHMSCD,SVHEMSCD
          MOVE      WBEHPEAI,SVHEPEAI
          MOVE      WBEHPSCD,SVHEPSCD
          MOVE      WBEHTNAM,SVHETNAM
          MOVE      WBEHTBDI,SVHETBDI
          MOVE      WBEHTBSC,SVHETBSC
          MOVE      WBEHVCID,SVHEVCID
          MOVE      WBEHUDTE,SVHEUDTE
          MOVE      WBEHUTIM,SVHEUTIM
          MOVE      WBEHUUID,SVHEUUID
          MOVE      WBEHCDTE,SVHECDTE
          MOVE      WBEHCTIM,SVHECTIM
          MOVE      WBEHCUID,SVHECUID
          MOVE      WBEHMSID,SVHEMSID
.
          CALL      DEWBEEH1
.
          MOVE      WBOCARID,WBEHARID
          MOVE      WBOCCNTR,WBEHRPTC
          MOVE      SVHECTID,WBEHCTID
          MOVE      SVHEBENL,WBEHBENL
          MOVE      SVHECFAC,WBEHCFAC
          MOVE      SVHECPAM,WBEHCPAM
          MOVE      SVHECPDR,WBEHCPDR
          MOVE      SVHECPDI,WBEHCPDI
          MOVE      SVHECPFN,WBEHCPFN
          MOVE      SVHECPMN,WBEHCPMN
          MOVE      SVHECPRN,WBEHCPRN
          MOVE      SVHEEXAM,WBEHEXAM
          MOVE      SVHEEADI,WBEHEADI
          MOVE      SVHEEXBA,WBEHEXBA
          MOVE      SVHEEXDI,WBEHEXDI
          MOVE      SVHEFSTA,WBEHFSTA
          MOVE      SVHEFRID,WBEHFRID
          MOVE      SVHEFSCD,WBEHFSCD
          MOVE      SVHEMSCD,WBEHMSCD
          MOVE      SVHEPEAI,WBEHPEAI
          MOVE      SVHEPSCD,WBEHPSCD
          MOVE      SVHETNAM,WBEHTNAM
          MOVE      SVHETBDI,WBEHTBDI
          MOVE      SVHETBSC,WBEHTBSC
          MOVE      SVHEVCID,WBEHVCID
          MOVE      SVHEUDTE,WBEHUDTE
          MOVE      SVHEUTIM,WBEHUTIM
          MOVE      SVHEUUID,WBEHUUID
          MOVE      SVHECDTE,WBEHCDTE
          MOVE      SVHECTIM,WBEHCTIM
          MOVE      SVHECUID,WBEHCUID
          MOVE      SVHEMSID,WBEHMSID
          MOVE      SP70,WBEHSPAR
.
          PACK      KEY23,WBEHARID,WBEHRPTC,SP70
          CALL      RAWBEEH1
          IF        OVRCD=1
            CALL      WRWBEEH1
          ENDIF
.
. Re-write webeedaf
.
VALOEW50  PACK      KEY30,S2OEARID,S2OECNTR,SP70
          CALL      RSWBEED1
VALOEW55  CALL      RKWBEED1
          BRANCH    OVRCD,VALOEW60
.
          MATCH     S2OEARID,WBEDARID
          GOTO      VALOEW60 IF NOT EQUAL
.
          MATCH     S2OECNTR,WBEDRPTC
          GOTO      VALOEW60 IF NOT EQUAL
.
          PACK      SAVKEY30,WBEDARID,WBEDRPTC,WBEDCFEC,WBEDEXPC,SP70
.
          MOVE      WBEDARID,SVDEARID
          MOVE      WBEDRPTC,SVDERPTC
          MOVE      WBEDCFEC,SVDECFEC
          MOVE      WBEDEXPC,SVDEEXPC
          MOVE      WBEDCFET,SVDECFET
          MOVE      WBEDCTID,SVDECTID
          MOVE      WBEDMSID,SVDEMSID
.
          PACK      KEY30,WBEDARID,WBEDRPTC,WBEDCFEC,WBEDEXPC,SP70
          CALL      DEWBEED1
.
          MOVE      WBOCARID,WBEDARID
          MOVE      WBOCCNTR,WBEDRPTC
          MOVE      SVDECFEC,WBEDCFEC
          MOVE      SVDEEXPC,WBEDEXPC
          MOVE      SVDECFET,WBEDCFET
          MOVE      SVDECTID,WBEDCTID
          MOVE      SVDEMSID,WBEDMSID
          MOVE      SP70,WBEDSPAR
.
          PACK      KEY30,WBEDARID,WBEDRPTC,WBEDCFEC,WBEDEXPC,SP70
          CALL      RAWBEED1
          IF        OVRCD=1
            CALL      WRWBEED1
          ENDIF
.
          PACK      KEY30,SAVKEY30,SP70
          CALL      RSWBEED1
.
          GOTO      VALOEW55
.
. Re-write websesaf
.
VALOEW60  PACK      KEY37,S2OEARID,S2OECNTR,SP70
          CALL      RSWBSES1
VALOEW65  CALL      RKWBSES1
          BRANCH    OVRCD,VALOEW70
.
          MATCH     S2OEARID,WBSSARID
          GOTO      VALOEW70 IF NOT EQUAL
.
          MATCH     S2OECNTR,WBSSRPTC
          GOTO      VALOEW70 IF NOT EQUAL
.
          PACK      SAVKEY37,WBSSARID,WBSSRPTC,WBSSSCOD,WBSSSRVC,SP70
.
          MOVE      WBSSARID,SVESARID
          MOVE      WBSSRPTC,SVESRPTC
          MOVE      WBSSSCOD,SVESSCOD
          MOVE      WBSSSRVC,SVESSRVC
          MOVE      WBSSSCTC,SVESSCTC
          MOVE      WBSSSVID,SVESSVID
          MOVE      WBSSCAMT,SVESCAMT
          MOVE      WBSSSDTE,SVESSDTE
          MOVE      WBSSFBAM,SVESFBAM
          MOVE      WBSSITEM,SVESITEM
          MOVE      WBSSMBAM,SVESMBAM
          MOVE      WBSSMEXC,SVESMEXC
          MOVE      WBSSSFAC,SVESSFAC
          MOVE      WBSSSFEE,SVESSFEE
          MOVE      WBSSTRID,SVESTRID
          MOVE      WBSSMSID,SVESMSID
.
          PACK      KEY37,WBSSARID,WBSSRPTC,WBSSSCOD,WBSSSRVC,SP70
          CALL      DEWBSES1
.
          MOVE      WBOCARID,WBSSARID
          MOVE      WBOCCNTR,WBSSRPTC
          MOVE      SVESSCOD,WBSSSCOD
          MOVE      SVESSRVC,WBSSSRVC
          MOVE      SVESSCTC,WBSSSCTC
          MOVE      SVESSVID,WBSSSVID
          MOVE      SVESCAMT,WBSSCAMT
          MOVE      SVESSDTE,WBSSSDTE
          MOVE      SVESFBAM,WBSSFBAM
          MOVE      SVESITEM,WBSSITEM
          MOVE      SVESMBAM,WBSSMBAM
          MOVE      SVESMEXC,WBSSMEXC
          MOVE      SVESSFAC,WBSSSFAC
          MOVE      SVESSFEE,WBSSSFEE
          MOVE      SVESTRID,WBSSTRID
          MOVE      SVESMSID,WBSSMSID
          MOVE      SP70,WBSSSPAR
.
          PACK      KEY37,WBSSARID,WBSSRPTC,WBSSSCOD,WBSSSRVC,SP70
          CALL      RAWBSES1
          IF        OVRCD=1
            CALL      WRWBSES1
          ENDIF
.
          PACK      KEY37,SAVKEY37,SP70
          CALL      RSWBSES1
.
          GOTO      VALOEW65
.
. Re-write websedaf
.
VALOEW70  PACK      KEY44,S2OEARID,S2OECNTR,SP70
          CALL      RSWBSED1
VALOEW75  CALL      RKWBSED1
          BRANCH    OVRCD,VALOEW80
.
          MATCH     S2OEARID,WBSDARID
          GOTO      VALOEW80 IF NOT EQUAL
.
          MATCH     S2OECNTR,WBSDRPTC
          GOTO      VALOEW80 IF NOT EQUAL
.
          PACK      SAVKEY44,WBSDARID,WBSDRPTC,WBSDSCOD:
                             WBSDSRVC,WBSDSFEC,WBSDSEXC,SP70
.
          MOVE      WBSDARID,SVSEARID
          MOVE      WBSDRPTC,SVSERPTC
          MOVE      WBSDSCOD,SVSESCOD
          MOVE      WBSDSRVC,SVSESRVC
          MOVE      WBSDSFEC,SVSESFEC
          MOVE      WBSDSEXC,SVSESEXC
          MOVE      WBSDSFET,SVSESFET
          MOVE      WBSDTRID,SVSETRID
          MOVE      WBSDMSID,SVSEMSID
.
          PACK      KEY44,WBSDARID,WBSDRPTC,WBSDSCOD:
                          WBSDSRVC,WBSDSFEC,WBSDSEXC,SP70
          CALL      DEWBSED1
.
          MOVE      WBOCARID,WBSDARID
          MOVE      WBOCCNTR,WBSDRPTC
          MOVE      SVSESCOD,WBSDSCOD
          MOVE      SVSESRVC,WBSDSRVC
          MOVE      SVSESFEC,WBSDSFEC
          MOVE      SVSESEXC,WBSDSEXC
          MOVE      SVSESFET,WBSDSFET
          MOVE      SVSETRID,WBSDTRID
          MOVE      SVSEMSID,WBSDMSID
          MOVE      SP70,WBSDSPAR
.
          PACK      KEY44,WBSDARID,WBSDRPTC,WBSDSCOD:
                          WBSDSRVC,WBSDSFEC,WBSDSEXC,SP70
          CALL      RAWBSED1
          IF        OVRCD=1
            CALL      WRWBSED1
          ENDIF
.
          PACK      KEY44,SAVKEY44,SP70
          CALL      RSWBSED1
.
          GOTO      VALOEW75
.
VALOEW80  PACK      KEY29,S2OEARID,S2OECNTR,SP70
          CALL      RSWBERC1
VALOEW85  CALL      RKWBERC1
          BRANCH    OVRCD,VALOEW88
.
          MATCH     S2OEARID,WBECARID
          GOTO      VALOEW88 IF NOT EQUAL
.
          MATCH     S2OECNTR,WBECRPTC
          GOTO      VALOEW88 IF NOT EQUAL
.
          PACK      SAVKEY29,WBECARID,WBECRPTC,WBECTYPE:
                             WBECLINE,SP70
.
          MOVE      WBECARID,SVRCARID
          MOVE      WBECRPTC,SVRCRPTC
          MOVE      WBECTYPE,SVRCTYPE
          MOVE      WBECLINE,SVRCLINE
          MOVE      WBECDATA,SVRCDATA
          MOVE      WBECUDAT,SVRCUDAT
          MOVE      WBECUTIM,SVRCUTIM
          MOVE      WBECTRID,SVRCTRID
          MOVE      WBECMSID,SVRCMSID
.
          PACK      KEY29,WBECARID,WBECRPTC,WBECTYPE:
                          WBECLINE,SP70
          CALL      DEWBERC1
.
          MOVE      WBOCARID,WBECARID
          MOVE      WBOCCNTR,WBECRPTC
          MOVE      SVRCTYPE,WBECTYPE
          MOVE      SVRCLINE,WBECLINE
          MOVE      SVRCDATA,WBECDATA
          MOVE      SVRCUDAT,WBECUDAT
          MOVE      SVRCUTIM,WBECUTIM
          MOVE      SVRCTRID,WBECTRID
          MOVE      SVRCMSID,WBECMSID
          MOVE      SP70,WBECSPAR
.
          PACK      KEY29,WBECARID,WBECRPTC,WBECTYPE:
                          WBECLINE,SP70
          CALL      RAWBERC1
          IF        OVRCD=1
            CALL      WRWBERC1
          ENDIF
.
          PACK      KEY29,SAVKEY29,SP70
          CALL      RSWBERC1
.
          GOTO      VALOEW85
.
VALOEW88  PACK      KEY8,VALDELGN,SP70
          CALL      RDWBELF1
          BRANCH    OVRCD,VALOEW91
.
          MOVE      VALDCODE,WBEFVISN
.
          MATCH     SP70,VALDCODE
          IF        @EQUAL
            MOVE      SP70,WBEFCNTR
          ELSE
            MOVE      SVOECNTR,WBEFCNTR
            MOVE      ONE,WBEFOECC
.
            PACK      KEY8,WBEFVISN,SP70
            CALL      RDPMVX11
            IF        OVRCD=0
              MOVE      ONE,PMVXPOEC
              CALL      UPPMVX11
            ENDIF
.
          ENDIF
.
          CALL      UPWBELF1
.
VALOEW90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALOEW98
.
VALOEW91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Eligibility Number - ":
                             VALDELGN,"</RETURN_VALUE>"
          GOTO      VALOEW98
.
VALOEW92  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Eligibility Record.":
                             "</RETURN_VALUE>"
          GOTO      VALOEW98
.
VALOEW98  CALL      XMLEND00
VALOEW99  RETURN
.
.------------------------------------------------------------
. Remote script to update additional diagnosis
.------------------------------------------------------------
ADDDIA00  CALL      XMLHED00
          BRANCH    EXIT,ADDDIA99
.
ADDDIA10  PACK      KEY8,ADMISSNO
          CALL      RDEMVIS1
          IF        OVRCD<>1
            CALL      WEDV0000                     * EDWARD visit alteration
          ENDIF
.
          UNPACK    VALDCODE,DIM10,DIM3
          PACK      DIM10,DIM10,SP70
          PACK      DIM3,DIM3,SP70
.
          PACK      VALDDESC,VALDDESC,SP70,SP70
.
          MATCH     SP70,DIM10             * Delete Primary Diagnosis
          IF        @EQUAL
            CALL      DELADD00
            GOTO      ADDDIA80
          ENDIF
.
          PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,DIM3,SP70       * Update the
          CALL      RDEMVCD1                                      * primary diag
          IF        OVRCD=0
            MOVE      DIM10,EMVCMNCD
            MOVE      VALDDESC,EMVCFTXT
            CALL      UPEMVCD1
            GOTO      ADDDIA80
          ELSE
            CALL      ADDADD00
            GOTO      ADDDIA80
          ENDIF
.
ADDDIA80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "</RETURN_VALUE>"
          GOTO      ADDDIA98
.
ADDDIA98  CALL      XMLEND00
ADDDIA99  RETURN
+
.------------------------------------------------------------
. Delete Additional Diagnosis from emrvcdaf
.------------------------------------------------------------
DELADD00  PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,DIM3,SP70
          CALL      RDEMVCD1
          IF        OVRCD=0
            MATCH     "000",EMVCSEQU
            GOTO      DELADD99 IF EQUAL
.
            CALL      DEEMVCD1
.
            CALL      DAEC0000         * Update delete flag for AECC Class rec.
          ENDIF
.
DELADD99  RETURN
+
.-----------------------------------------------------------------
.         Update deleted fields for any AECC Class (EMVCTYPE=006)
.-----------------------------------------------------------------
DAEC0000  MOVE      "006",KEY3
          PACK      KEY14,ADMISSNO,KEY3,SP70
          CALL      RSEMVCD1
DAEC1000  CALL      RKEMVCD1
          BRANCH    OVRCD,DAEC9999
.
          MATCH     ADMISSNO,EMVCVIST
          GOTO      DAEC9999 IF NOT EQUAL     * different visit
.
          MATCH     KEY3,EMVCTYPE
          GOTO      DAEC9999 IF NOT EQUAL
.
          MOVE      WBSEUID,EMVCWUSR
          CALL      IBACLOCK
          PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
          REP       " 0",EMVCLUDT
          PACK      EMVCLUTM,CTIMEIS          * last update time
          MOVE      "1",EMVCDELE              * deleted flag
          CALL      UPEMVCD1
          GOTO      DAEC1000
.
DAEC9999  RETURN
+
.------------------------------------------------------------
.  Add an additional diagnosis code
.------------------------------------------------------------
ADDADD00  PACK      KEY5,CATwl,ZERO,ZERO,FIVE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,ADDADD99
.
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,ADDADD99
.
          MOVE      ONE,SEQFLAG              * Additional Diagnosis
.
ADDADD05  MOVE      ONE,COUNTER
          PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,Z70
          CALL      RSEMVCD1
ADDADD10  CALL      RPEMVCD1
          BRANCH    OVRCD,ADDADD20
          MATCH     ADMISSNO,EMVCVIST
          GOTO      ADDADD20 IF NOT EQUAL
.
          MOVE      EMVCUNIQ,COUNTER
          ADD       ONE,COUNTER
.
ADDADD20  CALL      CLRVCD00                  * Clear all the file variables
.
          MOVE      WBSEUID,EMVCWUSR
          MOVE      WBSEUID,EMVCCUID          * user id created
.
          CALL      IBACLOCK
          PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
          REP       " 0",EMVCLUDT
          PACK      EMVCLUTM,CTIMEIS          * last update time
          PACK      EMVCCDAT,CCC,CYY,CMM,CDD  * date created
          REP       " 0",EMVCCDAT
          PACK      EMVCCTIM,CTIMEIS          * time created
          MOVE      SP70,EMVCSUBN
          MOVE      SP70,EMVCEDAD
.
          CALL      VCDSAV00      * Moves input variables to file variables
          PACK      KEY14,EMVCVIST,EMVCTYPE,EMVCUNIQ,SP70
          CALL      WREMVCD1      * Writes away the data
          CALL      SETEXT00      * Writes to EMR Text File for Emergency pat.
.
          MOVE      "EMRD",UPDTTYPE
          MATCH     "1",UPDFLAG1
          IF        !@EQUAL
            PACK      KEY8,ADMISSNO,SP70
            CALL      RDEMVIS1
            BRANCH    OVRCD,ADDADD99
.
            CALL      WRTHIS00
            PROC      EMRDRCHR          * Update Dr Billing complete
          ENDIF
.
ADDADD99  RETURN
.
.-----------------------------------------------------------------
. Delete Senior/Other Doctor Seen
.-----------------------------------------------------------------
DLOSEE00  CALL      XMLHED00
          BRANCH    EXIT,DLOSEE99
.
          PACK      KEY8,ADMISSNO,SP70
DLOSEE05  CALL      RLEMVIS1
          BRANCH    OVRCD,DLOSEE90,DLOSEE91
.
          MATCH     ADMISSNO,DEMVIADM
          GOTO      DLOSEE90 IF NOT EQUAL
.
          COMPARE   FOUR,EMVISTAT
          GOTO      DLOSEE90 IF EQUAL
.
          CALL      OTHHIS00                     * Fix history and allocate
          BRANCH    EXIT,DLOSEE92,DLOSEE93       * the previous doctor
.
          CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
.
DLOSEE80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Senior/Other Doctor Seen Updated":
                             "</RETURN_VALUE>"
          GOTO      DLOSEE98
.
DLOSEE90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      DLOSEE98
.
DLOSEE91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      DLOSEE98
.
DLOSEE92  CALL      ULEMVIS1
          IF        SUPRVISR=1
            WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                               "Invalid Senior/Other doctor deletion - ":
                               "Can only delete first doctor.":
                               "</RETURN_VALUE>"
          ELSE
            WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                               "Invalid Senior/Other doctor deletion - ":
                               "Doctor History Exists":
                               "</RETURN_VALUE>"
          ENDIF
          GOTO      DLOSEE98
.
DLOSEE93  CALL      ULEMVIS1
          WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid last doctor deletion - Can't delete the ":
                             "last doctor. ":
                             "Please use delete first doctor functionality.":
                             "</RETURN_VALUE>"
          GOTO      DLOSEE98
.
DLOSEE98  CALL      XMLEND00
DLOSEE99  RETURN
.
.--------------------------------------------------------------------------
. Allow deletion of a doctor if the doctor allocation is the
. last history file record. Then loop back to find the new doctor
. and delete the history for the old doctor
.
. Allow the deletion of the first doctor regardless of history record
. if they have NOT added a procedure or diagnosis
.
. Allow supervisor deletion of the first doctor regardless of history record
. even if they have added a procedure or diagnosis
.--------------------------------------------------------------------------
OTHHIS00  MOVE      SP70,NEWDOCTO      * New doctor to allocate to emrvisaf
          MOVE      SP70,NEWDOCDT      * New doctor date to allocate to emrvisaf
          MOVE      SP70,NEWDOCTM      * New doctor time to allocate to emrvisaf
          MOVE      SP70,OLDDOCTO      * Deleted doctor
          MOVE      SP70,OLDDOCDT      * Deleted doctor date
          MOVE      SP70,OLDDOCTM      * Deleted doctor time

          MOVE      SP70,SAVKEY22      * Save position to delete history
          MOVE      ONE,FIRSTFLG       * set first doctor indicator to true
          MOVE      ZERO,EXIT
.
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
OTHHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,OTHHIS40
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      OTHHIS95 IF NOT EQUAL
.
          MATCH     UPDTTYPE,EMHIUPT
          GOTO      OTHHIS10 IF NOT EQUAL
.
.         Check for supervisor delete
.
OTHHIS15  COMPARE   ONE,SUPRVISR
          GOTO      OTHHIS30 IF NOT EQUAL
.
.         Supervisor doctor delete
.
          PACK      SAVKEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70  * Save key for delete
          MOVE      EMHIODCD,OLDDOCTO        * Deleted doctor
          MOVE      EMHIODSD,OLDDOCDT        * Deleted doctor date
          MOVE      EMHIODST,OLDDOCTM        * Deleted doctor time
.
OTHHIS20  CALL      RKEMHIS1
          BRANCH    OVRCD,OTHHIS60
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      OTHHIS60 IF NOT EQUAL
.
          MATCH     UPDTTYPE,EMHIUPT
          GOTO      OTHHIS20 IF NOT EQUAL
.
          MOVE      ZERO,FIRSTFLG             * not a first doctor
          GOTO      OTHHIS95
.
.         Non-supervisor doctor delete
.
OTHHIS30  CALL      RKEMHIS1
          BRANCH    OVRCD,OTHHIS40
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      OTHHIS40 IF NOT EQUAL
.
          MATCH     UPDTTYPE,EMHIUPT
          GOTO      OTHHIS30 IF NOT EQUAL
.
          MOVE      ZERO,FIRSTFLG             * not a first doctor
.
OTHHIS40  IF        DELTLAST=1
            IF        FIRSTFLG=1
              MOVE      TWO,EXIT              * Delete last doctor not allow
              GOTO      OTHHIS99              * to delete the first doctor
            ENDIF
          ENDIF
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
OTHHIS45  CALL      RPEMHIS1
          BRANCH    OVRCD,OTHHIS95
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      OTHHIS95 IF NOT EQUAL
.
.         First doctor cannot be deleted if procedure or Diagnosis
.         has been added
.
          COMPARE   ONE,FIRSTFLG
          IF        @EQUAL
            MATCH     "EMRP",EMHIUPT          * EMR Procedure
            GOTO      OTHHIS95 IF EQUAL
.
            MATCH     "EMRD",EMHIUPT          * EMR Diagnosis
            GOTO      OTHHIS95 IF EQUAL
.
            MATCH     UPDTTYPE,EMHIUPT         * when reached original record
            GOTO      OTHHIS50 IF EQUAL
.
            GOTO      OTHHIS45                * Check previous record
          ENDIF
. 
. Ignore Management notes
.
OTHHIS46  MATCH     "MGNOT",EMHIUPT
          GOTO      OTHHIS45 IF EQUAL
.
.         Other doctor can only be deleted if nothing has been added yet.
.         Allow delete of last doctor regardless of last history record if
.         using the supervisor delete last doctor.
.
OTHHIS48  IF        DELTLAST=1
            MATCH     UPDTTYPE,EMHIUPT       * Loop backwards to find doctor
            GOTO      OTHHIS45 IF NOT EQUAL  * allocation history record
          ELSE
            MATCH     UPDTTYPE,EMHIUPT
            GOTO      OTHHIS95 IF NOT EQUAL
          ENDIF
.
OTHHIS50  PACK      SAVKEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70  * Save key for delete
          MOVE      EMHIODCD,OLDDOCTO        * Deleted doctor
          MOVE      EMHIODSD,OLDDOCDT        * Deleted doctor date
          MOVE      EMHIODST,OLDDOCTM        * Deleted doctor time
.
          CALL      RPEMHIS1
          BRANCH    OVRCD,OTHHIS95
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      OTHHIS95 IF NOT EQUAL
.
          MOVE      EMHIODCD,NEWDOCTO        * This will be the new doctor
          MOVE      EMHIODSD,NEWDOCDT        * This will be the new doctor date
          MOVE      EMHIODST,NEWDOCTM        * This will be the new doctor time
.
          IF        FIRSTFLG=1
            MOVE      SP70,NEWDOCTO 
            MOVE      SP70,NEWDOCDT 
            MOVE      SP70,NEWDOCTM 
          ENDIF
.
OTHHIS60  MOVE      SAVKEY22,KEY22          * Remove doctor allocation record
          IF        EMCNDDTM=1 & FIRSTFLG=1
            CALL      RDEMHIS1
          ENDIF
.
.         Update 'obspcoaf' if this is a 'Delete Last Doctor Allocated'
.
          COMPARE   ONE,DELTLAST
          GOTO      OTHHIS64 IF NOT EQUAL
.
          MATCH     "1",EMCNUDHF            * Using the Doctor Handover Form?
          GOTO      OTHHIS64 IF NOT EQUAL
.
          PACK      KEY28,EMHIVIS,Z70
          CALL      RSOBPC2
OTHHIS61  CALL      RPOBPC2
          BRANCH    OVRCD,OTHHIS64
.
          MATCH     OLDDOCDT,OBPCINDT
          GOTO      OTHHIS61 IF NOT EQUAL
.
          UNPACK    OBPCINTM,DIM2,DIM1,KEY2,DIM1,D2
          PACK      KEY6,DIM2,KEY2,D2
          MATCH     OLDDOCTM,KEY6
          GOTO      OTHHIS61 IF NOT EQUAL
.
. Now we loop through category 'wo' and use the first code with a value
. of 'D' in indicator 1 as the reason for delete.
.
          MOVE      "wo",DIM2
          PACK      KEY5,DIM2,SP70
          CALL      RDSCODE1
OTHHIS62  CALL      RDKCODE1
          BRANCH    OVRCD,OTHHIS63
.
          MATCH     "wo",TCODE
          GOTO      OTHHIS63 IF NOT EQUAL
.
          MATCH     "D",TCINDC1
          GOTO      OTHHIS62 IF NOT EQUAL
.
          MOVE      ACODE,OBPCUDF1
.
OTHHIS63  MOVE      ONE,OBPCMDEL
          CALL      UPOBPC2
.
OTHHIS64  CALL      DEEMHIS1
.
OTHHIS65  IF        DELTLAST=1
            CALL      DOCHIS00              * Change doctor in history records
            GOTO      OTHHIS90
          ENDIF

          IF        FIRSTFLG=1
            CALL      DODHIS00
          ENDIF
.
OTHHIS90  MOVE      NEWDOCTO,EMVIUR04
          UNPACK    NEWDOCTM,HOUR,MIN,SEC
          PACK      TESTTIME,HOUR,COLON,MIN,COLON,SEC
          MATCH     SP70,PTCNNSSI           * no edward source sys/sjog
          IF        @EQUAL
            MOVE      NEWDOCDT,EMVIUD09
            MOVE      TESTTIME,EMVIUT09
          ELSE
            MATCH     ZERO20,PTCNNSSI      * no edward source sys/sjog
            IF        @EQUAL 
              MOVE      NEWDOCDT,EMVIUD09
              MOVE      TESTTIME,EMVIUT09
            ELSE
              MOVE      NEWDOCDT,EMVIUD10
              MOVE      TESTTIME,EMVIUT10
            ENDIF
          ENDIF
.
          MATCH     SP70,NEWDOCTO           * Will the new doctor be blank
          GOTO      OTHHIS99 IF NOT EQUAL
.
          MOVE      SP70,EMVIUR04           * Clear date/time if no doctor
          MATCH     SP70,PTCNNSSI           * no edward source sys/sjog
          IF        @EQUAL
            MOVE      SP70,EMVIUD09
            MOVE      SP70,EMVIUT09
          ELSE
            MATCH     ZERO20,PTCNNSSI      * no edward source sys/sjog
            IF        @EQUAL
              MOVE      SP70,EMVIUD09
              MOVE      SP70,EMVIUT09
            ELSE
              MOVE      SP70,EMVIUD10
              MOVE      SP70,EMVIUT10
            ENDIF
          ENDIF 
          GOTO      OTHHIS99
.
OTHHIS95  MOVE      ONE,EXIT                * Delete Not Allowed
.
OTHHIS99  RETURN
+
.---------------------------------------------------------------------------
. Update other/senior doctor in history records after deleting
. the last doctor allocation
.---------------------------------------------------------------------------
DOCHIS00  MOVE      SAVKEY22,KEY22
          CALL      RSEMHIS1
DOCHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,DOCHIS99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      DOCHIS99 IF NOT EQUAL
.
          MOVE      SP70,EMHIODCD
          MOVE      SP70,EMHIODSD
          MOVE      SP70,EMHIODST
.
          CALL      UPEMHIS1
.
          GOTO      DOCHIS10
.
DOCHIS99  RETURN
.
.---------------------------------------------------------------------------
. Clear other/senior  doctor,date and time in history records after deleting
. a first other/senior doctor allocation
.---------------------------------------------------------------------------
DODHIS00  MOVE      SAVKEY22,KEY22
          CALL      RSEMHIS1
DODHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,DODHIS99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      DODHIS99 IF NOT EQUAL
.
          MOVE      SP70,EMHIODCD
          MOVE      SP70,EMHIODSD
          MOVE      SP70,EMHIODST
.
          CALL      UPEMHIS1
.
          GOTO      DODHIS10
.
DODHIS99  RETURN
.
.------------------------------------------------------------
. Update Other Doctor Seen date/time
. ADMISSNO = Admission number
. DOCTCODE = Other doctor code 
. DOCTDATE = New other doctor seen date
. DOCTTIME = New other doctor seen time
.-----------------------------------------------------------
ODCDAT00  CALL      XMLHED00
          BRANCH    EXIT,ODCDAT99
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
ODCDAT20  CALL      RPEMHIS1
          BRANCH    OVRCD,ODCDAT98
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      ODCDAT98 IF NOT EQUAL
.
          MATCH     "OTDOC",EMHIUPT     
          GOTO      ODCDAT20 IF NOT EQUAL
.
          MATCH     DOCTCODE,EMHIODCD
          GOTO      ODCDAT20 IF NOT EQUAL
.
          MOVE      DOCTDATE,EMHIODSD
          UNPACK    DOCTTIME,HOUR,COLON,MIN,COLON,SEC
          PACK      EMHIODST,HOUR,MIN,SEC
.
          CALL      UPEMHIS1 
.
ODCDAT80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Other Doctor Date/Time Seen Updated":
                             "</RETURN_VALUE>"
          GOTO      ODCDAT98
.
ODCDAT98  CALL      XMLEND00
ODCDAT99  RETURN
.
.-----------------------------------------------------------------
. Delete Initial Acessor Seen
.-----------------------------------------------------------------
DLISEE00  CALL      XMLHED00
          BRANCH    EXIT,DLISEE99
.
          PACK      KEY8,ADMISSNO,SP70
DLISEE05  CALL      RLEMVIS1
          BRANCH    OVRCD,DLISEE90,DLISEE91
.
          MATCH     ADMISSNO,DEMVIADM
          GOTO      DLISEE90 IF NOT EQUAL
.
          COMPARE   FOUR,EMVISTAT
          GOTO      DLISEE90 IF EQUAL
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
DLISEE10  CALL      RPEMHIS1
          BRANCH    OVRCD,DLISEE98
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      DLISEE98 IF NOT EQUAL
.
          MATCH     UPDTTYPE,EMHIUPT
          GOTO      DLISEE10 IF NOT EQUAL
.
          PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
          CALL      DEEMHIS1
.
DLISEE80  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             "Initail Assessor Seen Updated":
                             "</RETURN_VALUE>"
          GOTO      DLISEE98
.
DLISEE90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Invalid Patient Visit - ":
                             KEY8,"</RETURN_VALUE>"
          GOTO      DLISEE98
.
DLISEE91  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=ERROR>":
                             "Patient Locked by another user.Try again":
                             "</RETURN_VALUE>"
          GOTO      DLISEE98
.
DLISEE98  CALL      XMLEND00
DLISEE99  RETURN
+
.-----------------------------------------------------------------
. Validate the patients current location has not changed - locacode
.-----------------------------------------------------------------
VALCLC00  PACK      ADMISSNO,ADMISSNO,SP70
.
          CALL      XMLHED00
          BRANCH    EXIT,VALCLC99
.
VALCLC10  MATCH     SP70,ADMISSNO
          GOTO      VALCLC98 IF EQUAL
          GOTO      VALCLC98 IF EOS
.
VALCLC25  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,VALCLC98
.
          MATCH     LOCACODE,EMVILOCN    
          GOTO      VALCLC98 IF EQUAL
.
VALCLC90  WRITE     HTMLFILE;"<RETURN_VALUE TYPE=SIMPLE>":
                             ONE:
                             "</RETURN_VALUE>"
.
          GOTO      VALCLC98
.
VALCLC98  CALL      XMLEND00
VALCLC99  RETURN
+
.-------------------------------------------------------------------
.
          INC       AAEDE1IO/INC
          INC       BOKRQ1IO/INC
          INC       BOKRAUIO/INC
          INC       EMRCHAIO/INC
          INC       EMRDCMTX
          INC       EMRDOCIO/INC
          INC       EMRKEDIO/INC
          INC       EMRHISIO/INC
          INC       EMRVISIO/INC
          INC       EMRSITIO/INC
          INC       EMRICDIO/INC
          INC       EMRLOCIO/INC
          INC       NHIMASIO/INC
          INC       PATDGWIO/INC
          INC       PATDO1IO/INC
          INC       PATFX1IO/INC
          INC       PMSDUNIO/INC
          INC       PMSELFIO/INC
          INC       PMSEEHIO/INC
          INC       PMSEEDIO/INC
          INC       PMSERCIO/INC
          INC       PMSSEDIO/INC
          INC       PMSSESIO/INC
          INC       PMSOECIO/INC
          INC       PATCERIO/INC
          INC       PATECDIO/INC
          INC       PATECOIO/INC
          INC       PATFN1IO/INC
          INC       PATITMIO/INC
          INC       PATICOIO/INC
          INC       PATICDIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATPCPIO/INC
          INC       PATDSCIO/INC
          INC       PMSADWIO/INC
          INC       PMSVX1IO/INC
          INC       PATVADIO/INC
          INC       PATVISIO/INC
          INC       ALLCCTIO/INC
          INC       ALLREFIO/INC
          INC       ALLSERIO/INC
          INC       PMSBRQIO/INC
          INC       PMSHCPIO/INC
          INC       PMSPX2IO/INC
          INC       OUTCLIIO/INC            * Valid Clinic Id
          INC       OUTSITIO/INC
          INC       OPRNURIO/INC
          INC       OPRDEAIO/INC
          INC       OPREXPIO/INC
          INC       OPRTHIIO/INC
          INC       PATNIDIO/INC
          INC       PATTRNIO/INC
          INC       WATVWLIO/INC
          INC       WATPROIO/INC
          INC       PATWR1IO/INC
          INC       VISCMTIO/INC
          INC       VISXDCIO/INC
          INC       EMRDCMIO/INC            * Diagnosis comment file
          INC       EMRLCKIO/INC
          INC       CCIEX7IO/INC
          INC       EMREXPIO/INC
          INC       EMRMTXIO/INC
          INC       EMRVCDIO/INC
          INC       OBSPCOIO/INC            * Observation Patient Correspondence
          INC       IBAALVIO/INC
          INC       WEBOECIO/INC
          INC       WEBOESIO/INC
          INC       WEBELFIO/INC
          INC       WEBEEHIO/INC
          INC       WEBEEDIO/INC
          INC       WEBERCIO/INC
          INC       WEBSESIO/INC
          INC       WEBSEDIO/INC
          INC       CLBOKRAU
          INC       CLPMSOEC
          INC       CLVISXDC
          INC       CLWEBOEC
          INC       CLWEBOES
          INC       CLWEBELF
          INC       CLWEBEEH
          INC       CLWEBEED
          INC       CLWEBERC
          INC       CLWEBSES
          INC       CLWEBSED
          INC       EMRDRCHR
          INC       PATDOCCD
          INC       CALCAGE 
          INC       DGCLICEC
          INC       NAMSTRCD
          INC       PMIGTNID
          INC       IBAWEBCD
.
