.******************************************************************************
.*                                                                            *
.*                        P R O G R A M   S U M M A R Y                       *
.*                        -------------   -------------                       *
.*                                                                            *
.*     PROGRAM NAME:     IBAEMR56                                             *
.*                                                                            *
.*     FUNCTION:         EMERGENCY DEPARTMENT TRANSMISSIONS (NSW)             *
.*                                                                            *
.*     DATE WRITTEN:     23/03/2009                                           *
.*                                                                            *
.*     AUTHOR:           PETER VELA                                           *
.*                                                                            *
.*     MODIFICATIONS:                                                         *
.*                                                                            *
.******************************************************************************
.* V12.00.01 21/05/2025 Thanh T         TSK 0955096                           *
.*           Removed SAVADMN since it is not used                             *
.******************************************************************************
.*       V11.05.01  20/03/2025  Davin          TSK 0956210                    *
.*                  Add ICD10 Ed.13 - Go-live Date PTCNGDX3 (Sect.130 Pos.86) *
.*       V11.02.01  31/03/2022  Davin          TSK 0917793                    *
.*                  Add ICD10 Ed.12 - Go-live Date PTCNGDX2 (Sect.128 Pos.231)*
.******************************************************************************
.*       V11.00.01  10/03/2020  Jill Parkinson Task 0879163                   *
.*                  Added include SEXDSCIO                                    *
.*       V10.13.01  05/12/2018  Don Nguyen       TSK 0838558                  *
.*                  Deleted temp file (WORK1) on program exit                 *
.*       V10.10.02  23/03/2017  Richa Phogat   TSK 0832066                    *
.*                  Changed DVA Card colour to be collected from              *
.*                  PMCDDVAC.PMSPX2FD instead of PMPXDVAC.PMIMA1FD            *
.*       V10.10.01  17/03/2017  Davin          TSK 0833093     HDP 2017/2018  *
.*                  Add ICD10 Ed.10 - Go-live Date PTCNGDVX (Sect.110 Pos.85) *
.******************************************************************************
.*       V10.06.01  17/03/2015  Davin         CAR 311669      HDP 2015/16     *
.*                  Add PTCNGDV9 for ICD10 Ed.9 Go-live Date (Sect.110 Pos.77)*
.******************************************************************************
.*       V10.03.03  23/04/2013  Davin         CAR 284420      HDP 2013/14     *
.*                  Add PTCNGDV8 for ICD10 Ed.8 Go-live Date (Sect.110 Pos.69)*
.*       V10.03.02  08/10/2012 Peter Vela        CAR 269223                   *
.*                  Changed primary/additional diagnosis to EMICVEMD          *
.*        V10.03.01 17/11/2011  Mike Laming     CAR 240184                    *
.*                  Changes to IBAPOSTF Post Code table - added State to Keys *
.*       V10.00.02  14/04/2010 Steve Armstrong   CAR 219933                   *
.*                  Recompiled for changes to EMRVCDFD                        *
.*       V10.00.01  07/04/2010  Mike Laming   CAR 219246      HDP 2010        *
.*                  Add PTCNGDV7 for ICD10 Ed.7 Go-live Date (Sect.110 Pos.61)*
.******************************************************************************
.*        V9.12.06  04/11/2009  Peter Vela     CAR 209219                     *
.*                  Fixed Compliant Status                                    *
.*                  Fixed Departure Status Validations                        *
.*        V9.12.05  04/11/2009  Peter Vela     CAR 209219 207665              *
.*                  Fixed Medicare Number                                     *
.*                  Fixed Arrival Time / Triage Time validation               *
.*        V9.12.04  02/06/2009  Peter Vela     CAR 200059                     *
.*                  Checked for Doctor Code in SEENDT00                       *
.*        V9.12.03  22/06/2009  Peter Vela     CAR 199103                     *
.*                  Changed filename format                                   *
.*        V9.12.02  19/05/2009  Ebon Clements  CAR 196896                     *
.*                  Fixed zero U/R missing pmi and visit extn record message  *
.*        V9.12.01  15/05/2009  Peter Vela CAR 189171                         *
.*                  Fixed ED1170 and ED1180                                   *
.*        V9.11.01  29/04/2009  Peter Vela CAR 189171                         *
.*                  Changed XPDSTA to extract from Cat ED HDP Equivalent Pos 3* 
.*        V9.11.00  23/03/2009  Peter Vela CAR 189171                         *
.*                  Created program.                                          *
.******************************************************************************
.
          INC       STD001FD
.
          INC       IBACONFD/INC
          INC       IBAPOSFD/INC           * I-54733
          INC       OPRDEAFD/INC
          INC       EMRHISFD/INC
          INC       EMRICDFD/INC
          INC       EMRVCDFD/INC
          INC       EMRVISFD/INC
          INC       PATCHCFD/INC
          INC       PATCONFD/INC
          INC       PATCODFD/INC
          INC       PATCT1FD/INC
          INC       PATDO1FD/INC
          INC       PATDSCFD/INC
          INC       PATDADFD/INC           * I-54733
          INC       PATVADFD/INC
          INC       PATECDFD/INC
          INC       PATECOFD/INC
          INC       PATFN1FD/INC
          INC       PATICUFD/INC
          INC       PATICDFD/INC
          INC       PATICOFD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PATQRDFD/INC
          INC       PMSCCDFD/INC
          INC       PMSPX2FD/INC
          INC       PATPGRFD/INC
          INC       PATTRNFD/INC
          INC       PATWR1FD/INC
          INC       PATWVEFD/INC
          INC       PATVISFD/INC
          INC       PMSVX1FD/INC
          INC       MEHCONFD/INC
          INC       MEHLEGFD/INC
          INC       MEHVI1FD/INC
          INC       MEHDS1FD/INC
+
.
.
WORK1     FILE      ASCII, FIXED=824
.
.Header Record
.-------------
.Name     Type     Length      Start     Description
.----     ----     ------      -----     -----------
HIDENTIF  INIT     "####SSHEADER"  1         *Header Identifier
HESTBLSH  DIM      4            11         *Establishment Facility Code
HSTRTDTE  DIM      8            15         *Extracted Period Start Date YYYYMMDD
HEENDDTE  DIM      8            23         *Extracted Period End Date YYYYMMDD
HPERFDTE  DIM      8            31         *Date Extract Performed YYYYMMDD
HPERFTIM  DIM      4            39         *Time Extract Performed HHMM
HNORECEX  DIM      8            43         *Number of Records in file header inc
HEXTRTYP  INIT     "ED        " 51         *Extract Type
HEXTRVER  INIT     "ED2003V1"   61         *Extract Version
HSRCSYST  INIT     "webPAS         " 69    *Report Source System
HSRCVERS  INIT     "V9   "      84         *Report Source System Version
.HSFILLER  DIM      735          88         *Filler
.End of Record                  824
.
.Transmission file layout
.
.NAME     TYPE    LENGTH    START   DESCRIPTION
.----     ----    ------    -----   -----------
XHINDIC   DIM       4         1   * Hospital id (patconfd.cfileno)
XPINDIC   DIM      10         5   * Person Id Number (emrvisfd.emviurno)
XPERSNO   DIM      10        15   * Person Visit Id (emrvisfd.demviadm)
XPFNAME   DIM      80        25   * Patient first name (patma1fd.pgname)
XPSNAME   DIM      40        105  * Patient Last name (patma1fd.psname)
XPSEX     DIM       1        145  * Patient Gender (patma1fd.psex)
XPDOB     DIM       8        146  * Patient Date Of Birth (patma1fd.pbdate)
XPCONT    DIM       4        154  * Patient Country of Birth (patma1fd.pcont)
XPINDIG   DIM       1        158  * Patient Indigenous Stat (pmspx1fd.pmpxabrg)
XPLANG1   DIM       2        159  * Language spoken at home (pmspx1fd.pmpxlng1)
XPMSTAT   DIM       1        161  * Patient Marital Status (patma1fd.pmstat)
XPPADD1   DIM      26        162  * Street number of residence (patma1fd.padd1)
XPPADD2   DIM      40        188  * Street name of Address (patma1fd.padd2)
XPPADD3   DIM      46        228  * Suburb /Locality of Address (patma1fd.padd3)
XPPCODE   DIM       4        274  * Postcode of Suburb Locality (patma1fd.pcode)
XPINTR    DIM       1        278  * Interpreter 0 1 (pmsvx1fd.pmvxintr)
XPINSR    DIM       1        279  * Insurance Stat 1 - 3 & 9 (emrvisfd.emviinsr)
XPMODE    DIM       2        280  * Mode of Arrival 01 - 10 (emrvisfd.emvimode)
XPVTYPE   DIM       2        282  * Type of Visit (emrvisfd.emviuc13 CAT ee)
XPCOMP    DIM       1        284  * Compensable status 1 - 8 (emrvisfd.emvicomp)
XPAMBL    DIM       6        285  * Ambulance case number (emrvisfd.emviambl)
XPATIME   DIM       4        291  * Patient Arrival Time (emrvisfd.emvitime)
XPADATE   DIM       8        295  * Patient Arrival Date (emrvisfd.emvidate)
XPTTRTM   DIM       4        303  * Patient Triage Time (emrvisfd.emvitrtm)
XPTDATE   DIM       8        307  * Patient Triage Date (emrvisfd.emvitddt)
XPTRIG    DIM       1        315  * Patient Triage Category (emrvisfd.emvitrig)
XPDRTM    DIM       4        316  * Doctor Seen Time (emrvisfd.emvidrtm)
XPDRDT    DIM       8        320  * Doctor Seen Date (emrvisfd.emvidrdt)
XPNSTM    DIM       4        328  * Nurse Seen Time (emrvisfd.emvinstm)
XPNSDT    DIM       8        332  * Nurse Seen Date (emrvisfd.emvinsdt)
XPRDTM    DIM       4        340  * Departure Ready Time (emrvisfd.emviut01)
XPRDDT    DIM       8        344  * Departure Ready Date (emrvisfd.emviud01)
XPADTM    DIM       4        352  * Actual Departure Time (emrvisfd.emvidtim)
XPADDT    DIM       8        356  * Actual Departure Date (emrvisfd.emviddat)
XPDSTA    DIM       2        364  * Mode of Sep (emrvisfd.emvidsta)
XPREFTO   DIM       2        366  * Referred to on Dep (emrvisfd.emviuc11)
XPPDIAG   DIM       7        368  * Principal Diagnosis (emrvcdfd.emvcmncd)
XPDIAG1   DIM       7        375  * Additional Diagnosis (emrvcdfd.emvcmncd)
XPPPROC   DIM       8        382  * Principal Procedure (emrvcdfd.emvcmncd)
XPPROC1   DIM       8        390  * Additional Procedure 1 (emrvcdfd.emvcmncd)
XPPROC2   DIM       8        398  * Additional Procedure 2 (emrvcdfd.emvcmncd)
XPPROC3   DIM       8        406  * Additional Procedure 3 (emrvcdfd.emvcmncd) 
XPPROC4   DIM       8        414  * Additional Procedure 4 (emrvcdfd.emvcmncd) 
XPATAUD   DIM       1        422  * Number of times entry changed value 0 - 9
XPTTAUD   DIM       1        423  * Number of times entry changed value 0 - 9 
XPTCAUD   DIM       1        424  * Number of times entry changed value 0 - 9
XPTSAUD   DIM       1        425  * Number of times entry changed value 0 - 9
XPDTAUD   DIM       1        426  * Number of times entry changed value 0 - 9
XPADAUD   DIM       1        427  * Number of times entry changed value 0 - 9
XPCMSTA   DIM       1        428  * Compliant Status C, N, E
XPSTUPI   DIM      10        429  * State UPI Blank until connected to E index
XPAHUPI   DIM      10        439  * AHS UPI Blank until connected to E index
XPAMORN   DIM      10        449  * NSW AMO Reg Number (patdo1fd.ptdomreg)
XPAMOPN   DIM      15        459  * Doc Officil Medcre Prov Num (patdo1fd.dprov)
XPSTATE   DIM       3        474  * State of Res (ibapostf.ibpostat)
XPCOUNT   DIM       4        477  * Country of Res 
XPICDVR   DIM       8        481  * Version of Coding Used (controlf)
XPMCCD    DIM      11        489  * Medicare Number (patmx1fd.ptmxmccd) 
XPCNUM    DIM      15        500  * Centrelink Number (pmsccdfd.pmcdcnum)
XPDVACN   DIM       9        515  * DVA Card Number (patwvefd.vclmno)
XPDVACC   DIM       1        524  * DVA Card Colour (pmsccdfd.pmcddvac)
XPEDOB    DIM       1        525  * Estimated DOB (pmspx2fd.pmpxedob)
XPEDOBT   DIM       3        526  * Estimated DOB type
XPNOKGN   DIM      80        529  * Next of Kin First Name (patma1fd.pnkname)
XPNOKSN   DIM      40        609  * Next of Kin Surname
XPNOKTP   DIM      20        649  * Next of Kin Home Phone (patma1fd.pnktelp)
XPNOKTB   DIM      20        669  * Next of Kin Work Phone (patma1fd.pmktelb)
XPPTITL   DIM      12        689  * Patient Title (patma1fd.ptitl)
XPPNAMR   DIM      60        701  * Building Property name of Residence
XPDLFLG   DIM       1        761  * Delete Flag (emrvisfd.demvista=4)
XPSRCRF   DIM       2        762  * Source of Ref (emrvisfd.emvisrce)
XPPRES    DIM      60        764  * Presenting Problem (emrvisfd.emviuc20)
.
. End of record              824
.
.   Date Work Variables
.
ZPDOB     DIM       8
ZPADATE   DIM       8
ZPTDATE   DIM       8
ZPDRDT    DIM       8
ZPNSDT    DIM       8
ZPRDDT    DIM       8
ZPADDT    DIM       8
.
.   TIMEDIFF VARIABLES
.
FIRSTDAT  DIM       8
LASTDATE  DIM       8
FIRSTIME  DIM       4
LASTTIME  DIM       4
CALCTIME  FORM      6
..CDYSDAYS  FORM      6
..CDYSFDTE  DIM       8
..CDYSTDTE  DIM       8
..CDYSYEAR  FORM      2
FIRSTHR   DIM       2
FIRSTMIN  DIM       2
LASTHOUR  DIM       2
LASTMIN   DIM       2
HOUR1     FORM      6
HOUR2     FORM      6
MINUTE1   FORM      3
MINUTE2   FORM      3
TOTTIME1  FORM      4
TOTTIME2  FORM      4
.
.        WORK AREA
.
ADDDIACN  FORM      3
ADATE     FORM      8
ATIME     FORM      6
CARETYPE  DIM       3       * C-54733 used to be DIM2
CDYSYEAR  FORM      2
CATD      INIT      "D "
CATDD     INIT      "DD"
CATCC     INIT      "CC"
CODELS    INIT      "LS"
CODEAY    INIT      "AY"
CODECL    INIT      "CL"
CODERE    INIT      "RE"
CATU1     INIT      "U1"
CATU2     INIT      "U2"
CATU3     INIT      "U3"
CATU4     INIT      "U4"
CATU5     INIT      "U5"
CATU6     INIT      "U6"
CATU7     INIT      "U7"
CATU8     INIT      "U8"
CATU9     INIT      "U9"
CATP1     INIT      "P1"
CATP2     INIT      "P2"
CATP3     INIT      "P3"
CATP4     INIT      "P4"
CATP5     INIT      "P5"
CATP6     INIT      "P6"
CATVA     INIT      "VA"
CATVI     INIT      "VI"
CODEct    INIT      "ct"
CODEel    INIT      "el"
CODEee    INIT      "ee"
CODEec    INIT      "ec"
CODEFLG   FORM      1
CODED     DIM       3
CATT      INIT      "T "
DUMMY1    DIM       1
BEDTYPE   DIM       3
ROOMTYPE  DIM       3
CDYSDAYS  FORM      6
CALDAYS   FORM      6
NBRDAYS   FORM      6
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
CMDLINE   DIM       100
COUNT     FORM      3
CHRCOUNT  FORM      2                       * Character counter
DATE1     FORM      8
DATE2     FORM      8
DATE3     FORM      8
DAYCASE   FORM      1
DDRGCODE  DIM       4
DHOUR     DIM       2
DMIN      DIM       2
DSEC      DIM       2
DMDCCODE  DIM       4
DIM1A     DIM       1
DIM2A     DIM       2
DIM3      DIM       3
DIM3A     DIM       3
DIM4      DIM       4
DIM4A     DIM       4              * I-54733
DIM7      DIM       7
DIM8      DIM       8
DOYR2008  FORM      1
ERRFLG    FORM      5
ERRMSG    DIM       65
ENDDATE   DIM       8
FORM3     FORM      3
HOUR      DIM       2
MIN       DIM       2
SEC       DIM       2
SNTIME    FORM      6
SNDATE    FORM      8
HOSPID    DIM       3
HOSPNAME  DIM       50
JUSTNO    FORM      2          * Right justification amount
WDATE1    DIM       8
WDATE2    DIM       8
WORKHITH  FORM      3
LEAVNUM   FORM      2
LEAVDAY   FORM      4          * C-54733  (was FOMR 2)
LEAVDATE  DIM       8
LJUSCODE  DIM       80                      * Left justified code
MCOUNT    FORM      1
NOPATNTS  FORM      8
NURSEST   DIM       1          * Nursing Home status
OLDATYPE  DIM       3
OLDTHCS   DIM       3
RETNDATE  DIM       8
.
FORM6     FORM      6
FILENAME  DIM       8
FILENAM2  DIM       8
FROMDATE  DIM       8                  * From Date in CCYYMMDD format
PENDDATE  DIM       8
HENDDATE  DIM       8
PSYCFLG   FORM      1
PSTRDATE  DIM       8
HSTRDATE  DIM       8
FSTCODE   FORM      1
PSYCDAYS  FORM      5                  * C-54733( was FORM 3)
PDX       DIM       6                  * diagnosis return from PRDG0000
RJUSCODE  DIM       80                 * Right justified code
TPSYFLG   FORM      1
TODATE    DIM       8
STODATE   DIM       8
STRDATE   DIM       8
SP100     INIT      "                                                  ":
                    "                                                  "
Z20       INIT      "ZZZZZZZZZZZZZZZZZZZ"
.
PRGID     INIT      "IBAEMR56"
PRGNAM    INIT      "NSW Emergency Department Transmission"
VERSION   INIT      "V12.00.01"
+
.**********************************************************************
.*                           MAINLINE                                 *
.**********************************************************************
ML0000    CALL      INIT0000                * initialization and open files
ML1000    CALL      OPTN0000                * select options
          BRANCH    OPTION,ML2000,ML2000
          GOTO      ML9999
.
ML2000    CALL      KEYD0000                * Keyin ending date
          BRANCH    EXIT,ML1000
.
ML3000    CALL      FILE0000                * Keyin the filename
          BRANCH    EXIT,ML2000
.
ML4000    CALL      CONTQST                 * Ok to Continue (Y/N/C) ?
          BRANCH    CEXIT,ML5000,ML4000,ML1000
.                         Yes    No     Cancel
.
ML5000    CALL      PROC0000                * Processing emr discharged patients
          BRANCH    EXIT,ML1000
          CALL      ENDP0000                * End of processing
          CALL      MVEXT000
.
ML9999    PREP      WORK1,FILENAME
          CLOSE     WORK1,DELETE
          CHAIN     PGM
          STOP
+
.******************************************************************************
.*                                  INIT0000                                  *
.*                      Initialization routine                                *
.******************************************************************************
INIT0000  CALL      DISPHEAD
          CALL      IBACLOCK
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"ibapostf";
          OPEN      IBAPOST1,"ibapostf"
.
          DISPLAY   *P64:24,"emrhisaf";
          OPEN      EMRHISA1,"emrhisaf"
.
          DISPLAY   *P64:24,"emricdaf";
          OPEN      EMRICDA1,"emricdaf"
.
          DISPLAY   *P64:24,"emrvcdaf";
          OPEN      EMRVCDA1,"emrvcdaf"
.
          DISPLAY   *P64:24,"emrvisaf";
          OPEN      EMRVISA2,"emrvisaf"         
.
          DISPLAY   *P64:24,"patct1cf";
          OPEN      PATCT1C1,"patct1cf"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patchcof";
          OPEN      PATCHCO1,"patchcof"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P64:24,"patecdaf";
          OPEN      PATECDA2,"patecdaf"
.
          DISPLAY   *P64:24,"patecdaf";
          OPEN      PATECDA2,"patecdaf"
.
          DISPLAY   *P64:24,"patecoaf";
          OPEN      PATECOA2,"patecoaf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsccdaf";
          OPEN      PMSCCDA1,"pmsccdaf"
.
          DISPLAY   *P64:24,"patpgraf";
          OPEN      PATPGRA1,"patpgraf"
.
          DISPLAY   *P64:24,"oprdetaf";
          OPEN      OPRDETA1,"oprdetaf"
          OPEN      OPRDETA2,"oprdetaf"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P64:24,"patwvetf";
          OPEN      PATWVET1,"patwvetf"
.
          DISPLAY   *P64:24,"paticddf";
          CALL      OPICD1
.
          DISPLAY   *P64:24,"paticdof";
          CALL      OPICO1
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA2,"patvisaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"mehlegaf";
          OPEN      MEHLEGA1,"mehlegaf"
.
          DISPLAY   *P64:24,"mehvi1af";
          OPEN      MEHVI1A1,"mehvi1af"
.
          DISPLAY   *P64:24,"mehds1af";
          OPEN      MEHDS1A1,"mehds1af"
.
          DISPLAY   *P64:24,"patdadaf";
          OPEN      PATDADA1,"patdadaf"
.
          DISPLAY   *P64:24,"patvadaf";
          OPEN      PATVADA1,"patvadaf"
.
          DISPLAY   *P64:24,"patqrdaf";
          OPEN      PATQRDA1,"patqrdaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN;*37,CMOPRT,*54,CFILENO,*235,CMDISP
          READ      CONTROLF,TEN3;*213,CHCSCOD,*245,CHOSTYP
          READ      CONTROLF,TWENTY1;*45,PTCNDRSM
          READ      CONTROLF,SEVENTY9;*82,PTCNDSCI,*114,PTCNPPPT
          READ      CONTROLF,EIGHTY8;*237,PTCNEMPL,*239,PTCNOCCP,*241,PTCNCSTA:
                                     *242,PNSWRACE
          READ      CONTROLF,NINTY8;*85,PTCNPSOS
          READ      CONTROLF,SIXTY9;*69,MHCNUSE,*84,MHCEMPST
          READ      CONTROLF,HUND05;*206,PTCNFPST,*208,PTCNSORP
.
          MOVE      ZERO,ERRFLG
          MOVE      ZERO,PSYCFLG
.
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000                                  *
.*                      Main options                                          *
.******************************************************************************
OPTN0000  HLINE     *G37,2,57,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Processing the Run":
                    *P1:7,"Select Option : ";
.
OPTN1000  KEYIN     *P17:7,*EL,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9000 IF EQUAL
.
          MOVE      ZERO,EXIT
          BRANCH    OPTION,OPTN9999
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.******************************************************************************
.*                                  KDAT0000                                  *
.*                      Keyin ending date                                     *
.******************************************************************************
KEYD0000  MOVE      ZERO,DOYR2008
          DISPLAY   *P1:10,*EL,"Start Date : ":
                    *P1:12,*EL,"End   Date : ";
.
          MOVE      "10",CVERT
          MOVE      "15",CCOL
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          MOVE      ZERO,CHIGHLT
          MOVE      ZERO,CDEFDTE
          CALL      KEYDATE
          BRANCH    OVRCD,KEYD9500
          PACK      STRDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",STRDATE
.
          MOVE      "12",CVERT
          MOVE      "15",CCOL
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          MOVE      ZERO,CHIGHLT
          MOVE      ZERO,CDEFDTE
          CALL      KEYDATE
          BRANCH    OVRCD,KEYD9500
.
          PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ENDDATE
.
.        The new ending date should be greater than the Last Ending Date
.
KEYD6000  MOVE      ZERO,EXIT
          MATCH     ENDDATE,STRDATE
          GOTO      KEYD9999 IF LESS
          GOTO      KEYD9999 IF EQUAL
.
          UNPACK    STRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
     DISPLAY   *P1:24,*EL,*B,*V2LON,"End Date must be greater than or equal to":
                    "Start date ",CPCDATE,".  ";
          CALL      HITENTER
          GOTO      KEYD0000
.
KEYD9500  MOVE      ONE,EXIT
KEYD9999  RETURN
+
.******************************************************************************
.*                                  FILE0000              Called by: ML0000   *
.*                            Get Extract Filename                            *
.******************************************************************************
FILE0000  MOVE      "16",CVERT
          DISPLAY   *P1:CVERT,*EL,"Extract File Name : ";
.
FILE1000  MOVE      "ED_",KEY3
          UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
          PACK      FILENAME,KEY3,CDAY,CMON,SP10
          KEYIN     *P21:CVERT,*EL,*V2LON,*RV,FILENAME;
.
          ENDSET    FILENAME
          APPEND    SP8,FILENAME
          RESET     FILENAME
          UNPACK    FILENAME,DIM7
          PACK      FILENAM2,DIM7,TWO
.
          CMATCH    EXITCHAR,FILENAME
          GOTO      FILE9500 IF EQUAL       * Exit
.
          MATCH     SP8,FILENAME
          GOTO      FILE9500 IF EQUAL       * Exit
.
          STRIP     FILENAME
          SQUEEZE   FILENAME
          DISPLAY   *P21:CVERT,*EL,*V2LON,*+,FILENAME,".txt";
.
FILE1900  MOVE      ZERO,OVRCD     
          TRAP      OVERCOND IF IO
          OPEN      WORK1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,FILE9000          * File doesnt exist
          CLOSE     WORK1
.
FILE2000  KEYIN     *P1:24,*B,*EL,"An extraction file with this name":
                    " already exists. Overwrite it (",*V2LON,*DV,ANSY:
                    *HOFF,"/",*V2LON,*DV,ANSN,*HOFF,") ? ",*V2LON,ANS;
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      FILE9000 IF EQUAL       * Overwrite file
.
          MATCH     ANSN,ANS
          GOTO      FILE1000 IF EQUAL       * Keyin filename again
.
          BEEP
          GOTO      FILE2000
.
FILE9000  MOVE      ZERO,EXIT
          GOTO      FILE9999
.
FILE9500  MOVE      ONE,EXIT
FILE9999  RETURN
+
.
.******************************************************************************
.*                                  PROC0000                                  *
.*                      Processing discharges patients                        *
.******************************************************************************
.        Create the header record for the transmission file
.
PROC0000  MOVE      ZERO,CPAGENO
          UNPACK    ENDDATE,XCENT,XYEAR,XMON,XDAY
.
          CLOSE     WORK1
          PREP      WORK1,FILENAME
.
          CALL      WRHD0000
.
PROC0700  DISPLAY   *P1:24,*EL,*P20:24,*V2LON,"** Processing Emergency Discharges **",*W:
                    *P20:24,*EL,"Discharged Emergency No. : ";
.
          MOVE      ZERO,NOPATNTS
.
          MOVE      ENDDATE,STODATE
          PACK      KEY9,THREE,SP70  
          CALL      RSEMVIS2
PROC1000  CALL      RKEMVIS2
          BRANCH    OVRCD OF PROC9000
.
          COMPARE   THREE,EMVISTAT
          GOTO      PROC9000 IF NOT EQUAL 
.
          REP       " 0",EMVIDDAT
          REP       " 0",STRDATE
          REP       " 0",ENDDATE
.         
          MOVE      EMVIDDAT,DATE1
          MOVE      STRDATE,DATE2
          MOVE      ENDDATE,DATE3
.         
          IF        DATE1<DATE2 | DATE1>DATE3
            GOTO      PROC1000
          ENDIF
.
          PACK      KEY8,EMVIURNO,SP70
          CALL      RDMAST1
          IF        OVRCD=1
            MATCH     ZEROUR,EMVIURNO
            IF        @EQUAL
              MOVE      "Warning: PMI Registration not completed",ERRMSG
            ELSE
              MOVE      "Error: Missing PMI master record",ERRMSG
            ENDIF
            CALL      PRTL0000
            GOTO      PROC1000
          ENDIF
.         
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21 
          IF        OVRCD=1
            MOVE      "Error: Missing PMI master record",ERRMSG
            CALL      PRTL0000
            GOTO      PROC1000
          ENDIF
.
          MOVE      DEMVIADM,KEY8
          CALL      RDPMVX11
          IF        OVRCD=1
            MOVE      "Error: Missing visit extension record",ERRMSG
            CALL      PRTL0000
            GOTO      PROC1000
          ENDIF
.
          MOVE      EMVIDDAT,ICDRDDTE          * Used of reading ICD files
.
          DISPLAY   *P50:24,*V2LON,DEMVIADM;
.
          CALL      WRIT0000
          GOTO      PROC1000
.
PROC9000  CALL      UPHD0000
          MOVE      ZERO,EXIT
PROC9999  IF        ERRFLG <>0
            DISPLAY   *P1:24,*EL,*B,"Errors found.  ";
            CALL      HITENTER
            PRINT     *1,"------------------------------------------":
                         "--------------------------------------"
          ENDIF
          RETURN
+
.******************************************************************************
.*                                  WRIT0000              Called by: PROC0000 *
.*                      Write the record details                              *
.******************************************************************************
WRIT0000  CALL      SEENDT00  * Check if Patient has already been seen by Doc
          CALL      CLER0000                     * initialise all data fields
          CALL      EXTR0000
          CALL      VALD0000
.
          WRITE     WORK1,SEQ;XHINDIC,XPINDIC,XPERSNO,XPFNAME,XPSNAME:
                              XPSEX,XPDOB,XPCONT,XPINDIG,XPLANG1:
                              XPMSTAT,XPPADD1,XPPADD2,XPPADD3,XPPCODE:
                              XPINTR,XPINSR,XPMODE,XPVTYPE,XPCOMP:
                              XPAMBL,XPATIME,XPADATE,XPTTRTM,XPTDATE:
                              XPTRIG,XPDRTM,XPDRDT,XPNSTM,XPNSDT:
                              XPRDTM,XPRDDT,XPADTM,XPADDT,XPDSTA:
                              XPREFTO,XPPDIAG,XPDIAG1,XPPPROC,XPPROC1:
                              XPPROC2,XPPROC3,XPPROC4,XPATAUD,XPTTAUD:
                              XPTCAUD,XPTSAUD,XPDTAUD,XPADAUD,XPCMSTA:
                              XPSTUPI,XPAHUPI,XPAMORN,XPAMOPN,XPSTATE:
                              XPCOUNT,XPICDVR,XPMCCD,XPCNUM,XPDVACN:
                              XPDVACC,XPEDOB,XPEDOBT,XPNOKGN,XPNOKSN:
                              XPNOKTP,XPNOKTB,XPPTITL,XPPNAMR,XPDLFLG:
                              XPSRCRF,XPPRES
.
          ADD       ONE,NOPATNTS 
.
WRIT9999  RETURN
+
.******************************************************************************
.*                                  ENDP0000                                  *
.*                             End of process                                 *
.******************************************************************************
ENDP0000  DISPLAY   *P1:24,*EL,*P19:24,*V2LON:
                    "** Transmission Data Processing Completed **",*W;
ENDP9999  RETURN
+
.******************************************************************************
.*                                  EXTR0000                                  *
.*                             Extract the Information                        *
.******************************************************************************
EXTR0000  
.
. ------- hospital id ----------
.
          MOVE      CFILENO,XHINDIC 
.
. ------- ur number ----------
.
          MOVE      EMVIURNO,XPINDIC
.
. ------- visit number ----------
.
          MOVE      DEMVIADM,XPERSNO
.
. ------- patient first name ----------
.
          MOVE      PGNAME,XPFNAME
.
. ------- patient last name ----------
.
          MOVE      PSNAME,XPSNAME
.
. ------- patient sex ----------
.
          MOVE      PSEX,DSEXCHAR
          CALL      SEXDSC00                * get sex description (in IBACOMN)
.                                           *       returns DSEXDESC & DSEXNO
          MOVE      DSEXNO,XPSEX
.
. ------- patient dob ----------
.
          MATCH     SP70,PBDATE
          IF        !@EQUAL & !@EOS
            UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
            PACK      XPDOB,CDAY,CMON,CCENT,CYEAR
            REP       " 0",XPDOB
            PACK      ZPDOB,CCENT,CYEAR,CMON,CDAY
            REP       " 0",ZPDOB
          ENDIF
.
. ------- patient country of birth ----------
.
          MOVE      PCONT,XPCONT
.
. ------- patient indigenous status ----------
.
          MOVE      "9",XPINDIG                  * Indigenous status
          MATCH     SP70,PMPXABRG
          IF        !@EQUAL
            PACK      KEY5,ANSV,ANSA,PMPXABRG
            CALL      RDCODE1
            IF        OVRCD = 0
              MATCH     SP4,THCSCOD
              IF        !@EQUAL
                UNPACK    THCSCOD,XPINDIG          * Aboriginal
              ENDIF
            ENDIF
          ENDIF
.
. ------- language spoken at home status ----------
.
          MOVE      "98",XPLANG1
          MATCH     SP70,PMPXLNG1
          IF        !@EQUAL
            PACK      KEY5,ANSL,ANSA,PMPXLNG1 
            CALL      RDCODE1
            IF        OVRCD = 0
              MATCH     SP4,THCSCOD
              IF        !@EQUAL
                MOVE      ZERO,F2
                MOVE      ZERO,F4
                SQUEEZE   THCSCOD
                MOVE      THCSCOD,F4
                MOVE      F4,F2
                MOVE      F2,XPLANG1
                REP       " 0",XPLANG1
              ENDIF
            ENDIF
          ENDIF
.
. ------- patient marital status ----------
.
          MOVE      "6",XPMSTAT
          MATCH     SP70,PMSTAT
          IF        !@EQUAL
            PACK      KEY5,ANSM,SP1,PMSTAT
            CALL      RDCODE1
            IF        OVRCD=0
              MATCH     SP4,THCSCOD
              IF        !@EQUAL
                MOVE      THCSCOD,XPMSTAT
              ENDIF
            ENDIF
          ENDIF
.
. ------- street number of residence ----------
.
          MOVE      PADD1,XPPADD1
.
. ------- street name of Address ----------
.
          MOVE      PADD2,XPPADD2
.
. ------- suburb / locality of Address ----------
.
          MOVE      PSUBRB,XPPADD3
.
. ------- postcode of locality ----------
.
          MOVE      PPOST,XPPCODE
.
. ------- interpreter needed ----------
.
          MOVE      "0",XPINTR
          MATCH     SP70,PMVXINTR
          IF        !@EQUAL
            MOVE      PMVXINTR,XPINTR
          ENDIF
.
. ------- insurance status ----------
.
          MATCH     SP70,EMVIINSR
          IF        !@EQUAL
            PACK      KEY5,ANSU,ONE,EMVIINSR
            CALL      RDCODE1
            IF        OVRCD=0
              MATCH     SP4,THCSCOD
              IF        !@EQUAL
                MOVE      THCSCOD,XPINSR
              ENDIF
            ENDIF
          ENDIF
.
. ------- mode of arrival ----------
.
          MATCH     SP70,EMVIMODE
          IF        !@EQUAL
            PACK      KEY5,ANSE,ANSA,EMVIMODE
            CALL      RDCODE1
            IF        OVRCD = 0
              MATCH     SP4,THCSCOD
              IF        !@EQUAL
                MOVE      ZERO,F2
                MOVE      ZERO,F4
                SQUEEZE   THCSCOD
                MOVE      THCSCOD,F4
                MOVE      F4,F2
                MOVE      F2,XPMODE
                REP       " 0",XPMODE
              ENDIF
            ENDIF
          ENDIF
.
. ------- type of visit ----------
.
          MATCH     SP70,EMVIUC13
          IF        !@EQUAL
            PACK      KEY5,CODEee,EMVIUC13
            CALL      RDCODE1
            IF        OVRCD = 0
              MATCH     SP4,THCSCOD
              IF        !@EQUAL
                MOVE      ZERO,F2
                MOVE      ZERO,F4
                SQUEEZE   THCSCOD
                MOVE      THCSCOD,F4
                MOVE      F4,F2
                MOVE      F2,XPVTYPE
                REP       " 0",XPVTYPE
              ENDIF
            ENDIF
          ENDIF
.
. ------- compensable status ----------
.
EXTR1000  MATCH     SP70,EMVICOMP
          IF        !@EQUAL
            PACK      KEY5,ANSC,ANSL,EMVICOMP
            CALL      RDCODE1
            IF        OVRCD=0
              MATCH     SP4,THCSCOD
              IF        !@EQUAL
                UNPACK    THCSCOD,DUMMY1,XPCOMP
              ENDIF
            ENDIF
          ENDIF
.
. ------- ambulance case number ----------
.
          MOVE      EMVIAMBL,XPAMBL
.
. ------- patient arrival time ----------
.
          UNPACK    SP70,DHOUR,DMIN,DSEC
          UNPACK    EMVITIME,DHOUR,DIM1,DMIN,DIM1,DSEC
          PACK      XPATIME,DHOUR,DMIN,SP70
.
. ------- patient arrival date ----------
.
          MATCH     SP70,EMVIDATE
          IF        !@EQUAL & !@EOS
            UNPACK    EMVIDATE,CCENT,CYEAR,CMON,CDAY
            PACK      XPADATE,CDAY,CMON,CCENT,CYEAR
            REP       " 0",XPADATE
            PACK      ZPADATE,CCENT,CYEAR,CMON,CDAY
            REP       " 0",ZPADATE
          ENDIF
.
. ------- patient triage time ----------
.
          UNPACK    SP70,DHOUR,DMIN,DSEC
          UNPACK    EMVITRTM,DHOUR,DIM1,DMIN,DIM1,DSEC
          PACK      XPTTRTM,DHOUR,DMIN,SP70
.
. ------- patient triage date ----------
.
          MATCH     SP70,EMVITRDT
          IF        !@EQUAL & !@EOS
            UNPACK    EMVITRDT,CCENT,CYEAR,CMON,CDAY
            PACK      XPTDATE,CDAY,CMON,CCENT,CYEAR
            REP       " 0",XPTDATE
            PACK      ZPTDATE,CCENT,CYEAR,CMON,CDAY
            REP       " 0",ZPTDATE
          ENDIF
.
. ------- triage category ----------
.
          MATCH     SP70,EMVITRIG
          IF        !@EQUAL
            PACK      KEY5,ANSA,ANSA,EMVITRIG
            CALL      RDCODE1
            IF        OVRCD=0
              MATCH     SP70,TCINDC1
              IF        !@EQUAL
                MOVE      TCINDC1,XPTRIG
              ENDIF
            ENDIF
          ENDIF
.
. ------- doctor seen time ----------
.
          UNPACK    SP70,DHOUR,DMIN,DSEC
          UNPACK    EMVIDRTM,DHOUR,DIM1,DMIN,DIM1,DSEC
          PACK      XPDRTM,DHOUR,DMIN,SP70
.
. ------- doctor seen date ----------
.
          MATCH     SP70,EMVIDRDT
          IF        !@EQUAL & !@EOS
            UNPACK    EMVIDRDT,CCENT,CYEAR,CMON,CDAY
            PACK      XPDRDT,CDAY,CMON,CCENT,CYEAR
            REP       " 0",XPDRDT
            PACK      ZPDRDT,CCENT,CYEAR,CMON,CDAY
            REP       " 0",ZPDRDT
          ENDIF
.
. ------- nurse seen time ----------
.
          UNPACK    SP70,DHOUR,DMIN,DSEC
          UNPACK    EMVINSTM,DHOUR,DIM1,DMIN,DIM1,DSEC
          PACK      XPNSTM,DHOUR,DMIN,SP70
.
. ------- nurse seen date ----------
.
          MATCH     SP70,EMVINSDT
          IF        !@EQUAL & !@EOS
            UNPACK    EMVINSDT,CCENT,CYEAR,CMON,CDAY
            PACK      XPNSDT,CDAY,CMON,CCENT,CYEAR
            REP       " 0",XPNSDT
            PACK      ZPNSDT,CCENT,CYEAR,CMON,CDAY
            REP       " 0",ZPNSDT
          ENDIF
.
. ------- departure ready time ----------
.
          UNPACK    SP70,DHOUR,DMIN,DSEC
          UNPACK    EMVIUT01,DHOUR,DIM1,DMIN,DIM1,DSEC
          PACK      XPRDTM,DHOUR,DMIN,SP70
.
. ------- departure ready date ----------
.
          MATCH     SP70,EMVIUD01
          IF        !@EQUAL & !@EOS
            UNPACK    EMVIUD01,CCENT,CYEAR,CMON,CDAY
            PACK      XPRDDT,CDAY,CMON,CCENT,CYEAR
            REP       " 0",XPRDDT
            PACK      ZPRDDT,CCENT,CYEAR,CMON,CDAY
            REP       " 0",ZPRDDT
          ENDIF
.
. ------- actual departure time ----------
.
          UNPACK    SP70,DHOUR,DMIN,DSEC
          UNPACK    EMVIDTIM,DHOUR,DIM1,DMIN,DIM1,DSEC
          PACK      XPADTM,DHOUR,DMIN,SP70
.
. ------- actual departure date ----------
.         
          MATCH     SP70,EMVIDDAT
          IF        !@EQUAL & !@EOS
            UNPACK    EMVIDDAT,CCENT,CYEAR,CMON,CDAY
            PACK      XPADDT,CDAY,CMON,CCENT,CYEAR
            REP       " 0",XPADDT
            PACK      ZPADDT,CCENT,CYEAR,CMON,CDAY
            REP       " 0",ZPADDT
          ENDIF
.
. ------- Mode of Separation / Departure Status ----------
.         
          MATCH     SP70,EMVIDSTA
          IF        !@EQUAL
            PACK      KEY5,ANSE,ANSD,EMVIDSTA
            CALL      RDCODE1
            IF        OVRCD=0
              MATCH     SP4,THCSCOD
              IF        !@EQUAL
.               MOVE      THCSCOD,XPDSTA
                UNPACK    THCSCOD,DIM2,XPDSTA
              ENDIF 
            ENDIF   
          ENDIF
.
. ------- referred to on departure ----------
.
          MATCH     SP70,EMVIUC11
          IF        !@EQUAL
            PACK      KEY5,CODEec,EMVIUC11
            CALL      RDCODE1
            IF        OVRCD=0
              MATCH     SP4,THCSCOD
              IF        !@EQUAL
                MOVE      THCSCOD,XPREFTO
              ENDIF
            ENDIF
          ENDIF
.
. ------- principal diagnosis ----------
.
          MOVE      "000",DIM3
          MOVE      ZERO,FORM3
          MOVE      "005",DIM3A
          CALL      PRDG0000
          MOVE      PDX,XPPDIAG
.
. ------- additional diagnosis 1----------
.
          MOVE      "001",DIM3
          MOVE      ONE,FORM3
          MOVE      "005",DIM3A
          CALL      PRDG0000
          MOVE      PDX,XPDIAG1
.
. ------- principal procedure ----------
.
          MOVE      "000",DIM3
          MOVE      ZERO,FORM3
          MOVE      "004",DIM3A
          CALL      PRDG0000
          MOVE      PDX,XPPPROC
.
. ------- additional procedure 1----------
.
          MOVE      "001",DIM3
          MOVE      ONE,FORM3
          MOVE      "004",DIM3A
          CALL      PRDG0000
          MOVE      PDX,XPPROC1
.
. ------- additional procedure 2----------
.
          MOVE      "001",DIM3
          MOVE      TWO,FORM3
          MOVE      "004",DIM3A
          CALL      PRDG0000
          MOVE      PDX,XPPROC2
.
. ------- additional procedure 3----------
. 
          MOVE      "001",DIM3
          MOVE      THREE,FORM3
          MOVE      "004",DIM3A
          CALL      PRDG0000
          MOVE      PDX,XPPROC3
.
. ------- additional procedure 4----------
.
          MOVE      "001",DIM3
          MOVE      FOUR,FORM3
          MOVE      "004",DIM3A
          CALL      PRDG0000
          MOVE      PDX,XPPROC4
.
. ------- arrival time audit----------
.
.         XPATAUD (not applicable)
.
. ------- triage time audit----------
.
.         XPTTAUD (not applicable)
.
. ------- triage category audit----------
.
.         XPTCAUD (not applicable)
.
. ------- time seen audit----------
.
.         XPTSAUD (not applicable)
.
. ------- departure ready time audit----------
.
.         XPDTAUD (not applicable)
.
. ------- actual departure time audit----------
.
.         XPADAUD (not applicable)
.
. -------compliant status----------
.
          MOVE      "C",XPCMSTA
.
          MATCH     "06",XPDSTA
          IF        @EQUAL
            MOVE      "E",XPCMSTA
            GOTO      EXTR2000
          ENDIF
.
          MATCH     "08",XPDSTA
          IF        @EQUAL
            MOVE      "E",XPCMSTA
            GOTO      EXTR2000
          ENDIF
.
          CALL      VCMSTA00
.
. -------state UPI----------
.
.         XPSTUPI (not applicable)
.
. -------AHS UPI----------
.
.         XPAHUPI (not applicable)
.
. -------NSW AMO Reg Number----------
.
EXTR2000  MOVE      ONE,FORM2
          CALL      MRBN0000
.
. -------Doc Official Medicare Provider Number----------
.
          MOVE      ONE,FORM2
          CALL      MRBN0000
.
. -------State of Residence alpha abbreviation----------
.
          MATCH     SP70,PPOST
          IF        !@EQUAL
            PACK      KEY56,PPOST,SP70                                *C-240184
            CALL      RSIBPOS1
            CALL      RKIBPOS1
            IF        OVRCD=0
              MATCH     PPOST,IBPOPCOD
              IF        @EQUAL
                MOVE      IBPOSTAT,XPSTATE
              ENDIF
            ENDIF
          ENDIF
.
. -------Country of Residence ----------
.
.         XPCOUNT (not applicable)
.
. -------ICD Current Version ----------
.
          CALL      ICDV0000
.
. -------Patient Medicare Number ----------
.
.         MOVE      PTMXMCCD,XPMCCD
.
          MOVE      PTMXMCCD,DIM2
          MOVE      ZERO,F2
          SQUEEZE   DIM2
          MOVE      DIM2,F2
          MOVE      F2,F1
.
          CLEAR     XPMCCD
          APPEND    PMEDI,XPMCCD
          APPEND    F1,XPMCCD
          RESET     XPMCCD
.
. -------Centrelink Number ----------
.
          CALL      CNLK0000
.
. -------DVA Card Number ----------
.
          PACK      KEY8,DEMVIADM,SP70
          CALL      RDWVET1
          IF        OVRCD=0
            MOVE      VCLMNO,XPDVACN
          ENDIF
.
. -------DVA Card Colour ----------
. 
          MOVE      THREE,DIM1                  * set for DVA card type
          CALL      GCCARD00                    * get DVA card details
          MOVE      PMCDDVAC,XPDVACC
.
. -------Estimated DOB Indicator ----------
.
          MOVE      "N",XPEDOB
          MATCH     SP70,PMPXEDOB
          IF        !@EQUAL
            MOVE      "Y",XPEDOB
          ENDIF
.
. -------Estimated DOB Type ----------
.
.         XPEDOBT (not applicable)
.
. -------Next of Kin First Name ----------
.
          MOVE      PNKNAME,XPNOKGN
.
. -------Next of Kin Last Name ----------
.
.         XPNOKSN (not applicable)
.
. -------Next of Kin Home Phone ----------
.
          MOVE      PNKTELP,XPNOKTP
.
. -------Next of Kin Work Phone ----------
.
          MOVE      PNKTELB,XPNOKTB
.
. -------Patient Title ----------
.
          MOVE      PTITL,XPPTITL
.
. -------Building Property Name of Residence ----------
.           
.         XPPNAMR (not applicable)
.
. -------Delete Flag ----------
.
          MATCH     "4",DEMVISTA
          IF        @EQUAL
            MOVE      "Y",XPDLFLG
          ENDIF
.
. -------Source of Ref ----------
.
          MATCH     SP70,EMVISRCE
          IF        !@EQUAL
            PACK      KEY5,ANSS,SP1,EMVISRCE
            CALL      RDCODE1
            IF        OVRCD=0
              MATCH     SP4,THCSCOD
              IF        !@EQUAL
                MOVE      THCSCOD,XPSRCRF
              ENDIF
            ENDIF
          ENDIF
.
. -------Presenting Complaint ----------
. 
          MATCH     SP70,EMVIUC20
          IF        !@EQUAL
            PACK      KEY5,CODEel,EMVIUC20
            CALL      RDCODE1
            IF        OVRCD=0
              MATCH     SP70,TDESC
              IF        !@EQUAL
                MOVE      TDESC,XPPRES
              ENDIF
            ENDIF
          ENDIF
.
EXTR9999  RETURN
.******************************************************************************
.*                                  VALD0000              Called by: WRIT0000 *
.*                         Validate data before writing                       *
.******************************************************************************
VALD0000  MATCH     SP70,XHINDIC
          IF        @EQUAL | @EOS
            MOVE      "Critical: ED1000 - Hospital Code Invalid ",ERRMSG
            CALL      PRTL0000 
          ENDIF
.
          MATCH     HESTBLSH,XHINDIC
          IF        !@EQUAL
            MOVE      "Warning: ED1010 - Hospital Code Differs From Header ",ERRMSG
            CALL      PRTL0000
          ENDIF
.
          MATCH     SP70,ZPDOB
          IF        @EQUAL | @EOS
            MOVE      "Error: ED1020 - Date of Birth Missing Or Invalid",ERRMSG
            CALL      PRTL0000 
          ENDIF
.
          MATCH     SP70,ZPDOB
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPADATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPDOB,ZPADATE
              IF        @LESS
                MOVE      "Error: ED1030 - Date Of Birth After Patient Arrival Date",ERRMSG
                CALL      PRTL0000
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,XPATIME
          IF        @EQUAL | @EOS
            MOVE      "Error: ED1070 - Patient Arrival Time Missing Or Invalid",ERRMSG 
            CALL      PRTL0000
          ENDIF          
.
          MATCH     SP70,ZPADATE
          IF        @EQUAL | @EOS
            MOVE      "Error: ED1080 - Patient Arrival Date Missing Or Invalid",ERRMSG
            CALL      PRTL0000
          ENDIF 
.
          MATCH     SP70,XPTTRTM
          IF        @EQUAL | @EOS
            MATCH     "06",XPDSTA
            IF        !@EQUAL
              MOVE      "Error: ED1090 - Triage Time Missing Or Invalid",ERRMSG
              CALL      PRTL0000 
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPTDATE
          IF        @EQUAL | @EOS
            MATCH     "06",XPDSTA
            IF        !@EQUAL
              MOVE      "Error: ED1100 - Triage Date Missing Or Invalid",ERRMSG
              CALL      PRTL0000
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPTDATE
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPADATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPADATE,ZPTDATE
              IF        @LESS
                MOVE      "Error: ED1110 - Triage Date Before Arrival Date",ERRMSG
                CALL      PRTL0000
              ENDIF
.
              MATCH     ZPADATE,ZPTDATE
              IF        @EQUAL
                MATCH     SP70,XPTTRTM
                IF        !@EQUAL & !@EOS
                  MATCH     SP70,XPATIME
                  IF        !@EQUAL & !@EOS
                    MATCH     XPATIME,XPTTRTM
                    IF        @LESS
                      MOVE      "Error:        - Triage Time Before Arrival Time",ERRMSG
                      CALL      PRTL0000
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
.
            ENDIF
          ENDIF
.
.         MATCH     SP70,XPTTRTM
.         IF        !@EQUAL & !@EOS
.           MATCH     SP70,XPATIME
.           IF        !@EQUAL & !@EOS
.             MATCH     XPATIME,XPTTRTM
.             IF        @LESS
.               MOVE      "Error:        - Triage Time Before Arrival Time",ERRMSG
.               CALL      PRTL0000
.             ENDIF
.           ENDIF
.         ENDIF
.
          MATCH     SP70,XPTRIG
          IF        @EQUAL | @EOS
            MATCH     "06",XPDSTA
            IF        !@EQUAL
              MOVE      "Error: ED1120 - Triage Category Missing Or Invalid",ERRMSG
              CALL      PRTL0000
            ENDIF
          ENDIF
.
          MATCH     SP70,XPTRIG
          IF        !@EQUAL & !@EOS
            MOVE      ZERO,FORM1
            MOVE      XPTRIG,FORM1
            IF        FORM1 < 1 | FORM1 > 5
              MOVE      "Error: ED1120 - Triage Category Missing Or Invalid",ERRMSG
            ENDIF
          ENDIF
.
          MATCH     SP70,XPDRTM
          IF        @EQUAL | @EOS
            MATCH     SP70,XPNSTM
            IF        @EQUAL | @EOS
              MATCH     "06",XPDSTA
              IF        !@EQUAL
                MATCH     "09",XPDSTA
                IF        !@EQUAL
                  MOVE      "Error: ED1170 - Doctor First Seen Time Missing Or Invalid",ERRMSG
                  CALL      PRTL0000
                ENDIF
              ENDIF       
            ENDIF
          ENDIF 
.
          MATCH     SP70,XPNSTM
          IF        @EQUAL | @EOS
            MATCH     SP70,XPDRTM
            IF        @EQUAL | @EOS
              MATCH     "06",XPDSTA
              IF        !@EQUAL
                MATCH     "09",XPDSTA
                IF        !@EQUAL
                  MOVE      "Error: ED1170 - Nurse First Seen Time Missing Or Invalid",ERRMSG
                  CALL      PRTL0000
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPDRDT
          IF        @EQUAL | @EOS
            MATCH     SP70,ZPNSDT
            IF        @EQUAL | @EOS
              MATCH     "06",XPDSTA
              IF        !@EQUAL
                MATCH     "09",XPDSTA
                IF        !@EQUAL
                  MOVE      "Error: ED1180 - Doctor First Seen Date Missing Or Invalid",ERRMSG
                  CALL      PRTL0000
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPNSDT
          IF        @EQUAL | @EOS
            MATCH     SP70,ZPDRDT
            IF        @EQUAL | @EOS
              MATCH     "06",XPDSTA
              IF        !@EQUAL
                MATCH     "09",XPDSTA
                IF        !@EQUAL
                  MOVE      "Error: ED1180 - Nurse First Seen Date Missing Or Invalid",ERRMSG
                  CALL      PRTL0000
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,XPRDTM
          IF        @EQUAL | @EOS
            MATCH     "06",XPDSTA
            IF        !@EQUAL
              MATCH     "09",XPDSTA
              IF        !@EQUAL
                MOVE      "Warning: ED1190 - Missing Departure Ready Time",ERRMSG
                CALL      PRTL0000
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPRDDT
          IF        @EQUAL | @EOS 
            MATCH     "06",XPDSTA
            IF        !@EQUAL
              MATCH     "09",XPDSTA
              IF        !@EQUAL
                MOVE      "Warning: ED1200 - Missing Departure Ready Date",ERRMSG
                CALL      PRTL0000
              ENDIF 
            ENDIF     
          ENDIF
.
          MATCH     SP70,XPADTM
          IF        @EQUAL | @EOS
            MOVE      "Error: ED1210 - Missing or Invalid Actual Departure Time",ERRMSG
            CALL      PRTL0000
          ENDIF
.
          MATCH     SP70,ZPADDT
          IF        @EQUAL | @EOS
            MOVE      "Error: ED1220 - Missing or Invalid Actual Departure Date",ERRMSG
            CALL      PRTL0000
          ENDIF
.
          MATCH     SP70,XPDSTA
          IF        @EQUAL | @EOS
            MOVE      "Error: ED1240 - Mode of Separation (Departure Status) Invalid",ERRMSG
          ELSE
            MOVE      XPDSTA,DIM2
            SQUEEZE   DIM2
            MOVE      ZERO,FORM2
            MOVE      DIM2,FORM2
            IF        FORM2 < 1 | FORM2 > 12
              MOVE      "Error: ED1240 - Mode of Separation (Departure Status) Invalid",ERRMSG
            ENDIF
          ENDIF
.
          MATCH     SP70,XPPDIAG
          IF        @EQUAL | @EOS
            MATCH     "06",XPDSTA
            IF        !@EQUAL
              MATCH     "09",XPDSTA
              IF        !@EQUAL
                MOVE      "Error: ED1250 - Primary Diagnosis Code Invalid",ERRMSG
                CALL      PRTL0000
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,XPCMSTA
          IF        @EQUAL | @EOS
            MOVE      "Warning: ED1290 - ED Compliant Status Invalid or Missing",ERRMSG
            CALL      PRTL0000
          ELSE
            MOVE      XPCMSTA,DIM1
            REP       "C~N~E~",DIM1
            MATCH     "~",DIM1
            IF        !@EQUAL
              MOVE      "Warning: ED1290 - ED Compliant Status Invalid or Missing",ERRMSG
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPRDDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPADATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPADATE,ZPRDDT
              IF        @LESS
                MOVE      "Warning: ED1330 - The Departure Ready Date/Time is Before The Arrival Date/Time",ERRMSG
                CALL      PRTL0000
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPRDDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPADATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPADATE,ZPRDDT
              IF        @EQUAL
                MATCH     SP70,XPRDTM
                IF        !@EQUAL & !@EOS
                  MATCH     SP70,ZPADATE
                  IF        !@EQUAL & !@EOS
                    MATCH     XPATIME,XPRDTM
                    IF        @LESS
                      MOVE      "Warning: ED1330 - The Departure Ready Date/Time is Before The Arrival Date/Time",ERRMSG
                      CALL      PRTL0000
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPADDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPRDDT
            IF        !@EQUAL & !@EOS
              MATCH     ZPRDDT,ZPADDT
              IF        @LESS
                MOVE      "Warning: ED1340 - The Actual Departure Date/Time is Before The Departure Date/Time",ERRMSG
                CALL      PRTL0000
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPADDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPRDDT
            IF        !@EQUAL & !@EOS
              MATCH     ZPRDDT,ZPADDT
              IF        @EQUAL
                MATCH     SP70,XPADTM
                IF        !@EQUAL & !@EOS
                  MATCH     SP70,XPRDTM
                  IF        !@EQUAL & !@EOS
                    MATCH     XPRDTM,XPADTM
                    IF        @LESS
                      MOVE      "Warning: ED1340 - The Actual Departure Date/Time is Before The Departure Date/Time",ERRMSG
                      CALL      PRTL0000
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,XPNSTM
          IF        @EQUAL | @EOS
            MATCH     SP70,ZPNSDT 
            IF        !@EQUAL & !@EOS
              MOVE      "Error: ED1350 - The Nurse Seen Time is Missing but the Nurse Seen Date is Present",ERRMSG
              CALL      PRTL0000    
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPNSDT
          IF        @EQUAL | @EOS
            MATCH     SP70,XPNSTM
            IF        !@EQUAL & !@EOS
              MOVE      "Error: ED1360 - The Nurse Seen Date is Missing but the Nurse Seen Time is Present",ERRMSG
              CALL      PRTL0000
            ENDIF
          ENDIF
.
          MATCH     SP70,XPDRTM
          IF        @EQUAL | @EOS
            MATCH     SP70,ZPDRDT
            IF        !@EQUAL & !@EOS
              MOVE      "Error: ED1370 - The Doctor Seen Time Is Missing Even Though The Doctor Seen Date is Present",ERRMSG
              CALL      PRTL0000
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPDRDT
          IF        @EQUAL | @EOS
            MATCH     SP70,XPDRTM
            IF        !@EQUAL & !@EOS
              MOVE      "Error: ED1380 - The Doctor Seen Date is Missing Even Though The Doctor Seen Time is Present",ERRMSG
              CALL      PRTL0000
            ENDIF
          ENDIF
.
          MATCH     "0",XPINTR
          IF        !@EQUAL
            MATCH     "1",XPINTR
            IF        !@EQUAL
              MOVE      "Warning: ED3060 - Interpreter Not 0 or 1",ERRMSG
              CALL      PRTL0000
            ENDIF
          ENDIF
.
          MOVE      ZERO,FORM1
          MOVE      XPINSR,FORM1
          IF        FORM1 < 1 & FORM1 >3
            IF        FORM1 <> 9
              MOVE      "Warning: ED3070 - Insurance Status Not 1 - 3 or 9",ERRMSG
              CALL      PRTL0000
            ENDIF
          ENDIF
.
          MATCH     SP70,XPMODE
          IF        @EQUAL | @EOS
            MOVE      "Error: ED3080 - Mode of Arrival is Missing or Invalid",ERRMSG
            CALL      PRTL0000
          ELSE
            MOVE      XPMODE,DIM2
            SQUEEZE   DIM2
            MOVE      ZERO,FORM2
            MOVE      DIM2,FORM2
            IF        FORM2 < 1 | FORM2 > 10
              MOVE      "Error: ED3080 - Mode of Arrival is Missing or Invalid",ERRMSG          
              CALL      PRTL0000
            ENDIF
          ENDIF
.
          MATCH     SP70,XPVTYPE     
          IF        @EQUAL | @EOS
            MOVE      "Error: ED3090 - ED Visit Type Invalid or Missing",ERRMSG
            CALL      PRTL0000
          ELSE
            MOVE      XPVTYPE,DIM2
            SQUEEZE   DIM2
            MOVE      ZERO,FORM2
            MOVE      DIM2,FORM2
            IF        FORM2 < 1 | FORM2 > 11
              MOVE      "Error: ED3090 - ED Visit Type Invalid or Missing",ERRMSG
              CALL      PRTL0000
            ENDIF   
          ENDIF
.
          MATCH     SP70,XPCOMP
          IF        @EQUAL | @EOS
            MOVE      "Error: ED3100 - Compensable Status is missing or invalid",ERRMSG
            CALL      PRTL0000
          ELSE
            MOVE      ZERO,FORM1
            MOVE      XPCOMP,FORM1
            IF        FORM1 < 1 | FORM1 > 8
              MOVE      "Error: ED3100 - Compensable Status is Missing or Invalid",ERRMSG             
              CALL      PRTL0000
            ENDIF
          ENDIF
.
          MATCH     SP70,XPAMBL
          IF        @EQUAL | @EOS
            MOVE      ZERO,FORM2
            MOVE      XPMODE,DIM2
            SQUEEZE   DIM2
            MOVE      DIM2,FORM2
            IF        FORM2=1
              MOVE      "Warning: ED3110 - Ambulance Case Number is Blank And Mode Of Arrival is 1",ERRMSG             
              CALL      PRTL0000
            ENDIF
          ENDIF
.
          MATCH     SP70,XPSEX
          IF        @EQUAL | @EOS
            MOVE      "Error: EDM006 - Invalid Sex Code",ERRMSG
            CALL      PRTL0000
          ENDIF
.
          MATCH     SP70,XPREFTO
          IF        !@EQUAL & !@EOS
            MOVE      ZERO,FORM2 
            MOVE      XPREFTO,DIM2
            SQUEEZE   DIM2
            MOVE      DIM2,FORM2
            IF        FORM2 < 1 | FORM2 > 11
              MOVE      "Error: EDW017 - Referred To on Departure Invalid",ERRMSG
              CALL      PRTL0000
            ENDIF
          ENDIF
.
          MATCH     SP70,XPDVACN
          IF        !@EQUAL & !@EOS
            MOVE      XPDVACN,DIM1
            REP       "N~V~S~Q~T~W~n~v~s~q~t~w~",DIM1
            MATCH     "~",DIM1
            IF        !@EQUAL
              MOVE      "Warning: EDW019 - DVA Card Number Invalid",ERRMSG
            ENDIF
          ENDIF
.
          MATCH     SP70,XPDVACC
          IF        @EQUAL | @EOS
            MOVE      "Warning: EDW021 - DVA Card Type is Invalid",ERRMSG
          ELSE
            MOVE    XPDVACC,DIM1
            REP     "G~W~O~",DIM1
            MATCH   "~",DIM1
            IF      !@EQUAL
              MOVE      "Warning: EDW021 - DVA Card Type is Invalid",ERRMSG
            ENDIF
          ENDIF
.
          MATCH     SP70,XPDVACN
          IF        @EQUAL | @EOS
            MATCH     SP70,XPDVACC
            IF        !@EQUAL & !@EOS
              MOVE      "Warning: EDW022 - DVA Card INCONSISTENCIES",ERRMSG
            ENDIF
          ELSE
            MATCH     SP70,XPDVACC
            IF        @EQUAL | @EOS
              MOVE      "Warning: EDW022 - DVA Card INCONSISTENCIES",ERRMSG
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPADDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPADATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPADATE,ZPADDT
              IF        @LESS
                MOVE      "Error:        - The Actual Departure Date/Time is Before The Arrival Date/Time",ERRMSG
                CALL      PRTL0000
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPADDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPADATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPADATE,ZPADDT
              IF        @EQUAL
                MATCH     SP70,XPADTM
                IF        !@EQUAL & !@EOS
                  MATCH     SP70,XPATIME
                  IF        !@EQUAL & !@EOS
                    MATCH     XPATIME,XPADTM
                    IF        @LESS
                      MOVE      "Error:        - The Actual Departure Date/Time is Before The Arrival Date/Time",ERRMSG
                      CALL      PRTL0000
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPADDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPDRDT
            IF        !@EQUAL & !@EOS
              MATCH     ZPDRDT,ZPADDT
              IF        @LESS
                MOVE      "Error:        - The Actual Departure Date/Time is Before The Treatment Date/Time",ERRMSG
                CALL      PRTL0000
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPADDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPDRDT
            IF        !@EQUAL & !@EOS
              MATCH     ZPDRDT,ZPADDT
              IF        @EQUAL
                MATCH     SP70,XPADTM
                IF        !@EQUAL & !@EOS
                  MATCH     SP70,XPDRTM
                  IF        !@EQUAL & !@EOS
                    MATCH     XPDRTM,XPADTM
                    IF        @LESS
                      MOVE      "Error:        - The Actual Departure Date/Time is Before The Treatment Date/Time",ERRMSG
                      CALL      PRTL0000
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPADDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPNSDT
            IF        !@EQUAL & !@EOS
              MATCH     ZPNSDT,ZPADDT
              IF        @LESS
                MOVE      "Error:        - The Actual Departure Date/Time is Before The Treatment Date/Time",ERRMSG
                CALL      PRTL0000
              ENDIF 
            ENDIF   
          ENDIF       
.
          MATCH     SP70,ZPADDT 
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPNSDT
            IF        !@EQUAL & !@EOS
              MATCH     ZPNSDT,ZPADDT
              IF        @EQUAL
                MATCH     SP70,XPADTM
                IF        !@EQUAL & !@EOS
                  MATCH     SP70,XPNSTM
                  IF        !@EQUAL & !@EOS
                    MATCH     XPNSTM,XPADTM
                    IF        @LESS
                      MOVE      "Error:        - The Actual Departure Date/Time is Before The Treatment Date/Time",ERRMSG
                      CALL      PRTL0000
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPADDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPTDATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPTDATE,ZPADDT
              IF        @LESS
                MOVE      "Error:        - The Actual Departure Date/Time is Before The Triage Date/Time",ERRMSG      
                CALL      PRTL0000
              ENDIF       
            ENDIF  
          ENDIF  
.         
          MATCH     SP70,ZPADDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPTDATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPTDATE,ZPADDT
              IF        @EQUAL
                MATCH     SP70,XPADTM
                IF        !@EQUAL & !@EOS
                  MATCH     SP70,XPTTRTM
                  IF        !@EQUAL & !@EOS
                    MATCH     XPTTRTM,XPADTM
                    IF        @LESS
                      MOVE      "Error:        - The Actual Departure Date/Time is Before The Triage Date/Time",ERRMSG
                      CALL      PRTL0000
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPDRDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPADATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPADATE,ZPDRDT
              IF        @LESS
                MOVE      "Error:        - The Treatment Date/Time is Before The Arrival Date/Time",ERRMSG
                CALL      PRTL0000
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPDRDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPADATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPADATE,ZPDRDT
              IF        @EQUAL
                MATCH     SP70,XPDRTM
                IF        !@EQUAL & !@EOS
                  MATCH     SP70,XPATIME
                  IF        !@EQUAL & !@EOS
                    MATCH     XPATIME,XPDRTM
                    IF        @LESS
                      MOVE      "Error:        - The Treatment Date/Time is Before The Arrival Date/Time",ERRMSG
                      CALL      PRTL0000
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPNSDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPADATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPADATE,ZPNSDT
              IF        @LESS
                MOVE      "Error:        - The Treatment Date/Time is Before The Arrival Date/Time",ERRMSG
                CALL      PRTL0000
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPNSDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPADATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPADATE,ZPNSDT
              IF        @EQUAL
                MATCH     SP70,XPNSTM
                IF        !@EQUAL & !@EOS
                  MATCH     SP70,XPATIME
                  IF        !@EQUAL & !@EOS
                    MATCH     XPATIME,XPNSTM
                    IF        @LESS
                      MOVE      "Error:        - The Treatment Date/Time is Before The Arrival Date/Time",ERRMSG
                      CALL      PRTL0000
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPDRDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPTDATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPTDATE,ZPDRDT
              IF        @LESS
                MOVE      "Error:        - The Treatment Date/Time is Before The Triage Date/Time",ERRMSG
                CALL      PRTL0000
              ENDIF
            ENDIF
          ENDIF
.         
          MATCH     SP70,ZPDRDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPTDATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPTDATE,ZPDRDT
              IF        @EQUAL
                MATCH     SP70,XPDRTM
                IF        !@EQUAL & !@EOS
                  MATCH     SP70,XPTTRTM
                  IF        !@EQUAL & !@EOS
                    MATCH     XPTTRTM,XPDRTM
                    IF        @LESS
                      MOVE      "Error:        - The Treatment Date/Time is Before The Triage Date/Time",ERRMSG
                      CALL      PRTL0000
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ZPNSDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPTDATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPTDATE,ZPNSDT
              IF        @LESS
                MOVE      "Error:        - The Treatment Date/Time is Before The Triage Date/Time",ERRMSG 
                CALL      PRTL0000
              ENDIF
            ENDIF
          ENDIF
.         
          MATCH     SP70,ZPNSDT
          IF        !@EQUAL & !@EOS
            MATCH     SP70,ZPTDATE
            IF        !@EQUAL & !@EOS
              MATCH     ZPTDATE,ZPNSDT
              IF        @EQUAL
                MATCH     SP70,XPNSTM
                IF        !@EQUAL & !@EOS
                  MATCH     SP70,XPTTRTM
                  IF        !@EQUAL & !@EOS
                    MATCH     XPTTRTM,XPNSTM
                    IF        @LESS
                      MOVE      "Error:        - The Treatment Date/Time is Before The Triage Date/Time",ERRMSG
                      CALL      PRTL0000
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH       SP70,XPVTYPE
          IF          !@EQUAL & !@EOS
            MATCH       "10",XPVTYPE
            IF          @EQUAL
              MATCH       SP70,XPDSTA
              IF            @EQUAL | @EOS
                MOVE      "Error:        - Dead on Arrival. Visit Type / Mode of Separation Inconsistency",ERRMSG  
              ELSE
                MOVE      ZERO,FORM2
                MOVE      XPDSTA,DIM2
                SQUEEZE   DIM2
                MOVE      DIM2,FORM2
                IF        FORM2<>8
                  MOVE      "Error:        - Dead on Arrival. Visit Type / Mode of Separation Inconsistency",ERRMSG
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH       "1",XPTRIG
          IF          @EQUAL
            MOVE        ZERO,FORM2
            MOVE        XPDSTA,DIM2
            SQUEEZE     DIM2
            MOVE        DIM2,FORM2
            IF          FORM2=6
              MOVE      "Error:        - Triage Category 1 DNWs",ERRMSG
            ENDIF
          ENDIF
.
          MOVE        SP70,LASTTIME
          MOVE        SP70,LASTDATE
.
          MATCH       SP70,XPDRTM
          IF          !@EQUAL & !@EOS
            MOVE        XPDRTM,LASTTIME
            MOVE        ZPDRDT,LASTDATE
            MATCH       SP70,XPNSTM
            IF          !@EQUAL & !@EOS
              MATCH       LASTTIME,XPNSTM
              IF          @LESS
                MOVE        XPNSTM,LASTTIME
                MOVE        ZPNSDT,LASTDATE
              ENDIF
            ENDIF            
          ELSE
            MATCH       SP70,XPNSTM
            IF          !@EQUAL & !@EOS
              MOVE        XPNSTM,LASTTIME
              MOVE        ZPNSDT,LASTDATE
            ENDIF 
          ENDIF
.
          MATCH       SP70,LASTTIME
          IF          !@EQUAL & !@EOS
            MATCH       SP70,XPTTRTM
            IF          !@EQUAL & !@EOS
VALD1000      MOVE        XPTTRTM,FIRSTIME
              MOVE        ZPTDATE,FIRSTDAT
              CALL        TIMEDIFF
              IF          CALCTIME > 600
                MOVE      "Error:        - Waiting Time is > 600 minutes",ERRMSG
              ENDIF 
            ENDIF
          ENDIF
.
          MATCH       SP70,XPDSTA
          IF          !@EQUAL & !@EOS
            MOVE        ZERO,FORM2
            MOVE        XPDSTA,DIM2
            SQUEEZE     DIM2
            MOVE        DIM2,FORM2
            IF          FORM2=6
              MATCH       SP70,XPDRTM
              IF          !@EQUAL & !@EOS
                MOVE      "Error:        - DNW with Treatment Time",ERRMSG
              ELSE
                MATCH       SP70,XPNSTM
                IF          !@EQUAL & !@EOS
                  MOVE      "Error:        - DNW with Treatment Time",ERRMSG
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
VALD9999  RETURN
+
.******************************************************************************
.*                                  PRTL0000              Called by: VALD0000 *
.*                         Print error message                                *
.******************************************************************************
PRTL0000  IF        ERRFLG=0
            CALL      HEAD80
            PRINT     *N,"------------------------------------------":
                         "--------------------------------------":
                      *N,"|Admission | Description ",*80,"|":
                      *N,"------------------------------------------":
                         "--------------------------------------"
          ENDIF
.
          PRINT     *1,"| ",DEMVIADM," |",ERRMSG,"  |"
          ADD       ONE,ERRFLG
.
PRTL9999  RETURN
+
.******************************************************************************
. Move Extract to Web Directory
.******************************************************************************
MVEXT000  CLEAR     CMDLINE
          APPEND    "ibaemr56.us1 ",CMDLINE
          APPEND    XHINDIC,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    FILENAME,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.         CLEAR     CMDLINE
.         APPEND    "ibaemr56.us2 ",CMDLINE
.         APPEND    XHINDIC,CMDLINE
.         APPEND    SP1,CMDLINE
.         APPEND    FILENAM2,CMDLINE
.         RESET     CMDLINE
.         EXECUTE   CMDLINE,TASKID
.
MVEXT999  RETURN
+
.--------------------------------------------------------------------------
.                             SEENDT00
. Checks the EMR History file to see if this patient has already been seen
. by a Doctor. If so the Doctor seen date and doctor seen time are updated
. with the least seen date and time..
.
.   Return Vars :  EMVIDRDT, EMVIDRTM
.
.--------------------------------------------------------------------------
SEENDT00  MOVE      "99999999",SNDATE     * Form Variable
          MOVE      "999999",SNTIME       * Form Variable
.
          PACK      KEY22,DEMVIADM,SP70   * Read for Fisrt seen Date & Time
          CALL      RSEMHIS1
SEENDT10  CALL      RKEMHIS1
          BRANCH    OVRCD,SEENDT99
.
          MATCH     DEMVIADM,EMHIVIS      * Check Visit no
          GOTO      SEENDT99 IF NOT EQUAL
.
          MATCH     SP70,EMHIDOC
          GOTO      SEENDT10 IF EQUAL
          GOTO      SEENDT10 IF EOS
.
          MATCH     SP70,EMHIDSD          * Get First Record with a seen Date
          GOTO      SEENDT10 IF EQUAL
.
          MATCH     SP70,EMHIDST          * Get First Record with a seen Time
          GOTO      SEENDT10 IF EQUAL
.
          REP       " 0",EMHIDSD
          REP       " 0",EMHIDST
          MOVE      EMHIDSD,ADATE         * Form Variable
          MOVE      EMHIDST,ATIME         * Form Variable
.
          IF        ADATE < SNDATE
            MOVE      ADATE,SNDATE
            MOVE      ATIME,SNTIME
          ENDIF
          IF        ADATE = SNDATE
            IF        ATIME < SNTIME
              MOVE      ATIME,SNTIME
            ENDIF
          ENDIF
.
          MOVE      SNDATE,EMVIDRDT      * Set Doctor Seen Date
          MOVE      ":",KEY1
          UNPACK    SNTIME,HOUR,MIN,SEC
          PACK      EMVIDRTM,HOUR,KEY1,MIN,KEY1,SEC  * Set Doctor Seen Time
          REP       " 0",EMVIDRTM
.
.         GOTO      SEENDT10             * Read Next Record
.
SEENDT99  RETURN
.
.------------------------------------------------------------
. Clear Extract Variables
.------------------------------------------------------------
CLER0000  PACK      XHINDIC,SP70
          PACK      XPINDIC,SP70
          PACK      XPERSNO,SP70
          PACK      XPFNAME,SP70,SP70
          PACK      XPSNAME,SP70
          PACK      XPSEX,SP70
          PACK      XPDOB,SP70
          PACK      XPCONT,SP70
          PACK      XPINDIG,SP70
          PACK      XPLANG1,SP70
          PACK      XPMSTAT,SP70
          PACK      XPPADD1,SP70
          PACK      XPPADD2,SP70
          PACK      XPPADD3,SP70
          PACK      XPPCODE,SP70
          PACK      XPINTR,SP70
          PACK      XPINSR,SP70
          PACK      XPMODE,SP70
          PACK      XPVTYPE,SP70
          PACK      XPCOMP,SP70
          PACK      XPAMBL,SP70
          PACK      XPATIME,SP70
          PACK      XPADATE,SP70
          PACK      XPTTRTM,SP70
          PACK      XPTDATE,SP70
          PACK      XPTRIG,SP70
          PACK      XPDRTM,SP70
          PACK      XPDRDT,SP70
          PACK      XPNSTM,SP70
          PACK      XPNSDT,SP70
          PACK      XPRDTM,SP70
          PACK      XPRDDT,SP70
          PACK      XPADTM,SP70
          PACK      XPADDT,SP70
          PACK      XPDSTA,SP70
          PACK      XPREFTO,SP70
          PACK      XPPDIAG,SP70
          PACK      XPDIAG1,SP70
          PACK      XPPPROC,SP70
          PACK      XPPROC1,SP70
          PACK      XPPROC2,SP70
          PACK      XPPROC3,SP70
          PACK      XPPROC4,SP70
          PACK      XPATAUD,SP70
          PACK      XPTTAUD,SP70
          PACK      XPTCAUD,SP70
          PACK      XPTSAUD,SP70
          PACK      XPDTAUD,SP70
          PACK      XPADAUD,SP70
          PACK      XPCMSTA,SP70
          PACK      XPSTUPI,SP70
          PACK      XPAHUPI,SP70
          PACK      XPAMORN,SP70
          PACK      XPAMOPN,SP70
          PACK      XPSTATE,SP70
          PACK      XPCOUNT,SP70
          PACK      XPICDVR,SP70
          PACK      XPMCCD,SP70
          PACK      XPCNUM,SP70
          PACK      XPDVACN,SP70
          PACK      XPDVACC,SP70
          PACK      XPEDOB,SP70
          PACK      XPEDOBT,SP70
          PACK      XPNOKGN,SP70,SP70
          PACK      XPNOKSN,SP70
          PACK      XPNOKTP,SP70
          PACK      XPNOKTB,SP70
          PACK      XPPTITL,SP70
          PACK      XPPNAMR,SP70
          PACK      XPDLFLG,SP70
          PACK      XPSRCRF,SP70
          PACK      XPPRES,SP70
.
          PACK      ZPDOB,SP70
          PACK      ZPADATE,SP70
          PACK      ZPTDATE,SP70
          PACK      ZPDRDT,SP70
          PACK      ZPNSDT,SP70
          PACK      ZPRDDT,SP70
          PACK      ZPADDT,SP70
.
CLER9999  RETURN
.
.******************************************************************************
.*                                  PRDG0000                                  *
.*                         Extract principal/additional diagnosis             *
.******************************************************************************
PRDG0000  MOVE      ZERO,ADDDIACN
          MOVE      SP70,PDX
          PACK      KEY14,EMVIADMN,DIM3A,SP70
          CALL      RSEMVCD1                     * position for admission no.
PRDG2000  CALL      RKEMVCD1                     * read next record
          BRANCH    OVRCD,PRDG9999               * eof - finished primary di/pro
.         
          MATCH     EMVCVIST,DEMVIADM            * same visit no. still ?
          GOTO      PRDG2000 IF NOT EQUAL        * no - finished prim. diag/proc
.
          MATCH     DIM3A,EMVCTYPE               * diagnosis or procedure
          GOTO      PRDG2000 IF NOT EQUAL
.         
          MATCH     DIM3,EMVCSEQU                * match diagnosis/proc type
          GOTO      PRDG2000 IF NOT EQUAL        * no - ignore
.
          MATCH     "001",DIM3                   * additional diagnosis/proc
          IF        @EQUAL
            ADD       ONE,ADDDIACN
            COMPARE   FORM3,ADDDIACN
            GOTO      PRDG2000 IF NOT EQUAL
          ENDIF
.         
.         MOVE      EMVCMNCD,PDX
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          BRANCH    OVRCD,PRDG9999
.
          MATCH     SP70,EMICVEMD
          GOTO      PRDG9999 IF EQUAL
          GOTO      PRDG9999 IF EOS
.
          MOVE      EMICVEMD,PDX
.
          GOTO      PRDG9999
.
PRDG9999  RETURN
.
.******************************************************************************
.*                                  MRBN0000                                  *
.*                         Medical Registration Board no.                     *
.******************************************************************************
MRBN0000  PACK      KEY22,DEMVIADM,SP70   * Read for Fisrt seen Date & Time
          CALL      RSEMHIS1
MRBN0010  CALL      RKEMHIS1
          BRANCH    OVRCD,MRBN9999
.             
          MATCH     DEMVIADM,EMHIVIS      * Check Visit no
          GOTO      MRBN9999 IF NOT EQUAL
.
          MATCH     SP70,EMHIDSD          * Get First Record with a seen Date
          GOTO      MRBN0010 IF EQUAL
.
          MATCH     SP70,EMHIDST          * Get First Record with a seen Time
          GOTO      MRBN0010 IF EQUAL
.
          MATCH     SP70,EMHIDOC
          GOTO      MRBN9999 IF EQUAL
.
          PACK      KEY6,EMHIDOC,SP70
          CALL      RDDOCT1 
          BRANCH    OVRCD,MRBN9999
.
          BRANCH    FORM2,MRBN1000,MRBN2000
          GOTO      MRBN9999
.
MRBN1000  MATCH     SP70,PTDOMREG
          GOTO      MRBN9999 IF EQUAL
.
          MOVE      PTDOMREG,XPAMORN
          GOTO      MRBN9999
.
MRBN2000  MATCH     SP70,DPROV
          GOTO      MRBN9999 IF EQUAL
.
          MOVE      DPROV,XPAMOPN
          GOTO      MRBN9999
.
MRBN9999  RETURN
.
.******************************************************************************
.*                                  ICDV0000                                  *
.*                         ICD Current Version                                *
.******************************************************************************
ICDV0000  MOVE      ZERO,EXIT
.
          UNPACK    PTCNGDX3,KEY4,KEY5           * ICD10 Ed.13        *I-0956210
          MATCH     "9999",KEY4                  * is year = "9999"?
          IF        !@EQUAL
            MOVE      "ICD10V13",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          UNPACK    PTCNGDX2,KEY4,KEY5           * ICD10 Ed.12        *I-0917793
          MATCH     "9999",KEY4                  * is year = "9999"?
          IF        !@EQUAL
            MOVE      "ICD10V12",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          UNPACK    PTCNGDX1,KEY4,KEY5           * ICD10 Ed.11
          MATCH     "9999",KEY4                  * is year = "9999"?
          IF        !@EQUAL
            MOVE      "ICD10V11",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          UNPACK    PTCNGDVX,KEY4,KEY5           * ICD10 Ed.10        *I-0833093
          MATCH     "9999",KEY4                  * is year = "9999"?
          IF        !@EQUAL
            MOVE      "ICD10V10",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          UNPACK    PTCNGDV9,KEY4,KEY5           * ICD10 Ed.9         *I-311669
          MATCH     "9999",KEY4                  * is year = "9999"?
          IF        !@EQUAL
            MOVE      "ICD10V9",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          UNPACK    PTCNGDV8,KEY4,KEY5           * ICD10 Ed.8         *I-284420
          MATCH     "9999",KEY4                  * is year = "9999"?
          IF        !@EQUAL
            MOVE      "ICD10V8",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          UNPACK    PTCNGDV7,KEY4,KEY5           * ICD10 Ed.7         *I-219246
          MATCH     "9999",KEY4                  * is year = "9999"?
          IF        !@EQUAL
            MOVE      "ICD10V7",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          UNPACK    PTCNGDV6,KEY4,KEY5           * ICD10 Ed.6
          MATCH     "9999",KEY4                  * is year = "9999"?
          IF        !@EQUAL
            MOVE      "ICD10V6",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          MATCH     "99999999",PTCNGDV5          * ICD10 Ed.5
          IF        !@EQUAL
            MOVE      "ICD10V5",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          MATCH     "99999999",PTCNGDV4
          IF        !@EQUAL
            MOVE      "ICD10V4",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          MATCH     "99999999",PTCNGDV3
          IF        !@EQUAL
            MOVE      "ICD10V3",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          MATCH     "99999999",PTCNI10D
          IF        !@EQUAL
            MOVE      "ICD10AM",XPICDVR
            GOTO      ICDV9999
          ENDIF
.
          MOVE      "ICD9CM",XPICDVR
.
ICDV9999  RETURN
.******************************************************************************
.*                                  CNLK0000                                  *
.*                   Find the first centrelink record and extract             *
.*                         the centrelink number                              *
.******************************************************************************
CNLK0000  CALL      IBACLOCK      
          PACK      DIM8,CDD,SLASH,CMM,SLASH,CCC,CYY
          REP       " 0",DIM8
.
          PACK      KEY19,EMVIURNO,DIM8,SP70
          CALL      RSPMCCD1
CNLK1000  CALL      RKPMCCD1
          BRANCH    OVRCD,CNLK9999
.
          MATCH     EMVIURNO,PMCDURNO
          GOTO      CNLK9999 IF NOT EQUAL
.
          PACK      KEY5,CODEct,PMCDCTYP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CNLK1000
.
          MATCH     "1",TCINDC1
          GOTO      CNLK1000 IF NOT EQUAL
.
          MOVE      PMCDCNUM,XPCNUM
.
CNLK9999  RETURN
.
.******************************************************************************
.*                                  WRHD0000                                  *
.*                           Write extract header                             *
.******************************************************************************
WRHD0000  PACK      HESTBLSH,CFILENO,SP70
          PACK      HSTRTDTE,STRDATE,SP70
          PACK      HEENDDTE,ENDDATE,SP70
          CALL      IBACLOCK
          PACK      HPERFDTE,CCC,CYY,CMM,CDD
          REP       " 0",HPERFDTE
          CLOCK     TIME,CTIMEIS
          UNPACK    CTIMEIS,HOUR,D1,MIN
          PACK      HPERFTIM,HOUR,MIN
          MOVE      "00000000",HNORECEX
.
          WRITE     WORK1,SEQ;HIDENTIF,HESTBLSH,HSTRTDTE,HEENDDTE,HPERFDTE:
                              HPERFTIM,HNORECEX,HEXTRTYP,HEXTRVER,HSRCSYST:
                              HSRCVERS,SP100,SP100,SP100,SP100,SP100,SP100:
                              SP100,SP10,SP10,SP10,SP1,SP1,SP1,SP1,SP1
.
WRHD9999  RETURN
.
.******************************************************************************
.*                                  UPHD0000                                  *
.*                           Update extract header                            *
.******************************************************************************
UPHD0000  ADD       ONE,NOPATNTS
          MOVE      NOPATNTS,HNORECEX
          REP       " 0",HNORECEX
.
          WRITAB    WORK1,ZERO;*43,HNORECEX
.
UPHD9999  RETURN
.
.******************************************************************************
.*                                  VCMSTA00                                  *
.*                           Validate Compliant Status                        *
.******************************************************************************
VCMSTA00  MATCH     SP70,XHINDIC
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF     
.
          MATCH     SP70,XPINDIC
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPERSNO
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
.         MATCH     SP70,XPFNAME
.         IF        @EQUAL|@EOS
.           MOVE      "N",XPCMSTA
.           GOTO      VCMSTA99
.         ENDIF
.
.         MATCH     SP70,XPSNAME
.         IF        @EQUAL|@EOS
.           MOVE      "N",XPCMSTA
.           GOTO      VCMSTA99
.         ENDIF
.
          MATCH     SP70,XPSEX
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPDOB
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPCONT
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPINDIG
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPLANG1
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPMSTAT
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPPADD1
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPPADD2
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPPADD3
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPPCODE
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPINTR
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPINSR
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPMODE
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPVTYPE
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPCOMP
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPAMBL
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPATIME
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPADATE
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPTTRTM
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPTDATE
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPTRIG
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPDRTM
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPDRDT
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPNSTM
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPNSDT
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPRDTM
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPRDDT
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPADTM
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPADDT
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPDSTA
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPREFTO
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPPDIAG
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPDIAG1
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPPPROC
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPPROC1
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPPROC2
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPPROC3
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
          MATCH     SP70,XPPROC4
          IF        @EQUAL|@EOS
            MOVE      "N",XPCMSTA
            GOTO      VCMSTA99
          ENDIF
.
VCMSTA99  RETURN
.
          INC       STD001IO
          INC       CALCDAYS
          INC       PATHSPKY
          INC       TIMEDIFF
          INC       SEXDSCIO
.
          INC       EMRHISIO/INC
          INC       EMRICDIO/INC
          INC       EMRVCDIO/INC
          INC       EMRVISIO/INC
          INC       IBAPOSIO/INC
          INC       OPRDEAIO/INC
          INC       PATCHCIO/INC
          INC       PATCODIO/INC
          INC       PATCT1IO/INC
          INC       PATDSCIO/INC
          INC       PATDADIO/INC            * I-54733
          INC       PATVADIO/INC
          INC       PATECDIO/INC
          INC       PATECOIO/INC
          INC       PATFN1IO/INC
          INC       PATICUIO/INC
          INC       PATICDIO/INC
          INC       PATICOIO/INC
          INC       PATHSPIO/INC
          INC       PATDO1IO/INC
          INC       PATMA1IO/INC
          INC       PATQRDIO/INC
          INC       PMSPX2IO/INC
          INC       PMSCCDIO/INC
          INC       PATPGRIO/INC
          INC       PATTRNIO/INC
          INC       PATWR1IO/INC
          INC       PATWVEIO/INC
          INC       PATVISIO/INC
          INC       PMSVX1IO/INC
          INC       MEHLEGIO/INC
          INC       MEHVI1IO/INC
          INC       MEHDS1IO/INC
.
          INC       GCCARD00/PBL
+
