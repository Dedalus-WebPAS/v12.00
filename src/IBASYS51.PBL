.******************************************************************************
.* System    :   System Security                                              *
.* Program   :   IBASYS51                                                     *
.* Desc      :   Security Control Listing                                     *
.******************************************************************************
.* Date      :   20/08/91                                                     *
.* Author    :   Steve O'Gorman                                               *
.* Mods.     :                                                                *
.*       V10.05.01  01/01/2015  Ania P                      CAR 261630        *
.*                  Removed use of PORT for temp file naming                  *
.*        V6.01.02  20/01/1994  Greg Horvat      SRF 127379                   *
.*                  Fixed page breaks & removed total record count from the   *
.*                  end of each page                                          *
.*        V6.01.03  10/06/1994  Ian Rutt         SRF 129841                   *
.*                  Added the User Defined Menu (IBASMPRO) so the report shows*
.*                  what user defined menu a given user is linked to          *
.*        V6.01.04  10/07/1995  Paul Howells     SRF 610459                   *
.*                  check department range correctly.                         *
.*        V6.01.05  15/05/96 J.Tan    SRF 615228                              *
.*                  Mods to print in different sequence according to options  *
.******************************************************************************
.
          INC       STD001FD
          INC       STDHLPDF
          INC       IBAPASFD/INC
          INC       IBASECFD/INC
          INC       IBAMENFD/INC
          INC       IBAMSLFD/INC
          INC       IBASMAFD/INC
          INC       IBAUSEFD/INC
          INC       IBASEQFD/INC  
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.***************************************************************************
.*                               Constants                                 *
.***************************************************************************
CODEPR    INIT      "PR"
DASH      INIT      "- "
DASH65    INIT      "---------------------------------":
                    "--------------------------------"
DASH78    INIT      "---------------------------------------":
                    "---------------------------------------"
FINISH    INIT      "Finish"
PIPE      INIT      "|"
SEQCODE   INIT      "Code      "
SEQALPHA  INIT      "Alphabetic"
SEQDEPT   INIT      "Department"
SEQMENU   INIT      "Menu      "
START     INIT      "Start "
.
SORTSTR   DIM       20
TEMP1     IFILE     SQL, FIXED=46, KEY=SORTSTR
SORT1     INIT      "U1-4"
SORT2     INIT      "U5-39,1-4"
SORT3     INIT      "U40-42,1-4"
SORT4     INIT      "U43-45,1-4"
.
.FIELD    TYPE     LENGTH     START
.SECODE   DIM       4          1
.SECUSER  DIM       35         5
.SECDEP   DIM       3          40
.SECMNNUM DIM       3          43
.EOR                           46
.
.***************************************************************************
.*                               Variables                                 *
.***************************************************************************
.
CMDLINE   DIM       60
CODE      DIM       2
CODESTRT  DIM       30
CODESTOP  DIM       30
.
DIM4      DIM       4
DIM17A    DIM       17A
DIM17B    DIM       17B
DIM20     DIM       20
DIM30     DIM       30
DIM33     DIM       33
.
ENDDCODE  DIM       4
ENDDALPA  DIM       30
ENDDDEPT  DIM       3
ENDDMENU  DIM       8
.
ITEMNO    FORM      2
NOOFRECS  FORM      3
.
SEQDESC   DIM       10
STRTCODE  DIM       4
STRTALPA  DIM       30
STRTDEPT  DIM       3
STRTMENU  DIM       8
SUMMDETL  DIM       1
.
.
PRGID     INIT      "IBASYS51"
PRGNAM    INIT      "Security Control Listing"
VERSION   INIT      "V12.00.00"
.
.***************************************************************************
.*                       Mainline Controlling Logic                        *
.***************************************************************************
.
ML0000    CALL      INIT0000                * Initialise
.
ML0100    CALL      OPTN0000                * Main Option Screen
          BRANCH    EXIT,ML9999
.
ML0200    CALL      SCRN0000                * Main Keyin Screen
          CALL      INPT0000                * Input Data
          BRANCH    EXIT,ML0100
.
          CALL      SEL0000                 * Select Item, Post, Cancel
          BRANCH    EXIT,ML0100
          CALL      CLR0000                 * Clear Variables Needed
          BRANCH    OPTION,ML1000,ML2000,ML3000,ML4000
.                           Code  Alpha   Dept   Menu
.
ML1000    CALL      CODE0000                * Process in Code Order
          GOTO      ML5000
.
ML2000    CALL      ALPH0000                * Process in Alpha Order
          GOTO      ML5000
.
ML3000    CALL      DEPT0000                * Process in Dept Order
          GOTO      ML5000
.
ML4000    CALL      MENU0000                * Process in Menu Order
          GOTO      ML5000
.
ML5000    CALL      PRNT0000                * Print Data in Temp File
          GOTO      ML0100
.
ML9999    CHAIN     PGM
          STOP
.
.********************************************************************** 
.*                              INIT0000                              *
.*                           Initialise Routine                       *
.********************************************************************** 
.
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P64:24,"Opening"
.
          DISPLAY   *P72:24,"ibacodef"
          OPEN      IBACODE1,"ibacodef"
.
          DISPLAY   *P72:24,"ibasecuf"
          OPEN      IBASECU1,"ibasecuf"
.
          DISPLAY   *P72:24,"ibamenaf"
          OPEN      IBAMENA1,"ibamenaf"
.
          DISPLAY   *P72:24,"ibamslaf"
          OPEN      IBAMSLA1,"ibamslaf"
.
          DISPLAY   *P72:24,"ibasmaaf"
          OPEN      IBASMAA1,"ibasmaaf"
.
          DISPLAY   *P72:24,"ibauseaf"
          OPEN      IBAUSEA1,"ibauseaf"
.
          DISPLAY   *P72:24,"ihapassf"
          OPEN      IHAPASS1,"ihapassf"
          OPEN      IHAPASS2,"ihapassf"
.
          CALL      TFILENAM
.
          RETURN
.
.********************************************************************** 
.*                              CLR0000                               *
.*                      Clear Variables Routine                       *
.********************************************************************** 
.
CLR0000   CALL      KILL0000                * remove existing temp file
.
          CLEAR     CMDLINE
          MOVE      "isbuild ",CMDLINE
          ENDSET    CMDLINE
          APPEND    TFILNAME,CMDLINE
          APPEND    " 46 ",CMDLINE
          APPEND    SORTSTR,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
          OPEN      TEMP1,TFILNAME
.
          MOVE      ZERO,NOOFRECS
          MOVE      ZERO,CLNO
.
          RETURN
.
.********************************************************************** 
.*                              KILL0000                              *
.*                         Remove the Temp File                       *
.********************************************************************** 
.
KILL0000  CLOSE     TEMP1
.
          CLEAR     CMDLINE
          MOVE      "iserase ",CMDLINE
          ENDSET    CMDLINE
          APPEND    TFILNAME,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
          RETURN
.
.********************************************************************** 
.*                              OPTN0000                              *
.*                         Main Option Screen                         *
.********************************************************************** 
.
OPTN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0",*HOFF," = Exit":
                    *P1:5,*V2LON," 1",*HOFF," = Security Control Report":
                    *P1:7,"Select Option : ";
.
OPTN1000  KEYIN     *P17:7,*V2LON,*EL,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9000 IF EQUAL
.
          BRANCH    OPTION,OPTN8000
.
          BEEP
          GOTO      OPTN1000
.
OPTN8000  MOVE      FALSE,EXIT
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT
.
OPTN9999  RETURN
.
.********************************************************************** 
.*                              SCRN0000                              *
.*                            Main  Screen                            *
.********************************************************************** 
.
SCRN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 1",*HOFF," = Report Sequence    : ":
                    *P1:5,*V2LON," 2",*HOFF," = (S)ummary (D)etail : ":
                    *P1:6,*V2LON," 3",*HOFF," = Start              : ":
                    *P1:7,*V2LON," 4",*HOFF," = Finish             : ";
.
          RETURN
.
.********************************************************************** 
.*                            INPT0000                                *
.*                        Input All Fields                            *
.********************************************************************** 
.
INPT0000  CALL      RSEQ0000                * Keyin Report Sequence
          BRANCH    EXIT,INPT9000           * Exit Input Mode
.
INPT1000  CALL      SMDT0000                * Summary Or Detail
          BRANCH    EXIT,INPT0000           * Go Back to Keyin Report Seq.
.
INPT2000  CALL      STRT0000                * Keyin Start of Range
          BRANCH    EXIT,INPT1000           * Go Back to Keyin S or D
.
          CALL      FNSH0000                * Keyin Finish of Range
          BRANCH    EXIT,INPT2000           * Go Back to Keyin Start
.
          MOVE      FALSE,EXIT              * Entered Ok.
          GOTO      INPT9999
.
INPT9000  MOVE      TRUE,EXIT
.
INPT9999  RETURN
.
.********************************************************************** 
.*                            RSEQ0000                                *
.*                       Keyin Report Sequence                        *
.********************************************************************** 
.
RSEQ0000  DISPLAY   *P50:5,*V2LON,"1",*HOFF," = ",SEQCODE:
                    *P50:6,*V2LON,"2",*HOFF," = ",SEQALPHA:
                    *P50:7,*V2LON,"3",*HOFF," = ",SEQDEPT:
                    *P50:8,*V2LON,"4",*HOFF," = ",SEQMENU;
.
RSEQ1000  KEYIN     *P27:4,*EL,*DV,UNDLN1:
                    *P27:4,*V2LON,FORM1:
                    *P27:4,*DV,FORM1;
.
          COMPARE   ZERO,FORM1
          GOTO      RSEQ9000 IF EQUAL
.
          COMPARE   ONE,FORM1
          GOTO      RSEQ7000 IF LESS        * Beep if Less
.
          COMPARE   FORM1,FOUR
          GOTO      RSEQ7000 IF LESS        * Beep if Not Less
.
          MOVE      FORM1,OPTION
          LOAD      SEQDESC,OPTION,SEQCODE,SEQALPHA,SEQDEPT,SEQMENU
          MOVE      SP20,SORTSTR
          LOAD      SORTSTR,OPTION,SORT1,SORT2,SORT3,SORT4
          PACK      CPHDROPT,DASH,SEQDESC
.
          DISPLAY   *P35:4,SEQDESC;
          GOTO      RSEQ9500
.
RSEQ7000  BEEP
          GOTO      RSEQ1000
.
RSEQ9000  MOVE      TRUE,EXIT
          DISPLAY   *P27:4,*EL,*P27:5,*EL,*P50:6,*EL,*P50:7,*EL,*P50:8,*EL;
          GOTO      RSEQ9999
.
RSEQ9500  MOVE      FALSE,EXIT
          DISPLAY   *P50:5,*EL,*P50:6,*EL,*P50:7,*EL,*P50:8,*EL;
.
RSEQ9999  RETURN
.
.********************************************************************** 
.*                            SMDT0000                                *
.*                    (S)ummary or (D)etail Report                    *
.********************************************************************** 
.
SMDT0000  KEYIN     *P27:5,*DV,*EL,UNDLN1:
                    *P27:5,*V2LON,SUMMDETL:
                    *P27:5,*DV,SUMMDETL;
.
          REP       UPPLOW,SUMMDETL
.
          RESET     SUMMDETL
          GOTO      SMDT9000 IF EOS
.
          CMATCH    ANSS,SUMMDETL
          GOTO      SMDT1000 IF EQUAL
.
          CMATCH    ANSD,SUMMDETL
          GOTO      SMDT2000 IF EQUAL
.
          BEEP
          GOTO      SMDT0000
.
SMDT1000  DISPLAY   *P27:5,*EL,*V2LON,"Summary";
          GOTO      SMDT9500
.
SMDT2000  DISPLAY   *P27:5,*EL,*V2LON,"Detail";
          GOTO      SMDT9500
.
SMDT9000  MOVE      TRUE,EXIT
          DISPLAY   *P27:5,*EL;
          GOTO      SMDT9999
.
SMDT9500  MOVE      FALSE,EXIT
.
SMDT9999  RETURN
.
.********************************************************************** 
.*                            STRT0000                                *
.*                     Keyin The Start of Range                       *
.********************************************************************** 
.
STRT0000  BRANCH    OPTION,STRT1000,STRT2000,STRT3000,STRT4000
.                            Code    Alpha     Dept     Menu
.
. ******* CODE sequence *******
.
STRT1000  MOVE      "27",CCOL
          MOVE      "6",CVERT
.
          MOVE      ZERO,HTOP
          CALL      KIBPSA00                * Display the Valid Codes
.
          DISPLAY   *PCCOL:CVERT,*V2LON,SECODE,*HOFF,SP4,SECUSER;
          MOVE      SECODE,STRTCODE
.
STRT1100  MATCH     SP4,STRTCODE
          GOTO      STRT1200 IF EQUAL       * return entered
.
          PACK      KEY4,STRTCODE
          CALL      RDPASS1
          BRANCH    OVRCD,STRT1900
          MOVE      STRTCODE,CODESTRT       * set print start code
          GOTO      STRT9500
.
STRT1200  DISPLAY   *PCCOL:CVERT,*V2LON,"Start",*EL;
          MOVE      "Start",CODESTRT        * set print start code
          MOVE      SP4,STRTCODE
          MOVE      SP30,SECUSER
          GOTO      STRT9500
.
STRT1900  DISPLAY   *P1:24,*EL,*B,"Code Not on File - ";
          CALL      HITENTER
          GOTO      STRT1000
.
. ******* ALPHA sequence *******
.
STRT2000  KEYIN     *P27:6,*EL,*DV,UNDLN30:
                    *P27:6,*V2LON,STRTALPA:
                    *P27:6,*V2LON,*DV,STRTALPA;
.
          ENDSET    STRTALPA
          APPEND    SP30,STRTALPA
          RESET     STRTALPA
.
          MATCH     SP30,STRTALPA
          GOTO      STRT2200 IF EQUAL
          MOVE      STRTALPA,CODESTRT       * set print start code
          GOTO      STRT9500
.
STRT2200  DISPLAY   *P27:6,*V2LON,"Start",*EL;
          MOVE      "Start",CODESTRT        * set print start code
          GOTO      STRT9500
.
. ******* DEPARTMENT sequence *******
.
STRT3000  MOVE      "027",CCOL
          MOVE      "06",CVERT
          MOVE      ZERO,CKEYTYP
.
          DISPLAY   *PCCOL:CVERT,*EL;
          CALL      KIBDPA00
          BRANCH    EXIT,STRT3200,STRT9000
.
          PACK      STRTDEPT,PRXCATA,SP3
          MOVE      STRTDEPT,CODESTRT       * set print start code
          DISPLAY   *P35:6,PRXDESC
          GOTO      STRT9500
.
STRT3200  DISPLAY   *P27:6,*V2LON,"Start",*EL;
          MOVE      "Start",CODESTRT        * set print start code
          MOVE      SP3,STRTDEPT
          GOTO      STRT9500
.
. ******* MENU sequence *******
.
STRT4000  MOVE      ZERO,CKEYTYP
          MOVE      "027",CCOL
          MOVE      "06",CVERT
          DISPLAY   *PCCOL:CVERT,*EL;
          MOVE      ZERO,CKEYTYP
          COMPARE   ONE,COPTION
          GOTO      STRT4100 IF NOT EQUAL
          MOVE      ONE,CKEYTYP
.
STRT4100  CALL      KIBMNA00
.
          ENDSET    IBMNMENU
          APPEND    SP3,IBMNMENU
          RESET     IBMNMENU
.
          MATCH     SP8,IBMNMENU
          GOTO      STRT4200 IF EQUAL
.
          MOVE      IBMNMENU,STRTMENU
.
          PACK      KEY3,STRTMENU,SP3
          CALL      RDIBMEN1
          BRANCH    OVRCD,STRT4900
.
          MOVE      STRTMENU,CODESTRT       * set print start code
          DISPLAY   *P27:6,*V2LON,STRTMENU,*HOFF:
                    *P35:6,IBMNDESC
          GOTO      STRT9500
.
STRT4200  DISPLAY   *P27:6,*V2LON,"Start",*EL;
          MOVE      "Start",CODESTRT        * set print start code
          MOVE      SP3,STRTMENU
          GOTO      STRT9500
.
STRT4900  DISPLAY   *P1:24,*EL,*B,"Menu Not on File - ";
          CALL      HITENTER
          GOTO      STRT4000
.
STRT9000  MOVE      TRUE,EXIT
          DISPLAY   *P27:6,*EL;
          GOTO      STRT9999
.
STRT9500  MOVE      FALSE,EXIT
.
STRT9999  RETURN
.
.********************************************************************** 
.*                            FNSH0000                                *
.*                       Routine Description                          *
.********************************************************************** 
.
FNSH0000  BRANCH    OPTION,FNSH1000,FNSH2000,FNSH3000,FNSH4000
.                            Code    Alpha     Dept     Menu
.
. ******* CODE sequence *******
.
FNSH1000  MOVE      "27",CCOL
          MOVE      "7",CVERT
          MOVE      ZERO,HTOP
          CALL      KIBPSA00
.
          DISPLAY   *PCCOL:CVERT,*V2LON,SECODE,*HOFF,SP4,SECUSER;
          MOVE      SECODE,ENDDCODE
.
FNSH1100  MATCH     SP4,SECODE
          GOTO      FNSH1300 IF EQUAL
.
          PACK      KEY4,ENDDCODE
          CALL      RDPASS1
          BRANCH    OVRCD,FNSH1900
.
          MATCH     STRTCODE,ENDDCODE
          GOTO      FNSH1200 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Finish Code Must be Greater than Start Code - ";
          CALL      HITENTER
          GOTO      FNSH1000
.
FNSH1200  DISPLAY   *P35:7,SECUSER
          MOVE      ENDDCODE,CODESTOP       * set print end code
          GOTO      FNSH9500
.
FNSH1300  DISPLAY   *P27:7,*V2LON,"Finish",*EL;
          MOVE      "zzzz",ENDDCODE
          MOVE      "Finish",CODESTOP       * set print end code
          GOTO      FNSH9500
.
FNSH1900  DISPLAY   *P1:24,*EL,*B,"Code Not on File - ";
          CALL      HITENTER
          GOTO      FNSH1000
.
. ******* ALPAHABET sequence *******
.
FNSH2000  KEYIN     *P27:7,*DV,UNDLN30:
                    *P27:7,*V2LON,ENDDALPA:
                    *P27:7,*V2LON,*DV,ENDDALPA;
.
          RESET     ENDDALPA
          ENDSET    ENDDALPA
          APPEND    SP30,ENDDALPA
          RESET     ENDDALPA
.
          MOVE      ENDDALPA,CODESTOP       * set print end code
          MATCH     SP30,ENDDALPA
          GOTO      FNSH2200 IF EQUAL
.
          MATCH     STRTALPA,ENDDALPA
          GOTO      FNSH2200 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Finish Name Must be Greater than Start":
                                  "Name - ";
          CALL      HITENTER
          GOTO      FNSH2000
.
FNSH2200  DISPLAY   *P27:7,*V2LON,"Finish",*EL;
          MOVE      "Finish",CODESTOP       * set print end code
          GOTO      FNSH9500
.
. ******* DEPARTMENT sequence *******
.
FNSH3000  MOVE      "027",CCOL
          MOVE      "07",CVERT
          MOVE      ZERO,CKEYTYP
.
          DISPLAY   *PCCOL:CVERT,*EL;
          CALL      KIBDPA00
          BRANCH    EXIT,FNSH3200,FNSH9000
.
          PACK      ENDDDEPT,PRXCATA,SP3
          DISPLAY   *P35:7,PRXDESC
          MOVE      ENDDDEPT,CODESTOP       * set print end code
.
          MATCH     STRTDEPT,ENDDDEPT
          GOTO      FNSH9500 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Finish Code Must be Greater than Start":
                                  "Code - ";
          CALL      HITENTER
          GOTO      FNSH3000
.
FNSH3200  DISPLAY   *P27:7,*V2LON,"Finish",*EL;
          MOVE      "zzz",ENDDDEPT
          MOVE      "Finish",CODESTOP       * set print end code
          GOTO      FNSH9500
.
. ******* MENU order *******
.
FNSH4000  MOVE      ZERO,CKEYTYP
          MOVE      "027",CCOL
          MOVE      "07",CVERT
          MOVE      ZERO,CKEYTYP
          COMPARE   ONE,COPTION
          GOTO      FNSH4100 IF NOT EQUAL
          MOVE      ONE,CKEYTYP
.
FNSH4100  CALL      KIBMNA00
          MOVE      IBMNMENU,ENDDMENU
.
          ENDSET    IBMNMENU
          APPEND    SP3,IBMNMENU
          RESET     IBMNMENU
.
          MATCH     SP3,IBMNMENU
          GOTO      FNSH4300 IF EQUAL
.
          PACK      KEY3,ENDDMENU,SP3
          CALL      RDIBMEN1
          BRANCH    OVRCD,FNSH4150
.
          MATCH     STRTMENU,ENDDMENU
          GOTO      FNSH4200 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Finish Code Must be Greater than Start":
                                  "Code - ";
          CALL      HITENTER
          GOTO      FNSH4000
.
FNSH4150  DISPLAY   *P1:24,*EL,*B,"Menu Code Not on File - ";
          CALL      HITENTER
          GOTO      FNSH4000
.
FNSH4200  DISPLAY   *P27:7,*V2LON,ENDDMENU,*HOFF:
                    *P35:7,IBMNDESC
          MOVE      ENDDMENU,CODESTOP       * set print end code
          GOTO      FNSH9500
.
FNSH4300  DISPLAY   *P27:7,*V2LON,"Finish",*EL;
          MOVE      "zzzzzzzz",ENDDMENU
          MOVE      "Finish",CODESTOP       * set print end code
          GOTO      FNSH9500
.
FNSH9000  MOVE      TRUE,EXIT
          DISPLAY   *P27:7,*EL;
          GOTO      FNSH9999
.
FNSH9500  MOVE      FALSE,EXIT
.
FNSH9999  RETURN
+
.**************************************************************************
.*                                   SEL0000                              *
.*                         select field to modify or post                 *
.**************************************************************************
.
SEL0000    MOVE      FALSE,EXIT
           CALL      MAINQST
           COMPARE   ZERO,CCITEM                * ok to post
           GOTO      SEL9999 IF EQUAL
           COMPARE   "-1",CCITEM                * cancel option
           GOTO      SEL9000 IF EQUAL
           BRANCH    CCITEM,SEL1000,SEL2000,SEL3000,SEL4000
.
           BEEP
           GOTO      SEL0000
.
SEL1000    CALL      RSEQ0000                        * Keyin Report Sequence
           GOTO      SEL0000
.
SEL2000    CALL      SMDT0000                        * Keyin Summary, Detail
           GOTO      SEL0000
.
SEL3000    CALL      STRT0000                        * Keyin Start of Range
           GOTO      SEL0000
.
SEL4000    CALL      FNSH0000                        * Keyin Finish of Range
           GOTO      SEL0000
.
SEL9000    MOVE      TRUE,EXIT
.
SEL9999  RETURN
.
.********************************************************************** 
.*                            CODE0000                                *
.*                       Process in Code Order                        *
.********************************************************************** 
CODE0000  DISPLAY   *P1:24,*EL:
                    *P20:24,"Processing : ";
.
          PACK      KEY4,STRTCODE,SP30
          CALL      RDPASS1
          COMPARE   ZERO,OVRCD
          GOTO      CODE2000 IF EQUAL
.
CODE1000  CALL      RDKPASS1
          BRANCH    OVRCD,CODE9999
.
CODE2000  MATCH     SECODE,ENDDCODE
          GOTO      CODE9999 IF LESS
.
          DISPLAY   *P33:24,*EL,*V2LON,SECODE;
          PACK      KEY4,SECODE
          CALL      WRTEMP1
          GOTO      CODE1000
.
CODE9999  RETURN
.
.********************************************************************** 
.*                            DEPT0000                                *
.*                   Process in Department Order                      *
.********************************************************************** 
DEPT0000  DISPLAY   *P1:24,*EL:
                    *P20:24,"Processing : ";
.
          PACK      KEY4,SP4
          CALL      RDSPASS1
.
DEPT1000  CALL      RDKPASS1
          BRANCH    OVRCD,DEPT9999
.
          MATCH     STRTDEPT,SECDEPT
          GOTO      DEPT1000 IF LESS
.
          MATCH     SECDEPT,ENDDDEPT
          GOTO      DEPT1000 IF LESS
.
          DISPLAY   *P33:24,*EL,*V2LON,SECDEPT;
          PACK      KEY7,SECDEPT,SECODE,SP10
          CALL      WRTEMP1
          GOTO      DEPT1000
.
DEPT9999  RETURN
.
.********************************************************************** 
.*                            ALPH0000                                *
.*                   Process in ALphabetic Order                      *
.********************************************************************** 
ALPH0000  DISPLAY   *P1:24,*EL:
                    *P20:24,"Processing : ";
.
          PACK      KEY39,STRTALPA,SP30,SP30
          CALL      RDSPASS2
.
ALPH1000  CALL      RDKPASS2
          BRANCH    OVRCD,ALPH9999
.
          MATCH     SP30,ENDDALPA
          GOTO      ALPH2000 IF EQUAL
.
          MATCH     SECUSER,ENDDALPA
          GOTO      ALPH9999 IF LESS
.
ALPH2000  DISPLAY   *P33:24,*EL,*V2LON,SECUSER;
          PACK      KEY39,SECUSER,SECODE,SP20
          CALL      WRTEMP1
          GOTO      ALPH1000
.
ALPH9999  RETURN
.
.********************************************************************** 
.*                            MENU0000                                *
.*                     Process in Menu Order                          *
.********************************************************************** 
MENU0000  DISPLAY   *P1:24,*EL:
                    *P20:24,"Processing : ";
.
          PACK      KEY4,SP4
          CALL      RDSPASS1
.
MENU1000  CALL      RDKPASS1
          BRANCH    OVRCD,MENU9999
.
          MATCH     STRTMENU,SECMNNUM
          GOTO      MENU1000 IF LESS
.
          MATCH     SECMNNUM,ENDDMENU
          GOTO      MENU1000 IF LESS
.
          DISPLAY   *P33:24,*EL,*V2LON,SECMNNUM;
          PACK      KEY7,SECMNNUM,SECODE,SP10
          CALL      WRTEMP1
          GOTO      MENU1000
.
MENU9999  RETURN
.
.********************************************************************** 
.*                            PRNT0000                                *
.*                     Print Data From Temp File                      *
.********************************************************************** 
.
PRNT0000  DISPLAY   *P1:24,*EL:
                    *P20:24,"Printing : ";
.
          MOVE      ZERO,CPAGENO
          CALL      HEAD0000                * New Page
.
          PACK      KEY4,SP4
          CALL      RSTEMP1
.
PRNT1000  CALL      RKTEMP1
          BRANCH    OVRCD,PRNT9000
.
          DISPLAY   *P31:24,*EL,*V2LON,SECODE,SP1,*HOFF,SECMNNUM;
.
          MATCH     ANSS,SUMMDETL
          GOTO      PRNT2000 IF EQUAL       * print summary
.
          MATCH     SP3,SECMNNUM
          GOTO      PRNT1100 IF NOT EQUAL   * have a menu code
.
          CALL      STND0000                * Standard IBA User Menu
          GOTO      PRNT1000
.
PRNT1100  CALL      DETL0000                * Display Detail of Specific Menu
          GOTO      PRNT1000
.
PRNT2000  CALL      LINE0000                * display basic menu
          GOTO      PRNT1000
.
PRNT9000  CALL      TAIL0000
.
PRNT9999  RETURN
.
.********************************************************************** 
.*                            STND0000                                *
.*                 Print the Standard IBA User Menu                   *
.********************************************************************** 
.
STND0000  MOVE      SECUSER,DIM33
          MOVE      SECODE,DIM4
.
          MOVE      "*** Dept Unknown ***",PRXDESC
          PACK      KEY5,SECDEPT,SP30
          CALL      RDICOD1
.
          MOVE      "IBA Menu            ",IBMNDESC
          PACK      KEY7,SECODE,SP7
          CALL      RSIBUSE1
.
STND1000  CALL      RKIBUSE1
          BRANCH    OVRCD,STND9999
.
          MATCH     SECODE,IBUSCODE
          GOTO      STND9999 IF NOT EQUAL
.
          MOVE      "** System Unknown **",IBSMNATV
          PACK      KEY3,IBUSSYST
          CALL      RDIBSMA1
.
          PRINT     *1,PIPE,SP1,DIM4:
                    *8,PIPE,SP1,DIM33:
                    *43,PIPE,SP1,SECDEPT,SP1,PRXDESC:
                    *69,PIPE,SP1,IBMNDESC:
                    *91,PIPE,SP1,IBSMNUMB,SP1,IBSMNATV:
                    *118,PIPE,SP1,IBUSLEVL,SP1,PIPE,SP1,IBUSMPRO:
                    *132,PIPE
.
          UNPACK    SP30,SECDEPT,PRXCODE,IBMNMENU,DIM4
          PACK      DIM33,SP30,SP30         * Clear Var's after 1st Detail Rec.
          PACK      PRXDESC,SP30
          PACK      IBMNDESC,SP30
.
          ADD       ONE,NOOFRECS
          ADD       ONE,CLNO
.
          COMPARE   FIFTY4,CLNO
          GOTO      STND1000 IF LESS
.
          CALL      HEAD0000
.
          MOVE      SECUSER,DIM33
          MOVE      SECODE,DIM4
.
          MOVE      "*** Dept Unknown ***",PRXDESC
          PACK      KEY5,SECDEPT,SP30
          CALL      RDICOD1
          MOVE      "IBA Menu            ",IBMNDESC
          GOTO      STND1000
.
STND9999  RETURN
.
.********************************************************************** 
.*                            DETL0000                                *
.*                Print the Detail Report for Record                  *
.********************************************************************** 
.
DETL0000  MOVE      SECUSER,DIM33
          MOVE      SECODE,DIM4
.
          MOVE      "*** Dept Unknown ***",PRXDESC
          PACK      KEY5,SECDEPT,SP30
          CALL      RDICOD1
.
          MOVE      "*** Menu Unknown ***",IBMNDESC
          PACK      KEY3,SECMNNUM
          CALL      RDIBMEN1
.
          PACK      KEY6,SECMNNUM,SP30
          CALL      RSIBMSL1
.
DETL1000  CALL      RKIBMSL1
          BRANCH    OVRCD,DETL9999
.
          MATCH     SECMNNUM,IBMSMENU
          GOTO      DETL9999 IF NOT EQUAL
.
          MOVE      "** System Unknown **",IBSMNATV
          PACK      KEY3,IBMSNUMB
          CALL      RDIBSMA1
.
          MOVE      ASK,IBUSLEVL
          PACK      KEY7,SECODE,IBMSNUMB
          CALL      RDIBUSE1
.
          PRINT     *1,PIPE,SP1,DIM4:
                    *8,PIPE,SP1,DIM33:
                    *44,PIPE,SP1,SECDEPT,SP1,PRXDESC:
                    *71,PIPE,SP1,IBMNMENU,SP1,IBMNDESC:
                    *98,PIPE,SP1,IBMSNUMB,SP1,IBSMNATV:
                    *125,PIPE,SP2,IBUSLEVL:
                    *132,PIPE
.
          UNPACK    SP30,SECDEPT,PRXCODE,IBMNMENU,DIM4
          PACK      DIM33,SP30,SP30         * Clear Var's after 1st Detail Rec.
          PACK      PRXDESC,SP30
          PACK      IBMNDESC,SP30
.
          ADD       ONE,NOOFRECS
          ADD       ONE,CLNO
.
          COMPARE   FIFTY4,CLNO
          GOTO      DETL1000 IF LESS
.
          CALL      HEAD0000
.
          MOVE      SECUSER,DIM33
          MOVE      SECODE,DIM4
.
          MOVE      "*** Dept Unknown ***",PRXDESC
          PACK      KEY5,SECDEPT,SP30
          CALL      RDICOD1
.
          MOVE      "*** Menu Unknown ***",IBMNDESC
          PACK      KEY3,SECMNNUM
          CALL      RDIBMEN1
          GOTO      DETL1000
.
DETL9999  RETURN
.
.********************************************************************** 
.*                            LINE0000                                *
.*                 Print a Summary Line for Record                    *
.********************************************************************** 
LINE0000  MOVE      SP30,DIM20
          MOVE      SP30,DIM17A
          MOVE      SP30,DIM17B
          MOVE      SECUSER,DIM20
.
          MOVE      "* Dept. Unknown *",PRXDESC
          PACK      KEY5,SECDEPT,SP30
          CALL      RDICOD1
          MOVE      PRXDESC,DIM17A
.
          MOVE      "* Menu  Unknown *",IBMNDESC
          PACK      KEY3,SECMNNUM
          CALL      RDIBMEN1
          MOVE      IBMNDESC,DIM17B
.
          PRINT     *1,PIPE,SP1,SECODE:
                    *8,PIPE,SP1,DIM20:
                    *32,PIPE,SP1,SECDEPT,SP1,DIM17A:
                    *56,PIPE,SP1,SECMNNUM,SP1,DIM17B:
                    *80,PIPE
.
          ADD       ONE,NOOFRECS
          ADD       ONE,CLNO
.
          COMPARE   FIFTY4,CLNO
          CALL      HEAD0000 IF NOT LESS
.
LINE9999  RETURN
.
.********************************************************************** 
.*                            HEAD0000                                *
.*                     Print the Page Heading                         *
.********************************************************************** 
.
HEAD0000  MOVE      EIGHT,CLNO
          MOVE      ZERO,CNOUNDLN
          CLOCK     TIME,CTIMEIS
.
          MATCH     ANSD,SUMMDETL
          GOTO      HEAD5000 IF EQUAL
.
          CALL      HEAD80
          PRINT     *20,"Range : ",*+,CODESTRT," to ",*+,CODESTOP
          PRINT     *N,*1,ASK,DASH78,ASK:
                    *N,*1,PIPE," Code":
                    *8,PIPE," Name":
                    *32,PIPE," Department":
                    *56,PIPE," Menu":
                    *80,PIPE:
                    *N,*1,ASK,DASH78,ASK
          GOTO      HEAD9999
.
HEAD5000  CALL      HEAD132
          PRINT     *40,"Range : ",*+,CODESTRT," to ",*+,CODESTOP
          PRINT     *N,*1,ASK,DASH65,DASH65,ASK:
                    *N,*1,PIPE," Code":
                    *8,PIPE," Name":
                    *43,PIPE," Department":
                    *69,PIPE," Menu":
                    *91,PIPE," System":
                    *118,PIPE,"Sec":
                    *122,PIPE," Menu": 
                    *132,PIPE:
                    *N,*1,ASK,DASH65,DASH65,ASK
.
HEAD9999  RETURN
.
.********************************************************************** 
.*                            TAIL0000                                *
.*                       Print the Page Tail                          *
.********************************************************************** 
TAIL0000  MATCH     ANSD,SUMMDETL
          GOTO      TAIL5000 IF EQUAL
.
          PRINT     *1,PIPE:
                    *8,PIPE:
                    *32,PIPE:
                    *56,PIPE:
                    *80,PIPE:
                    *N,*1,ASK,DASH78,ASK
          GOTO      TAIL9000
.
TAIL5000  PRINT     *1,PIPE:
                    *8,PIPE:
                    *43,PIPE:
                    *69,PIPE:
                    *91,PIPE:
                    *118,PIPE:
                    *122,PIPE: 
                    *132,PIPE:
                    *N,*1,ASK,DASH65,DASH65,ASK
.
TAIL9000  PRINT     *N,*N,"Number of Records = ",NOOFRECS,*N;
.
TAIL9999  RETURN
.
.********************************************************************** 
.*                     I/O Routine for TEMP File                      *
.********************************************************************** 
.
RSTEMP1   RESET     KEY4
          READ      TEMP1,KEY4;;
          RETURN
.
RATEMP1   RESET     KEY4
          MOVE      ZERO,OVRCD
          READ      TEMP1,KEY4;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP1   RESET     KEY4
          MOVE      ZERO,OVRCD
          READ      TEMP1,KEY4;SECODE,SECUSER,SECDEPT,SECMNNUM
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    TEMP1;SECODE,SECUSER,SECDEPT,SECMNNUM
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMP1
          MOVE      ZERO,OVRCD
          READKP    TEMP1;SECODE,SECUSER,SECDEPT,SECMNNUM
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTEMP1   UPDATE    TEMP1;SECODE,SECUSER,SECDEPT,SECMNNUM
          GOTO      UPDFLOCK IF LOCKED
          RETURN
.
WRTEMP1   RESET     KEY4
          WRITE     TEMP1,KEY4;SECODE,SECUSER,SECDEPT,SECMNNUM
          RETURN
.
DETEMP1   RESET     KEY4
          DELETE    TEMP1,KEY4
          RETURN
.
.********************************************************************** 
.*                        I/O Routines                                *
.********************************************************************** 
.
          INC       IBADSCOD
          INC       IBADEPKY
          INC       IBAPASIO/INC
          INC       IBAMENIO/INC
          INC       IBAMENKY
          INC       IBAMSLIO/INC
          INC       IBAPASKY
          INC       IBASECIO/INC
          INC       IBASMAIO/INC
          INC       IBAUSEIO/INC
          INC       STD001IO
          INC       STDHLPCD
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
.............................................................................
