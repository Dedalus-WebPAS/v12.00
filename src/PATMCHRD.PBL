.******************************************************************************
.*                                  PATMCHRD                                  *
.*                         Get Miscellaneous Charges record                   *
.*                                                                            *
.* Requires:   KEY29 populated with -                                         *
.*                      - Claim Code (usually from ACLAIM)                    *
.*                      - Health Fund (usually AFUNDH)                        *
.*                      - H/F Table Type (converted from "patfn1af" -  AFNDTB)*
.*                      - Miscellaneous Charge code                           *
.*                      - Service Date (defaults to current date)             *
.*                                                                            *
.* Returns:    EXIT  0 = valid Misc.Item in "patmchgf"                        *
.*                   1 = Item not found                                       *
.*             WKMCINAC - Item Inactive flag - 0=Active, 1=Inactive           *
.*             WKMCXXDT - Item date range -    0=OK,     1=out of range       *
.*                                                                            *
.* Modifications:                                                             *
.******************************************************************************
PATMCHRD
....                          * this routine should be in every module
....      MOVE      SP70,PTHFBCAT         * convert "H/F Table" to "Table Type"
....      PACK      KEY14,WKMCAFND,WKMCAFTB,SP20
....      CALL      RDFUND1
....      MOVE      PTHFBCAT,WKMCTYPE       * insert new "Table Type"
.
.
PATMCHRE  MOVE      ZERO,EXIT
          MOVE      ZERO,WKMCINAC           * initialise Inactive flag
          MOVE      ZERO,WKMCXXDT           * date range error flag
.
          UNPACK    KEY29,WKMCACLM,WKMCAFND,WKMCTYPE,WKMCCODE,WKMCDATE
          MATCH     SP8,WKMCDATE            * check blank date
          IF        @EQUAL
            PACK      WKMCDATE,CCC,CYY,CMM,CDD,SP10 * default to current date
            REP       " 0",WKMCDATE
            PACK      KEY29,WKMCACLM,WKMCAFND,WKMCTYPE,WKMCCODE,WKMCDATE,SP10
          ENDIF

MCHRE000  UNPACK    KEY29,KEY21,KEY8        * set up for validation
          CALL      RDMCHG1
          IF        OVRCD = 0
            MATCH     "1",PTMCACTV          * Inactive ?
            GOTO      MCHRE900 IF NOT EQUAL * no
            MOVE      ONE,WKMCINAC          * set Inactive flag
          ENDIF
.
          CALL      RDPMCHG1
          BRANCH    OVRCD,MCHRE990
.
          PACK      KEY21A,MCLMCOD,MHFUND,PTMCHFTT,MCHARGE
          MATCH     KEY21,KEY21A
          GOTO      MCHRE990 IF NOT EQUAL
.
          MOVE      ZERO,WKMCINAC           * reset Inactive flag
.
          MATCH     "1",PTMCACTV            * Inactive ?
          GOTO      MCHRE970 IF EQUAL
.
          MATCH     PTMCEFDT,WKMCDATE       * effective date => serv. date ?
          GOTO      MCHRE980 IF LESS        * yes
.
          MATCH     SP8,PTMCETDT
          IF        !@EQUAL
            MATCH     KEY8,PTMCETDT         * service Date => Eff.To Date ?
            GOTO      MCHRE980 IF LESS
          ENDIF
.
MCHRE900  MOVE      ZERO,EXIT
          GOTO      MCHRE999
.
MCHRE970  MOVE      ONE,WKMCINAC            * set Inactive flag
          GOTO      MCHRE990
.
MCHRE980  MOVE      ONE,WKMCXXDT            * set Date Range error flag
MCHRE990  MOVE      ONE,EXIT
          MOVE      SP70,MDESC
          MOVE      SP70,MMSCGRP
          MOVE      ZERO,MPATPOR
          MOVE      ZERO,MHFPOR
.
MCHRE999  MOVE      EXIT,OVRCD              * just in case I miss one.
          RETURN
