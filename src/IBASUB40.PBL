. **********************************************************************
. *   System        :  Inventory                                       * 
. *   Program       :  IBASUB40                                        *
. *   Description   :  VHA & BLS EDI Interface                         *
. **********************************************************************
. *   Date          :  06.03.94                                        *
. *   Programmer    :  B.G.Ackland                                     *
. *                    Copied from SUB20 for Quote 7956 STV            *
. *   Modifications :                                                  *
. **********************************************************************
. * V10.03.01 25/02/2013  Ania P       CAR 281021                      *
. *           Removed unnecessary modification of constants.           *
. * V9.04.01  08/04/2005  Peter Vela   CAR 59696                       *
. *           Changed commodity group from DIM 5 to DIM 6              *
. * V9.03.01  23/07/2004  Mike Laming  CAR 43474                       *
.             Change UNCEA200 & USCEA200 to not write to "apscebaf" if qty = 0
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.09.B03 07.03.2001 Sandra Barcham                                *
. *           Change VHA to HSA                                        *
. * VF.09.B02 02.03.2001 Sandra Barcham                                *
. *           Add in vha customer code 6,7,8 & 9                       *
. *           srf 9088                                                 *
. * VF.09.B01 24.11.2000 Charles Handaya                               *
. *           Recompiled (Modification of Warehouse Security)          *
. **********************************************************************
. * VF.01.02 16.08.2000 Sandra Barcham                                 *
. *          Add in vha customer code 4 & 5                            *
. *          srf 4940                                                  *
. * VF.01.01 25.05.2000 Sandra Barcham                                 *
. *          Open IBAGEDA1 file                                        *
. *          Open SINLTTA1 file                                        *
. **********************************************************************
. * VF.00.02 05.01.2000 Charles Handaya                                *
. *          Recompiled for APSMASIO change                            *
. *          29.12.1999 Charles Handaya                                *
. *          Recompiled for Fixing Audit Date (CCYYMMDD)               *
. * VF.00.01 02.11.1999 Sandra Barcham                                 *
. *          Use X for exit instead of E                               *
. **********************************************************************
.
.$$$$$$
. VHA & BLS EDI TRANSMISSION (IBASUB40)
. -------------------------------------
.
. Check port in control file and if not in use then write to the control file
. thus setting exclusive use of this program.
. Keyin the originator code and validate
. Display the purchase orders awaiting transmission by looping through the
. invtrnaf file.
. Select an item, Transfer All items in the invtrnaf file or Connect to SOS
. If an item is chosen then transfer this record only.
. Transfer all records with status >= 2 if Transfer All was chosen.
. Connect to SOS if Connect was chosen.
.
. END
.
.$$$$$$
          INC       STDGENDF
.
          INC       APSCEAFD/INC
          INC       APSCEBFD/INC
          INC       APSCIOFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSORDFD/INC
          INC       APSSNTFD/INC
          INC       APSSUBFD/INC
.
          INC       FMSAMAFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF
          INC       FMSLMCFD/INC
          INC       FMSTUPFD/INC
.
          INC       IBAGSTFD/INC
          INC       IBAGEDFD/INC
.
          INC       SINTMPDF/INC             * variable file
.
          INC       SINCCAFD/INC
          INC       SINCGAFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCIHFD/INC
          INC       SINCODFD/INC
          INC       SINCONFD/INC             * Control file
          INC       SINFACFD/INC
          INC       SINLTTFD/INC
          INC       SINNATFD/INC             * Nato Code File
          INC       SINORIFD/INC             * P/O originator details file
          INC       SINPERFD/INC
          INC       SINPOAFD/INC             * Purchase order file A
          INC       SINPOCFD/INC             * Purchase order file - line items
          INC       SINSOSFD/INC             * ASCII Send Transfer file
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTRNFD/INC             * Transmission control file
          INC       SINVHAFD/INC             * ASCII Receive Transfer file
          INC       SINWARFD/INC
.
.***************************************************************************
.*                              CONSTANTS                                  *
.***************************************************************************
BLSCREAT  INIT      "blscreate"
CEAFILE   FORM      1
FORM3     FORM      3
F12P4     FORM      12.4
F12P4A    FORM      12.4
MODQTY    FORM      12.2
SAVECT    FORM      12.4
SAVGST    FORM      12.4
.
SITEABBR  DIM       3
SITEAVHA  INIT      "VHA"
SITEABLS  INIT      "BLS"
.
SITE      DIM       5
SITEVHA   INIT      "V.H.A"
SITEBLS   INIT      "B.L.S"
.
SITETYPE  FORM      2
.***************************************************************************
.*                            GLOBAL VARIABLES                             *
.***************************************************************************
CATNAM25  DIM       25
SUPNAM25  DIM       25
.
CATCDSC   DIM       30
CATCODE   DIM       6
CATCSUP   DIM       20
TEMPDESC  DIM       30
ROW       FORM      2
.
LASTORD    DIM       20
WGIVEN    FORM      10  *** HOW MUCH STOCK ACTUALLY ORDERED
WORDER    FORM      10
LSTDIG    FORM      1
.
INVVHAAF  FILE     ASCII, FIXED=89
.
SSIVHDAT   DIM       6      6        1     Date
SSIVHFNO   DIM       3      3        7     File Number
SSIVHORD   DIM       20     7        10    Order Reference
SSIVHLIN   DIM       3      3        17    Line Number
SSIVHQTY   FORM      7      5        20    Quantity Ordered
SSIVHSUN   DIM       15     15       25    Supply Unit
SSIVHCOS   FORM      9.4    8        40    Cost
SSIVHPAT   DIM       20     20       48    Part Number (customer code)
SSIVHSTA   DIM       1      1        68    Status 0 = Load 1 = Overwritten
.                                                 2 = Processed
SSIVHCOR   DIM       7      7        69    Purchase Order Created
SSIVHVEN   DIM       20     20       69    Vendor Code
SSIVHTYPE  FORM      2      2        69    Supplier being used 0-VHASOS,1-Barwon
SSIVHSPA   DIM       30     30       71
.
CHOICE    DIM       2                        
.
FLAG1     FORM      1
FLAG2     FORM      1
FLAG3     FORM      1
FORM7     FORM      7
.
ITEM      FORM      2                        * P/O number
.
PORDER1   DIM       7                        * Purchase order 1
PORDER2   DIM       7                        * Purchase order 2
PORDER3   DIM       7                        * Purchase order 3
PORDER4   DIM       7                        * Purchase order 4
PORDER5   DIM       7                        * Purchase order 5
PORDER6   DIM       7                        * Purchase order 6
PORDER7   DIM       7                        * Purchase order 7
PORDER8   DIM       7                        * Purchase order 8
PORDER9   DIM       7                        * Purchase order 9
PORDER10  DIM       7                        * Purchase order 10
PORDER11  DIM       7                        * Purchase order 11
PORDER12  DIM       7                        * Purchase order 12
PORDER13  DIM       7                        * Purchase order 13
PORDER14  DIM       7                        * Purchase order 14
PORDER15  DIM       7                        * Purchase order 15
.
SAVCREA   DIM       30                       * Reason for cancellation
SAVORG    DIM       3                        * Transmission/Cancellation orig.
.
TODAY     DIM       8
TRANFILE  DIM       40
KILLFILE  INIT      "X*"
RM        INIT      "rm "
COMMAND   DIM       80
.
ADDCAT    FORM      "0"
IHATEU    FORM      1
PFORM3    FORM      3
PFORM7    FORM      7
PFORM7A   FORM      7
SKEY57    DIM       57
STOCKTYP  FORM      1        * 0=unknown, 1=all stock, 2=all non-stock
CATSTK    DIM       57
CATNSTK   DIM       57
CATLOGS   DIM       7
CATLOGN   DIM       7
UNITS     DIM       15
UNITN     DIM       15
TEMPTYP   FORM      1
XFOUND    FORM      1
SAV1      DIM       57
SAV2      DIM       57
SAV3      DIM       57
SAV4      DIM       57
SAV5      DIM       57
SAV6      DIM       57
SAV7      DIM       57
SAV8      DIM       57
SAV9      DIM       57
.
PARTCODE  DIM       20
HEADMESS  DIM       25
.
PRGID     INIT      "IBASUB40"                * program id
PRGNAM    INIT      "H.S.A. & B.L.S EDI Interface"    * program name
VERSION   INIT      "V12.00.00"
.
.***************************************************************************
.*                              MAINLINE                                   *
.*                            Controlling Logic                            *
.***************************************************************************
ML0000    CALL      INIT0000                 * display header and open files
          CALL      ONAT0000                 * Open nato file if required
          CALL      SCOD0000                 * Determine Interface To
          BRANCH    EXIT,ML9999
.
          IF        SNCOMMOD<>1
            CALL      PORT0000                 * Set port in control file
            BRANCH    EXIT,ML9999              * Program in use Exit
          ENDIF
.
ML1000    CALL      ORIG0000                 * Keyin originator code
          BRANCH    EXIT,ML9000              * User hit return
.
ML1500    CALL      PURC0000                 * Display and select purchase order
          BRANCH    FLAG3,ML9000             * User hit return
.
          BRANCH    EXIT,ML2000,ML4000,ML3000,ML5000,ML6000
.
.         Selected item
.
ML2000    CALL      SELT0000
          GOTO      ML1000
.
.         Transfer all
.
ML3000    CALL      TALL0000
          GOTO      ML1000
.
.         Connect to SOS
.
ML4000    CALL      CSOS0000
          CALL      DISPHEAD                 * Redisplay screen header
          GOTO      ML1000
.
.         Direct Ordering from SOS
.
ML5000    CALL      DSOS0000
          CALL      DISPHEAD                 * Redisplay screen header
          GOTO      ML1000
.
.
.         Load Order Acknowledgements
.
ML6000    CALL      LOAD0000
.
          CALL      DISPHEAD                 * Redisplay screen header
          GOTO      ML1000
.
ML9000    
          IF        SNCOMMOD<>1
            CALL      REST0000                 * Reset port in control file
          ENDIF
.
ML9999    CHAIN     PGM                      * chain back to program
.
.*************************************************************************
.*                                  INIT0000                             *
.*                 Display screen headings and open files                *
.* Called by : ML0000                                                    *
.*************************************************************************
INIT0000  CALL      DISPHEAD                 * display screen headings
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf";
.
          DISPLAY   *P64:24,"ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf";
.
          DISPLAY   *P64:24,"sinvhaaf";
          OPEN      SINVHAA1,"sinvhaaf"
          OPEN      SINVHAA2,"sinvhaaf"
.
          READ      CONTROLF,TWENTY3;*143,HDEFWH
.
          READ      CONTROLF,TWENTY4;*121,HSTRORD,HFINORD,*228,SNCOVHA4:
                                          SNCOVHA5
.
          READ      CONTROLF,TWENTY5;HADEL1,HADEL2,HADEL3,HADEL4:
                                     HADEL5,HADEL6,HADEL7,HADEL8
.
          READ      CONTROLF,TWENTY6;*1,INCNVHAD,*30,INCNVHAC,INCNVHAS,*47:
                                     INCNVHAN,INCNTRAN,INCNCVHA:
                                     INCNTVHA,INCNVHAM,INCNTRAL:
                                     INCNTRPR,INCNSOSD:
                                     *206,INCNRVHA,HVHAPART
.
          PACK      HVHAPART,HVHAPART,SP70
          REP       " 0",HVHAPART
.
          READ      CONTROLF,SIXTY3;*86,INCNTVH2,INCNVHA2:
                                    *140,INCNOVHA,*183,SNCOVHA3,SNCOTVH3:
                                    *230,SNCOMMOD,*240,SNCOPURC
          PACK      INCNTVH2,INCNTVH2,SP70
          PACK      INCNVHA2,INCNVHA2,SP70
          PACK      SNCOTVH3,SNCOTVH3,SP70
          PACK      SNCOVHA3,SNCOVHA3,SP70
          PACK      SNCOVHA4,SNCOVHA4,SP70
          PACK      SNCOVHA5,SNCOVHA5,SP70
.
          READ      CONTROLF,SIXTY7;INCNBLSC,INCNBLSS,*18,INCNBLSN:
                                    INCNCBLS,INCNTBLS,INCNRBLS,INCNBLSM:
                                    INCNBLAL,INCNBLPR,INCNBLTD,INCNBLON:
                                    INCNBLPT,INCNOBLS,INCNBTRN,INCNBLSD:
                                    *216,SNCOVHA6,SNCOVHA7,SNCOVHA8,SNCOVHA9
          PACK      SNCOVHA6,SNCOVHA6,SP70
          PACK      SNCOVHA7,SNCOVHA7,SP70
          PACK      SNCOVHA8,SNCOVHA8,SP70
          PACK      SNCOVHA9,SNCOVHA9,SP70
.
.       ALL FILES WILL USE TODAYS DATE AS DATE OF USUAGE
.
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
.
          DISPLAY   *P64:24,"sinoriaf";
          OPEN      SINORIA1,"sinoriaf";
.
          DISPLAY   *P64:24,"sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf";
          READ      CONTROLF,TWENTY4;*210,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P64:24,"Opening sinaudpa";
            OPEN      SINAUDPA,"sinaudpa"
          ENDIF
.
          DISPLAY   *P64:24,"sinpocaf";
          OPEN      SINPOCA1,"sinpocaf";
          READ      CONTROLF,TWENTY4;*210,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P64:24,"Opening sinaudpc";
            OPEN      SINAUDPC,"sinaudpc"
          ENDIF
.
          DISPLAY   *P64:24,"sinccaaf";
          OPEN      SINCCAA1,"sinccaaf";
.
          DISPLAY   *P64:24,"sinciaaf";
          OPEN      SINCIAA1,"sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          OPEN      SINCIAA3,"sinciaaf"
.
          DISPLAY   *P64:24,"sincicaf";
          OPEN      SINCICA1,"sincicaf";
          OPEN      SINCICA2,"sincicaf";
          OPEN      SINCICA3,"sincicaf";
.
          DISPLAY   *P64:24,"sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          OPEN      SINCIEA2,"sincieaf"
          READ      CONTROLF,TWENTY4;*208,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P64:24,"Opening sinaudie";
            OPEN      SINAUDIE,"sinaudie"
          ENDIF
.
          DISPLAY   *P64:24,"sincifaf";
          OPEN      SINCIFA1,"sincifaf"
          OPEN      SINCIFA2,"sincifaf"
.
          DISPLAY   *P64:24,"sintrnaf";
          OPEN      SINTRNA1,"sintrnaf";
          OPEN      SINTRNA2,"sintrnaf";
.
          DISPLAY   *P64:24,"sincodaf";
          OPEN      SINCODA1,"sincodaf"
.
          DISPLAY   *P64:24,"sinlttaf";
          OPEN      SINLTTA1,"sinlttaf"
.
          DISPLAY   *P64:24,"sinoriaf";
          OPEN      SINORIA1,"sinoriaf"
.
          DISPLAY   *P64:24,"sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          OPEN      SINFACA2,"sinfacaf"
.
          DISPLAY   *P64:24,"sinperaf";
          OPEN      SINPERA1,"sinperaf"
          OPEN      SINPERA2,"sinperaf"
.
          DISPLAY   *P64:24,"sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
.
          DISPLAY   *P64:24,"sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
.
          DISPLAY   *P64:24,"sincihaf";
          OPEN      SINCIHA1,"sincihaf"
.
          DISPLAY   *P64:24,"sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
.
          DISPLAY   *P64:24,"sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
.
          DISPLAY   *P64:24,"apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
.
          DISPLAY   *P64:24,"apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
.
          DISPLAY   *P64:24,"apssubaf";
          OPEN      APSSUBA1,"apssubaf"
.
.----------------------------------------------------------------------
. HACCNT    FORM 1  Running the Accounting System          0=No
. HACCDATA  DIM  20 General Ledger Data Directory
. HDEFWH    DIM  5  Default Warehouse for Non Stock Items
. HORDDES   DIM  1  Order Number Alhpa Prefix
.----------------------------------------------------------------------
          MOVE      ONE,CEAFILE
          READ      CONTROLF,TWENTY3;*95,HACCNT,*124,HORDDES:
                                    *143,HDEFWH
          READ      CONTROLF,TWENTY4;*135,HACCDATA,*165,HLASTCIN
          COMPARE   ONE,HACCNT
          GOTO      INIT9999 IF NOT EQUAL
.
.---- GL interface is on ----
.
          CLOSE     CONTROLF           * get gl control file if possible
          MOVE      "controlf.txt",KEY12
          PACK      KEY80,HACCDATA,KEY12
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CONTROLF,KEY80
          TRAPCLR   IO
          IF        OVRCD=1
            OPEN      CONTROLF,"controlf"
          ENDIF
.
          CALL      RDFMCO50           * Read Account Code Parameters
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CLOSE     CONTROLF
          OPEN      CONTROLF,"controlf"
.
          MOVE      "fmsamaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSAMAA1,KEY80
.
          MOVE      "fmslmaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMAA1,KEY80
.
          MOVE      "fmslmcaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMCA1,KEY80
.
          MOVE      "fmscsaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSCSAA1,KEY80
.
          MOVE      "fmstupaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSTUPA1,KEY80
.
          MOVE      ZERO,OVRCD
          MOVE      "apscioaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCIOA1,KEY80
          TRAPCLR   IO
.
          MOVE      ZERO,OVRCD
          MOVE      "apsordaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSORDA1,KEY80
          TRAPCLR   IO
.
          MOVE      ZERO,OVRCD
          MOVE      "apsceaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCEAA1,KEY80
          TRAPCLR   IO
.
          MOVE      "apscebaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCEBA1,KEY80
          TRAPCLR   IO
          MOVE      OVRCD,CEAFILE
.
INIT9999  RETURN
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN

.****************************************************************************
.*                              PORT0000                                    *
.*  Set the port in controlf.  Only one user at a time can use this program *
.*  Called by : ML0000                                                      *
.**************************************************************************** 
PORT0000  MATCH     SP2,INCNTRAN             * Check if program in use
          GOTO      PORT9000 IF EQUAL
.
          MATCH     PORT,INCNTRAN            * Check if program in use
          GOTO      PORT9000 IF EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"Modem in use on port ":
                    *V2LON,INCNTRAN,SP2;
          CALL      HITENTER
          MOVE      ONE,EXIT 
          GOTO      PORT9999
.
.         Write port to controlf so only we can use the program.
.
PORT9000  MOVE      PORT,INCNTRAN
          IF        INSSVHA=1
            WRITAB    CONTROLF,TWENTY6;*50,INCNTRAN 
          ELSE
            WRITAB    CONTROLF,SIXTY7;*206,INCNTRAN 
          ENDIF
          MOVE      ZERO,EXIT 
.  
PORT9999  RETURN
.***************************************************************************
.*                             ORIG0000                                    *
.*  Keyin originator code                                                  *
.*  Called by : ML0000                                                     *
.***************************************************************************
ORIG0000  DISPLAY   *P1:4,*EF,"Originator :",*P60:4,"Extn :"; 
.
          MOVE      "14",CCOL
          MOVE      "4",CVERT
          MOVE      "0",CKEYTYP
          CALL      KSIORA00
          BRANCH    EXIT,ORIG9000
.
          DISPLAY   *P20:4,SIORNAME,*P67:4,SIOREXT;
          MOVE      SIORORIG,SAVORG
          MOVE      SIORORIG,SIPAORI
.
          MOVE      ZERO,EXIT
          GOTO      ORIG9999 
.  
ORIG9000  MOVE      ONE,EXIT
.
ORIG9999  RETURN
.
.****************************************************************************
.*                              PURC0000                                    *
.*  Display purchase orders                                                 *
.*  Called by : ML0000                                                      *
.****************************************************************************
PURC0000  
          DISPLAY   *P1:6,"Transmission Selected for ",HEADMESS:
                           " Supplier : ",*V2LON,INCNVHAS:
                    *P1:7,*V2LON,*ULON,"Item",*HOFF,SP3:
                          *V2LON,*ULON,"Order No.",*HOFF,SP4:
                          *V2LON,*ULON,"Date Created",*HOFF,SP2:
                          *V2LON,*ULON,"Originator",*HOFF,SP1:
                          *V2LON,*ULON,"Printed",*HOFF,SP1:
                          *V2LON,*ULON,"Supplier Code";
          CALL      DISP0000                 * Display purchase orders
.
          BRANCH    FLAG3,PURC9999
.
.         The user has either keyed in an item, T or C.  Check what they 
.         have keyed in and act on this
.
          CMATCH    ANSC,CHOICE
          GOTO      PURC1000 IF EQUAL
.
          CMATCH    ANST,CHOICE
          GOTO      PURC2000 IF EQUAL
.
          CMATCH    ANSD,CHOICE
          GOTO      PURC3000 IF EQUAL
.
          CMATCH    ANSL,CHOICE
          GOTO      PURC4000 IF EQUAL
.
          MOVE      ONE,EXIT                 * Valid item
          GOTO      PURC9999
.
PURC1000  MOVE      TWO,EXIT
          GOTO      PURC9999
.
PURC2000  MOVE      THREE,EXIT
          GOTO      PURC9999
.
PURC3000  MOVE      FOUR,EXIT
          GOTO      PURC9999
.
PURC4000  MOVE      FIVE,EXIT
          GOTO      PURC9999
.
PURC9999  RETURN
.
.************************************************************************
.*                           DISP0000                                   *
.*  Display purchase orders                                             *
.*  Called by : PURC0000                                                *
.************************************************************************
.
.         Loop through the SINTRNFD to get all awaiting P/O's
.
DISP0000  MOVE      ZERO,SITRSTAT            * Zero = awaiting transmission
          MOVE      SP7,SITRPURC
          MOVE      TWO,FLAG1
          MOVE      EIGHT,CVERT
.
DISP0050  PACK      KEY8,SITRSTAT,SITRPURC
          CALL      RSSITR2
.
DISP0060  MOVE      ONE,ITEM
.
DISP1000  CALL      RKSITR2
          BRANCH    OVRCD,DISP9500
.
          MATCH     "0",SITRSTAT
          GOTO      DISP9500 IF NOT EQUAL
.
          MOVE      SITRPURC,SIPAPON
          PACK      KEY7,SIPAPON,SP70
          CALL      RDSIPA1
          IF        OVRCD=1
            BEEP
            DISPLAY   *P60:CVERT,*V2LON,"Error in P/O ",SIPAPON;
          ENDIF
.
          MATCH     SIPASUP,INCNVHAS
          GOTO      DISP1000 IF NOT EQUAL
.
.         Save the key so we can access the record on the chosen item
.
          STORE     SITRPURC,ITEM,PORDER1,PORDER2,PORDER3,PORDER4,PORDER5:
                                  PORDER6,PORDER7,PORDER8,PORDER9,PORDER10:
                                  PORDER11,PORDER12,PORDER13,PORDER14,PORDER15
.
.         Item and P/O number
.
          DISPLAY   *P1:CVERT,*V2LON,ITEM,DOT,*HOFF,*P8:CVERT,SITRPURC;
.
.         Date created and originator
.
          UNPACK    SITREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P21:CVERT,CPCDATE,*P35:CVERT,SITRORG;
.
.         Printed status
.
          MATCH     SP70,SIPADPR
          IF        @EQUAL
            DISPLAY   *P46:CVERT,"No ",SP8,SIPASUP;
          ELSE
            DISPLAY   *P46:CVERT,"Yes",SP8,SIPASUP;
          ENDIF
.
.
DISP2000  ADD       ONE,ITEM 
          ADD       ONE,CVERT
          COMPARE   TWENTY3,CVERT
          GOTO      DISP1000 IF LESS
.
DISP9000  CALL      GETC0000                 * Get choice
          MOVE      EIGHT,CVERT
          DISPLAY   *P1:8,*EF                * Clear the screen
.
          BRANCH    FLAG3,DISP9999
.
          COMPARE   FOUR,FLAG2
          GOTO      DISP0060 IF EQUAL        * Next screen 
.
          COMPARE   FIVE,FLAG2               * Previous screen
          GOTO      DISP9999 IF NOT EQUAL    * Other opions chosen
.
.         In order to display the previous screen we need to go back 15
.         (which is the no. of records on one screen) + the no. of records
.         displayed on the current screen.  
.         ITEM has already been incremented so rather than adding 15, add 14.
.
DISP9050  MOVE      TEN4,FORM2
          ADD       ITEM,FORM2
.
          MOVE      ONE,ITEM
          MOVE      EIGHT,CVERT
          DISPLAY   *P1:8,*EF
.
DISP9100  CALL      RPSITR2                 * OVRCD shouldn't occur
          BRANCH    OVRCD,DISP0000
.
          MATCH     "0",SITRSTAT
          GOTO      DISP0000 IF NOT EQUAL
.
          SUB       ONE,FORM2 
          COMPARE   ZERO,FORM2
          GOTO      DISP9100 IF NOT EQUAL
.
          GOTO      DISP1000                 * Previous screen
.
.
.  ------  OVRCD routines  ------
.
.         FLAG1=2 if OVRCD occured on first screen.  Any other value of FLAG1
.         means that multiple screens were displayed.
.
DISP9500  COMPARE   TWO,FLAG1
          GOTO      DISP9505 IF NOT EQUAL
.
          MOVE      ONE,FLAG1
          CALL      GETC0000
          GOTO      DISP9999
.
DISP9505  MOVE      FOUR,FLAG1
          CALL      GETC0000
.
          BRANCH    FLAG3,DISP9999
.
.         Increment ITEM in preration for READKP.  This determines how many 
.         times we READKP.
.
          ADD       ONE,ITEM
          COMPARE   FIVE,FLAG2               * Previous screen chosen
          GOTO      DISP9050 IF EQUAL
.
DISP9999  RETURN
.
.*********************************************************************
.*                         GETC0000                                  *
.*  Get the choice                                                   *
.*  Called by : DISP0000                                             *
.*********************************************************************
.
.         FLAG1 determines what type of message to display on line 24
.
GETC0000  MOVE      ZERO,FLAG3               * Flag if user hit return 
          BRANCH    FLAG1,GETC1000,GETC2000,GETC3000,GETC4000
.
GETC1000  DISPLAY   *P1:23,*EL,"Select Item, (",*V2LON,ANST,*HOFF,")ransfer ":
                    "All, (",*V2LON,ANSC,*HOFF,")onnect for Enquiries, ":
                    "(",*V2LON,ANSD,*HOFF,")irect Ordering, ":
                    *P1:24,"(",*V2LON,ANSL,*HOFF,")oad Acknowledgements :";
.
GETC1100  KEYIN     *P27:24,*EL,*DV,UNDLN2,*P27:24,*V2LON,CHOICE,*EL
.
.         Set FLAG1 to determine what label we are to jump to next time we
.         CALL GETC0000
.
          TYPE      CHOICE
          GOTO      GETC1200 IF EQUAL        * Choice is numeric
.
          ENDSET    CHOICE
          APPEND    SP2,CHOICE
          RESET     CHOICE
.
          MATCH     SP2,CHOICE
          GOTO      GETC9995 IF EQUAL
.
          REP       UPPLOW,CHOICE
.
          CMATCH    ANST,CHOICE              * Transfer
          GOTO      GETC9000 IF EQUAL
.
          CMATCH    ANSC,CHOICE              * Connect
          GOTO      GETC9100 IF EQUAL
.
          CMATCH    ANSD,CHOICE              * Direct Orders
          GOTO      GETC9500 IF EQUAL
.
          CMATCH    ANSL,CHOICE              * Load Acknowledgements
          GOTO      GETC9600 IF EQUAL
.
          BEEP
          GOTO      GETC1100
.
.         Now check if choice is a valid number
.
GETC1200  MOVE      CHOICE,FORM2
.
          COMPARE   ZERO,FORM2
          GOTO      GETC1300 IF EQUAL
.
          COMPARE   ITEM,FORM2
          GOTO      GETC9200 IF LESS
.
GETC1300  BEEP 
          GOTO      GETC1100
.
.         Determine if there is actually anything to display on the next screen
.
GETC2000  CALL      RKSITR2
          BRANCH    OVRCD,GETC1000           * No there isn't
.
          MATCH     "0",SITRSTAT
          GOTO      GETC1000 IF NOT EQUAL
.
          CALL      RPSITR2                 * Go back 
.
          DISPLAY   *P1:23,*EL,"Select Item, (",*V2LON,ANST,*HOFF,")ransfer ":
                    "All, (",*V2LON,ANSC,*HOFF,")onnect for Enquiries, ":
                    "(",*V2LON,ANSD,*HOFF,")irect Ordering, ":
                    *P1:24,"(",*V2LON,ANSL,*HOFF,")oad Acknowledgements, ":
                    "(",*V2LON,ANSN,*HOFF,")ext :";
.
GETC2100  KEYIN     *P35:24,*EL,*DV,UNDLN2,*P35:24,*V2LON,CHOICE,*EL
.
.         Set FLAG1 to determine what label we are to jump to next time we
.         CALL GETC0000
.
          MOVE      THREE,FLAG1
.
          TYPE      CHOICE
          GOTO      GETC2200 IF EQUAL        * Choice is numeric
.
          ENDSET    CHOICE
          APPEND    SP2,CHOICE
          RESET     CHOICE
.
          MATCH     SP2,CHOICE
          GOTO      GETC9995 IF EQUAL
.
          REP       UPPLOW,CHOICE
.
          CMATCH    ANST,CHOICE              * Transfer
          GOTO      GETC9000 IF EQUAL
.
          CMATCH    ANSC,CHOICE              * Connect
          GOTO      GETC9100 IF EQUAL
.
          CMATCH    ANSN,CHOICE              * Next screen
          GOTO      GETC9300 IF EQUAL
.
          CMATCH    ANSD,CHOICE              * Direct Orders
          GOTO      GETC9500 IF EQUAL
.
          CMATCH    ANSL,CHOICE              * Load Acknowledgements
          GOTO      GETC9600 IF EQUAL
.
          BEEP
          GOTO      GETC2100
.
.         Now check if choice is a valid number
.
GETC2200  MOVE      CHOICE,FORM2
.
          COMPARE   ZERO,FORM2
          GOTO      GETC2300 IF EQUAL
.
          COMPARE   ITEM,FORM2
          GOTO      GETC9200 IF LESS
.
GETC2300  BEEP 
          GOTO      GETC2100
.
.         Determine if there is actually anything to display on the next screen
.
GETC3000  CALL      RKSITR2
          BRANCH    OVRCD,GETC4000           * No there isn't
.
          MATCH     "0",SITRSTAT
          GOTO      GETC4000 IF NOT EQUAL
.
          CALL      RPSITR2                 * Go back one record
. 
          DISPLAY   *P1:24,*EL,"Select Item, (",*V2LON,ANST,*HOFF,")ransfer ":
                    "All, (",*V2LON,ANSC,*HOFF,")onnect to SOS, (",*V2LON:
                    ANSN,*HOFF,")ext, (",*V2LON,ANSP,*HOFF,")revious :"; 
          DISPLAY   *P1:23,*EL,"Select Item, (",*V2LON,ANST,*HOFF,")ransfer ":
                    "All, (",*V2LON,ANSC,*HOFF,")onnect for Enquiries, ":
                    "(",*V2LON,ANSD,*HOFF,")irect Ordering, ":
                    *P1:24,"(",*V2LON,ANSL,*HOFF,")oad Acknowledgements, ":
                    "(",*V2LON,ANSN,*HOFF,")ext, (":
                    ANSN,*HOFF,")ext, (",*V2LON,ANSP,*HOFF,")revious :"; 
.
GETC3100  KEYIN     *P47:24,*EL,*DV,UNDLN2,*P47:24,*V2LON,CHOICE,*EL
.
.         Set FLAG1 to determine what label we are to jump to next time we
.         CALL GETC0000
.
          MOVE      THREE,FLAG1
.
          TYPE      CHOICE
          GOTO      GETC3200 IF EQUAL        * Choice is numeric
.
          ENDSET    CHOICE
          APPEND    SP2,CHOICE
          RESET     CHOICE
.
          MATCH     SP2,CHOICE
          GOTO      GETC9995 IF EQUAL
.
          REP       UPPLOW,CHOICE
.
          CMATCH    ANST,CHOICE              * Transfer
          GOTO      GETC9000 IF EQUAL
.
          CMATCH    ANSC,CHOICE              * Connect
          GOTO      GETC9100 IF EQUAL
.
          CMATCH    ANSN,CHOICE
          GOTO      GETC9300 IF EQUAL
.
          CMATCH    ANSP,CHOICE
          GOTO      GETC9400 IF EQUAL
.
          CMATCH    ANSD,CHOICE              * Direct Orders
          GOTO      GETC9500 IF EQUAL
.
          CMATCH    ANSL,CHOICE              * Load Acknowledgements
          GOTO      GETC9600 IF EQUAL
.
          BEEP
          GOTO      GETC3100
.
.         Now check if choice is a valid number
.
GETC3200  MOVE      CHOICE,FORM2
.
          COMPARE   ZERO,FORM2 
          GOTO      GETC3300 IF EQUAL
.
          COMPARE   ITEM,FORM2
          GOTO      GETC9200 IF LESS
.
GETC3300  BEEP 
          GOTO      GETC3100
.
GETC4000  
          DISPLAY   *P1:23,*EF,"Select Item, (",*V2LON,ANST,*HOFF,")ransfer ":
                    "All, (",*V2LON,ANSC,*HOFF,")onnect for Enquiries, ":
                    "(",*V2LON,ANSD,*HOFF,")irect Ordering, ":
                    *P1:24,"(",*V2LON,ANSL,*HOFF,")oad Acknowledgements, ":
                    "(",*V2LON,ANSP,*HOFF,")revious :"; 
.
GETC4100  KEYIN     *P39:24,*EL,*DV,UNDLN2,*P39:24,*V2LON,CHOICE,*EL
.
.         Set FLAG1 to determine what label we are to jump to next time we
.
          MOVE      THREE,FLAG1
.
          TYPE      CHOICE
          GOTO      GETC4200 IF EQUAL        * Choice is numeric
.
          ENDSET    CHOICE
          APPEND    SP2,CHOICE
          RESET     CHOICE
.
          MATCH     SP2,CHOICE
          GOTO      GETC9995 IF EQUAL
.
          REP       UPPLOW,CHOICE
.
.         Set FLAG1 to determine what label we are to jump to next time we
.
          CMATCH    ANST,CHOICE              * Transfer
          GOTO      GETC9000 IF EQUAL
.
          CMATCH    ANSC,CHOICE              * Connect
          GOTO      GETC9100 IF EQUAL
.
          CMATCH    ANSP,CHOICE
          GOTO      GETC9400 IF EQUAL
.
          CMATCH    ANSD,CHOICE              * Direct Orders
          GOTO      GETC9500 IF EQUAL
.
          CMATCH    ANSL,CHOICE              * Load Acknowledgements
          GOTO      GETC9600 IF EQUAL
.
          BEEP
          GOTO      GETC4100
.
.         Now check if choice is a valid number
.
GETC4200  MOVE      CHOICE,FORM2
.
          COMPARE   ZERO,FORM2
          GOTO      GETC4300 IF EQUAL
.
          COMPARE   ITEM,FORM2
          GOTO      GETC9200 IF LESS
.
GETC4300  BEEP 
          GOTO      GETC4100
.
.         Transfer
.
GETC9000  MOVE      ONE,FLAG2
          GOTO      GETC9999
.
.         Connect
.
GETC9100  MOVE      TWO,FLAG2
          GOTO      GETC9999
.
.         Item
.
GETC9200  MOVE      THREE,FLAG2
          GOTO      GETC9999
.
.         Next screen
.
GETC9300  MOVE      FOUR,FLAG2
          GOTO      GETC9999
.
.         Previous screen
.
GETC9400  MOVE      FIVE,FLAG2
          GOTO      GETC9999
.
.         Direct Ordering
.
GETC9500  MOVE      SIX,FLAG2
          GOTO      GETC9999
.
.         Load Acks
.
GETC9600  MOVE      SEVEN,FLAG2
          GOTO      GETC9999
.
GETC9995  MOVE      ONE,FLAG3                * User hit return
.
GETC9999  RETURN
.
.************************************************************************
.*                              REST0000                                *
.*  Clear the port in the control file                                  *
.*  Called by : ML0000                                                  *
.************************************************************************
REST0000  MOVE      SP2,INCNTRAN
          IF        INSSVHA=1
            WRITAB    CONTROLF,TWENTY6;*50,INCNTRAN 
          ELSE
            WRITAB    CONTROLF,SIXTY7;*206,INCNTRAN 
          ENDIF
.
REST9999  RETURN
.
.**************************************************************************
.*                            SELT0000                                    *
.*  Selected item                                                         *
.*  Called by : ML0000                                                    *
.**************************************************************************
.
.         Get the chosen purchase order
.
SELT0000  LOAD      SITRPURC,FORM2,PORDER1,PORDER2,PORDER3,PORDER4,PORDER5:
                                  PORDER6,PORDER7,PORDER8,PORDER9,PORDER10:
                                  PORDER11,PORDER12,PORDER13,PORDER14,PORDER15
.
.         Check if this P/O has been printed.  It may only be printed if it has
.         been and INCNTRPR=1
.
          CALL      CHPO0000
          COMPARE   ZERO,EXIT
          GOTO      SELT0500 IF EQUAL
.
          IF        EXIT=1
            DISPLAY   *P1:24,*EL,*B,"Unable to transmit.  P/O has not been ":
                      "printed. ";
            CALL      HITENTER
          ENDIF
          IF        EXIT=2
            DISPLAY   *P1:24,*EL,*B,"Order is Not For VHA. ":
                      "Transmission Denied. - ";
            CALL      HITENTER
          ENDIF
          GOTO      SELT9999
. 
SELT0500  MOVE      PASSCODE,SITRUSER        * User id
          MOVE      SAVORG,SITRORG           * Originator
          PACK      SITRTDAT,CCC,CYY,CMON,CDAY * Date
          REP       " 0",SITRTDAT
.
          PACK      KEY7,SITRPURC
          CALL      RDSITR1                 * Get other record variables
.
          DISPLAY   *P1:23,*EL:
                    *P1:24,*EL,"(",*V2LON,ANST,*HOFF,")ransmit now, (":
                    *V2LON,ANSC,*HOFF,")ancel from transmission list, e(":
                    *V2LON,ANSX,*HOFF,")it :";
.
SELT1000  KEYIN     *P66:24,*EL,*DV,UNDLN1,*P66:24,*V2LON,ANS;
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          REP       UPPLOW,ANS
.
          MATCH     ANST,ANS
          GOTO      SELT2000 IF EQUAL
.
          MATCH     ANSC,ANS
          GOTO      SELT3000 IF EQUAL
.
          MATCH     ANSX,ANS
          GOTO      SELT9999 IF EQUAL
.
          MATCH     ANSE,ANS
          GOTO      SELT9999 IF EQUAL
.
          BEEP
          GOTO      SELT1000
.
.         Transmit to VHA
.
.         Flag this P/O as transmission in progress
.
SELT2000  DISPLAY   *P1:22,*EF,"Transferring : ";
          PACK      KEY7,SITRPURC
          CALL      RDSITR1                 * Get other variables
          MOVE      ONE,SITRSTAT       
          PACK      KEY7,SITRPURC
          CALL      UPSITR1
.
          CALL      BILD0000                 * Build transmission file
.
SELT2100  CALL      SEND0000                 * Send transmission file
.
SELT2200  KEYIN     *P1:24,*EL,"Transmission Ok (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",ANS;
          CALL      DISPHEAD                 * Redisplay Screen Header
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      SELT2800 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      SELT2200 IF NOT EQUAL
.
          KEYIN     *P1:24,*EL,"Resend File (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",ANS;
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      SELT2100 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      SELT2100 IF NOT EQUAL
          CALL      CLRT0000                 * Remove File
.
. Reset for Transmission Later
.
          PACK      KEY7,SITRPURC
          CALL      RDSITR1                 * Get other variables
          MOVE      ZERO,SITRSTAT    
          CALL      UPSITR1
          GOTO      SELT9999
.
. Remove Transmission File and Flag this P/O as transmitted
.
SELT2800  CALL      CLRT0000                 * Remove File
          PACK      KEY7,SITRPURC
          CALL      RDSITR1                 * Get other variables
          MOVE      THREE,SITRSTAT    
          CALL      UPSITR1
          GOTO      SELT9999
.
.         Cancel from transmission list
.
SELT3000  DISPLAY   *P1:24,*EL,"Reason for cancellation :";
.
SELT4000  KEYIN     *P27:24,*EL,*DV,UNDLN30,*P27:24,*V2LON,SITRCREA,*EL;
.
          MOVE      SITRCREA,SAVCREA
          PACK      KEY7,SITRPURC
          CALL      RDSITR1                 * Get other variables
.
          MOVE      NINE,SITRSTAT            * Set status to cancelled
          PACK      SITRTDAT,CCC,CYY,CMM,CDD
          REP       " 0" IN SITRTDAT
          MOVE      SAVCREA,SITRCREA
.
          CALL      UPSITR1
.
SELT9999  RETURN
.
.**********************************************************************
.*                           CHPO0000                                 *
.*  Check if P/O has been printed                                     *
.*  Called by : SELT0000 and TALL0000                                 *
.**********************************************************************
CHPO0000  MOVE      SITRPURC,SIPAPON
          PACK      KEY7,SIPAPON,SP70
          CALL      RDSIPA1
          BRANCH    OVRCD,CHPO9000
.
          MATCH     SIPASUP,INCNVHAS   * Check for Correct Supplier
          IF        !@EQUAL
            MOVE      TWO,EXIT
            GOTO      CHPO9999
          ENDIF
.
          MATCH     SP70,SIPADPR
          GOTO      CHPO5000 IF NOT EQUAL
          BRANCH    INCNTRPR,CHPO9000        * Not printed
.
CHPO5000  MOVE      ZERO,EXIT
          GOTO      CHPO9999
.
CHPO9000  MOVE      ONE,EXIT
.
CHPO9999  RETURN
.**************************************************************************
.*                             BILD0000                                   *
.*  Build a transmission file given a purchase order number               *
.*  Called by : SELT0000                                                  *
.**************************************************************************
BILD0000  DISPLAY   *P15:22,*V2LON,SITRPURC; * Show some screen action
.
.         Write to the ascii transmission file.
.         Set up variables needed by transmission file
.
.    ---- Write header -----
.
          MOVE      SITRPURC,INSSPURA        * Purchase order
          MOVE      INCNVHAC,INSSCUS         * Customer code
.
          CLEAR     SIPADEL                  * In case of OVRCD
          MOVE      SITRPURC,SIPAPON         * Get delivery instructions
          PACK      KEY7,SIPAPON,SP70
          CALL      RDSIPA1
          BRANCH    OVRCD,BILD1000           * Should never occur
.
          UNPACK    SIPADIN,KEY2,INSSDAT     * Purchase order date
          IF        INCNOVHA=2
            PACK      INSSDEL,SIPACST,SP70   * Default Cost Centre for Barwon
          ELSE
            MOVE      SIPADEL,INSSDEL        * Delivery instructions
          ENDIF
.
BILD1000  CALL      WRINSS1                  * Header
.
          PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
.
.   ----- Write main body ----
.
BILD2000  CALL      RKSIPC1
          BRANCH    OVRCD,BILD9000
.
          MATCH     SIPAPON,SIPCPON          * Same P/O?
          GOTO      BILD9000 IF NOT EQUAL    * No
.
          MOVE      SIPCOQT,INSSQTY          * Quantity
          MOVE      SIPCSUT,INSSPACK         * Pack unit
          MOVE      SIPCECT,INSSPRIC         * Unit price
          MOVE      SIPCCAT,INSSCATA         * Catalog code
          CALL      GSUP0000                 * Get supplier part number
.
          CALL      WRINSS2                  * Write this item to trans. file
          GOTO      BILD2000                 * Get next item
.
.   ----- Write trailer ----
.
BILD9000  CALL      WRINSS3                  * Trailer
          CALL      WRINSS5                  * Update File Number for BLS
.
BILD9999  RETURN
.
.************************************************************************
.*                          GSUP0000                                    *
.*  Get supplier part number                                            *
.*  Called by : BILD0000                                                *
.************************************************************************
GSUP0000  MOVE      SP30,INSSVCOD            * In case of OVRCD
          PACK      KEY27,INSSCATA,INCNVHAS,SP70
          CALL      RSSIIC1
          CALL      RKSIIC1
          BRANCH    OVRCD,GSUP9999
          PACK      KEY12,SIICCAT,SIICSUP,SP70
          MATCH     KEY12,KEY27
          GOTO      GSUP9999 IF NOT EQUAL
.
          MOVE      SIICPNO,INSSVCOD
.
GSUP9999  RETURN
.
.***************************************************************************
.*                              SEND0000                                   *
.*  Send all transmission files                                            *
.*  Called by : SELT0000                                                   *
.***************************************************************************
SEND0000  
          DISPLAY   *P1:18,INCNTVHA," - ",INCNVHAC
          CLEAR     KEY80
          APPEND    INCNTVHA,KEY80
          IF        SNCOMMOD=1
            APPEND    SP1,KEY80
            APPEND    PORT,KEY80
          ENDIF
          RESET     KEY80
          EXECUTE   KEY80,TASKID
.
SEND9999  RETURN
.***************************************************************************
.*                              SEND0000                                   *
.*  Send all transmission files                                            *
.*  Called by : SELT0000                                                   *
.***************************************************************************
CREA0000  
. ------- Only create if using return ordering
          IF        INCNOVHA=2
            STRIP     INCNSOSD         * Remove Spaces from Directory Name
            CLEAR     COMMAND
            APPEND    INCNSOSD,COMMAND
            IF        SNCOMMOD=1
              APPEND    PORT,COMMAND
              APPEND    "/",COMMAND
            ENDIF
            APPEND    BLSCREAT,COMMAND
            IF        SNCOMMOD=1
              APPEND    SP1,COMMAND
              APPEND    PORT,COMMAND
            ENDIF
            RESET     COMMAND
            EXECUTE   COMMAND,TASKID
          ENDIF
.
CREA9999  RETURN
.
.***************************************************************************
.*                              SCOD0000                                   *
.*  Get code to send for                                                   *
.***************************************************************************
SCOD0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0.",*HOFF," Exit":
                    *P1:5,*V2LON," 1.",*HOFF," H.S.A. Customer Code ",INCNVHAC:
                    *P1:6,*V2LON," 2.",*HOFF," H.S.A. Customer Code ",INCNVHA2:
                    *P1:7,*V2LON," 3.",*HOFF," H.S.A. Customer Code ",SNCOVHA3:
                    *P1:8,*V2LON," 4.",*HOFF," H.S.A. Customer Code ",SNCOVHA4:
                    *P1:9,*V2LON," 5.",*HOFF," H.S.A. Customer Code ",SNCOVHA5:
                    *P1:10,*V2LON," 6.",*HOFF," H.S.A. Customer Code ",SNCOVHA6:
                    *P1:11,*V2LON," 7.",*HOFF," H.S.A. Customer Code ",SNCOVHA7:
                    *P1:12,*V2LON," 8.",*HOFF," H.S.A. Customer Code ",SNCOVHA8:
                    *P1:13,*V2LON," 9.",*HOFF," H.S.A. Customer Code ",SNCOVHA9:
                    *P1:14,*V2LON,"10.",*HOFF," Barwon Linen Service"
          KEYIN     *P1:16,*HOFF,"Select Option : ",*V2LON,F2
          MOVE      ONE,EXIT
          COMPARE   ZERO,F2
          GOTO      SCOD9999 IF EQUAL
          MOVE      ZERO,EXIT
          MOVE      ZERO,SITETYPE
          LOAD      SITE,F2,SITEVHA,SITEVHA,SITEVHA,SITEVHA,SITEVHA:
                            SITEVHA,SITEVHA,SITEVHA,SITEVHA,SITEBLS
.
          LOAD      SITEABBR,F2,SITEAVHA,SITEAVHA,SITEAVHA,SITEAVHA,SITEAVHA:
                                SITEAVHA,SITEAVHA,SITEAVHA,SITEAVHA,SITEABLS
.
          BRANCH    F2,SCOD0100,SCOD0200,SCOD0300,SCOD0400,SCOD0500:
                       SCOD0600,SCOD0700,SCOD0800,SCOD0900,SCOD1000
.
          BEEP
          GOTO      SCOD0000
SCOD0100  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,INCNVHAC
          READ      CONTROLF,TWENTY6;*92,INCNTVHA
          GOTO      SCOD9999
.
SCOD0200  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,INCNVHA2
          PACK      KEY6,INCNVHA2,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          PACK      INCNTVHA,INCNTVH2,SP70
          PACK      INCNVHAC,INCNVHA2,SP70
          GOTO      SCOD9999
.
SCOD0300  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA3
          PACK      KEY6,SNCOVHA3,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          PACK      INCNTVHA,SNCOTVH3,SP70
          PACK      INCNVHAC,SNCOVHA3,SP70
          GOTO      SCOD9999
.
SCOD0400  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA4
          PACK      KEY6,SNCOVHA4,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          READ      CONTROLF,TWENTY6;*92,INCNTVHA
          PACK      INCNVHAC,SNCOVHA4,SP70
          GOTO      SCOD9999
.
SCOD0500  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA5
          PACK      KEY6,SNCOVHA5,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          READ      CONTROLF,TWENTY6;*92,INCNTVHA
          PACK      INCNVHAC,SNCOVHA5,SP70
          GOTO      SCOD9999
.
SCOD0600  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA6
          PACK      KEY6,SNCOVHA6,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          READ      CONTROLF,TWENTY6;*92,INCNTVHA
          PACK      INCNVHAC,SNCOVHA6,SP70
          GOTO      SCOD9999
.
SCOD0700  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA7
          PACK      KEY6,SNCOVHA7,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          READ      CONTROLF,TWENTY6;*92,INCNTVHA
          PACK      INCNVHAC,SNCOVHA7,SP70
          GOTO      SCOD9999
.
SCOD0800  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA8
          PACK      KEY6,SNCOVHA8,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          READ      CONTROLF,TWENTY6;*92,INCNTVHA
          PACK      INCNVHAC,SNCOVHA8,SP70
          GOTO      SCOD9999
.
SCOD0900  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA9
          PACK      KEY6,SNCOVHA9,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          READ      CONTROLF,TWENTY6;*92,INCNTVHA
          PACK      INCNVHAC,SNCOVHA9,SP70
          GOTO      SCOD9999
.
SCOD1000  MOVE      TWO,INSSVHA
          IF        !(INCNBLON=1)
            DISPLAY     *P1:23,*EL,*B,"Interface Not Switched On. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
.
          MOVE      INCNBLSC,INCNVHAC
          MOVE      "BLS Customer Code ",KEY18
          PACK      HEADMESS,KEY18,INCNVHAC
          MOVE      INCNBLSS,INCNVHAS
          MOVE      INCNBLSD,INCNVHAD
          MOVE      INCNBLSN,INCNVHAN
          MOVE      INCNCBLS,INCNCVHA
          MOVE      INCNTBLS,INCNTVHA
          MOVE      INCNRBLS,INCNRVHA
          MOVE      INCNBLSM,INCNVHAM
          MOVE      INCNBLAL,INCNTRAL
          MOVE      INCNBLPR,INCNTRPR
          MOVE      INCNBLTD,INCNSOSD
          MOVE      INCNBLPT,HVHAPART
          MOVE      INCNOBLS,INCNOVHA
          MOVE      INCNBTRN,INCNTRAN
          MOVE      ONE,SITETYPE
.
SCOD9999  RETURN
.****************************************************************************
.*                             TALL0000                                     *
.*  Transfer all files awaiting transmission                                *
.*  Called by : ML0000                                                      *
.****************************************************************************
TALL0000  MOVE      ZERO,SITRSTAT            * Awaiting transmission
          PACK      KEY8,SITRSTAT,SP10
.
          DISPLAY   *P1:22,*EF,"Transferring:";
          CALL      RSSITR2
.
TALL1000  CALL      RKSITR2
          BRANCH    OVRCD,TALL9000
.
          MATCH     "0",SITRSTAT
          GOTO      TALL9000 IF NOT EQUAL
.
.         - Check if this P/O has been printed as
.           it may only be printed if it has been and INCNTRPR=1. 
.         - Check for Correct Supplier Code
.
          CALL      CHPO0000
          BRANCH    EXIT,TALL1000,TALL1000
.
.         Set this record to transmission in progress
.
          MOVE      ONE,SITRSTAT
          MOVE      PASSCODE,SITRUSER        * User id
          MOVE      SAVORG,SITRORG           * Originator
          PACK      SITRTDAT,CCC,CYY,CMON,CDAY * Date
.
          CALL      UPSITR2
.
          CALL      BILD0000                 * Build transmission file
.
.         Restore file pointer because BILD0000 uses the key to access another
.         file
.
          MOVE      ZERO,SITRSTAT
          PACK      KEY8,SITRSTAT,SP10
          CALL      RSSITR2
.
          GOTO      TALL1000                 * Get next record
.
TALL9000  CALL      SEND0000                 * Send transmission files        
.
TALL9100  KEYIN     *P1:24,*EL,"Transmission Ok (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",ANS;
          CALL      DISPHEAD                 * Redisplay Screen Header
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      TALL9400 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      TALL9100 IF NOT EQUAL
.
          KEYIN     *P1:24,*EL,"Resend Files (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",ANS;
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      TALL9000 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      TALL9100 IF NOT EQUAL
.
          CALL      CLRT0000                 * Remove File
.
. Reset for Transmission Later
.
TALL9200  PACK      KEY8,ONE,SP10
          CALL      RSSITR2
TALL9210  CALL      RKSITR2
          BRANCH    OVRCD,TALL9999
          MATCH     "1",SITRSTAT
          GOTO      TALL9999 IF NOT EQUAL
.
          MOVE      ZERO,SITRSTAT
          CALL      UPSITR2
          GOTO      TALL9200
.
.         Set records to transmission completed
.
TALL9400  CALL      CLRT0000       * Clear Transmission Files
.
TALL9500  PACK      KEY8,ONE,SP10
          CALL      RSSITR2
TALL9510  CALL      RKSITR2
          BRANCH    OVRCD,TALL9999
          MATCH     "1",SITRSTAT
          GOTO      TALL9999 IF NOT EQUAL
.
          MOVE      THREE,SITRSTAT
          CALL      UPSITR2
          GOTO      TALL9500
.
.
TALL9999  RETURN
.
.****************************************************************************
.*                              CSOS0000                                    *
.*  Connect to SOS                                                          *
.*  Called by : ML0000                                                      *
.****************************************************************************
CSOS0000  DISPLAY   *P1:22,*EF,"Connecting to SOS ";
.
          DISPLAY   *P1:18,INCNCVHA
          EXECUTE   INCNCVHA,TASKID
.
CSOS9999  RETURN
.****************************************************************************
.*                              DSOS0000                                    *
.*  Connect to SOS for direct ordering. On exit of sos the Ack files will   *
.*  be transfered back to our text file invvhaaf.txt                        *
.*  Called by : ML0000                                                      *
.****************************************************************************
DSOS0000  DISPLAY   *P1:22,*EF,"Connecting to ",SITE," for Direct Ordering ";
.
          DISPLAY   *P1:18,INCNRVHA
          CLEAR     KEY80
          APPEND    INCNRVHA,KEY80
          IF        SNCOMMOD=1
            APPEND    SP1,KEY80
            APPEND    PORT,KEY80
          ENDIF
          RESET     KEY80
          EXECUTE   KEY80,TASKID
.
DSOS9999  RETURN
.****************************************************************************
.*                              CLRT0000                                    *
.* Clear Files fronm transfer Directory                                     *
.****************************************************************************
CLRT0000  STRIP     INCNSOSD         * Remove Spaces from Directory Name
          CLEAR     COMMAND
          APPEND    RM,COMMAND
          APPEND    INCNSOSD,COMMAND
          IF        SNCOMMOD=1
            APPEND    PORT,COMMAND
            APPEND    "/",COMMAND
          ENDIF
          APPEND    KILLFILE,COMMAND
          RESET     COMMAND
          EXECUTE   COMMAND,TASKID
          RETURN
.----------------------------------------------------------
. Load SOS Order Acknoledgements
.----------------------------------------------------------
LOAD0000  READ      CONTROLF,TWENTY3;*143,HDEFWH
          MOVE      "Y",ANS
          KEYIN     *P1:24,*EL,"Use Default Warehouse (Y/N) ? ",*RV,*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      LOAD0090 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      LOAD0000 IF NOT EQUAL
.
          KEYIN     *P1:24,*EL,"Enter Warehouse : ",HDEFWH
          MOVE      HDEFWH,KEY5
          CALL      RDSIWA1
          BRANCH    OVRCD,LOAD0000
.
          MOVE      "Y",ANS
          KEYIN     *P40:24,*EL,"Ok (Y/N) ? ",*RV,*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      LOAD0090 IF EQUAL
          GOTO      LOAD0000
.
LOAD0090  CALL      CREA0000                 * Create invvhaaf.txt
          STRIP     INCNSOSD
          CLEAR     COMMAND
          APPEND    INCNSOSD,COMMAND
          IF        SNCOMMOD=1
            APPEND    PORT,COMMAND
            APPEND    "/",COMMAND
          ENDIF
          APPEND    "invvhaaf.txt",COMMAND
          RESET     COMMAND
.
          DISPLAY   *P1:24,*EL,"Opening : ",*V2LON,COMMAND;
          MOVE      ZERO,OVRCD         * does file exist ? (srf 112436)
          TRAP      OVERCOND IF IO
          OPEN      INVVHAAF,COMMAND
          TRAPCLR   IO
          BRANCH    OVRCD,LOAD1900
.
          DISPLAY   *P1:24,*EL,"Loading Orders : ";
.
LOAD1000  CALL      RKSIVHF
          BRANCH    OVRCD,LOAD1900
.
          CALL      SETFNO00             * Set File Number
          DISPLAY   *P30:24,SIVHDAT,".",SIVHFNO,".",SIVHLIN;
          PACK      KEY12,SIVHDAT,SIVHFNO,SIVHLIN
          CALL      RASIVH1
          COMPARE   ZERO,OVRCD
          GOTO      LOAD1100 IF EQUAL
          MOVE      ZERO,SIVHSTA
          MOVE      SP70,SIVHCOR
          IF        INCNOVHA=2
            MOVE      SIVHPAT,SIVHCAT
          ENDIF
          MOVE      SITETYPE,SIVHTYPE
          CALL      WRSIVH1
          GOTO      LOAD1000
.
LOAD1100  UNPACK    SIVHDAT,CYEAR,CMON,CDAY
          CALL      PACDATE
          BEEP
          DISPLAY   *P1:23,*EL,"Duplicate Found. Date : ",*V2LON,CPDATE:
                    *HOFF,"  File No. : ",*V2LON,SIVHFNO:
                    *HOFF,"  Line : ",*V2LON,SIVHLIN
          KEYIN     *P1:24,*EL,"(",*V2LON,"O",*HOFF,")verwrite or (":
                                   *V2LON,"I",*HOFF,")gnore ? ",*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     "I",ANS
          GOTO      LOAD1000 IF EQUAL
          MATCH     "O",ANS
          GOTO      LOAD1100 IF NOT EQUAL
          CALL      SINV0000
          PACK      KEY12,SIVHDAT,SIVHFNO,SIVHLIN
          CALL      RDSIVH1
          CALL      RINV0000
          MATCH     "0",SIVHSTA
          GOTO      LOAD1200 IF EQUAL
          MOVE      ONE,SIVHSTA
.
LOAD1200  CALL      UPSIVH1
          GOTO      LOAD1000
.
LOAD1900  DISPLAY   *P1:24,*EL,"Creating Confirmation Orders : ";
          PREP      INVVHAAF,COMMAND
          CLOSE     INVVHAAF
          MOVE      SP70,LASTORD            * clear last order
          MOVE      ZERO,XFOUND             * no items found yet
.
LOAD2000  PACK      KEY33,ZERO,SP70
          CALL      RSSIVH2
LOAD3000  CALL      RKSIVH2
          BRANCH    OVRCD,LOAD8000
.
          MATCH     "2",SIVHSTA
          GOTO      LOAD8000 IF EQUAL
.
          IF        (SIVHTYPE=0 & SITETYPE<>0) | (SIVHTYPE=1 & SITETYPE<>1)
            GOTO      LOAD3000              * VHA found for Barwon or vice-versa
          ENDIF
.
          MOVE      ONE,XFOUND              * found an item
          MATCH     "1",SIVHSTA             * What to do with overwrites
          GOTO      LOAD4000 IF EQUAL
.
          IF        INCNOVHA=1
            CALL      UDIR0000              * Create New Order No - Direct Order
            BRANCH    EXIT,LOAD9100         * abort ?
            PACK      SIVHCOR,SIPAPON,SP70  * save order in case we abort
            PACK      SIVHTYP,STOCKTYP,SP70 * save type in case we abort
            CALL      UPSIVH2
            CALL      GCAT0000                * Determine Catalog Code
            BRANCH    EXIT,LOAD9100           * abort ?
          ELSE
            CALL      URET0000              * Check Order Header - Return Order
            BRANCH    EXIT,LOAD9100         * abort ?
            CALL      SCAT0000              * Set Catalog Code
          ENDIF
.
          CALL      ULIN0000                * Update Line
.
LOAD4000  MOVE      "2",SIVHSTA
          MOVE      SIPAPON,SIVHCOR
          MOVE      SIIACAT,SIVHCAT
          PACK      SIVHTYP,STOCKTYP,SP70
          CALL      UPSIVH2
          GOTO      LOAD2000
.
LOAD8000  BRANCH    XFOUND,LOAD9000
          DISPLAY   *P1:24,*B,*EL,"No Acknowledgements to Load - ";
          CALL      HITENTER
          GOTO      LOAD9999
.
LOAD9000  
          CALL      UUSIPA1            * unlock order
          DISPLAY   *P1:24,*EL,"Load Completed - ";
          CALL      HITENTER
          GOTO      LOAD9999
.
LOAD9100  
          CALL      UUSIPA1            * unlock order
          DISPLAY   *P1:24,*EL,"WARNING - Load Not Completed - ";
          CALL      HITENTER
          GOTO      LOAD9999
.
LOAD9999  RETURN
.------------------------------------------------------
. Set File Number 
.------------------------------------------------------
SETFNO00  IF        INSSVHA=2
            MOVE      SIVHFNO,FORM3
            ADD       "500",FORM3
            MOVE      FORM3,SIVHFNO
            REP       " 0",SIVHFNO
          ENDIF
.
SETFNO99  RETURN
.------------------------------------------------------
. Save Load Fields
.------------------------------------------------------
SINV0000  MOVE     SIVHDAT,SSIVHDAT
          MOVE     SIVHFNO,SSIVHFNO
          MOVE     SIVHORD,SSIVHORD
          MOVE     SIVHLIN,SSIVHLIN
          MOVE     SIVHQTY,SSIVHQTY
          MOVE     SIVHSUN,SSIVHSUN
          MOVE     SIVHCOS,SSIVHCOS
          MOVE     SIVHPAT,SSIVHPAT
          MOVE     SIVHSTA,SSIVHSTA
          MOVE     SIVHCOR,SSIVHCOR
          MOVE     SIVHVEN,SSIVHVEN
          MOVE     SIVHTYPE,SSIVHTYPE
          MOVE     SIVHSPA,SSIVHSPA
SINV9999  RETURN
.------------------------------------------------------
. Restore Load Fields (ex COR and STA)
.------------------------------------------------------
RINV0000  MOVE     SSIVHDAT,SIVHDAT
          MOVE     SSIVHFNO,SIVHFNO
          MOVE     SSIVHORD,SIVHORD
          MOVE     SSIVHLIN,SIVHLIN
          MOVE     SSIVHQTY,SIVHQTY
          MOVE     SSIVHSUN,SIVHSUN
          MOVE     SSIVHCOS,SIVHCOS
          MOVE     SSIVHPAT,SIVHPAT
          MOVE     SSIVHVEN,SIVHVEN
RINV9999  RETURN
.------------------------------------------------------------
. Sequencial File Read
. ------------------------------------------------------------
RKSIVHF   
          MOVE      ZERO,OVRCD
          READ      INVVHAAF,SEQ;SIVHDAT,SIVHFNO,SIVHORD:
                                 SIVHLIN,SIVHQTY,SIVHSUN,SIVHCOS,SIVHPAT,SIVHVEN
          GOTO      OVERCOND IF OVER
          RETURN
.
.
.----------------------------------------------------
.        Get Part Number
.----------------------------------------------------
GPART000  
          MATCH     "1",HVHAPART
          IF        @EQUAL
            MATCH     SP70,SIVHVEN
            IF        @EQUAL
              PACK      PARTCODE,SIVHPAT,SP70
            ELSE
              PACK      PARTCODE,SIVHVEN,SP70
            ENDIF
          ELSE
            MATCH     SP70,SIVHPAT
            IF        @EQUAL
              PACK      PARTCODE,SIVHVEN,SP70
            ELSE
              PACK      PARTCODE,SIVHPAT,SP70
            ENDIF
          ENDIF
.
GPART999  RETURN
.----------------------------------------------------
.        Set Catalog Data from the Catalog Code sent 
.----------------------------------------------------
SCAT0000  MOVE      SP70,SIICPNO
          PACK      KEY27,SIVHCAT,INCNVHAS,SIVHSUN,SP70
          CALL      RDSIIC1
          BRANCH    OVRCD,SCAT1000
.
          MATCH     SIICPNO,SIVHVEN
          GOTO      SCAT1000 IF NOT EQUAL
.
. ------- The Catalog still exists and the part numbers match
          MOVE      SIICCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,SCAT1000
.
          IF        SIIASUS=2 | SIIASUS=3
            GOTO      SCAT1000         * skip if suspended
          ENDIF
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIICSUT,SP70
          CALL      RDSIFA1
.
          MOVE      ZERO,EXIT
          GOTO      SCAT9999
.
SCAT1000  CALL      GCAT0000         * Part#s changed or record not found
.
SCAT9999  RETURN
.----------------------------------------------------
.        Get Catalog Code from Supplier Part Number
.----------------------------------------------------
GCAT0000  
          CALL      GPART000           * get desired part number
.
          MOVE      SP70,SKEY57
          PACK      KEY57,INCNVHAS,PARTCODE,SP70
          CALL      RSSIIC2
.
GCAT1000  CALL      RKSIIC2
          BRANCH    OVRCD,GCAT4000 * Not Found
          MATCH     INCNVHAS,SIICSUP
          GOTO      GCAT4000 IF NOT EQUAL
          MATCH     PARTCODE,SIICPNO
          GOTO      GCAT4000 IF NOT EQUAL
.
          MOVE      SIICCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,GCAT1000
          IF        SIIASUS=2 | SIIASUS=3
            GOTO      GCAT1000         * skip if suspended
          ENDIF
.
          IF        (STOCKTYP=1 & SIIANON=1) | (STOCKTYP=2 & SIIANON=0)
            GOTO      GCAT1000         * skip if not desired type
          ENDIF
.
          PACK      SKEY57,SIICSUP,SIICPNO,SIICCAT,SIICSUT,SP70
.
GCAT1100  CALL      RKSIIC2            * search for another
          BRANCH    OVRCD,GCAT4000     * Not Found
          MATCH     INCNVHAS,SIICSUP
          GOTO      GCAT4000 IF NOT EQUAL
          MATCH     PARTCODE,SIICPNO
          GOTO      GCAT4000 IF NOT EQUAL
.
          MOVE      SIICCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,GCAT1100
          IF        SIIASUS=2 | SIIASUS=3
            GOTO      GCAT1100         * skip if suspended
          ENDIF
.
          IF        (STOCKTYP=1 & SIIANON=1) | (STOCKTYP=2 & SIIANON=0)
            GOTO      GCAT1100
          ENDIF
.
          CALL      CCAT0000           * choose catalog
          BRANCH    EXIT,GCAT9500
.
.---- determine catalog to process ----
.
GCAT4000  
          PACK      KEY57,SKEY57,SP70       * read data
          CALL      RDSIIC2
          BRANCH    OVRCD,GCAT5000          * no data found
.
          MOVE      SIICCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,GCAT5000
          IF        SIIASUS=2 | SIIASUS=3
            GOTO      GCAT5000         * skip if suspended
          ENDIF
.
.---- check if catalog has valid supply unit ----
.
GCAT4500  
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIICSUT,SP70
          CALL      RDSIFA1
.
          MATCH     SP70,SIVHSUN            * No VHA supply unit ?
          GOTO      GCAT9000 IF EQUAL
          MATCH     SIICSUT,SIVHSUN         * Same as VHA supply unit ?
          GOTO      GCAT9000 IF EQUAL
.
          IF        INCNOVHA=2
            GOTO      GCAT4800              * Accept if a return order
          ENDIF
.
          DISPLAY   *P1:3,*EF:
                    *P1:14,*V2LON,*ULON,"Supply Unit Does Not Match",*HOFF:
                    *P1:16,"Catalog Code     : ": 
                                               *V2LON,SIIACAT,*HOFF,SP1,SIIADES:
                    *P1:17,"Part Number      : ",*V2LON,SIICPNO,*HOFF:
                    *P1:18,"P/O Order Number : ",*V2LON,SIPAPON,*HOFF:
                    *P1:19,"Issue Unit       : ",*V2LON,SIIAISS,*HOFF:
                    *P1:20,"Supply Unit      : ",*V2LON,SIICSUT,*HOFF:
                    *P1:21,"Factor           : ",*V2LON,SIFACTOR,*HOFF:
                    *P1:22,"Sup. Units ",SITE," : ",*V2LON,SIVHSUN 
.
          KEYIN     *P1:24,*EF,"(":
                    *V2LON,"Q",*HOFF,")uit, (":
                    *V2LON,"C",*HOFF,")atalog, (":
                    *V2LON,"S",*HOFF,")upply Unit, (":
                    *V2LON,"P",*HOFF,")ost Current Data ? ",*V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     ANSQ,ANS
          GOTO      GCAT9500 IF EQUAL
          MATCH     ANSC,ANS
          GOTO      GCAT4600 IF EQUAL
          MATCH     ANSS,ANS
          GOTO      GCAT4700 IF EQUAL
          MATCH     ANSP,ANS
          GOTO      GCAT4800 IF EQUAL
          GOTO      GCAT4500
.
GCAT4600  CALL      KCAT0000           * keyin catalog
          BRANCH    EXIT,GCAT4600,GCAT9500
          GOTO      GCAT4500
.
GCAT4700  CALL      KSUP0000           * keyin supply unit
          BRANCH    EXIT,GCAT4700,GCAT9500
          GOTO      GCAT4500
.
GCAT4800  
          PACK      KEY27,SIIACAT,INCNVHAS,SIICSUT,SP70
          CALL      RDSIIC1
          IF        OVRCD=1
            DISPLAY   *P1:24,*B,*EF:
                      "Catalog/Supplier/Unit Combination Does Not Exist - ";
            CALL      HITENTER
            GOTO      GCAT4500
          ENDIF
          GOTO      GCAT9000
.
.---- catalog not found ----
.
GCAT5000  UNPACK    SIVHDAT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:3,*EF:
                    *P1:14,*V2LON,*ULON,SITE," Part Number Not Found",*HOFF:
                    *P1:16,"Date             : ",*V2LON,CPDATE,*HOFF:
                    *P1:17,"File             : ",*V2LON,SIVHFNO,*HOFF:
                    *P1:18,"Order Reference  : ",*V2LON,SIVHORD,*HOFF:
                    *P1:19,"Part Number      : ",*V2LON,PARTCODE,*HOFF:
                    *P1:20,SITEABBR," Supply Units : ",*V2LON,SIVHSUN,*HOFF:
                    *P1:21,"Quantity Ordered : ",*V2LON,SIVHQTY,*HOFF:
                    *P1:22,"Unit Cost        : ",*V2LON,SIVHCOS,*HOFF;
.
          CALL      KCAT0000
          BRANCH    EXIT,GCAT5000,GCAT9500
          GOTO      GCAT4500
.
.
GCAT9000  MOVE      ZERO,EXIT
          GOTO      GCAT9999
.
GCAT9500  MOVE      ONE,EXIT
.
GCAT9999  RETURN
.
.----------------------------------------------------
.        Keyin Supply Unit
.----------------------------------------------------
KSUP0000  
          DISPLAY   *P1:24,*EL,"Enter Supply Unit  : ";
          MOVE      "22",CCOL
          MOVE      "24",CVERT
.
          MOVE      SP70,SIFASUPP
          MOVE      SIIAISS,SIFAISSU
          MOVE      ZERO,CKEYTYP
          CALL      KSIFAB00
          BRANCH    EXIT,KSUP9999,KSUP9999
.
KSUP9999  RETURN
.----------------------------------------------------
.        Keyin Catalog
.----------------------------------------------------
KCAT0000  
          DISPLAY   *P1:24,*EL,"Enter Catalog Code : ";
          MOVE      "22",CCOL
          MOVE      "24",CVERT
.
          MOVE      ZERO,CKEYTYP
          CALL      KSIIAA00
          BRANCH    EXIT,KCAT9999,KCAT9999
.
          IF        SIIASUS=2 | SIIASUS=3
            DISPLAY   *P1:24,*B,*EF,"Catalog ",SIIACAT," Suspended - ";
            CALL      HITENTER
            GOTO      KCAT0000         * skip if suspended
          ENDIF
.
          IF        (STOCKTYP=1 & SIIANON=1) | (STOCKTYP=2 & SIIANON=0)
            IF        STOCKTYP=1
              MOVE      "Stock",KEY10
            ELSE
              MOVE      "Non-Stock",KEY10
            ENDIF
            DISPLAY   *P1:24,*B,*EF,*+,"Not a ",*V2LON,KEY10,*HOFF," Type - ";
            CALL      HITENTER
            GOTO      KCAT0000
          ENDIF
.
          PACK      KEY27,SIIACAT,INCNVHAS,SIICSUT,SP70
          CALL      RDSIIC1
          IF        OVRCD=1
            PACK      KEY27,SIIACAT,INCNVHAS,SP70
            UNPACK    SP70,SIICCAT,SIICSUP
            CALL      RSSIIC1
            CALL      RKSIIC1
            PACK      KEY12,SIICCAT,SIICSUP,SP70
            MATCH     KEY12,KEY27
            GOTO      KCAT9999 IF EQUAL
            DISPLAY   *P1:24,*B,*EL,"Catalog ",*V2LON,SIIACAT,*HOFF:
                      " Not Linked To Supplier ",*V2LON,INCNVHAS,*HOFF," - ";
            CALL      HITENTER
            GOTO      KCAT0000
          ENDIF
.
KCAT9999  RETURN
.----------------------------------------------------
.        Choose Catalog
.----------------------------------------------------
CCAT0000
          UNPACK    SIVHDAT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,*ULON,"Duplicate Part Numbers Found",*HOFF:
                    *P1:6,"Date             : ",*V2LON,CPDATE,*HOFF:
                    *P1:7,"File             : ",*V2LON,SIVHFNO,*HOFF:
                    *P1:8,"Order Reference  : ",*V2LON,SIVHORD,*HOFF:
                    *P1:9,"P/O Order Number : ",*V2LON,SIPAPON,*HOFF:
                    *P1:10,"Part Number      : ",*V2LON,PARTCODE,*HOFF:
                    *P1:11,SITEABBR," Supply Units : ",*V2LON,SIVHSUN,*HOFF:
                    *P1:12,"Quantity Ordered : ",*V2LON,SIVHQTY,*HOFF:
                    *P1:13,"Unit Cost        : ",*V2LON,SIVHCOS,*HOFF;
.
          CALL      DHED0000                * display heading
.
          PACK      KEY57,INCNVHAS,PARTCODE,SP70
          CALL      RSSIIC2
.
CCAT1000  CALL      RKSIIC2
          BRANCH    OVRCD,CCAT2000 * Not Found
          MATCH     INCNVHAS,SIICSUP
          GOTO      CCAT2000 IF NOT EQUAL
          MATCH     PARTCODE,SIICPNO
          GOTO      CCAT2000 IF NOT EQUAL
.
          MOVE      SIICCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,CCAT1000
.
          IF        SIIASUS=2 | SIIASUS=3
            GOTO      CCAT1000         * skip if suspended
          ENDIF
.
          IF        (STOCKTYP=1 & SIIANON=1) | (STOCKTYP=2 & SIIANON=0)
            GOTO     CCAT1000
          ENDIF
.
          IF        SIIANON=1
            MOVE      "Non-Stock ",KEY10
          ELSE
            MOVE      "Stock     ",KEY10
          ENDIF
.
          ADD       ONE,CVERT
          ADD       ONE,F2
          DISPLAY   *P1:CVERT,*V2LON,SP1,F2,DOT,*HOFF,*P10:CVERT,SIICCAT:
                    *P20:CVERT,KEY10,*P35:CVERT,SIICSUT:
                    *P55:CVERT,SIIAAVC;
.
          PACK      SKEY57,SIICSUP,SIICPNO,SIICCAT,SIICSUT,SP70
          STORE     SKEY57,F2,SAV1,SAV2,SAV3,SAV4,SAV5,SAV6,SAV7,SAV8,SAV9
.
          COMPARE   "22",CVERT
          GOTO      CCAT1000 IF LESS
.
          DISPLAY   *P1:24,*EF,"More (Y/N) ? ";
          MOVE      "24",CVERT
          MOVE      "14",CCOL
          CALL      YORN0000
          BRANCH    FYESNO,CCAT2000
.
          CALL      DHED0000
          GOTO      CCAT1000
.
CCAT2000  
          KEYIN     *P1:24,*EF,"Select Item, (":
                    *V2LON,"R",*HOFF,")edisplay Data, (":
                    *V2LON,"Q",*HOFF,")uit ? ",*V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     ANSQ,ANS
          GOTO      CCAT9500 IF EQUAL
          MATCH     ANSR,ANS
          GOTO      CCAT0000 IF EQUAL
.
          MOVE      ZERO,F2
          MOVE      ANS,F2
          MOVE      SP70,SKEY57
          LOAD      SKEY57,F2,SAV1,SAV2,SAV3,SAV4,SAV5,SAV6,SAV7,SAV8,SAV9
          MATCH     SP70,SKEY57
          GOTO      CCAT2000 IF EQUAL
.
CCAT9000  MOVE      ZERO,EXIT
          GOTO      CCAT9999
.
CCAT9500  MOVE      ONE,EXIT
.
CCAT9999  RETURN
.----------------------------------------------------
.        Display heading
.----------------------------------------------------
DHED0000  
          MOVE      SP70,SAV1
          MOVE      SP70,SAV2
          MOVE      SP70,SAV3
          MOVE      SP70,SAV4
          MOVE      SP70,SAV5
          MOVE      SP70,SAV6
          MOVE      SP70,SAV7
          MOVE      SP70,SAV8
          MOVE      SP70,SAV9
.
          MOVE      "15",CVERT
          MOVE      ZERO,F2
          DISPLAY   *P1:CVERT,*V2LON,*ULON,"Item",*P10:CVERT,"Catalog":
                    *P20:CVERT,"Type",*P35:CVERT,"Supply Unit":
                    *P55:CVERT,"  Issue Unit Cost",*EF;
.
DHED9999  RETURN
.----------------------------------------------------
.        LOCK CATALOG AND UPDATE USUAGE FILES
.----------------------------------------------------
ULIN0000  PACK      KEY7,SIIACAT,SP70            * lock Catalog
          REPEAT
            CALL      RLSIIA1
            IF        OVRCD=1
              DISPLAY   *P1:24,*B,*EF:
                        "CONTACT IBA - Catalog ",KEY7," Missing - ";
              CALL      HITENTER
            ENDIF
            IF        OVRCD=2
              DISPLAY   *P1:24,*B,*EF,*W2,"Catalog ",KEY7," Locked";
            ENDIF
          UNTIL     OVRCD=0
.
          MOVE      SP70,SIPCEDD     **** set up delivery date
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIICSUT,SP70
          CALL      RDSIFA1
.
          MOVE      SIVHQTY,WORDER
          MULT      SIFACTOR,WORDER
          MOVE      WORDER,WGIVEN
.
          IF        INCNOVHA=2
            PACK      KEY10,SIVHCOR,SIVHLIN,SP70
            CALL      RDSIPC1
            IF        OVRCD=0
              GOTO      ULIN2000        * Return Order Method
            ENDIF
          ENDIF
.
          PACK      KEY12,SIIACAT,HDEFWH,SP70
          UNPACK    KEY12,SIIECAT,SIIEWAR
          CALL      RDSIIE1
          COMPARE   ZERO,OVRCD
          GOTO      ULIN1400 IF EQUAL
.
.      IF NO STOCK ON HAND...PUT IT ON BACKORDER
.
          MOVE      "000000",SIIESID
          MOVE      "PURCHASE",SIIERAS
          MOVE      ZERO,SIIESOH
          MOVE      WORDER,SIIESOO
          MOVE      ZERO,SIIEROQ
          MOVE      ZERO,SIIEROL
          MOVE      ZERO,SIIESTI
          MOVE      SP70,SIIESTD
          MOVE      ZERO,SIIESIC
          MOVE      ZERO,SIIESAB
          MOVE      "A",SIIEABC
          MOVE      ZERO,SIIESUS
          UNPACK    SP70,SIIEUR1,SIIEUR2,SIIEUC1,SIIEUC2:
                         SIIEUD1,SIIEUD2,SIIEUY1,SIIEUY2
          MOVE      SP30,SIIESPA
.
          CALL      WRSIIE1
          MOVE      "1",AUDTTYPE            * new audit
          CALL      WASIIE00
          GOTO      ULIN1500
.
ULIN1400  MOVE      "2",AUDTTYPE            * before audit
          CALL      WASIIE00
          ADD       WORDER,SIIESOO
          CALL      UPSIIE1
          MOVE      "3",AUDTTYPE            * after audit
          CALL      WASIIE00
.
.   POST PURCHASE ORDERS B FILE DATA
.
ULIN1500  IF        INCNOVHA=2
            PACK      KEY10,SIVHCOR,SIVHLIN,SP70
          ELSE
            ADD       ONE,PFORM3
            PACK      KEY10,SIPAPON,PFORM3,SP70
          ENDIF
          UNPACK    KEY10,SIPCPON,SIPCITM
          CALL      RDSIPC1
          IF        (INCNOVHA=1 & OVRCD<>1)
            GOTO      ULIN1500
          ENDIF
          IF        (INCNOVHA=2 & OVRCD<>1)
            GOTO      ULIN2000
          ENDIF
.
          MATCH     SIPACST,SP70
          IF        @EQUAL | SIIANON=0
            MOVE      "Stock",SIPCCST
          ELSE
            MOVE      SIPACST,SIPCCST
          ENDIF
          MOVE      SIIASUB,SIPCPRD
.
          PACK      SIPEDATE,SIPADIN,SP70
          REP       " 0",SIPEDATE
          CALL      RSIPE000           * get current period
          PACK      SIPCDAT,SIPEYEAR,SIPEPER,SP70
.
          MOVE      HDEFWH,SIPCWAR
          PACK      KEY5,SIPCWAR
          CALL      RDSIWA1
          IF        OVRCD=1
            DISPLAY   *P1:24,*B,*EF:
                      "WARNING: Default Warehouse Missing. First Used - ";
            CALL      HITENTER
            PACK      KEY5,SP70
            CALL      RSSIWA1
            CALL      RKSIWA1
            PACK      HDEFWH,SIPCWAR,SP70
          ENDIF
.
          MOVE      SIIACAT,SIPCCAT
          MOVE      SIICPNO,SIPCPN
          MOVE      SIICPD1,SIPCPD
          MOVE      SP70,SIPCCON
          MOVE      SP70,SIPCCDT
          MOVE      SIICSUT,SIPCSUT
          PACK      SIPCEDD,CCC,CYY,CMM,CDD
          REP       " 0",SIPCEDD
          MOVE      SP70,SIPCFDD
.
          DIV       SIFACTOR,WGIVEN
          MOVE      WGIVEN,SIPCOQT
          MULT      SIFACTOR,WGIVEN
.
          MOVE      ZERO,SIPCIQT
          MOVE      ZERO,SIPCRQT
          MOVE      SIVHCOS,SIPCECT
          MOVE      SIIAGST,SIPCGST
          CALL      CALTAX00
          MOVE      SIPCOQT,SIPCOQO
          MOVE      SIPCECT,SIPCOOP
          MOVE      SIPCGSTA,SIPCOGS
          PACK      SIPCUR1,SP70
          PACK      SIPCUR2,SP70
          PACK      SIPCUD1,SP70
          PACK      SIPCUD2,SP70
          PACK      SIPCUY1,SP70
          PACK      SIPCUY2,SP70
          PACK      SIPCSPA,SP70
.
          CALL      WRSIPC1
          MOVE      "1",AUDTTYPE
          CALL      WASIPC00
.
.---- update usage ----
.
          ASSIGN    SIPCOQT*SIFACTOR,SIUSQTY
          IF        SIPCECT<0
            MOVE      ZERO,SIUSCST
          ELSE
            IF        SNCOPURC=1
              ASSIGN    SIPCECT*SIPCOQT,SIUSCST
            ELSE
              MOVE      SIPCECT,F12P4
              SUB       SIPCGSTA,F12P4
              ASSIGN    F12P4*SIPCOQT,SIUSCST
            ENDIF
          ENDIF
          UNPACK    SIPCDAT,SIPEYEAR,SIPEPER
.
          CALL      SINORDUS                     * Update Purchases Usage
.
          COMPARE   ZERO,CEAFILE
          GOTO      ULIN9999 IF NOT EQUAL
          MOVE      SIPCOQT,MODQTY
          MATCH     SP70,SIPCCAT
          GOTO      ULIN1800 IF EQUAL
.
          BRANCH    SIIANON,ULIN1800
          CALL      USCEA000 
          GOTO      ULIN9999
.
ULIN1800  CALL      UNCEA000
          GOTO      ULIN9999
.
. ------- Update Purchase Order Details
.
ULIN2000  MOVE      SIPCWAR,SIWAWAR          * Set up SIWAWAR for usage
          MOVE      SIPCWAR,KEY5
          CALL      RDSIWA1
.
          PACK      KEY10,SIPAPON,SIVHLIN,SP70
          UNPACK    KEY10,SIPCPON,SIPCITM
          CALL      RDSIPC1
          BRANCH    OVRCD,ULIN9999            * Must Exists to be updated
.
. ------- Update Catalog Warehouse Details
          PACK      KEY12,SIPCCAT,SIPCWAR,SP70
          UNPACK    KEY12,SIIECAT,SIIEWAR
          CALL      RDSIIE1
          IF        OVRCD=0
            MOVE      "2",AUDTTYPE            * before audit
            CALL      WASIIE00
            ASSIGN    WORDER-WGIVEN+SIIESOO,SIIESOO          * New Stock
            CALL      UPSIIE1
            MOVE      "3",AUDTTYPE            * after audit
            CALL      WASIIE00
          ENDIF
.
. ------- Update Order Usage
          ASSIGN    (SIVHQTY-SIPCOQT)*SIFACTOR,SIUSQTY
          ASSIGN    SIVHQTY-SIPCOQT,MODQTY
          IF        SIVHCOS<0
            MOVE      ZERO,SIVHCOS
          ENDIF
          IF        SNCOPURC=1
            ASSIGN    (SIVHCOS*SIVHQTY)-(SIPCECT*SIPCOQT),SIUSCST
          ELSE
            MOVE      SIPCECT,SAVECT
            MOVE      SIPCGSTA,SAVGST
            MOVE      SIVHCOS,SIPCECT
            CALL      CALTAX00
            MOVE      SIPCECT,F12P4
            SUB       SIPCGSTA,F12P4
            MOVE      SAVECT,SIPCECT
            MOVE      SAVGST,SIPCGSTA
            MOVE      SIPCECT,F12P4A
            SUB       SIPCGSTA,F12P4A
            ASSIGN    (F12P4*SIVHQTY)-(F12P4A*SIPCOQT),SIUSCST
          ENDIF
.
          CALL      SINORDUS                * Update Purchasing Usage
.
. ------- Update Purchase Order File 
          MOVE      "2",AUDTTYPE            * before audit
          CALL      WASIPC00
          MOVE      SIVHSUN,SIPCSUT
          MOVE      SIVHQTY,SIPCOQT         * New Order Quantity
          MOVE      SIVHCOS,SIPCECT         * New Expected Cost
          CALL      CALTAX00
          CALL      UPSIPC1
          MOVE      "3",AUDTTYPE            * after audit
          CALL      WASIPC00
.
          COMPARE   ZERO,CEAFILE
          GOTO      ULIN9999 IF NOT EQUAL
          MATCH     SP70,SIPCCAT
          GOTO      ULIN8800 IF EQUAL
.
          BRANCH    SIIANON,ULIN8800
          CALL      USCEA000 
          GOTO      ULIN9999
.
ULIN8800  CALL      UNCEA000
          GOTO      ULIN9999
.
.         ALWAYS UNLOCK THE CATALOG FILE LAST
ULIN9999  CALL      UUSIIA1
          RETURN
.-------------------------------------------------------------------------------
. Get Next Purchase Order Number and Update Purchase Order A file - Direct Order
.-------------------------------------------------------------------------------
UDIR0000  
          MATCH     SIVHORD,LASTORD
          GOTO      UDIR9000 IF EQUAL       * Create New Order Number ?
.
          MOVE      SIVHORD,LASTORD         * save current order
          MOVE      ZERO,PFORM3             * clear item number
          MOVE      ZERO,STOCKTYP           * unknown
.
.---- get warehouse ----
.
          PACK      KEY5,HDEFWH,SP70        * read default warehouse
          CALL      RDSIWA1
          IF        OVRCD=1
            PACK      KEY5,SP70             * use first W/H if default missing
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          PACK      KEY7,SIVHCOR,SP70       * see if a current order exists
          CALL      RLSIPA1
          BRANCH    OVRCD,UDIR0005,UDIR0005 * skip if locked
.
          PACK      KEY30,SIPADPR,SIPADCN,SIPADCM,SP70
          MATCH     SP70,KEY30              * check if we can add to this order
          GOTO      UDIR0005 IF NOT EQUAL
          MOVE      ZERO,STOCKTYP           * restore load type
          MOVE      SIVHTYP,STOCKTYP
          GOTO      UDIR9000
.
.     ---- check how the order is to be loaded ----
.
UDIR0005  
          UNPACK    SIVHORD,KEY13,KEY7
.
UDIR0006  DISPLAY   *P1:14,*EF:
                    *P1:15,"Current ",SITE," Order Reference : ":
                    *V2LON,SIVHORD,*HOFF:
                    *P1:17,*V2LON," 1",*HOFF," = Use ",*V2LON,KEY7,*HOFF:
                                                 " as Purchase Order":
                    *P1:18,*V2LON," 2",*HOFF," = Enter Selected Purchase Order":
                    *P1:19,*V2LON," 3",*HOFF," = Generate Purchase Order":
                    *P1:20,*V2LON," 9",*HOFF," = Exit";
.
UDIR0008
          KEYIN     *P1:24,"Select Item : ",*V2LON,IHATEU
          BRANCH    IHATEU,UDIR0010,UDIR0020,UDIR0030
          COMPARE   "9",IHATEU
          GOTO      UDIR9500 IF EQUAL
          BEEP
          GOTO      UDIR0008
.
.            ---- Use VHA Reference Number ----
.
UDIR0010
          MOVE      ZERO,PFORM7
          MOVE      KEY7,PFORM7
          MOVE      PFORM7,SIPAPON
.
          COMPARE   ZERO,PFORM7        * Zero PO No. entered
          GOTO      UDIR0015 IF NOT EQUAL
          DISPLAY   *P1:24,*B,*EF,SITEABBR," Number not a valid PO Number - ";
          CALL      HITENTER
          GOTO      UDIR0005
.
UDIR0015  CALL      CKPO0000           * check if PO No. ok
          BRANCH    EXIT,UDIR0005
          GOTO      UDIR0150
.
.            ---- Enter Selected PO Number ----
.
UDIR0020
          KEYIN     *P1:24,"Enter Purchase Number : ",*EF,*V2LON,PFORM7A;
          MOVE      PFORM7A,SIPAPON
.
          COMPARE   ZERO,PFORM7A        * no PO No. entered
          GOTO      UDIR0005 IF EQUAL
.
          KEYIN     *P35:24,"Confirm : ",*EF,*V2LON,PFORM7;
          COMPARE   PFORM7,PFORM7A
          GOTO      UDIR0020 IF NOT EQUAL
.
          CALL      CKPO0000           * check if PO No. ok
          BRANCH    EXIT,UDIR0005
          GOTO      UDIR0150
.
.            ---- generate PO number ----
.
UDIR0030
          MOVE      "       ",SIPAPON
          CALL      SINORDNO         * Get Next Order Number
          IF        OVRCD=1
            DISPLAY   *P1:24,*B,*EL,"Unable to Allocate an Order Number - ";
            CALL      MESSAGE1
            GOTO      UDIR0005
          ENDIF
          DISPLAY   *P1:24,*EL,"Generating Purchase Order Number : ":
                    *V2LON,SIPAPON," - ";
          CALL      HITENTER
          GOTO      UDIR0150
.
.              ----- create purchase order -----
.
UDIR0150  
          MOVE      SIPAPON,KEY7
          MOVE      INCNVHAS,SIPASUP
          MOVE      SAVORG,SIPAORI
          MOVE      SAVORG,KEY3
          CALL      RDSIOR1
          PACK      SIPAICN,SIORHOSP,SP70
          IF        INCNOVHA=1
            APPEND    "Direct ",SIPASCN
            APPEND    SITE,SIPASCN
            APPEND    " Order. Acknowledgement          ",SIPASCN
          ELSE
            APPEND    "Return ",SIPASCN
            APPEND    SITE,SIPASCN
            APPEND    " Order. Acknowledgement          ",SIPASCN
          ENDIF
          MOVE      SP70,SIPADEL
          MOVE      SP70,SIPAMES
          PACK      SIPADIN,CCC,SIVHDAT,SP70
          MOVE      SP70,SIPADPR
          MOVE      SP70,SIPADCN
          MOVE      SP70,SIPADCM
          MOVE      SP70,SIPACON
          MOVE      SP70,SIPAIDP
          MOVE      SP70,SIPACST
          UNPACK    SP70,SIPAUR1,SIPAUR2,SIPAUD1,SIPAUD2:
                         SIPAUC1,SIPAUC2,SIPAUY1,SIPAUY2
.
          READ      CONTROLF,TWENTY5;HADEL1,HADEL2,HADEL3,HADEL4:
                                     HADEL5,HADEL6,HADEL7,HADEL8
          MOVE      SIORDEL,F1
          LOAD      SIPADEL,F1,HADEL1,HADEL2,HADEL3,HADEL4:
                               HADEL5,HADEL6,HADEL7,HADEL8
.
          MOVE      SIORMESS,SIPAMES
          MOVE      SIORCON,SIPACON
          MOVE      HDEFWH,SIPAWAR
.
          CALL      WRSIPA1
          CALL      RLSIPA1
          MOVE      "1",AUDTTYPE
          CALL      WASIPA00
.
          PACK      KEY7,SIPAPON,SP70  * update transfer file
          UNPACK    KEY7,SITRPURC
          MOVE      "2",SITRSTAT       * 0=Await 1=Progr 2=Rec 3=Trans 9=Can
          MOVE      PASSCODE,SITRUSER  * User ID for Transmission/Cancell'n 
          MOVE      SP70,SITRCREA      * Cancellation Reason                
          MOVE      SIPAORI,SITRORG    * Transmission/Cancell'n Originator  
          MOVE      SIPADIN,SITREDAT   * Date Order Entered                 
          MOVE      SIPADIN,SITRTDAT   * Date Order Transmitted/Cancelled   
          MOVE      ZERO,SITRTNUM      * Transmission File Number           
          MOVE      SIVHFNO,SITRTNUM
          MOVE      SP70,SITRSPAR      * Spare                              
          CALL      DESITR1
          CALL      WRSITR1
.
          DISPLAY   *P1:14,*EF:
                    *P1:17,*V2LON," 1",*HOFF," = All Catalog Types":
                    *P1:18,*V2LON," 2",*HOFF," = Stock Types Only":
                    *P1:19,*V2LON," 3",*HOFF," = Non- Stock Types Only";
.
UDIR0300
          KEYIN     *P1:24,"Select Item : ",*V2LON,STOCKTYP
          BRANCH    STOCKTYP,UDIR0400,UDIR0400,UDIR0400
          BEEP
          GOTO      UDIR0300
.
UDIR0400  SUB       ONE,STOCKTYP
.
UDIR0500  
          MOVE      SP70,SIPACST
          IF        STOCKTYP<>1
            DISPLAY   *P1:24,"Enter Default Cost Centre for Non-Stock Items : ";
            MOVE      "24",CVERT
            MOVE      "49",CCOL
            CALL      KSICAA00
            BRANCH    EXIT,UDIR0500,UDIR9500
            PACK      SIPACST,SICACODE,SP70
            CALL      UPSIPA1
          ENDIF
          GOTO      UDIR9000
.
. ------- Barwon Linen Service - PO's already exist
UDIR0600  
.
UDIR9000  MOVE      ZERO,EXIT
          GOTO      UDIR9999
.
UDIR9500  MOVE      ONE,EXIT
.
UDIR9999  RETURN
.-------------------------------------------------------------------------------
. Get Next Purchase Order Number and Update Purchase Order A file - Return Order
.-------------------------------------------------------------------------------
URET0000  MOVE      ZERO,COUNT
.
          UNPACK      SIVHORD,KEY13,SIVHCOR      * see if a current order exists
          PACK        KEY7,SIVHCOR,SP70
          REPEAT
            CALL      RLSIPA1
            BRANCH    OVRCD,URET7000
            ADD       ONE,COUNT
          UNTIL     OVRCD=0 | COUNT>20
          COMPARE   "20",COUNT
          GOTO      URET8000 IF NOT LESS    * Cannot Unlock
.
          CLEAR     KEY30
          RESET     KEY30
          PACK      KEY30,SIPADPR,SIPADCN,SIPADCM,SP70
          MATCH     KEY30,SP30              * check if we can add to this order
          GOTO      URET6000 IF NOT EQUAL
.
          MOVE      ZERO,STOCKTYP           * restore load type
          MOVE      SIVHTYP,STOCKTYP
.
. ------- Update Transfer Status to Completed if not already (only header)
          PACK      KEY7,SIVHCOR,SP70
          CALL      RDSITR1
          IF        OVRCD=0
            MATCH     "3",SITRSTAT          * Completed Status
            IF        !@EQUAL
              MOVE      "3",SITRSTAT
              CALL      UPSITR1
            ENDIF
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      URET9999
.
URET6000  DISPLAY   *P1:24,*EL,*B,"P.O. ",SIVHCOR," has already been ":
                    "Printed or Cancelled or Completed. ";
          CALL      HITENTER
          GOTO      URET9000
.
URET7000  DISPLAY   *P1:24,*EL,*B,"Purchase Order does not exist with PO##: ":
                    SIVHCOR,".  ";
          CALL      HITENTER
          GOTO      URET9000
.
URET8000  DISPLAY   *P1:24,*EL,*B,"Record is locked and cannot be accessed. ";
          CALL      HITENTER
          GOTO      URET9000
.
URET9000  MOVE      ONE,EXIT
.
URET9999  RETURN
.----------------------------------------------------------------------
. CKPO - check if PO Number Valid
.----------------------------------------------------------------------
CKPO0000  
          READ      CONTROLF,TWENTY4;*121,HSTRORD,HFINORD
.
          MOVE      ZERO,PFORM7
          MOVE      SIPAPON,PFORM7
          COMPARE   ZERO,PFORM7        * check for zero
          GOTO      CKPO8000 IF EQUAL
.
          PACK      KEY7,PFORM7,SP70   * check if PO exists
          CALL      RASIPA1
          IF        OVRCD=0 & INSSVHA<>2
            GOTO      CKPO8100
          ENDIF
.
CKPO1000  COMPARE   HSTRORD,PFORM7     * check range
          GOTO      CKPO8200 IF LESS
          COMPARE   PFORM7,HFINORD
          GOTO      CKPO8200 IF LESS
.
          GOTO      CKPO9000
.
.--- error messages ---
.
CKPO8000  DISPLAY   *P1:24,*B,*EL:
                    "P/O Number Cannot Be Zero - ";
          CALL      HITENTER 
          GOTO      CKPO9500
.
CKPO8100  DISPLAY   *P1:24,*B,*EF,"Purchase Order ",*V2LON,KEY7,*HOFF:
                    " Already Exists - ";
          CALL      HITENTER
          GOTO      CKPO9500
.
CKPO8200  DISPLAY   *P1:24,*B,*EL:
                    "P/O Range Warning, Check Selected Ranges - ";
          CALL      HITENTER 
          GOTO      CKPO9500
.
.
CKPO9000  MOVE      ZERO,EXIT
          GOTO      CKPO9999
.
CKPO9500  MOVE      ONE,EXIT
.
CKPO9999  RETURN
.----------------------------------------------------------------------
. Update Non-Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
UNCEA000  MOVE      HORDDES,APEAISC  * System Prefix
          MOVE      SIPCPON,APEAORD
          MOVE      SIPASUP,APEACRD
          PACK      KEY8,APEAISC,APEAORD,SP70
          CALL      RDAPEA1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPADIN,APEADAT
            CALL      WRAPEA1
          ELSE
            MATCH     SIPASUP,APEACRD
            IF        !@EQUAL
              MOVE      SIPASUP,APEACRD
              MOVE      SIPADIN,APEADAT
              CALL      UPAPEA1
            ENDIF
          ENDIF
.
          MOVE      HORDDES,APEBISC  * System Prefix
          MOVE      SIPCPON,APEBORD
          PACK      APEBCAT,SIPCITM,SP70
          PACK      KEY14,APEBISC,APEBORD,APEBCAT
          CALL      RDAPEB1
          IF        OVRCD=0
            ADD       MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            IF        APEBQTY>0
              CALL      UPAPEB1
            ELSE
              CALL      DEAPEB1
              UNPACK    SP70,APEBISC,APEBORD,APEBCAT
              PACK      KEY8,APEAISC,APEAORD,SP70
              PACK      KEY14,KEY8,SP70
              CALL      RSAPEB1
              CALL      RKAPEB1
              PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
              MATCH     KEY8,KEY14
              CALL      DEAPEA1 IF NOT EQUAL
            ENDIF
.
            MOVE      MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            CALL      UFMFP000         * update committed expenditure
            GOTO      UNCEA999
          ENDIF
.
. No Existing Record
.--------------------
          MOVE      HDEFWH,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          PACK      SICAGL,SP70
          MOVE      SIPCCST,KEY5
          CALL      RDSICA1
.
          UNPACK    SICAGL,APEBLED,APEBACC
          MOVE      SIWADISS,APEBDIS
          MOVE      SIWARESP,APEBRES
          MOVE      SP70,APEBSPA
          MOVE      MODQTY,APEBQTY
          MOVE      SIPCECT,APEBUCT
          MOVE      SIPCGSTA,APEBUGS
          ASSIGN    APEBQTY*APEBUCT,APEBAMT
          ASSIGN    APEBQTY*APEBUGS,APEBGST
          MOVE      SIPCPD,APEBDES
.
UNCEA100  MATCH     SP70,APEBACC       * use posting acc if no CC
          GOTO      UNCEA115 IF EQUAL
.
          STORE     APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APEBACC,APEBACC,FMSUUD2B
          ENDIF
.
          MATCH     SP70,SIPCPRD
          IF        @EQUAL
            MOVE      SIIASUB,SIPCPRD
          ENDIF
          PACK      KEY5,SIPCPRD,SP70
          CALL      RDSISA1
          BRANCH    SIWATYP,UNCEA120,UNCEA115
.
UNCEA110
          PACK      SILTSUB,SIPCPRD,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add subj code
          GOTO      UNCEA200
.
UNCEA115
          PACK      APEBACC,SICAPACC,SP70        * Use CC Posting Account
          GOTO      UNCEA200
.
UNCEA120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add commodity code
.
UNCEA200
          CALL      XHKFMS00
.                                           * don't write if qty=0     *I-43474
          IF        APEBQTY > 0
            CALL      WRAPEB1
          ENDIF                                                        *I-43474
          CALL      UFMFP000           * update committed expenditure
.
UNCEA999  RETURN
.------------------------------------------------------------
. Check FMS Account
.------------------------------------------------------------
XHKFMS00  MOVE      ZERO,FMAMTYPE
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            SQUEEZE   KEY14
            CALL      RDFMAM1
            IF        OVRCD=0
              UNPACK    KEY14,APEBLED,APEBACC
            ENDIF
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Update Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
USCEA000  MOVE      HORDDES,APEAISC  * System Prefix
          MOVE      SIPCPON,APEAORD
          MOVE      SIPASUP,APEACRD
          PACK      KEY8,APEAISC,APEAORD,SP70
          CALL      RDAPEA1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPADIN,APEADAT
            CALL      WRAPEA1
          ELSE
            MATCH     SIPASUP,APEACRD
            IF        !@EQUAL
              MOVE      SIPASUP,APEACRD
              MOVE      SIPADIN,APEADAT
              CALL      UPAPEA1
            ENDIF
          ENDIF
.
          MOVE      HORDDES,APEBISC  * System Prefix
          MOVE      SIPCPON,APEBORD
          PACK      APEBCAT,SIPCITM,SP70
          PACK      KEY14,APEBISC,APEBORD,APEBCAT
          CALL      RDAPEB1
          IF        OVRCD=0
            ADD       MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            IF        APEBQTY>0
              CALL      UPAPEB1
            ELSE
              CALL      DEAPEB1
              UNPACK    SP70,APEBISC,APEBORD,APEBCAT
              PACK      KEY8,APEAISC,APEAORD,SP70
              PACK      KEY14,KEY8,SP70
              CALL      RSAPEB1
              CALL      RKAPEB1
              PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
              MATCH     KEY8,KEY14
              CALL      DEAPEA1 IF NOT EQUAL
            ENDIF
.
            MOVE      MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            CALL      UFMFP000         * update committed expenditure
            GOTO      USCEA999
          ENDIF
.
. No Existing Record
.--------------------
          MOVE      SIPCWAR,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          MOVE      SIWALED,APEBLED
          MOVE      SIWADISS,APEBDIS
          MOVE      SIWARESP,APEBRES
          MOVE      SP70,APEBSPA
          MOVE      MODQTY,APEBQTY
          MOVE      SIPCECT,APEBUCT
          MOVE      SIPCGSTA,APEBUGS
          ASSIGN    APEBQTY*APEBUCT,APEBAMT
          ASSIGN    APEBQTY*APEBUGS,APEBGST
          MOVE      SIPCPD,APEBDES
.
          BRANCH    SIWAPTY,USCEA100,USCEA100
          MOVE      SIWAPACC,APEBACC
          GOTO      USCEA200
.
USCEA100  STORE     SIWAPACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APEBACC,APEBACC,FMSUUD2B
          ENDIF
          PACK      KEY5,SIPCPRD,SP70
          CALL      RDSISA1
          BRANCH    SIWAPTY,USCEA110,USCEA120
.
USCEA110
          PACK      SILTSUB,SIPCPRD,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add subj code
          GOTO      USCEA200
.
USCEA120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add commodity code
.
USCEA200
          CALL      XHKFMS00
.                                           * don't write if qty=0     *I-43474
          IF        APEBQTY > 0
            CALL      WRAPEB1
          ENDIF                                                        *I-43474
          CALL      UFMFP000           * update committed expenditure
.
USCEA999  RETURN
.----------------------------------------------------------------------
. Update period summary file
.----------------------------------------------------------------------
UFMFP000
          PACK      KEY2,APEBLED,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,UFMFP999
.
          PACK      WORKDATE,APEADAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,UFMFP999
.
          MOVE      "fmsp",KEY4
          PACK      KEY8,KEY4,CURYEAR,SP70
          REP       " 0",CURYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,KEY8
          TRAPCLR   IO
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      RDFMFP1
          IF        OVRCD=0
            ASSIGN    APEBAMT+FMFPCOM2,FMFPCOM2
            CALL      UPFMFP1
          ELSE
            MOVE      ZERO,FMFPCBF
            MOVE      ZERO,FMFPC01
            MOVE      ZERO,FMFPC02
            MOVE      ZERO,FMFPC03
            MOVE      ZERO,FMFPC04
            MOVE      ZERO,FMFPC05
            MOVE      ZERO,FMFPC06
            MOVE      ZERO,FMFPC07
            MOVE      ZERO,FMFPC08
            MOVE      ZERO,FMFPC09
            MOVE      ZERO,FMFPC10
            MOVE      ZERO,FMFPC11
            MOVE      ZERO,FMFPC12
            MOVE      ZERO,FMFPC13
.
            MOVE      ZERO,FMFPABF
            MOVE      ZERO,FMFPA01
            MOVE      ZERO,FMFPA02
            MOVE      ZERO,FMFPA03
            MOVE      ZERO,FMFPA04
            MOVE      ZERO,FMFPA05
            MOVE      ZERO,FMFPA06
            MOVE      ZERO,FMFPA07
            MOVE      ZERO,FMFPA08
            MOVE      ZERO,FMFPA09
            MOVE      ZERO,FMFPA10
            MOVE      ZERO,FMFPA11
            MOVE      ZERO,FMFPA12
            MOVE      ZERO,FMFPA13
            MOVE      ZERO,FMFPCOM
.
            MOVE      ZERO,FMFPCBFD
            MOVE      ZERO,FMFPC01D
            MOVE      ZERO,FMFPC02D
            MOVE      ZERO,FMFPC03D
            MOVE      ZERO,FMFPC04D
            MOVE      ZERO,FMFPC05D
            MOVE      ZERO,FMFPC06D
            MOVE      ZERO,FMFPC07D
            MOVE      ZERO,FMFPC08D
            MOVE      ZERO,FMFPC09D
            MOVE      ZERO,FMFPC10D
            MOVE      ZERO,FMFPC11D
            MOVE      ZERO,FMFPC12D
            MOVE      ZERO,FMFPC13D
.
            MOVE      ZERO,FMFPABFD
            MOVE      ZERO,FMFPA01D
            MOVE      ZERO,FMFPA02D
            MOVE      ZERO,FMFPA03D
            MOVE      ZERO,FMFPA04D
            MOVE      ZERO,FMFPA05D
            MOVE      ZERO,FMFPA06D
            MOVE      ZERO,FMFPA07D
            MOVE      ZERO,FMFPA08D
            MOVE      ZERO,FMFPA09D
            MOVE      ZERO,FMFPA10D
            MOVE      ZERO,FMFPA11D
            MOVE      ZERO,FMFPA12D
            MOVE      ZERO,FMFPA13D
            MOVE      ZERO,FMFPCOMD
.
            MOVE      ZERO,FMFPCBFT
            MOVE      ZERO,FMFPC01T
            MOVE      ZERO,FMFPC02T
            MOVE      ZERO,FMFPC03T
            MOVE      ZERO,FMFPC04T
            MOVE      ZERO,FMFPC05T
            MOVE      ZERO,FMFPC06T
            MOVE      ZERO,FMFPC07T
            MOVE      ZERO,FMFPC08T
            MOVE      ZERO,FMFPC09T
            MOVE      ZERO,FMFPC10T
            MOVE      ZERO,FMFPC11T
            MOVE      ZERO,FMFPC12T
            MOVE      ZERO,FMFPC13T
.
            MOVE      ZERO,FMFPABFT
            MOVE      ZERO,FMFPA01T
            MOVE      ZERO,FMFPA02T
            MOVE      ZERO,FMFPA03T
            MOVE      ZERO,FMFPA04T
            MOVE      ZERO,FMFPA05T
            MOVE      ZERO,FMFPA06T
            MOVE      ZERO,FMFPA07T
            MOVE      ZERO,FMFPA08T
            MOVE      ZERO,FMFPA09T
            MOVE      ZERO,FMFPA10T
            MOVE      ZERO,FMFPA11T
            MOVE      ZERO,FMFPA12T
            MOVE      ZERO,FMFPA13T
            MOVE      ZERO,FMFPCOMT
.
            PACK      FMFPSPAR,SP70,SP70
            ASSIGN    APEBAMT,FMFPCOM2
            CALL      WRFMFP1
          ENDIF
.
          COMPARE   ONE,FMCOCALC
          GOTO      UFMFP999 IF NOT EQUAL
.
          PACK      KEY20,PORT,CURYEAR,APEBLED,APEBACC,SP70
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      UFMFP999 IF EQUAL
.
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
UFMFP999  RETURN
.
UPCEB000  IF       HACCNT<>1
            GOTO     UPCEB999
          ENDIF
.
          PACK      KEY8,HORDDES,SIPCPON,SP70
          CALL      RDAPEA1
          BRANCH    OVRCD,UPCEB999
.
          PACK      KEY14,HORDDES,SIPCPON,SIPCITM,SP70
          CALL      RDAPEB1
          BRANCH    OVRCD,UPCEB999
.
          MATCH     FMAMLEDG,APEBLED
          GOTO      UPCEB500 IF NOT EQUAL
          MATCH     FMAMACCT,APEBACC
          GOTO      UPCEB999 IF EQUAL
.
UPCEB500  MOVE      FMAMLEDG,APEBLED
          MOVE      FMAMACCT,APEBACC
          CALL      UPAPEB1
          GOTO      UPCEB999
.
UPCEB800  MOVE      HORDDES,APEBISC
          MOVE      SIPCPON,APEBORD
          PACK      APEBCAT,SIPCITM,SP70
          MOVE      FMAMLEDG,APEBLED
          MOVE      FMAMACCT,APEBACC
          MOVE      SIPCPD,APEBDES
          MOVE      SIWADISS,APEBDIS
          MOVE      SIWARESP,APEBRES
          MOVE      SIPCECT,APEBUCT
          MOVE      SIPCECT,APEBAMT
          MULT      SIPCOQT,APEBAMT
          MOVE      SIPCGSTA,APEBUGS
          MOVE      SIPCGSTA,APEBGST
          MULT      SIPCOQT,APEBGST
          MOVE      SIPCOQT,APEBQTY
          PACK      APEBSPA,SP70
          CALL      WRAPEB1
          GOTO      UPCEB999
.  
UPCEB999  RETURN
.----------------------------------------------------------------------
. get subjective/commodity translation
.----------------------------------------------------------------------
GTRA0000  PACK      KEY8,FMAMLEDG,SILTSUB,SP70                         *C-59696
          CALL      RDSILT1
.
GTRA9999  RETURN
.
CALTAX00  COMPARE   ZERO,SIPCECT
          GOTO      CALTAX90 IF EQUAL
.
          MATCH     SP6,SIPCGST
          GOTO      CALTAX90 IF EQUAL
.
          PACK      KEY8,CCC,CYY,CMM,CDD,SP70
          REP       " 0",KEY8
.
          PACK      KEY14,SIPCGST,KEY8,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      CALTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,CALTAX90
.
          MATCH     SIPCGST,IBGECODE
          GOTO      CALTAX90 IF NOT EQUAL
.
CALTAX10  ASSIGN    (SIPCECT-(SIPCECT/(ONE+(IBGEAMNT/HUNDRED)))),SIPCGSTA
          GOTO      CALTAX99
.
CALTAX90  MOVE      ZERO,SIPCGSTA
.
CALTAX99  RETURN
.
          INC       STDGENCD
.
          INC       SINORDUS                 * P/O Usage
.
          INC       APSCEAIO/INC
          INC       APSCEBIO/INC
          INC       APSCIOIO/INC
          INC       APSMASIO/INC
          INC       APSMXRIO/INC
          INC       APSORDIO/INC
          INC       APSSNTIO/INC
          INC       APSSUBIO/INC
.
          INC       FMSAMAIO/INC
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSFPSIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCKY
          INC       FMSLMCIO/INC
          INC       FMSTUPIO/INC
.
          INC       IBAGSTIO/INC
          INC       IBAGEDIO/INC
.
          INC       SINPONCD
.
          INC       SINCCAIO/INC
          INC       SINCCAKY
          INC       SINCGAIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCIAKY
          INC       SINCICIO/INC
          INC       SINCIEIO/INC
          INC       SINCIFIO/INC
          INC       SINCIHIO/INC
          INC       SINCODIO/INC
          INC       SINFACIO/INC
          INC       SINFACKY
          INC       SINLTTIO/INC
          INC       SINORIKY
          INC       SINORIIO/INC             * P/O originator details file
          INC       SINPERIO/INC
          INC       SINPERCD
          INC       SINPOAIO/INC             * Purchase order file A
          INC       SINPOCIO/INC             * Purchase order file - line items
          INC       SINNATIO/INC             * Nato Code File
          INC       SINSOSIO/INC             * ASCII transfer file
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINTRNIO/INC             * Transmission control file
          INC       SINVHAIO/INC             * ASCII Receive Transfer file
          INC       SINWARIO/INC
.
