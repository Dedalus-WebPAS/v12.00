.***************************************************************************
.* System    :   Billing                                                   *
.* Program   :   IBARSH17                                                  *
.* Desc      :   Schedule program to process new file records              *
.***************************************************************************
.* Date      :   20/11/2006                                                *
.* Author    :   J.Tan                                                     *
.* Function  :   This program will process various function that relate    *
.*           :   to global function as scheduled reports.                  *
.*           :                                                             *
.* Mods      :                                                             *
.*           :  V10.04.01 12/05/2013  J.Tan    CAR 233545                  *
.*           :            Fixed Global duplication for Contract Proc.Matrix*
.*           :   V9.12.01 27/11/2009 J.Tan     CAR 210952                  *
.*           :            Renamed oldcmtaf to nzpcm2af                     *
.*           :   V9.08.03 23/02/2007 Davin     CAR 120000                  *
.*           :            Ask to create new file with copy of current data *
.*           :   V9.08.02 22/02/2007 J.Tan     CAR 120000                  *
.*           :            Fixed copying current to old file                *
.*           :   V9.08.00 20/11/2006 J.Tan     CAR 120000                  *
.*           :            Created program                                  *
.***************************************************************************
.
          INC       STD001FD
          INC       STDHLPDF
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       IBACONFD/INC
          INC       NZPCMTFD/INC
          INC       NZPCM1FD/INC
          INC       NZPCM2FD/INC
          INC       PATFN1FD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATCMCFD/INC
.
. LOCAL VARIABLE DEFINITION
. ----
ADDFLAG   FORM      1
CODE      DIM       2
CLMFLG    FORM      1
CSMFLG    FORM      1
CPTOFLG   FORM      1
.
DUPLFLG   FORM      1
DELFLAG   FORM      1
ECOL1     FORM      2
.
FCCOD     DIM       3
FCMCD     DIM       9
FHFUN     DIM       6
FNDFLG    FORM      1
FRTYP     DIM       1  
.
INSFLAG   FORM      1
INSRTCD   DIM       9
.
RECTYPE   DIM       1
RECTFLG   FORM      1
RECTDESC  DIM       10
.
SAVFTYP   DIM       1
SAVPROC   DIM       9
SAVCCOD   DIM       3
SAVHFUN   DIM       6
SAVTYPE   DIM       1
SAVCMCD   DIM       9
SAVITYP   DIM       1
SAVCNTR   DIM       6
SKEY26    DIM       26
TCMCD     DIM       9
.
RECEDESC  INIT      "Either"
RECDDESC  INIT      "Daycase"
RECODESC  INIT      "Overnight"
.
SAVKEY26  DIM       26
TCCOD     DIM       3
THFUN     DIM       6
.
PRGID     INIT      "IBARSH17"
PRGNAM    INIT      "Global Maintenance  "
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
.
          BRANCH    COPTION,ML1100,ML1200,ML1300,ML1400
.
          GOTO      ML0100
.
.
ML1100    CALL      CMTX0000              * Create Casemix Matrix new file
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1200    CALL      HMTX0000              * Matrix HF Duplication   
          BRANCH    EXIT,ML0100           * matrix file
          GOTO      ML9999
.
ML1300    CALL      GMTX0000              * Global deletion of new casemix
          BRANCH    EXIT,ML0100           * matrix file
          GOTO      ML9999
.
ML1400    CALL      UMTX0000              * Update new to current Casemix 
          BRANCH    EXIT,ML0100           * matrix file
          GOTO      ML9999
ML9999    CHAIN     PGM                   * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P64:24,"nzpcmtaf";
          OPEN      NZPCMTA1,"nzpcmtaf"
.
          DISPLAY   *P64:24,"nzpcm1af";
          OPEN      NZPCM1A1,"nzpcm1af"
.
          DISPLAY   *P64:24,"nzpcm2af";
          OPEN      NZPCM2A1,"nzpcm2af"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patcmcaf";
          OPEN      PATCMCA1,"patcmcaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  HLINE     *G37,2,50,80
          DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P2:5,*V2LON,ONE,*HOFF," = Create New Matrix file":
                    *P2:6,*V2LON,TWO,*HOFF," = Matrix Duplication ":
                                                " (New file)":
                    *P2:7,*V2LON,THREE,*HOFF," = Global Deletion (New file)":
                    *P2:8,*V2LON,FOUR,*HOFF," = Update New to Curr Matrix file"
.
OPTN0500  KEYIN     *P1:22,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:22,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000,OPTN9000,OPTN9000,OPTN9000
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               CMTX0000              Called by: ML2800  *
.* Create new Casemix Matrix file. This will deletes all records from the *
.* Casemix Matrix file and load the current file records.                 *
.**************************************************************************
CMTX0000  KEYIN     *P1:24,*EL:
                    "Are You Sure You Want to Overwrite the New File (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CMTX1000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CMTX9500 IF EQUAL
.
          BEEP
          GOTO      CMTX0000
.
CMTX1000  KEYIN     *P1:24,*EL,"Do You Want to Start with a Copy of the":
                    " Current Data (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CMTX9000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CMTX2000 IF EQUAL
.
          BEEP
          GOTO      CMTX1000
.
CMTX2000  KEYIN     *P1:24,*EL,"You Will Lose All Current Procedure Matrix":
                               " records.  Are You ":
                               "Sure (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,DIM1;
.
          REP       UPPLOW,DIM1
          MATCH     ANSY,DIM1
          GOTO      CMTX8000 IF EQUAL
.
          MATCH     ANSN,DIM1
          GOTO      CMTX9500 IF EQUAL
.
          BEEP
          GOTO      CMTX2000
.
CMTX8000  CALL      DMTX0000                * Delete all record from new file
          MOVE      ZERO,EXIT               * Do not load current file date
          GOTO      CMTX9999
.
CMTX9000  CALL      DMTX0000                * Delete all record from new file
          CALL      LMTX0000                * Load current record to new file
.
          MOVE      ZERO,EXIT
          GOTO      CMTX9999
.
CMTX9500  MOVE      ONE,EXIT
.
CMTX9999  RETURN
+
.***************************************************************************
.*                               DMTX0000              Called by: CMTX0000 *
.* Delete all records from New Contract Procedure Matrix File    UMTX0000 *
.***************************************************************************
DMTX0000  PACK      KEY26,SP70
          CALL      RSNZCM11
          CALL      RKNZCM11
          BRANCH    OVRCD,DMTX9999         * End of new file
.
          PACK      KEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,NZCMITYP:
                          NZCMCCNT,SP70
          CALL      DENZCM11               * Delete record
          GOTO      DMTX0000
.
DMTX9999  RETURN
.***************************************************************************
.*                               LMTX0000              Called by: CMTX0000 *
.* Load current Contract Procedure Matrix File to New Matrix File          *
.***************************************************************************
LMTX0000  PACK      KEY26,SP70
          CALL      RSNZCMT1
LMTX1000  CALL      RKNZCMT1
          BRANCH    OVRCD,LMTX9999         * End of new file
.
          PACK      KEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,NZCMITYP:
                          NZCMCCNT,SP70
.
          CALL      WRNZCM11               * Write to new file
          GOTO      LMTX1000
.
LMTX9999  RETURN
.**************************************************************************
.*                               UMTX0000              Called by: ML2900  *
.*    Update New to Current Casemix Funding File.                         *
.**************************************************************************
UMTX0000  KEYIN     *P1:24,*EL,"Are you sure you want to copy the new data ":
                    "over the old (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    ") ? ",*V2LON,ANS;
.
          MOVE      ZERO,EXIT
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      UMTX1000 IF EQUAL
.
          MOVE      ONE,EXIT
          MATCH     ANSN,ANS
          GOTO      UMTX9999 IF EQUAL
          BEEP
          GOTO      UMTX0000
.
UMTX1000  PACK      KEY26,SP70
          CALL      RSNZCM11
          CALL      RKNZCM11
          BRANCH    OVRCD,UMTX9999          * New file is empty so exit
.
          CALL      OMTX0000                * Delete records from oldfile
.
          CALL      SMTX0000                * Save current file to oldfile 
.
          CALL      RMTX0000                * Delete records from current file
.
          CALL      MMTX0000                * Load new file to current file
.
          CALL      DMTX0000                * Delete record from new file
.
UMTX9999  RETURN
+
.***************************************************************************
.*                               OMTX0000              Called by: UMTX0000 *
.* Delete all records from Old Casemix Matrix File                         *
.***************************************************************************
OMTX0000  PACK      KEY26,SP70
          CALL      RSNZCM21
          CALL      RKNZCM21
          BRANCH    OVRCD,OMTX9999         * End of old file
.
          PACK      KEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,NZCMITYP:
                          NZCMCCNT,SP70
          CALL      DENZCM21               * Delete record
          GOTO      OMTX0000
.
OMTX9999  RETURN
+
.***************************************************************************
.*                               SMTX0000              Called by: UMTX0000 *
.* Load current Contract Proc.Matrix File to old Matrix File               *
.***************************************************************************
SMTX0000  PACK      KEY26,SP70
          CALL      RSNZCMT1
SMTX1000  CALL      RKNZCMT1
          BRANCH    OVRCD,SMTX9999         * End of current file
.
          PACK      KEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,NZCMITYP:
                          NZCMCCNT,SP70
.
          CALL      WRNZCM21               * Write to old file
          GOTO      SMTX1000
.
SMTX9999  RETURN
+
.***************************************************************************
.*                               RMTX0000              Called by: UMTX0000 *
.* Delete all records from Current Contract Proced Matrix File             *
.***************************************************************************
RMTX0000  PACK      KEY26,SP70
          CALL      RSNZCMT1
          CALL      RKNZCMT1
          BRANCH    OVRCD,RMTX9999         * End of old file
.
          PACK      KEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,NZCMITYP:
                          NZCMCCNT,SP70
          CALL      DENZCMT1               * Delete record
          GOTO      RMTX0000
.
RMTX9999  RETURN
+
.***************************************************************************
.*                               MMTX0000              Called by: UMTX0000 *
.* Load new Procedure Matrix File to current Matrix File                   *
.***************************************************************************
MMTX0000  PACK      KEY26,SP70
          CALL      RSNZCM11
MMTX1000  CALL      RKNZCM11
          BRANCH    OVRCD,MMTX9999         * End of old file
.
          PACK      KEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,NZCMITYP:
                          NZCMCCNT,SP70
.
          CALL      WRNZCMT1               * Write to Current file
          GOTO      MMTX1000
.
MMTX9999  RETURN
+
.**************************************************************************
.*                              GMTX0000                                  *
.*        Global Deletion (New File)                                      *
.**************************************************************************
GMTX0000  CALL      CLVR0000               * clear variables
          DISPLAY   *P1:4,*EF
          MOVE      ZERO,FNDFLG
          MOVE      ONE,DELFLAG
          DISPLAY   *P60:15,*V2LON,"\  ",*HOFF,"to exit"
          CALL      DISP0000
          CALL      DKEY0000
.         BRANCH    EXIT,GMTX9990
          CALL      CONTQST                      * OK to delete
          BRANCH    CEXIT,GMTX0200,GMTX0000,GMTX9990
.
GMTX0200  MOVE      NZCMCLMC,SAVCCOD
          MOVE      NZCMCNTR,SAVHFUN
          MOVE      NZCMRTYP,SAVTYPE
          MOVE      NZCMCPRC,SAVCMCD
.
          PACK      SKEY26,SP70
          MATCH     SP3,NZCMCLMC           * all claim codes
          GOTO      GMTX0900 IF EQUAL
          PACK      SKEY26,NZCMCLMC,SP70
.
          MATCH     "All",NZCMCNTR
          GOTO      GMTX0900 IF EQUAL      * all health funds
.
          MATCH     SP6,NZCMCNTR           * all health funds
          GOTO      GMTX0900 IF EQUAL
          PACK      SKEY26,NZCMCLMC,NZCMCNTR,SP70
.
          MATCH     SP3,NZCMRTYP           * all record type
          GOTO      GMTX0900 IF EQUAL
          PACK      SKEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,SP70

          MATCH     SP9,NZCMCPRC           * all casemix codes
          GOTO      GMTX0900 IF EQUAL
          PACK      SKEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,SP70
.
GMTX0900  PACK      KEY26,SKEY26
          CALL      RSNZCM11
GMTX1000  CALL      RKNZCM11
          BRANCH    OVRCD,GMTX9990
.
          MATCH     SP3,SAVCCOD
          GOTO      GMTX2000 IF EQUAL
.
          MATCH     NZCMCLMC,SAVCCOD
          GOTO      GMTX9990 IF NOT EQUAL
.
GMTX2000  MATCH     SP70,SAVHFUN
          GOTO      GMTX4000 IF EQUAL
.
          BRANCH    FNDFLG,GMTX4000
.
          MATCH     NZCMCNTR,SAVHFUN
          GOTO      GMTX1000 IF NOT EQUAL
.
GMTX4000  MATCH     SP9,SAVCMCD
          GOTO      GMTX5000 IF EQUAL
.
          MATCH     NZCMCPRC,SAVCMCD
          GOTO      GMTX1000 IF NOT EQUAL
.
GMTX5000  PACK      KEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,NZCMITYP:
                          NZCMCCNT,SP70
          MOVE      KEY26,SKEY26
          CALL      DENZCM11
          GOTO      GMTX0900
.
GMTX9990  MOVE      ZERO,DELFLAG
.
GMTX9999  RETURN
+
.**************************************************************************
.*                               CLVR0000              Called by: MATR0000*
.*        Clear Variables                                                 *
.**************************************************************************
CLVR0000  UNPACK    SP70,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,NZCMITYP
          UNPACK    SP70,DNZCMCNT
          MOVE      ZERO,NZCMFTYP
          MOVE      ZERO,INSFLAG
          MOVE      ZERO,ADDFLAG
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CSMFLG
          MOVE      ZERO,CLMFLG
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,DUPLFLG
          MOVE      ZERO,RECTFLG
.
CLVR9999  RETURN
.**************************************************************************
.*                               DISP0000              Called by: ML0000  *
.*                                                                        *
.**************************************************************************
DISP0000  DISPLAY   *P1:5,*EF:
                    *P5:5,"Claim Code            : ":
                    *P5:6,"Health Fund           : ":
                    *P5:8,"Contract Proc.Code    : ":
                    *P5:9,"Record Type (E,D,O)   : "
.
          DISPLAY   *P49:9,"(",*V2LON,"E",*HOFF,"ither, ",*V2LON,"D",*HOFF:
                    "aycase, ",*V2LON,"O",*HOFF,"vernight)";
.
          IF        COPTION = 2 
            DISPLAY   *P1:14,*V2LON,"Copy To   - " 
            DISPLAY   *P5:15,"Claim Code            : ":
                      *P5:16,"Health Fund           : ":
                      *P5:18,"Contract Proc.Code    : "
            DISPLAY   *P60:20,*V2LON,"\  ",*HOFF,"to exit"
          ENDIF
.
DISP9999  RETURN
+
.**************************************************************************
.*                               DKEY0000              Called by: ML0000  *
.*                                                                        *
.**************************************************************************
.
DKEY0000  MOVE      ZERO,INSFLAG
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CSMFLG
          MOVE      ZERO,FNDFLG
.
. ------  keyin claim code ------
.
DKEY1000  MOVE      TWENTY9,ECOL
          MOVE      FIVE,EVERT
          MOVE      "CL",CODE
          CALL      PATCODKY
          IF        DELFLAG=1|COPTION = 2
            MATCH     SP8,ACODE
            IF        @EQUAL
              DISPLAY   *P38:EVERT,"All"
              MOVE      SP8,NZCMCLMC
              MOVE      ONE,CLMFLG
            ENDIF
            BRANCH    EXIT,DKEY2000,DKEY9000
          ELSE
            DISPLAY   *P38:EVERT,SP30
            BRANCH    EXIT,DKEY9000,DKEY9000
          ENDIF
.
          DISPLAY   *P38:EVERT,TDESC
          MOVE      ACODE,NZCMCLMC
.
. ------  keyin the health fund ------
.
DKEY2000  MOVE      SP6,NZCMCNTR
          MOVE      SIX,EVERT
          MOVE      SP70,HCODE
          CALL      PATFNDKY
          COMPARE   THREE,EXIT
          GOTO      DKEY2200 IF EQUAL       * Spaces blank hf
.
          IF        DELFLAG=1|COPTION = 2
            MATCH     SP8,HCODE
            IF        @EQUAL
              MOVE      ONE,FNDFLG
              DISPLAY   *P38:EVERT,"All"
              MOVE      "All",HCODE
              ADD       ONE,EVERT
              DISPLAY   *P38:EVERT,"All"
            ENDIF
            BRANCH    EXIT,DKEY4000,DKEY9000,DKEY4000
          ELSE
            DISPLAY   *P38:EVERT,SP30
            BRANCH    EXIT,DKEY1000,DKEY9000                           *I-61103
          ENDIF
.
DKEY2200  DISPLAY   *P38:EVERT,HFNAME
          MOVE      HCODE,NZCMCNTR
.
. ------  keyin casemix code ------
.
DKEY4000  MOVE      EIGHT,CVERT
          MOVE      TWENTY9,CCOL
          CALL      KPTCAA00
          IF        DELFLAG=1|COPTION = 2
            IF        EXIT = 1
              MATCH     SP8,ACODE
              IF        @EQUAL
                DISPLAY   *P38:CVERT,"All"
                MOVE      SP10,NZCMCPRC
                MOVE      ONE,CSMFLG
                MOVE      ZERO,EXIT
                GOTO      DKEY9999
              ENDIF
              BRANCH    EXIT,DKEY5000,DKEY9000
            ELSE
              BRANCH    EXIT,DKEY2000,DKEY9000
            ENDIF
          ELSE
            BRANCH    EXIT,DKEY2000,DKEY9000
          ENDIF
.
          MOVE      PTCACODE,NZCMCPRC
          DISPLAY   *P38:CVERT,PTCADES1

DKEY4500
          MOVE      TWENTY9,ECOL
          MOVE      NINE,EVERT
.
          CALL      KEDO0000                * Keyin record type
          BRANCH    EXIT,DKEY4000,DKEY9000
.
.
. ------  set insflag, 1=record doesn't exist, 0=changing existing record ------
.
DKEY5000  PACK      KEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,NZCMITYP:
                          NZCMCCNT,SP70
          CALL      RANZCMT1
          IF        OVRCD<>0
            MOVE      ONE,INSFLAG
          ENDIF
          GOTO      DKEY9999
.
DKEY9000  MOVE      ONE,EXIT
.
DKEY9999  RETURN
.******************************************************************************
.*                         KEDO0000                                           *
.*                         Keyin record type                                  *
.******************************************************************************
KEDO0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * Display description position
          MOVE      ZERO,EXIT

....      IF        CPTOFLG = 1 & RECTFLG = 1
....        DISPLAY   *PECOL:EVERT,*V2LON,"All";
....        GOTO      KEDO9999
....      ENDIF
.
          KEYIN     *PECOL:EVERT,*DV,UNDLN1:
                    *PECOL:EVERT,*V2LON,*NOSTRIP,RECTYPE:
                    *PECOL:EVERT,*DV,RECTYPE
.
          MATCH     EXITCHAR,RECTYPE        * test for Exit Character
          GOTO      KEDO9000 IF EQUAL
.
          CMATCH    SP1,RECTYPE             * test for "All"
          IF        @EOS | @EQUAL
            IF      DELFLAG = 1 | COPTION = 2
              MOVE      ONE,RECTFLG
              DISPLAY   *PECOL:EVERT,*V2LON,"All";
              MOVE      SP1,RECTYPE
              GOTO      KEDO9999
            ELSE
              GOTO      KEDO9500 IF EOS
              GOTO      KEDO7000            * error - "All" not allowed
            ENDIF
          ENDIF
.
          TYPE      RECTYPE
          GOTO      KEDO8000 IF EQUAL       * error - numeric found
.
          REP       "e1E1d2D2o3O3",RECTYPE
          TYPE      RECTYPE
          GOTO      KEDO8000 IF NOT EQUAL   * error - not E, D or O
.
          MOVE      RECTYPE,FORM1
          BRANCH    FORM1,KEDO1100,KEDO1200,KEDO1300
.
KEDO1100  MOVE      RECEDESC,RECTDESC
          GOTO      KEDO2000
.
KEDO1200  MOVE      RECDDESC,RECTDESC
          GOTO      KEDO2000
.
KEDO1300  MOVE      RECODESC,RECTDESC
          GOTO      KEDO2000
.
KEDO2000  REP       "1E2D3O",RECTYPE
          DISPLAY   *PECOL:EVERT,*V2LON,RECTYPE
          DISPLAY   *PECOL1:EVERT,*V2LON,RECTDESC,*HOFF;
          GOTO      KEDO9999
.
KEDO7000  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
          CALL      HITENTER
          GOTO      KEDO0000
.
KEDO8000  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must be 'E', 'D' or 'O' **";
          CALL      HITENTER
          GOTO      KEDO0000
.
KEDO9000  MOVE      TWO,EXIT                * Exit Character
          GOTO      KEDO9999
.
KEDO9500  MOVE      ONE,EXIT                * Nothing Entered
.
KEDO9999  MOVE      RECTYPE,NZCMRTYP
          RETURN
+
.**************************************************************************
.*                              HMTX0000                                  *
.*        Matrix duplication (new file)                                   *
.**************************************************************************
HMTX0000  CALL      CLVR0000               * clear variables
          DISPLAY   *P1:4,*EF,*V2LON,"Copy From - "
.
          CALL      DISP0000                * Display Duplication option screen
          CALL      KYFL0000                * Duplication option
          BRANCH    EXIT,HMTX0000,HMTX9999
.
          BRANCH    INSFLAG,HMTX9500
.
          CALL      DUPL0000                * Claim Code/H.F. Duplication
.
          IF        DUPLFLG = ONE
            DISPLAY   *P1:24,*EL,"Record duplication completed. ";
          ELSE
            DISPLAY   *P1:24,*EL,*V2LON," ** No records updated ** ";
          ENDIF
          CALL      HITENTER
          GOTO      HMTX9999
.
HMTX9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** No new file. File must be created first ** ";
          CALL      HITENTER
          NORETURN
          GOTO      HMTX9999
.
HMTX9500  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "No record exists. ";
          CALL      HITENTER
          GOTO      HMTX0000
.
HMTX9999  RETURN
+
.******************************************************************************
.*                                 KYFL0000                                   *
.*                              Duplication option                            *
.******************************************************************************
.         Keyin fields copying from
.
KYFL0000  CALL      CLVR0000                * Clear variables
          MOVE      ZERO,CPTOFLG            * Flag for keyin fields copying to
          MOVE      "5",EVERT
          CALL      KCLM0000                * Keyin claim code
          MOVE      NZCMCLMC,FCCOD
          BRANCH    EXIT,KYFL1000,KYFL9999
.
KYFL1000  MOVE      "6",EVERT
          DISPLAY   *PECOL:7,*EL;
          MOVE      ZERO,FNDFLG
          CALL      FNDK0000                * Keyin health fund
          MOVE      NZCMCNTR,FHFUN
          IF        EXIT = 1
            MOVE      ONE,FNDFLG
          ENDIF
          BRANCH    EXIT,KYFL3000,KYFL9999,KYFL3000
.
KYFL3000  MOVE      ZERO,EXIT
          MOVE      "8",EVERT
          CALL      KCMX0000                * Keyin Contract Procedure code
          MOVE      NZCMCPRC,FCMCD
          BRANCH    EXIT,KYFL3100,KYFL9999,KYFL1000    
.
KYFL3100  MOVE      ZERO,EXIT
          MOVE      "9",EVERT
          CALL      KEDO0000                * Keyin record type (E, D, or O)
          MOVE      NZCMRTYP,FRTYP
          BRANCH    EXIT,KYFL3100,KYFL9999
.
.         Keyin fields copying to
.
KYFL4000  MOVE      ONE,CPTOFLG
          MOVE      "15",EVERT
          CALL      KCLM0000                * Keyin claim code
          MOVE      NZCMCLMC,TCCOD
          BRANCH    EXIT,KYFL5000,KYFL9999
.
KYFL5000  MOVE      "16",EVERT
          CALL      FNDK0000                * Keyin health fund
          MOVE      NZCMCNTR,THFUN
          BRANCH    EXIT,KYFL7000,KYFL9999,KYFL7000
.
KYFL7000  MOVE      ZERO,EXIT
          MOVE      "18",EVERT
          CALL      KCMX0000                * Keyin Contract Proc.code
          MOVE      NZCMCPRC,TCMCD
          BRANCH    EXIT,KYFL8000,KYFL9999,KYFL5000
.
KYFL8000  MOVE      CLMFLG,FORM1       * the flags are all zero or one
          MULT      FNDFLG,FORM1       * if they are all one, then it's an error
          MULT      CSMFLG,FORM1
          BRANCH    FORM1,KYFL8300
.
          PACK      KEY26,FCCOD,FHFUN,FRTYP,FCMCD,SP20 
          PACK      SAVKEY26,TCCOD,THFUN,FRTYP,TCMCD,SP70
          MOVE      ZERO,EXIT
          MATCH     KEY26,SAVKEY26           * not copying to same combination
          GOTO      KYFL8400 IF EQUAL        * error..
.
          CALL      CONTQST
          MOVE      ONE,EXIT
          BRANCH    CEXIT,KYFL9000,KYFL8200,KYFL9999
.
KYFL8200  CALL      DISP0000
          MOVE      ZERO,EXIT
          GOTO      KYFL0000
.
KYFL8300  DISPLAY   *P1:24,*EL,*V2LON,"** At least one of the fields must not":
                    " be ALL ** ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      KYFL9999
.
KYFL8400  DISPLAY   *P1:24,*EL,*V2LON,"** The From and To sections can not ":
                    "be identical ** ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      KYFL9999
.
KYFL9000  MOVE      ZERO,EXIT
KYFL9999  RETURN
.
+
.******************************************************************************
.*                             DUPL0000                                       *
.*                       Processing duplication                               *
.******************************************************************************
DUPL0000  DISPLAY   *P1:24,*EL,*V2LON,"** ",*BLINKON,"Duplicating ",*HOFF:
                    *V2LON," ** ",*HOFF,*P33:24,"Claim Code : ",*P60:24:
                    "Scanning : ";
.
          PACK      KEY26,FCCOD,SP20,SP20 
          CALL      RSNZCM11
.
DUPL1000  CALL      RKNZCM11
          BRANCH    OVRCD,DUPL9999
.
          BRANCH    CLMFLG,DUPL2000          * all claim codes
          MATCH     FCCOD,NZCMCLMC           * check the claim
          GOTO      DUPL9999 IF NOT EQUAL    * Not same claim code
.
DUPL2000  PACK      SAVKEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,NZCMITYP:
                             NZCMCCNT,SP70
.
.
          DISPLAY   *P71:24,NZCMCLMC;
.
.         Check if we are doing a single claim code only
.
          IF        CLMFLG = 0
            MATCH     FCCOD,NZCMCLMC     * check if this is the claim code
            GOTO      DUPL1000 IF NOT EQUAL * no.
            MOVE      TCCOD,NZCMCLMC
          ENDIF
.
.         Check if we are doing a single health fund only
.
          IF        FNDFLG = 0
            MATCH     FHFUN,NZCMCNTR     * check if this is the health fund
            GOTO      DUPL1000 IF NOT EQUAL * No.
            MOVE      THFUN,NZCMCNTR
          ENDIF
.
.         Check if we are doing a single record type (Either,daycase,overnight)
.
          IF        RECTFLG = 0
            MATCH     FRTYP,NZCMRTYP     * check if this is the table type
            GOTO      DUPL1000 IF NOT EQUAL
          ENDIF
.
.         Check if we are doing a particular Contract Proc.code only
.
          IF        CSMFLG = 1
            PACK      KEY9,NZCMCPRC,SP9   * All option
            CALL      RDPTCMC1            * Validate an code
            BRANCH    OVRCD,DUPL1000
            GOTO      DUPL4000
          ELSE
            MATCH     FCMCD,NZCMCPRC
            GOTO      DUPL1000 IF NOT EQUAL
            MOVE      TCMCD,NZCMCPRC
          ENDIF
.
.
DUPL4000  DISPLAY   *P46:24,*V2LON,NZCMCLMC;
.
          CALL      SCMT0000                 * save Contract Proc.matix record
          PACK      KEY26,NZCMCLMC,NZCMCNTR,NZCMRTYP,NZCMCPRC,NZCMITYP:
                          NZCMCCNT,SP70
          CALL      RDNZCM11
.
          MOVE      SAVFTYP,NZCMFTYP
          MOVE      SAVPROC,NZCMPROC
.
          IF        OVRCD = 1
            CALL      WRNZCM11
          ELSE
            CALL      UPNZCM11
          ENDIF
          MOVE      ONE,DUPLFLG
.
          MOVE      SAVKEY26,KEY26
          CALL      RDNZCM11                 * Reposition on the original record
          GOTO      DUPL1000
.
DUPL9999  RETURN
+
.**************************************************************************
.*                               SCMT0000              Called by: MATR0000*
.*        Save Contract Proc.Matrix Record                                *
.**************************************************************************
SCMT0000  MOVE      NZCMCLMC,SAVCCOD
          MOVE      NZCMCNTR,SAVHFUN
          MOVE      NZCMRTYP,SAVTYPE
          MOVE      NZCMCPRC,SAVCMCD
          MOVE      NZCMITYP,SAVITYP
          MOVE      NZCMCCNT,SAVCNTR
          MOVE      NZCMFTYP,SAVFTYP
          MOVE      NZCMPROC,SAVPROC
SCMT9999  RETURN
+
.******************************************************************************
.*                                 KCMX0000                                   *
.*                         Keyin Contract Procedure code                      *
.******************************************************************************
KCMX0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * display description position
          MOVE      ZERO,EXIT
.
          IF        CPTOFLG = 1 & CSMFLG = 1
            DISPLAY   *PECOL1:EVERT,*V2LON,"All";
            GOTO      KCMX9999
          ENDIF
.
          PACK      INSRTCD,SP70
          KEYIN     *P29:EVERT,*EL,*V2LON,INSRTCD,*HOFF
.
          RESET     INSRTCD
          PACK      INSRTCD,INSRTCD,SP70
          MATCH     SP9,INSRTCD              * nothing entered ?
          IF        @EQUAL
            IF        COPTION = 2
              MOVE      ONE,EXIT
              GOTO      KCMX9000
            ELSE
              GOTO      KCMX9500
            ENDIF
          ENDIF
.
          MATCH     INSRTCD,QUEST            * question mark entered ?
          GOTO      KCMX1000 IF EQUAL
.
          MATCH     INSRTCD,EXITCHAR         * Exit char entered ?
          IF        @EQUAL
            MOVE      TWO,EXIT
            GOTO      KCMX9999
          ENDIF
.
          PACK      KEY9,INSRTCD
          CALL      RDPTCMC1
          IF        OVRCD<>0
            DISPLAY   *P1:24,*V2LON,"Invalid Code. ";
            CALL      HITENTER
            GOTO      KCMX0000
          ENDIF
.
          PACK      NZCMCPRC,PTCACODE,SP10
          DISPLAY   *P29:EVERT,*V2LON,PTCACODE,*PECOL1:EVERT,*EL,PTCADES1;
.
          GOTO      KCMX9000
.
KCMX1000  MOVE      SP10,NZCMCPRC
          MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          CALL      HPTCAA00          *** Used in ADT16
.
          MATCH     KEY9,SP9                 * anything selected ?
          GOTO      KCMX0000 IF EQUAL
          CALL      RDPTCMC1
          BRANCH    OVRCD,KCMX0000
.
          PACK      NZCMCLMC,PTCACODE,SP10
          DISPLAY   *P29:EVERT,*V2LON,PTCACODE,*PECOL1:EVERT,*EL,PTCADES1;
.
KCMX9000  IF        EXIT = 1
            IF        CSMFLG = 0 & CPTOFLG = 1
              DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
              CALL      HITENTER
              GOTO      KCMX0000
            ELSE
              DISPLAY   *PECOL1:EVERT,*V2LON,"All";
            ENDIF
.
            IF        CPTOFLG = 0
              MOVE      ONE,CSMFLG            * flag for all casemix code
            ENDIF
          ENDIF
          GOTO      KCMX9999
.
KCMX9500  MOVE      ONE,EXIT
.
KCMX9999  RETURN
+
.******************************************************************************
.*                         KCLM0000                                           *
.*                         Keyin claim code                                   *
.******************************************************************************
KCLM0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * Display description position
          MOVE      ZERO,EXIT
.
          IF        CPTOFLG = 1 & CLMFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      KCLM9999
          ENDIF
.
          MOVE      SP3,ACODE
          MOVE      SP3,CKYIDEF3
          MOVE      "CL",CODE
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY                * keyin code
          BRANCH    EXIT,KCLM1000,KCLM9999  * Nothing,exit entered
          MOVE      ACODE,NZCMCLMC
.
KCLM1000  IF        EXIT = 1
            IF        CLMFLG = 0 & CPTOFLG = 1
              DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
              CALL      HITENTER
              GOTO      KCLM0000
            ELSE
              DISPLAY   *PECOL1:EVERT,*V2LON,"All";
            ENDIF
.
            IF        CPTOFLG = 0
              MOVE      ONE,CLMFLG            * Flag for all claim code
            ENDIF
            GOTO      KCLM9999
          ENDIF
          DISPLAY   *PECOL1:EVERT,*EL,*V2LON,TDESC;
          GOTO      KCLM9999
.
KCLM9500  MOVE      ONE,EXIT
.
KCLM9999  RETURN
.******************************************************************************
.*                         FNDK0000                                           *
.*                         Keyin Health fund                                  *
.******************************************************************************
FNDK0000  MOVE      SP6,NZCMCNTR
          MOVE      "29",ECOL
          MOVE      "36",ECOL1
          MOVE      ZERO,EXIT
.
          IF        CPTOFLG = 1 & FNDFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      FNDK9999
          ENDIF
.
          MOVE      ZERO,CKYIMAND
          MOVE      SP20,HFNAME
          DISPLAY   *PECOL:EVERT,*EL;
.         CALL      PATFNDKY
.         PACK      NZCMCNTR,HCODE
.         BRANCH    EXIT,FNDK9000:          * Nothing entered
.                        FNDK9999           * Exitchar entered
.
          KEYIN     *PECOL:EVERT,*DV,UNDLN6:      * no default used
                    *PECOL:EVERT,*V2LON,*NOSTRIP,HCODE:
                    *PECOL:EVERT,*DV,HCODE
          RESET     HCODE
          GOTO      FNDK1000 IF EOS                * All
.
          ENDSET    HCODE
          APPEND    SP6,HCODE
          RESET     HCODE
.
          MATCH     "BLANK",HCODE
          GOTO      FNDK2000 IF EQUAL
.
          MATCH     "All",HCODE
          GOTO      FNDK1000 IF EQUAL
.
          MATCH     SP6,HCODE
          GOTO      FNDK2000 IF EQUAL
.
          MOVE      ZERO,PHFTACT
          PACK      KEY14,HCODE,ZERO,ZERO,ZERO,ZERO,SP10
          CALL      RDFUND1
          PACK      NZCMCNTR,HCODE
          GOTO      FNDK9000
.
FNDK1000  MOVE      ONE,EXIT                       * for All
.
FNDK2000  MOVE      SP20,HCODE                     * clear code field
          MOVE      SP20,HFNAME                    * clear desc field
.
.         for duplication option, check if spaces or eos entered
.
FNDK9000  IF        EXIT = 1
            IF        CPTOFLG = 0
              MOVE      ONE,FNDFLG       * flag for all health fund
              DISPLAY   *PECOL1:EVERT,*V2LON,"All";
              GOTO      FNDK9999
            ENDIF
.
.         if the 'copy from' hf was not ALL, the 'copy to' hf can not be ALL
.
            IF        CPTOFLG = 1 & FNDFLG = 0
              DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
              CALL      HITENTER
              GOTO      FNDK0000
            ENDIF
          ENDIF
.
FNDK9200  DISPLAY   *PECOL1:EVERT,*V2LON,HFNAME;
FNDK9999  RETURN
.
. =========================================================================
          INC       STD001IO
          INC       STDHLPCD
          INC       PATCODKY
          INC       PATCMCKY
          INC       PATFNDKY
.
          INC       PATFN1IO/INC
          INC       PATCODIO/INC
          INC       NZPCMTIO/INC
          INC       NZPCM1IO/INC
          INC       NZPCM2IO/INC
          INC       PATCMCIO/INC
