.*****************************************************************************
. Program      : V12PTMI1                                    
. Description  : Conversion patmi1af to new File layout      
.*****************************************************************************
. Modifications:           
.*****************************************************************************
. V12.00.00  11/04/2025 Thanh T       TSK 0955096 
.            Initial Version
.*****************************************************************************
.
.  using vi Global change command      :%s/FromString/ToString/g
.
.  Global change V12PTMI1  eg F57PTDOC
.  Global change v12ptmi1  eg f57ptdoc
.  Global change PATMI1FD  eg PATDOCFD (new layout)
.  Global change patmi1af  eg patdoctf
.  Global change PATMI1A1  eg PATDOCT1
.  Global change KEY8      eg KEY8
.  Global change KEY8      eg KEY9
.  Global change WRMISS1  eg WRDOCT1
.  Global change spatmi1f  eg sptdoctf
.
.  Global changes if Oracle Option is required -
.
.  Global Change answeryn  to Yes
.  Global change RSPTMIS1  eg RSPTDOC1
.  Global change RKPTMIS1  eg RKPTDOC1
.  Global change UPPTMIS1  eg UPPTDOC1
.
.  Global changes if Oracle Option is NOT required -

.  Global Change answeryn  to No
.  Global change RSPTMIS1  to OFDUMYIO
.  Global change RKPTMIS1  to OFDUMYIO
.  Global change UPPTMIS1  to OFDUMYIO
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
LOGFILE   FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
OLDFILE1  IFILE     SQL, FIXED=832, KEY="U1-8"
.
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  ----------------------------------
.DAADMNO   DIM       8          8       1  PATIENT ADMISSION NO.
.AURNO     DIM       8          8       9  PATIENT U.R NO.
.ADATE     DIM       8          8      17  Admission Date (CCYYMMDD)
.ATIME     DIM       8          8      25  PATIENT ADMISSION TIME
.DASTAT    DIM       1          1      33  ADMISSION STATUS
.                                           1 = PRE-ADMISSION
.                                           2 = CURRENT ADMISSION
.                                           3 = DISCHARGED
.                                           4 = ON LEAVE
.                                           5 = CANCELLED
.APORT     DIM       2          2      34  CURRENT PORT USING THIS RECORD
.ATRANNO   FORM      3          3      36  NEXT TRANSACTION NUMBER
.AINVPRT   FORM      3          3      39  NUMBER OF INVOICES PRINTED
.ALACDTE   DIM       8          8      42  last accom date invd (CCYYMMDD)
.ACANCEL   DIM       3          3      50  REASON PRE-ADMISS CANCELATION
.AWARD     DIM       3          3      53  PATIENT WARD NO.
.ABED      DIM       3          3      56  PATIENT BED NO.
.ADOCTR    DIM       6          6      59  DOCTOR REFERRED BY.
.ADOCTA    DIM       6          6      65  DOCTOR ATTENDING PATIENT.
.ADOCTL    DIM       30        30      71  LOCAL DOCTOR
.ASRCE     DIM       3          3     101  PATIENT ADMISSIONS SOURCE  (CAT S )
.ATYPE     DIM       3          3     104  PATIENT ADMISSIONS TYPE    (CAT A )
.ACLSS     DIM       3          3     107  PATIENT ADMISSIONS CLASS   (CAT P )
.ACARE     DIM       3          3     110  PATIENT CARE CLASS         (CAT CC)
.AFUNDH    DIM       6          6     113  PATIENT HEALTH FUND
.AFNDTB    DIM       8          8     119  PATIENT FUND TABLE
.AFNDMM    DIM       19        19     127  PATIENT FUND MEMBERSHIP NO
.AELIG     FORM      1          2     146  PATIENT ELIGIBILITY FOR GOV'T
.                                         REBATE. 1 = YES  2 = NO
.                                         STH - DISCHARGE DIAG.PRINTED
.                                         NZ NMDS FLAG
.                                         0=Not Submitted
.                                         1=Submitted
.                                         2=Warning Resubmit next extract
.                                         3=General Resubmit next extract
.                                         4=Visit Data Updated
.                                         5=Coding Data Updated
.AVISIT    FORM      1          2     148  PATIENT RELIGIOUS VISIT
.                                                 1 = YES, 2 = NO, 3 = UNK
.AALERG    FORM      1          2     150  PATIENT ALLERGIES (Y/N)
.                                                 1 = YES, 2 = NO
.AILLN     FORM      1          2     152  PRE-EXISTING ILLNESS
.                                                 1 = YES, 2 = NO
.ADIAG1    DIM       80        80     154  PATIENTS ADMITTING DIAG 1
.ADIAG2    DIM       80        80     234   "   "     "   "     "  2
.ADISC     FORM      6.2        5     314  PATIENT DISCOUNT PERCENTAGE
.ADOCTT    DIM       6          6     319  TREATING DOCTOR
.ACLSSFT   DIM       3          3     325  DEPARTMENT CODE (Cat AC)
.AALLOW    DIM       2          2     328  PATIENT ALLOWANCE CODE
.AMBS      DIM       9          9     330  ADMITTING MBS CODE
.ACLAIM    DIM       3          3     339  CLAIM CODE (CAT CL)
.ADIET     DIM       3          3     342  DIET CODE (CAT DC)
.APLOCCR   DIM       3          3     345  PLACE OF OCCR (CATEGORY PO)
.ASTAY     FORM      3          3     348  EXPECTED LENGTH OF STAY (DAYS)
.ADYHOSP   FORM      4          3     351  No OF DAYS OF HOSPITALIZATION
.AMEMB     FORM      1          2     354  DIAMOND VALLEY MEMBERSHIP
.                                                 1 = YES, 2 = NO
.AMEMBNO   FORM      6          4     356  MEMBERSHIP NUMBER
.ACOMM1    DIM       40        40     360  COMMENTS FIELD 1
.ACOMM2    DIM       30        30     400  COMMENTS FIELD 2
.APLUR     FORM      1          2     430  PLURALITY OF BABY (0=NORMAL)
.APURGE    FORM      1          2     432  PURGE INDICATOR
.                                                 OTHER = NO PURGE
.                                                 1     = PARTIAL
.                                                 2     = FULLY
.AUSR1     DIM       3          3     434  USER DEFINED FIELD 1 (CAT U1)
.AUSR2     DIM       3          3     437  USER DEFINED FIELD 2 (CAT U2)
.AUSR3     DIM       3          3     440  USER DEFINED FIELD 3 (CAT U3)
.AUSR4     DIM       3          3     443  USER DEFINED FIELD 4 (CAT U4)
.AUSR5     DIM       3          3     446  USER DEFINED FIELD 5 (CAT U5)
.AUSR6     DIM       3          3     449  USER DEFINED FIELD 6 (CAT U6)
.                                                 - Clinic Unit No. for Publics
.AUSR7     DIM       3          3     452  USER DEFINED FIELD 7 (CAT U7)
.                                                 - Coding status for Publics
.ADSCHI    FORM      1          2     455  DISCHARGE INVOICE INDICATOR
.                                                 0 = Discharge inv not printed
.                                                 1 = Have printed discharge inv
.ARDRNAM   DIM       22        22     457  FREE FORMAT REFERRING DOCTOR
.AFNDYY    DIM       2          2     479  YRS OF FUND MEMBERSHIP (JR,DE)
.AFNDCG    DIM       6          6     481  fund cover change (CCYYMM)
.AOCCDTE   DIM       8          8     487  DATE OF OCCURRENCE (CCYYMMDD)
.ACODDTE   DIM       8          8     495  DATE CODING COMPLETED
.ARETDTE   DIM       8          8     503  EXPECTED RETURN DATE FROM LVE
OAMUMADM   FORM      8          5     511  MOTHERS ADMSS NUMBER(IF BABY)
.DPTMIPVI  DIM       3          3     516  No of prev. visits charged
.ABWGHT    DIM       6          6     519  Baby's /Admission weight
.PTMSRFGP  DIM       8          8     525  Referring GP.
.PTMSGPPC  DIM       6          6     533  GP Practice Code
.PTMSFHAN  DIM       20        20     539  eAdmission ID
.PTMSECRA  DIM       20        20     559  ECR Approval Number
.PTMSMGIN  DIM       3          3     579  Management Intent   (CAT MI)
.DPTMIDDI  DIM       1          1     582  Discharged diagnosis printed?
.PTMIGPPT  DIM       2          2     583  GP Practice count
.PTMIDOFR  DIM       3          3     585  District of Residence (Cat DA)
.PTMIREFD  DIM       8          8     588  Date of Referral (EDI nz)
.PTMIDFCN  DIM       8          8     596  Date of 1st consultation (EDI nz)
.PTMIPHPU  DIM       3          3     604  Principal Health Service Purchaser
.                                         (EDI nz) (CAT HP)
.PTMIAGNC  DIM       3          3     607  Health Agency (EDI nz) (CAT HA)
.PTMIESSF  DIM       1          1     610  Event Summary supress flag Y/N(EDI nz)
.                                         "Y" = Suppress event summary
.                                         "N" = Don't supress
.PTMIUSR8  DIM       3          3     611  User defined field 8 (CAT U8)
.PTMIUSR9  DIM       3          3     614  User defined field 9 (CAT U9)
.PTMIUSR0  DIM       3          3     617  User defined field 0 (CAT U0)
.PTMIPDRG  DIM       4          4     620  Provisional DRG
.PTMIOPER  DIM       4          4     624  Operator who pre-admitted patient
.PTMIXWRD  DIM       3          3     628  Expected Ward for Pre-Admission
.PTMIADOC  DIM       6          6     631  Associated Doctor
.PTMIREGS  DIM       6          6     637  Registrar
.PTMIUYN1  FORM      1          2     643  User Defined Y/N Field (1=Yes, 0=No)
.PTMIUYN2  FORM      1          2     645  User Defined Y/N Field (1=Yes, 0=No)
.PTMIPANO  DIM       8          8     647  Previous admission number
.PTMIPADT  DIM       8          8     655  Previous admission date (ccyymmdd)
.PTMIPCMX  DIM       9          9     663  Casemix Code (Provisional MBS/DRG)
.PTMIGSTA  DIM       1          1     672  Is GST applicable to this event
.                                         Y=Yes, N/Space=No, U=Unknown
.PTMICMXP  DIM       1          1     673  Casemix Payment (Y/N)
.                                         NZ Billing - FFS has been charged(Y/N)
.PTMIEBED  DIM       3          3     674  Expected Bed
.PTMIDMOV  DIM       1          1     677  Pre-admission movement indicator
.PTMIDFAS  DIM       8          8     678  Date Patient First Aware of Symptoms
.PTMICRCD  DIM       1          1     686  Credit Card Details on File (1=Yes)
.PTMIFINV  DIM       1          1     687  Follow-up for implant invoicing(1=Yes)
.PTMICONB  DIM       1          1     688  Continuous Billing Event (1=Yes)
.PTMIDATC  DIM       8          8     689  Date Created CCYYMMDD
.PTMITIMC  DIM       8          8     697  Time Created hh:mm:ss
.PTMIWEBC  DIM      10         10     705  Web user Id Created
.PTMIDATU  DIM       8          8     715  Date Updated CCYYMMDD
.PTMITIMU  DIM       8          8     723  Time Updated hh:mm:ss
.PTMIWEBU  DIM      10         10     731  Web user Id Updated
.PTMI3BDY  DIM       4          4     741  3B certificate days
.PTMI3BAD  DIM       8          8     745  3B certificate admission date
.PTMILSDN  DIM       8          8     753  Linked Statistical Discharge Number
.PTMIOGNO  DIM       8          8     761  Original Admission Number
OTMSSPAR   DIM      63         63     769  Spare Variable
.
.End of Record                       832
.
.
.                                     ******** copy the new FD here *******
.
PATMI1A1  IFILE     SQL, FIXED=832, KEY="U1-8"
PATMI1A2  IFILE     SQL, FIXED=832, KEY="U33-33,1-8"
PATMI1A3  IFILE     SQL, FIXED=832, KEY="U17-24,1-8"
PATMI1A4  IFILE     SQL, FIXED=832, KEY="U495-502,1-8"
PATMI1A5  IFILE     SQL, FIXED=832, KEY="U33-33,65-70,53-55,56-58,1-8"
PATMI1A6  IFILE     SQL, FIXED=832, KEY="U33-33,53-55,17-24,1-8"
PATMI1A7  IFILE     SQL, FIXED=832, KEY="U65-70,33-33,495-502,1-8"
PATMI1A8  IFILE     SQL, FIXED=832, KEY="U9-16,33-33,1-8"
.
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  ----------------------------------
DAADMNO   DIM       8          8       1  PATIENT ADMISSION NO.
AURNO     DIM       8          8       9  PATIENT U.R NO.
ADATE     DIM       8          8      17  Admission Date (CCYYMMDD)
ATIME     DIM       8          8      25  PATIENT ADMISSION TIME
DASTAT    DIM       1          1      33  ADMISSION STATUS
.                                           1 = PRE-ADMISSION
.                                           2 = CURRENT ADMISSION
.                                           3 = DISCHARGED
.                                           4 = ON LEAVE
.                                           5 = CANCELLED
APORT     DIM       2          2      34  CURRENT PORT USING THIS RECORD
ATRANNO   FORM      3          3      36  NEXT TRANSACTION NUMBER
AINVPRT   FORM      3          3      39  NUMBER OF INVOICES PRINTED
ALACDTE   DIM       8          8      42  last accom date invd (CCYYMMDD)
ACANCEL   DIM       3          3      50  REASON PRE-ADMISS CANCELATION
AWARD     DIM       3          3      53  PATIENT WARD NO.
ABED      DIM       3          3      56  PATIENT BED NO.
ADOCTR    DIM       6          6      59  DOCTOR REFERRED BY.
ADOCTA    DIM       6          6      65  DOCTOR ATTENDING PATIENT.
ADOCTL    DIM       30        30      71  LOCAL DOCTOR
ASRCE     DIM       3          3     101  PATIENT ADMISSIONS SOURCE  (CAT S )
ATYPE     DIM       3          3     104  PATIENT ADMISSIONS TYPE    (CAT A )
ACLSS     DIM       3          3     107  PATIENT ADMISSIONS CLASS   (CAT P )
ACARE     DIM       3          3     110  PATIENT CARE CLASS         (CAT CC)
AFUNDH    DIM       6          6     113  PATIENT HEALTH FUND
AFNDTB    DIM       8          8     119  PATIENT FUND TABLE
AFNDMM    DIM       19        19     127  PATIENT FUND MEMBERSHIP NO
AELIG     FORM      1          2     146  PATIENT ELIGIBILITY FOR GOV'T
.                                         REBATE. 1 = YES  2 = NO
.                                         STH - DISCHARGE DIAG.PRINTED
.                                         NZ NMDS FLAG
.                                         0=Not Submitted
.                                         1=Submitted
.                                         2=Warning Resubmit next extract
.                                         3=General Resubmit next extract
.                                         4=Visit Data Updated
.                                         5=Coding Data Updated
AVISIT    FORM      1          2     148  PATIENT RELIGIOUS VISIT
.                                                 1 = YES, 2 = NO, 3 = UNK
AALERG    FORM      1          2     150  PATIENT ALLERGIES (Y/N)
.                                                 1 = YES, 2 = NO
AILLN     FORM      1          2     152  PRE-EXISTING ILLNESS
.                                                 1 = YES, 2 = NO
ADIAG1    DIM       80        80     154  PATIENTS ADMITTING DIAG 1
ADIAG2    DIM       80        80     234   "   "     "   "     "  2
ADISC     FORM      6.2        5     314  PATIENT DISCOUNT PERCENTAGE
ADOCTT    DIM       6          6     319  TREATING DOCTOR
ACLSSFT   DIM       3          3     325  DEPARTMENT CODE (Cat AC)
AALLOW    DIM       2          2     328  PATIENT ALLOWANCE CODE
AMBS      DIM       9          9     330  ADMITTING MBS CODE
ACLAIM    DIM       3          3     339  CLAIM CODE (CAT CL)
ADIET     DIM       3          3     342  DIET CODE (CAT DC)
APLOCCR   DIM       3          3     345  PLACE OF OCCR (CATEGORY PO)
ASTAY     FORM      3          3     348  EXPECTED LENGTH OF STAY (DAYS)
ADYHOSP   FORM      4          3     351  No OF DAYS OF HOSPITALIZATION
AMEMB     FORM      1          2     354  DIAMOND VALLEY MEMBERSHIP
.                                                 1 = YES, 2 = NO
AMEMBNO   FORM      6          4     356  MEMBERSHIP NUMBER
ACOMM1    DIM       40        40     360  COMMENTS FIELD 1
ACOMM2    DIM       30        30     400  COMMENTS FIELD 2
APLUR     FORM      1          2     430  PLURALITY OF BABY (0=NORMAL)
APURGE    FORM      1          2     432  PURGE INDICATOR
.                                                 OTHER = NO PURGE
.                                                 1     = PARTIAL
.                                                 2     = FULLY
AUSR1     DIM       3          3     434  USER DEFINED FIELD 1 (CAT U1)
AUSR2     DIM       3          3     437  USER DEFINED FIELD 2 (CAT U2)
AUSR3     DIM       3          3     440  USER DEFINED FIELD 3 (CAT U3)
AUSR4     DIM       3          3     443  USER DEFINED FIELD 4 (CAT U4)
AUSR5     DIM       3          3     446  USER DEFINED FIELD 5 (CAT U5)
AUSR6     DIM       3          3     449  USER DEFINED FIELD 6 (CAT U6)
.                                                 - Clinic Unit No. for Publics
AUSR7     DIM       3          3     452  USER DEFINED FIELD 7 (CAT U7)
.                                                 - Coding status for Publics
ADSCHI    FORM      1          2     455  DISCHARGE INVOICE INDICATOR
.                                                 0 = Discharge inv not printed
.                                                 1 = Have printed discharge inv
ARDRNAM   DIM       22        22     457  FREE FORMAT REFERRING DOCTOR
AFNDYY    DIM       2          2     479  YRS OF FUND MEMBERSHIP (JR,DE)
AFNDCG    DIM       6          6     481  fund cover change (CCYYMM)
AOCCDTE   DIM       8          8     487  DATE OF OCCURRENCE (CCYYMMDD)
ACODDTE   DIM       8          8     495  DATE CODING COMPLETED
ARETDTE   DIM       8          8     503  EXPECTED RETURN DATE FROM LVE
AMUMADM   DIM       8          8     511  MOTHERS ADMSS NUMBER(IF BABY)
DPTMIPVI  DIM       3          3     519  No of prev. visits charged
ABWGHT    DIM       6          6     522  Baby's /Admission weight
PTMSRFGP  DIM       8          8     528  Referring GP.
PTMSGPPC  DIM       6          6     536  GP Practice Code
PTMSFHAN  DIM       20        20     542  eAdmission ID
PTMSECRA  DIM       20        20     562  ECR Approval Number
PTMSMGIN  DIM       3          3     582  Management Intent   (CAT MI)
DPTMIDDI  DIM       1          1     585  Discharged diagnosis printed?
PTMIGPPT  DIM       2          2     586  GP Practice count
PTMIDOFR  DIM       3          3     588  District of Residence (Cat DA)
PTMIREFD  DIM       8          8     591  Date of Referral (EDI nz)
PTMIDFCN  DIM       8          8     599  Date of 1st consultation (EDI nz)
PTMIPHPU  DIM       3          3     607  Principal Health Service Purchaser
.                                         (EDI nz) (CAT HP)
PTMIAGNC  DIM       3          3     610  Health Agency (EDI nz) (CAT HA)
PTMIESSF  DIM       1          1     613  Event Summary supress flag Y/N(EDI nz)
.                                         "Y" = Suppress event summary
.                                         "N" = Don't supress
PTMIUSR8  DIM       3          3     614  User defined field 8 (CAT U8)
PTMIUSR9  DIM       3          3     617  User defined field 9 (CAT U9)
PTMIUSR0  DIM       3          3     620  User defined field 0 (CAT U0)
PTMIPDRG  DIM       4          4     623  Provisional DRG
PTMIOPER  DIM       4          4     627  Operator who pre-admitted patient
PTMIXWRD  DIM       3          3     631  Expected Ward for Pre-Admission
PTMIADOC  DIM       6          6     634  Associated Doctor
PTMIREGS  DIM       6          6     640  Registrar
PTMIUYN1  FORM      1          2     646  User Defined Y/N Field (1=Yes, 0=No)
PTMIUYN2  FORM      1          2     648  User Defined Y/N Field (1=Yes, 0=No)
PTMIPANO  DIM       8          8     650  Previous admission number
PTMIPADT  DIM       8          8     658  Previous admission date (ccyymmdd)
PTMIPCMX  DIM       9          9     666  Casemix Code (Provisional MBS/DRG)
PTMIGSTA  DIM       1          1     675  Is GST applicable to this event
.                                         Y=Yes, N/Space=No, U=Unknown
PTMICMXP  DIM       1          1     676  Casemix Payment (Y/N)
.                                         NZ Billing - FFS has been charged(Y/N)
PTMIEBED  DIM       3          3     677  Expected Bed
PTMIDMOV  DIM       1          1     680  Pre-admission movement indicator
PTMIDFAS  DIM       8          8     681  Date Patient First Aware of Symptoms
PTMICRCD  DIM       1          1     689  Credit Card Details on File (1=Yes)
PTMIFINV  DIM       1          1     690  Follow-up for implant invoicing(1=Yes)
PTMICONB  DIM       1          1     691  Continuous Billing Event (1=Yes)
PTMIDATC  DIM       8          8     692  Date Created CCYYMMDD
PTMITIMC  DIM       8          8     700  Time Created hh:mm:ss
PTMIWEBC  DIM      10         10     708  Web user Id Created
PTMIDATU  DIM       8          8     718  Date Updated CCYYMMDD
PTMITIMU  DIM       8          8     726  Time Updated hh:mm:ss
PTMIWEBU  DIM      10         10     734  Web user Id Updated
PTMI3BDY  DIM       4          4     744  3B certificate days
PTMI3BAD  DIM       8          8     748  3B certificate admission date
PTMILSDN  DIM       8          8     756  Linked Statistical Discharge Number
PTMIOGNO  DIM       8          8     764  Original Admission Number
PTMSSPAR  DIM      60         60     772  Spare Variable
.
.End of Record                       832
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
ERORTEXT  DIM       80
.
INPFILE   DIM       8
.
MINUS3    FORM      "-3"
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
USINGORC  DIM       1
.
.
. PROGRAM CONSTANTS
. -----------------
CREATEXT  INIT    "Log file created "
DASHLINE  INIT      "--------------------------------------------------":
                    "------------------------------"
ENDGTEXT  INIT    "Ending   fixit (Option "
OPENTEXT  INIT    "Log file opened "
SP60      INIT    "                                                            "
STARTTXT  INIT    "Starting fixit (Option "
.
.
.
PRGNAM    INIT      "CONVERSION PATMI1FD"
PRGID     INIT      "V12PTMI1"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
.
          CALL      OLOG0000                      * create/open log file
MAIN0500  CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9000
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0500:               * no
                          MAIN9000                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9000
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
          GOTO      MAIN9000
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9000  CALL      CLOG0000                      * close log file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  MOVE      "No",USINGORC
          REP       "yYnN",USINGORC
          MOVE      USINGORC,KEY1
          REP       "Y-N-",KEY1
          MATCH     "-",KEY1
          GOTO      OPTN9200 IF NOT EQUAL
.
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
          MATCH     "Y",USINGORC
          IF        @EQUAL
            DISPLAY   *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
          ENDIF
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9200  DISPLAY   *P1:3,*EF,*P1:4," Oracle Option has not been set up ":
                          "correctly":
                    *P1:6," Program will terminate    - ";
          MOVE      "Oracle Option has not been set up correctly",ERORTEXT
          WRITE     LOGFILE,SEQ;*+,ERORTEXT
          CALL      HITENTER
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
.
          CALL      SLOG0000                      * write start to log file
.
          MOVE      "patmi1af",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patmi1af.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spatmi1f.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patmi1af.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spatmi1f.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "patmi1af",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Unable to remove the original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "spatmi1f",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Unable to open saved original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "patmi1af",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
. Index 1
          APPEND    " 832 UC1-8",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
. Index 2
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC33-33,1-8",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
. Index 3
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC17-24,1-8",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
. Index 4
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC495-502,1-8",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
. Index 5
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC33-33,65-70,53-55,56-58,1-8",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
. Index 6
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC33-33,53-55,17-24,1-8",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
. Index 7
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC65-70,33-33,495-502,1-8",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
. Index 8
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC9-16,33-33,1-8",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      PATMI1A1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP5000  MOVE      "Old file not found.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  MOVE      "Unable to copy original file.  (Error: ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    TASKID,ERORTEXT
          APPEND    ")  ",ERORTEXT
          RESET     ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
            MOVE      "File does not exist",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
              MOVE      "File has already been converted",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ELSE
              DISPLAY   "has caused an IO error - ";
              MOVE      "File has caused an IO Error",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ENDIF
          ENDIF
          MOVE      "File will be bypassed",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *+,ERORTEXT
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY8,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP70
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.
          MOVE      OAMUMADM,AMUMADM
          MOVE      SP70,PTMSSPAR 
.                                               * Pack key here
          PACK      KEY8,DAADMNO,SP70
          CALL      WRMISS1                    * write to new file

          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PATMI1A1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            MOVE      "Directory path must end with a slash (/) ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Directory does not exist ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "spatmi1f*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Saved file not zipped or removed.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat patmi1af.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  MOVE      "Error finding 'patmi1af'.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OLOG0000                                       *
.*                    Open the log file                                      *
.*****************************************************************************
.
OLOG0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOGFILE,"v12ptmi1.log"       * open log file
          TRAPCLR   IO
          IF        OVRCD = 1
            PREP      LOGFILE,"v12ptmi1.log"     * create and open log file
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;CREATEXT,CDATE,SP1,CTIMEIS
          ELSE
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;OPENTEXT,CDATE,SP1,CTIMEIS
          ENDIF
.
OLOG9999  RETURN
+
.*****************************************************************************
.*                            CLOG0000                                       *
.*                    Close the log file                                     *
.*****************************************************************************
.
CLOG0000  CLOSE     LOGFILE
.
CLOG9999  RETURN
+
.*****************************************************************************
.*                            SLOG0000                                       *
.*                    Write a start log to the log file                      *
.*****************************************************************************
.
SLOG0000  WRITE     LOGFILE,SEQ;DASHLINE
          WRITE     LOGFILE,SEQ;STARTTXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
.
SLOG9999  RETURN
+
.*****************************************************************************
.*                            ELOG0000                                       *
.*                    Write an end log to the log file                       *
.*****************************************************************************
.
ELOG0000  WRITE     LOGFILE,SEQ;ENDGTEXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
ELOG9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*                    Oracle fix to "PATMI1FD"                               *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,*EL,"Record No. :";
.
          CALL      SLOG0000                      * write start to log file
.
          OPEN      PATMI1A1,"patmi1af"
.
          PACK      KEY8,SP70
          CALL      RSPTMIS1                      * position at start of file
OFIX0500  CALL      RKPTMIS1                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.         
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
          CALL      UPPTMIS1
.
          GOTO      OFIX0500                     * get next record
.         
OFIX9000  CLOSE     PATMI1A1
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Update completed ",CDATE,SP1,CTIMEIS:
                    *P1:24;
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
OFIX9999  RETURN
.
OFDUMYIO  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD  RESET     KEY8
          MOVE      ZERO,OVRCD
          READ      OLDFILE1,KEY8;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;DAADMNO,AURNO,ADATE,ATIME:
                                 DASTAT,APORT,ATRANNO,AINVPRT,ALACDTE:
                                 ACANCEL,AWARD,ABED,ADOCTR,ADOCTA:
                                 ADOCTL,ASRCE,ATYPE,ACLSS,ACARE,AFUNDH:
                                 AFNDTB,AFNDMM,AELIG,AVISIT,AALERG:
                                 AILLN,ADIAG1,ADIAG2,ADISC,ADOCTT,ACLSSFT:
                                 AALLOW,AMBS,ACLAIM,ADIET,APLOCCR,ASTAY:
                                 ADYHOSP,AMEMB,AMEMBNO:
                                 ACOMM1,ACOMM2,APLUR,APURGE,AUSR1:
                                 AUSR2,AUSR3,AUSR4,AUSR5,AUSR6,AUSR7:
                                 ADSCHI,ARDRNAM,AFNDYY,AFNDCG:
                                 AOCCDTE,ACODDTE,ARETDTE,OAMUMADM,DPTMIPVI:
                                 ABWGHT:
                                 PTMSRFGP,PTMSGPPC,PTMSFHAN,PTMSECRA:
                                 PTMSMGIN,DPTMIDDI,PTMIGPPT,PTMIDOFR:
                                 PTMIREFD,PTMIDFCN,PTMIPHPU,PTMIAGNC:
                                 PTMIESSF,PTMIUSR8,PTMIUSR9,PTMIUSR0:
                                 PTMIPDRG,PTMIOPER,PTMIXWRD,PTMIADOC:
                                 PTMIREGS,PTMIUYN1,PTMIUYN2,PTMIPANO:
                                 PTMIPADT,PTMIPCMX,PTMIGSTA,PTMICMXP:
                                 PTMIEBED,PTMIDMOV,PTMIDFAS,PTMICRCD:
                                 PTMIFINV,PTMICONB,PTMIDATC,PTMITIMC:
                                 PTMIWEBC,PTMIDATU,PTMITIMU,PTMIWEBU:
                                 PTMI3BDY,PTMI3BAD,PTMILSDN,PTMIOGNO:
                                 OTMSSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
.                  For Oracle fixits, you will probably also need to copy
.                  the RS.., RK.... & UP.... I/O routines for the new FD.
.
RSPTMIS1  RESET     KEY8
          READ      PATMI1A1,KEY8;;
          RETURN
.
RKPTMIS1  MOVE      ZERO,OVRCD
          READKS    PATMI1A1;DAADMNO,AURNO,ADATE,ATIME:
                                 DASTAT,APORT,ATRANNO,AINVPRT,ALACDTE:
                                 ACANCEL,AWARD,ABED,ADOCTR,ADOCTA:
                                 ADOCTL,ASRCE,ATYPE,ACLSS,ACARE,AFUNDH:
                                 AFNDTB,AFNDMM,AELIG,AVISIT,AALERG:
                                 AILLN,ADIAG1,ADIAG2,ADISC,ADOCTT,ACLSSFT:
                                 AALLOW,AMBS,ACLAIM,ADIET,APLOCCR,ASTAY:
                                 ADYHOSP,AMEMB,AMEMBNO:
                                 ACOMM1,ACOMM2,APLUR,APURGE,AUSR1:
                                 AUSR2,AUSR3,AUSR4,AUSR5,AUSR6,AUSR7:
                                 ADSCHI,ARDRNAM,AFNDYY,AFNDCG:
                                 AOCCDTE,ACODDTE,ARETDTE,AMUMADM,DPTMIPVI:
                                 ABWGHT:
                                 PTMSRFGP,PTMSGPPC,PTMSFHAN,PTMSECRA:
                                 PTMSMGIN,DPTMIDDI,PTMIGPPT,PTMIDOFR:
                                 PTMIREFD,PTMIDFCN,PTMIPHPU,PTMIAGNC:
                                 PTMIESSF,PTMIUSR8,PTMIUSR9,PTMIUSR0:
                                 PTMIPDRG,PTMIOPER,PTMIXWRD,PTMIADOC:
                                 PTMIREGS,PTMIUYN1,PTMIUYN2,PTMIPANO:
                                 PTMIPADT,PTMIPCMX,PTMIGSTA,PTMICMXP:
                                 PTMIEBED,PTMIDMOV,PTMIDFAS,PTMICRCD:
                                 PTMIFINV,PTMICONB,PTMIDATC,PTMITIMC:
                                 PTMIWEBC,PTMIDATU,PTMITIMU,PTMIWEBU:
                                 PTMI3BDY,PTMI3BAD,PTMILSDN,PTMIOGNO:
                                 PTMSSPAR
.
          GOTO      OVERCOND IF OVER
.
          RETURN
.
UPPTMIS1  MOVE      ZERO,OVRCD
.
          UPDATE    PATMI1A1;DAADMNO,AURNO,ADATE,ATIME:
                                 DASTAT,APORT,ATRANNO,AINVPRT,ALACDTE:
                                 ACANCEL,AWARD,ABED,ADOCTR,ADOCTA:
                                 ADOCTL,ASRCE,ATYPE,ACLSS,ACARE,AFUNDH:
                                 AFNDTB,AFNDMM,AELIG,AVISIT,AALERG:
                                 AILLN,ADIAG1,ADIAG2,ADISC,ADOCTT,ACLSSFT:
                                 AALLOW,AMBS,ACLAIM,ADIET,APLOCCR,ASTAY:
                                 ADYHOSP,AMEMB,AMEMBNO:
                                 ACOMM1,ACOMM2,APLUR,APURGE,AUSR1:
                                 AUSR2,AUSR3,AUSR4,AUSR5,AUSR6,AUSR7:
                                 ADSCHI,ARDRNAM,AFNDYY,AFNDCG:
                                 AOCCDTE,ACODDTE,ARETDTE,AMUMADM,DPTMIPVI:
                                 ABWGHT:
                                 PTMSRFGP,PTMSGPPC,PTMSFHAN,PTMSECRA:
                                 PTMSMGIN,DPTMIDDI,PTMIGPPT,PTMIDOFR:
                                 PTMIREFD,PTMIDFCN,PTMIPHPU,PTMIAGNC:
                                 PTMIESSF,PTMIUSR8,PTMIUSR9,PTMIUSR0:
                                 PTMIPDRG,PTMIOPER,PTMIXWRD,PTMIADOC:
                                 PTMIREGS,PTMIUYN1,PTMIUYN2,PTMIPANO:
                                 PTMIPADT,PTMIPCMX,PTMIGSTA,PTMICMXP:
                                 PTMIEBED,PTMIDMOV,PTMIDFAS,PTMICRCD:
                                 PTMIFINV,PTMICONB,PTMIDATC,PTMITIMC:
                                 PTMIWEBC,PTMIDATU,PTMITIMU,PTMIWEBU:
                                 PTMI3BDY,PTMI3BAD,PTMILSDN,PTMIOGNO:
                                 PTMSSPAR
.
          RETURN
.
WRMISS1   RESET     KEY8
          MOVE      ZERO,OVRCD
.
          WRITE     PATMI1A1,KEY8;KEY8,AURNO,ADATE,ATIME:
                                 DASTAT,APORT,ATRANNO,AINVPRT,ALACDTE:
                                 ACANCEL,AWARD,ABED,ADOCTR,ADOCTA:
                                 ADOCTL,ASRCE,ATYPE,ACLSS,ACARE,AFUNDH:
                                 AFNDTB,AFNDMM,AELIG,AVISIT,AALERG:
                                 AILLN,ADIAG1,ADIAG2,ADISC,ADOCTT,ACLSSFT:
                                 AALLOW,AMBS,ACLAIM,ADIET,APLOCCR,ASTAY:
                                 ADYHOSP,AMEMB,AMEMBNO:
                                 ACOMM1,ACOMM2,APLUR,APURGE,AUSR1:
                                 AUSR2,AUSR3,AUSR4,AUSR5,AUSR6,AUSR7:
                                 ADSCHI,ARDRNAM,AFNDYY,AFNDCG:
                                 AOCCDTE,ACODDTE,ARETDTE,AMUMADM,DPTMIPVI:
                                 ABWGHT:
                                 PTMSRFGP,PTMSGPPC,PTMSFHAN,PTMSECRA:
                                 PTMSMGIN,DPTMIDDI,PTMIGPPT,PTMIDOFR:
                                 PTMIREFD,PTMIDFCN,PTMIPHPU,PTMIAGNC:
                                 PTMIESSF,PTMIUSR8,PTMIUSR9,PTMIUSR0:
                                 PTMIPDRG,PTMIOPER,PTMIXWRD,PTMIADOC:
                                 PTMIREGS,PTMIUYN1,PTMIUYN2,PTMIPANO:
                                 PTMIPADT,PTMIPCMX,PTMIGSTA,PTMICMXP:
                                 PTMIEBED,PTMIDMOV,PTMIDFAS,PTMICRCD:
                                 PTMIFINV,PTMICONB,PTMIDATC,PTMITIMC:
                                 PTMIWEBC,PTMIDATU,PTMITIMU,PTMIWEBU:
                                 PTMI3BDY,PTMI3BAD,PTMILSDN,PTMIOGNO:
                                 PTMSSPAR
          RETURN
.
          INC       STD001IO
