.***************************************************************************
.* System    :   Outpatients                                               *
.* Program   :   IBAADT27                                                  *
.* Desc      :   Health Fund EDI Payment Processing                        *
.***************************************************************************
.* Date      :   25/03/1999                                                *
.* Author    :   Andrew Peel                                               *
.* Function  :   This program updates invoices when paid by Health Fund.   *
.* Mods      :                                                             *
.* V11.05.02  05/03/2025  J.Tan   TSK 0955356                              *
.*            Added SKEY40 for PATCALFN                                    *
.* V11.05.01  20/02/2025  J.Tan   TSK 0955356                              *
.*            Added FININVN,FINADMN,FINURNO                                *
.* V11.01.01  18/02/2021  J.Tan          TSK 0888639                       *
.*            Added PTDTTMNO - Theatre Team no                             *
.* V10.07.01  21/12/2015  J.Tan          CAR 0303942                       *
.*            Mods to setup Payment code                                   *
.* V10.04.03  15/06/2014  Jill Parkinson CAR 301639                        *
.*            Moved call to TFILENAM to INIT000 instead of OPEN0000        *
.* V10.04.02  01/05/2014  J.Tan        CAR 261630                          *
.*            Removed patauc Cash audit file                               *
.* V10.04.01  20/01/2014  J.Tan        CAR 249828                          *
.*            Added PTDTPMBS - Patient MBS Team and Counter                *
.* V10.03.02  19/12/2012 Patrick Adair                          CAR 261630 *
.*            Removed port number from temp file name                      *
.***************************************************************************
.*        V9.10.02  23/05/2008 J.Tan      CAR 169149                       *
.*                  Added Date and Time invoice created/updated            *
.*        V9.10.01  30/04/2007  J.Tan         CAR 167215                   *
.*                  Mods to incl.Credit notes for checking outstd.balance  *
.*        V9.04 02  19/08/2004  J.Tan   CAR 64493                          *
.*                  Added bed type (ptdtbtyp) to dtr file                  *
.*        V9.04 01  31/08/2004  J.Tan   CAR 53825                          *
.*                  Mods for Multi hospital                                *
.*        V9.03.01  21/05/2004  Pat Dirito       CAR 50035                 *
.*                  Removed usage of PTDTEPSD now only initialsed to zero  *
.***************************************************************************
.*        V9.02.04  01/02/2002  Steve Downing                              *
.*                  Added batch number keyin to "?" screen                 *
.*        V9.02.03  29/01/2002  Steve Downing                              *
.*                  Added "?" screen for batch numbers                     *
.*                  19/12/2001  Steve Downing                              *
.*                  Modifications to allow up to 9999 screens              *
.*        V9.02.02  29.11.2001  B.G.Ackland                                *
.*                  Remove pi's from Program
.*        V5.08.02  25/10/2000  Dean Cramer   SRF 6710                     *
.*                  Recomplied for PATFNDDS via PATFNDKY                   *
.*                  Changed for health fund table code size increase to    *
.*                  8 characters                                           *
.*        V5.08.01  29/08/2000  Caleb Sharman                              *
.*                  Changed Health Fund variables to be 8 chars            *
.*        V5.08.00  06/07/2000  Greg Horvat                                *
.*                  Copied from release 6.07 version V6.07.00              *
.*                                                                         *
.***************************************************************************
.
          INC       STD001FD
          INC       IBAPASFD/INC
.
. FILE DESCRIPTION INCLUDES
. -------------------------
.
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       MLTCFNFD/INC
          INC       NZPFIGFD/INC
          INC       NZPFINFD/INC
          INC       NZPRFNFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDO1FD/INC
          INC       PATDRGFD/INC
          INC       PATDSCFD/INC
          INC       PATDTRFD/INC
          INC       PATEBHFD/INC
          INC       PATEBIFD/INC
          INC       PATEDAFD/INC 
          INC       PATFIGFD/INC
          INC       PATFINFD/INC
          INC       PATFN1FD/INC
          INC       PATHFRFD/INC
          INC       PATINVFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATREMFD/INC
          INC       PATRFNFD/INC
          INC       PATRFGFD/INC
          INC       PATVISFD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
TEMP1A    IFILE     SQL, FIXED=76, KEY="U1-4"
TEMP1B    IFILE     SQL, FIXED=76, KEY="U5-12,13-20"
FILELIN1  INIT      " 76 U1-4 U5-12,13-20" 
.
.Name     Type   Length   Physical   Start   Description
.----     ----   ------   --------   -----   -----------
DTMPNO    DIM       4         4        1     Tempfile item no
TMPINVN   DIM       8         8        5     Invoice No
TMPADMN   DIM       8         8       13     Admission No
TMPINVDT  DIM       8         8       21     Invoice Date
TMPNAME   DIM      14        14       29     Patient Name
TMPTOTAL  DIM      11        11       43     Invoice Total
TMPOUTST  DIM      11        11       54     Amount Paid
TMPHFTOT  DIM      10        10       65     Amount Paid by Health Fund
DEDISTAT  DIM       1         1       75     EDI Status flag
.
.End of Record                        76
.
. ----- Program Variables -----
BDRAW      DIM         30            25      CHEQUE DRAWER/CREDIT CARD CODE
BNAME      DIM         30            55      CHEQUE BANK NAME
BBRCH      DIM         30            85      CHEQUE BRANCH NAME
.
AUDBTHNO  DIM       8                       * Audit batch no
BATCHNO   DIM       8                       * Batch Number
BATCHTOT  FORM      7.2                     * Current batch total
BTYPEF    FORM      1                       * Form version of BTYPE
PAYMCODE  DIM       3                       * Payment code
CHQFLAG   FORM      1                  * Bank deposit only done once on posting
CLMDESC   DIM       20                      * Claim type description
CLMTYPE   DIM       3                       * Claim type
CMDLINE   DIM       100                     * Command Line
CODE      DIM       2
DRCTDEP   FORM      1                       * Direct Deposit 0=No 1=Yes
DSPEDDTE  DIM       10                      * Display end date
DSPSTDTE  DIM       10                      * Display start date
EDISTAT   FORM      1                       * EDI Status Flag
FGSTFLAG  FORM      1
FNAME1    DIM       8                       * Tempfile Name
FORM72    FORM      7.2
FORM102   FORM      10.2
HEADSEC   FORM      5                       * Header Record Sector Number
HFAMOUNT  FORM      12.2                    * Health Fund Amount Total 
HFPAID    FORM      7.2                     * Health Fund has Paid Amount
HFTOTAL   FORM      7.2                     * Amount Paid by Health Fund
IBCNUGST  FORM      1                       * Using GST
ITMMAX    FORM      4                       * Maximum Items on Screen
ITMMIN    FORM      4                       * Minimum Items on Screen
ITMNO     FORM      4                       * Current Item
INVNUM    DIM       8                       * Invoice Number
INVDATE   DIM       10                      * Invoice Date
INVTOTAL  FORM      8.2                     * Invoice Total
IBCNMHOS  FORM      1
NEXT      FORM      1                       * Next Screen Flag
ONAME     DIM       30                      * Security File Username
OPERCODE  DIM       4                       * Operator Code
OUTTOTAL  FORM      8.2                     * Outstanding Total
PNAME     DIM       20                      * PGNAME.PSNAME
POST      FORM      1                       * Post Screen Flag
PREVIOUS  FORM      1                       * Previous Screen Flag
SCRMAX    FORM      3                       * Maximum Screen No
SCRNO     FORM      3                       * Current Screen No
SEC1      FORM      "00001"                 * Sector One on Banking file
SKEY40    DIM       40
TMPNO     FORM      4                       * Tempfile No
TOTALHFP  FORM      12.2                    * Total Health Fund Paid
.
RFNFLAG   FORM      "0"
ZED8      INIT      "zzzzzzzz"
.
PRGID     INIT      "IBAADT27"
PRGNAM    INIT      "Health Fund EDI Payment Processing"
VERSION   INIT      "V12.00.00"
.
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000                * initialisation and open files
....          CALL      KYPTBANK  * Check if Banking started & ask Proceed question
.
ML0100    CALL      OPTN0000                * Select option
          BRANCH    EXIT,ML9000
.
ML1000    CALL      SOPT0000                * Keyin batch number
          BRANCH    EXIT,ML0100
.
          CALL      OPEN0000                * Open the Tempfile
          CALL      LOAD0000                * Load the Tempfile
          CALL      BACK0000                * Display the Background screen
          PACK      KEY4,SP3,ONE
          CALL      DPSC0000                * Display results to the screen
.
ML2000    CALL      QUES0000                * Main Question
          COMPARE   ZERO,CCITEM
          GOTO      ML5000 IF EQUAL         * Post
          GOTO      ML1000 IF LESS          * Cancel
.
          PERFORM   CCITEM,NEXT0000:        * Next screen
                           PREV0000:        * pRevious screen
                           CHAN0000         * Change Item
          BRANCH    EXIT,ML1000
          GOTO      ML2000
.
ML5000    CALL      POST0000                * Post items
          GOTO      ML1000
.
ML9000    CALL      KILL0000                * Delete the Tempfile
.
ML9999    CHAIN     PGM                     * chain back to program
.
.****************************************************************************
.*                                INIT0000               Called by: ML0000  *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                * Display Heading
          DISPLAY   *P56:24,"Opening patedaaf";
          OPEN      PATEDAA1,"patedaaf"
.
          DISPLAY   *P56:24,"Opening ihapassf";
          OPEN      IHAPASS1,"ihapassf"
.
          DISPLAY   *P56:24,"Opening patinvrf";
          OPEN      PATINVR1,"patinvrf"
.
          DISPLAY   *P56:24,"Opening patinvrf";
          OPEN      PATINVR2,"patinvrf"
.
          DISPLAY   *P56:24,"Opening patebiaf";
          OPEN      PATEBIA1,"patebiaf"
.
          DISPLAY   *P56:24,"Opening patebiaf";
          OPEN      PATEBIA2,"patebiaf"
.
          DISPLAY   *P56:24,"Opening patebhaf";
          OPEN      PATEBHA1,"patebhaf"
.
          DISPLAY   *P56:24,"Opening patfigaf";
          OPEN      PATFIGA1,"patfigaf"
.
          DISPLAY   *P56:24,"Opening patdschf";
          OPEN      PATDSCH1,"patdschf"
.
          DISPLAY   *P56:24,"Opening patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P56:24,"Opening patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P56:24,"Opening patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P56:24,"Opening patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P56:24,"Opening patdtraf";
          OPEN      PATDTRA1,"patdtraf"
.
          DISPLAY   *P56:24,"Opening patfinsf";
          OPEN      PATFINS1,"patfinsf"
.
          DISPLAY   *P56:24,"Opening pathfrec";
          OPEN      PATHFRE1,"pathfrec"
.
          DISPLAY   *P56:24,"Opening patremdf";
          OPEN      PATREMD1,"patremdf"
.
          DISPLAY   *P56:24,"Opening patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P56:24,"Opening patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"mltcfnaf"
          OPEN      MLTCFNA1,"mltcfnaf"
          OPEN      MLTCFNA2,"mltcfnaf"
.
          DISPLAY   *P64:24,"nzprfnaf"
          OPEN      NZPRFNA1,"nzprfnaf"
          OPEN      NZPRFNA2,"nzprfnaf"
.
          DISPLAY   *P64:24,"nzpfigaf"
          OPEN      NZPFIGA1,"nzpfigaf"
.
          DISPLAY   *P64:24,"nzpfinaf"
          OPEN      NZPFINA1,"nzpfinaf"
          OPEN      NZPFINA2,"nzpfinaf"
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAME1
.
          READ      CONTROLF,TEN;*224,CAUDX      * Audit Parameter 0=On 1=Off
          READ      CONTROLF,ZERO;*85,IBCNUGST
.
.        Initialisation completed correctly
.
         MOVE      "11111111",ALRTMASK
         MOVE      ONE,CNEWDS
.
         MOVE      ZERO,EXIT
         GOTO      INIT9999
.
.        Initialisation failure
.
INIT9000 MOVE      ONE,EXIT
.
INIT9999 RETURN
+
.******************************************************************************
.*                                  OPTN0000               Called by: ML0000  *
.*                                Select Option                               *
.******************************************************************************
OPTN0000  HLINE     *G37,2,57,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0",*HOFF," = Exit":
                    *P1:5,*V2LON," 1",*HOFF," = By Health Fund":
                    *P1:6,*V2LON," 2",*HOFF," = By Claim Type":
                    *P1:8,"Select Option : ";
.
OPTN1000  KEYIN     *P17:8,*V2LON,*DV,UNDLN2,*P17:8,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    OPTION,OPTN2000,OPTN3000
.
          BEEP
          GOTO      OPTN1000
.
OPTN2000  DISPLAY   *P56:2,*V2LON," - By Health Fund ";
          GOTO      OPTN9000
.
OPTN3000  DISPLAY   *P56:2,*V2LON," - By Claim Type ";
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
OPTN9999  RETURN
.
.        ======================================================================
.        SOPT0000 : Option Selection and Batch detail input
.
.        Select the option and get the appropriate batch details
.        ======================================================================
.
SOPT0000  MOVE      ZERO,CQUEST             * ? flag - no
          MOVE      ONE,CCOL
          MOVE      FOUR,CVERT
          MOVE      ZERO,CCITEM
.
SOPT1010  DISPLAY   *PCCOL:CVERT,*EF,"Batch No :"
          KEYIN     *P12:CVERT,*EL,*V2LON,*JR,BATCHNO;
.
          PACK      BATCHNO,BATCHNO,SP8
          MATCH     SP8,BATCHNO
          GOTO      SOPT9000 IF EQUAL
.
          UNPACK    BATCHNO,KEY7,KEY1
          MATCH     "       0",KEY1
          GOTO      SOPT9000 IF EQUAL
.
          MATCH     QUEST,KEY1
          GOTO      SOPT1040 IF NOT EQUAL
.
          BRANCH    CQUEST,SOPT1010
          CALL      DBAT0000
          GOTO      SOPT1010
.
SOPT1040  PACK      KEY8,BATCHNO
          CALL      RDPTEBH1                     * Read Batch Header File
          BRANCH    OVRCD,SOPT1050
          GOTO      SOPT1100
.
SOPT1050  PERFORM   CQUEST,GETSCR00         * Save the current screen
          DISPLAY   *P1:24,*EL,*B,"Invalid batch number.  ";
          CALL      HITENTER
          PERFORM   CQUEST,PUTSCR00         * Restore the previous screen
          GOTO      SOPT1010
.
.         Get the batch amount
.
SOPT1100  PERFORM   CQUEST,PUTSCR00         * Restore the previous screen
          DISPLAY   *P12:4,*EL,*V2LON,BATCHNO
.
          MOVE      ZERO,DRCTDEP            * Assume not direct deposit
.
.         Set up the description for the Dtran records
.
          MOVE      "FROM PATIENT    RECEIPT ##",TDDESC
.
.         Enter details of the Health Fund Cheque
.
.         Display the fields for the cheque
.
SOPT2000  DISPLAY   *P29:4,*EF;
          IF        OPTION=1
            DISPLAY   *P1:6,*EF,"   Health Fund    :";
          ELSE
            DISPLAY   *P1:6,*EF,"   Claim Code     :";
          ENDIF
          DISPLAY   *P1:7,"   Date Received  :":
                    *P1:8,"1. Cheque Number  :":
                    *P1:9,"2.        Drawer  :":
                    *P1:10,"3.        Bank    :":
                    *P1:11,"4.        Branch  :":
                    *P1:12,"5.        Amount  :":
                    *P1:13,"6. Direct Deposit :";
.
.         Set the flag saying we are processing a cheque
.
          MOVE      TWO,BTYPEF
          CALL      PTYP0000               * get payment code
          BRANCH    OPTION,SOPT2400,SOPT2500
.
. ----- By health fund -----
.
SOPT2400  MOVE      "21",ECOL
          MOVE      "6",EVERT
          MOVE      SP6,CKYIDEF6
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY                * Keyin a health fund code
          BRANCH    EXIT,SOPT0000,SOPT9000,SOPT0000
.
          DISPLAY   *PECOL:EVERT,*V2LON,HCODE,SP2,HFNAME;
          GOTO      SOPT2700
.
. ----- By claim type -----
.
SOPT2500  MOVE      "21",ECOL
          MOVE      "6",EVERT
          MOVE      "CL",CODE
          MOVE      SP6,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
          CALL      PATCODKY                * Keyin a codes file entry
          BRANCH    EXIT,SOPT0000,SOPT9000,SOPT0000
.
          MOVE      TDESC,CLMDESC
          MOVE      ACODE,CLMTYPE
          DISPLAY   *PECOL:EVERT,*V2LON,CLMTYPE,SP2,TDESC;
.
.         Cheque date is treated as todays date
.
SOPT2700  MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
          CALL      PACDATE
.
.         Display the date
.
          DISPLAY   *P21:7,*EL,*V2LON,CPCDATE
.
.         Key in the Cheque Number
.
SOPT2800  PACK      KEY12,SP20
          KEYIN     *P21:8,*EL,*P21:8,*EL,*V2LON,KEY12
.
          ENDSET    KEY12
          APPEND    SP20,KEY12
          RESET     KEY12
.
.         Check if anything was entered
.
          MATCH     SP20,KEY12
          GOTO      SOPT2000 IF EQUAL
.
          COMPARE   ONE,CCITEM
          GOTO      SOPT5000 IF EQUAL
.
.         Enter the Cheque Drawer
.
SOPT2850  IF        OPTION=1
            MOVE      HFNAME,BDRAW
          ELSE
            MOVE      CLMDESC,BDRAW
          ENDIF
          KEYIN     *P21:9,*EL,*DV,BDRAW:
                    *P21:9,*V2LON,*RV,BDRAW
.
          ENDSET    BDRAW
          APPEND    SP30,BDRAW
          RESET     BDRAW
.
          DISPLAY   *P21:9,*V2LON,BDRAW
          COMPARE   TWO,CCITEM
          GOTO      SOPT5000 IF EQUAL
.
.         Enter the bank name
.
SOPT2900  MOVE      SP30,BNAME
          KEYIN     *P21:10,*EL,*V2LON,BNAME
          RESET     BNAME
          GOTO      SOPT2800 IF EOS
.
          ENDSET    BNAME
          APPEND    SP30,BNAME
          RESET     BNAME
.
          COMPARE   THREE,CCITEM
          GOTO      SOPT5000 IF EQUAL
.
.         Enter the bank branch
.
SOPT3000  MOVE      SP30,BBRCH
          KEYIN     *P21:11,*EL,*V2LON,BBRCH
.
          RESET     BBRCH
          GOTO      SOPT2900 IF EOS
.
          ENDSET    BBRCH
          APPEND    SP30,BBRCH
          RESET     BBRCH
.
          COMPARE   FOUR,CCITEM
          GOTO      SOPT5000 IF EQUAL
.
.         Enter the cheque Amount
.
SOPT3020  KEYIN     *P21:12,*EL,*V2LON,HFAMOUNT:
                    *P21:12,*DV,HFAMOUNT
          MOVE      HFAMOUNT,FORM72
          CALL      BTCH0000
          BRANCH    EXIT,SOPT3020
.
          COMPARE   FIVE,CCITEM
          GOTO      SOPT5000 IF EQUAL
.
.         Get the receipt number from the control file
.
          MOVE      SP20,TRECEIPT
.
.         First, check if the receipt number has been setup properly
.
          READ      CONTROLF,EIGHTY8;*210,CRECPNO
.
          COMPARE   ZERO,CRECPNO
          GOTO      SOPT3050 IF NOT EQUAL
.
.         Control file not set up correctly.
.
          DISPLAY   *P1:24,*EL,*B:
                    "Receipt number can not be zero.  ";
          CALL      HITENTER
          GOTO      SOPT0000
.
.         Control file okay, now get the next receipt number
.
SOPT3050  MOVE      " 88",PRXCODE   * System Lock Sector 88
          CALL      GETSLK00        * Get System Lock of Sector 88
          READ      CONTROLF,EIGHTY8;*210,CRECPNO
          ADD       ONE,CRECPNO
          WRITAB    CONTROLF,EIGHTY8;*210,CRECPNO
          CALL      RELSLK00        * Release System Lock of Sector 88
.
          SUB       ONE,CRECPNO
          MOVE      CRECPNO,TRECEIPT
.
.         Set up the description for the Dtran records
.
          IF        OPTION=1
            MOVE      HFNAME,TDDESC
          ELSE
            MOVE      CLMDESC,TDDESC
          ENDIF
.
.         Set flag to make sure bank deposit record will not be generated.
.         This is because it will be done only once, at the end of posting.
.
          MOVE      ZERO,CHQFLAG
.
.         Direct Deposits Y/N
.
SOPT3080  MOVE      ZERO,DRCTDEP             * Assume we are no Direct Deposits
          MOVE      ANSN,ANS
          KEYIN     *P21:13,*EL,*V2LON,*RV,ANS;
.
          REP       UPPLOW,ANS
          RESET     ANS
          GOTO      SOPT3100 IF EOS
.
          CMATCH    ANSY,ANS
          GOTO      SOPT3100 IF NOT EQUAL
.
          MOVE      ONE,DRCTDEP             * We are doing Direct Deposits
          MOVE      SIX,BTYPEF
          CALL      PTYP0000               * get payment code
          GOTO      SOPT5000
.
SOPT3100  DISPLAY   *P21:13,*V2LON,ANSN
.
.         Check if the batch details are correct
.
SOPT5000  CALL      MAINQST
.
          COMPARE   "-1",CCITEM
          GOTO      SOPT0000 IF EQUAL

          IF        CCITEM<0 | CCITEM>6
            BEEP
            GOTO      SOPT5000
          ENDIF
.
          BRANCH    CCITEM,SOPT2800,SOPT2850,SOPT2900:
                           SOPT3000,SOPT3020,SOPT3080
.
.         BATCHTOT is the total of what has been entered so far
.
          MOVE      ZERO,BATCHTOT
          MOVE      ZERO,EXIT           * Successful batch selection
          GOTO      SOPT9999
.
SOPT9000  BRANCH    CQUEST,SOPT0000
          MOVE      ONE,EXIT
SOPT9999  RETURN
.
.        ======================================================================
.        Get payment code
.        ======================================================================
PTYP0000 UNPACK     SP70,PAYMCODE,KEY1
         MOVE       BTYPEF,KEY1
         MOVE       "Py",KEY2
         PACK       KEY5,KEY2,SP70
         CALL       RDSCODE1
PTYP1000 CALL       RDKCODE1
         BRANCH     OVRCD,PTYP9999
.
         MATCH      KEY2,TCODE
         GOTO       PTYP9999 IF NOT EQUAL
.
         MATCH      KEY1,PTCDNHCP
         GOTO       PTYP1000 IF NOT EQUAL
.
         MOVE       ACODE,PAYMCODE
PTYP9999 RETURN
+
.        ======================================================================
.        BTCH0000: Check the batch totals 
.
.        This routine is used to make sure the batch total not exceed 6.2
.        ======================================================================
.
BTCH0000 MOVE      ZERO,EXIT
         IF        FORM72 > 999999.99
           DISPLAY   *P1:24,*B,*EL:
                     "Batch total must be less than or equal to 999999.99  ";
           CALL      HITENTER
           MOVE      ONE,EXIT
         ENDIF
         IF        FORM72 < 0
           DISPLAY   *P1:24,*B,*EL:
                     "Batch total must be positive  ";
           CALL      HITENTER
           MOVE      ONE,EXIT
         ENDIF
BTCH9999 RETURN
.
.****************************************************************************
.*                                WRITED00             Called by: OKEXCL00  *
.*                     Write to EDI Batch Invoice File          & OKRSUB00  *
.****************************************************************************
WRITED00  MOVE      INVNUM,PTEDINVN
          CALL      IBACLOCK
          PACK      PTEDDECM,CCC,CYY,CMM,CDD,SP8      * Current Date
          REP       " 0",PTEDDECM
          MOVE      CTIMEIS,PTEDTECM                  * Current Time
          MOVE      PASSCODE,PTEDOPRR                 * Current User
          PACK      KEY16,INVNUM,ZED8            * Find Batch No.
          CALL      RSPTEBI2                * Postnl Read Batch Invoice Table
          CALL      RPPTEBI2                * Seqntl Read Batch Invoice Table 
          BRANCH    OVRCD,WRITED80
.
          MATCH     INVNUM,PTEIINVN         * If Invoice Number is Correct ?
          IF        @EQUAL
            MOVE      PTEIBTHN,PTEDBTHN     * Set Batch Number
          ENDIF
.
WRITED80  MOVE      ZERO,PTEDEETP
          MOVE      SP70,PTEDSPR1
          PACK      KEY8,INVNUM,SP8
          CALL      WRPTEDA1                * Write to EDI Audit File
.
WRITED99  RETURN
.
.******************************************************************************
.*                                  OPEN0000               Called by: ML0000  *
.*                              Open The Tempfile                             *
.******************************************************************************
OPEN0000  CALL      KILL0000                * Delete the tempfile
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAME1,CMDLINE
          APPEND    FILELIN1,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * isbuild the temp file
          OPEN      TEMP1A,FNAME1
          OPEN      TEMP1B,FNAME1
.
OPEN9000  MOVE      ZERO,EXIT
OPEN9999  RETURN
.
.******************************************************************************
.*                                 KILL0000                 Called by: ML0000 *
.*                            Delete The Tempfile                             *
.******************************************************************************
KILL0000  CLOSE     TEMP1A
          CLOSE     TEMP1B
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAME1,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * iserase the temp file
.
KILL9000  MOVE      ZERO,EXIT
KILL9999  RETURN
.
.******************************************************************************
.*                                  LOAD0000                Called by: ML0000 *
.*                              Load The Tempfile                             *
.******************************************************************************
LOAD0000  MOVE      ZERO,TMPNO              * Reset the tempfile item no
          MOVE      ZERO,SCRMAX             * Reset the maximum screen no
          MOVE      ZERO,SCRNO              * Reset the current screen no
          MOVE      ZERO,TOTALHFP           * Reset Health Fund Paid Total
.
          CALL      CLVR0000                * Clear the tempfile variables
          DISPLAY   *P1:24,*EL,"Loading : ";
.
          PACK      KEY16,BATCHNO,SP20      * Key is Batch Number
          CALL      RSPTEBI1                * Positional Read EDI Batch Invoice
LOAD1000  CALL      RKPTEBI1                * Sequential Read EDI Batch Invoice
          BRANCH    OVRCD,LOAD9000          * No Valid Records
.
          MATCH     BATCHNO,PTEIBTHN
          GOTO      LOAD9000 IF NOT EQUAL   * Batch Number is not found 
.
          PACK      KEY8,PTEIINVN,SP8       * Key is Invoice Number
          CALL      RDINV1                  * Read Invoice File
          BRANCH    OVRCD,LOAD1000
.
          MOVE      PINVNO,TMPINVN          * Invoice Number
          MOVE      PINVADM,TMPADMN         * Admission Number  
          MOVE      PINVDTE,TMPINVDT        * Invoice Date 
          MOVE      PINVAMT,INVTOTAL        * Invoice Total
.
          MOVE      ZERO,OUTTOTAL           * Outstanding Amount
          ASSIGN    (PINVPATA+PINVHFDA+PINVOTHA+PINVJOUR)*-1,OUTTOTAL
          ASSIGN    INVTOTAL-OUTTOTAL,HFTOTAL    * Amount Paid by Health Fund
          ADD       HFTOTAL,TOTALHFP
.
          PACK      KEY8,PINVUR
          CALL      RDMAST1                 * Read Patient Master File
          BRANCH    OVRCD,LOAD5000
.
          MOVE      PTITL,PACTITLE
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      TWO,PACFRMT
          CALL      PACNAME                 * Pack Full Name
          MOVE      PACFNAME,TMPNAME        * Patients full name
.
LOAD5000  ADD       ONE,TMPNO               * Increment the tempfile item no
          CALL      WRIT0000                * Write to the tempfile
          BRANCH    EXIT,LOAD9500
.
          MOVE      ONE,SCRNO               * Current screen no - 1st
.
          IF        TMPNO%10=1
            DISPLAY   *P11:24,*V2LON,PINVNO,SP2,PINVADM;
          ENDIF
.
          GOTO      LOAD1000
.
LOAD9000  MOVE      ZERO,EXIT
          GOTO      LOAD9999
.
LOAD9500  MOVE      ONE,EXIT
LOAD9999  RETURN
.
.******************************************************************************
.*                                  CLVR0000              Called by: LOAD0000 *
.*                         Clear The Tempfile Variables                       *
.******************************************************************************
CLVR0000  
          MOVE      SP8,TMPINVN
          MOVE      SP8,TMPADMN
          MOVE      SP8,TMPINVDT
          MOVE      SP20,TMPNAME
          MOVE      SP20,TMPTOTAL
          MOVE      SP20,TMPOUTST
          MOVE      SP20,TMPHFTOT
          MOVE      ZERO,EDISTAT           * EDI Status = no change
.
CLVR9000  MOVE      ZERO,EXIT
CLVR9999  RETURN
.
.******************************************************************************
.*                                  WRIT0000              Called by: LOAD0000 *
.*                            Write To The Tempfile                           *
.******************************************************************************
WRIT0000  PACK      KEY4,TMPNO
          CALL      RATEMP1A                * Check read a tempfile record
          COMPARE   ONE,OVRCD
          GOTO      WRIT1000 IF NOT EQUAL   * Record already on file, error
.
          CALL      WRTEMP1A                * Write a tempfile record
.
          ASSIGN    TMPNO%16,FORM2          * The remainder from a division
          IF        FORM2=1
            ADD       ONE,SCRMAX            * Increment the maximum screen no
          ENDIF
          GOTO      WRIT9000
.
WRIT1000  DISPLAY   *P1:24,*EL,*B,"Error writing to the tempfile.  ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL,"Reseting the tempfile ...",*W2;
          GOTO      WRIT9500
.
WRIT9000  MOVE      ZERO,EXIT
          GOTO      WRIT9999
.
WRIT9500  MOVE      ONE,EXIT
WRIT9999  RETURN
.
.******************************************************************************
.*                                  BACK0000              Called by: ML0000   *
.*                        Display The Background Screen                       *
.******************************************************************************
BACK0000  DISPLAY   *P1:3,*EF,*P1:4,"Batch No: ",*V2LON,BATCHNO,*HOFF:
                    *P20:4,"Receipt No: ",*V2LON,TRECEIPT,*HOFF:
                    *P45:4,"Health Fund Amount $ ",*V2LON,HFAMOUNT:
                    *P1:6,*ULON,"Itm  ",*P7:6,"Inv No  ":
                    *P15:6,"Admin No  ",*P25:6,"Inv Date  ":
                    *P35:6,"Name            ",*P50:6,"Inv Total  ":
                    *P61:6,"Amnt Paid    ",*P73:6,"H/F Paid",*HOFF
BACK9000  MOVE      ZERO,EXIT
BACK9999  RETURN
.
.******************************************************************************
.*                                  DPSC0000                Called by: ML1000 *
.*                               Display Screen                               *
.******************************************************************************
DPSC0000  MOVE      SEVEN,CVERT
          CALL      RDTEMP1A                * Read a tempfile record
.
          WHILE     CVERT<23
            CALL      DPLN0000              * Display line
            ADD       ONE,CVERT
            CALL      RKTEMP1A              * Read a tempfile record
          DO
.
DPSC9000  MOVE      ZERO,EXIT
DPSC9999  RETURN
.
.******************************************************************************
.*                                  DPLN0000              Called by: DPSC0000 *
.*                                Display Line                     & CHAN0000 *
.******************************************************************************
DPLN0000  BRANCH    OVRCD,DPLN1000          * Invalid record, clear line
.
          COMPARE   ZERO,EDISTAT            * Determine if Highlight/Bold
          IF        @EQUAL
            DISPLAY   *P1:CVERT,*EL,TMPNO,".";
          ELSE
            DISPLAY   *P1:CVERT,*EL,*V2LON,TMPNO,".",*HOFF;
          ENDIF
.
          UNPACK    TMPINVDT,XCENT,XYEAR,XMON,XDAY         * Invoice Date
          PACK      INVDATE,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR
          DISPLAY   *P6:CVERT,TMPINVN:
                    *P15:CVERT,TMPADMN,*P24:CVERT,INVDATE:
                    *P35:CVERT,TMPNAME,*P48:CVERT,INVTOTAL:
                    *P59:CVERT,OUTTOTAL,*P71:CVERT,HFTOTAL;
          GOTO      DPLN9000
.
DPLN1000  DISPLAY   *P1:CVERT,*EL;
.
DPLN9000  MOVE      ZERO,EXIT
DPLN9999  RETURN
.
.******************************************************************************
.*                                  QUES0000              Called by: ML0000   *
.*                                Main Question                               *
.******************************************************************************
QUES0000  MOVE      ZERO,CCITEM
          MOVE      ONE,NEXT                * Reset the next screen flag
          MOVE      ONE,PREVIOUS            * Reset the previous screen flag
          MOVE      ONE,POST                * Reset the post screen flag
.
          DISPLAY   *P41:23,*EL,"Total Health Fund Paid $ ",*V2LON,TOTALHFP
.
          CALL      GMMI0000                * Get minimum & maximum dis items
.
          DISPLAY   *P1:24,*EL;             * Display Selection List
          MOVE      "1",CCOL
.
          IF        SCRNO>0
            DISPLAY   "Select item, ";
            ADD       "13",CCOL
          ENDIF
.
          IF        SCRNO<SCRMAX
            DISPLAY   *V2LON,"N",*HOFF,"ext, ";
            ADD       "6",CCOL
            MOVE      ZERO,NEXT             * Set the next screen flag
          ENDIF
.
          IF        SCRNO>1
            DISPLAY   "p",*V2LON,"R",*HOFF,"evious, ";
            ADD       "10",CCOL
            MOVE      ZERO,PREVIOUS         * Set the previous screen flag
          ENDIF
.
          IF        HFAMOUNT=TOTALHFP
            DISPLAY   *V2LON,"P",*HOFF,"ost, ";
            ADD       "6",CCOL
            MOVE      ZERO,POST             * Set the post screen flag
          ENDIF
.
          DISPLAY   *V2LON,"C",*HOFF,"ancel ? ";
          ADD       "9",CCOL
.
. Select item, Next, pRevious, Post, Cancel? 
.
QUES0500  MOVE      SP4,KEY4
          KEYIN     *PCCOL:24,*EL,*V2LON,*JR,KEY4;
.
          ENDSET    KEY4
          APPEND    SP4,KEY4
          RESET     KEY4
.
          TYPE      KEY4
          GOTO      QUES1000 IF NOT EQUAL   * Non numeric
.
. ----- Numeric selection -----
.
          COMPARE   ONE,SCRNO
          GOTO      QUES1500 IF LESS        * Not in change mode
.
          MOVE      ZERO,ITMNO
          MOVE      KEY4,ITMNO
          IF        ITMNO<1 | ITMNO<ITMMIN | ITMNO>ITMMAX | ITMNO>9999
            GOTO      QUES1500
          ENDIF
.
          ASSIGN    ITMNO+22-(16*SCRNO),CVERT
QUES0800  KEYIN     *P71:CVERT,*V2LON,HFPAID
          COMPARE   ZERO,HFPAID
          GOTO      QUES0900 IF NOT LESS 
.
          DISPLAY   *P1:24,*EL,*B:
                    "Health fund paid amount must be positive.  ";
          CALL      HITENTER
          GOTO      QUES0800
.
QUES0900  PACK      KEY4,ITMNO
          CALL      RDTEMP1A                * Read a tempfile record
          BRANCH    OVRCD,QUES0950
          COMPARE   HFPAID,INVTOTAL         * Record exists continue
          GOTO      QUES3500 IF NOT LESS    * H/F Paid <= Invoice Total
.
          BEEP 
          DISPLAY   *P1:24,*EL,*B:
                    "Health fund paid amount > invoice total.  ";
          CALL      HITENTER
          GOTO      QUES0800
.
QUES0950  DISPLAY   *P1:24,*EL,*B,"Error reading selection ",*V2LON,ITMNO:
                    *HOFF," from the tempfile.  ";
          CALL      HITENTER
          GOTO      QUES0000
.
. ----- Non numeric selection -----
.
QUES1000  UNPACK    KEY4,KEY1,KEY1,KEY1,KEY1
          REP       UPPLOW,KEY1
          REP       "N1R2P3C4",KEY1
          MOVE      ZERO,FORM1
          MOVE      KEY1,FORM1
          BRANCH    FORM1,QUES2000,QUES2500,QUES5000,QUES5500
.                         Next     pRevious  Post     Cancel
.
QUES1500  BEEP
          GOTO      QUES0500
.
QUES2000  BRANCH    NEXT,QUES1500
          MOVE      "1",CCITEM              * Next
          GOTO      QUES8000
.
QUES2500  BRANCH    PREVIOUS,QUES1500
          MOVE      "2",CCITEM              * Previous
          GOTO      QUES8000
.
QUES3500  MOVE      "3",CCITEM              * Change
          GOTO      QUES8000
.
QUES5000  BRANCH    POST,QUES1500
          MOVE      "0",CCITEM              * Post
          GOTO      QUES8000
.
QUES5500  MOVE      "-1",CCITEM             * Cancel
.
QUES8000  DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
.
QUES9999  RETURN
.
.******************************************************************************
.*                                  GMMI0000              Called by: QUES0000 *
.*                        Get The Minimum & Maximum Items                     *
.******************************************************************************
GMMI0000  COMPARE   ZERO,TMPNO
          GOTO      GMMI9000 IF EQUAL       * No operation screen
.
          ASSIGN    ((16*SCRNO)-16)+1,ITMNO  * Reset item no to next screen
          MOVE      ITMNO,KEY4
          MOVE      KEY4,ITMMIN             * Minimum items on screen
          MOVE      ITMMIN,TMPNO
          MOVE      ONE,FORM2
          CALL      RDTEMP1A                * Read a tempfile record
.
          WHILE     OVRCD<>1 & FORM2<16
            ADD       ONE,FORM2
            CALL      RKTEMP1A              * Read a tempfile record
          DO
          MOVE      TMPNO,ITMMAX            * Maximum items on screen
.
GMMI9000  MOVE      ZERO,EXIT
GMMI9999  RETURN
.
.******************************************************************************
.*                                  NEXT0000                Called by: ML0000 *
.*                                 Next Screen                                *
.******************************************************************************
NEXT0000  ADD       ONE,SCRNO
          ASSIGN    ((16*SCRNO)-16)+1,ITMNO  * Reset item no to next screen
          MOVE      ITMNO,KEY4
          CALL      DPSC0000                * Display screen
.
NEXT9000  MOVE      ZERO,EXIT
NEXT9999  RETURN
.
.******************************************************************************
.*                                  PREV0000                Called by: ML0000 *
.*                               Previous Screen                              *
.******************************************************************************
PREV0000  SUB       ONE,SCRNO
          ASSIGN    ((16*SCRNO)-16)+1,ITMNO * Reset item no to previous screen
          MOVE      ITMNO,KEY4
          CALL      DPSC0000                * Display screen
.
PREV9000  MOVE      ZERO,EXIT
PREV9999  RETURN
.
.******************************************************************************
.*                                  CHAN0000                Called by: ML0000 *
.*                                Change Items                                *
.******************************************************************************
CHAN0000  COMPARE   ZERO,EDISTAT 
          IF        @EQUAL
            MOVE      ONE,EDISTAT          * EDI Status has changed
          ENDIF
.
          SUB       HFTOTAL,TOTALHFP        * Subtract previous H/F amount
          ADD       HFPAID,TOTALHFP         * Add New H/F Paid Amount to Total
          MOVE      HFPAID,HFTOTAL
          CALL      UPTEMP1A                * Update a tempfile record
.
          ASSIGN    ((16*SCRNO)-16)+1,ITMNO * Reset item no to previous screen
          MOVE      ITMNO,KEY4
          CALL      DPSC0000                * Display Screen
.
CHAN9000  MOVE      ZERO,EXIT
CHAN9999  RETURN
.
.******************************************************************************
.*                                  POST0000                Called by: ML0000 *
.*                                 Post Items                                 *
.******************************************************************************
POST0000  CALL      IBACLOCK
          PACK      PTEDDECM,CCC,CYY,CMM,CDD,SP8      * Current Date
          REP       " 0",PTEDDECM
          MOVE      CTIMEIS,PTEDTECM        * Current Time
          MOVE      PASSCODE,PTEDOPRR       * Current User
.
          PACK      KEY4,SP4
          CALL      RSTEMP1A                * Position on & read a tempfile
POST1000  CALL      RKTEMP1A                  record
          BRANCH    OVRCD,POST9000
.
          COMPARE   ZERO,HFTOTAL            * Health Fund hasn't paid invoice 
          GOTO      POST6000 IF EQUAL
.
.         * Health Fund has paid Invoice *
.
.         Lock the invoice number ( to stop some from printing receipts )
.
          CALL      LCKI0000
.
.         Read in the invoice record
.
          MOVE      TMPINVN,KEY8
          CALL      RDINV1
          BRANCH    OVRCD,POST1000
.
.         Get the master file record
.
          MOVE      PINVUR,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,POST1000
.
.         Set up the patients name
.
          MOVE      PGNAME,ANS
          PACK      PNAME WITH ANS,DOT,PSNAME
.
.         Get the transaction number for the debtors transaction file
.
POST2000  MOVE      PINVADM,PVIBILL
          MOVE      PVIBILL,KEY8
          CALL      TRVISA1              * Get the next transaction number
          CALL      CHKD0000             * Check that it doesn't already exist
          BRANCH    OVRCD,POST2000
.
.         Post the Debtor Transaction records
.
          MOVE      HFTOTAL,TPATAMTT    * Gross Total Amount
          MULT      SEQ,HFTOTAL         * Make the payment negative
.
          CALL      SETD0000             * Set up the variables
          CALL      WRTD0000             * Post the Dtran record
.
.         Update the invoice record
.
          MOVE      PINVHFDA,FORM102
          ADD       HFTOTAL,FORM102
          MOVE      FORM102,PINVHFDA
.
.         Check if the invoice now balances
.
          MOVE      PINVAMT,FORM102      * Invoice amount +
          ADD       PINVPATA,FORM102     * Patient payments +
          ADD       PINVHFDA,FORM102     * H.F payments +
          ADD       PINVOTHA,FORM102     * Other payments +
          ADD       PTINCRTT,FORM102     * Credit Notes +
          ADD       PINVJOUR,FORM102     * Journals = amount outstanding
          IF        IBCNUGST=2 | IBCNUGST=3
            ADD       PTINGSTJ,FORM102
          ENDIF
.
          MOVE      "99999999",PINVBLCD  * Assume it doesn't balance
.
          COMPARE   ZERO,FORM102         * Does it balance ?
          GOTO      POST5000 IF NOT EQUAL
.
.         Invoice is now balanced. Record the date that this occured
.
          PACK      PINVBLCD,CCC,CYY,CMM,CDD
          REP       " 0",PINVBLCD
.
POST5000  PACK      PTINUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PTINUDAT             * date updated
          CLOCK     TIME,PTINUTIM             * time updated
          MOVE      PASSCODE,PTINUUID         * web user id
          CALL      UPINV1
.
.         Release the invoice record
.
          CALL      ULKI0000
.
.         Update the Fee's Invoiced file
.
          MULT      SEQ,HFTOTAL         * Make the payment positive again
.
          MOVE      ZERO,FGSTFLAG
          CALL      SETF0000             * Set up the variables
          CALL      PATCALF              * Post the data to the PATFINS file
.
.         We are doing health fund cash receipts, so add a record to
.         the reminder file (so HF followup letters may be sent)
.
          CALL      WRTR0000
.
          GOTO      POST1000
.
.         * Health Fund hasn't paid Invoice *
.
POST6000  PACK      KEY8,TMPINVN,SP8
          CALL      RLPTINV1                * Read & Lock Patient Invoice File
          BRANCH    OVRCD,POST7000
          MOVE      TWO,PTINEDSF            * Set EDI Flag to Rejected Claim
          PACK      PTINUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PTINUDAT           * date updated
          CLOCK     TIME,PTINUTIM           * time updated
          MOVE      PASSCODE,PTINUUID       * web user id
          CALL      UPINV1                  * Update Record
POST7000  CALL      UUPTINV1                * Unlock Patient Invoice File 
.
          BRANCH    CAUDX,POST1000          * Check that Audit Parameter is ON
.
          MOVE      TMPINVN,PTEDINVN
          MOVE      TWO,PTEDEDSF            * EDI Flag Rejected Claim
          PACK      KEY16,TMPINVN,ZED8      * Find Batch No.
          CALL      RSPTEBI2                * Postnl Read Batch Invoice Table
          CALL      RPPTEBI2                * Seqntl Read Batch Invoice Table 
          BRANCH    OVRCD,POST8000
.
          MATCH     TMPINVN,PTEIINVN         * If Invoice Number is Correct ?
          IF        @EQUAL
            MOVE      PTEIBTHN,PTEDBTHN     * Set Batch Number
          ENDIF
.
POST8000  MOVE      ZERO,PTEDEETP
          MOVE      SP70,PTEDSPR1
          PACK      KEY8,TMPINVN,SP8
          CALL      WRPTEDA1                * Write to EDI Audit File
          GOTO      POST1000
.
POST9000  MOVE      ONE,CHQFLAG
.
.         Post the data to the bank deposit file
.
          PACK      KEY4,SP3,ONE            * Use first record from tempfile
          CALL      RDTEMP1A
          BRANCH    OVRCD,POST9999
.
          MOVE      TMPINVN,KEY8
          CALL      RDINV1
          BRANCH    OVRCD,POST9999
.
          MOVE      ZERO,EXIT
.
POST9999  RETURN
.
.        ======================================================================
.         LCKI0000 : Lock the Health Fund Receipts Record
.        ======================================================================
.
LCKI0000  MOVE      PINVNO TO KEY8
          CALL      RDHFRE1
          BRANCH    OVRCD,LCKI2000
.
.         Zero means that it is currently not locked
.
          COMPARE   ZERO TO HFRSTAT
          GOTO      LCKI1000 IF EQUAL
.
          MOVE      SP1 TO ANS
          DISPLAY   *P1:24,*EL,*B:
                    "Invoice ",*V2LON,PINVNO,*HOFF:
                    " currently being used.  ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL,"Accepting ";
          GOTO      LCKI0000
.
.         Lock the record
.
LCKI1000  MOVE      PINVNO TO KEY8
          CALL      RLHFRE1
          BRANCH    OVRCD,LCKI2000,LCKI1100
          MOVE      ONE TO HFRSTAT
          CALL      UPHFRE1
          CALL      UUHFRE1
          GOTO      LCKI9999
.
LCKI1100  DISPLAY   *W1,"Waiting Record Locked"
          GOTO      LCKI1000
.
.         Create a new record
.
LCKI2000  MOVE      ONE TO HFRSTAT
          MOVE      PINVNO TO HFRINVR
          CALL      WRHFRE1
.
LCKI9999  RETURN
.
.        ======================================================================
.         ULKI0000 : Unlock the Health Fund Receipts Record
.        ======================================================================
.
ULKI0000  MOVE      PINVNO,KEY8
          CALL      RDHFRE1         * Read in the Health Fund Receipt Record
          BRANCH    OVRCD,ULKI9999
          MOVE      ZERO,HFRSTAT    * Set the status to 'free'
          CALL      UPHFRE1
.
ULKI9999  RETURN
.
.        ======================================================================
.        SETD0000 : Set up the Debtors Transaction Records
.        ======================================================================
.
.        Inpatient Dtran
.
SETD0000  MOVE      PINVADM,TADMNO
          MOVE      PVITRAN,TTRANSN1
.
          IF        OPTION=1
            MOVE      ANSH,TTYPEDEB
            MOVE      HCODE,TDCODE
          ELSE
            MOVE      ANSI,TTYPEDEB
            MOVE      CLMTYPE,TDCODE
          ENDIF
.
          MOVE      ZERO,TPATAMTP
          MOVE      HFTOTAL,TREBATE
.
          MOVE      CDD,TFDAY
          MOVE      CMM,TFMONTH
          MOVE      CYY,TFYEAR
          MOVE      CCC,TFCENT
.
          MOVE      ZERO,PTDTLSPT
          MOVE      ZERO,PTDTLSRB
          MOVE      ZERO,PTDTDTYP
          MOVE      SP3,TMISGRP
          MOVE      ZERO,PTDTCCU
          MOVE      "PY",TTYPE
          MOVE      PINVNO,TREF
          MOVE      BTYPEF,TPAYTYPE
          MOVE      ONE,TINVPRT
          MOVE      FIVE,TRECTYPE
          MOVE      BATCHNO,TBATCHN
          PACK      PTDTDES2,SP20,SP20
          PACK      PTDTEFFD,CCC,CYY,CMM,CDD
          REP       " 0",PTDTEFFD
.
          MOVE      SP70,PTDTBTYP
          MOVE      ZERO,PTDTEPSD
          MOVE      ZERO,PTDTGSTA
          MOVE      SP6,PTDTGSTC
          MOVE      ZERO,PTDTGSTM
          MOVE      ZERO,PTDTGSTL
          MOVE      SP70,PTDTTMNO
          MOVE      SP70,PTDTPMBS
          MOVE      SP70,PTDTPCOD
.
SETD9999  RETURN
.
.        ======================================================================
.        CHKD0000 : Check the Debtors Transaction Records
.        ======================================================================
.
.        Inpatient Dtran
.
CHKD0000 PACK      KEY22,PINVADM,PINVNO,PVITRAN
         CALL      RDADTRN1
         COMPARE   ZERO,OVRCD
         GOTO      OVERCOND IF EQUAL
.
CHKD9999 MOVE      ZERO,OVRCD
         RETURN
.
.        ======================================================================
.        WRTD0000 : Write the Debtors Transaction Records
.        ======================================================================
.
.        Inpatient Dtran
.
WRTD0000 PACK      KEY22,TADMNO,TREF,TTRANSN1
         CALL      WRDTRN1
.
WRTD9999 RETURN
.
.        ======================================================================
.        SETF0000 : Set up the Fee's Invoiced Record
.
.        Set up the code depending on the option
.        ======================================================================
.
SETF0000 MOVE      HFTOTAL,FINAMT             * The amount to be posted
.
         MOVE      PINVNO,FININVN
         MOVE      PINVADM,FINADMN
         MOVE      PINVUR,FINURNO
.
         PACK      FINDATE,CCC,CYY,CMM,CDD
         REP       " 0",FINDATE
         MOVE      PINVSYS,FINSYS              * The appropriate system
         MOVE      PINVSITE,FINSITE            * The outpatient site
.
         MOVE      ANSB,FINTYPE                * Cash received
.
         IF        OPTION=1
           PACK      FINCODE,ANSB,HCODE,SP20   * Health fund cash
         ELSE
           PACK      FINCODE,ANSI,CLMTYPE,SP20 * Claim type
         ENDIF
.
SETF9999 RETURN
.
.        ======================================================================
.        WRTR0000: Subroutine to add/update records in PATREMFD
.        ======================================================================
.
WRTR0000 MOVE      PINVADM,KEY8
         CALL      RDREMD1
         BRANCH    OVRCD OF WRTR1000
.
.        Zero means that the H.F. followup letter has not been sent
.
         MOVE      ZERO,REMHFLG
.
         PACK      REMPDTE WITH CCC,CYY,CMM,CDD
         REP       " 0",REMPDTE
.
         CALL      UPREMD1
         GOTO      WRTR9999
.
.        Write a new record to PATREMFD file
.
WRTR1000 MOVE      PINVADM,REMADMN
         MOVE      ZERO,REMHFLG
         MOVE      SP8,REMLDTE
         MOVE      SP3,REMLSTL
         MOVE      SP30,REMSPAR
.
         PACK      REMPDTE WITH CCC,CYY,CMM,CDD
         REP       " 0",REMPDTE
.
         CALL      WRREMD1
WRTR9999 RETURN
+
.**************************************************************************
.*                               DBAT0000            Called by: KEYBAT00  *
.*                     Display valid batch no's                           *
.**************************************************************************
DBAT0000  CALL      GETSCR00                 * Save keyin screen
DBAT0500  MOVE      ZERO,NEXT
          MOVE      ONE,CQUEST
          MOVE      ONE,SCRNO
          PACK      KEY8,Z70
DBAT1000  CALL      LSDT0000                 * List batch numbers
DBAT2000  CALL      DQST0000                 * Display options
          BRANCH    FORM1,DBAT3000,DBAT0500
          BRANCH    EXIT,DBAT5000
.
DBAT3000  PACK      KEY8,PTEHBTHN
          ADD       ONE,SCRNO
          GOTO      DBAT1000
.
DBAT5000  MOVE      ONE,CCOL
          MOVE      TWENTY4,CVERT
.
DBAT9000  MOVE      ZERO,EXIT
DBAT9999  RETURN
+
.**************************************************************************
.*                               LSDT0000            Called by: DDTE0000  *
.*                         List valid batch no's                NXTD0000  *
.**************************************************************************
.
LSDT0000  DISPLAY    *P1:1,*EF
          CALL       DISPHEAD
          DISPLAY    *P30:4,*V2LON,*ULON,"Valid Batch Numbers"
          MOVE       ONE,CCOL
          MOVE       FIVE,CVERT
.
          CALL       RSPTEBH1                     * Read Batch Header File
LSDT1000  CALL       RPPTEBH1
          BRANCH     OVRCD,LSDT3000
.
LSDT0500  UNPACK     PTEHSTDT,CCENT,CYEAR,CMON,CDAY   * Set up and display
          CALL       PACDATE                          * period for batch no.
          MOVE       CPCDATE,DSPSTDTE
.
          UNPACK     PTEHEDDT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          MOVE       CPCDATE,DSPEDDTE
.
          DISPLAY    *PCCOL:CVERT,*V2LON,PTEHBTHN,SP1,*HOFF:
                     PTEHHFGP,SP1,DSPSTDTE," - ",DSPEDDTE
          COMPARE    CVERT,TWENTY3                * Bottom of screen?
          GOTO       LSDT2000 IF EQUAL
.
          ADD        ONE,CVERT                    * No, goto next line
          GOTO       LSDT1000
.
LSDT2000  COMPARE    FORTY1,CCOL                  * Second column?
          GOTO       LSDT3000 IF EQUAL            * Yes
.
          MOVE       FORTY1,CCOL                  * No, initialise for
          MOVE       FIVE,CVERT                   * second column
          GOTO       LSDT1000                     * and display
.
LSDT3000  MOVE       SCRNO,SCRMAX                 * Determine if this will
          PACK       KEY8,PTEHBTHN                * be the last screen
          CALL       RSPTEBH1
          CALL       RPPTEBH1                     * Is there another record?
          BRANCH     OVRCD,LSDT9000               * No, this is the last screen
          CALL       RKPTEBH1                     * Yes, reposition on last rec
LSDT4000  ADD        ONE,SCRMAX                   * At least one more screen
.
LSDT9000  MOVE       ZERO,EXIT
LSDT9999  RETURN
+
.**************************************************************************
.*                               DQST0000              Called by: ML0000  *
.*                        Display question line                           *
.**************************************************************************
.
DQST0000  MOVE      ZERO,FORM1
.
          DISPLAY   *P1:24,*EL;
          MOVE      "1",CCOL
.
          IF        SCRNO<SCRMAX
            DISPLAY   "(",*V2LON,ANSN,*HOFF,")ext, ";    * Next screen
            ADD       "8",CCOL
            MOVE      ZERO,NEXT
          ENDIF
.
          IF        SCRNO>1
            DISPLAY   "(",*V2LON,ANSF,*HOFF,")irst, ";   * First screen
            ADD       "10",CCOL
          ENDIF
.
          DISPLAY     "e(",*V2LON,"X",*HOFF,")it: ";     * eXit
          ADD         "8",CCOL
.
DQST0500  MOVE      SP1,KEY1
          KEYIN     *PCCOL:24,*EL,*V2LON,*JR,KEY1;
.
          ENDSET    KEY1
          APPEND    SP1,KEY1
          RESET     KEY1
.
DQST3000  TYPE      KEY1
          GOTO      DQST4000 IF EQUAL       * Numeric value
.
          REP       UPPLOW,KEY1
          REP       "N1F2X3",KEY1
          MOVE      ZERO,FORM1
          MOVE      KEY1,FORM1
          BRANCH    FORM1,DQST5000,DQST6000,DQST9500
.                         Next     First    Exit
DQST4000  BEEP
          GOTO      DQST0500
.
DQST5000  BRANCH    NEXT,DQST4000
          MOVE      ONE,NEXT
          GOTO      DQST9000
.
DQST6000  MOVE      ZERO,NEXT
          MOVE      ONE,SCRNO
.
DQST9000  MOVE      ZERO,EXIT
          GOTO      DQST9999
.
DQST9500  MOVE      ONE,EXIT
DQST9999  RETURN
+
.******************************************************************************
.*                        I/O Routines For The Tempfile                       *
.******************************************************************************
RSTEMP1A  RESET     KEY4
          READ      TEMP1A,KEY4;;
          RETURN
.
RATEMP1A  MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      TEMP1A,KEY4;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP1A  MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      TEMP1A,KEY4;DTMPNO,TMPINVN,TMPADMN,TMPINVDT,TMPNAME:
                                TMPTOTAL,TMPOUTST,TMPHFTOT,DEDISTAT
          GOTO      OVERCOND IF OVER
          MOVE      DTMPNO,TMPNO
          MOVE      TMPTOTAL,INVTOTAL
          MOVE      TMPOUTST,OUTTOTAL
          MOVE      TMPHFTOT,HFTOTAL
          MOVE      DEDISTAT,EDISTAT
          RETURN
.
RKTEMP1A  MOVE      ZERO,OVRCD
          READKS    TEMP1A;DTMPNO,TMPINVN,TMPADMN,TMPINVDT,TMPNAME:
                           TMPTOTAL,TMPOUTST,TMPHFTOT,DEDISTAT
          GOTO      OVERCOND IF OVER
          MOVE      DTMPNO,TMPNO
          MOVE      TMPTOTAL,INVTOTAL
          MOVE      TMPOUTST,OUTTOTAL
          MOVE      TMPHFTOT,HFTOTAL
          MOVE      DEDISTAT,EDISTAT
          RETURN
.
RPTEMP1A  MOVE      ZERO,OVRCD
          READKP    TEMP1A;DTMPNO,TMPINVN,TMPADMN,TMPINVDT,TMPNAME:
                           TMPTOTAL,TMPOUTST,TMPHFTOT,DEDISTAT
          GOTO      OVERCOND IF OVER
          MOVE      DTMPNO,TMPNO
          MOVE      TMPTOTAL,INVTOTAL
          MOVE      TMPOUTST,OUTTOTAL
          MOVE      TMPHFTOT,HFTOTAL
          MOVE      DEDISTAT,EDISTAT
          RETURN
.
UPTEMP1A  MOVE      TMPNO,DTMPNO
          MOVE      INVTOTAL,TMPTOTAL
          MOVE      OUTTOTAL,TMPOUTST
          MOVE      HFTOTAL,TMPHFTOT
          MOVE      EDISTAT,DEDISTAT
          UPDATE    TEMP1A;DTMPNO,TMPINVN,TMPADMN,TMPINVDT,TMPNAME:
                           TMPTOTAL,TMPOUTST,TMPHFTOT,DEDISTAT
          RETURN
.
WRTEMP1A  RESET     KEY4
          MOVE      TMPNO,DTMPNO
          MOVE      INVTOTAL,TMPTOTAL
          MOVE      OUTTOTAL,TMPOUTST
          MOVE      HFTOTAL,TMPHFTOT
          MOVE      EDISTAT,DEDISTAT
          WRITE     TEMP1A,KEY4;DTMPNO,TMPINVN,TMPADMN,TMPINVDT,TMPNAME:
                                TMPTOTAL,TMPOUTST,TMPHFTOT,DEDISTAT
          RETURN
.
DETEMP1A  RESET     KEY4
          DELETE    TEMP1A,KEY4
          RETURN
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       TFILENAM                     * Generate Temp File Name
          INC       IBAPASIO/INC
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       MLTCFNIO/INC
          INC       NZPFIGIO/INC
          INC       NZPFINIO/INC
          INC       NZPRFNIO/INC
          INC       PATDRGIO/INC
          INC       PATEDAIO/INC
          INC       PATEBIIO/INC
          INC       PATEBHIO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATDSCIO/INC
          INC       PATDTRIO/INC
          INC       PATFIGIO/INC
          INC       PATFINIO/INC
          INC       PATFN1IO/INC
          INC       PATHFRIO/INC
          INC       PATINVIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATREMIO/INC
          INC       PATRFNIO/INC
          INC       PATRFGIO/INC
          INC       PATVISIO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
.
....          INC       KYPTBANK
          INC       PATCALFN
          INC       PATFNDKY
          INC       PATCODKY
