.******************************************************************************
.* System         : Patient Billing                                           *
.* Program        : IBAADT33.PBL                                              *
.* Name           : Health Fund Account Extract                               *
.******************************************************************************
.* Date           : 18/05/2004                                                *
.* Author         : Steve Armstrong                                           *
.* Function       : Extract Health Fund HosClaims Account details             *
.*                  User is given 2 options upon entering program:            *
.*                     1. Extract by Health Fund Group                        *
.*                     2. Extract by Claim Type                               *
.*                                                                            *
.* Modifications  :                                                           *
.*                                                                            *
.*        V12.00.01 29/05/2025  Ebon Clements  TSK 0955096                    *
.*                  Alphanueric visit number changes                          *
.*        V11.01.01 17/02/2021  Tracey Nguyen  TSK 0888639                    *
.*                  Recompiled for PATMMBFD changes                           *
.******************************************************************************
.*        V11.00.01 10/03/2020  J.Tan          TSK 0838262                    *
.*                  Added Effective from and to date to MBS Item file         *
.*        V10.08.01 26/08/2016  Don Nguyen     TSK 0312570                    * 
.*                  Recompiled for NCGSEGMT (GETDRG)                          *
.*                  Added PMSEDGFD/IO and GETEFDRG                            *
.*        V10.06.01 15/04/2015  Ania P         CAR 261630                     * 
.*                  Removed use of temp file name                             *
.*        V10.05.01 18/09/2014  Davin          CAR 304204                     *
.*                  Recompiled for GETDRG - get drg version based on disc dte *
.*        V10.03.01 09/01/2012  Mike Laming    CAR 242229                     *
.*                  Recompiled for NCGSEGMT - Test "Source of Referral" = "1" *
.*        V10.02.02 31/10/2011  Mike Laming    CAR 250267                     *
.*                  Recompiled for NCGSEGMT - PATICUFD fields to Form 5       *
.*        V10.02.01 25/03/2011  Mike Laming   CAR 240107                      *
.*                  Recompiled for NCGSEGMT - Mods PATECDaf/PATECOaf Keys     *
.*        V10.01.01 21/12/2010  Mike Laming   CAR 233046                      *
.*                  Recompiled for PATMCHRD - Mods to Misc.Charges PATMCHFD   *
.*        V9.12.04  27/01/2010  Steve Armstrong     CAR 217787                *
.*                  Recompiled for changes to NCGSEGMT - EPD segment.         *
.*        V9.12.03  25/01/2010  Steve Armstrong     CAR 201308                *
.*                  Recompiled for changes to NCGSEGMT - SVB segment.         *
.*        V9.12.02  22/12/2009  Steve Armstrong     CAR 212980                *
.*                  Recompiled for changes to NCGSEGMT - SVB & MIG segments.  *
.*        V9.12.01  14/12/2009  Steve Armstrong     CAR 201308                *
.*                  Recompiled for changes to NCGSEGMT - SVB segment.         *
.******************************************************************************
.*        V9.09.07  23/01/2008  Steve Armstrong     CAR 159875                *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*        V9.09.06  22/11/2007  Peter Vela          CAR 132264                *
.*                  Recompiled for PATCHCFD                                   *
.*        V9.09.05  15/11/2007  Steve Armstrong     CAR 154963                *
.*                  Recompiled for changes to NCGCLMVR                        *
.*        V9.09.04  26/10/2007  Steve Armstrong  CAR 147461 & 147455          *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.09.03  18/10/2007  Steve Armstrong     CAR 151231                *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*        V9.09.02  27/09/2007  Steve Armstrong     CAR 151231                *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*        V9.09.01  03/08/2007  Mike Laming       CAR 146742                  *
.*                  Mods to handle "Fully Credited" Invoices at LOAD0000      *
.*                  14/08/2007  Mike Laming         CAR 146686 & 146815       *
.*                  Recompile for NCGSEGMT - Credit Charge Ind. change        *
.******************************************************************************
.*        V9.08.03  19/03/2007  Mike Laming       CAR 125462                  *
.*                  Modify KHOS0000 routine for Multi Hospital                *
.*        V9.08.02  12/12/2006  Steve Armstrong     CAR 127885                *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.08.01  08/12/2006  Steve Armstrong     CAR 123343                *
.*                  Recompiled for changes to NCGSEGMT                        *
.******************************************************************************
.*        V9.07.03  07/09/2006  Steve Armstrong     CAR 112793                *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.07.02  17/07/2006  Steve Armstrong     CAR 112793                *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.07.01  12/07/2006  Sandra Barcham      CAR 112415                *
.*                  Recompiled for changes to NCGSEGMT & NCGCLMVR             *
.*                  08/05/2006  Peter Vela          CAR 104252                *
.*                  Recompiled for PATCERFD and PATCLCFD                      *
.******************************************************************************
.*        V9.05.B07 22/02/2006  Mike Laming         CAR 95392                 *
.*                  Recompiled for NCGSEGMT - add Provider No.warning         *
.*        V9.05.B06 03/02/2006  J.Tan               CAR 93540                 *
.*                  Recompiled for NCGSEGMT - TFR segment                     *
.*        V9.05.B05 20/01/2006  Steve Armstrong     CAR 92453                 *
.*                  Recompiled for NCGSEGMT                                   *
.*        V9.05.B04 09/01/2006  Steve Armstrong     CAR 89871                 *
.*                  Recompiled for NCGSEGMT                                   *
.*        V9.05.B03 09/01/2006  Steve Armstrong     CAR 88319                 *
.*                  Recompiled for NCGSEGMT                                   *
.*        V9.05.B02 28/12/2005  Steve Armstrong     CAR 89871                 *
.*                  Recompiled for NCGSEGMT                                   *
.******************************************************************************
.*        V9.04.27  28/11/2005  Mike Laming         CAR 86040                 *
.*                  Add OPENs & IO Inc's for PATCERFD, PATCLCFD and PMSHCPFD  *
.*                  Recompiled for NCGRSEGMT - Add Certificates               *
.*        ........  28/11/2005  Mike Laming         CAR 86417                 *
.*                  Recompiled for NCGCLMVR - SCN changes                     *
.*        V9.04.26  22/11/2005  Steve Armstrong     CAR 85944                 *
.*                  Recompiled for NCGSEGMT - ANB changes                     *
.*        V9.04.25  02/11/2005  Mike Laming         CAR 82516                 *
.*                  Recompiled for NCGSEGMT - add test for Patient Portion Inv*
.*        V9.04.24  21/09/2005  Mike Laming         CAR 65745                 *
.*                  1) Change to bypass record if PINVTYP=2 (Patient portion  *
.*                  of Split Inv.) at LOAD1000                                *
.*                  2) re-compile for NCGSEGMT                                *
.*        V9.04.23  31/08/2005  Steve Armstrong     CAR 74220                 *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*        V9.04.22  30/08/2005  Steve Armstrong     CAR 74043                 *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*        V9.04.21  11/08/2005  Steve Armstrong     CAR 71776                 *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*        V9.04.20  05/08/2005  Steve Armstrong     CAR 70776                 *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*        V9.04.19  21/07/2005  Steve Armstrong     CAR 65071                 *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*                  18/07/2005  Steve Armstrong     CAR 67928                 *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*        V9.04.18  06/07/2005  Steve Armstrong     CAR 66286 & 66447         *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*        V9.04.17  20/06/2005  Steve Armstrong     CAR 62812                 *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*        V9.04.16  10/06/2005  Steve Armstrong     CAR 62812                 *
.*                  Recompiled for changes to NCGSEGMT  & NCGCLMVR.           *
.*        V9.04.15  19/05/2005  Steve Armstrong     CAR 62085                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.04.14  05/04/2005  Steve Armstrong     CAR 60208                 *
.*                  Recompiled for NCGCLMVR                                   *
.*        V9.04.13  02/02/2005  Steve Armstrong     CAR 57600                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.04.12  18/01/2005  Steve Armstrong     CAR 56917                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.04.11  15/12/2004  Steve Armstrong     CAR 55922                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.04.10  21/10/2004  Steve Armstrong     CAR 54520                 *
.*                  Recompiled for changes to NCGSEGMT & NCGCLMVR             *
.*                  Also added OPEN on PATMI1A8 and PATLINK1                  *
.*        V9.04.09  19/10/2004  Steve Armstrong     CAR 54427                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.04.08  13/10/2004  Steve Armstrong     CAR 54283                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.04.07  11/10/2004  Steve Armstrong     CAR 54208                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.04.06  11/10/2004  Steve Armstrong     CAR 54180                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.04.05  07/10/2004  Jill Habasque       CAR 53798                 *
.*                  Mods for multi hospital                                   *
.*        V9.04.04  23/09/2004  Steve Armstrong     CAR 53737                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*                  Mods to set same day stay days to "1" instead of "0"      *
.*                  by using NHOSDAYC (for NOINVDYS - 100005 & 100007)        *
.*        V9.04.03  16/09/2004  Steve Armstrong     CAR 53569 & 53557         *
.*                  Recompiled for changes to NCGSEGMT                        *
.*                  Added calls to WRDPS000, WRANB000, WRTFR000, WRTRG000,    *
.*                  WRMOR000, WRCER000, WRMED000, WRREM000                    *
.*        V9.04.02  10/09/2004  Steve Armstrong     CAR 53402                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.04.01  23/08/2004  Steve Armstrong     CAR 52899                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.******************************************************************************
.*        V9.03.04  13/08/2004  Steve Armstrong     CAR 52656                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.03.03  03/08/2004  Steve Armstrong     CAR 52322                 *
.*                  Recompiled for changes to NCGSEGMT                        *
.*        V9.03.02  28/07/2004  Steve Armstrong     CAR 51477                 *
.*                  Recompiled for changes to NCGSEGMT & NCGCLMVR             *
.*                  26/07/2004  Steve Armstrong     CAR 52064                 *
.*                  Recompiled for changes to NCGSEGMT.                       *
.*                  26/07/2004  Steve Armstrong     CAR 50790                 *
.*                  Added READ on CONTROLF for PTCNAUED.                      *
.*                  26/07/2004  Steve Armstrong     CAR 50708                 *
.*                  Recompiled for changes to NCGSEGMT & NCGCLMVR             *
.*        V9.03.01  10/06/2004  Pat Dirito       CAR 50552                    *
.*                  Added correct positioning of control vars for 9.03        *
.*                  Added print error statements for web report in QUES0000   *
.*                  Removed usage of PTINEDSF
.*        V9.03.00  08/06/2004  Pat Dirito       CAR 48876                    *
.*                  Ported program from 6.11                                  *
.******************************************************************************
.*        V6.11.00  18/05/2004  Steve Armstrong  CAR 48876                    *
.*                  Created original program - a copy of IBAADT22 which will  *
.*                  use the NCG formatting routines from IBAADT10.            *
.******************************************************************************

          INC       STD001FD
          INC       NCGCLMVR/INC
          INC       IBASEQFD/INC 
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
          INC       PMSEDGFD/INC       * Effective DRG Dates
.
.
TEMPFIL1  IFILE     SQL,FIXED=18, KEY="U1-8"
TEMPFIL2  IFILE     SQL,FIXED=18, KEY="U17-17,9-16,1-8"
UKEY      INIT      " 18 U1-8 U17-17,9-16,1-8"
.
.Name     Type   Length   Physical   Start   Description
.----     ----   ------   --------   -----   -----------
INVNO     DIM       8         8        1     Invoice no
DADMINO   DIM       8         8        9     Admin no
DTERRFLG  DIM       1         1        17    Tempfile error flag
.
.End of Record                         18
.
.
EXTFILE1  FILE      ASCII,FIXED=256
.
.Name     Type   Length   Physical   Start   Description
.----     ----   ------   --------   -----   -----------
TMPURNO   DIM       8        8         1     UR number
.
. End of Record                        9
.
. ----- Program variables -----
.
CNTRCEFR  FORM      1
CEFFDATE  DIM       8
CLMDESC   DIM       30                      * Claim type description
CLMINDC   DIM       1                       * Claim type indicator
CLMTYPE   DIM       6                       * Claim type
CMDLINE   DIM       80
CURRDATE  DIM       8
.
.
ENDDTE8   DIM       8                       * End date (ccyymmdd)
ENDFYEAR  DIM       8                       * End of financial year
EXTRNUMB  FORM      2
.
FNAMCODE  DIM       6                       * Filename for extract
FNAMEA    DIM       8
FNDCODE   DIM       6                       * Health fund code
FNDDESC   DIM       30                      * Health fund description
.
GRPCODE   DIM       6                       * Health fund group code
GRPDESC   DIM       30                      * Health fund group description
.
IBCNMHOS  FORM      1
.
KEY21A    DIM       21
.
LEAVDATE  DIM       8
.
.                                              1 = Yes
RETNDATE  DIM       8
.
SAVKEY4   FORM      4
SKEY18    DIM       18
STFIYEAR  DIM       8                       * Start of financial year
STRTDTE8  DIM       8                       * Start date (ccyymmdd)
.
TERRFLG   FORM      1                       * Tempfile error flag
.
CFPAYCOD  DIM       3        * 3M Codefinder PAY Code
.
.
.
. PROGRAM CONSTANTS
. -----------------
.
FEXTSION  INIT      ".txt"
TILDA30   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
.
.
PRGID     INIT      "IBAADT33"
PRGNAM    INIT      "NCG File Format Extract"
VERSION   INIT      "V12.00.01"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                                 Main Module                                *
.******************************************************************************
.
ML0000    CALL      INIT0000                * Initialise variables & open files
          CALL      OPEN0000                * create & open the temp file
          CALL      CREAT000                * create temp file for MSG data
.
ML1000    CALL      OPTN0000                * Select Option
          BRANCH    EXIT,ML9000             * exit selected
          BRANCH    COPTION,ML2000:         * by Health Fund Group
                            ML4000          * by Claim Type
.
ML2000    CALL      HFGP0000                * Keyin health fund group
          BRANCH    EXIT,ML1000:            * nothing entered
                         ML1000             * exitchar entered
.
.         A Health Fund Group has been selected OR Spaces (all groups)
.
ML3000    CALL      HFCD0000                * Keyin the health fund
          BRANCH    EXIT,ML2000:            * nothing entered
                         ML1000             * exitchar entered
          GOTO      ML5000
.
.         A Health Fund has been selected OR Spaces (all funds)
.
ML4000    CALL      CLTY0000                * Keyin the claim type
          BRANCH    EXIT,ML1000             * exitchar or spaces entered
.
.         A valid claim code has been entered
.
ML5000    CALL      DATE0000                * Keyin the invoice date range
          BRANCH    EXIT,ML8000
          CALL      KHOS0000
          BRANCH    EXIT,ML1000
.
          CALL      CONTQST                 * Ok to Continue (Y/N/C) ?
          BRANCH    CEXIT,ML6000:           * yes
                          ML5000:           * no
                          ML1000            * cancel
          GOTO      ML1000
.
ML6000    CALL      CLER0000                * clear the tempfile
          CALL      LOAD0000                * Load the tempfile
          CALL      HEAD0000                * Print report header
          CALL      VALD0000                * Validate the tempfile
          CALL      QUES0000                * Extract question
          BRANCH    EXIT,ML7000
.
          CALL      WRIT0000                * Write to the files
ML7000    CALL      TAIL0000                * Print report tail
.
          GOTO      ML1000
.
ML8000    BRANCH    COPTION,ML3000
          GOTO      ML4000
.
ML9000    CALL      KILL0000                * Kill tempfile
          CALL      KILLM000                * Kill tempfile for MSG data
.
ML9999    CHAIN     PGM
+
.******************************************************************************
.*                                  INIT0000              Called by: ML0000   *
.*                       Initialise Variable & Open Files                     *
.******************************************************************************
.
INIT0000  CALL      DISPHEAD                * Display screen heading
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          DISPLAY   *P56:24,"Opening controlf"
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patchcof"
          OPEN      PATCHCO1,"patchcof"
.
          DISPLAY   *P64:24,"patdgwaf"
          OPEN      PATDGWA1,"patdgwaf"
.
          DISPLAY   *P64:24,"patdschf"
          OPEN      PATDSCH1,"patdschf"
.
          DISPLAY   *P64:24,"patdtraf"
          OPEN      PATDTRA1,"patdtraf"
          OPEN      PATDTRA2,"patdtraf"
          OPEN      PATDTRA4,"patdtraf"
.
          DISPLAY   *P64:24,"patecdaf"
          OPEN      PATECDA1,"patecdaf"
          OPEN      PATECDA2,"patecdaf"
.
          DISPLAY   *P64:24,"patecoaf"
          OPEN      PATECOA2,"patecoaf"
.
          DISPLAY   *P64:24,"patfn1af"
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patfx1af"
          OPEN      PATFX1A1,"patfx1af"
.
          DISPLAY   *P64:24,"pathdfaf"
          OPEN      PATHDFA1,"pathdfaf"
.
          DISPLAY   *P64:24,"pathgrpf"
          OPEN      PATHGRP1,"pathgrpf"
.
          DISPLAY   *P64:24,"pati10df"
          CALL      OPICD1
.
          DISPLAY   *P64:24,"pati10of"
          CALL      OPICO1
.
          DISPLAY   *P64:24,"paticuaf"
          OPEN      PATICUA1,"paticuaf"
.
          DISPLAY   *P64:24,"patinvrf"
          OPEN      PATINVR1,"patinvrf"
          OPEN      PATINVR2,"patinvrf"
.
          DISPLAY   *P64:24,"patitemn"
          OPEN      PATITEM1,"patitemn"
.
          DISPLAY   *P64:24,"patlinkf"
          OPEN      PATLINK1,"patlinkf"
.
          DISPLAY   *P64:24,"patma1af"
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmx1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmchgf"
          OPEN      PATMCHG1,"patmchgf"
.
          DISPLAY   *P64:24,"patmi1af"
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A8,"patmi1af"
.
          DISPLAY   *P64:24,"patvadaf"
          OPEN      PATVADA1,"patvadaf"
.
          DISPLAY   *P64:24,"patdadaf"
          OPEN      PATDADA1,"patdadaf"
.
          DISPLAY   *P64:24,"pmsvx1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"pathspaf"
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patmmbsf"
          OPEN      PATMMBS1,"patmmbsf"
          OPEN      PATMMBS2,"patmmbsf"
.
          DISPLAY   *P64:24,"pattranf"
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patwc1af"
          OPEN      PATWC1A1,"patwc1af"
.
          DISPLAY   *P64:24,"patwmabf"
          OPEN      PATWMAB1,"patwmabf"
.
          DISPLAY   *P64:24,"patwvetf"
          OPEN      PATWVET1,"patwvetf"
.
          DISPLAY   *P64:24,"patceraf"           * Certificates files
          OPEN      PATCERA1,"patceraf"
          OPEN      PATCLCA1,"patclcaf"
          OPEN      PMSHCPA1,"pmshcpaf"          * Health Care Provider
.
          READ      CONTROLF,TEN;*79,CAPPRVNO
          READ      CONTROLF,ZERO;*43,IBCNMHOS
..
..   Edited out 6.11 positions
..
..          READ      CONTROLF,TWENTY;*187,PTCNDRSM
..          READ      CONTROLF,SEVENTY7;*174,PTCNDSCI,*220,PTCNEDRG
..          READ      CONTROLF,SEVENTY9;*222,PTCNI10D
.
          READ      CONTROLF,TWENTY;*193,PTCNDCLM
          READ      CONTROLF,TWENTY1;*45,PTCNDRSM
          READ      CONTROLF,SEVENTY7;*195,PTCNDLKR,*220,PTCNEDRG
          READ      CONTROLF,SEVENTY9;*82,PTCNDSCI
          READ      CONTROLF,EIGHTY8;*59,PTCNI10D
          READ      CONTROLF,NINTY8;*165,PTCNAUED
          READ      CONTROLF,HUND10;*242,PTCNMBRL
.
          DISPLAY   *P64:24,"oprdetaf";
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OPRDETA2,"oprdetaf"
          TRAPCLR   IO
          MOVE      OVRCD,OPRFLG            * OPR flag
.
          DISPLAY   *P64:24,"pat3miaf";
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PAT3MIA1,"pat3miaf"
          TRAPCLR   IO
          MOVE      OVRCD,MAPFLG            * Map flag
.
          PACK      CURDTE8,CCC,CYY,CMM,CDD
          REP       " 0",CURDTE8
          CLOCK     TIME,CTIMEIS
          MOVE      ONE,CNEWDS
.
          MOVE      ZERO,FIELD2
          WHILE     FIELD2<>15
            ADD       ONE,FIELD2
            PACK      TMPKEY2[FIELD2],SP30
          DO
.
          MOVE      ZERO,FIELD1            
          WHILE     FIELD1<>18
            ADD      ONE,FIELD1
            MOVE     SP8,TMPKEY1[FIELD1]
          DO
.

          CALL      TFILENAM
          MOVE      TFILNAME,FNAMEA
.
          CALL      TFILENAM
          MOVE      TFILNAME,TEMPMSGF
.
.         Set the extract flag (EXTRFLAG) to identify the calling program
.         as IBAADT33 when NCGSEGMT is called.  This flag is required as
.         IBAADT10 uses PATEDSFD to record EDI sent, while IBAADT33 uses
.         PATINVFD.
.
INIT9000  MOVE      ONE,EXTRFLAG
.
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: ML0000   *
.*                                Select Option                               *
.******************************************************************************
.
OPTN0000  HLINE     *G37,2,50,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = By Health Fund Group Sequence":
                    *P1:6,*V2LON,"2",*HOFF," = By Claim Type Sequence"
.
OPTN1000  KEYIN     *P1:8,"Select Option :":
                    *P17:8,*V2LON,*P17:8,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9100 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN7000:            * HF Group sequence
                            OPTN8000             * Claim Type sequence
.
          BEEP                                   * invalid selection
          GOTO      OPTN1000
.
OPTN7000  DISPLAY   *P50:2,*V2LON,"- By H/F Group "
          GOTO      OPTN9000
.
OPTN8000  DISPLAY   *P50:2,*V2LON,"- By Claim Type "
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9100  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.******************************************************************************
.*                                  HFGP0000              Called by: ML0000   *
.*                         Keyin The Health Fund Group                        *
.* Returns:   EXIT  0 = Valid Health Fund Group or Spaces entered             *
.*                  1 = Nothing Entered                                       *
.*                  2 = Exitchar entered                                      *
.******************************************************************************
.
HFGP0000  MOVE      "21",ECOL
          MOVE      "10",EVERT
          MOVE      SP6,CKYIDEF6
          MOVE      ZERO,CKYIMAND
.
HFGP1000  DISPLAY   *P1:EVERT,"Health Fund Group :",*EF
          CALL      PATHGPKY                * get input for health fund group
          BRANCH    EXIT,HFGP5000:          * spaces entered
                         HFGP9100:          * nothing entered
                         HFGP9200           * exitchar entered
.
.         Valid health Fund Group entered
.
          MOVE      PTHGCODE,GRPCODE
          MOVE      PTHGDESC,GRPDESC
          DISPLAY   *P31:EVERT,*EL,PTHGDESC
.
.         Check to see if this health fund group is part of a health fund
.
          PACK      KEY14,SP20
          CALL      RDSFUND1                * position at start of HF table
HFGP2000  CALL      RDKFUND1                * read next record
          BRANCH    OVRCD,HFGP4000          * eof - finished
.
          MATCH     "0000    ",HFTABL       * HF header record ?
          GOTO      HFGP3000 IF NOT EQUAL   * no - ignore
.
          MATCH     GRPCODE,PTHFHGRP        * matching health fund group ?
          GOTO      HFGP9000 IF EQUAL       * yes
.
HFGP3000  PACK      KEY14,HCODE,TILDA30
          CALL      RDSFUND1                * position for next HF header rec.
          GOTO      HFGP2000                * get next record
.
HFGP4000  DISPLAY   *P1:24,*EL,*B,"No health funds set up for this health ":
                    "fund group.  ";
          CALL      HITENTER
          GOTO      HFGP1000
.
HFGP5000  MOVE      SP6,GRPCODE
          MOVE      SP30,GRPDESC
          DISPLAY   *P31:EVERT,*EL;
.
HFGP9000  MOVE      ZERO,EXIT
          GOTO      HFGP9999
.
HFGP9100  MOVE      ONE,EXIT
          GOTO      HFGP9999
.
HFGP9200  MOVE      TWO,EXIT
.
HFGP9999  RETURN
+
.******************************************************************************
.*                                  HFCD0000              Called by: ML0000   *
.*                            Keyin The Health Fund                           *
.* Returns:  EXIT  0 = Valid Health Fund entered                              *
.*                 1 = Nothing entered                                        *
.*                 2 = Exitchar entered                                       *
.*                 3 = Spaces entered                                         *
.******************************************************************************
.
HFCD0000  MOVE      "21",ECOL
          MOVE      "12",EVERT
          MOVE      SP6,CKYIDEF6
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
.
          DISPLAY   *P1:EVERT,"Health Fund       :",*EF
          CALL      PATFNDKY                * Keyin a health fund
          BRANCH    EXIT,HFCD9100:          * nothing entered
                         HFCD9200:          * exitchar entered
                         HFCD1000           * spaces entered
.
.         Valid Health Fund entered
.
          MOVE      HCODE,FNDCODE
          MOVE      HFNAME,FNDDESC
          MOVE      FNDCODE,FNAMCODE
          DISPLAY   *P31:EVERT,*EL,HFNAME;
          GOTO      HFCD9000
.
HFCD1000  MOVE      SP6,FNDCODE
          MOVE      SP30,FNDDESC
          DISPLAY   *P31:EVERT,*EL
.
HFCD9000  MOVE      ZERO,EXIT
          GOTO      HFCD9999
.
HFCD9100  MOVE      ONE,EXIT
          GOTO      HFCD9999
.
HFCD9200  MOVE      TWO,EXIT
.
HFCD9999  RETURN
+
.******************************************************************************
.*                                  CLTY0000              Called by: ML0000   *
.*                            Keyin The Claim Type                            *
.* Returns:  EXIT   0 = Valid claim code entered                              *
.*                  1 = exitchar or spaces entered                            *
.*           CLMTYPE  = claim code (Cat CL)                                   *
.*           FNAMCODE = claim code (Cat CL)                                   *
.*           CLMDESC  = claim code description                                *
.*           CLMINDC  = compensable claim indicator (blank, V, W or M)        *
.******************************************************************************
.
CLTY0000  MOVE      "21",ECOL
          MOVE      "10",EVERT
          MOVE      "CL",CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
          MOVE      SP3,CLMTYPE
.
          DISPLAY   *P1:EVERT,"Claim Type        :",*EF
          CALL      PATCODKY                * Keyin a codes file code
          BRANCH    EXIT,CLTY9500:          * spaces entered
                         CLTY9500           * exitchar entered
.
.         Valid claim code entered
.
          MOVE      ACODE,CLMTYPE
          MOVE      CLMTYPE,FNAMCODE
          MOVE      TDESC,CLMDESC
          DISPLAY   *P31:EVERT,*EL,TDESC
.
          MOVE      SP1,CLMINDC             * initialise claim indicator
.
.         Check each indicator (1-5) of the claim code to see of it is a
.         compensable claim
.
          MOVE      ONE,FORM1               * intialise counter
CLTY1000  COMPARE   FORM1,FIVE              * last indicator checked ?
          GOTO      CLTY9000 IF LESS        * yes - finished
.
          LOAD      KEY1,FORM1,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
.
          MATCH     ANSM,KEY1               * TAC claim indicator set ?
          IF        @EQUAL
            MOVE      ANSM,CLMINDC          * yes
            GOTO      CLTY9000
          ENDIF
.
          MATCH     ANSV,KEY1               * DVA claim indicator set ?
          IF        @EQUAL
            MOVE      ANSV,CLMINDC          * yes
            GOTO      CLTY9000
          ENDIF
.
          MATCH     ANSW,KEY1               * Workers Comp. indicator set ?
          IF        @EQUAL
            MOVE      ANSW,CLMINDC          * yes
            GOTO      CLTY9000
          ENDIF
.
          ADD       ONE,FORM1               * increment counter
          GOTO      CLTY1000                * check next indicator
.
CLTY9000  MOVE      ZERO,EXIT
          GOTO      CLTY9999
.
CLTY9500  MOVE      ONE,EXIT
.
CLTY9999  RETURN
+
.******************************************************************************
.*                                  DATE0000              Called by: ML0000   *
.*                        Keyin The Invoice Date Range                        *
.* Returns: STRTDTE8 = starting date (ccyymmdd)                               *
.*           ENDDTE8 = ending date (ccyymmdd)                                 *
.******************************************************************************
.
DATE0000  MOVE      "21",CCOL
          LOAD      CVERT,COPTION,TEN4,TEN2
          DISPLAY   *P1:CVERT,*EF,"Starting Date     : "
          ADD       ONE,CVERT
          DISPLAY   *P1:CVERT,"Ending Date       : "
.
          MOVE      ONE,CCANLDTE            * Blank cancel default
          MOVE      ZERO,CHIGHLT            * Use highlight
.
.         Enter starting date
.
DATE1000  SUB       ONE,CVERT               * set keyin row
DATE2000  MOVE      CCC,CCENT               * clear date
          UNPACK    SP6,CYEAR,CMON,CDAY
          CALL      KEYDATE                 * Keyin date
          BRANCH    OVRCD,DATE9500          * nothing entered
          BRANCH    CQUEST,DATE2000         * "?" entered
.
          PACK      STRTDTE8,CCENT,CYEAR,CMON,CDAY
          REP       " 0",STRTDTE8
.
.         Check start date is not in the future
.
          MATCH     STRTDTE8,CURDTE8
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"Start date must not be after the current ":
                      "date.  ";
            CALL      HITENTER
            GOTO      DATE2000
          ENDIF
.
.         Enter ending date
.
          ADD       ONE,CVERT                        * increment input line
DATE3000  UNPACK    STRTDTE8,CCENT,CYEAR,CMON,CDAY   * default start date
          CALL      KEYDATE                          * Keyin date
          BRANCH    OVRCD,DATE1000                   * nothing entered
          BRANCH    CQUEST,DATE3000                  * "?" entered
.
          PACK      ENDDTE8,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ENDDTE8
.
.         Check end date is not in the future
.
          MATCH     ENDDTE8,CURDTE8
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"End date must not be after the current ":
                      "date.  ";
            CALL      HITENTER
            GOTO      DATE3000
          ENDIF
.
.         Check start date is not after end date
.
DATE5000  MATCH     STRTDTE8,ENDDTE8
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"End date must be after the start date.  ";
            CALL      HITENTER
            GOTO      DATE3000
          ENDIF
.
.         Check that both dates are in the same financial year
.
          MOVE      STRTDTE8,KEY4
          PACK      STFIYEAR,KEY4,ZERO,SEVEN,ZERO,ONE
          MOVE      KEY4,SAVKEY4
.
          MATCH     STFIYEAR,STRTDTE8
          IF        @LESS
            PACK      ENDFYEAR,KEY4,ZERO,SIX,THREE,ZERO
            SUBTRACT  ONE,SAVKEY4
            PACK      STFIYEAR,SAVKEY4,ZERO,SEVEN,ZERO,ONE
          ELSE
            ADD       ONE,SAVKEY4
            PACK      ENDFYEAR,SAVKEY4,ZERO,SIX,THREE,ZERO
          ENDIF
.
          MATCH     ENDDTE8,ENDFYEAR
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"Both dates must be from the same ":
                      "financial year.  ";
            CALL    HITENTER
            GOTO    DATE0000
          ENDIF
.
DATE9000  MOVE      ZERO,EXIT
          GOTO      DATE9999
.
DATE9500  MOVE      ONE,EXIT
.
DATE9999  RETURN
+
.******************************************************************************
.*                                  OPEN0000              Called by: ML0000   *
.*                   Create and Open The Tempfile                             *
.******************************************************************************
.
OPEN0000  CALL      KILL0000                     * erase the tempfile
.
          CLEAR     KEY99
          APPEND    "isbuild ",KEY99
          APPEND    FNAMEA,KEY99
          APPEND    UKEY,KEY99
          RESET     KEY99
          EXECUTE   KEY99,TASKID
.
          OPEN      TEMPFIL1,FNAMEA
          OPEN      TEMPFIL2,FNAMEA
.
OPEN9999  RETURN
+
.******************************************************************************
.*                                  KILL0000              Called by: ML0000   *
.*                             Delete The Tempfile                 & OPEN0000 *
.******************************************************************************
.
KILL0000  CLOSE     TEMPFIL1 
          CLOSE     TEMPFIL2
.         
          CLEAR     KEY99
          APPEND    "iserase ",KEY99
          APPEND    FNAMEA,KEY99
          RESET     KEY99
          EXECUTE   KEY99,TASKID
.
KILL9999  RETURN
+
.******************************************************************************
.*                                  LOAD0000              Called by: ML0000   *
.*                              Load The Tempfile                             *
.******************************************************************************
.
LOAD0000  MOVE      ZERO,REDCT
          MOVE      ZERO,WRTCT
          DISPLAY   *P1:24,*EL,"Scanning : ",*P35:24,"Loading : ";
.         
          PACK      KEY16,STRTDTE8,SP20     
          CALL      RDSINV2                      * position on start date
LOAD1000  CALL      RDKINV2                      * read next record
          BRANCH    OVRCD,LOAD9999               * eof - finished
.         
          MATCH     PINVDTE,ENDDTE8              * invoice date > end date
          GOTO      LOAD9999 IF LESS             * yes - finished
.         
          ADD       ONE,REDCT
          IF        REDCT%20=1
            DISPLAY   *P12:24,*V2LON,PINVNO,SP2,PINVADM;
          ENDIF
.         
          COMPARE   THREE,PINVSYS                * inpatient ?
          GOTO      LOAD1000 IF NOT EQUAL        * yes
.
.                                                                     *I-146742
          MATCH     "1",PTINCRST                 * is invoice "fully credited"?
          GOTO      LOAD1000 IF EQUAL            * yes, ignore invoice
.
          COMPARE   TWO,PINVTYP                  * Patient Portion Inv *I-65745
          GOTO      LOAD1000 IF NOT LESS                               *I-65745
.
..          COMPARE   ZERO,PTINEDSF                * EDI status "not sent" ?
..          GOTO      LOAD1000 IF NOT EQUAL        * no - ignore record
.
.                                                * calc. total hospital charge
          ASSIGN    PINVAMT+PINVJOUR+PTINCRTT,FORM8P2                 *C-146742
          COMPARE   ZERO,FORM8P2                 * zero charge ?
          GOTO      LOAD1000 IF EQUAL            * yes - ignore
.
          MOVE      PINVNO,INVNO
          MOVE      PINVADM,ADMINO
          PACK      KEY8,PINVADM
          CALL      RDMISS1                      * admission record found ?
          BRANCH    OVRCD,LOAD1000               * no - ignore
.
          COMPARE   ONE,ASTAT                    * status "pre-admitted" ?
          GOTO      LOAD1000 IF EQUAL            * yes - ignore
.
          COMPARE   FIVE,ASTAT                   * status "cancelled" ?
          GOTO      LOAD1000 IF EQUAL            * yes - ignore
.
          IF        IBCNMHOS<>1
            GOTO      LOAD1500                   * not multi hospital
          ENDIF
.
.                                                * get hospital code from Visit
          PACK      KEY8,AADMNO,SP70
          CALL      RDPMVX11
          BRANCH    OVRCD,LOAD1500
         
          MATCH     PMVXMHOS,PTHSHOSP
          GOTO      LOAD1000 IF NOT EQUAL
.
LOAD1500  BRANCH    COPTION,LOAD2000             * By health fund group
.
.         Extracting by Claim type sequence
.
          PACK      KEY5,ANSC,ANSL,ACLAIM
          CALL      RDCODE1                      * claim code found ?
          BRANCH    OVRCD,LOAD1000               * no - ignore
.
          MATCH     CLMTYPE,ACLAIM               * valid claim code ?
          GOTO      LOAD1000 IF NOT EQUAL        * no - ignore
          GOTO      LOAD4000
.
.         Extracting by health fund group sequence
.
LOAD2000  MATCH     SP6,AFUNDH                   * health fund blank ?
          GOTO      LOAD1000 IF EQUAL            * yes - ignore
.
          PACK      KEY14,AFUNDH,ZERO4,SP20
          CALL      RDFUND1                      * health fund on file ?
          BRANCH    OVRCD,LOAD1000               * no - ignore
.
          MATCH     SP6,FNDCODE                  * extracting all health funds ?
          GOTO      LOAD3000 IF EQUAL            * yes
.
          MATCH     FNDCODE,HCODE                * no - valid health fund ?
          GOTO      LOAD1000 IF NOT EQUAL        * no - ignore
.
LOAD3000  MATCH     SP6,PTHFHGRP                 * health fund group blank ?
          GOTO      LOAD1000 IF EQUAL            * yes - ignore
.
          PACK      KEY6,PTHFHGRP
          CALL      RDPAHGP1                     * Health fund group found ?
          BRANCH    OVRCD,LOAD1000               * no - ignore
.
.                                                * bypass if HF Group is "all"
          MATCH     SP6,GRPCODE                                       *I-146742
          GOTO      LOAD4000 IF EQUAL                                 *I-146742
.
          MATCH     GRPCODE,PTHGCODE             * valid health fund group ?
          GOTO      LOAD1000 IF NOT EQUAL        * no - ignore
.
LOAD4000  MOVE      ZERO,TERRFLG                 * initialsie error flag to "no"
          PACK      KEY8,INVNO
          CALL      RATEMP1                      * invoice already on temp file?
          IF        OVRCD = 1
            CALL      WRTEMP1                    * no - write new record
            ADD       ONE,WRTCT
            IF        WRTCT%20=1
              DISPLAY   *P45:24,*V2LON,PINVNO,SP2,PINVADM;
            ENDIF
          ENDIF
          GOTO      LOAD1000                     * get next invoice record
.
LOAD9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: ML0000   *
.*                             Print Report Header                            *
.******************************************************************************
.
HEAD0000  CALL      HEAD80                  * Print 80 column header
          CALL      UND80
.
          PRINT     *1,"| Inv No | Adm No | Error",*80,"|"
.
          CALL      UND80
          ADD       "7",CLNO
.
HEAD9999  RETURN
+
.******************************************************************************
.*                                  VALD0000              Called by: ML0000   *
.*                            Validate The Tempfile                           *
.******************************************************************************
.
VALD0000  MOVE      ONE,VALDFLG             * Validation flag - yes error check
.
          MOVE      ZERO,REDCT
          MOVE      ZERO,ERRCT
          MOVE      ZERO,WARCT
          MOVE      ZEROVISN,SAVADMIN           * Clear the save admin no
          MOVE      SP8,SAVINVNO            * Clear the save invoice no
          MOVE      SP8,SAVINVN2            * Clear the save invoice no 2
          MOVE      ZERO,TOTAMTCT           * Clear the total amount counter
          MOVE      ZERO,TOTRECCT           * Clear the total record counter
          MOVE      ZERO,WRTCT
          DISPLAY   *P1:24,*EL,"Validating : ";
.
          PACK      KEY17,SP20
          CALL      RSTEMP2                 * Position on & read a tempfile
          CALL      RKTEMP2                   record
          BRANCH    OVRCD,VALD9999
.
          CALL      WRHDR000                * Write header details
          CALL      WRPRO000                * Write provider details
          CALL      WRINS000                * Write insurer details
          CALL      WRDPS000                * Write encryption data
.
          PACK      KEY17,SP20
          CALL      RSTEMP2                 * Position on & read a tempfile
VALD1000  CALL      RKTEMP2                   record
          BRANCH    OVRCD,VALD8000
.
          COMPARE   ONE,TERRFLG
          GOTO      VALD8000 IF EQUAL       * Error record found, finished
.
          ADD       ONE,REDCT
          IF        REDCT%10=1
            DISPLAY   *P14:24,*V2LON,INVNO,SP2,ADMINO;
          ENDIF
.
          PACK      KEY8,INVNO
          CALL      RDTEMP1                 * Read a tempfile record
          IF        OVRCD=1
            MOVE      "Missing tempfile file record",ERRMSG
            CALL      ERMSG000              * Print an error message
          ENDIF
          MOVE      TERRFLG,ERRFLG
.
          PACK      KEY8,INVNO
          CALL      RDINV1                  * Read an invoice file record
          IF        OVRCD=1
            MOVE      "Missing invoice file record",ERRMSG
            CALL      ERMSG000              * Print an error message
          ENDIF
.
          MATCH     SAVADMIN,ADMINO
          GOTO      VALD2000 IF EQUAL       * Same admin no, dont get details
.
          PACK      KEY8,ADMINO
          CALL      RDMISS1                 * Read an admin file record
          IF        OVRCD=1
            MOVE      "Missing admission file record",ERRMSG
            CALL      ERMSG000              * Print an error message
          ENDIF
.
          CALL      CLPATDSC                * Clear disch file variables
          IF        ASTAT=3
            PACK      KEY8,ADMINO
            CALL      RDDSCH1               * Read a disch file record
            IF        OVRCD=1
              MOVE      "Missing discharge file record",ERRMSG
              CALL      ERMSG000            * Print an error message
            ENDIF
          ENDIF
.
          PACK      KEY8,PINVUR
          CALL      RDMAST1                 * Read a master file record
          IF        OVRCD=1
            MOVE      "Missing master file record",ERRMSG
            CALL      ERMSG000              * Print an error message
          ENDIF
.
          MOVE      ADATE,INVFRDTE          * Invoice from date
          MOVE      ZERO,INVRECCT           * Clear the invoice record counter
          MOVE      ADMINO,SAVADMIN         * Save the admin no
.
VALD2000  MOVE      PINVDTE,INVTODTE        * Default to date to invoice date
          MATCH     SP8,DDATE
          GOTO      VALD3000 IF EQUAL       * Patient not discharged
.
          MATCH     DDATE,PINVDTE
          GOTO      VALD3000 IF LESS        * Invoice date < disch date
.
          MOVE      DDATE,INVTODTE          * Default to date to disch date
.
VALD3000  MOVE      ZERO,INVAMTCT           * Clear the invoice amount counter
          ADD       ONE,INVRECCT            * Increm the invoice record counter
          ADD       ONE,TOTRECCT            * Increment the total record counter
.
          MOVE      ZERO4,NOINVDYS          * No of invoice days
.
          CALL      WRCID000                * Write claim id details
          CALL      WRPAT000                * Write patient details
          CALL      WREPD000                * Write episode details
          CALL      WRSVB000                * Write bungle/single value details
          CALL      WRANB000                * Write newborn baby details
          CALL      WRTFR000                * Write transfer details
          CALL      WRACS000                * Write accom summary details
          CALL      WRACD000                * Write accom details
          CALL      WRCCG000                * Write critical care details
          CALL      WRPSG000                * Write principal services details
          CALL      WRTRG000                * Write transport group details
          CALL      WRMIG000                * Write misc services details
          CALL      WRDMG000                * Write DRG morbidity details
          CALL      WRMOR000                * Write non-drg morbidity details
          CALL      WRCER000                * Write certificate details
          CALL      WRMED000                * Write medical services details
          CALL      WRREM000                * Write remarks details
.
          ADD       INVAMTCT,TOTAMTCT       * Increment the total amount counter
          MOVE      INVTODTE,INVFRDTE       * Invoice from date
.
          MOVE      ERRFLG,TERRFLG
          COMPARE   ONE,TERRFLG
          CALL      UPTEMP1 IF EQUAL        * Error found, update tempfile
          GOTO      VALD1000
.
VALD8000  CALL      WRTLR000                * Write trailer details
.
VALD9999  RETURN
+
.******************************************************************************
.*                                  QUES0000              Called by: ML0000   *
.*                              Extract Question                              *
.******************************************************************************
.
QUES0000  DISPLAY   *P1:20,*EF,"Total Records Read     : ",*V2LON,REDCT,*HOFF:
                    *P1:21,"Total Number of Errors : ",*V2LON,ERRCT,*HOFF:
                    *P1:22,"Total Number Warnings  : ",*V2LON,WARCT,*HOFF;
.
          COMPARE   ZERO,REDCT
          GOTO      QUES1000 IF NOT EQUAL   * No data found
.
          DISPLAY   *P1:24,*EL,*B,"No data found. Extract not created.  ";
          PRINT     *N,*1,"No data found. Extract not created.  ";
          CALL      HITENTER
          GOTO      QUES9100
.
QUES1000  IF        ERRCT<>0
            DISPLAY   *P1:24,*EL,*B,"Errors found.  ";
          ENDIF
          DISPLAY   *P16:24,*EL,"Create extract file (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
.
QUES2000  KEYIN     *P45:24,*V2LON,ANS;
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS
          GOTO      QUES9000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      QUES9100 IF EQUAL
.
          BEEP
          GOTO      QUES2000
.
QUES9000  MOVE      ZERO,EXIT
          GOTO      QUES9999
.
QUES9100  MOVE      ONE,EXIT
.
QUES9999  RETURN
+
.******************************************************************************
.*                                  WRIT0000              Called by: ML0000   *
.*                             Write To The Files                             *
.******************************************************************************
.
WRIT0000  MOVE      ZERO,VALDFLG            * Validation flag - no writing
.
          KEYIN     *P1:17,*EL,"Extract Number  :":
                    *P19:17,*V2LON,EXTRNUMB
.
          STRIP     PTCNAUED
          PACK      EXTFNAME,PTCNAUED,FNAMCODE,EXTRNUMB,FEXTSION
          REP       " 0",EXTFNAME
          PREP      EXTFILE1,EXTFNAME
.
          MOVE      ZEROVISN,SAVADMIN           * Clear the save admin no
          MOVE      ZERO,TOTAMTCT           * Clear the total amount counter
          MOVE      ZERO,TOTRECCT           * Clear the total record counter
          MOVE      ZERO,WRTCT
          DISPLAY   *P1:24,*EL,"Writing : ";
.
          CALL      WRHDR000                * Write header details
          CALL      WRPRO000                * Write provider details
          CALL      WRINS000                * Write insurer details
          CALL      WRDPS000                * Write encryption data
.
          PACK      KEY17,ZERO,SP20
          CALL      RSTEMP2                 * Position on & read a tempfile
WRIT1000  CALL      RKTEMP2                   record
          BRANCH    OVRCD,WRIT8000
.
          COMPARE   ONE,TERRFLG
          GOTO      WRIT8000 IF EQUAL       * Error record found, finished
.
          ADD       ONE,WRTCT
          IF        WRTCT%10=1
            DISPLAY   *P11:24,*V2LON,INVNO,SP2,ADMINO;
          ENDIF
.
          PACK      KEY8,INVNO
          CALL      RDINV1                  * Read an invoice file record
          BRANCH    OVRCD,WRIT1000
.
          MATCH     SAVADMIN,ADMINO
          GOTO      WRIT2000 IF EQUAL       * Same admin no, dont get details
.
          PACK      KEY8,ADMINO
          CALL      RDMISS1                 * Read an admin file record
          BRANCH    OVRCD,WRIT1000
.
          CALL      CLPATDSC                * Clear disch file variables
          IF        ASTAT=3
            PACK      KEY8,ADMINO
            CALL      RDDSCH1               * Read a disch file record
            BRANCH    OVRCD,WRIT1000
          ENDIF
.
          PACK      KEY8,PINVUR
          CALL      RDMAST1                 * Read a master file record
          BRANCH    OVRCD,WRIT1000
.
          MOVE      ADATE,INVFRDTE          * Invoice from date
          MOVE      ZERO,INVRECCT           * Clear the invoice record counter
          MOVE      ADMINO,SAVADMIN         * Save the admin no
.
WRIT2000  MOVE      PINVDTE,INVTODTE        * Default to date to invoice date
          MATCH     SP8,DDATE
          GOTO      WRIT3000 IF EQUAL       * Patient not discharged
.
          MATCH     DDATE,PINVDTE
          GOTO      WRIT3000 IF LESS        * Invoice date < disch date
.
          MOVE      DDATE,INVTODTE          * Default to date to disch date
.
WRIT3000  MOVE      ZERO,INVAMTCT           * Clear the invoice amount counter
          ADD       ONE,INVRECCT            * Increm the invoice record counter
          ADD       ONE,TOTRECCT            * Increment the total record counter
.
          MOVE      INVFRDTE,FROMDATE
          MOVE      INVTODTE,TODATE
          MOVE      ONE,NHOSDAYC            * set sameday to return LOS = 1
          CALL      NHOSPDAY                * Calculate no of days in hospital
          MOVE      NBRDAYS,NOINVDYS
          REP       " 0",NOINVDYS           * No of invoice days
.
          CALL      WRCID000                * Write claim id details
          CALL      WRPAT000                * Write patient details
          CALL      WREPD000                * Write episode details
          CALL      WRSVB000                * Write bungle/single value details
          CALL      WRANB000                * Write newborn baby details
          CALL      WRTFR000                * Write transfer details
          CALL      WRACS000                * Write accom summary details
          CALL      WRACD000                * Write accom details
          CALL      WRCCG000                * Write critical care details
          CALL      WRPSG000                * Write principal services details
          CALL      WRTRG000                * Write transport group details
          CALL      WRMIG000                * Write misc services details
          CALL      WRDMG000                * Write DRG morbidity details
          CALL      WRMOR000                * Write non-drg morbidity details
          CALL      WRCER000                * Write certificate details
          CALL      WRMED000                * Write medical services details
          CALL      WRREM000                * Write remarks details
.
          ADD       INVAMTCT,TOTAMTCT       * Increment the total amount counter
          MOVE      INVTODTE,INVFRDTE       * Invoice from date
.
          GOTO      WRIT1000
.
WRIT8000  CALL      WRTLR000                * Write trailer details
.
          DISPLAY   *P1:18,*EF,"Total records read      : ",*V2LON,REDCT,*HOFF:
                    *P1:19,"Total records extracted : ",*V2LON,WRTCT,*HOFF:
                    *P1:21,"Extract filename is : ",*P1:22,*V2LON,*+,EXTFNAME:
                    *-:
                    *P1:24,*HOFF,*B,"Extract finished.  ";
          CALL      HITENTER
.
WRIT9999  RETURN
+
.******************************************************************************
.*                                  TAIL0000              Called by: ML0000   *
.*                              Print Report Tail                             *
.******************************************************************************
.
TAIL0000  CALL      UND80
          PRINT     *N,*1,"Total Records Read      : ",REDCT:
                    *N,*1,"Total Number of Errors  : ",ERRCT:
                    *N,*1,"Total Number of Warnings: ",WARCT:
                    *N,*N,*1,"Total Records Extracted : ",WRTCT
.
          IF        REDCT =0|VALDFLG = 1
            PRINT     *N,*1,"No Extract file created"
          ELSE
            PRINT     *N,*1,"Extract filename is : ",*+,EXTFNAME,*-
          ENDIF
.
          PRINT     *N,*N,"*** End of Report ***"
.
TAIL9999  RETURN
+
.*************************************************************************
.*                             CLER0000            Called by:            *
.*               close and erase the temporary file                      *
.*************************************************************************
.
CLER0000  PACK      KEY8,SP8
          CALL      RSTEMP1
          CALL      RKTEMP1
          BRANCH    OVRCD,CLER9999
.
          PACK      KEY8,TMPURNO
          CALL      DETEMP1
.
	  GOTO      CLER0000
.
CLER9999  RETURN
+
.*****************************************************************************
.
PBAT0000  RETURN                                 * not required by ADT33
+
.******************************************************************************
.*                                  KHOS0000              Called by: ML0000   *
.*                            Enter The Date Ranges                           *
.******************************************************************************
KHOS0000  COMPARE   ONE,IBCNMHOS
          GOTO      KHOS9999 IF NOT EQUAL
.
          ADD       TWO,CVERT
          DISPLAY   *P1:CVERT,*EL,"Hospital Id : ";
          MOVE      TEN5,ECOL
          MOVE      CVERT,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND           * Not Mandatory
.
          OPEN      PATHSPA1,"pathspaf"
          CALL      PATHSPKY
          BRANCH    EXIT,KHOS3000,KHOS9500
.
KHOS2000  DISPLAY   *P20:CVERT,*V2LON,PTHSNAME;
          GOTO      KHOS9999
.
KHOS3000  DISPLAY   *P1:24,"Hospital Code not entered for Multi Hospital ":
                           "environment ",*W1;
          PRINT     *1,"Hospital Code not entered for Multi Hospital ":
                       "environment"
          MOVE      SP20,PTHSNAME                                     *I-125462
          MOVE      SP10,PTHSHOSP
.
KHOS9500  MOVE      ONE,EXIT
KHOS9999  RETURN
+
.==============================================================================
.                Tempfile I/O
.==============================================================================
.
RATEMP1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      TEMPFIL1,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      TEMPFIL1,KEY8;;
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    TEMPFIL1;INVNO,DADMINO,DTERRFLG
          GOTO      OVERCOND IF OVER
          MOVE      DADMINO,ADMINO
          MOVE      DTERRFLG,TERRFLG
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY8 
          READ      TEMPFIL1,KEY8;INVNO,DADMINO,DTERRFLG
          GOTO      OVERCOND IF OVER
          MOVE      DADMINO,ADMINO
          MOVE      DTERRFLG,TERRFLG
          RETURN
.
UPTEMP1   MOVE      ADMINO,DADMINO
          MOVE      TERRFLG,DTERRFLG
          UPDATE    TEMPFIL1;INVNO,DADMINO,DTERRFLG
          RETURN
.
WRTEMP1   RESET     KEY8
          MOVE      ADMINO,DADMINO
          MOVE      TERRFLG,DTERRFLG
          WRITE     TEMPFIL1,KEY8;INVNO,DADMINO,DTERRFLG
          RETURN
.
DETEMP1   RESET     KEY8
          DELETE    TEMPFIL1,KEY8
          RETURN
.
RSTEMP2   MOVE      ZERO,OVRCD
          RESET     KEY17
          READ      TEMPFIL2,KEY17;;
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    TEMPFIL2;INVNO,DADMINO,DTERRFLG
          GOTO      OVERCOND IF OVER
          MOVE      DADMINO,ADMINO
          MOVE      DTERRFLG,TERRFLG
          RETURN
.
RPTEMP2   MOVE      ZERO,OVRCD
          READKP    TEMPFIL2;INVNO,DADMINO,DTERRFLG
          GOTO      OVERCOND IF OVER
          MOVE      DADMINO,ADMINO
          MOVE      DTERRFLG,TERRFLG
          RETURN
+
.==============================================================================
.
          INC       STD001IO
.
          INC       CALCAGE                 * Calculate patients age
          INC       CALCDAYS                * Calculate diff between 2 dates
          INC       CLPATDSC                * Clear the disch variables
          INC       GETDRG                  * Get DRG & MDC codes
          INC       NCGSEGMT                * formats NCG segments
          INC       NHOSPDAY                * Calculate no of days in hospital
          INC       PATCODKY                * Keyin a codes file code
          INC       PATDEFCL                * routine DCLM0000
          INC       PATFNDKY                * Keyin a health fund
          INC       PATGILOS                * Get intended LOS
          INC       PATHGPKY                * Keyin a health fund group
          INC       PATHSPKY                * Keyin a hospital code
          INC       PATM10T9                * Map ICD10 to ICD9 codes
          INC       PATMCHRD                * Miscellaneous Charges read routine
          INC       VALCMXFN
          INC       VALCONTR
          INC       GETCNEFF
          INC       TFILENAM 
          INC       GETEFDRG
          INC       PATITMRD
.
          INC       OPRDEAIO/INC            * Operation detail file
          INC       PAT3MIIO/INC            * ICD9 mapping file
          INC       PATCERIO/INC            * certificates
          INC       PATCLCIO/INC            * certificate line comments
          INC       PATCFAIO/INC
          INC       PMSHCPIO/INC            * Health Care Provider
          INC       PATCMPIO/INC            * Complex mapping file
          INC       PATCODIO/INC            * Codes file
          INC       PATCHCIO/INC            * Code changes file
          INC       PATCMXIO/INC            * Casemix Funding file
          INC       PMSCIDIO/INC
          INC       PATDSCIO/INC            * Disch file
          INC       PATDTRIO/INC            * DTR file
          INC       PATDGWIO/INC            * DTR file
          INC       PATECDIO/INC            * Patient episode disease file
          INC       PATECOIO/INC            * Patient episode operation file
          INC       PATEDSIO/INC
          INC       PATFN1IO/INC            * Health fund file
          INC       PATFX1IO/INC            * Health fund extention
          INC       PATHDFIO/INC
          INC       PATHGPIO/INC            * Health fund group file
          INC       PATICDIO/INC            * ICD disease file
          INC       PATICOIO/INC            * ICD operation file
          INC       PATICUIO/INC            * ICU file
          INC       PATINVIO/INC            * Invoice file
          INC       PATITMIO/INC            * Item file
          INC       PATLINIO/INC            * U/R Link file
          INC       PATMA1IO/INC            * Master file
          INC       PATMCHIO/INC            * Miscellaneous charges file
          INC       PATMI1IO/INC            * Admin file
          INC       PMSVX1IO/INC            * Visit ext file
          INC       PATHSPIO/INC            * Hospital file
          INC       PATMMBIO/INC            * Patient MBS file
          INC       PATPGRIO/INC            * Patient grouper file
          INC       PATTRNIO/INC            * Transfer file
          INC       PATVADIO/INC            * Transfer source file
          INC       PATDADIO/INC            * Patient transfer destination file
          INC       PATWC1IO/INC            * WCO file
          INC       PATWMAIO/INC            * TAC file
          INC       PATWVEIO/INC            * DVA file
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
          INC       PMSEDGIO/INC       * Effective DRG Dates
+
