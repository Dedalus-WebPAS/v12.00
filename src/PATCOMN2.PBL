. *****************************************************************************
. *                                                                           *
. * Include Name :  PATCOMN2.PBL                                              *
. *                                                                           *
. * Function     :  Subroutine Include for                                    *
. *                 Patient standard library                                  *
. *                                                                           *
. * Subroutines  :  GNXTUR   : Generate the next U/R                          *
. *                 UPDSUR   : Update Surname/Given names                     *
. *                 WRTUR    : Write a new U/R record                         *
. *                 VALDUR   : Validate a U/R number                          *
. *                                                                           *
. * Procedures   :  VALDHK   : Validate a Hong Kong Id Number                 *
. *                                                                           *
. * Files needed :  IBACOMM.INC    IBA Special Variables                      *
. *                 PATCOMM.INC    Special Variables                          *
. *                 PATAM1FD.INC   Master Audit File                          *
. *                 PATCONFD.INC   Patient Control File                       *
. *                 PATINVFD.INC   Invoice File                               *
. *                 PATLOCFD.INC   Inpatient Location File                    *
. *                 PATMA1FD.INC   Master File                                *
. *                 PATGSRFD.INC   Surname/Given name Index File              *
. * (del V.10.B01)  PATSURFD.INC   Surname Index File                         *
. *                 PATURAFD.INC   U/R Changes Audit File                     *
. *                 PATVISFD.INC   Visit File                                 *
. *                 BOKRC1FD.INC   Bookings File                              *
. *                                                                           *
. * Modifications:                                                            * 
. *       V12.00.01 22/05/2025  J.Tan          TSK 0955096                    *
. *                 Added Alphanumeric visit number changes                   *
. *       V11.04.03 15/10/2024 Alina Bhari        TSK 0938763                 *
. *                 Fixed the issue with reoccuring loop with the new NHI     *
. *                 number formate - NZURCS00                                 *
. *       V11.04.02 03/10/2024 Alina Bhari        TSK 0938763                 *
. *                 Applied new NHI Number format (AAANNAX) -VALDUR25,NZURCS20*
. *       V11.04.01 30/09/2024 Alina Bhari        TSK 0938763                 *
. *                 Applied new NHI Number format (AAANNAX)                   *
. *                 - NZURCS00                                                *
. *       V11.03.01 31/01/2023 Ebon Clements      TSK 0924381                 *
. *                 Changed UPDSUR20 loop through all patient location        *
. *                 records to use a save key and reposition                  *
. *                 to prevent infinite loop if multiple records exist        *
. *       V11.02.02 18/07/2022  Jacob Jackson     TSK 0922155                 *
. *                 Add check to ensure WRURAD1 call doesn't create duplicate *
. *       V11.02.01 20/04/2022  Ebon Clements     TSK 091659                  *
. *                 Corrected UPDSUR20 loop through all patient location      *
. *                 records. Skip record if admission (KEY8) already updated. *
. *                 40 character names could cause an infinite loop           *
. *       V10.01.05 20/07/2012  Patrick Adair     CAR 269159                  *
. *                 Corrected UPDSUR to loop through all patient location     *
. *                 records for a change in surname/given name.               *
. *       V10.03.04 18/07/2012  Steve Armstrong  CAR 268870                   *
. *                 Removed check for "WEB" programs in UPDSUR.               *
. *                 Removed checks for ECSRVPMI (as this no longer exists).   *
. *                 Added setting of CSALIAS for HL7MONET.                    *
. *                 Removed manual keyin for saving alias.                    *
. *       V10.03.03 09/07/2012  Steve Armstrong  CAR 267675                   *
. *                 Changes to UPDSUR.                                        *
. *                 - Mods to set KEY88 correctly prior to read on patlocaf   *
. *                   (given that GSRSNAM is only 30 bytes).                  *
. *       V10.03.02 19/04/2012  Jill Parkinson CAR 263850                     *
. *                 Added lock and unlock of sector 19                        *
. *       V10.03.01 14/02/2012  Steve Armstrong   CAR 253910                  *
. *                 Mods to set alias update to auto (CSALIAS) for HL7RECVR.  *
. *****************************************************************************
. *       V10.02.05 21/08/2011  Jill Parkinson    CAR 248821                  *
. *                 Added check for dob and sex at UPDSUR32                   *
. *       V10.02.04 21/07/2011  Jill Parkinson    CAR 240721                  *
. *                 Removed call to WAMD000 in VALDUR   (assuming the EMPI    * . *                 Service will return a valid UR)                           *
. *       V10.02.03 13/07/2011  Steve Armstrong   CAR 240722                  *
. *                 Further mods to cater for second given name as            *
. *                 part of PATGSRFD keys                                     *
. *       V10.02.02 22/06/2011  Steve Armstrong   CAR 240722                  *
. *                 Mods to cater for changes to PMSCURFD:                    *
. *                      - PMCUSURN & PMCUGNAM extended to 40 chars.          *
. *                      - PMCUGNM2 added.                                    *
. *                 Mods to cater for changes to PATGSRFD:                    *
. *                      - GSRSNAM & GSRGNAM extended to 30 chars.            *
. *                      - PTGSGNM2 added.                                    *
. *                      - all indexes changed in length.                     *
. *       V10.02.01 20/04/2011  Jill Parkinson    CAR 240721                  *
. *                 Added WAMD0000 - WA Modulus 11 ur format CNNNNNNN         *
. *****************************************************************************
. *       V10.00.01 19/03/2010  Steve Armstrong   CAR 135505                  *
. *                 Added HL7TRGID & HL7INCLD setting for all broadcast       *
. *                 messages                                                  *
. *****************************************************************************
. *       V9.10.01  23/05/2008 J.Tan      CAR 169149                          *
. *                 Added Date and Time invoice created/updated               *
. *****************************************************************************
. *       V9.09.01  24/08/2007  Peter Vela        CAR 148631                  *
. *                 Added new UR Number Format (NNNNNNC) functionality        *
. *****************************************************************************
. *       V9.04.02  02/08/2005  Davin             CAR 64087                   *
. *                 Mods for PAS/CIS and proprietary interface changes -      *
. *                 removed call to cisa28br                                  *
. *       V9.04.01  16/03/2005  Steve Armstrong   CAR 59524                   *
. *                 Mods to not call DGCLIREG if processing program is        *
. *                 DGSRVPMI (WRTUR).                                         *
. *****************************************************************************
. *       V9.03.02  12/05/2004  Steve Armstrong   CAR 49679                   *
. *                 Added call to cisa28br routine for PAS-CIS interface.     *
. *       V9.03.01  05.08.2003  Sandra Barcham     41128                      *
. *                 Removed $$DBASE command about write to pmspx2af           *
. *****************************************************************************
. *       V9.02.05  10/05/2002  Jill Habasque  SRF 17407                      *
. *                 Added check for DOB or Sex change in UPDSUR               *
. *       V9.02.04  12/02/2002  Steve Armstrong                               *
. *                 Mods to set KEY70 instead of KEY45 prior to calling       *
. *                 DGCLICUA                                                  *
. *       V9.02.03  07.02.2002  J Habasque                                    *
. *                 Commented out check for L in sector 10, 193 - no longer req*
. *       V9.02.02  29.11.2001  B.G.Ackland                                   *
. *                 Remove pi's from Program
. *       V9.02.01  08/11/2001  Mike Laming                                   *
. *                 Rename DGCLIUAL to DGCLICUA                               *
. *                 Rename DGCLIREG to DGCLICRG                               *
. *****************************************************************************
. *       V5.10.B04 20/07/2001  Mike Laming (for 04/05/2001  Steve Armstrong) *
. *                 Mods for update of patgsrnf (UPDSUR) for ACT Health       *
. *       V5.10.B03 26/04/2001  Ebon Clements                                 *
. *                 Changed UPDSUR to update sex and date of birth. This will *
. *                 only occur if the surname and given name are the same.    *
. *       V5.10.B02 19/04/2001  Glenn Saunders                                *
. *                 Adapt PATCOMN2 to be web friendly to replace WEBEMCM2     *
. *                 and WEBCOMN2 to reduce system duplication.                *
. *       V5.10.B01  6/04/2001  Glenn Saunders                                *
. *                 Remove access to PTCNSNDX and associated processing.      *
. *                 Remove all references to PATSUR file (old surname file).  *
. *****************************************************************************
. *       V5.09.B02 10/01/2001  Steve Downing  SRF 647505                     *
. *                 Open patgsrnf before each read, to fix I*C in IBAHOS31    *
. *       V5.09.B01 03/01/2001  J.Tan                                         *
. *                 Added DOB and sex to patgsrnf file                        *
. *****************************************************************************
. *       V5.08.02  29/02/2000  Steve Armstrong                               *
. *                 Mods to ignore keyin in GNXTUR for alias if running       *
. *                 DGSRVPMI or ECSRVPMI.                                     *
. *       V5.08.01  24/02/2000  Steve Armstrong                               *
. *                 Mods to ignore keyin in GNXTUR if running ECSRVPMI        *
. *****************************************************************************
. *       V5.07.01  21/09/1999  Steve Armstrong                               *
. *                 Mods to ignore keyin in GNXTUR if running DGSRVPMI        *
. *                 08/10/1998  Glenn Berry      5.07 changes                 *
. *****************************************************************************
. *       V5.00     10/04/89 Graeme Williams                                  *
. *                 Include Written                                           *
. *       V5.01     18/04/89 Graeme Williams                                  *
. *                 Subroutine GNXTUR added                                   *
. *       V5.02     20/04/89 Graeme Williams                                  *
. *                 Subroutine UPDSUR added                                   *
. *       V5.03     31/07/89 Graeme Williams                                  *
. *                 Allow for N.Z. U/R numbers                                *
. *       V5.04     02/08/89 Graeme Williams                                  *
. *                 Allow for no old surname record in UPDSUR.                *
. *       V5.05     09/01/90 Graeme Williams                                  *
. *                 Added Southland format U/R No.s                           *
. *       V5.06     24/07/90 Paul Duncan                                      *
. *                 implemented second surname file Included PATSNX2          *
. *       V5.07     24/01/91 Graeme Williams                                  *
. *                 Added the new BOKRC1FD file                               *
. *       V5.08     04/08/1992    Justin Coates  (HONG KONG changes)          *
. *                 Added VALDHK                                              *
. *       V5.09     03/11/1992    Graeme Williams   (Melbourne Cup Day)       *
. *                 Modified VALDHK according to new algorithm                *
. *       V5.10     18/06/93   ROD                                            *
. *                 Added flag if old pat name was saved as an alias (NZHIS)  *
. *       V5.11     08/10/93   Gabrielle                                      *
. *                 Added automatic generation of saving an alias CSALIAS = 2 *
. *                 Added automatic generation of saving an alias for Hong    *
. *                 Kong National Id download program (IBAINP10) PTCNHKAA     *
. *       V5.12     12/01/1994    Justin Coates  (Taranaki changes)           *
. *                 check if storing NMPI number in the U/R number.  if we    *
. *                 are, then get a National number instead of generating a UR*
. *       V5.13     14/01/1994  Glenn Berry      Taranaki changes (3.1.12)    *
. *                 Get a Temporary NMPI number when NZHIS link is down.      *
. *       V5.14     14/07/1994  Rob Leonard                                   *
. *                 Check if using National Link before generating temp UR's  *
. *       V5.15     31/08/1994  ROD          SRF 127550  Quote 8015           *
. *                 add new type of U/R format  " NNNNNNA"                    *
. *       V5.16     13/01/1997  Steve Armstrong                               *
. *                 Mods for Datagate API's                                   *
. *       V5.17     13/01/1997  Steve Armstrong                               *
. *                 Added call to DGCLIREG                                    *
. *****************************************************************************
.
. *****************************************************************************
. * GNXTUR     : Generate the next U/R number                                 *
. *                                                                           *
. * Parameters : CPSYSTEM Current system (1=A+E,2=Outp,3=Inp,4=Newborn)       *
. * Returns    : PURNO    U/R number Generated           as a DIM 8           *
. *              CPPURNO  U/R number Generated           as a DIM 8           *
. *              NMPNUMB  NHI number if NHI = U/R No.    as a DIM 20          *
. * Open files : PATMA1A1 Master file.                                        *
. *              CONTROLF System Parameter file.                              *
. *                                                                           *
. *****************************************************************************
.
GNXTUR    READ      CONTROLF,FIFTY9;*34,CTYPEUR
.
.         Read the control file
GNXTUR07  MOVE      " 19",PRXCODE   * System Lock Audits
          CALL      GETSLK00        * Get System Lock Audits
          READ      CONTROLF,TEN9;*1,CSURG1,CMURG1,CSURG2,CMURG2:
                    CSURG3,CMURG3,CSURG4,CMURG4,CIPRG,COPRG,CAERG,CNBRG
.
.         Determine what range we are using
.
          LOAD      CPSYSRG,CPSYSTEM,CAERG,COPRG,CIPRG,CNBRG
.
.         Get the next U/R number for the appropriate range
.
          LOAD      CPNXTU,CPSYSRG,CSURG1,CSURG2,CSURG3,CSURG4
.
.         Get the maximum U/R for the appropriate range
.
          LOAD      CPMAXU,CPSYSRG,CMURG1,CMURG2,CMURG3,CMURG4
.
.         Check if we have reached the maximum U/R yet
.
          MATCH     CPNXTU,CPMAXU       * check with max U/R
          GOTO      GNXTUR90 IF LESS
.
.         Check for what type of U/R number we are generating
.         NB: CTYPEUR=3 exists but not reqd here since no auto generation
.
          BRANCH    CTYPEUR,GNXTUR20,GNXTUR40,GNXTUR99,GNXTUR60,GNXTUR70
.
.         -------------------------------------------------------------------
.         Straight numeric U/R number, just add one to get the next available
.         -------------------------------------------------------------------
.
GNXTUR10  UNPACK    CPNXTU,ANS,PURNO    * Save the current (new) U/R number
          UNPACK    CPNXTU,ANS,CPPURNO  * Save the current (new) U/R number
.
          MOVE      CPNXTU,CPNURNO      * Convert to a form field
          ADD       ONE,CPNURNO         * Increment to the next U/R number
          MOVE      CPNURNO,CPNXTU      * Put back into the Dim field
          GOTO      GNXTUR80
.
.         -------------------------------------------------------------------
.         New Zealand U/R numbers. Get the next available U/R and check digit
.         -------------------------------------------------------------------
.
.         Increment the next available U/R number. The format is AAANNN and
.         we want to add one to the numeric portion. If we end up with zero,
.         then add one to the last letter. If this takes us past "Z", then
.         change it to "A" and increment the second last letter, and so on.
.
GNXTUR20  UNPACK    CPNXTU,CPURHD,CPURA1,CPURA2,CPURA3,CPURNNN
.
.         Calculate the check digit for this U/R number
.
          CALL      NZURCS00            * Calculate the check sum for U/R
          MOVE      ANS,CPURCHK         * ANS contains the check digit
.
          PACK      CPPURNO,SP1,CPURA1,CPURA2,CPURA3,CPURNNN,CPURCHK
          MOVE      CPPURNO,PURNO       * Save the current (new) U/R number
.
.         Increment the current U/R to get the new Next U/R number
.
          MOVE      CPURNNN,CPURF3      * Convert last three chars to a Form
.
          ADD       ONE,CPURF3          * Increment the numeric portion
          COMPARE   ZERO,CPURF3         * End of the numeric portion ?
          GOTO      GNXTUR30 IF NOT EQUAL
.
.         Increment the last letter
.
          REP       CPNZNXTC,CPURA3     * Go to the next letter
.
          CMATCH    CPURA3,ANSA         * Have we gone past all the letters ?
          GOTO      GNXTUR30 IF NOT EQUAL
.
.         Increment the second last letter
.
          REP       CPNZNXTC,CPURA2     * Go to the next letter
.
          CMATCH    CPURA2,ANSA         * Have we gone past all the letters ?
          GOTO      GNXTUR30 IF NOT EQUAL
.
.         Increment the first letter
.
          REP       CPNZNXTC,CPURA1     * Go to the next letter
.
.         Pack up the new U/R number and post back to the control file
.
GNXTUR30  MOVE      CPURF3,CPURNNN      * Move the numeric back to a Dim field
          REP       " 0",CPURNNN        * Zero fill the numeric portion
.
          PACK      CPNXTU,CPURHD,CPURA1,CPURA2,CPURA3,CPURNNN
.
.         Check that the U/R number we started with has a valid check digit
.         Not all U/R's give a valid check digit, so what we do is simply
.         go back and increment the U/R number again, until we get a valid
.         U/R number.
.
          CMATCH    SP1,CPURCHK         * Do we have a valid check digit ?
          GOTO      GNXTUR20 IF EQUAL   * No. Increment the U/R again.
          GOTO      GNXTUR80            * Yes. We have the next U/R
.
.         -------------------------------------------------------------------
.         Southland U/R numbers. Get the next available U/R and check digit
.         -------------------------------------------------------------------
.
.         Increment the next available U/R number. The format is AANNNN and
.         we want to add one to the numeric portion. If we end up with zero,
.         then add one to the last letter. If this takes us past "Z", then
.         change it to "A" and increment the first letter.
.
GNXTUR40  UNPACK    CPNXTU,ANS,PURNO    * Save the current (new) U/R number
          UNPACK    CPNXTU,ANS,CPPURNO  * Save the current (new) U/R number
.
          UNPACK    CPNXTU,CPURHD,CPURA1,CPURA2,CPURNNNN
.
.         Increment the current U/R to get the new Next U/R number
.
          MOVE      CPURNNNN,CPURF4     * Convert last four chars to a Form
.
          ADD       ONE,CPURF4          * Increment the numeric portion
          COMPARE   ZERO,CPURF4         * End of the numeric portion ?
          GOTO      GNXTUR45 IF NOT EQUAL
.
.         Increment the last letter
.
          REP       CPNZNXTC,CPURA2     * Go to the next letter
.
          CMATCH    CPURA2,ANSA         * Have we gone past all the letters ?
          GOTO      GNXTUR45 IF NOT EQUAL
.
.         Increment the first letter
.
          REP       CPNZNXTC,CPURA1     * Go to the next letter
          REP       " A",CPURA1         * Spaces goes to "A" for first letter
.
.         Pack up the new U/R number and post back to the control file
.
GNXTUR45  MOVE      CPURF4,CPURNNNN     * Move the numeric back to a Dim field
          REP       " 0",CPURNNNN       * Zero fill the numeric portion
.
          PACK      CPNXTU,CPURHD,CPURA1,CPURA2,CPURNNNN
.
          GOTO      GNXTUR80
.
.         -------------------------------------------------------------------
.         Cabrini Health UR Numbers. Get the next available UR and check digit
.         -------------------------------------------------------------------
.
GNXTUR60  UNPACK    CPNXTU,ANS,PURNO
          UNPACK    CPNXTU,ANS,CPPURNO
.
          MOVE      CPNXTU,CPNURNO
          ADD       ONE,CPNURNO
          MOVE      CPNURNO,CPNXTU
          CALL      URCD0000
          GOTO      GNXTUR80
.
.         -------------------------------------------------------------------
.         WA Health UR Numbers. Get the next available UR and check digit
.         -------------------------------------------------------------------
.
GNXTUR70  UNPACK    CPNXTU,ANS,PURNO
          UNPACK    CPNXTU,ANS,CPPURNO
.
          MOVE      CPNXTU,CPNURNO
          ADD       ONE,CPNURNO
          MOVE      CPNURNO,CPNXTU
          CALL      WAMD0000
          GOTO      GNXTUR80
.
.         Store the new next U/R back into the appropriate range
.
GNXTUR80  STORE     CPNXTU,CPSYSRG,CSURG1,CSURG2,CSURG3,CSURG4
.
.         Write this U/R back into the control file
.
          WRITAB    CONTROLF,TEN9;*1,CSURG1,*18,CSURG2,*35,CSURG3,*52,CSURG4
          CALL      RELSLK00        * Release System Lock Audits
.
.         Make sure this U/R number doesn't already exist
.
          MOVE      PURNO,KEY8
          CALL      RDAMAST1
          BRANCH    OVRCD,GNXTUR99
.
.         Record exists. Tell users and then try again
.
          MATCH     "DGSRVPMI",PRGID
          IF        !@EQUAL
            SCAN      "WEB",PRGID
            RESET     PRGID
            IF        !@EQUAL
              KEYIN     *P1:24,*EL,*V2LON,*B,"Error: Next U/R ",*DV,PURNO:
                        " already exists. Contact Medical Records ":
                        *EOFF,ANS;
            ENDIF
          ENDIF
          GOTO      GNXTUR
.
.         The next U/R is not available. Tell the users and then try again
.
GNXTUR90  MATCH     "DGSRVPMI",PRGID
          IF        !@EQUAL
            SCAN      "WEB",PRGID
            RESET     PRGID
            IF        !@EQUAL
              KEYIN     *P1:24,*EL,*B,*V2LON:
                        "* Next U/R not available, PLEASE CONTACT MEDICAL ":
                        "RECORD! <RET> to continue * ",*EOFF,ANS;
            ENDIF
          ENDIF
          GOTO      GNXTUR
.
GNXTUR99  CALL      RELSLK00        * Release System Lock Audits
          RETURN
+
. *****************************************************************************
. * UPDSUR     : Update files for a change in surname/given name              *
. *                                                                           *
. *              NOTE: This include updates the Surname file, Invoice file,   *
. *                    Inpatient Location file. It does NOT update the PMI,   *
. *                    or the PMI audit files; these are the responsibility   *
. *                    of the program that calls this routine                 *
. *                                                                           *
. * Parameters : PSNAME   New Surname                                         *
. *              PGNAME   New Given name                                      *
. *            ( SDXSNAM  Old Surname                                         *
. * Now using  ( SDXGNAM  Old Given name                                      *
. * GSR prefix ( SDXURNO  U/R number                                          *
. * V.10.B01   ( SDXBILL  Billing number (zero if there is a U/R number)      *
. *            ( SDXSYS   System for record (zero if there is a U/R number)   *
. * (del V.10)   PTCNSNDX which surname file being used 1=patgsrnf (controlf) *
. *                                                                           *
. * Returns    : Nothing                                                      *
. *                                                                           *
. * Open files : PATVISA2 Visit file, U/R order.                              *
. * (del V.10)   PATSURN1 Surname index, sound-ex order.                      *
. *              CONTROLF System Parameter file.                              *
. *                                                                           *
. *****************************************************************************
.
UPDSUR    PACK      CPOLD115,GSRURNO,GSRBILL,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB:
                             GSRSEX,SP70,SP70
.
UPDSUR03  READ      CONTROLF,HUND05;*1,PTCNACTI
.
UPDSUR05  MATCH     GSRSNAM,PTMASNAM    * Check if the surname has been changed
          GOTO      UPDSUR06 IF NOT EQUAL
.
.         The surname has not changed. Check for a change in given name.
.         If surname and given name are the same. Update this record with
.         the new sex and date of birth
.
          MATCH     GSRGNAM,PMPXFNAM    * Check if 1st given name has changed
          GOTO      UPDSUR06 IF NOT EQUAL
.
          MATCH     PTGSGNM2,PMPXSNAM   * Check if 2nd given name has changed
          GOTO      UPDSUR06 IF NOT EQUAL
.
          MATCH     PBDATE,GSRDOB
          GOTO      UPDSUR06 IF NOT EQUAL
.
          MATCH     PSEX,GSRSEX
          GOTO      UPDSUR06 IF NOT EQUAL
.
          GOTO      UPDSUR99
.
.         Update the booking records file with the new name.
.         --------------------------------------------------
.
UPDSUR06  MATCH     ZEROUR,GSRURNO      * Are we looking at a booking ?
          GOTO      UPDSUR30 IF EQUAL   * Yes. Just update the surname file
.
          OPEN      BOKRC1A6,"bokrc1af" * Open the U/R index of BOKRC1FD
          PACK      KEY16,GSRURNO,SP20  * Start with the U/R number
          CALL      RSBKREC6            * Position at the start of the U/R
UPDSUR07  CALL      RKBKREC6            * Get the next booking record
          BRANCH    OVRCD,UPDSUR09      * No more records
.
          MATCH     BKREURNO,GSRURNO    * Still the same U/R number ?
          GOTO      UPDSUR09 IF NOT EQUAL
.
          MOVE      PSNAME,BKRESNAM     * Change the surname
          CALL      UPBKREC6            * Update with the new name
          GOTO      UPDSUR07            * Get the next booking record
.
UPDSUR09  MATCH     "DGSRVPMI",PRGID
          IF        !@EQUAL
            SCAN      "WEB",PRGID
            RESET     PRGID
            IF        !@EQUAL
              CLOSE     BOKRC1A6        * Close the booking record.
            ENDIF
          ENDIF
.
.         Update the invoice file with the new name.
.         ------------------------------------------
.
.
.         The invoice file only contains the first six characters of the
.         surname. Just check if this much has changed
.
UPDSUR10  CALL      UPPMCU00            * Update current patients
          MOVE      PSNAME,PINALPHA     * Just get the first six chars of name
          MATCH     PINALPHA,GSRSNAM    * Have the first six characters changed
          GOTO      UPDSUR20 IF EQUAL   * No. Check Inpatient Location file
.
.         Loop over the visit file to find all the billing numbers
.
          OPEN      PATINVR3,"patinvrf" * Open the invoice file
.
          PACK      KEY24,GSRURNO,SP20  * Loop over U/R number
          CALL      RDSVISA2            * Position ourselves in the 2nd index
UPDSUR14  CALL      RDKVISA2            * Read the next visit record
          BRANCH    OVRCD,UPDSUR19      * End of visit file reached
.
          MATCH     GSRURNO,PVIURNO     * Still the same U/R number ?
          GOTO      UPDSUR19 IF NOT EQUAL
.
.         We have found a valid visit record. No loop over the invoice file
.         to find all the invoices for this billing number
.
          MOVE      PVIBILL,PINVADM     * Change the billing number to FORM 8
          PACK      KEY16,PINVADM,SP8   * Loop over the billing number
          CALL      RDSINV3             * Position ourselves in the 3rd index
UPDSUR17  CALL      RDKINV3             * Read the next invoice record
          BRANCH    OVRCD,UPDSUR14      * End of invoices, get next visit
.
          MATCH     PINVADM,PVIBILL     * End of this billing number ?
          GOTO      UPDSUR14 IF NOT EQUAL
.
.         We have found an invoice. Update it with the new surname
.
          MOVE      PSNAME,PINALPHA     * Change the surname in invoice file
          PACK      PTINUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PTINUDAT       * date updated
          CLOCK     TIME,PTINUTIM       * time updated
          MOVE      USERID,PTINUUID     * web user id
          CALL      UPINV3              * Update the invoice file
          GOTO      UPDSUR17            * Get the next invoice record
.
.         We have finished looping over the visit/invoice files
.
UPDSUR19  MATCH     "DGSRVPMI",PRGID
          IF        !@EQUAL
            SCAN      "WEB",PRGID
            RESET     PRGID
            IF        !@EQUAL
              CLOSE     PATINVR3        * Close the invoice file
            ENDIF
          ENDIF
.
.         Update the the inpatient location file if needed
.         ------------------------------------------------
.
UPDSUR20  OPEN      PATLOCA1,"patlocaf" * Open the Inpatient Location file
.
.         Loop over the old surname and first given name pair
.         Surname and Given Names over 30 character will be updated
.         even if no name changes have been made.
.
.         Added save key and repostion funtionality to stop ininite loop
.         when multiple patlocaf records exists for a U/R
.
          PACK      KEY88,GSRSNAM,SP10,GSRGNAM,SP70
UPDSUR22  CALL      RDSLOCA1                     * Position on previous names
UPDSUR25  CALL      RDKLOCA1                     * Read next record
          BRANCH    OVRCD,UPDSUR29               * eof - finished
.
          MATCH     GSRSNAM,LSNAME               * same surname ?
          GOTO      UPDSUR29 IF NOT EQUAL        * no - finished
.
          MATCH     GSRGNAM,LGNAME               * same first given name ?
          GOTO      UPDSUR29 IF NOT EQUAL        * no - finished
.
          MATCH     LURNO,GSRURNO                * same U/R number ?
          GOTO      UPDSUR25 IF NOT EQUAL        * no - get next record
.
.         Found a current admission in location file
.
          PACK      KEY90,LSNAME,LGNAME,DLADMNO,SP70 * save key for reposition
.
          MOVE      PTMASNAM,LSNAME     * Change to new surname
          MOVE      PMPXFNAM,LGNAME     * Change to new first given name
          MOVE      PMPXSNAM,PTLCGNM2   * Change to new second given name
          CALL      UPLOCA1             * Update the location file record
.
          PACK      KEY88,KEY90         * Restore save key for reposition
          GOTO      UPDSUR22            * process all iploc records   CAR 269159
.
.         We have finished the loop over the location file
.
UPDSUR29  MATCH     "DGSRVPMI",PRGID
          IF        !@EQUAL
            SCAN      "WEB",PRGID
            RESET     PRGID
            IF        !@EQUAL
              CLOSE     PATLOCA1        * Close the inpatient location file
            ENDIF
          ENDIF
.
.         Update the surname index file
.         -----------------------------
.
UPDSUR30  BRANCH    PTCNACTI,UPDSUR99   * ignore if ACT health as this will
.                                         done in ACTSUR00 (ACTCOMN1)
.
UPDSUR31  MATCH     ZEROUR,GSRURNO      * Check if this is a 0 U/R surname rec.
          GOTO      UPDSUR50 IF EQUAL   * Yes. Do not allow aliases.
.
.         Read the indicator from the control file to say whether or not
.         to ask if the old name is to kept as an alias
.
          READ      CONTROLF,TEN9;*225,CSALIAS
 IFEQ      $$DBASE,1
            MOVE      SAVEALIA,CSALIAS  * Use the cgi parameter (web)
 XIF
.
.         Set CSALIAS to save aliases automatically if this is the HL7 Receiver
.         HL7RECVR) or the Monet Interface (HL7MONET)
.
          MATCH     "HL7RECVR",PRGID
          IF        !@EQUAL
            MATCH     "HL7MONET",PRGID
            GOTO      UPDSUR32 IF NOT EQUAL
          ENDIF
          MOVE      TWO,CSALIAS                  * set to save aliases
.
UPDSUR32  COMPARE   ZERO,CSALIAS                 * saving aliases ?
          GOTO      UPDSUR50 IF EQUAL            * no - update alias record
.
.         Check if the name(s) have changed (for use as aliases) 
.
          MATCH     GSRGNAM,PMPXFNAM             * 1st given name changed ?
          GOTO      UPDSUR40 IF NOT EQUAL        * yes - save as alias
.
          MATCH     PTGSGNM2,PMPXSNAM            * 2nd given name changed ?
          GOTO      UPDSUR40 IF NOT EQUAL        * yes - save as alias
.
          MATCH     PBDATE,GSRDOB                * dob changed ?
          GOTO      UPDSUR40 IF NOT EQUAL        * yes - save as alias
.
          MATCH     PSEX,GSRSEX                  * sex changed ?
          GOTO      UPDSUR40 IF NOT EQUAL        * yes - save as alias
.
          MATCH     GSRSNAM,PTMASNAM             * surname changed ?
          GOTO      UPDSUR40 IF NOT EQUAL        * yes - save as alias
.
          GOTO      UPDSUR50                     * no - don't save as alias
.
.         Update the surname file, keeping the old name as an alias.
.         Also, send details to Datagate
.
UPDSUR40  MOVE      ONE,FORM1           * set alias status = Add (datagate)
          MOVE      CPOLD115,KEY115     * load key fields into KEY115
          MOVE      ONE,HL7TRGID
          MOVE      "PATCOMN2",HL7INCLD
          PROC      DGCLICUA            * sent details to datagate     *C-90201
.
          MOVE      PTMASNAM,GSRSNAM    * New surname
          MOVE      PMPXFNAM,GSRGNAM    * New given names
          MOVE      PMPXSNAM,PTGSGNM2   * New given names
          MOVE      PBDATE,GSRDOB       * New Date of birth
          MOVE      PSEX,GSRSEX         * New Sex
.
.         Check if new record already exists
.
          OPEN      PATGSRN1,"patgsrnf"
          PACK      KEY115,GSRURNO,GSRBILL,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB:
                           GSRSEX,SP70,SP70
          CALL      RDPTGSR1            * Check for new record
          BRANCH    OVRCD,UPDSUR44      * New record does NOT exist
.
.         Record exists so we need to update the existing record now
.         in case the second given name has changed.
.
          CALL      SOUNDEX             * Update sound-ex keys
          CALL      SOUNDX2
          CALL      UPPTGSR1            * CAR 240722
          GOTO      UPDSUR99
.
UPDSUR44  CALL      SOUNDEX             * Calculate new sound-ex key
          CALL      SOUNDX2
          CALL      WRPTGSR1            * Write new surname index record
          GOTO      UPDSUR99            * Finished.
. 
.         Update the surname file, not keeping the old name
.
UPDSUR50  MOVE      PTMASNAM,GSRSNAM    * New surname
          MOVE      PMPXFNAM,GSRGNAM    * New first given name
          MOVE      PMPXSNAM,PTGSGNM2   * New second given name
          MOVE      PBDATE,GSRDOB       * New Date of birth
          MOVE      PSEX,GSRSEX         * New Sex
          CALL      SOUNDEX             * Calculate new sound-ex key
          CALL      SOUNDX2             * calculate given name soundex key
.
.         Check if new record already exists
.
          OPEN      PATGSRN1,"patgsrnf"
          PACK      KEY115,GSRURNO,GSRBILL,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB:
                           GSRSEX,SP70,SP70
          CALL      RAPTGSR1            * Check for new record
          BRANCH    OVRCD,UPDSUR70      * New record does NOT exist
.
.         New record exists, delete old record
.
          MOVE      CPOLD115,KEY115     * Use the old saved key
          CALL      DEPTGSR1            * Delete the old record
.
          GOTO      UPDSUR99            * Finished
.
.         Update the old record with the new name
.
UPDSUR70  MOVE      CPOLD115,KEY115     * Get ready to go to old record
          CALL      RAPTGSR1            * Reposition on old record
          BRANCH    OVRCD,UPDSUR75      * Old record does not exist
.
          CALL      UPPTGSR1            * Update with the new data
          GOTO      UPDSUR99            * Finished
.
UPDSUR75  PACK      KEY115,GSRURNO,GSRBILL,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB:
                           GSRSEX
          CALL      RAPTGSR1            * Reposition on old record
          BRANCH    OVRCD,UPDSUR80      * Old record does not exist
.
          CALL      UPPTGSR1
          GOTO      UPDSUR99
.
UPDSUR80  CALL      WRPTGSR1            * Write the new record
.
UPDSUR99  RETURN
.
. *****************************************************************************
. * UPPMCU00   : Update current patients                                      *
. *****************************************************************************
UPPMCU00  OPEN      PMSCURA3,"pmscuraf"
          PACK      KEY16,GSRURNO,SP70
          CALL      RSPMCUR3
UPPMCU10  CALL      RKPMCUR3
          BRANCH    OVRCD,UPPMCU99
.
          MATCH     GSRURNO,PMCUURNO
          GOTO      UPPMCU99 IF NOT EQUAL
.
          MOVE      PTMASNAM,PMCUSURN
          MOVE      PMPXFNAM,PMCUGNAM
          MOVE      PMPXSNAM,PMCUGNM2
          CALL      UPPMCUR3
.
          GOTO      UPPMCU10
.
UPPMCU99  RETURN
+
. *****************************************************************************
. * WRTUR      : Write a new U/R number to the appropriate files              *
. *              It is assumed that all the master file variables have been   *
. *              set up with the appropriate values. This also applies to     *
. *              the extension in the case of WEB program usage.              *
. *                                                                           *
. * Parameters : PURNO    New U/R Number.                                     *
. *              CAUDM    Master file audit indicator (Sector 10, Position 213*
. *              CPMIAD   U/R Changes audit indicator (Sector 19, Position 208*
. *              PVIBILL  Billing number                                      *
. *              PVITYPE  System (1=A+E, 2=Outpatients, 3=Inpatients)         *
. * External   : ACTMSAV  Copies the master file variables into the audit file*
. *                       variables (PATAM1FD).                               *
. * Returns    : EXIT     0 = Successful posting of U/R                       *
. *                       1 = Posting failed, invalid U/R                     *
. *                       2 = Posting failed, U/R already exists              *
. * Open files : PATMA1A1 Master file.                                        *
. *              PATAM1A1  Master file audit (If CAUDM = 0)                    *
. * (del V.10)   PATSURN1 Surname index, Sound-ex order                       *
. *              PATGSRN1 Surname index, Sound-ex order                       *
. *              PATURAD1 PMI alterations Audit file (If CPMIAUD = 1)         *
. * (web only)   PMSPX2A1 Master file extension 2                             *
. *                                                                           *
. *****************************************************************************
.
WRTUR     MATCH     ZEROUR,PURNO        * Check for a valid U/R
          GOTO      WRTUR900 IF EQUAL   * Invalid U/R.
.
.         Check if the new U/R already exists
.
          MOVE      PURNO,KEY8          * Testing for an existing master record
          CALL      RDAMAST1            * Does it already exist ?
          BRANCH    OVRCD,WRTUR010      * No, proceed with processing
          GOTO      WRTUR910            * U/R already exists.
.
.         Write the record to the master file
.
WRTUR010  CALL      WRMAST1             * Write the master file variable
.
          MOVE      PURNO,PMPXURNO
          PACK      KEY8,PMPXURNO
          CALL      WRPMPX21            * Write to extension file.
.
.         Check if a record already exists in the surname file with a zero U/R
.
WRTUR030  MOVE      PTMASNAM,GSRSNAM    * Set up the Surname
          MOVE      PMPXFNAM,GSRGNAM    * Set up the First Given Name
          MOVE      PMPXSNAM,PTGSGNM2   * Set up the Second Given Name
.
          MOVE      ZEROUR,GSRURNO      * Start with a U/R number of zero
          MOVE      PVIBILL,GSRBILL     * Start with the billing number
.
          OPEN      PATGSRN1,"patgsrnf"
          PACK      KEY115,GSRURNO,GSRBILL,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB:
                           GSRSEX,SP70,SP70
          CALL      RDPTGSR1            * Check if this record exists
          BRANCH    OVRCD,WRTUR040      * Old record not found
.
.         Old record found, update with the U/R number
.
          MOVE      PURNO,GSRURNO       * Set up the U/R number
          MOVE      ZEROVISN,GSRBILL    * Change to a billing number of zero
          MOVE      ZERO,GSRSYS         * Change to a system of zero
          MOVE      PBDATE,GSRDOB
          MOVE      PSEX,GSRSEX
          CALL      UPPTGSR1            * Update the surname record
          GOTO      WRTUR050
.
.         Write the surname index record
.
WRTUR040  MOVE      PURNO,GSRURNO       * Set up the U/R number
          MOVE      PBDATE,GSRDOB       * Set up Date of birth
          MOVE      PSEX,GSRSEX         * Set up Sex
          MOVE      ZEROVISN,GSRBILL    * Set up the Billing number
          MOVE      ZERO,GSRSYS         * Set up the System
          CALL      SOUNDEX             * get surname soundex
          CALL      SOUNDX2             * get given name soundexs
.
          PACK      KEY115,GSRURNO,GSRBILL,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB:
                           GSRSEX,SP70,SP70
          CALL      RAPTGSR1            * is it already on file
          BRANCH    OVRCD,WRTUR045
          CALL      UPPTGSR1            * yes - update it
.         
          GOTO      WRTUR050
.
WRTUR045  CALL      WRPTGSR1            * Write the new surname record
.
.         If the master file audit is switched on, write an Add record to it.
.
WRTUR050  BRANCH    CAUDM,WRTUR100      * Audit's switched off
.
          CALL      ACTMSAV             * Set up the audit file variables
          MOVE      ANSA,ACTION         * "A" action.
          CALL      WRMAUD              * Write the audit file record
.
.         If the U/R change audit is switched on, write an Add record to it.
.
WRTUR100  BRANCH    CPMIAD,WRTUR120     * Audit's switched on
.
          GOTO      WRTUR800            * Finished posting U/R number
.
.         Set up the U/R change audit file record
.
WRTUR120  OPEN      PATURAD1,"paturadf" * Open the U/R audit file
          MOVE      ANSA,URRTYPE        * Add record
          PACK      URDATE,CCC,CYY,CMM,CDD  * Record added today
          REP       " 0",URDATE         * Zero fill date
          MOVE      PURNO,URURNO        * Set up the U/R number added
          MOVE      PVITYPE,URSYST      * Set the originating system
.
          PACK      KEY17,URRTYPE,URDATE,URURNO
          CALL      RDAURAD1
          BRANCH    OVRCD,WRTUR140
.
WRTUR130  MATCH     "DGSRVPMI",PRGID
          IF        !@EQUAL
            SCAN      "WEB",PRGID
            RESET     PRGID
            IF        !@EQUAL
              CLOSE     PATURAD1        * Close the U/R audit file
            ENDIF
          ENDIF
          GOTO      WRTUR800
.
WRTUR140  CALL      WRURAD1             * Write the U/R change audit record
          MATCH     "DGSRVPMI",PRGID
          IF        !@EQUAL
            SCAN      "WEB",PRGID
            RESET     PRGID
            IF        !@EQUAL
              CLOSE     PATURAD1        * Close the U/R audit file
            ENDIF
          ENDIF
.
WRTUR800  MATCH     "DGSRVPMI",PRGID
          IF        !@EQUAL
            CALL      PMIGTNID          * get national id
            MOVE      NMPNUMB,PTNINMPI
            MOVE      TWO,HL7TRGID
            MOVE      "PATCOMN2",HL7INCLD
            PROC      DGCLICRG          * send details to Datagate     *C-90201
          ENDIF
.
          MOVE      ZERO,EXIT           * U/R successfully posted
          GOTO      WRTUR999            * Finished.
.
WRTUR900  MOVE      ONE,EXIT            * Invalid U/R number
          GOTO      WRTUR999            * Finished.
.
WRTUR910  MOVE      TWO,EXIT            * U/R already exists
.
WRTUR999  RETURN
.
. *****************************************************************************
. * VALDUR     : Validate the format of a U/R number                          *
. *                                                                           *
. * Parameters : PURNO    U/R number to be validated                          *
. * Returns    : EXIT   = 0 If the U/R number is valid                        *
. *                       1 If the U/R number is not valid                    *
. * Open files : CONTROLF System Parameter file.                              *
. *                                                                           *
. *****************************************************************************
.
VALDUR    MOVE      "59",FORM2          * We want to check sector 59
          READ      CONTROLF,FORM2;*34,CTYPEUR
.
.         Validate the format depending on the type of U/R being looked for.
.
          BRANCH    CTYPEUR,VALDUR20,VALDUR40,VALDUR60,VALDUR70,VALDUR80
.
.         Numeric U/R required. Simply check for a numeric
.
VALDUR10  TYPE      PURNO               * Is the U/R number numeric
          GOTO      VALDUR90 IF EQUAL   * Valid U/R
          GOTO      VALDUR95            * Invalid U/R.
.
.         Alphanumeric U/R, AAANNNC (last character is a check digit)
.
VALDUR20  REP       AREP,PURNO          * Convert lower case to upper case
.
          UNPACK    PURNO,CPURPAD,CPURA1,CPURA2,CPURA3,CPURNNN,CPURCHK
.
          MATCH     SP1,CPURPAD         * First character must be a space
          GOTO      VALDUR95 IF NOT EQUAL
.
          RESET     CPNZVALA
          SCAN      CPURA1,CPNZVALA     * Is the first character a letter ?
          GOTO      VALDUR95 IF NOT EQUAL
.
          RESET     CPNZVALA
          SCAN      CPURA2,CPNZVALA     * Is the second character a letter ?
          GOTO      VALDUR95 IF NOT EQUAL
.
          RESET     CPNZVALA
          SCAN      CPURA3,CPNZVALA     * Is the third character a letter ?
          GOTO      VALDUR95 IF NOT EQUAL
          RESET     CPNZVALA
.
          TYPE      CPURCHK             * Skip if last character is alpha
          GOTO      VALDUR25 IF NOT EQUAL
.
          TYPE      CPURNNN             * Is the last section numeric
          GOTO      VALDUR95 IF NOT EQUAL
.
VALDUR25  CMATCH    SP1,CPURNNN         * Leading blanks in numeric section ?
          GOTO      VALDUR95 IF EQUAL
.
.         Validate the check digit
.
          CALL      NZURCS00            * Calculate the check sum for U/R
          CMATCH    ANS,CPURCHK         * Do the check digits agree ?
          GOTO      VALDUR95 IF NOT EQUAL
          GOTO      VALDUR90            * Valid U/R number
.
.         Alphanumeric U/R, AANNNN (The 1st character may be blank)
.
VALDUR40  REP       AREP,PURNO          * Convert lower case to upper case
.
          UNPACK    PURNO,CPURPAD,CPURA1,CPURA2,CPURA3,CPURNNNN
.
          MATCH     SP1,CPURPAD         * The first character must be blank
          GOTO      VALDUR95 IF NOT EQUAL
.
          MATCH     SP1,CPURA1          * The second character must be blank
          GOTO      VALDUR95 IF NOT EQUAL
.
          MATCH     SP1,CPURA2          * The third character may be blank
          GOTO      VALDUR45 IF EQUAL
.
          RESET     CPNZVALA
          SCAN      CPURA2,CPNZVALA     * Is the third character a letter ?
          GOTO      VALDUR95 IF NOT EQUAL
.
VALDUR45  RESET     CPNZVALA
          SCAN      CPURA3,CPNZVALA     * Is the fourth character a letter ?
          GOTO      VALDUR95 IF NOT EQUAL
.
          TYPE      CPURNNNN            * Is the last section numeric
          GOTO      VALDUR95 IF NOT EQUAL
.
          CMATCH    SP1,CPURNNN         * Leading blanks in numeric section ?
          GOTO      VALDUR95 IF EQUAL
          GOTO      VALDUR90            * valid
.
.         Alphanumeric U/R, NNNNNNA (may be NNNNNN if no alpha input)
.
VALDUR60  REP       AREP,PURNO          * Convert lower case to upper case
.
          MATCH     SP3,PURNO           * must be 6 chars or 7 chars
          GOTO      VALDUR95 IF EQUAL
.
          MATCH     SP2,PURNO           * are 1st 2 chars blank?
          IF        @EQUAL
            TYPE      PURNO             * may be 6 numeric chars
            GOTO      VALDUR90 IF EQUAL * valid
            GOTO      VALDUR95          * invalid
          ENDIF
.
          MATCH     SP1,PURNO           * The first character must be blank
          GOTO      VALDUR95 IF NOT EQUAL
.
          UNPACK    PURNO,CPURPAD,CPURNNN   * is the 1st section numeric?
          TYPE      CPURNNN
          GOTO      VALDUR95 IF NOT EQUAL
.
          UNPACK    PURNO,CPURPAD,CPURNNN,CPURNNN  * is the 2nd section numeric?
          TYPE      CPURNNN
          GOTO      VALDUR95 IF NOT EQUAL
.
          UNPACK    PURNO,CPURNNN,CPURNNNN,CPURA1  * is last char = "F"?
          MATCH     ANSF,CPURA1
          GOTO      VALDUR95 IF NOT EQUAL
.
          GOTO      VALDUR90
.
.         Cabrini Health Numeric U/R required. Generate check digit and validate
.
VALDUR70  CALL      URCD0000            * Generate check digit
          TYPE      PURNO               * Is the U/R number numeric
          GOTO      VALDUR90 IF EQUAL   * Valid U/R
          GOTO      VALDUR95            * Invalid U/R.
.     
.         WA Health Modulus 11 Check digit
.
VALDUR80  
... Removed as this number will be returned from the EMPI service
...
...       CALL      WAMD0000            * Generate WA Modulus 11 check digit
...       TYPE      PURNO               * Is the U/R number numeric
...       GOTO      VALDUR90 IF EQUAL   * Valid U/R
...       GOTO      VALDUR95            * Invalid U/R.
.     
.         We have a valid U/R number
.
VALDUR90  MOVE      ZERO,EXIT           * Set the indicator to say valid U/R.
          GOTO      VALDUR99
.
.         The format of the U/R number is invalid
.
VALDUR95  MOVE      ONE,EXIT            * Set the indicator to say invalid U/R.
.
VALDUR99  RETURN
.
. *****************************************************************************
. * NZURCS00   : Generate the check digit for the current U/R number (N.Z)    *
. *              The formula for the check digit is as follows:               *
. *                                                                           *
. *              Convert each letter in the alpha portion to a number that    *
. *              corresponds to it position in the alphabet, ignoring "O","I" *
. *              This will give three numbers in the range 1 to 24 (A to Z)   *
. *                                                                           *
. *              Generate the sum:      7 * 1st char value                    *
. *                                   + 6 * 2nd char value                    *
. *                                   + 5 * 3rd char value                    *
. *                                   + 4 * 1st numeric digit                 *
. *                                   + 3 * 2nd numeric digit                 *
. *                                   + 2 * 3rd numeric digit                 *
. *                                                                           *
. *              The check digit is then:      11 - (sum modulo 11)           *
. *                                                                           *
. *              If the check digit is 11, then this is not a valid U/R number*
. *              If the check digit is 10, then the check digit is 0          *
. *                                                                           *
. *  ------ Change in rule from Sep 2024-----------------------------------   *
. *              The check digit is then:      23 - (sum modulo 23)           *
. *  ----------------------------------------------------------------------   *
. *                                                                           *
. * Parameters : CPURA1   First character of U/R alpha portion                *
. *              CPURA2   Second character of U/R alpha portion               *
. *              CPURA3   Third character of U/R alpha portion                *
. *              CPURNNN  Numeric portion of U/R number (DIM 3)               *
. * Returns    : ANS      0-9 if this U/R number has a valid check digit      *
. *                       " " if this U/R number doesn't have a check digit   *
. *                                                                           *
. *****************************************************************************
.
.         Calculate the sum described above. We start with the alpha numerics
.
NZURCS00  MOVE      ZERO,CPNZCS1        * Initialise sum to zero
.
.         Convert the 1st character to a numeric. We do this by locating the
.         character in CPNZVALA (the list of valid characters) and getting the
.         position in the string. This position corresponds to the value the
.         character is to take.
.
          RESET     CPNZVALA            * Reset the list of valid characters
          SCAN      CPURA1,CPNZVALA     * Find the character in the list
          GOTO      NZURCS95 IF NOT EQUAL
.
          MOVEFPTR  CPNZVALA,CPNZCS2    * Get the character position
          MULT      SEVEN,CPNZCS2       * Multiply by the required amount
.
          ADD       CPNZCS2,CPNZCS1     * Add to the sum
.
.         Add the second character to the check sum
.
          RESET     CPNZVALA            * Reset the list of valid characters
          SCAN      CPURA2,CPNZVALA     * Find the character in the list
          GOTO      NZURCS95 IF NOT EQUAL
.
          MOVEFPTR  CPNZVALA,CPNZCS2    * Get the character position
          MULT      SIX,CPNZCS2         * Multiply by the required amount
.
          ADD       CPNZCS2,CPNZCS1     * Add to the sum
.
.         Add the third character to the check sum
.
          RESET     CPNZVALA            * Reset the list of valid characters
          SCAN      CPURA3,CPNZVALA     * Find the character in the list
          GOTO      NZURCS95 IF NOT EQUAL
.
          MOVEFPTR  CPNZVALA,CPNZCS2    * Get the character position
          MULT      FIVE,CPNZCS2        * Multiply by the required amount
.
          ADD       CPNZCS2,CPNZCS1     * Add to the sum
.
          RESET     CPNZVALA            * Reset the list of valid characters
.
.          TYPE      CPURCHK             * Check in check digit is number/alpha
.          GOTO      NZURCS20 IF NOT EQUAL * For AAANNAX check
.
.-------- Check for AAANNNN ------------------------------------------
.         Now we add the numeric portion to the check sum
.
          RESET     CPURNNN             * Reset the numeric portion of U/R
          MOVE      CPURNNN,ANS         * Get the first numeric character
          MOVE      ANS,FORM1           * Convert to a form field
          MOVE      FORM1,CPNZCS2       * Move to a larger form field
          MULT      FOUR,CPNZCS2        * Multiply by the required amount
.
          ADD       CPNZCS2,CPNZCS1     * Add to the sum
.
          BUMP      CPURNNN             * Get the next numeric character
          MOVE      CPURNNN,ANS         * Get the second numeric character
          MOVE      ANS,FORM1           * Convert to a form field
          MOVE      FORM1,CPNZCS2       * Move to a larger form field
          MULT      THREE,CPNZCS2       * Multiply by the required amount
.
          ADD       CPNZCS2,CPNZCS1     * Add to the sum
.
          BUMP      CPURNNN             * Get the next numeric character
          MOVE      CPURNNN,ANS         * Get the third character
.
.         Now we check for the formate AAANNNN / AAANNAX
          TYPE      ANS                 * Check in check digit is number/alpha
          GOTO      NZURCS20 IF NOT EQUAL * For AAANNAX check
.
          MOVE      ANS,FORM1           * Convert to a form field
          MOVE      FORM1,CPNZCS2       * Move to a larger form field
          MULT      TWO,CPNZCS2         * Multiply by the required amount
.
          ADD       CPNZCS2,CPNZCS1     * Add to the sum
.
          RESET     CPURNNN             * Reset the numeric portion of U/R
.
.         We have the check sum, now get the remainder (ie sum modulo 11)
.
          MOVE      CPNZCS1,CPNZCS2     * Save the sum
          DIV       TEN1,CPNZCS1        * Divide by 11 (integer division)
          MULT      TEN1,CPNZCS1        * Multiply by 11
.
          SUB       CPNZCS1,CPNZCS2     * Calculate remainder (modulo 11)
.
.         We have a number from 0 to 10. As a special case, if the remainder
.         if zero, then reject this U/R number
.
          COMPARE   ZERO,CPNZCS2        * Check for zero remainder
          GOTO      NZURCS95 IF EQUAL   * Check digit not valid
.
          MOVE      TEN1,CPNZCS1        * Set up check digit
          SUB       CPNZCS2,CPNZCS1     * Subtract remainder from 11
.
          MOVE      CPNZCS1,FORM1       * Change to a single digit
          MOVE      FORM1,ANS           * Set up return value
          GOTO      NZURCS99            * Return with the check digit

.
.---------Check for AAANNAX ----------------------------------------
NZURCS20  SCAN      ANS,CPNZVALA     * Find the character in the list
          GOTO      NZURCS95 IF NOT EQUAL
.
          MOVEFPTR  CPNZVALA,CPNZCS2    * Get the character position
          MULT      TWO,CPNZCS2         * Multiply by the required amount
          ADD       CPNZCS2,CPNZCS1     * Add to the sum
          RESET     CPNZVALA            * Reset the list of valid character
          RESET     CPURNNN             * Reset the numeric portion of U/R
.
.         Calculate Sum module 23
.         We have a number from 0 to 10. As a special case, if the remainder
.         if zero, then reject this U/R number
.
          MOVE      CPNZCS1,CPNZCS2        * Save the sum
          DIV       TWENTY3,CPNZCS1        * Divide by 23 (integer division)
          MULT      TWENTY3,CPNZCS1        * Multiply by 23
.
          SUB       CPNZCS1,CPNZCS2     * Calculate remainder (modulo 23
          COMPARE   ZERO,CPNZCS2        * Check for zero remainder
          GOTO      NZURCS95 IF EQUAL   * Check digit not valid
.
          MOVE      TWENTY3,CPNZCS1     * Set up check digit
          SUB       CPNZCS2,CPNZCS1     * Subtract remainder from 23
.
. The check character is the letter that corresponds to the index number
. of table   A B C D E F G H J K  L  M  N  P  Q  R  S  T  U  V  W  X  Y  Z
.            1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
.
. Convert the index number(CPNZCS1) into check character
          MOVE      CPNZCS1,FORM2
          LOAD      ANS,FORM2,ANSA,ANSB,ANSC,ANSD,ANSE,ANSF,ANSG,ANSH:
                              ANSJ,ANSK,ANSL,ANSM,ANSN,ANSP,ANSQ,ANSR:
                              ANSS,ANST,ANSU,ANSV,ANSW,ANSX,ANSY,ANSZ
                              * Set up return value
          GOTO      NZURCS99  * Return with the check digit
.
.         Invalid check digit
.
NZURCS95  MOVE      SP1,ANS     * Return with indicator saying invalid
.
NZURCS99  RETURN
.
.         -------------------------------------------------------------------
.         Calculate the check digit for Cabrini UR Number. Modulus 11 alg used
.         -------------------------------------------------------------------
.
URCD0000  MOVE      SP1,ANS
          MOVE      ZERO,FORM1
          MOVE      ZERO,URCHKDGT
          RESET     URWTARAY
          LJUSTIFY  PURNO 
          STRIP     PURNO
          MOVELPTR  PURNO,URNLNGTH
.
          WHILE     URNLNGTH >= 1
            RESET     PURNO,URNLNGTH
            CMOVE     PURNO,ANS
            MOVE      ANS,FORM1
            CMOVE     URWTARAY,ANS
            MOVE      ANS,URNOWGHT
            ASSIGN    (URNOWGHT*FORM1),URCHKPRD
.
            ADD       URCHKPRD,URCHKDGT
            BUMP      URWTARAY
            SUB       ONE,URNLNGTH
          DO
.
          ASSIGN    (URCHKDGT%11),URCHKDGT
          ASSIGN    (11-URCHKDGT),URCHKDGT
          IF        URCHKDGT=11 | URCHKDGT=10
            MOVE      ZERO,URCHKDGT
          ENDIF
.
          RESET     PURNO
          STRIP     PURNO
          MOVE      URCHKDGT,DIM4
          LJUSTIFY  DIM4
          STRIP     DIM4
          PACK      PURNO,PURNO,DIM4,SP70
          RJUSTIFY  PURNO
.
URCD9999  RETURN
.
.         -------------------------------------------------------------------
.         Calculate the check digit for WA Health -  Modulus 11 alg used
.         to calculate the first character (ABCDEFGHJH or L)             
.         -------------------------------------------------------------------
.
WAMD0000  MOVE      SP1,ANS
          MOVE      ZERO,FORM1
          MOVE      ZERO,URCHKDGT
          RESET     URWAARAY
          LJUSTIFY  PURNO
          STRIP     PURNO
          MOVELPTR  PURNO,URNLNGTH
          MOVE      PURNO,FORM8
.
          ASSIGN    (FORM8%11),URNLNGTH
          BUMP      URWAARAY,URNLNGTH
          PACK      DIM1,URWAARAY
.
          PACK      DIM8,PURNO
          RESET     DIM8
          STRIP     DIM8
          PACK      PURNO,DIM1,DIM8,SP70
          RJUSTIFY  PURNO
.
WAMD9999  RETURN
.

          INC       PATSNDX             * Soundex Algorithm
          INC       PATSNX2             * 2nd Soundex Algorithm ( Given Name )
.
. *****************************************************************************
. * VALDHK     : Validate the Hong Kong Id Number                             *
. *                                                                           *
. * Parameters : PTNINMPI        hong kong id number                          *
. * Returns    : EXIT = 1        invalid number                               *
. *              EXIT = 0        valid number                                 *
. *                                                                           *
. * The format of the HK Id No is AANNNNNN(C)                                 *
. *                                                                           *
. * To calculate the check digit, the digits are treated as being their own   *
. * value. The letters are mapped from A-Z as 10-35. Blanks are given a value *
. * of 36.                                                                    *
. *                                                                           *
. * Given these eight numbers, add them up as:                                *
. *                                                                           *
. *  9*1st + 8*2nd + 7*3rd + 6*4th + 5*5th + 4*6th + 3*7th + 2*8th            *
. *                                                                           *
. *  Divide this sum by 11, and take the remainder. If the remainder is 0, the*
. *  check digit will be "0". If the remainder is 1, the check digit will be  *
. *  "A". Otherwise the check digit will be 11-remainder.                     *
. *                                                                           *
. *****************************************************************************
.
          DEFPROC   VALDHK
.
ENTCKDIG  DIM       1         * entered    check digit
CALCKDIG  DIM       1         * calculated check digit
COUNT     FORM      2
TOTAL     FORM      6
.
VALDHK00  STRIP     PTNINMPI                * remove crap at the end
          ENDSET    PTNINMPI                * get to end of string
.
          CMATCH    ")",PTNINMPI
          GOTO      VALDHK90 IF NOT EQUAL   * no end bracket - invalid
.
          BUMP      PTNINMPI,-1
          GOTO      VALDHK90 IF EOS         * get before )
.
          MOVE      PTNINMPI,ENTCKDIG       * get the entered check digit
.
          BUMP      PTNINMPI,-1
          GOTO      VALDHK90 IF EOS         * get on (
.
          CMATCH    "(",PTNINMPI
          GOTO      VALDHK90 IF NOT EQUAL   * no end bracket - invalid
.
. ******* go about checking the Id entered *******
.
          MOVE      ONE,COUNT
          MOVE      ZERO,TOTAL
.
          WHILE     COUNT < 9
            ADD       ONE,COUNT
.
            BUMP      PTNINMPI,-1
            GOTO      VALDHK30 IF EOS         * end of string
.
            MOVE      PTNINMPI,ANS
            TYPE      ANS
            IF        @EQUAL
              IF        COUNT > 7
                GOTO      VALDHK90            * last 6 chars should be digits
              ENDIF
              MOVE      ANS,FORM2
              ASSIGN    COUNT*FORM2+TOTAL,TOTAL
            ELSE
              IF        COUNT <= 7
                GOTO      VALDHK90            * last 6 chars should be digits
              ENDIF
              CMATCH    SP1,ANS
              IF        @EQUAL
                ASSIGN    COUNT*36+TOTAL,TOTAL
              ELSE
                SEARCH    ANS,ANSA,TWENTY6,FORM2
                ASSIGN    COUNT*(NINE+FORM2)+TOTAL,TOTAL
              ENDIF
            ENDIF
          DO
.
.         Check to make sure the rest of the string is blank
.
VALDHK30  BUMP      PTNINMPI,-1
          GOTO      VALDHK40 IF EOS
          CMATCH    SP1,PTNINMPI
          GOTO      VALDHK30 IF EQUAL
          GOTO      VALDHK90
.
.         Calculate the check digit
.
VALDHK40  ASSIGN    TOTAL%11,FORM2        * get remainder when divided by 11
          MOVE      ZERO,CALCKDIG
          LOAD      CALCKDIG,FORM2,ANSA,NINE,EIGHT,SEVEN,SIX,FIVE:
                                   FOUR,THREE,TWO,ONE
.
          MATCH     CALCKDIG,ENTCKDIG
          GOTO      VALDHK90 IF NOT EQUAL * invalid Id number
.
          MOVE      ZERO,EXIT 
          GOTO      VALDHK95
.
VALDHK90  MOVE      ONE,EXIT
.
VALDHK95  SETLPTR   PTNINMPI                * set LL to end
          RESET     PTNINMPI                * set FP to start
.
VALDHK99  ENDPROC

.
          INC       DGCLICUA                                           *C-90201
          INC       DGCLICRG                                           *C-90201
