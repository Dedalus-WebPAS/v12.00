.******************************************************************************
.* System         :  Patient Billing                                          *
.* Program        :  IBAHMS92                                                 *
.* Description    :  Upload Theatre Fees                                      *
.******************************************************************************
.* Date           :  26/05/2009                                               *
.* Author         :  J.Tan                                                    *
.* Function       :  Upload Theatre Fees from ASCII file                      *
.* Modifications  :                                                           *
.*                                                                            *
.* V11.01.01  04/03/2021  J.Tan         TSK 0863287                           *
.*            Mod checking PTCNPPIN 'Using new Patient Portion Invoice'       *
.* V10.04.02  13/06/2014 Steve Armstrong  CAR 301639                          *
.*            Moved call to TFILENAM into INIT0000 and added call to KILL0000 *
.*            on exit of program.                                             *
.*            Also fixed program to return to ML0500 instead of ML0000.       *
.* V10.04.01  17/04/2014 J.Tan         CAR 300245                             *
.*            Added option to delete theatre fees                             *
.******************************************************************************
.* V10.03.04  07/05/2013 J.Tan         CAR 284989                             *
.*            Fixed creating temp file                                        *
.* V10.03.03  24/12/2012 Patrick Adair CAR 261630                             *
.*            Removed port number from temp file name                         *
.* V10.03.02 11/12/2012 J.Tan          CAR 273513                             *
.*            Mods Casemix theatre fees to have max of 20 item sequence       *
.* V10.03.01 28/03/2012 J.Tan          CAR 262621                             *
.*            Mods checking for blank lines on Upload file                    *
.******************************************************************************
.*                  V10.02.03 11/07/2011 Saroeun Soeur  CAR 246052            *
.*                   packed XFLD0007 with itself to create a blank            *
.*                  V10.02.02 25/06/2011 Saroeun Soeur  CAR 244677            *
.*                   packed XFLD0009 with itself to create a blank            *
.*                  V10.02.01 04/04/2011 J.Tan          CAR 233160            *
.*                   Added Contract ID effective date from and to             *
.******************************************************************************
.*                  V10.01.03 02/03/2011 Ebon Clements  CAR 233160            *
.*                   Added error report                                       *
.*                  V10.01.02 22/02/2011 Ebon Clements  CAR 233160            *
.*                   Removed old/new files                                    *
.*                  V10.01.01 13/01/2011 J.Tan    CAR 233048                  *
.*                   Mods PATTFEFD to use HF Table type                       *
.******************************************************************************
.*                  V10.00.01 07/05/2010 J.Tan    CAR 205303                  *
.*                   Fixed Perdiem with blank stepdown fees                   *
.******************************************************************************
.*                   V9.12.02 14/10/2009 J.Tan    CAR 205303                  *
.*                   Added option to copy per-diem or casepayment theatre fees*
.*                   V9.12.01 21/09/2009 J.Tan    CAR 205303                  *
.*                   Added Contract ID                                        *
.******************************************************************************
.
          INC       STD001FD
.
          INC       PATCONFD/INC
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       PATCODFD/INC            * Codes file
          INC       PATFN1FD/INC            * Health fund file
          INC       PATFX1FD/INC            * Health fund file
          INC       PATHGPFD/INC            * Health fund group
          INC       PATTFEFD/INC            * Theatre Fees file
          INC       PATCFAFD/INC            * Claim code file
          INC       PATCTFFD/INC            * Casepayment Theatre Fees file
          INC       PMSCIDFD/INC            * Contract ID file
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
.         Temporary file for Theatre fees records which
.         are loaded from the upload file provided by the customer (PROC0000)
.
.         Theatre Fees Upload file
.
UTFEETXT  FILE       HL7, FIXED=1800        * Upload file for theatre fees
.
.Name     Type     Size     Start
.----     ----     ----     -----
XTFTYP    DIM         1     Contract Type
XCONTR    DIM         6     Contract ID
XSTTYP    DIM         1     Start Type
XEFDAT    DIM         8     Effective Start date
XEDATE    DIM         8     End Date
XCLMCD    DIM         3     Claim Code
XHFCOD    DIM         6     Health Fund code
XHFTYP    DIM         3     Health Fund Table Type
XDCASE    DIM         1     Daycase indicator (D for Daycase rate)
XLSMBS    DIM         5     Last MBS Fee in range/MBS Banding
XTREB1    FORM        5.2   Rebate portion 1st highest fee
XTPAT1    FORM        5.2   Patient portion 1st highest fee
XTREB2    FORM        5.2   Rebate portion 2nd highest fee
XTPAT2    FORM        5.2   Patient portion 2nd highest fee
XTREB3    FORM        5.2   Rebate portion 3th highest fee
XTPAT3    FORM        5.2   Patient portion 3th highest fee
XTREB4    FORM        5.2   Rebate portion 4th highest fee
XTPAT4    FORM        5.2   Patient portion 4th highest fee
XTREB5    FORM        5.2   Rebate portion 5th highest fee
XTPAT5    FORM        5.2   Patient portion 5th highest fee
XTREB6    FORM        5.2   Rebate portion 6th highest fee
XTPAT6    FORM        5.2   Patient portion 6th highest fee
XTREB7    FORM        5.2   Rebate portion 7th highest fee
XTPAT7    FORM        5.2   Patient portion 7th highest fee
XTREB8    FORM        5.2   Rebate portion 8th highest fee
XTPAT8    FORM        5.2   Patient portion 8th highest fee
XTREB9    FORM        5.2   Rebate portion 9th highest fee
XTPAT9    FORM        5.2   Patient portion 9th highest fee
XTREB10   FORM        5.2   Rebate portion 10th highest fee
XTPAT10   FORM        5.2   Patient portion 10th highest fee
XTREB11   FORM        5.2   Rebate portion 11th highest fee
XTPAT11   FORM        5.2   Patient portion 11th highest fee
XTREB12   FORM        5.2   Rebate portion 12th highest fee
XTPAT12   FORM        5.2   Patient portion 12th highest fee
XTREB13   FORM        5.2   Rebate portion 13th highest fee
XTPAT13   FORM        5.2   Patient portion 13th highest fee
XTREB14   FORM        5.2   Rebate portion 14th highest fee
XTPAT14   FORM        5.2   Patient portion 14th highest fee
XTREB15   FORM        5.2   Rebate portion 15th highest fee
XTPAT15   FORM        5.2   Patient portion 15th highest fee
XTREB16   FORM        5.2   Rebate portion 16th highest fee
XTPAT16   FORM        5.2   Patient portion 16th highest fee
XTREB17   FORM        5.2   Rebate portion 17th highest fee
XTPAT17   FORM        5.2   Patient portion 17th highest fee
XTREB18   FORM        5.2   Rebate portion 18th highest fee
XTPAT18   FORM        5.2   Patient portion 18th highest fee
XTREB19   FORM        5.2   Rebate portion 19th highest fee
XTPAT19   FORM        5.2   Patient portion 19th highest fee
XTREB20   FORM        5.2   Rebate portion 20th highest fee
XTPAT20   FORM        5.2   Patient portion 20th highest fee
.
.End of Record
.
. ----- Program Variables -----
.
ADDCOUNT  FORM      8
CONTRCID  DIM       6
CMDLINE   DIM       100
DIM3      DIM       3
ERRCOUNT  FORM      8
ERRORMSG  DIM       30
FNAMEI    DIM       150
FNAME1    DIM       8
FORM12P2  FORM      12.2
FORM12X2  FORM      12.2
.
KYCLAIM   DIM       3
KYHFGRP   DIM       6
KYHFUND   DIM       6
KYHFTAB   FORM      1
LINECNTR  FORM      8
.
TEMPFILE  IFILE     SQL, FIXED=4, KEY="uc1-3"
.
UPDCOUNT  FORM      8
MODE      DIM       1
NEWRECD   FORM      1
REMFLAG   FORM      1
PATHNAME  DIM       150
SAVKEY20  DIM       20
SAVCONTR  DIM       6
TFEETYPE  FORM      1
VALDPASS  FORM      1
USERID    DIM       10
ZERO8     INIT      "0000    "
.
XFLD0001  DIM       30
XFLD0002  DIM       30
XFLD0003  DIM       30
XFLD0004  DIM       30
XFLD0005  DIM       30
XFLD0006  DIM       30
XFLD0007  DIM       30
XFLD0008  DIM       30
XFLD0009  DIM       30
XFLD0010  DIM       30
XFLD0011  DIM       30
XFLD0012  DIM       30
XFLD0013  DIM       30
XFLD0014  DIM       30
XFLD0015  DIM       30
XFLD0016  DIM       30
XFLD0017  DIM       30
XFLD0018  DIM       30
XFLD0019  DIM       30
XFLD0020  DIM       30
XFLD0021  DIM       30
XFLD0022  DIM       30
XFLD0023  DIM       30
XFLD0024  DIM       30
XFLD0025  DIM       30
XFLD0026  DIM       30
XFLD0027  DIM       30
XFLD0028  DIM       30
XFLD0029  DIM       30
XFLD0030  DIM       30
XFLD0031  DIM       30
XFLD0032  DIM       30
XFLD0033  DIM       30
XFLD0034  DIM       30
XFLD0035  DIM       30
XFLD0036  DIM       30
XFLD0037  DIM       30
XFLD0038  DIM       30
XFLD0039  DIM       30
XFLD0040  DIM       30
XFLD0041  DIM       30
XFLD0042  DIM       30
XFLD0043  DIM       30
XFLD0044  DIM       30
XFLD0045  DIM       30
XFLD0046  DIM       30
XFLD0047  DIM       30
XFLD0048  DIM       30
XFLD0049  DIM       30
XFLD0050  DIM       30
.
PRGID     INIT      "IBAHMS92"
PRGNAM    INIT      "Upload Theatre Fees"
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                                  ML0000                                    *
.*                                Main Module                                 *
.******************************************************************************
ML0000    CALL      INIT0000                * Initailize variables & open files
.
ML0500    CALL      KOPT0000                * Keyin Upload or Update option
          BRANCH    EXIT,ML9999
.
          BRANCH    COPTION,ML1000,ML2000
          GOTO      ML9999
.
ML1000    CALL      KASC0000                * Keyin ascii file
          BRANCH    EXIT,ML9900
.
          CALL      OPTN0000                * Choose options
          BRANCH    EXIT,ML9999
.
ML1100    CALL      SCRD0000                * Display screen
.
          CALL      KFLD0000                * Keyin fields
          BRANCH    EXIT,ML0500
.
          CALL      KUSR0000                * Keyin user id
          BRANCH    EXIT,ML0500
.
          CALL      KPTH0000                * Keyin pathname
          BRANCH    EXIT,ML0500
.
          CALL      SFLD0000
          BRANCH    EXIT,ML1100
.
          CALL      PRHD0000                * Print header
.
          CALL      CTOT0000                * Clear total vars
.
          MOVE      ONE,VALDPASS            * Validation Pass Set to Yes
          CALL      POST0000                * Updating file
.
          IF        ERRCOUNT=0
            MOVE      ZERO,VALDPASS         * If no errors proceed
            CALL      POST0000              * with Updating file
          ENDIF
.
          CALL      PTOT0000                * Print report totals
          GOTO      ML9999
.
ML2000    CALL      OPTN0000                * Choose options
          BRANCH    EXIT,ML9999
.
          CALL      SCRR0000                * Display screen
          CALL      KCLM0000                * Keyin claim code
          BRANCH    EXIT,ML9999
.
          IF        OPTION<>3
            CALL      KFND0000              * Keyin HF code/ HF Group
            BRANCH    EXIT,ML9999
          ENDIF
.
          CALL      KFTP0000                * Per-diem or C/P theatre?
.
          CALL      KCNT0000                * Keyin Contract ID
          BRANCH    EXIT,ML9999
.
          CALL      KUSR0000                * Keyin user id
.
          CALL      PRHD0000                * Print header
          CALL      RMTF0000                * Remove Theatre fees
          GOTO      ML9999
.
ML9900    CALL      HEAD132
          PRINT     *N,"Failed to open upload file. "
.
ML9999    CALL      KILL0000                * remove temp file
          CHAIN     PGM
+
.******************************************************************************
.*                                 INIT0000                                   *
.*                     Initialize Variables & Open Files                      *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
.
          CALL      IBACLOCK
.
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patfn1af"
          OPEN      PATFN1A1,"patfn1af"
          OPEN      PATFN1A3,"patfn1af"
          OPEN      PATFX1A1,"patfx1af"
.
          DISPLAY   *P64:24,"patcfaaf"
          OPEN      PATCFAA1,"patcfaaf"
.
          DISPLAY   *P64:24,"pathgrpf"
          OPEN      PATHGRP1,"pathgrpf"
.
          DISPLAY   *P64:24,"pattfeef"
          OPEN      PATTFEE1,"pattfeef"
          OPEN      PATTFEE2,"pattfeef"
.
          DISPLAY   *P64:24,"patctfaf"
          OPEN      PATCTFA1,"patctfaf"
.
          DISPLAY   *P64:24,"pmscidaf";
          OPEN      PMSCIDA1,"pmscidaf"
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,HUND29;*89,PTCNPPIN
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAME1
.
INIT9999  RETURN
+
.******************************************************************************
.*                                 KOPT0000                                   *
.*                            Choose Upload or Update files                   *
.******************************************************************************
KOPT0000  MOVE      ZERO,EXIT
          MOVE      ZERO,COPTION
          DISPLAY   *P1:6,*EF:
                    *P1:6,*V2LON,"0",*HOFF," = Exit":
                    *P1:7,*V2LON,"1",*HOFF," = Upload Theatre Fees":
                    *P1:8,*V2LON,"2",*HOFF," = Remove Theatre Fees";
          DISPLAY   *P1:10,"Select Option : ";
.
KOPT1000  KEYIN     *P17:10,*V2LON,COPTION;
          BRANCH    COPTION,KOPT9999,KOPT9999
.
          COMPARE   ZERO,COPTION
          GOTO      KOPT9000 IF EQUAL
          BEEP
          GOTO      KOPT1000
.
KOPT9000  MOVE      ONE,EXIT
KOPT9999  RETURN
+
.******************************************************************************
.*                                 OPTN0000                                   *
.*                            Choose HF group or HF code                      *
.******************************************************************************
OPTN0000  MOVE      ZERO,EXIT
          MOVE      ZERO,OPTION
          DISPLAY   *P1:6,*EF:
                    *P1:6,*V2LON,"0",*HOFF," = Exit":
                    *P1:7,*V2LON,"1",*HOFF," = By Health fund Group":
                    *P1:8,*V2LON,"2",*HOFF," = By Health fund":
                    *P1:9,*V2LON,"3",*HOFF," = Default Health fund/table";
          DISPLAY   *P1:10,"Select Option : ";
.
OPTN1000  KEYIN     *P17:10,*V2LON,OPTION;
          BRANCH    OPTION,OPTN9999,OPTN9999,OPTN9999
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9000 IF EQUAL
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ONE,EXIT
OPTN9999  RETURN
+
.******************************************************************************
.*                                 KASC0000                                   *
.*                            Keyin ASCI file                                 *
.******************************************************************************
KASC0000  MOVE      ZERO,EXIT
          PACK      FNAMEI WITH SP70,SP70,SP70
.
          DISPLAY   *P19:13,*EF,"Theatre Fees Load File";
.
          KEYIN     *P1:14,*EL,"Keyin Path & File Name : ",*V2LON,FNAMEI
.
          PACK      FNAMEI,FNAMEI,SP70,SP70,SP70
.
          MATCH     SP70,FNAMEI
          GOTO      KASC9000 IF EQUAL
.
          SCAN      ".txt",FNAMEI
          IF        !@EQUAL
            SQUEEZE   FNAMEI
            ENDSET    FNAMEI
            APPEND    ".txt",FNAMEI      * add ".txt" if there is a path
            APPEND    SP70,FNAMEI
            RESET     FNAMEI
          ENDIF
          RESET     FNAMEI
.
          DISPLAY   *P26:14,*V2LON,*EL,FNAMEI;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      UTFEETXT,FNAMEI
          TRAPCLR   IO
          BRANCH    OVRCD,KASC8000
.
          CALL      EXCUS000
          MOVE      ZERO,EXIT
          GOTO      KASC9999
.
KASC8000  DISPLAY   *P1:24,*EL,*B,"File not found.  ";
          CALL      HITENTER
          GOTO      KASC0000
.
KASC9000  MOVE      ONE,EXIT
.
KASC9999  RETURN
+
.******************************************************************************
.*                                 KFLD0000                                   *
.*                            Keyin Fields                                    *
.******************************************************************************
KFLD0000  CALL      IVAR0000                * Initialise variables
.
          CALL      KCLM0000                * Keyin claim code
          BRANCH    EXIT,KFLD9999
.
          COMPARE   THREE,OPTION
          GOTO      KFLD2000 IF EQUAL       * default hf/table
.
          CALL      KFND0000                * Keyin HF code/ HF Group
          BRANCH    EXIT,KFLD9999
.
          CALL      KTAB0000                * Keyin health fund table 
          BRANCH    EXIT,KFLD9999           * exit
.
KFLD2000  CALL      KFTP0000                * Per-diem or C/P theatre?
          BRANCH    EXIT,KFLD9999           * exit
.
          CALL      KCNT0000                * Keyin Contract ID
          BRANCH    EXIT,KFLD9999
.
          MOVE      ZERO,EXIT
KFLD9999  RETURN
+
.******************************************************************************
.*                                 IVAR0000                                   *
.*                            Initialise variable                             *
.******************************************************************************
IVAR0000  MOVE      SP70,KYCLAIM
          MOVE      SP70,KYHFGRP
          MOVE      SP70,KYHFUND
          MOVE      ZERO,KYHFTAB
IVAR9999  RETURN
+
.******************************************************************************
.*                                 SCRD0000                                   *
.*                            Screen display                                  *
.******************************************************************************
SCRD0000  DISPLAY   *P1:11,*EF:
                    *P1:12," 1. Claim Code         :";
          COMPARE   THREE,OPTION
          GOTO      SCRD3000 IF NOT EQUAL
.
          DISPLAY   *P1:16," 3. Per-diem/Casepaymnt:":
                    *P1:17," 4. Contract ID        :":
                    *P1:18," 5. Keyin User id      :":
                    *P1:19," 6. Keyin Path name    :";
          GOTO      SCRD9999
.
SCRD3000  IF        OPTION=1
            DISPLAY   *P1:13," 2. Health Fund Group  :";
          ELSE
            DISPLAY   *P1:13," 2. Health Fund Code   :";
          ENDIF
.
SCRD4000  DISPLAY   *P1:14," 3. Health Fund Table  :":
                    *P1:16," 5. Per-diem/Casepaymnt:":
                    *P1:17," 6. Contract ID        :":
                    *P1:18," 7. Keyin User id      :":
                    *P1:19," 8. Keyin Path name    :";
SCRD9999  RETURN
+
.******************************************************************************
.*                                 SCRR0000                                   *
.*                            Screen display                                  *
.******************************************************************************
SCRR0000  DISPLAY   *P1:11,*EF:
                    *P1:12," 1. Claim Code         :";
          COMPARE   THREE,OPTION
          GOTO      SCRR3000 IF NOT EQUAL
.
          DISPLAY   *P1:16," 2. Per-diem/Casepaymnt:":
                    *P1:17," 3. Contract ID        :":
                    *P1:18," 4. Keyin User id      :";
          GOTO      SCRR9999
.
SCRR3000  IF        OPTION=1
            DISPLAY   *P1:13," 2. Health Fund Group  :";
          ELSE
            DISPLAY   *P1:13," 2. Health Fund Code   :";
          ENDIF
.
          DISPLAY   *P1:16," 3. Per-diem/Casepaymnt:":
                    *P1:17," 4. Contract ID        :":
                    *P1:18," 5. Keyin User id      :";
SCRR9999  RETURN
+
.******************************************************************************
.*                                 KCNT0000                                   *
.*                            Keyin Contract ID                               *
.******************************************************************************
KCNT0000  KEYIN     *P26:17,*EL,*V2LON,CONTRCID;
          ENDSET     CONTRCID
          APPEND     SP70,CONTRCID
          RESET      CONTRCID
.
          MATCH      SP70,CONTRCID
          GOTO       KCNT9000 IF EQUAL
.
          MOVE       ZERO,EXIT
          GOTO       KCNT9999
.
KCNT9000  MOVE       ONE,EXIT
KCNT9999  RETURN
+
.******************************************************************************
.*                                 KCLM0000                                   *
.*                            Keyin Claim code                                *
.******************************************************************************
KCLM0000  MOVE      SP10,KYCLAIM
          MOVE      ZERO,EXIT
          KEYIN     *P26:12,*EL,*V2LON,KYCLAIM;
          ENDSET    KYCLAIM
          APPEND    SP3,KYCLAIM
          RESET     KYCLAIM
.
          MATCH     SP3,KYCLAIM
          GOTO      KCLM9000 IF EQUAL
.
          MOVE      "CL",TCODE
          PACK      KEY5,TCODE,KYCLAIM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,KCLM2000
.
          DISPLAY   *P26:12,*V2LON,KYCLAIM,*P30:12,TDESC;
          MOVE      ZERO,EXIT
          GOTO      KCLM9999
.
KCLM2000  DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid Claim code.  ";
          CALL      HITENTER
          GOTO      KCLM0000
.
KCLM9000  MOVE      ONE,EXIT
KCLM9999  RETURN
+
.******************************************************************************
.*                                 KFGR0000                                   *
.*                            Keyin Health fund group                         *
.******************************************************************************
KFGR0000  MOVE      SP10,KYHFGRP
          MOVE      ZERO,EXIT
          KEYIN     *P26:13,*EL,*V2LON,KYHFGRP;
          ENDSET    KYHFGRP
          APPEND    SP3,KYHFGRP
          RESET     KYHFGRP
.
          MATCH     SP3,KYHFGRP
          GOTO      KFGR9000 IF EQUAL
.
          PACK      KEY6,KYHFGRP
          CALL      RDPAHGP1
          BRANCH    OVRCD,KFGR2000
.
          DISPLAY   *P26:13,*V2LON,KYHFGRP,*P30:13,PTHGDESC;
          GOTO      KFGR8000
.
KFGR2000  DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid Health fund Group code.  ";
          CALL      HITENTER
          GOTO      KFGR0000
.
KFGR8000  MOVE      ZERO,EXIT
          GOTO      KFGR9999
.
KFGR9000  MOVE      ONE,EXIT
KFGR9999  RETURN
+
.******************************************************************************
.*                                 KHFN0000                                   *
.*                            Keyin Health fund code                          *
.******************************************************************************
KHFN0000  MOVE      SP10,KYHFUND
          MOVE      ZERO,EXIT
.
          KEYIN     *P26:13,*EL,*EL,*V2LON,KYHFUND;
          RESET     KYHFUND
          GOTO      KHFN9999 IF EOS
.
          ENDSET    KYHFUND
          APPEND    SP6,KYHFUND
          RESET     KYHFUND
.
          CMATCH    EXITCHAR,KYHFUND
          GOTO      KHFN9000 IF EQUAL
.
          MATCH     SP6,KYHFUND
          GOTO      KHFN9200 IF EQUAL
.
          PACK      KEY14,KYHFUND,ZERO8
          CALL      RDFUND1
          BRANCH    OVRCD,KHFN2000
.
          DISPLAY   *P26:13,*V2LON,KYHFUND,*P30:13,HFNAME;
          GOTO      KHFN9999
.
KHFN2000  DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid Health Fund code.  "
          CALL      HITENTER
          GOTO      KHFN0000        
.
KHFN9000  MOVE      ONE,EXIT        * exit char. entered
          GOTO      KHFN9999
.
KHFN9200  MOVE      TWO,EXIT        * spaces entered
          GOTO      KHFN9999
.
KHFN9999  RETURN
+
.******************************************************************************
.*                                 KTAB0000                                   *
.*                            Keyin HF Table                                  *
.******************************************************************************
KTAB0000  MOVE      ZERO,KYHFTAB
          MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL,"1 = All, 2 = As per Upload";
          KEYIN     *P26:14,*EL,*V2LON,KYHFTAB;
          BRANCH    KYHFTAB,KTAB1000,KTAB1000
          DISPLAY   *P1:24,*EL,*B,*V2LON,"Must be one or two.  ";
          CALL      HITENTER
          GOTO      KTAB0000
.
KTAB1000  IF        KYHFTAB=1
            MOVE      "All                ",TDESC
          ELSE
            MOVE      "As Per Upload      ",TDESC
          ENDIF
          DISPLAY   *P26:14,*V2LON,KYHFTAB,*P36:14,TDESC;
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          GOTO      KTAB9999
.
KTAB9000  MOVE      ONE,EXIT
KTAB9999  RETURN
+
.******************************************************************************
.*                                  KFTP0000                                  *
.*                     Per diem or Casepayment Theatre fees                   *
.******************************************************************************
KFTP0000  DISPLAY   *P1:24,"1 for Per-diem  or 2 for Casepayment ";
          MOVE      ONE,TFEETYPE          * default to per-diem
          KEYIN     *P26:16,*EL,*V2LON,*RV,TFEETYPE;
.
          BRANCH    TFEETYPE,KFTP1000,KFTP2000
          GOTO      KFTP0000
.
KFTP1000  DISPLAY   *P28:16,*EL,*V2LON,"Per-diem";
          GOTO      KFTP8000
.
KFTP2000  DISPLAY   *P28:16,*EL,*V2LON,"Casepayment";
.
KFTP8000  DISPLAY   *P1:24,*EL;
KFTP9999  RETURN
+
.******************************************************************************
.*                                  KUSR0000                                  *
.*                     Keyin user id                                          *
.******************************************************************************
KUSR0000  KEYIN     *P26:18,*EL,*V2LON,USERID;
          PACK      USERID,USERID,SP70
          MATCH     SP70,USERID
          GOTO      KUSR9500 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      KUSR9999
.
KUSR9500  MOVE      ONE,EXIT
KUSR9999  RETURN
+
.******************************************************************************
.*                                  KPTH0000                                  *
.*                     Keyin path name                                        *
.******************************************************************************
KPTH0000  PACK      PATHNAME,SP70,SP70,SP70
          KEYIN     *P26:19,*EL,*V2LON,PATHNAME;
          ENDSET    PATHNAME
          APPEND    SP70,PATHNAME
          APPEND    SP70,PATHNAME
          APPEND    SP70,PATHNAME
          RESET     PATHNAME
.
.         PACK      PATHNAME,PATHNAME,SP70,SP70,SP70
          MATCH     SP70,PATHNAME
          GOTO      KPTH9500 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      KPTH9999
.
KPTH9500  MOVE      ONE,EXIT
KPTH9999  RETURN
+
.******************************************************************************
.*                                  SFLD0000                                  *
.*                        Select Field                                        *
.******************************************************************************
SFLD0000  CALL      MAINQST                 * Select Item, (P)ost, (C)ancel ?
.
          COMPARE   ZERO,CCITEM
          GOTO      SFLD9999 IF EQUAL
          GOTO      SFLD1000 IF LESS
.
          MOVE      ZERO,EXIT
          IF        OPTION=3
            PERFORM   CCITEM,KCLM0000:             * Keyin claim code
                             KUSR0000:             * Keyin user id
                             KPTH0000              * Keyin pathname
          ELSE
            PERFORM   CCITEM,KCLM0000:             * Keyin claim code
                             KFND0000:             * Keyin Health fund
                             KTAB0000:             * Keyin health fund table 
                             KFTP0000:             * Keyin Per-diem/casepayment
                             KUSR0000:             * Keyin user id
                             KPTH0000              * Keyin pathname
          ENDIF
          BRANCH    EXIT,SFLD9999
          GOTO      SFLD0000
.
SFLD1000  MOVE      ONE,EXIT
SFLD9999  RETURN
+
.******************************************************************************
.         Keyin health fund group or health fund code
.******************************************************************************
KFND0000  IF        OPTION=1
            CALL      KFGR0000                * Keyin health fund group code
          ELSE
            CALL      KHFN0000                * Keyin health fund code
          ENDIF
KFND9999  RETURN
+
.******************************************************************************
.*                                  POST0000                                  *
.*                        Post record                                         *
.******************************************************************************
POST0000  CALL      OPEN0000            * Open tempfile
          MOVE      ZERO,REMFLAG        * Deleting selected claim/hf
.
          BRANCH    OPTION,POST2000     * by health fund group
.
          IF        OPTION=3
            MOVE      SP70,KYHFUND      * blank health fund
          ENDIF
          CALL      GFND0000            * Generate fees for the health fund
          GOTO      POST9999
.
.         Get health funds for the HF group
.
POST2000  MOVE      SP70,SAVKEY20
          PACK      KEY20,KYHFGRP,SP70
          CALL      RDSFUND3
POST4000  CALL      RDKFUND3
          BRANCH    OVRCD,POST9999
          MATCH     KYHFGRP,PTHFHGRP    * Same group?
          GOTO      POST9999 IF NOT EQUAL
          MATCH     "0000    ",HFTABL
          GOTO      POST4000 IF NOT EQUAL
.
          MOVE      HCODE,KYHFUND
          PACK      SAVKEY20,PTHFHGRP,HCODE,HFTABL,SP70
.
          CALL      GFND0000            * Generate fees for the health fund
.
          MOVE      SAVKEY20,KEY20
          CALL      RDFUND3             * Reposition
.
          GOTO      POST4000
.
POST9999  CLOSE     TEMPFILE,DELETE
          RETURN
+
.******************************************************************************
.*                                  PRHD0000                                  *
.*                        Print the selection details                         *
.******************************************************************************
PRHD0000  CALL      HEAD132
.
          IF        COPTION=1
            PRINT     *N,"Upload Theatre Fees"
          ELSE
            PRINT     *N,"Remove Theatre Fees"
          ENDIF
.
          IF        TFEETYPE=1
            PRINT     " for Per-diem"
          ELSE
            PRINT     " for Casepayment"
          ENDIF
.
          PRINT     *N,"Date     : ",CDATE:
                    *N,"Time     : ",CTIMEIS:
                    *N,"User ID  : ",USERID
.
          BRANCH    COPTION,PRHD1000,PRHD2000
          GOTO      PRHD9999
.
PRHD1000  PRINT     *N,"Contract ID: ",CONTRCID
.
          PRINT     *N,"Claim Code : ",KYCLAIM
.
          IF        OPTION=1
            PRINT     *N,"By Health Fund Group : ",KYHFGRP
          ELSE
            IF        OPTION=2
              PRINT     *N,"By Health Fund  : ",KYHFUND
            ELSE
              PRINT     *N,"Default Health Fund/table"
            ENDIF
          ENDIF
.
          IF        KYHFTAB=1
            MOVE      "All          ",KEY15
          ELSE
            MOVE      "As Per Upload",KEY15
          ENDIF
          PRINT     *N,"Health Fund Table          : ",KEY15:
                    *N,"Theatre Fees Load file     : ":
                    *N,"     ",PATHNAME
          CALL      UND132
          GOTO      PRHD9999
.
PRHD2000  PRINT     *N,"Contract ID: ",CONTRCID:
                    *N,"Claim Code : ",KYCLAIM
.
          IF        OPTION=1
            PRINT     *N,"By Health Fund Group : ",KYHFGRP
          ELSE
            IF        OPTION=2
              PRINT     *N,"By Health Fund  : ",KYHFUND
            ELSE
              PRINT     *N,"Default Health Fund/table"
            ENDIF
          ENDIF
.
PRHD9999  RETURN
+
.******************************************************************************
.*                                  GFND0000                                  *
.*                        Generate Fees of a health fund                      *
.******************************************************************************
GFND0000  
          MOVE      SP70,SAVCONTR
.
          MOVE      ZERO,LINECNTR
.
          OPEN      UTFEETXT,FNAMEI
GFND1000  READ      UTFEETXT,SEQ;XFLD0001,XFLD0002,XFLD0003,XFLD0004,XFLD0005:
                                 XFLD0006,XFLD0007,XFLD0008,XFLD0009,XFLD0010:
                                 XFLD0011,XFLD0012,XFLD0013,XFLD0014,XFLD0015:
                                 XFLD0016,XFLD0017,XFLD0018,XFLD0019,XFLD0020:
                                 XFLD0021,XFLD0022,XFLD0023,XFLD0024,XFLD0025:
                                 XFLD0026,XFLD0027,XFLD0028,XFLD0029,XFLD0030:
                                 XFLD0031,XFLD0032,XFLD0033,XFLD0034,XFLD0035:
                                 XFLD0036,XFLD0037,XFLD0038,XFLD0039,XFLD0040:
                                 XFLD0041,XFLD0042,XFLD0043,XFLD0044,XFLD0045:
                                 XFLD0046,XFLD0047,XFLD0048,XFLD0049,XFLD0050
          GOTO      GFND9000 IF OVER
.
          PACK      KEY60,XFLD0001,XFLD0002,SP70
          MATCH     SP70,KEY60
          GOTO      GFND1000 IF EQUAL       * skip blank line
.
          ADD       ONE,LINECNTR            * Text file line counter for error
.
          PACK      XCLMCD,XFLD0006,SP70
          PACK      XFLD0007,XFLD0007,SP70
          PACK      XFLD0009,XFLD0009,SP70
.
          IF        VALDPASS=1
            CALL      VFLD0000                * Validation pass so
            BRANCH    EXIT,GFND1000           * validate fields
          ENDIF
.
.
          PACK      XCONTR,XFLD0002,SP70
          MOVE      XCONTR,SAVCONTR
          MATCH     CONTRCID,XCONTR        * Same Contract ID ?
          IF        !@EQUAL
            MOVE      "Contract Id Mismatch",ERRORMSG
            CALL      PERR0000
            GOTO      GFND1000
          ENDIF
.
          MATCH     XCLMCD,KYCLAIM
          IF        !@EQUAL
            MOVE      "Claim Code Mismatch",ERRORMSG
            CALL      PERR0000
            GOTO      GFND1000
          ENDIF
.
          BRANCH    OPTION,GFND2100,GFND2200,GFND2400
          GOTO      GFND1000
.
GFND2100  PACK      XHFCOD,KYHFUND,SP70
          PACK      XHFTYP,XFLD0008,SP70
          GOTO      GFND3000
.
GFND2200  MATCH     XHFCOD,KYHFUND
          IF        !@EQUAL
            MOVE      "Health Fund Mismatch",ERRORMSG
            CALL      PERR0000
            GOTO      GFND1000
          ENDIF
.
          PACK      XHFTYP,XFLD0008,SP70
          GOTO      GFND3000
.
GFND2400  MOVE      SP70,XHFCOD
          MOVE      SP70,XHFTYP
.
.         Daycase indicator must be "D" or blank
.
GFND3000  MOVE      SP70,XDCASE
          MOVE      SP70,KEY1
          UNPACK    XFLD0009,KEY1
          MATCH     "D",KEY1
          IF        @EQUAL
            MOVE      "D",XDCASE             * Daycase indicator
          ENDIF
.
          PACK      KEY5,SP70
          PACK      KEY5,XFLD0010,SP70
          SQUEEZE   KEY5
          PACK      XLSMBS,KEY5,SP70
.
          MOVE      ZERO,XTREB1
          MOVE      ZERO,XTPAT1
          MOVE      ZERO,XTREB2
          MOVE      ZERO,XTPAT2
          MOVE      ZERO,XTREB3
          MOVE      ZERO,XTPAT3
          MOVE      ZERO,XTREB4
          MOVE      ZERO,XTPAT4
          MOVE      ZERO,XTREB5
          MOVE      ZERO,XTPAT5
          MOVE      ZERO,XTREB6
          MOVE      ZERO,XTPAT6
.
          MOVE      ZERO,XTREB7
          MOVE      ZERO,XTPAT7
          MOVE      ZERO,XTREB8
          MOVE      ZERO,XTPAT8
          MOVE      ZERO,XTREB9
          MOVE      ZERO,XTPAT9
          MOVE      ZERO,XTREB10
          MOVE      ZERO,XTPAT10
          MOVE      ZERO,XTREB11
          MOVE      ZERO,XTPAT11
          MOVE      ZERO,XTREB12
          MOVE      ZERO,XTPAT12
          MOVE      ZERO,XTREB13
          MOVE      ZERO,XTPAT13
          MOVE      ZERO,XTREB14
          MOVE      ZERO,XTPAT14
          MOVE      ZERO,XTREB15
          MOVE      ZERO,XTPAT15
          MOVE      ZERO,XTREB16
          MOVE      ZERO,XTPAT16
          MOVE      ZERO,XTREB17
          MOVE      ZERO,XTPAT17
          MOVE      ZERO,XTREB18
          MOVE      ZERO,XTPAT18
          MOVE      ZERO,XTREB19
          MOVE      ZERO,XTPAT19
          MOVE      ZERO,XTREB20
          MOVE      ZERO,XTPAT20
.
          STRIP     XFLD0011
          MOVE      ZERO,F3
          MOVELPTR  XFLD0011,F3
          IF        F3>0
            MOVE      XFLD0011,XTREB1
            MOVE      XFLD0012,XTPAT1
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB1      * no more stepdown fee for casepayment 
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0013
          MOVE      ZERO,F3
          MOVELPTR  XFLD0013,F3
          IF        F3>0
            MOVE      XFLD0013,XTREB2
            MOVE      XFLD0014,XTPAT2
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB2      * no more stepdown fee for casepayment 
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0015
          MOVE      ZERO,F3
          MOVELPTR  XFLD0015,F3
          IF        F3>0
            MOVE      XFLD0015,XTREB3
            MOVE      XFLD0016,XTPAT3
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB3      * no more stepdown fee for casepayment 
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0017
          MOVE      ZERO,F3
          MOVELPTR  XFLD0017,F3
          IF        F3>0
            MOVE      XFLD0017,XTREB4
            MOVE      XFLD0018,XTPAT4
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB4      * no more stepdown fee for casepayment 
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0019
          MOVE      ZERO,F3
          MOVELPTR  XFLD0019,F3
          IF        F3>0
            MOVE      XFLD0019,XTREB5
            MOVE      XFLD0020,XTPAT5
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB5      * no more stepdown fee for casepayment 
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0021
          MOVE      ZERO,F3
          MOVELPTR  XFLD0021,F3
          IF        F3>0
            MOVE      XFLD0021,XTREB6
            MOVE      XFLD0022,XTPAT6
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB6      * no more stepdown fee for casepayment 
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0023
          MOVE      ZERO,F3
          MOVELPTR  XFLD0023,F3
          IF        F3>0
            MOVE      XFLD0023,XTREB7
            MOVE      XFLD0024,XTPAT7
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB7      * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0025
          MOVE      ZERO,F3
          MOVELPTR  XFLD0025,F3
          IF        F3>0
            MOVE      XFLD0025,XTREB8
            MOVE      XFLD0026,XTPAT8
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB8      * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0027
          MOVE      ZERO,F3
          MOVELPTR  XFLD0027,F3
          IF        F3>0
            MOVE      XFLD0027,XTREB9
            MOVE      XFLD0028,XTPAT9
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB9      * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0029
          MOVE      ZERO,F3
          MOVELPTR  XFLD0029,F3
          IF        F3>0
            MOVE      XFLD0029,XTREB10
            MOVE      XFLD0030,XTPAT10
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB10     * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0031
          MOVE      ZERO,F3
          MOVELPTR  XFLD0031,F3
          IF        F3>0
            MOVE      XFLD0031,XTREB11
            MOVE      XFLD0032,XTPAT11
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB11     * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0033
          MOVE      ZERO,F3
          MOVELPTR  XFLD0033,F3
          IF        F3>0
            MOVE      XFLD0033,XTREB12
            MOVE      XFLD0034,XTPAT12
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB12     * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0035
          MOVE      ZERO,F3
          MOVELPTR  XFLD0035,F3
          IF        F3>0
            MOVE      XFLD0035,XTREB13
            MOVE      XFLD0036,XTPAT13
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB13     * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0037
          MOVE      ZERO,F3
          MOVELPTR  XFLD0037,F3
          IF        F3>0
            MOVE      XFLD0037,XTREB14
            MOVE      XFLD0038,XTPAT14
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB14     * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0039
          MOVE      ZERO,F3
          MOVELPTR  XFLD0039,F3
          IF        F3>0
            MOVE      XFLD0039,XTREB15
            MOVE      XFLD0040,XTPAT15
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB15     * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0041
          MOVE      ZERO,F3
          MOVELPTR  XFLD0041,F3
          IF        F3>0
            MOVE      XFLD0041,XTREB16
            MOVE      XFLD0042,XTPAT16
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB16     * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0043
          MOVE      ZERO,F3
          MOVELPTR  XFLD0043,F3
          IF        F3>0
            MOVE      XFLD0043,XTREB17
            MOVE      XFLD0044,XTPAT17
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB17     * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0045
          MOVE      ZERO,F3
          MOVELPTR  XFLD0045,F3
          IF        F3>0
            MOVE      XFLD0045,XTREB18
            MOVE      XFLD0046,XTPAT18
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB18     * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0047
          MOVE      ZERO,F3
          MOVELPTR  XFLD0047,F3
          IF        F3>0
            MOVE      XFLD0047,XTREB19
            MOVE      XFLD0048,XTPAT19
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB19     * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
          STRIP     XFLD0049
          MOVE      ZERO,F3
          MOVELPTR  XFLD0049,F3
          IF        F3>0
            MOVE      XFLD0049,XTREB20
            MOVE      XFLD0050,XTPAT20
          ELSE
            IF        TFEETYPE<>1
              MOVE      "-1",XTREB20     * no more stepdown fee for casepayment
            ENDIF
            GOTO      GFND3600
          ENDIF
.
GFND3600  COMPARE   THREE,OPTION
          GOTO      GFND3800 IF EQUAL       * Default blank HF/table
.
          BRANCH    KYHFTAB,GFND4000        * All Health fund table or type
.
.         as per Upload file
.
GFND3800  CALL      LTFE0000
          GOTO      GFND1000
.
.         All health fund table of the health fund
.
GFND4000  PACK      KEY14,KYHFUND,SP70
          CALL      RDSFUND1
GFND5000  CALL      RDKFUND1
          BRANCH    OVRCD,GFND6000
          MATCH     KYHFUND,HCODE
          GOTO      GFND6000 IF NOT EQUAL
.
          MATCH     "0000    ",HFTABL
          GOTO      GFND5000 IF EQUAL  
.
          BRANCH    PHFTACT,GFND5000    * Inactive
.
.         Casepayment - all health fund table type
.
          CALL      CHKFND00            * Check if HF type had been processed
          BRANCH    EXIT,GFND5000
.
          MOVE      PTHFBCAT,XHFTYP     * Health fund type
          CALL      LTFE0000
          GOTO      GFND5000            * get next record
.
GFND6000  CALL      DTMP0000            * clear tempfile
          GOTO      GFND1000
.
GFND9000  CLOSE     UTFEETXT
.
GFND9999  RETURN
+
.******************************************************************************
.*                Deleting tempfile                                           *
.******************************************************************************
DTMP0000  MOVE      SP70,KEY3
          CALL      RSTEMP1
          CALL      RKTEMP1
          BRANCH    OVRCD,DTMP9999
.
          PACK      KEY3,DIM3,SP70
          CALL      DETEMP1
          GOTO      DTMP0000
DTMP9999  RETURN
+
.******************************************************************************
.*                                  CHKFND00                                  *
.*                        Check if this HF type has been processed            *
.******************************************************************************
CHKFND00  MOVE      PTHFBCAT,KEY3
          CALL      RATEMP1
          COMPARE   ZERO,OVRCD
          GOTO      CHKFND90 IF EQUAL      * has been processed
.
          CALL      WRTEMP1
          MOVE      ZERO,EXIT
          GOTO      CHKFND99
.
CHKFND90  MOVE      ONE,EXIT
CHKFND99  RETURN
+
.******************************************************************************
.*                                  LTFE0000                                  *
.*                             Write Theatre fees record                      *
.******************************************************************************
LTFE0000  COMPARE   ONE,TFEETYPE
          GOTO      LTFE2000 IF NOT EQUAL        * Theatre fees Casepayment
.
          UNPACK    SP70,TFCLM,TFHFUND,PTTFHTYP,TFDAYC,TFENDMBS,PTTFCNID
          MATCH     SP70,XLSMBS
          GOTO      LTFE9000 IF EQUAL
.
          PACK      KEY24,XCLMCD,XHFCOD,XHFTYP,XDCASE,XLSMBS,XCONTR,SP70
          CALL      RDTFEE1
          IF        OVRCD=1
            UNPACK    KEY24,TFCLM,TFHFUND,PTTFHTYP,TFDAYC,TFENDMBS,PTTFCNID
            MOVE      XTREB1,TFHF1
            MOVE      XTPAT1,TFPAT1
            MOVE      XTREB2,TFHF2
            MOVE      XTPAT2,TFPAT2
            MOVE      XTREB3,TFHF3
            MOVE      XTPAT3,TFPAT3
            MOVE      XTREB4,TFHF4
            MOVE      XTPAT4,TFPAT4
            MOVE      XTREB5,TFHF5
            MOVE      XTPAT5,TFPAT5
            MOVE      XTREB6,TFHF6
            MOVE      XTPAT6,TFPAT6
.
            MOVE      SP70,TFNINV
            MATCH     "1",PTCNPPIN
            IF        !@EQUAL
              MOVE      "1",TFNINV
            ENDIF
            IF        VALDPASS=0
              ADD       ONE,ADDCOUNT          * Total records added
              CALL      WRTFEE1
            ENDIF
          ELSE
            MOVE      XTREB1,TFHF1
            MOVE      XTPAT1,TFPAT1
            MOVE      XTREB2,TFHF2
            MOVE      XTPAT2,TFPAT2
            MOVE      XTREB3,TFHF3
            MOVE      XTPAT3,TFPAT3
            MOVE      XTREB4,TFHF4
            MOVE      XTPAT4,TFPAT4
            MOVE      XTREB5,TFHF5
            MOVE      XTPAT5,TFPAT5
            MOVE      XTREB6,TFHF6
            MOVE      XTPAT6,TFPAT6
.
            MOVE      SP70,TFNINV
            MATCH     "1",PTCNPPIN
            IF        !@EQUAL
              MOVE      "1",TFNINV
            ENDIF
            IF        VALDPASS=0
              ADD       ONE,UPDCOUNT        * Total records updated
              CALL      UPTFEE1
            ENDIF
          ENDIF
          GOTO      LTFE9999
.
.         Casepayment
.
LTFE2000  MOVE      XCONTR,PTCTCNID              * Contract ID
          UNPACK    SP70,PTCTCLMN,PTCTHFND,PTCTTABT,PTCTCASM,PTCTMBSB,DPTCTDCA
          MATCH     SP70,XLSMBS
          GOTO      LTFE9000 IF EQUAL
          REP       "D1 0",XDCASE
          MOVE      ZERO,F2
.
LTFE3000  COMPARE   TWENTY,F2
          GOTO      LTFE9999 IF NOT LESS
.
          ADD       ONE,F2
          MOVE      ZERO,FORM12P2
          MOVE      ZERO,FORM12X2
          LOAD      FORM12P2,F2,XTREB1,XTREB2,XTREB3,XTREB4,XTREB5:
                                XTREB6,XTREB7,XTREB8,XTREB9,XTREB10:
                                XTREB11,XTREB12,XTREB13,XTREB14,XTREB15:
                                XTREB16,XTREB17,XTREB18,XTREB19,XTREB20
          LOAD      FORM12X2,F2,XTPAT1,XTPAT2,XTPAT3,XTPAT4,XTPAT5:
                                XTPAT6,XTPAT7,XTPAT8,XTPAT9,XTPAT10:
                                XTPAT11,XTPAT12,XTPAT13,XTPAT14,XTPAT15:
                                XTPAT16,XTPAT17,XTPAT18,XTPAT19,XTPAT20
.
          COMPARE   "-1",FORM12P2
          GOTO      LTFE9999 IF EQUAL
.
          MOVE      SP70,KEY9
          UNPACK    XLSMBS,KEY3
          PACK      KEY33,XCONTR,XCLMCD,XHFCOD,XHFTYP,KEY9,KEY3,XDCASE,F2,SP70
          CALL      RDPTCTF1
          BRANCH    OVRCD,LTFE6000
.
          MOVE      FORM12P2,PTCTDREB
          MOVE      FORM12X2,PTCTDPAT
          IF        VALDPASS=0
            ADD       ONE,UPDCOUNT        * Total records updated
            CALL      UPPTCTF1
          ENDIF
          GOTO      LTFE3000
.
LTFE6000  UNPACK    KEY33,PTCTCNID,PTCTCLMN,PTCTHFND,PTCTTABT,PTCTCASM:
                          PTCTMBSB,DPTCTDCA,DPTCTITM
          MOVE      DPTCTDCA,PTCTDCAS
          MOVE      DPTCTITM,PTCTITMS
          PACK      KEY33,PTCTCNID,PTCTCLMN,PTCTHFND,PTCTTABT,PTCTCASM:
                          PTCTMBSB,PTCTDCAS,PTCTITMS,SP70
          MOVE      FORM12P2,PTCTDREB
          MOVE      FORM12X2,PTCTDPAT
.
          IF        VALDPASS=0
            ADD       ONE,ADDCOUNT          * Total records added
            CALL      WRPTCTF1
          ENDIF
          GOTO      LTFE3000
.
LTFE9000  MOVE      ONE,EXIT
LTFE9999  RETURN
+
.******************************************************************************
.         Remove Theatre Fees
.******************************************************************************
RMTF0000  BRANCH    OPTION,RMTF2000         * by health fund group
          IF        OPTION=3
            MOVE      SP70,KYHFUND          * blank health fund
          ENDIF
          CALL      DREC0000                * Deleting existing records
          GOTO      RMTF9999
.
.         Get health funds for the HF group
.
RMTF2000  MOVE      SP70,SAVKEY20
          PACK      KEY20,KYHFGRP,SP70
          CALL      RDSFUND3
RMTF4000  CALL      RDKFUND3
          BRANCH    OVRCD,RMTF9999
          MATCH     KYHFGRP,PTHFHGRP    * Same group?
          GOTO      RMTF9999 IF NOT EQUAL
          MATCH     "0000    ",HFTABL
          GOTO      RMTF4000 IF NOT EQUAL
.
          MOVE      HCODE,KYHFUND
          PACK      SAVKEY20,PTHFHGRP,HCODE,HFTABL,SP70
.
          CALL      DREC0000                * Deleting existing records
.
          MOVE      SAVKEY20,KEY20
          CALL      RDFUND3                 * Reposition
          GOTO      RMTF4000
.
RMTF9999  RETURN
+
.******************************************************************************
.         Deleting existing records
.******************************************************************************
DREC0000  BRANCH    TFEETYPE,DREC1000,DREC2000
.
.         Per diem
.
DREC1000  PACK      KEY24,CONTRCID,KYCLAIM,KYHFUND,SP70
          CALL      RDSTFEE2
          CALL      RDKTFEE2
          BRANCH    OVRCD,DREC9999
.
          MATCH     CONTRCID,PTTFCNID            * Same Contract ID
          GOTO      DREC9999 IF NOT EQUAL
          MATCH     KYCLAIM,TFCLM
          GOTO      DREC9999 IF NOT EQUAL
          MATCH     KYHFUND,TFHFUND
          GOTO      DREC9999 IF NOT EQUAL
.
          PACK      KEY24,PTTFCNID,TFCLM,TFHFUND,PTTFHTYP,TFDAYC:
                          TFENDMBS,SP70
          MATCH     SP70,KEY24
          GOTO      DREC9999 IF EQUAL
          CALL      DETFEE2
          GOTO      DREC1000
.
.         Casepayment
.
DREC2000  PACK      KEY33,CONTRCID,KYCLAIM,KYHFUND,SP70
          CALL      RSPTCTF1
          CALL      RKPTCTF1
          BRANCH    OVRCD,DREC9999
.
          MATCH     CONTRCID,PTCTCNID            * Same Contract ID
          GOTO      DREC9999 IF NOT EQUAL
          MATCH     KYCLAIM,PTCTCLMN
          GOTO      DREC9999 IF NOT EQUAL
          MATCH     KYHFUND,PTCTHFND
          GOTO      DREC9999 IF NOT EQUAL
.
          PACK      KEY33,PTCTCNID,PTCTCLMN,PTCTHFND,PTCTTABT,PTCTCASM,PTCTMBSB:
                          DPTCTDCA,DPTCTITM,SP70
          MATCH     SP70,KEY33
          GOTO      DREC9999 IF EQUAL
          CALL      DEPTCTF1
          GOTO      DREC2000
.
DREC9999  RETURN
+
.******************************************************************************
.         Execute us1 command before processing
.******************************************************************************
EXCUS000  CLEAR     CMDLINE
          APPEND    "ibahms92.us1 ",CMDLINE
          APPEND    FNAMEI,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
EXCUS999  RETURN
+
.******************************************************************************
.*                                  OPEN0000              Called by: INCL000  *
.*                              Open The Tempfile         RSENT000 & RREJT000 *
.******************************************************************************
.
OPEN0000  CALL      KILL0000                * Delete the tempfile
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAME1,CMDLINE
          APPEND    " 4 U1-3",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * isbuild the temp file
          OPEN      TEMPFILE,FNAME1
.
OPEN9000  MOVE      ZERO,EXIT
OPEN9999  RETURN
.
.******************************************************************************
.*                                 KILL0000               Called by: ML0000   *
.*                            Delete The Tempfile                  & OPEN0000 *
.******************************************************************************
KILL0000  CLOSE     TEMPFILE
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAME1,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * iserase the temp file
.
KILL9000  MOVE      ZERO,EXIT
KILL9999  RETURN
+
.******************************************************************************
. Clear total vars
.******************************************************************************
CTOT0000  MOVE      ZERO,ERRCOUNT
          MOVE      ZERO,ADDCOUNT
          MOVE      ZERO,UPDCOUNT
.
CTOT999   RETURN
+
.******************************************************************************
. Print total line
.******************************************************************************
PTOT0000  CALL      UND132
.
          PRINT     *1,"| Total Errors  : ",ERRCOUNT,*132,"|"
          PRINT     *1,"| Total Added   : ",ADDCOUNT,*132,"|"
          PRINT     *1,"| Total Updated : ",UPDCOUNT,*132,"|"
.
          CALL      UND132
.
PTOT9999  RETURN
+
.******************************************************************************
. Validate theatre fee input text file fields
.******************************************************************************
VFLD0000  MOVE      ZERO,EXIT
.
.         B for Banding (perdiem), C for Casemix
.         TFEETYPE=1 for perdiem and TFEETYP=2 for Casemix
.
          PACK      XTFTYP,XFLD0001,SP70
          IF        TFEETYPE=1
            MATCH     "B",XTFTYP
            GOTO      VFLD1000 IF EQUAL
          ELSE
            IF        TFEETYPE=2
              MATCH     "C",XTFTYP
              GOTO      VFLD1000 IF EQUAL
            ENDIF
          ENDIF
          CLEAR     ERRORMSG
          APPEND    "Invalid Contract Type: ",ERRORMSG
          APPEND    XTFTYP,ERRORMSG
          APPEND    SP70,ERRORMSG
          RESET     ERRORMSG
          CALL      PERR0000
          MOVE      ONE,EXIT
.
VFLD1000  PACK      XCONTR,XFLD0002,SP70
          MATCH     SP70,XFLD0002
          IF        !@EQUAL
            PACK      KEY6,XFLD0002,SP70
            CALL      RDPMCID1
            IF        OVRCD=1
              CLEAR     ERRORMSG
              APPEND    "Invalid Contract Id: ",ERRORMSG
              APPEND    XCONTR,ERRORMSG
              APPEND    SP70,ERRORMSG
              RESET     ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ELSE
              PACK      XEFDAT,XFLD0004,SP70
              MATCH     PMCIFDAT,XFLD0004
              IF        !@EQUAL
                CLEAR     ERRORMSG
                APPEND    "Invalid Eff.From Date-",ERRORMSG
                APPEND    XEFDAT,ERRORMSG
                APPEND    SP70,ERRORMSG
                RESET     ERRORMSG
                CALL      PERR0000
                MOVE      ONE,EXIT
              ENDIF
              PACK      XEDATE,XFLD0005,SP70
              PACK      XFLD0005,XFLD0005,SP70
              MATCH     PMCITDAT,XFLD0005
              IF        !@EQUAL
                CLEAR     ERRORMSG
                APPEND    "Invalid Eff.To Date-",ERRORMSG
                APPEND    XEDATE,ERRORMSG
                APPEND    SP70,ERRORMSG
                RESET     ERRORMSG
                CALL      PERR0000
                MOVE      ONE,EXIT
              ENDIF
            ENDIF
          ENDIF
.
          PACK      XCLMCD,XFLD0006,SP70
          MATCH     SP70,XFLD0006
          IF        !@EQUAL
            PACK      KEY5,ANSC,ANSL,XFLD0006,SP70
            CALL      RDCODE1
            BRANCH    OVRCD,VFLD2000
            MOVE      XCLMCD,KEY3
            CALL      RDPTCFA1
            BRANCH    OVRCD,VFLD2000
            GOTO      VFLD3000
          ENDIF
.
VFLD2000  CLEAR     ERRORMSG
          APPEND    "Invalid Claim Code: ",ERRORMSG
          APPEND    XCLMCD,ERRORMSG
          APPEND    SP70,ERRORMSG
          RESET     ERRORMSG
          CALL      PERR0000
          MOVE      ONE,EXIT
.
VFLD3000  MATCH     SP70,XFLD0007
          IF        !@EQUAL
            PACK      XHFCOD,XFLD0007,SP70
            PACK      KEY6,XFLD0007,SP70
            PACK      KEY14,KEY6,ZERO8,SP70
            CALL      RDFUND1
            IF        OVRCD=1
              CLEAR     ERRORMSG
              APPEND    "Invalid Health Fund: ",ERRORMSG
              APPEND    XHFCOD,ERRORMSG
              APPEND    SP70,ERRORMSG
              RESET     ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XHFTYP,XFLD0008,SP70
          MATCH     SP70,XFLD0008
          IF        !@EQUAL
            PACK      KEY5,ANSH,ANST,XFLD0008,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              CLEAR     ERRORMSG
              APPEND    "Invalid HF Table Type: ",ERRORMSG
              APPEND    XHFTYP,ERRORMSG
              APPEND    SP70,ERRORMSG
              RESET     ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XSTTYP,XFLD0003,SP70
          MATCH     SP70,XFLD0003
          IF        !@EQUAL
            MOVE      SP70,KEY1
            PACK      KEY1,XFLD0003
            REP       "1020",KEY1
            MATCH     "0",KEY1
            IF        !@EQUAL
              MOVE      "Start Type must be 0,1 or 2",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          MATCH     SP70,XHFCOD
          IF        !@EQUAL
            PACK      KEY14,XHFCOD,ZERO8,SP70
            CALL      RDPTFX11
            IF        OVRCD=0
              MATCH     PTFXCEFR,XSTTYP
              IF        !@EQUAL
                MOVE      "Invalid Start Type for HF  ",ERRORMSG
                CALL      PERR0000
                MOVE      ONE,EXIT
              ENDIF
            ENDIF
          ELSE
            MOVE      XCLMCD,KEY3
            CALL      RDPTCFA1
            IF        OVRCD=0
              MATCH     PTCFCEFR,XSTTYP
              IF        !@EQUAL
                MOVE      "Invalid Start Type for Claim",ERRORMSG
                CALL      PERR0000
                MOVE      ONE,EXIT
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,XFLD0009
          IF        !@EQUAL
            MATCH     ANSD,XFLD0009
            IF        !@EQUAL
              MOVE      "Invalid Day Case Indicator",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          MATCH     SP70,XFLD0010
          IF        !@EQUAL
            PACK      KEY5,ANST,ANSB,XFLD0010,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      "Invalid Theatre Banding",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0011,XFLD0011,SP70
          MATCH     SP70,XFLD0011
          IF        !@EQUAL
            SQUEEZE   XFLD0011
            TYPE      XFLD0011
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 1st Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0012,XFLD0012,SP70
          MATCH     SP70,XFLD0012
          IF        !@EQUAL
            SQUEEZE   XFLD0012
            TYPE      XFLD0012
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 1st Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0013,XFLD0013,SP70
          MATCH     SP70,XFLD0013
          IF        !@EQUAL
            SQUEEZE   XFLD0013
            TYPE      XFLD0013
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 2nd Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0014,XFLD0014,SP70
          MATCH     SP70,XFLD0014
          IF        !@EQUAL
            SQUEEZE   XFLD0014
            TYPE      XFLD0014
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 2nd Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0015,XFLD0015,SP70
          MATCH     SP70,XFLD0015
          IF        !@EQUAL
            SQUEEZE   XFLD0015
            TYPE      XFLD0015
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 3rd Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0016,XFLD0016,SP70
          MATCH     SP70,XFLD0016
          IF        !@EQUAL
            SQUEEZE   XFLD0016
            TYPE      XFLD0016
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 3rd Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0017,XFLD0017,SP70
          MATCH     SP70,XFLD0017
          IF        !@EQUAL
            SQUEEZE   XFLD0017
            TYPE      XFLD0017
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 4th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0018,XFLD0018,SP70
          MATCH     SP70,XFLD0018
          IF        !@EQUAL
            SQUEEZE   XFLD0018
            TYPE      XFLD0018
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 4th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0019,XFLD0019,SP70
          MATCH     SP70,XFLD0019
          IF        !@EQUAL
            SQUEEZE   XFLD0019
            TYPE      XFLD0019
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 5th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0020,XFLD0020,SP70
          MATCH     SP70,XFLD0020
          IF        !@EQUAL
            SQUEEZE   XFLD0020
            TYPE      XFLD0020
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 5th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0021,XFLD0021,SP70
          MATCH     SP70,XFLD0021
          IF        !@EQUAL
            SQUEEZE   XFLD0021
            TYPE      XFLD0021
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 6th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0022,XFLD0022,SP70
          MATCH     SP70,XFLD0022
          IF        !@EQUAL
            SQUEEZE   XFLD0022
            TYPE      XFLD0022
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 6th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0023,XFLD0023,SP70
          MATCH     SP70,XFLD0023
          IF        !@EQUAL
            SQUEEZE   XFLD0023
            TYPE      XFLD0023
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 7th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0024,XFLD0024,SP70
          MATCH     SP70,XFLD0024
          IF        !@EQUAL
            SQUEEZE   XFLD0024
            TYPE      XFLD0024
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 7th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0025,XFLD0025,SP70
          MATCH     SP70,XFLD0025
          IF        !@EQUAL
            SQUEEZE   XFLD0025
            TYPE      XFLD0025
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 8th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0026,XFLD0026,SP70
          MATCH     SP70,XFLD0026
          IF        !@EQUAL
            SQUEEZE   XFLD0026
            TYPE      XFLD0026
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 8th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0027,XFLD0027,SP70
          MATCH     SP70,XFLD0027
          IF        !@EQUAL
            SQUEEZE   XFLD0027
            TYPE      XFLD0027
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 9th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0028,XFLD0028,SP70
          MATCH     SP70,XFLD0028
          IF        !@EQUAL
            SQUEEZE   XFLD0028
            TYPE      XFLD0028
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 9th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0029,XFLD0029,SP70
          MATCH     SP70,XFLD0029
          IF        !@EQUAL
            SQUEEZE   XFLD0029
            TYPE      XFLD0029
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 10th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0030,XFLD0030,SP70
          MATCH     SP70,XFLD0030
          IF        !@EQUAL
            SQUEEZE   XFLD0030
            TYPE      XFLD0030
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 10th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0031,XFLD0031,SP70
          MATCH     SP70,XFLD0031
          IF        !@EQUAL
            SQUEEZE   XFLD0031
            TYPE      XFLD0031
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 11th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0032,XFLD0032,SP70
          MATCH     SP70,XFLD0032
          IF        !@EQUAL
            SQUEEZE   XFLD0032
            TYPE      XFLD0032
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 11th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0033,XFLD0033,SP70
          MATCH     SP70,XFLD0033
          IF        !@EQUAL
            SQUEEZE   XFLD0033
            TYPE      XFLD0033
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 12th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0034,XFLD0034,SP70
          MATCH     SP70,XFLD0034
          IF        !@EQUAL
            SQUEEZE   XFLD0034
            TYPE      XFLD0034
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 12th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0035,XFLD0035,SP70
          MATCH     SP70,XFLD0035
          IF        !@EQUAL
            SQUEEZE   XFLD0035
            TYPE      XFLD0035
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 13th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0036,XFLD0036,SP70
          MATCH     SP70,XFLD0036
          IF        !@EQUAL
            SQUEEZE   XFLD0036
            TYPE      XFLD0036
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 13th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0037,XFLD0037,SP70
          MATCH     SP70,XFLD0037
          IF        !@EQUAL
            SQUEEZE   XFLD0037
            TYPE      XFLD0037
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 14th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0038,XFLD0038,SP70
          MATCH     SP70,XFLD0038
          IF        !@EQUAL
            SQUEEZE   XFLD0038
            TYPE      XFLD0038
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 14th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0039,XFLD0039,SP70
          MATCH     SP70,XFLD0039
          IF        !@EQUAL
            SQUEEZE   XFLD0039
            TYPE      XFLD0039
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 15th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0040,XFLD0040,SP70
          MATCH     SP70,XFLD0040
          IF        !@EQUAL
            SQUEEZE   XFLD0040
            TYPE      XFLD0040
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 15th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0041,XFLD0041,SP70
          MATCH     SP70,XFLD0041
          IF        !@EQUAL
            SQUEEZE   XFLD0041
            SQUEEZE   XFLD0041
            TYPE      XFLD0041
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 16th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0042,XFLD0042,SP70
          MATCH     SP70,XFLD0042
          IF        !@EQUAL
            SQUEEZE   XFLD0042
            TYPE      XFLD0042
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 16th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0043,XFLD0043,SP70
          MATCH     SP70,XFLD0043
          IF        !@EQUAL
            SQUEEZE   XFLD0043
            TYPE      XFLD0043
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 17th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0044,XFLD0044,SP70
          MATCH     SP70,XFLD0044
          IF        !@EQUAL
            SQUEEZE   XFLD0044
            TYPE      XFLD0044
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 17th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0045,XFLD0045,SP70
          MATCH     SP70,XFLD0045
          IF        !@EQUAL
            SQUEEZE   XFLD0045
            TYPE      XFLD0045
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 18th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0046,XFLD0046,SP70
          MATCH     SP70,XFLD0046
          IF        !@EQUAL
            SQUEEZE   XFLD0046
            TYPE      XFLD0046
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 18th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0047,XFLD0047,SP70
          MATCH     SP70,XFLD0047
          IF        !@EQUAL
            SQUEEZE   XFLD0047
            TYPE      XFLD0047
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 19th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0048,XFLD0048,SP70
          MATCH     SP70,XFLD0048
          IF        !@EQUAL
            SQUEEZE   XFLD0048
            TYPE      XFLD0048
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 19th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0049,XFLD0049,SP70
          MATCH     SP70,XFLD0049
          IF        !@EQUAL
            SQUEEZE   XFLD0049
            TYPE      XFLD0049
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 20th Rebate Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
          PACK      XFLD0050,XFLD0050,SP70
          MATCH     SP70,XFLD0050
          IF        !@EQUAL
            SQUEEZE   XFLD0050
            TYPE      XFLD0050
            IF        !@EQUAL | @EOS
              MOVE      "Invalid 20th Patient Amount",ERRORMSG
              CALL      PERR0000
              MOVE      ONE,EXIT
            ENDIF
          ENDIF
.
VFLD9999  RETURN
+
.******************************************************************************
. Print error line
.******************************************************************************
PERR0000  COMPARE   ZERO,ERRCOUNT
          CALL      PERH0000 IF EQUAL
.
          ADD       ONE,ERRCOUNT            * Total error count
.
          PACK      XCONTR,XFLD0002,SP70
          PACK      XCLMCD,XFLD0006,SP70
          PACK      XHFCOD,XFLD0007,SP70
          PRINT     *1,"|",LINECNTR,*12,"|",ERRORMSG,*44,"|":
                    XCONTR,*60," | ",XCLMCD,*75," | ",XHFCOD,*132,"|"
.
PERR9999  RETURN
+
.******************************************************************************
.         Print error header
.******************************************************************************
PERH0000  CALL      HEAD132
          CALL      UND132
          PRINT     *1,"| Line No.",*12,"|Error Messages",*44,"|Contract ID":
                    *60," |Claim Code",*75," |Health Fund",*132,"|"
          CALL      UND132
PERH9999  RETURN
+
.******************************************************************************
RATEMP1   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMPFILE,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   RESET     KEY3
          WRITE     TEMPFILE,KEY3;KEY3
          RETURN
.
RSTEMP1  RESET     KEY3
         READ      TEMPFILE,KEY3;;
         RETURN
.
RKTEMP1  MOVE      ZERO,OVRCD
         READKS    TEMPFILE;DIM3
         GOTO      OVERCOND IF OVER
         RETURN
.
DETEMP1  MOVE      ZERO,OVRCD
         RESET     KEY3
         DELETE    TEMPFILE,KEY3
         RETURN
.
.******************************************************************************
          INC       STD001IO
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PATCODIO/INC
          INC       PATFN1IO/INC            * Health fund file
          INC       PATFX1IO/INC            * Health fund file
          INC       PATHGPIO/INC            * Health fund group
          INC       PATTFEIO/INC            * Theatre Fees file
          INC       PATCFAIO/INC            * Claim code file
          INC       PATCTFIO/INC            * Casepayment Theatre Fees file
          INC       PMSCIDIO/INC            * Contract ID file
          INC       WEBERRIO/INC                 * Web Server Error Logging
.
