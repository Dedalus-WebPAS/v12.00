. **********************************************************************
. *                P R O G R A M  S U M M A R Y                        *
. *                - - - - - - -  - - - - - - -                        *
. *                                                                    *
. * PROGRAM NAME:          IBACMENU                                    *
. * FUNCTION:              TURN ON & OFF SYSTEMS                       *
. * AUTHOR:                SOMEONE FROM THE PAST                       *
. * MODIFICATIONS:                                                     *
. **********************************************************************
. * V10.02.01 01/04/2011  Jill Parkinson CAR 239574                    *
. *           Removed open of ibaprntf                                 *
. * C2.09.B01 06.11.2000  Sandra Barcham                               *
. *           Recompiled for change to ibaspolf                        *
. **********************************************************************
. * C2.00.00  27/11/1998  Steve Armstrong                              *
. *           Mods to use X to Exit instead of E                       *
. *           22/10/1998  Glenn Berry      5.07 changes                *
. *           Display Full Date on Line 2                              *
. **********************************************************************
. * C1.00.08  08/10/1998  Steve Armstrong                              *
. *           Mods to use parameters from IBACONFD for new security    *
. *           feature.                                                 *
. * C1.00.07  09/01/1998  Darren Jones                                 *
. *           Fix new security features after QA                       *
. * C1.00.06  15/12/1997  Paul Howells                                 *
. *           Added new security                                       *
. * C1.00.05  27/12/1995  Greg Horvat                                  *
. *           Changed the christmas tree & the champagne glass to      *
. *           include 'E' To Exit                                      *
. * C1.00.04  05/10/1995  MATT                                         *
. *           Redefine SYSMES as FILE                                  *
. * C1.00.03  13/02/1995  Greg Horvat      SRF 134920 134922 134932    *
. *           Recompiled for IBAPRINT                                  *
. * C1.00.02  06/02/1995  Graeme Williams                              *
. *           Pad out UNIX login id before checking                    *
. * C1.00.01  21/12/1994  Peter Eddey   rel 5.02                       *
. *           Fixed for direct to menu access                          *
. * C1.00.00  28/09/1994  Peter Eddey   rel 5.02                       *
. *           Added new security                                       *
. **********************************************************************
. * V6.01.01  ** Global Recompile **                                   *
. * V6.01.02  20/07/1994  Graeme Williams  SRF 130914                  *
. *           Added option to log curr. security codes                 *
. **********************************************************************
. * V6.00.04  06/12/1993  Graeme Williams                              *
. *           Clear FIRSTTIM after "E" from systm                      *
. *           menu.                                                    *
. * V6.00.03  27/09/1993  Steve O'Gorman                               *
. *           SRF's 124007 and 121024                                  *
. *           Recompile for change to CHEKMESS                         *
. * V6.00.02  16/02/1993  Graeme Williams                              *
. *           Check for 0 or negative numbers                          *
. *           when selecting system.                                   *
. *           SRF 120739                                               *
. * V6.00.01  13/11/1992 Steve O'Gorman                                *
. *           Removed the '*' option.                                  *
. *           Use ANYOPROG as a Menu Name Off                          *
. *           IBACMENU                                                 *
. * V6.00     30/08/1991 Steve O'Gorman                                *
. *           Re-Wrote for new file                                    *
. **********************************************************************
.
          INC       STD001FD
.
          INC       IBACONFD/INC
.
          INC       IBAPRNFD/INC
          INC       IBAPORFD/INC
.
          INC       IBAMDPFD/INC
          INC       IBAMSLFD/INC
          INC       IBASECFD/INC
          INC       IBASMAFD/INC
          INC       IBAUSEFD/INC
.
          INC       BDSYSMES/INC
          INC       CHECKDAT/INC
          INC       IBASLOFD/INC
          INC       IBASAUFD/INC
.
.********************************************************************** 
.*                            Constants                               *
.********************************************************************** 
.
SYSTFILE  FILE      ASCII, FIXED=256
SYSMES    FILE     ASCII, FIXED=256
SECURXX   FILE      ASCII, FIXED=256
PORTFILE  FILE      ASCII, FIXED=256
.
MAXOPT    FORM      "55"
.
OPTZZ     INIT      "RO"
OPTRR     INIT      "NT"
OPTUU     INIT      "CO"
.
SP78      INIT      "                                                  ":
                    "                            "
STRING    INIT      "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ"
.
TMPMESG   FILE      ASCII, FIXED=10
.
TODAY     DIM       8
.
.********************************************************************** 
.*                            Variables                               *
.********************************************************************** 
.
EXPDATE   DIM       8
CMDLINE   DIM       60
COUNT     FORM      3
.
DIM6      DIM       6
DIRPOS    FORM      2
.
FIRSTTIM  FORM      1
FNAMEM    DIM       12
FWORK     FORM      6
FWK       DIM       1
.
GAMOPT    FORM      2
.
INSEC     DIM       6
INUID     DIM       5
INPAS     DIM       10
CHPAS     DIM       10
ITEM      FORM      2
.
LINE      FORM      2
LOGINID   DIM       11
.
NOINIMNU  FORM      2
NUM       FORM      3
.
OPCNT     FORM      2
OPTXX     DIM       20
OTHOPT    FORM      2
.
PAGE      FORM      1
PROG      DIM       8
PRTOPT    FORM      2
.
SAVCODE   DIM       4
SC        FORM      2[55]
SCRNOPTN  FORM      2
SECHK     DIM       1
SECLEVL   FORM      1[99]
SELECT    DIM       2
SECPOS    FORM      1
SPOOPT    FORM      2
STOWORK   DIM       6
SYSCHK    DIM       1
SYSTEM    DIM       3[99]
.
TAB       FORM      2
TOTAL     FORM      5
.
UNIXFLAG  FORM      1
.
VERT      FORM      2
.
XX1       FORM      3
XX2       FORM      3
XX3       FORM      3
XX4       FORM      3
XX5       FORM      3
XX6       FORM      3
.
.
.
PRGID     INIT      "IBACMENU"
PRGNAM    INIT      "System Control Menu"
VERSION   INIT      "V12.00.00"
.
.
.********************************************************************** 
.*                              ML0000                                *
.*                    Mainline Controlling Logic                      *
.********************************************************************** 
.
ML0000    CALL      INIT0000                * Initialize Routine
          CALL      SPOL0000                * Set Up for Spooling
.
          CALL      USER0000                * Check users login
          BRANCH    UNIXFLAG,ML2000         * go straight to menu (1 user)
.
ML1000    CALL      CLER0000                * Clear Required Variables
          CALL      SCRN0000                * Display Security Screen
          BRANCH    EXIT,ML2000             * Skip Security
.
          COMPARE   ONE,IBCNNSEC
          IF        @EQUAL
            CALL      NCOD0000                * Keyin Security Code
          ELSE
            CALL      CODE0000                * Keyin Security Code
          ENDIF 
.
          BRANCH    EXIT,ML9000             * Finish IBACMENU
          CALL      SLOG0000                * New security code - log it away
.
ML2000  
.         MOVE      SECDEPT,CCDEPT
.
          CALL      MENU0000                * Display User's Menu
          IF        EXIT = 1
            CALL      SCAN0000              * Exit from security code - log
            CALL      USER0000              * Check user stuff again because
.                                             we need to exit if 1 user
            IF        UNIXFLAG = 1       
              GOTO      ML9000
            ENDIF
            GOTO      ML1000
          ENDIF
.
          CHAIN     PGM
          SHUTDOWN  " "
.
ML9000    SPLCLOSE                          * Exit IBACMENU
          CALL      ULPORT1
          DISPLAY   *ES
          SHUTDOWN  ""
.
ML9999
.
.********************************************************************** 
.*                            INIT0000                                *
.*                       Initialize Routine                           *
.********************************************************************** 
.
INIT0000  OPEN      IBAPORT1,"ibaportf"
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*61,IBCNNSEC,*62,IBCNNDAY,*68,IBCNNPAS
.
          OPEN      IHAPASS1,"ihapassf"
          OPEN      IHAPASS3,"ihapassf"
          OPEN      SYSMES,"systmess"
          OPEN      IBAMDPA1,"ibamdpaf"
          OPEN      IBAMSLA1,"ibamslaf"
          OPEN      IBASMAA1,"ibasmaaf"
          OPEN      IBAUSEA1,"ibauseaf"
          OPEN      IBASECU2,"ibasecuf"
.
          IF        IBCNNSEC=1
            OPEN      IBASLOA1,"ibasloaf"
            OPEN      IBASAUA1,"ibasauaf"
          ENDIF
.
          READ      CONTROLF,ZERO;*11,CTIMEOUT
.
          READ      CONTROLF,TWO;*4,CONAME:
                                *65,CCOUNTRY:
                               *149,USERFLAG:
                               *182,CSNAME:
                               *249,SPOOL
.
.
          MOVE      "IBASYS99",PGM          * Use IBASYS99 for Chaining
.
          MOVE      PRGID,IBAPPROG
          CALL      WRPORT1                 * IAM IN IBACMENU
.
          CALL      IBACLOCK
.
          MOVE      CONAME,CNAME
          PACK      DIM6 WITH OPTUU,OPTRR,OPTZZ
.
          MOVE      SP1,DIM1
.
          MOVE      ZERO,FIRSTTIM           * Clear First Time Flag
.
INIT9999  RETURN
.
.********************************************************************** 
.*                            USER0000                                *
.*                      Check users login id                          *
.*                                                                    *
.*   Returns UNIXFLAG : 0 = More than 1 user with same unix login id  *
.*                      1 = Only 1 user with this unix login id       *
.*                      2 = No one on file with this unix login id    *
.*                                                                    *
.********************************************************************** 
.
USER0000  MATCH     SP4,PASSCODE
          GOTO      USER9999 IF NOT EQUAL   
.
          MOVE      ZERO,UNIXFLAG
.
          CLOCK     USER,LOGINID            * get users unix login id
          PACK      LOGINID,LOGINID,SP20    * pad out with blanks
.
          MOVE      ZERO,FORM1
.
          PACK      KEY24,LOGINID,SP30
          CALL      RDSPASS3
USER1000  CALL      RDKPASS3
          BRANCH    OVRCD,USER5000
.
          MATCH     LOGINID,SECNUMB         * Test Unix login id
          GOTO      USER5000 IF NOT EQUAL
.
          ADD       ONE,FORM1               * Increment number
.
          COMPARE   FORM1,ONE               * check if > 1 user for id
          GOTO      USER6000 IF LESS
.
          MOVE      SECODE,SAVCODE          * Save the code for first user
          GOTO      USER1000
.
USER5000  COMPARE   ZERO,FORM1              * Unix id not on file
          GOTO      USER9500 IF EQUAL
.
USER6000  BRANCH    FORM1,USER9000          * Only one user with id
          GOTO      USER9999

USER9000  MOVE      ONE,UNIXFLAG            * Only one user with id
          MOVE      SAVCODE,PASSCODE        * set up passcode
          PACK      KEY4,SAVCODE
          CALL      RDPASS1                 * Read in the correct record
          MOVE      SECDEPT,CDEPCDE         * Pass User Dept Thru Dept
          GOTO      USER9999
.
USER9500  MOVE      TWO,UNIXFLAG            * no user on file with id
          GOTO      USER9999
.
USER9999  RETURN
.
.********************************************************************** 
.*                            SPOL0000                                *
.*                        Set Up Spooling                             *
.********************************************************************** 
.
SPOL0000  COMPARE   TWO TO CPRTFLG
          GOTO      SPOL9999 IF EQUAL
.
          MOVE      SP8,SPLFILE
          MOVE      SPOOL,CPRTFLG
.
SPOL9999  RETURN
.
.********************************************************************** 
.*                            CLR00000                                *
.*                     Clear Required Variables                       *
.********************************************************************** 
.
CLER0000
          RETURN
.
.********************************************************************** 
.*                            SCRN0000                                *
.*                      Display Security Screen                       *
.********************************************************************** 
.
SCRN0000  
          MATCH     SP4,PASSCODE            * If PASSCODE not blank then 
          GOTO      SCRN1000 IF EQUAL       * Skip Security Check
.
          MOVE      ONE,FIRSTTIM            * Set to Say Not 1st Time
.
          PACK      KEY4,PASSCODE
          CALL      RDPASS1
.
          MOVE      SECDEPT,CDEPCDE         * Pass User Dept Thru Dept
.
          GOTO      SCRN9000                * Set Flag to Say Skip Security
.
SCRN1000  MOVE      SP4,PASSCODE
          COMPARE   ONE,IBCNNSEC
          IF        @EQUAL
            CALL      NSCR0000
            GOTO      SCRN8000
          ENDIF
.
          IF        CMM=1 & CDD<4 | CMM=12 & CDD>29
            GOTO      SCRN4000              * New Year
          ELSE
            IF        CMM=12 & 19<CDD & CDD<27
              GOTO      SCRN3000            * Christmas
            ELSE
              GOTO      SCRN2000            * IBA Screen
            ENDIF
          ENDIF
.
.
SCRN2000  DISPLAY   *ES:
                    *P25:3,*G9
          HLINE     *G38,3,26,54
          DISPLAY   *P55:3,*G11:
                    *P25:4,*G39,"                             ",*G39:
                    *P25:5,*G39,"           WELCOME           ",*G39:
                    *P25:6,*G39,"                             ",*G39:
                    *P25:7,*G39,"             TO              ",*G39:
                    *P25:8,*G39,"                             ",*G39:
                    *P25:9,*G39,"  ",*V2LON,CSNAME,*HOFF,"  ",*G39:
                    *P25:10,*G39,"                             ",*G39:
                    *P25:11,*G18
          HLINE     *G37,11,26,54
          DISPLAY   *P55:11,*G19:
                    *P25:12,*G39,"                             ",*G39:
                    *P25:13,*G39,"        Please   Enter       ",*G39:
                    *P25:14,*G39,"                             ",*G39:
                    *P25:15,*G39,"             Your            ",*G39:
                    *P25:16,*G39,"                             ",*G39:
                    *P25:17,*G39,"        Security  Code       ",*G39:
                    *P25:18,*G39,"                             ",*G39:
                    *P25:19,*G39,"        'X'  To  Exit        ",*G39:
                    *P25:20,*G10
          HLINE     *G38,20,26,54
          DISPLAY   *P55:20,*G12
          GOTO      SCRN8000
.
SCRN3000  DISPLAY   *ES:
                    *P25:1,"              ",*BLINKON,*V2LON,ASK,*HOFF:
                    *P25:2,"             . .":
                    *P25:3,"            .   .":
                    *P25:4,"           .   ",*BLINKON,*V2LON,ASK,*HOFF," .":
                    *P25:5,"          .  ",*V2LON,*BLINKON,ASK,*HOFF,"    .":
                    *P25:6,"         .  ",*V2LON,*BLINKON,ASK,*HOFF,"      .":
                    *P25:7,"        .    ",*BLINKON,*V2LON,ASK,*HOFF,"      .":
                    *P25:8,"       .  ",*V2LON,"IBA WISHES":
                            *BLINKON,ASK,*HOFF,".":
                    *P25:9,"      . . ",*BLINKON,*V2LON,ASK:
                            *HOFF,". . . . . ..":
                    *P25:10,"       ",*BLINKON,*V2LON,ASK,*HOFF:
                            "    ",*V2LON,"YOU A",*HOFF,"    .":
                    *P25:11,"      .         ",*V2LON:
                            *BLINKON,ASK,*HOFF,"     .":
                    *P25:12,"     .      ",*V2LON,"MERRY",*HOFF,"      .":
                    *P25:13,"    ",*BLINKON,*V2LON,ASK,*HOFF:
                            "                   .":
                    *P25:14,"   . ",*BLINKON,*V2LON,ASK,*HOFF:
                            *V2LON,"    CHRISTMAS",*HOFF,"      .":
                    *P25:15,"  .                       ":
                            *V2LON,*BLINKON,ASK,*HOFF:
                    *P25:16," .",*V2LON,CSNAME,*HOFF,".":
                    *P25:17,". .",*BLINKON,*V2LON,ASK:
                            *HOFF,". . . . . . . . . . . . .":
                    *P25:18,"             | |":
                    *P25:19,"   ***********************":
                    *P25:20,"   * Enter Security Code *":
                    *P25:21,"   *                     *":
                    *P25:22,"   *     'X' To Exit     *":
                    *P25:23,"   ***********************";
.
          GOTO      SCRN8000
.
SCRN4000  DISPLAY   *ES:
                    *P11:6,"|",*P38:6,"|":
                    *P12:7,"\",*P37:7,"/":
                    *P14:8,"\",*P35:8,"/":
                    *P16:9,"\",*P33:9,"/":
                    *P18:10,"\",*P31:10,"/":
                    *P20:11,"\",*P29:11,"/":
                    *P22:12,"\",*P27:12,"/":
                    *P23:13,"|",*P26:13,"|":
                    *P23:14,"|",*P26:14,"|":
                    *P23:15,"|",*P26:15,"|":
                    *P23:16,"|",*P26:16,"|":
                    *P23:17,"|",*P26:17,"|":
                    *P23:18,"|",*P26:18,"|":
                    *P23:19,"|",*P26:19,"|":
                    *P14:20,"________/",*P27:20,"\________":
                    *P13:21,"/______________________\":
                    *P18:6,"HAPPY NEW YEAR":
                    *P23:8,"FROM":
                    *P22:10,"I.B.A.":
                    *P24:12,*BLINKON,*V2LON,".":
                    *P23:11,".",*P24:9,".":
                    *P20:8,".",*P29:8,".":
                    *P23:7,".",*P30:7,".":
                    *P14:6,"o",*P35:6,"o":
                    *P17:5,"o",*P29:5,"o":
                    *P13:4,"o",*P21:4,"o",*P34:4,"o":
                    *P19:3,"o",*P28:3,"o",*HOFF:
                    *V2LON,*P59:9,"{}":
                    *P58:10,"{{}}":
                    *P57:11,"{{{}}}":
                    *P58:12,"{{}}",*HOFF:
                    *P58:13,"/",*P61:13,"\":
                    *P57:14,"/",*P62:14,"\":
                    *P56:15,"/",*P63:15,"\":
                    *P55:16,"/",*P64:16,"\":
                    *P54:17,"/",*P65:17,"\":
                    *P50:18,"___/",*P66:18,"\___":
                    *P49:19,"/",*P70:19,"\":
                    *P48:20,"/______________________\":
                    *P58:15,"Enter":
                    *P56:16,"Security":
                    *P58:17,"Code":
                    *P54:19,"'X' To Exit";
.
SCRN8000  MOVE      FALSE,EXIT
          GOTO      SCRN9999
.
SCRN9000  MOVE      TRUE,EXIT
.
SCRN9999  RETURN
.********************************************************************** 
.*                            NSCR0000                                *
.*                      Display Security Screen                       *
.********************************************************************** 
NSCR0000  DISPLAY   *ES:
                    *P25:3,*G9
          HLINE     *G38,3,26,54
          DISPLAY   *P55:3,*G11:
                    *P25:4,*G39,"                             ",*G39:
                    *P25:5,*G39,"           WELCOME           ",*G39:
                    *P25:6,*G39,"                             ",*G39:
                    *P25:7,*G39,"             TO              ",*G39:
                    *P25:8,*G39,"                             ",*G39:
                    *P25:9,*G39,"  ",*V2LON,CSNAME,*HOFF,"  ",*G39:
                    *P25:10,*G39,"                             ",*G39:
                    *P25:11,*G18
          HLINE     *G37,11,26,54
          DISPLAY   *P55:11,*G19:
                    *P25:12,*G39,"                             ",*G39:
                    *P25:13,*G39,"                             ",*G39:
                    *P25:14,*G39,"    User Id :                ",*G39:
                    *P25:15,*G39,"    Password:                ",*G39:
                    *P25:16,*G39,"                             ",*G39:
                    *P25:17,*G39,"                             ",*G39:
                    *P25:18,*G39,"                             ",*G39:
                    *P25:19,*G39,"       <Enter> = Exit        ",*G39:
                    *P25:20,*G10
          HLINE     *G38,20,26,54
          DISPLAY   *P55:20,*G12
.
NSCR8000  MOVE      FALSE,EXIT
          GOTO      NSCR9999
.
NSCR9000  MOVE      TRUE,EXIT
.
NSCR9999  RETURN
.
.********************************************************************** 
.*                            NCOD0000                                *
.*                      Keyin Security NCOD                           *
.********************************************************************** 
.
NCOD0000  READ      CONTROLF,ZERO;*16,CLOGOUT    * Read Timeout Length
.
          MOVE      ZERO,INSEC                   * Clear the Keyin Variable
          MOVE      SP5,INUID
.
          COMPARE   ZERO,CLOGOUT                 * 0 Means No Timeout
          GOTO      NCOD2000 IF EQUAL
.
. ------- user id --------------------------------------
.
NCOD1000  DISPLAY   *P40:15,SP10;
          KEYIN     *P40:14,*DV,SP5:
                    *P40:14,*RV,*T1.CLOGOUT,INUID;
.
          GOTO      NCOD1300 IF NOT LESS         * Keyin with no Timeout
.
          GOTO      NCOD9500                     * so Exit the Sec. Screen
.
NCOD1300  ENDSET    INUID                        * Get Full INSEC Back
          APPEND    SP6,INUID
          RESET     INUID
.
          MATCH     SP5,INUID
          GOTO      NCOD9500 IF EQUAL
.
          PACK      KEY5,INUID,SP10              * valid user id ?
          CALL      RDIBSLO1
          BRANCH    OVRCD,NCOD9100
.
. ------- password --------------------------------------
.
NCOD1500  KEYIN     *P40:15,*DV,SP10:
                    *P40:15,*ESON,*T1.CLOGOUT,INPAS;
.
          GOTO      NCOD1800 IF NOT LESS         * Keyin with no Timeout
.
          GOTO      NCOD9500                     * so Exit the Sec. Screen
.
NCOD1800  ENDSET    INPAS                        * Get Full INSEC Back
          APPEND    SP20,INPAS
          RESET     INPAS
.
          MATCH     SP20,INPAS
          GOTO      NCOD1000 IF EQUAL
.
          GOTO      NCOD3000
.
. ------- user id ------------------------------
.
NCOD2000  DISPLAY   *P40:15,SP10;
          KEYIN     *P40:14,*DV,SP5:                  * Keyin with no Timeout
                    *P40:14,INUID;
.
          ENDSET    INUID                        * Get Full INSEC Back
          APPEND    SP6,INUID
          RESET     INUID
.
          MATCH     SP5,INUID
          GOTO      NCOD9500 IF EQUAL
.
          PACK      KEY5,INUID,SP10              * valid user id ?
          CALL      RDIBSLO1
          BRANCH    OVRCD,NCOD9100
.
. ------- password ---------------------------------
.
          KEYIN     *P40:15,*DV,SP10:                  * Keyin with no Timeout
                    *P40:15,*ESON,INPAS;
.
          ENDSET    INPAS                        * Get Full INSEC Back
          APPEND    SP20,INPAS
          RESET     INPAS
.
          MATCH     SP20,INPAS
          GOTO      NCOD2000 IF EQUAL
.
NCOD3000  PACK      KEY5,INUID,SP10
          CALL      RDIBSLO1
          BRANCH    OVRCD,NCOD9000
.
          MATCH     IBSLPASS,INPAS
          GOTO      NCOD9000 IF NOT EQUAL
.
          MOVE      IBSLIBAS,KEY4                   * Validate on ihapassf
          CALL      RDPASS1
          BRANCH    OVRCD,NCOD9200
.
          MOVE      SECODE,PASSCODE
.
          MOVE      SECDEPT,CDEPCDE              * Set Up Department NCOD
          MOVE      SECPRINT,CPRTGRP             * Set Up Printer Group
.
          UNPACK    SECACCT,SECACC1,SECACC2:     * Accounting Security
                            SECACC3,SECACC4
.
. ------- check whether they must change password ------------------
.
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
.
          UNPACK    IBSLDATE,XCENT,XYEAR,XMON,XDAY
          MOVE      XCENT,CC
          MOVE      XYEAR,YY
          MOVE      XMON,MM
          MOVE      XDAY,DD
          CALL      DMYCON
          ADD       IBCNNDAY,JULDAY              * increment one day
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      EXPDATE,CC,YY,MM,DD
          REP       " 0",EXPDATE
.
          MATCH     TODAY,EXPDATE
          GOTO      NCOD8000 IF LESS
.
          MATCH     EXPDATE,TODAY
          GOTO      NCOD8000 IF EQUAL 
.
          MOVE      FALSE,EXIT
          GOTO      NCOD9999
.
. ------- change password ----------------------------
.
NCOD8000  PACK      KEY5,INUID,SP10
          CALL      RLIBSLO1
          IF        OVRCD=2
            DISPLAY   *P25:24,*EL,*B,*V2LON:       * Invalid NCOD
                      "Record Locked - ";
            CALL      HITENTER
            DISPLAY   *P1:24,*EL
            GOTO      NCOD0000
          ENDIF
.
          CALL      CPAS0000 
          BRANCH    EXIT,NCOD0000
          GOTO      NCOD9999
.
NCOD9000  DISPLAY   *P25:24,*EL,*B,*V2LON:       * Invalid NCOD
                    "Invalid Password - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL
          GOTO      NCOD0000
.
NCOD9100  DISPLAY   *P25:24,*EL,*B,*V2LON:       * Invalid NCOD
                    "Invalid User Id - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL
          GOTO      NCOD0000
.
NCOD9200  DISPLAY   *P25:24,*EL,*B,*V2LON:       * Invalid NCOD
                    "IBA Security Link not Set Up - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL
          GOTO      NCOD0000
.
NCOD9500  MOVE      TRUE,EXIT
.
NCOD9999  RETURN
.********************************************************************** 
.*                            CPAS0000                                *
.*                      Change Password                               *
.********************************************************************** 
CPAS0000  CALL      GETSCR00
          DISPLAY   *P1:11,*EF:
                    *P25:11,*G18
          HLINE     *G37,11,26,54
          DISPLAY   *P55:11,*G19:
                    *P25:12,*G39,*V2LON,"  Your Password Has Expired. ",*HOFF:
                    *G39:
                    *P25:13,*G39,"                             ",*G39:
                    *P25:14,*G39," Please Enter a New Password ",*G39:
                    *P25:15,*G39,"                             ",*G39:
                    *P25:16,*G39,"    Password:                ",*G39:
                    *P25:17,*G39,"    Confirm :                ",*G39:
                    *P25:18,*G39,"                             ",*G39:
                    *P25:19,*G39,"       <Enter> = Exit        ",*G39:
                    *P25:20,*G10
          HLINE     *G38,20,26,54
          DISPLAY   *P55:20,*G12
.
          CALL      NPAS0000
          BRANCH    EXIT,CPAS9999
.
          MOVE      ZERO,EXIT
.
CPAS9999  CALL      PUTSCR00 
          RETURN
.********************************************************************** 
.*                            NPAS0000                                *
.*                      Change Security Details                       *
.********************************************************************** 
NPAS0000  
.
. ------- password ---------------------------------
.
NPAS2000  DISPLAY   *P40:17,SP10;                  * Keyin with no Timeout
          KEYIN     *P40:16,*DV,SP10:                  * Keyin with no Timeout
                    *P40:16,*ESON,INPAS;
.
          ENDSET    INPAS                        * Get Full INSEC Back
          APPEND    SP20,INPAS
          RESET     INPAS
.
          MATCH     SP20,INPAS
          GOTO      NPAS9500 IF EQUAL
.
. ------- password ---------------------------------
.
          KEYIN     *P40:17,*DV,SP10:                  * Keyin with no Timeout
                    *P40:17,*ESON,CHPAS;
.
          ENDSET    CHPAS                        * Get Full INSEC Back
          APPEND    SP20,CHPAS
          RESET     CHPAS
.
          MATCH     SP20,CHPAS
          GOTO      NPAS2000 IF EQUAL
.
          MATCH     INPAS,CHPAS
          GOTO      NPAS9100 IF NOT EQUAL
.
          MATCH     INPAS,IBSLPASS
          GOTO      NPAS9000 IF EQUAL
.
          CALL      CAUD0000
          BRANCH    EXIT,NPAS9400
.
          CALL      UPDA0000
.
          MOVE      FALSE,EXIT
          GOTO      NPAS9999
.
NPAS9000  DISPLAY   *P25:24,*EL,*B,*V2LON:       * Invalid NPAS
                    "Password must be changed - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL
          GOTO      NPAS0000
.
NPAS9100  DISPLAY   *P25:24,*EL,*B,*V2LON:       * Invalid NPAS
                    "Password Mismatch - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL
          GOTO      NPAS0000
.
NPAS9200  DISPLAY   *P25:24,*EL,*B,*V2LON:       * Invalid NPAS
                    "IBA Security Link not Set Up.",*W2;
          DISPLAY   *P1:24,*EL
          GOTO      NPAS0000
.
NPAS9400  DISPLAY   *P25:24,*EL,*B,*V2LON:       * Invalid NPAS
                    "Password Already Used.",*W2;
          DISPLAY   *P1:24,*EL
          GOTO      NPAS0000
.
NPAS9500  MOVE      TRUE,EXIT
.
NPAS9999  RETURN
.-------------------------------------------------
. UPDA - Update to Files
.-------------------------------------------------
UPDA0000  MOVE      IBSLUSER,IBSAUSER
          MOVE      IBSLPASS,IBSAPASS
          PACK      IBSADATE,CCC,CYY,CMM,CDD
          REP       " 0",IBSADATE
          CLOCK     TIME,IBSATIME
          REP       " 0",IBSATIME
          MOVE      SP30,IBSASPAR
.
          PACK      KEY21,IBSAUSER,IBSADATE,IBSATIME,SP20
          CALL      RAIBSAU1
          IF        OVRCD = 1
            CALL      WRIBSAU1
            CALL      DELE0000                   * delete first one
          ELSE
            CALL      UPIBSAU1
          ENDIF
.          
UPDA5000  PACK      KEY5,INUID,SP20
          PACK      IBSLDATE,CCC,CYY,CMM,CDD
          REP       " 0",IBSLDATE
.
          MOVE      CHPAS,IBSLPASS
.
          CALL      UPIBSLO1
.
UPDA9999  RETURN
.-------------------------------------------------
. DELE - Delete the first change
.-------------------------------------------------
DELE0000  MOVE      ZERO,COUNT
          PACK      KEY21,IBSAUSER,SP20
          CALL      RSIBSAU1
DELE1000  CALL      RKIBSAU1
          BRANCH    OVRCD,DELE5000
.
          MATCH     IBSLUSER,IBSAUSER
          GOTO      DELE5000 IF NOT EQUAL
.
          ADD       ONE,COUNT
          GOTO      DELE1000
.
DELE5000  COMPARE   IBCNNPAS,COUNT
          GOTO      DELE9999 IF LESS
.
          PACK      KEY21,IBSAUSER,SP20
          CALL      RSIBSAU1
          CALL      RKIBSAU1
          BRANCH    OVRCD,DELE9999
.
          MATCH     IBSLUSER,IBSAUSER
          GOTO      DELE9999 IF NOT EQUAL
.
          PACK      KEY21,IBSAUSER,IBSADATE,IBSATIME,SP20
          CALL      DEIBSAU1
.
DELE9999  RETURN
.********************************************************************** 
.*                            CAUD0000                                *
.*                      Check the Audit                               *
.********************************************************************** 
CAUD0000  PACK      KEY21,IBSLUSER,SP20
          CALL      RSIBSAU1
CAUD1000  CALL      RKIBSAU1
          BRANCH    OVRCD,CAUD9000
.
          MATCH     IBSLUSER,IBSAUSER
          GOTO      CAUD9000 IF NOT EQUAL
.
          MATCH     IBSAPASS,INPAS     
          GOTO      CAUD1000 IF NOT EQUAL
.
          MOVE      ONE,EXIT
          GOTO      CAUD9999
.
CAUD9000  MOVE      ZERO,EXIT
.
CAUD9999  RETURN
.********************************************************************** 
.*                            CODE0000                                *
.*                      Keyin Security Code                           *
.********************************************************************** 
.
CODE0000  READ      CONTROLF,ZERO;*16,CLOGOUT    * Read Timeout Length
.
          MOVE      ZERO,INSEC                   * Clear the Keyin Variable
.
          COMPARE   ZERO,CLOGOUT                 * 0 Means No Timeout
          GOTO      CODE2000 IF EQUAL
.
CODE1000  KEYIN     *P1:24,*EL:
                    *P25:24,*EOFF,*RV,*T1.CLOGOUT,INSEC,*EON;
.
          GOTO      CODE3000 IF NOT LESS         * Keyin with no Timeout
.
          MOVE      "X    ",INSEC                * Timeout on Keyin
          GOTO      CODE3000                     * so Exit the Sec. Screen
.
CODE2000  KEYIN     *P1:24,*EL:                  * Keyin with no Timeout
                    *P25:24,*EOFF,INSEC,*EON;
.
CODE3000  ENDSET    INSEC                        * Get Full INSEC Back
          APPEND    SP6,INSEC
          RESET     INSEC
.
          UNPACK    INSEC INTO PASSCODE,PASSCD   * Set Up Passcode
.
          RESET     INSEC,4                      * Get 1st 4 Char's Keyed In
          LENSET    INSEC
          RESET     INSEC
          REP       "eExX",INSEC
.
          MATCH     "E   " TO INSEC              * Check for Exit
          GOTO      CODE9500 IF EQUAL
.
          MATCH     "X   " TO INSEC              * Check for Exit
          GOTO      CODE9500 IF EQUAL
.
          MOVE      INSEC,KEY4                   * Validate on ihapassf
          CALL      RDPASS1
          BRANCH    OVRCD OF CODE9000
.
.   UNIXFLAG = 2 means that the unix login id is not set up on the ihapassf
.   file. So we get a iba login id and check if the id has a unix login id setup
.   up for it and if it does then abort.
.
          IF        UNIXFLAG = 2
            PACK      SECNUMB,SECNUMB,SP30
            MATCH     SECNUMB,SP20
            GOTO      CODE9000 IF NOT EQUAL      * Invalid code used for user
          ENDIF
.
          MOVE      SECDEPT,CDEPCDE              * Set Up Department Code
          MOVE      SECPRINT,CPRTGRP             * Set Up Printer Group
.
          UNPACK    SECACCT,SECACC1,SECACC2:     * Accounting Security
                            SECACC3,SECACC4
.
          RESET     INSEC
          TYPE      INSEC                        * Check Security Code
          GOTO      CODE5000 IF EQUAL            * for a Form Field
.
          CALL      ALPH0000                     * Check Alpha Security Code
          BRANCH    EXIT,CODE9000                * Old NOCDE
.
          GOTO      CODE9999
.
CODE5000  RESET     SECODE
          MOVE      SECODE,FWORK                 * Decode the Security Code
          MULT      "2.38",FWORK
          ADD       "135",FWORK
.
          MOVE      FWORK,STOWORK
          UNPACK    STOWORK,DIM2,DIM2,DIM2       * Get Last 2 Digits in DIM2
.
          MATCH     DIM2,PASSCD                  * Match Result to Code Keyed
          GOTO      CODE9000 IF NOT EQUAL
.
          MOVE      FALSE,EXIT
          GOTO      CODE9999
.
CODE9000  RESET     INSEC,6                      * Get Full INSEC
          RESET     INSEC
.
          MATCH     DIM6,INSEC                   * Check for Back Door
          GOTO      CODE9100 IF EQUAL
.
          DISPLAY   *P25:24,*EL,*B,*V2LON:       * Invalid Code
                    "Invalid Security Code",*W2;
          GOTO      CODE0000
.
CODE9100  CALL      BKDR00000                    * Back Door into IBACMENU
.
          MOVE      FALSE,EXIT
          GOTO      CODE9999
.
CODE9500  MOVE      TRUE,EXIT
.
CODE9999  RETURN
.
.********************************************************************** 
.*                            ALPH0000                                *
.*                    Check an Alpha Security Code                    *
.********************************************************************** 
.
ALPH0000 MOVE      "1" TO NUM
.
ALPH1000 RESET     INSEC TO NUM
         CMOVE     INSEC TO DIM1
         MOVE      ONE TO COUNT
.
ALPH2000 RESET     STRING TO COUNT
         CMATCH    DIM1 TO STRING
         GOTO      ALPH5000 IF EQUAL
.
         ADD       ONE TO COUNT
         COMPARE   "37" TO COUNT
         GOTO      ALPH2000 IF LESS
         GOTO      ALPH9000
.
ALPH5000 STORE     COUNT INTO NUM OF XX1,XX2,XX3,XX4,XX5,XX6
         ADD       ONE TO NUM
         COMPARE   "7" TO NUM
         GOTO      ALPH1000 IF LESS
.
         MULT      "2" BY XX2
         MULT      "3" BY XX3
         MULT      "4" BY XX4
.
         ASSIGN    XX1+XX2+XX3+XX4,TOTAL
.
         MOVE      TOTAL TO FWORK
         DIV       "37" INTO FWORK
         MULT      "37" BY FWORK
         SUB       FWORK FROM TOTAL
.
         COMPARE   ZERO TO TOTAL
         IF        @EQUAL
           MOVE      ONE TO TOTAL
         ENDIF
.
         COMPARE   TOTAL TO XX5
         GOTO      ALPH9000 IF NOT EQUAL
.
         MULT      "2" BY XX4
         MULT      "3" BY XX3
         MULT      "4" BY XX2
         MULT      "5" BY XX1
.
         ASSIGN    XX1+XX2+XX3+XX4+XX5,TOTAL
.
         MOVE      TOTAL TO FWORK
         DIV       "37" INTO FWORK
         MULT      "37" BY FWORK
         SUB       FWORK FROM TOTAL
.
         COMPARE   ZERO TO TOTAL
         IF        @EQUAL
           MOVE      ONE TO TOTAL
         ENDIF
.
         COMPARE   TOTAL TO XX6
         GOTO      ALPH9000 IF NOT EQUAL    * Invalid Code
.
         MOVE      FALSE,EXIT               * Valid Code Entered
         GOTO      ALPH9999
.
ALPH9000 MOVE      TRUE,EXIT
.
ALPH9999 
         RETURN
.
.********************************************************************** 
.*                            BKDR0000                                *
.*                     Back Door into IBACMENU                        *
.********************************************************************** 
.
BKDR0000  PACK      PASSCODE,ONE,FOUR,TWO,SIX
          MOVE      PASSCODE,SECODE
          MOVE      "29",PASSCD
          MOVE      "   ",SECDEPT
          MOVE      "  ",SECPRINT
          MOVE      SP3,SECMNNUM
.
          RETURN
.
.********************************************************************** 
.*                            MENU0000                                *
.*                       Display User's Menu                          *
.********************************************************************** 
.
MENU0000  MATCH     SP3,SECMNNUM
          GOTO      MENU5000 IF NOT EQUAL
.
          CALL      IBAM0000                * Standard IBA MENU
          BRANCH    EXIT,MENU9000
.
          MOVE      FALSE,EXIT
          GOTO      MENU9999
.
MENU5000  CALL      NEWM0000                * User Specific Menu
          BRANCH    EXIT,MENU9000,MENU0000
.
          MOVE      FALSE,EXIT
          GOTO      MENU9999
.
MENU9000  MOVE      TRUE,EXIT
          MOVE      SP4,PASSCODE
          MOVE      ZERO,FIRSTTIM           * Clear First Time Flag
.
MENU9999  RETURN
.
.********************************************************************** 
.*                            MESS0000                                *
.*                     Display System Messages                        *
.********************************************************************** 
.
MESS0000  CALL      RSYSMESM
.
          DISPLAY   *P2:21,*V2LON,SYSMES1:
                    *P2:22,*V2LON,SYSMES2:
                    *P2:23,*V2LON,SYSMES3
.
          RETURN
.
.********************************************************************** 
.*                            IBAM0000                                *
.*                      Display User's Menu                           *
.********************************************************************** 
.
IBAM0000  MOVE      PRGID,IBAPPROG
          CALL      WRPORT1                 * In IBACMENU
.
          CALL      DIRT0000                * Check for Direct to System
          BRANCH    EXIT,IBAM9999
.
          CALL      CLAR0000                * Clear the Array
.
          STRIP     CONAME
          MOVELPTR  CONAME,CCOL
          DIV       TWO,CCOL
          MULT      SEQ,CCOL                                   Date : 12/12/1912
          ADD       "40",CCOL
          DISPLAY   *ES,*HON,SP30,SP30,SP10,SP10:
                    *P1:1,PRGID,"/",VERSION,*PCCOL:1,CONAME:
                    *P66:1,"Date:",CDATE

          HLINE     *G37,2,1,80
          DISPLAY   *P65:2," Port : ",PORT,SP1:
                    *P30:2," System Control Menu "
          BOX       1,1,20,80,24
.
          CALL      MESS0000                * Display System Messages
.
          CALL      CHKMS000                * Check for Messages to User
.
          MOVE      ONE,CCOL
          MOVE      FOUR,CVERT
          MOVE      ONE,SCRNOPTN
.
          PACK      KEY7,SECODE,SP30
          CALL      RSIBUSE1
.
IBAM1000  CALL      RKIBUSE1
          BRANCH    OVRCD,IBAM3000
.
          MATCH     SECODE,IBUSCODE
          GOTO      IBAM3000 IF NOT EQUAL
.
          CMATCH    "0",IBUSLEVL
          GOTO      IBAM1000 IF EQUAL
.
          PACK      KEY3,IBUSSYST
          CALL      RDIBSMA1
          BRANCH    OVRCD,IBAM1000
.
          DISPLAY   *PCCOL:CVERT,*V2LON,SCRNOPTN,*HOFF,DOT,SP1,IBSMNATV;
.
          MOVE      IBUSLEVL,SECLEVL[SCRNOPTN]
          MOVE      IBUSSYST,SYSTEM[SCRNOPTN]
          ADD       ONE,CVERT
          ADD       ONE,SCRNOPTN
.
          COMPARE   TEN7,CVERT
          GOTO      IBAM1000 IF LESS
.
          COMPARE   SIXTY,CCOL
          GOTO      IBAM2000 IF NOT LESS
.
          ADD       TWENTY6,CCOL
          MOVE      FOUR,CVERT
          GOTO      IBAM1000
.
IBAM2000  DISPLAY   *P10:18,*EL,"Display More (",*V2LON,ANSY,*HOFF,SLASH:
                            *V2LON,ANSN,*HOFF,") : ";
.
IBAM2050  KEYIN     *P31:18,*EL,*DV,UNDLN1:
                    *P31:18,*V2LON,ANS;
.
          MATCH     ANSY,ANS
          GOTO      IBAM2100 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      IBAM3000 IF EQUAL
.
          BEEP
          GOTO      IBAM2050
.
IBAM2100  MOVE      ONE,CCOL
          MOVE      FOUR,CVERT
.
          CALL      CLAR0000                * Clear the Sec. Level Array
.
          GOTO      IBAM1000
.
IBAM3000  DISPLAY   *P1:18,*EL,"Please Select, e(",*V2LON,"X",*HOFF,")it : ":
                    *P25:18,UNDLN2;
.
          COMPARE   ZERO,CTIMEOUT
          GOTO      IBAM3100 IF EQUAL
.
          KEYIN     *P25:18,*EL,*DV,UNDLN2:
                    *P25:18,*V2LON,*JR,*T1.CTIMEOUT,SELECT
.
          GOTO      IBAM4000 IF NOT LESS
          GOTO      IBAM9000
.
IBAM3100  KEYIN     *P25:18,*EL,*DV,UNDLN2:
                    *P25:18,*V2LON,*JR,SELECT;
.
IBAM4000  RESET     SELECT
          GOTO      IBAM4050 IF EOS
.
          TYPE      SELECT
          GOTO      IBAM4100 IF EQUAL
.
          REP       UPPLOW,SELECT
.
          MATCH     " E",SELECT
          GOTO      IBAM9000 IF EQUAL
.
          MATCH     " X",SELECT
          GOTO      IBAM9000 IF EQUAL
.       
.>>>>>>>  MATCH     " *",SELECT 
.>>>>>>>  GOTO      IBAM4010 IF NOT EQUAL
.>>>>>>>
.>>>>>>>  CALL      ANYP0000                     * Run Any Other Program
.>>>>>>>  GOTO      IBAM0000                     * If Return's then Chain Fail
.
IBAM4010  MATCH     "*O",SELECT
          GOTO      IBAM4020 IF NOT EQUAL
.
          CALL      OPEN0000                     * Open a Spool File
          GOTO      IBAM0000                     * Redisplay the Menu

IBAM4020  MATCH     "*C",SELECT
          GOTO      IBAM4050 IF NOT EQUAL
.
          CALL      CLOS0000                     * Open a Spool File
          GOTO      IBAM0000                     * Redisplay the Menu

IBAM4050  BEEP
          GOTO      IBAM3000
.
IBAM4100  MOVE      SELECT,FORM2
          COMPARE   ONE,FORM2
          GOTO      IBAM4050 IF LESS
.
          COMPARE   ZERO,SECLEVL[FORM2]
          GOTO      IBAM4050 IF EQUAL
.
          PACK      KEY7,SECODE,SYSTEM[FORM2]
          CALL      RDIBUSE1
          BRANCH    OVRCD,IBAM4050
.
          MOVE      IBUSMPRO,CCMENU
          MOVE      IBUSLEVL,SECLEV
          MOVE      FALSE,EXIT
          GOTO      IBAM9999
.
IBAM9000  MOVE      TRUE,EXIT
.
IBAM9999  RETURN
.
.********************************************************************** 
.*                            DIRT0000                                *
.*                      Check for Direct to System                    *
.********************************************************************** 
.
DIRT0000  MOVE      FALSE,EXIT
          MOVE      ZERO,NOINIMNU
.
          PACK      KEY7,SECODE,SP30
          CALL      RSIBUSE1
.
DIRT1000  CALL      RKIBUSE1
          BRANCH    OVRCD,DIRT2000
.
          MATCH     SECODE,IBUSCODE
          GOTO      DIRT2000 IF NOT EQUAL
.
          MATCH     "0",IBUSLEVL
          GOTO      DIRT1000 IF EQUAL
.
          ADD       ONE,NOINIMNU
.
          MOVE      IBUSMPRO,CCMENU
          MOVE      IBUSLEVL,SECLEV
.
          COMPARE   TWO,NOINIMNU
          GOTO      DIRT9999 IF EQUAL
.
          GOTO      DIRT1000
.
DIRT2000  COMPARE   ONE,NOINIMNU
          GOTO      DIRT9999 IF NOT EQUAL
.
          BRANCH    FIRSTTIM,DIRT3000       * Exit From Direct System
.
          CHAIN     CCMENU
          GOTO      DIRT9999

DIRT3000  MOVE      ONE,EXIT
.
DIRT9999  RETURN
.
.********************************************************************** 
.*                            CLAR0000                                *
.*                      Clear the Sec. Level Array                    *
.********************************************************************** 
.
CLAR0000  MOVE      ONE,FORM2
.
          WHILE     FORM2<99
            MOVE      ZERO,SECLEVL[FORM2]
            MOVE      SP3,SYSTEM[FORM2]
            ADD       ONE,FORM2
          DO
.
          RETURN
.
.********************************************************************** 
.*                              OPEN0000                              *
.*                          Open a Spoolfile                          *
.********************************************************************** 
.
OPEN0000  BRANCH    CPRTFLG OF OPEN1000,OPEN8000,OPEN1000
.
OPEN1000  DISPLAY   *P1:21,*EF
          MOVE      ZERO,CPRTFLG     * Always allow spooling from IBACMENU
          MOVE      "SF",NCURPRT
.
          CALL      SPOOLING
.
          MOVE      TWO,CPRTFLG      * Indicates spooling from IBACMENU
          GOTO      OPEN9999
.
OPEN8000  DISPLAY   *P1:24,*B,*V2LON,"** Spooling Currently Active **",*W2;
.
OPEN9999  RETURN
.
.********************************************************************** 
.*                              CLOS0000                              *
.*                         Close a Spoolfile                          *
.********************************************************************** 
.
CLOS0000  BRANCH    CPRTFLG OF CLOS9999,CLOS2000,CLOS1000
.
CLOS1000  DISPLAY   *P1:24,*B,*V2LON,"** Spooling Not Currently Active **",*W2;
          GOTO      CLOS9999
.
CLOS2000  SPLCLOSE
          READ      CONTROLF,TWO;*249,SPOOL
          MOVE      SPOOL,CPRTFLG
          MOVE      SP8,SPLFILE
          DISPLAY   *P1:24,*B,*V2LON,"** Spoolfile Now Closed **",*W2;
          GOTO      CLOS9999
.
CLOS3000  DISPLAY   *P1:24,*B,*V2LON,"** Spooling Not Available **",*W2;
.
CLOS9999  RETURN
.
.********************************************************************** 
.*                              NEWM0000                              *
.*       Display the Users Customized Menu From the Screen Paiter     *
.********************************************************************** 
.
NEWM0000  CALL      NIMN0000                * Determine No. Entries in IBACMENU
.
          BRANCH    NOINIMNU,NEWM8000       * If 1 then direct to system
.
          STRIP     CONAME
          MOVELPTR  CONAME,CCOL
          DIV       TWO,CCOL
          MULT      SEQ,CCOL                                     Date : 12/12/12
          ADD       "40",CCOL
          DISPLAY   *ES,*HON,SP30,SP30,SP10,SP10:
                    *P1:1,PRGID,"/",VERSION,*PCCOL:1,CONAME:
                    *P66:1,"Date:",CDATE
          HLINE     *G37,2,1,80
          DISPLAY   *P65:2," Port : ",PORT,SP1:
                    *P30:2," System Control Menu "
          BOX       1,1,20,80,24
.
          MOVE      THREE,CVERT
          PACK      KEY5,SECMNNUM,SP5
          CALL      RSIBMDP1
.
NEWM1000  CALL      RKIBMDP1
          BRANCH    OVRCD,NEWM2000
.
          MATCH     IBMDMENU,SECMNNUM
          GOTO      NEWM2000 IF NOT EQUAL
.
          MOVE      IBMDLINE,CVERT
          PUTVAR    IBMDDATA,IBMDATTR,1,CVERT
.
          GOTO      NEWM1000
.
NEWM2000  CALL      MESS0000                     * Display System Messages
          CALL      CHKMS000                     * Check for Messages to User
.
          DISPLAY   *P1:18,*EL,"Please Select, e(",*V2LON,"X",*HOFF,")it : "
.
NEWM2500  DISPLAY   *P25:18,UNDLN2
.
          COMPARE   ZERO,CTIMEOUT
          GOTO      NEWM3000 IF NOT EQUAL
.
          KEYIN     *P25:18,*V2LON,*JR,SELECT
          GOTO      NEWM4000
.
NEWM3000  MOVE      SP2,SELECT
          KEYIN     *P25:18,*V2LON,*JR,*T1.CTIMEOUT,SELECT;
.
          GOTO      NEWM4000 IF NOT LESS
.
          CHAIN     "ANSWER"
.
NEWM4000  RESET     SELECT
          GOTO      NEWM5000 IF EOS
.
          TYPE      SELECT
          GOTO      NEWM6000 IF EQUAL
.
          REP       UPPLOW,SELECT
.
          MATCH     " E",SELECT
          GOTO      NEWM9000 IF EQUAL
.
          MATCH     " X",SELECT
          GOTO      NEWM9000 IF EQUAL
.
.>>>>>>>> MATCH     " *",SELECT
.>>>>>>>> GOTO      NEWM4010 IF NOT EQUAL
.
.>>>>>>>> CALL      ANYP0000                     * Run Any Other Program
.>>>>>>>> GOTO      NEWM0000                     * If Return's then Chain Fail
.
NEWM4010  MATCH     "*O",SELECT
          GOTO      NEWM4020 IF NOT EQUAL
.
          CALL      OPEN0000                     * Open a Spool File
          GOTO      NEWM0000                     * Redisplay the Menu

NEWM4020  MATCH     "*C",SELECT
          GOTO      NEWM5000 IF NOT EQUAL
.
          CALL      CLOS0000                     * Open a Spool File
          GOTO      IBAM0000                     * Redisplay the Menu
.
NEWM5000  BEEP
          GOTO      NEWM2500
.
NEWM6000  PACK      KEY6,SECMNNUM,SP1,SELECT
          CALL      RDIBMSL1
          BRANCH    OVRCD,NEWM5000               * Beep & Re-Key
.
          BRANCH    IBMSTYPE,NEWM7000            * A Unix Command
.
          PACK      KEY7,PASSCODE,IBMSNUMB
          CALL      RDIBUSE1
          BRANCH    OVRCD,NEWM8900
.
          MOVE      IBUSMPRO,CCMENU
          MOVE      IBUSLEVL,SECLEV
.
          MOVE      FALSE,EXIT
          GOTO      NEWM9999
.
NEWM7000  CALL      GETSCR00
.
          CLEAR     CMDLINE
          APPEND    "clear;",CMDLINE
          APPEND    IBMSCOMD,CMDLINE
          RESET     CMDLINE
          STRIP     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          DISPLAY   *P1:24,*EL;
          CALL      HITENTER
.
          MOVE      TWO,EXIT
          GOTO      NEWM9999
.
NEWM8000  BRANCH    FIRSTTIM,NEWM8990       * Not 1st Time so Exit
.
          PACK      KEY6,SECMNNUM,SP6
          CALL      RSIBMSL1
          CALL      RKIBMSL1
.
          PACK      KEY7,PASSCODE,IBMSNUMB
          CALL      RDIBUSE1
          BRANCH    OVRCD,NEWM8900
.
          MOVE      IBUSMPRO,CCMENU
          MOVE      IBUSLEVL,SECLEV
.
          MOVE      FALSE,EXIT
          GOTO      NEWM9999
.
NEWM8900  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON:
                    *P30:24,"*****  System  Failure  *****";
NEWM8990  SHUTDOWN  " "
.
NEWM9000  MOVE      TRUE,EXIT
.
NEWM9999  RETURN
.
.********************************************************************** 
.*                            NIMN0000                                *
.*               Determine the No. of Records in File                 *
.********************************************************************** 
.
NIMN0000  MOVE      ZERO,NOINIMNU
.
          PACK      KEY6,SECMNNUM,SP30
          CALL      RSIBMSL1
.
NIMN1000  CALL      RKIBMSL1
          BRANCH    OVRCD,NIMN9999
.
          MATCH     SECMNNUM,IBMSMENU
          GOTO      NIMN9999 IF NOT EQUAL
.
          ADD       ONE,NOINIMNU
          GOTO      NIMN1000
.
NIMN9999  RETURN
.
.********************************************************************** 
.*                            ANYP0000                                *
.*                       Run Any Other Program                        *
.********************************************************************** 
.
ANYP0000  MOVE      SP8,PROG
.
          MOVE      "ANSWER  ",PGM
          KEYIN     *P4:17,*EF,"Program Name ? ",*V2LON,PROG
.
          ENDSET    PROG
          APPEND    SP8,PROG
          RESET     PROG
.
          MATCH     SP8,PROG
          GOTO      ANYP1000 IF EQUAL
.
          PACK      KEY16,PROG,SP8
          CALL      RDSSECU2
          CALL      RDKSECU2
          BRANCH    OVRCD,ANYP1000
.
          MATCH     PROG,PSEALIAS
          GOTO      ANYP1000 IF NOT EQUAL
.
          MOVE      PSECNME,PROG
.
ANYP1000  MOVE      PROG,IBAPPROG
          CALL      WRPORT1
.
          MOVE      PRGID,PGM
.
          TRAP      ANYP2000 IF CFAIL
.
          MOVE      "IBACMENU",PGM
          CHAIN     PROG
.
ANYP2000  DISPLAY   *ES,*P4:17,*B,*V2LON,"NO SUCH PROGRAM!",*W
          NORETURN
.
          MOVE      TRUE,EXIT
.
          RETURN
.
.********************************************************************** 
.* SLOG0000 : Log security code to a log file if required             *
.********************************************************************** 
.
SLOG0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PORTFILE,"portlog"       * test if "portlog.txt" exists
          TRAPCLR   IO
          BRANCH    OVRCD,SLOG9999           * doesn't exist, do nothing
          CLOSE     PORTFILE
.
.         Get the file name for the port log file
.
          CLEAR     CFNAME
          APPEND    "secur",CFNAME
          APPEND    PORT,CFNAME
          RESET     CFNAME
.
.         Check if the port log file exists. If it does, simply log details
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SECURXX,CFNAME
          TRAPCLR   IO
          BRANCH    OVRCD,SLOG2000
.
.         File for this port already exists. Log contents to "portlog.txt"
.
          READ      SECURXX,SEQ;CMDLINE
          CLOSE     SECURXX
.
          CALL      IBACLOCK
          CLOCK     TIME,CTIMEIS
          STRIP     CMDLINE
          PACK      CMDLINE,CMDLINE,SP1,CCC,CYY,CMM,CDD,SP1,CTIMEIS
.
          OPEN      PORTFILE,"portlog"
          MOVE      "-3",FORM2               * append to file
          WRITE     PORTFILE,FORM2;CMDLINE
          CLOSE     PORTFILE
.
.         Create file containing the security login details
.
SLOG2000  PREP      SECURXX,CFNAME
          CALL      IBACLOCK
          CLOCK     TIME,CTIMEIS
          WRITE     SECURXX,SEQ;SECODE,SP1,PORT,SP1,CCC,CYY,CMM,CDD,SP1,CTIMEIS
          CLOSE     SECURXX
.
SLOG9999  RETURN
.
.********************************************************************** 
.* SCAN0000 : Remove security log file - normal exiting               *
.********************************************************************** 
.
SCAN0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PORTFILE,"portlog"       * test if "portlog.txt" exists
          TRAPCLR   IO
          BRANCH    OVRCD,SCAN9999           * doesn't exist, do nothing
.
.         Get the file name for the port log file
.
          CLEAR     CFNAME
          APPEND    "secur",CFNAME
          APPEND    PORT,CFNAME
          RESET     CFNAME
.
.         Delete this file (if it exists)
.
          CLOSE     SECURXX
          PREP      SECURXX,CFNAME
          CLOSE     SECURXX
.
SCAN9999  RETURN
.
.
.********************************************************************** 
.*                          I/O Includes                              *
.********************************************************************** 
.
.
          INC       STD001IO
          INC       IBAPRINT
.
          INC       BCSYSMES
          INC       CHEKMESS
.
          INC       IBAMDPIO/INC
          INC       IBAMSLIO/INC
          INC       IBASMAIO/INC
          INC       IBAUSEIO/INC
.
          INC       IBAPORIO/INC       **** PORT SCANNING
          INC       IBAPRNIO/INC
          INC       IBASECIO/INC
          INC       IBASLOIO/INC
          INC       IBASAUIO/INC
.
