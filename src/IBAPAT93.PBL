.******************************************************************************d
.* System   :  PATIENT SYSTEM                                                 *
.* Program  :  IBAPAT93                                                       *
.* Desc     :  Use of Hospital Reports                                        *
.******************************************************************************
.* Date     :  21/05/1991                                                     *
.* Author   :  DIG                                                            *
.* Comment  :  This is a total re-write of the existing PAT93 due to the new  *
.*             extraction files                                               *
.* Mods     :                                                                 *
.*        V12.00.01 29.05.2025  DA Sarkies     TSK 0955096                    *
.*                   Updated for Alpha-Numeric Visit Number                   *
.*        V11.00.01 11/03/2020  J.Tan          TSK 0838262                    *
.*                   Added Effective from and to date to MBS Item file        *
.*        V10.04.02  04/04/2014  J.Tan                 CAR 297283             *
.*                   Added Option for Preferred Language Cat 'LA'             *
.*        V10.04.01  26/02/2014  Ania P                CAR 294994             *
.*                   Changed KEY11 to KEY12 before calls to xxPTEXC1          *
.*        V10.03.03  01/10/2013 J.Tan                  CAR 290169             *
.*                   Removed *C Carriage return prior HEAD132                 *
.*        V10.03.02  31/12/2012 Patrick Adair          CAR 261630             *
.*                   Removed port number from temp file name                  *
.*        V10.03.01  19/04/2012  Mike Laming           CAR 263541             *
.*                   Moved "OPEN PMSVX1A1" to "OPEN PATMI1A1" as now read in  *
.*                   PATMI1IO                                                 *
.*        V10.00.02  Davin                             CAR 227488             *
.*                   Added GOTO PRNT9999 to option 10 (prnt8000)              *
.*        V10.00.01  Mike Laming                       CAR 157391             *
.*                   Recompiled for changes to PATEX1FD.                      *
.******************************************************************************
.*        V9.12.01  18/01/2010  Mike Laming            CAR 157391             *
.*                  Add PMSVX1FD fields to replace User Defined Fields        *
.******************************************************************************
.*        V9.09.01  23/10/2007  Steve Armstrong        CAR 150869             *
.*                  Added-multi hospital functionality                        *
.******************************************************************************
.*        V9.08.01  05/02/2007  Mike Laming            CAR 114666             *
.*                  Corrected count of TMPDCASE in LODI000 routine            *
.******************************************************************************
.*        V9.03.01  19/04/2004  Sylvek Litewka         CAR 20222              *
.*                  Modified sections REC5000 and REC6000 to read ICD files   *
.*                  using new IO routines (RDPTICD1 and RDPTICO1) and based   *
.*                  on reported period 'To' date.                             *
.******************************************************************************
.*        V5.09.B02 12/12/2000  Steve Downing  SRF 7675                       *
.*                  Fixed I*A error when updating temp file 8                 *
.******************************************************************************
.*        V5.08.02  16/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.01  06/06/2000  Tonii                                         *
.*                  Changed from KEY10 to KEY14 for the health fund file      *
.******************************************************************************
.*             V5.07.01  30/09/1999  J Habasque  SRF 634382                   *
.*                       Fixed daycases (were showing as admissions) option 10*
.*             V5.01.02  16/09/1991  DIG              SRF 110659              *
.*                       Changed FORM8P2 variable to FORM12P4 to handle huge  *
.*                       financial figures                                    *
.*             V5.01.03  14/02/1992  i chung          SRF 113088              *
.*                       Fixed to print number of Day Cases for Fund Table    *
.*             V5.01.04  08/05/92  DIG                SRF 114444              *
.*                       Changed the operation report to only include the     *
.*                       first (highest) MBS code if the CPRIMOP parameter is *
.*                       turned on and to only include theatre charges if the *
.*                       PTCNDOOP parameter is turned on.                     *
.*             V5.01.05  20/10/92 J.Tan     SRF 116170                        *
.*                       Fixed no of operation (exclude blank operation codes)*
.*             V5.01.06  15/01/93 J.Tan  SRF 119867                           *
.*                       Recompiled for PATEXCIO                              *
.*             V5.01.07  07/05/93 J.Tan  SRF 122338                           *
.*                       Check for unique no if primary operation only        *
.*             V5.01.08  18/05/93 J.Tan  SRF 122472                           *
.*                       Fixed the net for primary operations option          *
.*        V5.01.09  15/07/93  WHIRLPOOL        SRF 123030                     *
.*                  Dudley postcode changes                                   *
.*        V5.01.10  25/05/1994 Ian Rutt                                       *
.*                  Fixed Global Recompile Bugs                               * 
.*        V5.01.11  08/09/1994  Rob Leonard    SRF 131629                     *
.*                  Fixed I*A on pat93c                                       *
.*        V5.01.12  28/09/1994  bez              SRF 131952                   * 
.*                  Fixed  F * I                                              *
.*        V5.02.01  28/02/1995   Whirlpool     SRF 134184                     * 
.*                  Fixed  I * L                                              *
.*        V5.07.01  06/05/1998   J.Tan                                        *
.*                  Changed record length of patextbf file                    *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       PATCALAG/INC
.
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDHEAD/INC
          INC       PATDO1FD/INC
          INC       PATEX1FD/INC
          INC       PATEXBFD/INC
          INC       PATEXCFD/INC
          INC       PATFN1FD/INC
          INC       PATHSPFD/INC
          INC       PATICDFD/INC
          INC       PATICOFD/INC
          INC       PATITMFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATWR1FD/INC
          INC       PMSVX1FD/INC
          INC       WEBSECFD/INC                                      *I-157391
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
+
.**********************************************************************
.*                      TEMP FILES DECLARATION                        *
.**********************************************************************
PATTM1XX  IFILE     SQL, FIXED=28, KEY="U1-2"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
DTMPAGEG  DIM       2         2          1        Age group breakup (1-12. Based
.                                                    on system parameters)
TMPADMNS  FORM      7         5          3        Number of Admissions
TMPBDAYS  FORM      7         5          8        Number of Bed Days
TMPDCASE  FORM      6         4         13        Number of Day Cases
TMPOPERS  FORM      8         5         17        Total number of Operations
TMPNET    FORM      8.2       6         22        Net charge generated
.End of Record                          28
.
. redefine form field from key
. ----------------------------
. NAME    TYPE    LENGTH   START LOC.   DESCRIPTION
. ----    ----    ------   ----------   -----------
TMPAGEGP  FORM      2         1         Age group breakup (1-12. Based on
.                                                         system parameters)
.
PATTM2XX  IFILE     SQL, FIXED=29, KEY="U1-2,3-3"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
.DTMPAGEG DIM       2         2          1        Age group breakup (1-12. Based
.                                                    on system parameters)
TMPSEX    DIM       1         1          3        Sex (M or F)
.TMPADMNS FORM      7         5          4        Number of Admissions
.TMPBDAYS FORM      7         5          9        Number of Bed Days
.TMPDCASE FORM      6         4         14        Number of Day Cases
.TMPOPERS FORM      8         5         18        Total number of Operations
.TMPNET   FORM      8.2       6         23        Net charge generated
.End of Record                          29
.
. redefine form field from key
. ----------------------------
. NAME    TYPE    LENGTH   START LOC.   DESCRIPTION
. ----    ----    ------   ----------   -----------
.TMPAGEGP  FORM      2         1         Age group breakup (1-12. Based on
.                                                           system parameters)
.
PATTM3XX  IFILE     SQL, FIXED=29, KEY="U1-3"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMPCODE   DIM       3         3          1        Code
.TMPADMNS FORM      7         5          4        Number of Admissions
.TMPBDAYS FORM      7         5          9        Number of Bed Days
.TMPDCASE FORM      6         4         14        Number of Day Cases
.TMPOPERS FORM      8         5         18        Total number of Operations
.TMPNET   FORM      8.2       6         23        Net charge generated
.End of Record                          29
.
.
PATT14XX  IFILE     SQL, FIXED=34, KEY="U1-8"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMPPCODE  DIM       8         8          1        Post Code
.TMPADMNS FORM      7         5          9        Number of Admissions
.TMPBDAYS FORM      7         5         14        Number of Bed Days
.TMPDCASE FORM      6         4         19        Number of Day Cases
.TMPOPERS FORM      8         5         23        Total number of Operations
.TMPNET   FORM      8.2       6         28        Net charge generated
.End of Record                          34
.
.
.
PATTM5XX  IFILE     SQL, FIXED=35, KEY="U1-9"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMPDISEA  DIM       9         9          1        Disease code
TMPPRIM   FORM      7         5         10        No. of times disease code
.                                                    was primary
TMPOTHER  FORM      7         5         15        No. of times disease code
.                                                    was not primary
.TMPBDAYS FORM      7         5         20        Number of Bed Days
.TMPDCASE FORM      6         4         25        Number of Day Cases
.TMPNET   FORM      8.2       6         29        Net charge generated
.End of Record                          35
.
.
PATTM6XX  IFILE     SQL, FIXED=30, KEY="U1-9"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMPOPCOD  DIM       9         9          1        Operation code
.TMPOPERS FORM      8         5         10        Total number of Operations
.TMPBDAYS FORM      7         5         15        Number of Bed Days
.TMPDCASE FORM      6         4         20        Number of Day Cases
.TMPNET   FORM      8.2       6         24        Net charge generated
.End of Record                          30
.
.
PATTM7XX  IFILE     SQL, FIXED=39, KEY="U1-3,4-9,10-13"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMPCCODE  DIM       3         3          1        Claim Code
TMPFUND   DIM       6         6          4        Health Fund Code
TMPTABLE  DIM       4         4         10        Health Fund Table Code
.TMPOPERS FORM      8         5         14        Total number of Operations
.TMPADMNS FORM      7         5         19        Number of Admissions
.TMPBDAYS FORM      7         5         24        Number of Bed Days
.TMPDCASE FORM      6         4         29        Number of Day Cases
.TMPNET   FORM      8.2       6         33        Net charge generated
.End of Record                          39
.
.
PATTM8XX  IFILE     SQL, FIXED=30, KEY="U1-3,4-6"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMPWARD   DIM       3         3          1        Ward
TMPBED    DIM       3         3          4        Bed
.TMPADMNS FORM      7         5          7        Number of Admissions
TMPTRANS  FORM      6         4         12        Number of transfers in
.TMPBDAYS FORM      7         5         16        Number of Bed Days
.TMPDCASE FORM      6         4         21        Number of Day Cases
.TMPOPERS FORM      8         5         25        Total number of Operations
.End of Record                          30
.
PATTM9XX  IFILE     SQL, FIXED=56, KEY="U1-30"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TMKEYFLD  DIM       30        30         1        Any Field/s up to 15 Chars
.TMPADMNS FORM      7         5         31        Number of Admissions
.TMPBDAYS FORM      7         5         36        Number of Bed Days
.TMPDCASE FORM      6         4         41        Number of Day Cases
.TMPOPERS FORM      8         5         45        Total number of Operations
.TMPNET   FORM      8.2       6         50        Net charge generated
.End of Record                          56
.
.
+
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
AGECAT    FORM      2
AGEFROM   DIM       3
AGETO     DIM       3
.
BEDDAYS   FORM      7
BJDAY     FORM      3
.
CATEGORY  DIM       2
CDYSDAYS  FORM      6
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
CDYSYEAR  FORM      2
CJDAY     FORM      3
CMDLINE   DIM       50
CODE      DIM       3
COUNT     FORM      2
.
DIM25     DIM       25
DESCCODE  DIM       20
DESCDISC  DIM       70
DESCFUND  DIM       30
DESCOPER  DIM       70
DESCWARD  DIM       20
.
EXCDATE   DIM       10
EXFDATE   DIM       10
EXTDATE   DIM       10
.
FLAGFUND  FORM      1
FNAMEA    DIM       8
FNAMEB    DIM       8
FNAMEC    DIM       8
FORM3     FORM      3
FORM8     FORM      8
FORM12P4  FORM      12.4
.
GNDADMNS  FORM      7
GNDBDAYS  FORM      7
GNDDCASE  FORM      6
GNDNET    FORM      8.2
GNDOPERS  FORM      8
GNDOTHER  FORM      7
GNDPERC   FORM      4.2
GNDPRIM   FORM      7
GNDTRANS  FORM      6
.
HEADER    DIM       35
.
IBCNMHOS  FORM      1
.
JYEAR     FORM      2
.
MAXOPTN   FORM      2
.
PERADMNS  FORM      3.2
PERBDAYS  FORM      3.2
PERDAYCS  FORM      3.2
PERNET    FORM      3.2
PEROPERS  FORM      3.2
PHSUBADM  FORM      3.2
PHSUBBDY  FORM      3.2
PHSUBDAY  FORM      3.2
PHSUBNET  FORM      3.2
PHSUBOPS  FORM      3.2
PRTFUND   DIM       6
PSUBADMS  FORM      3.2
PSUBBDAY  FORM      3.2
PSUBDAYC  FORM      3.2
PSUBOPER  FORM      3.2
PSUBNET   FORM      3.2
.
RECFLG    FORM      1
RECTYPE   DIM       1
.
SAVCCODE  DIM       3
SAVFUND   DIM       6
SAVOPTN   FORM      2
SAVWARD   DIM       3
SAVWDBED  DIM       6
SEC       FORM      2
SEX       DIM       6
SUBADMNS  FORM      7
SUBBDAYS  FORM      7
SUBDCASE  FORM      6
SUBHADMS  FORM      7
SUBHBDAY  FORM      7
SUBHDAYC  FORM      6
SUBHOPER  FORM      8
SUBHNET   FORM      8.2
SUBMISC   FORM      7.2
SUBNET    FORM      8.2
SUBOPERS  FORM      8
SUBPERC   FORM      4.2
SUBTRANS  FORM      6
.
TEMPFILE  DIM       8
TMPPERC   FORM      4.2
.
.                                           * Options that use Category/Codes
USECODE   FORM      2                       * 1 = Religion
.                                             2 = Care Class
.                                             3 = Country of Birth
.                                             4 = Source of Referral
.                                             5 = Marital Status
.                                             6 = Resident Status
.                                                           * start   *I-157391
.                                                      7 to 19 are new fields
.                                             7 = Record Location
.                                             8 = Aboriginality
.                                             9 = Admission Criterion
.                                            10 = Intent to Readmit
.                                            11 = Intend Stay Duration
.                                            12 = Mental Health Legal Status
.                                            13 = Service Unit Type
.                                            14 = Elective Patient Status
.                                            15 = Employment Status
.                                            16 = ReAdmission in 28 Days
.                                            17 = Discharge Intention
.                                            18 = Unplanned Readmission
.                                            19 = Unplanned Visit to Theatre
.                                                           * end     *I-157391
.                                                      following was  7 to 16
.                                            20 = Admission User Defined 1
.                                            21 = Admission User Defined 2
.                                            22 = Admission User Defined 3
.                                            23 = Admission User Defined 4
.                                            24 = Admission User Defined 5
.                                            25 = Admission User Defined 6
.                                            26 = Admission User Defined 7
.                                            27 = Patient Master User Defined 1
.                                            28 = Patient Master User Defined 2
.                                            29 = Patient Master User Defined 3
.                                            30 = Cat.LA - Preferred Language
.
VERT      FORM      2
+
.**********************************************************************
.*                             CONSTANTS                              *
.**********************************************************************
CODEC     INIT      "C "
CODECC    INIT      "CC"
CODECL    INIT      "CL"
CODEDT    INIT      "DT"
CODEM     INIT      "M "
CODELA    INIT      "LA"
CODEP1    INIT      "P1"
CODEP2    INIT      "P2"
CODEP3    INIT      "P3"
CODER     INIT      "R "
CODES     INIT      "S "
CODET     INIT      "T "
CODEU1    INIT      "U1"
CODEU2    INIT      "U2"
CODEU3    INIT      "U3"
CODEU4    INIT      "U4"
CODEU5    INIT      "U5"
CODEU6    INIT      "U6"
CODEU7    INIT      "U7"
.
CODELT    INIT      "LT"                                    * start   *I-157391
CODEMV    INIT      "MV"
CODEVA    INIT      "VA"
CODEVB    INIT      "VB"
CODEVR    INIT      "VR"
CODEVI    INIT      "VI"
CODELS    INIT      "LS"
CODEKA    INIT      "KA"
CODEKC    INIT      "KC"
CODEKD    INIT      "KD"
CODEKM    INIT      "KM"
CODEKN    INIT      "KN"
CODEKO    INIT      "KO"
CODEKB    INIT      "KB"                                    * end     *I-157391
.
FILEEXTB  INIT      "patexb"
FILEEXTC  INIT      "patexc"
.
HEAD01    INIT      "Age"
HEAD02    INIT      "Age & Sex"
HEAD03    INIT      "Religion"
HEAD04    INIT      "Postcode"
HEAD05    INIT      "Disease Code"
HEAD06    INIT      "Primary Operation Code"
HEAD06A   INIT      "Operation Code"
HEAD07    INIT      "Care Class"
HEAD08    INIT      "Claim Code"
HEAD09    INIT      "Country of Birth"
HEAD10    INIT      "Ward/Bed"
HEAD11    INIT      "Source of Referral"
HEAD12    INIT      "Marital Status"
HEAD13    INIT      "Resident Status"
HEAD14    INIT      "Operator"
HEAD15    INIT      "Record Location"
HEAD16    INIT      "Aboriginality"
HEAD17    INIT      "Admission Criterion"
HEAD18    INIT      "Intent to Readmit"
HEAD19    INIT      "Intend Stay Duration"
HEAD20    INIT      "Mental Health Legal Status"
HEAD21    INIT      "Service Unit Type"
HEAD22    INIT      "Elective Patient Status"
HEAD23    INIT      "Employment Status"
HEAD24    INIT      "ReAdmission in 28 Days"
HEAD25    INIT      "Discharge Intention"
HEAD26    INIT      "Unplanned Readmission"
HEAD27    INIT      "Unplanned Visit to Theatre"
.
ONEHUND   FORM      "100"
.
ZERO4     INIT      "0000"
ZERO8     INIT      "0000    "
.
PRGID     INIT      "IBAPAT93"
PRGNAM    INIT      "Use Of Hospital Reports"
VERSION   INIT      "V12.00.01"
+
.**********************************************************************
.*                           MAINLINE                                 *
.*                       Controlling Logic                            *
.**********************************************************************
ML0000    CALL      INIT0000            * initialization - open files &
.                                                          display header
ML1000    CALL      OPTN0000            * main option screen
          BRANCH    EXIT,ML9999
.
          CALL      GEXT0000            * get extraction file for the report
          BRANCH    EXIT,ML1000
.
          CALL      CREA0000            * create the temporary file
          CALL      CLR0000             * clear the temp file data variables
          CALL      LOAD0000            * load the temp file
          CALL      PRNT0000            * print the report
          CALL      KILL0000            * delete the temp file
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.**********************************************************************
.*                           INIT0000                                 *
.*               Open files and display header                        *
.**********************************************************************
INIT0000  CALL      DISPHEAD                * display screen header
.
          DISPLAY   *P50:24,"Opening ":
                    *P58:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P58:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P58:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P58:24,"paticddf";
          CALL      OPICD1                  * Open ICD Disease files
.
          DISPLAY   *P58:24,"paticdof";
          CALL      OPICO1                  * Open ICD Procedure/Operation files
.
          DISPLAY   *P58:24,"patitemn";
          OPEN      PATITEM1,"patitemn"
.
          DISPLAY   *P58:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P58:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P58:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"     * now read in PATMI1IO    *I-263541
.
          DISPLAY   *P58:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P58:24,"websecaf";
          OPEN      WEBSECA1,"websecaf"
.
          DISPLAY   *P58:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN;*9,CNOBEDS,*184,CPRIMOP,*235,CMDISP
          READ      CONTROLF,TEN3;*186,CMBSOPR,*216,CUSR1,*229,CUSR2
          READ      CONTROLF,TEN5;*191,CMUSR1,*204,CMUSR2,*217,CMUSR3,*233,CUSR3
          READ      CONTROLF,TEN8;*17,CUSR4,*31,CUSR5,*45,CUSR6,*59,CUSR7
          READ      CONTROLF,TWENTY;*92,PTCNAF01,PTCNAF02,PTCNAF03,PTCNAF04:
                                        PTCNAF05,PTCNAF06,PTCNAF07,PTCNAF08:
                                        PTCNAF09,PTCNAF10,PTCNAF11,PTCNAF12:
                                        PTCNAT01,PTCNAT02,PTCNAT03,PTCNAT04:
                                        PTCNAT05,PTCNAT06,PTCNAT07,PTCNAT08:
                                        PTCNAT09,PTCNAT10,PTCNAT11,PTCNAT12:
                                   *212,PTCNDOOP
          READ      CONTROLF,FIFTY9;*226,CCARECL
.
          IF        IBCNMHOS = 1
            DISPLAY   *P64:24,"pathspaf";
            OPEN      PATHSPA1,"pathspaf"
.
...         DISPLAY   *P64:24,"pmsvx1af";        * always read in PATMI1IO
...         OPEN      PMSVX1A1,"pmsvx1af"
          ENDIF
.
INIT9999  RETURN
+
.**********************************************************************
.*                               CLR0000                              *
.*          Clear all working variables from the temp files           *
.**********************************************************************
CLR0000   MOVE      ZERO,TMPADMNS
          MOVE      ZERO,TMPBDAYS
          MOVE      ZERO,TMPDCASE
          MOVE      ZERO,TMPOPERS
          MOVE      ZERO,TMPNET
          MOVE      ZERO,TMPPRIM
          MOVE      ZERO,TMPOTHER
          MOVE      ZERO,TMPTRANS
          MOVE      ZERO,PERADMNS  
          MOVE      ZERO,PERBDAYS 
          MOVE      ZERO,PERDAYCS
          MOVE      ZERO,PERNET 
          MOVE      ZERO,PEROPERS  
          MOVE      ZERO,PHSUBADM
          MOVE      ZERO,PHSUBBDY
          MOVE      ZERO,PHSUBDAY
          MOVE      ZERO,PHSUBNET
          MOVE      ZERO,PHSUBOPS
          MOVE      ZERO,PSUBADMS 
          MOVE      ZERO,PSUBBDAY
          MOVE      ZERO,PSUBDAYC 
          MOVE      ZERO,PSUBOPER
          MOVE      ZERO,PSUBNET
.
CLR9999   RETURN
+
.**********************************************************************
.*                           OPTN0000                                 *
.*                   Display the main option screen                   *
.**********************************************************************
OPTN0000  MOVE      FALSE,EXIT
          HLINE     *G37,2,52,80
          DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,"0",*HOFF,*P4:4,"Exit":
                    *P4:5,*V2LON,"Usage By -":
                    *P2:6,*V2LON,"1",*HOFF,*P5:6,"Age":
                    *P2:7,*V2LON,"2",*HOFF,*P5:7,"Age & Sex":
                    *P2:8,*V2LON,"3",*HOFF,*P5:8,"Religion":
                    *P2:9,*V2LON,"4",*HOFF,*P5:9,"Postcode":
                    *P2:10,*V2LON,"5",*HOFF,*P5:10,"Disease Code":
                    *P2:11,*V2LON,"6",*HOFF,*P5:11,"Primary Oper. Code":
                    *P2:12,*V2LON,"7",*HOFF,*P5:12,"Care Class":
                    *P2:13,*V2LON,"8",*HOFF,*P5:13,"Claim Code":
                    *P2:14,*V2LON,"9",*HOFF,*P5:14,"Country of Birth":
                    *P1:15,*V2LON,"10",*HOFF,*P5:15,"Ward/Bed":
                    *P1:16,*V2LON,"11",*HOFF,*P5:16,"Source of Referral":
                    *P1:17,*V2LON,"12",*HOFF,*P5:17,"Marital Status":
                    *P1:18,*V2LON,"13",*HOFF,*P5:18,"Resident Status":
                    *P1:19,*V2LON,"14",*HOFF,*P5:19,"Operator":
.                                                           * start   *I-157391
                    *P29:5,*V2LON,"Usage By -":
                    *P26:6,*V2LON,"15",*HOFF,*P30:6,"Record Location":
                    *P26:7,*V2LON,"16",*HOFF,*P30:7,"Aboriginality":
                    *P26:8,*V2LON,"17",*HOFF,*P30:8,"Admission Criterion":
                    *P26:9,*V2LON,"18",*HOFF,*P30:9,"Intent to Readmit":
                    *P26:10,*V2LON,"19",*HOFF,*P30:10,"Intend Stay Duration":
                    *P26:11,*V2LON,"20",*HOFF,*P30:11,"M/H Legal Status":
                    *P26:12,*V2LON,"21",*HOFF,*P30:12,"Service Unit Type":
                    *P26:13,*V2LON,"22",*HOFF,*P30:13,"Elective Pat.Status":
                    *P26:14,*V2LON,"23",*HOFF,*P30:14,"Employment Status":
                    *P26:15,*V2LON,"24",*HOFF,*P30:15,"ReAdmiss in 28 Days":
                    *P26:16,*V2LON,"25",*HOFF,*P30:16,"Discharge Intention":
                    *P26:17,*V2LON,"26",*HOFF,*P30:17,"Unplanned Readmiss.":
                    *P26:18,*V2LON,"27",*HOFF,*P30:18,"Unplan.Vis.to Theatre":
.                                                           * end     *I-157391
.                   
                    *P57:5,*V2LON,"Usage By -";
.
          MOVE      "27",MAXOPTN
          MOVE      SIX,CVERT
          MOVE      "28",OPTION
          MOVE      ONE,COUNT
.
.------ test the user defined fields ------
.       Add an option for Catg LA (Preferred language)
.
OPTN0100  LOAD      FORM1,COUNT,CUSR1,CUSR2,CUSR3,CUSR4,CUSR5,CUSR6,CUSR7:
                                CMUSR1,CMUSR2,CMUSR3,ONE
.
          COMPARE   ONE,FORM1               * see if the user defined field 
          GOTO      OPTN0500 IF NOT EQUAL     is turned on
.
          LOAD      CATEGORY,COUNT,CODEU1,CODEU2,CODEU3,CODEU4,CODEU5,CODEU6:
                                   CODEU7,CODEP1,CODEP2,CODEP3,CODELA
.
          MOVE      SP20,TDESC
          PACK      KEY5,CATEGORY,SP3
          CALL      RDCODE1                 * read the patient codes file
          MOVE      TDESC,DIM25
.
          DISPLAY   *P54:CVERT,*V2LON,OPTION,*HOFF,SP2,DIM25;
          MOVE      OPTION,MAXOPTN
          ADD       ONE,CVERT
          ADD       ONE,OPTION
.
.------ increment the counter and see if there are no more user defined ------
.------ fields ------
.
OPTN0500  ADD       ONE,COUNT
          COMPARE   TEN2,COUNT              * try next user defined field if
          GOTO      OPTN0100 IF NOT EQUAL     appropriate
.
.------ select option ------
.
OPTN1000  MOVE      ZERO,OPTION
          DISPLAY   *P1:21,*EL,"Select Option : ",UNDLN2;
          KEYIN     *P17:21,*V2LON,*RV,OPTION;
.
          COMPARE   ZERO,OPTION             * see if an option has been chosen
          GOTO      OPTN9000 IF EQUAL
.
          COMPARE   OPTION,MAXOPTN          * make sure we have a valid option
          GOTO      OPTN2000 IF NOT LESS
          BEEP
          GOTO      OPTN1000
.
.------ valid option chosen ------
.
OPTN2000  MOVE      "Usage By ",HEADER
          ENDSET    HEADER
.
          COMPARE   "28",OPTION             * see if a user defined field has
          GOTO      OPTN2050 IF NOT LESS      been chosen
.
.                                           * set up main headings
          LOAD      DIM25,OPTION,HEAD01,HEAD02,HEAD03,HEAD04,HEAD05:
                                 SP20,HEAD07,HEAD08,HEAD09,HEAD10:
                                 HEAD11,HEAD12,HEAD13,HEAD14,HEAD15:
                                 HEAD16,HEAD17,HEAD18,HEAD19,HEAD20:
                                 HEAD21,HEAD22,HEAD23,HEAD24,HEAD25:
                                 HEAD26,HEAD27
.
          COMPARE   SIX,OPTION              * see if we have the sixth option
          IF        @EQUAL
            MOVE      HEAD06A,DIM25
            LOAD      DIM25,CPRIMOP,HEAD06
          ENDIF
.
.
.------ load the category ------
.
OPTN2020  LOAD      CATEGORY,OPTION,SP2,SP2,CODER,SP2,SP2:               *  5 *
                                    SP2,CODECC,SP2,CODEC,SP2:            * 10 *
                                    CODES,CODEM,CODET,SP2,CODEMV:        * 15 *
                                    CODEVA,CODEVB,CODEVR,CODEVI,CODELS:  * 20 *
                                    CODEKA,CODEKC,CODEKD,CODEKM,CODEKN:  * 25 *
                                    CODEKO,CODEKB                        * 30 *
          LOAD      USECODE,OPTION,ZERO,ZERO,ONE,ZERO,ZERO:
                                   ZERO,TWO,ZERO,THREE,ZERO:
                                   FOUR,FIVE,SIX,ZERO,SEVEN:
                                   EIGHT,NINE,TEN,TEN1,TEN2:
                                   TEN3,TEN4,TEN5,TEN6,TEN7:
                                   TEN8,TEN9
          GOTO      OPTN2600
.
.------ initialise the counters for getting the user defined field chosen -----
.
OPTN2050  MOVE      ONE,COUNT
          MOVE      "27",FORM2              * User Fields from Option 28 on
.
.------ get the next user defined field parameter ------
.       Add category LA for Preferred language
.
OPTN2100  LOAD      FORM1,COUNT,CUSR1,CUSR2,CUSR3,CUSR4,CUSR5,CUSR6,CUSR7:
                                CMUSR1,CMUSR2,CMUSR3,ONE
.
          COMPARE   ONE,FORM1               * skip if user defined field is not
          GOTO      OPTN2200 IF NOT EQUAL     turned on
          ADD       ONE,FORM2
.
          COMPARE   FORM2,OPTION            * see if we have the option chosen
          GOTO      OPTN2300 IF EQUAL
.
.------ increment the count and get try the next user defined field ------
.
OPTN2200  ADD       ONE,COUNT
          GOTO      OPTN2100
.
.------ we have the user defined option so set up the relevant fields ------
.
OPTN2300  LOAD      CATEGORY,COUNT,CODEU1,CODEU2,CODEU3,CODEU4,CODEU5:
                                   CODEU6,CODEU7,CODEP1,CODEP2,CODEP3,CODELA
....      LOAD      USECODE,COUNT,SEVEN,EIGHT,NINE,TEN,TEN1,TEN2,TEN3,TEN4:
....                              TEN5,TEN6
.                                                                     *I-157391
          LOAD      USECODE,COUNT,TWENTY,TWENTY1,TWENTY2,TWENTY3,TWENTY4:
                                  TWENTY5,TWENTY6,TWENTY7,TWENTY8,TWENTY9,THIRTY
.
          MOVE      SP20,TDESC
          PACK      KEY5,CATEGORY,SP3
          CALL      RDCODE1                 * read the patient codes file
          MOVE      TDESC,DIM25
.
.------ display the screen header ------
.
OPTN2600  APPEND    DIM25,HEADER
          RESET     HEADER
          STRIP     HEADER
          RESET     HEADER
          DISPLAY   *P52:2,*V2LON,"- ",*+,HEADER,SP1;
          MOVE      OPTION,SAVOPTN
          GOTO      OPTN9999
.
.------ Exit option chosen ------
.
OPTN9000  MOVE      TRUE,EXIT
.
OPTN9999  RETURN
+
.**********************************************************************
.*                              GEXT0000                              *
.*                Get the extraction files for the report             *
.**********************************************************************
GEXT0000  MOVE      FALSE,EXIT
.
          CALL      GEXTN                  * get the extraction file number
          COMPARE   ZERO,OPTION            * see if no file chosen
          GOTO      GEXT9000 IF EQUAL
.
          CALL      ETABPOS                * get sector and position for dates
          READ      CONTROLF,SEC;*ETABPS,EDATE,EFDATE,ETDATE,EDOPERS
.
          CALL      ETOTPOS                * get sector and position for totals
          READ      CONTROLF,SEC;*ETABPS,EADMNS,ETPRIMOP,ETPRIMDS,EBDAYS:
                                  EDCASES,ENETAMT
.
          MATCH     SP8,EDATE              * see if extraction creation 
          GOTO      GEXT8000 IF EQUAL        date exists
.
          MATCH     "00000000",EDATE       * see if extraction creation 
          GOTO      GEXT8000 IF EQUAL        date exists
.
          MOVE      FIVE,CVERT
          ADD       OPTION,CVERT
          UNPACK    EDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P13:CVERT,*V2LON,OPTION,*P20:CVERT,CPCDATE;
.
          PACK      FNAMEB,FILEEXTB,OPTION
          REP       " 0",FNAMEB
          PACK      FNAMEC,FILEEXTC,OPTION
          REP       " 0",FNAMEC
.
          MOVE      OPTION,DIM2              * set up parameter
          CALL      OPPTEXA1                 * open file
.
          OPEN      CONTROLF,"controlf"
.
          TRAP      GEXT8200 IF IO
          OPEN      PATEXTB1,FNAMEB
          TRAPCLR   IO
.
          TRAP      GEXT8300 IF IO
          OPEN      PATEXTC1,FNAMEC
          TRAPCLR   IO
.
          CALL      KHOS0000                * get hospital
          BRANCH    EXIT,GEXT0000
.
          CALL      CONTQST                 * see if O.K. to continue
          BRANCH    CEXIT,GEXT9500,GEXT0000,GEXT9000
.
.------ invalid selection of extraction file ------
.
GEXT8000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Invalid Extraction file chosen **    ";
          CALL      HITENTER
          GOTO      GEXT0000
.
.------ extraction file B does not exist ------
.
GEXT8200  DISPLAY   *P1:24,*EL,*B,*V2LON,"** ",*BLINKON,"ERROR",*HOFF,*V2LON:
                           " - Extraction file ",FNAMEB," does not exist **  ";
          CALL      HITENTER
          NORETURN
          GOTO      GEXT0000
.
.------ extraction file C does not exist ------
.
GEXT8300  DISPLAY   *P1:24,*EL,*B,*V2LON,"** ",*BLINKON,"ERROR",*HOFF,*V2LON:
                           " - Extraction file ",FNAMEC," does not exist **  ";
          CALL      HITENTER
          NORETURN
          GOTO      GEXT0000
.
.------ no extraction file entered OR cancel selected ------
.
GEXT9000  MOVE      TRUE,EXIT
          GOTO      GEXT9999
.
.------ "Yes" has been chosen to continue ------
.
GEXT9500  UNPACK    EDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * pack the date
          MOVE      CPCDATE,EXCDATE
.
          UNPACK    EFDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * pack the date
          MOVE      CPCDATE,EXFDATE
.
          UNPACK    ETDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * pack the date
          MOVE      CPCDATE,EXTDATE
.
GEXT9999  RETURN
+
.**********************************************************************
.*                              CREA0000                              *
.*                   Create the Temp Indexed File                     *
.**********************************************************************
CREA0000  CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,TEMPFILE
.
          DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Creating Temp Indexed file":
                           *HOFF,*V2LON," - Please wait";
.
.                                           * Column 1 options 1 to 14
          BRANCH    SAVOPTN,CREA1000,CREA2000,CREA3000,CREA4000,CREA5000: *  5*
                            CREA6000,CREA3000,CREA7000,CREA3000,CREA8000: * 10*
                            CREA3000,CREA3000,CREA3000,CREA9000 
.
          GOTO      CREA3000                * all the rest are Cat/Codes tables
.
.------ create the temp file for the first option ------
.
CREA1000  CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          APPEND    " 28 u1-2",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM1XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the second option ------
.
CREA2000  CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          APPEND    " 29 u1-2,3-3",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM2XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the every option that uses a codes ------
.------ file code ------
.
CREA3000  CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          APPEND    " 29 u1-3",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM3XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the fourth option ------
.
CREA4000  CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          APPEND    " 34 u1-8",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATT14XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the fifth option ------
.
CREA5000  CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          APPEND    " 35 u1-9",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM5XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the sixth option ------
.
CREA6000  CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          APPEND    " 30 u1-9",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM6XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the eighth option ------
.
CREA7000  CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          APPEND    " 39 u1-3,4-9,10-13",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM7XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the tenth option ------
.
CREA8000  CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          APPEND    " 30 u1-3,4-6",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM8XX,TEMPFILE
          GOTO      CREA9999
.
.------ create the temp file for the ninth option ------
.
CREA9000  CALL      KILL0000                * kill existing temp file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          APPEND    " 56 u1-30",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM9XX,TEMPFILE
          GOTO      CREA9999
.
CREA9999  RETURN
+
.**********************************************************************
.*                              KILL0000                              *
.*                  Kill the Temp file if it already exists           *
.**********************************************************************
KILL0000  BRANCH    SAVOPTN,KILL1000,KILL2000,KILL3000,KILL4000,KILL5000:
                            KILL6000,KILL3000,KILL7000,KILL3000,KILL8000:
                            KILL3000,KILL3000,KILL3000,KILL9000
.
          GOTO      KILL3000                * all the rest are Cat/Codes tables
.
.------ kill the temp file for the first option ------
.
KILL1000  CLOSE     PATTM1XX
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for the second option ------
.
KILL2000  CLOSE     PATTM2XX
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for every option that uses a codes file code ------
.
KILL3000  CLOSE     PATTM3XX
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for the fourth option ------
.
KILL4000  CLOSE     PATT14XX
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for the fifth option ------
.
KILL5000  CLOSE     PATTM5XX
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for the sixth option ------
.
KILL6000  CLOSE     PATTM6XX
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for the eighth option ------
.
KILL7000  CLOSE     PATTM7XX
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for the tenth option ------
.
KILL8000  CLOSE     PATTM8XX
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
.------ kill the temp file for the ninth option ------
.
KILL9000  CLOSE     PATTM9XX
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          GOTO      KILL9999
.
KILL9999  RETURN
+
.******************************************************************************
.*                                  KHOS0000       Called by:                 *
.*                For multi-hospital, get the hospital code                   *
.******************************************************************************
.
KHOS0000  COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      KHOS9999 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P1:24,*EL,"Hospital Id : ";
          MOVE      TEN5,ECOL
          MOVE      "24",EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND                * Not Mandatory
.
          CALL      PATHSPKY                     * get code
          BRANCH    EXIT,KHOS2000:               * nothing input
                         KHOS9500                * exitchar input
          GOTO      KHOS3000                
.
KHOS2000  MOVE      "All Hospitals",PTHSNAME
          MOVE      SP10,PTHSHOSP
          MOVE      ZERO,EXIT
.
KHOS3000  DISPLAY   *P20:24,*V2LON,PTHSNAME;
          GOTO      KHOS9999
.
KHOS9500  MOVE      ONE,EXIT
.
KHOS9999  RETURN
+
.**********************************************************************
.*                              LOAD0000                              *
.*          Load the temporary file with the relevant data            *
.**********************************************************************
LOAD0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Loading Temp Indexed file":
                           *HOFF,*V2LON," - Please wait";
.
.                                           * Column 1 - Options 1 to 14
          BRANCH    SAVOPTN,LOAD1000,LOAD2000,LOAD3000,LOAD4000,LOAD5000: * 5*
                            LOAD6000,LOAD7000,LOAD8000,LOAD3000,LOAD9000: *10*
                            LOAD3000,LOAD3000,LOAD3000,LOAD9500:          *15*
.                                           * Column 2 - Options 15 to 27
                                                                LOAD3000: *15*
                            LOAD3000,LOAD3000,LOAD3000,LOAD3000,LOAD3000: *20*
                            LOAD3000,LOAD3000,LOAD3000,LOAD3000,LOAD3000: *25*
                            LOAD3000,LOAD3000:                            *30*
.                                           * Column 3 - Options 28 to 37
                                              LOAD3000,LOAD3000,LOAD3000: *30*
                            LOAD3000,LOAD3000,LOAD3000,LOAD3000,LOAD3000: *35*
                            LOAD3000,LOAD3000,LOAD3000                    *40*
.
.------ load the temporary file for option 1 ------
.
LOAD1000  CALL      LODA0000                * load temp file for the 1st option
          GOTO      LOAD9999
.
.------ load the temporary file for option 2 ------
.
LOAD2000  CALL      LODB0000                * load temp file for the 2nd option
          GOTO      LOAD9999
.
.------ load the temporary file for every option that uses a codes ------
.------ file code ------
.
LOAD3000  CALL      LODC0000
          GOTO      LOAD9999
.
.------ load the temporary file for option 4 ------
.
LOAD4000  CALL      LODD0000                * load temp file for the 4th option
          GOTO      LOAD9999
.
.------ load the temporary file for option 5 ------
.
LOAD5000  CALL      LODE0000                * load temp file for the 5th option
          GOTO      LOAD9999
.
.------ load the temporary file for option 6 ------
.
LOAD6000  CALL      LODF0000                * load temp file for the 6th option
          GOTO      LOAD9999
.
.------ load the temporary file for option 7 ------
.
LOAD7000  BRANCH    CCARECL,LOAD7500        * skip if using datable care class
          CALL      LODC0000                * load the temporary file with care
.                                             class as a normal codes file code
          GOTO      LOAD9999
.
.------ care class is datable ------
.
LOAD7500  CALL      LODG0000                * load temp file for the 7th option
          GOTO      LOAD9999
.
.------ load the temporary file for option 8 ------
.
LOAD8000  CALL      LODH0000                * load temp file for the 8th option
          GOTO      LOAD9999
.
.------ load the temporary file for option 10 ------
.
LOAD9000  CALL      LODI0000                * load temp file for the 10th option
          GOTO      LOAD9999
.
LOAD9500  CALL      LODJ0000                * load temp file for the 14th option
          GOTO      LOAD9999
.
LOAD9999  RETURN
+
.**********************************************************************
.*                              LODA0000                              *
.*      Load the temporary file for the first option with the         *
.*      relevant data                                                 *
.**********************************************************************
LODA0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODA1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODA9999
.
. check for multi hospital
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      LODA1050 IF NOT EQUAL        * no - ignore check
.
          MATCH     SP10,PTHSHOSP                * all hospitals ?
          GOTO      LODA1050 IF EQUAL            * yes - ignore check
.
          MOVE      PTXAADMN,KEY8
          CALL      RDPMVX11                     * visit extension rec. on file?
          BRANCH    OVRCD,LODA1000               * no - ignore record
.
          MATCH     PMVXMHOS,PTHSHOSP            * same hospital ?
          GOTO      LODA1000 IF NOT EQUAL        * no - ignore record
.
LODA1050  CALL      AGE0000                 * calculate age breakup patient
          BRANCH    EXIT,LODA1000             falls into
.
          MOVE      AGECAT,KEY2
          CALL      RDTMPR1                 * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      LODA1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR1                 * write to the temp file
          CALL      RDTMPR1                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODA1100  MATCH     EFDATE,PTXAADAT         * skip if admission date is < the
          GOTO      LODA2000 IF LESS          start of the period
          ADD       ONE,TMPADMNS
.
.------ skip if not a day case ------
.
LODA2000  MATCH     PTXAADAT,PTXADDAT
          GOTO      LODA3000 IF NOT EQUAL
          ADD       ONE,TMPDCASE
.
.------ update the first temp file ------
.
LODA3000  ADD       PTXAPLOS,TMPBDAYS
          CALL      UPTMPR1
.
          PACK      KEY17,PTXAADMN,SP20
          CALL      RSPTEXB1                * position on extraction file B
.
.------ read through the extraction file B ------
.
LODA3100  CALL      RKPTEXB1
          BRANCH    OVRCD,LODA4000
.
          MATCH     PTXAADMN,PTXBADMN       * compare admission numbers
          GOTO      LODA4000 IF NOT EQUAL
.
          CALL      RDTMPR1
.
          ADD       PTXBACCM,TMPNET
          ADD       PTXBTHET,TMPNET
          ADD       PTXBMISC,TMPNET
          CALL      UPTMPR1                 * update the first temp file
          GOTO      LODA3100
.
.------ process the operations ------
.
LODA4000  MOVE      ANSO,RECTYPE
          LOAD      RECTYPE,CMBSOPR,ANSM
          PACK      KEY12,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
.
.------ read through the extraction file C ------
.
LODA4100  CALL      RKPTEXC1
          BRANCH    OVRCD,LODA1000
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LODA1000 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LODA1000 IF NOT EQUAL
.
          CALL      RDTMPR1                 * read the temp file for update
.
          ADD       ONE,TMPOPERS
          CALL      UPTMPR1                 * update the first temp file
          GOTO      LODA4100
.
LODA9999  RETURN
+
.**********************************************************************
.*                              LODB0000                              *
.*      Load the temporary file for the second option with the        *
.*      relevant data                                                 *
.**********************************************************************
LODB0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODB1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODB9999
.
. check for multi hospital
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      LODB1050 IF NOT EQUAL        * no - ignore check
.
          MATCH     SP10,PTHSHOSP                * all hospitals ?
          GOTO      LODB1050 IF EQUAL            * yes - ignore check
.
          MOVE      PTXAADMN,KEY8
          CALL      RDPMVX11                     * visit extension rec. on file?
          BRANCH    OVRCD,LODB1000               * no - ignore record
.
          MATCH     PMVXMHOS,PTHSHOSP            * same hospital ?
          GOTO      LODB1000 IF NOT EQUAL        * no - ignore record
.
LODB1050  CALL      AGE0000                 * calculate age breakup patient
          BRANCH    EXIT,LODB1000             falls into
.
          PACK      KEY3,AGECAT,PTXASEX
          CALL      RDTMPR2                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODB1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR2                 * write to the temp file
          CALL      RDTMPR2                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODB1100  MATCH     EFDATE,PTXAADAT         * skip if admission date is < the
          GOTO      LODB2000 IF LESS          start of the period
          ADD       ONE,TMPADMNS
.
.------ skip if not a day case ------
.
LODB2000  MATCH     PTXAADAT,PTXADDAT
          GOTO      LODB3000 IF NOT EQUAL
          ADD       ONE,TMPDCASE
.
.------ update the temp file ------
.
LODB3000  ADD       PTXAPLOS,TMPBDAYS
          CALL      UPTMPR2
.
          PACK      KEY17,PTXAADMN,SP20
          CALL      RSPTEXB1                * position on extraction file B
.
.------ read through the extraction file B ------
.
LODB3100  CALL      RKPTEXB1
          BRANCH    OVRCD,LODB4000
.
          MATCH     PTXAADMN,PTXBADMN       * compare admission numbers
          GOTO      LODB4000 IF NOT EQUAL
.
          CALL      RDTMPR2                 * read the second temp file
.
          ADD       PTXBACCM,TMPNET
          ADD       PTXBTHET,TMPNET
          ADD       PTXBMISC,TMPNET
          CALL      UPTMPR2                 * update the second temp file
          GOTO      LODB3100
.
.------ process the operations ------
.
LODB4000  MOVE      ANSO,RECTYPE
          LOAD      RECTYPE,CMBSOPR,ANSM
          PACK      KEY12,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
.
.------ read through the extraction file C ------
.
LODB4100  CALL      RKPTEXC1
          BRANCH    OVRCD,LODB1000
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LODB1000 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LODB1000 IF NOT EQUAL
.
          CALL      RDTMPR2                 * read the second temp file
.
          ADD       ONE,TMPOPERS
          CALL      UPTMPR2                 * update the second temp file
          GOTO      LODB4100
.
LODB9999  RETURN
+
.**********************************************************************
.*                              AGE0000                               *
.*            Calculate age breakup patient falls into                *
.**********************************************************************
AGE0000   MOVE      FALSE,EXIT
          MOVE      PTXAADMN,KEY8
          CALL      RDMISS1                 * read the admission file
          BRANCH    OVRCD,AGE9000
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1                 * read the master file
          BRANCH    OVRCD,AGE9000
.
          MOVE      PTXAADAT,AGEDATE
          CALL      CALCAGE                 * calculate the patients age
          MOVE      ONE,COUNT
.
.------ check each age breakup ------
.
AGE1000   LOAD      AGEFROM,COUNT,PTCNAF01,PTCNAF02,PTCNAF03,PTCNAF04,PTCNAF05:
                                  PTCNAF06,PTCNAF07,PTCNAF08,PTCNAF09,PTCNAF10:
                                  PTCNAF11,PTCNAF12
          LOAD      AGETO,COUNT,PTCNAT01,PTCNAT02,PTCNAT03,PTCNAT04,PTCNAT05:
                                PTCNAT06,PTCNAT07,PTCNAT08,PTCNAT09,PTCNAT10:
                                PTCNAT11,PTCNAT12
.
          MATCH     SP3,AGEFROM             * see if this breakup exists
          GOTO      AGE1900 IF EQUAL
          UNPACK    AGEFROM,DIM2,ANS
.
          MATCH     ANSD,ANS                * see if this breakup represents
          GOTO      AGE1200 IF EQUAL          days
.
          MATCH     ANSM,ANS                * see if this breakup represents
          GOTO      AGE1300 IF EQUAL          months
          MOVE      AGEFROM,FORM3
.
          COMPARE   FORM3,PSAGEYRS          * see if years are in range
          GOTO      AGE1900 IF LESS
          MOVE      AGETO,FORM3
.
          COMPARE   PSAGEYRS,FORM3          * see if years are in range
          GOTO      AGE1900 IF LESS
          MOVE      COUNT,AGECAT
          GOTO      AGE9999
.
.------ age breakup is in days ------
.
AGE1200   MOVE      DIM2,FORM2
.
          COMPARE   FORM2,PSAGEDAY          * see if days are in range
          GOTO      AGE1900 IF LESS
          UNPACK    AGETO,DIM2,ANS
          MOVE      DIM2,FORM2
.
          COMPARE   PSAGEDAY,FORM2          * see if days are in range
          GOTO      AGE1900 IF LESS
          MOVE      COUNT,AGECAT
          GOTO      AGE9999
.
.------ age breakup is in months ------
.
AGE1300   MOVE      DIM2,FORM2
.
          COMPARE   FORM2,PSAGEMNT          * see if months are in range
          GOTO      AGE1900 IF LESS
          UNPACK    AGETO,DIM2,ANS
          MOVE      DIM2,FORM2
.
          COMPARE   PSAGEMNT,FORM2          * see if months are in range
          GOTO      AGE1900 IF LESS
          MOVE      COUNT,AGECAT
          GOTO      AGE9999
.
.------ increment counter and try next age breakdown if applicable ------
.
AGE1900   ADD       ONE,COUNT
          COMPARE   TEN3,COUNT              * see if we have run out of 
          GOTO      AGE1000 IF NOT EQUAL      breakdowns
.
.------ either patient has no admission record or no master file record ------
.------ or age does not fall into any age breakdown ------
.
AGE9000   MOVE      TRUE,EXIT
.
AGE9999   RETURN
+
.**********************************************************************
.*                              LODC0000                              *
.*      Load the temporary file for any report option that uses       *
.*      a codes file code with the relevant data                      *
.**********************************************************************
LODC0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODC1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODC9999
.
. check for multi hospital
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      LODC1050 IF NOT EQUAL        * no - ignore check
.
          MATCH     SP10,PTHSHOSP                * all hospitals ?
          GOTO      LODC1050 IF EQUAL            * yes - ignore check
.
          MOVE      PTXAADMN,KEY8
          CALL      RDPMVX11                     * visit extension rec. on file?
          BRANCH    OVRCD,LODC1000               * no - ignore record
.
          MATCH     PMVXMHOS,PTHSHOSP            * same hospital ?
          GOTO      LODC1000 IF NOT EQUAL        * no - ignore record
.
.                                                * Column 1 Options with Cat/Cod
LODC1050  LOAD      CODE,USECODE,PTXARELG,PTXAACRE,PTXACONT,PTXASOUR,PTXAMSTT:
                                 PTXARESI:
.                                                * Column 2 Options with Cat/Cod
                                          PTXARLOC,PTXAABRG,PTXACADM,PTXAIRAD:
                                 PTXAIDUS,PTXAMHLS,PTXAASUT,PTXAELPS,PTXAEMPL:
                                 PTXAREAD,PTXAUDIN,PTXAUREA,PTXAUVTH:
.                                                * Column 3 Options with Cat/Cod
                                                                     PTXAAUS1:
                                 PTXAAUS2,PTXAAUS3,PTXAAUS4,PTXAAUS5,PTXAAUS6:
                                 PTXAAUS7,PTXAPUS1,PTXAPUS2,PTXAPUS3,PTXAPLAN
.
          MOVE      CODE,KEY3
          CALL      RDTMPR3                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODC1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR3                 * write to the temp file
          CALL      RDTMPR3                 * re-read record just written for
.                                             update
.------ see if patient is admitted in the period ------
.
LODC1100  MATCH     EFDATE,PTXAADAT         * skip if admission date is < the
          GOTO      LODC2000 IF LESS          start of the period
          ADD       ONE,TMPADMNS
.
.------ skip if not a day case ------
.
LODC2000  MATCH     PTXAADAT,PTXADDAT
          GOTO      LODC3000 IF NOT EQUAL
          ADD       ONE,TMPDCASE
.
.------ update the temp file ------
.
LODC3000  ADD       PTXAPLOS,TMPBDAYS
          CALL      UPTMPR3
.
          PACK      KEY17,PTXAADMN,SP20
          CALL      RSPTEXB1                * position on extraction file B
.
.------ read through the extraction file B ------
.
LODC3100  CALL      RKPTEXB1
          BRANCH    OVRCD,LODC4000
.
          MATCH     PTXAADMN,PTXBADMN       * compare admission numbers
          GOTO      LODC4000 IF NOT EQUAL
.
          CALL      RDTMPR3                 * read the second temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODC3200 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR3                 * write to the temp file
          CALL      RDTMPR3                 * re-read record just written for
.                                           * update
LODC3200  ADD       PTXBACCM,TMPNET
          ADD       PTXBTHET,TMPNET
          ADD       PTXBMISC,TMPNET
          CALL      UPTMPR3                 * update the second temp file
          GOTO      LODC3100
.
.------ process the operations ------
.
LODC4000  MOVE      ANSO,RECTYPE
          LOAD      RECTYPE,CMBSOPR,ANSM
          PACK      KEY12,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
.
.------ read through the extraction file C ------
.
LODC4100  CALL      RKPTEXC1
          BRANCH    OVRCD,LODC1000
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LODC1000 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LODC1000 IF NOT EQUAL
.
          CALL      RDTMPR3                 * read the second temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODC4200 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR3                 * write to the temp file
          CALL      RDTMPR3                 * re-read record just written for
.                                           * update
LODC4200  ADD       ONE,TMPOPERS
          CALL      UPTMPR3                 * update the second temp file
          GOTO      LODC4100
.
LODC9999  RETURN
+
.**********************************************************************
.*                              LODD0000                              *
.*                Load the temporary file for option 4                *
.**********************************************************************
LODD0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODD1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODD9999
.
. check for multi hospital
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      LODD1050 IF NOT EQUAL        * no - ignore check
.
          MATCH     SP10,PTHSHOSP                * all hospitals ?
          GOTO      LODD1050 IF EQUAL            * yes - ignore check
.
          MOVE      PTXAADMN,KEY8
          CALL      RDPMVX11                     * visit extension rec. on file?
          BRANCH    OVRCD,LODD1000               * no - ignore record
.
          MATCH     PMVXMHOS,PTHSHOSP            * same hospital ?
          GOTO      LODD1000 IF NOT EQUAL        * no - ignore record
.
LODD1050  MOVE      PTXAPOST,KEY8
          CALL      RDTMPR4                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODD1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR4                 * write to the temp file
          CALL      RDTMPR4                 * re-read record just written for
.                                             update
.------ see if patient is admitted in the period ------
.
LODD1100  MATCH     EFDATE,PTXAADAT         * skip if admission date is < the
          GOTO      LODD2000 IF LESS          start of the period
          ADD       ONE,TMPADMNS
.
.------ skip if not a day case ------
.
LODD2000  MATCH     PTXAADAT,PTXADDAT
          GOTO      LODD3000 IF NOT EQUAL
          ADD       ONE,TMPDCASE
.
.------ update the temp file ------
.
LODD3000  ADD       PTXAPLOS,TMPBDAYS
          CALL      UPTMPR4
.
          PACK      KEY17,PTXAADMN,SP20
          CALL      RSPTEXB1                * position on extraction file B
.
.------ read through the extraction file B ------
.
LODD3100  CALL      RKPTEXB1
          BRANCH    OVRCD,LODD4000
.
          MATCH     PTXAADMN,PTXBADMN       * compare admission numbers
          GOTO      LODD4000 IF NOT EQUAL
.
          CALL      RDTMPR4                 * read the temp file for update
.
          ADD       PTXBACCM,TMPNET
          ADD       PTXBTHET,TMPNET
          ADD       PTXBMISC,TMPNET
          CALL      UPTMPR4                 * update the temp file
          GOTO      LODD3100
.
.------ process the operations ------
.
LODD4000  MOVE      ANSO,RECTYPE
          LOAD      RECTYPE,CMBSOPR,ANSM
          PACK      KEY12,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
.
.------ read through the extraction file C ------
.
LODD4100  CALL      RKPTEXC1
          BRANCH    OVRCD,LODD1000
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LODD1000 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LODD1000 IF NOT EQUAL
.
          CALL      RDTMPR4                 * read the temp file for update
.
          ADD       ONE,TMPOPERS
          CALL      UPTMPR4                 * update the temp file
          GOTO      LODD4100
.
LODD9999  RETURN
+
.**********************************************************************
.*                              LODE0000                              *
.*                Load the temporary file for option 5                *
.**********************************************************************
LODE0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODE1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODE9999
.
. check for multi hospital
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      LODE1050 IF NOT EQUAL        * no - ignore check
.
          MATCH     SP10,PTHSHOSP                * all hospitals ?
          GOTO      LODE1050 IF EQUAL            * yes - ignore check
.
          MOVE      PTXAADMN,KEY8
          CALL      RDPMVX11                     * visit extension rec. on file?
          BRANCH    OVRCD,LODE1000               * no - ignore record
.
          MATCH     PMVXMHOS,PTHSHOSP            * same hospital ?
          GOTO      LODE1000 IF NOT EQUAL        * no - ignore record
.
LODE1050  MOVE      ZERO,SUBNET
          PACK      KEY17,PTXAADMN,SP20
          CALL      RSPTEXB1                * position on extraction file B
.
.------ read through the extraction file B ------
.
LODE1100  CALL      RKPTEXB1
          BRANCH    OVRCD,LODE2000
.
          MATCH     PTXAADMN,PTXBADMN       * compare admission numbers
          GOTO      LODE2000 IF NOT EQUAL
.
          ADD       PTXBACCM,SUBNET
          ADD       PTXBTHET,SUBNET
          ADD       PTXBMISC,SUBNET
          GOTO      LODE1100
.
.------ see if this patient has a disease ------
.
LODE2000  MOVE      SP9,KEY9
          MOVE      ANSD,RECTYPE
          PACK      KEY12,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
          CALL      RKPTEXC1
          BRANCH    OVRCD,LODE2300
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LODE2300 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LODE2300 IF NOT EQUAL
          GOTO      LODE2200
.
.------ read through the extraction file C ------
.
LODE2100  CALL      RKPTEXC1
          BRANCH    OVRCD,LODE1000
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LODE1000 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LODE1000 IF NOT EQUAL
.
.------ move this disease code to the key for the temp file ------
.
LODE2200  MOVE      PTXCCODE,KEY9
. 
.------ see if current disease is on the temp file ------
.
LODE2300  CALL      RDTMPR5
          COMPARE   ZERO,OVRCD
          GOTO      LODE2400 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR5                 * write to the temp file
          CALL      RDTMPR5                 * re-read record just written for
.                                             update
          MATCH     SP9,KEY9                * treat a blank disease code as a
          GOTO      LODE2450 IF EQUAL         primary disease
.
.------ see if we have a primary disease ------
.
LODE2400  MATCH     PTXCCTYP,CMDISP
          GOTO      LODE2600 IF NOT EQUAL
.
.------ process variables for this primary disease ------
.
LODE2450  ADD       ONE,TMPPRIM
          ADD       PTXAPLOS,TMPBDAYS
          ADD       SUBNET,TMPNET
.
          MATCH     PTXAADAT,PTXADDAT       * see if patient is a day case
          GOTO      LODE3000 IF NOT EQUAL
.
          ADD       ONE,TMPDCASE
          GOTO      LODE3000
.
.------ disease code is not a primary one ------
.
LODE2600  ADD       ONE,TMPOTHER
.
.------ update the temp file ------
.
LODE3000  CALL      UPTMPR5                 * update the temp file
          GOTO      LODE2100
.
LODE9999  RETURN
+
.**********************************************************************
.*                              LODF0000                              *
.*                Load the temporary file for option 6                *
.**********************************************************************
LODF0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODF1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODF9999
.
. check for multi hospital
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      LODF1050 IF NOT EQUAL        * no - ignore check
.
          MATCH     SP10,PTHSHOSP                * all hospitals ?
          GOTO      LODF1050 IF EQUAL            * yes - ignore check
.
          MOVE      PTXAADMN,KEY8
          CALL      RDPMVX11                     * visit extension rec. on file?
          BRANCH    OVRCD,LODF1000               * no - ignore record
.
          MATCH     PMVXMHOS,PTHSHOSP            * same hospital ?
          GOTO      LODF1000 IF NOT EQUAL        * no - ignore record
.
LODF1050  MOVE      ZERO,SUBNET
          PACK      KEY17,PTXAADMN,SP20
          CALL      RSPTEXB1                * position on extraction file B
.
.------ read through the extraction file B ------
.
LODF1100  CALL      RKPTEXB1
          BRANCH    OVRCD,LODF2000
.
          MATCH     PTXAADMN,PTXBADMN       * compare admission numbers
          GOTO      LODF2000 IF NOT EQUAL
.
          BRANCH    PTCNDOOP,LODF1200       * skip if we only want theatre
.                                             charges
          ADD       PTXBACCM,SUBNET
          ADD       PTXBTHET,SUBNET
          ADD       PTXBMISC,SUBNET
.
          GOTO      LODF1100
.
.------ we only want to include theatre charges ------
.
LODF1200  ADD       PTXBTHET,SUBNET
.
          GOTO      LODF1100
.
.------ see if this patient has an operation ------
.
LODF2000  MOVE      ZERO,RECFLG
          MOVE      SP9,KEY9
          MOVE      ANSO,RECTYPE
          LOAD      RECTYPE,CMBSOPR,ANSM
          PACK      KEY12,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
.
.------ read through the extraction file C ------
.
LODF2100  CALL      RKPTEXC1
          BRANCH    OVRCD,LODF2150
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LODF2150 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LODF2150 IF NOT EQUAL
.
          COMPARE   ONE,CPRIMOP             * Primary Operations only ?
          GOTO      LODF2200 IF NOT EQUAL   * no - continue processing
          BRANCH    PTXCUNIQ,LODF2200       * yes - check if Unique No. = "1" ?
          GOTO      LODF1000
.
.         End of record
.
LODF2150  BRANCH    CPRIMOP,LODF1000        * Primary operation only
          BRANCH    RECFLG,LODF1000         * Check if first record posted
          GOTO      LODF2300
.
.------ move this operation code to the key for the temp file ------
.
LODF2200  MOVE      PTXCCODE,KEY9
. 
.------ see if current operation is on the temp file ------
.
LODF2300  CALL      RDTMPR6
          COMPARE   ZERO,OVRCD
          GOTO      LODF2400 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR6                 * write to the temp file
          CALL      RDTMPR6                 * re-read record just written for
.                                             update
.------ process variables for this operation ------
.
LODF2400  MATCH     SP9,KEY9
          GOTO      LODF2500 IF EQUAL
          ADD       ONE,TMPOPERS
.
LODF2500  ADD       PTXAPLOS,TMPBDAYS
          ADD       SUBNET,TMPNET
.
          MATCH     PTXAADAT,PTXADDAT       * see if patient is a day case
          GOTO      LODF3000 IF NOT EQUAL
          ADD       ONE,TMPDCASE
.
.------ update the temp file ------
.
LODF3000  CALL      UPTMPR6                 * update the temp file
          MOVE      ONE,RECFLG
          GOTO      LODF2100
.
LODF9999  RETURN
+
.**********************************************************************
.*                              LODG0000                              *
.*  Load the temporary file for option 7, where care class is datable *
.**********************************************************************
LODG0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODG1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODG9999
.
. check for multi hospital
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      LODG1050 IF NOT EQUAL        * no - ignore check
.
          MATCH     SP10,PTHSHOSP                * all hospitals ?
          GOTO      LODG1050 IF EQUAL            * yes - ignore check
.
          MOVE      PTXAADMN,KEY8
          CALL      RDPMVX11                     * visit extension rec. on file?
          BRANCH    OVRCD,LODG1000               * no - ignore record
.
          MATCH     PMVXMHOS,PTHSHOSP            * same hospital ?
          GOTO      LODG1000 IF NOT EQUAL        * no - ignore record
.
LODG1050  MATCH     EFDATE,PTXAADAT         * skip if admission date is < the
          GOTO      LODG2000 IF LESS          start of the period
.
          MOVE      PTXAACRE,KEY3
          CALL      RDTMPR3                 * read the temp file with care 
          COMPARE   ZERO,OVRCD                class at admission
          GOTO      LODG1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR3                 * write to the temp file
          CALL      RDTMPR3                 * re-read record just written for
.                                             update
.------ record exists on the temp file so update with number of admissions ----
.
LODG1100  ADD       ONE,TMPADMNS
          CALL      UPTMPR3                 * update the temp file
.
.------ skip if not a day case ------
.
LODG2000  MATCH     PTXAADAT,PTXADDAT
          GOTO      LODG3000 IF NOT EQUAL
.
          MOVE      PTXADCRE,KEY3
          CALL      RDTMPR3                 * read the temp file with care
          COMPARE   ZERO,OVRCD                class at discharge
          GOTO      LODG2100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR3                 * write to the temp file
          CALL      RDTMPR3                 * re-read record just written for
.                                             update
.------ record exists on the temp file so update with day cases -------
.
LODG2100  ADD       ONE,TMPDCASE
          CALL      UPTMPR3                 * update the temp file
.
.------ loop through the second extraction file for this admission ------
.
LODG3000  PACK      KEY17,PTXAADMN,SP20
          CALL      RSPTEXB1                * position on extraction file B
.
.------ read through the extraction file B ------
.
LODG3100  CALL      RKPTEXB1
          BRANCH    OVRCD,LODG4000
.
          MATCH     PTXAADMN,PTXBADMN       * compare admission numbers
          GOTO      LODG4000 IF NOT EQUAL
.
          MOVE      PTXBTCRE,KEY3
          CALL      RDTMPR3                 * read the temp file with given
          COMPARE   ZERO,OVRCD                care class
          GOTO      LODG3200 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR3                 * write to the temp file
          CALL      RDTMPR3                 * re-read record just written for
.                                             update
.------ record exists on the temp file so update with bed days and net ------
.------ charges ------
.
LODG3200  ADD       PTXBACCM,TMPNET
          ADD       PTXBTHET,TMPNET
          ADD       PTXBMISC,TMPNET
.
          MATCH     ANSL,PTXBTYPE           * we don't want to include leave
          GOTO      LODG3300 IF EQUAL         days
          ADD       PTXBNDAY,TMPBDAYS
.
.------ update the temp file ------
.
LODG3300  CALL      UPTMPR3                 * update the second temp file
          GOTO      LODG3100
.
.------ process the operations ------
.
LODG4000  MOVE      ANSO,RECTYPE
          LOAD      RECTYPE,CMBSOPR,ANSM
          PACK      KEY12,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
.
.------ read through the extraction file C ------
.
LODG4100  CALL      RKPTEXC1
          BRANCH    OVRCD,LODG1000
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LODG1000 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LODG1000 IF NOT EQUAL
.
          MOVE      PTXADCRE,KEY3           * read the temp file with care
          CALL      RDTMPR3                   class at discharge
          COMPARE   ZERO,OVRCD
          GOTO      LODG4200 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR3                 * write to the temp file
          CALL      RDTMPR3                 * re-read record just written for
.
.------ record exists on the temp file so update with number of operations ----
.
LODG4200  ADD       ONE,TMPOPERS
          CALL      UPTMPR3                 * update the second temp file
          GOTO      LODG4100
.
LODG9999  RETURN
+
.**********************************************************************
.*                              LODH0000                              *
.*                Load the temporary file for option 8                *
.**********************************************************************
LODH0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODH1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODH9999
.
. check for multi hospital
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      LODH1050 IF NOT EQUAL        * no - ignore check
.
          MATCH     SP10,PTHSHOSP                * all hospitals ?
          GOTO      LODH1050 IF EQUAL            * yes - ignore check
.
          MOVE      PTXAADMN,KEY8
          CALL      RDPMVX11                     * visit extension rec. on file?
          BRANCH    OVRCD,LODH1000               * no - ignore record
.
          MATCH     PMVXMHOS,PTHSHOSP            * same hospital ?
          GOTO      LODH1000 IF NOT EQUAL        * no - ignore record
.
LODH1050  PACK      KEY13,PTXACLMC,PTXAFUND,PTXAFTBL
          CALL      RDTMPR7                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODH1100 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR7                 * write to the temp file
          CALL      RDTMPR7                 * re-read record just written for
.                                             update
.------ see if patient is admitted in the period ------
.
LODH1100  MATCH     EFDATE,PTXAADAT         * skip if admission date is < the
          GOTO      LODH2000 IF LESS          start of the period
          ADD       ONE,TMPADMNS
.
.------ skip if not a day case ------
.
LODH2000  MATCH     PTXAADAT,PTXADDAT
          GOTO      LODH3000 IF NOT EQUAL
          ADD       ONE,TMPDCASE
.
.------ update the temp file ------
.
LODH3000  ADD       PTXAPLOS,TMPBDAYS
          CALL      UPTMPR7
.
          PACK      KEY17,PTXAADMN,SP20
          CALL      RSPTEXB1                * position on extraction file B
.
.------ read through the extraction file B ------
.
LODH3100  CALL      RKPTEXB1
          BRANCH    OVRCD,LODH4000
.
          MATCH     PTXAADMN,PTXBADMN       * compare admission numbers
          GOTO      LODH4000 IF NOT EQUAL
.
          CALL      RDTMPR7                 * read the temp file for update
.
          ADD       PTXBACCM,TMPNET
          ADD       PTXBTHET,TMPNET
          ADD       PTXBMISC,TMPNET
          CALL      UPTMPR7                 * update the temp file
          GOTO      LODH3100
.
.------ process the operations ------
.
LODH4000  MOVE      ANSO,RECTYPE
          LOAD      RECTYPE,CMBSOPR,ANSM
          PACK      KEY12,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
.
.------ read through the extraction file C ------
.
LODH4100  CALL      RKPTEXC1
          BRANCH    OVRCD,LODH1000
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LODH1000 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LODH1000 IF NOT EQUAL
.
          CALL      RDTMPR7                 * read the temp file for update
.
          ADD       ONE,TMPOPERS
          CALL      UPTMPR7                 * update the temp file
          GOTO      LODH4100
.
LODH9999  RETURN
+
.**********************************************************************
.*                              LODI0000                              *
.*                Load the temporary file for option 10               *
.**********************************************************************
LODI0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODI1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODI9999
.
. check for multi hospital
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      LODI1050 IF NOT EQUAL        * no - ignore check
.
          MATCH     SP10,PTHSHOSP                * all hospitals ?
          GOTO      LODI1050 IF EQUAL            * yes - ignore check
.
          MOVE      PTXAADMN,KEY8
          CALL      RDPMVX11                     * visit extension rec. on file?
          BRANCH    OVRCD,LODI1000               * no - ignore record
.
          MATCH     PMVXMHOS,PTHSHOSP            * same hospital ?
          GOTO      LODI1000 IF NOT EQUAL        * no - ignore record
.
LODI1050  MOVE      SP6,SAVWDBED
          PACK      KEY17,PTXAADMN,SP20
          CALL      RSPTEXB1                * position on extraction file B
.
.------ read through the extraction file B ------
.
LODI1100  CALL      RKPTEXB1
          BRANCH    OVRCD,LODI4000
.
          MATCH     PTXAADMN,PTXBADMN       * compare admission numbers
          GOTO      LODI4000 IF NOT EQUAL
.
          PACK      KEY6,PTXBTWRD,PTXBTBED
          CALL      RDTMPR8                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODI1200 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR8                 * write to the temp file
          CALL      RDTMPR8                 * re-read record just written for
.                                             update
.------ process the temp file data ------
.
LODI1200  COMPARE   ONE,PTXADAYC
          IF        @EQUAL
.                                                                     *C-114666
            MATCH     ANSA,PTXBTYPE         * only count Day Cases on the Admn.
            IF        @EQUAL
              ADD       ONE,TMPDCASE
            ENDIF
            GOTO      LODI3100
          ENDIF
.
          MATCH     ANSA,PTXBTYPE           * see if record is an admission  
          GOTO      LODI1300 IF EQUAL         record
.
          MATCH     ANSB,PTXBTYPE           * skip if record is a "B" record
          GOTO      LODI2000 IF EQUAL
.
          MATCH     KEY6,SAVWDBED           * see if the ward/bed has changed
          GOTO      LODI2000 IF EQUAL
          ADD       ONE,TMPTRANS
          GOTO      LODI2000
.
.------ add one to the number of admissions ------
.
LODI1300  ADD       ONE,TMPADMNS
.
.------ see if we have the "Z" record ------
.
LODI2000  MATCH     ANSZ,PTXBTYPE           * skip if record is a "D" record
          GOTO      LODI3000 IF NOT EQUAL
.                                                                      D-114666
....      COMPARE   ONE,PTXADAYC            * see if patient is a day case
....      GOTO      LODI3000 IF NOT EQUAL
....      ADD       ONE,TMPDCASE
.
.------ update the temp file ------
.
LODI3000  MATCH     ANSL,PTXBTYPE           * we don't want to include leave
          GOTO      LODI3100 IF EQUAL         days
          ADD       PTXBNDAY,TMPBDAYS
.
.------ update the temp file ------
.
LODI3100  CALL      UPTMPR8
          PACK      SAVWDBED,PTXBTWRD,PTXBTBED
          GOTO      LODI1100
.
.------ process the operations ------
.
LODI4000  MOVE      ANSO,RECTYPE
          LOAD      RECTYPE,CMBSOPR,ANSM
          PACK      KEY12,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
.
.------ read through the extraction file C ------
.
LODI4100  CALL      RKPTEXC1
          BRANCH    OVRCD,LODI1000
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LODI1000 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LODI1000 IF NOT EQUAL
.
          PACK      KEY6,PTXCMWRD,PTXCMBED
          CALL      RDTMPR8                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODI4200 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR8                 * write to the temp file
          CALL      RDTMPR8                 * re-read record just written for
.                                             update
LODI4200  ADD       ONE,TMPOPERS
          CALL      UPTMPR8                 * update the second temp file
          GOTO      LODI4100
.
LODI9999  RETURN
+
.**********************************************************************
.*                              LODJ0000                              *
.*                Load the temporary file for option 14               *
.**********************************************************************
LODJ0000  MOVE      SP8,KEY8
          CALL      RSPTEXA1                * position on extraction file A
.
.------ read through the extraction file A ------
.
LODJ1000  CALL      RKPTEXA1
          BRANCH    OVRCD,LODJ9999
.
. check for multi hospital
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      LODJ2000 IF NOT EQUAL        * no - ignore check
.
          MATCH     SP10,PTHSHOSP                * all hospitals ?
          GOTO      LODJ2000 IF EQUAL            * yes - ignore check
.
          MOVE      PTXAADMN,KEY8
          CALL      RDPMVX11                     * visit extension rec. on file?
          BRANCH    OVRCD,LODJ1000               * no - ignore record
.
          MATCH     PMVXMHOS,PTHSHOSP            * same hospital ?
          GOTO      LODJ1000 IF NOT EQUAL        * no - ignore record
.
LODJ2000  MOVE      "Id.: ",KEY5
          PACK      WBSENAM,KEY5,PTXAOPID,SP30
          PACK      KEY10,PTXAOPID,SP10
          CALL      RDWBSE1
.
LODJ3000  PACK      KEY30,WBSENAM,SP30
          CALL      RDTMPR9                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      LODJ4000 IF EQUAL
.
          CALL      CLR0000                 * clear the temp file variables
          CALL      WRTMPR9                 * write to the temp file
          CALL      RDTMPR9                 * re-read record just written for
.                                             update
.------ see if patient is admitted in the period ------
.
LODJ4000  MATCH     EFDATE,PTXAADAT         * skip if admission date is < the
          GOTO      LODJ5000 IF LESS          start of the period
          ADD       ONE,TMPADMNS
.
.------ skip if not a day case ------
.
LODJ5000  MATCH     PTXAADAT,PTXADDAT
          GOTO      LODJ6000 IF NOT EQUAL
          ADD       ONE,TMPDCASE
.
.------ update the temp file ------
.
LODJ6000  ADD       PTXAPLOS,TMPBDAYS
          CALL      UPTMPR9
.
          PACK      KEY17,PTXAADMN,SP20
          CALL      RSPTEXB1                * position on extraction file B
.
.------ read through the extraction file B ------
.
LODJ6100  CALL      RKPTEXB1
          BRANCH    OVRCD,LODJ7000
.
          MATCH     PTXAADMN,PTXBADMN       * compare admission numbers
          GOTO      LODJ7000 IF NOT EQUAL
.
          CALL      RDTMPR9                 * read the temp file for update
.
          ADD       PTXBACCM,TMPNET
          ADD       PTXBTHET,TMPNET
          ADD       PTXBMISC,TMPNET
          CALL      UPTMPR9                 * update the temp file
          GOTO      LODJ6100
.
.------ process the operations ------
.
LODJ7000  MOVE      ANSO,RECTYPE
          LOAD      RECTYPE,CMBSOPR,ANSM
          PACK      KEY12,PTXAADMN,RECTYPE,SP10
          CALL      RSPTEXC1                * position on extraction file C
.
.------ read through the extraction file C ------
.
LODJ7100  CALL      RKPTEXC1
          BRANCH    OVRCD,LODJ1000
.
          MATCH     PTXAADMN,PTXCADMN       * compare the admission numbers
          GOTO      LODJ1000 IF NOT EQUAL
.
          MATCH     RECTYPE,PTXCTYPE        * check record types
          GOTO      LODJ1000 IF NOT EQUAL
.
          CALL      RDTMPR9                 * read the temp file for update
.
          ADD       ONE,TMPOPERS
          CALL      UPTMPR9                 * update the temp file
          GOTO      LODJ7100
.
LODJ9999  RETURN
+
.**********************************************************************
.*                               PRNT0000                             *
.*                     Routine to print the report                    *
.**********************************************************************
PRNT0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Generating Report":
                           *HOFF,*V2LON," - Please wait";
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
          MOVE      ONE,CNOUNDLN
          MOVE      SP20,CPHDROPT
.
          BRANCH    SAVOPTN,PRNT1000,PRNT2000,PRNT3000,PRNT4000,PRNT5000:
                            PRNT6000,PRNT3000,PRNT7000,PRNT3000,PRNT8000:
                            PRNT3000,PRNT3000,PRNT3000,PRNT9000
.
          GOTO      PRNT3000                * all other options use Cat/Codes
.
.------ print the report for the first option ------
.
PRNT1000  CALL      PRTA0000                * print report for the first option
          GOTO      PRNT9999
.
.------ print the report for the second option ------
.
PRNT2000  CALL      PRTB0000                * print report for the second option
          GOTO      PRNT9999
.
.------ print the report for every option that uses a codes file code ------
.
PRNT3000  CALL      PRTC0000
          GOTO      PRNT9999
.
.------ print the report for the fourth option ------
.
PRNT4000  CALL      PRTD0000                * print report for the fourth option
          GOTO      PRNT9999
.
.------ print the report for the fifth option ------
.
PRNT5000  CALL      PRTE0000                * print report for the fifth option
          GOTO      PRNT9999
.
.------ print the report for the sixth option ------
.
PRNT6000  CALL      PRTF0000                * print report for the sixth option
          GOTO      PRNT9999
.
.------ print the report for the eighth option ------
.
PRNT7000  CALL      PRTH0000                * print report for the eighth option
          GOTO      PRNT9999
.
.------ print the report for the tenth option ------
.
PRNT8000  CALL      PRTI0000                * print report for the tenth option
          GOTO      PRNT9999
.
.------ print the report for the 14th option ------
.
PRNT9000  CALL      PRTJ0000                * print report for the 14th option
          GOTO      PRNT9999
.
PRNT9999  RETURN
+
.**********************************************************************
.*                               PRTA0000                             *
.*           Routine to print the report for the first option         *
.**********************************************************************
PRTA0000  CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
          MOVE      ONE,COUNT
.
.------ check each age breakup ------
.
PRTA0100  LOAD      AGEFROM,COUNT,PTCNAF01,PTCNAF02,PTCNAF03,PTCNAF04,PTCNAF05:
                                  PTCNAF06,PTCNAF07,PTCNAF08,PTCNAF09,PTCNAF10:
                                  PTCNAF11,PTCNAF12
.
          LOAD      AGETO,COUNT,PTCNAT01,PTCNAT02,PTCNAT03,PTCNAT04,PTCNAT05:
                                PTCNAT06,PTCNAT07,PTCNAT08,PTCNAT09,PTCNAT10:
                                PTCNAT11,PTCNAT12
.
          MATCH     SP3,AGEFROM             * see if this breakup exists
          GOTO      PRTA1900 IF EQUAL
          MOVE      COUNT,KEY2
.
          CALL      RDTMPR1                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      PRTA1000 IF EQUAL
          CALL      CLR0000                 * clear the temp file variables
.
.------ print the record for the current age breakup ------
.
PRTA1000  CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
.
.------ increment counter and try next age breakdown if applicable ------
.
PRTA1900  ADD       ONE,COUNT
.
          COMPARE   TEN3,COUNT              * see if we have run out of 
          GOTO      PRTA0100 IF NOT EQUAL     breakdowns
          CALL      GNDT0000                * print the grand totals
          CALL      ENDR0000                * print the end of the report
.
PRTA9999  RETURN  
+
.**********************************************************************
.*                               PRTB0000                             *
.*           Routine to print the report for the second option        *
.**********************************************************************
PRTB0000  CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
          MOVE      ONE,COUNT
.
.------ check each age breakup ------
.
PRTB0100  LOAD      AGEFROM,COUNT,PTCNAF01,PTCNAF02,PTCNAF03,PTCNAF04,PTCNAF05:
                                  PTCNAF06,PTCNAF07,PTCNAF08,PTCNAF09,PTCNAF10:
                                  PTCNAF11,PTCNAF12
.
          LOAD      AGETO,COUNT,PTCNAT01,PTCNAT02,PTCNAT03,PTCNAT04,PTCNAT05:
                                PTCNAT06,PTCNAT07,PTCNAT08,PTCNAT09,PTCNAT10:
                                PTCNAT11,PTCNAT12
.
          MATCH     SP3,AGEFROM             * see if this breakup exists
          GOTO      PRTB1900 IF EQUAL
.
          PACK      KEY3,COUNT,ANSM
          CALL      RDTMPR2                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      PRTB1000 IF EQUAL
          CALL      CLR0000                 * clear the temp file variables
.
.------ print the male record for the current age breakup ------
.
PRTB1000  MOVE      "Male  ",SEX
.
          CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
.
          PACK      KEY3,COUNT,ANSF
          CALL      RDTMPR2                 * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      PRTB1500 IF EQUAL
          CALL      CLR0000                 * clear the temp file variables
.
.------ print the female record for the current age breakup ------
.
PRTB1500  MOVE      "Female",SEX
.
          CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
.
.------ increment counter and try next age breakdown if applicable ------
.
PRTB1900  ADD       ONE,COUNT
.
          COMPARE   TEN3,COUNT              * see if we have run out of 
          GOTO      PRTB0100 IF NOT EQUAL     breakdowns
          CALL      GNDT0000                * print the grand totals
          CALL      ENDR0000                * print the end of the report
.
PRTB9999  RETURN  
+
.**********************************************************************
.*                               PRTC0000                             *
.*     Routine to print the report for every option that uses a       *
.*     codes file code                                                *
.**********************************************************************
PRTC0000  CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
.
          MOVE      SP3,KEY3
          CALL      RDTMPR3                 * read the third temporary file
          COMPARE   ZERO,OVRCD
          GOTO      PRTC1100 IF EQUAL
.
.------ read through the third temporary file ------
.
PRTC1000  CALL      RKTMPR3
          BRANCH    OVRCD,PRTC8000
.
.------ print the record for the current code ------
.
PRTC1100  CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
          GOTO      PRTC1000 
.
.------ we have reached the end of the temp file ------
.
PRTC8000  CALL      GNDT0000                * print the grand totals
          CALL      ENDR0000                * print the end of the report
.
PRTC9999  RETURN  
+
.**********************************************************************
.*                               PRTD0000                             *
.*         Routine to print the report for the fourth option          *
.**********************************************************************
PRTD0000  CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
.
          MOVE      SP8,KEY8
          CALL      RDTMPR4                 * read the fourth temporary file
          COMPARE   ZERO,OVRCD
          GOTO      PRTD1100 IF EQUAL
.
.------ read through the fourth temporary file ------
.
PRTD1000  CALL      RKTMPR4
          BRANCH    OVRCD,PRTD8000
.
.------ print the record for the current code ------
.
PRTD1100  CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
          GOTO      PRTD1000 
.
.------ we have reached the end of the temp file ------
.
PRTD8000  CALL      GNDT0000                * print the grand totals
          CALL      ENDR0000                * print the end of the report
.
PRTD9999  RETURN  
+
.**********************************************************************
.*                               PRTE0000                             *
.*         Routine to print the report for the fifth option           *
.**********************************************************************
PRTE0000  CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
          MOVE      SP9,KEY9
.
          CALL      RDTMPR5                 * read the fifth temporary file
          COMPARE   ZERO,OVRCD
          GOTO      PRTE1100 IF EQUAL
.
.------ read through the fifth temporary file ------
.
PRTE1000  CALL      RKTMPR5
          BRANCH    OVRCD,PRTE8000
.
.------ print the record for the current code ------
.
PRTE1100  CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
          GOTO      PRTE1000 
.
.------ we have reached the end of the temp file ------
.
PRTE8000  CALL      GNDT0000                * print the grand totals
          CALL      ENDR0000                * print the end of the report
.
PRTE9999  RETURN  
+
.**********************************************************************
.*                               PRTF0000                             *
.*         Routine to print the report for the sixth option           *
.**********************************************************************
PRTF0000  CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
.
          MOVE      SP9,KEY9
          CALL      RDTMPR6                 * read the fifth temporary file
          COMPARE   ZERO,OVRCD
          GOTO      PRTF1100 IF EQUAL
.
.------ read through the fifth temporary file ------
.
PRTF1000  CALL      RKTMPR6
          BRANCH    OVRCD,PRTF8000
.
.------ print the record for the current code ------
.
PRTF1100  CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
          GOTO      PRTF1000 
.
.------ we have reached the end of the temp file ------
.
PRTF8000  CALL      GNDT0000                * print the grand totals
          CALL      ENDR0000                * print the end of the report
.
PRTF9999  RETURN  
+
.**********************************************************************
.*                               PRTH0000                             *
.*         Routine to print the report for the eighth option          *
.**********************************************************************
PRTH0000  CALL      CLRT0000               * clear the totals
          CALL      HEAD0000               * print the page header
.
          MOVE      FALSE,FLAGFUND         * initialize printed health fund flag
.
          MOVE      SP6,PRTFUND
          MOVE      SP6,SAVFUND
          MOVE      SP3,SAVCCODE
          MOVE      SP20,KEY13
.
          CALL      RDTMPR7                * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      PRTH1800 IF EQUAL
.
          CALL      RKTMPR7                * get the first record
          BRANCH    OVRCD,PRTH8000
          GOTO      PRTH1800
.
.------ read through the temporary file ------
.
PRTH1000  CALL      RKTMPR7
          BRANCH    OVRCD,PRTH8000
.
          MATCH     TMPCCODE,SAVCCODE      * see if the claimcode has changed
          GOTO      PRTH1600 IF NOT EQUAL         
.
          MATCH     TMPFUND,SAVFUND        * see if the health fund has
          GOTO      PRTH1800 IF EQUAL        changed
.
          CALL      SUBH0000               * print the health fund sub totals
          CALL      CLRT6000               * clear subtotals for the health fund
.
          MOVE      FALSE,FLAGFUND         * initialize printed health fund flag
          GOTO      PRTH1800
.
.------  claim code has changed ------
.
PRTH1600  CALL      SUBH0000               * print the health fund sub totals
          CALL      SUBT0000               * print the claim code sub totals 
          CALL      CLRT3000               * clear sub totals for the claim code
.
          MOVE      FALSE,FLAGFUND         * initialize printed health fund flag
.
.------ print the record for the current code ------
.
PRTH1800  CALL      REC0000                * print a record
          CALL      ADDV0000               * add the variables to the totals
.
          MOVE      TMPCCODE,SAVCCODE
          MOVE      TMPFUND,SAVFUND
          MOVE      SP6,PRTFUND
          MOVE      TRUE,FLAGFUND          * set printed health fund flag
          GOTO      PRTH1000 
.
.------ we have reached the end of the temp file ------
.
PRTH8000  CALL      SUBH0000               * print the health fund sub totals
          CALL      SUBT0000               * print the claim code sub totals 
          CALL      GNDT0000               * print the grand totals
          CALL      ENDR0000               * print the end of the report
.
PRTH9999  RETURN  
+
.**********************************************************************
.*                               PRTI0000                             *
.*         Routine to print the report for the tenth option           *
.**********************************************************************
PRTI0000  MOVE      EFDATE,CDYSFDTE
          MOVE      ETDATE,CDYSTDTE
.
          CALL      CALCDAYS               * calculate no. of days in the period
          CALL      CLRT0000               * clear the totals
          CALL      HEAD0000               * print the page header
.
          MOVE      SP3,SAVWARD
          MOVE      SP6,KEY6
.
          CALL      RDTMPR8                * read the temporary file
          COMPARE   ZERO,OVRCD
          GOTO      PRTI1100 IF EQUAL
.
          CALL      RKTMPR8                * get first record on the temp file
          BRANCH    OVRCD,PRTI8000          
          GOTO      PRTI1100
.
.------ read through the temporary file ------
.
PRTI1000  CALL      RKTMPR8
          BRANCH    OVRCD,PRTI8000
.
          MATCH     TMPWARD,SAVWARD        * see if the wards have changed
          GOTO      PRTI1100 IF EQUAL
.
          CALL      SUBT0000               * print the subtotals
          CALL      CLRT3000               * clear the sub totals
.
.------ print the record for the current code ------
.
PRTI1100  CALL      REC0000                * print a record
          CALL      ADDV0000               * add the variables to the totals
.
          MOVE      TMPWARD,SAVWARD
          GOTO      PRTI1000 
.
.------ we have reached the end of the temp file ------
.
PRTI8000  CALL      SUBT0000               * print the subtotals
          CALL      GNDT0000               * print the grand totals
          CALL      ENDR0000               * print the end of the report
.
PRTI9999  RETURN  
+
.**********************************************************************
.*                               PRTJ0000                             *
.*         Routine to print the report for the 14th option            *
.**********************************************************************
PRTJ0000  CALL      CLRT0000                * clear the totals
          CALL      HEAD0000                * print the page header
.
          MOVE      SP30,KEY30
          CALL      RDTMPR9                 * read the fourth temporary file
          COMPARE   ZERO,OVRCD
          GOTO      PRTJ1100 IF EQUAL
.
.------ read through the 14th temporary file ------
.
PRTJ1000  CALL      RKTMPR9
          BRANCH    OVRCD,PRTJ8000
.
.------ print the record for the current code ------
.
PRTJ1100  CALL      REC0000                 * print a record
          CALL      ADDV0000                * add the variables to the totals
          GOTO      PRTJ1000
.
.------ we have reached the end of the temp file ------
.
PRTJ8000  CALL      GNDT0000                * print the grand totals
          CALL      ENDR0000                * print the end of the report
.
PRTJ9999  RETURN
+
.**********************************************************************
.*                                CLRT0000                            *
.*              Routine to clear the total variables                  *
.**********************************************************************
CLRT0000  MOVE      ZERO,GNDADMNS
          MOVE      ZERO,GNDBDAYS
          MOVE      ZERO,GNDDCASE
          MOVE      ZERO,GNDOPERS
          MOVE      ZERO,GNDNET
          MOVE      ZERO,GNDTRANS
          MOVE      ZERO,GNDPRIM
          MOVE      ZERO,GNDPERC
          MOVE      ZERO,GNDOTHER
.
.------ clear the sub-total variables ------
.
CLRT3000  MOVE      ZERO,SUBADMNS
          MOVE      ZERO,SUBBDAYS
          MOVE      ZERO,SUBDCASE
          MOVE      ZERO,SUBOPERS
          MOVE      ZERO,SUBNET 
          MOVE      ZERO,SUBTRANS
          MOVE      ZERO,SUBMISC
          MOVE      ZERO,SUBPERC
          MOVE      ZERO,PSUBADMS  
          MOVE      ZERO,PSUBBDAY  
          MOVE      ZERO,PSUBDAYC  
          MOVE      ZERO,PSUBOPER  
          MOVE      ZERO,PSUBNET   
.
.------ clear the sub-total variables for each health fund for option 8 ------
.
CLRT6000  MOVE      ZERO,PHSUBADM  
          MOVE      ZERO,PHSUBBDY  
          MOVE      ZERO,PHSUBDAY  
          MOVE      ZERO,PHSUBNET  
          MOVE      ZERO,PHSUBOPS  
          MOVE      ZERO,SUBHADMS  
          MOVE      ZERO,SUBHBDAY  
          MOVE      ZERO,SUBHDAYC  
          MOVE      ZERO,SUBHOPER  
          MOVE      ZERO,SUBHNET   
.
CLRT9999  RETURN
+
.**********************************************************************
.*                              HEAD0000                              *
.*                      Print the page header                         *
.**********************************************************************
HEAD0000  COMPARE   ZERO,CPAGENO            * skip if we are printing the
          GOTO      HEAD1000 IF EQUAL         header for the first page
.
          CALL      PAGE0000                * print underline for current page
.
.------ print the page header ------
.
HEAD1000  
.         PRINT     *C
          CALL      HEAD132                 * print the basic page header
          IF        IBCNMHOS =1
            PRINT     *40,"Hospital: ",PTHSNAME,*N;
          ENDIF
.
          PRINT     *40,"Period from ",EXFDATE," to ",EXTDATE:
                    *80,"(As at ",EXCDATE,")",*N:
                    *40,HEADER,*N;
          IF        IBCNMHOS = 1
            MOVE      SEVEN,CLNO
          ELSE
            MOVE      SIX,CLNO
          ENDIF
.
          BRANCH    SAVOPTN,HEAD1100,HEAD2000,HEAD3000,HEAD4000,HEAD5000:
                            HEAD6000,HEAD3000,HEAD7000,HEAD3000,HEAD8000:
                            HEAD3000,HEAD3000,HEAD3000,HEAD9000
.
          GOTO      HEAD3000                * all other options use Cat/Codes
.
.------ printing the report for the first option ------
.
HEAD1100  CALL      PAGE0000                * print page seperator
.
          PRINT     *N,*29,"|",*34,"Age",*41,"| Admissions",*54,"| Bed Days":
                       *65,"| Day Cases",*77,"| Operations",*90,"| $":
                       *96,"Net",*104,"|";
.
          CALL      PAGE0000                * print page seperator
          ADD       ONE,CLNO
          GOTO      HEAD9999
.
.------ printing the report for the second option ------
.
HEAD2000  CALL      PAGE0000                * print page seperator
.
          PRINT     *N,*25,"|",*30,"Age",*37,"|",*39,"Sex",*46,"| Admissions":
                       *59,"| Bed Days",*70,"| Day Cases",*82,"| Operations":
                       *95,"| $",*101,"Net",*109,"|";
.
          CALL      PAGE0000                * print page seperator
          ADD       ONE,CLNO
          GOTO      HEAD9999
.
.------ printing the report for any option that uses a codes file code ------
.
HEAD3000  CALL      PAGE0000                * print page seperator
.
          LOAD      DESCCODE,USECODE,HEAD03,HEAD07,HEAD09,HEAD11,HEAD12:
                                     HEAD13,HEAD15,HEAD16,HEAD17,HEAD18:
                                     HEAD19,HEAD20,HEAD21,HEAD22,HEAD23:
                                     HEAD24,HEAD25,HEAD26,HEAD27,DIM25:
                                     DIM25,DIM25,DIM25,DIM25,DIM25:
                                     DIM25,DIM25,DIM25,DIM25,DIM25
.
          PRINT     *N,*14,"| ",DESCCODE,*43,"| Admissions",*56,"| Bed Days":
                       *67,"| Day Cases",*79,"| Operations",*92,"| $":
                       *98,"Net",*106,"|";
.
          CALL      PAGE0000                * print page seperator
          ADD       ONE,CLNO
          GOTO      HEAD9999
.
.------ printing the report for the fourth option ------
.
HEAD4000  CALL      PAGE0000                * print page seperator
.
          PRINT     *N,*26,"| Postcode",*39,"| Admissions",*52,"| Bed Days":
                       *63,"| Day Cases",*75,"| Operations",*88,"| $":
                       *94,"Net",*102,"|";
.
          CALL      PAGE0000                * print page seperator
          ADD       ONE,CLNO
          GOTO      HEAD9999
.
.------ printing the report for the fifth option ------
.
HEAD5000  CALL      PAGE0000                * print page seperator
.
          PRINT     *N,"| Disease",*84,"|Primary",*92,"| Other":
                       *100,"|Bed Days",*109,"|Daycases",*118,"| $":
                       *124,"Net",*132,"|";
.
          CALL      PAGE0000                * print page seperator
          ADD       ONE,CLNO
          GOTO      HEAD9999
.
.------ printing the report for the sixth option ------
.
HEAD6000  CALL      PAGE0000                * print page seperator
.
          PRINT     *N,"| Operation",*84,"|",*87,"No. Ops",*95,"| Bed Days":
                       *106,"| Day Cases",*118,"| $",*124,"Net",*132,"|";
.
          CALL      PAGE0000                * print page seperator
          ADD       ONE,CLNO
          GOTO      HEAD9999
.
.------ printing the report for the eighth option ------
.
HEAD7000  CALL      PAGE0000                * print page seperator
.
          PRINT     *N,"| Claim Number",*15,"| Health Fund Name/Table Name":
                       *49,"|  Operations",*66,"|   Admissions":
                       *82,"|   Bed Days",*98,"|   Day Cases",*113,"|":
                       *121,"Net",*132,"|":
                    *N,"| Fund/Table",*15,"| or Claim Description",*49,"|":
                       *54,"%",*60,"No",*66,"|",*71,"%",*78,"No",*82,"|":
                       *87,"%",*92,"No",*98,"|",*103,"%",*109,"No",*113,"|":
                       *118,"%",*124,"$",*132,"|";
.
          CALL      PAGE0000                * print page seperator
          ADD       TWO,CLNO
          GOTO      HEAD9999
.
.------ printing the report for the tenth option ------
.
HEAD8000  CALL      PAGE0000                * print page seperator
.
          PRINT     *N,*14,"|",*25,"|",*58,"|  Admissions":
                       *74,"|",*85,"|",*97,"|",*110,"| Percentage",*123,"|":
                    *N,*14,"| Ward/Bed",*25,"| Description",*58,"| Actual":
                       *68,"Trans",*74,"| Bed Days",*85,"| Day Cases":
                       *97,"| Operations",*110,"|",*115,"Usage",*123,"|";
.
          CALL      PAGE0000                * print page seperator
          ADD       TWO,CLNO
          GOTO      HEAD9999
.
.------ printing the report for the 14th option ------
.
HEAD9000  CALL      PAGE0000                * print page seperator
.
          PRINT     *N,*14,"| Operator",*49,"| Admissions",*62,"| Bed Days":
                       *73,"| Day Cases",*85,"| Operations",*98,"| $":
                       *104,"Net",*112,"|";
.
          CALL      PAGE0000                * print page seperator
          ADD       ONE,CLNO
          GOTO      HEAD9999
.
.
HEAD9999  RETURN
+
.**********************************************************************
.*                               REC0000                              *
.*       This routine prints a record for the various reports         *
.**********************************************************************
REC0000   BRANCH    SAVOPTN,REC1000,REC2000,REC3000,REC4000,REC5000:
                            REC6000,REC3000,REC7000,REC3000,REC8000:
                            REC3000,REC3000,REC3000,REC9000
.
          GOTO      REC3000                 * all other options use Cat/Codes
.
.------ printing the record for the first option ------
.
REC1000   PRINT     *N,*29,"|",*31,AGEFROM,*35,"-",*37,AGETO,*41,"|":
                       *44,TMPADMNS,*54,"|",*57,TMPBDAYS,*65,"|",*68,TMPDCASE:
                       *77,"|",*80,TMPOPERS,*90,"| $",TMPNET,*104,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ printing the record for the second option ------
.
REC2000   MATCH     "Male  ",SEX            * see if we are printing for males
          GOTO      REC2100 IF NOT EQUAL
.
          PRINT     *N,*25,"|",*27,AGEFROM,*31,"-",*33,AGETO,*37,"|",*39,SEX:
                       *46,"|",*49,TMPADMNS,*59,"|",*62,TMPBDAYS,*70,"|",*73:
                       TMPDCASE,*82,"|",*85,TMPOPERS,*95,"| $",TMPNET,*109,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ printing the female record ------
.
REC2100   PRINT     *N,*25,"|",*37,"|",*39,SEX,*46,"|",*49,TMPADMNS,*59,"|":
                       *62,TMPBDAYS,*70,"|",*73,TMPDCASE,*82,"|",*85,TMPOPERS:
                       *95,"| $",TMPNET,*109,"|":
                    *N,*25,"|",*37,"|",*46,"|",*59,"|",*70,"|",*82,"|":
                       *95,"|",*109,"|";
          ADD       TWO,CLNO
          GOTO      REC9999
.
.------ print a record for every option that uses a codes file code ------
.
REC3000   MOVE      "BLANK CODE",DESCCODE
.
          MATCH     SP3,TMPCODE             * see if the code is spaces
          GOTO      REC3500 IF EQUAL          
.
          PACK      KEY5,CATEGORY,TMPCODE
          CALL      RDCODE1                 * read patient codes file
          BRANCH    OVRCD,REC3300
          MOVE      TDESC,DESCCODE
          GOTO      REC3500
.
.----- code is not on the codes file ------
.
REC3300   MOVE      "UNKNOWN CODE :",DESCCODE
          ENDSET    DESCCODE
          APPEND    TMPCODE,DESCCODE
          RESET     DESCCODE
.
.------ print the current record ------
.
REC3500   COMPARE   "60",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS    
.
          PRINT     *N,*14,"| ",TMPCODE,*22,DESCCODE,*43,"|",*46,TMPADMNS:
                       *56,"|",*59,TMPBDAYS,*67,"|",*70,TMPDCASE,*79,"|":
                       *82,TMPOPERS,*92,"| $",TMPNET,*106,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ print the current record for the fourth option ------
.
REC4000   COMPARE   "60",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS    
.
          PRINT     *N,*26,"|",*30,TMPPCODE,*39,"|",*42,TMPADMNS:
                       *52,"|",*55,TMPBDAYS,*63,"|",*66,TMPDCASE,*75,"|":
                       *78,TMPOPERS,*88,"| $",TMPNET,*102,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ print a record for the fifth option ------
.
REC5000   MOVE      "NO DISEASES",DESCDISC
.
          MATCH     SP9,TMPDISEA            * see if the disease code is spaces
          GOTO      REC5500 IF EQUAL          
.
          MOVE      TMPDISEA,KEY9
          MOVE      ETDATE,ICDRDDTE         * Use period 'To' date to access
          CALL      RDPTICD1                * appropriate ICD Disese file.
          BRANCH    OVRCD,REC5300
          MOVE      DDESC,DESCDISC
          GOTO      REC5500
.
.----- disease is not on the ICD9 diseases file ------
.
REC5300   MOVE      "UNKNOWN CODE",DESCDISC
.
.------ print the current record ------
.
REC5500   COMPARE   "60",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS    
.
          PRINT     *N,"|",*3,TMPDISEA,*13,DESCDISC,*84,"|",TMPPRIM:
                       *92,"|",TMPOTHER,*100,"|",TMPBDAYS,*109,"|",TMPDCASE:
                      *118,"| ",TMPNET,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ print a record for the sixth option ------
.
REC6000   MOVE      "NO OPERATIONS",DESCOPER
.
          MATCH     SP9,TMPOPCOD            * see if the code is spaces
          GOTO      REC6500 IF EQUAL          
          MOVE      TMPOPCOD,KEY9
.
          BRANCH    CMBSOPR,REC6200         * skip if using MBS
          MOVE      ETDATE,ICDRDDTE         * Use period 'To' date to access
          CALL      RDPTICO1                * appropriate ICD Operation file.
          BRANCH    OVRCD,REC6300
          MOVE      ODESC,DESCOPER
          GOTO      REC6500
.
.------ using MBS codes ------
.
REC6200   PACK      KEY17,KEY9,SP70
          CALL      PATITMRD
          BRANCH    OVRCD,REC6300
          MOVE      IDESC,DESCOPER
          GOTO      REC6500
.
.----- operation is not on the ICD9 or MBS file as appropriate ------
.
REC6300   MOVE      "UNKNOWN CODE",DESCOPER
.
.------ print the current record ------
.
REC6500   COMPARE   "60",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS    
.
          PRINT     *N,"|",*3,TMPOPCOD,*13,DESCOPER,*84,"| ",TMPOPERS,*95,"| ":
                       TMPBDAYS,*106,"|  ",TMPDCASE,*118,"| ",TMPNET,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ print a record for the eighth option ------
.
REC7000   BRANCH    FLAGFUND,REC7500        * skip if we have printed the
.                                             health fund
          MOVE      "BLANK HEALTH FUND",DESCFUND
          MOVE      TMPFUND,PRTFUND
.
          MATCH     SP6,TMPFUND             * see if the health fund is spaces
          GOTO      REC7500 IF EQUAL          
.
          PACK      KEY14,TMPFUND,ZERO8,SP10
          CALL      RDFUND1                 * read health fund file
          BRANCH    OVRCD,REC7300
          MOVE      HFNAME,DESCFUND
          GOTO      REC7500
.
.----- health fund is not on the health fund file ------
.
REC7300   MOVE      "UNKNOWN FUND : ",DESCFUND
          ENDSET    DESCFUND
          APPEND    TMPFUND,DESCFUND
          RESET     DESCFUND
.
.------ get the table description ------
.
REC7500   MOVE      "BLANK FUND TABLE",HFNAME
.
          MATCH     SP4,TMPTABLE            * see if the fund table is spaces
          GOTO      REC7800 IF EQUAL          
.
          PACK      KEY14,TMPFUND,TMPTABLE,SP10
          CALL      RDFUND1                 * read health fund file
          BRANCH    OVRCD,REC7600
          GOTO      REC7800
.
.----- fund table is not on the health fund file ------
.
REC7600   MOVE      "UNKNOWN FUND TABLE : ",HFNAME
          ENDSET    HFNAME
          APPEND    TMPTABLE,HFNAME
          RESET     HFNAME
.
.------ process the percentage variables for the current record ------
.
REC7800   MOVE      ZERO,PERADMNS
          MOVE      ZERO,PERBDAYS
          MOVE      ZERO,PERDAYCS
          MOVE      ZERO,PERNET 
          MOVE      ZERO,PEROPERS
.
          COMPARE   ZERO,EDOPERS            * see if number of operations
          GOTO      REC7820 IF EQUAL          are zero
.
          MOVE      TMPOPERS,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EDOPERS,FORM12P4
          MOVE      FORM12P4,PEROPERS
.
.------ process next percentage variable ------
.
REC7820   COMPARE   ZERO,EADMNS             * see if number of admissions
          GOTO      REC7840 IF EQUAL          are zero
.
          MOVE      TMPADMNS,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EADMNS,FORM12P4
          MOVE      FORM12P4,PERADMNS
.
.------ process next percentage variable ------
.
REC7840   COMPARE   ZERO,EBDAYS             * see if number of bed days
          GOTO      REC7860 IF EQUAL          are zero
.
          MOVE      TMPBDAYS,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EBDAYS,FORM12P4
          MOVE      FORM12P4,PERBDAYS
.
.------ process next percentage variable ------
.
REC7860   COMPARE   ZERO,EDCASES            * see if number of day cases
          GOTO      REC7880 IF EQUAL          are zero
.
          MOVE      TMPDCASE,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EDCASES,FORM12P4
          MOVE      FORM12P4,PERDAYCS
.
.------ process next percentage variable ------
.
REC7880   COMPARE   ZERO,ENETAMT            * see if net charges are zero
          GOTO      REC7900 IF EQUAL
.
          MOVE      TMPNET,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       ENETAMT,FORM12P4
          MOVE      FORM12P4,PERNET
.
.------ print the current record ------
.
REC7900   COMPARE   "60",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS    
.
          PRINT     *N,"| ",PRTFUND,*10,TMPTABLE,*15,"| - ",HFNAME,*49,"|":
                       PEROPERS,"%",TMPOPERS,*66,"|",PERADMNS,"%",TMPADMNS:
                       *82,"|",PERBDAYS,"%",TMPBDAYS,*98,"|",PERDAYCS,"%":
                       TMPDCASE,*113,"|",PERNET,"%",TMPNET,*132,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ print the current record for the tenth option ------
.
REC8000   MOVE      "BLANK WARD/BED",DESCWARD
          PACK      SAVWDBED,TMPWARD,TMPBED
.
          MATCH     SP6,SAVWDBED            * see if the ward/bed is spaces
          GOTO      REC8700 IF EQUAL          
.
          PACK      KEY6,TMPWARD,TMPBED
          CALL      RDWARD1                 * read ward file
          BRANCH    OVRCD,REC8600
          MOVE      WBDESC,DESCWARD
.
          MATCH     SP3,TMPBED              * see if bed is spaces (i.e. we
          GOTO      REC8700 IF NOT EQUAL      have a ward only record)
.
          MOVE      TMPDCASE,FORM12P4
          ADD       TMPBDAYS,FORM12P4
          MULT      ONEHUND,FORM12P4
          MOVE      WOCCBED,FORM8
          MULT      CDYSDAYS,FORM8
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,TMPPERC
          GOTO      REC8800
.
.----- Ward/Bed is not on the ward file ------
.
REC8600   MOVE      "UNKNOWN WARD/BED : ",DESCWARD
          ENDSET    DESCWARD
          APPEND    TMPWARD,DESCWARD
          APPEND    "/",DESCWARD
          APPEND    TMPBED,DESCWARD
          RESET     DESCWARD
.
.------ Ward/Bed record is not on file OR is equal to spaces ------
.------ To get a value for percentage usage, we will have to treat it as ------
.------ a valid ward/bed record ------
.
REC8700   MOVE      TMPDCASE,FORM12P4
          ADD       TMPBDAYS,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       CDYSDAYS,FORM12P4
          MOVE      FORM12P4,TMPPERC
.
.------ print the current record ------
.
REC8800   COMPARE   "60",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS    
.
          PRINT     *N,*14,"|",*17,TMPWARD,"/",TMPBED,*25,"| ",DESCWARD,*58,"|":
                       TMPADMNS,SP1,TMPTRANS,*74,"|  ",TMPBDAYS,*85,"|  ":
                       TMPDCASE,*97,"| ",TMPOPERS,*110,"|  ",TMPPERC,*123,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
.------ print the current record for the 14th option ------ * start   *I-157391
.
REC9000   COMPARE   "60",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS    
.
          PRINT     *N,*14,"| ",TMKEYFLD,*49,"|",*52,TMPADMNS:
                       *62,"|",*65,TMPBDAYS,*73,"|",*76,TMPDCASE,*85,"|":
                       *88,TMPOPERS,*98,"| $",TMPNET,*112,"|";
          ADD       ONE,CLNO
          GOTO      REC9999
.
REC9999   RETURN
+
.**********************************************************************
.*                               PAGE0000                             *
.*  This routine prints the page seperators for the various reports   *
.**********************************************************************
PAGE0000  BRANCH    SAVOPTN,PAGE1000,PAGE2000,PAGE3000,PAGE4000,PAGE5000:
                            PAGE5000,PAGE3000,PAGE5000,PAGE3000,PAGE6000:
                            PAGE3000,PAGE3000,PAGE3000,PAGE9000
.
          GOTO      PAGE3000                * all other options use Cat/Codes
.
.------ print the page seperator for the first option ------
.
PAGE1000  PRINT     *N,*29,"*-------------------------------------":
                           "-------------------------------------*";
          ADD       ONE,CLNO
          GOTO      PAGE9999
.
.------ print the page seperator for the second option ------
.
PAGE2000  PRINT     *N,*25,"*-----------------------------------------":
                           "------------------------------------------*";
          ADD       ONE,CLNO
          GOTO      PAGE9999
.
.------ print the page seperator for all options that use a codes file ------
.------ code ------
.
PAGE3000  PRINT     *N,*14,"*---------------------------------------------":
                           "----------------------------------------------*";
          ADD       ONE,CLNO
          GOTO      PAGE9999
.
.------ print the page seperator for the fourth option ------
.
PAGE4000  PRINT     *N,*26,"*-------------------------------------":
                           "--------------------------------------*";
          ADD       ONE,CLNO
          GOTO      PAGE9999
.
.------ print the page seperator for the fifth, sixth, eighth options ------
.
PAGE5000  PRINT     *N,"*-------------------------------------------":
                       "--------------------------------------------":
                       "-------------------------------------------*";
          ADD       ONE,CLNO
          GOTO      PAGE9999
.
.------ print the page seperator for the tenth option ------
.
PAGE6000  PRINT     *N,*14,"*-------------------------------------------":
                           "--------------------------------------------":
                           "---------------------*";
          ADD       ONE,CLNO
          GOTO      PAGE9999
.
.------ print the page seperator for the 14th option ------
.
PAGE9000  PRINT     *N,*14,"*-------------------------------------------":
                           "--------------------------------------------":
                           "----------*";
          ADD       ONE,CLNO
          GOTO      PAGE9999
.
PAGE9999  RETURN
+
.**********************************************************************
.*                               HEND0000                             *
.*  This routine prints the lines for the end of a health fund        *
.**********************************************************************
HEND0000  PRINT     *N,"|",*15,"|",*49,"|",*57,"--------",*66,"|":
                       *74,"-------",*82,"|",*90,"-------",*98,"|":
                      *106,"------",*113,"|",*121,"-----------|";
          ADD       ONE,CLNO
          GOTO      HEND9999
.
.------ print the second line for the end of a health fund ------
.
HEND5000  PRINT     *N,"|",*15,"|",*49,"|",*66,"|",*82,"|",*98,"|":
                       *113,"|",*132,"|";
          ADD       ONE,CLNO
.
HEND9999  RETURN
+
.**********************************************************************
.*                                ADDV0000                            *
.*      Routine to add the variables just printed to the totals       *
.**********************************************************************
ADDV0000  BRANCH    SAVOPTN,ADDV1000,ADDV2000,ADDV1000,ADDV1000,ADDV3000:
                            ADDV4000,ADDV1000,ADDV5000,ADDV1000,ADDV6000
.
          GOTO      ADDV1000                * all other options use Cat/Codes
.
.------ add the variables for the first and fourth & 14th options and ------
.------ every option that uses a codes file code ------
.
ADDV1000  ADD       TMPADMNS,GNDADMNS
          ADD       TMPBDAYS,GNDBDAYS
          ADD       TMPDCASE,GNDDCASE
          ADD       TMPOPERS,GNDOPERS
          ADD       TMPNET,GNDNET
          GOTO      ADDV9999
.
.------ add the variables for the second option ------
.
ADDV2000  MATCH     "Male  ",SEX
          GOTO      ADDV2500 IF NOT EQUAL
.
          ADD       TMPADMNS,GNDADMNS
          ADD       TMPBDAYS,GNDBDAYS
          ADD       TMPDCASE,GNDDCASE
          ADD       TMPOPERS,GNDOPERS
          ADD       TMPNET,GNDNET
          GOTO      ADDV9999
.
.------ add the variables for females for the second option ------
.------ N.B. we will use the sub-total variables to avoid the need to ------
.------ define extra variables ------
.
ADDV2500  ADD       TMPADMNS,SUBADMNS
          ADD       TMPBDAYS,SUBBDAYS
          ADD       TMPDCASE,SUBDCASE
          ADD       TMPOPERS,SUBOPERS
          ADD       TMPNET,SUBNET
          GOTO      ADDV9999
.
.------ add the variables for the fifth option ------
.
ADDV3000  ADD       TMPBDAYS,GNDBDAYS
          ADD       TMPDCASE,GNDDCASE
          ADD       TMPNET,GNDNET
          ADD       TMPPRIM,GNDPRIM
          ADD       TMPOTHER,GNDOTHER
          GOTO      ADDV9999
.
.------ add the variables for the sixth option ------
.
ADDV4000  ADD       TMPBDAYS,GNDBDAYS
          ADD       TMPDCASE,GNDDCASE
          ADD       TMPNET,GNDNET
          ADD       TMPOPERS,GNDOPERS
          GOTO      ADDV9999
.
.------ add the variables for the eighth option ------
.
ADDV5000  ADD       TMPADMNS,GNDADMNS
          ADD       TMPBDAYS,GNDBDAYS
          ADD       TMPDCASE,GNDDCASE
          ADD       TMPNET,GNDNET
          ADD       TMPOPERS,GNDOPERS
          ADD       TMPADMNS,SUBADMNS
          ADD       TMPBDAYS,SUBBDAYS
          ADD       TMPDCASE,SUBDCASE
          ADD       TMPNET,SUBNET
          ADD       TMPOPERS,SUBOPERS
          ADD       TMPADMNS,SUBHADMS  
          ADD       TMPBDAYS,SUBHBDAY  
          ADD       TMPDCASE,SUBHDAYC  
          ADD       TMPOPERS,SUBHOPER  
          ADD       TMPNET,SUBHNET   
          GOTO      ADDV9999
.
.------ add the variables for the tenth option ------
.
ADDV6000  ADD       TMPADMNS,SUBADMNS
          ADD       TMPBDAYS,SUBBDAYS
          ADD       TMPDCASE,SUBDCASE
          ADD       TMPOPERS,SUBOPERS
          ADD       TMPTRANS,SUBTRANS
.
          ADD       TMPADMNS,GNDADMNS
          ADD       TMPBDAYS,GNDBDAYS
          ADD       TMPDCASE,GNDDCASE
          ADD       TMPOPERS,GNDOPERS
          ADD       TMPTRANS,GNDTRANS
.
ADDV9999  RETURN
+
.**********************************************************************
.*                              SUBH0000                              *
.*       Routine to print the sub-totals for each health fund         *
.**********************************************************************
SUBH0000  MOVE      ZERO,PHSUBADM  
          MOVE      ZERO,PHSUBBDY
          MOVE      ZERO,PHSUBDAY  
          MOVE      ZERO,PHSUBNET  
          MOVE      ZERO,PHSUBOPS  
.
          COMPARE   ZERO,EDOPERS            * see if number of operations
          GOTO      SUBH1100 IF EQUAL         are zero
.
          MOVE      SUBHOPER,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EDOPERS,FORM12P4
          MOVE      FORM12P4,PHSUBOPS
.
.------ process next percentage variable ------
.
SUBH1100  COMPARE   ZERO,EADMNS             * see if number of admissions
          GOTO      SUBH1200 IF EQUAL         are zero
.
          MOVE      SUBHADMS,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EADMNS,FORM12P4
          MOVE      FORM12P4,PHSUBADM
.
.------ process next percentage variable ------
.
SUBH1200  COMPARE   ZERO,EBDAYS             * see if number of bed days
          GOTO      SUBH1300 IF EQUAL         are zero
.
          MOVE      SUBHBDAY,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EBDAYS,FORM12P4
          MOVE      FORM12P4,PHSUBBDY
.
.------ process next percentage variable ------
.
SUBH1300  COMPARE   ZERO,EDCASES            * see if number of day cases
          GOTO      SUBH1400 IF EQUAL         are zero
.
          MOVE      SUBHDAYC,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EDCASES,FORM12P4
          MOVE      FORM12P4,PHSUBDAY
.
.------ process next percentage variable ------
.
SUBH1400  COMPARE   ZERO,ENETAMT            * see if net charges are zero
          GOTO      SUBH1500 IF EQUAL
.
          MOVE      SUBHNET,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       ENETAMT,FORM12P4
          MOVE      FORM12P4,PHSUBNET
.
.------ print the sub total record for health funds ------
.
SUBH1500  COMPARE   "56",CLNO
          CALL      HEAD0000 IF NOT LESS    * paginate if required
.
          CALL      HEND0000                * print first underline for end
.                                             of a health fund
.
          PRINT     *N,"|",*15,"| ",DESCFUND,*49,"|",PHSUBOPS,"%",SUBHOPER:
                       *66,"|",PHSUBADM,"%",SUBHADMS,*82,"|",PHSUBBDY,"%":
                       SUBHBDAY,*98,"|",PHSUBDAY,"%",SUBHDAYC,*113,"|":
                       PHSUBNET,"%",SUBHNET,*132,"|";
          ADD       ONE,CLNO
.
          CALL      HEND5000                * print second underline for end
.                                             of a health fund
          CALL      PAGE0000                * print page end for a health fund
.
SUBH9999  RETURN
+
.**********************************************************************
.*                              SUBT0000                              *
.*         Routine to print the sub-totals for the claim code         *
.**********************************************************************
SUBT0000  COMPARE   TEN,SAVOPTN             * skip if we are printing the 
          GOTO      SUBT5000 IF EQUAL         report for option ten
.
          COMPARE   "60",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS    
          MOVE      "BLANK CLAIM CODE",DESCCODE
.
          MATCH     SP3,SAVCCODE            * see if the code is spaces
          GOTO      SUBT1000 IF EQUAL          
.
          PACK      KEY5,CODECL,SAVCCODE
          CALL      RDCODE1                 * read patient codes file
          BRANCH    OVRCD,SUBT0500
          MOVE      TDESC,DESCCODE
          GOTO      SUBT1000
.
.----- code is not on the codes file ------
.
SUBT0500  MOVE      "UNKNOWN CODE : ",DESCCODE
          ENDSET    DESCCODE
          APPEND    SAVCCODE,DESCCODE
          RESET     DESCCODE
.
.------ process the percentage variables for the current record ------
.
SUBT1000  MOVE      ZERO,PSUBADMS  
          MOVE      ZERO,PSUBBDAY  
          MOVE      ZERO,PSUBDAYC  
          MOVE      ZERO,PSUBNET   
          MOVE      ZERO,PSUBOPER  
.
          COMPARE   ZERO,EDOPERS            * see if number of operations
          GOTO      SUBT1100 IF EQUAL         are zero
.
          MOVE      SUBOPERS,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EDOPERS,FORM12P4
          MOVE      FORM12P4,PSUBOPER
.
.------ process next percentage variable ------
.
SUBT1100  COMPARE   ZERO,EADMNS             * see if number of admissions
          GOTO      SUBT1200 IF EQUAL         are zero
.
          MOVE      SUBADMNS,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EADMNS,FORM12P4
          MOVE      FORM12P4,PSUBADMS
.
.------ process next percentage variable ------
.
SUBT1200  COMPARE   ZERO,EBDAYS             * see if number of bed days
          GOTO      SUBT1300 IF EQUAL         are zero
.
          MOVE      SUBBDAYS,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EBDAYS,FORM12P4
          MOVE      FORM12P4,PSUBBDAY
.
.------ process next percentage variable ------
.
SUBT1300  COMPARE   ZERO,EDCASES            * see if number of day cases
          GOTO      SUBT1400 IF EQUAL         are zero
.
          MOVE      SUBDCASE,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       EDCASES,FORM12P4
          MOVE      FORM12P4,PSUBDAYC
.
.------ process next percentage variable ------
.
SUBT1400  COMPARE   ZERO,ENETAMT            * see if net charges are zero
          GOTO      SUBT1500 IF EQUAL
.
          MOVE      SUBNET,FORM12P4
          MULT      ONEHUND,FORM12P4
          DIV       ENETAMT,FORM12P4
          MOVE      FORM12P4,PSUBNET
.
.------ print the claim code sub totals ------
.
SUBT1500  PRINT     *N,"| Claim # ",SAVCCODE,*15,"| ",DESCCODE,*49,"|":
                       PSUBOPER,"%",SUBOPERS,*66,"|",PSUBADMS,"%",SUBADMNS:
                       *82,"|",PSUBBDAY,"%",SUBBDAYS,*98,"|",PSUBDAYC,"%":
                       SUBDCASE,*113,"|",PSUBNET,"%",SUBNET,*132,"|";
.
          CALL      HEAD0000                * print new page header 
          GOTO      SUBT9999
.
.------ print the subtotals for option ten ------
.
SUBT5000  COMPARE   "60",CLNO               * paginate if required
          CALL      HEAD0000 IF NOT LESS    
.
          MOVE      SUBDCASE,FORM12P4
          ADD       SUBBDAYS,FORM12P4
          MULT      ONEHUND,FORM12P4
          MOVE      CNOBEDS,FORM8
          MULT      CDYSDAYS,FORM8
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,SUBPERC
.
          CALL      PAGE0000                * print underline for sub totals
.
          PRINT     *N,*14,"|",*25,"| Subtotal for Ward ",SAVWARD,*58,"|":
                       SUBADMNS,SP1,SUBTRANS,*74,"|  ",SUBBDAYS,*85,"|  ":
                       SUBDCASE,*97,"| ",SUBOPERS,*110,"|  ",SUBPERC,*123,"|";
.
          CALL      PAGE0000                * print underline for sub totals
          ADD       ONE,CLNO
.
SUBT9999  RETURN
+
.**********************************************************************
.*                              GNDT0000                              *
.*              Routine to print the grand totals                     *
.**********************************************************************
GNDT0000  BRANCH    SAVOPTN,GNDT1000,GNDT2000,GNDT3000,GNDT4000,GNDT5000:
                            GNDT6000,GNDT3000,GNDT7000,GNDT3000,GNDT8000:
                            GNDT3000,GNDT3000,GNDT3000,GNDT9000
.
          GOTO      GNDT3000                * all other options use Cat/Codes
.
.------ print the grand totals for the first report option ------
.
GNDT1000  COMPARE   "50",CLNO
          CALL      HEAD0000 IF NOT LESS    * paginate if required
.
          CALL      PAGE0000                * print page end for grand totals
.
          PRINT     *N,*29,"| Total",*41,"|",*44,GNDADMNS,*54,"|",*57,GNDBDAYS:
                       *65,"|",*68,GNDDCASE,*77,"|",*80,GNDOPERS,*90,"| $":
                       GNDNET,*104,"|";
.
          CALL      PAGE0000                * print page end for grand totals
          PRINT     *N;
          GOTO      GNDT9999
.
.------ print the grand totals for the second report option ------
.
GNDT2000  COMPARE   "50",CLNO
          CALL      HEAD0000 IF NOT LESS    * paginate if required
.
          CALL      PAGE0000                * print page end for grand totals
.
          PRINT     *N,*25,"| Total",*37,"|",*39,"Male  ",*46,"|",*49,GNDADMNS:
                       *59,"|",*62,GNDBDAYS,*70,"|",*73,GNDDCASE,*82,"|":
                       *85,GNDOPERS,*95,"| $",GNDNET,*109,"|":
                    *N,*25,"|",*37,"|",*39,"Female",*46,"|",*49,SUBADMNS:
                       *59,"|",*62,SUBBDAYS,*70,"|",*73,SUBDCASE,*82,"|":
                       *85,SUBOPERS,*95,"| $",SUBNET,*109,"|";
.
          CALL      PAGE0000                * print page end for grand totals
          PRINT     *N;
          GOTO      GNDT9999
.
.------ print the grand totals for every report option that uses a ------
.------ codes file code ------
.
GNDT3000  COMPARE   "50",CLNO
          CALL      HEAD0000 IF NOT LESS    * paginate if required
.
          CALL      PAGE0000                * print page end for grand totals
.
          PRINT     *N,*14,"| ",*22,"Total",*43,"|",*46,GNDADMNS:
                       *56,"|",*59,GNDBDAYS,*67,"|",*70,GNDDCASE,*79,"|":
                       *82,GNDOPERS,*92,"| $",GNDNET,*106,"|";
          ADD       ONE,CLNO
.
          CALL      PAGE0000                * print page end for grand totals
          PRINT     *N;
          GOTO      GNDT9999
.
.------ print the grand totals for the fourth report option ------
.
GNDT4000  COMPARE   "50",CLNO
          CALL      HEAD0000 IF NOT LESS    * paginate if required
.
          CALL      PAGE0000                * print page end for grand totals
.
          PRINT     *N,*26,"|",*30,"Total",*39,"|",*42,GNDADMNS:
                       *52,"|",*55,GNDBDAYS,*63,"|",*66,GNDDCASE,*75,"|":
                       *78,GNDOPERS,*88,"| $",GNDNET,*102,"|";
          ADD       ONE,CLNO
.
          CALL      PAGE0000                * print page end for grand totals
          PRINT     *N;
          GOTO      GNDT9999
.
.------ print the grand totals for the fifth report option ------
.
GNDT5000  COMPARE   "47",CLNO
          CALL      HEAD0000 IF NOT LESS    * paginate if required
.
          CALL      PAGE0000                * print page end for grand totals
.
          PRINT     *N,"|",*13,"Total",*84,"|",GNDPRIM,*92,"|",GNDOTHER:
                       *100,"|",GNDBDAYS,*109,"|",GNDDCASE:
                       *118,"| ",GNDNET,*132,"|";
.
          CALL      PAGE0000                * print page end for grand totals
          PRINT     *N;
          GOTO      GNDT9999
.
.------ print the grand totals for the sixth report option ------
.
GNDT6000  COMPARE   "47",CLNO
          CALL      HEAD0000 IF NOT LESS    * paginate if required
.
          CALL      PAGE0000                * print page end for grand totals
.
          PRINT     *N,"|",*13,"Total",*84,"| ",GNDOPERS,*95,"| ",GNDBDAYS:
                       *106,"|  ",GNDDCASE,*118,"| ",GNDNET,*132,"|";
.
          CALL      PAGE0000                * print page end for grand totals
          PRINT     *N;
          GOTO      GNDT9999
.
.------ print the grand totals for the eighth report option ------
.
GNDT7000  PRINT     *N,"|",*15,"| Grand Total",*49,"|","100.00%",GNDOPERS:
                       *66,"|","100.00%",GNDADMNS,*82,"|","100.00%":
                       GNDBDAYS,*98,"|","100.00%",GNDDCASE,*113,"|":
                       "100.00%",GNDNET,*132,"|";
.
          CALL      PAGE0000                * print page end
          PRINT     *N;
          GOTO      GNDT9999
.
.------ print the grand totals for the tenth report option ------
.
GNDT8000  COMPARE   "48",CLNO
          CALL      HEAD1000 IF NOT LESS    * paginate if required
.
          MOVE      GNDDCASE,FORM12P4
          ADD       GNDBDAYS,FORM12P4
          MULT      ONEHUND,FORM12P4
          MOVE      CNOBEDS,FORM8
          MULT      CDYSDAYS,FORM8
          DIV       FORM8,FORM12P4
          MOVE      FORM12P4,GNDPERC
.
          PRINT     *N,*14,"|",*25,"| Total",*58,"|",GNDADMNS,SP1,GNDTRANS:
                       *74,"|  ",GNDBDAYS,*85,"|  ",GNDDCASE,*97,"| ",GNDOPERS:
                      *110,"|  ",GNDPERC,*123,"|";
.
          CALL      PAGE0000                * print page end for grand totals
          PRINT     *N;
          GOTO      GNDT9999
.
.------ print the grand totals for the 14th report option ------
.
GNDT9000  COMPARE   "50",CLNO
          CALL      HEAD0000 IF NOT LESS    * paginate if required
.
          CALL      PAGE0000                * print page end for grand totals
.
          PRINT     *N,*14,"|",*17,"Total",*49,"|",*52,GNDADMNS:
                       *62,"|",*65,GNDBDAYS,*73,"|",*76,GNDDCASE,*85,"|":
                       *88,GNDOPERS,*98,"| $",GNDNET,*112,"|";
          ADD       ONE,CLNO
.
          CALL      PAGE0000                * print page end for grand totals
          PRINT     *N;
          GOTO      GNDT9999
.
GNDT9999  RETURN
+
.**********************************************************************
.*                               ENDR0000                             *
.*               Routine to print the end of the report               *
.**********************************************************************
ENDR0000  BRANCH    SAVOPTN,ENDR1000,ENDR1000,ENDR2000,ENDR2000,ENDR3000:
                            ENDR4000,ENDR2000,ENDR5000,ENDR2000,ENDR6000
.
          GOTO      ENDR2000                * all other options use Cat/Codes
.
.------ print the end of report for the first, second report options ------
.
ENDR1000  PRINT     *N,"Age        = Age at admission for each patient":
                    *N,"Admissions = Number of patients who were admitted ":
                       "during the period":
                    *N,"Bed Days   = Number of inpatient bed days excluding":
                       " day cases":
                    *N,"Day Case   = Number of day cases admitted":
                    *N,"Operations = Number of operations performed during":
                       " the period":
                    *N,"$ Net      = Total charge accumulated for patients":
                       " during the period":
                    *N,*N,"***  End of Report  ***"
          GOTO      ENDR9999
.
.------ print end of report for every option that uses a codes file code ------
.------ and the fourth option & 14th option ------
.
ENDR2000  PRINT     *N,"Admissions = Number of patients who were admitted ":
                       "during the period":
                    *N,"Bed Days   = Number of inpatient bed days excluding":
                       " day cases":
                    *N,"Day Case   = Number of day cases admitted":
                    *N,"Operations = Number of operations performed during":
                       " the period":
                    *N,"$ Net      = Total charge accumulated for patients":
                       " during the period":
                    *N,*N,"***  End of Report  ***"
          GOTO      ENDR9999
.
.------ print the end of report for the fifth report option ------
.
ENDR3000  PRINT     *N,"Data for ",EADMNS," Admissions, ",EBDAYS," Bed Days, ":
                       EDCASES," Day Cases, and $",ENETAMT:
                    *N,*N,"Primary    = Number of times that this disease ":
                          "code was coded as the primary disease":
                    *N,"Other      = Number of times that this disease code ":
                       "was coded as other than a primary disease":
                    *N,"Bed Days   = Number of inpatient bed days, excluding":
                       " day cases, in the period for patients who have this":
                       " disease code as a primary disease":
                    *N,"Daycases   = Number of day case patients in the ":
                       "period who have this disease code as a primary ":
                       "disease":
                    *N,"$ Net      = Total charge accumulated in the period":
                       " for patients who have this disease code as a primary":
                       " disease":
                    *N,*N,"NOTE : If a patient in the period has more than ":
                          "one primary disease coded, then the bed days, ":
                          "daycases and $ Net on the report":
                    *N,*8,"may not balance with other reports.":
                    *N,*N,"***  End of Report  ***"
          GOTO      ENDR9999
.
.------ print the end of report for the sixth report option ------
.
ENDR4000  PRINT     *N,"Data for ",EADMNS," Admissions, ",EBDAYS," Bed Days, ":
                       EDCASES," Day Cases, and $",ENETAMT:
                    *N,*N,"No. Ops    = Number of times that this operation ":
                          "code was coded":
                    *N,"Bed Days   = Number of inpatient bed days, excluding":
                       " day cases, in the period for patients who have this":
                       " operation code":
                    *N,"Daycases   = Number of day case patients in the ":
                       "period who have this operation code":
                    *N,"$ Net      = Total charge accumulated in the period":
                       " for patients who have this operation code";
.
          BRANCH    CPRIMOP,ENDR4100        * skip if doing primary operations
.                                             only
          PRINT     *N,*N,"NOTE : If a patient in the period has more than ":
                          "one operation coded, then the bed days, ":
                          "daycases and $ Net on the report":
                    *N,*8,"may not balance with other reports.";
.
.------ print the end of the report ------
.
ENDR4100  PRINT     *N,*N,"***  End of Report  ***"
.
          GOTO      ENDR9999
.
.------ print the end of report for the eighth report option ------
.
ENDR5000  PRINT     *N,"Operations   = Number of operations performed during":
                       " the period":
                    *N,"Operations % = Number of operations performed /":
                       " Total number of operations for period * 100":
                    *N,"Admissions   = Number of patients who were admitted ":
                       "during the period":
                    *N,"Admissions % = Number of patients who were admitted /":
                       " Total number of patients admitted during period":
                       " * 100":
                    *N,"Bed Days     = Number of inpatient bed days excluding":
                       " day cases":
                    *N,"Bed Days %   = Number of inpatient bed days excluding":
                       " day cases / Total number of bed days excluding day":
                       " cases for the period * 100":
                    *N,"Day Case     = Number of day cases admitted":
                    *N,"Day Case %   = Number of day cases admitted / Total":
                       " number of day cases admitted for the period * 100":
                    *N,"$ Net        = Total charge accumulated for patients":
                       " during the period":
                    *N,"$ Net %      = Total charge accumulated / Total":
                       " charge accumulated for all patients in the period":
                       " * 100":
                    *N,*N,"***  End of Report  ***"
          GOTO      ENDR9999
.
.------ print the end of report for the tenth report option ------
.
ENDR6000  PRINT     *N,"Admissions Actual = Number of patients who were":
                       " admitted into this ward during the period":
                    *N,"Admissions Trans  = Number of patients who were":
                       " transferred into this ward during the period":
                    *N,"Bed Days          = Number of inpatient bed days":
                       " excluding day cases":
                    *N,"Day Case          = Number of day cases discharged":
                       " from this ward":
                    *N,"Operations        = Number of operations performed":
                       " during the period":
                    *N,"Percentage Usage  = For Beds            : (Bed Days":
                       " + Day Cases) / Number of days in period * 100":
                    *N,"                  = For Ward Only Wards : (Bed Days":
                       " + Day Cases) / (Number of beds in ward * Number of":
                       " days in period) * 100":
                    *N,"                  = For Totals          : (Bed Days":
                       " + Day Cases) / (Number of beds in hospital * Number":
                       " of days in period) * 100":
                    *N,*N,"***  End of Report  ***"
.
ENDR9999  RETURN
+
.
.------ I/O routines for temp files ------
.
RATMPR1   MOVE      ZERO,OVRCD
          RESET     KEY2
          READ      PATTM1XX,KEY2;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY2
          READ      PATTM1XX,KEY2;;
          RETURN
.
RDTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY2
          READ      PATTM1XX,KEY2;DTMPAGEG,TMPADMNS,TMPBDAYS,TMPDCASE:
                                  TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          MOVE      DTMPAGEG,TMPAGEGP
          RETURN
.
RKTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY2
          READKS    PATTM1XX;DTMPAGEG,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          MOVE      DTMPAGEG,TMPAGEGP
          RETURN
.
RPTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY2
          READKP    PATTM1XX;DTMPAGEG,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          MOVE      DTMPAGEG,TMPAGEGP
          RETURN
.
WRTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY2
          WRITE     PATTM1XX,KEY2;KEY2,TMPADMNS,TMPBDAYS,TMPDCASE,TMPOPERS:
                             TMPNET
          RETURN
.
UPTMPR1   MOVE      TMPAGEGP,DTMPAGEG
          UPDATE    PATTM1XX;DTMPAGEG,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          RETURN
.
DETMPR1   RESET     KEY2
          DELETE    PATTM1XX,KEY2
          RETURN
.
RATMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM2XX,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM2XX,KEY3;;
          RETURN
.
RDTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM2XX,KEY3;DTMPAGEG,TMPSEX,TMPADMNS,TMPBDAYS,TMPDCASE:
                                  TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          MOVE      DTMPAGEG,TMPAGEGP
          RETURN
.
RKTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          READKS    PATTM2XX;DTMPAGEG,TMPSEX,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          MOVE      DTMPAGEG,TMPAGEGP
          RETURN
.
RPTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          READKP    PATTM2XX;DTMPAGEG,TMPSEX,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          MOVE      DTMPAGEG,TMPAGEGP
          RETURN
.
WRTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          WRITE     PATTM2XX,KEY3;KEY3,TMPADMNS,TMPBDAYS,TMPDCASE,TMPOPERS:
                             TMPNET
          RETURN
.
UPTMPR2   MOVE      TMPAGEGP,DTMPAGEG
          UPDATE    PATTM2XX;DTMPAGEG,TMPSEX,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          RETURN
.
DETMPR2   RESET     KEY3
          DELETE    PATTM2XX,KEY3
          RETURN
.
RATMPR3   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM3XX,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR3   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM3XX,KEY3;;
          RETURN
.
RDTMPR3   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM3XX,KEY3;TMPCODE,TMPADMNS,TMPBDAYS,TMPDCASE:
                                  TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR3   MOVE      ZERO,OVRCD
          RESET     KEY3
          READKS    PATTM3XX;TMPCODE,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR3   MOVE      ZERO,OVRCD
          RESET     KEY3
          READKP    PATTM3XX;TMPCODE,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR3   MOVE      ZERO,OVRCD
          RESET     KEY3
          WRITE     PATTM3XX,KEY3;KEY3,TMPADMNS,TMPBDAYS,TMPDCASE,TMPOPERS:
                             TMPNET
          RETURN
.
UPTMPR3   UPDATE    PATTM3XX;TMPCODE,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          RETURN
.
DETMPR3   RESET     KEY3
          DELETE    PATTM3XX,KEY3
          RETURN
.
RATMPR4   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATT14XX,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR4   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATT14XX,KEY8;;
          RETURN
.
RDTMPR4   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATT14XX,KEY8;TMPPCODE,TMPADMNS,TMPBDAYS,TMPDCASE:
                                  TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR4   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKS    PATT14XX;TMPPCODE,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR4   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKP    PATT14XX;TMPPCODE,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR4   MOVE      ZERO,OVRCD
          RESET     KEY8
          WRITE     PATT14XX,KEY8;KEY8,TMPADMNS,TMPBDAYS,TMPDCASE,TMPOPERS:
                             TMPNET
          RETURN
.
UPTMPR4   UPDATE    PATT14XX;TMPPCODE,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          RETURN
.
DETMPR4   RESET     KEY8
          DELETE    PATT14XX,KEY8
          RETURN
.
RATMPR5   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM5XX,KEY9;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR5   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM5XX,KEY9;;
          RETURN
.
RDTMPR5   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM5XX,KEY9;TMPDISEA,TMPPRIM,TMPOTHER,TMPBDAYS,TMPDCASE:
                                  TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR5   MOVE      ZERO,OVRCD
          RESET     KEY9
          READKS    PATTM5XX;TMPDISEA,TMPPRIM,TMPOTHER,TMPBDAYS,TMPDCASE:
                             TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR5   MOVE      ZERO,OVRCD
          RESET     KEY9
          READKP    PATTM5XX;TMPDISEA,TMPPRIM,TMPOTHER,TMPBDAYS,TMPDCASE:
                             TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR5   MOVE      ZERO,OVRCD
          RESET     KEY9
          WRITE     PATTM5XX,KEY9;KEY9,TMPPRIM,TMPOTHER,TMPBDAYS,TMPDCASE:
                             TMPNET
          RETURN
.
UPTMPR5   UPDATE    PATTM5XX;TMPDISEA,TMPPRIM,TMPOTHER,TMPBDAYS,TMPDCASE:
                             TMPNET
          RETURN
.
DETMPR5   RESET     KEY9
          DELETE    PATTM5XX,KEY9
          RETURN
.
RATMPR6   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM6XX,KEY9;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR6   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM6XX,KEY9;;
          RETURN
.
RDTMPR6   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      PATTM6XX,KEY9;TMPOPCOD,TMPOPERS,TMPBDAYS,TMPDCASE:
                                  TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR6   MOVE      ZERO,OVRCD
          RESET     KEY9
          READKS    PATTM6XX;TMPOPCOD,TMPOPERS,TMPBDAYS,TMPDCASE:
                             TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR6   MOVE      ZERO,OVRCD
          RESET     KEY9
          READKP    PATTM6XX;TMPOPCOD,TMPOPERS,TMPBDAYS,TMPDCASE:
                             TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR6   MOVE      ZERO,OVRCD
          RESET     KEY9
          WRITE     PATTM6XX,KEY9;KEY9,TMPOPERS,TMPBDAYS,TMPDCASE:
                             TMPNET
          RETURN
.
UPTMPR6   UPDATE    PATTM6XX;TMPOPCOD,TMPOPERS,TMPBDAYS,TMPDCASE:
                             TMPNET
          RETURN
.
DETMPR6   RESET     KEY9
          DELETE    PATTM6XX,KEY9
          RETURN
.
RATMPR7   MOVE      ZERO,OVRCD
          RESET     KEY13
          READ      PATTM7XX,KEY13;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR7   MOVE      ZERO,OVRCD
          RESET     KEY13
          READ      PATTM7XX,KEY13;;
          RETURN
.
RDTMPR7   MOVE      ZERO,OVRCD
          RESET     KEY13
          READ      PATTM7XX,KEY13;TMPCCODE,TMPFUND,TMPTABLE,TMPOPERS,TMPADMNS:
                                   TMPBDAYS,TMPDCASE,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR7   MOVE      ZERO,OVRCD
          RESET     KEY13
          READKS    PATTM7XX;TMPCCODE,TMPFUND,TMPTABLE,TMPOPERS,TMPADMNS:
                             TMPBDAYS,TMPDCASE,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR7   MOVE      ZERO,OVRCD
          RESET     KEY13
          READKP    PATTM7XX;TMPCCODE,TMPFUND,TMPTABLE,TMPOPERS,TMPADMNS:
                             TMPBDAYS,TMPDCASE,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR7   MOVE      ZERO,OVRCD
          RESET     KEY13
          WRITE     PATTM7XX,KEY13;KEY13,TMPOPERS,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPNET
          RETURN
.
UPTMPR7   UPDATE    PATTM7XX;TMPCCODE,TMPFUND,TMPTABLE,TMPOPERS,TMPADMNS:
                             TMPBDAYS,TMPDCASE,TMPNET
          RETURN
.
DETMPR7   RESET     KEY13
          DELETE    PATTM7XX,KEY13
          RETURN
.
RATMPR8   MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      PATTM8XX,KEY6;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR8   MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      PATTM8XX,KEY6;;
          RETURN
.
RDTMPR8   MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      PATTM8XX,KEY6;TMPWARD,TMPBED,TMPADMNS,TMPTRANS,TMPBDAYS:
                                  TMPDCASE,TMPOPERS
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR8   MOVE      ZERO,OVRCD
          RESET     KEY6
          READKS    PATTM8XX;TMPWARD,TMPBED,TMPADMNS,TMPTRANS,TMPBDAYS:
                             TMPDCASE,TMPOPERS
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR8   MOVE      ZERO,OVRCD
          RESET     KEY6
          READKP    PATTM8XX;TMPWARD,TMPBED,TMPADMNS,TMPTRANS,TMPBDAYS:
                             TMPDCASE,TMPOPERS
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR8   MOVE      ZERO,OVRCD
          RESET     KEY6
          WRITE     PATTM8XX,KEY6;KEY6,TMPADMNS,TMPTRANS,TMPBDAYS,TMPDCASE:
                             TMPOPERS
          RETURN
.
UPTMPR8   UPDATE    PATTM8XX;TMPWARD,TMPBED,TMPADMNS,TMPTRANS,TMPBDAYS:
                             TMPDCASE,TMPOPERS
          RETURN
.
DETMPR8   RESET     KEY6
          DELETE    PATTM8XX,KEY6
          RETURN
.
.
RATMPR9   MOVE      ZERO,OVRCD
          RESET     KEY30
          READ      PATTM9XX,KEY30;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR9   MOVE      ZERO,OVRCD
          RESET     KEY30
          READ      PATTM9XX,KEY30;;
          RETURN
.
RDTMPR9   MOVE      ZERO,OVRCD
          RESET     KEY30
          READ      PATTM9XX,KEY30;TMKEYFLD,TMPADMNS,TMPBDAYS,TMPDCASE:
                                  TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR9   MOVE      ZERO,OVRCD
          RESET     KEY30
          READKS    PATTM9XX;TMKEYFLD,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR9   MOVE      ZERO,OVRCD
          RESET     KEY30
          READKP    PATTM9XX;TMKEYFLD,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR9   MOVE      ZERO,OVRCD
          RESET     KEY30
          WRITE     PATTM9XX,KEY30;KEY30,TMPADMNS,TMPBDAYS,TMPDCASE,TMPOPERS:
                             TMPNET
          RETURN
.
UPTMPR9   UPDATE    PATTM9XX;TMKEYFLD,TMPADMNS,TMPBDAYS,TMPDCASE:
                             TMPOPERS,TMPNET
          RETURN
.
DETMPR9   RESET     KEY8
          DELETE    PATTM9XX,KEY30
          RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       CALCAGE
          INC       CALCDAYS
          INC       PATGEXT
          INC       PATHSPKY
          INC       TFILENAM                     * Generate Temp File Name
          INC       PATITMRD
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PATEX1IO/INC
          INC       PATEXBIO/INC
          INC       PATEXCIO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATFN1IO/INC
          INC       PATHSPIO/INC
          INC       PATICDIO/INC
          INC       PATICOIO/INC
          INC       PATITMIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATWR1IO/INC
          INC       PMSVX1IO/INC
          INC       WEBSECIO/INC                                      *I-157391
          INC       WEBERRIO/INC                 * Web Server Error Logging
+
