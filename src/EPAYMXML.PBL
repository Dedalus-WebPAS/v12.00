.*******************************************************************************
.* System    :   Inpatient                                                     *
.* Program   :   EPAYMXML                                                      *
.* Desc      :   Process an ePayment XML File                                  *
.*******************************************************************************
.* Date      :   24/10/2023                                                    *
.* Author    :   J.Tan                                                         *
.* Function  :   This program will open an ePayment XML File and               *
.*               load the details into receipting files                        *
.*                                                                             *
.* Modification :                                                              *
.*                                                                             *
.* V12.00.02  11/09/2025  J.Tan        TSK 0966642                             *
.*            Mod receive payment for Current, Onleave and Discharged patients *
.*            12/09/2025  J.Tan        TSK 0961113                             *
.*            Mod all mismatched/error records to go for Suspense              *
.* V12.00.01  03/06/2025  J.Tan        TSK 0960533                             *
.*            Mod checking for inactive payment code                           *
.* V11.04.02  04/03/2024  Don Nguyen   TSK 0917199                             *
.*            Added on-screen display messages                                 *
.* V11.04.01  15/01/2024  Don Nguyen   TSK 0917199                             *
.*            Re-worked processing code for modified input file format         *
.* V11.03.00  15/11/2023  Don Nguyen   TSK 0917199                             *
.*            Modified code to work with 'epaymxml.us1' script                 *
.*            24/10/2023  J.Tan        TSK 0917199                             *
.*            Created new program                                              *
.*******************************************************************************
          INC       STD002FD            * command line
          INC       PATCONFD/INC
          INC       PMSEERFD/INC        *ePayment pending error table
          INC       PMSEHBFD/INC        *ePayment pending header table
.
          INC       PATCODFD/INC
          INC       PATMA1FD/INC
          INC       PMSVX1FD/INC
          INC       PATMI1FD/INC
          INC       PATMRGFD/INC
          INC       WEBSECFD/INC
          INC       COMPARFD/INC
          INC       PATHSPFD/INC
.
          INC       BOKRC1FD/INC            * Booking File
          INC       RCPREGFD/INC
          INC       RCPCIDFD/INC
          INC       RCPBDTFD/INC
          INC       RCPBNKFD/INC
          INC       RCPDTEFD/INC
          INC       TMPBNKFD/INC
.
          INC       TFILEVAR/INC 
          INC       WEBERRFD/INC 
          INC       PMSXMLFD/INC
.
. ePayment file
. ------------------------------------------------------------------------------
EPAYMTXT  FILE      HL7,FIXED=2000
.
.Name     Type      Size      Start
XMRCEPID  DIM       20      * Episoft eAdmission ID/Admission ID
XMRCHOSP  DIM       3       * Hospital ID
XMRCURNO  DIM       8       * U/R number
XMRCADMN  DIM       8       * Admission Number/Episode ID
XMRCAMNT  DIM       15      * Deposit amount
XMRCSREF  DIM       50      * Correspondence ID (Statement Reference)
XMRCPAID  DIM       50      * Who paid the amount (Reference)
.
. Program variables
. ------------------------------------------------------------------------------
.
ERRORCNT  FORM      2      * Error count
ERRORARY  DIM       50[9]  * Error array
.         1 =  "Invalid or Blank Hospital Id. for Multi Hospital "
.         2 =  "Cash Drawer parameter or Deposit Register is not Setup"
.         3 =  "Invalid U/R No."
.         4 =  "Invalid Visit No."
.         5 =  "Invalid EpiSoft ID for the visit number"
.         6 =  "Suspense register is not Setup"
.
CASHDRWR  DIM       6      * from parameter
.
CURDATE   DIM       8
CURTIME   DIM       8
.
CMDLINE   DIM       200
DIM8      DIM       8
F20       FORM      20
FORM3     FORM      3
FORM20    FORM      20
HRECPT    FORM      12 
RCPNUMBR  DIM       12
SUSREGIS  DIM       3
.
FNAMEI    DIM       150
PAYMCODE  DIM       3
DEPOTYPE  DIM       3
TRANNUMB  FORM      5
SUSALLOC  FORM      1
.
XMLFLNAM  DIM       200
DETAILFN  DIM       8     * Detail Temp File Name
.
. Program constants
. ------------------------------------------------------------------------------
PRGID     INIT      "EPAYMXML"
PRGNAM    INIT      "ePaymentXML load"
VERSION   INIT      "V12.00.02"
+
.*******************************************************************************
.*                              MAIN0000                                       *
.*                      Controlling Logic (Mainline code)                      *
.*******************************************************************************
.
MAIN0000  CALL      SETX0000
          CALL      INIT0000               * initialisation and open files
.
MAIN0500  CALL      GFIL0000               * get filename 
          BRANCH    EXIT,MAIN9999          * nothing input
.
          CALL      CFIL0000               * copy file
          BRANCH    EXIT,MAIN9999          * unable to copy
.
          CALL      OPEN0000               * open text file
          BRANCH    EXIT,MAIN9999          * unable to open .txt file
.
          CALL      PROC0000               * process
.
MAIN9999  STOP                             * chain back to program
+
.*******************************************************************************
.*                                INIT0000               Called by: MAIN0000   *
.*  Initialisation routine                                                     *
.*******************************************************************************
INIT0000  CALL      DISPHEAD                     * display heading
.
.
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PMSVX1A1,"pmsvx1af"
          OPEN      PATMRGG1,"patmrgaf"
          OPEN      PATMI1A1,"patmi1af"
.
          OPEN      RCPREGA1,"rcpregaf"
          OPEN      RCPREGA3,"rcpregaf"
          OPEN      RCPCIDA1,"rcpcidaf"
          OPEN      RCPBNKA1,"rcpbnkaf"
          OPEN      RCPBDTA1,"rcpbdtaf"
          OPEN      RCPDTEA1,"rcpdteaf"
          OPEN      TMPBNKA1,"tmpbnkaf"
.
          OPEN      PATCODE1,"patcodes"
          OPEN      WEBSECA1,"websecaf"
          OPEN      BOKRC1A1,"bokrc1af"
          OPEN      PATHSPA1,"pathspaf"
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS
.
          READ      CONTROLF,HUND19;*182,PTCNEPIS
.
          OPEN      PMSXMLA1,"pmsxmlaf"
          OPEN      PMSEHBA1,"pmsehbaf"
          OPEN      PMSEHBA6,"pmsehbaf"
          OPEN      COMPARA1,"comparaf"
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,DETAILFN
          REP       " 0",DETAILFN
.
INIT9999  RETURN
+
.*******************************************************************************
.*                               OPEN0000                Called by: MAIN0000   *
.* Open the ePayment temporary file for processing                             *
.*******************************************************************************
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      EPAYMTXT,DETAILFN           * open text file
.
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open ePayment (temp) file: ",DETAILFN
            CALL      HITENTER
            GOTO      OPEN9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  MOVE      ONE,EXIT
          GOTO      OPEN9999
.
OPEN9999  RETURN
+
.*******************************************************************************
.*                               PROC0000                Called by: MAIN0000   *
.* Loop through the ePayment temporary file and store data in tables           *
.*******************************************************************************
PROC0000  CALL      IBACLOCK
          PACK      CURDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURDATE             * set current date
          MOVE      CTIMEIS,CURTIME
          REP       " 0",CURTIME             * set current time
.
          UNPACK    SP70,RCCIDEPR,SUSREGIS
          MOVE      SP70,PAYMCODE            * Payment code
          MOVE      SP70,DEPOTYPE            * Deposit type
.
          DISPLAY   *P1:16,*EL,"Processing ePayment..."
.
.         Check if Payment code and Deposit type have been setup
.
          CALL      PCOD0000               * payment code for PatientPortal
          BRANCH    OVRCD,PROC8300
.
          CALL      DTYP0000               * deposit type for an External source
          BRANCH    OVRCD,PROC8400
.
.         Processing the receipt
.
          CALL      WRCP0000
.
          CLOSE     EPAYMTXT,DELETE        * Delete Temporary File
.
          GOTO      PROC9999
.
PROC8300  DISPLAY   *P1:23,*EL,"Payment code for Patient Portal not Set up",*W;
          GOTO      PROC9999
.
PROC8400  DISPLAY   *P1:23,*EL,"Deposit type for External Source not Set up",*W;
          GOTO      PROC9999
.
PROC9999  RETURN
+
.*******************************************************************************
.*                                WRCP0000               Called by: PROC0000   *
.* Read the temp file and write to receipting tables                           *
.*******************************************************************************
WRCP0000  READ      EPAYMTXT,SEQ;XMRCEPID,XMRCHOSP,XMRCURNO,XMRCADMN,XMRCAMNT:
                                 XMRCSREF,XMRCPAID
.
          PACK      XMRCEPID,XMRCEPID,SP70
          MATCH     SP70,XMRCEPID
          GOTO      WRCP8000 IF EQUAL
.
          DISPLAY   *P1:18,*EL,"U/R No.: ",XMRCURNO," Admission No.: ",XMRCADMN
.
          PACK      XMRCHOSP,XMRCHOSP,SP70
          MOVE      ZERO,SUSALLOC
          CALL      VALD0000
          BRANCH    EXIT,WRCP9000
.
.         Processing the receipts
.
          DISPLAY   *P1:22,*EL,"Writing to bank / receipt data files..."
          CALL      WBNK0000               *  write to bank header file
          CALL      WBDT0000               *  write to bank details file
          CALL      WDTE0000               *  write to receipt details file
.
          DISPLAY   *P1:23,*EL,*B,"Finished processing.  "
          CALL      HITENTER
          GOTO      WRCP9999
.
WRCP8000  DISPLAY   *P1:23,*EL,*B,"Episoft eAdmission ID is blank."
.
WRCP9000  CALL      HITENTER
          GOTO      WRCP9999
.
WRCP9999  RETURN
+
.------------------------------------------------------------------------------
. Validate patient
. Deposit or Suspense Register must be SETUP
.------------------------------------------------------------------------------
VALD0000  MOVE      ZERO,ERRORCNT
          MOVE      ZERO,EXIT
.
          MOVE      ONE,F2
          WHILE     F2<10
            MOVE      SP70,ERRORARY[F2]
            ADD       ONE,F2
          DO
.
          DISPLAY   *P1:20,*EL,"Validating data..."
.
.         Check for Hospital id.
.
          COMPARE   ONE,IBCNMHOS
          GOTO      VALD1000 IF NOT EQUAL
.
          MATCH     SP70,XMRCHOSP
          GOTO      VALD0800 IF EQUAL
.
          PACK      KEY3,XMRCHOSP,SP70
          CALL      RDPTHSP1
          COMPARE   ZERO,OVRCD
          GOTO      VALD1000 IF EQUAL
.
VALD0800  MOVE      ONE,ERRORCNT
          CLEAR     ERRORARY[ERRORCNT]
          APPEND    "Invalid or Blank Hospital Id. ",ERRORARY[ERRORCNT]
          APPEND    "for Multi Hospital: ",ERRORARY[ERRORCNT]
          RESET     ERRORARY[ERRORCNT]
.
.---------------------------------------------------------------------------
VALD1000  CALL      RCPR0000                 * Drawer from common parameter
          MATCH     SP70,CASHDRWR
          GOTO      VALD1800 IF EQUAL
.
          MOVE      CASHDRWR,KEY6
          CALL      RDCIDA1
          BRANCH    OVRCD,VALD1800           * invalid cash drawer
.
          IF        IBCNMHOS=1
            MATCH     SP70,RCCIHOSP
            IF        !@EQUAL
              MATCH     RCCIHOSP,XMRCHOSP
              GOTO      VALD1800 IF NOT EQUAL  * different hospital
            ENDIF
          ENDIF
.
.         Check Register of the Drawer
.
          MATCH     SP70,RCCIDEPR
          GOTO      VALD1800 IF EQUAL        * Deposit register not set
.
          PACK      KEY3,RCCIDEPR
          CALL      RDREGA1
          BRANCH    OVRCD,VALD1800           * invalid Deposit Register
.
          IF        IBCNMHOS=1
            MATCH     SP70,REGHOSP
            IF        !@EQUAL
              MATCH     REGHOSP,XMRCHOSP
              GOTO      VALD1800 IF NOT EQUAL    * different hospital id
            ENDIF
          ENDIF
          GOTO      VALD3000
.
VALD1800  MOVE      TWO,ERRORCNT
          CLEAR     ERRORARY[ERRORCNT]
          APPEND    "Cash Drawer parameter ",ERRORARY[ERRORCNT]
          APPEND    "or Deposit Register is not Setup",ERRORARY[ERRORCNT]
          RESET     ERRORARY[ERRORCNT]
.
          DISPLAY   *P1:23,*EL,"Cash Drawer/Deposit Register is not Set up",*W;
          GOTO      VALD9000
.
.---------------------------------------------------------------------------
.
VALD3000  SQUEEZE   XMRCADMN           * Admission Number
          MOVE      ZERO,F8
          MOVE      XMRCADMN,F8        * right justified
          MOVE      F8,XMRCADMN
.
          SQUEEZE   XMRCEPID           * Episoft eAdmission ID
          MOVE      ZERO,F20
          MOVE      XMRCEPID,F20       * right justified
          MOVE      F20,XMRCEPID
          REP       " 0",XMRCEPID
.
          RJUSTIFY  XMRCURNO
.
          MOVE      SP70,PADD1
          MOVE      SP70,PADD2
          MOVE      SP70,PSUBRB
          MOVE      SP70,PADD4
          MOVE      SP70,PPOST
          MOVE      SP70,PMVXMHOS
.
.         Check for valid U/R number
.
VALD3200  MOVE      XMRCURNO,KEY8
          CALL      RDMAST1
          COMPARE   ZERO,OVRCD
          GOTO      VALD4000 IF EQUAL
.
.         Check for Merge U/R
.
          PACK      KEY17,TWO,KEY8,SP70    * Merge fully accepted
          CALL      RDPTMRG1
          IF        OVRCD=1
            PACK      KEY17,THREE,KEY8,SP70 * Merge Processed
            CALL      RDPTMRG1
            BRANCH    OVRCD,VALD3800
          ENDIF
          MOVE      PTMRNWUR,XMRCURNO       * New U/R number
          GOTO      VALD3200
.
VALD3800  MOVE      THREE,ERRORCNT
          MOVE      "Invalid U/R No.",ERRORARY[ERRORCNT]
.
.---------------------------------------------------------------------------
.         Check for valid Admission number
.---------------------------------------------------------------------------
VALD4000  PACK      KEY8,XMRCADMN,SP70
          CALL      RDMISS1
          IF        OVRCD=1
            CALL      RDBKREC1
            BRANCH    OVRCD,VALD4800         * invalid visit number
            COMPARE   TWO,BKRESTAT
            GOTO      VALD4800 IF EQUAL      * Cancelled
            MOVE      BKREURNO,AURNO
          ELSE
            BRANCH    ASTAT,VALD4200,VALD4200,VALD4200,VALD4200
            GOTO      VALD4800               * Cancelled
          ENDIF
.
VALD4200  MATCH     AURNO,XMRCURNO
          IF        !@EQUAL
            MOVE      THREE,ERRORCNT
            MOVE      "Invalid U/R No.for the Visit",ERRORARY[ERRORCNT]
          ENDIF
.
          CALL      RDPMVX11
          BRANCH    OVRCD,VALD4800           * invalid visit number
          GOTO      VALD5000
.
VALD4800  MOVE      FOUR,ERRORCNT
          MOVE      "Invalid Visit No.",ERRORARY[ERRORCNT]
.
.---------------------------------------------------------------------------
.         Checking Episoft eAdmission file
.---------------------------------------------------------------------------
VALD5000  PACK      KEY40,XMRCEPID,SP70      * using Episoft eAdmission ID
          CALL      RSPMEHB6
          CALL      RKPMEHB6
          BRANCH    OVRCD,VALD5800
.
          MATCH     XMRCEPID,PMHBEAID        * Admission ID
          GOTO      VALD5800 IF NOT EQUAL
.
          MATCH     SP70,PMHBVISN
          IF        !@EQUAL
            MATCH     PMHBVISN,XMRCADMN
            IF        !@EQUAL
              MOVE      FOUR,ERRORCNT
              MOVE      "Invalid Visit No.",ERRORARY[ERRORCNT]
            ENDIF
          ENDIF
          GOTO      VALD7000
.
VALD5800  MOVE      FIVE,ERRORCNT
          MOVE      "Invalid EpiSoft ID for the visit number",ERRORARY[ERRORCNT]
.
.---------------------------------------------------------------------------
.         Check if Suspense register is setup
.---------------------------------------------------------------------------
VALD7000  COMPARE   ZERO,ERRORCNT
          GOTO      VALD9999 IF EQUAL      * No error
.
          MOVE      "99",FORM2
          PACK      KEY5,FORM2,SP70
          CALL      RDSREGA3
VALD7200  CALL      RDKREGA3
          BRANCH    OVRCD,VALD8000
.
          COMPARE   REGIBACD,FORM2
          GOTO      VALD8000 IF NOT EQUAL  * not a suspense regist
.
          MATCH     "1",REGACTIV
          GOTO      VALD7200 IF EQUAL      * not active
.
          MOVE      REGCODE,SUSREGIS       * Suspense register
          MOVE      ONE,SUSALLOC            * Suspense register
          MOVE      ZERO,EXIT
          GOTO      VALD9999
.
VALD8000  MOVE      SIX,ERRORCNT
          MOVE      "Suspense Register is not Setup",ERRORARY[ERRORCNT]
          DISPLAY   *P1:23,*EL,"Suspense Register is not Setup",*W;
.
VALD9000  MOVE      ONE,EXIT
VALD9999  RETURN
+
.*******************************************************************************
.         Common parameter for Drawer
.*******************************************************************************
RCPR0000  MOVE      "PTCNPCDR",D8
          MOVE      SP70,CASHDRWR
.
          MOVE      ONE,F1
          PACK      KEY11,SP3,D8,SP70
          IF        IBCNMHOS=1
            PACK      KEY11,XMRCHOSP,D8,SP70
            MOVE      ZERO,F1
          ENDIF
.
RCPR1000  CALL      RDCMPAR1                     * Read system parameter
          BRANCH    OVRCD,RCPR2000
.
          MATCH     "0",CMPAACTV
          GOTO      RCPR2000 IF NOT EQUAL        * not active
.
          MOVE      CMPAVALU,CASHDRWR
          GOTO      RCPR9999
.
RCPR2000  BRANCH    F1,RCPR9999
.
          PACK      KEY11,SP3,D8,SP70            * try default - blank hospital
          MOVE      ONE,F1
          GOTO      RCPR1000
.
RCPR9999  RETURN
+
.------------------------------------------------------------------------------
. Write to Bank header file
.------------------------------------------------------------------------------
WBNK0000  READ      CONTROLF,THIRTY6;*193,HRECPT
          ADD       ONE,HRECPT
          WRITAB    CONTROLF,THIRTY6;*193,HRECPT
          SUB       ONE,HRECPT
.
          MOVE      HRECPT,KEY12
          CALL      RDRCBNK1
          COMPARE   ZERO,OVRCD
          GOTO      WBNK0000 IF EQUAL
.
          MOVE      HRECPT,KEY12
          CALL      RDTMBNK1
          COMPARE   ZERO,OVRCD
          GOTO      WBNK0000 IF EQUAL
.
          CALL      CLRPBK00          * Clear banking file
.
          MOVE      HRECPT,RCBNRECN            * Receipt number
          MOVE      CURDATE,RCBNTDAT
          MOVE      XMRCAMNT,RCBNTOTP
          MOVE      CASHDRWR,RCBNCDRW          * from parameter
          MOVE      RCCICHQA,RCBNCHQA          * Chq Account from Cash drawer
          MATCH     SP70,ERRORARY[1]
          IF        @EQUAL
            MOVE      XMRCHOSP,RCBNMHOS
          ENDIF
.
          MOVE      "0",RCBNTTYP               * default to 0 = Patient
          MOVE      "0",RCBNSTAT               * status
.
          MOVE      CURDATE,RCBNCDAT
          MOVE      CURTIME,RCBNCTIM
          MOVE      "EPAYMXML",RCBNCUID
          MOVE      SP70,RCBNUDAT
          MOVE      SP70,RCBNUTIM
          MOVE      SP70,RCBNUUID
.
WBNK6000  MOVE      HRECPT,KEY12
          CALL      WRRCBNK1
.
WBNK9999  RETURN
+
.------------------------------------------------------------------------------
. Write to Bank details file
.------------------------------------------------------------------------------
WBDT0000  MOVE      ZERO,F3
          PACK      KEY15,RCBNRECN,Z70
          CALL      RSRCBDT1
          CALL      RPRCBDT1
          BRANCH    OVRCD,WBDT1000
.
          MATCH     RCBDRECN,RCBNRECN
          GOTO      WBDT1000 IF NOT EQUAL
.
          MOVE      RCBDUNIQ,F3        * additional bank detail record
          ADD       ONE,F3
          GOTO      WBDT1200
.
WBDT1000  MOVE      ONE,F3             * first bank detail record
.
WBDT1200  CALL      CLRPBT00              * Clear Real RCPBDT fields first
.
          MOVE      CURDATE,RCBDTDAT
          MOVE      RCBNRECN,RCBDRECN
          MOVE      F3,RCBDUNIQ
.
          MOVE      "1",RCBDEFTT           * EFT Type
          PACK      RCBDSTRF,XMRCSREF,SP70 * Statement Reference
          PACK      RCBDPAYD,XMRCPAID,SP70 * Who paid the amount (Reference)
.
          MOVE      "5",RCBDPTYP           * Payment type from Patient Portal
          MOVE      PAYMCODE,RCBDPCOD      * Payment Code
          MOVE      XMRCAMNT,RCBDPAMT      * Payment amount
          MATCH     SP70,ERRORARY[1]
          IF        @EQUAL
            MOVE      XMRCHOSP,RCBDMHOS
          ENDIF
.
          MOVE      CURDATE,RCBDCDAT
          MOVE      CURTIME,RCBDCTIM
          MOVE      "EPAYMXML",RCBDCUID
          UNPACK    SP70,RCBDUDAT,RCBDUTIM,RCBDUUID
.
          IF        ERRORCNT<>0
            MOVE      "eAdmission matched not found",RCBDDRAW     * Error
          ENDIF
.
          PACK      KEY15,RCBDRECN,RCBDUNIQ,SP70
          CALL      WRRCBDT1
.
WBDT9999  RETURN
+
.------------------------------------------------------------------------------
.         Write to rcpdteaf
.------------------------------------------------------------------------------
WDTE0000  MOVE      HRECPT,KEY12
          PACK      KEY17,KEY12,Z70
          CALL      RSRCDTE1
          CALL      RPRCDTE1
          BRANCH    OVRCD,WDTE1000
.
          MATCH     RCDTRECN,KEY12
          GOTO      WDTE1000 IF NOT EQUAL
.
          MOVE      RCDTTCNT,TRANNUMB     * additional detail record
          ADD       ONE,TRANNUMB
          GOTO      WDTE1200
.
WDTE1000  MOVE      ONE,TRANNUMB          * first detail record
.
WDTE1200  CALL      CLRPDE00              * Clear fields
.
          MOVE      CURDATE,RCDTTDAT
          MOVE      KEY12,RCDTRECN        * Receipt number
          MOVE      TRANNUMB,RCDTTCNT
.
          MOVE      CURDATE,RCDTCDAT
          MOVE      CURTIME,RCDTCTIM
          MOVE      "EPAYMXML",RCDTCUID
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
.         MOVE      PACFNAME,RCDTNAME
          MOVE      "MRN",KEY3
          MOVE      " xml",D4
          PACK      RCDTNAME,KEY3,XMRCURNO,D4    * MRN <MRN U/R> xml
          PACK      RCDTREFR,XMRCADMN,SP70   * Episoded ID/visit number
.
          IF        SUSALLOC=1
            MOVE      SUSREGIS,RCDTREGI      * Deposit Register
            MOVE      "2",RCDTALLO              * suspense reg. not allocated
          ELSE
            MOVE      DEPOTYPE,RCDTDPTY      * Deposit type
            MOVE      RCCIDEPR,RCDTREGI      * Deposit Register
            MOVE      XMRCADMN,RCDTVIST      * valid visit number
            MOVE      XMRCURNO,RCDTURNO      * valid U/R number
            MOVE      PMHBEAID,RCDTEADN      * eAdmission ID
          ENDIF
.
          MOVE      REGGENDB,RCDTINCA       * Debtors Control account as Crd.Acc
          MOVE      REGGENBK,RCDTBNKA       * Debit account
          MOVE      REGGST,RCDTGSTC
.
          MATCH     SP70,ERRORARY[1]
          IF        @EQUAL
            MOVE      XMRCHOSP,RCDTMHOS
          ENDIF
.
          MOVE      PADD1,RCDTADD1
          MOVE      PADD2,RCDTADD2
          MOVE      PSUBRB,RCDTADD3
          MOVE      PADD4,RCDTADD4
          MOVE      PPOST,RCDTPOST
.
          SQUEEZE   XMRCAMNT
          MOVE      XMRCAMNT,RCDTAMNT
.
          PACK      KEY17,RCDTRECN,TRANNUMB,SP70
          CALL      WRRCDTE1
.
WDTE9999  RETURN
+
.*******************************************************************************
. Get payment code with Payment type =5 for Patient Portal
.*******************************************************************************
PCOD0000  MOVE      "Py",KEY2
          PACK      KEY5,KEY2,SP70
          CALL      RDSCODE1
PCOD1000  CALL      RDKCODE1
          BRANCH    OVRCD,PCOD9000
.
          MATCH     KEY2,TCODE                * Cat Py
          GOTO      PCOD9000 IF NOT EQUAL
.
          MATCH     "5",PTCDNHCP              * Patient Portal ?
          GOTO      PCOD1000 IF NOT EQUAL
.
          MATCH     "I",PTCOACTV
          GOTO      PCOD1000 IF EQUAL         * Inactive
.
          MOVE      ACODE,PAYMCODE            * Payment code
          MOVE      ZERO,OVRCD
          GOTO      PCOD9999
.
PCOD9000  MOVE      ONE,OVRCD
PCOD9999  RETURN
+
.*******************************************************************************
. Get Deposit type with Indicator 2 = x for Deposits from an external source
.*******************************************************************************
DTYP0000  MOVE      "DP",KEY2
          PACK      KEY5,KEY2,SP70
          CALL      RDSCODE1
DTYP1000  CALL      RDKCODE1
          BRANCH    OVRCD,DTYP9000
.
          MATCH     KEY2,TCODE                * Cat DP
          GOTO      DTYP9000 IF NOT EQUAL
.
          MATCH     "x",TCINDC2               * External source ?
          GOTO      DTYP1000 IF NOT EQUAL
.
          MATCH     "I",PTCOACTV
          GOTO      DTYP1000 IF EQUAL         * Inactive
.
          MOVE      ACODE,DEPOTYPE            * Deposit code
          MOVE      ZERO,OVRCD
          GOTO      DTYP9999
.
DTYP9000  MOVE      ONE,OVRCD
DTYP9999  RETURN
+
+
.*******************************************************************************
.*                          GFIL0000                 Called by: MAIN0000       *
.* Keyin the ePayment XML file name                                            *
.*******************************************************************************
GFIL0000  KEYIN     *P1:10,*EL,"Filename (including path): ":
                    *P28:10,XMLFLNAM
.
          PACK      XMLFLNAM,XMLFLNAM,SP30
          MATCH     SP70,XMLFLNAM
          GOTO      GFIL9100 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      GFIL9999
.
GFIL9100  MOVE      ONE,EXIT
.
GFIL9999  RETURN
+
.*******************************************************************************
.*                          CFIL0000                   Called by: MAIN0000     *
.* Convert the XML file to a ".txt" (temp) file so TBL can open it             *
.*                                                                             *
.* Requires: XMLFLNAM - ePayment XML file path                                 *
.* Returns : TEMPFILE - temporary ".txt" filename                              *
.*           EXIT  0 = file successfully copied                                *
.*                 1 = unable to copy file
.*******************************************************************************
CFIL0000  STRIP     XMLFLNAM
.
          DISPLAY   *P1:12,*EF,"Converting XML file to ePayment (temp) file..."
          DISPLAY   *P1:13,*EF,"XML file: ",XMLFLNAM
.
          CLEAR     CMDLINE
          APPEND    "epaymxml.us1 ",CMDLINE
          APPEND    XMLFLNAM,CMDLINE   * XML filename
          APPEND    " ",CMDLINE
          APPEND    DETAILFN,CMDLINE   * temp filename
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          MATCH     "0       ",TASKID
          IF        @EQUAL
            DISPLAY   *P1:14,*EF,"Created new ePayment (temp) file: ",DETAILFN,".txt"
            MOVE      ZERO,EXIT
          ELSE
            DISPLAY   *P1:23,*EL,*B,"Unable to convert XML file.  "
            CALL      HITENTER
            MOVE      ONE,EXIT
          ENDIF
.
CFIL9999  RETURN
+
.------------------------------------------------------------
.  Clear bank header file
.------------------------------------------------------------
CLRPBK00  MOVE      SP70,RCBNRECN
          MOVE      SP70,RCBNTDAT
          MOVE      ZERO,RCBNTOTP
          MOVE      SP70,RCBNCDRW
          MOVE      SP70,RCBNMHOS
          MOVE      SP70,RCBNMDHS
          MOVE      SP70,RCBNTTYP
          MOVE      SP70,RCBNRCOD
          MOVE      SP70,RCBNSTAT
          MOVE      SP70,RCBNBDAT
          MOVE      SP70,RCBNBTIM
          MOVE      SP70,RCBNRDAT
          MOVE      SP70,RCBNRTIM
          MOVE      SP70,RCBNCHQA
          MOVE      SP70,RCBNCDAT
          MOVE      SP70,RCBNCTIM
          MOVE      SP70,RCBNCUID
          MOVE      SP70,RCBNUDAT
          MOVE      SP70,RCBNUTIM
          MOVE      SP70,RCBNUUID
          MOVE      SP70,RCBNSPAR
.
CLRPBK99  RETURN
+
.------------------------------------------------------------
.  Clear bank details file
.------------------------------------------------------------
CLRPBT00  MOVE      SP70,RCBDTDAT
          MOVE      SP70,RCBDRECN
          MOVE      SP70,RCBDUNIQ
          MOVE      SP70,RCBDMHOS
          MOVE      SP70,RCBDMDHS
          MOVE      SP70,RCBDPTYP
          MOVE      ZERO,RCBDPAMT
          MOVE      SP70,RCBDPAYD
          MOVE      SP70,RCBDCHQN
          MOVE      SP70,RCBDDRAW
          MOVE      SP70,RCBDBANK
          MOVE      SP70,RCBDBRCH
          MOVE      SP70,RCBDCRDT
          MOVE      SP70,RCBDSTRF
          MOVE      SP70,RCBDEFTT
          MOVE      SP70,RCBDCDAT
          MOVE      SP70,RCBDCTIM
          MOVE      SP70,RCBDCUID
          MOVE      SP70,RCBDUDAT
          MOVE      SP70,RCBDUTIM
          MOVE      SP70,RCBDUUID
          MOVE      SP70,RCBDPCOD
          MOVE      SP70,RCBDSPAR
.
CLRCBT99  RETURN
+
.------------------------------------------------------------
.  Clear receipt details file
.------------------------------------------------------------
CLRPDE00  MOVE      SP70,RCDTTDAT
          MOVE      SP70,RCDTRECN
          MOVE      SP70,RCDTTCNT
          MOVE      SP70,RCDTREGI
          MOVE      SP70,RCDTINVN
          MOVE      SP70,RCDTVIST
          MOVE      SP70,RCDTURNO
          MOVE      SP70,RCDTNAME
          MOVE      SP70,RCDTADD1
          MOVE      SP70,RCDTADD2
          MOVE      SP70,RCDTADD3
          MOVE      SP70,RCDTADD4
          MOVE      SP70,RCDTPOST
          MOVE      SP70,RCDTSFLG
          MOVE      SP70,RCDTREFR
          MOVE      SP70,RCDTINCA
          MOVE      SP70,RCDTBNKA
          MOVE      ZERO,RCDTAMNT
          MOVE      ZERO,RCDTDISC
          MOVE      SP70,RCDTMHOS
          MOVE      SP70,RCDTMDHS
          MOVE      SP70,RCDTGSTC
          MOVE      SP70,RCDTGSTA
          MOVE      SP70,RCDTALLO
          MOVE      SP70,RCDTRELD
          MOVE      SP70,RCDTRELT
          MOVE      SP70,RCDTCDAT
          MOVE      SP70,RCDTPRAC
          MOVE      SP70,RCDTCTIM
          MOVE      SP70,RCDTCUID
          MOVE      SP70,RCDTUDAT
          MOVE      SP70,RCDTUTIM
          MOVE      SP70,RCDTUUID
          MOVE      SP70,RCDTDPTY
          MOVE      SP70,RCDTGLEX
          MOVE      SP70,RCDTBATN
          MOVE      SP70,RCDTRELU
          MOVE      SP70,RCDTSPUI
          MOVE      SP70,RCDTSPDT
          MOVE      SP70,RCDTSPTM
          MOVE      SP70,RCDTSDOC
          MOVE      SP70,RCDTEADN
          MOVE      SP70,RCDTSPAR
.
CLRPDE99  RETURN
+
.*******************************************************************************
.* I/O Includes                                                                *
.*******************************************************************************
          INC       STD002IO
          INC       TFILENAM     
          INC       PMSEERIO/INC        *ePayment pending error table
          INC       WEBERRIO/INC
          INC       PMSXMLIO/INC
          INC       PMSEHBIO/INC
          INC       COMPARIO/INC
          INC       PATHSPIO/INC
.
          INC       PATCODIO/INC
          INC       PATMA1IO/INC
          INC       PMSVX1IO/INC
          INC       PATMI1IO/INC
          INC       PATMRGIO/INC
          INC       WEBSECIO/INC
.
          INC       BOKRC1IO/INC
          INC       RCPREGIO/INC
          INC       RCPCIDIO/INC
          INC       RCPBDTIO/INC
          INC       RCPBNKIO/INC
          INC       RCPDTEIO/INC
          INC       TMPBNKIO/INC
.
