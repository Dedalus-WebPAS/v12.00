.*****************************************************************************
.* System    :   Allied Health                                               *
.* Program   :   VINAHOLD                                                    *
.* Desc      :   Fixit to report on and/or close old referrals which have    *
.*               a Referral-In Received Date less than a specified cut-off   *
.*               date                                                        *
.*****************************************************************************
.* Date      :   18/04/2016                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will allow the user to report on and           *
.*               optionally close episodes, as well as their linked programs *
.*               where the Referral-In Received Date less than a specified   *
.*               cut-off date defined period of time.                        *
.* Mods      :                                                               *
.*****************************************************************************
.*        V11.01.02 01/09/2021  Ebon Clements    TSK 0907466                 *
.*                  Added VALP - Victorian artifical limb program            *
.*        V11.01.01 29/03/2021  Ebon Clements    TSK 0902602                 *
.*                  2021 Vic health department changes                       *
.*                  Added programs HEN, TPN and HBD                          *
.*****************************************************************************
.*        V11.00.02 11/05/2020  Ebon Clements    TSK 0891032                 *
.*                  Removed 2020 Vic health department changes (Task 088624) *
.*        V11.00.01 03/04/2020  Ebon Clements    TSK 0888624                 *
.*                  Added programs HEN, TPN and HBD                          *
.*****************************************************************************
.*        V10.14.01 17/04/2019  Steve Armstrong  TSK 0868837                 *
.*                  Recompiled for changes to ALLHDTFD.                      *
.*****************************************************************************
.*        V10.08.03 13/05/2016  Steve Armstrong  TSK 0819119                 *
.*                  Fixed packing of KEY13 prior to WRALRHL1 (was using      *
.*                  ALREVISN instead of ALRHVISN).                           *
.*        V10.08.02 27/04/2016  Steve Armstrong  TSK 0817342                 *
.*                  Added population of ALREUC33 in CLSE0000.                *
.*        V10.08.01 27/04/2016  Steve Armstrong  TSK 0817342                 *
.*                  Mods to CVIN0000 to check Cat CG as well as Cat zG and   *
.*                  to check EXIT value on return.                           *
.*                  Mods to add a default health condition where none exists *
.*                  for an episode.                                          *
.*        V10.08.00 18/04/2016  Steve Armstrong  TSK 0817342                 *
.*                  Program created.                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ALLAUDFD/INC
          INC       ALLCONFD/INC
          INC       ALLDIAFD/INC
          INC       ALLENCFD/INC
          INC       ALLHDTFD/INC
          INC       ALLLNKFD/INC
          INC       ALLQUEFD/INC
          INC       ALLREFFD/INC
          INC       ALLRHLFD/INC
          INC       ALLRLNFD/INC
          INC       ALLSTSFD/INC
          INC       HL7CISFD/INC
          INC       HL7INBFD/INC
          INC       IBACONFD/INC
          INC       NHIMASFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATMA1FD/INC
          INC       PATNIDFD/INC
          INC       PMSPX2FD/INC
          INC       PMSQPTFD/INC
          INC       WEBSECFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
BOXOPT    FORM      2
CATEGORY  DIM       2
CISMFLAG  FORM      1
CLREASON  DIM       3             * Closure reason (Cat LL)
CODE      DIM       2             * for PATCODKY
COMPREAS  DIM       3             * completion reason code
CURRDATE  DIM       8             * current date (ccyymmdd)
CUTOFFDT  DIM       8             * cut off date (ccyymmdd)
HLTHCOND  DIM       9             * default health condition code
IBAMFLAG  FORM      1
LINKFLAG  FORM      1             * other linked episode flag
.                                    0 = No other linked active episodes, so
.                                        referral-in can be closed
.                                    1 = Other linked active episodes, so
.                                        referral-in cannot be closed, only
.                                        the current episode
MESSAGID  DIM       20
NMPNUMB   DIM       20
PMIDTFLG  FORM      1             * PMI Details flag
.                                    0 = PMI details found
.                                    1 = Error finding PMI details
PROGCODE  DIM       6
PROGDESC  DIM       47
PROGTYPE  FORM      2             * VINAH Program Type
.                                    1 = HARP
.                                    2 = HBPCCT
.                                    3 = MH
.                                    4 = PC
.                                    5 = PAC
.                                    6 = RIR
.                                    7 = SACS
.                                    8 = SOP
.                                    9 = TCP
.                                   10 = HCP
.                                   11 = TPN
.                                   12 = HBD
.                                   13 = VALP
RECCOUNT  FORM      10            * total record count
REFLFLAG  FORM      1             * Referral Flag
.                                    0 = Referral-In record being processed
.                                    1 = Episode record being processed
SAVKEY8E  DIM       8             * saved episode visit number
SAVKEY8R  DIM       8             * saved referral-in visit number
SAVKEY17  DIM       17            * saved key for episode being processed
SAVSECTN  DIM       1             * saved section flag
SECTNCNT  FORM      10            * section count
TRIGFLAG  FORM      1             * audit trigger flag
.                                    0 = trigger audit record
.                                    0 = don't trigger audit record
VISITNUM  DIM       8             * visit number
.
.
. PROGRAM CONSTANTS
. -----------------
CATCG     INIT      "CG"
CATZG     INIT      "zG"
CLOSCMNT  INIT      "Closed for transition to EPIC"
LOWCASEL  INIT      "l"
PIPE      INIT      "|"
PRGDES01  INIT      "Hospital Admission Risk Program                "
PRGDES02  INIT      "Hospital Based Palliative Care Consultancy Team"
PRGDES03  INIT      "Medi-Hotel                                     "
PRGDES04  INIT      "Palliative Care                                "
PRGDES05  INIT      "Post Acute Care                                "
PRGDES06  INIT      "Residential In-Reach                           "
PRGDES07  INIT      "Sub-acute Ambulatory Care Services             "
PRGDES08  INIT      "Specialist Clinics (Outpatients)               "
PRGDES09  INIT      "Transition Care Program                        "
PRGDES10  INIT      "Home Enteral Nutrition                         "
PRGDES11  INIT      "Total Parenteral Nutrition                     "
PRGDES12  INIT      "Home Based Dialysis                            "
PRGDES13  INIT      "Victorian Artificial Limb Program              "
PROCCOD1  INIT      "HARP  "
PROCCOD2  INIT      "HBPCCT"
PROCCOD3  INIT      "MH    "
PROCCOD4  INIT      "PC    "
PROCCOD5  INIT      "PAC   "
PROCCOD6  INIT      "RIR   "
PROCCOD7  INIT      "SACS  "
PROCCOD8  INIT      "SOP   "
PROCCOD9  INIT      "TCP   "
PROCCD10  INIT      "HEN   "
PROCCD11  INIT      "TPN   "
PROCCD12  INIT      "HBD   "
PROCCD13  INIT      "VALP  "
REPDESC1  INIT      " - Report Only      "
REPDESC2  INIT      " - Report and Fixit "
TILDA42   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
.
.
PRGID     INIT      "VINAHOLD"
PRGNAM    INIT      "Close Old Referrals"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with fixit
.
MAIN1000  CALL      DBOX0000
          BRANCH    EXIT,MAIN0100          * nothing entered
.
MAIN2000  CALL      GDAT0000               * get cut off date
          BRANCH    EXIT,MAIN1000          * nothing entered
.
MAIN3000  CALL      GCLO0000               * get episode closure reason code
          BRANCH    EXIT,MAIN2000:         * nothing entered
                         MAIN0100          * exitchar entered
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:        * yes
                          MAIN3000:        * no
                          MAIN0100         * cancel
.
MAIN5000  CALL      PROC0000               * process
          GOTO      MAIN0100
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"allrefaf";
          OPEN      ALLREFA1,"allrefaf"
          OPEN      ALLREFA3,"allrefaf"
.
          DISPLAY   *P64:24,"allaudre";
          OPEN      ALLAUDRE,"allaudre"
.
          DISPLAY   *P64:24,"alleaudf";
          OPEN      ALLAUDA1,"allaudaf"
.
          DISPLAY   *P64:24,"alldiaaf";
          OPEN      ALLDIAA1,"alldiaaf"
.
          DISPLAY   *P64:24,"allencaf";
          OPEN      ALLENCA6,"allencaf"
.
          DISPLAY   *P64:24,"allhdtaf";
          OPEN      ALLHDTA7,"allhdtaf"
.
          DISPLAY   *P64:24,"alllnkaf";
          OPEN      ALLLNKA3,"alllnkaf"
.
          DISPLAY   *P64:24,"allrhlaf";
          OPEN      ALLRHLA1,"allrhlaf"
.
          DISPLAY   *P64:24,"allrlnaf";
          OPEN      ALLRLNA1,"allrlnaf"
          OPEN      ALLRLNA2,"allrlnaf"
.
          DISPLAY   *P64:24,"allstsdf";
          OPEN      ALLSTSA1,"allstsaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,HUND06;*225,ALCNDEVP  * use event program for VINAH
.
          MOVE      ONE,CNEWDS
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run fixit                               *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION  1 = Report Only                                     *
.*                       2 = Report and Fixit                                *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Report Only":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Report and Fixit"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run report only
                            OPTN9000             * run report and fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  LOAD      CPHDROPT,COPTION,REPDESC1,REPDESC2
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               GCLO0000              Called by: MAIN0000   *
.*                  Get the reason for closure                               *
.* Returns:  EXIT  0 = Ok to continue                                        *
.*                 1 = Nothing entered                                       *
.*           CLREASON - Closure Reason (Cat LL)                              *
.*****************************************************************************
.
GCLO0000  MOVE      TEN3,EVERT
          MOVE      TWENTY1,ECOL
          PACK      CODE,ANSL,ANSL
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
.
GCLO1000  DISPLAY   *P1:13,*EF,"Closure Reason    :"
          CALL      PATCODKY
          BRANCH    EXIT,GCLO9100:               * nothing input
                         GCLO9200:               * exitchar input
                         GCLO9100                * spaces input
.
          MATCH     ANSI,PTCOACTV
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Code is not active.  ";
            CALL      HITENTER
            GOTO      GCLO1000
          ENDIF
.
          DISPLAY   *P30:13,TDESC
          MOVE      ACODE,CLREASON
          MOVE      ZERO,EXIT
          GOTO      GCLO9999
.
GCLO9100  MOVE      ONE,EXIT
          GOTO      GCLO9999
.
GCLO9200  MOVE      ONE,EXIT
.
GCLO9999  RETURN
+
.****************************************************************************
.*                             GDAT0000                Called by: MAIN0000  *
.*                       Get the cut-off date                               *
.* Returns: CUTOFFDT - cut-off date (ccyymmdd)                              *
.*          CURRDATE - Current Date (ccyymmdd)                              *
.****************************************************************************
.
GDAT0000  DISPLAY   *P1:12,*EF,"Cut-Off Date      :"
          MOVE      ONE,CCENTRY
          MOVE      TEN2,CVERT
          MOVE      TWENTY1,CCOL
          MOVE      ONE,CCANLDTE
.
          CALL      IBACLOCK                     * load current date
.
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          UNPACK    SP8,CCENT,CYEAR,CMON,CDAY
.
GDAT0500  CALL      KEYDATE
          BRANCH    OVRCD,GDAT9100
          PACK      CUTOFFDT,CCENT,CYEAR,CMON,CDAY
.
          MATCH     CURRDATE,CUTOFFDT            * date in past ?
          GOTO      GDAT9000 IF LESS             * yes
.
          DISPLAY   *P1:24,*EL,*B,"Cut-Off date not prior to current date.  ";
          CALL      HITENTER
          GOTO      GDAT0500
.
GDAT9000  MOVE      ZERO,EXIT
          GOTO      GDAT9999
.
GDAT9100  MOVE      ONE,EXIT
.
GDAT9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.* Requires: CURRDATE - Current date (ccyymmdd)                              *
.*****************************************************************************
.
PROC0000  MOVE      ZERO,CPAGENO                 * set report variables
          MOVE      ONE,CNOUNDLN
          CALL      IBACLOCK
          MOVE      ZERO,SAVSECTN                * set for waiting section
.
          CALL      HEAD0000
.
          MOVE      ZERO,RECCOUNT                * initialise total record count
          MOVE      ZERO,SECTNCNT                * initialise section count
          DISPLAY   *P1:24,*EL,"Processing:";
.
          CALL      GPCR0000                     * get program completion reas.
          IF        EXIT = 1
            DISPLAY   *P1:24,*EL,*B,"Program Completion Reason code not found.":
                      "  ";
            CALL      HITENTER
            PRINT     *1,"Program Completion Reason code not found"
            GOTO      PROC9000
          ENDIF
.
          CALL      GHCO0000                     * get default health condition
          IF        EXIT = 1
            DISPLAY   *P1:24,*EL,*B,"Health Condition code not found.":
                      "  ";
            CALL      HITENTER
            PRINT     *1,"Health Condition code not found"
            GOTO      PROC9000
          ENDIF
.
.         Loop through the active referrals for a department looking for
.         episode referrals including both "Waiting" and "Active" referrals.
.
          PACK      KEY17,ZERO,SP30              * report only
          CALL      RSALREF3                     * position before dept code
PROC0500  CALL      RKALREF3                     * read next record
          BRANCH    OVRCD,PROC9000               * eof - finished
.
          MATCH     "0",ALRESTAT                 * waiting status ?
          GOTO      PROC1000 IF EQUAL            * yes - ok to continue
.
          MATCH     "1",ALRESTAT                 * active status still ?
          GOTO      PROC9000 IF NOT EQUAL        * no - finished
.
PROC1000  DISPLAY   *P13:24,*EL,*V2LON,ALREVISN;
.
.         Make sure the referral-in received date is less than the cut off
.         date.  If the referral-in received date is blank, then use the
.         referral date.
.
          MATCH     SP8,ALREDREC                 * blank date ?
          IF        @EQUAL
            MATCH     CUTOFFDT,ALRERDAT          * date ok ?
            GOTO      PROC0500 IF NOT LESS       * no - ignore
          ELSE
            MATCH     CUTOFFDT,ALREDREC          * date ok ?
            GOTO      PROC0500 IF NOT LESS       * no - ignore
          ENDIF
.
.         Check if this is an episode referral
.
          MATCH     "1",ALREUYN4                 * referral in record ?
          GOTO      PROC0500 IF EQUAL            * yes - ignore
.
.         We have an episode, so make sure it's a VINAH related episode.
.         First check using Cat zG, otherwise default back to Cat CG
.         (which we know already is a valid VINAH department).
.
          CALL      CVIN0000                     * matching program type ?
          BRANCH    EXIT,PROC0500                * no - ignore episode
.
.         Now make sure that the episode is linked to a referral-in
.         which is also active
.
          PACK      KEY16,ALREVISN,SP20
          CALL      RSALRLN2                     * position before episode
          CALL      RKALRLN2                     * read next record
          BRANCH    OVRCD,PROC0500               * eof - ignore episode
.
          MATCH     ALREVISN,ALRLLNKV            * same episode still ?
          GOTO      PROC0500 IF NOT EQUAL        * no - ignore episode
.
          MOVE      ALRLVISN,SAVKEY8R            * save referral in key
          MOVE      ALREVISN,SAVKEY8E            * save current episode key
          PACK      SAVKEY17,ALRESTAT,ALRERDAT,ALREVISN
.
          MOVE      ALRLVISN,KEY8
          CALL      RDALREF1                     * referral in found ?
          BRANCH    OVRCD,PROC0500               * no - ignore episode
.
.         The referral-in can have a status of "Waiting" or "Active"
.         regardless of which option is being run
.
          MATCH     "1",ALRESTAT                 * active status ?
          IF        !@EQUAL
            MATCH     "0",ALRESTAT               * no - waiting status ?
            GOTO      PROC0500 IF NOT EQUAL      * no - ignore episode
          ENDIF
.
.         Check if the referral-in is linked to other waiting or active episodes
.
          CALL      CLIN0000
.
.         We have found an old episode referral for reporting/closing.
.         Reposition back on the original episode (and lock the record if
.         we are running option 2) before reporting.
.
          MOVE      SAVKEY17,KEY17
          IF        COPTION = 1
            CALL      RDALREF3                   * record on file ?
          ELSE
            CALL      RLALREF3                   * record on file and locked ?
          ENDIF
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to reposition on ":
                      "episode referral ",*V2LON,SAVKEY8E;
            CALL      HITENTER
            PRINT     *1,"Unable to reposition on episode referral ":
                      SAVKEY8E
            GOTO      PROC9000
          ENDIF
          IF        OVRCD = 2
            DISPLAY   *P1:24,*EL,*B,"Unable to lock episode referral ":
                      *V2LON,SAVKEY8E;
            PRINT     *1,"Unable to lock episode referral ",SAVKEY8E
            GOTO      PROC0500
          ENDIF
.
.         Check if we have changed report sections (from "waiting" to
.         "active")
.
PROC5500  MATCH     SAVSECTN,ALRESTAT            * same section still ?
          GOTO      PROC6000 IF EQUAL            * yes
.
          IF        SECTNCNT > 0
            CALL      LINE0000
          ENDIF
.
          PRINT     *N,*1,"Total Waiting Records: ",SECTNCNT
          MOVE      ALRESTAT,SAVSECTN            * no - save new section
          CALL      HEAD0000                     * print new page/header
          MOVE      ZERO,SECTNCNT                * reset section count
.
PROC6000  ADD       ONE,RECCOUNT                 * increment total record count
          ADD       ONE,SECTNCNT                 * increment section count
.
          CALL      DISP0000                     * print episode details
          BRANCH    PMIDTFLG,PROC0500            * error on patient find
.
          IF        COPTION = 2
            CALL      CLSE0000                   * close the episode record
.
            CALL      CLSR0000                   * close the program ref. record
.
            CALL      CHCO0000                   * check for Health Condition
.
            MOVE      SAVKEY17,KEY17
            CALL      RSALREF3                   * reposition after update
          ENDIF
.
          GOTO      PROC0500                     * get next episode
.
PROC9000  DISPLAY   *P1:23,*EF,"Processing completed.":
                    *P1:24,*V2LON,RECCOUNT,*HOFF," records processed.  ";
          CALL      HITENTER
.
          CALL      LINE0000
          PRINT     *N,*1,"Total Active Records  : ",SECTNCNT:
                    *N,*1,"Grand Total of Records: ",RECCOUNT,*N,*N:
                    *1,"*** End of Report ***"
          GOTO      PROC9999
.
PROC9999  RETURN
+
.*****************************************************************************
.*                               CLIN0000              Called by: PROC0000   *
.*             Check if other linked episodes are active or not.             *
.* We can only close a referral-in if all the linked episodes are closed.    *
.* Requires: SAVKEY8R - Visit number for Referral-In that is linked to the   *
.*                      Current Episode                                      *
.* Returns:  LINKFLAG  0 = close both episode and referral-in                *
.*                     1 = only close current episode (1 or more of the      *
.*                         other linked referrals are active or waiting)     *
.*****************************************************************************
.
.         Loop through all the linked episodes to the Referral-In and see if
.         any are active (besides the current episode we are processing)
.
CLIN0000  PACK      KEY16,SAVKEY8R,SP20
          CALL      RSALRLN1                     * position before referral in
CLIN0500  CALL      RKALRLN1                     * read next record
          BRANCH    OVRCD,CLIN9000               * eof - ok to continue
.
          MATCH     SAVKEY8R,ALRLVISN            * same referral in still ?
          GOTO      CLIN9000 IF NOT EQUAL        * no - ok to continue
.
          MATCH     SAVKEY8E,ALRLLNKV            * current episode ?
          GOTO      CLIN0500 IF EQUAL            * yes - ignore episode
.
          MOVE      ALRLLNKV,KEY8
          CALL      RDALREF1                     * referral on file ?
          BRANCH    OVRCD,CLIN0500               * ino - ignore record
.
          MATCH     "0",ALRESTAT                 * "waiting" referral ?
          GOTO      CLIN9100 IF EQUAL            * yes - finished
.
          MATCH     "1",ALRESTAT                 * "active" referral ?
          GOTO      CLIN9100 IF EQUAL            * yes - finished
.
          GOTO      CLIN0500                     * get next record
.
CLIN9000  MOVE      ZERO,LINKFLAG
          GOTO      CLIN9999
.
CLIN9100  MOVE      ONE,LINKFLAG
.
CLIN9999  RETURN
+
.*****************************************************************************
.*                               GPCR0000              Called by: PROC0000   *
.*         Get the default Program Completion Reason (HDP Default = "35")    *
.* Returns:  COMPREAS  - Program Completion Reason code (Cat lG)             *
.*           EXIT  0 = reason code found                                     *
.*                 1 = no reason code found                                  *
.*****************************************************************************
.
GPCR0000  PACK      KEY5,LOWCASEL,ANSG,SP5
          CALL      RDSCODE1                     * position before category
GPCR0500  CALL      RDKCODE1                     * read next record
          BRANCH    OVRCD,GPCR9100               * eof - default not found
.
          MATCH     "lG",TCODE                   * category lG still ?
          GOTO      GPCR9100 IF NOT EQUAL        * no - default not found
.
          MATCH     "35  ",THCSCOD               * "35" default found ?
          GOTO      GPCR0500 IF NOT EQUAL        * no - get next record
.
          MATCH     "I",PTCOACTV                 * code active ?
          GOTO      GPCR0500 IF EQUAL            * no - get next record
.
          MOVE      ACODE,COMPREAS               * save code
.
          MOVE      ZERO,EXIT
          GOTO      GPCR9999
.
GPCR9100  MOVE      ONE,EXIT
.
GPCR9999  RETURN
+
.*****************************************************************************
.*                               GHCO0000              Called by: PROC0000   *
.*         Get the default Health Condition Code (HDP Default = "9998")      *
.* Returns:  HLTHCOND  - Health Condition code (alldiaaf)                    *
.*           EXIT  0 = health condition code found                           *
.*                 1 = no health condition code found                        *
.*****************************************************************************
.
GHCO0000  BRANCH    PROGTYPE,GHCO0100:           * HARP
                             GHCO0100:           * HBPCCT
                             GHCO0100:           * MH
                             GHCO0100:           * PC
                             GHCO0100:           * PAC
                             GHCO0100:           * RIR
                             GHCO0100:           * SACS
                             GHCO9000:           * SOP - excluded
                             GHCO0100:           * TCP
                             GHCO0100:           * HEN
                             GHCO0100:           * TPN
                             GHCO0100:           * HBD
                             GHCO0100            * VALP
.
GHCO0100  MOVE      SP20,KEY12
          CALL      RSALDIA1                     * position at start of file
GHCO0500  CALL      RKALDIA1                     * read next record
          BRANCH    OVRCD,GHCO9100               * eof - default not found
.
          MATCH     "9998",ALDIMHDP              * "9998" default found ?
          GOTO      GHCO0500 IF NOT EQUAL        * no - get next record
.
          MATCH     "1",ALDIACTV                 * code active ?
          GOTO      GHCO0500 IF NOT EQUAL        * no - get next record
.
          MOVE      ALDIDIAG,HLTHCOND            * save code
.
GHCO9000  MOVE      ZERO,EXIT
          GOTO      GPCR9999
.
GHCO9100  MOVE      ONE,EXIT
.
GHCO9999  RETURN
+
.****************************************************************************
.*                            DISP0000                 Called by: PROC0000  *
.*                  Valid record found so print it                          *
.* Requires: Valid read on allrefaf record                                  *
.* Returns:  CLNO - line count for current page                             *
.*           PMIDTFLG - PMI Details flag                                    *
.*                 0 = patient details found                                *
.*                 1 = Error finding patient details                        *
.****************************************************************************
.
.         We need the patient details for the report and for any
.         generated HL7 messages
.
DISP0000  CALL      CLPATMAS
          MOVE      "No patma1af record  ",PSNAME
          MOVE      SP30,PGNAME
          MOVE      ALREURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,DISP1000
.
          MOVE      ALREURNO,KEY8
          CALL      RDPMPX21
          IF        OVRCD = 1
            MOVE      "No pmspx2af record  ",PGNAME
          ENDIF
.
DISP1000  MOVE      OVRCD,PMIDTFLG               * load PMI details flag
.
          MOVE      SP10,KEY10
          MATCH     SP8,ALREREXP
          IF        !@EQUAL
            UNPACK    ALREREXP,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,KEY10
          ENDIF
.
          UNPACK    ALREDREC,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          PRINT     *1,PIPE,*3,ALRECTYP,*10,PIPE,*12,ALREURNO,*21,PIPE:
                    *23,PSNAME,*44,PIPE,*46,PGNAME,*72,PIPE:
                    *74,SAVKEY8E,*83,PIPE,*85,SAVKEY8R,*94,PIPE,*96,CPCDATE:
                    *110,PIPE,*112,KEY10,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
.
DISP9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PROC0000  *
.*                       Print page heading                                 *
.* Returns:  CLNO - initialised line count for new page                     *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          UNPACK    CUTOFFDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          PRINT     *40,"Cut-Off Date    : ",CPCDATE,*N
.
          MATCH     "0",SAVSECTN
          IF        @EQUAL
            PRINT     *1,"Waiting Records Section"
          ELSE
            PRINT     *1,"Active Records Section"
          ENDIF
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Clinic",*10,PIPE,*12,"UR",*21,PIPE:
                    *23,"Surname",*44,PIPE,*46,"Given Name",*72,PIPE:
                    *74,"Episode",*83,PIPE,*85,"Program",*94,PIPE:
                    *96,"Referral In",*110,PIPE,*112,"Referral",*132,PIPE,*N:
                    *1,PIPE,*3,"Type",*10,PIPE,*12,"Number",*21,PIPE:
                    *44,PIPE,*72,PIPE,*74,"Visit",*83,PIPE,*85,"Visit":
                    *94,PIPE,*96,"Received Date",*110,PIPE,*112,"Expiry Date":
                    *132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      NINE,CLNO                    * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: PROC0000  *
.*                      Draw line across page                     HEAD0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.****************************************************************************
.*                            DBOX0000                 Called by: MAIN0000  *
.*                      Draw box for  program type selection                *
.* Returns: EXIT   0 = option selected                                      *
.*                 1 = exit selected                                        *
.*          PROGTYPE - VINAH Program Type                                   *
.*                      1 = HARP                                            *
.*                      2 = HBPCCT                                          *
.*                      3 = MH                                              *
.*                      4 = PC                                              *
.*                      5 = PAC                                             *
.*                      6 = RIR                                             *
.*                      7 = SACS                                            *
.*                      8 = SOP                                             *
.*                      9 = TCP                                             *
.*                     10 = HEN                                             *
.*                     11 = TPN                                             *
.*                     12 = HBD                                             *
.*                     13 = VALP                                            *
.****************************************************************************
.
DBOX0000  DISPLAY   *P1:10,*EF,"VINAH Program Type:"
.
          MOVE      ONE,BOXOPT
          MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
.
          BOX       1,27,6,52,24                  * draw box
          BOXCLR    28,7,51,23                    * clear box
          HLINE     *G37,8,28,51
          HLINE     *G37,22,28,51
.
          DISPLAY   *P29:7,*V2LON,"Program Type Selection",*HOFF:
                    *P29:9,*HON,SP1,ONE,*HOFF,*P33:9,"HARP":
                    *P29:10,*V2LON,SP1,TWO,*HOFF,*P33:10,"HBPCCT":
                    *P29:11,*V2LON,SP1,THREE,*HOFF,*P33:11,"MH":
                    *P29:12,*V2LON,SP1,FOUR,*HOFF,*P33:12,"PC":
                    *P29:13,*V2LON,SP1,FIVE,*HOFF,*P33:13,"PAC":
                    *P29:14,*V2LON,SP1,SIX,*HOFF,*P33:14,"RIR":
                    *P29:15,*V2LON,SP1,SEVEN,*HOFF,*P33:15,"SACS":
                    *P29:16,*V2LON,SP1,EIGHT,*HOFF,*P33:16,"SOP":
                    *P29:17,*V2LON,SP1,NINE,*HOFF,*P33:17,"TCP":
                    *P29:18,*V2LON,TEN,*HOFF,*P33:18,"HEN":
                    *P29:19,*V2LON,TEN1,*HOFF,*P33:19,"TPN":
                    *P29:20,*V2LON,TEN2,*HOFF,*P33:20,"HBD":
                    *P29:21,*V2LON,TEN3,*HOFF,*P33:21,"VALP"
.
          DISPLAY   *P29:23,"e",*V2LON,ANSX,*HOFF,"it"
.
.         Keyin in option selection
.
DBOX1000  KEYIN     *P34:23,*EOFF,D2
.
          PACK      D2,D2,SP70
          REP       UPPLOW,D2
          SQUEEZE   D2
          TYPE      D2                          * numeric input ?
          GOTO      DBOX6000 IF EQUAL            * yes
.
          GOTO      DBOX7000 IF DOWN             * down arrow
          GOTO      DBOX8000 IF UP               * up arrow
          GOTO      DBOX1000 IF LEFT             * left arrow
          GOTO      DBOX1000 IF RIGHT            * right arrow
.
          MATCH     ANSX,D2                      * exit selected ?
          GOTO      DBOX9500 IF EQUAL            * yes
.
          MATCH     SP1,D2                       * enter pressed on selection ?
          GOTO      DBOX9000 IF EQUAL            * yes
          GOTO      DBOX9000 IF EOS              * yes
.
          BEEP                                   * invalid
          GOTO      DBOX1000
.
.         A number was input so set the option
.
DBOX6000  MOVE      D2,BOXOPT
.
.         Validate number selected is ok
.
          IF        (BOXOPT < 1 | BOXOPT > 13)
            GOTO      DBOX1000                   * invalid selection
          ENDIF
          GOTO      DBOX9000
.
.         Down arrow selected
.
DBOX7000  COMPARE   TEN3,BOXOPT                  * ok to go down one option ?
          GOTO      DBOX1000 IF NOT LESS         * no
.
          ASSIGN    (BOXOPT+8),CVERT          * yes - redisplay current item
          DISPLAY   *P29:CVERT,*V2LON,BOXOPT
          ADD       ONE,BOXOPT                   * increment option
          ASSIGN    (BOXOPT+8),CVERT
          DISPLAY   *P29:CVERT,*HON,BOXOPT       * display new option
          GOTO      DBOX1000
.
.         Up arrow selected
.
DBOX8000  COMPARE   TWO,BOXOPT                   * ok to go up one option
          GOTO      DBOX1000 IF LESS             * no
.
          ASSIGN    (BOXOPT+8),CVERT          * yes - redisplay current item
          DISPLAY   *P29:CVERT,*V2LON,BOXOPT
          SUB       ONE,BOXOPT                   * increment option
          ASSIGN    (BOXOPT+8),CVERT
          DISPLAY   *P29:CVERT,*HON,BOXOPT       * display new option
          GOTO      DBOX1000
.
.         Valid option selected, so assign the correct coption value
.
DBOX9000  MOVE      BOXOPT,PROGTYPE
          LOAD      PROGCODE,PROGTYPE,PROCCOD1:
                                      PROCCOD2:
                                      PROCCOD3:
                                      PROCCOD4:
                                      PROCCOD5:
                                      PROCCOD6:
                                      PROCCOD7:
                                      PROCCOD8:
                                      PROCCOD9:
                                      PROCCD10:
                                      PROCCD11:
                                      PROCCD12:
                                      PROCCD13
          MOVE      ZERO,EXIT
          CALL      PUTSCR00                     * restore screen
          LOAD      PROGDESC,PROGTYPE,PRGDES01:
                                      PRGDES02:
                                      PRGDES03:
                                      PRGDES04:
                                      PRGDES05:
                                      PRGDES06:
                                      PRGDES07:
                                      PRGDES08:
                                      PRGDES09:
                                      PRGDES10:
                                      PRGDES11:
                                      PRGDES12:
                                      PRGDES13
          DISPLAY   *P21:10,*V2LON,PROGCODE,*HOFF,*P30:10,PROGDESC
          GOTO      DBOX9999
.
DBOX9500  MOVE      ONE,EXIT                     * exit selected
          CALL      FRESCR00
          GOTO      DBOX9999
.
DBOX9999  RETURN
+
.*****************************************************************************
.*                                CVIN0000         Called by: PROC0000       *
.*        Check if this is a VINAH referral using Cat CG or zG and if it     *
.*        matches the program type selected.                                 *
.* Requires: Read of ALCNDEVP parameter                                      *
.*           Valid read of episode referral record                           *
.* Returns:  EXIT    0 = Ok to continue                                      *
.*                   1 = Not a VINAH referral                                *
.*****************************************************************************
.
CVIN0000  MATCH     "1",ALCNDEVP                 * using Cat zG ?
          GOTO      CVIN0500 IF NOT EQUAL        * no - use Cat CG
.
          MATCH     SP3,ALREEVPR                 * blank event program ?
          GOTO      CVIN0500 IF EQUAL            * yes - use Cat CG
.
          MOVE      CATZG,CATEGORY               * no - use Cat zG
          PACK      KEY5,CATEGORY,ALREEVPR
          GOTO      CVIN1000
.
CVIN0500  MOVE      CATCG,CATEGORY               * use Cat CG
          PACK      KEY5,CATEGORY,ALREDEPT
CVIN1000  CALL      RDCODE1                      * event program code on file ?
          BRANCH    OVRCD,CVIN1500               * no
.
          MATCH     SP1,TCINDC8                  * indicator 8 populated ?
          GOTO      CVIN1500 IF EQUAL            * no
.
          MOVE      TCINDC8,ANS
          TYPE      ANS                          * indicator 8 numeric ?
          GOTO      CVIN1500 IF EQUAL            * yes
.
          MATCH     "E",ANS
          IF        @EQUAL
            MOVE      "10",FORM2                 * HEN
            GOTO      CVIN2000
          ENDIF
.
          MATCH     "L",ANS
          IF        @EQUAL
            MOVE      "11",FORM2                 * TPN
            GOTO      CVIN2000
          ENDIF
.
          MATCH     "D",ANS
          IF        @EQUAL
            MOVE      "12",FORM2                 * HBD
            GOTO      CVIN2000
          ENDIF
.
          MATCH     "V",ANS
          IF        @EQUAL
            MOVE      "13",FORM2                 * VALP
            GOTO      CVIN2000
          ENDIF
.
          MOVE      ZERO,FORM2
          REP       "A5H2S7O8M3P4R6T9I1",ANS
          MOVE      ANS,FORM2
          COMPARE   ZERO,FORM2                   * valid VINAH program type ?
          GOTO      CVIN2000 IF NOT EQUAL        * yes
.
CVIN1500  MATCH     "zG",CATEGORY                * tried Cat zG ?
          GOTO      CVIN0500 IF EQUAL            * yes - now try Cat CG
.
          GOTO      CVIN9100                     * not a VINAH referral
.
CVIN2000  COMPARE   FORM2,PROGTYPE             * same program type as selected ?
          GOTO      CVIN9100 IF NOT EQUAL        * no - ignore record
.
CVIN9000  MOVE      ZERO,EXIT
          GOTO      CVIN9999
.
CVIN9100  MOVE      ONE,EXIT
.
CVIN9999  RETURN
+
.*****************************************************************************
.*                               CLSE0000          Called by: PROC0000       *
.*                Process the closing of an inactive episode referral        *
.* Requires: Valid read of allrefaf record                                   *
.*           Valid read of PMI records                                       *
.*           CLREASON - Episode Closure Reason (Cat LL)                      *
.*****************************************************************************
.
.         We need to see if DHS have this record as accepted and open
.
CLSE0000  MOVE      ONE,REFLFLAG                 * set flag for episode
          MOVE      SAVKEY8E,VISITNUM
          CALL      AUDR0000                     * audit record required ?
          BRANCH    TRIGFLAG,CLSE1000            * no
.
.         Write a before audit record (allaudre)
.
          MOVE      TWO,AUDTTYPE
          CALL      WAALRE00
.
.         Update the relevant fields for closing the episode
.         and update the record
.
CLSE1000  MOVE      "2",ALRESTAT                 * set status to closed
          CALL      IBACLOCK
          MOVE      CLREASON,ALRERCLO            * set close related fields
          MOVE      COMPREAS,ALREUC33
          PACK      ALREDCLO,CCC,CYY,CMM,CDD
          REP       " 0",ALREDCLO
          MOVE      CTIMEIS,ALRETCLO
          MOVE      "iba       ",ALREUCLO
          PACK      ALREUDAT,CCC,CYY,CMM,CDD     * set update related fields
          REP       " 0",ALREUDAT
          MOVE      CTIMEIS,ALREUTIM
          MOVE      "iba       ",ALREUUID
          CALL      UPALREF3
          CALL      UUALREF3
.
.         Broadcast an update referral HL7 message (REF^I13) if required
.
          CALL      PMIGTNID                     * get national id for HL7
          MOVE      NMPNUMB,PTNINMPI
.
          MOVE      ONE,HL7TRGID
          MOVE      SP8,HL7INCLD
          CALL      DGCLII13
.
          BRANCH    TRIGFLAG,CLSE2000            * no audit required
.
.         Write an after audit record (allaudre)
.
          MOVE      THREE,AUDTTYPE
          CALL      WAALRE00
.
.         Write a referral history record (allstsaf)
.
CLSE2000  MOVE      ALREDCLO,ALSTSDAT
          CALL      WSTS0000
.
.         Write a record to the referral audit table (allaudaf)
.
          CALL      WAUD0000
.
CLSE9999  RETURN
+
.*****************************************************************************
.*                               CLSR0000          Called by: PROC0000       *
.*                Process the closing of an inactive referral-in             *
.* Requires: Valid read of allrefaf record                                   *
.*           Valid read of PMI records                                       *
.*           CLREASON - Episode Closure Reason (Cat LL)                      *
.*           SAVKEY8R - Referral-In visit number                             *
.*           LINKFLAG - referral closing flag                                *
.*                0 = closing both episode and linked referral-in            *
.*                1 = only closing episode referral                          *
.*****************************************************************************
.
CLSR0000  BRANCH    LINKFLAG,CLSR9999            * only closing episode
.
          MOVE      SAVKEY8R,KEY8
          CALL      RLALREF1                     * record on file ?
          BRANCH    OVRCD,CLSR9100:              * no
                          CLSR9200               * yes - already locked
.
.         We need to see if DHS have this record as accepted and open
.
          MOVE      ZERO,REFLFLAG                * set flag for referral-in
          MOVE      SAVKEY8R,VISITNUM
          CALL      AUDR0000                     * audit record required ?
          BRANCH    TRIGFLAG,CLSR1000            * no
.
.         Write a before audit record (allaudre)
.
          MOVE      TWO,AUDTTYPE
          CALL      WAALRE00
.
.         Update the relevant fields for closing the episode
.         and update the record
.
CLSR1000  MOVE      "2",ALRESTAT                 * set status to closed
          CALL      IBACLOCK
          MOVE      CLREASON,ALRERCLO            * set close related fields
          MOVE      COMPREAS,ALREUC33
          PACK      ALREDCLO,CCC,CYY,CMM,CDD
          REP       " 0",ALREDCLO
          MOVE      CTIMEIS,ALRETCLO
          MOVE      "iba       ",ALREUCLO
          PACK      ALREUDAT,CCC,CYY,CMM,CDD
          REP       " 0",ALREUDAT
          MOVE      CTIMEIS,ALREUTIM
          MOVE      "iba       ",ALREUUID
          CALL      UPALREF1
          CALL      UUALREF1
.
.         Broadcast an update referral HL7 message (REF^I13) if required
.
          CALL      PMIGTNID                     * get national id for HL7
          MOVE      NMPNUMB,PTNINMPI
.
          MOVE      TWO,HL7TRGID
          MOVE      SP8,HL7INCLD
          CALL      DGCLII13
.
.         Write an after audit record (allaudre)
.
          BRANCH    TRIGFLAG,CLSR2000            * no audit required
.
          MOVE      THREE,AUDTTYPE
          CALL      WAALRE00
.
.         Write a referral history record (allstsaf)
.
CLSR2000  MOVE      ALREDCLO,ALSTSDAT
          CALL      WSTS0000
.
.         Write a record to the referral audit table (allaudaf)
.
          CALL      WAUD0000
          GOTO      CLSR9999
.
.         Error Handling
.
CLSR9100  PRINT     *1,"Program referral record ",SAVKEY8R," not found"
          GOTO      CLSR9999
.
CLSR9200  PRINT     *1,"Unable to lock program referral ",SAVKEY8R
.
CLSR9999  RETURN
+
.*****************************************************************************
.*                         WAUD0000                Called by: CLSE0000       *
.*          Write a record to the Referral Audit Table        CLSR0000       *
.* Requires: Valid read on allrefaf record                                   *
.*****************************************************************************
.
WAUD0000  MOVE      ALREVISN,ALAUVISN            * load database variables
          PACK      ALAUADAT,CCC,CYY,CMM,CDD
          REP       " 0",ALAUADAT
          MOVE      CTIMEIS,ALAUATIM
          REP       " 0",ALAUATIM
          MOVE      "iba       ",ALAUAUID
.
          MOVE      "C ",ALAUUPDT                * set update type to "close"
          PACK      ALAUCOMM,CLOSCMNT,SP70
          MOVE      SP70,ALAUSPAR
.
          PACK      KEY24,ALAUVISN,ALAUADAT,ALAUATIM
          CALL      RDALAUD1
          IF        OVRCD = 1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRALAUD1                   * write the record
            TRAPCLR   IO
            BRANCH    OVRCD,WAUD9999
          ENDIF
.
WAUD9999  RETURN
+
.*****************************************************************************
.*                            WSTS0000             Called by: CLSE0000       *
.*     Write a record to the Referral Status History Table    CLSR0000       *
.* Requires: Valid read on allrefaf record                                   *
.*****************************************************************************
.
WSTS0000  MOVE      ALREVISN,ALSTVISN            * load database variables
          MOVE      ALRESTAT,ALSTSTAT
          PACK      ALSTCDAT,CCC,CYY,CMM,CDD
          REP       " 0",ALSTCDAT
          MOVE      CTIMEIS,ALSTCTIM
          REP       " 0",ALSTCTIM
          MOVE      "iba       ",ALSTCUID
.
          PACK      KEY17,ALSTVISN,ALSTSTAT,ALSTSDAT
          CALL      RAALSTS1
          IF        OVRCD = 0
            CALL      UPALSTS1                   * update the record
          ELSE
            CALL      WRALSTS1                   * write the record
          ENDIF
.
WSTS9999  RETURN
+
.*****************************************************************************
.*                              AUDR0000           Called by: CLSE0000       *
.*                                                            CLSR0000       *
.*          Check if this referral has been sent to DHS in a VINAH           *
.*          submission where it is currently active and if so, then we       *
.*          need to trigger an audit record so that a subsquent close        *
.*          submission will be made at a later date                          *
.* Requires: VISITNUM - Visit number                                         *
.*           REFLFLAG - Referral Flag                                        *
.*              0 = Referral-In record being processed                       *
.*              1 = Episode record being processed                           *
.* Returns:  TRIGFLAG - audit trigger flag                                   *
.*              0 = trigger an audit record                                  *
.*              1 = no need to trigger an audit record                       *
.*****************************************************************************
.
AUDR0000  PACK      KEY42,TEN,VISITNUM,SP8,TILDA42
          CALL      RSALHDT7                     * pos'n after last accepted vis
AUDR0500  CALL      RPALHDT7                     * read previous visit
          BRANCH    OVRCD,AUDR9100               * eof - finished
.
          MATCH     "10",ALHDSTAT                * same status still ?
          GOTO      AUDR9100 IF NOT EQUAL        * no - finished
.
          MATCH     VISITNUM,ALHDVISN            * same visit still ?
          GOTO      AUDR9100 IF NOT EQUAL        * no - finished
.
          MATCH     SP8,ALHDCONT                 * blank contact still ?
          GOTO      AUDR9100 IF NOT EQUAL        * no - finished
.
.         Given that other record types (eg A04 & A08) may also have
.         the visit number, we need to check that we have the right
.         record type
.
          IF        REFLFLAG = 0
            MATCH     "0",ALHDRTYP               * referral-in record ?
            GOTO      AUDR0500 IF NOT EQUAL      * no - skip record
          ELSE
            MATCH     "1",ALHDRTYP               * episode record ?
            GOTO      AUDR0500 IF NOT EQUAL      * no - skip record
          ENDIF
.
          MOVE      ALHDSTAT,FORM1
          BRANCH    FORM1,AUDR9000:              * active
                          AUDR9100:              * closed
                          AUDR9100:              * inactive (shouldn't happen)
                          AUDR9100:              * cancelled
                          AUDR9100               * rejected
.
AUDR9000  MOVE      ZERO,TRIGFLAG
          GOTO      AUDR9999
.
AUDR9100  MOVE      ONE,TRIGFLAG
.
AUDR9999  RETURN
+
.*****************************************************************************
.*                              CHCO0000           Called by: PROC0000       *
.*       Check if there is a Health Condition and if not, use the default    *
.* Requires: ALREVISN - Episode visit number                                 *
.*           HLTHCOND - Default Health Condition diagnosis code (alldiaaf)   *
.*****************************************************************************
.
CHCO0000  BRANCH    PROGTYPE,CHCO0100:           * HARP
                             CHCO0100:           * HBPCCT
                             CHCO0100:           * MH
                             CHCO0100:           * PC
                             CHCO0100:           * PAC
                             CHCO0100:           * RIR
                             CHCO0100:           * SACS
                             CHCO9999:           * SOP - excluded
                             CHCO0100:           * TCP
                             CHCO0100:           * HEN
                             CHCO0100:           * TPN
                             CHCO0100:           * HBD
                             CHCO0100            * VALP
.
.
CHCO0100  PACK      KEY13,SAVKEY8E,ZERO,ONE,SP20
          CALL      RSALRLN1                     * position before referral
          CALL      RKALRLN1                     * read next record
          BRANCH    OVRCD,CHCO5000               * eof - use default value
.
          MATCH     SAVKEY8E,ALRHVISN            * same episode still ?
          GOTO      CHCO5000 IF NOT EQUAL        * no - use default value
.
          MATCH     "01",ALRHTYPE                * same type still ?
          GOTO      CHCO5000 IF NOT EQUAL        * no - use default value
.
.         A Health Condition code was found for the episode referral,
.         so we don't need to do anything here
.
          GOTO      CHCO9999
.
.         There is no Health Condition on file for this episode referral,
.         so write a record using the default diagnosis
.
CHCO5000  MOVE      SAVKEY8E,ALRHVISN
          MOVE      "01",ALRHTYPE
          MOVE      "  1",ALRHUNIQ
          MOVE      HLTHCOND,ALRHCODE
          PACK      ALRHDATE,CCC,CYY,CMM,CDD
          REP       " 0",ALRHDATE
          MOVE      ALRHDATE,ALRHCDAT
          MOVE      CTIMEIS,ALRHCTIM
          REP       " 0",ALRHCTIM
          MOVE      "iba       ",ALRHCUID
          MOVE      SP9,ALRHCOD2
          MOVE      SP70,ALRHSPAR
.
          PACK      KEY13,ALRHVISN,ALRHTYPE,ALRHUNIQ
          CALL      RAALRHL1
          IF        OVRCD = 1
            CALL      WRALRHL1                   * write new record
          ENDIF
.
CHCO9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       BRHLCOMN
          INC       CLPATMAS
          INC       DGCLII13
          INC       PATCODKY
          INC       PMIGTNID
.
          INC       ALLAUDIO/INC
          INC       ALLDIAIO/INC
          INC       ALLENCIO/INC
          INC       ALLHDTIO/INC
          INC       ALLLNKIO/INC
          INC       ALLQUEIO/INC
          INC       ALLREFIO/INC
          INC       ALLRHLIO/INC
          INC       ALLRLNIO/INC
          INC       ALLSTSIO/INC
          INC       HL7CISIO/INC
          INC       HL7INBIO/INC
          INC       NHIMASIO/INC
          INC       PATCODIO/INC
          INC       PATMA1IO/INC
          INC       PATNIDIO/INC
          INC       PMSPX2IO/INC
          INC       PMSQPTIO/INC
          INC       WEBSECIO/INC
