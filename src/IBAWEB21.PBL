.******************************************************************************
.* System    :   Inpatients, Emergency & Outpatients                          *
.* Program   :   IBAWEB21                                                     *
.* Desc      :   Insurance Council WA Event Extract Transmission              *
.******************************************************************************
.* Date      :   03/10/2023                                                   *
.* Author    :   Bella Turco                                                  *
.* Mods      :                                                                *
.******************************************************************************
.* V12.00.09  18.09.2025  DA Sarkies             TSK 0965799                  *
.*            Changed size of table in PERR0000 and PRHD0000 to add extra line*
.*            and added extra line for hospital & error message               *
.* V12.00.08  16.09.2025  DA Sarkies             TSK 0965799                  *
.*            Move call to function to fill variable, and added extra line    *
.*            for displaying errors                                           *
.* V12.00.07  25.07.2025  DA Sarkies             TSK 0947257                  *
.*            Added the time back into PERR1000                               *
.* V12.00.06  24.07.2025  DA Sarkies             TSK 0947257                  *
.*            Switch the date around in PERR1000                              *
.* V12.00.05  24.07.2025  DA Sarkies             TSK 0963826                  *
.*            Changed Referral source to read transfer source on 00           *
.* V12.00.04  24.07.2025  DA Sarkies             TSK 0947257                  *
.*            Changed hyphen to slash for correct date sent to ICWA           *
.* V12.00.03  22.07.2025  DA Sarkies             TSK 0947257                  *
.*            Changed hyphen to slash for date sent to ICWA                   *
.* V12.00.02  23.06.2025  DA Sarkies             TSK 0947257                  *
.*            Added further columns to the response from ICWA. Updated date   *
.*            ranges for extracts                                             *
.* V12.00.01  15.05.2025  DA Sarkies             TSK 0955096                  *
.*            Updated for Alpha-Numeric Visit Number                          *
.* V11.05.11  18.09.2025  DA Sarkies             TSK 0965799                  *
.*            Changed size of table in PERR0000 and PRHD0000 to add extra line*
.*            and added extra line for hospital & error message               *
.* V11.05.10  16.09.2025  DA Sarkies             TSK 0965799                  *
.*            Move call to function to fill variable, and added extra line    *
.*            for displaying errors                                           *
.* V11.05.09  25.07.2025  DA Sarkies             TSK 0947257                  *
.*            Added the time back into PERR1000                               *
.* V11.05.08  24.07.2025  DA Sarkies             TSK 0947257                  *
.*            Switch the date around                                          *
.* V11.05.07  24.07.2025  DA Sarkies             TSK 0963826                  *
.*            Changed Referral source to read transfer source on 00           *
.* V11.05.06  24.07.2025  DA Sarkies             TSK 0947257                  *
.*            Changed hyphen to slash for correct date sent to ICWA           *
.* V11.05.05  22.07.2025  DA Sarkies             TSK 0947257                  *
.*            Changed hyphen to slash for date sent to ICWA                   *
.* V11.05.04  23.06.2025  DA Sarkies             TSK 0947257                  *
.*            Added further columns to the response from ICWA. Updated date   *
.*            ranges for extracts                                             *
.* V11.05.03  18/03/2025  Bella Turco            TSK 0957751                  *
.*            Added "duplicate record" error msg for import program PROC1000  *
.* V11.05.02  12/03/2025  Bella Turco            TSK 0957751                  *
.*            Added new routine CNTREC00 to count number of records per       *
.*            visit in pmsextaf                                               *
.* V11.05.01  11/03/2025  Bella Turco            TSK 0957751                  *
.*            Added validation in UPCLCD00 to prevent I*U                     *
.* V11.04.10  12/09/2024  Nikitha Bhaskar        TSK 0951220                  *
.*            Added EXCUT000 to add new script for ibaweb21.us3               * 
.* V11.04.09  23/07/2024  Ebon Clements          TSK 0947850                  *
.*            Added report option 4 - Schedule Import Event Data              *
.* V11.04.08  18/07/2024  Ebon Clements          TSK 0949287                  *
.*            Added update of ED visits aaede1af claim code ADACOMP           *
.* V11.04.07  05/07/2024  Bella Turco            TSK 0948670                  *
.*            Added error when importing a Pending status (VALD2000)          *
.* V11.04.06  12/06/2024  Bella Turco            TSK 0947689                  *
.*            Added check in PROX1500 to only extract records with PMEXUYN1=1 *
.* V11.04.05  04/04/2024  Bella Turco            TSK 0914658                  *
.*            Added UPINSU00 routine to auto-update insurance code when MVIT  *
.*            status is Confirmed                                             *
.* V11.04.04  13/03/2024  Ebon Clements          TSK 0914658                  *
.*            Only update the claim code of the last transfer file record     *
.*            UPTRAN00                                                        *
.* V11.04.03  06/03/2024  Bella Turco            TSK 0914658                  *
.*            Update PMEXCLAM with Alternate Election when status is Confirmed*
.*            (UPCLCD00)                                                      *
.*            Fixed business logic in DSTI0000                                *
.*            Use PVIDATE for visit date instead of PMEXVDAT in PROX1500      *
.* V11.04.02  22/02/2024  Thanh T          TSK 0923560                        *
.*            Recompiled as UPLVALDS changes. Moved CURRCENT variablle to     *
.*            UPLVALDW common variables                                       *
.* V11.04.01  05/12/2023  Bella Turco            TSK 0914658                  *
.*            Created ICWA Import Program (PROC0000)                          *
.* V11.03.00  03/10/2023  Bella Turco            TSK 0914658                  *
.*            Created Program                                                 *
.******************************************************************************
.
          INC       STD001FD
.
. File Description Includes
. -------------------------
          INC       AAEDE1FD/INC
          INC       ALLCONFD/INC
          INC       ALLREFFD/INC
          INC       ALLLNKFD/INC
          INC       ALLQUEFD/INC
          INC       ALLENCFD/INC
          INC       IBAPOSFD/INC 
          INC       EMRVISFD/INC
          INC       EMRVCDFD/INC
          INC       EMRICDFD/INC
          INC       EMRSITFD/INC            * Emergency Sites file
          INC       MEHLERFD/INC
          INC       PMSBRQFD/INC
          INC       NHIMASFD/INC
          INC       HL7CISFD/INC
          INC       HL7INBFD/INC
          INC       PMSCCDFD/INC
          INC       PMSCHAFD/INC
          INC       PATCT1FD/INC 
          INC       PATICDFD/INC
          INC       PATCMPFD/INC
          INC       PATECDFD/INC
          INC       PATTRNFD/INC
          INC       PATWR1FD/INC
          INC       PATNIDFD/INC
          INC       PATIN1FD/INC
          INC       PATONLFD/INC
          INC       PATCODFD/INC            * Codes file
          INC       PATCONFD/INC            * Control file
          INC       PATDSCFD/INC            * Discharge file
          INC       PATDADFD/INC            * Transfer Destination file
          INC       PATMI1FD/INC            * Admission file
          INC       PATVADFD/INC            * Transfer Source Code file
          INC       PATRE1FD/INC
          INC       IBACONFD/INC            * Control file
          INC       PATHSPFD/INC            * Hospital File
          INC       OUTRSHFD/INC
          INC       EMRCONFD/INC            * Emergency Control File
          INC       PATMA1FD/INC            * Master File
          INC       PMSVX1FD/INC            * Visit Extension File 
          INC       PMSPX2FD/INC            * PMI Extension File
          INC       PATVISFD/INC            * Visit file
          INC       PMSEXTFD/INC            * Extra Compensable Details File
          INC       PMSTLEFD/INC            * Patient Titles File
          INC       PMSQPTFD/INC
          INC       OUTBOAFD/INC            * Clinic Booking file
          INC       OUTMA1FD/INC
          INC       OUTBB1FD/INC
          INC       OUTSITFD/INC
          INC       OUTCLIFD/INC
          INC       OUTCONFD/INC
          INC       OUTCANFD/INC
          INC       OUTCTYFD/INC
          INC       OUTHEDFD/INC
          INC       OUTSESFD/INC
          INC       WEBCONFD/INC
          INC       WEBSECFD/INC
          INC       UPLVALDW/INC
.
. Extract File 
. -----------------------------------------
. 
TEMP1     FILE       ASCII, FIXED=1791
.
.NAME     TYPE    LENGTH    START   DESCRIPTION
.----     ----    ------    -----   -----------
XUMRN     DIM        8         1  * UMRN (pmsextaf.pmexurno)
XPTTLCOD  DIM        4         9  * Patient Title Code (patma1af.ptitl)
XPTTLDES  DIM       30        13  * Patient Title Desc (pmstleaf.pmtldesc)
XSURNAME  DIM       40        43  * Surname (patma1af.ptmasnam)
XFSTNAME  DIM       40        83  * First Name (pmspx2af.pmpxfnam)
XMIDNAME  DIM       40       123  * Middle Name (pmspx2af.pmpxsnam)
XDOB      DIM       10       163  * Birth Date (patma1af.pbdate)
XSEXCODE  DIM        1       173  * Patient Sex Code (patma1af.psex) 
XSEXDESC  DIM       20       174  * Patient Sex Desc (patcodes.tdesc)
XADDRESS  DIM       70       194  * Address 1 (patma1af.padd1 & patma1af.padd2)
XSUBURB   DIM       35       264  * Suburb (patma1af.psubrb)  
XSTATE    DIM       35       299  * State (patma1af.padd4)
XPOSTCOD  DIM        8       334  * Postcode (patma1af.ppost)
XHOMEPH   DIM       20       342  * Home Phone (patma1af.ptelep) 
XMOBPH    DIM       20       362  * Mobile Phone (patmx1af.ptmxcell) 
XVISTYPE  DIM        2       382  * Visit Type (IP, OP or ED)
XHOSPCOD  DIM        3       384  * Hospital Code (pmsvx1af.pmvxmhos)
XHOSPDES  DIM       50       387  * Hospital Description (pathspaf.pthsname)
XVISITNO  DIM        8       437  * Visit Number (pmsextaf.pmexvisn)
XEDADDAT  DIM       10       445  * ED Event Start Date (emrvisaf.emvidate)
XEDADTIM  DIM        8       455  * ED Event Start Time (emrvisaf.emvitime)
XEDSITCD  DIM        6       463  * EMR Site Code (emrvisaf.emvisite)     
XEDSITDS  DIM       30       469  * EMR Site Desc (emrvisaf.emvisite)
XEDMDARC  DIM        2       499  * Mode of Arrival Code (emrvisaf.emvimode)
XEDMDARD  DIM       30       501  * Mode of Arrival Desc (emrvisaf.emvimode)
XEDPDIAG  DIM      100       531  * ED Discharge Diagnosis (paticddf)
XICDCODE  DIM       10       631  * ED Discharge Diagnosis ICD10 Code 
                                  * (emrvcdaf.emvcmncd)
XICDDESC  DIM       70       641  * ED Discharge Diagnosis ICD10 Desc 
                                  * (emrvcdaf.emvcmncd)
XEDDISDT  DIM       10       711  * ED Discharge Date (emrvisaf.emviddat)
XEDDISTM  DIM        8       721  * ED Discharge Time (emrvisaf.emvidtim)
XEDSTCOD  DIM        2       729  * ED Emergency Discharge Status Code
                                  * (emrvisaf.emvidsta)
XEDSTDES  DIM       50       731  * ED Emergency Discharge Status Desc
                                  * (emrvisaf.emvidsta)
XEDTRCOD  DIM        1       781  * ED Triage Category Code (emrvisaf.emvitrig)
XEDTRDES  DIM       50       782  * ED Triage Category Desc (emrvisaf.emvitrig)
XIPADDAT  DIM       10       832  * IT Event Start Date (patmi1af.adate)
XIPADTIM  DIM        8       842  * IP Event Start Time (patmi1af.atime)
XIPDISDT  DIM       10       850  * IP Discharge Date (patdschf.ddate)
XIPDISTM  DIM        8       860  * IP Discharge Time (patdschf.dtime)
XADMCODE  DIM        3       868  * Admission Type Code (patmi1af.aclss)
XADMDESC  DIM       30       871  * Admission Type Desc (patmi1af.aclss)
XREFCODE  DIM        3       901  * Referral Source Code (patmi1af.asrce)
XREFDESC  DIM       30       904  * Referral Source Desc (patmi1af.asrce)
XTRANCOD  DIM        5       934  * Transfer Source Code (patdadaf.ptdaadts)
XTRANDES  DIM       30       939  * Transfer Source Desc (patvadaf.ptvadesc)
XIPDIAGT  DIM       80       969  * IP Diagnosis (text) (patmi1af.adiag1)
XIPDIAGC  DIM        9      1049  * IP Diagnosis (ICD10) Code 
                                  * (patecdaf.ptedcode)
XIPDIAGD  DIM       70      1058  * IP Diagnosis (ICD10) Desc 
                                  * (patecdaf.ptedcode)
XIPSTCOD  DIM        1      1128  * IP Discharge Status Code (patdschf.ddest)
XIPSTDES  DIM       30      1129  * IP Discharge Status Desc (patdschf.ddest)
XDESTCOD  DIM        6      1159  * Transfer Destination Description Identifier
                                  * (patdadaf.ptdadcts)
XDESTDES  DIM       30      1165  * Transfer Destination Desc 
                                  * (patvadaf.ptvadesc)
XARTRCOD  DIM        3      1195  * Arrival Transport Code (pmsvx1af.pmvxstra)
XARTRDES  DIM       50      1198  * Arrival Transport Desc (pmsvx1af.pmvxstra)
XWARDCOD  DIM        3      1248  * IP Ward Code (pami1af.award)
XWARDDES  DIM       20      1251  * IP Ward Desc (patwr1af.wbdesc)
XBEDCODE  DIM        3      1271  * Bed Type Code (patwr1af.wefrbt)
XBEDDESC  DIM       20      1274  * Bed Type Desc (patwr1af.wefrbt)
XOPSITCD  DIM        6      1294  * OP Site Code (outbokaf.obasite)
XOPSITDS  DIM       30      1300  * OP Site Desc (outbokaf.obasite)
XOPCLCOD  DIM        6      1330  * Clinic Code (outbokaf.obaclin)
XOPCLDES  DIM       30      1336  * Clinic Name (outbokaf.obaclin)
XOPAPTDT  DIM       10      1366  * OP Appointment Date (outbokaf.obadate)
XAPTTYCD  DIM        3      1376  * OP Appointment Type Code 
                                  * (outbokaf.obavisit)
XAPTTYDS  DIM       20      1379  * OP Appointment Type Desc
                                  * (outbokaf.obavisit)
XCLTIECD  DIM        3      1399  * Tier 2 Code (outhedaf.othetcod)
XCLTIEDS  DIM       50      1402  * Tier 2 Code Desc (outhedaf.othetcod)
XCLTYCOD  DIM        6      1452  * Clinic Type Code (outbokaf.obactyp)
XCLTYDES  DIM       30      1458  * Clinic Type Desc (outbokaf.obactyp)
XAPTSTCD  DIM        1      1488  * Appointment Status Code (outbokaf.dobastat)
XAPTSTDS  DIM       20      1489  * Appointment Status Desc (outbokaf.dobastat)
XOUTCODE  DIM        3      1509  * Appointment Outcome Code
                                  * (outbb1af.otbboutc)
XOUTDESC  DIM       30      1512  * Appointment Outcome Desc 
                                  * (outbb1af.otbboutc)
XDELTYCD  DIM        3      1542  * Appointment Delivery Type Code
                                  * (outbb1af.otbbsrvd)
XDELTYDS  DIM       20      1545  * Appointment Delivery Type Desc
                                  * (outbb1af.otbbsrvd)
XACCDATE  DIM       10      1565  * Accident Date (pmsextaf.pmexadat)
XACCTYCD  DIM        3      1575  * Accident Type Code (pmsextaf.pmexmtyp)
XACCTYDS  DIM       50      1578  * Accident Type Desc (pmsextaf.pmexmtyp)
XACCLOCA  DIM       50      1628  * Accident Location (pmsextaf.pmexaloc)
XREFNUMB  DIM       20      1678  * ICWA ID_Claim_Number (pmsextaf.pmexclmn)
XDATSENT  DIM       20      1698  * Date Sent to ICWA (pmsextaf.pmexdat1)
XDATRESP  DIM       20      1718  * Date ICWA Response (pmsextaf.pmexdat2)
XMVASTCD  DIM        3      1738  * MVA Status Code (pmsextaf.pmexcat2)
XMVASTDS  DIM       50      1741  * MVA Status Desc (pmsextaf.pmexcat2)
.
.End of Record              1791 
.
. Import File
.
TEMP2     FILE      HL7, FIXED=182
.
.Name     Type      Length Start Description
.----     ----      ------ ----- -----------
ZIMPURNO  DIM       8      1     * UMRN
ZIMPVIST  DIM       2      9     * Visit Type (IP/OP/ED)
ZIMPVISN  DIM       8      11    * Visit Number
ZIMPHOSP  DIM       50     19    * Hospital Description
ZIMPCLAM  DIM       20     69    * ID Claim Number
ZIMPSENT  DIM       20     89    * Date Sent to ICWA (CCYYMMDD hh:mm:ss)
ZIMPRESP  DIM       20     109   * Date ICWA Response (CCYYMMDD hh:mm:ss)
ZIMPSTAT  DIM       3      129   * Status Code (Cat Vh)
ZIMPSDSC  DIM       50     132   * Status Description
.
.End of Record             182
.
.
. Local Variable Definition 
. -------------------------
.
ICWAEXT   INIT      "icwaext"
CISMFLAG  FORM      1                       * for HL7 messaging
CMDLINE   DIM       100
CURDATE   DIM       8
CFILEPRE  DIM       3                       * site prefix
DIM4      DIM       4
DIM8      DIM       8
DIM100    DIM       100
ENDDTE    DIM       8           * End date for new transmission
ENDDTESL  DIM       10          * Slash formatted end date for new transmission
ERRDESC   DIM       70          * Error description
ERRFND    FORM      1           * 0=No errors 1=Errors found
ERRCOUNT  FORM      8
RECCOUNT  FORM      8
ERRFLAG   FORM      1
ERRSTAT   DIM       5
ERRORMSG  DIM       100
ERRRMSG1  DIM       40
ERRRMSG2  DIM       40
HOSPNAM1  DIM       30
HOSPNAM2  DIM       30
ERRTYPE   DIM       1
ERRORS    FORM      1
FILEDATE  DIM       8
FILENAME  DIM       8
FNAMEB    DIM       8
FNAMEI    DIM       500
FORM8     FORM      8
FROMDATE  DATE      8
HOSPNUM   DIM       4
IBAMFLAG  FORM      1                       * for HL7 messaging
LINECNTR  FORM      8
MESSAGID  DIM       20
NMPNUMB   DIM       20
OUTFNAME  DIM       8
PATHNAME  DIM       150
REASONCH  DIM       3
RECCNT    FORM      9
RECCNTR   FORM      8
ROPTION   FORM      1           * Report Option
SAVADMN   DIM       8           * Saved Admission number
SAVADMNO  DIM       8
SAVURNO   DIM       8           * Saved UR number
SAVCLCD   DIM       100
SDATE     DIM       8
TILDA35   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
UPDCOUNT  FORM      8
USERID    DIM       10
QUOTE     INIT      "#""
.
XFLD0001  DIM       50          * UMRN
XFLD0002  DIM       50          * Visit Type (IP/OP/ED)
XFLD0003  DIM       50          * Visit Number
XFLD0004  DIM       70          * Hospital Description
XFLD0005  DIM       50          * ID Claim Number
XFLD0006  DIM       50          * Date Sent to ICWA (CCYYMMDD hh:mm:ss)
XFLD0007  DIM       50          * Date ICWA Response (CCYYMMDD hh:mm:ss)
XFLD0008  DIM       50          * Status Code (Cat Vh)
XFLD0009  DIM       70          * Status Description
.
.---------------------------------------------------------------------------
PRGID     INIT      "IBAWEB21"
PRGNAM    INIT      "Insurance Council WA Event Extract"
VERSION   INIT      "V12.00.09"
.---------------------------------------------------------------------------
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      ROPT0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
.
          BRANCH    ROPTION,ML1000,ML1000,ML3000,ML3000   * New Submission
          GOTO      ML9999
.
ML1000    CALL      CLEA0000
          CALL      NEWS0000               * Process a new submission
          GOTO      ML0100
.
ML3000    IF        ROPTION = 4
            CALL      KSSC0000              * Keyin file for reschdule option
            BRANCH    EXIT,ML0100
          ELSE
            CALL      KASC0000              * Keyin file
            BRANCH    EXIT,ML0100
          ENDIF
.
          CALL      KREA0000                * Keyin Reason for Change
          BRANCH    EXIT,ML0000
.
          CALL      KUSR0000                * Keyin user id
          BRANCH    EXIT,ML0000
.
ML3200    CALL      CONTQST                 * Ok to Continue (Y/N/C) ?
          BRANCH    CEXIT,ML4000,ML3200,ML0100
.                         Yes    No     Cancel
.
ML4000    CALL      UPLOD000
          GOTO      ML9999
.
ML9999    MOVE      ZERO,EXIT
          CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000                                  *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading 
. 
          OPEN      AAEDE1A1,"aaede1af"
          OPEN      IBAPOST1,"ibapostf"
          OPEN      PATCODE1,"patcodes"
          OPEN      ALLREFA1,"allrefaf"
          OPEN      ALLLNKA2,"alllnkaf"
          OPEN      EMRVISA1,"emrvisaf"
          OPEN      EMRICDA1,"emricdaf"
          OPEN      EMRVCDA1,"emrvcdaf"
          OPEN      EMRSITA1,"emrsitaf"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATTRAN2,"pattranf"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PATVISA1,"patvisaf"
          OPEN      PMSVX1A1,"pmsvx1af"
          OPEN      PMSPX2A1,"pmspx2af"
          OPEN      PMSCHAA1,"pmschaaf"
          OPEN      CONTROLF,"controlf"
          OPEN      PMSEXTA1,"pmsextaf"
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSTLEA1,"pmstleaf"
          OPEN      PATCODE1,"patcodes"
          OPEN      PATIN1A1,"patin1af"
          OPEN      PATICDD1,"paticddf"
          OPEN      PATRE1A1,"patre1af"
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATDADA1,"patdadaf"
          OPEN      PATVADA1,"patvadaf"
          OPEN      PATWR1A1,"patwr1af"
          OPEN      PATECDA1,"patecdaf"
          OPEN      OUTSITA1,"outsitaf"
          OPEN      OUTCLIA1,"outcliaf"
          OPEN      OUTCTYA1,"outctyaf"
.
          CALL      OPICD1                          * Open ICD Disease files
.
          MOVE      "out",UID
          PACK      CFNAME WITH UID,FILBOKA6        * open OUTBOKFD
          DISPLAY   *P64:24,CFNAME;
          OPEN      OUTBOKA6,CFNAME
.
          PACK      CFNAME WITH UID,FILHEDA1        * open OUTHEDFD
          DISPLAY   *P64:24,CFNAME;
          OPEN      OUTHEDA1,CFNAME
.
          PACK      CFNAME WITH UID,FILSESA1        * open OUTSESFD
          DISPLAY   *P64:24,CFNAME;
          OPEN      OUTSESA1,CFNAME
.
          PACK      CFNAME WITH UID,FILBB1A1        * open OUTBB1FD
          DISPLAY   *P64:24,CFNAME;
          OPEN      OUTBB1A1,CFNAME
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
.
          IF        IBCNMHOS = 1
            OPEN      PATHSPA1,"pathspaf"
          ENDIF
.
          READ      CONTROLF,TEN;*54,CFILENO:
                                 *94,CAGECOFF
          READ      CONTROLF,TEN3;*245,CHOSTYP
.
          READ      CONTROLF,TWENTY1;*220,PTNSWHDP,*216,PTCNDTRF
          READ      CONTROLF,EIGHTY8;*242,PNSWRACE:
                                     *59,PTCNI10D  
          READ      CONTROLF,SEVENTY9;*82,PTCNDSCI
          READ      CONTROLF,HUND04;RSCNEXT  * Output Extract directory
          READ      CONTROLF,HUND22;*18,EMCNSDSA
.
          PACK      CURDATE,CCC,CYY,CMM,CDD 
          REP       " 0",CURDATE
.
INIT9999  RETURN
+
.****************************************************************************
.*                                NEWS0000             Called by: ML0000    *
.*                             New Submission                               *
.****************************************************************************
.
NEWS0000  CALL      SDAT0000                    * Enter Start Date             
          CALL      EDAT0000                    * Enter End Date
          MOVE      ICWAEXT,FILENAME            * Set File Name
          MOVE      SP30,FNAMEB
.
          CLOSE     TEMP1
          PREP      TEMP1,FILENAME              * Open Extract File
.
          CALL      CONTQST                     * Ok to continue ?
          BRANCH    CEXIT,NEWS1000:             * yes
                          NEWS0000:             * no
                          NEWS9999              * cancel
.
NEWS1000  CLOCK     TIME,CTIMEIS
.
          CALL      PROX0000                  * Process Records 
.
          READ      TEMP1,ZERO;*1,ANS  * if TEMP1 is empty don't run us1 script
          IF        @OVER
            CLOSE     TEMP1,DELETE
            GOTO      NEWS9999
          ENDIF
.
.         Move Extract to Web Directory
.
NEWS2000  CLEAR     CMDLINE       
          APPEND    "ibaweb21.us1 ",CMDLINE     
          APPEND    FILENAME,CMDLINE           
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID  
.
NEWS9999  RETURN
+
.****************************************************************************
.*                                ROPT0000             Called by: ML0000    *
.*                 Enter the report option for the new submission           *
.*                   (1) Extract Event Data from webPAS                     *
.*                   (2) Re-Submit all Event Data for Date Range            *
.*                   (3) Import Event Data from ICWA                        *
.****************************************************************************
.
ROPT0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Extract Event Data from webPAS":
                    *P1:6,*V2LON,TWO,*HOFF,". Re-Submit all Event Data for ":
                                           "Date Range":
                    *P1:7,*V2LON,THREE,*HOFF,". Import Event Data from ICWA":
                    *P1:8,*V2LON,FOUR,*HOFF,". Schedule Import Event Data from":
                                            " ICWA"
.
ROPT0500  KEYIN     *P1:9,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:9,*V2LON,ROPTION
.
          COMPARE   ZERO,ROPTION                 * exit selected ?
          GOTO      ROPT9500 IF EQUAL            * yes
.
          IF        ROPTION=1 | ROPTION=2 | ROPTION=3 | ROPTION=4
            GOTO      ROPT9000
          ELSE
            DISPLAY   *P1:24,"Invalid option ";
            CALL      HITENTER
            GOTO      ROPT0500    
          ENDIF
.
ROPT9000  MOVE      ZERO,EXIT
          GOTO      ROPT9999
.
ROPT9500  MOVE      ONE,EXIT
.
ROPT9999  RETURN
+
.****************************************************************************
.*                                SDAT0000             Called by: ML0000    *
.*                 Enter the start date for the new submission              *
.****************************************************************************
.
SDAT0000  DISPLAY   *P1:16,*EF,"Starting Date : "
          MOVE      SP2,CDAY                     * default to blank
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      SP2,CCENT
          MOVE      TEN7,CCOL
          MOVE      TEN6,CVERT
          MOVE      ONE,CCANLDTE
          CALL      KEYDATE
          BRANCH    OVRCD,SDAT0000               * nothing entered
          PACK      SDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SDATE
.
          MATCH     SDATE,CURDATE           * date cannot be greater than today
          GOTO      SDAT9000 IF LESS
          GOTO      SDAT9999
.
SDAT9000  DISPLAY   *P1:24,"Date cannot be in the future ";
          CALL      HITENTER
          GOTO      SDAT0000
.
SDAT9999  RETURN
+
.**************************************************************************
.*                               EDAT0000              Called by: ML0000  *
.*                           Enter ending date                            *
.**************************************************************************
.
EDAT0000  DISPLAY   *P1:17,*EF,"Ending Date   : "
          MOVE      CDD,CDAY                     * default to current date
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
          MOVE      TEN7,CCOL
          MOVE      TEN7,CVERT
          MOVE      ONE,CCANLDTE
          CALL      KEYDATE
          BRANCH    OVRCD,EDAT0000               * nothing entered
.
EDAT0001  PACK      ENDDTE,CCENT,CYEAR,CMON,CDAY
          PACK      ENDDTESL,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR    
          REP       " 0",ENDDTE
          PACK      CURDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURDATE
.
          MATCH     ENDDTE,CURDATE                * after current date?
          GOTO      EDAT9000 IF LESS
.
          MATCH     ENDDTE,SDATE                  * after start date?
          GOTO      EDAT9999 IF LESS
          GOTO      EDAT9999 IF EQUAL
.
          DISPLAY   *P1:24,"Ending date must be greater than starting date ";
          CALL      HITENTER
          GOTO      EDAT0000
.
EDAT9000  DISPLAY   *P1:24,"Ending date cannot be in the future ";
          CALL      HITENTER
          GOTO      EDAT0000
.
EDAT9999  RETURN
+
.--------------------------------------------------------------------------
. Keyin Reason for Change
.--------------------------------------------------------------------------
KREA0000  DISPLAY   *P1:13,"Reason for Change (Cat IZ) :"
          KEYIN     *P30:13,*EL,*V2LON,REASONCH;
          PACK      REASONCH,REASONCH,SP70
          MATCH     SP70,REASONCH
          GOTO      KREA9500 IF EQUAL
.
          MOVE      "IZ",KEY2
          PACK      KEY5,KEY2,REASONCH,SP70
          CALL      RDACODE1
          BRANCH    OVRCD,KREA9500
.
          MOVE      ZERO,EXIT
          GOTO      KREA9999
.
KREA9500  MOVE      ONE,EXIT
KREA9999  RETURN
+
.--------------------------------------------------------------------------
. Keyin user id
.--------------------------------------------------------------------------
KUSR0000  DISPLAY   *P1:14,"Keyin User ID              :"
          KEYIN     *P30:14,*EL,*V2LON,USERID;
          PACK      USERID,USERID,SP70
          MATCH     SP70,USERID
          GOTO      KUSR9500 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      KUSR9999
.
KUSR9500  MOVE      ONE,EXIT
KUSR9999  RETURN
+
.--------------------------------------------------------------------------
. Upload file
.--------------------------------------------------------------------------
KASC0000  MOVE      ZERO,EXIT
          PACK      FNAMEI WITH SP70,SP70,SP70
.
          DISPLAY   *P1:11,*EF,"ICWA Import File";
.
          KEYIN     *P1:12,*EL,"Keyin Path & File Name : ",*V2LON,FNAMEI
.
          PACK      FNAMEI,FNAMEI,SP70,SP70,SP70
.
          MATCH     SP70,FNAMEI
          GOTO      KASC9000 IF EQUAL
.
          SCAN      ".txt",FNAMEI
          IF        !@EQUAL
            SQUEEZE   FNAMEI
            ENDSET    FNAMEI
            APPEND    ".txt",FNAMEI      * add ".txt" if there is a path
            APPEND    SP70,FNAMEI
            RESET     FNAMEI
          ENDIF
          RESET     FNAMEI
.
          DISPLAY   *P26:11,*V2LON,*EL,FNAMEI;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP2,FNAMEI
          TRAPCLR   IO
          BRANCH    OVRCD,KASC8000
.
          CALL      EXCUS000                * Execute us2 script
          MOVE      ZERO,EXIT
          GOTO      KASC9999
.
KASC8000  DISPLAY   *P1:24,*EL,*B,"File not found.  ";
          CALL      HITENTER
          GOTO      KASC0000
.
KASC9000  MOVE      ONE,EXIT
.
KASC9999  RETURN
+
.--------------------------------------------------------------------------
. Upload file
.--------------------------------------------------------------------------
KSSC0000  MOVE      ZERO,EXIT
          PACK      FNAMEI WITH SP70,SP70,SP70
.
          DISPLAY   *P1:11,*EF,"ICWA Import File";
          DISPLAY   *P1:12,*EL,"Keyin Upload file Date : "
.

          MOVE      SP2,CDAY                     * default to blank
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      SP2,CCENT
          MOVE      TWENTY6,CCOL
          MOVE      TEN2,CVERT
          MOVE      ONE,CCANLDTE
          CALL      KEYDATE
          BRANCH    OVRCD,KSSC0000               * nothing entered
.
          PACK      FILEDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FILEDATE
.
. extracts/icwa/icwaimpCCYYMMDD.txt
.
          STRIP     RSCNEXT                    * Full path is now in RSCNEXT
          CLEAR     FNAMEI
          APPEND    RSCNEXT,FNAMEI
          APPEND    "icwa/icwaimp",FNAMEI
          APPEND    FILEDATE,FNAMEI
          APPEND    ".txt",FNAMEI
          RESET     FNAMEI
.
          CALL      EXCUT000                * Execute us3 script
.
          DISPLAY   *P26:11,*V2LON,*EL,FNAMEI;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP2,FNAMEI
          TRAPCLR   IO
          BRANCH    OVRCD,KSSC8000
.
          MOVE      ZERO,EXIT
          GOTO      KSSC9999
.
KSSC8000  DISPLAY   *P1:24,*EL,*B,"File not found.  ";
          PRINT     *1,"File not found : ",FNAMEI
          MOVE      ONE,EXIT
.
KSSC9999  RETURN
+
.--------------------------------------------------------------------------
. Execute us2 command before processing
.--------------------------------------------------------------------------
EXCUS000  CLEAR     CMDLINE
          APPEND    "ibaweb21.us2 ",CMDLINE
          SQUEEZE   FNAMEI
          APPEND    FNAMEI,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
EXCUS999  RETURN
+
.--------------------------------------------------------------------------
. Execute us3 command before processing
.--------------------------------------------------------------------------
EXCUT000  CLEAR     CMDLINE
          APPEND    "ibaweb21.us3 ",CMDLINE
          SQUEEZE   FNAMEI
          APPEND    FNAMEI,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
EXCUT999  RETURN
+
.--------------------------------------------------------------------------
. Uploading data
.--------------------------------------------------------------------------
UPLOD000  CALL      PRHD0000                * Print header
          CALL      CTOT0000                * Clear total vars
.
          CALL      PROC0000                * with Updating file
          CALL      PTOT0000                * Print report totals
.
UPLOD999  RETURN
+
.--------------------------------------------------------------------------
. Print Heading for the report
.--------------------------------------------------------------------------
PRHD0000  CALL      HEAD132
.
          PRINT     *N,"Upload for Insurance Council WA Event Extract and Load"
.
          PRINT     *N,"Date     : ",CDATE:
                    *N,"Time     : ",CTIMEIS
.
          PRINT     *N,"ICWA Load file : ":
                    *N,"     ",FNAMEI
          CALL      UND132
.
          PRINT     *1,"|Line No.",*10,"|Visit Number",*23,"|Type":
                    *28,"|Hospital ",*60,"|Date Sent",*82,"|Status":
                    *90,"|Error/Message",*132,"|"
.
          CALL      UND132
.
PRHD9999  RETURN
+
.--------------------------------------------------------------------------
. Clear total vars
.--------------------------------------------------------------------------
CTOT0000  MOVE      ZERO,ERRCOUNT
          MOVE      ZERO,UPDCOUNT
.
CTOT999   RETURN
+
.--------------------------------------------------------------------------
. Print total line
.--------------------------------------------------------------------------
PTOT0000  CALL      UND132
.
          PRINT     *1,"|Total Records Read    : ",LINECNTR,*132,"|"
          PRINT     *1,"|Total Record Errors   : ",ERRCOUNT,*132,"|"
          PRINT     *1,"|Total Records Updated : ",UPDCOUNT,*132,"|"
.
          CALL      UND132
.
PTOT9999  RETURN
+
.--------------------------------------------------------------------------
. Pack fields with spaces
.--------------------------------------------------------------------------
PFLD0000  PACK      XFLD0001,XFLD0001,SP70
          PACK      XFLD0002,XFLD0002,SP70
          PACK      XFLD0003,XFLD0003,SP70
          PACK      XFLD0004,XFLD0004,SP70
          PACK      XFLD0005,XFLD0005,SP70
          PACK      XFLD0006,XFLD0006,SP70
          PACK      XFLD0007,XFLD0007,SP70
          PACK      XFLD0008,XFLD0008,SP70
          PACK      XFLD0009,XFLD0009,SP70
.
PFLD9999  RETURN
+
.-----------------------------------------------------------------------------
. Move fields from input loading file to temporary file
.-----------------------------------------------------------------------------
MOVFLD00  PACK      ZIMPURNO,XFLD0001,SP70
          PACK      ZIMPVIST,XFLD0002,SP70
          PACK      ZIMPVISN,XFLD0003,SP70
          PACK      ZIMPHOSP,XFLD0004,SP70
          PACK      ZIMPCLAM,XFLD0005,SP70
          PACK      ZIMPSENT,XFLD0006,SP70
          PACK      ZIMPRESP,XFLD0007,SP70
          PACK      ZIMPSTAT,XFLD0008,SP70
          PACK      ZIMPSDSC,XFLD0009,SP70
.
MOVFLD99  RETURN
+
.--------------------------------------------------------------------------
. Process uploading
.--------------------------------------------------------------------------
PROC0000  OPEN      TEMP2,FNAMEI
          MOVE      SP70,SAVADMNO
.
PROC1000  READ      TEMP2,SEQ;XFLD0001,XFLD0002,XFLD0003,XFLD0004,XFLD0005:
                              XFLD0006,XFLD0007,XFLD0008,XFLD0009 
.
          GOTO      PROC9000 IF OVER
.
          MOVE      ZERO,RECCNTR            * Reset pmsextaf record counter
          ADD       ONE,LINECNTR            * Text file line counter for error
.
          CALL      PFLD0000                * pack fields with spaces
.
          CALL      MOVFLD00
          CALL      VALD0000                * Validate fields
          BRANCH    ERRFLAG,PROC1000
.
          CALL      CNTREC00                * count no of records for visit
          COMPARE   TWO,RECCOUNT
          IF        !@LESS
            MOVE      "Duplicate entries exist for this visit - not updated",ERRORMSG
            MOVE      "Error",ERRSTAT
            CALL      PERR0000
            GOTO      PROC8500
          ENDIF
.
          CALL      CLPMSEXT              
          PACK      KEY11,ZIMPVISN,z70            
          CALL      RSPMEXT1
PROC1500  CALL      RPPMEXT1                * read pmsextaf 
          BRANCH    OVRCD,PROC1000
.
          MATCH     PMEXVISN,ZIMPVISN
          GOTO      PROC1000 IF NOT EQUAL   * read next line in import file
.
          ADD       ONE,RECCNTR
.
          PACK      PMEXDAT2,CURDATE                     * Date ICWA Responded
          PACK      PMEXTIM2,CTIMEIS,SP70                * Time ICWA Responded
.
          CALL      CHKSTA00                             * Status Code
.
          MATCH     SP70,ZIMPCLAM
          IF        !@EQUAL
            PACK      PMEXCLMN,ZIMPCLAM,SP70  * Claim Number
          ENDIF
.
          PACK      PMEXUDAT,CURDATE,SP70
          PACK      PMEXUTIM,CTIMEIS,SP70
          PACK      PMEXUUID,USERID,SP70
.
          CALL      UPPMEXT1                * update pmsextaf
.
          IF        RECCNTR=1
            CALL      UPCLCD00              * Update Claim Code 
            CALL      UPDTTM00              * Update date/time/userID
            CALL      UPHMDS00              * Update HMDS extract flag
.
            MOVE      "Matched and updated",ERRORMSG
            MOVE      "OK",ERRSTAT
            CALL      PERR0000
            ADD       ONE,UPDCOUNT
            MOVE      ONE,EXIT
          ENDIF
.
PROC8500  CALL      CLPMSEXT                * clear pmsextaf fields
          GOTO      PROC1500                * read next record
.
PROC9000  CLOSE     TEMP2
.
PROC9999  RETURN
+
.--------------------------------------------------------------------------
. Count number of records per visit in pmsextaf
.--------------------------------------------------------------------------
CNTREC00  MOVE      ZERO,RECCOUNT
          CALL      CLPMSEXT
          PACK      KEY11,ZIMPVISN,z70
          CALL      RSPMEXT1
CNTREC10  CALL      RPPMEXT1                * read pmsextaf
          BRANCH    OVRCD,CNTREC99
.
          MATCH     PMEXVISN,ZIMPVISN
          IF        @EQUAL
            ADD       ONE,RECCOUNT
            GOTO      CNTREC10
          ENDIF
.
CNTREC99  RETURN
+
.--------------------------------------------------------------------------
. Validate ICWA Status Code before updating pmsextaf
.--------------------------------------------------------------------------
CHKSTA00  MOVE      "Vh",KEY2
          PACK      KEY5,KEY2,ZIMPSTAT,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CHKSTA99
.
          MATCH     "P",TCINDC1             * if Status Code is Pending
          GOTO      CHKSTA99 IF EQUAL 
.
          PACK      PMEXCAT2,ZIMPSTAT,SP70  * ICWA Status Code
          GOTO      CHKSTA99
.
CHKSTA99  RETURN
+
.--------------------------------------------------------------------------
. Update Claim Code for Visit according to ICWA Status Code
.--------------------------------------------------------------------------
UPCLCD00  MOVE      "Vh",KEY2
          PACK      KEY5,KEY2,ZIMPSTAT,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,UPCLCD99
.
          MATCH     "C",TCINDC1                 * check if status Confirmed
          GOTO      UPCLCD99 IF NOT EQUAL
.
          MATCH     SP70,PMEXALEL               * is Alternate Election blank
          GOTO      UPCLCD90 IF EQUAL
.
          CALL      UPINSU00                    * set new insurance company
          PACK      PMEXCLAM,PMEXALEL,SP70
          CALL      UPPMEXT1                    * update pmsextaf
.
          MATCH     "IP",ZIMPVIST
          IF        @EQUAL
            PACK      KEY8,ZIMPVISN,SP70
            CALL      RDPTMIS1                    * read patmi1af
            BRANCH    OVRCD,UPCLCD05
            PACK      ACLAIM,PMEXALEL,SP70
            CALL      UPPTMIS1                    * update patmi1af
.
UPCLCD05    CALL      UPTRAN00                  * update supervisor claim type
            CALL      IPMESS00                    * send HL7 message 
            GOTO      UPCLCD99
          ENDIF
.
          MATCH     "ED",ZIMPVIST
          IF        @EQUAL
            PACK      KEY8,ZIMPVISN,SP70
            CALL      RDEMVIS1                    * read emrvisaf
            BRANCH    OVRCD,UPCLCD99          
            PACK      EMVICOMP,PMEXALEL,SP70
            CALL      UPEMVIS1                    * update emrvisaf
.
            PACK      KEY8,ZIMPVISN,SP70
            CALL      RDDETA1
            IF        OVRCD=0
              MOVE      EMVICOMP,ADACOMP
              CALL      UPDETA1                   * upate aaede1af
            ENDIF
.
            CALL      EDMESS00                    * send HL7 message
            GOTO      UPCLCD99
          ENDIF
.
          MATCH     "OP",ZIMPVIST
          IF        @EQUAL
            PACK      KEY8,ZIMPVISN,SP70
            CALL      RDBOKB1                     * read outbb1af
            BRANCH    OVRCD,UPCLCD10 
            PACK      OBACOMP,PMEXALEL,SP70
            CALL      UPBOKB1                     * update outbb1af
            CALL      OPMESS00                    * send HL7 message
.
UPCLCD10    PACK      KEY16,ZIMPVISN,SP70
            CALL      RSALLNK2
UPCLCD20    CALL      RKALLNK2                    * read alllnkaf
            BRANCH    OVRCD,UPCLCD99
.
            MATCH     ZIMPVISN,ALLNLNKV
            GOTO      UPCLCD99 IF NOT EQUAL
.
            PACK      KEY8,ALLNVISN,SP70
            CALL      RDALREF1                    * read allrefaf
            BRANCH    OVRCD,UPCLCD99
            PACK      ALRECOMP,PMEXALEL,SP70
            CALL      UPALREF1                    * update allrefaf
            CALL      LKMESS00                    * send HL7 message
            GOTO      UPCLCD20                    * next alllnkaf record
          ENDIF
.
          GOTO      UPCLCD99
.
UPCLCD90  MOVE      "Claim Code not updated - Alternate Election Code is blank",ERRORMSG
          MOVE      "Error",ERRSTAT
          CALL      PERR0000
          GOTO      UPCLCD99
.
UPCLCD99  RETURN
+
.--------------------------------------------------------------------------
. Update Insurance Company when MVIT Status is Confirmed
.--------------------------------------------------------------------------
UPINSU00  PACK      KEY6,SP70
          CALL      RDSINSR1                      * position on first record
UPINSU10  CALL      RDKINSR1                      * read next record
          BRANCH    OVRCD,UPINSU99
.
          MATCH     PTINCLAI,PMEXALEL
          GOTO      UPINSU10 IF NOT EQUAL
.
          PACK      PMEXICOD,ICODE,SP70           * save new insurance code for
          GOTO      UPINSU99                      * alt election ready for when
                                                  * pmsextaf is updated
.
UPINSU99  RETURN
+
.--------------------------------------------------------------------------
. Send I13 HL7 message for Linked Referral events
.--------------------------------------------------------------------------
LKMESS00  MOVE      ALLNVISN,KEY8
          CALL      RDALREF1                     * Admission record found ?
          BRANCH    OVRCD,LKMESS99               * no
          MOVE      PMEXURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,LKMESS99
          CALL      RDPMPX21
          BRANCH    OVRCD,LKMESS99
.
.         Set up the message for sending
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      FOUR,HL7TRGID
          MOVE      SP8,HL7INCLD
          CALL      DGCLII13                     * send update referral details
.
LKMESS99  RETURN
+
.--------------------------------------------------------------------------
. Send A08 HL7 message for OP events
.--------------------------------------------------------------------------
OPMESS00  MOVE      PMEXURNO,KEY8
          CALL      RDMAST1                    * PMI record found ?
          BRANCH    OVRCD,OPMESS99             * no - don't send message
.
          MOVE      PMEXURNO,KEY8
          CALL      RDPMPX21                   * PMI extension record found ?
          BRANCH    OVRCD,OPMESS99             * no - don't send message
.
          MATCH     ZIMPVISN,SP70
          GOTO      OPMESS99 IF EQUAL          * blank visit ?
.
          MOVE      ZIMPVISN,D8                * visit number
.
          MOVE      THREE,HL7TRGID
.
          PACK      KEY36,D8,SP20,SP20
          CALL      RDSBOKA6                   * position on visit number
          CALL      RDKBOKA6                   * read next record
          BRANCH    OVRCD,OPMESS99             * eof - finished
.
          MATCH     DOBAOUTN,D8                * same visit number ?
          GOTO      OPMESS99 IF NOT EQUAL      * no - finished
.
.         Get the outbb1af record
.
          MOVE      D8,KEY8
          CALL      RDBOKB1                    * outbb1af record found ?
          BRANCH    OVRCD,OPMESS99             * no
.
          CALL      CLOUTRSH                   * clear unused variables
          CALL      CLOUTCAN
.
.         Set up the message for sending
.
          CALL      PMIGTNID                   * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      SP8,HL7INCLD
          PROC      DGCLICOB                   * send update visit details
.
OPMESS99  RETURN
+
.--------------------------------------------------------------------------
. Send A08 HL7 message for IP events
.--------------------------------------------------------------------------
IPMESS00  CALL      IBACLOCK                     * current date/time
.
.         Read the relevant records for the patient and
.         broadcast an HL7 update visit message (A08)
.
          PACK      KEY8,AADMNO,SP70
          CALL      RDPTMIS1                     * admission on file ?
          BRANCH    OVRCD,IPMESS99               * no - finish
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1                      * pmi record on file ?
          BRANCH    OVRCD,IPMESS99               * no - finish
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21                     * get pmi extension record
          IF        OVRCD=1
            CALL      CLPMSPX2
          ENDIF
.
          PACK      KEY8,AADMNO,SP70
          CALL      RDPTRES1                     * get PRA record
          IF        OVRCD=1
            CALL      CLPATRE1
          ENDIF
.
          PACK      KEY8,AADMNO,SP70
          CALL      RDDSCH1                      * check for discharge record
          IF        OVRCD=1
            CALL      CLPATDSC
          ENDIF
.
.         Get the last transfer record
.
          PACK      KEY30,AADMNO,TILDA35
          CALL      RDSTRAN2                     * pos'n after last tran record
          CALL      RDPTRAN2                     * read previous record
          BRANCH    OVRCD,IPMESS99               * eof - finish
.
          MATCH     AADMNO,TADMN                 * same admission still ?
          GOTO      IPMESS99 IF NOT EQUAL        * no - finish
.
          CALL      PMIGTNID              * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TWO,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAC              * broadcast change admission details
.
IPMESS99  RETURN
+
.--------------------------------------------------------------------------
. Send A08 HL7 message for ED events                                       
.--------------------------------------------------------------------------
EDMESS00  MOVE      EMVIURNO,KEY8               * get PMI details
          CALL      RDMAST1
          BRANCH    OVRCD,EDMESS99
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,EDMESS99
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,EDMESS99
.
          CALL      PMIGTNID
          MOVE      NMPNUMB,PTNINMPI
          MOVE      ONE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICEC                    * send A08
.
EDMESS99  RETURN
+
.--------------------------------------------------------------------------
. Mimic Supervisor Claim Type Change - update pattranf & write to pmschaaf
.--------------------------------------------------------------------------
UPTRAN00  PACK      KEY30,ZIMPVISN,Z70
          CALL      RDSTRAN2
UPTRAN10  CALL      RDPTRAN2                    * read pattranf
          BRANCH    OVRCD,UPTRAN99
.
          MATCH     ZIMPVISN,DTADMN             * match visit numbers
          GOTO      UPTRAN99 IF NOT EQUAL
.
          MATCH     PTTRCLTY,PMEXALEL           * is current & new CL different
          GOTO      UPTRAN99 IF EQUAL
.
          PACK      SAVCLCD,PTTRCLTY,SP70       * save old claim type
          PACK      PTTRCLTY,PMEXALEL,SP70
          CALL      UPTRAN2                     * update pattranf
.
          PACK      PMCHADMN,DTADMN,SP70
          PACK      PMCHTDAT,TDATE,SP70
          PACK      PMCHTTIM,TTIME,SP70
          PACK      PMCHTWAR,TWARD,SP70
          PACK      PMCHTBED,TBED,SP70
          PACK      PMCHCDAT,CCC,CYY,CMM,CDD,SP70
          PACK      PMCHCTIM,CTIMEIS,SP70          
          MOVE      "002",KEY3
          PACK      PMCHCTYP,KEY3,SP70
          PACK      PMCHREAS,REASONCH,SP70
          PACK      PMCHOVAL,SAVCLCD,SP70
          PACK      PMCHNVAL,PTTRCLTY,SP70
          PACK      PMCHWEBC,USERID,SP70
          PACK      PMCHDATC,CCC,CYY,CMM,CDD,SP70
          PACK      PMCHTIMC,CTIMEIS,SP70
.
          PACK      KEY46,PMCHADMN,PMCHTDAT,PMCHTTIM,PMCHTWAR,PMCHTBED,PMCHCDAT,PMCHCTIM,SP70
          CALL      RAPMCHA1
          IF        OVRCD=1
            CALL      WRPMCHA1                  * write transfer audit record
          ENDIF
.
          CALL      CLPATTRN                    * clear pattranf variables
.
          PACK      KEY30,ZIMPVISN,Z70
          CALL      RDSTRAN2
UPTRAN20  CALL      RDPTRAN2                    * read pattranf
          BRANCH    OVRCD,UPTRAN99
.
          MATCH     ZIMPVISN,DTADMN             * match visit numbers
          GOTO      UPTRAN99 IF NOT EQUAL
.
          MATCH     PTTRCLTY,PMEXALEL           * is current & new CL different
          GOTO      UPTRAN20 IF EQUAL
.
          PACK      PTTRCLTY,PMEXALEL,SP70
          CALL      UPTRAN2                     * update pattranf
.
          GOTO      UPTRAN20
.
UPTRAN99  RETURN
+
.--------------------------------------------------------------------------
. Save Update Date/Time/UserID to various tables                   
.--------------------------------------------------------------------------
UPDTTM00  PACK      KEY8,ZIMPVISN,SP70
          CALL      RDPMVX11                    * read pmsvx1af
          BRANCH    OVRCD,UPDTTM10
          PACK      PMVXLUPD,CURDATE,SP70
          PACK      PMVXLUPT,CTIMEIS,SP70
          PACK      PMVXWEBU,USERID,SP70
          CALL      UPPMVX11                    * update pmsvx1af
.
UPDTTM10  PACK      KEY8,ZIMPVISN,SP70
          CALL      RDPTMIS1                    * read patmi1af
          BRANCH    OVRCD,UPDTTM99
          PACK      PTMIDATU,CURDATE,SP70
          PACK      PTMITIMU,CTIMEIS,SP70
          PACK      PTMIWEBU,USERID,SP70
          CALL      UPPTMIS1                    * update patmi1af
.
UPDTTM99  RETURN
+
.--------------------------------------------------------------------------
. Update HMDS Extract Flag for IP events           
.--------------------------------------------------------------------------
UPHMDS00  MATCH     "IP",ZIMPVIST
          GOTO      UPHMDS99 IF NOT EQUAL
.
          PACK      KEY8,ZIMPVISN,SP70
          CALL      RDPTMIS1                    * read patmi1af
          BRANCH    OVRCD,UPHMDS99
.
          COMPARE   ONE,AELIG
          IF        @EQUAL
            MOVE      ZERO,AELIG                  * reset HMDS extract flag
            CALL      UPPTMIS1                    * update patmi1af 
          ENDIF
.
UPHMDS99  RETURN
+
.--------------------------------------------------------------------------
. Validate input text file fields
.--------------------------------------------------------------------------
VALD0000  MOVE      ZERO,EXIT
          MOVE      ZERO,ERRFLAG
          MOVE      XFLD0003,ZIMPVISN       . Visit Number
          RJUSTIFY  ZIMPVISN          
.
          MATCH     SP70,XFLD0002
          IF        @EQUAL
            MOVE      "Visit Type is blank",ERRORMSG
            MOVE      "Error",ERRSTAT
            CALL      PERR0000
            MOVE      ONE,EXIT
          ELSE
            MOVE      XFLD0002,VINFIELD
            MOVE      2,VINTLEN
            MOVE      "Visit Type",VFLDNAME
            CALL      CCHLEN00                    * validate field length
            IF        VERRFLAG = 0
              MATCH     "IP",XFLD0002
              GOTO      VALD1000 IF EQUAL
              MATCH     "OP",XFLD0002
              GOTO      VALD1000 IF EQUAL
              MATCH     "ED",XFLD0002
              GOTO      VALD1000 IF EQUAL
.
              MOVE      "Visit Type is invalid",ERRORMSG
              MOVE      "Error",ERRSTAT
              CALL      PERR0000
              MOVE      ONE,EXIT
              GOTO      VALD1000
            ENDIF
          ENDIF
.
VALD1000  MATCH     SP70,XFLD0003
          IF        @EQUAL
            MOVE      "Visit Number is blank",ERRORMSG
            MOVE      "Error",ERRSTAT
            CALL      PERR0000
            MOVE      ONE,EXIT
          ELSE
            MOVE      XFLD0003,VINFIELD
            MOVE      8,VINTLEN
            MOVE      "Visit Number",VFLDNAME
            CALL      CCHLEN00                    * validate field length
            IF        VERRFLAG = 0
              PACK      KEY8,XFLD0003,SP70
              RJUSTIFY  KEY8
              PACK      KEY11,KEY8,SP70   
              CALL      RSPMEXT1
              CALL      RKPMEXT1
              IF        OVRCD=1
                MOVE      "Not matched",ERRORMSG
                MOVE      "Error",ERRSTAT
                CALL      PERR0000
                MOVE      ONE,EXIT
                GOTO      VALD2000
              ENDIF
.
              MATCH     PMEXVISN,XFLD0003
              IF        !@EQUAL
                MOVE      "Not matched",ERRORMSG
                MOVE      "Error",ERRSTAT
                CALL      PERR0000
                MOVE      ONE,EXIT
                GOTO      VALD2000
              ENDIF
            ENDIF
          ENDIF
.
VALD2000  MATCH     SP70,XFLD0008
          IF        @EQUAL
            MOVE      "Status Code is blank",ERRORMSG
            MOVE      "Error",ERRSTAT
            CALL      PERR0000
            MOVE      ONE,EXIT
          ELSE 
            MOVE      XFLD0008,VINFIELD
            MOVE      3,VINTLEN
            MOVE      "Status Code",VFLDNAME
            CALL      CCHLEN00                    * validate field length
            IF        VERRFLAG = 0
              MOVE      "Vh",KEY2
              PACK      KEY5,KEY2,XFLD0008,SP70
              CALL      RDCODE1
              IF        OVRCD=1
                MOVE      "Status Code is invalid",ERRORMSG
                MOVE      "Error",ERRSTAT
                CALL      PERR0000
                MOVE      ONE,EXIT
              ELSE
                MATCH     "P",TCINDC1
                IF        @EQUAL
                  MOVE      "Returned Status should not be Pending",ERRORMSG
                  MOVE      "Error",ERRSTAT
                  CALL      PERR0000
                  MOVE      ONE,EXIT
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
VALD3000  MATCH     SP70,XFLD0001 
          IF        !@EQUAL
            MOVE      XFLD0001,VINFIELD
            MOVE      8,VINTLEN
            MOVE      "UMRN",VFLDNAME
            CALL      CCHLEN00                    * validate field length
          ENDIF
.
          MATCH     SP70,XFLD0004
          IF        !@EQUAL
            MOVE      XFLD0004,VINFIELD      
            MOVE      50,VINTLEN
            MOVE      "Hospital Description",VFLDNAME
            CALL      CCHLEN00                    * validate field length
          ENDIF
.
          MATCH     SP70,XFLD0005
          IF        !@EQUAL
            MOVE      XFLD0005,VINFIELD
            MOVE      20,VINTLEN
            MOVE      "ICWA ID Claim Number",VFLDNAME
            CALL      CCHLEN00                    * validate field length
          ENDIF
.
          MATCH     SP70,XFLD0006
          IF        !@EQUAL
            MOVE      XFLD0006,VINFIELD
            MOVE      20,VINTLEN
            MOVE      "Date Sent to ICWA",VFLDNAME
            CALL      CCHLEN00                    * validate field length
          ENDIF
.
          MATCH     SP70,XFLD0007
          IF        !@EQUAL
            MOVE      XFLD0007,VINFIELD
            MOVE      20,VINTLEN
            MOVE      "Date ICWA Response",VFLDNAME
            CALL      CCHLEN00                    * validate field length
          ENDIF
.
          MATCH     SP70,XFLD0009
          IF        !@EQUAL
            MOVE      XFLD0009,VINFIELD
            MOVE      50,VINTLEN
            MOVE      "Status Description",VFLDNAME
            CALL      CCHLEN00                    * validate field length
          ENDIF
.
VALD9999  RETURN
+
.------------------------------------------------------------------------------
. Write out error message(s)
.------------------------------------------------------------------------------
NERR0000  MOVE      ONE,VERRFLAG
          STRIP     VFLDNAME
          STRIP     VERRDESC
.
NERR1000  PACK      DIM100,CINVALID,SP1,VFLDNAME,SP1,HYPHEN,SP1,VERRDESC,SP70
          PACK      ERRORMSG,DIM100,SP70
          MOVE      "Error",ERRSTAT
          CALL      PERR0000
.
NERR9999  RETURN
+
.--------------------------------------------------------------------------
. Print error line
.--------------------------------------------------------------------------
PERR0000  MATCH     "Error",ERRSTAT
          IF        @EQUAL
            ADD       ONE,ERRCOUNT            * Total error count
          ENDIF
          MOVE      ONE,ERRFLAG
          UNPACK    ZIMPRESP,CCENT,CYEAR,DIM1,CMON,DIM1,CDAY,DIM1,DIM8
          PACK      ZIMPRESP,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR,SP1,DIM8
.
          PACK      ERRORMSG,ERRORMSG,SP70,SP70
          UNPACK    ERRORMSG,ERRRMSG1,ERRRMSG2
          PACK      ZIMPHOSP,ZIMPHOSP,SP70,SP70
          UNPACK    ZIMPHOSP,HOSPNAM1,HOSPNAM2
.
PERR1000  MATCH     "Invalid Visit Number",ERRORMSG
          IF        @EQUAL
            PRINT     *1,"|",LINECNTR,*10,"|    ",SP8:
                    *23,"|",*28,"|",HOSPNAM1,*60,"|",*82,"|",ERRSTAT:
                    *90,"|",ERRRMSG1,*132,"|"
            MATCH     SP70,ERRRMSG2
            IF        !@EQUAL
              PRINT     *1,"|",*10,"|    ",SP8,*23,"|",*28,"|",HOSPNAM2,*60:
                      "|",*82,"|",*90,"|",ERRRMSG2,*132,"|"
            ELSE
              MATCH     SP70,HOSPNAM2
              IF        !@EQUAL
                PRINT     *1,"|",*10,"|    ",SP8,*23,"|",*28,"|",HOSPNAM2,*60:
                        "|",*82,"|",*90,"|",ERRRMSG2,*132,"|"
              ENDIF
            ENDIF
          ELSE
            PRINT     *1,"|",LINECNTR,*10,"|    ",ZIMPVISN:
                    *23,"|",ZIMPVIST,*28,"|",HOSPNAM1,*60,"|",ZIMPRESP:
                    *82,"|",ERRSTAT,*90,"|",ERRRMSG1,*132,"|"
            MATCH     SP70,ERRRMSG2
            IF        !@EQUAL
             PRINT     *1,"|",*10,"|    ",SP8,*23,"|",*28,"|",HOSPNAM2:
                      *60,"|",*82,"|",*90,"|",ERRRMSG2,*132,"|"
            ELSE
              MATCH     SP70,HOSPNAM2
              IF        !@EQUAL
                PRINT     *1,"|",*10,"|    ",SP8,*23,"|",*28,"|",HOSPNAM2:
                        *60,"|",*82,"|",*90,"|",ERRRMSG2,*132,"|"
              ENDIF
            ENDIF
          ENDIF
PERR9999  RETURN
+
.**************************************************************************
.*                               PROX0000                                 *
.*            Loop through the Extra Compenable Details File              *
.**************************************************************************
.
PROX0000  MOVE      ZERO,RECCNT
          CALL      CLEA0000              * clear extract fields
.
          PACK      KEY11,z70
          CALL      RSPMEXT1
PROX1000  CALL      RPPMEXT1
          BRANCH    OVRCD,PROX9000
.
          MATCH     "1",PMEXUYN1
          GOTO      PROX1000 IF NOT EQUAL
.
PROX1500  PACK      KEY8,PMEXVISN,SP70
          CALL      RDPTVIS1
          BRANCH    OVRCD,PROX1000
.
          COMPARE   ONE,PVITYPE       
          GOTO      PROX3000 IF EQUAL     * Emergency visit
.
          COMPARE   TWO,PVITYPE
          GOTO      PROX4000 IF EQUAL     * Outpatient visit
.
          COMPARE   THREE,PVITYPE
          GOTO      PROX5000 IF EQUAL     * Inpatient visit
.
          GOTO      PROX1000              * read next record
.
PROX3000  PACK      KEY8,PMEXVISN,SP70
          CALL      RDEMVIS1              * read Emergency Visit file
          BRANCH    OVRCD,PROX1000
.  
          MATCH     SP70,EMVIDDAT
          IF        !@EQUAL
            MATCH     SDATE,EMVIDDAT
            IF        !@LESS
              MATCH     ENDDTE,EMVIDDAT  * is dates between discharge date
              IF        @EQUAL|@LESS
                GOTO      PROX3100
              ENDIF
            ENDIF
          ENDIF
.
          GOTO      PROX1000
.
PROX3100  MATCH     "2",DEMVISTA          * EMR Discharged Incomplete
          IF        @EQUAL
            PACK      XVISTYPE,ANSE,ANSD,SP70  * Visit Type
            COMPARE   ONE,ROPTION
            IF        @EQUAL
              MATCH     SP70,PMEXDAT1     * Date confirmation ICWA
              IF        @EQUAL
                CALL      DETA0000        * get extract details for visit
              ENDIF
            ENDIF
            COMPARE   TWO,ROPTION
            IF        @EQUAL
              CALL      DETA0000          * get extract details for visit
            ENDIF
          ENDIF
.
          MATCH     "3",DEMVISTA          * EMR Discharged Complete
          IF        @EQUAL
            PACK      XVISTYPE,ANSE,ANSD,SP70  * Visit Type
            COMPARE   ONE,ROPTION
            IF        @EQUAL
              MATCH     SP70,PMEXDAT1
              IF        @EQUAL
                CALL      DETA0000        * get extract details for visit
              ENDIF
            ENDIF
            COMPARE   TWO,ROPTION
            IF        @EQUAL
              CALL      DETA0000          * get extract details for visit
            ENDIF
          ENDIF
.
          GOTO      PROX1000              * read next record
.
PROX4000  PACK      KEY36,PMEXVISN,SP70
          CALL      RDSBOKA6              * read Outpatients file
PROX4010  CALL      RDKBOKA6
          BRANCH    OVRCD,PROX1000
. 
          MATCH     PMEXVISN,DOBAOUTN
          GOTO      PROX1000 IF NOT EQUAL
.
          MATCH     "4",DOBASTAT          * Booking Attended
          IF        @EQUAL
            PACK      XVISTYPE,ANSO,ANSP,SP70  * Visit Type
            COMPARE   ONE,ROPTION
            IF        @EQUAL
              MATCH     SP70,PMEXDAT1
              IF        @EQUAL
                CALL      DETA0000        * get extract details for visit
              ENDIF
            ENDIF
            COMPARE   TWO,ROPTION
            IF        @EQUAL
              CALL      DETA0000          * get extract details for visit
            ENDIF
          ENDIF 
.
          GOTO      PROX4010              * read next record
.
PROX5000  PACK      KEY8,PMEXVISN,SP70
          CALL      RDPTMIS1              * read Patient Admissions file
          BRANCH    OVRCD,PROX1000
.
          MATCH     "2",DASTAT            * Inpatient Current Admission
          IF        @EQUAL
            MATCH     SDATE,ADATE
            IF        !@LESS
              MATCH     ENDDTE,ADATE      * Falls between Admission Date
              IF        @EQUAL|@LESS
                GOTO      PROX5100
              ENDIF
            ENDIF
            GOTO      PROX1000
.
PROX5100    PACK      XVISTYPE,ANSI,ANSP,SP70  * Visit Type
            COMPARE   ONE,ROPTION
            IF        @EQUAL
              MATCH     SP70,PMEXDAT1     * Date sent to ICWA Blank
              IF        @EQUAL
                CALL      DETA0000        * get extract details for visit
              ENDIF
            ENDIF
            COMPARE   TWO,ROPTION
            IF        @EQUAL
              CALL      DETA0000          * get extract details for visit
            ENDIF
          ENDIF
.
          MATCH     "3",DASTAT            * Inpatient Discharged
          IF        @EQUAL
            PACK      KEY8,PMEXVISN,SP70
            CALL      RDDSCH1
            BRANCH    OVRCD,PROX1000
.
            MATCH     SDATE,DDATE         * Discharge Date between dates
            IF        !@LESS
              MATCH     ENDDTE,DDATE
              IF        @EQUAL|@LESS
                GOTO      PROX5200
              ENDIF
            ENDIF
            GOTO      PROX1000
.
PROX5200    PACK      XVISTYPE,ANSI,ANSP,SP70  * Visit Type
            COMPARE   ONE,ROPTION
            IF        @EQUAL
              MOVE      "Vh",KEY2
              PACK      KEY5,KEY2,PMEXCAT2,SP70
              CALL      RDCODE1
              BRANCH    OVRCD,PROX1000 
              MATCH     SP70,PMEXDAT1     * Dare sent to ICWA blank
              IF        @EQUAL
                MATCH     "P",TCINDC1     * ICWA Admission Pending
                IF        @EQUAL
                  CALL      DETA0000      * get extract details for visit
                ENDIF
              ELSE
                MATCH     "A",TCINDC1     * ICWA Admission Accepted
                IF        @EQUAL
                  CALL      DETA0000
                ENDIF 
              ENDIF
            ENDIF
            COMPARE   TWO,ROPTION
            IF        @EQUAL
              CALL      DETA0000          * get extract details for visit
            ENDIF
          ENDIF
.
          GOTO      PROX1000              * read next record
.
PROX9000  MOVE      ZERO,EXIT
          CALL      PRINTER0 
          CALL      UND132
          PRINT     *N;
          PRINT     *1,"Number of events extracted : ",RECCNT
          PRINT     *N,"*** End of Report ***"
          CALL      HITENTER
.
PROX9999  RETURN
+
.**************************************************************************
.*                               DETA0000                                 *
.*                      Get the details for a discharge                   *
.**************************************************************************
.
DETA0000  CALL      MAST0000                    * Patient Demo/Gen Visit Fields
.
          MATCH     "ED",XVISTYPE
          IF        @EQUAL 
            CALL      EMER0000                  * Emergency Fields
          ENDIF
.
          MATCH     "IP",XVISTYPE
          IF        @EQUAL
            CALL      INPA0000                  * Inpatients Fields
          ENDIF
.
          MATCH     "OP",XVISTYPE
          IF        @EQUAL
            CALL      OUTP0000                  * Outpatients Fields
          ENDIF
.
          CALL      MVAD0000                    * MVA Details Fields
          CALL      RMVE0000                    * Remove rogue characters
          CALL      PRINTER0                    * Print event to report
          BRANCH    EXIT,DETA9999
.
          COMPARE   ZERO,RECCNT
          IF        @EQUAL
            CALL      WRHEAD00                  * Write header record
          ENDIF
.
          CALL      WRIT0000                    * Write to Extract File
          CALL      CLEA0000                    * Clear variables
          ADD       ONE,RECCNT
.
DETA9999  RETURN
+
.**************************************************************************
.*                               MAST0000              Called by: DETA0000*
.*      Get Patient Demographic/Universal/General Visit Record Fields     *
.**************************************************************************
.
MAST0000  PACK      XUMRN,PMEXURNO,SP70            * UMRN (UR Number)
          PACK      XVISITNO,PMEXVISN,SP70         * Visit Number
.
          PACK      KEY8,PMEXURNO,SP70
          CALL      RDMAST1                        * read patma1af
          BRANCH    OVRCD,MAST1000
.
          PACK      XPTTLCOD,PTITL,SP70            * Patient Title Code
          PACK      XSURNAME,PTMASNAM,SP70         * Surname
          MATCH     PBDATE,SP70
          IF        !@EQUAL
            UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
            PACK      XDOB,CCENT,CYEAR,HYPHEN,CMON,HYPHEN,CDAY,SP70   * DOB 
          ENDIF
          STRIP     PADD1
          STRIP     PADD2
          PACK      XADDRESS,PADD1,SP1,PADD2,SP70  * Address 1
          PACK      XSUBURB,PSUBRB,SP70            * Suburb
          PACK      XSTATE,PADD4,SP70              * State
          PACK      XPOSTCOD,PPOST,SP70            * Postcode
          PACK      XHOMEPH,PTELEP,SP70            * Home Phone
.
MAST1000  PACK      KEY8,PMEXURNO,SP70
          CALL      RDPMPX21                       * read pmspx2af
          BRANCH    OVRCD,MAST2000
.
          PACK      XFSTNAME,PMPXFNAM,SP70         * First Name
          PACK      XMIDNAME,PMPXSNAM,SP70         * Middle Name
.
MAST2000  PACK      KEY4,PTITL,SP70
          CALL      RDPMTLE1                       * read pmstleaf
          BRANCH    OVRCD,MAST3000
.
          PACK      XPTTLDES,PMTLDESC,SP70         * Patient Title Desc
.
MAST3000  MATCH     SP70,PSEX
          IF        !@EQUAL
            MOVE      "G ",KEY2
            PACK      KEY5,KEY2,PSEX,SP70
            CALL      RDCODE1                      * read patcodes
            BRANCH    OVRCD,MAST4000
.
            PACK      XSEXCODE,THCSCOD,SP70        * Patient Sex Code
            PACK      XSEXDESC,TDESC,SP70          * Patient Sex Desc
          ENDIF
.
MAST4000  PACK      KEY8,PMEXURNO,SP70
          CALL      RDMAST1                        * read patmx1af
          BRANCH    OVRCD,MAST5000
.
          PACK      XMOBPH,PTMXCELL,SP70           * Mobile Phone
.
MAST5000  PACK      KEY8,PMEXVISN,SP70
          CALL      RDPMVX11                       * read pmsvx1af
          BRANCH    OVRCD,MAST6000
.
          PACK      XHOSPCOD,PMVXMHOS,SP70         * Hospital Code
.
          MATCH     "IP",XVISTYPE
          IF        @EQUAL
            PACK      XARTRCOD,PMVXSTRA,SP70         * Arrival Transport Code
.
            MATCH     SP70,PMVXSTRA
            IF        !@EQUAL
              MOVE      "SI",KEY2
              PACK      KEY5,KEY2,PMVXSTRA,SP70
              CALL      RDCODE1                      * read patcodes
              BRANCH    OVRCD,MAST6000
.
              PACK      XARTRDES,PTCDLDES,SP70       * Arrival Transport Desc
            ENDIF
          ENDIF
.
MAST6000  PACK      KEY3,PMVXMHOS,SP70
          CALL      RDPTHSP1                       * read pathspaf
          BRANCH    OVRCD,MAST9999
.
          PACK      XHOSPDES,PTHSNAME,SP70         * Hospital Description 
.
MAST9999  RETURN
+
.**************************************************************************
.*                               EMER0000              Called by: DETA0000*
.*                      Get Emergency Record Fields                       *
.**************************************************************************
.
EMER0000  PACK      KEY8,PMEXVISN,SP70
          CALL      RDEMVIS1                       * read emrvisaf
          BRANCH    OVRCD,EMER1000
.
          MATCH     EMVIDATE,SP70
          IF        !@EQUAL
            UNPACK    EMVIDATE,CCENT,CYEAR,CMON,CDAY
            PACK      XEDADDAT,CCENT,CYEAR,HYPHEN,CMON,HYPHEN,CDAY,SP70
                                                   * ED Event Start Date
          ENDIF
          PACK      XEDADTIM,EMVITIME,SP70         * ED Event Start Time
          PACK      XEDSITCD,EMVISITE,SP70         * EMR Site Code
          MATCH     EMVIDDAT,SP70
          IF        !@EQUAL
            UNPACK    EMVIDDAT,CCENT,CYEAR,CMON,CDAY
            PACK      XEDDISDT,CCENT,CYEAR,HYPHEN,CMON,HYPHEN,CDAY,SP70
                                                   * ED Discharge Date
          ENDIF
          PACK      XEDDISTM,EMVIDTIM,SP70         * ED Discharge Time
.
          PACK      KEY3,EMVISITE,SP70           
          CALL      RDEMSIT1                       * read emrsitaf
          BRANCH    OVRCD,EMER1000
.
          PACK      XEDSITDS,EMSTDESC,SP70         * EMR Site Description
.
          MATCH     SP70,EMVIMODE
          IF        !@EQUAL
            MOVE      "EA",KEY2
            PACK      KEY5,KEY2,EMVIMODE,SP70
            CALL      RDCODE1                        * read patcodes
            BRANCH    OVRCD,EMER1000
.
            PACK      XEDMDARC,PTCDUDF5,SP70         * Mode of Arrival Code 
.
            MATCH     PTCDUDF5,SP70
            IF        !@EQUAL
              CALL      EDEA0000                * populate Mode of Arrival Desc
            ENDIF
          ENDIF
.
          MATCH     SP70,EMVIDSTA
          IF        !@EQUAL
            MOVE      "ED",KEY2
            PACK      KEY5,KEY2,EMVIDSTA,SP70
            CALL      RDCODE1                        * read patcodes
            BRANCH    OVRCD,EMER1000
.
            PACK      XEDSTCOD,PTCDUDF5,SP70         * ED Emerg Dis Status Code
.
            MATCH     PTCDUDF5,SP70
            IF        !@EQUAL
              CALL      EDED0000               * populate Emerg Dis Status Desc
            ENDIF
          ENDIF
.
          MATCH     SP70,EMVITRIG
          IF        !@EQUAL
            MOVE      "AA",KEY2
            PACK      KEY5,KEY2,EMVITRIG,SP70
            CALL      RDCODE1                        * read patcodes
            BRANCH    OVRCD,EMER1000
.
            MOVE      TCINDC1,F2
            IF        F2 > 0 & F2 < 7 
              PACK      XEDTRCOD,TCINDC1,SP70        * ED Triage Category Code
              PACK      XEDTRDES,TDESC,SP70          * ED Triage Category Desc
            ENDIF
          ENDIF
.
EMER1000  PACK      KEY14,PMEXVISN,ZERO,ZERO,FIVE,SP70
          CALL      RSEMVCD1
          CALL      RKEMVCD1                         * read emrvcdaf 
          BRANCH    OVRCD,EMER9999
.
          MATCH     PMEXVISN,EMVCVIST
          GOTO      EMER9999 IF NOT EQUAL
.
          PACK      XEDPDIAG,EMVCFTXT,SP70,SP70      * ED Discharge Diagnosis
          PACK      XICDCODE,EMVCMNCD,SP70           * ED Dis Diag ICD10 Code
.
          COMPARE   EMVCCSYS,FIVE
          IF        @EQUAL
            PACK      KEY9,EMVCMNCD,SP70
            CALL      RDEMICD1                       * read emricdaf
            BRANCH    OVRCD,EMER9999
.
            PACK      XICDDESC,EMICDESC,SP70         * ED Dis Diag ICD10 Desc
          ENDIF
.
EMER9999  RETURN
+
.**************************************************************************
.*                               EDEA0000                                 *
.*                   Populate Mode of Arrival Desc Field                  *
.**************************************************************************
.
EDEA0000  MATCH     "1 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Private transport",XEDMDARD * Mode of Arrival Desc
            GOTO      EDEA9999
          ENDIF
.
          MATCH     "2 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Public transport",XEDMDARD
            GOTO      EDEA9999
          ENDIF
.
          MATCH     "3 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Ambulance",XEDMDARD
            GOTO      EDEA9999
          ENDIF
.
          MATCH     "4 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Hospital transport",XEDMDARD
            GOTO      EDEA9999
          ENDIF
.
          MATCH     "5 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Police/Correctional Services",XEDMDARD
            GOTO      EDEA9999
          ENDIF
.
          MATCH     "6 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Helicopter rescue",XEDMDARD
            GOTO      EDEA9999
          ENDIF
.
          MATCH     "7 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Royal Flying Doctor Service",XEDMDARD
            GOTO      EDEA9999
          ENDIF
.
          MATCH     "8 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Other",XEDMDARD
            GOTO      EDEA9999
          ENDIF
.
          MATCH     "9 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Not Stated/Unknown",XEDMDARD
            GOTO      EDEA9999
          ENDIF
.
          MATCH     "10",PTCDUDF5
          IF        @EQUAL
            MOVE      "Taxi",XEDMDARD
            GOTO      EDEA9999
          ENDIF 
.
EDEA9999  RETURN
+
.**************************************************************************
.*                               EDED0000                                 *
.*               Populate Emergency Discharge Status Desc                 *
.**************************************************************************
.
EDED0000  MATCH     "1 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Admitted to ward/other admitted patient unit",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "2 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "ED service event completed; departed under own care",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "3 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Transferred to another hospital for admission",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "4 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Did not wait to be attended by medical officer",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "5 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Left at own risk",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "6 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Died in ED",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "7 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Dead on arrival, not treated in ED",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "8 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Referred to After Hours General Practitioner",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "9 ",PTCDUDF5
          IF        @EQUAL
            MOVE      "Unknown",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "10",PTCDUDF5
          IF        @EQUAL
            MOVE      "Admitted to ED Observation Ward",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "11",PTCDUDF5
          IF        @EQUAL
            MOVE      "Admitted to Hospital in the Home",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "12",PTCDUDF5
          IF        @EQUAL
            MOVE      "Admitted from Hospital in the Home",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "13",PTCDUDF5
          IF        @EQUAL
            MOVE      "Nursing Home",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "14",PTCDUDF5
          IF        @EQUAL
            MOVE      "Returned to Hospital in the Home",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "15",PTCDUDF5
          IF        @EQUAL
            MOVE      "Returned to Rehabilitation in the Home",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "16",PTCDUDF5
          IF        @EQUAL
            MOVE      "Returned to Hospital at the Home",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "17",PTCDUDF5
          IF        @EQUAL
            MOVE      "Transferred from Hospital in the Home",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "18",PTCDUDF5
          IF        @EQUAL
            MOVE      "Transferred from Rehabilitation in the Home",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "19",PTCDUDF5
          IF        @EQUAL
            MOVE      "Discharged after admission",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
          MATCH     "20",PTCDUDF5
          IF        @EQUAL
            MOVE      "Reversal",XEDSTDES
            GOTO      EDED9999
          ENDIF
.
EDED9999  RETURN
+
.**************************************************************************
.*                               INPA0000              Called by: DETA0000*
.*                      Get Inpatients Record Fields                      *
.**************************************************************************
.
INPA0000  PACK      KEY8,PMEXVISN,SP70
          CALL      RDPTMIS1                       * read patmi1af
          BRANCH    OVRCD,INPA1000
.
          MATCH     ADATE,SP70
          IF        !@EQUAL
            UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
            PACK      XIPADDAT,CCENT,CYEAR,HYPHEN,CMON,HYPHEN,CDAY,SP70
                                                   * IP Event Start Time
          ENDIF
          PACK      XIPADTIM,ATIME,SP70            * IP Event Start Time
          PACK      XWARDCOD,AWARD,SP70            * IP Ward Code
          PACK      XIPDIAGT,ADIAG1,SP70,SP70      * IP Diagnosis (text)
.
          MATCH     SP70,ACLSS
          IF        !@EQUAL
            MOVE      "P ",KEY2
            PACK      KEY5,KEY2,ACLSS,SP70
            CALL      RDCODE1                      * read patcodes
            BRANCH    OVRCD,INPA0050
.
            PACK      DIM1,THCSCOD
            MATCH     "1",DIM1
            IF        @EQUAL
              PACK      XADMCODE,DIM1,SP70           * Admission Type Code
              MOVE      "Elective",XADMDESC          * Admission Type Desc
            ENDIF
            MATCH     "2",DIM1
            IF        @EQUAL
              PACK      XADMCODE,DIM1,SP70           * Admission Type Code
              MOVE      "Urgent/Emergency",XADMDESC  * Admission Type Desc
            ENDIF
          ENDIF
.
INPA0050  MATCH     SP70,ASRCE
          IF        !@EQUAL
            MOVE      "S ",KEY2
            PACK      KEY5,KEY2,ASRCE,SP70
            CALL      RDCODE1                      * read patcodes
            BRANCH    OVRCD,INPA1000
.
            PACK      DIM2,THCSCOD
            PACK      XREFCODE,DIM2,SP70           * Referral Source Code
            MATCH     "00",XREFCODE
            GOTO      INPA0100 IF NOT EQUAL
.
            MOVE      "07",XREFCODE
            PACK      KEY8,AADMNO,SP70
            CALL      RDPTDAD1
            BRANCH    OVRCD,INPA0100
.
            PACK      KEY5,PTDAADTS,SP70
            CALL      RDPTVAD1
            BRANCH    OVRCD,INPA0100
.
            MATCH     "N",PTVADTYP
            IF        @EQUAL
              PACK    XREFCODE,ZERO,TWO
            ENDIF
            MATCH     "L",PTVADTYP
            IF        @EQUAL
              PACK    XREFCODE,ZERO,THREE
            ENDIF
            MATCH     "H",PTVADTYP
            IF        @EQUAL
              PACK    XREFCODE,ZERO,FOUR
            ENDIF
            MATCH     "P",PTVADTYP
            IF        @EQUAL
              PACK    XREFCODE,ZERO,FIVE
            ENDIF
            MATCH     "R",PTVADTYP
            IF        @EQUAL
              PACK    XREFCODE,ZERO,SIX
            ENDIF
            MOVE      XREFCODE,DIM2
.
INPA0100    MATCH     SP70,DIM2
            IF        !@EQUAL
              CALL      IPCS0000               * populate Referral Source Desc
            ENDIF
          ENDIF
.
INPA1000  PACK      KEY8,PMEXVISN,SP70  
          CALL      RDDSCH1                        * read patdschf
          BRANCH    OVRCD,INPA2000
.
          MATCH     DDATE,SP70
          IF        !@EQUAL
            UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
            PACK      XIPDISDT,CCENT,CYEAR,HYPHEN,CMON,HYPHEN,CDAY,SP70 
                                                   * IP Discharge Date
          ENDIF
          PACK      XIPDISTM,DTIME,SP70            * IP Discharge Time 
.
          MATCH     SP70,DDEST
          IF        !@EQUAL
            MOVE      "DD",KEY2
            PACK      KEY5,KEY2,DDEST,SP70
            CALL      RDCODE1                        * read patcodes
            BRANCH    OVRCD,INPA2000
.
            PACK      XIPSTCOD,TCINDC5,SP70            * IP Discharge Status
            MATCH     SP70,TCINDC5
            IF        !@EQUAL
              CALL      IPDD0000            * populate IP Discharge Status Desc
            ENDIF  
          ENDIF
.
INPA2000  PACK      KEY8,PMEXVISN,SP70 
          CALL      RDPTDAD1                       * read patdadaf
          BRANCH    OVRCD,INPA3000
.
          PACK      XTRANCOD,PTDAADTS,SP70         * Transfer Source Code
          PACK      XDESTCOD,PTDADCTS,SP70         * Transfer Destination Code
.
          MATCH     SP70,PTDAADTS
          IF        !@EQUAL
            PACK      KEY5,PTDAADTS,SP70
            CALL      RDPTVAD1                     * read patvadaf
            BRANCH    OVRCD,INPA2500
.
            PACK      XTRANDES,PTVADESC,SP70       * Transfer Source Desc
          ENDIF
. 
INPA2500  MATCH     SP70,PTDADCTS
          IF        !@EQUAL
            PACK      KEY5,PTDADCTS,SP70
            CALL      RDPTVAD1                     * read patvadaf
            BRANCH    OVRCD,INPA3000
.
            PACK      XDESTDES,PTVADESC,SP70       * Transfer Destination Desc
          ENDIF
.
INPA3000  MATCH     SP70,AWARD
          IF        !@EQUAL
            PACK    KEY6,AWARD,SP70        
            CALL    RDWARD1                        * read patwr1af 
            BRANCH  OVRCD,INPA4000
.
            PACK    XWARDDES,WBDESC,SP70           * IP Ward Description
            PACK    XBEDCODE,WEFRBT,SP70           * Bed Type Code
.
            MATCH   SP70,WEFRBT
            IF      !@EQUAL
              MOVE    "BT",KEY2
              PACK    KEY5,KEY2,WEFRBT,SP70
              CALL    RDCODE1                        * read patcodes
              BRANCH  OVRCD,INPA4000
.
              PACK    XBEDDESC,TDESC,SP70            * Bed Type Desc
            ENDIF
          ENDIF
.
INPA4000  PACK      KEY13,PMEXVISN,SP70
          CALL      RSPTECD1
          CALL      RKPTECD1                       * read patecdaf
          BRANCH    OVRCD,INPA9999
.
          PACK      XIPDIAGC,PTEDCODE,SP70         * IP Diagnosis ICD10 Code
.
          MATCH     SP70,PTEDCODE
          IF        !@EQUAL
            PACK      KEY9,PTEDCODE,SP70
            CALL      RDPTICD1
            BRANCH    OVRCD,INPA9999
.
            PACK      XIPDIAGD,DDESC,SP70          * IP Diagnosis ICD10 Desc
          ENDIF
.
INPA9999  RETURN
+
.**************************************************************************
.*                               IPCS0000                                 *
.*                  Populate Referral Source Description                  *
.**************************************************************************
.
IPCS0000     MATCH     "01",DIM2
            IF        @EQUAL
              MOVE      "Home",XREFDESC  * Referral Source Desc
              GOTO      IPCS9999
            ENDIF 
.
            MATCH     "02",DIM2
            IF        @EQUAL
              MOVE      "Residential Aged Care Service",XREFDESC 
              GOTO      IPCS9999
            ENDIF 
.
            MATCH     "03",DIM2
            IF        @EQUAL
              MOVE      "Other Health Care",XREFDESC 
              GOTO      IPCS9999
            ENDIF 
.
            MATCH     "04",DIM2
            IF        @EQUAL
              MOVE      "Acute Hospital",XREFDESC 
              GOTO      IPCS9999
            ENDIF 
.
            MATCH     "05",DIM2
            IF        @EQUAL
              MOVE      "Psychiatric Hospital",XREFDESC 
              GOTO      IPCS9999
            ENDIF 
.
            MATCH     "06",DIM2
            IF        @EQUAL
              MOVE      "Prison",XREFDESC 
              GOTO      IPCS9999
            ENDIF 
.
            MATCH     "07",DIM2
            IF        @EQUAL
              MOVE      "Other",XREFDESC 
              GOTO      IPCS9999
            ENDIF 
.
IPCS9999  RETURN
+
.**************************************************************************
.*                               IPDD0000                                 *
.*                   Populate IP Discharge Status Desc                    *
.**************************************************************************
.
IPDD0000  MATCH     "1",TCINDC5
          IF        @EQUAL
            MOVE      "Transfer to an Acute Hospital",XIPSTDES 
            GOTO      IPDD9999
          ENDIF
. 
          MATCH     "2",TCINDC5
          IF        @EQUAL
            MOVE      "Transfer to a Nursing Home",XIPSTDES
            GOTO      IPDD9999
          ENDIF
.
          MATCH     "3",TCINDC5
          IF        @EQUAL
            MOVE      "Transfer to a Psychiatric Home",XIPSTDES
            GOTO      IPDD9999
          ENDIF
.
          MATCH     "4",TCINDC5
          IF        @EQUAL
            MOVE      "Transfer to an Other H.C.F.",XIPSTDES
            GOTO      IPDD9999
          ENDIF
.
          MATCH     "5",TCINDC5
          IF        @EQUAL
            MOVE      "Reclassified this Hospital",XIPSTDES
            GOTO      IPDD9999
          ENDIF
.
          MATCH     "6",TCINDC5
          IF        @EQUAL
            MOVE      "Left Against Medical Advice",XIPSTDES
            GOTO      IPDD9999
          ENDIF
.
          MATCH     "7",TCINDC5
          IF        @EQUAL
            MOVE      "Discharge from Leave",XIPSTDES
            GOTO      IPDD9999
          ENDIF
.
          MATCH     "8",TCINDC5
          IF        @EQUAL
            MOVE      "Died",XIPSTDES
            GOTO      IPDD9999
          ENDIF
.
          MATCH     "9",TCINDC5
          IF        @EQUAL
            MOVE      "Home/Other",XIPSTDES
            GOTO      IPDD9999
          ENDIF
.
IPDD9999  RETURN
+
.**************************************************************************
.*                               OUTP0000              Called by: DETA0000*
.*                      Get Outpatients Record Fields                     *
.**************************************************************************
.
OUTP0000  PACK     XOPSITCD,OBASITE,SP70            * OP Site Code
          PACK     XOPCLCOD,OBACLIN,SP70            * OP Clinic Code
          PACK     XCLTYCOD,OBACTYP,SP70            * Clinic Type Code
.
          MATCH     OBADATE,SP70
          IF        !@EQUAL
            UNPACK    OBADATE,CCENT,CYEAR,CMON,CDAY
            PACK      XOPAPTDT,CCENT,CYEAR,HYPHEN,CMON,HYPHEN,CDAY,SP70   
                                                    * Appointment Date 
          ENDIF
.
          PACK      KEY25,OBASITE,OBACLIN,OBADATE,OBASTRT,SP70
          CALL      RDSESA1                         * read outsesaf
          BRANCH    OVRCD,OUTP0500
.
          PACK      KEY28,OSESITE,OSECLIN,OSEDAY,OSESTRT,OSESSHNO,OSESSDAT,SP70
          CALL      RDOTHED1                        * read outhedaf
          BRANCH    OVRCD,OUTP0500
.
          PACK      XCLTIECD,OTHETCOD               * Tier 2 Code
.
          MATCH     SP70,OTHETCOD
          GOTO      OUTP0500 IF EQUAL
.
          MOVE      "NC",KEY2
          PACK      KEY5,KEY2,OTHETCOD,SP70
          CALL      RDCODE1                         * read patcodes
          BRANCH    OVRCD,OUTP0500
.
          PACK      XCLTIEDS,PTCDLDES,SP70          * Tier 2 Code Description
.
OUTP0500  PACK      XAPTSTCD,DOBASTAT,SP70          * Appointment Status Code
          MATCH     "4",DOBASTAT
          IF        @EQUAL
            MOVE      "Attended",XAPTSTDS           * Appointment Status Desc
          ENDIF
          MATCH     "5",DOBASTAT
          IF        @EQUAL
            MOVE      "Non Attendance",XAPTSTDS     * Appointment Status Desc
          ENDIF
.
OUTP0600  PACK      KEY8,PMEXVISN,SP70
          CALL      RDBOKB1
          BRANCH    OVRCD,OUTP0700
.
          PACK      XOUTCODE,OTBBOUTC,SP70          * Appointment Outcome Code
          MATCH     SP70,OTBBOUTC
          IF        !@EQUAL
            MOVE      "OZ",KEY2
            PACK      KEY5,KEY2,OTBBOUTC,SP70
            CALL      RDCODE1                       * patcodes
            BRANCH    OVRCD,OUTP0700
.
            PACK      XOUTDESC,TDESC,SP70           * Appointment Outcome Desc
          ENDIF
.
          PACK      XDELTYCD,OTBBSRVD,SP70          * Appt Delivery Type Code
          MATCH     SP70,OTBBSRVD
          IF        !@EQUAL
            MOVE      "sd",KEY2
            PACK      KEY5,KEY2,OTBBSRVD,SP70
            CALL      RDCODE1                       * patcodes
            BRANCH    OVRCD,OUTP0700
.
            PACK      XDELTYDS,TDESC,SP70           * Appointment Type Desc
          ENDIF
.
OUTP0700  PACK      XAPTTYCD,OBAVISIT,SP70          * Appointment Type Code
          MATCH     SP70,OBAVISIT
          IF        !@EQUAL
            MOVE      "CV",KEY2
            PACK      KEY5,KEY2,OBAVISIT,SP70
            CALL      RDCODE1                       * patcodes
            BRANCH    OVRCD,OUTP1000
. 
            PACK      XAPTTYDS,TDESC,SP70           * Appointment Type Desc
          ENDIF
.
OUTP1000  PACK      KEY6,OBASITE,SP70
          CALL      RDSITA1                         * read outsitaf
          BRANCH    OVRCD,OUTP2000
.
          PACK      XOPSITDS,OSTDESC,SP70           * OP Site Desc
.
OUTP2000  PACK      KEY20,OBASITE,OBACLIN,SP70
          CALL      RDSCLIA1
          CALL      RDKCLIA1                        * read outcliaf
          BRANCH    OVRCD,OUTP3000
.
          PACK      XOPCLDES,OCADESC,SP70           * Clinic Name
.
OUTP3000  MATCH     SP70,OBACTYP
          IF        !@EQUAL
            PACK      KEY12,OBASITE,OBACTYP,SP70
            CALL      RDCTYA1                         * read outctyaf
            BRANCH    OVRCD,OUTP9999
.
            PACK      XCLTYDES,OCTDESC,SP70           * Clinic Type Desc
          ENDIF
.
OUTP9999  RETURN
+
.**************************************************************************
.*                               MVAD0000              Called by: DETA0000*
.*                         Get MVA Details Fields                         *
.**************************************************************************
.
MVAD0000  MATCH     PMEXADAT,SP70
          IF        !@EQUAL
            UNPACK    PMEXADAT,CCENT,CYEAR,CMON,CDAY
            PACK      XACCDATE,CCENT,CYEAR,HYPHEN,CMON,HYPHEN,CDAY,SP70   
                                                    * Accident Date 
          ENDIF
.
          PACK      XACCLOCA,PMEXALOC,SP70          * Accident Location
          PACK      XREFNUMB,PMEXCLMN,SP70          * ICWA ID Claim Number
          PACK      XACCTYCD,PMEXMTYP,SP70          * Accident Type Code
.
          CALL      DSTI0000                        * Date Sent to ICWA
.
          MATCH     PMEXDAT2,SP70
          IF        !@EQUAL
            UNPACK    PMEXDAT2,CCENT,CYEAR,CMON,CDAY
            PACK      XDATRESP,CCENT,CYEAR,HYPHEN,CMON,HYPHEN,CDAY,SP1,PMEXTIM2,SP70
                                                    * Date ICWA Response
          ENDIF
.
          MATCH     SP70,PMEXMTYP
          IF        !@EQUAL
            MOVE      "RA",KEY2
            PACK      KEY5,KEY2,PMEXMTYP,SP70
            CALL      RDCODE1                       * read patcodes
            BRANCH    OVRCD,MVAD1000
            PACK      XACCTYDS,PTCDLDES,SP70        * Accident Type Desc
          ENDIF
.
MVAD1000  PACK      XMVASTCD,PMEXCAT2,SP70          * MVA Status Code
          MATCH     SP70,PMEXCAT2
          IF        !@EQUAL
            MOVE      "Vh",KEY2
            PACK      KEY5,KEY2,PMEXCAT2,SP70
            CALL      RDCODE1                       * read patcodes
            BRANCH    OVRCD,MVAD9999
            PACK      XMVASTDS,PTCDLDES,SP70        * MVA Status Desc     
          ENDIF
.
MVAD9999  RETURN
+
.**************************************************************************
.*                               DSTI0000              Called by: MVAD0000*
.*               Process Date Sent to ICWA XDATSENT Field                 *
.**************************************************************************
.
DSTI0000  PACK      PMEXDAT1,CURDATE
          PACK      PMEXTIM1,CTIMEIS
          CALL      UPPMEXT1        * update Date Sent to ICWA to current date
.
          UNPACK    PMEXDAT1,CCENT,CYEAR,CMON,CDAY
          PACK      XDATSENT,CCENT,CYEAR,SLASH,CMON,SLASH,CDAY,SP1,PMEXTIM1,SP70
.
          MOVE      "Vh",KEY2
          PACK      KEY5,KEY2,SP70
          CALL      RDSCODE1
DSTI0005  CALL      RDKCODE1
          BRANCH    OVRCD,DSTI9999 
.
          MATCH     "Vh",TCODE
          GOTO      DSTI9999 IF NOT EQUAL
.
          MATCH     "D",TCINDC1
          IF        @EQUAL
            MATCH     "ED",XVISTYPE
            IF        @EQUAL
              PACK      PMEXCAT2,ACODE,SP70
              CALL      UPPMEXT1
            ENDIF
.
            MATCH     "OP",XVISTYPE
            IF        @EQUAL
              PACK      PMEXCAT2,ACODE,SP70
              CALL      UPPMEXT1
            ENDIF

            MATCH     "IP",XVISTYPE
            IF        @EQUAL
              MATCH     "3",DASTAT
              IF        @EQUAL
                PACK      PMEXCAT2,ACODE,SP70
                CALL      UPPMEXT1
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     "A",TCINDC1
          IF        @EQUAL
            MATCH     "IP",XVISTYPE
            IF        @EQUAL
              MATCH     "2",DASTAT
              IF        @EQUAL
                PACK      PMEXCAT2,ACODE,SP70
                CALL      UPPMEXT1
              ENDIF
            ENDIF
          ENDIF
.
          GOTO      DSTI0005
.
DSTI9999  RETURN
+
.**************************************************************************
.*                               RMVE0000                                 *
.* Remove commas & double quotes from fields to prevent formatting issues *
.**************************************************************************
.
RMVE0000  REP       ", ",XUMRN
          REP       "#"'",XUMRN
          REP       ", ",XPTTLCOD
          REP       "#"'",XPTTLCOD
          REP       ", ",XPTTLDES
          REP       "#"'",XPTTLDES
          REP       ", ",XSURNAME
          REP       "#"'",XSURNAME
          REP       ", ",XFSTNAME
          REP       "#"'",XFSTNAME
          REP       ", ",XMIDNAME
          REP       "#"'",XMIDNAME
          REP       ", ",XDOB
          REP       "#"'",XDOB
          REP       ", ",XSEXCODE
          REP       "#"'",XSEXCODE
          REP       ", ",XSEXDESC
          REP       "#"'",XSEXDESC
          REP       ", ",XADDRESS
          REP       "#"'",XADDRESS
          REP       ", ",XSUBURB
          REP       "#"'",XSUBURB
          REP       ", ",XSTATE
          REP       "#"'",XSTATE
          REP       ", ",XPOSTCOD
          REP       "#"'",XPOSTCOD
          REP       ", ",XHOMEPH
          REP       "#"'",XHOMEPH
          REP       ", ",XMOBPH
          REP       "#"'",XMOBPH
          REP       ", ",XVISTYPE
          REP       "#"'",XVISTYPE
          REP       ", ",XHOSPCOD
          REP       "#"'",XHOSPCOD
          REP       ", ",XHOSPDES
          REP       "#"'",XHOSPDES
          REP       ", ",XVISITNO
          REP       "#"'",XVISITNO
          REP       ", ",XEDADDAT
          REP       "#"'",XEDADDAT
          REP       ", ",XEDADTIM
          REP       "#"'",XEDADTIM
          REP       ", ",XEDSITCD
          REP       "#"'",XEDSITCD
          REP       ", ",XEDSITDS
          REP       "#"'",XEDSITDS
          REP       ", ",XEDMDARC
          REP       "#"'",XEDMDARC
          REP       ", ",XEDMDARD
          REP       "#"'",XEDMDARD
          REP       ", ",XEDPDIAG
          REP       "#"'",XEDPDIAG
          REP       ", ",XICDCODE
          REP       "#"'",XICDCODE
          REP       ", ",XICDDESC
          REP       "#"'",XICDDESC
          REP       ", ",XEDDISDT
          REP       "#"'",XEDDISDT
          REP       ", ",XEDDISTM
          REP       "#"'",XEDDISTM
          REP       ", ",XEDSTCOD
          REP       "#"'",XEDSTCOD
          REP       ", ",XEDSTDES
          REP       "#"'",XEDSTDES
          REP       ", ",XEDTRCOD
          REP       "#"'",XEDTRCOD
          REP       ", ",XEDTRDES
          REP       "#"'",XEDTRDES
          REP       ", ",XIPADDAT
          REP       "#"'",XIPADDAT
          REP       ", ",XIPADTIM
          REP       "#"'",XIPADTIM
          REP       ", ",XIPDISDT
          REP       "#"'",XIPDISDT
          REP       ", ",XIPDISTM
          REP       "#"'",XIPDISTM
          REP       ", ",XADMCODE
          REP       "#"'",XADMCODE
          REP       ", ",XADMDESC
          REP       "#"'",XADMDESC
          REP       ", ",XREFCODE
          REP       "#"'",XREFCODE
          REP       ", ",XREFDESC
          REP       "#"'",XREFDESC
          REP       ", ",XTRANCOD
          REP       "#"'",XTRANCOD
          REP       ", ",XTRANDES
          REP       "#"'",XTRANDES
          REP       ", ",XIPDIAGT
          REP       "#"'",XIPDIAGT
          REP       ", ",XIPDIAGC
          REP       "#"'",XIPDIAGC
          REP       ", ",XIPDIAGD
          REP       "#"'",XIPDIAGD
          REP       ", ",XIPSTCOD
          REP       "#"'",XIPSTCOD
          REP       ", ",XIPSTDES
          REP       "#"'",XIPSTDES
          REP       ", ",XDESTCOD
          REP       "#"'",XDESTCOD
          REP       ", ",XDESTDES
          REP       "#"'",XDESTDES
          REP       ", ",XARTRCOD
          REP       "#"'",XARTRCOD
          REP       ", ",XARTRDES
          REP       "#"'",XARTRDES
          REP       ", ",XWARDCOD
          REP       "#"'",XWARDCOD
          REP       ", ",XWARDDES
          REP       "#"'",XWARDDES
          REP       ", ",XBEDCODE
          REP       "#"'",XBEDCODE
          REP       ", ",XBEDDESC
          REP       "#"'",XBEDDESC
          REP       ", ",XOPSITCD
          REP       "#"'",XOPSITCD
          REP       ", ",XOPSITDS
          REP       "#"'",XOPSITDS
          REP       ", ",XOPCLCOD
          REP       "#"'",XOPCLCOD
          REP       ", ",XOPCLDES
          REP       "#"'",XOPCLDES
          REP       ", ",XOPAPTDT
          REP       "#"'",XOPAPTDT
          REP       ", ",XAPTTYCD
          REP       "#"'",XAPTTYCD
          REP       ", ",XAPTTYDS
          REP       "#"'",XAPTTYDS
          REP       ", ",XCLTIECD
          REP       "#"'",XCLTIECD
          REP       ", ",XCLTIEDS
          REP       "#"'",XCLTIEDS
          REP       ", ",XCLTYCOD
          REP       "#"'",XCLTYCOD
          REP       ", ",XCLTYDES
          REP       "#"'",XCLTYDES
          REP       ", ",XAPTSTCD
          REP       "#"'",XAPTSTCD
          REP       ", ",XAPTSTDS
          REP       "#"'",XAPTSTDS
          REP       ", ",XOUTCODE
          REP       "#"'",XOUTCODE
          REP       ", ",XOUTDESC
          REP       "#"'",XOUTDESC
          REP       ", ",XDELTYCD
          REP       "#"'",XDELTYCD
          REP       ", ",XDELTYDS
          REP       "#"'",XDELTYDS
          REP       ", ",XACCDATE
          REP       "#"'",XACCDATE
          REP       ", ",XACCTYCD
          REP       "#"'",XACCTYCD
          REP       ", ",XACCTYDS
          REP       "#"'",XACCTYDS
          REP       ", ",XACCLOCA
          REP       "#"'",XACCLOCA
          REP       ", ",XREFNUMB
          REP       "#"'",XREFNUMB
          REP       ", ",XDATSENT
          REP       "#"'",XDATSENT
          REP       ", ",XDATRESP
          REP       "#"'",XDATRESP
          REP       ", ",XMVASTCD
          REP       "#"'",XMVASTCD
          REP       ", ",XMVASTDS
          REP       "#"'",XMVASTDS
.
RMVE9999  RETURN
+
.**************************************************************************
.*                               PRINTER0                                 *
.*                             Print report                               *
.**************************************************************************
.
PRINTER0  COMPARE   ZERO,ERRFND
          IF        @EQUAL
            CLOCK     TIME,CTIMEIS
            MOVE      ONE,ERRFND
            MOVE      ONE,ERRORS
            CALL      HEAD132
            UNPACK    CURDATE,CCENT,CYEAR,CMON,CDAY 
            PRINT     *40,PRGNAM
            PRINT     *40,"Run Date : ",CDAY,"/",CMON,"/",CCENT,CYEAR
            PRINT     *N;     
            CALL      UND132
            PRINT     *1,"|","Visit No|Event Date/Time    |UMRN    |Visit Type|Hosp Code|Accident Date|Accident Type Code|ICWA Ref Number     |",*132,"|"
            CALL      UND132
            MOVE      "6",CLNO
          ENDIF
.
          COMPARE   FIFTY5,CLNO
          IF        !@LESS
            CALL      HEAD132
            UNPACK    CURDATE,CCENT,CYEAR,CMON,CDAY
            PRINT     *40,PRGNAM
            PRINT     *40,"Run Date : ",CDAY,"/",CMON,"/",CCENT,CYEAR
            PRINT     *N;
            CALL      UND132
            PRINT     *1,"|","Visit No|Event Date/Time    |UMRN    |Visit Type|Hosp Code|Accident Date|Accident Type Code|ICWA Ref Number     |",*132,"|"
            CALL      UND132
            MOVE      "6",CLNO
          ENDIF
.
          MATCH     SP70,XEDADDAT
          IF        !@EQUAL
            PRINT     *1,"|",PMEXVISN,"|",XEDADDAT,SP1,XEDADTIM,"|",XUMRN,"|",XVISTYPE,SP8,"|",XHOSPCOD,SP6,"|",XACCDATE,SP3,"|",XACCTYCD,SP15,"|",XREFNUMB,"|",*132,"|"
          ENDIF
          MATCH     SP70,XIPADDAT
          IF        !@EQUAL
            PRINT     *1,"|",PMEXVISN,"|",XIPADDAT,SP1,XIPADTIM,"|",XUMRN,"|",XVISTYPE,SP8,"|",XHOSPCOD,SP6,"|",XACCDATE,SP3,"|",XACCTYCD,SP15,"|",XREFNUMB,"|",*132,"|"
          ENDIF
          MATCH     SP70,XOPAPTDT
          IF        !@EQUAL
            PRINT     *1,"|",PMEXVISN,"|",XOPAPTDT,SP9,"|",XUMRN,"|",XVISTYPE,SP8,"|",XHOSPCOD,SP6,"|",XACCDATE,SP3,"|",XACCTYCD,SP15,"|",XREFNUMB,"|",*132,"|"
          ENDIF
.
          ADD       ONE,CLNO
.
PRINTER9  RETURN
+
.**************************************************************************
.*                               CLEA0000              Called by: DETA0000*
.*                          Clear variables                               *
.**************************************************************************
.
CLEA0000  PACK      XUMRN,SP70
          PACK      XPTTLCOD,SP70
          PACK      XPTTLDES,SP70
          PACK      XSURNAME,SP70
          PACK      XFSTNAME,SP70
          PACK      XMIDNAME,SP70
          PACK      XDOB,SP70
          PACK      XSEXCODE,SP70
          PACK      XSEXDESC,SP70
          PACK      XADDRESS,SP70
          PACK      XSUBURB,SP70
          PACK      XSTATE,SP70
          PACK      XPOSTCOD,SP70
          PACK      XHOMEPH,SP70
          PACK      XMOBPH,SP70
          PACK      XVISTYPE,SP70
          PACK      XHOSPCOD,SP70
          PACK      XHOSPDES,SP70
          PACK      XVISITNO,SP70
          PACK      XEDADDAT,SP70
          PACK      XEDADTIM,SP70
          PACK      XEDSITCD,SP70
          PACK      XEDSITDS,SP70
          PACK      XEDMDARC,SP70
          PACK      XEDMDARD,SP70
          PACK      XEDPDIAG,SP70,SP70
          PACK      XICDCODE,SP70
          PACK      XICDDESC,SP70
          PACK      XEDDISDT,SP70
          PACK      XEDDISTM,SP70
          PACK      XEDSTCOD,SP70
          PACK      XEDSTDES,SP70
          PACK      XEDTRCOD,SP70
          PACK      XEDTRDES,SP70
          PACK      XIPADDAT,SP70
          PACK      XIPADTIM,SP70
          PACK      XIPDISDT,SP70
          PACK      XIPDISTM,SP70
          PACK      XADMCODE,SP70
          PACK      XADMDESC,SP70
          PACK      XREFCODE,SP70
          PACK      XREFDESC,SP70
          PACK      XTRANCOD,SP70
          PACK      XTRANDES,SP70
          PACK      XIPDIAGT,SP70,SP70
          PACK      XIPDIAGC,SP70
          PACK      XIPDIAGD,SP70
          PACK      XIPSTCOD,SP70
          PACK      XIPSTDES,SP70
          PACK      XDESTCOD,SP70
          PACK      XDESTDES,SP70
          PACK      XARTRCOD,SP70
          PACK      XARTRDES,SP70
          PACK      XWARDCOD,SP70
          PACK      XWARDDES,SP70
          PACK      XBEDCODE,SP70
          PACK      XBEDDESC,SP70
          PACK      XOPSITCD,SP70
          PACK      XOPSITDS,SP70
          PACK      XOPCLCOD,SP70
          PACK      XOPCLDES,SP70
          PACK      XOPAPTDT,SP70
          PACK      XAPTTYCD,SP70
          PACK      XAPTTYDS,SP70
          PACK      XCLTIECD,SP70
          PACK      XCLTIEDS,SP70
          PACK      XCLTYCOD,SP70
          PACK      XCLTYDES,SP70
          PACK      XAPTSTCD,SP70
          PACK      XAPTSTDS,SP70
          PACK      XOUTCODE,SP70
          PACK      XOUTDESC,SP70
          PACK      XDELTYCD,SP70
          PACK      XDELTYDS,SP70
          PACK      XACCDATE,SP70
          PACK      XACCTYCD,SP70
          PACK      XACCTYDS,SP70
          PACK      XACCLOCA,SP70
          PACK      XREFNUMB,SP70
          PACK      XDATSENT,SP70
          PACK      XDATRESP,SP70
          PACK      XMVASTCD,SP70
          PACK      XMVASTDS,SP70
.
CLEA9999  RETURN
+
.**************************************************************************
.*                               WRIT0000              Called by: ML0000  *
.*                      Write to the extract file                         *
.**************************************************************************
.
WRIT0000  STRIP     XUMRN                                        .01 
          WRITE     TEMP1,SEQ;*+,QUOTE,XUMRN,QUOTE,COMMA;
.
          STRIP     XPTTLCOD                                     .02
          WRITE     TEMP1,SEQ;*+,QUOTE,XPTTLCOD,QUOTE,COMMA;
.
          STRIP     XPTTLDES                                     .03
          WRITE     TEMP1,SEQ;*+,QUOTE,XPTTLDES,QUOTE,COMMA;
.
          STRIP     XSURNAME                                     .04
          WRITE     TEMP1,SEQ;*+,QUOTE,XSURNAME,QUOTE,COMMA;
.
          STRIP     XFSTNAME                                     .05
          WRITE     TEMP1,SEQ;*+,QUOTE,XFSTNAME,QUOTE,COMMA;
.
          STRIP     XMIDNAME                                     .06
          WRITE     TEMP1,SEQ;*+,QUOTE,XMIDNAME,QUOTE,COMMA;
.
          STRIP     XDOB                                         .07
          WRITE     TEMP1,SEQ;*+,QUOTE,XDOB,QUOTE,COMMA;
.
          STRIP     XSEXCODE                                     .08
          WRITE     TEMP1,SEQ;*+,QUOTE,XSEXCODE,QUOTE,COMMA;
.
          STRIP     XSEXDESC                                     .09
          WRITE     TEMP1,SEQ;*+,QUOTE,XSEXDESC,QUOTE,COMMA;
.
          STRIP     XADDRESS                                     .10
          WRITE     TEMP1,SEQ;*+,QUOTE,XADDRESS,QUOTE,COMMA;
.
          STRIP     XSUBURB                                      .11
          WRITE     TEMP1,SEQ;*+,QUOTE,XSUBURB,QUOTE,COMMA;
.
          STRIP     XSTATE                                       .12
          WRITE     TEMP1,SEQ;*+,QUOTE,XSTATE,QUOTE,COMMA;
.
          STRIP     XPOSTCOD                                     .13
          WRITE     TEMP1,SEQ;*+,QUOTE,XPOSTCOD,QUOTE,COMMA;
.
          STRIP     XHOMEPH                                      .14
          WRITE     TEMP1,SEQ;*+,QUOTE,XHOMEPH,QUOTE,COMMA;
.
          STRIP     XMOBPH                                       .15
          WRITE     TEMP1,SEQ;*+,QUOTE,XMOBPH,QUOTE,COMMA;
.
          STRIP     XVISTYPE                                     .16
          WRITE     TEMP1,SEQ;*+,QUOTE,XVISTYPE,QUOTE,COMMA;
.
          STRIP     XHOSPCOD                                     .17
          WRITE     TEMP1,SEQ;*+,QUOTE,XHOSPCOD,QUOTE,COMMA;
.
          STRIP     XHOSPDES                                     .18
          WRITE     TEMP1,SEQ;*+,QUOTE,XHOSPDES,QUOTE,COMMA;
.
          STRIP     XVISITNO                                     .19
          WRITE     TEMP1,SEQ;*+,QUOTE,XVISITNO,QUOTE,COMMA;
.
          STRIP     XEDADDAT                                     .20
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDADDAT,QUOTE,COMMA;
.
          STRIP     XEDADTIM                                     .21
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDADTIM,QUOTE,COMMA;
.
          STRIP     XEDSITCD                                     .22
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDSITCD,QUOTE,COMMA;
.
          STRIP     XEDSITDS                                     .23
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDSITDS,QUOTE,COMMA;
.
          STRIP     XEDMDARC                                     .24
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDMDARC,QUOTE,COMMA;
.
          STRIP     XEDMDARD                                     .25
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDMDARD,QUOTE,COMMA;
.
          STRIP     XEDPDIAG                                     .26
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDPDIAG,QUOTE,COMMA;
.
          STRIP     XICDCODE                                     .27
          WRITE     TEMP1,SEQ;*+,QUOTE,XICDCODE,QUOTE,COMMA;
.
          STRIP     XICDDESC                                     .28
          WRITE     TEMP1,SEQ;*+,QUOTE,XICDDESC,QUOTE,COMMA;
.
          STRIP     XEDDISDT                                     .29
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDDISDT,QUOTE,COMMA;
.
          STRIP     XEDDISTM                                     .30
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDDISTM,QUOTE,COMMA;
.
          STRIP     XEDSTCOD                                     .31
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDSTCOD,QUOTE,COMMA;
.
          STRIP     XEDSTDES                                     .32
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDSTDES,QUOTE,COMMA;
.
          STRIP     XEDTRCOD                                     .33
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDTRCOD,QUOTE,COMMA;
.
          STRIP     XEDTRDES                                     .34
          WRITE     TEMP1,SEQ;*+,QUOTE,XEDTRDES,QUOTE,COMMA;
.
          STRIP     XIPADDAT                                     .35
          WRITE     TEMP1,SEQ;*+,QUOTE,XIPADDAT,QUOTE,COMMA;
.
          STRIP     XIPADTIM                                     .36
          WRITE     TEMP1,SEQ;*+,QUOTE,XIPADTIM,QUOTE,COMMA;
.
          STRIP     XIPDISDT                                     .37
          WRITE     TEMP1,SEQ;*+,QUOTE,XIPDISDT,QUOTE,COMMA;
.
          STRIP     XIPDISTM                                     .38
          WRITE     TEMP1,SEQ;*+,QUOTE,XIPDISTM,QUOTE,COMMA;
.
          STRIP     XADMCODE                                     .39
          WRITE     TEMP1,SEQ;*+,QUOTE,XADMCODE,QUOTE,COMMA;
.
          STRIP     XADMDESC                                     .40
          WRITE     TEMP1,SEQ;*+,QUOTE,XADMDESC,QUOTE,COMMA;
.
          STRIP     XREFCODE                                     .41
          WRITE     TEMP1,SEQ;*+,QUOTE,XREFCODE,QUOTE,COMMA;
.
          STRIP     XREFDESC                                     .42
          WRITE     TEMP1,SEQ;*+,QUOTE,XREFDESC,QUOTE,COMMA;
.
          STRIP     XTRANCOD                                     .43
          WRITE     TEMP1,SEQ;*+,QUOTE,XTRANCOD,QUOTE,COMMA;
.
          STRIP     XTRANDES                                     .44
          WRITE     TEMP1,SEQ;*+,QUOTE,XTRANDES,QUOTE,COMMA;
.
          STRIP     XIPDIAGT                                     .45
          WRITE     TEMP1,SEQ;*+,QUOTE,XIPDIAGT,QUOTE,COMMA;
.
          STRIP     XIPDIAGC                                     .46
          WRITE     TEMP1,SEQ;*+,QUOTE,XIPDIAGC,QUOTE,COMMA;
.
          STRIP     XIPDIAGD                                     .47
          WRITE     TEMP1,SEQ;*+,QUOTE,XIPDIAGD,QUOTE,COMMA;
.
          STRIP     XIPSTCOD                                     .48
          WRITE     TEMP1,SEQ;*+,QUOTE,XIPSTCOD,QUOTE,COMMA;
.
          STRIP     XIPSTDES                                     .49
          WRITE     TEMP1,SEQ;*+,QUOTE,XIPSTDES,QUOTE,COMMA;
.
          STRIP     XDESTCOD                                     .50
          WRITE     TEMP1,SEQ;*+,QUOTE,XDESTCOD,QUOTE,COMMA;
.
          STRIP     XDESTDES                                     .51
          WRITE     TEMP1,SEQ;*+,QUOTE,XDESTDES,QUOTE,COMMA;
.
          STRIP     XARTRCOD                                     .52
          WRITE     TEMP1,SEQ;*+,QUOTE,XARTRCOD,QUOTE,COMMA;
.
          STRIP     XARTRDES                                     .53
          WRITE     TEMP1,SEQ;*+,QUOTE,XARTRDES,QUOTE,COMMA;
.
          STRIP     XWARDCOD                                     .54
          WRITE     TEMP1,SEQ;*+,QUOTE,XWARDCOD,QUOTE,COMMA;
.
          STRIP     XWARDDES                                     .55
          WRITE     TEMP1,SEQ;*+,QUOTE,XWARDDES,QUOTE,COMMA;
.
          STRIP     XBEDCODE                                     .56
          WRITE     TEMP1,SEQ;*+,QUOTE,XBEDCODE,QUOTE,COMMA;
.
          STRIP     XBEDDESC                                     .57
          WRITE     TEMP1,SEQ;*+,QUOTE,XBEDDESC,QUOTE,COMMA;
.
          STRIP     XOPSITCD                                     .58
          WRITE     TEMP1,SEQ;*+,QUOTE,XOPSITCD,QUOTE,COMMA;
.
          STRIP     XOPSITDS                                     .59
          WRITE     TEMP1,SEQ;*+,QUOTE,XOPSITDS,QUOTE,COMMA;
.
          STRIP     XOPCLCOD                                     .60
          WRITE     TEMP1,SEQ;*+,QUOTE,XOPCLCOD,QUOTE,COMMA;
.
          STRIP     XOPCLDES                                     .61
          WRITE     TEMP1,SEQ;*+,QUOTE,XOPCLDES,QUOTE,COMMA;
.
          STRIP     XOPAPTDT                                     .62
          WRITE     TEMP1,SEQ;*+,QUOTE,XOPAPTDT,QUOTE,COMMA;
.
          STRIP     XAPTTYCD                                     .63
          WRITE     TEMP1,SEQ;*+,QUOTE,XAPTTYCD,QUOTE,COMMA;
.
          STRIP     XAPTTYDS                                     .64
          WRITE     TEMP1,SEQ;*+,QUOTE,XAPTTYDS,QUOTE,COMMA;
.
          STRIP     XCLTIECD                                     .65
          WRITE     TEMP1,SEQ;*+,QUOTE,XCLTIECD,QUOTE,COMMA;
.
          STRIP     XCLTIEDS                                     .66
          WRITE     TEMP1,SEQ;*+,QUOTE,XCLTIEDS,QUOTE,COMMA;
.
          STRIP     XCLTYCOD                                     .67
          WRITE     TEMP1,SEQ;*+,QUOTE,XCLTYCOD,QUOTE,COMMA;
.
          STRIP     XCLTYDES                                     .68
          WRITE     TEMP1,SEQ;*+,QUOTE,XCLTYDES,QUOTE,COMMA;
.
          STRIP     XAPTSTCD                                     .69
          WRITE     TEMP1,SEQ;*+,QUOTE,XAPTSTCD,QUOTE,COMMA;
.
          STRIP     XAPTSTDS                                     .70
          WRITE     TEMP1,SEQ;*+,QUOTE,XAPTSTDS,QUOTE,COMMA;
.
          STRIP     XOUTCODE                                     .71
          WRITE     TEMP1,SEQ;*+,QUOTE,XOUTCODE,QUOTE,COMMA;
.
          STRIP     XOUTDESC                                     .72
          WRITE     TEMP1,SEQ;*+,QUOTE,XOUTDESC,QUOTE,COMMA;
.
          STRIP     XDELTYCD                                     .73
          WRITE     TEMP1,SEQ;*+,QUOTE,XDELTYCD,QUOTE,COMMA;
.
          STRIP     XDELTYDS                                     .74
          WRITE     TEMP1,SEQ;*+,QUOTE,XDELTYDS,QUOTE,COMMA;
.
          STRIP     XACCDATE                                     .75
          WRITE     TEMP1,SEQ;*+,QUOTE,XACCDATE,QUOTE,COMMA;
.
          STRIP     XACCTYCD                                     .76
          WRITE     TEMP1,SEQ;*+,QUOTE,XACCTYCD,QUOTE,COMMA;
.
          STRIP     XACCTYDS                                     .77
          WRITE     TEMP1,SEQ;*+,QUOTE,XACCTYDS,QUOTE,COMMA;
.
          STRIP     XACCLOCA                                     .78
          WRITE     TEMP1,SEQ;*+,QUOTE,XACCLOCA,QUOTE,COMMA;
.
          STRIP     XREFNUMB                                     .79
          WRITE     TEMP1,SEQ;*+,QUOTE,XREFNUMB,QUOTE,COMMA;
.
          STRIP     XDATSENT                                     .80
          WRITE     TEMP1,SEQ;*+,QUOTE,XDATSENT,QUOTE,COMMA;
.
          STRIP     XDATRESP                                     .81
          WRITE     TEMP1,SEQ;*+,QUOTE,XDATRESP,QUOTE,COMMA;
.
          STRIP     XMVASTCD                                     .82
          WRITE     TEMP1,SEQ;*+,QUOTE,XMVASTCD,QUOTE,COMMA;
.
          STRIP     XMVASTDS                                     .83
          WRITE     TEMP1,SEQ;*+,QUOTE,XMVASTDS,QUOTE
.
          GOTO     WRIT9999
.
WRIT9999  RETURN
+
.******************************************************************************
.*                                   WRHEAD00                                 *
.*                      Write header record / column names                    *
.******************************************************************************
.
WRHEAD00  WRITE     TEMP1,SEQ;"UMRN":                                      * 1
                              COMMA,"PATIENT_TITLE_CODE":                  * 2
                              COMMA,"PATIENT_TITLE_DESC":                  * 3
                              COMMA,"SURNAME":                             * 4
                              COMMA,"FIRST_FORENAME":                      * 5
                              COMMA,"SECOND_FORENAME":                     * 6
                              COMMA,"DATE_OF_BIRTH":                       * 7
                              COMMA,"SEX_CODE":                            * 8 
                              COMMA,"SEX_DESC":                            * 9
                              COMMA,"RESIDENTIAL_ADDRESS_1":               * 10
                              COMMA,"SUBURB":                              * 11
                              COMMA,"STATE_OR_TERRITORY":                  * 12 
                              COMMA,"POSTCODE":                            * 13
                              COMMA,"HOME_PHONE":                          * 14
                              COMMA,"MOBILE_PHONE":                        * 15
                              COMMA,"VISIT_TYPE":                          * 16
                              COMMA,"SERVICING_HOSPITAL_CODE":             * 17
                              COMMA,"SERVICING_HOSPITAL_DESC":             * 18
                              COMMA,"VISIT_NUMBER":                        * 19
                              COMMA,"ED_ADMISSION_DATE":                   * 20
                              COMMA,"ED_ADMISSION_TIME":                   * 21
                              COMMA,"EMR_SITE_CODE":                       * 22
                              COMMA,"EMR_SITE_DESC":                       * 23
                              COMMA,"ED_MODE_OF_ARRIVAL_CODE":             * 24
                              COMMA,"ED_MODE_OF_ARRIVAL_DESC":             * 25
                              COMMA,"ED_PRIMARY_DIAGNOSIS":                * 26
                              COMMA,"ED_DISCHARGE_DIAGNOSIS_ICD10_CODE":   * 27
                              COMMA,"ED_DISCHARGE_DIAGNOSIS_ICD10_DESC":   * 28
                              COMMA,"ED_DISCHARGE_DATE":                   * 29
                              COMMA,"ED_DISCHARGE_TIME":                   * 30
                              COMMA,"ED_DISCHARGE_STATUS_CODE":            * 31
                              COMMA,"ED_DISCHARGE_STATUS_DESC":            * 32 
                              COMMA,"ED_TRIAGE_CATEGORY_CODE":             * 33
                              COMMA,"ED_TRIAGE_CATEGORY_DESC":             * 34
                              COMMA,"IP_ADMISSION_DATE":                   * 35
                              COMMA,"IP_ADMISSION_TIME":                   * 36
                              COMMA,"IP_DISCHARGE_DATE":                   * 37
                              COMMA,"IP_DISCHARGE_TIME":                   * 38
                              COMMA,"IP_ADMISSION_TYPE_CODE":              * 39
                              COMMA,"IP_ADMISSION_TYPE_DESC":              * 40
                              COMMA,"IP_REFERRAL_SOURCE_CODE":             * 41
                              COMMA,"IP_REFERRAL_SOURCE_DESC":             * 42 
                              COMMA,"IP_TRANSFER_SOURCE_CODE":             * 43
                              COMMA,"IP_TRANSFER_SOURCE_DESC":             * 44
                              COMMA,"IP_DIAGNOSIS_TEXT":                   * 45
                              COMMA,"IP_DIAGNOSIS_ICD10_CODE":             * 46
                              COMMA,"IP_DIAGNOSIS_ICD10_DESC":             * 47
                              COMMA,"IP_DISCHARGE_STATUS_CODE":            * 48
                              COMMA,"IP_DISCHARGE_STATUS_DESC":            * 49
                              COMMA,"IP_TRANSFER_DESTINATION_CODE":        * 50
                              COMMA,"IP_TRANSFER_DESTINATION_DESC":        * 51
                              COMMA,"IP_ARRIVAL_TRANSPORT_CODE":           * 52
                              COMMA,"IP_ARRIVAL_TRANSPORT_DESC":           * 53
                              COMMA,"IP_WARD_CODE":                        * 54
                              COMMA,"IP_WARD_DESC":                        * 55
                              COMMA,"IP_BED_TYPE_CODE":                    * 56
                              COMMA,"IP_BED_TYPE_DESC":                    * 57
                              COMMA,"OP_SITE_CODE":                        * 58
                              COMMA,"OP_SITE_DESC":                        * 59
                              COMMA,"OP_CLINIC_CODE":                      * 60
                              COMMA,"OP_CLINIC_DESC":                      * 61
                              COMMA,"OP_APPOINTMENT_DATE":                 * 62
                              COMMA,"OP_APPOINTMENT_TYPE_CODE":            * 63
                              COMMA,"OP_APPOINTMENT_TYPE_DESC":            * 64
                              COMMA,"OP_CLINIC_TIER_2_CODE":               * 65
                              COMMA,"OP_CLINIC_TIER_2_DESC":               * 66 
                              COMMA,"OP_CLINIC_TYPE_CODE":                 * 67
                              COMMA,"OP_CLINIC_TYPE_DESC":                 * 68
                              COMMA,"OP_APPOINTMENT_STATUS_CODE":          * 69
                              COMMA,"OP_APPOINTMENT_STATUS_DESC":          * 70
                              COMMA,"OP_APPOINTMENT_OUTCOME_CODE":         * 71
                              COMMA,"OP_APPOINTMENT_OUTCOME_DESC":         * 72
                              COMMA,"OP_APPOINTMENT_DELIVERY_TYPE_CODE":   * 73
                              COMMA,"OP_APPOINTMENT_DELIVERY_TYPE_DESC":   * 74
                              COMMA,"ACCIDENT_DATE":                       * 75
                              COMMA,"ACCIDENT_TYPE_CODE":                  * 76
                              COMMA,"ACCIDENT_TYPE_DESC":                  * 77
                              COMMA,"ACCIDENT_LOCATION":                   * 78
                              COMMA,"REFERENCE_NUMBER":                    * 79
                              COMMA,"DATE_SENT_TO_ICWA":                   * 80
                              COMMA,"DATE_ICWA_RESPONSE":                  * 81
                              COMMA,"MVA_STATUS_CODE":                     * 82
                              COMMA,"MVA_STATUS_DESC"                      * 83
.
WRHEAD99  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CLPMSEXT
          INC       CLPATTRN
          INC       CLPATRE1
          INC       CLNHIMAS
          INC       CLOUTCAN
          INC       CLOUTRSH
          INC       CLPMSPX2
          INC       CLPATDSC
          INC       SEXDSCIO
          INC       UPLVALDS
          INC       AAEDE1IO/INC
          INC       ALLREFIO/INC
          INC       ALLLNKIO/INC
          INC       ALLQUEIO/INC
          INC       EMRVISIO/INC
          INC       EMRICDIO/INC
          INC       EMRVCDIO/INC
          INC       EMRSITIO/INC
          INC       HL7CISIO/INC
          INC       HL7INBIO/INC
          INC       NHIMASIO/INC
          INC       IBAPOSIO/INC
          INC       OUTBOAIO/INC
          INC       PATCODIO/INC
          INC       PATDADIO/INC
          INC       PATHSPIO/INC
          INC       PATMA1IO/INC
          INC       PATRE1IO/INC
          INC       PATECDIO/INC
          INC       PATMI1IO/INC
          INC       PMSBRQIO/INC
          INC       PATNIDIO/INC
          INC       PATTRNIO/INC
          INC       PATICDIO/INC
          INC       PATDSCIO/INC            * Discharge file
          INC       PATVADIO/INC
          INC       PATWR1IO/INC
          INC       PMSVX1IO/INC            * Visit Extension File 
          INC       PMSPX2IO/INC            * PMI Extension File
          INC       PMSEXTIO/INC
          INC       PMSCHAIO/INC
          INC       PMSTLEIO/INC
          INC       PATVISIO/INC
          INC       PATIN1IO/INC
          INC       PMSQPTIO/INC
          INC       OUTBB1IO/INC
          INC       OUTSITIO/INC
          INC       OUTCLIIO/INC
          INC       OUTRSHIO/INC
          INC       OUTCANIO/INC
          INC       OUTCTYIO/INC
          INC       OUTHEDIO/INC
          INC       OUTMA1IO/INC
          INC       OUTSESIO/INC
          INC       WEBSECIO/INC
          INC       PATHSPKY/PBL
.
          INC       BRHLCOMN
          INC       PMIGTNID
          INC       DGCLICEC
          INC       DGCLICAC
          INC       DGCLICOB
          INC       DGCLII13
