.******************************************************************************
.* System    :   Datagate                                                     *
.* Program   :   DGSRVOUT                                                     *
.* Desc      :   HL7 Outbound Server                                          *
.******************************************************************************
.* Date      :   10/12/2000                                                   *
.* Author    :   Dean Cramer                                                  *
.* Function  :   This program receives message from Datagate & writes them to *
.*               IBA files                                                    *
.* Mods      :                                                                *
.*        V5.08.01  14/12/2000  Greg Horvat                                   *
.*                  Changed to not reopen the server connection each time a   *
.*                  message is sent                                           *
.*                                                                            *
.******************************************************************************
.
          INC       STD002FD
.
          INC       HL7DSCFD/INC
          INC       HL7ERRFD/INC
          INC       HL7EVNFD/INC
          INC       HL7MRGFD/INC
          INC       HL7MSAFD/INC
          INC       HL7MSHFD/INC
          INC       HL7NK1FD/INC
          INC       HL7OUTFD/INC
          INC       HL7PIDFD/INC
          INC       HL7PV1FD/INC
          INC       HL7QRDFD/INC
          INC       HL7ZADFD/INC
          INC       HL7ZIDFD/INC
          INC       HL7ZPNFD/INC
          INC       PATCONFD/INC
.
DGATEOUT  DFILE                                   * datagate outbound file
.
. ----- Program variables -----
.
A04REC    FORM      8                       * A04 received counter
A19REC    FORM      8                       * A19 received counter
A28REC    FORM      8                       * A28 received counter
A31REC    FORM      8                       * A31 received counter
A34REC    FORM      8                       * A34 received counter
.
HL7CMP    DIM       127[20]
HL7STR    DIM       127
JUSTNO    FORM      2                       * Right justification amount
LJUSCODE  DIM       80                      * Left justified code
MESSID    FORM      20
MESSTYPE  DIM       3                       * message type
NEXTSEG   DIM       4
RJUSCODE  DIM       80                      * Right justified code
SEGID     DIM       3
.
. ----- Program constants -----
.
CARET     INIT      "^"
CRFORM    INIT      015
SP127     INIT      "                                          ":
                    "                                          ":
                    "                                           "
.
PRGID     INIT      "DGSRVOUT"
PRGNAM    INIT      "HL7 Outbound Server"
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                       Controlling Logic (Mainline code)                    *
.******************************************************************************
ML0000    CALL      SETX0000                * Setup common variables
.
.....          MOVE      "sh /mnt/3/dbs/508/nz/hl7_clear",KEY99
.....          EXECUTE   KEY99,TASKID
.
          CALL      INIT0000                * Initialise variables & open files
          BRANCH    OVRCD,ML9999
.
          CALL      BACK0000                * Display background screen
          CALL      RDOT0000                * Read HL7 outbound file
          CLOSE     DGATEOUT
.
ML9999    STOP
+
.******************************************************************************
.*                                  INIT0000              Called by: ML0000   *
.*                      Initialise Varibales & Open Files                     *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"hl7dscaf";
          OPEN      HL7DSC01,"hl7dscaf"
.
          DISPLAY   *P64:24,"hl7erraf";
          OPEN      HL7ERR01,"hl7erraf"
.
          DISPLAY   *P64:24,"hl7evnaf";
          OPEN      HL7EVN01,"hl7evnaf"
.
          DISPLAY   *P64:24,"hl7mrgaf";
          OPEN      HL7MRG01,"hl7mrgaf"
.
          DISPLAY   *P64:24,"hl7msaaf";
          OPEN      HL7MSA01,"hl7msaaf"
.
          DISPLAY   *P64:24,"hl7mshaf";
          OPEN      HL7MSH01,"hl7mshaf"
.
          DISPLAY   *P64:24,"hl7nk1af";
          OPEN      HL7NK101,"hl7nk1af"
.
          DISPLAY   *P64:24,"hl7outaf";
          OPEN      HL7OUT01,"hl7outaf"
.
          DISPLAY   *P64:24,"hl7pidaf";
          OPEN      HL7PID01,"hl7pidaf"
.
          DISPLAY   *P64:24,"hl7pv1af";
          OPEN      HL7PV101,"hl7pv1af"
.
          DISPLAY   *P64:24,"hl7qrdaf";
          OPEN      HL7QRD01,"hl7qrdaf"
.
          READ      CONTROLF,HUND05;*1,PTCNACTI,*46,PTCNOTSN
.
          IF        PTCNACTI=1
            DISPLAY   *P64:24,"hl7zadaf";
            OPEN      HL7ZAD01,"hl7zadaf"
.
            DISPLAY   *P64:24,"hl7zidaf";
            OPEN      HL7ZID01,"hl7zidaf"
.
            DISPLAY   *P64:24,"hl7zpnaf";
            OPEN      HL7ZPN01,"hl7zpnaf"
          ENDIF
.
          MOVE      ZERO,OVRCD
          STRIP     PTCNOTSN
          TRAP      OVERCOND IF IO
          OPEN      DGATEOUT,PTCNOTSN       * Open outbound TCP/IP port
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      INIT9000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"Service not currently available.  ";
          CALL      HITEXIT
          GOTO      INIT9500
.
INIT9000  MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9500  MOVE      ONE,EXIT
INIT9999  RETURN
+
.******************************************************************************
.*                                  BACK0000              Called by: ML0000   *
.*                          Display Background Screen                         *
.******************************************************************************
BACK0000  DISPLAY   *P1:4,*EF
          BOX       16,3,6,78,23
          HLINE     *G37,11,3,78
          HLINE     *G33,11,3,3
          HLINE     *G34,11,78,78
          DISPLAY   *P30:6,*HON,*V2LON," MESSAGE STATISTICS ";
.
          CALL      IBACLOCK
          PACK      KEY8,CCC,CYY,CMM,CDD
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          REP       " 0",CPCDATE
          CLOCK     TIME,CTIMEIS
.
          DISPLAY   *P5:8,"Application Activated on ",*V2LON,CPCDATE,*HOFF:
                    "  @  ",*V2LON,CTIMEIS,*HOFF:
                    *P5:10,"Current status... ",*V2LON,*HON,"Waiting";
.
          DISPLAY   *P5:12,*V2LON,*ULON,"Messages",SP20,SP3:
                    *P39:12,"Received",SP8;
.
          DISPLAY   *P5:14,"Register A Patient        (A04)":
                    *P5:15,"Patient Query             (A19)":
                    *P5:16,"Add Person Information    (A28)":
                    *P5:17,"Update Person Information (A31)":
                    *P5:18,"Query Patient Information (A34)";
.
          MOVE      ONE,FORM2
          REPEAT
            STORE     ZERO,FORM2,A04REC,A19REC,A28REC,A31REC,A34REC
            ADD       ONE,FORM2
          UNTIL     FORM2>5
.
BACK9000  MOVE      ZERO,EXIT
BACK9999  RETURN
+
.******************************************************************************
.*                                  RDOT0000              Called by: ML0000   *
.*                           Read HL7 Outbound File                           *
.******************************************************************************
RDOT0000  DISPLAY   *P23:10,SP20,*P23:10,*V2LON,*HON,"Waiting";
.
. ----- Message header segment -----
.
RDOT1000  MOVE      SP3,SEGID
          READ      DGATEOUT;SEGID;
          GOTO      RDOT1000 IF OVER
.
          MATCH     "MSH",SEGID
          GOTO      RDOT8000 IF NOT EQUAL   * Not message header segment
.
          CALL      RMSH0000                * Read message header segment
          BRANCH    OVRCD,RDOT8000
.
. ----- Message acknowledgment segment -----
.
          MOVE      SP3,SEGID
          READ      DGATEOUT;SEGID;
          GOTO      RDOT8000 IF OVER
.
          MATCH     "MSA",SEGID
          GOTO      RDOT8000 IF NOT EQUAL   * Not message acknowledgement seg
.
          CALL      RMSA0000                * Read message acknowledgement seg
          BRANCH    OVRCD,RDOT8000
.
          CALL      CLER0000                * Clear counters
          UNPACK    MSH009,KEY4,MESSTYPE
          DISPLAY   *P23:10,*V2LON,*HON,"Processing":
                    *HOFF,*V2LON," (",MESSTYPE,")"
.
          PACK      LJUSCODE,MSA002,SP127
          MOVE      "20",JUSTNO
          CALL      RJUS0000                * Right justify code
          MOVE      RJUSCODE,MSA002
          MOVE      MSA002,MESSID
.
          CALL      WMSH0000                * Write message header segment
          CALL      WMSA0000                * Write message acknowledgement seg
.
RDOT2000  MOVE      SP3,SEGID
          READ      DGATEOUT;SEGID;
          GOTO      RDOT7000 IF OVER
.
          MATCH     SP3,SEGID
          GOTO      RDOT7000 IF EQUAL       * Blank segment id
.
          MATCH     "DSC",SEGID
          GOTO      RDOT3000 IF EQUAL       * Continuation pointer segment
.
          MATCH     "ERR",SEGID
          GOTO      RDOT3100 IF EQUAL       * Error segment
.
          MATCH     "EVN",SEGID
          GOTO      RDOT3200 IF EQUAL       * Event type segment
.
          MATCH     "MRG",SEGID
          GOTO      RDOT3300 IF EQUAL       * Merge patient info segment
.
          MATCH     "NK1",SEGID
          GOTO      RDOT3400 IF EQUAL       * Next of kin segment
.
          MATCH     "PID",SEGID
          GOTO      RDOT3500 IF EQUAL       * Patient id segment
.
          MATCH     "PV1",SEGID
          GOTO      RDOT3600 IF EQUAL       * Patient visit segment
.
          MATCH     "QRD",SEGID
          GOTO      RDOT3700 IF EQUAL       * Query definition segment
.
          MATCH     "ZID",SEGID
          GOTO      RDOT3800 IF EQUAL       * Patient id extension segment
          GOTO      RDOT7000
.
. ----- Continuation pointer segment -----
.
RDOT3000  CALL      RDSC0000                * Read continuation pointer segment
          BRANCH    OVRCD,RDOT7000
.
          CALL      WDSC0000                * Write continuation pointer segment
          GOTO      RDOT2000
.
. ----- Error segment -----
.
RDOT3100  CALL      RERR0000                * Read error segment
          BRANCH    OVRCD,RDOT7000
.
          CALL      WERR0000                * Write error segment
          GOTO      RDOT2000
.
. ----- Event type segment -----
.
RDOT3200  CALL      REVN0000                * Read event type segment
          BRANCH    OVRCD,RDOT7000
.
          CALL      WEVN0000                * Write event type segment
          GOTO      RDOT2000
.
. ----- Merge patient info segment -----
.
RDOT3300  CALL      RMRG0000                * Read merge patient info segment
          BRANCH    OVRCD,RDOT7000
.
          CALL      WMRG0000                * Write mesrge patient info segment
          GOTO      RDOT2000
.
. ----- Next of kin segment -----
.
RDOT3400  CALL      RNK10000                * Read next of kin segment
          BRANCH    OVRCD,RDOT7000
.
          CALL      WNK10000                * Write next of kin segment
          GOTO      RDOT2000
.
. ----- Patient id segment -----
.
RDOT3500  CALL      RPID0000                * Read patient id segment
          BRANCH    OVRCD,RDOT7000
.
          CALL      WPID0000                * Write patient id segment
          GOTO      RDOT2000
.
. ----- Patient visit segment -----
.
RDOT3600  CALL      RPV10000                * Read patient visit segment
          BRANCH    OVRCD,RDOT7000
.
          CALL      WPV10000                * Write patient visit segment
          GOTO      RDOT2000
.
. ----- Query definition segment -----
.
RDOT3700  CALL      RQRD0000                * Read query definition segment
          BRANCH    OVRCD,RDOT7000
.
          CALL      WQRD0000                * Write query definition segment
          GOTO      RDOT2000
.
. ----- Patient id extension segment -----
.
RDOT3800  COMPARE   ONE,PTCNACTI
          GOTO      RDOT2000 IF NOT EQUAL   * Not using ACT interface
.
          CALL      RZID0000                * Read patient id extension segment
          BRANCH    OVRCD,RDOT7000
.
          CALL      WZID0000                * Write patient id extension segment
          GOTO      RDOT2000
.
. ----- Finished, write header record -----
.
RDOT7000  CALL      DISP0000                * Update screen display
          MOVE      MESSID,H7OUMESI
          CALL      IBACLOCK
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          CLOCK     TIME,CTIMEIS
          REP       " 0",CTIMEIS
          PACK      H7OUDTTM,KEY8,CTIMEIS,SP30
          MOVE      MESSTYPE,H7OUMETP
          MOVE      SP70,H7OUSPAR
          PACK      KEY20,H7OUMESI
          CALL      WRH7OUT1                * Write an outbound file record
.
RDOT8000  DISPLAY   *P23:10,SP20,*P23:10,*V2LON,*HON,"Waiting";
          READ      DGATEOUT;ANS
          WRITE     DGATEOUT;SP1
          GOTO      RDOT1000
.
RDOT9000  MOVE      ZERO,EXIT
RDOT9999  RETURN
+
.******************************************************************************
.*                                  CLER0000              Called by: RDOT0000 *
.*                               Clear Counters                               *
.******************************************************************************
CLER0000  MOVE      ZERO,DSCIN02
          MOVE      ZERO,ERRIN02
          MOVE      ZERO,EVNIN02
          MOVE      ZERO,MRGIN02
          MOVE      ZERO,MSAIN02
          MOVE      ZERO,MSHIN02
          MOVE      ZERO,NK1IN02
          MOVE      ZERO,PIDIN02
          MOVE      ZERO,PV1IN02
          MOVE      ZERO,QRDIN02
          MOVE      ZERO,ZIDIN02
.
          MOVE      SP127,DSC002
          MOVE      SP127,ERR002
          MOVE      SP127,EVN007
          MOVE      SP127,MRG008
          MOVE      SP127,MSA007
          MOVE      SP127,MSH020
          MOVE      SP127,NK1038
          MOVE      SP127,PID031
          MOVE      SP127,PV1053
          MOVE      SP127,QRD013
          MOVE      SP127,ZID012
          MOVE      SP127,ZAD010
          MOVE      SP127,ZPN009
.
CLER9000  MOVE      ZERO,EXIT
CLER9999  RETURN
+
.******************************************************************************
.*                                  RJUS0000              Called by: RDOT0000 *
.*                           Right Justify Variable                           *
.******************************************************************************
RJUS0000  PACK      RJUSCODE,SP127
          RESET     LJUSCODE,JUSTNO
          MOVE      ZERO,FORM2
RJUS1000  CMATCH    SP1,LJUSCODE
          GOTO      RJUS2000 IF NOT EQUAL
.
          ADD       ONE,FORM2
          BUMP      LJUSCODE,-1
          GOTO      RJUS2000 IF EOS
.
          COMPARE   JUSTNO,FORM2
          GOTO      RJUS1000 IF LESS
.
RJUS2000  RESET     LJUSCODE
          CLEAR     RJUSCODE
          RESET     RJUSCODE,FORM2
          APPEND    LJUSCODE,RJUSCODE
          RESET     RJUSCODE
.
RJUS9000  MOVE      ZERO,EXIT
RJUS9999  RETURN
+
.******************************************************************************
.* RDSC0000 : Read Continuation Pointer Segment                               *
.******************************************************************************
RDSC0000  UNPACK    SP127,DSC00101
          UNPACK    SP127,DSC00102
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;DSC00101,DSC00102;
          GOTO      OVERCOND IF OVER
          RETURN
+
.******************************************************************************
.* RERR0000 : Read Error Segment                                              *
.******************************************************************************
RERR0000  UNPACK    SP127,ERR001
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;ERR001;
          GOTO      OVERCOND IF OVER
          RETURN
+
.******************************************************************************
.* REVN0000 : Read Event Type                                                 *
.******************************************************************************
REVN0000  UNPACK    SP127,EVN001,EVN002,EVN003,EVN004,EVN005
          UNPACK    SP127,EVN006
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;EVN001,EVN002,EVN003,EVN004,EVN005:
                             EVN006;
          GOTO      OVERCOND IF OVER
          RETURN
+
.******************************************************************************
.* RMRG0000 : Read Merge Information Segment                                  *
.******************************************************************************
RMRG0000  UNPACK    SP127,MRG001,MRG002,MRG003,MRG004,MRG005
          UNPACK    SP127,MRG006,MRG007
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;MRG001,MRG002,MRG003,MRG004,MRG005:
                             MRG006,MRG007;
          GOTO      OVERCOND IF OVER
          RETURN
+
.******************************************************************************
.* RMSA0000 : Read Message Acknowledgement Segment                            *
.******************************************************************************
RMSA0000  UNPACK    SP127,MSA001,MSA002,MSA003,MSA004,MSA005
          UNPACK    SP127,MSA006
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;MSA001,MSA002,MSA003,MSA004,MSA005:
                             MSA006;
          GOTO      OVERCOND IF OVER
          RETURN
+
.******************************************************************************
.* RMSH0000 : Read Message Header Segment                                     *
.******************************************************************************
RMSH0000  UNPACK    SP127,MSH001,MSH002
          UNPACK    SP127,MSH003
          UNPACK    SP127,MSH004
          UNPACK    SP127,MSH005
          UNPACK    SP127,MSH006
          UNPACK    SP127,MSH007,MSH008,MSH009,MSH010,MSH011,MSH012
          UNPACK    SP127,MSH013,MSH01401
          UNPACK    SP127,MSH01402,MSH015,MSH016,MSH017,MSH018
          UNPACK    SP127,MSH019
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;MSH002,MSH003,MSH004,MSH005:
                             MSH006,MSH007,MSH008,MSH009,MSH010:
                             MSH011,MSH012,MSH013,MSH01401,MSH01402:
                             MSH015,MSH016,MSH017,MSH018,MSH019;
          GOTO      OVERCOND IF OVER
          RETURN
+
.******************************************************************************
.* RNK10000 : Read Next Of Kin Segment                                        *
.******************************************************************************
RNK10000  UNPACK    SP127,NK1001,NK1002,NK1003
          UNPACK    SP127,NK1004
          UNPACK    SP127,NK1005,NK1006
          UNPACK    SP127,NK1007,NK1008,NK1009
          UNPACK    SP127,NK1010,NK1011,NK1012
          UNPACK    SP127,NK1013,NK1014,NK1015,NK1016,NK1017
          UNPACK    SP127,NK1018,NK1019,NK1020,NK1021,NK1022
          UNPACK    SP127,NK1023,NK1024,NK1025,NK1026
          UNPACK    SP127,NK1027,NK1028
          UNPACK    SP127,NK1029
          UNPACK    SP127,NK1030,NK1031
          UNPACK    SP127,NK1032
          UNPACK    SP127,NK1033,NK1034,NK1035,NK1036,NK1037
          BRANCH    PTCNACTI,RNK11000       * Using ACT interface
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;NK1001,NK1002,NK1003,NK1004,NK1005:
                             NK1006,NK1007,NK1008,NK1009,NK1010:
                             NK1011,NK1012,NK1013,NK1014,NK1015:
                             NK1016,NK1017,NK1018,NK1019,NK1020:
                             NK1021,NK1022,NK1023,NK1024,NK1025:
                             NK1026,NK1027,NK1028,NK1029,NK1030:
                             NK1031,NK1032,NK1033,NK1034,NK1035:
                             NK1036,NK1037;
          GOTO      OVERCOND IF OVER
          RETURN
.
RNK11000  UNPACK    SP127,NK100201,NK100202,NK100203,NK100204,NK100205
          UNPACK    SP127,NK100206,NK100207,NK100208
          UNPACK    SP127,NK100401,NK100402,NK100403,NK100404,NK100405
          UNPACK    SP127,NK100406,NK100407,NK100408,NK100409
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;NK1001:
                       *SS:0,NK100201,NK100202,NK100203,NK100204,NK100205:
                             NK100206,NK100207,NK100208,*SF:
                             NK1003:
                       *SS:0,NK100401,NK100402,NK100403,NK100404,NK100405:
                             NK100406,NK100407,NK100408,NK100409,*SF:
                             NK1005,NK1006,NK1007,NK1008,NK1009:
                             NK1010,NK1011,NK1012,NK1013,NK1014:
                             NK1015,NK1016,NK1017,NK1018,NK1019:
                             NK1020,NK1021,NK1022,NK1023,NK1024:
                             NK1025,NK1026,NK1027,NK1028,NK1029:
                             NK1030,NK1031,NK1032,NK1033,NK1034:
                             NK1035,NK1036,NK1037;
          GOTO      OVERCOND IF OVER
          RETURN
+
.******************************************************************************
.* RPID0000 : Read Patient Id Segment                                         *
.******************************************************************************
RPID0000  UNPACK    SP127,PID001,PID002,PID003,PID004
          UNPACK    SP127,PID005,PID006
          UNPACK    SP127,PID007,PID008,PID009,PID010
          UNPACK    SP127,PID011,PID012
          UNPACK    SP127,PID013,PID014
          UNPACK    SP127,PID015,PID016,PID017,PID018,PID019
          UNPACK    SP127,PID020,PID021,PID022,PID023,PID024
          UNPACK    SP127,PID025,PID026,PID027
          UNPACK    SP127,PID028,PID029,PID030
          BRANCH    PTCNACTI,RPID1000       * Using ACT interface
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;PID001,PID002,PID003,PID004,PID005:
                             PID006,PID007,PID008,PID009,PID010:
                             PID011,PID012,PID013,PID014,PID015:
                             PID016,PID017,PID018,PID019,PID020:
                             PID021,PID022,PID023,PID024,PID025:
                             PID026,PID027,PID028,PID029,PID030;
          GOTO      OVERCOND IF OVER
          RETURN
.
RPID1000  UNPACK    SP127,PID00506,PID00507,PID00508,PID00509,PID00510
          UNPACK    SP127,PID00511,PID00512,PID00513
          UNPACK    SP127,PID00901,PID00902,PID00903,PID00904,PID00905
          UNPACK    SP127,PID00906,PID00907,PID00908
          UNPACK    SP127,PID01106,PID01107,PID01108,PID01109,PID01110
          UNPACK    SP127,PID01111,PID01112,PID01113,PID01114
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;PID001,PID002,PID003,PID004:
                       *SS:0,PID00506,PID00507,PID00508,PID00509,PID00510:
                             PID00511,PID00512,PID00513,*SF:
                             PID006,PID007,PID008:
                       *SS:0,PID00901,PID00902,PID00903,PID00904,PID00905:
                             PID00906,PID00907,PID00908,*SF:
                             PID010:
                       *SS:0,PID01106,PID01107,PID01108,PID01109,PID01110:
                             PID01111,PID01112,PID01113,PID01114,*SF:
                             PID012,PID013,PID014,PID015,PID016:
                             PID017,PID018,PID019,PID020,PID021:
                             PID022,PID023,PID024,PID025,PID026:
                             PID027,PID028,PID029,PID030;
          GOTO      OVERCOND IF OVER
          RETURN
+
.******************************************************************************
.* RPV10000 : Read Patient Visit Segment                                      *
.******************************************************************************
RPV10000  UNPACK    SP127,PV1001,PV1002,PV1003,PV1004,PV1005
          UNPACK    SP127,PV1006
          UNPACK    SP127,PV1007,PV1008
          UNPACK    SP127,PV1009,PV1010
          UNPACK    SP127,PV1011,PV1012,PV1013,PV1014,PV1015
          UNPACK    SP127,PV1016,PV1017,PV1018,PV1019
          UNPACK    SP127,PV1020,PV1021,PV1022,PV1023,PV1024
          UNPACK    SP127,PV1025,PV1026,PV1027,PV1028,PV1029
          UNPACK    SP127,PV1030,PV1031,PV1032,PV1033,PV1034
          UNPACK    SP127,PV1035,PV1036,PV1037,PV1038,PV1039
          UNPACK    SP127,PV1040,PV1041,PV1042
          UNPACK    SP127,PV1043,PV1044
          UNPACK    SP127,PV1045,PV1046,PV1047,PV1048,PV1049
          UNPACK    SP127,PV1050,PV1051,PV1052
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;PV1001,PV1002,PV1003,PV1004,PV1005:
                             PV1006,PV1007,PV1008,PV1009,PV1010:
                             PV1011,PV1012,PV1013,PV1014,PV1015:
                             PV1016,PV1017,PV1018,PV1019,PV1020:
                             PV1021,PV1022,PV1023,PV1024,PV1025:
                             PV1026,PV1027,PV1028,PV1029,PV1030:
                             PV1031,PV1032,PV1033,PV1034,PV1035:
                             PV1036,PV1037,PV1038,PV1039,PV1040:
                             PV1041,PV1042,PV1043,PV1044,PV1045:
                             PV1046,PV1047,PV1048,PV1049,PV1050:
                             PV1051,PV1052;
          GOTO      OVERCOND IF OVER
          RETURN
+
.******************************************************************************
.* RQRD0000 : Read Query Definition Segment                                   *
.******************************************************************************
RQRD0000  UNPACK    SP127,QRD001,QRD002,QRD003,QRD004,QRD005
          UNPACK    SP127,QRD006,QRD007,QRD008
          UNPACK    SP127,QRD009,QRD010
          UNPACK    SP127,QRD011,QRD012
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;QRD001,QRD002,QRD003,QRD004,QRD005:
                             QRD006,QRD007,QRD008,QRD009,QRD010:
                             QRD011,QRD012;
          GOTO      OVERCOND IF OVER
          RETURN
+
.******************************************************************************
.* RZID0000 : Read Patient Id Extension Segment                               *
.******************************************************************************
RZID0000  UNPACK    SP127,ZID001,ZID002,ZID003,ZID004,ZID005
          UNPACK    SP127,ZID006,ZID007,ZID008,ZID009,ZID010
          UNPACK    SP127,ZID011
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;ZID001,ZID002,ZID003,ZID004,ZID005:
                             ZID006,ZID007,ZID008,ZID009,ZID010:
                             ZID011;
          GOTO      OVERCOND IF OVER
          RETURN
+
.******************************************************************************
.* WDSC0000 : Write Continuation Pointer Segment                              *
.******************************************************************************
WDSC0000  MOVE      MESSID,DSCIN01
          ADD       ONE,DSCIN02
          PACK      KEY22,DSCIN01,DSCIN02
          CALL      WRH7DSC1                * Write a cont pointer file record
.
WDSC9000  MOVE      ZERO,EXIT
WDSC9999  RETURN
+
.******************************************************************************
.* WERR0000 : Write Error Segment                                             *
.******************************************************************************
WERR0000  MOVE      MESSID,ERRIN01
          ADD       ONE,ERRIN02
          PACK      KEY22,ERRIN01,ERRIN02
          CALL      WRH7ERR1                * Write an error file record
.
WERR9000  MOVE      ZERO,EXIT
WERR9999  RETURN
+
.******************************************************************************
.* WEVN0000 : Write Event Type Segment                                        *
.******************************************************************************
WEVN0000  MOVE      MESSID,EVNIN01
          ADD       ONE,EVNIN02
          PACK      KEY22,EVNIN01,EVNIN02
          CALL      WRH7EVN1                * Write an event type file record
.
WEVN9000  MOVE      ZERO,EXIT
WEVN9999  RETURN
+
.******************************************************************************
.* WMRG0000 : Write Merge Patient Information Segment                         *
.******************************************************************************
WMRG0000  MOVE      MESSID,MRGIN01
          ADD       ONE,MRGIN02
          PACK      KEY22,MRGIN01,MRGIN02
          CALL      WRH7MRG1                * Write a merge patient info file re
.
WMRG9000  MOVE      ZERO,EXIT
WMRG9999  RETURN
+
.******************************************************************************
.* WMSA0000 : Write Message Acknowledgement Segment                           *
.******************************************************************************
WMSA0000  MOVE      MESSID,MSAIN01
          ADD       ONE,MSAIN02
          PACK      KEY22,MSAIN01,MSAIN02
          CALL      WRH7MSA1                * Write a message acknow file record
.
WMSA9000  MOVE      ZERO,EXIT
WMSA9999  RETURN
+
.******************************************************************************
.* WMSH0000 : Write Message Header Segment                                    *
.******************************************************************************
WMSH0000  MOVE      MESSID,MSHIN01
          ADD       ONE,MSHIN02
          PACK      KEY22,MSHIN01,MSHIN02
          CALL      WRH7MSH1                * Write a message header file record
.
WMSH9000  MOVE      ZERO,EXIT
WMSH9999  RETURN
+
.******************************************************************************
.* WNK10000 : Write Next Of Kin Segment                                       *
.******************************************************************************
WNK10000  MOVE      MESSID,NK1IN01
          ADD       ONE,NK1IN02
          PACK      KEY22,NK1IN01,NK1IN02
          CALL      WRH7NK11                * Write a next of kin file record
.
          COMPARE   ONE,PTCNACTI
          GOTO      WNK19000 IF NOT EQUAL   * Not using ACT interface
.
          MOVE      MESSID,ZPNIN01
          MOVE      MESSTYPE,ZPNIN02
          MOVE      NK1IN02,ZPNIN03
          MOVE      TWO,ZPNIN04
          MOVE      NK1001,ZPNIN05
          MOVE      NK100201,ZPN001
          MOVE      NK100202,ZPN002
          MOVE      NK100203,ZPN003
          MOVE      NK100204,ZPN004
          MOVE      NK100205,ZPN005
          MOVE      NK100206,ZPN006
          MOVE      NK100207,ZPN007
          MOVE      NK100208,ZPN008
          PACK      KEY29,ZPNIN01,ZPNIN02,ZPNIN03,ZPNIN04,ZPNIN05
          CALL      WRH7ZPN1                * Write a patient name file record
.
          MOVE      MESSID,ZADIN01
          MOVE      MESSTYPE,ZADIN02
          MOVE      NK1IN02,ZADIN03
          MOVE      FOUR,ZADIN04
          MOVE      NK1001,ZADIN05
          MOVE      NK100401,ZAD001
          MOVE      NK100402,ZAD002
          MOVE      NK100403,ZAD003
          MOVE      NK100404,ZAD004
          MOVE      NK100405,ZAD005
          MOVE      NK100406,ZAD006
          MOVE      NK100407,ZAD007
          MOVE      NK100408,ZAD008
          MOVE      NK100409,ZAD009
          PACK      KEY29,ZADIN01,ZADIN02,ZADIN03,ZADIN04,ZADIN05
          CALL      WRH7ZAD1                * Write a patient address file rec
.
WNK19000  MOVE      ZERO,EXIT
WNK19999  RETURN
+
.******************************************************************************
.* WPID0000 : Write Patient Id Segment                                        *
.******************************************************************************
WPID0000  MOVE      MESSID,PIDIN01
          ADD       ONE,PIDIN02
          PACK      KEY22,PIDIN01,PIDIN02
          CALL      WRH7PID1                * Write a patient id file record
.
          COMPARE   ONE,PTCNACTI
          GOTO      WPID9000 IF NOT EQUAL   * Not using ACT interface
.
          MOVE      MESSID,ZPNIN01
          MOVE      MESSTYPE,ZPNIN02
          MOVE      PIDIN02,ZPNIN03
          MOVE      FIVE,ZPNIN04
          MOVE      ONE,ZPNIN05
          MOVE      PID00506,ZPN001
          MOVE      PID00507,ZPN002
          MOVE      PID00508,ZPN003
          MOVE      PID00509,ZPN004
          MOVE      PID00510,ZPN005
          MOVE      PID00511,ZPN006
          MOVE      PID00512,ZPN007
          MOVE      PID00513,ZPN008
          PACK      KEY29,ZPNIN01,ZPNIN02,ZPNIN03,ZPNIN04,ZPNIN05
          CALL      WRH7ZPN1                * Write a patient name file record
.
          MOVE      MESSID,ZPNIN01
          MOVE      MESSTYPE,ZPNIN02
          MOVE      PIDIN02,ZPNIN03
          MOVE      NINE,ZPNIN04
          MOVE      ONE,ZPNIN05
          MOVE      PID00901,ZPN001
          MOVE      PID00902,ZPN002
          MOVE      PID00903,ZPN003
          MOVE      PID00904,ZPN004
          MOVE      PID00905,ZPN005
          MOVE      PID00906,ZPN006
          MOVE      PID00907,ZPN007
          MOVE      PID00908,ZPN008
          PACK      KEY29,ZPNIN01,ZPNIN02,ZPNIN03,ZPNIN04,ZPNIN05
          CALL      WRH7ZPN1                * Write a patient name file record
.
          MOVE      MESSID,ZADIN01
          MOVE      MESSTYPE,ZADIN02
          MOVE      PIDIN02,ZADIN03
          MOVE      TEN1,ZADIN04
          MOVE      ONE,ZADIN05
          MOVE      PID01106,ZAD001
          MOVE      PID01107,ZAD002
          MOVE      PID01108,ZAD003
          MOVE      PID01109,ZAD004
          MOVE      PID01110,ZAD005
          MOVE      PID01111,ZAD006
          MOVE      PID01112,ZAD007
          MOVE      PID01113,ZAD008
          MOVE      PID01114,ZAD009
          PACK      KEY29,ZADIN01,ZADIN02,ZADIN03,ZADIN04,ZADIN05
          CALL      WRH7ZAD1                * Write a patient address file rec
.
WPID9000  MOVE      ZERO,EXIT
WPID9999  RETURN
+
.******************************************************************************
.* WPV10000 : Write Patient Visit Segment                                     *
.******************************************************************************
WPV10000  MOVE      MESSID,PV1IN01
          ADD       ONE,PV1IN02
          PACK      KEY22,PV1IN01,PV1IN02
          CALL      WRH7PV11                * Write a patient visit file record
.
WPV19000  MOVE      ZERO,EXIT
WPV19999  RETURN
+
.******************************************************************************
.* WQRD0000 : Write Query Definition Segment                                  *
.******************************************************************************
WQRD0000  MOVE      MESSID,QRDIN01
          ADD       ONE,QRDIN02
          PACK      KEY22,QRDIN01,QRDIN02
          CALL      WRH7QRD1                * Write a query definition file rec
.
WQRD9000  MOVE      ZERO,EXIT
WQRD9999  RETURN
+
.******************************************************************************
.* WZID0000 : Write Patient Id Extension Segment                              *
.******************************************************************************
WZID0000  MOVE      MESSID,ZIDIN01
          ADD       ONE,ZIDIN02
          PACK      KEY22,ZIDIN01,ZIDIN02
          CALL      WRH7ZID1                * Write a patient id exten file rec
.
WZID9000  MOVE      ZERO,EXIT
WZID9999  RETURN
+
.******************************************************************************
.*                                  DISP0000              Called by: ML0000   *
.*                            Update Screen Display                           *
.******************************************************************************
DISP0000  MATCH     "A04",MESSTYPE
          IF        @EQUAL
            ADD       ONE,A04REC
            DISPLAY   *P39:14,*V2LON,A04REC;
          ENDIF
          MATCH     "A19",MESSTYPE
          IF        @EQUAL
            ADD       ONE,A19REC
            DISPLAY   *P39:15,*V2LON,A19REC;
          ENDIF
          MATCH     "A28",MESSTYPE
          IF        @EQUAL
            ADD       ONE,A28REC
            DISPLAY   *P39:16,*V2LON,A28REC;
          ENDIF
          MATCH     "A31",MESSTYPE
          IF        @EQUAL
            ADD       ONE,A31REC
            DISPLAY   *P39:17,*V2LON,A31REC;
          ENDIF
          MATCH     "A34",MESSTYPE
          IF        @EQUAL
            ADD       ONE,A34REC
            DISPLAY   *P39:18,*V2LON,A34REC;
          ENDIF
.
DISP9000  MOVE      ZERO,EXIT
DISP9999  RETURN
.
HL7BRK00  RETURN
+
.==============================================================================
.
          INC       STD002IO
.
          INC       HL7DSCIO/INC
          INC       HL7ERRIO/INC
          INC       HL7EVNIO/INC
          INC       HL7MRGIO/INC
          INC       HL7MSAIO/INC
          INC       HL7MSHIO/INC
          INC       HL7NK1IO/INC
          INC       HL7OUTIO/INC
          INC       HL7PIDIO/INC
          INC       HL7PV1IO/INC
          INC       HL7QRDIO/INC
          INC       HL7ZADIO/INC
          INC       HL7ZIDIO/INC
          INC       HL7ZPNIO/INC
+
.

