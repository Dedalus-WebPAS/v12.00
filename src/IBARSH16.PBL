.******************************************************************************
.*                                                                            *
.*                        P R O G R A M   S U M M A R Y                       *
.*                        -------------   -------------                       *
.*                                                                            *
.*      PROGRAM NAME:   IBARSH16                                              *
.*                                                                            *
.*      FUNCTION:       Mental Health Information National Collection         *
.*                                                                            *
.*                      This is a schedule program for Mental Health Extract  *
.*                      It is used in conjunction with  MEHWEB02.PBL          *
.*                      It uses selection criterias in mehincaf               *
.*                                                                            *
.*      MODIFICATIONS:                                                        *
.*                                                                            *
.******************************************************************************
.*        V12.00.02 02/06/2025  Don Nguyen       TSK 0955096                  *
.*                  Alphanumeric visit number changes                         *
.*        V12.00.01 30/05/2025  Don Nguyen       TSK 0955096                  *
.*                  Alphanumeric visit number changes                         *
.*        V11.02.02 09/02/2022  Thanh T          TSK 0905641                  *
.*                  Recompiled as OUTHEDFD changes                            *
.*        V11.02.01 07/02/2022  Thanh T         TSK 0896905                   *
.*                  Recompiled for ALLDEPFD changes                           *
.******************************************************************************
.*        V10.11.01 13/10/2017  Ania P          CAR 0261630                   *
.*                  Removed use of PORT                                       *
.*        V10.02.01 28/03/2011  Mike Laming     CAR 240107                    *
.*                  Mods to PATECDaf & PATECOaf variables & Keys              *
.*        V10.00.02 12/04/2010  Steve Armstrong CAR 219111                    *
.*                  Recompiled for changes to PATUNAFD.                       *
.*                  Mods for change from KEY17 to KEY25 in PATUNAFD.          *
.*        V10.00.01 31/03/2010  Mike Laming     CAR 217575                    *
.*                  Recompiled for changes to MEHDIAFD                        *
.******************************************************************************
.*           V9.09.02 12/02/2008 J.Tan          CAR 135498                    *
.*                    Mods for MH AH Department                               *
.*           V9.09.01 09/10/2007 J.Tan          CAR 91327                     *
.*                    Fixed number of records and Data Environment field      *
.******************************************************************************
.*           V9.07.01 08/08/2006 J.Tan          CAR 91327                     *
.*                    Fixed printing correct U/R number for missing Adm.record*
.*           V9.06.00 19/04/2006 J.Tan          CAR 91327                     *
.*                    Created New.                                            *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       STDHLPDF
          INC       STDKWSDF
          INC       PATCOMM/INC
.
          INC       OUTBOAFD/INC
          INC       OUTSITFD/INC
          INC       OUTSESFD/INC
          INC       OUTHEDFD/INC
          INC       ALLREFFD/INC
          INC       ALLENCFD/INC
          INC       ALLGPAFD/INC
          INC       ALLGREFD/INC
          INC       ALLGROFD/INC
          INC       ALLLNKFD/INC
          INC       ALLEXTFD/INC
          INC       ALLDEPFD/INC
          INC       ALLSERFD/INC
          INC       MEHVI1FD/INC
          INC       PATCONFD/INC
          INC       MEHINCFD/INC          * MHINC extract file
          INC       MEHDIAFD/INC
          INC       MEHDLSFD/INC
          INC       MEHLEGFD/INC
          INC       NHIMASFD/INC
          INC       PATCODFD/INC
          INC       PATDAYFD/INC
          INC       PATHSPFD/INC
          INC       PATMI1FD/INC
          INC       PATMA1FD/INC
          INC       PATTRNFD/INC
          INC       PATVISFD/INC   * Patients Visits File
          INC       PMSVX1FD/INC   * Visit Extension File
          INC       PATDSCFD/INC
          INC       PATECDFD/INC
          INC       PATECOFD/INC
          INC       PATUNAFD/INC
          INC       IBAPRNFD/INC
.         INC       IBASEQFD/INC 
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
+
.
.******************************************************************************
ALCNRAUD  DIM       1       * Using Referral File Audit
ALCNEAUD  DIM       1       * Using Encounter File Audit 
ALCNLAUD  DIM       1       * Using Referral Link File Audit 
ASTATUS   FORM      1
CMDLINE   DIM      80
CANCFLAG  FORM      1
CFILEPRE  DIM       3
COUNTER   FORM      2
ENDDATE   DIM       8
FPREFIX   DIM       3
FIRSTFLG  FORM      1
FORM3     FORM      3
FORM6     FORM      6
FORM8     FORM      8
FNAMER    DIM       8
HEALTHCD  DIM       4
IBCNMHOS  FORM      1
LINECNT   FORM      2
LNO       FORM      2
.
ERRCOUNT  FORM      5
ERRFLAG   FORM      1
ENDPERD   DIM       8
DAYFLAG   FORM      1
DIAGFLAG  FORM      1
DIM20     DIM       20
.
MHCNMINC  FORM      5    * Next filename number for MHINC Extract
OPERCODE  DIM       4
PRIMFLAG  FORM      1
RECFLAG   FORM      1
RSTATUS   DIM       1
WORKDATE  DIM       8
WORKATYP  DIM       3
.
PATFNAME  DIM       8
STRTDATE  DIM       8
STRTPERD  DIM       8
SKEY11    DIM      11
SKEY16    DIM      16
SKEY20    DIM      20
SKEY21    DIM      21
SKEY28    DIM      28
SDAYMON   DIM       4
SELECTID  DIM       4
SYEAR     DIM       4
SAVMOVE   DIM       1
SAVDATE   DIM       8
SAVADMN   DIM       8
SERVCODE  DIM       3
SERVDATE  DIM       8
SSETCODE  DIM       2
.
TEAMCODE  DIM       4
TOTREC    FORM      5
TDAYMON   DIM       4
TYEAR     DIM       4
TMPFILES  DIM       8[10]
.
UPMHFLAG  FORM      1
WRITFLAG  FORM      1
UNIQUE    FORM      8
UNIQUEX   DIM       8
VALDFLAG  FORM      1
VISTNUMB  DIM       8
MHIN001   DIM       4
MHIN002   DIM       8
MHIN003   DIM       8
MINDATE   DIM       8
.
PATHNAME  DIM      70
.
. U/R Admissions Records
.
MEHURAXX  IFILE     SQL, FIXED=48, KEY="u1-8,9-16"
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
MHUAURNO  DIM       8           8         1      U/R Number
MHUAADMN  DIM       8           8         9      Admission Number
MHUAADAT  DIM       8           8        17      Admission Date
MHUADDAT  DIM       8           8        25      Discharge Date
MHUADTYP  DIM       1           1        33      Discharge Type
.                                                (D,C or O Catg D,Indicator 3)
MHUATEAM  DIM       4           4        34      Disc.Adm.Class/Teamcode
MHUASSET  DIM       2           2        38      Service Setting
MHUAHLTH  DIM       4           4        40      Health Agency
MHUASCOD  DIM       3           3        44      Service Code
MHUAREFR  DIM       1           1        47      Referral record (1-Yes)
.EOR                                     48
.
. U/R Detail Records
.
MEHURDXX  IFILE     SQL, FIXED=35, KEY="u1-8"
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
MHUDURNO  DIM       8           8         1      U/R Number
MHUDNHIN  DIM       7           7         9      NHI Number
MHUDDOBR  DIM       8           8        16      Date of Birth
MHUDGEND  DIM       1           1        24      Gender Code
MHUDETH1  DIM       2           2        25      Ethnicity 1 Code
MHUDETH2  DIM       2           2        27      Ethnicity 2 Code
MHUDETH3  DIM       2           2        29      Ethnicity 3 Code
MHUDDOMC  DIM       4           4        31      Domicile Code
.EOR                                     35
.
. Admission Diagnosis Records
.
MEHDIAXX  IFILE     SQL, FIXED=31, KEY="u1-8,9-11"
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
MHDIAADM  DIM       8           8         1      Admission Number
MHDISQUE  DIM       3           3         9      Sequence Number
MHDIDDAT  DIM       8           8        12      Diagnosis/Procedure Date
MHDIDTYP  DIM       1           1        20      Diagnosis/Procedure Type
MHDICODE  DIM       8           8        21      Diagnosis/Procedure Code
MHDICSYS  DIM       2           2        29      Clinical Coding system ID
.EOR                                     31
.
. Service Summary Records
.
MEHSUMXX  IFILE     SQL, FIXED=32, KEY="u1-8,9-11"
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
MHSUADMN  DIM       8           8         1      Admission Number
MHSUSQUE  DIM       3           3         9      Sequence Number
MHSUATYP  DIM       3           3        12      Admission Type
MHSUSDAT  DIM       8           8        15      Start Date
MHSUEDAT  DIM       8           8        23      End Date
MHSURTYP  DIM       1           1        31      Record type (1 for UnDisc.)
.                                                             2 for UnAdmit)
.EOR                                     32
.
. Service Detail Records
.
MEHDETXX  IFILE     SQL, FIXED=33, KEY="u1-8,9-11,12-14"
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
MHDEADMN  DIM       8           8         1      Admission Number
MHDESQUE  DIM       3           3         9      Summary Sequence Counter
MHDEDCNT  DIM       3           3        12      Detail Sequence Count
MHDEDATE  DIM       8           8        15      Start Date
MHDEPDAT  DIM       8           8        23      Period Date
MHDERTYP  DIM       1           1        31      Record type (1 for UnDisc.)
.                                                             2 for UnAdmit)
MHDEDTYP  DIM       1           1        32      Discharge type for UnDisc
.EOR                                     33
.Note: Each record in Service Detail file represents AD record
.      Where Detail Sequence Count = zzz, it's for DS record
.
. Legal Status Detail Records
.
MEHLEGXX  IFILE     SQL, FIXED=36, KEY="u1-8,9-16,17-24,25-32,33-33"
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
MHLEURNO  DIM       8           8         1      U/R Number
MHLEUNIQ  DIM       8           8         9      Unique ID
MHLELDAT  DIM       8           8        17      Start Date of Legal Status
MHLELTIM  DIM       8           8        25      Start Time of Legal Status
MHLERTYP  DIM       1           1        33      Record Type 'A'- Add record
.                                                            'D'- Delete record
MHLELSEC  DIM       2           2        34      Legal Status Section
.EOR                                     36
.
.Extraction file
INCFILE1  FILE      ASCII, FIXED=256
.
.Extraction Header Record
EXRECTYP  DIM       2       * (HR)
EXHDAGEN  DIM       4       * Health Agency code
EXHDFNAM  DIM      12       * File Name
EXHDRECN  DIM       5       * Number of Records
EXHDDSNT  DIM       8       * Date File Sent
EXHDPENV  DIM       4       * MHINC Procesing Environment
.
.Health Care User details
.EXRECTYP  DIM       2       * Record Type (HC)
EXUSTTYP  DIM       1       * Transaction Type
.MHUDNHIN  DIM       7       * NHI Number
.MHUDNDOB  DIM       8       * NHI Date of Birth
.MHUDGEND  DIM       1       * NHI Gender code
.MHUDETH1  DIM       2       * Ethnicity 1 code
.MHUDETH2  DIM       2       * Ethnicity 2 code
.MHUDETH3  DIM       2       * Ethnicity 3 code
.MHUDDOMC  DIM       4       * NHI Current Domicile
.
.Diagnosis details
.EXRECTYP  DIM       2       * Record Type (DD)
EXDITTYP  DIM       1       * Transaction Type
.MHUDNHIN  DIM       7       * NHI Number
.MHUAHLTH  DIM       4       * Health Agency Code
.MHDIDDAT  DIM       8       * Diagnosis Date
.MHDICSYS  DIM       2       * Diagnosis Coding System (hardcoded '12')
.MHDIDTYP  DIM       1       * Diagnosis Diagnosis Type
.MHDICODE  DIM       8       * Diagnosis Code
EXDICSID  DIM      14       * Client System ID
.
.Service Provided Details
.EXRECTYP  DIM       2       * Record Type (SP)
EXSETTYP  DIM       1       * Transaction Type
.MHUDNHIN  DIM       7       * NHI Number
.MHUAHLTH  DIM       4       * Health Agency Code
.MHUATEAM  DIM       4       * Team Code
.MHUASCOD  DIM       3       * SP Service Code
.MHSUSDAT  DIM       8       * SP Start Date
.MHSUEDAT  DIM       8       * SP End Date
EXSECSID  DIM      14       * Client System ID
.
.Access Details
.EXRECTYP  DIM       2       * Record Type (AD)
EXACTTYP  DIM       1       * Transaction Type
.MHUDNHIN  DIM       7       * NHI Number
.MHUAHLTH  DIM       4       * Health Agency Code
.MHUATEAM  DIM       4       * Team Code
.MHUASCOD  DIM       3       * SP Service Code
.MHDEDATE  DIM       8       * SP Start Date
.MHUASSET  DIM       2       * AD Service Setting
EXACSERV  DIM       6       * AD Units of Service (hard code 000001)
.MHDEPDAT  DIM       8       * AD Reporting Period Start
EXACSNUM  DIM       5       * AD Service Number   (hard code 00001)
.MHDEPDAT  DIM       8       * AD Reporting Period End
EXACCSID  DIM      14       * AD Client System ID
.
.Discharge Details
.EXRECTYP  DIM       2       * Record Type (DS)
EXDSTTYP  DIM       1       * Transaction Type
.MHUDNHIN  DIM       7       * NHI Number
.MHUAHLTH  DIM       4       * Health Agency Code
.MHUATEAM  DIM       4       * Team Code
.MHUADDAT  DIM       8       * Discharge Date
.MHUADTYP  DIM       1       * Discharge Type
EXDSCSID  DIM      14       * Client System ID
.
.Legal Status Details
.EXRECTYP  DIM       2       * Record Type (LS)
EXLSTTYP  DIM       1       * Transaction Type
.MHUDNHIN  DIM       7       * NHI Number
.MHUAHLTH  DIM       4       * Health Agency Code
EXLSLSCD  DIM       2       * Legal Status Code
EXLSLSDT  DIM       8       * Legal Status Date
EXLSCSID  DIM      14       * Client System ID
.
.
.Referral Details
.EXRECTYP DIM       2       * Record Type (RF)
.MHRFFTYP  DIM       1       * Transaction type
.MHUDNHIN DIM       7       * NHI Number
.MHUAHLTH  DIM       4       * Health Agency Code
.MHUATEAM  DIM       4       * Team Code
.MHRFRSRC  DIM       2       * Referral Source/Destination
.MHRFRDAT  DIM       8       * Referral Date
.MHRFDTYP  DIM       1       * Referral Type Code
EXRECSID  DIM      14       * Client System ID
.
.Encounter/Group Contacts/OP Details
.EXRECTYP  DIM       2       * Record Type (AD)
EXECTTYP  DIM       1       * Transaction type
.MHUDNHIN DIM       7       * NHI Number
.MHUAHLTH  DIM       4       * Health Agency Code
.MHUATEAM  DIM       4       * Team Code
.MHSPSCOD  DIM       3       * Service Code
.MHADSDAT  DIM       8       * Service Start Date
.MHADSETD  DIM       2       * Service Setting Code
EXECUSER  DIM       6       * Units of Service
.MHADSDAT  DIM       8       * Reporting period start date
EXECSNUM  DIM       5       * Service Number
.MHADSDAT  DIM       8       * Reporting period end date
EXECCSID  DIM      14       * Client System ID
.
MHALRFXX  IFILE     SQL, FIXED=33, KEY="u1-8,9-16,17-19"
.
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
MHRFVISN  DIM       8           8         1      Referral/Visit Number
MHRFEXTR  DIM       8           8         9      External Referral number
MHRFSEQN  DIM       3           3        17      Referral Sequence Number
MHRFRTYP  DIM       1           1        20      Record type
.                                                1 for RF - Referral
.                                                2 for DS - Disc./Close Referral
MHRFTYPE  DIM       1           1        21      RF Transaction Type
MHRFRSRC  DIM       2           2        22      Referral source/destination
MHRFRDAT  DIM       8           8        24      Referral/Disc.Date
MHRFDTYP  DIM       1           1        32      Referral/Disc.type code
.EOR                                     33
.
MHALSPXX  IFILE     SQL, FIXED=21, KEY="u1-8,9-9,10-13,14-17,18-20"
.
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
MHSPVISN  DIM       8           8         1      Referral/Visit Number
MHSPTYPE  DIM       1           1         9      AD Record Type
.                                                1 =Encounters
.                                                2 =Group Contacts
.                                                3 =Link OP Appt.
MHSPAGEN  DIM       4           4        10      Agency code
MHSPTEAM  DIM       4           4        14      Team Code
MHSPSCOD  DIM       3           3        18      Service Code
.EOR                                     21
.
MHALADXX  IFILE     SQL, FIXED=40, KEY="u1-8,9-9,10-13,14-17,18-20,21-28,29-36"
.
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
MHADVISN  DIM       8           8         1      Referral/Visit Number
MHADTYPE  DIM       1           1         9      AD Record Type
.                                                1=Encounters
.                                                2=Group Contacts
.                                                3=Link OP Appt.
MHADAGEN  DIM       4           4        10      Agency code
MHADTEAM  DIM       4           4        14      Team Code
MHADSCOD  DIM       3           3        18      Service Code
MHADSDAT  DIM       8           8        21      Service Date
MHADRCNT  DIM       8           8        29      Record Count
MHADTTYP  DIM       1           1        37      Transaction Type
.                                                Blank=Add/Update
.                                                D=Delete
MHADSETD  DIM       2           2        38      Service Setting code
.EOR                                     40
.
TMPFILXX  IFILE     SQL, FIXED=29, KEY="u1-8,9-9,10-13,14-17,18-20,21-28"
.
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
.MHADVISN  DIM       8           8         1      Referral/Visit Number
.MHADTYPE  DIM       1           1         9      AD Record Type
.                                                1=Encounters
.                                                2=Group Contacts
.                                                3=Link OP Appt.
.MHADAGEN  DIM       4           4        10      Agency code
.MHADTEAM  DIM       4           4        14      Team Code
.MHADSCOD  DIM       3           3        18      Service Code
MHADMDAT  DIM       8           8        21      Service Date
.EOR                                     29
.
PRGID     INIT      "IBARSH16"
PRGNAM    INIT      "Mental Health Information National Collection"
VERSION   INIT      "V12.00.02"
+
.**************************************************************************
.*                              MAINLINE                                  *
.*                            Controlling Logic                           *
.**************************************************************************
ML0000    CALL      INIT0000               * initialization and open files
          BRANCH    EXIT,ML9999
.
ML0100    CALL      OPTN0000               * get select or print option
          BRANCH    EXIT,ML9999
.
          CALL      SELN0000               * get selection id
          BRANCH    EXIT,ML0100
.
          CALL      PEXTR000               * Process Extraction
          CALL      DELFIL00               * Delete tempfile
.
ML9999    CHAIN     PGM                    * chain back to program
+
.*************************************************************************
.*                             INIT0000                                  *
.*                 Display screen header and open files                  *
.*************************************************************************
.
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"mehincaf";
          OPEN      MEHINCA1,"mehincaf"
.
          DISPLAY   *P64:24,"mehlegaf";
          OPEN      MEHLEGA2,"mehlegaf"
.
          DISPLAY   *P64:24,"mehdiaaf";
          OPEN      MEHDIAA1,"mehdiaaf"
.
          DISPLAY   *P64:24,"nhimasaf";
          OPEN      NHIMASA2,"nhimasaf"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P64:24,"patecdaf";
          OPEN      PATECDA1,"patecdaf"
          OPEN      PATECDA4,"patecdaf"
.
          DISPLAY   *P64:24,"patecoaf";
          OPEN      PATECOA1,"patecoaf"
          OPEN      PATECOA4,"patecoaf"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A2,"patmi1af"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATVISA2,"patvisaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patunaaf";
          OPEN      PATUNAA3,"patunaaf"
.
          DISPLAY   *P64:24,"mehaudda";
          OPEN      MEHAUDDB,"mehaudda"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P56:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P56:24,"allrefaf";
          OPEN      ALLREFA1,"allrefaf"
          OPEN      ALLREFA3,"allrefaf"
          OPEN      ALLREFA4,"allrefaf"
.
          DISPLAY   *P56:24,"allencaf";
          OPEN      ALLENCA1,"allencaf"
          OPEN      ALLENCA7,"allencaf"
.
          DISPLAY   *P56:24,"allgpaaf";
          OPEN      ALLGPAA2,"allgpaaf"
.
          DISPLAY   *P56:24,"allgreaf";
          OPEN      ALLGREA1,"allgreaf"
.
          DISPLAY   *P56:24,"allgroaf";
          OPEN      ALLGROA1,"allgroaf"
.
          DISPLAY   *P56:24,"alllnkaf";
          OPEN      ALLLNKA1,"alllnkaf"
.
          DISPLAY   *P56:24,"allextaf";
          OPEN      ALLEXTA1,"allextaf"
.
          DISPLAY   *P56:24,"alldepaf";
          OPEN      ALLDEPA1,"alldepaf"
.
          DISPLAY   *P56:24,"allseraf";
          OPEN      ALLSERA1,"allseraf"
.
          OPEN      PATHSPA1,"pathspaf"
          OPEN      MEHVI1A1,"mehvi1af"
.
          OPEN      ALLAUDLN,"allaudln"
          OPEN      ALLAUDEA,"allauden"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN;*54,CFILENO
          READ      CONTROLF,SEVENTY7;*45,PTCNNZED
          READ      CONTROLF,NINTY8;*149,PTCNGDV2
          READ      CONTROLF,HUND09;*151,PTCNGDV3
          READ      CONTROLF,HUND06;*27,ALCNRAUD,*28,ALCNEAUD,*213,ALCNLAUD
.
          MOVE      ONE,COUNTER
          WHILE     COUNTER < 11
            CALL      TFILENAM
            MOVE      TFILNAME,TMPFILES[COUNTER]
            ADD       ONE,COUNTER
          DO
.
INIT9999  RETURN
+
.*******************************************************************************
.                     Check Correct Files are Open for System
.*******************************************************************************
OUTFIL00  MOVE      "out",CFILEPRE
          MOVE      ALLNSITE,KEY6
          CALL      RDSITA1
          BRANCH    OVRCD,OUTFIL90
          MATCH     OSTFILE,CFILEPRE         * Save Current File Prefix
          IF        !@EQUAL
            MOVE      OSTFILE,CFILEPRE       * Save Current File Prefix
          ENDIF
.
          CALL      OPNOUT00                 * Open Outpatient Files
          MOVE      ZERO,EXIT
          GOTO      OUTFIL99
.
OUTFIL80  DISPLAY   *P1:24,*EL,"Invalid Web User ID"
          MOVE      ONE,EXIT
          GOTO      MAIN9999
.
OUTFIL90  DISPLAY   *P1:24,*EL,"Outpatient Site Invalid"
          MOVE      ONE,EXIT
OUTFIL99  RETURN
+
.*******************************************************************************
.                    Open Outpatient Files
.*******************************************************************************
OPNOUT00  PACK      CFNAME,CFILEPRE,FILBOKA1  * Get the name of the BOKA1 file
          CLOSE     OUTBOKA6
          OPEN      OUTBOKA6,CFNAME           * Open the file
.
          PACK      CFNAME,CFILEPRE,FILSESA1  * Get the name of the SESA1 file
          CLOSE     OUTSESA1
          OPEN      OUTSESA1,CFNAME           * Open the file
.
          PACK      CFNAME,CFILEPRE,FILHEDA1  * Get the name of the HEDA1 file
          CLOSE     OUTHEDA1
          OPEN      OUTHEDA1,CFNAME           * Open the file
.
OPNOUT99  RETURN
.
.**********************************************************************
.*                            OPTN0000                                *
.*                  Main Option Screen for Web                        *
.**********************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Generate Extract":
                    *P1:6,*V2LON,"2",*HOFF," = Process Extract":
                    *P1:8,"Select Option : ";
.
OPTN1000  KEYIN     *P17:8,*DV,UNDLN1,*P17:8,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9000 IF EQUAL
.
          BRANCH    OPTION,OPTN2000,OPTN3000
          BEEP
          GOTO      OPTN1000
.
OPTN2000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN3000  MOVE      "PROD",KEY4
          KEYIN     *P1:10,"Data Environment (PROD/TEST):":
                    *P32:10,*RV,*DV,KEY4,*P32:10,KEY4;
          ENDSET    KEY4
          APPEND    SP70,KEY4
          RESET     KEY4
          MATCH     SP70,KEY4
          GOTO      OPTN9000 IF EQUAL
.
          PACK      EXHDPENV,KEY4,SP70
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9000  MOVE      ONE,EXIT
.
OPTN9999  RETURN
.
.**********************************************************************
.*                            SELN0000                                *
.*                 Get Selection ID for printing                      *
.**********************************************************************
.
SELN0000  DISPLAY   *P1:3,*EF:
                    *P1:12,*V2LON,"Enter Selection ID :"
.
SELN1000  KEYIN     *P22:12,*DV,UNDLN1,*P22:12,*V2LON,SELECTID;
.
          MATCH     SP70,SELECTID
          GOTO      SELN9000 IF EQUAL
.
          PACK      KEY4,SELECTID,SP70
          CALL      RDMHINC1
          BRANCH    OVRCD,SELN9000
.
SELN2000  MOVE      ZERO,EXIT
          GOTO      SELN9999
.
SELN9000  MOVE      ONE,EXIT
.
SELN9999  RETURN
+
.**********************************************************************
.*                            SDAYS000                                *
.**********************************************************************
.
PEXTR000  DISPLAY   *P51:2,*V2LON,"- MHINC ",*P1:3,*EF;
.
          MOVE      ZERO,CANCFLAG
          MOVE      ZERO,ERRCOUNT
          MOVE      ZERO,ERRFLAG
          MOVE      "60",CLNO
          MOVE      ZERO,TOTREC            * Initialise Total number of records
.
          CALL      DAGN0000               * Get Default Health Agency code
          IF        EXIT=1
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",*12,"| ":
                      *24,"| Health Agency Code must NOT be blank.",*132,"|"
          ENDIF
.
          CALL      CRTFIL00                * Create temp files
.
          CALL      ADSC0000                * Process Admission Disch.Cancel.
.
          MOVE      ZERO,CANCFLAG
          CALL      INPT0000                * Process Inpatients
.
          CALL      DIAG0000                * Process Diagnosis
          CALL      PROC0000                * Process Procedures
          CALL      LSTA0000                * Process Legal Status
.
          MOVE      ZERO,UPMHFLAG
          CALL      PLST0000                * Process MH Legal status
          CALL      PREF0000                * Process Referral
          CALL      PDIA0000                * Process Diagnosis
.
          CALL      UND132
.
          PACK      KEY4,SELECTID,SP70
          CALL      RDMHINC1
          IF        OVRCD=0
            MOVE      TOTREC,MHINRECN
            MOVE      ERRCOUNT,MHINERRN
          ENDIF
.
          IF        OPTION=1
            MOVE      "0",MHINEFLG          * Generated
            MOVE      SP70,MHINFILN
            CALL      UPMHINC1              * validation only
            GOTO      PEXTR900
          ENDIF
.
          BRANCH    ERRFLAG,PEXTR800        * Errors found
.
          MOVE      ONE,VALDFLAG
          CALL      WRIT0000                * Get total no of records only
.
          CALL      XTRAC000                * Create Extraction file
          MOVE      EXHDFNAM,MHINFILN
          MOVE      "1",MHINEFLG            * Processed
          CALL      UPMHINC1
.
          MOVE      ZERO,VALDFLAG
          CALL      WRIT0000                * Write to Extraction file
.
.         Update MHINC indicator
.
          MOVE      ONE,UPMHFLAG
          CALL      PLST0000                * Process MH Legal status
          CALL      PREF0000                * Process Referral
          CALL      PDIA0000                * Process Diagnosis
.
          GOTO      PEXTR900
.
PEXTR800  PRINT     *N:
                    *1,"Errors must be fixed - Extraction file is NOT Created.":
                    *132,"|"
.
PEXTR900  CALL      ENDP0000                * Print end of Error report
PEXTR999  RETURN
+
.**********************************************************************
.*                            INPT0000                                *
.*   Process day file to get all patients admitted during the period  *
.**********************************************************************
INPT0000  MOVE      MHINFDAT,STRTDATE
          MOVE      MHINTDAT,ENDDATE
.
          DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Initialising the Indexed Temp":
                    " File",*HOFF," - Please Wait";
.
          MOVE      TWO,ASTATUS             * process Current status
          CALL      ADMN0000                * process admission numbers
.
          MOVE      FOUR,ASTATUS            * process On leave status
          CALL      ADMN0000                * process admission numbers
.
          CALL      DISC0000                * process discharges
.
INPT9999  RETURN
+
.**********************************************************************
.*                            ADMN0000                                *
.*               Process Admissions                                   *
.**********************************************************************
ADMN0000  PACK      KEY9,ASTATUS,SP8
          CALL      RDSMISS2
.
.------ read through the Admissions file ------
.
ADMN1000  CALL      RDKMISS2
          BRANCH    OVRCD,ADMN9999
.
          COMPARE   ASTATUS,ASTAT           * test the admission status
          GOTO      ADMN9999 IF NOT EQUAL
.
          MATCH     ADATE,ENDDATE           * make sure patient is not admitted
          GOTO      ADMN1000 IF LESS          after the end of the period
.
          CALL      VPAT0000          * Check health agency and adm.care class
          BRANCH    EXIT,ADMN1000
.
          CALL      CTRN0000          * Transfer
          GOTO      ADMN1000
.
ADMN9999  RETURN
+
.**********************************************************************
.*                             DISC0000                               *
.*        Routine to process discharged patients                      *
.**********************************************************************
DISC0000  PACK      KEY16,STRTDATE,SP8
          CALL      RDSDSCH2
.
.------ read through the discharge file ------
.
DISC1000  CALL      RDKDSCH2
          BRANCH    OVRCD,DISC9999
.
          MOVE      DADMNO,KEY8
          CALL      RDMISS1                 * read the admission file
          BRANCH    OVRCD,DISC1000
.
          MATCH     ADATE,ENDDATE           * make sure patient is not admitted
          GOTO      DISC1000 IF LESS          after the end of the period
.
          CALL      VPAT0000          * Check health agency and adm.care class
          BRANCH    EXIT,DISC1000
.
          CALL      CTRN0000          * Transfer
.
          GOTO      DISC1000
.
DISC9999  RETURN
+
.**********************************************************************
.*                            DIAG0000                                *
.*               Process Diagnosis records                            *
.**********************************************************************
DIAG0000  MOVE      SP70,SAVADMN
          MOVE      ZERO,PRIMFLAG
          PACK      KEY21,MHINFDAT,SP70
          CALL      RSPTECD4
DIAG1000  CALL      RKPTECD4
          BRANCH    OVRCD,DIAG9999
.
          MATCH     PTEDDTCD,MHINTDAT      * Check todate
          GOTO      DIAG9999 IF LESS
.
          MOVE      DPTEDADM,KEY8
          CALL      RDVISA1
          BRANCH    OVRCD,DIAG1000
.
          CALL      RDMISS1
          IF        OVRCD=1
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",PVIURNO,*12,"| ",KEY8:
                      *24,"| Diagnosis Missing Admission Record.":
                      *132,"|"
            GOTO      DIAG1000
          ENDIF
.
          CALL      VPAT0000          * Check health agency and adm.care class
          BRANCH    EXIT,DIAG1000
.
          MATCH     ADATE,PTEDDTCD
          IF        @LESS
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                      *24,"| Diagnosis Code: ",PTEDCODE:
                      "- Coding Date must be greater than Admission Date.":
                      *132,"|"
          ENDIF
.
          CALL      C90DAY00               * workout date 90 days after adm.
          MATCH     WORKDATE,PTEDDTCD
          IF        !@LESS
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                      *24,"| Diagnosis Code: ",PTEDCODE:
                      "- Coding Date must NOT be 90 days after Admission Date.":
                      *132,"|"
          ENDIF
.   mlmlmlmlm
          MATCH     "P",PTEDTYPE           * Primary disease type?
          IF        @EQUAL
            PACK      SKEY21,PTEDDTCD,DPTEDADM,DPTEDEPN,DPTEDCNT
            CALL      CDTYP000        * Check if this is the only one 'P' rec. 
            MOVE      SKEY21,KEY21
            CALL      RDPTECD4        * Reposition
          ENDIF
.
          PACK      KEY17,PTEDDTCD,PTEDCODE
          CALL      WDIA0000          * Write Diagnosis/Procedure record
.
.         Check if this admission record exists on the U/R adm.temporary file
.
          CALL      CURA0000          * Check U/R Admission file
          BRANCH    EXIT,DIAG1000     * already exist
.
          CALL      CURD0000          * Write to U/R Detail file if not exist
          GOTO      DIAG1000
.
DIAG9999  RETURN
+
.**********************************************************************
.*                            CDTYP000                                *
.*        Check if this patient only have one Priamry or A record     *
.**********************************************************************
CDTYP000  MOVE      ZERO,PRIMFLAG
          MOVE      ZERO,DAYFLAG
          MOVE      PTEDCODE,KEY9
          MOVE      PTEDDTCD,WORKDATE
          PACK      KEY13,DAADMNO,SP70
          CALL      RSPTECD1
CDTYP100  CALL      RKPTECD1
          BRANCH    OVRCD,CDTYP999
.
          MATCH     DAADMNO,DPTEDADM       * Same admission number?
          GOTO      CDTYP999 IF NOT EQUAL
.
          MATCH     "P",PTEDTYPE           * 'P' disease type?
          GOTO      CDTYP100 IF NOT EQUAL
.
          ADD       ONE,PRIMFLAG           * found a primary disease code
          MATCH     WORKDATE,PTEDDTCD      * Check coding date?
          IF        @EQUAL
            ADD       ONE,DAYFLAG
          ENDIF
.
          IF        PRIMFLAG<>1
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                      *24,"| Diagnosis Code: ",KEY9:
                      "- There can only be one Primary disease":
                      " Type per patient.",*132,"|"
            IF        DAYFLAG>1
              CALL      CHKLN000             * Check current line number
              PRINT     *1,"| ",*12,"| ":
                        *51,"- There can only be one Primary disease":
                        " Type per day.",*132,"|"
            ENDIF
            GOTO      CDTYP999
          ENDIF
.
          GOTO      CDTYP100
.
CDTYP999  RETURN
+
.**********************************************************************
.*                            WDIA0000                                *
.*               Routine to write Diagnosis record                    *
.**********************************************************************
WDIA0000  MOVE      ZERO,FORM3
          PACK      KEY11,DAADMNO,Z70
          CALL      RSMHDI1
          CALL      RPMHDI1
          BRANCH    OVRCD,WDIA2000
.
          MATCH     MHDIAADM,DAADMNO
          GOTO      WDIA2000 IF NOT EQUAL
.
WDIA1000  MOVE      MHDISQUE,FORM3
.
WDIA2000  ADD       ONE,FORM3
          PACK      KEY11,DAADMNO,FORM3
          CALL      RDMHDI1
          COMPARE   ZERO,OVRCD
          GOTO      WDIA1000 IF EQUAL     * already exists
.
          MOVE      DAADMNO,MHDIAADM
          MOVE      FORM3,MHDISQUE
          UNPACK    KEY17,MHDIDDAT,MHDICODE *Dis.or Oper.date/code
          MOVE      MHDICODE,KEY9
          REP       ". ",KEY9
          REP       "- ",KEY9
          SQUEEZE   KEY9
          PACK      MHDICODE,KEY9,SP70
.
          MOVE      "B",MHDIDTYP
          MATCH     "P",PTEDTYPE          * Primary disease type?
          IF        @EQUAL
            MOVE      "A",MHDIDTYP        * Primary
          ENDIF
          MOVE      "12",MHDICSYS
          CALL      WRMHDI1
.
WDIA9999  RETURN
+
.**********************************************************************
.*                            C90DAY00                                *
.*               Check if Coding date > 90 days after admission date  *
.**********************************************************************
C90DAY00  UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON                  * convert to julian format
.
          ADD       "90",JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON                  * convert back to CCYYMMDD format
.
          PACK      WORKDATE,CC,YY,MM,DD
          REP       " 0",WORKDATE            * 90 Days after admission date
.
C90DAY99  RETURN
+
.**********************************************************************
.*                            PROC0000                                *
.*               Process Procedures records                           *
.**********************************************************************
PROC0000  PACK      KEY21,MHINFDAT,SP70
          CALL      RSPTECO4
PROC1000  CALL      RKPTECO4
          BRANCH    OVRCD,PROC9999
.
          MATCH     PTEODTCD,MHINTDAT      * Check todate
          GOTO      PROC9999 IF LESS
.
          MOVE      DPTEOADM,KEY8
          CALL      RDVISA1
          BRANCH    OVRCD,PROC1000
.
          CALL      RDMISS1
          IF        OVRCD=1
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",AURNO,*12,"| ",KEY8:
                      *24,"| Procedure Missing Admission Record.":
                      *132,"|"
            GOTO      PROC1000
          ENDIF
.
          CALL      VPAT0000          * Check health agency and adm.care class
          BRANCH    EXIT,PROC1000
.
          MATCH     ADATE,PTEODTCD
          IF        @LESS
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                      *24,"| Procedure Code: ",PTEOCODE:
                      "- Coding Date must be greater than Admission Date.":
                      *132,"|"
          ENDIF
.
          CALL      C90DAY00               * workout date 90 days after adm.
          MATCH     WORKDATE,PTEODTCD
          IF        !@LESS
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                      *24,"| Procedure Code: ",PTEOCODE:
                      "- Coding Date must NOT be 90 days after Admission Date.":
                      *132,"|"
          ENDIF
.
          MOVE      SP70,PTEDTYPE          * Primary disease type?
          PACK      KEY17,PTEODTCD,PTEOCODE
          CALL      WDIA0000          * Write Diagnosis/Procedure record
.
.         Check if this admission record exists on the U/R adm.temporary file
.
          CALL      CURA0000          * Check U/R Admission file
          BRANCH    EXIT,PROC1000     * already exist
.
          CALL      CURD0000          * Write to U/R Detail file if not exist
          GOTO      PROC1000
.
PROC9999  RETURN
+
.**********************************************************************
.*                            ADSC0000                                *
.*               Process Admission Discharge cancellation             *
.**********************************************************************
ADSC0000  MOVE      ONE,CANCFLAG
          PACK      KEY25,MHINFDAT,SP70
          CALL      RDSUNAA3
ADSC1000  CALL      RDKUNAA3
          BRANCH    OVRCD,ADSC9999
.
          MATCH     PTUNDATE,MHINTDAT
          GOTO      ADSC9999 IF LESS
.
          MOVE      DPTUNADM,KEY8
          CALL      RDVISA1
          BRANCH    OVRCD,ADSC1000
.
          MATCH     "1",PTUNTYPE
          GOTO      ADSC2000 IF EQUAL       * Unadmit
.
          MATCH     "2",PTUNTYPE
          GOTO      ADSC1000 IF NOT EQUAL   * Not - Undischarge record
.
ADSC2000  MOVE      DPTUNADM,KEY8
          CALL      RDMISS1
          IF        OVRCD=1
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",PVIURNO,*12,"| ",KEY8:
                      *24,"| Cancellations Missing Admission Record.":
                      *132,"|"
            GOTO      ADSC1000
          ENDIF
.
          CALL      VPAT0000          * Check health agency and adm.care class
          BRANCH    EXIT,ADSC1000
.
.         Check if this admission record exists on the U/R adm.temporary file
.
          CALL      CURA0000          * Write to U/R Admission file
          BRANCH    EXIT,ADSC3000     * already exist
          CALL      CURD0000          * Write to U/R Detail file if not exist
.
ADSC3000  MATCH     "2",PTUNTYPE
          GOTO      ADSC4000 IF EQUAL   * Un-discharge
.
.         Un-admit
.
          MOVE      PTUNODTE,TDATE      * use the old adm.date
          MOVE      MHINTDAT,WORKDATE
          CALL      PRED0000            * Get end date of SP record
          MOVE      ATYPE,WORKATYP
          CALL      WRSUM000            * Write Summary record
.
          MOVE      PTUNODTE,STRTPERD   * Start Period
          MOVE      WORKDATE,ENDPERD    * End Period
          CALL      PROAD000            * write detail file
          GOTO      ADSC6000
.
.         Un-discharge
.
ADSC4000  CALL      CTRN0000          * Transfer
          MOVE      "  1",MHDESQUE
          MOVE      PTUNODTE,TDATE
          MOVE      SP70,MHDEDTYP
.
          MOVE      "D ",TCODE
          PACK      KEY5,TCODE,PTUNDTYP
          CALL      RDCODE1
          IF        OVRCD=0
            MOVE      TCINDC3,MHDEDTYP   * Disc.type
          ENDIF
          CALL      WRDSC000                   * write a discharge record
.
ADSC6000  GOTO      ADSC1000
.
ADSC9999  RETURN
+
.**********************************************************************
.*                            LSTA0000                                *
.*               Process Legal Status                                 *
.**********************************************************************
LSTA0000  PACK      KEY32,MHINFDAT,SP70
          CALL      BSMHDL
LSTA1000  CALL      BKMHDL
          BRANCH    OVRCD,LSTA9999
          MATCH     MHDLMDAT,MHINTDAT
          GOTO      LSTA9999 IF LESS
          MATCH     "A",MHDLRTYP
          GOTO      LSTA2000 IF EQUAL      * Add
          MATCH     "D",MHDLRTYP
          GOTO      LSTA1000 IF NOT EQUAL  * Not Delete
.
LSTA2000  MOVE      "LS",TCODE
          PACK      KEY5,TCODE,MHDLSCOD
          CALL      RDCODE1
          BRANCH    OVRCD,LSTA1000         * Ignore
.
          MATCH     SP70,THCSCOD
          GOTO      LSTA1000 IF EQUAL      * Ignore blank HDP Eqv.
.
          MATCH     SP70,MHDLSDAT
          IF        @EQUAL
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",MHDLURNO:
                      *24,"| Legal Status Start date must NOT be blank.":
                      *132,"|"
          ENDIF
.
          MATCH     SP70,MHDLUNIQ
          IF        @EQUAL
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",MHDLURNO:
                      *24,"| Legal Status Unique ID must NOT be blank.":
                      *132,"|"
          ENDIF
.
          CALL      WRLGS000          * Write to Legal status tempfile
.
          MOVE      MHDLURNO,AURNO
          CALL      CURD0000          * Write to U/R Detail file if not exist
          GOTO      LSTA1000
.
LSTA9999  RETURN
+
.**********************************************************************
.*                            PREF0000                                *
.*           Process primary referrals                                *
.*        where ALREUYN4=1, Ref.date <= end date, alremohr=0,2 or 4   *
.**********************************************************************
PREF0000  MOVE      SP70,KEY3
          CALL      RSALDEP1
PREF1000  CALL      RKALDEP1
          BRANCH    OVRCD,PREF9999
.
          PACK      KEY5,ANSC,ANSG,ALDEDEPT   * Check for MH Department
          CALL      RDCODE1
          BRANCH    OVRCD,PREF1000
.
          MATCH     "M",TCINDC4              * MH?
          GOTO      PREF1000 IF NOT EQUAL
.
          MOVE      ZERO,FORM1                * Active referral
PREF2000  ADD       ONE,FORM1
          MOVE      SP70,RSTATUS
          MOVE      FORM1,RSTATUS
          PACK      KEY22,ALDEDEPT,RSTATUS,SP70
          CALL      RSALREF4
PREF3000  CALL      RKALREF4
          BRANCH    OVRCD,PREF8000
          MATCH     ALDEDEPT,ALREDEPT        * Same department?
          GOTO      PREF8000 IF NOT EQUAL
.
          MATCH     RSTATUS,ALRESTAT            * Not correct status
          GOTO      PREF8000 IF NOT EQUAL
.
          MATCH     "1",ALREUYN4
          GOTO      PREF3000 IF NOT EQUAL    * not primary referral
.
          MOVE      ZERO,WRITFLAG
          CALL      RFRC0000                 * Set Referral record
.
          CALL      PENC0000                 * Process Encounter
          CALL      PGRC0000                 * Process Group Contact
.
          CALL      PLNK0000                 * Process Linked OP
.
          IF        UPMHFLAG=1
            MOVE      "1",ALREMOHR           * set to Sent
            CALL      UPALREF4
          ENDIF
          GOTO      PREF3000
.
PREF8000  BRANCH    FORM1,PREF2000,PREF2000,PREF2000,PREF2000
.
PREF9999  RETURN
+
.**********************************************************************
.         Check for U/R Admission details file
.**********************************************************************
CHKA0000  MOVE      ZERO,EXIT
          PACK      KEY16,ALREURNO,ALREVISN
          CALL      RDMHUA1                * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      CHKA9000 IF EQUAL      * already exist
.
          MOVE      ALREURNO,MHUAURNO
          MOVE      ALREVISN,MHUAADMN
       
          UNPACK    SP70,MHUAADAT,MHUADDAT,MHUADTYP
          UNPACK    SP70,MHUATEAM,MHUASSET,MHUAHLTH,MHUASCOD
          MOVE      "0",MHUADTYP
.
          MOVE      "1",MHUAREFR            * referral record
          MOVE      HEALTHCD,MHUAHLTH
          MOVE      TEAMCODE,MHUATEAM
          PACK      KEY16,ALREURNO,ALREVISN,SP70
          CALL      WRMHUA1
          MOVE      ZERO,EXIT
          GOTO      CHKA9999
.
CHKA9000  MOVE      ONE,EXIT
CHKA9999  RETURN
+
.**********************************************************************
.*               Referral records                                     *
.**********************************************************************
RFRC0000  CALL      VLMH0000                 * Get health agency and team code
          MATCH     "2",ALRESTAT             * Closed status?
          GOTO      RFRC4000 IF NOT EQUAL
.
          MATCH     ALREDCLO,MHINTDAT      * Closed date <= todate?
          GOTO      RFRC6000 IF LESS
.
          MATCH     "3",ALREMOHR           * Send discharge required
          GOTO      RFRC1000 IF EQUAL
.
          MATCH     "5",ALREMOHR           * Send delete discharge required?
          GOTO      RFRC1000 IF EQUAL
.
          MATCH     "4",ALREMOHR           * Send RF and Discharge required?
          GOTO      RFRC6000 IF NOT EQUAL
.
          CALL      PRRF0000               * Set up primary referral
          PACK      KEY19,MHRFVISN,MHRFEXTR,MHRFSEQN,SP70
          CALL      WRMHRF1
.
RFRC1000  CALL      CSRF0000               * Set up closed referral
          GOTO      RFRC5000
.
.          Primary Referral
.
RFRC4000  MATCH     ALRERDAT,MHINTDAT      * Ref.date <= todate?
          GOTO      RFRC6000 IF LESS
.
          MATCH     "0",ALREMOHR           * Unsent?
          GOTO      RFRC4200 IF EQUAL
          MATCH     "5",ALREMOHR           * Send Delete Discharge Req.?
          GOTO      RFRC1000 IF EQUAL
.
          MATCH     "2",ALREMOHR           * Send Delete Req.?
          GOTO      RFRC6000 IF NOT EQUAL
.
RFRC4200  CALL      PRRF0000               * Set up primary referral
.
RFRC5000  MOVE      ONE,WRITFLAG
          BRANCH    UPMHFLAG,RFRC6000
.
          CALL      CHKA0000                 * Write to U/R Admission file
          IF        EXIT=0
            MOVE      ALREURNO,AURNO
            CALL      CURD0000        * Write to U/R Detail file if not exist
          ENDIF
.
          PACK      KEY19,MHRFVISN,MHRFEXTR,MHRFSEQN,SP70
          CALL      WRMHRF1
.
.         Check for External referral
.
RFRC6000  PACK      KEY16,ALREVISN,SP70
          CALL      RSALEXT1
RFRC7000  CALL      RKALEXT1
          BRANCH    OVRCD,XREF9999
.
          MATCH     ALREVISN,ALEXVISN      * Same visit number?
          GOTO      RFRC9999 IF NOT EQUAL
.
          MATCH     ALEXRDAT,MHINTDAT        * referral date <= todate?
          GOTO      RFRC7000 IF LESS
          MATCH     "0",ALEXMOHR
          GOTO      RFRC8000 IF EQUAL        * unsent
          MATCH     "3",ALEXMOHR
          GOTO      RFRC8000 IF EQUAL        * send update
          MATCH     "2",ALEXMOHR
          GOTO      RFRC7000 IF NOT EQUAL
.
RFRC8000  MOVE      ONE,WRITFLAG
          BRANCH    UPMHFLAG,RFRC9000
.
          CALL      XREF00000                * set external referral
          CALL      CHKA0000                 * Write to U/R Admission file
          IF        EXIT=0
            MOVE      ALREURNO,AURNO
            CALL      CURD0000        * Write to U/R Detail file if not exist
          ENDIF
.
          PACK      KEY19,MHRFVISN,MHRFEXTR,MHRFSEQN,SP70
          CALL      WRMHRF1
          GOTO      RFRC7000
.
RFRC9000  MOVE      "1",ALEXMOHR           * Set to Sent
          CALL      UPALEXT1
          GOTO      RFRC7000
.
RFRC9999  RETURN
+
.**********************************************************************
.         Set Referral record
.**********************************************************************
SETR0000  PACK      SKEY16,MHRFVISN,MHRFEXTR
          MOVE      ZERO,FORM3
          PACK      KEY19,SKEY16,Z70
          CALL      RSMHRF1
          CALL      RPMHRF1
          BRANCH    OVRCD,SETR2000
          PACK      KEY16,MHRFVISN,MHRFEXTR
.
          MATCH     SKEY16,KEY16
          GOTO      SETR2000 IF NOT EQUAL
          MOVE      MHRFSEQN,FORM3
.
SETR2000  ADD       ONE,FORM3
          MOVE      FORM3,MHRFSEQN
          UNPACK    SKEY16,MHRFVISN,MHRFEXTR
SETR9999  RETURN
+
.**********************************************************************
.         Set up Closed referral
.**********************************************************************
CSRF0000
          MOVE      ALREVISN,MHRFVISN
          MOVE      SP70,MHRFEXTR
          CALL      SETR0000               * Set referral details record
.
          MOVE      ALREVISN,MHRFVISN
          MOVE      SP70,MHRFEXTR
          MOVE      "2",MHRFRTYP                 * Close Referral Record type
          MOVE      SP70,MHRFTYPE
          MATCH     "5",ALREMOHR                 * Send Delete?
          IF        @EQUAL
            MOVE      "D",MHRFTYPE
          ENDIF
          MOVE      SP70,MHRFRSRC
          MOVE      ALREDCLO,MHRFRDAT            * Disc./Closed Date
          MOVE      SP70,MHRFDTYP                * Disc.type code
          PACK      KEY5,ANSL,ANSL,ALRERCLO,SP70 * Reason for closure
          CALL      RDCODE1
          IF        OVRCD=0
            UNPACK    THCSCOD,MHRFDTYP
          ENDIF
CSRF9999  RETURN
+
.**********************************************************************
.         Set up Primary referral
.**********************************************************************
PRRF0000
          MOVE      ALREVISN,MHRFVISN
          MOVE      SP70,MHRFEXTR
          CALL      SETR0000               * Set referral details record
.
          MOVE      ALREVISN,MHRFVISN
          MOVE      SP70,MHRFEXTR
          MOVE      "1",MHRFRTYP           * Referral Record type
.
          MOVE      SP70,MHRFTYPE
          MATCH     "2",ALREMOHR           * Send Delete?
          IF        @EQUAL
            MOVE      "D",MHRFTYPE
          ENDIF
.
          PACK      MHRFRSRC,ALRESRCE,SP70       * Referral source/destination
          MOVE      IDDD,KEY6
          CALL      RDSITA1
          IF        OVRCD=0
            PACK      KEY5,OSTCATG,ALRESRCE,SP70
            CALL      RDCODE1
            IF        OVRCD=0
              UNPACK    THCSCOD,MHRFRSRC
            ENDIF
          ENDIF
.
          MOVE      ALRERDAT,MHRFRDAT            * Referral Date
          MOVE      "F",MHRFDTYP                 * Referral type code
PRRF9999  RETURN
.
.**********************************************************************
.*                            XREF0000                                *
.*               Process External Referrals                           *
.**********************************************************************
XREF0000
          MOVE      ALREVISN,MHRFVISN
          MOVE      ALEXEXTR,MHRFEXTR
          CALL      SETR0000               * Set referral details record
.
          MOVE      "1",MHRFRTYP                 * Referral record type
          MOVE      SP70,MHRFTYPE                * RF Transaction Type
          MATCH     "2",ALEXMOHR
          IF        @EQUAL
            MOVE      "D",MHRFTYPE
          ENDIF
.
          PACK      MHRFRSRC,ALEXREFT,SP70       * Referral source/destination
          MOVE      "S ",TCODE
          PACK      KEY5,TCODE,ALEXREFT,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            UNPACK    THCSCOD,MHRFRSRC
          ENDIF
.
          MOVE      ALEXRDAT,MHRFRDAT            * Referral Date
          MOVE      "T",MHRFDTYP                 * Referral type code
.
XREF9999  RETURN
+
.**********************************************************************
.*                            PENC0000                                *
.*               Process Encounters                                   *
.**********************************************************************
PENC0000  CALL      VLMH0000                 * Get health agency and team code
          PACK      KEY32,ALREVISN,SP70
          CALL      ASALENA                  * Referral Link audit file
PENC1000  CALL      AKALENA
          BRANCH    OVRCD,PENC9999
          MATCH     ALREVISN,ALENVISN        * Same visit number?
          GOTO      PENC9999 IF NOT EQUAL
.
          MATCH     "B",ALENAUDR             * Ignore 'Before Change'record
          GOTO      PENC1000 IF EQUAL
.
          MOVE      "1",KEY1                  * Encounter
          MOVE      ALREVISN,VISTNUMB
          MOVE      SP70,SERVCODE             * Service code
          PACK      KEY9,ALREDEPT,ALENSERV,SP70
          CALL      RDALSER1
          IF        OVRCD=0
            UNPACK    ALSRMHDP,SERVCODE
          ENDIF
.
          MOVE      ALENSDAT,SERVDATE         * Service date
.
          IF        UPMHFLAG=0
            CALL      WRTMP000               * Write to temp file for Min.date
          ENDIF
.
          MATCH     ALENSDAT,MHINTDAT        * Service date <= todate?
          GOTO      PENC1000 IF LESS
.
.         Check MHINC Indicator
.
          MATCH     "0",ALENMOHR
          GOTO      PENC3000 IF EQUAL
          MATCH     "2",ALENMOHR
          GOTO      PENC1000 IF NOT EQUAL
.
PENC3000  MOVE      ONE,WRITFLAG
          BRANCH    UPMHFLAG,PENC8000
.
          CALL      CHKA0000                 * Write to U/R Admission file
          IF        EXIT=0
            MOVE      ALREURNO,AURNO
            CALL      CURD0000        * Write to U/R Detail file if not exist
          ENDIF
.
          CALL      MHSP0000                  * Write SP record
.
.         Set up details record (AD)
.
          MOVE      SP70,SSETCODE             * Service setting code
          PACK      KEY5,ANSL,ANSD,ALENLOCA
          CALL      RDCODE1
          IF        OVRCD=0
            UNPACK    THCSCOD,SSETCODE
          ENDIF
.
          MOVE      SP70,KEY1
          MATCH     "1",ALENRSTA
          IF        @EQUAL
            MOVE      "D",KEY1                * Transaction type
          ENDIF
.
          CALL      MHAD0000         * set up the record counter for AD record
          GOTO      PENC1000
.
PENC8000  PACK      KEY16,ALENVISN,ALENENCT,SP70
          CALL      RDALENC1
          IF        OVRCD=0
            MOVE      "1",ALENMOHR     * Status to Sent
            CALL      UPALENC1
          ENDIF
          MOVE      "1",ALENMOHR       * Status to Sent
          CALL      AUALENA
          GOTO      PENC1000
.
PENC9999  RETURN
+
.**********************************************************************
.*                            PGRC0000                                *
.*               Process Group Contacts                               *
.**********************************************************************
PGRC0000  PACK      KEY16,ALREVISN,SP70
          CALL      RSALGPA2
PGRC1000  CALL      RKALGPA2
          BRANCH    OVRCD,PGRC9999
          MATCH     ALREVISN,ALGAREFN
          GOTO      PGRC9999 IF NOT EQUAL
.
          MATCH     "1",ALGACURP             * Current patient?
          GOTO      PGRC1000 IF EQUAL        * Yes
.
          MOVE      ALGACONT,KEY8
          CALL      RDALGRE1
          BRANCH    OVRCD,PGRC1000
.
          MOVE      ALGESESN,KEY8
          CALL      RDALGRO1
          BRANCH    OVRCD,PGRC1000
.
          CALL      VLGR0000                  * Get Agency and Team code
.
          MOVE      "2",KEY1                  * Group contacts
          MOVE      ALREVISN,VISTNUMB
          MOVE      SP70,SERVCODE             * Service code
          PACK      KEY5,ANSG,ANSA,ALGAPSTA,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            UNPACK    THCSCOD,SERVCODE
          ENDIF
.
          MOVE      ALGEGDTE,SERVDATE         * Service date
.
          IF        UPMHFLAG=0
            CALL      WRTMP000               * Write to temp file for Min.date
          ENDIF
.
          MATCH     ALGEGDTE,MHINTDAT        * Group contact date <= todate?
          GOTO      PGRC1000 IF LESS
.
.         Check MHINC Indicator
.
          MATCH     "0",ALGAMOHX
          GOTO      PGRC3000 IF EQUAL        * unsent
          MATCH     "3",ALGAMOHX
          GOTO      PGRC3000 IF EQUAL        * send update
          MATCH     "2",ALGAMOHX
          GOTO      PGRC1000 IF NOT EQUAL
.
.         Set up details record (AD)
.
PGRC3000  MOVE      ONE,WRITFLAG
          BRANCH    UPMHFLAG,PGRC9200
.
          CALL      CHKA0000                 * Write to U/R Admission file
          IF        EXIT=0
            MOVE      ALREURNO,AURNO
            CALL      CURD0000        * Write to U/R Detail file if not exist
          ENDIF
.
          CALL      MHSP0000                  * Write SP record
.
.         Set up details record (AD)
.
          MOVE      SP70,SSETCODE             * Service setting code
          PACK      KEY5,ANSP,ANSO,ALGELOCN,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            UNPACK    THCSCOD,SSETCODE
          ENDIF
          MOVE      SP70,KEY1
          MATCH     "2",ALGAMOHX
          IF        @EQUAL
            MOVE      "D",KEY1                * Transaction type
          ENDIF
          CALL      MHAD0000         * set up the record counter for AD record
          GOTO      PGRC1000
.
PGRC9200  MOVE      "1",ALGAMOHX     * Status to Sent
          MATCH     SP70,SERVCODE
          IF        @EQUAL
            MOVE      SP70,ALGAMOHX
          ENDIF
          CALL      UPALGPA2
          GOTO      PGRC1000
.
PGRC9999  RETURN
+
.**********************************************************************
.*                            PLNK0000                                *
.*               Process for Linked OP Appointmnets in MH Department  *
.**********************************************************************
PLNK0000  CALL      VLMH0000                 * Get health agency and team code
          PACK      KEY32,ALREVISN,SP70
          CALL      ASALLNK                  * Referral Link audit file
PLNK1000  CALL      AKALLNK
          BRANCH    OVRCD,PLNK9999
          MATCH     ALREVISN,ALLNVISN        * Same visit number?
          GOTO      PLNK9999 IF NOT EQUAL
.
          MATCH     "B",ALLNAUDR             * Ignore 'Before Change'record
          GOTO      PLNK1000 IF EQUAL
.
.         Check if the appointment status is attended
.
          CALL      OUTFIL00       * Check Correct Files Are Open & Valid Site
          PACK      KEY36,ALLNLNKV,SP70
          CALL      RDSBOKA6
PLNK2000  CALL      RDKBOKA6
          BRANCH    OVRCD,PLNK1000
.
          MATCH     ALLNLNKV,DOBAOUTN
          GOTO      PLNK1000 IF NOT EQUAL     * Different visit number
          COMPARE   FOUR,OBASTAT
          GOTO      PLNK2000 IF NOT EQUAL     * Not attended
.
.         Check if clinic attendance is not recorded as an encounter
.
          PACK      KEY24,ALLNLNKV,SP70
          CALL      RSALENC7
          CALL      RKALENC7
          BRANCH    OVRCD,PLNK4000
.
          MATCH     ALENLINK,ALLNLNKV
          GOTO      PLNK1000 IF EQUAL           * Already been extracted
.
PLNK4000  MOVE      "3",KEY1                    * Linked OP
          MOVE      ALREVISN,VISTNUMB
          MOVE      SP70,SERVCODE
          PACK      KEY5,ANSC,ANSV,OBAVISIT,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            UNPACK    THCSCOD,SERVCODE        * Service code
          ENDIF
.
          MOVE      ALLNDATE,SERVDATE         * Service date
.
          IF        UPMHFLAG=0
            CALL      WRTMP000               * Write to temp file for Min.date
          ENDIF
.
          MATCH     ALLNDATE,MHINTDAT        * Date <= todate?
          GOTO      PLNK1000 IF LESS
.
          MATCH     "0",ALLNMOHR
          GOTO      PLNK4200 IF EQUAL        * Unsent
          MATCH     "2",ALLNMOHR
          GOTO      PLNK1000 IF NOT EQUAL    * not 'Send Delete required'
.
PLNK4200  MOVE      ONE,WRITFLAG
          BRANCH    UPMHFLAG,PLNK8000
.
          CALL      CHKA0000                 * Write to U/R Admission file
          IF        EXIT=0
            MOVE      ALREURNO,AURNO
            CALL      CURD0000        * Write to U/R Detail file if not exist
          ENDIF
.
          CALL      MHSP0000                  * Write SP record
.
.         Set up details record (AD)
.
          MOVE      SP70,SSETCODE             * Service setting code
          PACK      KEY25,OBASITE,OBACLIN,OBADATE,OBASTRT,SP70
          CALL      RDSESA1
          BRANCH    OVRCD,PLNK5000
.
          PACK      KEY28,OSESITE,OSECLIN,OSEDAY,OSESTRT,OSESSHNO,OSESSDAT,SP70
          CALL      RDOTHED1
          BRANCH    OVRCD,PLNK5000
.
          PACK      KEY5,ANSC,ANST,OTHELTYP,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            UNPACK    THCSCOD,SSETCODE
          ENDIF
.
PLNK5000  MOVE      SP70,KEY1
          MATCH     "D",ALLNAUDR
          IF        @EQUAL
            MOVE      "D",KEY1                * Transaction type
          ENDIF
          CALL      MHAD0000         * set up the record counter for AD record
          GOTO      PLNK1000
.
PLNK8000  PACK      KEY16,ALLNVISN,ALLNLNKV,SP70
          CALL      RDALLNK1
          IF        OVRCD=0
            MOVE      "1",ALLNMOHR     * Status to Sent
            CALL      UPALLNK1
          ENDIF
          MOVE      "1",ALLNMOHR       * Status to Sent
          CALL      AUALLNK
          GOTO      PLNK1000
.
PLNK9999  RETURN
+
.**********************************************************************
.*                            WRTMP000                                *
.*               Write to Temporary file to get the minimum date      *
.**********************************************************************
WRTMP000  BRANCH    UPMHFLAG,WRTMP9999
          PACK      KEY28,VISTNUMB,KEY1,HEALTHCD,TEAMCODE:
                          SERVCODE,SERVDATE,SP70
          CALL      RDTMPF1
          COMPARE   ZERO,OVRCD
          GOTO      WRTMP999 IF EQUAL
.
          UNPACK    KEY28,MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                          MHADSCOD,MHADMDAT
          CALL      WRTMPF1
WRTMP999  RETURN
+
.**********************************************************************
.         Get the minimum date
.**********************************************************************
MDAT0000  MOVE      SP70,KEY8                  * Initialise
          PACK      KEY28,SKEY20,SP70
          CALL      RSTMPF1
          CALL      RKTMPF1
          BRANCH    OVRCD,MDAT9999
          PACK      DIM20,MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                          MHADSCOD
          MATCH     DIM20,SKEY20
          GOTO      MDAT9999 IF NOT EQUAL
          MOVE      MHADMDAT,KEY8
MDAT9999  RETURN
+
.**********************************************************************
.         Get MH Agency and Team Code
.**********************************************************************
VLMH0000  MOVE      "0000",HEALTHCD
          PACK      HEALTHCD,CFILENO,SP70        *  Agency Code
          IF        IBCNMHOS=1
            MOVE      ALREHOSN,KEY3
            CALL      RDPTHSP1
            IF        OVRCD=0
              PACK      HEALTHCD,PTHSHDPC,SP70   * Health Department code
            ENDIF
          ENDIF
.
          MOVE      SP70,TEAMCODE                * Team Code
          MATCH     SP70,ALREDEPT
          GOTO      VLMH9999 IF EQUAL
.
          PACK      KEY5,ANSC,ANSG,ALREDEPT,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            MOVE      SP70,KEY6
            MOVE      TCFORM6,KEY6
            PACK      TEAMCODE,KEY6,SP70
          ENDIF
.
VLMH9999  RETURN
+
.**********************************************************************
.         Get Agency and Team Code for Group Contacts
.**********************************************************************
VLGR0000  MOVE      "0000",HEALTHCD
          PACK      HEALTHCD,CFILENO,SP70        *  Agency Code
          IF        IBCNMHOS=1
            PACK      KEY3,ALGRDEPT,SP70
            CALL      RDALDEP1
            IF        OVRCD=0
              MOVE      ALDEHOSP,KEY3
              CALL      RDPTHSP1
              IF        OVRCD=0
                PACK      HEALTHCD,PTHSHDPC,SP70   * Health Department code
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      SP70,TEAMCODE                * Team Code
          MATCH     SP70,ALGRSEST
          GOTO      VLGR9999 IF EQUAL
.
          MOVE      "gy",TCODE
          PACK      KEY5,TCODE,ALGRSEST,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            MOVE      SP70,KEY6
            MOVE      TCFORM6,KEY6
            PACK      TEAMCODE,KEY6,SP70
          ENDIF
.
VLGR9999  RETURN
+
.**********************************************************************
.*                            PLST0000                                *
.*               Processing MH LS                                     *
.**********************************************************************
PLST0000  PACK      KEY21,SP70
          CALL      RSMHLEG2
PLST1000  CALL      RKMHLEG2
          BRANCH    OVRCD,PLST9999
.
          MATCH     MHLEDATE,MHINTDAT        * Legal status date <= todate?
          GOTO      PLST9999 IF LESS
.
	  MATCH     "N",MHLESENT
          GOTO      PLST1000 IF NOT EQUAL
.
          PACK      KEY5,ANSL,ANSS,MHLESTAT,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,PLST1000
.
          MATCH     SP70,THCSCOD
          GOTO      PLST1000 IF EQUAL
.
          MOVE      MHLEADMN,KEY8
          CALL      RDMHVIS1
          BRANCH    OVRCD,PLST1000
.
          MOVE      MHVIURNO,ALREURNO
          MOVE      MHLEADMN,ALREVISN
.
.         PACK      KEY8,MHLEADMN,SP70
.         CALL      RDALREF1
.         BRANCH    OVRCD,PLST1000
.
          BRANCH    UPMHFLAG,PLST8000
.
          MOVE      SP70,ALREDEPT
          IF        IBCNMHOS=1
            MOVE      MHLEADMN,KEY8
            CALL      RDPMVX11
            IF        OVRCD=0
              MATCH     SP70,PMVXMHOS
              IF        !@EQUAL
                MOVE      PMVXMHOS,ALREHOSN
              ENDIF
            ENDIF
          ENDIF
          CALL      VLMH0000                 * Get Team code and Health agency
.
          CALL      WLGS00000                * Write MH LS record
.
          CALL      CHKA0000                 * Write to U/R Admission file
          IF        EXIT=0
            MOVE      ALREURNO,AURNO
            CALL      CURD0000        * Write to U/R Detail file if not exist
          ENDIF
          GOTO      PLST1000
.
PLST8000  MOVE      "Y",MHLESENT
          CALL      UPMHLEG2
          GOTO      PLST1000
.
PLST9999  RETURN
+
.**********************************************************************
.          Write MH LS record
.**********************************************************************
WLGS0000  MOVE      MHLEADMN,MHLEUNIQ
          PACK      KEY33,ALREURNO,MHLEUNIQ,MHLEDATE,MHLETIME,KEY1,SP70
          CALL      RDMHLE1
          IF        OVRCD=1
            MOVE      ALREURNO,MHLEURNO
            MOVE      MHLEADMN,MHLEUNIQ
            MOVE      MHLEDATE,MHLELDAT
            MOVE      MHLETIME,MHLELTIM
            MOVE      SP70,MHLERTYP
.
            MOVE      SP70,MHLELSEC
            MOVE      "LS",TCODE
            PACK      KEY5,TCODE,MHLESTAT
            CALL      RDCODE1
            IF        OVRCD=0
              UNPACK    THCSCOD,MHLELSEC
            ENDIF
            CALL      WRMHLE1
          ENDIF
WLGS9999  RETURN
+
.**********************************************************************
.          Processing MH Diagnosis
.         Only send most up to date diagnosis for the patient
.**********************************************************************
PDIA0000  MOVE      SP70,SAVADMN
          PACK      KEY16,Z70
          CALL      RSMHDIA1
PDIA1000  CALL      RPMHDIA1
          BRANCH    OVRCD,PDIA9999
.
.         Only the most up to date diagnosis for the patient
.
          MATCH     DMHDIADM,SAVADMN
          GOTO      PDIA1000 IF EQUAL            * same patient
.
          MATCH     "1",MHDIMOHR
          IF        @EQUAL
            MOVE      MHDIADMN,SAVADMN       * Save admission number
            GOTO      PDIA1000
          ENDIF
.
.         Check if it's linked to AH event
.
          UNPACK    SP70,ALREHOSN,ALREDEPT
          PACK      KEY8,MHDIADMN,SP70
          CALL      RDALREF1
          BRANCH    OVRCD,PDIA2000
.
          PACK      KEY5,ANSC,ANSG,ALREDEPT      * Check for MH Department
          CALL      RDCODE1
          BRANCH    OVRCD,PDIA2000
.
          MATCH     "M",TCINDC4                  * MH?
          GOTO      PDIA2000 IF NOT EQUAL
.
          MATCH     "0",ALRESTAT
          GOTO      PDIA2000 IF EQUAL            * Waiting
.
          MATCH     ALRERDAT,MHDIDATE            * check with referral date
          GOTO      PDIA2000 IF LESS             * try AH 
.
          CALL      VLMH0000                 * Get health agency and team code
          MOVE      ZEROVISN,AADMNO
          GOTO      PDIA3000
.
.         Check if it's linked to an IP event
.
PDIA2000  CALL      RDMISS1
          BRANCH    OVRCD,PDIA1000
          PACK      KEY13,MHDIADMN,SP70
          CALL      RSPTECD1
          CALL      RKPTECD1
          BRANCH    OVRCD,PDIA2200
.
          MATCH     DMHDIADM,DPTEDADM            * Same admission no?
          GOTO      PDIA1000 IF EQUAL
.
PDIA2200  MATCH     MHDIDATE,ADATE               * check with admission date
          GOTO      PDIA1000 IF LESS
.
          IF        IBCNMHOS=1
            MOVE      MHDIADMN,KEY8
            CALL      RDPMVX11
            IF        OVRCD=0
              MATCH     SP70,PMVXMHOS
              IF        !@EQUAL
                MOVE      PMVXMHOS,ALREHOSN
              ENDIF
            ENDIF
          ENDIF
          CALL      VLMH0000                 * Get health agency and team code
.
PDIA3000  MATCH     MHDIDATE,MHINTDAT      * Ref.date <= todate?
          GOTO      PDIA1000 IF LESS
. 
          MATCH     "0",MHDIMOHR
          GOTO      PDIA1000 IF NOT EQUAL
.
          BRANCH    UPMHFLAG,PDIA8000
.
          MOVE      SP70,KEY9
          MOVE      ZERO,F1
          MOVE      ZERO,FORM1
.
PDIA4000  COMPARE   EIGHT,FORM1
          GOTO      PDIA1000 IF NOT LESS
.
          ADD       ONE,FORM1
          LOAD      KEY9,FORM1,MHDIX1CA,MHDIX1CB,MHDIX1CC:
                               MHDIX2CA,MHDIX2CB,MHDIX2CC:
                               MHDIICD1,MHDIICD2
          MATCH     SP70,KEY9
          GOTO      PDIA4000 IF EQUAL
.
          MOVE      MHDIADMN,SAVADMN       * Save admission number
          CALL      WDGN0000               * write to tempfile
          ADD       ONE,F1
.
          MATCH     ZEROVISN,AADMNO
          IF        @EQUAL
            CALL      CHKA0000           * Write to U/R Admission file
            IF        EXIT=0
              MOVE      ALREURNO,AURNO
              CALL      CURD0000        * Write to U/R Detail file if not exist
            ENDIF
          ELSE
             CALL      CURA0000          * Check U/R Admission file
             IF        EXIT=0
               CALL      CURD0000        * Write to U/R Detail file if not exist
             ENDIF
          ENDIF
          GOTO      PDIA4000
.
PDIA8000  MOVE      "1",MHDIMOHR         * Status of 'Sent'
          CALL      UPMHDIA1
          GOTO      PDIA1000
.
PDIA9999  RETURN
+
.**********************************************************************
.         Write MH Diagnosis to tempfile
.**********************************************************************
WDGN0000  MOVE      ZERO,FORM3
          PACK      KEY11,SAVADMN,Z70
          CALL      RSMHDI1
          CALL      RPMHDI1
          BRANCH    OVRCD,WDGN2000
.
          MATCH     MHDIAADM,SAVADMN
          GOTO      WDGN2000 IF NOT EQUAL
.
WDGN1000  MOVE      MHDISQUE,FORM3
.
WDGN2000  ADD       ONE,FORM3
          PACK      KEY11,SAVADMN,FORM3
          CALL      RDMHDI1
          COMPARE   ZERO,OVRCD
          GOTO      WDGN1000 IF EQUAL         * already exists
.
          MOVE      "07",MHDICSYS             * Using ICD10
          IF        FORM1=7 | FORM1=8
            MOVE      "10",MHDICSYS
            MATCH     SP70,PTCNGDV2
            IF        !@EQUAL
              MOVE      "11",MHDICSYS         * Using ICD10 version 2
            ENDIF
            MATCH     SP70,PTCNGDV3
            IF        !@EQUAL
              MOVE      "12",MHDICSYS         * Using ICD10 version 3
            ENDIF
          ENDIF
.
          PACK      KEY17,MHDIXDAT,KEY9    * default to DSM-IV codes
          IF        FORM1=7
            PACK      KEY17,MHDIDAT1,MHDIICD1    * 1st ICD
          ENDIF
          IF        FORM1=8
            PACK      KEY17,MHDIDAT2,MHDIICD2    * 2nd ICD
          ENDIF
.
          UNPACK    KEY17,MHDIDDAT,MHDICODE *Dis.or Oper.date/code
          MOVE      SAVADMN,MHDIAADM
          MOVE      FORM3,MHDISQUE
          MOVE      MHDICODE,KEY9
          REP       ". ",KEY9
          REP       "- ",KEY9
          SQUEEZE   KEY9
          PACK      MHDICODE,KEY9,SP70
.
          MOVE      "B",MHDIDTYP
          IF        F1=0
            MOVE      "A",MHDIDTYP        * Primary
          ENDIF
          CALL      WRMHDI1
.
WDGN9999  RETURN
+
.**********************************************************************
.*                            MHSP0000                                *
.*               Write MH Summary (SP) record to tempfile             *
.**********************************************************************
MHSP0000  PACK      KEY20,VISTNUMB,KEY1,HEALTHCD,TEAMCODE:
                          SERVCODE,SP70
          CALL      RDMHSP1
          COMPARE   ZERO,OVRCD
          GOTO      MHSP9999 IF EQUAL
.
          UNPACK    KEY20,MHSPVISN,MHSPTYPE,MHSPAGEN,MHSPTEAM:
                          MHSPSCOD
          CALL      WRMHSP1
MHSP9999  RETURN
+
.**********************************************************************
.*                            MHAD0000                                *
.*              Write MH AD record to tempfile                        *
.**********************************************************************
MHAD0000  MOVE      ZERO,FORM8
          PACK      SKEY28,MHSPVISN,MHSPTYPE,MHSPAGEN,MHSPTEAM:
                           MHSPSCOD,SERVDATE
          PACK      KEY36,SKEY28,Z70
          CALL      RSMHAD1
          CALL      RPMHAD1
          BRANCH    OVRCD,MHAD2000
.
          PACK      KEY28,MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                          MHADSCOD,MHADSDAT
          MATCH     KEY28,SKEY28
          GOTO      MHAD2000 IF NOT EQUAL
.
          MOVE      MHADRCNT,FORM8
MHAD2000  ADD       ONE,FORM8
          MOVE      FORM8,MHADRCNT
.
          UNPACK    SKEY28,MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                          MHADSCOD,MHADSDAT
.
          MOVE      KEY1,MHADTTYP
          MOVE      SSETCODE,MHADSETD
.
          PACK      KEY36,SKEY28,MHADRCNT,SP70
          CALL      WRMHAD1
MHAD9999  RETURN
+
.**********************************************************************
.*                            WRLGS000                                *
.*               Write record to Legal Status tempfile                *
.**********************************************************************
WRLGS000  PACK      KEY33,MHDLURNO,MHDLUNIQ,MHDLSDAT,MHDLSTIM,MHDLRTYP,SP70
          CALL      RDMHLE1
          IF        OVRCD=1
            MOVE      MHDLURNO,MHLEURNO
            MOVE      MHDLUNIQ,MHLEUNIQ
            MOVE      MHDLSDAT,MHLELDAT
            MOVE      MHDLSTIM,MHLELTIM
            MOVE      MHDLRTYP,MHLERTYP
.
            MOVE      SP70,MHLELSEC
            MOVE      "LS",TCODE
            PACK      KEY5,TCODE,MHDLSCOD
            CALL      RDCODE1
            IF        OVRCD=0
              UNPACK    THCSCOD,MHLELSEC
            ENDIF
            CALL      WRMHLE1
          ENDIF
WRLGS999  RETURN
+
.**********************************************************************
.*                            VPAT0000                                *
.*               Validate patient health agency and adm.care class    *
.**********************************************************************
VPAT0000  CALL      VCCAR000               * Validate admission care class
          BRANCH    EXIT,VPAT9999
.
          CALL      VAGEN000               * Validate Health Agency code
          BRANCH    EXIT,VPAT9999
.
          MOVE      ZERO,EXIT
.
VPAT9999  RETURN
+
.**********************************************************************
.*                            VAGEN000                                *
.*                     Validate the Health Agency Code                *
.**********************************************************************
VAGEN000  MATCH     SP70,PTMIAGNC
          GOTO      VAGEN900 IF EQUAL       * blank code, get next patient
.
          MOVE      "0000",HEALTHCD
          MOVE      "HA",TCODE
          PACK      KEY5,TCODE,PTMIAGNC
          CALL      RDCODE1
          BRANCH    OVRCD,VAGEN900
.
          MATCH     "P",TCINDC1
          GOTO      VAGEN900 IF NOT EQUAL
.
          MATCH     SP70,THCSCOD
          IF        @EQUAL
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                      *24,"| HDP Eqv.Health Agency Code must NOT be blank.":
                      *132,"|"
          ELSE
            MOVE      THCSCOD,HEALTHCD
            REP       " 0",HEALTHCD
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      VAGEN999
.
VAGEN900  MOVE      ONE,EXIT
VAGEN999  RETURN
+
.**********************************************************************
.*                            VCCAR000                                *
.*                     Validate the Care Class Code                   *
.**********************************************************************
VCCAR000  MATCH     SP70,ACLSS
          GOTO      VCCAR900 IF EQUAL       * next patient
.
          MOVE      SP70,TEAMCODE
          MOVE      "P ",TCODE
          PACK      KEY5,TCODE,ACLSS
          CALL      RDCODE1
          BRANCH    OVRCD,VCCAR900
.
          MATCH     "IM",THCSCOD
          GOTO      VCCAR900 IF NOT EQUAL
.
          MOVE      ZERO,FORM6
          MOVE      SP70,KEY4
          MOVE      TCFORM6,FORM4
          MOVE      FORM4,KEY4
          MOVE      KEY4,TEAMCODE        * Team code
          REP       " 0",TEAMCODE
.
          MOVE      ZERO,EXIT
          GOTO      VCCAR999
.
VCCAR900  MOVE      ONE,EXIT
VCCAR999  RETURN
+
.**********************************************************************
.*                            CURA0000                                *
.*               Check record exists in U/R Admission file            *
.**********************************************************************
CURA0000  MOVE      ZERO,EXIT
          PACK      KEY16,AURNO,AADMNO
          CALL      RDMHUA1                * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      CURA9000 IF EQUAL      * already exist
.
          UNPACK    SP70,MHUAADAT,MHUADDAT
          UNPACK    SP70,MHUATEAM,MHUASSET,MHUAHLTH,MHUASCOD
.
          MOVE      "0",MHUADTYP
          REP       " 0",MHUATEAM
          REP       " 0",MHUAHLTH
          MOVE      SP70,DDATE
          COMPARE   THREE,ASTAT
          GOTO      CURA8000 IF NOT EQUAL
.
          MOVE      AADMNO,KEY8
          CALL      RDDSCH1
          BRANCH    OVRCD,CURA7000
.
          MOVE      DDATE,MHUADDAT
          MOVE      "D ",TCODE
          PACK      KEY5,TCODE,DSTAT
          CALL      RDCODE1
          BRANCH    OVRCD,CURA7200
.
          CMATCH    "D",TCINDC3
          GOTO      CURA6000 IF EQUAL    * valid code
          CMATCH    "C",TCINDC3
          GOTO      CURA6000 IF EQUAL    * valid code
.
          CMATCH    "O",TCINDC3
          GOTO      CURA7200 IF NOT EQUAL
.
CURA6000  MOVE      TCINDC3,MHUADTYP   * Disc.type
          GOTO      CURA8000
.
CURA7000  CALL      CHKLN000             * Check current line number
          PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                    *24,"| Missing Discharge Record.":
                    *132,"|"
          MOVE      SP70,DDATE         * blank discharge date
          GOTO      CURA8000
.
CURA7200  CALL      CHKLN000             * Check current line number
          PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                    *24,"| Invalid Discharge Type - ",DSTAT:
                    *132,"|"
          GOTO      CURA8000
.
.         Check if this patient was undischarged
.
CURA8000  IF        CANCFLAG=1
            MATCH     "2",PTUNTYPE
            IF        @EQUAL
              MOVE      PTUNODTE,MHUADDAT * old discharge date
            ENDIF
          ENDIF
.
          MOVE      "IP",MHUASSET
          MATCH     ADATE,DDATE
          IF        @EQUAL
            MOVE      "DP",MHUASSET        * Service Setting
          ENDIF
.
          MOVE      "A ",TCODE
          PACK      KEY5,TCODE,ATYPE
          CALL      RDCODE1
          IF        OVRCD=0
            IF        TCFORM6<100
              MOVE      ZERO,FORM2
              MOVE      TCFORM6,FORM2
              MOVE      FORM2,KEY2
              REP       " 0",KEY2
              PACK      MHUASCOD,ANST,KEY2   * Service code
            ENDIF
          ENDIF
.
          MOVE      AURNO,MHUAURNO
          MOVE      AADMNO,MHUAADMN
          MOVE      ADATE,MHUAADAT
          MOVE      HEALTHCD,MHUAHLTH        * Health agency
          MOVE      TEAMCODE,MHUATEAM        * Team code
          MOVE      SP70,MHUAREFR            * Not a referral record
          PACK      KEY16,MHUAURNO,MHUAADMN
          CALL      WRMHUA1                * write to the temp file
.
          MOVE      ZERO,EXIT
          GOTO      CURA9999
.
CURA9000  MOVE      ONE,EXIT
          GOTO      CURA9999
.
CURA9999  RETURN
+
.**********************************************************************
.*                            CURD0000                                *
.*               Check record exists in U/R Details file              *
.**********************************************************************
CURD0000  PACK      KEY8,AURNO,SP70
          CALL      RDMHUD1                * read the temp file
          COMPARE   ZERO,OVRCD
          GOTO      CURD9999 IF EQUAL      * already exist
.
          MOVE      AURNO,MHUDURNO
          CALL      RDNHMAS2
          IF        OVRCD=1
            CALL      CHKLN000             * Check current line number
            MOVE      SP70,AADMNO
            PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                      *24,"| Missing NHI Master Record.":
                      *132,"|"
            MOVE      SP70,MHUDNHIN
            MOVE      SP70,MHUDDOBR
            MOVE      SP70,MHUDGEND
            MOVE      SP70,MHUDETH1
            MOVE      SP70,MHUDETH2
            MOVE      SP70,MHUDETH3
            MOVE      SP70,MHUDDOMC
            GOTO      CURD9000
          ENDIF
.
          MATCH     SP70,NHMADOMC          * Domicile code must not be blank
          IF        @EQUAL
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                      *24,"| NHI Domicile Code must NOT be blank.":
                      *132,"|"
          ENDIF
.
          MATCH     SP70,NHMADOB           * DOB must not be blank 
          IF        @EQUAL
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                      *24,"| NHI Date of Birth must NOT be blank.":
                      *132,"|"
          ENDIF
.
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8              * Current date
          MATCH     NHMADOB,KEY8
          IF        @LESS
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                      *24,"| NHI Date of Birth must NOT be in the Future.":
                      *132,"|"
          ENDIF
.
          MATCH     SP70,NHMANMPI          * NHI Number must not be blank
          IF        @EQUAL
            CALL      CHKLN000             * Check current line number
            PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                      *24,"| NHI Number must NOT be blank.":
                      *132,"|"
          ENDIF
.
          MATCH     SP70,NHMAETH2
          IF        !@EQUAL
            MATCH     SP70,NHMAETH
            IF        @EQUAL
              CALL      CHKLN000             * Check current line number
              PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                        *24,"| Ethnicity 1 must NOT be blank.":
                        *132,"|"
            ENDIF
          ENDIF
.
          MATCH     SP70,NHMAETH3
          IF        !@EQUAL
            MATCH     SP70,NHMAETH
            IF        @EQUAL
              CALL      CHKLN000             * Check current line number
              PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                        *24,"| Ethnicity 1 must NOT be blank.":
                        *132,"|"
            ELSE
              MATCH     SP70,NHMAETH2
              IF        @EQUAL
                CALL      CHKLN000             * Check current line number
                PRINT     *1,"| ",AURNO,*12,"| ",AADMNO:
                          *24,"| Ethnicity 2 must NOT be blank.":
                          *132,"|"
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      AURNO,MHUDURNO
          MOVE      NHMANMPI,MHUDNHIN
          MOVE      NHMADOB,MHUDDOBR
          MOVE      NHMASEX,MHUDGEND
          MOVE      NHMAETH,MHUDETH1
          MOVE      NHMAETH2,MHUDETH2
          MOVE      NHMAETH3,MHUDETH3
          MOVE      NHMADOMC,MHUDDOMC
.
CURD9000  REP       " 0",MHUDETH1
          REP       " 0",MHUDETH2
          REP       " 0",MHUDETH3
          PACK      KEY8,MHUDURNO
          CALL      WRMHUD1                * read the U/R Detail temp.file
.
CURD9999  RETURN
+
.**********************************************************************
.*                            CTRN0000                                *
.*                     Write to Transfer tempfile                     *
.**********************************************************************
CTRN0000  MOVE      MHINFDAT,STRTDATE
          MOVE      MHINTDAT,ENDDATE
          MOVE      ZERO,RECFLAG
          PACK      KEY30,DAADMNO,ENDDATE,Z70
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,CTRN9999
.
          MATCH     TADMN,AADMNO                 * same admission still ?
          GOTO      CTRN9999 IF NOT EQUAL
.
.         A transfer record has been found for the admission, so see if it
.         lies within the extract period.
.         First check if the date of the record is on or before the start date
.         for the extract.
.
.         Check if it was a sameday admission
.         (in which case we need to write an SP and AD record as well).
.
          MATCH     ADATE,DDATE
          GOTO      CTRN1100 IF NOT EQUAL
.
          MATCH     ANSD,TMOVE
          IF        @EQUAL
            MOVE      TDATE,WORKDATE      * SP End Date
            MOVE      TATYPE,WORKATYP
            CALL      WRSUM000            * Write Summary file
.
            MOVE      TDATE,STRTPERD      * Start Period
            MOVE      TDATE,ENDPERD       * End Period
            CALL      PROAD000            * write detail file
.
            MOVE      MHSUSQUE,MHDESQUE
            MOVE      SP70,MHDEDTYP
            CALL      WRDSC000            * Write DS record
            MOVE      ONE,RECFLAG
            GOTO      CTRN9000
          ENDIF
.
.         If the last transfer record date is on or before the extract period,
.         and is a discharge record, then we can ignore this admission as there
.         is an error in the day file (patdxxxx).
.
CTRN1100  MATCH     STRTDATE,TDATE        * transfer date <= start date ?
          IF        @LESS | @EQUAL
            MATCH     ANSD,TMOVE
            GOTO      CTRN9999 IF EQUAL   * disc.before start of period
            MATCH     ANSL,TMOVE
            GOTO      CTRN9999 IF EQUAL   * on leave before start of period
.
            MOVE      ENDDATE,WORKDATE
            CALL      PRED0000            * Get end date of SP record
            MOVE      TATYPE,WORKATYP
            CALL      WRSUM000            * Write Summary record
.
            MOVE      STRTDATE,STRTPERD   * Start Period
            MOVE      WORKDATE,ENDPERD    * End Period
            CALL      PROAD000            * write detail file
            MOVE      ONE,RECFLAG
            GOTO      CTRN9000            * finished admission
          ENDIF
.
          MOVE      TDATE,SAVDATE
          MOVE      TMOVE,SAVMOVE
.
          MATCH    ANSL,TMOVE
          GOTO     CTRN4000 IF EQUAL
.
          MATCH    TDATE,ENDDATE                * do not include the enddate
          GOTO     CTRN4000 IF EQUAL
.
.         The last transfer record for the period has been found
.         If Discharged in the period write DS record
.
          MATCH     ANSD,TMOVE                   * discharge record ?
          IF        @EQUAL
            MOVE      "  1",MHDESQUE
            MOVE      SP70,MHDEDTYP
            CALL      WRDSC000                   * write a discharge record
            MOVE      ONE,RECFLAG
            GOTO      CTRN4000                   * load SP record end date
          ENDIF
.
.         The last transfer record date in the period has been found
.         and was either an admission (A), change (C) or return (R) from
.         leave (L) record.  As such, we need to record a single SP/Sum.record
.         for the whole period till End of Extract date,
.         along with its associated AD/Detail records.
.
          MOVE    ENDDATE,WORKDATE    * todate
          CALL    PRED0000            * Get one day before trans date
          MOVE    TATYPE,WORKATYP
          CALL    WRSUM000            * Write Summary record
.
          MOVE    TDATE,STRTPERD      * Start Period
          MOVE    WORKDATE,ENDPERD    * End Period
          CALL    PROAD000            * write detail file
          MOVE    ONE,RECFLAG
.
.         Loop back through the remainder of the transfer records for the
.         admission looking for records which apply to the extract period
.
CTRN4000  CALL      RDPTRAN2                     * read previous record
          BRANCH    OVRCD,CTRN9000               * eof - finished admission
.
          MATCH     TADMN,AADMNO                 * same admission still ?
          GOTO      CTRN9000 IF NOT EQUAL        * no - finished admission
.
          MATCH     ANSL,TMOVE
          GOTO      CTRN8000 IF EQUAL
.
.         Check if eiter the Return and Change record on the Discharge date
.
          MATCH     ANSD,SAVMOVE
          GOTO      CTRN5000 IF NOT EQUAL
.
          MATCH     TDATE,SAVDATE
          GOTO      CTRN5000 IF NOT EQUAL
.
.   If patient Return on the day of Disc., then no SP rec.
.
          MATCH     ANSR,TMOVE
          GOTO      CTRN8000 IF EQUAL
.
.   If patient disc.on the day of return, then no SP rec.
.
          MATCH     ANSC,TMOVE
          GOTO      CTRN8000 IF EQUAL
.
.         We have a transfer record for the admission, so check
.         if the transfer date is less than the extract start date.  If it is,
.         we need to write SP adn AD from extract date to one day before disc.
.
CTRN5000  MATCH     STRTDATE,TDATE
          IF        @LESS|@EQUAL
            MOVE      SAVDATE,WORKDATE
            CALL      PRED0000            * Get one day before trans date
            MOVE      TATYPE,WORKATYP
            CALL      WRSUM000            * Write Summary record
.
            MOVE      STRTDATE,STRTPERD   * Start Period
            MOVE      WORKDATE,ENDPERD    * End Period
            CALL      PROAD000            * write detail file
            MOVE      ONE,RECFLAG
            GOTO      CTRN9000
          ELSE
            MOVE      SAVDATE,WORKDATE
            CALL      PRED0000            * Get one day before trans date
            MOVE      TATYPE,WORKATYP
            CALL      WRSUM000            * Write Summary record
.
            MOVE      TDATE,STRTPERD      * Start Period
            MOVE      WORKDATE,ENDPERD    * End Period
            CALL      PROAD000            * write detail file
            MOVE      ONE,RECFLAG
          ENDIF
.
CTRN8000  MOVE      TDATE,SAVDATE
          MOVE      TMOVE,SAVMOVE
          GOTO      CTRN4000
.
.------ Only need to write to the tempfile file if record -----
.------ is not already there ------
.
CTRN9000  COMPARE   ZERO,RECFLAG
          GOTO      CTRN9999 IF EQUAL
.
          CALL      CURA0000          * Check U/R Admission file
          BRANCH    EXIT,CTRN9999     * already exist
          CALL      CURD0000          * Write to U/R Detail file if not exist
.
CTRN9999  RETURN
+
.**********************************************************************
.*                            WRSUM000                                *
.*                     Write to service summary file                  *
.**********************************************************************
WRSUM000  MOVE      ZERO,FORM3
          MOVE      AADMNO,MHSUADMN
          PACK      KEY11,MHSUADMN,Z70
          CALL      RSMHSU1
WRSUM100  CALL      RPMHSU1
          BRANCH    OVRCD,WRSUM800
          MATCH     MHSUADMN,DAADMNO
          GOTO      WRSUM800 IF NOT EQUAL     * Different admission no.
          MOVE      MHSUSQUE,FORM3
.
WRSUM800  ADD       ONE,FORM3
          MOVE      FORM3,MHSUSQUE
          MOVE      AADMNO,MHSUADMN
          PACK      KEY11,MHSUADMN,MHSUSQUE
          CALL      RDMHSU1
          COMPARE   ZERO,OVRCD
          GOTO      WRSUM800 IF EQUAL
.
          MOVE      TDATE,MHSUSDAT      * SP Start Date
          MOVE      WORKDATE,MHSUEDAT   * SP End Date
          MOVE      WORKATYP,MHSUATYP   * Admission type
          MOVE      SP70,MHSURTYP       * Record type
          IF        CANCFLAG=1
            MOVE      PTUNTYPE,MHSURTYP
          ENDIF
          CALL      WRMHSU1
WRSUM999  RETURN
+
.**********************************************************************
.*                      PRAD0000                                      *
.*                  Process AD record for Detail file                 *
.**********************************************************************
PROAD000  MOVE      STRTPERD,WORKDATE
.
PROAD100  CALL      WRDET000            * Write Detail record
          CALL      NXTD0000            * get next date
          MATCH     WORKDATE,ENDPERD
          GOTO      PROAD100 IF NOT LESS
.
PROAD999  RETURN
+
.**********************************************************************
.*                            WRDET000                                *
.*                     Write to service detail file                   *
.**********************************************************************
WRDET000  MOVE      ZERO,FORM3
          PACK      KEY11,MHSUADMN,MHSUSQUE,SP70
          PACK      KEY14,KEY11,Z70
          CALL      RSMHDE1
WRDET100  CALL      RPMHDE1
          BRANCH    OVRCD,WRDET800
.
          PACK      SKEY11,MHDEADMN,MHDESQUE,SP70
          MATCH     KEY11,SKEY11
          GOTO      WRDET800 IF NOT EQUAL
          MOVE      MHDEDCNT,FORM3
.
WRDET800  ADD       ONE,FORM3
          MOVE      FORM3,MHDEDCNT
          PACK      KEY14,KEY11,MHDEDCNT,SP70
          CALL      RDMHDE1
          COMPARE   ZERO,OVRCD
          GOTO      WRDET800 IF EQUAL
.
          MOVE      MHSUADMN,MHDEADMN
          MOVE      MHSUSQUE,MHDESQUE
          MOVE      TDATE,MHDEDATE      * AD Start date
          MOVE      WORKDATE,MHDEPDAT   * AD Period date
          MOVE      SP70,MHDERTYP       * Record type
          IF        CANCFLAG=1
            MOVE      PTUNTYPE,MHDERTYP
          ENDIF
          MOVE      SP70,MHDEDTYP
          CALL      WRMHDE1
.
WRDET999  RETURN
+
.**********************************************************************
.*                            WRDSC000                                *
.*                  Write to Discharge file                           *
.**********************************************************************
WRDSC000  MOVE      AADMNO,MHDEADMN
          MOVE      "zzz",MHDEDCNT
          MOVE      TDATE,MHDEDATE      * DS Start date
          MOVE      TDATE,MHDEPDAT      * DS Period date
          MOVE      SP70,MHDERTYP       * Record type
          IF        CANCFLAG=1
            MOVE      PTUNTYPE,MHDERTYP
          ENDIF
.
          PACK      KEY14,MHDEADMN,MHDESQUE,MHDEDCNT,SP70
          CALL      WRMHDE1
WRDSC999  RETURN
+
.**********************************************************************
.*                      NXTD0000 - Calculate next day                 *
.**********************************************************************
NXTD0000  UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY  * get date prior to transfer
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
.         
.         Convert gregorian date to julian day
.         
          CALL      DMYCON
          ADD       ONE,JULDAY                   * subtract one day
.         
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON                       * convert to gregorian date
.
          PACK      WORKDATE,CC,YY,MM,DD         * load SP end date
          REP       " 0",WORKDATE
.
NXTD9999  RETURN
+
.*****************************************************************************
.*                         PRED0000                Called by:                *
.*             Get the end date for the SP record                            *
.*****************************************************************************
PRED0000  UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY 
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
.         
.         Convert gregorian date to julian day
.         
          CALL      DMYCON
          SUB       ONE,JULDAY                   * subtract one day
.         
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON                       * convert to gregorian date
.
          PACK      WORKDATE,CC,YY,MM,DD         * load SP end date
          REP       " 0",WORKDATE
.
PRED9999  RETURN
+
.**********************************************************************
.*                            CHKLN000                                *
.*                     Check the current line number                  *
.**********************************************************************
CHKLN000  COMPARE   "50",CLNO
          CALL      HEAD0000 IF NOT LESS
          ADD       ONE,CLNO
          ADD       ONE,ERRCOUNT
          MOVE      ONE,ERRFLAG
CHKLN999  RETURN
+
.**********************************************************************
.*                            HEAD0000                                *
.*                     Print Header of Error Report                   *
.**********************************************************************
HEAD0000  CALL      HEAD132
          
          UNPACK    MHINFDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *1,MHINSEID," for ",CPCDATE," to ";
          UNPACK    MHINTDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     CPCDATE,*N

          CALL      UND132
          PRINT     *1,"| U/R No ",*12,"| Adm.No ":
                    *24,"| Error Description":
                    *132,"|"
          CALL      UND132
          ADD       THREE,CLNO
HEAD9999  RETURN
+
.**********************************************************************
.*                            ENDP0000                                *
.*                     Print End of Error Report                      *
.**********************************************************************
ENDP0000  PRINT     *N,*1,"Total Number of Errors: ",ERRCOUNT:
                    *N,*N,*1,"End of Report"
.
ENDP9999  RETURN
+
.**********************************************************************
.*                            DAGN0000                                *
.*                 Default Health Agency code                         *
.**********************************************************************
DAGN0000  MOVE      SP70,FPREFIX
          MOVE      SP70,EXHDAGEN
          MOVE      "HA",TCODE
          PACK      KEY5,TCODE,SP70
          CALL      RDSCODE1
DAGN1000  CALL      RDKCODE1
          BRANCH    OVRCD,DAGN9000
          MATCH     "HA",TCODE
          GOTO      DAGN9000 IF NOT EQUAL
          MATCH     "P",TCINDC1
          GOTO      DAGN1000 IF NOT EQUAL
          MATCH     SP70,THCSCOD
          GOTO      DAGN1000 IF EQUAL     * Blank
.
          MOVE      ACODE,FPREFIX
          MOVE      THCSCOD,EXHDAGEN      * Agency code for header record
          MOVE      ZERO,EXIT
          GOTO      DAGN9999
.
DAGN9000  MOVE      ONE,EXIT
DAGN9999  RETURN
+
.**********************************************************************
.*                            DELFIL00                                *
.**********************************************************************
DELFIL00
.------ set up the U/R Admission file ------
.
          OPEN      MEHURAXX,TMPFILES[1]
          CALL      DELUR000              * delete any existing records if any
.
          CLEAR     CMDLINE
          CLOSE     MEHURAXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[1],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.------ set up the U/R Detail file ------
.
          OPEN      MEHURDXX,TMPFILES[2]
          CALL      DELUD000              * delete any existing records if any
.
          CLEAR     CMDLINE
          CLOSE     MEHURDXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[2],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.------ set up the Admission Diagnosis file ------
.
          OPEN      MEHDIAXX,TMPFILES[3]
          CALL      DELDI000              * delete any existing records if any
.
          CLEAR     CMDLINE
          CLOSE     MEHDIAXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[3],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.------ set up the Service Summary file ------
.
          OPEN      MEHSUMXX,TMPFILES[4]
          CALL      DELSU000              * delete any existing records if any
.
          CLEAR     CMDLINE
          CLOSE     MEHSUMXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[4],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.------ set up the Service Detail file ------
.
          OPEN      MEHDETXX,TMPFILES[5]
          CALL      DELDE000              * delete any existing records if any
.
          CLEAR     CMDLINE
          CLOSE     MEHDETXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[5],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.------ set up the Legal Status Detail file ------
.
          OPEN      MEHLEGXX,TMPFILES[6]
          CALL      DELLE000              * delete any existing records if any
.
          CLEAR     CMDLINE
          CLOSE     MEHLEGXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[6],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.------ delete records from temp files for MH ------
.
          OPEN      MHALRFXX,TMPFILES[7]
          CALL      DELRF000              * delete any existing records if any
.
          CLEAR     CMDLINE
          CLOSE     MHALRFXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[7],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      MHALSPXX,TMPFILES[8]
          CALL      DELSP000              * delete any existing records if any
.
          CLEAR     CMDLINE
          CLOSE     MHALSPXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[8],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      MHALADXX,TMPFILES[9]
          CALL      DELAD000              * delete any existing records if any
.
          CLEAR     CMDLINE
          CLOSE     MHALADXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[9],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
DELFIL99  RETURN
+
.**********************************************************************
.*                            DELUR000                                *
.**********************************************************************
DELUR000  PACK      KEY16,SP70
          CALL      RSMHUA1
          CALL      RKMHUA1
          BRANCH    OVRCD,DELUR999
          PACK      KEY16,MHUAURNO,MHUAADMN,SP70
          CALL      DEMHUA1
          GOTO      DELUR000
.
DELUR999  RETURN
+
.**********************************************************************
.*                            DELUD000                                *
.**********************************************************************
DELUD000  PACK      KEY8,SP70
          CALL      RSMHUD1
          CALL      RKMHUD1
          BRANCH    OVRCD,DELUD999
          PACK      KEY8,MHUDURNO,SP70
          CALL      DEMHUD1
          GOTO      DELUD000
.
DELUD999  RETURN
+
.**********************************************************************
.*                            DELDI000                                *
.**********************************************************************
DELDI000  PACK      KEY11,SP70
          CALL      RSMHDI1
          CALL      RKMHDI1
          BRANCH    OVRCD,DELDI999
          PACK      KEY11,MHDIAADM,MHDISQUE,SP70
          CALL      DEMHDI1
          GOTO      DELDI000
.
DELDI999  RETURN
+
.**********************************************************************
.*                            DELSU000                                *
.**********************************************************************
DELSU000  PACK      KEY11,SP70
          CALL      RSMHSU1
          CALL      RKMHSU1
          BRANCH    OVRCD,DELSU999
          PACK      KEY11,MHSUADMN,MHSUSQUE,SP70
          CALL      DEMHSU1
          GOTO      DELSU000
.
DELSU999  RETURN
+
.**********************************************************************
.*                            DELDE000                                *
.**********************************************************************
DELDE000  PACK      KEY14,SP70
          CALL      RSMHDE1
          CALL      RKMHDE1
          BRANCH    OVRCD,DELDE999
          PACK      KEY14,MHDEADMN,MHDESQUE,MHDEDCNT,SP70
          CALL      DEMHDE1
          GOTO      DELDE000
.
DELDE999  RETURN
+
.**********************************************************************
.*                            DELLE000                                *
.**********************************************************************
DELLE000  PACK      KEY33,SP70
          CALL      RSMHLE1
          CALL      RKMHLE1
          BRANCH    OVRCD,DELLE999
          PACK      KEY33,MHLEURNO,MHLEUNIQ,MHLELDAT,MHLELTIM,MHLERTYP,SP70
          CALL      DEMHLE1
          GOTO      DELLE000
.
DELLE999  RETURN
+
.**********************************************************************
.*                            DELRF000                                *
.**********************************************************************
DELRF000  PACK      KEY19,SP70
          CALL      RSMHRF1
          CALL      RKMHRF1
          BRANCH    OVRCD,DELRF999
          PACK      KEY19,MHRFVISN,MHRFEXTR,MHRFSEQN,SP70
          CALL      DEMHRF1
          GOTO      DELRF000
.
DELRF999  RETURN
+
.**********************************************************************
.*                            DELSP000                                *
.**********************************************************************
DELSP000  PACK      KEY20,SP70
          CALL      RSMHSP1
          CALL      RKMHSP1
          BRANCH    OVRCD,DELLE999
          PACK      KEY20,MHSPVISN,MHSPTYPE,MHSPAGEN,MHSPTEAM:
                          MHSPSCOD,SP70
          CALL      DEMHSP1
          GOTO      DELSP000
.
DELSP999  RETURN
+
.**********************************************************************
.*                            DELAD000                                *
.**********************************************************************
DELAD000  PACK      KEY36,SP70
          CALL      RSMHAD1
          CALL      RKMHAD1
          BRANCH    OVRCD,DELLE999
          PACK      KEY36,MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                          MHADSCOD,MHADSDAT,MHADRCNT,SP70
          CALL      DEMHAD1
          GOTO      DELAD000
.
DELAD999  RETURN
+
.**********************************************************************
.*                            DELTM000                                *
.**********************************************************************
DELTM000  PACK      KEY28,SP70
          CALL      RSTMPF1
          CALL      RKTMPF1
          BRANCH    OVRCD,DELLE999
          PACK      KEY28,MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                          MHADSCOD,MHADSDAT,SP70
          CALL      DETMPF1
          GOTO      DELTM000
.
.**********************************************************************
.*                            CRTFIL00                                *
.**********************************************************************
CRTFIL00  
.------ set up the U/R Admission file ------
.
          CLEAR     CMDLINE
          CLOSE     MEHURAXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[1],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPFILES[1],CMDLINE
          APPEND    " 48 u1-8,9-16",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      MEHURAXX,TMPFILES[1]
.
          CALL      DELUR000              * delete any existing records if any
.
.------ set up the U/R Detail file ------
.
          CLEAR     CMDLINE
          CLOSE     MEHURDXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[2],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPFILES[2],CMDLINE
          APPEND    " 35 u1-8",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      MEHURDXX,TMPFILES[2]
.
          CALL      DELUD000              * delete any existing records if any
.
.------ set up the Admission Diagnosis file ------
.
          CLEAR     CMDLINE
          CLOSE     MEHDIAXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[3],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPFILES[3],CMDLINE
          APPEND    " 31 u1-8,9-11",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      MEHDIAXX,TMPFILES[3]
.
          CALL      DELDI000              * delete any existing records if any
.
.------ set up the Service Summary file ------
.
          CLEAR     CMDLINE
          CLOSE     MEHSUMXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[4],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPFILES[4],CMDLINE
          APPEND    " 32 u1-8,9-11",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      MEHSUMXX,TMPFILES[4]
.
          CALL      DELSU000              * delete any existing records if any
.
.------ set up the Service Detail file ------
.
          CLEAR     CMDLINE
          CLOSE     MEHDETXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[5],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPFILES[5],CMDLINE
          APPEND    " 33 u1-8,9-11,12-14",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      MEHDETXX,TMPFILES[5]
.
          CALL      DELDE000              * delete any existing records if any
.
.------ set up the Legal Status Detail file ------
.
          CLEAR     CMDLINE
          CLOSE     MEHLEGXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[6],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPFILES[6],CMDLINE
          APPEND    " 36 u1-8,9-16,17-24,25-32,33-33",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      MEHLEGXX,TMPFILES[6]
.
          CALL      DELLE000              * delete any existing records if any
.
MMMM
.------ set up the temp MH file ------
.
          CLEAR     CMDLINE
          CLOSE     MHALRFXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[7],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPFILES[7],CMDLINE
          APPEND    " 33 u1-8,9-16,17-19",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      MHALRFXX,TMPFILES[7]
.
          CALL      DELRF000              * delete any existing records if any
.
.------ set up the temp SP file ------
.
          CLEAR     CMDLINE
          CLOSE     MHALSPXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[8],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPFILES[8],CMDLINE
          APPEND    " 21 u1-8,9-9,10-13,14-17,18-20",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      MHALSPXX,TMPFILES[8]
.
          CALL      DELSP000              * delete any existing records if any
.
.------ set up the temp AD file ------
.
          CLEAR     CMDLINE
          CLOSE     MHALADXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[9],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPFILES[9],CMDLINE
          APPEND    " 40 u1-8,9-9,10-13,14-17,18-20,21-28,29-36",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      MHALADXX,TMPFILES[9]
.
          CALL      DELAD000              * delete any existing records if any
.
.------ set up the temp encounter/contact/op visit file ------
.
          CLEAR     CMDLINE
          CLOSE     TMPFILXX
          APPEND    "iserase ",CMDLINE
          APPEND    TMPFILES[10],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPFILES[10],CMDLINE
          APPEND    " 29 u1-8,9-9,10-13,14-17,18-20,21-28",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      TMPFILXX,TMPFILES[10]
.
          CALL      DELTM000              * delete any existing records if any
.
CRTFIL99  RETURN
+
.**********************************************************************
.*                            EXTR0000                                *
.*                   Create extract files                             *
.**********************************************************************
XTRAC000  READ      CONTROLF,SIXTY9;*97,MHCNMINC
.
          MOVE      FPREFIX,KEY3      * Health Agency code
          SQUEEZE   KEY3
          MOVE      SP70,KEY5
          MOVE      MHCNMINC,KEY5
          REP       " 0",KEY5         * Next file number from parameter
.
          MOVE      SP70,EXHDFNAM
          CLEAR     EXHDFNAM
          APPEND    KEY3,EXHDFNAM
          APPEND    KEY5,EXHDFNAM
          APPEND    ".MHM",EXHDFNAM
          APPEND    SP70,EXHDFNAM
          RESET     EXHDFNAM
          SQUEEZE   EXHDFNAM
.
          STRIP     PTCNNZED
          MOVE      SP70,PATHNAME
          CLEAR     PATHNAME
          MOVE      PTCNNZED,PATHNAME
          ENDSET    PATHNAME
          APPEND    EXHDFNAM,PATHNAME
          RESET     PATHNAME
.
          PREP      INCFILE1,PATHNAME
.
          ADD       ONE,MHCNMINC                 * Increment next filenumber
          WRITAB    CONTROLF,SIXTY9;*97,MHCNMINC
.
XTRAC999  RETURN
+
.**********************************************************************
.*                            WRIT0000                                *
.*                 Write to extraction file                           *
.*                 HR -  Header record                                *
.*                   HC -  Header record (U/R)                        *
.*                      LS - Legal status                             *
.*                      RF - Referral Details                         *
.*                      SP - Referral Summary record                  *
.*                        AD - Referral Details record                *
.*                        AD - Referral Details record                *
.*                                                                    *
.*                      SP - Tran record                              *
.*                        AD - Access record                          *
.*                        AD - Access record                          *
.*                      SP - Tran record                              *
.*                        AD - Access record                          *
.*                      DD - Diagnosis record  (if any)               *
.*                      DS - Discharge record                         *
.**********************************************************************
WRIT0000  CALL      WRHR0000          * Write Header record
.
          MOVE      SP70,KEY8         * loop through the U/R details file
          CALL      RSMHUD1
WRIT1000  CALL      RKMHUD1
          BRANCH    OVRCD,WRIT9999
.
          CALL      WRHC0000                  * one HC record per U/R no
          MOVE      ZERO,FIRSTFLAG
.
          PACK      KEY16,MHUDURNO,SP70       * Read U/R admission
          CALL      RSMHUA1
WRIT2000  CALL      RKMHUA1
          BRANCH    OVRCD,WRIT1000
.
          MATCH     MHUDURNO,MHUAURNO
          GOTO      WRIT1000 IF NOT EQUAL
.
          BRANCH    FIRSTFLAG,WRIT4000
          MOVE      ONE,FIRSTFLAG
.
.         Check if any LS record for the U/R
.
          PACK      KEY33,MHUDURNO,SP70
          CALL      RSMHLE1
WRIT2200  CALL      RKMHLE1
          BRANCH    OVRCD,WRIT4000
          MATCH     MHUDURNO,MHLEURNO         * Same U/R?
          GOTO      WRIT4000 IF NOT EQUAL
.
          CALL      WRLS0000                  * print LS records for the U/R No
          GOTO      WRIT2200
.
.         Read Service summary file for SP record
.
WRIT4000  MATCH     "1",MHUAREFR              * Referral record?
          GOTO      WRIT5000 IF EQUAL         * Yes
.
          CALL      GENI0000                  * Generate Inpatient
          GOTO      WRIT2000
.
.         Read Referral file for RF record
.
WRIT5000  PACK      KEY19,MHUAADMN,SP70
          CALL      RSMHRF1
WRIT5200  CALL      RKMHRF1
          BRANCH    OVRCD,WRIT7000
.
          MATCH     MHRFVISN,MHUAADMN
          GOTO      WRIT7000 IF NOT EQUAL
.
          CALL      GENR0000                  * Generate Referral
          GOTO      WRIT5200
.
.         Read Referral Summary file for SP record
.
WRIT7000  PACK      KEY20,MHUAADMN,SP70
          CALL      RSMHSP1
WRIT7200  CALL      RKMHSP1
          BRANCH    OVRCD,WRIT9000
.
          MATCH     MHSPVISN,MHUAADMN
          GOTO      WRIT9000 IF NOT EQUAL
.
          CALL      GENS0000           * Generate SP Encounter/Grp Contacts/OP
.
.         Read MH Encounter, Group Contacts and OP (AD) record
.
          MOVE      ZERO,F5
          PACK      SKEY20,MHSPVISN,MHSPTYPE,MHSPAGEN,MHSPTEAM:
                          MHSPSCOD,SP70
          PACK      KEY36,SKEY20,SP70
          CALL      RSMHAD1
WRIT8000  CALL      RKMHAD1
          BRANCH    OVRCD,WRIT7200
.
          PACK      KEY20,MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                          MHADSCOD,SP70
          MATCH     KEY20,SKEY20
          GOTO      WRIT7200 IF NOT EQUAL 
.
          CALL      GENA0000             * Generate AD record
          GOTO      WRIT8000
.
WRIT9000  MOVE      ZERO,DIAGFLAG
          CALL      WRDIAG00                * Write diagnosis/procedures
          GOTO      WRIT2000
.
WRIT9999  RETURN
+
.**********************************************************************
.         Generate IP
.**********************************************************************
GENI0000  MOVE      ZERO,DIAGFLAG
          PACK      KEY11,MHUAADMN,Z70
          CALL      RSMHSU1
GENI5000  CALL      RPMHSU1
          BRANCH    OVRCD,GENI7000
          MATCH     MHUAADMN,MHSUADMN
          GOTO      GENI7000 IF NOT EQUAL   * Different admission
.
          MOVE      MHSUADMN,SAVADMN
          MOVE      "A ",TCODE
          PACK      KEY5,TCODE,MHSUATYP,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            IF        TCFORM6<100
              MOVE      ZERO,FORM2
              MOVE      TCFORM6,FORM2
              MOVE      FORM2,KEY2
              REP       " 0",KEY2
              PACK      MHUASCOD,ANST,KEY2   * Service code
            ENDIF
          ENDIF
          CALL      WRSP0000                * Write SP record to Extract file
.
          PACK      KEY11,MHSUADMN,MHSUSQUE,SP70
          PACK      KEY14,KEY11,SP70
          CALL      RSMHDE1
GENI6000  CALL      RKMHDE1
          BRANCH    OVRCD,GENI5000
.
          PACK      SKEY11,MHDEADMN,MHDESQUE,SP70
          MATCH     KEY11,SKEY11            * Same admission/sequence number ?
          GOTO      GENI5000 IF NOT EQUAL
.
          MATCH     "zzz",MHDEDCNT
          GOTO      GENI6100 IF EQUAL       * found discharge record
.
          MATCH     MHDEDATE,MHSUSDAT
          GOTO      GENI6200 IF EQUAL
          GOTO      GENI5000
.
GENI6100  CALL      WRDIAG00              * Write diagnosis/procedures
          CALL      WRDS0000              * Write DS record to Extract file
          GOTO      GENI5000              * this must be the last rec.of AD
.
GENI6200  CALL      WRAD0000              * Write AD record to Extract file
          GOTO      GENI6000
.
GENI7000  CALL      WRDIAG00              * Write diag./proc.if necessary
.
GENIP999  RETURN
+
.**********************************************************************
.         Generate Referral
.**********************************************************************
GENR0000  BRANCH    VALDFLAG,GENR9000
.
          PACK      EXRECSID,SP6,MHRFVISN,SP70
          REP       " 0",EXRECSID
          SQUEEZE   MHUDNHIN
.
          CMATCH    SP1,MHRFTYPE
          IF        @EQUAL
            CLEAR     MHRFTYPE
          ENDIF
.
          MATCH     "2",MHRFRTYP                 * Closed Referral Record type
          IF        @EQUAL
            MOVE      "DS",EXRECTYP
            WRITE     INCFILE1,SEQ;EXRECTYP,COMMA,*+,MHRFTYPE,*-,COMMA:
                                   *+,MHUDNHIN,*-,COMMA,MHUAHLTH,COMMA:
                                   MHUATEAM,COMMA:
                                   MHRFRDAT,COMMA,MHRFDTYP,COMMA:
                                   EXRECSID
          ELSE
            MOVE      "RF",EXRECTYP
            WRITE     INCFILE1,SEQ;EXRECTYP,COMMA,*+,MHRFTYPE,*-,COMMA:
                                   *+,MHUDNHIN,*-,COMMA,MHUAHLTH,COMMA:
                                   MHUATEAM,COMMA,MHRFRSRC,COMMA:
                                   MHRFRDAT,COMMA,MHRFDTYP,COMMA:
                                   EXRECSID
          ENDIF
.
          GOTO      GENR9999
.
GENR9000  ADD       ONE,TOTREC
GENR9999  RETURN
+
.**********************************************************************
.         Generate SP for Encounter/Group contats/OP
.**********************************************************************
GENS0000  BRANCH    VALDFLAG,GENS9000
.
          MOVE      "SP",EXRECTYP
          MOVE      SP70,EXSETTYP
          CLEAR     EXSETTYP
.
          PACK      EXSECSID,SP6,MHSPVISN,SP70
          REP       " 0",EXSECSID
          SQUEEZE   MHUDNHIN
.
          CALL      SDAT0000             * Get Service Start and End date
.
          WRITE     INCFILE1,SEQ;EXRECTYP,COMMA,*+,EXSETTYP,*-,COMMA:
                                 *+,MHUDNHIN,*-,COMMA,MHSPAGEN,COMMA:
                                 MHSPTEAM,COMMA,MHSPSCOD,COMMA:
                                 MHSUSDAT,COMMA,MHSUEDAT,COMMA:
                                 EXSECSID
          GOTO      GENS9999
.
GENS9000  ADD       ONE,TOTREC
GENS9999  RETURN
+
.**********************************************************************
.         Get Service Start and End Date
.**********************************************************************
SDAT0000  UNPACK    SP70,MHSUSDAT,MHSUEDAT
          PACK      SKEY20,MHSPVISN,MHSPTYPE,MHSPAGEN,MHSPTEAM:
                          MHSPSCOD,SP70
          PACK      KEY36,SKEY20,SP70
          CALL      RSMHAD1
          CALL      RKMHAD1
          BRANCH    OVRCD,SDAT2000
.
          PACK      KEY20,MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                          MHADSCOD,SP70
          MATCH     KEY20,SKEY20
          GOTO      SDAT2000 IF NOT EQUAL 
          MOVE      MHADSDAT,MHSUSDAT             * Start Date
.
SDAT2000  PACK      KEY36,SKEY20,Z70
          CALL      RSMHAD1
          CALL      RPMHAD1
          BRANCH    OVRCD,SDAT9999
.
          PACK      KEY20,MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                          MHADSCOD,SP70
          MATCH     KEY20,SKEY20
          GOTO      SDAT9999 IF NOT EQUAL 
          MOVE      MHADSDAT,MHSUEDAT             * End Date
.
SDAT9999  RETURN
+
.**********************************************************************
.         Generate AD for Encounter/Group contats/OP
.**********************************************************************
GENA0000  BRANCH    VALDFLAG,GENA9000
.
          MOVE      "AD",EXRECTYP
          CMATCH    SP1,MHADTTYP
          IF        @EQUAL
            CLEAR     EXECTTYP
          ELSE
            PACK      EXECTTYP,MHADTTYP,SP70
          ENDIF
.
          PACK      EXECCSID,SP6,MHSPVISN,SP70
          REP       " 0",EXECCSID
          SQUEEZE   MHUDNHIN
.
          MOVE      "000001",EXECUSER
          MOVE      "00001",EXECSNUM
.
          MOVE      "000001",EXECUSER  * Units of service (set to 000001)
.
          ADD       ONE,F5             * Service Number
          MOVE      F5,EXECSNUM
          REP       " 0",EXECSNUM
.
          CALL      MDAT0000                * Get the minium date
          MATCH     SP70,KEY8
          IF        @EQUAL
            MOVE      MHADSDAT,KEY8
          ENDIF
.
          WRITE     INCFILE1,SEQ;EXRECTYP,COMMA,*+,EXECTTYP,*-,COMMA:
                                 *+,MHUDNHIN,*-,COMMA,MHSPAGEN,COMMA:
                                 MHSPTEAM,COMMA,MHSPSCOD,COMMA:
                                 KEY8,COMMA,MHADSETD,COMMA:
                                 EXECUSER,COMMA,MHADSDAT,COMMA:
                                 EXECSNUM,COMMA,MHADSDAT,COMMA,EXECCSID
          GOTO      WRAD9999
.
GENA9000  ADD       ONE,TOTREC
GENA9999  RETURN
+
.**********************************************************************
.         Check for any Diagnosis and Procedure records
.**********************************************************************
WRDIAG00  BRANCH    DIAGFLAG,WRDIAG99
.
          MOVE      ONE,DIAGFLAG
          PACK      KEY11,MHUAADMN,SP70
          CALL      RSMHDI1
WRDIAG10  CALL      RKMHDI1
          BRANCH    OVRCD,WRDIAG99
.
          MATCH     MHUAADMN,MHDIAADM
          GOTO      WRDIAG99 IF NOT EQUAL
.
          CALL      WRDD0000              * Write DD records if any
          GOTO      WRDIAG10
.
WRDIAG99  RETURN
+
.**********************************************************************
.*                      WRHR0000 - Write HR record                    *
.**********************************************************************
WRHR0000  BRANCH    VALDFLAG,WRHR8000
.
          MOVE      "HR",EXRECTYP
          MOVE      SP70,EXHDRECN
          MOVE      TOTREC,EXHDRECN
          REP       " 0",EXHDRECN
          PACK      EXHDDSNT,CCC,CYY,CMM,CDD
          REP       " 0",EXHDDSNT            * Current date
.         MOVE      "TEST",EXHDPENV
.
          MOVE      EXHDAGEN,KEY4
          REP       " 0",KEY4
.
          MOVE      SP70,KEY40
          CLEAR     KEY40
          APPEND    EXRECTYP,KEY40
          APPEND    COMMA,KEY40
          APPEND    KEY4,KEY40
          APPEND    COMMA,KEY40
          APPEND    EXHDFNAM,KEY40
          ENDSET    KEY40
          APPEND    COMMA,KEY40
          APPEND    EXHDRECN,KEY40
          APPEND    COMMA,KEY40
          APPEND    EXHDDSNT,KEY40
          APPEND    COMMA,KEY40
          APPEND    EXHDPENV,KEY40
          APPEND    SP70,KEY40
          RESET     KEY40
.
          WRITE     INCFILE1,SEQ;KEY40
          GOTO      WRHR9999
.
WRHR8000  ADD       ONE,TOTREC
WRHR9999  RETURN
+
.**********************************************************************
.*                      WRHC0000 - Write HC record                    *
.**********************************************************************
WRHC0000  BRANCH    VALDFLAG,WRHC8000
.
          MOVE      "HC",EXRECTYP
          MOVE      SP70,EXUSTTYP
          CLEAR     EXUSTTYP
          SQUEEZE   MHUDNHIN
.
          WRITE     INCFILE1,SEQ;EXRECTYP,COMMA,*+,EXUSTTYP,*-,COMMA:
                                 *+,MHUDNHIN,*-,COMMA,MHUDDOBR,COMMA:
                                 MHUDGEND,COMMA;
.
          MATCH     "00",MHUDETH1
          IF        @EQUAL
            WRITE     INCFILE1,SEQ;COMMA;
          ELSE
            WRITE     INCFILE1,SEQ;MHUDETH1,COMMA;
          ENDIF
.
          MATCH     "00",MHUDETH2
          IF        @EQUAL
            WRITE     INCFILE1,SEQ;COMMA;
          ELSE
            WRITE     INCFILE1,SEQ;MHUDETH2,COMMA;
          ENDIF
.
          MATCH     "00",MHUDETH3
          IF        @EQUAL
            WRITE     INCFILE1,SEQ;COMMA,MHUDDOMC
          ELSE
            WRITE     INCFILE1,SEQ;MHUDETH3,COMMA,MHUDDOMC
          ENDIF
          GOTO      WRHC9999
.
WRHC8000  ADD       ONE,TOTREC
WRHC9999  RETURN
+
.**********************************************************************
.*                      WRSP0000 - Write SP record                    *
.**********************************************************************
WRSP0000  BRANCH    VALDFLAG,WRSP8000
.
          MOVE      "SP",EXRECTYP
          MATCH     "1",MHSURTYP       * Unadmit
          IF        @EQUAL
            MOVE      "D",EXSETTYP     * Delete record type
          ELSE
            MATCH     "2",MHSURTYP     * Undischarge
            IF        @EQUAL
              MOVE      "O",EXSETTYP   * Overwrite record type
            ELSE
              MOVE      SP70,EXSETTYP
              CLEAR     EXSETTYP
            ENDIF
          ENDIF
.
          PACK      EXSECSID,SP6,MHSUADMN,SP70
          REP       " 0",EXSECSID
          SQUEEZE   MHUDNHIN
.
          WRITE     INCFILE1,SEQ;EXRECTYP,COMMA,*+,EXSETTYP,*-,COMMA:
                                 *+,MHUDNHIN,*-,COMMA,MHUAHLTH,COMMA:
                                 MHUATEAM,COMMA,MHUASCOD,COMMA:
                                 MHSUSDAT,COMMA,MHSUEDAT,COMMA:
                                 EXSECSID
          GOTO      WRSP9999
.
WRSP8000  ADD       ONE,TOTREC
WRSP9999  RETURN
+
.**********************************************************************
.*                      WRAD0000 - Write AD record                    *
.**********************************************************************
WRAD0000  BRANCH    VALDFLAG,WRAD8000
.
          MOVE      "AD",EXRECTYP
          MATCH     "1",MHDERTYP        * Unadmit
          IF        @EQUAL
            MOVE      "D",EXACTTYP      * Delete record type
          ELSE
            MATCH     "2",MHDERTYP      * Undischarge
            IF        @EQUAL
              MOVE      "O",EXACTTYP    * Overwrite record type
            ELSE
              MOVE      SP70,EXACTTYP
              CLEAR     EXACTTYP
            ENDIF
          ENDIF
.
          PACK      EXACCSID,SP6,MHSUADMN,SP70
          REP       " 0",EXACCSID
          SQUEEZE   MHUDNHIN
.
          MOVE      "000001",EXACSERV
          MOVE      "00001",EXACSNUM
.
          WRITE     INCFILE1,SEQ;EXRECTYP,COMMA,*+,EXACTTYP,*-,COMMA:
                                 *+,MHUDNHIN,*-,COMMA,MHUAHLTH,COMMA:
                                 MHUATEAM,COMMA,MHUASCOD,COMMA:
                                 MHDEDATE,COMMA,MHUASSET,COMMA:
                                 EXACSERV,COMMA,MHDEPDAT,COMMA:
                                 EXACSNUM,COMMA,MHDEPDAT,COMMA,EXACCSID
          GOTO      WRAD9999
.
WRAD8000  ADD       ONE,TOTREC
WRAD9999  RETURN
+
.**********************************************************************
.*                      WRDS0000 - Write DS record                    *
.**********************************************************************
WRDS0000  BRANCH    VALDFLAG,WRDS8000
.
          MOVE      "DS",EXRECTYP
          MATCH     "2",MHDERTYP
          IF        @EQUAL
            MOVE      "D",EXDSTTYP        * undischarge
            MOVE      MHDEDTYP,MHUADTYP
          ELSE
            MOVE      SP70,EXDSTTYP
            CLEAR     EXDSTTYP
          ENDIF
          PACK      EXDSCSID,SP6,MHUAADMN,SP70
          REP       " 0",EXDSCSID
          SQUEEZE   MHUDNHIN
.
          WRITE     INCFILE1,SEQ;EXRECTYP,COMMA,*+,EXDSTTYP,*-,COMMA:
                                 *+,MHUDNHIN,*-,COMMA,MHUAHLTH,COMMA:
                                 MHUATEAM,COMMA,MHUADDAT,COMMA:
                                 MHUADTYP,COMMA,EXDSCSID
          GOTO      WRDS9999
.
WRDS8000  ADD       ONE,TOTREC
WRDS9999  RETURN
+
.**********************************************************************
.*                      WRDD0000 - Write DD record                    *
.**********************************************************************
WRDD0000  BRANCH    VALDFLAG,WRDD8000
.
          MOVE      "DD",EXRECTYP
          MOVE      SP70,EXDITTYP
          CLEAR     EXDITTYP
          PACK      EXDICSID,SP6,MHUAADMN,SP70
.
          SQUEEZE   MHUDNHIN
          SQUEEZE   MHDICODE
          REP       " 0",EXDICSID
.
          WRITE     INCFILE1,SEQ;EXRECTYP,COMMA,*+,EXDITTYP,*-,COMMA:
                                 *+,MHUDNHIN,*-,COMMA,MHUAHLTH,COMMA:
                                 MHDIDDAT,COMMA,MHDICSYS,COMMA:
                                 MHDIDTYP,COMMA,*+,MHDICODE,*-,COMMA:
                                 EXDICSID
          GOTO      WRDD9999
.
WRDD8000  ADD       ONE,TOTREC
WRDD9999  RETURN
+
.**********************************************************************
.*                      WRLS0000 - Write LS record                    *
.**********************************************************************
WRLS0000  BRANCH    VALDFLAG,WRLS8000
.
          MOVE      "LS",EXRECTYP
          MATCH     "D",MHLERTYP
          IF        @EQUAL
            MOVE      "D",EXLSTTYP
          ELSE
            MOVE      SP70,EXLSTTYP
            CLEAR     EXLSTTYP
          ENDIF
          PACK      EXLSCSID,SP6,MHLEUNIQ,SP70
          REP       " 0",EXLSCSID
.
          WRITE     INCFILE1,SEQ;EXRECTYP,COMMA,*+,EXLSTTYP,*-,COMMA:
                                 *+,MHUDNHIN,*-,COMMA,MHUAHLTH,COMMA:
                                 MHLELSEC,COMMA,MHLELDAT,COMMA:
                                 EXLSCSID
          GOTO      WRLS9999
.
WRLS8000  ADD       ONE,TOTREC
WRLS9999  RETURN
+
.**********************************************************************
.*                            I/O for tempfiles                       *
.**********************************************************************
.-------- I/O Routines for U/R Admission file --------
.
RAMHUA1   MOVE      ZERO,OVRCD
          RESET     KEY16
          READ      MEHURAXX,KEY16;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSMHUA1   MOVE      ZERO,OVRCD
          RESET     KEY16
          READ      MEHURAXX,KEY16;;
          RETURN
.
RDMHUA1   MOVE      ZERO,OVRCD
          RESET     KEY16
          READ      MEHURAXX,KEY16;MHUAURNO,MHUAADMN,MHUAADAT,MHUADDAT:
                                   MHUADTYP,MHUATEAM,MHUASSET,MHUAHLTH:
                                   MHUASCOD,MHUAREFR
          GOTO      OVERCOND IF OVER
          RETURN
.
RKMHUA1   MOVE      ZERO,OVRCD
          RESET     KEY16
          READKS    MEHURAXX;MHUAURNO,MHUAADMN,MHUAADAT,MHUADDAT:
                             MHUADTYP,MHUATEAM,MHUASSET,MHUAHLTH:
                             MHUASCOD,MHUAREFR
          GOTO      OVERCOND IF OVER
          RETURN
.
RPMHUA1   MOVE      ZERO,OVRCD
          RESET     KEY16
          READKP    MEHURAXX;MHUAURNO,MHUAADMN,MHUAADAT,MHUADDAT:
                             MHUADTYP,MHUATEAM,MHUASSET,MHUAHLTH:
                             MHUASCOD,MHUAREFR
          GOTO      OVERCOND IF OVER
          RETURN
.
WRMHUA1   MOVE      ZERO,OVRCD
          RESET     KEY16
          WRITE     MEHURAXX,KEY16;KEY16,MHUAADAT,MHUADDAT:
                                   MHUADTYP,MHUATEAM,MHUASSET,MHUAHLTH:
                                   MHUASCOD,MHUAREFR
          RETURN
.
UPMHUA1   UPDATE    MEHURAXX;MHUAURNO,MHUAADMN,MHUAADAT,MHUADDAT:
                             MHUADTYP,MHUATEAM,MHUASSET,MHUAHLTH:
                             MHUASCOD,MHUAREFR
          RETURN
.
DEMHUA1   RESET     KEY16
          DELETE    MEHURAXX,KEY16
          RETURN
.
.-------- I/O Routines for U/R Details file --------
.
RAMHUD1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      MEHURDXX,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSMHUD1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      MEHURDXX,KEY8;;
          RETURN
.
RDMHUD1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      MEHURDXX,KEY8;MHUDURNO,MHUDNHIN,MHUDDOBR,MHUDGEND:
                                  MHUDETH1,MHUDETH2,MHUDETH3,MHUDDOMC
          GOTO      OVERCOND IF OVER
          RETURN
.
RKMHUD1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKS    MEHURDXX;MHUDURNO,MHUDNHIN,MHUDDOBR,MHUDGEND:
                             MHUDETH1,MHUDETH2,MHUDETH3,MHUDDOMC
          GOTO      OVERCOND IF OVER
          RETURN
.
RPMHUD1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKP    MEHURDXX;MHUDURNO,MHUDNHIN,MHUDDOBR,MHUDGEND:
                             MHUDETH1,MHUDETH2,MHUDETH3,MHUDDOMC
          GOTO      OVERCOND IF OVER
          RETURN
.
WRMHUD1   MOVE      ZERO,OVRCD
          RESET     KEY8
          WRITE     MEHURDXX,KEY8;KEY8,MHUDNHIN,MHUDDOBR,MHUDGEND:
                                  MHUDETH1,MHUDETH2,MHUDETH3,MHUDDOMC
          RETURN
.
UPMHUD1   UPDATE    MEHURDXX;MHUDURNO,MHUDNHIN,MHUDDOBR,MHUDGEND:
                             MHUDETH1,MHUDETH2,MHUDETH3,MHUDDOMC
          RETURN
.
DEMHUD1   RESET     KEY8
          DELETE    MEHURDXX,KEY8
          RETURN
.
.-------- I/O Routines for Admission Diagnosis file --------
.
RAMHDI1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      MEHDIAXX,KEY11;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSMHDI1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      MEHDIAXX,KEY11;;
          RETURN
.
RDMHDI1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      MEHDIAXX,KEY11;MHDIAADM,MHDISQUE,MHDIDDAT,MHDIDTYP:
                                   MHDICODE,MHDICSYS
          GOTO      OVERCOND IF OVER
          RETURN
.
RKMHDI1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READKS    MEHDIAXX;MHDIAADM,MHDISQUE,MHDIDDAT,MHDIDTYP:
                                   MHDICODE,MHDICSYS
          GOTO      OVERCOND IF OVER
          RETURN
.
RPMHDI1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READKP    MEHDIAXX;MHDIAADM,MHDISQUE,MHDIDDAT,MHDIDTYP:
                                   MHDICODE,MHDICSYS
          GOTO      OVERCOND IF OVER
          RETURN
.
WRMHDI1   MOVE      ZERO,OVRCD
          RESET     KEY11
          WRITE     MEHDIAXX,KEY11;KEY11,MHDIDDAT,MHDIDTYP:
                                   MHDICODE,MHDICSYS
          RETURN
.
UPMHDI1   UPDATE    MEHDIAXX;MHDIAADM,MHDISQUE,MHDIDDAT,MHDIDTYP:
                                   MHDICODE,MHDICSYS
          RETURN
.
DEMHDI1   RESET     KEY11
          DELETE    MEHDIAXX,KEY11
          RETURN
.
.-------- I/O Routines for Service Summary file --------
.
RAMHSU1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      MEHSUMXX,KEY11;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSMHSU1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      MEHSUMXX,KEY11;;
          RETURN
.
RDMHSU1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      MEHSUMXX,KEY11;MHSUADMN,MHSUSQUE,MHSUATYP,MHSUSDAT:
                                   MHSUEDAT,MHSURTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
RKMHSU1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READKS    MEHSUMXX;MHSUADMN,MHSUSQUE,MHSUATYP,MHSUSDAT:
                             MHSUEDAT,MHSURTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
RPMHSU1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READKP    MEHSUMXX;MHSUADMN,MHSUSQUE,MHSUATYP,MHSUSDAT:
                             MHSUEDAT,MHSURTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
WRMHSU1   MOVE      ZERO,OVRCD
          RESET     KEY11
          WRITE     MEHSUMXX,KEY11;KEY11,MHSUATYP,MHSUSDAT:
                                   MHSUEDAT,MHSURTYP
          RETURN
.
UPMHSU1   UPDATE    MEHSUMXX;MHSUADMN,MHSUSQUE,MHSUATYP,MHSUSDAT:
                                   MHSUEDAT,MHSURTYP
          RETURN
.
DEMHSU1   RESET     KEY11
          DELETE    MEHSUMXX,KEY11
          RETURN
.
.-------- I/O Routines for Service Details file --------
.
RAMHDE1   MOVE      ZERO,OVRCD
          RESET     KEY14
          READ      MEHDETXX,KEY14;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSMHDE1   MOVE      ZERO,OVRCD
          RESET     KEY14
          READ      MEHDETXX,KEY14;;
          RETURN
.
RDMHDE1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      MEHDETXX,KEY14;MHDEADMN,MHDESQUE,MHDEDCNT,MHDEDATE:
                                   MHDEPDAT,MHDERTYP,MHDEDTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
RKMHDE1   MOVE      ZERO,OVRCD
          RESET     KEY14
          READKS    MEHDETXX;MHDEADMN,MHDESQUE,MHDEDCNT,MHDEDATE:
                             MHDEPDAT,MHDERTYP,MHDEDTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
RPMHDE1   MOVE      ZERO,OVRCD
          RESET     KEY14
          READKP    MEHDETXX;MHDEADMN,MHDESQUE,MHDEDCNT,MHDEDATE:
                             MHDEPDAT,MHDERTYP,MHDEDTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
WRMHDE1   MOVE      ZERO,OVRCD
          RESET     KEY14
          WRITE     MEHDETXX,KEY14;KEY14,MHDEDATE:
                                   MHDEPDAT,MHDERTYP,MHDEDTYP
          RETURN
.
UPMHDE1   UPDATE    MEHDETXX;MHDEADMN,MHDESQUE,MHDEDCNT,MHDEDATE:
                             MHDEPDAT,MHDERTYP,MHDEDTYP
          RETURN
.
DEMHDE1   RESET     KEY14
          DELETE    MEHDETXX,KEY14
          RETURN
.
.-------- I/O Routines for Legal Status file --------
.
RAMHLE1   MOVE      ZERO,OVRCD
          RESET     KEY33
          READ      MEHLEGXX,KEY33;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSMHLE1   MOVE      ZERO,OVRCD
          RESET     KEY33
          READ      MEHLEGXX,KEY33;;
          RETURN
.
RDMHLE1   MOVE      ZERO,OVRCD
          RESET     KEY33
          READ      MEHLEGXX,KEY33;MHLEURNO,MHLEUNIQ,MHLELDAT,MHLELTIM:
                                   MHLERTYP,MHLELSEC
          GOTO      OVERCOND IF OVER
          RETURN
.
RKMHLE1   MOVE      ZERO,OVRCD
          RESET     KEY33
          READKS    MEHLEGXX;MHLEURNO,MHLEUNIQ,MHLELDAT,MHLELTIM:
                             MHLERTYP,MHLELSEC
          GOTO      OVERCOND IF OVER
          RETURN
.
RPMHLE1   MOVE      ZERO,OVRCD
          RESET     KEY33
          READKP    MEHLEGXX;MHLEURNO,MHLEUNIQ,MHLELDAT,MHLELTIM:
                             MHLERTYP,MHLELSEC
          GOTO      OVERCOND IF OVER
          RETURN
.
WRMHLE1   MOVE      ZERO,OVRCD
          RESET     KEY33
          WRITE     MEHLEGXX,KEY33;KEY33,MHLELSEC
          RETURN
.
UPMHLE1   UPDATE    MEHLEGXX;MHLEURNO,MHLEUNIQ,MHLELDAT,MHLELTIM:
                             MHLERTYP,MHLELSEC
          RETURN
.
DEMHLE1   RESET     KEY33
          DELETE    MEHLEGXX,KEY33
          RETURN
.
.
.-------- I/O Routines for Temporary RF file --------
.
RAMHRF1   MOVE      ZERO,OVRCD
          RESET     KEY19
          READ      MHALRFXX,KEY19;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSMHRF1   MOVE      ZERO,OVRCD
          RESET     KEY19
          READ      MHALRFXX,KEY19;;
          RETURN
.
RDMHRF1   MOVE      ZERO,OVRCD
          RESET     KEY19
          READ      MHALRFXX,KEY32;MHRFVISN,MHRFEXTR,MHRFSEQN:
                          MHRFRTYP,MHRFTYPE:
                          MHRFRSRC,MHRFRDAT,MHRFDTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
RKMHRF1   MOVE      ZERO,OVRCD
          RESET     KEY19
          READKS    MHALRFXX;MHRFVISN,MHRFEXTR,MHRFSEQN:
                          MHRFRTYP,MHRFTYPE:
                          MHRFRSRC,MHRFRDAT,MHRFDTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
RPMHRF1   MOVE      ZERO,OVRCD
          RESET     KEY19
          READKP    MHALRFXX;MHRFVISN,MHRFEXTR,MHRFSEQN:
                          MHRFRTYP,MHRFTYPE:
                          MHRFRSRC,MHRFRDAT,MHRFDTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
WRMHRF1   MOVE      ZERO,OVRCD
          RESET     KEY19
          WRITE     MHALRFXX,KEY32;MHRFVISN,MHRFEXTR,MHRFSEQN:
                          MHRFRTYP,MHRFTYPE:
                          MHRFRSRC,MHRFRDAT,MHRFDTYP
          RETURN
.
UPMHRF1   UPDATE    MHALRFXX;MHRFVISN,MHRFEXTR:
                          MHRFSEQN,MHRFRTYP,MHRFTYPE:
                          MHRFRSRC,MHRFRDAT,MHRFDTYP
          RETURN
.
DEMHRF1   RESET     KEY19
          DELETE    MHALRFXX,KEY19
          RETURN
.
.-------- I/O Routines for Temporary SP file --------
.
RAMHSP1   MOVE      ZERO,OVRCD
          RESET     KEY20
          READ      MHALSPXX,KEY20;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSMHSP1   MOVE      ZERO,OVRCD
          RESET     KEY20
          READ      MHALSPXX,KEY20;;
          RETURN
.
RDMHSP1   MOVE      ZERO,OVRCD
          RESET     KEY20
          READ      MHALSPXX,KEY20;MHSPVISN,MHSPTYPE,MHSPAGEN,MHSPTEAM:
                             MHSPSCOD
          GOTO      OVERCOND IF OVER
          RETURN
.
RKMHSP1   MOVE      ZERO,OVRCD
          RESET     KEY20
          READKS    MHALSPXX;MHSPVISN,MHSPTYPE,MHSPAGEN,MHSPTEAM:
                             MHSPSCOD
          GOTO      OVERCOND IF OVER
          RETURN
.
RPMHSP1   MOVE      ZERO,OVRCD
          RESET     KEY20
          READKP    MHALSPXX;MHSPVISN,MHSPTYPE,MHSPAGEN,MHSPTEAM:
                             MHSPSCOD
          GOTO      OVERCOND IF OVER
          RETURN
.
WRMHSP1   MOVE      ZERO,OVRCD
          RESET     KEY20
          WRITE     MHALSPXX,KEY20;MHSPVISN,MHSPTYPE,MHSPAGEN,MHSPTEAM:
                                   MHSPSCOD
          RETURN
.
UPMHSP1   UPDATE    MHALSPXX;MHSPVISN,MHSPTYPE,MHSPAGEN,MHSPTEAM:
                             MHSPSCOD
          RETURN
.
DEMHSP1   RESET     KEY20
          DELETE    MHALSPXX,KEY20
          RETURN
.
.-------- I/O Routines for Temporary AD file --------
.
RAMHAD1   MOVE      ZERO,OVRCD
          RESET     KEY36
          READ      MHALADXX,KEY36;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSMHAD1   MOVE      ZERO,OVRCD
          RESET     KEY36
          READ      MHALADXX,KEY36;;
          RETURN
.
RDMHAD1   MOVE      ZERO,OVRCD
          RESET     KEY36
          READ      MHALADXX,KEY36;MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                             MHADSCOD,MHADSDAT,MHADRCNT,MHADTTYP,MHADSETD
          GOTO      OVERCOND IF OVER
          RETURN
.
RKMHAD1   MOVE      ZERO,OVRCD
          RESET     KEY36
          READKS    MHALADXX;MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                             MHADSCOD,MHADSDAT,MHADRCNT,MHADTTYP,MHADSETD
          GOTO      OVERCOND IF OVER
          RETURN
.
RPMHAD1   MOVE      ZERO,OVRCD
          RESET     KEY36
          READKP    MHALADXX;MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                             MHADSCOD,MHADSDAT,MHADRCNT,MHADTTYP,MHADSETD
          GOTO      OVERCOND IF OVER
          RETURN
.
WRMHAD1   MOVE      ZERO,OVRCD
          RESET     KEY36
          WRITE     MHALADXX,KEY36;MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                                   MHADSCOD,MHADSDAT,MHADRCNT,MHADTTYP,MHADSETD
          RETURN
.
UPMHAD1   UPDATE    MHALADXX;MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                             MHADSCOD,MHADSDAT,MHADRCNT,MHADTTYP,MHADSETD
          RETURN
.
DEMHAD1   RESET     KEY36
          DELETE    MHALADXX,KEY36
          RETURN
+
.-------- I/O Routines for Temporary file --------
.
RATMPF1   MOVE      ZERO,OVRCD
          RESET     KEY28
          READ      TMPFILXX,KEY28;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPF1   MOVE      ZERO,OVRCD
          RESET     KEY28
          READ      TMPFILXX,KEY28;;
          RETURN
.
RDTMPF1   MOVE      ZERO,OVRCD
          RESET     KEY28
          READ      TMPFILXX,KEY28;MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                             MHADSCOD,MHADMDAT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPF1   MOVE      ZERO,OVRCD
          RESET     KEY28
          READKS    TMPFILXX;MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                             MHADSCOD,MHADMDAT
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPF1   MOVE      ZERO,OVRCD
          RESET     KEY28
          READKP    TMPFILXX;MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                             MHADSCOD,MHADMDAT
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPF1   MOVE      ZERO,OVRCD
          RESET     KEY28
          WRITE     TMPFILXX,KEY28;MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                                   MHADSCOD,MHADMDAT
          RETURN
.
UPTMPF1   UPDATE    TMPFILXX;MHADVISN,MHADTYPE,MHADAGEN,MHADTEAM:
                             MHADSCOD,MHADMDAT
          RETURN
.
DETMPF1   RESET     KEY28
          DELETE    TMPFILXX,KEY28
          RETURN
.
.==============================================================================
.
          INC       STD001IO
          INC       STDHLPCD
          INC       STDKWSCD
          INC       TFILENAM
          INC       IBAPRINT

          INC       IBAPRNIO/INC
          INC       ALLREFIO/INC
          INC       ALLENCIO/INC
          INC       ALLGPAIO/INC
          INC       ALLGREIO/INC
          INC       ALLGROIO/INC
          INC       ALLLNKIO/INC
          INC       ALLEXTIO/INC
          INC       ALLDEPIO/INC
          INC       ALLSERIO/INC
          INC       PATCODIO/INC
          INC       MEHINCIO/INC
          INC       MEHDIAIO/INC
          INC       MEHDLSIO/INC
          INC       MEHLEGIO/INC
          INC       NHIMASIO/INC
          INC       PATDAYIO/INC
          INC       PATHSPIO/INC
          INC       PATMI1IO/INC
          INC       PATMA1IO/INC
          INC       PATTRNIO/INC
          INC       PATVISIO/INC   * Patients Visits File
          INC       PMSVX1IO/INC   * Visit Extension File
          INC       PATDSCIO/INC
          INC       PATECDIO/INC
          INC       PATECOIO/INC
          INC       PATUNAIO/INC
          INC       MEHVI1IO/INC
          INC       OUTBOAIO/INC
          INC       OUTSITIO/INC
          INC       OUTSESIO/INC
          INC       OUTHEDIO/INC
.         INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
.
+
