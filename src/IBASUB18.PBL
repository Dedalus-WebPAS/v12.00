.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  08.04.2005 Peter Vela CAR 59696
.           Changed commodity group from DIM 5 to DIM 6
. V9.03.01 23/07/2004  Mike Laming  CAR 43474
.          Change UNCEA200 & USCEA200 to not write to "apscebaf" if qty = 0
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 02.11.2000 Charles Handaya
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.01.02  20.05.2000 Sandra Barcham
.           Fix generation of next order Number
.-------------------------------------------------------
. VF.00.03  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           29.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.02  02.11.1999 Sandra Barcham
.           Recompiled to change E to exit to X in SINPONCD
. VF.00.01  02.09.1999 Sandra Barcham
.           Add in Creditor Keyword Search
.           srf 631485
.-------------------------------------------------------
CEAFILE   FORM      1
F3A       FORM      3
F12P4     FORM      12.4
MODQTY    FORM      12.2
MYCOL     FORM      2
MYVERT    FORM      2
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB18
.   Function      :   Purchase Requisition Order Processing   
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSCEAFD/INC
          INC       APSCEBFD/INC
          INC       APSCIOFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSORDFD/INC
          INC       APSSNTFD/INC
          INC       APSSUBFD/INC
          INC       FMSAMAFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSTUPFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
          INC       SINCCAFD/INC
          INC       SINCGAFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCIHFD/INC
          INC       SINCODFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINITMFD/INC
          INC       SINLTTFD/INC
          INC       SINNATFD/INC
          INC       SINOQAFD/INC
          INC       SINOQBFD/INC
          INC       SINOQCFD/INC
          INC       SINORIFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPODFD/INC
          INC       SINRCPFD/INC
          INC       SINSCDFD/INC
          INC       SINSCFFD/INC
          INC       SINSCMFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
EXTTYPE   FORM      1 * Scr 00 Fld     4
EXTDESC   DIM      40 * Scr 00 Fld     5
PRDFLAB   DIM       5 * Scr 00 Fld     6
PRDFDES   DIM      40 * Scr 00 Fld     7
PRDTLAB   DIM       5 * Scr 00 Fld     8
PRDTDES   DIM      40 * Scr 00 Fld     9
COSFLAB   DIM       5 * Scr 00 Fld    10
COSFDES   DIM      40 * Scr 00 Fld    11
COSTLAB   DIM       5 * Scr 00 Fld    12
COSTDES   DIM      40 * Scr 00 Fld    13
SUPFLAB   DIM       5 * Scr 00 Fld    14
SUPFDES   DIM      40 * Scr 00 Fld    15
SUPTLAB   DIM       5 * Scr 00 Fld    16
SUPTDES   DIM      40 * Scr 00 Fld    17
STAFLAB   DIM       5 * Scr 00 Fld    18
STAFDES   DIM      40 * Scr 00 Fld    19
STATLAB   DIM       5 * Scr 00 Fld    20
STATDES   DIM      40 * Scr 00 Fld    21
FROMDATD  DIM      10 * Scr 00 Fld    22
TODATD    DIM      10 * Scr 00 Fld    23
DEXPCST   DIM      17 * Scr 01 Fld    21
.
.Word Processor File * Scr 01 Fld    22
.
NAMSIQB1  INIT      "Wsiqb1"
FILSIQB1  DIM       8
.
TOTALGST  FORM     12.2 * Scr 01 Fld    28
TOTALCST  FORM     12.2 * Scr 01 Fld    29
CONFDESC  DIM      30 * Scr 02 Fld    18
MESSDESC  DIM      30 * Scr 02 Fld    19
DEFTWARE  DIM       5 * Scr 02 Fld    25
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB18"
PRGNAM    INIT      "Purchase Requisition Order Processing   "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RDPAR000
          CALL      SC03L000
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILSIQB1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsceaaf";
          OPEN      APSCEAA1,"apsceaaf"
          DISPLAY   *P56:24,"Opening apsceaaf";
          OPEN      APSCEAA2,"apsceaaf"
          DISPLAY   *P56:24,"Opening apscebaf";
          OPEN      APSCEBA1,"apscebaf"
          DISPLAY   *P56:24,"Opening apscebaf";
          OPEN      APSCEBA2,"apscebaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA1,"apscioaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA2,"apscioaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsordaf";
          OPEN      APSORDA1,"apsordaf"
          DISPLAY   *P56:24,"Opening apsordaf";
          OPEN      APSORDA2,"apsordaf"
          DISPLAY   *P56:24,"Opening apssntaf";
          OPEN      APSSNTA1,"apssntaf"
          DISPLAY   *P56:24,"Opening apssubaf";
          OPEN      APSSUBA1,"apssubaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA2,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA3,"ibagstaf"
          MOVE      "   24",AUDTSECT
          MOVE      "201",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudga";
            OPEN      SINAUDGA,"sinaudga"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "210",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudpa";
            OPEN      SINAUDPA,"sinaudpa"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "210",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudpc";
            OPEN      SINAUDPC,"sinaudpc"
          ENDIF
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA1,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA2,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA1,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA2,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA3,"sincicaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA1,"sincifaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA2,"sincifaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA2,"sincihaf"
          DISPLAY   *P56:24,"Opening sincodaf";
          OPEN      SINCODA1,"sincodaf"
          DISPLAY   *P56:24,"Opening sincodaf";
          OPEN      SINCODA2,"sincodaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA2,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA1,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA1,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA2,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA3,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinoqaaf";
          OPEN      SINOQAA1,"sinoqaaf"
          DISPLAY   *P56:24,"Opening sinoqbaf";
          OPEN      SINOQBA1,"sinoqbaf"
          DISPLAY   *P56:24,"Opening sinoqcaf";
          OPEN      SINOQCA1,"sinoqcaf"
          DISPLAY   *P56:24,"Opening sinoqcaf";
          OPEN      SINOQCA2,"sinoqcaf"
          DISPLAY   *P56:24,"Opening sinoqcaf";
          OPEN      SINOQCA3,"sinoqcaf"
          DISPLAY   *P56:24,"Opening sinoqcaf";
          OPEN      SINOQCA4,"sinoqcaf"
          DISPLAY   *P56:24,"Opening sinoriaf";
          OPEN      SINORIA1,"sinoriaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA2,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA3,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA4,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA2,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA3,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA4,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA5,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA6,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA7,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA8,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpodaf";
          OPEN      SINPODA1,"sinpodaf"
          DISPLAY   *P56:24,"Opening sinrcpaf";
          OPEN      SINRCPA1,"sinrcpaf"
          DISPLAY   *P56:24,"Opening sinscdaf";
          OPEN      SINSCDA1,"sinscdaf"
          DISPLAY   *P56:24,"Opening sinscdaf";
          OPEN      SINSCDA2,"sinscdaf"
          DISPLAY   *P56:24,"Opening sinscdaf";
          OPEN      SINSCDA3,"sinscdaf"
          DISPLAY   *P56:24,"Opening sinscfaf";
          OPEN      SINSCFA1,"sinscfaf"
          DISPLAY   *P56:24,"Opening sinscmaf";
          OPEN      SINSCMA1,"sinscmaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
.--------------------------------------------------------
. Initialise Wp Filename for Additional Comments                
.--------------------------------------------------------
          PACK      FILSIQB1,NAMSIQB1,PORT
          REP       " 0",FILSIQB1
          DISPLAY   *P56:24,"Create & Open ",FILSIQB1;
          PREP      TEMPWORD,FILSIQB1
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Process Purchase Requisitions      
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Processing Screen                  
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Create Orders                      
          ENDIF
          MATCH     "03",SCRID
          IF         @EQUAL
            CALL       PS03L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Process Purchase Requisitions      
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETSCR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Process Purchase Requisitions      
.-------------------------------------------------------
CF00L000
          MOVE      ZERO,EXTTYPE 
          MOVE      SP70,EXTDESC 
          MOVE      SP70,PRDFLAB 
          MOVE      SP70,PRDFDES 
          MOVE      SP70,PRDTLAB 
          MOVE      SP70,PRDTDES 
          MOVE      SP70,COSFLAB 
          MOVE      SP70,COSFDES 
          MOVE      SP70,COSTLAB 
          MOVE      SP70,COSTDES 
          MOVE      SP70,SUPFLAB 
          MOVE      SP70,SUPFDES 
          MOVE      SP70,SUPTLAB 
          MOVE      SP70,SUPTDES 
          MOVE      SP70,STAFLAB 
          MOVE      SP70,STAFDES 
          MOVE      SP70,STATLAB 
          MOVE      SP70,STATDES 
          MOVE      SP70,FROMDATD
          MOVE      SP70,TODATD  
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Process Purchase Requisitions      
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Process Purchase Requisitions      
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Process Purchase Requisitions      
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Process Purchase Requisitions      
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Process Purchase Requisitions      
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103,PS00L104,PS00L105:
                            PS00L106,PS00L107,PS00L108,PS00L109:
                            PS00L110,PS00L111,PS00L112,PS00L113:
                            PS00L114,PS00L115,PS00L116,PS00L117:
                            PS00L118,PS00L119,PS00L120
          GOTO     PS00L999
.
PS00L101
          MOVE      EXTTYPE,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      EXTDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      PRDFLAB,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      PRDFDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      PRDTLAB,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      PRDTDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      COSFLAB,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      COSFDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      COSTLAB,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      COSTDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      SUPFLAB,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      SUPFDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      SUPTLAB,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      SUPTDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      STAFLAB,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      STAFDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      STATLAB,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          MOVE      STATDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L119
          MOVE      FROMDATD,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L120
          MOVE      TODATD,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Process Purchase Requisitions      
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L104,SF00L006,SF00L105:
                            SF00L006,SF00L106,SF00L006,SF00L107:
                            SF00L006,SF00L108,SF00L006,SF00L109:
                            SF00L006,SF00L110,SF00L006,SF00L111:
                            SF00L006,SF00L112,SF00L113
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L020,SF00L104,SF00L020,SF00L105:
                            SF00L020,SF00L106,SF00L020,SF00L107:
                            SF00L020,SF00L108,SF00L020,SF00L109:
                            SF00L020,SF00L110,SF00L020,SF00L111:
                            SF00L020,SF00L112,SF00L113
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      POST0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,EXTDESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KEXTR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      EXTTYPE,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      EXTDESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PRDFDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPRDF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      PRDFLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PRDFDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PRDTDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPRDT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      PRDTLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PRDTDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,COSFDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCOSF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      COSFLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      COSFDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,COSTDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCOST000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      COSTLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      COSTDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L108
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SUPFDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSUPF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SUPFLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SUPFDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L109
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SUPTDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSUPT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L109
            ENDIF
            BRANCH    EXIT,SF00L109,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SUPTLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SUPTDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L110
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,STAFDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSTAF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L110
            ENDIF
            BRANCH    EXIT,SF00L110,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      STAFLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      STAFDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L111
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,STATDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSTAT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L111
            ENDIF
            BRANCH    EXIT,SF00L111,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      STATLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      STATDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L112
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KDATF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L112
            ENDIF
            BRANCH    EXIT,SF00L112,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMDATD,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L113
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KDATT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L113
            ENDIF
            BRANCH    EXIT,SF00L113,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      TODATD,VAR       
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.--------------------------------
. Screen - Processing Screen                  
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
          CALL      SETSCR01
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Processing Screen                  
.-------------------------------------------------------
CF01L000
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Processing Screen                  
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Processing Screen                  
.---------------------------------------------------------
WP01L000
          PREP     TEMPWORD,FILSIQB1
          PACK     KEY16,SIQCCST,SIQCRID,SP70
          MOVE     KEY16,SAVKEY80
          SETLPTR  SAVKEY80,13
          CALL      RDSIQB1 
          IF        OVRCD=0
            CALL      RPSIQB1 
          ENDIF
WP01L100
          CALL     RKSIQB1 
          BRANCH   OVRCD,WP01L105
          PACK     KEY16,SIQBCST,SIQBRID,SIQBLIN
          MATCH    SAVKEY80,KEY16   
          GOTO     WP01L105 IF NOT EQUAL
          PACK     VAR,SIQBCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     SIQBCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP01L100
WP01L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Processing Screen                  
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Processing Screen                  
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Processing Screen                  
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L101:
                            PS01L102,PS01L103,PS01L104,PS01L105:
                            PS01L106,PS01L107,PS01L108,PS01L109:
                            PS01L110,PS01L111,PS01L112,PS01L113:
                            PS01L114,PS01L115,PS01L116,PS01L117:
                            PS01L118,PS01L119,PS01L999,PS01L999:
                            PS01L120,PS01L121,PS01L122,PS01L123:
                            PS01L124
          GOTO     PS01L999
.
PS01L101
          MOVE      SIQCCST,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      SICADESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      SIQCRID,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      SIQCSTA,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      SICDDESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      SIQCCAT,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      SIQCSUT,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      SIQCSUP,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      APMASN1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      APMACN2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      SIQCPGP,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      SISADESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE      SIQCPN,VAR       
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          MOVE      SIQCPD,VAR       
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L116
          UNPACK    SIQCEDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L117
          MOVE      SIQCPQT,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L118
          MOVE      DEXPCST,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L119
          MOVE     FILSIQB1,WORDNAME
          CALL     DISPWORD
          GOTO     PS01L999
.
PS01L120
          MOVE      SIQCGST,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L121
          MOVE      IBGSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L122
          MOVE      SIQCGSTA,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L123
          MOVE      TOTALGST,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L124
          MOVE      TOTALCST,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Processing Screen                  
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L103,SF01L006,SF01L104,SF01L105:
                            SF01L006,SF01L006,SF01L106,SF01L006:
                            SF01L107,SF01L108,SF01L109,SF01L110:
                            SF01L111,SF01L112,SF01L113,SF01L114:
                            SF01L115,SF01L006,SF01L006,SF01L006:
                            SF01L006
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L103,SF01L020,SF01L104,SF01L105:
                            SF01L020,SF01L020,SF01L106,SF01L020:
                            SF01L107,SF01L108,SF01L109,SF01L110:
                            SF01L111,SF01L112,SF01L020,SF01L020:
                            SF01L115,SF01L020,SF01L020,SF01L020:
                            SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          CALL      ABORT000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      POSTA000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF01L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF01L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF01L999
          ENDIF
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF01L000
          ENDIF
          GOTO      SF01L001
.
SF01L103
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIIADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSIIA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L103
            ENDIF
            BRANCH    EXIT,SF01L103,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SIQCCAT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIIADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSIFA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
            BRANCH    EXIT,SF01L104,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SIQCSUT,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L105
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMASN1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACN2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAPMA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L105
            ENDIF
            BRANCH    EXIT,SF01L105,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SIQCSUP,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMASN1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACN2,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L106
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SISADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSISA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L106
            ENDIF
            BRANCH    EXIT,SF01L106,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SIQCPGP,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SISADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPART000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L107
            ENDIF
            BRANCH    EXIT,SF01L107,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SIQCPN,VAR       
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KDESC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L108
            ENDIF
            BRANCH    EXIT,SF01L108,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SIQCPD,VAR       
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KDATE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L109
            ENDIF
            BRANCH    EXIT,SF01L109,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          UNPACK    SIQCEDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L110
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KQUAN000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L110
            ENDIF
            BRANCH    EXIT,SF01L110,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SIQCPQT,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L111
.
.
          MOVE      "   27",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIQCGSTA
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOTALGST
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOTALCST
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAMTA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L111
            ENDIF
            BRANCH    EXIT,SF01L111,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      DEXPCST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   27",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIQCGSTA,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALGST,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALCST,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L112
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "19",SCPSROW
              MOVE     " 18",SCPSCOL
              MOVE     " 60",SCPSLEN
              MOVE     " 3",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILSIQB1,WORDNAME
              MOVE     "  0",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILSIQB1,WORDNAME
            MOVE     "  0",WORDTYPE
            CALL     EDITWORD
          ENDIF
          GOTO     SF01L001
.
SF01L113
          CALL      IGNOR000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L114
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      CANCL000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF01L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF01L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF01L999
          ENDIF
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF01L000
          ENDIF
          GOTO      SF01L001
.
SF01L115
.
.
          MOVE      "   26",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,IBGSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EGSTC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L115
            ENDIF
            BRANCH    EXIT,SF01L115,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SIQCGST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   26",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      IBGSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.--------------------------------
. Screen - Create Orders                      
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC02L200
          CALL      CF02L000 * Clear Fields
          CALL      SETSCR02
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Create Orders                      
.-------------------------------------------------------
CF02L000  COMPARE   ZERO,ACCEPT
              GOTO      CF02L999 IF EQUAL
          MOVE      SP70,SIPAORI 
          MOVE      SP70,SIPAICN 
          MOVE      SP70,SIPADEL 
          MOVE      SP70,SIPAMES 
          MOVE      SP70,SIPADIN 
          MOVE      SP70,SIPAIDP 
          MOVE      SP70,SIPAUR1 
          MOVE      SP70,SIPAUR2 
          MOVE      SP70,SIPAUD1 
          MOVE      SP70,SIPAUD2 
          MOVE      SP70,SIPAUC1 
          MOVE      SP70,SIPAUC2 
          MOVE      SP70,SIPAUY1 
          MOVE      SP70,SIPAUY2 
          MOVE      SP70,SIORNAME
          MOVE      SP70,SIPACON 
          MOVE      SP70,CONFDESC
          MOVE      SP70,MESSDESC
          MOVE      SP70,DEFTWARE
          MOVE      SP70,SIWADES 
          MOVE      SP70,SIOREXT 
          MOVE      SP70,SIPEPER 
          MOVE      SP70,SIPEYEAR
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Create Orders                      
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Create Orders                      
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Create Orders                      
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Create Orders                      
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Create Orders                      
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L101,PS02L102,PS02L999,PS02L103:
                            PS02L104,PS02L105,PS02L106,PS02L107:
                            PS02L108,PS02L109,PS02L110,PS02L111:
                            PS02L112,PS02L113,PS02L114,PS02L115:
                            PS02L116,PS02L117,PS02L118,PS02L999:
                           PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L119,PS02L120,PS02L999,PS02L999:
                           PS02L999,PS02L121,PS02L122,PS02L123
          GOTO     PS02L999
.
PS02L101
          MOVE      SIPAORI,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      SIPAICN,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      SIPADEL,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      SIPAMES,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      SIPAIDP,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L107
          MOVE      SIPAUR1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L108
          MOVE      SIPAUR2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L109
          UNPACK    SIPAUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L110
          UNPACK    SIPAUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L111
          MOVE      SIPAUC1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L112
          MOVE      SIPAUC2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L113
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SIPAUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L114
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SIPAUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L115
          MOVE      SIORNAME,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L116
          MOVE      SIPACON,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L117
          MOVE      CONFDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L118
          MOVE      MESSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L119
          MOVE      DEFTWARE,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L120
          MOVE      SIWADES,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L121
          MOVE      SIOREXT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L122
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L123
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Create Orders                      
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L101,SF02L102,SF02L006,SF02L103:
                            SF02L104,SF02L105,SF02L106,SF02L107:
                            SF02L108,SF02L109,SF02L110,SF02L111:
                            SF02L112,SF02L113,SF02L114,SF02L006:
                            SF02L115,SF02L006,SF02L006,SF02L006:
                           SF02L006,SF02L006,SF02L116,SF02L117:
                            SF02L118,SF02L006,SF02L006,SF02L006:
                           SF02L006,SF02L006,SF02L006,SF02L006
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L101,SF02L102,SF02L020,SF02L103:
                            SF02L104,SF02L105,SF02L106,SF02L107:
                            SF02L108,SF02L109,SF02L110,SF02L111:
                            SF02L112,SF02L113,SF02L114,SF02L020:
                            SF02L115,SF02L020,SF02L020,SF02L020:
                           SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L118,SF02L020,SF02L020,SF02L020:
                           SF02L020,SF02L020,SF02L020,SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIORNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIOREXT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSIOR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L101
            ENDIF
            BRANCH    EXIT,SF02L101,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      SIPAORI,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIORNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIOREXT,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L102
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KICON000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L102
            ENDIF
            BRANCH    EXIT,SF02L102,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      SIPAICN,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDELP000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L103
            ENDIF
            BRANCH    EXIT,SF02L103,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      SIPADEL,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L104
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,MESSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EMESS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L104
            ENDIF
            BRANCH    EXIT,SF02L104,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      SIPAMES,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      MESSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L105
.
.
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIPEPER 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIPEYEAR
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EORDD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L105
            ENDIF
            BRANCH    EXIT,SF02L105,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
.
.
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIPEPER,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIPEYEAR,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KIDPT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L106
            ENDIF
            BRANCH    EXIT,SF02L106,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      SIPAIDP,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L107
          CALL     SELECTED
          STRIP     SIPAUR1 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIPAUR1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIPAUR1 
          SFORMAT   VAR,127
          ENDSET    SIPAUR1 
          APPEND    SP70,SIPAUR1 
          RESET     SIPAUR1 
          CMATCH    EXITCHAR,SIPAUR1 
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SIPAUR1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L107
            ENDIF
          ENDIF
          MOVE      SIPAUR1,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L108
          CALL     SELECTED
          STRIP     SIPAUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIPAUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIPAUR2 
          SFORMAT   VAR,127
          ENDSET    SIPAUR2 
          APPEND    SP70,SIPAUR2 
          RESET     SIPAUR2 
          CMATCH    EXITCHAR,SIPAUR2 
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SIPAUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L108
            ENDIF
          ENDIF
          MOVE      SIPAUR2,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L109
          CALL     SELECTED
          CALL      KEYDATE
          PACK      SIPAUD1,CCENT,CYEAR,CMON,CDAY           
          UNPACK    SIPAUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L110
          CALL     SELECTED
          CALL      KEYDATE
          PACK      SIPAUD2,CCENT,CYEAR,CMON,CDAY           
          UNPACK    SIPAUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L111
          CALL     SELECTED
          STRIP     SIPAUC1 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIPAUC1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIPAUC1 
          SFORMAT   VAR,127
          ENDSET    SIPAUC1 
          APPEND    SP70,SIPAUC1 
          RESET     SIPAUC1 
          CMATCH    EXITCHAR,SIPAUC1 
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SIPAUC1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L111
            ENDIF
          ENDIF
          MOVE      SIPAUC1,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L112
          CALL     SELECTED
          STRIP     SIPAUC2 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIPAUC2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIPAUC2 
          SFORMAT   VAR,127
          ENDSET    SIPAUC2 
          APPEND    SP70,SIPAUC2 
          RESET     SIPAUC2 
          CMATCH    EXITCHAR,SIPAUC2 
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SIPAUC2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L112
            ENDIF
          ENDIF
          MOVE      SIPAUC2,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L113
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,SIPAUY1 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SIPAUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L114
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,SIPAUY2 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SIPAUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L115
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CONFDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECONF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L115
            ENDIF
            BRANCH    EXIT,SF02L115,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      SIPACON,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CONFDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L116
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L117
          CALL      CREAB000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L118
.
.
          MOVE      "   26",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIWADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EWARE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L118
            ENDIF
            BRANCH    EXIT,SF02L118,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DEFTWARE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   26",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIWADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
SF02L990  MOVE      FOUR,EXIT * Exit Char Exit
SF02L999  RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC03L000
SC03L100
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC03L200
          CALL      CF03L000 * Clear Fields
SC03L300
          CALL      KY03L000 * Enter Key Fields
          BRANCH    EXIT,SC03L999,SC03L999
SC03L400
          CALL      WP03L000 * Load any WP Details
SC03L500
          CALL      LM03L000 * Load any Batch Details
SC03L600
          CALL      DF03L000 * Display Fields
SC03L700
          CALL      SF03L000 * Select Fields
          BRANCH    EXIT,SC03L100,SC03L100,SC03L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC03L800
SC03L900
SC03L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF03L000
CF03L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY03L000
          MOVE      ZERO,EXIT
          GOTO      KY03L999
.
KY03L900  MOVE      ONE,EXIT
KY03L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP03L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM03L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF03L000
          BRANCH   ACCEPT,DF03L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF03L900
          MATCH    PRGID,SCPSPID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF03L010 IF NOT EQUAL
.
          CALL     PS03L000 * Display Field
          GOTO     DF03L010
DF03L900
DF03L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS03L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS03L999,PS03L999,PS03L999,PS03L999
          GOTO     PS03L999
PS03L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF03L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF03L001  BRANCH   ACCEPT,SF03L020
.
SF03L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L006,SF03L101,SF03L102,SF03L103
SF03L006  BEEP
          GOTO     SF03L005
SF03L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF03L090
          MATCH    PRGID,SCSLPID
          GOTO     SF03L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF03L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L020,SF03L020,SF03L020,SF03L020
          GOTO     SF03L020
SF03L090  MOVE     ZERO,ACCEPT
          GOTO     SF03L001
.
SF03L101
          MOVE      ZERO,EXIT
          GOTO      SF03L999
.
SF03L102
          CALL      SC00L000
          MOVE      ONE,EXIT
          GOTO      SF03L999
.
SF03L103
          CALL      SC02L000
          MOVE      ONE,EXIT
          GOTO      SF03L999
SF03L990  MOVE      FOUR,EXIT * Exit Char Exit
SF03L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------------------
. Read Parameters
.------------------------------------------------------------------------
RDPAR000  CALL      ONAT0000
.
          CALL      GETCON00
.
          RETURN
.
GETCON00  READ      CONTROLF,TWENTY4;*165,HLASTCIN
          READ      CONTROLF,SIXTY3;*229,SNCOPRSQ,*240,SNCOPURC
.----------------------------------------------------------------------
. HACCNT    FORM 1  Running the Accounting System          0=No
. HACCDATA  DIM  20 General Ledger Data Directory
. HDEFWH    DIM  5  Default Warehouse for Non Stock Items
. HORDDES   DIM  1  Order Number Alhpa Prefix
.----------------------------------------------------------------------
          MOVE      ONE,CEAFILE
          READ      CONTROLF,TWENTY3;*95,HACCNT,*124,HORDDES:
                                    *143,HDEFWH
          READ      CONTROLF,TWENTY4;*135,HACCDATA,*165,HLASTCIN
          COMPARE   ONE,HACCNT
          GOTO      GETCON99 IF NOT EQUAL
.
.---- GL interface is on ----
.
          CLOSE     CONTROLF           * get gl control file if possible
          MOVE      "controlf.txt",KEY12
          PACK      KEY80,HACCDATA,KEY12
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CONTROLF,KEY80
          TRAPCLR   IO
          IF        OVRCD=1
            OPEN      CONTROLF,"controlf"
          ENDIF
.
          CALL      RDFMCO50           * Read Account Code Parameters
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CLOSE     CONTROLF
          OPEN      CONTROLF,"controlf"
.
          MOVE      "fmsamaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSAMAA1,KEY80
.
          MOVE      "fmslmaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMAA1,KEY80
.
          MOVE      "fmslmcaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMCA1,KEY80
.
          MOVE      "fmscsaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSCSAA1,KEY80
.
          MOVE      "fmstupaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSTUPA1,KEY80
.
          MOVE      ZERO,OVRCD
          MOVE      "apscioaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCIOA1,KEY80
          TRAPCLR   IO
.
          MOVE      ZERO,OVRCD
          MOVE      "apsordaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSORDA1,KEY80
          TRAPCLR   IO
.
          MOVE      ZERO,OVRCD
          MOVE      "apsceaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCEAA1,KEY80
          TRAPCLR   IO
.
          MOVE      "apscebaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCEBA1,KEY80
          TRAPCLR   IO
          MOVE      OVRCD,CEAFILE
.
GETCON99  RETURN
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.********************************************************************
. SETSCR00 - set up for screen 00
.********************************************************************
SETSCR00
          MOVE      ONE,ACCEPT
.
          MOVE      ZERO,EXTTYPE
          MOVE      "All                                     ",EXTDESC
.
          PACK      FROMDATD,START,SP70
          PACK      FROMDATE,SP70
.
          PACK      TODATD,END,SP70
          PACK      TODATE,Z70
.
          PACK      COSFLAB,START,SP70
          PACK      COSFCOD,SP70
          PACK      COSFDES,SP70
.
          PACK      COSTLAB,END,SP70
          PACK      COSTCOD,Z70
          PACK      COSTDES,SP70
.
          PACK      STAFLAB,START,SP70
          PACK      STAFCOD,SP70
          PACK      STAFDES,SP70
.
          PACK      STATLAB,END,SP70
          PACK      STATCOD,Z70
          PACK      STATDES,SP70
.
          PACK      PRDFLAB,START,SP70
          PACK      PRDFCOD,SP70
          PACK      PRDFDES,SP70
.
          PACK      PRDTLAB,END,SP70
          PACK      PRDTCOD,Z70
          PACK      PRDTDES,SP70
.
          PACK      SUPFLAB,START,SP70
          PACK      SUPFCOD,SP70
          PACK      SUPFDES,SP70
.
          PACK      SUPTLAB,END,SP70
          PACK      SUPTCOD,Z70
          PACK      SUPTDES,SP70
.
          RETURN
.********************************************************************
. POST - process selected data                      Called by ML
.        Returns  : EXIT            (1=illegal range entered)
.********************************************************************
POST0000  PACK      DISPMSG,SP70,SP70            * save line 24
          CALL      MESSAGE2
.
          MATCH     COSFCOD,COSTCOD              * check Cost Centre range
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Cost Centre Range - ";
            CALL      HITENTER
            GOTO      POST9500
          ENDIF
.
          MATCH     PRDFCOD,PRDTCOD              * check Product Group range
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Product Group Range - ";
            CALL      HITENTER
            GOTO      POST9500
          ENDIF
.
          MATCH     SUPFCOD,SUPTCOD              * check Supplier range
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Supplier Range - ";
            CALL      HITENTER
            GOTO      POST9500
          ENDIF
.
          MATCH     STAFCOD,STATCOD              * check Status range
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Status Range - ";
            CALL      HITENTER
            GOTO      POST9500
          ENDIF
.
          MATCH     FROMDATE,TODATE              * check Date range
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Date Range - ";
            CALL      HITENTER
            GOTO      POST9500
          ENDIF
.
.---- select desired data ----
.
          CALL      CREAA000                     * read through data
          IF        FOUNDX<>0
            CLEAR     DISPMSG
            APPEND    "No Data Selected - ",DISPMSG
            CALL      MESSAGE1
            BRANCH    FOUNDX,POST9000,POST9500   * 1=nothing sel, 2=nothing fnd
          ENDIF
.
.
POST9000  MOVE      ZERO,EXIT                    * exit screen
          GOTO      POST9999
.
POST9500  MOVE      ONE,EXIT                     * continue
.
POST9999  CALL      MESSAGE3                     * restore line 24
          RETURN
.----------------------------------------------------------------------
. Read In Data
. FOUNDX : 1=no records selected, 2=no records found
.----------------------------------------------------------------------
CREAA000  MOVE      ZERO,ABORTNOW
          MOVE      TWO,FOUNDX              * default to nothing found
          PACK      KEY13,COSFCOD,SP70
          CALL      RDSIQA1
          IF        OVRCD=0
            CALL      RPSIQA1
          ENDIF
CREAA100  CALL      RKSIQA1                 * read through outstanding records
          BRANCH    OVRCD,CREAA900
          MATCH     SIQACST,COSTCOD         * check cost centre range
          GOTO      CREAA900 IF LESS
.
          MOVE      ONE,SIIANON             * make sure non-stock catalog
          MATCH     SP70,SIQACAT
          GOTO      CREAA110 IF EQUAL
.
          COMPARE   TWO,EXTTYPE
          GOTO      CREAA100 IF EQUAL
.
          MOVE      ONE,SIIANON             * make sure non-stock catalog
          PACK      KEY7,SIQACAT,SP70
          CALL      RDSIIA1
          BRANCH    OVRCD,CREAA100
          COMPARE   ZERO,SIIANON
          GOTO      CREAA100 IF EQUAL
          GOTO      CREAA120
.
CREAA110  COMPARE   ONE,EXTTYPE
          GOTO      CREAA100 IF EQUAL
.
CREAA120  MATCH     SIQASTA,STATCOD         * check Status range
          GOTO      CREAA100 IF LESS
          MATCH     STAFCOD,SIQASTA
          GOTO      CREAA100 IF LESS
.
          MATCH     SIQADAT,TODATE          * check Date range
          GOTO      CREAA100 IF LESS
          MATCH     FROMDATE,SIQADAT
          GOTO      CREAA100 IF LESS
.
          PACK      KEY13,SIQACST,SIQARID,SP70
          CALL      RLSIQA1                 * Lock
          BRANCH    OVRCD,CREAA100,CREAA100 * 0=ok, 1=no more, 2=locked
.
          CALL      RDSIQC1                 * check if history record exists
          COMPARE   ZERO,OVRCD
          GOTO      CREAA800 IF EQUAL
.
          UNPACK    KEY13,SIQCCST,SIQCRID   * write history record
          MOVE      SIQACAT,SIQCCAT
          MOVE      SIQAUNT,SIQCUNT
          MOVE      SIQAPD,SIQCPD
          MOVE      SIQAPN,SIQCPN
          MOVE      SIQAQTY,SIQCQTY
          MOVE      SIQASTA,SIQCSTA
          MOVE      SIQAUID,SIQCUID
          MOVE      SIQADAT,SIQCDAT
          MOVE      SIQATIM,SIQCTIM
          MOVE      SIQAPOR,SIQCPOR
          PACK      SIQCPID,PASSCODE,SP70
          PACK      SIQCPDT,CCC,CYY,CMM,CDD,SP70
          REP       " 0",SIQCPDT
          CLOCK     TIME,SIQCPTM
          PACK      SIQCPPO,PORT,SP70
          MOVE      SP70,SIQCORI
          MOVE      "1",SIQCPTY
          MOVE      ZERO,SIQCECT
          MOVE      ZERO,SIQCGSTA
          MOVE      ZERO,SIQCPQT
          PACK      SIQCORD,SP70
          MOVE      SP70,SIQCREQ
          MOVE      SP70,SIQCEDT
          MOVE      SP70,SIQCSUP
          MOVE      SIQAUNT,SIQCSUT
          MOVE      SP70,SIQCPGP
          MOVE      SP70,SIQCGST
          MOVE      SP70,SIQCSPA
          MOVE      SP70,DEXPCST
          MOVE      SP70,SIIADES
          MOVE      SP70,APMASN1
          MOVE      SP70,APMASN2
          MOVE      SP70,SISADESC
.
          PACK      KEY7,SIQACAT,SP70  * check if legal catalog
          CALL      RDSIIA1
          IF        OVRCD=0
            MATCH     SIIASUB,PRDTCOD  * check Product Group range
            GOTO      CREAA800 IF LESS
            MATCH     PRDFCOD,SIIASUB
            GOTO      CREAA800 IF LESS
.
            CALL      GETSUP00         * get supplier code if possible
            IF        EXIT=2
              GOTO      CREAA800       * not in supplier range
            ENDIF
          ENDIF
.
          MOVE      SIQACST,KEY5
          CALL      RDSICA1
.
          CALL      SC01L000           * execute sub screen
.
          IF        FOUNDX<>0
            PACK      KEY13,SIQACST,SIQARID,SP70
            CALL      RDSIQC1          * check if data written
            IF        OVRCD=0 & SIQCPTY=1
              MOVE      ZERO,FOUNDX
            ELSE
              MOVE      ONE,FOUNDX
            ENDIF
          ENDIF
.
CREAA800  CALL      UUSIQA1            * unlock SIQA record
.
          COMPARE   ONE,ABORTNOW       * abort ?
          GOTO      CREAA100 IF NOT EQUAL
.
CREAA900
.
CREAA999  RETURN
.----------------------------------------------------------------------
. Process Orders
.----------------------------------------------------------------------
CREAB000  MOVE      "99",CLNO
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
          MOVE      TWO,FOUNDX              * default to nothing found
          MOVE      SP70,LASTSUPP
          CALL      RDSIQC00                * Index 3 or 4 Based on Parameter
CREAB300  CALL      RKSIQC00                * SNCOPRSQ
          BRANCH    OVRCD,CREAB900
          MATCH     SP70,SIQCORD
          GOTO      CREAB900 IF NOT EQUAL
.
          PACK      KEY13,SIQCCST,SIQCRID,SP70
          CALL      RLSIQA1                 * check if outstanding record exists
          BRANCH    OVRCD,CREAB300,CREAB300 * 0=ok, 1=no more, 2=locked
.
          MOVE      ZERO,FOUNDX
          CALL      MKORD000                * create order
          BRANCH    EXIT,CREAB999           * 1=could not create order
.
          GOTO      CREAB300
.
CREAB900  IF        FOUNDX<>0
            CLEAR     DISPMSG
            APPEND    "No Outstanding Data - ",DISPMSG
            CALL      MESSAGE1
          ELSE
            CALL      UND80
            PRINT     *30,"*** End of Report ***"
          ENDIF
.
CREAB999  RETURN
.------------------------------------------------------------
. Start Position on P/R
.------------------------------------------------------------
RDSIQC00  IF        SNCOPRSQ=0
            PACK      KEY55,SP70
            CALL      RDSIQC3
            IF        OVRCD=0
              CALL      RPSIQC3
            ENDIF
          ELSE
            PACK      KEY55,SP70
            CALL      RDSIQC4
            IF        OVRCD=0
              CALL      RPSIQC4
            ENDIF
          ENDIF
          RETURN
.------------------------------------------------------------
. Read Next on P/R
.------------------------------------------------------------
RKSIQC00  IF        SNCOPRSQ=0
            CALL      RKSIQC3
          ELSE
            CALL      RKSIQC4
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Process order
.----------------------------------------------------------------------
MKORD000  MATCH     SIQCSUP,SP70
          CALL      GETSUP00 IF EQUAL
.
          MATCH     SIQCSUP,SP70
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,"No Supplier Exists for order.  ";
            CALL      HITENTER
            GOTO      MKORD950
          ENDIF
.
          MATCH     LASTSUPP,SIQCSUP        * next supplier
          IF        !@EQUAL
            PACK      LASTSUPP,SIQCSUP,SP70
            CALL      UUSIPA1               * unlock last order
            CALL      NXORD000              * get next order
            BRANCH    EXIT,MKORD950
          ENDIF
.
          DISPLAY   *P1:24,*EL,"Generating Order No. : ":
                    *V2LON,SIPAPON,SLASH,F3A,*HOFF," for ",*V2LON,SIPASUP;
.
          MOVE      ONE,SIIANON
          MOVE      SP70,SIIAISS
          MOVE      SIQCCAT,KEY7
MKORD100  CALL      RLSIIA1
          BRANCH    OVRCD,MKORD110,MKORD800
.
MKORD110  IF        SIIANON=0
            MOVE      "Stock",SIPCCST
            MOVE      SP70,SIPCPRD
          ELSE
            MOVE      SIQCCST,SIPCCST
          ENDIF
.
          MOVE      SIQCPGP,SIPCPRD
          PACK      SIPCDAT,SIPEYEAR,SIPEPER,SP70
          MOVE      SIPAWAR,SIPCWAR
          MOVE      SIQCCAT,SIPCCAT
          MOVE      SIQCPN,SIPCPN
          MOVE      SIQCPD,SIPCPD
          MOVE      SIQCSUT,SIPCSUT
          MOVE      SIQCCDT,SIPCCDT
          MOVE      SIQCCON,SIPCCON
          MOVE      SIQCEDT,SIPCEDD
          MOVE      SP70,SIPCFDD
          MOVE      SIQCECT,SIPCECT
          MOVE      SIQCGSTA,SIPCGSTA
          MOVE      SIQCPQT,SIPCOQT
          MOVE      SIPCOQT,SIPCOQO
          MOVE      SIPCECT,SIPCOOP
          MOVE      SIPCGSTA,SIPCOGS
          MOVE      ZERO,SIPCRQT
          MOVE      ZERO,SIPCIQT
          MOVE      ZERO,SIPCTCR
          MOVE      ZERO,SIPCTIN
          MOVE      SP70,SIPCUR1
          MOVE      SP70,SIPCUR2
          MOVE      SP70,SIPCUD1
          MOVE      SP70,SIPCUD2
          MOVE      SP70,SIPCUY1
          MOVE      SP70,SIPCUY2
          MOVE      SIQCGST,SIPCGST
          MOVE      SP70,SIPCSPA
.
          MOVE      SIPAPON,SIPCPON
          REPEAT
            ADD       ONE,F3A
            MOVE      F3A,SIPCITM
            PACK      KEY10,SIPCPON,SIPCITM
            CALL      RASIPC1
          UNTIL     OVRCD=1
          CALL      WRSIPC1
          MOVE      ONE,AUDTTYPE
          CALL      WASIPC00                   * Audit Add
.
          PACK      KEY16,SIQCCST,SIQCRID,SP70
          CALL      RSSIQB1
.
MKORD200  CALL      RKSIQB1
          BRANCH    OVRCD,MKORD300
.
          MATCH     SIQCCST,SIQBCST
          GOTO      MKORD300 IF NOT EQUAL
          MATCH     SIQCRID,SIQBRID
          GOTO      MKORD300 IF NOT EQUAL
.
          MOVE      SIPCPON,SIPDPON
          MOVE      SIPCITM,SIPDITM
          MOVE      SIQBLIN,SIPDLIN
          MOVE      SIQBCOM,SIPDCOM
          PACK      SIPCSPA,SP70
.
          PACK      KEY13,SIPDPON,SIPDITM,SIPDLIN,SP70
          CALL      RASIPD1
          IF        OVRCD=1
            CALL      WRSIPD1
          ELSE
            CALL      UPSIPD1
          ENDIF
          GOTO        MKORD200
.
MKORD300  MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIPCSUT
          CALL      RDSIFA1
.
          ASSIGN    SIPCOQT*SIFACTOR,SIUSQTY
          IF        SIPCECT<0
            MOVE      ZERO,SIUSCST
          ELSE
            IF        SNCOPURC=1
              ASSIGN    SIPCECT*SIPCOQT,SIUSCST
            ELSE
              MOVE      SIPCECT,F12P4
              SUB       SIPCGSTA,F12P4
              ASSIGN    F12P4*SIPCOQT,SIUSCST
            ENDIF
          ENDIF
.
          CALL      SINORDUS                   * Update Purchases Usage
.
          PACK      KEY12,SIPCCAT,SIPCWAR
          CALL      RDSIIE1
          IF        OVRCD=0
            ADD       SIUSQTY,SIIESOO
            CALL      UPSIIE1                    * Update Stock on Order
          ENDIF
.
          MOVE      ONE,SIFACTOR                 * update history record
          PACK      KEY30,SIQCUNT,SIQCSUT
          CALL      RDSIFA1
          ASSIGN    SIQCPQT*SIFACTOR,SIQCPQT
          PACK      SIQCORD,SIPAPON,SP70
.
          PACK      KEY13,SIQCCST,SIQCRID,SP70
          CALL      RASIQC1                      * should be there !!
          IF        OVRCD=0
            CALL      UPSIQC1
          ENDIF
.
          PACK      KEY13,SIQCCST,SIQCRID,SP70   * remove outstanding record
          CALL      RDSIQA1
          CALL      DESIQA1
          MOVE      ZERO,EXIT
.
          IF        HLASTCIN=1
            MATCH     SIPCCAT,SP70
            IF        !@EQUAL
              PACK      KEY27,SIPCCAT,SIPASUP,SIPCSUT,SP70
              CALL      RDSIIC1
              IF        OVRCD=0
                MOVE      SIPCECT,SIICLCT
                CALL      UPSIIC1
              ENDIF
            ENDIF
          ENDIF
.
          COMPARE   ZERO,CEAFILE
          GOTO      MKORD750 IF NOT EQUAL
.
          MOVE      SIQCPQT,MODQTY
          CALL      UNCEA000
.
MKORD750  CALL      UUSIQA1               * unlock current request
          CALL      UUSIIA1
          MOVE      ZERO,EXIT
          GOTO      MKORD999
.
MKORD800  BEEP
          MOVE      "Catalog Locked. Retry - ",DISPMSG
          CALL      MESSAGE1
          GOTO      MKORD100
.
MKORD950  CALL      UUSIQA1               * unlock current request
          CALL      UUSIIA1
          MOVE      ONE,EXIT
.
MKORD999  RETURN
.----------------------------------------------------------------------
. Get next order
.----------------------------------------------------------------------
NXORD000  MOVE      "       ",SIPAPON
          CALL      SINORDNO         * Get Next Order Number
          IF        OVRCD=1
            MOVE      "Unable to Allocate an Order Number - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      NXORD950
          ENDIF
.
          PACK      APMASCON,SP70
          PACK      KEY5,SIQCSUP,SP70
          CALL      RDAPMA1
.
          MOVE      SIQCSUP,SIPASUP
          PACK      SIPASCN,APMASCON,SP70
          PACK      SIPADPR,SP70
          PACK      SIPADCN,SP70
          PACK      SIPADCM,SP70
          PACK      SIPASPA,SP70
          MOVE      SP70,SIPACST
          MOVE      DEFTWARE,SIPAWAR
.
          MOVE      SIPAPON,KEY7
          CALL      RASIPA1
          IF        OVRCD=0
            GOTO      NXORD000
          ELSE
            CALL     WRSIPA1
            CALL     RLSIPA1
            MOVE     ONE,AUDTTYPE
            CALL     WASIPA00                 * Audit Add
            MOVE     ZERO,F3A
          ENDIF
.
          PACK      KEY7,SIPAPON
          CALL      RDSIRP1
          IF        OVRCD=1
            MOVE      SIPAPON,SIRPPON
            CALL      WRSIRP1
          ENDIF
.
          MOVE      ZERO,F1
.
NXORD900  MOVE      ZERO,EXIT
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "|   ",SIPAPON,*16,"| ",SIPASUP,SP1,APMASN1,*80,"|"
          GOTO      NXORD999
.
NXORD950  MOVE      ONE,EXIT
.
NXORD999  RETURN
.------------------------------------------------------------
. Print Order List Page Heading
.------------------------------------------------------------
HEAD0000  CALL      HEAD80
          PRINT     *30,"Purchase Orders Generated"
          CALL      UND80
          PRINT     "| Order Number | Supplier                  ":
                    "                                    |"
          CALL      UND80
          MOVE      "10",CLNO
          RETURN
.--------------------------------------------------
. Determine Supplier
.--------------------------------------------------
GETSUP00  MOVE      SP70,SIQCCON
          MOVE      SP70,SIQCSUP
          MOVE      SP70,SIQCCDT
          MOVE      ZERO,SIQCECT
.
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          PACK      KEY45,SIQCCAT,CURRDATE,Z70
          CALL      RSSISD2                 * Check for Contract Price
          CALL      RPSISD2                 * Lastest Price
          BRANCH    OVRCD,GETSUP10          * No Contract
.
          MATCH     SISDCAT,SIQCCAT         * Correct Catalog
          GOTO      GETSUP10 IF NOT EQUAL   * No Contract
.
          MOVE      SISDCON,KEY10
          CALL      RDSISC1
          BRANCH    OVRCD,GETSUP10          * No Contract
.
          MATCH     SISCEDT,CURRDATE        * Check for Completed Contract
          GOTO      GETSUP10 IF NOT LESS    * Contract Out of Date
.
          MOVE      SISCCON,SIQCCON
          MOVE      SISDSUP,SIQCSUP
.
          CALL      SUPCHK00                * Check Supplier Code
          BRANCH    EXIT,GETSUP10
.
          PACK      KEY27,SIQCCAT,SIQCSUP,SIQCSUT,SP70
          CALL      RDSIIC1                 * check ok for supply unit
          IF        OVRCD=0
            MOVE      SISCEDT,SIQCCDT
            GOTO      GETSUP80
          ENDIF
.
.---- couldn't find contract ----
.
GETSUP10  MOVE      SP70,SIQCSUP
          MOVE      SP70,SIIAPSC
          MOVE      SP70,SIIADES
          PACK      KEY7,SIQCCAT,SP70
          CALL      RDSIIA1
.
          MOVE      SP70,SIQCCON
          MOVE      SP70,SIQCCDT
          MOVE      SIIAPSC,SIQCSUP
          CALL      SUPCHK00
          BRANCH    EXIT,GETSUP20
.
          PACK      KEY27,SIQCCAT,SIQCSUP,SIQCSUT,SP70
          CALL      RDSIIC1
          IF        OVRCD=0
            MOVE      SIICSUP,SIQCSUP
            MOVE      SIICSUT,SIQCSUT
            GOTO      GETSUP80
          ENDIF
.
          PACK      KEY12,SIQCCAT,SIQCSUP,SP70
          PACK      KEY27,SIQCCAT,SIQCSUP,SP70
          CALL      RSSIIC1
.
GETSUP12  CALL      RKSIIC1
          BRANCH    OVRCD,GETSUP15
          PACK      KEY27,SIICCAT,SIICSUP,SP70
          MATCH     KEY12,KEY27
          GOTO      GETSUP15 IF NOT EQUAL
          COMPARE   ZERO,SIICAPO
          GOTO      GETSUP12 IF EQUAL
.
          MOVE      SIICSUP,SIQCSUP
          MOVE      SIICSUT,SIQCSUT
          GOTO      GETSUP80
.
GETSUP15
.
.---- perferred supplier not valid ----
.
GETSUP20  MOVE      SP70,SIQCSUP
          PACK      KEY27,SIQCCAT,SP70
          CALL      RSSIIC1
.
GETSUP30  CALL      RKSIIC1
          BRANCH    OVRCD,GETSUP70
          MATCH     SIQCCAT,SIICCAT
          GOTO      GETSUP70 IF NOT EQUAL
          MATCH     SIIAPSC,SIICSUP      * Ignore Prefered Supplier
          GOTO      GETSUP30 IF EQUAL
          COMPARE   ZERO,SIICAPO
          GOTO      GETSUP30 IF EQUAL
.
          MOVE      SIICSUP,SIQCSUP
          MOVE      SIICSUT,SIQCSUT
          GOTO      GETSUP80
.
GETSUP70  GOTO      GETSUP90
.
GETSUP80  MATCH     SUPFCOD,SIQCSUP
          GOTO      GETSUP85 IF LESS
          MATCH     SIQCSUP,SUPTCOD
          GOTO      GETSUP85 IF LESS
          MOVE      ONE,EXIT
          GOTO      GETSUP99
.
GETSUP85  MOVE      TWO,EXIT
          GOTO      GETSUP99
.
GETSUP90  MOVE      ZERO,EXIT
.
GETSUP99  RETURN
.------------------------------------------------------------
. Check Supplier Code Exists and is not on hold for Orders
.------------------------------------------------------------
SUPCHK00  MOVE      SIQCSUP,KEY5
          MOVE      ZERO,EXIT
          CALL      RDAPMA1
          IF        OVRCD=1
            MATCH     SP70,SIQCSUP
            IF        !@EQUAL
              BEEP
              DISPLAY   *P1:19,*EF
              HLINE     *G37,19,1,80
              DISPLAY   *P1:20,"Supplier Code ",*V2LON,KEY5:
                        *HOFF," No Longer Exists.":
                        *P1:21,"Catalog   : ",*V2LON,SIQCCAT,*HOFF,SP1,SIIADES:
                        *P1:22,"Contract  : ",*V2LON,SIQCCON:
                        *P1:24,"Alternative Supplier Used - ";
              CALL      HITENTER
              DISPLAY   *P1:24,*EL;
            ENDIF
            MOVE      ONE,EXIT
          ENDIF
.
          IF        APMAHOR=1
            BEEP
            DISPLAY   *P1:19,*EF
            HLINE     *G37,19,1,80
            DISPLAY   *P1:20,"Supplier Code ",*V2LON,KEY5:
                      *HOFF," is On Hold for Order Processing.":
                      *P1:21,"Catalog   : ",*V2LON,SIQCCAT,*HOFF,SP1,SIIADES:
                      *P1:22,"Contract : ",*V2LON,SIQCCON:
                      *P1:24,"Alternative Supplier Used - ";
            CALL      HITENTER
            DISPLAY   *P1:24,*EL;
            MOVE      ONE,EXIT
          ENDIF
          RETURN
.
.--------------------------------------------------
. Get Supplier/Catalog Data
.--------------------------------------------------
.
.---- set quantity ----
.
GDATA000  IF        ACCEPT=1
            MOVE      ONE,SIFACTOR
            PACK      KEY30,SIQCUNT,SIQCSUT
            CALL      RDSIFA1
            ASSIGN    SIQCQTY/SIFACTOR,F12P2
            MOVE      F12P2,QTYFORM8
            IF        SIQCQTY/SIFACTOR>QTYFORM8
              ASSIGN    QTYFORM8+1,SIQCPQT
            ELSE
              MOVE      QTYFORM8,SIQCPQT
            ENDIF
          ENDIF
.
.---- check if catalogued ----
.
          MOVE      SP70,SIQCCON                 * clear contract details
          MOVE      SP70,SIQCCDT
.
          PACK      KEY7,SIQCCAT,SP70            * check if cataloged
          CALL      RDSIIA1
          IF        OVRCD=1
            GOTO      GDATA900
          ENDIF
.
.---- get product code ----
.
          MOVE      SIIASUB,SIQCPGP
          MOVE      SIIAGST,SIQCGST
.
.---- get part description, number, current cost ----
.
          PACK      KEY27,SIQCCAT,SIQCSUP,SIQCSUT,SP70
          CALL      RDSIIC1                 * look for defaults
          IF        OVRCD=0
            MATCH     SP70,SIICPD1
            IF        !@EQUAL
              MOVE      SIICPD1,SIQCPD
            ENDIF
            MATCH     SP70,SIICPNO
            IF        !@EQUAL
              MOVE      SIICPNO,SIQCPN
            ENDIF
            MOVE      SIICLCT,SIQCECT
          ENDIF
.
.---- get contract details ----
.
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          PACK      KEY45,SIQCSUP,SIQCCAT,CURRDATE,Z70
          CALL      RSSISD3                 * Check for Contract Price
          CALL      RPSISD3                 * Lastest Price
          BRANCH    OVRCD,GDATA900          * No Contract
.
          MATCH     SISDSUP,SIQCSUP         * Correct Supplier
          GOTO      GDATA900 IF NOT EQUAL   * No Contract
          MATCH     SISDCAT,SIQCCAT         * Correct Catalog
          GOTO      GDATA900 IF NOT EQUAL   * No Contract
.
          MOVE      SISDCON,KEY10
          CALL      RDSISC1
          BRANCH    OVRCD,GDATA900          * No Contract
.
          MATCH     SISCEDT,CURRDATE        * Check for Completed Contract
          GOTO      GDATA900 IF NOT LESS    * Contract Out of Date
.
          PACK      KEY27,SIQCCAT,SIQCSUP,SIQCSUT
          CALL      RDSIIC1
          BRANCH    OVRCD,GDATA900
.
          MOVE      SISCCON,SIQCCON       * save contract details
          MOVE      SISCEDT,SIQCCDT
.
          IF        SISDMQT>SIQCPQT
            MOVE      SISDMQT,SIQCPQT     * check at least minimum quantity
          ENDIF
.
          IF        SIQCPQT<SISDBQ1
            MOVE      SISDUC1,SIQCECT     * 0 to Break 1
          ELSE
            IF        SISDBQ1<SISDBQ2
              MOVE      SISDUC2,SIQCECT   * Break 1 to Break 2
            ELSE
              IF        SISDBQ2<SISDBQ3
                MOVE      SISDUC3,SIQCECT * Break 2 to Break 3
              ELSE
                MOVE      SISDUC4,SIQCECT * > Break 3
              ENDIF
            ENDIF
          ENDIF
.
GDATA900  CALL      CALTAX00
          MOVE      ZERO,F12P4
          ASSIGN    SIQCGSTA*SIQCPQT,F12P4
          MOVE      F12P4,TOTALGST
          MOVE      ZERO,F12P4
          ASSIGN    SIQCECT*SIQCPQT,F12P4
          MOVE      F12P4,TOTALCST
.
GDATA999  RETURN
.----------------------------------------------------------------------
. Update Non-Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
UNCEA000  MOVE      HORDDES,APEAISC  * System Prefix
          MOVE      SIPCPON,APEAORD
          MOVE      SIPASUP,APEACRD
          PACK      KEY8,APEAISC,APEAORD,SP70
          CALL      RDAPEA1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPADIN,APEADAT
            CALL      WRAPEA1
          ELSE
            MATCH     SIPASUP,APEACRD
            IF        !@EQUAL
              MOVE      SIPASUP,APEACRD
              MOVE      SIPADIN,APEADAT
              CALL      UPAPEA1
            ENDIF
          ENDIF
.
          MOVE      HORDDES,APEBISC  * System Prefix
          MOVE      SIPCPON,APEBORD
          PACK      APEBCAT,SIPCITM,SP70
          PACK      KEY14,APEBISC,APEBORD,APEBCAT
          CALL      RDAPEB1
          IF        OVRCD=0
            ADD       MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            IF        APEBQTY>0
              CALL      UPAPEB1
            ELSE
              CALL      DEAPEB1
              UNPACK    SP70,APEBISC,APEBORD,APEBCAT
              PACK      KEY8,APEAISC,APEAORD,SP70
              PACK      KEY14,KEY8,SP70
              CALL      RSAPEB1
              CALL      RKAPEB1
              PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
              MATCH     KEY8,KEY14
              CALL      DEAPEA1 IF NOT EQUAL
            ENDIF
.
            MOVE      MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            CALL      UFMFP000         * update committed expenditure
            GOTO      UNCEA999
          ENDIF
.
. No Existing Record
.--------------------
          MOVE      DEFTWARE,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          PACK      SICAGL,SP70
          MOVE      SIPCCST,KEY5
          CALL      RDSICA1
.
          UNPACK    SICAGL,APEBLED,APEBACC
          MOVE      SIWADISS,APEBDIS
          MOVE      SIWARESP,APEBRES
          MOVE      SP70,APEBSPA
          MOVE      MODQTY,APEBQTY
          MOVE      SIPCECT,APEBUCT
          MOVE      SIPCGSTA,APEBUGS
          ASSIGN    APEBQTY*APEBUCT,APEBAMT
          ASSIGN    APEBQTY*APEBUGS,APEBGST
          MOVE      SIPCPD,APEBDES
.
UNCEA100  MATCH     SP70,APEBACC       * use posting acc if no CC
          GOTO      UNCEA115 IF EQUAL
.
          STORE     APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APEBACC,APEBACC,FMSUUD2B
          ENDIF
.
          MATCH     SP70,SIPCPRD
          IF        @EQUAL
            MOVE      SIIASUB,SIPCPRD
          ENDIF
          PACK      KEY5,SIPCPRD,SP70
          CALL      RDSISA1
          BRANCH    SIWATYP,UNCEA120,UNCEA115
.
UNCEA110  PACK      SILTSUB,SIPCPRD,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add subj code
          GOTO      UNCEA200
.
UNCEA115  PACK      APEBACC,SICAPACC,SP70        * Use CC Posting Account
          GOTO      UNCEA200
.
UNCEA120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add commodity code
.
UNCEA200  CALL      XHKFMS00
.                                           * don't write if qty=0     *I-43474
          IF        APEBQTY > 0
            CALL      WRAPEB1
          ENDIF                                                        *I-43474
          CALL      UFMFP000           * update committed expenditure
.
UNCEA999  RETURN
.------------------------------------------------------------
. Check FMS Account
.------------------------------------------------------------
XHKFMS00  MOVE      ZERO,FMAMTYPE
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            SQUEEZE   KEY14
            CALL      RDFMAM1
            IF        OVRCD=0
              UNPACK    KEY14,APEBLED,APEBACC
            ENDIF
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Update period summary file
.----------------------------------------------------------------------
UFMFP000  PACK      KEY2,APEBLED,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,UFMFP999
.
          PACK      WORKDATE,APEADAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,UFMFP999
.
          MOVE      "fmsp",KEY4
          PACK      KEY8,KEY4,CURYEAR,SP70
          REP       " 0",CURYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,KEY8
          TRAPCLR   IO
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      RDFMFP1
          IF        OVRCD=0
            ASSIGN    APEBAMT+FMFPCOM2,FMFPCOM2
            CALL      UPFMFP1
          ELSE
            MOVE      ZERO,FMFPCBF
            MOVE      ZERO,FMFPC01
            MOVE      ZERO,FMFPC02
            MOVE      ZERO,FMFPC03
            MOVE      ZERO,FMFPC04
            MOVE      ZERO,FMFPC05
            MOVE      ZERO,FMFPC06
            MOVE      ZERO,FMFPC07
            MOVE      ZERO,FMFPC08
            MOVE      ZERO,FMFPC09
            MOVE      ZERO,FMFPC10
            MOVE      ZERO,FMFPC11
            MOVE      ZERO,FMFPC12
            MOVE      ZERO,FMFPC13
.
            MOVE      ZERO,FMFPABF
            MOVE      ZERO,FMFPA01
            MOVE      ZERO,FMFPA02
            MOVE      ZERO,FMFPA03
            MOVE      ZERO,FMFPA04
            MOVE      ZERO,FMFPA05
            MOVE      ZERO,FMFPA06
            MOVE      ZERO,FMFPA07
            MOVE      ZERO,FMFPA08
            MOVE      ZERO,FMFPA09
            MOVE      ZERO,FMFPA10
            MOVE      ZERO,FMFPA11
            MOVE      ZERO,FMFPA12
            MOVE      ZERO,FMFPA13
            MOVE      ZERO,FMFPCOM
.
            MOVE      ZERO,FMFPCBFD
            MOVE      ZERO,FMFPC01D
            MOVE      ZERO,FMFPC02D
            MOVE      ZERO,FMFPC03D
            MOVE      ZERO,FMFPC04D
            MOVE      ZERO,FMFPC05D
            MOVE      ZERO,FMFPC06D
            MOVE      ZERO,FMFPC07D
            MOVE      ZERO,FMFPC08D
            MOVE      ZERO,FMFPC09D
            MOVE      ZERO,FMFPC10D
            MOVE      ZERO,FMFPC11D
            MOVE      ZERO,FMFPC12D
            MOVE      ZERO,FMFPC13D
.
            MOVE      ZERO,FMFPABFD
            MOVE      ZERO,FMFPA01D
            MOVE      ZERO,FMFPA02D
            MOVE      ZERO,FMFPA03D
            MOVE      ZERO,FMFPA04D
            MOVE      ZERO,FMFPA05D
            MOVE      ZERO,FMFPA06D
            MOVE      ZERO,FMFPA07D
            MOVE      ZERO,FMFPA08D
            MOVE      ZERO,FMFPA09D
            MOVE      ZERO,FMFPA10D
            MOVE      ZERO,FMFPA11D
            MOVE      ZERO,FMFPA12D
            MOVE      ZERO,FMFPA13D
            MOVE      ZERO,FMFPCOMD
.
            MOVE      ZERO,FMFPCBFT
            MOVE      ZERO,FMFPC01T
            MOVE      ZERO,FMFPC02T
            MOVE      ZERO,FMFPC03T
            MOVE      ZERO,FMFPC04T
            MOVE      ZERO,FMFPC05T
            MOVE      ZERO,FMFPC06T
            MOVE      ZERO,FMFPC07T
            MOVE      ZERO,FMFPC08T
            MOVE      ZERO,FMFPC09T
            MOVE      ZERO,FMFPC10T
            MOVE      ZERO,FMFPC11T
            MOVE      ZERO,FMFPC12T
            MOVE      ZERO,FMFPC13T
.
            MOVE      ZERO,FMFPABFT
            MOVE      ZERO,FMFPA01T
            MOVE      ZERO,FMFPA02T
            MOVE      ZERO,FMFPA03T
            MOVE      ZERO,FMFPA04T
            MOVE      ZERO,FMFPA05T
            MOVE      ZERO,FMFPA06T
            MOVE      ZERO,FMFPA07T
            MOVE      ZERO,FMFPA08T
            MOVE      ZERO,FMFPA09T
            MOVE      ZERO,FMFPA10T
            MOVE      ZERO,FMFPA11T
            MOVE      ZERO,FMFPA12T
            MOVE      ZERO,FMFPA13T
            MOVE      ZERO,FMFPCOMT
.
            PACK      FMFPSPAR,SP70,SP70
            ASSIGN    APEBAMT,FMFPCOM2
            CALL      WRFMFP1
          ENDIF
.
          COMPARE   ONE,FMCOCALC
          GOTO      UFMFP999 IF NOT EQUAL
.
          PACK      KEY20,PORT,CURYEAR,APEBLED,APEBACC,SP70
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      UFMFP999 IF EQUAL
.
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
UFMFP999  RETURN
.
.----------------------------------------------------------------------
. get subjective/commodity translation
.----------------------------------------------------------------------
GTRA0000  PACK      KEY8,FMAMLEDG,SILTSUB,SP70                         *C-59696
          CALL      RDSILT1
.
GTRA9999  RETURN
.----------------------------------------------------------------------
. Keyin extraction type
.----------------------------------------------------------------------
KEXTR000
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
KEXTR100
          DISPLAY   *P1:24,*V2LON,"0",*HOFF,"=All, ":
                           *V2LON,"1",*HOFF,"=Cataloged Only, ":
                           *V2LON,"2",*HOFF,"=Not Cataloged Only",*EL;
.
          KEYIN     *PCCOL:CVERT,*DV,SP1:
                    *PCCOL:CVERT,*V2LON,EXTTYPE;
.
          IF        EXTTYPE=0
            MOVE      "All                                     ",EXTDESC
            GOTO      KEXTR900
          ENDIF
.
          IF        EXTTYPE=1
            MOVE      "Cataloged Only                          ",EXTDESC
            GOTO      KEXTR900
          ENDIF
.
          IF        EXTTYPE=2
            MOVE      "Not Cataloged Only                      ",EXTDESC
            GOTO      KEXTR900
          ENDIF
.
          DISPLAY   *P1:24,*B,*EL,"Invalid Option - ";
          CALL      HITENTER
          GOTO      KEXTR100
.
KEXTR900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KEXTR999
.
KEXTR950  MOVE      TWO,EXIT                     * quit screen
.
KEXTR999
          CALL      MESSAGE3
          RETURN
.----------------------------------------------------------------------
. Keyin from code (SISA)
.----------------------------------------------------------------------
KPRDF000
          CALL      KSISAA00                     * keyin SISA
          BRANCH    EXIT,KPRDF100,KPRDF950
.
          PACK      PRDFLAB,SISACODE,SP70        * item entered
          PACK      PRDFCOD,SISACODE,SP70
          PACK      PRDFDES,SISADESC,SP70
          GOTO      KPRDF900
.
KPRDF100  PACK      PRDFLAB,START,SP70           * nothing entered
          PACK      PRDFCOD,SP70
          PACK      PRDFDES,SP70
          GOTO      KPRDF999
.
KPRDF900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KPRDF999
.
KPRDF950  MOVE      TWO,EXIT                     * quit screen
.
KPRDF999  RETURN
.----------------------------------------------------------------------
. Keyin to code (SISA)
.----------------------------------------------------------------------
KPRDT000
          CALL      KSISAA00                     * keyin SISA
          BRANCH    EXIT,KPRDT100,KPRDT950
.
          PACK      PRDTLAB,SISACODE,SP70        * item entered
          PACK      PRDTCOD,SISACODE,SP70
          PACK      PRDTDES,SISADESC,SP70
          GOTO      KPRDT900
.
KPRDT100  PACK      PRDTLAB,END,SP70             * nothing entered
          PACK      PRDTCOD,Z70
          PACK      PRDTDES,SP70
          GOTO      KPRDT999
.
KPRDT900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KPRDT999
.
KPRDT950  MOVE      TWO,EXIT                     * quit screen
.
KPRDT999  RETURN
.----------------------------------------------------------------------
. Keyin from code (SICA)
.----------------------------------------------------------------------
KCOSF000
          CALL      KSICAA00                     * keyin SICA
          BRANCH    EXIT,KCOSF100,KCOSF950
.
          PACK      COSFLAB,SICACODE,SP70        * item entered
          PACK      COSFCOD,SICACODE,SP70
          PACK      COSFDES,SICADESC,SP70
          GOTO      KCOSF900
.
KCOSF100  PACK      COSFLAB,START,SP70           * nothing entered
          PACK      COSFCOD,SP70
          PACK      COSFDES,SP70
          GOTO      KCOSF900
.
KCOSF900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KCOSF999
.
KCOSF950  MOVE      TWO,EXIT                     * quit screen
.
KCOSF999  RETURN
.----------------------------------------------------------------------
. Keyin from code (SICA)
.----------------------------------------------------------------------
KCOST000
          CALL      KSICAA00                     * keyin SICA
          BRANCH    EXIT,KCOST100,KCOST950
.
          PACK      COSTLAB,SICACODE,SP70        * item entered
          PACK      COSTCOD,SICACODE,SP70
          PACK      COSTDES,SICADESC,SP70
          GOTO      KCOST900
.
KCOST100  PACK      COSTLAB,END,SP70             * nothing entered
          PACK      COSTCOD,Z70
          PACK      COSTDES,SP70
          GOTO      KCOST900
.
KCOST900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KCOST999
.
KCOST950  MOVE      TWO,EXIT                     * quit screen
.
KCOST999  RETURN
.----------------------------------------------------------------------
. Keyin from code (APMA)
.----------------------------------------------------------------------
KSUPF000
          CALL      KAPMAA00                     * keyin APMA
          BRANCH    EXIT,KSUPF100,KSUPF950
.
          PACK      SUPFLAB,APMACRD,SP70         * item entered
          PACK      SUPFCOD,APMACRD,SP70
          PACK      SUPFDES,APMASN1,SP70
          GOTO      KSUPF900
.
KSUPF100  PACK      SUPFLAB,START,SP70           * nothing entered
          PACK      SUPFCOD,SP70
          PACK      SUPFDES,SP70
          GOTO      KSUPF900
.
KSUPF900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KSUPF999
.
KSUPF950  MOVE      TWO,EXIT                     * quit screen
.
KSUPF999  RETURN
.----------------------------------------------------------------------
. Keyin from code (APMA)
.----------------------------------------------------------------------
KSUPT000
          CALL      KAPMAA00                     * keyin APMA
          BRANCH    EXIT,KSUPT100,KSUPT950
.
          PACK      SUPTLAB,APMACRD,SP70         * item entered
          PACK      SUPTCOD,APMACRD,SP70
          PACK      SUPTDES,APMASN1,SP70
          GOTO      KSUPT900
.
KSUPT100  PACK      SUPTLAB,END,SP70             * nothing entered
          PACK      SUPTCOD,Z70
          PACK      SUPTDES,SP70
          GOTO      KSUPT900
.
KSUPT900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KSUPT999
.
KSUPT950  MOVE      TWO,EXIT                     * quit screen
.
KSUPT999  RETURN
.----------------------------------------------------------------------
. Keyin from code (SICD)
.----------------------------------------------------------------------
KSTAF000
          MOVE      SP70,STAFLAB
          DISPLAY   *PCCOL:CVERT,STAFLAB
          MOVE      "PRC",SICDCATA               * set up category
          CALL      KSICDB00                     * keyin SICD
          BRANCH    EXIT,KSTAF100,KSTAF950
.
          PACK      STAFLAB,SICDCODE,SP70       * item entered
          PACK      STAFCOD,SICDCODE,SP70
          PACK      STAFDES,SICDDESC,SP70
          GOTO      KSTAF900
.
KSTAF100  PACK      STAFLAB,START,SP70          * nothing entered
          PACK      STAFCOD,SP70
          PACK      STAFDES,SP70
          GOTO      KSTAF900
.
KSTAF900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KSTAF999
.
KSTAF950  MOVE      TWO,EXIT                     * quit screen
.
KSTAF999  RETURN
.----------------------------------------------------------------------
. Keyin from code (SICD)
.----------------------------------------------------------------------
KSTAT000
          MOVE      SP70,STATLAB
          DISPLAY   *PCCOL:CVERT,STATLAB
          MOVE      "PRC",SICDCATA               * set up category
          CALL      KSICDB00                     * keyin SICD
          BRANCH    EXIT,KSTAT100,KSTAT950
.
          PACK      STATLAB,SICDCODE,SP70       * item entered
          PACK      STATCOD,SICDCODE,SP70
          PACK      STATDES,SICDDESC,SP70
          GOTO      KSTAT900
.
KSTAT100  PACK      STATLAB,END,SP70            * nothing entered
          PACK      STATCOD,Z70
          PACK      STATDES,SP70
          GOTO      KSTAT900
.
KSTAT900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KSTAT999
.
KSTAT950  MOVE      TWO,EXIT                     * quit screen
.
KSTAT999  RETURN
.----------------------------------------------------------------------
. Keyin From Date
. Returns  : FROMDATE (Date entered)
.            FROMDATD (Date description)
.----------------------------------------------------------------------
KDATF000
          PACK      FROMDATE,CCC,CYY,CMM,SP70         * default to blank date
          UNPACK    FROMDATE,CCENT,CYEAR,CMON,CDAY    * set up date parameters
          CALL      KEYDATE                           * keyin date
.
          MATCH     SP70,CDAY
          IF        !@EQUAL & OVRCD=0
            PACK      FROMDATE,CCENT,CYEAR,CMON,CDAY  * pack desired date
            CALL      PACDATE                         * get date description
            PACK      FROMDATD,CPCDATE,SP70
          ELSE
            PACK      FROMDATE,SP70                   * default to start date
            PACK      FROMDATD,START,SP70             * get date description
          ENDIF
.
          MOVE      ZERO,EXIT
.
KDATF999  RETURN
.----------------------------------------------------------------------
. Keyin To Date
. Returns  : TODATE (Date entered)
.            TODATD (Date description)
.----------------------------------------------------------------------
KDATT000
          PACK      TODATE,CCC,CYY,CMM,SP70           * default to blank date
          UNPACK    TODATE,CCENT,CYEAR,CMON,CDAY      * set up date parameters
          CALL      KEYDATE                           * keyin date
.
          MATCH     SP70,CDAY
          IF        !@EQUAL & OVRCD=0
            PACK      TODATE,CCENT,CYEAR,CMON,CDAY    * pack desired date
            CALL      PACDATE                         * get date description
            PACK      TODATD,CPCDATE,SP70
          ELSE
            PACK      TODATE,Z70                      * default to start date
            PACK      TODATD,END,SP70                 * get date description
          ENDIF
.
          MOVE      ZERO,EXIT
.
KDATT999  RETURN
.----------------------------------------------------------------------
. Set up screen 01
.----------------------------------------------------------------------
SETSCR01
          MOVE      ONE,ACCEPT
          CALL      GDATA000 * Get any defaults
          MOVE      ZERO,ACCEPT
          CALL      LM01L000 * Load any Batch Details
          CALL      WP01L000 * Load any WP Details
          CALL      DF01L000 * Display Fields
          MOVE      ONE,ACCEPT
          RETURN
.********************************************************************
. ABORT - stop inputting
.********************************************************************
ABORT000  MOVE      ONE,ABORTNOW
          CALL      IGNOR000           * ignore record
.
ABORT999  RETURN
.********************************************************************
. POSTA - stop inputting
.********************************************************************
POSTA000  PACK      KEY7,SIQCCAT,SP70
          CALL      RDSIIA1
          IF        OVRCD=0
            PACK      KEY27,SIQCCAT,SIQCSUP,SIQCSUT,SP70
            CALL      RDSIIC1
            IF        OVRCD=1
              BEEP
              CLEAR     DISPMSG
              APPEND    "Catalog/Supplier Combination Invalid - ",DISPMSG
              CALL      MESSAGE1
              GOTO      POSTA950
            ENDIF
          ENDIF
.
          PACK      KEY13,SIQCCST,SIQCRID,SP70
          CALL      RASIQC1
          IF        OVRCD=1
            CALL      WRSIQC1
          ENDIF
.
          CALL      POWP0000
.
POSTA900  MOVE      ZERO,EXIT
          GOTO      POSTA9999
.
POSTA950  MOVE      ONE,EXIT
.
POSTA999  RETURN
.
.----------------------------------------------------------------------
. Post WP Data
.----------------------------------------------------------------------
.
.---- open temp file ----
.
POWP0000  MOVE      ZERO,F3
.
          CLOSE     TEMPWORD
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILSIQB1
          TRAPCLR   IO
          BRANCH    OVRCD,POWP2000               * 1 = file not found
.
.---- add wp data ----
.
POWP1000  READ     TEMPWORD,SEQ;SIQBCOM          * read through temp file
          GOTO     POWP2000 IF OVER
.
          ADD      ONE,F3                        * get next unique id
          PACK     KEY16,SIQACST,SIQARID,F3,SP70
          UNPACK   KEY16,SIQBCST,SIQBRID,SIQBLIN
          CALL     DESIQB1                       * save data
          CALL     WRSIQB1
          GOTO     POWP1000
.
.---- delete extra wp data ----
.
POWP2000  PREP     TEMPWORD,FILSIQB1             * delete temp file
          CLOSE    TEMPWORD
          PACK     KEY13,SIQACST,SIQARID,SP70
          PACK     KEY16,KEY13,F3,SP70
          UNPACK   KEY16,SIQBCST,SIQBRID,SIQBLIN
.
POWP3000  CALL     RSSIQB1                       * get next record
          CALL     RKSIQB1
          BRANCH   OVRCD,POWP9999
          PACK     KEY16,SIQBCST,SIQBRID,SIQBLIN,SP70
          MATCH    KEY16,KEY13
          GOTO     POWP9999 IF NOT EQUAL
          CALL     DESIQB1                       * delete extra record
          GOTO     POWP3000
.
POWP9999  RETURN
.-------------------------------------------------------------------
. Keyin SIIA
.-------------------------------------------------------------------
KSIIA000
          BRANCH    ACCEPT,KSIIA900              * skip if in accept
.
          MOVE      SP70,SIQCCAT
          CALL      KSIIAA00                     * keyin SIIA
          BRANCH    EXIT,KSIIA900,KSIIA950
.
          MOVE      SIIACAT,SIQCCAT
          CALL      GDATA000                     * set up data
          CALL      DF01L000                     * display data
.
.
KSIIA900
          MOVE      SP70,SIIADES
          PACK      KEY7,SIQCCAT,SP70
          CALL      RDSIIA1
          MOVE      ZERO,EXIT
          GOTO      KSIIA999
.
KSIIA950  MOVE      TWO,EXIT
.
KSIIA999  RETURN
.-------------------------------------------------------------------
. Keyin SIFA
.-------------------------------------------------------------------
KSIFA000
          BRANCH    ACCEPT,KSIFA900              * skip if in accept
.
          PACK      SIFASUPP,SP70
          MOVE      SIQCUNT,SIFAISSU
          CALL      KSIFAB00                     * keyin SIFA
          BRANCH    EXIT,KSIFA900,KSIFA950
.
          MOVE      SIFASUPP,SIQCSUT
.
KSIFA900  MOVE      ZERO,EXIT
          GOTO      KSIFA999
.
KSIFA950  MOVE      TWO,EXIT
.
KSIFA999  RETURN
.-------------------------------------------------------------------
. Keyin APMA
.-------------------------------------------------------------------
KAPMA000
          PACK      KEY7,SIQCCAT,SP70            * check if cataloged
          CALL      RDSIIA1
          IF        OVRCD=0 & ACCEPT=1
            MATCH     SP70,SIQCSUP
            GOTO      KAPMA900 IF NOT EQUAL
          ENDIF
.
          CALL      KAPMAA00                     * keyin APMA
          BRANCH    EXIT,KAPMA930,KAPMA950
.
          MOVE      APMACRD,SIQCSUP
.
KAPMA900
          MOVE      SP70,APMASN1
          PACK      KEY5,SIQCSUP,SP70
          CALL      RDAPMA1
.
          MATCH     SUPFCOD,SIQCSUP    * check if in range
          GOTO      KAPMA920 IF LESS
          MATCH     SIQCSUP,SUPTCOD
          GOTO      KAPMA920 IF LESS
.
          CALL      SUPCHK00           * check if supplier valid
          LOAD      SIQCSUP,EXIT,SP70
          BRANCH    EXIT,KAPMA000
.
          CALL      GDATA000           * set up data
          CALL      DF01L000           * display data
.
          MOVE      ZERO,EXIT
          GOTO      KAPMA999
.
KAPMA920
          CLEAR     DISPMSG
          APPEND    "Supplier Not In Specified Range - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KAPMA000
.
KAPMA930  CALL      CANCL000                     * cancel request ?
          BRANCH    EXIT,KAPMA000
.
KAPMA950  MOVE      TWO,EXIT
.
KAPMA999  RETURN
.-------------------------------------------------------------------
. Keyin SISA
.-------------------------------------------------------------------
KSISA000  PACK      KEY7,SIQCCAT,SP70            * check if cataloged
          CALL      RDSIIA1
          IF        OVRCD=0
            MOVE      SIIASUB,SIQCPGP
            IF        ACCEPT=0
              BEEP
              MOVE      "Item is Cataloged - ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            GOTO      KSISA900
          ELSE
            MOVE      SP70,SIQCPGP
          ENDIF
.
          CALL      KSISAA00                     * keyin SISA
          BRANCH    EXIT,KSISA900,KSISA950
.
          MOVE      SISACODE,SIQCPGP
.
KSISA900  MOVE      SP70,SISADESC
          PACK      KEY5,SIQCPGP,SP70
          CALL      RDSISA1
          GOTO      KSISA999
.
KSISA950  MOVE      TWO,EXIT
.
KSISA999  RETURN
.----------------------------------------------------------------------
. KPART - Keyin part number if no catalog entered
.----------------------------------------------------------------------
KPART000
          PACK      KEY27,SIQCCAT,SIQCSUP,SIQCSUT,SP70
          CALL      RDSIIC1                 * look for default
          BRANCH    OVRCD,KPART800
          MATCH     SP70,SIICPNO
          GOTO      KPART800 IF EQUAL
.
          MOVE      SIICPNO,SIQCPN
          IF        ACCEPT=0
            BEEP
            CLEAR     DISPMSG
            APPEND    "Part number set up in catalog - ",DISPMSG
            CALL      MESSAGE1
          ENDIF
.
          GOTO      KPART900
.
KPART800
          MATCH     SP70,SIQCPN
          IF        @EQUAL | ACCEPT=0
            KEYIN     *PCCOL:CVERT,*V2LON,*RV,SIQCPN
            MATCH     EXITCHAR,SIQCPN       * exitchar entered ?
            GOTO      KPART950 IF EQUAL
          ENDIF
.
          GOTO      KPART900
.
KPART900  MOVE      ZERO,EXIT               * continue
          GOTO      KPART999
.
KPART950  MOVE      TWO,EXIT                * quit
.
KPART999  RETURN
.----------------------------------------------------------------------
. KDESC - Keyin part description if no catalog entered
.----------------------------------------------------------------------
KDESC000
          PACK      KEY27,SIQCCAT,SIQCSUP,SIQCSUT,SP70
          CALL      RDSIIC1                 * look for default
          BRANCH    OVRCD,KDESC800
          MATCH     SP70,SIICPD1
          GOTO      KDESC800 IF EQUAL
.
          MOVE      SIICPD1,SIQCPD
          IF        ACCEPT=0
            BEEP
            CLEAR     DISPMSG
            APPEND    "Part description set up in catalog - ",DISPMSG
            CALL      MESSAGE1
          ENDIF
.
          GOTO      KDESC900
.
KDESC800
          MATCH     SP70,SIQCPD
          IF        @EQUAL | ACCEPT=0
            KEYIN     *PCCOL:CVERT,*V2LON,*RV,SIQCPD
            MATCH     EXITCHAR,SIQCPD         * exitchar entered ?
            GOTO      KDESC950 IF EQUAL
          ENDIF
.
          GOTO      KDESC900
.
KDESC900  MOVE      ZERO,EXIT               * continue
          GOTO      KDESC999
.
KDESC950  MOVE      TWO,EXIT                * quit
.
KDESC999  RETURN
.----------------------------------------------------------------------
. Keyin Date
. Returns  : SIQCEDT (Date entered)
.            EXIT     (0=valid date entered, 1=no date entered)
.----------------------------------------------------------------------
KDATE000
          IF        ACCEPT=1
            CALL      CALDD000
            MATCH     SP70,SIQCCAT
            GOTO      KDATE999 IF NOT EQUAL
          ENDIF
.
          UNPACK    SIQCEDT,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
.
          PACK      SIQCEDT,CCENT,CYEAR,CMON,CDAY     * pack desired date
          LOAD      SIQCEDT,OVRCD,SP70
          MOVE      OVRCD,EXIT                        * 0=continue 1=nothing ent
.
KDATE999  RETURN
.
. Calculate Expected Delivery Date
.----------------------------------
CALDD000  MATCH     SP70,SIQCCAT
          IF        @EQUAL
            MOVE      "7",SIICLTM
          ENDIF
.
          MOVE      CCC,CC
          MOVE      CYY,YY
          MOVE      CMM,MM
          MOVE      CDD,DD              * Todays Date
          CALL      DMYCON              * Convert to Jul Date
          ADD       SIICLTM,JULDAY      * Add Lead Time
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON              * Convert Date Back
          PACK      SIQCEDT,CC,YY,MM,DD
          REP       " 0",SIQCEDT
          RETURN
.----------------------------------------------------------------------
. Keyin quantity
. Returns  : SIQCPQT (Quantity)
.----------------------------------------------------------------------
KQUAN000  IF        ACCEPT=0
            KEYIN     *PCCOL:CVERT,*V2LON,*RV,SIQCPQT
            IF        !(SIQCPQT>0)
              CLEAR     DISPMSG
              APPEND    "Quantity must be grater than zero - ",DISPMSG
              CALL      MESSAGE1
              GOTO      KQUAN000
            ENDIF
          ENDIF
.
KQUAN900  CALL      CALTAX00
          MOVE      ZERO,F12P4
          ASSIGN    SIQCGSTA*SIQCPQT,F12P4
          MOVE      F12P4,TOTALGST
          MOVE      ZERO,F12P4
          ASSIGN    SIQCECT*SIQCPQT,F12P4
          MOVE      F12P4,TOTALCST
.
          MOVE      "   27",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SIQCGSTA,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     TOTALGST,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     TOTALCST,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
.
KQUAN999  RETURN
.----------------------------------------------------------------------
. Keyin AMTA
.----------------------------------------------------------------------
KAMTA000  PACK      KEY7,SIQCCAT,SP70
          CALL      RDSIIA1
          IF        OVRCD=0 & ACCEPT=1 & SIQCECT>0
            MOVE      SIQCECT,DEXPCST
          ELSE
            MOVE      SP70,DEXPCST
            KEYIN     *PCCOL:CVERT,*DV,DEXPCST:
                      *PCCOL:CVERT,*V2LON,*RV,SIQCECT
            MOVE      SIQCECT,DEXPCST
          ENDIF
.
          IF        SIQCECT=0
            CLEAR     DISPMSG
            APPEND    "Expected Cost Zero. ",DISPMSG
            CALL      MESSAGE4
            BRANCH    EXIT,KAMTA000
            MOVE      ZERO,SIQCGSTA
            MOVE      ZERO,TOTALGST
            MOVE      ZERO,TOTALCST
            GOTO      KAMTA950
          ENDIF
.
          IF        SIQCECT<-1
            CLEAR     DISPMSG
            APPEND    "Invalid Amount - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KAMTA000
          ENDIF
.
          IF        SIQCECT=-1
            MOVE      "To Be Advised    ",DEXPCST
            MOVE      ZERO,SIQCGSTA
            MOVE      ZERO,TOTALGST
            MOVE      ZERO,TOTALCST
          ELSE
            CALL      CALTAX00
            MOVE      ZERO,F12P4
            ASSIGN    SIQCGSTA*SIQCPQT,F12P4
            MOVE      F12P4,TOTALGST
            MOVE      ZERO,F12P4
            ASSIGN    SIQCECT*SIQCPQT,F12P4
            MOVE      F12P4,TOTALCST
          ENDIF
.
KAMTA900  MOVE      ZERO,EXIT
          GOTO      KAMTA999
.
KAMTA950  MOVE      ONE,EXIT
          GOTO      KAMTA999
.
KAMTA970  MOVE      TWO,EXIT
.
KAMTA999  MOVE      ZERO,ACCEPT
          RETURN
.
CALTAX00  COMPARE   ZERO,SIQCECT
          GOTO      CALTAX90 IF EQUAL
.
          MATCH     SP6,SIQCGST
          GOTO      CALTAX90 IF EQUAL
.
          PACK      KEY8,CCC,CYY,CMM,CDD,SP70
          REP       " 0",KEY8
.
          PACK      KEY14,SIQCGST,KEY8,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      CALTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,CALTAX90
.
          MATCH     SIQCGST,IBGECODE
          GOTO      CALTAX90 IF NOT EQUAL
.
CALTAX10  ASSIGN    (SIQCECT-(SIQCECT/(ONE+(IBGEAMNT/HUNDRED)))),SIQCGSTA
          GOTO      CALTAX99
.
CALTAX90  MOVE      ZERO,SIQCGSTA
.
CALTAX99  RETURN
.********************************************************************
. IGNOR - stop inputting
.********************************************************************
IGNOR000
          PACK      KEY13,SIQCCST,SIQCRID,SP70
          CALL      RASIQA1
          IF        OVRCD=0
            CALL      UUSIQA1
          ENDIF
.
IGNOR999  RETURN
.********************************************************************
. CANCL - Cancel record
. Returns EXIT : 1=no cancellation
.********************************************************************
CANCL000  PACK      KEY13,SIQCCST,SIQCRID,SP70
          CALL      RDSIQA1
          IF        OVRCD=1
            CLEAR     DISPMSG
            APPEND    "Someone else has already updated this req. - ",DISPMSG
            CALL      MESSAGE1
            GOTO      CANCL900
          ENDIF
.
.---- check if ok to cancel ----
.
          MOVE      "Ok to Cancel This Item ? ",DISPMSG
          CALL      MESSAGE4
          BRANCH    EXIT,CANCL950
.
.---- enter cancellation reason ----
.
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
          KEYIN     *P1:24,"Enter Reason For Cancellation : ":
                    *MASK,*V2LON,SIQCCAN;
          CALL      MESSAGE3
          PACK      SIQCCAN,SIQCCAN,SP70
.
.---- cancel data ----
.
          MOVE      SIQACAT,SIQCCAT
          MOVE      SIQAUNT,SIQCUNT
          MOVE      SIQAPD,SIQCPD
          MOVE      SIQAPN,SIQCPN
          MOVE      SIQAQTY,SIQCQTY
          MOVE      SIQASTA,SIQCSTA
          MOVE      SIQAUID,SIQCUID
          MOVE      SIQADAT,SIQCDAT
          MOVE      SIQATIM,SIQCTIM
          MOVE      SIQAPOR,SIQCPOR
          PACK      SIQCPID,PASSCODE,SP70
          PACK      SIQCPDT,CCC,CYY,CMM,CDD,SP70
          REP       " 0",SIQCPDT
          CLOCK     TIME,SIQCPTM
          PACK      SIQCPPO,PORT,SP70
          MOVE      SP70,SIQCORI
          MOVE      "3",SIQCPTY
          MOVE      ZERO,SIQCPQT
          MOVE      ZERO,SIQCECT
          MOVE      ZERO,SIQCGSTA
          MOVE      SP70,SIQCORD
          MOVE      SP70,SIQCREQ
          MOVE      SP70,SIQCEDT
          MOVE      SP70,SIQCSUP
          MOVE      SP70,SIQCSUT
          MOVE      SP70,SIQCPGP
          MOVE      SP70,SIQCGST
          MOVE      SP70,SIQCCON
          MOVE      SP70,SIQCCDT
          MOVE      SP70,SIQCSPA
.
          CALL      DESIQC1       * Update current record
          CALL      WRSIQC1
          CALL      DESIQA1
.
CANCL900  MOVE      ZERO,EXIT
          GOTO      CANCL999
.
CANCL950  MOVE      ONE,EXIT
.
CANCL999  RETURN
.------------------------------------------------------------
. Enter GST Code
.------------------------------------------------------------
EGSTC000  PACK     KEY7,SIQCCAT,SP70
          CALL     RDSIIA1
          IF       OVRCD=0
            MOVE     SIIAGST,SIQCGST
            IF       ACCEPT=0
              BEEP
              MOVE     "Item is Cataloged. GST Code Cannot Change. - ",DISPMSG
              CALL     MESSAGE1
            ENDIF
            GOTO     EGSTC900
          ELSE
              MOVE     SP70,SIQCGST
          ENDIF
.
          MOVE     SP70,SIQCGST
          MOVE     ZERO,CKEYTYP
          CALL     KIBGSA00
          BRANCH   EXIT,EGSTC900,EGSTC950
          MOVE     IBGSCODE,SIQCGST
.
EGSTC900  PACK     KEY6,SIQCGST,SP70
          CALL     RDIBGS1
.
          CALL      CALTAX00
          MOVE      ZERO,F12P4
          ASSIGN    SIQCGSTA*SIQCPQT,F12P4
          MOVE      F12P4,TOTALGST
          MOVE      ZERO,F12P4
          ASSIGN    SIQCECT*SIQCPQT,F12P4
          MOVE      F12P4,TOTALCST
.
          MOVE      "   27",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SIQCGSTA,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     TOTALGST,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     TOTALCST,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      EGSTC980
.
EGSTC950  MOVE      TWO,EXIT
          GOTO      EGSTC999
.
EGSTC980  MOVE      "   25",FLDID
          CALL      GETPOSIT
.
EGSTC999  RETURN
.
.----------------------------------------------------------------------
. Set Screen 02
.----------------------------------------------------------------------
SETSCR02  MOVE      ONE,ACCEPT
          PACK      SIPADIN,CCC,CYY,CMM,CDD,SP70
          REP       " 0",SIPADIN
          RETURN
.----------------------------------------------------------------------
. Keyin SIOR
.----------------------------------------------------------------------
KSIOR000
          CALL      KSIORA00                     * keyin SIOR
          BRANCH    EXIT,KSIOR000,KSIOR950
.
          MOVE      SIORORIG,SIPAORI
          CALL      SDEF0000                     * set defaults
.
          MOVE      ONE,ACCEPT
          MOVE      ZERO,EXIT
          GOTO      KSIOR999
.
KSIOR950  MOVE      TWO,EXIT
.
KSIOR999  RETURN
.----------------------------------------------------------------------
. Set up defaults
.----------------------------------------------------------------------
SDEF0000
          MOVE      SP70,SIPAICN
          MOVE      SIPAORI,KEY3
          CALL      RDSIOR1
          IF        OVRCD=0
            MOVE      SIORHOSP,SIPAICN
          ENDIF
.
          IF        ACCEPT=1
            MOVE      SP70,SIPACON
            MOVE      SP70,CONFDESC
            MOVE      SP70,SIPAIDP
            MOVE      SP70,SIPAUR1
            MOVE      SP70,SIPAUR2
            MOVE      SP70,SIPAUD1
            MOVE      SP70,SIPAUD2
            MOVE      SP70,SIPAUC1
            MOVE      SP70,SIPAUC2
            MOVE      SP70,SIPAUY1
            MOVE      SP70,SIPAUY2
            MOVE      SP70,SIPADPR
            MOVE      SP70,SIPADCM
            MOVE      SP70,SIPADCN
          ENDIF
.
          READ      CONTROLF,TWENTY5;HADEL1,HADEL2,HADEL3,HADEL4:
                                     HADEL5,HADEL6,HADEL7,HADEL8
          MOVE      SIORDEL,F1
          LOAD      SIPADEL,F1,HADEL1,HADEL2,HADEL3,HADEL4:
                               HADEL5,HADEL6,HADEL7,HADEL8
.
          MOVE      SIORMESS,SIPAMES
          MOVE      SIORCON,SIPACON
          MOVE      SP70,MESSDESC
          MOVE      SP70,CONFDESC
.
          MATCH     SP70,SIPAMES
          IF        !(@EQUAL)
            MOVE      "ME ",SICDCATA
            PACK      KEY6,SICDCATA,SIPAMES,SP70
            CALL      RDSICD1
            IF        OVRCD=0
              MOVE      SICDDESC,MESSDESC
            ENDIF
          ENDIF
.
          MATCH     SP70,SIPACON
          IF        !(@EQUAL)
            MOVE      "CF ",SICDCATA
            PACK      KEY6,SICDCATA,SIPACON,SP70
            CALL      RDSICD1
            IF        OVRCD=0
              MOVE      SICDDESC,CONFDESC
            ENDIF
          ENDIF
.
SDEF9999  RETURN
.----------------------------------------------------------------------
. Keyin ICON
.----------------------------------------------------------------------
KICON000
          IF        ACCEPT=1
            GOTO      KICON999         * kick out if in accept mode
          ENDIF
.
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,SIPAICN
          PACK      SIPAICN,SIPAICN,SP70
.
          MATCH     EXITCHAR,SIPAICN   * exitchar entered ?
          GOTO      KICON970 IF EQUAL
.
          MATCH     SP70,SIPAICN       * nothing entered ?
          GOTO      KICON950 IF EQUAL
.
KICON900  MOVE      ZERO,EXIT
          GOTO      KICON999
.
KICON950  MOVE      ONE,EXIT
          GOTO      KICON999
.
KICON970  MOVE      TWO,EXIT
.
KICON999  RETURN
.
EDELP000
          IF        ACCEPT=1
            GOTO      EDELP999
          ENDIF
.
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,SIPADEL:
                    *PCCOL:CVERT
          ENDSET    SIPADEL
          APPEND    SP70,SIPADEL
          RESET     SIPADEL
          CMATCH    EXITCHAR,SIPADEL
          IF        @EQUAL
            MOVE      TWO,EXIT
            GOTO      EDELP999
          ENDIF
          MOVE      SIPADEL,ANS
          MOVE      ZERO,F1
          MOVE      ANS,F1
          BRANCH    F1,EDELP100,EDELP100,EDELP100,EDELP100:
                       EDELP100,EDELP100,EDELP100,EDELP100
          GOTO      EDELP999
.
EDELP100  LOAD      SIPADEL,F1,HADEL1,HADEL2,HADEL3,HADEL4:
                    HADEL5,HADEL6,HADEL7,HADEL8
.
EDELP999  RETURN
.----------------------------------------------
. Enter Message Code
.----------------------------------------------
EMESS000
          IF          ACCEPT=1
            GOTO        EMESS900
          ENDIF
.
          MOVE        ZERO,CKEYTYP
          MOVE        "ME ",SICDCATA
          CALL        KSICDB00
          BRANCH      EXIT,EMESS900,EMESS999
.
          MOVE        SICDCODE,SIPAMES
.
EMESS900
          MOVE      SP70,MESSDESC
          MATCH     SP70,SIPAMES
          IF        !(@EQUAL)
            MOVE      "ME ",SICDCATA
            PACK      KEY6,SICDCATA,SIPAMES,SP70
            CALL      RDSICD1
            IF        OVRCD=0
              MOVE      SICDDESC,MESSDESC
            ENDIF
          ENDIF
.
EMESS999  RETURN
.
EORDD000  UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      SIPADIN,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SIPADIN
          MOVE      SIPADIN,SIPEDATE
          CALL      RSIPE000   * Get Period End Date
          IF        OVRCD=1
            MOVE      "Period Not on File. Invalid Date - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      EORDD000
          ENDIF
          IF        SIPELOC=1
            MOVE      "Period Locked. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      EORDD000
          ENDIF
.
          MATCH     SIPEYEAR,SIPECYR
          IF        !(@EQUAL)
            MOVE      "WARNING : Period Not in Current Year. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
          ENDIF
.
EORDD999  RETURN
.----------------------------------------------------------------------
. Keyin IDEL
.----------------------------------------------------------------------
KIDPT000
          IF        ACCEPT=1
            GOTO      KIDPT999         * kick out if in accept mode
          ENDIF
.
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,SIPAIDP
          PACK      SIPAIDP,SIPAIDP,SP70
.
          MATCH     EXITCHAR,SIPAIDP   * exitchar entered ?
          GOTO      KIDPT970 IF EQUAL
.
          MATCH     SP70,SIPAIDP       * nothing entered ?
          GOTO      KIDPT950 IF EQUAL
.
KIDPT900  MOVE      ZERO,EXIT
          GOTO      KIDPT999
.
KIDPT950  MOVE      ONE,EXIT
          GOTO      KIDPT999
.
KIDPT970  MOVE      TWO,EXIT
.
KIDPT999  RETURN
.----------------------------------------------
. Enter Confirmation Code
.----------------------------------------------
ECONF000  IF          ACCEPT=1
            GOTO        ECONF900
          ENDIF
.
          MOVE        ZERO,CKEYTYP
          MOVE        "CF ",SICDCATA
          CALL        KSICDB00
          BRANCH      EXIT,ECONF900,ECONF999
.
          MOVE        SICDCODE,SIPACON
.
ECONF900
          MOVE      SP70,CONFDESC
          MATCH     SP70,SIPACON
          IF        !(@EQUAL)
            MOVE      "CF ",SICDCATA
            PACK      KEY6,SICDCATA,SIPACON,SP70
            CALL      RDSICD1
            IF        OVRCD=0
              MOVE      SICDDESC,CONFDESC
            ENDIF
          ENDIF
.
ECONF999  RETURN
.
EWARE000  MOVE      ZERO,CKEYTYP
          CALL      KSIWSA00
          MOVE      SIWAWAR,DEFTWARE
          BRANCH    EXIT,EWARE000,EWARE900
.
          MOVE      ZERO,F7
          MOVE      SIWANPO,F7
          COMPARE   ZERO,F7
          IF        @EQUAL
            BEEP
            MOVE      "Warehouse May Not Have Purchase Orders. - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EWARE000
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      EWARE999
.
EWARE900  MOVE      TWO,EXIT
.
EWARE999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSCEAIO/INC
          INC       APSCEBIO/INC
          INC       APSCIOIO/INC
          INC       APSCKIKY    
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       APSORDIO/INC
          INC       APSSNTIO/INC
          INC       APSSUBIO/INC
          INC       FMSAMAIO/INC
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSFPSIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSTUPIO/INC
          INC       IBAGEDIO/INC
          INC       IBAGKIKY    
          INC       IBAGSTIO/INC
          INC       IBAGSTKY    
          INC       SINCCAIO/INC
          INC       SINCCAKY    
          INC       SINCGAIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCIAKY    
          INC       SINCICIO/INC
          INC       SINCIEIO/INC
          INC       SINCIFIO/INC
          INC       SINCIHIO/INC
          INC       SINCODIO/INC
          INC       SINCODKY    
          INC       SINFACIO/INC
          INC       SINFACKY    
          INC       SINITMIO/INC
          INC       SINLTTIO/INC
          INC       SINNATIO/INC
          INC       SINOQAIO/INC
          INC       SINOQBIO/INC
          INC       SINOQCIO/INC
          INC       SINORDUS    
          INC       SINORIIO/INC
          INC       SINORIKY    
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPODIO/INC
          INC       SINPONCD    
          INC       SINRCPIO/INC
          INC       SINRCPKY    
          INC       SINSCDIO/INC
          INC       SINSCMIO/INC
          INC       SINSUAIO/INC
          INC       SINSUAKY    
          INC       SINSUBIO/INC
          INC       SINWARIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
