.******************************************************************************
.*                                                                            *
.* System         : Accident and Emergency                                    *
.*                                                                            *
.* Include Name   : KYAAEDET.PBL                                              *
.*                                                                            *
.* Function       : To keyin the A&E details.                                 *
.*                  This routine has the main branch statement, so when an A&E*
.*                  field is to be entered, just call kyaaedet and the item   *
.*                  will be entered.                                          *
.*                : also contains MYAAEDET which loads up the variable DIM80  *
.*                  for the routine 'spck0000' for mandatory fields check     *
.*                : also contains CLAAEDET which clears all keyin variables   *
.*                                                                            *
.* NOTE: this has the variable PTYPE in the variable list as AAE01 keys this  *
.*       in so it had to be added to the keyins here.                         *
.*                                                                            *
.* Author         : Justin Coates      29/10/1992                             *
.*                                                                            *
.* Modifications  :                                                           *
.*       V12.00.01  28/05/2025  Bella Turco        TSK 0955096                *
.*                  Alphanumeric changes                                      *
.*        v5.07.00  12/07/1999  Steve Downing                                 *
.*                  Replaced wait duration calculations with TIMEDIFF call    *
.*----------------------------------------------------------------------------*
.*        V5.06.01  31/07/1998  Greg Horvat      98/99 PRS2 Mods              *
.*                  Added AUTOPCOD - Automatic generation of the postcode     *
.*----------------------------------------------------------------------------*
.*        V5.04.03  24/05/1995  Paul Howells                                  *
.*                  added adanumb                                             *
.*        V5.04.02  23/08/1996  Howellsy            SRF 641980                *
.*                  Don't default current century for exemption type.         *
.*        V5.04.01  16/07/1996   Whirlpool     Srf 641713                     *
.*                  Added default of previous visit (Cat EP) if Follow up     * 
.*        V5.04.00  20/06/1996    Howellsy     SRF 641576                     *
.*                  Default Exemption Type when in change mode.               * 
.*----------------------------------------------------------------------------*
.*        V5.02.00  27/09/1994    Rob Leonard  SRF 120024 (Bul23)             *
.*                  Default Claim Code from most Previous Visit               * 
.*                  12/10/1994    Rob Leonard   SRF 128598                    *
.*                  Recalc duration time (ADADURN) if date/time fields change *
.*        V5.02.01  11/12/1994  Graeme Williams                               *
.*                  Allow for up to five priority codes                       *
.*        V5.02.02  23/03/1995  Graeme Williams  SRF 135688                   *
.*                  Recompiled for changes to PATFNDKY - blank HF's are now   *
.*                  distinguished from no HF entered.                         *
.*        V5.02.03  16/05/1995  Paul Howells         SRF 134950               *
.*                  Changed Priority Code to a hospital controlled code       *
.******************************************************************************
KYAAEDET  MOVE      SCPSITM,FIELDNO
          MOVE      SCPSROW,EVERT
          MOVE      SCPSCOL,ECOL
          MOVE      SCPSROW,CVERT
          MOVE      SCPSCOL,CCOL
          MOVE      SCPSMAN,CKYIMAND
          SFORMAT   KEYFIELD,127
          MOVE      ZERO,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          MOVE      ZERO,EXIT
          BRANCH    FIELDNO,KAEDT001,KAEDT002,KAEDT003,KAEDT999,KAEDT005:
                            KAEDT999,KAEDT007,KAEDT999,KAEDT009,KAEDT999:  10
                            KAEDT011,KAEDT999,KAEDT013,KAEDT999,KAEDT015:
                            KAEDT999,KAEDT017,KAEDT018,KAEDT019,KAEDT020:  20
                            KAEDT999,KAEDT022,KAEDT999,KAEDT024,KAEDT999:
                            KAEDT026,KAEDT999,KAEDT028,KAEDT999,KAEDT030:  30
                            KAEDT031,KAEDT032,KAEDT999,KAEDT034,KAEDT999:
                            KAEDT036,KAEDT999,KAEDT038,KAEDT999,KAEDT040:  40
                            KAEDT999,KAEDT042,KAEDT043,KAEDT044,KAEDT999:
                            KAEDT046,KAEDT047,KAEDT999,KAEDT049,KAEDT999:  50
                            KAEDT051,KAEDT999,KAEDT053,KAEDT054,KAEDT055:
                            KAEDT056,KAEDT057,KAEDT999,KAEDT059,KAEDT999:  60
                            KAEDT061,KAEDT999,KAEDT999,KAEDT064,KAEDT065:
                            KAEDT999,KAEDT067,KAEDT068,KAEDT069,KAEDT999:
                            KAEDT999,KAEDT999,KAEDT999
          BEEP
          GOTO      KAEDT999
.
KAEDT001  CALL      KAVDAT00                * arrival date
          GOTO      KAEDT999
.
KAEDT002  CALL      KAVTIM00                * arrival time
          GOTO      KAEDT999
.
KAEDT003  CALL      KCOMPL00                * compensation code
          GOTO      KAEDT999
.
KAEDT005  CALL      KPCDPT00                * patient class/department
          GOTO      KAEDT999
.
KAEDT007  CALL      KSPFLD00                * insurance/special field 
          GOTO      KAEDT999
.
KAEDT009  CALL      KSRCER00                * source of referral ield 
          GOTO      KAEDT999
.
KAEDT011  CALL      KSITTN00                * situation
          GOTO      KAEDT999
.
KAEDT013  CALL      KMODAR00                * mode of arrival
          GOTO      KAEDT999
.
KAEDT015  CALL      KATTDC00                * attending doctor
          GOTO      KAEDT999
.
KAEDT017  CALL      KDSEEN00                * date seen
          GOTO      KAEDT999
.
KAEDT018  CALL      KTSEEN00                * time seen
          GOTO      KAEDT999
.
KAEDT019  CALL      KADHOS00                * admitted to hospital
          GOTO      KAEDT999
.
KAEDT020  CALL      KUSDFA00                * UD field 1
          GOTO      KAEDT999
.
KAEDT022  CALL      KUSDFB00                * UD field 2
          GOTO      KAEDT999
.
KAEDT024  CALL      KUSDFC00                * UD field 3
          GOTO      KAEDT999
.
KAEDT026  CALL      KUSDFD00                * UD field 4
          GOTO      KAEDT999
.
KAEDT028  CALL      KUSDFE00                * UD field 5
          GOTO      KAEDT999
.
KAEDT030  CALL      KAEDIA00                * diagnosis
          GOTO      KAEDT999
.
KAEDT031  CALL      KPRITY00                * priority
          GOTO      KAEDT999
.
KAEDT032  CALL      KCMPLT00                * completion code
          GOTO      KAEDT999
.
KAEDT034  CALL      KPRVAE00                * previous A&E
          GOTO      KAEDT999
.
KAEDT036  CALL      KHFUND00                * health fund
          GOTO      KAEDT999
.
KAEDT038  CALL      KHTBLE00                * health fund table
          GOTO      KAEDT999
.
KAEDT040  CALL      KPRVIS00                * previous visits
          GOTO      KAEDT999
.
KAEDT042  CALL      KCARDN00                * card number
          GOTO      KAEDT999
.
KAEDT043  CALL      KEXPDT00                * card expiry date
          GOTO      KAEDT999
.
KAEDT044  CALL      KEXEMP00                * exemption code
          GOTO      KAEDT999
.
KAEDT046  CALL      KFAMID00                * family id
          GOTO      KAEDT999
.
KAEDT047  CALL      KPATTP00                * patient type
          GOTO      KAEDT999
.
KAEDT049  CALL      KREFGP00                * referring GP
          GOTO      KAEDT999
.
KAEDT051  CALL      KGPCOD00                * GP practice code
          GOTO      KAEDT999
.
KAEDT053  CALL      KTIMIA00                * time of initial assessment
          GOTO      KAEDT999
.
KAEDT054  CALL      KDECAT00                * decision to admit time
          GOTO      KAEDT999
.
KAEDT055  CALL      KITIME00                * time since incident
          GOTO      KAEDT999
.
KAEDT056  CALL      KEMPLR00                * employer
          GOTO      KAEDT999
.
KAEDT057  CALL      KRTASD00                * RTA seatbelt details
          GOTO      KAEDT999
.
KAEDT059  CALL      KINITI00                * Initiator
          GOTO      KAEDT999
.
KAEDT061  CALL      KPLACE00                * Place of Incident
          GOTO      KAEDT999
.
KAEDT064  CALL      KDOIAS00                * Date of Initial Assessment
          GOTO      KAEDT999
.
KAEDT065  CALL      KACONS00                * Consultant on Take
          GOTO      KAEDT999
.
KAEDT067  CALL      KGPNPR00                * GP code - no practice
          GOTO      KAEDT999
.
KAEDT068  CALL      KPRTRT00                * Triage / Priority Time
          GOTO      KAEDT999
.
KAEDT069  CALL      KARDOC00                * Referred Doctor    
          GOTO      KAEDT999
.
KAEDT999  RETURN
+
.*********************************************************************
.         clear the AAEDE1FD/AAEDE1FD variables
.*********************************************************************
CLAAEDET  MOVE      ZEROVISN,SADANUMB           * must clear Save variables
          MOVE      SP30,SADATIME
          MOVE      SP30,SADADATE
          MOVE      ZERO,SADAURNO
          MOVE      SP30,SADADOCT
          MOVE      SP3,SADAPRTY
.
          MOVE      SP8,ADADATE
          MOVE      SP8,ADATIME
          MOVE      SP3,ADACOMP
          MOVE      SP1,CLIND
          MOVE      SP3,ADACLASS
          MOVE      SP3,ADASRC
          MOVE      SP3,ADAINSUR
          MOVE      SP3,ADASIT
          MOVE      SP3,ADAMODE
          MOVE      SP1,ADAFILL
          MOVE      SP3,ADAPREV
          MOVE      SP6,ADADOCT
          MOVE      SP5,ADASEEN
          MOVE      ZERO,ADAADMIT
          MOVE      SP2,ADALOCK
          MOVE      SP30,ADAEMPL
          PACK      ADAADD1,SP30,SP10
          PACK      ADAADD2,SP30,SP10
          PACK      ADASUBR,SP30,SP10
          PACK      ADAADD4,SP30,SP10
          MOVE      SP30,ADAPOST
          MOVE      SP30,ADATELE
          MOVE      SP30,ADACONT
.
          MOVE      SP3,ADAUSR1
          MOVE      SP3,ADAUSR2
          MOVE      SP3,ADAUSR3
          MOVE      SP3,ADAUSR4
          MOVE      SP3,ADAUSR5
          PACK      ADADIAG WITH SP30,SP30
          MOVE      SP3,ADAPRTY
          MOVE      SP5,ADAWAIT
          MOVE      SP8,ADASDTE
.
          MOVE      SP30,AEDARFGP
          UNPACK    SP30,AEDAGPPC,AEDAGPPT
          MOVE      ZERO,AEDANPNA 
          MOVE      SP30,AEDATIAS
          MOVE      SP30,AEDADTAT
          MOVE      SP30,AEDATESI
          MOVE      SP30,AEDAEMPL
          MOVE      SP30,AEDARTAS
          MOVE      SP30,AEDAINIT
          MOVE      SP30,AEDAPLIN
          MOVE      SP30,AEDADIAS
          MOVE      ZEROUR,AEDARNEN
          MOVE      SP6,AEDACONS
          PACK      AEDASPAR,SP30,SP30,SP30
          MOVE      SP5,AEDAPRTM    
          MOVE      SP5,AEDARDOC    
          RETURN
+
.*********************************************************************
.                   MYAAEDET                    Called by : SPCK0000 
.         load DIM80 with the required variable
.         Para's  : FORM5         the variable number
.         Returns : DIM80         the string to check
.*********************************************************************
MYAAEDET  LOAD      DIM80,FORM5,ADADATE,ADATIME,ADACOMP,ANSA,ADACLASS:
                                ANSA,ADAINSUR,ANSA,ADASRC,ANSA:            10
                                ADASIT,ANSA,ADAMODE,ANSA,ADADOCT:
                                ANSA,ADASDTE,ADASEEN,ADAADMIT,ADAUSR1:     20
                                ANSA,ADAUSR2,ANSA,ADAUSR3,ANSA:
                                ADAUSR4,ANSA,ADAUSR5,ANSA,ADADIAG:         30
                                ADAFIL2,ADAWAIT,ANSA,ADAPREV,ANSA:
                                AEDAFUND,ANSA,AEDATBLE,ANSA,AEDAPVIS:      40
                                ANSA,PTVKCARD,PTVKCEXP,PTVKCXMP,ANSA:
                                PTVKFMLY,PTYPE,ANSA,AEDARFGP,ANSA:         50
                                AEDAGPPC,ANSA,AEDATIAS,AEDADTAT,AEDATESI:
                                AEDAEMPL,AEDARTAS,ANSA,AEDAINIT,ANSA:      60
                                AEDAPLIN,ANSA,ANSA,AEDADIAS,AEDACONS:
                                ANSA,AEDARFGP,AEDAPRTM,AEDARDOC,ADAPRTY:
                                ANSA,ANSA,ANSA                             70
          RETURN
+
.*********************************************************************
.         visit date
.*********************************************************************
KAVDAT00  MOVE      "Arrival Date         ",AUDESC
          PACK      AUCONBEF,ADADATE,SP30,SP30
          OPEN      CONTROLF,"controlf"
          CALL      IBACLOCK
.
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
.
. ------- default current date
.
KAVDAT10  UNPACK    TODAY,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,KAVDAT10
.
          PACK      ADADATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ADADATE
          MATCH     ADADATE,TODAY
          GOTO      KAVDAT95 IF NOT LESS    * current date is >= visit date
.
          DISPLAY   *P1:24,*B,"Arrival Date can't be in the future.  ",*EL;
          CALL      HITENTER
          GOTO      KAVDAT10
.
KAVDAT95  PACK      AUCONAFT,ADADATE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      UPDURT00                * update duration of wait time
.
KAVDAT99  RETURN
+
.*********************************************************************
.         arrival time
.*********************************************************************
KAVTIM00  MOVE      "Arrival Time         ",AUDESC
          PACK      AUCONBEF,ADATIME,SP30,SP30
          OPEN      CONTROLF,"controlf"
          CALL      IBACLOCK
.
KAVTIM10  UNPACK    CTIMEIS,CHOUR,ANS,CMIN
          CALL      KEYTIME
          BRANCH    OVRCD,KAVTIM10
.
          PACK      ADATIME,CHOUR,COLON,CMIN
          REP       " 0",ADATIME
.
          MATCH     ADADATE,TODAY
          GOTO      KAVTIM95 IF NOT EQUAL   * didn't arrive on curr. date
.
          CLOCK     TIME,KEY5
          MATCH     ADATIME,KEY5
          GOTO      KAVTIM95 IF NOT LESS    * arrival time <= current time
.
          DISPLAY   *P1:24,*EL,*B,"Arrival Time cannot be in the future.  ";
          CALL      HITENTER
          CLOCK     TIME,ADATIME
          GOTO      KAVTIM10
.
KAVTIM95  PACK      AUCONAFT,ADATIME,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      UPDURT00                * update duration of wait time
.
KAVTIM99  RETURN
+
.*********************************************************************
.         compensation code
.*********************************************************************
KCOMPL00  COMPARE   PTCNDFCL,ONE                 * default claim code ?
          GOTO      KCOMPL20 IF NOT EQUAL
.
          MATCH     MODE,ANSCA                   * change mode ? 
          GOTO      KCOMPL20 IF EQUAL            
.
          OPEN      PATVISA2,"patvisaf"
          PACK      KEY24,ADAURNO,Z30            * get last AAE visit
          CALL      RDSVISA2
KCOMPL10  CALL      RDPVISA2
          BRANCH    OVRCD,KCOMPL20
          MATCH     PVIURNO,ADAURNO
          GOTO      KCOMPL20 IF NOT EQUAL  
          COMPARE   PVITYPE,ONE
          GOTO      KCOMPL10 IF NOT EQUAL
          PACK      KEY8,PVIBILL
          CALL      RDDETAC1                     * read claim code
.
KCOMPL20  MOVE      CODECL,CODE                  * category
          MOVE      ADACOMP,CKYIDEF3
          PACK      KEY5,CODECL,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KCOMPL95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADACOMP
          PACK      VAR,ACODE,SP70,SP10
          CALL      DISPITEM                * Display code
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
.
. if the compenstion code is not an 'exemption type', must clear the
. exemption code/desc if they are on the screen
.
          MATCH     ANSE,TCINDC1
          IF        !@EQUAL
            MOVE      SP3,PTVKCXMP            * clear exemption code/desc
            MOVE      "   44",KEY5
            CALL      SCRCKFLD
            IF        EXIT = ZERO      
              PACK      VAR,SP70,SP10
              CALL      DISPITEM
            ENDIF
            MOVE      "   45",KEY5
            CALL      SCRCKFLD
            IF        EXIT = ZERO      
              PACK      VAR,SP70,SP10
              CALL      DISPITEM
            ENDIF
          ENDIF
.
          MOVE      "    4",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KCOMPL90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KCOMPL90  MOVE      ZERO,EXIT 
          GOTO      KCOMPL99
.
KCOMPL95  MOVE      ONE,EXIT                * EXITCHAR
KCOMPL99  RETURN
+
.*********************************************************************
.         patient classification/deparment
.*********************************************************************
KPCDPT00  MOVE      CODEA,CODE
          MOVE      ADACLASS,CKYIDEF3
          PACK      KEY5,CODEA,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KPCDPT95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADACLASS
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "    6",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KPCDPT90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KPCDPT90  MOVE      ZERO,EXIT 
          GOTO      KPCDPT99
.
KPCDPT95  MOVE      ONE,EXIT                * EXITCHAR
KPCDPT99  RETURN
+
.*********************************************************************
.         special field 1
.*********************************************************************
KSPFLD00  MOVE      CODEU1,CODE
          MOVE      ADAINSUR,CKYIDEF3
          PACK      KEY5,CODEU1,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KSPFLD95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADAINSUR
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "    8",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KSPFLD90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KSPFLD90  MOVE      ZERO,EXIT 
          GOTO      KSPFLD99
.
KSPFLD95  MOVE      ONE,EXIT                * EXITCHAR
KSPFLD99  RETURN
+
.*********************************************************************
.         source of referral
.*********************************************************************
KSRCER00  MOVE      CODES,CODE
          MOVE      ADASRC,CKYIDEF3
          PACK      KEY5,CODES,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KSRCER95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADASRC
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "   10",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KSRCER90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KSRCER90  MOVE      ZERO,EXIT 
          GOTO      KSRCER99
.
KSRCER95  MOVE      ONE,EXIT                * EXITCHAR
KSRCER99  RETURN
+
.*********************************************************************
.         situation
.*********************************************************************
KSITTN00  MOVE      CODEES,CODE
          MOVE      ADASIT,CKYIDEF3
          PACK      KEY5,CODEES,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KSITTN95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADASIT
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "   12",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KSITTN90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KSITTN90  MOVE      ZERO,EXIT 
          GOTO      KSITTN99
.
KSITTN95  MOVE      ONE,EXIT                * EXITCHAR
KSITTN99  RETURN
+
.*********************************************************************
.         mode of arrival
.*********************************************************************
KMODAR00  MOVE      CODEEA,CODE
          MOVE      ADAMODE,CKYIDEF3
          PACK      KEY5,CODEEA,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KMODAR95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADAMODE
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "   14",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KMODAR90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KMODAR90  MOVE      ZERO,EXIT 
          GOTO      KMODAR99
.
KMODAR95  MOVE      ONE,EXIT                * EXITCHAR
KMODAR99  RETURN
+
.*********************************************************************
.         doctor actually seen - only A&E specialty doctors
.*********************************************************************
KATTDC00  MOVE      ADADOCT,CKYIDEF6
          MOVE      "Attending Doctor     ",AUDESC
          PACK      AUCONBEF,CKYIDEF6,SP30,SP30
          CALL      KYNAEDOC
          COMPARE   TWO,EXIT
          GOTO      KATTDC95 IF EQUAL       * exitchar
.
          MOVE      DCODE,ADADOCT
          PACK      VAR,ADADOCT,SP70,SP10
          CALL      DISPVARS
          PACK      AUCONAFT,ADADOCT,SP30,SP30
          CALL      AUDIT000                * do the audit write
.
          MOVE      "   16",KEY5
          CALL      SCRCKFLD
          BRANCH    EXIT,KATTDC90           * desc not on screen
          MOVE      ADADOCT,KEY6
          CALL      DXPATDOC                * display desc
.
KATTDC90  MOVE      ZERO,EXIT
          GOTO      KATTDC99
.
KATTDC95  MOVE      ONE,EXIT
KATTDC99  RETURN
+
.*********************************************************************
.         date seen
.*********************************************************************
KDSEEN00  MOVE      "Date Seen            ",AUDESC
          PACK      AUCONBEF,ADASDTE,SP30,SP30
          OPEN      CONTROLF,"controlf"
          CALL      IBACLOCK
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
.
KDSEEN10  UNPACK    ADASDTE,CCENT,CYEAR,CMON,CDAY
          MATCH     SP2,CCENT
          IF        @EQUAL
            MOVE      CCC,CCENT
          ENDIF
          MOVE      SP8,ADASDTE
          CALL      KEYDATE
          BRANCH    OVRCD,KDSEEN95
.
          PACK      ADASDTE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ADASDTE
.
          MATCH     ADADATE,ADASDTE
          GOTO      KDSEEN90 IF LESS        * seen date < arrival date
.
          MATCH     ADASDTE,TODAY
          GOTO      KDSEEN95 IF NOT LESS    * current date is >= seen date
.
          DISPLAY   *P1:24,*EL,*B,"Date Seen cannot be in the future.  ";
          CALL      HITENTER
          MOVE      TODAY,ADASDTE
          GOTO      KDSEEN10
.
KDSEEN90  DISPLAY   *P1:24,*B,"Date Seen must be on or after Arrival Date.  ";
          CALL      HITENTER
          MOVE      TODAY,ADASDTE
          GOTO      KDSEEN10
.
KDSEEN95  PACK      AUCONAFT,ADASDTE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      UPDURT00                * update duration of wait time
.
KDSEEN99  RETURN
+
.*********************************************************************
.         time seen
.*********************************************************************
KTSEEN00  MOVE      "Time Seen            ",AUDESC
          PACK      AUCONBEF,ADASEEN,SP30,SP30
.
KTSEEN10  UNPACK    ADASEEN,CHOUR,ANS,CMIN
          MOVE      SP5,ADASEEN
          CALL      KEYTIME
          BRANCH    OVRCD,KTSEEN95
.
          PACK      ADASEEN,CHOUR,COLON,CMIN
          REP       " 0",ADATIME
.
. see if date seen = arrival date, if it is, check time seen >= arrival time
.
          MATCH     ADASDTE,ADADATE
          GOTO      KTSEEN20 IF NOT EQUAL   * arrival date <> date seen
.
          MATCH     ADATIME,ADASEEN
          GOTO      KTSEEN30 IF NOT LESS    * time seen >= arrival time
. 
          DISPLAY   *P1:24,*EL,*B,"Time Seen must be after Arrival Time.  ";
          CALL      HITENTER
          CLOCK     TIME,ADASEEN
          GOTO      KTSEEN10
.
. see if date seen = current date, if it is, check current time >= seen time
.
KTSEEN20  MATCH     ADASDTE,TODAY
          GOTO      KTSEEN95 IF NOT EQUAL   * date seen <> current date
.
KTSEEN30  CLOCK     TIME,KEY5
          MATCH     ADASEEN,KEY5
          GOTO      KTSEEN95 IF NOT LESS    * current time >= seen time
.
          DISPLAY   *P1:24,*EL,*B,"Time Seen must not be in the future.  ";
          CALL      HITENTER
          CLOCK     TIME,ADASEEN
          GOTO      KTSEEN10
.
KTSEEN95  PACK      AUCONAFT,ADASEEN,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      UPDURT00                * update duration of wait time
.
KTSEEN99  RETURN
+
.*********************************************************************
.         admitted to hospital
.*********************************************************************
KADHOS00  KEYIN     *PECOL:EVERT,"_  ",*PECOL:EVERT,*V2LON,ANS;
          REP       UPPLOW,ANS
          MOVE      ONE,ADAADMIT
          MATCH     ANSY,ANS
          GOTO      KADHOS80 IF EQUAL       * Yes
          MOVE      ZERO,ADAADMIT
          MATCH     ANSN,ANS
          GOTO      KADHOS80 IF EQUAL       * No
          BEEP
          GOTO      KADHOS00
.
KADHOS80  CALL      DISPITEM
KADHOS99  RETURN
+
.*********************************************************************
.         UD field 1
.*********************************************************************
KUSDFA00  MOVE      CODEA1,CODE
          MOVE      ADAUSR1,CKYIDEF3
          PACK      KEY5,CODEA1,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KUSDFA95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADAUSR1
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "   21",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KUSDFA90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KUSDFA90  MOVE      ZERO,EXIT 
          GOTO      KUSDFA99
.
KUSDFA95  MOVE      ONE,EXIT                * EXITCHAR
KUSDFA99  RETURN
+
.*********************************************************************
.         UD field 2
.*********************************************************************
KUSDFB00  MOVE      CODEA2,CODE
          MOVE      ADAUSR2,CKYIDEF3
          PACK      KEY5,CODEA2,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KUSDFB95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADAUSR2
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "   23",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KUSDFB90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KUSDFB90  MOVE      ZERO,EXIT 
          GOTO      KUSDFB99
.
KUSDFB95  MOVE      ONE,EXIT                * EXITCHAR
KUSDFB99  RETURN
+
.*********************************************************************
.         UD field 3
.*********************************************************************
KUSDFC00  MOVE      CODEA3,CODE
          MOVE      ADAUSR3,CKYIDEF3
          MOVE      AECNSQA3,SUPRSQST       * supress ? value
          PACK      KEY5,CODEA3,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      KCODNQST                * keyin a codes field suppress "?"
          COMPARE   TWO,EXIT
          GOTO      KUSDFC95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADAUSR3
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "   25",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KUSDFC90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KUSDFC90  MOVE      ZERO,EXIT 
          GOTO      KUSDFC99
.
KUSDFC95  MOVE      ONE,EXIT                * EXITCHAR
KUSDFC99  RETURN
+
.*********************************************************************
.         UD field 4
.*********************************************************************
KUSDFD00  MOVE      CODEA4,CODE
          MOVE      ADAUSR4,CKYIDEF3
          PACK      KEY5,CODEA4,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KUSDFD95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADAUSR4
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "   27",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KUSDFD90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KUSDFD90  MOVE      ZERO,EXIT 
          GOTO      KUSDFD99
.
KUSDFD95  MOVE      ONE,EXIT                * EXITCHAR
KUSDFD99  RETURN
+
.*********************************************************************
.         UD field 5
.*********************************************************************
KUSDFE00  MOVE      CODEA5,CODE
          MOVE      ADAUSR5,CKYIDEF3
          PACK      KEY5,CODEA5,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KUSDFE95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADAUSR5
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "   29",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KUSDFE90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KUSDFE90  MOVE      ZERO,EXIT 
          GOTO      KUSDFE99
.
KUSDFE95  MOVE      ONE,EXIT                * EXITCHAR
KUSDFE99  RETURN
+
.*********************************************************************
.         diagnosis
.*********************************************************************
KAEDIA00  PACK      KEYFIELD,ADADIAG,SP70,SP70
          MOVE      "Diagnosis            ",AUDESC
          PACK      AUCONBEF,ADADIAG,SP30,SP30
          CALL      KFREEF00
          PACK      ADADIAG,KEYFIELD,SP70,SP70
          PACK      AUCONAFT,ADADIAG,SP30,SP30
          CALL      AUDIT000                * do the audit write
KAEDIA99  RETURN
+
.*********************************************************************
.         priority
.*********************************************************************
KPRITY00  PACK      CODE,ANSA,ANSA
          MOVE      ADAPRTY,CKYIDEF3
          PACK      KEY5,ANSA,ANSA,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KPRITY95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADAPRTY
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "   41",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KPRITY90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KPRITY90  MOVE      ZERO,EXIT 
          GOTO      KPRITY99
.
KPRITY95  MOVE      ONE,EXIT                * EXITCHAR
KPRITY99  RETURN
+
.*********************************************************************
.         completion code
.*********************************************************************
KCMPLT00  MOVE      CODEEW,CODE
          MOVE      ADAWAIT,CKYIDEF3
          PACK      KEY5,CODEEW,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KCMPLT95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADAWAIT
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "   33",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KCMPLT90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KCMPLT90  MOVE      ZERO,EXIT 
          GOTO      KCMPLT99
.
KCMPLT95  MOVE      ONE,EXIT                * EXITCHAR
KCMPLT99  RETURN
+
.*********************************************************************
.         previous A&E
.*********************************************************************
KPRVAE00  MOVE      CODEEP,CODE
          MOVE      ADAPREV,CKYIDEF3
          IF        FOLLOWUP = 1 & ACCEPT = 1
            MOVE      AECNDPVI,CKYIDEF3
          ENDIF
          PACK      KEY5,CODEEP,SP3
          CALL      RDCODE1
          MOVE      TDESC,AUDESC
          PACK      AUCONBEF,CKYIDEF3,SP30,SP30
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT
          GOTO      KPRVAE95 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,ADAPREV
          PACK      VAR,ACODE,SP70,SP10
          PACK      AUCONAFT,ACODE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          CALL      DISPITEM                * Display code
          MOVE      "   35",KEY5
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KPRVAE50           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KPRVAE50  IF        AECNUNNA = 1
            MOVE      ADAPREV,CKYIDEF3        * set variable
            PROC      AAEEPEXT
            MOVE      CKYIDEF8,AEDARNEN       * set related new event number
            IF        EXIT = 0
              MOVE      CKYIDEF3,AEDANPNA       * set related episode number
            ENDIF
            DISPLAY   *P77:2,*V2LON,*HON,*+,AEDANPNA
          ENDIF
.
KPRVAE90  MOVE      ZERO,EXIT 
          GOTO      KPRVAE99
.
KPRVAE95  MOVE      ONE,EXIT                * EXITCHAR
KPRVAE99  RETURN
+
.*********************************************************************
.         health fund
.*********************************************************************
KHFUND00  MOVE      AEDAFUND,CKYIDEF6
          MOVE      "Board                ",AUDESC
          PACK      AUCONBEF,CKYIDEF6,SP30,SP30
.
          CALL      PATFNDKY
          COMPARE   TWO,EXIT
          GOTO      KHFUND95 IF EQUAL       * exitchar
          MOVE      HCODE,AEDAFUND
          PACK      VAR,AEDAFUND,SP70,SP10
          CALL      DISPVARS
          PACK      AUCONAFT,AEDAFUND,SP30,SP30
          CALL      AUDIT000                * do the audit write
          MOVE      "   37",KEY5
          CALL      SCRCKFLD
          BRANCH    EXIT,KHFUND90           * desc not on file
          PACK      VAR,HFNAME,SP70,SP10
          CALL      DISPITEM
.
KHFUND90  MOVE      ZERO,EXIT
          GOTO      KHFUND99
.
KHFUND95  MOVE      ONE,EXIT
KHFUND99  RETURN
+
.*********************************************************************
.         health fund table
.*********************************************************************
KHTBLE00  UNPACK    AEDATBLE,ANS,ANS,ANS,ANS,CKYIDEF4
          MOVE      AEDAFUND,AFUNDH         * set health fund
          MOVE      "health fund table    ",AUDESC
          PACK      AUCONBEF,AEDATBLE,SP30,SP30
.
          CALL      PATTBLKY
          COMPARE   TWO,EXIT
          GOTO      KHTBLE95 IF EQUAL       * exitchar
          MOVE      AFNDTB,AEDATBLE
          PACK      VAR,AEDATBLE,SP70,SP10
          CALL      DISPVARS
          PACK      AUCONAFT,AEDATBLE,SP30,SP30
          CALL      AUDIT000                * do the audit write
          MOVE      "   39",KEY5
          CALL      SCRCKFLD
          BRANCH    EXIT,KHTBLE90           * desc not on file
          PACK      VAR,HFNAME,SP70,SP10
          CALL      DISPITEM
.
KHTBLE90  MOVE      ZERO,EXIT
          GOTO      KHTBLE99
.
KHTBLE95  MOVE      ONE,EXIT
KHTBLE99  RETURN
+
.*********************************************************************
.*        Keyin Number of previous visits - AEDAPVIS
.*********************************************************************
KPRVIS00  KEYIN     *PCCOL:CVERT,*V2LON,*RV,AEDAPVIS:
                    *PCCOL:CVERT,*DV,AEDAPVIS;
.                   
          COMPARE   ORIGVISI,AEDAPVIS
          GOTO      KPRVIS80 IF LESS        * less than default
.
          COMPARE   ZERO,AEDAPVIS
          GOTO      KPRVIS99 IF NOT LESS    * >= 0 so valid
          BEEP
          GOTO      KPRVIS00
.
KPRVIS80  DISPLAY   *P1:24,*EL,*B,*V2LON,*BLINKON,"WARNING",*HOFF:
                    ": Number of Visits is less than default.  ";
          CALL      HITENTER 
          GOTO      KPRVIS99
.
KPRVIS99  RETURN
+
.*********************************************************************
.*        keyin the card number - PTVKCARD     
.*********************************************************************
KCARDN00  PACK      KEYFIELD,PTVKCARD,SP70,SP10
          MOVE      ONE,YESDFLTS
          CALL      KFREEF00
          PACK      PTVKCARD,KEYFIELD,SP70,SP10
          MATCH     SP20,PTVKCARD
          GOTO      KCARDN50 IF EQUAL
.
          REP       UPPLOW,PTVKCARD
          PACK      VAR,PTVKCARD,SP70,SP10
          CALL      DISPITEM                * redisplay in UPPERCASE
          PROC      VALKCARD                * validate card number
          COMPARE   ZERO,EXIT
          GOTO      KCARDN99 IF EQUAL       * valid card number
.
          DISPLAY   *P1:24,*EL,*B,"Invalid Card Number.  ";
          CALL      HITENTER 
          MOVE      SP20,PTVKCARD
          GOTO      KCARDN00
.
KCARDN50  
.>>>          DISPLAY   *PCCOL:CVERT,SP20;
          PACK      VAR,PTVKCARD,SP70,SP10
          CALL      DISPITEM                * redisplay in UPPERCASE
          MOVE      SP20,PTVKCARD           * clear card
          MOVE      SP8,PTVKCEXP            * clear expiry date
          MOVE      ZERO,EXIT
.
KCARDN99  RETURN
+
.*********************************************************************
.*        keyin card expiry date - PTVKCEXP    
.*********************************************************************
KEXPDT00  MOVE      PTVKCARD,ANS            * get the card type
          REP       "C1H2G3 4",ANS          * get valid ones as numbers
.>>>          DISPLAY   *PCCOL:CVERT,SP10;      * clear line
          OPEN      CONTROLF,"controlf"
          CALL      IBACLOCK                * get current date
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
.
          UNPACK    PTVKCEXP,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CCENT
          MOVE      CCENT,FORM2
          IF        FORM2 = ZERO
            MOVE      CCC,FORM2             * default cent to current
          ENDIF
          MOVE      FORM2,CCENT
.
          MOVE      ANS,EXIT                * get as a form
          BRANCH    EXIT,KEXPDT40,KEXPDT40,KEXPDT40,KEXPDT99
.
. ------- enter date as month and year -------
.
KEXPDT10  MOVE      CCOL,ECOL 
          MOVE      CVERT,EVERT
.
          CALL      KEYMONTH
          BRANCH    OVRCD,KEXPDT10          * nothing entered
          MOVE      "00",CDAY               * day of zero
.
          MOVE      CCENT,FORM2
          COMPARE   CCC,FORM2
          GOTO      KEXPDT80 IF LESS        * entered cent is back dated
          GOTO      KEXPDT15 IF EQUAL       * entered cent is current
          GOTO      KEXPDT95                * entered cent in the future
.
KEXPDT15  MOVE      CYEAR,FORM2
          COMPARE   CYY,FORM2
          GOTO      KEXPDT80 IF LESS        * entered year is back dated
          GOTO      KEXPDT20 IF EQUAL       * entered year is current year
          GOTO      KEXPDT95                * entered year in the future
.
KEXPDT20  MOVE      CMON,FORM2
          COMPARE   FORM2,CMM
          GOTO      KEXPDT80 IF NOT LESS    * card has expired
          GOTO      KEXPDT95                * valid card
.
. ------- enter date as day and month and year -------
.
KEXPDT40  MOVE      CCOL,ECOL 
          MOVE      CVERT,EVERT
          CALL      KEYDATE 
          BRANCH    OVRCD,KEXPDT40          * nothing entered
.
          PACK      KEY8,CCENT,CYEAR,CMON,CDAY   * entered date
          REP       " 0",KEY8
          PACK      CPDATE,CCC,CYY,CMM,CDD  * current date
          REP       " 0",CPDATE
          MATCH     CPDATE,KEY8
          GOTO      KEXPDT95 IF NOT LESS    * current >= card date
.
KEXPDT80  DISPLAY   *P1:24,*EL,*V2LON,*B,*BLINKON,"WARNING",*HOFF:
                    ": This card has expired.  ";
          CALL      HITENTER 
.
.         valid card date
.
KEXPDT95  MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          PACK      PTVKCEXP,CCENT,CYEAR,CMON,CDAY
          REP       " 0",PTVKCEXP
          MOVE      ZERO,EXIT
.
KEXPDT99  RETURN
+
.*********************************************************************
.*        Keyin exemption code - PTVKCXMP - Cat XM
.*        Only key it in if the Comp. Elig/Claim Code (Cat CL) has   *
.*        an indicator of "E"                                        *
.*********************************************************************
KEXEMP00  UNPACK    SP30,ACODE,TDESC
          MATCH     SP3,ADACOMP
          GOTO      KEXEMP40 IF EQUAL       * don't key it in
.
          PACK      KEY5,ANSC,ANSL,ADACOMP
          CALL      RDCODE1
          UNPACK    SP30,ACODE,TDESC        * clear the codes
          BRANCH    OVRCD,KEXEMP40          * invalid code
.
          PACK      KEY5,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
          SCAN      ANSE,KEY5
          GOTO      KEXEMP40 IF NOT EQUAL   * no match found
.
KEXEMP20  MOVE      CODEXM,CODE
          MOVE      PTMXCXMP,CKYIDEF3
          CALL      PATCODKY                * Keyin the code
          COMPARE   TWO,EXIT
          GOTO      KEXEMP95 IF EQUAL       * EXITCHAR
.
          MOVE      ACODE,PTMXCXMP          * the code
KEXEMP40  MOVE      ACODE,PTVKCXMP          * the code
          PACK      VAR,PTVKCXMP,SP70,SP10
          CALL      DISPVARS
          MOVE      "   45",KEY5
          CALL      SCRCKFLD
          BRANCH    EXIT,KEXEMP90
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM
.
KEXEMP90  MOVE      ZERO,EXIT
          GOTO      KEXEMP99
.
KEXEMP95  MOVE      ONE,EXIT
KEXEMP99  RETURN
+
.*********************************************************************
.*        Enter the Family Id - PTVKFMLY    
.*********************************************************************
KFAMID00  PACK      KEYFIELD,PTVKFMLY,SP70,SP10
          CALL      KFREEF00
          PACK      PTVKFMLY,KEYFIELD,SP70,SP10
KFAMID99  RETURN
+
.*********************************************************************
.         patient type
.*********************************************************************
KPATTP00  MOVE      CODET,CODE              * category
.
          PACK      PCONT,PCONT,SP3         * Get default
          MATCH     SP3,PCONT
          IF        @EQUAL
            MOVE      PTYPE,CKYIDEF3
          ELSE
            MOVE      SP1,TCINDC1
            PACK      KEY5,ANSC,SP1,PCONT
            CALL      RDCODE1
            MATCH     "3",TCINDC1
            IF        @EQUAL
              MOVE      CRESIDT,CKYIDEF3
            ELSE
              IF        CYRSRES > PYRRES
                MOVE      CNONRES,CKYIDEF3
              ELSE
                MOVE      CRESIDT,CKYIDEF3
              ENDIF
            ENDIF
          ENDIF
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT                * EXITCHAR?
          GOTO      KPATTP95 IF EQUAL
          MOVE      ACODE,PTYPE
          PACK      VAR,ACODE,SP70,SP10
          CALL      DISPITEM                * Display code
          MOVE      "   48",KEY5  
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KPATTP90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KPATTP90  MOVE      ZERO,EXIT
          GOTO      KPATTP99
.
KPATTP95  MOVE      ONE,EXIT                * EXITCHAR
KPATTP99  RETURN
+
.*********************************************************************
.         write audit for changes
.*********************************************************************
AUDIT000  IF        HEAUDA <> ONE
            CMATCH    ANSC,AUMODE
            CALL      WRITAUDX IF EQUAL
          ENDIF
AUDIT999  RETURN
+
.*********************************************************************
.    RTA Seatbelt Details  "AR"
.*********************************************************************
KRTASD00  MOVE      CATAR,CODE              * category
          MOVE      AEDARTAS,CKYIDEF3
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT                * EXITCHAR?
          GOTO      KRTASD95 IF EQUAL
          MOVE      ACODE,AEDARTAS
          PACK      VAR,ACODE,SP70,SP10
          CALL      DISPITEM                * Display code
          MOVE      "   58",KEY5  
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KRTASD90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KRTASD90  MOVE      ZERO,EXIT
          GOTO      KRTASD99
.
KRTASD95  MOVE      ONE,EXIT                * EXITCHAR
KRTASD99  RETURN
+
.*********************************************************************
.*        Employer (Work Care)              
.*********************************************************************
KEMPLR00  PACK      KEYFIELD,AEDAEMPL,SP70,SP10
          CALL      KFREEF00
          PACK      AEDAEMPL,KEYFIELD,SP70,SP10
KEMPLR99  RETURN
+
.*********************************************************************
.         Time of Initial Assessment
.*********************************************************************
KTIMIA00  UNPACK    AEDATIAS,CHOUR,ANS,CMIN
          MOVE      SP5,AEDATIAS
          CALL      KEYTIME
          BRANCH    CQUEST,KTIMIA00
          BRANCH    OVRCD,KTIMIA50
.
          PACK      AEDATIAS,CHOUR,COLON,CMIN
          REP       " 0",AEDATIAS
.
          MATCH     TODAY,AEDADIAS
          GOTO      KTIMIA50 IF NOT EQUAL   * date of initial ass. not curr
.
          CLOCK     TIME,KEY5
          MATCH     AEDATIAS,KEY5
          GOTO      KTIMIA50 IF NOT LESS    * time <= current
.
          DISPLAY   *P1:24,*B,"Time can't be into the future.  ",*EL;
          CALL      HITENTER
          CLOCK     TIME,AEDATIAS
          GOTO      KTIMIA00
.
KTIMIA50  MOVE      "   53",KEY5
          PACK      VAR,AEDATIAS,SP70,SP10
          CALL      DISPITEM
.
KTIMIA99  RETURN
+
.*********************************************************************
.         Decision to admit time
.*********************************************************************
KDECAT00  MATCH     SP5,AEDADTAT
          IF        @EQUAL
            CLOCK     TIME,AEDADTAT
          ENDIF
          UNPACK    AEDADTAT,CHOUR,ANS,CMIN
          MOVE      SP5,AEDADTAT
          CALL      KEYTIME
          BRANCH    CQUEST,KDECAT00
          BRANCH    OVRCD,KDECAT50
.
          PACK      AEDADTAT,CHOUR,COLON,CMIN
          REP       " 0",AEDADTAT
.
KDECAT50  MOVE      "   54",KEY5
          PACK      VAR,AEDADTAT,SP70,SP10
          CALL      DISPITEM
.
KDECAT99  RETURN
+
.*********************************************************************
.         Time elapsed since incident (AE)
.*********************************************************************
KITIME00  MOVE      CATAE,CODE              * category
          MOVE      AEDATESI,CKYIDEF3
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT                * EXITCHAR?
          GOTO      KITIME95 IF EQUAL
          MOVE      ACODE,AEDATESI
          PACK      VAR,ACODE,SP70,SP10
          CALL      DISPITEM                * Display code
.
          MOVE      "   63",KEY5  
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KITIME90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KITIME90  MOVE      ZERO,EXIT
          GOTO      KITIME99
.
KITIME95  MOVE      ONE,EXIT                * EXITCHAR
KITIME99  RETURN
+
.*********************************************************************
.     GP Practice code                  
.*********************************************************************
KGPCOD00  
.         MOVE      AEDARFGP,CKYIDEF8             * Referring GP code
.         MOVE      AEDAGPPC,CKYIDEF6             * default practice code
.         MOVE      AEDAGPPT,CKYIDEF2             * default practice count
.         MOVE      SCPSMAN,CKYIMAND              * mandtory
.
.         CALL      PMSHCGKY                      * keyin GP Practice code
.         IF        EXIT = 2
.           MOVE      ONE,EXIT
.           GOTO      KGPCOD99
.         ENDIF
.
.         MOVE      CKYIDEF6,AEDAGPPC             * set up practice code
.         MOVE      CKYIDEF2,AEDAGPPT             * set up practice count
.         CALL      DISPVARS
.
.         MOVE      "   52",KEY5
.         CALL      SCRCKFLD
.         BRANCH    EXIT,KGPCOD95
.         PACK      VAR,PMHGPNAM,SP70,SP10
.         CALL      DISPITEM
.
.GPCOD95  MOVE      ZERO,EXIT
.
KGPCOD99  RETURN
+
.*********************************************************************
.  Referring GP                   
.*********************************************************************
KREFGP00  
.         IF        ACCEPT = 1
.           MOVE      PMPXRHC1,CKYIDEF8
.           MOVE      PMPXRH1G,CKYIDEF6
.           MOVE      PMPXR1GC,CKYIDEF2
.         ELSE
.           PACK      AEDARFGP,AEDARFGP,SP70
.           MATCH     SP8,AEDARFGP
.           IF        @EQUAL
.             MOVE      PMPXRHC1,CKYIDEF8
.             MOVE      PMPXRH1G,CKYIDEF6
.             MOVE      PMPXR1GC,CKYIDEF2
.           ELSE
.             MOVE      AEDARFGP,CKYIDEF8
.             MOVE      AEDAGPPC,CKYIDEF6
.             MOVE      AEDAGPPT,CKYIDEF2
.           ENDIF
.         ENDIF
.         MOVE      SCPSMAN,CKYIMAND
.
.         CALL      PMSHCPKY                      * keyin referring GP code
.         IF        EXIT = 2
.           MOVE      ONE,EXIT
.           GOTO      KREFGP99
.         ENDIF
.
.         MOVE      CKYIDEF8,AEDARFGP
.         MOVE      CKYIDEF6,AEDAGPPC
.         MOVE      CKYIDEF2,AEDAGPPT
.
.         MOVE      "   49",KEY5
.         CALL      SCRCKFLD
.         BRANCH    EXIT,KREFGP95
.         PACK      VAR,AEDARFGP,SP70,SP10
.         CALL      DISPITEM
.
.         MOVE      "   50",KEY5
.         CALL      SCRCKFLD
.         BRANCH    EXIT,KREFGP80
.         PACK      VAR,PMHCSNAM,SP70,SP10
.         STRIP     VAR
.         ENDSET    VAR
.         APPEND    SP1,VAR
.         APPEND    PMHCGNAM,VAR
.         APPEND    SP70,VAR
.         RESET     VAR
.         CALL      DISPITEM
.
.REFGP80  IF        ACCEPT = 0
.           MOVE        "   51",KEY5
.           CALL        SCRCKFLD
.           BRANCH      EXIT,KREFGP95
.           CALL        KGPCOD00
.         ENDIF
.
.REFGP95  MOVE      ZERO,EXIT
.     
KREFGP99  RETURN
+
.*********************************************************************
.    Initiator  "AI"              
.*********************************************************************
KINITI00  MOVE      CATAI,CODE             * category
          MOVE      AEDAINIT,CKYIDEF3
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT                * EXITCHAR?
          GOTO      KINITI95 IF EQUAL
          MOVE      ACODE,AEDAINIT
          MOVE      TCINDC1,IND1AI          * save first indicator
          PACK      VAR,ACODE,SP70,SP10
          CALL      DISPITEM                * Display code
          MOVE      "   60",KEY5  
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KINITI90           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KINITI90  MOVE      ZERO,EXIT
          GOTO      KINITI99
.
KINITI95  MOVE      ONE,EXIT                * EXITCHAR
KINITI99  RETURN
+
.*********************************************************************
.    Place of Incident "AP"       
.*********************************************************************
KPLACE00  MOVE      CATAP,CODE              * category
          MOVE      AEDAPLIN,CKYIDEF3
.
          CALL      PATCODKY                * keyin a codes field
          COMPARE   TWO,EXIT                * EXITCHAR?
          GOTO      KPLACE95 IF EQUAL
          MOVE      ACODE,AEDAPLIN
          PACK      VAR,ACODE,SP70,SP10
          CALL      DISPITEM                * Display code
          MOVE      "   62",KEY5  
          CALL      SCRCKFLD                * Display description?
          BRANCH    EXIT,KPLACE50           * No
          PACK      VAR,TDESC,SP70,SP10
          CALL      DISPITEM                * Display description
.
KPLACE50  CALL      AAEAPEXT                * see if to keyin extra details
KPLACE90  MOVE      ZERO,EXIT
          GOTO      KPLACE99
.
KPLACE95  MOVE      ONE,EXIT                * EXITCHAR
KPLACE99  RETURN
+
.*********************************************************************
.         date of initial assessment
.*********************************************************************
KDOIAS00  OPEN      CONTROLF,"controlf"
          CALL      IBACLOCK                * get current date
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
          MATCH     SP8,AEDADIAS
          IF        @EQUAL
            MOVE      TODAY,AEDADIAS          * default to todays date
          ENDIF
          UNPACK    AEDADIAS,CCENT,CYEAR,CMON,CDAY
          MOVE      SP8,AEDADIAS            * clear the date
          CALL      KEYDATE
          BRANCH    CQUEST,KDOIAS00
          BRANCH    OVRCD,KDOIAS70          * nothing entered
.
          PACK      AEDADIAS,CCENT,CYEAR,CMON,CDAY
          REP       " 0",AEDADIAS
          MATCH     AEDADIAS,TODAY
          GOTO      KDOIAS99 IF NOT LESS    * current date is >= visit date
.
          DISPLAY   *P1:24,*B,"Date can't be into the future.  ",*EL;
          CALL      HITENTER
          MOVE      TODAY,AEDADIAS
          GOTO      KDOIAS00
.
KDOIAS70  COMPARE   ONE,SCPSMAN
          GOTO      KDOIAS99 IF NOT EQUAL   * not mandatory
.
          DISPLAY   *P1:24,*B,"Field is mandatory.  ",*EL;
          CALL      HITENTER
          MOVE      TODAY,AEDADIAS
          GOTO      KDOIAS00
.
KDOIAS99  RETURN
+
.*********************************************************************
.         enter the consultant on take
.*********************************************************************
KACONS00  MOVE      AEDACONS,CKYIDEF6       * default code
          MATCH     SP6,AEDACONS
          GOTO      KACONS10 IF NOT EQUAL   * have a default code
.
          PACK      KEY13,ADADATE,ADATIME
          REP       " 0",KEY13
          CALL      RDAECOT1
          MOVE      AECTCONS,CKYIDEF6       * default code
          COMPARE   ZERO,OVRCD
          GOTO      KACONS10 IF EQUAL       * valid record
.
KACONS05  CALL      RPAECOT1
          BRANCH    OVRCD,KACONS10          * no default
          MATCH     AECTDATE,ADADATE
          GOTO      KACONS05 IF LESS        * date seen > effective date
          MOVE      AECTCONS,CKYIDEF6       * set default date
.
. keyin the consultant on take warning if not a current A&E doctor
.
KACONS10  CALL      KYNAEDOC
          COMPARE   TWO,EXIT
          GOTO      KACONS95 IF EQUAL       * exitchar
.
          MOVE      DCODE,AEDACONS
          PACK      VAR,AEDACONS,SP70,SP10
          CALL      DISPVARS
.
          MOVE      "   66",KEY5
          CALL      SCRCKFLD
          BRANCH    EXIT,KACONS90           * desc not on screen
          MOVE      AEDACONS,KEY6
          CALL      DXPATDOC                * display desc
.
KACONS90  MOVE      ZERO,EXIT
          GOTO      KACONS99
KACONS95  MOVE      ONE,EXIT
KACONS99  RETURN
+
.*********************************************************************
.  GP Code - not related to a practice
.*********************************************************************
KGPNPR00  IF        ACCEPT = 1
            MOVE      PMPXRHC1,CKYIDEF8
          ELSE
            PACK      AEDARFGP,AEDARFGP,SP70
            MATCH     SP8,AEDARFGP
            IF        @EQUAL
              MOVE      PMPXRHC1,CKYIDEF8
            ELSE
              MOVE      AEDARFGP,CKYIDEF8
            ENDIF
          ENDIF
          MOVE      SCPSMAN,CKYIMAND
.
          CALL      KYPMHCPB
          IF        EXIT = 2
            MOVE      SP8,AEDARFGP
            MOVE      ONE,EXIT
            GOTO      KGPNPR99
          ENDIF
.
          MOVE      PMHCHCPC,AEDARFGP
          UNPACK    SP70,AEDAGPPC,AEDAGPPT
          CALL      DISPVARS
.
          MOVE      "   50",KEY5
          CALL      SCRCKFLD
          BRANCH    EXIT,KGPNPR80
.
          MOVE      PMHCSNAM,PACSNAME
          MOVE      PMHCGNAM,PACGNAME
          MOVE      PMHCTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          PACK      VAR,PACFNAME,SP30,SP30,SP30
          CALL      DISPITEM
.
KGPNPR80  MOVE      ZERO,EXIT
.     
KGPNPR99  RETURN
+
.*********************************************************************
.  Triage/Priority Time
.*********************************************************************
KPRTRT00  UNPACK    AEDAPRTM,CHOUR,ANS,CMIN
          MOVE      SP5,AEDAPRTM
          CALL      KEYTIME
          BRANCH    CQUEST,KPRTRT00
          BRANCH    OVRCD,KPRTRT00
.
          PACK      AEDAPRTM,CHOUR,COLON,CMIN
          REP       " 0",AEDAPRTM
.
KPRTRT99  RETURN
+
.*********************************************************************
.         enter the Referred Doctor   
.*********************************************************************
KARDOC00  MOVE      AEDARDOC,CKYIDEF6       * default code
          CALL      PATDOCKY
          COMPARE   TWO,EXIT
          GOTO      KARDOC95 IF EQUAL       * exitchar
.
          MOVE      DCODE,AEDARDOC
          PACK      VAR,AEDARDOC,SP70,SP10
          CALL      DISPVARS
.
          MOVE      "   70",KEY5
          CALL      SCRCKFLD
          BRANCH    EXIT,KARDOC90           * desc not on screen
          MOVE      AEDARDOC,KEY6
          CALL      DXPATDOC                * display desc
.
KARDOC90  MOVE      ZERO,EXIT
          GOTO      KARDOC99
.
KARDOC95  MOVE      ONE,EXIT
.
KARDOC99  RETURN
+
RDDETAC1  MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      AAEDE1A1,KEY8;KEY29,ADACOMP
          GOTO      OVERCOND IF OVER
          RETURN  

.*********************************************************************
.         Update Duration of wait (ADADURN)
.*********************************************************************
UPDURT00  PACK      ADASEEN,ADASEEN,SP5
          MATCH     SP5,ADASEEN
          GOTO      UPDURT99 IF EQUAL
.
UPDURT10  REP       " 0",ADASEEN
          REP       " 0",ADATIME
.
          UNPACK    ADATIME,FIRSTHR,ANS,FIRSTMIN
          PACK      FIRSTIME,FIRSTHR,FIRSTMIN,SP5
          UNPACK    ADASEEN,LASTHOUR,ANS,LASTMIN
          PACK      LASTTIME,LASTHOUR,LASTMIN,SP5
.
          MOVE      ADADATE,FIRSTDAT
          MOVE      ADASDTE,LASTDATE
.
          CALL      TIMEDIFF                *Calculate duration of wait
.
UPDURT80  COMPARE   "9999",CALCTIME              *Duration more than 9999?
          GOTO      UPDURT90 IF LESS             *No
          MOVE      "9999",CALCTIME              *Yes
.
UPDURT90  MOVE      CALCTIME,ADADURN
.
          PACK      AUCONAFT,ADADURN,SP30,SP30
          CALL      AUDIT000                     * do the audit write
.
UPDURT99  RETURN
