.*************************************************************************
.* System   : Outpatients                                                *
.* Program  : IBAOUT91                                                   *
.* Desc     : Outpatient Board Charging Maintenance                      *
.*************************************************************************
.* Date     :  30/12/1991                                                *
.* Author   :  Graeme Williams                                           *
.* Mods     :                                                            * 
.*        V5.08.03  25/10/2000  Dean Cramer   SRF 6710                   *
.*                  Recomplied for PATFNDDS                              *
.*                  Changed for health fund table code size increase to  *
.*                  8 characters                                         *
.*        V5.08.02  16/08/2000  Caleb Sharman                            *
.*                  Changed Health Fund variables to be 8 chars          *
.*        V5.08.01  06/06/2000  Tonii                                    *
.*                  Changed from KEY10 to KEY14 for the health fund file *
.*************************************************************************
.*        V5.01.002 24/01/1992  Graeme Williams                          *
.*                       Changed department to category A                *
.*        V5.01.003 24/05/1995  Matt Surridge                            *
.*                  Fixed bugs for global recompile.                     *
.*************************************************************************
.
.$$$$$
.    Outpatient Board Charging Maintenance ( IBAOUT91 )
.    --------------------------------------------------
.
.    - Initialisation
.
.    - Display Header
.            - Open Files
.               OUTBCHA1
.               PATFN1A1
.               PATCODE1
.               CONTROLF
.
.    - Processing Options
.
.            - 0 = Exit
.            - 1 = Insert
.
.                - Clear Input Variables
.                - Display Screen Format
.                - Input Key Details
.                  (Claim code, health fund, department, age group and
.                   ending visit range, "?" options available)
.                     - Read OUTBCHA1, check if already exists
.                     - If Not, Continue...
.                - Accept Field Values 
.                             - Rates description
.                             - Patient portion
.                             - Board portion
.                             - Number of invoices
.                             - Misc item group code
.                - Select Item, Post or Cancel
.                - If Post then Write Data to OUTBCHA1
.
.            - 2 = Change
.
.                - Clear Input Variables
.                - Display Screen Format
.                - Input Key Details
.                  (Claim code, health fund, department, age group and
.                   ending visit range, "?" options available)
.                     - Read OUTBCHA1, check if exists
.                     - If Exists, Continue...
.                - Display Field Values 
.                             - Rates description
.                             - Patient portion
.                             - Board portion
.                             - Number of invoices
.                             - Misc item group code
.                - Select Item, Post or Cancel
.                - If Post then Update Data to OUTBCHA1
.
.            - 3 = Delete
.
.                - Clear Input Variables
.                - Display Screen Format
.                - Input Key Details
.                  (Claim code, health fund, department, age group and
.                   ending visit range, "?" options available)
.                     - Read OUTBCHA1, check if exists
.                     - If Exists, Continue...
.                - Display Details 
.                             - Rates description
.                             - Patient portion
.                             - Board portion
.                             - Number of invoices
.                             - Misc item group code
.                - O.K. to Delete Yes or No ?
.                - If Yes then Delete Record from OUTBCHA1 File
.
.            - 4 = Copy
.
.                - Clear Input Variables
.                - Display Screen Format
.                - Input From Key Details
.                  (Claim code, health fund, department, "?" options available)
.                     - If nothing is input for a field, then display
.                       a description of "All".
.                - Input To Key Details
.                  (Claim code, health fund, department, "?" options available)
.                     - Only fields that were entered for the from key
.                       will be input for the to key.
.                - OK to Continue Yes, No or Cancel ?
.                - Loop through the OUTBCHA1 file. For each record read:
.                     - Update the appropriate key fields and post a new record
                 - Ask if they want to do some more copying.
.    - END
.$$$$$
.
          INC       STD001FD
          INC       OUTBCHFD/INC           * board charging file
          INC       PATFN1FD/INC           * health funds file
          INC       PATCODFD/INC           * patient codes file
          INC       PATCONFD/INC
+
.**********************************************************************
.*                           CONSTANTS                                *
.**********************************************************************
.
CODEA     INIT      "A "                   * category for department
CODECL    INIT      "CL"                   * category for claim code
CODEFI    INIT      "FI"                   * category for item group code
.
CPYOPT    INIT      "Copy  "
.
DALL      INIT      "All"
.
Z30       INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
ZERO4     INIT      "0000"
ZERO8     INIT      "0000    "
+
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
.
AFUNDH    DIM       6         * parameter to PATFNDDS.PBL
.
AGEGRP    DIM       3
ATYCODE   DIM       3
ATYDESC   DIM       20
ATY2CODE  DIM       3
ATY2DESC  DIM       20
.
CLMCODE   DIM       3
CLMDESC   DIM       20
CLM2CODE  DIM       3
CLM2DESC  DIM       20
CODE      DIM       2
.
DANS      DIM       3
.
ENDDAYS   DIM       3
.
FAGEGRP   FORM      3
FORM3     FORM      3
FUNDNAME  DIM       30
FUND2NAM  DIM       30
.
HFUND     DIM       6
H2FUND    DIM       6
.
KAGEG     DIM       3
KDAYS     DIM       3
KFUND     DIM       6
.
NOCLM     FORM      1
NOFUND    FORM      1
NOATYPE   FORM      1
.
OLDKEY    DIM       18
.
PRGID     INIT      "IBAOUT91"
PRGNAM    INIT      "Outpatient Board Charging Maintenance"
VERSION   INIT      "V12.00.00"
+
.**********************************************************************
.*                           MAINLINE                                 *
.**********************************************************************
.
ML0000    CALL      INIT0000               * initialization and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    COPTION,ML1000,ML2000,ML3000,ML4000
          GOTO      ML9999                 * Exit selected
.
. ---- Insert a new parameter ----
.
ML1000    CALL      CLR0000                * clear input variables
          CALL      SCR0000                * display screen format
ML1100    CALL      KCLM0000               * input claim code
          BRANCH    EXIT,ML0100 
ML1200    CALL      KFND0000               * input health fund (board)
          BRANCH    EXIT,ML1100 
ML1300    CALL      KATY0000               * input department
          BRANCH    EXIT,ML1200 
ML1400    CALL      KAGE0000               * input age group
          BRANCH    EXIT,ML1300 
.
ML1500    CALL      KCLR0000               * clear keyin fields
          CALL      KEND0000               * input ending visit range
          BRANCH    EXIT,ML1400 
.
          CALL      EXST0000               * check if key exists
          BRANCH    EXIT,ML1500            * key already exists
.
          CALL      ACPT0000               * accept initial values
          BRANCH    EXIT,ML1500            * EXITCHAR input
          CALL      SEL0000                * select field to modify
.                                          * or ok to post
          BRANCH    EXIT,ML1500
          CALL      WRT0000                * write to file
          GOTO      ML1500
.
. ---- Modify a parameter ----
.
ML2000    CALL      CLR0000                * clear input variables
          CALL      SCR0000                * display screen format 
ML2100    CALL      KCLM0000               * input claim code
          BRANCH    EXIT,ML0100 
ML2200    CALL      KFND0000               * input health fund (board)
          BRANCH    EXIT,ML2100 
ML2300    CALL      KATY0000               * input department
          BRANCH    EXIT,ML2200 
ML2400    CALL      KAGE0000               * input age group
          BRANCH    EXIT,ML2300 
.
ML2500    CALL      KCLR0000               * clear keyin fields
          CALL      KEND0000               * input ending visit range
          BRANCH    EXIT,ML2400 
.
          CALL      EXST0000               * check if key exists
          BRANCH    EXIT,ML2500            * key does not exist
.
          CALL      DISP0000               * display details
          CALL      SEL0000                * select field to modify
.                                          * or ok to post
          BRANCH    EXIT,ML2500
          CALL      UPD0000                * update record
          GOTO      ML2500
.
. ---- Delete a parameter ----
.
ML3000    CALL      CLR0000                * clear input variables
          CALL      SCR0000                * display screen format 
ML3100    CALL      KCLM0000               * input claim code
          BRANCH    EXIT,ML0100 
ML3200    CALL      KFND0000               * input health fund (board)
          BRANCH    EXIT,ML3100 
ML3300    CALL      KATY0000               * input department
          BRANCH    EXIT,ML3200 
ML3400    CALL      KAGE0000               * input age group
          BRANCH    EXIT,ML3300 
.
ML3500    CALL      KCLR0000               * clear keyin fields
          CALL      KEND0000               * input ending day range
          BRANCH    EXIT,ML3400 
.
          CALL      EXST0000               * check if key exists
          BRANCH    EXIT,ML3500            * key does not exist
.
          CALL      DISP0000               * display detail 
          CALL      DELQST                 * ok to delete ?
          BRANCH    CEXIT,ML3600,ML3500,ML0100
ML3600    CALL      DEL0000                * delete this record
          GOTO      ML3500
.
. ---- Copy a parameter ----
.
ML4000    CALL      COPY0000               * global copying of parameters
          GOTO      ML0100
.
ML9999    CHAIN     PGM                    * chain back to program
+
.**********************************************************************
.*                             INIT0000                               *
.*                      Initialization  Routine                       *
.**********************************************************************
.
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"outbchaf";
          OPEN      OUTBCHA1,"outbchaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          MOVE      ONE,CNEWDS               * new style "?" options
.
INIT9999  RETURN
.
+
.**********************************************************************
.*                             CLR0000                                *
.*                 Routine to Clear Local Variables                   *
.**********************************************************************
.
CLR0000   UNPACK    SP30,CLMCODE,CLMDESC
          MOVE      SP30,FUNDNAME
          UNPACK    SP30,HFUND
          UNPACK    SP30,ATYCODE,ATYDESC
          UNPACK    SP30,AGEGRP,ENDDAYS
.
          UNPACK    SP30,CLM2CODE,CLM2DESC
          MOVE      SP30,FUND2NAM
          UNPACK    SP30,H2FUND
          UNPACK    SP30,ATY2CODE,ATY2DESC
          RETURN
+
.****************************************************************************
.*                                OPTN0000                                  *
.*                        get user options or exit                          *
.*                                                                          *
.*    valid options     --->  (0) Exit                                      *
.*                            (1) Add                                       *
.*                            (2) Modify                                    *
.*                            (3) Delete                                    *
.****************************************************************************
.
. ---- display option screen ----
.
OPTN0000  HLINE     *G37,2,59,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Insert":
                    *P1:6,*V2LON,TWO,*HOFF," = Change":
                    *P1:7,*V2LON,THREE,*HOFF," = Delete":
                    *P1:8,*V2LON,FOUR,*HOFF," = Copy"
.
OPTN1000  KEYIN     *P1:10,"Select Option : ",*EL:
                    *P17:10,*DV,UNDLN2:
                    *P17:10,*V2LON,COPTION:
                    *P17:10,*DV,COPTION
.
.         Validate selection
.
          BRANCH    COPTION,OPTN8000,OPTN8000,OPTN8000,OPTN8000
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9999 IF EQUAL              * exit      
.
          BEEP
          GOTO      OPTN1000
.
OPTN8000  LOAD      DISPOPT,COPTION,ADDOPT,CHGOPT,DELOPT,CPYOPT
          DISPLAY   *P59:2,*V2LON,"- ",*+,DISPOPT,SP1
.
OPTN9999  RETURN
+
.**********************************************************************
.*                            SCR0000                                 *
.*                     Main Data Screen Display                       *
.**********************************************************************
.
SCR0000   BRANCH    COPTION,SCR1000,SCR1000,SCR1000,SCR2000
.
.         Screen for  insert,change,delete
.
SCR1000   DISPLAY   *P1:3,*EF:
                    *P5:4,"Claim code       ",*P30:4," : ":
                    *P5:5,"Board            ",*P30:5," : ":
                    *P5:6,"Department       ",*P30:6," : ":
                    *P5:7,"Ending age       ",*P30:7," : ":
                    *P5:8,"Ending no. visits",*P30:8," : ":
                    *P2:10,*V2LON,ONE,*HOFF,". Description               :":
                    *P2:11,*V2LON,TWO,*HOFF,". Patient portion of charge :":
                    *P2:12,*V2LON,THREE,*HOFF,". Board portion of charge   :":
                    *P2:13,*V2LON,FOUR,*HOFF,". No. of invoices to print  :":
                    *P2:14,*V2LON,FIVE,*HOFF,". Miscellaneous group code  :"
          GOTO      SCR9999
.
.         Screen for copy option
.
SCR2000   DISPLAY   *P1:3,*EF:
                    *P5:4,"From Claim code    ",*P30:4," : ":
                    *P5:5,"From Board         ",*P30:5," : ":
                    *P5:6,"From Department    ",*P30:6," : ":
                    *P5:8,"  To Claim code    ",*P30:8," : ":
                    *P5:9,"  To Board         ",*P30:9," : ":
                    *P5:10,"  To Department    ",*P30:10," : "
.
SCR9999   RETURN
.**********************************************************************
.*                            DKEY0000                                *
.*                     Redisplay main key variables                   *
.**********************************************************************
.
DKEY0000  BRANCH    COPTION,DKEY1000,DKEY1000,DKEY1000,DKEY2000
.
.         Key variables for insert, change and delete options
.
DKEY1000  DISPLAY   *P33:4,*V2LON,CLMCODE,*HOFF,*P45:4,CLMDESC:
                    *P33:5,*V2LON,HFUND,*HOFF,*P45:5,FUNDNAME:
                    *P33:6,*V2LON,ATYCODE,*HOFF,*P45:6,ATYDESC:
                    *P33:7,*V2LON,AGEGRP:
                    *P33:8,*V2LON,ENDDAYS
          GOTO      DKEY9999
.
.         Key variable display for the copy option
.
DKEY2000  DISPLAY   *P33:4,*V2LON,CLMCODE,*HOFF,*P45:4,CLMDESC:
                    *P33:5,*V2LON,HFUND,*HOFF,*P45:5,FUNDNAME:
                    *P33:6,*V2LON,ATYCODE,*HOFF,*P45:6,ATYDESC:
.
                    *P33:8,*V2LON,CLM2CODE,*HOFF,*P45:8,CLM2DESC:
                    *P33:9,*V2LON,H2FUND,*HOFF,*P45:9,FUND2NAM:
                    *P33:10,*V2LON,ATY2CODE,*HOFF,*P45:10,ATY2DESC
.
DKEY9999  RETURN
+
.**********************************************************************
.*                           EXST0000                                 *
.*                      Check for record existance                    *
.**********************************************************************
.
EXST0000  MOVE      CLMCODE,OTBCCLM          * set up claim code
          MOVE      HFUND,OTBCBRD            * set up board
          MOVE      ATYCODE,OTBCDEPT         * set up department
          MOVE      AGEGRP,OTBCAGEG          * set up age group
          MOVE      ENDDAYS,OTBCNVIS         * set up ending days
.
          PACK      KEY18,CLMCODE,HFUND,ATYCODE,AGEGRP,ENDDAYS
          CALL      RDOTBCH1
          BRANCH    OVRCD,EXST1000
.
.         Record exists. This is find for options 2 & 3, but is an error
.         for option 1.
.
          BRANCH    COPTION,EXST9000,EXST8000,EXST8000
          GOTO      EXST8000
.
.         Record does not exist. This is fine for option 1, but is an error
.         for options 2 & 3.
.
EXST1000  BRANCH    COPTION,EXST8000,EXST9100,EXST9100
.
.         Valid selection
.
EXST8000  MOVE      ZERO,EXIT                * success flag
          GOTO      EXST9999
.
.         Record already exists in insert mode
.
EXST9000  DISPLAY   *P1:24,*EL,*B,"This record already exists. ";
          CALL      HITENTER
          MOVE      ONE,EXIT                 * error flag
          GOTO      EXST9999
.
.         Record does not exist in change or delete modes
.
EXST9100  DISPLAY   *P1:24,*EL,*B,"This record does not exist. ";
          CALL      HITENTER
          MOVE      ONE,EXIT                 * error flag
.
EXST9999  RETURN
.**********************************************************************
.*                           ACPT0000                                 *
.*                      Accept Initial Values                         *
.**********************************************************************
.
ACPT0000  CALL      DESC0000                 * keyin description
          CALL      PPOR0000                 * keyin patient portion 
          CALL      BPOR0000                 * keyin board portion 
          CALL      NINV0000                 * keyin no. of invoices
          CALL      ITEM0000                 * keyin misc item group code
          BRANCH    EXIT,ACPT9999
.
          MOVE      ZERO,EXIT
.
ACPT9999  RETURN
.
.**********************************************************************
.*                           KCLM0000                                 *
.*                      Input claim code                              *
.**********************************************************************
KCLM0000  MOVE      "33",CCOL                * column for keyin
          MOVE      FOUR,CVERT               * row for keyin
          MOVE      CODECL,CODE              * category for keyin
.
          MOVE      SP20,CLMDESC
          MOVE      SP20,CLMCODE
.
          CALL      KEYC0000                 * keyin a code
          BRANCH    EXIT,KCLM9999            * nothing input
.
          MOVE      ACODE,CLMCODE            * save code input
          MOVE      TDESC,CLMDESC            * save code description
.
          DISPLAY   *P33:4,*V2LON,CLMCODE:   * display code
                    *P45:4,*HOFF,CLMDESC     * display description
.
KCLM9999  RETURN
.**********************************************************************
.*                           KFND0000                                 *
.*                      Input health fund code                        *
.**********************************************************************
KFND0000  MOVE      SP30,FUNDNAME            * clear fund name
.
          MOVE      "33",CCOL                * column for keyin
          MOVE      FIVE,CVERT               * row for keyin
          CALL      KEYF0000                 * keyin fund
          BRANCH    EXIT,KFND9999            * nothing or exitchar input
.
          MOVE      KFUND,HFUND              * save health fund code
          MOVE      HFNAME,FUNDNAME          * save health fund description
.
          DISPLAY   *P33:5,*V2LON,HFUND:     * display code
                    *P45:5,*HOFF,FUNDNAME    * display description
.
KFND9999  RETURN
.**********************************************************************
.*                           KATY0000                                 *
.*                      Input department                              *
.**********************************************************************
KATY0000  MOVE      "33",CCOL                * column for keyin
          MOVE      SIX,CVERT                * row for keyin
          MOVE      CODEA,CODE               * category for keyin
.
          MOVE      SP20,ATYDESC
          MOVE      SP20,ATYCODE
.
          CALL      KEYC0000                 * keyin a code
          BRANCH    EXIT,KATY9999            * nothing input
.
          MOVE      ACODE,ATYCODE            * save code input
          MOVE      TDESC,ATYDESC            * save code description
.
          DISPLAY   *P33:6,*V2LON,ATYCODE:   * display code
                    *P45:6,*HOFF,ATYDESC     * display description
.
KATY9999  RETURN
.
.**********************************************************************
.*                           KAGE0000                                 *
.*                      Input ending age range                        *
.**********************************************************************
KAGE0000  MOVE      "33",CCOL                * column for keyin
          MOVE      SEVEN,CVERT              * row for keyin
.
          MOVE      SP20,AGEGRP
.
          CALL      KEYA0000                 * keyin an age group
          BRANCH    EXIT,KAGE9999            * nothing input
.
          MOVE      KAGEG,AGEGRP             * save age group input
.
          DISPLAY   *P33:7,*V2LON,AGEGRP     * display age group
.
KAGE9999  RETURN
.
.**********************************************************************
.*                           KEND0000                                 *
.*                      Input ending day range                        *
.**********************************************************************
KEND0000  MOVE      "33",CCOL                * column for keyin
          MOVE      EIGHT,CVERT              * row for keyin
.
          MOVE      SP20,ENDDAYS
.
          CALL      KEYD0000                 * keyin a number of days
          BRANCH    EXIT,KEND9999            * nothing input
.
          MOVE      KDAYS,ENDDAYS            * save days input
.
          DISPLAY   *P33:8,*V2LON,ENDDAYS    * display number of days
.
KEND9999  RETURN
.**********************************************************************
.*                           KEYC0000                                 *
.*                      Input a codes file entry                      *
.**********************************************************************
KEYC0000  KEYIN     *PCCOL:CVERT,*EL,*DV,UNDLN3:
                    *PCCOL:CVERT,*V2LON,ACODE:
                    *PCCOL:CVERT,*DV,ACODE
.
          CALL      VCOD0000                 * validate code
          BRANCH    EXIT,KEYC9999:           * nothing input
                         KEYC9000:           * valid code input
                         KEYC5000:           * "?" input
                         KEYC0000:           * invalid code
                         KEYC9990            * EXITCHAR input
.
.         "?" option for codes file entry
.
KEYC5000  CALL      PATCODDS                 * display codes
.
KEYC6000  KEYIN     *P1:24,"Input code :",*EL:
                    *P14:24,*DV,UNDLN3:
                    *P14:24,*V2LON,ACODE:
                    *P14:24,*DV,ACODE
.
          CALL      VCOD0000                 * validate code
          BRANCH    EXIT,KEYC9900:           * nothing input
                         KEYC8900:           * valid code input
                         KEYC5000:           * "?" input
                         KEYC6000:           * invalid code
                         KEYC9900
.
.         Valid code input
.
KEYC8900  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYC9000  MOVE      ZERO,EXIT                * valid code input
          GOTO      KEYC9999
.
.         Nothing input or EXITCHAR after "?"
.
KEYC9900  BRANCH    COPTION,KEYC9910,KEYC9910,KEYC9910,KEYC9920
KEYC9910  MATCH     CODECL,CODE              * is this the claim code ?
          GOTO      KEYC9999 IF EQUAL        * yes, don't redisplay screen
.
KEYC9920  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYC9990  MOVE      ONE,EXIT                 * set exit flag
.
KEYC9999  RETURN
.**********************************************************************
.*                           VCOD0000                                 *
.*                   Validate a codes file entry                      *
.**********************************************************************
.
VCOD0000  ENDSET    ACODE
          APPEND    SP3,ACODE
          RESET     ACODE
.
          MATCH     SP3,ACODE                * check if anything was input
          GOTO      VCOD9000 IF EQUAL        * no, return with exit flag set
.
          CMATCH    EXITCHAR,ACODE           * check if exitchar was input
          GOTO      VCOD9300 IF EQUAL        * yes, return with exit flag set
.
          CMATCH    QUEST,ACODE              * check for a "?" option
          GOTO      VCOD9100 IF EQUAL        * yes, set exit flag accordingly
.
          PACK      KEY5,CODE,ACODE          * key for codes file entry
          CALL      RDCODE1                  * test if valid code
          BRANCH    OVRCD,VCOD9200           * invalid code
.
          MOVE      TWO,EXIT                 * valid code
          GOTO      VCOD9999
.
VCOD9000  MOVE      ONE,EXIT                 * nothing input
          GOTO      VCOD9999
.
VCOD9100  MOVE      THREE,EXIT               * "?" input
          GOTO      VCOD9999
.
VCOD9200  DISPLAY   *P1:24,*EL,*B,"Invalid code. ";
          CALL      HITENTER
          MOVE      FOUR,EXIT                * invalid code input
          GOTO      VCOD9999
.
VCOD9300  MOVE      FIVE,EXIT                * exitchar input
.
VCOD9999  RETURN
.
.**********************************************************************
.*                           KEYF0000                                 *
.*                      Input a health fund code                      *
.**********************************************************************
KEYF0000  KEYIN     *PCCOL:CVERT,*EL,*DV,UNDLN6:
                    *PCCOL:CVERT,*V2LON,KFUND:
                    *PCCOL:CVERT,*DV,KFUND
.
          RESET     KFUND                    * check if anything was input
          GOTO      KEYF9500 IF EOS          * nothing was input
.
          CALL      VFND0000                 * validate code
          BRANCH    EXIT,KEYF9500:           * EXITCHAR input
                         KEYF9000:           * valid code input
                         KEYF5000:           * "?" input
                         KEYF0000            * invalid code
.
.         "?" option for codes file entry
.
KEYF5000  CALL      PATDSFN1                 * display codes
.
KEYF6000  KEYIN     *P1:24,"Input code :",*EL:
                    *P14:24,*DV,UNDLN6:
                    *P14:24,*V2LON,KFUND:
                    *P14:24,*DV,KFUND
.
          RESET     KFUND                    * check if anything was input
          GOTO      KEYF9400 IF EOS          * nothing was input
.
          CALL      VFND0000                 * validate code
          BRANCH    EXIT,KEYF9400:           * EXITCHAR input
                         KEYF8900:           * valid code input
                         KEYF5000:           * "?" input
                         KEYF6000            * invalid code
.
.         Valid code input
.
KEYF8900  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYF9000  MOVE      ZERO,EXIT                * valid code input
          GOTO      KEYF9999
.
.         Nothing input after "?"
.
KEYF9400  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYF9500  MOVE      ONE,EXIT                 * nothing input
.
KEYF9999  RETURN
.**********************************************************************
.*                           VFND0000                                 *
.*                   Validate a health fund code                      *
.**********************************************************************
VFND0000  ENDSET    KFUND
          APPEND    SP6,KFUND
          RESET     KFUND
.
          MOVE      SP30,HFNAME              * assume no description
.
          MATCH     SP6,KFUND                * check if anything was input
          GOTO      VFND8000 IF EQUAL        * no, this is a valid code
.
          CMATCH    EXITCHAR,KFUND           * check if exitchar was input
          GOTO      VFND9000 IF EQUAL        * yes, return with exit flag set
.
          CMATCH    QUEST,KFUND              * check for a "?" option
          GOTO      VFND9100 IF EQUAL        * yes, set exit flag accordingly
.
          PACK      KEY14,KFUND,ZERO8,SP10   * key for health fund code
          CALL      RDFUND1                  * test if valid code
          BRANCH    OVRCD,VFND9200           * invalid code
.
VFND8000  MOVE      TWO,EXIT                 * valid code
          GOTO      VFND9999
.
VFND9000  MOVE      ONE,EXIT                 * nothing input, or exitchar
          GOTO      VFND9999
.
VFND9100  MOVE      THREE,EXIT               * "?" input
          GOTO      VFND9999
.
VFND9200  DISPLAY   *P1:24,*EL,*B,"Invalid code. ";
          CALL      HITENTER
          MOVE      FOUR,EXIT                * invalid code input
.
VFND9999  RETURN
.**********************************************************************
.*                           KEYA0000                                 *
.*                      Input an age group                            *
.**********************************************************************
KEYA0000  KEYIN     *PCCOL:CVERT,*EL,*DV,UNDLN3:
                    *PCCOL:CVERT,*V2LON,KAGEG:
                    *PCCOL:CVERT,*DV,KAGEG
.
          CALL      VAGE0000                 * validate days
          BRANCH    EXIT,KEYA9999:           * nothing or EXITCHAR input
                         KEYA9000:           * valid code input
                         KEYA5000:           * "?" input
                         KEYA0000            * invalid code
.
.         "?" option for codes file entry
.
KEYA5000  CALL      AGEQ0000                 * display days
          BRANCH    EXIT,KEYA0000            * no days on file
.
KEYA6000  KEYIN     *P1:24,"Input age group :",*EL:
                    *P19:24,*DV,UNDLN3:
                    *P19:24,*V2LON,KAGEG
.
          CALL      VAGE0000                 * validate days
          BRANCH    EXIT,KEYA9900:           * nothing or EXITCHAR input
                         KEYA8900:           * valid code input
                         KEYA5000:           * "?" input
                         KEYA6000            * invalid code
.
.         Valid code input
.
KEYA8900  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYA9000  MOVE      ZERO,EXIT                * valid code input
          GOTO      KEYA9999
.
.         Nothing input after "?"
.
KEYA9900  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYA9999  RETURN
.**********************************************************************
.*                           VAGE0000                                 *
.*                   Validate a ending day range                      *
.**********************************************************************
.
VAGE0000  RESET     KAGEG                    * check if anything was input
          GOTO      VAGE9000 IF EOS          * no, return with exit flag set
.
          CMATCH    EXITCHAR,KAGEG           * check if exitchar was input
          GOTO      VAGE9000 IF EQUAL        * yes, return with exit flag set
.
          CMATCH    QUEST,KAGEG              * check for a "?" option
          GOTO      VAGE9100 IF EQUAL        * yes, set exit flag accordingly
.
          TYPE      KAGEG                    * valid numeric ?
          GOTO      VAGE9200 IF NOT EQUAL    * no, set exit flag
.
          MOVE      KAGEG,FORM3              * move to a form field
          COMPARE   ZERO,FORM3               * must be >= zero
          GOTO      VAGE9200 IF LESS         * no, invalid ending age range
.
          MOVE      FORM3,KAGEG              * make sure days are justified
.
          MOVE      TWO,EXIT                 * valid code
          GOTO      VAGE9999
.
VAGE9000  MOVE      ONE,EXIT                 * nothing input, or exitchar
          GOTO      VAGE9999
.
VAGE9100  MOVE      THREE,EXIT               * "?" input
          GOTO      VAGE9999
.
VAGE9200  DISPLAY   *P1:24,*EL,*B,"Invalid age group. ";
          CALL      HITENTER
          MOVE      FOUR,EXIT                * invalid code input
.
VAGE9999  RETURN
.**********************************************************************
.*                           AGEQ0000                                 *
.*                   "?" option for ending day range                  *
.**********************************************************************
AGEQ0000  PACK      KEY18,CLMCODE,HFUND,ATYCODE,SP3
          CALL      RSOTBCH1                 * position in file
          CALL      RKOTBCH1                 * get the first record
          BRANCH    OVRCD,AGEQ9000           * no records on file
.
          MATCH     CLMCODE,OTBCCLM          * correct claim code
          GOTO      AGEQ9000 IF NOT EQUAL    * no, no days on file
.
          MATCH     HFUND,OTBCBRD            * correct health fund (board)
          GOTO      AGEQ9000 IF NOT EQUAL    * no, no days on file
.
          MATCH     ATYCODE,OTBCDEPT         * correct department
          GOTO      AGEQ9000 IF NOT EQUAL    * no, no days on file
.
.         We have at least on record on file already.
.
          DISPLAY   *P1:7,*EF,*V2LON,*ULON:
                    *P1:8,"Age Group";
.
          MOVE      ZERO,FORM3               * initialise from age
          MOVE      "-1",FAGEGRP             * initialise last age group
          MOVE      NINE,EVERT               * initialise display line
          MOVE      ONE,ECOL                 * initialise display column
.
.         Now loop through the file and display all of the ranges
.
          PACK      KEY18,CLMCODE,HFUND,ATYCODE,SP3
          CALL      RSOTBCH1                 * position in file
AGEQ1000  CALL      RKOTBCH1                 * get the first record
          BRANCH    OVRCD,AGEQ8000           * no records on file
.
          MATCH     CLMCODE,OTBCCLM          * correct claim code
          GOTO      AGEQ8000 IF NOT EQUAL    * no, no days on file
.
          MATCH     HFUND,OTBCBRD            * correct health fund (board)
          GOTO      AGEQ8000 IF NOT EQUAL    * no, no days on file
.
          MATCH     ATYCODE,OTBCDEPT         * correct department
          GOTO      AGEQ8000 IF NOT EQUAL    * no, no days on file
.
          COMPARE   FAGEGRP,OTBCAGEG         * check for a change in age group
          GOTO      AGEQ1000 IF EQUAL        * still same age group
.
          COMPARE   TWENTY3,EVERT            * screen full ?
          GOTO      AGEQ2000 IF LESS         * no, go ahead and display details
.
          COMPARE   "60",ECOL                * room for another column ?
          GOTO      AGEQ3000 IF NOT LESS     * no, ask what to do
.
          MOVE      NINE,EVERT
          ADD       TEN2,ECOL
.
          DISPLAY   *PECOL:8,"Age Group";
.
.         Display this age group
.
AGEQ2000  DISPLAY   *PECOL:EVERT,FORM3," - ",*V2LON,OTBCAGEG;
.
          ADD       ONE,EVERT                * increment display position
.
          MOVE      OTBCAGEG,FAGEGRP         * save current end of range
.
          MOVE      OTBCAGEG,FORM3           * save current end of range
          ADD       ONE,FORM3                * from day for next range
          GOTO      AGEQ1000
.
.         Screen full
.
AGEQ3000  DISPLAY   *P1:24,*EL,"(",*V2LON,"C",*HOFF,")ontinue, (":
                    *V2LON,"N",*HOFF,")ext screen, (":
                    *V2LON,"F",*HOFF,")irst screen ? ";
.
AGEQ3100  KEYIN     *P45:24,*DV,UNDLN1:
                    *P45:24,*V2LON,ANS;
.
          REP       UPPLOW,ANS
          CMATCH    ANSC,ANS
          GOTO      AGEQ8000 IF EQUAL
.
          CMATCH    ANSF,ANS
          GOTO      AGEQ0000 IF EQUAL
.
          MOVE      ONE,ECOL
          MOVE      NINE,EVERT
          DISPLAY   *P1:EVERT,*EF;
          GOTO      AGEQ2000
.
.         End of display
.
AGEQ8000  MOVE      ZERO,EXIT
          GOTO      AGEQ9999
.
.         No data to display
.
AGEQ9000  DISPLAY   *P1:24,*EL,*B:
                    "There are no records on file for this combination. ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
AGEQ9999  RETURN
.**********************************************************************
.*                           KEYD0000                                 *
.*                      Input a number of days                        *
.**********************************************************************
KEYD0000  KEYIN     *PCCOL:CVERT,*EL,*DV,UNDLN3:
                    *PCCOL:CVERT,*V2LON,KDAYS:
                    *PCCOL:CVERT,*DV,KDAYS
.
          CALL      VDAY0000                 * validate days
          BRANCH    EXIT,KEYD9999:           * nothing or EXITCHAR input
                         KEYD9000:           * valid code input
                         KEYD5000:           * "?" input
                         KEYD0000            * invalid code
.
.         "?" option for codes file entry
.
KEYD5000  CALL      DAYQ0000                 * display days
          BRANCH    EXIT,KEYD0000            * no days on file
.
KEYD6000  KEYIN     *P1:24,"Input ending visit :",*EL:
                    *P22:24,*DV,UNDLN3:
                    *P22:24,*V2LON,KDAYS
.
          CALL      VDAY0000                 * validate days
          BRANCH    EXIT,KEYD9900:           * nothing or EXITCHAR input
                         KEYD8900:           * valid code input
                         KEYD5000:           * "?" input
                         KEYD6000            * invalid code
.
.         Valid code input
.
KEYD8900  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYD9000  MOVE      ZERO,EXIT                * valid code input
          GOTO      KEYD9999
.
.         Nothing input after "?"
.
KEYD9900  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYD9999  RETURN
.**********************************************************************
.*                           VDAY0000                                 *
.*                   Validate a ending day range                      *
.**********************************************************************
.
VDAY0000  RESET     KDAYS                    * check if anything was input
          GOTO      VDAY9000 IF EOS          * no, return with exit flag set
.
          CMATCH    EXITCHAR,KDAYS           * check if exitchar was input
          GOTO      VDAY9000 IF EQUAL        * yes, return with exit flag set
.
          CMATCH    QUEST,KDAYS              * check for a "?" option
          GOTO      VDAY9100 IF EQUAL        * yes, set exit flag accordingly
.
          TYPE      KDAYS                    * valid numeric ?
          GOTO      VDAY9200 IF NOT EQUAL    * no, set exit flag
.
          MOVE      KDAYS,FORM3              * move to a form field
          COMPARE   ONE,FORM3                * must be greater than zero
          GOTO      VDAY9200 IF LESS         * no, invalid ending day range
.
          MOVE      FORM3,KDAYS              * make sure days are justified
.
          MOVE      TWO,EXIT                 * valid code
          GOTO      VDAY9999
.
VDAY9000  MOVE      ONE,EXIT                 * nothing input, or exitchar
          GOTO      VDAY9999
.
VDAY9100  MOVE      THREE,EXIT               * "?" input
          GOTO      VDAY9999
.
VDAY9200  DISPLAY   *P1:24,*EL,*B,"Invalid number of visits. ";
          CALL      HITENTER
          MOVE      FOUR,EXIT                * invalid code input
.
VDAY9999  RETURN
.**********************************************************************
.*                           DAYQ0000                                 *
.*                   "?" option for ending day range                  *
.**********************************************************************
DAYQ0000  MOVE      AGEGRP,FAGEGRP
.
          PACK      KEY18,CLMCODE,HFUND,ATYCODE,FAGEGRP,SP3
          CALL      RSOTBCH1                 * position in file
          CALL      RKOTBCH1                 * get the first record
          BRANCH    OVRCD,DAYQ9000           * no records on file
.
          MATCH     CLMCODE,OTBCCLM          * correct claim code
          GOTO      DAYQ9000 IF NOT EQUAL    * no, no days on file
.
          MATCH     HFUND,OTBCBRD            * correct health fund (board)
          GOTO      DAYQ9000 IF NOT EQUAL    * no, no days on file
.
          MATCH     ATYCODE,OTBCDEPT         * correct department
          GOTO      DAYQ9000 IF NOT EQUAL    * no, no days on file
.
          COMPARE   FAGEGRP,OTBCAGEG         * correct age group
          GOTO      DAYQ9000 IF NOT EQUAL    * no, no days on file
.
.         We have at least on record on file already.
.
          DISPLAY   *P1:8,*EF,*V2LON,*ULON:
                    *P1:9,"Day Range":
                    *P11:9,"Description         ":
                    *P32:9,"Patient Charge":
                    *P50:9,"Board Charge"
.
          MOVE      ONE,FORM3                * initialise from days
          MOVE      TEN,EVERT                * initialise display line
.
.         Now loop through the file and display all of the ranges
.
          PACK      KEY18,CLMCODE,HFUND,ATYCODE,FAGEGRP,SP3
          CALL      RSOTBCH1                 * position in file
DAYQ1000  CALL      RKOTBCH1                 * get the first record
          BRANCH    OVRCD,DAYQ8000           * no records on file
.
          MATCH     CLMCODE,OTBCCLM          * correct claim code
          GOTO      DAYQ8000 IF NOT EQUAL    * no, no days on file
.
          MATCH     HFUND,OTBCBRD            * correct health fund (board)
          GOTO      DAYQ8000 IF NOT EQUAL    * no, no days on file
.
          MATCH     ATYCODE,OTBCDEPT         * correct department
          GOTO      DAYQ8000 IF NOT EQUAL    * no, no days on file
.
          COMPARE   FAGEGRP,OTBCAGEG         * correct age group
          GOTO      DAYQ8000 IF NOT EQUAL    * no, no days on file
.
          COMPARE   TWENTY3,EVERT            * screen full ?
          GOTO      DAYQ3000 IF NOT LESS     * yes, ask what to do
.
DAYQ2000  DISPLAY   *P1:EVERT,FORM3," -":    * from days
                    *P7:EVERT,*V2LON,OTBCNVIS,*HOFF:
                    *P11:EVERT,OTBCDESC:
                    *P36:EVERT,OTBCPPOR:
                    *P54:EVERT,OTBCBPOR;
.
          ADD       ONE,EVERT                * increment display position
.
          MOVE      OTBCNVIS,FORM3           * save current end of range
          ADD       ONE,FORM3                * from day for next range
          GOTO      DAYQ1000
.
.         Screen full
.
DAYQ3000  DISPLAY   *P1:24,*EL,"(",*V2LON,"C",*HOFF,")ontinue, (":
                    *V2LON,"N",*HOFF,")ext screen, (":
                    *V2LON,"F",*HOFF,")irst screen ? ";
.
DAYQ3100  KEYIN     *P45:24,*DV,UNDLN1:
                    *P45:24,*V2LON,ANS;
.
          REP       UPPLOW,ANS
          CMATCH    ANSC,ANS
          GOTO      DAYQ8000 IF EQUAL
.
          CMATCH    ANSF,ANS
          GOTO      DAYQ0000 IF EQUAL
.
          MOVE      TEN,EVERT
          DISPLAY   *P1:EVERT,*EF;
          GOTO      DAYQ2000
.
.         End of display
.
DAYQ8000  MOVE      ZERO,EXIT
          GOTO      DAYQ9999
.
.         No data to display
.
DAYQ9000  DISPLAY   *P1:24,*EL,*B:
                    "There are no records on file for this combination. ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
DAYQ9999  RETURN
+
.**************************************************************************
.*                                   SEL0000                              *
.*                         select field to modify or post                 *
.**************************************************************************
.
SEL0000   CALL      MAINQST
          COMPARE   ZERO,CCITEM              * ok to post
          GOTO      SEL8000 IF EQUAL
          COMPARE   "-1",CCITEM              * cancel option
          GOTO      SEL9000 IF EQUAL
          BRANCH    CCITEM,SEL1000,SEL2000,SEL3000,SEL4000,SEL5000
          BEEP
          GOTO      SEL0000
.
SEL1000   CALL      DESC0000                 * keyin description
          GOTO      SEL0000
.
SEL2000   CALL      PPOR0000                 * keyin patient portion 
          GOTO      SEL0000
.
SEL3000   CALL      BPOR0000                 * keyin board portion 
          GOTO      SEL0000
.
SEL4000   CALL      NINV0000                 * keyin no. of invoices
          GOTO      SEL0000
.
SEL5000   CALL      ITEM0000                 * keyin misc item group code
          BRANCH    EXIT,SEL9000             * EXITCHAR input
          GOTO      SEL0000
.
.
.         (P)ost selected
.
SEL8000   MOVE      ZERO,EXIT                * set exit
          GOTO      SEL9999
.
.         (C)ancel selected
.
SEL9000   MOVE      ONE,EXIT                 * set exit
.
SEL9999   RETURN
.**************************************************************************
.*                               DESC0000                                 *
.*                   Input description                                    *
.**************************************************************************
DESC0000  KEYIN     *P33:10,*DV,UNDLN30:
                    *P33:10,*V2LON,OTBCDESC:
                    *P33:10,*DV,OTBCDESC
DESC9999  RETURN
.**************************************************************************
.*                               PPOR0000                                 *
.*                   Input patient portion of charge                      *
.**************************************************************************
PPOR0000  KEYIN     *P33:11,*DV,UNDLN7:
                    *P33:11,*V2LON,OTBCPPOR:
                    *P33:11,*DV,OTBCPPOR
PPOR9999  RETURN
.**************************************************************************
.*                               BPOR0000                                 *
.*                   Input patient portion of charge                      *
.**************************************************************************
BPOR0000  KEYIN     *P33:12,*DV,UNDLN7:
                    *P33:12,*V2LON,OTBCBPOR:
                    *P33:12,*DV,OTBCBPOR
BPOR9999  RETURN
.**************************************************************************
.*                               NINV0000                                 *
.*                   Input number of invoices                             *
.**************************************************************************
NINV0000  KEYIN     *P33:13,*DV,UNDLN1:
                    *P33:13,*V2LON,OTBCNINV:
                    *P33:13,*DV,OTBCNINV
.
          BRANCH    OTBCNINV,NINV9999,NINV9999
.
          DISPLAY   *P1:24,*EL,"Please select 1 or 2 invoices. ";
          CALL      HITENTER
          GOTO      NINV0000
.
NINV9999  RETURN
.**********************************************************************
.*                           ITEM0000                                 *
.*                      Input a codes file entry                      *
.**********************************************************************
ITEM0000  KEYIN     *P33:14,*EL,*DV,UNDLN3:
                    *P33:14,*V2LON,ACODE:
                    *P33:14,*DV,ACODE
.
          MOVE      CODEFI,CODE              * category we want
          CALL      VCOD0000                 * validate code
          BRANCH    EXIT,ITEM1000:           * nothing input
                         ITEM9000:           * valid code input
                         ITEM5000:           * "?" input
                         ITEM0000:           * invalid code
                         ITEM9990            * EXITCHAR input
.
.         Nothing input
.
ITEM1000  DISPLAY   *P1:24,*EL,*B,"This is a mandatory field. ";
          CALL      HITENTER
          GOTO      ITEM0000
.
.         "?" option for codes file entry
.
ITEM5000  CALL      PATCODDS                 * display codes
.
ITEM6000  KEYIN     *P1:24,"Input code :",*EL:
                    *P14:24,*DV,UNDLN3:
                    *P14:24,*V2LON,ACODE:
                    *P14:24,*DV,ACODE
.
          CALL      VCOD0000                 * validate code
          BRANCH    EXIT,ITEM7000:           * nothing input
                         ITEM8900:           * valid code input
                         ITEM5000:           * "?" input
                         ITEM6000:           * invalid code
                         ITEM9900            * EXITCHAR input
.
.         Nothing input
.
ITEM7000  DISPLAY   *P1:24,*EL,*B,"This is a mandatory field. ";
          CALL      HITENTER
          GOTO      ITEM6000
.
.         Valid code input
.
ITEM8900  MOVE      ACODE,OTBCITEM           * save item code
.
          CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
          CALL      DISP0000                 * display normal fields
.
          MOVE      ZERO,EXIT                * valid code input
          GOTO      ITEM9999
.
ITEM9000  MOVE      ACODE,OTBCITEM           * save item code
          DISPLAY   *P33:14,*V2LON,OTBCITEM,*HOFF,*P45:14,TDESC
.
          MOVE      ZERO,EXIT                * valid code input
          GOTO      ITEM9999
.
.         EXITCHAR input
.
ITEM9900  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
ITEM9990  MOVE      ONE,EXIT                 * EXITCHAR input
.
ITEM9999  RETURN
+
.**************************************************************************
.*                               DISP0000                                 *
.*                   Display Data from the parameter file                 *
.**************************************************************************
.
DISP0000  MOVE      SP20,TDESC
          MATCH     SP3,OTBCITEM
          GOTO      DISP1000 IF EQUAL
.
          PACK      KEY5,CODEFI,OTBCITEM
          CALL      RDCODE1
.
DISP1000  DISPLAY   *P33:10,*V2LON,OTBCDESC:
                    *P33:11,OTBCPPOR:
                    *P33:12,OTBCBPOR:
                    *P33:13,OTBCNINV:
                    *P33:14,OTBCITEM,*HOFF,*P45:14,TDESC
.
DISP9999  RETURN
.**************************************************************************
.*                               KCLR0000                                 *
.*                   Clear keyin fields from the screen                   *
.**************************************************************************
.
KCLR0000  DISPLAY   *P33:10,*EL:
                    *P33:11,*EL:
                    *P33:12,*EL:
                    *P33:13,*EL:
                    *P33:14,*EF
.
KCLR9999  RETURN
+
.**************************************************************************
.*                              WRT0000                                   *
.*                   Write Data to the parameter file                     *
.**************************************************************************
.
WRT0000   DISPLAY   *P1:24,*EL,"** Posting **";
.
          CALL      WROTBCH1                 * write file
.
          DISPLAY   *P1:24,*EL;
.
WRT9999   RETURN
+
.**************************************************************************
.*                              UPD0000                                   *
.*                   Update Data in the parameter file                    *
.**************************************************************************
UPD0000   DISPLAY   *P1:24,*EL,"** Posting **";
.
          CALL      UPOTBCH1                 * update file
.
          DISPLAY   *P1:24,*EL;
.
UPD9999  RETURN
+
.**************************************************************************
.*                              DEL0000                                   *
.*               Delete a Record from the File                            *
.**************************************************************************
.
DEL0000   DISPLAY   *P1:24,*EL,"** Deleting **";
.
          CALL      DEOTBCH1                      * delete record from 
.
          DISPLAY   *P1:24,*EL ;
.
DEL9999   RETURN
+
.**************************************************************************
.*                              COPY0000                                  *
.*               Global copy option for the parameter file                *
.**************************************************************************
COPY0000  CALL      CLR0000                * clear input variables
          CALL      SCR0000                * display screen format for copy
          CALL      FCLM0000               * input 1st claim code
          BRANCH    EXIT,COPY9999          * exitchar input
          CALL      FFND0000               * input 1st health fund (board)
          BRANCH    EXIT,COPY9999          * exitchar input
          CALL      FATY0000               * input 1st department
          BRANCH    EXIT,COPY9999          * exitchar input
.
          CALL      SCLM0000               * input 2nd claim code
          BRANCH    EXIT,COPY9999          * exitchar input
          CALL      SFND0000               * input 2nd health fund (board)
          BRANCH    EXIT,COPY9999          * exitchar input
          CALL      SATY0000               * input 2nd department
          BRANCH    EXIT,COPY9999          * exitchar input
.
          CALL      CONTQST                * Okay to continue
          BRANCH    CEXIT,COPY3000,COPY0000,COPY9999
.
COPY3000  CALL      DCPY0000               * do the copying
          CALL      MORE0000               * ask if they want to do another one
          BRANCH    EXIT,COPY9999          * no
          GOTO      COPY0000
.
COPY9999  RETURN
.**********************************************************************
.*                           FCLM0000                                 *
.*                      Input 1st claim code                          *
.**********************************************************************
FCLM0000  MOVE      "33",CCOL                * column for keyin
          MOVE      FOUR,CVERT               * row for keyin
          MOVE      CODECL,CODE              * category for keyin
.
          MOVE      SP20,CLMDESC
          MOVE      SP20,CLMCODE
.
          CALL      KEYC0000                 * keyin a code
          BRANCH    EXIT,FCLM9000            * nothing input
.
          MOVE      ACODE,CLMCODE            * save code input
          MOVE      TDESC,CLMDESC            * save code description
.
          DISPLAY   *P33:4,*V2LON,CLMCODE:   * display code
                    *P45:4,*HOFF,CLMDESC     * display description
          MOVE      ZERO,EXIT
          MOVE      ZERO,NOCLM
          GOTO      FCLM9999
.
.         Check if this nothing, or EXITCHAR
.
FCLM9000  CMATCH    EXITCHAR,ACODE           * exitchar input ?
          GOTO      FCLM9999 IF EQUAL        * yes, abort input
.
          PACK      CLMDESC,DALL,SP20
          DISPLAY   *P45:4,DALL
          MOVE      ZERO,EXIT
          MOVE      ONE,NOCLM
.
FCLM9999  RETURN
.**********************************************************************
.*                           SCLM0000                                 *
.*                      Input 2nd claim code                          *
.**********************************************************************
SCLM0000  BRANCH    NOCLM,SCLM9500           * anything input for 1st code ?
.
          MOVE      "33",CCOL                * column for keyin
          MOVE      EIGHT,CVERT              * row for keyin
          MOVE      CODECL,CODE              * category for keyin
.
          MOVE      SP20,CLM2DESC
          MOVE      SP20,CLM2CODE
.
          CALL      KEYC0000                 * keyin a code
          BRANCH    EXIT,SCLM9000            * nothing input
.
          MOVE      ACODE,CLM2CODE           * save code input
          MOVE      TDESC,CLM2DESC           * save code description
.
          DISPLAY   *P33:8,*V2LON,CLM2CODE:  * display code
                    *P45:8,*HOFF,CLM2DESC    * display description
          MOVE      ZERO,EXIT
          GOTO      SCLM9999
.
.         Check if this nothing, or EXITCHAR
.
SCLM9000  CMATCH    EXITCHAR,ACODE           * exitchar input ?
          GOTO      SCLM9999 IF EQUAL        * yes, abort input
.
          DISPLAY   *P1:24,*B,*EL,"A code must be input. ";
          CALL      HITENTER
          GOTO      SCLM0000
.
.         Nothing for first code means nothing for second code
.
SCLM9500  DISPLAY   *P45:8,DALL
          PACK      CLM2DESC,DALL,SP20
          MOVE      ZERO,EXIT
.
SCLM9999  RETURN
.**********************************************************************
.*                           FFND0000                                 *
.*                      Input 1st health fund code                    *
.**********************************************************************
FFND0000  MOVE      SP30,FUNDNAME            * clear fund name
.
          MOVE      "33",CCOL                * column for keyin
          MOVE      FIVE,CVERT               * row for keyin
          CALL      KEYF0000                 * keyin fund
          BRANCH    EXIT,FFND9000            * nothing or exitchar input
.
          MOVE      KFUND,HFUND              * save health fund code
          MOVE      HFNAME,FUNDNAME          * save health fund description
.
          DISPLAY   *P33:5,*V2LON,HFUND:     * display code
                    *P45:5,*HOFF,FUNDNAME    * display description
          MOVE      ZERO,NOFUND
          GOTO      FFND9999
.
.         Check if this nothing, or EXITCHAR
.
FFND9000  CMATCH    EXITCHAR,KFUND           * exitchar input ?
          GOTO      FFND9999 IF EQUAL        * yes, abort input
.
          PACK      FUNDNAME,DALL,SP20
          DISPLAY   *P45:5,DALL
          MOVE      ZERO,EXIT
          MOVE      ONE,NOFUND
.
FFND9999  RETURN
.**********************************************************************
.*                           SFND0000                                 *
.*                      Input 2nd claim code                          *
.**********************************************************************
SFND0000  BRANCH    NOFUND,SFND9500          * anything input for 1st code ?
.
          MOVE      "33",CCOL                * column for keyin
          MOVE      NINE,CVERT               * row for keyin
.
          MOVE      SP20,H2FUND
          MOVE      SP30,FUND2NAM
.
          CALL      KEYF0000                 * keyin a code
          BRANCH    EXIT,SFND9000            * nothing input
.
          MOVE      KFUND,H2FUND             * save health fund code
          MOVE      HFNAME,FUND2NAM          * save health fund description
.
          DISPLAY   *P33:9,*V2LON,H2FUND:    * display code
                    *P45:9,*HOFF,FUND2NAM    * display description
          MOVE      ZERO,EXIT
          GOTO      SFND9999
.
.         Check if this nothing, or EXITCHAR
.
SFND9000  CMATCH    EXITCHAR,KFUND           * exitchar input ?
          GOTO      SFND9999 IF EQUAL        * yes, abort input
.
          DISPLAY   *P1:24,*B,*EL,"A code must be input. ";
          CALL      HITENTER
          GOTO      SFND0000
.
.         Nothing for first code means nothing for second code
.
SFND9500  DISPLAY   *P45:9,DALL
          PACK      FUND2NAM,DALL,SP20
          MOVE      ZERO,EXIT
.
SFND9999  RETURN
.**********************************************************************
.*                           FATY0000                                 *
.*                      Input 1st department                          *
.**********************************************************************
FATY0000  MOVE      "33",CCOL                * column for keyin
          MOVE      SIX,CVERT                * row for keyin
          MOVE      CODEA,CODE               * category for keyin
.
          MOVE      SP20,ATYDESC
          MOVE      SP20,ATYCODE
.
          CALL      KEYC0000                 * keyin a code
          BRANCH    EXIT,FATY9000            * nothing input
.
          MOVE      ACODE,ATYCODE            * save code input
          MOVE      TDESC,ATYDESC            * save code description
.
          DISPLAY   *P33:6,*V2LON,ATYCODE:   * display code
                    *P45:6,*HOFF,ATYDESC     * display description
          MOVE      ZERO,EXIT
          MOVE      ZERO,NOATYPE
          GOTO      FATY9999
.
.         Check if this nothing, or EXITCHAR
.
FATY9000  CMATCH    EXITCHAR,ACODE           * exitchar input ?
          GOTO      FATY9999 IF EQUAL        * yes, abort input
.
          PACK      ATYDESC,DALL,SP30
          DISPLAY   *P45:6,DALL
          MOVE      ZERO,EXIT
          MOVE      ONE,NOATYPE
.
FATY9999  RETURN
.**********************************************************************
.*                           SATY0000                                 *
.*                      Input 2nd admission type                      *
.**********************************************************************
SATY0000  BRANCH    NOATYPE,SATY9500         * anything input for 1st code ?
.
          MOVE      "33",CCOL                * column for keyin
          MOVE      TEN,CVERT                * row for keyin
          MOVE      CODEA,CODE               * category for keyin
.
          MOVE      SP20,ATY2DESC
          MOVE      SP20,ATY2CODE
.
          CALL      KEYC0000                 * keyin a code
          BRANCH    EXIT,SATY9000            * nothing input
.
          MOVE      ACODE,ATY2CODE           * save code input
          MOVE      TDESC,ATY2DESC           * save code description
.
          DISPLAY   *P33:10,*V2LON,ATY2CODE: * display code
                    *P45:10,*HOFF,ATY2DESC   * display description
          MOVE      ZERO,EXIT
          GOTO      SATY9999
.
.         Check if this nothing, or EXITCHAR
.
SATY9000  CMATCH    EXITCHAR,ACODE           * exitchar input ?
          GOTO      SATY9999 IF EQUAL        * yes, abort input
.
          DISPLAY   *P1:24,*B,*EL,"A code must be input. ";
          CALL      HITENTER
          GOTO      SATY0000
.
.         Nothing for first code means nothing for second code
.
SATY9500  DISPLAY   *P45:10,DALL
          PACK      ATY2DESC,DALL,SP30
          MOVE      ZERO,EXIT
.
SATY9999  RETURN
.**********************************************************************
.*                           DCPY0000                                 *
.*                      Copy records                                  *
.**********************************************************************
.
.         Firstly, check that at least one field has been changed.
.
DCPY0000  BRANCH    NOCLM,DCPY0100           * no claim code
.
          MATCH     CLMCODE,CLM2CODE         * same claim code ?
          GOTO      DCPY1000 IF NOT EQUAL    * no, we can proceed
.
DCPY0100  BRANCH    NOFUND,DCPY0200          * no health fund
.
          MATCH     HFUND,H2FUND             * same health fund ?
          GOTO      DCPY1000 IF NOT EQUAL    * no, we can proceed
.
DCPY0200  BRANCH    NOATYPE,DCPY0300         * no admission type
.
          MATCH     ATYCODE,ATY2CODE         * same admission type ?
          GOTO      DCPY1000 IF NOT EQUAL    * no, we can proceed
.
.         We are trying to copy records to themselves
.
DCPY0300  DISPLAY   *P1:24,*B,*EL,"The #"From#" and #"To#" sections ":
                    "must be different. ";
          CALL      HITENTER
          GOTO      DCPY9999
.
.         We now proceed to loop through the file, and update as appropriate
.
DCPY1000  DISPLAY   *P1:24,*EL:
                    *P10:24,"Scanning :";
.
          PACK      KEY18,CLMCODE,HFUND,ATYCODE,SP3
          CALL      RDOTBCH1                 * check if record exists
          BRANCH    OVRCD,DCPY2000           * get the next record
.
          GOTO      DCPY2100                 * update this record
.
.         Get the next record from the parameter file, and check if we have
.         finished the loop. We also do a little loop optimisation for health
.         funds only.
.
DCPY2000  CALL      RKOTBCH1                 * get the next record
          BRANCH    OVRCD,DCPY9999           * finished
.
.         Check if have the required claim code. If not, we have finished
.
          BRANCH    NOCLM,DCPY2010           * not using claim details
.
          MATCH     OTBCCLM,CLMCODE          * still same claim code ?
          GOTO      DCPY9999 IF NOT EQUAL    * no, finished loop.
.
.         Check if we have the required health fund table. If we have passed
.         the required health fund table, skip forward to the next claim code.
.         If we have not reached the required health fund table, skip forward
.         to that health fund/table.
.
DCPY2010  BRANCH    NOFUND,DCPY2040          * no using fund details
.
          MATCH     OTBCBRD,HFUND            * still the same health fund ?
          GOTO      DCPY2030 IF LESS         * passed required health fund
          GOTO      DCPY2040 IF EQUAL        * req. health fund found
.
.         Skip forward to the health fund required
.
          PACK      KEY18,OTBCCLM,HFUND,SP30
          CALL      RSOTBCH1
          GOTO      DCPY2000
.
.         Passed the required health fund, so skip forward to the the next
.         claim code. 
.
DCPY2030  PACK      KEY18,OTBCCLM,Z30        * skip forward to next claim code
          CALL      RSOTBCH1
          GOTO      DCPY2000
.
.         Check if department is the one we want.
.
DCPY2040  BRANCH    NOATYPE,DCPY2100         * not using department details
.
          MATCH     OTBCDEPT,ATYCODE         * correct code ?
          GOTO      DCPY2000 IF NOT EQUAL    * no, get the next record
.
.         We have finished validating this record, now we can go and update
.         this record as specified by the from/to criteria.
.
DCPY2100  PACK      OLDKEY,OTBCCLM,OTBCBRD,OTBCDEPT,OTBCAGEG,OTBCNVIS
.
          DISPLAY   *P21:24,*V2LON,OLDKEY;
.
          BRANCH    NOCLM,DCPY2110
          MOVE      CLM2CODE,OTBCCLM         * update with new claim code
.
DCPY2110  BRANCH    NOFUND,DCPY2120
          MOVE      H2FUND,OTBCBRD           * update with new fund (board)
.
DCPY2120  BRANCH    NOATYPE,DCPY2200
          MOVE      ATY2CODE,OTBCDEPT        * update with new department
.
.         We now have the new record. If this record exists, update with the
.         details from the current record. Otherwise, write a new record.
.
DCPY2200  PACK      KEY18,OTBCCLM,OTBCBRD,OTBCDEPT,OTBCAGEG,OTBCNVIS
          CALL      RAOTBCH1
          BRANCH    OVRCD,DCPY2300           * new record does not exist
.
          CALL      UPOTBCH1                 * update with new details
          GOTO      DCPY3000
.
DCPY2300  CALL      WROTBCH1                 * write a new record
.
.         Finally, reposition back in to the original record in the file.
.
DCPY3000  MOVE      OLDKEY,KEY18
          CALL      RDOTBCH1
          GOTO      DCPY2000
.
DCPY9999  RETURN
.**********************************************************************
.*                           MORE0000                                 *
.*                      Ask if they want to copy more                 *
.**********************************************************************
MORE0000  DISPLAY   *P1:24,*EL,"Do you want to copy some more (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ";
.
          MOVE      "39",CCOL
          MOVE      "24",CVERT
.
.         The KYN0000 routine returns FORM=1 (Yes) or 2 (No)
.         We want EXIT to equal "1" if No, and "0" if Yes
.
          CALL      KYN0000
          LOAD      EXIT,FORM1,ZERO,ONE
.
MORE9999  RETURN
.**********************************************************************
.*                           KYN0000                                  *
.*                      Keyin (Y/N)                                   *
.**********************************************************************
.
KYN0000   MOVE      SP1,ANS
          KEYIN     *PCCOL:CVERT,*DV,UNDLN1,*DV,SP2:
                    *PCCOL:CVERT,*V2LON,ANS;
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          TYPE      ANS
          GOTO      KYN1000 IF EQUAL         * error if numeric
.
.         Convert to number
.
          REP       "Y1N2y1n2",ANS
.
.         Check for valid input
.
          TYPE      ANS
          GOTO      KYN8000 IF EQUAL
.
.         Invalid input
.
KYN1000   BEEP
          GOTO      KYN0000
.
.         Valid input
.
KYN8000   MOVE      ANS,FORM1
          LOAD      DANS,FORM1,DYES,DNO
.
          DISPLAY   *PCCOL:CVERT,*V2LON,DANS
.
KYN9999   RETURN
+
.********************************************************************** 
.*              I/O INCLUDES FOR FILES AND GENERAL ROUTINES           *
.**********************************************************************
.
         INC       STD001IO
         INC       PATCODKY
         INC       PATFNDDS
         INC       PATCODIO/INC            * patient i/o for codes
         INC       OUTBCHIO/INC            * charging file
         INC       PATFN1IO/INC            * health fund file
