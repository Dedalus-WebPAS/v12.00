.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVLHCP                                                    *
.* Desc      :   Data Migration Program to upload data relating to the       *
.*               linking of HCP's to hospitals from a third party legacy     *
.*               system into the patient webPAS module.                      *
.*****************************************************************************
.* Date      :   25/02/2011                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the convlhcp.txt file and    *
.*               for each valid Hospital/HCP record found, it will write a   *
.*               new mlthcpaf record, while for each Unit/Team record,       *
.*               it will write a new pmstmdaf record.                        *
.* Mods      :                                                               *
.*        V10.05.01  15/07/2014  Don Nguyen        CAR 301152                *
.*                   Added ability to skip Inactive HCP's                    *
.*****************************************************************************
.*        V10.04.01  17/03/2014  Steve Armstrong   CAR 296128                *
.*                   Added display of warning message if error records found.*
.*****************************************************************************
.*        V10.03.03  14/03/2012  Steve Armstrong   CAR 261657                *
.*                   Defaulted Hospital/HCP level provider number through to *
.*                   Unit/Team level provider number where this field is not *
.*                   populated.                                              *
.*        V10.03.02  23/02/2012  Jill Parkinson CAR 260774                   *
.*                   Added pmhchcst status 11,12 and 13                      *
.*        V10.03.01  31/12/2012  Steve Armstrong   CAR 259162                *
.*                   Mods to write a unit record (without a team) where a    *
.*                   unit/team record is being written.                      *
.*****************************************************************************
.*        V10.02.02  19/09/2011  Steve Armstrong   CAR 250662                *
.*                   Mods to remove restrictions on HCP's start date         *
.*        V10.02.01  19/07/2011  Steve Armstrong   CAR 240690                *
.*                   Added provider number field to Unit/Team record         *
.*        V10.02.00  12/07/2011  Steve Armstrong   CAR 240690                *
.*                   Created program                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       MLTHCPFD/INC
          INC       PATCODFD/INC
          INC       PATDO1FD/INC
          INC       PATHSPFD/INC
          INC       PMSHCPFD/INC
          INC       PMSTEMFD/INC
          INC       PMSTMDFD/INC
.
.         Hospital - HCP Link file layout - convlhcp.txt
.
LKHCPUPL  FILE      HL7, FIXED=4000         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
LHCPTYPE  DIM       1      1      Record type
.                                     0 = Hospital-HCP Link Record
LHCPHOSP  DIM       3      2      Hospital ID (pathspaf)              (mlhchosp)
LHCPHCPC  DIM       10     5      HCP Code (pmshcpaf)                 (mlhchcpc)
LHCPPROV  DIM       10     15     Provider Number                     (mlhcprov)
LHCPSTAT  DIM       2      25     Status                              (mlhcstat)
.                                   0 - Attending Doctor
.                                   1 - Referring Doctor
.                                   2 - Attending & Referring Doctor
.                                   3 - GP
.                                   4 - Attending Doctor & GP
.                                   5 - Referring Doctor & GP
.                                   6 - Attending, Referring & GP
.                                   7 - Other
.                                   8 - Other Attending
.                                   9 - Other Referring
.                                   10 - Other Attending & Referring
.                                   11 - Attending, GP & Other
.                                   12 - Referring, GP & Other
.                                   13 - Attending, Referring, GP & Other
LHCPHSRI  DIM       11     27     Hospital Supplier Ref Id            (mlhchsri)
LHCPOSLV  DIM       3      38     Operating Supervision Levl (Cat DL) (mlhcoslv)
LHCPSDAT  DIM       8      41     Start Date (ccyymmdd)               (mlhcsdat)
LHCPEDAT  DIM       8      49     End Date (ccyymmdd)                 (mlhcedat)
LHCPATYP  DIM       3      57     Accreditation Type (Cat AT)         (mlhcatyp)
LHCPDFAC  DIM       8      60     Date of First Accred. (ccyymmdd)    (mlhcdfac)
LHCPDLAC  DIM       8      68     Date of Last Accred. (ccyymmdd)     (mlhcdlac)
LHCPYACC  DIM       2      76     Years Of Accreditation              (mlhcyacc)
LHCPDEAC  DIM       8      78     Accred. Expiry Date (ccyymmdd)      (mlhcdeac)
.
. End of Record            86
.
.
.         Hospital/HCP - Unit/Team Link file layout
.
.LHCPTYPE DIM       1      1      Record type
.                                     1 = Hospital/HCP-Unit/Team Link Record
.LHCPHOSP DIM       3      2      Hospital ID (pathspaf)              (pmtdhosp)
.LHCPHCPC DIM       10     5      HCP Code (pmshcpaf)                 (pmtdhcpc)
LHCPUNIT  DIM       3      15     Unit Code (Cat AC)                  (pmtdunit)
LHCPTEAM  DIM       5      18     Team Code (pmstemaf)                (pmtdteam)
LHCPHEAD  DIM       1      23     Head of Unit                        (pmtdhead)
.                                    0 or Blank = No
.                                    1 = Yes
.LHCPPROV DIM       10     24     Provider Number                     (pmtdprov)
.
. End of Record            34
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ADDCOUNT  FORM      8             * added record count
.
CODCOUNT  FORM      8             * code error record count
CURRCENT  FORM      2             * current century
CURRDATE  DIM       8             * current date
.
DATEFLG1  FORM      1             * Date Type flag
.                                     0 = full date (ccyymmdd)
.                                     1 = partial date (ccyymm)
DATEFLG2  FORM      1             * Dates Allowed flag
.                                     0 = any date allowed
.                                     1 = future dates not allowed
.                                     2 = future dates only allowed
DIM2C     DIM       2
DIM2D     DIM       2
DIM2M     DIM       2
DIM2Y     DIM       2
DIM4      DIM       4
DTECOUNT  FORM      8             * date error record count
DUPCOUNT  FORM      8             * duplicate record count  >>>(may not be used)
.
ERORDESC  DIM       70
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
FORM10    FORM      10
.
MANCOUNT  FORM      8             * mandatory field error record count
.
NUMCOUNT  FORM      8             * numeric error record count
PRINACTV  FORM      1             * process 'Inactive' HCP's? 1=YES, 0=NO
.
RECCOUNT  FORM      8             * record read counter
.
SAVEHCPC  DIM       10
SAVEHOSP  DIM       3
SAVEPROV  DIM       10
SAVETEAM  DIM       5
SEQCOUNT  FORM      8             * sequence error count
.
TEMCOUNT  FORM      8             * unit/team record counter
TEMPCATG  DIM       6             * Category (or HF for HF Table validation)
TEMPCODE  DIM       10            * Coded field (length = max code field length)
TEMPDATE  DIM       8
TEMPTYPE  FORM      1             * Type of coded field
.                                     1 = patcodes
.                                     ....add other files as required
TMPFIELD  DIM       8             * Field name
TMPSTRNG  DIM       40            * Temporary string (max field length)
TYPEFORM  FORM      1             * Record type numeric
.                                       0 = Hospital - HCP link record
.                                       1 = Hospital/HCP - Unit Team Link record
.
.
VCHKFLAG  FORM      1             * Validation flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
.
.
.
. PROGRAM CONSTANTS
. -----------------
PIPE      INIT      "|"
.
.
.
PRGID     INIT      "CONVLHCP"
PRGNAM    INIT      "Upload Linked HCP Details"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with upload
.
MAIN1000  CALL      OPEN0000               * open upload file
          BRANCH    EXIT,MAIN0100          * file not found
.
          CALL      ASKQ0000               * validation run only ?
          CALL      ASKPIH00               * process inactive HCP's?
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      UPLD0000               * process upload
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"mlthcpaf";
          OPEN      MLTHCPA1,"mlthcpaf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pmstemaf";
          OPEN      PMSTEMA1,"pmstemaf"
.
          DISPLAY   *P64:24,"pmstmdaf";
          OPEN      PMSTMDA1,"pmstmdaf"
.
          DISPLAY   *P64:24,"controlf"
          OPEN      CONTROLF,"controlf"
.
          MOVE      ONE,CNOUNDLN
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data upload                         *
.*                        TRUE  (1)  Exit selected                           *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run data upload
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               OPEN0000              Called by: MAIN0000   *
.*                  Open upload file (convlhcp.txt)                          *
.*****************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      LKHCPUPL,"convlhcp"
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  DISPLAY   *P1:24,*EL,*B,"Upload file - convlhcp.txt - not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.*****************************************************************************
.*                               ASKQ0000              Called by: MAIN0000   *
.*                  Ask if running validation only                           *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.*****************************************************************************
.
ASKQ0000  MOVE      ANSY,ANS
          KEYIN     *P1:10,*EL,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:10,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DYES,*HOFF:
                      *P40:10,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DNO,*HOFF:
                      *P40:10,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ0000                     * invalid input
.
ASKQ9999  RETURN
+
.*****************************************************************************
.*                               ASKPIH00              Called by: MAIN0000   *
.*                  Ask if processing Inactive HCP's                         *
.* Returns: PRINACTV  - Process Inactive HCP flag                            *
.*                       0 = NO; skip                                        *
.*                       1 = YES; (default)                                  *
.*****************************************************************************
ASKPIH00  MOVE      ANSY,ANS
          KEYIN     *P1:11,*EL,"Process Inactive HCP's (",*V2LON,*DV,ANSY:
                    *HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P32:11,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P32:11,*V2LON,DYES,*HOFF:
                      *P40:11,"(All HCP's processed)"
            MOVE      ONE,PRINACTV               * yes
            GOTO      ASKPIH99
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P32:11,*V2LON,DNO,*HOFF:
                      *P40:11,"(Inactive HCP's will be skipped)"
            MOVE      ZERO,PRINACTV              * yes
            GOTO      ASKPIH99
          ENDIF
.
          GOTO      ASKPIH00                     * invalid input
.
ASKPIH99  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                  Process the PMI upload file records                       *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CURRCENT
.
          DISPLAY   *P1:13,"Processing ",*V2LON,"convlhcp.txt",*HOFF:
                    *P1:15,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:17,"Hospital   : ":
                    *P1:18,"HCP        : ":
                    *P1:19,"Records    : "
.
          MOVE      ZERO,RECCOUNT                * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,DTECOUNT                * init. date error record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
          MOVE      ZERO,NUMCOUNT                * init. num error record count
          MOVE      ZERO,SEQCOUNT                * init. seq error record count
.
          CALL      HEAD0000                     * Print the report header
.
.         Loop through upload file records.
.         Load in the first three fields as they are common to both
.         record types.
.
UPLD1000  READ      LKHCPUPL,SEQ;LHCPTYPE,LHCPHOSP,LHCPHCPC;
          GOTO      UPLD9000 IF OVER
.
          ADD       ONE,RECCOUNT                 * increment records read
          IF        (RECCOUNT%1000) = 0 | RECCOUNT = 1
            DISPLAY   *P14:17,*V2LON,LHCPHOSP:
                      *P14:18,LHCPHCPC:
                      *P14:19,RECCOUNT;
          ENDIF
.
          PACK      LHCPTYPE,LHCPTYPE,SP1
          MATCH     SP1,LHCPTYPE
          IF        @EQUAL
            MOVE      SP8,SAVEHOSP
            MOVE      SP9,SAVEHCPC
            MOVE      "Record type is blank ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,MANCOUNT               * increment mand. record count
            READ      LKHCPUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          TYPE      LHCPTYPE
          IF        !@EQUAL
            MOVE      SP8,SAVEHOSP
            MOVE      SP9,SAVEHCPC
            MOVE      "Record type is not numeric ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,NUMCOUNT               * incr. numeric erorr rec count
            READ      LKHCPUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          MOVE      ZERO,TYPEFORM
          MOVE      LHCPTYPE,TYPEFORM
          COMPARE   TYPEFORM,ONE                 * record type 0 or 1 ?
          IF        @LESS
            MOVE      SP3,SAVEHOSP
            MOVE      SP10,SAVEHCPC
            MOVE      "Record type is not valid ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,NUMCOUNT               * incr. numeric erorr rec count
            READ      LKHCPUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          IF       TYPEFORM = 0
            READ      LKHCPUPL,SEQ;LHCPPROV,LHCPSTAT,LHCPHSRI,LHCPOSLV,LHCPSDAT:
                                   LHCPEDAT,LHCPATYP,LHCPDFAC,LHCPDLAC,LHCPYACC:
                                   LHCPDEAC
          ELSE
            READ      LKHCPUPL,SEQ;LHCPUNIT,LHCPTEAM,LHCPHEAD,LHCPPROV
          ENDIF
.
          CALL      POUT0000                     * pad out fields with spaces
.
          BRANCH    TYPEFORM,UPLD2000            * Hosp/HCP-Unit/Team link rec.
.
.         This is a Hospital - HCP link record so clear the relevant database
.         variables and initialise counts
.
          CALL      CLMLTHCP
          MOVE      ZERO,TEMCOUNT                * init. Unit/Team link count
          MOVE      LHCPHOSP,SAVEHOSP            * save hospital code
          MOVE      LHCPHCPC,SAVEHCPC            * save hcp code
          GOTO      UPLD3000
.
.         This is a Hospital/HCP - Unit/Team link record so clear the
.         relevant database variables and initialise counts
.
UPLD2000  CALL      CLPMSTMD
          ADD       ONE,TEMCOUNT                 * increment unit/team count
.
          MATCH     LHCPHOSP,SAVEHOSP            * same hospital ?
          IF        !@EQUAL
            MOVE      "Unit/Team record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
.
          MATCH     LHCPHCPC,SAVEHCPC            * same hcp ?
          IF        !@EQUAL
            MOVE      "Unit/Team record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
.
UPLD3000  CALL      MAND0000                     * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      DVAL0000                     * date validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VNUM0000                     * validate numeric fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      SETV0000                     * set up file variables
.
          CALL      CVAL0000                     * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          BRANCH    TYPEFORM,UPLD7000            * unit/team record
.
.         Write a hospital-hcp record
.
          PACK      KEY13,MLHCHOSP,MLHCHCPC
          CALL      RAMLHCP1
          IF        OVRCD = 1
            BRANCH    VCHKFLAG,UPLD1000          * error checking only
            CALL      WRMLHCP1                   * write new record
            ADD       ONE,ADDCOUNT               * increment added record count
          ELSE
            MOVE      "Hospital-HCP record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
.         Set the flag for hospital specific doctor/hcp so that
.         the Hospital button appears red when viewing dr/hcp details.
.
          MOVE      ONE,PMHCHOSS
          CALL      UPPMHCP1
.
          MATCH     SP6,PMHCLDOC
          GOTO      UPLD1000 IF EQUAL
.
          MOVE      PMHCLDOC,KEY6
          CALL      RDDOCT1
          BRANCH    OVRCD,UPLD1000
.
          MOVE      ONE,PTDOHOSS
          CALL      UPDOCT1
.
          GOTO      UPLD1000                     * get next record
.
.         Write a unit only record
.
UPLD7000  MATCH     SP5,PMTDTEAM
          GOTO      UPLD7100 IF EQUAL
.
          PACK      KEY21,PMTDDOCT,PMTDHOSP,PMTDUNIT,SP5
          CALL      RAPMTMD1
          IF        OVRCD = 1
            BRANCH    VCHKFLAG,UPLD7100          * error checking only
            MOVE      PMTDTEAM,SAVETEAM
            MOVE      SP5,PMTDTEAM
            CALL      WRPMTMD1                   * write new record
            MOVE      SAVETEAM,PMTDTEAM
          ENDIF
.
.         Write a unit-team record
.
UPLD7100  PACK      KEY21,PMTDDOCT,PMTDHOSP,PMTDUNIT,PMTDTEAM
          CALL      RAPMTMD1
          IF        OVRCD = 1
            BRANCH    VCHKFLAG,UPLD1000          * error checking only
            CALL      WRPMTMD1                   * write new record
            ADD       ONE,ADDCOUNT               * increment added record count
          ELSE
            MOVE      "Unit-Team record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
          GOTO      UPLD1000                     * get next record
.
.         Upload completed
.
UPLD9000  ASSIGN    (SEQCOUNT+CODCOUNT+DUPCOUNT+DTECOUNT+MANCOUNT+NUMCOUNT),FORM10
          IF        FORM10 > 0
            CALL      LINE0000                   * print bottom line if errors
          ENDIF
.
          COMPARE   CLNO,FIFTY4                  * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:19,*V2LON,RECCOUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",RECCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT,*N:
                    *1,"Duplicate Records detected            - ",DUPCOUNT,*N:
                    *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records with invalid dates detected   - ",DTECOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT,*N:
                    *1,"Records with invalid numbers detected - ",NUMCOUNT,*N:
                    *1,"Records out of sequence               - ",SEQCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      LHCPHOSP,TMPSTRNG
          MOVE      "LHCPHOSP",TMPFIELD          * hospital
          CALL      CHKM0000
.
          MOVE      LHCPHCPC,TMPSTRNG
          MOVE      "LHCPHCPC",TMPFIELD          * hcp
          CALL      CHKM0000
.
          BRANCH    TYPEFORM,MAND1000            * unit/team record type
.
          MOVE      LHCPSTAT,TMPSTRNG
          MOVE      "LHCPSTAT",TMPFIELD          * hcp type
          CALL      CHKM0000
.
          MOVE      LHCPSDAT,TMPSTRNG
          MOVE      "LHCPSDAT",TMPFIELD          * start date
          CALL      CHKM0000
          GOTO      MAND9000
.
MAND1000  MOVE      LHCPUNIT,TMPSTRNG
          MOVE      "LHCPUNIT",TMPFIELD          * unit
          CALL      CHKM0000
.
MAND9000  BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: TMPSTRNG - field to be checked                                  *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     TMPSTRNG,SP10                * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          PRINT     *1,"< convlhcp.txt >"
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Record",*12,PIPE,*14,"Type",*19,PIPE:
                    *21,"Hosp.",*27,PIPE,*29,"HCP       ",*40,PIPE:
                    *42,"Error Description",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  SETV0000              Called by: UPLD0000 *
.*                       Load the record variables                            *
.******************************************************************************
.
.
SETV0000  BRANCH    TYPEFORM,SETV1000            * unit/team record type
.
.         Hospital/HCP record type
.
          MOVE      LHCPHOSP,MLHCHOSP
          MOVE      LHCPHCPC,MLHCHCPC
          MOVE      LHCPPROV,MLHCPROV
          MOVE      LHCPPROV,SAVEPROV
          MOVE      LHCPSTAT,MLHCSTAT
          MOVE      LHCPHSRI,MLHCHSRI
          MOVE      LHCPOSLV,MLHCOSLV
          MOVE      LHCPSDAT,MLHCSDAT
          MOVE      LHCPEDAT,MLHCEDAT
          MOVE      LHCPATYP,MLHCATYP
          MOVE      LHCPDFAC,MLHCDFAC
          MOVE      LHCPDLAC,MLHCDLAC
          MOVE      LHCPYACC,MLHCYACC
          MOVE      LHCPDEAC,MLHCDEAC
          MOVE      ZERO,MLHCACTV
          MOVE      SP70,MLHCSPAR
          GOTO      SETV9999
.
.         Unit/Team record type
.
SETV1000  MOVE      LHCPHOSP,PMTDHOSP
          MOVE      LHCPHCPC,PMTDDOCT
          MOVE      LHCPUNIT,PMTDUNIT
          MOVE      LHCPTEAM,PMTDTEAM
          MOVE      LHCPHEAD,PMTDHEAD
          MATCH     SP10,LHCPPROV
          IF        @EQUAL
            MOVE      SAVEPROV,PMTDPROV          * default Hosp/HCP provider
          ELSE
            MOVE      LHCPPROV,PMTDPROV
          ENDIF
.
          MOVE      ZERO,PMTDACTV
          MOVE      "CONVLHCP  ",PMTDCUID
          MOVE      CURRDATE,PMTDCDAT
          MOVE      CTIMEIS,PMTDCTIM
          MOVE      SP10,PMTDUUID
          MOVE      SP8,PMTDUDAT
          MOVE      SP8,PMTDUTIM
          MOVE      SP70,PMTDSPAR
.
SETV9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces given that we        *
.*            are dealing with pipe delimited records                        *
.*****************************************************************************
.
POUT0000  PACK      LHCPHOSP,LHCPHOSP,SP70       * common fields
          PACK      LHCPHCPC,LHCPHCPC,SP70
.         
          BRANCH    TYPEFORM,POUT1000
.
.         Hospital - HCP link record
.
          PACK      LHCPPROV,LHCPPROV,SP70
          PACK      LHCPSTAT,LHCPSTAT,SP70
          RJUSTIFY  LHCPSTAT
          PACK      LHCPHSRI,LHCPHSRI,SP70
          PACK      LHCPOSLV,LHCPOSLV,SP70
          PACK      LHCPSDAT,LHCPSDAT,SP70
          PACK      LHCPEDAT,LHCPEDAT,SP70
          PACK      LHCPATYP,LHCPATYP,SP70
          PACK      LHCPDFAC,LHCPDFAC,SP70
          PACK      LHCPDLAC,LHCPDLAC,SP70
          PACK      LHCPYACC,LHCPYACC,SP70
          RJUSTIFY  LHCPYACC
          PACK      LHCPDEAC,LHCPDEAC,SP70
          GOTO      POUT9999
.
.         Hospital/HCP - Unit/Team link record
.
POUT1000  PACK      LHCPUNIT,LHCPUNIT,SP70
          PACK      LHCPTEAM,LHCPTEAM,SP70
          PACK      LHCPHEAD,LHCPHEAD,SP70
          PACK      LHCPPROV,LHCPPROV,SP70
.
POUT9999  RETURN
+
.*****************************************************************************
.*                              DVAL0000           Called by: UPLD0000       *
.*                  Validate all date fields                                 *
.* Returns:  EXIT - 0 = No date validation errors                            *
.*                  1 = Date validation errors                               *
.*          DTECOUNT - updated count of records with date field errors       *
.*****************************************************************************
.
DVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,DVAL9000            * unit/team record type
.
          MOVE      LHCPSDAT,TEMPDATE            * start date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "LHCPSDAT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      LHCPEDAT,TEMPDATE            * end date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "LHCPEDAT",TMPFIELD
          CALL      VDAT0000
.
.         Validate the "from" and "to" dates
.         
          MATCH     SP8,LHCPEDAT                 * end date blank ?
          GOTO      DVAL1000 IF EQUAL            * yes
.
          MATCH     LHCPSDAT,LHCPEDAT            
          IF        @LESS
            MOVE      "End date less than Start date ",ERORDESC
            CALL      PERR0000
            MOVE      ONE,ERORFLAG
          ENDIF
.
DVAL1000  MOVE      LHCPDFAC,TEMPDATE            * date of first accreditation
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "LHCPDFAC",TMPFIELD
          CALL      VDAT0000
.
          MOVE      LHCPDLAC,TEMPDATE            * date of last accreditation
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "LHCPDLAC",TMPFIELD
          CALL      VDAT0000
.
.         Validate the "from" and "to" dates
.         
          MATCH     SP8,LHCPDLAC                 * end date blank ?
          GOTO      DVAL2000 IF EQUAL            * yes
.
          MATCH     LHCPDFAC,LHCPDLAC            
          IF        @LESS
            MOVE      "End accred. date less than First accred. date ",ERORDESC
            CALL      PERR0000
            MOVE      ONE,ERORFLAG
          ENDIF
.
DVAL2000  MOVE      LHCPDEAC,TEMPDATE            * accreditation expiry date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "LHCPDEAC",TMPFIELD
          CALL      VDAT0000
.
DVAL9000  BRANCH    ERORFLAG,DVAL9100            * errors on date validation
.
          MOVE      ZERO,EXIT                    * no errors on date validation
          GOTO      DVAL9999
.
DVAL9100  ADD       ONE,DTECOUNT                 * incr. date error record count
          MOVE      ONE,EXIT
.
DVAL9999  RETURN
+
.*****************************************************************************
.*                              VDAT0000           Called by: DVAL0000       *
.*                  Validate a date field                                    *
.* Requires:  TEMPDATE - Date in format ccyymmdd                             *
.*            DATEFLG1 - Date Type flag                                      *
.*                          0 = full date (ccyymmdd)                         *
.*                          1 = partial date (ccyymm)                        *
.*            DATEFLG2 - Dates Allowed flag                                  *
.*                          0 = any date allowed                             *
.*                          1 = no future dates allowed                      *
.*                          1 = only future dates allowed                    *
.*            TMPFIELD - Date field name                                     *
.* Returns:   ERORFLAG = 1 if an error in date validation occurs.            *
.*****************************************************************************
.
VDAT0000  MATCH     SP8,TEMPDATE                 * blank date ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Validate that the date has been fully populated
.
          SQUEEZE   TEMPDATE
          MOVELPTR  TEMPDATE,FORM1
          IF        DATEFLG1 = 0 & FORM1 <> 8 | DATEFLG1 = 1 & FORM1 <> 6
            MOVE      "Insufficient digits ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate that the date is numeric
.
VDAT0100  TYPE      TEMPDATE
          IF        !@EQUAL
            MOVE      "Not numeric ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          UNPACK    TEMPDATE,DIM2C,DIM2Y,DIM2M,DIM2D
.
.         Validate the century is >= 18 and <= current century
.
          MOVE      DIM2C,FORM2
          IF        FORM2 < 18 | FORM2 > CURRCENT
            MOVE      "Century not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate the month
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 1 | FORM2 > 12
            MOVE      "Month not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          COMPARE   ONE,DATEFLG1                 * short date (ccyymm) ?
          GOTO      VDAT9999 IF EQUAL            * yes - finished
.
.         Validate the day is:
.              < 32 for January, March, May, July, August, October & December
.              < 31 for April, June, September & November
.              < 29 for February, except in a leap year where it is < 30
.
          BRANCH    FORM2,VDAT1000:              * Jan
                          VDAT3000:              * Feb
                          VDAT1000:              * Mar
                          VDAT2000:              * Apr
                          VDAT1000:              * May
                          VDAT2000:              * Jun
                          VDAT1000:              * Jul
                          VDAT1000:              * Aug
                          VDAT2000:              * Sep
                          VDAT1000:              * Oct
                          VDAT2000:              * Nov
                          VDAT1000               * Dec
.
.         Validate days for month of 31 days
.
VDAT1000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for month of 30 days
.
VDAT2000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 30
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for February
.         A leap year is one where:
.           1. Every year divisible by 4 is a leap year.
.           2. But every year divisible by 100 is NOT a leap year
.           3. Unless the year is also divisible by 400, then it is still a
.              leap year.
.
VDAT3000  MOVE      DIM2D,FORM2
          PACK      DIM4,DIM2C,DIM2Y
          MOVE      DIM4,FORM4
          IF        (FORM4%4) = 0
            IF        (FORM4%100) = 0
              IF        (FORM4%400) = 0
                GOTO      VDAT3200
              ENDIF
            ELSE
              GOTO      VDAT3200
            ENDIF
          ENDIF
.
.         Check for normal Feb days
.
VDAT3100  IF        FORM2 < 1 | FORM2 > 28
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Check for leap year Feb days
.
VDAT3200  IF        FORM2 < 1 | FORM2 > 29
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
VDAT3900  MOVE      "Day not valid ",ERORDESC
          CALL      DERR0000
          GOTO      VDAT9999
.
VDAT4000  COMPARE   ZERO,DATEFLG2                * any date allowed ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
          BRANCH    DATEFLG2,VDAT5000:           * date cannot be in the future
                             VDAT6000            * date must be in the future
.
.         Make sure the date is not in the future
.
VDAT5000  MATCH     TEMPDATE,CURRDATE
          IF        @LESS
            MOVE      "Cannot be in the future ",ERORDESC
            CALL      DERR0000
          ENDIF
          GOTO      VDAT9999
.
.         Make sure the date is in the future
.
VDAT6000  MATCH     TEMPDATE,CURRDATE
          IF        !@LESS
            MOVE      "Must be in the future ",ERORDESC
            CALL      DERR0000
          ENDIF
.
VDAT9999  RETURN
+
.*****************************************************************************
.*                            DERR0000             Called by: VDAT0000       *
.*                    Process date error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.*****************************************************************************
.
DERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set date error flag
.
DERR9999  RETURN
+
.*****************************************************************************
.*                            VNUM0000             Called by: UPLD0000       *
.*                    Validate numeric fields                                *
.* Returns:  EXIT - 0 = No numeric validation errors                         *
.*                  1 = Numeric validation errors                            *
.*          NUMCOUNT - updated count of records with numeric field errors    *
.*****************************************************************************
.
VNUM0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,VNUM1000            * unit/team record type
.
.         Status numeric field (valid values 0 thru 13)
.
          REP       " 0",LHCPSTAT
.
          TYPE      LHCPSTAT                     * status numeric ?
          GOTO      VNUM0050 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM2
          MOVE      LHCPSTAT,FORM2
          COMPARE   FORM2,TEN3                   * status 0 to 13
          GOTO      VNUM0050 IF LESS             * no - error
          GOTO      VNUM0100                     * yes - valid value
.
VNUM0050  MOVE      "LHCPSTAT",TMPFIELD
          CALL      NERR0000
.
.         Years accreditation numeric field
.
VNUM0100  REP       " 0",LHCPYACC
.
          TYPE      LHCPYACC                     * yrs accreditation numeric ?
          GOTO      VNUM0150 IF NOT EQUAL        * no - error
.
          GOTO      VNUM9000                     * yes - valid value
.
VNUM0150  MOVE      "LHCPYACC",TMPFIELD
          CALL      NERR0000
          GOTO      VNUM9000
.
.         Head of Unit field (valid values 0 or 1)
.
VNUM1000  REP       " 0",LHCPHEAD
.
          TYPE      LHCPHEAD                     * head of unit numeric ?
          GOTO      VNUM1050 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      LHCPHEAD,FORM1
          COMPARE   FORM1,ONE                    * head of unit 0 or 1 ?
          GOTO      VNUM1050 IF LESS             * no - error
          GOTO      VNUM9000                     * yes - valid value
.
VNUM1050  MOVE      "LHCPHEAD",TMPFIELD
          CALL      NERR0000
.
VNUM9000  BRANCH    ERORFLAG,VNUM9100            * errors on number validation
.
          MOVE      ZERO,EXIT                    * no errors on no. validation
          GOTO      VNUM9999
.
VNUM9100  ADD       ONE,NUMCOUNT                 * incr. num. error record count
          MOVE      ONE,EXIT
.
VNUM9999  RETURN
+
.*****************************************************************************
.*                            NERR0000             Called by: VNUM0000       *
.*                    Process number error                                   *
.* Requires: TMPFIELD - field name                                           *
.*****************************************************************************
.
NERR0000  MOVE      "Invalid numeric field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set number error flag
.
NERR9999  RETURN
+
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields.                   *
.*        This validation is performed on the database fields just prior     *
.*        to writing the data and after any mappings have been performed.    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,CVAL0200            * unit/team record type
.
.         Validate hospital - hcp record types
.
          MATCH     SP3,LHCPOSLV                 * blank code ?
          GOTO      CVAL0100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANSL
          PACK      TEMPCODE,LHCPOSLV,SP10
          MOVE      "LHCPOSLV",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (op. superv. level)
          CALL      VCOD0000
.
CVAL0100  MATCH     SP3,LHCPATYP                 * blank code ?
          GOTO      CVAL0200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSA,ANST
          PACK      TEMPCODE,LHCPATYP,SP10
          MOVE      "LHCPATYP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (accred. type)
          CALL      VCOD0000
.
CVAL0200  MATCH     SP3,LHCPHOSP                 * blank code ?
          GOTO      CVAL0300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,LHCPHOSP,SP10
          MOVE      "LHCPHOSP",TMPFIELD
          MOVE      TWO,TEMPTYPE                 * pathspaf (hospital)
          CALL      VCOD0000
.
CVAL0300  MATCH     SP10,LHCPHCPC                * blank code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,LHCPHCPC,SP10
          MOVE      "LHCPHCPC",TMPFIELD
          MOVE      THREE,TEMPTYPE               * pmshcpaf (hcp)
          CALL      VCOD0000
.
          COMPARE   ZERO,TYPEFORM                * Hospital/HCP record ?
          GOTO      CVAL9000 IF EQUAL            * yes
.
.         Validate unit - team record types only
.
          MATCH     SP3,LHCPUNIT                 * blank code ?
          GOTO      CVAL1000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSA,ANSC
          PACK      TEMPCODE,LHCPUNIT,SP10
          MOVE      "LHCPUNIT",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (unit)
          CALL      VCOD0000
.
CVAL1000  MATCH     SP5,LHCPTEAM                 * blank code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,LHCPTEAM,SP10
          MOVE      "LHCPTEAM",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmstemaf (team)
          CALL      VCOD0000
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100            * errors on code validation
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCATG - temporary category variable                          *
.*           TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.*****************************************************************************
.
VCOD0000  BRANCH    TEMPTYPE,VCOD1000:           * patcodes (category-codes)
                             VCOD2000:           * pathspaf (hospitals)
                             VCOD3000:           * pmshcpaf (hcp's)
                             VCOD4000            * pmstemaf (teams)
.
.         Validate a category-coded field (patcodes)
.
VCOD1000  PACK      KEY5,TEMPCATG,TEMPCODE
          CALL      RDCODE1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a hospital field (pathspaf)
.
VCOD2000  MOVE      TEMPCODE,KEY3
          CALL      RDPTHSP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a hcp field (pmshcpaf)
.
VCOD3000  MOVE      TEMPCODE,KEY10
          CALL      RDPMHCP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
.
.         Process 'Inactive' HCP's ?
.
          IF        PRINACTV=0
            MATCH     "1",PMHCSTTS
            GOTO      VCOD9200 IF EQUAL          * 'Inactive' record; error
          ENDIF
          GOTO      VCOD9999                     * yes
.
.         Validate a team field (pmstemaf)
.
VCOD4000  MOVE      TEMPCODE,KEY5
          CALL      RDPMTEM1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
          MOVE      ONE,ERORFLAG                 * set code error flag
          GOTO      VCOD9999
.
VCOD9200  MOVE      "Inactive HCP coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
          MOVE      ONE,ERORFLAG                 * set code error flag
          GOTO      VCOD9999
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: UPLD0000       *
.*                   Print an error detail line               CHKM0000       *
.* Requires: Valid read on PMI records (for name fields)      DERR0000       *
.*           ERORDESC - error description                     TERR0000       *
.*           CLNO - current page line count                   VURN0000       *
.* Returns:  CLNO - updated page line count                   NERR0000       *
.*                                                            VCOD0000       *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          PRINT     *1,PIPE,*3,RECCOUNT,*12,PIPE,*15,LHCPTYPE,*19,PIPE:
                    *21,LHCPHOSP,*27,PIPE,*29,LHCPHCPC,*40,PIPE,*42,ERORDESC:
                    *132,PIPE
          ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CLMLTHCP
          INC       CLPMSTMD
.
          INC       MLTHCPIO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATHSPIO/INC
          INC       PMSHCPIO/INC
          INC       PMSTEMIO/INC
          INC       PMSTMDIO/INC
