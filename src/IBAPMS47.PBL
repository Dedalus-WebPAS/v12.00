.******************************************************************************
.* System         : Patient Management System                                 *
.* Program        : IBAPMS47.PBL                                              *
.* Name           : Eclipse ERA Auto Release and Banking                      *
.******************************************************************************
.* Date           : 05/08/2013                                                *
.* Author         : Peter Vela                                                *
.* Function       : Auto Release of Eclipse ERAs, Cash Reconciliation,        *
.*                : Bank Deposit Listing and Cash Release                     *
.* Modifications  :                                                           *
.* V12.00.01 29/05/2025  Ebon Clements    TSK 0955096                         *
.                        Alphanueric visit number changes                     *
.* V11.04.01 15/03/2024  J.Tan          Task 0919335                          *
.*                       Mod to check HF History file for HF Group            *
.* V10.14.01 20/03/2019  J.Tan            TSK 0857392                         *
.*                       Changed RCP Transaction count from DIM3 to DIM5      *
.* V10.11.01 19/07/2017  Peter Vela    TSK 0831224                            *
.*                       Recompiled for PMSERHFD                              *
.* V10.08.01 24/08/2016  J.Tan         TSK 0819992                            *
.*                       Set RCDTALLO to 2 instead of 0 for Suspense register *
.* V10.07.03 29/01/2016  J.Tan         CAR 303942                             *
.*                       Mods for Payment types                               *
.* V10.07.02 21/12/2015  J.Tan          CAR 0303942                           *
.*                       Mods to setup Payment code                           *
.* V10.07.01 13.10.2016  J.Tan          CAR 321665                            *
.*                       Mods to generating Accounts(GTACCT00) for HSYS1=4    *
.* V10.04.01 15/04/2014  J.Tan          CAR 261630                            *
.*                       Removed port number from temp files                  *
.*                       Removed patauc                                       *
.* V10.03.04  16/08/2013 Peter Vela  CAR 259795                               *
.*                       Added reads for RCCNERRE,RCCNERRS,RCCNERCD,RCCNERCA  *
.* V10.03.03  15/08/2013 Peter Vela  CAR 259795                               *
.*                       Added PATMX1A1                                       *
.* V10.03.02  09/08/2013 Peter Vela  CAR 259795                               *
.*                       Added validation for no eclipse banking              *
.* V10.03.01  05/08/2013 Peter Vela  CAR 259795                               *
.*                       Created program                                      *
.******************************************************************************
+
          INC       STD001FD
.
          INC       RSHWEBDF
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
          INC       IBAPRNFD/INC
          INC       AAEDE1FD/INC
          INC       EMRVISFD/INC
          INC       FMSCSAFD/INC
          INC       FMSLMAFD/INC 
          INC       OUTSITFD/INC
          INC       OUTBOAFD/INC
          INC       OUTBB1FD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDTRFD/INC
          INC       PATDDHFD/INC
          INC       PATFN1FD/INC
          INC       PATFX1FD/INC
          INC       PATHFRFD/INC
          INC       PATHSPFD/INC
          INC       PATINVFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATUREFD/INC
          INC       PATVISFD/INC
          INC       PMSEAHFD/INC
          INC       PMSECAFD/INC
          INC       PMSECTFD/INC
          INC       PMSERHFD/INC
          INC       PMSERDFD/INC
          INC       PMSVX1FD/INC
          INC       RCPBDTFD/INC 
          INC       RCPBNKFD/INC
          INC       RCPDTEFD/INC
          INC       RCPCONFD/INC
          INC       RCPREGFD/INC
          INC       WEBCONFD/INC
          INC       WEBSECFD/INC
          INC       WEBSCHFD/INC
.
. ----- Program Variables -----
.
ACCNO     DIM       12
ADMINO    DIM       8
.
BANKINDC  DIM       1
.
CMDLINE   DIM       80
CURRDATE  DIM       8
CURRTIME  DIM       8
.
DIM1C     DIM       1
DIM5      DIM       5
DIM7      DIM       7
DIM8      DIM       8
DIM10     DIM       10
DIM12     DIM       12
DIM20     DIM       20
.
ECLCSHDR  DIM       6
ERASE     INIT      "iserase "
ERASUSIN  FORM      1
ERDCOUNT  FORM      8
ERRCT     FORM      5
ERRFLG    FORM      1
ERRMSG    DIM       105
.
FNAME     INIT      "pms47a"
FORM5     FORM      5
FORM7P2C  FORM      7.2
FORM10P2  FORM      10.2
FORM12    FORM      12
FORM12P2  FORM      12.2
FULLSTOP  INIT      "."
FUNDTRID  DIM       24
.
HOSPCODE  DIM       3
.
IBCNMHOS  FORM      1
ISBUILD   INIT      "isbuild "
INCMACCT  DIM       14
INVNO     DIM       8
.
LEDNO     DIM       2
.
MULTLT01  DIM       1
.
PRLCOUNT  FORM      8
PARTNUMB  DIM       4
PIPE      INIT      "|"
.
REMITKEY  DIM       61
REMITADV  DIM       30
REPTTYPE  DIM       1
.
SAVELOCN  DIM       8
SAVEPART  DIM       3
SAVKEY12  DIM       12
SAVKEY69  DIM       69
SEC1      FORM      "00001"
SERDIM50  DIM       50
SHRTNAME  DIM       25
SUMMOPYN  DIM       1
.
RELCOUNT  FORM      8
REMPAGBR  DIM       1
.
TEMPFILE  DIM       8
.
UKEY      INIT      " 86 U1-24 U83-85,1-24"
UNLKFLAG  FORM      1
USERID    DIM       10
.
VAR       DIM       127
VALDFLG   FORM      1
.
.         Temporary File Definition
.         -------------------------
.
.         Filename : pms07axx.dat          (xx = port id)
.
ECLTEMP1  IFILE SQL, FIXED=86, KEY="U1-24"
ECLTEMP2  IFILE SQL, FIXED=86, KEY="U83-85,1-24"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
.PMEDTRID DIM       24         24           1       Transaction ID
.PMEDFTID DIM       24         24          25       Fund Transaction ID
.PMEDRADV DIM       30         30          49       Remittance Advice ID
.PMEDPNUM DIM       4           4          79       Part Number
PARTPANT  DIM       3           3          83       Participant
.
.End of Record                             86
.
. ----- Program Constants -----
.
PRGID     INIT      "IBAPMS47"
PRGNAM    INIT      "Eclipse ERA Auto Release and Banking"
VERSION   INIT      "V12.00.01"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                                 Main Module                                *
.******************************************************************************
ML0000    CALL      INIT0000                * Initialise variables & open files
ML1000    CALL      OPTN0000                * Choose main option
          BRANCH    EXIT,ML9999
.
ML2000    KEYIN     *P1:9,*EF,*P1:9,"WEB User ID              : ",*V2LON,USERID
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,ML9000
.
       KEYIN     *P1:10,*EF,*P1:10,"Report Type              : ",*V2LON,REPTTYPE
       KEYIN     *P1:11,*EF,*P1:11,"Cashier Drawer (Eclipse) : ",*V2LON,ECLCSHDR
       KEYIN     *P1:12,*EF,*P1:12,"Summary Option           : ",*V2LON,SUMMOPYN
       KEYIN     *P1:13,*EF,*P1:13,"Remove Page Breaks       : ",*V2LON,REMPAGBR
.
          CALL      CONTQST                 * Ok to continue (Y/N/C) ?
          BRANCH    CEXIT,ML4000,ML2000,ML1000
          GOTO      ML1000
.
ML4000    CALL      PROC0000                * Process the files
          GOTO      ML1000
.
ML9000    DISPLAY    *P1:24,"Invalid User ID";
          CALL       HITENTER
          GOTO       ML1000
.
ML9999    CHAIN     PGM
+
.******************************************************************************
.*                                   INIT0000             Called by: ML0000   *
.*                        Initialise Variable & Open Files                    *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
.
          DISPLAY   *P56:24,"Opening emrvisaf";
          OPEN      EMRVISA1,"emrvisaf"
.
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P56:24,"Opening outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P56:24,"Opening pmseahaf";
          OPEN      PMSEAHA2,"pmseahaf"
.
          DISPLAY   *P56:24,"Opening pmsecaaf";
          OPEN      PMSECAA1,"pmsecaaf"
.
          DISPLAY   *P56:24,"Opening pmsectaf";
          OPEN      PMSECTA1,"pmsectaf"
          OPEN      PMSECTA2,"pmsectaf"
          OPEN      PMSECTA3,"pmsectaf"
          OPEN      PMSECTA5,"pmsectaf"
          OPEN      PMSECTA6,"pmsectaf"
.
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
          OPEN      PATCODE2,"patcodes"
.
          DISPLAY   *P56:24,"Opening patdtraf";
          OPEN      PATDTRA1,"patdtraf"
.
          DISPLAY   *P56:24,"Opening pmsfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P56:24,"Opening pmsfx1af";
          OPEN      PATFX1A1,"patfx1af"
.
          DISPLAY   *P56:24,"Opening pathfraf";
          OPEN      PATHFRE1,"pathfrec"
.
          DISPLAY   *P56:24,"Opening pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P56:24,"Opening patinvrf";
          OPEN      PATINVR1,"patinvrf"
.
          DISPLAY   *P56:24,"Opening patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P56:24,"Opening patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P56:24,"Opening patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A2,"patmi1af"
          OPEN      PATMI1A6,"patmi1af"
          OPEN      PATMI1A8,"patmi1af"
.
          DISPLAY   *P56:24,"Opening pmserhaf";
          OPEN      PMSERHA1,"pmserhaf"
          OPEN      PMSERHA2,"pmserhaf"
.
          DISPLAY   *P56:24,"Opening pmserdaf";
          OPEN      PMSERDA1,"pmserdaf"
          OPEN      PMSERDA2,"pmserdaf"
.
          DISPLAY   *P56:24,"Opening patureaf";
          OPEN      PATUREA1,"patureaf"
.
          DISPLAY   *P56:24,"Opening pmsvisaf";
          OPEN     PATVISA1,"patvisaf"
.
          DISPLAY   *P56:24,"Opening pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P56:24,"Opening rcpbdtaf";
          OPEN      RCPBDTA1,"rcpbdtaf"
.
          DISPLAY   *P56:24,"Opening rcpbnkaf";
          OPEN      RCPBNKA1,"rcpbnkaf"
.
          DISPLAY   *P56:24,"Opening rcpdteaf";
          OPEN      RCPDTEA1,"rcpdteaf"
          OPEN      RCPDTEA3,"rcpdteaf"
.
          DISPLAY   *P56:24,"Opening rcpregaf";
          OPEN      RCPREGA1,"rcpregaf"
.
          DISPLAY   *P56:24,"Opening websecaf";
          OPEN      WEBSECA1,"websecaf"
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN3;*194,CVETINS
          READ      CONTROLF,THIRTY6;*86,HSYS1:
                                     *229,RCCNERRE,*232,RCCNERCD,*239,RCCNERRS
          READ      CONTROLF,HUND08;*81,RCCNERCA
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
INIT9000  MOVE      ZERO,EXIT
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: ML0000   *
.*                                Choose Option                               *
.******************************************************************************
OPTN0000  MOVE      ZERO,OPTION
          MOVE      ZERO,CPAGENO            * Reset the page no
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Eclipse ERA Release":
                    *P1:7,"Select Option : ";
OPTN1000  KEYIN     *P17:7,*V2LON,*DV,UNDLN2,*P17:7,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    OPTION,OPTN9000
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
OPTN9999  RETURN
+
.******************************************************************************
.*                                  PROC0000              Called by: ML0000   *
.*                              Process TRAN File                             *
.******************************************************************************
PROC0000  MOVE      ZERO,BANKINDC
.
          PACK      KEY69,Z70
          CALL      RSPMERH2                     * position in file
PROC1000  CALL      RPPMERH2                     * read next record
          BRANCH    OVRCD,PROC5000               * end of file 
.
          MATCH     "0",PMEHSTAT
          GOTO      PROC1000 IF NOT EQUAL
.
          MOVE      ONE,BANKINDC
.
          PACK      SAVKEY69,PMEHHOSP,PMEHDATE,PMEHFTID,PMEHRADV,PMEHPNUM,SP70 
.
          CALL      CREA0000
          CALL      RPAY0000 
          CALL      KILL0000
.
          PACK      KEY69,SAVKEY69,SP70
          CALL      RDPMERH2
.
          GOTO      PROC1000
.
PROC5000  MATCH     "0",BANKINDC
          GOTO      PROC9999 IF EQUAL
.
          CALL      CSHREC00
          CALL      BNKDEP00
.
PROC9999  RETURN
+
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             Create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      ECLTEMP1,TEMPFILE            * open temp index 1
          OPEN      ECLTEMP2,TEMPFILE            * open temp index 2
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     ECLTEMP1                     * close file
          CLOSE     ECLTEMP2
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*                              CLER0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
CLER0000  MOVE      SP30,KEY24
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CLER9999               * eof - finished
.
          MOVE      PMEDTRID,KEY24
          CALL      DETEMP1                      * delete current record
          GOTO      CLER0000                     * get next record
.
CLER9999  RETURN
+
.*****************************************************************************
.*                                 LTMP0000        Called by: RPAY0000       *
.*    Load the temp file with the pmserdaf records which correspond to the   *
.*    selected pmserhaf record.                                              *
.*    We need to use the temp file so that we can sort by participant code.  *
.*    Some health fund groups (e.g. BUPA), may send payments in a single     *
.*    remittance, relating to more than one participant (e.g HBA & MBF).     *
.*    When processing the payments, a receipt number needs to be generated   *
.*    for each participant.                                                  *
.* Requires:  Valid read on pmserhaf record                                  *
.*            ERDCOUNT - initialised to zero                                 *
.* Returns:   ERDCOUNT - total number of pmserdaf records related to the     *
.*                       selected remittance.                                *
.*****************************************************************************
.
LTMP0000  PACK      KEY82,PMEHFTID,PMEHRADV,PMEHPNUM,SP30,SP30,SP30
          CALL      RSPMERD1                     * position in file
LTMP0500  CALL      RKPMERD1                     * read next record
          BRANCH    OVRCD,LTMP9999               * end of file
.
          MATCH     PMEHFTID,PMEDFTID            * same fund trans. id still ?
          GOTO      LTMP9999 IF NOT EQUAL        * no - finished ERA
.
          MATCH     PMEHRADV,PMEDRADV            * same remittance advice still?
          GOTO      LTMP9999 IF NOT EQUAL        * no - finished ERA
.
          MATCH     PMEHPNUM,PMEDPNUM            * same part number still ?
          GOTO      LTMP9999 IF NOT EQUAL        * no - finished ERA
.
          ADD       ONE,ERDCOUNT                 * increment pmserdaf count
.
.         A payment requiring releasing has been found, so get the
.         corresponding pmsectaf record.
.
          PACK      KEY40,PMEDTRID,SP30,SP10
          CALL      RSPMECT6                     * position on trans. id/invoice
          CALL      RKPMECT6                     * read next record
          BRANCH    OVRCD,LTMP1100               * eof
.
          MATCH     PMEDTRID,PMECTRID            * same transaction id still ?
          GOTO      LTMP1500 IF EQUAL            * yes
.
LTMP1100
.         DISPLAY   *P1:24,*EL,*B,"Missing pmsectaf record for ":
.                   *V2LON,PMEDTRID,*HOFF,".  ";
.         CALL      HITENTER
          GOTO      LTMP3000
.
.         Get the participant code for the claim
.
LTMP1500  MOVE      CVETINS,PARTPANT             * default part. to DVA
          BRANCH    PMECEETP,LTMP5000            * DVA claim
.
.         This is a Health Fund claim
.
          PACK      KEY14,PMECHFND,ZERO,ZERO,ZERO,ZERO,SP20
          CALL      RDFUND1
          IF        OVRCD = 1
.           DISPLAY   *P1:24,*EL,*B,"Missing patfundf record for ":
.                     *V2LON,PMECHFND,*HOFF,".  ";
.           CALL      HITENTER
            GOTO      LTMP8000
          ENDIF
.
          PACK      KEY6,PMECHFND,SP70
          CALL      RDPTFX11
          IF        OVRCD=1
            GOTO      LTMP2000
          ENDIF
.
          MATCH     SP3,PTFXECLP
          GOTO      LTMP2000 IF EQUAL
          GOTO      LTMP2000 IF EOS
.
          MOVE      PTFXECLP,PARTPANT
          GOTO      LTMP5000
.
.         The health fund group equates to the participant
.
LTMP2000  MOVE      "02",KEY2               * check HF history for HF Group
          PACK      KEY17,PMECHFND,KEY2,SP70
          CALL      PATDDHRD
.
          MATCH     SP3,PTHFHGRP
          IF        @EQUAL
.           DISPLAY   *P1:24,*EL,*B,"Participant code blank for ":
.                     *V2LON,PMECHFND,*HOFF,".  ";
.           CALL      HITENTER
            GOTO      LTMP8000
          ENDIF
          MOVE      PTHFHGRP,PARTPANT            * load participant code
          GOTO      LTMP5000
.
LTMP3000  MOVE      PMEDARID,KEY8
          RJUSTIFY  KEY8
          PACK      KEY8,KEY8,SP70
          CALL      RDPTINV1
          COMPARE   OVRCD,ONE
          GOTO      LTMP3500 IF EQUAL
.
          MATCH     SP70,DPINVADM
          GOTO      LTMP8000 IF EQUAL
          GOTO      LTMP8000 IF EOS
.
          PACK      KEY8,DPINVADM,SP70
          CALL      RDPTMIS1
          IF        OVRCD=1
            GOTO      LTMP8000
          ENDIF
.
.         Get the participant code for the claim
.
LTMP3500  MOVE      CVETINS,PARTPANT
          PACK      KEY5,ANSC,ANSL,ACLAIM
          CALL      RDCODE1
          IF        OVRCD=0
            MOVE      ZERO,FORM1
            WHILE     FORM1 < 5
              ADD       ONE,FORM1
              LOAD      ANS,FORM1,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
              MATCH     ANSV,ANS
              IF        @EQUAL
                GOTO      LTMP5000
              ENDIF
            DO
          ENDIF
.
          MATCH     SP70,AFUNDH
          GOTO      LTMP8000 IF EQUAL
          GOTO      LTMP8000 IF EOS
.
.         This is a health fund claim
.
          PACK      KEY14,AFUNDH,ZERO,ZERO,ZERO,ZERO,SP20
          CALL      RDFUND1
          IF        OVRCD=1
            GOTO      LTMP8000
          ENDIF
.
          PACK      KEY6,AFUNDH,SP70
          CALL      RDPTFX11
          IF        OVRCD=1
            GOTO      LTMP4000
          ENDIF
.
          MATCH     SP3,PTFXECLP
          GOTO      LTMP4000 IF EQUAL
          GOTO      LTMP4000 IF EOS
.
          MOVE      PTFXECLP,PARTPANT
          GOTO      LTMP5000
.
.         The health fund group equates to the participant
.
LTMP4000  MOVE      "02",KEY2               * check HF history for HF Group
          PACK      KEY17,AFUNDH,KEY2,SP70
          CALL      PATDDHRD
.
          MATCH     SP3,PTHFHGRP
          IF        @EQUAL
            GOTO      LTMP8000
          ENDIF
.
          MOVE      PTHFHGRP,PARTPANT
          GOTO      LTMP5000
.
.         Write the pmserdaf details to the temp file
.
LTMP5000  CALL      WRTEMP1
          GOTO      LTMP0500                     * get next payment
.
.         There was a problem processing this record, so set the pmserdaf
.         payment status to "locked"
.
LTMP8000  MOVE      "1",PMEDSTAT
          CALL      UPPMERD1
          GOTO      LTMP0500
.
LTMP9999  RETURN
+
.*****************************************************************************
.*                                UNLK0000         Called by: RPAY0000       *
.*               Unlock claim related records after releasing payments       *
.* Requires: UNLKFLAG - unlock flag                                          *
.*                      1 = patvisaf, patinvrf & pathfrec                    *
.*                      2 = patinvrf & pathfrec                              *
.*                      3 = pathfrec                                         *
.*****************************************************************************
.
UNLK0000  BRANCH    UNLKFLAG,UNLK1000:
                             UNLK2000:
                             UNLK3000
.
UNLK1000  CALL      UUPTVIS1                     * unlock visit record
.
UNLK2000  CALL      UUPTINV1                     * unlock invoice record
.
.         Unlock the pathfrec record
.
UNLK3000  MOVE      PMECINVN,KEY8
          CALL      RDHFRE1                      * HF receipts record found ?
          BRANCH    OVRCD,UNLK9999               * no
.
          MOVE      ZERO,HFRSTAT                 * set the status to 'free'
          CALL      UPHFRE1
.
UNLK9999  RETURN
+
.------------------------------------------------------------------------------
. Allocate New Receipt Number
.------------------------------------------------------------------------------
.
ALLCRC00  READ      CONTROLF,THIRTY6;*193,HRECPT
          ADD       ONE,HRECPT
          WRITAB    CONTROLF,THIRTY6;*193,HRECPT
          SUB       ONE,HRECPT
.
          MOVE      HRECPT,KEY12
          CALL      RDRCBNK1
          COMPARE   ZERO,OVRCD
          GOTO      ALLCRC00 IF EQUAL
.
ALLCRC99  RETURN
+
.------------------------------------------------------------------------
. Get Control Account Details
.------------------------------------------------------------------------
GETC0000  UNPACK    INCMACCT,LEDNO,ACCNO
          PACK      KEY2,LEDNO
          CALL      RDFMLA1              * Ledger Master Details
          MOVE      FMLABNK,FMCSBNK
          MOVE      FMLADEB,FMCSDEB
          MOVE      FMLAAGST,FMCSAGST
.
          PACK      KEY14,INCMACCT,SP70
          CALL      RDFMCS1              * Selected Control Accounts
          BRANCH    OVRCD,GETC9000
.
          MATCH     SP70,FMCSBNK
          GOTO      GETC0010 IF NOT EQUAL
.
          MOVE      FMLABNK,FMCSBNK
.
GETC0010  MATCH     SP70,FMCSDEB
          GOTO      GETC0020 IF NOT EQUAL
.
          MOVE      FMLADEB,FMCSDEB
.
GETC0020  MATCH     SP70,FMCSAGST
          GOTO      GETC9999 IF NOT EQUAL
.
          MOVE      FMLAAGST,FMCSAGST
.
          GOTO      GETC9999
.
GETC9000  MOVE      FMLABNK,FMCSBNK
          MOVE      FMLADEB,FMCSDEB
          MOVE      FMLAAGST,FMCSAGST
.
GETC9999  RETURN
+
.------------------------------------------------------------------------------
.  Get Income account and Control Account
.------------------------------------------------------------------------------
GTACCT00  PACK      KEY3,RCDTREGI,SP70
          CALL      RDREGA1
          BRANCH    OVRCD,GTACCT80
.         MOVE      REGHOSP,RCDTMHOS       * Hospital id
          MOVE      REGGST,RCDTGSTC        * GST Code
.
          COMPARE   FIVE,HSYS1
          GOTO      GTACCT20 IF EQUAL      * Using Integra Extended
          COMPARE   FOUR,HSYS1
          GOTO      GTACCT20 IF EQUAL      * Using Comma Delimeted
          COMPARE   TWO,HSYS1
          GOTO      GTACCT20 IF EQUAL      * Using Other FMS - get Acc.from Reg.
          COMPARE   THREE,HSYS1
          GOTO      GTACCT20 IF EQUAL      * Using Other FMS - for Integra
.
          MATCH     SP20,REGGENLD
          GOTO      GTACCT80 IF EQUAL
          GOTO      GTACCT80 IF EOS
.
          MOVE      REGGENLD,RCDTINCA
          MOVE      REGGENLD,INCMACCT
          CALL      GETC0000              * Get Control Account Details
          PACK      RCDTBNKA,FMLALEDG,FMCSBNK
          GOTO      GTACCT99
.
.         Get Credit and Bank Account from Register record
.
GTACCT20  MOVE      REGGENDB,RCDTINCA       * Debtors Control account as Crd.Acc
          MOVE      REGGENBK,RCDTBNKA       * Debit account
          GOTO      GTACCT99
.
GTACCT80  MOVE      SP70,RCDTINCA
          MOVE      PMEHBNUM,RCDTBNKA
          GOTO      GTACCT99
.
GTACCT99 RETURN
+
.---------------------------------------------------------------------------
.         WRRDTE00 - Write to rcpdteaf
.---------------------------------------------------------------------------
.
WRRDTE00  CALL      IBACLOCK
          PACK      RCDTTDAT,CCC,CYY,CMM,CDD
          REP       " 0",RCDTTDAT
          MOVE      HRECPT,RCDTRECN
.         MOVE      "    1",RCDTTCNT
.         MOVE      PMEDARID,RCDTINVN
          PACK      RCDTINVN,PMEDARID,SP70
          RJUSTIFY  RCDTINVN
          MOVE      PMECADMN,RCDTVIST
          MOVE      PMECURNO,RCDTURNO
          MOVE      PMECURNO,KEY8
          CALL      RDMAST1
          IF        OVRCD = 0
            MOVE      PSNAME,PACSNAME
            MOVE      PGNAME,PACGNAME
            MOVE      PTITL,PACTITLE
            MOVE      TWO,PACFRMT
            CALL      PACNAME
            MOVE      PACFNAME,RCDTNAME
            MOVE      PADD1,RCDTADD1
            MOVE      PADD2,RCDTADD2
            MOVE      PSUBRB,RCDTADD3
            MOVE      PADD4,RCDTADD4
            MOVE      PPOST,RCDTPOST
          ELSE
            MOVE      SP70,RCDTNAME
            MOVE      SP70,RCDTADD1
            MOVE      SP70,RCDTADD2
            MOVE      SP70,RCDTADD3
            MOVE      SP70,RCDTADD4
            MOVE      SP70,RCDTPOST
          ENDIF
          MOVE      SP70,RCDTSFLG
          MOVE      PMEHPREF,RCDTREFR
          MOVE      PMEHHOSP,RCDTMHOS
.
          MOVE      RCCNERRE,RCDTREGI
          IF        IBCNMHOS=1
.
            MATCH     SP70,RCDTMHOS
            IF        !@EQUAL & !@EOS
              PACK      KEY3,RCDTMHOS,SP70
              CALL      RDPTHSP1
              IF        OVRCD=0
                MATCH     SP70,PTHSERRE
                IF        !@EQUAL & !@EOS
                  MOVE      PTHSERRE,RCDTREGI
                ENDIF
              ENDIF
            ENDIF
.
            PACK      KEY8,PMECADMN,SP70
            CALL      RDPMVX11
            IF        OVRCD=0
              MATCH     SP70,PMVXMHOS
              IF        !@EQUAL & !@EOS
                PACK      KEY3,PMVXMHOS,SP70
                CALL      RDPTHSP1
                IF        OVRCD=0
                  MATCH     SP70,PTHSERRE
                  IF        !@EQUAL & !@EOS
                    MOVE      PTHSERRE,RCDTREGI
                    MOVE      PMVXMHOS,RCDTMHOS
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
.
          ENDIF
.
          MOVE      SP70,RCDTGSTC
          CALL      GTACCT00
.
          UNPACK    PMEDBAMT,DIM7,DIM2
          PACK      DIM10,DIM7,FULLSTOP,DIM2
          MOVE      ZERO,FORM7P2C
.
          SCAN      "-",DIM10
          IF        @EQUAL
            REP        "-0",DIM10
            MOVE       DIM10,FORM7P2C
            ASSIGN     (FORM7P2C*SEQ),FORM7P2C
          ELSE
            MOVE      DIM10,FORM7P2C
          ENDIF
          MOVE      FORM7P2C,RCDTAMNT
.
          MOVE      ZERO,RCDTDISC
          MOVE      CHOSPNUM,RCDTMDHS
          MOVE      SP70,RCDTGSTA
          MOVE      SP70,RCDTALLO
          CALL      IBACLOCK
.         PACK      RCDTRELD,CCC,CYY,CMM,CDD
.         REP       " 0",RCDTRELD
.         MOVE      CTIMEIS,RCDTRELT
          MOVE      SP70,RCDTRELD
          MOVE      SP70,RCDTRELT
          PACK      RCDTCDAT,CCC,CYY,CMM,CDD
          REP       " 0",RCDTCDAT
          MOVE      SP70,RCDTPRAC
          MOVE      CTIMEIS,RCDTCTIM
          MOVE      WBSEUID,RCDTCUID
          MOVE      SP70,RCDTUDAT
          MOVE      SP70,RCDTUTIM
          MOVE      SP70,RCDTUUID
          MOVE      SP70,RCDTDPTY
          MOVE      SP70,RCDTGLEX
          MOVE      PMECBATN,RCDTBATN
          MOVE      SP70,RCDTSPAR
.
          PACK      KEY17,RCDTRECN,RCDTTCNT,SP70
          CALL      WRRCDTE1
.
WRRDTE99  RETURN
+
.-------------------------------------------------------------------------------
.         Check if invoice is reconciled after input journal
.-------------------------------------------------------------------------------
CREC0000  MOVE      ZERO,FORM10P2
          CALL      RDPTINV1
          BRANCH    OVRCD,CREC9999
.
          MOVE      PINVNO,FORM12
          MOVE      FORM12,SAVKEY12
          PACK      KEY29,SAVKEY12,SP70
          CALL      RSRCDTE3
CREC1000  CALL      RKRCDTE3
          BRANCH    OVRCD,CREC2000
.
          MATCH     SAVKEY12,RCDTINVN       * Same invoice number?
          GOTO      CREC2000 IF NOT EQUAL
.
          MOVE      RCDTREGI,KEY3
          CALL      RDREGA1
          BRANCH    OVRCD,CREC1000
.
          BRANCH    REGIBACD,CREC1200      * Patient billing
          COMPARE   "97",REGIBACD
          GOTO      CREC1000 IF NOT EQUAL  * NOT IP Deposits
.
CREC1200  PACK      KEY12,RCDTRECN,SP70
          CALL      RDRCBNK1
          BRANCH    OVRCD,CREC1000
          MATCH     "1",RCBNSTAT
          GOTO      CREC1000 IF EQUAL       * Receipt cancelled
.
          ADD       RCDTAMNT,FORM10P2       * payment
          GOTO      CREC1000
.
CREC2000  MOVE      PINVAMT,FORM12P2      * Invoice amount +
          SUB       FORM10P2,FORM12P2     * Payments
          ADD       PTINCRTT,FORM12P2     * Credit Notes +
          ADD       PINVJOUR,FORM12P2     * Journals = amount outstanding
          ADD       PTINGSTJ,FORM12P2     * Journal GST = amount outstanding
.
          CALL      GDET0000              * Get patient's Claim and Health Fund
          CALL      RECN0000              * Update Unreconciled invoice
.
CREC9999  RETURN
+
.-------------------------------------------------------------------------------
.         Get patient's Claim and Health fund
.-------------------------------------------------------------------------------
GDET0000  MOVE      PINVUR,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,GDET9999

          BRANCH    PINVSYS OF GDET1000,GDET2000,GDET3000
          GOTO      GDET9999
.
.         Emergency invoice
.
GDET1000  OPEN      AAEDE1A1,"aaede1af"
          MOVE      PINVADM,KEY8
          CALL      RDEMVIS1
          BRANCH    OVRCD,GDET9999
.
          CALL      RDDETA1
          BRANCH    OVRCD,GDET9999
.
          MOVE      EMVICOMP,ACLAIM
          MOVE      PFUNDH,AFUNDH
          MOVE      PFNDTB,AFNDTB
          GOTO      GDET9999
.
.         Outpatient invoice
.
GDET2000  MOVE      "out",OSTFILE
          MOVE      PINVSITE,KEY6
          CALL      RDSITA1                 * Get the file header for this site
.
          PACK      CFNAME WITH OSTFILE,FILBB1A1
          CALL      OPOTBB11
.
          MOVE      PINVADM,KEY8
          CALL      RDBOKB1
          BRANCH    OVRCD,GDET9999
.
          MOVE      OBACOMP,ACLAIM
          MOVE      OTBBFUND,AFUNDH
          MOVE      OTBBTBLE,AFNDTB
          GOTO      GDET9999

GDET3000  MOVE      PINVADM,KEY8
          CALL      RDPTMIS1
.
GDET9999  RETURN
+
.-------------------------------------------------------------------------------
.         If invoice balanced, removed record from Unreconciled invoice file
.         if invoice not balanced, write or update the Unreconciled invoice file
.-------------------------------------------------------------------------------
RECN0000  PACK      KEY8,PINVNO
          CALL      RDPTURE1
.
          CALL      IBACLOCK
          IF        FORM12P2=0
            IF        OVRCD=0
              CALL      DEPTURE1              * Delete Un-reconciled record
            ENDIF
          ELSE
            IF        OVRCD=0
              MOVE      PTINCRTT,PTURJRNL     * Credit Notes +
              ADD       PINVJOUR,PTURJRNL     * Journals = amount outstanding
              ADD       PTINGSTJ,PTURJRNL     * Journal GST = amount outstanding
              MOVE      FORM12P2,PTUROSTD     * Outstanding amount
.
.          Update PTURCDAT/PTURCTIME when updating intead of PTURUDAT/PTURUTIM
.
              PACK      PTURCDAT,CCC,CYY,CMM,CDD
              REP       " 0",PTURCDAT
              MOVE      CTIMEIS,PTURCTIM
              MOVE      WBSEUID,PTURCUID        * WEB user id
              CALL      UPPTURE1              * Update outstanding amount
            ELSE
              CALL      SETU0000              * Setup Unreconciled inv.fields
              CALL      WRPTURE1
            ENDIF
          ENDIF
.
RECN9999  RETURN
+
.------------------------------------------------------------
.         Setup fields for the Unreconciled invoices file
.------------------------------------------------------------
SETU0000  MOVE      PINVNO,PTURINVN
          MOVE      PINVADM,PTURVISN
          MOVE      "0",PTURSTAT                * New status
          MOVE      PINVSYS,PTURSYST
          MOVE      ACLAIM,PTURCLMN
          MOVE      AFUNDH,PTURHFND
          MOVE      AFNDTB,PTURHTAB
.
          MOVE      PINVAMT,PTURINVT     * Invoice total
          MOVE      PINVPATA,PTURPAYM    * Patient payments +
          ADD       PINVHFDA,PTURPAYM    * H.F payments +
          ADD       PINVOTHA,PTURPAYM    * Other payments +
.
          MOVE      PTINCRTT,PTURJRNL    * Credit Notes +
          ADD       PINVJOUR,PTURJRNL    * Journals = amount outstanding
          ADD       PTINGSTJ,PTURJRNL    * Journal GST = amount outstanding
          MOVE      FORM12P2,PTUROSTD    * Outstanding amount
.
          CALL      IBACLOCK
          PACK      PTURCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PTURCDAT
          MOVE      CTIMEIS,PTURCTIM
          MOVE      WBSEUID,PTURCUID        * WEB user id
.
          PACK      PTURUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PTURUDAT
          MOVE      CTIMEIS,PTURUTIM
          MOVE      WBSEUID,PTURUUID        * WEB user id
.
SETU9999  RETURN
+
.---------------------------------------------------------------------------
.         WRRDTS00 - Write to rcpdteaf suspense account
.---------------------------------------------------------------------------
.
WRRDTS00  CALL      IBACLOCK
          PACK      RCDTTDAT,CCC,CYY,CMM,CDD
          REP       " 0",RCDTTDAT
          MOVE      HRECPT,RCDTRECN
.         MOVE      "    1",RCDTTCNT
.         MOVE      PMEDARID,RCDTINVN
.         PACK      RCDTINVN,PMEDARID,SP70
.         RJUSTIFY  RCDTINVN
          MOVE      SP70,RCDTINVN
          MOVE      SP70,RCDTVIST
          MOVE      SP70,RCDTURNO
.         MOVE      PMECURNO,KEY8
.         CALL      RDMAST1
.         IF        OVRCD = 0
.           MOVE      PSNAME,PACSNAME
.           MOVE      PGNAME,PACGNAME
.           MOVE      PTITL,PACTITLE
.           MOVE      TWO,PACFRMT
.           CALL      PACNAME
.           MOVE      PACFNAME,RCDTNAME
.           MOVE      PADD1,RCDTADD1
.           MOVE      PADD2,RCDTADD2
.           MOVE      PSUBRB,RCDTADD3
.           MOVE      PADD4,RCDTADD4
.           MOVE      PPOST,RCDTPOST
.         ELSE
            REP       "#" ",SERDIM50
            MOVE      SERDIM50,RCDTNAME
            MOVE      SP70,RCDTADD1
            MOVE      SP70,RCDTADD2
            MOVE      SP70,RCDTADD3
            MOVE      SP70,RCDTADD4
            MOVE      SP70,RCDTPOST
.         ENDIF
          MOVE      SP70,RCDTSFLG
          MOVE      PMEHPREF,RCDTREFR
          MOVE      PMEHHOSP,RCDTMHOS
.
          MOVE      RCCNERRS,RCDTREGI
.         IF        IBCNMHOS=1
.           MATCH     SP70,RCDTMHOS
.           IF        !@EQUAL & !@EOS
.             PACK      KEY3,RCDTMHOS,SP70
.             CALL      RDPTHSP1
.             IF        OVRCD=0
.               MATCH     SP70,PTHSERRE
.               IF        !@EQUAL & !@EOS
.                 MOVE      PTHSERRE,RCDTREGI
.               ENDIF
.             ENDIF
.           ENDIF
.         ENDIF
.
          MOVE      SP70,RCDTGSTC
          CALL      GTACCT00
.
          MOVE      SP70,DIM2
          MOVE      SP70,DIM7
          MOVE      SP70,DIM10
.
          UNPACK    PMEDBAMT,DIM7,DIM2
          PACK      DIM10,DIM7,FULLSTOP,DIM2
          MOVE      ZERO,FORM7P2C
.
          SCAN      "-",DIM10
          IF        @EQUAL
            REP        "-0",DIM10
            MOVE       DIM10,FORM7P2C
            ASSIGN     (FORM7P2C*SEQ),FORM7P2C
          ELSE
            MOVE      DIM10,FORM7P2C
          ENDIF
          MOVE      FORM7P2C,RCDTAMNT
.
          MOVE      ZERO,RCDTDISC
          MOVE      CHOSPNUM,RCDTMDHS
          MOVE      SP70,RCDTGSTA
          MOVE      "2",RCDTALLO
          CALL      IBACLOCK
.         PACK      RCDTRELD,CCC,CYY,CMM,CDD
.         REP       " 0",RCDTRELD
.         MOVE      CTIMEIS,RCDTRELT
          MOVE      SP70,RCDTRELD
          MOVE      SP70,RCDTRELT
          PACK      RCDTCDAT,CCC,CYY,CMM,CDD
          REP       " 0",RCDTCDAT
          MOVE      SP70,RCDTPRAC
          MOVE      CTIMEIS,RCDTCTIM
          MOVE      WBSEUID,RCDTCUID
          MOVE      SP70,RCDTUDAT
          MOVE      SP70,RCDTUTIM
          MOVE      SP70,RCDTUUID
          MOVE      SP70,RCDTDPTY
          MOVE      SP70,RCDTGLEX
          MOVE      SP70,RCDTBATN
          MOVE      SP70,RCDTSPAR
.
          PACK      KEY17,RCDTRECN,RCDTTCNT,SP70
          CALL      WRRCDTE1
.
WRRDTS99  RETURN
+
.*****************************************************************************
.*                                UNLS0000         Called by: RPAY0000       *
.*               Unlock claim related records after releasing payments       *
.* Requires: UNLKFLAG - unlock flag                                          *
.*                      1 = patvisaf, patinvrf & pathfrec                    *
.*                      2 = patinvrf & pathfrec                              *
.*                      3 = pathfrec                                         *
.*****************************************************************************
.
UNLS0000  BRANCH    UNLKFLAG,UNLS1000:
                             UNLS2000:
                             UNLS3000
.
UNLS1000  CALL      UUPTVIS1                     * unlock visit record
.
UNLS2000  CALL      UUPTINV1                     * unlock invoice record
.
.         Unlock the pathfrec record
.
UNLS3000  MOVE      PMEDARID,DIM8
          RJUSTIFY  DIM8
          MOVE      DIM8,KEY8
          CALL      RDHFRE1                      * HF receipts record found ?
          BRANCH    OVRCD,UNLS9999               * no
.
          MOVE      ZERO,HFRSTAT                 * set the status to 'free'
          CALL      UPHFRE1
.
UNLS9999  RETURN
+
.-------------------------------------------------------------------
.Check for duplicate remittance in multi hospital remittance release
.-------------------------------------------------------------------
CDERA000  PACK      KEY61,SP3,PMEHFTID,PMEHRADV,PMEHPNUM,SP70
          CALL      RDPMERH1
          BRANCH    OVRCD,CDERA999
.
          MOVE      "2",PMEHSTAT
.
          CALL      UPPMERH1
.
CDERA999  RETURN
+
.--------------------------------------------------------------------------
.*                             PRNREM00                                   *
.*               Schedule Eclipse Remittance Report (IBAPMS07)            *
.--------------------------------------------------------------------------
PRNREM00  MOVE      "IBAPMS07",SCHDPGID
          CALL      IBACLOCK
          PACK      SCHDDATE,CCC,CYY,CMM,CDD
          REP       " 0",SCHDDATE
          CLOCK     TIME,SCHDTIME
.
          PACK      DIM10,CDD,SLASH,CMM,SLASH,CCC,CYY
          REP       " 0",DIM10
.
          PACK      SCHDDESC,ANSE,ANSR,ANSA,SP1,DIM10,SP1,PMEHNAME,SP70
.
          MOVE      "S  ",SCHDPRNT           * initialise to spool
.
.         Write Keyin parameters
.
          UNPACK    REMITKEY,KEY3,KEY24,KEY30,KEY4
          MOVE      KEY3,KEYSTARR[1]        * key for pmserhaf
          MOVE      KEY24,KEYSTARR[2]
          MOVE      KEY30,KEYSTARR[3]
          MOVE      KEY4,KEYSTARR[4]
          MOVE      USERID,KEYSTARR[5]
          MOVE      DIM1C,KEYSTARR[6]
          MOVE      SIX,KEYSTCNT            * Number of Keyins
.
          CALL      SCHPRT00   * Schedule Extract
.
PRNREM99  RETURN
+
.*****************************************************************************
.*                              RPAY0000           Called by: KEYA0000       *
.*           Release all payments for the selected ERA batch                 *
.*****************************************************************************
.
.         Initialise counters
.         ERDCOUNT - is the total number of pmserdaf records associated
.                    with the selected ERA batch.
.         PRLCOUNT - is the number of pmserdaf records associated with the
.                    selected ERA batch, which have previously been "released".
.         RELCOUNT - is the number of pmserdaf records associated with the
.                    selected ERA batch for which payments have been released
.                    in this session.
.
RPAY0000  CALL      CLER0000
          MOVE      SP3,SAVEPART
.
          MOVE      ZERO,EXIT
          MOVE      ZERO,ERDCOUNT
          MOVE      ZERO,PRLCOUNT
          MOVE      ZERO,RELCOUNT
.
.         Start releasing payments for the ERA
.
          PACK      KEY61,PMEHHOSP,PMEHFTID,PMEHRADV,PMEHPNUM,SP70
          CALL      RDPMERH1
          BRANCH    OVRCD,RPAY9960
.
          MATCH     "3",PMEHSTAT
          GOTO      RPAY9950 IF EQUAL
.
          MOVE      "3",PMEHSTAT
          CALL      UPPMERH1
.
          CALL      LTMP0000
.
.         Start releasing payments for the ERA
.
          MOVE      SP30,KEY27
          CALL      RSTEMP2                      * position in file
RPAY1000  CALL      RKTEMP2                      * read next record
          BRANCH    OVRCD,RPAY9000               * end of file
.
.         Read the pmserdaf record as the record status will need to be
.         updated later
.
          PACK      KEY82,PMEDFTID,PMEDRADV,PMEDPNUM,PMEDTRID
          CALL      RDPMERD1                     * record found ?
          BRANCH    OVRCD,RPAY1000               * no - shouldn't happen
.
.         A payment for the ERA has been found, so check if it needs releasing
.
.         ADD       ONE,ERDCOUNT                 * increment pmserdaf count
          MATCH     "2",PMEDSTAT                 * releasing ?
          IF        @EQUAL
            ADD       ONE,PRLCOUNT               * yes - incr. prev. rel. count
            GOTO      RPAY1000                   * get next payment
          ENDIF
.
          MATCH     "3",PMEDSTAT                 * releasing ?
          IF        @EQUAL
            ADD       ONE,PRLCOUNT               * yes - incr. prev. rel. count
            GOTO      RPAY1000                   * get next payment
          ENDIF
.
.         A claim requiring payment releasing has been found, so
.         get the corresponding pmsectaf record and check if same hospital
.
          MOVE      ZERO,ERASUSIN
          PACK      KEY40,PMEDTRID,SP70
          CALL      RSPMECT6                     * position on trans. id/invoice
          CALL      RKPMECT6                     * read next record
.         BRANCH    OVRCD,RPAY6000               * eof
          IF        OVRCD=ONE
            CLEAR     SERDIM50
            APPEND    PMEDARID,SERDIM50
            APPEND    " - pmsectaf record not found",SERDIM50
            RESET     SERDIM50
            GOTO      RPAY6000
          ENDIF
.
          MATCH     PMEDTRID,PMECTRID            * same transaction id still ?
.         GOTO      RPAY6000 IF NOT EQUAL        * no
          IF        !@EQUAL
            CLEAR     SERDIM50
            APPEND    PMEDARID,SERDIM50
            APPEND    " - tran id not found",SERDIM50
            RESET     SERDIM50
            GOTO      RPAY6000
          ENDIF

.
          MOVE      SP70,SAVELOCN
          IF        IBCNMHOS=1
            MATCH     PMEHHOSP,PMECHOSP
            IF        !@EQUAL
              PACK      KEY3,PMECHOSP,SP70
              CALL      RDPTHSP1
              IF        OVRCD=0
                MOVE      PTHSLOCN,SAVELOCN
              ELSE
                  SUB       ONE,ERDCOUNT
                  GOTO      RPAY1000
              ENDIF
.
              PACK      KEY3,PMEHHOSP,SP70
              CALL      RDPTHSP1
              IF        OVRCD=0
                MATCH     SAVELOCN,PTHSLOCN
                IF        !@EQUAL
                  SUB       ONE,ERDCOUNT
                  GOTO      RPAY1000
                ENDIF
              ELSE
                  SUB       ONE,ERDCOUNT
                  GOTO      RPAY1000
              ENDIF
            ENDIF
          ENDIF
.
          PACK      KEY8,PMEDARID,SP70
          RJUSTIFY  KEY8
          CALL      RDPTINV1
.         IF        OVRCD = 1
.           GOTO      RPAY6000
.         ENDIF
          IF        OVRCD=ONE
            CLEAR     SERDIM50
            APPEND    PMEDARID,SERDIM50
            APPEND    " - patinvrf record not found",SERDIM50
            RESET     SERDIM50
            GOTO      RPAY6000
          ENDIF

.
          MATCH     "1",PTINCRST
.         GOTO      RPAY6000 IF EQUAL
          IF        @EQUAL
            CLEAR     SERDIM50
            APPEND    PMEDARID,SERDIM50
            APPEND    "invoice is fully credited",SERDIM50
            RESET     SERDIM50
            GOTO      RPAY6000
          ENDIF

.
.         Now lock all the relevant records prior to releasing the payment.
.         Check that we can lock the Health Fund receipts record.
.
RPAY1500  MOVE      "HFR",PRXCODE   * System Lock Audits
          CALL      GETSLK00        * Get System Lock Audits
.
          PACK      KEY8,PMECINVN,SP70
          CALL      RDHFRE1                      * lock record found ?
          IF        OVRCD = 1
            MOVE      ONE,HFRSTAT                * no - write one with lock
            MOVE      PMECINVN,HFRINVR
            CALL      WRHFRE1
          ELSE
            COMPARE   ZERO,HFRSTAT               * yes - is it already locked ?
            IF        @EQUAL
              MOVE      ONE,HFRSTAT              * no - lock now
              CALL      UPHFRE1
            ELSE
              CALL      RELSLK00                 * Release System Lock Audits
              GOTO      RPAY8000                 * record already locked
            ENDIF
          ENDIF
          CALL      RELSLK00        * Release System Lock Audits
.
.         Now check the we can lock the invoice record
.
          MOVE      PMECINVN,KEY8
          CALL      RLPTINV1
          IF        OVRCD = 1
.           MOVE      THREE,UNLKFLAG
.           CALL      UNLK0000                   * unlock any locked records
.           GOTO      RPAY8000
            GOTO      RPAY6100
          ELSE
            IF        OVRCD = 2
              MOVE      THREE,UNLKFLAG
              CALL      UNLK0000                 * unlock any locked records
              GOTO      RPAY8000
            ENDIF
          ENDIF
.
.         Check that we can lock the visit record
.
          PACK      KEY8,PMECADMN,SP70
          CALL      RLPTVIS1
          IF        OVRCD = 1
            MOVE      TWO,UNLKFLAG
            CALL      UNLK0000                   * unlock any locked records
            GOTO      RPAY8000
          ELSE
            IF        OVRCD = 2
              MOVE      TWO,UNLKFLAG
              CALL      UNLK0000                 * unlock any locked records
              GOTO      RPAY8000
            ENDIF
          ENDIF
.
.         All the relevant records have been locked.
.         As there may be payments in this remittance for more than one
.         participant, check if the participant code has changed.  If it
.         has, then we need to get a new receipt number.
.
          MATCH     SAVEPART,PARTPANT            * same participant still ?
          IF        !@EQUAL
            CALL      ALLCRC00
            MOVE      PARTPANT,SAVEPART          * save new participant code
          ENDIF
.
.         Process the payment
.
          UNPACK    PMEDBAMT,DIM7,DIM2           * set amount paid
          PACK      DIM10,DIM7,DOT,DIM2
          MOVE      ZERO,FORM7P2C
.
          SCAN      "-",DIM10
          IF        @EQUAL
            REP        "-0",DIM10
            MOVE       ZERO,FORM7P2C
            MOVE       DIM10,FORM7P2C
            ASSIGN     (FORM7P2C*SEQ),FORM7P2C
          ELSE
            MOVE       DIM10,FORM7P2C
          ENDIF
.
          MOVE      FORM7P2C,PMECAMTP
          ASSIGN    (PINVHFDA-PMECAMTP),PINVHFDA
.
          CALL      IBACLOCK                     * get current date
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CTIMEIS,CURRTIME
.
.         Check if the invoice now balances
.
          MOVE      PINVAMT,FORM10P2             * Invoice amount +
          ADD       PINVPATA,FORM10P2            * Patient payments +
          ADD       PINVHFDA,FORM10P2            * H.F payments +
          ADD       PINVOTHA,FORM10P2            * Other payments +
          ADD       PINVJOUR,FORM10P2            * Journals +
          ADD       PTINGSTJ,FORM10P2            * Journal GST = amt outstanding
.
          MOVE      "99999999",PINVBLCD          * default to not balancing
.
          COMPARE   ZERO,FORM10P2                * Does invoice balance ?
          IF        @EQUAL
            MOVE      CURRDATE,PINVBLCD          * yes - record balanced date
.           MOVE      TWO,PTDTAPAY               * set A/P flag - balanced
          ELSE
.           MOVE      ZERO,PTDTAPAY              * set A/P flag - not balanced
          ENDIF
          MOVE      FORM10P2,PINVPCSH
.         CALL      UPINV1                       * update/unlock invoice record
.
.         PROC      FLAGDEBT
.
.         Create the patdtraf cash receipt record.
.
          MOVE      PMECADMN,TADMNO              * load admission number
.
.         Get the next transaction number.  As we have already locked
.         the visit record, there should be no problem getting the
.         next transaction number.
.
.RPAY3000  MOVE      PMECADMN,KEY8                * get next transaction number
.          CALL      TRVISA1
.
.          PACK      KEY22,PMECADMN,PMECINVN,PVITRAN
.          CALL      RDADTRN1                     * patdtraf record on file ?
.          COMPARE   ZERO,OVRCD
.          GOTO      RPAY3000 IF EQUAL            * yes
.
.          MOVE      PVITRAN,TTRANSN1             * load transaction number
.          MOVE      ANSH,TTYPEDEB                * set to "patient" type of debt
.          MOVE      PMECHFND,TDCODE
.
.          ASSIGN    (PMECAMTP*SEQ),TPATAMTT
.          MOVE      TPATAMTT,TREBATE
.
.          MOVE      ZERO,TPATAMTG                * set $ amounts
.          MOVE      ZERO,TPATAMTH
.          MOVE      ZERO,TPATAMTI
.          MOVE      ZERO,TPATAMTP
.
.          MOVE      CCC,TFCENT                   * set payment date
.          MOVE      CYY,TFYEAR
.          MOVE      CMM,TFMONTH
.          MOVE      CDD,TFDAY
.
.          MOVE      ZERO,TTCENT                  * initialise accomm. to dates
.          MOVE      ZERO,TTYEAR
.          MOVE      ZERO,TTMONTH
.          MOVE      ZERO,TTDAY
.
.          PACK      TTYPE,ANSP,ANSY              * set for payment
.          MOVE      SP9,TITEMNO
.          MOVE      PMECINVN,TREF                * load invoice no.
.          MOVE      SIX,TPAYTYPE                 * direct deposit
.
          MOVE      HRECPT,TRECEIPT
.
.          IF        PMECEETP = 0
.            MOVE      "Unknown Health Fund           ",HFNAME
.            PACK      KEY14,PMECHFND,ZERO4,SP20
.            CALL      RDFUND1                    * HF on file ?
.            MOVE      HFNAME,TDDESC              * load HF description
.          ELSE
.            MOVE      "Unknown Claim Code  ",TDESC
.            PACK      KEY5,ANSC,ANSL,PINVCLM
.            CALL      RDCODE1
.            MOVE      TDESC,TDDESC               * load claim code description
.          ENDIF
.
.          MOVE      ONE,TINVPRT                  * invoice printed
.          MOVE      FIVE,TRECTYPE                * cash receipt
.          MOVE      ZERO,TNODAYS
.          MOVE      ZERO,TCLAIM
..         MOVE      ZERO,PTDTREBT
.          MOVE      SP6,TDOCTA
.          MOVE      ZERO,TSERVS
.          MOVE      SP6,TDOCTO
.          MOVE      SP2,TSESSION
.          MOVE      SP3,TMISGRP
.          MOVE      SP3,TDEPTYP
.          MOVE      SP3,TDWARD
.          MOVE      SP3,TCLMTYP
.          MOVE      SP3,TADMTYP
.          MOVE      PMECBATN,TBATCHN             * load batch number
.          MOVE      ZERO,TNINVS
.          MOVE      SP3,PTDTBTYP
.          MOVE      ZERO,PTDTLSPT
.          MOVE      ZERO,PTDTLSRB
.          MOVE      ZERO,PTDTDTYP
.          PACK      PTDTDES2,SP20,SP20
.          MOVE      ZERO,PTDTEPSD
.          MOVE      ZERO,PTDTCCU
..         MOVE      SP6,PTDTSURG
..         MOVE      SP1,PTDTDEPS
.
.          MOVE      CURRDATE,PTDTEFFD            * load payment date
.
.          MOVE      ZERO,PTDTGSTA
.          MOVE      SP6,PTDTGSTC
.          MOVE      ZERO,PTDTGSTM
.          MOVE      ZERO,PTDTADPT
.          MOVE      ZERO,PTDTADRB
.          MOVE      ZERO,PTDTGSTL
.          MOVE      SP70,PTDTTIME
.          MOVE      SP70,PTDTCRST
.          MOVE      SP70,PTDTUNIQ
.          MOVE      SP70,PTDTCNTR
.          MOVE      SP70,PTDTCPRC
.          MOVE      SP70,PTDTCONT
.          MOVE      SP70,PTDTSUNQ
.          MOVE      SP70,PTDTBTCH
..         MOVE      ANSN,PTDTSSAP
..         MOVE      ZERO,PTDTMVBR
.          MOVE      ZERO,PTDTEPSD
..         MOVE      SP1,PTDTMHDP
.          PACK      TSPARE,SP30,SP30
.
.          CALL      WRDTRN1                     * write patdtraf journal record
.
          ADD       ONE,RELCOUNT
.
.         Write to rcpbnkaf
.
          PACK      KEY12,HRECPT,SP70
          CALL      RDRCBNK1
          IF        OVRCD=1
.
            MOVE      HRECPT,RCBNRECN
            CALL      IBACLOCK
            PACK      RCBNTDAT,CCC,CYY,CMM,CDD
            REP       " 0",RCBNTDAT
            UNPACK    PMEDBAMT,DIM7,DIM2
            PACK      DIM10,DIM7,FULLSTOP,DIM2
            MOVE      ZERO,FORM7P2C
.
            SCAN      "-",DIM10
            IF        @EQUAL
              REP        "-0",DIM10
              MOVE       ZERO,FORM7P2C
              MOVE       DIM10,FORM7P2C
              ASSIGN     (FORM7P2C*SEQ),FORM7P2C
            ELSE
              MOVE       DIM10,FORM7P2C
            ENDIF
.
            MOVE      FORM7P2C,RCBNTOTP
            MOVE      RCCNERCD,RCBNCDRW
            MOVE      RCCNERCA,RCBNCHQA
            MOVE      PMEHHOSP,RCBNMHOS
.
            IF        IBCNMHOS=1
              MATCH     SP70,RCBNMHOS
              IF        !@EQUAL & !@EOS
                PACK      KEY3,RCBNMHOS,SP70
                CALL      RDPTHSP1
                IF        OVRCD=0
                  MATCH     SP70,PTHSERCD
                  IF        !@EQUAL & !@EOS
                    MOVE      PTHSERCD,RCBNCDRW
                  ENDIF
                  MATCH     SP70,PTHSERCA
                  IF        !@EQUAL & !@EOS
                    MOVE      PTHSERCA,RCBNCHQA
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
.
            MOVE      CHOSPNUM,RCBNMDHS
            MOVE      "1",RCBNTTYP               * CAR 227986
            MOVE      PMECHFND,RCBNRCOD
            MOVE      ZERO,RCBNSTAT
            MOVE      SP70,RCBNBDAT
            MOVE      SP70,RCBNBTIM
            MOVE      SP70,RCBNRDAT
            MOVE      SP70,RCBNRTIM
            PACK      RCBNCDAT,CCC,CYY,CMM,CDD
            REP       " 0",RCBNCDAT
            CLOCK     TIME,RCBNCTIM
            MOVE      WBSEUID,RCBNCUID
            MOVE      SP70,RCBNUDAT
              MOVE      SP70,RCBNUTIM
            MOVE      SP70,RCBNUUID
            MOVE      SP70,RCBNSPAR
.
            PACK      KEY12,HRECPT,SP70
            CALL      WRRCBNK1
.
          ELSE
.
            UNPACK    PMEDBAMT,DIM7,DIM2
            PACK      DIM10,DIM7,FULLSTOP,DIM2
            MOVE      ZERO,FORM7P2C
.
            SCAN      "-",DIM10
            IF        @EQUAL
              REP        "-0",DIM10
              MOVE       DIM10,FORM7P2C
              ASSIGN     (FORM7P2C*SEQ),FORM7P2C
            ELSE
              MOVE      DIM10,FORM7P2C
            ENDIF
.
            ADD       FORM7P2C,RCBNTOTP
            CALL      UPRCBNK1
.
          ENDIF
.
.         Write to rcpbdtaf
.
          PACK      KEY15,HRECPT,SP1,SP1,ONE,SP70
          CALL      RDRCBDT1
          IF        OVRCD = 1
.
            CALL      IBACLOCK
            PACK      RCBDTDAT,CCC,CYY,CMM,CDD
            REP       " 0",RCBDTDAT
            MOVE      HRECPT,RCBDRECN
            MOVE      "  1",RCBDUNIQ
            MOVE      PMEHHOSP,RCBDMHOS
            MOVE      CHOSPNUM,RCBDMDHS
            MOVE      "4",RCBDPTYP
            CALL      DDEP0000            * Get payment code for Direct Deposit
.
            UNPACK    PMEDBAMT,DIM7,DIM2
            PACK      DIM10,DIM7,FULLSTOP,DIM2
            MOVE      ZERO,FORM7P2C
.
            SCAN      "-",DIM10
            IF        @EQUAL
              REP        "-0",DIM10
              MOVE       DIM10,FORM7P2C
              ASSIGN     (FORM7P2C*SEQ),FORM7P2C
            ELSE
              MOVE      DIM10,FORM7P2C
            ENDIF
            MOVE      FORM7P2C,RCBDPAMT
.
            MOVE      PARTPANT,RCBDPAYD
            MOVE      SP70,RCBDCHQN
            MOVE      PMEHNAME,RCBDDRAW
            MOVE      PMEHBNAM,RCBDBANK
            MOVE      PMEHBBSB,RCBDBRCH
            MOVE      SP70,RCBDCRDT
            MOVE      PMEHPREF,RCBDSTRF
....        MOVE      SP70,RCBDMONM                                   *D-187485
            MOVE      SP70,RCBDEFTT
            CALL      IBACLOCK
            PACK      RCBDCDAT,CCC,CYY,CMM,CDD
            REP       " 0",RCBDCDAT
            CLOCK     TIME,RCBDCTIM
            MOVE      WBSEUID,RCBDCUID
            MOVE      SP70,RCBDUDAT
            MOVE      SP70,RCBDUTIM
            MOVE      SP70,RCBDUUID
            MOVE      SP70,RCBDSPAR
.
            PACK      KEY15,HRECPT,RCBDUNIQ,SP70
            CALL      WRRCBDT1
.
          ELSE
.
            UNPACK    PMEDBAMT,DIM7,DIM2
            PACK      DIM10,DIM7,FULLSTOP,DIM2
            MOVE      ZERO,FORM7P2C
.
            SCAN      "-",DIM10
            IF        @EQUAL
              REP        "-0",DIM10
              MOVE       DIM10,FORM7P2C
              ASSIGN     (FORM7P2C*SEQ),FORM7P2C
            ELSE
              MOVE      DIM10,FORM7P2C
            ENDIF
.
            ADD       FORM7P2C,RCBDPAMT
            CALL      UPRCBDT1
.
          ENDIF
.
.         Write to rcpdteaf
.
RPAY3500  PACK      KEY17,HRECPT,Z70
          CALL      RSRCDTE1
          CALL      RPRCDTE1
          IF        OVRCD = 1
            MOVE      "    1",RCDTTCNT
            CALL      WRRDTE00
          ELSE
            MOVE      HRECPT,DIM12
            MATCH     DIM12,RCDTRECN
            IF        !@EQUAL
              MOVE      "    1",RCDTTCNT
              CALL      WRRDTE00
            ELSE
              MOVE      RCDTTCNT,DIM5
              SQUEEZE   DIM5
              MOVE      ZERO,FORM5
              MOVE      DIM5,FORM5
              ADD       ONE,FORM5
              MOVE      FORM5,RCDTTCNT
.
              PACK      KEY17,HRECPT,RCDTTCNT,SP70
              CALL      RARCDTE1
              IF        OVRCD = 1
                CALL      WRRDTE00
              ELSE
                GOTO      RPAY3500
              ENDIF
            ENDIF
          ENDIF
.
.         Now "close" the current claim (providing that a processing report
.         has been received) and update the payment amount and
.         the payment date
.
          MOVE      PMEDARID,DIM20               * CAR 227986
          SQUEEZE   DIM20
.
          PACK      KEY62,PMECTRID,PARTPANT,DIM20,Z70
          CALL      RSPMEAH2                     * position on trans. id
RPAY4000  CALL      RPPMEAH2                     * read previous record
          BRANCH    OVRCD,RPAY4500               * eof - no proc. report
.
          MATCH     PMECTRID,PMAHFTID            * same claim trans. id ?
          GOTO      RPAY4500 IF NOT EQUAL        * no - no proc. report
.
          MATCH     PARTPANT,PMAHFBID            * same fund brand. id ?
          GOTO      RPAY4500 IF NOT EQUAL        * no - no proc. report
.
          MATCH     DIM20,PMAHARID               * same invoice number ?
          GOTO      RPAY4500 IF NOT EQUAL        * no - no proc. report
.
          MATCH     ANSA,PMAHCFAC                * assessment code "A" ?
          GOTO      RPAY4000 IF NOT EQUAL        * no - get next report
.
.         A processing report was found
.
          MOVE      TEN5,PMECFLAG                * set status to closed
.
RPAY4500  PACK      PMECSTAT,SP1,TWO             * set closed with payment
          MOVE      PMEDLDAT,PMECPDAT            * set payment date
.
          UNPACK    PMEDBAMT,DIM7,DIM2           * set amount paid
          PACK      DIM10,DIM7,DOT,DIM2
          MOVE      ZERO,FORM7P2C
.
          SCAN      "-",DIM10
          IF        @EQUAL
            REP        "-0",DIM10
            MOVE       ZERO,FORM7P2C
            MOVE       DIM10,FORM7P2C
            ASSIGN     (FORM7P2C*SEQ),FORM7P2C
          ELSE
            MOVE       DIM10,FORM7P2C
          ENDIF
.
          MOVE      FORM7P2C,PMECAMTP
          CALL      UPPMECT6                     * update claim
.
.         Finally, write an EDI History record (pmsecaaf)
.
          MOVE      PMECINVN,PMEAINVN
          CALL      IBACLOCK
          PACK      PMEADATE,CCC,CYY,CMM,CDD
          REP       " 0",PMEADATE
          MOVE      CTIMEIS,PMEATIME
          MOVE      PMECBATN,PMEABATN
          MOVE      PMECFLAG,PMEASTAT
          MOVE      " 5",PMEATYPE
          MOVE      WBSEUID,PMEAOPER
          MOVE      PMECTRID,PMEATRID
          MOVE      SP4,PMEAEROR
          MOVE      SP70,PMEAEROT
          MOVE      SP30,PMEASPAR
.
RPAY5000  PACK      KEY26,PMEAINVN,PMEADATE,PMEATIME,PMEATYPE
          CALL      RAPMECA1
          IF        OVRCD = 1
            CALL      WRPMECA1
          ELSE
            CALL      IBACLOCK
            PACK      PMEADATE,CCC,CYY,CMM,CDD
            REP       " 0",PMEADATE
            MOVE      CTIMEIS,PMEATIME
            GOTO      RPAY5000
          ENDIF
.
.         Update the remittance table (pmserdaf) to indicate that
.         the claim payment has been released to the relevant ibaPAS tables
.
          MOVE      TWO,PMEDSTAT                 * set as released
          CALL      UPPMERD1
.
          MOVE      ONE,UNLKFLAG
          CALL      UNLK0000                     * unlock all locked records
.
          MOVE      PMECINVN,KEY8
          CALL      CREC0000              * Update Un-reconciled inv.file
.
          GOTO      RPAY1000
.
.*******************************************************************************
.         Now lock all the relevant records prior to releasing the payment.
.         Check that we can lock the Health Fund receipts record.
.
RPAY6000  MOVE      "HFR",PRXCODE   * System Lock Audits
          CALL      GETSLK00        * Get System Lock Audits
.
          MOVE      PMEDARID,DIM8
          RJUSTIFY  DIM8
.
          PACK      KEY8,DIM8,SP70
          CALL      RDHFRE1                      * lock record found ?
          IF        OVRCD = 1
            MOVE      ONE,HFRSTAT                * no - write one with lock
            MOVE      DIM8,HFRINVR
            CALL      WRHFRE1
          ELSE
            COMPARE   ZERO,HFRSTAT               * yes - is it already locked ?
            IF        @EQUAL
              MOVE      ONE,HFRSTAT              * no - lock now
              CALL      UPHFRE1
            ELSE
              CALL      RELSLK00                 * Release System Lock Audits
              GOTO      RPAY8000                 * record already locked
            ENDIF
          ENDIF
          CALL      RELSLK00        * Release System Lock Audits
.
.         All the relevant records have been locked.
.         As there may be payments in this remittance for more than one
.         participant, check if the participant code has changed.  If it
.         has, then we need to get a new receipt number.
.
RPAY6100  MATCH     SAVEPART,PARTPANT            * same participant still ?
          IF        !@EQUAL
            CALL      ALLCRC00
            MOVE      PARTPANT,SAVEPART          * save new participant code
          ENDIF
.
          MOVE      HRECPT,TRECEIPT
.
          ADD       ONE,RELCOUNT
.
.         If this is the first paid claim to be released in this session,
.         then we need to write a batch header pataudc record before writing
.         any detail records.
.
.         MOVE      ONE,PMECEETP
.         MATCH     "DVA",PMEDPART
.         IF        !@EQUAL
.           MOVE      ZERO,PMECEETP
.         ENDIF
.
          MOVE      PMEDARID,DIM8
          RJUSTIFY  DIM8
.
          UNPACK    PMEDBAMT,DIM7,DIM2           * set amount paid
          PACK      DIM10,DIM7,DOT,DIM2
          MOVE      ZERO,FORM7P2C
.
          SCAN      "-",DIM10
          IF        @EQUAL
            REP        "-0",DIM10
            MOVE       ZERO,FORM7P2C
            MOVE       DIM10,FORM7P2C
            ASSIGN     (FORM7P2C*SEQ),FORM7P2C
          ELSE
            MOVE       DIM10,FORM7P2C
          ENDIF
.
          MOVE      FORM7P2C,PMECAMTP
.
.         Write to rcpbnkaf
.
          PACK      KEY12,HRECPT,SP70
          CALL      RDRCBNK1
          IF        OVRCD=1
.
            MOVE      HRECPT,RCBNRECN
            CALL      IBACLOCK
            PACK      RCBNTDAT,CCC,CYY,CMM,CDD
            REP       " 0",RCBNTDAT
            UNPACK    PMEDBAMT,DIM7,DIM2
            PACK      DIM10,DIM7,FULLSTOP,DIM2
            MOVE      ZERO,FORM7P2C
.
            SCAN      "-",DIM10
            IF        @EQUAL
              REP        "-0",DIM10
              MOVE       ZERO,FORM7P2C
              MOVE       DIM10,FORM7P2C
              ASSIGN     (FORM7P2C*SEQ),FORM7P2C
            ELSE
              MOVE       DIM10,FORM7P2C
            ENDIF
.
            MOVE      FORM7P2C,RCBNTOTP
            MOVE      RCCNERCD,RCBNCDRW
            MOVE      RCCNERCA,RCBNCHQA
            MOVE      PMEHHOSP,RCBNMHOS
.
            IF        IBCNMHOS=1
              MATCH     SP70,RCBNMHOS
              IF        !@EQUAL & !@EOS
                PACK      KEY3,RCBNMHOS,SP70
                CALL      RDPTHSP1
                IF        OVRCD=0
                  MATCH     SP70,PTHSERCD
                  IF        !@EQUAL & !@EOS
                    MOVE      PTHSERCD,RCBNCDRW
                  ENDIF
                  MATCH     SP70,PTHSERCA
                  IF        !@EQUAL & !@EOS
                    MOVE      PTHSERCA,RCBNCHQA
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
.
            MOVE      CHOSPNUM,RCBNMDHS
            MOVE      "1",RCBNTTYP               * CAR 227986
            MOVE      PMECHFND,RCBNRCOD
            MOVE      ZERO,RCBNSTAT
            MOVE      SP70,RCBNBDAT
            MOVE      SP70,RCBNBTIM
            MOVE      SP70,RCBNRDAT
            MOVE      SP70,RCBNRTIM
            PACK      RCBNCDAT,CCC,CYY,CMM,CDD
            REP       " 0",RCBNCDAT
            CLOCK     TIME,RCBNCTIM
            MOVE      WBSEUID,RCBNCUID
            MOVE      SP70,RCBNUDAT
              MOVE      SP70,RCBNUTIM
            MOVE      SP70,RCBNUUID
            MOVE      SP70,RCBNSPAR
.
            PACK      KEY12,HRECPT,SP70
            CALL      WRRCBNK1
.
          ELSE
.
            UNPACK    PMEDBAMT,DIM7,DIM2
            PACK      DIM10,DIM7,FULLSTOP,DIM2
            MOVE      ZERO,FORM7P2C
.
            SCAN      "-",DIM10
            IF        @EQUAL
              REP        "-0",DIM10
              MOVE       DIM10,FORM7P2C
              ASSIGN     (FORM7P2C*SEQ),FORM7P2C
            ELSE
              MOVE      DIM10,FORM7P2C
            ENDIF
.
            ADD       FORM7P2C,RCBNTOTP
            CALL      UPRCBNK1
.
          ENDIF
.
.         Write to rcpbdtaf
.
          PACK      KEY15,HRECPT,SP1,SP1,ONE,SP70
          CALL      RDRCBDT1
          IF        OVRCD = 1
.
            CALL      IBACLOCK
            PACK      RCBDTDAT,CCC,CYY,CMM,CDD
            REP       " 0",RCBDTDAT
            MOVE      HRECPT,RCBDRECN
            MOVE      "  1",RCBDUNIQ
            MOVE      PMEHHOSP,RCBDMHOS
            MOVE      CHOSPNUM,RCBDMDHS
            MOVE      "4",RCBDPTYP
            CALL      DDEP0000            * Get payment code for Direct Deposit
.
            UNPACK    PMEDBAMT,DIM7,DIM2
            PACK      DIM10,DIM7,FULLSTOP,DIM2
            MOVE      ZERO,FORM7P2C
.
            SCAN      "-",DIM10
            IF        @EQUAL
              REP        "-0",DIM10
              MOVE       DIM10,FORM7P2C
              ASSIGN     (FORM7P2C*SEQ),FORM7P2C
            ELSE
              MOVE      DIM10,FORM7P2C
            ENDIF
            MOVE      FORM7P2C,RCBDPAMT
.
            MOVE      PARTPANT,RCBDPAYD
            MOVE      SP70,RCBDCHQN
            MOVE      PMEHNAME,RCBDDRAW
            MOVE      PMEHBNAM,RCBDBANK
            MOVE      PMEHBBSB,RCBDBRCH
            MOVE      SP70,RCBDCRDT
            MOVE      PMEHPREF,RCBDSTRF
....        MOVE      SP70,RCBDMONM                                   *D-187485
            MOVE      SP70,RCBDEFTT
            CALL      IBACLOCK
            PACK      RCBDCDAT,CCC,CYY,CMM,CDD
            REP       " 0",RCBDCDAT
            CLOCK     TIME,RCBDCTIM
            MOVE      WBSEUID,RCBDCUID
            MOVE      SP70,RCBDUDAT
            MOVE      SP70,RCBDUTIM
            MOVE      SP70,RCBDUUID
            MOVE      SP70,RCBDSPAR
.
            PACK      KEY15,HRECPT,RCBDUNIQ,SP70
            CALL      WRRCBDT1
.
          ELSE
.
            UNPACK    PMEDBAMT,DIM7,DIM2
            PACK      DIM10,DIM7,FULLSTOP,DIM2
            MOVE      ZERO,FORM7P2C
.
            SCAN      "-",DIM10
            IF        @EQUAL
              REP        "-0",DIM10
              MOVE       DIM10,FORM7P2C
              ASSIGN     (FORM7P2C*SEQ),FORM7P2C
            ELSE
              MOVE      DIM10,FORM7P2C
            ENDIF
.
            ADD       FORM7P2C,RCBDPAMT
            CALL      UPRCBDT1
.
          ENDIF
.
.         Write to rcpdteaf
.
RPAY6500  PACK      KEY17,HRECPT,Z70
          CALL      RSRCDTE1
          CALL      RPRCDTE1
          IF        OVRCD = 1
            MOVE      "    1",RCDTTCNT
            CALL      WRRDTS00
          ELSE
            MOVE      HRECPT,DIM12
            MATCH     DIM12,RCDTRECN
            IF        !@EQUAL
              MOVE      "    1",RCDTTCNT
              CALL      WRRDTS00
            ELSE
              MOVE      RCDTTCNT,DIM5
              SQUEEZE   DIM5
              MOVE      ZERO,FORM5
              MOVE      DIM5,FORM5
              ADD       ONE,FORM5
              MOVE      FORM5,RCDTTCNT
.
              PACK      KEY17,HRECPT,RCDTTCNT,SP70
              CALL      RARCDTE1
              IF        OVRCD = 1
                CALL      WRRDTS00
              ELSE
                GOTO      RPAY6500
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      THREE,PMEDSTAT          * set as released to suspense acc
          CALL      UPPMERD1
.
          MOVE      THREE,UNLKFLAG
          CALL      UNLS0000
.
          GOTO      RPAY1000
.*******************************************************************************
.
.         A record was locked for this claim, so set the status to "locked"
.
RPAY8000  MOVE      "1",PMEDSTAT
          CALL      UPPMERD1
          GOTO      RPAY1000
.
.         Check if all the payment records for the ERA were released and
.         update the ERA header status accordingly.
.
RPAY9000  IF        ERDCOUNT = (PRLCOUNT+RELCOUNT)
            MOVE      "2",PMEHSTAT               * set to "released"
          ELSE
            MOVE      "1",PMEHSTAT               * set to "partial"
          ENDIF
          CALL      UPPMERH1
.
          IF        IBCNMHOS=1
            MATCH     "2",PMEHSTAT
            IF        @EQUAL
              CALL      CDERA000
            ENDIF
          ENDIF
.
.         Unlock general records.
.
RPAY9100  
.
RPAY9200  MOVE      "2",DIM1C
          PACK      REMITKEY,PMEHHOSP,PMEHFTID,PMEHRADV,PMEHPNUM,SP70
          CALL      PRNREM00
.
          MATCH     "1",PMEHSTAT
          IF        @EQUAL
            MOVE      "Payment record partially released.",ERRMSG
          ELSE
            MOVE      "Payment record released.",ERRMSG
          ENDIF
          CALL      PERR0000
          GOTO      RPAY9999
.
RPAY9950  MOVE      "Remittance Currently being processed.",ERRMSG
          CALL      PERR0000
          GOTO      RPAY9999
.
RPAY9960  MOVE      "Cannot find pmserhaf record",ERRMSG
          CALL      PERR0000
          GOTO      RPAY9999
.
RPAY9999  RETURN
+
.*****************************************************************************
.         Get payment type for Direct deposit
.*****************************************************************************
DDEP0000  MOVE      "Py",KEY2
          PACK      KEY5,KEY2,SP70
          CALL      RDSCODE1
DDEP1000  CALL      RDKCODE1
          BRANCH    OVRCD,DDEP9000
.
          MATCH     "Py",TCODE
          GOTO      DDEP9000 IF NOT EQUAL
.
          MATCH     "I",PTCOACTV
          GOTO      DDEP1000 IF EQUAL       * Inactive
.
          MOVE      ZERO,F2
          SQUEEZE   PTCDNHCP
          MOVE      PTCDNHCP,F2
          COMPARE   "4",F2
          GOTO      DDEP1000 IF NOT EQUAL
.
          MOVE      ACODE,RCBDPCOD           * Payment code for Direct Deposit
          GOTO      DDEP9999
.
DDEP9000  MOVE      SP70,RCBDPCOD
DDEP9999  RETURN
+
.*****************************************************************************
.*                                  PERR0000              Called by: Lots    *
.*                             Print Error Message                           *
.* Requires: ERRMSG - error description                                      *
.*****************************************************************************
.
PERR0000  
.         COMPARE   ONE,VALDFLG                  * validation ?
.         GOTO      PERR9999 IF NOT EQUAL        * no - finished
.
.         COMPARE   "55",CLNO                    * page full ?
.         CALL      HEAD0000 IF NOT LESS         * yes
.
          PACK      ERRMSG,ERRMSG,SP30,SP30
          PRINT     *1,ERRMSG
          ADD       ONE,CLNO
.
          MOVE      ONE,ERRFLG              * Error flag - yes
          ADD       ONE,ERRCT             * Increment the error counter
.
PERR9999  RETURN
+
.--------------------------------------------------------------------------
.*                             CSHREC00                                   *
.--------------------------------------------------------------------------
CSHREC00  MOVE      "IBARCP02",SCHDPGID
          MOVE      "Automatic ERA Release - Cash Rec",SCHDDESC
          CALL      IBACLOCK
          PACK      SCHDDATE,CCC,CYY,CMM,CDD
          REP       " 0",SCHDDATE
          CLOCK     TIME,SCHDTIME
          MOVE      "S  ",SCHDPRNT           * initialise to spool
.
          CALL      IBACLOCK
          PACK      DIM8,CDD,CMM,CCC,CYY
          REP       " 0",DIM8
.
.         Write Keyin parameters
.
          MOVE      REPTTYPE,KEYSTARR[1]
          MOVE      ECLCSHDR,KEYSTARR[2]
          MOVE      ECLCSHDR,KEYSTARR[3]
          MOVE      DIM8,KEYSTARR[4]
          MOVE      USERID,KEYSTARR[5]
          MOVE      SP70,KEYSTARR[6]
          MOVE      6,KEYSTCNT            * Number of Keyins
.
          CALL      SCHPRT00   * Schedule Extract
.
CSHREC99  RETURN
+
.--------------------------------------------------------------------------
.*                             BNKDEP00                                   *
.--------------------------------------------------------------------------
BNKDEP00  PACK      KEY8,WBSCSCHD,SP70
          CALL      RDWBSC1
          BRANCH    OVRCD,BNKDEP99
.
          MATCH     "0",WBSCSTAT
          GOTO      BNKDEP00 IF EQUAL
.
          MATCH     "1",WBSCSTAT
          GOTO      BNKDEP00 IF EQUAL
.
          MATCH     "6",WBSCSTAT
          GOTO      BNKDEP99 IF EQUAL
.
.         PRINT     *1,"Web Scheduler Status:",WBSCSCHD,SLASH,WBSCSTAT
.
          MOVE      "IBARCP02",SCHDPGID
          MOVE      "Automatic ERA Release - Bank Dep",SCHDDESC
          CALL      IBACLOCK
          PACK      SCHDDATE,CCC,CYY,CMM,CDD
          REP       " 0",SCHDDATE
          CLOCK     TIME,SCHDTIME
          MOVE      "S  ",SCHDPRNT           * initialise to spool
.
          CALL      IBACLOCK
          PACK      DIM8,CDD,CMM,CCC,CYY
          REP       " 0",DIM8
.
          REP       "142536",REPTTYPE
.
.         Write Keyin parameters
.
          MOVE      REPTTYPE,KEYSTARR[1]
          MOVE      ECLCSHDR,KEYSTARR[2]
          MOVE      ECLCSHDR,KEYSTARR[3]
          MOVE      SUMMOPYN,KEYSTARR[4]
          MOVE      DIM8,KEYSTARR[5]
          MOVE      USERID,KEYSTARR[6]
          MOVE      REMPAGBR,KEYSTARR[7]
          MOVE      SP70,KEYSTARR[8]
          MOVE      8,KEYSTCNT            * Number of Keyins
.
          CALL      SCHPRT00   * Schedule Extract
.
BNKDEP99  RETURN
.
.------------------------------------------------------------
SCHPRT00  OPEN      WEBSCHA1,"webschaf"
          CALL      IBACLOCK
          READ      CONTROLF,HUNDRED2;RSCNCCP,RSCNSLP,RSCNRCD,RSCNROD:
                                      RSCNCMD,RSCNCLP1,RSCNCLP2,RSCNCLP3:
                                      RSCNCLP4,RSCNCLP5,RSCNSPDL,RSCNCMDL
          CALL      NXTSCH00         * Get Next Report Schedule Number
          MOVE      "1",WBSCSTAT     * Status 1 = Awaiting Processing
.
          MOVE      SCHDDATE,WBSCSCDT
          MOVE      SCHDTIME,WBSCSCTM
          MOVE      "1",WBSCPERM
          MOVE      SP70,WBSCRDAT
          MOVE      SP70,WBSCREND
          MOVE      SP70,WBSCACTV       * Active Process ID
          MOVE      SP70,WBSCUNIX
          MOVE      SCHDDESC,WBSCDSRP   * Description of Report
          MOVE      SCHDPGID,WBSCRPID   * Report Program ID
          MOVE      USERID,WBSCUSER     * User ID
          PACK      WBSCRDTE,CCC,CYY,CMM,CDD  * Request Date
          REP       " 0",WBSCRDTE
          MOVE      CTIMEIS,WBSCRTIM    * Request Time
          MOVE      SP70,WBSCSDAT       * Start Date
          MOVE      SP70,WBSCSTIM       * Start Time
          MOVE      ZERO,WBSCSFLG       * Start Flag
          MOVE      SCHDTYPE,WBSCOTYP   * Output Type 0=Text 1=Html
          MOVE      ZERO,WBSCNREC       * Expected no of records
          MOVE      ZERO,WBSCRPRO       * Records Processed
          MOVE      SP70,WBSCUTIM       * Last Update Time
          MOVE      SCHDPRNT,WBSCPRIN * Printer
          MOVE      SP70,WBSCSPOO       * Spool File
          MOVE      SCHDCOPY,WBSCNCOP   * No of Copies
.
          CALL      UPWBSC1             * Update Schedule
.
          CALL      MAKKEY00            * Make Key Strokes File
.
          CALL      UUWBSC1             * Unlock record
.
SCHPRT99  RETURN
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
.         Index 1
.
RSTEMP1   READ      ECLTEMP1,KEY24;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      ECLTEMP1,KEY24;PMEDTRID,PMEDFTID,PMEDRADV,PMEDPNUM,PARTPANT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    ECLTEMP1;PMEDTRID,PMEDFTID,PMEDRADV,PMEDPNUM,PARTPANT
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    ECLTEMP1;PMEDTRID,PMEDFTID,PMEDRADV,PMEDPNUM,PARTPANT
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   WRITE     ECLTEMP1,KEY24;PMEDTRID,PMEDFTID,PMEDRADV,PMEDPNUM,PARTPANT
          RETURN
.
UPTEMP1   UPDATE    ECLTEMP1;PMEDTRID,PMEDFTID,PMEDRADV,PMEDPNUM,PARTPANT
          RETURN
.
DETEMP1   DELETE    ECLTEMP1,KEY24
          RETURN
.
.         Index 2
.
RSTEMP2   READ      ECLTEMP2,KEY27;;
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    ECLTEMP2;PMEDTRID,PMEDFTID,PMEDRADV,PMEDPNUM,PARTPANT
          GOTO      OVERCOND IF OVER
          RETURN
+
.
          INC       TFILENAM                * Generate Temp File Name
          INC       WEBERRIO/INC            * Web Server Error Logging

          INC       IBAPRNIO/INC
          INC       AAEDE1IO/INC
          INC       EMRVISIO/INC
          INC       FMSCSAIO/INC
          INC       FMSLMAIO/INC
          INC       OUTSITIO/INC
          INC       OUTBB1IO/INC
          INC       PATCODIO/INC
          INC       PATDTRIO/INC
          INC       PATDDHIO/INC
          INC       PATFN1IO/INC
          INC       PATFX1IO/INC
          INC       PATHFRIO/INC
          INC       PATHSPIO/INC
          INC       PATINVIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATVISIO/INC
          INC       PATUREIO/INC
          INC       PMSEAHIO/INC
          INC       PMSECAIO/INC
          INC       PMSECTIO/INC
          INC       PMSERHIO/INC
          INC       PMSERDIO/INC
          INC       PMSVX1IO/INC
          INC       RCPBDTIO/INC
          INC       RCPBNKIO/INC
          INC       RCPDTEIO/INC
          INC       RCPREGIO/INC
          INC       WEBSECIO/INC
          INC       WEBSCHIO/INC
.
          INC       PATDDHRD
          INC       RSHWEBCD
          INC       STD001IO
.

