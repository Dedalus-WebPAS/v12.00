.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVPRIN                                                    *
.* Desc      :   Data Migration Program to upload printer related data from  *
.*               a third party legacy system into webPAS.                    *
.*****************************************************************************
.* Date      :   14/06/2011                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the convprin.txt file and    *
.*               for each valid record found, it will write a new ibaprtaf   *
.*               record.  For each non-blank valid department code, it will  *
.*               write a record to ibapddaf.                                 *
.* Mods      :                                                               *
.*        V10.04.01  17/03/2014  Steve Armstrong   CAR 296128                *
.*                   Added display of warning message if error records found.*
.*****************************************************************************
.*        V10.02.00  14/06/2011  Steve Armstrong   CAR 239574                *
.*                   Created program                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       IBADPTFD/INC
          INC       IBAPDDFD/INC
          INC       IBAPRTFD/INC
          INC       PATHSPFD/INC
.
.         Printer upload file layout - convprin.txt
.
PRINTUPL  FILE      HL7, FIXED=4000         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
PRINCODE  DIM       6       1     * Printer Code             (ibaprtaf.qprtcode)
PRINDESC  DIM       20      7     * Printer Description      (ibaprtaf.prtdesc)
PRINHOSP  DIM       3      27     * Hospital Code (pathspaf) (ibaprtaf.ibpthosp)
PRINQUEN  DIM       50     30     * Queue Name               (ibaprtaf.ibptquen)
PRINLOCN  DIM       80     80     * Location Description     (ibaprtaf.ibptlocn)
PRINSCRP  DIM       80    160     * Script Parameters        (ibaprtaf.ibptscrp)
PRINTYPE  DIM       2     240     * Printer Type             (ibaprtaf.prttype)
.                                       0 = No barcoding facility
.                                       1 = HP2934A (Rel 5 & 6)
.                                       2 = Epson with dongle
.                                             (Rel 5)       
.                                       3 = Tharo Freedom (Rel 5)
.                                       4 = Intermec 3400 (Rel 6)
.                                       5 = Epson DLQ-3000+
.                                       6 = Sato CX200
.                                       7 = Zebra
.                                       8 = Datamax E-class
.                                       9 = Generic Barcoding
PRINPAPR  DIM       2     242     * Paper Type               (ibaprtaf.prtpaper)
.                                       0 = Either
.                                       1 = Plain Paper
.                                       2 = Special Stationary
PRINDP01  DIM       6     244     * Department 1  (ibadptaf) (ibapddaf.ibpddept)
PRINDP02  DIM       6     250     * Department 2  (ibadptaf) (ibapddaf.ibpddept)
PRINDP03  DIM       6     256     * Department 3  (ibadptaf) (ibapddaf.ibpddept)
PRINDP04  DIM       6     262     * Department 4  (ibadptaf) (ibapddaf.ibpddept)
PRINDP05  DIM       6     268     * Department 5  (ibadptaf) (ibapddaf.ibpddept)
PRINDP06  DIM       6     274     * Department 6  (ibadptaf) (ibapddaf.ibpddept)
PRINDP07  DIM       6     280     * Department 7  (ibadptaf) (ibapddaf.ibpddept)
PRINDP08  DIM       6     286     * Department 8  (ibadptaf) (ibapddaf.ibpddept)
PRINDP09  DIM       6     292     * Department 9  (ibadptaf) (ibapddaf.ibpddept)
PRINDP10  DIM       6     298     * Department 10 (ibadptaf) (ibapddaf.ibpddept)
PRINDP11  DIM       6     304     * Department 11 (ibadptaf) (ibapddaf.ibpddept)
PRINDP12  DIM       6     310     * Department 12 (ibadptaf) (ibapddaf.ibpddept)
PRINDP13  DIM       6     316     * Department 13 (ibadptaf) (ibapddaf.ibpddept)
PRINDP14  DIM       6     322     * Department 14 (ibadptaf) (ibapddaf.ibpddept)
PRINDP15  DIM       6     328     * Department 15 (ibadptaf) (ibapddaf.ibpddept)
PRINDP16  DIM       6     334     * Department 16 (ibadptaf) (ibapddaf.ibpddept)
PRINDP17  DIM       6     340     * Department 17 (ibadptaf) (ibapddaf.ibpddept)
PRINDP18  DIM       6     346     * Department 18 (ibadptaf) (ibapddaf.ibpddept)
PRINDP19  DIM       6     352     * Department 19 (ibadptaf) (ibapddaf.ibpddept)
PRINDP20  DIM       6     358     * Department 20 (ibadptaf) (ibapddaf.ibpddept)
PRINDP21  DIM       6     364     * Department 21 (ibadptaf) (ibapddaf.ibpddept)
PRINDP22  DIM       6     370     * Department 22 (ibadptaf) (ibapddaf.ibpddept)
PRINDP23  DIM       6     376     * Department 23 (ibadptaf) (ibapddaf.ibpddept)
PRINDP24  DIM       6     382     * Department 24 (ibadptaf) (ibapddaf.ibpddept)
PRINDP25  DIM       6     388     * Department 25 (ibadptaf) (ibapddaf.ibpddept)
PRINDP26  DIM       6     394     * Department 26 (ibadptaf) (ibapddaf.ibpddept)
PRINDP27  DIM       6     400     * Department 27 (ibadptaf) (ibapddaf.ibpddept)
PRINDP28  DIM       6     406     * Department 28 (ibadptaf) (ibapddaf.ibpddept)
PRINDP29  DIM       6     412     * Department 29 (ibadptaf) (ibapddaf.ibpddept)
PRINDP30  DIM       6     418     * Department 30 (ibadptaf) (ibapddaf.ibpddept)
PRINDP31  DIM       6     424     * Department 31 (ibadptaf) (ibapddaf.ibpddept)
PRINDP32  DIM       6     430     * Department 32 (ibadptaf) (ibapddaf.ibpddept)
PRINDP33  DIM       6     436     * Department 33 (ibadptaf) (ibapddaf.ibpddept)
PRINDP34  DIM       6     442     * Department 34 (ibadptaf) (ibapddaf.ibpddept)
PRINDP35  DIM       6     448     * Department 35 (ibadptaf) (ibapddaf.ibpddept)
PRINDP36  DIM       6     454     * Department 36 (ibadptaf) (ibapddaf.ibpddept)
PRINDP37  DIM       6     460     * Department 37 (ibadptaf) (ibapddaf.ibpddept)
PRINDP38  DIM       6     466     * Department 38 (ibadptaf) (ibapddaf.ibpddept)
PRINDP39  DIM       6     472     * Department 39 (ibadptaf) (ibapddaf.ibpddept)
PRINDP40  DIM       6     478     * Department 40 (ibadptaf) (ibapddaf.ibpddept)
PRINDP41  DIM       6     484     * Department 41 (ibadptaf) (ibapddaf.ibpddept)
PRINDP42  DIM       6     490     * Department 42 (ibadptaf) (ibapddaf.ibpddept)
PRINDP43  DIM       6     496     * Department 43 (ibadptaf) (ibapddaf.ibpddept)
PRINDP44  DIM       6     502     * Department 44 (ibadptaf) (ibapddaf.ibpddept)
PRINDP45  DIM       6     508     * Department 45 (ibadptaf) (ibapddaf.ibpddept)
PRINDP46  DIM       6     514     * Department 46 (ibadptaf) (ibapddaf.ibpddept)
PRINDP47  DIM       6     520     * Department 47 (ibadptaf) (ibapddaf.ibpddept)
PRINDP48  DIM       6     526     * Department 48 (ibadptaf) (ibapddaf.ibpddept)
PRINDP49  DIM       6     532     * Department 49 (ibadptaf) (ibapddaf.ibpddept)
PRINDP50  DIM       6     538     * Department 50 (ibadptaf) (ibapddaf.ibpddept)
.
. End of Record           544
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ADDCOUNT  FORM      8             * added record count
.
CODCOUNT  FORM      8             * code error record count
COUNTER   FORM      2
CURRCENT  FORM      2             * current century
CURRDATE  DIM       8             * current date
.
DIM6      DIM       6
DUPCOUNT  FORM      8             * duplicate record count
.
ERORDESC  DIM       70
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
FORM10    FORM      10
.
MANCOUNT  FORM      8             * mandatory field error record count
.
NUMCOUNT  FORM      8             * numeric error record count
.
RECCOUNT  FORM      8             * record read counter
.
TEMPCODE  DIM       10            * Coded field (length = max code field length)
TEMPTYPE  FORM      1             * Type of coded field
TMPFIELD  DIM       8             * Field name
TMPSTRNG  DIM       40            * Temporary string (max field length)
.
VCHKFLAG  FORM      1             * Validation flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
.
.
.
. PROGRAM CONSTANTS
. -----------------
PIPE      INIT      "|"
.
.
.
PRGID     INIT      "CONVPRIN"
PRGNAM    INIT      "Upload Printers"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with upload
.
MAIN1000  CALL      OPEN0000               * open upload file
          BRANCH    EXIT,MAIN0100          * file not found
.
          CALL      ASKQ0000               * validation run only ?
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      UPLD0000               * process upload
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"ibaprtaf";
          OPEN      IBAPRTA1,"ibaprtaf"
.
          DISPLAY   *P64:24,"ibadptaf";
          OPEN      IBADPTA1,"ibadptaf"
.
          DISPLAY   *P64:24,"ibapddaf";
          OPEN      IBAPDDA1,"ibapddaf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"controlf"
          OPEN      CONTROLF,"controlf"
.
          MOVE      ONE,CNOUNDLN
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data upload                         *
.*                        TRUE  (1)  Exit selected                           *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run data upload
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               OPEN0000              Called by: MAIN0000   *
.*                  Open upload file (convprin.txt)                          *
.*****************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      PRINTUPL,"convprin"
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  DISPLAY   *P1:24,*EL,*B,"Upload file - convprin.txt - not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.*****************************************************************************
.*                               ASKQ0000              Called by: MAIN0000   *
.*                  Ask if running validation only                           *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.*****************************************************************************
.
ASKQ0000  MOVE      ANSY,ANS
          KEYIN     *P1:10,*EL,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:10,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DYES,*HOFF:
                      *P35:10,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DNO,*HOFF:
                      *P35:10,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ0000                     * invalid input
.
ASKQ9999  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                  Process the PMI upload file records                       *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CURRCENT
.
          DISPLAY   *P1:13,"Processing ",*V2LON,"convprin.txt",*HOFF:
                    *P1:15,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:17,"Printer    : ":
                    *P1:18,"Description: ":
                    *P1:19,"Records    : "
.
          MOVE      ZERO,RECCOUNT                * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
          MOVE      ZERO,NUMCOUNT                * init. num error record count
.
          CALL      HEAD0000                     * Print the report header
.
.         Loop through upload file records
.
UPLD1000  READ      PRINTUPL,SEQ;PRINCODE,PRINDESC,PRINHOSP,PRINQUEN,PRINLOCN:
                                 PRINSCRP,PRINTYPE,PRINPAPR,PRINDP01,PRINDP02:
                                 PRINDP03,PRINDP04,PRINDP05,PRINDP06,PRINDP07:
                                 PRINDP08,PRINDP09,PRINDP10,PRINDP11,PRINDP12:
                                 PRINDP13,PRINDP14,PRINDP15,PRINDP16,PRINDP17:
                                 PRINDP18,PRINDP19,PRINDP20,PRINDP21,PRINDP22:
                                 PRINDP23,PRINDP24,PRINDP25,PRINDP26,PRINDP27:
                                 PRINDP28,PRINDP29,PRINDP30,PRINDP31,PRINDP32:
                                 PRINDP33,PRINDP34,PRINDP35,PRINDP36,PRINDP37:
                                 PRINDP38,PRINDP39,PRINDP40,PRINDP41,PRINDP42:
                                 PRINDP43,PRINDP44,PRINDP45,PRINDP46,PRINDP47:
                                 PRINDP48,PRINDP49,PRINDP50
          GOTO      UPLD9000 IF OVER
.
          ADD       ONE,RECCOUNT                 * increment records read
          IF        (RECCOUNT%1000) = 0 | RECCOUNT = 1
            DISPLAY   *P14:17,*V2LON,PRINCODE:
                      *P14:18,PRINDESC:
                      *P14:19,RECCOUNT;
          ENDIF
.
          CALL      POUT0000                     * pad out fields with spaces
.
          CALL      CLER0000                     * clear database variables
.
          CALL      MAND0000                     * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VNUM0000                     * validate numeric fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      SETV0000                     * set up file variables
.
          CALL      CVAL0000                     * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          MOVE      PRTCODE,KEY6
          CALL      RDAPRTA1
          IF        OVRCD = 1
            CALL      WRPRTA1                    * write new record
            ADD       ONE,ADDCOUNT               * increment added record count
.
            CALL      WPDP0000                   * write printer/dept. record
          ELSE
            MOVE      "Printer record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
          GOTO      UPLD1000                     * get next record
.
.         Upload completed
.
UPLD9000  ASSIGN    (CODCOUNT+DUPCOUNT+MANCOUNT+NUMCOUNT),FORM10
          IF        FORM10 > 0
            CALL      LINE0000                   * print bottom line if errors
          ENDIF
.
          COMPARE   CLNO,FIFTY6                  * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:19,*V2LON,RECCOUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",RECCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT,*N:
                    *1,"Duplicate Records detected            - ",DUPCOUNT,*N:
                    *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT,*N:
                    *1,"Records with invalid numbers detected - ",NUMCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      PRINCODE,TMPSTRNG
          MOVE      "PRINCODE",TMPFIELD          * printer code
          CALL      CHKM0000
.
          MOVE      PRINDESC,TMPSTRNG
          MOVE      "PRINDESC",TMPFIELD          * printer description
          CALL      CHKM0000
.
          MOVE      PRINQUEN,TMPSTRNG
          MOVE      "PRINQUEN",TMPFIELD          * printer queue
          CALL      CHKM0000
.
          MOVE      PRINTYPE,TMPSTRNG
          MOVE      "PRINTYPE",TMPFIELD          * printer type
          CALL      CHKM0000
.
          MOVE      PRINPAPR,TMPSTRNG
          MOVE      "PRINPAPR",TMPFIELD          * paper type
          CALL      CHKM0000
.
          BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: TMPSTRNG - field to be checked                                  *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     TMPSTRNG,SP70                * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.******************************************************************************
.*                                  CLER0000              Called by: UPLD0000 *
.*                    Clear all the database fields                           *
.******************************************************************************
.
CLER0000  MOVE      ZERO,PRTCODE
          MOVE      SP70,PRTDESC
          MOVE      ZERO,PRTAVAL
          MOVE      ZERO,PRTTYPE
          MOVE      ZERO,PRTPAPER
          MOVE      SP70,IBPTHOSP
          MOVE      SP70,IBPTQUEN
          MOVE      SP70,IBPTLOCN
          MOVE      SP70,IBPTSCRP
          PACK      PRTSPARE,SP70,SP70
.
CLER9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          PRINT     *1,"< convprin.txt >"
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Printer",*11,PIPE,*13,"Description":
                    *34,PIPE,*36,"Error Description",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  SETV0000              Called by: UPLD0000 *
.*                       Load the record variables                            *
.******************************************************************************
.
SETV0000  MOVE      PRINCODE,PRTCODE
          MOVE      PRINDESC,PRTDESC
          MOVE      PRINHOSP,IBPTHOSP
          MOVE      PRINQUEN,IBPTQUEN
          MOVE      PRINLOCN,IBPTLOCN
          MOVE      PRINSCRP,IBPTSCRP
          MOVE      PRINTYPE,PRTTYPE
          MOVE      PRINPAPR,PRTPAPER
.
SETV9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces given that we        *
.*            are dealing with pipe delimited records                        *
.*****************************************************************************
.
POUT0000  PACK      PRINCODE,PRINCODE,SP70
          RJUSTIFY  PRINCODE
          PACK      PRINDESC,PRINDESC,SP70
          PACK      PRINHOSP,PRINHOSP,SP70
          PACK      PRINQUEN,PRINQUEN,SP70
          PACK      PRINLOCN,PRINLOCN,SP70
          PACK      PRINSCRP,PRINSCRP,SP70
          PACK      PRINTYPE,PRINTYPE,SP70
          RJUSTIFY  PRINTYPE
          PACK      PRINPAPR,PRINPAPR,SP70
          RJUSTIFY  PRINPAPR
          PACK      PRINDP01,PRINDP01,SP70
          PACK      PRINDP02,PRINDP02,SP70
          PACK      PRINDP03,PRINDP03,SP70
          PACK      PRINDP04,PRINDP04,SP70
          PACK      PRINDP05,PRINDP05,SP70
          PACK      PRINDP06,PRINDP06,SP70
          PACK      PRINDP07,PRINDP07,SP70
          PACK      PRINDP08,PRINDP08,SP70
          PACK      PRINDP09,PRINDP09,SP70
          PACK      PRINDP10,PRINDP10,SP70
          PACK      PRINDP11,PRINDP11,SP70
          PACK      PRINDP12,PRINDP12,SP70
          PACK      PRINDP13,PRINDP13,SP70
          PACK      PRINDP14,PRINDP14,SP70
          PACK      PRINDP15,PRINDP15,SP70
          PACK      PRINDP16,PRINDP16,SP70
          PACK      PRINDP17,PRINDP17,SP70
          PACK      PRINDP18,PRINDP18,SP70
          PACK      PRINDP19,PRINDP19,SP70
          PACK      PRINDP20,PRINDP20,SP70
          PACK      PRINDP21,PRINDP21,SP70
          PACK      PRINDP22,PRINDP22,SP70
          PACK      PRINDP23,PRINDP23,SP70
          PACK      PRINDP24,PRINDP24,SP70
          PACK      PRINDP25,PRINDP25,SP70
          PACK      PRINDP26,PRINDP26,SP70
          PACK      PRINDP27,PRINDP27,SP70
          PACK      PRINDP28,PRINDP28,SP70
          PACK      PRINDP29,PRINDP29,SP70
          PACK      PRINDP30,PRINDP30,SP70
          PACK      PRINDP31,PRINDP31,SP70
          PACK      PRINDP32,PRINDP32,SP70
          PACK      PRINDP33,PRINDP33,SP70
          PACK      PRINDP34,PRINDP34,SP70
          PACK      PRINDP35,PRINDP35,SP70
          PACK      PRINDP36,PRINDP36,SP70
          PACK      PRINDP37,PRINDP37,SP70
          PACK      PRINDP38,PRINDP38,SP70
          PACK      PRINDP39,PRINDP39,SP70
          PACK      PRINDP40,PRINDP40,SP70
          PACK      PRINDP41,PRINDP41,SP70
          PACK      PRINDP42,PRINDP42,SP70
          PACK      PRINDP43,PRINDP43,SP70
          PACK      PRINDP44,PRINDP44,SP70
          PACK      PRINDP45,PRINDP45,SP70
          PACK      PRINDP46,PRINDP46,SP70
          PACK      PRINDP47,PRINDP47,SP70
          PACK      PRINDP48,PRINDP48,SP70
          PACK      PRINDP49,PRINDP49,SP70
          PACK      PRINDP50,PRINDP50,SP70
.
POUT9999  RETURN
+
.*****************************************************************************
.*                            VNUM0000             Called by: UPLD0000       *
.*                    Validate numeric fields                                *
.* Returns:  EXIT - 0 = No numeric validation errors                         *
.*                  1 = Numeric validation errors                            *
.*          NUMCOUNT - updated count of records with numeric field errors    *
.*****************************************************************************
.
VNUM0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
.         Printer Code numeric field
.
          TYPE      PRINCODE                     * printer code numeric ?
          GOTO      VNUM0050 IF EQUAL            * yes - valid
.
          MOVE      "PRINCODE",TMPFIELD          * no - error
          CALL      NERR0000
.
.         Printer Type numeric field (valid values 0 through 9)
.
VNUM0050  REP       " 0",PRINTYPE
.
          TYPE      PRINTYPE                     * printer type numeric ?
          GOTO      VNUM0100 IF EQUAL            * yes - valid
.
          MOVE      "PRINTYPE",TMPFIELD          * no - error
          CALL      NERR0000
.
.         Paper Type numeric field (valid values 0, 1 and 2)
.
VNUM0100  REP       " 0",PRINPAPR
.
          TYPE      PRINPAPR                     * paper type numeric ?
          GOTO      VNUM0150 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      PRINPAPR,FORM1
          COMPARE   FORM1,TWO                    * paper type 0, 1 or 2 ?
          GOTO      VNUM0150 IF LESS             * no - error
          GOTO      VNUM9000                     * yes - valid value
.
VNUM0150  MOVE      "PRINPAPR",TMPFIELD
          CALL      NERR0000
.
VNUM9000  BRANCH    ERORFLAG,VNUM9100            * errors on number validation
.
          MOVE      ZERO,EXIT                    * no errors on no. validation
          GOTO      VNUM9999
.
VNUM9100  ADD       ONE,NUMCOUNT                 * incr. num. error record count
          MOVE      ONE,EXIT
.
VNUM9999  RETURN
+
.*****************************************************************************
.*                            NERR0000             Called by: VNUM0000       *
.*                    Process number error                                   *
.* Requires: TMPFIELD - field name                                           *
.*****************************************************************************
.
NERR0000  MOVE      "Invalid numeric field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set number error flag
.
NERR9999  RETURN
+
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields.                   *
.*        This validation is performed on the database fields just prior     *
.*        to writing the data and after any mappings have been performed.    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MATCH     SP3,PRINHOSP                 * blank code ?
          GOTO      CVAL0010 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PRINHOSP,SP10
          MOVE      "PRINHOSP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * pathspaf (hospital)
          CALL      VCOD0000
.
.         Loop through and check the fifty department codes
.
CVAL0010  MOVE      ZERO,COUNTER                 * initialise counter
.
          WHILE     COUNTER < FIFTY
            ADD       ONE,COUNTER                * increment counter
            LOAD      DIM6,COUNTER,PRINDP01,PRINDP02,PRINDP03,PRINDP04,PRINDP05:
                                   PRINDP06,PRINDP07,PRINDP08,PRINDP09,PRINDP10:
                                   PRINDP11,PRINDP12,PRINDP13,PRINDP14,PRINDP15:
                                   PRINDP16,PRINDP17,PRINDP18,PRINDP19,PRINDP20:
                                   PRINDP21,PRINDP22,PRINDP23,PRINDP24,PRINDP25:
                                   PRINDP26,PRINDP27,PRINDP28,PRINDP29,PRINDP30:
                                   PRINDP31,PRINDP32,PRINDP33,PRINDP34,PRINDP35:
                                   PRINDP36,PRINDP37,PRINDP38,PRINDP39,PRINDP40:
                                   PRINDP41,PRINDP42,PRINDP43,PRINDP44,PRINDP45:
                                   PRINDP46,PRINDP47,PRINDP48,PRINDP49,PRINDP50
.
            MATCH     SP6,DIM6                   * blank code ?
            IF        !@EQUAL
              PACK      TEMPCODE,DIM6,SP10       * no
              MOVE      "PRINDP",TMPFIELD
              ENDSET    TMPFIELD
              APPEND    COUNTER,TMPFIELD
              RESET     TMPFIELD
              REP       " 0",TMPFIELD
              MOVE      TWO,TEMPTYPE             * ibadptaf (departments)
              CALL      VCOD0000
            ENDIF
          DO
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100            * errors on code validation
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.*****************************************************************************
.
VCOD0000  BRANCH    TEMPTYPE,VCOD1000:           * pathspaf (hospital)
                             VCOD2000            * ibadptaf (departments)
.
.         Validate a hospital field (pathspaf)
.
VCOD1000  MOVE      TEMPCODE,KEY3
          CALL      RDPTHSP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a department field (ibadptaf)
.
VCOD2000  MOVE      TEMPCODE,KEY6
          CALL      RDIBDPT1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
          MOVE      ONE,ERORFLAG                 * set code error flag
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: UPLD0000       *
.*                   Print an error detail line               CHKM0000       *
.* Requires: Valid read on PMI records (for name fields)      DERR0000       *
.*           ERORDESC - error description                     TERR0000       *
.*           CLNO - current page line count                   NERR0000       *
.* Returns:  CLNO - updated page line count                   VCOD0000       *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          PRINT     *1,PIPE,*3,PRINCODE,*11,PIPE,*13,PRINDESC,*34,PIPE:
                    *36,ERORDESC,*132,PIPE
          ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
.*****************************************************************************
.*                              WPDP0000           Called by: UPLD0000       *
.*          Write a printer/department record (ibapddaf) for each valid      *
.*          department code                                                  *
.*****************************************************************************
.
.         Loop through and check the fifty department codes
.
WPDP0000  MOVE      ZERO,COUNTER                 * initialise counter
.
          WHILE     COUNTER < FIFTY
            ADD       ONE,COUNTER                * increment counter
            LOAD      DIM6,COUNTER,PRINDP01,PRINDP02,PRINDP03,PRINDP04,PRINDP05:
                                   PRINDP06,PRINDP07,PRINDP08,PRINDP09,PRINDP10:
                                   PRINDP11,PRINDP12,PRINDP13,PRINDP14,PRINDP15:
                                   PRINDP16,PRINDP17,PRINDP18,PRINDP19,PRINDP20:
                                   PRINDP21,PRINDP22,PRINDP23,PRINDP24,PRINDP25:
                                   PRINDP26,PRINDP27,PRINDP28,PRINDP29,PRINDP30:
                                   PRINDP31,PRINDP32,PRINDP33,PRINDP34,PRINDP35:
                                   PRINDP36,PRINDP37,PRINDP38,PRINDP39,PRINDP40:
                                   PRINDP41,PRINDP42,PRINDP43,PRINDP44,PRINDP45:
                                   PRINDP46,PRINDP47,PRINDP48,PRINDP49,PRINDP50
.
            MATCH     SP6,DIM6                   * blank code ?
            IF        !@EQUAL
              PACK      KEY12,DIM6,PRTCODE       * no
              CALL      RAIBPDD1
              IF        OVRCD = 1
                MOVE      DIM6,IBPDDEPT          * load department code
                PACK      IBPDSEQU,SP2,ONE       * load sequence code (1)
                MOVE      PRTCODE,IBPDPRTR       * load printer code
                PACK      IBPDSPAR,SP70,SP70
                CALL      WRIBPDD1               * write printer/department rec.
              ELSE
                PACK      KEY13,PRTCODE,SLASH,DIM6
                SQUEEZE   KEY13
                MOVE      "Printer/Dept. (",ERORDESC
                ENDSET    ERORDESC
                APPEND    KEY13,ERORDESC
                APPEND    ") record already exists ",ERORDESC
                RESET     ERORDESC
                CALL      PERR0000               * print error line
                ADD       ONE,DUPCOUNT           * increment dupl. record count
              ENDIF
            ENDIF
          DO
.
WPDP9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       IBADPTIO/INC
          INC       IBAPDDIO/INC
          INC       IBAPRTIO/INC
          INC       PATHSPIO/INC
