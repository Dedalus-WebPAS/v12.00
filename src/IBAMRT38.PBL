.******************************************************************************
.* System   :  MEDICAL RECORDS TRACKING SYSTEM                                *
.* Program  :  IBAMRT38                                                       *
.* Desc     :  RECORD RESERVATION REPORT                                      *
.******************************************************************************
.* Date     :  06/06/89                                                       *
.* Author   :  D.Di.Paola                                                     *
.* Comment  :  Copied from IBATRA38 and modified for the new Medical          *
.*          :  Records Tracking system for H.R.H.                             *
.* Mods     :                                                                 *
.*        V10.04.01 14/07/2014  Ebon Clements  CAR 261630                     *
.*                  Removed port number from temp file name                   *
.*        V10.02.01 04/07/2011  Ebon Clements  CAR 240724                     *
.*                  Mods for MRT hospital/location - Added hospital           *
.*                  to location key                                           *
.*        V9.08.01  31/01/2007  Peter Vela    CAR 127930                      *
.*                  Recompled for MRTRQHFD                                    *
.*        V9.04.01  29/04/2005  Peter Vela CAR 55214                          *
.*                  Recompiled for MRTCONFD                                   *
.*        V9.03.01  18/12/2003  Peter Vela                                    *
.*                  Recompiled for MRTCONFD                                   *
.*        V9.02.01  01/11/2001  Greg Horvat                                   *
.*                  Recompiled for ACTCOMN1 - Added xtra option to the        *
.*                  parameter PNSWRACE                                        *
.*        V5.10.B01 23/03/2001  Glenn Saunders                                *
.*                  Remove all refs to PATSUR file (old surname file).        *
.*        V5.08.03  13/02/2001 J.Tan                                  *
.*                  Mods to use MRTRQHFD/MRTRQDFD for WEB only        *
.*        V5.08.02  25.10.2000 J.Tan                                  *
.*                  Recompiled for WEB Report Scheduler               *
.*        V5.08.01  21/08/2000  Caleb Sharman                         *
.*                  Changed Health Fund variables to be 8 chars       *
.*        V5.07.01  11/03/1999  Jim Stathopoulos                      *
.*                  Increased DATFORM1 and DATFORM2                   *
.*        V5.07.B02 09/12/1998  Glenn Berry      5.07 Changes         *
.*                  Fix Printing of Century                           *
.*             V5.06.01 19/06/1998  Steve Armstrong    SRF 644694     *
.*             Fixed sort index definitions for key2 and key3         *
.*             V5.01.02 12/03/93 DWJ                                  *
.*             Recompile for MRCNSTFF                                 *
.*             V5.01.03 17/05/1993  Robert Sumsion                    *
.*             Converted vars and includes to mrt in standard form.   *
.*             V5.01.04 25/08/1993  ROD                               *
.*             recompiled for NZHIS                                   *
.*             V5.01.05 25/05/1994  Sandra Barcham                    *
.*             Fix for global recompile                               *
.**********************************************************************
.
           INC        STD001FD
          INC       NZHISIFD/INC                 * Include for NZHIS vars
          INC       NHIMASFD/INC                 * Include for NZHIS vars
          INC       PATCONFD/INC                 * Include for NZHIS vars
          INC       BOKRC1FD/INC          * booking file
          INC       MRTCONFD/INC
          INC       MRTMASFD/INC
          INC       MRTLOCFD/INC
          INC       MRTSTFFD/INC
          INC       MRTRESFD/INC
          INC       MRTRQHFD/INC
          INC       MRTRQDFD/INC
          INC       MRTMOVFD/INC
.
          INC       IBASEQFD/INC
          INC       PATCOMM/INC
          INC       PATGSRFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATPR1FD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       TFILEVAR/INC
          INC       OUTPREFD/INC
          INC       WEBERRFD/INC
.
           INC        PATDHEAD/INC
           INC        PATCALAG/INC
.
SORT1      INIT       "u1-20,21-30,31-35,36-45"
SORT2      INIT       "u76-95,21-30,31-35,36-45"
SORT3      INIT       "u56-75,21-30,31-35,36-45"
SORTKEY    DIM        24
TEMPFILE   IFILE      SQL, FIXED=116, KEY=SORTKEY
+
.
.--------- temporary file definition -------
.
LOCATION  DIM        20           1-20
REQDATE   DIM        10          21-30
REQTIME   DIM        5           31-35
.MRRSKEY    DIM        10          36-45
RESVDATE  DIM        10          46-55
RECORDID  DIM        20          56-75
REQSTOR   DIM        20          76-95
REASON    DIM        20          96-115
.                          e-o-r = 116 
.
.**********************************************************************
.*                         CONSTANTS                                  *
.**********************************************************************
.
HEADER1    INIT       "By Location"
HEADER2    INIT       "By Requestor"
HEADER3    INIT       "By U/R Number"
DFLTCODE   INIT       "All "
.
.**********************************************************************
.*                         GLOBAL VARIABLES                           *
.**********************************************************************
.
COUNT     FORM      2
DISPARRY  DIM       4[36]
DSTFARRY  DIM       6[36]
BEGINCNT   FORM       1
BJDAY     FORM        3
.
CJDAY      FORM       3
CMDLINE    DIM        60
CLOSDATE   DIM        10
CODEDES1   DIM        6
CODEDES2   DIM        6
.
DATFORM1   FORM       8
DATFORM2   FORM       8
DESCRPT1   DIM        30
DESCRPT2   DIM        30
DIM20      DIM        20
DIM30      DIM        30
DIM31      DIM        31
DIM55      DIM        55
.
ENDLOCN    DIM        7
ENDRECV    DIM        6
.
FROMDATE   DIM        8 
FNAMEI     DIM        8
FRSTGNAM   DIM       40
FULLGNAM   DIM       80
.
HOMEDESC   DIM        30
HOMELOCN   DIM        7
HOMEONLY   FORM       "0"
ITEM       FORM       1
.
.
LINE       DIM        55
LINECNT    FORM       2
LOCATNS    FORM       1
LOCNTEST   DIM        7
.
NAMEDIM    DIM        25
OPENDATE   DIM        10
.
PAGENO     FORM       8
PRTCODE    DIM        7
.
NMPNUMB    DIM      20
.
RDAY       DIM        2
RMON       DIM        2
RYEAR      DIM        2
RCENT      DIM        2
RECOUNT    FORM       1
.
SCNDGNAM   DIM       40
SEQTYPE    DIM        13
STRTLOCN   DIM        7
STRTRECV   DIM        6
SKIPCNT    FORM       1
.
TEMP55     DIM        55
TODATE     DIM        8  
.
VDAY       DIM        2
VMON       DIM        2
VYEAR      DIM        2
VCENT      DIM        2
.
PRGID     INIT      "IBAMRT38"
PRGNAM    INIT      "Record Reservation Report"
VERSION   INIT      "V12.00.00"
+
.**********************************************************************
.*                           MAINLINE                                 *
.*                      controlling logic                             *
.**********************************************************************
ML0000     CALL       INIT0000                      * intialization
ML0200     CALL       CLR0000                       * clear input variables
           CALL       HOME0000                      * input home location
.
.--------- process - By Location Sequence        
.                  - By Requestor Sequence        
.                  - By U/R Number Sequence         
.
           CALL       OPTN0000                      * option screen
           BRANCH     EXIT,ML9000
           BRANCH     OPTION,ML0300,ML0400,ML0500
           GOTO       ML0200 
.
.--------- by location ------
.
ML0300     CALL       CREA0000                      * set up port dependancy
.                                                   * and build tempfile
           CALL       LOCN0000                      * input location code range
           GOTO       ML0600                        * continue....
.
.--------- by receiver ------
.
ML0400     CALL       CREA0000                      * set up port dependancy
.                                                   * and build tempfile
           CALL       RECV0000                      * input location code range
           GOTO       ML0600                        * continue....
.
.--------- by u/r number -----
.
ML0500     CALL       CREA0000                      * set up port dependancy
.                                                   * and build tempfile
           CALL       PAT0000                       * input U/R Number
           BRANCH     EXIT,ML0200,ML0500            * 1=exit, 2=re enter
.
ML0600     CALL       PARA0000                      * date parameters
.
ML1200     BRANCH     ITEM,ML1300,ML1400
ML1300     CALL       ASAT0000                      * accept as at a date
           BRANCH     EXIT,ML0600
           GOTO       ML1450
ML1400     CALL       DATE0000                      * accept date range
.
ML1450     CALL       CONT0000                      * ok to continue...
           BRANCH     EXIT,ML9000,ML0200            * exit=1 goto menu
           CALL       EXTR0000                      * extraction routine 
.
           MATCH      "IBARSH99",PGM
           GOTO       ML1500 IF EQUAL
           BRANCH     EXIT,ML0200,ML1500            * exit=1 extraction done  
.                                                   * exit=2 no records
.
ML1500     CALL       TEMP0000                      * read tempfile and print
           GOTO       ML0200
.
ML9000     CALL       KILL0000                      * delete temp file
ML9999     CHAIN      PGM
+
.**********************************************************************
.*                           INIT0000                                 *
.*                   call header routine and open files               *
.**********************************************************************
INIT0000    CALL      DISPHEAD                        * display header
            DISPLAY   *P64:24,"Opening mrtmasaf";
            OPEN      MRTMASA1,"mrtmasaf"             * open files
            DISPLAY   *P64:24,"Opening mrtmasaf";
            OPEN      MRTMASA2,"mrtmasaf"             * open files
            DISPLAY   *P64:24,"Opening mrtlocaf";
            OPEN      MRTLOCA1,"mrtlocaf"             
            DISPLAY   *P64:24,"Opening mrtlocaf";
            OPEN      MRTLOCA2,"mrtlocaf"             
            DISPLAY   *P64:24,"Opening mrtstfaf"
            OPEN      MRTSTFA1,"mrtstfaf"
            DISPLAY   *P64:24,"Opening mrtstfaf"
            OPEN      MRTSTFA3,"mrtstfaf"
            DISPLAY   *P64:24,"Opening mrtresaf";
            OPEN      MRTRESA1,"mrtresaf"
            DISPLAY   *P64:24,"Opening mrtresaf";
            OPEN      MRTRESA2,"mrtresaf"
            DISPLAY   *P64:24,"Opening mrtmovaf";
            OPEN      MRTMOVA1,"mrtmovaf"
            DISPLAY   *P64:24,"Opening controlf";
            OPEN      CONTROLF,"controlf"
          DISPLAY   *P64:24,"patgsrnf"
          OPEN      PATGSRN3,"patgsrnf"
          DISPLAY   *P64:24,"patgsrnf"
          OPEN      PATGSRN4,"patgsrnf"
          DISPLAY   *P64:24,"patgsrnf"
          OPEN      PATGSRN2,"patgsrnf"
            DISPLAY   *P64:24,"Opening patmi1af";
            OPEN      PATMI1A1,"patmi1af"
            DISPLAY   *P64:24,"Opening patpramf";
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
            DISPLAY   *P64:24,"Opening patma1af";
            OPEN      PATMA1A1,"patma1af"
            DISPLAY   *P72:24,"patmx1af";
            OPEN      PATMX1A1,"patmx1af"
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
. ---- setup temporary file name ----
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEI
.
INIT9999    RETURN
.
.***********************************************************************
.*                             CREA0000                                *
.*                    create tempfile for details                      *
.***********************************************************************
CREA0000
            DISPLAY   *P40:23,*EL,*V2LON,"Creating Temporary File - ":
                                        "Please Wait",*HOFF;
.
            CALL      KILL0000                       * erase temp file
.
            CLEAR     CMDLINE
            APPEND    "isbuild ",CMDLINE                 * build tempfile
            APPEND    FNAMEI,CMDLINE
            APPEND    " 116 ",CMDLINE
            APPEND    SORTKEY,CMDLINE
            RESET     CMDLINE
.
            EXECUTE   CMDLINE,TASKID
            OPEN      TEMPFILE,FNAMEI
.
CREA9999    RETURN
+
.**********************************************************************
.*                           KILL0000                                 *
.*                       Kill tempfile                                *
.**********************************************************************
KILL0000   CLEAR     CMDLINE                        * erase filename
           CLOSE     TEMPFILE 
           APPEND    "iserase ",CMDLINE             * ie. temprs
           APPEND    FNAMEI,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
KILL9999   RETURN
+
.**********************************************************************
.*                           CLR0000                                  *
.*                       clear input variables                        *
.**********************************************************************
CLR0000     MOVE       ZERO,PAGENO
            MOVE       SP10,RESVDATE
            MOVE       SP10,REQDATE
            MOVE       SP10,MRRSKEY
            MOVE       SP20,RECORDID
            MOVE       SP20,REQSTOR
            MOVE       SP10,REQDATE
            MOVE       SP5,REQTIME
            MOVE       SP20,LOCATION
            MOVE       SP20,REASON
            UNPACK     SP20,SEQTYPE
            UNPACK     SP30,VDAY,VMON,VYEAR,VCENT,RDAY,RMON,RYEAR,RCENT
            MOVE       ZERO,BEGINCNT
            MOVE       SP30,HOMEDESC
            MOVE       SP7,HOMELOCN
            MOVE       SP7,PRTCODE
            UNPACK     SP30,STRTLOCN,ENDLOCN,STRTRECV,ENDRECV
            MOVE       SP10,CODEDES1
            MOVE       SP10,CODEDES2
            MOVE       SP30,DESCRPT1
            MOVE       SP30,DESCRPT2
.
CLR9999     RETURN
.
.**********************************************************************
.*                           OPTN0000                                 *
.*                    select option screen                            *
.**********************************************************************
OPTN0000    MOVE       FALSE,EXIT
            MOVE       "80",LINECNT
.
            HLINE      *G37,2,53,80
            DISPLAY    *P1:6,*V2LON,"0 ",*HOFF,"= Exit":
                       *P1:7,*V2LON,"1 ",*HOFF,"=":
                       *P1:8,*V2LON,"2 ",*HOFF,"=":
                       *P1:9,*V2LON,"3 ",*HOFF,"=":
                       *P5:7,"By Location":
                       *P5:8,"By Requestor":
                       *P5:9,"By U/R Number":
                       *P1:11,"Please Select : ";
.
OPTN1000    KEYIN      *P17:11,*V2LON,OPTION,*HOFF
            COMPARE    ZERO,OPTION
            GOTO       OPTN9000 IF EQUAL
            COMPARE    "4",OPTION   
            GOTO       OPTN0000 IF NOT LESS
.
.-------- determine header -----
.
            UNPACK     SP20,SEQTYPE
            LOAD       SEQTYPE,OPTION,HEADER1,HEADER2,HEADER3
            DISPLAY    *P53:2,*V2LON,"- ",*+,SEQTYPE,SP1;
.
.-------- determine by option, which key is to be used for temp file ----
.
            LOAD       SORTKEY,OPTION,SORT1,SORT2,SORT3 
            GOTO       OPTN9999
. 
OPTN9000    MOVE       TRUE,EXIT
.
OPTN9999    RETURN
.
.***************************************************************************
.*                               ASAT0000                                  *
.*                          accept as at a date                            *
.***************************************************************************
.
.---------- keyin Specific date  -------
.
ASAT0000
            MOVE       FALSE,EXIT
            PACK       TODATE,SP8                    * move sp date range
            PACK       FROMDATE,SP8 
            PACK       OPENDATE,SP10                   * move sp date range
            PACK       CLOSDATE,SP10
            MOVE       "17",CCOL                       * set up keyin date
            MOVE       CCC,CCENT                      * parameters
            MOVE       "21",CVERT
            MOVE       "3",CDEFDTE
            MOVE       "45",ECOL
            MOVE       "21",EVERT
.
            DISPLAY    *P1:21,*EF,"As At Date    :";
            MOVE       SP2,CDAY                        
            MOVE       SP2,CMON
            MOVE       SP2,CYEAR
.
            CALL       KEYDATE                        * call keyin date routine
            MATCH      SP2,CDAY
            GOTO       ASAT8000 IF EQUAL
.
            PACK       OPENDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR    
            PACK       FROMDATE,SP20
            PACK       TODATE,CCENT,CYEAR,CMON,CDAY
            GOTO       ASAT9999
.
ASAT8000    MOVE       TRUE,EXIT
.
ASAT9999    RETURN
.
.***************************************************************************
.*                               DATE0000                                  *
.*                          accept date range                              *
.***************************************************************************
.
.---------- keyin first date range -------
.
DATE0000    PACK       OPENDATE,SP10                   * move sp date range
            PACK       CLOSDATE,SP10
            MOVE       "17",CCOL                       * set up keyin date
            MOVE       CCC,CCENT                      * parameters
            MOVE       "21",CVERT
            MOVE       "3",CDEFDTE
            MOVE       "45",ECOL
            MOVE       "21",EVERT
.
            DISPLAY    *P1:21,*EF,"Date Range    :":
                       *P27:21," TO ";
            MOVE       SP2,CDAY                        
            MOVE       SP2,CMON
            MOVE       SP2,CYEAR
.
            CALL       KEYDATE                        * call keyin date routine
            MATCH      SP2,CDAY
            GOTO       DATE5000 IF EQUAL
.
            PACK       OPENDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR    
            PACK       FROMDATE,CCENT,CYEAR,CMON,CDAY      * move to form field
            MOVE       FROMDATE,DATFORM1                   * used for comparison
.
.---------- keyin second date range -------
.
DATE1000    MOVE       "32",CCOL                       * set up keyin date 
            MOVE       "21",CVERT                      * parameters
            MOVE       CCC,CCENT
            MOVE       "3",CDEFDTE
            MOVE       "21",EVERT
            MOVE       "45",ECOL
.
            MOVE       SP2,CDAY
            MOVE       SP2,CMON
            MOVE       SP2,CYEAR
.
            CALL       KEYDATE                         * call keyin date routine
            MATCH      SP2,CDAY
            GOTO       DATE1000 IF EQUAL
.
            PACK       CLOSDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
            PACK       TODATE,CCENT,CYEAR,CMON,CDAY    * move to form field
            MOVE       TODATE,DATFORM2                 * for comparison  
.
            COMPARE    DATFORM1,DATFORM2               * compare 1st range to
            GOTO       DATE8000 IF LESS                * 2nd range. 1st date
            GOTO       DATE9999                        * must be less than 2nd 
.
DATE5000    DISPLAY    *P17:21,*V2LON,"Start",*HOFF," TO ",*V2LON,"Finish";
            MOVE       SP8,FROMDATE
            MOVE       "99999999",TODATE
            MOVE       "     Start",OPENDATE
            MOVE       "Finish    ",CLOSDATE
            GOTO       DATE9999
.
DATE8000    DISPLAY    *P1:24,*B,"Invalid entry for date range - Hit ":
                       "<",*V2LON,"RETURN",*HOFF,">";
            KEYIN      ANS;                            * error message
            GOTO       DATE0000
.
DATE9999    RETURN
+
.************************************************************************
.*                           PARA0000                                   *
.*                       input date parameters                          *
.************************************************************************
PARA0000    DISPLAY    *P1:15,*EF:
                       *P1:16,*V2LON,"1 ",*HOFF,"=":
                       *P1:17,*V2LON,"2 ",*HOFF,"=":
                       *P5:16,"As At A Date":
                       *P5:17,"Range Of Dates":
                       *P1:19,"Please Select : ";
.
PARA1000    KEYIN      *P17:19,*V2LON,ITEM,*HOFF
            COMPARE    ZERO,ITEM   
            GOTO       PARA2000 IF EQUAL
            COMPARE    "3",ITEM
            GOTO       PARA0000 IF NOT LESS
            GOTO       PARA9999
. 
PARA2000    BEEP
            GOTO       PARA0000
PARA9999    RETURN
+
.************************************************************************
.*                           CONT0000                                   *
.*                       check if ok to continue                        *
.************************************************************************
CONT0000    MOVE       FALSE,EXIT
.
            CALL       CONTQST
            MATCH      "1",ANS                       * 1 = yes 
            GOTO       CONT9999 IF EQUAL
            MATCH      "2",ANS                       * 2 = no
            GOTO       CONT8000 IF EQUAL
            MATCH      "3",ANS                       * 3 = cancel
            GOTO       CONT9000 IF EQUAL
            GOTO       CONT0000
.
CONT8000    MOVE       TWO,EXIT                      * No    
            GOTO       CONT9999
.
CONT9000    MOVE       TRUE,EXIT                     * Cancel
CONT9999    DISPLAY    *P1:24,*EL;
            RETURN
+
.**************************************************************************
.*                            HOME0000                                    *
.*                      keyin home location                               *
.**************************************************************************
HOME0000 MOVE      FALSE,EXIT
         MOVE      SP30,DIM30
         MOVE      SP30,MRLODESC
         READ      CONTROLF,SIXTY;*105,MRCNHMTY
         DISPLAY   *P1:4,*EF,"Home Location : ",UNDLN7,*P35:4,*EL;
         KEYIN     *P17:4,*V2LON,HOMELOCN,*HOFF;
         DISPLAY   *P17:4,*V2LON,HOMELOCN,*HOFF;
.
         RESET     HOMELOCN
         GOTO      HOME0500 IF EOS
.               
         ENDSET    HOMELOCN
         APPEND    SP7,HOMELOCN
         RESET     HOMELOCN
.
         MATCH     SP7,HOMELOCN
         GOTO      HOME0500 IF EQUAL 
.
         MATCH     "?",HOMELOCN
         GOTO      HOME3000 IF EQUAL
         GOTO      HOME0600
.
.------- if e.o.s. or spaces entered, default to all codes -----
.
HOME0500 MOVE      SP7,HOMELOCN              * clear input variable 
         MOVE      SP30,HOMEDESC             * clear description variable 
         MOVE      DFLTCODE,PRTCODE          * move default var to print var.
         DISPLAY   *P17:4,*V2LON,DFLTCODE,*HOFF;
         GOTO      HOME9999
.
.------- valid Location Code entered, however check to see if exists -----
.
HOME0600 PACK      KEY7,HOMELOCN
         CALL      RDMRLOC1
         BRANCH    OVRCD,HOME1000
         MATCH     MRCNHMTY,MRLOTYPE
         GOTO      HOME2000 IF NOT EQUAL
         MOVE      MRLODESC,HOMEDESC
         DISPLAY   *P35:4,HOMEDESC;
         MOVE      HOMELOCN,PRTCODE             * move variable to print var.
         GOTO      HOME9999
.
.------ home location code not on file -----
.
HOME1000 DISPLAY   *B,*P1:24,*EL,"Home Location Code Not On File - Hit ":
                   *V2LON,"<ENTER>",*HOFF," to continue";
         KEYIN     ANS;
         DISPLAY   *P1:24,*EL;
         GOTO      HOME0000
.
.------- home location code not a home location ------
.
HOME2000 DISPLAY   *B,*P1:24,*EL,"Home Location Code Not A Home Location - ":
                   "Hit ",*V2LON,"<ENTER>",*HOFF,"to continue";
         KEYIN     ANS;
         DISPLAY   *P1:24,*EL;
         GOTO      HOME0000
.
.--------- Question mark option entered, display valid home locations only ---
.
HOME3000  MOVE      SP7,KEY7
          CALL      RSMRLOC1
HOME3500  CALL      RKMRLOC1
          BRANCH    OVRCD,HOME5000
.
          MATCH     MRCNHMTY,MRLOTYPE               * check if a home location
          GOTO      HOME3500 IF NOT EQUAL
.
.------ Display Category Heading, and then loop over entries ------
.
          DISPLAY   *P1:4,*EF,*P30:4,*V2LON,*ULON,"HOME LOCATIONS"
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
.
.>>>>>>>  TRAP      HOME6000 IF F1
.
          MOVE      SP7,KEY7 
          CALL      RSMRLOC1
.
HOME4000  CALL      RKMRLOC1
          BRANCH    OVRCD,HOME7000
.
.-------- CHECK HOME LOCN IN SYS PAR MAINT-----
.
          MATCH     MRCNHMTY,MRLOTYPE                 * display only home locns
          GOTO      HOME4000 IF NOT EQUAL           * with a type equal to home
.
          MOVE      MRLODESC,DIM30
          DISPLAY   *PCCOL:CVERT,*V2LON,MRLOHOSP," - ",MRLOCODE,SP2,*HOFF,DIM30;
          ADD       ONE,CVERT
          COMPARE   TWENTY3,CVERT
          GOTO      HOME4000 IF LESS
.
          MOVE      FIVE,CVERT
          ADD       "40",CCOL
          COMPARE   "70",CCOL
          GOTO      HOME4000 IF LESS
.
.>>>>>>>  TRAPCLR   F1
.
          KEYIN     *P1:24,*EL," (",*V2LON,"E",*HOFF,")xit, (":
                    *V2LON,"N",*HOFF,")ext Screen : ",*V2LON,ANS;
.
          CMATCH    ANSE,ANS
          GOTO      HOME8000 IF EQUAL
.
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
          DISPLAY   *P1:5,*EF
.
.>>>>>>>  TRAP      HOME6000 IF F1
.
          GOTO      HOME4000
.
.------ If missing category show code missing ------
.
HOME5000  DISPLAY   *P1:4,*EF,*P30:4,*V2LON,*BLINKON:
                    "No Locations on file";
          GOTO      HOME7000
.
HOME6000  NORETURN
.>>>>>>>  TRAPCLR   F1
.
.------ End of codes ------
.
HOME7000  KEYIN     *P1:24,*EL,"Hit ",*V2LON,"<RETURN>",*HOFF:
                               " to continue ",*EOFF,ANS;
.
HOME8000  MOVE      ZERO,OVRCD
          GOTO      HOME0000
.
HOME9999  RETURN
.********************************************************************** 
.*                             LOCN0000                               *
.*                    keyin the range for location  codes             *
.**********************************************************************
LOCN0000  
          DISPLAY   *P1:12,*EF:
                    *P1:13,"Location From : ":
                    *P1:14,"Location To   : ";
.
. -----  Keyin the first code range ----
.
LOCN0500  MOVE      SP30,DESCRPT1
          DISPLAY   *P17:13,*EL,UNDLN7;
          KEYIN     *P17:13,*V2LON,STRTLOCN;             * keyin 1st code 
          DISPLAY   *P17:13,*V2LON,STRTLOCN;             * keyin 1st code 
.
          MATCH     QUEST,STRTLOCN
          GOTO      LOCN8000 IF EQUAL               * display locations routine
.
          ENDSET    STRTLOCN
          APPEND    SP7,STRTLOCN
          RESET     STRTLOCN
.
          MATCH     SP7,STRTLOCN                      * check for spaces
          GOTO      LOCN0900 IF NOT EQUAL           
.
          DISPLAY   *P17:13,*V2LON,"Start ";   
          MOVE      "Start ",CODEDES1
          GOTO      LOCN1000
.
.-------- check input to see if exists ----
.
LOCN0900  PACK      KEY7,STRTLOCN
          CALL      RDMRLOC1                          * read locations file 
          BRANCH    OVRCD,LOCN0950
          MOVE      STRTLOCN,CODEDES1
          MOVE      MRLODESC,DESCRPT1                  * get description
          DISPLAY   *P35:13,DESCRPT1;                * display description
          GOTO      LOCN1000
.
.------- invalid code entered ----
.
LOCN0950  DISPLAY   *P1:24,*B,*EL,"Code Does Not Exist - Hit ",*V2LON,"<ENTER>":
                    *HOFF," to continue ";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          GOTO      LOCN0500 
.
. -----  Keyin the 2nd range code -----
.
LOCN1000  MOVE      SP30,DESCRPT2
          DISPLAY   *P17:14,*EL,UNDLN7;
          KEYIN     *P17:14,*V2LON,ENDLOCN;
          DISPLAY   *P17:14,*V2LON,ENDLOCN;
.
          MATCH     QUEST,ENDLOCN
          GOTO      LOCN8500 IF EQUAL               * display locations routine
.
          ENDSET     ENDLOCN
          APPEND     SP7,ENDLOCN
          RESET      ENDLOCN
.
          MATCH      SP7,ENDLOCN
          GOTO       LOCN9000 IF NOT EQUAL
.
          DISPLAY    *P17:14,*V2LON,"Finish";
          MOVE       "Finish",CODEDES2
          MOVE       "ZZZZZZZ",ENDLOCN
          GOTO       LOCN9999
.
.-------- "?" option, call location codes screen ----
.
LOCN8000  MOVE       ZERO,LOCATNS
          CALL       MRTLOCDS                        * locations summary screen
          CALL       DISP0000                        * redisplay screen
          BRANCH     EXIT,LOCN0500
          MOVE       LOCATION,STRTLOCN
          DISPLAY    *P17:13,*V2LON,LOCATION
          GOTO       LOCN0900 
.
.-------- "?" option, call location codes screen ---
.
LOCN8500  MOVE       ZERO,LOCATNS
          CALL       MRTLOCDS                        * locations summary screen
          CALL       DISP0000                        * redisplay screen
          BRANCH     EXIT,LOCN1000
          MOVE       LOCATION,ENDLOCN
          DISPLAY    *P17:14,*V2LON,LOCATION
.
LOCN9000  PACK      KEY7,ENDLOCN
          CALL      RDMRLOC1                          * read locations file 
          BRANCH    OVRCD,LOCN9500
          MOVE      ENDLOCN,CODEDES2                 * code exists continue..
          MOVE      MRLODESC,DESCRPT2                  * get description
          DISPLAY   *P35:14,DESCRPT2;                * display description
          MATCH     STRTLOCN,ENDLOCN                 * test code ranges
          GOTO      LOCN7000 IF LESS
          GOTO      LOCN9999
.
.------- invalid code ranges -----
.
LOCN7000  DISPLAY   *P1:24,*B,*EL,"2nd Range Must Be Greater Than 1st Range ":
                              "- Hit <",*V2LON,"ENTER",*HOFF,"> To Continue ";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          GOTO      LOCN1000                         * re enter
.
.------- invalid code entered ----
.
LOCN9500  DISPLAY   *P1:24,*B,*EL,"Code Does Not Exist - Hit ",*V2LON,"<ENTER>":
                    *HOFF," to continue ";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          GOTO      LOCN1000 
.
LOCN9999  RETURN
+
.********************************************************************** 
.*                             RECV0000                               *
.*                    keyin the range for Receiver codes              *
.**********************************************************************
RECV0000  
          DISPLAY   *P1:12,*EF:
                    *P1:13,"Requestor From : ":
                    *P1:14,"Requestor To   : ";
.
. -----  Keyin the first code range ----
.
RECV0500  DISPLAY   *P18:13,*EL,UNDLN6;
          KEYIN     *P18:13,*V2LON,STRTRECV;             * keyin 1st code 
          DISPLAY   *P18:13,*V2LON,STRTRECV;             * keyin 1st code 
.
          MATCH     QUEST,STRTRECV
          GOTO      RECV8000 IF EQUAL               * display Receiver routine
.
          ENDSET    STRTRECV
          APPEND    SP6,STRTRECV
          RESET     STRTRECV
.
          MATCH     SP6,STRTRECV                      * check for spaces
          GOTO      RECV0900 IF NOT EQUAL           
.
          DISPLAY   *P18:13,*V2LON,"Start ";  
          MOVE      "Start ",CODEDES1
          GOTO      RECV1000
.
.-------- check input to see if exists ----
.
RECV0900  MOVE      SP30,DESCRPT1
          PACK      KEY6,STRTRECV
          CALL      RDMRSTF1                          * read staff reg file 
          BRANCH    OVRCD,RECV0950
          MOVE      STRTRECV,CODEDES1
          MOVE      MRSTSNAM,DESCRPT1                 * get description
          ENDSET    DESCRPT1                         * reset pointers
.
RECV0920  CMATCH    " ",DESCRPT1                     * match for spaces
          GOTO      RECV0930 IF NOT EQUAL            * if no spaces get 1st name
          BUMP      DESCRPT1,-1                      * bump back by -1
          GOTO      RECV0920
.
RECV0930  APPEND    ", ",DESCRPT1                    * if no more spaces append
          APPEND    MRSTGNAM,DESCRPT1                 * given name to field
          RESET     DESCRPT1
          DISPLAY   *P35:13,DESCRPT1;
          GOTO      RECV1000
.
.------- invalid code entered ----
.
RECV0950  DISPLAY   *P1:24,*B,*EL,"Code Does Not Exist - Hit ",*V2LON,"<ENTER>":
                    *HOFF," to continue ";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          GOTO      RECV0500 
.
. -----  Keyin the 2nd range code -----
.
RECV1000  DISPLAY   *P18:14,*EL,UNDLN6;
          KEYIN     *P18:14,*V2LON,ENDRECV;
          DISPLAY   *P18:14,*V2LON,ENDRECV;
.
          MATCH     QUEST,ENDRECV
          GOTO      RECV8500 IF EQUAL               * display staff codes
.
          ENDSET     ENDRECV
          APPEND     SP6,ENDRECV
          RESET      ENDRECV
.
          MATCH      SP6,ENDRECV
          GOTO       RECV9000 IF NOT EQUAL
.
          DISPLAY    *P18:14,*V2LON,"Finish";
          MOVE       "Finish",CODEDES2
          MOVE       "ZZZZZZ",ENDRECV
          GOTO       RECV9999
.
.-------- "?" option, call Staff codes screen ----
.
RECV8000  CALL       MRTSTFDS                      * staff codes summary screen
          CALL       DISP0000                      * redisplay screen
          BRANCH     EXIT,RECV0500
          MOVE       KEY6,STRTRECV
          DISPLAY    *P18:13,*V2LON,KEY6
          GOTO       RECV0900                      * re keyin 
.
.-------- "?" option, call staff codes screen ---
.
RECV8500  CALL       MRTSTFDS                      * staff codes summary screen
          CALL       DISP0000                      * redisplay screen
          BRANCH     EXIT,RECV1000
          MOVE       KEY6,ENDRECV
          DISPLAY    *P18:14,*V2LON,KEY6
.
RECV9000  MOVE      SP30,DESCRPT2
          PACK      KEY6,ENDRECV
          CALL      RDMRSTF1                          * read staff reg file 
          BRANCH    OVRCD,RECV9500
          MOVE      ENDRECV,CODEDES2
          MOVE      MRSTSNAM,DESCRPT2                 * get description
          ENDSET    DESCRPT2                         * reset pointers
.
RECV9200  CMATCH    " ",DESCRPT2                     * match for spaces
          GOTO      RECV9300 IF NOT EQUAL            * if no spaces get 1st name
          BUMP      DESCRPT2,-1                      * bump back by -1
          GOTO      RECV9200
.
RECV9300  APPEND    ", ",DESCRPT2                    * if no more spaces append
          APPEND    MRSTGNAM,DESCRPT2                 * given name to field
          RESET     DESCRPT2
          DISPLAY   *P35:14,DESCRPT2;
          MATCH     STRTRECV,ENDRECV                 * test if code ranges valid
          GOTO      RECV7000 IF LESS
          GOTO      RECV9999
.
.-------- invalid code ranges -----
.
RECV7000  DISPLAY   *P1:24,*B,*EL,"2nd Range Must Be Greater Than 1st Range ":
                              "- Hit <",*V2LON,"ENTER",*HOFF,"> To Continue ";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          GOTO      RECV1000                         * re enter
.
.------- invalid code entered ----
.
RECV9500  DISPLAY   *P1:24,*B,*EL,"Code Does Not Exist - Hit ",*V2LON,"<ENTER>":
                    *HOFF," to continue ";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          GOTO      RECV1000 
.
RECV9999  RETURN
+
.*************************************************************************
.*                             PAT0000                                   *
.*                      Enter Patient U/R Number & validate              *
.*                Use KURN facility to key in U/R No.                    *
.*************************************************************************
PAT0000     MOVE       FALSE,EXIT
            MOVE       "17",CCOL
            MOVE       "13",CVERT
            MOVE       TWO,SRCHOPT
            MOVE       ZERO,SRCHSYS
            MOVE       ZERO,OVRCD
.
            DISPLAY   *P1:13,*EF,"U/R Number    : ";
.
            CALL      KURN                     * call keyin U/R No. Routine
            BRANCH    OVRCD,PAT2000
            BRANCH    EXIT,PAT9999
.
            PACK      NAMEDIM,SP30
            MOVE      PSNAME,NAMEDIM                 * reset pointers
            ENDSET    NAMEDIM
.
PAT1400     CMATCH    " ",NAMEDIM
            GOTO      PAT1500 IF NOT EQUAL
            BUMP      NAMEDIM,-1
            GOTO      PAT1400
.
PAT1500     APPEND    ", ",NAMEDIM
            APPEND    PGNAME,NAMEDIM
.
            DISPLAY   *P35:13,NAMEDIM;
            GOTO       PAT9999
.
PAT2000     DISPLAY    *P1:24,*B,*EL,"U/R Number Does Not Exist - Hit <":
                                 *V2LON,"ENTER",*HOFF,"> to continue ";
            KEYIN      ANS;
            DISPLAY    *P1:24,*EL;
            MOVE       TWO,EXIT                 * U/R number does not exist
.
PAT9999     RETURN
+
.*************************************************************************
.*                             REDISPS                                   *
.*                       Redisplay used by KURN facility                 *
.*************************************************************************
REDISPS     CALL       DISP0000
            RETURN 
.
GETSVAR     RETURN                          * used by kurn
+
.************************************************************************
.*                           DISP0000                                   *
.*                        redisplay screen after "?" option             *
.************************************************************************
DISP0000  DISPLAY   *P1:3,*EF:
                    *P1:4,"Home Location : ",*V2LON,HOMELOCN,*HOFF:
                    *P35:4,HOMEDESC:
                    *P1:6,*V2LON,"0 ",*HOFF,"= Exit":
                    *P1:7,*V2LON,"1 ",*HOFF,"= By Location":
                    *P1:8,*V2LON,"2 ",*HOFF,"= By Requestor":
                    *P1:9,*V2LON,"3 ",*HOFF,"= By U/R Number":
                    *P1:11,"Please Select : ",*V2LON,OPTION,*HOFF;
.
.-------- redisplay location code ranges -----
.-------- branch on option to determine which sequence is used ----
.
          BRANCH    OPTION,DISP1000,DISP7000,DISP8000
DISP1000  DISPLAY   *P1:13,"Location From : ":       * 1 = By Location
                    *P1:14,"Location To   : ";
.
          MATCH     SP7,STRTLOCN                     * if spaces entered 
          GOTO      DISP4000 IF NOT EQUAL            * default to 'start'
          DISPLAY   *P17:13,*V2LON,CODEDES1;
          GOTO      DISP5000   
DISP4000  DISPLAY   *P17:13,*V2LON,STRTLOCN,*HOFF:   * if code entered, display
                    *P35:13,DESCRPT1;
.
DISP5000  MATCH     SP7,ENDLOCN                      * if spaces entered
          GOTO      DISP6000 IF NOT EQUAL            * default to 'finish'
          DISPLAY   *P17:14,*V2LON,CODEDES2;
          GOTO      DISP9999
DISP6000  DISPLAY   *P17:14,*V2LON,ENDLOCN,*HOFF:    * if code entered, display
                    *P35:14,DESCRPT2;
          GOTO      DISP9999
.
.-------- by receiver sequence option = 2 -------
.
DISP7000  DISPLAY   *P1:13,"Receiver From : ":       * 2 = By Receiver
                    *P1:14,"Receiver To   : ";
          MATCH     SP6,STRTRECV                     * if spaces entered 
          GOTO      DISP7200 IF NOT EQUAL            * default to 'start'
          DISPLAY   *P18:13,*V2LON,CODEDES1;
          GOTO      DISP7300   
DISP7200  DISPLAY   *P18:13,*V2LON,STRTRECV,*HOFF:   * if code entered, display
                    *P35:13,DESCRPT1;
.
DISP7300  MATCH     SP6,ENDRECV                      * if spaces entered
          GOTO      DISP7400 IF NOT EQUAL            * default to 'finish'
          DISPLAY   *P18:14,*V2LON,CODEDES2;
          GOTO      DISP9999
DISP7400  DISPLAY   *P18:14,*V2LON,ENDRECV,*HOFF:    * if code entered, display
                    *P35:14,DESCRPT2;
          GOTO      DISP9999
.
.-------- by U/R Number sequence option = 3 ------
.
DISP8000  DISPLAY   *P1:13,"U/R Number    : ";
.
DISP9999  RETURN
+
.************************************************************************
.*                           EXTR0000                                   *
.*            Read necessary files and extract relevant information     * 
.************************************************************************
EXTR0000    MOVE       FALSE,EXIT 
            MOVE       ONE,RECOUNT 
.
.-------- perform a positioning read ------
.
            MATCH      "IBARSH99",PGM
            IF         @EQUAL
              MATCH      SP7,ENDLOCN
              IF         @EQUAL
                MOVE       "zzzzzzz",ENDLOCN
              ENDIF
.
              OPEN       MRTRQHR2,"mrtrqhaf"
              OPEN       MRTRQDR1,"mrtrqdaf"
              PACK       KEY23,FROMDATE,SP20
              CALL       RSMRRQH2
            ELSE
              PACK       KEY31,FROMDATE,SP20
              CALL       RSMRRES2
            ENDIF
.
.--------- Read Tracking Reservation File -----
.
EXTR3000    MATCH      "IBARSH99",PGM
            IF         @EQUAL
              CALL       RKMRRQH2                     * read key sequential
              BRANCH     OVRCD,EXTR9000
              MOVE       MRRQDTRQ,MRRSRESV           * reservation date
              MOVE       MRRQTMRQ,MRRSTIME           * reservation time
              MOVE       MRRQDAYE,MRRSDATE           * date required
 
              CALL       RQDT0000                    * read req.detail
              MOVE       MRRDRKEY,MRRSKEY            * key
              MOVE       MRRQPERS,REQSTOR            * requestor
              MOVE       MRRQMOVR,MRRSREAS           * reason for movement
              MOVE       MRRQLOCR,MRRSDEPT           * location
            ELSE
              CALL       RKMRRES2                     * read key sequential
              BRANCH     OVRCD,EXTR9000
            ENDIF
.
.---------- validate date ranges ------------
.
            MATCH      SP8,MRRSRESV                  * check date for spaces
            GOTO       EXTR3000 IF EQUAL
.
            MATCH      FROMDATE,MRRSRESV             * check if 1st date is 
            GOTO       EXTR3000 IF LESS              * within range
.
            MATCH      MRRSRESV,TODATE               * check if 2nd date    
            GOTO       EXTR9000 IF LESS              * is within range .
.
.---------- unpack dates and retrieve relevant data ------ .
.
            UNPACK     MRRSRESV,VCENT,VYEAR,VMON,VDAY
            PACK       RESVDATE,VDAY,SLASH,VMON,SLASH,VCENT,VYEAR
.
            UNPACK     MRRSDATE,RCENT,RYEAR,RMON,RDAY
            PACK       REQDATE,RDAY,SLASH,RMON,SLASH,RCENT,RYEAR
.
            PACK       REQTIME,MRRSTIME
            DISPLAY    *P1:24,*P25:24,"Date : ",*V2LON,REQDATE,*HOFF;
.
.--------- Extract other relevant details  -----
.
            PACK       KEY7,MRRSRHOS,MRRSDEPT    * read location file to get 
            CALL       RDMRLOC1                  * description
            BRANCH     OVRCD,EXTR4000
            MOVE       MRLODESC,LOCATION          * move to temp variable 
.
.--------- extract description from staff register file -----
.
EXTR4000    MATCH      "IBARSH99",PGM
            GOTO       EXTR5000 IF EQUAL        * WEB report
.
            PACK       KEY6,MRRSREQS
            CALL       RDMRSTF1                  * read staff register file
            BRANCH     OVRCD,EXTR5000
            MOVE       MRSTSNAM,REQSTOR          * move surname to temp var.
            ENDSET     REQSTOR                  * reset pointers
.
EXTR4100    CMATCH     " ",REQSTOR
            GOTO       EXTR4200 IF NOT EQUAL
            BUMP       REQSTOR,-1               * bump back by -1
            GOTO       EXTR4100
.
EXTR4200    APPEND     ", ",REQSTOR             * if no more spaces append
            APPEND     MRSTGNAM,REQSTOR          * given name to field
            RESET      REQSTOR
.
.--------- extract movement reason description from movement file -----
.
EXTR5000    PACK       KEY4,MRRSREAS
            CALL       RDMRMOV1                  * read movement reason file
            BRANCH     OVRCD,EXTR6000
            MOVE       MRMODESC,REASON            * move reason descn to tmp var.
.
.--------- extract details from tracking master file ------
.
EXTR6000    PACK       KEY10,MRRSKEY
            CALL       RDMRMAS2                  * read tracking master file
            BRANCH     OVRCD,EXTR7000
.
            MATCH      SP7,HOMELOCN             * if spaces default to "All"
            GOTO       EXTR6500 IF EQUAL        * location codes
.
            MATCH      PRTCODE,MRMAHLOC         * if location entered, match
            GOTO       EXTR7000 IF NOT EQUAL    * to home location in mrtmast.
.                                            
.--------- branch on option to determine sequence -----
.
EXTR6500    BRANCH     OPTION,EXTR6600,EXTR6700,EXTR6800
.
.--------- by location -----
.
EXTR6600    PACK       LOCNTEST,MRRSRHOS,MRRSDEPT,SP70
.
            MATCH      STRTLOCN,LOCNTEST          * option 1 = by location
            GOTO       EXTR7000 IF LESS         * test if location code
            MATCH      LOCNTEST,ENDLOCN           * is within range.
            GOTO       EXTR7000 IF LESS         * not in range
            GOTO       EXTR6900                 * continue....
.
.--------- by requestor -----
.
EXTR6700    MATCH      STRTRECV,MRRSREQS        * option 2 = by requestor
            GOTO       EXTR7000 IF LESS         * test if requestor code
            MATCH      MRRSREQS,ENDRECV         * is within range.
            GOTO       EXTR7000 IF LESS         * not in range
            GOTO       EXTR6900                 * continue.....
.
.--------- by U/R Number -----
.
EXTR6800    MATCH      CPPURNO,MRMAURNO          * if specific U/R Number
            GOTO       EXTR7000 IF NOT EQUAL    * match to U/R in mrtmast..
.
EXTR6900    PACK       RECORDID,MRMAURNO,MRMAHHOS,MRMAHLOC,MRMADOTY:
                                MRMAVOLN
            DISPLAY    *P45:24,*EL,"Record Id : ",*V2LON,RECORDID,*HOFF;
.
            MOVE       TWO,RECOUNT               * 1st record read sucessful 
.
.--------- call write module, to write to temporary file ----
.
            CALL       WRTP0000                 * write details
.
.--------- clear variables -----
.
EXTR7000    UNPACK     SP20,RESVDATE,MRRSKEY
            MOVE       SP20,RECORDID
            MOVE       SP20,REQSTOR
            MOVE       SP10,REQDATE
            MOVE       SP5,REQTIME
            MOVE       SP20,LOCATION
            MOVE       SP20,REASON  
.
.-------- read next record ----
.
            GOTO       EXTR3000                          * loop 
.
EXTR9000    COMPARE    ONE,RECOUNT
            GOTO       EXTR9500 IF NOT EQUAL
.
            DISPLAY    *B,*P1:24,*EL,"Details Not On File - Tap <",*V2LON:
                             "ENTER",*HOFF,">";
            CALL       HITENTER
            MOVE       TRUE,EXIT                     * set exit flag
            GOTO       EXTR9999
.
EXTR9500    MOVE       TWO,EXIT                      * end of file flag
.
EXTR9999    RETURN
+
.*************************************************************************
.*                             RQDT0000                                  *
.*    Read request details file to get the history key                   *
.*************************************************************************
RQDT0000   PACK       KEY20,MRRQRQNO,SP20
           CALL       RSMRRQD1
           CALL       RKMRRQD1
           BRANCH     OVRCD,RQDT9000
.
           MATCH      MRRDRQNO,MRRQRQNO              * same request number ?
           GOTO       RQDT9999 IF EQUAL
.
RQDT9000   MOVE       SP10,MRRDRKEY                  * Medical Record key
RQDT9999   RETURN
+
.*************************************************************************
.*                             WRTP0000                                  *
.*                   write details to temp file                          *
.*                                                                       *
.*   Temporary file is used for ALL "3" Sequences.......                 *
.*************************************************************************
WRTP0000  
.
.---------- write to temp file according to which option was chosen -----
.---------- option 1 = By Location Sequence
.---------- option 2 = By Requestor Sequence
.---------- option 3 = By U/R Number Sequence   
.
            BRANCH     OPTION,WRTP1000,WRTP2000,WRTP3000
            GOTO       WRTP0000
.
WRTP1000    PACK       KEY45,LOCATION,REQDATE,REQTIME,MRRSKEY,SP20
            WRITE      TEMPFILE,KEY45;LOCATION,REQDATE,REQTIME,MRRSKEY:
                                      RESVDATE,RECORDID,REQSTOR,REASON
            GOTO       WRTP9999
. 
WRTP2000    PACK       KEY45,REQSTOR,REQDATE,REQTIME,MRRSKEY,SP20
            WRITE      TEMPFILE,KEY45;LOCATION,REQDATE,REQTIME,MRRSKEY:
                                      RESVDATE,RECORDID,REQSTOR,REASON
            GOTO       WRTP9999
.
WRTP3000    PACK       KEY45,RECORDID,REQDATE,REQTIME,MRRSKEY,SP20
            WRITE      TEMPFILE,KEY45;LOCATION,REQDATE,REQTIME,MRRSKEY:
                                      RESVDATE,RECORDID,REQSTOR,REASON
. 
WRTP9999    RETURN
.
.*************************************************************************
.*                             TEMP0000                                  *
.*                   close and open temp file then read sequentially     *
.*************************************************************************
TEMP0000    MOVE       FALSE,EXIT
            MOVE       ONE,BEGINCNT
            READ       TEMPFILE,SP30;;
TEMP1000    READKS     TEMPFILE;LOCATION,REQDATE,REQTIME,MRRSKEY,RESVDATE:
                                RECORDID,REQSTOR,REASON 
            GOTO       TEMP9000 IF OVER
.
TEMP2000    CALL       PRT0000                   * print details
            GOTO       TEMP1000                  * read next record
.
TEMP9000    CALL       EXPR0000                  * Print final line 
            CALL       KILL0000
TEMP9999    RETURN
+
.*************************************************************************
.*                             PRT0000                                   *
.*                  print code/name sequence hardcopy                    *
.*************************************************************************
PRT0000     DISPLAY    *P1:24,*EL,*P40:24,*V2LON,"**** GENERATING REPORT ****":
                       *HOFF; 
            CLOCK      TIME,CTIMEIS
            COMPARE    "50",LINECNT
            CALL       PRT8000 IF NOT LESS
.
            MATCH      "IBARSH99",PGM
            IF         @EQUAL
              PRINT      *N,"|",*4,RESVDATE,SP2,REQTIME:
                            *21,"|",*23,RECORDID,*45,"|":
                            *47,REQSTOR,*68,"|",*70,REQDATE,*84,"|":
                            *86,LOCATION,*107,"|",*109,REASON,*130,"|";
            ELSE
              PRINT      *N,"|",*4,RESVDATE,*17,"|",*19,RECORDID,*41,"|":
                            *43,REQSTOR,*64,"|",*66,REQDATE,SP2,REQTIME,*84,"|":
                            *86,LOCATION,*107,"|",*109,REASON,*130,"|";
            ENDIF
            ADD        "1",LINECNT
            RETURN
.
PRT8000     BRANCH     BEGINCNT,PRT8100
            CALL       LNPR0000                      * print line
PRT8100     ADD        ONE,PAGENO 
            MOVE       ONE,CNOUNDLN
            MOVE       SEQTYPE,CPHDROPT
            CALL       IBACLOCK
            CALL       HEAD132
.     
.--------- branch on item to determine date  -----
. 
            PRINT      *N,*40,"HOME LOCATION   : ",PRTCODE,SP5,HOMEDESC;
            BRANCH     ITEM,PRT8200,PRT8300
PRT8200     PRINT      *N,*N,*40,"AS AT DATE      :  ",OPENDATE;
            GOTO       PRT8400
PRT8300     PRINT      *N,*N,*40,"DATE RANGE FROM : ",OPENDATE," TO ",CLOSDATE;
.
.--------- branch on option to determine sequence -----
.
PRT8400     BRANCH     OPTION,PRT8450,PRT8450,PRT8500
PRT8450     PRINT      *N,*N,*40,"CODE RANGE FROM : ",CODEDES1,SP5,DESCRPT1:
                       *N,*51,"TO   : ",CODEDES2,SP5,DESCRPT2;
            GOTO       PRT8600
.
.--------- by U/R Number ----
.
PRT8500     PRINT      *N,*N,*40,"U/R NUMBER      : ",CPPURNO,SP5,NAMEDIM;
.
PRT8600     PRINT      *N,*N,"*----------------------------":
                             "----------------------------------------":
                             "----------------------------------------":
                             "--------------------*";
.
            MATCH      "IBARSH99",PGM
            IF         @EQUAL
              PRINT      *N,"|",*3,"Date/Time Of Resvn",*21,"|":
                         *23,"Record Identification",*45,"|",*47,"Requestor":
                         *68,"|",*70,"Date Required",*84,"|":
                         *86,"Location",*107,"|",*109,"Reason",*130,"|";
            ELSE
              PRINT      *N,"|",*3,"Date Of Resvn",*17,"|":
                         *19,"Record Identification",*41,"|",*43,"Requestor":
                         *64,"|",*66,"Date/Time Required",*84,"|":
                         *86,"Location",*107,"|",*109,"Reason",*130,"|";
            ENDIF
.
            PRINT      *N,"*----------------------------------------":
                          "---------------------------------------":
                          "--------------------------------------":
                          "-----------*";
            MOVE       "6",LINECNT
            MOVE       TWO,BEGINCNT
.
PRT9999     RETURN
.
EXPR0000    PRINT      *N,"*----------------------------------------":
                          "---------------------------------------":
                          "--------------------------------------":
                          "-----------*":
                       *N,*N,"**** END OF REPORT ****";
            RETURN
.
LNPR0000    PRINT      *N,"*----------------------------------------":
                          "---------------------------------------":
                          "--------------------------------------":
                          "-----------*";
            RETURN
.
            INC        STD001IO
            INC     TFILENAM
.
            INC        BOKRC1IO/INC          * booking file
            INC        MRTMASIO/INC
            INC        OUTPREIO/INC
            INC        PATCOMN1
            INC        PATGSRIO/INC
            INC        PATMA1IO/INC
            INC        PATMI1IO/INC
            INC        PATPR1IO/INC
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
            INC        PATSNDX
            INC        PATSNX2
            INC        CALCAGE
            INC        IBASEQIO/INC
            INC        MRTLOCDS
            INC        MRTLOCIO/INC
            INC        MRTMOVIO/INC
            INC        MRTRESIO/INC
            INC        MRTRQHIO/INC
            INC        MRTRQDIO/INC
            INC        MRTSTFDS
            INC        MRTSTFIO/INC
          INC       NZCOMPIO/INC
          INC       WEBERRIO/INC
AGECHK
CLPATMAS  RETURN
.
