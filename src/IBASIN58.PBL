.-------------------------------------------------------
          INC       STDGENDF     *  equired Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01 08.04.2005 Peter Vela CAR 59696
.           Changed commodity group from DIM 5 to DIM 6
. V9.03.01 23/07/2004  Mike Laming  CAR 43474
.          Change UNCEA200 & USCEA200 to not write to "apscebaf" if qty = 0
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 21.11.2000 Charles Handaya
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           22.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  03.11.1999 Sandra Barcham
.           Change locked message to use X
.-------------------------------------------------------
CEAFILE   FORM      1
F12P4     FORM      12.4
MODQTY    FORM      12.2
MYCOL     FORM      2
MYVERT    FORM      2
COMFLAG   FORM      1
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASIN58
.   Function      :   Purchase Order Flag Clear               
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSCEAFD/INC
          INC       APSCEBFD/INC
          INC       APSCIOFD/INC
          INC       APSMASFD/INC
          INC       APSORDFD/INC
          INC       APSSUBFD/INC
          INC       FMSAMAFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSTUPFD/INC
          INC       SINCCAFD/INC
          INC       SINCGAFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCIEFD/INC
          INC       SINCIHFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINLTTFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASIN58"
PRGNAM    INIT      "Purchase Order Flag Clear               "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      ONAT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsceaaf";
          OPEN      APSCEAA1,"apsceaaf"
          DISPLAY   *P56:24,"Opening apsceaaf";
          OPEN      APSCEAA2,"apsceaaf"
          DISPLAY   *P56:24,"Opening apscebaf";
          OPEN      APSCEBA1,"apscebaf"
          DISPLAY   *P56:24,"Opening apscebaf";
          OPEN      APSCEBA2,"apscebaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA1,"apscioaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA2,"apscioaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsordaf";
          OPEN      APSORDA1,"apsordaf"
          DISPLAY   *P56:24,"Opening apsordaf";
          OPEN      APSORDA2,"apsordaf"
          DISPLAY   *P56:24,"Opening apssubaf";
          OPEN      APSSUBA1,"apssubaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA1,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA2,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA2,"sincihaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA2,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA1,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA2,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA3,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA2,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA3,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA4,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA1,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      RDCON000
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
          MOVE      SP70,SIPAPON 
          MOVE      SP70,SIPADPR 
          MOVE      SP70,SIPADCN 
          MOVE      SP70,SIPADCM 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
.
KY00L110
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KSIPA000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      SIPAPON,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L101,PS00L102,PS00L103
          GOTO     PS00L999
.
PS00L101
          UNPACK    SIPADPR,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          UNPACK    SIPADCN,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          UNPACK    SIPADCM,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                            SF00L103,SF00L104,SF00L105
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L103,SF00L104,SF00L105
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      CSIPA000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      WSIPA000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KDPR0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    SIPADPR,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KDCN0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    SIPADCN,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KDCM0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    SIPADCM,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*143,HNONUSAG
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ONE,HNONUSAG
            WRITAB    CONTROLF,SIXTY3;*143,HNONUSAG
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.********************************************************************
. Set accept mode
.********************************************************************
RDCON000  MOVE      ONE,ACCEPT
          READ      CONTROLF,SIXTY3;*240,SNCOPURC
          RETURN
.----------------------------------------------------------------------
. Cancel Data
.----------------------------------------------------------------------
CSIPA000
          CALL      UUSIPA1
.
CSIPA999  RETURN
.----------------------------------------------------------------------
. Write Data
.----------------------------------------------------------------------
WSIPA000  READ      CONTROLF,TWENTY3;*124,HORDDES
          MOVE      ZERO,OPTIONA                      * check if we have to fix
          MATCH     SIPADCN,FDATE                     * usage and SIIESOO
          IF        !@EQUAL
            MATCH     SP70,SIPADCN
            IF        !@EQUAL
              PACK      SIPADCM,SIPADCN,SP70
              MATCH     SIPADPR,SP70                  * printed if cancelled
              IF        @EQUAL
                PACK      SIPADPR,SIPADCN,SP70
              ENDIF
              MOVE      SEQ,OPTIONA                   * being cancelled
            ELSE
              PACK      SIPADCM,SP70
              MOVE      ONE,OPTIONA                   * being uncancelled
            ENDIF
          ENDIF
.
          PACK      KEY7,SIPAPON,SP70
          CALL      RASIPA1
          IF        OVRCD=0
            CALL      UPSIPA1
          ELSE
            CALL      WRSIPA1
          ENDIF
.
          COMPARE   ZERO,OPTIONA
          GOTO      WSIPA900 IF EQUAL
.
          CALL      CSPC0000                        * fix dates on sinpocaf
          MOVE      ZERO,QTOTAL15
          CALL      ADDUS000                        * fix data if required
.
WSIPA900  COMPARE   ONE,COMFLAG                     * Completed set to NOT
          CALL      CHKEDD00 IF EQUAL               * Check Expected Del Dates
.
          CALL      UUSIPA1                         * Unlock
.
WSIPA999  RETURN
.----------------------------------------------------------------------
.  CSPC - Clear Next del date on sinpocaf              Called By ML
.----------------------------------------------------------------------
CSPC0000  PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
.
CSPC1000  CALL      RKSIPC1
          BRANCH    OVRCD,CSPC9999
          MATCH     SIPAPON,SIPCPON
          GOTO      CSPC9999 IF NOT EQUAL
.
          IF        OPTIONA=1
            IF        SIPCOQT>SIPCRQT
              PACK      SIPCEDD,CCC,CYY,CMM,CDD,SP70
              REP       " 0",SIPCEDD
            ENDIF
          ELSE
            MOVE      SP70,SIPCEDD
          ENDIF
          CALL      UPSIPC1
          GOTO      CSPC1000
.
CSPC9999  RETURN
.----------------------------------------------------------------------
. Fix Usage and Stock On Order
.     NOTE: Should be the same routine in IBASIN50 and IBASIN58
.     Requires - OPTIONA  (-1=reversing usage, 1=adding usage)
.                QTOTAL15 (original amount)
.----------------------------------------------------------------------
ADDUS000  PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
.
ADDUS010  CALL      RKSIPC1
          BRANCH    OVRCD,ADDUS999
          MATCH     SIPCPON,SIPAPON
          GOTO      ADDUS999 IF NOT EQUAL
.
          MATCH     SP70,SIPCCAT
          IF        @EQUAL
            MOVE      ONE,SIFACTOR
            MOVE      ONE,SIIANON
          ELSE
            MOVE      SIPCCAT,KEY7
            CALL      RDSIIA1
            PACK      KEY30,SIIAISS,SIPCSUT
            CALL      RDSIFA1
            IF        OVRCD=1
              MOVE      ONE,SIFACTOR
            ENDIF
          ENDIF
.
          ASSIGN    (SIPCOQT-QTOTAL15)*SIFACTOR*OPTIONA,SIUSQTY
.
          IF        SIPCECT<0
            MOVE      ZERO,SIUSCST
          ELSE
            IF        SNCOPURC=1
              ASSIGN    SIPCECT*(SIPCOQT-QTOTAL15)*OPTIONA,SIUSCST
            ELSE
              MOVE      SIPCECT,F12P4
              SUB       SIPCGSTA,F12P4
              ASSIGN    F12P4*(SIPCOQT-QTOTAL15)*OPTIONA,SIUSCST
            ENDIF
          ENDIF
          UNPACK    SIPCDAT,SIPEYEAR,SIPEPER
.
          REPEAT
            PACK      KEY12,SIPCCAT,SIPCWAR
            CALL      RLSIIE1
            IF        OVRCD=0
              ADD       SIUSQTY,SIIESOO
              IF        SIIESOO<0
                MOVE      ZERO,SIIESOO
              ENDIF
              CALL      UPSIIE1                    * Update Stock on Order
              CALL      UUSIIE1                    * Update Stock on Order
            ENDIF
            IF        OVRCD=2
              BEEP
              MOVE      "Catalog/Warehouse Record Locked. - ",DISPMSG
              CALL      MESSAGE1
            ENDIF
          UNTIL     OVRCD<>2
.
          CALL      SINORDUS                   * Update Purchases Usage
.
.                                              * Update Committed Exp 2
          ASSIGN    (SIPCOQT-QTOTAL15)*OPTIONA,MODQTY
          IF        SIIANON=1
            CALL      UNCEA000
          ELSE
            CALL      USCEA000
          ENDIF
          GOTO      ADDUS010
.
ADDUS999  RETURN
.------------------------------------------------------------
. Check Expected Delivery Dates
.------------------------------------------------------------
CHKEDD00  PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
CHKEDD10  CALL      RKSIPC1
          BRANCH    OVRCD,CHKEDD99
          MATCH     SIPCPON,SIPAPON
          GOTO      CHKEDD99 IF NOT EQUAL
          MATCH     SP70,SIPCEDD              * Check Expected Delivery Date
          GOTO      CHKEDD10 IF NOT EQUAL
          COMPARE   SIPCOQT,SIPCRQT           * Order vs Received
          GOTO      CHKEDD10 IF EQUAL
.
          DISPLAY   *P1:17,*EF:
                    *P1:18,"Line                   : ",*V2LON,SIPCITM,*HOFF:
                    *P1:19,"Catalog                : ",*V2LON,SIPCCAT,*HOFF:
                    *P1:20,"Part Description       : ",*V2LON,SIPCPD,*HOFF:
                    *P1:20,"Ordered                : ",*V2LON,SIPCOQT,*HOFF:
                    *P1:21,"Received               : ",*V2LON,SIPCRQT,*HOFF:
                    *P1:22,"Expected Delivery Date : "
.
CHKEDD20  MOVE      "32",CCOL
          MOVE      "22",CVERT
          PACK      SIPCEDD,CCC,CYY,CMM,CDD,SP70
          UNPACK    SIPCEDD,CCENT,CYEAR,CMON        * set up date parameters
          MOVE      SP70,CDAY
          MOVE      ONE,CDEFDTE
          CALL      KEYDATE
          MATCH     SP70,CDAY
          IF        @EQUAL
            PACK      SIPCEDD,SP70                    * clear date
          ELSE
            PACK      SIPCEDD,CCENT,CYEAR,CMON,CDAY   * pack desired date
          ENDIF
.
CHKEDD30  KEYIN     *P1:24,"Ok (Y/N) ? ",*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS
          GOTO      CHKEDD20 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      CHKEDD30 IF NOT EQUAL
          CALL      UPSIPC1
          GOTO      CHKEDD10
.
CHKEDD99  RETURN
.
.----------------------------------------------------------------------
. Update Non-Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
UNCEA000  MOVE      HORDDES,APEAISC  * System Prefix
          MOVE      SIPCPON,APEAORD
          MOVE      SIPASUP,APEACRD
          PACK      KEY8,APEAISC,APEAORD,SP70
          CALL      RDAPEA1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPADIN,APEADAT
            CALL      WRAPEA1
          ENDIF
.
          MOVE      HORDDES,APEBISC  * System Prefix
          MOVE      SIPCPON,APEBORD
          PACK      APEBCAT,SIPCITM,SP70
          PACK      KEY14,APEBISC,APEBORD,APEBCAT
          CALL      RDAPEB1
          IF        OVRCD=0
            ADD       MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            IF        APEBQTY>0
              CALL      UPAPEB1
            ELSE
              CALL      DEAPEB1
              UNPACK    SP70,APEBISC,APEBORD,APEBCAT
              PACK      KEY8,APEAISC,APEAORD,SP70
              PACK      KEY14,KEY8,SP70
              CALL      RSAPEB1
              CALL      RKAPEB1
              PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
              MATCH     KEY8,KEY14
              CALL      DEAPEA1 IF NOT EQUAL
            ENDIF
.
            MOVE      MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            CALL      UFMFP000         * update committed expenditure
            GOTO      UNCEA999
          ENDIF
.
. No Existing Record
.--------------------
          MOVE      SIPCWAR,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          PACK      SICAGL,SP70
          MOVE      SIPCCST,KEY5
          CALL      RDSICA1
.
          UNPACK    SICAGL,APEBLED,APEBACC
          MOVE      SIWADISS,APEBDIS
          MOVE      SIWARESP,APEBRES
          MOVE      SP70,APEBSPA
          MOVE      MODQTY,APEBQTY
          MOVE      SIPCECT,APEBUCT
          MOVE      SIPCGSTA,APEBUGS
          ASSIGN    APEBQTY*APEBUCT,APEBAMT
          ASSIGN    APEBQTY*APEBUGS,APEBGST
          MOVE      SIPCPD,APEBDES
.
UNCEA100  MATCH     SP70,APEBACC       * use posting acc if no CC
          GOTO      UNCEA115 IF EQUAL
.
          STORE     APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APEBACC,APEBACC,FMSUUD2B
          ENDIF
.
          MATCH     SP70,SIPCPRD
          IF        @EQUAL
            MOVE      SIIASUB,SIPCPRD
          ENDIF
          PACK      KEY5,SIPCPRD,SP70
          CALL      RDSISA1
          BRANCH    SIWATYP,UNCEA120,UNCEA115
.
UNCEA110  PACK      SILTSUB,SIPCPRD,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add subj code
          GOTO      UNCEA200
.
UNCEA115  PACK      APEBACC,SICAPACC,SP70        * Use CC Posting Account
          GOTO      UNCEA200
.
UNCEA120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add commodity code
.
UNCEA200  CALL      XHKFMS00
.                                           * don't write if qty=0     *I-43474
          IF        APEBQTY > 0
            CALL      WRAPEB1
          ENDIF                                                        *I-43474
          CALL      UFMFP000           * update committed expenditure
.
UNCEA999  RETURN
.------------------------------------------------------------
. Check FMS Account
.------------------------------------------------------------
XHKFMS00  MOVE      ZERO,FMAMTYPE
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            SQUEEZE   KEY14
            CALL      RDFMAM1
            IF        OVRCD=0
              UNPACK    KEY14,APEBLED,APEBACC
            ENDIF
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Update Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
USCEA000  MOVE      HORDDES,APEAISC  * System Prefix
          MOVE      SIPCPON,APEAORD
          MOVE      SIPASUP,APEACRD
          PACK      KEY8,APEAISC,APEAORD,SP70
          CALL      RDAPEA1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPADIN,APEADAT
            CALL      WRAPEA1
          ENDIF
.
          MOVE      HORDDES,APEBISC  * System Prefix
          MOVE      SIPCPON,APEBORD
          PACK      APEBCAT,SIPCITM,SP70
          PACK      KEY14,APEBISC,APEBORD,APEBCAT
          CALL      RDAPEB1
          IF        OVRCD=0
            ADD       MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            IF        APEBQTY>0
              CALL      UPAPEB1
            ELSE
              CALL      DEAPEB1
              UNPACK    SP70,APEBISC,APEBORD,APEBCAT
              PACK      KEY8,APEAISC,APEAORD,SP70
              PACK      KEY14,KEY8,SP70
              CALL      RSAPEB1
              CALL      RKAPEB1
              PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
              MATCH     KEY8,KEY14
              CALL      DEAPEA1 IF NOT EQUAL
            ENDIF
.
            MOVE      MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            CALL      UFMFP000         * update committed expenditure
            GOTO      USCEA999
          ENDIF
.
. No Existing Record
.--------------------
          MOVE      SIPCWAR,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          MOVE      SIWALED,APEBLED
          MOVE      SIWADISS,APEBDIS
          MOVE      SIWARESP,APEBRES
          MOVE      SP70,APEBSPA
          MOVE      MODQTY,APEBQTY
          MOVE      SIPCECT,APEBUCT
          MOVE      SIPCGSTA,APEBUGS
          ASSIGN    APEBQTY*APEBUCT,APEBAMT
          ASSIGN    APEBQTY*APEBUGS,APEBGST
          MOVE      SIPCPD,APEBDES
.
          BRANCH    SIWAPTY,USCEA100,USCEA100
          MOVE      SIWAPACC,APEBACC
          GOTO      USCEA200
.
USCEA100  STORE     SIWAPACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APEBACC,APEBACC,FMSUUD2B
          ENDIF
          PACK      KEY5,SIPCPRD,SP70
          CALL      RDSISA1
          BRANCH    SIWAPTY,USCEA110,USCEA120
.
USCEA110  PACK      SILTSUB,SIPCPRD,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add subj code
          GOTO      USCEA200
.
USCEA120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add commodity code
.
USCEA200  CALL      XHKFMS00
.                                           * don't write if qty=0     *I-43474
          IF        APEBQTY > 0
            CALL      WRAPEB1
          ENDIF                                                        *I-43474
          CALL      UFMFP000           * update committed expenditure
.
USCEA999  RETURN
.----------------------------------------------------------------------
. Update period summary file
.----------------------------------------------------------------------
UFMFP000  PACK      KEY2,APEBLED,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,UFMFP999
.
          PACK      WORKDATE,APEADAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,UFMFP999
.
          MOVE      "fmsp",KEY4
          PACK      KEY8,KEY4,CURYEAR,SP70
          REP       " 0",CURYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,KEY8
          TRAPCLR   IO
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      RDFMFP1
          IF        OVRCD=0
            ASSIGN    APEBAMT+FMFPCOM2,FMFPCOM2
            CALL      UPFMFP1
          ELSE
            MOVE      ZERO,FMFPCBF
            MOVE      ZERO,FMFPC01
            MOVE      ZERO,FMFPC02
            MOVE      ZERO,FMFPC03
            MOVE      ZERO,FMFPC04
            MOVE      ZERO,FMFPC05
            MOVE      ZERO,FMFPC06
            MOVE      ZERO,FMFPC07
            MOVE      ZERO,FMFPC08
            MOVE      ZERO,FMFPC09
            MOVE      ZERO,FMFPC10
            MOVE      ZERO,FMFPC11
            MOVE      ZERO,FMFPC12
            MOVE      ZERO,FMFPC13
.
            MOVE      ZERO,FMFPABF
            MOVE      ZERO,FMFPA01
            MOVE      ZERO,FMFPA02
            MOVE      ZERO,FMFPA03
            MOVE      ZERO,FMFPA04
            MOVE      ZERO,FMFPA05
            MOVE      ZERO,FMFPA06
            MOVE      ZERO,FMFPA07
            MOVE      ZERO,FMFPA08
            MOVE      ZERO,FMFPA09
            MOVE      ZERO,FMFPA10
            MOVE      ZERO,FMFPA11
            MOVE      ZERO,FMFPA12
            MOVE      ZERO,FMFPA13
            MOVE      ZERO,FMFPCOM
.
            MOVE      ZERO,FMFPCBFD
            MOVE      ZERO,FMFPC01D
            MOVE      ZERO,FMFPC02D
            MOVE      ZERO,FMFPC03D
            MOVE      ZERO,FMFPC04D
            MOVE      ZERO,FMFPC05D
            MOVE      ZERO,FMFPC06D
            MOVE      ZERO,FMFPC07D
            MOVE      ZERO,FMFPC08D
            MOVE      ZERO,FMFPC09D
            MOVE      ZERO,FMFPC10D
            MOVE      ZERO,FMFPC11D
            MOVE      ZERO,FMFPC12D
            MOVE      ZERO,FMFPC13D
.
            MOVE      ZERO,FMFPABFD
            MOVE      ZERO,FMFPA01D
            MOVE      ZERO,FMFPA02D
            MOVE      ZERO,FMFPA03D
            MOVE      ZERO,FMFPA04D
            MOVE      ZERO,FMFPA05D
            MOVE      ZERO,FMFPA06D
            MOVE      ZERO,FMFPA07D
            MOVE      ZERO,FMFPA08D
            MOVE      ZERO,FMFPA09D
            MOVE      ZERO,FMFPA10D
            MOVE      ZERO,FMFPA11D
            MOVE      ZERO,FMFPA12D
            MOVE      ZERO,FMFPA13D
            MOVE      ZERO,FMFPCOMD
.
            MOVE      ZERO,FMFPCBFT
            MOVE      ZERO,FMFPC01T
            MOVE      ZERO,FMFPC02T
            MOVE      ZERO,FMFPC03T
            MOVE      ZERO,FMFPC04T
            MOVE      ZERO,FMFPC05T
            MOVE      ZERO,FMFPC06T
            MOVE      ZERO,FMFPC07T
            MOVE      ZERO,FMFPC08T
            MOVE      ZERO,FMFPC09T
            MOVE      ZERO,FMFPC10T
            MOVE      ZERO,FMFPC11T
            MOVE      ZERO,FMFPC12T
            MOVE      ZERO,FMFPC13T
.
            MOVE      ZERO,FMFPABFT
            MOVE      ZERO,FMFPA01T
            MOVE      ZERO,FMFPA02T
            MOVE      ZERO,FMFPA03T
            MOVE      ZERO,FMFPA04T
            MOVE      ZERO,FMFPA05T
            MOVE      ZERO,FMFPA06T
            MOVE      ZERO,FMFPA07T
            MOVE      ZERO,FMFPA08T
            MOVE      ZERO,FMFPA09T
            MOVE      ZERO,FMFPA10T
            MOVE      ZERO,FMFPA11T
            MOVE      ZERO,FMFPA12T
            MOVE      ZERO,FMFPA13T
            MOVE      ZERO,FMFPCOMT
.
            PACK      FMFPSPAR,SP70,SP70
            ASSIGN    APEBAMT,FMFPCOM2
            CALL      WRFMFP1
          ENDIF
.
          COMPARE   ONE,FMCOCALC
          GOTO      UFMFP999 IF NOT EQUAL
.
          PACK      KEY20,PORT,CURYEAR,APEBLED,APEBACC,SP70
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      UFMFP999 IF EQUAL
.
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
UFMFP999  RETURN
.
.----------------------------------------------------------------------
. get subjective/commodity translation
.----------------------------------------------------------------------
GTRA0000  PACK      KEY8,FMAMLEDG,SILTSUB,SP70                         *C-59696
          CALL      RDSILT1
.
GTRA9999  RETURN
.
.----------------------------------------------------------------------
. Keyin SIPA
.----------------------------------------------------------------------
KSIPA000  MOVE      ZERO,CKEYTYP
          CALL      KSIPAA00                     * keyin SIPA
          BRANCH    EXIT,KSIPA999,KSIPA999
.
. check warehouse security
.
          MATCH     SP70,SIPAWAR
          IF        !@EQUAL
            PACK      KEY9,PASSCODE,SIPAWAR,SP70
            CALL      RDSIWS1
            IF        OVRCD=1
              CLEAR     DISPMSG
              APPEND    "You have no access for Warehouse ",DISPMSG
              APPEND    SIPAWAR,DISPMSG
              APPEND    " - ",DISPMSG
              CALL      MESSAGE1
              MOVE      TWO,EXIT
              GOTO      KSIPA999
            ENDIF
          ENDIF
.
          PACK      KEY7,SIPAPON,SP70            * lock Purchase Order
          REPEAT
            CALL      RLSIPA1
            IF        OVRCD=1
              BEEP
              CLEAR     DISPMSG
              APPEND    "Purchase Order ",DISPMSG
              APPEND    KEY7,DISPMSG
              APPEND    " Missing - ",DISPMSG
              CALL      MESSAGE1
              GOTO      KSIPA000
            ENDIF
            IF        OVRCD=2
              PACK      DISPMSG,SP70,SP70
              CALL      MESSAGE2
              BEEP
              KEYIN     *P1:24,*EL,"Purchase Order ":
                        *DV,KEY7," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              CALL      MESSAGE3
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      KSIPA000 IF EQUAL
              MATCH     "E",ANS
              GOTO      KSIPA000 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
          MATCH     SP70,SIPADCM
          IF        !@EQUAL
            UNPACK    SIPADCM,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            BEEP
            CLEAR     DISPMSG
            APPEND    "Warning - Purchase Order Completed on ",DISPMSG
            APPEND    CPCDATE,DISPMSG
            APPEND    " - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
          ENDIF
.
          PACK      FDATE,SIPADCN,SP70
          MOVE      ZERO,COMFLAG
.
          MOVE      ZERO,EXIT
.
KSIPA999  RETURN
.
.----------------------------------------------------------------------
. Keyin SIPADPR Date
. Returns  : SIPADPR  (Date entered)
.            EXIT     (0=valid date entered, 1=no date entered)
.----------------------------------------------------------------------
KDPR0000  REP       " 0",SIPADPR                      * set up default if req.
          MATCH     "00000000",SIPADPR
          IF        @EQUAL
            PACK      SIPADPR,CCC,CYY,CMM,CDD,SP70
            REP       " 0",SIPADPR
          ENDIF
.
          UNPACK    SIPADPR,CCENT,CYEAR,CMON          * set up date parameters
          MOVE      SP70,CDAY
          CALL      KEYDATE                           * keyin date
.
          MATCH     SP70,CDAY
          IF        @EQUAL
            PACK      SIPADPR,SP70                    * clear date
            MOVE      ONE,EXIT                        * 0=continue 1=nothing ent
          ELSE
            PACK      SIPADPR,CCENT,CYEAR,CMON,CDAY   * pack desired date
            MOVE      ZERO,EXIT                       * 0=continue 1=nothing ent
          ENDIF
.
KDPR9999  RETURN
.
.----------------------------------------------------------------------
. Keyin SIPADCN Date
. Returns  : SIPADCN  (Date entered)
.            EXIT     (0=valid date entered, 1=no date entered)
.----------------------------------------------------------------------
KDCN0000  PACK      KEY12,SIPAPON,SP70   * check if any receivals
          CALL      RSSIPF1
          CALL      RKSIPF1
          BRANCH    OVRCD,KDCN0100
          MATCH     SIPFPON,SIPAPON
          GOTO      KDCN0100 IF NOT EQUAL
          MOVE      "Goods Already Received for That Order. - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          GOTO      KDCN9999
.
KDCN0100  REP       " 0",SIPADCN         * set up default if req.
          MATCH     "00000000",SIPADCN   * get date
          IF        @EQUAL
            PACK      SIPADCN,CCC,CYY,CMM,CDD,SP70
            REP       " 0",SIPADCN
          ENDIF
.
          UNPACK    SIPADCN,CCENT,CYEAR,CMON          * set up date parameters
          MOVE      SP70,CDAY
          MOVE      ONE,CDEFDTE
          CALL      KEYDATE
          MATCH     SP70,CDAY
          IF        @EQUAL
            PACK      SIPADCN,SP70                    * clear date
          ELSE
            PACK      SIPADCN,CCENT,CYEAR,CMON,CDAY   * pack desired date
          ENDIF
.
KDCN9999  RETURN
.
.----------------------------------------------------------------------
. Keyin SIPADCM Date
. Returns  : SIPADCM  (Date entered)
.            EXIT     (0=valid date entered, 1=no date entered)
.----------------------------------------------------------------------
KDCM0000  REP       " 0",SIPADCM         * set up default if req.
          MATCH     "00000000",SIPADCM   * get date
          IF        @EQUAL
            PACK      SIPADCM,CCC,CYY,CMM,CDD,SP70
            REP       " 0",SIPADCM
          ENDIF
.
          UNPACK    SIPADCM,CCENT,CYEAR,CMON          * set up date parameters
          MOVE      SP70,CDAY
          MOVE      ONE,CDEFDTE
          CALL      KEYDATE                           * keyin date
          MATCH     SP70,CDAY
          IF        @EQUAL
            PACK      SIPADCM,SP70                    * clear date
            MOVE      ONE,COMFLAG
          ELSE
            PACK      SIPADCM,CCENT,CYEAR,CMON,CDAY   * pack desired date
          ENDIF
          MOVE      ZERO,EXIT                       * 0=continue 1=nothing ent
.
KDCM9999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSCEAIO/INC
          INC       APSCEBIO/INC
          INC       APSCIOIO/INC
          INC       APSMASIO/INC
          INC       APSORDIO/INC
          INC       APSSUBIO/INC
          INC       FMSAMAIO/INC
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSFPSIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSTUPIO/INC
          INC       SINCCAIO/INC
          INC       SINCGAIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCIEIO/INC
          INC       SINCIHIO/INC
          INC       SINFACIO/INC
          INC       SINLTTIO/INC
          INC       SINNATIO/INC
          INC       SINORDUS    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOAKY    
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINWARIO/INC
          INC       SINWSEIO/INC
.
          INC       STDGENCD
.
