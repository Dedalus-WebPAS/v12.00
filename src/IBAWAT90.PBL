.******************************************************************************
.* System   : WAITING LIST                                                    *
.* Program  : IBAWAT90           (N.Z. Only)                                  *
.* Desc     : Waiting List Periodic Statistic Update                          *
.******************************************************************************
.* Author   : K.Peak                                                          *
.* Date     : 31/01/1990                                                      *
.* Mods.    :                                                                 *
.*                                                                            *
. *****************************************************************************
.*        V12.00.01 15.05.2025  DA Sarkies     TSK 0955096                    *
.*                  Updated for Alpha-Numeric Visit Number                    *
.*        V11.02.01 10/02/2022  Thanh T          TSK 0889899                  *
.*                  Recompiled as WATTR1FD changes                            *
.******************************************************************************
.*        V10.05.01 01/08/2015  Ania P                      CAR 261630        *
.*                  Removed use of PORT for temp file naming                  *
.*        V10.01.01 03/02/2011 Jill Parkinson CAR 233088                      *
.*                  Added pmsvx1af                                            *
.*        V9.12.01  03/03/2010  Mike Laming   CAR 198851                      *
.*                  Added check for blank "to Date" (WTSUTDAT) at GSFT1000    *
.*        V9.02.01  24/10/2001  Dean Cramer                                   *
.*                  Altered for web where stats already exist for given month *
.*        V5.08.01  28/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.07.04  25/08/1999  Steve Downing                                 *
.*                  Y2K fix                                                   *
.*        V5.07.03  11/08/1999  Steve Downing                                 *
.*                  Mods to use DAYSEP                                        *
.*        V5.07.02  11/08/1999  Steve Armstrong                               *
.*                  Restored line that was commented out for count of         *
.*                  "Admitted from W/L" -  MOVE      UUSADMT,WTUDADMT         *
.*        V5.07.01  05/08/1999  Caleb Sharman     SRF 645854                  *
.*                  Mods to complete Y2K compliance                           *
.*        V5.04.01  03/10/1996  Howellsy          EOC & ACC                   *
.*                  Check for Unsched to use WMSTAT=1 Not WMBOOK=0            *
.******************************************************************************
.*            V5.01.02  28/02/90 K.Peak                                       *
.*                      To calculate the number of admissions to the w/list   *
.*                      during the period it is now wmstat 4 & 5              *
.*            V5.01.03  28/02/90 K.Peak                                       *
.*                      Changed the match of adate to from & to dates without *
.*                      the century                                           *
.*            V5.01.10  09/07/90 Bill Dew                                     *
.*                      Implement the Unit/doctor priority code changes for   *
.*                      pending status in IBAWAT22.  Thus the introduction    *
.*                      of watupcaf.  Also calculate the number of day cases  *
.*                      and inpatients on waiting list for IBAWAT26. This     *
.*                      means modifications to WATUNSFD.                      *
.*                      17/07/90 Bill Dew                                     *
.*                      After a week of changes to programs and FD's & IO's   *
.*                      for this bloody "pending status" it now works         *
.*                      properly with Greames new specs.  See Programmers     *
.*                      frustrations.                                         *
.*                                                                            *
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **
.*   Programmers frustration.                                                 *
.*   17/07/90 Bill Dew                                                        *
.*   Implementaing this "Pending status" is like trying to wipe a elephants   *
.*   ass with a piece of confetti.  In otherwords its been difficult.         * 
.*   At first nothing seem to fit or make sense so I changed FD's IO's and    *
.*   programs to suit the new pending priority status.                        *
.*   Finally I decided to ask Greame for some advice.                         *
.*   Greame said " What you have done is wrong, why didnt you use my new      *
.*   file specs ?",                                                           *
.*   I said " what new file specs ?", Now with Greame's new file specs the    *
.*   pending status concept is as clear as a face full of pus.                *
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **
.*                                                                            *
.*        V5.01.11  25/07/90 D.Di.Paola        SRF 105846                     *
.*                  Changed the checks for status to match against the        *
.*                  booking date (BAADATE), not the expected due date         *
.*                  (BAEDATE). This of course made the statistics as          *
.*                  useless as an ashtray on a motor-bike...                  *
.*        V5.01.12  03/08/90 Justin Coates                                    *
.*                  Added the use of WTCNTPDS:Treatment/Procedure             *
.*        V5.01.13  29/08/90 Bill Dew                                         *
.*                  Install the w/list movement analysis file watwtaaf        *
.*                  and routines to handle its update UWTA0000                *
.*                  03/08/90 - 04/08/90 Bill Dew                              *
.*                  Check stats to watunsaf for reports WAT26 and WAT32       *
.*                  14/09/90 Bill Dew                                         *
.*                  Fix UUNS to not count patients added to waiting list      *
.*                  on the first starting date as last period.                *
.*        V5.01.14  30/10/90 i chung           SRF 106920                     *
.*                  Correct wattr1af Key 3 from 26 to 27                      *
.*        V5.01.15  09/11/90 i chung           SRF 106919                     *
.*                  For Non-pending priority patients only -                  *
.*                  modified Added To List not to include patients added      *
.*                  in the period and subsequently changed to pending         *
.*                  within the same period                                    *
.*                  For Pending priority patients only -                      *
.*                  modified Last Period and Added To List not to include     *
.*                  Pending Stat Change patients in the period specified      *
.*        V5.01.16  14/11/90 i chung                                          *
.*                  Recompile for WATCATIO.INC - incorrect Keys size          *
.*        V5.01.17  24/01/91 Justin Coates                                    *
.*                  Changed to use BOKRC1FD (rather than BOKMASFD)            *
.*        V5.01.18  10/07/1991    Justin Coates  (Vic Health Dept Changes)    *
.*                  Added use of WATCSUFD and WATSWSFD                        *
.*        V5.01.19  29/01/1992    Graeme Williams                             *
.*                  Use category P for determining daypatient/inpatient       *
.*        V5.01.20  01/07/1992    Graeme Williams                             *
.*                  Changed scanning display so we can see what is happening  *
.*        V5.01.21  02/07/1992    Graeme Williams          SRF 113732         *
.*                  Fixed update of watcsuaf, loop over watcataf file wrong   *
.*        V5.01.22  15/02/1993    Justin Coates  (DUDLEY 3.4)                 *
.*                  check if procedures on suspension when calculating days   *
.*                  call new open routines                                    *
.*                  update new file watscuaf for suspensions                  *
.*        V5.01.23  22/02/1993    Justin Coates  (DUDLEY 3.4)                 *
.*                  check for status 7 and 8                                  *
.******************************************************************************
.
          INC       STD001FD
          INC       BOKRC1FD/INC            * booking file
          INC       PATCODFD/INC            * codes file
          INC       PATCOMM/INC
          INC       PATCONFD/INC            * control file
          INC       PATDO1FD/INC            * doctor file
          INC       PATDRGFD/INC            * period date range file
          INC       PATDSCFD/INC            * discharge file
          INC       PATMI1FD/INC            * admission file
          INC       PMSVX1FD/INC            * admission file
          INC       PATTRNFD/INC            * transfer file
          INC       WATCATFD/INC            * category change file
          INC       WATCONFD/INC            * w/list control file
          INC       WATCSUFD/INC            * w/list case summary file
          INC       WATSCUFD/INC            * unit/doctor suspension summary
          INC       WATSUSFD/INC            * w/list procedure suspension file
          INC       WATSWSFD/INC            * w/list status waiting summary file
          INC       WATTMAFD/INC            * w/list time analysis file
          INC       WATTR1FD/INC            * w/list treatments file
          INC       WATUDCFD/INC            * w/list unit/doctor code file
          INC       WATUDSFD/INC            * w/list unit/doctor summary file
          INC       WATUNSFD/INC            * w/list unit summary file
          INC       WATUPCFD/INC            * unit/doctor priority code changes
          INC       WATWTAFD/INC            * w/list movement analysis file
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.**********************************************************************
.*                         VARIABLES                                  *
.**********************************************************************
.
ANATMP    DIM       8        * temporary file a
ALRDYD    FORM      1        * re-do statistics flag
ADMTFLAG  FORM      1        * flags patients that were admitted in the period
.
BNBTMP    DIM       8        * temporary file b
.
CALDAYS   FORM      5        * used in calc0000
CANCHOSP  FORM      1        * cancelled by hospital flag
CANCOTH   FORM      1        * cancelled by other flag
CANCPAT   FORM      1        * cancelled by patient flag
CHKNO     FORM      10
CMDLINE   DIM       50
CODEBC    INIT      "BC"     * category for booking cancellation code
CODETP    INIT      "TP"     * category for priority code
CODEWU    INIT      "WU"     * category for unit code
COUNT     FORM      10
CSTPER    DIM       6        * ccyymm
CURPER    DIM       6        * current period
.
DATESTRT  DIM       8         * from date
DATESTOP  DIM       8         * to   date
DAYS      FORM      5         * number of days b/w dates
ENDDATE   DIM       10       * enddate
.
FADMDTE   DIM       8 
FDATE1    DIM       8
FDATE2    DIM       8
FORM8     FORM      8
FSTAT     FORM      1        * first status
.
JYEAR     FORM      6        * used in calc0000
.
LSTAT     FORM      1        * last status
.
ODDNO     FORM      10
OVRCDSCU  FORM      1
.
PDATE     DIM       7        * period for printing
PRIORITY  DIM       3
.
SAVDS2    FORM      4
SIXZ      INIT      "zzzzzz"
STRDATE   DIM       10       * start date
.
TADMDTE   DIM       8  
.
SCUSTAT   FORM      1        * what state the patient is in
SUSPSTRT  FORM      1        * 1=suspended at start of period
SUSPEND   FORM      1        * 1=suspended at end   of period
UTMRNG1   FORM      1        * no. on waiting list rng 1    
UTMRNG2   FORM      1        * no. on waiting list rng 1 < rng 2
UTMRNG3   FORM      1        * no. on waiting list rng 2 < rng 3
UTMRNG4   FORM      1        * no. on waiting list rng 3 < rng 4
UTMRNG5   FORM      1        * no. on waiting list rng 4 < rng 5
UTMRNG6   FORM      1        * no. on waiting list rng 5 < rng 6
UTMRNG7   FORM      1        * no. on waiting list > rng 6
UUCCODE   DIM       3        * code (priority or cancellation)
UUCNUMB   FORM      1        * no. in period for cancellations
.
UUNRNG1   FORM      1        * no. of patients waiting rng 1
UUNRNG2   FORM      1        * no. of patients waiting rng 2
UUNRNG3   FORM      1        * no. of patients waiting rng 3
UUNRNG4   FORM      1        * no. of patients waiting rng 4
UUNRNG5   FORM      1        * no. of patients waiting rng 5
UUNRNG6   FORM      1        * no. of patients waiting rng 6
.
UUSADD    FORM      1        * no. of additions to waiting list
UUSADMT   FORM      1        * no. of admissions from waiting list
UUSLAST   FORM      1        * no. of patients on list at start of period
UUSIAA    FORM      1        * no. of immediate arranged admissions in period 
UUSBOOK   FORM      1        * no. of booked or pre admitted
UUSNUMB   FORM      1        * no. of patients still on waiting list at end 
UUSDISC   FORM      1        * no. of patients discharged
.
ADMTPRTY  DIM       3        * admitted priority
BOOKPRTY  DIM       3        * booked or pre-admitted priority 
CURRPRTY  DIM       3        * current priority code
ORIGPRTY  DIM       3        * set original priority on waiting list
STRTPRTY  DIM       3        * priority before the period
.
Z8        INIT      "zzzzzzzz"
.
.         Temporary Files
.
ANATMPXX  IFILE     SQL, FIXED=22, KEY="u1-9" 
.Name     Type   Length   Physical  Start  Description
.----     ----   ------   --------  -----  -----------
X1PROC    DIM        9         9       1   Procedure code    
X1SUM     FORM      10         6      10   Total number of days   
X1NUM     FORM      10         6      16   Number of patients               
.
.End of record                        22
.
BNBTMPXX  IFILE     SQL, FIXED=14, KEY="d1-9,10-13"   * (duplicate keys allowed)
.Name     Type   Length   Physical  Start  Description
.----     ----   ------   --------  -----  -----------
X2PROC    DIM        9         9       1   Procedure code    
DX2DAYS   DIM        4         4      10   Number of days       
.
.End of record                        14
.
.  redefine form fields from key
.  -----------------------------
.Name     Type   Length   Start    Description
.----     ----   ------   -----    -----------
X2DAYS    FORM        4      10    Number of days       
.
PRGID     INIT      "IBAWAT90"
PRGNAM    INIT      "Waiting List Periodic Statistic Update"
VERSION   INIT      "V12.00.01"
+
.**********************************************************************
.*                         MAINLINE                                   *
.**********************************************************************
.
ML0000    CALL      INIT0000                * initialisation
.
ML1000    CALL      SCR0000                 * select option
          BRANCH    EXIT,ML9000
.
ML2000    CALL      DAT0000                 * keyin period
          BRANCH    EXIT,ML1000
          CALL      CONTQST                 * ok to continue y/n ?
          BRANCH    CEXIT,ML3000,ML2000,ML1000
.
ML3000    CALL      CREA0000                * create temporary file a
          CALL      CREB0000                * create temporary file b
.
          MOVE      ZERO,ALRDYD             * stats already done flag 
          CALL      UDSA0000                * check for data in watudsaf for per
          BRANCH    ALRDYD,ML4444
          CALL      UDCA0000                * check for data in watudcaf for per
          BRANCH    ALRDYD,ML4444
          CALL      UPCA0000                * check for data in watupcaf for per
          BRANCH    ALRDYD,ML4444
          CALL      UNSA0000                * check for data in watunsaf for per
          BRANCH    ALRDYD,ML4444
          CALL      TMAA0000                * check for data in wattmaaf for per
          BRANCH    ALRDYD,ML4444
          CALL      ECSU0000                * check for data in watcsuaf for per
          BRANCH    ALRDYD,ML4444
          CALL      ESWS0000                * check for data in watswsaf for per
          BRANCH    ALRDYD,ML4444
          CALL      ESCU0000                * check for data in watscuaf for per
.
ML4444    CALL      RSTA0000                * re-do statistical update ?
          BRANCH    EXIT,ML2000
.
          CALL      WTRE0000                * process wattr1af data
          CALL      UWTA7777                * update mean for movement analysis
          CALL      UUPC0000                * update watupcaf file 09/07/1990
          CALL      END0000                 * end of update
          GOTO      ML1000
.
.----------------------------------------------------------------------
.                          .. The End                                  
.----------------------------------------------------------------------
ML9000    CALL      KILA0000        * remove temporary file a
          CALL      KILB0000        * remove temporary file b
.
ML9999    CHAIN     PGM
+
.**********************************************************************
.*                         INIT0000                                   *
.*                      Initialisation                                *
.**********************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening bokrc1af";
          OPEN      BOKRC1A1,"bokrc1af"
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
          DISPLAY   *P64:24,"patdrgaf";
          OPEN      PATDRGA1,"patdrgaf"
          OPEN      PATDRGA3,"patdrgaf"
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
          DISPLAY   *P64:24,"wattr1af";
          OPEN      WATTR1A1,"wattr1af"
          OPEN      WATTR1A3,"wattr1af"
          DISPLAY   *P64:24,"wattmaaf";
          OPEN      WATTMAA1,"wattmaaf"
          DISPLAY   *P64:24,"watwtaaf";
          OPEN      WATWTAA1,"watwtaaf"
          DISPLAY   *P64:24,"watudsaf";
          OPEN      WATUDSA1,"watudsaf"
          DISPLAY   *P64:24,"watudcaf";
          OPEN      WATUDCA1,"watudcaf"
          DISPLAY   *P64:24,"watunsaf";
          OPEN      WATUNSA1,"watunsaf"
          DISPLAY   *P64:24,"watupcaf";
          OPEN      WATUPCA1,"watupcaf"
          DISPLAY   *P64:24,"watcataf";
          OPEN      WATCATA1,"watcataf"
          OPEN      WATCATA2,"watcataf"
          DISPLAY   *P64:24,"watcsuaf";
          OPEN      WATCSUA1,"watcsuaf"
          DISPLAY   *P64:24,"watswsaf";
          OPEN      WATSWSA1,"watswsaf"
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
          DISPLAY   *P64:24,"watsusaf";
          OPEN      WATSUSA1,"watsusaf"
          DISPLAY   *P64:24,"watscuaf";
          OPEN      WATSCUA1,"watscuaf"
.
          CALL      TFILENAM
          MOVE      TFILNAME,ANATMP
.
          CALL      TFILENAM
          MOVE      TFILNAME,BNBTMP
.
          READ      CONTROLF,THIRTY7;*140,WTCNTRG1,WTCNTRG2,WTCNTRG3:
                    WTCNTRG4,WTCNTRG5,WTCNTRG6:
                    WTCNMRG1,WTCNMRG2,WTCNMRG3,WTCNMRG4,WTCNMRG5,*185,WTCNTPDS:
                    *214,WTCNUSOP,WTCNWCOW
          READ      CONTROLF,FIFTY9;*27,CPERMTH
.
INIT9999  RETURN
+
.**********************************************************************
.*                         SCR0000                                    *
.*                      Main Option Screen                            *
.**********************************************************************
SCR0000   HLINE     *G37,2,59,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Update Statistics" 
.
SCR1000   KEYIN     *P1:7,"Select Option : ",*EF,*DV,UNDLN1:
                    *P17:7,*V2LON,OPTION
.
          BRANCH    OPTION,SCR8000
.
          COMPARE   ZERO,OPTION
          GOTO      SCR9000 IF EQUAL
          BEEP
          GOTO      SCR1000
.
SCR8000   MOVE      FALSE,EXIT
          GOTO      SCR9999
.
SCR9000   MOVE      TRUE,EXIT
SCR9999   RETURN
+
.**********************************************************************
.*                         DAT0000                                    *
.*                       Keyin Period                                 *
.**********************************************************************
.
DAT0000   DISPLAY   *P1:8,*EF:
                    *P1:10,"Enter the ",CPERMTH," to be updated : "
.
          PACK      CPTDATE,CCC,CYY,CMM,CDD
          REP       " 0",CPTDATE
          CALL      GPERD
          BRANCH    EXIT,DAT2000 
.
          PACK      CURPER,DRGYR,DRGNUM
.
.         Find previous period
.
          PACK      KEY6,CURPER
          CALL      RDSDRGA1
          CALL      RDPDRGA1
.
          PACK      CSTPER,DRGCYR,DRGCNUM
.
          UNPACK    CSTPER,CCENT,CYEAR,CMON
          MOVE      ZERO,CHIGHLT         * 0 = highlight 1 = no highlight
          MOVE      "34",CCOL            * column for keyin
          MOVE      TEN,CVERT            * row for keyin
          CALL      KEYPER
          BRANCH    OVRCD,DAT0000        * no date keyed in
.
.         Validate the date entered
.
          PACK      KEY6,CCENT,CYEAR,CMON
          REP       " 0",KEY6
          CALL      RDDRGA3
          BRANCH    OVRCD,DAT3000
          PACK      PDATE,CMON,SLASH,CCENT,CYEAR
.
.         Pack various start dates
.
          UNPACK    DRGFDTE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,STRDATE
          PACK      FADMDTE,CCENT,CYEAR,CMON,CDAY
.
.         Pack various end dates
.
          UNPACK    DRGTDTE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ENDDATE
          PACK      TADMDTE,CCENT,CYEAR,CMON,CDAY
.
          PACK      CSTPER,DRGYR,DRGNUM
.
          DISPLAY   *P43:10,*EL,DRGLDSC:
                    *P43:11,*EL,STRDATE," to ",ENDDATE
          GOTO      DAT8000
.
.         No current period on file
.
DAT2000   DISPLAY   *P1:24,*EL,*B:
                    "Error: Current date not found in Period file.  ";
          CALL      HITENTER
          GOTO      DAT9000
.
.         Invalid date entered
.
DAT3000   DISPLAY   *P1:24,*EL,*B,"Invalid Date.  ";
          CALL      HITENTER
          GOTO      DAT0000
.
DAT8000   MOVE      FALSE,EXIT
          GOTO      DAT9999
.
DAT9000   MOVE      TRUE,EXIT
DAT9999   RETURN
+
.**********************************************************************
.*                         UDSA0000                                   *
.*        Check if any data for period selected in watudsaf           *
.**********************************************************************
.
UDSA0000  PACK      KEY18,CSTPER,SP20
          CALL      RDSUDSA1
          CALL      RDKUDSA1
          BRANCH    OVRCD,UDSA9999
.
          MATCH     WTUDDATE,CSTPER
          GOTO      UDSA9999 IF NOT EQUAL
.
          MOVE      ONE,ALRDYD      * data found for period selected
.
UDSA9999  RETURN
+
.**********************************************************************
.*                         UDCA0000                                   *
.*        Check if any data for period selected in watudcaf           *
.**********************************************************************
.
UDCA0000  PACK      KEY21,CSTPER,SP20,SP5
          CALL      RDSUDCA1
          CALL      RDKUDCA1
          BRANCH    OVRCD,UDCA9999
.
          MATCH     WTUCDATE,CSTPER
          GOTO      UDCA9999 IF NOT EQUAL
.
          MOVE      ONE,ALRDYD     * data found for period selected
.
UDCA9999  RETURN
+
.**********************************************************************
.*                         UNSA0000                                   *
.*        Check if any data for period selected in watunsaf           *
.**********************************************************************
.
UNSA0000  PACK      KEY18,CSTPER,SP20
          CALL      RDSUNSA1
          CALL      RDKUNSA1
          BRANCH    OVRCD,UNSA9999
.
          MATCH     WTUNDATE,CSTPER
          GOTO      UNSA9999 IF NOT EQUAL
.
          MOVE      ONE,ALRDYD     * data found for period selected
.
UNSA9999  RETURN
+
.**********************************************************************
.*                         TMAA0000                                   *
.*        Check if any data for period selected in wattmaaf           *
.**********************************************************************
.
TMAA0000  PACK      KEY15,CSTPER,SP20
          CALL      RDSTMAA1
          CALL      RDKTMAA1
          BRANCH    OVRCD,TMAA9999
.
          MATCH     WTTMDATE,CSTPER
          GOTO      TMAA9999 IF NOT EQUAL
.
          MOVE      ONE,ALRDYD     * data found for period selected
.
TMAA9999  RETURN
+
.**********************************************************************
.*                  ECSU0000                    Called by : ML3000    *
.*        Check if any data for period selected in watcsuaf           *
.**********************************************************************
ECSU0000  PACK      KEY18,CSTPER,SP20
          CALL      RDWTCSU1
          CALL      RKWTCSU1
          BRANCH    OVRCD,ECSU9999
.
          MATCH     WTCSDATE,CSTPER
          GOTO      ECSU9999 IF NOT EQUAL
.
          MOVE      ONE,ALRDYD     * data found for period selected
.
ECSU9999  RETURN
+
.**********************************************************************
.*                  ESWS0000                    Called by : ML3000    *
.*        Check if any data for period selected in watswsaf           *
.**********************************************************************
ESWS0000  PACK      KEY19,CSTPER,SP20
          CALL      RDWTSWS1
          CALL      RKWTSWS1
          BRANCH    OVRCD,ESWS9999
.
          MATCH     WTSWDATE,CSTPER
          GOTO      ESWS9999 IF NOT EQUAL
.
          MOVE      ONE,ALRDYD     * data found for period selected
.
ESWS9999  RETURN
+
.******************************************************************************
.                                 UPCA0000
.    Check if data already generated in the period specified.
.    Created 09/07/1990 Bill Dew
.******************************************************************************
UPCA0000  PACK      KEY21,CSTPER,SP30
          CALL      RSWTUPC1
          CALL      RKWTUPC1
          BRANCH    OVRCD,UPCA9999
          MATCH     WTUPDATE,CSTPER
          GOTO      UPCA9999 IF NOT EQUAL
          MOVE      ONE,ALRDYD     * data found for period selected
.
UPCA9999  RETURN
.**********************************************************************
.*                         RSTA0000                                   *
.*                  Re-do statistical Update                          *
.**********************************************************************
.
RSTA0000  MATCH     "IBARSH",PGM
          GOTO      RSTA2000 IF EQUAL
.
          BRANCH    ALRDYD,RSTA1000         * data found so ask question
          GOTO      RSTA8000                * no data found in period
.
RSTA1000  DISPLAY   *P1:24,*EL,*B:
                    "This update has already been run. ":
                    "Do you want to re-do the statistics (":
                    *V2LON,ANSY,*HOFF,SLASH,*V2LON,ANSN,*HOFF,") ? ",UNDLN1;
          KEYIN     *P79:24,*EL,*V2LON,ANS;
          REPLACE   UPPLOW,ANS
.
          CMATCH    ANSY,ANS
          GOTO      RSTA2000 IF EQUAL
.
          CMATCH    ANSN,ANS
          GOTO      RSTA9000 IF EQUAL
.
.         BEEP 
          GOTO      RSTA1000
.
.         Before updating statistics again we must first delete the 
.         data already there for the period selected
.
RSTA2000  DISPLAY   *P1:24,*EL,*P28:24,*V2LON,"** ",*BLINKON:
                    "Removing old records",*HOFF,*V2LON," **";
.
.         delete all current data for the period
.
          CALL      CCSU0000                * delete watcsuaf data
          CALL      CSCU0000                * delete watscuaf data
          CALL      CSWS0000                * delete watswsaf data
          CALL      CTMA0000                * delete wattmaaf data
          CALL      CUDC0000                * delete watudcaf data 
          CALL      CUDS0000                * delete watudsaf data 
          CALL      CUNS0000                * delete watunsaf data
          CALL      CUPC0000                * delete watupcaf data
          CALL      CWTA0000                * delete movement analysis file
          DISPLAY   *P1:24,*EL
.
RSTA8000  MOVE      ZERO,EXIT               * do update
          GOTO      RSTA9999
.
RSTA9000  MOVE      TRUE,EXIT               * dont do update
.
RSTA9999  RETURN
+
.**********************************************************************
.*                         CUDS0000                                   *
.*            Delete Records in watudsaf for Period selected          *
.**********************************************************************
CUDS0000  
          PACK      KEY18,CSTPER,SP20
          CALL      RDSUDSA1
          CALL      RDKUDSA1
          BRANCH    OVRCD,CUDS9999
.
          MATCH     WTUDDATE,CSTPER
          GOTO      CUDS9999 IF NOT EQUAL
.
          PACK      KEY18,WTUDDATE,WTUDUNIT,WTUDDOCT,WTUDPRTY
          CALL      DEUDSA1
          GOTO      CUDS0000
.
CUDS9999  RETURN
.**********************************************************************
.*                         CUDC0000                                   *
.*            Delete Records in watudcaf for Period selected          *
.**********************************************************************
CUDC0000
          PACK      KEY21,CSTPER,SP20
          CALL      RDSUDCA1
          CALL      RDKUDCA1
          BRANCH    OVRCD,CUDC9999
.
          MATCH     WTUCDATE,CSTPER
          GOTO      CUDC9999 IF NOT EQUAL
.
          PACK      KEY21,WTUCDATE,WTUCUNIT,WTUCDOCT,WTUCPRTY,WTUCCCOD
          CALL      DEUDCA1
          GOTO      CUDC0000
.
CUDC9999  RETURN
+
.**********************************************************************
.*                         CUNS0000                                   *
.*            Delete Records in watunsaf for Period selected          *
.**********************************************************************
CUNS0000
          PACK      KEY18,CSTPER,SP10
          CALL      RDSUNSA1
          CALL      RDKUNSA1
          BRANCH    OVRCD,CUNS9999
.
          MATCH     WTUNDATE,CSTPER
          GOTO      CUNS9999 IF NOT EQUAL
.
          PACK      KEY18,WTUNDATE,WTUNUNIT,WTUNDOCT,WTUNPRTY
          CALL      DEUNSA1
          GOTO      CUNS0000
.
CUNS9999  RETURN
+
.**********************************************************************
.*                         CTMA0000                                   *
.*            Delete Records in wattmaaf for Period selected          *
.**********************************************************************
CTMA0000
          PACK      KEY15,CSTPER,SP10
          CALL      RDSTMAA1
          CALL      RDKTMAA1
          BRANCH    OVRCD,CTMA9999
.
          MATCH     WTTMDATE,CSTPER
          GOTO      CTMA9999 IF NOT EQUAL
.
          PACK      KEY15,WTTMDATE,WTTMPROC
          CALL      DETMAA1
          GOTO      CTMA0000
.
CTMA9999  RETURN
+
.******************************************************************************
.                                 CUPC0000
.    Clear watupcaf specified period date to redo stats
.    Created 09/07/1990 Bill Dew
.******************************************************************************
CUPC0000  PACK      KEY21,CSTPER,SP30
          CALL      RSWTUPC1
          CALL      RKWTUPC1
          BRANCH    OVRCD,CUPC9999
.
          MATCH     WTUPDATE,CSTPER
          GOTO      CUPC9999 IF NOT EQUAL
.
          PACK      KEY21,WTUPDATE,WTUPUNIT,WTUPDOCT,WTUPOPTY,WTUPNPTY
          CALL      DEWTUPC1
          GOTO      CUPC0000
.
CUPC9999  RETURN
.
.******************************************************************************
.                                 CWTA0000
.    Clear watwtaaf specified period date to redo stats
.    Created 28/08/1990 Bill Dew
.******************************************************************************
CWTA0000  PACK      KEY24,CSTPER,SP30
          CALL      RSWTWTA1
          CALL      RKWTWTA1
          BRANCH    OVRCD,CWTA9999
.
          MATCH     WTWTDATE,CSTPER
          GOTO      CWTA9999 IF NOT EQUAL
.
          PACK      KEY24,WTWTDATE,WTWTPROC,WTWTDOCT,WTWTUNIT
          CALL      DEWTWTA1
          GOTO      CWTA0000
.
CWTA9999  RETURN
.
.*********************************************************************
.*                  CCSU0000                    Called by : RSTA2000 *
.*        Delete all records from watcsuaf for the period            *
.*********************************************************************
CCSU0000  PACK      KEY18,CSTPER,SP30
          CALL      RSWTCSU1
          CALL      RKWTCSU1
          BRANCH    OVRCD,CCSU9999          * end of file
.
          MATCH     WTCSDATE,CSTPER
          GOTO      CCSU9999 IF NOT EQUAL   * different period
.
          PACK      KEY18,WTCSDATE,WTCSUNIT,WTCSPRTY,WTCSATYP,WTCSCLSS
          CALL      DEWTCSU1
          GOTO      CCSU0000
.
CCSU9999  RETURN
+
.*********************************************************************
.*                  CSWS0000                    Called by : RSTA2000 *
.*        Delete all records from watswsaf for the period            *
.*********************************************************************
CSWS0000  PACK      KEY19,CSTPER,SP30
          CALL      RSWTSWS1
          CALL      RKWTSWS1
          BRANCH    OVRCD,CSWS9999          * end of file
.
          MATCH     WTSWDATE,CSTPER
          GOTO      CSWS9999 IF NOT EQUAL   * different period
.
          PACK      KEY19,WTSWDATE,WTSWUNIT,WTSWPRTY,WTSWATYP,WTSWCLSS,WTSWSTAT
          CALL      DEWTSWS1
          GOTO      CSWS0000
.
CSWS9999  RETURN
+
.**********************************************************************
.*                         WTRE0000                                   *
.*                   Process WATTR1FD Data                            *
.    Modified 17/07/1990 Bill Dew
.**********************************************************************
.
WTRE0000  DISPLAY   *P1:24,*EL,*P20:24,"Unit : ",*P43:24,"Scanning : ";
.
          PACK      KEY27,SP20,SP10
          CALL      RDSTREA3
.
WTRE1000  CALL      RDKTREA3
          BRANCH    OVRCD,WTRE8000
.
          MATCH     WMDATE1,DRGTDTE   * test end date been reached
          GOTO      WTRE8000 IF LESS
.
          UNPACK    WMDATE1,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P54:24,*EL,CPCDATE,"/",WMURNO;
.
          DISPLAY   *P27:24,*V2LON,WMUNIT;
.
          CALL      UCSU0000          * update the watcsuaf file
          CALL      USWS0000          * update the watswsaf file
          CALL      PRIC0000          * setup all priority code changes
          CALL      FSTS0000          * get the first status of the period
          CALL      LSTS0000          * get the last status of the period
          CALL      UUDS0000          * update the watudsfd file         
          CALL      UUDC0000          * update the watudcfd file         
          CALL      UUNS0000          * update the watunsfd file         
          CALL      UTMA0000          * update the wattmafd file         
          CALL      UWTA0000          * update partial watwtaaf
          CALL      USCU0000          * update watscuaf
          GOTO      WTRE1000              
.
WTRE8000  CALL      PTMP0000          * update median & mean for wattmafd
.
WTRE9999  RETURN
+
.*******************************************************************************
.                                 PRIC0000
.    Created by Bill Dew 18/07/1990 This is a pric of a routine. PRIority Codes 
.    Please Note if any priority cannot be determined it will be set to the
.    current priority code.  WMPTY from wattr1af.
.*******************************************************************************
PRIC0000  MOVE      WMPTY,ORIGPRTY     * set original priority on waiting list
          MOVE      WMPTY,ADMTPRTY     * admitted priority
          MOVE      WMPTY,STRTPRTY     * priority before the period
          MOVE      WMPTY,BOOKPRTY     * booked or pre-admitted priority 
          MOVE      WMPTY,CURRPRTY     * current priority code
          MOVE      ZERO,FORM2         * priority change counter
.
.    Work out the priority code patient had when placed on the waiting list
.    This is done by reading first patient record on the watcataf.
.    WAT01 should write a priority change record when adding a 
.    patient to waiting list and the code stored in WTCACODT.
.    
          PACK      KEY29,WMURNO,WMCODE,WMCNT,CODETP,SP10
          CALL      RSWTCAT2           * position fptr in watcataf
          CALL      RKWTCAT2
          BRANCH    OVRCD,PRIC1111     * if no record then leave as WMPTY
.
          MATCH     WTCAURNO,WMURNO    * test same patient
          GOTO      PRIC1111 IF NOT EQUAL
          MATCH     WTCAPROC,WMCODE    * test same procedure code
          GOTO      PRIC1111 IF NOT EQUAL
          COMPARE   WTCAPCNT,WMCNT     * test same procedure count
          GOTO      PRIC1111 IF NOT EQUAL
          MATCH     WTCACATF,CODETP    * test codes are "priority" code types
          GOTO      PRIC1111 IF NOT EQUAL
.
          MOVE      WTCACODT,ORIGPRTY  * set original priority
PRIC1111
.
.    Work out patients priority code before start of period can be done by
.    reading backwards on watcataf from start of period to date on list.
.    If no changes then the priority remains whats currently on disk.
.
          MATCH     WMDATE1,DRGFDTE    * test date on list after period start
          GOTO      PRIC2222 IF LESS
          PACK      KEY19,WMDATE1,DRGFDTE,STRTPRTY
          CALL      CCAT0000
          MOVE      PRIORITY,STRTPRTY
PRIC2222
.
.    Test if patient has been booked or pre-admitted.
.    Get the priority code when the patient was booked.  Must check watcataf 
.    between date on list to the booking date for any changes.
.
          MOVE      WMBOOK,KEY8
          CALL      RDBKREC1           * read the booking file
          BRANCH    OVRCD,PRIC3333
.
          UNPACK    BKREADAT,CCENT,CYEAR,CMON,CDAY * unpack booking date details
          PACK      KEY19,WMDATE1,CCENT,CYEAR,CMON,CDAY,BOOKPRTY
          CALL      CCAT0000
          MOVE      PRIORITY,BOOKPRTY
          MOVE      BKREBOOK,WMBOOK    * reset booking number, safety precaution
PRIC3333
.
.    Test patient been admitted into hospital.  Check any changes from 
.    booked to admission date.
.
          MOVE      WMBOOK,KEY8
          CALL      RDMISS1            * get admission date
          BRANCH    OVRCD,PRIC4444
.
          PACK      KEY19,WMDATE1,CCENT,CYEAR,CMON,CDAY,BOOKPRTY
          COMPARE   TWO,ASTAT          * test the patient is admitted status
          GOTO      PRIC4444 IF NOT EQUAL
.
          UNPACK    BKREADAT,CCENT,CYEAR,CMON,CDAY
          PACK      FDATE1,CCENT,CYEAR,CMON,CDAY
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          PACK      FDATE2,CCENT,CYEAR,CMON,CDAY
          PACK      KEY19,FDATE1,FDATE2,ADMTPRTY
          CALL      CCAT0000
          MOVE      PRIORITY,ADMTPRTY
.
PRIC4444
PRIC9999  RETURN
.******************************************************************************
.                                 CCAT0000
.    Check priority change file for any changes within given period,  and save
.    the very last change in PRIORITY
.******************************************************************************
CCAT0000
          UNPACK    KEY19,FDATE1,FDATE2,PRIORITY
.
          MATCH     FDATE1,FDATE2      * test if dates are correct format
          GOTO      CCAT9999 IF LESS
.
          PACK      KEY29,WMURNO,WMCODE,WMCNT,CODETP,Z8
          CALL      RSWTCAT2
CCAT2222
          CALL      RPWTCAT2           * read the very last record backwards
          BRANCH    OVRCD,CCAT9999
.
          MATCH     WTCAURNO,WMURNO    * test same patient
          GOTO      CCAT9999 IF NOT EQUAL
          MATCH     WTCAPROC,WMCODE    * test same procedure code
          GOTO      CCAT9999 IF NOT EQUAL
          COMPARE   WTCAPCNT,WMCNT     * test same procedure count
          GOTO      CCAT9999 IF NOT EQUAL
.
          MATCH     FDATE1,WTCAEDAT    * if past the start search date, exit
          GOTO      CCAT9999 IF LESS
          MATCH     WTCAEDAT,FDATE2
          GOTO      CCAT2222 IF LESS
.
          MATCH     CODETP,WTCACATF    * test if codes are priorities
          GOTO      CCAT2222 IF NOT EQUAL
.
          MATCH     SP3,WTCACODF                 * empty Change Code From ?
          GOTO      CCAT2222 IF EQUAL            * yes
.
          MOVE      WTCACODT,PRIORITY
CCAT9999  RETURN
.**********************************************************************
.*                         FSTS0000                                   *
.*               Get the first status of the period                   *
.**********************************************************************
FSTS0000  MOVE      WMSTAT,FSTAT
          BRANCH    WMSTAT,FSTS9999,FSTS1000,FSTS1000,FSTS3000:
                           FSTS4000,FSTS5000,FSTS3000,FSTS5000
          GOTO      FSTS9999 
.
.         Status 1 = unscheduled
.
.         Status 2 = scheduled, 3 = pre-admitted
.         If current status is 2 or 3 read the bookings file and if 
.         the booking date is < starting date of the period return with 
.         that status, else return with a status of 1
.
FSTS1000  MOVE      WMBOOK,KEY8
          CALL      RDBKREC1
          MATCH     FADMDTE,BKREADAT
          GOTO      FSTS9999 IF LESS
.
          MOVE      ONE,FSTAT
          GOTO      FSTS9999
.
.         Status 4 = admitted
.         If current status is 4 read the admission file and if 
.         the admission date is < starting date of the period return with 
.         that status. Otherwise read the booking file and if the booking 
.         date is < starting date return with a status of 3, else return 
.         with a status of 1
.
FSTS3000  MOVE      WMBOOK,KEY8
          CALL      RDMISS1
          MATCH     FADMDTE,ADATE
          GOTO      FSTS9999 IF LESS
.
          MOVE      WMBOOK,KEY8
          CALL      RDBKREC1
          MATCH     FADMDTE,BKREADAT
          GOTO      FSTS3500 IF LESS
.
          MOVE      ONE,FSTAT
          GOTO      FSTS9999
.
FSTS3500  MOVE      THREE,FSTAT
          GOTO      FSTS9999
.
.         Status 5 = discharged
.         If current status is 5 read the discharge file and if 
.         the discharge date is < starting date of the period return with 
.         that status. Otherwise read the admission file and if the admission 
.         date is < starting date return with a status of 4. Otherwise read 
.         the booking file and if the booking date is < starting date of the 
.         period return with a status of 3, else return with a status of 1
.
FSTS4000  MOVE      WMBOOK,KEY8
          CALL      RDDSCH1
          MATCH     FADMDTE,DDATE
          GOTO      FSTS9999 IF LESS
.
          MOVE      WMBOOK,KEY8
          CALL      RDMISS1
          MATCH     FADMDTE,ADATE
          GOTO      FSTS4500 IF LESS
.
          MOVE      WMBOOK,KEY8
          CALL      RDBKREC1
          MATCH     FADMDTE,BKREADAT
          GOTO      FSTS4700 IF LESS
.
          MOVE      ONE,FSTAT
          GOTO      FSTS9999
.
FSTS4500  MOVE      FOUR,FSTAT
          GOTO      FSTS9999
.
FSTS4700  MOVE      THREE,FSTAT
          GOTO      FSTS9999
.
.         Status 6 = removed
.         If current status is 6 check the removal date on the waiting 
.         list record and if it is < starting date of the period return 
.         with that status, else return with a status of 1
.
FSTS5000  MATCH     DRGFDTE,WMDATE4
          GOTO      FSTS9999 IF LESS
.
          MOVE      ONE,FSTAT
.
FSTS9999  RETURN
+
.**********************************************************************
.*                         LSTS0000                                   *
.*               Get the last status of the period                    *
.**********************************************************************
LSTS0000  MOVE      WMSTAT,LSTAT
          BRANCH    WMSTAT,LSTS9999,LSTS1000,LSTS1000,LSTS3000:
                           LSTS4000,LSTS5000,LSTS3000,LSTS5000
          GOTO      LSTS9999 
.
.         Status 1 = unscheduled
.
.         Status 2 = scheduled, 3 = pre-admitted
.         If current status is 2 or 3 read the bookings file and if 
.         the booking date is < or = ending date of the period return with 
.         that status, else return with a status of 1
.
LSTS1000  MOVE      WMBOOK,KEY8
          CALL      RDBKREC1
          MATCH     BKREADAT,TADMDTE
          GOTO      LSTS9999 IF NOT LESS
.
          MOVE      ONE,LSTAT
          GOTO      LSTS9999
.
.         Status 4 = admitted
.         If current status is 4 read the admission file and if 
.         the admission date is < or = ending date of the period return with 
.         that status. Otherwise read the booking file and if the booking 
.         date is < or = ending date return with a status of 3, else return 
.         with a status of 1
.
LSTS3000  MOVE      WMBOOK,KEY8
          CALL      RDMISS1
          MATCH     ADATE,TADMDTE
          GOTO      LSTS9999 IF NOT LESS
.
          MOVE      WMBOOK,KEY8
          CALL      RDBKREC1
          MATCH     BKREADAT,TADMDTE
          GOTO      LSTS3500 IF NOT LESS
.
          MOVE      ONE,LSTAT
          GOTO      LSTS9999
.
LSTS3500  MOVE      THREE,LSTAT
          GOTO      LSTS9999
.
.         Status 5 = discharged
.         If current status is 5 read the discharge file and if 
.         the discharge date is < or = ending date of the period return with 
.         that status. Otherwise read the admission file and if the admission 
.         date is < or = ending date return with a status of 4. Otherwise read 
.         the booking file and if the booking date is < or = ending date of the 
.         period return with a status of 3, else return with a status of 1
.
LSTS4000  MOVE      WMBOOK,KEY8
          CALL      RDDSCH1
          MATCH     DDATE,TADMDTE
          GOTO      LSTS9999 IF NOT LESS
.
          MOVE      WMBOOK,KEY8
          CALL      RDMISS1
          MATCH     ADATE,TADMDTE
          GOTO      LSTS4500 IF NOT LESS
.
          MOVE      WMBOOK,KEY8
          CALL      RDBKREC1
          MATCH     BKREADAT,TADMDTE
          GOTO      LSTS4700 IF NOT LESS
.
          MOVE      ONE,LSTAT
          GOTO      LSTS9999
.
LSTS4500  MOVE      FOUR,LSTAT
          GOTO      LSTS9999
.
LSTS4700  MOVE      THREE,LSTAT
          GOTO      LSTS9999
.
.         Status 6 = removed
.         If current status is 6 check the removal date on the waiting 
.         list record and if it is < or = ending date of the period return 
.         with that status, else return with a status of 1
.
LSTS5000  MATCH     WMDATE4,DRGTDTE
          GOTO      LSTS9999 IF NOT LESS
.
          MOVE      ONE,LSTAT
.
LSTS9999  RETURN
.**********************************************************************
.    Clear UUS storage flag vars
CUUS0000
          MOVE      ZERO,UUSADD      * no. of additions to waiting list 
          MOVE      ZERO,UUSADMT     * no. of admissions from waiting list 
          MOVE      ZERO,UUSLAST     * no. of pats on list at start of period
          MOVE      ZERO,UUSIAA      * no. of immediate arranged adms in period
          MOVE      ZERO,UUSBOOK     * no. of patients booked or pre admitted 
          MOVE      ZERO,UUSNUMB     * no. of patients waiting list priority 
CUUS9999  RETURN
.**********************************************************************
.                                 UUDS0000
.                         Update the WATUDSFD file
.    Modified 17/07/1990 Bill Dew : add pending calculations
.    With the addition of Priority code as part of the key the routine must
.    changed as to accomodate multiple writes and updates to the unit/doctor
.    summary file because the patient priority code can vary.
.    Because of the multiple changes to this program I am disgusted with the
.    way I had to modify the code.  The code was perfect for the original
.    specifications but should have been re-spec and re-written for the
.    priority code addition to watudsaf.
.
.    See WATUDSFD in conjunction with these comments.
.
.    WTUDADD  : Original priority code patient was put onto waiting list with
.    WTUDADMT : Priority code patient was admitted with from waiting list
.    WTUDLAST : Priority code patient had at the start of the period
.    WTUDIAA  : same priority as WTUDADMT
.    WTUDBOOK : Priority code patient was booked or pre-admitted
.    WTUDNUMB : Priority code patient currently has and still on waiting list
.
.    These priority are set in PRIC0000
.**********************************************************************
UUDS0000
.
.         Calculate the number of additions to the w/list during the period
.
          MATCH     DRGFDTE,WMDATE1
          GOTO      UUDS0500 IF EQUAL  * 14/09/90 BD
          GOTO      UUDS1000 IF LESS
.
          MATCH     WMDATE1,DRGTDTE
          GOTO      UUDS0500 IF EQUAL  * 14/09/90 BD
          GOTO      UUDS1000 IF LESS
UUDS0500
.
.         In order to reflect the true status of IBAWAT22, Added To List 
.         will not be incremented if there is a change in priority status
.         during the period
.
          CALL      NPTP0000          * Non-Pending to Pending Stat Change check
          BRANCH    EXIT,UUDS1000     * do not increment Added To List
.
          CALL      CUUS0000          * clear UUS vars
          MOVE      ONE,UUSADD        * increment wait list pat added in period
          PACK      KEY18,CSTPER,WMUNIT,WMDOCTOR,ORIGPRTY
          CALL      WUDS0000          * write or update unit/doctor summary
.        
UUDS1000  BRANCH    LSTAT,UUDS2000,UUDS2000,UUDS2000,UUDS1500:
                          UUDS1500,UUDS2000,UUDS1500,UUDS2000
          GOTO      UUDS2000
.
.         Calculate the number of admissions to the w/list during the period
.
UUDS1500  MOVE      WMBOOK,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,UUDS2000
.
          MATCH     FADMDTE,ADATE
          GOTO      UUDS2000 IF LESS
.
          MATCH     ADATE,TADMDTE
          GOTO      UUDS2000 IF LESS
          CALL      CUUS0000          * clear UUS vars
          MOVE      ONE,UUSADMT       * increment number of admissions
          PACK      KEY18,CSTPER,WMUNIT,WMDOCTOR,ADMTPRTY
          CALL      WUDS0000          * write or update unit/doctor summary
.         
UUDS2000  BRANCH    FSTAT,UUDS2200,UUDS2200,UUDS2200,UUDS3000:
                          UUDS3000,UUDS3000,UUDS3000,UUDS3000
          GOTO      UUDS3000
.
.         Calculate the number of patients on w/list at start of the period 
.
UUDS2200  MATCH     DRGFDTE,WMDATE1
          GOTO      UUDS3000 IF NOT LESS
.
.         In order to reflect the true status of Option 2 of IBAWAT22
.         Last Period will not be incremented if Start Priority is of pending 
.         status changed from non-pending during the period.  On the otherhand,
.         a non-pending Start Priority changed from pending during the period
.         will have a Last Period record written/updated with the Start Priority
.         reset to the pending priority changed from.
.
          PACK      KEY5,CODETP,STRTPRTY
          CALL      RDCODE1
          BRANCH    OVRCD,UUDS2600
          MATCH     ANSP,TCINDC2      * is Start Priority of pending status ?
          GOTO      UUDS2400 IF EQUAL * yes
          CALL      PTNP0000          * Pending to Non-Pending Stat Change check
          GOTO      UUDS2600
.
UUDS2400  CALL      NPTP0000          * Non-Pending to Pending Stat Change check
          BRANCH    EXIT,UUDS3000     * do not increment Last Period
UUDS2600
          CALL      CUUS0000          * clear UUS vars
          MOVE      ONE,UUSLAST       * increment wait list pat at start period
          PACK      KEY18,CSTPER,WMUNIT,WMDOCTOR,STRTPRTY
          CALL      WUDS0000          * write or update unit/doctor summary
UUDS3000
          BRANCH    LSTAT,UUDS5000,UUDS3500,UUDS3500,UUDS4000:
                          UUDS4000,UUDS9999,UUDS4000,UUDS9999
UUDS3500  
.         
.         Calculate the number of patients who are currently booked or pre-adm
.
          CALL      CUUS0000          * clear UUS vars
          MOVE      ONE,UUSBOOK
          PACK      KEY18,CSTPER,WMUNIT,WMDOCTOR,BOOKPRTY
          CALL      WUDS0000          * write or update unit/doctor summary
          GOTO      UUDS5000          * go test if patient also admitted
.             
.         Calculate the number of immediate arranged admissions in period
.
UUDS4000  MATCH     DRGFDTE,WMDATE1
          GOTO      UUDS9999 IF LESS
.
          MATCH     WMDATE1,DRGTDTE
          GOTO      UUDS9999 IF LESS
.
          MATCH     ZEROVISN,WMBOOK       * check for a valid admission number
          GOTO      UUDS5000 IF EQUAL
          MOVE      WMBOOK,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,UUDS5000
.
          MATCH     FADMDTE,ADATE
          GOTO      UUDS5000 IF LESS
          MATCH     ADATE,TADMDTE
          GOTO      UUDS5000 IF LESS
.
          CALL      CUUS0000          * clear UUS vars
          MOVE      ONE,UUSIAA
          PACK      KEY18,CSTPER,WMUNIT,WMDOCTOR,ADMTPRTY
          CALL      WUDS0000          * write or update unit/doctor summary
          GOTO      UUDS9999
UUDS5000
.
.         Priority code 
.
          CALL      CUUS0000           * clear UUS vars
          MOVE      ONE,UUSNUMB
          PACK      KEY18,CSTPER,WMUNIT,WMDOCTOR,CURRPRTY
          CALL      WUDS0000           * write or update unit/doctor summary
UUDS9999  RETURN
.*******************************************************************************
.                                 NPTP0000
.         This routine determines if a patient changes from a non-pending
.         to a pending priority during the period specified.
.         If there is a change EXIT is set to "1", otherwise EXIT is set to "0"
.*******************************************************************************
NPTP0000
          PACK      KEY29,WMURNO,WMCODE,WMCNT,CODETP,Z8
          CALL      RSWTCAT2
.
NPTP1000  CALL      RPWTCAT2
          BRANCH    OVRCD,NPTP9000
          MATCH     WTCAURNO,WMURNO              * same U/R No. ?
          GOTO      NPTP9000 IF NOT EQUAL        * no
          MATCH     WTCAPROC,WMCODE              * same Procedure Code ?
          GOTO      NPTP9000 IF NOT EQUAL        * no
          COMPARE   WTCAPCNT,WMCNT               * same Procedure Count ?
          GOTO      NPTP9000 IF NOT EQUAL        * no
          MATCH     WTCACATF,CODETP              * Change Category = "TP" ?
          GOTO      NPTP9000 IF NOT EQUAL        * no
.
          MATCH     SP3,WTCACODF                 * empty Change Code From ?
          GOTO      NPTP1000 IF EQUAL            * yes
.
.         is Effective Date within specified period ?
.
          MATCH     DRGFDTE,WTCAEDAT
          GOTO      NPTP1000 IF LESS
          MATCH     WTCAEDAT,DRGTDTE
          GOTO      NPTP1000 IF LESS
.
.         determine the priority status of the Change Code From
.
          PACK      KEY5,CODETP,WTCACODF
          CALL      RDCODE1
          BRANCH    OVRCD,NPTP1000
          MATCH     ANSP,TCINDC2                 * is it a Pending priority ?
          GOTO      NPTP1000 IF EQUAL            * yes - read next record
.
.         determine the priority status of the Change Code To
.
          PACK      KEY5,CODETP,WTCACODT
          CALL      RDCODE1
          BRANCH    OVRCD,NPTP1000
          MATCH     ANSP,TCINDC2                 * is it a Pending priority ?
          GOTO      NPTP1000 IF NOT EQUAL        * no - read next record
          MOVE      ONE,EXIT                     * set EXIT = 1
          GOTO      NPTP9999
.
NPTP9000  MOVE      ZERO,EXIT                    * set EXIT = 0
.
NPTP9999  RETURN
+
.*******************************************************************************
.                                 PTNP0000
.         This routine determines if a patient changes from a pending to a
.         non-pending priority during the period specified.
.         If there is a change STRTPRTY is reset to Change Code From so that a
.         Last Period record will be written for the old priority code.  This
.         is so done to reflect the true status of Option 2 of IBAWAT22
.*******************************************************************************
PTNP0000
          PACK      KEY29,WMURNO,WMCODE,WMCNT,CODETP,Z8
          CALL      RSWTCAT2
.
PTNP1000  CALL      RPWTCAT2
          BRANCH    OVRCD,PTNP9999
          MATCH     WTCAURNO,WMURNO              * same U/R No. ?
          GOTO      PTNP9999 IF NOT EQUAL        * no
          MATCH     WTCAPROC,WMCODE              * same Procedure Code ?
          GOTO      PTNP9999 IF NOT EQUAL        * no
          COMPARE   WTCAPCNT,WMCNT               * same Procedure Count ?
          GOTO      PTNP9999 IF NOT EQUAL        * no
          MATCH     WTCACATF,CODETP              * Change Category = "TP" ?
          GOTO      PTNP9999 IF NOT EQUAL        * no
.
          MATCH     SP3,WTCACODF                 * empty Change Code From ?
          GOTO      PTNP1000 IF EQUAL            * yes
.
.         is Effective Date within specified period ?
.
          MATCH     DRGFDTE,WTCAEDAT
          GOTO      PTNP1000 IF LESS
          MATCH     WTCAEDAT,DRGTDTE
          GOTO      PTNP1000 IF LESS
.
.         determine the priority status of the Change Code From
.
          PACK      KEY5,CODETP,WTCACODF
          CALL      RDCODE1
          BRANCH    OVRCD,PTNP1000
          MATCH     ANSP,TCINDC2                 * is it a Pending priority ?
          GOTO      PTNP1000 IF NOT EQUAL        * no - read next record
.
.         determine the priority status of the Change Code To
.
          PACK      KEY5,CODETP,WTCACODT
          CALL      RDCODE1
          BRANCH    OVRCD,PTNP1000
          MATCH     ANSP,TCINDC2                 * is it a Pending priority ?
          GOTO      PTNP1000 IF EQUAL            * yes - read next record
          MOVE      WTCACODF,STRTPRTY            * set Start Priority to Change
.                                                  Code From
PTNP9999  RETURN
+
.*******************************************************************************
.                                 WUDS0000
.    Write record to unit/doctor summary file.
.    KEY18 must be set prior the call
.*******************************************************************************
WUDS0000  CALL      RDUDSA1            * read existing record if any
          BRANCH    OVRCD,WUDS6666     * go and write new record
.
          ADD       UUSADD,WTUDADD
          ADD       UUSADMT,WTUDADMT
          ADD       UUSLAST,WTUDLAST
          ADD       UUSIAA,WTUDIAA
          ADD       UUSBOOK,WTUDBOOK
          ADD       UUSNUMB,WTUDNUMB
.
          CALL      UPUDSA1            * update existing record
          GOTO      WUDS9999
.
WUDS6666  UNPACK    KEY18,WTUDDATE,WTUDUNIT,WTUDDOCT,WTUDPRTY
.
          MOVE      UUSADD,WTUDADD
          MOVE      UUSADMT,WTUDADMT
          MOVE      UUSLAST,WTUDLAST
          MOVE      UUSIAA,WTUDIAA
          MOVE      UUSBOOK,WTUDBOOK
          MOVE      UUSNUMB,WTUDNUMB
          CALL      WRUDSA1
.
WUDS9999  RETURN
+
.**********************************************************************
.*                         UUDC0000                                   *
.*                   Update the WATUDCFD file                         *
.    Modified 18/07/1990 Bill Dew : Number of priority codes still on the
.    waiting list are now recorded on the unit/doctor summary (watudsaf) and
.    Not by the watudcaf.   The priority code and time of cancellation will
.    be the WMPTY currently on wattr1af.
.**********************************************************************
UUDC0000  MOVE      SP3,UUCCODE    * code (priority or cancellation)
          MOVE      ZERO,UUCNUMB   * number in period (for cancellation),number
.                                  * in list (for priorities)
.
          BRANCH    LSTAT,UUDC9999,UUDC9999,UUDC9999,UUDC9999:
                          UUDC9999,UUDC2000,UUDC9999,UUDC2000
          GOTO      UUDC9999
.
.         Cancellation reason
.
UUDC2000  MATCH     DRGFDTE,WMDATE4
          GOTO      UUDC9999 IF LESS
.
          MATCH     WMDATE4,DRGTDTE
          GOTO      UUDC9999 IF LESS
.
          MATCH     SP3,WMREMOVE
          GOTO      UUDC9999 IF EQUAL
.
          MOVE      WMREMOVE,UUCCODE
          MOVE      ONE,UUCNUMB
.
          PACK      KEY21,CSTPER,WMUNIT,WMDOCTOR,WMPTY,UUCCODE
          CALL      RDUDCA1
          BRANCH    OVRCD,UUDC4000
          ADD       UUCNUMB,WTUCNUMB
          CALL      UPUDCA1
          GOTO      UUDC9999
.
UUDC4000  MOVE      CSTPER,WTUCDATE
          MOVE      WMUNIT,WTUCUNIT
          MOVE      WMDOCTOR,WTUCDOCT
          MOVE      WMPTY,WTUCPRTY
          MOVE      UUCCODE,WTUCCCOD
          MOVE      UUCNUMB,WTUCNUMB
          CALL      WRUDCA1
.
UUDC9999  RETURN
+
.**********************************************************************
.*                         UUNS0000                                   *
.*                   Update the WATUNSFD file                         *
.*   This routine was checked by Bill Dew and it works, amazing       *
.**********************************************************************
.
UUNS0000  MOVE      ZERO,UUNRNG1       * no. of pats waiting rng 1     
          MOVE      ZERO,UUNRNG2       * no. of pats waiting rng 2     
          MOVE      ZERO,UUNRNG3       * no. of pats waiting rng 3     
          MOVE      ZERO,UUNRNG4       * no. of pats waiting rng 4     
          MOVE      ZERO,UUNRNG5       * no. of pats waiting rng 5     
          MOVE      ZERO,UUNRNG6       * no. of pats waiting rng 6     
          MOVE      ZERO,CALDAYS       * Zero number of waiting days
.        
.         Currently on waiting list status = 1, 2 & 3              
.         
          BRANCH    LSTAT,UUNS1000,UUNS1000,UUNS1000
          IF        WTCNWCOW = ONE
            BRANCH    LSTAT,UUNS1000,UUNS1000    * on W/L until stat=7or8
          ENDIF
          GOTO      UUNS9999
.
.         Find out how long the person has been on the waiting list
.
UUNS1000  CALL      CALC0000
          CALL      CIPS0000                * see if procedure suspended
.
.         On waiting list for less than day range 1
.
          COMPARE   WTCNMRG1,CALDAYS
          GOTO      UUNS1200 IF NOT LESS
          MOVE      ONE,UUNRNG1
          GOTO      UUNS5000
.       
.         On waiting list for less than or equal to day range 2, and
.         greater than or equal to day range 1                   
.
UUNS1200  COMPARE   CALDAYS,WTCNMRG2
          GOTO      UUNS2000 IF LESS
.
          MOVE      ONE,UUNRNG2
          GOTO      UUNS5000
.       
.         On waiting list for less than or equal to day range 3, and
.         greater than day range 2                   
.
UUNS2000  COMPARE   CALDAYS,WTCNMRG3
          GOTO      UUNS2500 IF LESS
.
          MOVE      ONE,UUNRNG3
          GOTO      UUNS5000
.       
.         On waiting list for less than or equal to day range 4, and
.         greater than day range 3                   
.
UUNS2500  COMPARE   CALDAYS,WTCNMRG4
          GOTO      UUNS3000 IF LESS
.
          MOVE      ONE,UUNRNG4
          GOTO      UUNS5000
.       
.         On waiting list for less than or equal to day range 5, and
.         greater than day range 4                   
.
UUNS3000  COMPARE   CALDAYS,WTCNMRG5
          GOTO      UUNS3500 IF LESS
.
          MOVE      ONE,UUNRNG5
          GOTO      UUNS5000
.     
.         On waiting list for greater than day range 5
.
UUNS3500  MOVE      ONE,UUNRNG6
.       
UUNS5000
          PACK      KEY18,CSTPER,WMUNIT,WMDOCTOR,WMPTY
          CALL      RDUNSA1
          BRANCH    OVRCD,UUNS6000 
          CALL      PCAT0000           * increment daycase or inpatient counter
          ADD       UUNRNG1,WTUNRNG1
          ADD       UUNRNG2,WTUNRNG2
          ADD       UUNRNG3,WTUNRNG3
          ADD       UUNRNG4,WTUNRNG4
          ADD       UUNRNG5,WTUNRNG5
          ADD       UUNRNG6,WTUNRNG6
          CALL      UPUNSA1
          GOTO      UUNS9999 
.
UUNS6000  MOVE      CSTPER,WTUNDATE
          MOVE      WMUNIT,WTUNUNIT
          MOVE      WMDOCTOR,WTUNDOCT
          MOVE      WMPTY,WTUNPRTY
.
          MOVE      ZERO,WTUNDYCS
          MOVE      ZERO,WTUNINPT
          CALL      PCAT0000           * increment daycase or inpatient counter
.
          MOVE      UUNRNG1,WTUNRNG1
          MOVE      UUNRNG2,WTUNRNG2
          MOVE      UUNRNG3,WTUNRNG3
          MOVE      UUNRNG4,WTUNRNG4
          MOVE      UUNRNG5,WTUNRNG5
          MOVE      UUNRNG6,WTUNRNG6
          CALL      WRUNSA1
UUNS9999  RETURN
+
.******************************************************************************
.                                 PCAT0000
.    Update number of daycases or inpatients
.    A record tagged as a day case patient by having a 2 on the 1st indicator
.    of the patient category WTWMCLSS from wattr1af.  Therefore a inpatient
.    patient category with 1st indicator of NOT 2.
.******************************************************************************
PCAT0000
          PACK      KEY5,ANSP,SP1,WTWMCLSS,SP5
          CALL      RDCODE1            * get 2nd indicator
.
          MATCH     "2",TCINDC1        * test if daycase
          GOTO      PCAT2222 IF NOT EQUAL
          ADD       ONE,WTUNDYCS       * increment day case counter
          GOTO      PCAT9999
PCAT2222
          ADD       ONE,WTUNINPT       * increment the inpatient counter
PCAT9999  RETURN
+
.**********************************************************************
.*                         UTMA0000                                   *
.*                   Update the WATTMAFD file                         *
.**********************************************************************
.
UTMA0000  MOVE      ZERO,CHKNO
          MOVE      ZERO,COUNT
          MOVE      ZERO,UTMRNG1     * no. on waiting list rng 1
          MOVE      ZERO,UTMRNG2     * no. on waiting list rng 1 < rng 2
          MOVE      ZERO,UTMRNG3     * no. on waiting list rng 2 < rng 3
          MOVE      ZERO,UTMRNG4     * no. on waiting list rng 3 < rng 4
          MOVE      ZERO,UTMRNG5     * no. on waiting list rng 4 < rng 5
          MOVE      ZERO,UTMRNG6     * no. on waiting list rng 5 < rng 6
          MOVE      ZERO,UTMRNG7     * no. on waiting list > rng 6
.
.         Currently on waiting list status = 1, 2 & 3              
.         
          BRANCH    LSTAT,UTMA1000,UTMA1000,UTMA1000
          IF        WTCNWCOW = ONE
            BRANCH    LSTAT,UTMA1000,UTMA1000    * on W/L until stat=7or8
          ENDIF
          GOTO      UTMA9999
.
.         Find out how long the person has been on the waiting list
.
UTMA1000  CALL      CALC0000
          CALL      CIPS0000                * see if procedure suspended
.
.         On waiting list for less than day range 1
.
          COMPARE   WTCNTRG1,CALDAYS
          GOTO      UTMA1500 IF NOT LESS
          MOVE      ONE,UTMRNG1
          GOTO      UTMA5000
.
.         On waiting list for less than or equal to day range 2
.
UTMA1500  COMPARE   CALDAYS,WTCNTRG2
          GOTO      UTMA2000 IF LESS
          MOVE      ONE,UTMRNG2
          GOTO      UTMA5000
.
.         On waiting list for less than or equal to day range 3
.
UTMA2000  COMPARE   CALDAYS,WTCNTRG3
          GOTO      UTMA2500 IF LESS
          MOVE      ONE,UTMRNG3
          GOTO      UTMA5000
.
.         On waiting list for less than or equal to day range 4
.
UTMA2500  COMPARE   CALDAYS,WTCNTRG4
          GOTO      UTMA3000 IF LESS
          MOVE      ONE,UTMRNG4
          GOTO      UTMA5000
.       
.         On waiting list for less than or equal to day range 5
.
UTMA3000  COMPARE   CALDAYS,WTCNTRG5
          GOTO      UTMA3500 IF LESS
          MOVE      ONE,UTMRNG5
          GOTO      UTMA5000
.      
.         On waiting list for less than or equal to day range 6
.
UTMA3500  COMPARE   CALDAYS,WTCNTRG6
          GOTO      UTMA4000 IF LESS
          MOVE      ONE,UTMRNG6
          GOTO      UTMA5000
.       
.         On waiting list for greater than day range 7
.
UTMA4000  MOVE      ONE,UTMRNG7
.
UTMA5000  PACK      KEY15,CSTPER,WMCODE
          CALL      RDTMAA1
          BRANCH    OVRCD,UTMA6000
.
.         Current max greater than previous max ?
.
          COMPARE   CALDAYS,WTTMMAX    
          GOTO      UTMA5500 IF NOT LESS
          MOVE      CALDAYS,WTTMMAX
.
UTMA5500  ADD       UTMRNG1,WTTMRNG1
          ADD       UTMRNG2,WTTMRNG2
          ADD       UTMRNG3,WTTMRNG3
          ADD       UTMRNG4,WTTMRNG4
          ADD       UTMRNG5,WTTMRNG5
          ADD       UTMRNG6,WTTMRNG6
          ADD       UTMRNG7,WTTMRNG7
          CALL      UPTMAA1
          GOTO      UTMA7000
.
UTMA6000  MOVE      CSTPER,WTTMDATE
          MOVE      WMCODE,WTTMPROC
          MOVE      UTMRNG1,WTTMRNG1
          MOVE      UTMRNG2,WTTMRNG2
          MOVE      UTMRNG3,WTTMRNG3
          MOVE      UTMRNG4,WTTMRNG4
          MOVE      UTMRNG5,WTTMRNG5
          MOVE      UTMRNG6,WTTMRNG6
          MOVE      UTMRNG7,WTTMRNG7
          MOVE      CALDAYS,WTTMMAX
          CALL      WRTMAA1
.
.         Write to temporary files for median & mean figures
.
UTMA7000  PACK      KEY9,WTTMPROC
          CALL      RDTMP1
          BRANCH    OVRCD,UTMA7500
.
          ADD       CALDAYS,X1SUM
          ADD       ONE,X1NUM
          CALL      UPTMP1
          GOTO      UTMA8000
.
UTMA7500  MOVE      WTTMPROC,X1PROC
          MOVE      CALDAYS,X1SUM
          MOVE      ONE,X1NUM
          CALL      WRTMP1
.
.         Temporary file B is always a write as it allows for duplicate keys
.
UTMA8000  MOVE      WTTMPROC,X2PROC
          MOVE      CALDAYS,X2DAYS
          CALL      WRTMP2
.
UTMA9999  RETURN
+
.*******************************************************************************
.                                 UWTA0000
.    Update movement analysis file.
.    The WATWTAFD contains similar values to thoses calculated for WATUDSFD
.    and WATUDCFD.   The values WTWTOPEN, WTWTADD, WTWTBOOK, WTWTADMT
.    are calculated using same routine as UUDS (old version before enhancements)
.    and WTWTCANL = WTWTOTH + WTWTPAT + WTWTHOSP is incorporated into UUDC
.
.    WTWTMAX  = The highest number of wait days in selected period date.
.    WTWTDSCH = Number of discharges of patients admitted from waiting list 
.    determine if cancelled by patient, Hospital and other.
.               
.    CALL    UWTA7777 to update mean
.    WTWTMEAN = Is mean number of days a patient has been on waiting list
.               MEAN = total days for period / ( WTWTADD+WTWTOPEN )
.    The mean is calculated from CALDAYS which is determined in UTMA0000
.    Note this routine only calculates CALDAYS if wmstat 1 2 3.
.
.    Created 29/08/1990 Bill Dew
.    Note : I know what I have done is not my best work, thats because I
.           just dont give a shit anymore.
.*******************************************************************************
UWTA0000  MOVE      ZERO,UUSADD      * flag additions to waiting list 
          MOVE      ZERO,UUSADMT     * flag admissions from waiting list 
          MOVE      ZERO,UUSLAST     * flag pats on list at start of period
          MOVE      ZERO,UUSBOOK     * flag patients booked or pre admitted 
          MOVE      ZERO,UUSDISC     * discharged patient flag
.
          MOVE      ZERO,UUCNUMB       * flag for cancelled patient
          MOVE      ZERO,CANCPAT
          MOVE      ZERO,CANCOTH
          MOVE      ZERO,CANCHOSP
          MOVE      ONE,ADMTFLAG       * set patient not admitted in period
.
.         Calculate the number of additions to the w/list during the period
.
          MATCH     DRGFDTE,WMDATE1
          GOTO      UWTA0055 IF EQUAL
          GOTO      UWTA1000 IF LESS
.
          MATCH     WMDATE1,DRGTDTE
          GOTO      UWTA0055 IF EQUAL
          GOTO      UWTA1000 IF LESS
UWTA0055
          MOVE      ONE,UUSADD
.        
.         Calculate the number of admissions to the w/list during the period
.
UWTA1000  BRANCH    LSTAT,UWTA2000,UWTA2000,UWTA2000,UWTA1500:
                          UWTA1500,UWTA2000,UWTA1500,UWTA2000
          GOTO      UWTA2000
.
UWTA1500  MOVE      WMBOOK,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,UWTA2000
.
          MATCH     FADMDTE,ADATE      * test adm date > start period
          GOTO      UWTA2000 IF LESS
.
          MATCH     ADATE,TADMDTE      * test adm date < end period
          GOTO      UWTA2000 IF LESS
          MOVE      ONE,UUSADMT
          MOVE      ZERO,ADMTFLAG      * signal patient admitted in period
.         
.         Calculate the number of patients on w/list at start of the period 
.
UWTA2000  BRANCH    FSTAT,UWTA2500,UWTA2500,UWTA2500,UWTA3000:
                          UWTA3000,UWTA3000,UWTA3000,UWTA3000
          GOTO      UWTA3000
.
UWTA2500  MATCH     DRGFDTE,WMDATE1
          GOTO      UWTA3000 IF NOT LESS
.
          MOVE      ONE,UUSLAST
.         
.         Calculate the number of patients who are currently booked or pre-adm
.
UWTA3000  BRANCH    LSTAT,UWTA5000,UWTA3500,UWTA3500,UWTA5000:
                          UWTA3666,UWTA4000,UWTA5000,UWTA4000
          GOTO      UWTA5000
UWTA3500
          MOVE      ONE,UUSBOOK
          GOTO      UWTA5000
UWTA3666
          BRANCH    ADMTFLAG,UWTA5000  * check patient was admitted in period
          MOVE      WMBOOK,KEY8        * get discharge date and check
          CALL      RDDSCH1
          BRANCH    OVRCD,UWTA5000
          MATCH     FADMDTE,DDATE      * test discharge date > start period date
          GOTO      UWTA5000 IF LESS
          MATCH     DDATE,TADMDTE      * test discharge date < end period date
          GOTO      UWTA5000 IF LESS
          MOVE      ONE,UUSDISC        * set the discharge flag
.
.----- Do cancellation stats -----
.
UWTA4000  MATCH     DRGFDTE,WMDATE4    * test cancelled date within period
          GOTO      UWTA5000 IF LESS
          MATCH     WMDATE4,DRGTDTE
          GOTO      UWTA5000 IF LESS
.
          MATCH     SP3,WMREMOVE
          GOTO      UWTA5000 IF EQUAL
.
          MOVE      ONE,UUCNUMB
          PACK      KEY5,CODEBC,WMREMOVE,SP5
          CALL      RDCODE1
          BRANCH    OVRCD,UWTA4222
          MATCH     ANSP,TCINDC2       * test for cancelled by patient
          GOTO      UWTA4111 IF NOT EQUAL
          MOVE      ONE,CANCPAT
          GOTO      UWTA5000
UWTA4111
          MATCH     ANSH,TCINDC2       * test cancelled by hospital
          GOTO      UWTA4222 IF NOT EQUAL
          MOVE      ONE,CANCHOSP
          GOTO      UWTA5000
UWTA4222
          MOVE      ONE,CANCOTH
.
UWTA5000
.    The following operation adds up all the flags that determined whether
.    patient was added, booked, admitted, removed or discharged and should
.    none of these be set then dont write a record
.
          MOVE      UUSADD,FORM1
          ADD       UUSLAST,FORM1
          ADD       UUSADMT,FORM1
          ADD       UUSBOOK,FORM1
          ADD       UUSDISC,FORM1
          ADD       UUCNUMB,FORM1
          COMPARE   ZERO,FORM1
          GOTO      UWTA9999 IF EQUAL
.
          MOVE      ZERO,CALDAYS
          CALL      CALC0000         * calculate days on list into CALDAYS
          CALL      CIPS0000                * see if procedure suspended
.
          PACK      KEY24,CSTPER,WMCODE,WMDOCTOR,WMUNIT
          CALL      RDWTWTA1           * get existing record if any
          BRANCH    OVRCD,UWTA6666
.
          ADD       UUSLAST,WTWTOPEN
          ADD       UUSADD,WTWTADD
          ADD       UUSADMT,WTWTADMT
          ADD       UUSBOOK,WTWTBOOK
          ADD       CALDAYS,WTWTTDAY   * tally total number of days
          ADD       UUCNUMB,WTWTCANL
          ADD       UUSDISC,WTWTDSCH
          ADD       CANCPAT,WTWTPAT
          ADD       CANCOTH,WTWTOTH
          ADD       CANCHOSP,WTWTHOSP
.
          COMPARE   WTWTMAX,CALDAYS    * test for maximum days
          GOTO      UWTA5555 IF LESS
          MOVE      CALDAYS,WTWTMAX
UWTA5555
          CALL      UPWTWTA1           * update movement analysis file
          GOTO      UWTA9999
UWTA6666
          UNPACK    KEY24,WTWTDATE,WTWTPROC,WTWTDOCT,WTWTUNIT
          MOVE      CALDAYS,WTWTTDAY
          MOVE      CALDAYS,WTWTMAX
          MOVE      UUSADD,WTWTADD
          MOVE      UUSADMT,WTWTADMT
          MOVE      UUSLAST,WTWTOPEN
          MOVE      UUSBOOK,WTWTBOOK
          MOVE      UUSDISC,WTWTDSCH
          MOVE      UUCNUMB,WTWTCANL
          MOVE      CANCPAT,WTWTPAT
          MOVE      CANCOTH,WTWTOTH
          MOVE      CANCHOSP,WTWTHOSP
          CALL      WRWTWTA1           * write movement analysis record
          GOTO      UWTA9999
.
.------------------------------------------------------------------------------
.
UWTA7777
          PACK      KEY24,CSTPER,SP30
          CALL      RSWTWTA1
UWTA8888
          CALL      RKWTWTA1
          BRANCH    OVRCD,UWTA9999
          MATCH     CSTPER,WTWTDATE
          GOTO      UWTA9999 IF NOT EQUAL
.
          MOVE      WTWTTDAY,KEY8      * save total number of days
          MOVE      WTWTADD,FORM8
          ADD       WTWTOPEN,FORM8
          DIV       FORM8,WTWTTDAY
          MOVE      WTWTTDAY,WTWTMEAN
          MOVE      KEY8,WTWTTDAY      * reload the saved number of days
          CALL      UPWTWTA1           * update with mean
          GOTO      UWTA8888
.
UWTA9999  RETURN
.*******************************************************************************
.                                 UUPC0000
.    This routine updates the Unit/doctor priority changes files by reading
.    records from watcataf and getting details from wattr1af tally 
.    the unit/doctor priority code changes into watupcaf.
.    Created by Bill Dew 09/07/1990
.*******************************************************************************
UUPC0000  DISPLAY   *P1:24,*EL,*P19:24,*V2LON,"** ",*BLINKON:
                    "Updating Unit/Doctor priority changes",*HOFF,*V2LON," **";
.
          PACK      KEY29,DRGFDTE,SP30 * start at start of period date
          CALL      RSWTCAT1
.
UUPC2222  CALL      RKWTCAT1           * read category change file
          BRANCH    OVRCD,UUPC9999
.
          MATCH     WTCAEDAT,DRGTDTE   * test within date range of period
          GOTO      UUPC9999 IF LESS
          MATCH     WTCACATF,CODETP    * match category for priority only
          GOTO      UUPC2222 IF NOT EQUAL
.
          PACK      KEY19,WTCAURNO,WTCAPROC,WTCAPCNT
          CALL      RDTREA1            * get treatment unit and doctor info
          BRANCH    OVRCD,UUPC2222 
.
          PACK      KEY21,CSTPER,WMUNIT,WMDOCTOR,WTCACODF,WTCACODT,SP30
          CALL      RDWTUPC1           * check if record exist
          BRANCH    OVRCD,UUPC5555     * doesnt exist write it
.
          ADD       ONE,WTUPNUMB       * increment the record counter
          CALL      UPWTUPC1           * update watupcaf
          GOTO      UUPC2222
.
UUPC5555  MOVE      CSTPER,WTUPDATE    * set period date
          MOVE      WMUNIT,WTUPUNIT    * set unit code
          MOVE      WMDOCTOR,WTUPDOCT  * set doctor code
          MOVE      WTCACODF,WTUPOPTY  * set old priority code
          MOVE      WTCACODT,WTUPNPTY  * set new prioriy code
          MOVE      ONE,WTUPNUMB       * set the record counter
          CALL      WRWTUPC1           * write new record to watupcaf
          GOTO      UUPC2222
.
UUPC9999  RETURN
+
.**********************************************************************
.*                         PTMP0000                                   *
.*             Update median & mean for the wattmaaf file             *
.**********************************************************************
.
PTMP0000  
.         Temporary file A calculates the mean figure, while 
.         temporary file B calculates the median figure
.
          DISPLAY   *P1:24,*EL,*P27:24,*V2LON,"*** Updating Statistics ***":
                    *HOFF,*P1:24,*EL,*P28:24,WTCNTPDS," Code : ";
.
          MOVE      SP10,KEY9
          CALL      RDSTMP1
PTMP2000  CALL      RDKTMP1
          BRANCH    OVRCD,PTMP9999
.
          DISPLAY   *P45:24,*V2LON,X1PROC;
.
          COMPARE   ONE,X1NUM
          GOTO      PTMP3000 IF NOT EQUAL
.
          MOVE      X1SUM,X2DAYS
          GOTO      PTMP6000
.
PTMP3000  MOVE      X1NUM,COUNT       * find out whether a odd or even number
          DIV       TWO,COUNT         
          MOVE      X1NUM,ODDNO       * if the following commands find ODDNO
          MOVE      COUNT,CHKNO       * to = 1, its an odd number.
          MULT      TWO,CHKNO         * if it = 0, its an even number.
          SUB       CHKNO,ODDNO         
.
          PACK      KEY13,X1PROC,SP4
          CALL      RDSTMP2
PTMP4000  CALL      RDKTMP2
.
          SUB       ONE,COUNT
          COMPARE   ZERO,COUNT
          GOTO      PTMP4000 IF NOT EQUAL
.
          BRANCH    ODDNO,PTMP5000      * branch depending on odd or even number
.
.         Even Number, so find the two middle figures from the temp file
.                      add them together, then divide by 2 to give you
.                      the median figure
.
          MOVE      X2DAYS,SAVDS2       
          CALL      RDKTMP2
          ADD       SAVDS2,X2DAYS
          DIV       TWO,X2DAYS
          GOTO      PTMP6000
.
.         Odd Number, so read the next record to give you the median figure
.
PTMP5000  CALL      RDKTMP2            
.
.         Calculate the mean number of days
.
PTMP6000  DIV       X1NUM,X1SUM         
.
.         Update the wattmaaf file
.
          PACK      KEY15,CSTPER,X1PROC
          CALL      RDTMAA1
          BRANCH    OVRCD,PTMP7000
          MOVE      X1SUM,WTTMMEAN
          MOVE      X2DAYS,WTTMMEDN
          CALL      UPTMAA1
          GOTO      PTMP2000
.
PTMP7000  MOVE      CSTPER,WTTMDATE
          MOVE      X1PROC,WTTMPROC
          MOVE      X1SUM,WTTMMEAN
          MOVE      X2DAYS,WTTMMEDN
          CALL      WRTMAA1
          GOTO      PTMP2000
.
PTMP9999  RETURN
+
.**********************************************************************
.*                         CALC0000                                   *
.*             Calculate how long on waiting list                     *
.    Modified 03/09/1990 Bill Dew 
.    Allow calculations of date on list for admitted, discharged and removed
.**********************************************************************
CALC0000  MOVE      ZERO,CALDAYS
.
.    If status is 1 2 3 proceed as normal using the end period date range
.    else status 4 5 admitted or discharged get the admission date
.    else status 6 removed  use WMDATE4
.
          BRANCH    LSTAT,CALC1111,CALC1111,CALC1111,CALC2222:
                          CALC2222,CALC3333,CALC2222,CALC3333
.
CALC1111  DAYSEP    WMDATE1,DRGTDTE,CALDAYS
          GOTO      CALC9999
.
CALC2222  MOVE      WMBOOK,KEY8        * get adm date for those discharge or
          CALL      RDMISS1            * removed
          BRANCH    OVRCD,CALC1111
          DAYSEP    WMDATE1,ADATE,CALDAYS
          GOTO      CALC9999
.
CALC3333  DAYSEP    WMDATE1,WMDATE4,CALDAYS
.
CALC9999  RETURN
+
.*********************************************************************
.*                  UCSU0000                    Called by : WTRE1000 *
.*        Update values on WATCSUFD for the period                   *
.*********************************************************************
UCSU0000  CALL      VCSU0000                * clear all watcsu stats variables
          MOVE      CSTPER,WTCSDATE         * the period
          MOVE      WMUNIT,WTCSUNIT         * the unit
          MOVE      WMPTY,WTCSPRTY          * the priority
.
          PACK      KEY5,ANSW,ANSU,WTCSUNIT * unit
          CALL      RDCODE1
          BRANCH    OVRCD,UCSU9999          * invalid unit
.
          PACK      KEY5,ANST,ANSP,WTCSPRTY * priority
          CALL      RDCODE1
          BRANCH    OVRCD,UCSU9999          * invalid priority
.
.         get latest admission type/patient class for the patient - WTCSATYP
.
          MOVE      WMPCAT,WTCSATYP         * set default admission type
          COMPARE   THREE,WMSTAT
          GOTO      UCSU0200 IF NOT EQUAL   * not pre-admitted
.
          MOVE      WMBOOK,KEY8             * booking number is key
          CALL      RDMISS1                 * read admission file
          BRANCH    OVRCD,UCSU0400          * invalid booking number
.
          MOVE      ATYPE,WTCSATYP          * set admission type
          GOTO      UCSU0400
.
.         patient is not pre-admitted - get admission type from transfer file
.
UCSU0200  PACK      KEY30,WMBOOK,TADMDTE,Z8,Z8,Z8
          CALL      RDSTRAN2                * position at end of period 
          CALL      RDPTRAN2                * previous read
          BRANCH    OVRCD,UCSU0400          * no data
.
          MATCH     WMBOOK,TADMN
          GOTO      UCSU0400 IF NOT EQUAL   * invalid booking number
.
          MOVE      TATYPE,WTCSATYP         * admission type
.
.         get latest admission class/patient category for the patient - WTCSCLSS
.
UCSU0400  MOVE      WTWMCLSS,WTCSCLSS       * default to WL file value
          MOVE      WMBOOK,KEY8             * booking number is key
          CALL      RDMISS1                 * read admission file
          BRANCH    OVRCD,UCSU0500          * no admission record, try booking 
.
          MOVE      ACLSS,WTCSCLSS          * use the admission file value
          GOTO      UCSU1000
.
UCSU0500  CALL      RDBKREC1                * read booking file
          BRANCH    OVRCD,UCSU1000          * no booking value, leave as WL
.
          MOVE      BKRECLSS,WTCSCLSS       * use the booking file value
.
.         validate admission type, admission classification
.
UCSU1000  PACK      KEY5,ANSA,SP1,WTCSATYP  * admission type
          CALL      RDCODE1
          BRANCH    OVRCD,UCSU9999          * invalid admission type
.
          PACK      KEY5,ANSP,SP1,WTCSCLSS  * admission classification
          CALL      RDCODE1
          BRANCH    OVRCD,UCSU9999          * invalid admission classification
.
.         Now the fun part, getting all the stats values.  I really think Ledge
.         should've given this to Deon the Stats King to do.
.
          PACK      KEY18,WTCSDATE,WTCSUNIT,WTCSPRTY,WTCSATYP,WTCSCLSS
          CALL      RDWTCSU1                * read the file
          MOVE      OVRCD,CEXIT             * save the ovrcd value
.
. ---------------------------------------------------------
. ------- get the statuses at the end of the period -------
. ---------------------------------------------------------
.
          BRANCH    WMSTAT,UCSU1100,UCSU1200,UCSU1200,UCSU1300:
                           UCSU1500,UCSU1500,UCSU1300,UCSU1500
          GOTO      UCSU1500                * not unshed, sched, pre-ad, perf.
.
UCSU1100  ADD       ONE,WTCSWLST            * add to number on waiting list
          GOTO      UCSU1500
.
UCSU1200  ADD       ONE,WTCSBOOK            * add to number booked
          GOTO      UCSU1500
.
UCSU1300  ADD       ONE,WTCSCURA            * add to number admissions
.
. ------- see if added to list during period -------
.
UCSU1500  MATCH     DRGFDTE,WMDATE1
          GOTO      UCSU2000 IF LESS        * added before period start date
.
          MATCH     WMDATE1,DRGTDTE
          GOTO      UCSU2000 IF LESS        * added after period end date
.
. ------------------------------------------------
. ------- have someone added during period -------
. ------------------------------------------------
.         have three values to workout                         (status changes)
.           WTCSADWL - no. added to W/L during period          ( -> 1,2,3,4,5)
.           WTCSWLBK - no. added to W/L & booked during period ( -> 2,3)
.           WTCSWLAD - no. added to W/L & admit. during period ( -> 4,5,7)
.
          ADD       ONE,WTCSADWL            * add to added to WL during period
.
          BRANCH    WMSTAT,UCSU9000,UCSU1600,UCSU1600,UCSU1700:
                           UCSU1700,UCSU9000,UCSU1700,UCSU9000
          GOTO      UCSU9000
.
.         added to W/L and booked during the period (scheduled/pre-admitted)
.
UCSU1600  ADD       ONE,WTCSWLBK            * add to amount
          GOTO      UCSU9000
.
.         added to W/L and admitted during the period (admitted/discharged)
.
UCSU1700  ADD       ONE,WTCSWLAD            * add to amount
          GOTO      UCSU9000
.
. -----------------------------------------------------------
. ------- have someone who wasn't added during period -------
. -----------------------------------------------------------
.         have four possible values to workout                (status changes)
.           WTCSADCN - no. bookings cancelled during period   (5,4,3,2 -> 1)
.           WTCSBKED - no. booked during period               (1       -> 2,3)
.           WTCSDADM - no. booked & admitted during period    (1       -> 4,5,7)
.           WTCSADMT - no. admit. from booking during period  (2,3     -> 4,5,7)
.
UCSU2000  BRANCH    WMSTAT,UCSU2100,UCSU2200,UCSU2200,UCSU2400:
                           UCSU2400,UCSU9000,UCSU2400,UCSU9000
          GOTO      UCSU9000
.
. ------- current status is unscheduled -------
.
UCSU2100  PACK      KEY29,WMURNO,WMCODE,WMCNT,ANSB,ANSC,SP8
          CALL      RSWTCAT2                * positional read
.
          CALL      RKWTCAT2                * next read
          BRANCH    OVRCD,UCSU9000          * not cancelled
.
          PACK      KEY21,WTCAURNO,WTCAPROC,WTCAPCNT,WTCACATF
          MATCH     KEY21,KEY29
          GOTO      UCSU9000 IF NOT EQUAL   * no cancellation records
.
.         see if the date lies in the period
.
          MATCH     DRGFDTE,WTCAEDAT
          GOTO      UCSU9000 IF LESS        * cancelled before period start date
.
          MATCH     WTCAEDAT,DRGTDTE
          GOTO      UCSU9000 IF LESS        * cancelled after period end date
.
          ADD       ONE,WTCSADCN            * add to number cancelled
          GOTO      UCSU9000
.
. ------- current status is scheduled or pre-admitted -------
.
UCSU2200  MOVE      WMBOOK,KEY8             * booking number is key
          CALL      RDBKREC1                * see if have a booking record
          BRANCH    OVRCD,UCSU9000          * no booking record
.
          COMPARE   TWO,BKRESTAT
          GOTO      UCSU9000 IF NOT LESS    * status incorrect
.
.         check the date on the booking record, if it lies between the period
.         dates, means they were booked during the period
.
          MATCH     DRGFDTE,BKREADAT
          GOTO      UCSU9000 IF LESS        * booking made before start date
.
          MATCH     BKREADAT,DRGTDTE
          GOTO      UCSU9000 IF LESS        * booking made after end date
.
          ADD       ONE,WTCSBKED            * add to number booked during period
          GOTO      UCSU9000
.
. ------- current status is admitted or discharged -------
.
UCSU2400  MOVE      WMBOOK,KEY8             * booking number is key
          CALL      RDMISS1                 * see if have an admission record
          BRANCH    OVRCD,UCSU9000          * no admission record
.
          COMPARE   ONE,ASTAT
          GOTO      UCSU9000 IF EQUAL       * status incorrect
.
.         check the date on the admission record, if it lies between the period
.         dates, means they were admitted during the period
.
          MATCH     FADMDTE,ADATE
          GOTO      UCSU9000 IF LESS        * admitted before period start date
.
          MATCH     ADATE,TADMDTE
          GOTO      UCSU9000 IF LESS        * admitted after period end date
.
.         were admitted during period, now see when booked
.
          MOVE      WMBOOK,KEY8             * booking number is key
          CALL      RDBKREC1                * see if have a booking record
          BRANCH    OVRCD,UCSU9000          * no booking record
.
          COMPARE   TWO,BKRESTAT
          GOTO      UCSU9000 IF EQUAL       * status incorrect
.
.         check the date on the booking record, if it lies between the period
.         dates, means they were booked during the period
.
          MATCH     DRGFDTE,BKREADAT
          GOTO      UCSU2500 IF LESS        * booking made before per start date
.
          MATCH     BKREADAT,DRGTDTE
          GOTO      UCSU2500 IF LESS        * booking made after period end date
.
.         patient went from unscheduled to admitted during period
.
          ADD       ONE,WTCSDADM            * add to # from unscheduled
          GOTO      UCSU9000
.
.         patient went from scheduled/pre-adm to admitted during period
.
UCSU2500  ADD       ONE,WTCSADMT            * add to # from scheduled
.
.         all the stats are calculated for this patient
.
UCSU9000  BRANCH    CEXIT,UCSU9500          * write new record
.
          CALL      UPWTCSU1                * update record
          GOTO      UCSU9999
.
UCSU9500  CALL      WRWTCSU1                * write new record
.
UCSU9999  RETURN
+
.*********************************************************************
.*                  USWS0000                    Called by : WTRE1000 *
.*        Update the watswsaf file                                   *
.*********************************************************************
USWS0000  MOVE      ZERO,UUNRNG1       * no. of pats waiting rng 1     
          MOVE      ZERO,UUNRNG2       * no. of pats waiting rng 2     
          MOVE      ZERO,UUNRNG3       * no. of pats waiting rng 3     
          MOVE      ZERO,UUNRNG4       * no. of pats waiting rng 4     
          MOVE      ZERO,UUNRNG5       * no. of pats waiting rng 5     
          MOVE      ZERO,UUNRNG6       * no. of pats waiting rng 6     
          MOVE      ZERO,CALDAYS       * Zero number of waiting days
.        
.         Currently on waiting list status = 1, 2 & 3              
.         
          BRANCH    WMSTAT,USWS1000,USWS1000,USWS1000
          IF        WTCNWCOW = ONE
            BRANCH    WMSTAT,USWS1000,USWS1000    * on W/L until stat=7or8
          ENDIF
          GOTO      USWS9999
.
.         Find out how long the person has been on the waiting list
.
USWS1000  CALL      CALC0000
          CALL      CIPS0000                * see if procedure suspended
.
.         On waiting list for less than day range 1
.
          COMPARE   WTCNMRG1,CALDAYS
          GOTO      USWS1200 IF NOT LESS
.
          MOVE      ONE,UUNRNG1
          GOTO      USWS5000
.       
.         On waiting list for less than or equal to day range 2, and
.         greater than or equal to day range 1                   
.
USWS1200  COMPARE   CALDAYS,WTCNMRG2
          GOTO      USWS2000 IF LESS
.
          MOVE      ONE,UUNRNG2
          GOTO      USWS5000
.       
.         On waiting list for less than or equal to day range 3, and
.         greater than day range 2                   
.
USWS2000  COMPARE   CALDAYS,WTCNMRG3
          GOTO      USWS2500 IF LESS
.
          MOVE      ONE,UUNRNG3
          GOTO      USWS5000
.       
.         On waiting list for less than or equal to day range 4, and
.         greater than day range 3                   
.
USWS2500  COMPARE   CALDAYS,WTCNMRG4
          GOTO      USWS3000 IF LESS
.
          MOVE      ONE,UUNRNG4
          GOTO      USWS5000
.       
.         On waiting list for less than or equal to day range 5, and
.         greater than day range 4                   
.
USWS3000  COMPARE   CALDAYS,WTCNMRG5
          GOTO      USWS3500 IF LESS
.
          MOVE      ONE,UUNRNG5
          GOTO      USWS5000
.     
.         On waiting list for greater than day range 5
.
USWS3500  MOVE      ONE,UUNRNG6
.       
.         have calculated values
.
USWS5000  PACK      KEY19,CSTPER,WMUNIT,WMPTY,WMPCAT,WTWMCLSS,WMSTAT
          CALL      RDWTSWS1
          BRANCH    OVRCD,USWS6000          * write a record 
.
          ADD       UUNRNG1,WTSWRNG1
          ADD       UUNRNG2,WTSWRNG2
          ADD       UUNRNG3,WTSWRNG3
          ADD       UUNRNG4,WTSWRNG4
          ADD       UUNRNG5,WTSWRNG5
          ADD       UUNRNG6,WTSWRNG6
.
          CALL      UPWTSWS1
          GOTO      USWS9999 
.
.         write a new record
.
USWS6000  MOVE      CSTPER,WTSWDATE         * period
          MOVE      WMUNIT,WTSWUNIT         * unit
          MOVE      WMPTY,WTSWPRTY          * priority
          MOVE      WMPCAT,WTSWATYP         * admission type
          MOVE      WTWMCLSS,WTSWCLSS       * admission class.
          MOVE      WMSTAT,WTSWSTAT         * WL status
.
          MOVE      UUNRNG1,WTSWRNG1
          MOVE      UUNRNG2,WTSWRNG2
          MOVE      UUNRNG3,WTSWRNG3
          MOVE      UUNRNG4,WTSWRNG4
          MOVE      UUNRNG5,WTSWRNG5
          MOVE      UUNRNG6,WTSWRNG6
.
          PACK      KEY19,WTSWDATE,WTSWUNIT,WTSWPRTY,WTSWATYP,WTSWCLSS,WTSWSTAT
          CALL      WRWTSWS1
.
USWS9999  RETURN
+
.*********************************************************************
.         check if procedure is suspended in the date range
.         if it is, subtract the number of days suspended from the
.         total amount of days
.*********************************************************************
CIPS0000  COMPARE   ONE,WTCNUSOP
          GOTO      CIPS9999 IF NOT EQUAL   * not using suspensions
.
. set the default dates
.
          MOVE      DRGFDTE,DATESTOP        * set end date as minimum
          MOVE      DRGTDTE,DATESTRT        * set from date as maximum
          MATCH     DATESTOP,CPTDATE
          IF        @LESS
            MOVE      CPTDATE,DATESTRT        * set from date to maximum
          ENDIF
.
          MOVE      ZERO,DAYS               * clear the days variable
          MOVE      ONE,EXIT                * set as invalid person
          PACK      KEY21,WMURNO,WMCODE,WMCNT,SP2
          CALL      RSWTSUS1
CIPS1000  CALL      RKWTSUS1
          BRANCH    OVRCD,CIPS5000          * not on suspension
          PACK      KEY19,WTSUURNO,WTSUCODE,WTSUCNT
          MATCH     KEY19,KEY21
          GOTO      CIPS5000 IF NOT EQUAL   * nto on suspension
.
. see if procedure is suspended within the period ranges
.
          MATCH     DRGFDTE,WTSUTDAT
          GOTO      CIPS1000 IF LESS        * susp to date < period from date
          MATCH     WTSUFDAT,DRGTDTE
          GOTO      CIPS1000 IF LESS        * period to date < susp from date
          MATCH     WTSUFDAT,CPTDATE
          GOTO      CIPS1000 IF LESS        * current date < from date
.
          MATCH     WTSUFDAT,WTSUTDAT
          GOTO      CIPS2000 IF NOT EQUAL   * susp from and to dates are different
.
          ADD       ONE,DAYS                * add one to suspension days
          GOTO      CIPS1000
.
. set the new from/to dates for suspension
.
CIPS2000  MOVE      ZERO,EXIT               * set as a valid person
.
          MATCH     DATESTRT,WTSUFDAT       * if susp from < start date 
          IF        @LESS
            MOVE      WTSUFDAT,DATESTRT
          ENDIF
.
          MATCH     WTSUTDAT,CPTDATE
          IF        @LESS
            MOVE      CPTDATE,WTSUTDAT        * set end date to current date
          ENDIF
.
          MATCH     WTSUTDAT,DATESTOP       * if susp to < to date
          IF        @LESS
            MOVE      WTSUTDAT,DATESTOP
          ENDIF
.
          MOVE      ZERO,EXIT               * set as a valid person
          GOTO      CIPS1000
.
CIPS5000  IF        EXIT = ZERO
            PROC      DURNDAYS                * returns DAYS.
          ENDIF
.
          IF        DAYS > ZERO
            SUB       DAYS,CALDAYS            * take off days on suspension
          ENDIF
.
CIPS9999  RETURN
+
.********************************************************************
.*                  DURNDAYS                   Called by : DATE0000 *
.*        Get the number of days between two dates                  *
.*        Para's  : DAYS          number of days suspened already   *
.*        Returns : DAYS          days between two dates            *
.********************************************************************
.
          DEFPROC   DURNDAYS
.
ENDDAY    FORM      3         * ending   date days
ENDYR     FORM      3         * ending   date year
ENDLEAP   FORM      1         * ending   date leap year
ENDCENT   FORM      2         * ending   date century
STRTDAY   FORM      3         * starting date days
STRTYR    FORM      3         * starting date year
STRTLEAP  FORM      1         * starting date leap year
STRTCENT  FORM      2         * starting date century
.
.         turn the starting date into julian date
.
          UNPACK    DATESTRT,CCENT,CYEAR,CMON,CDAY    * FROM date
          MOVE      CDAY,DD                 * set up day
          MOVE      CMON,MM                 *        month
          MOVE      CYEAR,YY                *        year
          MOVE      CCENT,CC                *        century
.
          CALL      DMYCON                  * julian day
          MOVE      JULDAY,STRTDAY          * starting julian day
          MOVE      JULYR,STRTYR            * starting julian year
          MOVE      JULCC,STRTCENT          * starting julian century
          MOVE      LEAPYR,STRTLEAP         * starting leap year flag
.
.         turn ending date into julian days
.
          UNPACK    DATESTOP,CCENT,CYEAR,CMON,CDAY  * TO date
          MOVE      CDAY,DD                 * set up day
          MOVE      CMON,MM                 *        month
          MOVE      CYEAR,YY                *        year
          MOVE      CCENT,CC                *        century
.
          CALL      DMYCON
          MOVE      JULDAY,ENDDAY           * ending julian day
          MOVE      JULYR,ENDYR             * ending julian year
          MOVE      JULCC,ENDCENT           * ending julian century
          MOVE      LEAPYR,ENDLEAP          * ending leap year
.
          MOVE      ZERO,DAYS               * clear the day difference
.
.         if the current and waiting years are the same, dont worry about 
.         allowing for current date being in the next year
.
          COMPARE   ENDYR,STRTYR            * check for the same year
          GOTO      CDAY2000 IF EQUAL       * same year - just sub dates
.
.         ending year after the starting year
.         idea is to add 365/366 to the starting julian day
.         to make it eg, the 369th day of the previous year
.         for the 4th of january
.
          MOVE      ENDYR,DAYS              * ending year
          SUB       STRTYR,DAYS             * get # years b/w dates
          MULT      "365",DAYS              * get # days b/w years of dates
          ADD       STRTLEAP,DAYS           * add the leap year days
          
CDAY2000  ADD       ENDDAY,DAYS             * days of end date
          SUB       STRTDAY,DAYS            * - days of start date
          ADD       ONE,DAYS                * add one to get inclusive
.
CDAY9999  ENDPROC
+
.*********************************************************************
.*                  VCSU0000                    Called by : UCSU0000 *
.*        Clear all stats variables for watcsuaf                     *
.*********************************************************************
VCSU0000  MOVE      ZERO,WTCSWLST           * clear file variables
          MOVE      ZERO,WTCSBOOK
          MOVE      ZERO,WTCSCURA
          MOVE      ZERO,WTCSADWL
          MOVE      ZERO,WTCSADCN
          MOVE      ZERO,WTCSADMT
          MOVE      ZERO,WTCSBKED
          MOVE      ZERO,WTCSDADM
          MOVE      ZERO,WTCSWLAD
          MOVE      ZERO,WTCSWLBK
.
VCSU9999  RETURN
+
.*********************************************************************
.         check if any data on file for period for watscuaf
.*********************************************************************
ESCU0000  COMPARE   ONE,WTCNUSOP
          GOTO      ESCU9999 IF NOT EQUAL   * not using suspensions
.
          PACK      KEY18,CSTPER,SP20
          CALL      RDWTSCU1
          CALL      RKWTSCU1
          BRANCH    OVRCD,ESCU9999
.
          MATCH     WTSCDATE,CSTPER
          GOTO      ESCU9999 IF NOT EQUAL
.
          MOVE      ONE,ALRDYD
.
ESCU9999  RETURN
+
.*********************************************************************
.         delete data for period from watscuaf
.*********************************************************************
CSCU0000  PACK      KEY18,CSTPER,SP20
          CALL      RDWTSCU1
          CALL      RKWTSCU1
          BRANCH    OVRCD,CSCU9999
.
          MATCH     WTSCDATE,CSTPER
          GOTO      CSCU9999 IF NOT EQUAL
.
          PACK      KEY18,WTSCDATE,WTSCUNIT,WTSCDOCT,WTSCPRTY
          CALL      DEWTSCU1
          GOTO      CSCU0000
.
CSCU9999  RETURN
+
.*********************************************************************
.         update watscuaf for the period
.*********************************************************************
USCU0000  COMPARE   ONE,WTCNUSOP
          GOTO      USCU9999 IF NOT EQUAL   * not using suspensions
.
          MOVE      CSTPER,WTSCDATE         * set period         
          MOVE      WMUNIT,WTSCUNIT         * set unit
          MOVE      WMDOCTOR,WTSCDOCT       * set doctor
          MOVE      WMPTY,WTSCPRTY          * set priority
.
          MOVE      ZERO,WTSCSBEU           * start : not on  | end : unsusp
          MOVE      ZERO,WTSCSBES           * start : not on  | end : susp
          MOVE      ZERO,WTSCSUES           * start : unsusp  | end : susp
          MOVE      ZERO,WTSCSSEU           * start : suspen  | end : unsusp
          MOVE      ZERO,WTSCLPSU           * suspended at start of period
          MOVE      ZERO,WTSCLPUN           * unsuspended at start of period
          MOVE      ZERO,WTSCDELT           * deletions in period
.
          PACK      KEY18,WTSCDATE,WTSCUNIT,WTSCDOCT,WTSCPRTY
          CALL      RDWTSCU1
          MOVE      OVRCD,OVRCDSCU
.
. loop over watsusaf to determine suspension dates for the procedure
.
          MOVE      ZERO,SUSPSTRT           * not suspended at start
          MOVE      ZERO,SUSPEND            * not suspended at end
          PACK      KEY21,WMURNO,WMCODE,WMCNT,SP2
          MOVE      FIVE,SCUSTAT            * default to not update values
          CALL      GSFT0000                * get suspension from & to dates
.
          MATCH     DRGFDTE,WMDATE1
          GOTO      USCU4000 IF NOT LESS    * admitted during period
.
. on W/L at start of period
.
          IF        SUSPSTRT = ONE & SUSPEND = ZERO
            MOVE      THREE,SCUSTAT           * became unsuspended
          ENDIF
          IF        SUSPSTRT = ZERO & SUSPEND = ONE
            MOVE      FOUR,SCUSTAT            * became suspended
          ENDIF
          IF        SUSPSTRT = ONE
            ADD       ONE,WTSCLPSU            * add to susp at start
          ELSE 
            ADD       ONE,WTSCLPUN            * add to un-susp at start
          ENDIF
          GOTO      USCU8000
.
. admitted to W/L during period
.
USCU4000  MOVE      ONE,SCUSTAT             * added to WL during period
          ADD       SUSPEND,SCUSTAT         * update for susp. at EOP
.
. update the values
. SCUSTAT = 1 : start : not on list   end : unsuspended 
. SCUSTAT = 2 : start : not on list   end : suspended
. SCUSTAT = 3 : start : suspended     end : unsuspended
. SCUSTAT = 4 : start : unsuspended   end : suspended
. SCUSTAT = 5 : either suspended at start and end OR
.                      unsusp.   at start and end
.
USCU8000  MOVE      ZERO,FORM8
          LOAD      FORM8,SCUSTAT,WTSCSBEU,WTSCSBES,WTSCSSEU,WTSCSUES
          ADD       ONE,FORM8
          STORE     FORM8,SCUSTAT,WTSCSBEU,WTSCSBES,WTSCSSEU,WTSCSUES
.
. if period from date <= wmdate4 <= period to date then deleted in period
.
          MATCH     DRGFDTE,WMDATE4         * if wmdate4 >= from date
          IF        !@LESS
            MATCH     WMDATE4,DRGTDTE         * if to date >= wmdate4
            IF        !@LESS
              ADD       ONE,WTSCDELT            * deleted in period
            ENDIF
          ENDIF
.
          IF        OVRCDSCU = ONE
            CALL      WRWTSCU1
          ELSE
            CALL      UPWTSCU1
          ENDIF
.
USCU9999  RETURN
+
.*********************************************************************
.         get the susupesion from and to dates
.*********************************************************************
GSFT0000  MOVE      SP8,DATESTOP            * set end date as minimum
          MOVE      "99999999",DATESTRT     * set from date as maximum
          MOVE      ZERO,SUSPSTRT           * not suspended at start
          MOVE      ZERO,SUSPEND            * not suspended at end
          PACK      KEY21,WMURNO,WMCODE,WMCNT,SP2
          CALL      RSWTSUS1
.
GSFT1000  CALL      RKWTSUS1
          BRANCH    OVRCD,GSFT5000          * not on suspension
.
          PACK      KEY19,WTSUURNO,WTSUCODE,WTSUCNT
          MATCH     KEY19,KEY21
          GOTO      GSFT5000 IF NOT EQUAL   * nto on suspension
.
.         check that suspension from and to dates are within the period range
.
          MATCH     WTSUFDAT,DRGTDTE
          GOTO      GSFT1000 IF LESS        * range to date < susp from date
.
.                                           * if ToDate is blank, make unending
          MATCH     SP8,WTSUTDAT                                      *I-198851
          IF        @EQUAL
            MOVE      "99999999",WTSUTDAT
          ENDIF
.
          MATCH     DRGFDTE,WTSUTDAT
          GOTO      GSFT1000 IF LESS        * susp to date < range from date
.
          MATCH     WTSUFDAT,WTSUTDAT
          GOTO      GSFT2000 IF NOT EQUAL   * susp from and to dates are different
.
.         the suspension to and from dates are the same, 
.         check if they are on the period range limits
.
          MATCH     WTSUFDAT,DRGFDTE
          GOTO      GSFT2000 IF EQUAL       * susp from date = range from date
.
          MATCH     WTSUTDAT,DRGTDTE
          GOTO      GSFT1000 IF NOT EQUAL   * not suspended at end points
.
.         check if have new start/stop dates
.
GSFT2000  MATCH     DATESTRT,WTSUFDAT
          IF        @LESS
            MOVE      WTSUFDAT,DATESTRT       * set new start date
          ENDIF
.
          MATCH     WTSUTDAT,DATESTOP
          IF        @LESS
            MOVE      WTSUTDAT,DATESTOP       * set new end date
          ENDIF
          GOTO      GSFT1000
.
. now see if suspend at start/end of period
.
GSFT5000  MATCH     "99999999",DATESTRT
          GOTO      GSFT9999 IF EQUAL       * not suspended
.
          MATCH     DATESTRT,DRGTDTE
          GOTO      GSFT9999 IF LESS        * to date < susp start date
.  
          MATCH     DRGFDTE,DATESTRT
          IF        @LESS
            MOVE      ONE,SUSPSTRT            * suspended at SOP
          ENDIF
.
          MATCH     DATESTOP,DRGTDTE
          IF        @LESS
            MOVE      ONE,SUSPEND             * suspended at EOP
          ENDIF
.
GSFT9999  RETURN
+
.**********************************************************************
.*                         END0000                                    *
.*                      End of Update                                 *
.**********************************************************************
.
END0000   DISPLAY   *P1:23,*EF,*P30:24,*V2LON:
                    "** Update Completed **"
.
          CALL      KILA0000      * remove temporary file a
          CALL      KILB0000      * remove temporary file b
          RETURN
+
.**********************************************************************
.*                         CREA0000                                   *
.*                  Create Temporary File A                           *
.**********************************************************************
.
CREA0000  CALL      KILA0000
          PACK      CMDLINE,SP30,SP30
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    ANATMP,CMDLINE
          APPEND    " 22 u1-9",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      ANATMPXX,ANATMP
          RETURN
+
.**********************************************************************
.*                         CREB0000                                   *
.*                  Create Temporary File B                           *
.**********************************************************************
.
CREB0000  CALL      KILB0000
          PACK      CMDLINE,SP30,SP30
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    BNBTMP,CMDLINE
          APPEND    " 14 d1-9,10-13",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      BNBTMPXX,BNBTMP
          RETURN
+
.**********************************************************************
.*                         KILA0000                                   *
.*                  Remove Temporary File A                           *
.**********************************************************************
.
KILA0000  CLOSE     ANATMPXX
          PACK      CMDLINE,SP30,SP30
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    ANATMP,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          RETURN
+
.**********************************************************************
.*                         KILB0000                                   *
.*                  Remove Temporary File B                           *
.**********************************************************************
.
KILB0000  CLOSE     BNBTMPXX
          PACK      CMDLINE,SP30,SP30
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    BNBTMP,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          RETURN
+
.**********************************************************************
.*              I/O For Temporary File                                *
.**********************************************************************
.
.         Temporary file A
.
RDSTMP1   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      ANATMPXX,KEY9;;
          RETURN
.
RDKTMP1   MOVE      ZERO,OVRCD
          READKS    ANATMPXX;X1PROC,X1SUM,X1NUM
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTMP1    MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      ANATMPXX,KEY9;X1PROC,X1SUM,X1NUM
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTMP1    UPDATE    ANATMPXX;X1PROC,X1SUM,X1NUM
          RETURN
.
WRTMP1    RESET     KEY9
          WRITE     ANATMPXX,KEY9;KEY9,X1SUM,X1NUM
          RETURN
.
.         Temporary file B
.
RDSTMP2   MOVE      ZERO,OVRCD
          RESET     KEY13
          READ      BNBTMPXX,KEY13;;
          RETURN
.
RDKTMP2   MOVE      ZERO,OVRCD
          READKS    BNBTMPXX;X2PROC,DX2DAYS
          GOTO      OVERCOND IF OVER
          MOVE      DX2DAYS,X2DAYS
          RETURN
.
RDTMP2    MOVE      ZERO,OVRCD
          RESET     KEY13
          READ      BNBTMPXX,KEY13;X2PROC,DX2DAYS
          GOTO      OVERCOND IF OVER
          MOVE      DX2DAYS,X2DAYS
          RETURN
.
UPTMP2    MOVE      X2DAYS,DX2DAYS
          UPDATE    BNBTMPXX;X2PROC,DX2DAYS
          RETURN
.
WRTMP2    MOVE      X2DAYS,DX2DAYS
          RESET     KEY13
          WRITE     BNBTMPXX,KEY13;KEY13
          RETURN
+
.**********************************************************************
.*              I/O INCLUDES FOR FILES AND GENERAL ROUTINES           *
.**********************************************************************
.
          INC       STD001IO
          INC       BOKRC1IO/INC            * booking file
          INC       PATCOMN3
          INC       PATDRGIO/INC            * period date range file
          INC       PATCODIO/INC            * patient codes file
          INC       PATDO1IO/INC            * patient doctors file
          INC       PATDSCIO/INC            * patient discharge file
          INC       PATMI1IO/INC            * patients admissions file
          INC       PMSVX1IO/INC            * patients admissions file
          INC       PATTRNIO/INC            * transfer file
          INC       WATCATIO/INC            * category change file
          INC       WATCSUIO/INC            * w/list case summary file
          INC       WATTR1IO/INC            * w/list treatment file
          INC       WATSCUIO/INC            * unit/doctor suspension summary
          INC       WATSUSIO/INC            * w/list procedure suspension file
          INC       WATSWSIO/INC            * w/list status waiting summary file
          INC       WATTMAIO/INC            * w/list time analysis file
          INC       WATUDCIO/INC            * w/list unit/doctor code file
          INC       WATUDSIO/INC            * w/list unit/doctor summary file
          INC       WATUNSIO/INC            * w/list unit summary file
          INC       WATUPCIO/INC            * unit/doctor priority code changes
          INC       WATWTAIO/INC            * w/list movement analysis file
          INC       TFILENAM
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
