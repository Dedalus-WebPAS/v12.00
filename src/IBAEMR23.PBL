. *****************************************************************************
. *              P R O G R A M  S U M M A R Y                                 *
. *              -------------  -------------                                 *
. *                                                                           *
. *     PROGRAM NAME:     IBAEMR23                                            *
. *                                                                           *
. *     FUNCTION:         EMR   STATISTICS                                    *
. *                                                                           *
. *     DATE WRITTEN:     27/05/88                                            *
. *                                                                           *
. *     AUTHOR:           MALCOLM HAYSE                                       *
. *                                                                           *
. *     MODIFICATIONS:                                                        *
. *           V9.12.01  21/01/2010 Ebon Clements  CAR 213712                  *
. *                     Added print of blank codes to report  NEXTC           *
. *           V9.11.00  16/04/09 Saroeun Soeur                                *
. *                     port AAE statistics to 9.11 using EMR stats           *
. *                     emrstaaf file                                         *
. *           V6.07.01  V6.07.01 Steve Downing                                *
. *                     Replaced F1-F4 with F1A-F4A - correct variable length *
. *****************************************************************************
. *                       V6.05.03 J Habasque   24/11/1998 *
. *                       Removed CCENTRY                  *
. *                       V6.05.02 N Harrington 02/11/1998 *
. *                       Fixed date displays              * 
. *                       V6.05.01 N Harrington 09/10/1998 *
. *                       Changed to use DISPHEAD,HEAD132  *
. **********************************************************
. *                       print modified 08/-7/88 ns       *
. *                       V5.01 18/04/89 K.Peak            *
. *                             Fixed page break for Epw   *
. *                             SRF   100180               *
. *                       V5.02 21/04/89 K.Peak            *
. *                             Added CONTROLF SRF 100081  *
. *                       V5.03 04/05/89 K.Peak            *
. *                             Added HNUMDES,Prev & D.stat*
. *                             for New Zealand            *
. *                       V5.04 08/05/89 K.Peak            *
. *                             Added 13 Periods for N.Z.  *
. *                       V5.05 16/05/89 K.Peak            *
. *                             New Zealand Changes        *
. *                       V5.51 21/05/91 J.Tan   SRF 108541*
. *                             Mods to use date range file*
. *                                                        *
. *                    V6.04.01 25/09/97 Davin   SRF 621592*
. *                             Allow 12 periods, not 13   *
. *                                                        *
. **********************************************************
.
          INC       STD001FD
.
          INC       PATCODFD/INC
          INC       PATDRGFD/INC
          INC       PATCOMM/INC
.
          INC       EMRCONFD/INC
          INC       EMRSTAFD/INC
.
.        EXTRA   VARIABLES
.
CURPER    DIM       6         * Current period (CCYYMM)
CSTPER    DIM       6         * First period of current year (CCYYMM)
.
DIM4      DIM       4
DIM6	  DIM	    6
HNUMDES	  DIM	    1
.
OPTDES    DIM       19
.
PRTDES    DIM       16
PENDDATE  DIM       7
PSTRDATE  DIM       7
.
SP0       INIT      ""
.
XCOUNT    FORM      2
XCODE     DIM       3
.
.
FORM6     FORM      6
.
F0A       FORM      6
F1A       FORM      6        * Variables F1-F4 exist in IBACOMM.INC but have
F2A       FORM      6        * different lengths, FORM 1 - FORM 4 respectively
F3A       FORM      6        *
F4A       FORM      6        *
F5A       FORM      6
F6A       FORM      6
F7A       FORM      6
F8A       FORM      6
F9A       FORM      6
F10A      FORM      6
F11A      FORM      6
F12A      FORM      6
F13A      FORM      6
FTOTAL    FORM      6        * totals per one code
.
T0        FORM      6
T1        FORM      6
T2        FORM      6
T3        FORM      6
T4        FORM      6
T5        FORM      6
T6        FORM      6
T7        FORM      6
T8        FORM      6
T9        FORM      6
T10       FORM      6
T11       FORM      6
T12       FORM      6
T13       FORM      6
TTOTAL    FORM      6
.
C0        FORM      6
C1        FORM      6
C2        FORM      6
C3        FORM      6
C4        FORM      6
C5        FORM      6
C6        FORM      6
C7        FORM      6
C8        FORM      6
C9        FORM      6
C10       FORM      6
C11       FORM      6
C12       FORM      6
C13       FORM      6
CTOTAL    FORM      6        * totals per one catagory
.
CT0       DIM       2
CT1       DIM       2
CT2       DIM       2
CT3       DIM       2
CT4       DIM       2
CT5       DIM       2
CT6       DIM       2
CT7       DIM       2
CT8       DIM       2
CT9       DIM       2
CT10      DIM       2
CT11      DIM       2
CT12      DIM       2
CT13      DIM       2

MN0       DIM       2
MN1       DIM       2
MN2       DIM       2
MN3       DIM       2
MN4       DIM       2
MN5       DIM       2
MN6       DIM       2
MN7       DIM       2
MN8       DIM       2
MN9       DIM       2
MN10      DIM       2
MN11      DIM       2
MN12      DIM       2
MN13      DIM       2
MPERREQD  FORM      2   * Required period (calculated for every record)
MPERUSED  FORM      2   * Number of months used (calculated initially)
MPRTPOS   FORM      3   * Variable print position
MONTH     DIM       9
.
NPYEAR    FORM      2
.
Y0        DIM       2
Y1        DIM       2
Y2        DIM       2
Y3        DIM       2
Y4        DIM       2
Y5        DIM       2
Y6        DIM       2
Y7        DIM       2
Y8        DIM       2
Y9        DIM       2
Y10       DIM       2
Y11       DIM       2
Y12       DIM       2
Y13       DIM       2
.
XMM       DIM       2
YMM       DIM       2
.
VAR       FORM      1
VENDDATE  DIM       6        * End month - CCYYMM
VSTRDATE  DIM       6        * End month - CCYYMM
.
PRGID     INIT      "IBAEMR23"
PRGNAM    INIT      "EMR STATISTICS"
VERSION   INIT      "V12.00.00"
+
.         START OF PROGRAM
.
          CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening aaestaaf";
          OPEN      EMRSTAA1,"emrstaaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdrgaf";
          OPEN      PATDRGA1,"patdrgaf"
          OPEN      PATDRGA3,"patdrgaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,ZERO;*2,CDD,CMM,CYY,CCC
          READ      CONTROLF,THIRTY;*168,HNUMDES
.
          RESET     HNUMDES,9
INIT0000  CMATCH    SP1,HNUMDES
          GOTO      INIT1000 IF NOT EQUAL
          BUMP      HNUMDES BY -1
          GOTO      INIT1000 IF EOS
          GOTO      INIT0000
INIT1000  MOVEFPTR  HNUMDES,VAR
          RESET     HNUMDES,VAR
          LENSET    HNUMDES
          RESET     HNUMDES
.
.         Work out what the current period is, and the first period in the 
.         current financial year
.
          PACK      CPTDATE,CCC,CYY,CMM,CDD
          REP       " 0",CPTDATE
          CALL      GPERD             * Find the current period
          BRANCH    EXIT,INIT9000     * No current period found
.
          PACK      CURPER,DRGCYR,DRGCNUM
.
          PACK      KEY6,DRGYR,SP2
          CALL      RDSDRGA1
          CALL      RDKDRGA1
.
          PACK      CSTPER,DRGCYR,DRGCNUM
.
.         Now count the number of periods in a financial year
.
          MOVE      ZERO,NPYEAR
          MOVE      DRGYR,DIM4
          PACK      KEY6,DRGYR,SP2
          CALL      RDSDRGA1
INIT8000  CALL      RDKDRGA1
          BRANCH    OVRCD,INIT8100
.
          MATCH     DRGYR,DIM4
          GOTO      INIT8100 IF NOT EQUAL
.
          ADD       ONE,NPYEAR
          GOTO      INIT8000
.
.         Finished initialisation
.
INIT8100  DISPLAY    *P1:24,*EL
          GOTO       START
.
.         No current period on file
.
INIT9000  KEYIN      *P1:24,*EL,*B,*V2LON:
                     "** Error: Current date not found in Period file. ":
                     "Hit <ENTER> to exit ",*EOFF,ANS,*P1:24;
          GOTO       ENDIT
.
.
START     DISPLAY   *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Statistics"
.
START0    KEYIN     *P1:7,*EF,"Please Select : ",*V2LON,OPTION
.
          COMPARE   ZERO TO OPTION
          GOTO      ENDIT IF EQUAL
.
          BRANCH    OPTION OF START1
.
          DISPLAY   *P35:7,*EL,*B,*V2LON,"** Invalid Selection **",*W2;
          GOTO      START0
.
START1    DISPLAY   *P1:9,*EL,"Select from date:";
          UNPACK    CSTPER,CCENT,CYEAR,CMON
          MOVE      ZERO,CHIGHLT
          MOVE      TWENTY2,CCOL
          MOVE      NINE,CVERT
          CALL      KEYPER
          BRANCH    OVRCD,START
.
.         Validate the date entered
.
         PACK      KEY6,CCENT,CYEAR,CMON
         REP       " 0",KEY6
         CALL      RDDRGA3
         BRANCH    OVRCD,START3
.
         PACK      PSTRDATE,DRGCNUM,SLASH,DRGCYR
         PACK      VSTRDATE,DRGYR,DRGNUM
.          PACK      PSTRDATE,CMON,SLASH,CCENT,CYEAR
.          PACK      VSTRDATE,CCENT,CYEAR,CMON
.	REP	" 0",VSTRDATE

.
.         Get the to date
.
START2    DISPLAY   *P30:9,"to "
          UNPACK    CURPER,CCENT,CYEAR,CMON
          MOVE      "33",CCOL
          CALL      KEYPER
          BRANCH    OVRCD,START1
.
.         Validate the date entered
.
          PACK      KEY6,CCENT,CYEAR,CMON
          REP       " 0",KEY6
          CALL      RDDRGA3
          BRANCH    OVRCD,START4
.
          PACK      PENDDATE,DRGCNUM,SLASH,DRGCYR
          PACK      VENDDATE,DRGYR,DRGNUM
.   	 PACK      PENDDATE,CMON,SLASH,CCENT,CYEAR
.         PACK      VENDDATE,CCENT,CYEAR,CMON
.	REP	" 0",VENDDATE
  
.
          MATCH     VSTRDATE,VENDDATE
          GOTO      START7 IF NOT LESS
          DISPLAY   *P10:24,*V2LON,*B,"*** TO date cannot be ":
                    "before FROM date *** ",*W,*P1:24,*EL;
          GOTO      START1
.
.         From date not on file
.
START3    DISPLAY   *P10:24,*V2LON,*B,"*** Invalid Date *** ",*W,*P1:24,*EL;
          GOTO      START1
.
.         To date not on file
.
START4    DISPLAY   *P10:24,*V2LON,*B,"*** Invalid Date *** ",*W,*P1:24,*EL;
          GOTO      START1
.
.         Calculate MPERUSED - # of periods used
.
START7    MOVE      ONE,MPERUSED
          MOVE      VSTRDATE,KEY6
          CALL      RDDRGA1
START8    CALL      RDKDRGA1
          BRANCH    OVRCD,START9
.
          PACK      XDATE,DRGYR,DRGNUM
          MATCH     XDATE,VENDDATE
          GOTO      START9 IF LESS
.
          ADD       ONE,MPERUSED
          GOTO      START8
.
.         Validate the number of periods
.
START9    COMPARE   TEN3,MPERUSED
          GOTO      CONFIRM IF LESS
.
          DISPLAY   *P10:24,*V2LON,*B,"*** Maximum 12 periods allowed *** ":
                    *W,*P1:24,*EL;
          GOTO      START1
.
.
CONFIRM   MOVE      ZERO,T1
          MOVE      ZERO,T2
          MOVE      ZERO,T3
          MOVE      ZERO,T4
          MOVE      ZERO,T5
          MOVE      ZERO,T6
          MOVE      ZERO,T7
          MOVE      ZERO,T8
          MOVE      ZERO,T9
          MOVE      ZERO,T10
          MOVE      ZERO,T11
          MOVE      ZERO,T12
          MOVE      ZERO,T13
          MOVE      ZERO,TTOTAL
.
          MOVE      ZERO,C1
          MOVE      ZERO,C2
          MOVE      ZERO,C3
          MOVE      ZERO,C4
          MOVE      ZERO,C5
          MOVE      ZERO,C6
          MOVE      ZERO,C7
          MOVE      ZERO,C8
          MOVE      ZERO,C9
          MOVE      ZERO,C10
          MOVE      ZERO,C11
          MOVE      ZERO,C12
          MOVE      ZERO,C13
          MOVE      ZERO,CTOTAL
.
          KEYIN     *P1:14,*EL,"Ok to Continue (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    ") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          CMATCH    ANSN,ANS
          GOTO      START0 IF EQUAL
.
          CMATCH    ANSY,ANS
          GOTO      OKCONT IF EQUAL
.
          BEEP
          GOTO      CONFIRM
.
.
OKCONT    DISPLAY   *P1:24,*EL,*P20:24,*V2LON:
                    "*** Generating ***",*W2;
.
          DISPLAY   *P1:24,*EL,"Compiling Statistics for :":
                    *P26:24,"Category : ":
                    *P60:24,"Code : ";
.
          MOVE      ZERO,CPAGENO
          MOVE      "60",CLNO
.
          MOVE      SP3,XCODE
.
          PACK      KEY5 WITH SP10
          CALL      RDSCODE1
.
NEXTC     CALL      RDKCODE1
          BRANCH    OVRCD OF EOF
.
          MATCH     TCODE,XCODE
          CALL      TOTCAT IF NOT EQUAL
.
          DISPLAY   *P40:24,TCODE,*P70:24,ACODE;
.
          MATCH     SP3,ACODE
          GOTO      NRMC IF NOT EQUAL
.
          MOVE      TDESC,OPTDES
          MOVE      "Blank",TDESC
.
NRMC      MOVE      ZERO,F1A
          MOVE      ZERO,F2A
          MOVE      ZERO,F3A
          MOVE      ZERO,F4A
          MOVE      ZERO,F5A
          MOVE      ZERO,F6A
          MOVE      ZERO,F7A
          MOVE      ZERO,F8A
          MOVE      ZERO,F9A
          MOVE      ZERO,F10A
          MOVE      ZERO,F11A
          MOVE      ZERO,F12A
          MOVE      ZERO,F13A
          MOVE      ZERO,FTOTAL
.
          PACK      KEY13,TCODE,ACODE,SP8
          CALL      RSEMSTA1
.
NEXTS     CALL      RKEMSTA1
          BRANCH    OVRCD OF ENDSTA1
.
          MATCH     EMSTCATA,TCODE
          GOTO      ENDSTA1 IF NOT EQUAL
.
          MATCH     EMSTCODE,ACODE
          GOTO      ENDSTA1 IF NOT EQUAL
.
          MOVE	    EMSTDATE,DIM6
	  MATCH     VSTRDATE,DIM6
          GOTO      NEXTS IF LESS
.
          MATCH     VENDDATE,DIM6
          GOTO      NEXTSX IF EQUAL
.
          MATCH     VENDDATE,DIM6
          GOTO      NEXTS IF NOT LESS
.
NEXTSX    DISPLAY   *P40:24,*V2LON,EMSTCATA,*P70:24,EMSTCODE;
.
	
          UNPACK    EMSTDATE INTO CCENT,CYEAR,CMON
          CALL      CALM0000             * Calculate index
.
          LOAD      FORM6 USING MPERREQD OF F1A,F2A,F3A,F4A,F5A,F6A,F7A,F8A:
                                            F9A,F10A,F11A,F12A,F13A
          ADD       EMSTNUMB TO FORM6
          STORE     FORM6 INTO MPERREQD OF F1A,F2A,F3A,F4A,F5A,F6A,F7A,F8A:
                                           F9A,F10A,F11A,F12A,F13A
          ADD       EMSTNUMB TO FTOTAL
          GOTO      NEXTS
.
.
.
ENDSTA1   COMPARE   ZERO,FTOTAL
          GOTO      NEXTC IF EQUAL
.
GOTDAT    COMPARE   "45",CLNO
          CALL      HEAD IF NOT LESS
.
          MATCH     TCODE,XCODE
          GOTO      SUBHEAD IF NOT EQUAL
.
          COMPARE   TEN1,CLNO
          GOTO      GOTDAT1 IF NOT EQUAL
.
SUBHEAD   PRINT     *1,OPTDES,*N:
                    "-------------------"
          ADD       TWO,CLNO
.
GOTDAT1   CALL      PRNTRES
          GOTO      NEXTC
.
.         Print grand total
.
TOTCAT    MATCH     XCODE,SP2
          GOTO      PRTCAT IF NOT EQUAL
          RETURN

PRTCAT    COMPARE   ZERO,CTOTAL
          RETURN    IF EQUAL
.
          COMPARE   "45",CLNO
          CALL      HEAD IF NOT LESS
.
          COMPARE   TEN1,CLNO
          GOTO      GOTDAT2 IF NOT EQUAL
.
          PRINT     *1,OPTDES,*N:
                    "-------------------"
          ADD       TWO,CLNO
.
GOTDAT2   CALL      PAGEND
.
          PRINT     *7,"Grand Total",SP3;
.
          MOVE      ZERO,XCOUNT
NEXTCT1   ADD       ONE,XCOUNT
          LOAD      C0 USING XCOUNT OF C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12:
                                       C13
.
          PRINT     C0,SP2;
.
          COMPARE   MPERUSED,XCOUNT
          GOTO      NEXTCT1 IF NOT EQUAL
.
          PRINT     CTOTAL
.
          ADD       ONE,CLNO
.
          CALL      PAGEND
.
          MOVE      ZERO,C1
          MOVE      ZERO,C2
          MOVE      ZERO,C3
          MOVE      ZERO,C4
          MOVE      ZERO,C5
          MOVE      ZERO,C6
          MOVE      ZERO,C7
          MOVE      ZERO,C8
          MOVE      ZERO,C9
          MOVE      ZERO,C10
          MOVE      ZERO,C11
          MOVE      ZERO,C12
          MOVE      ZERO,C13
          MOVE      ZERO,CTOTAL
          RETURN
.
EOF       CALL      TOTCAT
          COMPARE   ZERO,CPAGENO
          GOTO      NOREC IF EQUAL
.
          PRINT     *N,*N,"***  END OF REPORT  ***"
          DISPLAY   *P1:24,*EL,*P15:24,*V2LON:
                    "*** Generation Completed ***",*W2;
          GOTO      START0
.
NOREC     DISPLAY   *P1:24,*EL,*P20:24,*V2LON,*B:
                    "*** No Data selected ***",*W2;
          GOTO      START0
.
.
.         Print page separator  
.
PAGEND    PRINT     *20,SP0;
          MOVE      ZERO,XCOUNT
NEXTCT0   ADD       ONE,XCOUNT
          PRINT     UNDLN7,SP1;
.
          COMPARE   MPERUSED,XCOUNT
          GOTO      NEXTCT0 IF NOT EQUAL
.
          PRINT     UNDLN7
          ADD       ONE,CLNO
          RETURN
.
.
.         Print new page heading
.
HEAD      CLOCK     TIME,CTIMEIS
.
          CALL      HEAD132
.
          PRINT     *50,"From : ",PSTRDATE,*N:
                    *50,"To   : ",PENDDATE,*N
.
          MOVE      ONE,XCOUNT
.
NEXTSZ    COMPARE   XCOUNT,MPERUSED
          GOTO      ENDLZ IF LESS
.
          STORE     SP6 USING XCOUNT OF MN1,MN2,MN3,MN4,MN5,MN6:
                    MN7,MN8,MN9,MN10,MN11,MN12,MN13
          STORE     SP6 USING XCOUNT OF Y1,Y2,Y3,Y4,Y5,Y6,Y7,Y8,Y9,Y10,Y11,Y12:
                    Y13
          ADD       ONE,XCOUNT
          GOTO      NEXTSZ
.
ENDLZ     MOVE      ONE,XCOUNT
          MOVE      VSTRDATE,KEY6
          CALL      RDDRGA1
NEXTSP    STORE     DRGCNUM,XCOUNT,MN1,MN2,MN3,MN4,MN5,MN6:
                                   MN7,MN8,MN9,MN10,MN11,MN12,MN13
.
          UNPACK    DRGCYR,CCENT,CYEAR
.
          STORE     CCENT,XCOUNT,CT1,CT2,CT3,CT4,CT5,CT6,CT7,CT8,CT9,CT10,CT11:
                                 CT12,CT13
.
          STORE     CYEAR,XCOUNT,Y1,Y2,Y3,Y4,Y5,Y6,Y7,Y8,Y9,Y10,Y11,Y12,Y13
          ADD       ONE,XCOUNT
.
          CALL      RDKDRGA1
          BRANCH    OVRCD,LSTRT
.
          PACK      XDATE,DRGYR,DRGNUM
.
          MATCH     XDATE,VENDDATE
          GOTO      NEXTSP IF NOT LESS
.
LSTRT     CALL      MTHD0000
.
PEXIT     MOVE      TEN1,CLNO
          RETURN
.
.
.         Print code totals
.
PRNTRES   MOVE      TDESC,PRTDES
          PRINT     *1,ACODE,SP1,PRTDES;
.
          MOVE      ZERO,XCOUNT
NEXTFT0   ADD       ONE,XCOUNT
          LOAD      F0A USING XCOUNT OF F1A,F2A,F3A,F4A,F5A,F6A,F7A,F8A:
                                       F9A,F10A,F11A,F12A,F13A
          PRINT     F0A,SP2;
.
          COMPARE   MPERUSED,XCOUNT
          GOTO      NEXTFT0 IF NOT EQUAL
.
          PRINT     FTOTAL
          ADD       ONE,CLNO
.
          ADD       F1A,T1
          ADD       F2A,T2
          ADD       F3A,T3
          ADD       F4A,T4
          ADD       F5A,T5
          ADD       F6A,T6
          ADD       F7A,T7
          ADD       F8A,T8
          ADD       F9A,T9
          ADD       F10A,T10
          ADD       F11A,T11
          ADD       F12A,T12
          ADD       F13A,T13
          ADD       FTOTAL,TTOTAL
.
          ADD       T1,C1
          ADD       T2,C2
          ADD       T3,C3
          ADD       T4,C4
          ADD       T5,C5
          ADD       T6,C6
          ADD       T7,C7
          ADD       T8,C8
          ADD       T9,C9
          ADD       T10,C10
          ADD       T11,C11
          ADD       T12,C12
          ADD       T13,C13
          ADD       TTOTAL,CTOTAL
.
          MOVE      ZERO,T1
          MOVE      ZERO,T2
          MOVE      ZERO,T3
          MOVE      ZERO,T4
          MOVE      ZERO,T5
          MOVE      ZERO,T6
          MOVE      ZERO,T7
          MOVE      ZERO,T8
          MOVE      ZERO,T9
          MOVE      ZERO,T10
          MOVE      ZERO,T11
          MOVE      ZERO,T12
          MOVE      ZERO,T13
          MOVE      ZERO,TTOTAL
.
          PRINT     " "
.
          COMPARE   "45",CLNO
          CALL      HEAD IF NOT LESS
.
          MOVE      TCODE,XCODE
.
PRTRET    RETURN
.
.
MTHD0000  PRINT     *18,SP1;
.
          MOVE      ZERO,XCOUNT
MTHD1000  ADD       ONE,XCOUNT
          LOAD      Y0,XCOUNT,Y1,Y2,Y3,Y4,Y5,Y6,Y7,Y8,Y9,Y10,Y11,Y12,Y13
.
          LOAD      MN0,XCOUNT,MN1,MN2,MN3,MN4,MN5,MN6:
                               MN7,MN8,MN9,MN10,MN11,MN12,MN13
.
          LOAD      CT0,XCOUNT,CT1,CT2,CT3,CT4,CT5,CT6,CT7,CT8,CT9,CT10,CT11:
                               CT12,CT13
.
          PRINT     SP1,MN0,SLASH,CT0,Y0;
.
          COMPARE   MPERUSED,XCOUNT
          GOTO      MTHD1000 IF NOT EQUAL
.
          PRINT     SP3,"Total"
          CALL      PAGEND
          RETURN
.
.------------------------------------------------------------------------
.         Calculate the period for a particular month - value in MPERREQD
.         Requires : VSTRDATE, CMON, CYEAR
.------------------------------------------------------------------------
.
CALM0000  UNPACK    VSTRDATE,XCENT,XYEAR,XMON
          MOVE      XMON,IMON
          MOVE      XYEAR,IYEAR
          MOVE      XCENT,ICENT
.
          MOVE      CMON,MPERREQD
.
          MATCH     XYEAR,CYEAR
          GOTO      CALM1000 IF EQUAL
.
          ADD       NPYEAR,MPERREQD         * Different year
.
CALM1000  SUB       IMON,MPERREQD           * Same year
          ADD       ONE,MPERREQD
.
CALM9999  RETURN
.
.
          INCLUDE   STD001IO
          INCLUDE   PATCOMN3
.
          INC       PATCODIO/INC
          INCLUDE   PATDRGIO/INC
          INC       EMRSTAIO/INC
.
ENDIT     CHAIN     PGM
