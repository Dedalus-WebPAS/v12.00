.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVPADM                                                    *
.* Desc      :   Data Migration Program to upload pre-admission data from    *
.*               a third party legacy system into the I/P webPAS module.     *
.*****************************************************************************
.* Date      :   28/03/2014                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the convpadm.txt file and    *
.*               for each valid record found, it will write a new patient    *
.*               patient preadmission, creating all the relevant associated  *
.*               records.                                                    *
.* Mods      :                                                               *
.*****************************************************************************
.* V12.00.02 04/07/2025  Ebon Clements   TSK 0961623                         *
.*           Removed FORM8 from next visit numbmer generation                *
.* V12.00.01 13/05/2025  Ebon Clements   TSK 0955096                         *
.*           Added alpanumeric visit number generation - SETV0000 - GENANVIS *
.* V11.05.01 05.12.2024  DA Sarkies    TSK 0951086                           *
.*           Increase size of PADMDHOS to hold days of hospital stay         *
.* V11.04.01 05.02.2024  DA Sarkies    TSK 0936282                           *
.*           Increase size of variable to hold Healthfund Number             *
.* V11.02.01 10/02/2022  Thanh T       TSK 0889899                           *
.*           Recompiled as WATTR1FD changes                                  *
.*****************************************************************************
.*        V10.15.01  13/11/2019 Peter Vela         TSK 0879283               *
.*                   Recompiled for PREADMIT                                 *
.*        V10.11.02  28/09/2017 Thanh T.           TSK 0821710               *
.*                   Audit Amission/outpatient visit comments                *
.*        V10.11.01  26/09/2017  Steve Armstrong   TSK 0845903               *
.*                   Added loading of PADMPHPU, PADMAGNC & PADMOGNO fields   *
.*                   (CTAS).                                                 *
.*****************************************************************************
.*        V10.09.01  25/01/2017  Steve Armstrong   TSK 0830055               *
.*                   Mods to CVIS0000 to ignore eReferral type ibaalvaf      *
.*                   records.                                                *
.*                   Mods to set IBAVTYPE to " 0" (Legacy) in AVIS0000.      *
.*****************************************************************************
.*        V10.08.02  21/10/2016  Steve Armstrong   TSK 0819758               *
.*                   Added new fields ACCDTYP1, ACCDDAT1, ACCDTYP2, ACCDDAT2,*
.*                   ACCDTYP3 & ACCDDAT3.                                    *
.*        V10.08.01  06/09/2016  Steve Armstrong   CAR 0825609               *
.*                   Recompiled for changes to UPACCDAT.                     *
.*****************************************************************************
.*        V10.06.01  22/07/2015  Steve Armstrong   CAR 318590                *
.*                   Recompiled for changes to UPACCDAT                      *
.*        V10.06.00  25/02/2011  Steve Armstrong   CAR 313856                *
.*                   Created program                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ACCCMTFD/INC
          INC       ACCMAPFL/INC
          INC       IBAALVFD/INC
          INC       IBACONFD/INC
          INC       BOKRC1FD/INC
          INC       IBAPOSFD/INC
          INC       MEHLERFD/INC
          INC       MRTCONFD/INC
          INC       MRTMASFD/INC
          INC       MRTVISFD/INC
          INC       NHIMASFD/INC
          INC       PATCMCFD/INC
          INC       VISMTXFD/INC
          INC       VISMDTFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDNRFD/INC
          INC       PATDO1FD/INC
          INC       PATDSCFD/INC
          INC       PATFN1FD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATMWSFD/INC
          INC       PATNIDFD/INC
          INC       PATONLFD/INC
          INC       PATPR1FD/INC
          INC       PATRE1FD/INC
          INC       PATTRNFD/INC
          INC       PATVISFD/INC
          INC       PATWC1FD/INC
          INC       PATWR1FD/INC
          INC       PMSBRQFD/INC
          INC       PMSCURFD/INC
          INC       PMSHCGFD/INC
          INC       PMSHCPFD/INC
          INC       PMSPAYFD/INC
          INC       PMSPRGFD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PMSWX1FD/INC
          INC       PREADMVR/INC
          INC       VISIAUFD/INC
          INC       VISINTFD/INC
          INC       VISPAYFD/INC
          INC       WATTR1FD/INC
          INC       WATTX1FD/INC
          INC       WEBCONFD/INC
          INC       WEBSECFD/INC
.
.
.         Temporary Mapping Files
.
.TEMP1  Category-Codes (patcodes)  --
.TEMP2  Insurer (patin1af)          |  These definitions are in ACCMAPFL.INC
.TEMP3  Employer (pateoraf)         |
.TEMP4  HCP (pmshcpaf)              |
.TEMP5  Title (pmstleaf)            |
.TEMP6  Relation (pmsrelaf)        __
.
.
.         HCP Practice File - hcppract.dat (pmshcgaf)
.
HCGCDFLG  FORM      1                            * HCP Practice mapping flag
TEMP7     IFILE     SQL, FIXED=21, KEY="U1-10"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDHCGCD  DIM       10       10         1       Old HCP Practice
NEWHCGCD  DIM       10       10        11       New HCP Practice
.End of Record                         21
.
.
.         Hospital File - hospital.dat (pathspaf)
.
HOSPLFLG  FORM      1                            * Hospital mapping flag
TEMP8     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDHOSPL  DIM       3        3          1       Old hospital code
NEWHOSPL  DIM       3        3          4       New hospital code
.End of Record                          7
.
.         Ward/Bed File - wardbed.dat (patwr1af)
.
WRDBDFLG  FORM      1                            * Ward/Bed Code mapping flag
TEMP9     IFILE     SQL, FIXED=13, KEY="U1-3,4-6"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDWARD   DIM       3        3          1       Old ward code
OLDBED    DIM       3        3          4       Old bed code
NEWWARD   DIM       3        3          7       New ward code
NEWBED    DIM       3        3         10       New bed code
.End of Record                         13
.
.
.         Doctor Code File - doctor.dat (patdo1af)
.
DOCTRFLG  FORM      1                            * Doctor Code mapping flag
TEMP10    IFILE     SQL, FIXED=13, KEY="U1-6"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDCODE  DIM       6        6          1       Old doctor code
NEWDCODE  DIM       6        6          7       New doctor code
.End of Record                         13
.
.
.         Health Fund File - healthfd.dat
.
HEALTHFD  FORM      1                       * Health fund/table file flag
TEMP11    IFILE     SQL, FIXED=29, KEY="U1-6,7-14"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDHFUND  DIM       6        6          1       Old health fund code
OLDTABLE  DIM       8        8          7       Old health fund table code
NEWHFUND  DIM       6        6          15      New health fund code
NEWTABLE  DIM       8        8          21      New health fund table code
.End of Record                          29
.
.
.         Pre-admission file layout - convpadm.txt
.
PRADMUPL  FILE      HL7, FIXED=4096         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
.Name     Type    Length  Start  Description
.----     ----    ------  -----  -----------
PADMTYPE  DIM       1       1    I/P record type
.                                   0 = Pre-admission
.PIPE     DIM       1       2    Pipe Delimiter
PADMURNO  DIM       8       3    U/R Number                  (patmi1af.aurno)
.PIPE     DIM       1       11   Pipe Delimiter
PADMDATE  DIM       8       12   Admission Date (ccyymmdd)   (patmi1af.adate)
.PIPE     DIM       1       20   Pipe Delimiter
PADMTIME  DIM       8       21   Admission Time (hh:mm:ss)   (patmi1af.atime)
.PIPE     DIM       1       29   Pipe Delimiter
PADMWARD  DIM       3       30   Ward (patwr1af)             (patmi1af.ptmixwrd)
.PIPE     DIM       1       33   Pipe Delimiter
PADMWBED  DIM       3       34   Bed (patwr1af)              (patmi1af.ptmiebed)
.PIPE     DIM       1       37   Pipe Delimiter
PADMADOC  DIM       6       38   Attending Doctor (patdo1af) (patmi1af.adocta)
.PIPE     DIM       1       44   Pipe Delimiter
PADMSRCE  DIM       3       45   Referral Source  (Cat S)    (patmi1af.asrce)
.PIPE     DIM       1       48   Pipe Delimiter
PADMATYP  DIM       3       49   Admission Type   (Cat A)    (patmi1af.atype)
.PIPE     DIM       1       52   Pipe Delimiter
PADMCLSS  DIM       3       53   Admission Class  (Cat P)    (patmi1af.aclss)
.PIPE     DIM       1       56   Pipe Delimiter
PADMCARE  DIM       3       57   Care Class      (Cat CC)    (patmi1af.acare)
.PIPE     DIM       1       60   Pipe Delimiter
PADMHFND  DIM       6       61   Health Fund (patfn1af)      (patmi1af.afundh)
.PIPE     DIM       1       67   Pipe Delimiter
PADMHFTB  DIM       8       68   Health Fund Table (patfn1af)(patmi1af.afndtb)
.PIPE     DIM       1       76   Pipe Delimiter
PADMHFMN  DIM       19      77   Health Fund Membership No.  (pmsvx1af.pmvxfndm)
.                                                            (patmi1af.afndmm)
.PIPE     DIM       1       96   Pipe Delimiter
PADMDIAG  DIM       80      97   Admitting Diagnosis 1       (patmi1af.adiag1)
.PIPE     DIM       1      177   Pipe Delimiter
PADMDEPT  DIM       3      178   Department Code (Cat AC)    (patmi1af.aclssft)
.PIPE     DIM       1      181   Pipe Delimiter
PADMCOMP  DIM       3      182   Claim Code      (Cat CL)    (patmi1af.aclaim)
.PIPE     DIM       1      185   Pipe Delimiter
PADMDIET  DIM       3      186   Diet Code       (Cat DC)    (patmi1af.adiet)
.PIPE     DIM       1      189   Pipe Delimiter
PADMSTAY  DIM       3      190   Exp. Length of Stay (days)  (patmi1af.astay)
.PIPE     DIM       1      193   Pipe Delimiter
PADMDHOS  DIM       4      194   Days of Hosp'n (days)       (patmi1af.adyhosp)
.PIPE     DIM       1      197   Pipe Delimiter
PADMPCMX  DIM       9      199   Casemix Code (patcmcaf)     (patmi1af.ptmipcmx)
.PIPE     DIM       1      207   Pipe Delimiter
PADMGSTA  DIM       1      209   GST Applicable (Y/N/U)      (patmi1af.ptmigsta)
.PIPE     DIM       1      209   Pipe Delimiter
PADMCMXP  DIM       1      211   Casemix Payment (Y/N)       (patmi1af.ptmicmxp)
.PIPE     DIM       1      211   Pipe Delimiter
PADMRHC1  DIM       10     213   Referring HCP (pmshcpaf)    (pmsvx1af.pmvxrhc1)
.PIPE     DIM       1      222   Pipe Delimiter
PADMRH1G  DIM       10     224   Ref. HCP Practice (pmshcpaf)(pmsvx1af.pmvxrh1g)
.PIPE     DIM       1      233   Pipe Delimiter
PADMIDUS  DIM       3      235   Int. Stay Dur'n (Cat VI)    (pmsvx1af.pmvxidus)
.PIPE     DIM       1      237   Pipe Delimiter
PADMAPWD  DIM       3      239   Adm. Point Ward (Cat ap)    (pmsvx1af.pmvxapwd)
.PIPE     DIM       1      241   Pipe Delimiter
PADMPOWD  DIM       3      243   Post Op Ward    (patwr1af)  (pmsvx1af.pmvxpowd)
.PIPE     DIM       1      245   Pipe Delimiter
PADMPOBD  DIM       3      247   Post Op Bed     (patwr1af)  (pmsvx1af.pmvxpobd)
.PIPE     DIM       1      249   Pipe Delimiter
PADMMHLS  DIM       3      251   No longer in use
.PIPE     DIM       1      253   Pipe Delimiter
PADMEMPL  DIM       3      255   Empl. Status    (Cat KD)    (pmsvx1af.pmvxempl)
.PIPE     DIM       1      257   Pipe Delimiter
PADMPALC  DIM       3      259   Pall. Care      (Cat KG)    (pmsvx1af.pmvxpalc)
.PIPE     DIM       1      261   Pipe Delimiter
PADMUDIN  DIM       3      263   Disc. Intention (Cat KN)    (pmsvx1af.pmvxudin)
.PIPE     DIM       1      265   Pipe Delimiter
PADMUREA  DIM       3      267   Unpl. Readmiss. (Cat KO)    (pmsvx1af.pmvxurea)
.PIPE     DIM       1      269   Pipe Delimiter
PADMPACC  DIM       3      271   Pref. Accomm.   (Cat BP)    (pmsvx1af.pmvxpacc)
.PIPE     DIM       1      273   Pipe Delimiter
PADMPRGM  DIM       8      275   Program Code  (pmsprgaf)    (pmsvx1af.pmvxprgm)
.PIPE     DIM       1      282   Pipe Delimiter
PADMSLOC  DIM       3      284   Location SOR    (Cat SG)    (pmsvx1af.pmvxsloc)
.PIPE     DIM       1      286   Pipe Delimiter
PADMSCLI  DIM       3      288   Clinical SOR    (Cat SH)    (pmsvx1af.pmvxscli)
.PIPE     DIM       1      290   Pipe Delimiter
PADMSTRA  DIM       3      292   Transport SOR   (Cat SI)    (pmsvx1af.pmvxstra)
.PIPE     DIM       1      294   Pipe Delimiter
PADMMHOS  DIM       3      296   Hospital (pathspaf)         (pmsvx1af.pmvxmhos)
.PIPE     DIM       1      298   Pipe Delimiter
PADMAVIS  DIM      20      300   Alternate Visit Number      (ibaalvaf.ibavavis)
.PIPE     DIM       1      319   Pipe Delimiter
PADMPHPU  DIM       3      321   Principal Health Service    (patmi1af.ptmiphpu)
.                                Purchaser (Cat HP)
.PIPE     DIM       1      323   Pipe Delimeter
PADMAGNC  DIM       3      325   Health Agency (Cat HA)      (patmi1af.ptmiagnc)
.PIPE     DIM       1      327   Pipe Delimeter
PADMOGNO  DIM       8      329   Original Admission Number   (patmi1af.ptmiogno)
.
. End of Record            336
.
.
.         ACC Data Records
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
.PADMTYPE DIM       1      1      * I/P record type
.                                     1 = ACC Data
.PIPE     DIM       1      2      * Pipe Delimiter
.PADMURNO DIM       8      3      * U/R Number                        (ptwcurno)
.PIPE     DIM       1      11     * Pipe Delimiter
ACCDNAME  DIM       30     12     * Employer Name                     (wcename)
.PIPE     DIM       1      42     * Pipe Delimiter
ACCDADD1  DIM       35     43     * Employer Address Line 1           (wceadd1)
.PIPE     DIM       1      78     * Pipe Delimiter
ACCDADD2  DIM       35     79     * Employer Address Line 2           (wceadd2)
.PIPE     DIM       1      114    * Pipe Delimiter
ACCDADD3  DIM       35     115    * Employer Address Line 3           (wceadd3)
.PIPE     DIM       1      150    * Pipe Delimiter
ACCDADD4  DIM       35     151    * Employer Address Line 4           (wceadd4)
.PIPE     DIM       1      186    * Pipe Delimiter
ACCDPOST  DIM       8      187    * Employer Postcode                 (wcepost)
.PIPE     DIM       1      195    * Pipe Delimiter
ACCDTELP  DIM       20     196    * Employer Telephone                (wcetele)
.PIPE     DIM       1      216    * Pipe Delimiter
ACCDACDT  DIM       8      217    * Date of Accident (ccyymmdd)       (wcacdat)
.PIPE     DIM       1      225    * Pipe Delimiter
ACCDACPT  DIM       1      226    * Accepted by Ins. Co. (Y/N)        (wcaccpt)
.PIPE     DIM       1      227    * Pipe Delimiter
ACCDINSR  DIM       6      228    * Insurance Company Code            (wcicode)
.PIPE     DIM       1      234    * Pipe Delimiter
ACCDCLNO  DIM       20     235    * Insurance Claim Number            (wcclmno)
.PIPE     DIM       1      255    * Pipe Delimiter
ACCDCOM1  DIM       40     256    * Comments 1                        (wccomn1)
.PIPE     DIM       1      296    * Pipe Delimiter
ACCDCOM2  DIM       40     297    * Comments 2                        (wccomn2)
.PIPE     DIM       1      337    * Pipe Delimiter
ACCDALOC  DIM       50     338    * Accident Location                 (pmwxaloc)
.PIPE     DIM       1      388    * Pipe Delimiter
ACCDCINJ  DIM       3      389    * Cause of Injury (Cat IK)          (pmwxcinj)
.PIPE     DIM       1      392    * Pipe Delimiter
ACCDICOD  DIM       3      393    * Injury Code (Cat IJ)              (pmwxicod)
.PIPE     DIM       1      396    * Pipe Delimiter
ACCDCNAM  DIM       40     397    * Contact Name                      (pmwxcnam)
.PIPE     DIM       1      437    * Pipe Delimiter
ACCDCDTE  DIM       8      438    * Date Record Created (ccyymmdd)    (pmwxcdte)
.PIPE     DIM       1      446    * Pipe Delimiter
ACCDCTIM  DIM       8      447    * Time Record Created (hh:mm:ss)    (pmwxctim)
.PIPE     DIM       1      455    * Pipe Delimiter
ACCDWEBC  DIM       10     456    * WEB User ID Record Creator        (pmwxwebc)
.PIPE     DIM       1      466    * Pipe Delimiter
ACCDLUPD  DIM       8      467    * Last Update Date (ccyymmdd)       (pmwxlupd)
.PIPE     DIM       1      475    * Pipe Delimiter
ACCDLUPT  DIM       8      476    * Last Update Time (hh:mm:ss)       (pmwxlupt)
.PIPE     DIM       1      484    * Pipe Delimiter
ACCDWEBU  DIM       10     485    * WEB User ID Record Updator        (pmwxwebu)
.PIPE     DIM       1      495    * Pipe Delimiter
ACCDACCF  DIM       3      496    * Work Related (Cat IQ)             (pmwxaccf)
.PIPE     DIM       1      499    * Pipe Delimiter
ACCDPLIN  DIM       3      500    * Place Injury Occurred (Cat IP)    (pmwxplin)
.PIPE     DIM       1      503    * Pipe Delimiter
ACCDACTI  DIM       3      504    * Activity When Injured (Cat IO)    (pmwxacti)
.PIPE     DIM       1      507    * Pipe Delimiter
ACCDADTE  DIM       8      508    * ACC Decline Date (ccyymmdd)       (pmwxadte)
.PIPE     DIM       1      516    * Pipe Delimiter
ACCDATME  DIM       8      517    * Accident Time (hh:mm:ss)          (pmwxatme)
.PIPE     DIM       1      525    * Pipe Delimiter
ACCDACLC  DIM       3      526    * Accident Location (Cat IM)        (pmwxaclc)
.PIPE     DIM       1      529    * Pipe Delimiter
ACCDAINZ  DIM       1      530    * Accident in NZ (Y/N)              (pmwxainz)
.PIPE     DIM       1      531    * Pipe Delimiter
ACCDMOVV  DIM       1      532    * Involves Moving Vehicle           (pmwxmovv)
.                                    on Public Road (Y/N)
.PIPE     DIM       1      533    * Pipe Delimiter
ACCDSPTI  DIM       1      534    * Sporting Injury (Y/N)             (pmwxspti)
.PIPE     DIM       1      535    * Pipe Delimiter
ACCDSPRT  DIM       3      536    * Sport Name (Cat IB)               (pmwxsprt)
.PIPE     DIM       1      539    * Pipe Delimiter
ACCDRECI  DIM       1      540    * Recurring Injury Indicator (Y/N)  (pmwxreci)
.PIPE     DIM       1      541    * Pipe Delimiter
ACCDTRIC  DIM       1      542    * Treatment Injury Claim (Y/N)      (pmwxtric)
.PIPE     DIM       1      543    * Pipe Delimiter
ACCDESTA  DIM       3      544    * Employment Status (Cat IF)        (pmwxesta)
.PIPE     DIM       1      547    * Pipe Delimiter
ACCDPDDT  DIM       8      548    * Patient Declaration Date          (pmwxpddt)
.                                     (ccyymmdd)
.PIPE     DIM       1      556    * Pipe Delimiter
ACCDARG1  DIM       20     557    * Authorised Representative         (pmwxarg1)
.                                     Given Name 1
.PIPE     DIM       1      577    * Pipe Delimiter
ACCDARG2  DIM       20     578    * Authorised Representative         (pmwxarg2)
.                                     Given Name 2
.PIPE     DIM       1      598    * Pipe Delimiter
ACCDARSN  DIM       25     599    * Authorised Representative         (pmwxasrn)
.                                     Surname
.PIPE     DIM       1      624    * Pipe Delimiter
ACCDARTL  DIM       4      625    * Authorised Representative         (pmwxartl)
.                                     Title (pmstleaf)
.PIPE     DIM       1      629    * Pipe Delimiter
ACCDARRP  DIM       10     630    * Authorised Representative         (pmwxarrp)
.                                     Relation
.PIPE     DIM       1      640    * Pipe Delimiter
ACCDASST  DIM       1      641    * Assistance is Required (Y/N)      (pmwxasst)
.PIPE     DIM       1      642    * Pipe Delimiter
ACCDNEED  DIM       1      643    * Need to Call HP (Y/N)             (pmwxneed)
.PIPE     DIM       1      644    * Pipe Delimiter
ACCDCONT  DIM       1      645    * Continue Normal Hours of          (pmwxcont)
.                                     Work (Y/N)
.PIPE     DIM       1      646    * Pipe Delimiter
ACCDALTW  DIM       1      647    * Alternative Work Indicator (Y/N)  (pmwxaltw)
.PIPE     DIM       1      648    * Pipe Delimiter
ACCDTYPA  DIM       3      649    * Type of Alternative Work (Cat IH) (pmwxtypa)
.PIPE     DIM       1      652    * Pipe Delimiter
ACCDSALT  DIM       8      653    * Start Date of Alternative         (pmwxsalt)
.                                     Work (ccyymmdd)
.PIPE     DIM       1      661    * Pipe Delimiter
ACCDHPDA  DIM       2      662    * Hours per Day of Alternative      (pmwxhpda)
.                                     Work
.PIPE     DIM       1      664    * Pipe Delimiter
ACCDUNFD  DIM       3      665    * Unfit for Work for Duration       (pmwxunfd)
.PIPE     DIM       1      668    * Pipe Delimiter
ACCDUNFT  DIM       3      669    * Unfit for Work for Type (Cat UI)  (pmwxunft)
.PIPE     DIM       1      672    * Pipe Delimiter
ACCDFISD  DIM       8      673    * Full Incapacity Start Date        (pmwxfisd)
.                                     (ccyymmdd)
.PIPE     DIM       1      681    * Pipe Delimiter
ACCDRNWD  DIM       8      682    * Return to Normal Work Date        (pmwxrnwd)
.                                     (ccyymmdd)
.PIPE     DIM       1      690    * Pipe Delimiter
ACCDCSTA  DIM       1      691    * Claim Status                      (pmwxcsta)
.                                     0 = Existing
.                                     1 = Parked
.                                     2 = Completed
.PIPE     DIM       1      692    * Pipe Delimiter
ACCDTWRK  DIM       3      693    * Type of Work (Cat IX)             (pmwxtwrk)
.PIPE     DIM       1      696    * Pipe Delimiter
ACCDOEST  DIM       50     697    * Other Employment Status           (pmwxoest)
.PIPE     DIM       1      747    * Pipe Delimiter
ACCDTPRO  DIM       10     748    * HCP Treatment Provider            (pmwxtpro)
.PIPE     DIM       1      758    * Pipe Delimiter
ACCDECOD  DIM       6      759    * Employer Code (pateoraf)          (pmwxecod)
.PIPE     DIM       1      765    * Pipe Delimiter
ACCDTYP1  DIM       3      766    * Hard-coded Comment Type           (accmtype)
.                                     001 = Cause of Injury
.PIPE     DIM       1      769    * Pipe Delimiter
ACCDDAT1  DIM       500    770    * Cause of Injury Comments          (accmdata)
.PIPE     DIM       1     1270    * Pipe Delimiter
ACCDTYP2  DIM       3     1271    * Hard-coded Comment Type           (accmtype)
.                                     002 = Injury Comments
.PIPE     DIM       1     1274    * Pipe Delimiter
ACCDDAT2  DIM       500   1275    * Injury Comments                   (accmdata)
.PIPE     DIM       1     1775    * Pipe Delimiter
ACCDTYP3  DIM       3     1776    * Hard-coded Comment Type           (accmtype)
.                                     003 = Alternative Work Restrictions
.PIPE     DIM       1     1779    * Pipe Delimiter
ACCDDAT3  DIM       500   1780    * Alternative Work Restrictions Comments
.                                                                     (accmdata)
. End of Record           2280
.
. Visit comment header upload file layout
.
.Name     Type    Length Start   Description
.----     ----    ------ -----   -----------
.PADMTYPE DIM       1      1     Comment Header (2)
.PIPE     DIM       1      2     Pipe Delimiter
.PADMURNO DIM       8      3     U/R Number
.PIPE     DIM       1      11    Pipe Delimiter
CSMDVISN  DIM       8      12    U/R Number
.PIPE     DIM       1      20    Pipe Delimiter
CSMDTYPE  DIM       3      21    Comment Type
.PIPE     DIM       1      24    Pipe Delimiter
CSMDNOTE  DIM       6      25    Counter/Note Number
.PIPE     DIM       1      31    Pipe Delimiter
CSMDDATE  DIM       8      32    Date Record Created (ccyymmdd)
.PIPE     DIM       1      40    Pipe Delimiter
CSMDTIME  DIM       8      41    Time Record Created (hh:mm:ss)
.PIPE     DIM       1      49    Pipe Delimiter
CSMDUSER  DIM       10     50    User Who Created Record
.PIPE     DIM       1      60    Pipe Delimiter
CSMDOCCG  DIM       3      61    Occupational Group WEB User ID
.PIPE     DIM       1      64    Pipe Delimiter
CSMDDELT  DIM       1      65    Delete Indicator (0=No, 1=Yes)
.PIPE     DIM       1      66    Pipe Delimiter
CSMDDDAT  DIM       8      67    Date Record Deleted (ccyymmdd)
.PIPE     DIM       1      75    Pipe Delimiter
CSMDDTIM  DIM       8      76    Time Record Deleted (hh:mm:ss)
.PIPE     DIM       1      84    Pipe Delimiter
CSMDDUSE  DIM       10     85    User Who Deleted Record (websecaf)
.PIPE     DIM       1      95    Pipe Delimiter
CSMDDOCC  DIM       3      96    Occupational Grp WEB UserID Deleted
.
.End of Record             99
.
. Visit comment detail upload file layout
.
.Name     Type    Length Start   Description
.----     ----    ------ -----   -----------
.PADMTYPE DIM       1      1     Comment Details (3)
.PIPE     DIM       1      2     Pipe Delimiter
.PADMURNO DIM       8      3     U/R Number
.PIPE     DIM       1      11    Pipe Delimiter
CSMTVISN  DIM       8      12    U/R Number
.PIPE     DIM       1      20    Pipe Delimiter
CSMTTYPE  DIM       3      21    Comment Type
.PIPE     DIM       1      24    Pipe Delimiter
CSMTNOTE  DIM       6      25    Counter/Note Number
.PIPE     DIM       1      31    Pipe Delimiter
CSMTUNIQ  DIM       3      32    Line Number
.PIPE     DIM       1      35    Pipe Delimiter
CSMTCMNT  DIM       70     36    Comment
.
.End of Record            106
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ACCCMTYP  DIM       3
ACCCOMNT  DIM       500
ACCCOUNT  FORM      1
ADDCOUNT  FORM      8             * added record count
ADMISSNO  DIM       8
.
BCASTFLG  FORM      1             * flag to broadcast A31 PMI update message
.                                      0 = no update, so don't broadcast A31
.                                      1 = update, so broadcast A31
.
CATEGORY  DIM       2
CODCOUNT  FORM      8             * code error record count
COMCOUNT  FORM      8             * comment error record count
COMMTLEN  FORM      4
CRTBKFLG  FORM      1
CURRCENT  FORM      2             * current century
CURRDATE  DIM       8             * current date
.
DATEFLG1  FORM      1             * Date Type flag
.                                     0 = full date (ccyymmdd)
.                                     1 = partial date (ccyymm)
DATEFLG2  FORM      1             * Dates Allowed flag
.                                     0 = any date allowed
.                                     1 = future dates not allowed
.                                     2 = past dates not allowed
.
DIM1A     DIM       1
DIM1B     DIM       1
DIM2C     DIM       2
DIM2D     DIM       2
DIM2H     DIM       2
DIM2M     DIM       2
DIM2S     DIM       2
DIM2Y     DIM       2
DIM3      DIM       3
DIM4      DIM       4
DIM44     DIM       44
DIM100    DIM       100
DTECOUNT  FORM      8             * date error record count
DUPCOUNT  FORM      8             * duplicate record count
.
ERORDESC  DIM       70
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
FORM3     FORM      3
FORM8     FORM      8
FORM10    FORM      10
.
LASTDATE  DIM       8
LINENUMB  FORM      3
.
MANCOUNT  FORM      8             * mandatory field error record count
.
NUMCOUNT  FORM      8             * numeric error record count
.
PARCOUNT  FORM      8             * susp/acc record count where parent has error
PTCGDATE  DIM      8
.
RECCOUNT  FORM      8             * record read counter
RDCOUNT1  FORM      8             * Comment header record read count
RDCOUNT2  FORM      8             * Comment details record read count
WRCOUNT1  FORM      8             * Comment header record written count
WRCOUNT2  FORM      8             * Comment details record written count
.
SAVEURNO  DIM       8             * saved U/R number
SAVTXWRD  DIM       3
SEQCOUNT  FORM      8             * sequence error record count
STRTDATE  DIM       8
.
TEMPCATG  DIM       6             * Category (or HF for HF Table validation)
TEMPCODE  DIM       10            * Coded field (length = max code field length)
TEMPDATE  DIM       8
TEMPTIME  DIM       8
TEMPTYPE  FORM      2             * Type of coded field
.                                     1 = patcodes
.                                     ....add other files as required
TIMCOUNT  FORM      8             * time error record count
TIMEFLAG  FORM      1             * time flag 
.                                     0 = any time allowed
.                                     1 = future times not allowed
.                                     2 = past times not allowed
TMPFIELD  DIM       8             * Field name
TMPSTRNG  DIM       40            * Temporary string (max field length)
TYPEFORM  FORM      1             * W/L record type
.                                       0 = W/L record
.                                       1 = Suspension record
.                                       2 = ACC record
.
UNKCOUNT  FORM      8             * unknown U/R counter
URNUMBER  DIM       8
USERID    DIM       10
.
VALPARNT  FORM      1             * Valid parent record flag
.                                       0 = valid parent record
.                                       1 = invalid parent record
VCHKFLAG  FORM      1             * Validation flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
.
WEBTITLE  DIM       80
.
.
.
. PROGRAM CONSTANTS
. -----------------
CATAP     INIT      "ap"
PIPE      INIT      "|"
ZERO4     INIT      "0000"
.
.
.-----------------------------------------------------------------------
PRGID     INIT      "CONVPADM"
PRGNAM    INIT      "Upload Preadmission Details"
VERSION   INIT      "V12.00.02"
.-----------------------------------------------------------------------
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with upload
.
MAIN1000  CALL      OPEN0000               * open upload file
          BRANCH    EXIT,MAIN0100          * file not found
.
          CALL      DMAP0000               * display mapping files
          BRANCH    EXIT,MAIN0100:         * no (to continue)
                         MAIN9999          * cancel (to continue)
.
          CALL      ASKQ0000               * validation run only ?
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      UPLD0000               * process upload
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"ibaalvaf";
          OPEN      IBAALVA1,"ibaalvaf"
          OPEN      IBAALVA2,"ibaalvaf"
.
          DISPLAY   *P64:24,"acccmtaf";
          OPEN      ACCCMTA1,"acccmtaf"
.
          DISPLAY   *P64:24,"ibapostf";
          OPEN      IBAPOST1,"ibapostf"
.
          DISPLAY   *P64:24,"mrtmasaf";
          OPEN      MRTMASA1,"mrtmasaf"
          OPEN      MRTMASA2,"mrtmasaf"
.
          DISPLAY   *P64:24,"mrtvisaf";
          OPEN      MRTVISA1,"mrtvisaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patcmcaf";
          OPEN      PATCMCA1,"patcmcaf"
.
          DISPLAY   *P64:24,"vismdtaf";
          OPEN      VISMDTA1,"vismdtaf"
          DISPLAY   *P64:24,"vismtxaf";
          OPEN      VISMTXA1,"vismtxaf"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"patnidaf";
          OPEN      PATNIDA1,"patnidaf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P64:24,"pmscuraf";
          OPEN      PMSCURA1,"pmscuraf"
.
          DISPLAY   *P64:24,"pmshcgaf";
          OPEN      PMSHCGA1,"pmshcgaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pmsprgaf";
          OPEN      PMSPRGA1,"pmsprgaf"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"visiauaf";
          OPEN      VISIAUA1,"visiauaf"
.
          DISPLAY   *P64:24,"visintaf";
          OPEN      VISINTA1,"visintaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
          READ      CONTROLF,HUND10;*243,PTCNCOMF:
                                    *248,PTCNEPAY
.
.         If NZ, open files for ACC data
.
          PERFORM   PTCNHDPS,OPNACC00
.
          MATCH     "1",PTCNEPAY
          IF        @EQUAL
            DISPLAY   *P64:24,"pmspayaf";
            OPEN      PMSPAYA1,"pmspayaf"
.
            DISPLAY   *P64:24,"vispayaf";
            OPEN      VISPAYA1,"vispayaf"
            OPEN      VISPAYA2,"vispayaf"
          ENDIF
.
          MOVE      ONE,CNOUNDLN
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data upload                         *
.*                        TRUE  (1)  Exit selected                           *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run data upload
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               OPEN0000              Called by: MAIN0000   *
.*                  Open upload file (convpadm.txt) and mapping tables       *
.*****************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      PRADMUPL,"convpadm"
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
.         Open all mapping files if found
.
.         Category-Codes mapping file (patcodes)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP1,"catcodes"             * Cat-Code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,CATCDFLG              * no
          ELSE
            MOVE      ONE,CATCDFLG               * yes
          ENDIF
.
.         Insurance mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP2,"insuranc"             * insurance file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,INSRFLAG              * no
          ELSE
            MOVE      ONE,INSRFLAG               * yes
          ENDIF
.
.         Employer mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP3,"employer"             * employer file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,EMPLFLAG              * no
          ELSE
            MOVE      ONE,EMPLFLAG               * yes
          ENDIF
.
.         HCP mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP4,"hcpcode"              * hcp file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HCPCDFLG              * no
          ELSE
            MOVE      ONE,HCPCDFLG               * yes
          ENDIF
.
.         Title (pmstleaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP5,"titlecod"        * Check for title code file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,TITLECOD         * file doesnt exist
          ELSE
            MOVE      ONE,TITLECOD          * file does exist
          ENDIF
.
.         Relationship (pmsrelaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP6,"relation"       * Check for NOK relationship file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,RELATION         * file doesnt exist
          ELSE
            MOVE      ONE,RELATION          * file does exist
          ENDIF
.
.         HCP Practice mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP7,"hcppract"             * hcp practice file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HCGCDFLG              * no
          ELSE
            MOVE      ONE,HCGCDFLG               * yes
          ENDIF
.
.         Hospital mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP8,"hospital"             * hospital file found?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HOSPLFLG              * no
          ELSE
            MOVE      ONE,HOSPLFLG               * yes
          ENDIF
.
.         Ward/Bed mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP9,"wardbed"              * ward/bed file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,WRDBDFLG              * no
          ELSE
            MOVE      ONE,WRDBDFLG               * yes
          ENDIF
.
.         Doctor mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP10,"doctor"              * doctor file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DOCTRFLG              * no
          ELSE
            MOVE      ONE,DOCTRFLG               * yes
          ENDIF
.
.         Health Fund/Table mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP11,"healthfd"            * health fund file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HEALTHFD              * no
          ELSE
            MOVE      ONE,HEALTHFD               * yes
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  DISPLAY   *P1:24,*EL,*B,"Upload file - convpadm.txt - not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.******************************************************************************
.*                                  DMAP0000              Called by: MAIN0000 *
.*                       Display File Name & Mapping files                    *
.* Requires: Mapping Flags                                                    *
.* Returns:  EXIT  0 = Ok to continue                                         *
.*                 1 = No selected                                            *
.*                 2 = Cancel selected                                        *
.******************************************************************************
.
DMAP0000  DISPLAY   *P1:3,*EF:
                    *P28:4,*V2LON,*ULON,"Mapping Tables"
.
          MOVE      DNO,DIM3
          LOAD      DIM3,CATCDFLG,DYES
.
          DISPLAY   *P1:6,*EL,"Category/Codes (patcodes)              ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,INSRFLAG,DYES
.
          DISPLAY   *P1:7,*EL,"Mapping Insurer Code (patin1af)        ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,EMPLFLAG,DYES
.
          DISPLAY   *P1:8,*EL,"Mapping Employer Code (pateoraf)       ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HCPCDFLG,DYES
.
          DISPLAY   *P1:9,*EL,"Mapping HCP Code (pmshcpaf)            ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,TITLECOD,DYES
.
          DISPLAY   *P1:10,*EL,"Mapping Title Code (pmstleaf)          ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,RELATION,DYES
.
          DISPLAY   *P1:11,*EL,"Mapping Relation Code (pmsrelaf)       ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,WRDBDFLG,DYES
.
          DISPLAY   *P1:12,*EL,"Ward/Bed (patwr1af)                    ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DOCTRFLG,DYES
.
          DISPLAY   *P1:13,*EL,"Doctor (patdo1af)                      ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HEALTHFD,DYES
.
          DISPLAY   *P1:14,*EL,"Health Fund (patfn1af)                 ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HCPCDFLG,DYES
.
          DISPLAY   *P1:15,*EL,"HCP (pmshcpaf)                         ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HCGCDFLG,DYES
.
          DISPLAY   *P1:16,*EL,"HCP Practice (pmshcgaf)                ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HOSPLFLG,DYES
.
          DISPLAY   *P1:17,*EL,"Hospital (pathspaf)                    ":
                    *V2LON,DIM3
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,DMAP9000:        * yes
                          DMAP9100:        * no
                          DMAP9200         * cancel
.
DMAP9000  MOVE      ZERO,EXIT
          GOTO      DMAP9999
.
DMAP9100  MOVE      ONE,EXIT
          GOTO      DMAP9999
.
DMAP9200  MOVE      TWO,EXIT
.
DMAP9999  RETURN
+
.*****************************************************************************
.*                               ASKQ0000              Called by: MAIN0000   *
.*                  Ask if running validation only                           *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.*****************************************************************************
.
ASKQ0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload":
                    *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
ASKQ1000  MOVE      ANSY,ANS
          KEYIN     *P1:10,*EL,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:10,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DYES,*HOFF:
                      *P35:10,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DNO,*HOFF:
                      *P35:10,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ1000                     * invalid input
.
ASKQ9999  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                  Process the PMI upload file records                       *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CURRCENT
.
          DISPLAY   *P1:13,"Processing ",*V2LON,"convapdm.txt",*HOFF:
                    *P1:15,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:17,"U/R Number : ":
                    *P1:18,"Records    : "
.
          MOVE      ZERO,RECCOUNT                * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,COMCOUNT                * init. comment error rec.count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,DTECOUNT                * init. date error record count
          MOVE      ZERO,TIMCOUNT                * init. time error record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
          MOVE      ZERO,NUMCOUNT                * init. num error record count
          MOVE      ZERO,UNKCOUNT                * init. unknown pt record count
          MOVE      ZERO,SEQCOUNT                * init. seq. error record count
          MOVE      ZERO,PARCOUNT                * init. parent error rec. count
          MOVE      SP8,SAVEURNO                 * initialise saved U/R
          MOVE      ZERO,RDCOUNT1
          MOVE      ZERO,RDCOUNT2
          MOVE      ZERO,WRCOUNT1
          MOVE      ZERO,WRCOUNT2
.
          CALL      HEAD0000                     * Print the report header
.
.         Loop through upload file records.
.         Load in the first two fields as they are common to
.         Preadmission and ACC records.
.
UPLD1000  READ      PRADMUPL,SEQ;PADMTYPE,PADMURNO;
          GOTO      UPLD9000 IF OVER
.
          ADD       ONE,RECCOUNT                 * increment records read
          IF        (RECCOUNT%1000) = 0 | RECCOUNT = 1
            DISPLAY   *P17:17,*V2LON,PADMURNO:
                      *P17:18,RECCOUNT;
          ENDIF
.
          PACK      PADMTYPE,PADMTYPE,SP1
          MATCH     SP1,PADMTYPE
          IF        @EQUAL
            MOVE      SP70,DIM44
            MOVE      SP8,SAVEURNO
            MOVE      "I/P record type is blank ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,MANCOUNT               * increment mand. record count
            READ      PRADMUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          TYPE      PADMTYPE
          IF        !@EQUAL
            MOVE      SP70,DIM44
            MOVE      SP8,SAVEURNO
            MOVE      "I/P record type is not numeric ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,NUMCOUNT               * incr. numeric error rec count
            READ      PRADMUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          MOVE      ZERO,TYPEFORM
          MOVE      PADMTYPE,TYPEFORM
          COMPARE   TYPEFORM,THREE                * record type 0-3 ?
          IF        @LESS
            MOVE      SP70,DIM44
            MOVE      SP8,SAVEURNO
            MOVE      "I/P record type is not valid ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,NUMCOUNT               * incr. numeric erorr rec count
            READ      PRADMUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          PACK      PADMURNO,PADMURNO,SP8
          RJUSTIFY  PADMURNO
.
          BRANCH   TYPEFORM,UPLD1100,UPLD1020,UPLD1030
.
.         Pre-admission record type
.
          READ      PRADMUPL,SEQ;PADMDATE,PADMTIME,PADMWARD,PADMWBED,PADMADOC:
                                 PADMSRCE,PADMATYP,PADMCLSS,PADMCARE,PADMHFND:
                                 PADMHFTB,PADMHFMN,PADMDIAG,PADMDEPT,PADMCOMP:
                                 PADMDIET,PADMSTAY,PADMDHOS,PADMPCMX,PADMGSTA:
                                 PADMCMXP,PADMRHC1,PADMRH1G,PADMIDUS,PADMAPWD:
                                 PADMPOWD,PADMPOBD,PADMMHLS,PADMEMPL,PADMPALC:
                                 PADMUDIN,PADMUREA,PADMPACC,PADMPRGM,PADMSLOC:
                                 PADMSCLI,PADMSTRA,PADMMHOS,PADMAVIS:
                                 PADMPHPU,PADMAGNC,PADMOGNO
.
          MOVE      ZERO,BCASTFLG                * initialise A31 broadcast flag
          MOVE      ZERO,CRTBKFLG
          GOTO      UPLD1500
.
. Visit Comment Header Type
.
UPLD1020  CALL      UPLHDR00
          GOTO      UPLD1000
.
. Visit Comment Details Type
.
UPLD1030  CALL      UPLDET00
          GOTO      UPLD1000
.
.         ACC record type
.
UPLD1100  READ      PRADMUPL,SEQ;ACCDNAME,ACCDADD1,ACCDADD2,ACCDADD3,ACCDADD4:
                                 ACCDPOST,ACCDTELP,ACCDACDT,ACCDACPT,ACCDINSR:
                                 ACCDCLNO,ACCDCOM1,ACCDCOM2,ACCDALOC,ACCDCINJ:
                                 ACCDICOD,ACCDCNAM,ACCDCDTE,ACCDCTIM,ACCDWEBC:
                                 ACCDLUPD,ACCDLUPT,ACCDWEBU,ACCDACCF,ACCDPLIN:
                                 ACCDACTI,ACCDADTE,ACCDATME,ACCDACLC,ACCDAINZ:
                                 ACCDMOVV,ACCDSPTI,ACCDSPRT,ACCDRECI,ACCDTRIC:
                                 ACCDESTA,ACCDPDDT,ACCDARG1,ACCDARG2,ACCDARSN:
                                 ACCDARTL,ACCDARRP,ACCDASST,ACCDNEED,ACCDCONT:
                                 ACCDALTW,ACCDTYPA,ACCDSALT,ACCDHPDA,ACCDUNFD:
                                 ACCDUNFT,ACCDFISD,ACCDRNWD,ACCDCSTA,ACCDTWRK:
                                 ACCDOEST,ACCDTPRO,ACCDECOD,ACCDTYP1,ACCDDAT1:
                                 ACCDTYP2,ACCDDAT2,ACCDTYP3,ACCDDAT3
.
          COMPARE   ONE,PTCNHDPS                 * nz ?
          GOTO      UPLD1000 IF NOT EQUAL        * no - ignore record
.
UPLD1500  CALL      POUT0000                     * pad out fields with spaces
.
          BRANCH    TYPEFORM,UPLD2000            * acc record
.
.         Preadmission type record
.
          CALL      CLPATMAS                     * clear database variables
          CALL      CLPATMSX
          CALL      CLPATMIS
          CALL      CLPMSPX2
          CALL      CLWATTR1
          CALL      CLWATTX1
          CALL      CLPATVIS
          CALL      CLPMSVX1
          CALL      CLWEBSEC
          MOVE      ONE,VALPARNT                 * set for invalid parent
.
          CALL      VURN0000                     * validate U/R
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          MOVE      PADMURNO,SAVEURNO            * save U/R number
          GOTO      UPLD3000
.
.         This is an acc record, so clear the watwc1af & pmswc1af database
.         variables and make sure that the patient hasn't changed from the
.         last referral record.
.
UPLD2000  CALL      CLPATWC1                     * clear patwc1af variables
          CALL      CLPMSWX1                     * clear pmswx1af variables
.
          MATCH     PADMURNO,SAVEURNO            * same U/R as A/H entry record?
          IF        !@EQUAL
            MOVE      SP70,DIM44
            MOVE      "ACC record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
.
UPLD3000  CALL      MAND0000                     * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      DVAL0000                     * date validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      TVAL0000                     * time validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VNUM0000                     * validate numeric fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      SETV0000                     * set up file variables
.
          CALL      CVAL0000                     * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      CVIS0000                     * check for alt. visit id.
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
.         Write the record details to file
.
          BRANCH    TYPEFORM,UPLD4000            * acc record type
.
.         Preadmission type record
.
          MOVE      ZERO,VALPARNT                * set flag for valid parent
          BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          MOVE      AADMNO,KEY8
          CALL      RAPTMIS1
          IF        OVRCD = 0
            MOVE      "I/P Visit record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
            GOTO      UPLD1000
          ENDIF
.
          CALL      WRMISS1                      * write new record
          CALL      WVIS0000                   * write patvisaf/pmsvx1af records
.
.         Update PMI for HF/Table and Diet and broadcast A31 message
.
          COMPARE   ONE,BCASTFLG
          IF        @EQUAL
            CALL      UPMAST1
.
            CALL      PMIGTNID                 * get national id for dgate write
            MOVE      NMPNUMB,PTNINMPI
            MOVE      ONE,HL7TRGID
            MOVE      SP8,HL7INCLD
            PROC      DGCLICUP                   * broadcast PMI update
          ENDIF
.
          CALL      ADDVIS00                     * write MR visit link
          CALL      AVIS0000                     * write alt. visit id.
          CALL      WRCPT000                     * check if current patient
          MOVE      "CONVPADM  ",USERID
          CALL      WRINT000                     * write interpreter details
          CALL      BRDPRE00                     * broadcast HL7 A14
          CALL      AEXP0000                     * write expected payors
          ADD       ONE,ADDCOUNT                 * increment added record count
          MOVE      ONE,CRTBKFLG
          GOTO      UPLD1000                     * get next record
.
.         ACC record type
.
UPLD4000  BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          MOVE      AADMNO,KEY8
          CALL      WRTACC00                     * common routine from UPACCDAT
          CALL      ACCCOM00                     * process ACC comments
          GOTO      UPLD1000                     * get next record
.
.         Upload completed
.
UPLD9000  ASSIGN    (CODCOUNT+COMCOUNT+DUPCOUNT+DTECOUNT+TIMCOUNT+MANCOUNT+NUMCOUNT+UNKCOUNT+SEQCOUNT+PARCOUNT),FORM10
          IF        FORM10 > 0
            CALL      LINE0000                   * print bottom line if errors
          ENDIF
.
          COMPARE   CLNO,FIFTY                   * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P17:18,*V2LON,RECCOUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",RECCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT,*N:
                    *1,"Duplicate Records detected            - ",DUPCOUNT,*N:
                    *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records where comments didn't load    - ",COMCOUNT,*N:
                    *1,"Records with invalid dates detected   - ",DTECOUNT,*N:
                    *1,"Records with invalid times detected   - ",TIMCOUNT,*N:
                    *1,"Records with unknown U/R numbers      - ",UNKCOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT,*N:
                    *1,"Records with invalid numbers detected - ",NUMCOUNT,*N:
                    *1,"Records out of sequence               - ",SEQCOUNT,*N:
                    *1,"Other records with parent errors      - ",PARCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,MAND5000            * acc record type
.
          MOVE      PADMDATE,TMPSTRNG            * admission date
          MOVE      "PADMDATE",TMPFIELD
          CALL      CHKM0000
.
          MOVE      PADMTIME,TMPSTRNG            * admission time
          MOVE      "PADMTIME",TMPFIELD
          CALL      CHKM0000
.
.         If Bed is populated, then Ward is mandatory
.
          MATCH     SP3,PADMWBED
          GOTO      MAND1000 IF EQUAL
.
          MATCH     SP3,PADMWARD
          IF        @EQUAL
            MOVE      PADMWARD,TMPSTRNG
            MOVE      "PADMWARD",TMPFIELD
            CALL      CHKM0000
          ENDIF
.
MAND1000  MATCH     SP3,PADMPOBD
          GOTO      MAND2000 IF EQUAL
.
          MATCH     SP3,PADMPOWD
          IF        @EQUAL
            MOVE      PADMPOWD,TMPSTRNG
            MOVE      "PADMPOWD",TMPFIELD
            CALL      CHKM0000
          ENDIF
.
.         If health fund table or health fund membership number is populated,
.         then health fund is mandatory
.
MAND2000  MATCH     SP8,PADMHFTB
          IF        @EQUAL
            MATCH     SP70,PADMHFMN
            GOTO      MAND9000 IF EQUAL
          ENDIF
.
          MATCH     SP6,PADMHFND
          IF        @EQUAL
            MOVE      PADMHFND,TMPSTRNG
            MOVE      "PADMHFND",TMPFIELD
            CALL      CHKM0000
          ENDIF
.
          GOTO      MAND9000
.
.         ACC type records only
.
MAND5000  CALL      MANACC00                     * common routine from UPACCDAT
.
MAND9000  BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: TMPSTRNG - field to be checked                                  *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     TMPSTRNG,SP8                 * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          PRINT     *1,"< convpadm.txt >"
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"U/R No.",*12,PIPE,*14,"Patient Name":
                    *59,PIPE,*61,"Error Description",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  SETV0000              Called by: UPLD0000 *
.*                       Load the record variables                            *
.******************************************************************************
.
SETV0000  BRANCH    TYPEFORM,SETV5000            * acc record type
.
.         First generate a new visit number
.
          BRANCH    VCHKFLAG,SETV1000            * validation only
.
          READ      CONTROLF,HUND30;*75,PTCNUANV      * Using AN Visit Numbers
.
          MATCH     "1",PTCNUANV
          IF        @EQUAL
            CALL      GANV0000                * Get next AN visit number
            MOVE      PTCNNXTV,KEY8
          ELSE
            MOVE      " 10",PRXCODE                * Set to sector 10
            CALL      GETSLK00                     * Lock sector 10
            READ      CONTROLF,TEN;*1,FORM8
            ADD       ONE,FORM8
            WRITAB    CONTROLF,TEN;*1,FORM8
            CALL      RELSLK00                     * Release sector 10 lock
            SUB       ONE,FORM8
            MOVE      FORM8,KEY8
          ENDIF
.
          CALL      RDAVISA1                     * visit already on file ?
          COMPARE   ZERO,OVRCD
          GOTO      SETV0000 IF EQUAL            * yes - get next visit no
.
.         Set patmi1af fields
.
SETV1000  MOVE      KEY8,AADMNO
          MOVE      PADMURNO,AURNO
          MOVE      PADMDATE,ADATE
          MOVE      PADMDATE,ALACDTE
          MOVE      PADMTIME,ATIME
          MOVE      ONE,ASTAT
.
          MOVE      PADMWARD,PTMIXWRD
          MOVE      PADMWBED,PTMIEBED
          IF        WRDBDFLG = 1
            PACK      KEY6,PADMWARD,PADMWBED
            CALL      RDTEMP9                    * ward/bed code on map file ?
            IF        OVRCD = 0
              MOVE      NEWWARD,PTMIXWRD         * yes - load mapped code
              MOVE      NEWBED,PTMIEBED
            ENDIF
          ENDIF
.
          MOVE      PADMADOC,ADOCTA
          IF        DOCTRFLG = 1
            PACK      KEY6,PADMADOC
            CALL      RDTEMP10                   * doctor code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDCODE,ADOCTA          * yes - load mapped code
            ENDIF
          ENDIF
          MOVE      PADMADOC,PMVXDOCA
.
          MOVE      PADMSRCE,ASRCE
          IF        CATCDFLG = 1
            PACK      KEY5,ANSS,SP1,PADMSRCE
            CALL      RDTEMP1                   * ref. source code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ASRCE          * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMATYP,ATYPE
          IF        CATCDFLG = 1
            PACK      KEY5,ANSA,SP1,PADMATYP
            CALL      RDTEMP1                   * adm. type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ATYPE          * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMCLSS,ACLSS
          IF        CATCDFLG = 1
            PACK      KEY5,ANSP,SP1,PADMCLSS
            CALL      RDTEMP1                   * adm. class code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ACLSS          * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMCARE,ACARE
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,ANSC,PADMCARE
            CALL      RDTEMP1                   * care class code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ACARE          * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMHFND,AFUNDH
          MOVE      PADMHFTB,AFNDTB
          IF        HEALTHFD = 1
            PACK      KEY14,PADMHFND,PADMHFTB
            CALL      RDTEMP11                  * HF code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHFUND,AFUNDH         * yes - load mapped codes
              MOVE      NEWTABLE,AFNDTB
            ENDIF
          ENDIF
.
          MOVE      PADMHFMN,AFNDMM
.
.         If the HF details are blank, then default from the PMI,
.         otherwise load the pmi variables from the visit details
.
          MATCH     SP6,AFUNDH
          IF        @EQUAL
            MOVE      PFUNDH,AFUNDH
            MOVE      PFNDTB,AFNDTB
            MOVE      PFNDMM,AFNDMM
          ELSE
            MOVE      AFUNDH,PFUNDH
            MOVE      AFNDTB,PFNDTB
            MOVE      AFNDMM,PFNDMM
            MOVE      ONE,BCASTFLG               * set flag to b'cast A31 messg
          ENDIF
          MOVE      AFNDMM,PMVXFNDM
.
          MOVE      PADMDIAG,ADIAG1
.
          MOVE      PADMDEPT,ACLSSFT
          IF        CATCDFLG = 1
            PACK      KEY5,ANSA,ANSC,PADMDEPT
            CALL      RDTEMP1                   * department code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ACLSSFT        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMCOMP,ACLAIM
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,ANSL,PADMCOMP
            CALL      RDTEMP1                   * claim code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ACLAIM         * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMDIET,ADIET
          MATCH     SP6,ADIET
          IF        !@EQUAL
            MOVE      PADMDIET,PDIET
            MOVE      ONE,BCASTFLG              * set flag to b'cast A31 messg
          ENDIF
          IF        CATCDFLG = 1
            PACK      KEY5,ANSD,ANSC,PADMDIET
            CALL      RDTEMP1                   * diet code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,ADIET          * yes - load mapped code
              MOVE      NEWCTCOD,PDIET
            ENDIF
          ENDIF
.
          MOVE      PADMPHPU,PTMIPHPU
          IF        CATCDFLG = 1
            PACK      KEY5,ANSH,ANSA,PADMPHPU
            CALL      RDTEMP1                   * department code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PADMPHPU       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMAGNC,PTMIAGNC
          IF        CATCDFLG = 1
            PACK      KEY5,ANSA,ANSC,PADMAGNC
            CALL      RDTEMP1                   * department code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PTMIAGNC       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMSTAY,ASTAY
          MOVE      PADMDHOS,ADYHOSP
          MOVE      PADMPCMX,PTMIPCMX
          MOVE      PADMGSTA,PTMIGSTA
          MOVE      PADMCMXP,PTMICMXP
          MOVE      PADMOGNO,PTMIOGNO
.
          MOVE      "CONVPADM  ",PTMIWEBC
          MOVE      CURRDATE,PTMIDATC
          MOVE      CTIMEIS,PTMITIMC
          REP       " 0",PTMITIMC
.
.         Set pmsvx1af fields
.
          MOVE      PADMRHC1,PMVXRHC1
          IF        HCPCDFLG = 1
            PACK      KEY10,PADMRHC1
            CALL      RDTEMP4                   * HCP code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCPCD,PMVXRHC1       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMRH1G,PMVXRH1G
          IF        HCGCDFLG = 1
            PACK      KEY10,PADMRH1G
            CALL      RDTEMP7                   * HCP prac. code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCGCD,PMVXRH1G       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMIDUS,PMVXIDUS
          IF        CATCDFLG = 1
            PACK      KEY5,ANSV,ANSI,PADMIDUS
            CALL      RDTEMP1                   * int. stay code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMVXIDUS       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMAPWD,PMVXAPWD
          IF        CATCDFLG = 1
            PACK      KEY5,CATAP,PADMAPWD
            CALL      RDTEMP1                   * adm. point code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMVXAPWD       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMPOWD,PMVXPOWD
          MOVE      PADMPOBD,PMVXPOBD
          IF        WRDBDFLG = 1
            PACK      KEY14,PADMPOWD,PADMPOBD
            CALL      RDTEMP9                    * ward/bed code on map file ?
            IF        OVRCD = 0
              MOVE      NEWWARD,PMVXPOWD         * yes - load mapped code
              MOVE      NEWBED,PMVXPOBD
            ENDIF
          ENDIF
.
          MOVE      PADMEMPL,PMVXEMPL
          IF        CATCDFLG = 1
            PACK      KEY5,ANSK,ANSD,PADMEMPL
            CALL      RDTEMP1                   * emp. status code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMVXEMPL       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMPALC,PMVXPALC
          IF        CATCDFLG = 1
            PACK      KEY5,ANSK,ANSG,PADMPALC
            CALL      RDTEMP1                   * pall. care code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMVXPALC       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMUDIN,PMVXUDIN
          IF        CATCDFLG = 1
            PACK      KEY5,ANSK,ANSN,PADMUDIN
            CALL      RDTEMP1                   * dis. int. code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMVXUDIN       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMUREA,PMVXUREA
          IF        CATCDFLG = 1
            PACK      KEY5,ANSK,ANSO,PADMUREA
            CALL      RDTEMP1                   * unpl. read. code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMVXUREA       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMPACC,PMVXPACC
          IF        CATCDFLG = 1
            PACK      KEY5,ANSB,ANSP,PADMPACC
            CALL      RDTEMP1                   * pref. accm. code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMVXPACC       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMPRGM,PMVXPRGM
.
          MOVE      PADMSLOC,PMVXSLOC
          IF        CATCDFLG = 1
            PACK      KEY5,ANSS,ANSG,PADMSLOC
            CALL      RDTEMP1                   * locn. srce code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMVXSLOC       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMSCLI,PMVXSCLI
          IF        CATCDFLG = 1
            PACK      KEY5,ANSS,ANSH,PADMSCLI
            CALL      RDTEMP1                   * clin. srce code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMVXSCLI       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMSTRA,PMVXSTRA
          IF        CATCDFLG = 1
            PACK      KEY5,ANSS,ANSI,PADMSTRA
            CALL      RDTEMP1                   * tran. srce code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMVXSTRA       * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      PADMMHOS,PMVXMHOS
          IF        HOSPLFLG = 1
            PACK      KEY3,PADMMHOS
            CALL      RDTEMP8                   * hospital code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHOSPL,PMVXMHOS       * yes - load mapped code
            ENDIF
          ENDIF
.
.         Default common fields from PMI
.
          MOVE      PMPXABRG,PMVXABRG            * aboriginality
          MOVE      PMPXLNG1,PMVXLNG1            * preferred language
          MOVE      PPOST,PMVXPOST               * postcode
          MOVE      PMPXPRVI,PMVXPIND            * Privacy Indicator
          MOVE      PMPXCRIN,PMVXCSNR            * Consent Release of info
          MOVE      PMPXHOML,PMVXHOME            * Homeless status
.
          MOVE      AADMNO,PMVXVISN              * set other pmsvx1af fields
          MOVE      ADATE,PMVXVSDT
          MOVE      CURRDATE,PMVXCDTE
          MOVE      CTIMEIS,PMVXCTIM
          REP       " 0",PMVXCTIM
          MOVE      "CONVPADM  ",PMVXWEBC
          GOTO      SETV9999
.
.         ACC type records only
.
SETV5000  MOVE      AURNO,PTWCURNO
          MOVE      ADATE,PTWCVDAT
          CALL      SETACC00                     * common routine from UPACCDAT
.
SETV9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces given that we        *
.*            are dealing with pipe delimited records                        *
.*****************************************************************************
.
POUT0000  PACK      PADMURNO,PADMURNO,SP8
          RJUSTIFY  PADMURNO
.
          BRANCH    TYPEFORM,POUT5000            * acc record type
.
          PACK      PADMDATE,PADMDATE,SP8
          PACK      PADMTIME,PADMTIME,SP8
          PACK      PADMWARD,PADMWARD,SP3
          PACK      PADMWBED,PADMWBED,SP3
          PACK      PADMADOC,PADMADOC,SP6
          PACK      PADMSRCE,PADMSRCE,SP3
          PACK      PADMATYP,PADMATYP,SP3
          PACK      PADMCLSS,PADMCLSS,SP3
          PACK      PADMCARE,PADMCARE,SP3
          PACK      PADMHFND,PADMHFND,SP6
          PACK      PADMHFTB,PADMHFTB,SP8
          PACK      PADMHFMN,PADMHFMN,SP70
          PACK      PADMDIAG,PADMDIAG,SP70,SP70
          PACK      PADMDEPT,PADMDEPT,SP3
          PACK      PADMCOMP,PADMCOMP,SP3
          PACK      PADMDIET,PADMDIET,SP3
          PACK      PADMSTAY,PADMSTAY,SP3
          RJUSTIFY  PADMSTAY
          PACK      PADMDHOS,PADMDHOS,SP4
          RJUSTIFY  PADMDHOS
          PACK      PADMPCMX,PADMPCMX,SP9
          PACK      PADMGSTA,PADMGSTA,SP1
          REP       UPPLOW,PADMGSTA
          PACK      PADMCMXP,PADMCMXP,SP1
          REP       UPPLOW,PADMCMXP
          PACK      PADMRHC1,PADMRHC1,SP10
          PACK      PADMRH1G,PADMRH1G,SP10
          PACK      PADMIDUS,PADMIDUS,SP3
          PACK      PADMAPWD,PADMAPWD,SP3
          PACK      PADMPOWD,PADMPOWD,SP3
          PACK      PADMPOBD,PADMPOBD,SP3
          PACK      PADMMHLS,PADMMHLS,SP3
          PACK      PADMEMPL,PADMEMPL,SP3
          PACK      PADMPALC,PADMPALC,SP3
          PACK      PADMUDIN,PADMUDIN,SP3
          PACK      PADMUREA,PADMUREA,SP3
          PACK      PADMPACC,PADMPACC,SP3
          PACK      PADMPRGM,PADMPRGM,SP8
          PACK      PADMSLOC,PADMSLOC,SP3
          PACK      PADMSCLI,PADMSCLI,SP3
          PACK      PADMSTRA,PADMSTRA,SP3
          PACK      PADMMHOS,PADMMHOS,SP3
          PACK      PADMAVIS,PADMAVIS,SP20
          PACK      PADMPHPU,PADMPHPU,SP3
          PACK      PADMAGNC,PADMAGNC,SP3
          PACK      PADMOGNO,PADMOGNO,SP8
          GOTO      POUT9999
.
.         ACC type records only
.
POUT5000  CALL      PADACC00                     * common routine from UPACCDAT
.
POUT9999  RETURN
+
.*****************************************************************************
.*                              DVAL0000           Called by: UPLD0000       *
.*                  Validate all date fields                                 *
.* Returns:  EXIT - 0 = No date validation errors                            *
.*                  1 = Date validation errors                               *
.*          DTECOUNT - updated count of records with date field errors       *
.*****************************************************************************
.
DVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,DVAL5000            * acc record type
.
          MOVE      PADMDATE,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      TWO,DATEFLG2                 * past date not allowed
          MOVE      "PADMDATE",TMPFIELD
          CALL      VDAT0000
.
.         Check that Admission Date is not less than Date of Birth
.
          MATCH     PBDATE,PADMDATE
          IF        @LESS
            MOVE      "Admission Date less than DOB ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
          ENDIF
          GOTO      DVAL9000
.
.         ACC type records only
.
DVAL5000  CALL      DTEACC00                     * common routine from UPACCDAT
.
DVAL9000  BRANCH    ERORFLAG,DVAL9100            * errors on date validation
.
          MOVE      ZERO,EXIT                    * no errors on date validation
          GOTO      DVAL9999
.
DVAL9100  ADD       ONE,DTECOUNT                 * incr. date error record count
          MOVE      ONE,EXIT
.
DVAL9999  RETURN
+
.*****************************************************************************
.*                              VDAT0000           Called by: DVAL0000       *
.*                  Validate a date field                                    *
.* Requires:  TEMPDATE - Date in format ccyymmdd                             *
.*            DATEFLG1 - Date Type flag                                      *
.*                          0 = full date (ccyymmdd)                         *
.*                          1 = partial date (ccyymm)                        *
.*            DATEFLG2 - Dates Allowed flag                                  *
.*                          0 = any date allowed                             *
.*                          1 = future dates not allowed                     *
.*                          2 = past dates not allowed                       *
.*            TMPFIELD - Date field name                                     *
.* Returns:   ERORFLAG = 1 if an error in date validation occurs.            *
.*****************************************************************************
.
VDAT0000  MATCH     SP8,TEMPDATE                 * blank date ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Validate that the date has been fully populated
.
          SQUEEZE   TEMPDATE
          MOVELPTR  TEMPDATE,FORM1
          IF        DATEFLG1 = 0 & FORM1 <> 8 | DATEFLG1 = 1 & FORM1 <> 6
            MOVE      "Insufficient digits ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate that the date is numeric
.
VDAT0100  TYPE      TEMPDATE
          IF        !@EQUAL
            MOVE      "Not numeric ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          UNPACK    TEMPDATE,DIM2C,DIM2Y,DIM2M,DIM2D
.
.         Validate the century is >= 18 and <= current century
.
          MOVE      DIM2C,FORM2
          IF        FORM2 < 18 | FORM2 > CURRCENT
            MOVE      "Century not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate the month
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 1 | FORM2 > 12
            MOVE      "Month not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          COMPARE   ONE,DATEFLG1                 * short date (ccyymm) ?
          GOTO      VDAT9999 IF EQUAL            * yes - finished
.
.         Validate the day is:
.              < 32 for January, March, May, July, August, October & December
.              < 31 for April, June, September & November
.              < 29 for February, except in a leap year where it is < 30
.
          BRANCH    FORM2,VDAT1000:              * Jan
                          VDAT3000:              * Feb
                          VDAT1000:              * Mar
                          VDAT2000:              * Apr
                          VDAT1000:              * May
                          VDAT2000:              * Jun
                          VDAT1000:              * Jul
                          VDAT1000:              * Aug
                          VDAT2000:              * Sep
                          VDAT1000:              * Oct
                          VDAT2000:              * Nov
                          VDAT1000               * Dec
.
.         Validate days for month of 31 days
.
VDAT1000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for month of 30 days
.
VDAT2000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 30
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for February
.         A leap year is one where:
.           1. Every year divisible by 4 is a leap year.
.           2. But every year divisible by 100 is NOT a leap year
.           3. Unless the year is also divisible by 400, then it is still a
.              leap year.
.
VDAT3000  MOVE      DIM2D,FORM2
          PACK      DIM4,DIM2C,DIM2Y
          MOVE      DIM4,FORM4
          IF        (FORM4%4) = 0
            IF        (FORM4%100) = 0
              IF        (FORM4%400) = 0
                GOTO      VDAT3200
              ENDIF
            ELSE
              GOTO      VDAT3200
            ENDIF
          ENDIF
.
.         Check for normal Feb days
.
VDAT3100  IF        FORM2 < 1 | FORM2 > 28
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Check for leap year Feb days
.
VDAT3200  IF        FORM2 < 1 | FORM2 > 29
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
VDAT3900  MOVE      "Day not valid ",ERORDESC
          CALL      DERR0000
          GOTO      VDAT9999
.
VDAT4000  COMPARE   ZERO,DATEFLG2                * any date allowed ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
          BRANCH    DATEFLG2,VDAT5000:           * future dates not allowed
                             VDAT6000            * past dates not allowed
.
.         Make sure the date is not in the future
.
VDAT5000  MATCH     TEMPDATE,CURRDATE
          IF        @LESS
            MOVE      "Date cannot be in the future ",ERORDESC
            CALL      DERR0000
          ENDIF
          GOTO      VDAT9999
.
.         Make sure the date is not in the past
.
VDAT6000  MATCH     CURRDATE,TEMPDATE
          IF        @LESS
            MOVE      "Date cannot be in the past ",ERORDESC
            CALL      DERR0000
          ENDIF
.
VDAT9999  RETURN
+
.*****************************************************************************
.*                            DERR0000             Called by: VDAT0000       *
.*                    Process date error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.*****************************************************************************
.
DERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set date error flag
.
DERR9999  RETURN
+
.*****************************************************************************
.*                              TVAL0000           Called by: UPLD0000       *
.*                  Validate all time fields                                 *
.* Returns:  EXIT - 0 = No time validation errors                            *
.*                  1 = Time validation errors                               *
.*          TIMCOUNT - updated count of records with time field errors       *
.*****************************************************************************
.
TVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,TVAL1000            * acc record type
.
          MOVE      PADMDATE,TEMPDATE
          MOVE      PADMTIME,TEMPTIME            * admission time
          MOVE      "PADMTIME",TMPFIELD
          MOVE      TWO,TIMEFLAG                 * past time not allowed
          CALL      VTIM0000
          GOTO      TVAL9000
.
.         ACC record type
.
TVAL1000  CALL      TIMACC00                     * common routine from UPACCDAT
.
TVAL9000  BRANCH    ERORFLAG,TVAL9100            * errors on time validation
.
          MOVE      ZERO,EXIT                    * no errors on time validation
          GOTO      TVAL9999
.
TVAL9100  ADD       ONE,TIMCOUNT                 * incr. time error record count
          MOVE      ONE,EXIT
.
TVAL9999  RETURN
+
.*****************************************************************************
.*                            VTIM0000             Called by: TVAL0000       *
.*                    Validate time fields                                   *
.* Requires:  TEMPTIME - Time in format hh:mm:ss                             *
.*            TEMPDATE - Date in format ccyymmdd                             *
.*            TMPFIELD - Time field name                                     *
.*            TIMEFLAG - Times Allowed flag                                  *
.*                          0 = any time allowed                             *
.*                          1 = no future times allowed                      *
.*                          2 = no past times allowed                        *
.* Returns:   ERORFLAG = 1 if an error in time validation occurs.            *
.*****************************************************************************
.
VTIM0000  MATCH     SP8,TEMPTIME                 * blank time ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     SP8,TEMPDATE                 * blank date ?
          IF        @EQUAL
            MOVE      "Time without corresponding date ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          UNPACK    TEMPTIME,DIM2H,DIM1A,DIM2M,DIM1B,DIM2S    * (hh:mm:ss)
.
.         Make sure colon's separate the hours, minutes and seconds
.
          MATCH     DIM1A,DIM1B
          GOTO      VTIM1000 IF NOT EQUAL
.
          MATCH     COLON,DIM1A
          GOTO      VTIM1000 IF NOT EQUAL
.
          GOTO      VTIM2000
.
VTIM1000  MOVE      "Format not valid ",ERORDESC
          CALL      TERR0000
          GOTO      VTIM9999
.
.         Validate the hour
.
VTIM2000  MOVE      DIM2H,FORM2
          IF        FORM2 < 0 | FORM2 > 23
            MOVE      "Hour not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the minute
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Minutes not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the second
.
          MOVE      DIM2S,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Seconds not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          COMPARE   ZERO,TIMEFLAG                * any time allowed ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     SP8,TEMPDATE                 * date blank ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     TEMPDATE,CURRDATE            * current date ?
          GOTO      VTIM9999 IF NOT EQUAL        * no
.
          BRANCH    TIMEFLAG,VTIM5000:           * no future time allowed
                             VTIM6000            * no past time allowed
.
.         Make sure the time is not in the future
.
VTIM5000  MATCH     TEMPTIME,CTIMEIS
          IF        @LESS
            MOVE      "Time cannot be in the future ",ERORDESC
            CALL      TERR0000
          ENDIF
.
.         Make sure the time is not in the past
.
VTIM6000  MATCH     CTIMEIS,TEMPTIME
          IF        @LESS
            MOVE      "Time cannot be in the past ",ERORDESC
            CALL      TERR0000
          ENDIF
.
VTIM9999  RETURN
+
.*****************************************************************************
.*                            TERR0000             Called by: VTIM0000       *
.*                    Process time error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.*****************************************************************************
.
TERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set time error flag
.
TERR9999  RETURN
+
.*****************************************************************************
.*                            VNUM0000             Called by: UPLD0000       *
.*                    Validate numeric fields                                *
.* Returns:  EXIT - 0 = No numeric validation errors                         *
.*                  1 = Numeric validation errors                            *
.*          NUMCOUNT - updated count of records with numeric field errors    *
.*****************************************************************************
.
VNUM0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,VNUM5000            * acc record type
.
.         Expected Length of stay
.
          TYPE      PADMSTAY                     * numeric ?
          GOTO      VNUM0100 IF EQUAL            * yes
.
          MOVE      "PADMSTAY",TMPFIELD          * no - error
          CALL      NERR0000
.
.         Days of Hospitalisation
.
VNUM0100  TYPE      PADMDHOS                     * numeric ?
          GOTO      VNUM9000 IF EQUAL            * yes
.
          MOVE      "PADMDHOS",TMPFIELD          * no - error
          CALL      NERR0000
          GOTO      VNUM9000
.
.         ACC record type
.
VNUM5000  CALL      NUMACC00                     * common routine from UPACCDAT
.
VNUM9000  BRANCH    ERORFLAG,VNUM9100            * errors on number validation
.
          MOVE      ZERO,EXIT                    * no errors on no. validation
          GOTO      VNUM9999
.
VNUM9100  ADD       ONE,NUMCOUNT                 * incr. num. error record count
          MOVE      ONE,EXIT
.
VNUM9999  RETURN
+
.*****************************************************************************
.*                            NERR0000             Called by: VNUM0000       *
.*                    Process number error                                   *
.* Requires: TMPFIELD - field name                                           *
.*****************************************************************************
.
NERR0000  MOVE      "Invalid numeric field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set number error flag
.
NERR9999  RETURN
+
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields.                   *
.*        This validation is performed on the database fields just prior     *
.*        to writing the data and after any mappings have been performed.    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,CVAL5000            * acc record type
.
.         Ward/Bed
.
          MATCH     SP3,PTMIXWRD                 * blank code ?
          GOTO      CVAL0100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,PTMIXWRD
          PACK      TEMPCODE,PTMIEBED
          MOVE      "PADMWARD",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * patwr1af
          CALL      VCOD0000
.
.         Attending Doctor
.
CVAL0100  MATCH     SP6,ADOCTA                   * blank code ?
          GOTO      CVAL0200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,ADOCTA,SP10
          MOVE      "PADMADOC",TMPFIELD
          MOVE      TEN1,TEMPTYPE                * patdo1af
          CALL      VCOD0000
.
.         Referral Source
.
CVAL0200  MATCH     SP3,ASRCE                    * blank code ?
          GOTO      CVAL0300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSS,SP1
          PACK      TEMPCODE,ASRCE,SP10
          MOVE      "PADMSRCE",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat S)
          CALL      VCOD0000
.
.         Admission Type
.
CVAL0300  MATCH     SP3,ATYPE                    * blank code ?
          GOTO      CVAL0400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSA,SP1
          PACK      TEMPCODE,ATYPE,SP10
          MOVE      "PADMATYP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat A)
          CALL      VCOD0000
.
.         Admission Class
.
CVAL0400  MATCH     SP3,ACLSS                    * blank code ?
          GOTO      CVAL0500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSP,SP1
          PACK      TEMPCODE,ACLSS,SP10
          MOVE      "PADMCLSS",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat P)
          CALL      VCOD0000
.
.         Care Class
.
CVAL0500  MATCH     SP3,ACARE                    * blank code ?
          GOTO      CVAL0600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSC
          PACK      TEMPCODE,ACARE,SP10
          MOVE      "PADMCARE",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat CC)
          CALL      VCOD0000
.
.         Health Fund/Table
.
CVAL0600  MATCH     SP6,AFUNDH                   * blank HF code ?
          GOTO      CVAL0700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,AFUNDH
          MATCH     SP8,AFNDTB                   * blank HF Table code ?
          IF        @EQUAL
            PACK      TEMPCODE,ZERO4,SP10
          ELSE
            PACK      TEMPCODE,AFNDTB,SP10
          ENDIF
          MOVE      "PADMHFND",TMPFIELD
          MOVE      NINE,TEMPTYPE                * patfn1af
          CALL      VCOD0000
.
.         Department
.
CVAL0700  MATCH     SP3,ACLSSFT                  * blank code ?
          GOTO      CVAL0800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSA,ANSC
          PACK      TEMPCODE,ACLSSFT,SP10
          MOVE      "PADMDEPT",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat AC)
          CALL      VCOD0000
.
.         Claim Type
.
CVAL0800  MATCH     SP3,ACLAIM                   * blank code ?
          GOTO      CVAL0900 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSL
          PACK      TEMPCODE,ACLAIM,SP10
          MOVE      "PADMCOMP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat CL)
          CALL      VCOD0000
.
.         Diet Code
.
CVAL0900  MATCH     SP3,ADIET                    * blank code ?
          GOTO      CVAL1000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANSC
          PACK      TEMPCODE,ADIET,SP10
          MOVE      "PADMDIET",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat DC)
          CALL      VCOD0000
.
.         Casemix Code
.
CVAL1000  MATCH     SP9,PTMIPCMX                 * blank code ?
          GOTO      CVAL1100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PTMIPCMX,SP10
          MOVE      "PADMPCMX",TMPFIELD
          MOVE      TEN,TEMPTYPE                 * patcmcaf
          CALL      VCOD0000
.
.         GST Applicable
.
CVAL1100  MATCH     SP1,PTMIGSTA                 * blank code ?
          GOTO      CVAL1200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PTMIGSTA,SP10
          MOVE      "PADMGSTA",TMPFIELD
          MOVE      EIGHT,TEMPTYPE               * Y/N/U
          CALL      VCOD0000
.
.         Casemix Payment
.
CVAL1200  MATCH     SP1,PTMICMXP                 * blank code ?
          GOTO      CVAL1300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PTMICMXP,SP10
          MOVE      "PADMCMXP",TMPFIELD
          MOVE      EIGHT,TEMPTYPE               * Y/N
          CALL      VCOD0000
.
.         Referring HCP
.
CVAL1300  MATCH     SP10,PMVXRHC1                * blank code ?
          GOTO      CVAL1400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMVXRHC1,SP10
          MOVE      "PADMRHC1",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmshcpaf
          CALL      VCOD0000
.
.         Referring HCP Practice
.
CVAL1400  MATCH     SP10,PMVXRH1G                * blank code ?
          GOTO      CVAL1500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMVXRH1G,SP10
          MOVE      "PADMRH1G",TMPFIELD
          MOVE      TEN2,TEMPTYPE                * pmshcgaf
          CALL      VCOD0000
.
.         Intended Stay Duration
.
CVAL1500  MATCH     SP3,PMVXIDUS                 * blank code ?
          GOTO      CVAL1600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSV,ANSI
          PACK      TEMPCODE,PMVXIDUS,SP10
          MOVE      "PADMIDUS",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat VI)
          CALL      VCOD0000
.
.         Admitting Point Ward
.
CVAL1600  MATCH     SP3,PMVXAPWD                 * blank code ?
          GOTO      CVAL1700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATAP
          PACK      TEMPCODE,PMVXAPWD,SP10
          MOVE      "PADMAPWD",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat ap)
          CALL      VCOD0000
.
.         Post Op Ward
.
CVAL1700  MATCH     SP3,PMVXPOWD                 * blank code ?
          GOTO      CVAL1800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,PMVXPOWD
          PACK      TEMPCODE,PMVXPOBD,SP10
          MOVE      "PADMPOWD",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * patwr1af
          CALL      VCOD0000
.
.         MH Legal Status - No longer in use
.
CVAL1800  MATCH     SP3,PMVXMHLS                 * blank code ?
          GOTO      CVAL1900 IF EQUAL            * yes - no validation req'd
.
.         Employment Status
.
CVAL1900  MATCH     SP3,PMVXEMPL                 * blank code ?
          GOTO      CVAL2000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSK,ANSD
          PACK      TEMPCODE,PMVXEMPL,SP10
          MOVE      "PADMEMPL",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat KD)
          CALL      VCOD0000
.
.         Palliative Care
.
CVAL2000  MATCH     SP3,PMVXPALC                 * blank code ?
          GOTO      CVAL2100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSK,ANSG
          PACK      TEMPCODE,PMVXPALC,SP10
          MOVE      "PADMPALC",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat KG)
          CALL      VCOD0000
.
.         Discharge Intention
.
CVAL2100  MATCH     SP3,PMVXUDIN                 * blank code ?
          GOTO      CVAL2200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSK,ANSN
          PACK      TEMPCODE,PMVXUDIN,SP10
          MOVE      "PADMUDIN",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat KN)
          CALL      VCOD0000
.
.         Unplanned Readmission
.
CVAL2200  MATCH     SP3,PMVXUREA                 * blank code ?
          GOTO      CVAL2300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSK,ANSO
          PACK      TEMPCODE,PMVXUREA,SP10
          MOVE      "PADMUREA",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat KO)
          CALL      VCOD0000
.
.         Preferred Accommodation
.
CVAL2300  MATCH     SP3,PMVXPACC                 * blank code ?
          GOTO      CVAL2400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSB,ANSP
          PACK      TEMPCODE,PMVXPACC,SP10
          MOVE      "PADMPACC",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat BP)
          CALL      VCOD0000
.
.         Program Code
.
CVAL2400  MATCH     SP8,PMVXPRGM                 * blank code ?
          GOTO      CVAL2500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMVXPRGM,SP10
          MOVE      "PADMPRGM",TMPFIELD
          MOVE      TEN3,TEMPTYPE                * pmsprgaf
          CALL      VCOD0000
.
.         Location Source of Referral
.
CVAL2500  MATCH     SP3,PMVXSLOC                 * blank code ?
          GOTO      CVAL2600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSS,ANSG
          PACK      TEMPCODE,PMVXSLOC,SP10
          MOVE      "PADMSLOC",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat SG)
          CALL      VCOD0000
.
.         Clinical Source of Referral
.
CVAL2600  MATCH     SP3,PMVXSCLI                 * blank code ?
          GOTO      CVAL2700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSS,ANSH
          PACK      TEMPCODE,PMVXSCLI,SP10
          MOVE      "PADMSCLI",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat SH)
          CALL      VCOD0000
.
.         Transport Source of Referral
.
CVAL2700  MATCH     SP3,PMVXSTRA                 * blank code ?
          GOTO      CVAL2800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSS,ANSI
          PACK      TEMPCODE,PMVXSTRA,SP10
          MOVE      "PADMSTRA",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat SI)
          CALL      VCOD0000
.
.         Hospital
.
CVAL2800  MATCH     SP3,PMVXMHOS                 * blank code ?
          GOTO      CVAL2900 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMVXMHOS,SP10
          MOVE      "PADMMHOS",TMPFIELD
          MOVE      TEN4,TEMPTYPE                * pathspaf
          CALL      VCOD0000
.
.         Principal Health Service Purchaser (Cap HP)
.
CVAL2900  MATCH     SP3,PTMIPHPU                 * blank code ?
          GOTO      CVAL3000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSH,ANSP
          PACK      TEMPCODE,PTMIPHPU,SP10
          MOVE      "PADMPHPU",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat HP)
          CALL      VCOD0000
.
.         Health Agency (Cat HA)
.
CVAL3000  MATCH     SP3,PTMIAGNC                 * blank code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSH,ANSA
          PACK      TEMPCODE,PTMIAGNC,SP10
          MOVE      "PADMAGNC",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (Cat HA)
          CALL      VCOD0000
          GOTO      CVAL9000
.
.         ACC type records only
.
CVAL5000  CALL      CODACC00                     * common routine from UPACCDAT
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100            * errors on code validation
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCATG - temporary category variable                          *
.*           TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.*****************************************************************************
.
VCOD0000  BRANCH    TEMPTYPE,VCOD0100:           * patcodes (category-codes)
                             VCOD0200:           * patin1af
                             VCOD0300:           * pateoraf
                             VCOD0400:           * pmshcpaf
                             VCOD0500:           * pmstleaf
                             VCOD0600:           * pmsrelaf
                             VCOD0700:           * patwr1af
                             VCOD0800:           * Y/N/U
                             VCOD0900:           * patfn1af
                             VCOD1000:           * patcmcaf
                             VCOD1100:           * patdo1af
                             VCOD1200:           * pmshcgaf
                             VCOD1300:           * pmsprgaf
                             VCOD1400            * pathspaf
.
.         Validate a category-coded field (patcodes)
.
VCOD0100  PACK      KEY5,TEMPCATG,TEMPCODE
          CALL      RDCODE1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
.
          MATCH     ANSI,PTCOACTV                * code active ?
          GOTO      VCOD9100 IF EQUAL            * no - error
          GOTO      VCOD9999
.
.         Validate an insurer code field (patin1af)
.
VCOD0200  PACK      KEY6,TEMPCODE,SP10
          CALL      RDINSR1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an employer code field (pateoraf)
.
VCOD0300  PACK      KEY7,ANSE,TEMPCODE,SP10
          CALL      RDPTEOR1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a HCP field (pmshcpaf)
.
VCOD0400  MOVE      TEMPCODE,KEY10
          CALL      RDPMHCP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a title code field (pmstleaf)
.
VCOD0500  PACK      KEY4,TEMPCODE,SP4
          CALL      RDPMTLE1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a relationship code field (pmsrelaf)
.
VCOD0600  PACK      KEY10,TEMPCODE,SP10
          CALL      RDPMREL1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a ward or ward/bed code (patwr1af)
.
VCOD0700  PACK      KEY6,TEMPCATG,TEMPCODE
          CALL      RDWARD1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a Y/N/U field
.
VCOD0800  MATCH     ANSY,TEMPCODE                * "Y" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
.
          MATCH     ANSN,TEMPCODE                * "N" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
.
          MATCH     "PADMGSTA",TMPFIELD
          IF        @EQUAL
            MATCH     ANSU,TEMPCODE              * "U" ?
            GOTO      VCOD9999 IF EQUAL          * yes - valid code
          ENDIF
          GOTO      VCOD9100                     * no - invalid code
.
.         Validate a Health Fund or Health Fund Table (patfn1af)
.
VCOD0900  PACK      KEY14,TEMPCATG,TEMPCODE
          CALL      RDFUND1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a casemix code (patcmcaf)
.
VCOD1000  MOVE      TEMPCODE,KEY9
          CALL      RDPTCMC1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a doctor code (patdo1af)
.
VCOD1100  MOVE      TEMPCODE,KEY6
          CALL      RDDOCT1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a hcp practice code (pmshcgaf)
.
VCOD1200  PACK      KEY12,TEMPCODE,SP1,ONE
          CALL      RDPMHCG1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a program code (pmsprgaf)
.
VCOD1300  MOVE      TEMPCODE,KEY8
          CALL      RDPMPRG1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a hospital code (pathspaf)
.
VCOD1400  MOVE      TEMPCODE,KEY3
          CALL      RDPTHSP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
          MOVE      ONE,ERORFLAG                 * set code error flag
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: UPLD0000       *
.*                   Print an error detail line               CHKM0000       *
.* Requires: Valid read on PMI records (for name fields)      DERR0000       *
.*           ERORDESC - error description                     TERR0000       *
.*           CLNO - current page line count                   VURN0000       *
.* Returns:  CLNO - updated page line count                   NERR0000       *
.*                                                            VCOD0000       *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          MOVE      PSNAME,PACSNAME              * format patient name
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DIM44
.
          PRINT     *1,PIPE,*3,PADMURNO,*12,PIPE,*14,DIM44,*59,PIPE:
                    *61,ERORDESC,*132,PIPE
          ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
.*****************************************************************************
.*                              VURN0000           Called by: UPLD0000       *
.*                        Validate U/R Number                                *
.* Requires: PADMURNO - U/R number (right justified)                         *
.* Returns:  Valid read on PMI data                                          *
.*           EXIT  0 = PMI record found - ok to continue                     *
.*                 1 = PMI record not found - ignore record                  *
.*          UNKCOUNT - updated count of unknown U/R numbers                  *
.*          PADMURNO - U/R number right justified                            *
.*****************************************************************************
.
VURN0000  MATCH     SP8,PADMURNO                 * blank U/R ?
          IF        @EQUAL
            MOVE      "U/R missing ",ERORDESC    * yes
            GOTO      VURN9150
          ENDIF
.
          MOVE      PADMURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,VURN9100               * no - error
.
          MOVE      PADMURNO,KEY8
          CALL      RDPMPX21                     * PMI ext'n record on file ?
          BRANCH    OVRCD,VURN9100               * no - error
.
          COMPARE   ONE,PSTAT                    * merged U/R ?
          GOTO      VURN1000 IF EQUAL            * yes
.
          COMPARE   ONE,PCEASE
          IF        @EQUAL
            MOVE      "Patient deceased ",ERORDESC
            GOTO      VURN9150
          ENDIF
          GOTO      VURN9000
.
.         We have a merged U/R record, so get the new U/R
.
VURN1000  MATCH     PPSNAME,SP20                 * blank previous name field ?
          GOTO      VURN9100 IF EQUAL            * yes - error
.
          MOVE      PPSNAME,PADMURNO             * no - load new U/R
          GOTO      VURN0000                     * get new pmi record
.
VURN9000  MOVE      PADMURNO,AURNO               * load U/R number
          MOVE      ZERO,EXIT
          GOTO      VURN9999
.
VURN9100  MOVE      "PMI Record not found ",ERORDESC
VURN9150  CALL      PERR0000                     * print error line
          ADD       ONE,UNKCOUNT                 * increment unknown U/R count
          MOVE      ONE,EXIT
.
VURN9999  RETURN
+
.*****************************************************************************
.*                            WVIS0000             Called by: UPLD0000       *
.*            Write a visit record to patvisaf and pmsvx1af                  *
.*****************************************************************************
.
.         Write a visit record (patvisaf)
.
WVIS0000  MOVE      AURNO,PVIURNO                * load patvisaf fields
          MOVE      ADATE,PVIDATE
          MOVE      AADMNO,PVIBILL
          MOVE      THREE,PVITYPE
.
          MOVE      ZERO,FORM1
          MATCH     SP3,ATYPE                    * blank admission type ?
          GOTO      WVIS1000 IF EQUAL            * yes
.
          PACK      KEY5,ANSA,SP1,ATYPE
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TCINDC1,FORM1
          ENDIF
WVIS1000  MOVE      TWO,PVISTAT                  * Default Public Patient
          LOAD      PVISTAT,FORM1,TWO,ONE

          MOVE      ONE,PVITRAN
          MOVE      SP6,PVISITE
          MOVE      " 2",PVISYST
.
          MOVE      PVIBILL,KEY8
          CALL      RDAVISA1                     * visit on file already ?
          IF        OVRCD = 1
            CALL      WRPTVIS1                   * no
          ELSE
            MOVE      "Visit record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
.         Write a visit extension record (pmsvx1af)
.
          PACK      KEY56,PPOST,PSUBRB,SP10,PADD4,SP70
          CALL      RDIBPOS1
          IF        OVRCD = 0
            MOVE      IBPOASGC,PMVXASGC
          ELSE
            PACK      KEY56,PPOST,PSUBRB,SP70
            CALL      RSIBPOS1
            CALL      RKIBPOS1
            BRANCH    OVRCD,WVIS2000
.
            MATCH     PPOST,IBPOPCOD
            IF        @EQUAL
              MATCH     PSUBRB,IBPOSUBR
              IF        @EQUAL
                MOVE      IBPOASGC,PMVXASGC
              ENDIF
            ENDIF
          ENDIF
.
WVIS2000  MOVE      AADMNO,KEY8
          CALL      RAPMVX11                     * visit on file already ?
          IF        OVRCD=1
            CALL      WRPMVX11                   * no
          ELSE
            MOVE      "Visit extension record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
WVIS9999  RETURN
+
.*****************************************************************************
.*                              CVIS0000           Called by: UPLD0000       *
.*        Check if an alternate visit number record already exists on        *
.*        ibaalvaf.                                                          *
.* Requires: PADMAVIS - Alternate Visit Number (left justified)              *
.* Returns:  EXIT  0 = No errors found                                       *
.*                 1 = Errors found                                          *
.*****************************************************************************
.
CVIS0000  BRANCH    TYPEFORM,CVIS9000            * acc record type
.
          MATCH     SP20,PADMAVIS                * blank alternate visit no. ?
          GOTO      CVIS9000 IF EQUAL            * yes - finished
.
          PACK      KEY28,PADMAVIS,SP30
          CALL      RSIBALV2                     * position on alt. visit no.
CVIS0500  CALL      RKIBALV2                     * read next record
          BRANCH    OVRCD,CVIS9000               * eof
.
          MATCH     PADMAVIS,IBAVAVIS            * same alt. visit no. ?
          GOTO      CVIS9000 IF NOT EQUAL        * yes
.
          MATCH     " 1",IBAVTYPE                * eReferral type record ?
          GOTO      CVIS0500 IF EQUAL            * yes - ignore record
.
.         Legacy record already exists
.
          MOVE      "Alternate visit id already exists in ibaalvaf",ERORDESC
          CALL      PERR0000                     * print error line
          ADD       ONE,DUPCOUNT                 * increment dupl. record count
          MOVE      ONE,EXIT
          GOTO      CVIS9999
.
CVIS9000  MOVE      ZERO,EXIT
.
CVIS9999  RETURN
+
.*****************************************************************************
.*                              AVIS0000           Called by: UPLD0000       *
.*        Check if we need to create an alternate visit number record        *
.*        in ibaalvaf.                                                       *
.* Requires: PADMAVIS - Alternate Visit Number (left justified)              *
.*           AADMNO   - webPAS Visit Number (right justified)                *
.*****************************************************************************
.
AVIS0000  MATCH     SP20,PADMAVIS                * blank alternate visit no. ?
          GOTO      AVIS9999 IF EQUAL            * yes - finished
.
          MOVE      AADMNO,KEY8
          CALL      RAIBALV1                     * webPAS visit already on file?
          IF        OVRCD = 0
            MOVE      "webPAS visit no. already exists on ibaalvaf",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ELSE
            MOVE      AADMNO,IBAVVISN            * load field data
            MOVE      PADMAVIS,IBAVAVIS
            MOVE      " 0",IBAVTYPE
            CALL      WRIBALV1                   * write alt. visit no. record
          ENDIF
.
AVIS9999  RETURN
.
.-----------------------------------------------------------------------
. Upload the comment header data
.-----------------------------------------------------------------------
UPLHDR00  ADD       ONE,RDCOUNT1
.
          READ      PRADMUPL,SEQ;CSMDVISN,CSMDTYPE,CSMDNOTE,CSMDDATE,CSMDTIME:
                                 CSMDUSER,CSMDOCCG,CSMDDELT,CSMDDDAT,CSMDDTIM:
                                 CSMDDUSE,CSMDDOCC
.
          PACK      CSMDVISN,CSMDVISN,SP70
          PACK      CSMDTYPE,CSMDTYPE,SP70
          PACK      CSMDNOTE,CSMDNOTE,SP70
          PACK      CSMDDATE,CSMDDATE,SP70
          PACK      CSMDTIME,CSMDTIME,SP70
          PACK      CSMDUSER,CSMDUSER,SP70
          PACK      CSMDOCCG,CSMDOCCG,SP70
          PACK      CSMDDELT,CSMDDELT,SP70
          PACK      CSMDDDAT,CSMDDDAT,SP70
          PACK      CSMDDTIM,CSMDDTIM,SP70
          PACK      CSMDDUSE,CSMDDUSE,SP70
          PACK      CSMDDOCC,CSMDDOCC,SP70
.
          CALL      MANHDR00                     * check for Mandatory fields
          BRANCH    EXIT,UPLHDR99                * errors on validation
.
          CALL      DVALHR00                     * date validation
          BRANCH    EXIT,UPLHDR99                * errors on validation
.
          MATCH     PADMURNO,SAVEURNO
          IF        !@EQUAL
            MOVE      "Comment Header is out of sequence.",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,COMCOUNT
            GOTO      UPLHDR99
          ENDIF
.
          BRANCH    VCHKFLAG,UPLHDR99            * Error checking only
          COMPARE   ZERO,CRTBKFLG
          GOTO      UPLHDR99 IF EQUAL            * No Booking created
.
          MOVE      AADMNO,KEY8
          MOVE      KEY8,VSMDVISN
          MOVE      CSMDTYPE,VSMDTYPE
          MOVE      CSMDNOTE,VSMDNOTE
          RJUSTIFY  VSMDNOTE
          MOVE      CSMDDATE,VSMDDATE
          MOVE      CSMDTIME,VSMDTIME
          MOVE      CSMDUSER,VSMDUSER
          MOVE      CSMDOCCG,VSMDOCCG
          MOVE      CSMDDELT,VSMDDELT
          MOVE      CSMDDDAT,VSMDDDAT
          MOVE      CSMDDTIM,VSMDDTIM
          MOVE      CSMDDUSE,VSMDDUSE
          MOVE      CSMDDOCC,VSMDDOCC
          MOVE      SP70,VSMDSPAR
.
          PACK      KEY17,VSMDVISN,VSMDTYPE,VSMDNOTE,SP70
          CALL      RDVSMDT1
          IF        OVRCD = 1
            CALL      WRVSMDT1
            ADD       ONE,WRCOUNT1
          ENDIF
.
UPLHDR99  RETURN
.
.-----------------------------------------------------------------------
. Upload the comment details data
.-----------------------------------------------------------------------
UPLDET00  ADD       ONE,RDCOUNT2
.
          READ      PRADMUPL,SEQ;CSMTVISN,CSMTTYPE,CSMTNOTE,CSMTUNIQ,CSMTCMNT
.
          PACK      CSMTVISN,CSMTVISN,SP70
          PACK      CSMTTYPE,CSMTTYPE,SP70
          PACK      CSMTNOTE,CSMTNOTE,SP70
          PACK      CSMTUNIQ,CSMTUNIQ,SP70
          PACK      CSMTCMNT,CSMTCMNT,SP70
.
          CALL      MANDET00
          BRANCH    EXIT,UPLDET99                * errors on validation
.
          MATCH     PADMURNO,SAVEURNO
          IF        !@EQUAL
            MOVE      "Comment details is out of sequence.",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,COMCOUNT
            GOTO      UPLHDR99
          ENDIF
.
          BRANCH    VCHKFLAG,UPLDET99            * Error checking only
          COMPARE   ZERO,CRTBKFLG
          GOTO      UPLDET99 IF EQUAL            * No Booking created
.
          MOVE      AADMNO,KEY8
          MOVE      KEY8,VSMTVISN
          MOVE      CSMTTYPE,VSMTTYPE
          MOVE      CSMTNOTE,VSMTNOTE
          RJUSTIFY  VSMTNOTE
          MOVE      CSMTUNIQ,VSMTUNIQ
          RJUSTIFY  VSMTUNIQ
          MOVE      CSMTCMNT,VSMTCMNT
          MOVE      SP70,VSMTSPAR
.
          PACK      KEY20,VSMTVISN,VSMTTYPE,VSMTNOTE,VSMTUNIQ,SP70
          CALL      RDVSMTX1
          IF        OVRCD = 1
            CALL      WRVSMTX1
            ADD       ONE,WRCOUNT2
          ENDIF
.
UPLDET99  RETURN
.
.****************************************************************************
.*                             MANHDR00                                     *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MANHDR00  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      CSMDVISN,TMPSTRNG
          MOVE      "CSMDVISN",TMPFIELD
          CALL      CHKM0000
.
          MOVE      CSMDTYPE,TMPSTRNG
          MOVE      "CSMDTYPE",TMPFIELD
          CALL      CHKM0000
.
          MOVE      CSMDNOTE,TMPSTRNG
          MOVE      "CSMDNOTE",TMPFIELD
          CALL      CHKM0000
.
          BRANCH    ERORFLAG,MANHDR91            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MANHDR99
.
MANHDR91  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MANHDR99  RETURN
.
.****************************************************************************
.*                             MANDET00                                     *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MANDET00  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      CSMTVISN,TMPSTRNG
          MOVE      "CSMTVISN",TMPFIELD
          CALL      CHKM0000
.
          MOVE      CSMTTYPE,TMPSTRNG
          MOVE      "CSMTTYPE",TMPFIELD
          CALL      CHKM0000
.
          MOVE      CSMTNOTE,TMPSTRNG
          MOVE      "CSMTNOTE",TMPFIELD
          CALL      CHKM0000
.
          MOVE      CSMTUNIQ,TMPSTRNG
          MOVE      "CSMTUNIQ",TMPFIELD
          CALL      CHKM0000
.
          BRANCH    ERORFLAG,MANDET91            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MANDET99
.
MANDET91  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MANDET99  RETURN
.
.*****************************************************************************
.*                              DVALHR00                                     *
.*                  Validate all date fields                                 *
.* Returns:  EXIT - 0 = No date validation errors                            *
.*                  1 = Date validation errors                               *
.*          DTECOUNT - updated count of records with date field errors       *
.*****************************************************************************
.
DVALHR00  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MATCH     SP70,CSMDDATE                * sourced from EXTRCOMM ?
          IF        !@EQUAL
            MOVE      CSMDDATE,TEMPDATE
            MOVE      ZERO,DATEFLG1              * ccyymmdd
            MOVE      ONE,DATEFLG2               * future date not allowed
            MOVE      "CSMDDATE",TMPFIELD
            CALL      VDAT0000
          ENDIF
.
          MATCH     SP8,CSMDDDAT                * sourced from EXTRCOMM ?
          IF        !@EQUAL
            MOVE      CSMDDDAT,TEMPDATE
            MOVE      ZERO,DATEFLG1              * ccyymmdd
            MOVE      ONE,DATEFLG2               * future date not allowed
            MOVE      "CSMDDDAT",TMPFIELD
            CALL      VDAT0000
          ENDIF
.
          BRANCH    ERORFLAG,DVALHR91            * errors on date validation
.
          MOVE      ZERO,EXIT                    * no errors on date validation
          GOTO      DVALHR99
.
DVALHR91  ADD       ONE,DTECOUNT                 * incr. date error record count
          MOVE      ONE,EXIT
.
DVALHR99  RETURN
.
.*****************************************************************************
.*        Mapping File I/O Routines                                          *
.*****************************************************************************
.
.RDTEMP1  Category-Codes (patcodes)  --
.RDTEMP2  Insurer (patin1af)          |  These routines are in ACCMAPIO.INC
.RDTEMP3  Employer (pateoraf)         |
.RDTEMP4  HCP (pmshcpaf)              |
.RDTEMP5  Title (pmstleaf)            |
.RDTEMP6  Relation (pmsrelaf)        __
.
.         HCP Practice (pmshcgaf) mapping
.
RDTEMP7   MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      TEMP7,KEY10;OLDHCGCD,NEWHCGCD
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Hospital (pathspaf) mapping
.
RDTEMP8   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP8,KEY3;OLDHOSPL,NEWHOSPL
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Ward Bed (patwr1af) mapping
.
RDTEMP9   MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      TEMP9,KEY6;OLDWARD,OLDBED,NEWWARD,NEWBED
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor (patdo1af) mapping
.
RDTEMP10  MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      TEMP10,KEY6;OLDDCODE,NEWDCODE
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Health Fund/Table (patfn1af) mapping
.
RDTEMP11  MOVE      ZERO,OVRCD
          RESET     KEY14
          READ      TEMP11,KEY14;OLDHFUND,OLDTABLE,NEWHFUND,NEWTABLE
          GOTO      OVERCOND IF OVER
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CLMRTMAS
          INC       CLPATDNR
          INC       CLPATMAS
          INC       CLPATMIS
          INC       CLPATMSX
          INC       CLPATMWS
          INC       CLPATVIS
          INC       CLPATWC1
          INC       CLPMSPX2
          INC       CLPMSWX1
          INC       CLPMSVX1
          INC       CLVISIAU
          INC       CLVISINT
          INC       CLVISPAY
          INC       CLWATTR1
          INC       CLWATTX1
          INC       CLWEBSEC
          INC       DGCLICPE
          INC       DGCLICUP
          INC       EXPPAYCD
          INC       GENANVIS
          INC       MRTVISCD
          INC       PMIGTNID
          INC       PREADMIT
          INC       UPACCDAT
.
          INC       ACCCMTIO/INC
          INC       ACCMAPIO/INC
          INC       BOKRC1IO/INC
          INC       IBAALVIO/INC
          INC       IBAPOSIO/INC
          INC       MRTMASIO/INC
          INC       MRTVISIO/INC
          INC       NHIMASIO/INC
          INC       PATCMCIO/INC
          INC       VISMDTIO/INC
          INC       VISMTXIO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATEORIO/INC
          INC       PATFN1IO/INC
          INC       PATHSPIO/INC
          INC       PATIN1IO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATNIDIO/INC
          INC       PATPR1IO/INC
          INC       PATVISIO/INC
          INC       PATWC1IO/INC
          INC       PATWR1IO/INC
          INC       PMSCURIO/INC
          INC       PMSHCGIO/INC
          INC       PMSHCPIO/INC
          INC       PMSPAYIO/INC
          INC       PMSPRGIO/INC
          INC       PMSPX2IO/INC
          INC       PMSRELIO/INC
          INC       PMSTLEIO/INC
          INC       PMSVX1IO/INC
          INC       PMSWX1IO/INC
          INC       VISIAUIO/INC
          INC       VISINTIO/INC
          INC       VISPAYIO/INC
          INC       WEBSECIO/INC
