.
. PATSNX2.PBL
. -----------
.        Subroutine to Change the first given name (GSRGNAM) and
.        second given name (PTGSGNM2) into  Sound-ex keys
.
.        GSRGKEY1 = 1st given name
.        GSRGKEY2 = 2nd given name
.
.  Mods: 
.        22/06/2011  Steve Armstrong   CAR 240722
.                    Mods to cater for separate given name fields based
.                    on changes to PATGSRFD.
.         2/04/2001  Glenn Saunders  V.10.B01   
.                    Alter processing to not use SDXKEY as this file (patsurnf)
.                    is being removed.                                         
.        13/06/1996  Steve Armstrong  SRF 641341
.                    Fixed bug on testing for character position when
.                    looking for a trailing "S" (use FPTRPOSN instead of EXIT).
.        20/08/1993  Steve Armstrong
.                    Fixed bug where if given name was a single character "S",
.                    the program would treat it as a trailing "S" and replace
.                    it with a space.
.
SOUNDX2  CLEAR     SAVEGSR
         MOVE      ONE,FORM1                     * set flag for 1st given name
.
.        Make sure the given name contains only upper case characters
.
SNDXGN05 IF        FORM1 = 1
           MOVE      GSRGNAM,KEYSTR30            * first given name
         ELSE
           MOVE      PTGSGNM2,KEYSTR30           * second given name
         ENDIF
         REP       AREP,KEYSTR30
.
.        Ignore all characters from "(" onward
.
         MOVE      "(",C1
         SCAN      C1,KEYSTR30
         GOTO      SNDXGN10 IF NOT EQUAL
.
         BUMP      KEYSTR30,-1
         APPEND    SP20,KEYSTR30
         RESET     KEYSTR30
.
SNDXGN10 MOVE      " ",C1
         SCAN      C1,KEYSTR30
         GOTO      SNDXGN20 IF NOT EQUAL
.
         BUMP      KEYSTR30,-1
         APPEND    SP30,KEYSTR30
         RESET     KEYSTR30
.
SNDXGN20 MOVE      ",",C1
         SCAN      C1,KEYSTR30
         GOTO      SNDXGN0 IF NOT EQUAL
.
         BUMP      KEYSTR30,-1
         APPEND    SP30,KEYSTR30
         RESET     KEYSTR30
.
.        Ignore trailing S's - NB. Only if they are NOT the first character
.
SNDXGN0  SCAN      SCANS,KEYSTR30
         GOTO      SNDXGNA IF NOT EQUAL
.
         MOVEFPTR  KEYSTR30,FPTRPOSN
         COMPARE   "1",FPTRPOSN                  * character position 1 ?
         IF        !@EQUAL
           CMOVE     SP1,KEYSTR30                * no - ok to remove
         ENDIF
         RESET     KEYSTR30
.
.        Validate the first character - must be alpha
.
SNDXGNA  MOVE      KEYSTR30,C2
         REP       "KC",C2
         SCAN      C2,AREP
         GOTO      SNDXGNB IF EQUAL
.
         BUMP      KEYSTR30
         GOTO      SNDXGNA IF NOT EOS
.
.        Move this first character to the SOUND-EX key
.
SNDXGNB  RESET     AREP
         PACK      SAVEGSR,C2,SP20
         REP       " 0",SAVEGSR
.
.        Loop to build up key
.
SNDXGNC  BUMP      SAVEGSR
         GOTO      SNDXGNE IF EOS
.
SNDXGND  BUMP      KEYSTR30
         GOTO      SNDXGNE IF EOS
.
.        Check if this is a valid character
.
         MOVE      KEYSTR30,C1
         SCAN      C1,AREP
         GOTO      SNDXGND IF NOT EQUAL
.
         RESET     AREP
.
.        Check for special pairs of characters
.
         MATCH     SCANCK,KEYSTR30        * Ignore the C in CK
         GOTO      SNDXGND IF EQUAL
.
         MATCH     SCANGH,KEYSTR30        * Ignore the G in GH
         GOTO      SNDXGND IF EQUAL
.
         MATCH     SCANLM,KEYSTR30        * Ignore the L in LM
         GOTO      SNDXGND IF EQUAL
.
         MATCH     SCANMN,KEYSTR30        * Ignore the M in MN
         GOTO      SNDXGND IF EQUAL
.
         MATCH     SCANSC,KEYSTR30        * Ignore the S in SC
         GOTO      SNDXGND IF EQUAL
.
.        Check for special pairs of characters (Check with previous char)
.
         PACK      SPAIR,C2,C1
.
         MATCH     SCANMP,SPAIR        * Ignore the P in MP
         GOTO      SNDXGND IF EQUAL
.
         MATCH     SCANST,SPAIR        * Ignore the T in ST
         GOTO      SNDXGND IF EQUAL
.
.        Ignore if this is the same as the previous character
.
         CMATCH    C1,C2
         GOTO      SNDXGND IF EQUAL
.
         MOVE      C1,C2
.
.        Convert the character to a SOUND-EX value and if non-zero, add to key
.
         REP       SREP,C1
         MATCH     "0",C1
         GOTO      SNDXGND IF EQUAL
.
         CMOVE     C1,SAVEGSR
         
         GOTO      SNDXGNC
.
.        Finished loop
.
SNDXGNE  RESET     SAVEGSR
         REP       GNREP,SAVEGSR
         STORE     SAVEGSR,FORM1,GSRGKEY1:       * first given name
                                 GSRGKEY2        * second give name
.
         BRANCH    FORM1,SNDXGN1A                * doing 1st given name
         GOTO      SNDXGNF                       * finished 2nd given name
.
.        Get second given name
.
SNDXGN1A MOVE      TWO,FORM1                     * set flag for 2nd given name
         CLEAR     SAVEGSR
         GOTO      SNDXGN05                      * jump back into main loop        
.
SNDXGNF  RETURN
