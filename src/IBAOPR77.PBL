.******************************************************************************
.* System         : OPERATING ROOMS                                           *
.* Program        : IBAOPR77                                                  *
.* Desc.          : Primary Procedure Analysis                                *
.******************************************************************************
.* Date           : 29/07/2004                                                *
.* Author         : Peter Vela                                                *
.* Function       : To display the number of times an MBS item has been a     *
.*                : primary procedure for a given date range and MBS item     *
.*                : range                                                     *
.* Modifications  :                                                           *
.******************************************************************************
.*        V11.03.02 19/04/2023   Thanh T  TSK 0909393                         *
.*                  Changed NMOP0000 to use RSOPDEA6 instead of RSOPDEA1      *
.*        V11.03.01 10/03/2023  PJ Le Febour   TSK 0909393                    *
.*                  Amended KEY23 to KEY26 for theatre index changes          *
.*        V11.01.01 16/02/2021  Tracey Nguyen  TSK 0888639                    *
.*                  FD changed - oprpmbaf.OPRPMBA2 from KEY22 to KEY23        *
.******************************************************************************
.*        V11.00.01 12/03/2020  J.Tan          TSK 0838262                    *
.*                  Added Effective from and to date to MBS Item file         *
.*        V10.11.01 23/11/2017  Davin          TSK 0846231                    *
.*                  Recompiled for OPRPMBFD - added oppmrefn                  *
.*        V10.04.01 07/07/2014   J.Tan     CAR 261630                         *
.*                  Removed port number from temp file name                   *
.*        V9.04.01  26/08/04 Peter Vela      CAR 51685                        *
.*                  Changed period date to calendar date in read to oprdetaf  *
.*        V9.03.01  29/07/04 Peter Vela      CAR 51685                        *
.*                  Created from IBAOPR63                                     *
.******************************************************************************
.
. ------- FD includes needed -------
.
          INC       STD001FD                * all fd's
          INC       IBASEQFD/INC            * Sequential Numbers File
          INC       TFILEVAR/INC            * Generate Temp File Name
          INC       WEBERRFD/INC            * Web Server Error Logging
.
          INC       OPRCLIFD/INC            * clinic file
          INC       OPRCONFD/INC            * control file
          INC       OPRDEAFD/INC            * operation detail file
          INC       OPRPMBFD/INC            * mbs items
          INC       OPRSOSFD/INC            * surgeon operation summary file
          INC       OPRSOUFD/INC            * surgeon operation usage file
          INC       PATCODFD/INC            * codes file
          INC       PATCONFD/INC            * control file
          INC       PATDO1FD/INC            * doctor file
          INC       PATDRGFD/INC            * date range file
          INC       PATICOFD/INC            * ICD-9 file
          INC       PATITMFD/INC            * MBS item file
.
. ------- program variables -------
.
CFNAMEA   DIM       8         * file name for temp file A
CFNAMEB   DIM       8         * file name for temp file B
CFNAMEC   DIM       8         * file name for temp file C
CMDLINE   DIM       50        * command line for 'execute' command
CODE      DIM       2         * category for patdscod
CPTDATE   DIM       8         * for PATCOMN3
CURRDATE  DIM       8         * current date
CURROPER  DIM       8         * current operation
CURRSURG  DIM       6         * current clinic/surgeon
CURRTYPE  DIM       3         * current doctor type
.
DIM1A     DIM       1     
DIM6      DIM       6
DIM6A     DIM       6
DIM7A     DIM       7         * from period   mm/ccyy
DIM7B     DIM       7         * to   period   mm/ccyy
DIM20A    DIM       20        * from period description
DIM20B    DIM       20        * to   period description
DIM20C    DIM       20        * doctor type
DIM20D    DIM       20        * operation type
DIM30     DIM       30        * doctor name for report 2
DIM51     DIM       51
.
DOCNAME   DIM       50        * current doctors name
ENOPCOD   DIM       9
ENOPDES   DIM       40
ENCODE    DIM       3         * entered code in KTYP0000
ENDESC    DIM       20        * entered desc in KTYP0000
FORM8A    FORM      8         * average calculations
FORM8B    FORM      8         * average calculations
.
GTOTAL1   FORM      8         * grand total for total number of patients
GTOTAL2   FORM      8         * grand total for total number of operations
GTOTAL3   FORM      8         * grand total for total time for operations
GTOTAL4   FORM      8         * grand total for total number of privates
GTOTAL5   FORM      8         * grand total for total number of priv operations
GTOTAL6   FORM      8         * grand total for total time for priv operations
GTOTAL7   FORM      8         * grand total for total number of trainees
GTOTAL8   FORM      8         * grand total for total number of trainee opers
GTOTAL9   FORM      8         * grand total for total time for trainee opers
.
LINE      FORM      3
.
NUMOPER2  FORM      8         
.
OCODE1    DIM       9         * starting operation code
OCODE2    DIM       9         * ending operation code
ODESC1    DIM       40        * starting operation desc.
ODESC2    DIM       40        * ending operation desc.
OPRCODE   DIM       9  
OPERDESC  DIM       56        * operation description
OPERCOD2  DIM       9
.
PERDSTRT  DIM       6         * starting period/month
PERDSTOP  DIM       6         * ending period/month
PRFDATE   DIM       10        * from date dd/mm/ccyy
PRTDATE   DIM       10        * to   date dd/mm/ccyy
.
SCRNFLAG  FORM      1         * ? performed flag
STOPCOD   DIM       9
STOPDES   DIM       40
STOPTYPE  DIM       6         * end clinic/surgeon code
STOPDESC  DIM       40        * end clinic/surgeon description
STOPLDAT  DIM       8         * to   date of ending period
STOPHDAT  DIM       8         * from date of ending period
STRTTYPE  DIM       6         * start clinic/surgeon code
STRTDESC  DIM       40        * start clinic/surgeon description
STRTLDAT  DIM       8         * to   date of starting period
STRTHDAT  DIM       8         * from date of starting period
.
TEMPDESC  DIM       40                     * temp codes desc
.
.
.         print total variables
.
AVERAGE   FORM      8         * average time
LOWEST    FORM      8         * lowest operating time 
HIGHEST   FORM      8         * highest operating time
STDAVER   FORM      8         * standard average
TLCASES   FORM      8         * total number of cases
TLOPERN   FORM      8         * total number of operations
TLOTIME   FORM      8         * total time used
.
TOTAL1    FORM      8         * total number of patients
TOTAL2    FORM      8         * total number of operations
TOTAL3    FORM      8         * total time for operations
TOTAL4    FORM      8         * total number of privates
TOTAL5    FORM      8         * total number of priv operations
TOTAL6    FORM      8         * total time of priv operations
TOTAL7    FORM      8         * total number of trainees
TOTAL8    FORM      8         * total number of trainee opers
TOTAL9    FORM      8         * total time of trainee opers
.
.         temp file A
.
TEMPA     IFILE     SQL, FIXED=45, KEY="U10-18,39-44,4-9"
.
.Name     Type      Length Phys Start  Description
.-------  ----      ------ ---- -----  ---------------------------------------
DOCTYPE   DIM       3        3     1   Doctor Type (Cat DT)
DOCTCODE  DIM       6        6     4   Operating Surgeon code 
OPERCODE  DIM       9        9    10   Operating Code (MBS or ICD9)
NUMOPERS  FORM      8        5    19   Number of operations performed
TOTTIME   FORM      8        5    24   Total time used in minutes
LOWTIME   FORM      8        5    29   Lowest time used in minutes
HIGHTIME  FORM      8        5    34   Highest time used in minutes
PERDDATE  DIM       6        6    39   Period Date (CCYYMM)
.                                 45   End of Record
.
.         temp file B
.
TEMPB     IFILE     SQL, FIXED=55, KEY="U1-3,4-9"
.
.Name     Type      Length Phys Start  Description
.-------  ----      ------ ---- -----  ---------------------------------------
.DOCTYPE   DIM       3        3     1   Doctor Type (Cat DT)
.DOCTCODE  DIM       6        6     4   Operating Surgeon code 
TNUMCASE  FORM      8        5    10   Total number of cases performed
TNUMOPER  FORM      8        5    15   Total number of operations performed
TTOTTIME  FORM      8        5    20   Total time used (Mins)
PNUMCASE  FORM      8        5    25   Private number of cases performed
PNUMOPER  FORM      8        5    30   Private number of operations performed
PTOTTIME  FORM      8        5    35   Private time used (Mins)
NNUMCASE  FORM      8        5    40   Trainee number of cases performed
NNUMOPER  FORM      8        5    45   Trainee number of operations performed
NTOTTIME  FORM      8        5    50   Trainee time used (Mins)
.                                 55   End of Record
.
.         temp file C
.
TEMPC     IFILE     SQL, FIXED=23, KEY="U1-3,4-9,10-12"
.
.Name     Type      Length Phys Start  Description
.-------  ----      ------ ---- -----  ---------------------------------------
.DOCTYPE   DIM       3        3     1   Doctor Type (Cat DT)
.DOCTCODE  DIM       6        6     4   Operating Surgeon code 
OPERTYPE  DIM       3        3    10   Operation Type (Cat OY)
OPERAMNT  FORM      8        5    13   Total number of operations performed
OPERTIME  FORM      8        5    18   Total time used (Mins)
.                                 23   End of Record
.
SAVEDCTP  DIM       3
SAVEDCCD  DIM       6
SAVEOPCD  DIM       9
SAVENMOP  FORM      8
SAVETTTM  FORM      8
SAVELWTM  FORM      8
SAVEHITM  FORM      8
SAVEPDDT  DIM       6
SAVENUMR  FORM      8
SAVEOPDS  DIM       56
.
. ------- program constants -------
.
ASK9      INIT      "*********"  * for no doctor codes
CATDT     INIT      "DT"      * doctor type
INDEXA    INIT      " 45 U10-18,39-44,4-9"
INDEXB    INIT      " 55 U1-3,4-9"
INDEXC    INIT      " 23 U1-3,4-9,10-12"
ISBUILD   INIT      "isbuild "
ISERASE   INIT      "iserase "
FINISH    INIT      "Finish"
SP40      INIT      "                                        "
START     INIT      "Start "
ZED6      INIT      "zzzzzz"
ZED9      INIT      "zzzzzzzzz"
ZZZ       INIT      "zzzzzzzzz"
.
PRGID     INIT      "IBAOPR77"
PRGNAM    INIT      "Primary Procedure Analysis"
VERSION   INIT      "V12.00.00"
+
.*********************************************************************
.*                  ML0000                                           *
.*        Mainline Code / Controlling Logic                          *
.*********************************************************************
ML0000    CALL      INIT0000
.
ML1000    CALL      OPTN0000                * get which option
          BRANCH    EXIT,ML9999             * exit
.
ML1500    CALL      KPER0000                * enter periods
          BRANCH    EXIT,ML1000             * nothing entered
.
ML2400    CALL      SOPR0000               * get start operation code
          BRANCH    EXIT,ML1000            * get next option
.
ML2500    CALL      EOPR0000               * get ending operation code
          BRANCH    EXIT,ML2400:           * get start code again
                         ML2400
.         
.         OK to continue
.
ML3000    CALL      CONTQST
          BRANCH    CEXIT,ML4000,ML1500,ML1000
.                         Yes    No     Cancel
.
.         produce the report
.
ML4000    CALL      REPT0000
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.*********************************************************************
.*                  INIT0000                    Called by : ML0000   *
.*        Initialization and open files                              *
.*********************************************************************
INIT0000  CALL      DISPHEAD                * display program header
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE           * current date
          DISPLAY   *P1:3,*EF;              * clear the screen
          MOVE      ONE,CNEWDS              * new ? mark option
          MOVE      ONE,CDEFDTE             * once to accept default
          MOVE      ZERO,CHIGHLT            * use highlighting
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,FORTY;*111,OPCNCLSU,OPCNCODE
          MOVE      ONE,OPCNR63A
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"     * codes file
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"     * doctor file
          OPEN      PATDO1A2,"patdo1af"     * doctor file
.
          DISPLAY   *P64:24,"patdrgaf";
          OPEN      PATDRGA1,"patdrgaf"     * date range file
          OPEN      PATDRGA3,"patdrgaf"     * date range file
.
          DISPLAY   *P64:24,"oprcliaf";
          OPEN      OPRCLIA1,"oprcliaf"     * clinic file
          OPEN      OPRCLIA2,"oprcliaf"     * clinic file
.
          DISPLAY   *P64:24,"oprdetaf";
          OPEN      OPRDETA6,"oprdetaf"     * operation detail file
.
          DISPLAY   *P64:24,"oprpmbaf";
          OPEN      OPRPMBA1,"oprpmbaf"     * mbs items
          OPEN      OPRPMBA2,"oprpmbaf"
.
          DISPLAY   *P64:24,"oprsosaf";
          OPEN      OPRSOSA2,"oprsosaf"     * surgeon summary file
.
          DISPLAY   *P64:24,"oprsouaf";
          OPEN      OPRSOUA1,"oprsouaf"     * surgeon usage file
.
          MOVE      SP70,DIM51
          MOVE      SP70,STRTTYPE
          MOVE      "zzzzzz",STOPTYPE
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,CFNAMEA
.
          BRANCH    OPCNCODE,INIT1000
.
          DISPLAY   *P64:24,"paticdof";
          CALL      OPICO1
          GOTO      INIT9999
.
INIT1000  DISPLAY   *P64:24,"patitemn";
          OPEN      PATITEM1,"patitemn"
.
INIT9999  RETURN
+
.*********************************************************************
.*                  OPTN0000                    Called by : ML1000   *
.*        See if to produce report                                   *
.*        Returns : EXIT = 1      exit chosen                        *
.*                  MOPTION       option type                        *
.*********************************************************************
OPTN0000  HLINE     *G37,2,58,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*P1:5,ONE,*HOFF:
                    *P3:4,"= Exit":
                    *P3:5,"= Print Detail Analysis Report ":
                    *P1:7,"Select Option :";
.
OPTN1000  KEYIN     *P17:7,*DV,UNDLN1,*P17:7,*V2LON,MOPTION;
.
          COMPARE   ZERO,MOPTION
          GOTO      OPTN9000 IF EQUAL       * exit selected
.
          BRANCH    MOPTION,OPTN8000
          BEEP
          GOTO      OPTN1000
.
OPTN8000  MOVE      FALSE,EXIT              * valid answer
          DISPLAY   *P58:2,*V2LON,"- Detail Analysis ";
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT               * exit selected
.
OPTN9999  RETURN
+
.********************************************************************* 
.*                  SCRN0000                    Called by : KDOC0000 *
.*        Redisplay Screen after a ? mark                   KNUR0000 *
.*********************************************************************
SCRN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*P1:5,ONE,*HOFF:
                    *P3:4,"= Exit":
                    *P3:5,"= Print Detail Analysis Report ":
                    *P1:7,"Select Option : ",*V2LON,MOPTION,*HOFF:
                    *P1:10,"Start Date        : ",*V2LON,DIM7A,*HOFF:
                    *P31:10,DIM20A:
                    *P1:11,"End   Date        : ",*V2LON,DIM7B,*HOFF:
                    *P31:11,DIM20B;
.
SCRN9999  RETURN
+
.*********************************************************************
.*                  KPER0000                    Called by : ML1500   *
.*        Enter the period ranges                                    *
.*        Returns : EXIT = 1      exit chosen                        * 
.*                  PERDSTRT      starting period                    *
.*                  PERDSTOP      ending period                      *
.*********************************************************************
KPER0000  DISPLAY   *P1:9,*EF:
                    *P1:10,"Start Date        : ":
                    *P1:11,"End   Date        : ";
.
.         enter starting period
.
KPER1000  MOVE      "10",CVERT              * row
          MOVE      "21",CCOL               * column
          UNPACK    SP4,CYEAR,CMON          * no defaults
          MOVE      CCC,CCENT
          CALL      GPERD
          DISPLAY   *P31:10,*EL;
.
          CALL      KEYPER  
          BRANCH    OVRCD,KPER9000          * nothing entered
          BRANCH    CQUEST,KPER1000         * ? entered
.
          PACK      KEY6,CCENT,CYEAR,CMON
          CALL      RDDRGA3                      * valid REQPER?
          IF        OVRCD = ONE 
            DISPLAY   *P1:24,*B,"Invalid ",CPERMTH,".  ";
            CALL      HITENTER
            GOTO      KPER0000
          ENDIF
.
          PACK      PERDSTRT,DRGYR,DRGNUM
          REP       " 0",PERDSTRT
.
          PACK      DIM7A,IMON,SLASH,ICENT,IYEAR
          REP       " 0",DIM7A
          MOVE      DRGLDSC,DIM20A          * long description
          DISPLAY   *P31:10,DIM20A;         * display description
          MOVE      DRGFDTE,STRTLDAT        * from date of period
          MOVE      DRGTDTE,STRTHDAT        * to date of period
          UNPACK    STRTLDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,PRFDATE         * set print from date
          DISPLAY   *P44:10,PRFDATE         * display date
.
          MATCH     STRTHDAT,CURRDATE
          GOTO      KPER2000 IF NOT LESS    * to date is <= current date
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "Start Date must not be after current date.  ";
          CALL      HITENTER 
          GOTO      KPER1000
.
KPER1500  DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid Date.  ";
          CALL      HITENTER 
          GOTO      KPER1000
.
.         enter ending period (default to starting period)
.
KPER2000  MOVE      "11",CVERT              * row
          MOVE      "21",CCOL               * column
          UNPACK    STRTLDAT,CCENT,CYEAR,CMON
          CALL      GPERD
          DISPLAY   *P31:11,*EL;
.
          CALL      KEYPER 
          BRANCH    OVRCD,KPER2000          * nothing entered
          BRANCH    CQUEST,KPER2000         * ? entered
.
          PACK      KEY6,CCENT,CYEAR,CMON
          CALL      RDDRGA3                      * valid REQPER?
          IF        OVRCD = ONE 
            DISPLAY   *P1:24,*B,"Invalid ",CPERMTH,".  ";
            CALL      HITENTER
            GOTO      KPER0000
          ENDIF
.
          PACK      PERDSTOP,DRGYR,DRGNUM
          REP       " 0",PERDSTOP           * set up end period
.
          MATCH     PERDSTRT,PERDSTOP
          GOTO      KPER2200 IF NOT LESS    * ending period is >= start period
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "End Date must be greater than or equal to Start Date.  ";
          CALL      HITENTER 
          GOTO      KPER2000
.
KPER2200  PACK      DIM7B,IMON,SLASH,ICENT,IYEAR
          REP       " 0",DIM7B
          MOVE      DRGLDSC,DIM20B          * long description
          DISPLAY   *P31:11,DIM20B;         * display description
          MOVE      DRGFDTE,STOPLDAT        * from date of period
          MOVE      DRGTDTE,STOPHDAT        * to date of period
          UNPACK    DRGTDTE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,PRTDATE         * set to print date
          DISPLAY   *P44:11,PRTDATE         * display date
          GOTO      KPER3000
.
KPER2500  DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid Date.  ";
          CALL      HITENTER 
          GOTO      KPER2000
.
.         check end date of end period is before current date
.
KPER3000  MATCH     STOPHDAT,CURRDATE
          GOTO      KPER8000 IF NOT LESS    * date is <= current date
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "End Date must not be after current date.  ";
          CALL      HITENTER 
          GOTO      KPER2000
.
KPER8000  MOVE      FALSE,EXIT              * valid dates
          GOTO      KPER9999
.
KPER9000  MOVE      TRUE,EXIT               * exit selected
.
KPER9999  RETURN
+
.********************************************************************* 
.*                  REPT0000                    Called by : ML4000   *
.*        Produce the report                                         *
.*********************************************************************
REPT0000  MOVE      ZERO,CPAGENO            * clear page number
          MOVE      SP6,CURRSURG            * no current clinic/surgeon
          MOVE      SP3,CURRTYPE            * no current doctor type
.
          CALL      CTMP0000                * create required temp files
          DISPLAY   *P1:24,*EL,*V2LON,"** ",*BLINKON,"Generating Report":
                    *HOFF,*V2LON," **",*HOFF:
                    *P35:24,"Doc. Type :",*P57:24,"Scanning Doc. :";
.
          CALL      PAGE0000                * print page header
.
REPT1000  CALL      LSOS0000                * loop through OPRSOSFD
          CALL      LSOU0000                * loop through OPRSOUFD
.
.         produce the report
.
REPT2000  CALL      REPA0000                * produce the report
.
.         end of temp files
.
REPT8000  CALL      SUMM0000                * print the summary
          CALL      DTMP0000                * delete temp files
.
REPT9999  RETURN
+
.********************************************************************* 
.*                  CTMP0000                    Called by : REPT0000 *
.*        Create the required temp files for the report              *
.*********************************************************************
CTMP0000  DISPLAY   *P1:24,*EL,*P22:24,*V2LON:
                    "** Creating Temporary Index file(s) **";
.
          CALL      DTMP0000                 * delete temp file(s)
.
.         create temp file A
.
CTMP1000  CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,CFNAMEA,INDEXA
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      TEMPA,CFNAMEA
.
CTMP9999  RETURN
+
.*********************************************************************
.*                  DTMP0000                    Called by : CTMP0000 *
.*        Delete the temp files used for the report         REPT8000 *
.********************************************************************* 
DTMP0000  MOVE      ZERO,OVRCD                   * clear ovrcd
          TRAP      OVERCOND IF IO               * set ovrcd to 1 if no file
          OPEN      TEMPA,CFNAMEA                * open file
          BRANCH    OVRCD,DTMP9999               * no file to delete
.
          CLOSE     TEMPA
          CLEAR     CMDLINE
          PACK      CMDLINE,ISERASE,CFNAMEA
          EXECUTE   CMDLINE,TASKID               * erase file
.
DTMP9999  RETURN
+
.*********************************************************************
.*                  PAGE0000                    Called by : REPT0000 *
.*        Print the heading for a new page for the report            *
.********************************************************************* 
PAGE0000  CALL      HEAD132
.
          PRINT     *40,"Start Date : ",DIM7A,*65,DIM20A,SP3,PRFDATE:
                    *N,*40,"End   Date : ",DIM7B,*65,DIM20B,SP3,PRTDATE:
                    *N,*N,*40,"Operation Code Range : ";
.
          MATCH     SP70,OCODE1
          GOTO      PAGE0100 IF NOT EQUAL   * have a start code
.
          PRINT     "Start to ";
          GOTO      PAGE0200
.
PAGE0100  PRINT     OCODE1," to ";
.
PAGE0200  MATCH     "zzzzzzzzz",OCODE2
          GOTO      PAGE0300 IF NOT EQUAL   * have an end code
.
          PRINT     "Finish"
          GOTO      PAGE0400
.
PAGE0300  PRINT     OCODE2
.
PAGE0400  MOVE      "8",CLNO                * set the line counter
.
PAGE1000  CALL      TBLA0000                * print table
.
PAGE9999  RETURN
+
.*********************************************************************
.*                  LSOS0000                    Called by : REPT1000 *
.*        Loop through OPRSOSFD and write to temp file A             *
.*        Report type 1 is the only one which does this              *
.********************************************************************* 
LSOS0000  COMPARE   ONE,OPCNR63A
          GOTO      LSOS9999 IF NOT EQUAL   * only for report one
.
          MOVE      SP70,CURROPER           * initialise curr oper
.
          PACK      KEY21,PERDSTRT,SP20
          CALL      RSOPSOS2                * position at start of range
.
LSOS1000  CALL      RKOPSOS2                * next read
          BRANCH    OVRCD,LSOS9999          * end of file
.
          MATCH     CURROPER,OPSPOPER
          IF        @EQUAL
            GOTO      LSOS1000
          ELSE
            MOVE      OPSPOPER,CURROPER
          ENDIF
.
          MATCH     OPSPDATE,PERDSTOP
          GOTO      LSOS9999 IF LESS        * out of range
          DISPLAY   *P73:24,OPSPDOCT;
.
.         PACK      KEY18,ASK9,OPSPOPER     * default to * for blank doct
          PACK      KEY21,OPERCODE,PERDDATE,ASK9,SP70
          MATCH     SP6,OPSPDOCT
          GOTO      LSOS1500 IF EQUAL       * no doctor code
.
.         validate that doctor is in the range
.
          MOVE      OPSPDOCT,KEY6           * doctor code is key
          CALL      RDDOCT1
          BRANCH    OVRCD,LSOS1000          * invalid doctor code
.
          MATCH     STRTTYPE,DRTYPE
          GOTO      LSOS1000 IF LESS        * doctor type is too low
.
          MATCH     DRTYPE,STOPTYPE
          GOTO      LSOS1000 IF LESS        * doctor type is too high
.
.         have a valid doctor type
.
          DISPLAY   *P47:24,*V2LON,OPSPDOCT;
.
.         PACK      KEY18,DRTYPE,OPSPDOCT,OPSPOPER
          PACK      KEY21,OPSPOPER,OPSPDATE,OPSPDOCT,SP70
.
LSOS1500  UNPACK    KEY21,OPERCODE,PERDDATE,DOCTCODE
          MOVE      ZERO,NUMOPERS           * number of operations
          MOVE      ZERO,TOTTIME            * total time used
          MOVE      "99999999",LOWTIME      * lowest time used
          MOVE      ZERO,HIGHTIME           * highest time used
          MOVE      DRTYPE,DOCTYPE          * doctor type
.         MOVE      "000000",PERDDATE       * period date (CCYYMM)
.
          RESET     KEY21
          MOVE      ZERO,OVRCD              * clear ovrcd value
          READ      TEMPA,KEY21;DOCTYPE,DOCTCODE,OPERCODE,NUMOPERS,TOTTIME:
                    LOWTIME,HIGHTIME,PERDDATE
          CALL      OVERCOND IF OVER        * set ovrcd to 1 if no record
          MOVE      OVRCD,FORM1
.         
.         ADD       OPSPNOPR,NUMOPERS       * number of operations
          CALL      NMOP0000                * get number of operations
          ADD       OPSPTTIM,TOTTIME        * total time used
.
          COMPARE   LOWTIME,OPSPLTIM
          GOTO      LSOS2100 IF NOT LESS    * oprsosaf time is higher
.
          MOVE      OPSPLTIM,LOWTIME        * update lowest time for operation
.
LSOS2100  COMPARE   OPSPHTIM,HIGHTIME
          GOTO      LSOS2200 IF NOT LESS    * time on temp-file is higher
.
          MOVE      OPSPHTIM,HIGHTIME       * update highest time for operation
.
.         have update values, now update temp file
.
LSOS2200  MATCH     OPSPDATE,PERDDATE       * Is PERDDATE < OPSPDATE ?
          IF        @LESS
            MOVE      OPSPDATE,PERDDATE     * Yes, set PERDDATE to new value
          ENDIF
.
          BRANCH    FORM1,LSOS2300          * write a record
.
          UPDATE    TEMPA;DOCTYPE,DOCTCODE,OPERCODE,NUMOPERS,TOTTIME:
                    LOWTIME,HIGHTIME,PERDDATE
          GOTO      LSOS1000                * get next record 
.
LSOS2300  RESET     KEY21
          WRITE     TEMPA,KEY21;DOCTYPE,DOCTCODE,OPERCODE,NUMOPERS,TOTTIME:
                    LOWTIME,HIGHTIME,PERDDATE
          GOTO      LSOS1000
.
LSOS9999  RETURN
+
.*********************************************************************
.*                  LSOU0000                    Called by : REPT1000 *
.*        Loop through OPRSOUFD and write to temp file B             *
.*        Reports 2, 3 and 4 should use this routine                 *
.********************************************************************* 
LSOU0000  COMPARE   ONE,OPCNR63A
          GOTO      LSOU9999 IF EQUAL       * dont do for report type 1
.
          PACK      KEY19,PERDSTRT,SP20
          CALL      RSOPSOU1                * positional read
.
LSOU1000  CALL      RKOPSOU1                * read next record
          BRANCH    OVRCD,LSOU9999          * finished
.
          MATCH     OPSODATE,PERDSTOP
          GOTO      LSOU9999 IF LESS        * out of range
          DISPLAY   *P73:24,OPSODOCT;
.
          MOVE      "********",KEY9         * default to * 
          MOVE      "***",DRTYPE            * SRF 612719
          MATCH     SP6,OPSODOCT
          GOTO      LSOU1500 IF EQUAL       * no code 
.
.         validate that doctor is in the range
.
          MOVE      OPSODOCT,KEY6           * doctor code is key
          CALL      RDDOCT1
          BRANCH    OVRCD,LSOU1000          * invalid doctor code
.
          MATCH     STRTTYPE,DRTYPE
          GOTO      LSOU1000 IF LESS        * doctor type is too low
.
          MATCH     DRTYPE,STOPTYPE
          GOTO      LSOU1000 IF LESS        * doctor type is too high
.
.         have a valid doctor type
.
          DISPLAY   *P47:24,*V2LON,OPSODOCT;
.
          PACK      KEY9,DRTYPE,OPSODOCT
.
LSOU1500  UNPACK    KEY9,DOCTYPE,DOCTCODE
          MOVE      ZERO,TNUMCASE           * Total number of cases performed
          MOVE      ZERO,TNUMOPER           * Total number of operations perf.
          MOVE      ZERO,TTOTTIME           * Total time used in minutes
          MOVE      ZERO,PNUMCASE           * Private number of cases performed
          MOVE      ZERO,PNUMOPER           * Private number of operations perf.
          MOVE      ZERO,PTOTTIME           * Private time used in minutes
          MOVE      ZERO,NNUMCASE           * Trainee number of cases performed
          MOVE      ZERO,NNUMOPER           * Trainee number of operations perf.
          MOVE      ZERO,NTOTTIME           * Trainee time used in minutes
.
          RESET     KEY9
          MOVE      ZERO,OVRCD              * clear ovrcd value
          READ      TEMPB,KEY9;DOCTYPE,DOCTCODE,TNUMCASE,TNUMOPER,TTOTTIME:
                    PNUMCASE,PNUMOPER,PTOTTIME,NNUMCASE,NNUMOPER,NTOTTIME
          CALL      OVERCOND IF OVER        * set ovrcd to 1 if no record
.         
          ADD       OPSONCAS,TNUMCASE       * total number of cases
          ADD       OPSONOPR,TNUMOPER       * total number of operations
          ADD       OPSOTIME,TTOTTIME       * total time used
.
          COMPARE   TWO,OPSOATYP
          GOTO      LSOU2000 IF NOT EQUAL   * not a private patient
.
          ADD       OPSONCAS,PNUMCASE       * private number of cases
          ADD       OPSONOPR,PNUMOPER       * private number of operations
          ADD       OPSOTIME,PTOTTIME       * private time used
.
LSOU2000  COMPARE   ONE,OPSOTRNE
          GOTO      LSOU3000 IF NOT EQUAL   * not a trainee
.
          ADD       OPSONCAS,NNUMCASE       * trainee number of cases
          ADD       OPSONOPR,NNUMOPER       * trainee number of operations
          ADD       OPSOTIME,NTOTTIME       * trainee time used
.
.         have done updates so update temp file
.
LSOU3000  BRANCH    OVRCD,LSOU4000          * do a write
.
          UPDATE    TEMPB;DOCTYPE,DOCTCODE,TNUMCASE,TNUMOPER,TTOTTIME:
                    PNUMCASE,PNUMOPER,PTOTTIME,NNUMCASE,NNUMOPER,NTOTTIME
          GOTO      LSOU5000
.
LSOU4000  RESET     KEY9
          WRITE     TEMPB,KEY9;DOCTYPE,DOCTCODE,TNUMCASE,TNUMOPER,TTOTTIME:
                    PNUMCASE,PNUMOPER,PTOTTIME,NNUMCASE,NNUMOPER,NTOTTIME
.
.         see if to continue with updating temp file C
.
LSOU5000  COMPARE   TWO,OPCNR63A
          GOTO      LSOU1000 IF EQUAL       * dont do for type 2
.
.         update temp file C for report type 3 and 4
.
          PACK      KEY12,KEY9,OPSOOTYP
.
LSOU5100  UNPACK    KEY12,DOCTYPE,DOCTCODE,OPERTYPE
          MOVE      ZERO,OPERAMNT           * number of operations
          MOVE      ZERO,OPERTIME           * total time used
.
          MOVE      ZERO,OVRCD              
          RESET     KEY12
          READ      TEMPC,KEY12;DOCTYPE,DOCTCODE,OPERTYPE,OPERAMNT,OPERTIME
          CALL      OVERCOND IF OVER
.
          ADD       OPSONOPR,OPERAMNT       * add to number of operations
          ADD       OPSOTIME,OPERTIME       * add to operation time
.
.         have done updates, now update temp file C
.
          BRANCH    OVRCD,LSOU5200          * write a record
.
          UPDATE    TEMPC;DOCTYPE,DOCTCODE,OPERTYPE,OPERAMNT,OPERTIME
          GOTO      LSOU5300
.
LSOU5200  RESET     KEY12
          WRITE     TEMPC,KEY12;DOCTYPE,DOCTCODE,OPERTYPE,OPERAMNT,OPERTIME
.
.         update grand totals
.
LSOU5300  MATCH     ZED9,KEY12
          GOTO      LSOU1000 IF EQUAL       * done all totals
.
          MATCH     "zzzzzz",DOCTCODE
          GOTO      LSOU5400 IF NOT EQUAL   * no totals done
.
          PACK      KEY12,ZED9,OPSOOTYP     * set up for grand totals
          GOTO      LSOU5100
.
LSOU5400  PACK      KEY12,DRTYPE,ZED6,OPSOOTYP   * set up for type grand totals
          GOTO      LSOU5100
.
LSOU9999  RETURN
+
.*********************************************************************
.*                  REPA0000                    Called by : REPT2000 *
.*        Report body for layout 1                                   *
.********************************************************************* 
REPA0000  CALL      INSV0000
          MOVE      ZERO,TLOPERN            * number of operations
          MOVE      ZERO,TLOTIME            * total time
          MOVE      "99999999",LOWEST       * set lowest time
          MOVE      ZERO,HIGHEST            * set highest time
          MOVE      SP6,CURRSURG            * clear current surgeon
          MOVE      SP3,CURRTYPE            * clear current doctor type
          MOVE      ZERO,CNOUNDLN           * print underlines at EOP
.         MOVE      PERDDATE,OLDDDATE
          MOVE      ZERO,NUMOPER2
.
          MOVE      "0",CNOUNDLN            * no underlines
.         MOVE      SP70,KEY21              * start at beginning
          PACK      KEY21,OCODE1,SP70
          RESET     KEY21
          READ      TEMPA,KEY21;DOCTYPE,DOCTCODE,OPERCODE,NUMOPERS,TOTTIME:
                    LOWTIME,HIGHTIME,PERDDATE
.
REPA2100  READKS    TEMPA;DOCTYPE,DOCTCODE,OPERCODE,NUMOPERS,TOTTIME:
                    LOWTIME,HIGHTIME,PERDDATE
          GOTO      REPA8000 IF OVER
.
          MATCH     OPERCODE,OCODE2
          GOTO      REPA8000 IF LESS
.
          DISPLAY   *P68:24,*V2LON,DOCTYPE;
.
.         MATCH     DOCTCODE,CURRSURG
.         GOTO      REPA2600 IF EQUAL       * same surgeon so print
.
.         have a new surgeon, finish off last surgeons details
.
          MATCH     SP6,CURRSURG
          GOTO      REPA2400 IF EQUAL       * no current so print new table
.
.         MATCH    OLDDDATE,PERDDATE
.         IF       !@EQUAL
.           CALL     TBLA0000
.           MOVE     PERDDATE,OLDDDATE
.         ENDIF
.
          GOTO      REPA2600
.
.         finish off last surgeon
.
.         MOVE      TLOTIME,AVERAGE         * total time / total # operations
.         DIV       TLOPERN,AVERAGE         *    = average for all operations
.
.         PRINT     *N,"*-------------------------------------------------":
.                      "--------------------------------":
.                      "-------------------------------------------------*":
.                   *N,"|",*13,"| Grand Total",*71,"|",TLOPERN," |",TLOTIME:
.                   " |",AVERAGE," |",LOWEST," |",HIGHEST," |",*132,"|":
.                   *N,"*-------------------------------------------------":
.                      "--------------------------------":
.                      "-------------------------------------------------*"
.
.         ADD       FOUR,CLNO               * add to line number
.         MOVE      DOCTYPE,CURRTYPE        * current doctor type
.         MOVE      DOCTCODE,CURRSURG       * current surgeon
.         MOVE      ZERO,TLOPERN            * number of operations
.         MOVE      ZERO,TLOTIME            * total time
.         MOVE      "99999999",LOWEST       * set lowest time
.         MOVE      ZERO,HIGHEST            * set highest time
.
.         print new table heading
.
.         COMPARE   "60",CLNO
.         GOTO      REPA2400 IF LESS        * just print table heading
.
.         CALL      PAGE0000                * print page and table heading
.         GOTO      REPA2600
.
REPA2400  MOVE      DOCTYPE,CURRTYPE        * current doctor type
          MOVE      DOCTCODE,CURRSURG       * current surgeon
          CALL      TBLA0000                * print table heading
.
.         print the details
.
REPA2600  MOVE      OPERCODE,KEY9
          MOVE      "01",DIM2
          PACK      KEY8,PERDDATE,DIM2,SP70
          MOVE      KEY8,ICDRDDTE
          CALL      OPDS0000                * get operation desc
.
          MOVE      TOTTIME,FORM8A          * total time / number operations =
          DIV       NUMOPERS,FORM8A         * average per operation
.
          MOVE      HIGHTIME,FORM8B         * high time + low time
          ADD       LOWTIME,FORM8B          *      / 2
          DIV       TWO,FORM8B              * standard average
.
          MATCH     SP70,SAVEOPCD
          IF        @EQUAL
            ADD       NUMOPERS,SAVENUMR
            CALL      SVVR0000
            GOTO      REPA2100            
          ENDIF
.
          MATCH     SAVEOPCD,OPERCODE
          IF        @EQUAL
            ADD       NUMOPERS,SAVENUMR
            GOTO      REPA2100
          ELSE
.*********************************
          COMPARE   "60",CLNO
          IF        !@LESS
            PRINT   *N;
            CALL      PAGE0000    * need a new page
          ENDIF
.
          COMPARE   ZERO,SAVENUMR
          IF        !@EQUAL
            PRINT     *N,"| ",SAVEOPCD," | ",SAVEOPDS,*122,"|",SAVENUMR," |";
            ADD       ONE,CLNO                * add to line counter
          ENDIF
.
.         update the total's for each doctor
.
          ADD       SAVENUMR,TLOPERN        * total operations
          ADD       TOTTIME,TLOTIME         * total time
.
          COMPARE   LOWEST,LOWTIME
          GOTO      REPA2700 IF NOT LESS    * temp file time is higher than low
.
          MOVE      LOWTIME,LOWEST          * update lowest time
.
REPA2700  COMPARE   HIGHTIME,HIGHEST
          GOTO      REPA2800 IF NOT LESS    * temp file time is lower
.
          MOVE      HIGHTIME,HIGHEST        * update highest time
.
REPA2800  ADD       ONE,CLNO                * add to line counter
          CALL      SVVR0000
          MOVE      ZERO,SAVENUMR
          ADD       NUMOPERS,SAVENUMR
          GOTO      REPA2100
.
          ENDIF
.********************************
.
.         finished the temp file 
.
REPA8000  COMPARE   "60",CLNO
          IF        !@LESS
            PRINT   *N;
            CALL      PAGE0000    * need a new page
          ENDIF
.
          COMPARE   ZERO,SAVENUMR
          IF         !@EQUAL
            PRINT     *N,"| ",SAVEOPCD," | ",SAVEOPDS,*122,"|",SAVENUMR," |";
            ADD       ONE,CLNO                * add to line counter
          ENDIF
.
          ADD       SAVENUMR,TLOPERN
          MOVE      TLOTIME,AVERAGE         * total time / total # operations
          DIV       TLOPERN,AVERAGE         *    = average for all operations
.
          PRINT     *N,"*-------------------------------------------------":
                       "--------------------------------":
                       "-------------------------------------------------*":
                    *N,"|",*13,"| Grand Total",*122,"|",TLOPERN," |":
                    *N,"*-------------------------------------------------":
                       "--------------------------------":
                       "-------------------------------------------------*";
.
          ADD       FOUR,CLNO               * add to line number
.
REPA9999  RETURN
+
.*********************************************************************
.*                  PTPC0000                    Called by : REPC0000 *
.*        Print the details from temp file C                         *
.*        Para's  : CURRSURG      current surgeon                    * 
.*                  CURRTYPE      current doctor type                *
.*********************************************************************
PTPC0000  MOVE      ONE,FORM1               * indicate first op. type
.
          PACK      KEY12,CURRTYPE,CURRSURG,SP3
          READ      TEMPC,KEY12;DOCTYPE,DOCTCODE,OPERTYPE,OPERAMNT,OPERTIME 
          GOTO      PTPC1200 IF NOT OVER
.
.         read next item on temp file B
.
PTPC1000  READKS    TEMPC;DOCTYPE,DOCTCODE,OPERTYPE,OPERAMNT,OPERTIME 
          GOTO      PTPC9000 IF OVER        * end of file
.
PTPC1200  PACK      KEY9,DOCTYPE,DOCTCODE
          MATCH     KEY9,KEY12
          GOTO      PTPC9000 IF NOT EQUAL   * different type and/or surgeon
.
.         get operation type description
.
          MOVE      "No code",TDESC
          MATCH     SP3,OPERTYPE
          GOTO      PTPC1400 IF EQUAL
          MOVE      "Unknown",TDESC
          PACK      KEY5,ANSO,ANSY,OPERTYPE
          CALL      RDCODE1
PTPC1400  MOVE      TDESC,DIM20D            * operation type desc
.
.         print the details
.
          COMPARE   "60",CLNO
          GOTO      PTPC1500 IF LESS        * will fit on page
.
          PRINT     *N,"*-------------------------------------------------":
                       "-----------------":
                       "-------------------------------------------------*"
          CALL      PAGE0000                * print new page
.
PTPC1500  BRANCH    FORM1,PTPC2000          * in first item
.
.         print when not first op. type -> print from start of line
.
          PRINT     *N,"|",*34,"|",*44,"|",*54,"|",*64,"|",*74,"|":
                    *76,DIM20D,*97,"|",OPERAMNT," |",OPERTIME,*117,"|";
          GOTO      PTPC3000
.
.         print for the first operation type -> print from column 76
.
PTPC2000  MOVE      ZERO,FORM1              * signal done different print
          PRINT     *76,DIM20D,*97,"|",OPERAMNT," |",OPERTIME,*117,"|";
.
.         add to the totals
.
PTPC3000  ADD       ONE,CLNO                * add to line counter
          GOTO      PTPC1000
.
.         end of file
.
PTPC9000  COMPARE   ONE,FORM1
          GOTO      PTPC9500 IF NOT EQUAL   * have printed something
.
          PRINT     *97,"|",*107,"|",*117,"|";
          ADD       ONE,CLNO                * add to line counter
.
PTPC9500  PRINT     *N,"*-------------------------------------------------":
                       "-----------------":
                       "-------------------------------------------------*";
          ADD       ONE,CLNO                * add to line counter
.
PTPC9999  RETURN
+
.*********************************************************************
.*                  PTCP0000                    Called by : REPD0000 *
.*        Print the details from temp file C for report type 4       *
.*        Para's  : CURRSURG      current surgeon                    * 
.*                  CURRTYPE      current doctor type                *
.*********************************************************************
PTCP0000  MOVE      ONE,FORM1               * indicate first op. type
.
          PACK      KEY12,CURRTYPE,CURRSURG,SP3
          READ      TEMPC,KEY12;DOCTYPE,DOCTCODE,OPERTYPE,OPERAMNT,OPERTIME 
          GOTO      PTCP1300 IF NOT OVER
.
.         read next item on temp file B
.
PTCP1000  READKS    TEMPC;DOCTYPE,DOCTCODE,OPERTYPE,OPERAMNT,OPERTIME 
          GOTO      PTCP9000 IF OVER        * end of file
.
PTCP1300  PACK      KEY9,DOCTYPE,DOCTCODE
          MATCH     KEY12,KEY9
          GOTO      PTCP9000 IF NOT EQUAL   * different type and/or surgeon
.
.         get operation type description
.
          MOVE      "No code",TDESC
          MATCH     SP3,OPERTYPE
          GOTO      PTCP1400 IF EQUAL
          MOVE      "Unknown",TDESC
          PACK      KEY5,ANSO,ANSY,OPERTYPE
          CALL      RDCODE1
PTCP1400  MOVE      TDESC,DIM20D            * operation type desc
.
.         print the details
.
          COMPARE   "60",CLNO
          GOTO      PTCP1500 IF LESS        * will fit on page
.
          PRINT     *N,"*-------------------------------------------------":
                       "-----------------":
                       "-----------------------------*"
          CALL      PAGE0000                * print new page
.
PTCP1500  BRANCH    FORM1,PTCP2000          * in first item
.
.         print when not first op. type -> print from start of line
.
          PRINT     *N,"|",*34,"|",*44,"|",*54,"|":
                    *56,DIM20D,*77,"|",OPERAMNT," |",OPERTIME,*97,"|";
          GOTO      PTCP3000
.
.         print for the first operation type -> print from column 76
.
PTCP2000  MOVE      ZERO,FORM1              * signal done different print
          PRINT     *56,DIM20D,*77,"|",OPERAMNT," |",OPERTIME,*97,"|";
.
.         add to the totals
.
PTCP3000  ADD       ONE,CLNO                * add to line counter
          GOTO      PTCP1000
.
.         end of file
.
PTCP9000  COMPARE   ONE,FORM1
          GOTO      PTCP9500 IF NOT EQUAL   * have printed something
.
          PRINT     *77,"|",*87,"|",*97,"|";
          ADD       ONE,CLNO                * add to line counter
.
PTCP9500  PRINT     *N,"*-------------------------------------------------":
                       "-----------------":
                       "-----------------------------*";
          ADD       ONE,CLNO                * add to line counter
.
PTCP9999  RETURN
+
.*********************************************************************
.*                  OPDS0000                    Called by : REPA2600 *
.*        Obtain the operation description                           *
.*        Para's  : KEY9          operation code                     *
.*        Returns : OPERDESC      operation description              *
.********************************************************************* 
OPDS0000  MOVE      "Invalid Operation Code",OPERDESC
.
          COMPARE   ONE,OPCNCODE
          GOTO      OPDS5000 IF NOT EQUAL
.
.         using MBS codes
.
OPDS1000  PACK      KEY17,KEY9,KEY8,SP70
          CALL      PATITMRD                * read item file
          BRANCH    OVRCD,OPDS9999          * invalid code
.
          PACK      OPERDESC,IDESC,SP20     * set up desc
          GOTO      OPDS9999
.
.         using ICD-9 codes
.
OPDS5000  CALL      RDPTICO1                * Read ICD Operation File
          BRANCH    OVRCD,OPDS9999          * invalid code
.
          MOVE      ODESC,OPERDESC          * set up desc
.
OPDS9999  RETURN
+
.*********************************************************************
.*                  TBLA0000                    Called by : PAGE0000 *
.*        Print the table heading for report layout 1       REPA2400 *
.*        Para's  : CURRTYPE      current doctor type                * 
.*                  CURRSURG      current surgeon                    * 
.*********************************************************************
TBLA0000  MATCH     SP6,CURRSURG
          GOTO      TBLA9999 IF EQUAL       * no code to print so exit
.
          MATCH     SP3,CURRTYPE
          GOTO      TBLA9999 IF EQUAL       * no code to print so exit
.
          CALL      GDIN0000                * get doctor name and type desc
          MOVE      TDESC,DIM20C            * doctor type
          MOVE      PACFNAME,DOCNAME        * doctor name
.
TBLA1000  PRINT     *N,"*-------------------------------------------------":
                    "-----------------------------------------------------":
                    "----------------------------*":
.
                    *N,"|",*13,"|",*122,"|  Number |":
.
                    *N,"| Operation |",*122,"|    of   |":
.
                    *N,"|   Code    | Description",*122,"|  Opers. |":
.
                    *N,"*-------------------------------------------------":
                    "-----------------------------------------------------":
                    "----------------------------*";
.
          ADD       "5",CLNO                * inc line counter
.
TBLA9999  RETURN
+
.*********************************************************************
.*                  SUMM0000                    Called by : REPT8000 *
.*        Print the end of report summary                            *
.********************************************************************* 
SUMM0000  PRINT     *N,*N,*N,"*** End of Report ***"
.
SUMM9000  DISPLAY   *P1:24,*EL,*V2LON:
                    "** Report Generation Completed ** ";
          CALL      HITENTER
.
SUMM9999  RETURN
+
.*********************************************************************
.*                  GDIN0000                    Called by : REPB,C,D *
.*        Get the Doctor code and type Description          TBLA     *
.*        Para's  : CURRTYPE      current type code                  *
.*                  DOCTCODE      current doctor code                *
.*        Returns : TDESC         doctor type description            *
.*                  PACFNAME      doctor name                        *
.*********************************************************************
GDIN0000  MOVE      "No Doctor Type",TDESC
          MATCH     "***",CURRTYPE
          GOTO      GDIN5000 IF EQUAL       * no code on file
.
          MOVE      "Unknown Code",TDESC
          PACK      KEY5,CATDT,CURRTYPE
          CALL      RDCODE1                 * get current doctor type desc.
.
.         get doctor name
.
GDIN5000  MOVE      "No Doctor Code ",PACFNAME
          MATCH     "******",DOCTCODE
          GOTO      GDIN9999 IF EQUAL       * no code to display
.
          MOVE      "Unknown Doctor Code",PACFNAME
          MOVE      DOCTCODE,KEY6
          CALL      RDDOCT1
          BRANCH    OVRCD,GDIN9999          * invalid doctors code
.
          MOVE      DSNAME,PACSNAME
          MOVE      DGNAME,PACGNAME
          MOVE      DTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
.
GDIN9999  RETURN
+
.------------------------------------------------------------------
.                            NMOP0000
.                Get the number of operations where 
.               the procedure is a primary procedure
.------------------------------------------------------------------
NMOP0000  PACK      KEY6,PERDDATE,SP70
          CALL      RDDRGA1
          BRANCH    OVRCD,NMOP9999
.
          PACK      DIM6A,DRGCYR,DRGCNUM,SP70
.
          PACK      KEY26,DIM6A,SP70
          CALL      RSOPDEA6
NMOP0100  CALL      RKOPDEA6
          BRANCH    OVRCD,NMOP9999
.
          UNPACK    OPDADATE,DIM6
          MATCH     DIM6A,DIM6
          GOTO      NMOP9999 IF NOT EQUAL
.
.         MATCH     OPDAPROV,OPERCODE
.         IF        @EQUAL
.           ADD       ONE,NUMOPERS
.         ENDIF
.
          PACK      KEY26,OPSPOPER,OPDAUNIQ,ONE,SP2,ONE,SP70
          CALL      RDOPPMB2
          BRANCH    OVRCD,NMOP0100
.
          ADD       ONE,NUMOPERS
.
          GOTO      NMOP0100
.
NMOP9999  RETURN
+
.------------------------------------------------------------------
.                            INSV0000
.------------------------------------------------------------------
INSV0000  MOVE      SP70,SAVEDCTP
          MOVE      SP70,SAVEDCCD
          MOVE      SP70,SAVEOPCD
          MOVE      SP70,SAVENMOP
          MOVE      ZERO,SAVETTTM
          MOVE      ZERO,SAVELWTM
          MOVE      ZERO,SAVEHITM
          MOVE      SP70,SAVEPDDT
          MOVE      ZERO,SAVENUMR
          MOVE      SP70,SAVEOPDS
.
INSV9999  RETURN
+
.------------------------------------------------------------------
.                            SVVR0000
.------------------------------------------------------------------
SVVR0000  MOVE      DOCTYPE,SAVEDCTP
          MOVE      DOCTCODE,SAVEDCCD
          MOVE      OPERCODE,SAVEOPCD
          MOVE      NUMOPERS,SAVENMOP
          MOVE      TOTTIME,SAVETTTM
          MOVE      LOWTIME,SAVELWTM
          MOVE      HIGHTIME,SAVEHITM
          MOVE      PERDDATE,SAVEPDDT
          MOVE      OPERDESC,SAVEOPDS
.
SVVR9999  RETURN
.**************************************************************************
.*                  SOPR0000                     Called by: ML2000        *
.*             Get the start operation code                               *
.*        EXIT    0 = code entered                                        *
.*                1 = exitchar entered                                    *
.**************************************************************************
.
SOPR0000  MOVE      SP70,OCODE1
          CALL      DISP0000                * display entry field captions
.
          MOVE      TEN3,LINE
SOPR0500  CALL      GETO0000                * get operation code
.
          CALL      CHKO0000                * see what was entered
          BRANCH    EXIT,SOPR9999:          * exitchar entered
                         SOPR4000:          * ? entered
                         SOPR0500:          * invalid code
                         SOPR9000           * nothing entered
.
SOPR1000  MOVE      OPRCODE,OCODE1          * save code & desc.
          MOVE      TEMPDESC,ODESC1
          MOVE      OPRCODE,STOPCOD         * display var
          MOVE      TEMPDESC,STOPDES        * display var
          GOTO      SOPR9500
.
SOPR4000  BUMP      OCODE1
          PACK      DIM1A,OCODE1,SP1
          MOVE      ONE,CNEWDS
          CALL      PATITMDS                * list codes on file
.
          MOVE      SP9,OPRCODE
.
SOPR5000  KEYIN     *P1:24,*EL,"Operation Code: ",*P17:24,*DV,UNDLN9:
                    *P17:24,*V2LON,OPRCODE:
                    *P17:24,*DV,OPRCODE
.
          CALL      CHKO0000                * see what was entered
          BRANCH    EXIT,SOPR9999:          * exitchar entered
                         SOPR4000:          * ? entered
                         SOPR5000           * invalid code
.
          CALL      SCRN0000                * redisplay menu
.         DISPLAY   *P1:8,"Select Option :",COPTION
          CALL      DISP0000                * redisplay field captions
.
          COMPARE   EXIT,FOUR               * anything entered ?
          GOTO      SOPR9000 IF EQUAL       * no
.
          GOTO      SOPR1000
.
SOPR9000  MOVE      SP70,OCODE1             * pack code and description
          MOVE      SP40,ODESC1             * with blanks
          MOVE      START,STOPCOD
          MOVE      SP40,STOPDES
.
.         Display using "start" for code
.
          DISPLAY   *P23:13,*V2LON,START,*HOFF,*P34:13,ODESC1
          MOVE      ZERO,EXIT
          GOTO      SOPR9999
.
.         Code entered, so display it
.
SOPR9500  DISPLAY   *P23:13,*V2LON,OCODE1,*HOFF,*P34:13,ODESC1
          MOVE      ZERO,EXIT
.
SOPR9999  RETURN
+
.**************************************************************************
.*                  DISP0000                     Called by: SOPR0000      *
.*           Display entry fields                           EOPR0000      *
.*                                                          SDOC0000      *
.*                                                          EDOC0000      *
.**************************************************************************
.
DISP0000  DISPLAY   *P1:13,*EF,"Operation Code From : ":
                    *P1:14,"Operation Code To   : "
.                   *P1:13,"Doctor Code From    : ":
.                   *P1:14,"Doctor Code To      : "
.
DISP9999  RETURN
+
.**************************************************************************
.*                  CHKO0000                     Called by: SOPR0000      *
.*        See if anything was input for operation code      EOPR0000      *
.*        0 = valid code entered                                          *
.*        1 = exitchar entered                                            *
.*        2 = ? entered                                                   *
.*        3 = invalid code entered                                        *
.*        4 = nothing entered                                             *
.**************************************************************************
.
CHKO0000  ENDSET    OPRCODE                 * pad variable with blanks
          APPEND    SP9,OPRCODE
          RESET     OPRCODE
.
          MATCH     SP9,OPRCODE             * anything entered ?
          GOTO      CHKO9000 IF EQUAL       * no
.
          MATCH     EXITCHAR,OPRCODE        * exitchar entered ?
          GOTO      CHKO7000 IF EQUAL       * yes
.
          MOVE      SP40,TEMPDESC
          MOVE      OPRCODE,KEY9
          BRANCH    OPCNCODE,CHKO3000       * mbs code
.
          MOVE      SP70,ICDRDDTE
          CALL      RDPTICO1                * icd code on file ?
          BRANCH    OVRCD,CHKO9500          * no
.
          MOVE      ODESC,TEMPDESC
          MOVE      ZERO,EXIT               * code entered
          GOTO      CHKO9999
.
CHKO3000  MATCH     QUEST,OPRCODE           * ? entered ?
          GOTO      CHKO8000 IF EQUAL       * yes
.
          PACK      KEY17,KEY9,SP70
          CALL      PATITMRD                * mbs code on file ?
          BRANCH    OVRCD,CHKO9500          * no
.
          MOVE      IDESC,TEMPDESC
          MOVE      ZERO,EXIT               * code entered
          GOTO      CHKO9999
.
CHKO7000  MOVE      ONE,EXIT
          GOTO      CHKO9999
.
CHKO8000  MOVE      TWO,EXIT
          GOTO      CHKO9999
.
CHKO9000  MOVE      FOUR,EXIT
          GOTO      CHKO9999
.
CHKO9500  DISPLAY   *P1:24,*B,"Operation code not on file.  ",*EL;
          CALL      HITENTER
          MOVE      THREE,EXIT
.
CHKO9999  RETURN
+
.**************************************************************************
.*                  GETO0000                     Called by: SOPR0000      *
.*                Get the operation code                    EOPR0000      *
.**************************************************************************
.
GETO0000  MOVE      SP9,OPRCODE
.
          KEYIN     *P23:LINE,*DV,UNDLN9:
                    *P23:LINE,*V2LON,OPRCODE:
                    *P23:LINE,*DV,OPRCODE
GETO9999  RETURN
+
.**************************************************************************
.*                  EOPR0000                     Called by: ML3000        *
.*             Get the end operation code                                 *
.*        EXIT    0 = code entered                                        *
.*                1 = exitchar entered                                    *
.**************************************************************************
.
EOPR0000  MOVE      SP70,OCODE2
          MOVE      TEN4,LINE
EOPR0500  CALL      GETO0000                * get end code
.
          CALL      CHKO0000                * see what was entered
          BRANCH    EXIT,EOPR9999:          * exitchar entered
                         EOPR4000:          * ? entered
                         EOPR0500:          * invalid code
                         EOPR9000           * nothing entered
.
EOPR1000  MOVE      OPRCODE,OCODE2          * save code and desc.
          MOVE      TEMPDESC,ODESC2
          MOVE      OPRCODE,ENOPCOD         * display var
          MOVE      TEMPDESC,ENOPDES        * display var
          GOTO      EOPR9500
.
EOPR4000  BUMP      OCODE2
          PACK      DIM1A,OCODE2,SP1
          MOVE      ONE,CNEWDS
          CALL      PATITMDS                * list codes on file
.
          MOVE      SP9,OPRCODE
.
EOPR5000  KEYIN     *P1:24,*EL,"Operation Code: ",*P17:24,*DV,UNDLN9:
                    *P17:24,*V2LON,OPRCODE,*HOFF:
                    *P17:24,*DV,OPRCODE
.
          CALL      CHKO0000                * see what was entered
          BRANCH    EXIT,EOPR9999:          * exitchar entered
                         EOPR4000:          * ? entered
                         EOPR5000           * invalid code
.
          CALL      SCRN0000                * redisplay menu
.         DISPLAY   *P1:8,"Select Option :",COPTION
          CALL      DISP0000                * redisplay field captions
          DISPLAY   *P23:13,*V2LON,STOPCOD,*HOFF,*P34:13,STOPDES
.
          COMPARE   EXIT,FOUR               * anything entered ?
          GOTO      EOPR9000 IF EQUAL       * no
.
          GOTO      EOPR1000                * check code
.
.         Pack code with "zzzzzzzzz", then display "finish" instead of
.         the code
.
EOPR9000  MOVE      ZZZ,OCODE2
          MOVE      SP40,ODESC2
          MOVE      FINISH,ENOPCOD
          MOVE      SP40,ENOPDES
          DISPLAY   *P23:14,*V2LON,FINISH,*HOFF,*P34:14,ODESC2
          MOVE      ZERO,EXIT
          GOTO      EOPR9999
.
EOPR9500  MATCH     OCODE1,OCODE2           * code 2 less than code 1 ?
          GOTO      EOPR9700 IF LESS        * yes
.
.         Code entered, so display it and desc.
.
EOPR9600  DISPLAY   *P23:14,*V2LON,OCODE2,*HOFF,*P34:14,ODESC2
          MOVE      ZERO,EXIT
          GOTO      EOPR9999

.
EOPR9700  DISPLAY   *P23:14,*V2LON,OCODE2,*HOFF,*P34:14,ODESC2
          DISPLAY   *P1:24,*B,"Invalid Operation Code Range.  ",*EL;
          CALL      HITENTER
          MOVE      TWO,EXIT
.
EOPR9999  RETURN
+
.
. ------- I/O includes needed -------
.
          INC       STD001IO                * all standard routines
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       OPRCLIDS                * ? for clinic file
          INC       PATITMDS
          INC       PATITMRD
          INC       OPRCLIIO/INC            * clinic file
          INC       OPRDEAIO/INC            * operation detail file
          INC       OPRPMBIO/INC            * mbs items
          INC       OPRSOSIO/INC            * surgeon operation summary file
          INC       OPRSOUIO/INC            * surgeon operation usage file
          INC       PATCOMN3                * holds KEYPER
          INC       PATDRGIO/INC            * date range file
          INC       PATCODKY                * ? for codes file
          INC       PATCODIO/INC            * codes file
          INC       PATDO1IO/INC            * doctor file
          INC       PATICOIO/INC            * ICD-9 file
          INC       PATITMIO/INC            * MBS item file
................................................................................
