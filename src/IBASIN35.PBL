.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.02  11.04.2005 Peter Vela CAR 59696
.           Recompiled for SINUSAGE
.         V9.04.01  28/10/2004  Mike Laming   CAR 51162
.                   Correct handling of BackOrders & Stock-on-hand at UPSOH500
. V9.03.01  10.09.2003 Steve Downing (VF.11.01 CAR 9375)
.           Recompiled for SINREBFD & SINREBIO
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 02.11.2000 Charles Handaya
.           Recompiled for sincchaf and SINUSAGE change
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.01.01  18.07.2000 Charles Handaya
.           Omnicell import file - Move spaces into Restock ID (SIBARESI)
.           Quote 9817
.-------------------------------------------------------
. VF.00.02  06.01.2000 Charles Handaya
.           Disallowed Requisition Type of "B","I","T"
.           05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           31.12.1999 Charles Handaya
.           Fixed write the right Quantity figure in Item Audit History
.           22.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  12.11.1999 Sandra Barcham
.           Stop writing with blank warehouses
.           srf 623982
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASIN35
.   Function      :   Requisitions Correction                 
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       SINBACFD/INC
          INC       SINCCAFD/INC
          INC       SINCCBFD/INC
          INC       SINCCEFD/INC
          INC       SINCCFFD/INC
          INC       SINCCHFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCIHFD/INC
          INC       SINCIIFD/INC
          INC       SINCODFD/INC
          INC       SINCONFD/INC
          INC       SINITMFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINPRQFD/INC
          INC       SINREAFD/INC
          INC       SINREBFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWRKDF    
          INC       SINWRKFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
REQTYPE   DIM       1 * Scr 00 Fld     1
REQTDESC  DIM      30 * Scr 00 Fld     3
WHNUMREQ  FORM     12 * Scr 00 Fld    13
WHNUMISS  FORM     12 * Scr 00 Fld    14
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASIN35"
PRGNAM    INIT      "Requisitions Correction                 "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SETSCR00
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   24",AUDTSECT
          MOVE      "206",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudba";
            OPEN      SINAUDBA,"sinaudba"
          ENDIF
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA1,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA2,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA3,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccbaf";
          OPEN      SINCCBA1,"sinccbaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA1,"sincceaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA2,"sincceaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA1,"sinccfaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA2,"sinccfaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA1,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA2,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA3,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA4,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA5,"sincchaf"
          DISPLAY   *P56:24,"Opening sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA1,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA2,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA3,"sincicaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA1,"sincifaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA2,"sincifaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA2,"sincihaf"
          DISPLAY   *P56:24,"Opening sinciiaf";
          OPEN      SINCIIA1,"sinciiaf"
          DISPLAY   *P56:24,"Opening sincodaf";
          OPEN      SINCODA1,"sincodaf"
          DISPLAY   *P56:24,"Opening sincodaf";
          OPEN      SINCODA2,"sincodaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA1,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA2,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinprqaf";
          OPEN      SINPRQA1,"sinprqaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA1,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA2,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA3,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA4,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA1,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA2,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA3,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      ONAT0000
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,REQTYPE 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,REQNUMB 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,REQTDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EREQT000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      REQTYPE,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      REQTYPE,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      REQNUMB,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      REQTDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
KY00L120
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIRACST 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIRADEL 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIRADAT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      RSICA000
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SICADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "1",CKEYTYP
          CALL      EREQN000
          BRANCH    EXIT,KY00L110,KY00L900
          MOVE      ONE,ACCEPT
          MOVE      REQNUMB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIRACST,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIRADEL,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    SIRADAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
          CALL      RSICA000
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SICADESC,VAR     
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L101,PS00L999:
                            PS00L999,PS00L102,PS00L103,PS00L104:
                            PS00L105,PS00L106,PS00L107,PS00L108:
                            PS00L109,PS00L110,PS00L999,PS00L111:
                            PS00L999
          GOTO     PS00L999
.
PS00L101
          MOVE      REQTDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      SIRACST,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      SIRADEL,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          UNPACK    SIRADAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      SIWAWAR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      SIWADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      SIIACAT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      WHNUMREQ,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      WHNUMISS,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          CALL      RSICA000
          MOVE      SICADESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L101,SF00L006,SF00L006,SF00L006:
                            SF00L102,SF00L006,SF00L103,SF00L006:
                            SF00L104,SF00L105,SF00L106,SF00L006:
                            SF00L107
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L102,SF00L020,SF00L103,SF00L020:
                            SF00L104,SF00L105,SF00L020,SF00L020:
                            SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      SETPAR00
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIWADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EWARE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIWAWAR,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIWADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L103
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIIADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECATA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIIACAT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIIADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EQTYR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      WHNUMREQ,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EQTYI000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      WHNUMISS,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L106
          CALL      WSIRB000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L107
          CALL      RINCOCAT
          MOVE      ZERO,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Set up for screen 00
.----------------------------------------------------------------------
SETSCR00
          UNPACK    SP70,SIRBTYP,SIRBREQ,SIRBWAR,SIRBCAT,SAVEWAR,SAVECAT
          CALL      RINCOCAT
          RETURN
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*143,HNONUSAG
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ONE,HNONUSAG
            WRITAB    CONTROLF,SIXTY3;*143,HNONUSAG
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.----------------------------------------------------------------------
. Read cost centre file
.----------------------------------------------------------------------
RSICA000  MOVE      SP70,SICADESC
          PACK      KEY5,SIRACST,SP70
          CALL      RDSICA1
          RETURN
.----------------------------------------------------------------------
. Enter requisition type
.----------------------------------------------------------------------
EREQT000
          CALL      VCATRT00        * Verify Category Ok
          BRANCH    REQTSTAT,EREQT800,EREQT900
.
          CALL      REQTYP00
          BRANCH    EXIT,EREQT999,EREQT999
          MOVE      SICDDESC,REQTDESC
          GOTO      EREQT999
.
EREQT800  MOVE      ZERO,EXIT       * Only One Requisition Type
          GOTO      EREQT999
.
EREQT900  MOVE      "Requisition Type Codes Missing. (Cat. RT ) - ",DISPMSG
          CALL      MESSAGE1
          MOVE      TWO,EXIT
          GOTO      EREQT999
.
EREQT999  RETURN
.
VCATRT00  MOVE      "RT    ",KEY6
          CALL      RDSICD1
          BRANCH    OVRCD,VCATRT90
          CALL      RKSICD1
          BRANCH    OVRCD,VCATRT90
          MATCH     "RT ",SICDCATA
          GOTO      VCATRT90 IF NOT EQUAL
.
VCATRT10
          CALL      RKSICD1
          BRANCH    OVRCD,VCATRT80
          MATCH     "RT ",SICDCATA
          GOTO      VCATRT80 IF NOT EQUAL
          MATCH     "R  ",SICDCODE
          GOTO      VCATRT10 IF EQUAL
          MOVE      ZERO,REQTSTAT
          GOTO      VCATRT99
.
VCATRT80  CALL      RPSICD1
          MOVE      SICDCODE,REQTYPE
          MATCH     ANSR,REQTYPE         * Type "R" is Reserved for Returns
          GOTO      VCATRT90 IF EQUAL
          MOVE      SICDDESC,REQTDESC
          MOVE      ONE,REQTSTAT
          GOTO      VCATRT99
.
VCATRT90  MOVE      TWO,REQTSTAT   * Nothing Setup
          GOTO      VCATRT99
.
VCATRT99  RETURN
.
REQTYP00
          MATCH     SP70,SIRBWAR
          IF        @EQUAL
            KEYIN     *PCCOL:CVERT,*V2LON,*RV,*+,REQTYPE
            PACK      SEQTYPE,REQTYPE,SP70
          ELSE
            PACK      REQTYPE,SEQTYPE,SP70
            DISPLAY   *PCCOL:CVERT,*V2LON,REQTYPE
          ENDIF
          MOVE      REQTYPE,SICDCODE
          ENDSET    SICDCODE
          APPEND    SP70,SICDCODE
          RESET     SICDCODE
.
          MATCH     SP70,SICDCODE
          GOTO      REQTYP90 IF EQUAL
.
          CMATCH    EXITCHAR,SICDCODE
          GOTO      REQTYP95 IF EQUAL
.
          CMATCH    QUEST,SICDCODE
          GOTO      REQTYP10 IF NOT EQUAL
.
          MOVE      "RT ",SICDCATA
          MOVE      CCITEM,SCCITEM
          CALL      HSICDB00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    SICDCODE
          APPEND    SP70,SICDCODE
          RESET     SICDCODE
.
          MATCH     SP70,SICDCODE
          GOTO      REQTYP00 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,SICDCODE
REQTYP10
          MOVE      "RT ",SICDCATA
          PACK      KEY6,SICDCATA,SICDCODE
          CALL      RDSICD1
          BRANCH    OVRCD,REQTYP80
          MOVE      SICDCODE,REQTYPE
          MATCH     ANSR,REQTYPE         * Type "R" is Reserved for Returns
          GOTO      REQTYP70 IF EQUAL
.
          MATCH     ANSB,REQTYPE         * Type "B" is Disabled
          GOTO      REQTYP60 IF EQUAL
.
          MATCH     ANSI,REQTYPE         * Type "I" is Disabled
          GOTO      REQTYP60 IF EQUAL
.
          MATCH     ANST,REQTYPE         * Type "T" is Disabled
          GOTO      REQTYP60 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      REQTYP99
.
REQTYP60  MOVE      "Requisition Type is invalid from this program - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REQTYP00
.
REQTYP70  MOVE      "Requisition Type is for Return of Stock - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REQTYP00
.
REQTYP80  MOVE      "Requisition Type Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REQTYP00
REQTYP90  MOVE      ONE,EXIT
          GOTO      REQTYP99
REQTYP95  MOVE      TWO,EXIT
REQTYP99  RETURN
.
.----------------------------------------------------------------------
. Enter requisition number
.----------------------------------------------------------------------
EREQN000  MATCH     SP70,SIRBWAR
          IF        @EQUAL
            PACK      KEY8,SEQTYPE,SEQNUMB,SP70
            CALL      UUSIRA1                    * ulock last record
.
            KEYIN     *PCCOL:CVERT,*V2LON,*DE,*JR,REQNUMB
            PACK      REQNUMB,REQNUMB,SP70
            PACK      SEQNUMB,REQNUMB,SP70
          ELSE
            PACK      REQNUMB,SEQNUMB,SP70
          ENDIF
.
          DISPLAY   *PCCOL:CVERT,*V2LON,REQNUMB
          MATCH     SP70,REQNUMB
          GOTO      EREQN900 IF EQUAL
          PACK      KEY8,REQTYPE,REQNUMB,SP70
          UNPACK    KEY8,SIRBTYP,SIRBREQ
          CALL      RDSIRA1
          IF        OVRCD=1
            MOVE      "Requisition Not on File - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      EREQN000
          ENDIF
.
          PACK      KEY8,REQTYPE,REQNUMB,SP70
          REPEAT
            CALL      RLSIRA1
            BRANCH    OVRCD,EREQN000   * should be there !!
            IF        OVRCD=2
              PACK      DISPMSG,SP70,SP70
              CALL      MESSAGE2
              KEYIN     *P1:24,*EL,"Requisition Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",ANS
              CALL      MESSAGE3
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      EREQN000 IF EQUAL
              MATCH     "E",ANS
              GOTO      EREQN000 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
          MOVE      ZERO,EXIT
          MOVE      ONE,OVRCD
          MOVE      ONE,ACCEPT
          GOTO      EREQN999
.
EREQN900
          IF        REQTSTAT=0
            MOVE      ONE,EXIT
          ELSE
            MOVE      TWO,EXIT
          ENDIF
.
EREQN999  RETURN
.----------------------------------------------------------------------
. Set Paramteres
.----------------------------------------------------------------------
SETPAR00  UNPACK    SP70,SIRBWAR,SIRBCAT,SIRBTYP,SIRBREQ
          UNPACK    SP70,SIRBDAT,SIRBBCH,SIRBLED,SIRBACC
          MOVE      ZERO,SIRBIQT
          MOVE      ZERO,SIRBRQT
          MOVE      ZERO,SIRBAMT
.
SETPAR99  RETURN
.------------------------------------------------------------
. Enter Warehouse if Item is on more that one warehouse
.------------------------------------------------------------
EWARE000  MOVE      SP70,DEFTWAR
          PACK      KEY12,SIIACAT,SP70
          CALL      RSSIIE1
EWARE005  CALL      RKSIIE1               * Check > 1 warehouse
          BRANCH    OVRCD,EWARE100        * No so just default
.
          MATCH     SIIECAT,SIIACAT
          GOTO      EWARE100 IF NOT EQUAL
          IF        SIIESUS=1|SIIESUS=3
            GOTO      EWARE005            * Suspended
          ENDIF
.
EWARE010  CALL      DWARE000
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,DEFTWAR
          CALL      PUTSCR00
EWARE100  MOVE      DEFTWAR,SIWAWAR
.
          CMATCH    EXITCHAR,SIWAWAR
          IF        @EQUAL
            UNPACK    SP70,SIWAWAR,SIWADES
            DISPLAY   *PCCOL:CVERT,*V2LON,SIWAWAR
            GOTO      EWARE950
          ENDIF
          DISPLAY   *PCCOL:CVERT,*V2LON,SIWAWAR
.
EWARE110  PACK      KEY5,SIWAWAR
          CALL      RDSIWA1
          BRANCH    OVRCD,EWARE800
.
          PACK      KEY12,SIIACAT,SIWAWAR
          CALL      RDSIIE1
          IF        OVRCD=1
            BEEP
            CLEAR     DISPMSG
            APPEND    "Catalog Not Stocked in ",DISPMSG
            MOVE      SIWADES,KEY25
            APPEND    KEY25,DISPMSG
            APPEND    " - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      EWARE010
          ENDIF
.
          PACK      KEY12,SIIACAT,SIWAWAR,SP70
          CALL      SISIWK1
          IF        OVRCD=0
            BEEP
            MOVE      "Stocktake in Progress for This Item. - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EWARE010
          ENDIF
.
          IF        SIIESUS=1|SIIESUS=3
            BEEP
            MOVE      "Catalog Suspended in Warehouse. - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EWARE010
          ENDIF
.
          CALL      CSIWSA00           * check security
          IF        OVRCD=1
            MOVE      "You Have No Access To That Warehouse - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EWARE010
          ENDIF
.
          MOVE      SIWAWAR,VAR
          CALL      DISPITEM
          MOVE      ZERO,EXIT
.
. ------- Check if already on requsition file
          PACK      KEY20,REQTYPE,REQNUMB,SIWAWAR,SIIACAT
          CALL      RDSIRB1
          IF        OVRCD=0
            CALL      DISPF000               * Display Fields
          ELSE
            MOVE      SIWAWAR,SIRBWAR        * srf 623982
            MOVE      ZERO,SIRBRQT
            MOVE      ZERO,SIRBIQT
            MOVE      ZERO,SIRBAMT
          ENDIF
          MOVE      SIRBRQT,SSIRBRQT
          MOVE      SIRBIQT,SSIRBIQT
          MOVE      SIRBAMT,SSIRBAMT
          GOTO      EWARE999
.
EWARE800  MOVE      "Warehouse Does Not Exist - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          GOTO      EWARE010
.
EWARE900  MOVE      ONE,EXIT
          GOTO      EWARE999
EWARE950  MOVE      TWO,EXIT
.
EWARE999  RETURN
.------------------------------------------------------------
. Display Issues and Required amounts
.------------------------------------------------------------
DISPF000
            MOVE      "   13",FLDID
            CALL      GETPOSIT
            IF        EXIT=0
              MOVE      SIRBRQT,VAR
              CALL      DISPITEM
            ENDIF
.
            MOVE      "   14",FLDID
            CALL      GETPOSIT
            IF        EXIT=0
              MOVE      SIRBIQT,VAR
              CALL      DISPITEM
            ENDIF
.
            MOVE      "    9",FLDID
            CALL      GETPOSIT
.
DISPF999  RETURN
.------------------------------------------------------------
. Display Warehouse Details
.------------------------------------------------------------
DWARE000  MOVE      "15",HTOP
          MOVE      "30",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
          BOXCLR    HLEF,HTOP,HRIG,HBOT
          BOX       16,HLEF,HTOP,HRIG,HBOT
          DISPLAY   *P32:16,*V2LON,*ULON,"Warehouse                        ":
                    *P66:16,*V2LON,*ULON,"Stock on Hand"
          MOVE      "17",F2
          PACK      KEY12,SIIACAT,SP70
          CALL      RSSIIE1
DWARE100  CALL      RKSIIE1
          BRANCH    OVRCD,DWARE900
          MATCH     SIIECAT,SIIACAT
          GOTO      DWARE900 IF NOT EQUAL
.
. check warehouse security
.
          MATCH     SP5,SIIEWAR
          IF        !@EQUAL
            PACK      KEY9,PASSCODE,SIIEWAR,SP70
            CALL      RDSIWS1
            BRANCH    OVRCD,DWARE100
          ENDIF
.
          MOVE      SIIEWAR,KEY5
          CALL      RDSIWA1
          MOVE      SIWADES,KEY28
.
          MOVE      "99,999,999.99",KEY13
          FEDIT     SIIESOH,KEY13
          MATCH     "*",KEY13
          IF        @EQUAL
            MOVE      "9999999999.99",KEY13
            FEDIT     SIIESOH,KEY13
          ENDIF
.
          MOVE      SP70,ANS
          IF        SIIESUS=1|SIIESUS=3
            MOVE      "s",ANS
          ENDIF
.
          DISPLAY   *P32:F2,SIIEWAR,*V2LON,ANS,*HOFF,KEY28,KEY13
          ADD       ONE,F2
          COMPARE   "24",F2
          GOTO      DWARE100 IF NOT EQUAL
.
DWARE900  RETURN

.----------------------------------------------------------------------
. Keyin Catalog Code
.----------------------------------------------------------------------
ECATA000  MOVE      ZERO,CKEYSTCK
          MOVE      ZERO,CKEYTYP
          CALL      KSIIAA00
          IF        EXIT=1 | EXIT=2
            CALL      SETPAR00
            MOVE      TWO,EXIT
            GOTO      ECATA999
          ENDIF
.
          CALL      FCATA000     * Check Flags and Warehouse
          BRANCH    EXIT,ECATA000
.
          PACK      KEY12,SIIACAT,SP70
          CALL      RSSIIE1
ECATA100  CALL      RKSIIE1                * Check for warehouse
          BRANCH    OVRCD,ECATA900
.
          MATCH     SIIECAT,SIIACAT
          GOTO      ECATA900 IF NOT EQUAL
          IF        SIIESUS=1|SIIESUS=3
            GOTO      ECATA100             * Suspended
          ENDIF
.
          CALL      CBACK000     * Check for any back orders
          BRANCH    EXIT,ECATA000
.
          MOVE      SIIACAT,SIRBCAT
          MOVE      ZERO,EXIT
          GOTO      ECATA999
.
ECATA900  MOVE      "Catalog is NOT available in any Warehouse - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          GOTO      ECATA000
.
ECATA999  RETURN
.------------------------------------------------------------
. Check for Backorders
.------------------------------------------------------------
CBACK000
          MOVE      ZERO,F12P2
          PACK      KEY25,SICACODE,SIIACAT,SP70
          PACK      KEY12,SICACODE,SIIACAT,SP70
          CALL      RSSIBA1
.
CBACK100
          CALL      RKSIBA1
          BRANCH    OVRCD,CBACK200
          PACK      KEY25,SIBACST,SIBACAT,SIBAREQ,SIBAWAR,SP70
          MATCH     KEY12,KEY25
          GOTO      CBACK200 IF NOT EQUAL
.
          ADD       SIBAQTY,F12P2
          GOTO      CBACK100
.
CBACK200  IF        F12P2>0
            BEEP
            CLEAR     DISPMSG
            APPEND    F12P2,DISPMSG
            APPEND    " Already on Backorder ",DISPMSG
            APPEND    "for this CC - ",DISPMSG
            CALL      MESSAGE4
            BRANCH    EXIT,CBACK950
          ENDIF
.
CBACK900  MOVE      ZERO,EXIT
          GOTO      CBACK999
.
CBACK950  MOVE      ONE,EXIT
.
CBACK999  RETURN
.------------------------------------------------------------
. Check Flags for Catalog
.------------------------------------------------------------
FCATA000  MOVE      ZERO,EXIT
          IF        SIIANON=1
            BEEP
            MOVE      "Catalog is a Non-Stock Item. - ",DISPMSG
            CALL      MESSAGE1
            MOVE      ONE,EXIT
          ENDIF
          IF        SIIASUS=1|SIIASUS=3
            BEEP
            MOVE      "Catalog has been Suspended. - ",DISPMSG
            CALL      MESSAGE1
            MOVE      ONE,EXIT
          ENDIF
.
FCATA999  RETURN
EQTYR000
          MOVE      SIRBRQT,WHNUMREQ
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,WHNUMREQ:
                    *PCCOL:CVERT
.
          IF        WHNUMREQ<0
            MOVE      "Quantity Must be Positive - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      EQTYR000
          ENDIF
.
          MOVE      WHNUMREQ,SIRBRQT
.
EQTYR999  RETURN
EQTYI000
          MOVE      SIRBIQT,WHNUMISS
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,WHNUMISS:
                    *PCCOL:CVERT
.
          IF        WHNUMISS<0
            MOVE      "Quantity Must be Positive - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      EQTYI000
          ENDIF
.
          MOVE      WHNUMISS,SIRBIQT
.
EQTYI999  RETURN
.----------------------------------------------------------------------
. Save data
.----------------------------------------------------------------------
WSIRB000  PACK      KEY12,SIIACAT,SIWAWAR,SP70   * lock catalog/warehouse
          REPEAT
            CALL      RLSIIE1
            BRANCH    OVRCD,WSIRB999
            IF        OVRCD=2
              PACK      DISPMSG,SP70,SP70
              CALL      MESSAGE2
              KEYIN     *P1:24,*EL,"Catalog/Warehouse Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",ANS
              CALL      MESSAGE3
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "E",ANS
              GOTO      WSIRB999 IF EQUAL
              MATCH     "X",ANS
              GOTO      WSIRB999 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
.---- calculate difference ----
.
          ASSIGN    SIRBIQT-SSIRBIQT,SSIRBIQT
          ASSIGN    SIRBRQT-SSIRBRQT,SSIRBRQT
          ASSIGN    SSIRBIQT*SIIAAVC,SSIRBAMT
          ASSIGN    SIRBAMT+SSIRBAMT,SIRBAMT
.
          PACK      KEY20,SIRBTYP,SIRBREQ,SIRBWAR,SIRBCAT,SP70
          CALL      RASIRB1
          IF        OVRCD=1
            CALL      WRSIRB1
          ELSE
            CALL      UPSIRB1
          ENDIF
          CALL      POST0000
.
WSIRB999  PACK      KEY12,SIIACAT,SIWAWAR,SP70   * unlock catalog/warehouse
          CALL      UUSIIE1
          RETURN
.
.---- post data (copied from IBASIN31) ----
.
POST0000  CALL      UPSOH000  * Update Stock on Hand & Backorders if Required
          CALL      UPPIC000  * Update Picking Sheet Details
          CALL      UPITM000  * Update Item History
.
          PACK      KEY5,SIRACST
          CALL      RDSICA1   * Read Cost Centre
          MOVE      SSIRBAMT,SIUSCST
          MOVE      SSIRBIQT,SIUSQTY
          CALL      SINUSAGE  * Update Usage
.
          ADD       SSIRBAMT,SIRATOT
          CALL      UUSIIE1   * Unlock
.
          CALL      UPSIRA1   * Update Requisition Total
          CALL      UUSIRA1   * Unlock Requisition
.
POST9999  RETURN
.--------------------------------------------
. Update Stock on hand and Backorder File
.--------------------------------------------
UPSOH000  MOVE      SIRBWAR,KEY5
          CALL      RDSIWA1
          BRANCH    SIWAPIC,UPSOH500
.
. Requisition Input After Picking.
.
          SUB       SSIRBIQT,SIIESOH
          GOTO      UPSOH600
.
. Requisition Input Before Picking.
.
UPSOH500 MOVE      SP1,ANS
.******************************************** Start of addition        *I-51162
         IF        SSIRBRQT < 0
           MOVE      ZERO,SSIRBIQT
           GOTO      UPSOH600               * Back Orders are being cancelled
         ENDIF
.******************************************** Start of addition        *I-51162
         IF        SIIESOH < SSIRBRQT
            MOVE      SIIESOH,SSIRBIQT
            MOVE      ZERO,SIIESOH
          ELSE
            MOVE      SSIRBRQT,SSIRBIQT
            SUB       SSIRBIQT,SIIESOH
          ENDIF
.
UPSOH600  CALL      UPSIIE1
          MOVE      ZERO,SIBAQTY
.....     IF        SSIRBIQT<SSIRBRQT                                   D-51162
          IF        SSIRBRQT <> 0
            CALL      UPBAC000
          ENDIF
          GOTO      UPSOH999
.
UPSOH999  RETURN
.-----------------------------------
. Update Backorder File
.-----------------------------------
UPBAC000
          READ      CONTROLF,TWENTY3;*120,HBACK
          COMPARE   ONE,HBACK
          GOTO      UPBAC999 IF NOT EQUAL
.
          MOVE      SIRACST,SIBACST
          PACK      SIBAREQ,SIRATYP,SIRAREQ
          MOVE      SIRBCAT,SIBACAT
          MOVE      SIRBWAR,SIBAWAR
          PACK      KEY25,SIBACST,SIBACAT,SIBAREQ,SIBAWAR
          CALL      RDSIBA1
          IF        OVRCD=0
            MOVE      TWO,AUDTTYPE
            CALL      WASIBA00                 * Before Audit Change
            ASSIGN    SIBAQTY+SSIRBRQT-SSIRBIQT,SIBAQTY
            CALL      UPSIBA1
            MOVE      THREE,AUDTTYPE
            CALL      WASIBA00                 * After Audit Change
          ELSE
            ASSIGN    SSIRBRQT-SSIRBIQT,SIBAQTY
            MOVE      SIRADAT,SIBADAT
            MOVE      SP70,SIBARESI
            CALL      WRSIBA1
            MOVE      ONE,AUDTTYPE
            CALL      WASIBA00                 * Audit Added
          ENDIF
.
UPBAC999  RETURN
.-----------------------------------
. Update Picking Sheets File
.-----------------------------------
UPPIC000  MOVE      SIRBWAR,SIPRWAR  * Warehouse
          MOVE      SIRACST,SIPRCST  * Cost Centre
          MOVE      SIRADEL,SIPRDEL  * Delivery Details
          MOVE      SIIERAS,SIPRRAC  * Rack&Shelf
          MOVE      SIRBCAT,SIPRCAT  * Catalog
          MOVE      SIRATYP,SIPRTYP  * Req Type
          MOVE      SIRAREQ,SIPRREQ  * Req No
UPPIC100
          MOVE      ZERO,SECTOR
          REPEAT
            PACK      KEY83,SIPRWAR,SIPRCST,SIPRDEL,SIPRRAC:
                            SIPRCAT,SIPRTYP,SIPRREQ,SP70
            CALL      RLSIPR1
            BRANCH    OVRCD,UPPIC500
            ADD       ONE,SECTOR
          UNTIL     OVRCD=0|SECTOR=20
          IF        SECTOR=20
            CLEAR     DISPMSG
            APPEND    "Picking Sheet Record ",DISPMSG
            APPEND    SIPRTYP,DISPMSG
            APPEND    SIPRREQ,DISPMSG
            APPEND    " Locked - Will Try Again. ",DISPMSG
            CALL      MESSAGE1
            GOTO      UPPIC100
          ENDIF
          MATCH     SP70,SIPRPFL
          GOTO      UPPIC400 IF EQUAL
.
. Can't update a picking sheet record if it has already been printed.
.
          CALL      UUSIPR1
          MATCH     SP70,SIPRDEL
          IF        @EQUAL
            MOVE      "Part 2",SIPRDEL
            GOTO      UPPIC100
          ENDIF
          ENDSET    SIPRDEL
          APPEND    " - 2",SIPRDEL
          RESET     SIPRDEL
          GOTO      UPPIC100 * If all that doesn't work there is a problem.
.
UPPIC400  ADD       SSIRBIQT,SIPRAQT  * Quantity to Issue
          ADD       SSIRBRQT,SIPRRQT  * Quantity Requisted
          ADD       SIBAQTY,SIPRBQT
          MOVE      SP70,SIPRPFL      * Print Flag
          MOVE      SP70,SIPRSPA
          CALL      UPSIPR1
          CALL      UUSIPR1
          GOTO      UPPIC900
.
UPPIC500  MOVE      SSIRBIQT,SIPRAQT  * Quantity to Issue
          MOVE      SSIRBRQT,SIPRRQT  * Quantity Requisted
          MOVE      SIBAQTY,SIPRBQT
          MOVE      SP70,SIPRPFL      * Print Flag
          MOVE      SP70,SIPRSPA
          CALL      WRSIPR1
.
UPPIC900
.
UPPIC999  RETURN
.-----------------------------------
. Update Item History
.-----------------------------------
UPITM000  MOVE      SIRADAT,SIPEDATE
          CALL      RSIPE000                       * Get Usage Period
          PACK      SIITPER,SIPEYEAR,SIPEPER
.
          MOVE      SIRBWAR,SIITWAR                * Warehouse
          MOVE      SIRBCAT,SIITCAT                * Catalog
.
          MOVE      SSIRBIQT,SIITQTY               * Quantity
          MULT      SEQ,SIITQTY                    * Quantity
.
          ASSIGN    SIITQTY*SIIAAVC,SIITAMT
          MOVE      SIRACST,SIITCST                * Cost Centre
          PACK      SIITREQ,SIRATYP,SIRAREQ
          MOVE      "9",SIITTYP                    * Correction
          MOVE      SP70,SIITPUR
          MOVE      SP70,SIITSPA
          MOVE      SIIESOH,SIITSOH            * Stock on Hand
          PACK      SIITREF,SIRACST,SLASH,SIRBTYP,SIRBREQ,SP70
.
          MOVE      PRGID,SIITPRG
          MOVE      PORT,SIITPOR
          MOVE      PASSCODE,SIITOPR
          PACK      SIITDAT,CCC,CYY,CMM,CDD
          REP       " 0",SIITDAT
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
          RETURN
.
. ------------------------------------------------------------
. Read Catalog Code Keyin Control Information
.
. INCOCATE  FORM      1         67      Catalog Code Type
. 0 Normal Keyin,   1 *JR *DE,   2 Generated ,  3 Generated with Check Digit
. INCONCAT  FORM      7         68      Next Generated Catalog Number
.------------------------------------------------------------
RINCOCAT  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*67,INCOCATE
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCOCATE
            WRITAB    CONTROLF,SIXTY3;*67,INCOCATE
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,TWENTY3;*120,HBACK
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,HBACK
            WRITAB    CONTROLF,TWENTY3;*120,HBACK
          ENDIF
.
          RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       SINBACIO/INC
          INC       SINCCAIO/INC
          INC       SINCCBIO/INC
          INC       SINCCEIO/INC
          INC       SINCCFIO/INC
          INC       SINCCHIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCIAKY    
          INC       SINCICIO/INC
          INC       SINCIEIO/INC
          INC       SINCIEKY    
          INC       SINCIFIO/INC
          INC       SINCIHIO/INC
          INC       SINCIIIO/INC
          INC       SINCODIO/INC
          INC       SINCODKY    
          INC       SINITMIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPRQIO/INC
          INC       SINREAIO/INC
          INC       SINREBIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINUSAGE    
          INC       SINWARIO/INC
          INC       SINWRKCD    
          INC       SINWRKIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
