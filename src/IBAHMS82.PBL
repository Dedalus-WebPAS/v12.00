.******************************************************************************
.* System         : Patient Management System                                 *
.* Program        : IBAHMS82.PBL                                              *
.* Name           : NAMHS Report                                              *
.******************************************************************************
.* Date           : 03/03/2008                                                *
.* Author         : J.Tan                                                     *
.* Function       : NAMHS Report for patient admitted within the period and   *
.*                  range of Claim codes                                      *
.* Modifications  :                                                           *
.*                                                                            *
.******************************************************************************
.* V12.00.01 22/05/2025 Thanh T         TSK 0955096                           *
.*           Changed for alphanumeric visit number                            *
.******************************************************************************
.*       V10.05.01 26/08/2014  Ania P         CAR 303210                      *
.*                 Recompiled for MEHHONFD                                    *
.*       V10.04.01 13/06/2014 Steve Armstrong  CAR 301639                     *
.*                 Moved calls to TFILENAM into INIT0000                      *
.*       V10.03.01 24/12/2012 Patrick Adair CAR 261630                        *
.*                 Removed port number from temp file name                    *
.*       V10.00.01 31/03/2010  Mike Laming  CAR 217575                        *
.*                 Recompiled for changes to MEHDIAFD                         *
.*        V9.10.01 13/06/2008 J.Tan     CAR 170392                            *
.*                 Mods 'Total referral' to be 'Total Pre-adm.&Admissions'    *
.******************************************************************************
+
          INC       STD001FD
.
          INC       PATCONFD/INC
          INC       ALLCONFD/INC
          INC       PATCODFD/INC            * Codes file
          INC       PATMA1FD/INC            * Master file
          INC       PATMI1FD/INC            * Admission file
          INC       PATDSCFD/INC            * Discharge file
          INC       MEHHONFD/INC            * MH HONOS file
          INC       MEHDIAFD/INC            * MH Diagnosis file
          INC       ALLREFFD/INC            * Referral file
          INC       PMSVX1FD/INC            * Visit extension file
          INC       PATDRGFD/INC            * Date range file
          INC       PATTRNFD/INC            * Transfer file
          INC       IBASEQFD/INC            * Sequential Numbers File
          INC       TFILEVAR/INC            * Generate Temp File Name
          INC       WEBERRFD/INC            * Web Server Error Logging
.
. ----- Program Variables -----
.
ASDATE    DIM       8
CURDATE   DIM       8
CMDLINE   DIM       80
CPTDATE   DIM       8
CALDAYS   FORM      5
DIM1A     DIM       1
DIM3      DIM       3
DIM4      DIM       4
FNAMEI    DIM       8
FNAMER    DIM       8
FNAMEC    DIM       8
FIRSTFLG  FORM      1
.
FORM3     FORM      3
FORM8     FORM      8
FRPERD    DIM       6
FROMDATE  DIM       8
GROUPCLM  FORM      1                       * Group each claim
TOPERD    DIM       6
TODATE    DIM       8
.
SRBDAY    DIM       4              * MMDD
SRYEAR    FORM      4              * CCYY
SAVKEY5   DIM       5
SAVCLAIM  DIM       3
SAVURNUM  DIM       8
SAVADMNO  DIM       8
STRCLAIM  DIM       3
ENDCLAIM  DIM       3
.
MDESC1    DIM      81
MDESC2    DIM      81
NUMPERS   FORM      2
NOWYEAR   DIM       4
NBRDAYS   FORM      6
PATNAME   DIM       30
PERDAMNT  FORM      8
PERIODNO  FORM      2
ROWNUMBR  FORM      2
.
UKEY      INIT      " 66 U1-2,3-5 U3-5,1-2"
TEMPFIL1  IFILE     SQL, FIXED=66, KEY="U1-2,3-5"
TEMPFIL2  IFILE     SQL, FIXED=66, KEY="U3-5,1-2"
.
.Name     Type  Length  Physical Start Description
.----     ----  ------  -------- ----- -----------
XXRTYPE   DIM       2      2        1  Record Type
.                                      1 - Total no of Adults admission
.                                      2 - Total no of Children admission
.                                      3 - Total Admission/Preadmission
.                                      4 - Total Bed days
.                                      5 - Total Re-admission within 28 days
.                                      6 - Total patients staying for 7 days
.                                      7 - Total patients staying for 14 days
.                                      8 - Total patients staying over 21 days
.                                      9 - Total Discharges
.                                      10- Total Discharges Transfer
.                                      11- Total Discharges Involuntary
.                                      12- Total Discharges Voluntary
.                                      13- Total Disc.Dest.Community Clinics
.                                      14- Total Disc.Dest.Other Public MHS
XXCLAIM   DIM       3      3        3  Claim Code
XXPRE01   FORM      8      5        6  Period 1
XXPRE02   FORM      8      5       11  Period 2
XXPRE03   FORM      8      5       16  Period 3
XXPRE04   FORM      8      5       21  Period 4
XXPRE05   FORM      8      5       26  Period 5
XXPRE06   FORM      8      5       31  Period 6
XXPRE07   FORM      8      5       36  Period 7
XXPRE08   FORM      8      5       41  Period 8
XXPRE09   FORM      8      5       46  Period 9
XXPRE10   FORM      8      5       51  Period 10
XXPRE11   FORM      8      5       56  Period 11
XXPRE12   FORM      8      5       61  Period 12
.EOR                               66
.
UKEY1     INIT      " 104 U1-3,4-4,5-13,14-43"
AXISFIL1  IFILE     SQL, FIXED=104, KEY="U1-3,4-4,5-13,14-43"
.
.Name     Type  Length  Physical Start Description
.----     ----  ------  -------- ----- -----------
.XXCLAIM  DIM       3      3        1  Claim Code
XXCTYPE   DIM       1      1        4  Axis Code Type (1,2 or 3)
XXACODE   DIM       9      9        5  Axis Code
XXADESC   DIM      30     30       14  Axis Description
.XXPRE01  FORM      8      5       44  Period 1
.XXPRE02  FORM      8      5       49  Period 2
.XXPRE03  FORM      8      5       54  Period 3
.XXPRE04  FORM      8      5       59  Period 4
.XXPRE05  FORM      8      5       64  Period 5
.XXPRE06  FORM      8      5       69  Period 6
.XXPRE07  FORM      8      5       74  Period 7
.XXPRE08  FORM      8      5       79  Period 8
.XXPRE09  FORM      8      5       84  Period 9
.XXPRE10  FORM      8      5       89  Period 10
.XXPRE11  FORM      8      5       94  Period 11
.XXPRE12  FORM      8      5       99  Period 12
.EOR                              104
.
UKEY2     INIT      " 67 U1-3,4-6"
RSRCFIL1  IFILE     SQL, FIXED=67, KEY="U1-3,4-6"
.
.Name     Type  Length  Physical Start Description
.----     ----  ------  -------- ----- -----------
.XXCLAIM  DIM       3      3        1  Claim Code
XXRFSRC   DIM       3      3        4  Referral Source
.XXPRE01  FORM      8      5        7  Period 1
.XXPRE02  FORM      8      5       12  Period 2
.XXPRE03  FORM      8      5       17  Period 3
.XXPRE04  FORM      8      5       22  Period 4
.XXPRE05  FORM      8      5       27  Period 5
.XXPRE06  FORM      8      5       32  Period 6
.XXPRE07  FORM      8      5       37  Period 7
.XXPRE08  FORM      8      5       42  Period 8
.XXPRE09  FORM      8      5       47  Period 9
.XXPRE10  FORM      8      5       52  Period 10
.XXPRE11  FORM      8      5       57  Period 11
.XXPRE12  FORM      8      5       62  Period 12
.EOR                               67
.
SXXPRE01  FORM      8
SXXPRE02  FORM      8
SXXPRE03  FORM      8
SXXPRE04  FORM      8
SXXPRE05  FORM      8
SXXPRE06  FORM      8
SXXPRE07  FORM      8
SXXPRE08  FORM      8
SXXPRE09  FORM      8
SXXPRE10  FORM      8
SXXPRE11  FORM      8
SXXPRE12  FORM      8
.
. ----- Program Constants -----
.
PRGID     INIT      "IBAHMS82"
PRGNAM    INIT      "NAMHS Report"
VERSION   INIT      "V12.00.01"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                                 Main Module                                *
.******************************************************************************
ML0000    CALL      INIT0000                * Initialise variables & open files
.
ML1000    CALL      OPTN0000                * Choose main option
          BRANCH    EXIT,ML9999
.
ML2000    CALL      MNTH0000                * Keyin the Month range
          BRANCH    EXIT,ML1000
.
ML3000    CALL      KCLM0000                * Keyin range of claim code
          BRANCH    EXIT,ML2000
.
          CALL      GCLM0000                * Group by Claim code
          BRANCH    EXIT,ML1000
.
          CALL      CONTQST                 * Ok to continue (Y/N/C) ?
          BRANCH    CEXIT,ML4000,ML3000,ML1000
          GOTO      ML1000
.
ML4000    CALL      PROC0000                * Process the files
          CALL      PRNT0000                * Print report from tempfiles
          CALL      KILL0000                * Kill tempfile
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.******************************************************************************
.*                                   INIT0000             Called by: ML0000   *
.*                        Initialise Variable & Open Files                    *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A2,"patmi1af"
          OPEN      PATMI1A3,"patmi1af"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P64:24,"mehhonaf";
          OPEN      MEHHONA1,"mehhonaf"
.
          DISPLAY   *P64:24,"mehdiaaf";
          OPEN      MEHDIAA1,"mehdiaaf"
.
          DISPLAY   *P64:24,"allrefaf";
          OPEN      ALLREFA1,"allrefaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patdrgaf";
          OPEN      PATDRGA1,"patdrgaf"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN1,"pattranf"
          OPEN      PATTRAN2,"pattranf"
.
          READ      CONTROLF,TEN;*94,CAGECOFF
          READ      CONTROLF,HUND05;*208,PTCNSORP
.
          PACK      CURDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURDATE 
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEI
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMER
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEC
.
.         Get the current financial year
.
         PACK      CPTDATE,CCC,CYY,CMM,CDD
         REP       " 0",CPTDATE
         CALL      GPERD
         BRANCH    EXIT,INIT9000
         MOVE      DRGYR,NOWYEAR                 * Save the year.
.
.        Restore the financial year record
.
         PACK      KEY6,NOWYEAR,SP2
         CALL      RDSDRGA1
         CALL      RDKDRGA1
.
         MOVE      ZERO,EXIT
         GOTO      INIT9999
.
.        Error finding current period
.
INIT9000 KEYIN      *P1:24,*EL,*B:
                    "Current Date Missing in the Period Range File. ";
         CALL       HITENTER
.
INIT9900 MOVE       ONE,EXIT                     * Initialisation failed
INIT9999 RETURN
+
.******************************************************************************
.        Get Report Heading description from Date range period file
.******************************************************************************
CHED0000 CLEAR     MDESC1                        * Clear the description
         CLEAR     MDESC2                        * Clear the description
.
         MOVE      ZERO,NUMPERS
         PACK      KEY6,NOWYEAR,SP2
         CALL      RDSDRGA1                      * Position at start of year
CHED1000 CALL      RDKDRGA1
         BRANCH    OVRCD,CHED4000                * Finished loop
.
         MATCH     DRGYR,NOWYEAR                 * Still the same year ?
         GOTO      CHED4000 IF NOT EQUAL         * No. Finished loop
.
.        Add the description for this period to the appropriate variable
.
         ADD       ONE,NUMPERS                   * Increment number of periods
.
         COMPARE   TEN3,NUMPERS                * Done the 2nd 6 periods yet ?
         GOTO      CHED4000 IF NOT LESS        * Yes.
         COMPARE   SEVEN,NUMPERS               * Done the 1st 6 periods yet ?
         GOTO      CHED2000 IF NOT LESS        * Yes.
.
.        Add the description to the 1st six periods
.
         APPEND    SP3,MDESC1                    * Add leading blanks
         APPEND    DRGMDSC,MDESC1                * Append description
         APPEND    SP2,MDESC1                    * Add trailing blanks
         GOTO      CHED1000
.
.        Add the description to the 2nd six periods
.
CHED2000 APPEND    SP3,MDESC2                    * Add leading blanks
         APPEND    DRGMDSC,MDESC2                * Append description
         APPEND    SP2,MDESC2                    * Add trailing blanks
         GOTO      CHED1000
.
.        Finished processing financial year
.
CHED4000 APPEND    SP30,MDESC1
         APPEND    SP30,MDESC1
         APPEND    SP30,MDESC1
         RESET     MDESC1                        * Reset description 1
.
         APPEND    SP30,MDESC2
         APPEND    SP30,MDESC2
         APPEND    SP30,MDESC2
         RESET     MDESC2                        * Reset description 2
.
CHED9999 RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: ML0000   *
.*                                Choose Option                               *
.******************************************************************************
OPTN0000  MOVE      ZERO,OPTION
          MOVE      ZERO,CPAGENO            * Reset the page no
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = By Date Range":
                    *P1:7,"Select Option : ";
OPTN1000  KEYIN     *P17:7,*V2LON,*DV,UNDLN2,*P17:7,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    OPTION,OPTN9000
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
OPTN9999  RETURN
+
.******************************************************************************
.*                                  MNTH0000              Called by: ML0000   *
.*                            Keyin The Month Range                           *
.******************************************************************************
MNTH0000  MOVE      DRGYR,NOWYEAR
          DISPLAY   *P1:11,*EF,"Report for Year:  ",*V2LON,NOWYEAR;
.
          KEYIN      *P19:11,*V2LON,*RV,*JR,*DE,NOWYEAR
.
          UNPACK     NOWYEAR,KEY2,DIM2
          MATCH      SP2,KEY2
          IF         @EQUAL
            MOVE       CCC,KEY2
          ENDIF
          PACK       NOWYEAR,KEY2,DIM2
          REP        " 0",NOWYEAR
          DISPLAY    *P19:11,*V2LON,NOWYEAR
.
MNTH9999  RETURN
+
.**********************************************************************
.*                             KCLM0000                               *
.*                keyin range of claim codes                          *
.**********************************************************************
KCLM0000  MOVE       ZERO,EXIT
          MOVE       SP20,STRCLAIM
          MOVE       SP20,ENDCLAIM
.
          DISPLAY    *P1:4,*EF,"From Claim Code   :":
                         *P1:5,"To   Claim Code   :";
.
          MOVE      "4",EVERT
          MOVE      "20",ECOL               * keyin position
          MOVE      SP3,ACODE
          CALL      KCOD0000                * keyin code
          BRANCH    EXIT,KCLM9000,KCLM2000
          MOVE      ACODE,STRCLAIM
          GOTO      KCLM3000
.
KCLM2000  DISPLAY   *P24:4,*EL,"Start"
.
KCLM3000  MOVE      "5",EVERT
          MOVE      SP3,ACODE
          CALL      KCOD0000                * keyin code
          BRANCH    EXIT,KCLM0000,KCLM4000
          MOVE      ACODE,ENDCLAIM
          GOTO      KCLM9999
.
KCLM4000  DISPLAY   *P24:5,*EL,"End"
          GOTO      KCLM9999
.
KCLM9000  MOVE      ONE,EXIT
KCLM9999  RETURN
+
.******************************************************************************
.*                                  GCLM0000              Called by: ML0000   *
.*                              Group by Claim Code                           *
.******************************************************************************
GCLM0000  MOVE      ZERO,GROUPCLM
          DISPLAY   *P1:12,*EF,"Group by Claim Code (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ";
.
GCLM1000  MOVE      ANSN,ANS
          KEYIN     *P44:12,*V2LON,*RV,ANS;
.
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS
          GOTO      GCLM2000 IF EQUAL       * Spaces, group by claim code
.
          MATCH     ANSN,ANS
          GOTO      GCLM2000 IF EQUAL       * Dont group by claim code
.
          MATCH     ANSY,ANS
          GOTO      GCLM3000 IF EQUAL       * group by claim code
.
          BEEP
          GOTO      GCLM1000
.
GCLM2000  DISPLAY   *P44:12,*EL,*V2LON,"No";
          MOVE      ZERO,GROUPCLM
          GOTO      GCLM9000
.
GCLM3000  DISPLAY   *P44:12,*EL,*V2LON,"Yes";
          MOVE      ONE,GROUPCLM
.
GCLM9000  MOVE      ZERO,EXIT
          GOTO      GCLM9999
.
GCLM9500  MOVE      ONE,EXIT
GCLM9999  RETURN
+
.******************************************************************************
.*                                  PROC0000              Called by: ML0000   *
.*                    Process tempfiles                                       *
.******************************************************************************
PROC0000  CALL      INDZD000
          MOVE      ZERO,PERIODNO
          PACK      KEY6,NOWYEAR,SP70
          CALL      RDSDRGA1
PROC2000  CALL      RDKDRGA1
          BRANCH    OVRCD,PROC9999
.
          MATCH     DRGYR,NOWYEAR
          GOTO      PROC9999 IF NOT EQUAL   * Different financial year
.
          MATCH     DRGFDTE,CURDATE
          GOTO      PROC9999 IF LESS
.
          CALL      SDAY0000                * Adjust end day if necessary
          ADD       ONE,PERIODNO
.
          CALL      CADM0000                * Calculate no of admissions
          CALL      TADM0000                * Total no of admissions/pre-adm
          CALL      BDAY0000                * Calculate bed days
          CALL      DSCH0000                * Calculate discharges
          GOTO      PROC2000
.
PROC9999  RETURN
.
.******************************************************************************
.         Calculate no of admissions
.******************************************************************************
CADM0000  PACK      KEY16,DRGFDTE,SP70
          CALL      RDSMISS3                * Position on & read next record
CADM1000  CALL      RDKMISS3                * file record
          BRANCH    OVRCD,CADM9999
          MATCH     ADATE,DRGTDTE
          GOTO      CADM9999 IF LESS
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,CADM1000
.
          BRANCH    ASTAT,CADM1000          * Skip pre-admission
          COMPARE   FIVE,ASTAT
          GOTO      CADM1000 IF EQUAL       * Cancelled
.
          CALL      RCLM0000                * Check range of Claim code
          BRANCH    EXIT,CADM1000
.
          CALL      CAGE0000                * Total admissions for Adult/Child
          CALL      AXIS0000                * Calculate Axis diagnosis
          CALL      RSRC0000                * Referral source
.
          GOTO      CADM1000
.
CADM9999  RETURN
+
.******************************************************************************
.         Check Age 
.******************************************************************************
CAGE0000  PACK      ASDATE,CCC,CYY,CMM,CDD    * Current Date
          CALL      PATAGED                   * Get current age
.
          COMPARE   PSAGE,CAGECOFF
          GOTO      CAGE2000 IF NOT LESS
.
          MOVE      " 1",KEY2                 * Adult
          GOTO      CAGE4000
.
CAGE2000  MOVE      " 2",KEY2                 * Adolescents
.
CAGE4000  MOVE      ACLAIM,KEY3
          IF        GROUPCLM=0
            MOVE      SP70,KEY3
          ENDIF
          PACK      KEY5,KEY2,KEY3,SP70
.
          CALL      RDTEMP1
          IF        OVRCD=1
            CALL      ITEMP000                * clear variables
            MOVE      KEY2,XXRTYPE
            MOVE      KEY3,XXCLAIM
            STORE     ONE,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                   XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                   XXPRE09,XXPRE10,XXPRE11,XXPRE12
            CALL      WRTEMP1
          ELSE
            MOVE      ZERO,FORM8
            LOAD      FORM8,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                      XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                      XXPRE09,XXPRE10,XXPRE11,XXPRE12
            ADD       ONE,FORM8
            STORE     FORM8,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                      XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                      XXPRE09,XXPRE10,XXPRE11,XXPRE12
            CALL      UPTEMP1
          ENDIF
CAGE9999  RETURN
+
.******************************************************************************
.         Calculate Axis diagnosis  
.******************************************************************************
AXIS0000  PACK      KEY16,AADMNO,Z70
          CALL      RSMHDIA1
          CALL      RPMHDIA1
          BRANCH    OVRCD,AXIS9999
          MATCH     AADMNO,MHDIADMN
          GOTO      AXIS9999 IF NOT EQUAL    * Different admission
.
.         Check Axis 1
.
          MOVE      ZERO,FORM3
AXIS1000  ADD       ONE,FORM3
          COMPARE   FOUR,FORM3
          GOTO      AXIS2000 IF NOT LESS
          UNPACK    SP70,KEY9,KEY30
          LOAD      KEY9,FORM3,MHDIX1CA,MHDIX1CB,MHDIX1CC
          LOAD      KEY30,FORM3,MHDIX1DA,MHDIX1DB,MHDIX1DC
          MATCH     SP70,KEY9                * Axis 1 Code
          IF        !@EQUAL
            MOVE      "1",KEY1               * Axis 1
            CALL      UAXIS000               * Update Axis tempfile
          ENDIF
          GOTO      AXIS1000
.
.         Check Axis 2
.
AXIS2000  MOVE      ZERO,FORM3
AXIS3000  ADD       ONE,FORM3
          COMPARE   FOUR,FORM3
          GOTO      AXIS4000 IF NOT LESS
          UNPACK    SP70,KEY9,KEY30
          LOAD      KEY9,FORM3,MHDIX2CA,MHDIX2CB,MHDIX2CC
          LOAD      KEY30,FORM3,MHDIX2DA,MHDIX2DB,MHDIX2DC
          MATCH     SP70,KEY9                * Axis 2 Code
          IF        !@EQUAL
            MOVE      "2",KEY1               * Axis 2
            CALL      UAXIS000               * Update Axis tempfile
          ENDIF
          GOTO      AXIS3000
.
.         Check Axis 3
.
AXIS4000  MOVE      ZERO,FORM3
AXIS5000  ADD       ONE,FORM3
          COMPARE   FOUR,FORM3
          GOTO      AXIS9999 IF NOT LESS
          UNPACK    SP70,KEY9,KEY30
          LOAD      KEY9,FORM3,MHDIX3CA,MHDIX3CB,MHDIX3CC
          LOAD      KEY30,FORM3,MHDIX3DA,MHDIX3DB,MHDIX3DC
          MATCH     SP70,KEY9                * Axis 3 Code
          IF        !@EQUAL
            MOVE      "3",KEY1               * Axis 3
            CALL      UAXIS000               * Update Axis tempfile
          ENDIF
          GOTO      AXIS5000
.
AXIS9999  RETURN
+
.******************************************************************************
.         Update Axis tempfile
.******************************************************************************
UAXIS000  MOVE      ACLAIM,KEY3
          IF        GROUPCLM=0
            MOVE      SP70,KEY3
          ENDIF
          PACK      KEY43,KEY3,KEY1,KEY9,KEY30,SP70
          CALL      RDAXIS1
          IF        OVRCD=1
            MOVE      KEY3,XXCLAIM
            MOVE      KEY1,XXCTYPE
            MOVE      KEY9,XXACODE
            MOVE      KEY30,XXADESC
            STORE     ONE,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                   XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                   XXPRE09,XXPRE10,XXPRE11,XXPRE12
            CALL      WRAXIS1
          ELSE
            MOVE      ZERO,FORM8
            LOAD      FORM8,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                      XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                      XXPRE09,XXPRE10,XXPRE11,XXPRE12
            ADD       ONE,FORM8
            STORE     FORM8,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                      XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                      XXPRE09,XXPRE10,XXPRE11,XXPRE12
            CALL      UPAXIS1
          ENDIF
UAXIS999  RETURN
+
.******************************************************************************
.         Calculate number of admission for each referral source
.******************************************************************************
RSRC0000  UNPACK    SP70,DIM1,DIM1A,KEY3,DIM3
          UNPACK    PTCNSORP,DIM1,DIM1A
          MOVE      ZERO,F1
          MOVE      DIM1A,F1
          LOAD      DIM3,F1,AUSR1,AUSR2,AUSR3,AUSR4,AUSR5,AUSR6:
                            AUSR7,PTMIUSR8,PTMIUSR9
          MATCH     SP70,DIM3
          GOTO      RSRC9999 IF EQUAL
.
          MOVE      ACLAIM,KEY3
          IF        GROUPCLM=0
            MOVE      SP70,KEY3
          ENDIF
          PACK      KEY6,KEY3,DIM3,SP70
          CALL      RDRSRC1
          IF        OVRCD=1
            MOVE      KEY3,XXCLAIM
            MOVE      DIM3,XXRFSRC
            STORE     ONE,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                   XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                   XXPRE09,XXPRE10,XXPRE11,XXPRE12
            CALL      WRRSRC1
          ELSE
            MOVE      ZERO,FORM8
            LOAD      FORM8,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                      XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                      XXPRE09,XXPRE10,XXPRE11,XXPRE12
            ADD       ONE,FORM8
            STORE     FORM8,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                      XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                      XXPRE09,XXPRE10,XXPRE11,XXPRE12
            CALL      UPRSRC1
          ENDIF
RSRC9999  RETURN
+
.******************************************************************************
.         Total referrals for a period
.******************************************************************************
TREF0000  MOVE      SP70,KEY8
          CALL      RSALREF1
TREF1000  CALL      RKALREF1
          BRANCH    OVRCD,TREF9999          * next period
.
          MATCH     DRGFDTE,ALREDREC       * check fromdate
          GOTO      TREF1000 IF LESS
.
          MATCH     ALREDREC,DRGTDTE        * check enddate
          GOTO      TREF1000 IF LESS
.
          MOVE      ALRECOMP,ACLAIM
          CALL      RCLM0000                * Check range of Claim code
          BRANCH    EXIT,TREF1000
.
          MOVE      " 3",KEY2               * total referrals
          MOVE      ONE,PERDAMNT
          CALL      CTEMP000
.
          GOTO      TREF1000
.
TREF9999  RETURN
+
.******************************************************************************
.         Total Adm/Preadm for a period
.******************************************************************************
TADM0000  PACK      KEY16,DRGFDTE,SP70
          CALL      RDSMISS3
TADM1000  CALL      RDKMISS3
          BRANCH    OVRCD,TADM9999
.
          MATCH     ADATE,DRGTDTE           * check enddate
          GOTO      TADM1000 IF LESS
.
          COMPARE   "1",ASTAT
          GOTO      TADM2000 IF EQUAL       * Pre-admission
          COMPARE   "2",ASTAT
          GOTO      TADM1000 IF NOT EQUAL   * Not current admission
.
TADM2000  CALL      RCLM0000                * Check range of Claim code
          BRANCH    EXIT,TADM1000
.
          MOVE      " 3",KEY2               * total admission/pre-adm.
          MOVE      ONE,PERDAMNT
          CALL      CTEMP000
.
          GOTO      TADM1000
.
TADM9999  RETURN
+
.******************************************************************************
.         Calculate bed days for a period
.******************************************************************************
BDAY0000  MOVE      "2",KEY1                 * processing current patients
          CALL      ADMF0000
.
          MOVE      "4",KEY1                 * processing on-leave patients
          CALL      ADMF0000
.
          PACK      KEY16,DRGFDTE,SP70
          CALL      RDSDSCH2
BDAY4000  CALL      RDKDSCH2
          BRANCH    OVRCD,BDAY9999
.
          MOVE      DADMNO,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,BDAY4000             * Missing admission record
.
          MATCH     DRGTDTE,ADATE
          GOTO      BDAY4000 IF NOT LESS
.
          MOVE      ADATE,FROMDATE
          MOVE      DDATE,TODATE
          CALL      CDAY0000                   * Calculate bed days
          GOTO      BDAY4000
.
BDAY9999  RETURN
+
.******************************************************************************
.         Read admission file for Current/Onleave status
.******************************************************************************
ADMF0000  PACK      KEY9,KEY1,SP70
          CALL      RDSMISS2
ADMF1000  CALL      RDKMISS2
          BRANCH    OVRCD,ADMF9999
.
          MATCH     KEY1,DASTAT
          GOTO      ADMF9999 IF NOT EQUAL      * Different status
.
          MATCH     DRGTDTE,ADATE
          GOTO      ADMF1000 IF NOT LESS
.
          MOVE      ADATE,FROMDATE
          MOVE      CURDATE,TODATE
          CALL      CDAY0000                   * Calculate bed days
          GOTO      ADMF1000
.
ADMF9999  RETURN
+
.******************************************************************************
.         Get bed days for the selected period
.******************************************************************************
CDAY0000  CALL      RCLM0000                * Check range of Claim code
          BRANCH    EXIT,CDAY9999
.
          PACK      KEY5,ANSC,ANSL,ACLAIM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CDAY9999
.
.         Public Patient includes leave days
.         Others (Private/Compensable) not include leave days
.
          MOVE      ZERO,NBRDAYS
          MATCH     "P",TCINDC9              * public
          GOTO      CDAY4000 IF NOT EQUAL
.
          MATCH     DRGFDTE,ADATE
          IF        @LESS
            MOVE      DRGFDTE,FROMDATE
          ENDIF
          MATCH     TODATE,DRGTDTE
          IF        @LESS
            MOVE      DRGTDTE,TODATE
          ENDIF
.
          DAYSEP    FROMDATE,TODATE,NBRDAYS
          GOTO      CDAY8000
.
.         Private exclude leave day
.
CDAY4000  MOVE      DRGFDTE,FROMDATE
          MOVE      DRGTDTE,TODATE
.
          MATCH     DRGTDTE,CURDATE
          IF        @LESS
            MOVE      CURDATE,TODATE
          ENDIF
          CALL      NHOSPDAY
.
CDAY8000  MOVE      " 4",KEY2               * Total bed days
          MOVE      NBRDAYS,PERDAMNT
          CALL      CTEMP000
.
CDAY9999  RETURN
+
.******************************************************************************
.         Subtract one day if end date is equal to current date
.******************************************************************************
SDAY0000  MATCH     DRGTDTE,CURDATE
          GOTO      SDAY9999 IF NOT EQUAL
.         
.         If current period subtract one from the ending date
.         
          MOVE      CCC,CC
          MOVE      CYY,YY
          MOVE      CMM,MM
          MOVE      CDD,DD
          CALL      DMYCON
.
          SUB       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      DRGTDTE,CC,YY,MM,DD
          REP       " 0",DRGTDTE
.
SDAY9999  RETURN
+         
.******************************************************************************
.         Calculates Discharges for a period
.******************************************************************************
DSCH0000  PACK      KEY16,DRGFDTE,SP70
          CALL      RDSDSCH2
DSCH3000  CALL      RDKDSCH2
          BRANCH    OVRCD,DSCH9999
.
          MATCH     DDATE,DRGTDTE
          GOTO      DSCH9999 IF LESS
.
          MOVE      DADMNO,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,DSCH3000          * Missing admission record
.
          CALL      RCLM0000                * Check range of Claim code
          BRANCH    EXIT,DSCH3000
.
          MOVE      " 9",KEY2               * No of discharges
          MOVE      ONE,PERDAMNT
          CALL      CTEMP000
.
          CALL      CRAD0000                * Check for Readmissions
          CALL      CLOS0000                * Check for Patient length of stay 
          CALL      CDES0000                * Check for Destination
          CALL      CLEG0000                * Check for Legal Status
          GOTO      DSCH3000
.
DSCH9999  RETURN
+
.******************************************************************************
.         Check for re-admissions
.******************************************************************************
CRAD0000  MATCH     SP70,PMVXUREA           * Readmissions within 28 days
          GOTO      CRAD9999 IF EQUAL
.
          PACK      KEY5,ANSK,ANSO,PMVXUREA,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CRAD9999
.
          UNPACK    SP70,KEY1,DIM1
          UNPACK    THCSCOD,KEY1,DIM1
          MATCH     "1",DIM1
          GOTO      CRAD2000 IF EQUAL
          MATCH     "2",DIM1
          GOTO      CRAD2000 IF EQUAL
          MATCH     "3",DIM1
          GOTO      CRAD9999 IF NOT EQUAL
.
CRAD2000  MOVE      " 5",KEY2               * Readm.within 28 days
          MOVE      ONE,PERDAMNT
          CALL      CTEMP000
.
CRAD9999  RETURN
+
.******************************************************************************
.         Check for patients Length of stay    
.         Public Patient includes leave days
.         Others (Private/Compensable) not include leave days
.******************************************************************************
CLOS0000  MOVE      ZERO,NBRDAYS
          MATCH     SP70,ACLAIM
          GOTO      CLOS9999 IF EQUAL
.
          PACK      KEY5,ANSC,ANSL,ACLAIM
          CALL      RDCODE1
          BRANCH    OVRCD,CLOS9999
.
          MATCH     "P",TCINDC9
          IF        @EQUAL
            DAYSEP    ADATE,DDATE,NBRDAYS    * include leave days
          ELSE
            MOVE      ADATE,FROMDATE
            MOVE      DDATE,TODATE
            CALL      NHOSPDAY               * exclude leave days
          ENDIF
.
          IF        NBRDAYS<8
            MOVE      " 6",KEY2              * stay less than or equal to 7
          ELSE
            IF        NBRDAYS<15
              MOVE      " 7",KEY2            * stay for less or equal to 14
            ELSE
              MOVE      " 8",KEY2            * stay over 21 days
            ENDIF
          ENDIF
          MOVE      ONE,PERDAMNT
          CALL      CTEMP000
.
CLOS9999  RETURN
+
.******************************************************************************
.         Check Discharge destination 
.******************************************************************************
CDES0000  PACK      KEY5,ANSD,ANSD,DDEST,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CDES9999
.
          MATCH     "1",TCINDC5
          GOTO      CDES4000 IF EQUAL         * Transfer
.
          MATCH     "2",TCINDC5
          GOTO      CDES4000 IF EQUAL         * Transfer
.
          MATCH     "3",TCINDC5
          IF        @EQUAL
            MOVE      "14",KEY2               * Public MHS
            GOTO      CDES8000
          ENDIF
.
          MATCH     "4",TCINDC5
          IF        @EQUAL
            MOVE      "13",KEY2               * Community Clinic
            GOTO      CDES8000
          ENDIF
          GOTO      CDES9999
.
CDES4000  MOVE      "10",KEY2                 * Transfer
.
CDES8000  MOVE      ONE,PERDAMNT
          CALL      CTEMP000
CDES9999  RETURN
+
.******************************************************************************
.           Check for Legal Status
.******************************************************************************
CLEG0000  MOVE      AADMNO,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,CLEG9999
.
          PACK      KEY5,ANSL,ANSS,PMVXMHLS,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CLEG9999
.
          MOVE      SP70,KEY1
          UNPACK    THCSCOD,KEY1
          MATCH     "1",KEY1
          IF        @EQUAL
            MOVE      "11",KEY2               * Involuntary
            GOTO      CLEG8000
          ENDIF
          MATCH     "2",KEY1
          IF        @EQUAL
            MOVE      "12",KEY2               * Voluntary
            GOTO      CLEG8000
          ENDIF
          GOTO      CLEG9999
.
CLEG8000  MOVE      ONE,PERDAMNT
          CALL      CTEMP000
CLEG9999  RETURN
+
.******************************************************************************
.         Check Range of Claim codes
.******************************************************************************
RCLM0000  MATCH     SP20,STRCLAIM
          IF        !@EQUAL
            MATCH     STRCLAIM,ACLAIM         * Check with Start claim code
            GOTO      RCLM9000 IF LESS
          ENDIF
.
          MATCH     SP20,ENDCLAIM
          IF        !@EQUAL
            MATCH     ACLAIM,ENDCLAIM         * Check with End of Claim code
            GOTO      RCLM9000 IF LESS
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      RCLM9999
.
RCLM9000  MOVE      ONE,EXIT
RCLM9999  RETURN
+
.******************************************************************************
.         Check if temp record exist
.******************************************************************************
CTEMP000  MOVE      ACLAIM,KEY3
          IF        GROUPCLM=0
            MOVE      SP70,KEY3
          ENDIF
          PACK      KEY5,KEY2,KEY3,SP70
          CALL      RDTEMP1
          IF        OVRCD=1
            CALL      ITEMP000              * clear variables
            MOVE      KEY2,XXRTYPE
            MOVE      KEY3,XXCLAIM
            STORE     PERDAMNT,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                   XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                   XXPRE09,XXPRE10,XXPRE11,XXPRE12
            CALL      WRTEMP1
          ELSE
            MOVE      ZERO,FORM8
            LOAD      FORM8,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                      XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                      XXPRE09,XXPRE10,XXPRE11,XXPRE12
            ADD       PERDAMNT,FORM8
            STORE     FORM8,PERIODNO,XXPRE01,XXPRE02,XXPRE03,XXPRE04:
                                      XXPRE05,XXPRE06,XXPRE07,XXPRE08:
                                      XXPRE09,XXPRE10,XXPRE11,XXPRE12
            CALL      UPTEMP1
          ENDIF
CTEMP999  RETURN
+
.******************************************************************************
.*                                  HEAD0000                                  *
.*                             Print Report Header                            *
.******************************************************************************
HEAD0000  CALL      IBACLOCK
          CALL      HEAD132                 * Print report header
.
          PRINT     *40,"Year : ",NOWYEAR;
.
          MOVE      "Start               ",TDESC
          MATCH     SP70,STRCLAIM
          IF        !@EQUAL
            PACK      KEY5,ANSC,ANSL,STRCLAIM
            CALL      RDCODE1
          ENDIF
          PRINT     *40,"Claim Type From : ",TDESC;
.
          MOVE      "Finish              ",TDESC
          MATCH     SP70,ENDCLAIM
          IF        !@EQUAL
            PACK      KEY5,ANSC,ANSL,ENDCLAIM
            CALL      RDCODE1
          ENDIF
          PRINT     *85,"Claim Type To   : ",TDESC
.
          MOVE      "No ",KEY3
          IF        GROUPCLM=1
            MOVE      "Yes",KEY3
          ENDIF
          PRINT     *40,"Group by Claim Type: ",KEY3
.
          IF        GROUPCLM=1
            PRINT     *1,"Claim Code: ";
            MATCH     SP70,SAVCLAIM
            IF        !@EQUAL
              PACK      KEY5,ANSC,ANSL,SAVCLAIM,SP70
              CALL      RDCODE1
              PRINT     *13,SAVCLAIM," - ",TDESC
            ELSE
              PRINT     *N;
            ENDIF
            ADD       ONE,CLNO
          ENDIF
.
          CALL      UND132
          PRINT     *1,"| Period",*35,"|",MDESC1:
                    *118,"|      YTD",*132,"|",*N:
                    *1,"|",*35,"|",MDESC2:
                    *118,"|",*132,"|"
          CALL      UND132
.
          ADD       "5",CLNO
.
HEAD9999  RETURN
+
.******************************************************************************
.*                                 KCOD0000              Called By : ML0000   *
.*                         Keyin codes                                        *
.******************************************************************************
KCOD0000  KEYIN     *PECOL:EVERT,*DV,UNDLN3:      * no default used
                    *PECOL:EVERT,*V2LON,ACODE:
                    *PECOL:EVERT,*DV,ACODE
          ENDSET    ACODE
          APPEND    SP3,ACODE
          RESET     ACODE
.
          MATCH     SP3,ACODE
          GOTO      KCOD8000 IF EQUAL       * nothing
.
          PACK      KEY5,ANSC,ANSL,ACODE
          CALL      RDCODE1
          COMPARE   ZERO,OVRCD
          GOTO      KCOD1000 IF EQUAL
          MOVE      ONE,EXIT
          GOTO      KCOD9999
.
KCOD1000  DISPLAY   *P30:EVERT,*V2LON,TDESC;
          MOVE      ZERO,EXIT
          GOTO      KCOD9999
.
KCOD8000  MOVE      TWO,EXIT
KCOD9999  RETURN
+
.******************************************************************************
.         Initialise fields for tempfile
.*****************************************************************************I
STEMP000  MOVE      ZERO,SXXPRE01
          MOVE      ZERO,SXXPRE02
          MOVE      ZERO,SXXPRE03
          MOVE      ZERO,SXXPRE04
          MOVE      ZERO,SXXPRE05
          MOVE      ZERO,SXXPRE06
          MOVE      ZERO,SXXPRE07
          MOVE      ZERO,SXXPRE08
          MOVE      ZERO,SXXPRE09
          MOVE      ZERO,SXXPRE10
          MOVE      ZERO,SXXPRE11
          MOVE      ZERO,SXXPRE12
STEMP999  RETURN
+
.******************************************************************************
.         Initialise fields for tempfile
.*****************************************************************************I
ITEMP000  MOVE      SP70,XXRTYPE   * Record type
          MOVE      ZERO,XXCLAIM   * Claim code
          MOVE      ZERO,XXPRE01
          MOVE      ZERO,XXPRE02
          MOVE      ZERO,XXPRE03
          MOVE      ZERO,XXPRE04
          MOVE      ZERO,XXPRE05
          MOVE      ZERO,XXPRE06
          MOVE      ZERO,XXPRE07
          MOVE      ZERO,XXPRE08
          MOVE      ZERO,XXPRE09
          MOVE      ZERO,XXPRE10
          MOVE      ZERO,XXPRE11
          MOVE      ZERO,XXPRE12
ITEMP999  RETURN
+
.******************************************************************************
.         Print report
.******************************************************************************
PRNT0000  MOVE      ZERO,CPAGENO
          MOVE      "99",CLNO
          MOVE      SP70,SAVCLAIM
          MOVE      SP70,SAVKEY5
.
          CALL      CHED0000             * Setup header
.
          COMPARE   ZERO,GROUPCLM
          GOTO      PRNT6000 IF EQUAL    * Not group by claim code
.
          PACK      KEY5,ANSC,ANSL,STRCLAIM,SP70
          MATCH     SP70,STRCLAIM
          IF        @EQUAL
            CALL      RDSCODE1
            GOTO      PRNT2000
          ELSE
            CALL      RDCODE1
            COMPARE   ZERO,OVRCD
            GOTO      PRNT4000 IF EQUAL
          ENDIF
.
PRNT2000  CALL      RDKCODE1
          BRANCH    OVRCD,PRNT9000
.
          MATCH     "CL",TCODE
          GOTO      PRNT9000 IF NOT EQUAL
.
          MATCH     SP70,ENDCLAIM
          IF        !@EQUAL
            MATCH     ACODE,ENDCLAIM
            GOTO      PRNT9000 IF LESS
          ENDIF
.
PRNT4000  MOVE      ACODE,SAVCLAIM
          PACK      SAVKEY5,TCODE,ACODE,SP70
.
PRNT6000  PACK      KEY5,SAVCLAIM,SP70
          CALL      RSTEMP2
          CALL      RKTEMP2
          BRANCH    OVRCD,PRNT8000
.
          IF        GROUPCLM=1
            MATCH     SAVCLAIM,XXCLAIM
            GOTO      PRNT8000 IF NOT EQUAL
          ENDIF
.
          CALL      PADM0000             * Print Admissions
          CALL      PRAD0000             * Print Reason for admission (Axis)
          CALL      PRSR0000             * Print Referral Source
          CALL      PIND0000             * Print Indicators
          CALL      POCC0000             * Print Occupancy
          CALL      PDSC0000             * Print Discharges
          CALL      PDES0000             * Print Discharge Destinations
.
PRNT8000  COMPARE   ONE,GROUPCLM
          GOTO      PRNT9000 IF NOT EQUAL
.
          MOVE      SAVKEY5,KEY5
          CALL      RDCODE1              * Reposition
          GOTO      PRNT2000             * Group by claim code
.
PRNT9000  MOVE      SP70,SAVCLAIM
          COMPARE   ZERO,CPAGENO
          CALL      HEAD0000 IF EQUAL
          CALL      UND132
PRNT9999  RETURN
.
.******************************************************************************
.         RDPR0000 
.******************************************************************************
RDPR0000  MOVE      ZERO,OVRCD
          PACK      KEY5,KEY2,SP70
          IF        GROUPCLM=1
            PACK      KEY5,KEY2,SAVCLAIM,SP70
          ENDIF
          CALL      RDTEMP1
          IF        OVRCD=1
            CALL      ITEMP000              * clear variables
          ENDIF
.
          CALL      YTDT0000                * YTD
.
          PRINT     *35,"| ",XXPRE01,*49,"| ",XXPRE02,*63,"| ",XXPRE03:
                    *77,"| ",XXPRE04,*91,"| ",XXPRE05,*105,"| ",XXPRE06:
                    *118,"| ",FORM8,*132,"|":
                    *N,*1,"|":
                    *35,"| ",XXPRE07,*49,"| ",XXPRE08,*63,"| ",XXPRE09:
                    *77,"| ",XXPRE10,*91,"| ",XXPRE11,*105,"| ",XXPRE12:
                    *118,"| ",*132,"|"
          ADD       TWO,CLNO
RDPR9999  RETURN
+
.******************************************************************************
.         Print Admissions
.******************************************************************************
PADM0000  COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          PRINT     *1,"| Total Admissions to Facility":
                    *132,"|"
          ADD       ONE,CLNO
          CALL      UND132
.
          MOVE      " 1",KEY2
          PRINT     *1,"| Adults";
          CALL      RDPR0000
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          MOVE      " 2",KEY2
          PRINT     *1,"| Adolescents";
          CALL      RDPR0000
          CALL      UND132
.
PADM9999  RETURN
+
.******************************************************************************
.         Print reasons for admissions - Axis codes
.******************************************************************************
PRAD0000  COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          PRINT     *1,"| Reasons for admission":
                    *132,"|"
          ADD       ONE,CLNO
          CALL      UND132
.
          MOVE      ZERO,FORM1
          MOVE      ZERO,FIRSTFLG
.
PRAD1000  ADD       ONE,FORM1
          MOVE      SP70,KEY1
          MOVE      FORM1,KEY1
.
          MOVE      SP70,KEY3
          IF        GROUPCLM=1
            MOVE      SAVCLAIM,KEY3
          ENDIF
          PACK      KEY43,KEY3,KEY1,SP70
          CALL      RSAXIS1
.
PRAD1200  CALL      RKAXIS1                 * next axis codes
          BRANCH    OVRCD,PRAD9000            * Check Axis 2
.
          IF        GROUPCLM=1
            MATCH     XXCLAIM,SAVCLAIM
            GOTO      PRAD4000 IF NOT EQUAL
          ENDIF
.
          MATCH     KEY1,XXCTYPE
          GOTO      PRAD4000 IF NOT EQUAL
.
          COMPARE   "58",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          BRANCH    FIRSTFLG,PRAD3000
.
          BRANCH    FORM1,PRAD2100,PRAD2200,PRAD2300
.
PRAD2100  PRINT     *1,"| Axis 1":
                    *132,"|"
          CALL      UND132
          MOVE      ONE,FIRSTFLG
          GOTO      PRAD3000
.
PRAD2200  PRINT     *1,"| Axis 2":
                    *132,"|"
          CALL      UND132
          MOVE      ONE,FIRSTFLG
          GOTO      PRAD3000
.
PRAD2300  PRINT     *1,"| Axis 3":
                    *132,"|"
          CALL      UND132
          MOVE      ONE,FIRSTFLG
.
PRAD3000  CALL      YTDT0000                * YTD
.
          PRINT     *1,"| ",XXADESC:
                    *35,"| ",XXPRE01,*49,"| ",XXPRE02,*63,"| ",XXPRE03:
                    *77,"| ",XXPRE04,*91,"| ",XXPRE05,*105,"| ",XXPRE06:
                    *118,"| ",FORM8,*132,"|":
                    *N,*1,"|":
                    *35,"| ",XXPRE07,*49,"| ",XXPRE08,*63,"| ",XXPRE09:
                    *77,"| ",XXPRE10,*91,"| ",XXPRE11,*105,"| ",XXPRE12:
                    *118,"|",*132,"|"
          ADD       TWO,CLNO
          GOTO      PRAD1200
.
PRAD4000  IF        FIRSTFLAG=1
            CALL      UND132
          ENDIF
          MOVE      ZERO,FIRSTFLG
          COMPARE   THREE,FORM1
          GOTO      PRAD1000 IF LESS
.
PRAD9000  COMPARE   ZERO,FIRSTFLAG
          GOTO      PRAD9999 IF EQUAL
.
          CALL      UND132
PRAD9999  RETURN
.
.******************************************************************************
.         Print Referral Sources
.******************************************************************************
PRSR0000  PRINT     *1,"| Referral Sources":
                    *132,"|"
          ADD       ONE,CLNO
          CALL      UND132
.
          PACK     KEY6,SP70
          IF       GROUPCLM=1
            PACK     KEY6,SAVCLAIM,SP70
          ENDIF
          CALL      RSRSRC1
PRSR2000  CALL      RKRSRC1
          BRANCH    OVRCD,PRSR9000
.
          IF        GROUPCLM=1
            MATCH     XXCLAIM,SAVCLAIM
            GOTO      PRSR9000 IF NOT EQUAL
          ENDIF
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          MOVE      SP70,TDESC
          MATCH     SP70,XXRFSRC
          IF        !@EQUAL
            PACK      KEY5,PTCNSORP,DIM3
            CALL      RDCODE1
          ENDIF
.
          CALL      YTDT0000                * YTD
.
          PRINT     *1,"| ",TDESC:
                    *35,"| ",XXPRE01,*49,"| ",XXPRE02,*63,"| ",XXPRE03:
                    *77,"| ",XXPRE04,*91,"| ",XXPRE05,*105,"| ",XXPRE06:
                    *118,"| ",FORM8,*132,"|":
                    *N,*1,"|":
                    *35,"| ",XXPRE07,*49,"| ",XXPRE08,*63,"| ",XXPRE09:
                    *77,"| ",XXPRE10,*91,"| ",XXPRE11,*105,"| ",XXPRE12:
                    *118,"|",*132,"|"
          ADD      TWO,CLNO
          GOTO     PRSR2000
.
PRSR9000  CALL      UND132
PRSR9999  RETURN
+
.******************************************************************************
.         Print Indicators
.******************************************************************************
PIND0000  PRINT     *1,"| Indicators":
                    *132,"|"
          ADD       ONE,CLNO
          CALL      UND132
.
          MOVE      " 3",KEY2
          PRINT     *1,"| Total Pre-Adm.& Admissions";
          CALL      RDPR0000
.
          MOVE      " 4",KEY2
          PRINT     *1,"| Bed Days - total";
          CALL      RDPR0000
          CALL      UND132
.
PIND9999  RETURN
+
.******************************************************************************
.         Print Occupancy
.******************************************************************************
POCC0000  PRINT     *1,"| Occupancy":
                    *132,"|"
          ADD       ONE,CLNO
          CALL      UND132
.
          CALL      PRLS0000             * Print Average LOS
.
          MOVE      " 5",KEY2
          PRINT     *1,"| No of re-adm. within 28 Days";
          CALL      RDPR0000
.
          MOVE      " 6",KEY2
          PRINT     *1,"| Patients staying for 7 days";
          CALL      RDPR0000
.
          MOVE      " 7",KEY2
          PRINT     *1,"| Patients staying for 14 days";
          CALL      RDPR0000
.
          MOVE      " 8",KEY2
          PRINT     *1,"| Patients staying for 21 days";
          CALL      RDPR0000
          CALL      UND132
.
POCC9999  RETURN
+
.******************************************************************************
.         Print Discharges
.******************************************************************************
PDSC0000  PRINT     *1,"| Discharges":
                    *132,"|"
          ADD       ONE,CLNO
          CALL      UND132
.
          MOVE      " 9",KEY2
          PRINT     *1,"| Number of discharges";
          CALL      RDPR0000
.
          MOVE      "10",KEY2
          PRINT     *1,"| Number Transfers";
          CALL      RDPR0000
.
          MOVE      "11",KEY2
          PRINT     *1,"| Involuntary";
          CALL      RDPR0000
.
          MOVE      "12",KEY2
          PRINT     *1,"| Voluntary";
          CALL      RDPR0000
          CALL      UND132
.
PDSC9999  RETURN
+
.******************************************************************************
.         Print Discharge Destinations
.******************************************************************************
PDES0000  PRINT     *1,"| Discharge Destinations":
                    *132,"|"
          ADD       ONE,CLNO
          CALL      UND132
.
          MOVE      "13",KEY2
          PRINT     *1,"| Community Clinics";
          CALL      RDPR0000
.
          MOVE      "14",KEY2
          PRINT     *1,"| Other public MHS";
          CALL      RDPR0000
.
PDES9999  RETURN
+
.******************************************************************************
.         Print Average LOS
.******************************************************************************
PRLS0000  MOVE      ZERO,FORM2
          PRINT     *1,"| Average Length of Stay (LOS)";
.
          ADD       ONE,FORM2
          MOVE      " 4",KEY2                   * bed days
          PACK      KEY5,KEY2,SP70
          IF        GROUPCLM=1
            PACK      KEY5,KEY2,SAVCLAIM,SP70
          ENDIF
          CALL      RDTEMP1
          IF        OVRCD=1
            CALL     STEMP000
            CALL     ITEMP000
            GOTO     PRLS8000
          ENDIF
.
          MOVE      XXPRE01,SXXPRE01
          MOVE      XXPRE01,SXXPRE01
          MOVE      XXPRE02,SXXPRE02
          MOVE      XXPRE03,SXXPRE03
          MOVE      XXPRE04,SXXPRE04
          MOVE      XXPRE05,SXXPRE05
          MOVE      XXPRE06,SXXPRE06
          MOVE      XXPRE07,SXXPRE07
          MOVE      XXPRE08,SXXPRE08
          MOVE      XXPRE09,SXXPRE09
          MOVE      XXPRE10,SXXPRE10
          MOVE      XXPRE11,SXXPRE11
          MOVE      XXPRE12,SXXPRE12
          MOVE      ZERO,FORM8
.
          MOVE      " 9",KEY2                    * number of discharges
          PACK      KEY5,KEY2,SP70
          IF        GROUPCLM=1
            PACK      KEY5,KEY2,SAVCLAIM,SP70
          ENDIF
          CALL      RDTEMP1
          IF        OVRCD=1
            CALL     STEMP000
            CALL     ITEMP000
            GOTO     PRLS8000
          ENDIF
.
          IF        XXPRE01=0
            MOVE      ZERO,SXXPRE01
          ELSE
            DIV       XXPRE01,SXXPRE01
          ENDIF
          IF        XXPRE02=0
            MOVE      ZERO,SXXPRE02
          ELSE
            DIV       XXPRE02,SXXPRE02
          ENDIF
          IF        XXPRE03=0
            MOVE      ZERO,SXXPRE03
          ELSE
            DIV       XXPRE03,SXXPRE03
          ENDIF
          IF        XXPRE04=0
            MOVE      ZERO,SXXPRE04
          ELSE
            DIV       XXPRE04,SXXPRE04
          ENDIF
          IF        XXPRE05=0
            MOVE      ZERO,SXXPRE05
          ELSE
            DIV       XXPRE05,SXXPRE05
          ENDIF
          IF        XXPRE06=0
            MOVE      ZERO,SXXPRE06
          ELSE
            DIV       XXPRE06,SXXPRE06
          ENDIF
          IF        XXPRE07=0
            MOVE      ZERO,SXXPRE07
          ELSE
            DIV       XXPRE07,SXXPRE07
          ENDIF
          IF        XXPRE08=0
            MOVE      ZERO,SXXPRE08
          ELSE
            DIV       XXPRE08,SXXPRE08
          ENDIF
          IF        XXPRE09=0
            MOVE      ZERO,SXXPRE09
          ELSE
            DIV       XXPRE09,SXXPRE09
          ENDIF
          IF        XXPRE10=0
            MOVE      ZERO,SXXPRE10
          ELSE
            DIV       XXPRE10,SXXPRE10
          ENDIF
          IF        XXPRE11=0
            MOVE      ZERO,SXXPRE11
          ELSE
            DIV       XXPRE11,SXXPRE11
          ENDIF
          IF        XXPRE12=0
            MOVE      ZERO,SXXPRE12
          ELSE
            DIV       XXPRE12,SXXPRE12
          ENDIF
.
          ADD       SXXPRE01,FORM8
          ADD       SXXPRE02,FORM8
          ADD       SXXPRE03,FORM8
          ADD       SXXPRE04,FORM8
          ADD       SXXPRE05,FORM8
          ADD       SXXPRE06,FORM8
          ADD       SXXPRE07,FORM8
          ADD       SXXPRE08,FORM8
          ADD       SXXPRE09,FORM8
          ADD       SXXPRE10,FORM8
          ADD       SXXPRE11,FORM8
          ADD       SXXPRE12,FORM8
.
PRLS8000  PRINT     *35,"| ",SXXPRE01,*49,"| ",SXXPRE02,*63,"| ",SXXPRE03:
                    *77,"| ",SXXPRE04,*91,"| ",SXXPRE05,*105,"| ",SXXPRE06:
                    *118,"| ",FORM8,*132,"|":
                    *N,*1,"|":
                    *35,"| ",SXXPRE07,*49,"| ",SXXPRE08,*63,"| ",SXXPRE09:
                    *77,"| ",SXXPRE10,*91,"| ",SXXPRE11,*105,"| ",SXXPRE12:
                    *118,"|",*132,"|"
          ADD      TWO,CLNO
.
PRLS9999  RETURN
+
.******************************************************************************
.         Add total for YTD
.******************************************************************************
YTDT0000  MOVE      ZERO,FORM8
          ADD       XXPRE01,FORM8
          ADD       XXPRE02,FORM8
          ADD       XXPRE03,FORM8
          ADD       XXPRE04,FORM8
          ADD       XXPRE05,FORM8
          ADD       XXPRE06,FORM8
          ADD       XXPRE07,FORM8
          ADD       XXPRE08,FORM8
          ADD       XXPRE09,FORM8
          ADD       XXPRE10,FORM8
          ADD       XXPRE11,FORM8
          ADD       XXPRE12,FORM8
YTDT9999  RETURN
+
.******************************************************************************
.         Create an indexed file based on port
.******************************************************************************
.
.         Check if previously exists..if so delete it
.
INDZD000  CALL      KILL0000
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAMEI,CMDLINE
          APPEND    UKEY,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.             Open Temp Index file
.
          TRAP      INDZD800 IF IO
          OPEN      TEMPFIL1,FNAMEI
          TRAPCLR   IO
          OPEN      TEMPFIL2,FNAMEI
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAMER,CMDLINE
          APPEND    UKEY1,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          TRAP      INDZD820 IF IO
          OPEN      AXISFIL1,FNAMER
          TRAPCLR   IO
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAMEC,CMDLINE
          APPEND    UKEY2,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          TRAP      INDZD830 IF IO
          OPEN      RSRCFIL1,FNAMEC
          TRAPCLR   IO
.
          GOTO      INDZD999
.
INDZD800  DISPLAY   *P1:24,*EL,*B,"** Temporary Index File ",*V2LON,FNAMEI:
                               *HOFF," not found **   ";
          PRINT     *10,"** Temporary Index File ",FNAMEI," not found ** "
          TRAPCLR   IO
          GOTO      INDZD999
.
INDZD820  DISPLAY   *P1:24,*EL,*B,"** Temporary Index File ",*V2LON,FNAMER:
                               *HOFF," not found **   ";
          PRINT     *10,"** Temporary Index File ",FNAMER," not found ** "
          TRAPCLR   IO
          GOTO      INDZD999
.
INDZD830  DISPLAY   *P1:24,*EL,*B,"** Temporary Index File ",*V2LON,FNAMEC:
                               *HOFF," not found **   ";
          PRINT     *10,"** Temporary Index File ",FNAMEC," not found ** "
          TRAPCLR   IO
.
INDZD999  RETURN
.
.******************************************************************************
.*                                  KILL0000              Called by: ML0000   *
.*                             Delete The Tempfile                 & OPEN0000 *
.******************************************************************************
.
KILL0000  CLOSE     TEMPFIL1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAMEI,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLOSE     AXISFIL1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAMER,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLOSE     RSRCFIL1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAMEC,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
KILL9999  RETURN
+
.***************************************************************************
.*  Temp file I/O's                                                        *
.***************************************************************************
RDTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      TEMPFIL1,KEY5;XXRTYPE,XXCLAIM:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMP1   RESET     KEY5
          READ      TEMPFIL1,KEY5;;
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    TEMPFIL1;XXRTYPE,XXCLAIM:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   RESET     KEY5
          WRITE     TEMPFIL1,KEY5;XXRTYPE,XXCLAIM:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          RETURN
.
UPTEMP1   MOVE      ZERO,OVRCD
          UPDATE    TEMPFIL1;XXRTYPE,XXCLAIM:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          RETURN
.
RSTEMP2   RESET     KEY5
          READ      TEMPFIL2,KEY5;;
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    TEMPFIL2;XXRTYPE,XXCLAIM:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          GOTO      OVERCOND IF OVER
          RETURN
.
.***************************************************************************
.
RDAXIS1   MOVE      ZERO,OVRCD
          RESET     KEY43
          READ      AXISFIL1,KEY43;XXCLAIM,XXCTYPE,XXACODE,XXADESC:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          GOTO      OVERCOND IF OVER
          RETURN
.
RSAXIS1   RESET     KEY43
          READ      AXISFIL1,KEY43;;
          RETURN
.
RKAXIS1   MOVE      ZERO,OVRCD
          READKS    AXISFIL1;XXCLAIM,XXCTYPE,XXACODE,XXADESC:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          GOTO      OVERCOND IF OVER
          RETURN
.
WRAXIS1   RESET     KEY43
          WRITE     AXISFIL1,KEY43;XXCLAIM,XXCTYPE,XXACODE,XXADESC:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          RETURN
.
UPAXIS1   MOVE      ZERO,OVRCD
          UPDATE    AXISFIL1;XXCLAIM,XXCTYPE,XXACODE,XXADESC:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          RETURN
.
.***************************************************************************
RDRSRC1   MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      RSRCFIL1,KEY6;XXCLAIM,XXRFSRC:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          GOTO      OVERCOND IF OVER
          RETURN
.
RSRSRC1   RESET     KEY6
          READ      RSRCFIL1,KEY6;;
          RETURN
.
RKRSRC1   MOVE      ZERO,OVRCD
          READKS    RSRCFIL1;XXCLAIM,XXRFSRC:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          GOTO      OVERCOND IF OVER
          RETURN
.
WRRSRC1   RESET     KEY6
          WRITE     RSRCFIL1,KEY6;XXCLAIM,XXRFSRC:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          RETURN
.
UPRSRC1   MOVE      ZERO,OVRCD
          UPDATE    RSRCFIL1;XXCLAIM,XXRFSRC:
                             XXPRE01,XXPRE02,XXPRE03,XXPRE04,XXPRE05,XXPRE06:
                             XXPRE07,XXPRE08,XXPRE09,XXPRE10,XXPRE11,XXPRE12
          RETURN
.
.***************************************************************************
.
          INC       STD001IO
          INC       NHOSPDAY
          INC       PATAGED
          INC       PATCOMN3
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PATCODIO/INC            * Codes file
          INC       PATMA1IO/INC            * Master file
          INC       PATMI1IO/INC            * Admission file
          INC       PATDSCIO/INC            * Discharge file
          INC       MEHHONIO/INC            * MH HONOS
          INC       MEHDIAIO/INC            * MH Diagnosis file
          INC       ALLREFIO/INC            * Referral file
          INC       PMSVX1IO/INC            * Visit extension file
          INC       PATDRGIO/INC            * Date range file
          INC       PATTRNIO/INC            * Transfer file
          INC       WEBERRIO/INC                 * Web Server Error Logging
+
.

