.******************************************************************************
.* System        :  Patient Management                                        *
.* Program       :  IBAPMS36.PBL                                              *
.* Desc          :  Suggested Classification Master Listing                   *
.******************************************************************************
.* Date          :  19/09/1990                                                *
.* Author        :  Justin Coates                                             *
.* Function      :  Master Listing program for  Suggested Classifications     *
.*                  Exceptions File (patsgcaf / PATSGCFD)                     *
.* Modifications :                                                            *
.*        V11.00.01 11/03/2020  J.Tan          TSK 0838262                    *
.*                  Added Effective from and to date to MBS Item file         *
.*        V9.07.01  20/09/06 J.Tan    CAR 119336                              *
.*                  Added claim code to Suggested classification file         *
.*        V9.02.01  24/03/2003  Dean Cramer    CAR 36519                      *
.*                  Ported from 6.10 and altered for 9.02                     *
.*        V6.06.01  11/02/1999  Jill Habasque                                 *
.*                  Fixed DISPHEAD display                                    *
.*        V6.00     07/03/91 ROD                                              *
.*                  Release 6. Health fund table now 8 chars.                 *
.*        V6.00.01  19/02/1992    Justin Coates                               *
.*                  Fix read on health fund file (table = [0000    ])         *
.******************************************************************************
.
.$$$$$
.         IBAPMS36.PBL        Suggested Classification Master Listing
.         ============        =======================================
.         MENU0000 - determine if to produce master listing
.
.         KVAL0000 - enter the parameters
.             A. Get the starting Claim code      (STRTCLMN)
.             B. Get the ending Claim code        (STOPCLMN)
.             A. Get the starting Health Fund.    (STRTFUND)
.             B. Get the ending Health Fund.      (STOPFUND)
.             C. Get the starting MBS code.       (STRTITEM)
.             D. Get the ending MBS code.         (STOPITEM)
.
.         REPT0000 - produce the report
.             For each MBS code relating to each Health Fund code in the entered
.             ranges, print the MBS code and description and the suggested
.             classification code and description
.    
.$$$$$
.
. ------- FD includes needed -------
.
          INC       STD001FD                * common variables
          INC       PATCONFD/INC            * control file 
          INC       PATCODFD/INC            * codes file
          INC       PATFN1FD/INC            * health fund file
          INC       PATITMFD/INC            * MBS items file
          INC       PATSGCFD/INC            * sugg. class. exceptions file
.
. ------- program variables -------
.
CNTITEMS  FORM      5         * number of MBS items for each health fund
CODE      DIM       2         * category for patdscod
CODECLSS  DIM       3         * classification code entered
CODECLMN  DIM       3         * claim code entered
CODEFUND  DIM       6         * health fund code entered
CODEITEM  DIM       9         * MBS item code entered
KVALCLSS  DIM       3         * the class'n code to display
KVALITEM  DIM       9         * the item code currently copying for
.
DESCCLSS  DIM       20        * classification desc to display
DESCCLMN  DIM       30        * claim desc entered
DESCFUND  DIM       30        * health fund desc entered
DESCITEM  DIM       40        * MBS item desc entered
.
DESCFCLM  DIM       30        * from claim description for copy option
DESCTCLM  DIM       30        * to   claim description for copy option
DESCFFND  DIM       30        * from fund description for copy option
DESCTFND  DIM       30        * to   fund description for copy option
DESCFITE  DIM       30        * from item description for copy option
DESCTITE  DIM       30        * to   item description for copy option
.
DIM1A     DIM       1         * for MBS ? mark routine
DIM20     DIM       20        * for MBS ? mark routine
.
.
PREVCLMN  DIM       3         * previous claim for report
PREVFUND  DIM       9         * previous fund for report
QUPER     FORM      1         * flag for ? option
.
STOPCLMN  DIM       3         * ending claim for report
STOPFUND  DIM       6         * ending fund for report
STOPITEM  DIM       9         * ending item for report
STRTCLMN  DIM       3         * starting claim for report
STRTFUND  DIM       6         * starting fund for report
STRTITEM  DIM       9         * starting item for report
.
. ------- program constants -------
.
CATA      INIT      "A "      * classification category
FINISH    INIT      "Finish   "
START     INIT      "Start    "
ZERO8     INIT      "0000    "    * for health fund file
.
PRGID     INIT      "IBAPMS36"
PRGNAM    INIT      "SUGGESTED CLASSIFICATION MASTER LISTING"
VERSION   INIT      "V12.00.00"
+
.*********************************************************************
.*                  ML0000                                           *
.*        Mainline Code  /  Controlling Logic                        *
.*********************************************************************
.
ML0000    CALL      INIT0000                * initialization and open files
.
ML0100    CALL      CLRV0000                * clear input variables
          CALL      MENU0000                * select options
          BRANCH    EXIT,ML9999             * exit chosen
.
. ------- produce report -------
.
ML1000    CALL      KVAL0000                * input the fields
          BRANCH    EXIT,ML9999             * exit selected
          CALL      REPT0000                * produce the report
.
ML9999    CHAIN     PGM                     * chain back to program
+
.*********************************************************************
.*                  INIT0000                    Called by : ML0000   *
.*        Initialization and open files                              *
.*********************************************************************
.
INIT0000  CALL      DISPHEAD                * display heading
          DISPLAY   *P50:24,"Opening ",*EL;
.
          DISPLAY   *P58:24,"patsgcaf"
          OPEN      PATSGCA1,"patsgcaf"     * sugg. class. exceptions file
.
          DISPLAY   *P58:24,"patfn1af"
          OPEN      PATFN1A1,"patfn1af"     * health fund file
.
          DISPLAY   *P58:24,"patitemn"
          OPEN      PATITEM1,"patitemn"     * MBS item file
.
          DISPLAY   *P58:24,"patcodes"
          OPEN      PATCODE1,"patcodes"     * codes file
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TEN9;*212,CFEETYP
.
          DISPLAY   *P1:24,*EL
          MOVE      ONE,CNEWDS              * new ? option
.
INIT9999  RETURN
+
.*********************************************************************
.*                  CLRV0000                    Called by : ML0000   *
.*        Clear input variables                                      *
.*********************************************************************
.
CLRV0000  UNPACK    SP30,CODEFUND,CODEITEM,CODECLMN
          MOVE      SP20,PTSGSPAR
          MOVE      SP20,DESCCLSS
          PACK      DESCITEM,SP20,SP20
          PACK      DESCCLMN,SP20,SP10
          PACK      DESCFUND,SP20,SP10
          UNPACK    SP70,STRTCLMN,STRTFUND,STOPCLMN,STOPFUND  * claim&fund codes
          UNPACK    SP20,STRTITEM,STOPITEM  * item codes
          MOVE      SP30,DESCFCLM           * from claim desc
          MOVE      SP30,DESCTCLM           * to   claim desc
          MOVE      SP30,DESCFFND           * from fund desc
          MOVE      SP30,DESCTFND           * to   fund desc
          PACK      DESCFITE,SP20,SP20      * from item desc
          PACK      DESCTITE,SP20,SP20      * to   item desc
.
CLRV9999  RETURN
+
.*********************************************************************
.*                  MENU0000                    Called by : ML0100   *
.*        Display the options to the user                            *
.*        Returns : EXIT = 1      exit    selected                   *
.*********************************************************************
.
MENU0000  CALL      DISPHEAD
          DISPLAY   *P1:3,*EF:
                    *V2LON,*P1:4,ZERO,*P1:5,ONE,*HOFF:
                    *P3:4,"= Exit":
                    *P3:5,"= Print Master Listing":
                    *P1:7,"Select Option : "
.
MENU1000  KEYIN     *P17:7,*DV,UNDLN1:
                    *P17:7,*V2LON,MOPTION:
                    *P17:7,*DV,MOPTION
.
          COMPARE   ZERO,MOPTION
          GOTO      MENU9000 IF EQUAL       * exit selected
.
          BRANCH    MOPTION,MENU8000
.
          BEEP
          GOTO      MENU1000
.
MENU8000  MOVE      FALSE,EXIT              * valid selection
          GOTO      MENU9999
.
MENU9000  MOVE      TRUE,EXIT               * exit selected
          MOVE      ZERO,MOPTION
.
MENU9999  RETURN
+
.*********************************************************************
.*                  KVAL0000                    Called by : ML1000   *
.*        Keyin the starting and finishing values for the            *
.*        Health fund codes and MBS items for the report             *
.*********************************************************************
.
KVAL0000  
          CALL      CLRV0000                * clear the variables
          CALL      DVAL0000                * display the screen
.
. -----------------------------------------
. ------- enter starting claim code ------
. -----------------------------------------
KVAL0100  MOVE      "9",EVERT               * row
          MOVE      "25",ECOL               * column
          MOVE      "CL",CODE
          CALL      PATCODKY
          BRANCH    EXIT,KVAL0200           * nothing entered
          MOVE      ACODE,CODECLMN
          MOVE      TDESC,DESCCLMN       * starting description
.
          DISPLAY   *P25:9,*V2LON,CODECLMN,*HOFF,*P35:9,DESCCLMN
          MOVE      CODECLMN,STRTCLMN       * starting code
          MOVE      DESCCLMN,DESCFCLM       * starting description
          GOTO      KVAL0400
.
KVAL0200  DISPLAY   *P25:9,*V2LON,START,*EL;
          PACK      STRTCLMN,SP70
.
. ---------------------------------------
. ------- enter ending Claim code------
. ---------------------------------------
.
KVAL0400  MOVE      TEN1,EVERT              * row
          MOVE      "25",ECOL               * column
          MOVE      "CL",CODE
          CALL      PATCODKY                * enter code
          BRANCH    EXIT,KVAL0600           * nothing entered
          MOVE      ACODE,CODECLMN
          MOVE      TDESC,DESCCLMN       * starting description
.
          MATCH     START,STRTCLMN
          GOTO      KVAL0500 IF EQUAL       * anycode is OK
.
          MATCH     STRTCLMN,CODECLMN
          GOTO      KVAL9000 IF LESS        * finish before end
.
KVAL0500  DISPLAY   *P25:11,*V2LON,CODECLMN,*HOFF,*P35:11,DESCCLMN
          MOVE      CODECLMN,STOPCLMN       * ending code
          MOVE      DESCCLMN,DESCTCLM       * ending description
          GOTO      KVAL1000
.
KVAL0600  DISPLAY   *P25:11,*V2LON,FINISH,*EL;
          MOVE      "zzz",STOPCLMN
.
. -----------------------------------------
. ------- enter starting health fund ------
. -----------------------------------------
.
KVAL1000  MOVE      "13",CVERT              * row
          MOVE      "25",CCOL               * column
          CALL      KFND0000                * enter code
          BRANCH    EXIT,KVAL1100           * nothing entered
.
          DISPLAY   *P25:13,*V2LON,CODEFUND,*HOFF,*P35:13,DESCFUND
          MOVE      CODEFUND,STRTFUND       * starting code
          MOVE      DESCFUND,DESCFFND       * starting description
          GOTO      KVAL2000
.
KVAL1100  DISPLAY   *P25:13,*V2LON,START,*EL;
          PACK      STRTFUND,START,SP9
.
. ---------------------------------------
. ------- enter ending health fund ------
. ---------------------------------------
.
KVAL2000  MOVE      TEN5,CVERT              * row
          MOVE      "25",CCOL               * column
          CALL      KFND0000                * enter code
          BRANCH    EXIT,KVAL2200           * nothing entered
.
          MATCH     START,STRTFUND
          GOTO      KVAL2100 IF EQUAL       * anycode is OK
.
          MATCH     STRTFUND,CODEFUND
          GOTO      KVAL9100 IF LESS        * finish before end
.
KVAL2100  DISPLAY   *P25:15,*V2LON,CODEFUND,*HOFF,*P35:15,DESCFUND 
          MOVE      CODEFUND,STOPFUND       * ending code
          MOVE      DESCFUND,DESCTFND       * ending description
          GOTO      KVAL3000
.
KVAL2200  DISPLAY   *P25:15,*V2LON,FINISH,*EL;
          PACK      STOPFUND,FINISH,SP9
.
. -------------------------------------------
. ------- enter the starting MBS code -------
. -------------------------------------------
.
KVAL3000  MOVE      TEN7,CVERT              * row
          MOVE      "25",CCOL               * col
          CALL      KITM0000                * enter code
          BRANCH    EXIT,KVAL3100           * nothing entered
.
          DISPLAY   *P25:17,*V2LON,CODEITEM,*HOFF,*P35:17,DESCITEM
          MOVE      CODEITEM,STRTITEM       * starting code
          MOVE      DESCITEM,DESCFITE       * starting description
          GOTO      KVAL4000
.
KVAL3100  DISPLAY   *P25:17,*V2LON,START,*EL
          PACK      STRTITEM,START,SP9
.
. -----------------------------------------
. ------- enter the ending MBS code -------
. -----------------------------------------
.
KVAL4000  MOVE      TEN9,CVERT              * row
          MOVE      "25",CCOL               * col
          CALL      KITM0000                * enter code
          BRANCH    EXIT,KVAL4200           * nothing entered
.
          MATCH     START,STRTITEM
          GOTO      KVAL4100 IF EQUAL       * anycode is OK
.
          MATCH     STRTITEM,CODEITEM
          GOTO      KVAL9200 IF LESS        * finish is before end
.
KVAL4100  DISPLAY   *P25:19,*V2LON,CODEITEM,*HOFF,*P35:19,DESCITEM
          MOVE      CODEITEM,STOPITEM       * ending code
          MOVE      DESCITEM,DESCTITE       * ending description
          GOTO      KVAL4500
.
KVAL4200  DISPLAY   *P25:19,*V2LON,FINISH,*EL
          PACK      STOPITEM,FINISH,SP9
.
. ------- continue question -------
.
KVAL4500  CALL      CONTQST                 * OK to continue
          BRANCH    CEXIT,KVAL4600,KVAL0000,KVAL9500
.                         Yes      No       Cancel
.
KVAL4600  MOVE      FALSE,EXIT
          GOTO      KVAL9999
.
. ------- ERROR : ending codes before starting codes -------
.
KVAL9000  DISPLAY   *P1:24,*B,"Finishing Claim code should be after ":
                    "Starting code.  ",*EL;
          CALL      HITENTER
          GOTO      KVAL2000
.
KVAL9100  DISPLAY   *P1:24,*B,"Finishing Health Fund code should be after ":
                    "Starting code.  ",*EL;
          CALL      HITENTER
          GOTO      KVAL2000
.
KVAL9200  DISPLAY   *P1:24,*B,"Finishing MBS code should be after Starting ":
                    "Code.  ",*EL;
          CALL      HITENTER
          GOTO      KVAL4000
.
KVAL9500  MOVE      TRUE,EXIT
.
KVAL9999  RETURN
+
.*********************************************************************
.*                  KFND0000                    Called by : INSR0000 *
.*        Enter the Health Fund Code                        CHGE0000 *
.*        Para's  : CCOL & CVERT  column and row for input  DELE0000 *
.*        Returns : CODEFUND      the code entered          KVAL0000 *
.*                  DESCFUND      the description                    *
.*********************************************************************
.
KFND0000  MOVE      ONE,QUPER               * set ? as not perfromed
          MOVE      CCOL,ECOL               * save the col
          ADD       TEN,ECOL                *   for description
          MOVE      CVERT,EVERT             * save the row
.
KFND1000  KEYIN     *PCCOL:CVERT,*DV,UNDLN6,*EL:
                    *PCCOL:CVERT,*V2LON,CODEFUND:
                    *PCCOL:CVERT,*DV,CODEFUND
.
          ENDSET    CODEFUND
          APPEND    SP6,CODEFUND
          RESET     CODEFUND
.
          MATCH     SP6,CODEFUND
          GOTO      KFND4000 IF EQUAL       * nothing entered -> exit
.
          MATCH     QUEST,CODEFUND
          GOTO      KFND2000 IF NOT EQUAL   * validate the code entered
.
. ------- ? entered -------
.
KFND1500
          CALL      PATDSFN1                * ? routine
          MOVE      "24",CVERT              * row
          MOVE      "30",CCOL               * column
          MOVE      ZERO,QUPER              * set ? as performed
          DISPLAY   *P1:24,"Enter the Health Fund Code : ",*EL
          GOTO      KFND1000
.
. ------- validate the code -------
.
KFND2000  PACK      KEY14,CODEFUND,ZERO8    * entered code as key
          CALL      RDFUND1                 * read health fund file
          BRANCH    OVRCD,KFND3000          * invalid code
.
          PACK      DESCFUND,HFNAME,SP30    * set up description
          GOTO      KFND8000
.
. ------- ERROR: invalid health fund code entered -------
.
KFND3000  DISPLAY   *P1:24,*B,"Invalid Health Fund Code.  ",*EL;
          CALL      HITENTER
.
          BRANCH    QUPER,KFND1000          * re-enter code
.
          DISPLAY   *P1:24,"Enter the Health Fund Code : ",*EL
          GOTO      KFND1000
.
. ------- nothing entered -------
.
KFND4000  MOVE      TRUE,EXIT
          MOVE      SP30,DESCFUND           * clear description
          GOTO      KFND8100
.
. ------- valid code entered -------
.
KFND8000  MOVE      FALSE,EXIT
.
KFND8100  BRANCH    QUPER,KFND8500          * dont re-display
.
          CALL      DVAL0000                * display copy screen
          GOTO      KFND9999
.
. ------- ? not entered so just display the description ------
.
KFND8500  DISPLAY   *PECOL:EVERT,DESCFUND         * display description
          GOTO      KFND9999
.
KFND9999  RETURN
+
.*********************************************************************
.*                  KITM0000                    Called by : INSR1000 *
.*        Enter the MBS item code                           CHGE1000 *
.*        Para's  : CCOL & CVERT  column and row for input  DELE0000 *
.*        Returns : CODEITEM      the item code             KVAL1000 *
.*                  DESCITEM      the item description               *
.*********************************************************************
.
KITM0000  MOVE      ONE,QUPER               * set ? as not perfromed
          MOVE      CCOL,ECOL               * save the col
          ADD       TEN,ECOL                *   for description
          MOVE      CVERT,EVERT             * save the row
          UNPACK    SP30,CODECLSS,DESCCLSS  * clear the variables
.
KITM1000  KEYIN     *PCCOL:CVERT,*DV,UNDLN9,*EL:
                    *PCCOL:CVERT,*V2LON,CODEITEM:
                    *PCCOL:CVERT,*DV,CODEITEM
.
          ENDSET    CODEITEM
          APPEND    SP9,CODEITEM
          RESET     CODEITEM
.
          MATCH     SP9,CODEITEM
          GOTO      KITM4000 IF EQUAL       * nothing entered -> exit
.
          MATCH     QUEST,CODEITEM
          GOTO      KITM2000 IF NOT EQUAL   * validate the code entered
.
. ------- ? entered -------
.
KITM1500  RESET     CODEITEM,2              * position on second char
          MOVE      CODEITEM,DIM1A          * get second char
          RESET     CODEITEM
.
          ENDSET    DIM1A
          APPEND    SP1,DIM1A
          RESET     DIM1A
.
          CALL      PATITMDS                * ? routine
          MOVE      "24",CVERT              * row
          MOVE      "27",CCOL               * column
          MOVE      ZERO,QUPER              * set ? as performed
          DISPLAY   *P1:24,"Enter the MBS Item Code : ",*EL
          GOTO      KITM1000
.
. ------- validate the code -------
.
KITM2000  PACK      KEY9,CODEITEM           * entered code as key
          PACK      KEY17,KEY9,SP70
          CALL      PATITMRD                * read MBS item file
          BRANCH    OVRCD,KITM3000          * invalid code
.
          PACK      DESCITEM,IDESC,SP20,SP20 * set up description
          GOTO      KITM8000
.
. ------- ERROR: invalid MBS item code entered -------
.
KITM3000  DISPLAY   *P1:24,*B,"Invalid MBS Item Code.  ",*EL;
          CALL      HITENTER
.
          BRANCH    QUPER,KITM1000          * re-enter code
.
          DISPLAY   *P1:24,"Enter the MBS Item Code : ",*EL
          GOTO      KITM1000
.
. ------- nothing entered ------
.
KITM4000  MOVE      TRUE,EXIT               * nothing entered
          MOVE      SP30,DESCITEM           * clear description
          GOTO      KITM8100
.
. ------- valid code entered -------
.
KITM8000  MOVE      FALSE,EXIT
.
. ------- check for screen redisplay -------
.
KITM8100  BRANCH    QUPER,KITM8500          * dont re-display
.
          CALL      DVAL0000                * redisplay copy screen
          GOTO      KITM9999
.
. ------- ? not entered so just display the description ------
.
KITM8500  DISPLAY   *PECOL:EVERT,DESCITEM         * display description
          GOTO      KITM9999
.
KITM9999  RETURN
+
.*********************************************************************
.*                  DVAL0000                    Called by : KVAL0000 *
.*        Display the screen for the copy option                     *
.*********************************************************************
.
DVAL0000  DISPLAY   *P1:3,*EF:
                    *V2LON,*P1:4,ZERO,*P1:5,ONE,*HOFF:
                    *P3:4,"= Exit":
                    *P3:5,"= Print Master Listing":
                    *P1:7,"Select Option : ",*V2LON,MOPTION,*HOFF:
                    *P1:9,"Starting Claim Code   : ",*V2LON,STRTCLMN,*HOFF:
                    *P35:9,DESCFCLM:
                    *P1:11,"Ending   Claim Code   : ",*V2LON,STOPCLMN,*HOFF:
                    *P35:11,DESCTCLM:
                    *P1:13,"Starting Health Fund  : ",*V2LON,STRTFUND,*HOFF:
                    *P35:13,DESCFFND:
                    *P1:15,"Ending   Health Fund  : ",*V2LON,STOPFUND,*HOFF:
                    *P35:15,DESCTFND:
                    *P1:17,"Starting MBS Item     : ",*V2LON,STRTITEM,*HOFF:
                    *P35:17,DESCFITE:
                    *P1:19,"Ending   MBS Item     : ",*V2LON,STOPITEM,*HOFF:
                    *P35:19,DESCTITE
DVAL9999  RETURN
+
.*********************************************************************
.*                  REPT0000                    Called by : ML1000   *
.*        Produce the master listing                                 *
.*********************************************************************
.
REPT0000  MOVE      ZERO,CPAGENO            * initialize page counter
          MOVE      ZERO,CLNO               * initialize line counter
          MOVE      SP9,PREVFUND            * clear previous fund
          MOVE      SP9,PREVCLMN            * clear previous claim
          MOVE      ZERO,CNTITEMS           * clear item count
          CALL      IBACLOCK                * get date and time
          MOVE      ONE,CNOUNDLN            * dont print underlines
          MOVE      SP20,CPHDROPT           * no subheading
          DISPLAY   *P50:24,"Fund : ...... Item : .........",*EL;
.
. ------- determine the starting position to read at -------
.
          MATCH     SP70,STRTCLMN
          GOTO      REPT0200 IF NOT EQUAL
.
. ------- KEY -> start at the beginning of the file -------
.
          PACK      KEY18,SP70              * key of blanks
          GOTO      REPT0500
.
REPT0200  MATCH     START,STRTFUND          * do we start at beginning ??
          GOTO      REPT0300 IF NOT EQUAL   * no
.
. ------- KEY -> start at a claim-------
.
          PACK      KEY18,STRTCLMN,SP70     * key of blank health fund
          GOTO      REPT0500
.
. ------- have a starting fund so see if a starting item ------
.
REPT0300  MATCH     START,STRTITEM          * do we have a starting item ??
          GOTO      REPT0400 IF NOT EQUAL   * yes
.
. ------- KEY -> start at a fund -------
.
          PACK      KEY18,STRTCLMN,STRTFUND,SP70     * key of fund and blanks
          GOTO      REPT0500 
.
. ------- KEY -> start at specific fund and item ------
.
REPT0400  PACK      KEY18,STRTCLMN,STRTFUND,STRTITEM,SP70 * key of fund and item
          CALL      RDPTSGC1                * exact read
          BRANCH    OVRCD,REPT9000          * end of report
          GOTO      REPT1050                * continue with checks
.
REPT0500  CALL      RSPTSGC1                * positional read
.
. ------------------------------------------
. ------- next read on patsgcaf file -------
. ------------------------------------------
.
REPT1000  CALL      RKPTSGC1                * next read
          BRANCH    OVRCD,REPT9000          * end of report
.
REPT1050  DISPLAY   *P57:24,*V2LON,PTSGFUND,*P71:24,PTSGMBS,*EL;
.
. ------- check to see if past the ending FUND -------
.
          MATCH     "zzz",STOPCLMN
          GOTO      REPT1080 IF EQUAL       * print to end of claim
.
          MATCH     PTSGCLMN,STOPCLMN
          GOTO      REPT9000 IF LESS        * at the end of limit
.
REPT1080  MATCH     FINISH,STOPFUND
          GOTO      REPT1100 IF EQUAL       * print to end of funds
.
          MATCH     PTSGFUND,STOPFUND
          GOTO      REPT1000 IF LESS        * at the end of limit
.
. ------- check to see if before the starting ITEM -------
.
REPT1100  MATCH     START,STRTITEM
          GOTO      REPT1200 IF EQUAL       * using items from the start
.
          MATCH     STRTITEM,PTSGMBS
          GOTO      REPT1000 IF LESS        * item read in is too early
.
. ------- check to see if after the ending ITEM -------
.
REPT1200  MATCH     FINISH,STOPITEM
          GOTO      REPT1300 IF EQUAL       * print to end of items for the fund
.
          MATCH     PTSGMBS,STOPITEM
          GOTO      REPT9000 IF LESS        * at the end of limit
.
. ------- check to see if a new claim type -------
.
REPT1300  MATCH     PREVCLMN,PTSGCLMN
          GOTO      REPT1320 IF EQUAL
.
          COMPARE   ZERO,CPAGENO
          GOTO      REPT1400 IF NOT EQUAL   * not at firt fund
          GOTO      REPT1350
.
. ------- check to see if a new fund type -------
.
REPT1320  MATCH     PREVFUND,PTSGFUND
          GOTO      REPT2000 IF EQUAL       * same fund type
.
. ------- have a new fund type so print summary details for previous fund ------
. ------- have to checkfor whether or not at very first fund, if we are   ------
. ------- then also have to print a new page heading and not the summary  ------
.
          COMPARE   ZERO,CPAGENO
          GOTO      REPT1400 IF NOT EQUAL   * not at firt fund
.
REPT1350  CALL      NEWP0000                * print a new page
          GOTO      REPT1500
.
. ------- print the summary for a change of health funds -------
.
REPT1400  PRINT     *1,"*---------------------------------------":
                       "---------------------------------------*":
                    *N,"Total Number of MBS items = ",CNTITEMS
          MOVE      ZERO,CNTITEMS           * clear the count variable
          ADD       TWO,CLNO                * increment line counter
.
          COMPARE   "50",CLNO
          GOTO      REPT1350 IF NOT LESS    * not enough room so print new page
.
          CALL      PTBH0000                * print a table heading
.
REPT1500  MOVE      PTSGFUND,PREVFUND       * set up previous fund
          MOVE      PTSGCLMN,PREVCLMN
.
REPT2000  COMPARE   "55",CLNO
          GOTO      REPT2200 IF LESS
.
          COMPARE   ZERO,CPAGENO
          GOTO      REPT2100 IF EQUAL
.
          PRINT     *1,"*---------------------------------------":
                       "---------------------------------------*"
.
REPT2100  CALL      NEWP0000                * need a new page
.
REPT2200  CALL      PLIN0000                * print the line
          GOTO      REPT1000                * read next record
.
. ------- end of report -------
.
REPT9000  PRINT     *1,"*---------------------------------------":
                       "---------------------------------------*":
                    *N,"Total Number of MBS items = ",CNTITEMS:
                    *N,*N,"***  END OF REPORT  ***"
.
REPT9999  RETURN
+
.*********************************************************************
.*                  NEWP0000                    Called by : REPT0000 *
.*        Print a new page for the report                            *
.*        Returns : CLNO = 13     the current line number            *
.*********************************************************************
.
NEWP0000  CALL      HEAD80
          MATCH     SP70,STRTCLMN
          IF        @EQUAL
            PRINT        *20,"Claim Code From  : Start";
          ELSE
            PRINT        *20,"Claim Code From  : ",STRTCLMN,*49,DESCFCLM;
          ENDIF
.
          MATCH     "zzz",STOPCLMN
          IF        @EQUAL
            PRINT     *N,*20,"Claim Code To    : Finish";
          ELSE
            PRINT     *N,*20,"Claim Code To    : ",STOPCLMN,*49,DESCTCLM;
          ENDIF
.
          PRINT     *N,*20,"Health Fund From : ",STRTFUND,*49,DESCFFND:
                    *N,*20,"Health Fund To   : ",STOPFUND,*49,DESCTFND:
                    *N,*20,"MBS Item From    : ",STRTITEM,*49,DESCFITE:
                    *N,*20,"MBS Item To      : ",STOPITEM,*49,DESCTITE
.                   
          CALL       PTBH0000               * print new table heading
.
          MOVE       TEN5,CLNO              * set the line number
.
NEWP9999  RETURN
+
.*********************************************************************
.*                  PTBH0000                    Called by : REPT0000 *
.*        Print a new table heading                                  *
.*********************************************************************
PTBH0000  PACK      KEY14,PTSGFUND,ZERO8    * read in code as key
          CALL      RDFUND1                 * read health fund file
.
          PACK      KEY5,ANSC,ANSL,PTSGCLMN
          CALL      RDCODE1
.
          PRINT     *N,"Claim Code  : ",PTSGCLMN,*26,TDESC:
                    *N,"Health Fund : ",PTSGFUND,*26,HFNAME:
                    *N,"*---------------------------------------":
                       "---------------------------------------*":
                    *N,"| MBS Item",*53,"| Suggested Classification |":
                    *N,"*---------------------------------------":
                       "---------------------------------------*"
.
          ADD       SIX,CLNO               * increment line counter
.
PTBH9999  RETURN
+
.*********************************************************************
.*                  PLIN0000                    Called by : REPT0000 *
.*        Print a single line of the report                          *
.*********************************************************************
PLIN0000
          PACK      KEY17,PTSGMBS,SP70
          CALL      PATITMRD                * get MBS description
          PACK      KEY5,CATA,PTSGCLSS
          CALL      RDCODE1                 * get class'n desc
.
          PRINT     *1,"| ",PTSGMBS,SP1,IDESC,*53,"| ",PTSGCLSS,SP1,TDESC:
                    *80,"|"
.
          ADD       ONE,CLNO                * increment line counter
          ADD       ONE,CNTITEMS            * increment item counter
.
PLIN9999  RETURN
+
.
. ------- I/O includes needed -------
.
          INC       STD001IO
          INC       PATCODIO/INC            * codes file
          INC       PATFN1IO/INC            * health fund file
          INC       PATITMIO/INC            * MBS items file
          INC       PATSGCIO/INC            * sugg. class. exceptions file
.
          INC       PATITMRD
          INC       PATCODKY                * Keyin for codes file
          INC       PATFNDDS                * ? for health fund codes
          INC       PATITMDS                * ? for MBS item codes
................................................................................
