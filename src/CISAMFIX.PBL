.***************************************************************************
.* System    :   GENERAL SYSTEM PROGRAM                                    *
.* Program   :   CISAMFIX                                                  *
.* Desc      :   Update controlf file sectors                              *
.***************************************************************************
.* Date      :   23/06/1997                                                *
.* Author    :   Steve Armstrong                                           *
.* Function  :   Alternative version to TEXTFIX to allow update of controlf*
.*               when controlf is defined as an SFILE.                     *
.* Mods      :                                                             *
.*                                                                         *
.*  V10.13.01  05/12/2018  Don Nguyen       TSK 0838558                    *
.*             Deleted temp file (WORKFILE) on program exit                *
.*   V9.06.01  31/05/2006  Steve Armstrong                                 *
.*             Mods to enable program to be run from the UNIX command      *
.*             line.                                                       *
.***************************************************************************
.*   V5.05.01  13/01/1998  Steve Armstrong                                 *
.*             Mods to delete tempfile in TMPW0000 & SETW0000              *
.***************************************************************************
.
          INC       STD002FD
.
.
TEXTFILE  SFILE     ASCII,FIXED=256
.
.         Temp files
.
WORKFILE  FILE      ASCII, FIXED=250
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
CH1       DIM       50
CH2       DIM       50
CH3       DIM       50
CH4       DIM       50
CH5       DIM       50
COUNTR    FORM      1
.
DIM50     DIM       50
DIM50A    DIM       50
DIM50B    DIM       50
DIM50C    DIM       50
DIM50D    DIM       50
DIM50E    DIM       50
.
IFILENAM  DIM       8
FNDFLAG   FORM      1        * found flag
.                               0 = record found
.                               1 = record not found
.
SECTNUMB  DIM       3
.
TWNAME    INIT      "cisamtmp"
.
.
PRGID     INIT      "CISAMFIX"
PRGNAM    INIT      "CISAM File Maintenance"
VERSION   INIT      "V12.00.00"
+
.****************************************************************************
.*                              ML0000                                      *
.*                      Controlling Logic (Mainline code)                   *
.****************************************************************************
.
ML0000    CALL      SETX0000               * set common variables
          CALL      INIT0000               * initialization and open files
.
ML0100    CALL      FNAM0000               * get filename
          BRANCH    EXIT,ML9000            * nothing entered
.
ML0500    CALL      GSEC0000               * get sector for update
          BRANCH    EXIT,ML0100            * exitchar entered
.
          CALL      PROC0000               * edit the sector data
          GOTO      ML0500                 * get next sector
.
ML9000    CALL      KTMP0000               * erase the temp file
.
ML9999    CHAIN     CCMENU                 * chain back to calling program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
INIT9999  RETURN
+
.****************************************************************************
.*                                FNAM0000             Called by: ML0000    *
.*                    Get the SFILE name & open the file                    *
.* Returns : EXIT  0 = filename entered                                     *
.*                 1 = nothing entered                                      *
.****************************************************************************
.
FNAM0000  MOVE      SP8,IFILENAM
          KEYIN     *P1:3,*EF,*P1:4,"Filename      : ":
                    *P17:4,*V2LON,IFILENAM:
                    *P17:4,*DV,IFILENAM
.
          PACK      IFILENAM,IFILENAM,SP8
.
          MATCH     SP8,IFILENAM
          GOTO      FNAM9500 IF EQUAL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEXTFILE,IFILENAM
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"File does not exist.  ";
            CALL      HITENTER
            GOTO      FNAM0000
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      FNAM9999
.
FNAM9500  MOVE      ONE,EXIT
.
FNAM9999  RETURN
+
.****************************************************************************
.*                                GSEC0000             Called by: ML0000    *
.*                     Get the sector for update                            *
.****************************************************************************
.
GSEC0000  KEYIN     *P1:6,*EF,"Sector Number : ",*P30:6,"(\ to exit)":
                    *P17:6,*V2LON,*JR,SECTNUMB:
                    *P17:6,*DV,SECTNUMB
.
          TYPE      SECTNUMB                * number entered ?
          IF        !@EQUAL
            MATCH     "  \",SECTNUMB        * no - exitchar entered ?
            IF        @EQUAL
              GOTO      GSEC9500            * yes - finished
            ELSE
              BEEP
              GOTO      GSEC0000
            ENDIF
          ENDIF
.
.         A sector number has been entered
.
          MOVE      SECTNUMB,SECTOR         * save sector no. to form field
          MOVE      ZERO,EXIT               * ok to continue
          GOTO      GSEC9999
.
GSEC9500  MOVE      ONE,EXIT                * exit
.
GSEC9999  RETURN
+
.****************************************************************************
.*                               PROC0000              Called by: ML0000    *
.*               Load the data and allow user to modify it                  *
.****************************************************************************
.
PROC0000  PACK      CH1,SP30,SP20                * initialise variables
          PACK      CH2,SP30,SP20
          PACK      CH3,SP30,SP20
          PACK      CH4,SP30,SP20
          PACK      CH5,SP30,SP20
.
          MOVE      ZERO,FNDFLAG                 * set for update if found
          READ      TEXTFILE,SECTOR;*1,CH1,CH2,CH3,CH4,CH5
          CALL      OVERCOND IF OVER
          LOAD      FNDFLAG,OVRCD,ONE            * set for write
.
          DISPLAY   *P16:9,"|":
                    *P26:9,"|":
                    *P36:9,"|":
                    *P46:9,"|":
                    *P56:9,"|":
                    *P11:11,"  1":
                    *P11:12," 51":
                    *P11:13,"101":
                    *P11:14,"151":
                    *P11:15,"201"
.
          CALL      TMPW0000                * create work file
.
          CALL      CPYS0000                * write current sector data to 
.                                             the work file
          CALL      WPRC0000                * load work file data into wp
          BRANCH    EXIT,PROC9999           * abort selected from wp
.
          CALL      POSTQST                 * save data ?
          BRANCH    CEXIT,PROC5000:         * yes
                          PROC9999:         * no
                          PROC9999          * cancel
.
PROC5000  CALL      TRCM0000                * write work file data back to 
.                                             storage file
.
.
PROC9999  RETURN
+
.********************************************************************
.*                  TMPW0000                   Called by : PROC0000 *
.*        Set up the temporary file to hold existing data           *
.********************************************************************
.
TMPW0000  PREP      WORKFILE,TWNAME         * create/open the temp file
          CLOSE     WORKFILE,DELETE         * delete in case already exists
          PREP      WORKFILE,TWNAME         * create the temp file
.
TMPW9999  RETURN
+
.****************************************************************************
.*                             CPYS0000               Called by: PROC0000   *
.*              Load original data into working file                        *
.****************************************************************************
.
CPYS0000  WRITE     WORKFILE,SEQ;CH1
          WRITE     WORKFILE,SEQ;CH2
          WRITE     WORKFILE,SEQ;CH3
          WRITE     WORKFILE,SEQ;CH4
          WRITE     WORKFILE,SEQ;CH5
.
CPYS9999  RETURN
+
.********************************************************************
.*                  WPRC0000                   Called by : PROC0000 *
.*        Execute the word processor                                *
.********************************************************************
.
WPRC0000  CLOSE     WORKFILE
          MOVE      ZERO,FORM2
          WORD      TWNAME,5,15,10,66,16,FORM2
          MOVE      ZERO,EXIT
          IF        FORM2 = ZERO
            MOVE      ONE,EXIT
          ENDIF
.
WPRC9999  RETURN
+
.********************************************************************
.*                  TRCM0000                   Called by : PROC0000 *
.*        Post the data from the work file to storage file          *
.********************************************************************
.
TRCM0000  MOVE      ZERO,OVRCD              * Assume work file will exist
          TRAP      OVERCOND IF IO          * Trap just in case it doesn't
          OPEN      WORKFILE,TWNAME         * Open the data work file
          TRAPCLR   IO                      * Clear the IO trap
          BRANCH    OVRCD,TRCM9999          * No file -> no data to post
.
          MOVE      ZERO,COUNTR             * initialise counter
.
.         Loop over work file and post to the storage file
.
TRCM2000  READ      WORKFILE,SEQ;DIM50      * read the work file
          GOTO      TRCM9000 IF OVER        * Finished loop on work file
          PACK      DIM50,DIM50,SP30,SP20
.
          ADD       ONE,COUNTR              * increment counter
          STORE     DIM50,COUNTR,DIM50A,DIM50B,DIM50C,DIM50D,DIM50E
.
          COMPARE   FIVE,COUNTR             * last field loaded ?
          GOTO      TRCM2000 IF LESS        * no - get next record
.
.         All the variables have been loaded, so write them away to the file
.
TRCM9000  IF        FNDFLAG = 1
            WRITE     TEXTFILE,SECTOR;DIM50A,DIM50B,DIM50C,DIM50C,DIM50D,DIM50E
          ELSE
            WRITAB    TEXTFILE,SECTOR;*1,DIM50A,DIM50B,DIM50C,DIM50D,DIM50E
          ENDIF
.
TRCM9999  RETURN
+
.**************************************************************************
.*                              KTMP0000              Called by: ML0000   *
.*                         erase temp file                                *
.**************************************************************************
.
KTMP0000  PREP      WORKFILE,TWNAME
          CLOSE     WORKFILE,DELETE         * Close and delete the temp file
.
KTMP9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD002IO
